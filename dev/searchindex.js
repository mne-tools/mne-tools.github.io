Search.setIndex({"docnames": ["auto_examples/connectivity/index", "auto_examples/datasets/brainstorm_data", "auto_examples/datasets/hf_sef_data", "auto_examples/datasets/index", "auto_examples/datasets/limo_data", "auto_examples/datasets/opm_data", "auto_examples/datasets/sg_execution_times", "auto_examples/datasets/spm_faces_dataset_sgskip", "auto_examples/decoding/decoding_csp_eeg", "auto_examples/decoding/decoding_csp_timefreq", "auto_examples/decoding/decoding_rsa_sgskip", "auto_examples/decoding/decoding_spatio_temporal_source", "auto_examples/decoding/decoding_spoc_CMC", "auto_examples/decoding/decoding_time_generalization_conditions", "auto_examples/decoding/decoding_unsupervised_spatial_filter", "auto_examples/decoding/decoding_xdawn_eeg", "auto_examples/decoding/ems_filtering", "auto_examples/decoding/index", "auto_examples/decoding/linear_model_patterns", "auto_examples/decoding/receptive_field_mtrf", "auto_examples/decoding/sg_execution_times", "auto_examples/decoding/ssd_spatial_filters", "auto_examples/forward/forward_sensitivity_maps", "auto_examples/forward/index", "auto_examples/forward/left_cerebellum_volume_source", "auto_examples/forward/sg_execution_times", "auto_examples/forward/source_space_morphing", "auto_examples/index", "auto_examples/inverse/compute_mne_inverse_epochs_in_label", "auto_examples/inverse/compute_mne_inverse_raw_in_label", "auto_examples/inverse/compute_mne_inverse_volume", "auto_examples/inverse/custom_inverse_solver", "auto_examples/inverse/dics_epochs", "auto_examples/inverse/dics_source_power", "auto_examples/inverse/evoked_ers_source_power", "auto_examples/inverse/gamma_map_inverse", "auto_examples/inverse/index", "auto_examples/inverse/label_activation_from_stc", "auto_examples/inverse/label_from_stc", "auto_examples/inverse/label_source_activations", "auto_examples/inverse/mixed_norm_inverse", "auto_examples/inverse/mixed_source_space_inverse", "auto_examples/inverse/mne_cov_power", "auto_examples/inverse/morph_surface_stc", "auto_examples/inverse/morph_volume_stc", "auto_examples/inverse/multi_dipole_model", "auto_examples/inverse/multidict_reweighted_tfmxne", "auto_examples/inverse/psf_ctf_label_leakage", "auto_examples/inverse/psf_ctf_vertices", "auto_examples/inverse/psf_ctf_vertices_lcmv", "auto_examples/inverse/psf_volume", "auto_examples/inverse/rap_music", "auto_examples/inverse/read_inverse", "auto_examples/inverse/read_stc", "auto_examples/inverse/resolution_metrics", "auto_examples/inverse/resolution_metrics_eegmeg", "auto_examples/inverse/sg_execution_times", "auto_examples/inverse/snr_estimate", "auto_examples/inverse/source_space_snr", "auto_examples/inverse/time_frequency_mixed_norm_inverse", "auto_examples/inverse/vector_mne_solution", "auto_examples/io/elekta_epochs", "auto_examples/io/index", "auto_examples/io/read_neo_format", "auto_examples/io/read_noise_covariance_matrix", "auto_examples/io/read_xdf", "auto_examples/io/sg_execution_times", "auto_examples/preprocessing/css", "auto_examples/preprocessing/define_target_events", "auto_examples/preprocessing/eeg_bridging", "auto_examples/preprocessing/eeg_csd", "auto_examples/preprocessing/eog_artifact_histogram", "auto_examples/preprocessing/eog_regression", "auto_examples/preprocessing/find_ref_artifacts", "auto_examples/preprocessing/fnirs_artifact_removal", "auto_examples/preprocessing/ica_comparison", "auto_examples/preprocessing/index", "auto_examples/preprocessing/interpolate_bad_channels", "auto_examples/preprocessing/movement_compensation", "auto_examples/preprocessing/movement_detection", "auto_examples/preprocessing/muscle_detection", "auto_examples/preprocessing/muscle_ica", "auto_examples/preprocessing/otp", "auto_examples/preprocessing/sg_execution_times", "auto_examples/preprocessing/shift_evoked", "auto_examples/preprocessing/virtual_evoked", "auto_examples/preprocessing/xdawn_denoising", "auto_examples/simulation/index", "auto_examples/simulation/plot_stc_metrics", "auto_examples/simulation/sg_execution_times", "auto_examples/simulation/simulate_evoked_data", "auto_examples/simulation/simulate_raw_data", "auto_examples/simulation/simulated_raw_data_using_subject_anatomy", "auto_examples/simulation/source_simulator", "auto_examples/stats/cluster_stats_evoked", "auto_examples/stats/fdr_stats_evoked", "auto_examples/stats/index", "auto_examples/stats/linear_regression_raw", "auto_examples/stats/sensor_permutation_test", "auto_examples/stats/sensor_regression", "auto_examples/stats/sg_execution_times", "auto_examples/time_frequency/compute_csd", "auto_examples/time_frequency/compute_source_psd_epochs", "auto_examples/time_frequency/index", "auto_examples/time_frequency/sg_execution_times", "auto_examples/time_frequency/source_label_time_frequency", "auto_examples/time_frequency/source_power_spectrum", "auto_examples/time_frequency/source_power_spectrum_opm", "auto_examples/time_frequency/source_space_time_frequency", "auto_examples/time_frequency/temporal_whitening", "auto_examples/time_frequency/time_frequency_erds", "auto_examples/time_frequency/time_frequency_global_field_power", "auto_examples/time_frequency/time_frequency_simulated", "auto_examples/visualization/3d_to_2d", "auto_examples/visualization/brain", "auto_examples/visualization/channel_epochs_image", "auto_examples/visualization/eeg_on_scalp", "auto_examples/visualization/evoked_arrowmap", "auto_examples/visualization/evoked_topomap", "auto_examples/visualization/evoked_whitening", "auto_examples/visualization/index", "auto_examples/visualization/meg_sensors", "auto_examples/visualization/mne_helmet", "auto_examples/visualization/montage_sgskip", "auto_examples/visualization/parcellation", "auto_examples/visualization/publication_figure", "auto_examples/visualization/roi_erpimage_by_rt", "auto_examples/visualization/sensor_noise_level", "auto_examples/visualization/sg_execution_times", "auto_examples/visualization/ssp_projs_sensitivity_map", "auto_examples/visualization/topo_compare_conditions", "auto_examples/visualization/topo_customized", "auto_examples/visualization/xhemi", "auto_tutorials/clinical/10_ieeg_localize", "auto_tutorials/clinical/20_seeg", "auto_tutorials/clinical/30_ecog", "auto_tutorials/clinical/60_sleep", "auto_tutorials/clinical/index", "auto_tutorials/clinical/sg_execution_times", "auto_tutorials/epochs/10_epochs_overview", "auto_tutorials/epochs/15_baseline_regression", "auto_tutorials/epochs/20_visualize_epochs", "auto_tutorials/epochs/30_epochs_metadata", "auto_tutorials/epochs/40_autogenerate_metadata", "auto_tutorials/epochs/50_epochs_to_data_frame", "auto_tutorials/epochs/60_make_fixed_length_epochs", "auto_tutorials/epochs/index", "auto_tutorials/epochs/sg_execution_times", "auto_tutorials/evoked/10_evoked_overview", "auto_tutorials/evoked/20_visualize_evoked", "auto_tutorials/evoked/30_eeg_erp", "auto_tutorials/evoked/40_whitened", "auto_tutorials/evoked/index", "auto_tutorials/evoked/sg_execution_times", "auto_tutorials/forward/10_background_freesurfer", "auto_tutorials/forward/20_source_alignment", "auto_tutorials/forward/25_automated_coreg", "auto_tutorials/forward/30_forward", "auto_tutorials/forward/35_eeg_no_mri", "auto_tutorials/forward/50_background_freesurfer_mne", "auto_tutorials/forward/80_fix_bem_in_blender", "auto_tutorials/forward/90_compute_covariance", "auto_tutorials/forward/index", "auto_tutorials/forward/sg_execution_times", "auto_tutorials/index", "auto_tutorials/intro/10_overview", "auto_tutorials/intro/15_inplace", "auto_tutorials/intro/20_events_from_raw", "auto_tutorials/intro/30_info", "auto_tutorials/intro/40_sensor_locations", "auto_tutorials/intro/50_configure_mne", "auto_tutorials/intro/70_report", "auto_tutorials/intro/index", "auto_tutorials/intro/sg_execution_times", "auto_tutorials/inverse/10_stc_class", "auto_tutorials/inverse/20_dipole_fit", "auto_tutorials/inverse/30_mne_dspm_loreta", "auto_tutorials/inverse/35_dipole_orientations", "auto_tutorials/inverse/40_mne_fixed_free", "auto_tutorials/inverse/50_beamformer_lcmv", "auto_tutorials/inverse/60_visualize_stc", "auto_tutorials/inverse/70_eeg_mri_coords", "auto_tutorials/inverse/80_brainstorm_phantom_elekta", "auto_tutorials/inverse/85_brainstorm_phantom_ctf", "auto_tutorials/inverse/90_phantom_4DBTi", "auto_tutorials/inverse/index", "auto_tutorials/inverse/sg_execution_times", "auto_tutorials/io/10_reading_meg_data", "auto_tutorials/io/20_reading_eeg_data", "auto_tutorials/io/30_reading_fnirs_data", "auto_tutorials/io/60_ctf_bst_auditory", "auto_tutorials/io/index", "auto_tutorials/io/sg_execution_times", "auto_tutorials/machine-learning/30_strf", "auto_tutorials/machine-learning/50_decoding", "auto_tutorials/machine-learning/index", "auto_tutorials/machine-learning/sg_execution_times", "auto_tutorials/preprocessing/10_preprocessing_overview", "auto_tutorials/preprocessing/15_handling_bad_channels", "auto_tutorials/preprocessing/20_rejecting_bad_data", "auto_tutorials/preprocessing/25_background_filtering", "auto_tutorials/preprocessing/30_filtering_resampling", "auto_tutorials/preprocessing/35_artifact_correction_regression", "auto_tutorials/preprocessing/40_artifact_correction_ica", "auto_tutorials/preprocessing/45_projectors_background", "auto_tutorials/preprocessing/50_artifact_correction_ssp", "auto_tutorials/preprocessing/55_setting_eeg_reference", "auto_tutorials/preprocessing/59_head_positions", "auto_tutorials/preprocessing/60_maxwell_filtering_sss", "auto_tutorials/preprocessing/70_fnirs_processing", "auto_tutorials/preprocessing/80_opm_processing", "auto_tutorials/preprocessing/index", "auto_tutorials/preprocessing/sg_execution_times", "auto_tutorials/raw/10_raw_overview", "auto_tutorials/raw/20_event_arrays", "auto_tutorials/raw/30_annotate_raw", "auto_tutorials/raw/40_visualize_raw", "auto_tutorials/raw/index", "auto_tutorials/raw/sg_execution_times", "auto_tutorials/simulation/10_array_objs", "auto_tutorials/simulation/70_point_spread", "auto_tutorials/simulation/80_dics", "auto_tutorials/simulation/index", "auto_tutorials/simulation/sg_execution_times", "auto_tutorials/stats-sensor-space/10_background_stats", "auto_tutorials/stats-sensor-space/20_erp_stats", "auto_tutorials/stats-sensor-space/40_cluster_1samp_time_freq", "auto_tutorials/stats-sensor-space/50_cluster_between_time_freq", "auto_tutorials/stats-sensor-space/70_cluster_rmANOVA_time_freq", "auto_tutorials/stats-sensor-space/75_cluster_ftest_spatiotemporal", "auto_tutorials/stats-sensor-space/index", "auto_tutorials/stats-sensor-space/sg_execution_times", "auto_tutorials/stats-source-space/20_cluster_1samp_spatiotemporal", "auto_tutorials/stats-source-space/30_cluster_ftest_spatiotemporal", "auto_tutorials/stats-source-space/60_cluster_rmANOVA_spatiotemporal", "auto_tutorials/stats-source-space/index", "auto_tutorials/stats-source-space/sg_execution_times", "auto_tutorials/time-freq/10_spectrum_class", "auto_tutorials/time-freq/20_sensors_time_frequency", "auto_tutorials/time-freq/50_ssvep", "auto_tutorials/time-freq/index", "auto_tutorials/time-freq/sg_execution_times", "bibliography", "cited", "connectivity", "covariance", "creating_from_arrays", "datasets", "decoding", "events", "export", "file_io", "forward", "funding", "generated/commands", "generated/mne.AcqParserFIF", "generated/mne.Annotations", "generated/mne.BaseEpochs", "generated/mne.BiHemiLabel", "generated/mne.Covariance", "generated/mne.Dipole", "generated/mne.DipoleFixed", "generated/mne.Epochs", "generated/mne.EpochsArray", "generated/mne.Evoked", "generated/mne.EvokedArray", "generated/mne.Forward", "generated/mne.Info", "generated/mne.Label", "generated/mne.MixedSourceEstimate", "generated/mne.MixedVectorSourceEstimate", "generated/mne.Projection", "generated/mne.Report", "generated/mne.SourceEstimate", "generated/mne.SourceMorph", "generated/mne.SourceSpaces", "generated/mne.VectorSourceEstimate", "generated/mne.VolSourceEstimate", "generated/mne.VolVectorSourceEstimate", "generated/mne.add_reference_channels", "generated/mne.add_source_space_distances", "generated/mne.annotations_from_events", "generated/mne.apply_forward", "generated/mne.apply_forward_raw", "generated/mne.average_forward_solutions", "generated/mne.baseline.rescale", "generated/mne.beamformer.Beamformer", "generated/mne.beamformer.apply_dics", "generated/mne.beamformer.apply_dics_csd", "generated/mne.beamformer.apply_dics_epochs", "generated/mne.beamformer.apply_dics_tfr_epochs", "generated/mne.beamformer.apply_lcmv", "generated/mne.beamformer.apply_lcmv_cov", "generated/mne.beamformer.apply_lcmv_epochs", "generated/mne.beamformer.apply_lcmv_raw", "generated/mne.beamformer.make_dics", "generated/mne.beamformer.make_lcmv", "generated/mne.beamformer.make_lcmv_resolution_matrix", "generated/mne.beamformer.rap_music", "generated/mne.beamformer.read_beamformer", "generated/mne.bem.ConductorModel", "generated/mne.bem.convert_flash_mris", "generated/mne.bem.distance_to_bem", "generated/mne.bem.fit_sphere_to_headshape", "generated/mne.bem.get_fitting_dig", "generated/mne.bem.make_flash_bem", "generated/mne.bem.make_scalp_surfaces", "generated/mne.bem.make_watershed_bem", "generated/mne.channel_indices_by_type", "generated/mne.channel_type", "generated/mne.channels.DigMontage", "generated/mne.channels.Layout", "generated/mne.channels.combine_channels", "generated/mne.channels.compute_dev_head_t", "generated/mne.channels.compute_native_head_t", "generated/mne.channels.equalize_channels", "generated/mne.channels.find_ch_adjacency", "generated/mne.channels.find_layout", "generated/mne.channels.fix_mag_coil_types", "generated/mne.channels.generate_2d_layout", "generated/mne.channels.get_builtin_ch_adjacencies", "generated/mne.channels.get_builtin_montages", "generated/mne.channels.make_1020_channel_selections", "generated/mne.channels.make_dig_montage", "generated/mne.channels.make_eeg_layout", "generated/mne.channels.make_grid_layout", "generated/mne.channels.make_standard_montage", "generated/mne.channels.read_ch_adjacency", "generated/mne.channels.read_custom_montage", "generated/mne.channels.read_dig_captrak", "generated/mne.channels.read_dig_dat", "generated/mne.channels.read_dig_egi", "generated/mne.channels.read_dig_fif", "generated/mne.channels.read_dig_hpts", "generated/mne.channels.read_dig_localite", "generated/mne.channels.read_dig_polhemus_isotrak", "generated/mne.channels.read_layout", "generated/mne.channels.read_polhemus_fastscan", "generated/mne.channels.rename_channels", "generated/mne.chpi.compute_chpi_amplitudes", "generated/mne.chpi.compute_chpi_locs", "generated/mne.chpi.compute_chpi_snr", "generated/mne.chpi.compute_head_pos", "generated/mne.chpi.extract_chpi_locs_ctf", "generated/mne.chpi.extract_chpi_locs_kit", "generated/mne.chpi.filter_chpi", "generated/mne.chpi.get_active_chpi", "generated/mne.chpi.get_chpi_info", "generated/mne.chpi.head_pos_to_trans_rot_t", "generated/mne.chpi.read_head_pos", "generated/mne.chpi.write_head_pos", "generated/mne.combine_evoked", "generated/mne.compute_covariance", "generated/mne.compute_proj_epochs", "generated/mne.compute_proj_evoked", "generated/mne.compute_proj_raw", "generated/mne.compute_rank", "generated/mne.compute_raw_covariance", "generated/mne.compute_source_morph", "generated/mne.concatenate_epochs", "generated/mne.concatenate_events", "generated/mne.concatenate_raws", "generated/mne.convert_forward_solution", "generated/mne.coreg.Coregistration", "generated/mne.coreg.estimate_head_mri_t", "generated/mne.coreg.get_mni_fiducials", "generated/mne.count_events", "generated/mne.cov.compute_whitener", "generated/mne.cov.prepare_noise_cov", "generated/mne.cov.regularize", "generated/mne.create_default_subject", "generated/mne.create_info", "generated/mne.cuda.get_cuda_memory", "generated/mne.cuda.init_cuda", "generated/mne.cuda.set_cuda_device", "generated/mne.datasets.brainstorm.bst_auditory.data_path", "generated/mne.datasets.brainstorm.bst_raw.data_path", "generated/mne.datasets.brainstorm.bst_resting.data_path", "generated/mne.datasets.eegbci.load_data", "generated/mne.datasets.eegbci.standardize", "generated/mne.datasets.epilepsy_ecog.data_path", "generated/mne.datasets.erp_core.data_path", "generated/mne.datasets.fetch_aparc_sub_parcellation", "generated/mne.datasets.fetch_dataset", "generated/mne.datasets.fetch_fsaverage", "generated/mne.datasets.fetch_hcp_mmp_parcellation", "generated/mne.datasets.fetch_infant_template", "generated/mne.datasets.fetch_phantom", "generated/mne.datasets.fnirs_motor.data_path", "generated/mne.datasets.has_dataset", "generated/mne.datasets.hf_sef.data_path", "generated/mne.datasets.kiloword.data_path", "generated/mne.datasets.limo.load_data", "generated/mne.datasets.misc.data_path", "generated/mne.datasets.mtrf.data_path", "generated/mne.datasets.multimodal.data_path", "generated/mne.datasets.opm.data_path", "generated/mne.datasets.phantom_4dbti.data_path", "generated/mne.datasets.refmeg_noise.data_path", "generated/mne.datasets.sample.data_path", "generated/mne.datasets.sleep_physionet.age.fetch_data", "generated/mne.datasets.sleep_physionet.temazepam.fetch_data", "generated/mne.datasets.somato.data_path", "generated/mne.datasets.spm_face.data_path", "generated/mne.datasets.ssvep.data_path", "generated/mne.datasets.ucl_opm_auditory.data_path", "generated/mne.datasets.visual_92_categories.data_path", "generated/mne.decimate_surface", "generated/mne.decoding.CSP", "generated/mne.decoding.EMS", "generated/mne.decoding.FilterEstimator", "generated/mne.decoding.GeneralizingEstimator", "generated/mne.decoding.LinearModel", "generated/mne.decoding.PSDEstimator", "generated/mne.decoding.ReceptiveField", "generated/mne.decoding.SPoC", "generated/mne.decoding.SSD", "generated/mne.decoding.Scaler", "generated/mne.decoding.SlidingEstimator", "generated/mne.decoding.TemporalFilter", "generated/mne.decoding.TimeDelayingRidge", "generated/mne.decoding.TimeFrequency", "generated/mne.decoding.UnsupervisedSpatialFilter", "generated/mne.decoding.Vectorizer", "generated/mne.decoding.compute_ems", "generated/mne.decoding.cross_val_multiscore", "generated/mne.decoding.get_coef", "generated/mne.dig_mri_distances", "generated/mne.dipole.get_phantom_dipoles", "generated/mne.epochs.average_movements", "generated/mne.epochs.combine_event_ids", "generated/mne.epochs.equalize_epoch_counts", "generated/mne.epochs.make_metadata", "generated/mne.equalize_channels", "generated/mne.event.define_target_events", "generated/mne.event.match_event_names", "generated/mne.event.shift_time_events", "generated/mne.events_from_annotations", "generated/mne.export.export_epochs", "generated/mne.export.export_evokeds", "generated/mne.export.export_evokeds_mff", "generated/mne.export.export_raw", "generated/mne.extract_label_time_course", "generated/mne.filter.construct_iir_filter", "generated/mne.filter.create_filter", "generated/mne.filter.estimate_ringing_samples", "generated/mne.filter.filter_data", "generated/mne.filter.notch_filter", "generated/mne.filter.resample", "generated/mne.find_events", "generated/mne.find_stim_steps", "generated/mne.fit_dipole", "generated/mne.forward.compute_depth_prior", "generated/mne.forward.compute_orient_prior", "generated/mne.forward.restrict_forward_to_label", "generated/mne.forward.restrict_forward_to_stc", "generated/mne.get_config", "generated/mne.get_config_path", "generated/mne.get_head_surf", "generated/mne.get_meg_helmet_surf", "generated/mne.get_montage_volume_labels", "generated/mne.get_volume_labels_from_aseg", "generated/mne.get_volume_labels_from_src", "generated/mne.grade_to_tris", "generated/mne.grade_to_vertices", "generated/mne.grand_average", "generated/mne.grow_labels", "generated/mne.gui.coregistration", "generated/mne.gui.locate_ieeg", "generated/mne.head_to_mni", "generated/mne.head_to_mri", "generated/mne.inverse_sparse.gamma_map", "generated/mne.inverse_sparse.make_stc_from_dipoles", "generated/mne.inverse_sparse.mixed_norm", "generated/mne.inverse_sparse.tf_mixed_norm", "generated/mne.io.BaseRaw", "generated/mne.io.Raw", "generated/mne.io.RawArray", "generated/mne.io.anonymize_info", "generated/mne.io.kit.read_mrk", "generated/mne.io.read_fiducials", "generated/mne.io.read_info", "generated/mne.io.read_raw", "generated/mne.io.read_raw_artemis123", "generated/mne.io.read_raw_bdf", "generated/mne.io.read_raw_boxy", "generated/mne.io.read_raw_brainvision", "generated/mne.io.read_raw_bti", "generated/mne.io.read_raw_cnt", "generated/mne.io.read_raw_ctf", "generated/mne.io.read_raw_curry", "generated/mne.io.read_raw_edf", "generated/mne.io.read_raw_eeglab", "generated/mne.io.read_raw_egi", "generated/mne.io.read_raw_eximia", "generated/mne.io.read_raw_fieldtrip", "generated/mne.io.read_raw_fif", "generated/mne.io.read_raw_fil", "generated/mne.io.read_raw_gdf", "generated/mne.io.read_raw_hitachi", "generated/mne.io.read_raw_kit", "generated/mne.io.read_raw_nedf", "generated/mne.io.read_raw_nicolet", "generated/mne.io.read_raw_nihon", "generated/mne.io.read_raw_nirx", "generated/mne.io.read_raw_persyst", "generated/mne.io.read_raw_snirf", "generated/mne.io.show_fiff", "generated/mne.io.write_fiducials", "generated/mne.label.select_sources", "generated/mne.label_sign_flip", "generated/mne.labels_to_stc", "generated/mne.make_ad_hoc_cov", "generated/mne.make_bem_model", "generated/mne.make_bem_solution", "generated/mne.make_field_map", "generated/mne.make_fixed_length_epochs", "generated/mne.make_fixed_length_events", "generated/mne.make_forward_dipole", "generated/mne.make_forward_solution", "generated/mne.make_sphere_model", "generated/mne.merge_events", "generated/mne.minimum_norm.InverseOperator", "generated/mne.minimum_norm.apply_inverse", "generated/mne.minimum_norm.apply_inverse_cov", "generated/mne.minimum_norm.apply_inverse_epochs", "generated/mne.minimum_norm.apply_inverse_raw", "generated/mne.minimum_norm.apply_inverse_tfr_epochs", "generated/mne.minimum_norm.compute_rank_inverse", "generated/mne.minimum_norm.compute_source_psd", "generated/mne.minimum_norm.compute_source_psd_epochs", "generated/mne.minimum_norm.estimate_snr", "generated/mne.minimum_norm.get_cross_talk", "generated/mne.minimum_norm.get_point_spread", "generated/mne.minimum_norm.make_inverse_operator", "generated/mne.minimum_norm.make_inverse_resolution_matrix", "generated/mne.minimum_norm.prepare_inverse_operator", "generated/mne.minimum_norm.read_inverse_operator", "generated/mne.minimum_norm.resolution_metrics", "generated/mne.minimum_norm.source_band_induced_power", "generated/mne.minimum_norm.source_induced_power", "generated/mne.minimum_norm.write_inverse_operator", "generated/mne.morph_labels", "generated/mne.morph_source_spaces", "generated/mne.open_docs", "generated/mne.open_report", "generated/mne.parse_config", "generated/mne.pick_channels", "generated/mne.pick_channels_cov", "generated/mne.pick_channels_forward", "generated/mne.pick_channels_regexp", "generated/mne.pick_events", "generated/mne.pick_info", "generated/mne.pick_types", "generated/mne.pick_types_forward", "generated/mne.preprocessing.EOGRegression", "generated/mne.preprocessing.ICA", "generated/mne.preprocessing.Xdawn", "generated/mne.preprocessing.annotate_amplitude", "generated/mne.preprocessing.annotate_break", "generated/mne.preprocessing.annotate_movement", "generated/mne.preprocessing.annotate_muscle_zscore", "generated/mne.preprocessing.annotate_nan", "generated/mne.preprocessing.compute_average_dev_head_t", "generated/mne.preprocessing.compute_bridged_electrodes", "generated/mne.preprocessing.compute_current_source_density", "generated/mne.preprocessing.compute_fine_calibration", "generated/mne.preprocessing.compute_maxwell_basis", "generated/mne.preprocessing.compute_proj_ecg", "generated/mne.preprocessing.compute_proj_eog", "generated/mne.preprocessing.corrmap", "generated/mne.preprocessing.cortical_signal_suppression", "generated/mne.preprocessing.create_ecg_epochs", "generated/mne.preprocessing.create_eog_epochs", "generated/mne.preprocessing.equalize_bads", "generated/mne.preprocessing.find_bad_channels_maxwell", "generated/mne.preprocessing.find_ecg_events", "generated/mne.preprocessing.find_eog_events", "generated/mne.preprocessing.fix_stim_artifact", "generated/mne.preprocessing.ica_find_ecg_events", "generated/mne.preprocessing.ica_find_eog_events", "generated/mne.preprocessing.ieeg.project_sensors_onto_brain", "generated/mne.preprocessing.infomax", "generated/mne.preprocessing.interpolate_bridged_electrodes", "generated/mne.preprocessing.maxwell_filter", "generated/mne.preprocessing.maxwell_filter_prepare_emptyroom", "generated/mne.preprocessing.nirs.beer_lambert_law", "generated/mne.preprocessing.nirs.optical_density", "generated/mne.preprocessing.nirs.scalp_coupling_index", "generated/mne.preprocessing.nirs.short_channels", "generated/mne.preprocessing.nirs.source_detector_distances", "generated/mne.preprocessing.nirs.temporal_derivative_distribution_repair", "generated/mne.preprocessing.oversampled_temporal_projection", "generated/mne.preprocessing.peak_finder", "generated/mne.preprocessing.read_eog_regression", "generated/mne.preprocessing.read_fine_calibration", "generated/mne.preprocessing.read_ica", "generated/mne.preprocessing.read_ica_eeglab", "generated/mne.preprocessing.realign_raw", "generated/mne.preprocessing.regress_artifact", "generated/mne.preprocessing.write_fine_calibration", "generated/mne.random_parcellation", "generated/mne.read_annotations", "generated/mne.read_bem_solution", "generated/mne.read_bem_surfaces", "generated/mne.read_cov", "generated/mne.read_dipole", "generated/mne.read_epochs", "generated/mne.read_epochs_eeglab", "generated/mne.read_epochs_fieldtrip", "generated/mne.read_epochs_kit", "generated/mne.read_events", "generated/mne.read_evoked_besa", "generated/mne.read_evoked_fieldtrip", "generated/mne.read_evokeds", "generated/mne.read_evokeds_mff", "generated/mne.read_forward_solution", "generated/mne.read_freesurfer_lut", "generated/mne.read_label", "generated/mne.read_labels_from_annot", "generated/mne.read_lta", "generated/mne.read_morph_map", "generated/mne.read_proj", "generated/mne.read_reject_parameters", "generated/mne.read_source_estimate", "generated/mne.read_source_morph", "generated/mne.read_source_spaces", "generated/mne.read_surface", "generated/mne.read_talxfm", "generated/mne.read_trans", "generated/mne.read_tri", "generated/mne.read_vectorview_selection", "generated/mne.rename_channels", "generated/mne.scale_bem", "generated/mne.scale_labels", "generated/mne.scale_mri", "generated/mne.scale_source_space", "generated/mne.sensitivity_map", "generated/mne.set_bipolar_reference", "generated/mne.set_cache_dir", "generated/mne.set_config", "generated/mne.set_eeg_reference", "generated/mne.set_log_file", "generated/mne.set_log_level", "generated/mne.setup_source_space", "generated/mne.setup_volume_source_space", "generated/mne.simulation.SourceSimulator", "generated/mne.simulation.add_chpi", "generated/mne.simulation.add_ecg", "generated/mne.simulation.add_eog", "generated/mne.simulation.add_noise", "generated/mne.simulation.metrics.cosine_score", "generated/mne.simulation.metrics.f1_score", "generated/mne.simulation.metrics.peak_position_error", "generated/mne.simulation.metrics.precision_score", "generated/mne.simulation.metrics.recall_score", "generated/mne.simulation.metrics.region_localization_error", "generated/mne.simulation.metrics.roc_auc_score", "generated/mne.simulation.metrics.spatial_deviation_error", "generated/mne.simulation.select_source_in_label", "generated/mne.simulation.simulate_evoked", "generated/mne.simulation.simulate_raw", "generated/mne.simulation.simulate_sparse_stc", "generated/mne.simulation.simulate_stc", "generated/mne.source_space.compute_distance_to_sensors", "generated/mne.source_space.get_decimated_surfaces", "generated/mne.spatial_dist_adjacency", "generated/mne.spatial_inter_hemi_adjacency", "generated/mne.spatial_src_adjacency", "generated/mne.spatial_tris_adjacency", "generated/mne.spatio_temporal_dist_adjacency", "generated/mne.spatio_temporal_src_adjacency", "generated/mne.spatio_temporal_tris_adjacency", "generated/mne.split_label", "generated/mne.stats.bonferroni_correction", "generated/mne.stats.bootstrap_confidence_interval", "generated/mne.stats.combine_adjacency", "generated/mne.stats.f_mway_rm", "generated/mne.stats.f_oneway", "generated/mne.stats.f_threshold_mway_rm", "generated/mne.stats.fdr_correction", "generated/mne.stats.linear_regression", "generated/mne.stats.linear_regression_raw", "generated/mne.stats.permutation_cluster_1samp_test", "generated/mne.stats.permutation_cluster_test", "generated/mne.stats.permutation_t_test", "generated/mne.stats.spatio_temporal_cluster_1samp_test", "generated/mne.stats.spatio_temporal_cluster_test", "generated/mne.stats.summarize_clusters_stc", "generated/mne.stats.ttest_1samp_no_p", "generated/mne.stats.ttest_ind_no_p", "generated/mne.stc_near_sensors", "generated/mne.stc_to_label", "generated/mne.surface.complete_surface_info", "generated/mne.surface.read_curvature", "generated/mne.sys_info", "generated/mne.time_frequency.AverageTFR", "generated/mne.time_frequency.CrossSpectralDensity", "generated/mne.time_frequency.EpochsSpectrum", "generated/mne.time_frequency.EpochsTFR", "generated/mne.time_frequency.Spectrum", "generated/mne.time_frequency.csd_array_fourier", "generated/mne.time_frequency.csd_array_morlet", "generated/mne.time_frequency.csd_array_multitaper", "generated/mne.time_frequency.csd_fourier", "generated/mne.time_frequency.csd_morlet", "generated/mne.time_frequency.csd_multitaper", "generated/mne.time_frequency.csd_tfr", "generated/mne.time_frequency.dpss_windows", "generated/mne.time_frequency.fit_iir_model_raw", "generated/mne.time_frequency.fwhm", "generated/mne.time_frequency.istft", "generated/mne.time_frequency.morlet", "generated/mne.time_frequency.pick_channels_csd", "generated/mne.time_frequency.psd_array_multitaper", "generated/mne.time_frequency.psd_array_welch", "generated/mne.time_frequency.read_csd", "generated/mne.time_frequency.read_spectrum", "generated/mne.time_frequency.read_tfrs", "generated/mne.time_frequency.stft", "generated/mne.time_frequency.stftfreq", "generated/mne.time_frequency.tfr.cwt", "generated/mne.time_frequency.tfr.morlet", "generated/mne.time_frequency.tfr_array_morlet", "generated/mne.time_frequency.tfr_array_multitaper", "generated/mne.time_frequency.tfr_array_stockwell", "generated/mne.time_frequency.tfr_morlet", "generated/mne.time_frequency.tfr_multitaper", "generated/mne.time_frequency.tfr_stockwell", "generated/mne.time_frequency.write_tfrs", "generated/mne.transform_surface_to", "generated/mne.transforms.Transform", "generated/mne.transforms.apply_volume_registration", "generated/mne.transforms.compute_volume_registration", "generated/mne.transforms.quat_to_rot", "generated/mne.transforms.read_ras_mni_t", "generated/mne.transforms.rot_to_quat", "generated/mne.use_coil_def", "generated/mne.use_log_level", "generated/mne.utils.deprecated", "generated/mne.utils.warn", "generated/mne.verbose", "generated/mne.vertex_to_mni", "generated/mne.viz.Brain", "generated/mne.viz.ClickableImage", "generated/mne.viz.Figure3D", "generated/mne.viz.add_background_image", "generated/mne.viz.centers_to_edges", "generated/mne.viz.circular_layout", "generated/mne.viz.close_3d_figure", "generated/mne.viz.close_all_3d_figures", "generated/mne.viz.compare_fiff", "generated/mne.viz.create_3d_figure", "generated/mne.viz.get_3d_backend", "generated/mne.viz.get_brain_class", "generated/mne.viz.get_browser_backend", "generated/mne.viz.iter_topography", "generated/mne.viz.link_brains", "generated/mne.viz.mne_analyze_colormap", "generated/mne.viz.plot_alignment", "generated/mne.viz.plot_arrowmap", "generated/mne.viz.plot_bem", "generated/mne.viz.plot_brain_colorbar", "generated/mne.viz.plot_bridged_electrodes", "generated/mne.viz.plot_ch_adjacency", "generated/mne.viz.plot_channel_labels_circle", "generated/mne.viz.plot_chpi_snr", "generated/mne.viz.plot_compare_evokeds", "generated/mne.viz.plot_cov", "generated/mne.viz.plot_csd", "generated/mne.viz.plot_dipole_amplitudes", "generated/mne.viz.plot_dipole_locations", "generated/mne.viz.plot_drop_log", "generated/mne.viz.plot_epochs", "generated/mne.viz.plot_epochs_image", "generated/mne.viz.plot_epochs_psd_topomap", "generated/mne.viz.plot_events", "generated/mne.viz.plot_evoked", "generated/mne.viz.plot_evoked_field", "generated/mne.viz.plot_evoked_image", "generated/mne.viz.plot_evoked_joint", "generated/mne.viz.plot_evoked_topo", "generated/mne.viz.plot_evoked_topomap", "generated/mne.viz.plot_evoked_white", "generated/mne.viz.plot_filter", "generated/mne.viz.plot_head_positions", "generated/mne.viz.plot_ica_components", "generated/mne.viz.plot_ica_overlay", "generated/mne.viz.plot_ica_properties", "generated/mne.viz.plot_ica_scores", "generated/mne.viz.plot_ica_sources", "generated/mne.viz.plot_ideal_filter", "generated/mne.viz.plot_layout", "generated/mne.viz.plot_montage", "generated/mne.viz.plot_projs_joint", "generated/mne.viz.plot_projs_topomap", "generated/mne.viz.plot_raw", "generated/mne.viz.plot_raw_psd", "generated/mne.viz.plot_regression_weights", "generated/mne.viz.plot_sensors", "generated/mne.viz.plot_snr_estimate", "generated/mne.viz.plot_source_estimates", "generated/mne.viz.plot_sparse_source_estimates", "generated/mne.viz.plot_tfr_topomap", "generated/mne.viz.plot_topo_image_epochs", "generated/mne.viz.plot_topomap", "generated/mne.viz.plot_vector_source_estimates", "generated/mne.viz.plot_volume_source_estimates", "generated/mne.viz.set_3d_backend", "generated/mne.viz.set_3d_options", "generated/mne.viz.set_3d_title", "generated/mne.viz.set_3d_view", "generated/mne.viz.set_browser_backend", "generated/mne.viz.snapshot_brain_montage", "generated/mne.viz.use_3d_backend", "generated/mne.viz.use_browser_backend", "generated/mne.warp_montage_volume", "generated/mne.what", "generated/mne.write_bem_solution", "generated/mne.write_bem_surfaces", "generated/mne.write_cov", "generated/mne.write_events", "generated/mne.write_evokeds", "generated/mne.write_forward_solution", "generated/mne.write_head_bem", "generated/mne.write_label", "generated/mne.write_labels_to_annot", "generated/mne.write_proj", "generated/mne.write_source_spaces", "generated/mne.write_surface", "generated/mne.write_trans", "glossary", "index", "install/advanced", "install/check_installation", "install/contributing", "install/freesurfer", "install/index", "install/installers", "install/manual_install", "install/manual_install_python", "install/mne_c", "install/mne_tools_suite", "install/updating", "inverse", "logging", "martinos", "mne_cpp", "most_used_classes", "mri", "overview/cite", "overview/cookbook", "overview/datasets_index", "overview/design_philosophy", "overview/development", "overview/faq", "overview/get_help", "overview/governance", "overview/implementation", "overview/index", "overview/learn_python", "overview/matlab", "overview/migrating", "overview/people", "overview/roadmap", "preprocessing", "python_reference", "reading_raw_data", "realtime", "report", "sensor_space", "simulation", "source_space", "statistics", "time_frequency", "visualization", "whats_new"], "filenames": ["auto_examples/connectivity/index.rst", "auto_examples/datasets/brainstorm_data.rst", "auto_examples/datasets/hf_sef_data.rst", "auto_examples/datasets/index.rst", "auto_examples/datasets/limo_data.rst", "auto_examples/datasets/opm_data.rst", "auto_examples/datasets/sg_execution_times.rst", "auto_examples/datasets/spm_faces_dataset_sgskip.rst", "auto_examples/decoding/decoding_csp_eeg.rst", "auto_examples/decoding/decoding_csp_timefreq.rst", "auto_examples/decoding/decoding_rsa_sgskip.rst", "auto_examples/decoding/decoding_spatio_temporal_source.rst", "auto_examples/decoding/decoding_spoc_CMC.rst", "auto_examples/decoding/decoding_time_generalization_conditions.rst", "auto_examples/decoding/decoding_unsupervised_spatial_filter.rst", "auto_examples/decoding/decoding_xdawn_eeg.rst", "auto_examples/decoding/ems_filtering.rst", "auto_examples/decoding/index.rst", "auto_examples/decoding/linear_model_patterns.rst", "auto_examples/decoding/receptive_field_mtrf.rst", "auto_examples/decoding/sg_execution_times.rst", "auto_examples/decoding/ssd_spatial_filters.rst", "auto_examples/forward/forward_sensitivity_maps.rst", "auto_examples/forward/index.rst", "auto_examples/forward/left_cerebellum_volume_source.rst", "auto_examples/forward/sg_execution_times.rst", "auto_examples/forward/source_space_morphing.rst", "auto_examples/index.rst", "auto_examples/inverse/compute_mne_inverse_epochs_in_label.rst", "auto_examples/inverse/compute_mne_inverse_raw_in_label.rst", "auto_examples/inverse/compute_mne_inverse_volume.rst", "auto_examples/inverse/custom_inverse_solver.rst", "auto_examples/inverse/dics_epochs.rst", "auto_examples/inverse/dics_source_power.rst", "auto_examples/inverse/evoked_ers_source_power.rst", "auto_examples/inverse/gamma_map_inverse.rst", "auto_examples/inverse/index.rst", "auto_examples/inverse/label_activation_from_stc.rst", "auto_examples/inverse/label_from_stc.rst", "auto_examples/inverse/label_source_activations.rst", "auto_examples/inverse/mixed_norm_inverse.rst", "auto_examples/inverse/mixed_source_space_inverse.rst", "auto_examples/inverse/mne_cov_power.rst", "auto_examples/inverse/morph_surface_stc.rst", "auto_examples/inverse/morph_volume_stc.rst", "auto_examples/inverse/multi_dipole_model.rst", "auto_examples/inverse/multidict_reweighted_tfmxne.rst", "auto_examples/inverse/psf_ctf_label_leakage.rst", "auto_examples/inverse/psf_ctf_vertices.rst", "auto_examples/inverse/psf_ctf_vertices_lcmv.rst", "auto_examples/inverse/psf_volume.rst", "auto_examples/inverse/rap_music.rst", "auto_examples/inverse/read_inverse.rst", "auto_examples/inverse/read_stc.rst", "auto_examples/inverse/resolution_metrics.rst", "auto_examples/inverse/resolution_metrics_eegmeg.rst", "auto_examples/inverse/sg_execution_times.rst", "auto_examples/inverse/snr_estimate.rst", "auto_examples/inverse/source_space_snr.rst", "auto_examples/inverse/time_frequency_mixed_norm_inverse.rst", "auto_examples/inverse/vector_mne_solution.rst", "auto_examples/io/elekta_epochs.rst", "auto_examples/io/index.rst", "auto_examples/io/read_neo_format.rst", "auto_examples/io/read_noise_covariance_matrix.rst", "auto_examples/io/read_xdf.rst", "auto_examples/io/sg_execution_times.rst", "auto_examples/preprocessing/css.rst", "auto_examples/preprocessing/define_target_events.rst", "auto_examples/preprocessing/eeg_bridging.rst", "auto_examples/preprocessing/eeg_csd.rst", "auto_examples/preprocessing/eog_artifact_histogram.rst", "auto_examples/preprocessing/eog_regression.rst", "auto_examples/preprocessing/find_ref_artifacts.rst", "auto_examples/preprocessing/fnirs_artifact_removal.rst", "auto_examples/preprocessing/ica_comparison.rst", "auto_examples/preprocessing/index.rst", "auto_examples/preprocessing/interpolate_bad_channels.rst", "auto_examples/preprocessing/movement_compensation.rst", "auto_examples/preprocessing/movement_detection.rst", "auto_examples/preprocessing/muscle_detection.rst", "auto_examples/preprocessing/muscle_ica.rst", "auto_examples/preprocessing/otp.rst", "auto_examples/preprocessing/sg_execution_times.rst", "auto_examples/preprocessing/shift_evoked.rst", "auto_examples/preprocessing/virtual_evoked.rst", "auto_examples/preprocessing/xdawn_denoising.rst", "auto_examples/simulation/index.rst", "auto_examples/simulation/plot_stc_metrics.rst", "auto_examples/simulation/sg_execution_times.rst", "auto_examples/simulation/simulate_evoked_data.rst", "auto_examples/simulation/simulate_raw_data.rst", "auto_examples/simulation/simulated_raw_data_using_subject_anatomy.rst", "auto_examples/simulation/source_simulator.rst", "auto_examples/stats/cluster_stats_evoked.rst", "auto_examples/stats/fdr_stats_evoked.rst", "auto_examples/stats/index.rst", "auto_examples/stats/linear_regression_raw.rst", "auto_examples/stats/sensor_permutation_test.rst", "auto_examples/stats/sensor_regression.rst", "auto_examples/stats/sg_execution_times.rst", "auto_examples/time_frequency/compute_csd.rst", "auto_examples/time_frequency/compute_source_psd_epochs.rst", "auto_examples/time_frequency/index.rst", "auto_examples/time_frequency/sg_execution_times.rst", "auto_examples/time_frequency/source_label_time_frequency.rst", "auto_examples/time_frequency/source_power_spectrum.rst", "auto_examples/time_frequency/source_power_spectrum_opm.rst", "auto_examples/time_frequency/source_space_time_frequency.rst", "auto_examples/time_frequency/temporal_whitening.rst", "auto_examples/time_frequency/time_frequency_erds.rst", "auto_examples/time_frequency/time_frequency_global_field_power.rst", "auto_examples/time_frequency/time_frequency_simulated.rst", "auto_examples/visualization/3d_to_2d.rst", "auto_examples/visualization/brain.rst", "auto_examples/visualization/channel_epochs_image.rst", "auto_examples/visualization/eeg_on_scalp.rst", "auto_examples/visualization/evoked_arrowmap.rst", "auto_examples/visualization/evoked_topomap.rst", "auto_examples/visualization/evoked_whitening.rst", "auto_examples/visualization/index.rst", "auto_examples/visualization/meg_sensors.rst", "auto_examples/visualization/mne_helmet.rst", "auto_examples/visualization/montage_sgskip.rst", "auto_examples/visualization/parcellation.rst", "auto_examples/visualization/publication_figure.rst", "auto_examples/visualization/roi_erpimage_by_rt.rst", "auto_examples/visualization/sensor_noise_level.rst", "auto_examples/visualization/sg_execution_times.rst", "auto_examples/visualization/ssp_projs_sensitivity_map.rst", "auto_examples/visualization/topo_compare_conditions.rst", "auto_examples/visualization/topo_customized.rst", "auto_examples/visualization/xhemi.rst", "auto_tutorials/clinical/10_ieeg_localize.rst", "auto_tutorials/clinical/20_seeg.rst", "auto_tutorials/clinical/30_ecog.rst", "auto_tutorials/clinical/60_sleep.rst", "auto_tutorials/clinical/index.rst", "auto_tutorials/clinical/sg_execution_times.rst", "auto_tutorials/epochs/10_epochs_overview.rst", "auto_tutorials/epochs/15_baseline_regression.rst", "auto_tutorials/epochs/20_visualize_epochs.rst", "auto_tutorials/epochs/30_epochs_metadata.rst", "auto_tutorials/epochs/40_autogenerate_metadata.rst", "auto_tutorials/epochs/50_epochs_to_data_frame.rst", "auto_tutorials/epochs/60_make_fixed_length_epochs.rst", "auto_tutorials/epochs/index.rst", "auto_tutorials/epochs/sg_execution_times.rst", "auto_tutorials/evoked/10_evoked_overview.rst", "auto_tutorials/evoked/20_visualize_evoked.rst", "auto_tutorials/evoked/30_eeg_erp.rst", "auto_tutorials/evoked/40_whitened.rst", "auto_tutorials/evoked/index.rst", "auto_tutorials/evoked/sg_execution_times.rst", "auto_tutorials/forward/10_background_freesurfer.rst", "auto_tutorials/forward/20_source_alignment.rst", "auto_tutorials/forward/25_automated_coreg.rst", "auto_tutorials/forward/30_forward.rst", "auto_tutorials/forward/35_eeg_no_mri.rst", "auto_tutorials/forward/50_background_freesurfer_mne.rst", "auto_tutorials/forward/80_fix_bem_in_blender.rst", "auto_tutorials/forward/90_compute_covariance.rst", "auto_tutorials/forward/index.rst", "auto_tutorials/forward/sg_execution_times.rst", "auto_tutorials/index.rst", "auto_tutorials/intro/10_overview.rst", "auto_tutorials/intro/15_inplace.rst", "auto_tutorials/intro/20_events_from_raw.rst", "auto_tutorials/intro/30_info.rst", "auto_tutorials/intro/40_sensor_locations.rst", "auto_tutorials/intro/50_configure_mne.rst", "auto_tutorials/intro/70_report.rst", "auto_tutorials/intro/index.rst", "auto_tutorials/intro/sg_execution_times.rst", "auto_tutorials/inverse/10_stc_class.rst", "auto_tutorials/inverse/20_dipole_fit.rst", "auto_tutorials/inverse/30_mne_dspm_loreta.rst", "auto_tutorials/inverse/35_dipole_orientations.rst", "auto_tutorials/inverse/40_mne_fixed_free.rst", "auto_tutorials/inverse/50_beamformer_lcmv.rst", "auto_tutorials/inverse/60_visualize_stc.rst", "auto_tutorials/inverse/70_eeg_mri_coords.rst", "auto_tutorials/inverse/80_brainstorm_phantom_elekta.rst", "auto_tutorials/inverse/85_brainstorm_phantom_ctf.rst", "auto_tutorials/inverse/90_phantom_4DBTi.rst", "auto_tutorials/inverse/index.rst", "auto_tutorials/inverse/sg_execution_times.rst", "auto_tutorials/io/10_reading_meg_data.rst", "auto_tutorials/io/20_reading_eeg_data.rst", "auto_tutorials/io/30_reading_fnirs_data.rst", "auto_tutorials/io/60_ctf_bst_auditory.rst", "auto_tutorials/io/index.rst", "auto_tutorials/io/sg_execution_times.rst", "auto_tutorials/machine-learning/30_strf.rst", "auto_tutorials/machine-learning/50_decoding.rst", "auto_tutorials/machine-learning/index.rst", "auto_tutorials/machine-learning/sg_execution_times.rst", "auto_tutorials/preprocessing/10_preprocessing_overview.rst", "auto_tutorials/preprocessing/15_handling_bad_channels.rst", "auto_tutorials/preprocessing/20_rejecting_bad_data.rst", "auto_tutorials/preprocessing/25_background_filtering.rst", "auto_tutorials/preprocessing/30_filtering_resampling.rst", "auto_tutorials/preprocessing/35_artifact_correction_regression.rst", "auto_tutorials/preprocessing/40_artifact_correction_ica.rst", "auto_tutorials/preprocessing/45_projectors_background.rst", "auto_tutorials/preprocessing/50_artifact_correction_ssp.rst", "auto_tutorials/preprocessing/55_setting_eeg_reference.rst", "auto_tutorials/preprocessing/59_head_positions.rst", "auto_tutorials/preprocessing/60_maxwell_filtering_sss.rst", "auto_tutorials/preprocessing/70_fnirs_processing.rst", "auto_tutorials/preprocessing/80_opm_processing.rst", "auto_tutorials/preprocessing/index.rst", "auto_tutorials/preprocessing/sg_execution_times.rst", "auto_tutorials/raw/10_raw_overview.rst", "auto_tutorials/raw/20_event_arrays.rst", "auto_tutorials/raw/30_annotate_raw.rst", "auto_tutorials/raw/40_visualize_raw.rst", "auto_tutorials/raw/index.rst", "auto_tutorials/raw/sg_execution_times.rst", "auto_tutorials/simulation/10_array_objs.rst", "auto_tutorials/simulation/70_point_spread.rst", "auto_tutorials/simulation/80_dics.rst", "auto_tutorials/simulation/index.rst", "auto_tutorials/simulation/sg_execution_times.rst", "auto_tutorials/stats-sensor-space/10_background_stats.rst", "auto_tutorials/stats-sensor-space/20_erp_stats.rst", "auto_tutorials/stats-sensor-space/40_cluster_1samp_time_freq.rst", "auto_tutorials/stats-sensor-space/50_cluster_between_time_freq.rst", "auto_tutorials/stats-sensor-space/70_cluster_rmANOVA_time_freq.rst", "auto_tutorials/stats-sensor-space/75_cluster_ftest_spatiotemporal.rst", "auto_tutorials/stats-sensor-space/index.rst", "auto_tutorials/stats-sensor-space/sg_execution_times.rst", "auto_tutorials/stats-source-space/20_cluster_1samp_spatiotemporal.rst", "auto_tutorials/stats-source-space/30_cluster_ftest_spatiotemporal.rst", "auto_tutorials/stats-source-space/60_cluster_rmANOVA_spatiotemporal.rst", "auto_tutorials/stats-source-space/index.rst", "auto_tutorials/stats-source-space/sg_execution_times.rst", "auto_tutorials/time-freq/10_spectrum_class.rst", "auto_tutorials/time-freq/20_sensors_time_frequency.rst", "auto_tutorials/time-freq/50_ssvep.rst", "auto_tutorials/time-freq/index.rst", "auto_tutorials/time-freq/sg_execution_times.rst", "bibliography.rst", "cited.rst", "connectivity.rst", "covariance.rst", "creating_from_arrays.rst", "datasets.rst", "decoding.rst", "events.rst", "export.rst", "file_io.rst", "forward.rst", "funding.rst", "generated/commands.rst", "generated/mne.AcqParserFIF.rst", "generated/mne.Annotations.rst", "generated/mne.BaseEpochs.rst", "generated/mne.BiHemiLabel.rst", "generated/mne.Covariance.rst", "generated/mne.Dipole.rst", "generated/mne.DipoleFixed.rst", "generated/mne.Epochs.rst", "generated/mne.EpochsArray.rst", "generated/mne.Evoked.rst", "generated/mne.EvokedArray.rst", "generated/mne.Forward.rst", "generated/mne.Info.rst", "generated/mne.Label.rst", "generated/mne.MixedSourceEstimate.rst", "generated/mne.MixedVectorSourceEstimate.rst", "generated/mne.Projection.rst", "generated/mne.Report.rst", "generated/mne.SourceEstimate.rst", "generated/mne.SourceMorph.rst", "generated/mne.SourceSpaces.rst", "generated/mne.VectorSourceEstimate.rst", "generated/mne.VolSourceEstimate.rst", "generated/mne.VolVectorSourceEstimate.rst", "generated/mne.add_reference_channels.rst", "generated/mne.add_source_space_distances.rst", "generated/mne.annotations_from_events.rst", "generated/mne.apply_forward.rst", "generated/mne.apply_forward_raw.rst", "generated/mne.average_forward_solutions.rst", "generated/mne.baseline.rescale.rst", "generated/mne.beamformer.Beamformer.rst", "generated/mne.beamformer.apply_dics.rst", "generated/mne.beamformer.apply_dics_csd.rst", "generated/mne.beamformer.apply_dics_epochs.rst", "generated/mne.beamformer.apply_dics_tfr_epochs.rst", "generated/mne.beamformer.apply_lcmv.rst", "generated/mne.beamformer.apply_lcmv_cov.rst", "generated/mne.beamformer.apply_lcmv_epochs.rst", "generated/mne.beamformer.apply_lcmv_raw.rst", "generated/mne.beamformer.make_dics.rst", "generated/mne.beamformer.make_lcmv.rst", "generated/mne.beamformer.make_lcmv_resolution_matrix.rst", "generated/mne.beamformer.rap_music.rst", "generated/mne.beamformer.read_beamformer.rst", "generated/mne.bem.ConductorModel.rst", "generated/mne.bem.convert_flash_mris.rst", "generated/mne.bem.distance_to_bem.rst", "generated/mne.bem.fit_sphere_to_headshape.rst", "generated/mne.bem.get_fitting_dig.rst", "generated/mne.bem.make_flash_bem.rst", "generated/mne.bem.make_scalp_surfaces.rst", "generated/mne.bem.make_watershed_bem.rst", "generated/mne.channel_indices_by_type.rst", "generated/mne.channel_type.rst", "generated/mne.channels.DigMontage.rst", "generated/mne.channels.Layout.rst", "generated/mne.channels.combine_channels.rst", "generated/mne.channels.compute_dev_head_t.rst", "generated/mne.channels.compute_native_head_t.rst", "generated/mne.channels.equalize_channels.rst", "generated/mne.channels.find_ch_adjacency.rst", "generated/mne.channels.find_layout.rst", "generated/mne.channels.fix_mag_coil_types.rst", "generated/mne.channels.generate_2d_layout.rst", "generated/mne.channels.get_builtin_ch_adjacencies.rst", "generated/mne.channels.get_builtin_montages.rst", "generated/mne.channels.make_1020_channel_selections.rst", "generated/mne.channels.make_dig_montage.rst", "generated/mne.channels.make_eeg_layout.rst", "generated/mne.channels.make_grid_layout.rst", "generated/mne.channels.make_standard_montage.rst", "generated/mne.channels.read_ch_adjacency.rst", "generated/mne.channels.read_custom_montage.rst", "generated/mne.channels.read_dig_captrak.rst", "generated/mne.channels.read_dig_dat.rst", "generated/mne.channels.read_dig_egi.rst", "generated/mne.channels.read_dig_fif.rst", "generated/mne.channels.read_dig_hpts.rst", "generated/mne.channels.read_dig_localite.rst", "generated/mne.channels.read_dig_polhemus_isotrak.rst", "generated/mne.channels.read_layout.rst", "generated/mne.channels.read_polhemus_fastscan.rst", "generated/mne.channels.rename_channels.rst", "generated/mne.chpi.compute_chpi_amplitudes.rst", "generated/mne.chpi.compute_chpi_locs.rst", "generated/mne.chpi.compute_chpi_snr.rst", "generated/mne.chpi.compute_head_pos.rst", "generated/mne.chpi.extract_chpi_locs_ctf.rst", "generated/mne.chpi.extract_chpi_locs_kit.rst", "generated/mne.chpi.filter_chpi.rst", "generated/mne.chpi.get_active_chpi.rst", "generated/mne.chpi.get_chpi_info.rst", "generated/mne.chpi.head_pos_to_trans_rot_t.rst", "generated/mne.chpi.read_head_pos.rst", "generated/mne.chpi.write_head_pos.rst", "generated/mne.combine_evoked.rst", "generated/mne.compute_covariance.rst", "generated/mne.compute_proj_epochs.rst", "generated/mne.compute_proj_evoked.rst", "generated/mne.compute_proj_raw.rst", "generated/mne.compute_rank.rst", "generated/mne.compute_raw_covariance.rst", "generated/mne.compute_source_morph.rst", "generated/mne.concatenate_epochs.rst", "generated/mne.concatenate_events.rst", "generated/mne.concatenate_raws.rst", "generated/mne.convert_forward_solution.rst", "generated/mne.coreg.Coregistration.rst", "generated/mne.coreg.estimate_head_mri_t.rst", "generated/mne.coreg.get_mni_fiducials.rst", "generated/mne.count_events.rst", "generated/mne.cov.compute_whitener.rst", "generated/mne.cov.prepare_noise_cov.rst", "generated/mne.cov.regularize.rst", "generated/mne.create_default_subject.rst", "generated/mne.create_info.rst", "generated/mne.cuda.get_cuda_memory.rst", "generated/mne.cuda.init_cuda.rst", "generated/mne.cuda.set_cuda_device.rst", "generated/mne.datasets.brainstorm.bst_auditory.data_path.rst", "generated/mne.datasets.brainstorm.bst_raw.data_path.rst", "generated/mne.datasets.brainstorm.bst_resting.data_path.rst", "generated/mne.datasets.eegbci.load_data.rst", "generated/mne.datasets.eegbci.standardize.rst", "generated/mne.datasets.epilepsy_ecog.data_path.rst", "generated/mne.datasets.erp_core.data_path.rst", "generated/mne.datasets.fetch_aparc_sub_parcellation.rst", "generated/mne.datasets.fetch_dataset.rst", "generated/mne.datasets.fetch_fsaverage.rst", "generated/mne.datasets.fetch_hcp_mmp_parcellation.rst", "generated/mne.datasets.fetch_infant_template.rst", "generated/mne.datasets.fetch_phantom.rst", "generated/mne.datasets.fnirs_motor.data_path.rst", "generated/mne.datasets.has_dataset.rst", "generated/mne.datasets.hf_sef.data_path.rst", "generated/mne.datasets.kiloword.data_path.rst", "generated/mne.datasets.limo.load_data.rst", "generated/mne.datasets.misc.data_path.rst", "generated/mne.datasets.mtrf.data_path.rst", "generated/mne.datasets.multimodal.data_path.rst", "generated/mne.datasets.opm.data_path.rst", "generated/mne.datasets.phantom_4dbti.data_path.rst", "generated/mne.datasets.refmeg_noise.data_path.rst", "generated/mne.datasets.sample.data_path.rst", "generated/mne.datasets.sleep_physionet.age.fetch_data.rst", "generated/mne.datasets.sleep_physionet.temazepam.fetch_data.rst", "generated/mne.datasets.somato.data_path.rst", "generated/mne.datasets.spm_face.data_path.rst", "generated/mne.datasets.ssvep.data_path.rst", "generated/mne.datasets.ucl_opm_auditory.data_path.rst", "generated/mne.datasets.visual_92_categories.data_path.rst", "generated/mne.decimate_surface.rst", "generated/mne.decoding.CSP.rst", "generated/mne.decoding.EMS.rst", "generated/mne.decoding.FilterEstimator.rst", "generated/mne.decoding.GeneralizingEstimator.rst", "generated/mne.decoding.LinearModel.rst", "generated/mne.decoding.PSDEstimator.rst", "generated/mne.decoding.ReceptiveField.rst", "generated/mne.decoding.SPoC.rst", "generated/mne.decoding.SSD.rst", "generated/mne.decoding.Scaler.rst", "generated/mne.decoding.SlidingEstimator.rst", "generated/mne.decoding.TemporalFilter.rst", "generated/mne.decoding.TimeDelayingRidge.rst", "generated/mne.decoding.TimeFrequency.rst", "generated/mne.decoding.UnsupervisedSpatialFilter.rst", "generated/mne.decoding.Vectorizer.rst", "generated/mne.decoding.compute_ems.rst", "generated/mne.decoding.cross_val_multiscore.rst", "generated/mne.decoding.get_coef.rst", "generated/mne.dig_mri_distances.rst", "generated/mne.dipole.get_phantom_dipoles.rst", "generated/mne.epochs.average_movements.rst", "generated/mne.epochs.combine_event_ids.rst", "generated/mne.epochs.equalize_epoch_counts.rst", "generated/mne.epochs.make_metadata.rst", "generated/mne.equalize_channels.rst", "generated/mne.event.define_target_events.rst", "generated/mne.event.match_event_names.rst", "generated/mne.event.shift_time_events.rst", "generated/mne.events_from_annotations.rst", "generated/mne.export.export_epochs.rst", "generated/mne.export.export_evokeds.rst", "generated/mne.export.export_evokeds_mff.rst", "generated/mne.export.export_raw.rst", "generated/mne.extract_label_time_course.rst", "generated/mne.filter.construct_iir_filter.rst", "generated/mne.filter.create_filter.rst", "generated/mne.filter.estimate_ringing_samples.rst", "generated/mne.filter.filter_data.rst", "generated/mne.filter.notch_filter.rst", "generated/mne.filter.resample.rst", "generated/mne.find_events.rst", "generated/mne.find_stim_steps.rst", "generated/mne.fit_dipole.rst", "generated/mne.forward.compute_depth_prior.rst", "generated/mne.forward.compute_orient_prior.rst", "generated/mne.forward.restrict_forward_to_label.rst", "generated/mne.forward.restrict_forward_to_stc.rst", "generated/mne.get_config.rst", "generated/mne.get_config_path.rst", "generated/mne.get_head_surf.rst", "generated/mne.get_meg_helmet_surf.rst", "generated/mne.get_montage_volume_labels.rst", "generated/mne.get_volume_labels_from_aseg.rst", "generated/mne.get_volume_labels_from_src.rst", "generated/mne.grade_to_tris.rst", "generated/mne.grade_to_vertices.rst", "generated/mne.grand_average.rst", "generated/mne.grow_labels.rst", "generated/mne.gui.coregistration.rst", "generated/mne.gui.locate_ieeg.rst", "generated/mne.head_to_mni.rst", "generated/mne.head_to_mri.rst", "generated/mne.inverse_sparse.gamma_map.rst", "generated/mne.inverse_sparse.make_stc_from_dipoles.rst", "generated/mne.inverse_sparse.mixed_norm.rst", "generated/mne.inverse_sparse.tf_mixed_norm.rst", "generated/mne.io.BaseRaw.rst", "generated/mne.io.Raw.rst", "generated/mne.io.RawArray.rst", "generated/mne.io.anonymize_info.rst", "generated/mne.io.kit.read_mrk.rst", "generated/mne.io.read_fiducials.rst", "generated/mne.io.read_info.rst", "generated/mne.io.read_raw.rst", "generated/mne.io.read_raw_artemis123.rst", "generated/mne.io.read_raw_bdf.rst", "generated/mne.io.read_raw_boxy.rst", "generated/mne.io.read_raw_brainvision.rst", "generated/mne.io.read_raw_bti.rst", "generated/mne.io.read_raw_cnt.rst", "generated/mne.io.read_raw_ctf.rst", "generated/mne.io.read_raw_curry.rst", "generated/mne.io.read_raw_edf.rst", "generated/mne.io.read_raw_eeglab.rst", "generated/mne.io.read_raw_egi.rst", "generated/mne.io.read_raw_eximia.rst", "generated/mne.io.read_raw_fieldtrip.rst", "generated/mne.io.read_raw_fif.rst", "generated/mne.io.read_raw_fil.rst", "generated/mne.io.read_raw_gdf.rst", "generated/mne.io.read_raw_hitachi.rst", "generated/mne.io.read_raw_kit.rst", "generated/mne.io.read_raw_nedf.rst", "generated/mne.io.read_raw_nicolet.rst", "generated/mne.io.read_raw_nihon.rst", "generated/mne.io.read_raw_nirx.rst", "generated/mne.io.read_raw_persyst.rst", "generated/mne.io.read_raw_snirf.rst", "generated/mne.io.show_fiff.rst", "generated/mne.io.write_fiducials.rst", "generated/mne.label.select_sources.rst", "generated/mne.label_sign_flip.rst", "generated/mne.labels_to_stc.rst", "generated/mne.make_ad_hoc_cov.rst", "generated/mne.make_bem_model.rst", "generated/mne.make_bem_solution.rst", "generated/mne.make_field_map.rst", "generated/mne.make_fixed_length_epochs.rst", "generated/mne.make_fixed_length_events.rst", "generated/mne.make_forward_dipole.rst", "generated/mne.make_forward_solution.rst", "generated/mne.make_sphere_model.rst", "generated/mne.merge_events.rst", "generated/mne.minimum_norm.InverseOperator.rst", "generated/mne.minimum_norm.apply_inverse.rst", "generated/mne.minimum_norm.apply_inverse_cov.rst", "generated/mne.minimum_norm.apply_inverse_epochs.rst", "generated/mne.minimum_norm.apply_inverse_raw.rst", "generated/mne.minimum_norm.apply_inverse_tfr_epochs.rst", "generated/mne.minimum_norm.compute_rank_inverse.rst", "generated/mne.minimum_norm.compute_source_psd.rst", "generated/mne.minimum_norm.compute_source_psd_epochs.rst", "generated/mne.minimum_norm.estimate_snr.rst", "generated/mne.minimum_norm.get_cross_talk.rst", "generated/mne.minimum_norm.get_point_spread.rst", "generated/mne.minimum_norm.make_inverse_operator.rst", "generated/mne.minimum_norm.make_inverse_resolution_matrix.rst", "generated/mne.minimum_norm.prepare_inverse_operator.rst", "generated/mne.minimum_norm.read_inverse_operator.rst", "generated/mne.minimum_norm.resolution_metrics.rst", "generated/mne.minimum_norm.source_band_induced_power.rst", "generated/mne.minimum_norm.source_induced_power.rst", "generated/mne.minimum_norm.write_inverse_operator.rst", "generated/mne.morph_labels.rst", "generated/mne.morph_source_spaces.rst", "generated/mne.open_docs.rst", "generated/mne.open_report.rst", "generated/mne.parse_config.rst", "generated/mne.pick_channels.rst", "generated/mne.pick_channels_cov.rst", "generated/mne.pick_channels_forward.rst", "generated/mne.pick_channels_regexp.rst", "generated/mne.pick_events.rst", "generated/mne.pick_info.rst", "generated/mne.pick_types.rst", "generated/mne.pick_types_forward.rst", "generated/mne.preprocessing.EOGRegression.rst", "generated/mne.preprocessing.ICA.rst", "generated/mne.preprocessing.Xdawn.rst", "generated/mne.preprocessing.annotate_amplitude.rst", "generated/mne.preprocessing.annotate_break.rst", "generated/mne.preprocessing.annotate_movement.rst", "generated/mne.preprocessing.annotate_muscle_zscore.rst", "generated/mne.preprocessing.annotate_nan.rst", "generated/mne.preprocessing.compute_average_dev_head_t.rst", "generated/mne.preprocessing.compute_bridged_electrodes.rst", "generated/mne.preprocessing.compute_current_source_density.rst", "generated/mne.preprocessing.compute_fine_calibration.rst", "generated/mne.preprocessing.compute_maxwell_basis.rst", "generated/mne.preprocessing.compute_proj_ecg.rst", "generated/mne.preprocessing.compute_proj_eog.rst", "generated/mne.preprocessing.corrmap.rst", "generated/mne.preprocessing.cortical_signal_suppression.rst", "generated/mne.preprocessing.create_ecg_epochs.rst", "generated/mne.preprocessing.create_eog_epochs.rst", "generated/mne.preprocessing.equalize_bads.rst", "generated/mne.preprocessing.find_bad_channels_maxwell.rst", "generated/mne.preprocessing.find_ecg_events.rst", "generated/mne.preprocessing.find_eog_events.rst", "generated/mne.preprocessing.fix_stim_artifact.rst", "generated/mne.preprocessing.ica_find_ecg_events.rst", "generated/mne.preprocessing.ica_find_eog_events.rst", "generated/mne.preprocessing.ieeg.project_sensors_onto_brain.rst", "generated/mne.preprocessing.infomax.rst", "generated/mne.preprocessing.interpolate_bridged_electrodes.rst", "generated/mne.preprocessing.maxwell_filter.rst", "generated/mne.preprocessing.maxwell_filter_prepare_emptyroom.rst", "generated/mne.preprocessing.nirs.beer_lambert_law.rst", "generated/mne.preprocessing.nirs.optical_density.rst", "generated/mne.preprocessing.nirs.scalp_coupling_index.rst", "generated/mne.preprocessing.nirs.short_channels.rst", "generated/mne.preprocessing.nirs.source_detector_distances.rst", "generated/mne.preprocessing.nirs.temporal_derivative_distribution_repair.rst", "generated/mne.preprocessing.oversampled_temporal_projection.rst", "generated/mne.preprocessing.peak_finder.rst", "generated/mne.preprocessing.read_eog_regression.rst", "generated/mne.preprocessing.read_fine_calibration.rst", "generated/mne.preprocessing.read_ica.rst", "generated/mne.preprocessing.read_ica_eeglab.rst", "generated/mne.preprocessing.realign_raw.rst", "generated/mne.preprocessing.regress_artifact.rst", "generated/mne.preprocessing.write_fine_calibration.rst", "generated/mne.random_parcellation.rst", "generated/mne.read_annotations.rst", "generated/mne.read_bem_solution.rst", "generated/mne.read_bem_surfaces.rst", "generated/mne.read_cov.rst", "generated/mne.read_dipole.rst", "generated/mne.read_epochs.rst", "generated/mne.read_epochs_eeglab.rst", "generated/mne.read_epochs_fieldtrip.rst", "generated/mne.read_epochs_kit.rst", "generated/mne.read_events.rst", "generated/mne.read_evoked_besa.rst", "generated/mne.read_evoked_fieldtrip.rst", "generated/mne.read_evokeds.rst", "generated/mne.read_evokeds_mff.rst", "generated/mne.read_forward_solution.rst", "generated/mne.read_freesurfer_lut.rst", "generated/mne.read_label.rst", "generated/mne.read_labels_from_annot.rst", "generated/mne.read_lta.rst", "generated/mne.read_morph_map.rst", "generated/mne.read_proj.rst", "generated/mne.read_reject_parameters.rst", "generated/mne.read_source_estimate.rst", "generated/mne.read_source_morph.rst", "generated/mne.read_source_spaces.rst", "generated/mne.read_surface.rst", "generated/mne.read_talxfm.rst", "generated/mne.read_trans.rst", "generated/mne.read_tri.rst", "generated/mne.read_vectorview_selection.rst", "generated/mne.rename_channels.rst", "generated/mne.scale_bem.rst", "generated/mne.scale_labels.rst", "generated/mne.scale_mri.rst", "generated/mne.scale_source_space.rst", "generated/mne.sensitivity_map.rst", "generated/mne.set_bipolar_reference.rst", "generated/mne.set_cache_dir.rst", "generated/mne.set_config.rst", "generated/mne.set_eeg_reference.rst", "generated/mne.set_log_file.rst", "generated/mne.set_log_level.rst", "generated/mne.setup_source_space.rst", "generated/mne.setup_volume_source_space.rst", "generated/mne.simulation.SourceSimulator.rst", "generated/mne.simulation.add_chpi.rst", "generated/mne.simulation.add_ecg.rst", "generated/mne.simulation.add_eog.rst", "generated/mne.simulation.add_noise.rst", "generated/mne.simulation.metrics.cosine_score.rst", "generated/mne.simulation.metrics.f1_score.rst", "generated/mne.simulation.metrics.peak_position_error.rst", "generated/mne.simulation.metrics.precision_score.rst", "generated/mne.simulation.metrics.recall_score.rst", "generated/mne.simulation.metrics.region_localization_error.rst", "generated/mne.simulation.metrics.roc_auc_score.rst", "generated/mne.simulation.metrics.spatial_deviation_error.rst", "generated/mne.simulation.select_source_in_label.rst", "generated/mne.simulation.simulate_evoked.rst", "generated/mne.simulation.simulate_raw.rst", "generated/mne.simulation.simulate_sparse_stc.rst", "generated/mne.simulation.simulate_stc.rst", "generated/mne.source_space.compute_distance_to_sensors.rst", "generated/mne.source_space.get_decimated_surfaces.rst", "generated/mne.spatial_dist_adjacency.rst", "generated/mne.spatial_inter_hemi_adjacency.rst", "generated/mne.spatial_src_adjacency.rst", "generated/mne.spatial_tris_adjacency.rst", "generated/mne.spatio_temporal_dist_adjacency.rst", "generated/mne.spatio_temporal_src_adjacency.rst", "generated/mne.spatio_temporal_tris_adjacency.rst", "generated/mne.split_label.rst", "generated/mne.stats.bonferroni_correction.rst", "generated/mne.stats.bootstrap_confidence_interval.rst", "generated/mne.stats.combine_adjacency.rst", "generated/mne.stats.f_mway_rm.rst", "generated/mne.stats.f_oneway.rst", "generated/mne.stats.f_threshold_mway_rm.rst", "generated/mne.stats.fdr_correction.rst", "generated/mne.stats.linear_regression.rst", "generated/mne.stats.linear_regression_raw.rst", "generated/mne.stats.permutation_cluster_1samp_test.rst", "generated/mne.stats.permutation_cluster_test.rst", "generated/mne.stats.permutation_t_test.rst", "generated/mne.stats.spatio_temporal_cluster_1samp_test.rst", "generated/mne.stats.spatio_temporal_cluster_test.rst", "generated/mne.stats.summarize_clusters_stc.rst", "generated/mne.stats.ttest_1samp_no_p.rst", "generated/mne.stats.ttest_ind_no_p.rst", "generated/mne.stc_near_sensors.rst", "generated/mne.stc_to_label.rst", "generated/mne.surface.complete_surface_info.rst", "generated/mne.surface.read_curvature.rst", "generated/mne.sys_info.rst", "generated/mne.time_frequency.AverageTFR.rst", "generated/mne.time_frequency.CrossSpectralDensity.rst", "generated/mne.time_frequency.EpochsSpectrum.rst", "generated/mne.time_frequency.EpochsTFR.rst", "generated/mne.time_frequency.Spectrum.rst", "generated/mne.time_frequency.csd_array_fourier.rst", "generated/mne.time_frequency.csd_array_morlet.rst", "generated/mne.time_frequency.csd_array_multitaper.rst", "generated/mne.time_frequency.csd_fourier.rst", "generated/mne.time_frequency.csd_morlet.rst", "generated/mne.time_frequency.csd_multitaper.rst", "generated/mne.time_frequency.csd_tfr.rst", "generated/mne.time_frequency.dpss_windows.rst", "generated/mne.time_frequency.fit_iir_model_raw.rst", "generated/mne.time_frequency.fwhm.rst", "generated/mne.time_frequency.istft.rst", "generated/mne.time_frequency.morlet.rst", "generated/mne.time_frequency.pick_channels_csd.rst", "generated/mne.time_frequency.psd_array_multitaper.rst", "generated/mne.time_frequency.psd_array_welch.rst", "generated/mne.time_frequency.read_csd.rst", "generated/mne.time_frequency.read_spectrum.rst", "generated/mne.time_frequency.read_tfrs.rst", "generated/mne.time_frequency.stft.rst", "generated/mne.time_frequency.stftfreq.rst", "generated/mne.time_frequency.tfr.cwt.rst", "generated/mne.time_frequency.tfr.morlet.rst", "generated/mne.time_frequency.tfr_array_morlet.rst", "generated/mne.time_frequency.tfr_array_multitaper.rst", "generated/mne.time_frequency.tfr_array_stockwell.rst", "generated/mne.time_frequency.tfr_morlet.rst", "generated/mne.time_frequency.tfr_multitaper.rst", "generated/mne.time_frequency.tfr_stockwell.rst", "generated/mne.time_frequency.write_tfrs.rst", "generated/mne.transform_surface_to.rst", "generated/mne.transforms.Transform.rst", "generated/mne.transforms.apply_volume_registration.rst", "generated/mne.transforms.compute_volume_registration.rst", "generated/mne.transforms.quat_to_rot.rst", "generated/mne.transforms.read_ras_mni_t.rst", "generated/mne.transforms.rot_to_quat.rst", "generated/mne.use_coil_def.rst", "generated/mne.use_log_level.rst", "generated/mne.utils.deprecated.rst", "generated/mne.utils.warn.rst", "generated/mne.verbose.rst", "generated/mne.vertex_to_mni.rst", "generated/mne.viz.Brain.rst", "generated/mne.viz.ClickableImage.rst", "generated/mne.viz.Figure3D.rst", "generated/mne.viz.add_background_image.rst", "generated/mne.viz.centers_to_edges.rst", "generated/mne.viz.circular_layout.rst", "generated/mne.viz.close_3d_figure.rst", "generated/mne.viz.close_all_3d_figures.rst", "generated/mne.viz.compare_fiff.rst", "generated/mne.viz.create_3d_figure.rst", "generated/mne.viz.get_3d_backend.rst", "generated/mne.viz.get_brain_class.rst", "generated/mne.viz.get_browser_backend.rst", "generated/mne.viz.iter_topography.rst", "generated/mne.viz.link_brains.rst", "generated/mne.viz.mne_analyze_colormap.rst", "generated/mne.viz.plot_alignment.rst", "generated/mne.viz.plot_arrowmap.rst", "generated/mne.viz.plot_bem.rst", "generated/mne.viz.plot_brain_colorbar.rst", "generated/mne.viz.plot_bridged_electrodes.rst", "generated/mne.viz.plot_ch_adjacency.rst", "generated/mne.viz.plot_channel_labels_circle.rst", "generated/mne.viz.plot_chpi_snr.rst", "generated/mne.viz.plot_compare_evokeds.rst", "generated/mne.viz.plot_cov.rst", "generated/mne.viz.plot_csd.rst", "generated/mne.viz.plot_dipole_amplitudes.rst", "generated/mne.viz.plot_dipole_locations.rst", "generated/mne.viz.plot_drop_log.rst", "generated/mne.viz.plot_epochs.rst", "generated/mne.viz.plot_epochs_image.rst", "generated/mne.viz.plot_epochs_psd_topomap.rst", "generated/mne.viz.plot_events.rst", "generated/mne.viz.plot_evoked.rst", "generated/mne.viz.plot_evoked_field.rst", "generated/mne.viz.plot_evoked_image.rst", "generated/mne.viz.plot_evoked_joint.rst", "generated/mne.viz.plot_evoked_topo.rst", "generated/mne.viz.plot_evoked_topomap.rst", "generated/mne.viz.plot_evoked_white.rst", "generated/mne.viz.plot_filter.rst", "generated/mne.viz.plot_head_positions.rst", "generated/mne.viz.plot_ica_components.rst", "generated/mne.viz.plot_ica_overlay.rst", "generated/mne.viz.plot_ica_properties.rst", "generated/mne.viz.plot_ica_scores.rst", "generated/mne.viz.plot_ica_sources.rst", "generated/mne.viz.plot_ideal_filter.rst", "generated/mne.viz.plot_layout.rst", "generated/mne.viz.plot_montage.rst", "generated/mne.viz.plot_projs_joint.rst", "generated/mne.viz.plot_projs_topomap.rst", "generated/mne.viz.plot_raw.rst", "generated/mne.viz.plot_raw_psd.rst", "generated/mne.viz.plot_regression_weights.rst", "generated/mne.viz.plot_sensors.rst", "generated/mne.viz.plot_snr_estimate.rst", "generated/mne.viz.plot_source_estimates.rst", "generated/mne.viz.plot_sparse_source_estimates.rst", "generated/mne.viz.plot_tfr_topomap.rst", "generated/mne.viz.plot_topo_image_epochs.rst", "generated/mne.viz.plot_topomap.rst", "generated/mne.viz.plot_vector_source_estimates.rst", "generated/mne.viz.plot_volume_source_estimates.rst", "generated/mne.viz.set_3d_backend.rst", "generated/mne.viz.set_3d_options.rst", "generated/mne.viz.set_3d_title.rst", "generated/mne.viz.set_3d_view.rst", "generated/mne.viz.set_browser_backend.rst", "generated/mne.viz.snapshot_brain_montage.rst", "generated/mne.viz.use_3d_backend.rst", "generated/mne.viz.use_browser_backend.rst", "generated/mne.warp_montage_volume.rst", "generated/mne.what.rst", "generated/mne.write_bem_solution.rst", "generated/mne.write_bem_surfaces.rst", "generated/mne.write_cov.rst", "generated/mne.write_events.rst", "generated/mne.write_evokeds.rst", "generated/mne.write_forward_solution.rst", "generated/mne.write_head_bem.rst", "generated/mne.write_label.rst", "generated/mne.write_labels_to_annot.rst", "generated/mne.write_proj.rst", "generated/mne.write_source_spaces.rst", "generated/mne.write_surface.rst", "generated/mne.write_trans.rst", "glossary.rst", "index.rst", "install/advanced.rst", "install/check_installation.rst", "install/contributing.rst", "install/freesurfer.rst", "install/index.rst", "install/installers.rst", "install/manual_install.rst", "install/manual_install_python.rst", "install/mne_c.rst", "install/mne_tools_suite.rst", "install/updating.rst", "inverse.rst", "logging.rst", "martinos.rst", "mne_cpp.rst", "most_used_classes.rst", "mri.rst", "overview/cite.rst", "overview/cookbook.rst", "overview/datasets_index.rst", "overview/design_philosophy.rst", "overview/development.rst", "overview/faq.rst", "overview/get_help.rst", "overview/governance.rst", "overview/implementation.rst", "overview/index.rst", "overview/learn_python.rst", "overview/matlab.rst", "overview/migrating.rst", "overview/people.rst", "overview/roadmap.rst", "preprocessing.rst", "python_reference.rst", "reading_raw_data.rst", "realtime.rst", "report.rst", "sensor_space.rst", "simulation.rst", "source_space.rst", "statistics.rst", "time_frequency.rst", "visualization.rst", "whats_new.rst"], "titles": ["Connectivity Analysis Examples", "Brainstorm raw (median nerve) dataset", "HF-SEF dataset", "Examples on open datasets", "Single trial linear regression analysis with the LIMO dataset", "Optically pumped magnetometer (OPM) data", "Computation times", "From raw data to dSPM on SPM Faces dataset", "Motor imagery decoding from EEG data using the Common Spatial Pattern (CSP)", "Decoding in time-frequency space using Common Spatial Patterns (CSP)", "Representational Similarity Analysis", "Decoding source space data", "Continuous Target Decoding with SPoC", "Decoding sensor space data with generalization across time and conditions", "Analysis of evoked response using ICA and PCA reduction techniques", "XDAWN Decoding From EEG data", "Compute effect-matched-spatial filtering (EMS)", "Machine Learning (Decoding, Encoding, and MVPA)", "Linear classifier on sensor data with plot patterns and filters", "Receptive Field Estimation and Prediction", "Computation times", "Compute Spectro-Spatial Decomposition (SSD) spatial filters", "Display sensitivity maps for EEG and MEG sensors", "Forward modeling", "Generate a left cerebellum volume source space", "Computation times", "Use source space morphing", "Examples Gallery", "Compute MNE-dSPM inverse solution on single epochs", "Compute sLORETA inverse solution on raw data", "Compute MNE-dSPM inverse solution on evoked data in volume source space", "Source localization with a custom inverse solver", "Compute source level time-frequency timecourses using a DICS beamformer", "Compute source power using DICS beamformer", "Compute evoked ERS source power using DICS, LCMV beamformer, and dSPM", "Compute a sparse inverse solution using the Gamma-MAP empirical Bayesian method", "Inverse problem and source analysis", "Extracting time course from source_estimate object", "Generate a functional label from source estimates", "Extracting the time series of activations in a label", "Compute sparse inverse solution with mixed norm: MxNE and irMxNE", "Compute MNE inverse solution on evoked data with a mixed source space", "Compute source power estimate by projecting the covariance with MNE", "Morph surface source estimate", "Morph volumetric source estimate", "Computing source timecourses with an XFit-like multi-dipole model", "Compute iterative reweighted TF-MxNE with multiscale time-frequency dictionary", "Visualize source leakage among labels using a circular graph", "Plot point-spread functions (PSFs) and cross-talk functions (CTFs)", "Compute cross-talk functions for LCMV beamformers", "Plot point-spread functions (PSFs) for a volume", "Compute Rap-Music on evoked data", "Reading an inverse operator", "Reading an STC file", "Compute spatial resolution metrics in source space", "Compute spatial resolution metrics to compare MEG with EEG+MEG", "Computation times", "Estimate data SNR using an inverse", "Computing source space SNR", "Compute MxNE with time-frequency sparse prior", "Plotting the full vector-valued MNE solution", "Getting averaging info from .fif files", "Input/Output", "How to use data in neural ensemble (NEO) format", "Reading/Writing a noise covariance matrix", "Reading XDF EEG data", "Computation times", "Cortical Signal Suppression (CSS) for removal of cortical signals", "Define target events based on time lag, plot evoked response", "Identify EEG Electrodes Bridged by too much Gel", "Transform EEG data using current source density (CSD)", "Show EOG artifact timing", "Reduce EOG artifacts through regression", "Find MEG reference channel artifacts", "Visualise NIRS artifact correction methods", "Compare the different ICA algorithms in MNE", "Preprocessing", "Interpolate bad channels for MEG/EEG channels", "Maxwell filter data with movement compensation", "Annotate movement artifacts and reestimate dev_head_t", "Annotate muscle artifacts", "Removing muscle ICA components", "Plot sensor denoising using oversampled temporal projection", "Computation times", "Shifting time-scale in evoked data", "Remap MEG channel types", "XDAWN Denoising", "Data Simulation", "Compare simulated and estimated source activity", "Computation times", "Generate simulated evoked data", "Generate simulated raw data", "Simulate raw data using subject anatomy", "Generate simulated source data", "Permutation F-test on sensor data with 1D cluster level", "FDR correction on T-test on sensor data", "Statistics Examples", "Regression on continuous data (rER[P/F])", "Permutation T-test on sensor data", "Analysing continuous features with binning and regression in sensor space", "Computation times", "Compute a cross-spectral density (CSD) matrix", "Compute Power Spectral Density of inverse solution from single epochs", "Time-Frequency Examples", "Computation times", "Compute power and phase lock in label of the source space", "Compute source power spectral density (PSD) in a label", "Compute source power spectral density (PSD) of VectorView and OPM data", "Compute induced power in the source space with dSPM", "Temporal whitening with AR model", "Compute and visualize ERDS maps", "Explore event-related dynamics for specific frequency bands", "Time-frequency on simulated data (Multitaper vs. Morlet vs. Stockwell vs. Hilbert)", "How to convert 3D electrode positions to a 2D image", "Plotting with <code class=\"docutils literal notranslate\"><span class=\"pre\">mne.viz.Brain</span></code>", "Visualize channel over epochs as an image", "Plotting EEG sensors on the scalp", "Plotting topographic arrowmaps of evoked data", "Plotting topographic maps of evoked data", "Whitening evoked data with a noise covariance", "Visualization", "Plotting sensor layouts of MEG systems", "Plot the MNE brain and helmet", "Plotting sensor layouts of EEG systems", "Plot a cortical parcellation", "Make figures more publication ready", "Plot single trial activity, grouped by ROI and sorted by RT", "Show noise levels from empty room data", "Computation times", "Sensitivity map of SSP projections", "Compare evoked responses for different conditions", "Plot custom topographies for MEG sensors", "Cross-hemisphere comparison", "Locating intracranial electrode contacts", "Working with sEEG data", "Working with ECoG data", "Sleep stage classification from polysomnography (PSG) data", "Clinical applications", "Computation times", "The Epochs data structure: discontinuous data", "Regression-based baseline correction", "Visualizing epoched data", "Working with Epoch metadata", "Auto-generating Epochs metadata", "Exporting Epochs to Pandas DataFrames", "Divide continuous data into equally-spaced epochs", "Segmenting continuous data into epochs", "Computation times", "The Evoked data structure: evoked/averaged data", "Visualizing Evoked data", "EEG analysis - Event-Related Potentials (ERPs)", "Plotting whitened data", "Estimating evoked responses", "Computation times", "FreeSurfer MRI reconstruction", "Source alignment and coordinate frames", "Using an automated approach to coregistration", "Head model and forward computation", "EEG forward operator with a template MRI", "How MNE uses FreeSurfer\u2019s outputs", "Fixing BEM and head surfaces", "Computing a covariance matrix", "Forward models and source spaces", "Computation times", "Tutorials", "Overview of MEG/EEG analysis with MNE-Python", "Modifying data in-place", "Parsing events from raw data", "The Info data structure", "Working with sensor locations", "Configuring MNE-Python", "Getting started with mne.Report", "Introductory tutorials", "Computation times", "The SourceEstimate data structure", "Source localization with equivalent current dipole (ECD) fit", "Source localization with MNE, dSPM, sLORETA, and eLORETA", "The role of dipole orientations in distributed source localization", "Computing various MNE solutions", "Source reconstruction using an LCMV beamformer", "Visualize source time courses (stcs)", "EEG source localization given electrode locations on an MRI", "Brainstorm Elekta phantom dataset tutorial", "Brainstorm CTF phantom dataset tutorial", "4D Neuroimaging/BTi phantom dataset tutorial", "Source localization and inverses", "Computation times", "Importing data from MEG devices", "Importing data from EEG devices", "Importing data from fNIRS devices", "Working with CTF data: the Brainstorm auditory dataset", "Reading data for different recording systems", "Computation times", "Spectro-temporal receptive field (STRF) estimation on continuous data", "Decoding (MVPA)", "Machine learning models of neural activity", "Computation times", "Overview of artifact detection", "Handling bad channels", "Rejecting bad data spans and breaks", "Background information on filtering", "Filtering and resampling data", "Repairing artifacts with regression", "Repairing artifacts with ICA", "Background on projectors and projections", "Repairing artifacts with SSP", "Setting the EEG reference", "Extracting and visualizing subject head movement", "Signal-space separation (SSS) and Maxwell filtering", "Preprocessing functional near-infrared spectroscopy (fNIRS) data", "Preprocessing optically pumped magnetometer (OPM) MEG data", "Preprocessing", "Computation times", "The Raw data structure: continuous data", "Working with events", "Annotating continuous data", "Built-in plotting methods for Raw objects", "Working with continuous data", "Computation times", "Creating MNE-Python data structures from scratch", "Corrupt known signal with point spread", "DICS for power mapping", "Simulation", "Computation times", "Statistical inference", "Visualising statistical significance thresholds on EEG data", "Non-parametric 1 sample cluster statistic on single trial power", "Non-parametric between conditions cluster statistic on single trial power", "Mass-univariate twoway repeated measures ANOVA on single trial power", "Spatiotemporal permutation F-test on full sensor data", "Statistical analysis of sensor data", "Computation times", "Permutation t-test on source data with spatio-temporal clustering", "2 samples permutation test on source data with spatio-temporal clustering", "Repeated measures ANOVA on source data with spatio-temporal clustering", "Statistical analysis of source estimates", "Computation times", "The Spectrum and EpochsSpectrum classes: frequency-domain data", "Frequency and time-frequency sensor analysis", "Frequency-tagging: Basic analysis of an SSVEP/vSSR dataset", "Time-frequency analysis", "Computation times", "General bibliography", "Papers citing MNE-Python", "Connectivity Estimation", "Covariance computation", "Creating data objects from arrays", "Datasets", "Decoding", "Events", "Exporting", "File I/O", "Forward Modeling", "Funding and other support", "Command line tools using Python", "mne.AcqParserFIF", "mne.Annotations", "mne.BaseEpochs", "mne.BiHemiLabel", "mne.Covariance", "mne.Dipole", "mne.DipoleFixed", "mne.Epochs", "mne.EpochsArray", "mne.Evoked", "mne.EvokedArray", "mne.Forward", "mne.Info", "mne.Label", "mne.MixedSourceEstimate", "mne.MixedVectorSourceEstimate", "mne.Projection", "mne.Report", "mne.SourceEstimate", "mne.SourceMorph", "mne.SourceSpaces", "mne.VectorSourceEstimate", "mne.VolSourceEstimate", "mne.VolVectorSourceEstimate", "mne.add_reference_channels", "mne.add_source_space_distances", "mne.annotations_from_events", "mne.apply_forward", "mne.apply_forward_raw", "mne.average_forward_solutions", "mne.baseline.rescale", "mne.beamformer.Beamformer", "mne.beamformer.apply_dics", "mne.beamformer.apply_dics_csd", "mne.beamformer.apply_dics_epochs", "mne.beamformer.apply_dics_tfr_epochs", "mne.beamformer.apply_lcmv", "mne.beamformer.apply_lcmv_cov", "mne.beamformer.apply_lcmv_epochs", "mne.beamformer.apply_lcmv_raw", "mne.beamformer.make_dics", "mne.beamformer.make_lcmv", "mne.beamformer.make_lcmv_resolution_matrix", "mne.beamformer.rap_music", "mne.beamformer.read_beamformer", "mne.bem.ConductorModel", "mne.bem.convert_flash_mris", "mne.bem.distance_to_bem", "mne.bem.fit_sphere_to_headshape", "mne.bem.get_fitting_dig", "mne.bem.make_flash_bem", "mne.bem.make_scalp_surfaces", "mne.bem.make_watershed_bem", "mne.channel_indices_by_type", "mne.channel_type", "mne.channels.DigMontage", "mne.channels.Layout", "mne.channels.combine_channels", "mne.channels.compute_dev_head_t", "mne.channels.compute_native_head_t", "mne.channels.equalize_channels", "mne.channels.find_ch_adjacency", "mne.channels.find_layout", "mne.channels.fix_mag_coil_types", "mne.channels.generate_2d_layout", "mne.channels.get_builtin_ch_adjacencies", "mne.channels.get_builtin_montages", "mne.channels.make_1020_channel_selections", "mne.channels.make_dig_montage", "mne.channels.make_eeg_layout", "mne.channels.make_grid_layout", "mne.channels.make_standard_montage", "mne.channels.read_ch_adjacency", "mne.channels.read_custom_montage", "mne.channels.read_dig_captrak", "mne.channels.read_dig_dat", "mne.channels.read_dig_egi", "mne.channels.read_dig_fif", "mne.channels.read_dig_hpts", "mne.channels.read_dig_localite", "mne.channels.read_dig_polhemus_isotrak", "mne.channels.read_layout", "mne.channels.read_polhemus_fastscan", "mne.channels.rename_channels", "mne.chpi.compute_chpi_amplitudes", "mne.chpi.compute_chpi_locs", "mne.chpi.compute_chpi_snr", "mne.chpi.compute_head_pos", "mne.chpi.extract_chpi_locs_ctf", "mne.chpi.extract_chpi_locs_kit", "mne.chpi.filter_chpi", "mne.chpi.get_active_chpi", "mne.chpi.get_chpi_info", "mne.chpi.head_pos_to_trans_rot_t", "mne.chpi.read_head_pos", "mne.chpi.write_head_pos", "mne.combine_evoked", "mne.compute_covariance", "mne.compute_proj_epochs", "mne.compute_proj_evoked", "mne.compute_proj_raw", "mne.compute_rank", "mne.compute_raw_covariance", "mne.compute_source_morph", "mne.concatenate_epochs", "mne.concatenate_events", "mne.concatenate_raws", "mne.convert_forward_solution", "mne.coreg.Coregistration", "mne.coreg.estimate_head_mri_t", "mne.coreg.get_mni_fiducials", "mne.count_events", "mne.cov.compute_whitener", "mne.cov.prepare_noise_cov", "mne.cov.regularize", "mne.create_default_subject", "mne.create_info", "mne.cuda.get_cuda_memory", "mne.cuda.init_cuda", "mne.cuda.set_cuda_device", "mne.datasets.brainstorm.bst_auditory.data_path", "mne.datasets.brainstorm.bst_raw.data_path", "mne.datasets.brainstorm.bst_resting.data_path", "mne.datasets.eegbci.load_data", "mne.datasets.eegbci.standardize", "mne.datasets.epilepsy_ecog.data_path", "mne.datasets.erp_core.data_path", "mne.datasets.fetch_aparc_sub_parcellation", "mne.datasets.fetch_dataset", "mne.datasets.fetch_fsaverage", "mne.datasets.fetch_hcp_mmp_parcellation", "mne.datasets.fetch_infant_template", "mne.datasets.fetch_phantom", "mne.datasets.fnirs_motor.data_path", "mne.datasets.has_dataset", "mne.datasets.hf_sef.data_path", "mne.datasets.kiloword.data_path", "mne.datasets.limo.load_data", "mne.datasets.misc.data_path", "mne.datasets.mtrf.data_path", "mne.datasets.multimodal.data_path", "mne.datasets.opm.data_path", "mne.datasets.phantom_4dbti.data_path", "mne.datasets.refmeg_noise.data_path", "mne.datasets.sample.data_path", "mne.datasets.sleep_physionet.age.fetch_data", "mne.datasets.sleep_physionet.temazepam.fetch_data", "mne.datasets.somato.data_path", "mne.datasets.spm_face.data_path", "mne.datasets.ssvep.data_path", "mne.datasets.ucl_opm_auditory.data_path", "mne.datasets.visual_92_categories.data_path", "mne.decimate_surface", "mne.decoding.CSP", "mne.decoding.EMS", "mne.decoding.FilterEstimator", "mne.decoding.GeneralizingEstimator", "mne.decoding.LinearModel", "mne.decoding.PSDEstimator", "mne.decoding.ReceptiveField", "mne.decoding.SPoC", "mne.decoding.SSD", "mne.decoding.Scaler", "mne.decoding.SlidingEstimator", "mne.decoding.TemporalFilter", "mne.decoding.TimeDelayingRidge", "mne.decoding.TimeFrequency", "mne.decoding.UnsupervisedSpatialFilter", "mne.decoding.Vectorizer", "mne.decoding.compute_ems", "mne.decoding.cross_val_multiscore", "mne.decoding.get_coef", "mne.dig_mri_distances", "mne.dipole.get_phantom_dipoles", "mne.epochs.average_movements", "mne.epochs.combine_event_ids", "mne.epochs.equalize_epoch_counts", "mne.epochs.make_metadata", "mne.equalize_channels", "mne.event.define_target_events", "mne.event.match_event_names", "mne.event.shift_time_events", "mne.events_from_annotations", "mne.export.export_epochs", "mne.export.export_evokeds", "mne.export.export_evokeds_mff", "mne.export.export_raw", "mne.extract_label_time_course", "mne.filter.construct_iir_filter", "mne.filter.create_filter", "mne.filter.estimate_ringing_samples", "mne.filter.filter_data", "mne.filter.notch_filter", "mne.filter.resample", "mne.find_events", "mne.find_stim_steps", "mne.fit_dipole", "mne.forward.compute_depth_prior", "mne.forward.compute_orient_prior", "mne.forward.restrict_forward_to_label", "mne.forward.restrict_forward_to_stc", "mne.get_config", "mne.get_config_path", "mne.get_head_surf", "mne.get_meg_helmet_surf", "mne.get_montage_volume_labels", "mne.get_volume_labels_from_aseg", "mne.get_volume_labels_from_src", "mne.grade_to_tris", "mne.grade_to_vertices", "mne.grand_average", "mne.grow_labels", "mne.gui.coregistration", "mne.gui.locate_ieeg", "mne.head_to_mni", "mne.head_to_mri", "mne.inverse_sparse.gamma_map", "mne.inverse_sparse.make_stc_from_dipoles", "mne.inverse_sparse.mixed_norm", "mne.inverse_sparse.tf_mixed_norm", "mne.io.BaseRaw", "mne.io.Raw", "mne.io.RawArray", "mne.io.anonymize_info", "mne.io.kit.read_mrk", "mne.io.read_fiducials", "mne.io.read_info", "mne.io.read_raw", "mne.io.read_raw_artemis123", "mne.io.read_raw_bdf", "mne.io.read_raw_boxy", "mne.io.read_raw_brainvision", "mne.io.read_raw_bti", "mne.io.read_raw_cnt", "mne.io.read_raw_ctf", "mne.io.read_raw_curry", "mne.io.read_raw_edf", "mne.io.read_raw_eeglab", "mne.io.read_raw_egi", "mne.io.read_raw_eximia", "mne.io.read_raw_fieldtrip", "mne.io.read_raw_fif", "mne.io.read_raw_fil", "mne.io.read_raw_gdf", "mne.io.read_raw_hitachi", "mne.io.read_raw_kit", "mne.io.read_raw_nedf", "mne.io.read_raw_nicolet", "mne.io.read_raw_nihon", "mne.io.read_raw_nirx", "mne.io.read_raw_persyst", "mne.io.read_raw_snirf", "mne.io.show_fiff", "mne.io.write_fiducials", "mne.label.select_sources", "mne.label_sign_flip", "mne.labels_to_stc", "mne.make_ad_hoc_cov", "mne.make_bem_model", "mne.make_bem_solution", "mne.make_field_map", "mne.make_fixed_length_epochs", "mne.make_fixed_length_events", "mne.make_forward_dipole", "mne.make_forward_solution", "mne.make_sphere_model", "mne.merge_events", "mne.minimum_norm.InverseOperator", "mne.minimum_norm.apply_inverse", "mne.minimum_norm.apply_inverse_cov", "mne.minimum_norm.apply_inverse_epochs", "mne.minimum_norm.apply_inverse_raw", "mne.minimum_norm.apply_inverse_tfr_epochs", "mne.minimum_norm.compute_rank_inverse", "mne.minimum_norm.compute_source_psd", "mne.minimum_norm.compute_source_psd_epochs", "mne.minimum_norm.estimate_snr", "mne.minimum_norm.get_cross_talk", "mne.minimum_norm.get_point_spread", "mne.minimum_norm.make_inverse_operator", "mne.minimum_norm.make_inverse_resolution_matrix", "mne.minimum_norm.prepare_inverse_operator", "mne.minimum_norm.read_inverse_operator", "mne.minimum_norm.resolution_metrics", "mne.minimum_norm.source_band_induced_power", "mne.minimum_norm.source_induced_power", "mne.minimum_norm.write_inverse_operator", "mne.morph_labels", "mne.morph_source_spaces", "mne.open_docs", "mne.open_report", "mne.parse_config", "mne.pick_channels", "mne.pick_channels_cov", "mne.pick_channels_forward", "mne.pick_channels_regexp", "mne.pick_events", "mne.pick_info", "mne.pick_types", "mne.pick_types_forward", "mne.preprocessing.EOGRegression", "mne.preprocessing.ICA", "mne.preprocessing.Xdawn", "mne.preprocessing.annotate_amplitude", "mne.preprocessing.annotate_break", "mne.preprocessing.annotate_movement", "mne.preprocessing.annotate_muscle_zscore", "mne.preprocessing.annotate_nan", "mne.preprocessing.compute_average_dev_head_t", "mne.preprocessing.compute_bridged_electrodes", "mne.preprocessing.compute_current_source_density", "mne.preprocessing.compute_fine_calibration", "mne.preprocessing.compute_maxwell_basis", "mne.preprocessing.compute_proj_ecg", "mne.preprocessing.compute_proj_eog", "mne.preprocessing.corrmap", "mne.preprocessing.cortical_signal_suppression", "mne.preprocessing.create_ecg_epochs", "mne.preprocessing.create_eog_epochs", "mne.preprocessing.equalize_bads", "mne.preprocessing.find_bad_channels_maxwell", "mne.preprocessing.find_ecg_events", "mne.preprocessing.find_eog_events", "mne.preprocessing.fix_stim_artifact", "mne.preprocessing.ica_find_ecg_events", "mne.preprocessing.ica_find_eog_events", "mne.preprocessing.ieeg.project_sensors_onto_brain", "mne.preprocessing.infomax", "mne.preprocessing.interpolate_bridged_electrodes", "mne.preprocessing.maxwell_filter", "mne.preprocessing.maxwell_filter_prepare_emptyroom", "mne.preprocessing.nirs.beer_lambert_law", "mne.preprocessing.nirs.optical_density", "mne.preprocessing.nirs.scalp_coupling_index", "mne.preprocessing.nirs.short_channels", "mne.preprocessing.nirs.source_detector_distances", "mne.preprocessing.nirs.temporal_derivative_distribution_repair", "mne.preprocessing.oversampled_temporal_projection", "mne.preprocessing.peak_finder", "mne.preprocessing.read_eog_regression", "mne.preprocessing.read_fine_calibration", "mne.preprocessing.read_ica", "mne.preprocessing.read_ica_eeglab", "mne.preprocessing.realign_raw", "mne.preprocessing.regress_artifact", "mne.preprocessing.write_fine_calibration", "mne.random_parcellation", "mne.read_annotations", "mne.read_bem_solution", "mne.read_bem_surfaces", "mne.read_cov", "mne.read_dipole", "mne.read_epochs", "mne.read_epochs_eeglab", "mne.read_epochs_fieldtrip", "mne.read_epochs_kit", "mne.read_events", "mne.read_evoked_besa", "mne.read_evoked_fieldtrip", "mne.read_evokeds", "mne.read_evokeds_mff", "mne.read_forward_solution", "mne.read_freesurfer_lut", "mne.read_label", "mne.read_labels_from_annot", "mne.read_lta", "mne.read_morph_map", "mne.read_proj", "mne.read_reject_parameters", "mne.read_source_estimate", "mne.read_source_morph", "mne.read_source_spaces", "mne.read_surface", "mne.read_talxfm", "mne.read_trans", "mne.read_tri", "mne.read_vectorview_selection", "mne.rename_channels", "mne.scale_bem", "mne.scale_labels", "mne.scale_mri", "mne.scale_source_space", "mne.sensitivity_map", "mne.set_bipolar_reference", "mne.set_cache_dir", "mne.set_config", "mne.set_eeg_reference", "mne.set_log_file", "mne.set_log_level", "mne.setup_source_space", "mne.setup_volume_source_space", "mne.simulation.SourceSimulator", "mne.simulation.add_chpi", "mne.simulation.add_ecg", "mne.simulation.add_eog", "mne.simulation.add_noise", "mne.simulation.metrics.cosine_score", "mne.simulation.metrics.f1_score", "mne.simulation.metrics.peak_position_error", "mne.simulation.metrics.precision_score", "mne.simulation.metrics.recall_score", "mne.simulation.metrics.region_localization_error", "mne.simulation.metrics.roc_auc_score", "mne.simulation.metrics.spatial_deviation_error", "mne.simulation.select_source_in_label", "mne.simulation.simulate_evoked", "mne.simulation.simulate_raw", "mne.simulation.simulate_sparse_stc", "mne.simulation.simulate_stc", "mne.source_space.compute_distance_to_sensors", "mne.source_space.get_decimated_surfaces", "mne.spatial_dist_adjacency", "mne.spatial_inter_hemi_adjacency", "mne.spatial_src_adjacency", "mne.spatial_tris_adjacency", "mne.spatio_temporal_dist_adjacency", "mne.spatio_temporal_src_adjacency", "mne.spatio_temporal_tris_adjacency", "mne.split_label", "mne.stats.bonferroni_correction", "mne.stats.bootstrap_confidence_interval", "mne.stats.combine_adjacency", "mne.stats.f_mway_rm", "mne.stats.f_oneway", "mne.stats.f_threshold_mway_rm", "mne.stats.fdr_correction", "mne.stats.linear_regression", "mne.stats.linear_regression_raw", "mne.stats.permutation_cluster_1samp_test", "mne.stats.permutation_cluster_test", "mne.stats.permutation_t_test", "mne.stats.spatio_temporal_cluster_1samp_test", "mne.stats.spatio_temporal_cluster_test", "mne.stats.summarize_clusters_stc", "mne.stats.ttest_1samp_no_p", "mne.stats.ttest_ind_no_p", "mne.stc_near_sensors", "mne.stc_to_label", "mne.surface.complete_surface_info", "mne.surface.read_curvature", "mne.sys_info", "mne.time_frequency.AverageTFR", "mne.time_frequency.CrossSpectralDensity", "mne.time_frequency.EpochsSpectrum", "mne.time_frequency.EpochsTFR", "mne.time_frequency.Spectrum", "mne.time_frequency.csd_array_fourier", "mne.time_frequency.csd_array_morlet", "mne.time_frequency.csd_array_multitaper", "mne.time_frequency.csd_fourier", "mne.time_frequency.csd_morlet", "mne.time_frequency.csd_multitaper", "mne.time_frequency.csd_tfr", "mne.time_frequency.dpss_windows", "mne.time_frequency.fit_iir_model_raw", "mne.time_frequency.fwhm", "mne.time_frequency.istft", "mne.time_frequency.morlet", "mne.time_frequency.pick_channels_csd", "mne.time_frequency.psd_array_multitaper", "mne.time_frequency.psd_array_welch", "mne.time_frequency.read_csd", "mne.time_frequency.read_spectrum", "mne.time_frequency.read_tfrs", "mne.time_frequency.stft", "mne.time_frequency.stftfreq", "mne.time_frequency.tfr.cwt", "mne.time_frequency.tfr.morlet", "mne.time_frequency.tfr_array_morlet", "mne.time_frequency.tfr_array_multitaper", "mne.time_frequency.tfr_array_stockwell", "mne.time_frequency.tfr_morlet", "mne.time_frequency.tfr_multitaper", "mne.time_frequency.tfr_stockwell", "mne.time_frequency.write_tfrs", "mne.transform_surface_to", "mne.transforms.Transform", "mne.transforms.apply_volume_registration", "mne.transforms.compute_volume_registration", "mne.transforms.quat_to_rot", "mne.transforms.read_ras_mni_t", "mne.transforms.rot_to_quat", "mne.use_coil_def", "mne.use_log_level", "mne.utils.deprecated", "mne.utils.warn", "mne.verbose", "mne.vertex_to_mni", "mne.viz.Brain", "mne.viz.ClickableImage", "mne.viz.Figure3D", "mne.viz.add_background_image", "mne.viz.centers_to_edges", "mne.viz.circular_layout", "mne.viz.close_3d_figure", "mne.viz.close_all_3d_figures", "mne.viz.compare_fiff", "mne.viz.create_3d_figure", "mne.viz.get_3d_backend", "mne.viz.get_brain_class", "mne.viz.get_browser_backend", "mne.viz.iter_topography", "mne.viz.link_brains", "mne.viz.mne_analyze_colormap", "mne.viz.plot_alignment", "mne.viz.plot_arrowmap", "mne.viz.plot_bem", "mne.viz.plot_brain_colorbar", "mne.viz.plot_bridged_electrodes", "mne.viz.plot_ch_adjacency", "mne.viz.plot_channel_labels_circle", "mne.viz.plot_chpi_snr", "mne.viz.plot_compare_evokeds", "mne.viz.plot_cov", "mne.viz.plot_csd", "mne.viz.plot_dipole_amplitudes", "mne.viz.plot_dipole_locations", "mne.viz.plot_drop_log", "mne.viz.plot_epochs", "mne.viz.plot_epochs_image", "mne.viz.plot_epochs_psd_topomap", "mne.viz.plot_events", "mne.viz.plot_evoked", "mne.viz.plot_evoked_field", "mne.viz.plot_evoked_image", "mne.viz.plot_evoked_joint", "mne.viz.plot_evoked_topo", "mne.viz.plot_evoked_topomap", "mne.viz.plot_evoked_white", "mne.viz.plot_filter", "mne.viz.plot_head_positions", "mne.viz.plot_ica_components", "mne.viz.plot_ica_overlay", "mne.viz.plot_ica_properties", "mne.viz.plot_ica_scores", "mne.viz.plot_ica_sources", "mne.viz.plot_ideal_filter", "mne.viz.plot_layout", "mne.viz.plot_montage", "mne.viz.plot_projs_joint", "mne.viz.plot_projs_topomap", "mne.viz.plot_raw", "mne.viz.plot_raw_psd", "mne.viz.plot_regression_weights", "mne.viz.plot_sensors", "mne.viz.plot_snr_estimate", "mne.viz.plot_source_estimates", "mne.viz.plot_sparse_source_estimates", "mne.viz.plot_tfr_topomap", "mne.viz.plot_topo_image_epochs", "mne.viz.plot_topomap", "mne.viz.plot_vector_source_estimates", "mne.viz.plot_volume_source_estimates", "mne.viz.set_3d_backend", "mne.viz.set_3d_options", "mne.viz.set_3d_title", "mne.viz.set_3d_view", "mne.viz.set_browser_backend", "mne.viz.snapshot_brain_montage", "mne.viz.use_3d_backend", "mne.viz.use_browser_backend", "mne.warp_montage_volume", "mne.what", "mne.write_bem_solution", "mne.write_bem_surfaces", "mne.write_cov", "mne.write_events", "mne.write_evokeds", "mne.write_forward_solution", "mne.write_head_bem", "mne.write_label", "mne.write_labels_to_annot", "mne.write_proj", "mne.write_source_spaces", "mne.write_surface", "mne.write_trans", "Glossary", "MNE", "Advanced setup", "Testing your installation", "Contributing guide", "Installing FreeSurfer", "Installing MNE-Python", "MNE-Python installers", "Install via <code class=\"code docutils literal notranslate\"><span class=\"pre\">pip</span></code> or <code class=\"code docutils literal notranslate\"><span class=\"pre\">conda</span></code>", "Installing Python", "Installing MNE-C", "Overview of the MNE tools suite", "Updating MNE-Python", "Inverse Solutions", "Logging and Configuration", "Martinos Center setup", "MNE with CPP", "Most-used classes", "MRI Processing", "How to cite MNE-Python", "The typical M/EEG workflow", "Datasets Overview", "Design philosophy", "MNE-Python Development", "Frequently Asked Questions (FAQ)", "Getting help", "Project Governance", "Algorithms and other implementation details", "Documentation overview", "Getting started with Python", "MNE-MATLAB documentation", "Migrating from other analysis software", "Current steering council and institutional partners", "Roadmap", "Preprocessing", "Python API Reference", "Reading raw data", "Realtime", "MNE-Report", "Sensor Space Data", "Simulation", "Source Space Data", "Statistics", "Time-Frequency", "Visualization", "What\u2019s new"], "terms": {"3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875], "7": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875], "demonstr": [0, 5, 19, 27, 33, 41, 43, 44, 45, 63, 69, 70, 72, 78, 82, 97, 101, 112, 115, 144, 145, 150, 151, 160, 167, 169, 170, 171, 189, 193, 197, 199, 200, 202, 203, 206, 208, 213, 220, 221, 224, 232, 237, 572, 843, 852, 855, 858, 859, 876], "sensor": [0, 4, 5, 11, 15, 16, 17, 20, 23, 25, 27, 28, 32, 34, 41, 42, 45, 49, 67, 69, 70, 76, 77, 78, 83, 86, 88, 90, 92, 93, 96, 100, 101, 107, 117, 118, 120, 122, 125, 128, 130, 133, 143, 145, 149, 150, 155, 156, 157, 158, 161, 165, 167, 168, 171, 172, 173, 174, 175, 177, 179, 180, 181, 182, 183, 184, 185, 187, 190, 197, 198, 200, 202, 203, 204, 206, 207, 208, 213, 221, 224, 225, 226, 231, 237, 240, 241, 242, 255, 257, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 282, 283, 295, 296, 297, 303, 304, 308, 309, 310, 311, 316, 317, 318, 319, 321, 322, 324, 325, 326, 327, 336, 338, 340, 342, 347, 352, 353, 354, 355, 356, 362, 367, 368, 369, 371, 408, 409, 410, 411, 412, 415, 416, 417, 418, 423, 424, 426, 427, 428, 449, 451, 452, 459, 468, 475, 476, 477, 478, 481, 483, 486, 487, 489, 500, 512, 518, 519, 520, 524, 526, 529, 530, 534, 547, 552, 553, 555, 556, 557, 561, 567, 570, 581, 584, 589, 590, 592, 595, 607, 610, 611, 616, 629, 631, 632, 637, 648, 649, 660, 661, 664, 674, 676, 680, 681, 683, 684, 685, 686, 687, 691, 696, 697, 698, 699, 700, 726, 727, 728, 743, 756, 759, 760, 763, 764, 766, 767, 768, 769, 773, 775, 777, 778, 779, 781, 782, 783, 785, 786, 792, 795, 796, 798, 799, 803, 804, 805, 810, 811, 813, 816, 831, 836, 842, 851, 852, 853, 855, 861, 864, 865, 866, 876], "sourc": [0, 1, 2, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 28, 29, 35, 37, 40, 46, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 94, 95, 97, 98, 99, 101, 103, 104, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 156, 159, 160, 161, 163, 165, 166, 167, 168, 169, 170, 174, 178, 182, 183, 184, 186, 187, 188, 189, 190, 193, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 213, 214, 215, 216, 219, 221, 224, 225, 226, 227, 228, 229, 236, 237, 238, 239, 242, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 839, 841, 842, 844, 847, 852, 855, 856, 857, 861, 866, 876], "space": [0, 5, 10, 17, 20, 22, 23, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 59, 60, 67, 73, 81, 86, 88, 90, 91, 92, 93, 96, 100, 103, 104, 106, 107, 111, 113, 117, 118, 122, 125, 129, 132, 133, 134, 135, 139, 146, 147, 150, 154, 155, 159, 161, 165, 167, 169, 171, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 190, 193, 197, 203, 206, 211, 212, 213, 216, 219, 221, 224, 225, 229, 231, 233, 236, 237, 238, 242, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 282, 283, 295, 296, 310, 314, 323, 328, 340, 342, 345, 346, 349, 353, 354, 355, 357, 358, 361, 362, 365, 367, 371, 408, 411, 412, 415, 416, 418, 422, 425, 426, 429, 437, 442, 449, 453, 462, 464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 481, 484, 491, 510, 511, 516, 518, 519, 522, 523, 524, 525, 526, 527, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 543, 552, 553, 555, 556, 566, 567, 568, 569, 575, 584, 605, 607, 611, 614, 616, 618, 619, 626, 628, 631, 633, 635, 636, 637, 644, 645, 646, 653, 656, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 672, 680, 681, 683, 684, 686, 687, 688, 691, 692, 696, 698, 700, 708, 730, 743, 759, 761, 767, 773, 774, 775, 776, 779, 780, 782, 785, 786, 790, 795, 796, 798, 801, 802, 803, 806, 807, 811, 816, 828, 831, 841, 852, 855, 864, 866, 876], "function": [0, 1, 4, 8, 16, 19, 27, 31, 36, 44, 45, 54, 55, 56, 57, 59, 70, 73, 75, 90, 92, 93, 99, 101, 107, 110, 111, 112, 113, 114, 127, 131, 133, 134, 135, 139, 140, 142, 143, 145, 148, 149, 150, 151, 154, 155, 156, 157, 159, 160, 164, 165, 166, 167, 168, 169, 170, 171, 177, 179, 181, 182, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 219, 220, 221, 226, 228, 229, 237, 238, 239, 242, 244, 247, 248, 254, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 286, 287, 289, 295, 296, 297, 301, 303, 305, 310, 315, 316, 318, 319, 327, 328, 330, 338, 339, 340, 345, 351, 352, 353, 354, 355, 356, 357, 358, 359, 362, 363, 369, 371, 373, 384, 387, 408, 411, 412, 413, 414, 415, 416, 417, 418, 425, 427, 429, 432, 433, 434, 435, 437, 439, 440, 441, 442, 443, 447, 448, 449, 451, 465, 466, 469, 470, 474, 475, 476, 477, 482, 484, 485, 487, 488, 491, 493, 495, 496, 498, 500, 504, 506, 507, 509, 511, 519, 522, 523, 526, 529, 530, 531, 532, 533, 534, 535, 537, 538, 545, 551, 553, 555, 556, 558, 559, 560, 565, 566, 567, 568, 569, 570, 572, 573, 575, 578, 582, 584, 585, 586, 587, 588, 590, 591, 598, 601, 602, 605, 608, 609, 610, 611, 612, 613, 614, 616, 619, 624, 632, 635, 638, 641, 645, 646, 648, 649, 650, 659, 660, 662, 663, 680, 682, 683, 684, 685, 686, 687, 691, 692, 695, 696, 697, 698, 699, 700, 703, 706, 708, 714, 715, 724, 726, 727, 733, 737, 738, 739, 740, 741, 743, 753, 756, 758, 759, 760, 767, 769, 773, 775, 776, 781, 782, 783, 786, 789, 794, 795, 797, 798, 799, 801, 803, 805, 806, 807, 808, 812, 831, 833, 842, 843, 844, 850, 851, 852, 853, 858, 859, 862, 864, 865, 866, 868, 870, 873, 874, 876], "ha": [0, 1, 5, 9, 10, 27, 32, 42, 45, 49, 54, 69, 70, 73, 77, 81, 82, 91, 92, 101, 107, 112, 124, 125, 133, 135, 139, 141, 143, 144, 145, 148, 149, 150, 154, 155, 156, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 179, 180, 181, 182, 184, 187, 188, 189, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 214, 216, 219, 221, 224, 225, 229, 237, 239, 244, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 282, 283, 286, 287, 288, 289, 295, 296, 300, 301, 306, 352, 356, 357, 358, 367, 368, 369, 375, 376, 377, 380, 381, 383, 387, 388, 389, 391, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 408, 414, 415, 429, 444, 446, 447, 449, 451, 452, 455, 468, 471, 473, 474, 476, 477, 478, 484, 485, 496, 504, 520, 522, 523, 524, 526, 534, 555, 556, 557, 559, 570, 581, 584, 591, 614, 615, 633, 636, 677, 678, 683, 684, 686, 687, 696, 697, 698, 699, 700, 703, 712, 714, 722, 723, 724, 726, 727, 731, 753, 767, 775, 777, 779, 780, 781, 782, 783, 786, 788, 790, 795, 796, 797, 798, 799, 801, 803, 805, 831, 833, 835, 839, 841, 842, 843, 851, 852, 853, 854, 855, 856, 857, 858, 861, 864, 868, 876], "move": [0, 27, 60, 74, 78, 79, 114, 133, 139, 144, 155, 160, 176, 200, 203, 204, 207, 232, 239, 244, 254, 259, 262, 263, 264, 265, 271, 277, 278, 363, 408, 415, 443, 476, 477, 555, 556, 560, 696, 698, 700, 732, 733, 774, 775, 779, 782, 786, 795, 798, 803, 807, 855, 857, 858, 868, 876], "mne_connect": [0, 27, 47, 145, 170, 244, 765], "packag": [0, 27, 145, 159, 165, 188, 194, 198, 199, 200, 203, 221, 224, 244, 254, 256, 262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 280, 352, 353, 355, 357, 370, 371, 411, 418, 421, 424, 425, 451, 464, 466, 476, 477, 514, 515, 518, 519, 529, 530, 539, 540, 561, 568, 569, 644, 647, 648, 649, 661, 683, 684, 685, 686, 687, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 714, 715, 723, 724, 725, 726, 727, 775, 778, 797, 831, 832, 833, 835, 836, 838, 839, 840, 841, 842, 846, 850, 852, 853, 864, 876], "can": [0, 4, 5, 7, 12, 13, 15, 16, 19, 21, 22, 24, 26, 27, 31, 32, 40, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 69, 70, 73, 74, 77, 78, 80, 81, 82, 86, 92, 93, 97, 99, 101, 107, 110, 111, 112, 113, 114, 117, 118, 119, 124, 125, 127, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 179, 180, 181, 182, 183, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 221, 224, 225, 226, 227, 229, 232, 233, 234, 237, 238, 239, 242, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 285, 288, 295, 296, 301, 302, 303, 304, 307, 308, 310, 312, 314, 315, 318, 319, 320, 321, 325, 326, 327, 328, 330, 333, 337, 338, 339, 340, 346, 347, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 363, 364, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 380, 381, 383, 386, 387, 388, 389, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 414, 415, 416, 418, 419, 420, 421, 423, 424, 425, 427, 429, 432, 433, 434, 435, 437, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 455, 458, 459, 460, 461, 464, 466, 467, 468, 470, 471, 473, 474, 476, 477, 484, 488, 491, 492, 495, 496, 498, 500, 504, 506, 507, 509, 511, 514, 515, 516, 518, 519, 521, 523, 529, 530, 532, 533, 534, 536, 540, 542, 543, 544, 545, 553, 554, 555, 556, 558, 559, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 583, 584, 585, 588, 590, 591, 592, 598, 599, 602, 604, 607, 608, 609, 610, 613, 614, 615, 617, 619, 621, 627, 631, 632, 633, 635, 636, 638, 641, 643, 644, 645, 652, 659, 660, 661, 662, 664, 666, 668, 670, 671, 675, 676, 682, 683, 684, 685, 686, 687, 688, 689, 691, 692, 695, 696, 697, 698, 699, 700, 704, 705, 706, 707, 709, 712, 719, 722, 724, 726, 727, 730, 732, 733, 738, 740, 741, 743, 744, 748, 751, 756, 759, 760, 761, 762, 763, 764, 765, 766, 767, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 790, 791, 793, 794, 795, 796, 797, 798, 799, 801, 803, 805, 806, 807, 809, 816, 818, 819, 822, 824, 829, 831, 833, 834, 835, 839, 840, 841, 842, 843, 847, 850, 851, 852, 853, 857, 858, 859, 861, 864, 865, 866, 876], "found": [0, 1, 2, 4, 5, 8, 9, 11, 12, 16, 18, 21, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 67, 68, 69, 70, 71, 72, 73, 77, 78, 79, 80, 81, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 110, 111, 112, 114, 115, 117, 118, 119, 122, 125, 126, 127, 130, 133, 134, 135, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 157, 158, 160, 161, 165, 167, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 194, 197, 198, 199, 200, 201, 202, 203, 205, 208, 209, 210, 214, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 238, 254, 255, 257, 259, 262, 263, 264, 265, 267, 271, 286, 300, 316, 317, 327, 346, 347, 363, 375, 376, 377, 378, 380, 381, 388, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 427, 435, 449, 450, 456, 457, 458, 467, 476, 477, 483, 502, 522, 556, 559, 568, 572, 573, 576, 577, 579, 580, 593, 604, 627, 633, 635, 640, 641, 645, 683, 695, 731, 743, 753, 755, 759, 773, 790, 796, 824, 831, 834, 835, 840, 852, 856, 858, 864, 866, 876], "go": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 275, 355, 458, 476, 477, 556, 645, 835, 846, 855, 856, 857, 858], "end": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 280, 285, 286, 310, 315, 322, 338, 339, 341, 352, 355, 357, 408, 414, 415, 420, 426, 431, 432, 433, 448, 449, 476, 477, 489, 496, 497, 502, 517, 529, 537, 539, 540, 541, 555, 556, 559, 572, 573, 578, 594, 596, 598, 605, 607, 614, 615, 616, 622, 626, 630, 632, 652, 653, 654, 655, 656, 658, 661, 673, 696, 697, 699, 701, 702, 703, 704, 705, 706, 707, 709, 718, 729, 731, 743, 773, 782, 787, 790, 796, 803, 817, 818, 819, 820, 822, 823, 827, 828, 829, 830, 831, 833, 835, 855, 857, 858, 861, 876], "download": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 388, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 833, 835, 836, 837, 838, 842, 843, 852, 876], "full": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 237, 238, 239, 262, 263, 264, 265, 267, 269, 270, 273, 275, 276, 278, 295, 296, 298, 316, 317, 352, 356, 357, 358, 367, 368, 369, 408, 413, 415, 416, 421, 438, 441, 451, 452, 471, 473, 474, 476, 477, 522, 523, 534, 537, 553, 556, 611, 614, 625, 676, 682, 683, 685, 687, 699, 710, 712, 714, 721, 722, 724, 726, 727, 733, 743, 759, 761, 764, 767, 773, 775, 783, 790, 796, 801, 806, 808, 809, 812, 833, 835, 841, 847, 851, 852, 857, 876], "exampl": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 148, 149, 150, 151, 154, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 197, 198, 199, 200, 201, 202, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 242, 257, 278, 333, 360, 366, 367, 368, 378, 383, 401, 407, 430, 435, 452, 475, 544, 566, 574, 593, 633, 642, 722, 724, 741, 773, 775, 782, 786, 788, 796, 798, 803, 807, 831, 833, 835, 838, 842, 851, 853, 855, 856, 858, 859, 876], "code": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 238, 239, 242, 253, 257, 262, 263, 264, 265, 272, 281, 347, 435, 437, 447, 449, 452, 475, 476, 477, 484, 493, 500, 524, 584, 593, 609, 682, 698, 700, 725, 728, 743, 775, 777, 797, 831, 839, 851, 854, 855, 857, 858, 859, 862, 864, 871, 874, 876], "here": [1, 4, 5, 7, 9, 10, 11, 12, 15, 18, 19, 21, 28, 31, 33, 34, 38, 41, 42, 43, 45, 65, 69, 70, 73, 74, 80, 81, 82, 88, 92, 93, 98, 99, 102, 107, 109, 110, 112, 114, 115, 118, 119, 125, 131, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 155, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 176, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 221, 224, 225, 226, 228, 229, 232, 233, 234, 238, 239, 268, 272, 273, 275, 277, 278, 332, 358, 383, 389, 414, 425, 432, 448, 475, 509, 519, 521, 531, 556, 572, 582, 585, 599, 601, 614, 645, 648, 649, 650, 659, 660, 662, 683, 684, 685, 686, 687, 691, 776, 807, 833, 835, 842, 843, 852, 855, 858, 859, 860, 862, 876], "we": [1, 4, 5, 7, 9, 10, 11, 13, 16, 18, 19, 21, 22, 26, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 54, 58, 59, 65, 67, 68, 69, 70, 72, 73, 74, 81, 82, 85, 86, 88, 92, 93, 99, 101, 107, 109, 110, 111, 112, 113, 114, 115, 118, 119, 124, 125, 127, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 242, 259, 262, 263, 264, 265, 269, 272, 273, 275, 277, 280, 305, 328, 416, 418, 438, 439, 440, 441, 448, 458, 476, 477, 478, 506, 531, 556, 572, 583, 591, 656, 699, 743, 744, 759, 768, 783, 801, 833, 839, 840, 843, 846, 850, 851, 852, 853, 855, 857, 858, 862, 864, 876], "comput": [1, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 17, 19, 22, 23, 24, 26, 27, 31, 36, 38, 43, 44, 48, 50, 52, 57, 60, 67, 70, 71, 75, 77, 79, 85, 86, 90, 91, 93, 94, 95, 96, 98, 103, 111, 112, 113, 117, 118, 119, 121, 122, 129, 132, 133, 134, 140, 141, 144, 145, 148, 149, 150, 151, 154, 155, 156, 159, 162, 164, 165, 166, 167, 171, 174, 175, 177, 180, 181, 182, 183, 184, 185, 188, 190, 193, 194, 198, 199, 201, 205, 206, 208, 210, 213, 216, 220, 221, 224, 225, 228, 237, 238, 239, 242, 255, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 280, 282, 283, 286, 287, 288, 289, 290, 292, 295, 296, 297, 298, 300, 302, 305, 307, 313, 314, 316, 318, 323, 327, 339, 340, 341, 342, 351, 352, 353, 354, 355, 356, 357, 358, 361, 362, 363, 367, 368, 369, 378, 408, 409, 412, 413, 414, 415, 416, 420, 424, 427, 437, 442, 447, 449, 451, 452, 453, 458, 464, 466, 467, 471, 472, 473, 474, 476, 477, 481, 483, 488, 489, 491, 510, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 553, 554, 556, 557, 560, 563, 564, 566, 567, 568, 569, 572, 575, 581, 582, 601, 603, 604, 605, 606, 611, 614, 615, 616, 618, 619, 626, 628, 631, 633, 635, 637, 639, 641, 644, 645, 646, 651, 652, 653, 654, 655, 656, 657, 658, 661, 664, 666, 667, 668, 669, 670, 671, 672, 677, 678, 679, 682, 683, 684, 686, 687, 691, 692, 693, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 714, 715, 720, 721, 722, 723, 724, 725, 726, 727, 728, 732, 737, 743, 759, 760, 761, 767, 768, 770, 771, 773, 774, 775, 782, 783, 790, 795, 796, 802, 811, 820, 823, 824, 831, 835, 836, 838, 841, 842, 847, 852, 855, 861, 866, 871, 873, 876], "evok": [1, 2, 4, 5, 7, 8, 15, 16, 17, 18, 20, 27, 28, 31, 35, 36, 38, 39, 40, 42, 44, 45, 46, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 67, 70, 72, 76, 77, 78, 82, 83, 85, 86, 87, 89, 91, 93, 94, 95, 97, 98, 99, 105, 111, 114, 115, 120, 122, 128, 134, 135, 140, 142, 143, 153, 161, 166, 168, 169, 175, 177, 178, 179, 180, 181, 182, 183, 184, 187, 190, 194, 197, 198, 199, 200, 201, 203, 204, 205, 208, 220, 221, 225, 226, 227, 228, 229, 232, 234, 237, 239, 242, 254, 257, 259, 260, 261, 262, 263, 265, 266, 267, 269, 270, 272, 273, 275, 276, 277, 278, 279, 282, 283, 287, 288, 291, 292, 295, 296, 298, 312, 315, 351, 352, 354, 356, 371, 390, 413, 422, 429, 433, 434, 439, 440, 442, 449, 451, 465, 467, 471, 473, 474, 476, 477, 481, 489, 515, 516, 519, 522, 523, 524, 525, 526, 527, 531, 534, 537, 547, 552, 553, 554, 555, 556, 557, 564, 565, 568, 569, 571, 574, 578, 583, 584, 599, 605, 607, 611, 612, 613, 614, 615, 616, 618, 619, 622, 638, 641, 644, 645, 650, 660, 662, 682, 691, 696, 698, 699, 700, 705, 709, 714, 724, 726, 727, 728, 743, 760, 767, 768, 770, 771, 773, 774, 777, 778, 779, 780, 781, 782, 783, 787, 790, 794, 796, 797, 800, 802, 805, 810, 822, 831, 835, 852, 853, 855, 858, 861, 862, 866, 876], "from": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 140, 142, 144, 145, 146, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 203, 204, 206, 207, 208, 210, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 242, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 282, 283, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 300, 301, 305, 307, 310, 311, 313, 316, 319, 322, 323, 324, 326, 328, 329, 330, 331, 332, 335, 336, 337, 340, 343, 344, 345, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 367, 368, 369, 370, 371, 378, 383, 391, 392, 400, 401, 408, 412, 414, 415, 416, 417, 423, 426, 430, 431, 432, 434, 437, 438, 439, 440, 441, 442, 447, 449, 450, 451, 452, 453, 456, 458, 460, 461, 465, 466, 467, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 529, 530, 531, 532, 533, 534, 536, 537, 538, 542, 543, 547, 548, 549, 553, 554, 555, 556, 557, 558, 559, 560, 563, 565, 566, 567, 570, 571, 572, 573, 575, 576, 578, 579, 580, 581, 582, 583, 584, 585, 593, 594, 595, 596, 599, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 618, 619, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 633, 634, 636, 638, 641, 645, 646, 647, 648, 649, 650, 656, 659, 660, 661, 662, 663, 665, 666, 668, 669, 670, 671, 672, 673, 675, 676, 678, 682, 683, 684, 685, 686, 687, 688, 691, 692, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 722, 724, 725, 727, 728, 731, 732, 733, 735, 738, 739, 742, 743, 751, 756, 759, 760, 767, 771, 772, 773, 775, 776, 777, 779, 780, 781, 782, 783, 784, 786, 787, 788, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 803, 805, 811, 813, 816, 822, 823, 826, 829, 831, 833, 835, 838, 839, 840, 841, 842, 843, 847, 851, 852, 853, 855, 857, 858, 860, 861, 864, 866, 874, 876], "tutori": [1, 27, 32, 62, 69, 72, 82, 107, 122, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 175, 176, 177, 179, 180, 181, 185, 186, 189, 190, 191, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 224, 226, 229, 230, 232, 234, 235, 237, 239, 240, 242, 259, 260, 262, 263, 264, 265, 267, 295, 300, 352, 357, 408, 428, 443, 446, 449, 451, 476, 477, 487, 489, 520, 544, 584, 723, 724, 726, 727, 759, 771, 783, 811, 831, 835, 852, 855, 858, 859, 860, 876], "For": [1, 4, 15, 19, 43, 44, 47, 50, 55, 63, 68, 69, 78, 93, 99, 101, 107, 111, 113, 118, 119, 121, 125, 132, 133, 134, 135, 139, 142, 143, 144, 145, 148, 149, 150, 154, 155, 157, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 202, 203, 204, 205, 206, 208, 210, 213, 214, 216, 219, 224, 226, 228, 229, 232, 234, 237, 238, 239, 254, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 281, 295, 296, 312, 323, 333, 352, 356, 357, 358, 365, 367, 368, 369, 378, 383, 400, 401, 407, 408, 410, 411, 414, 415, 416, 418, 420, 421, 425, 429, 430, 431, 432, 434, 437, 438, 439, 441, 443, 444, 446, 447, 449, 450, 451, 452, 465, 466, 467, 470, 471, 473, 474, 475, 476, 477, 482, 484, 491, 496, 499, 500, 521, 529, 534, 538, 543, 555, 556, 557, 558, 567, 571, 574, 575, 584, 588, 595, 602, 611, 627, 631, 633, 638, 641, 643, 645, 676, 681, 682, 683, 684, 686, 687, 691, 696, 697, 698, 699, 700, 714, 716, 723, 724, 726, 727, 733, 743, 758, 759, 761, 767, 768, 773, 774, 775, 777, 779, 782, 783, 784, 786, 787, 788, 790, 796, 798, 799, 803, 805, 807, 831, 833, 835, 837, 841, 846, 847, 851, 852, 853, 854, 855, 858, 862, 876], "comparison": [1, 27, 31, 38, 81, 94, 95, 99, 110, 120, 128, 133, 150, 154, 156, 166, 175, 182, 183, 190, 200, 205, 209, 229, 232, 233, 234, 238, 239, 242, 273, 274, 358, 556, 559, 585, 624, 680, 684, 685, 843, 851, 858, 873, 876], "see": [1, 4, 7, 8, 10, 19, 21, 22, 26, 27, 32, 34, 35, 39, 43, 44, 62, 63, 69, 70, 72, 74, 78, 80, 81, 82, 99, 111, 113, 117, 118, 119, 125, 127, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 145, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 179, 180, 181, 182, 183, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 226, 227, 229, 232, 237, 239, 247, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 310, 312, 314, 315, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 413, 414, 415, 416, 418, 419, 421, 424, 425, 427, 429, 433, 435, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 458, 459, 463, 464, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 518, 519, 520, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 549, 550, 552, 555, 556, 557, 558, 559, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 579, 580, 581, 582, 584, 585, 587, 588, 591, 592, 593, 596, 597, 598, 599, 601, 603, 604, 605, 606, 607, 608, 610, 611, 612, 614, 615, 616, 618, 619, 620, 621, 622, 626, 627, 628, 629, 630, 631, 632, 633, 635, 636, 637, 638, 641, 642, 644, 645, 647, 648, 649, 650, 659, 660, 661, 662, 664, 666, 667, 668, 669, 670, 671, 672, 682, 683, 684, 685, 686, 687, 689, 690, 691, 692, 693, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 712, 714, 715, 718, 719, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 738, 742, 743, 748, 751, 758, 759, 760, 767, 768, 771, 773, 774, 775, 776, 777, 778, 779, 781, 782, 783, 785, 786, 787, 788, 790, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 805, 806, 807, 808, 812, 814, 815, 816, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 833, 834, 835, 839, 840, 841, 842, 851, 852, 853, 855, 857, 858, 859, 862, 863, 864, 866, 873, 876], "1": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 189, 190, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 218, 219, 220, 221, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 239, 242, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 288, 295, 296, 297, 302, 305, 306, 307, 310, 312, 314, 316, 319, 320, 321, 333, 339, 340, 341, 345, 346, 351, 352, 353, 355, 357, 358, 363, 366, 369, 378, 384, 385, 386, 390, 391, 392, 400, 401, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 423, 424, 425, 426, 427, 429, 430, 431, 432, 435, 437, 438, 439, 440, 441, 443, 444, 446, 447, 448, 449, 451, 452, 453, 458, 464, 466, 467, 470, 471, 473, 474, 475, 476, 477, 484, 486, 491, 492, 493, 499, 500, 501, 508, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 550, 553, 555, 556, 557, 558, 561, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 585, 588, 591, 592, 593, 594, 599, 606, 608, 610, 618, 631, 633, 635, 637, 641, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 663, 665, 670, 671, 672, 675, 676, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 714, 715, 719, 721, 722, 723, 724, 725, 726, 727, 728, 732, 733, 738, 743, 747, 752, 756, 759, 760, 764, 767, 771, 772, 773, 774, 775, 777, 778, 779, 782, 783, 784, 786, 787, 788, 790, 791, 793, 794, 795, 796, 797, 798, 799, 801, 802, 803, 804, 805, 806, 809, 816, 820, 822, 827, 831, 833, 834, 835, 838, 840, 841, 843, 850, 851, 852, 855, 857, 858, 861, 864], "http": [1, 8, 15, 43, 69, 86, 111, 150, 154, 183, 194, 229, 242, 262, 263, 264, 265, 269, 273, 277, 298, 352, 365, 378, 383, 385, 400, 401, 416, 471, 476, 477, 484, 523, 557, 642, 678, 680, 725, 728, 739, 801, 833, 835, 843, 855, 858, 876], "neuroimag": [1, 10, 12, 18, 19, 21, 35, 42, 46, 59, 74, 92, 99, 111, 119, 124, 143, 154, 161, 164, 179, 183, 185, 186, 194, 210, 224, 225, 242, 259, 260, 262, 263, 264, 265, 267, 268, 273, 300, 352, 386, 412, 414, 415, 416, 426, 429, 449, 451, 471, 474, 487, 520, 524, 534, 538, 556, 591, 653, 656, 658, 680, 683, 684, 685, 686, 687, 689, 690, 710, 712, 722, 726, 759, 771, 783, 831, 842, 850, 853, 855, 858, 859, 864], "usc": [1, 183], "edu": [1, 9, 24, 35, 37, 43, 47, 58, 67, 69, 99, 102, 111, 112, 113, 118, 132, 150, 154, 183, 242, 269, 273, 277, 365, 593, 801, 858], "mediannervectf": 1, "author": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 140, 156, 158, 160, 178, 179, 181, 182, 183, 184, 190, 193, 200, 207, 221, 224, 226, 227, 228, 229, 232, 233, 234, 238, 239, 242, 591, 835, 850, 857], "mainak": [1, 46, 77, 84, 85, 190, 242, 474, 850, 863, 876], "ja": [1, 46, 77, 84, 85, 190, 242, 474, 850, 863, 876], "telecom": [1, 77, 85, 190], "paristech": [1, 77, 85, 190, 253, 863], "fr": [1, 7, 9, 10, 11, 13, 18, 19, 28, 29, 30, 38, 39, 40, 42, 46, 47, 48, 50, 52, 53, 59, 64, 77, 85, 90, 94, 95, 98, 105, 106, 108, 109, 115, 119, 123, 129, 130, 136, 158, 184, 190, 194, 226, 227, 228, 232, 233, 234, 238, 242, 876], "licens": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 140, 156, 158, 160, 178, 179, 181, 182, 183, 184, 190, 193, 207, 221, 224, 226, 227, 228, 229, 232, 233, 234, 238, 239, 375, 376, 377, 383, 385, 852, 876], "bsd": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 140, 156, 158, 160, 178, 179, 181, 182, 183, 184, 190, 193, 207, 221, 224, 226, 227, 228, 229, 232, 233, 234, 238, 239, 584, 857], "claus": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 140, 156, 158, 160, 178, 179, 181, 182, 183, 184, 190, 193, 207, 221, 224, 226, 227, 228, 229, 232, 233, 234, 238, 239], "import": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 73, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 242, 262, 263, 264, 265, 267, 310, 326, 328, 335, 371, 378, 400, 401, 448, 476, 477, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 556, 593, 608, 609, 610, 613, 627, 641, 661, 676, 678, 695, 696, 698, 699, 700, 712, 722, 738, 741, 743, 791, 829, 833, 834, 839, 842, 843, 846, 851, 852, 853, 855, 857, 858, 862, 864, 876], "numpi": [1, 4, 5, 8, 9, 10, 11, 14, 15, 16, 19, 22, 28, 31, 32, 33, 34, 35, 38, 40, 42, 45, 47, 50, 58, 59, 60, 63, 67, 69, 70, 71, 73, 80, 82, 88, 90, 91, 92, 93, 95, 98, 105, 109, 110, 111, 112, 113, 115, 117, 118, 123, 125, 131, 133, 134, 135, 136, 139, 140, 142, 145, 148, 149, 150, 155, 156, 157, 158, 159, 165, 167, 169, 170, 171, 175, 176, 177, 180, 181, 182, 183, 184, 189, 190, 193, 194, 197, 198, 200, 201, 202, 203, 204, 205, 208, 209, 210, 213, 214, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 256, 259, 262, 263, 264, 265, 269, 270, 271, 272, 273, 276, 277, 278, 408, 414, 415, 416, 446, 447, 448, 473, 474, 475, 476, 477, 509, 556, 570, 582, 593, 601, 648, 649, 650, 659, 660, 662, 676, 681, 683, 684, 685, 686, 687, 695, 696, 697, 698, 699, 700, 701, 703, 704, 706, 712, 722, 723, 724, 725, 726, 727, 728, 743, 775, 777, 782, 795, 831, 834, 853, 857, 860, 876], "np": [1, 4, 5, 8, 9, 10, 11, 14, 15, 16, 19, 22, 28, 31, 32, 33, 34, 35, 38, 40, 42, 43, 45, 47, 50, 58, 59, 60, 67, 69, 70, 71, 73, 80, 82, 88, 90, 91, 92, 93, 95, 98, 105, 109, 110, 111, 112, 113, 115, 117, 118, 123, 125, 131, 133, 134, 135, 136, 140, 142, 145, 149, 150, 155, 156, 157, 158, 159, 165, 167, 169, 171, 175, 176, 177, 180, 181, 182, 183, 184, 189, 190, 193, 194, 197, 198, 200, 201, 202, 204, 205, 208, 209, 210, 213, 214, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 256, 262, 263, 264, 265, 268, 269, 270, 273, 275, 276, 277, 278, 280, 312, 352, 366, 442, 443, 447, 464, 476, 477, 493, 507, 556, 570, 575, 582, 593, 662, 676, 688, 696, 698, 699, 700, 712, 714, 722, 723, 724, 726, 727, 743, 751, 757, 762, 767, 774, 797, 801, 803, 806, 807, 835, 858, 861, 874, 876], "mne": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 155, 156, 157, 158, 161, 162, 163, 164, 166, 167, 168, 169, 172, 173, 174, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 197, 199, 201, 202, 205, 206, 207, 209, 210, 214, 215, 216, 217, 220, 221, 222, 223, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 242, 247, 248, 249, 250, 252, 253, 831, 833, 834, 836, 840, 844, 845, 846, 851, 852, 853, 856, 857, 859, 862, 863, 864, 865, 866, 867, 870, 871, 873, 874, 875, 876], "bst_raw": [1, 117, 852, 866], "io": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 26, 28, 29, 32, 33, 34, 42, 45, 46, 49, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 119, 121, 125, 126, 127, 130, 131, 133, 134, 136, 139, 140, 141, 143, 144, 145, 148, 150, 151, 155, 156, 157, 158, 159, 161, 165, 166, 167, 168, 169, 170, 171, 176, 179, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 226, 227, 228, 229, 232, 234, 237, 238, 239, 242, 249, 254, 255, 256, 260, 261, 262, 263, 264, 265, 267, 269, 270, 272, 273, 276, 277, 278, 281, 294, 363, 383, 413, 441, 443, 446, 519, 556, 564, 568, 569, 575, 584, 696, 698, 699, 700, 714, 743, 787, 788, 790, 833, 835, 839, 851, 852, 853, 855, 858, 862, 866, 867, 876], "read_raw_ctf": [1, 7, 12, 21, 79, 80, 117, 121, 183, 187, 190, 482, 858, 866, 876], "print": [1, 2, 4, 5, 7, 8, 10, 11, 13, 14, 15, 16, 18, 19, 22, 24, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 68, 69, 70, 71, 72, 73, 75, 77, 78, 81, 82, 84, 85, 86, 90, 91, 92, 93, 94, 95, 98, 99, 101, 102, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 121, 125, 126, 129, 130, 131, 134, 135, 136, 139, 140, 141, 142, 143, 145, 148, 149, 150, 155, 156, 157, 158, 159, 165, 166, 167, 168, 169, 170, 174, 175, 178, 180, 181, 182, 183, 184, 190, 194, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 213, 214, 215, 219, 220, 221, 224, 225, 227, 228, 229, 232, 233, 234, 237, 238, 239, 242, 254, 262, 263, 264, 265, 271, 352, 391, 443, 449, 476, 477, 507, 642, 643, 695, 698, 699, 738, 751, 767, 778, 780, 783, 839, 841, 852, 855, 876], "__doc__": [1, 2, 4, 7, 8, 10, 11, 13, 14, 15, 16, 18, 22, 24, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 68, 69, 70, 71, 72, 73, 75, 77, 78, 82, 84, 85, 86, 90, 91, 92, 93, 94, 95, 98, 101, 102, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 118, 119, 121, 126, 129, 130, 131, 135, 174, 178, 182, 183, 190, 227, 228, 233, 234], "tmin": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 28, 31, 32, 33, 34, 35, 38, 40, 42, 45, 46, 49, 51, 59, 60, 68, 70, 71, 72, 81, 82, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 105, 106, 108, 109, 110, 111, 112, 115, 119, 126, 130, 131, 135, 136, 139, 140, 141, 143, 144, 148, 150, 161, 165, 171, 176, 179, 180, 182, 183, 184, 190, 193, 194, 198, 199, 203, 207, 209, 210, 213, 219, 220, 221, 225, 226, 227, 228, 229, 232, 234, 237, 238, 239, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 339, 341, 352, 353, 354, 357, 414, 420, 432, 434, 475, 476, 477, 511, 529, 546, 568, 569, 572, 573, 578, 663, 682, 688, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 743, 775, 797, 803, 851, 858, 862, 876], "tmax": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 28, 31, 32, 33, 34, 35, 38, 40, 42, 45, 46, 49, 51, 59, 60, 68, 70, 71, 72, 81, 82, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 105, 106, 108, 109, 110, 111, 112, 115, 119, 126, 127, 130, 131, 135, 136, 139, 140, 141, 143, 144, 145, 148, 150, 151, 161, 165, 166, 167, 171, 176, 179, 180, 181, 182, 183, 184, 190, 193, 194, 197, 198, 199, 203, 204, 206, 207, 208, 209, 210, 213, 214, 215, 216, 220, 221, 225, 226, 227, 228, 229, 232, 234, 237, 238, 239, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 339, 341, 352, 353, 354, 357, 414, 420, 432, 434, 475, 476, 477, 529, 546, 568, 569, 572, 573, 578, 682, 685, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 743, 775, 784, 797, 803, 851, 855, 858, 862, 876], "event_idtake": [1, 4, 5, 7, 10, 16, 19, 26, 31, 38, 41, 43, 44, 45, 47, 50, 69, 70, 73, 75, 78, 81, 92, 94, 95, 99, 107, 108, 111, 113, 117, 121, 125, 129, 131, 133, 134, 136, 139, 140, 141, 143, 144, 148, 149, 151, 154, 157, 158, 159, 161, 165, 166, 167, 168, 170, 171, 175, 178, 180, 181, 182, 184, 188, 193, 194, 199, 200, 203, 204, 205, 206, 208, 213, 219, 221, 224, 232, 233, 234, 238, 239, 254, 256, 259, 262, 263, 264, 265, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 285, 295, 296, 307, 310, 328, 338, 340, 352, 356, 357, 358, 365, 367, 368, 369, 408, 415, 432, 437, 441, 449, 451, 452, 465, 467, 471, 473, 474, 476, 477, 502, 523, 524, 525, 526, 527, 529, 530, 534, 539, 540, 556, 559, 561, 564, 632, 638, 644, 646, 657, 662, 682, 691, 696, 698, 699, 700, 740, 743, 744, 760, 767, 773, 775, 777, 782, 783, 786, 795, 803, 813, 831, 835, 838, 839, 843, 857, 858, 859, 861, 876], "right": [1, 5, 8, 10, 11, 13, 15, 39, 40, 41, 43, 45, 47, 51, 52, 57, 61, 69, 70, 72, 78, 81, 92, 107, 110, 111, 112, 114, 118, 125, 126, 130, 132, 133, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 157, 159, 160, 165, 167, 171, 174, 175, 177, 178, 179, 180, 190, 193, 199, 200, 202, 203, 204, 205, 208, 213, 214, 215, 216, 220, 221, 226, 228, 229, 232, 233, 234, 237, 238, 258, 259, 262, 263, 264, 265, 267, 268, 269, 270, 271, 273, 276, 277, 278, 310, 312, 322, 323, 333, 334, 358, 378, 408, 415, 430, 432, 435, 442, 466, 474, 476, 477, 499, 509, 521, 555, 556, 631, 659, 696, 698, 699, 700, 712, 722, 743, 756, 766, 767, 773, 774, 775, 779, 781, 782, 786, 794, 795, 796, 798, 803, 807, 831, 833, 835, 838, 852, 855, 857, 858, 861, 876], "hand": [1, 5, 8, 9, 110, 155, 159, 198, 203, 204, 205, 239, 267, 378, 556, 858, 876], "somato": [1, 32, 33, 34, 46, 61, 111, 238, 852, 866, 876], "reject": [1, 5, 7, 11, 13, 16, 27, 28, 32, 42, 45, 46, 61, 68, 75, 76, 81, 94, 95, 97, 98, 99, 101, 102, 105, 108, 111, 112, 115, 119, 130, 139, 140, 141, 143, 144, 145, 150, 151, 164, 165, 171, 176, 179, 188, 190, 194, 198, 203, 204, 205, 208, 209, 211, 212, 215, 224, 226, 227, 228, 229, 232, 234, 238, 242, 254, 255, 256, 257, 262, 263, 264, 267, 272, 355, 357, 476, 477, 516, 553, 556, 558, 559, 568, 569, 572, 573, 576, 577, 584, 607, 611, 623, 674, 680, 682, 773, 786, 787, 788, 789, 858, 876], "dict": [1, 4, 5, 7, 8, 9, 10, 11, 13, 14, 16, 18, 21, 22, 26, 28, 32, 35, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 54, 55, 58, 59, 61, 65, 68, 69, 73, 75, 77, 78, 84, 86, 91, 92, 94, 95, 97, 98, 99, 101, 102, 105, 107, 108, 110, 111, 112, 113, 114, 115, 118, 119, 121, 125, 126, 129, 130, 133, 134, 135, 136, 139, 140, 141, 142, 144, 149, 150, 151, 156, 157, 158, 159, 165, 167, 168, 169, 170, 171, 174, 175, 176, 178, 179, 180, 183, 190, 193, 194, 199, 200, 202, 203, 204, 205, 206, 208, 209, 210, 213, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 238, 239, 255, 256, 257, 259, 260, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 284, 286, 295, 296, 300, 302, 308, 310, 312, 322, 323, 338, 339, 340, 341, 342, 343, 344, 352, 355, 356, 357, 363, 364, 365, 366, 367, 368, 369, 383, 389, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 430, 432, 435, 437, 440, 442, 443, 444, 446, 447, 451, 452, 453, 454, 456, 458, 459, 460, 461, 468, 471, 473, 474, 475, 476, 477, 480, 484, 491, 495, 499, 508, 511, 512, 513, 514, 515, 518, 519, 522, 523, 524, 525, 526, 527, 529, 530, 534, 536, 539, 540, 541, 546, 548, 549, 552, 554, 555, 556, 557, 558, 566, 568, 569, 570, 572, 573, 575, 581, 595, 600, 604, 608, 609, 610, 611, 613, 617, 623, 627, 629, 632, 638, 645, 647, 648, 649, 659, 661, 664, 665, 681, 682, 683, 684, 686, 687, 691, 693, 696, 698, 699, 700, 712, 722, 730, 731, 733, 743, 744, 759, 760, 762, 763, 765, 766, 767, 771, 773, 774, 775, 776, 777, 779, 780, 781, 782, 783, 784, 786, 788, 794, 795, 796, 798, 801, 802, 803, 804, 805, 806, 807, 813, 819, 829, 830, 835, 851, 858, 862, 876], "mag": [1, 5, 7, 8, 9, 12, 13, 21, 22, 26, 28, 31, 32, 33, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 68, 73, 75, 78, 79, 80, 85, 91, 92, 102, 105, 107, 114, 117, 118, 119, 121, 122, 130, 139, 141, 144, 145, 149, 151, 155, 156, 157, 161, 165, 168, 169, 171, 175, 176, 177, 178, 179, 180, 182, 183, 184, 190, 194, 197, 199, 201, 203, 204, 205, 207, 208, 213, 219, 220, 229, 232, 234, 237, 254, 257, 259, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 295, 296, 309, 316, 317, 336, 352, 356, 357, 367, 368, 369, 371, 408, 415, 417, 451, 452, 471, 473, 474, 476, 477, 512, 534, 553, 554, 555, 556, 561, 566, 568, 569, 570, 572, 573, 575, 637, 682, 696, 698, 699, 700, 766, 767, 773, 774, 775, 777, 779, 781, 782, 783, 786, 796, 798, 799, 803, 804, 805, 831, 851, 858, 876], "4e": [1, 9, 21, 28, 31, 42, 45, 68, 77, 80, 102, 105, 119, 130, 151, 161, 176, 179, 184, 190, 194, 203, 220, 221, 229, 257, 262, 263, 272, 357, 476, 477, 556, 572, 573, 682, 773, 796, 851], "12": [1, 7, 8, 9, 11, 12, 13, 18, 19, 21, 24, 25, 28, 32, 33, 34, 35, 42, 43, 44, 45, 46, 47, 51, 56, 59, 64, 68, 69, 71, 75, 77, 78, 79, 81, 83, 88, 89, 99, 101, 102, 105, 106, 107, 110, 111, 112, 119, 125, 130, 133, 136, 140, 144, 145, 147, 148, 150, 151, 153, 158, 160, 161, 163, 165, 167, 168, 169, 170, 171, 173, 174, 176, 178, 179, 182, 190, 193, 194, 197, 199, 200, 201, 202, 203, 205, 207, 208, 210, 213, 215, 219, 221, 224, 225, 226, 227, 228, 229, 231, 233, 234, 238, 242, 256, 257, 260, 261, 262, 263, 264, 265, 267, 269, 270, 272, 273, 274, 275, 276, 277, 278, 295, 303, 307, 311, 333, 345, 349, 350, 352, 357, 358, 378, 391, 414, 430, 449, 451, 474, 476, 477, 488, 518, 521, 523, 556, 567, 568, 569, 572, 573, 582, 584, 649, 682, 695, 696, 698, 699, 700, 724, 727, 761, 773, 775, 780, 792, 796, 799, 851, 852, 855, 858, 861], "eog": [1, 4, 8, 9, 11, 12, 14, 15, 16, 27, 28, 32, 33, 42, 45, 46, 61, 68, 70, 73, 75, 76, 79, 80, 81, 83, 86, 88, 91, 92, 94, 95, 98, 102, 105, 106, 107, 108, 111, 115, 125, 126, 136, 139, 140, 144, 145, 148, 150, 151, 165, 166, 167, 168, 171, 176, 179, 188, 190, 194, 198, 199, 201, 204, 206, 208, 209, 210, 213, 214, 215, 216, 219, 221, 226, 227, 228, 229, 232, 234, 238, 257, 262, 263, 264, 265, 267, 272, 309, 357, 371, 441, 449, 476, 477, 484, 486, 487, 488, 491, 492, 493, 498, 502, 547, 553, 555, 556, 569, 572, 573, 577, 580, 594, 599, 608, 648, 649, 682, 696, 698, 699, 700, 773, 774, 789, 794, 796, 831, 851, 852, 853, 858, 861, 862, 876], "250e": [1, 32, 143, 165, 190, 202, 205, 257, 262, 263, 357, 556, 572, 573, 682], "6": [1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 67, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 122, 125, 128, 129, 131, 133, 135, 138, 139, 140, 141, 142, 143, 144, 145, 147, 150, 151, 155, 156, 157, 158, 159, 161, 165, 167, 168, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 193, 194, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 236, 238, 239, 242, 254, 257, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 280, 298, 312, 333, 357, 378, 384, 408, 410, 413, 415, 443, 444, 446, 447, 476, 477, 523, 555, 556, 565, 570, 571, 572, 573, 582, 586, 637, 649, 683, 684, 686, 687, 695, 696, 698, 699, 700, 712, 722, 723, 724, 726, 727, 758, 759, 760, 773, 774, 775, 779, 782, 786, 788, 795, 796, 798, 802, 803, 805, 833, 834, 841, 851, 852, 858, 861], "data_path": [1, 2, 5, 7, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 111, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 159, 160, 161, 165, 166, 167, 168, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 193, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 220, 221, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 262, 263, 264, 265, 272, 383, 476, 477, 835, 852, 858, 866, 876], "raw_path": [1, 171, 183], "meg": [1, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 64, 67, 68, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 122, 125, 127, 128, 129, 130, 132, 134, 135, 139, 140, 141, 144, 145, 148, 149, 150, 151, 155, 156, 157, 158, 159, 161, 164, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 190, 191, 192, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 221, 226, 227, 228, 229, 232, 233, 234, 237, 238, 242, 254, 257, 259, 262, 263, 264, 265, 266, 267, 271, 273, 275, 282, 283, 295, 296, 298, 308, 313, 316, 317, 318, 323, 325, 327, 335, 339, 351, 352, 353, 354, 355, 356, 357, 362, 367, 368, 369, 371, 390, 408, 410, 415, 416, 424, 429, 449, 451, 452, 459, 465, 471, 473, 474, 476, 477, 479, 483, 487, 489, 495, 496, 497, 500, 506, 508, 515, 519, 522, 523, 524, 534, 535, 537, 538, 550, 553, 554, 555, 556, 558, 561, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 578, 581, 584, 585, 590, 592, 599, 605, 609, 610, 613, 614, 616, 631, 637, 648, 649, 653, 656, 658, 661, 664, 682, 683, 684, 686, 687, 691, 696, 698, 699, 700, 704, 705, 706, 707, 709, 726, 727, 730, 731, 743, 756, 759, 760, 766, 767, 773, 774, 775, 776, 777, 778, 779, 780, 782, 783, 785, 786, 787, 794, 795, 797, 798, 803, 805, 810, 831, 832, 835, 842, 847, 850, 851, 855, 861, 862, 866, 876], "subj001_somatosensory_20111109_01_aux": [1, 117], "f": [1, 5, 8, 9, 10, 18, 19, 21, 22, 27, 28, 29, 32, 33, 39, 40, 41, 46, 47, 60, 63, 69, 70, 81, 84, 88, 90, 92, 96, 100, 102, 105, 107, 109, 110, 111, 112, 113, 117, 124, 125, 133, 134, 140, 143, 148, 149, 150, 156, 157, 158, 159, 164, 166, 169, 171, 175, 181, 190, 193, 194, 197, 198, 200, 203, 205, 207, 208, 215, 219, 220, 221, 224, 226, 227, 228, 230, 231, 232, 233, 234, 237, 238, 239, 242, 254, 256, 259, 262, 263, 264, 265, 267, 271, 286, 295, 300, 316, 351, 385, 447, 449, 476, 477, 522, 553, 565, 611, 652, 676, 677, 678, 679, 682, 684, 687, 699, 712, 722, 726, 731, 764, 767, 774, 831, 841, 843, 851, 852, 858, 876], "d": [1, 4, 7, 11, 12, 15, 19, 21, 22, 26, 34, 39, 41, 46, 50, 52, 57, 59, 65, 71, 78, 79, 80, 82, 91, 92, 98, 99, 107, 109, 111, 116, 117, 118, 121, 124, 125, 127, 133, 134, 135, 140, 156, 157, 158, 159, 170, 178, 179, 181, 182, 183, 184, 190, 193, 200, 206, 207, 215, 221, 224, 228, 232, 233, 234, 237, 239, 242, 254, 256, 259, 262, 263, 264, 265, 267, 271, 286, 295, 296, 300, 319, 352, 385, 416, 471, 476, 477, 489, 493, 522, 523, 615, 641, 689, 690, 698, 700, 715, 731, 744, 783, 796, 843, 852, 853, 858, 864, 876], "crop": [1, 5, 8, 9, 10, 12, 21, 30, 31, 32, 33, 34, 35, 38, 40, 42, 44, 45, 46, 51, 59, 73, 75, 79, 80, 81, 82, 107, 110, 114, 125, 136, 139, 140, 141, 145, 148, 150, 166, 167, 171, 175, 178, 179, 180, 182, 183, 184, 197, 198, 201, 203, 204, 205, 206, 207, 208, 210, 213, 214, 215, 216, 221, 225, 226, 232, 234, 237, 238, 256, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 566, 585, 598, 696, 699, 853, 876], "half": [1, 69, 200, 201, 234, 261, 262, 263, 264, 265, 267, 269, 270, 272, 273, 276, 277, 278, 339, 410, 444, 446, 447, 476, 477, 574, 683, 684, 686, 687, 691, 708, 710, 712, 714, 722, 724, 726, 727, 743, 767, 773, 775, 796, 801, 806, 835, 858, 876], "length": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 71, 72, 75, 80, 81, 82, 86, 97, 109, 110, 111, 112, 113, 119, 131, 135, 140, 142, 143, 148, 150, 171, 174, 190, 194, 197, 199, 201, 202, 203, 204, 205, 208, 209, 210, 213, 216, 219, 225, 229, 237, 254, 257, 259, 260, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 276, 277, 278, 285, 311, 357, 391, 408, 410, 413, 414, 415, 416, 419, 420, 423, 444, 446, 447, 466, 474, 475, 476, 477, 526, 538, 540, 555, 556, 558, 564, 572, 573, 584, 591, 614, 615, 636, 646, 662, 676, 677, 681, 682, 696, 698, 699, 700, 701, 702, 703, 704, 706, 708, 711, 714, 715, 719, 723, 724, 725, 726, 727, 728, 733, 743, 758, 759, 760, 767, 774, 775, 777, 779, 782, 784, 786, 795, 798, 801, 802, 803, 804, 805, 806, 831, 851, 852, 858, 876], "save": [1, 5, 7, 9, 11, 29, 30, 32, 34, 41, 43, 44, 60, 61, 69, 73, 106, 107, 108, 111, 113, 133, 134, 135, 141, 142, 149, 150, 155, 156, 157, 159, 160, 161, 167, 169, 176, 179, 180, 182, 187, 189, 190, 198, 199, 201, 203, 205, 206, 208, 214, 215, 216, 221, 228, 232, 254, 256, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 280, 286, 310, 311, 336, 378, 383, 412, 438, 439, 440, 441, 467, 475, 476, 477, 493, 495, 500, 529, 530, 545, 555, 556, 597, 609, 610, 613, 614, 618, 621, 624, 635, 686, 687, 696, 697, 698, 699, 700, 716, 717, 729, 731, 743, 818, 822, 823, 825, 833, 835, 839, 853, 855, 858, 861, 862, 876], "memori": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 254, 257, 262, 263, 264, 265, 280, 289, 290, 293, 328, 357, 359, 361, 372, 410, 417, 420, 421, 425, 446, 475, 476, 477, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 516, 525, 526, 527, 529, 530, 536, 558, 584, 639, 645, 683, 684, 686, 687, 695, 702, 705, 721, 723, 724, 725, 726, 727, 728, 743, 777, 833, 834, 841, 853, 862, 864, 876], "120": [1, 5, 7, 19, 24, 33, 35, 38, 42, 45, 59, 79, 80, 106, 131, 133, 134, 141, 150, 159, 168, 175, 180, 190, 197, 199, 201, 203, 207, 210, 229, 238, 242, 254, 262, 263, 431, 476, 477, 566, 570, 773, 796], "load_data": [1, 4, 8, 9, 12, 21, 34, 42, 69, 70, 73, 74, 75, 79, 80, 81, 82, 97, 107, 110, 111, 113, 135, 145, 150, 158, 165, 167, 171, 181, 190, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 209, 210, 213, 214, 215, 216, 238, 262, 263, 264, 265, 476, 477, 852, 858, 866, 876], "plot": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 45, 46, 49, 51, 53, 54, 55, 56, 58, 59, 61, 63, 64, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 119, 120, 127, 128, 129, 130, 132, 133, 134, 136, 139, 142, 143, 144, 145, 148, 150, 152, 153, 155, 157, 158, 159, 164, 165, 166, 167, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 213, 215, 217, 218, 219, 221, 224, 225, 229, 232, 233, 234, 237, 254, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 310, 311, 319, 321, 322, 326, 336, 352, 362, 371, 408, 412, 415, 423, 426, 428, 434, 437, 449, 451, 468, 476, 477, 483, 487, 489, 492, 500, 515, 519, 520, 522, 523, 532, 533, 534, 535, 537, 552, 553, 555, 556, 570, 592, 605, 606, 611, 614, 616, 619, 624, 629, 636, 645, 682, 696, 697, 698, 699, 700, 712, 722, 743, 744, 745, 746, 748, 752, 754, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 810, 811, 813, 831, 834, 835, 839, 851, 852, 853, 856, 858, 859, 862, 864, 865, 876], "set": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 44, 45, 46, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 80, 81, 82, 84, 85, 86, 88, 91, 92, 93, 94, 95, 97, 98, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 124, 125, 126, 130, 131, 133, 134, 135, 136, 139, 140, 141, 142, 143, 145, 148, 149, 151, 154, 155, 157, 158, 159, 160, 161, 164, 165, 167, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 211, 212, 215, 219, 220, 221, 224, 227, 238, 239, 255, 256, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 285, 286, 295, 296, 298, 300, 301, 315, 323, 328, 339, 352, 353, 355, 357, 358, 359, 363, 367, 373, 374, 375, 376, 377, 378, 380, 381, 383, 385, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 431, 432, 433, 436, 437, 438, 441, 442, 443, 447, 449, 451, 464, 465, 466, 467, 473, 476, 477, 478, 484, 491, 492, 495, 498, 509, 511, 513, 515, 517, 518, 519, 520, 521, 522, 525, 526, 527, 529, 530, 534, 539, 540, 542, 543, 544, 547, 549, 555, 556, 557, 558, 559, 561, 568, 569, 570, 572, 573, 575, 585, 597, 602, 608, 609, 613, 614, 615, 618, 621, 624, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 661, 673, 674, 678, 680, 682, 683, 684, 685, 686, 687, 691, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 712, 714, 715, 722, 723, 724, 725, 726, 727, 731, 733, 734, 736, 741, 742, 743, 746, 760, 762, 767, 770, 771, 773, 775, 778, 779, 780, 781, 782, 786, 788, 789, 790, 795, 796, 797, 798, 799, 801, 803, 805, 806, 807, 808, 809, 812, 815, 831, 833, 834, 839, 840, 842, 853, 855, 857, 858, 861, 862, 865, 876], "channel": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 65, 67, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 88, 90, 91, 92, 93, 94, 95, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 140, 141, 143, 145, 149, 151, 155, 156, 157, 158, 161, 164, 165, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 189, 190, 193, 194, 197, 201, 202, 204, 205, 207, 208, 210, 211, 212, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 237, 238, 242, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 276, 277, 278, 279, 282, 283, 295, 296, 306, 308, 309, 339, 341, 343, 344, 347, 351, 352, 353, 354, 355, 356, 357, 367, 368, 369, 371, 379, 408, 410, 415, 416, 417, 419, 421, 424, 429, 433, 438, 440, 441, 446, 447, 449, 450, 451, 452, 460, 465, 468, 471, 473, 474, 475, 476, 477, 484, 486, 487, 488, 489, 491, 492, 493, 495, 498, 499, 500, 502, 512, 515, 519, 524, 534, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 561, 562, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 583, 584, 585, 588, 589, 590, 592, 595, 598, 599, 608, 609, 610, 611, 613, 614, 615, 616, 631, 632, 637, 638, 641, 646, 648, 649, 650, 664, 676, 682, 683, 684, 686, 687, 691, 696, 697, 698, 699, 700, 704, 705, 706, 707, 709, 713, 719, 723, 726, 727, 728, 743, 756, 759, 760, 763, 764, 765, 767, 768, 769, 772, 773, 774, 775, 777, 779, 780, 781, 782, 783, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 803, 804, 805, 813, 815, 816, 831, 833, 835, 839, 842, 843, 853, 855, 857, 862, 865, 866, 876], "set_channel_typ": [1, 126, 139, 148, 150, 190, 213, 262, 263, 264, 265, 441, 476, 477, 876], "eeg058": 1, "set_eeg_refer": [1, 29, 70, 91, 92, 150, 158, 161, 166, 181, 188, 202, 204, 206, 220, 239, 262, 263, 264, 265, 476, 477, 555, 638, 660, 862, 866, 876], "averag": [1, 2, 4, 5, 7, 10, 11, 13, 14, 15, 16, 18, 19, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 62, 64, 66, 67, 68, 70, 71, 72, 75, 77, 78, 79, 80, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 102, 105, 106, 108, 110, 111, 114, 115, 117, 118, 119, 122, 125, 127, 130, 131, 133, 134, 135, 136, 140, 141, 142, 143, 144, 145, 149, 151, 152, 153, 157, 158, 161, 164, 165, 168, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 190, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 234, 237, 238, 239, 242, 254, 255, 259, 261, 262, 263, 264, 265, 267, 269, 270, 271, 273, 276, 277, 278, 284, 351, 352, 354, 370, 386, 408, 415, 422, 427, 429, 442, 449, 465, 476, 477, 500, 510, 511, 524, 525, 526, 527, 529, 530, 536, 539, 540, 555, 556, 560, 561, 563, 568, 569, 570, 572, 575, 576, 579, 581, 610, 614, 615, 638, 641, 652, 660, 696, 697, 698, 699, 700, 714, 715, 723, 724, 725, 726, 727, 728, 743, 767, 775, 777, 778, 782, 786, 787, 794, 795, 797, 798, 803, 805, 822, 831, 851, 852, 855, 861, 862, 864, 876], "project": [1, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 81, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 130, 131, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 197, 198, 199, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 234, 238, 239, 242, 257, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 276, 277, 278, 282, 283, 295, 296, 298, 339, 341, 345, 352, 353, 354, 355, 357, 367, 369, 385, 416, 428, 449, 451, 452, 475, 476, 477, 496, 516, 518, 520, 522, 523, 524, 534, 555, 556, 567, 568, 569, 571, 575, 581, 584, 592, 599, 607, 616, 622, 637, 638, 641, 660, 673, 691, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 743, 759, 760, 765, 768, 775, 777, 779, 781, 782, 786, 794, 795, 796, 797, 799, 801, 806, 812, 813, 815, 827, 831, 835, 840, 842, 847, 851, 852, 854, 864, 865, 866, 876], "true": [1, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 81, 82, 84, 85, 86, 90, 91, 92, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 121, 122, 123, 124, 125, 127, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 148, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 215, 216, 220, 221, 224, 226, 227, 228, 229, 232, 234, 237, 238, 239, 242, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 285, 286, 295, 296, 298, 300, 301, 304, 305, 306, 307, 310, 311, 312, 315, 318, 319, 320, 321, 323, 336, 338, 339, 340, 341, 342, 345, 352, 356, 357, 358, 359, 361, 362, 367, 368, 369, 373, 375, 376, 377, 378, 380, 381, 383, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 426, 427, 429, 430, 433, 437, 438, 439, 440, 441, 442, 443, 446, 447, 449, 451, 452, 453, 456, 461, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 516, 517, 519, 521, 522, 523, 524, 525, 526, 527, 529, 530, 532, 533, 534, 536, 538, 539, 540, 541, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 565, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 581, 582, 584, 599, 607, 610, 611, 614, 619, 627, 629, 632, 635, 638, 640, 641, 643, 644, 645, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 666, 670, 673, 674, 677, 678, 680, 683, 684, 686, 687, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 702, 703, 705, 706, 708, 712, 713, 714, 721, 722, 723, 724, 725, 726, 727, 728, 729, 731, 738, 741, 743, 748, 751, 752, 756, 757, 759, 760, 761, 762, 764, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 811, 813, 818, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829, 830, 833, 835, 851, 852, 855, 858, 876], "show": [1, 4, 7, 8, 10, 12, 13, 14, 15, 16, 19, 22, 26, 27, 28, 29, 31, 32, 35, 37, 38, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 58, 59, 60, 63, 67, 68, 70, 72, 73, 76, 77, 83, 95, 97, 99, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 124, 125, 128, 129, 130, 131, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 154, 155, 156, 158, 159, 165, 167, 168, 169, 171, 175, 177, 178, 179, 180, 181, 182, 189, 190, 197, 199, 200, 201, 202, 203, 204, 205, 207, 209, 213, 215, 216, 219, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 259, 260, 261, 262, 263, 264, 265, 267, 270, 271, 275, 276, 277, 278, 305, 307, 310, 311, 408, 415, 449, 467, 468, 476, 477, 507, 547, 553, 555, 556, 570, 575, 577, 695, 696, 697, 698, 700, 712, 722, 743, 751, 752, 759, 760, 761, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 803, 804, 805, 806, 807, 808, 812, 831, 833, 835, 840, 843, 851, 858, 864, 876], "power": [1, 12, 21, 27, 32, 36, 38, 56, 60, 67, 70, 80, 81, 103, 104, 110, 111, 112, 113, 119, 126, 131, 136, 144, 145, 148, 149, 161, 164, 165, 171, 179, 182, 190, 193, 199, 200, 204, 207, 210, 216, 222, 223, 225, 229, 230, 231, 237, 242, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 276, 277, 278, 286, 287, 288, 289, 292, 295, 296, 316, 351, 352, 356, 357, 408, 410, 413, 415, 416, 419, 421, 442, 444, 446, 447, 448, 449, 476, 477, 482, 512, 514, 519, 522, 523, 524, 529, 530, 534, 537, 539, 540, 547, 552, 553, 556, 603, 611, 616, 618, 631, 644, 650, 661, 676, 677, 678, 679, 680, 683, 684, 685, 686, 687, 696, 697, 698, 699, 700, 705, 714, 715, 723, 724, 725, 726, 727, 728, 737, 743, 759, 766, 767, 768, 774, 775, 777, 780, 782, 783, 788, 794, 797, 803, 811, 831, 835, 852, 855, 857, 861, 876], "line": [1, 8, 9, 69, 79, 80, 81, 99, 107, 110, 118, 119, 121, 125, 135, 136, 139, 140, 143, 150, 154, 155, 157, 158, 159, 161, 168, 170, 171, 176, 182, 189, 190, 200, 202, 203, 205, 206, 207, 208, 209, 213, 216, 226, 227, 238, 239, 242, 259, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 333, 339, 345, 408, 415, 467, 476, 477, 507, 513, 555, 556, 570, 591, 599, 611, 618, 627, 630, 696, 698, 700, 743, 751, 756, 759, 760, 767, 768, 773, 774, 775, 777, 779, 781, 782, 783, 785, 786, 789, 790, 791, 794, 795, 796, 797, 798, 800, 801, 802, 803, 805, 806, 824, 829, 833, 834, 838, 840, 842, 847, 851, 852, 853, 855, 858, 866, 876], "interfer": [1, 121, 135, 197, 198, 201, 206, 207, 208, 210, 215, 242, 254, 584, 831, 852, 855], "remov": [1, 7, 16, 18, 21, 27, 28, 31, 32, 35, 42, 51, 58, 59, 68, 69, 70, 71, 73, 74, 75, 76, 79, 80, 83, 88, 91, 97, 101, 107, 110, 111, 117, 125, 130, 133, 135, 139, 140, 141, 142, 145, 148, 149, 150, 156, 157, 159, 160, 161, 165, 166, 167, 169, 171, 175, 176, 179, 180, 181, 182, 183, 190, 194, 197, 198, 199, 200, 201, 202, 205, 206, 208, 210, 213, 215, 216, 221, 226, 227, 228, 229, 237, 239, 242, 254, 256, 259, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 286, 300, 310, 326, 345, 352, 361, 362, 414, 416, 420, 431, 447, 451, 460, 473, 474, 476, 477, 478, 491, 496, 522, 553, 554, 555, 556, 557, 571, 575, 591, 592, 599, 605, 614, 616, 619, 638, 641, 660, 662, 696, 698, 699, 700, 731, 743, 764, 780, 796, 812, 813, 831, 835, 843, 852, 857, 858, 861, 862, 864, 876], "plot_psd": [1, 70, 73, 107, 127, 139, 141, 142, 165, 166, 171, 182, 190, 197, 201, 205, 207, 209, 216, 237, 238, 262, 263, 264, 265, 272, 476, 477, 835, 858, 876], "60": [1, 5, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 28, 29, 30, 31, 33, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 64, 67, 68, 69, 71, 72, 73, 75, 77, 79, 80, 81, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 105, 106, 107, 108, 109, 110, 112, 114, 115, 117, 118, 119, 121, 122, 125, 129, 130, 131, 133, 135, 136, 139, 140, 142, 143, 148, 149, 150, 151, 158, 165, 166, 167, 168, 169, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 214, 215, 216, 220, 221, 224, 225, 227, 228, 229, 232, 234, 237, 254, 447, 476, 477, 582, 784, 852, 876], "fals": [1, 4, 5, 8, 9, 11, 12, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 30, 31, 32, 40, 41, 42, 44, 47, 48, 49, 50, 51, 54, 55, 58, 63, 64, 67, 68, 69, 70, 71, 73, 74, 75, 77, 79, 80, 81, 82, 84, 86, 88, 92, 94, 95, 97, 98, 99, 102, 105, 106, 107, 108, 110, 112, 113, 116, 117, 118, 121, 122, 124, 125, 127, 132, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 154, 155, 157, 159, 161, 165, 166, 167, 168, 169, 170, 171, 175, 177, 179, 180, 181, 182, 184, 187, 190, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 225, 226, 227, 228, 229, 234, 237, 238, 239, 242, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 286, 289, 290, 293, 295, 296, 298, 300, 301, 305, 306, 307, 310, 311, 312, 315, 318, 320, 321, 324, 338, 340, 342, 345, 352, 357, 358, 359, 361, 362, 367, 370, 373, 375, 376, 377, 378, 380, 381, 383, 385, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 413, 414, 415, 416, 422, 426, 427, 429, 433, 438, 439, 440, 441, 442, 443, 449, 452, 456, 461, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 516, 519, 521, 522, 523, 524, 525, 526, 527, 529, 530, 532, 533, 534, 536, 539, 540, 541, 547, 548, 549, 551, 552, 553, 554, 555, 556, 561, 568, 569, 570, 572, 573, 575, 576, 577, 581, 582, 584, 585, 588, 604, 607, 610, 611, 614, 621, 626, 627, 629, 630, 632, 634, 635, 638, 641, 642, 643, 645, 651, 652, 653, 654, 655, 656, 657, 658, 663, 669, 672, 673, 674, 677, 680, 683, 684, 686, 687, 692, 693, 695, 696, 697, 698, 699, 700, 703, 706, 708, 712, 713, 714, 721, 722, 723, 725, 726, 727, 728, 729, 730, 731, 738, 741, 743, 752, 756, 757, 759, 760, 761, 764, 767, 768, 771, 773, 774, 775, 777, 779, 781, 782, 784, 786, 788, 790, 792, 795, 796, 797, 798, 799, 801, 802, 803, 805, 806, 809, 816, 818, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829, 830, 833, 858, 861, 876], "notch_filt": [1, 5, 80, 135, 166, 190, 201, 208, 210, 262, 263, 264, 265, 446, 476, 477, 866, 876], "arang": [1, 4, 8, 9, 15, 19, 43, 45, 67, 80, 88, 90, 92, 93, 105, 110, 112, 118, 125, 165, 190, 193, 194, 200, 209, 210, 219, 221, 224, 226, 227, 228, 229, 233, 234, 239, 268, 275, 447, 464, 476, 477, 493, 593, 688, 712, 722, 723, 724, 726, 727], "181": [1, 35, 124, 168, 190, 228, 242, 661, 682], "fir_design": [1, 7, 8, 9, 11, 13, 14, 15, 16, 18, 75, 86, 97, 119, 131, 190, 200, 203, 239, 262, 263, 264, 265, 410, 419, 444, 446, 447, 476, 477, 876], "firwin": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 75, 80, 81, 82, 86, 97, 111, 112, 113, 119, 131, 135, 140, 143, 145, 150, 190, 194, 200, 201, 202, 203, 208, 209, 210, 229, 239, 262, 263, 264, 265, 410, 419, 444, 446, 447, 476, 477, 876], "event": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 27, 28, 32, 33, 34, 42, 45, 46, 49, 61, 69, 70, 71, 72, 73, 76, 78, 79, 80, 81, 82, 83, 86, 88, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 115, 119, 126, 130, 134, 135, 139, 140, 141, 142, 144, 145, 148, 151, 152, 153, 161, 164, 168, 172, 173, 176, 179, 181, 182, 183, 184, 187, 188, 190, 194, 197, 198, 199, 200, 201, 202, 203, 205, 207, 209, 210, 213, 216, 217, 218, 219, 220, 221, 225, 226, 227, 228, 229, 232, 234, 237, 238, 239, 242, 254, 255, 256, 257, 262, 263, 264, 265, 267, 272, 281, 285, 312, 351, 352, 359, 360, 361, 366, 391, 409, 424, 429, 431, 432, 437, 449, 450, 465, 476, 477, 484, 491, 492, 493, 498, 500, 517, 521, 546, 547, 551, 553, 556, 557, 558, 559, 564, 568, 569, 572, 573, 576, 577, 578, 579, 580, 598, 608, 609, 610, 611, 641, 646, 675, 682, 696, 698, 699, 743, 744, 767, 773, 774, 776, 790, 796, 804, 812, 815, 821, 831, 851, 852, 855, 858, 861, 862, 866, 876], "find_ev": [1, 5, 7, 10, 32, 33, 34, 42, 45, 46, 49, 70, 71, 72, 78, 82, 88, 91, 93, 97, 105, 106, 108, 111, 139, 140, 141, 148, 151, 161, 165, 167, 171, 176, 179, 181, 182, 184, 190, 194, 198, 201, 202, 203, 205, 210, 214, 220, 221, 226, 237, 238, 267, 434, 450, 484, 491, 498, 517, 551, 598, 611, 831, 851, 858, 862, 866, 876], "stim_channel": [1, 5, 7, 42, 46, 78, 105, 106, 108, 111, 136, 139, 141, 148, 151, 165, 167, 176, 190, 198, 203, 205, 214, 226, 237, 238, 255, 344, 449, 450, 476, 477, 484, 491, 498, 578, 876], "uppt001": [1, 7, 190], "pick": [1, 2, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 67, 68, 69, 71, 72, 73, 75, 77, 79, 80, 81, 84, 86, 88, 90, 92, 94, 95, 97, 98, 101, 102, 105, 106, 107, 108, 109, 110, 113, 115, 117, 118, 119, 125, 129, 130, 131, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 156, 157, 159, 161, 165, 168, 169, 171, 176, 177, 178, 179, 180, 181, 183, 190, 194, 197, 198, 199, 201, 202, 203, 205, 206, 208, 209, 210, 213, 216, 219, 220, 221, 226, 227, 228, 229, 232, 234, 237, 238, 257, 259, 262, 263, 264, 265, 266, 267, 269, 270, 272, 273, 276, 277, 278, 285, 295, 296, 308, 311, 312, 315, 322, 325, 327, 357, 367, 410, 416, 424, 429, 433, 446, 447, 476, 477, 547, 548, 549, 550, 553, 554, 555, 556, 558, 571, 572, 573, 578, 581, 590, 592, 599, 664, 682, 691, 696, 697, 698, 699, 700, 704, 705, 706, 707, 709, 713, 726, 727, 743, 757, 761, 765, 767, 773, 774, 777, 779, 780, 786, 787, 788, 790, 792, 794, 797, 799, 801, 806, 831, 835, 851, 858, 861, 862, 876], "pick_typ": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 26, 28, 31, 34, 35, 40, 45, 46, 49, 51, 58, 59, 67, 68, 70, 71, 73, 81, 86, 88, 90, 94, 95, 97, 98, 101, 102, 105, 106, 108, 109, 111, 117, 125, 131, 135, 139, 140, 148, 149, 165, 167, 168, 169, 171, 175, 180, 181, 194, 197, 198, 199, 201, 202, 203, 204, 205, 209, 210, 213, 221, 226, 227, 228, 229, 232, 234, 238, 239, 262, 263, 264, 265, 476, 477, 547, 696, 698, 699, 700, 835, 858, 862, 866, 876], "info": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 73, 74, 78, 79, 80, 81, 82, 84, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 119, 121, 122, 123, 125, 126, 131, 133, 134, 135, 136, 139, 141, 143, 145, 148, 149, 150, 154, 155, 156, 157, 158, 159, 161, 164, 165, 166, 167, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 215, 216, 220, 221, 225, 226, 227, 228, 229, 232, 234, 237, 238, 239, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 271, 272, 273, 275, 280, 282, 283, 295, 296, 297, 303, 304, 308, 309, 311, 315, 316, 317, 318, 322, 324, 325, 327, 338, 340, 342, 347, 352, 356, 357, 363, 367, 368, 369, 371, 408, 410, 415, 416, 417, 419, 424, 427, 429, 433, 438, 439, 440, 441, 444, 446, 447, 451, 452, 459, 460, 468, 471, 473, 474, 475, 476, 477, 478, 481, 483, 495, 512, 515, 518, 519, 520, 522, 524, 534, 547, 550, 552, 553, 554, 555, 556, 558, 560, 567, 571, 572, 573, 575, 578, 581, 584, 588, 589, 590, 592, 599, 602, 609, 613, 631, 632, 637, 638, 641, 643, 647, 648, 649, 650, 660, 661, 664, 682, 696, 697, 698, 699, 700, 704, 705, 706, 707, 709, 727, 738, 741, 743, 756, 759, 760, 763, 764, 767, 768, 769, 773, 774, 777, 778, 779, 780, 783, 785, 790, 792, 795, 796, 797, 799, 805, 813, 822, 831, 833, 835, 838, 840, 851, 852, 853, 855, 858, 864, 866, 876], "eeg": [1, 4, 5, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 59, 60, 62, 63, 64, 66, 67, 68, 71, 72, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 114, 115, 117, 118, 119, 120, 121, 122, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 189, 190, 191, 192, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 226, 227, 228, 229, 230, 231, 232, 234, 237, 238, 242, 254, 257, 259, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 295, 296, 298, 300, 303, 304, 308, 309, 310, 312, 314, 316, 317, 321, 322, 324, 325, 326, 327, 328, 329, 332, 333, 335, 351, 352, 353, 354, 355, 356, 357, 361, 362, 363, 367, 368, 369, 371, 386, 400, 401, 408, 410, 412, 415, 416, 417, 423, 424, 427, 429, 432, 437, 440, 441, 449, 451, 452, 465, 467, 471, 473, 474, 476, 477, 482, 484, 486, 487, 488, 491, 492, 493, 494, 498, 500, 502, 503, 505, 512, 515, 519, 520, 522, 523, 524, 534, 535, 537, 538, 547, 553, 554, 555, 556, 557, 558, 561, 564, 565, 568, 569, 570, 571, 572, 573, 577, 578, 581, 583, 590, 592, 599, 603, 605, 607, 608, 610, 611, 614, 615, 616, 626, 629, 637, 638, 641, 645, 649, 656, 661, 664, 682, 683, 684, 686, 687, 691, 696, 698, 699, 700, 704, 705, 706, 707, 709, 726, 727, 735, 743, 759, 760, 763, 767, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 786, 787, 793, 794, 795, 796, 797, 798, 799, 803, 804, 805, 810, 811, 815, 831, 832, 842, 847, 850, 852, 855, 861, 862, 865, 866, 876], "stim": [1, 8, 9, 11, 14, 15, 16, 28, 42, 45, 46, 65, 68, 70, 71, 86, 88, 97, 98, 102, 105, 106, 108, 139, 140, 141, 148, 150, 165, 168, 171, 181, 187, 190, 194, 201, 202, 203, 213, 214, 221, 226, 227, 228, 238, 239, 254, 255, 262, 263, 264, 265, 267, 272, 309, 347, 371, 441, 449, 450, 476, 477, 484, 491, 498, 500, 553, 556, 578, 611, 646, 696, 698, 699, 700, 773, 796, 831, 858, 861, 862, 876], "exclud": [1, 5, 7, 8, 9, 11, 13, 14, 15, 16, 24, 26, 28, 31, 34, 35, 40, 41, 43, 45, 49, 50, 51, 58, 59, 64, 67, 68, 69, 70, 73, 77, 81, 84, 86, 90, 94, 95, 98, 102, 105, 106, 107, 108, 109, 110, 131, 141, 143, 149, 155, 156, 157, 165, 168, 171, 175, 176, 180, 181, 182, 183, 184, 190, 194, 197, 198, 199, 201, 203, 204, 206, 216, 221, 226, 227, 228, 232, 234, 239, 254, 259, 260, 261, 262, 263, 264, 265, 269, 270, 272, 273, 275, 276, 277, 278, 303, 304, 317, 324, 357, 363, 367, 369, 416, 427, 476, 477, 484, 491, 493, 498, 520, 547, 548, 549, 551, 553, 554, 555, 556, 557, 568, 569, 570, 575, 584, 599, 611, 616, 637, 641, 645, 683, 684, 686, 687, 696, 698, 699, 700, 704, 705, 706, 707, 713, 768, 777, 779, 780, 781, 787, 789, 790, 797, 851, 861, 862, 876], "bad": [1, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 27, 28, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 49, 51, 58, 59, 64, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 83, 86, 88, 90, 91, 94, 95, 98, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 115, 119, 125, 126, 134, 135, 136, 139, 140, 141, 143, 144, 145, 148, 149, 150, 151, 161, 164, 165, 166, 167, 168, 169, 171, 175, 176, 179, 180, 181, 182, 183, 184, 190, 194, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 226, 227, 228, 229, 238, 239, 254, 256, 257, 259, 262, 263, 264, 265, 267, 296, 308, 311, 312, 317, 324, 327, 357, 361, 367, 368, 369, 410, 424, 429, 437, 446, 447, 449, 465, 476, 477, 516, 534, 548, 549, 550, 553, 554, 555, 556, 558, 559, 560, 563, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 584, 585, 590, 592, 599, 611, 614, 637, 638, 641, 664, 682, 696, 698, 699, 700, 704, 705, 706, 707, 709, 727, 767, 768, 773, 774, 777, 779, 780, 781, 788, 792, 796, 797, 815, 831, 842, 853, 855, 861, 876], "epoch": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 27, 32, 33, 34, 36, 45, 46, 49, 56, 59, 61, 68, 69, 70, 71, 72, 77, 78, 81, 82, 86, 88, 90, 91, 93, 94, 95, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 110, 111, 119, 120, 126, 128, 130, 134, 135, 140, 147, 149, 161, 166, 167, 168, 169, 176, 178, 179, 180, 181, 182, 183, 184, 187, 190, 193, 194, 197, 198, 201, 204, 205, 208, 210, 214, 215, 220, 221, 225, 226, 227, 228, 237, 238, 239, 249, 254, 255, 256, 257, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 273, 276, 277, 278, 279, 289, 290, 293, 311, 312, 315, 351, 352, 353, 355, 356, 357, 359, 392, 408, 410, 413, 414, 415, 416, 417, 420, 421, 422, 423, 424, 433, 434, 437, 438, 449, 467, 473, 476, 477, 482, 510, 515, 516, 521, 522, 523, 524, 525, 526, 527, 529, 530, 537, 539, 540, 551, 553, 555, 556, 557, 558, 564, 565, 568, 569, 572, 573, 574, 578, 583, 584, 599, 607, 608, 609, 610, 611, 618, 622, 638, 641, 650, 660, 681, 682, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 714, 723, 724, 725, 726, 727, 728, 743, 767, 772, 773, 774, 775, 786, 787, 788, 790, 794, 796, 797, 804, 831, 835, 852, 853, 855, 861, 862, 864, 866, 876], "baselin": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 68, 70, 71, 72, 73, 74, 77, 78, 81, 82, 84, 85, 86, 88, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 110, 111, 112, 114, 115, 117, 118, 119, 122, 125, 126, 130, 134, 135, 136, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 159, 161, 164, 165, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 197, 198, 199, 201, 202, 203, 205, 209, 210, 219, 221, 225, 226, 227, 228, 229, 232, 234, 238, 239, 242, 254, 257, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 351, 352, 357, 378, 449, 476, 477, 516, 521, 539, 540, 556, 572, 573, 591, 607, 614, 615, 681, 696, 699, 767, 783, 787, 800, 803, 822, 831, 851, 855, 858, 861, 866, 870, 876], "none": [1, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 68, 69, 70, 72, 75, 77, 79, 80, 81, 82, 84, 85, 86, 88, 91, 92, 94, 95, 97, 98, 101, 102, 105, 107, 108, 110, 111, 112, 115, 117, 118, 119, 122, 125, 130, 133, 134, 135, 136, 140, 141, 142, 143, 144, 148, 149, 150, 151, 157, 158, 159, 160, 161, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 190, 193, 194, 200, 201, 202, 203, 205, 206, 208, 209, 210, 215, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 238, 239, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 314, 315, 316, 317, 319, 323, 324, 325, 326, 327, 328, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 460, 461, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 549, 551, 552, 553, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 590, 591, 592, 593, 596, 597, 598, 599, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 659, 660, 661, 662, 663, 664, 666, 667, 668, 669, 670, 671, 672, 673, 675, 681, 682, 683, 684, 685, 686, 687, 688, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 711, 712, 714, 715, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 735, 738, 742, 743, 746, 748, 751, 752, 753, 755, 756, 759, 760, 761, 762, 763, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 811, 812, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 835, 851, 857, 858, 876], "preload": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 32, 33, 34, 42, 49, 69, 70, 71, 72, 79, 80, 81, 82, 86, 97, 101, 105, 108, 110, 111, 112, 115, 119, 127, 131, 139, 140, 141, 143, 144, 145, 148, 150, 151, 158, 165, 166, 169, 171, 179, 181, 182, 183, 184, 187, 190, 194, 197, 199, 202, 203, 204, 205, 209, 213, 220, 221, 226, 227, 228, 229, 232, 234, 237, 238, 239, 254, 262, 263, 264, 265, 272, 345, 361, 475, 476, 477, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 516, 568, 569, 572, 573, 607, 609, 613, 638, 641, 696, 698, 699, 700, 773, 796, 851, 852, 876], "physiolog": [1, 8, 42, 136, 201, 203, 206, 242, 262, 263, 264, 265, 378, 400, 401, 476, 477, 641, 852, 876], "artifact": [1, 7, 27, 32, 42, 69, 76, 81, 82, 83, 107, 108, 141, 143, 145, 148, 164, 165, 171, 182, 190, 199, 200, 204, 206, 208, 209, 211, 212, 215, 216, 242, 256, 257, 260, 261, 262, 263, 264, 265, 267, 269, 270, 272, 273, 276, 277, 278, 342, 343, 353, 354, 355, 356, 357, 361, 410, 414, 421, 449, 474, 476, 477, 489, 491, 504, 547, 550, 553, 555, 556, 560, 561, 563, 568, 569, 570, 572, 573, 576, 577, 578, 580, 584, 587, 591, 599, 648, 649, 696, 699, 721, 723, 724, 726, 727, 759, 785, 787, 794, 795, 796, 811, 815, 852, 855, 858, 864, 865, 876], "eyeblink": [1, 569, 573], "heartbeat": [1, 81, 141, 145, 199, 203, 204, 205, 206, 208, 215, 568, 572, 576, 579], "usssp": [1, 11, 15, 18, 27, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 67, 68, 70, 72, 82, 86, 88, 90, 91, 92, 93, 102, 105, 106, 107, 108, 119, 120, 128, 130, 139, 140, 141, 144, 145, 148, 150, 151, 161, 164, 165, 171, 175, 176, 177, 178, 179, 180, 181, 182, 190, 197, 198, 199, 201, 202, 203, 206, 208, 211, 212, 213, 216, 220, 229, 232, 234, 257, 259, 262, 263, 264, 265, 266, 267, 271, 272, 273, 353, 354, 355, 449, 476, 477, 516, 550, 553, 555, 568, 569, 572, 573, 599, 607, 616, 622, 637, 698, 700, 775, 777, 779, 781, 782, 794, 795, 797, 815, 831, 855, 861, 864, 865, 876], "add_proj": [1, 2, 4, 5, 42, 90, 99, 107, 109, 139, 141, 145, 148, 161, 171, 183, 184, 190, 194, 197, 202, 204, 205, 209, 210, 213, 225, 262, 263, 264, 265, 272, 476, 477, 660], "compute_proj_evok": [1, 204, 353, 355, 866], "copi": [1, 2, 4, 5, 8, 9, 10, 12, 18, 19, 22, 27, 38, 45, 46, 47, 48, 49, 54, 58, 61, 69, 72, 73, 77, 82, 105, 107, 112, 117, 125, 133, 135, 139, 140, 143, 148, 149, 150, 154, 160, 161, 165, 167, 168, 171, 175, 177, 184, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 210, 213, 215, 221, 225, 228, 254, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 275, 276, 277, 278, 279, 285, 286, 300, 305, 307, 310, 315, 362, 368, 370, 375, 376, 377, 378, 380, 381, 383, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 417, 430, 433, 446, 447, 476, 477, 522, 536, 548, 549, 552, 555, 556, 565, 568, 569, 574, 578, 581, 585, 599, 608, 635, 638, 641, 693, 696, 697, 698, 699, 700, 702, 704, 705, 706, 707, 708, 713, 730, 731, 835, 843, 853, 855, 858, 861, 862, 876], "apply_proj": [1, 70, 92, 141, 145, 148, 158, 166, 181, 204, 205, 206, 262, 263, 264, 265, 438, 439, 440, 441, 476, 477, 641, 796, 876], "fix": [1, 5, 22, 31, 40, 41, 45, 47, 48, 49, 54, 55, 58, 60, 78, 88, 98, 133, 139, 141, 157, 162, 163, 164, 167, 169, 175, 179, 194, 209, 210, 220, 242, 255, 260, 261, 264, 265, 266, 273, 295, 296, 306, 318, 352, 359, 362, 421, 449, 451, 453, 467, 471, 473, 474, 476, 513, 517, 519, 523, 524, 525, 526, 527, 534, 535, 538, 539, 540, 556, 560, 564, 582, 604, 616, 627, 637, 702, 705, 712, 722, 723, 724, 726, 727, 759, 778, 823, 824, 829, 833, 835, 840, 854, 855, 858, 861, 876], "preprocess": [1, 4, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 67, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 86, 97, 110, 133, 136, 143, 145, 171, 183, 187, 190, 193, 194, 197, 198, 199, 200, 202, 203, 204, 205, 207, 208, 212, 216, 256, 262, 263, 264, 265, 267, 272, 351, 408, 412, 415, 417, 429, 437, 449, 476, 477, 495, 497, 504, 550, 553, 609, 700, 743, 763, 767, 773, 776, 781, 785, 786, 787, 788, 789, 790, 796, 831, 842, 852, 853, 855, 858, 862, 864, 866, 876], "fix_stim_artifact": [1, 866, 876], "correct": [1, 4, 8, 9, 11, 12, 16, 18, 21, 27, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 68, 70, 71, 72, 73, 76, 77, 78, 81, 83, 84, 85, 86, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 110, 111, 112, 114, 115, 117, 118, 119, 125, 126, 129, 130, 134, 135, 136, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 155, 158, 159, 160, 161, 164, 165, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 219, 220, 221, 225, 226, 227, 228, 229, 232, 233, 234, 238, 239, 242, 254, 256, 257, 259, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 276, 277, 278, 285, 307, 318, 351, 352, 357, 363, 408, 414, 415, 420, 427, 429, 447, 449, 458, 476, 477, 482, 484, 488, 491, 504, 505, 521, 524, 539, 540, 553, 555, 556, 557, 566, 567, 572, 573, 575, 584, 587, 591, 598, 604, 611, 614, 615, 633, 635, 651, 652, 653, 654, 655, 656, 657, 658, 674, 677, 680, 681, 682, 683, 684, 685, 696, 698, 699, 700, 708, 715, 767, 774, 775, 781, 782, 786, 787, 795, 797, 798, 800, 803, 822, 824, 831, 833, 835, 840, 851, 854, 855, 858, 870, 873, 876], "delai": [1, 4, 19, 190, 193, 204, 205, 209, 242, 255, 257, 262, 263, 264, 265, 414, 420, 425, 444, 446, 447, 476, 477, 516, 607, 784, 852, 876], "due": [1, 5, 40, 43, 47, 79, 133, 167, 188, 189, 197, 199, 200, 204, 208, 209, 210, 213, 216, 220, 239, 258, 262, 263, 264, 265, 266, 268, 400, 407, 414, 425, 429, 442, 473, 474, 476, 477, 566, 567, 575, 581, 584, 598, 618, 624, 699, 743, 825, 831, 851, 855, 858, 876], "hardwar": [1, 165, 189, 199, 206, 255, 262, 263, 267, 373, 400, 476, 477, 556, 773, 790, 796, 831, 841, 858, 861, 876], "i": [1, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 21, 22, 26, 27, 28, 31, 32, 34, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 54, 59, 60, 63, 65, 68, 69, 70, 71, 72, 73, 74, 77, 79, 80, 81, 85, 86, 88, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 107, 108, 110, 111, 112, 113, 114, 115, 117, 118, 121, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 164, 165, 166, 168, 170, 171, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 228, 229, 232, 233, 234, 237, 238, 239, 242, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 294, 295, 296, 298, 300, 302, 304, 305, 306, 310, 312, 315, 316, 318, 320, 321, 322, 323, 325, 327, 328, 329, 335, 337, 339, 340, 341, 345, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 365, 367, 368, 369, 370, 371, 373, 375, 376, 377, 378, 380, 381, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 432, 433, 434, 435, 437, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 464, 465, 466, 467, 468, 471, 473, 474, 475, 476, 477, 478, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 513, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 538, 539, 540, 542, 543, 545, 546, 547, 551, 552, 553, 555, 556, 557, 558, 559, 560, 561, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 588, 589, 591, 592, 593, 598, 599, 601, 602, 604, 607, 608, 609, 610, 611, 612, 613, 614, 615, 618, 619, 621, 624, 627, 630, 633, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 670, 671, 672, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 712, 714, 715, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 731, 733, 737, 738, 739, 741, 742, 743, 744, 746, 748, 751, 752, 753, 755, 756, 759, 760, 761, 764, 766, 767, 768, 769, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 816, 821, 822, 824, 826, 829, 831, 834, 835, 836, 838, 840, 843, 846, 847, 849, 851, 852, 853, 854, 856, 857, 859, 860, 861, 862, 863, 864, 866, 876], "4": [1, 2, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 121, 122, 123, 125, 128, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 163, 165, 167, 168, 170, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 190, 193, 194, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 242, 254, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 276, 277, 278, 295, 296, 303, 304, 310, 311, 312, 333, 352, 378, 386, 408, 414, 415, 416, 421, 427, 431, 432, 443, 449, 451, 466, 473, 474, 476, 477, 513, 523, 530, 555, 556, 561, 563, 565, 568, 570, 577, 583, 593, 599, 618, 637, 641, 645, 649, 656, 676, 677, 680, 684, 695, 696, 698, 699, 700, 712, 714, 719, 722, 723, 724, 725, 726, 727, 728, 731, 732, 733, 743, 746, 758, 759, 760, 762, 767, 773, 774, 775, 777, 779, 782, 783, 786, 793, 795, 796, 797, 798, 799, 801, 803, 805, 806, 807, 816, 831, 833, 834, 840, 841, 851, 852, 855, 858, 861], "m": [1, 2, 4, 5, 8, 16, 18, 19, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 39, 40, 41, 44, 45, 46, 48, 50, 51, 53, 54, 55, 57, 58, 59, 60, 68, 70, 71, 72, 77, 84, 85, 94, 95, 96, 97, 98, 99, 101, 103, 107, 108, 111, 112, 114, 117, 118, 121, 124, 125, 133, 134, 136, 139, 140, 142, 143, 144, 148, 149, 150, 155, 156, 157, 158, 160, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 193, 198, 199, 200, 203, 205, 207, 208, 210, 214, 215, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 242, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 273, 276, 277, 278, 298, 302, 303, 323, 328, 333, 335, 337, 339, 341, 342, 343, 345, 352, 357, 363, 371, 378, 385, 400, 401, 408, 410, 412, 414, 415, 416, 419, 429, 432, 444, 446, 447, 451, 469, 470, 473, 474, 476, 477, 479, 492, 512, 520, 523, 531, 534, 538, 555, 556, 558, 564, 565, 567, 570, 572, 573, 575, 582, 584, 589, 592, 608, 645, 649, 653, 656, 658, 661, 666, 667, 668, 670, 671, 677, 682, 683, 684, 686, 687, 691, 696, 698, 699, 700, 712, 722, 725, 728, 743, 746, 760, 767, 775, 777, 778, 779, 782, 783, 786, 795, 796, 798, 801, 803, 805, 806, 807, 811, 813, 831, 835, 842, 850, 852, 858, 861, 862, 876], "shift_tim": [1, 84, 139, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 696, 699, 876], "004": [1, 10, 32, 33, 44, 119, 126, 139, 141, 144, 148, 165, 168, 175, 202, 221, 242, 274, 358, 520], "result": [1, 8, 9, 26, 29, 30, 45, 46, 55, 58, 60, 69, 78, 81, 88, 97, 99, 101, 105, 112, 124, 125, 132, 133, 135, 136, 143, 145, 148, 150, 154, 155, 156, 158, 159, 161, 165, 166, 169, 171, 175, 177, 187, 193, 194, 197, 200, 202, 203, 204, 205, 207, 213, 214, 216, 219, 221, 224, 225, 228, 229, 232, 233, 234, 242, 254, 256, 257, 262, 263, 264, 265, 267, 269, 270, 273, 274, 276, 277, 278, 287, 289, 296, 312, 315, 316, 351, 352, 357, 359, 361, 385, 387, 407, 409, 410, 424, 433, 442, 448, 466, 471, 473, 474, 476, 477, 493, 509, 516, 520, 523, 525, 526, 527, 529, 534, 535, 542, 556, 561, 567, 572, 573, 575, 582, 584, 601, 607, 615, 638, 648, 649, 650, 659, 660, 662, 681, 682, 683, 684, 685, 686, 687, 688, 696, 698, 699, 700, 743, 751, 767, 773, 774, 796, 835, 840, 851, 852, 855, 858, 861, 876], "time_unit": [1, 11, 14, 35, 40, 42, 43, 51, 59, 61, 68, 70, 84, 90, 91, 97, 98, 99, 119, 149, 150, 151, 161, 174, 176, 177, 182, 183, 184, 190, 194, 220, 225, 226, 227, 261, 264, 265, 269, 270, 273, 276, 277, 278, 767, 777, 779, 782, 783, 801, 806, 876], "": [1, 4, 7, 8, 10, 11, 12, 13, 14, 16, 18, 19, 21, 24, 26, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 51, 52, 53, 55, 58, 59, 61, 63, 68, 69, 70, 71, 72, 73, 74, 75, 79, 80, 84, 85, 90, 91, 94, 97, 98, 99, 101, 102, 105, 106, 107, 108, 110, 111, 113, 114, 117, 118, 119, 121, 123, 124, 125, 127, 131, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 242, 253, 254, 256, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 286, 288, 295, 296, 300, 301, 302, 319, 326, 351, 352, 356, 358, 364, 365, 382, 383, 385, 400, 401, 408, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 429, 432, 438, 439, 440, 441, 442, 444, 446, 447, 448, 467, 470, 473, 474, 476, 477, 481, 484, 491, 493, 498, 499, 507, 511, 515, 518, 520, 522, 523, 534, 538, 539, 540, 555, 556, 557, 567, 573, 574, 577, 578, 583, 584, 588, 591, 614, 615, 624, 626, 627, 628, 629, 633, 634, 636, 638, 641, 642, 644, 645, 646, 653, 656, 658, 673, 682, 683, 684, 685, 686, 687, 691, 692, 694, 696, 697, 698, 699, 700, 708, 712, 714, 715, 720, 722, 724, 725, 727, 728, 731, 735, 742, 743, 751, 752, 760, 761, 767, 769, 771, 773, 774, 777, 779, 780, 782, 783, 786, 790, 796, 798, 799, 801, 803, 804, 805, 806, 807, 811, 825, 826, 831, 833, 835, 839, 841, 847, 850, 851, 852, 853, 855, 857, 858, 860, 861, 862, 863, 864], "topomap": [1, 19, 42, 72, 81, 85, 117, 141, 150, 169, 202, 205, 229, 238, 259, 262, 263, 264, 265, 271, 272, 310, 408, 415, 476, 477, 555, 556, 570, 696, 698, 700, 760, 773, 775, 777, 780, 782, 786, 793, 794, 795, 796, 797, 798, 799, 803, 805, 831, 876], "plot_topomap": [1, 15, 16, 18, 19, 21, 42, 69, 70, 78, 85, 98, 107, 140, 141, 143, 149, 150, 165, 169, 175, 176, 190, 197, 205, 209, 216, 229, 237, 238, 239, 259, 262, 263, 264, 265, 271, 476, 477, 556, 696, 698, 700, 763, 775, 780, 788, 866, 876], "time": [1, 2, 4, 5, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 63, 64, 65, 67, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 88, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 140, 142, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 187, 189, 190, 193, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 214, 215, 216, 219, 220, 221, 224, 225, 228, 232, 233, 234, 237, 242, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 294, 295, 339, 340, 341, 342, 343, 344, 345, 346, 348, 351, 352, 355, 357, 358, 359, 361, 371, 400, 408, 409, 410, 411, 414, 415, 417, 418, 419, 420, 421, 422, 424, 431, 432, 434, 436, 437, 442, 444, 446, 447, 449, 450, 451, 461, 466, 471, 472, 473, 474, 475, 476, 477, 489, 491, 496, 504, 509, 511, 517, 518, 522, 523, 524, 526, 527, 529, 530, 531, 534, 535, 537, 539, 540, 547, 551, 553, 555, 556, 558, 559, 560, 561, 564, 565, 566, 568, 569, 570, 572, 573, 574, 575, 577, 578, 582, 592, 598, 601, 605, 606, 610, 611, 614, 615, 616, 618, 624, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 670, 671, 672, 676, 681, 682, 683, 684, 685, 686, 687, 688, 689, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 710, 712, 715, 721, 722, 723, 724, 725, 726, 727, 728, 742, 743, 747, 757, 760, 766, 767, 770, 771, 773, 774, 775, 776, 777, 778, 779, 780, 782, 783, 784, 785, 786, 787, 790, 794, 795, 796, 797, 798, 801, 802, 803, 804, 805, 806, 807, 821, 831, 833, 834, 839, 841, 842, 847, 851, 852, 853, 855, 857, 858, 861, 862, 866, 876], "arraidirectori": [1, 12, 21, 33, 34, 79, 80, 92, 93, 114, 117, 121, 154, 155, 160, 165, 170, 171, 183, 190, 254, 260, 267, 268, 269, 272, 273, 276, 277, 278, 301, 305, 306, 307, 310, 358, 363, 364, 365, 370, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 427, 458, 460, 464, 466, 467, 468, 469, 470, 483, 489, 502, 505, 509, 513, 515, 542, 581, 601, 615, 619, 621, 628, 634, 635, 636, 639, 644, 645, 659, 662, 673, 691, 692, 735, 743, 759, 761, 771, 801, 807, 816, 826, 835, 838, 841, 851, 855, 876], "home": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 129, 130, 131, 133, 134, 136, 139, 140, 142, 143, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 161, 165, 166, 167, 168, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 194, 197, 201, 202, 203, 204, 205, 207, 208, 209, 213, 216, 220, 221, 225, 226, 227, 228, 229, 232, 234, 238, 262, 263, 370, 378, 476, 477, 773, 796, 834, 840, 876], "circleci": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 129, 130, 131, 133, 134, 136, 139, 140, 142, 143, 145, 148, 149, 150, 151, 155, 156, 157, 158, 161, 165, 166, 167, 168, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 194, 197, 201, 202, 203, 204, 205, 207, 208, 209, 213, 216, 220, 221, 225, 226, 227, 228, 229, 232, 234, 238, 835], "mne_data": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 129, 130, 131, 133, 134, 136, 140, 142, 143, 145, 148, 149, 150, 151, 155, 156, 157, 158, 161, 165, 166, 167, 168, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 194, 197, 201, 202, 203, 204, 205, 207, 208, 209, 213, 216, 220, 221, 225, 226, 227, 228, 229, 232, 234, 238, 375, 376, 377, 378, 380, 381, 383, 384, 388, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 835, 855, 876], "data": [1, 2, 3, 6, 9, 10, 12, 14, 16, 17, 20, 22, 24, 26, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 71, 73, 75, 76, 77, 80, 81, 82, 83, 85, 86, 89, 96, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 115, 116, 120, 121, 122, 124, 125, 126, 128, 129, 130, 131, 132, 133, 137, 138, 142, 143, 144, 147, 150, 152, 153, 154, 155, 156, 157, 159, 160, 161, 169, 170, 172, 173, 175, 178, 180, 181, 182, 183, 184, 185, 186, 192, 194, 195, 196, 197, 198, 200, 203, 204, 205, 206, 207, 208, 211, 212, 218, 222, 223, 224, 226, 227, 231, 235, 236, 238, 240, 241, 242, 249, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 300, 301, 307, 308, 309, 310, 311, 312, 314, 316, 318, 322, 324, 325, 326, 327, 328, 333, 335, 336, 337, 339, 341, 343, 344, 345, 346, 347, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 364, 367, 368, 369, 371, 375, 376, 377, 378, 379, 380, 381, 383, 384, 386, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 431, 432, 434, 435, 436, 437, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 460, 465, 467, 471, 473, 474, 475, 476, 477, 478, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519, 522, 523, 524, 525, 526, 529, 530, 531, 534, 537, 538, 539, 540, 547, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 593, 599, 602, 603, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 622, 624, 626, 628, 629, 638, 641, 644, 645, 646, 647, 648, 649, 650, 652, 654, 655, 656, 660, 662, 664, 668, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 691, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 714, 715, 723, 724, 725, 726, 727, 728, 732, 737, 738, 743, 747, 751, 756, 758, 759, 760, 761, 762, 764, 765, 767, 768, 770, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 790, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 808, 810, 811, 813, 815, 822, 829, 830, 831, 832, 835, 836, 842, 847, 850, 853, 856, 857, 862, 863, 864, 866, 871, 876], "res4": [1, 12, 21, 79, 80, 117, 121, 183, 190], "read": [1, 2, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 70, 71, 72, 73, 74, 75, 77, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 134, 135, 139, 140, 141, 142, 143, 145, 148, 150, 151, 155, 156, 157, 158, 159, 160, 161, 165, 166, 168, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 216, 219, 220, 221, 225, 226, 227, 228, 233, 238, 254, 255, 256, 257, 259, 262, 263, 264, 265, 267, 273, 275, 295, 296, 299, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 349, 352, 356, 357, 367, 368, 369, 371, 408, 415, 416, 440, 449, 450, 451, 452, 456, 458, 461, 467, 471, 473, 474, 475, 476, 477, 480, 481, 482, 483, 484, 488, 489, 490, 491, 492, 493, 495, 496, 498, 500, 501, 502, 506, 507, 522, 534, 536, 537, 545, 558, 578, 594, 595, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 629, 630, 631, 633, 634, 636, 643, 649, 697, 716, 718, 735, 751, 759, 783, 811, 822, 823, 831, 835, 838, 843, 851, 853, 858, 859, 862, 864, 866, 876], "hc": [1, 12, 21, 79, 80, 117, 121, 183, 190], "separ": [1, 10, 12, 16, 21, 32, 33, 45, 47, 69, 73, 79, 80, 81, 92, 117, 121, 134, 139, 140, 141, 144, 145, 148, 149, 150, 154, 155, 159, 160, 161, 164, 167, 174, 183, 188, 190, 194, 197, 200, 202, 203, 204, 205, 207, 211, 212, 213, 214, 215, 232, 234, 237, 242, 244, 254, 256, 257, 262, 263, 264, 265, 267, 271, 272, 295, 296, 322, 340, 342, 343, 345, 346, 349, 353, 354, 355, 360, 369, 383, 390, 408, 415, 429, 441, 471, 476, 477, 492, 499, 515, 517, 556, 566, 567, 568, 569, 572, 575, 582, 584, 598, 608, 615, 645, 651, 652, 653, 654, 655, 656, 657, 658, 683, 684, 686, 687, 698, 699, 700, 701, 702, 703, 726, 727, 733, 743, 748, 766, 767, 773, 774, 775, 782, 783, 785, 790, 795, 796, 797, 831, 833, 835, 839, 851, 852, 853, 855, 858, 861, 864, 876], "posit": [1, 4, 12, 19, 21, 24, 27, 38, 39, 41, 45, 69, 74, 77, 78, 80, 81, 88, 91, 92, 93, 99, 110, 117, 120, 121, 125, 128, 133, 134, 135, 149, 150, 155, 157, 158, 159, 169, 174, 175, 177, 182, 183, 184, 187, 189, 190, 197, 198, 202, 204, 208, 210, 221, 224, 228, 232, 239, 242, 254, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 288, 302, 304, 310, 311, 312, 323, 326, 328, 330, 333, 336, 340, 342, 343, 348, 349, 350, 352, 364, 379, 387, 408, 411, 414, 415, 418, 420, 427, 428, 429, 436, 450, 451, 460, 467, 476, 477, 489, 492, 496, 499, 500, 506, 518, 555, 556, 560, 561, 563, 570, 575, 577, 582, 584, 606, 608, 645, 647, 648, 649, 653, 654, 655, 656, 657, 658, 659, 661, 664, 665, 680, 696, 698, 699, 700, 711, 719, 720, 743, 744, 748, 756, 759, 760, 762, 767, 773, 774, 775, 778, 780, 781, 782, 785, 786, 792, 795, 796, 798, 799, 801, 803, 804, 805, 807, 811, 813, 831, 835, 851, 852, 858, 861, 865, 876], "file": [1, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 40, 41, 42, 43, 44, 45, 46, 49, 56, 59, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 75, 78, 79, 80, 81, 82, 83, 86, 89, 90, 91, 92, 94, 95, 97, 98, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 116, 117, 118, 119, 121, 125, 126, 127, 128, 130, 131, 133, 134, 136, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 170, 173, 176, 179, 180, 181, 182, 183, 184, 186, 187, 189, 190, 192, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 213, 216, 218, 220, 221, 223, 226, 227, 228, 229, 231, 232, 234, 236, 238, 241, 249, 256, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 286, 299, 301, 302, 305, 306, 307, 310, 311, 316, 318, 319, 322, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 340, 342, 355, 360, 361, 363, 364, 365, 370, 378, 382, 383, 384, 385, 391, 400, 401, 427, 429, 437, 438, 439, 440, 441, 449, 450, 456, 457, 458, 460, 461, 465, 467, 468, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 515, 516, 518, 519, 529, 536, 537, 541, 545, 546, 555, 556, 566, 567, 568, 569, 575, 581, 584, 594, 595, 596, 597, 600, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 620, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 633, 634, 635, 636, 639, 640, 642, 645, 647, 648, 649, 661, 664, 673, 691, 694, 695, 696, 697, 698, 699, 700, 716, 717, 718, 729, 731, 737, 743, 751, 759, 761, 796, 807, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 833, 834, 835, 840, 841, 842, 847, 852, 862, 866, 876], "present": [1, 4, 10, 12, 13, 16, 21, 31, 40, 43, 44, 68, 80, 114, 117, 121, 124, 132, 139, 141, 143, 148, 149, 157, 165, 167, 168, 169, 179, 187, 188, 190, 197, 198, 202, 204, 205, 206, 208, 214, 216, 224, 228, 232, 233, 234, 242, 254, 255, 257, 259, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 281, 282, 283, 286, 295, 296, 300, 305, 310, 316, 318, 327, 332, 341, 345, 352, 356, 357, 358, 366, 367, 368, 369, 389, 408, 415, 427, 429, 432, 437, 449, 450, 451, 452, 456, 471, 473, 474, 476, 477, 484, 487, 491, 498, 515, 522, 534, 553, 555, 556, 558, 559, 566, 567, 570, 572, 576, 584, 592, 611, 612, 660, 665, 681, 696, 698, 699, 700, 714, 731, 743, 759, 760, 766, 767, 773, 775, 777, 779, 782, 783, 786, 793, 795, 796, 797, 798, 799, 802, 803, 805, 831, 841, 851, 852, 858, 861, 876], "quaternion": [1, 12, 21, 79, 80, 117, 121, 183, 190, 348, 349, 350, 560, 563, 734, 736, 785, 876], "match": [1, 4, 8, 9, 11, 12, 17, 18, 20, 21, 27, 28, 31, 32, 33, 34, 40, 41, 45, 46, 47, 49, 51, 58, 59, 61, 68, 70, 71, 72, 73, 78, 79, 80, 81, 86, 88, 91, 92, 93, 94, 95, 98, 99, 101, 102, 105, 106, 107, 108, 110, 111, 112, 115, 117, 119, 121, 126, 130, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 150, 151, 156, 160, 161, 165, 168, 171, 176, 179, 181, 182, 183, 184, 190, 193, 197, 198, 199, 201, 202, 205, 209, 210, 213, 214, 215, 219, 220, 221, 225, 226, 227, 228, 229, 232, 234, 238, 255, 257, 259, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 276, 277, 278, 315, 327, 352, 356, 363, 367, 368, 408, 409, 414, 415, 416, 418, 424, 429, 432, 433, 435, 437, 439, 440, 442, 458, 475, 476, 477, 484, 491, 498, 542, 545, 548, 553, 555, 556, 565, 566, 570, 575, 585, 598, 608, 610, 611, 631, 634, 646, 661, 682, 687, 691, 696, 697, 698, 699, 700, 712, 713, 722, 733, 767, 773, 774, 775, 779, 782, 783, 786, 789, 795, 796, 797, 798, 822, 835, 839, 858, 876], "desir": [1, 5, 11, 12, 21, 22, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 67, 69, 79, 80, 88, 90, 91, 92, 93, 99, 102, 105, 106, 108, 110, 117, 121, 122, 125, 129, 141, 145, 150, 156, 160, 165, 167, 169, 171, 176, 177, 178, 179, 180, 183, 187, 188, 190, 193, 194, 198, 199, 200, 201, 204, 214, 220, 221, 232, 234, 255, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 358, 407, 432, 443, 476, 477, 517, 534, 555, 578, 593, 641, 696, 698, 699, 700, 730, 743, 806, 841, 851, 853, 855, 861, 876], "v": [1, 4, 8, 9, 12, 13, 21, 24, 27, 28, 32, 43, 54, 55, 63, 65, 69, 74, 79, 80, 103, 104, 117, 121, 125, 130, 136, 140, 170, 171, 177, 183, 190, 193, 197, 200, 204, 225, 228, 229, 234, 237, 242, 254, 257, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 273, 276, 277, 278, 281, 285, 286, 296, 300, 318, 342, 357, 371, 378, 414, 415, 416, 429, 476, 477, 522, 531, 556, 564, 567, 572, 573, 575, 584, 591, 682, 696, 698, 699, 700, 708, 714, 723, 726, 727, 728, 731, 747, 831, 835, 839, 851, 858, 861, 876], "transform": [1, 5, 7, 8, 11, 12, 14, 16, 19, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 67, 73, 76, 79, 80, 81, 83, 86, 88, 90, 91, 92, 93, 101, 102, 105, 106, 107, 108, 110, 111, 113, 117, 121, 122, 123, 125, 129, 133, 134, 144, 149, 154, 156, 157, 158, 165, 166, 168, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 190, 203, 206, 213, 220, 221, 237, 239, 242, 254, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 302, 310, 313, 314, 324, 352, 358, 359, 361, 363, 364, 365, 371, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 421, 422, 423, 426, 427, 429, 449, 451, 459, 467, 468, 469, 470, 476, 477, 483, 506, 515, 518, 519, 529, 530, 539, 540, 556, 557, 560, 563, 565, 567, 575, 581, 584, 585, 616, 620, 628, 629, 636, 641, 661, 664, 681, 691, 693, 698, 700, 702, 705, 711, 712, 715, 719, 720, 721, 722, 723, 724, 725, 728, 730, 743, 759, 760, 807, 813, 822, 823, 831, 842, 851, 852, 855, 865, 866, 876], "84": [1, 11, 13, 19, 34, 35, 41, 47, 58, 79, 106, 107, 110, 112, 117, 127, 133, 135, 136, 150, 168, 193, 194, 198, 207, 224, 225, 226, 228, 229, 233, 234, 242, 485, 588], "69": [1, 13, 15, 19, 35, 40, 47, 49, 79, 80, 101, 106, 110, 112, 117, 139, 142, 168, 175, 179, 183, 184, 190, 193, 194, 202, 207, 224, 225, 226, 228, 229, 232, 233, 234, 242, 262, 263, 295, 400], "49": [1, 5, 13, 19, 28, 30, 31, 34, 35, 38, 39, 40, 41, 44, 45, 47, 48, 50, 51, 54, 55, 57, 58, 59, 60, 77, 79, 84, 85, 101, 102, 106, 110, 111, 112, 114, 117, 118, 121, 125, 148, 168, 171, 175, 177, 178, 180, 183, 184, 190, 194, 207, 208, 209, 215, 221, 224, 225, 226, 228, 229, 233, 234, 242, 741, 834, 876], "00": [1, 2, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 24, 25, 26, 33, 34, 41, 42, 44, 45, 46, 50, 56, 59, 66, 69, 70, 71, 72, 75, 79, 80, 81, 82, 83, 86, 88, 89, 91, 94, 97, 99, 100, 101, 102, 104, 106, 107, 110, 111, 112, 113, 117, 119, 121, 125, 128, 131, 135, 138, 140, 142, 143, 145, 147, 150, 153, 155, 156, 157, 158, 159, 163, 166, 167, 168, 171, 173, 175, 179, 180, 181, 182, 183, 184, 186, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 218, 219, 221, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 241, 242, 523, 555, 564], "mm": [1, 4, 5, 12, 21, 24, 26, 41, 44, 45, 50, 69, 70, 72, 75, 77, 78, 79, 80, 81, 88, 91, 92, 93, 107, 117, 121, 125, 133, 135, 140, 145, 150, 155, 156, 157, 158, 159, 160, 166, 167, 175, 177, 179, 180, 181, 182, 183, 184, 190, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 220, 221, 254, 260, 267, 269, 270, 273, 276, 277, 278, 303, 333, 335, 337, 358, 363, 427, 451, 460, 466, 469, 470, 488, 492, 509, 519, 608, 644, 645, 733, 735, 742, 743, 801, 806, 811, 851, 858, 876], "orig": [1, 12, 21, 79, 80, 117, 121, 159, 183, 190, 198, 536, 548, 549, 554], "44": [1, 13, 19, 28, 35, 41, 45, 46, 47, 79, 101, 102, 106, 110, 111, 112, 114, 117, 157, 167, 168, 175, 179, 180, 182, 183, 186, 194, 200, 207, 208, 209, 218, 224, 225, 226, 228, 229, 232, 234, 242, 295, 296, 429, 471, 683, 684, 686, 687, 876], "30": [1, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 19, 24, 25, 26, 28, 33, 34, 35, 41, 42, 45, 46, 47, 50, 58, 69, 72, 73, 75, 79, 80, 81, 83, 88, 90, 92, 95, 99, 101, 104, 105, 106, 107, 111, 112, 113, 114, 117, 121, 125, 128, 133, 135, 143, 145, 150, 153, 155, 157, 159, 165, 168, 170, 171, 182, 183, 193, 194, 197, 199, 200, 202, 203, 205, 206, 207, 209, 213, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 239, 242, 254, 262, 263, 264, 265, 273, 275, 301, 305, 333, 352, 476, 477, 507, 555, 559, 564, 575, 649, 660, 661, 698, 700, 712, 722, 723, 725, 726, 728, 747, 751, 775, 833, 851, 852, 858, 861, 876], "51": [1, 5, 8, 13, 19, 28, 34, 35, 45, 47, 50, 69, 70, 78, 79, 80, 101, 106, 107, 110, 112, 117, 125, 151, 155, 157, 168, 170, 171, 173, 183, 184, 190, 193, 196, 199, 203, 206, 207, 208, 213, 224, 225, 226, 228, 229, 234, 242, 272, 378, 584, 852, 876], "45": [1, 5, 8, 9, 11, 15, 16, 19, 28, 35, 45, 50, 79, 82, 101, 106, 107, 110, 111, 112, 117, 119, 121, 140, 142, 143, 144, 148, 155, 156, 157, 167, 168, 175, 179, 180, 190, 193, 194, 200, 202, 203, 205, 206, 207, 208, 212, 215, 224, 225, 226, 228, 229, 232, 233, 234, 239, 256, 262, 263, 264, 265, 295, 296, 333, 352, 356, 357, 367, 368, 369, 408, 415, 443, 451, 452, 471, 473, 474, 476, 477, 534, 556, 677, 698, 700, 747, 775, 783, 858, 876], "252": [1, 13, 35, 56, 59, 110, 117, 121, 168, 207, 220, 223, 224, 228, 229], "43": [1, 13, 19, 26, 28, 34, 35, 41, 45, 46, 47, 48, 50, 54, 55, 79, 80, 101, 105, 106, 110, 112, 117, 121, 144, 145, 147, 156, 157, 168, 175, 176, 180, 181, 186, 194, 207, 212, 224, 225, 226, 227, 228, 229, 232, 233, 234, 242, 262, 263, 333, 698, 699], "diff": [1, 9, 12, 21, 69, 79, 80, 117, 121, 132, 175, 182, 183, 190, 213, 232, 751, 843], "000": [1, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 34, 42, 59, 63, 65, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 86, 88, 91, 92, 93, 97, 107, 110, 111, 112, 113, 117, 119, 121, 126, 127, 128, 131, 133, 135, 139, 140, 141, 142, 143, 145, 148, 150, 151, 158, 165, 166, 167, 171, 178, 180, 181, 182, 183, 184, 189, 190, 192, 194, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 215, 216, 219, 221, 225, 227, 228, 229, 238, 500, 610], "46": [1, 12, 13, 19, 21, 28, 33, 34, 35, 40, 45, 47, 51, 55, 71, 79, 101, 106, 110, 112, 117, 121, 148, 168, 194, 199, 200, 202, 207, 215, 224, 225, 226, 228, 229, 232, 233, 234, 242, 858, 876], "28": [1, 11, 13, 18, 19, 26, 28, 34, 35, 41, 44, 45, 47, 50, 56, 59, 66, 79, 94, 101, 106, 107, 110, 112, 117, 118, 128, 139, 157, 168, 170, 174, 175, 180, 181, 182, 183, 184, 186, 193, 194, 199, 201, 207, 221, 223, 224, 225, 226, 228, 229, 234, 238, 242, 333, 876], "53": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 28, 32, 33, 34, 35, 40, 42, 45, 46, 47, 72, 75, 79, 80, 81, 82, 86, 92, 97, 101, 102, 106, 110, 111, 112, 113, 117, 119, 121, 131, 133, 135, 136, 138, 140, 143, 144, 145, 150, 154, 157, 161, 163, 168, 183, 190, 193, 194, 200, 201, 202, 203, 207, 208, 209, 210, 215, 224, 225, 226, 228, 229, 233, 234, 242, 677, 855], "58": [1, 11, 13, 19, 25, 35, 40, 45, 47, 48, 49, 54, 55, 57, 58, 59, 77, 79, 88, 91, 92, 101, 106, 107, 110, 112, 114, 117, 119, 125, 135, 136, 148, 150, 151, 161, 168, 171, 177, 181, 190, 194, 197, 203, 205, 207, 213, 224, 225, 228, 229, 242, 352, 858, 876], "243": [1, 79, 110, 117, 149, 153, 168, 190, 207, 229], "47": [1, 10, 13, 16, 19, 28, 33, 35, 45, 51, 79, 82, 101, 106, 110, 112, 117, 136, 158, 167, 168, 180, 182, 193, 194, 207, 215, 224, 225, 226, 228, 229, 233, 234, 236, 242, 298, 333, 401, 851, 852, 858], "86": [1, 5, 12, 13, 15, 19, 26, 34, 35, 40, 41, 47, 50, 79, 94, 101, 106, 110, 112, 117, 136, 139, 150, 155, 156, 157, 167, 168, 171, 175, 180, 181, 183, 193, 194, 201, 203, 205, 206, 210, 214, 224, 225, 226, 228, 229, 233, 234, 242, 415, 710, 712, 722, 726, 850], "41": [1, 19, 28, 34, 35, 41, 44, 45, 47, 79, 80, 89, 92, 94, 101, 104, 106, 110, 112, 117, 136, 167, 168, 182, 183, 190, 193, 194, 203, 205, 206, 207, 213, 224, 225, 226, 228, 229, 232, 233, 234, 239, 242, 274, 358, 400, 408, 876], "63": [1, 13, 19, 35, 45, 47, 69, 79, 80, 99, 101, 106, 110, 112, 115, 117, 142, 168, 183, 184, 190, 193, 194, 207, 224, 225, 226, 228, 229, 232, 233, 234, 876], "55": [1, 11, 19, 21, 28, 30, 31, 32, 35, 38, 39, 40, 41, 44, 45, 46, 48, 50, 54, 55, 56, 57, 58, 60, 77, 79, 84, 85, 99, 101, 106, 107, 110, 112, 114, 117, 118, 122, 125, 142, 148, 150, 159, 168, 171, 176, 177, 179, 180, 193, 202, 203, 205, 207, 209, 215, 224, 225, 226, 228, 229, 232, 233, 234, 242, 408, 416, 523, 555, 556, 599, 833, 876], "82": [1, 13, 19, 35, 46, 79, 101, 110, 112, 117, 144, 168, 179, 180, 183, 190, 193, 194, 207, 224, 225, 226, 228, 229, 234, 238, 400, 443], "230": [1, 5, 79, 86, 117, 168, 224, 228, 229], "26": [1, 5, 11, 13, 16, 19, 28, 32, 34, 35, 41, 44, 45, 47, 56, 64, 79, 80, 91, 99, 101, 106, 107, 110, 112, 117, 135, 136, 144, 157, 168, 170, 182, 183, 184, 190, 193, 194, 196, 207, 224, 225, 226, 228, 229, 232, 233, 234, 242, 274, 275, 358, 391, 523, 852], "coordin": [1, 5, 11, 12, 21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 67, 70, 79, 80, 88, 90, 91, 92, 93, 102, 105, 106, 107, 108, 113, 117, 121, 122, 125, 129, 133, 134, 135, 149, 157, 158, 162, 163, 164, 165, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 190, 194, 206, 208, 210, 220, 221, 232, 234, 242, 259, 260, 262, 263, 264, 265, 266, 267, 268, 271, 275, 277, 278, 300, 302, 303, 304, 310, 313, 314, 319, 323, 326, 328, 329, 331, 333, 337, 362, 363, 365, 387, 408, 415, 427, 429, 451, 459, 467, 469, 470, 473, 476, 477, 480, 483, 487, 488, 500, 506, 508, 515, 520, 555, 556, 567, 570, 575, 584, 616, 626, 627, 629, 630, 645, 649, 673, 676, 696, 698, 700, 730, 731, 742, 743, 744, 759, 760, 761, 767, 771, 775, 777, 779, 781, 782, 783, 785, 786, 793, 795, 797, 798, 799, 803, 805, 811, 813, 823, 824, 829, 831, 852, 876], "establish": [1, 12, 21, 79, 80, 117, 121, 183, 187, 190, 200, 229, 242, 683, 684, 686, 687], "digit": [1, 70, 72, 75, 79, 80, 81, 88, 91, 116, 117, 121, 125, 133, 140, 145, 150, 155, 156, 158, 159, 166, 167, 168, 181, 184, 187, 188, 190, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 221, 242, 254, 255, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 273, 276, 277, 278, 303, 304, 310, 323, 324, 326, 328, 331, 332, 335, 337, 339, 340, 342, 363, 408, 415, 427, 429, 449, 467, 476, 477, 480, 483, 489, 500, 508, 515, 520, 555, 556, 565, 566, 567, 570, 575, 584, 610, 611, 645, 696, 698, 699, 700, 743, 759, 760, 767, 775, 777, 779, 782, 783, 786, 793, 795, 797, 798, 799, 803, 805, 813, 831, 851, 852, 861, 876], "point": [1, 5, 8, 9, 11, 12, 16, 18, 21, 22, 26, 27, 32, 33, 34, 36, 38, 41, 42, 44, 45, 46, 49, 54, 55, 56, 58, 60, 70, 71, 72, 75, 79, 80, 81, 88, 91, 92, 94, 95, 98, 99, 101, 105, 107, 108, 110, 111, 112, 113, 115, 117, 118, 119, 121, 125, 126, 132, 133, 134, 135, 136, 139, 140, 141, 143, 144, 145, 148, 149, 150, 151, 155, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 190, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 238, 239, 242, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 295, 296, 303, 304, 310, 313, 314, 319, 323, 328, 332, 333, 334, 335, 337, 340, 346, 348, 352, 357, 358, 362, 363, 365, 407, 408, 409, 410, 414, 415, 417, 424, 427, 429, 442, 444, 446, 449, 467, 470, 471, 475, 476, 477, 479, 480, 483, 489, 495, 500, 508, 518, 519, 520, 522, 523, 532, 533, 534, 535, 537, 538, 555, 556, 558, 566, 567, 570, 575, 584, 605, 609, 610, 613, 614, 616, 619, 624, 627, 630, 641, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 663, 670, 672, 681, 682, 683, 684, 686, 687, 688, 696, 697, 698, 699, 700, 714, 715, 743, 744, 747, 748, 759, 760, 761, 762, 767, 771, 775, 777, 778, 779, 780, 782, 783, 786, 787, 790, 793, 795, 797, 798, 799, 801, 802, 803, 805, 806, 807, 811, 824, 829, 831, 835, 851, 853, 855, 857, 861, 864, 876], "subj00111092011": [1, 117], "po": [1, 19, 41, 47, 50, 78, 79, 80, 82, 91, 113, 117, 135, 150, 155, 175, 182, 183, 184, 190, 206, 208, 260, 264, 265, 268, 269, 270, 273, 276, 277, 278, 302, 311, 336, 349, 350, 428, 451, 469, 470, 489, 560, 563, 618, 645, 785, 805, 861, 876], "polhemu": [1, 12, 21, 79, 80, 117, 121, 155, 169, 183, 190, 267, 310, 335, 337, 489, 858, 861, 876], "hpi": [1, 12, 21, 79, 80, 117, 121, 155, 165, 168, 169, 183, 187, 190, 197, 208, 213, 254, 262, 263, 264, 265, 267, 303, 304, 310, 313, 323, 333, 335, 339, 340, 341, 344, 345, 346, 363, 427, 428, 476, 477, 483, 553, 560, 696, 698, 699, 700, 766, 831, 858, 861, 865, 876], "coil": [1, 5, 12, 21, 26, 41, 45, 50, 79, 80, 107, 117, 121, 122, 149, 155, 157, 158, 175, 180, 181, 182, 183, 184, 187, 190, 197, 206, 207, 208, 254, 262, 263, 264, 265, 267, 318, 333, 339, 340, 342, 343, 344, 346, 347, 428, 451, 476, 477, 483, 500, 553, 566, 567, 584, 595, 610, 638, 696, 698, 699, 700, 737, 766, 831, 865, 876], "ad": [1, 4, 5, 11, 12, 21, 22, 27, 28, 29, 31, 35, 38, 39, 40, 41, 42, 43, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 67, 69, 70, 79, 80, 88, 90, 91, 92, 93, 99, 102, 105, 106, 108, 117, 118, 121, 122, 125, 129, 133, 139, 140, 141, 145, 150, 155, 157, 158, 159, 160, 161, 165, 169, 174, 176, 177, 178, 180, 181, 183, 190, 194, 199, 203, 205, 206, 208, 215, 216, 219, 220, 221, 224, 225, 232, 234, 254, 256, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 310, 336, 339, 341, 345, 358, 359, 369, 408, 415, 429, 452, 475, 476, 477, 499, 512, 517, 518, 519, 521, 555, 556, 558, 570, 572, 606, 641, 645, 646, 650, 660, 688, 691, 696, 698, 699, 700, 739, 743, 746, 748, 760, 761, 767, 771, 772, 775, 777, 779, 782, 783, 786, 790, 793, 795, 797, 798, 799, 801, 803, 805, 806, 835, 852, 858, 861, 864, 876], "devic": [1, 5, 12, 21, 26, 41, 45, 50, 70, 78, 79, 80, 107, 117, 121, 149, 155, 157, 164, 165, 168, 169, 175, 180, 182, 183, 184, 190, 191, 192, 204, 206, 210, 213, 254, 263, 264, 265, 267, 303, 310, 313, 326, 328, 335, 359, 361, 371, 374, 429, 440, 467, 476, 477, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 560, 563, 584, 585, 598, 608, 609, 610, 613, 641, 743, 759, 778, 822, 831, 847, 851, 852, 861, 876], "locat": [1, 4, 5, 12, 21, 26, 31, 35, 40, 41, 45, 47, 48, 49, 50, 55, 59, 60, 67, 78, 79, 80, 88, 91, 92, 93, 98, 107, 113, 116, 117, 121, 122, 134, 135, 136, 137, 138, 140, 148, 149, 154, 155, 157, 158, 159, 160, 162, 164, 165, 170, 172, 173, 174, 175, 176, 177, 179, 180, 182, 183, 184, 185, 186, 187, 190, 198, 204, 206, 207, 208, 210, 213, 219, 220, 221, 224, 225, 226, 228, 229, 234, 239, 242, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 275, 276, 277, 278, 295, 296, 304, 305, 306, 310, 311, 314, 316, 319, 321, 324, 326, 327, 328, 329, 330, 331, 332, 333, 336, 340, 342, 343, 344, 352, 364, 365, 375, 376, 377, 378, 380, 381, 383, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 415, 428, 429, 438, 441, 449, 459, 464, 468, 476, 477, 482, 486, 488, 495, 500, 506, 509, 519, 522, 523, 532, 533, 534, 538, 542, 547, 553, 555, 556, 560, 570, 577, 580, 581, 584, 595, 609, 610, 613, 618, 619, 635, 636, 638, 645, 648, 649, 659, 662, 683, 684, 686, 687, 688, 696, 698, 700, 732, 733, 735, 743, 759, 760, 764, 767, 771, 775, 777, 781, 782, 785, 786, 795, 796, 797, 798, 799, 803, 805, 808, 811, 813, 816, 831, 836, 841, 851, 852, 855, 861, 864, 865, 876], "measur": [1, 4, 5, 12, 21, 26, 41, 45, 50, 70, 72, 75, 78, 79, 80, 81, 88, 91, 101, 107, 117, 121, 125, 140, 143, 144, 145, 155, 157, 158, 161, 164, 165, 166, 167, 168, 169, 171, 175, 181, 183, 187, 188, 189, 190, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 221, 224, 229, 230, 231, 235, 236, 238, 239, 242, 255, 257, 259, 261, 262, 263, 264, 265, 266, 267, 271, 273, 275, 282, 283, 295, 296, 297, 303, 304, 308, 309, 316, 317, 318, 322, 324, 325, 338, 340, 342, 344, 347, 352, 356, 357, 358, 363, 367, 368, 369, 371, 408, 410, 412, 415, 416, 417, 427, 439, 440, 441, 451, 452, 459, 468, 471, 473, 474, 475, 476, 477, 478, 481, 489, 491, 504, 512, 515, 518, 519, 520, 522, 523, 524, 531, 532, 533, 534, 537, 552, 553, 556, 567, 581, 584, 585, 588, 589, 590, 611, 626, 631, 632, 641, 652, 653, 660, 661, 664, 668, 677, 678, 679, 680, 684, 687, 688, 696, 697, 698, 699, 700, 726, 743, 756, 759, 760, 763, 768, 769, 783, 785, 794, 795, 799, 822, 831, 843, 851, 852, 858, 861, 864, 876], "compos": [1, 12, 21, 26, 41, 45, 50, 79, 80, 107, 117, 121, 136, 157, 175, 183, 187, 190, 194, 851, 861], "find": [1, 5, 7, 11, 12, 19, 21, 27, 28, 29, 30, 38, 39, 44, 47, 48, 49, 50, 52, 57, 58, 60, 67, 68, 76, 79, 80, 81, 83, 102, 105, 106, 108, 117, 121, 122, 125, 126, 133, 135, 139, 140, 144, 149, 150, 154, 155, 156, 160, 165, 169, 171, 174, 175, 179, 180, 183, 190, 194, 197, 199, 200, 203, 208, 215, 221, 224, 225, 226, 234, 239, 242, 260, 264, 265, 267, 268, 269, 270, 273, 276, 277, 278, 316, 353, 354, 355, 363, 442, 447, 449, 450, 476, 477, 495, 523, 553, 556, 559, 562, 568, 569, 570, 571, 572, 573, 575, 576, 577, 579, 580, 593, 609, 613, 634, 655, 659, 662, 673, 743, 780, 782, 816, 831, 833, 835, 838, 839, 840, 841, 852, 855, 858, 859, 861, 876], "sampl": [1, 2, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 64, 65, 67, 68, 70, 71, 72, 75, 77, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 127, 129, 130, 131, 132, 133, 134, 135, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 214, 215, 216, 219, 220, 221, 224, 227, 229, 230, 231, 232, 234, 235, 236, 237, 238, 242, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 267, 269, 270, 272, 273, 274, 275, 276, 277, 278, 281, 282, 283, 294, 316, 352, 358, 360, 371, 383, 410, 411, 412, 413, 414, 418, 419, 420, 421, 422, 423, 425, 429, 432, 434, 436, 437, 443, 444, 445, 446, 447, 449, 450, 474, 475, 476, 477, 484, 491, 498, 517, 519, 526, 532, 533, 551, 553, 556, 558, 561, 572, 573, 592, 598, 602, 609, 610, 611, 624, 626, 631, 646, 651, 652, 653, 654, 655, 656, 657, 658, 661, 662, 663, 668, 676, 678, 682, 683, 684, 685, 686, 687, 688, 689, 690, 696, 697, 699, 701, 702, 703, 704, 705, 706, 707, 711, 712, 714, 715, 719, 720, 722, 723, 724, 725, 726, 741, 743, 773, 775, 776, 784, 796, 801, 806, 807, 809, 821, 831, 835, 851, 855, 856, 858, 859, 861, 866, 876], "meg4": [1, 12, 21, 79, 80, 117, 121, 183, 190], "system": [1, 5, 8, 10, 12, 19, 21, 27, 62, 69, 73, 78, 79, 80, 107, 114, 117, 120, 122, 127, 128, 135, 136, 149, 150, 154, 155, 157, 158, 159, 165, 167, 168, 169, 171, 177, 182, 183, 184, 188, 190, 193, 197, 198, 203, 204, 205, 206, 208, 210, 213, 214, 215, 224, 237, 242, 260, 261, 262, 263, 264, 265, 267, 269, 270, 272, 273, 275, 276, 277, 278, 282, 283, 298, 310, 313, 318, 321, 326, 328, 329, 331, 332, 333, 335, 337, 362, 363, 365, 371, 378, 414, 428, 443, 445, 457, 469, 470, 471, 476, 477, 483, 484, 485, 487, 488, 489, 500, 509, 520, 553, 556, 558, 582, 584, 601, 631, 648, 649, 650, 659, 660, 662, 682, 683, 684, 685, 686, 687, 695, 696, 698, 699, 700, 708, 714, 730, 759, 760, 773, 776, 781, 784, 790, 796, 804, 810, 811, 824, 831, 833, 834, 835, 836, 838, 839, 840, 847, 851, 852, 854, 861, 864, 876], "clock": [1, 12, 21, 79, 80, 117, 121, 183, 190, 476, 477, 489, 556, 598, 790, 796, 852, 876], "avail": [1, 2, 5, 7, 8, 12, 19, 21, 22, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 67, 70, 72, 75, 77, 79, 80, 81, 84, 85, 88, 90, 91, 92, 93, 99, 107, 114, 117, 118, 121, 125, 129, 133, 135, 139, 140, 141, 142, 143, 145, 148, 149, 150, 154, 155, 158, 161, 164, 165, 166, 167, 168, 171, 172, 175, 176, 177, 178, 179, 180, 183, 187, 188, 190, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 225, 237, 254, 259, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 276, 277, 278, 301, 303, 304, 310, 330, 370, 372, 378, 400, 401, 407, 408, 414, 415, 420, 427, 434, 456, 473, 476, 477, 515, 532, 533, 547, 548, 549, 555, 556, 570, 614, 621, 661, 692, 696, 697, 698, 700, 713, 726, 743, 760, 767, 773, 775, 777, 779, 782, 783, 786, 790, 793, 795, 796, 797, 798, 799, 801, 803, 805, 806, 814, 815, 831, 833, 835, 836, 841, 842, 843, 846, 849, 852, 855, 858, 859, 860, 861, 864, 876], "check": [1, 5, 12, 21, 26, 41, 43, 45, 50, 61, 69, 79, 80, 107, 117, 118, 119, 121, 123, 134, 136, 139, 141, 142, 143, 156, 157, 158, 160, 165, 167, 169, 170, 171, 174, 175, 180, 181, 183, 190, 198, 200, 203, 204, 213, 214, 216, 224, 225, 238, 257, 259, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 316, 318, 383, 389, 427, 441, 444, 475, 476, 477, 484, 487, 531, 545, 556, 564, 566, 683, 684, 686, 687, 696, 698, 699, 700, 730, 743, 759, 777, 779, 780, 781, 782, 813, 833, 834, 835, 843, 851, 852, 855, 864, 876], "which": [1, 4, 5, 12, 16, 18, 19, 21, 26, 31, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 58, 60, 69, 73, 78, 79, 80, 81, 86, 92, 99, 101, 107, 110, 112, 113, 114, 117, 118, 121, 125, 126, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 145, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 177, 179, 181, 183, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 238, 239, 242, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 288, 295, 296, 303, 304, 310, 312, 319, 326, 328, 329, 330, 331, 332, 338, 339, 341, 345, 347, 351, 352, 357, 358, 361, 365, 370, 371, 378, 383, 400, 408, 410, 415, 416, 419, 425, 427, 429, 432, 434, 437, 438, 439, 441, 442, 444, 446, 447, 448, 449, 450, 451, 452, 459, 466, 467, 473, 474, 475, 476, 477, 478, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 509, 510, 511, 515, 516, 518, 523, 524, 532, 533, 536, 537, 541, 545, 555, 556, 557, 558, 564, 566, 567, 570, 572, 573, 574, 575, 581, 582, 584, 589, 598, 601, 607, 609, 613, 614, 615, 616, 618, 619, 621, 626, 627, 630, 631, 632, 633, 635, 636, 638, 639, 641, 645, 646, 650, 653, 656, 658, 659, 662, 664, 665, 673, 675, 676, 682, 688, 691, 692, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 715, 718, 723, 724, 726, 727, 729, 731, 733, 743, 744, 746, 748, 749, 758, 759, 761, 764, 766, 767, 769, 771, 773, 774, 775, 777, 778, 781, 782, 786, 788, 790, 795, 796, 797, 801, 803, 806, 810, 811, 813, 822, 823, 824, 826, 828, 829, 830, 831, 833, 835, 836, 838, 840, 843, 847, 849, 850, 851, 852, 853, 855, 857, 858, 861, 862, 864, 874, 876], "ar": [1, 4, 5, 11, 12, 14, 15, 16, 18, 19, 21, 24, 26, 27, 31, 32, 33, 34, 38, 41, 43, 45, 46, 47, 50, 59, 69, 73, 74, 75, 79, 80, 81, 82, 85, 86, 92, 97, 99, 101, 102, 103, 104, 105, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 125, 126, 130, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 242, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 280, 282, 283, 286, 287, 289, 295, 296, 298, 300, 301, 303, 304, 305, 306, 308, 310, 311, 312, 314, 315, 318, 320, 321, 322, 323, 326, 327, 328, 330, 332, 333, 336, 339, 340, 341, 345, 351, 352, 356, 357, 358, 359, 361, 363, 367, 368, 369, 371, 383, 384, 391, 400, 408, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 429, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 458, 460, 461, 465, 466, 467, 468, 471, 473, 474, 475, 476, 477, 478, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 496, 498, 500, 501, 502, 503, 504, 505, 506, 509, 512, 515, 516, 518, 520, 521, 522, 531, 532, 533, 534, 535, 538, 540, 545, 547, 548, 549, 551, 552, 553, 555, 556, 557, 558, 559, 561, 563, 564, 566, 570, 571, 572, 573, 575, 576, 578, 583, 584, 585, 588, 589, 590, 592, 593, 595, 599, 601, 602, 604, 607, 608, 609, 610, 611, 614, 616, 619, 622, 624, 631, 633, 634, 635, 636, 637, 638, 641, 643, 645, 646, 648, 649, 652, 653, 656, 658, 659, 661, 662, 664, 667, 668, 670, 671, 672, 677, 678, 681, 682, 683, 684, 685, 686, 687, 688, 692, 696, 697, 698, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 712, 713, 714, 720, 722, 723, 724, 725, 726, 727, 729, 731, 733, 738, 743, 744, 748, 758, 759, 760, 761, 764, 767, 768, 769, 770, 771, 773, 774, 775, 776, 777, 779, 780, 781, 782, 783, 786, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 801, 802, 803, 804, 805, 806, 807, 813, 816, 821, 823, 824, 825, 826, 831, 833, 835, 836, 838, 839, 840, 841, 842, 843, 847, 850, 851, 852, 853, 854, 856, 857, 858, 859, 860, 862, 863, 864, 866, 876], "valid": [1, 8, 9, 10, 11, 12, 15, 16, 21, 73, 79, 80, 109, 117, 119, 121, 136, 161, 170, 176, 183, 189, 190, 194, 200, 209, 224, 239, 257, 259, 262, 263, 264, 265, 267, 269, 270, 271, 273, 276, 277, 278, 323, 336, 352, 357, 400, 408, 414, 415, 424, 425, 429, 440, 442, 449, 456, 460, 476, 477, 532, 533, 555, 556, 558, 570, 572, 573, 627, 641, 678, 683, 684, 686, 687, 696, 698, 699, 700, 721, 731, 743, 746, 759, 760, 767, 774, 775, 776, 777, 779, 781, 782, 786, 795, 798, 801, 803, 804, 805, 806, 829, 835, 841, 842, 851, 855, 858, 876], "240": [1, 35, 42, 46, 74, 79, 107, 117, 168, 170, 180, 197, 201, 207, 210, 228, 238], "x": [1, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 67, 68, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 125, 127, 129, 130, 131, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 155, 156, 157, 159, 161, 165, 166, 167, 168, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 190, 193, 194, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 216, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 239, 242, 254, 259, 262, 263, 264, 265, 267, 269, 270, 271, 273, 275, 276, 277, 278, 286, 300, 310, 311, 333, 342, 343, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 446, 447, 448, 476, 477, 487, 488, 522, 523, 531, 555, 556, 557, 565, 570, 593, 616, 648, 669, 672, 677, 681, 682, 683, 684, 685, 686, 687, 689, 696, 698, 700, 701, 702, 703, 708, 710, 711, 712, 714, 715, 719, 721, 722, 726, 731, 733, 734, 736, 743, 744, 747, 760, 762, 764, 767, 775, 777, 779, 781, 782, 783, 784, 785, 786, 791, 793, 795, 797, 798, 799, 801, 803, 805, 806, 807, 809, 811, 823, 831, 835, 841, 852, 858, 861, 876], "1800": [1, 117], "432000": [1, 117], "302": [1, 13, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 74, 81, 91, 92, 98, 100, 102, 105, 106, 108, 117, 119, 151, 161, 165, 168, 171, 175, 176, 177, 178, 179, 180, 189, 192, 207, 220, 229, 232, 234, 861], "ch": [1, 2, 8, 12, 21, 67, 79, 80, 110, 113, 117, 118, 121, 135, 136, 140, 148, 150, 165, 168, 169, 183, 190, 203, 213, 219, 221, 242, 254, 267, 317, 318, 378, 400, 401, 476, 477, 813, 831, 852, 876], "current": [1, 12, 21, 22, 27, 29, 30, 31, 34, 41, 42, 44, 59, 76, 77, 79, 80, 83, 92, 117, 121, 139, 148, 160, 161, 164, 165, 170, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 198, 200, 208, 210, 215, 221, 232, 234, 242, 254, 255, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 276, 277, 278, 282, 283, 295, 296, 316, 318, 324, 351, 358, 363, 370, 371, 374, 414, 429, 432, 441, 446, 448, 449, 451, 471, 475, 476, 477, 482, 487, 491, 518, 519, 523, 526, 556, 565, 567, 568, 569, 575, 584, 614, 621, 641, 660, 677, 679, 696, 698, 699, 700, 721, 743, 750, 752, 753, 754, 755, 756, 760, 764, 767, 773, 796, 805, 806, 813, 831, 835, 838, 841, 843, 851, 852, 855, 857, 861, 864], "compens": [1, 2, 12, 21, 27, 30, 31, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 76, 77, 79, 80, 83, 84, 85, 99, 114, 117, 118, 121, 125, 139, 142, 148, 171, 175, 177, 178, 180, 183, 184, 190, 200, 207, 224, 225, 242, 254, 257, 262, 263, 264, 265, 267, 349, 363, 429, 431, 444, 446, 447, 449, 475, 476, 477, 489, 496, 519, 553, 556, 567, 575, 581, 584, 614, 661, 696, 698, 699, 700, 784, 785, 876], "grade": [1, 12, 21, 24, 41, 69, 79, 80, 99, 107, 117, 121, 157, 160, 183, 187, 190, 232, 234, 257, 262, 263, 264, 265, 267, 268, 463, 464, 475, 476, 477, 556, 696, 698, 699, 700, 876], "144000": [1, 79], "sec": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 28, 29, 32, 33, 34, 41, 42, 45, 46, 49, 58, 59, 61, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 105, 107, 108, 109, 110, 111, 112, 113, 115, 116, 119, 121, 125, 126, 127, 130, 131, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 150, 151, 155, 158, 161, 165, 166, 167, 168, 171, 176, 178, 179, 180, 181, 182, 183, 184, 189, 190, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 226, 227, 228, 229, 232, 234, 238, 254, 260, 267, 355, 558, 646, 784, 861, 876], "type": [1, 2, 5, 15, 16, 22, 27, 29, 30, 31, 34, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 63, 70, 74, 76, 77, 79, 80, 81, 83, 84, 88, 91, 92, 93, 101, 107, 111, 112, 113, 114, 116, 117, 118, 121, 122, 125, 126, 129, 133, 134, 135, 136, 140, 141, 142, 143, 144, 145, 148, 149, 155, 156, 157, 158, 161, 165, 166, 167, 169, 170, 171, 175, 177, 178, 179, 180, 181, 182, 184, 187, 189, 194, 197, 198, 199, 202, 203, 204, 205, 206, 207, 209, 214, 216, 219, 220, 221, 224, 228, 229, 237, 238, 255, 257, 259, 260, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 295, 296, 306, 308, 309, 311, 312, 315, 316, 317, 318, 319, 325, 327, 333, 341, 352, 353, 354, 355, 356, 357, 366, 367, 368, 369, 371, 378, 383, 400, 401, 408, 410, 415, 417, 424, 429, 432, 433, 440, 441, 443, 446, 447, 448, 449, 451, 452, 453, 458, 465, 471, 473, 474, 475, 476, 477, 484, 491, 495, 502, 506, 507, 515, 534, 546, 553, 554, 555, 556, 557, 558, 561, 565, 567, 570, 571, 572, 573, 575, 577, 578, 581, 584, 590, 592, 599, 609, 611, 613, 614, 637, 638, 641, 647, 648, 649, 661, 664, 667, 676, 682, 683, 684, 686, 687, 691, 696, 697, 698, 699, 700, 704, 705, 706, 707, 709, 727, 730, 743, 758, 762, 766, 767, 768, 769, 771, 773, 774, 775, 777, 778, 779, 780, 781, 782, 783, 784, 786, 787, 788, 794, 795, 796, 797, 798, 799, 801, 803, 804, 805, 806, 807, 809, 817, 831, 833, 834, 840, 841, 842, 846, 851, 853, 855, 859, 861, 862, 876], "select": [1, 5, 7, 11, 15, 21, 24, 28, 29, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 50, 51, 54, 55, 58, 59, 70, 73, 75, 80, 81, 86, 88, 91, 92, 93, 97, 101, 107, 110, 111, 117, 118, 119, 126, 133, 136, 140, 141, 143, 149, 150, 157, 158, 160, 161, 165, 166, 168, 169, 171, 174, 176, 177, 178, 179, 180, 181, 188, 190, 194, 198, 199, 200, 202, 205, 206, 208, 214, 215, 216, 220, 221, 225, 229, 233, 234, 237, 238, 239, 242, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 272, 273, 276, 277, 278, 317, 322, 352, 363, 410, 416, 439, 446, 467, 473, 476, 477, 482, 509, 548, 549, 551, 552, 553, 554, 556, 557, 561, 570, 572, 573, 579, 580, 593, 619, 631, 638, 641, 659, 662, 682, 696, 697, 698, 699, 700, 707, 713, 760, 767, 773, 777, 779, 781, 782, 783, 786, 788, 790, 796, 799, 801, 805, 808, 812, 831, 835, 838, 851, 855, 858, 862, 876], "re": [1, 4, 29, 45, 70, 91, 92, 99, 101, 111, 112, 118, 125, 133, 139, 140, 143, 150, 155, 157, 158, 159, 160, 161, 165, 166, 168, 169, 170, 171, 181, 188, 198, 199, 200, 202, 203, 204, 205, 206, 213, 215, 220, 226, 228, 234, 239, 242, 254, 256, 259, 262, 263, 264, 265, 267, 271, 279, 311, 315, 408, 415, 433, 476, 477, 500, 548, 549, 552, 554, 555, 556, 565, 610, 638, 641, 645, 696, 698, 699, 700, 707, 713, 730, 760, 775, 782, 786, 795, 798, 800, 803, 805, 835, 839, 840, 843, 853, 855, 856, 858, 864, 876], "referenc": [1, 29, 70, 91, 92, 139, 149, 150, 158, 161, 166, 181, 188, 198, 202, 206, 220, 224, 256, 262, 263, 264, 265, 279, 476, 477, 638, 641, 696, 698, 699, 700, 777, 831, 835, 858, 862, 865, 876], "item": [1, 4, 8, 11, 12, 13, 14, 15, 16, 18, 21, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 122, 125, 126, 127, 129, 130, 131, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 150, 151, 155, 156, 157, 158, 159, 161, 165, 166, 167, 168, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 216, 219, 220, 221, 225, 226, 227, 228, 229, 232, 234, 238, 255, 259, 260, 262, 263, 267, 271, 275, 281, 286, 300, 476, 477, 522, 698, 699, 700, 731, 743, 841, 861, 876], "deactiv": [1, 29, 42, 51, 67, 70, 90, 91, 92, 109, 141, 145, 158, 161, 181, 190, 204, 205, 206, 220, 764, 833], "wa": [1, 5, 7, 13, 18, 21, 33, 60, 65, 70, 92, 113, 133, 139, 143, 148, 150, 157, 158, 165, 166, 167, 169, 170, 180, 181, 182, 188, 190, 193, 194, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 215, 216, 219, 227, 228, 229, 239, 255, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 282, 283, 295, 296, 330, 345, 387, 407, 408, 415, 430, 432, 473, 476, 477, 493, 495, 504, 509, 519, 529, 530, 532, 533, 538, 539, 540, 555, 556, 557, 568, 569, 570, 573, 575, 576, 577, 584, 591, 609, 613, 634, 645, 648, 649, 681, 691, 696, 697, 698, 699, 700, 712, 716, 722, 743, 759, 760, 775, 777, 782, 786, 795, 798, 803, 805, 808, 812, 831, 834, 835, 840, 841, 842, 852, 857, 858, 861, 864, 876], "been": [1, 9, 10, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 69, 70, 73, 77, 78, 82, 84, 85, 92, 114, 117, 118, 125, 133, 139, 141, 144, 148, 149, 150, 158, 159, 161, 165, 166, 168, 170, 171, 174, 175, 177, 178, 180, 181, 182, 187, 190, 193, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 237, 244, 253, 254, 257, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 273, 274, 275, 276, 277, 278, 287, 288, 289, 295, 296, 301, 352, 356, 357, 367, 368, 369, 375, 376, 377, 380, 381, 383, 388, 391, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 408, 415, 429, 451, 452, 468, 471, 473, 474, 476, 477, 478, 484, 485, 496, 504, 524, 534, 555, 556, 557, 568, 584, 591, 614, 696, 697, 698, 699, 700, 712, 722, 724, 726, 727, 753, 767, 773, 777, 779, 781, 783, 797, 835, 843, 847, 852, 855, 857, 858, 861, 864, 876], "appli": [1, 4, 5, 7, 8, 9, 10, 11, 12, 15, 16, 18, 21, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 77, 78, 80, 81, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 98, 99, 101, 102, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 125, 126, 130, 132, 133, 134, 135, 139, 140, 141, 142, 144, 145, 148, 149, 150, 151, 155, 157, 158, 159, 160, 161, 165, 166, 168, 169, 171, 175, 176, 177, 178, 180, 181, 182, 183, 184, 188, 190, 194, 197, 198, 199, 201, 203, 205, 206, 208, 209, 210, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 238, 242, 255, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 310, 336, 351, 356, 365, 367, 369, 408, 410, 411, 415, 416, 417, 419, 421, 429, 438, 439, 440, 441, 442, 444, 446, 447, 449, 452, 466, 473, 474, 476, 477, 513, 516, 523, 524, 525, 526, 527, 532, 533, 535, 538, 539, 540, 555, 556, 557, 558, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 584, 591, 599, 607, 611, 614, 615, 616, 636, 641, 652, 653, 654, 655, 656, 658, 663, 677, 678, 683, 684, 685, 696, 697, 698, 699, 700, 708, 712, 722, 725, 726, 728, 732, 733, 743, 767, 768, 773, 774, 775, 777, 779, 781, 782, 786, 787, 788, 790, 796, 797, 801, 803, 804, 806, 813, 816, 823, 826, 831, 835, 851, 853, 855, 858, 859, 861, 864, 876], "yet": [1, 70, 92, 133, 158, 181, 188, 204, 206, 239, 262, 375, 376, 377, 380, 381, 383, 388, 391, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 416, 421, 545, 570, 743, 835, 876], "method": [1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 27, 28, 29, 30, 31, 34, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 59, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 83, 86, 91, 92, 93, 95, 97, 99, 101, 102, 105, 106, 107, 108, 111, 112, 113, 114, 119, 125, 131, 135, 139, 140, 141, 142, 143, 145, 148, 149, 150, 151, 158, 159, 161, 164, 165, 166, 167, 168, 169, 171, 174, 176, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 211, 215, 217, 218, 219, 220, 221, 225, 229, 232, 234, 237, 238, 239, 242, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 282, 283, 286, 295, 296, 297, 298, 300, 303, 304, 308, 309, 310, 311, 312, 316, 317, 318, 319, 322, 324, 325, 338, 340, 342, 345, 347, 352, 356, 357, 358, 363, 367, 368, 369, 371, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 427, 429, 431, 443, 444, 446, 447, 448, 452, 459, 468, 471, 472, 473, 474, 475, 476, 477, 478, 481, 483, 485, 486, 487, 488, 489, 492, 493, 494, 497, 499, 500, 501, 502, 503, 504, 505, 506, 509, 512, 519, 520, 522, 523, 524, 525, 526, 527, 529, 530, 534, 535, 536, 538, 539, 540, 552, 553, 555, 556, 557, 564, 567, 568, 569, 571, 581, 582, 584, 587, 588, 589, 590, 591, 599, 601, 605, 608, 614, 616, 631, 632, 641, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 664, 674, 677, 678, 680, 683, 684, 685, 686, 687, 689, 696, 697, 698, 699, 700, 703, 706, 708, 714, 715, 723, 724, 726, 727, 731, 738, 739, 741, 743, 744, 756, 759, 763, 768, 769, 770, 771, 774, 782, 785, 787, 795, 799, 802, 831, 833, 835, 850, 851, 853, 855, 858, 859, 861, 862, 873, 876], "note": [1, 4, 13, 16, 18, 21, 26, 47, 69, 70, 73, 81, 102, 107, 110, 112, 127, 133, 134, 135, 139, 140, 141, 142, 144, 148, 150, 155, 157, 159, 161, 165, 166, 167, 168, 169, 170, 171, 179, 180, 181, 182, 188, 189, 193, 197, 198, 199, 200, 201, 202, 203, 205, 207, 208, 209, 210, 213, 214, 215, 219, 220, 228, 229, 232, 233, 234, 238, 239, 242, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 286, 291, 295, 296, 298, 301, 302, 303, 304, 305, 307, 308, 310, 311, 312, 315, 316, 317, 318, 319, 320, 322, 326, 327, 328, 330, 332, 333, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 356, 357, 358, 359, 362, 363, 365, 367, 370, 371, 378, 383, 384, 385, 386, 387, 389, 400, 401, 407, 408, 410, 411, 412, 414, 415, 416, 417, 418, 420, 424, 425, 427, 428, 429, 430, 431, 432, 433, 435, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 458, 459, 461, 464, 465, 466, 467, 469, 470, 475, 476, 477, 478, 484, 488, 489, 491, 492, 493, 496, 498, 499, 500, 502, 504, 505, 509, 511, 512, 513, 514, 516, 518, 519, 520, 521, 523, 524, 525, 526, 527, 529, 530, 531, 534, 536, 538, 539, 540, 542, 543, 555, 556, 557, 558, 559, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 578, 581, 584, 585, 590, 591, 592, 593, 594, 598, 599, 602, 604, 606, 607, 608, 610, 611, 614, 615, 616, 618, 619, 621, 624, 630, 632, 633, 635, 636, 638, 641, 643, 645, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 664, 665, 673, 676, 677, 678, 679, 682, 683, 684, 685, 686, 687, 689, 691, 696, 697, 698, 699, 700, 704, 705, 706, 707, 708, 709, 710, 712, 714, 715, 718, 722, 723, 724, 726, 727, 728, 729, 731, 732, 733, 737, 738, 741, 743, 744, 746, 758, 759, 760, 761, 762, 764, 766, 767, 768, 770, 771, 773, 774, 775, 776, 777, 779, 780, 782, 783, 784, 786, 788, 789, 790, 791, 792, 794, 795, 796, 797, 798, 799, 800, 801, 803, 804, 805, 806, 807, 808, 809, 812, 813, 817, 821, 822, 823, 824, 825, 826, 831, 833, 835, 836, 842, 851, 855, 857, 858, 860, 876], "legaci": [1, 70, 73, 107, 127, 141, 142, 165, 171, 182, 197, 201, 205, 207, 209, 216, 238, 262, 263, 264, 265, 476, 477, 775, 797, 876], "new": [1, 8, 14, 19, 27, 31, 61, 68, 70, 73, 79, 107, 111, 127, 133, 136, 139, 141, 142, 144, 148, 150, 160, 164, 165, 171, 174, 181, 182, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 213, 215, 216, 219, 224, 227, 228, 229, 237, 238, 242, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 282, 283, 285, 286, 291, 295, 296, 298, 300, 302, 303, 304, 305, 306, 307, 310, 311, 312, 314, 315, 316, 319, 320, 321, 326, 328, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 367, 368, 369, 370, 378, 384, 386, 387, 400, 401, 407, 408, 410, 412, 414, 415, 419, 420, 427, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 455, 456, 458, 461, 465, 466, 467, 470, 471, 473, 474, 475, 476, 477, 484, 487, 488, 489, 491, 492, 493, 496, 499, 504, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 536, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 575, 576, 581, 583, 584, 585, 592, 594, 598, 599, 604, 608, 610, 611, 615, 619, 627, 629, 630, 631, 632, 633, 635, 638, 641, 645, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 673, 677, 679, 689, 690, 691, 695, 696, 697, 698, 699, 700, 708, 710, 713, 714, 715, 718, 723, 724, 726, 727, 728, 729, 731, 732, 733, 740, 743, 744, 746, 751, 752, 756, 759, 760, 761, 762, 764, 766, 767, 769, 770, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 805, 806, 807, 809, 812, 817, 820, 821, 822, 826, 827, 829, 831, 833, 834, 837, 839, 840, 841, 843, 846, 851, 852, 855, 856, 857, 858, 859, 861, 863, 864], "should": [1, 4, 5, 16, 19, 40, 41, 63, 69, 70, 73, 80, 86, 88, 107, 118, 119, 127, 131, 133, 134, 135, 139, 140, 141, 142, 143, 150, 155, 156, 157, 159, 160, 164, 165, 166, 171, 179, 181, 182, 183, 189, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 214, 215, 216, 219, 228, 229, 237, 238, 239, 242, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 301, 302, 303, 304, 305, 306, 307, 310, 312, 314, 315, 326, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 413, 414, 415, 418, 419, 420, 421, 424, 425, 427, 429, 433, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 458, 459, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516, 518, 519, 520, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 549, 552, 555, 556, 558, 559, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 584, 585, 587, 588, 591, 592, 593, 594, 596, 597, 598, 599, 602, 603, 604, 605, 606, 607, 608, 610, 611, 612, 614, 615, 616, 618, 619, 620, 621, 622, 624, 626, 627, 628, 629, 630, 631, 632, 633, 635, 636, 637, 638, 641, 644, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 658, 660, 661, 662, 664, 666, 667, 668, 669, 670, 671, 672, 673, 678, 683, 684, 685, 686, 687, 691, 692, 693, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 714, 715, 718, 719, 723, 724, 726, 727, 728, 729, 731, 732, 733, 738, 739, 742, 743, 745, 747, 751, 759, 760, 761, 762, 766, 767, 768, 770, 771, 773, 774, 775, 776, 777, 778, 779, 782, 783, 786, 787, 788, 789, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 812, 813, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 833, 834, 835, 838, 839, 840, 841, 846, 851, 852, 857, 858, 861, 864, 876], "compute_psd": [1, 70, 73, 107, 127, 131, 136, 141, 142, 165, 171, 182, 197, 199, 201, 205, 207, 209, 210, 216, 237, 238, 239, 262, 263, 264, 265, 413, 476, 477, 556, 698, 700, 714, 775, 786, 788, 797, 876], "5": [1, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 67, 68, 69, 70, 71, 72, 73, 77, 78, 79, 80, 81, 82, 83, 84, 86, 88, 90, 91, 92, 94, 95, 97, 98, 99, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 155, 156, 157, 158, 159, 161, 163, 165, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 189, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 241, 242, 254, 256, 257, 262, 263, 264, 265, 268, 269, 270, 273, 276, 277, 278, 280, 295, 296, 298, 301, 305, 312, 324, 333, 352, 358, 366, 378, 383, 407, 408, 414, 425, 428, 429, 431, 449, 450, 451, 464, 473, 476, 477, 500, 512, 513, 523, 529, 534, 538, 539, 540, 555, 556, 558, 559, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 579, 582, 584, 588, 592, 593, 610, 618, 637, 645, 649, 682, 695, 698, 700, 708, 712, 714, 722, 723, 724, 726, 727, 733, 743, 758, 762, 774, 775, 779, 780, 786, 788, 791, 796, 801, 806, 816, 833, 834, 835, 841, 851, 852, 855, 857, 858, 861, 864], "becaus": [1, 4, 5, 11, 16, 18, 21, 26, 34, 41, 43, 44, 45, 50, 60, 69, 73, 79, 80, 81, 99, 112, 113, 117, 133, 139, 141, 142, 143, 145, 148, 149, 150, 157, 159, 160, 161, 165, 166, 167, 169, 170, 175, 179, 180, 181, 182, 183, 188, 189, 190, 193, 194, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 215, 219, 224, 225, 226, 229, 232, 239, 262, 263, 264, 265, 345, 356, 429, 451, 566, 575, 583, 683, 684, 686, 687, 699, 752, 773, 804, 831, 835, 839, 843, 851, 853, 855, 857, 858, 862, 876], "all": [1, 4, 5, 10, 13, 14, 18, 19, 21, 27, 28, 31, 33, 35, 40, 45, 59, 61, 63, 69, 72, 79, 80, 81, 88, 93, 95, 97, 101, 105, 109, 110, 111, 112, 114, 115, 117, 118, 119, 123, 125, 134, 139, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 167, 168, 169, 170, 171, 175, 178, 180, 181, 182, 183, 184, 187, 188, 189, 190, 194, 197, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 229, 233, 237, 238, 239, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 289, 290, 293, 295, 296, 298, 300, 305, 306, 307, 308, 310, 311, 312, 315, 320, 321, 322, 325, 326, 327, 336, 346, 347, 351, 352, 356, 357, 358, 359, 363, 364, 366, 367, 368, 369, 371, 384, 408, 410, 411, 415, 417, 424, 425, 429, 432, 433, 435, 437, 438, 439, 440, 441, 442, 446, 447, 448, 449, 450, 451, 452, 456, 458, 464, 465, 466, 467, 471, 473, 474, 476, 477, 478, 482, 484, 488, 491, 498, 500, 503, 507, 511, 522, 523, 525, 527, 530, 532, 533, 534, 535, 539, 540, 542, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 566, 570, 571, 572, 573, 574, 575, 578, 581, 584, 590, 592, 599, 604, 607, 608, 610, 611, 614, 615, 616, 619, 629, 634, 635, 641, 644, 646, 655, 661, 664, 673, 676, 677, 678, 679, 681, 682, 683, 684, 685, 686, 687, 688, 691, 696, 697, 698, 699, 700, 704, 705, 706, 707, 709, 712, 713, 714, 718, 722, 723, 724, 726, 727, 731, 733, 741, 743, 750, 751, 759, 760, 761, 767, 771, 773, 774, 775, 777, 778, 779, 780, 782, 783, 784, 786, 787, 790, 792, 793, 794, 795, 796, 797, 798, 799, 801, 803, 804, 805, 806, 807, 816, 831, 838, 842, 846, 850, 851, 852, 853, 857, 858, 861, 862, 864, 876], "were": [1, 4, 5, 10, 18, 21, 38, 79, 80, 117, 125, 133, 136, 139, 140, 141, 142, 143, 148, 149, 150, 160, 166, 167, 170, 171, 180, 181, 182, 183, 187, 189, 190, 198, 199, 200, 203, 204, 205, 206, 208, 209, 213, 214, 215, 216, 219, 224, 226, 228, 229, 262, 263, 264, 265, 267, 270, 272, 273, 276, 278, 279, 295, 296, 318, 346, 347, 358, 361, 400, 401, 432, 434, 476, 477, 499, 556, 566, 567, 575, 584, 691, 696, 697, 698, 699, 700, 787, 789, 796, 831, 835, 842, 852, 855, 857, 861, 876], "effect": [1, 7, 17, 19, 20, 21, 26, 27, 39, 57, 59, 69, 70, 73, 81, 82, 97, 101, 107, 110, 111, 118, 119, 127, 131, 140, 144, 148, 150, 159, 161, 165, 166, 167, 171, 182, 190, 197, 199, 200, 201, 205, 206, 207, 208, 209, 210, 216, 220, 221, 225, 226, 228, 229, 234, 237, 238, 242, 262, 263, 264, 265, 267, 268, 269, 272, 273, 277, 295, 296, 318, 352, 356, 357, 367, 368, 369, 400, 401, 408, 409, 415, 424, 429, 431, 432, 447, 451, 452, 471, 473, 474, 476, 477, 492, 493, 523, 526, 534, 553, 556, 559, 564, 611, 677, 679, 682, 683, 684, 686, 687, 698, 700, 703, 714, 773, 777, 783, 786, 788, 790, 796, 797, 799, 801, 831, 841, 842, 855, 876], "window": [1, 2, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 59, 70, 71, 72, 73, 75, 80, 81, 82, 86, 91, 97, 98, 101, 102, 106, 107, 111, 112, 113, 119, 121, 127, 131, 135, 136, 140, 141, 142, 143, 145, 150, 165, 170, 171, 179, 182, 190, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 215, 216, 225, 229, 237, 238, 239, 254, 257, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 288, 339, 341, 345, 408, 409, 413, 415, 419, 421, 424, 432, 434, 443, 444, 446, 447, 448, 457, 467, 468, 474, 476, 477, 529, 530, 556, 558, 566, 575, 578, 582, 584, 592, 648, 649, 682, 696, 697, 698, 700, 703, 706, 708, 711, 714, 715, 719, 720, 723, 724, 725, 726, 727, 728, 743, 773, 774, 775, 782, 790, 796, 797, 801, 806, 835, 838, 839, 840, 841, 876], "size": [1, 5, 8, 9, 10, 21, 22, 32, 35, 41, 43, 44, 45, 46, 53, 58, 64, 69, 70, 73, 81, 98, 106, 107, 112, 118, 124, 125, 127, 131, 132, 133, 134, 135, 141, 143, 145, 149, 150, 154, 155, 157, 159, 165, 171, 174, 176, 177, 178, 179, 180, 182, 183, 184, 188, 189, 197, 198, 200, 201, 204, 205, 206, 207, 209, 210, 213, 216, 220, 221, 226, 229, 232, 237, 238, 239, 242, 259, 260, 262, 263, 264, 265, 269, 270, 271, 272, 273, 276, 277, 278, 310, 318, 326, 328, 358, 408, 410, 415, 419, 420, 443, 444, 446, 447, 448, 473, 475, 476, 477, 516, 529, 555, 556, 570, 575, 582, 662, 678, 682, 683, 684, 686, 687, 696, 698, 700, 720, 733, 743, 752, 756, 771, 773, 775, 781, 782, 786, 788, 789, 790, 793, 795, 796, 798, 799, 801, 802, 803, 804, 805, 806, 810, 816, 858, 861, 876], "707": [1, 194, 207], "need": [1, 4, 5, 11, 28, 29, 30, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 54, 55, 58, 59, 60, 68, 69, 73, 74, 84, 88, 92, 93, 101, 102, 105, 106, 107, 108, 110, 112, 115, 117, 125, 133, 134, 135, 139, 140, 141, 142, 143, 144, 148, 149, 150, 155, 157, 158, 159, 160, 164, 165, 166, 167, 168, 169, 171, 174, 176, 177, 178, 179, 180, 181, 187, 189, 190, 193, 194, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 239, 242, 262, 263, 264, 265, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 281, 295, 316, 327, 370, 373, 383, 409, 410, 418, 424, 432, 441, 446, 466, 475, 476, 477, 484, 491, 499, 515, 520, 543, 556, 591, 645, 683, 684, 686, 687, 696, 698, 699, 700, 743, 749, 760, 766, 781, 786, 796, 833, 835, 836, 838, 839, 840, 841, 842, 843, 851, 852, 857, 858, 859, 861, 864, 876], "more": [1, 4, 18, 19, 27, 28, 34, 42, 43, 44, 49, 54, 58, 69, 70, 72, 74, 79, 80, 81, 82, 84, 92, 102, 105, 108, 111, 112, 119, 120, 128, 132, 133, 134, 135, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 154, 155, 157, 159, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 176, 177, 179, 180, 183, 184, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 213, 214, 215, 216, 221, 224, 225, 226, 227, 229, 232, 234, 238, 239, 247, 256, 257, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 287, 295, 296, 303, 304, 327, 352, 356, 358, 363, 365, 369, 400, 401, 407, 408, 410, 412, 413, 415, 416, 420, 425, 427, 438, 439, 441, 442, 443, 444, 446, 447, 449, 450, 458, 467, 476, 477, 484, 493, 500, 511, 515, 518, 523, 529, 530, 531, 555, 556, 558, 564, 566, 575, 581, 584, 593, 604, 606, 610, 611, 614, 624, 633, 635, 636, 638, 641, 648, 673, 677, 678, 683, 684, 685, 686, 687, 696, 698, 699, 700, 703, 706, 714, 723, 724, 725, 726, 727, 728, 740, 743, 759, 760, 761, 762, 767, 771, 775, 778, 779, 781, 782, 786, 795, 798, 801, 803, 805, 806, 814, 815, 824, 831, 832, 833, 835, 839, 840, 841, 842, 851, 852, 853, 855, 857, 858, 859, 860, 864, 873, 876], "than": [1, 5, 13, 18, 24, 26, 33, 34, 41, 42, 44, 45, 46, 50, 54, 58, 59, 60, 68, 69, 77, 81, 84, 85, 92, 112, 117, 122, 125, 133, 134, 135, 139, 140, 141, 142, 143, 145, 148, 149, 150, 155, 157, 160, 165, 166, 167, 168, 169, 170, 171, 175, 179, 180, 182, 183, 184, 187, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 224, 227, 237, 239, 257, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 287, 303, 304, 351, 356, 363, 408, 410, 413, 415, 419, 425, 427, 437, 442, 444, 446, 447, 449, 452, 464, 473, 474, 476, 477, 493, 500, 511, 521, 529, 530, 540, 545, 547, 549, 555, 556, 558, 564, 566, 570, 572, 582, 583, 585, 589, 592, 610, 615, 636, 645, 677, 683, 684, 685, 686, 687, 688, 691, 696, 698, 699, 700, 703, 706, 711, 714, 719, 725, 728, 743, 760, 761, 773, 775, 776, 779, 782, 786, 795, 796, 798, 801, 803, 805, 806, 816, 833, 835, 840, 841, 842, 857, 858, 876], "one": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 24, 31, 32, 33, 34, 40, 41, 42, 43, 45, 46, 48, 49, 50, 58, 59, 65, 67, 69, 72, 73, 75, 80, 81, 82, 84, 85, 86, 88, 92, 94, 95, 97, 101, 107, 109, 111, 112, 113, 115, 119, 125, 129, 131, 133, 134, 135, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 165, 166, 167, 168, 171, 175, 176, 177, 178, 179, 180, 181, 183, 187, 188, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 219, 221, 224, 226, 227, 228, 229, 233, 238, 239, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 284, 287, 295, 296, 309, 310, 312, 316, 317, 319, 351, 353, 354, 356, 358, 359, 363, 378, 386, 389, 391, 400, 401, 407, 408, 414, 415, 418, 421, 423, 427, 430, 431, 432, 439, 440, 442, 443, 449, 458, 465, 466, 467, 474, 475, 476, 477, 480, 484, 493, 508, 509, 511, 513, 518, 532, 533, 539, 540, 542, 545, 556, 557, 558, 559, 572, 576, 579, 580, 592, 595, 604, 606, 614, 615, 621, 633, 635, 641, 645, 648, 662, 667, 677, 678, 683, 684, 685, 686, 687, 689, 692, 696, 697, 698, 699, 700, 702, 705, 712, 722, 723, 724, 726, 727, 729, 732, 733, 743, 756, 759, 761, 762, 767, 774, 775, 777, 778, 779, 780, 782, 783, 784, 786, 788, 801, 802, 804, 805, 806, 807, 816, 822, 824, 831, 833, 834, 835, 838, 839, 843, 851, 852, 853, 855, 857, 858, 861, 876], "make": [1, 4, 9, 10, 13, 18, 19, 21, 27, 28, 31, 32, 34, 38, 42, 45, 48, 50, 54, 55, 59, 61, 69, 74, 84, 88, 91, 92, 101, 107, 109, 110, 111, 112, 120, 122, 128, 131, 133, 134, 135, 139, 140, 141, 142, 143, 149, 150, 155, 157, 159, 160, 161, 165, 166, 168, 169, 170, 171, 175, 176, 177, 178, 179, 181, 182, 183, 184, 187, 188, 190, 193, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 213, 215, 219, 224, 226, 227, 228, 232, 233, 234, 239, 254, 261, 262, 263, 264, 265, 267, 269, 270, 273, 275, 276, 277, 278, 295, 296, 323, 335, 352, 356, 357, 358, 363, 367, 368, 369, 370, 408, 411, 412, 415, 417, 418, 427, 431, 432, 443, 444, 446, 447, 451, 452, 458, 465, 467, 471, 473, 474, 476, 477, 517, 534, 540, 549, 555, 556, 566, 581, 583, 592, 602, 604, 614, 624, 633, 635, 648, 660, 691, 693, 697, 712, 722, 723, 724, 726, 731, 738, 739, 743, 761, 762, 765, 766, 767, 769, 780, 783, 789, 796, 801, 806, 807, 824, 831, 833, 834, 842, 843, 851, 852, 853, 855, 856, 858, 861, 864, 876], "topographi": [1, 13, 21, 27, 69, 70, 73, 84, 112, 118, 120, 128, 130, 141, 143, 150, 165, 169, 171, 175, 190, 203, 205, 206, 216, 227, 229, 237, 242, 262, 263, 264, 265, 267, 271, 272, 311, 408, 415, 476, 477, 553, 556, 571, 661, 696, 698, 700, 756, 775, 780, 781, 782, 786, 788, 792, 797, 799, 803, 804, 831, 876], "disabl": [1, 84, 112, 141, 148, 149, 150, 171, 197, 198, 201, 216, 227, 254, 259, 262, 263, 264, 265, 271, 272, 306, 363, 408, 414, 415, 420, 476, 477, 555, 556, 575, 584, 639, 643, 696, 698, 700, 738, 743, 760, 775, 777, 781, 782, 786, 795, 796, 798, 803, 805, 809, 833, 876], "interact": [1, 27, 33, 45, 47, 84, 112, 113, 118, 125, 133, 139, 148, 149, 150, 164, 165, 167, 171, 179, 180, 190, 198, 199, 203, 204, 205, 209, 213, 221, 224, 227, 228, 234, 238, 239, 242, 254, 259, 262, 263, 264, 265, 269, 270, 271, 272, 273, 276, 277, 278, 288, 295, 408, 415, 467, 476, 477, 523, 555, 556, 592, 677, 679, 696, 698, 700, 743, 745, 759, 760, 764, 774, 775, 777, 778, 779, 781, 782, 786, 788, 790, 795, 796, 797, 798, 799, 801, 803, 804, 805, 806, 833, 835, 857, 858, 859, 864, 876], "filter": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 17, 19, 20, 27, 32, 33, 34, 42, 45, 59, 67, 71, 72, 75, 76, 80, 81, 82, 83, 86, 90, 97, 107, 110, 111, 113, 119, 131, 135, 139, 140, 143, 144, 145, 148, 161, 164, 165, 166, 168, 171, 175, 180, 182, 183, 184, 190, 193, 197, 199, 202, 205, 209, 211, 212, 213, 215, 216, 221, 229, 239, 242, 254, 257, 260, 261, 262, 263, 264, 265, 267, 269, 270, 272, 273, 276, 277, 278, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 340, 342, 345, 346, 349, 352, 356, 357, 367, 368, 369, 373, 408, 409, 410, 412, 415, 416, 419, 422, 423, 424, 426, 429, 437, 449, 451, 452, 471, 473, 474, 476, 477, 489, 517, 534, 553, 556, 557, 561, 567, 568, 569, 572, 573, 575, 576, 577, 584, 585, 588, 611, 650, 660, 696, 698, 699, 700, 708, 709, 712, 715, 783, 784, 785, 791, 796, 797, 815, 831, 833, 835, 851, 853, 855, 862, 865, 866, 876], "contigu": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 34, 42, 72, 75, 80, 81, 82, 86, 97, 111, 112, 113, 119, 131, 135, 140, 143, 145, 150, 194, 201, 202, 203, 205, 208, 209, 210, 228, 229, 268], "segment": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 23, 24, 27, 33, 34, 38, 42, 63, 69, 72, 75, 79, 80, 81, 82, 86, 97, 107, 111, 112, 113, 119, 131, 133, 134, 135, 136, 140, 143, 144, 145, 150, 161, 167, 171, 183, 190, 194, 199, 201, 202, 203, 204, 205, 207, 208, 209, 210, 215, 229, 238, 242, 254, 256, 260, 262, 263, 264, 265, 272, 275, 301, 352, 357, 437, 460, 461, 462, 475, 476, 477, 504, 516, 524, 526, 556, 558, 559, 560, 561, 562, 563, 566, 572, 573, 575, 576, 582, 584, 696, 715, 741, 743, 777, 779, 786, 788, 831, 851, 852, 858, 861, 876], "up": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 23, 24, 26, 27, 28, 33, 34, 42, 44, 45, 50, 68, 71, 72, 75, 78, 80, 81, 82, 86, 88, 91, 92, 93, 97, 101, 102, 107, 109, 110, 111, 112, 113, 115, 119, 121, 130, 131, 133, 135, 139, 140, 143, 144, 145, 149, 150, 154, 155, 157, 158, 159, 161, 164, 165, 171, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 213, 215, 216, 220, 221, 225, 226, 229, 232, 234, 239, 259, 260, 262, 263, 264, 265, 269, 270, 271, 272, 273, 274, 276, 277, 278, 408, 413, 414, 415, 420, 448, 476, 477, 529, 530, 555, 556, 558, 575, 639, 644, 645, 682, 691, 696, 698, 700, 714, 741, 743, 762, 771, 773, 774, 775, 779, 782, 786, 789, 795, 796, 798, 801, 803, 806, 807, 813, 831, 833, 839, 855, 858, 859, 861, 864, 876], "band": [1, 5, 8, 9, 12, 13, 14, 15, 16, 18, 21, 27, 32, 33, 34, 42, 71, 75, 80, 86, 92, 103, 104, 105, 107, 108, 110, 112, 113, 119, 124, 131, 135, 136, 140, 141, 143, 144, 145, 166, 171, 194, 197, 199, 200, 201, 202, 203, 205, 209, 210, 216, 228, 229, 237, 238, 239, 242, 262, 263, 264, 265, 285, 410, 416, 419, 443, 444, 446, 447, 449, 476, 477, 539, 561, 588, 675, 698, 700, 712, 722, 723, 726, 767, 775, 791, 831, 852, 855, 876], "stop": [1, 5, 29, 67, 80, 91, 94, 125, 135, 166, 171, 199, 200, 201, 208, 210, 213, 214, 215, 254, 255, 262, 263, 264, 265, 282, 283, 294, 355, 410, 419, 443, 444, 446, 447, 475, 476, 477, 517, 526, 529, 556, 575, 582, 598, 787, 790, 835, 857, 876], "fir": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 71, 72, 75, 80, 81, 82, 86, 97, 111, 112, 113, 119, 131, 135, 140, 143, 145, 150, 171, 190, 194, 197, 199, 201, 202, 203, 205, 208, 209, 210, 229, 254, 262, 263, 264, 265, 410, 419, 444, 446, 447, 476, 477, 568, 569, 588, 709, 784, 796, 833, 855, 865, 876], "paramet": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 24, 31, 34, 40, 41, 42, 43, 44, 48, 54, 55, 59, 61, 68, 70, 71, 72, 74, 75, 80, 81, 82, 86, 94, 95, 97, 98, 99, 105, 106, 107, 108, 110, 111, 112, 113, 115, 117, 118, 119, 121, 126, 130, 131, 135, 136, 139, 140, 141, 143, 144, 145, 148, 149, 150, 155, 157, 158, 160, 161, 165, 167, 168, 169, 170, 171, 174, 177, 179, 187, 190, 193, 194, 197, 198, 200, 201, 202, 203, 204, 205, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 227, 237, 238, 239, 242, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 746, 747, 748, 749, 751, 752, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 835, 851, 853, 855, 858, 862, 876], "design": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 60, 71, 72, 75, 80, 81, 82, 86, 97, 111, 112, 113, 119, 131, 135, 140, 143, 145, 150, 159, 160, 171, 179, 187, 189, 190, 197, 199, 201, 202, 203, 205, 206, 208, 209, 210, 221, 224, 229, 242, 255, 262, 263, 264, 265, 340, 384, 387, 410, 419, 443, 444, 446, 447, 476, 477, 484, 486, 488, 491, 492, 493, 498, 502, 555, 557, 584, 591, 598, 608, 677, 681, 708, 719, 796, 814, 815, 840, 852, 855, 857, 864, 876], "pass": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 32, 34, 42, 43, 59, 71, 72, 75, 80, 81, 82, 86, 97, 111, 112, 113, 119, 131, 133, 135, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 154, 155, 157, 165, 166, 167, 168, 169, 170, 171, 179, 182, 188, 190, 194, 197, 198, 199, 201, 202, 203, 204, 205, 208, 209, 210, 213, 214, 215, 216, 219, 221, 224, 226, 228, 229, 232, 233, 234, 237, 238, 242, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 301, 302, 303, 304, 305, 306, 307, 310, 312, 314, 315, 316, 320, 321, 322, 327, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 421, 424, 425, 427, 429, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 458, 459, 463, 464, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 518, 519, 520, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 549, 552, 555, 556, 557, 558, 559, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 591, 592, 593, 596, 597, 598, 599, 601, 603, 604, 605, 606, 607, 608, 610, 611, 612, 614, 615, 616, 618, 619, 620, 621, 622, 626, 627, 628, 629, 630, 631, 632, 633, 635, 636, 637, 638, 641, 643, 644, 645, 647, 648, 649, 650, 659, 660, 661, 662, 664, 666, 667, 668, 669, 670, 671, 672, 676, 683, 684, 685, 686, 687, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 714, 715, 718, 719, 723, 724, 726, 727, 728, 729, 732, 733, 738, 742, 743, 744, 751, 756, 759, 760, 763, 765, 767, 768, 769, 771, 773, 774, 775, 776, 777, 778, 780, 781, 782, 783, 786, 787, 788, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 812, 816, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 833, 835, 839, 840, 851, 853, 855, 858, 876], "zero": [1, 2, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 24, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 63, 69, 71, 72, 73, 75, 80, 81, 82, 86, 88, 91, 92, 93, 97, 107, 110, 111, 112, 113, 118, 119, 131, 135, 139, 140, 141, 143, 145, 148, 150, 151, 157, 159, 161, 165, 167, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 219, 220, 221, 224, 228, 229, 239, 255, 256, 257, 260, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 276, 277, 278, 279, 281, 295, 296, 352, 356, 358, 367, 410, 414, 419, 420, 421, 442, 444, 446, 447, 448, 449, 471, 476, 477, 478, 489, 529, 540, 556, 557, 576, 598, 611, 647, 648, 649, 657, 661, 676, 683, 684, 686, 687, 691, 692, 696, 698, 699, 700, 712, 715, 722, 723, 724, 725, 726, 728, 743, 758, 762, 772, 773, 796, 801, 806, 807, 831, 835, 851, 858, 861, 876], "phase": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 27, 34, 42, 71, 72, 75, 80, 81, 82, 86, 97, 103, 104, 111, 112, 113, 119, 131, 135, 140, 143, 145, 150, 166, 171, 189, 190, 194, 197, 199, 200, 201, 202, 203, 205, 208, 209, 210, 221, 229, 239, 242, 262, 263, 264, 265, 267, 268, 269, 270, 273, 276, 277, 278, 288, 339, 369, 410, 419, 421, 442, 444, 446, 447, 449, 476, 477, 522, 527, 537, 540, 553, 556, 618, 723, 724, 733, 784, 831, 842, 852, 876], "non": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 24, 34, 40, 41, 42, 46, 50, 59, 69, 71, 72, 75, 80, 81, 82, 86, 91, 97, 107, 111, 112, 113, 119, 131, 135, 140, 141, 142, 143, 145, 149, 150, 157, 164, 165, 168, 170, 171, 174, 179, 180, 184, 188, 189, 190, 194, 197, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 213, 219, 229, 230, 231, 242, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 276, 277, 278, 284, 295, 296, 316, 351, 352, 356, 358, 408, 414, 415, 416, 420, 437, 444, 446, 447, 449, 474, 476, 477, 492, 529, 536, 542, 553, 555, 556, 557, 570, 584, 585, 602, 608, 611, 631, 657, 675, 676, 683, 684, 686, 687, 691, 692, 696, 698, 699, 700, 726, 733, 743, 760, 771, 774, 775, 782, 786, 795, 798, 802, 803, 805, 831, 833, 835, 844, 851, 855, 857, 858, 873, 876], "causal": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 71, 72, 75, 80, 81, 82, 86, 97, 111, 112, 113, 119, 131, 135, 140, 143, 145, 150, 171, 190, 194, 197, 199, 200, 201, 202, 203, 205, 208, 209, 210, 229, 262, 263, 264, 265, 414, 444, 446, 447, 476, 477], "bandstop": [1, 5, 80, 135, 201, 210, 476, 477, 796], "domain": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 46, 71, 72, 75, 80, 81, 82, 86, 97, 101, 111, 112, 113, 119, 131, 133, 135, 140, 143, 145, 150, 164, 165, 171, 190, 194, 197, 199, 200, 201, 202, 205, 208, 209, 210, 216, 229, 239, 240, 241, 242, 254, 262, 263, 264, 265, 410, 419, 420, 444, 446, 447, 448, 449, 476, 477, 539, 540, 645, 698, 700, 714, 715, 732, 738, 857, 876], "ham": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 75, 80, 81, 82, 86, 97, 111, 112, 113, 119, 131, 135, 140, 143, 145, 150, 190, 194, 200, 201, 202, 203, 205, 208, 209, 210, 229, 262, 263, 264, 265, 410, 419, 444, 446, 447, 476, 477, 715, 797, 876], "0194": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 75, 80, 81, 82, 86, 97, 111, 112, 113, 119, 131, 135, 140, 143, 145, 150, 190, 194, 200, 201, 202, 203, 208, 209, 210, 229], "passband": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 71, 72, 75, 80, 81, 82, 86, 97, 111, 112, 113, 119, 131, 135, 140, 143, 145, 150, 171, 190, 194, 197, 199, 201, 202, 203, 205, 208, 209, 210, 229, 851], "rippl": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 75, 80, 81, 82, 86, 97, 111, 112, 113, 119, 131, 135, 140, 143, 145, 150, 190, 194, 201, 202, 203, 208, 209, 210, 229], "db": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 71, 72, 75, 80, 81, 82, 86, 97, 106, 107, 111, 112, 113, 119, 127, 131, 135, 136, 140, 141, 143, 145, 150, 168, 171, 190, 194, 197, 199, 200, 201, 202, 203, 205, 208, 209, 210, 213, 216, 219, 221, 229, 237, 238, 239, 262, 263, 264, 265, 267, 309, 310, 369, 371, 441, 444, 476, 477, 491, 502, 529, 553, 554, 556, 641, 691, 696, 698, 699, 700, 743, 759, 775, 784, 788, 791, 797, 799, 831, 858, 876], "stopband": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 75, 80, 81, 82, 86, 97, 111, 112, 113, 119, 131, 135, 140, 143, 145, 150, 190, 194, 201, 202, 203, 208, 209, 210, 229], "attenu": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 75, 80, 81, 82, 86, 97, 111, 112, 113, 119, 131, 135, 140, 143, 145, 150, 161, 190, 194, 201, 202, 203, 208, 209, 210, 229, 262, 263, 264, 265, 410, 419, 444, 446, 447, 476, 477, 858, 876], "lower": [1, 2, 5, 8, 9, 10, 12, 13, 14, 15, 16, 18, 21, 22, 34, 37, 40, 42, 49, 54, 55, 61, 69, 71, 72, 75, 80, 81, 86, 97, 105, 110, 111, 112, 113, 118, 119, 125, 131, 133, 135, 140, 141, 143, 145, 150, 155, 159, 171, 179, 180, 183, 194, 197, 199, 200, 201, 202, 203, 204, 205, 209, 210, 216, 226, 227, 228, 229, 232, 234, 239, 257, 259, 262, 263, 264, 265, 269, 270, 271, 273, 276, 277, 278, 408, 410, 413, 415, 434, 444, 446, 476, 477, 516, 529, 530, 555, 556, 561, 566, 570, 588, 607, 675, 682, 683, 685, 686, 696, 697, 698, 700, 714, 715, 760, 762, 767, 774, 775, 781, 782, 786, 795, 796, 797, 798, 801, 803, 805, 806, 807, 831, 833, 876], "transit": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 71, 72, 75, 80, 81, 82, 86, 97, 111, 112, 113, 119, 131, 135, 140, 143, 145, 150, 171, 190, 194, 197, 199, 201, 202, 203, 205, 208, 209, 210, 229, 255, 262, 263, 264, 265, 410, 419, 444, 446, 447, 476, 477, 558, 588, 809, 858, 876], "bandwidth": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 71, 72, 75, 80, 81, 82, 86, 97, 102, 111, 112, 113, 119, 131, 135, 140, 143, 145, 150, 171, 190, 194, 197, 199, 201, 202, 203, 205, 208, 209, 210, 229, 239, 262, 263, 264, 265, 413, 421, 447, 476, 477, 529, 530, 698, 700, 703, 706, 708, 714, 724, 727, 775], "50": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 28, 34, 35, 41, 42, 45, 46, 47, 65, 71, 75, 79, 80, 81, 82, 86, 88, 93, 94, 97, 101, 106, 107, 110, 111, 112, 113, 118, 119, 131, 134, 135, 136, 142, 143, 145, 148, 150, 157, 159, 165, 167, 168, 169, 170, 171, 177, 179, 183, 184, 186, 188, 190, 193, 194, 197, 199, 200, 201, 202, 203, 205, 207, 210, 212, 213, 214, 215, 221, 224, 225, 226, 228, 229, 232, 233, 234, 239, 242, 254, 333, 443, 476, 477, 538, 565, 653, 658, 676, 684, 695, 743, 791, 851, 858, 876], "hz": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 32, 33, 34, 42, 67, 70, 71, 72, 75, 79, 80, 81, 82, 86, 88, 91, 92, 93, 97, 102, 105, 106, 107, 111, 112, 113, 119, 121, 125, 131, 135, 136, 140, 141, 143, 145, 150, 165, 166, 167, 168, 171, 179, 182, 183, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 221, 226, 227, 228, 229, 237, 238, 242, 254, 262, 263, 264, 265, 410, 413, 419, 443, 444, 446, 447, 449, 476, 477, 529, 530, 556, 561, 564, 568, 569, 575, 577, 580, 584, 588, 662, 682, 696, 698, 699, 700, 703, 706, 712, 714, 720, 722, 723, 724, 726, 727, 773, 775, 784, 791, 796, 797, 852, 861, 862], "upper": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 34, 39, 42, 61, 69, 71, 75, 80, 82, 86, 111, 112, 113, 118, 119, 125, 131, 133, 135, 140, 141, 143, 145, 158, 165, 171, 190, 194, 197, 199, 200, 201, 202, 203, 205, 208, 209, 210, 229, 238, 239, 242, 259, 260, 261, 262, 263, 264, 265, 269, 270, 271, 273, 276, 277, 278, 280, 408, 410, 413, 415, 434, 444, 446, 452, 476, 477, 529, 530, 555, 556, 561, 588, 675, 682, 683, 684, 685, 686, 687, 696, 697, 698, 699, 700, 712, 714, 715, 722, 760, 762, 767, 775, 781, 782, 786, 795, 797, 798, 801, 803, 805, 806, 807, 876], "7921": 1, "601": [1, 5, 139, 148, 153, 197, 202, 207, 213, 229], "parallel": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 31, 32, 33, 34, 41, 42, 45, 50, 65, 71, 72, 75, 77, 80, 81, 82, 85, 86, 88, 93, 97, 98, 105, 107, 108, 110, 111, 112, 113, 117, 119, 122, 131, 135, 140, 143, 145, 149, 150, 157, 158, 165, 171, 175, 180, 181, 182, 183, 184, 190, 194, 197, 198, 199, 201, 202, 203, 205, 206, 208, 209, 210, 221, 226, 227, 228, 229, 238, 242, 254, 262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 280, 352, 353, 355, 357, 410, 411, 413, 414, 418, 419, 421, 424, 425, 446, 447, 448, 451, 453, 464, 466, 471, 473, 474, 476, 477, 515, 518, 519, 529, 530, 534, 539, 540, 561, 568, 569, 592, 636, 639, 644, 647, 648, 649, 661, 683, 684, 685, 686, 687, 698, 700, 701, 702, 703, 704, 705, 706, 714, 715, 723, 724, 725, 726, 727, 728, 775, 778, 797, 843, 855, 858, 864, 876], "n_job": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 71, 72, 75, 77, 80, 81, 82, 85, 86, 88, 93, 94, 97, 98, 101, 105, 107, 108, 110, 111, 112, 113, 117, 119, 122, 131, 135, 140, 143, 145, 149, 150, 157, 158, 165, 171, 175, 180, 181, 182, 183, 184, 190, 194, 197, 198, 199, 201, 202, 203, 205, 206, 208, 209, 210, 221, 224, 226, 227, 228, 229, 232, 233, 234, 238, 254, 262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 280, 352, 353, 355, 357, 410, 411, 413, 414, 418, 419, 420, 421, 424, 425, 446, 447, 448, 451, 464, 466, 476, 477, 515, 518, 519, 529, 530, 539, 540, 561, 568, 569, 636, 644, 647, 648, 649, 661, 683, 684, 685, 686, 687, 698, 700, 701, 702, 703, 704, 705, 706, 714, 715, 723, 724, 725, 726, 727, 728, 775, 778, 797, 833, 855, 876], "backend": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 71, 72, 75, 77, 80, 81, 82, 85, 86, 88, 93, 97, 98, 105, 107, 108, 110, 111, 112, 113, 117, 119, 122, 131, 133, 135, 140, 143, 145, 149, 150, 155, 157, 158, 159, 165, 170, 171, 175, 180, 181, 182, 183, 184, 190, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 208, 209, 210, 221, 226, 227, 228, 229, 238, 262, 263, 269, 270, 273, 276, 277, 278, 467, 476, 477, 556, 695, 743, 750, 752, 753, 754, 755, 773, 790, 796, 801, 806, 808, 812, 813, 814, 815, 833, 834, 839, 855, 864, 876], "sequentialbackend": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 71, 72, 75, 77, 80, 81, 82, 85, 86, 88, 93, 97, 98, 105, 107, 108, 110, 111, 112, 113, 117, 119, 122, 131, 135, 140, 143, 145, 149, 150, 157, 158, 165, 171, 175, 180, 181, 182, 183, 184, 190, 194, 197, 198, 199, 201, 202, 203, 205, 206, 208, 209, 210, 221, 226, 227, 228, 229, 238], "concurr": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 71, 72, 75, 77, 80, 81, 82, 85, 86, 88, 93, 97, 98, 105, 107, 108, 110, 111, 112, 113, 117, 119, 122, 131, 135, 140, 143, 145, 149, 150, 157, 158, 165, 171, 175, 180, 181, 182, 183, 184, 190, 194, 197, 198, 199, 201, 202, 203, 205, 206, 208, 209, 210, 221, 226, 227, 228, 229, 238], "worker": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 71, 72, 75, 77, 80, 81, 82, 85, 86, 88, 93, 97, 98, 105, 107, 108, 110, 111, 112, 113, 117, 119, 122, 131, 135, 140, 143, 145, 149, 150, 157, 158, 165, 171, 175, 180, 181, 182, 183, 184, 190, 194, 197, 198, 199, 201, 202, 203, 205, 206, 208, 209, 210, 221, 226, 227, 228, 229, 238, 864], "done": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 67, 69, 71, 72, 75, 77, 78, 80, 81, 82, 85, 86, 88, 90, 91, 92, 93, 97, 98, 99, 101, 102, 105, 106, 107, 108, 110, 111, 112, 113, 117, 119, 122, 129, 131, 132, 133, 134, 135, 139, 140, 142, 143, 145, 149, 150, 154, 155, 157, 158, 159, 160, 161, 165, 166, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 238, 239, 255, 260, 261, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 295, 296, 318, 357, 421, 471, 473, 474, 476, 477, 523, 525, 526, 527, 556, 568, 569, 571, 573, 682, 696, 697, 699, 721, 723, 724, 726, 727, 741, 743, 746, 759, 767, 797, 831, 835, 840, 841, 851, 855, 857, 858, 864, 876], "out": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 67, 69, 71, 72, 73, 75, 77, 78, 80, 81, 82, 85, 86, 88, 90, 92, 93, 97, 98, 105, 107, 108, 110, 111, 112, 113, 117, 118, 119, 121, 122, 125, 129, 131, 133, 135, 136, 139, 140, 142, 143, 145, 149, 150, 155, 157, 158, 159, 165, 166, 169, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 216, 221, 224, 226, 227, 228, 229, 238, 239, 254, 259, 262, 263, 264, 265, 267, 271, 286, 300, 336, 353, 354, 355, 408, 410, 415, 419, 444, 446, 476, 477, 484, 499, 522, 530, 555, 556, 557, 570, 592, 598, 600, 688, 696, 698, 700, 723, 724, 731, 760, 767, 775, 779, 782, 786, 787, 795, 798, 803, 805, 833, 834, 835, 841, 852, 853, 855, 858, 861, 862, 876], "elaps": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 71, 72, 75, 77, 80, 81, 82, 85, 86, 88, 93, 97, 98, 105, 107, 108, 110, 111, 112, 113, 117, 119, 122, 131, 135, 140, 143, 145, 149, 150, 157, 158, 165, 171, 175, 180, 181, 182, 183, 184, 190, 194, 197, 198, 199, 201, 202, 203, 205, 206, 208, 209, 210, 221, 226, 227, 228, 229, 238], "remain": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 67, 71, 72, 74, 75, 77, 80, 81, 82, 85, 86, 88, 90, 92, 93, 97, 98, 105, 107, 108, 110, 111, 112, 113, 117, 119, 122, 129, 131, 135, 136, 140, 143, 145, 149, 150, 155, 157, 158, 165, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 208, 209, 210, 221, 226, 227, 228, 229, 238, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 295, 296, 352, 356, 357, 367, 368, 369, 408, 415, 431, 451, 452, 471, 473, 474, 476, 477, 478, 534, 556, 637, 684, 696, 698, 699, 723, 724, 726, 727, 783, 843, 851, 861, 864, 876], "299": [1, 5, 34, 79, 83, 139, 168, 182, 183, 186, 194, 224, 237], "finish": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 71, 72, 75, 77, 80, 81, 82, 85, 86, 88, 93, 97, 98, 105, 107, 108, 110, 111, 112, 113, 117, 119, 122, 131, 133, 135, 140, 143, 145, 149, 150, 157, 158, 165, 171, 175, 180, 181, 182, 183, 184, 190, 194, 197, 198, 199, 201, 202, 203, 205, 206, 208, 209, 210, 215, 221, 226, 227, 228, 229, 238, 853, 876], "66": [1, 12, 13, 16, 19, 21, 33, 35, 40, 41, 45, 79, 101, 106, 110, 112, 143, 145, 157, 168, 175, 180, 183, 190, 193, 194, 203, 207, 224, 225, 228, 229, 242, 264, 265, 295, 296, 352, 356, 357, 367, 368, 369, 408, 415, 451, 452, 471, 473, 474, 534, 556, 783, 876], "id": [1, 5, 12, 21, 32, 33, 34, 42, 45, 46, 49, 68, 70, 71, 72, 78, 79, 80, 88, 91, 92, 93, 97, 105, 106, 108, 110, 111, 139, 140, 141, 145, 148, 151, 161, 165, 167, 168, 170, 171, 176, 179, 181, 182, 184, 190, 194, 198, 201, 202, 203, 205, 210, 219, 220, 221, 226, 238, 254, 257, 262, 263, 264, 267, 269, 270, 273, 275, 276, 277, 278, 281, 295, 296, 311, 352, 366, 374, 424, 430, 432, 434, 436, 437, 449, 461, 476, 477, 516, 517, 521, 551, 557, 568, 569, 578, 601, 608, 610, 611, 617, 645, 698, 699, 743, 776, 796, 801, 806, 821, 835, 855, 858, 876], "Not": [1, 8, 9, 11, 12, 16, 18, 21, 28, 32, 33, 34, 45, 46, 49, 61, 68, 70, 71, 72, 73, 75, 78, 79, 80, 81, 86, 88, 91, 92, 93, 94, 95, 98, 101, 102, 105, 106, 107, 108, 110, 111, 112, 115, 119, 125, 126, 130, 134, 135, 136, 139, 140, 141, 142, 144, 145, 148, 150, 151, 165, 166, 167, 168, 170, 171, 176, 179, 181, 182, 183, 184, 190, 197, 198, 199, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 226, 227, 228, 229, 232, 234, 238, 264, 265, 270, 276, 277, 278, 416, 419, 443, 452, 557, 695, 696, 743, 779, 807, 834, 858, 864], "metadata": [1, 4, 8, 9, 11, 12, 16, 18, 21, 28, 32, 33, 34, 45, 46, 49, 61, 68, 70, 71, 72, 73, 78, 81, 86, 88, 91, 92, 93, 94, 95, 98, 99, 101, 102, 105, 106, 107, 108, 110, 111, 112, 115, 119, 126, 130, 134, 135, 136, 139, 140, 141, 144, 145, 146, 147, 148, 150, 151, 160, 164, 165, 171, 176, 179, 181, 182, 183, 184, 187, 188, 189, 190, 197, 198, 199, 201, 202, 203, 205, 209, 210, 213, 219, 220, 221, 225, 226, 227, 228, 229, 232, 234, 237, 238, 257, 262, 263, 264, 265, 266, 267, 351, 432, 437, 476, 477, 482, 607, 627, 696, 698, 699, 700, 767, 831, 852, 876], "33": [1, 5, 6, 8, 12, 13, 19, 21, 26, 28, 33, 34, 35, 39, 40, 41, 45, 47, 54, 56, 75, 79, 101, 106, 110, 112, 113, 121, 140, 143, 150, 156, 163, 168, 169, 182, 193, 194, 201, 203, 207, 224, 225, 226, 228, 229, 233, 234, 262, 263, 264, 265, 333, 449, 476, 477, 520, 797, 858, 876], "interv": [1, 10, 11, 28, 32, 33, 34, 38, 45, 46, 49, 61, 68, 69, 70, 71, 78, 81, 88, 91, 92, 93, 94, 95, 98, 101, 102, 105, 108, 110, 111, 115, 125, 126, 130, 139, 141, 143, 144, 148, 149, 150, 151, 165, 171, 175, 176, 177, 179, 181, 182, 183, 184, 190, 198, 199, 201, 202, 205, 208, 209, 220, 221, 226, 227, 228, 232, 234, 238, 254, 256, 257, 260, 261, 262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 285, 344, 357, 432, 529, 539, 540, 556, 572, 573, 578, 614, 615, 646, 648, 673, 675, 696, 698, 699, 700, 709, 767, 788, 803, 852, 862, 876], "mode": [1, 5, 8, 9, 11, 22, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 44, 45, 46, 47, 49, 51, 57, 58, 59, 60, 61, 68, 69, 70, 71, 72, 77, 78, 81, 84, 85, 91, 92, 93, 94, 95, 98, 101, 102, 105, 108, 110, 111, 112, 115, 117, 118, 125, 126, 129, 130, 135, 139, 140, 141, 143, 144, 148, 150, 151, 157, 158, 160, 165, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 190, 194, 197, 198, 199, 200, 201, 202, 203, 205, 207, 208, 209, 210, 215, 216, 220, 226, 227, 228, 229, 232, 234, 238, 239, 242, 254, 259, 260, 262, 263, 264, 265, 269, 270, 271, 272, 273, 276, 277, 278, 285, 295, 296, 339, 352, 356, 357, 358, 362, 363, 367, 368, 369, 407, 408, 414, 415, 442, 446, 447, 448, 467, 471, 476, 477, 515, 532, 533, 555, 556, 578, 584, 637, 659, 662, 691, 696, 697, 698, 699, 700, 721, 743, 769, 771, 773, 774, 775, 779, 782, 785, 786, 790, 795, 796, 797, 798, 801, 802, 803, 806, 807, 812, 835, 843, 864, 876], "mean": [1, 4, 8, 9, 10, 11, 14, 16, 19, 21, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 51, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 77, 78, 82, 84, 85, 91, 92, 93, 94, 95, 98, 99, 101, 102, 105, 108, 110, 111, 112, 115, 117, 118, 125, 126, 130, 136, 139, 140, 141, 142, 143, 144, 148, 149, 151, 155, 156, 157, 159, 165, 169, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 213, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 234, 237, 238, 239, 256, 257, 259, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 275, 276, 277, 278, 285, 288, 295, 296, 312, 316, 352, 357, 408, 414, 415, 417, 420, 429, 441, 442, 450, 467, 471, 473, 474, 476, 477, 478, 484, 491, 498, 509, 515, 523, 529, 532, 533, 534, 539, 540, 555, 556, 560, 563, 566, 567, 570, 572, 575, 577, 582, 584, 593, 601, 614, 615, 641, 648, 649, 650, 659, 660, 662, 675, 678, 683, 684, 685, 686, 687, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 712, 715, 722, 723, 724, 726, 727, 743, 767, 769, 773, 774, 775, 777, 782, 786, 795, 796, 797, 798, 801, 803, 805, 835, 840, 855, 857, 858, 861, 876], "activ": [1, 4, 5, 8, 11, 12, 16, 18, 19, 21, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 80, 81, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 110, 111, 112, 114, 115, 117, 118, 119, 120, 122, 128, 130, 132, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 157, 158, 161, 165, 166, 167, 171, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 188, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 213, 214, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 238, 242, 255, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 295, 296, 322, 346, 434, 437, 442, 449, 451, 455, 471, 473, 474, 475, 476, 477, 481, 492, 496, 509, 512, 522, 523, 524, 525, 526, 527, 534, 537, 553, 561, 571, 588, 614, 616, 618, 619, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 661, 668, 671, 688, 691, 696, 698, 699, 700, 712, 722, 723, 726, 752, 762, 764, 771, 802, 807, 831, 833, 834, 835, 836, 838, 839, 842, 843, 851, 852, 855, 857, 858, 861, 864, 876], "projector": [1, 2, 4, 5, 8, 9, 16, 18, 21, 28, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 67, 68, 70, 72, 75, 81, 88, 90, 91, 92, 97, 99, 101, 107, 117, 119, 125, 130, 139, 140, 145, 148, 149, 150, 151, 161, 164, 165, 166, 167, 168, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 197, 198, 201, 202, 203, 209, 210, 211, 212, 213, 220, 221, 225, 226, 227, 228, 229, 232, 234, 254, 262, 263, 264, 265, 267, 271, 272, 295, 296, 352, 353, 354, 355, 356, 357, 367, 368, 369, 408, 415, 438, 439, 440, 441, 451, 452, 471, 473, 474, 476, 477, 496, 523, 534, 556, 568, 569, 584, 614, 622, 641, 697, 701, 702, 703, 704, 705, 706, 707, 773, 783, 790, 794, 795, 796, 815, 827, 831, 851, 853, 855, 858, 876], "n_channel": [1, 16, 18, 19, 28, 31, 35, 42, 51, 58, 59, 63, 65, 68, 69, 70, 73, 74, 75, 79, 81, 82, 88, 97, 101, 112, 117, 125, 130, 139, 140, 141, 142, 148, 149, 150, 158, 161, 165, 166, 167, 171, 175, 176, 179, 180, 181, 189, 194, 197, 198, 201, 202, 203, 204, 205, 206, 209, 213, 216, 219, 221, 226, 227, 228, 229, 232, 234, 239, 254, 257, 259, 261, 262, 263, 264, 265, 266, 267, 295, 296, 311, 312, 316, 327, 367, 408, 409, 410, 413, 414, 415, 416, 417, 419, 421, 422, 424, 446, 447, 476, 477, 555, 556, 557, 561, 564, 664, 681, 682, 696, 697, 698, 699, 700, 701, 702, 703, 723, 724, 725, 760, 763, 767, 773, 774, 775, 782, 796, 798, 803, 805, 813, 831, 876], "No": [1, 2, 4, 5, 8, 9, 12, 16, 18, 21, 34, 41, 46, 48, 50, 54, 55, 73, 78, 81, 86, 88, 99, 106, 107, 110, 111, 112, 114, 115, 119, 125, 126, 134, 135, 136, 139, 140, 141, 142, 145, 148, 150, 155, 165, 170, 171, 177, 183, 184, 189, 190, 194, 197, 200, 202, 203, 205, 208, 209, 210, 219, 221, 224, 225, 229, 238, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 384, 409, 424, 471, 473, 474, 476, 477, 523, 525, 526, 527, 660, 797, 834, 835, 852, 857, 861], "gradiomet": [1, 22, 32, 34, 35, 46, 59, 70, 72, 75, 78, 80, 85, 91, 98, 101, 106, 107, 108, 109, 111, 115, 117, 118, 141, 144, 145, 149, 161, 165, 166, 167, 168, 179, 182, 183, 187, 190, 197, 198, 199, 201, 203, 204, 205, 207, 208, 213, 214, 215, 216, 219, 221, 224, 226, 227, 228, 238, 254, 257, 259, 262, 263, 264, 265, 269, 270, 271, 273, 276, 277, 278, 295, 296, 352, 353, 354, 355, 356, 357, 367, 368, 369, 408, 415, 429, 451, 452, 471, 473, 474, 476, 477, 512, 534, 553, 554, 555, 556, 566, 567, 568, 569, 570, 571, 572, 573, 575, 584, 595, 682, 696, 698, 699, 700, 760, 766, 767, 773, 774, 775, 777, 779, 781, 782, 783, 786, 795, 796, 798, 803, 804, 805, 831, 851, 855, 858, 861, 876], "forc": [1, 4, 145, 160, 165, 177, 190, 199, 254, 262, 263, 264, 265, 306, 317, 362, 373, 375, 376, 377, 378, 380, 381, 383, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 476, 477, 500, 523, 610, 696, 698, 699, 700, 743, 833, 835, 852, 876], "n_grad": [1, 190, 205, 254, 353, 354, 355, 568, 569], "n_eeg": [1, 145, 190, 205, 254, 353, 354, 355, 568, 569], "axial": [1, 33, 47, 80, 82, 90, 107, 109, 129, 134, 141, 145, 159, 171, 179, 182, 190, 197, 204, 205, 224, 260, 277, 278, 743, 761, 771, 858], "100": [1, 2, 5, 10, 11, 13, 16, 19, 22, 29, 30, 31, 33, 34, 35, 38, 39, 40, 41, 44, 45, 48, 50, 51, 53, 54, 55, 57, 58, 59, 60, 73, 74, 77, 79, 81, 84, 85, 88, 90, 93, 94, 99, 101, 102, 106, 107, 109, 110, 112, 113, 114, 117, 118, 121, 123, 125, 133, 135, 136, 139, 140, 142, 143, 144, 145, 148, 150, 155, 157, 168, 169, 171, 175, 176, 177, 178, 179, 180, 182, 183, 189, 190, 193, 194, 199, 200, 201, 203, 205, 207, 210, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 242, 254, 262, 263, 264, 265, 272, 358, 429, 448, 473, 474, 476, 477, 499, 567, 575, 584, 662, 682, 698, 700, 725, 728, 733, 743, 773, 791, 796, 816, 852, 857, 861, 876], "pca": [1, 5, 11, 13, 15, 16, 17, 18, 20, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 67, 68, 70, 71, 72, 73, 75, 77, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 105, 106, 107, 108, 109, 114, 115, 116, 117, 118, 119, 121, 122, 125, 127, 129, 130, 131, 139, 140, 141, 145, 148, 149, 150, 151, 155, 156, 157, 159, 161, 165, 166, 167, 168, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 213, 214, 215, 216, 220, 221, 226, 227, 228, 229, 232, 234, 262, 264, 265, 267, 270, 276, 278, 295, 296, 352, 367, 371, 422, 471, 474, 476, 529, 530, 539, 540, 553, 556, 611, 787, 851, 862, 876], "01": [1, 6, 8, 11, 12, 13, 19, 21, 24, 32, 33, 34, 35, 46, 56, 59, 70, 72, 75, 77, 81, 82, 88, 89, 90, 91, 101, 106, 107, 109, 110, 111, 118, 119, 121, 122, 125, 128, 129, 136, 138, 140, 141, 145, 149, 150, 153, 157, 158, 163, 165, 166, 167, 168, 169, 171, 173, 179, 180, 182, 184, 186, 190, 192, 193, 194, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 213, 214, 215, 216, 221, 223, 224, 225, 226, 228, 229, 231, 232, 233, 234, 238, 239, 241, 242, 253, 254, 256, 262, 263, 339, 341, 345, 378, 400, 401, 416, 476, 477, 487, 570, 575, 578, 582, 589, 593, 691, 852], "02": [1, 2, 5, 11, 13, 19, 20, 33, 34, 35, 56, 63, 66, 80, 82, 83, 90, 101, 106, 107, 109, 112, 118, 121, 124, 128, 129, 135, 141, 145, 147, 149, 156, 159, 163, 169, 171, 173, 179, 182, 192, 193, 194, 200, 204, 205, 206, 207, 209, 210, 215, 224, 225, 226, 228, 229, 231, 233, 234, 239, 242, 253, 254, 262, 263, 319, 471, 474, 476, 477, 487, 712, 722, 723, 725, 726, 728], "creat": [1, 2, 4, 5, 8, 9, 11, 15, 16, 18, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 63, 65, 67, 68, 69, 70, 72, 74, 78, 81, 84, 86, 90, 91, 93, 101, 102, 105, 106, 107, 108, 110, 111, 112, 115, 118, 119, 121, 123, 125, 126, 130, 132, 133, 134, 135, 140, 141, 144, 145, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 194, 197, 198, 199, 200, 201, 203, 204, 213, 216, 221, 222, 223, 225, 227, 229, 232, 234, 237, 238, 256, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 281, 286, 295, 296, 300, 305, 306, 307, 310, 324, 352, 353, 354, 358, 363, 370, 371, 408, 415, 421, 425, 430, 432, 443, 444, 449, 476, 477, 488, 493, 499, 512, 513, 514, 519, 520, 522, 545, 555, 556, 558, 559, 561, 565, 568, 569, 572, 573, 576, 581, 608, 610, 634, 635, 636, 638, 641, 645, 646, 650, 673, 676, 682, 691, 696, 697, 698, 699, 700, 709, 721, 723, 724, 726, 727, 731, 743, 746, 748, 751, 756, 759, 760, 766, 767, 769, 771, 774, 775, 778, 779, 780, 781, 782, 786, 788, 791, 794, 795, 796, 797, 798, 799, 801, 803, 805, 806, 814, 815, 826, 831, 833, 839, 843, 852, 856, 861, 864, 866, 876], "an": [1, 4, 5, 7, 11, 12, 15, 18, 19, 21, 26, 27, 28, 29, 30, 31, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 54, 55, 56, 58, 59, 60, 61, 63, 67, 68, 70, 72, 73, 77, 80, 81, 82, 86, 88, 90, 91, 92, 93, 99, 102, 105, 106, 107, 108, 109, 110, 112, 113, 117, 118, 119, 120, 125, 126, 127, 128, 130, 133, 134, 135, 136, 139, 140, 143, 145, 148, 149, 150, 151, 152, 154, 155, 157, 159, 161, 162, 163, 164, 165, 166, 169, 170, 174, 175, 176, 177, 178, 180, 182, 185, 186, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 204, 205, 207, 208, 209, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 228, 229, 232, 233, 234, 237, 238, 240, 241, 242, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 286, 287, 289, 291, 292, 293, 294, 295, 296, 298, 300, 301, 302, 310, 312, 314, 315, 316, 319, 322, 323, 326, 328, 337, 345, 346, 347, 352, 356, 358, 359, 361, 363, 367, 368, 370, 371, 383, 386, 387, 391, 407, 408, 414, 415, 416, 420, 423, 425, 426, 427, 430, 432, 433, 435, 437, 442, 443, 444, 447, 448, 449, 450, 451, 455, 456, 458, 463, 467, 471, 473, 474, 475, 476, 477, 478, 481, 483, 485, 486, 491, 492, 493, 494, 496, 500, 502, 503, 508, 509, 511, 512, 515, 518, 519, 520, 522, 523, 525, 529, 530, 532, 533, 534, 536, 537, 538, 541, 543, 545, 547, 549, 552, 553, 555, 556, 557, 558, 559, 560, 564, 566, 568, 569, 570, 572, 573, 575, 577, 582, 583, 584, 585, 591, 594, 597, 602, 603, 604, 605, 606, 609, 611, 613, 614, 616, 624, 626, 630, 631, 633, 635, 636, 638, 641, 644, 645, 646, 649, 652, 656, 661, 662, 668, 671, 673, 676, 677, 682, 683, 684, 685, 686, 687, 688, 690, 691, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 709, 715, 716, 726, 727, 730, 731, 733, 735, 741, 743, 744, 752, 756, 758, 759, 760, 764, 765, 767, 769, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 786, 787, 788, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 804, 805, 806, 809, 811, 813, 816, 822, 823, 824, 831, 833, 834, 835, 839, 840, 841, 842, 847, 852, 853, 854, 855, 857, 858, 859, 861, 862, 864, 876], "oper": [1, 5, 11, 15, 18, 22, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 67, 68, 70, 72, 82, 86, 88, 90, 91, 93, 102, 105, 106, 107, 108, 119, 122, 130, 133, 139, 140, 141, 144, 145, 148, 150, 151, 154, 155, 161, 162, 163, 164, 165, 166, 168, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 187, 190, 194, 198, 199, 200, 201, 203, 204, 205, 208, 213, 220, 221, 226, 227, 229, 232, 234, 242, 255, 256, 259, 262, 263, 264, 265, 266, 267, 268, 272, 273, 275, 276, 280, 282, 283, 295, 296, 298, 300, 310, 314, 315, 326, 332, 345, 351, 371, 372, 379, 386, 409, 414, 417, 424, 429, 430, 433, 446, 447, 448, 449, 453, 454, 455, 471, 472, 473, 474, 476, 477, 478, 484, 491, 509, 518, 519, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 549, 554, 556, 559, 561, 578, 582, 598, 601, 603, 611, 616, 626, 637, 638, 648, 649, 650, 657, 659, 660, 661, 662, 675, 683, 684, 685, 686, 687, 690, 693, 696, 697, 723, 724, 725, 726, 727, 728, 730, 759, 800, 808, 811, 812, 823, 831, 833, 835, 841, 843, 852, 855, 861, 862, 874, 876], "subspac": [1, 11, 15, 18, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 67, 68, 70, 72, 86, 88, 90, 91, 92, 93, 102, 105, 106, 107, 108, 119, 130, 139, 140, 141, 144, 145, 148, 150, 151, 161, 165, 171, 175, 176, 177, 178, 179, 180, 181, 182, 190, 198, 199, 201, 203, 204, 205, 208, 220, 229, 232, 234, 254, 571, 584, 831], "dimens": [1, 11, 15, 18, 19, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 67, 68, 70, 72, 86, 88, 90, 91, 92, 93, 102, 105, 106, 107, 108, 119, 125, 130, 139, 140, 141, 144, 145, 148, 150, 151, 159, 161, 165, 171, 175, 176, 177, 178, 179, 180, 181, 182, 190, 193, 194, 198, 199, 201, 203, 204, 205, 207, 220, 221, 224, 226, 227, 228, 229, 232, 233, 234, 238, 239, 242, 259, 262, 263, 264, 265, 269, 270, 271, 272, 273, 275, 276, 277, 278, 285, 311, 358, 408, 411, 414, 415, 418, 419, 421, 423, 447, 448, 471, 473, 474, 476, 477, 529, 530, 532, 533, 539, 540, 555, 556, 570, 676, 677, 681, 683, 684, 686, 687, 696, 698, 699, 700, 714, 715, 725, 733, 743, 752, 760, 775, 782, 786, 795, 796, 798, 803, 805, 831, 851, 858, 861, 876], "fran\u00e7oi": [1, 70, 77, 107, 182, 183, 190, 198, 242, 556, 565, 858], "tadel": [1, 107, 182, 183, 190, 242], "sylvain": [1, 107, 182, 183, 190, 242], "baillet": [1, 107, 182, 183, 190, 242], "john": [1, 18, 19, 51, 67, 81, 107, 124, 177, 179, 182, 183, 190, 242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 385, 386, 412, 414, 426, 471, 476, 477, 523, 534, 556, 571, 588, 653, 658, 696, 699, 852, 858, 876], "c": [1, 4, 10, 11, 12, 19, 22, 44, 51, 69, 73, 94, 107, 110, 113, 119, 124, 133, 136, 160, 170, 175, 179, 182, 183, 187, 190, 193, 194, 204, 210, 226, 227, 228, 229, 239, 242, 254, 255, 268, 273, 274, 275, 298, 333, 352, 358, 385, 400, 401, 414, 415, 449, 452, 471, 476, 477, 513, 519, 531, 556, 564, 593, 611, 656, 661, 725, 728, 743, 833, 834, 835, 839, 840, 842, 847, 850, 851, 852, 858, 859, 861, 864, 865, 876], "mosher": [1, 51, 107, 179, 182, 183, 190, 242, 298, 858], "dimitrio": [1, 10, 107, 182, 183, 190, 242, 852], "pantazi": [1, 10, 107, 182, 183, 190, 242, 852], "richard": [1, 51, 107, 182, 183, 190, 207, 238, 242, 386, 556, 564, 678, 852, 858, 863, 876], "leahi": [1, 51, 107, 182, 183, 190, 242, 298, 858], "user": [1, 45, 74, 92, 107, 133, 141, 155, 164, 166, 170, 171, 182, 183, 188, 189, 190, 199, 200, 213, 242, 255, 257, 262, 263, 264, 265, 266, 267, 269, 270, 273, 275, 276, 277, 278, 375, 376, 377, 378, 380, 381, 383, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 429, 437, 468, 475, 476, 477, 493, 556, 575, 591, 642, 694, 695, 696, 699, 760, 773, 780, 790, 796, 805, 833, 835, 837, 839, 840, 842, 846, 851, 852, 854, 855, 857, 859, 860, 876], "friendli": [1, 107, 182, 183, 190, 242], "applic": [1, 15, 69, 72, 86, 107, 148, 161, 169, 177, 182, 183, 190, 194, 200, 203, 204, 205, 208, 239, 242, 257, 262, 263, 264, 265, 410, 415, 419, 432, 444, 446, 447, 460, 476, 477, 500, 515, 516, 557, 584, 607, 610, 698, 700, 743, 775, 796, 816, 835, 838, 842, 847, 855, 858, 876], "analysi": [1, 3, 6, 8, 13, 15, 17, 20, 42, 43, 44, 69, 73, 81, 86, 94, 95, 99, 107, 125, 133, 139, 141, 143, 144, 152, 153, 154, 159, 160, 166, 167, 170, 171, 172, 173, 177, 182, 183, 187, 189, 190, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 213, 214, 216, 221, 224, 225, 226, 228, 229, 237, 241, 242, 262, 263, 264, 265, 267, 269, 270, 272, 273, 274, 276, 277, 278, 295, 296, 310, 312, 326, 351, 352, 358, 361, 371, 401, 408, 416, 422, 432, 437, 449, 465, 471, 476, 477, 486, 522, 523, 537, 547, 553, 556, 557, 564, 570, 581, 582, 611, 641, 645, 649, 656, 677, 678, 681, 683, 696, 698, 699, 700, 708, 710, 712, 714, 722, 723, 724, 725, 726, 727, 728, 743, 767, 776, 805, 815, 831, 834, 836, 838, 842, 847, 850, 851, 852, 857, 858, 859, 864, 866, 873, 874, 876], "intellig": [1, 107, 182, 183, 190, 193, 242, 414, 448], "neurosci": [1, 4, 10, 16, 19, 43, 69, 73, 107, 111, 150, 182, 183, 190, 193, 194, 200, 229, 242, 274, 358, 409, 414, 424, 556, 561, 564, 656, 683, 684, 686, 687, 712, 722, 723, 725, 726, 728, 850, 852, 857], "2011": [1, 15, 19, 21, 32, 34, 59, 86, 107, 150, 168, 182, 183, 188, 190, 200, 221, 224, 242, 295, 416, 474, 523, 557, 689, 690, 858], "13": [1, 9, 10, 11, 12, 13, 16, 19, 21, 26, 28, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 58, 59, 73, 75, 78, 79, 81, 82, 83, 91, 92, 94, 95, 98, 101, 102, 105, 106, 107, 108, 110, 111, 112, 115, 118, 119, 122, 130, 131, 132, 135, 141, 143, 144, 145, 147, 148, 149, 151, 157, 161, 165, 168, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 190, 194, 199, 200, 202, 205, 207, 209, 213, 219, 224, 225, 226, 227, 228, 229, 232, 233, 234, 236, 238, 239, 242, 257, 260, 261, 262, 263, 264, 265, 268, 269, 270, 273, 275, 276, 277, 278, 280, 333, 357, 378, 400, 419, 429, 443, 444, 446, 447, 449, 476, 477, 556, 572, 573, 584, 611, 627, 630, 659, 662, 696, 699, 726, 727, 777, 788, 799, 829, 831, 850, 851, 858], "doi": [1, 4, 8, 10, 12, 13, 15, 16, 18, 19, 21, 33, 35, 40, 42, 43, 44, 46, 51, 54, 55, 58, 59, 65, 69, 70, 73, 74, 77, 81, 82, 86, 92, 99, 107, 110, 111, 115, 117, 119, 124, 127, 133, 136, 140, 143, 150, 154, 156, 161, 175, 177, 179, 182, 183, 190, 193, 194, 198, 200, 202, 203, 204, 205, 206, 208, 210, 221, 224, 225, 229, 237, 242, 262, 263, 264, 265, 268, 273, 274, 288, 295, 296, 298, 352, 358, 378, 385, 386, 390, 391, 400, 401, 408, 409, 412, 414, 415, 416, 424, 426, 432, 471, 473, 474, 476, 477, 523, 524, 534, 538, 555, 556, 557, 561, 564, 565, 567, 570, 571, 584, 588, 591, 592, 599, 641, 649, 653, 656, 658, 661, 680, 682, 683, 684, 685, 686, 687, 689, 690, 698, 700, 708, 710, 712, 714, 715, 722, 723, 725, 726, 728, 760, 850, 851, 852, 855, 858], "10": [1, 4, 5, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 28, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 54, 55, 58, 59, 60, 63, 65, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 86, 88, 91, 92, 93, 98, 99, 100, 101, 102, 106, 107, 108, 110, 111, 112, 113, 115, 117, 118, 119, 124, 125, 126, 127, 128, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 147, 150, 154, 155, 156, 157, 158, 159, 161, 165, 166, 167, 168, 169, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 213, 214, 215, 216, 218, 219, 220, 221, 224, 225, 226, 228, 229, 232, 233, 234, 237, 238, 239, 242, 256, 260, 261, 262, 263, 264, 265, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 280, 288, 295, 296, 298, 307, 310, 322, 328, 333, 338, 342, 345, 348, 349, 350, 352, 358, 363, 378, 385, 386, 390, 391, 400, 401, 408, 409, 410, 412, 414, 415, 416, 419, 424, 426, 429, 432, 443, 444, 446, 447, 452, 471, 473, 474, 476, 477, 500, 513, 514, 523, 524, 534, 538, 543, 555, 556, 557, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 575, 576, 577, 580, 581, 584, 588, 591, 592, 599, 610, 632, 641, 649, 653, 656, 658, 660, 661, 662, 677, 679, 680, 682, 683, 684, 685, 686, 687, 689, 690, 696, 698, 699, 700, 708, 710, 712, 714, 715, 722, 723, 724, 725, 726, 727, 728, 733, 743, 748, 758, 760, 773, 775, 782, 784, 785, 790, 791, 796, 801, 806, 834, 835, 838, 841, 850, 851, 852, 855, 858, 861, 864], "1155": [1, 107, 182, 183, 190, 242], "879716": [1, 107, 182, 183, 190, 242], "total": [1, 2, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 189, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 356, 372, 425, 476, 477, 558, 601, 691, 698, 700, 775, 801, 806, 858, 861, 876], "run": [1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 254, 262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 280, 301, 319, 345, 352, 353, 355, 357, 373, 378, 410, 411, 414, 418, 419, 421, 424, 425, 446, 447, 448, 451, 464, 466, 476, 477, 509, 515, 518, 519, 529, 530, 539, 540, 556, 561, 568, 569, 570, 575, 576, 579, 582, 585, 601, 636, 644, 647, 648, 649, 650, 659, 660, 661, 662, 683, 684, 685, 686, 687, 695, 698, 700, 701, 702, 703, 704, 705, 706, 714, 715, 723, 724, 725, 726, 727, 728, 743, 766, 773, 775, 778, 782, 785, 786, 790, 796, 797, 833, 834, 838, 839, 840, 841, 843, 852, 857, 858, 859, 862, 876], "script": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 272, 476, 477, 796, 835, 836, 838, 840, 841, 842, 852, 855, 856, 858, 861, 864, 866, 876], "minut": [1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 262, 263, 274, 280, 431, 476, 477, 556, 648, 649, 790, 796, 839], "9": [1, 2, 4, 5, 7, 8, 9, 11, 13, 14, 15, 19, 20, 21, 22, 24, 25, 26, 28, 29, 32, 33, 34, 35, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 61, 63, 64, 66, 67, 68, 69, 70, 72, 74, 75, 77, 78, 79, 81, 83, 84, 85, 88, 90, 91, 92, 93, 94, 95, 99, 101, 104, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 122, 124, 125, 126, 128, 130, 133, 134, 136, 139, 140, 141, 143, 144, 149, 150, 153, 155, 157, 158, 161, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 187, 188, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 219, 220, 221, 223, 224, 225, 226, 228, 229, 231, 232, 233, 234, 237, 242, 260, 262, 263, 264, 265, 269, 274, 275, 277, 278, 295, 296, 298, 310, 319, 333, 351, 352, 358, 359, 378, 401, 451, 461, 476, 477, 496, 512, 520, 531, 539, 555, 556, 564, 582, 599, 610, 638, 641, 678, 695, 696, 698, 699, 700, 708, 718, 727, 728, 729, 743, 744, 746, 760, 770, 771, 776, 795, 800, 833, 834, 840, 841, 851, 852, 855, 858, 861], "703": [1, 6, 194, 229], "second": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 242, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 276, 277, 278, 282, 283, 285, 294, 295, 296, 320, 321, 339, 341, 357, 408, 414, 415, 420, 432, 434, 437, 442, 443, 445, 449, 450, 474, 475, 476, 477, 496, 499, 511, 516, 517, 526, 529, 555, 556, 558, 559, 560, 561, 564, 566, 568, 569, 572, 575, 576, 577, 578, 579, 584, 592, 598, 602, 611, 614, 646, 662, 682, 683, 684, 686, 687, 688, 690, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 724, 727, 743, 751, 767, 774, 775, 776, 779, 782, 786, 787, 788, 790, 795, 796, 797, 798, 801, 803, 806, 821, 831, 835, 841, 851, 852, 855, 858, 861, 876], "estim": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 187, 188, 189, 190, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 219, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 242, 243, 254, 257, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 282, 283, 287, 288, 289, 290, 292, 293, 295, 296, 310, 318, 326, 339, 341, 345, 352, 356, 357, 358, 363, 364, 365, 367, 368, 369, 371, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 429, 442, 443, 445, 447, 448, 449, 451, 452, 455, 471, 472, 473, 474, 476, 477, 481, 509, 511, 512, 518, 520, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 537, 538, 539, 540, 543, 556, 557, 561, 565, 566, 572, 576, 579, 582, 584, 596, 598, 599, 614, 616, 619, 624, 625, 626, 636, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 661, 663, 677, 681, 682, 688, 689, 691, 692, 698, 700, 701, 702, 703, 704, 705, 706, 715, 723, 724, 726, 727, 743, 759, 760, 766, 767, 768, 775, 783, 790, 797, 800, 801, 802, 805, 806, 807, 831, 836, 842, 844, 852, 855, 861, 864, 866, 874, 876], "usag": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 254, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 417, 421, 476, 477, 584, 683, 684, 686, 687, 696, 698, 699, 700, 702, 705, 721, 723, 724, 725, 726, 727, 728, 831, 854, 855, 858, 861, 876], "493": 1, "mb": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 262, 263, 272, 476, 477, 773, 796, 841], "python": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 155, 156, 157, 158, 161, 164, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 193, 194, 195, 197, 199, 201, 202, 205, 206, 207, 209, 210, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 242, 253, 260, 261, 262, 263, 264, 265, 267, 269, 270, 272, 273, 275, 276, 277, 278, 295, 296, 312, 315, 321, 326, 327, 330, 336, 351, 363, 371, 374, 375, 376, 377, 378, 380, 381, 383, 384, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 427, 433, 437, 441, 449, 456, 457, 458, 460, 467, 476, 477, 491, 500, 514, 522, 523, 537, 550, 556, 572, 575, 604, 633, 635, 640, 642, 643, 695, 696, 698, 699, 723, 724, 726, 727, 738, 739, 767, 773, 776, 790, 796, 804, 824, 826, 831, 834, 842, 846, 851, 852, 856, 857, 858, 859, 862, 863, 874, 876], "brainstorm_data": [1, 6], "py": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 833, 835, 855, 876], "jupyt": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 808, 855, 857, 859, 876], "notebook": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 808, 814, 839, 855, 859, 864, 876], "ipynb": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239], "galleri": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 835], "gener": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 92, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 193, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 214, 215, 216, 219, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 253, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 289, 290, 293, 306, 319, 324, 325, 326, 345, 351, 352, 378, 408, 410, 411, 414, 415, 418, 419, 425, 432, 437, 442, 444, 446, 447, 449, 466, 472, 473, 476, 477, 481, 482, 493, 496, 509, 512, 519, 522, 523, 525, 527, 530, 534, 537, 553, 554, 555, 556, 557, 559, 568, 572, 573, 576, 578, 579, 582, 584, 601, 605, 611, 614, 616, 618, 619, 621, 622, 644, 645, 646, 648, 649, 650, 659, 660, 661, 662, 663, 676, 680, 681, 683, 684, 685, 686, 687, 692, 696, 698, 699, 700, 708, 709, 729, 740, 743, 744, 746, 756, 759, 763, 767, 774, 782, 786, 787, 797, 798, 801, 802, 811, 826, 831, 841, 842, 843, 847, 850, 851, 852, 853, 854, 856, 857, 859, 860, 861, 863, 864, 876], "sphinx": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 739, 835], "thi": [2, 4, 5, 7, 9, 10, 13, 14, 16, 18, 19, 21, 22, 26, 31, 32, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 50, 54, 55, 57, 58, 59, 60, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 85, 86, 88, 91, 92, 93, 94, 95, 97, 99, 101, 102, 107, 110, 111, 112, 113, 114, 115, 116, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 286, 287, 289, 290, 293, 295, 296, 300, 301, 303, 304, 305, 306, 307, 310, 311, 314, 315, 316, 317, 318, 319, 322, 323, 324, 328, 329, 330, 335, 339, 340, 343, 345, 349, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 365, 367, 368, 369, 370, 373, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 457, 458, 460, 461, 464, 466, 467, 469, 470, 471, 473, 474, 475, 476, 477, 478, 482, 483, 484, 485, 487, 491, 492, 493, 495, 498, 499, 502, 504, 506, 507, 509, 511, 516, 517, 519, 522, 523, 524, 525, 526, 527, 529, 530, 532, 533, 534, 540, 542, 543, 547, 551, 553, 555, 556, 557, 558, 559, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 581, 582, 583, 584, 585, 588, 591, 592, 598, 601, 602, 604, 607, 608, 609, 611, 613, 614, 618, 619, 624, 627, 633, 635, 638, 639, 641, 643, 644, 645, 648, 649, 650, 657, 659, 660, 661, 662, 663, 666, 667, 670, 673, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 695, 696, 697, 698, 699, 700, 703, 712, 714, 722, 724, 726, 727, 731, 733, 737, 738, 740, 741, 743, 745, 746, 748, 752, 753, 756, 758, 759, 760, 761, 764, 765, 769, 773, 774, 775, 776, 777, 779, 780, 781, 782, 783, 784, 786, 787, 788, 789, 790, 794, 795, 796, 797, 798, 799, 800, 801, 803, 804, 805, 806, 808, 809, 812, 813, 816, 824, 826, 831, 833, 834, 835, 838, 839, 840, 841, 842, 843, 851, 852, 853, 855, 857, 858, 859, 861, 862, 864, 866, 876], "look": [2, 4, 7, 8, 19, 21, 27, 32, 33, 42, 55, 58, 60, 67, 69, 70, 81, 82, 91, 106, 109, 110, 111, 118, 119, 120, 125, 131, 133, 134, 140, 143, 144, 149, 150, 155, 157, 159, 160, 161, 165, 167, 171, 174, 176, 177, 178, 179, 181, 182, 187, 188, 190, 197, 200, 201, 202, 204, 205, 206, 208, 209, 210, 213, 221, 224, 229, 238, 239, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 298, 301, 307, 375, 376, 377, 378, 380, 381, 383, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 449, 456, 458, 476, 477, 505, 556, 558, 602, 696, 743, 759, 762, 789, 799, 801, 806, 807, 816, 833, 834, 835, 856, 857, 858, 859, 861, 876], "high": [2, 4, 7, 10, 12, 22, 38, 40, 59, 72, 73, 80, 81, 82, 86, 92, 97, 117, 133, 140, 141, 142, 150, 155, 156, 159, 166, 187, 189, 190, 194, 197, 201, 203, 204, 205, 208, 209, 210, 226, 227, 228, 229, 233, 239, 242, 262, 263, 264, 265, 275, 280, 352, 353, 354, 355, 357, 390, 410, 419, 443, 444, 446, 467, 476, 477, 500, 523, 556, 561, 564, 568, 569, 572, 573, 576, 577, 579, 580, 584, 588, 649, 682, 743, 831, 842, 860, 876], "frequenc": [2, 5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 33, 34, 36, 42, 56, 67, 70, 71, 72, 75, 79, 80, 81, 82, 86, 88, 91, 92, 97, 101, 102, 104, 105, 106, 107, 108, 110, 113, 119, 121, 124, 125, 131, 136, 139, 140, 141, 142, 143, 145, 148, 150, 155, 166, 167, 168, 171, 179, 182, 190, 193, 194, 198, 199, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 219, 221, 224, 228, 232, 234, 241, 242, 254, 259, 260, 262, 263, 264, 265, 266, 267, 269, 270, 272, 273, 276, 277, 278, 281, 285, 286, 287, 288, 289, 290, 295, 310, 326, 339, 340, 347, 352, 361, 371, 390, 408, 410, 413, 414, 416, 419, 420, 421, 429, 432, 434, 436, 437, 443, 444, 446, 447, 448, 449, 472, 474, 476, 477, 486, 491, 522, 523, 527, 529, 530, 534, 539, 540, 553, 556, 561, 564, 568, 569, 572, 573, 575, 576, 577, 579, 580, 584, 588, 602, 605, 614, 616, 663, 675, 682, 683, 684, 686, 687, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 714, 715, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 738, 743, 747, 766, 769, 770, 771, 775, 776, 784, 788, 791, 797, 802, 803, 805, 831, 855, 861, 862, 866, 876], "respons": [2, 4, 8, 10, 16, 17, 19, 20, 27, 35, 46, 49, 51, 59, 65, 76, 83, 86, 92, 94, 95, 105, 111, 115, 118, 119, 120, 126, 128, 134, 141, 142, 144, 148, 149, 161, 167, 179, 182, 184, 190, 194, 197, 200, 205, 228, 229, 232, 234, 239, 242, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 352, 371, 390, 414, 420, 422, 432, 434, 437, 444, 447, 476, 477, 553, 557, 599, 611, 696, 698, 699, 700, 709, 774, 781, 783, 784, 791, 831, 851, 852, 857, 858, 861, 876], "jussi": [2, 61, 242, 390, 584, 876], "nurminen": [2, 61, 242, 390, 584, 876], "jnu": [2, 61], "iki": [2, 61], "fi": [2, 10, 61, 84, 190, 475], "o": [2, 19, 44, 61, 70, 74, 81, 113, 123, 139, 158, 160, 168, 170, 171, 184, 193, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 210, 213, 214, 215, 216, 242, 254, 259, 262, 263, 264, 265, 267, 352, 370, 378, 386, 408, 415, 456, 476, 477, 555, 556, 565, 640, 696, 698, 700, 760, 775, 782, 798, 803, 805, 835, 847, 852, 855, 866, 876], "hf_sef": [2, 852, 866, 876], "fname_evok": [2, 11, 30, 38, 39, 41, 44, 57, 58, 60, 122, 125, 178, 180, 220], "path": [2, 19, 33, 43, 44, 45, 61, 74, 99, 113, 117, 118, 121, 123, 133, 134, 135, 139, 143, 154, 155, 156, 157, 158, 165, 169, 170, 171, 174, 180, 181, 184, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 213, 214, 215, 216, 220, 225, 254, 260, 262, 263, 264, 265, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 301, 302, 305, 306, 307, 310, 319, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 358, 363, 364, 365, 375, 376, 377, 378, 380, 381, 383, 384, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 427, 429, 442, 456, 457, 458, 460, 464, 466, 467, 468, 469, 470, 476, 477, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 511, 513, 515, 519, 542, 543, 556, 566, 567, 575, 581, 584, 596, 597, 601, 607, 608, 609, 610, 612, 613, 614, 615, 618, 619, 621, 624, 625, 628, 629, 630, 644, 645, 659, 662, 664, 665, 673, 691, 692, 694, 695, 698, 700, 717, 735, 742, 743, 759, 761, 771, 773, 783, 790, 796, 801, 806, 807, 816, 825, 826, 830, 831, 833, 835, 838, 840, 841, 846, 876], "join": [2, 10, 19, 44, 61, 74, 133, 134, 139, 158, 169, 170, 183, 184, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 213, 214, 215, 216, 262, 263, 264, 265, 476, 477], "subject_b": 2, "hf_sef_15min": 2, "av": [2, 11, 30, 31, 35, 38, 39, 40, 41, 44, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 64, 67, 77, 84, 85, 88, 90, 93, 114, 117, 118, 122, 125, 148, 149, 171, 175, 177, 178, 180, 220, 254, 262, 263, 264, 265, 272, 476, 477, 546, 614, 623, 699, 822, 852], "fif": [2, 5, 7, 10, 11, 13, 14, 15, 16, 18, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 62, 64, 66, 67, 68, 70, 71, 72, 73, 75, 77, 78, 79, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 111, 113, 114, 115, 116, 117, 118, 119, 121, 122, 125, 127, 129, 130, 131, 133, 134, 135, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 171, 175, 176, 177, 178, 179, 180, 181, 182, 188, 189, 190, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 213, 214, 215, 216, 220, 221, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 249, 256, 259, 260, 261, 262, 263, 264, 265, 267, 272, 275, 302, 310, 332, 363, 364, 365, 429, 438, 439, 440, 441, 458, 468, 476, 477, 496, 500, 515, 519, 537, 541, 556, 566, 575, 581, 584, 596, 602, 604, 605, 606, 607, 611, 614, 616, 622, 626, 629, 633, 636, 661, 664, 691, 731, 743, 759, 817, 820, 821, 822, 823, 827, 828, 830, 835, 842, 847, 851, 852, 858, 861, 864, 876], "interest": [2, 4, 9, 16, 21, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 63, 77, 80, 84, 85, 88, 93, 94, 95, 98, 99, 102, 105, 110, 111, 112, 114, 117, 118, 125, 126, 134, 136, 139, 141, 142, 143, 148, 149, 154, 161, 169, 171, 175, 177, 178, 179, 180, 189, 193, 194, 197, 200, 201, 204, 209, 210, 214, 220, 221, 224, 225, 226, 227, 228, 238, 239, 257, 262, 263, 264, 265, 267, 287, 289, 322, 413, 416, 432, 434, 452, 460, 476, 477, 509, 529, 530, 540, 555, 556, 599, 608, 610, 645, 696, 698, 700, 701, 702, 703, 704, 705, 706, 714, 715, 723, 724, 726, 727, 743, 797, 803, 831, 835, 851, 855, 858, 876], "t": [2, 4, 5, 9, 15, 19, 21, 27, 28, 29, 30, 31, 32, 35, 38, 39, 40, 41, 42, 44, 45, 48, 50, 51, 53, 54, 55, 57, 58, 59, 60, 63, 65, 69, 77, 79, 81, 82, 84, 85, 91, 92, 93, 94, 96, 99, 100, 106, 112, 113, 114, 115, 117, 118, 125, 133, 139, 140, 142, 143, 144, 145, 148, 150, 155, 156, 157, 158, 159, 161, 164, 165, 167, 169, 170, 171, 175, 176, 177, 178, 179, 180, 182, 183, 187, 190, 193, 194, 198, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 213, 215, 220, 221, 224, 225, 226, 227, 228, 229, 234, 235, 236, 237, 238, 239, 242, 254, 257, 258, 260, 261, 262, 263, 264, 265, 267, 269, 270, 272, 273, 275, 276, 277, 278, 285, 295, 296, 339, 342, 348, 357, 358, 370, 371, 375, 376, 377, 378, 380, 381, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 414, 429, 431, 443, 449, 452, 471, 474, 476, 477, 487, 488, 522, 523, 531, 537, 543, 545, 547, 553, 556, 559, 567, 568, 572, 573, 575, 577, 582, 584, 585, 593, 601, 604, 608, 610, 611, 614, 615, 618, 621, 624, 626, 643, 645, 661, 662, 668, 674, 676, 680, 681, 682, 683, 685, 686, 688, 689, 690, 696, 697, 698, 699, 700, 712, 716, 719, 722, 723, 724, 726, 727, 733, 743, 778, 788, 831, 834, 835, 836, 841, 843, 851, 852, 857, 858, 859, 861, 876], "250": [2, 4, 21, 41, 46, 56, 79, 110, 115, 121, 135, 136, 140, 142, 150, 155, 165, 168, 180, 197, 199, 200, 201, 205, 207, 228, 229, 237, 242, 649, 703, 840, 876], "ctf": [2, 27, 30, 31, 35, 36, 38, 39, 40, 41, 44, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 77, 84, 85, 99, 114, 117, 118, 125, 139, 142, 148, 164, 169, 171, 175, 177, 178, 180, 185, 186, 191, 192, 224, 225, 256, 259, 260, 262, 263, 264, 265, 266, 267, 273, 300, 307, 336, 343, 351, 353, 357, 359, 361, 362, 449, 451, 476, 477, 489, 513, 514, 519, 520, 522, 523, 532, 533, 534, 535, 538, 553, 554, 569, 584, 605, 614, 616, 622, 629, 644, 696, 698, 699, 700, 743, 759, 852, 858, 861, 876], "matric": [2, 10, 30, 31, 34, 35, 38, 39, 40, 41, 44, 47, 48, 50, 51, 54, 55, 57, 58, 59, 60, 77, 84, 85, 99, 101, 114, 117, 118, 125, 139, 142, 145, 148, 155, 162, 164, 165, 171, 175, 177, 178, 180, 187, 194, 224, 225, 242, 288, 295, 352, 408, 416, 476, 477, 567, 575, 584, 596, 647, 648, 649, 661, 682, 697, 707, 734, 736, 769, 851, 858, 861, 873, 876], "nave": [2, 5, 28, 29, 30, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 51, 54, 55, 57, 58, 59, 60, 67, 77, 84, 85, 88, 90, 92, 102, 105, 106, 107, 108, 112, 114, 117, 118, 125, 148, 165, 171, 175, 176, 177, 178, 180, 181, 190, 194, 219, 220, 221, 232, 234, 255, 261, 264, 265, 267, 351, 465, 524, 525, 526, 527, 529, 530, 536, 539, 540, 660, 696, 861, 876], "2790": 2, "aspect": [2, 16, 22, 30, 31, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 69, 77, 84, 85, 105, 114, 117, 118, 125, 141, 148, 171, 175, 177, 178, 180, 201, 204, 226, 227, 228, 229, 746, 861, 876], "specifi": [2, 4, 5, 9, 19, 31, 38, 41, 43, 47, 63, 86, 92, 93, 99, 101, 107, 112, 118, 125, 126, 134, 139, 140, 141, 148, 149, 150, 154, 157, 165, 166, 167, 168, 169, 170, 171, 177, 183, 184, 187, 194, 197, 198, 200, 201, 202, 203, 205, 206, 208, 209, 210, 213, 214, 215, 216, 225, 226, 229, 232, 238, 254, 256, 257, 259, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 286, 288, 295, 296, 300, 307, 312, 322, 328, 352, 353, 354, 355, 356, 357, 358, 367, 368, 369, 370, 375, 376, 377, 378, 380, 381, 382, 385, 388, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 415, 419, 420, 424, 425, 429, 432, 434, 443, 444, 446, 447, 449, 451, 452, 460, 464, 467, 471, 473, 474, 475, 476, 477, 478, 486, 491, 492, 500, 504, 515, 518, 522, 524, 532, 533, 534, 545, 555, 556, 559, 561, 566, 567, 569, 570, 574, 575, 584, 599, 602, 606, 608, 610, 615, 618, 624, 633, 636, 638, 641, 645, 646, 661, 673, 676, 682, 683, 684, 686, 687, 694, 696, 698, 699, 700, 731, 743, 746, 758, 759, 760, 762, 767, 774, 775, 777, 781, 782, 783, 786, 788, 789, 790, 792, 795, 798, 801, 802, 803, 805, 806, 807, 808, 812, 826, 831, 835, 853, 855, 858, 861, 876], "pleas": [2, 4, 5, 73, 75, 81, 99, 107, 121, 133, 134, 135, 136, 145, 165, 171, 183, 184, 188, 194, 197, 202, 203, 209, 210, 225, 234, 254, 262, 263, 287, 289, 330, 369, 386, 435, 447, 449, 476, 477, 487, 556, 575, 585, 616, 773, 790, 796, 823, 831, 833, 835, 839, 841, 847, 850, 851, 852, 854, 856, 858, 859, 876], "consid": [2, 4, 5, 80, 91, 99, 102, 106, 107, 110, 136, 140, 143, 151, 155, 158, 160, 161, 165, 183, 184, 194, 197, 198, 199, 200, 202, 203, 208, 209, 210, 224, 225, 226, 229, 232, 234, 239, 257, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 276, 277, 278, 285, 295, 296, 307, 317, 335, 352, 356, 357, 368, 369, 408, 415, 416, 429, 438, 439, 440, 441, 443, 449, 456, 473, 474, 476, 477, 484, 491, 493, 498, 551, 556, 558, 559, 564, 566, 567, 570, 572, 574, 575, 578, 582, 584, 589, 608, 610, 614, 657, 666, 667, 668, 670, 671, 683, 684, 686, 687, 696, 699, 701, 702, 703, 704, 705, 706, 707, 743, 756, 765, 773, 776, 777, 789, 796, 831, 833, 854, 857, 876], "self": [2, 4, 5, 99, 107, 171, 183, 184, 194, 197, 202, 209, 210, 225, 234, 256, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 273, 276, 277, 278, 286, 300, 363, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 475, 476, 477, 522, 555, 556, 557, 696, 698, 699, 700, 731, 744, 835, 853, 855, 876], "highpass": [2, 12, 70, 72, 75, 79, 80, 81, 88, 91, 97, 125, 140, 145, 150, 165, 166, 167, 168, 197, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 219, 221, 239, 254, 262, 263, 264, 265, 267, 443, 476, 477, 698, 700, 796, 797, 861, 876], "version": [2, 19, 34, 69, 82, 112, 144, 145, 149, 154, 160, 165, 170, 187, 188, 189, 193, 194, 199, 200, 216, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 282, 283, 286, 291, 295, 296, 298, 302, 303, 304, 305, 306, 307, 310, 311, 314, 315, 316, 318, 319, 320, 321, 326, 328, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 363, 367, 368, 369, 383, 384, 386, 387, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 419, 420, 424, 427, 429, 432, 433, 435, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 455, 456, 458, 461, 465, 467, 470, 471, 473, 474, 475, 476, 477, 484, 485, 487, 488, 489, 491, 492, 493, 496, 499, 501, 504, 506, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 523, 524, 525, 526, 529, 530, 531, 532, 533, 534, 536, 538, 539, 540, 541, 542, 543, 544, 547, 548, 549, 555, 556, 557, 558, 559, 564, 565, 566, 567, 568, 569, 570, 572, 573, 575, 576, 583, 584, 585, 592, 594, 598, 599, 604, 606, 608, 610, 611, 614, 615, 619, 627, 629, 630, 632, 633, 635, 638, 641, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 677, 678, 679, 688, 689, 690, 691, 695, 696, 697, 698, 699, 700, 708, 710, 713, 714, 715, 718, 723, 724, 726, 727, 728, 729, 732, 733, 740, 743, 744, 746, 752, 753, 759, 760, 761, 762, 764, 766, 767, 768, 770, 771, 772, 773, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 805, 806, 807, 808, 809, 812, 817, 820, 822, 826, 827, 829, 834, 835, 838, 839, 840, 841, 850, 852, 855, 857, 858, 861, 864], "evoked_hp": 2, "l_freq": [2, 21, 81, 112, 143, 145, 150, 190, 200, 201, 203, 205, 239, 254, 262, 263, 264, 265, 410, 419, 444, 446, 476, 477, 556, 564, 568, 569, 572, 573, 576, 577, 579, 580, 588, 862], "300": [2, 4, 5, 21, 34, 46, 51, 73, 79, 80, 90, 114, 134, 139, 148, 150, 168, 182, 190, 201, 203, 207, 210, 224, 229, 237, 696, 861, 876], "h_freq": [2, 21, 81, 112, 143, 145, 150, 190, 200, 201, 203, 205, 208, 239, 254, 262, 263, 264, 265, 410, 419, 444, 446, 476, 477, 556, 564, 568, 569, 572, 573, 575, 576, 577, 579, 580, 588, 862], "3e": [2, 8, 9, 32, 35, 45, 48, 49, 50, 51, 54, 55, 58, 92, 107, 151, 175, 177, 178, 179, 180, 194, 568, 569, 760], "edg": [2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 32, 34, 42, 59, 69, 71, 72, 75, 80, 81, 82, 86, 97, 108, 111, 112, 113, 118, 119, 131, 135, 140, 141, 143, 145, 150, 160, 171, 190, 194, 197, 199, 200, 201, 202, 203, 205, 208, 209, 210, 215, 216, 220, 224, 229, 239, 259, 262, 263, 264, 265, 271, 272, 280, 316, 408, 410, 414, 415, 437, 444, 446, 448, 474, 476, 477, 555, 556, 558, 559, 570, 575, 584, 588, 696, 698, 700, 712, 722, 726, 747, 756, 760, 761, 775, 782, 786, 795, 796, 798, 803, 805, 855, 876], "75": [2, 4, 5, 8, 12, 13, 16, 19, 21, 24, 34, 35, 41, 44, 69, 71, 75, 78, 79, 81, 101, 110, 112, 113, 125, 133, 134, 142, 143, 145, 157, 168, 170, 171, 179, 183, 190, 193, 197, 199, 202, 203, 205, 206, 207, 215, 224, 225, 228, 229, 476, 477, 556, 799, 852, 858, 876], "cutoff": [2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 34, 42, 71, 72, 75, 80, 81, 82, 86, 97, 111, 112, 113, 119, 131, 135, 140, 143, 145, 150, 171, 190, 194, 197, 199, 201, 202, 203, 205, 208, 209, 210, 229, 262, 263, 264, 265, 410, 419, 444, 446, 476, 477, 556, 564, 575, 588], "262": [2, 12, 21, 150, 168, 209, 229, 242], "133": [2, 35, 61, 133, 155, 168, 194, 206, 207, 212, 228], "044": [2, 139, 141, 148, 168, 221], "306": [2, 22, 26, 31, 32, 33, 34, 35, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 61, 67, 75, 81, 82, 88, 90, 91, 92, 93, 107, 110, 129, 145, 157, 168, 171, 176, 177, 178, 179, 182, 194, 207, 208, 220, 221, 224, 229, 239, 556, 852], "condit": [2, 10, 11, 16, 17, 20, 27, 30, 31, 35, 38, 39, 40, 41, 44, 45, 51, 58, 59, 60, 61, 77, 84, 85, 86, 92, 94, 97, 108, 110, 117, 118, 120, 122, 128, 139, 140, 141, 142, 143, 144, 148, 149, 152, 164, 165, 167, 175, 176, 177, 178, 179, 180, 183, 184, 190, 194, 200, 209, 214, 219, 224, 225, 226, 229, 230, 231, 232, 233, 234, 237, 242, 255, 262, 263, 264, 265, 267, 351, 352, 411, 418, 424, 430, 476, 521, 546, 553, 557, 567, 575, 584, 599, 611, 613, 614, 615, 677, 682, 683, 684, 686, 696, 698, 699, 700, 718, 726, 767, 781, 831, 835, 851, 852, 858, 862, 876], "kind": [2, 5, 7, 11, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 64, 67, 81, 88, 90, 91, 92, 93, 102, 105, 106, 107, 108, 122, 125, 129, 134, 135, 141, 148, 150, 155, 159, 165, 168, 169, 171, 174, 176, 177, 178, 179, 180, 183, 189, 190, 194, 201, 204, 220, 221, 232, 233, 234, 261, 262, 263, 264, 265, 267, 269, 270, 271, 273, 274, 275, 276, 277, 278, 295, 296, 303, 304, 310, 311, 326, 336, 372, 387, 427, 428, 443, 470, 476, 477, 508, 544, 557, 614, 691, 696, 698, 699, 700, 712, 722, 743, 762, 764, 793, 799, 801, 806, 807, 835, 842, 855, 858, 861, 876], "timepoint": [2, 19, 59, 99, 118, 140, 148, 150, 178, 180, 183, 213, 257, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 285, 346, 518, 572, 614, 615], "901": [2, 15, 20, 229], "number": [2, 4, 5, 9, 10, 11, 31, 34, 35, 39, 40, 42, 44, 46, 49, 52, 59, 71, 73, 75, 80, 81, 86, 88, 90, 91, 98, 101, 105, 107, 111, 112, 119, 125, 133, 134, 139, 141, 142, 143, 144, 145, 148, 149, 150, 159, 160, 161, 164, 165, 167, 169, 171, 174, 176, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 194, 197, 198, 199, 200, 202, 203, 204, 208, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 242, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 295, 296, 297, 298, 322, 325, 333, 340, 346, 352, 353, 354, 355, 356, 357, 358, 360, 363, 367, 368, 369, 378, 407, 408, 410, 411, 413, 414, 415, 416, 418, 419, 420, 421, 424, 425, 429, 431, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 464, 465, 466, 471, 473, 474, 475, 476, 477, 478, 487, 500, 507, 509, 515, 518, 519, 523, 524, 525, 526, 527, 529, 530, 532, 533, 534, 536, 538, 539, 540, 555, 556, 557, 561, 565, 566, 567, 568, 569, 570, 571, 575, 576, 577, 579, 581, 582, 583, 589, 590, 601, 611, 615, 636, 644, 645, 646, 647, 648, 649, 650, 654, 655, 656, 659, 660, 661, 662, 670, 671, 672, 673, 675, 676, 677, 679, 681, 683, 684, 685, 686, 687, 688, 691, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 710, 712, 714, 715, 722, 723, 724, 725, 726, 727, 728, 733, 741, 742, 743, 751, 760, 766, 767, 769, 771, 772, 773, 774, 775, 776, 777, 778, 779, 782, 783, 784, 786, 787, 789, 790, 795, 796, 797, 798, 801, 802, 803, 804, 805, 806, 809, 816, 831, 835, 850, 852, 855, 859, 861, 876], "rang": [2, 4, 5, 9, 10, 11, 13, 14, 15, 16, 18, 19, 28, 29, 32, 33, 34, 42, 45, 46, 49, 59, 61, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 80, 81, 82, 86, 90, 91, 92, 94, 95, 97, 98, 101, 102, 105, 107, 108, 109, 110, 111, 112, 113, 115, 116, 118, 119, 121, 125, 127, 130, 131, 133, 134, 135, 136, 139, 140, 141, 142, 143, 145, 148, 150, 151, 155, 157, 158, 159, 161, 165, 166, 167, 168, 170, 171, 175, 176, 178, 179, 180, 181, 182, 183, 184, 189, 190, 194, 197, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 234, 237, 238, 239, 254, 255, 259, 262, 263, 264, 265, 267, 271, 272, 295, 319, 371, 378, 392, 400, 401, 408, 411, 415, 417, 418, 441, 467, 473, 476, 477, 484, 555, 556, 561, 570, 575, 696, 697, 698, 699, 700, 712, 722, 760, 773, 774, 775, 779, 782, 786, 795, 796, 797, 798, 803, 805, 831, 851, 857, 858, 861, 876], "05": [2, 4, 5, 8, 9, 10, 19, 20, 34, 35, 42, 46, 49, 51, 56, 59, 60, 70, 77, 82, 85, 90, 93, 94, 95, 98, 100, 101, 106, 107, 110, 114, 117, 118, 122, 128, 140, 143, 149, 150, 169, 176, 178, 179, 180, 182, 184, 190, 193, 197, 198, 201, 205, 207, 209, 212, 213, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 242, 295, 296, 319, 328, 447, 451, 476, 477, 538, 565, 656, 674, 679, 680, 683, 684, 686, 687, 688, 696, 710, 712, 722, 726, 747, 802], "25": [2, 4, 5, 11, 13, 16, 18, 19, 28, 34, 35, 38, 41, 43, 45, 47, 49, 50, 53, 64, 67, 69, 71, 73, 79, 80, 81, 83, 101, 106, 107, 110, 111, 112, 114, 122, 124, 128, 133, 134, 135, 136, 142, 144, 145, 150, 158, 161, 163, 168, 169, 170, 171, 174, 177, 179, 180, 182, 190, 193, 194, 197, 199, 200, 202, 203, 204, 205, 207, 208, 215, 221, 224, 225, 226, 228, 229, 232, 234, 237, 238, 242, 256, 262, 263, 264, 265, 269, 270, 273, 274, 275, 276, 277, 278, 358, 400, 408, 410, 419, 444, 446, 476, 477, 588, 656, 685, 695, 743, 747, 767, 779, 796, 799, 801, 806, 834, 851, 858], "off": [2, 4, 10, 72, 75, 91, 112, 114, 125, 133, 134, 136, 140, 142, 148, 150, 151, 155, 158, 159, 165, 166, 167, 168, 190, 193, 197, 198, 199, 201, 202, 203, 204, 205, 206, 208, 213, 214, 215, 216, 219, 220, 221, 242, 254, 257, 262, 263, 264, 265, 275, 295, 296, 410, 419, 444, 446, 476, 477, 555, 568, 569, 570, 577, 580, 584, 588, 599, 724, 727, 835, 851, 852, 858, 861, 876], "compar": [2, 4, 10, 19, 21, 22, 26, 27, 28, 36, 38, 39, 56, 72, 76, 81, 83, 87, 89, 101, 111, 112, 120, 128, 133, 140, 142, 143, 144, 145, 157, 159, 161, 165, 166, 171, 175, 179, 182, 183, 190, 194, 200, 202, 204, 205, 206, 226, 227, 228, 232, 233, 239, 257, 259, 262, 263, 264, 265, 266, 267, 268, 273, 275, 356, 357, 362, 384, 449, 476, 477, 481, 509, 512, 516, 522, 523, 534, 535, 538, 554, 556, 584, 605, 607, 611, 614, 616, 619, 646, 650, 651, 652, 653, 654, 655, 656, 658, 661, 667, 743, 751, 773, 781, 790, 796, 835, 843, 855, 864, 876], "unfilt": [2, 165, 171, 200, 203], "singl": [2, 3, 6, 16, 18, 27, 33, 34, 36, 45, 56, 69, 73, 81, 82, 85, 92, 99, 101, 103, 104, 111, 115, 118, 120, 128, 139, 140, 141, 143, 144, 148, 149, 150, 157, 164, 165, 167, 168, 169, 171, 175, 177, 179, 182, 183, 187, 188, 189, 194, 197, 198, 200, 203, 204, 205, 206, 208, 209, 210, 213, 214, 219, 221, 224, 229, 230, 231, 234, 238, 239, 242, 254, 256, 257, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 289, 290, 293, 295, 296, 302, 310, 312, 316, 317, 322, 351, 352, 357, 383, 408, 409, 415, 421, 424, 430, 434, 437, 449, 467, 476, 477, 492, 495, 497, 510, 513, 516, 518, 520, 522, 523, 525, 527, 529, 530, 537, 553, 555, 556, 561, 564, 570, 599, 607, 611, 618, 624, 631, 641, 645, 662, 676, 677, 679, 680, 681, 683, 684, 691, 696, 697, 698, 699, 700, 712, 722, 723, 724, 726, 727, 733, 743, 759, 760, 761, 767, 771, 774, 775, 776, 777, 779, 782, 783, 786, 793, 794, 795, 797, 798, 799, 803, 805, 819, 835, 844, 851, 852, 855, 858, 861, 862, 864, 876], "meg0443": 2, "ch_name": [2, 4, 7, 15, 18, 19, 31, 63, 69, 71, 73, 84, 98, 110, 112, 113, 118, 123, 134, 135, 139, 145, 148, 150, 158, 165, 167, 168, 171, 183, 189, 190, 198, 201, 203, 205, 208, 209, 210, 213, 219, 221, 226, 227, 228, 229, 238, 254, 256, 257, 259, 261, 262, 263, 264, 265, 266, 267, 295, 296, 310, 312, 316, 319, 322, 327, 335, 367, 368, 371, 475, 476, 477, 547, 550, 556, 568, 569, 572, 573, 575, 576, 577, 595, 638, 650, 696, 697, 698, 699, 700, 701, 702, 703, 764, 773, 774, 796, 861, 876], "index": [2, 4, 19, 21, 31, 47, 61, 69, 71, 74, 88, 131, 135, 142, 148, 149, 150, 159, 165, 168, 169, 171, 174, 179, 182, 183, 187, 190, 193, 197, 199, 202, 203, 204, 205, 207, 208, 209, 214, 215, 220, 225, 226, 237, 238, 242, 255, 256, 260, 261, 262, 263, 264, 265, 269, 270, 272, 273, 275, 276, 277, 278, 282, 283, 294, 295, 296, 309, 319, 347, 361, 468, 475, 476, 477, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 516, 526, 546, 556, 572, 573, 576, 577, 579, 580, 588, 614, 615, 656, 696, 697, 698, 699, 700, 743, 756, 761, 767, 771, 776, 786, 788, 790, 816, 831, 852, 858, 876], "edi": 2, "regular": [2, 5, 28, 29, 30, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 54, 55, 57, 58, 59, 60, 77, 81, 88, 92, 97, 102, 105, 106, 107, 108, 119, 165, 168, 177, 178, 179, 180, 181, 190, 194, 198, 205, 208, 219, 220, 221, 224, 232, 234, 264, 265, 268, 274, 295, 296, 352, 356, 357, 367, 368, 408, 415, 416, 420, 429, 437, 451, 452, 471, 473, 474, 484, 487, 491, 498, 523, 524, 525, 526, 527, 529, 530, 531, 534, 536, 539, 540, 550, 557, 565, 567, 575, 584, 619, 673, 676, 683, 684, 686, 687, 690, 782, 783, 800, 851, 857, 866, 876], "viz": [2, 4, 5, 7, 12, 19, 24, 27, 31, 34, 35, 38, 39, 40, 41, 42, 46, 47, 51, 52, 57, 59, 69, 78, 79, 84, 86, 90, 91, 99, 107, 112, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 128, 130, 131, 133, 134, 135, 136, 140, 141, 142, 143, 149, 150, 154, 155, 156, 157, 158, 159, 165, 169, 176, 177, 179, 180, 181, 182, 183, 184, 189, 193, 198, 200, 201, 203, 204, 205, 206, 207, 208, 209, 214, 224, 229, 239, 260, 262, 263, 264, 265, 267, 269, 270, 272, 273, 276, 277, 278, 307, 316, 327, 476, 477, 556, 606, 614, 624, 629, 696, 833, 835, 851, 853, 855, 858, 862, 866, 875, 876], "plot_compare_evok": [2, 4, 99, 125, 140, 141, 142, 143, 149, 150, 165, 209, 229, 262, 263, 774, 862, 866, 876], "481": [2, 6, 13, 224, 229], "hf_sef_data": [2, 6], "some": [3, 4, 5, 10, 16, 21, 27, 40, 54, 55, 61, 65, 69, 72, 74, 93, 96, 101, 103, 107, 111, 112, 118, 125, 133, 134, 135, 136, 139, 140, 141, 143, 144, 148, 149, 150, 151, 155, 157, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 179, 182, 183, 188, 189, 190, 194, 195, 197, 198, 199, 201, 202, 203, 204, 205, 206, 208, 210, 211, 213, 214, 215, 216, 219, 220, 221, 224, 228, 229, 230, 237, 239, 254, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 275, 276, 277, 278, 306, 310, 314, 318, 352, 370, 383, 422, 431, 442, 461, 467, 476, 477, 484, 491, 551, 555, 556, 558, 566, 574, 584, 592, 598, 608, 610, 637, 641, 644, 678, 684, 696, 698, 699, 700, 759, 761, 778, 780, 796, 831, 833, 834, 835, 838, 839, 842, 847, 850, 851, 852, 853, 855, 856, 857, 858, 859, 862, 864, 876], "demo": [3, 27, 831, 876], "common": [3, 17, 20, 27, 32, 33, 34, 43, 44, 74, 113, 134, 148, 150, 154, 157, 159, 161, 164, 171, 188, 200, 202, 203, 204, 205, 208, 209, 213, 214, 221, 233, 239, 242, 262, 263, 264, 265, 267, 275, 310, 315, 326, 352, 361, 371, 408, 433, 437, 458, 464, 476, 477, 491, 553, 556, 571, 627, 631, 641, 696, 829, 831, 835, 852, 855, 858, 859, 862, 864, 876], "public": [3, 27, 110, 114, 118, 120, 128, 133, 143, 200, 257, 264, 267, 273, 447, 475, 476, 614, 624, 743, 762, 767, 835, 851, 857, 864, 876], "brainstorm": [3, 6, 27, 79, 80, 82, 107, 117, 164, 185, 186, 191, 192, 242, 256, 259, 260, 262, 264, 265, 267, 273, 300, 307, 351, 352, 353, 354, 357, 359, 361, 428, 449, 451, 476, 489, 513, 514, 519, 520, 522, 523, 534, 553, 569, 578, 584, 616, 622, 629, 644, 743, 759, 771, 783, 811, 858, 866, 874, 876], "raw": [3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 27, 28, 32, 33, 34, 36, 41, 42, 45, 46, 49, 56, 61, 63, 65, 67, 68, 70, 71, 72, 73, 75, 77, 78, 80, 81, 82, 86, 87, 89, 90, 93, 94, 95, 97, 98, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 119, 121, 125, 126, 127, 130, 131, 133, 134, 135, 140, 141, 143, 144, 145, 148, 150, 155, 157, 158, 161, 164, 165, 166, 168, 169, 170, 172, 173, 179, 181, 182, 183, 184, 187, 188, 189, 190, 194, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 217, 218, 220, 221, 226, 227, 228, 229, 232, 234, 237, 238, 239, 242, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 281, 282, 283, 294, 295, 296, 310, 312, 315, 339, 341, 343, 344, 345, 346, 351, 352, 354, 355, 356, 357, 360, 361, 369, 379, 390, 391, 399, 403, 413, 416, 433, 437, 441, 443, 446, 449, 450, 467, 475, 477, 478, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 512, 515, 516, 517, 519, 522, 523, 524, 525, 526, 527, 529, 530, 534, 537, 553, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 591, 592, 598, 599, 605, 609, 611, 613, 616, 618, 619, 638, 641, 646, 647, 648, 649, 650, 661, 662, 682, 696, 698, 699, 700, 709, 714, 741, 743, 773, 776, 777, 786, 787, 788, 790, 796, 797, 813, 831, 833, 835, 851, 852, 853, 861, 862, 866, 876], "median": [3, 5, 6, 27, 69, 126, 149, 156, 194, 203, 225, 237, 238, 259, 262, 263, 264, 265, 267, 271, 312, 354, 408, 415, 417, 449, 476, 477, 489, 553, 555, 556, 570, 578, 584, 675, 696, 698, 699, 700, 715, 760, 767, 774, 775, 782, 786, 795, 798, 803, 805, 876], "nerv": [3, 5, 6, 27, 262, 264, 265, 267, 354, 449, 489, 553, 578], "hf": [3, 6, 27, 94, 125, 190, 264, 390, 767], "sef": [3, 6, 27, 125, 264, 390, 767, 851], "trial": [3, 6, 13, 16, 18, 27, 28, 33, 68, 69, 71, 82, 99, 102, 105, 111, 112, 115, 120, 128, 139, 140, 141, 142, 143, 148, 150, 151, 164, 165, 167, 179, 182, 190, 193, 194, 199, 200, 203, 219, 221, 224, 229, 230, 231, 232, 234, 242, 262, 263, 264, 265, 267, 289, 290, 293, 316, 322, 351, 408, 421, 424, 430, 431, 432, 434, 437, 449, 476, 492, 495, 525, 527, 553, 556, 564, 611, 631, 676, 677, 679, 680, 681, 683, 684, 696, 699, 723, 724, 726, 727, 767, 773, 776, 831, 852, 876], "linear": [3, 5, 6, 8, 9, 13, 17, 19, 20, 26, 27, 32, 41, 45, 50, 54, 55, 60, 97, 99, 105, 107, 108, 110, 118, 133, 134, 135, 140, 157, 158, 165, 175, 176, 180, 181, 193, 194, 200, 202, 203, 204, 242, 257, 259, 262, 263, 264, 265, 267, 269, 270, 271, 273, 275, 276, 277, 278, 339, 351, 408, 412, 414, 415, 420, 423, 426, 444, 446, 447, 476, 477, 514, 526, 528, 535, 538, 555, 556, 570, 578, 582, 611, 620, 647, 648, 649, 661, 681, 682, 691, 696, 698, 700, 732, 733, 743, 760, 762, 767, 775, 776, 782, 784, 786, 791, 795, 797, 798, 801, 803, 805, 806, 807, 831, 842, 844, 851, 852, 855, 876], "regress": [3, 6, 10, 11, 12, 15, 18, 19, 27, 31, 42, 76, 83, 96, 100, 146, 147, 164, 194, 211, 212, 224, 242, 262, 263, 264, 265, 267, 351, 414, 420, 449, 476, 521, 524, 553, 555, 573, 594, 599, 607, 680, 681, 682, 767, 776, 779, 798, 852, 864, 876], "limo": [3, 6, 27, 242, 263, 264, 265, 351, 681, 767, 776, 866, 876], "optic": [3, 6, 27, 74, 164, 187, 189, 211, 212, 260, 262, 264, 265, 267, 273, 300, 352, 362, 369, 437, 449, 451, 485, 497, 522, 523, 534, 550, 553, 555, 586, 587, 591, 603, 616, 700, 737, 743, 759, 811, 831, 852, 876], "pump": [3, 6, 27, 164, 187, 211, 212, 260, 262, 264, 265, 267, 273, 300, 352, 362, 449, 451, 497, 522, 523, 534, 550, 553, 555, 603, 616, 700, 737, 743, 759, 811, 831, 852, 876], "magnetomet": [3, 6, 22, 27, 32, 72, 75, 78, 79, 80, 85, 91, 107, 117, 118, 141, 144, 145, 149, 150, 161, 164, 165, 166, 167, 168, 179, 182, 183, 187, 190, 197, 198, 199, 201, 203, 204, 205, 206, 208, 211, 212, 213, 214, 215, 216, 219, 224, 254, 257, 259, 260, 262, 263, 264, 265, 267, 269, 270, 271, 273, 276, 277, 278, 295, 296, 300, 318, 352, 353, 354, 355, 356, 357, 362, 367, 368, 369, 408, 415, 429, 449, 451, 452, 471, 473, 474, 476, 477, 497, 512, 522, 523, 534, 550, 553, 554, 555, 556, 566, 567, 568, 569, 570, 571, 572, 573, 575, 584, 595, 603, 616, 682, 696, 698, 699, 700, 737, 743, 759, 760, 766, 773, 774, 775, 777, 779, 782, 783, 786, 795, 796, 798, 803, 804, 805, 811, 831, 851, 852, 855, 858, 876], "opm": [3, 6, 27, 103, 104, 164, 211, 212, 242, 259, 260, 262, 264, 265, 267, 273, 300, 352, 357, 362, 449, 451, 497, 514, 519, 522, 523, 529, 534, 550, 553, 555, 603, 616, 644, 700, 737, 743, 759, 811, 831, 858, 866, 876], "dspm": [3, 6, 11, 27, 29, 31, 36, 37, 38, 39, 40, 41, 42, 44, 55, 56, 59, 60, 102, 103, 104, 105, 106, 107, 164, 165, 174, 177, 178, 180, 181, 185, 186, 190, 194, 220, 221, 232, 234, 259, 262, 264, 265, 266, 267, 268, 269, 270, 273, 275, 276, 277, 278, 288, 292, 295, 296, 351, 352, 356, 449, 473, 474, 476, 489, 510, 515, 519, 522, 523, 524, 525, 526, 527, 528, 529, 530, 534, 535, 536, 537, 539, 540, 553, 556, 573, 611, 614, 616, 618, 705, 743, 768, 776, 831, 851, 852, 861, 876], "spm": [3, 6, 27, 121, 194, 351, 352, 403, 449, 489, 515, 519, 523, 534, 553, 556, 573, 776, 864, 874, 876], "face": [3, 4, 6, 10, 27, 68, 121, 139, 141, 143, 148, 150, 160, 165, 171, 174, 194, 197, 242, 262, 263, 304, 351, 352, 449, 489, 515, 519, 523, 534, 553, 556, 573, 627, 630, 696, 756, 776, 804, 824, 829, 861, 864, 876], "explor": [4, 27, 103, 104, 107, 157, 180, 194, 198, 200, 202, 205, 216, 220, 238, 239, 262, 265, 277, 278, 285, 449, 675, 807, 832, 852, 853, 855], "structur": [4, 8, 9, 10, 27, 41, 43, 59, 62, 63, 69, 81, 92, 93, 110, 112, 121, 133, 134, 136, 141, 145, 146, 147, 150, 152, 153, 154, 158, 164, 165, 166, 169, 170, 172, 173, 180, 184, 185, 186, 188, 189, 193, 203, 214, 217, 218, 222, 223, 224, 225, 239, 242, 256, 262, 263, 264, 265, 266, 267, 269, 270, 272, 273, 275, 276, 277, 278, 308, 309, 310, 318, 351, 370, 371, 386, 390, 391, 399, 403, 449, 465, 473, 474, 476, 477, 481, 495, 496, 536, 547, 550, 552, 553, 567, 581, 584, 607, 608, 609, 610, 611, 613, 614, 624, 656, 666, 667, 668, 669, 670, 671, 672, 676, 696, 698, 699, 700, 733, 743, 799, 822, 831, 835, 836, 839, 842, 847, 849, 851, 852, 853, 864, 876], "contain": [4, 16, 18, 27, 31, 38, 41, 43, 53, 78, 86, 92, 99, 106, 110, 114, 125, 126, 133, 136, 139, 142, 143, 145, 148, 150, 154, 157, 161, 164, 165, 167, 168, 169, 170, 171, 174, 180, 182, 187, 188, 189, 190, 200, 202, 203, 204, 205, 208, 209, 210, 213, 214, 219, 221, 224, 237, 238, 239, 249, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 282, 283, 287, 295, 296, 297, 301, 305, 306, 307, 310, 311, 312, 313, 316, 317, 318, 324, 333, 336, 347, 352, 353, 354, 355, 356, 357, 358, 363, 364, 365, 366, 367, 368, 369, 383, 387, 389, 390, 391, 408, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 427, 429, 432, 435, 436, 437, 442, 449, 450, 451, 452, 456, 457, 458, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 476, 477, 483, 485, 486, 487, 488, 490, 492, 493, 494, 495, 496, 499, 500, 501, 502, 503, 504, 505, 506, 509, 510, 513, 515, 517, 518, 534, 542, 545, 546, 551, 555, 556, 557, 559, 561, 570, 571, 575, 581, 583, 584, 588, 590, 596, 597, 601, 602, 603, 604, 605, 606, 608, 609, 610, 611, 613, 614, 615, 619, 622, 627, 628, 630, 636, 638, 640, 641, 644, 645, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 664, 665, 673, 675, 681, 683, 684, 686, 687, 688, 691, 692, 696, 697, 698, 699, 700, 708, 711, 719, 723, 724, 726, 727, 735, 743, 759, 760, 761, 762, 767, 770, 771, 773, 774, 775, 776, 777, 779, 780, 782, 783, 784, 786, 792, 795, 798, 799, 800, 801, 802, 803, 805, 806, 807, 816, 821, 824, 826, 827, 829, 831, 834, 835, 851, 852, 853, 855, 858, 861, 862, 876], "replic": [4, 16, 228, 232, 233, 234, 268, 673, 852, 855, 856, 876], "extend": [4, 75, 140, 143, 150, 165, 179, 198, 203, 205, 208, 210, 229, 242, 256, 259, 260, 262, 263, 264, 265, 271, 277, 352, 408, 415, 476, 477, 509, 517, 555, 556, 559, 567, 570, 575, 582, 584, 663, 696, 698, 700, 733, 760, 771, 775, 782, 786, 795, 798, 803, 805, 839, 842, 851, 864, 876], "main": [4, 49, 92, 99, 142, 155, 167, 170, 206, 210, 215, 228, 234, 262, 263, 324, 390, 467, 489, 677, 679, 773, 833, 835, 843, 852, 858, 859, 876], "tool": [4, 27, 54, 55, 69, 78, 87, 133, 139, 150, 154, 157, 160, 189, 197, 198, 200, 203, 205, 209, 225, 234, 239, 242, 249, 269, 270, 273, 276, 277, 278, 476, 477, 513, 538, 833, 838, 839, 840, 841, 843, 847, 851, 855, 856, 857, 858, 859, 863, 864, 866, 874, 876], "integr": [4, 154, 159, 199, 203, 224, 234, 242, 538, 556, 584, 656, 835, 839, 847, 858, 861, 876], "meeg": [4, 239], "matlab": [4, 19, 193, 242, 301, 414, 495, 593, 609, 613, 841, 842, 852, 859, 860, 864, 874, 876], "toolbox": [4, 19, 69, 150, 154, 193, 242, 301, 414, 447, 564, 842, 852], "origin": [4, 5, 8, 9, 11, 12, 13, 16, 18, 21, 22, 24, 26, 32, 33, 34, 38, 41, 42, 45, 46, 49, 50, 69, 70, 71, 74, 77, 78, 79, 85, 91, 92, 94, 95, 98, 101, 105, 108, 110, 111, 112, 115, 116, 119, 126, 133, 134, 135, 136, 139, 140, 141, 143, 144, 145, 148, 150, 151, 155, 157, 158, 159, 160, 161, 165, 166, 168, 169, 171, 175, 176, 177, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 213, 215, 221, 226, 227, 228, 229, 232, 234, 237, 238, 254, 255, 256, 257, 259, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 275, 276, 277, 278, 280, 282, 283, 295, 296, 310, 358, 367, 408, 415, 422, 423, 424, 429, 432, 442, 470, 475, 476, 477, 484, 487, 491, 495, 509, 515, 524, 555, 556, 557, 566, 567, 570, 575, 584, 591, 599, 609, 613, 616, 621, 634, 636, 638, 645, 647, 648, 649, 656, 661, 681, 688, 696, 698, 699, 700, 739, 743, 759, 760, 767, 773, 775, 777, 779, 782, 783, 786, 793, 795, 796, 797, 798, 799, 802, 803, 805, 823, 831, 835, 843, 851, 852, 858, 861, 876], "interfac": [4, 8, 15, 45, 86, 133, 154, 157, 165, 188, 194, 198, 200, 203, 204, 216, 242, 264, 265, 373, 378, 467, 468, 557, 743, 782, 838, 842, 847, 852, 861, 876], "eeglab": [4, 69, 126, 167, 200, 203, 242, 259, 262, 263, 264, 265, 271, 310, 328, 408, 415, 438, 441, 476, 477, 492, 555, 556, 564, 570, 597, 602, 608, 696, 698, 700, 760, 767, 775, 777, 779, 782, 783, 786, 793, 795, 797, 798, 799, 803, 805, 858, 876], "In": [4, 5, 10, 15, 16, 19, 21, 32, 40, 42, 43, 44, 45, 46, 59, 69, 73, 77, 80, 81, 85, 86, 88, 92, 99, 101, 110, 112, 113, 114, 116, 124, 125, 130, 133, 134, 136, 139, 141, 143, 148, 149, 150, 151, 154, 155, 157, 159, 160, 161, 165, 166, 167, 169, 170, 171, 174, 175, 177, 180, 187, 189, 190, 193, 194, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 221, 224, 225, 226, 234, 237, 238, 239, 242, 254, 256, 257, 259, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 276, 277, 278, 286, 295, 296, 300, 301, 306, 308, 318, 325, 327, 339, 352, 356, 357, 367, 368, 369, 370, 408, 410, 414, 415, 424, 425, 429, 432, 441, 443, 451, 452, 471, 473, 474, 476, 477, 484, 522, 523, 524, 525, 526, 527, 531, 534, 551, 555, 556, 557, 558, 570, 571, 572, 573, 578, 581, 582, 590, 592, 599, 601, 624, 641, 661, 664, 682, 691, 696, 698, 699, 700, 704, 705, 706, 707, 709, 712, 722, 723, 724, 725, 726, 727, 728, 731, 740, 743, 756, 767, 773, 774, 775, 776, 777, 779, 780, 782, 783, 786, 787, 794, 795, 796, 797, 798, 801, 803, 804, 807, 831, 833, 835, 836, 840, 841, 843, 846, 851, 852, 855, 857, 858, 861, 862, 876], "summari": [4, 10, 171, 199, 203, 216, 269, 270, 273, 276, 277, 278, 532, 533, 688, 835, 861], "fetch": [4, 136, 247, 378, 382, 383, 384, 385, 386, 387, 392, 400, 401, 835, 852, 876], "subject": [4, 5, 7, 8, 9, 10, 11, 19, 22, 24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 58, 59, 60, 67, 70, 71, 78, 79, 81, 87, 88, 89, 93, 102, 107, 110, 111, 113, 114, 116, 122, 123, 124, 125, 129, 132, 133, 134, 135, 136, 139, 142, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 167, 168, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 188, 189, 190, 194, 197, 198, 199, 202, 203, 204, 205, 206, 208, 209, 211, 212, 213, 214, 220, 221, 224, 225, 226, 228, 229, 232, 233, 234, 235, 238, 239, 242, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 295, 296, 301, 305, 306, 307, 310, 339, 340, 341, 342, 347, 349, 350, 358, 363, 364, 365, 370, 378, 382, 384, 385, 386, 387, 392, 400, 401, 427, 442, 458, 460, 462, 464, 466, 467, 468, 469, 470, 476, 477, 478, 481, 509, 511, 513, 515, 519, 522, 523, 534, 542, 543, 556, 560, 570, 581, 584, 601, 605, 611, 616, 618, 619, 621, 624, 628, 633, 634, 635, 636, 644, 645, 646, 648, 649, 650, 659, 661, 662, 673, 677, 679, 688, 691, 692, 733, 735, 742, 743, 759, 761, 766, 771, 772, 785, 799, 801, 806, 807, 816, 825, 826, 831, 841, 849, 851, 853, 855, 858, 864, 876], "If": [4, 27, 28, 31, 43, 44, 68, 69, 80, 97, 99, 113, 115, 118, 125, 133, 134, 136, 139, 141, 143, 145, 148, 149, 150, 155, 158, 159, 160, 164, 167, 168, 169, 170, 171, 174, 180, 181, 187, 188, 189, 194, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 213, 214, 215, 216, 219, 224, 225, 226, 232, 237, 239, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 300, 301, 302, 303, 304, 305, 306, 307, 310, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 327, 328, 330, 333, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 429, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 591, 592, 593, 596, 597, 598, 599, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 620, 621, 622, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 668, 669, 670, 671, 672, 673, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 711, 712, 713, 714, 715, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 738, 742, 743, 748, 751, 752, 753, 755, 756, 757, 758, 759, 760, 761, 762, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 811, 812, 813, 816, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 833, 834, 835, 838, 839, 840, 841, 842, 843, 846, 851, 852, 855, 856, 857, 858, 859, 861, 862, 876], "disk": [4, 29, 78, 106, 108, 141, 142, 148, 149, 157, 165, 169, 171, 176, 179, 183, 198, 204, 207, 208, 213, 214, 215, 221, 254, 256, 257, 258, 262, 263, 264, 265, 267, 268, 280, 311, 383, 427, 449, 475, 476, 477, 558, 607, 614, 616, 618, 624, 645, 698, 700, 717, 743, 773, 777, 781, 783, 796, 823, 825, 841, 851, 855, 858, 861, 876], "fetcher": [4, 136, 852, 864, 876], "automat": [4, 69, 77, 78, 81, 92, 99, 139, 140, 141, 143, 144, 148, 149, 150, 154, 155, 165, 167, 168, 169, 171, 181, 188, 189, 190, 197, 198, 199, 200, 201, 203, 204, 205, 208, 213, 215, 216, 219, 229, 242, 254, 256, 257, 259, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 280, 310, 316, 338, 358, 375, 376, 377, 378, 380, 381, 388, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 411, 418, 421, 429, 432, 440, 456, 457, 464, 466, 476, 477, 482, 489, 493, 496, 500, 519, 555, 556, 558, 566, 567, 568, 570, 575, 576, 579, 582, 584, 599, 610, 621, 632, 635, 640, 641, 645, 656, 683, 684, 686, 687, 696, 699, 739, 743, 761, 762, 766, 767, 773, 776, 779, 780, 781, 782, 789, 790, 796, 801, 806, 807, 834, 835, 841, 842, 851, 852, 858, 864, 876], "remot": [4, 247, 384, 809, 833, 835, 841, 864], "repositori": [4, 169, 836, 842, 857], "dure": [4, 19, 33, 38, 43, 45, 69, 79, 81, 92, 98, 101, 114, 119, 125, 133, 135, 140, 143, 148, 154, 156, 159, 165, 166, 167, 170, 171, 179, 181, 190, 194, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 213, 214, 215, 216, 239, 242, 254, 260, 262, 263, 264, 265, 266, 267, 269, 272, 273, 275, 277, 278, 279, 295, 296, 302, 339, 341, 345, 352, 356, 357, 359, 364, 367, 368, 369, 408, 414, 415, 425, 431, 432, 443, 451, 452, 468, 471, 473, 474, 476, 477, 478, 489, 504, 515, 519, 534, 542, 556, 575, 581, 584, 599, 638, 641, 646, 661, 664, 670, 671, 672, 691, 696, 698, 699, 700, 702, 705, 725, 728, 732, 741, 743, 759, 762, 773, 780, 783, 787, 790, 796, 801, 807, 831, 834, 840, 843, 851, 852, 853, 857, 858, 861, 876], "inform": [4, 5, 9, 11, 21, 22, 26, 28, 29, 31, 34, 35, 38, 39, 40, 42, 43, 44, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 61, 63, 67, 78, 82, 88, 90, 91, 92, 93, 99, 102, 105, 106, 108, 122, 129, 132, 133, 134, 139, 140, 141, 142, 143, 145, 148, 149, 150, 155, 157, 158, 159, 161, 164, 165, 167, 169, 171, 174, 176, 178, 179, 180, 181, 187, 188, 189, 190, 193, 194, 201, 202, 203, 204, 205, 206, 208, 211, 212, 213, 215, 219, 220, 221, 224, 226, 229, 232, 234, 238, 239, 242, 247, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 280, 282, 283, 295, 296, 297, 303, 304, 308, 309, 316, 317, 318, 322, 324, 325, 327, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 352, 356, 358, 367, 368, 369, 371, 408, 410, 415, 416, 417, 427, 428, 432, 438, 439, 440, 441, 443, 444, 446, 447, 449, 452, 459, 460, 466, 468, 471, 474, 475, 476, 477, 478, 481, 487, 495, 507, 512, 515, 518, 519, 520, 524, 534, 552, 553, 555, 556, 566, 567, 575, 581, 582, 584, 589, 590, 595, 597, 600, 609, 611, 612, 613, 631, 632, 638, 643, 644, 660, 661, 664, 683, 687, 693, 695, 696, 697, 698, 699, 700, 712, 723, 724, 725, 726, 727, 728, 733, 738, 739, 743, 756, 759, 763, 767, 768, 769, 771, 774, 778, 784, 785, 791, 795, 799, 805, 822, 831, 833, 834, 835, 838, 839, 842, 847, 852, 853, 856, 857, 859, 876], "e": [4, 7, 8, 12, 28, 41, 42, 44, 46, 47, 54, 68, 69, 70, 78, 82, 99, 110, 112, 118, 133, 136, 139, 140, 142, 143, 145, 149, 150, 152, 154, 156, 159, 160, 161, 164, 165, 167, 168, 169, 177, 179, 184, 187, 188, 189, 193, 194, 197, 198, 199, 200, 201, 203, 204, 206, 207, 208, 213, 214, 219, 220, 221, 224, 225, 226, 229, 232, 234, 238, 239, 242, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 285, 286, 295, 296, 297, 300, 301, 304, 306, 308, 310, 311, 316, 325, 327, 336, 338, 349, 352, 356, 357, 363, 367, 368, 369, 378, 383, 384, 386, 391, 400, 401, 408, 410, 411, 414, 415, 417, 418, 419, 422, 423, 424, 427, 428, 429, 432, 435, 437, 440, 441, 442, 444, 446, 447, 449, 450, 451, 452, 458, 464, 467, 470, 471, 473, 474, 475, 476, 477, 478, 488, 489, 491, 493, 509, 511, 513, 516, 517, 518, 519, 522, 523, 529, 530, 531, 532, 533, 534, 535, 538, 539, 540, 542, 555, 556, 558, 559, 564, 565, 566, 567, 570, 571, 572, 573, 575, 577, 578, 581, 584, 590, 591, 592, 599, 604, 611, 614, 615, 618, 619, 624, 631, 632, 633, 634, 635, 636, 642, 645, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 664, 667, 681, 682, 683, 684, 685, 686, 687, 688, 691, 692, 695, 696, 698, 699, 700, 704, 705, 706, 707, 708, 709, 712, 722, 726, 727, 731, 733, 743, 748, 756, 759, 760, 761, 766, 767, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 786, 787, 789, 790, 794, 795, 796, 797, 798, 801, 803, 805, 806, 809, 816, 821, 824, 831, 833, 834, 835, 836, 839, 841, 847, 851, 852, 855, 857, 858, 861, 862, 864, 876], "rate": [4, 68, 95, 99, 101, 179, 188, 189, 193, 200, 201, 203, 228, 238, 242, 257, 260, 261, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 371, 413, 443, 447, 449, 476, 477, 484, 491, 498, 577, 582, 598, 649, 661, 674, 680, 682, 685, 696, 698, 699, 700, 714, 773, 775, 784, 796, 855, 876], "per": [4, 31, 47, 88, 92, 99, 105, 108, 118, 124, 129, 141, 143, 149, 150, 157, 165, 168, 179, 199, 203, 205, 216, 224, 229, 234, 238, 254, 262, 263, 264, 265, 267, 269, 270, 271, 273, 274, 275, 276, 277, 278, 280, 312, 319, 358, 373, 385, 400, 408, 415, 418, 421, 429, 432, 441, 442, 476, 477, 532, 533, 538, 539, 540, 557, 560, 601, 641, 648, 677, 679, 692, 696, 698, 700, 702, 705, 712, 714, 722, 723, 724, 726, 727, 733, 743, 773, 774, 775, 782, 804, 835, 841, 857, 858, 864, 876], "name": [4, 5, 7, 8, 9, 10, 18, 22, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 51, 54, 55, 58, 59, 67, 69, 81, 88, 90, 91, 92, 93, 98, 99, 101, 107, 110, 124, 129, 130, 133, 134, 136, 140, 141, 142, 143, 144, 148, 149, 158, 159, 160, 165, 167, 168, 169, 170, 171, 176, 177, 178, 179, 189, 190, 194, 198, 199, 200, 203, 204, 206, 208, 209, 210, 216, 219, 220, 221, 224, 225, 237, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 301, 305, 306, 307, 308, 310, 311, 316, 319, 320, 321, 322, 323, 325, 326, 327, 332, 334, 335, 336, 338, 349, 357, 358, 361, 363, 364, 365, 367, 368, 371, 379, 383, 386, 389, 408, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 424, 426, 427, 429, 432, 435, 438, 439, 440, 441, 449, 450, 458, 460, 461, 462, 464, 466, 467, 468, 469, 470, 475, 476, 477, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 508, 509, 511, 515, 516, 537, 541, 545, 546, 547, 553, 554, 555, 556, 557, 558, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 581, 585, 590, 592, 595, 596, 599, 601, 602, 604, 605, 606, 608, 609, 610, 611, 613, 615, 616, 617, 618, 619, 621, 622, 624, 626, 627, 628, 629, 631, 632, 633, 634, 635, 636, 638, 641, 644, 645, 647, 648, 649, 650, 661, 664, 673, 677, 681, 682, 688, 691, 692, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 712, 716, 718, 722, 724, 727, 729, 731, 740, 742, 743, 748, 759, 760, 761, 762, 764, 767, 771, 772, 773, 774, 775, 777, 779, 780, 781, 782, 786, 787, 793, 794, 795, 796, 797, 798, 799, 801, 802, 803, 805, 806, 807, 816, 820, 821, 822, 823, 826, 827, 828, 829, 830, 831, 833, 834, 839, 840, 841, 843, 852, 853, 858, 862, 866, 876], "etc": [4, 27, 31, 36, 47, 76, 142, 154, 159, 165, 166, 167, 170, 171, 174, 187, 188, 189, 197, 198, 199, 203, 208, 213, 216, 219, 224, 232, 239, 255, 260, 262, 263, 264, 265, 267, 268, 269, 273, 277, 332, 437, 449, 450, 476, 477, 484, 495, 499, 518, 528, 553, 556, 584, 609, 613, 638, 643, 670, 671, 672, 673, 683, 684, 686, 687, 696, 698, 699, 700, 743, 767, 771, 774, 801, 831, 835, 839, 840, 853, 855, 857, 858, 861, 862, 864, 876], "mat": [4, 19, 193, 242, 267, 495, 609, 613, 858, 876], "store": [4, 16, 29, 30, 69, 88, 91, 92, 93, 102, 107, 113, 114, 133, 134, 139, 140, 141, 142, 143, 148, 149, 150, 154, 155, 157, 159, 161, 167, 168, 169, 171, 174, 181, 188, 189, 190, 198, 199, 204, 205, 208, 209, 213, 215, 216, 220, 221, 239, 254, 255, 256, 260, 262, 263, 264, 265, 267, 272, 273, 274, 276, 280, 322, 343, 361, 378, 383, 390, 391, 400, 401, 410, 412, 423, 432, 437, 441, 446, 467, 475, 476, 477, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 516, 534, 543, 545, 556, 564, 570, 583, 602, 608, 609, 613, 616, 639, 648, 649, 661, 676, 696, 697, 699, 701, 702, 703, 704, 705, 706, 707, 716, 744, 751, 763, 796, 822, 823, 831, 835, 851, 852, 853, 855, 858, 861, 876], "fit": [4, 7, 8, 10, 11, 12, 13, 15, 16, 18, 21, 24, 40, 41, 45, 50, 59, 69, 70, 72, 73, 75, 77, 78, 79, 81, 86, 99, 109, 114, 121, 136, 140, 150, 151, 155, 157, 164, 165, 169, 171, 176, 178, 182, 183, 184, 185, 186, 188, 194, 198, 201, 202, 205, 206, 207, 208, 210, 228, 242, 248, 254, 259, 260, 261, 262, 263, 264, 265, 266, 267, 271, 272, 277, 298, 303, 304, 310, 339, 340, 341, 342, 345, 349, 350, 351, 363, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 427, 429, 437, 447, 451, 476, 477, 488, 515, 518, 523, 553, 555, 556, 557, 560, 563, 565, 566, 567, 570, 575, 576, 584, 614, 645, 660, 681, 696, 698, 699, 700, 709, 743, 760, 767, 771, 775, 777, 779, 782, 783, 786, 787, 788, 790, 793, 795, 797, 798, 799, 803, 805, 835, 847, 852, 855, 858, 862, 865, 876], "inferenti": [4, 224], "evalu": [4, 31, 44, 54, 55, 161, 187, 194, 208, 210, 224, 242, 274, 358, 425, 434, 473, 474, 507, 538, 565, 575, 656, 852, 855, 857, 858], "signific": [4, 71, 98, 99, 110, 150, 164, 171, 187, 197, 199, 200, 202, 203, 205, 224, 226, 227, 228, 229, 230, 231, 239, 242, 259, 262, 263, 264, 265, 267, 316, 322, 351, 408, 414, 415, 447, 476, 477, 531, 555, 556, 607, 683, 684, 686, 687, 688, 696, 698, 700, 760, 775, 779, 782, 798, 803, 805, 851, 858, 861, 864], "jose": [4, 876], "garcia": 4, "alani": [4, 876], "jcg": 4, "gmail": [4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 32, 33, 34, 38, 39, 42, 43, 44, 45, 46, 50, 51, 57, 58, 60, 65, 68, 71, 72, 73, 75, 77, 78, 79, 80, 82, 86, 88, 91, 92, 93, 97, 99, 101, 107, 110, 111, 112, 116, 118, 119, 121, 123, 124, 125, 126, 127, 130, 131, 133, 134, 135, 136, 140, 156, 158, 160, 178, 179, 181, 182, 183, 190, 193, 207, 221, 224, 228, 229, 232, 233, 234, 238, 239], "com": [4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 32, 33, 34, 38, 39, 42, 43, 44, 45, 46, 50, 51, 57, 58, 60, 65, 68, 71, 72, 73, 75, 77, 78, 79, 80, 82, 86, 88, 91, 92, 93, 99, 101, 107, 110, 111, 112, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 130, 131, 133, 134, 135, 136, 140, 156, 158, 160, 178, 179, 181, 182, 183, 190, 193, 207, 220, 221, 224, 228, 229, 232, 233, 234, 238, 239, 242, 262, 263, 264, 265, 273, 385, 476, 477, 484, 833, 835, 843, 855], "matplotlib": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 28, 29, 37, 38, 39, 41, 45, 47, 53, 58, 67, 68, 69, 70, 71, 72, 80, 84, 88, 90, 91, 94, 95, 97, 102, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 118, 125, 129, 130, 131, 133, 135, 136, 143, 144, 145, 150, 159, 169, 170, 171, 175, 176, 179, 180, 182, 183, 193, 194, 198, 200, 201, 203, 204, 205, 206, 208, 209, 210, 213, 216, 221, 224, 225, 226, 227, 228, 229, 234, 238, 239, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 272, 273, 276, 277, 278, 310, 311, 408, 415, 476, 477, 555, 556, 570, 618, 695, 696, 697, 698, 700, 712, 722, 743, 744, 746, 756, 758, 760, 761, 763, 765, 766, 767, 768, 769, 770, 771, 772, 773, 775, 776, 777, 779, 780, 781, 782, 783, 784, 785, 786, 788, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 812, 813, 815, 833, 834, 835, 853, 876], "pyplot": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 28, 29, 37, 38, 39, 41, 45, 47, 53, 58, 67, 68, 69, 70, 71, 72, 80, 84, 88, 90, 91, 94, 95, 97, 102, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 118, 125, 129, 130, 131, 133, 135, 136, 143, 144, 145, 150, 159, 169, 171, 175, 176, 179, 180, 182, 183, 193, 194, 200, 201, 204, 205, 208, 209, 210, 213, 221, 224, 225, 226, 227, 228, 229, 234, 238, 239, 261, 262, 263, 264, 265, 696, 712, 722, 746, 767, 777, 779, 804, 876], "plt": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 28, 29, 37, 38, 39, 41, 45, 47, 53, 58, 67, 68, 69, 70, 71, 72, 80, 84, 88, 90, 91, 94, 95, 97, 102, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 118, 125, 129, 130, 131, 133, 135, 136, 143, 144, 145, 150, 159, 169, 171, 175, 176, 179, 180, 182, 183, 193, 194, 200, 201, 204, 205, 208, 209, 210, 213, 221, 224, 225, 226, 227, 228, 229, 234, 238, 239, 264, 265, 319, 712, 722, 781], "stat": [4, 94, 95, 97, 98, 99, 110, 111, 140, 193, 224, 225, 226, 227, 228, 229, 232, 233, 234, 239, 262, 263, 316, 327, 556, 564, 772, 853, 866, 873, 876], "linear_regress": [4, 99, 140, 224, 866, 876], "plot_ev": [4, 7, 136, 165, 209, 214, 262, 263, 773, 866, 876], "combine_evok": [4, 7, 97, 140, 143, 148, 150, 165, 175, 190, 209, 225, 227, 862, 866, 876], "subj": [4, 159, 203], "experi": [4, 19, 45, 65, 69, 126, 150, 164, 165, 167, 168, 179, 190, 198, 199, 205, 208, 209, 210, 213, 214, 242, 267, 831, 835, 852, 854, 858, 876], "particip": [4, 70, 72, 74, 75, 79, 80, 81, 88, 91, 125, 140, 143, 145, 150, 165, 166, 167, 168, 171, 197, 198, 199, 201, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 219, 221, 239, 831, 852, 857, 864], "perform": [4, 8, 10, 19, 31, 45, 54, 74, 80, 82, 98, 99, 101, 110, 117, 136, 139, 142, 143, 145, 148, 150, 154, 155, 156, 165, 166, 167, 168, 177, 187, 188, 194, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 213, 224, 226, 228, 232, 234, 255, 257, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 285, 288, 295, 296, 351, 352, 353, 355, 357, 358, 373, 408, 411, 414, 415, 418, 420, 421, 424, 425, 429, 443, 444, 449, 451, 464, 465, 466, 467, 471, 473, 474, 476, 477, 483, 484, 491, 515, 516, 518, 519, 523, 524, 525, 526, 527, 529, 530, 534, 539, 540, 555, 556, 558, 561, 568, 569, 570, 572, 573, 575, 576, 582, 584, 599, 611, 644, 647, 648, 649, 661, 673, 678, 682, 683, 684, 685, 686, 687, 689, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 714, 715, 723, 724, 725, 726, 727, 733, 759, 760, 767, 773, 774, 775, 778, 782, 786, 788, 790, 795, 796, 797, 798, 803, 805, 809, 831, 833, 841, 842, 843, 851, 852, 858, 861, 876], "two": [4, 5, 12, 16, 19, 22, 32, 37, 42, 45, 47, 54, 55, 65, 68, 69, 71, 73, 74, 79, 82, 86, 88, 110, 113, 115, 130, 131, 133, 134, 136, 140, 141, 143, 145, 149, 150, 154, 155, 157, 159, 165, 167, 168, 169, 170, 171, 174, 177, 179, 189, 190, 194, 197, 199, 200, 201, 202, 203, 204, 205, 206, 209, 213, 214, 215, 216, 221, 224, 226, 228, 232, 234, 237, 239, 242, 256, 262, 263, 264, 265, 268, 269, 270, 273, 274, 276, 277, 278, 295, 296, 310, 318, 352, 356, 357, 367, 368, 369, 400, 408, 410, 415, 419, 423, 431, 432, 442, 444, 446, 447, 448, 451, 452, 471, 473, 474, 476, 477, 499, 511, 529, 534, 551, 556, 559, 566, 570, 575, 582, 583, 598, 599, 638, 641, 649, 673, 677, 678, 679, 681, 683, 684, 685, 686, 687, 691, 696, 698, 699, 700, 714, 715, 725, 733, 743, 748, 751, 773, 774, 775, 783, 790, 796, 801, 831, 835, 841, 852, 855, 857, 858, 861, 876], "altern": [4, 112, 125, 160, 161, 168, 171, 190, 197, 199, 200, 203, 216, 224, 238, 239, 253, 255, 256, 259, 262, 263, 264, 265, 271, 352, 408, 415, 476, 477, 500, 518, 555, 556, 570, 606, 610, 685, 696, 698, 700, 743, 760, 775, 782, 786, 795, 798, 803, 805, 833, 835, 841, 852, 855, 861, 863, 876], "choic": [4, 112, 154, 159, 169, 170, 183, 200, 205, 214, 226, 275, 448, 458, 534, 689, 833, 839, 852, 858], "task": [4, 10, 32, 33, 34, 46, 69, 110, 111, 135, 136, 142, 143, 154, 155, 164, 168, 174, 194, 198, 203, 238, 242, 378, 411, 418, 712, 722, 723, 726, 852, 858, 859, 862, 864, 876], "discrimin": [4, 9, 18, 81, 194, 239, 242, 408, 412, 415, 556, 852], "between": [4, 8, 10, 16, 19, 22, 26, 27, 36, 38, 40, 45, 47, 59, 60, 68, 80, 81, 86, 94, 97, 98, 101, 106, 111, 112, 125, 126, 131, 132, 133, 135, 136, 139, 140, 143, 145, 148, 149, 150, 155, 156, 157, 159, 160, 161, 164, 165, 168, 169, 170, 171, 175, 177, 187, 188, 189, 190, 193, 194, 198, 199, 200, 202, 203, 204, 206, 207, 208, 209, 210, 213, 214, 215, 221, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 239, 242, 254, 255, 256, 257, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 285, 306, 310, 316, 318, 319, 339, 351, 352, 358, 359, 361, 362, 363, 408, 409, 414, 420, 424, 427, 429, 431, 432, 434, 442, 449, 452, 453, 471, 473, 474, 476, 477, 499, 516, 517, 529, 531, 534, 538, 539, 540, 553, 556, 558, 559, 561, 564, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 579, 582, 583, 584, 588, 590, 611, 614, 615, 638, 646, 647, 648, 649, 651, 653, 656, 657, 660, 661, 664, 666, 667, 668, 670, 671, 675, 676, 683, 684, 686, 687, 688, 691, 696, 697, 699, 701, 703, 704, 706, 711, 712, 715, 719, 720, 722, 723, 724, 726, 727, 733, 743, 748, 759, 761, 762, 764, 767, 769, 773, 776, 777, 779, 780, 782, 796, 797, 800, 801, 803, 806, 807, 809, 822, 831, 833, 835, 841, 843, 851, 852, 855, 857, 858, 861, 864, 876], "stimuli": [4, 19, 68, 114, 126, 140, 143, 145, 148, 150, 165, 179, 190, 193, 202, 242, 414, 559, 831, 852], "The": [4, 5, 7, 8, 9, 11, 14, 15, 16, 18, 19, 21, 27, 31, 34, 38, 41, 43, 44, 45, 46, 47, 48, 49, 52, 58, 59, 60, 63, 65, 68, 73, 74, 77, 78, 79, 80, 81, 82, 86, 92, 93, 99, 101, 102, 105, 107, 108, 110, 111, 112, 113, 114, 118, 124, 125, 126, 132, 133, 134, 135, 136, 140, 141, 142, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 170, 171, 172, 173, 176, 180, 182, 183, 185, 186, 187, 188, 189, 190, 193, 194, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 238, 239, 240, 241, 242, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 293, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 378, 379, 382, 383, 384, 385, 386, 387, 389, 391, 392, 399, 400, 401, 403, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 486, 487, 488, 489, 491, 493, 495, 496, 497, 498, 499, 500, 502, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 631, 632, 633, 635, 636, 637, 638, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 681, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 738, 740, 741, 742, 743, 744, 745, 746, 748, 749, 751, 752, 753, 754, 755, 756, 757, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 825, 826, 827, 828, 830, 831, 833, 835, 838, 839, 841, 847, 853, 854, 855, 856, 859, 860, 862, 864, 876], "same": [4, 18, 19, 28, 44, 45, 54, 55, 58, 69, 73, 74, 81, 88, 97, 101, 107, 111, 112, 125, 133, 134, 139, 140, 141, 143, 148, 149, 150, 155, 159, 160, 161, 167, 168, 169, 170, 174, 175, 177, 182, 187, 189, 190, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 214, 215, 216, 219, 224, 225, 226, 228, 229, 232, 233, 234, 237, 254, 256, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 282, 283, 285, 295, 298, 307, 312, 315, 326, 351, 352, 356, 357, 358, 369, 371, 387, 408, 415, 416, 421, 429, 432, 433, 442, 443, 458, 461, 465, 466, 471, 475, 476, 477, 483, 484, 491, 492, 502, 505, 542, 556, 557, 558, 567, 572, 573, 574, 575, 584, 585, 598, 602, 608, 609, 624, 642, 643, 646, 647, 648, 649, 656, 661, 662, 678, 682, 683, 684, 686, 687, 691, 696, 698, 699, 700, 714, 715, 721, 723, 724, 725, 726, 727, 728, 733, 743, 748, 759, 760, 767, 773, 774, 775, 777, 779, 782, 784, 795, 796, 801, 802, 804, 829, 835, 840, 847, 852, 855, 858, 859, 862, 876], "whole": [4, 28, 54, 55, 69, 161, 198, 224, 242, 269, 270, 273, 276, 277, 278, 442, 511, 584, 601, 645, 662, 697, 743, 769, 803, 835, 843, 852, 876], "vari": [4, 19, 22, 46, 47, 59, 140, 154, 189, 193, 200, 203, 204, 207, 208, 210, 221, 224, 262, 263, 267, 269, 270, 273, 276, 277, 278, 339, 340, 341, 342, 343, 344, 431, 442, 648, 687, 766, 852, 858, 861, 864, 876], "level": [4, 8, 9, 27, 36, 44, 56, 96, 99, 100, 120, 128, 133, 140, 141, 143, 149, 150, 154, 159, 164, 165, 167, 169, 170, 179, 180, 187, 193, 197, 199, 200, 203, 204, 210, 221, 224, 226, 227, 228, 229, 230, 232, 233, 234, 239, 242, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 301, 302, 303, 304, 305, 306, 307, 310, 312, 314, 315, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 413, 414, 415, 418, 419, 421, 424, 425, 427, 429, 433, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 458, 459, 463, 464, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516, 518, 519, 520, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 549, 552, 553, 555, 556, 558, 559, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 579, 580, 581, 582, 584, 585, 587, 588, 591, 592, 593, 596, 597, 598, 599, 603, 604, 605, 606, 607, 608, 610, 611, 612, 614, 615, 616, 618, 619, 620, 621, 622, 626, 627, 628, 629, 630, 631, 632, 633, 635, 636, 637, 638, 641, 643, 644, 645, 647, 648, 649, 650, 660, 661, 664, 666, 667, 668, 669, 670, 671, 672, 675, 677, 679, 683, 684, 685, 686, 687, 691, 692, 693, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 714, 715, 718, 719, 723, 724, 726, 727, 728, 729, 732, 733, 738, 741, 742, 743, 751, 759, 760, 768, 771, 775, 776, 777, 778, 779, 782, 783, 786, 787, 788, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 805, 806, 807, 808, 812, 816, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 833, 835, 842, 852, 853, 858, 860, 873, 876], "nois": [4, 5, 7, 11, 18, 21, 27, 28, 29, 30, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 62, 66, 69, 73, 80, 82, 86, 88, 91, 92, 93, 102, 105, 106, 107, 108, 112, 118, 120, 122, 128, 143, 145, 148, 150, 151, 161, 165, 171, 175, 177, 178, 179, 180, 181, 182, 183, 184, 188, 190, 193, 194, 198, 200, 202, 206, 208, 213, 216, 221, 224, 232, 234, 242, 254, 259, 262, 263, 264, 265, 267, 269, 270, 272, 273, 276, 277, 278, 295, 296, 298, 345, 351, 352, 353, 354, 355, 356, 357, 367, 368, 369, 408, 415, 416, 431, 451, 452, 471, 473, 474, 476, 477, 481, 512, 523, 529, 530, 534, 536, 539, 540, 556, 557, 584, 592, 593, 605, 611, 648, 649, 650, 660, 698, 700, 724, 727, 768, 773, 777, 781, 783, 796, 797, 820, 831, 855, 861, 876], "less": [4, 5, 10, 18, 24, 26, 40, 41, 44, 45, 46, 49, 50, 69, 77, 85, 112, 117, 122, 133, 139, 140, 142, 149, 150, 155, 157, 158, 170, 171, 175, 180, 182, 183, 184, 187, 197, 198, 200, 201, 203, 205, 206, 208, 209, 213, 220, 224, 226, 239, 361, 449, 473, 474, 475, 476, 477, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 516, 523, 556, 564, 581, 582, 589, 683, 684, 685, 686, 687, 691, 743, 835, 842, 852, 855, 857, 858, 876], "discern": [4, 852], "observ": [4, 74, 99, 136, 143, 150, 155, 203, 205, 209, 224, 226, 228, 229, 232, 234, 239, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 447, 476, 477, 556, 677, 682, 683, 684, 685, 686, 687, 696, 698, 699, 700, 701, 702, 703, 796, 831, 851, 852], "fig": [4, 5, 10, 11, 12, 13, 15, 18, 19, 21, 22, 24, 39, 41, 42, 45, 47, 52, 58, 67, 68, 69, 70, 71, 72, 78, 79, 80, 85, 91, 94, 97, 101, 102, 107, 110, 111, 112, 113, 114, 116, 118, 121, 122, 123, 125, 133, 134, 135, 136, 140, 143, 145, 149, 150, 155, 156, 157, 158, 159, 165, 169, 171, 175, 176, 177, 179, 180, 181, 182, 184, 190, 193, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 215, 221, 224, 225, 227, 228, 229, 238, 239, 259, 260, 261, 262, 263, 264, 265, 271, 272, 275, 277, 278, 310, 311, 408, 415, 476, 477, 555, 556, 696, 697, 698, 700, 746, 756, 759, 760, 761, 763, 764, 765, 766, 767, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 803, 804, 807, 813, 876], "similar": [4, 16, 17, 18, 19, 20, 27, 33, 58, 60, 69, 86, 101, 107, 110, 112, 129, 135, 136, 139, 140, 141, 142, 143, 149, 159, 169, 194, 197, 198, 200, 202, 203, 204, 205, 206, 209, 213, 220, 224, 226, 229, 237, 242, 255, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 295, 352, 361, 409, 424, 442, 449, 476, 477, 507, 553, 556, 570, 575, 651, 696, 699, 700, 733, 743, 758, 777, 799, 833, 835, 840, 841, 842, 852, 853, 857, 858, 864, 876], "approach": [4, 10, 19, 21, 44, 45, 46, 59, 72, 74, 101, 125, 140, 142, 143, 148, 149, 150, 155, 159, 162, 163, 164, 165, 166, 171, 179, 193, 194, 197, 198, 200, 201, 202, 203, 206, 208, 210, 221, 224, 225, 228, 230, 239, 242, 267, 363, 386, 481, 514, 556, 572, 582, 591, 635, 759, 811, 831, 835, 843, 851, 852, 853, 857, 858, 876], "across": [4, 16, 17, 18, 19, 20, 26, 27, 28, 32, 33, 47, 54, 55, 58, 60, 78, 81, 82, 101, 107, 111, 112, 133, 134, 136, 139, 140, 141, 142, 144, 148, 149, 152, 154, 161, 164, 165, 167, 171, 179, 194, 197, 198, 200, 202, 203, 204, 205, 206, 208, 210, 216, 219, 220, 224, 232, 233, 234, 238, 242, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 274, 276, 277, 278, 315, 357, 358, 408, 411, 415, 417, 418, 420, 421, 422, 433, 442, 476, 477, 532, 533, 538, 553, 556, 558, 561, 570, 611, 621, 641, 661, 687, 691, 696, 697, 698, 699, 700, 707, 714, 723, 724, 726, 727, 758, 762, 767, 774, 775, 777, 778, 782, 795, 797, 801, 804, 807, 831, 835, 851, 852, 855, 858, 864, 876], "signal": [4, 8, 9, 10, 13, 15, 16, 19, 21, 27, 28, 42, 45, 51, 58, 59, 63, 69, 70, 72, 73, 74, 76, 80, 83, 86, 98, 101, 109, 111, 112, 119, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 150, 151, 161, 164, 165, 171, 174, 177, 179, 183, 188, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 206, 211, 212, 213, 214, 216, 221, 222, 223, 224, 229, 240, 242, 254, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 276, 277, 278, 298, 339, 340, 341, 342, 345, 346, 349, 352, 353, 354, 355, 357, 362, 369, 378, 400, 401, 408, 410, 412, 413, 414, 415, 416, 419, 420, 429, 432, 441, 442, 443, 444, 446, 447, 448, 449, 476, 477, 491, 496, 522, 523, 524, 537, 553, 554, 555, 556, 557, 558, 565, 567, 568, 569, 571, 572, 573, 575, 577, 583, 584, 605, 614, 616, 619, 638, 641, 660, 662, 663, 682, 683, 696, 698, 699, 700, 701, 702, 703, 711, 712, 714, 715, 719, 721, 722, 725, 728, 743, 767, 773, 775, 777, 782, 783, 785, 786, 787, 788, 790, 796, 797, 831, 851, 852, 855, 876], "continuum": [4, 852, 876], "span": [4, 80, 117, 135, 139, 140, 148, 149, 150, 164, 165, 167, 177, 190, 197, 201, 211, 212, 213, 215, 216, 237, 239, 256, 262, 263, 264, 265, 267, 357, 476, 477, 553, 556, 558, 559, 572, 573, 576, 577, 611, 688, 696, 698, 700, 714, 758, 760, 797, 803, 851, 852, 853, 858, 864, 876], "85": [4, 13, 19, 35, 37, 47, 77, 88, 101, 107, 110, 112, 139, 144, 145, 159, 168, 175, 181, 193, 194, 201, 207, 224, 225, 228, 229, 876], "increas": [4, 11, 32, 55, 69, 110, 150, 171, 200, 203, 204, 209, 210, 221, 226, 229, 239, 260, 261, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 449, 476, 477, 487, 556, 575, 592, 683, 684, 686, 687, 696, 699, 712, 722, 723, 724, 725, 726, 727, 728, 743, 747, 773, 790, 796, 852, 858, 876], "step": [4, 8, 11, 15, 18, 24, 41, 46, 59, 63, 67, 92, 97, 101, 107, 110, 118, 125, 133, 139, 141, 150, 151, 157, 160, 165, 166, 167, 169, 171, 189, 190, 194, 197, 198, 199, 200, 203, 205, 206, 208, 210, 213, 224, 225, 239, 242, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 287, 289, 339, 340, 341, 345, 408, 414, 423, 426, 449, 450, 466, 467, 474, 476, 477, 493, 551, 556, 566, 570, 575, 582, 646, 663, 683, 684, 686, 687, 688, 711, 719, 733, 743, 759, 767, 796, 807, 835, 836, 841, 843, 849, 851, 852, 857, 858, 862, 864, 876], "other": [4, 43, 61, 69, 81, 82, 110, 125, 140, 142, 144, 149, 150, 154, 155, 159, 165, 167, 168, 169, 171, 174, 176, 179, 180, 187, 188, 190, 194, 197, 198, 201, 202, 203, 204, 205, 206, 207, 213, 215, 216, 220, 221, 224, 228, 237, 239, 254, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 281, 310, 322, 323, 351, 358, 363, 414, 416, 425, 427, 429, 431, 432, 437, 441, 453, 457, 458, 471, 473, 474, 476, 477, 488, 523, 534, 545, 555, 556, 575, 584, 598, 602, 604, 615, 618, 624, 627, 633, 635, 645, 656, 661, 667, 682, 696, 697, 698, 699, 700, 743, 756, 764, 771, 773, 775, 786, 790, 796, 801, 816, 824, 829, 831, 840, 841, 842, 843, 847, 851, 852, 853, 855, 857, 861, 864, 876], "word": [4, 99, 142, 150, 154, 167, 174, 194, 200, 204, 205, 208, 224, 225, 239, 242, 391, 414, 725, 728, 743, 756, 831, 835, 852, 858, 864], "g": [4, 8, 28, 31, 37, 41, 42, 44, 67, 68, 69, 78, 79, 82, 94, 99, 110, 112, 113, 118, 124, 125, 133, 136, 139, 140, 142, 149, 150, 154, 159, 160, 161, 165, 167, 168, 169, 179, 187, 188, 189, 193, 194, 197, 199, 200, 201, 202, 203, 204, 206, 213, 214, 219, 220, 224, 225, 229, 232, 234, 238, 239, 242, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 295, 296, 297, 301, 308, 310, 311, 316, 325, 327, 336, 338, 349, 352, 356, 357, 363, 367, 368, 369, 378, 383, 386, 391, 400, 401, 408, 410, 411, 414, 415, 417, 418, 419, 422, 423, 424, 427, 428, 429, 432, 437, 440, 441, 442, 444, 446, 447, 449, 450, 451, 452, 458, 464, 467, 470, 471, 473, 474, 475, 476, 477, 478, 489, 511, 513, 517, 518, 519, 523, 529, 530, 531, 534, 538, 539, 540, 542, 555, 556, 558, 559, 566, 567, 570, 571, 572, 573, 575, 578, 581, 584, 590, 591, 592, 599, 604, 611, 618, 619, 624, 631, 632, 633, 634, 635, 636, 642, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 664, 667, 681, 682, 683, 684, 685, 686, 687, 691, 692, 696, 698, 699, 700, 704, 705, 706, 707, 709, 725, 727, 728, 743, 748, 756, 759, 760, 761, 766, 767, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 786, 787, 789, 790, 794, 795, 796, 797, 798, 801, 803, 805, 806, 809, 816, 821, 824, 831, 833, 835, 836, 839, 841, 847, 851, 852, 855, 857, 858, 861, 862, 864, 876], "easi": [4, 131, 161, 165, 181, 187, 190, 198, 203, 206, 213, 215, 239, 272, 359, 414, 831, 833, 835, 841, 852, 853, 855, 858], "identifi": [4, 12, 13, 27, 32, 33, 34, 76, 83, 133, 136, 145, 150, 168, 190, 194, 197, 203, 205, 221, 224, 242, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 310, 326, 333, 371, 411, 418, 460, 476, 477, 478, 482, 556, 560, 564, 570, 583, 593, 743, 752, 763, 801, 805, 806, 835, 851, 852, 855, 858, 861, 876], "while": [4, 10, 26, 45, 73, 75, 81, 85, 105, 125, 133, 136, 140, 141, 142, 143, 149, 150, 157, 159, 165, 171, 177, 178, 187, 197, 198, 203, 205, 206, 208, 215, 221, 224, 228, 232, 239, 242, 260, 261, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 295, 296, 352, 356, 357, 367, 368, 369, 408, 414, 415, 416, 425, 442, 451, 452, 471, 473, 474, 476, 477, 504, 526, 534, 556, 557, 568, 569, 572, 573, 576, 696, 699, 723, 724, 726, 727, 767, 773, 777, 781, 783, 790, 796, 799, 809, 831, 833, 835, 838, 852, 857, 858, 864, 876], "low": [4, 5, 11, 19, 45, 47, 59, 69, 73, 79, 80, 81, 82, 92, 108, 112, 133, 140, 142, 150, 165, 166, 179, 182, 187, 190, 194, 198, 201, 203, 208, 209, 210, 224, 226, 228, 233, 242, 254, 257, 260, 261, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 303, 352, 357, 410, 416, 419, 421, 443, 444, 446, 476, 477, 484, 487, 500, 523, 556, 561, 564, 568, 569, 572, 573, 575, 576, 577, 579, 580, 588, 649, 653, 658, 689, 690, 696, 699, 724, 727, 743, 773, 796, 831, 851, 852, 855, 857, 858, 876], "hard": [4, 112, 133, 141, 203, 221, 361, 475, 476, 477, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 516, 835, 852, 853, 855, 876], "extens": [4, 12, 43, 44, 135, 139, 150, 157, 159, 169, 188, 189, 194, 214, 215, 254, 262, 263, 264, 265, 295, 296, 328, 329, 335, 415, 438, 439, 441, 476, 477, 483, 490, 493, 502, 584, 602, 611, 615, 697, 716, 743, 821, 838, 839, 851, 852, 858, 864, 876], "veri": [4, 10, 44, 45, 50, 60, 63, 68, 69, 78, 81, 112, 131, 133, 140, 143, 150, 156, 159, 167, 171, 180, 198, 200, 201, 202, 203, 204, 205, 208, 221, 224, 233, 239, 295, 318, 432, 476, 682, 831, 835, 838, 853, 858], "ll": [4, 7, 10, 19, 26, 34, 54, 59, 69, 112, 113, 114, 115, 118, 125, 133, 134, 135, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 155, 157, 159, 161, 165, 166, 167, 169, 170, 171, 178, 179, 180, 189, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 213, 214, 215, 216, 219, 221, 225, 228, 234, 237, 238, 835, 843, 855], "begin": [4, 19, 72, 91, 133, 150, 155, 165, 167, 168, 170, 171, 174, 187, 190, 193, 197, 199, 200, 201, 202, 203, 204, 205, 210, 215, 219, 239, 256, 257, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 281, 285, 357, 437, 450, 476, 477, 502, 516, 529, 539, 540, 556, 559, 572, 573, 575, 576, 579, 584, 614, 615, 663, 696, 699, 700, 709, 776, 787, 788, 790, 797, 803, 829, 835, 840, 858, 861, 876], "littl": [4, 159, 170, 187, 200, 201, 203, 204, 221, 239, 838, 858], "you": [4, 24, 27, 28, 32, 41, 43, 47, 50, 59, 60, 77, 80, 81, 86, 101, 107, 111, 112, 113, 114, 115, 117, 118, 119, 125, 131, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 157, 158, 159, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 176, 177, 179, 180, 181, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 213, 214, 215, 216, 219, 221, 224, 226, 227, 229, 232, 234, 237, 238, 239, 242, 254, 255, 256, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 281, 287, 289, 295, 296, 311, 316, 326, 327, 328, 351, 352, 356, 357, 360, 361, 367, 368, 369, 374, 386, 408, 414, 415, 425, 432, 435, 441, 443, 449, 451, 452, 460, 467, 471, 473, 474, 476, 477, 478, 488, 492, 499, 521, 523, 534, 555, 556, 572, 575, 577, 585, 602, 608, 645, 660, 676, 691, 696, 698, 699, 700, 741, 744, 746, 759, 760, 764, 766, 773, 774, 778, 783, 786, 788, 789, 790, 796, 801, 813, 831, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 846, 850, 851, 852, 853, 854, 855, 856, 858, 859, 861, 862, 876], "first": [4, 5, 7, 10, 11, 16, 19, 21, 28, 29, 32, 38, 39, 41, 42, 43, 44, 45, 47, 63, 69, 70, 78, 81, 82, 85, 86, 88, 92, 93, 101, 102, 106, 107, 110, 111, 112, 113, 118, 125, 129, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 144, 145, 148, 149, 150, 155, 156, 158, 159, 160, 161, 165, 166, 167, 168, 170, 171, 174, 175, 176, 178, 179, 180, 181, 182, 183, 187, 189, 190, 193, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 220, 221, 224, 225, 226, 228, 229, 232, 233, 234, 237, 238, 239, 242, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 281, 282, 283, 286, 294, 295, 296, 300, 315, 320, 321, 352, 360, 361, 367, 373, 383, 408, 414, 415, 423, 431, 432, 433, 436, 437, 439, 440, 442, 446, 447, 448, 449, 450, 456, 458, 466, 475, 476, 477, 496, 499, 500, 511, 517, 518, 522, 526, 532, 533, 551, 555, 556, 557, 559, 561, 564, 566, 570, 593, 598, 610, 611, 614, 618, 629, 641, 646, 648, 649, 652, 654, 655, 670, 671, 672, 677, 681, 682, 683, 684, 686, 687, 688, 690, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 731, 733, 743, 748, 751, 759, 767, 771, 773, 774, 775, 776, 779, 780, 782, 786, 787, 788, 790, 795, 796, 797, 798, 801, 803, 805, 806, 821, 822, 831, 833, 834, 843, 851, 852, 855, 858, 861, 862, 876], "limo_epoch": 4, "column": [4, 10, 31, 92, 93, 99, 110, 139, 140, 142, 144, 150, 165, 171, 174, 187, 190, 194, 205, 208, 209, 213, 224, 225, 256, 257, 259, 262, 263, 264, 265, 267, 269, 270, 271, 273, 276, 277, 278, 297, 325, 367, 408, 415, 432, 436, 437, 449, 450, 466, 476, 477, 517, 535, 538, 551, 555, 556, 557, 602, 609, 610, 611, 618, 681, 682, 696, 698, 699, 700, 743, 775, 776, 782, 783, 786, 794, 795, 798, 803, 821, 831, 858, 861, 876], "1055": 4, "process": [4, 7, 27, 28, 32, 34, 45, 51, 59, 67, 68, 78, 82, 86, 99, 120, 133, 134, 141, 142, 143, 148, 150, 151, 154, 155, 159, 160, 161, 165, 171, 176, 181, 183, 187, 198, 199, 200, 201, 203, 204, 205, 206, 208, 210, 213, 215, 224, 225, 226, 234, 239, 242, 254, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 272, 273, 276, 277, 278, 285, 287, 289, 295, 296, 298, 352, 356, 357, 360, 367, 368, 369, 383, 391, 408, 410, 415, 416, 421, 425, 431, 432, 447, 451, 452, 471, 473, 474, 476, 477, 478, 487, 496, 529, 534, 556, 557, 566, 575, 584, 585, 592, 599, 601, 614, 645, 649, 669, 672, 683, 684, 686, 687, 696, 698, 699, 700, 723, 773, 777, 783, 796, 797, 833, 842, 843, 847, 850, 851, 852, 855, 857, 858, 861, 862, 864, 865, 866, 876], "epochsarrai": [4, 187, 219, 257, 262, 265, 359, 477, 609, 866, 876], "readi": [4, 5, 11, 13, 14, 15, 16, 18, 19, 27, 28, 29, 32, 33, 34, 42, 45, 46, 49, 61, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 81, 82, 86, 90, 91, 94, 95, 97, 98, 101, 102, 105, 107, 108, 109, 111, 112, 113, 115, 116, 119, 120, 121, 122, 127, 128, 130, 131, 133, 134, 140, 143, 145, 149, 150, 151, 155, 157, 158, 160, 161, 165, 166, 167, 168, 170, 171, 176, 179, 181, 182, 189, 194, 197, 201, 202, 203, 204, 205, 206, 207, 208, 213, 216, 219, 220, 221, 226, 227, 228, 229, 232, 234, 238, 264, 267, 273, 476, 585, 614, 624, 743, 762, 767, 835, 852], "goodb": [4, 8, 10, 12, 22, 28, 37, 38, 44, 95, 108, 109, 125, 126, 133, 136, 200, 203, 204, 209, 214, 216, 221, 224, 225, 228, 232, 233, 234, 239, 242, 254, 257, 262, 263, 264, 265, 269, 270, 272, 273, 274, 276, 277, 278, 285, 352, 358, 378, 400, 401, 429, 443, 445, 476, 477, 539, 540, 572, 573, 614, 615, 649, 677, 679, 682, 690, 696, 699, 709, 723, 724, 726, 727, 743, 767, 773, 796, 803, 835, 852, 855, 858, 876], "531": [4, 13, 128, 131, 229], "visualis": [4, 27, 29, 30, 48, 49, 50, 54, 55, 76, 83, 99, 164, 175, 209, 230, 231, 256, 262, 264, 265, 267, 316, 322, 351, 477, 504, 587, 591, 607, 687], "distribut": [4, 19, 22, 26, 46, 48, 54, 55, 59, 60, 71, 114, 144, 149, 154, 161, 164, 165, 176, 185, 186, 190, 203, 205, 224, 226, 229, 232, 233, 238, 239, 242, 259, 260, 262, 263, 264, 265, 266, 267, 271, 273, 362, 473, 476, 477, 522, 523, 534, 564, 591, 605, 614, 616, 629, 644, 648, 678, 681, 683, 684, 686, 687, 698, 700, 743, 752, 759, 771, 804, 811, 831, 840, 841, 842, 851, 852, 855, 857, 858, 876], "appear": [4, 92, 99, 133, 139, 143, 157, 167, 171, 179, 182, 190, 197, 200, 201, 206, 215, 254, 262, 263, 264, 265, 272, 429, 476, 477, 487, 511, 761, 799, 831, 835, 852, 858, 861, 876], "clearli": [4, 21, 125, 133, 143, 151, 165, 190, 201, 203, 205, 207], "group": [4, 27, 69, 107, 110, 120, 128, 133, 136, 139, 141, 142, 144, 150, 154, 159, 160, 166, 171, 177, 200, 216, 221, 224, 225, 228, 229, 233, 234, 242, 254, 262, 263, 264, 265, 267, 272, 295, 296, 312, 322, 425, 434, 435, 437, 468, 476, 477, 492, 556, 570, 645, 661, 678, 684, 687, 748, 773, 774, 779, 796, 799, 831, 835, 842, 858, 866, 876], "order": [4, 16, 18, 19, 27, 31, 34, 38, 47, 68, 69, 73, 80, 82, 86, 90, 92, 105, 109, 110, 112, 115, 119, 121, 126, 135, 142, 143, 144, 148, 155, 159, 160, 161, 164, 165, 168, 171, 176, 187, 189, 193, 197, 198, 199, 202, 203, 204, 205, 207, 208, 213, 216, 221, 229, 234, 242, 254, 255, 257, 259, 262, 263, 264, 265, 266, 267, 268, 271, 272, 286, 300, 315, 322, 339, 341, 345, 352, 359, 361, 365, 408, 410, 414, 415, 419, 429, 433, 437, 443, 444, 445, 446, 447, 452, 461, 476, 477, 483, 484, 491, 522, 529, 530, 532, 533, 547, 548, 549, 555, 556, 564, 566, 567, 568, 569, 575, 584, 598, 630, 641, 673, 678, 692, 696, 697, 698, 699, 700, 708, 709, 713, 729, 731, 733, 740, 748, 760, 773, 774, 775, 779, 782, 784, 786, 790, 791, 795, 796, 798, 799, 803, 804, 805, 833, 835, 851, 855, 858, 861, 876], "suptitl": [4, 18, 22, 37, 42, 45, 69, 72, 78, 85, 88, 101, 107, 110, 114, 118, 131, 133, 140, 143, 145, 150, 159, 175, 190, 193, 198, 200, 201, 203, 204, 205, 206, 208, 209, 224, 876], "As": [4, 38, 43, 69, 86, 92, 110, 133, 135, 139, 142, 144, 148, 149, 150, 156, 159, 165, 166, 167, 168, 169, 171, 174, 179, 187, 190, 193, 194, 197, 198, 199, 200, 202, 203, 205, 206, 208, 213, 214, 215, 216, 219, 226, 228, 234, 237, 239, 244, 416, 437, 493, 504, 570, 682, 691, 743, 767, 851, 857, 858, 861, 864, 876], "seen": [4, 12, 27, 73, 139, 142, 143, 145, 149, 150, 155, 168, 169, 194, 197, 201, 204, 205, 209, 210, 213, 216, 295, 415, 648, 649, 724, 727, 835, 858, 859, 861], "abov": [4, 21, 42, 43, 45, 49, 60, 69, 73, 74, 80, 86, 112, 114, 133, 139, 141, 143, 149, 150, 155, 159, 160, 165, 166, 167, 169, 170, 171, 174, 187, 189, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 214, 216, 219, 221, 228, 229, 239, 242, 256, 259, 262, 263, 264, 265, 267, 275, 351, 408, 410, 415, 419, 432, 438, 439, 441, 444, 446, 476, 477, 478, 484, 504, 555, 556, 558, 575, 583, 593, 683, 684, 686, 687, 696, 698, 700, 724, 727, 733, 743, 767, 774, 775, 782, 786, 788, 798, 799, 803, 805, 831, 834, 835, 840, 851, 855, 858, 859, 862], "These": [4, 27, 45, 54, 55, 60, 69, 92, 133, 136, 137, 143, 144, 146, 150, 152, 154, 157, 159, 161, 162, 164, 165, 166, 169, 171, 172, 177, 179, 185, 187, 188, 189, 191, 193, 194, 195, 199, 200, 203, 207, 209, 211, 216, 217, 221, 222, 224, 225, 230, 235, 239, 240, 253, 262, 263, 264, 265, 267, 279, 303, 304, 323, 352, 356, 357, 358, 427, 476, 477, 520, 556, 566, 575, 584, 615, 653, 658, 682, 696, 698, 699, 700, 831, 835, 842, 851, 852, 855, 857, 858, 859, 861, 864, 876], "easili": [4, 43, 44, 99, 139, 143, 148, 159, 167, 169, 187, 189, 197, 200, 203, 205, 206, 213, 214, 215, 216, 232, 239, 435, 476, 477, 575, 682, 835, 842, 851, 858, 876], "access": [4, 52, 99, 130, 133, 157, 165, 167, 168, 174, 204, 213, 215, 216, 237, 242, 255, 257, 262, 263, 266, 275, 476, 477, 608, 610, 698, 699, 700, 725, 728, 835, 841, 853, 857, 861, 876], "call": [4, 8, 9, 18, 31, 43, 44, 69, 81, 85, 86, 92, 110, 115, 126, 133, 139, 141, 143, 144, 145, 148, 149, 150, 154, 155, 157, 158, 159, 160, 165, 167, 169, 170, 171, 174, 177, 181, 189, 194, 197, 198, 200, 201, 203, 204, 208, 210, 213, 214, 215, 216, 224, 226, 228, 229, 234, 238, 239, 254, 260, 261, 262, 263, 264, 265, 268, 269, 270, 272, 273, 274, 276, 277, 278, 280, 306, 310, 352, 353, 355, 357, 358, 363, 411, 414, 418, 421, 424, 425, 429, 441, 443, 451, 464, 466, 476, 477, 484, 491, 504, 515, 518, 519, 523, 524, 525, 526, 527, 529, 530, 539, 540, 556, 561, 566, 567, 568, 569, 572, 574, 575, 584, 599, 635, 644, 647, 648, 649, 661, 666, 670, 683, 684, 685, 686, 687, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 712, 714, 715, 722, 723, 724, 725, 726, 727, 740, 741, 743, 760, 767, 773, 774, 775, 778, 781, 782, 797, 805, 831, 833, 834, 835, 839, 843, 853, 855, 857, 858, 861, 862, 866, 876], "shown": [4, 32, 52, 69, 78, 81, 92, 99, 116, 118, 125, 133, 135, 141, 148, 149, 150, 155, 157, 161, 165, 171, 179, 181, 200, 204, 209, 213, 214, 216, 229, 259, 260, 261, 262, 263, 264, 265, 269, 270, 271, 273, 276, 277, 278, 310, 408, 415, 467, 476, 477, 507, 534, 555, 556, 570, 696, 698, 699, 700, 743, 759, 760, 761, 767, 768, 770, 771, 773, 775, 777, 779, 780, 781, 782, 784, 786, 793, 795, 796, 797, 798, 799, 801, 802, 803, 804, 805, 806, 813, 858, 859, 861, 876], "below": [4, 10, 19, 43, 47, 74, 110, 112, 125, 133, 139, 150, 154, 160, 165, 167, 169, 171, 189, 193, 200, 201, 203, 204, 205, 206, 208, 209, 210, 215, 224, 229, 232, 234, 237, 239, 242, 257, 259, 260, 261, 262, 263, 264, 265, 269, 270, 273, 274, 275, 276, 277, 278, 304, 310, 358, 410, 419, 427, 435, 444, 446, 467, 476, 477, 493, 523, 556, 558, 564, 566, 648, 682, 683, 684, 686, 687, 696, 699, 743, 762, 774, 779, 783, 786, 788, 801, 806, 807, 831, 835, 841, 851, 855, 857, 858, 862, 866, 876], "also": [4, 10, 19, 21, 27, 28, 29, 30, 32, 38, 39, 41, 42, 43, 45, 47, 60, 62, 68, 69, 70, 77, 78, 79, 81, 82, 92, 93, 99, 102, 105, 107, 110, 112, 114, 115, 118, 124, 125, 133, 134, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 154, 155, 156, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 179, 180, 181, 182, 183, 187, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 214, 215, 216, 219, 221, 224, 225, 226, 228, 229, 232, 234, 237, 238, 239, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 295, 296, 302, 303, 304, 308, 310, 312, 320, 321, 325, 327, 328, 338, 345, 352, 357, 358, 364, 367, 370, 378, 385, 408, 410, 415, 420, 424, 427, 429, 432, 443, 444, 446, 447, 448, 449, 451, 458, 461, 468, 471, 473, 474, 476, 477, 484, 488, 496, 500, 515, 518, 519, 529, 530, 531, 534, 553, 555, 556, 558, 559, 565, 566, 568, 570, 571, 572, 573, 576, 577, 578, 579, 581, 590, 592, 598, 599, 606, 614, 631, 632, 635, 641, 644, 645, 652, 661, 664, 682, 683, 688, 691, 696, 698, 699, 700, 704, 705, 706, 707, 709, 724, 727, 733, 741, 743, 759, 760, 766, 767, 768, 771, 773, 774, 775, 777, 779, 780, 782, 783, 785, 786, 787, 793, 794, 795, 796, 797, 798, 799, 801, 803, 805, 807, 809, 816, 831, 833, 835, 838, 839, 840, 841, 842, 843, 850, 851, 852, 853, 855, 856, 857, 858, 859, 860, 861, 864, 866, 876], "conveni": [4, 11, 45, 69, 74, 133, 136, 141, 150, 157, 160, 165, 168, 170, 171, 180, 194, 197, 200, 204, 205, 214, 219, 224, 225, 226, 229, 232, 233, 234, 238, 242, 262, 263, 264, 265, 266, 272, 475, 476, 477, 482, 507, 529, 556, 564, 572, 573, 638, 641, 643, 686, 687, 696, 698, 699, 700, 756, 833, 835, 839, 851, 852, 858, 876], "head": [4, 5, 10, 22, 26, 41, 43, 45, 50, 69, 70, 77, 78, 99, 107, 110, 113, 116, 118, 123, 125, 133, 134, 135, 142, 144, 149, 150, 156, 158, 162, 163, 164, 165, 168, 169, 171, 174, 175, 176, 177, 179, 180, 182, 183, 184, 187, 189, 190, 197, 198, 203, 205, 206, 208, 210, 211, 212, 213, 225, 239, 242, 259, 260, 262, 263, 264, 265, 266, 267, 271, 272, 275, 300, 302, 303, 304, 305, 306, 307, 310, 313, 314, 322, 323, 326, 328, 333, 339, 340, 341, 342, 343, 345, 347, 348, 349, 350, 352, 358, 359, 361, 362, 363, 364, 371, 384, 387, 408, 415, 427, 429, 451, 458, 459, 467, 468, 469, 470, 476, 477, 481, 483, 487, 488, 489, 495, 500, 502, 506, 508, 513, 514, 515, 518, 519, 520, 555, 556, 560, 563, 565, 566, 567, 570, 575, 581, 584, 585, 604, 609, 610, 613, 616, 627, 637, 644, 645, 647, 648, 649, 653, 658, 661, 664, 691, 696, 698, 700, 730, 731, 743, 759, 760, 761, 766, 767, 771, 775, 777, 778, 779, 780, 782, 783, 785, 786, 793, 795, 797, 798, 799, 803, 805, 811, 822, 823, 824, 829, 831, 835, 852, 861, 864, 865, 866, 876], "491210": 4, "235572": 4, "043707": 4, "642398": 4, "659978": 4, "now": [4, 19, 24, 26, 32, 41, 45, 50, 69, 71, 73, 82, 85, 86, 107, 109, 110, 111, 118, 125, 132, 133, 134, 135, 136, 139, 140, 143, 144, 145, 150, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 171, 175, 177, 178, 179, 181, 182, 193, 197, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 215, 221, 226, 228, 229, 232, 233, 234, 238, 239, 260, 262, 263, 264, 265, 318, 461, 476, 477, 641, 744, 764, 771, 835, 858, 861, 876], "let": [4, 10, 18, 21, 26, 32, 47, 55, 69, 70, 72, 85, 107, 111, 119, 125, 133, 134, 135, 139, 140, 141, 143, 145, 149, 150, 151, 155, 157, 158, 159, 161, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 187, 188, 194, 197, 198, 199, 200, 201, 202, 203, 205, 207, 208, 210, 213, 221, 224, 228, 229, 232, 233, 234, 238, 239, 509, 712, 722, 744, 835, 838, 876], "closer": [4, 24, 41, 107, 140, 157, 208, 224, 259, 262, 263, 264, 265, 271, 408, 415, 476, 477, 555, 556, 570, 645, 696, 698, 700, 760, 775, 782, 786, 795, 798, 803, 805], "want": [4, 41, 50, 81, 92, 110, 113, 118, 125, 133, 134, 135, 139, 140, 141, 142, 143, 144, 148, 149, 150, 157, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 177, 179, 188, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 213, 214, 215, 219, 220, 224, 226, 228, 229, 232, 233, 239, 254, 255, 262, 263, 264, 265, 269, 273, 277, 316, 374, 432, 437, 476, 477, 556, 572, 766, 796, 801, 813, 834, 835, 838, 842, 843, 855, 856, 857, 858, 861, 862], "includ": [4, 7, 28, 37, 41, 68, 69, 80, 84, 94, 95, 97, 101, 102, 105, 108, 111, 112, 121, 130, 133, 134, 136, 139, 141, 142, 143, 145, 148, 150, 151, 154, 158, 159, 161, 165, 166, 167, 168, 169, 171, 175, 179, 181, 184, 187, 188, 189, 194, 197, 198, 199, 200, 202, 203, 204, 205, 206, 208, 209, 213, 215, 216, 219, 224, 226, 227, 228, 234, 242, 248, 253, 255, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 294, 296, 308, 311, 312, 316, 325, 327, 352, 357, 358, 365, 367, 410, 415, 424, 429, 432, 436, 437, 446, 447, 449, 461, 462, 475, 476, 477, 484, 487, 489, 491, 492, 493, 498, 502, 517, 519, 524, 526, 534, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 563, 564, 566, 567, 571, 572, 573, 575, 578, 581, 583, 584, 590, 592, 595, 599, 608, 610, 611, 614, 615, 616, 625, 664, 681, 682, 691, 695, 696, 698, 699, 700, 704, 705, 706, 707, 709, 713, 725, 727, 728, 733, 739, 743, 767, 773, 774, 775, 776, 777, 779, 780, 787, 788, 792, 796, 797, 803, 821, 831, 833, 835, 837, 838, 839, 840, 841, 842, 843, 847, 851, 852, 853, 854, 855, 857, 858, 859, 860, 861, 862, 864, 876], "tabl": [4, 41, 121, 133, 142, 143, 170, 171, 184, 188, 200, 213, 214, 237, 262, 263, 264, 265, 267, 269, 270, 272, 273, 275, 276, 277, 278, 460, 461, 476, 477, 534, 645, 743, 762, 767, 774, 801, 806, 807, 808, 812, 826, 831, 858, 861, 862, 876], "epochs_summari": 4, "describ": [4, 13, 16, 73, 97, 111, 115, 148, 150, 155, 157, 161, 164, 165, 167, 168, 169, 170, 171, 187, 193, 197, 199, 204, 205, 206, 208, 209, 214, 215, 221, 222, 225, 230, 239, 242, 264, 265, 295, 351, 352, 358, 408, 416, 429, 432, 440, 476, 477, 555, 556, 557, 584, 620, 646, 666, 667, 668, 669, 670, 671, 672, 710, 712, 715, 722, 726, 783, 789, 831, 833, 851, 855, 857, 858, 861, 864, 876], "round": [4, 37, 107, 139, 144, 148, 159, 167, 171, 193, 200, 201, 203, 204, 210, 213, 221, 239, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 437, 476, 477, 696, 699, 876], "count": [4, 22, 69, 71, 139, 170, 209, 215, 224, 228, 232, 234, 257, 262, 263, 264, 265, 295, 296, 352, 356, 357, 366, 367, 368, 369, 408, 415, 431, 451, 452, 471, 473, 474, 516, 534, 566, 607, 683, 684, 686, 687, 783, 876], "uniqu": [4, 10, 18, 99, 142, 149, 150, 165, 167, 214, 224, 229, 260, 261, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 319, 437, 466, 476, 477, 518, 556, 608, 669, 672, 696, 698, 699, 700, 724, 727, 767, 777, 858, 861, 876], "nan": [4, 68, 69, 133, 143, 208, 226, 227, 228, 229, 239, 476, 477, 504, 562, 575, 876], "top": [4, 72, 110, 113, 118, 125, 135, 139, 150, 157, 159, 160, 171, 175, 180, 198, 201, 203, 204, 205, 206, 209, 213, 215, 216, 224, 254, 262, 263, 264, 265, 270, 276, 278, 743, 744, 761, 773, 777, 806, 831, 835, 858, 861, 876], "freq": [4, 9, 21, 32, 33, 34, 67, 102, 105, 107, 110, 112, 131, 136, 165, 193, 197, 200, 201, 210, 226, 227, 228, 229, 237, 238, 239, 241, 254, 339, 341, 421, 447, 476, 477, 540, 676, 696, 697, 698, 699, 700, 710, 712, 714, 715, 720, 722, 723, 724, 725, 726, 727, 766, 784, 791, 864, 876], "std": [4, 16, 150, 190, 221, 234, 237, 238, 239, 262, 263, 264, 265, 312, 408, 415, 476, 477, 512, 696, 767, 774, 777, 780, 797], "min": [4, 9, 21, 22, 94, 95, 110, 112, 114, 135, 136, 140, 145, 156, 171, 193, 197, 203, 205, 213, 224, 225, 226, 227, 228, 229, 232, 233, 234, 259, 262, 263, 264, 265, 269, 270, 271, 273, 276, 277, 278, 319, 408, 410, 415, 419, 441, 444, 446, 476, 477, 555, 556, 568, 576, 577, 579, 588, 592, 593, 696, 698, 700, 760, 774, 775, 782, 786, 795, 796, 797, 798, 801, 803, 804, 805, 806, 816], "619": [4, 229], "852": 4, "084": 4, "875": [4, 13, 70, 83, 113, 128, 142, 181, 229, 858], "max": [4, 5, 8, 9, 19, 21, 22, 31, 32, 33, 34, 35, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 60, 79, 82, 88, 91, 92, 94, 98, 107, 110, 113, 114, 119, 133, 135, 140, 143, 149, 151, 156, 159, 161, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 193, 194, 201, 208, 213, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 253, 259, 262, 263, 264, 265, 269, 270, 271, 273, 276, 277, 278, 295, 296, 319, 356, 408, 410, 415, 419, 441, 442, 444, 446, 476, 477, 507, 532, 533, 538, 555, 556, 577, 588, 593, 683, 684, 685, 686, 687, 689, 696, 698, 700, 712, 722, 743, 751, 760, 774, 775, 778, 782, 786, 795, 797, 798, 801, 803, 804, 805, 806, 816, 863, 876], "642": [4, 59, 207, 229, 242, 474], "provid": [4, 5, 18, 19, 27, 43, 44, 65, 78, 88, 91, 92, 93, 101, 136, 139, 141, 145, 148, 149, 150, 154, 155, 159, 160, 164, 165, 166, 167, 168, 169, 170, 171, 174, 183, 184, 187, 188, 189, 194, 197, 198, 199, 200, 202, 203, 204, 205, 206, 208, 213, 214, 215, 216, 219, 221, 225, 226, 229, 242, 243, 254, 256, 257, 259, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 283, 286, 295, 296, 300, 301, 308, 311, 319, 322, 327, 351, 353, 354, 355, 356, 357, 358, 363, 367, 370, 383, 384, 387, 408, 410, 415, 424, 429, 432, 435, 446, 447, 449, 451, 461, 467, 475, 476, 477, 495, 496, 506, 507, 509, 518, 522, 543, 555, 556, 558, 559, 566, 571, 572, 573, 575, 578, 584, 590, 592, 599, 609, 613, 624, 635, 645, 646, 661, 664, 681, 682, 684, 686, 687, 690, 696, 697, 698, 699, 700, 704, 705, 706, 707, 709, 723, 724, 725, 726, 727, 728, 731, 732, 733, 740, 743, 759, 760, 762, 767, 769, 773, 774, 775, 777, 778, 779, 780, 782, 785, 786, 790, 792, 795, 796, 797, 798, 801, 803, 805, 806, 807, 831, 833, 835, 836, 838, 839, 841, 842, 847, 850, 851, 852, 853, 855, 857, 858, 859, 861, 864, 866, 876], "command": [4, 121, 133, 150, 154, 157, 159, 170, 184, 188, 262, 263, 267, 358, 467, 476, 477, 513, 556, 637, 773, 790, 796, 833, 834, 838, 839, 840, 841, 842, 843, 847, 851, 853, 866, 876], "ran": [4, 229, 267], "befor": [4, 5, 21, 24, 26, 41, 44, 45, 50, 61, 67, 69, 80, 84, 86, 88, 92, 117, 125, 133, 135, 136, 139, 140, 141, 142, 143, 144, 148, 150, 155, 156, 157, 159, 160, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 179, 180, 182, 183, 184, 187, 190, 194, 197, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 221, 237, 239, 254, 255, 257, 259, 262, 263, 264, 265, 267, 269, 270, 272, 273, 274, 276, 277, 278, 295, 312, 339, 357, 360, 368, 369, 408, 414, 415, 417, 420, 432, 438, 439, 440, 441, 442, 443, 449, 450, 452, 476, 477, 516, 529, 530, 532, 533, 539, 540, 555, 556, 559, 568, 569, 572, 573, 575, 576, 599, 607, 614, 619, 652, 653, 654, 655, 656, 658, 660, 682, 683, 684, 686, 687, 691, 697, 698, 700, 760, 769, 774, 775, 777, 779, 781, 782, 787, 788, 789, 794, 797, 813, 826, 833, 843, 851, 852, 855, 857, 858, 861, 876], "There": [4, 73, 81, 118, 125, 140, 143, 150, 155, 157, 158, 165, 169, 170, 171, 176, 179, 189, 197, 199, 200, 201, 203, 204, 208, 210, 213, 215, 224, 237, 262, 400, 432, 556, 591, 645, 835, 839, 842, 852, 855, 856, 858, 860, 861], "subdivid": [4, 159, 160, 254, 269, 273, 277, 382, 644, 801, 876], "particular": [4, 27, 124, 133, 139, 140, 154, 165, 167, 171, 174, 193, 194, 200, 203, 204, 213, 226, 234, 254, 256, 262, 263, 272, 301, 425, 452, 476, 477, 484, 619, 676, 683, 684, 686, 687, 773, 796, 833, 855, 857, 858, 859, 864], "addit": [4, 34, 42, 45, 60, 61, 69, 74, 80, 110, 112, 133, 134, 139, 141, 144, 149, 151, 155, 159, 160, 161, 165, 169, 187, 188, 189, 190, 193, 194, 199, 200, 203, 204, 205, 206, 208, 213, 215, 216, 219, 229, 239, 254, 259, 262, 263, 264, 265, 269, 270, 273, 274, 275, 276, 277, 278, 333, 351, 352, 357, 383, 408, 409, 410, 413, 415, 416, 419, 429, 432, 439, 441, 446, 476, 477, 482, 523, 524, 525, 526, 527, 529, 530, 536, 539, 540, 553, 554, 555, 556, 557, 568, 569, 585, 614, 640, 650, 682, 683, 684, 686, 687, 695, 696, 698, 699, 700, 715, 723, 724, 726, 727, 743, 756, 760, 773, 775, 777, 782, 788, 794, 796, 798, 801, 803, 805, 806, 835, 838, 839, 841, 842, 851, 852, 854, 855, 858, 861, 862, 864, 876], "valu": [4, 5, 7, 8, 9, 10, 16, 19, 21, 22, 24, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 58, 59, 68, 70, 88, 91, 92, 94, 99, 101, 102, 107, 110, 112, 118, 119, 125, 129, 130, 133, 134, 135, 136, 139, 140, 141, 142, 143, 145, 148, 149, 150, 151, 155, 159, 161, 165, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 199, 200, 201, 203, 204, 205, 208, 209, 210, 213, 215, 219, 220, 221, 224, 225, 226, 228, 229, 232, 233, 234, 237, 238, 242, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 280, 281, 285, 286, 295, 296, 298, 300, 304, 307, 308, 312, 319, 323, 325, 327, 328, 346, 347, 352, 353, 355, 356, 357, 358, 363, 366, 367, 368, 369, 373, 383, 400, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 427, 429, 430, 432, 436, 437, 441, 442, 446, 447, 448, 449, 450, 451, 452, 453, 456, 461, 464, 466, 467, 468, 471, 473, 474, 476, 477, 478, 484, 486, 491, 498, 500, 504, 509, 511, 512, 513, 515, 516, 518, 519, 520, 522, 523, 527, 529, 530, 531, 532, 533, 534, 537, 539, 540, 544, 555, 556, 557, 558, 559, 561, 562, 565, 568, 569, 570, 571, 572, 573, 575, 577, 578, 581, 582, 590, 592, 593, 595, 599, 601, 607, 611, 614, 618, 627, 634, 638, 640, 641, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 669, 672, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 690, 691, 692, 694, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 714, 715, 723, 724, 725, 726, 727, 731, 732, 733, 743, 746, 752, 759, 760, 762, 765, 767, 768, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 786, 787, 794, 795, 796, 797, 798, 801, 803, 804, 805, 806, 807, 808, 813, 816, 829, 831, 835, 851, 852, 855, 858, 861, 876], "z": [4, 5, 11, 16, 18, 24, 41, 45, 50, 126, 150, 155, 157, 158, 159, 168, 169, 174, 175, 179, 180, 182, 183, 184, 188, 200, 204, 206, 242, 259, 262, 263, 264, 265, 266, 270, 271, 276, 278, 303, 304, 310, 322, 333, 342, 343, 408, 415, 427, 476, 477, 488, 523, 555, 556, 561, 565, 570, 575, 616, 648, 649, 696, 698, 700, 733, 734, 736, 743, 760, 767, 773, 775, 777, 779, 782, 783, 785, 786, 790, 793, 795, 796, 797, 798, 799, 803, 805, 811, 812, 823, 831, 841, 858, 876], "score": [4, 7, 8, 9, 10, 11, 13, 15, 16, 18, 19, 73, 81, 136, 171, 193, 194, 203, 208, 272, 408, 411, 412, 414, 415, 418, 425, 556, 561, 570, 575, 652, 683, 684, 686, 687, 789, 812, 852, 855, 876], "thei": [4, 5, 26, 41, 45, 47, 50, 69, 70, 73, 80, 81, 92, 105, 112, 117, 133, 139, 140, 141, 143, 148, 150, 151, 157, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 175, 179, 180, 181, 187, 189, 190, 194, 197, 198, 199, 200, 201, 203, 204, 205, 208, 209, 210, 213, 214, 215, 216, 229, 232, 242, 255, 257, 262, 263, 264, 265, 267, 272, 295, 305, 307, 322, 323, 332, 352, 359, 361, 429, 431, 437, 441, 443, 450, 476, 477, 484, 491, 496, 498, 500, 516, 532, 533, 545, 556, 567, 574, 575, 584, 599, 607, 608, 610, 641, 699, 738, 743, 760, 776, 777, 780, 826, 831, 833, 835, 838, 842, 851, 853, 857, 858, 876], "have": [4, 10, 19, 30, 31, 34, 35, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 69, 70, 73, 77, 78, 81, 82, 84, 85, 88, 92, 93, 99, 101, 102, 110, 113, 114, 115, 117, 118, 125, 129, 132, 133, 134, 136, 139, 141, 142, 143, 144, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 177, 178, 180, 181, 182, 187, 188, 189, 190, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 228, 229, 232, 234, 237, 239, 253, 254, 255, 257, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 289, 290, 293, 295, 296, 304, 312, 315, 318, 328, 351, 352, 356, 357, 358, 363, 367, 368, 369, 400, 408, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 427, 428, 429, 432, 433, 442, 443, 448, 451, 452, 458, 466, 468, 471, 473, 474, 475, 476, 477, 484, 487, 488, 491, 493, 496, 499, 515, 517, 525, 527, 530, 534, 542, 551, 555, 556, 557, 566, 567, 570, 572, 573, 574, 575, 577, 584, 602, 604, 614, 633, 635, 638, 641, 646, 647, 648, 649, 650, 661, 666, 670, 678, 682, 696, 697, 698, 699, 700, 715, 716, 723, 724, 733, 743, 747, 748, 760, 766, 767, 773, 774, 775, 777, 780, 782, 783, 786, 795, 797, 798, 803, 804, 805, 809, 813, 824, 826, 831, 833, 836, 840, 841, 843, 847, 852, 853, 856, 857, 858, 861, 862, 864, 876], "standard": [4, 8, 28, 34, 41, 44, 46, 69, 73, 81, 92, 107, 119, 133, 134, 140, 148, 149, 150, 154, 158, 159, 168, 169, 170, 181, 190, 193, 194, 198, 200, 203, 206, 213, 219, 225, 234, 238, 242, 254, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 275, 276, 277, 278, 285, 310, 312, 321, 326, 328, 386, 408, 415, 417, 428, 441, 442, 457, 461, 464, 476, 477, 484, 488, 491, 500, 504, 523, 539, 540, 550, 555, 556, 575, 610, 617, 641, 645, 678, 681, 696, 698, 699, 700, 708, 709, 743, 760, 761, 767, 768, 774, 775, 777, 782, 783, 786, 788, 795, 798, 801, 803, 804, 805, 807, 831, 833, 851, 852, 853, 855, 858, 861, 864, 866, 876], "deviat": [4, 54, 55, 88, 95, 98, 119, 149, 150, 177, 194, 203, 207, 224, 226, 238, 259, 262, 263, 264, 265, 285, 312, 408, 538, 539, 540, 556, 575, 658, 678, 696, 698, 699, 700, 767, 768, 774, 777, 783, 786, 788, 803, 804, 831, 858, 876], "how": [4, 5, 9, 10, 13, 18, 19, 22, 26, 27, 31, 33, 43, 44, 45, 47, 58, 62, 64, 66, 67, 68, 69, 70, 74, 77, 88, 92, 93, 96, 97, 103, 111, 114, 115, 118, 120, 122, 123, 125, 127, 128, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 154, 155, 156, 157, 158, 160, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 179, 180, 181, 182, 187, 189, 193, 194, 199, 200, 201, 202, 203, 204, 206, 207, 209, 213, 214, 216, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 234, 237, 238, 239, 242, 255, 257, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 273, 275, 276, 277, 278, 295, 296, 306, 310, 311, 336, 340, 346, 358, 363, 364, 365, 371, 408, 414, 415, 420, 435, 450, 452, 466, 467, 471, 473, 474, 476, 477, 481, 489, 496, 497, 500, 507, 523, 532, 533, 534, 555, 556, 559, 567, 575, 584, 585, 626, 627, 628, 629, 637, 641, 644, 645, 683, 684, 686, 687, 694, 696, 697, 698, 699, 700, 715, 743, 744, 751, 759, 760, 761, 764, 767, 769, 773, 774, 775, 778, 782, 786, 787, 788, 789, 795, 796, 798, 801, 802, 803, 805, 806, 811, 813, 831, 833, 835, 836, 843, 851, 852, 857, 858, 859, 861, 862, 864, 876], "onli": [4, 8, 10, 11, 12, 19, 21, 22, 31, 34, 39, 41, 44, 45, 47, 49, 50, 55, 63, 69, 73, 77, 80, 81, 86, 88, 91, 92, 93, 94, 95, 101, 105, 107, 110, 112, 113, 114, 115, 118, 125, 129, 131, 135, 136, 139, 140, 141, 142, 148, 149, 150, 156, 157, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 177, 179, 182, 187, 188, 189, 190, 194, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 213, 214, 215, 216, 219, 220, 221, 224, 226, 227, 228, 229, 232, 233, 234, 238, 239, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 301, 302, 303, 304, 305, 306, 307, 310, 311, 312, 314, 315, 316, 317, 319, 320, 321, 323, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 427, 429, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 456, 458, 459, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 518, 519, 520, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 549, 552, 553, 554, 555, 556, 558, 559, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 591, 592, 593, 596, 597, 598, 599, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 616, 618, 619, 620, 621, 622, 624, 626, 627, 628, 629, 630, 631, 632, 633, 635, 636, 637, 638, 641, 643, 644, 645, 647, 648, 649, 650, 659, 660, 661, 662, 664, 666, 667, 668, 669, 670, 671, 672, 673, 682, 683, 684, 685, 686, 687, 691, 692, 693, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 714, 715, 718, 719, 723, 724, 725, 726, 727, 728, 729, 732, 733, 738, 742, 743, 751, 759, 760, 761, 762, 764, 767, 768, 771, 773, 775, 776, 777, 778, 779, 781, 782, 783, 784, 785, 786, 787, 788, 790, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 812, 816, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 833, 835, 842, 851, 852, 855, 856, 857, 858, 859, 861, 876], "500": [4, 10, 11, 13, 22, 69, 78, 79, 84, 86, 114, 134, 140, 142, 144, 180, 183, 189, 193, 194, 200, 203, 207, 209, 210, 221, 224, 229, 556], "ts_arg": [4, 99, 126, 194, 209, 225, 262, 263, 264, 265, 556, 774, 780, 788, 876], "xlim": [4, 19, 37, 39, 95, 125, 159, 180, 193, 200, 201, 209, 210, 221, 224, 234, 239, 264, 265, 777, 779], "plot_joint": [4, 70, 99, 149, 150, 165, 179, 181, 194, 197, 203, 205, 209, 225, 238, 264, 265, 696, 862, 876], "15": [4, 5, 9, 11, 12, 13, 19, 20, 21, 22, 25, 28, 29, 32, 33, 34, 35, 42, 43, 45, 47, 50, 51, 61, 66, 67, 68, 69, 70, 72, 74, 75, 78, 79, 81, 90, 91, 92, 101, 106, 107, 110, 112, 125, 133, 135, 136, 140, 141, 142, 144, 150, 154, 156, 161, 165, 167, 168, 169, 170, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 189, 190, 193, 194, 198, 199, 201, 202, 203, 205, 206, 207, 208, 209, 212, 213, 219, 224, 225, 226, 228, 229, 232, 233, 234, 236, 237, 242, 260, 262, 263, 264, 265, 269, 270, 271, 272, 273, 275, 276, 277, 278, 282, 316, 367, 410, 419, 444, 446, 447, 448, 473, 476, 477, 504, 556, 559, 568, 569, 629, 660, 680, 685, 695, 698, 700, 715, 725, 726, 728, 747, 758, 759, 773, 781, 801, 806, 831, 838, 851, 852, 858], "titl": [4, 8, 9, 15, 16, 19, 22, 30, 35, 39, 42, 43, 44, 46, 47, 48, 49, 50, 54, 55, 59, 68, 69, 70, 75, 80, 84, 88, 92, 99, 101, 105, 106, 107, 108, 112, 118, 121, 123, 125, 130, 133, 136, 140, 141, 143, 145, 150, 151, 159, 171, 174, 175, 176, 178, 179, 193, 194, 198, 200, 201, 203, 204, 205, 206, 208, 210, 221, 224, 225, 226, 229, 234, 238, 239, 242, 260, 262, 263, 264, 265, 269, 272, 273, 277, 476, 477, 555, 556, 696, 698, 700, 743, 763, 766, 767, 771, 772, 773, 774, 775, 777, 779, 780, 781, 784, 786, 787, 789, 790, 791, 796, 798, 799, 801, 804, 810, 835, 850, 876], "differ": [4, 9, 16, 21, 22, 27, 28, 33, 37, 39, 44, 45, 47, 54, 55, 63, 67, 69, 76, 78, 79, 83, 92, 94, 97, 99, 101, 105, 108, 109, 110, 112, 118, 120, 121, 125, 128, 132, 133, 134, 136, 139, 141, 142, 143, 146, 148, 149, 150, 151, 155, 157, 159, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 179, 180, 182, 183, 184, 187, 188, 189, 190, 194, 197, 200, 201, 202, 203, 204, 205, 206, 208, 210, 213, 214, 215, 219, 224, 225, 226, 227, 229, 232, 233, 234, 238, 242, 256, 257, 262, 263, 264, 265, 266, 269, 270, 273, 276, 277, 278, 279, 295, 296, 297, 301, 318, 339, 352, 356, 357, 359, 361, 362, 367, 368, 369, 387, 400, 408, 415, 417, 429, 431, 432, 442, 449, 451, 452, 466, 467, 471, 473, 474, 476, 477, 484, 491, 498, 509, 516, 529, 531, 532, 533, 534, 543, 556, 558, 566, 567, 572, 575, 582, 584, 598, 601, 607, 608, 611, 615, 638, 647, 648, 649, 650, 656, 659, 660, 661, 662, 678, 683, 684, 685, 686, 687, 696, 697, 698, 699, 700, 743, 748, 759, 769, 773, 777, 781, 782, 783, 788, 790, 796, 801, 807, 822, 831, 833, 835, 839, 840, 843, 851, 852, 853, 855, 858, 861, 864, 876], "wave": [4, 46, 93, 112, 136, 143, 150, 165, 200, 205, 225, 237, 242, 262, 263, 264, 265, 400, 401, 476, 477, 506, 568, 572, 576, 698, 700, 708, 714, 852], "contrast": [4, 7, 86, 94, 97, 148, 150, 165, 169, 206, 221, 224, 225, 232, 237, 238, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 696, 699, 852, 862, 864, 876], "although": [4, 21, 65, 99, 139, 142, 148, 160, 171, 199, 200, 202, 204, 213, 260, 441, 476, 477, 678, 842, 858, 876], "shouldn": [4, 150, 242, 273, 276, 543], "expect": [4, 32, 38, 92, 112, 119, 143, 155, 158, 160, 161, 164, 165, 166, 171, 179, 189, 194, 200, 203, 204, 205, 209, 213, 214, 219, 221, 224, 228, 229, 234, 239, 262, 263, 264, 265, 328, 330, 335, 356, 476, 477, 483, 492, 495, 502, 534, 556, 584, 608, 609, 613, 624, 635, 743, 773, 783, 790, 796, 831, 833, 835, 854, 855, 857, 858, 859, 876], "great": [4, 118, 143, 150, 239, 853, 864], "among": [4, 10, 27, 36, 56, 171, 200, 224, 273, 275, 362, 533, 535, 537, 556, 575, 616, 619, 676, 743, 748, 847, 857, 876], "minu": [4, 140, 143, 226, 239, 556, 638, 681, 858, 861], "difference_wav": 4, "weight": [4, 5, 7, 11, 15, 18, 19, 21, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 54, 55, 58, 59, 60, 72, 73, 88, 92, 97, 102, 105, 106, 107, 108, 121, 136, 140, 143, 148, 150, 156, 165, 167, 175, 176, 177, 178, 179, 180, 181, 184, 187, 190, 193, 194, 198, 200, 201, 202, 204, 205, 206, 209, 220, 221, 224, 225, 227, 232, 233, 234, 242, 254, 267, 268, 273, 284, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 351, 363, 412, 413, 414, 426, 429, 452, 453, 471, 473, 474, 487, 523, 529, 530, 534, 555, 556, 582, 652, 653, 658, 659, 662, 683, 684, 686, 687, 691, 703, 706, 714, 775, 798, 831, 851, 852, 861, 862, 876], "clear": [4, 73, 111, 115, 139, 156, 198, 202, 204, 208, 210, 221, 224, 259, 262, 263, 267, 271, 286, 300, 476, 477, 522, 731, 743, 774, 835, 864, 876], "pattern": [4, 11, 17, 19, 20, 21, 27, 46, 78, 81, 110, 111, 141, 142, 160, 165, 166, 171, 193, 197, 200, 203, 204, 205, 209, 239, 242, 262, 263, 264, 265, 267, 272, 310, 326, 361, 371, 408, 412, 414, 415, 416, 423, 426, 432, 437, 458, 491, 493, 553, 557, 611, 624, 634, 635, 649, 696, 698, 699, 835, 851, 852, 858, 861, 876], "when": [4, 21, 27, 28, 31, 44, 45, 46, 47, 60, 69, 73, 74, 79, 80, 81, 82, 88, 92, 93, 101, 105, 113, 124, 125, 133, 139, 141, 142, 143, 144, 145, 148, 149, 150, 156, 157, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 177, 179, 181, 183, 187, 188, 189, 190, 194, 197, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 213, 214, 215, 216, 219, 220, 224, 226, 229, 237, 238, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 285, 295, 296, 307, 310, 314, 315, 337, 345, 346, 347, 351, 352, 356, 357, 358, 359, 361, 363, 367, 368, 369, 370, 373, 408, 415, 416, 419, 425, 427, 429, 433, 435, 437, 440, 442, 443, 444, 447, 449, 451, 452, 455, 458, 467, 471, 473, 474, 476, 477, 484, 489, 491, 492, 493, 496, 498, 500, 504, 523, 524, 525, 526, 527, 529, 530, 534, 539, 540, 542, 545, 555, 556, 558, 561, 566, 567, 570, 572, 575, 576, 578, 579, 584, 585, 599, 602, 604, 608, 610, 612, 614, 627, 633, 635, 636, 641, 645, 646, 657, 660, 683, 684, 685, 686, 687, 691, 695, 696, 697, 698, 699, 700, 702, 703, 705, 708, 714, 733, 740, 743, 751, 752, 760, 767, 771, 773, 775, 776, 777, 779, 780, 782, 783, 785, 786, 788, 790, 793, 795, 796, 797, 798, 799, 801, 802, 803, 804, 805, 806, 809, 816, 822, 824, 831, 833, 838, 839, 840, 841, 850, 851, 853, 855, 856, 857, 858, 859, 861, 862, 876], "howev": [4, 16, 21, 45, 69, 73, 74, 139, 141, 145, 148, 161, 166, 168, 169, 170, 171, 188, 189, 190, 193, 194, 198, 200, 202, 203, 204, 205, 206, 210, 213, 214, 224, 226, 228, 229, 232, 234, 239, 262, 263, 267, 295, 310, 352, 400, 429, 491, 493, 506, 523, 685, 835, 855, 857, 858, 861, 864, 876], "could": [4, 28, 29, 30, 38, 39, 41, 43, 68, 82, 102, 139, 143, 150, 159, 160, 165, 168, 170, 171, 174, 178, 179, 180, 190, 197, 199, 203, 204, 205, 206, 208, 213, 214, 215, 219, 224, 225, 232, 234, 239, 262, 263, 264, 265, 268, 273, 295, 378, 400, 401, 407, 429, 431, 435, 451, 476, 477, 478, 484, 556, 559, 573, 576, 577, 598, 746, 751, 817, 835, 855, 857, 864, 876], "narrow": [4, 197, 201, 239, 272, 876], "our": [4, 5, 19, 26, 27, 32, 42, 44, 62, 69, 73, 78, 82, 91, 101, 107, 110, 112, 113, 118, 119, 125, 133, 134, 135, 136, 139, 140, 141, 143, 144, 145, 149, 150, 155, 159, 165, 167, 170, 171, 174, 179, 180, 182, 183, 194, 197, 198, 200, 201, 203, 204, 205, 206, 208, 209, 210, 213, 214, 219, 221, 224, 226, 228, 229, 232, 233, 234, 237, 238, 239, 275, 448, 449, 531, 712, 722, 739, 834, 835, 837, 838, 839, 840, 851, 854, 855, 857, 858, 859, 863, 864, 876], "search": [4, 150, 155, 194, 242, 272, 275, 295, 411, 418, 435, 456, 559, 564, 570, 712, 722, 723, 726, 759, 835, 840, 841, 855], "bit": [4, 5, 7, 107, 125, 140, 143, 159, 170, 179, 188, 200, 202, 207, 210, 224, 232, 234, 239, 262, 263, 267, 339, 476, 477, 484, 491, 497, 695, 833, 841, 852, 858, 861, 876], "sinc": [4, 19, 32, 43, 44, 69, 92, 113, 117, 133, 134, 139, 140, 141, 143, 150, 159, 165, 166, 168, 170, 171, 174, 177, 187, 188, 190, 198, 199, 200, 201, 202, 203, 204, 205, 206, 213, 214, 215, 219, 224, 227, 232, 234, 239, 256, 257, 262, 263, 264, 265, 268, 272, 273, 276, 288, 310, 352, 356, 357, 429, 438, 439, 440, 441, 452, 464, 476, 477, 519, 543, 556, 567, 572, 575, 584, 683, 684, 685, 686, 687, 760, 787, 835, 851, 855, 858, 861, 876], "paradigm": [4, 7, 143, 161, 165, 197, 200, 776, 852, 876], "might": [4, 5, 19, 21, 69, 118, 125, 140, 143, 150, 155, 160, 161, 166, 167, 175, 194, 200, 203, 206, 224, 229, 232, 239, 269, 273, 277, 330, 432, 542, 556, 592, 683, 801, 833, 834, 835, 851, 854, 855, 858, 876], "best": [4, 5, 10, 16, 72, 81, 119, 133, 134, 141, 148, 161, 165, 175, 176, 177, 179, 193, 199, 203, 208, 221, 268, 352, 357, 416, 476, 477, 570, 652, 654, 655, 744, 835, 841, 843, 853, 854, 855, 857, 858, 861], "electrod": [4, 27, 76, 77, 83, 116, 118, 120, 128, 134, 137, 138, 140, 142, 149, 158, 160, 164, 165, 169, 185, 186, 190, 193, 197, 200, 202, 206, 208, 213, 224, 242, 259, 262, 263, 264, 265, 266, 267, 271, 273, 279, 310, 311, 314, 324, 326, 328, 329, 330, 331, 332, 333, 336, 352, 364, 365, 371, 408, 415, 449, 460, 467, 468, 476, 477, 482, 484, 486, 491, 496, 498, 519, 522, 523, 534, 555, 556, 564, 570, 581, 583, 612, 641, 696, 698, 699, 700, 732, 733, 735, 743, 744, 759, 760, 763, 765, 767, 775, 777, 779, 782, 783, 786, 793, 795, 797, 798, 799, 803, 805, 808, 811, 813, 816, 831, 851, 852, 861, 864, 876], "over": [4, 5, 8, 9, 12, 21, 27, 28, 45, 46, 58, 59, 69, 78, 79, 101, 102, 105, 107, 110, 111, 113, 120, 128, 134, 135, 136, 148, 149, 150, 158, 160, 161, 165, 168, 171, 174, 175, 190, 198, 200, 203, 205, 208, 210, 215, 216, 221, 224, 225, 228, 229, 237, 239, 242, 254, 256, 261, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 289, 290, 293, 305, 319, 340, 352, 358, 408, 415, 417, 419, 447, 450, 476, 477, 510, 525, 527, 530, 556, 560, 585, 598, 611, 645, 646, 671, 683, 692, 696, 698, 699, 700, 707, 715, 728, 743, 756, 773, 774, 775, 785, 790, 831, 835, 842, 852, 853, 855, 857, 858, 864, 876], "occipit": [4, 47, 49, 168, 202, 239, 631, 858], "lobe": [4, 47, 134, 135, 179], "ani": [4, 5, 18, 24, 27, 41, 45, 50, 74, 81, 108, 110, 115, 118, 124, 125, 133, 134, 136, 139, 140, 141, 142, 148, 150, 155, 157, 159, 160, 161, 164, 165, 166, 168, 169, 170, 171, 175, 180, 182, 183, 184, 188, 189, 194, 197, 198, 199, 200, 202, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 224, 229, 239, 242, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 272, 273, 275, 276, 277, 278, 285, 287, 289, 303, 304, 310, 317, 322, 324, 359, 363, 384, 414, 427, 430, 431, 432, 435, 442, 460, 465, 476, 477, 492, 545, 547, 548, 549, 553, 554, 556, 557, 558, 559, 572, 575, 576, 584, 591, 602, 608, 616, 624, 634, 637, 638, 641, 646, 657, 661, 682, 691, 696, 697, 698, 699, 700, 713, 743, 744, 746, 768, 773, 774, 776, 785, 788, 796, 797, 807, 813, 816, 823, 826, 831, 833, 835, 838, 852, 853, 855, 857, 858, 864, 876], "easier": [4, 133, 139, 141, 143, 149, 150, 155, 171, 190, 194, 198, 200, 203, 204, 205, 206, 256, 370, 833, 835, 876], "spot": [4, 198, 201, 228, 272, 876], "area": [4, 5, 54, 69, 92, 114, 133, 134, 177, 190, 194, 198, 203, 215, 220, 224, 228, 239, 262, 263, 264, 265, 268, 476, 477, 657, 696, 765, 767, 777, 779, 797, 816, 835, 858, 861, 876], "dictionari": [4, 10, 27, 36, 56, 59, 92, 113, 125, 135, 139, 140, 141, 143, 144, 148, 149, 150, 165, 166, 168, 187, 203, 205, 208, 213, 214, 219, 242, 254, 256, 257, 259, 262, 263, 264, 265, 266, 267, 271, 272, 273, 275, 286, 295, 296, 297, 300, 308, 310, 322, 323, 338, 352, 356, 357, 363, 366, 367, 368, 369, 371, 408, 410, 415, 419, 432, 435, 437, 440, 443, 444, 446, 447, 449, 451, 452, 468, 471, 472, 473, 474, 475, 476, 477, 508, 518, 522, 534, 556, 566, 568, 569, 570, 572, 575, 604, 611, 616, 627, 629, 632, 638, 645, 682, 696, 731, 733, 743, 766, 767, 773, 774, 776, 783, 786, 788, 796, 802, 842, 876], "concentr": [4, 189, 204, 209, 220, 413, 529, 530, 586, 591, 703, 706, 714, 775, 876], "b11": 4, "ylim": [4, 7, 9, 19, 35, 39, 40, 46, 51, 59, 97, 110, 112, 125, 150, 159, 193, 200, 202, 209, 210, 224, 234, 239, 264, 265, 767, 777, 781, 876], "do": [4, 5, 15, 16, 18, 24, 26, 27, 31, 34, 40, 41, 45, 47, 50, 51, 54, 55, 58, 59, 60, 65, 69, 73, 81, 107, 110, 112, 113, 118, 125, 133, 135, 136, 139, 140, 143, 148, 149, 150, 155, 156, 157, 158, 159, 160, 161, 165, 167, 170, 171, 174, 175, 176, 179, 181, 182, 183, 184, 187, 188, 190, 193, 194, 198, 200, 201, 203, 204, 205, 206, 207, 208, 210, 213, 215, 219, 220, 221, 224, 229, 232, 233, 234, 238, 239, 242, 254, 255, 256, 257, 259, 262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 281, 285, 301, 305, 307, 317, 324, 352, 356, 363, 367, 368, 378, 383, 400, 401, 419, 420, 421, 427, 429, 437, 442, 443, 449, 458, 466, 473, 474, 476, 477, 484, 491, 519, 523, 524, 525, 526, 527, 529, 530, 539, 540, 547, 548, 549, 553, 554, 556, 557, 558, 559, 567, 572, 573, 575, 584, 601, 604, 611, 614, 615, 633, 635, 637, 683, 684, 686, 687, 691, 696, 698, 699, 700, 713, 733, 768, 772, 784, 803, 821, 824, 826, 833, 835, 838, 840, 841, 843, 846, 851, 852, 857, 858, 861, 862, 864, 876], "pretti": [4, 140, 143, 200, 203, 205, 855], "small": [4, 5, 11, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 69, 74, 88, 91, 92, 102, 105, 106, 107, 108, 119, 125, 126, 134, 140, 141, 151, 161, 165, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 190, 194, 200, 201, 203, 205, 215, 220, 221, 224, 226, 232, 234, 254, 259, 260, 262, 263, 264, 265, 268, 271, 318, 352, 408, 415, 476, 477, 492, 555, 556, 558, 602, 608, 683, 684, 686, 687, 689, 696, 698, 700, 771, 775, 782, 786, 795, 798, 803, 831, 835, 852, 855, 858, 861, 876], "determin": [4, 22, 80, 126, 133, 140, 144, 150, 160, 165, 168, 170, 177, 189, 200, 202, 208, 213, 214, 215, 224, 227, 229, 256, 259, 260, 262, 263, 264, 265, 267, 270, 271, 276, 278, 281, 295, 296, 303, 310, 312, 339, 346, 352, 356, 357, 367, 368, 369, 383, 408, 414, 415, 425, 447, 451, 452, 471, 473, 474, 476, 477, 488, 511, 515, 534, 556, 582, 584, 589, 590, 612, 631, 688, 724, 727, 743, 771, 774, 779, 781, 782, 783, 784, 793, 800, 806, 816, 817, 855, 858, 861, 876], "whether": [4, 13, 80, 140, 143, 144, 145, 170, 177, 179, 194, 198, 203, 204, 208, 239, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 285, 295, 296, 310, 319, 320, 321, 324, 352, 357, 362, 383, 390, 408, 415, 430, 441, 449, 467, 468, 475, 476, 477, 487, 516, 523, 524, 525, 526, 527, 530, 532, 533, 534, 538, 539, 540, 555, 556, 557, 565, 570, 572, 573, 575, 576, 577, 582, 585, 599, 638, 641, 660, 661, 683, 684, 686, 687, 696, 697, 698, 699, 700, 702, 705, 708, 743, 752, 760, 764, 767, 769, 771, 772, 773, 774, 775, 777, 781, 782, 786, 788, 790, 793, 795, 796, 797, 798, 799, 801, 803, 804, 805, 806, 809, 813, 816, 835, 841, 855, 858, 861, 876], "stronger": [4, 140, 190, 226, 234, 264, 265, 777], "along": [4, 19, 46, 113, 117, 135, 139, 141, 159, 165, 167, 169, 177, 193, 194, 197, 198, 202, 203, 206, 207, 213, 215, 216, 221, 232, 259, 260, 262, 263, 264, 265, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 280, 285, 408, 411, 415, 418, 419, 421, 448, 466, 467, 473, 476, 477, 555, 556, 601, 675, 676, 683, 684, 686, 687, 690, 696, 698, 699, 700, 743, 759, 760, 767, 773, 774, 775, 778, 782, 786, 795, 798, 799, 801, 803, 804, 805, 806, 831, 833, 834, 835, 852, 858, 876], "phase_coh": 4, "get": [4, 5, 7, 15, 18, 19, 21, 22, 26, 27, 28, 34, 38, 39, 41, 47, 48, 50, 52, 60, 62, 63, 65, 66, 68, 69, 71, 78, 79, 81, 82, 92, 93, 94, 95, 101, 107, 111, 112, 114, 118, 121, 122, 125, 133, 134, 135, 139, 140, 141, 142, 143, 145, 148, 149, 150, 154, 155, 156, 157, 159, 161, 164, 165, 166, 168, 169, 172, 173, 174, 179, 180, 182, 183, 184, 197, 198, 199, 200, 201, 203, 205, 213, 215, 216, 224, 226, 228, 229, 234, 237, 238, 242, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 286, 300, 304, 308, 309, 310, 320, 321, 339, 340, 356, 363, 368, 369, 372, 375, 376, 377, 378, 380, 381, 388, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 425, 428, 432, 437, 443, 449, 457, 460, 463, 467, 476, 477, 482, 505, 513, 522, 532, 533, 545, 556, 557, 563, 565, 573, 614, 645, 646, 665, 667, 675, 688, 691, 696, 697, 698, 699, 700, 731, 743, 744, 767, 774, 776, 789, 831, 833, 834, 835, 837, 839, 840, 841, 846, 852, 853, 857, 858, 859, 861, 862, 864, 876], "sort": [4, 7, 15, 21, 27, 47, 92, 119, 120, 128, 136, 142, 159, 169, 224, 262, 263, 264, 265, 267, 272, 322, 352, 357, 416, 434, 437, 461, 492, 556, 619, 697, 699, 774, 777, 779, 826, 843, 876], "label": [4, 8, 9, 10, 11, 12, 15, 16, 18, 21, 22, 27, 28, 29, 36, 37, 44, 45, 56, 67, 69, 88, 90, 92, 93, 94, 95, 99, 103, 104, 108, 109, 110, 111, 114, 118, 124, 125, 133, 134, 136, 139, 141, 142, 143, 148, 150, 154, 159, 165, 167, 171, 175, 179, 180, 190, 194, 199, 203, 205, 208, 213, 214, 215, 225, 234, 238, 239, 242, 258, 259, 260, 262, 263, 264, 265, 267, 269, 270, 271, 273, 274, 275, 276, 277, 278, 295, 296, 358, 362, 382, 385, 408, 409, 410, 413, 415, 416, 417, 419, 425, 441, 442, 449, 454, 460, 461, 462, 466, 476, 477, 484, 487, 491, 510, 511, 522, 523, 524, 525, 526, 527, 529, 530, 532, 533, 535, 537, 539, 540, 542, 553, 555, 556, 557, 570, 601, 614, 616, 617, 618, 619, 624, 634, 635, 645, 646, 654, 659, 662, 663, 673, 692, 696, 698, 699, 700, 712, 722, 743, 748, 761, 762, 765, 767, 773, 774, 775, 776, 777, 779, 782, 786, 789, 790, 795, 796, 798, 801, 802, 803, 804, 805, 806, 825, 826, 831, 835, 864, 866, 876], "2f": [4, 59, 156, 269, 270, 273, 276, 277, 278, 556, 743, 786, 801, 806], "format": [4, 27, 34, 43, 44, 62, 66, 69, 112, 125, 134, 136, 139, 142, 148, 149, 150, 159, 164, 165, 167, 169, 170, 171, 175, 181, 187, 190, 201, 203, 204, 205, 206, 209, 213, 214, 215, 217, 224, 225, 226, 229, 254, 256, 259, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 310, 328, 329, 333, 335, 348, 349, 350, 371, 408, 415, 437, 438, 439, 440, 441, 468, 475, 476, 477, 479, 482, 484, 488, 493, 497, 545, 551, 555, 556, 570, 572, 602, 606, 611, 617, 627, 642, 643, 647, 648, 649, 661, 676, 683, 684, 686, 687, 696, 697, 698, 699, 700, 714, 717, 738, 743, 758, 760, 775, 782, 786, 795, 798, 801, 803, 805, 806, 816, 821, 829, 831, 835, 842, 847, 851, 852, 855, 861, 864, 876], "90": [4, 5, 11, 13, 19, 24, 35, 41, 42, 47, 78, 79, 88, 92, 101, 106, 107, 112, 121, 134, 135, 136, 142, 150, 155, 156, 157, 159, 168, 169, 170, 178, 183, 189, 194, 199, 201, 206, 207, 209, 224, 225, 226, 228, 229, 231, 234, 239, 242, 264, 265, 295, 296, 352, 356, 357, 367, 368, 369, 408, 413, 415, 451, 452, 471, 473, 474, 520, 529, 530, 534, 556, 645, 652, 654, 655, 656, 677, 703, 706, 714, 748, 775, 783, 852, 853, 858], "each": [4, 9, 10, 11, 15, 16, 19, 24, 28, 32, 33, 38, 41, 44, 45, 69, 78, 81, 91, 92, 93, 99, 101, 105, 106, 107, 110, 111, 113, 115, 118, 125, 126, 131, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 154, 155, 157, 159, 160, 161, 165, 166, 167, 168, 171, 174, 175, 176, 177, 179, 180, 182, 184, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 214, 215, 216, 219, 221, 224, 226, 228, 229, 232, 233, 234, 237, 239, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 284, 287, 288, 295, 296, 301, 308, 312, 315, 319, 340, 342, 343, 347, 348, 351, 352, 353, 354, 355, 356, 357, 358, 360, 363, 365, 369, 383, 400, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 424, 425, 431, 432, 433, 442, 446, 447, 448, 449, 450, 451, 452, 460, 466, 471, 473, 474, 475, 476, 477, 478, 480, 491, 499, 507, 508, 511, 513, 515, 516, 523, 527, 529, 530, 532, 533, 546, 555, 556, 557, 559, 561, 564, 570, 572, 574, 575, 583, 584, 588, 604, 608, 614, 627, 630, 638, 644, 645, 651, 652, 653, 654, 655, 656, 657, 658, 661, 662, 663, 665, 667, 676, 678, 679, 681, 683, 684, 685, 686, 687, 688, 691, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703, 715, 726, 727, 733, 743, 744, 747, 751, 759, 760, 761, 763, 764, 765, 767, 768, 769, 770, 771, 774, 775, 777, 779, 780, 781, 782, 783, 786, 794, 795, 796, 797, 798, 802, 803, 804, 805, 808, 812, 813, 816, 822, 824, 829, 831, 833, 834, 835, 841, 851, 852, 853, 855, 858, 861, 876], "zip": [4, 9, 10, 22, 27, 47, 79, 88, 105, 111, 112, 118, 125, 136, 139, 149, 159, 164, 179, 193, 198, 200, 201, 203, 204, 206, 224, 225, 226, 227, 228, 229, 234, 238, 384, 499, 835, 843], "c22": 4, "figur": [4, 5, 8, 16, 19, 22, 27, 28, 37, 38, 45, 49, 54, 55, 90, 101, 107, 109, 113, 114, 116, 120, 121, 123, 128, 134, 135, 140, 141, 143, 144, 149, 155, 157, 159, 165, 169, 175, 177, 178, 179, 182, 183, 190, 193, 194, 200, 202, 203, 205, 208, 209, 216, 221, 224, 226, 229, 234, 238, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 310, 311, 324, 408, 415, 467, 468, 476, 477, 555, 556, 570, 614, 624, 696, 697, 698, 699, 700, 723, 724, 726, 727, 743, 745, 746, 749, 752, 756, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 810, 811, 813, 833, 834, 835, 853, 855, 876], "ax": [4, 10, 11, 12, 13, 15, 19, 21, 22, 37, 39, 41, 45, 47, 58, 67, 68, 69, 70, 71, 72, 79, 80, 84, 88, 91, 94, 97, 102, 110, 111, 112, 113, 114, 118, 125, 131, 133, 134, 135, 136, 143, 144, 145, 149, 150, 155, 159, 160, 169, 171, 175, 176, 179, 180, 182, 193, 194, 197, 200, 201, 204, 205, 208, 209, 210, 216, 221, 224, 225, 226, 227, 228, 229, 237, 238, 239, 259, 260, 262, 263, 264, 265, 271, 311, 319, 324, 408, 415, 467, 476, 477, 555, 556, 696, 698, 700, 712, 722, 744, 746, 756, 759, 760, 762, 765, 766, 767, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 788, 789, 791, 792, 795, 797, 798, 799, 800, 803, 805, 858, 876], "subplot": [4, 10, 11, 12, 13, 15, 19, 21, 22, 39, 41, 45, 47, 58, 67, 68, 69, 70, 71, 72, 80, 84, 88, 91, 94, 97, 102, 105, 110, 111, 112, 113, 114, 118, 125, 133, 135, 136, 141, 143, 145, 150, 159, 169, 171, 175, 176, 179, 180, 182, 193, 194, 200, 205, 208, 209, 210, 216, 221, 224, 225, 226, 227, 228, 229, 238, 239, 259, 262, 263, 264, 265, 271, 408, 415, 476, 477, 555, 556, 696, 698, 700, 712, 722, 743, 765, 766, 775, 776, 781, 782, 786, 791, 795, 798, 803, 805, 808, 876], "figsiz": [4, 12, 15, 19, 22, 45, 47, 69, 72, 94, 110, 111, 112, 113, 118, 125, 133, 135, 143, 159, 175, 182, 193, 200, 205, 208, 209, 221, 224, 225, 227, 228, 229, 238, 239, 556, 788, 789], "8": [4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 19, 20, 21, 22, 26, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 58, 59, 61, 63, 64, 66, 67, 69, 70, 73, 74, 75, 78, 79, 81, 83, 86, 88, 90, 92, 94, 99, 100, 101, 102, 104, 106, 107, 108, 110, 111, 112, 114, 118, 119, 121, 125, 128, 133, 134, 135, 136, 139, 141, 142, 143, 144, 145, 147, 149, 150, 151, 155, 157, 158, 159, 161, 163, 165, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 192, 193, 194, 196, 197, 199, 200, 203, 205, 206, 207, 208, 209, 210, 212, 218, 219, 220, 221, 224, 225, 226, 228, 229, 232, 233, 234, 236, 238, 239, 241, 242, 262, 263, 264, 265, 272, 275, 295, 296, 312, 378, 407, 408, 429, 452, 471, 473, 474, 476, 477, 484, 491, 492, 500, 534, 539, 556, 557, 564, 567, 572, 575, 584, 602, 608, 610, 695, 698, 700, 724, 727, 743, 766, 772, 774, 775, 779, 799, 833, 834, 835, 851, 852, 858, 861], "20": [4, 5, 9, 11, 12, 14, 15, 19, 22, 28, 33, 34, 35, 37, 45, 46, 47, 48, 54, 55, 59, 60, 61, 69, 73, 75, 79, 80, 86, 88, 98, 101, 102, 105, 106, 107, 110, 111, 112, 113, 114, 119, 125, 126, 131, 136, 138, 139, 141, 142, 149, 150, 151, 156, 158, 165, 168, 169, 170, 171, 175, 176, 178, 180, 182, 183, 184, 190, 193, 194, 197, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 213, 216, 219, 221, 224, 225, 226, 228, 229, 233, 234, 237, 239, 241, 242, 243, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 295, 296, 306, 310, 315, 322, 328, 339, 340, 341, 342, 343, 345, 358, 363, 407, 408, 415, 433, 443, 451, 471, 473, 474, 476, 477, 484, 512, 516, 523, 524, 525, 526, 530, 534, 538, 539, 540, 548, 555, 556, 565, 570, 575, 582, 606, 611, 641, 644, 645, 660, 662, 684, 685, 696, 697, 698, 699, 700, 713, 747, 759, 760, 761, 767, 772, 773, 775, 777, 778, 779, 781, 782, 783, 786, 793, 795, 796, 797, 798, 799, 801, 803, 805, 806, 834, 851, 852, 855, 858], "cmap": [4, 9, 10, 13, 15, 16, 19, 22, 41, 69, 98, 99, 105, 107, 110, 112, 113, 114, 118, 133, 135, 142, 159, 181, 193, 194, 208, 224, 226, 227, 228, 229, 238, 259, 262, 263, 264, 265, 271, 408, 415, 476, 477, 555, 556, 570, 696, 697, 698, 700, 758, 760, 767, 769, 774, 775, 779, 782, 785, 786, 795, 798, 803, 804, 805], "magma": 4, "consider": [4, 79, 97, 150, 199, 200, 203, 210, 220, 229, 242, 272, 682, 842, 858, 864, 876], "chosen": [4, 45, 136, 144, 150, 197, 200, 202, 203, 205, 237, 256, 259, 262, 263, 264, 265, 270, 271, 275, 276, 278, 356, 408, 410, 415, 419, 421, 444, 446, 447, 466, 476, 477, 509, 531, 555, 556, 570, 582, 601, 648, 649, 683, 684, 686, 687, 696, 697, 698, 699, 700, 743, 759, 760, 769, 773, 775, 779, 782, 786, 789, 795, 796, 797, 798, 799, 803, 805, 858], "test": [4, 8, 10, 13, 15, 16, 19, 26, 27, 88, 93, 96, 100, 110, 121, 126, 134, 139, 150, 164, 167, 170, 171, 187, 193, 194, 207, 208, 213, 225, 226, 227, 230, 231, 234, 235, 236, 239, 242, 262, 263, 264, 265, 267, 273, 274, 275, 287, 289, 295, 316, 358, 383, 411, 412, 425, 429, 431, 447, 476, 477, 485, 504, 507, 522, 523, 531, 537, 547, 553, 556, 575, 584, 611, 624, 626, 668, 674, 676, 678, 680, 683, 684, 685, 686, 687, 688, 689, 690, 696, 698, 699, 700, 726, 743, 751, 764, 767, 775, 782, 789, 803, 833, 836, 839, 840, 855, 858, 864, 876], "interpol": [4, 15, 24, 27, 32, 60, 69, 76, 83, 85, 88, 91, 92, 93, 117, 133, 134, 135, 150, 176, 180, 187, 194, 203, 208, 221, 224, 237, 259, 262, 263, 264, 265, 271, 275, 277, 278, 408, 415, 442, 465, 476, 477, 555, 556, 570, 574, 578, 583, 614, 645, 647, 648, 649, 661, 696, 698, 700, 732, 743, 760, 775, 782, 786, 795, 798, 803, 805, 842, 876], "miss": [4, 44, 68, 82, 133, 134, 150, 157, 158, 179, 182, 187, 189, 200, 206, 239, 262, 263, 264, 265, 267, 275, 314, 337, 384, 400, 414, 476, 477, 484, 491, 496, 547, 584, 682, 776, 777, 831, 835, 839, 840, 842, 843, 861, 864, 876], "drop": [4, 8, 9, 11, 12, 16, 18, 21, 32, 33, 34, 42, 46, 49, 70, 71, 94, 95, 98, 101, 105, 108, 110, 111, 112, 115, 119, 126, 134, 135, 136, 140, 141, 143, 144, 145, 150, 151, 161, 165, 166, 171, 176, 179, 181, 182, 184, 190, 197, 198, 199, 202, 203, 205, 206, 209, 215, 220, 221, 226, 227, 228, 229, 232, 234, 238, 256, 257, 259, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 312, 315, 433, 434, 441, 465, 476, 477, 489, 556, 568, 569, 572, 585, 608, 610, 638, 696, 697, 698, 699, 700, 772, 773, 786, 788, 835, 838, 858, 876], "furthermor": [4, 154, 174, 177, 188, 202, 851, 858, 861], "mark": [4, 8, 11, 49, 73, 77, 81, 90, 91, 109, 118, 124, 125, 134, 136, 141, 143, 149, 150, 165, 168, 169, 171, 177, 188, 189, 190, 199, 200, 203, 204, 206, 207, 208, 209, 213, 215, 216, 229, 242, 255, 257, 262, 263, 264, 265, 312, 369, 378, 385, 400, 401, 465, 467, 475, 476, 477, 555, 556, 561, 564, 570, 574, 575, 583, 584, 592, 599, 608, 610, 638, 696, 698, 699, 700, 739, 763, 773, 775, 782, 787, 789, 796, 797, 803, 831, 835, 852, 853, 876], "exg": 4, "prefix": [4, 73, 154, 169, 174, 254, 259, 262, 263, 264, 265, 271, 353, 354, 408, 415, 468, 476, 477, 484, 491, 492, 555, 556, 570, 608, 696, 698, 700, 760, 782, 786, 795, 798, 803, 831], "interpolate_bad": [4, 69, 77, 198, 262, 263, 264, 265, 465, 476, 477, 858, 876], "reset_bad": [4, 77, 198, 262, 263, 264, 265, 476, 477, 858], "drop_channel": [4, 42, 69, 135, 139, 148, 213, 229, 262, 263, 264, 265, 476, 477, 696, 698, 699, 700, 862, 876], "exg1": 4, "exg2": 4, "exg3": 4, "exg4": 4, "radiu": [4, 5, 24, 26, 41, 45, 50, 69, 70, 77, 78, 91, 92, 107, 133, 150, 155, 157, 158, 169, 175, 180, 181, 182, 183, 184, 198, 205, 206, 208, 220, 259, 262, 263, 264, 265, 271, 300, 303, 310, 324, 326, 328, 408, 415, 428, 466, 476, 477, 509, 520, 538, 555, 556, 565, 570, 645, 648, 691, 696, 698, 700, 760, 767, 775, 777, 779, 782, 783, 786, 793, 795, 797, 798, 799, 803, 805, 858, 876], "95": [4, 5, 7, 13, 19, 34, 47, 50, 69, 74, 78, 79, 88, 94, 107, 110, 111, 112, 119, 133, 135, 141, 142, 144, 145, 150, 155, 157, 159, 168, 178, 183, 193, 194, 199, 207, 208, 209, 224, 225, 228, 229, 242, 262, 263, 264, 265, 556, 570, 656, 675, 696, 767, 783, 788, 804, 858], "113": [4, 35, 110, 168, 207, 208, 212, 214, 224, 228, 229, 242], "524face": 4, "To": [4, 5, 11, 18, 19, 22, 33, 44, 45, 86, 88, 92, 93, 111, 114, 125, 131, 133, 136, 139, 141, 143, 145, 148, 149, 150, 155, 157, 158, 159, 160, 165, 167, 168, 169, 170, 171, 174, 177, 179, 183, 187, 189, 190, 193, 194, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 215, 216, 219, 221, 224, 226, 228, 229, 233, 234, 238, 254, 256, 257, 262, 263, 264, 265, 268, 272, 277, 278, 295, 296, 352, 356, 357, 414, 421, 432, 438, 439, 440, 441, 443, 449, 476, 477, 484, 489, 505, 509, 513, 519, 556, 572, 575, 577, 581, 582, 584, 599, 601, 616, 642, 645, 648, 649, 650, 656, 659, 660, 662, 683, 684, 685, 686, 687, 689, 702, 705, 721, 723, 724, 725, 726, 727, 728, 741, 743, 760, 773, 786, 788, 790, 796, 807, 808, 823, 833, 834, 835, 838, 839, 840, 841, 843, 850, 851, 852, 853, 855, 857, 858, 862, 876], "predict": [4, 10, 12, 13, 15, 16, 17, 20, 27, 42, 99, 136, 140, 175, 193, 194, 242, 267, 295, 310, 326, 371, 411, 412, 414, 418, 420, 425, 448, 477, 524, 531, 805, 852, 876], "brain": [4, 5, 7, 8, 10, 11, 15, 19, 21, 22, 24, 26, 27, 28, 29, 31, 32, 33, 35, 38, 40, 41, 42, 43, 44, 46, 54, 58, 59, 60, 69, 80, 86, 92, 102, 107, 113, 120, 124, 128, 133, 134, 145, 150, 154, 155, 157, 159, 161, 169, 174, 175, 176, 177, 178, 180, 181, 183, 187, 188, 189, 190, 194, 197, 202, 203, 205, 206, 221, 224, 232, 233, 234, 239, 242, 253, 254, 260, 262, 263, 264, 265, 267, 269, 270, 273, 274, 275, 276, 277, 278, 288, 295, 296, 301, 329, 358, 370, 378, 408, 414, 416, 442, 447, 460, 474, 476, 477, 486, 496, 511, 515, 520, 522, 523, 537, 543, 553, 554, 557, 561, 571, 581, 583, 606, 614, 624, 629, 634, 645, 661, 685, 696, 698, 699, 700, 752, 754, 757, 759, 761, 762, 765, 771, 801, 802, 806, 807, 811, 813, 816, 831, 833, 835, 836, 841, 842, 851, 852, 855, 858, 863, 864, 866, 876], "purpos": [4, 8, 11, 12, 21, 111, 139, 140, 148, 155, 167, 179, 188, 197, 198, 199, 200, 203, 204, 206, 228, 232, 234, 239, 242, 262, 263, 375, 376, 377, 378, 380, 381, 383, 388, 391, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 419, 421, 476, 477, 759, 773, 796, 831, 842, 851, 852, 857, 860, 861, 862], "intercept": [4, 99, 681], "predictor_var": 4, "where": [4, 10, 13, 31, 45, 67, 69, 73, 79, 80, 81, 88, 92, 93, 99, 110, 133, 136, 139, 140, 141, 143, 148, 150, 154, 159, 164, 165, 166, 167, 168, 169, 171, 174, 181, 182, 183, 187, 189, 190, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 213, 215, 219, 220, 221, 224, 226, 228, 229, 232, 233, 234, 239, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 269, 270, 271, 272, 273, 275, 276, 277, 278, 317, 319, 320, 321, 333, 351, 370, 375, 376, 377, 378, 380, 381, 383, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 415, 421, 423, 442, 444, 447, 449, 468, 476, 477, 509, 531, 555, 556, 558, 565, 570, 572, 573, 574, 584, 646, 652, 653, 654, 655, 656, 658, 660, 661, 676, 677, 682, 683, 684, 686, 687, 696, 698, 699, 700, 724, 727, 743, 748, 760, 761, 764, 765, 766, 773, 774, 775, 782, 786, 795, 796, 797, 798, 803, 805, 809, 831, 835, 836, 838, 839, 840, 841, 851, 852, 855, 857, 858, 861, 876], "func": [4, 208, 269, 270, 273, 276, 277, 278, 484, 491, 498, 835, 876], "reg": [4, 8, 9, 12, 21, 34, 49, 133, 179, 221, 295, 296, 408, 415, 416, 557, 858, 876], "design_matrix": [4, 140, 681], "25728": 4, "target": [4, 17, 20, 27, 49, 76, 83, 99, 126, 140, 160, 194, 201, 203, 224, 225, 239, 262, 264, 265, 267, 407, 408, 409, 410, 411, 412, 413, 415, 416, 418, 419, 420, 421, 425, 434, 476, 489, 517, 553, 556, 557, 611, 835, 876], "regressor": [4, 68, 99, 194, 224, 681], "within": [4, 5, 16, 24, 38, 41, 45, 47, 50, 61, 68, 92, 106, 107, 110, 118, 119, 125, 126, 134, 139, 140, 143, 150, 154, 155, 157, 159, 160, 164, 165, 167, 171, 174, 175, 177, 180, 182, 183, 184, 197, 200, 203, 204, 206, 208, 215, 220, 224, 235, 239, 242, 255, 259, 262, 263, 264, 265, 269, 270, 271, 273, 276, 277, 278, 280, 305, 312, 371, 383, 408, 413, 415, 432, 434, 437, 442, 460, 466, 476, 477, 529, 530, 539, 555, 556, 570, 683, 684, 686, 687, 691, 696, 698, 700, 703, 706, 714, 725, 728, 740, 760, 774, 775, 782, 783, 786, 795, 798, 802, 803, 805, 831, 833, 835, 840, 841, 846, 855, 857, 858, 864, 876], "object": [4, 9, 10, 18, 19, 27, 30, 31, 32, 33, 34, 36, 47, 54, 55, 56, 60, 63, 77, 92, 97, 99, 101, 102, 107, 110, 111, 112, 125, 130, 133, 140, 143, 145, 150, 154, 156, 159, 160, 161, 164, 165, 166, 169, 171, 174, 180, 181, 187, 188, 189, 190, 194, 197, 198, 199, 201, 203, 204, 205, 206, 208, 209, 214, 217, 218, 221, 225, 232, 238, 239, 242, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 281, 282, 283, 286, 288, 289, 290, 293, 295, 296, 297, 300, 301, 303, 304, 308, 309, 310, 312, 315, 316, 317, 318, 319, 322, 324, 325, 338, 340, 342, 347, 351, 352, 355, 356, 357, 358, 359, 363, 367, 368, 369, 371, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 424, 425, 426, 427, 433, 437, 442, 449, 450, 452, 454, 459, 468, 471, 473, 474, 475, 476, 477, 478, 481, 482, 483, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 509, 512, 517, 518, 519, 520, 522, 523, 524, 525, 526, 527, 530, 532, 533, 534, 538, 545, 552, 553, 555, 556, 557, 558, 559, 567, 570, 571, 572, 579, 581, 583, 589, 590, 597, 602, 606, 607, 609, 613, 614, 615, 618, 624, 631, 632, 645, 646, 660, 661, 664, 673, 681, 682, 688, 692, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 713, 716, 717, 718, 723, 724, 725, 726, 727, 728, 729, 731, 742, 743, 744, 749, 752, 754, 756, 757, 759, 760, 763, 764, 767, 768, 769, 770, 773, 774, 775, 776, 777, 778, 779, 780, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 793, 795, 796, 797, 798, 799, 800, 803, 805, 810, 811, 816, 822, 825, 831, 835, 851, 853, 858, 860, 862, 866, 874, 876], "multipl": [4, 16, 40, 44, 45, 51, 91, 94, 95, 99, 101, 110, 118, 139, 143, 148, 149, 158, 159, 165, 171, 174, 189, 193, 198, 200, 201, 203, 204, 206, 213, 214, 215, 225, 229, 232, 233, 234, 239, 242, 256, 260, 261, 262, 263, 264, 265, 269, 270, 272, 273, 275, 276, 277, 278, 298, 315, 352, 358, 383, 410, 419, 421, 431, 433, 435, 444, 445, 446, 449, 452, 458, 473, 474, 476, 477, 489, 499, 518, 532, 533, 538, 543, 556, 573, 577, 584, 588, 606, 614, 638, 641, 645, 674, 680, 684, 685, 696, 697, 699, 708, 711, 718, 719, 724, 727, 743, 757, 767, 774, 777, 780, 783, 786, 788, 790, 796, 801, 802, 804, 806, 831, 835, 852, 858, 864, 866, 873, 876], "list": [4, 9, 10, 11, 16, 28, 41, 43, 47, 68, 82, 92, 101, 102, 109, 110, 111, 113, 114, 115, 125, 130, 136, 139, 143, 144, 148, 149, 150, 160, 165, 167, 168, 169, 170, 171, 174, 176, 182, 184, 187, 190, 198, 199, 200, 203, 204, 205, 208, 209, 213, 215, 216, 219, 220, 221, 224, 225, 228, 229, 233, 234, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 284, 285, 287, 288, 289, 290, 293, 295, 296, 298, 301, 303, 304, 308, 310, 311, 312, 315, 316, 317, 319, 320, 321, 322, 324, 325, 327, 335, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 363, 365, 367, 368, 369, 371, 378, 383, 389, 391, 400, 401, 408, 410, 414, 415, 418, 420, 423, 424, 425, 427, 429, 430, 431, 432, 433, 435, 439, 440, 442, 443, 446, 447, 449, 450, 454, 456, 458, 460, 461, 462, 463, 464, 465, 466, 471, 472, 473, 474, 475, 476, 477, 480, 484, 486, 488, 491, 492, 493, 498, 499, 500, 502, 507, 511, 513, 514, 515, 518, 521, 525, 527, 530, 532, 533, 542, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 564, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 581, 583, 584, 585, 590, 592, 595, 599, 601, 604, 606, 608, 610, 611, 614, 615, 616, 619, 622, 629, 631, 637, 638, 641, 645, 646, 659, 662, 663, 664, 665, 673, 676, 677, 679, 681, 682, 683, 684, 686, 687, 688, 691, 692, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 712, 713, 718, 721, 722, 727, 729, 730, 740, 742, 743, 744, 747, 748, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 797, 798, 799, 801, 802, 803, 805, 806, 807, 819, 822, 826, 827, 831, 835, 838, 842, 843, 846, 850, 851, 855, 857, 858, 859, 861, 864, 876], "field": [4, 5, 7, 17, 20, 22, 26, 27, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 68, 77, 78, 79, 88, 92, 107, 111, 115, 117, 119, 122, 126, 129, 141, 143, 148, 155, 157, 158, 161, 164, 165, 168, 175, 176, 177, 178, 181, 182, 187, 188, 190, 194, 195, 196, 197, 198, 202, 203, 204, 205, 206, 207, 208, 210, 213, 215, 216, 219, 221, 229, 242, 248, 255, 259, 262, 263, 264, 265, 267, 295, 296, 310, 317, 326, 371, 414, 420, 440, 448, 451, 476, 477, 478, 488, 495, 515, 523, 524, 570, 584, 592, 609, 613, 616, 641, 682, 725, 728, 743, 760, 767, 774, 777, 778, 780, 782, 783, 785, 804, 805, 813, 831, 836, 851, 852, 855, 864, 876], "getattr": [4, 712, 722], "_field": [4, 140], "beta": [4, 12, 19, 32, 33, 34, 92, 99, 108, 110, 111, 113, 136, 140, 224, 238, 262, 263, 264, 265, 476, 477, 599, 681, 698, 700, 775], "stderr": [4, 140, 681], "t_val": [4, 140, 225, 681], "p_val": [4, 99, 140, 226, 227, 677, 681, 876], "mlog10_p_val": [4, 140, 681, 876], "just": [4, 5, 28, 32, 33, 41, 42, 44, 48, 50, 59, 69, 73, 80, 81, 99, 101, 107, 111, 112, 113, 118, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 150, 155, 157, 159, 160, 161, 164, 165, 167, 168, 169, 170, 171, 176, 178, 179, 180, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 213, 214, 215, 216, 221, 225, 226, 229, 232, 233, 234, 238, 239, 259, 262, 263, 264, 265, 269, 270, 271, 273, 275, 276, 277, 278, 310, 408, 415, 442, 443, 476, 477, 492, 531, 555, 556, 566, 570, 583, 608, 696, 698, 700, 739, 760, 767, 773, 775, 777, 779, 782, 783, 786, 790, 793, 795, 796, 797, 798, 799, 803, 805, 813, 833, 835, 843, 853, 858, 861, 876], "would": [4, 5, 19, 43, 44, 69, 139, 142, 143, 149, 150, 154, 155, 159, 160, 171, 174, 180, 189, 190, 194, 197, 199, 200, 201, 202, 203, 204, 205, 208, 219, 224, 225, 226, 229, 232, 234, 239, 262, 263, 264, 265, 269, 270, 273, 275, 276, 277, 278, 288, 295, 296, 352, 356, 357, 367, 368, 369, 378, 383, 400, 401, 408, 415, 429, 430, 431, 443, 451, 452, 458, 471, 473, 474, 476, 477, 491, 513, 521, 534, 556, 567, 584, 633, 696, 699, 743, 777, 782, 783, 796, 831, 841, 857, 858, 864, 876], "higher": [4, 26, 38, 44, 54, 68, 73, 92, 140, 150, 183, 194, 197, 199, 201, 203, 208, 220, 226, 229, 239, 272, 584, 712, 722, 833, 835, 839, 840, 858, 876], "better": [4, 9, 19, 43, 60, 69, 92, 141, 145, 150, 182, 183, 193, 200, 202, 203, 208, 224, 242, 264, 265, 269, 270, 273, 276, 277, 278, 407, 570, 581, 584, 710, 712, 722, 726, 743, 801, 806, 833, 835, 858, 876], "visibl": [4, 47, 125, 171, 190, 200, 201, 207, 215, 216, 239, 262, 263, 264, 265, 476, 477, 556, 637, 696, 743, 773, 779, 790, 796, 831, 876], "neg": [4, 19, 22, 39, 70, 110, 112, 143, 149, 150, 161, 187, 190, 201, 203, 210, 224, 232, 239, 259, 260, 261, 262, 263, 264, 265, 269, 270, 271, 272, 273, 276, 277, 278, 284, 304, 408, 414, 415, 420, 427, 436, 450, 476, 477, 500, 555, 556, 577, 582, 654, 655, 680, 696, 698, 699, 700, 762, 767, 773, 775, 782, 786, 795, 796, 798, 801, 803, 807, 852, 855, 858, 861, 876], "around": [4, 49, 69, 74, 81, 92, 110, 140, 141, 143, 145, 150, 164, 165, 170, 171, 179, 182, 190, 197, 198, 199, 200, 201, 202, 203, 204, 205, 209, 213, 219, 239, 262, 263, 264, 265, 272, 356, 408, 415, 427, 432, 434, 476, 477, 509, 556, 568, 569, 572, 573, 601, 658, 696, 698, 699, 700, 767, 773, 779, 782, 783, 790, 796, 831, 833, 841], "200": [4, 9, 12, 47, 59, 74, 79, 88, 90, 93, 97, 107, 109, 112, 125, 129, 134, 135, 141, 144, 145, 150, 157, 168, 171, 178, 180, 182, 186, 190, 194, 199, 201, 204, 205, 207, 219, 224, 227, 228, 229, 234, 238, 242, 339, 341, 345, 447, 476, 477, 529, 530, 556, 582, 842, 851, 858, 861, 864, 876], "follow": [4, 24, 27, 32, 33, 34, 41, 42, 68, 69, 78, 92, 101, 105, 107, 111, 114, 126, 133, 134, 136, 140, 143, 150, 154, 157, 159, 160, 161, 167, 169, 171, 177, 179, 187, 188, 189, 194, 199, 200, 201, 202, 206, 208, 210, 213, 214, 215, 219, 221, 224, 226, 228, 232, 234, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 285, 286, 295, 296, 300, 301, 352, 363, 368, 383, 400, 408, 432, 434, 435, 446, 447, 448, 452, 475, 476, 477, 478, 482, 484, 491, 519, 522, 539, 540, 556, 572, 575, 584, 585, 614, 624, 642, 677, 679, 681, 696, 698, 699, 700, 712, 722, 723, 726, 727, 731, 733, 739, 743, 756, 767, 775, 780, 803, 831, 833, 834, 837, 839, 840, 841, 851, 852, 854, 855, 858, 861, 862, 876], "onset": [4, 8, 33, 34, 115, 134, 135, 136, 139, 143, 145, 165, 167, 190, 199, 200, 202, 215, 239, 255, 256, 262, 263, 352, 437, 449, 476, 477, 559, 602, 701, 702, 703, 831, 876], "23": [4, 8, 11, 13, 19, 28, 34, 35, 38, 40, 45, 47, 56, 64, 65, 69, 73, 79, 80, 83, 101, 106, 107, 112, 113, 121, 124, 136, 143, 144, 147, 150, 151, 153, 157, 168, 170, 182, 183, 184, 190, 193, 194, 203, 207, 220, 223, 224, 225, 226, 228, 229, 232, 233, 234, 237, 242, 256, 260, 261, 262, 263, 264, 265, 267, 269, 270, 272, 273, 275, 276, 277, 278, 295, 344, 356, 367, 368, 378, 385, 386, 400, 401, 432, 467, 476, 477, 484, 516, 556, 567, 604, 614, 695, 696, 698, 699, 700, 743, 772, 777, 787, 822, 852, 858], "correspond": [4, 16, 31, 48, 50, 61, 71, 75, 86, 90, 92, 101, 110, 118, 133, 136, 142, 143, 150, 154, 155, 157, 159, 167, 169, 171, 174, 179, 180, 181, 187, 190, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 213, 214, 215, 216, 226, 228, 229, 234, 239, 255, 257, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 287, 295, 296, 298, 302, 310, 320, 321, 323, 333, 352, 356, 357, 360, 367, 368, 369, 378, 383, 400, 401, 408, 409, 411, 412, 414, 415, 418, 420, 424, 432, 437, 451, 452, 453, 461, 471, 473, 474, 476, 477, 484, 486, 488, 491, 495, 498, 500, 505, 509, 513, 515, 518, 520, 521, 532, 533, 534, 555, 556, 557, 570, 572, 575, 576, 609, 610, 613, 624, 637, 641, 645, 648, 661, 676, 677, 680, 681, 682, 683, 684, 686, 687, 688, 696, 697, 698, 699, 700, 708, 709, 715, 733, 734, 736, 743, 746, 754, 756, 760, 761, 762, 767, 773, 774, 775, 777, 779, 781, 782, 783, 786, 795, 796, 798, 801, 803, 805, 806, 807, 816, 831, 835, 841, 852, 855, 858, 861, 876], "unit": [4, 8, 14, 19, 21, 32, 81, 98, 101, 125, 134, 135, 140, 155, 159, 167, 168, 179, 188, 189, 198, 203, 205, 208, 213, 221, 226, 227, 229, 237, 238, 242, 257, 259, 260, 261, 262, 263, 264, 265, 267, 271, 273, 295, 296, 303, 311, 328, 333, 335, 337, 357, 363, 371, 408, 410, 415, 417, 419, 429, 444, 446, 447, 452, 475, 476, 477, 484, 486, 491, 492, 500, 556, 567, 572, 575, 584, 608, 646, 688, 696, 698, 700, 734, 736, 743, 767, 774, 775, 777, 779, 782, 783, 795, 797, 803, 804, 811, 831, 835, 861, 876], "scale": [4, 5, 10, 16, 19, 22, 27, 28, 29, 30, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 54, 55, 57, 58, 59, 60, 65, 69, 73, 76, 83, 88, 92, 98, 99, 101, 102, 105, 106, 107, 108, 112, 113, 114, 117, 125, 131, 135, 136, 140, 141, 148, 150, 155, 156, 159, 165, 176, 177, 178, 179, 180, 181, 182, 189, 190, 193, 194, 200, 202, 203, 205, 206, 216, 220, 221, 232, 234, 238, 239, 242, 254, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 276, 277, 278, 295, 296, 326, 336, 351, 352, 356, 357, 363, 367, 368, 369, 408, 415, 417, 429, 431, 442, 451, 452, 467, 470, 471, 473, 474, 476, 477, 486, 529, 530, 534, 536, 539, 540, 547, 555, 556, 566, 567, 575, 584, 614, 633, 634, 635, 636, 648, 649, 660, 663, 696, 698, 699, 700, 708, 733, 743, 756, 758, 760, 767, 771, 773, 774, 775, 777, 779, 781, 782, 783, 784, 786, 791, 795, 796, 797, 798, 802, 803, 804, 806, 831, 849, 876], "keep": [4, 11, 12, 27, 31, 60, 86, 102, 108, 109, 110, 136, 141, 144, 148, 150, 159, 160, 161, 164, 165, 168, 180, 198, 199, 200, 201, 202, 203, 213, 214, 215, 219, 226, 254, 259, 262, 263, 264, 265, 289, 290, 293, 296, 369, 414, 432, 476, 477, 487, 525, 527, 530, 556, 585, 697, 708, 835, 843, 853, 857, 876], "avoid": [4, 8, 9, 28, 40, 59, 69, 86, 112, 136, 139, 150, 160, 165, 166, 168, 171, 182, 188, 190, 197, 200, 201, 205, 213, 215, 224, 237, 242, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 273, 276, 277, 278, 352, 425, 437, 476, 477, 484, 491, 498, 536, 556, 618, 624, 656, 659, 662, 678, 689, 690, 696, 699, 743, 801, 806, 833, 839, 853, 855, 857, 858, 876], "convers": [4, 155, 167, 188, 190, 198, 200, 201, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 476, 477, 500, 593, 683, 684, 686, 687, 696, 699, 858, 861, 876], "micro": [4, 262, 263, 264, 265, 476, 477], "volt": [4, 140, 203, 205, 219, 262, 263, 264, 265, 441, 476, 477, 858, 876], "topomap_arg": [4, 69, 99, 194, 209, 225, 264, 265, 556, 696, 763, 780, 788, 876], "set_ylabel": [4, 12, 13, 21, 22, 45, 69, 94, 102, 110, 111, 113, 131, 143, 171, 182, 194, 200, 204, 227, 228, 229, 239], "systemat": [4, 140, 161, 200, 242, 411, 574, 855, 876], "larg": [4, 10, 28, 69, 74, 78, 81, 82, 112, 118, 135, 141, 149, 150, 166, 171, 177, 194, 197, 198, 200, 201, 202, 204, 205, 206, 209, 210, 216, 224, 229, 232, 239, 242, 262, 263, 268, 295, 352, 356, 357, 361, 417, 447, 475, 476, 477, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 516, 536, 556, 558, 683, 684, 686, 687, 743, 761, 808, 839, 853, 876], "consist": [4, 10, 43, 69, 75, 110, 121, 156, 157, 160, 167, 169, 174, 182, 188, 189, 190, 194, 198, 199, 200, 202, 203, 207, 224, 226, 227, 242, 254, 262, 263, 264, 265, 275, 279, 319, 366, 476, 477, 556, 564, 570, 574, 648, 649, 681, 696, 698, 699, 700, 701, 702, 703, 831, 851, 852, 857, 858, 864, 876], "guillaum": [4, 15, 86, 150, 156, 194, 200, 224, 242, 557, 689, 690, 852, 863, 876], "rousselet": [4, 150, 200, 242, 852], "2016": [4, 19, 46, 81, 111, 124, 193, 200, 242, 385, 386, 414, 473, 474, 556, 852], "7488": [4, 242], "1556": [4, 242], "carl": [4, 124, 242, 385, 852], "gaspar": [4, 242, 852], "cyril": [4, 242, 852], "r": [4, 8, 10, 12, 19, 21, 28, 37, 39, 41, 43, 49, 69, 79, 80, 94, 95, 97, 113, 125, 135, 136, 140, 144, 155, 159, 165, 175, 179, 180, 182, 183, 184, 193, 194, 198, 200, 202, 203, 205, 209, 210, 214, 220, 224, 228, 229, 234, 239, 242, 254, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 273, 274, 276, 277, 278, 298, 358, 378, 408, 414, 415, 443, 476, 477, 508, 523, 531, 555, 556, 565, 568, 570, 572, 576, 656, 680, 683, 684, 689, 690, 696, 698, 699, 700, 725, 728, 743, 760, 761, 767, 771, 775, 782, 786, 791, 795, 798, 803, 805, 831, 833, 835, 852, 858, 861, 876], "pernet": [4, 242, 852], "jess": [4, 242, 852], "husk": [4, 242, 852], "patrick": [4, 242, 852, 858], "j": [4, 8, 12, 13, 18, 19, 21, 31, 35, 42, 44, 59, 65, 69, 70, 73, 74, 81, 92, 97, 99, 111, 119, 124, 136, 143, 150, 154, 159, 161, 171, 177, 179, 193, 194, 200, 202, 203, 204, 205, 210, 224, 225, 229, 237, 242, 254, 262, 263, 264, 265, 268, 272, 273, 274, 295, 298, 352, 358, 378, 386, 391, 401, 408, 412, 414, 415, 416, 426, 471, 474, 476, 477, 523, 524, 531, 534, 538, 555, 556, 564, 565, 570, 582, 588, 591, 653, 656, 658, 682, 683, 684, 686, 687, 689, 690, 698, 700, 708, 710, 712, 714, 722, 725, 726, 728, 850, 852, 855, 858, 876], "bennett": [4, 242, 852], "allison": [4, 242, 852], "sekul": [4, 242, 852], "healthi": [4, 242, 400, 401, 852, 864], "ag": [4, 111, 136, 188, 242, 262, 263, 264, 265, 386, 401, 476, 477, 478, 661, 852, 866, 876], "scalp": [4, 19, 27, 69, 70, 74, 77, 120, 128, 133, 141, 143, 148, 150, 154, 155, 157, 165, 169, 182, 183, 184, 189, 197, 198, 203, 205, 206, 208, 209, 210, 216, 219, 237, 242, 254, 262, 263, 264, 265, 267, 306, 427, 467, 476, 477, 520, 556, 565, 588, 629, 641, 698, 700, 743, 759, 775, 797, 811, 831, 836, 839, 842, 851, 852, 855, 858, 861, 876], "sensit": [4, 5, 7, 23, 25, 27, 80, 120, 128, 150, 157, 177, 201, 205, 210, 228, 234, 242, 262, 263, 264, 265, 266, 267, 272, 273, 275, 362, 452, 476, 477, 553, 556, 616, 622, 637, 664, 683, 684, 686, 687, 743, 787, 852, 857, 876], "frontier": [4, 10, 19, 133, 150, 193, 200, 242, 414, 561, 850, 852], "psychologi": [4, 10, 150, 200, 242, 678, 852], "19": [4, 6, 9, 11, 13, 19, 20, 28, 34, 35, 41, 42, 45, 47, 58, 64, 70, 72, 75, 79, 81, 83, 88, 91, 92, 101, 106, 107, 110, 112, 121, 125, 128, 136, 139, 140, 145, 150, 156, 157, 165, 166, 167, 168, 170, 171, 173, 177, 178, 179, 180, 181, 182, 183, 184, 190, 193, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 213, 214, 215, 216, 221, 224, 225, 226, 228, 229, 232, 233, 234, 236, 242, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 273, 275, 276, 277, 278, 302, 304, 307, 326, 427, 471, 476, 477, 515, 519, 549, 555, 556, 641, 691, 695, 696, 699, 715, 759, 762, 767, 768, 771, 773, 790, 796, 807, 817, 833, 834, 852, 858], "14": [4, 5, 8, 9, 11, 13, 16, 19, 20, 22, 28, 32, 33, 34, 35, 43, 45, 46, 47, 48, 49, 54, 55, 56, 58, 65, 78, 79, 81, 83, 91, 92, 101, 104, 105, 106, 107, 110, 112, 118, 119, 121, 136, 144, 149, 151, 156, 157, 161, 167, 168, 170, 171, 174, 176, 177, 178, 179, 180, 182, 184, 186, 189, 190, 192, 193, 194, 200, 204, 205, 207, 208, 212, 219, 221, 224, 225, 226, 228, 229, 231, 232, 233, 234, 239, 241, 242, 253, 260, 262, 263, 264, 265, 275, 304, 357, 378, 409, 410, 414, 419, 424, 443, 444, 446, 476, 477, 493, 504, 556, 572, 573, 588, 696, 714, 715, 723, 724, 743, 771, 773, 784, 791, 799, 852, 858], "2010": [4, 92, 115, 154, 200, 242, 295, 352, 408, 725, 728, 852, 876], "3389": [4, 10, 19, 133, 150, 193, 200, 242, 414, 561, 850, 852], "fpsyg": [4, 150, 200, 242, 852], "00019": [4, 242, 852], "parametr": [4, 68, 92, 111, 164, 165, 229, 230, 231, 242, 262, 264, 265, 267, 316, 351, 449, 476, 523, 553, 556, 611, 631, 675, 676, 683, 684, 686, 687, 689, 690, 699, 726, 767, 788, 831, 873, 876], "studi": [4, 33, 69, 119, 143, 150, 160, 177, 179, 200, 202, 208, 221, 226, 228, 229, 242, 288, 295, 400, 401, 432, 831, 851, 858, 876], "bmc": [4, 16, 194, 242, 409, 424], "98": [4, 13, 15, 19, 33, 35, 42, 44, 47, 65, 66, 79, 110, 112, 115, 121, 136, 158, 168, 176, 179, 190, 194, 207, 221, 224, 225, 226, 228, 229, 234, 242, 288, 295, 340, 342, 584, 683, 684, 686, 687], "2008": [4, 10, 35, 44, 150, 169, 179, 203, 221, 224, 225, 242, 274, 295, 296, 336, 358, 408, 429, 447, 471, 538, 556, 656, 683, 684, 686, 687], "1186": [4, 16, 194, 207, 242, 409, 424], "1471": [4, 16, 194, 242, 409, 424], "2202": [4, 16, 194, 242, 409, 424], "330": [4, 6, 35, 50, 79, 80, 168, 182, 207, 229, 876], "630": [4, 79, 229], "limo_data": [4, 6], "dataset": [5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 185, 186, 189, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 240, 241, 242, 254, 256, 259, 260, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 295, 296, 300, 307, 310, 326, 343, 351, 352, 353, 354, 356, 357, 359, 361, 367, 368, 369, 408, 411, 415, 418, 425, 428, 437, 439, 440, 449, 451, 452, 465, 471, 473, 474, 476, 477, 486, 487, 489, 513, 514, 515, 519, 520, 522, 523, 526, 529, 530, 534, 539, 540, 553, 556, 569, 573, 578, 584, 592, 613, 614, 615, 616, 622, 629, 644, 681, 683, 684, 686, 687, 696, 698, 699, 718, 729, 743, 759, 767, 771, 776, 783, 805, 811, 822, 835, 853, 858, 859, 864, 866, 876], "electr": [5, 165, 179, 197, 205, 206, 242, 295, 296, 556, 564, 763, 831, 836, 851, 861], "stimul": [5, 32, 45, 150, 179, 234, 262, 263, 264, 265, 357, 476, 477, 553, 554, 559, 578, 646, 696, 698, 699, 700, 743, 759, 852, 858, 876], "deliv": 5, "left": [5, 10, 11, 13, 15, 23, 25, 27, 30, 31, 35, 38, 39, 40, 41, 43, 44, 45, 47, 48, 50, 52, 54, 55, 57, 58, 59, 60, 61, 70, 72, 77, 78, 81, 84, 85, 92, 110, 114, 117, 118, 122, 125, 126, 130, 132, 133, 134, 139, 140, 141, 142, 143, 144, 148, 149, 150, 151, 154, 155, 157, 159, 165, 167, 171, 174, 177, 179, 180, 181, 190, 193, 194, 202, 203, 204, 205, 206, 208, 214, 215, 216, 220, 221, 225, 228, 232, 233, 234, 237, 255, 256, 258, 259, 262, 263, 264, 265, 267, 268, 269, 270, 271, 273, 275, 276, 277, 278, 310, 312, 322, 323, 333, 334, 358, 378, 383, 408, 415, 430, 432, 435, 442, 466, 474, 476, 477, 499, 509, 521, 555, 556, 631, 636, 644, 645, 648, 659, 696, 698, 699, 700, 743, 759, 767, 773, 774, 775, 777, 779, 781, 782, 783, 786, 794, 795, 796, 797, 798, 803, 807, 811, 831, 852, 858, 861, 876], "wrist": 5, "somatosensori": [5, 32, 34, 46, 111, 238, 242, 390, 876], "nine": [5, 141], "quspin": 5, "serf": 5, "place": [5, 7, 26, 125, 133, 139, 148, 149, 150, 155, 160, 164, 165, 168, 172, 173, 177, 200, 202, 203, 204, 206, 208, 210, 213, 219, 232, 256, 259, 261, 262, 263, 264, 265, 266, 267, 271, 274, 279, 280, 285, 310, 315, 318, 338, 345, 361, 362, 379, 382, 383, 385, 408, 415, 430, 432, 433, 446, 447, 476, 477, 478, 487, 534, 543, 548, 555, 556, 568, 569, 570, 573, 577, 578, 581, 632, 638, 641, 646, 647, 648, 649, 661, 693, 696, 697, 698, 699, 700, 713, 730, 746, 760, 764, 775, 782, 786, 795, 798, 803, 805, 831, 835, 852, 856, 858, 859, 861, 862, 876], "side": [5, 19, 32, 45, 69, 140, 155, 165, 202, 206, 232, 239, 259, 260, 262, 263, 264, 265, 269, 271, 273, 277, 408, 415, 476, 477, 555, 556, 570, 575, 584, 681, 683, 684, 686, 687, 696, 697, 698, 700, 743, 760, 769, 771, 773, 775, 782, 786, 789, 795, 798, 801, 803, 805, 853, 858, 876], "somatomotor": 5, "custom": [5, 27, 36, 56, 107, 118, 120, 124, 128, 133, 139, 141, 144, 148, 149, 150, 166, 200, 201, 202, 203, 205, 206, 219, 229, 239, 254, 259, 262, 263, 264, 265, 266, 267, 269, 270, 272, 273, 276, 277, 278, 319, 323, 325, 383, 476, 477, 553, 556, 605, 614, 616, 676, 700, 737, 743, 756, 761, 762, 773, 780, 790, 796, 801, 802, 806, 807, 831, 835, 851, 852, 853, 855, 876], "opm_sampl": [5, 107], "subjects_dir": [5, 7, 11, 22, 24, 26, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 54, 55, 58, 59, 60, 67, 79, 88, 92, 93, 102, 107, 113, 114, 116, 122, 123, 124, 125, 129, 132, 133, 134, 135, 149, 154, 155, 156, 157, 158, 159, 160, 165, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 189, 190, 194, 209, 220, 221, 232, 233, 234, 254, 260, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 301, 305, 306, 307, 310, 358, 363, 364, 365, 370, 382, 384, 385, 386, 387, 427, 458, 460, 462, 464, 466, 467, 468, 469, 470, 509, 513, 515, 542, 543, 581, 601, 619, 621, 628, 633, 634, 635, 636, 644, 645, 659, 662, 673, 691, 692, 735, 742, 743, 759, 761, 771, 801, 806, 807, 816, 826, 841, 851, 858, 876], "raw_fnam": [5, 7, 8, 9, 11, 13, 14, 15, 16, 18, 26, 32, 33, 34, 42, 45, 46, 49, 68, 69, 71, 72, 73, 75, 80, 81, 86, 91, 94, 95, 97, 98, 105, 106, 108, 109, 111, 115, 117, 119, 130, 131, 140, 151, 155, 157, 158, 161, 176, 179, 182, 184, 194, 202, 221, 226, 227, 228, 229, 232, 234, 238, 852, 858], "opm_sef_raw": 5, "bem_fnam": [5, 45, 67, 107], "bem": [5, 7, 23, 26, 27, 40, 41, 43, 44, 45, 50, 67, 107, 123, 133, 134, 135, 149, 154, 155, 158, 159, 162, 163, 164, 175, 179, 180, 181, 182, 183, 184, 189, 190, 206, 232, 233, 234, 252, 260, 272, 275, 363, 384, 407, 427, 451, 458, 513, 514, 515, 518, 519, 581, 603, 604, 627, 633, 635, 636, 645, 661, 759, 761, 818, 819, 824, 829, 831, 841, 852, 861, 866, 876], "5120": [5, 7, 26, 41, 45, 50, 67, 107, 149, 157, 158, 175, 180, 181, 254, 407, 513, 519, 661, 851], "sol": [5, 7, 22, 26, 41, 45, 50, 67, 107, 157, 158, 175, 180, 181, 254, 266, 519, 661, 851, 861], "fwd_fname": [5, 22, 31, 35, 40, 46, 51, 59, 67, 88, 90, 91, 92, 93, 179, 190, 221], "fwd": [5, 11, 22, 26, 31, 32, 33, 34, 35, 40, 42, 43, 45, 46, 47, 48, 49, 51, 54, 55, 58, 59, 67, 88, 90, 91, 92, 93, 107, 129, 157, 158, 171, 174, 175, 176, 177, 178, 179, 181, 190, 194, 220, 221, 254, 266, 273, 282, 283, 284, 362, 442, 454, 455, 518, 519, 616, 637, 660, 661, 743, 759, 823, 851, 858], "coil_def_fnam": 5, "coil_def": [5, 107, 852, 858, 861], "dat": [5, 107, 208, 330, 490, 505, 567, 575, 584, 595, 600, 852, 858, 876], "read_raw_fif": [5, 10, 11, 13, 14, 15, 16, 18, 28, 29, 32, 33, 34, 42, 45, 46, 49, 61, 67, 68, 70, 71, 72, 73, 75, 78, 81, 82, 86, 90, 91, 94, 95, 97, 98, 101, 102, 105, 106, 107, 108, 109, 111, 113, 115, 116, 119, 121, 125, 127, 130, 131, 139, 140, 141, 144, 145, 148, 150, 151, 155, 161, 165, 166, 167, 168, 169, 176, 179, 181, 182, 187, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 213, 214, 215, 216, 220, 226, 227, 228, 229, 232, 234, 237, 238, 256, 482, 858, 862, 866, 876], "h_trans_bandwidth": [5, 21, 111, 112, 190, 200, 209, 262, 263, 264, 265, 410, 419, 444, 446, 476, 477, 588, 876], "notch_width": [5, 447, 476, 477], "threshold": [5, 30, 34, 38, 73, 80, 94, 110, 118, 144, 150, 164, 165, 171, 181, 183, 187, 190, 198, 199, 203, 205, 208, 226, 227, 228, 229, 230, 231, 232, 233, 234, 242, 254, 257, 262, 263, 264, 265, 267, 306, 316, 322, 351, 356, 447, 476, 477, 500, 538, 556, 558, 561, 568, 570, 572, 573, 575, 576, 577, 579, 589, 607, 652, 653, 654, 655, 656, 657, 658, 679, 680, 683, 684, 686, 687, 688, 699, 743, 767, 772, 773, 789, 816, 851, 858, 864, 876], "larger": [5, 49, 59, 69, 149, 178, 194, 197, 200, 202, 208, 216, 226, 239, 262, 263, 272, 277, 278, 452, 476, 477, 558, 577, 593, 691, 724, 725, 727, 728, 773, 796, 804, 807, 857, 858, 876], "squid": [5, 107, 210, 242, 831, 852, 858], "2e": [5, 8, 9, 21, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 69, 73, 88, 91, 92, 107, 117, 119, 151, 161, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 220, 221, 568, 569], "trigger": [5, 10, 91, 101, 107, 143, 165, 167, 170, 176, 181, 184, 187, 188, 189, 190, 199, 204, 209, 210, 224, 254, 255, 352, 357, 449, 450, 476, 477, 484, 491, 493, 498, 500, 573, 577, 611, 661, 831, 835, 851, 858, 861, 876], "257": [5, 110, 113, 168, 169, 207, 213, 218, 229, 852], "sti101": [5, 167, 255, 449, 450], "mask": [5, 28, 31, 80, 94, 98, 99, 110, 118, 141, 184, 200, 204, 220, 224, 225, 226, 227, 228, 229, 255, 259, 262, 263, 264, 265, 271, 408, 414, 415, 449, 476, 477, 484, 555, 556, 570, 611, 683, 684, 686, 687, 696, 698, 700, 760, 775, 779, 782, 786, 795, 798, 803, 805, 855, 876], "mask_typ": [5, 184, 255, 449, 484, 611, 876], "verbos": [5, 10, 11, 13, 14, 15, 34, 38, 40, 41, 42, 44, 49, 51, 58, 69, 74, 77, 78, 82, 86, 91, 92, 97, 102, 106, 107, 119, 121, 122, 124, 132, 133, 134, 135, 139, 141, 144, 145, 148, 149, 151, 156, 157, 158, 161, 169, 170, 171, 176, 178, 179, 180, 181, 182, 183, 189, 194, 198, 199, 200, 203, 206, 207, 208, 209, 210, 214, 215, 224, 225, 226, 232, 237, 239, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 301, 302, 303, 304, 305, 306, 307, 310, 312, 314, 315, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 411, 413, 414, 418, 419, 421, 424, 425, 427, 429, 433, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 458, 459, 463, 464, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516, 518, 519, 520, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 549, 552, 556, 558, 559, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 579, 580, 581, 582, 584, 585, 587, 588, 591, 592, 593, 596, 597, 598, 599, 603, 604, 605, 606, 607, 608, 610, 611, 612, 614, 615, 616, 618, 619, 620, 621, 622, 626, 627, 628, 629, 630, 631, 632, 633, 635, 636, 637, 638, 641, 643, 644, 645, 647, 648, 649, 650, 660, 661, 664, 666, 667, 668, 669, 670, 671, 672, 683, 684, 685, 686, 687, 691, 692, 693, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 714, 715, 718, 719, 723, 724, 726, 727, 728, 729, 732, 733, 738, 739, 742, 743, 751, 759, 768, 771, 775, 776, 777, 778, 783, 786, 787, 788, 793, 794, 796, 797, 799, 800, 801, 802, 806, 807, 808, 812, 816, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 833, 835, 866, 876], "error": [5, 10, 13, 38, 42, 54, 55, 88, 91, 107, 112, 132, 134, 135, 139, 143, 148, 151, 156, 161, 170, 171, 180, 182, 184, 187, 193, 194, 199, 200, 203, 206, 210, 224, 225, 228, 242, 257, 262, 263, 264, 265, 267, 268, 269, 270, 273, 276, 277, 278, 282, 283, 314, 337, 346, 347, 352, 356, 359, 361, 363, 367, 368, 400, 427, 442, 443, 455, 456, 458, 476, 477, 492, 496, 538, 547, 556, 567, 575, 583, 584, 602, 604, 608, 633, 635, 643, 653, 656, 658, 674, 680, 681, 685, 696, 698, 699, 700, 740, 741, 743, 774, 776, 787, 822, 824, 834, 835, 840, 841, 846, 851, 852, 855, 858, 861, 876], "suppress": [5, 13, 27, 38, 49, 76, 82, 83, 135, 144, 149, 150, 170, 179, 183, 187, 197, 198, 200, 201, 202, 205, 210, 242, 254, 259, 262, 263, 264, 265, 266, 267, 268, 273, 339, 341, 345, 362, 444, 446, 447, 476, 477, 553, 554, 571, 605, 616, 619, 642, 660, 662, 780, 831, 852, 858, 876], "warn": [5, 10, 13, 38, 132, 134, 135, 139, 150, 161, 170, 171, 180, 183, 190, 201, 203, 204, 214, 215, 226, 237, 254, 256, 257, 262, 263, 264, 265, 267, 269, 270, 272, 273, 274, 276, 277, 278, 282, 283, 314, 337, 340, 346, 347, 352, 356, 358, 359, 361, 363, 367, 368, 400, 427, 435, 442, 455, 458, 476, 477, 496, 556, 567, 575, 584, 585, 604, 614, 633, 635, 638, 642, 643, 696, 698, 699, 700, 739, 741, 743, 776, 787, 822, 824, 841, 843, 866, 876], "about": [5, 13, 19, 27, 34, 43, 44, 69, 73, 92, 99, 112, 139, 140, 142, 143, 145, 148, 150, 154, 159, 161, 165, 167, 168, 171, 174, 177, 183, 187, 188, 189, 190, 193, 194, 198, 200, 201, 203, 204, 208, 209, 213, 214, 215, 220, 221, 224, 226, 254, 255, 257, 259, 261, 262, 263, 264, 265, 267, 271, 272, 273, 275, 280, 282, 283, 295, 296, 297, 303, 304, 308, 309, 316, 317, 318, 322, 324, 325, 338, 340, 342, 347, 356, 365, 367, 368, 369, 371, 408, 410, 415, 416, 417, 427, 432, 449, 452, 459, 468, 475, 476, 477, 478, 481, 507, 512, 519, 520, 524, 534, 552, 553, 556, 567, 581, 589, 590, 611, 631, 632, 660, 661, 664, 682, 696, 697, 698, 699, 700, 723, 724, 726, 727, 743, 756, 759, 763, 768, 769, 778, 785, 795, 799, 831, 835, 839, 851, 852, 854, 855, 857, 859, 861, 864, 876], "decim": [5, 7, 11, 12, 13, 18, 19, 24, 33, 34, 41, 42, 101, 107, 110, 157, 160, 161, 165, 171, 180, 182, 194, 201, 203, 208, 225, 226, 227, 228, 229, 238, 254, 257, 260, 261, 262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 306, 407, 421, 429, 449, 476, 477, 500, 516, 539, 540, 556, 572, 573, 607, 610, 665, 682, 696, 699, 702, 705, 721, 723, 724, 725, 726, 727, 728, 743, 761, 773, 796, 851, 858, 861, 876], "caus": [5, 13, 44, 69, 141, 150, 160, 197, 198, 199, 200, 201, 204, 208, 210, 215, 259, 262, 263, 264, 265, 272, 467, 476, 477, 504, 556, 740, 777, 782, 836, 851, 876], "alias": [5, 13, 161, 180, 201, 257, 260, 261, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 421, 476, 477, 572, 573, 696, 699, 721, 723, 724, 726, 727, 773, 796, 809, 855, 876], "ideal": [5, 69, 106, 131, 134, 143, 150, 169, 200, 202, 205, 206, 225, 239, 310, 784, 791, 831, 835, 855, 858], "instead": [5, 43, 73, 102, 112, 118, 133, 135, 141, 142, 145, 148, 149, 150, 155, 157, 159, 160, 165, 167, 168, 169, 170, 171, 194, 198, 199, 200, 201, 203, 204, 208, 210, 213, 214, 216, 221, 224, 232, 233, 234, 237, 238, 254, 257, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 273, 274, 276, 277, 278, 287, 288, 289, 290, 293, 295, 305, 307, 310, 351, 352, 357, 437, 438, 439, 440, 441, 442, 449, 456, 459, 464, 475, 476, 477, 525, 527, 530, 556, 557, 558, 591, 630, 641, 645, 660, 696, 699, 712, 722, 723, 724, 725, 726, 727, 728, 743, 745, 767, 773, 777, 783, 790, 796, 805, 813, 833, 834, 835, 839, 840, 843, 851, 852, 853, 858, 876], "proj": [5, 8, 9, 11, 13, 14, 15, 18, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 70, 77, 84, 85, 86, 90, 107, 109, 114, 115, 117, 118, 119, 122, 125, 129, 139, 141, 144, 148, 149, 150, 161, 165, 168, 171, 175, 176, 177, 178, 179, 180, 181, 182, 190, 194, 197, 201, 204, 205, 206, 209, 213, 216, 219, 254, 257, 259, 262, 263, 264, 265, 267, 271, 272, 295, 296, 339, 340, 352, 353, 354, 355, 356, 369, 475, 476, 477, 516, 555, 556, 568, 569, 572, 599, 607, 614, 622, 637, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 768, 775, 777, 779, 781, 782, 794, 795, 796, 797, 827, 831, 851, 876], "cov": [5, 11, 21, 31, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 64, 67, 82, 88, 90, 91, 92, 93, 119, 151, 171, 175, 177, 178, 180, 181, 182, 183, 184, 190, 193, 194, 220, 221, 254, 259, 272, 273, 352, 357, 451, 512, 524, 546, 556, 605, 623, 650, 660, 741, 768, 820, 835, 851, 852, 855, 866, 876], "compute_covari": [5, 7, 34, 42, 46, 49, 82, 91, 119, 151, 161, 176, 179, 181, 182, 184, 194, 220, 259, 357, 369, 408, 415, 416, 557, 605, 741, 851, 855, 866, 876], "del": [5, 18, 33, 41, 42, 46, 47, 48, 49, 50, 54, 55, 107, 111, 133, 135, 139, 141, 144, 148, 165, 171, 176, 178, 179, 180, 182, 183, 190, 194, 200, 203], "open": [5, 11, 13, 14, 15, 16, 18, 28, 29, 32, 33, 34, 42, 45, 46, 49, 61, 67, 68, 69, 70, 71, 72, 73, 75, 78, 81, 82, 86, 90, 91, 94, 95, 97, 98, 101, 102, 105, 107, 108, 109, 111, 113, 115, 116, 119, 121, 125, 127, 130, 131, 133, 134, 140, 141, 143, 145, 149, 150, 151, 154, 155, 160, 161, 164, 165, 166, 167, 168, 171, 176, 179, 181, 182, 194, 197, 198, 199, 201, 202, 203, 204, 205, 207, 208, 213, 216, 220, 221, 226, 227, 228, 229, 232, 234, 238, 239, 242, 261, 262, 263, 264, 265, 272, 275, 378, 476, 477, 556, 564, 661, 781, 786, 796, 804, 831, 832, 834, 839, 841, 842, 852, 854, 855, 857, 861, 876], "isotrak": [5, 42, 99, 107, 121, 127, 142, 161, 171, 205, 207, 225, 254, 335, 858], "700999": 5, "700": [5, 79, 113, 126, 133, 194, 207, 229, 712, 722, 743], "999": [5, 34, 56, 75, 78, 82, 90, 94, 107, 109, 121, 127, 129, 141, 143, 158, 167, 171, 182, 203, 204, 206, 207, 208, 229, 568, 572, 576, 579], "lowpass": [5, 11, 70, 72, 75, 79, 80, 81, 82, 88, 91, 125, 140, 145, 150, 165, 166, 167, 168, 190, 197, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 219, 221, 254, 260, 261, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 443, 476, 477, 696, 698, 699, 700, 773, 796, 797, 861, 876], "331": [5, 34, 82, 112, 168, 193, 200, 208, 224, 229], "48": [5, 11, 12, 13, 19, 21, 28, 35, 45, 46, 47, 79, 92, 101, 106, 107, 110, 112, 144, 149, 150, 153, 156, 167, 168, 170, 194, 205, 207, 210, 212, 215, 224, 225, 226, 227, 228, 229, 231, 234, 242, 876], "6601": 5, "initi": [5, 16, 19, 21, 41, 43, 44, 69, 91, 94, 107, 110, 143, 148, 150, 155, 167, 179, 184, 190, 203, 210, 213, 219, 224, 225, 226, 227, 228, 229, 232, 233, 234, 239, 253, 254, 260, 262, 263, 268, 269, 270, 272, 273, 274, 276, 277, 278, 371, 373, 471, 476, 477, 483, 503, 509, 556, 582, 591, 593, 601, 648, 649, 650, 659, 660, 662, 675, 683, 684, 685, 686, 687, 699, 733, 743, 771, 773, 787, 790, 796, 801, 806, 807, 835, 840, 842, 857, 858, 861, 876], "256": [5, 12, 21, 69, 107, 113, 122, 133, 155, 159, 168, 169, 170, 171, 182, 221, 228, 229, 275, 440, 695, 715, 758, 833, 858], "initial_ev": [5, 88, 91, 107, 184, 210, 221, 449, 876], "detect": [5, 8, 9, 12, 22, 27, 67, 69, 71, 73, 76, 80, 81, 91, 107, 110, 125, 136, 145, 150, 156, 158, 161, 164, 167, 171, 184, 189, 190, 194, 198, 200, 201, 202, 203, 204, 205, 208, 210, 211, 212, 214, 239, 242, 254, 255, 262, 263, 264, 265, 267, 272, 316, 339, 341, 345, 447, 476, 477, 482, 504, 553, 556, 558, 560, 561, 562, 564, 568, 569, 571, 572, 573, 575, 576, 577, 579, 584, 682, 696, 725, 728, 743, 773, 789, 790, 796, 842, 855, 858, 865, 876], "201": [5, 45, 125, 135, 168, 175, 180, 182, 194, 207, 224, 228, 229, 234, 861], "rank": [5, 7, 8, 9, 12, 15, 21, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 82, 86, 88, 91, 92, 102, 105, 106, 107, 108, 111, 119, 151, 161, 165, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 198, 202, 203, 204, 220, 221, 232, 234, 259, 264, 265, 295, 296, 352, 356, 357, 367, 368, 369, 408, 415, 416, 451, 452, 471, 473, 474, 528, 534, 556, 768, 783, 831, 855, 876], "toler": [5, 8, 9, 21, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 88, 91, 92, 107, 119, 151, 161, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 200, 203, 204, 220, 221, 356, 471, 473, 474, 556, 593, 858, 876], "1e": [5, 8, 9, 32, 33, 34, 40, 45, 46, 49, 59, 65, 69, 70, 73, 80, 91, 92, 112, 118, 119, 136, 157, 161, 178, 179, 182, 184, 194, 199, 200, 220, 221, 224, 262, 263, 272, 471, 476, 477, 523, 555, 565, 582, 662, 689, 696, 773, 796, 798, 803, 831, 876], "16": [5, 8, 9, 11, 12, 13, 19, 21, 22, 28, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 60, 70, 77, 78, 79, 83, 88, 91, 92, 94, 98, 101, 106, 107, 112, 119, 121, 139, 143, 147, 151, 155, 159, 161, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 192, 193, 194, 197, 200, 201, 203, 205, 206, 207, 208, 209, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 239, 242, 255, 257, 261, 262, 263, 264, 265, 272, 275, 352, 408, 415, 449, 467, 476, 477, 484, 523, 525, 526, 529, 530, 536, 539, 556, 564, 572, 592, 676, 696, 698, 699, 700, 759, 773, 777, 779, 781, 782, 783, 785, 796, 858, 861], "ep": [5, 8, 9, 21, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 88, 91, 92, 107, 119, 151, 161, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 220, 221, 523], "dim": [5, 8, 9, 21, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 88, 91, 92, 107, 119, 151, 159, 161, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 220, 221, 237, 259, 529, 530, 539, 540, 557, 699, 861], "singular": [5, 8, 9, 21, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 88, 91, 92, 107, 119, 151, 161, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 204, 220, 221, 259, 269, 270, 273, 276, 277, 278, 356, 442, 531, 768, 858, 861], "reduc": [5, 8, 9, 12, 15, 16, 21, 27, 34, 40, 42, 46, 49, 55, 59, 70, 76, 82, 83, 86, 102, 105, 106, 107, 108, 112, 118, 119, 145, 148, 150, 156, 157, 161, 166, 171, 176, 179, 181, 182, 184, 190, 193, 194, 201, 202, 203, 204, 205, 206, 208, 210, 213, 220, 226, 227, 229, 232, 233, 234, 238, 242, 259, 262, 263, 264, 265, 266, 269, 270, 273, 276, 277, 278, 295, 296, 352, 356, 357, 367, 368, 369, 385, 408, 409, 415, 421, 424, 425, 431, 443, 449, 451, 452, 471, 473, 474, 476, 477, 526, 529, 530, 534, 539, 540, 555, 556, 582, 592, 639, 683, 684, 686, 687, 702, 705, 721, 723, 724, 725, 726, 727, 728, 777, 782, 783, 831, 835, 855, 858, 861, 876], "covari": [5, 8, 9, 11, 12, 15, 19, 21, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 62, 66, 67, 79, 86, 88, 90, 91, 92, 101, 102, 105, 106, 107, 108, 111, 120, 122, 128, 148, 151, 162, 163, 164, 165, 175, 177, 178, 180, 181, 182, 183, 184, 190, 194, 198, 199, 203, 221, 232, 234, 242, 254, 262, 263, 264, 265, 266, 267, 272, 273, 292, 295, 296, 298, 315, 351, 352, 353, 355, 356, 357, 367, 368, 369, 408, 414, 415, 416, 433, 449, 451, 452, 471, 473, 474, 476, 477, 481, 512, 522, 523, 524, 525, 526, 527, 529, 530, 534, 536, 539, 540, 548, 556, 557, 605, 611, 616, 650, 660, 682, 697, 707, 743, 768, 773, 777, 781, 783, 796, 820, 831, 852, 861, 866, 876], "empir": [5, 8, 9, 15, 27, 31, 36, 46, 49, 56, 86, 91, 119, 161, 176, 179, 181, 182, 184, 194, 208, 220, 242, 259, 264, 265, 266, 267, 273, 295, 296, 352, 356, 357, 367, 368, 369, 408, 415, 416, 451, 452, 471, 472, 473, 474, 534, 557, 605, 614, 616, 770, 771, 783, 802, 876], "10251": 5, "examin": [5, 34, 47, 73, 127, 135, 141, 144, 145, 150, 159, 165, 176, 177, 203, 213, 215, 835, 855], "align": [5, 7, 9, 28, 78, 134, 150, 154, 156, 157, 162, 163, 164, 167, 171, 181, 182, 183, 189, 213, 224, 256, 260, 262, 263, 267, 269, 270, 273, 274, 275, 276, 277, 278, 300, 306, 310, 363, 365, 387, 427, 442, 467, 468, 476, 520, 556, 626, 627, 629, 645, 732, 733, 743, 759, 771, 773, 811, 816, 831, 858, 876], "forward": [5, 7, 12, 22, 26, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 67, 71, 78, 88, 90, 91, 92, 93, 129, 134, 145, 154, 155, 159, 160, 163, 165, 169, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 187, 190, 194, 197, 198, 199, 200, 202, 203, 205, 206, 220, 221, 242, 254, 262, 263, 264, 265, 267, 270, 272, 273, 275, 276, 278, 282, 283, 284, 295, 296, 297, 298, 300, 305, 307, 310, 314, 315, 326, 332, 358, 362, 371, 386, 408, 410, 415, 419, 433, 435, 436, 444, 446, 447, 467, 471, 472, 473, 474, 476, 477, 481, 491, 513, 514, 518, 519, 520, 532, 533, 534, 535, 538, 549, 554, 603, 616, 626, 637, 641, 644, 645, 647, 648, 649, 660, 661, 696, 737, 743, 759, 761, 780, 784, 809, 811, 823, 831, 836, 847, 852, 857, 861, 864, 866, 876], "mri": [5, 24, 26, 30, 35, 40, 41, 43, 44, 45, 50, 59, 91, 92, 107, 113, 122, 123, 133, 134, 135, 149, 156, 157, 160, 162, 163, 164, 165, 169, 175, 177, 180, 182, 183, 184, 185, 186, 187, 188, 189, 206, 213, 221, 242, 259, 260, 262, 264, 265, 266, 267, 272, 273, 274, 275, 277, 278, 300, 301, 302, 305, 306, 307, 310, 314, 323, 326, 328, 332, 352, 358, 363, 364, 365, 370, 371, 384, 386, 387, 427, 442, 449, 451, 459, 460, 461, 467, 468, 469, 470, 476, 477, 491, 506, 508, 515, 518, 519, 522, 523, 534, 581, 603, 626, 628, 633, 634, 635, 636, 645, 664, 691, 730, 731, 733, 735, 743, 754, 759, 761, 771, 807, 811, 824, 831, 836, 839, 842, 851, 855, 861, 864, 866, 876], "ident": [5, 45, 69, 97, 107, 123, 134, 149, 155, 157, 159, 165, 182, 183, 184, 193, 203, 206, 208, 210, 260, 267, 274, 275, 302, 371, 387, 432, 508, 515, 518, 519, 529, 531, 575, 582, 584, 606, 661, 691, 731, 759, 831, 851, 852, 853, 858, 861, 876], "matrix": [5, 9, 10, 11, 15, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 62, 66, 67, 77, 79, 85, 88, 90, 91, 92, 93, 94, 95, 102, 103, 104, 105, 106, 107, 108, 117, 119, 122, 129, 132, 133, 136, 140, 149, 150, 151, 155, 156, 157, 158, 159, 162, 163, 164, 165, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 190, 193, 194, 198, 203, 204, 205, 220, 221, 225, 226, 227, 228, 229, 233, 234, 242, 254, 259, 260, 262, 264, 265, 267, 272, 274, 275, 292, 295, 296, 297, 302, 310, 313, 314, 316, 327, 352, 357, 358, 367, 368, 369, 414, 429, 449, 452, 476, 477, 481, 515, 519, 523, 529, 530, 531, 532, 533, 534, 535, 538, 539, 540, 548, 553, 556, 557, 563, 564, 582, 585, 605, 609, 611, 645, 650, 661, 666, 667, 668, 669, 670, 671, 672, 676, 681, 682, 683, 684, 686, 687, 691, 697, 704, 705, 706, 713, 731, 759, 763, 764, 768, 769, 786, 787, 790, 820, 831, 852, 876], "co": [5, 22, 67, 156, 200, 208, 219, 242, 339, 434, 831, 852, 858], "registr": [5, 43, 44, 132, 133, 156, 179, 242, 274, 358, 732, 733, 816, 841, 852, 858, 876], "equat": [5, 134, 155, 193, 194, 204, 242, 429, 567, 725, 728, 858, 864], "mi": [5, 852], "defin": [5, 8, 9, 10, 12, 18, 19, 21, 27, 31, 33, 43, 44, 60, 61, 75, 76, 83, 92, 93, 102, 105, 109, 112, 118, 126, 133, 135, 139, 140, 141, 143, 150, 154, 157, 159, 161, 162, 164, 166, 167, 169, 171, 174, 177, 179, 181, 189, 190, 193, 194, 200, 204, 209, 221, 227, 228, 229, 232, 234, 238, 239, 242, 254, 255, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 282, 283, 288, 295, 296, 310, 315, 318, 332, 333, 352, 358, 362, 383, 389, 408, 414, 415, 433, 434, 437, 443, 463, 466, 476, 477, 482, 488, 508, 509, 510, 518, 523, 524, 525, 526, 527, 530, 534, 539, 540, 542, 553, 555, 556, 557, 559, 560, 570, 582, 601, 606, 611, 645, 648, 649, 650, 653, 656, 658, 659, 660, 661, 662, 669, 672, 683, 684, 685, 686, 687, 691, 692, 696, 697, 698, 699, 700, 702, 704, 705, 706, 707, 710, 712, 722, 723, 724, 726, 727, 743, 748, 760, 764, 767, 774, 775, 777, 779, 782, 783, 786, 793, 795, 797, 798, 799, 803, 805, 806, 831, 835, 841, 851, 852, 857, 858, 861, 876], "base": [5, 7, 9, 11, 16, 21, 22, 27, 28, 32, 34, 35, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 54, 55, 58, 59, 61, 67, 69, 76, 81, 83, 88, 90, 92, 94, 97, 98, 101, 105, 107, 108, 110, 111, 112, 115, 117, 119, 130, 133, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 157, 159, 160, 161, 164, 165, 168, 169, 171, 175, 176, 177, 178, 179, 180, 181, 188, 190, 194, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 220, 221, 222, 224, 225, 226, 227, 228, 229, 232, 234, 237, 238, 239, 242, 251, 256, 257, 259, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 310, 312, 316, 317, 322, 327, 330, 339, 340, 341, 342, 345, 351, 352, 353, 354, 357, 358, 362, 373, 401, 408, 410, 411, 414, 415, 416, 418, 419, 421, 422, 425, 429, 431, 434, 437, 439, 441, 443, 444, 446, 447, 449, 452, 459, 465, 467, 475, 476, 477, 482, 493, 509, 515, 516, 519, 521, 524, 538, 553, 555, 556, 558, 559, 563, 564, 565, 566, 567, 570, 572, 573, 575, 576, 584, 597, 598, 599, 611, 616, 618, 635, 644, 648, 649, 656, 669, 672, 681, 682, 683, 684, 685, 686, 687, 691, 692, 696, 698, 699, 700, 702, 705, 708, 715, 723, 724, 726, 727, 729, 739, 743, 752, 754, 760, 762, 767, 772, 773, 775, 781, 782, 783, 784, 786, 788, 789, 790, 795, 796, 798, 800, 801, 803, 805, 806, 807, 823, 831, 833, 834, 835, 836, 838, 839, 844, 847, 851, 852, 855, 861, 864, 867, 871, 876], "lpa": [5, 133, 135, 155, 159, 304, 310, 323, 334, 343, 363, 365, 427, 483, 831, 852, 876], "nasion": [5, 155, 156, 159, 169, 304, 310, 323, 333, 334, 343, 363, 365, 427, 649, 831, 852, 858, 861, 876], "rpa": [5, 133, 135, 155, 159, 304, 310, 323, 334, 343, 363, 365, 427, 483, 831, 852, 876], "fine": [5, 180, 187, 208, 239, 267, 429, 566, 567, 575, 584, 595, 600, 876], "analys": [5, 11, 27, 31, 41, 68, 96, 100, 114, 134, 142, 145, 149, 150, 157, 159, 194, 198, 204, 205, 213, 225, 239, 242, 264, 265, 476, 477, 607, 680, 681, 767, 779, 842, 852, 858, 864, 876], "read_bem_solut": [5, 45, 107, 158, 514, 818, 866], "tran": [5, 7, 26, 41, 50, 51, 52, 67, 79, 107, 113, 114, 116, 122, 123, 133, 134, 135, 149, 156, 157, 158, 159, 171, 175, 177, 180, 181, 182, 189, 190, 206, 209, 254, 260, 272, 275, 298, 302, 310, 363, 364, 384, 387, 427, 429, 451, 459, 467, 468, 515, 518, 519, 563, 581, 584, 629, 661, 664, 691, 730, 731, 743, 759, 771, 830, 831, 851, 852, 858, 876], "solut": [5, 7, 11, 22, 23, 26, 27, 31, 32, 33, 34, 36, 38, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 67, 69, 70, 88, 90, 91, 92, 93, 103, 104, 105, 106, 107, 108, 122, 129, 155, 156, 158, 161, 164, 165, 169, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 190, 194, 198, 205, 220, 221, 232, 234, 242, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 282, 283, 284, 295, 296, 297, 307, 358, 362, 369, 442, 452, 453, 471, 472, 473, 474, 476, 477, 510, 514, 518, 519, 520, 522, 523, 524, 525, 526, 527, 530, 531, 534, 537, 538, 548, 549, 553, 554, 556, 596, 603, 605, 611, 614, 616, 618, 619, 626, 641, 644, 645, 647, 648, 649, 660, 661, 743, 759, 770, 771, 786, 788, 790, 801, 802, 806, 818, 823, 831, 833, 835, 836, 842, 847, 861, 866, 876], "must": [5, 18, 32, 43, 44, 47, 60, 81, 125, 126, 134, 143, 145, 155, 166, 168, 170, 171, 180, 183, 187, 189, 197, 198, 203, 205, 208, 215, 219, 224, 226, 228, 229, 232, 234, 239, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 280, 281, 284, 289, 295, 296, 312, 313, 316, 319, 323, 327, 339, 341, 345, 352, 356, 357, 358, 363, 367, 368, 369, 383, 389, 392, 407, 408, 414, 415, 416, 420, 423, 424, 425, 427, 432, 437, 440, 442, 449, 451, 452, 468, 471, 473, 474, 475, 476, 477, 484, 491, 496, 498, 508, 511, 516, 517, 518, 532, 533, 534, 555, 556, 558, 567, 569, 570, 571, 572, 575, 581, 584, 607, 638, 641, 645, 646, 657, 661, 662, 664, 666, 667, 670, 678, 681, 682, 683, 684, 686, 687, 691, 696, 698, 699, 700, 711, 715, 719, 726, 743, 746, 748, 759, 760, 762, 766, 767, 771, 773, 774, 775, 777, 779, 781, 782, 783, 784, 786, 790, 791, 795, 796, 797, 798, 799, 801, 804, 805, 806, 807, 839, 851, 852, 855, 857, 858, 861], "temporari": [5, 150, 171, 254, 267, 639, 751], "definit": [5, 26, 41, 45, 50, 107, 133, 157, 158, 159, 160, 161, 175, 180, 181, 182, 183, 184, 200, 206, 226, 242, 254, 267, 272, 295, 296, 318, 320, 327, 451, 476, 584, 630, 737, 743, 831, 851, 857, 859, 876], "use_coil_def": [5, 107, 866], "make_forward_solut": [5, 7, 26, 41, 50, 107, 157, 158, 181, 190, 206, 266, 616, 737, 851, 858, 866, 876], "src": [5, 7, 22, 24, 26, 28, 30, 31, 35, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 52, 54, 55, 59, 60, 67, 88, 90, 91, 92, 93, 107, 134, 135, 155, 157, 158, 159, 177, 179, 180, 181, 190, 206, 220, 232, 233, 234, 254, 266, 268, 269, 270, 273, 275, 276, 277, 278, 280, 296, 358, 442, 462, 472, 510, 511, 519, 532, 533, 536, 538, 543, 626, 636, 644, 645, 646, 653, 656, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 691, 692, 743, 759, 761, 801, 802, 806, 807, 828, 851, 861, 876], "mindist": [5, 24, 41, 45, 50, 155, 157, 158, 175, 180, 182, 183, 184, 206, 519, 645, 661], "read_forward_solut": [5, 22, 31, 32, 33, 34, 35, 40, 42, 43, 46, 47, 48, 49, 51, 54, 55, 58, 59, 67, 88, 90, 91, 92, 93, 129, 157, 176, 177, 178, 179, 190, 194, 220, 221, 266, 823, 866, 876], "orient": [5, 11, 22, 26, 28, 29, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 67, 78, 88, 90, 91, 92, 93, 102, 105, 106, 107, 108, 114, 122, 129, 133, 155, 157, 158, 159, 164, 165, 171, 174, 175, 176, 179, 180, 181, 182, 185, 186, 187, 190, 194, 206, 208, 220, 221, 224, 232, 234, 242, 259, 260, 261, 264, 266, 267, 269, 270, 273, 276, 277, 278, 282, 283, 295, 296, 297, 362, 428, 442, 451, 452, 453, 467, 471, 473, 474, 495, 518, 519, 522, 523, 524, 525, 526, 527, 529, 530, 532, 533, 534, 535, 538, 539, 540, 595, 605, 606, 609, 613, 614, 616, 629, 644, 648, 660, 661, 743, 752, 759, 761, 762, 771, 811, 823, 851, 860, 861, 864, 876], "later": [5, 11, 19, 32, 38, 43, 47, 68, 99, 107, 125, 133, 135, 139, 140, 141, 143, 148, 150, 161, 171, 174, 176, 179, 180, 188, 190, 197, 198, 199, 200, 203, 204, 205, 206, 210, 213, 214, 215, 216, 219, 232, 233, 239, 242, 257, 262, 263, 264, 265, 270, 272, 274, 276, 279, 358, 450, 476, 477, 556, 608, 610, 696, 698, 699, 700, 743, 806, 835, 840, 841, 852, 853, 858, 861, 876], "convert_forward_solut": [5, 22, 47, 48, 49, 54, 55, 67, 157, 177, 220, 519, 616, 823, 858, 866, 876], "force_fix": [5, 47, 48, 49, 54, 55, 67, 157, 220, 362, 534, 876], "plot_align": [5, 24, 52, 79, 107, 113, 116, 121, 122, 123, 134, 135, 155, 156, 157, 158, 169, 177, 181, 182, 183, 184, 262, 263, 264, 265, 307, 476, 477, 761, 799, 808, 813, 851, 855, 858, 866, 876], "surfac": [5, 11, 22, 24, 26, 27, 31, 34, 35, 36, 40, 42, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 58, 59, 60, 67, 70, 79, 88, 90, 92, 107, 113, 114, 116, 118, 122, 123, 132, 133, 134, 135, 149, 154, 155, 156, 158, 162, 163, 164, 165, 171, 174, 175, 176, 177, 178, 179, 182, 183, 184, 187, 189, 190, 194, 197, 206, 208, 215, 220, 221, 224, 232, 233, 234, 242, 260, 264, 265, 266, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 280, 282, 283, 295, 296, 302, 305, 306, 307, 333, 358, 362, 363, 384, 387, 407, 427, 442, 453, 458, 459, 464, 466, 467, 470, 471, 473, 474, 509, 511, 513, 514, 515, 519, 523, 524, 525, 526, 527, 530, 532, 533, 534, 539, 540, 542, 543, 565, 566, 581, 601, 604, 616, 619, 624, 625, 626, 627, 630, 633, 635, 644, 645, 659, 660, 661, 662, 665, 667, 668, 671, 673, 691, 692, 724, 727, 730, 743, 759, 761, 771, 778, 801, 802, 806, 816, 819, 823, 824, 829, 831, 833, 836, 839, 841, 842, 852, 855, 864, 866, 876], "pial": [5, 113, 122, 134, 135, 154, 180, 260, 275, 542, 619, 691, 743, 759, 771, 876], "set_3d_view": [5, 24, 52, 79, 107, 113, 116, 122, 123, 135, 155, 156, 157, 158, 159, 169, 177, 182, 866, 876], "azimuth": [5, 24, 79, 107, 113, 114, 116, 122, 123, 133, 134, 135, 155, 156, 157, 159, 169, 177, 180, 182, 189, 209, 221, 743, 811, 876], "elev": [5, 24, 79, 107, 113, 114, 116, 122, 123, 133, 134, 135, 155, 156, 157, 159, 169, 180, 182, 189, 197, 204, 209, 221, 743, 811, 876], "distanc": [5, 11, 22, 24, 28, 29, 31, 35, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 67, 78, 88, 90, 91, 92, 93, 102, 105, 106, 107, 108, 114, 122, 126, 129, 133, 134, 135, 142, 155, 156, 157, 158, 159, 160, 165, 169, 171, 175, 176, 177, 178, 180, 182, 189, 190, 194, 200, 207, 209, 220, 221, 232, 234, 254, 259, 262, 263, 264, 265, 267, 268, 271, 272, 273, 275, 280, 302, 342, 363, 408, 411, 412, 415, 418, 427, 429, 451, 460, 466, 467, 476, 477, 509, 519, 538, 555, 556, 560, 564, 567, 570, 575, 584, 589, 590, 636, 644, 645, 653, 656, 659, 661, 662, 664, 666, 667, 668, 670, 671, 683, 684, 686, 687, 691, 696, 698, 700, 743, 760, 763, 775, 782, 786, 795, 798, 803, 805, 811, 831, 858, 861, 876], "focalpoint": [5, 24, 52, 107, 114, 122, 133, 155, 156, 157, 158, 159, 177, 221, 743, 811, 876], "04": [5, 19, 24, 31, 35, 41, 42, 49, 50, 56, 69, 70, 72, 82, 83, 88, 91, 93, 98, 101, 104, 106, 119, 121, 122, 125, 128, 136, 138, 140, 157, 161, 163, 176, 179, 182, 184, 198, 199, 207, 209, 224, 225, 226, 228, 229, 234, 242, 386, 429, 515, 520, 556, 584, 653, 658, 838, 858], "load": [5, 7, 11, 13, 14, 24, 26, 28, 29, 30, 32, 33, 37, 38, 39, 41, 42, 43, 44, 45, 46, 49, 50, 67, 70, 74, 78, 79, 80, 90, 91, 92, 94, 95, 97, 98, 99, 101, 102, 105, 107, 108, 110, 111, 115, 117, 118, 119, 121, 123, 125, 126, 133, 134, 141, 142, 144, 149, 150, 151, 155, 157, 159, 160, 161, 164, 166, 167, 168, 169, 170, 171, 175, 176, 179, 180, 181, 182, 183, 187, 188, 190, 191, 194, 197, 198, 199, 201, 202, 203, 205, 206, 207, 208, 209, 214, 215, 216, 217, 224, 225, 226, 227, 228, 232, 233, 234, 237, 239, 254, 257, 258, 262, 263, 264, 265, 272, 311, 316, 320, 327, 357, 359, 373, 458, 459, 476, 477, 483, 495, 496, 503, 515, 518, 519, 534, 545, 556, 558, 568, 597, 607, 609, 613, 614, 616, 618, 624, 625, 627, 661, 694, 717, 718, 759, 773, 777, 781, 783, 790, 796, 823, 831, 852, 853, 861, 876], "three": [5, 31, 45, 92, 101, 107, 118, 141, 144, 150, 155, 157, 158, 160, 167, 177, 181, 187, 188, 197, 198, 203, 204, 205, 213, 215, 216, 219, 224, 237, 239, 254, 256, 259, 260, 262, 263, 264, 265, 270, 271, 276, 278, 295, 296, 305, 306, 307, 322, 408, 415, 466, 471, 476, 477, 513, 532, 533, 555, 556, 566, 570, 595, 627, 630, 645, 648, 677, 679, 696, 698, 700, 733, 743, 760, 771, 773, 775, 782, 784, 786, 794, 795, 796, 798, 803, 805, 824, 829, 835, 852, 855, 858, 861, 876], "layer": [5, 45, 107, 157, 158, 181, 182, 183, 184, 198, 242, 305, 384, 513, 520, 645, 653, 658, 759, 851, 858, 876], "model": [5, 7, 11, 12, 13, 18, 22, 26, 31, 32, 36, 41, 42, 50, 56, 72, 99, 103, 104, 107, 111, 114, 119, 134, 140, 150, 154, 155, 158, 159, 160, 161, 163, 169, 170, 171, 174, 175, 181, 182, 183, 184, 189, 190, 194, 202, 203, 221, 228, 242, 248, 259, 260, 262, 264, 265, 266, 267, 270, 272, 273, 275, 276, 277, 278, 295, 296, 300, 302, 305, 307, 339, 352, 358, 362, 370, 408, 412, 414, 415, 418, 420, 425, 426, 449, 451, 467, 471, 476, 481, 513, 514, 518, 519, 520, 522, 523, 524, 525, 534, 553, 555, 565, 581, 594, 603, 605, 606, 616, 622, 631, 637, 644, 645, 653, 658, 682, 709, 737, 743, 759, 761, 783, 798, 811, 818, 823, 831, 836, 839, 841, 842, 852, 855, 861, 866, 876], "colloc": [5, 26, 41, 45, 50, 107, 157, 158, 175, 181, 514, 876], "patch": [5, 11, 22, 28, 29, 31, 34, 35, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 67, 88, 90, 91, 92, 93, 102, 105, 106, 107, 108, 122, 125, 129, 155, 157, 159, 165, 171, 176, 177, 178, 180, 181, 190, 194, 220, 221, 232, 234, 254, 259, 262, 263, 264, 265, 270, 271, 275, 276, 278, 280, 282, 283, 362, 408, 415, 476, 477, 523, 524, 525, 526, 527, 530, 534, 539, 540, 555, 556, 570, 604, 626, 644, 660, 661, 696, 698, 700, 760, 775, 782, 786, 795, 798, 803, 805, 861, 876], "statist": [5, 10, 11, 22, 28, 29, 31, 35, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 67, 85, 86, 88, 90, 91, 92, 93, 94, 95, 99, 101, 102, 105, 106, 108, 111, 122, 129, 148, 150, 154, 155, 157, 159, 161, 165, 171, 176, 177, 178, 180, 181, 190, 194, 200, 203, 204, 220, 221, 231, 242, 254, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 282, 283, 295, 296, 316, 320, 322, 327, 351, 352, 358, 362, 449, 476, 477, 523, 524, 525, 526, 527, 530, 534, 539, 540, 553, 556, 604, 607, 611, 626, 631, 656, 660, 661, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 690, 696, 698, 699, 700, 726, 775, 779, 782, 803, 831, 842, 853, 855, 866, 876], "3523": [5, 22, 31, 32, 33, 34, 35, 40, 42, 43, 46, 47, 48, 49, 51, 54, 55, 58, 59, 67, 88, 90, 91, 92, 93, 129, 171, 176, 177, 178, 179, 190, 194, 220, 221], "8196": [5, 181, 190], "free": [5, 22, 26, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 67, 79, 88, 90, 91, 92, 93, 107, 129, 139, 150, 157, 158, 165, 171, 175, 176, 177, 179, 181, 190, 194, 206, 208, 220, 221, 225, 229, 242, 260, 262, 263, 266, 295, 296, 297, 372, 451, 452, 453, 471, 473, 474, 523, 524, 525, 526, 527, 530, 534, 538, 539, 540, 565, 616, 637, 641, 683, 684, 686, 687, 823, 835, 839, 841, 842, 851, 857, 858, 864, 876], "frame": [5, 11, 22, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 67, 78, 88, 90, 91, 92, 93, 102, 105, 106, 108, 110, 122, 129, 133, 134, 135, 139, 150, 158, 162, 163, 164, 165, 169, 171, 176, 177, 178, 179, 180, 181, 182, 183, 189, 190, 194, 208, 210, 220, 221, 232, 234, 254, 260, 262, 263, 264, 265, 266, 267, 275, 300, 301, 310, 314, 323, 328, 365, 387, 427, 467, 470, 476, 477, 480, 487, 506, 508, 515, 520, 567, 575, 584, 626, 627, 629, 643, 645, 719, 731, 738, 740, 743, 759, 771, 811, 831, 852, 857, 858, 861, 876], "normal": [5, 11, 15, 16, 18, 22, 24, 26, 28, 29, 30, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 54, 55, 58, 59, 60, 67, 69, 88, 90, 92, 102, 105, 106, 107, 108, 111, 112, 113, 114, 135, 136, 141, 142, 154, 155, 156, 157, 159, 160, 168, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 194, 204, 205, 208, 219, 220, 221, 232, 234, 238, 239, 242, 253, 255, 259, 260, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 275, 276, 277, 278, 282, 283, 295, 296, 311, 319, 356, 362, 408, 410, 413, 415, 442, 451, 471, 473, 474, 476, 477, 495, 523, 524, 525, 526, 527, 529, 530, 532, 533, 534, 539, 540, 555, 556, 566, 581, 609, 613, 645, 649, 660, 661, 678, 696, 698, 700, 708, 712, 714, 722, 744, 760, 775, 782, 786, 794, 795, 798, 803, 805, 831, 835, 841, 857, 861, 876], "emploi": [5, 11, 22, 26, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 54, 55, 58, 59, 67, 88, 90, 92, 107, 157, 158, 175, 176, 177, 178, 181, 187, 188, 190, 194, 221, 239, 555, 677, 851, 852, 857, 858, 861], "rotat": [5, 10, 15, 19, 22, 34, 35, 40, 41, 42, 44, 46, 47, 48, 49, 54, 55, 58, 59, 67, 78, 88, 90, 92, 107, 133, 155, 157, 171, 176, 177, 178, 179, 181, 190, 193, 194, 200, 202, 221, 254, 264, 265, 267, 295, 296, 348, 363, 367, 429, 467, 560, 566, 584, 733, 734, 736, 743, 759, 778, 833, 841, 858, 876], "convert": [5, 22, 27, 34, 35, 40, 41, 42, 46, 47, 48, 49, 54, 55, 58, 59, 67, 74, 88, 90, 92, 107, 110, 120, 128, 133, 135, 136, 139, 140, 141, 142, 143, 148, 149, 150, 155, 157, 159, 160, 168, 170, 176, 177, 178, 181, 187, 188, 189, 190, 194, 199, 200, 204, 213, 215, 220, 221, 225, 229, 232, 233, 234, 238, 256, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 273, 276, 277, 278, 281, 288, 301, 310, 311, 336, 348, 362, 364, 410, 414, 419, 420, 423, 437, 444, 446, 447, 464, 469, 470, 472, 476, 477, 487, 496, 500, 511, 518, 586, 587, 696, 698, 699, 700, 712, 722, 734, 736, 742, 744, 747, 759, 811, 813, 835, 836, 839, 842, 852, 858, 876], "helmet": [5, 7, 27, 45, 78, 79, 107, 114, 120, 121, 128, 136, 149, 155, 157, 169, 171, 182, 183, 184, 187, 264, 265, 267, 459, 515, 522, 537, 614, 743, 752, 759, 778, 811, 858, 876], "unknown": [5, 46, 70, 72, 75, 81, 88, 91, 107, 125, 140, 145, 150, 166, 167, 168, 180, 197, 198, 199, 201, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 219, 221, 267, 323, 328, 471, 476, 477, 484, 491, 506, 508, 731, 796, 817, 826, 858, 861, 876], "deriv": [5, 32, 33, 34, 46, 70, 107, 121, 124, 139, 143, 148, 155, 167, 198, 224, 225, 237, 242, 267, 363, 556, 591, 616, 823, 858, 861, 876], "subset": [5, 45, 110, 139, 141, 143, 145, 150, 157, 159, 171, 174, 205, 206, 210, 215, 224, 237, 257, 262, 263, 264, 265, 268, 272, 282, 283, 295, 296, 352, 356, 357, 367, 368, 369, 400, 408, 411, 415, 418, 432, 446, 451, 452, 465, 471, 473, 474, 476, 477, 534, 556, 669, 672, 696, 697, 698, 699, 700, 743, 773, 783, 796, 857, 858, 864, 876], "dip_opm": 5, "_": [5, 8, 9, 19, 37, 38, 45, 50, 60, 110, 133, 136, 145, 150, 159, 160, 171, 177, 179, 190, 193, 200, 203, 205, 210, 213, 220, 224, 225, 228, 229, 238, 239, 301, 556, 567, 599, 712, 722, 835, 858, 876], "fit_dipol": [5, 45, 82, 175, 180, 182, 183, 184, 260, 261, 298, 606, 858, 866, 876], "040": [5, 79, 111, 119, 139, 148, 161, 168, 207, 221, 242, 264, 265, 352, 855], "080": [5, 38, 79, 184, 207, 215, 218, 225], "idx": [5, 31, 35, 40, 47, 59, 63, 82, 112, 131, 149, 180, 190, 197, 201, 205, 220, 232, 256, 260, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 309, 475, 476, 477, 532, 533, 699, 771, 876], "argmax": [5, 35, 38, 40, 48, 50, 58, 59, 117, 175, 180, 193], "gof": [5, 40, 114, 168, 175, 177, 182, 183, 184, 260, 262, 263, 264, 265, 298, 309, 340, 342, 343, 344, 476, 477, 553, 696, 698, 699, 700, 771, 876], "1f": [5, 30, 40, 47, 75, 98, 107, 112, 155, 175, 182, 183, 190, 194, 200, 220, 224, 259, 262, 263, 264, 265, 271, 408, 415, 476, 477, 698, 700, 775, 782, 795], "1000": [5, 40, 48, 69, 79, 82, 94, 111, 112, 126, 133, 145, 155, 156, 158, 159, 175, 180, 181, 182, 183, 190, 200, 201, 205, 213, 219, 225, 229, 232, 233, 234, 437, 443, 445, 449, 476, 477, 556, 618, 683, 684, 686, 687, 712, 722, 743, 831, 876], "n20m": 5, "plot_loc": [5, 175, 180, 260, 876], "orthoview": [5, 35, 40, 59, 133, 159, 175, 260, 771, 876], "conductormodel": [5, 45, 107, 157, 182, 183, 184, 259, 262, 263, 264, 265, 271, 302, 310, 408, 415, 451, 476, 477, 513, 514, 520, 555, 556, 570, 603, 645, 696, 698, 700, 759, 760, 767, 775, 777, 779, 782, 783, 786, 793, 795, 797, 798, 799, 803, 805, 818, 831, 866], "solver": [5, 10, 11, 13, 15, 18, 27, 36, 40, 45, 46, 56, 59, 174, 194, 259, 260, 264, 266, 267, 273, 451, 452, 473, 514, 538, 605, 614, 616, 682, 802, 839, 844, 864, 876], "instanc": [5, 15, 26, 31, 43, 44, 45, 50, 73, 81, 86, 107, 112, 157, 158, 165, 168, 170, 171, 175, 177, 181, 182, 184, 187, 188, 190, 202, 203, 204, 206, 208, 213, 237, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 310, 311, 312, 314, 315, 317, 323, 326, 328, 329, 331, 332, 333, 334, 335, 336, 339, 341, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 367, 368, 369, 371, 375, 376, 377, 379, 380, 381, 383, 388, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 429, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 449, 451, 452, 453, 454, 455, 462, 465, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 509, 511, 512, 514, 515, 516, 517, 518, 519, 520, 523, 524, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 543, 545, 548, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 591, 592, 596, 597, 598, 599, 601, 602, 603, 606, 607, 608, 609, 610, 613, 616, 618, 625, 628, 637, 638, 641, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 681, 682, 683, 684, 685, 686, 687, 688, 691, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 713, 716, 717, 732, 733, 735, 740, 743, 744, 745, 746, 752, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 809, 813, 816, 818, 822, 826, 828, 835, 853, 876], "36": [5, 13, 19, 21, 28, 32, 34, 35, 41, 42, 45, 47, 55, 56, 79, 81, 101, 106, 110, 112, 143, 168, 170, 175, 180, 194, 207, 224, 225, 226, 228, 229, 232, 233, 234, 239, 242, 262, 263, 264, 265, 400, 476, 477, 593, 695, 876], "rad": [5, 45, 175, 180, 182, 183, 184, 645, 831], "77": [5, 11, 13, 19, 35, 79, 80, 94, 106, 107, 110, 112, 136, 147, 155, 156, 167, 168, 180, 190, 193, 194, 205, 206, 207, 215, 224, 225, 228, 229, 232, 237, 333, 876], "guess": [5, 45, 121, 175, 180, 182, 183, 184, 203, 207, 254, 467, 487, 756, 876], "grid": [5, 24, 40, 41, 45, 50, 111, 113, 121, 125, 134, 154, 155, 157, 175, 177, 179, 180, 182, 183, 184, 193, 194, 206, 207, 210, 224, 226, 254, 272, 274, 275, 325, 473, 556, 581, 645, 697, 769, 786, 789, 851, 852, 858, 876], "n_sampl": [5, 45, 53, 64, 95, 136, 182, 183, 184, 194, 219, 224, 408, 409, 410, 411, 412, 413, 415, 416, 418, 419, 420, 421, 422, 423, 425, 450, 557, 582, 646, 675, 682, 685, 835], "10250": 5, "65975931e": 5, "41596252e": 5, "50067005e": 5, "18042429e": 5, "93613735e": 5, "88258373e": 5, "73325418e": 5, "23906800e": 5, "47917983e": 5, "14619592e": 5, "36697422e": 5, "53163548e": 5, "08794660e": 5, "00286749e": 5, "18143308e": 5, "22829671e": 5, "93976860e": 5, "28130683e": 5, "86574659e": 5, "28436459e": 5, "91104392e": 5, "54318851e": 5, "60478446e": 5, "18114621e": 5, "42024459e": 5, "20931076e": 5, "52605668e": 5, "29661483e": 5, "53868159e": 5, "40025250e": 5, "28102479e": 5, "49204692e": 5, "41942628e": 5, "29095862e": 5, "00102289e": 5, "19639173e": 5, "09222979e": 5, "25564394e": 5, "49616938e": 5, "35015052e": 5, "94284541e": 5, "29140004e": 5, "85113742e": 5, "46141046e": 5, "97190359e": 5, "ra": [5, 24, 26, 41, 43, 45, 50, 107, 133, 134, 155, 157, 158, 160, 175, 179, 180, 182, 183, 184, 206, 260, 269, 270, 273, 275, 276, 277, 278, 310, 323, 363, 442, 470, 508, 616, 731, 735, 743, 816, 823, 831, 852, 858, 876], "000000": [5, 24, 26, 41, 45, 50, 107, 142, 143, 155, 157, 158, 175, 179, 180, 181, 182, 183, 184, 206, 227, 229, 233, 234, 239], "999800": [5, 107], "015800": [5, 107], "009200": [5, 107], "018100": [5, 107], "930500": [5, 107], "365900": [5, 107], "002800": [5, 107], "366000": [5, 107], "930600": [5, 107], "40": [5, 9, 10, 12, 13, 19, 21, 28, 33, 35, 40, 45, 46, 47, 58, 59, 67, 72, 74, 78, 79, 82, 88, 98, 101, 102, 104, 106, 107, 110, 112, 119, 122, 133, 135, 136, 139, 140, 143, 144, 150, 154, 155, 157, 159, 165, 168, 170, 177, 180, 182, 183, 186, 190, 193, 194, 199, 200, 202, 203, 207, 208, 209, 213, 224, 225, 226, 228, 229, 231, 232, 233, 234, 238, 242, 262, 263, 272, 429, 443, 476, 477, 485, 556, 568, 575, 576, 579, 648, 747, 773, 791, 796, 810, 852, 858, 876], "105": [5, 24, 26, 35, 41, 45, 50, 67, 83, 92, 107, 112, 136, 155, 157, 168, 175, 180, 182, 183, 184, 194, 204, 206, 861], "decompos": [5, 8, 45, 175, 180, 182, 183, 184, 203, 408, 412, 415, 556, 557, 726, 858, 876], "eigenvalu": [5, 21, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 88, 91, 92, 102, 105, 106, 107, 108, 119, 151, 161, 165, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 220, 221, 232, 234, 259, 408, 708, 858, 861], "without": [5, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 69, 74, 88, 91, 92, 102, 105, 107, 111, 118, 119, 125, 133, 143, 148, 149, 150, 151, 158, 160, 161, 164, 169, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 198, 199, 200, 202, 203, 204, 205, 206, 208, 215, 220, 221, 224, 239, 254, 257, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 289, 290, 293, 295, 296, 323, 324, 352, 356, 357, 367, 368, 369, 370, 408, 415, 438, 439, 440, 441, 449, 451, 452, 471, 473, 474, 476, 477, 484, 491, 495, 496, 516, 525, 527, 530, 534, 549, 575, 591, 607, 609, 613, 614, 631, 690, 697, 733, 743, 783, 801, 806, 813, 833, 835, 839, 843, 851, 853, 855, 857, 858, 876], "whiten": [5, 7, 14, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 54, 55, 57, 58, 59, 60, 88, 91, 92, 102, 103, 104, 105, 106, 107, 108, 111, 120, 128, 148, 152, 153, 161, 164, 165, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 203, 220, 221, 232, 234, 242, 254, 259, 262, 263, 264, 265, 267, 272, 295, 296, 352, 356, 357, 367, 368, 369, 408, 415, 449, 451, 452, 471, 473, 474, 476, 477, 531, 534, 553, 556, 557, 582, 611, 622, 709, 773, 777, 781, 783, 796, 800, 831, 855, 876], "omit": [5, 12, 21, 24, 26, 28, 29, 30, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 54, 55, 57, 58, 59, 60, 77, 79, 85, 88, 91, 92, 102, 105, 106, 107, 108, 117, 119, 122, 149, 151, 155, 157, 161, 165, 167, 168, 170, 171, 175, 176, 177, 178, 180, 181, 182, 183, 184, 190, 194, 198, 206, 208, 220, 221, 232, 234, 256, 262, 263, 264, 265, 272, 414, 476, 477, 511, 556, 576, 577, 585, 602, 614, 653, 658, 700, 733, 759, 761, 777, 782, 788, 797, 835, 861, 876], "inner": [5, 26, 31, 41, 43, 45, 50, 107, 127, 154, 157, 159, 160, 175, 180, 181, 190, 242, 254, 262, 263, 266, 302, 305, 451, 467, 519, 584, 645, 661, 743, 831, 836, 839, 842, 851, 852, 855, 858, 861, 876], "skull": [5, 26, 41, 43, 45, 50, 107, 111, 133, 154, 155, 157, 159, 160, 169, 175, 180, 181, 190, 242, 254, 266, 275, 302, 305, 451, 519, 520, 581, 645, 653, 658, 661, 743, 759, 831, 836, 839, 842, 851, 852, 855, 858, 861, 876], "cm": [5, 9, 15, 24, 41, 45, 50, 88, 114, 121, 135, 141, 144, 155, 157, 165, 169, 175, 180, 182, 183, 184, 188, 199, 205, 206, 207, 208, 209, 226, 238, 254, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 333, 335, 337, 476, 477, 484, 512, 575, 774, 777, 779, 804, 831, 876], "35": [5, 11, 12, 13, 19, 21, 28, 34, 35, 45, 47, 79, 101, 106, 107, 110, 112, 135, 142, 144, 145, 148, 157, 159, 163, 168, 170, 173, 183, 184, 193, 194, 204, 205, 207, 209, 224, 225, 226, 228, 229, 232, 233, 234, 238, 242, 254, 473, 523, 568, 569, 576, 579, 747, 858], "insid": [5, 16, 24, 26, 41, 45, 50, 107, 139, 148, 155, 157, 158, 160, 175, 180, 181, 182, 183, 184, 201, 206, 208, 213, 228, 234, 268, 272, 273, 276, 277, 278, 290, 336, 391, 432, 460, 467, 476, 477, 505, 527, 743, 796, 816, 835, 851, 855, 858, 876], "sphere": [5, 24, 26, 35, 41, 43, 45, 48, 50, 59, 70, 82, 91, 92, 107, 118, 121, 123, 134, 155, 157, 158, 159, 175, 177, 180, 181, 182, 183, 184, 188, 198, 206, 207, 208, 242, 254, 259, 260, 262, 263, 264, 265, 268, 271, 273, 295, 296, 300, 303, 304, 310, 358, 407, 408, 415, 451, 476, 477, 488, 515, 518, 519, 520, 555, 556, 565, 570, 645, 659, 662, 696, 698, 700, 743, 759, 760, 767, 771, 775, 777, 779, 782, 783, 786, 793, 795, 797, 798, 799, 802, 803, 805, 813, 831, 876], "102": [5, 11, 13, 14, 15, 16, 18, 22, 26, 28, 29, 30, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 64, 67, 68, 70, 71, 72, 75, 77, 78, 81, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 118, 119, 121, 122, 125, 127, 129, 130, 131, 136, 139, 140, 141, 145, 148, 149, 150, 151, 155, 156, 157, 159, 161, 165, 166, 167, 168, 169, 171, 175, 176, 177, 178, 179, 180, 181, 182, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 208, 213, 214, 215, 216, 220, 221, 224, 226, 227, 228, 229, 232, 234, 254, 861], "extent": [5, 13, 16, 24, 41, 45, 47, 50, 55, 69, 88, 93, 105, 139, 155, 157, 175, 180, 182, 183, 184, 194, 205, 206, 226, 227, 228, 229, 232, 233, 234, 242, 262, 263, 431, 466, 509, 538, 656, 686, 687, 857, 858, 876], "73": [5, 13, 15, 19, 21, 33, 34, 35, 40, 45, 78, 79, 94, 105, 106, 110, 112, 119, 126, 144, 148, 168, 175, 181, 193, 194, 207, 224, 225, 226, 227, 228, 229, 232, 234, 237, 242, 262, 263, 264, 265, 476, 477, 698, 700, 715], "y": [5, 9, 10, 11, 12, 13, 16, 18, 19, 24, 41, 45, 47, 50, 69, 70, 78, 80, 88, 110, 112, 113, 118, 135, 144, 150, 155, 157, 159, 160, 169, 171, 174, 175, 179, 180, 182, 183, 184, 193, 194, 197, 200, 201, 204, 206, 213, 214, 215, 216, 224, 234, 239, 256, 259, 260, 262, 263, 264, 265, 267, 270, 271, 276, 278, 286, 300, 303, 304, 310, 311, 333, 342, 343, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 427, 448, 476, 477, 488, 522, 523, 555, 556, 557, 565, 570, 616, 649, 682, 696, 698, 700, 731, 733, 734, 736, 743, 744, 747, 760, 767, 771, 774, 775, 776, 777, 779, 781, 782, 783, 784, 785, 786, 791, 793, 795, 797, 798, 799, 803, 804, 805, 811, 823, 831, 833, 858, 876], "42": [5, 8, 9, 11, 13, 14, 15, 16, 18, 19, 20, 28, 29, 35, 42, 45, 47, 49, 56, 67, 68, 70, 71, 72, 75, 78, 79, 81, 86, 88, 90, 91, 94, 95, 97, 98, 101, 102, 105, 106, 107, 108, 109, 110, 112, 115, 116, 119, 121, 125, 130, 131, 136, 138, 140, 145, 150, 151, 155, 161, 165, 166, 167, 168, 171, 174, 175, 176, 178, 179, 180, 181, 183, 186, 193, 194, 197, 200, 201, 202, 203, 204, 205, 206, 207, 213, 216, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 242, 267, 523, 538, 656], "108": [5, 16, 35, 79, 80, 111, 112, 119, 133, 161, 168, 190, 207, 228, 229, 242, 264, 265, 352, 783, 855], "80": [5, 9, 13, 16, 19, 30, 31, 33, 35, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 69, 77, 78, 79, 82, 84, 85, 88, 92, 102, 106, 110, 112, 113, 114, 116, 117, 118, 123, 125, 136, 148, 150, 155, 157, 167, 168, 170, 171, 175, 177, 178, 180, 182, 183, 184, 190, 194, 205, 207, 208, 209, 224, 225, 226, 228, 229, 233, 234, 242, 407, 556, 648, 784, 791, 841, 876], "1080": [5, 10, 193, 242, 414], "543": [5, 40, 229], "after": [5, 8, 11, 16, 22, 24, 26, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 61, 67, 79, 86, 88, 90, 92, 99, 101, 107, 125, 129, 133, 135, 136, 139, 140, 141, 143, 144, 145, 148, 149, 150, 154, 155, 157, 160, 165, 166, 167, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 190, 194, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 215, 220, 221, 224, 226, 227, 232, 237, 239, 254, 255, 256, 262, 263, 264, 265, 267, 269, 270, 272, 273, 275, 276, 277, 278, 285, 295, 296, 339, 352, 356, 357, 359, 361, 367, 368, 369, 383, 408, 410, 414, 415, 419, 421, 422, 426, 432, 449, 450, 451, 452, 471, 473, 474, 476, 477, 534, 555, 556, 559, 567, 568, 569, 572, 573, 575, 576, 577, 579, 582, 585, 614, 616, 638, 657, 696, 721, 723, 724, 726, 727, 732, 743, 759, 767, 773, 777, 779, 781, 782, 783, 786, 787, 790, 794, 796, 807, 823, 831, 835, 843, 851, 852, 855, 857, 858, 861, 864, 876], "infeas": [5, 24, 41, 45, 50, 155, 157, 175, 180, 182, 183, 184, 206], "least": [5, 41, 45, 69, 82, 112, 140, 157, 158, 175, 180, 199, 200, 201, 203, 204, 208, 224, 229, 242, 262, 263, 264, 265, 272, 410, 419, 423, 425, 444, 446, 447, 465, 476, 477, 556, 558, 559, 574, 575, 584, 681, 743, 773, 796, 841, 851, 855, 857, 858, 876], "awai": [5, 41, 45, 133, 140, 143, 157, 158, 175, 180, 182, 187, 199, 204, 206, 210, 363, 488, 556, 581, 649, 691, 724, 727, 743, 816, 838, 858, 861, 876], "few": [5, 21, 26, 41, 44, 45, 50, 69, 92, 99, 107, 134, 143, 144, 148, 154, 155, 156, 157, 158, 160, 161, 166, 170, 171, 175, 180, 181, 197, 198, 199, 200, 202, 203, 205, 206, 207, 213, 216, 225, 229, 234, 237, 239, 267, 429, 566, 567, 575, 584, 831, 835, 843, 853, 855, 858, 860, 876], "interior": [5, 26, 41, 45, 50, 107, 157, 158, 175, 180, 181, 208], "statu": [5, 26, 41, 45, 50, 107, 157, 158, 175, 180, 181, 187, 262, 263, 264, 265, 267, 339, 361, 363, 476, 477, 484, 491, 498, 553, 696, 698, 699, 700, 743, 831, 835, 858, 861, 876], "70": [5, 9, 12, 13, 15, 19, 21, 34, 41, 45, 46, 47, 58, 59, 79, 86, 88, 101, 102, 106, 107, 110, 112, 114, 133, 135, 136, 139, 142, 143, 155, 157, 158, 165, 168, 169, 182, 183, 193, 194, 200, 203, 207, 209, 224, 225, 228, 229, 232, 237, 239, 242, 262, 263, 264, 265, 333, 474, 476, 477, 556, 698, 700, 712, 715, 722, 723, 726, 876], "outsid": [5, 16, 24, 26, 41, 45, 50, 107, 133, 134, 139, 143, 155, 157, 158, 160, 175, 180, 181, 182, 183, 184, 198, 200, 205, 206, 208, 213, 215, 256, 259, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 276, 277, 278, 290, 387, 408, 415, 450, 476, 477, 509, 527, 555, 556, 570, 572, 696, 698, 700, 732, 740, 743, 760, 761, 775, 782, 786, 795, 798, 801, 803, 805, 806, 857, 858, 859, 861, 876], "exterior": [5, 26, 41, 45, 50, 107, 157, 158, 175, 180, 181, 208], "284": [5, 110, 168, 224, 229, 242, 408, 876], "473": [5, 112, 194, 207, 229, 275], "qhull": [5, 26, 41, 45, 50, 107, 157, 158, 175, 180, 181, 876], "189": [5, 19, 32, 33, 34, 46, 97, 111, 167, 168, 173, 193, 194, 224, 228, 229, 238, 242, 858], "solid": [5, 26, 41, 45, 50, 107, 149, 157, 158, 160, 175, 180, 181, 205, 767, 794, 858], "angl": [5, 26, 41, 45, 50, 107, 116, 129, 157, 158, 160, 168, 169, 171, 175, 180, 181, 182, 254, 267, 301, 305, 582, 637, 743, 748, 811, 858, 876], "244": [5, 20, 110, 168, 228, 229], "complet": [5, 7, 9, 26, 32, 33, 34, 41, 45, 50, 107, 133, 143, 149, 154, 157, 158, 160, 168, 175, 179, 180, 181, 198, 200, 203, 206, 221, 224, 242, 254, 262, 263, 275, 301, 507, 556, 583, 597, 693, 739, 743, 751, 758, 835, 842, 851, 852, 853, 855, 858, 860, 861, 876], "limit": [5, 31, 34, 40, 41, 42, 45, 50, 58, 59, 88, 92, 107, 111, 112, 125, 134, 136, 140, 141, 157, 164, 165, 167, 175, 176, 178, 180, 181, 188, 190, 194, 198, 200, 203, 208, 213, 221, 229, 239, 242, 256, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 273, 276, 277, 278, 280, 408, 415, 434, 441, 452, 473, 476, 477, 495, 555, 556, 560, 575, 584, 609, 613, 618, 624, 674, 680, 682, 696, 698, 699, 700, 758, 760, 762, 767, 774, 775, 777, 779, 781, 782, 784, 786, 791, 795, 798, 801, 803, 805, 806, 807, 825, 833, 835, 857, 858, 859, 861, 864, 876], "214": [5, 110, 168, 207, 229], "through": [5, 9, 19, 27, 37, 45, 76, 83, 111, 133, 139, 140, 141, 143, 144, 148, 154, 155, 159, 164, 165, 167, 171, 175, 179, 180, 182, 183, 184, 193, 198, 200, 203, 204, 205, 208, 210, 213, 215, 216, 221, 232, 239, 242, 255, 260, 262, 263, 264, 265, 295, 322, 371, 449, 458, 467, 476, 508, 555, 556, 646, 708, 743, 765, 767, 771, 774, 776, 780, 788, 831, 833, 835, 842, 853, 857, 858, 864, 876], "0642": [5, 168], "3779": 5, "18": [5, 9, 11, 13, 19, 28, 31, 33, 34, 35, 40, 43, 45, 47, 50, 56, 58, 59, 64, 70, 79, 80, 81, 88, 91, 93, 101, 106, 107, 108, 110, 112, 125, 128, 132, 136, 139, 144, 159, 166, 167, 168, 170, 175, 176, 178, 179, 180, 182, 183, 190, 194, 197, 198, 201, 204, 205, 206, 207, 208, 210, 212, 213, 214, 215, 216, 221, 224, 225, 226, 228, 229, 233, 234, 242, 262, 263, 264, 265, 275, 277, 278, 282, 283, 291, 296, 305, 307, 352, 353, 354, 355, 356, 357, 367, 368, 369, 384, 392, 400, 414, 420, 437, 452, 455, 456, 467, 471, 473, 474, 476, 477, 496, 509, 511, 517, 542, 547, 549, 556, 568, 569, 576, 644, 647, 648, 650, 661, 663, 695, 696, 699, 760, 773, 782, 784, 796, 802, 805, 807, 833, 838, 858], "7678": 5, "6600": 5, "0647": 5, "99": [5, 15, 16, 19, 20, 26, 35, 47, 49, 68, 69, 79, 80, 88, 91, 101, 102, 106, 107, 110, 112, 118, 119, 121, 136, 150, 151, 156, 159, 161, 168, 171, 176, 178, 179, 180, 183, 190, 193, 194, 205, 207, 215, 220, 221, 224, 225, 227, 228, 229, 242, 262, 263, 272, 476, 477, 773, 796, 858, 876], "leakag": [5, 27, 36, 45, 56, 273, 275, 362, 533, 535, 537, 616, 619, 724, 727, 743, 748], "constrain": [5, 107, 165, 174, 177, 178, 179, 204, 242, 257, 262, 263, 291, 292, 293, 294, 295, 296, 358, 572, 831, 836, 842, 855, 858, 861, 876], "idea": [5, 7, 21, 27, 111, 154, 170, 174, 176, 200, 202, 203, 204, 205, 232, 234, 239, 242, 262, 263, 306, 431, 854, 855, 858, 859, 864], "inverse_oper": [5, 7, 11, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 47, 48, 54, 59, 88, 102, 105, 106, 107, 108, 171, 176, 232, 234, 272, 523, 524, 525, 526, 527, 529, 530, 535, 539, 540], "minimum_norm": [5, 7, 11, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 58, 59, 60, 88, 92, 102, 105, 106, 107, 108, 122, 165, 176, 177, 178, 180, 181, 190, 194, 204, 220, 221, 232, 234, 831, 844, 851, 858, 866, 876], "make_inverse_oper": [5, 7, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 88, 92, 107, 176, 177, 178, 181, 190, 194, 221, 537, 851, 858, 866, 876], "loos": [5, 7, 31, 34, 35, 40, 41, 42, 46, 48, 54, 55, 59, 60, 88, 92, 107, 143, 176, 178, 181, 190, 194, 221, 452, 453, 471, 473, 474, 523, 524, 525, 526, 527, 529, 530, 534, 538, 539, 540, 851, 858, 861, 876], "depth": [5, 7, 11, 22, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 52, 54, 55, 57, 58, 59, 60, 88, 92, 102, 105, 106, 107, 108, 122, 165, 171, 176, 177, 178, 180, 181, 190, 194, 216, 220, 221, 232, 234, 242, 260, 295, 296, 452, 471, 473, 474, 534, 653, 658, 664, 861, 864, 876], "snr": [5, 7, 10, 11, 19, 21, 27, 28, 29, 30, 36, 38, 39, 41, 48, 54, 55, 56, 60, 86, 88, 102, 107, 165, 176, 178, 180, 183, 190, 200, 220, 221, 232, 234, 259, 264, 266, 267, 273, 341, 452, 522, 523, 531, 534, 536, 537, 605, 614, 616, 660, 743, 766, 800, 851, 858, 864, 876], "lambda2": [5, 7, 11, 28, 29, 30, 38, 39, 40, 41, 45, 47, 48, 50, 54, 55, 58, 59, 60, 70, 88, 92, 102, 106, 107, 155, 165, 176, 178, 180, 182, 183, 184, 190, 206, 220, 232, 234, 523, 524, 525, 526, 527, 529, 530, 535, 536, 539, 540, 565, 851], "stc": [5, 7, 11, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 56, 58, 59, 60, 67, 90, 91, 92, 93, 102, 106, 107, 108, 114, 125, 132, 134, 135, 157, 164, 165, 171, 175, 176, 177, 178, 179, 181, 185, 186, 194, 221, 233, 260, 264, 269, 270, 272, 273, 274, 275, 276, 277, 278, 282, 283, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 358, 442, 451, 455, 461, 471, 472, 473, 474, 511, 518, 522, 523, 524, 525, 526, 527, 530, 532, 533, 537, 539, 614, 624, 637, 646, 660, 661, 662, 663, 688, 691, 692, 743, 801, 802, 806, 807, 831, 851, 871, 876], "apply_invers": [5, 7, 28, 30, 38, 39, 40, 41, 44, 45, 58, 59, 60, 88, 92, 165, 176, 177, 178, 180, 181, 190, 194, 204, 220, 221, 232, 234, 524, 525, 526, 527, 529, 530, 536, 539, 540, 831, 851, 858, 866, 876], "pick_ori": [5, 7, 11, 28, 29, 32, 33, 34, 38, 39, 41, 49, 60, 88, 106, 176, 177, 179, 180, 221, 295, 296, 471, 473, 474, 523, 524, 525, 526, 527, 529, 530, 539, 540, 876], "hemi": [5, 7, 11, 26, 32, 33, 34, 38, 41, 43, 47, 48, 49, 50, 58, 60, 92, 102, 107, 114, 125, 129, 132, 135, 154, 159, 165, 174, 176, 177, 178, 179, 180, 190, 194, 220, 221, 232, 233, 234, 268, 269, 270, 273, 276, 277, 278, 280, 466, 601, 619, 742, 743, 801, 806, 826, 876], "rh": [5, 24, 26, 34, 37, 38, 41, 43, 47, 59, 67, 88, 90, 92, 93, 105, 107, 114, 129, 135, 154, 157, 158, 159, 174, 176, 220, 221, 258, 268, 269, 270, 273, 276, 277, 278, 464, 509, 601, 619, 624, 743, 801, 806, 826, 858], "view": [5, 7, 11, 26, 28, 29, 31, 32, 33, 35, 40, 43, 47, 50, 53, 58, 59, 68, 92, 93, 98, 102, 105, 106, 107, 111, 113, 116, 125, 134, 135, 139, 141, 149, 150, 151, 157, 158, 159, 165, 168, 169, 171, 174, 176, 179, 180, 188, 189, 190, 194, 203, 205, 215, 216, 220, 221, 229, 232, 233, 234, 242, 259, 260, 262, 263, 264, 265, 267, 269, 270, 271, 273, 276, 277, 278, 286, 300, 307, 476, 477, 522, 631, 731, 743, 771, 773, 796, 801, 804, 806, 811, 813, 831, 851, 855, 857, 858, 864, 876], "lat": [5, 11, 26, 58, 92, 102, 125, 135, 150, 159, 165, 194, 220, 234, 743], "initial_tim": [5, 7, 11, 32, 41, 43, 58, 59, 60, 92, 102, 125, 132, 165, 174, 176, 177, 178, 179, 180, 181, 190, 194, 220, 269, 270, 273, 276, 277, 278, 743, 801, 806, 807], "clim": [5, 7, 10, 22, 26, 42, 43, 47, 49, 54, 55, 58, 59, 102, 107, 125, 129, 134, 135, 145, 174, 176, 178, 179, 180, 209, 220, 232, 233, 234, 264, 265, 269, 270, 273, 276, 277, 278, 743, 762, 779, 801, 806, 807, 876], "percent": [5, 26, 42, 105, 107, 110, 178, 226, 229, 269, 270, 273, 276, 277, 278, 285, 539, 540, 556, 652, 653, 654, 655, 656, 658, 696, 699, 762, 788, 801, 803, 806, 807, 876], "lim": [5, 7, 22, 26, 42, 43, 49, 54, 55, 58, 59, 102, 107, 125, 129, 134, 135, 174, 176, 178, 179, 180, 233, 234, 269, 270, 273, 276, 277, 278, 762, 801, 806, 807], "400": [5, 7, 13, 40, 44, 74, 79, 90, 109, 125, 129, 140, 141, 143, 145, 150, 155, 159, 170, 171, 175, 177, 180, 204, 205, 207, 209, 224, 226, 229, 467], "background": [5, 21, 43, 114, 124, 125, 133, 141, 150, 159, 164, 165, 171, 203, 205, 209, 211, 212, 213, 215, 216, 242, 260, 262, 263, 264, 265, 267, 269, 270, 271, 273, 276, 277, 278, 353, 354, 355, 408, 443, 444, 446, 476, 477, 496, 523, 561, 568, 569, 622, 641, 696, 698, 700, 712, 743, 746, 752, 759, 771, 777, 781, 784, 791, 796, 801, 802, 804, 806, 807, 815, 816, 827, 851, 857, 876], "w": [5, 21, 32, 33, 39, 45, 60, 61, 72, 81, 101, 125, 130, 136, 141, 151, 155, 159, 160, 177, 181, 193, 194, 200, 209, 221, 224, 237, 242, 259, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 295, 296, 307, 319, 367, 408, 415, 476, 477, 523, 531, 534, 555, 556, 582, 624, 653, 658, 678, 696, 698, 699, 700, 712, 721, 722, 725, 728, 760, 775, 781, 782, 796, 798, 803, 804, 805, 858, 876], "invers": [5, 7, 11, 19, 21, 32, 33, 34, 38, 43, 44, 45, 46, 48, 50, 51, 54, 55, 56, 58, 59, 60, 86, 88, 103, 104, 105, 106, 107, 108, 122, 148, 154, 155, 158, 159, 161, 169, 171, 174, 175, 177, 178, 179, 180, 181, 187, 190, 194, 198, 204, 206, 220, 221, 232, 234, 242, 254, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 295, 296, 351, 358, 364, 365, 369, 414, 422, 426, 442, 471, 472, 473, 476, 477, 510, 519, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 534, 535, 536, 537, 538, 539, 540, 541, 553, 556, 557, 605, 611, 614, 616, 618, 619, 626, 644, 645, 711, 743, 759, 770, 771, 800, 802, 811, 831, 836, 842, 861, 864, 866, 876], "adjust": [5, 24, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 50, 51, 54, 55, 58, 59, 88, 92, 107, 114, 118, 125, 148, 155, 157, 160, 169, 171, 176, 177, 178, 179, 181, 187, 190, 194, 206, 208, 215, 216, 221, 226, 254, 259, 262, 263, 264, 265, 271, 284, 340, 342, 408, 415, 468, 476, 477, 478, 487, 555, 556, 566, 577, 585, 674, 680, 685, 689, 690, 696, 698, 700, 715, 756, 766, 773, 774, 775, 779, 781, 782, 786, 795, 796, 798, 803, 804, 833, 839, 851, 855, 858, 864, 876], "svd": [5, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 88, 92, 107, 176, 177, 178, 181, 190, 194, 204, 221, 259, 270, 276, 278, 339, 531, 532, 533, 768, 851, 858, 876], "lead": [5, 22, 26, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 68, 69, 86, 88, 92, 107, 143, 150, 161, 166, 176, 177, 178, 181, 190, 193, 194, 198, 200, 208, 210, 221, 256, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 352, 442, 471, 473, 474, 476, 477, 523, 524, 525, 526, 527, 585, 616, 641, 683, 684, 686, 687, 696, 831, 833, 853, 858, 876], "largest": [5, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 88, 92, 107, 134, 150, 176, 177, 178, 181, 187, 190, 194, 221, 224, 408, 452, 500, 532, 533, 556], "38802": 5, "factor": [5, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 45, 48, 50, 54, 55, 58, 59, 60, 88, 92, 102, 105, 106, 107, 108, 134, 156, 176, 177, 178, 180, 181, 190, 194, 200, 201, 208, 210, 220, 221, 226, 227, 228, 232, 234, 238, 254, 257, 260, 261, 262, 263, 264, 265, 267, 269, 270, 272, 273, 276, 277, 278, 297, 352, 356, 363, 369, 416, 417, 420, 421, 429, 448, 476, 477, 486, 526, 536, 539, 540, 566, 567, 572, 573, 575, 582, 584, 586, 633, 635, 636, 648, 649, 677, 679, 696, 699, 702, 705, 708, 721, 723, 724, 725, 726, 727, 728, 733, 743, 756, 773, 781, 794, 796, 802, 804, 806, 831, 858, 861, 876], "trace": [5, 31, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 73, 78, 88, 91, 92, 107, 143, 148, 150, 165, 171, 176, 177, 178, 181, 190, 194, 198, 205, 207, 208, 213, 216, 221, 254, 260, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 408, 476, 477, 556, 740, 743, 770, 773, 777, 785, 787, 794, 796, 801, 806, 858, 876], "35945e": 5, "nchan": [5, 34, 40, 41, 42, 45, 48, 50, 52, 54, 55, 57, 58, 59, 88, 92, 107, 165, 166, 168, 176, 177, 178, 181, 190, 194, 213, 219, 221, 266, 267, 861, 876], "nzero": [5, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 88, 92, 107, 176, 177, 178, 181, 190, 194, 221], "invert": [5, 21, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 54, 55, 57, 58, 59, 60, 88, 92, 102, 105, 106, 107, 108, 134, 155, 157, 160, 165, 176, 177, 178, 179, 180, 181, 190, 194, 200, 220, 221, 232, 234, 239, 281, 291, 294, 414, 417, 422, 471, 473, 474, 682, 719, 852, 861], "vector": [5, 15, 18, 19, 27, 34, 36, 41, 56, 107, 109, 129, 161, 174, 176, 177, 187, 193, 202, 203, 204, 205, 207, 208, 221, 242, 254, 257, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 276, 277, 278, 288, 295, 296, 339, 341, 345, 353, 354, 355, 358, 409, 412, 414, 419, 424, 426, 442, 446, 447, 448, 471, 473, 474, 476, 477, 510, 516, 522, 523, 525, 526, 527, 532, 533, 537, 555, 556, 567, 568, 569, 571, 575, 581, 584, 593, 599, 607, 614, 622, 624, 631, 637, 696, 697, 698, 699, 700, 743, 775, 777, 779, 781, 782, 785, 794, 797, 801, 804, 806, 807, 827, 831, 855, 858, 861, 866, 876], "eigenlead": [5, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 54, 55, 58, 59, 60, 88, 92, 102, 105, 106, 107, 108, 165, 176, 177, 178, 180, 181, 190, 194, 220, 221, 232, 234, 858], "residu": [5, 28, 30, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 54, 55, 58, 59, 60, 69, 74, 88, 92, 165, 176, 177, 178, 180, 181, 182, 183, 190, 194, 203, 207, 220, 221, 232, 234, 298, 451, 471, 473, 474, 523, 766, 876], "explain": [5, 18, 28, 30, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 51, 54, 55, 58, 59, 60, 88, 92, 136, 158, 159, 165, 176, 177, 178, 180, 181, 182, 190, 194, 203, 220, 221, 232, 234, 271, 298, 408, 415, 471, 473, 474, 532, 533, 556, 787, 835, 839, 858, 876], "97": [5, 11, 13, 15, 19, 34, 41, 44, 47, 70, 79, 81, 101, 106, 107, 110, 112, 115, 133, 136, 155, 159, 165, 168, 190, 203, 206, 207, 208, 224, 225, 228, 229, 232, 242, 429, 520, 565, 567, 584, 677, 851, 858, 876], "varianc": [5, 8, 14, 16, 28, 30, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 51, 54, 55, 58, 59, 60, 69, 88, 92, 112, 165, 176, 177, 178, 179, 180, 181, 182, 190, 194, 198, 203, 210, 220, 221, 232, 234, 242, 271, 273, 291, 292, 293, 294, 295, 296, 417, 453, 471, 473, 474, 532, 533, 534, 556, 564, 678, 689, 690, 724, 727, 766, 787, 788, 831, 858, 876], "control": [5, 11, 19, 22, 26, 32, 33, 34, 38, 41, 42, 47, 48, 50, 60, 92, 107, 112, 118, 125, 132, 139, 148, 149, 155, 165, 167, 170, 171, 177, 178, 180, 181, 187, 190, 194, 199, 200, 201, 203, 204, 205, 208, 209, 215, 220, 221, 224, 232, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 301, 302, 303, 304, 305, 306, 307, 310, 312, 314, 315, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 413, 414, 415, 416, 418, 419, 421, 424, 425, 427, 429, 433, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 458, 459, 463, 464, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516, 518, 519, 520, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 549, 552, 556, 558, 559, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 579, 580, 581, 582, 584, 585, 587, 588, 591, 592, 593, 596, 597, 598, 599, 603, 604, 605, 606, 607, 608, 610, 611, 612, 614, 615, 616, 618, 619, 620, 621, 622, 626, 627, 628, 629, 630, 631, 632, 633, 635, 636, 637, 638, 641, 644, 645, 647, 648, 649, 650, 660, 661, 664, 666, 667, 668, 669, 670, 671, 672, 683, 684, 685, 686, 687, 691, 692, 693, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 712, 714, 715, 718, 719, 722, 723, 724, 726, 727, 728, 729, 732, 733, 738, 742, 743, 751, 757, 759, 762, 768, 769, 771, 774, 775, 776, 777, 778, 783, 786, 787, 788, 789, 793, 794, 796, 797, 799, 800, 801, 802, 806, 807, 808, 809, 812, 816, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 841, 852, 855, 857, 858, 876], "24807258e": 5, "11": [5, 9, 10, 11, 13, 16, 19, 28, 33, 34, 35, 45, 47, 48, 49, 56, 64, 69, 72, 73, 78, 79, 81, 83, 85, 89, 91, 94, 98, 99, 101, 106, 107, 108, 110, 112, 118, 119, 121, 125, 128, 131, 136, 144, 156, 161, 165, 167, 168, 169, 170, 175, 178, 179, 180, 181, 182, 190, 193, 194, 197, 199, 200, 202, 207, 208, 209, 212, 213, 219, 220, 221, 223, 224, 225, 226, 228, 229, 231, 232, 233, 234, 239, 242, 253, 262, 263, 272, 275, 333, 366, 378, 429, 465, 476, 477, 487, 489, 492, 493, 515, 534, 556, 582, 584, 588, 608, 653, 656, 658, 682, 696, 773, 796, 834, 841, 851, 858], "55793898e": 5, "13115753e": 5, "207": [5, 6, 35, 112, 157, 168, 200, 212, 228, 229, 242], "873": [5, 35, 229], "opm_data": [5, 6], "720": [6, 79, 207, 242, 564], "execut": [6, 20, 25, 32, 56, 66, 83, 89, 100, 104, 128, 131, 133, 135, 138, 147, 153, 154, 163, 170, 171, 173, 186, 192, 196, 197, 212, 218, 223, 231, 236, 241, 260, 262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 280, 352, 353, 355, 357, 373, 378, 411, 418, 421, 424, 425, 451, 464, 466, 467, 468, 476, 477, 515, 518, 519, 529, 530, 539, 540, 556, 561, 568, 569, 644, 647, 648, 649, 661, 683, 684, 685, 686, 687, 695, 698, 700, 701, 702, 703, 704, 705, 706, 714, 715, 723, 724, 725, 726, 727, 771, 773, 775, 778, 790, 796, 797, 799, 833, 834, 835, 838, 839, 858, 876], "auto_examples_dataset": 6, "872": [6, 19], "629": [6, 9, 77, 83, 229], "09": [6, 8, 9, 19, 42, 43, 44, 45, 49, 72, 74, 79, 80, 83, 89, 101, 104, 114, 118, 119, 121, 128, 157, 158, 159, 161, 174, 176, 179, 184, 207, 218, 225, 228, 229, 242, 268, 273, 520, 591, 677, 725, 728], "492": [6, 50, 142, 147, 207, 229], "06": [6, 10, 19, 20, 26, 35, 41, 44, 45, 46, 50, 52, 56, 59, 70, 74, 82, 83, 92, 98, 100, 101, 136, 154, 157, 173, 175, 178, 180, 182, 200, 205, 207, 218, 224, 225, 226, 229, 234, 242, 274, 358, 416, 471, 565, 831, 834], "spm_faces_dataset_sgskip": [6, 7], "pipelin": [7, 8, 9, 10, 11, 12, 13, 15, 18, 107, 133, 136, 160, 164, 165, 171, 172, 193, 194, 198, 199, 203, 408, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 461, 557, 733, 842, 852, 853, 855, 876], "reconstruct": [7, 16, 53, 133, 157, 158, 161, 162, 163, 164, 181, 185, 186, 190, 193, 197, 198, 203, 208, 234, 242, 259, 260, 262, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 291, 292, 293, 294, 296, 301, 305, 306, 307, 310, 352, 358, 363, 364, 365, 387, 390, 416, 449, 460, 464, 466, 467, 468, 469, 470, 473, 509, 513, 515, 542, 556, 557, 566, 567, 575, 581, 584, 592, 601, 616, 619, 626, 628, 644, 645, 659, 662, 673, 691, 692, 735, 743, 754, 759, 761, 771, 777, 782, 801, 806, 807, 816, 826, 852, 855, 858, 864, 876], "scrambl": [7, 194, 852], "doe": [7, 28, 31, 55, 58, 59, 69, 70, 74, 78, 82, 110, 115, 125, 139, 140, 148, 150, 157, 159, 160, 161, 167, 177, 180, 181, 187, 188, 189, 198, 200, 201, 202, 203, 204, 206, 208, 209, 219, 221, 226, 228, 229, 232, 239, 242, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 269, 270, 271, 273, 274, 276, 277, 278, 286, 295, 296, 300, 317, 330, 356, 359, 367, 368, 384, 438, 439, 440, 441, 442, 466, 476, 477, 495, 499, 522, 542, 545, 558, 570, 572, 578, 609, 613, 638, 643, 646, 696, 698, 699, 700, 731, 733, 738, 746, 781, 804, 835, 840, 851, 855, 857, 858, 861, 876], "quit": [7, 21, 125, 143, 149, 150, 161, 200, 201, 203, 208, 209, 213, 224, 225, 233, 556, 835, 853, 855], "so": [7, 10, 28, 31, 32, 38, 40, 44, 47, 63, 69, 70, 74, 81, 91, 92, 93, 101, 102, 107, 112, 113, 125, 133, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 154, 155, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 179, 180, 181, 182, 183, 189, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 228, 229, 232, 233, 234, 238, 239, 254, 262, 263, 264, 265, 267, 269, 270, 272, 273, 274, 275, 276, 277, 278, 287, 288, 289, 296, 310, 332, 358, 365, 383, 387, 408, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 439, 440, 442, 443, 447, 476, 477, 499, 523, 529, 542, 556, 557, 558, 566, 567, 576, 584, 585, 602, 614, 636, 643, 644, 683, 684, 686, 687, 733, 738, 743, 744, 752, 753, 777, 786, 788, 790, 796, 822, 831, 833, 835, 838, 840, 841, 842, 843, 851, 853, 855, 857, 858, 861, 876], "even": [7, 69, 73, 110, 126, 141, 143, 154, 159, 165, 166, 167, 170, 171, 182, 189, 190, 197, 198, 200, 202, 203, 204, 205, 206, 210, 213, 215, 224, 239, 254, 262, 263, 264, 265, 306, 322, 375, 376, 377, 378, 380, 381, 383, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 476, 477, 504, 556, 708, 804, 835, 843, 852, 858, 876], "fast": [7, 21, 44, 126, 150, 154, 190, 237, 239, 242, 262, 263, 264, 265, 361, 416, 425, 475, 476, 477, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 515, 516, 556, 593, 698, 700, 715, 833, 855, 858, 876], "machin": [7, 18, 92, 93, 180, 194, 198, 199, 242, 248, 267, 280, 352, 567, 575, 584, 853, 876], "sever": [7, 69, 74, 79, 80, 112, 125, 144, 149, 150, 152, 154, 157, 158, 164, 165, 167, 168, 170, 171, 179, 180, 187, 188, 189, 190, 197, 199, 204, 205, 210, 213, 215, 216, 224, 232, 234, 257, 262, 263, 400, 443, 476, 477, 592, 699, 724, 727, 835, 838, 839, 840, 842, 847, 851, 852, 855, 856, 858, 861, 876], "alexandr": [7, 9, 10, 11, 12, 13, 15, 18, 28, 29, 30, 38, 39, 40, 42, 46, 47, 48, 50, 52, 53, 59, 64, 86, 90, 94, 95, 98, 105, 106, 108, 109, 111, 115, 119, 123, 129, 130, 133, 136, 158, 161, 179, 184, 194, 203, 226, 227, 228, 232, 233, 234, 238, 242, 264, 265, 352, 408, 473, 474, 524, 556, 850, 855, 857, 863, 876], "gramfort": [7, 9, 10, 11, 13, 18, 28, 29, 30, 38, 39, 40, 42, 46, 47, 48, 50, 52, 53, 59, 64, 90, 94, 95, 98, 105, 106, 108, 109, 111, 115, 119, 123, 129, 130, 133, 136, 158, 161, 179, 184, 194, 203, 226, 227, 228, 232, 233, 234, 238, 242, 264, 265, 352, 473, 474, 524, 556, 783, 850, 855, 857, 863, 876], "inria": [7, 9, 10, 11, 13, 18, 28, 29, 30, 38, 39, 40, 42, 46, 47, 48, 50, 52, 53, 59, 64, 90, 94, 95, 98, 105, 106, 108, 109, 115, 119, 123, 129, 130, 136, 158, 184, 226, 227, 228, 232, 233, 234, 238], "deni": [7, 11, 13, 16, 21, 26, 33, 42, 68, 77, 99, 107, 111, 112, 118, 119, 124, 130, 131, 150, 161, 194, 228, 229, 234, 242, 264, 265, 352, 524, 850, 855, 863, 876], "engemann": [7, 11, 13, 16, 21, 26, 33, 42, 68, 77, 99, 107, 111, 112, 118, 119, 124, 130, 131, 161, 194, 228, 229, 234, 242, 264, 265, 352, 524, 783, 850, 855, 863, 876], "spm_face": [7, 121, 213, 852, 866], "ica": [7, 17, 20, 27, 73, 76, 82, 83, 86, 161, 164, 165, 197, 198, 199, 202, 205, 211, 212, 215, 242, 262, 263, 264, 265, 267, 272, 310, 325, 326, 371, 412, 422, 449, 476, 477, 491, 550, 553, 570, 572, 573, 579, 580, 582, 596, 597, 611, 773, 786, 787, 788, 789, 790, 796, 815, 842, 855, 862, 865, 866, 876], "create_eog_epoch": [7, 171, 197, 199, 202, 203, 205, 569, 577, 853, 866, 876], "spm_path": 7, "spm_ctf_meg_example_fac": 7, "d_3d": 7, "downsampl": [7, 19, 107, 133, 135, 144, 165, 193, 199, 201, 227, 254, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 407, 448, 449, 476, 477, 513, 575, 682, 696, 699, 802, 855, 876], "heavili": [7, 107, 156, 194, 287, 289, 733, 861], "advis": [7, 69, 188, 200, 254, 851, 858, 876], "real": [7, 32, 50, 90, 91, 150, 154, 155, 157, 159, 160, 200, 203, 204, 205, 206, 215, 219, 221, 226, 242, 295, 451, 476, 477, 518, 593, 699, 712, 722, 723, 724, 743, 842, 847, 864, 876], "jitter": [7, 167, 201, 476, 477, 855], "resampl": [7, 19, 21, 44, 74, 79, 80, 107, 133, 135, 139, 145, 148, 150, 164, 190, 193, 197, 200, 203, 205, 211, 212, 221, 232, 233, 234, 238, 260, 261, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 429, 443, 444, 446, 447, 449, 476, 477, 484, 491, 498, 553, 598, 696, 699, 743, 773, 784, 801, 806, 815, 833, 853, 858, 865, 866, 873, 876], "npad": [7, 19, 74, 79, 80, 190, 193, 232, 233, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 448, 476, 477, 855], "auto": [7, 10, 15, 16, 19, 22, 31, 69, 73, 74, 75, 79, 80, 81, 88, 105, 111, 118, 119, 123, 146, 147, 155, 161, 164, 190, 193, 200, 203, 206, 208, 226, 227, 228, 229, 232, 233, 254, 259, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 303, 304, 310, 326, 339, 341, 345, 351, 352, 356, 357, 358, 363, 408, 410, 414, 415, 419, 420, 427, 429, 432, 437, 438, 439, 441, 442, 444, 446, 447, 448, 453, 471, 473, 474, 476, 477, 482, 484, 486, 488, 491, 492, 498, 502, 515, 520, 534, 553, 555, 556, 557, 565, 566, 567, 568, 570, 575, 576, 579, 584, 588, 602, 608, 627, 641, 696, 698, 699, 700, 743, 759, 760, 762, 767, 773, 775, 777, 779, 780, 782, 783, 786, 788, 790, 793, 795, 796, 797, 798, 799, 801, 803, 805, 806, 807, 829, 851, 852, 855, 876], "sfreq": [7, 8, 9, 14, 19, 21, 31, 63, 65, 67, 68, 69, 88, 90, 91, 92, 93, 107, 109, 112, 123, 125, 126, 135, 136, 143, 165, 167, 168, 171, 189, 190, 193, 199, 200, 201, 209, 210, 213, 214, 215, 219, 221, 239, 256, 257, 262, 263, 264, 265, 267, 269, 270, 272, 273, 276, 277, 278, 281, 371, 410, 413, 414, 419, 420, 421, 432, 434, 436, 443, 444, 446, 476, 477, 588, 602, 688, 701, 702, 703, 712, 714, 715, 720, 722, 723, 724, 725, 776, 784, 861, 876], "5e": [7, 8, 9, 13, 21, 31, 32, 34, 35, 40, 41, 45, 49, 59, 75, 107, 122, 140, 171, 182, 184, 194, 206, 213, 221, 262, 263, 272, 451, 476, 477, 773, 796], "major": [7, 318, 476, 835, 855, 857, 861, 864, 876], "n_compon": [7, 8, 9, 12, 15, 73, 75, 81, 86, 115, 165, 171, 194, 203, 408, 415, 416, 422, 556, 557, 570, 876], "max_it": [7, 73, 75, 81, 165, 203, 523, 556, 582, 661, 703, 714, 876], "random_st": [7, 8, 9, 10, 15, 40, 75, 81, 88, 90, 91, 92, 111, 115, 136, 165, 203, 220, 221, 473, 509, 556, 582, 601, 648, 649, 650, 659, 660, 662, 675, 876], "correl": [7, 12, 18, 22, 26, 44, 73, 101, 145, 161, 194, 202, 203, 208, 224, 225, 228, 242, 254, 267, 274, 340, 352, 358, 414, 415, 420, 556, 570, 584, 680, 685, 852, 855, 858, 876], "indic": [7, 13, 16, 22, 31, 47, 48, 68, 69, 79, 98, 139, 140, 141, 143, 144, 145, 148, 150, 154, 155, 159, 167, 168, 169, 174, 177, 187, 190, 193, 197, 198, 199, 201, 203, 204, 207, 208, 210, 213, 215, 216, 219, 221, 226, 229, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 308, 310, 311, 312, 325, 327, 333, 352, 357, 367, 400, 408, 410, 414, 415, 416, 424, 429, 432, 437, 446, 447, 450, 476, 477, 484, 486, 488, 491, 492, 493, 498, 502, 532, 533, 547, 550, 552, 553, 555, 556, 557, 558, 559, 564, 566, 570, 571, 572, 573, 578, 581, 582, 583, 589, 590, 592, 593, 599, 608, 614, 615, 618, 627, 630, 636, 641, 664, 665, 669, 672, 676, 682, 683, 684, 686, 687, 688, 691, 696, 697, 698, 699, 700, 704, 705, 706, 707, 709, 726, 727, 743, 756, 759, 760, 761, 763, 767, 773, 774, 775, 777, 779, 780, 782, 786, 787, 788, 790, 792, 794, 795, 797, 798, 803, 805, 824, 829, 831, 840, 857, 858, 861, 876], "eog_epoch": [7, 171, 197, 202, 573], "mrt31": 7, "2908": 7, "eog_ind": [7, 203, 556], "eog_scor": [7, 171, 203, 272], "find_bads_eog": [7, 171, 203, 272, 556, 876], "plot_scor": [7, 73, 81, 203, 556, 876], "plot_compon": [7, 75, 203, 556, 862, 876], "topograph": [7, 8, 16, 18, 19, 27, 120, 128, 131, 150, 194, 242, 264, 265, 267, 271, 272, 408, 415, 489, 552, 553, 556, 614, 696, 760, 767, 777, 782, 788, 795, 803, 805, 876], "compon": [7, 8, 12, 14, 15, 21, 27, 29, 30, 31, 34, 41, 42, 44, 45, 47, 59, 69, 73, 75, 76, 77, 78, 83, 85, 86, 92, 117, 122, 136, 149, 150, 161, 165, 171, 176, 177, 178, 180, 181, 183, 190, 194, 197, 198, 199, 200, 201, 202, 204, 205, 208, 209, 215, 221, 232, 234, 242, 264, 265, 266, 268, 272, 295, 296, 310, 326, 352, 356, 357, 367, 368, 369, 378, 400, 401, 408, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 429, 447, 448, 451, 452, 453, 471, 473, 474, 476, 477, 491, 526, 529, 530, 532, 533, 534, 535, 540, 556, 557, 564, 566, 567, 570, 575, 582, 584, 699, 783, 786, 787, 788, 789, 790, 796, 842, 851, 852, 855, 858, 861, 862, 876], "saw": [7, 139, 141, 166, 167, 170, 197, 198, 199, 205, 213, 228], "2nd": [7, 150, 193, 197, 226, 229, 239, 242, 570, 638, 876], "ecg": [7, 70, 72, 75, 79, 80, 81, 88, 90, 91, 92, 107, 109, 125, 129, 139, 140, 141, 145, 148, 150, 166, 167, 168, 171, 188, 190, 198, 199, 201, 202, 204, 206, 208, 209, 210, 213, 214, 215, 216, 219, 221, 262, 263, 264, 265, 272, 309, 357, 371, 441, 476, 477, 487, 488, 491, 502, 553, 556, 568, 572, 573, 576, 579, 648, 649, 682, 696, 698, 699, 700, 773, 789, 794, 796, 831, 858, 861, 876], "too": [7, 27, 68, 76, 83, 125, 139, 141, 143, 149, 150, 156, 157, 160, 164, 171, 177, 180, 197, 198, 199, 200, 201, 202, 205, 207, 209, 215, 224, 226, 228, 239, 262, 263, 264, 265, 267, 310, 326, 340, 371, 429, 476, 477, 482, 492, 559, 564, 566, 567, 575, 583, 584, 602, 608, 743, 763, 805, 835, 855, 876], "dipolar": [7, 451, 556, 787], "plot_overlai": [7, 81, 133, 203, 556, 876], "inspect": [7, 21, 28, 69, 81, 125, 140, 150, 155, 161, 190, 197, 208, 209, 254, 262, 263, 264, 265, 305, 307, 316, 330, 476, 477, 584, 592, 648, 649, 773, 777, 796, 847, 855], "clean": [7, 72, 73, 74, 82, 140, 143, 158, 165, 166, 171, 188, 198, 200, 202, 203, 204, 205, 209, 229, 239, 257, 262, 272, 476, 477, 489, 516, 556, 592, 607, 682, 787, 835, 855, 876], "default": [7, 21, 31, 43, 44, 73, 86, 101, 110, 112, 118, 125, 133, 134, 136, 139, 141, 144, 145, 148, 149, 150, 155, 157, 161, 165, 166, 167, 168, 169, 170, 171, 177, 178, 187, 188, 190, 198, 199, 201, 203, 204, 205, 206, 208, 213, 214, 215, 216, 219, 224, 228, 229, 234, 237, 238, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 314, 315, 317, 319, 320, 321, 322, 324, 325, 326, 327, 328, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 458, 459, 460, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 601, 603, 604, 605, 606, 607, 608, 610, 611, 612, 614, 615, 616, 618, 619, 620, 621, 622, 626, 627, 628, 629, 630, 631, 632, 633, 635, 636, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 659, 660, 661, 662, 663, 664, 666, 667, 668, 669, 670, 671, 672, 673, 677, 681, 682, 683, 684, 685, 686, 687, 688, 689, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 711, 712, 713, 714, 715, 718, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 738, 740, 742, 743, 746, 751, 752, 756, 757, 759, 760, 761, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 812, 816, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 833, 834, 835, 839, 840, 851, 852, 855, 861, 876], "k": [7, 8, 9, 10, 11, 13, 14, 18, 19, 22, 28, 31, 38, 39, 41, 59, 65, 68, 69, 81, 95, 98, 102, 141, 142, 157, 159, 175, 180, 187, 193, 194, 200, 204, 214, 216, 228, 229, 237, 238, 239, 242, 259, 260, 262, 263, 264, 265, 268, 271, 273, 281, 286, 295, 298, 300, 408, 415, 471, 473, 474, 476, 477, 522, 523, 555, 556, 575, 616, 656, 677, 683, 684, 685, 687, 696, 698, 700, 712, 722, 731, 756, 760, 775, 781, 782, 785, 796, 798, 803, 804, 805, 831, 833, 835, 858, 861, 876], "append": [7, 8, 10, 16, 43, 44, 45, 47, 61, 67, 74, 78, 111, 136, 149, 171, 182, 193, 198, 203, 205, 209, 213, 224, 228, 229, 234, 256, 262, 263, 264, 265, 268, 476, 477, 556, 570, 575, 584, 642, 673, 696, 697, 698, 699, 700, 716, 835, 876], "covarari": 7, "noise_cov": [7, 11, 31, 34, 40, 41, 42, 45, 48, 49, 50, 51, 54, 55, 58, 59, 92, 107, 119, 151, 161, 171, 176, 177, 179, 181, 190, 203, 259, 262, 263, 264, 265, 272, 296, 298, 367, 368, 452, 471, 473, 474, 476, 477, 534, 556, 773, 777, 781, 783, 796, 861, 876], "shrunk": [7, 31, 34, 40, 41, 42, 45, 59, 119, 151, 161, 176, 182, 352], "visual": [7, 8, 13, 14, 15, 16, 32, 33, 35, 36, 41, 42, 45, 56, 57, 59, 60, 61, 68, 70, 72, 78, 85, 92, 99, 102, 103, 104, 111, 113, 114, 117, 118, 126, 128, 130, 132, 133, 134, 136, 140, 142, 144, 146, 147, 150, 151, 152, 153, 154, 159, 161, 164, 165, 167, 171, 174, 177, 178, 182, 185, 186, 190, 194, 197, 199, 200, 201, 206, 208, 211, 212, 213, 214, 215, 216, 225, 226, 228, 238, 239, 242, 254, 257, 260, 262, 263, 264, 265, 267, 269, 270, 272, 273, 275, 276, 277, 278, 305, 306, 307, 311, 339, 340, 341, 342, 347, 349, 350, 358, 361, 362, 414, 435, 437, 449, 451, 461, 476, 477, 491, 511, 515, 522, 523, 533, 535, 537, 551, 556, 560, 584, 592, 608, 610, 611, 614, 616, 619, 622, 624, 637, 645, 648, 649, 683, 688, 698, 699, 712, 722, 723, 725, 726, 727, 728, 743, 748, 760, 766, 767, 773, 774, 776, 777, 778, 781, 784, 785, 786, 787, 788, 789, 790, 793, 794, 796, 810, 814, 815, 831, 832, 833, 836, 838, 839, 842, 847, 853, 855, 858, 859, 861, 866, 876], "dig": [7, 107, 116, 123, 135, 155, 156, 157, 158, 159, 165, 168, 169, 182, 183, 213, 219, 267, 304, 310, 340, 427, 483, 520, 759, 876], "montag": [7, 8, 19, 69, 81, 113, 123, 133, 134, 135, 150, 158, 188, 189, 203, 219, 239, 262, 263, 264, 265, 267, 310, 313, 314, 316, 321, 323, 326, 328, 329, 330, 331, 332, 333, 334, 335, 363, 441, 460, 476, 477, 488, 585, 793, 805, 813, 816, 831, 852, 858, 876], "It": [7, 10, 13, 31, 39, 47, 55, 60, 69, 70, 73, 88, 92, 93, 101, 112, 114, 115, 119, 139, 141, 143, 144, 148, 149, 150, 155, 156, 157, 158, 159, 165, 168, 169, 170, 171, 174, 176, 179, 187, 188, 189, 194, 198, 199, 201, 202, 203, 204, 206, 207, 208, 213, 214, 216, 219, 224, 226, 227, 229, 232, 234, 238, 239, 254, 255, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 276, 277, 278, 280, 285, 295, 296, 301, 310, 328, 339, 352, 357, 363, 408, 416, 417, 443, 451, 471, 473, 474, 476, 477, 484, 491, 495, 505, 515, 518, 523, 529, 530, 534, 539, 540, 556, 560, 566, 575, 584, 585, 592, 598, 605, 609, 613, 618, 622, 624, 662, 668, 671, 685, 690, 696, 699, 712, 719, 722, 733, 743, 781, 786, 806, 820, 823, 827, 831, 833, 835, 838, 839, 840, 842, 847, 851, 852, 855, 857, 858, 861, 864, 876], "spm_dig_montag": 7, "trans_fnam": [7, 67, 79, 155, 177, 190], "spm_ctf_meg_example_faces1_3d_raw": 7, "map": [7, 8, 10, 16, 19, 23, 24, 25, 26, 27, 36, 40, 41, 43, 56, 58, 70, 75, 77, 85, 92, 103, 104, 105, 107, 113, 117, 120, 122, 126, 128, 132, 133, 134, 135, 142, 143, 144, 145, 150, 155, 157, 159, 164, 165, 167, 174, 177, 180, 181, 193, 194, 197, 198, 199, 200, 203, 204, 205, 209, 213, 220, 222, 223, 224, 229, 232, 233, 234, 242, 256, 259, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 281, 286, 288, 295, 308, 310, 322, 338, 358, 361, 362, 369, 408, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 429, 432, 435, 437, 449, 453, 461, 471, 472, 473, 474, 475, 476, 477, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 512, 515, 516, 522, 523, 534, 547, 552, 553, 556, 557, 565, 570, 605, 611, 614, 616, 617, 621, 622, 631, 632, 637, 645, 650, 656, 661, 664, 677, 679, 680, 683, 685, 689, 690, 696, 697, 698, 699, 700, 705, 727, 743, 760, 762, 767, 770, 771, 773, 777, 778, 782, 788, 795, 796, 801, 802, 803, 804, 805, 806, 807, 813, 831, 833, 835, 851, 861, 864, 876], "make_field_map": [7, 122, 149, 264, 265, 778, 866, 876], "plot_field": [7, 122, 149, 264, 265, 876], "170": [7, 79, 82, 101, 115, 121, 128, 136, 168, 182, 183, 184, 190, 200, 203, 224, 229, 242], "daat": 7, "plot_whit": [7, 91, 119, 151, 161, 176, 262, 263, 264, 265, 476, 477, 773, 777, 796, 855, 876], "oct": [7, 11, 22, 24, 28, 29, 31, 35, 38, 39, 40, 41, 42, 43, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 67, 88, 90, 91, 92, 93, 102, 105, 106, 107, 108, 122, 129, 155, 157, 158, 159, 165, 171, 176, 177, 178, 180, 181, 190, 194, 220, 221, 232, 234, 254, 269, 273, 275, 277, 407, 644, 801, 876], "spm_": 7, "s_dspm_invers": 7, "comment": [7, 46, 61, 113, 125, 148, 149, 151, 170, 171, 188, 206, 219, 238, 255, 261, 262, 263, 264, 265, 268, 272, 333, 466, 613, 618, 696, 699, 729, 767, 781, 829, 831, 833, 835, 858, 876], "3d": [7, 27, 31, 35, 38, 40, 52, 59, 60, 94, 95, 120, 125, 128, 133, 134, 135, 141, 150, 155, 157, 159, 160, 174, 175, 184, 189, 194, 204, 208, 224, 227, 229, 254, 260, 262, 263, 264, 265, 267, 269, 270, 272, 273, 276, 277, 278, 288, 310, 311, 323, 336, 364, 416, 446, 447, 476, 477, 496, 506, 515, 567, 575, 584, 677, 683, 684, 743, 744, 745, 750, 752, 753, 754, 759, 764, 771, 778, 793, 799, 801, 802, 806, 808, 809, 811, 813, 814, 831, 834, 835, 839, 847, 852, 853, 856, 876], "both": [7, 19, 31, 32, 33, 38, 40, 41, 45, 47, 51, 58, 59, 68, 69, 70, 73, 85, 88, 92, 97, 107, 112, 130, 133, 139, 140, 148, 149, 150, 161, 165, 167, 168, 169, 170, 171, 174, 176, 177, 179, 180, 181, 182, 188, 189, 190, 194, 197, 199, 200, 201, 202, 203, 204, 205, 208, 209, 213, 221, 226, 228, 232, 233, 234, 237, 238, 239, 242, 257, 258, 261, 262, 263, 264, 265, 269, 270, 272, 273, 275, 276, 277, 278, 285, 295, 296, 304, 313, 352, 356, 357, 358, 367, 368, 369, 408, 415, 427, 432, 449, 451, 452, 471, 473, 474, 476, 477, 515, 534, 556, 559, 566, 570, 572, 598, 601, 614, 615, 619, 624, 645, 646, 650, 659, 677, 679, 683, 684, 686, 687, 696, 698, 699, 740, 743, 756, 766, 767, 774, 779, 780, 783, 786, 801, 806, 826, 831, 835, 841, 855, 856, 857, 858, 861, 876], "ven": [7, 50], "save_imag": [7, 232, 234, 743], "dspm_map": 7, "png": [7, 47, 113, 171, 232, 234, 254, 272, 876], "classifi": [8, 9, 10, 11, 13, 17, 20, 27, 194, 208, 262, 264, 265, 267, 412, 423, 425, 426, 556, 575, 611, 654, 655, 876], "featur": [8, 11, 15, 18, 19, 27, 96, 100, 141, 149, 171, 193, 194, 205, 208, 216, 224, 229, 239, 242, 264, 265, 269, 270, 272, 273, 276, 277, 278, 408, 411, 414, 415, 417, 418, 420, 423, 441, 476, 477, 556, 575, 584, 607, 680, 681, 767, 777, 779, 801, 806, 808, 812, 835, 842, 843, 852, 854, 855, 856, 857, 858, 876], "extract": [8, 9, 18, 21, 24, 27, 36, 38, 41, 56, 61, 72, 73, 78, 81, 98, 110, 111, 121, 125, 126, 134, 135, 140, 141, 143, 148, 150, 157, 158, 164, 165, 168, 170, 180, 187, 189, 190, 194, 197, 201, 203, 204, 205, 211, 212, 214, 219, 225, 226, 227, 234, 242, 254, 255, 262, 264, 267, 268, 269, 270, 273, 275, 276, 277, 278, 305, 339, 340, 341, 342, 343, 344, 347, 349, 350, 360, 369, 383, 408, 412, 415, 416, 432, 442, 449, 476, 479, 484, 491, 495, 511, 522, 523, 537, 556, 560, 584, 609, 613, 614, 618, 624, 668, 671, 742, 766, 785, 831, 835, 851, 852, 858, 861, 876], "en": [8, 19, 194, 242, 253, 863, 876], "wikipedia": [8, 194, 224, 242], "org": [8, 15, 32, 33, 69, 70, 81, 86, 111, 112, 113, 114, 118, 125, 133, 134, 135, 194, 226, 228, 229, 232, 238, 242, 269, 273, 277, 298, 378, 400, 401, 416, 447, 557, 642, 680, 725, 728, 739, 801, 835, 855, 876], "wiki": [8, 154, 194, 269, 273, 277, 556, 739, 801, 831, 851], "common_spatial_pattern": [8, 194], "eegbci": [8, 9, 110, 158, 203, 866, 876], "document": [8, 15, 32, 63, 86, 125, 134, 135, 142, 148, 150, 159, 165, 167, 168, 169, 171, 176, 180, 188, 200, 201, 203, 205, 208, 213, 215, 216, 219, 238, 242, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 301, 302, 303, 304, 305, 306, 307, 310, 312, 314, 315, 327, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 411, 413, 414, 418, 419, 421, 424, 425, 427, 429, 433, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 458, 459, 463, 464, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516, 518, 519, 520, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 549, 552, 556, 557, 558, 559, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 579, 580, 581, 582, 584, 585, 587, 588, 591, 592, 593, 596, 597, 598, 599, 603, 604, 605, 606, 607, 608, 610, 611, 612, 614, 615, 616, 618, 619, 620, 621, 622, 626, 627, 628, 629, 630, 631, 632, 633, 635, 636, 637, 638, 641, 644, 645, 647, 648, 649, 650, 653, 658, 660, 661, 664, 666, 667, 668, 669, 670, 671, 672, 683, 684, 685, 686, 687, 691, 692, 693, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 714, 715, 718, 719, 723, 724, 725, 726, 727, 728, 729, 732, 733, 738, 742, 743, 751, 752, 759, 768, 771, 775, 776, 777, 778, 781, 783, 786, 787, 788, 793, 794, 796, 797, 799, 800, 801, 802, 806, 807, 808, 812, 816, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 839, 840, 842, 850, 851, 852, 854, 855, 858, 876], "physionet": [8, 136, 203, 242, 378, 400, 401, 852, 864, 876], "martin": [8, 10, 35, 47, 102, 242, 408, 850, 852, 858, 876], "billing": [8, 876], "tugraz": 8, "sklearn": [8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 115, 136, 170, 193, 194, 203, 224, 352, 357, 409, 411, 414, 417, 418, 422, 425, 695, 739, 834, 835, 876], "discriminant_analysi": [8, 9], "lineardiscriminantanalysi": [8, 9], "model_select": [8, 9, 10, 12, 15, 16, 19, 352, 357, 425, 876], "shufflesplit": 8, "cross_val_scor": [8, 9], "events_from_annot": [8, 9, 110, 126, 134, 135, 136, 143, 167, 209, 239, 256, 281, 484, 491, 866, 876], "make_standard_montag": [8, 19, 69, 81, 123, 158, 169, 189, 239, 262, 263, 264, 265, 267, 321, 328, 476, 477, 488, 499, 866, 876], "concatenate_raw": [8, 9, 10, 79, 110, 190, 262, 263, 264, 265, 359, 360, 476, 477, 575, 584, 852, 866, 876], "read_raw_edf": [8, 9, 81, 110, 136, 158, 188, 203, 482, 484, 498, 852, 858, 862, 866, 876], "classif": [8, 9, 10, 11, 12, 15, 51, 137, 138, 145, 161, 164, 194, 242, 256, 262, 267, 298, 400, 409, 437, 476, 491, 602, 698, 776, 852, 876], "start": [8, 22, 29, 33, 34, 40, 61, 65, 69, 80, 91, 94, 125, 133, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 155, 156, 157, 159, 160, 164, 165, 166, 167, 169, 172, 173, 176, 177, 187, 194, 198, 199, 201, 202, 203, 204, 206, 208, 209, 213, 214, 215, 216, 219, 221, 224, 225, 226, 237, 238, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 276, 277, 278, 281, 282, 283, 294, 333, 339, 340, 341, 342, 352, 355, 357, 408, 414, 415, 420, 432, 448, 449, 450, 466, 467, 475, 476, 477, 482, 484, 491, 501, 504, 517, 526, 545, 556, 559, 563, 568, 569, 572, 573, 575, 576, 577, 578, 579, 598, 614, 661, 673, 683, 684, 686, 687, 696, 697, 699, 701, 702, 703, 704, 705, 706, 707, 731, 743, 748, 767, 769, 776, 782, 787, 789, 790, 796, 816, 831, 833, 835, 837, 838, 839, 840, 843, 846, 851, 854, 855, 858, 859, 861, 862, 876], "cue": [8, 134], "feet": [8, 9, 110, 378], "standard_1005": [8, 69, 81, 158, 169, 203], "set_montag": [8, 15, 19, 69, 81, 123, 126, 133, 134, 135, 150, 158, 169, 181, 188, 189, 203, 219, 239, 262, 263, 264, 265, 267, 441, 476, 477, 488, 499, 858, 876], "skip_by_annot": [8, 9, 262, 263, 264, 265, 476, 477, 575, 584, 876], "t1": [8, 9, 30, 44, 50, 110, 155, 156, 157, 158, 159, 160, 175, 254, 275, 277, 278, 301, 305, 306, 307, 318, 387, 468, 476, 581, 645, 761, 807, 831, 852, 858, 876], "t2": [8, 9, 110, 318, 476, 876], "train": [8, 10, 11, 13, 15, 16, 19, 86, 136, 193, 194, 408, 409, 410, 411, 412, 413, 415, 416, 418, 419, 420, 421, 425, 556, 557, 786, 835, 851, 852, 876], "epochs_train": [8, 136], "except": [8, 9, 69, 81, 110, 139, 142, 158, 170, 174, 175, 203, 208, 213, 262, 263, 264, 265, 282, 283, 326, 346, 347, 352, 400, 449, 476, 477, 478, 545, 557, 575, 624, 687, 691, 733, 835, 858, 861, 876], "ignor": [8, 9, 10, 41, 47, 68, 69, 79, 81, 107, 110, 134, 139, 145, 150, 158, 161, 165, 171, 180, 183, 190, 197, 198, 199, 205, 224, 254, 257, 259, 260, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 276, 277, 278, 280, 281, 282, 283, 295, 296, 314, 322, 337, 346, 347, 352, 356, 358, 359, 361, 363, 367, 368, 373, 375, 376, 377, 380, 381, 383, 388, 391, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 408, 415, 417, 427, 435, 437, 442, 444, 449, 455, 458, 465, 471, 473, 474, 476, 477, 478, 487, 489, 493, 496, 504, 534, 551, 555, 556, 559, 567, 575, 584, 604, 608, 610, 611, 619, 633, 635, 638, 644, 645, 661, 683, 685, 696, 698, 699, 700, 740, 760, 771, 772, 773, 775, 776, 779, 782, 786, 787, 795, 796, 797, 798, 803, 805, 822, 824, 826, 831, 835, 876], "_io": [8, 9, 69, 81, 110, 158, 203], "fileio": [8, 9, 69, 81, 110, 158, 203], "eegbci_checksum": [8, 9, 69, 81, 110, 158, 203], "txt": [8, 9, 44, 69, 81, 110, 133, 134, 158, 179, 182, 203, 214, 215, 256, 328, 337, 383, 479, 483, 602, 611, 821, 833, 835, 855, 876], "rb": [8, 9, 69, 81, 110, 158, 203], "closefd": [8, 9, 69, 81, 110, 158, 203], "traceback": [8, 9, 69, 81, 110, 158, 203, 834], "most": [8, 9, 19, 28, 45, 47, 69, 72, 80, 81, 102, 106, 107, 110, 112, 118, 125, 133, 134, 139, 143, 148, 149, 150, 151, 154, 155, 158, 164, 166, 168, 170, 171, 180, 187, 197, 200, 202, 203, 204, 205, 207, 208, 209, 210, 213, 224, 228, 237, 254, 262, 263, 264, 265, 267, 268, 273, 276, 310, 328, 353, 354, 355, 375, 376, 377, 380, 381, 383, 387, 388, 391, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 437, 443, 448, 451, 471, 509, 515, 543, 556, 566, 582, 584, 601, 648, 649, 650, 659, 660, 661, 662, 683, 684, 685, 686, 687, 733, 738, 743, 761, 782, 831, 834, 835, 839, 840, 841, 853, 855, 857, 858, 859, 862, 866, 876], "recent": [8, 9, 69, 81, 110, 158, 170, 200, 203, 408, 834, 835, 851, 876], "last": [8, 9, 15, 69, 80, 81, 102, 110, 125, 136, 139, 143, 145, 150, 158, 159, 165, 182, 187, 194, 198, 199, 200, 201, 203, 204, 213, 216, 224, 225, 232, 239, 257, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 276, 277, 278, 285, 286, 300, 318, 340, 352, 360, 411, 418, 419, 421, 432, 446, 447, 448, 449, 475, 476, 477, 500, 517, 522, 551, 556, 559, 677, 682, 683, 684, 686, 687, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 714, 725, 731, 743, 775, 780, 782, 787, 790, 797, 803, 831, 834, 852, 857, 858, 876], "decor": [8, 9, 69, 81, 110, 158, 203, 739, 741], "gen": [8, 9, 69, 81, 110, 158, 203, 756], "567": [8, 9, 69, 81, 110, 158, 194, 203, 229, 242], "resourcewarn": [8, 9, 69, 81, 110, 158, 203], "unclos": [8, 9, 69, 81, 110, 158, 203], "bufferedread": [8, 9, 69, 81, 110, 158, 203], "edf": [8, 9, 81, 110, 136, 158, 203, 441, 476, 477, 484, 491, 498, 602, 852, 858, 862, 876], "eegmmidb": [8, 9, 81, 110, 158, 203, 378, 876], "s001": [8, 9, 81, 110, 158, 203], "s001r06": [8, 9, 110, 158], "19999": [8, 110, 158, 203], "124": [8, 35, 104, 105, 110, 158, 168, 203, 224, 229, 242, 386], "994": [8, 9, 48, 56, 69, 81, 110, 158, 203, 229], "s001r10": [8, 9, 110], "s001r14": [8, 9, 110], "bandpass": [8, 9, 12, 13, 14, 15, 16, 18, 21, 34, 42, 71, 75, 80, 86, 111, 113, 119, 131, 135, 140, 143, 145, 171, 194, 197, 199, 202, 203, 205, 209, 210, 229, 239, 262, 263, 264, 265, 410, 416, 419, 443, 444, 446, 476, 477, 588, 698, 700, 796, 797, 876], "265": [8, 9, 19, 79, 80, 110, 122, 128, 168, 190, 224, 229, 236, 242, 653, 658], "656": [8, 9, 229], "64": [8, 9, 12, 13, 19, 21, 26, 32, 33, 34, 35, 41, 45, 46, 47, 50, 58, 59, 79, 80, 81, 99, 101, 106, 110, 112, 136, 142, 157, 158, 168, 169, 170, 171, 175, 177, 180, 183, 184, 190, 193, 194, 203, 207, 221, 224, 225, 228, 229, 242, 259, 262, 263, 264, 265, 268, 271, 273, 408, 415, 474, 476, 477, 497, 529, 530, 539, 540, 555, 556, 696, 698, 700, 760, 775, 782, 786, 795, 798, 803, 805, 841, 852, 858, 862], "annot": [8, 9, 27, 38, 41, 44, 47, 67, 74, 76, 81, 83, 88, 92, 93, 110, 111, 124, 125, 126, 133, 134, 135, 143, 145, 150, 159, 164, 165, 172, 174, 180, 188, 189, 190, 193, 197, 203, 206, 216, 217, 218, 220, 257, 262, 263, 264, 265, 267, 281, 342, 343, 357, 361, 385, 437, 475, 476, 477, 478, 484, 489, 491, 496, 504, 516, 556, 558, 559, 560, 561, 562, 563, 572, 573, 575, 576, 577, 584, 585, 602, 611, 619, 635, 638, 700, 743, 759, 785, 788, 796, 797, 811, 812, 826, 831, 852, 853, 858, 866, 876], "descript": [8, 9, 110, 126, 134, 135, 136, 139, 141, 143, 150, 167, 168, 169, 187, 189, 190, 199, 209, 213, 214, 215, 219, 224, 256, 262, 263, 264, 265, 267, 271, 281, 320, 321, 353, 354, 357, 437, 476, 477, 478, 516, 556, 559, 572, 573, 576, 608, 696, 699, 700, 788, 797, 831, 835, 852, 861, 876], "801": [8, 56, 143, 194, 229, 238], "discrim": 8, "mont": [8, 242], "carlo": [8, 242, 876], "cross": [8, 9, 10, 11, 12, 15, 16, 19, 27, 32, 33, 34, 36, 44, 56, 77, 85, 103, 104, 117, 119, 120, 128, 136, 161, 165, 176, 193, 194, 198, 203, 205, 208, 220, 221, 228, 242, 259, 262, 264, 266, 267, 273, 274, 286, 288, 295, 296, 297, 352, 357, 358, 362, 369, 408, 411, 414, 420, 424, 425, 429, 449, 476, 522, 532, 533, 534, 535, 538, 553, 556, 566, 572, 575, 576, 584, 605, 611, 614, 616, 624, 697, 701, 702, 703, 704, 705, 706, 707, 713, 743, 769, 787, 831, 847, 852, 855, 864, 876], "epochs_data": [8, 410, 413, 417, 876], "get_data": [8, 9, 10, 12, 13, 14, 16, 18, 21, 69, 71, 74, 82, 94, 95, 98, 112, 113, 125, 131, 136, 139, 140, 145, 148, 165, 166, 194, 201, 204, 225, 229, 237, 238, 239, 262, 263, 264, 265, 476, 477, 697, 698, 700, 858, 876], "epochs_data_train": 8, "cv": [8, 9, 10, 11, 12, 15, 16, 19, 194, 352, 357, 424, 425, 876], "test_siz": 8, "cv_split": 8, "split": [8, 10, 11, 15, 16, 19, 58, 86, 92, 125, 144, 158, 165, 193, 194, 205, 220, 225, 234, 242, 262, 263, 264, 265, 268, 269, 270, 273, 276, 277, 278, 352, 357, 425, 467, 475, 476, 477, 496, 499, 529, 530, 584, 673, 682, 697, 725, 728, 743, 769, 801, 806, 861, 876], "assembl": [8, 9, 228, 534, 688, 853, 876], "lda": [8, 9], "log": [8, 9, 12, 21, 33, 81, 119, 127, 141, 161, 176, 198, 200, 203, 205, 209, 216, 226, 238, 239, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 301, 302, 303, 304, 305, 306, 307, 310, 312, 314, 315, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 413, 414, 415, 418, 419, 421, 424, 425, 427, 429, 433, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 458, 459, 463, 464, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516, 518, 519, 520, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 549, 552, 556, 558, 559, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 579, 580, 581, 582, 584, 585, 587, 588, 591, 592, 593, 596, 597, 598, 599, 603, 604, 605, 606, 607, 608, 610, 611, 612, 614, 615, 616, 618, 619, 620, 621, 622, 626, 627, 628, 629, 630, 631, 632, 633, 635, 636, 637, 638, 641, 642, 643, 644, 645, 647, 648, 649, 650, 660, 661, 664, 666, 667, 668, 669, 670, 671, 672, 683, 684, 685, 686, 687, 691, 692, 693, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 714, 715, 718, 719, 723, 724, 726, 727, 728, 729, 732, 733, 738, 741, 742, 743, 751, 759, 768, 771, 772, 775, 776, 777, 778, 783, 784, 786, 787, 788, 791, 793, 794, 796, 797, 799, 800, 801, 802, 803, 806, 807, 808, 812, 816, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 855, 866, 876], "norm_trac": [8, 9, 194, 408, 876], "scikit": [8, 9, 16, 18, 19, 115, 194, 203, 412, 414, 416, 417, 418, 419, 421, 422, 423, 426, 556, 853, 876], "learn": [8, 9, 16, 18, 19, 21, 69, 115, 142, 160, 161, 165, 194, 196, 198, 199, 203, 242, 248, 352, 412, 414, 416, 417, 418, 419, 421, 422, 423, 425, 426, 556, 582, 835, 842, 852, 853, 855, 876], "clf": [8, 9, 10, 11, 12, 13, 15, 18, 194, 423, 876], "class_bal": 8, "accuraci": [8, 10, 15, 33, 79, 133, 136, 242, 259, 262, 263, 264, 265, 271, 368, 369, 408, 414, 415, 420, 429, 451, 476, 477, 534, 555, 556, 570, 653, 658, 696, 698, 700, 724, 727, 733, 760, 775, 782, 786, 795, 798, 803, 805, 816, 861, 876], "chanc": [8, 9, 10, 11, 194, 857, 876], "fit_transform": [8, 9, 10, 14, 18, 194, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 421, 422, 423, 557], "plot_pattern": [8, 12, 194, 408, 415, 876], "ch_type": [8, 14, 22, 26, 42, 63, 78, 80, 85, 98, 110, 112, 118, 122, 123, 129, 140, 141, 144, 148, 149, 150, 165, 169, 175, 176, 189, 203, 208, 209, 216, 219, 229, 237, 238, 259, 262, 263, 264, 265, 316, 317, 371, 408, 415, 476, 477, 502, 515, 555, 556, 561, 570, 575, 637, 641, 696, 698, 699, 700, 774, 775, 782, 786, 798, 799, 803, 805, 876], "au": [8, 259, 262, 263, 264, 265, 271, 371, 408, 415, 476, 477, 696, 698, 700, 775, 782, 795, 803], "7e": [8, 9, 32, 35, 48, 49, 54, 55, 58, 69, 92, 119, 149, 151, 161, 171, 177, 178, 181, 182, 184, 190, 194, 198, 220], "8e": [8, 9, 32, 35, 49, 73, 107, 119, 161, 171, 176, 179, 182, 184, 190, 194], "0001": [8, 9, 32, 77, 85, 117, 122, 149, 178, 198, 473, 474], "00012": [8, 9], "6e": [8, 9, 34, 42, 46, 117, 119, 151, 171, 176, 182, 184, 194], "00011": [8, 9], "933333": 8, "533333": 8, "00025": 8, "00026": 8, "9e": [8, 9, 42, 49, 85, 91, 122, 149, 151, 161, 176, 179, 181, 182, 183, 184, 194, 220], "w_length": 8, "int": [8, 11, 19, 31, 67, 71, 88, 91, 93, 107, 112, 125, 142, 148, 159, 168, 170, 190, 193, 200, 201, 210, 213, 219, 221, 234, 239, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 301, 302, 303, 304, 305, 306, 307, 309, 310, 312, 314, 315, 325, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 418, 419, 420, 421, 424, 425, 427, 429, 430, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 458, 459, 461, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 547, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 587, 588, 591, 592, 593, 596, 597, 598, 599, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 616, 618, 619, 620, 621, 622, 626, 627, 628, 629, 630, 631, 632, 633, 635, 636, 637, 638, 641, 643, 644, 645, 646, 647, 648, 649, 650, 659, 660, 661, 662, 664, 666, 667, 668, 669, 670, 671, 672, 673, 675, 676, 679, 682, 683, 684, 685, 686, 687, 688, 691, 692, 693, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 711, 714, 715, 718, 719, 720, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 738, 742, 743, 751, 752, 756, 759, 760, 761, 767, 768, 769, 771, 772, 773, 774, 775, 776, 777, 778, 781, 782, 783, 786, 787, 788, 789, 790, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 812, 816, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 876], "w_step": 8, "w_start": 8, "shape": [8, 16, 19, 22, 31, 41, 47, 50, 53, 63, 65, 69, 95, 112, 113, 118, 133, 135, 136, 139, 145, 148, 156, 157, 159, 169, 174, 180, 187, 193, 194, 200, 213, 219, 224, 225, 226, 228, 229, 232, 233, 234, 237, 238, 239, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 285, 295, 296, 297, 302, 303, 304, 310, 311, 312, 316, 319, 323, 327, 337, 342, 346, 347, 348, 349, 350, 361, 363, 366, 367, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 432, 436, 437, 442, 444, 446, 449, 450, 451, 452, 453, 466, 467, 469, 470, 471, 473, 476, 477, 479, 487, 500, 511, 513, 515, 517, 521, 531, 532, 533, 535, 538, 539, 551, 555, 556, 557, 559, 560, 561, 563, 564, 565, 566, 567, 570, 575, 578, 582, 584, 589, 590, 598, 599, 608, 610, 611, 627, 630, 633, 634, 635, 636, 645, 646, 651, 652, 653, 654, 655, 656, 657, 658, 663, 664, 673, 675, 676, 677, 681, 682, 683, 684, 685, 686, 687, 694, 696, 697, 698, 699, 700, 701, 702, 703, 708, 711, 712, 714, 715, 719, 721, 722, 723, 724, 725, 726, 727, 731, 732, 733, 734, 736, 742, 743, 746, 747, 748, 758, 759, 760, 762, 763, 764, 767, 773, 774, 775, 776, 777, 779, 782, 783, 785, 786, 788, 789, 793, 795, 797, 798, 799, 801, 803, 804, 805, 806, 807, 811, 813, 816, 821, 824, 829, 831, 842, 851, 858, 876], "scores_window": 8, "train_idx": 8, "test_idx": 8, "y_train": [8, 136, 193], "y_test": [8, 136, 193], "x_train": [8, 193], "x_test": [8, 193], "slide": [8, 12, 21, 133, 155, 239, 272, 723, 724, 726, 727], "score_this_window": 8, "n": [8, 10, 43, 45, 69, 81, 91, 97, 107, 112, 136, 140, 143, 148, 150, 156, 159, 169, 171, 174, 187, 200, 203, 204, 205, 206, 213, 219, 221, 224, 226, 228, 229, 239, 242, 254, 256, 257, 260, 261, 262, 263, 264, 265, 268, 269, 270, 273, 274, 276, 277, 278, 280, 310, 319, 338, 348, 349, 350, 353, 354, 355, 358, 366, 378, 400, 401, 423, 429, 432, 443, 445, 466, 476, 477, 496, 538, 555, 556, 560, 563, 572, 573, 575, 584, 632, 656, 669, 670, 671, 672, 676, 681, 696, 699, 708, 709, 712, 722, 723, 724, 726, 727, 743, 746, 747, 762, 777, 784, 801, 806, 807, 813, 831, 843, 852, 855, 858, 862, 876], "w_time": [8, 9], "axvlin": [8, 10, 11, 13, 19, 45, 110, 125, 143, 159, 194, 208], "linestyl": [8, 9, 11, 21, 95, 109, 110, 111, 125, 149, 194, 200, 204, 209, 229, 712, 722, 767, 791, 876], "color": [8, 9, 10, 11, 12, 13, 19, 21, 22, 38, 39, 45, 47, 48, 49, 50, 54, 55, 59, 69, 79, 80, 94, 95, 99, 102, 110, 111, 112, 113, 114, 118, 125, 130, 131, 133, 134, 135, 136, 140, 141, 143, 148, 149, 150, 155, 159, 165, 167, 169, 171, 174, 175, 176, 177, 180, 182, 184, 193, 194, 197, 198, 200, 201, 204, 208, 209, 214, 215, 216, 221, 229, 234, 237, 238, 239, 258, 259, 260, 262, 263, 264, 265, 268, 269, 270, 271, 273, 275, 276, 277, 278, 367, 408, 415, 460, 461, 466, 467, 476, 477, 555, 556, 617, 618, 696, 698, 700, 712, 722, 743, 752, 756, 758, 759, 760, 762, 765, 767, 770, 771, 772, 773, 774, 775, 776, 777, 779, 781, 782, 784, 785, 786, 791, 795, 796, 797, 798, 799, 801, 802, 803, 804, 805, 806, 809, 825, 826, 831, 876], "axhlin": [8, 9, 10, 11, 13, 19, 21, 79, 80, 110, 111, 143, 159, 194, 239, 556, 789], "xlabel": [8, 9, 15, 16, 19, 22, 28, 29, 37, 39, 41, 53, 58, 67, 71, 80, 88, 91, 95, 105, 106, 108, 112, 125, 136, 150, 159, 176, 179, 180, 193, 200, 209, 210, 221, 224, 226, 234, 238, 239, 712, 722, 876], "ylabel": [8, 9, 15, 16, 19, 22, 28, 29, 37, 39, 41, 53, 58, 67, 68, 71, 80, 88, 91, 95, 105, 106, 108, 125, 136, 150, 159, 176, 179, 180, 193, 200, 205, 209, 210, 221, 224, 226, 234, 238, 239, 712, 722], "legend": [8, 9, 10, 11, 12, 16, 19, 21, 22, 28, 37, 38, 39, 41, 45, 67, 69, 94, 95, 108, 109, 125, 136, 143, 144, 149, 161, 165, 171, 179, 193, 194, 209, 213, 214, 234, 238, 239, 262, 263, 264, 265, 712, 722, 743, 756, 766, 767, 773, 776, 781, 876], "loc": [8, 10, 16, 37, 39, 69, 110, 121, 125, 135, 139, 142, 143, 144, 168, 175, 179, 182, 209, 238, 267, 328, 595, 712, 722, 766, 813, 858, 861], "zoltan": [8, 194, 242, 408], "kole": [8, 194, 242, 408], "quantit": [8, 161, 194, 242, 556, 855, 857], "abnorm": [8, 194, 242], "clinic": [8, 69, 70, 77, 110, 150, 194, 198, 202, 203, 242, 523, 555, 556, 564, 565, 570, 584, 599, 725, 728, 852, 858], "electroencephalographi": [8, 58, 70, 77, 110, 150, 194, 198, 202, 242, 273, 555, 565, 599, 858], "neurophysiologi": [8, 69, 70, 77, 110, 150, 194, 198, 202, 203, 242, 555, 556, 564, 565, 570, 599, 725, 728, 858], "79": [8, 13, 15, 16, 19, 35, 41, 45, 47, 79, 83, 101, 106, 110, 112, 117, 156, 157, 168, 175, 180, 183, 194, 207, 224, 225, 228, 229, 242, 400, 428], "440": [8, 79, 194, 224, 242], "447": [8, 40, 56, 194, 224, 242], "1991": [8, 194, 242, 408], "1016": [8, 12, 13, 18, 19, 21, 35, 42, 44, 59, 69, 70, 73, 74, 77, 92, 99, 110, 111, 117, 119, 124, 143, 150, 154, 161, 179, 194, 198, 200, 202, 203, 210, 224, 225, 229, 242, 264, 265, 268, 273, 274, 295, 352, 358, 386, 412, 414, 415, 416, 426, 471, 474, 523, 524, 534, 538, 555, 556, 564, 565, 570, 588, 591, 599, 653, 656, 658, 683, 684, 686, 687, 689, 690, 710, 712, 722, 725, 726, 728, 760, 850, 852, 855, 858], "0013": [8, 70, 77, 110, 150, 194, 198, 202, 242, 555, 565, 599, 858], "4694": [8, 70, 77, 110, 150, 194, 198, 202, 242, 555, 565, 599, 858], "91": [8, 13, 19, 26, 35, 41, 45, 47, 50, 70, 77, 78, 106, 107, 110, 112, 115, 150, 155, 157, 168, 175, 180, 181, 193, 194, 198, 205, 206, 207, 208, 209, 224, 225, 228, 229, 242, 333], "90163": [8, 194, 242], "gerwin": [8, 203, 242, 378, 852], "schalk": [8, 203, 242, 378, 852], "denni": [8, 203, 242, 378, 852], "mcfarland": [8, 203, 242, 378, 852], "thilo": [8, 203, 242, 378, 852], "hinterberg": [8, 203, 242, 378, 852], "niel": [8, 203, 242, 378, 852], "birbaum": [8, 203, 242, 378, 852], "jonathan": [8, 99, 203, 225, 242, 378, 391, 852, 876], "wolpaw": [8, 203, 242, 378, 852], "bci2000": [8, 203, 242, 378, 852], "bci": [8, 15, 86, 110, 158, 194, 203, 242, 378, 557, 852, 864, 876], "ieee": [8, 15, 40, 46, 51, 70, 81, 82, 86, 115, 136, 143, 161, 179, 194, 203, 237, 242, 262, 263, 264, 265, 295, 296, 298, 352, 378, 401, 408, 432, 473, 474, 476, 477, 556, 557, 565, 592, 698, 700, 715, 725, 728, 851, 852, 855, 858], "transact": [8, 15, 51, 70, 82, 86, 115, 136, 161, 179, 194, 203, 237, 242, 262, 263, 264, 265, 295, 296, 352, 378, 401, 408, 473, 476, 477, 523, 556, 557, 565, 592, 698, 700, 715, 851, 852, 855, 858], "biomed": [8, 15, 70, 82, 86, 115, 136, 179, 188, 194, 203, 221, 242, 253, 295, 296, 378, 401, 408, 556, 557, 565, 592, 851, 852, 858, 863], "engin": [8, 15, 70, 81, 82, 86, 115, 179, 194, 203, 204, 205, 221, 242, 295, 296, 378, 401, 408, 523, 556, 557, 565, 592, 835, 841, 851, 852, 858], "1034": [8, 203, 207, 242, 378, 649, 852], "1043": [8, 168, 203, 207, 242, 378, 852], "2004": [8, 69, 203, 242, 352, 378, 564, 656, 852, 858], "1109": [8, 15, 40, 46, 51, 70, 81, 82, 86, 115, 136, 143, 161, 179, 194, 203, 237, 242, 262, 263, 264, 265, 295, 296, 298, 352, 378, 401, 408, 432, 473, 474, 476, 477, 556, 557, 565, 592, 698, 700, 715, 851, 852, 855, 858], "tbme": [8, 15, 70, 82, 86, 115, 194, 203, 242, 378, 408, 556, 557, 565, 592, 851, 852], "827072": [8, 203, 242, 378, 852], "ari": [8, 136, 203, 242, 378, 400, 401, 842, 852, 876], "l": [8, 19, 44, 49, 97, 124, 125, 133, 136, 143, 159, 171, 187, 193, 203, 206, 208, 210, 229, 232, 238, 239, 242, 253, 254, 274, 358, 378, 400, 401, 414, 523, 556, 564, 656, 725, 728, 761, 767, 788, 841, 850, 852, 858, 863, 876], "goldberg": [8, 136, 203, 242, 378, 400, 401, 852], "lui": [8, 136, 203, 242, 378, 400, 401, 852], "amar": [8, 136, 203, 242, 378, 400, 401, 852], "leon": [8, 136, 203, 242, 378, 400, 401, 852], "glass": [8, 31, 35, 40, 44, 59, 60, 136, 180, 203, 242, 270, 276, 277, 278, 378, 400, 401, 802, 806, 807, 852], "jeffrei": [8, 136, 203, 242, 378, 400, 401, 523, 852], "hausdorff": [8, 136, 203, 242, 378, 400, 401, 852], "plamen": [8, 136, 203, 242, 378, 400, 401, 852], "ivanov": [8, 136, 203, 242, 378, 400, 401, 852], "roger": [8, 10, 136, 203, 242, 378, 400, 401, 852], "joseph": [8, 136, 203, 242, 378, 400, 401, 852], "mietu": [8, 136, 203, 242, 378, 400, 401, 852], "georg": [8, 136, 203, 210, 242, 378, 400, 401, 852, 876], "moodi": [8, 136, 203, 242, 378, 400, 401, 852], "chung": [8, 136, 203, 242, 378, 400, 401, 852], "kang": [8, 136, 203, 242, 378, 400, 401, 852], "peng": [8, 136, 203, 242, 378, 400, 401, 852], "h": [8, 94, 99, 110, 125, 133, 136, 200, 202, 203, 215, 242, 254, 256, 262, 263, 319, 378, 400, 401, 444, 447, 555, 599, 656, 678, 694, 709, 773, 784, 850, 851, 852, 858, 876], "eugen": [8, 136, 203, 242, 378, 400, 401, 852], "stanlei": [8, 136, 203, 242, 378, 400, 401, 852], "physiobank": [8, 136, 203, 242, 378, 400, 401, 852], "physiotoolkit": [8, 136, 203, 242, 378, 400, 401, 852], "research": [8, 69, 136, 140, 143, 150, 154, 167, 197, 203, 221, 239, 242, 253, 378, 400, 401, 524, 588, 678, 843, 850, 852, 854, 863], "resourc": [8, 121, 136, 143, 201, 203, 242, 378, 400, 401, 834, 852, 859, 864], "complex": [8, 32, 37, 112, 133, 134, 136, 203, 224, 242, 262, 263, 264, 265, 288, 378, 400, 401, 421, 476, 477, 527, 648, 699, 714, 723, 724, 726, 831, 835, 852, 861, 876], "circul": [8, 136, 203, 242, 378, 400, 401, 852], "2000": [8, 10, 136, 199, 200, 202, 203, 205, 213, 242, 262, 263, 264, 265, 378, 400, 401, 408, 437, 476, 477, 478, 523, 555, 675, 851, 852, 858], "1161": [8, 136, 194, 203, 242, 378, 400, 401, 852], "cir": [8, 136, 203, 242, 378, 400, 401, 852], "101": [8, 69, 89, 112, 136, 157, 168, 189, 203, 205, 207, 224, 242, 378, 400, 401, 416, 852, 861], "e215": [8, 136, 203, 242, 378, 400, 401, 852], "520": [8, 13, 20, 79, 107, 229], "decoding_csp_eeg": [8, 20], "decomposit": [9, 11, 14, 17, 20, 27, 28, 29, 30, 32, 38, 39, 44, 47, 52, 57, 60, 73, 75, 101, 102, 105, 106, 108, 110, 111, 122, 165, 171, 180, 194, 197, 203, 204, 220, 224, 226, 227, 229, 232, 234, 238, 239, 242, 262, 264, 265, 267, 269, 270, 273, 276, 277, 278, 408, 415, 416, 421, 422, 442, 489, 517, 537, 556, 570, 582, 702, 705, 715, 721, 723, 724, 726, 727, 851, 858, 861, 876], "iter": [9, 19, 27, 35, 36, 43, 44, 56, 59, 81, 88, 91, 92, 93, 102, 110, 132, 133, 136, 156, 168, 171, 178, 179, 193, 203, 215, 221, 228, 232, 233, 234, 242, 256, 257, 259, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 274, 286, 289, 290, 293, 300, 345, 352, 358, 363, 411, 418, 425, 449, 471, 472, 473, 474, 475, 476, 477, 508, 522, 523, 525, 527, 530, 556, 559, 566, 570, 582, 616, 646, 661, 681, 682, 683, 684, 686, 687, 696, 698, 699, 700, 703, 714, 731, 733, 743, 756, 802, 858, 876], "roll": [9, 107, 122, 743, 811], "laura": [9, 194, 242, 876], "gwilliam": [9, 194, 242, 876], "nyu": [9, 37, 99, 118, 132, 170, 224, 876], "jean": [9, 10, 11, 12, 13, 14, 16, 18, 70, 77, 184, 194, 198, 203, 242, 556, 565, 656, 851, 858, 876], "remi": [9, 10, 11, 12, 13, 14, 16, 18, 876], "king": [9, 10, 11, 12, 13, 14, 16, 18, 194, 242, 876], "jeanremi": [9, 10, 11, 12, 13, 14, 16, 18], "alex": [9, 32, 38, 69, 70, 81, 112, 113, 114, 118, 133, 134, 135, 184, 228, 229, 863, 876], "barach": [9, 12, 15, 86, 194, 242, 408, 876], "create_info": [9, 14, 15, 19, 63, 65, 69, 112, 123, 158, 187, 189, 219, 263, 265, 267, 408, 415, 477, 615, 866, 876], "time_frequ": [9, 21, 32, 33, 34, 90, 101, 109, 110, 112, 165, 200, 221, 226, 227, 228, 229, 237, 238, 413, 416, 421, 465, 866, 874, 876], "averagetfr": [9, 110, 112, 261, 264, 265, 315, 433, 465, 699, 718, 726, 727, 728, 729, 803, 866, 876], "stratifiedkfold": [9, 10, 15, 16, 425, 876], "make_pipelin": [9, 10, 11, 12, 13, 15, 18, 136, 194, 423], "labelencod": 9, "motor": [9, 17, 20, 27, 32, 74, 81, 107, 110, 143, 180, 194, 209, 262, 267, 310, 326, 361, 378, 408, 415, 437, 491, 553, 876], "imageri": [9, 17, 20, 27, 110, 194, 262, 267, 310, 326, 361, 378, 408, 437, 491, 553, 876], "n_split": [9, 10, 12, 15, 16, 19, 425], "speed": [9, 10, 11, 19, 32, 33, 41, 42, 44, 50, 73, 80, 81, 82, 92, 101, 107, 111, 133, 134, 140, 144, 150, 157, 160, 161, 164, 171, 178, 179, 182, 193, 194, 197, 203, 205, 207, 210, 225, 226, 232, 234, 262, 263, 269, 270, 273, 274, 276, 277, 278, 413, 414, 420, 464, 476, 477, 529, 530, 556, 639, 714, 743, 773, 775, 796, 801, 806, 833, 835, 855, 859, 864, 876], "shuffl": [9, 10, 12, 15, 229, 876], "n_cycl": [9, 32, 105, 108, 110, 112, 165, 200, 226, 227, 228, 229, 238, 421, 539, 540, 702, 705, 710, 712, 722, 723, 724, 726, 727], "mani": [9, 44, 69, 73, 110, 118, 119, 125, 139, 141, 145, 148, 149, 150, 151, 154, 157, 159, 160, 161, 165, 166, 170, 171, 176, 189, 193, 197, 198, 199, 200, 201, 203, 204, 205, 219, 221, 224, 237, 239, 253, 254, 255, 262, 263, 267, 272, 274, 277, 278, 295, 346, 352, 432, 437, 450, 467, 556, 645, 681, 691, 696, 697, 743, 759, 769, 786, 788, 789, 831, 833, 835, 838, 839, 851, 853, 855, 858, 860, 862, 864, 876], "cycl": [9, 105, 112, 183, 200, 238, 239, 262, 263, 339, 421, 476, 477, 539, 540, 556, 702, 705, 710, 712, 722, 723, 724, 726, 727, 767, 773, 776, 788, 796, 835, 876], "min_freq": 9, "max_freq": 9, "n_freq": [9, 112, 193, 228, 238, 413, 421, 676, 686, 687, 696, 697, 698, 699, 712, 714, 715, 721, 722, 723, 724, 726, 727], "bin": [9, 22, 27, 69, 96, 100, 118, 121, 141, 143, 170, 200, 208, 210, 226, 232, 237, 239, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 288, 295, 416, 476, 477, 483, 497, 575, 607, 676, 680, 681, 683, 684, 686, 687, 695, 697, 698, 700, 767, 775, 779, 834, 835, 838, 839, 840, 841, 846, 858, 876], "tupl": [9, 113, 149, 169, 170, 171, 193, 203, 213, 215, 228, 229, 256, 257, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 285, 286, 300, 311, 320, 321, 358, 383, 408, 415, 423, 441, 442, 445, 448, 475, 476, 477, 484, 486, 487, 488, 491, 492, 493, 498, 502, 511, 513, 522, 539, 540, 555, 556, 559, 564, 570, 572, 573, 583, 608, 614, 615, 647, 648, 649, 661, 673, 681, 683, 684, 686, 687, 688, 696, 698, 699, 700, 708, 715, 731, 733, 743, 744, 752, 757, 760, 762, 763, 765, 767, 771, 772, 774, 775, 777, 779, 781, 782, 784, 786, 789, 791, 795, 797, 798, 801, 802, 803, 805, 806, 807, 811, 876], "linspac": [9, 19, 32, 40, 42, 67, 69, 111, 115, 135, 140, 149, 171, 176, 193, 197, 204, 205, 219, 220, 239], "freq_rang": [9, 239], "infer": [9, 10, 43, 44, 111, 155, 164, 169, 200, 214, 215, 225, 229, 230, 231, 242, 262, 263, 264, 265, 268, 269, 270, 273, 276, 277, 278, 295, 296, 316, 320, 327, 352, 356, 357, 361, 367, 368, 369, 408, 415, 438, 439, 441, 451, 452, 468, 471, 473, 474, 476, 477, 484, 486, 491, 534, 556, 627, 674, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 689, 696, 698, 700, 756, 781, 782, 783, 790, 796, 805, 829, 831, 842, 858, 876], "gap": [9, 125, 242, 473, 474, 476, 477, 796, 858, 876], "window_spac": 9, "centered_w_tim": 9, "n_window": [9, 575], "len": [9, 10, 15, 16, 18, 19, 28, 32, 39, 41, 42, 43, 45, 47, 52, 63, 67, 69, 71, 73, 88, 91, 98, 112, 115, 136, 139, 142, 143, 155, 158, 167, 175, 177, 182, 184, 190, 193, 197, 198, 199, 200, 201, 203, 205, 206, 208, 209, 210, 214, 220, 221, 224, 225, 226, 228, 229, 239, 256, 257, 259, 260, 262, 263, 264, 265, 267, 271, 273, 274, 275, 286, 300, 351, 358, 410, 418, 443, 446, 476, 477, 522, 645, 676, 698, 699, 712, 722, 731, 743, 748, 774, 796, 804, 805, 876], "instanti": [9, 143, 171, 194, 203, 257, 259, 260, 261, 262, 263, 267, 271, 272, 274, 310, 477, 698, 700, 745, 756, 876], "encod": [9, 19, 125, 142, 143, 149, 165, 167, 171, 187, 193, 194, 207, 208, 209, 242, 248, 267, 344, 414, 484, 491, 498, 499, 500, 608, 829, 831, 858, 864, 876], "le": 9, "59999": [9, 183], "374": [9, 13, 79, 168, 207, 213], "loop": [9, 32, 42, 60, 107, 118, 134, 136, 148, 176, 180, 198, 229, 234, 239, 242, 401, 429, 567, 575, 584, 743, 852, 858, 876], "init": [9, 373, 835, 840], "freq_scor": 9, "fmin": [9, 32, 101, 102, 106, 111, 112, 114, 131, 136, 237, 238, 239, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 413, 476, 477, 529, 530, 696, 697, 698, 699, 700, 701, 703, 704, 706, 714, 715, 725, 728, 743, 762, 797, 801, 803, 806, 807, 876], "fmax": [9, 32, 73, 101, 102, 106, 111, 112, 114, 131, 136, 165, 197, 201, 210, 237, 238, 239, 262, 263, 264, 265, 413, 476, 477, 529, 530, 696, 697, 698, 699, 700, 701, 703, 704, 706, 714, 715, 725, 728, 743, 758, 797, 803, 876], "enumer": [9, 10, 15, 19, 28, 39, 40, 47, 70, 92, 94, 102, 105, 110, 112, 133, 134, 135, 145, 148, 149, 150, 158, 193, 200, 203, 205, 209, 220, 229, 234, 239], "being": [9, 45, 112, 114, 125, 135, 159, 165, 170, 171, 198, 200, 205, 206, 208, 213, 221, 224, 226, 229, 259, 262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 360, 363, 442, 452, 466, 476, 477, 511, 556, 575, 577, 619, 696, 698, 700, 743, 761, 774, 777, 779, 780, 797, 802, 807, 835, 857, 858, 876], "w_size": 9, "isol": [9, 45, 112, 199, 203, 205, 876], "raw_filt": [9, 112, 140, 201, 203], "pad": [9, 15, 112, 125, 224, 229, 239, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 319, 443, 446, 447, 448, 476, 477, 715, 876], "drop_bad": [9, 16, 141, 150, 190, 199, 262, 263, 312, 465, 556, 698, 699, 858, 876], "fold": [9, 10, 12, 15, 16, 26, 136, 268, 273, 425, 659, 662], "roc_auc": [9, 11, 13, 194, 411, 418], "axi": [9, 10, 12, 14, 15, 16, 19, 21, 22, 28, 31, 35, 45, 58, 60, 67, 69, 71, 82, 88, 94, 98, 102, 105, 107, 108, 110, 111, 112, 113, 114, 115, 117, 125, 131, 133, 136, 139, 140, 141, 143, 149, 150, 155, 159, 165, 171, 180, 182, 184, 190, 193, 194, 198, 200, 210, 213, 216, 219, 224, 227, 229, 232, 234, 238, 239, 254, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 273, 276, 277, 278, 285, 312, 319, 363, 408, 415, 421, 428, 448, 467, 476, 477, 487, 555, 556, 570, 649, 673, 675, 683, 684, 686, 687, 690, 696, 698, 700, 725, 728, 743, 756, 759, 760, 767, 774, 775, 776, 777, 778, 779, 780, 782, 783, 784, 786, 788, 790, 791, 795, 796, 797, 798, 803, 804, 805, 841, 858, 876], "701": [9, 134], "205": [9, 168, 183, 228, 229], "281": [9, 110, 168, 207, 229], "17": [9, 10, 11, 12, 13, 19, 26, 28, 32, 34, 35, 41, 43, 45, 47, 50, 60, 61, 70, 79, 82, 88, 94, 101, 106, 107, 110, 112, 113, 121, 144, 150, 155, 156, 157, 159, 168, 170, 171, 175, 176, 179, 180, 181, 182, 183, 184, 187, 190, 193, 194, 206, 207, 213, 218, 219, 224, 225, 226, 228, 229, 231, 232, 234, 242, 262, 263, 264, 265, 269, 272, 273, 274, 275, 277, 278, 286, 295, 352, 354, 357, 358, 369, 408, 415, 417, 475, 476, 477, 523, 529, 530, 584, 649, 661, 684, 696, 712, 722, 723, 726, 760, 801, 807, 852, 858], "165": [9, 145, 168, 200, 203, 209, 228, 229, 242], "031": [9, 126, 139, 148, 168, 169, 173, 183, 221], "581": [9, 207, 229], "139": [9, 168, 194, 221, 224, 228, 229, 275, 876], "869": 9, "549": [9, 37, 56, 206, 242], "22": [9, 11, 13, 14, 15, 16, 19, 20, 21, 28, 32, 34, 35, 39, 40, 44, 45, 47, 79, 86, 88, 101, 104, 106, 107, 108, 110, 112, 116, 117, 128, 131, 149, 168, 170, 175, 179, 182, 187, 190, 194, 197, 203, 206, 207, 212, 221, 224, 225, 226, 228, 229, 232, 233, 234, 237, 241, 242, 262, 263, 264, 265, 274, 275, 310, 333, 337, 338, 358, 401, 447, 476, 477, 496, 511, 516, 556, 559, 598, 615, 632, 641, 691, 715, 759, 787, 797, 834, 858], "121": [9, 139, 144, 165, 168, 169, 207, 224, 228, 262, 263, 431], "756": [9, 13, 229], "523": [9, 13, 229], "bar": [9, 133, 142, 149, 170, 182, 215, 216, 239, 259, 262, 263, 264, 265, 271, 272, 408, 411, 415, 418, 476, 477, 555, 556, 696, 698, 700, 743, 767, 772, 773, 774, 775, 779, 782, 786, 790, 795, 796, 798, 803, 812, 858, 876], "width": [9, 112, 125, 133, 159, 171, 197, 200, 201, 216, 224, 239, 260, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 311, 319, 324, 410, 419, 444, 446, 447, 467, 476, 477, 588, 696, 710, 712, 722, 725, 726, 728, 743, 752, 771, 772, 799, 801, 802, 806, 831, 855, 858, 876], "edgecolor": [9, 10, 238], "black": [9, 21, 45, 47, 48, 50, 110, 141, 150, 159, 189, 205, 209, 259, 260, 262, 263, 264, 265, 269, 270, 271, 273, 276, 277, 278, 408, 415, 476, 477, 555, 556, 570, 696, 698, 700, 743, 756, 759, 760, 771, 775, 777, 781, 782, 786, 794, 795, 797, 798, 801, 803, 804, 805, 806, 876], "xtick": [9, 15, 19, 88, 125, 193, 200, 210, 224], "tf_score": 9, "center": [9, 37, 45, 67, 69, 78, 88, 93, 110, 118, 119, 133, 150, 155, 157, 159, 169, 184, 197, 199, 200, 201, 205, 224, 239, 253, 254, 264, 265, 268, 273, 303, 417, 487, 509, 520, 556, 565, 645, 648, 653, 659, 662, 696, 733, 743, 747, 783, 794, 802, 852, 858, 863, 876], "w_tmin": 9, "w_tmax": 9, "av_tfr": 9, "newaxi": [9, 15, 28, 98, 115, 229, 232, 233, 234, 743], "white": [9, 24, 26, 41, 52, 107, 110, 114, 119, 124, 125, 131, 133, 134, 141, 155, 157, 158, 159, 175, 177, 189, 208, 220, 224, 229, 254, 260, 262, 263, 264, 265, 268, 269, 270, 273, 275, 276, 277, 278, 367, 466, 476, 477, 509, 542, 543, 601, 619, 644, 696, 698, 700, 743, 759, 761, 771, 781, 783, 801, 804, 806, 831, 851, 876], "vmin": [9, 13, 19, 86, 105, 110, 112, 114, 115, 135, 140, 159, 175, 193, 194, 208, 209, 224, 226, 227, 238, 259, 262, 263, 264, 265, 271, 408, 415, 476, 477, 555, 556, 696, 698, 700, 743, 760, 774, 775, 782, 786, 795, 798, 803, 804, 805, 876], "red": [9, 54, 59, 69, 78, 79, 81, 98, 110, 130, 131, 141, 143, 149, 155, 159, 169, 177, 180, 189, 193, 197, 198, 201, 205, 208, 209, 216, 229, 232, 238, 239, 258, 259, 260, 262, 263, 264, 265, 268, 271, 408, 415, 476, 477, 555, 556, 570, 618, 696, 698, 700, 743, 758, 760, 767, 768, 771, 774, 775, 777, 782, 786, 795, 798, 803, 805, 831, 835, 876], "103": [9, 16, 20, 35, 50, 110, 112, 119, 168, 224, 229, 861], "decoding_csp_timefreq": [9, 20], "supervis": [10, 18, 86, 136, 408, 425], "class": [10, 16, 19, 60, 68, 86, 92, 93, 112, 113, 136, 139, 141, 148, 150, 156, 164, 165, 167, 170, 171, 174, 193, 199, 200, 203, 213, 216, 219, 229, 240, 241, 251, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 286, 300, 310, 311, 363, 392, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 449, 475, 476, 477, 507, 522, 555, 556, 557, 646, 676, 696, 697, 698, 699, 700, 714, 715, 731, 732, 733, 738, 739, 740, 743, 744, 745, 754, 816, 831, 835, 843, 844, 851, 853, 858, 859, 861, 866, 867, 876], "rel": [10, 24, 32, 33, 34, 42, 61, 74, 84, 107, 110, 111, 125, 133, 136, 139, 141, 143, 155, 165, 167, 169, 188, 197, 200, 201, 205, 208, 209, 210, 215, 238, 239, 254, 255, 257, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 307, 356, 363, 414, 429, 432, 444, 476, 477, 520, 556, 582, 598, 634, 636, 652, 689, 696, 699, 701, 702, 703, 715, 743, 756, 761, 776, 781, 790, 794, 796, 804, 816, 831, 835, 851, 858, 861, 876], "character": [10, 13, 194, 242, 556, 658, 789, 858], "confus": [10, 15, 136, 143, 656, 835], "serv": [10, 167, 214, 229, 259, 262, 263, 264, 265, 271, 279, 408, 415, 476, 477, 555, 556, 570, 696, 698, 699, 700, 741, 759, 760, 775, 782, 786, 795, 798, 803, 805, 835, 857, 858], "proxi": [10, 203, 207], "mental": [10, 13, 194, 242], "rsa": [10, 842, 852, 876], "24": [10, 11, 13, 19, 21, 26, 28, 34, 35, 45, 46, 47, 52, 56, 64, 79, 89, 101, 102, 104, 106, 107, 110, 112, 117, 121, 128, 143, 168, 170, 173, 180, 182, 188, 190, 193, 194, 196, 207, 208, 221, 224, 225, 226, 228, 229, 232, 233, 234, 239, 242, 244, 256, 260, 262, 263, 264, 265, 267, 268, 272, 275, 295, 341, 347, 359, 361, 387, 416, 438, 439, 440, 441, 451, 473, 476, 477, 484, 491, 499, 504, 516, 523, 556, 559, 691, 695, 696, 698, 699, 700, 732, 733, 740, 743, 753, 761, 766, 773, 790, 796, 797, 805, 808, 812, 822, 851, 858], "imag": [10, 16, 27, 30, 32, 33, 35, 40, 44, 46, 55, 59, 69, 86, 110, 118, 120, 122, 125, 126, 128, 133, 135, 142, 145, 148, 154, 155, 158, 159, 165, 169, 175, 179, 181, 189, 190, 197, 200, 203, 204, 205, 206, 221, 224, 225, 227, 228, 229, 238, 239, 242, 253, 259, 262, 263, 264, 265, 267, 271, 272, 274, 275, 277, 278, 287, 288, 289, 290, 295, 296, 301, 305, 310, 311, 319, 336, 351, 358, 364, 386, 408, 415, 468, 471, 473, 474, 476, 477, 485, 496, 523, 555, 556, 570, 611, 645, 651, 652, 653, 654, 655, 656, 657, 658, 696, 698, 700, 712, 722, 732, 733, 743, 744, 746, 759, 760, 761, 774, 775, 779, 781, 782, 786, 788, 795, 798, 803, 804, 805, 807, 811, 813, 816, 831, 836, 841, 842, 852, 861, 863, 876], "92": [10, 13, 19, 34, 35, 44, 79, 101, 110, 112, 142, 161, 168, 179, 193, 194, 199, 207, 224, 225, 226, 228, 229, 233, 234, 520, 858], "human": [10, 19, 33, 58, 92, 111, 124, 143, 150, 154, 177, 179, 193, 221, 242, 262, 263, 264, 265, 273, 288, 295, 372, 385, 410, 414, 419, 444, 446, 447, 476, 477, 561, 685, 712, 722, 723, 726, 831, 832, 842, 851, 852, 864], "anim": [10, 135, 264, 265, 852, 876], "inanim": [10, 852], "bodi": [10, 205, 206, 733, 852], "part": [10, 117, 125, 133, 139, 141, 143, 150, 154, 157, 159, 160, 161, 170, 181, 197, 200, 201, 205, 210, 213, 221, 242, 253, 262, 264, 265, 267, 268, 277, 278, 295, 296, 352, 356, 357, 367, 368, 369, 408, 415, 437, 451, 452, 471, 473, 474, 476, 478, 496, 529, 530, 534, 624, 673, 683, 684, 686, 687, 696, 699, 743, 760, 779, 783, 831, 835, 836, 857, 858, 859, 861, 864, 876], "6gb": 10, "build": [10, 12, 21, 32, 45, 154, 171, 174, 190, 197, 198, 200, 224, 232, 233, 234, 833, 839, 841, 857, 864, 876], "jaakko": [10, 190, 876], "leppakanga": [10, 190, 876], "jaeilepp": [10, 190], "student": [10, 190, 835], "jyu": [10, 190], "panda": [10, 14, 99, 110, 139, 142, 146, 147, 148, 150, 164, 170, 189, 190, 208, 213, 225, 237, 256, 257, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 432, 476, 477, 611, 682, 695, 696, 698, 699, 700, 834, 835, 858, 876], "read_csv": [10, 189, 190], "standardscal": [10, 11, 13, 18, 194, 417], "linear_model": [10, 11, 12, 13, 15, 18, 194, 864], "logisticregress": [10, 11, 13, 15, 194, 412, 423], "metric": [10, 15, 27, 36, 56, 88, 115, 136, 194, 210, 259, 264, 266, 267, 273, 362, 411, 414, 418, 522, 534, 535, 538, 554, 556, 605, 614, 616, 743, 789, 857, 866, 871, 876], "roc_auc_scor": [10, 411, 418, 866], "manifold": [10, 115, 117, 760], "md": [10, 242, 649], "visual_92_categori": [10, 852, 866, 876], "stimulu": [10, 13, 33, 34, 49, 68, 70, 72, 79, 80, 88, 91, 105, 118, 139, 141, 142, 143, 145, 148, 161, 165, 166, 167, 168, 179, 182, 187, 190, 193, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 213, 214, 215, 216, 221, 228, 234, 239, 254, 256, 262, 263, 264, 265, 267, 312, 344, 352, 414, 432, 437, 476, 477, 553, 559, 661, 696, 698, 699, 700, 831, 852, 858, 876], "fname": [10, 12, 21, 53, 65, 77, 84, 85, 110, 117, 118, 126, 129, 159, 169, 203, 254, 256, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 272, 273, 274, 275, 276, 277, 278, 286, 299, 310, 311, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 349, 350, 438, 439, 440, 441, 476, 477, 479, 480, 481, 482, 485, 490, 494, 495, 496, 499, 503, 504, 505, 506, 507, 508, 537, 541, 545, 546, 555, 556, 594, 595, 596, 597, 600, 602, 603, 604, 605, 606, 607, 609, 612, 613, 614, 615, 616, 617, 620, 622, 623, 624, 625, 626, 627, 629, 631, 642, 696, 697, 698, 699, 700, 716, 717, 718, 729, 731, 737, 817, 818, 819, 820, 822, 823, 824, 827, 828, 829, 830, 862, 876], "visual_stimuli": 10, "csv": [10, 121, 190, 215, 256, 328, 334, 499, 602, 876], "cond": [10, 40, 46, 59, 61, 97, 99, 149, 229, 234, 255], "restrict": [10, 28, 29, 102, 124, 141, 150, 157, 160, 165, 177, 201, 202, 205, 206, 213, 220, 224, 227, 228, 239, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 276, 277, 278, 282, 283, 295, 296, 454, 455, 476, 477, 523, 524, 525, 526, 527, 529, 530, 539, 540, 548, 549, 552, 553, 554, 659, 696, 698, 699, 700, 707, 713, 862, 876], "max_trigg": 10, "row": [10, 72, 99, 110, 125, 140, 141, 142, 143, 144, 149, 165, 168, 171, 174, 190, 194, 209, 213, 224, 225, 257, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 297, 356, 367, 408, 414, 415, 432, 476, 477, 499, 535, 538, 556, 557, 575, 681, 682, 696, 697, 698, 699, 700, 743, 769, 774, 782, 786, 789, 858, 861, 876], "cond_tag": 10, "els": [10, 15, 28, 31, 40, 47, 92, 94, 112, 150, 159, 174, 190, 200, 205, 213, 224, 239, 259, 260, 262, 263, 264, 265, 267, 271, 286, 300, 408, 415, 476, 477, 515, 522, 556, 557, 645, 651, 652, 653, 654, 655, 656, 657, 658, 679, 698, 700, 723, 724, 731, 771, 775, 796, 834, 835, 859, 876], "str": [10, 30, 39, 41, 99, 126, 142, 144, 149, 170, 182, 193, 225, 239, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 518, 519, 520, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 652, 653, 654, 655, 656, 658, 659, 660, 661, 662, 664, 666, 667, 668, 669, 670, 671, 672, 673, 675, 677, 679, 682, 683, 684, 685, 686, 687, 688, 689, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 713, 714, 715, 716, 718, 719, 723, 724, 726, 727, 728, 729, 731, 732, 733, 735, 737, 738, 739, 740, 742, 743, 746, 748, 751, 753, 755, 758, 759, 760, 761, 762, 763, 764, 767, 768, 769, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 810, 812, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 835, 876], "bodypart": 10, "natur": [10, 19, 124, 171, 193, 228, 242, 385, 414, 448, 588, 852, 858, 861, 876], "n_run": 10, "sample_subject_": 10, "_tsss_mc": 10, "on_split_miss": [10, 476, 496, 876], "filenam": [10, 43, 44, 70, 72, 75, 79, 80, 81, 91, 125, 134, 139, 140, 145, 150, 155, 156, 166, 167, 171, 197, 198, 199, 201, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 221, 254, 256, 257, 259, 262, 263, 264, 265, 268, 272, 275, 286, 299, 307, 310, 349, 350, 438, 439, 441, 451, 461, 467, 475, 476, 477, 480, 495, 496, 501, 505, 507, 518, 519, 595, 600, 602, 607, 609, 611, 613, 614, 617, 618, 619, 620, 623, 625, 627, 631, 635, 642, 645, 661, 697, 716, 737, 743, 751, 796, 817, 818, 819, 821, 824, 825, 826, 829, 841, 876], "min_dur": [10, 210, 449, 558], "002": [10, 13, 32, 33, 119, 126, 139, 140, 141, 144, 148, 165, 168, 187, 193, 194, 199, 200, 202, 205, 213, 216, 221, 242, 449], "specif": [10, 19, 27, 43, 44, 45, 69, 103, 104, 110, 118, 125, 134, 136, 140, 142, 143, 149, 150, 154, 159, 160, 169, 170, 171, 174, 188, 189, 190, 197, 198, 200, 201, 203, 205, 206, 208, 210, 213, 216, 221, 224, 225, 226, 229, 237, 238, 239, 242, 256, 258, 259, 262, 263, 264, 265, 267, 268, 269, 270, 271, 273, 276, 277, 278, 285, 295, 310, 408, 415, 432, 437, 439, 443, 449, 476, 477, 478, 491, 509, 532, 533, 553, 554, 555, 556, 562, 567, 570, 575, 584, 618, 624, 645, 675, 682, 696, 697, 698, 699, 700, 712, 722, 726, 743, 762, 767, 774, 775, 782, 786, 795, 796, 798, 801, 803, 804, 806, 807, 825, 831, 835, 839, 842, 850, 852, 857, 858, 859, 861, 864, 865, 876], "appel": 10, "dissimilar": 10, "rdm": 10, "cichi": [10, 242, 852], "et": [10, 16, 19, 21, 193, 200, 202, 239, 253, 262, 263, 564, 858, 863, 876], "al": [10, 16, 19, 21, 193, 200, 202, 239, 262, 263, 564, 858, 876], "multiclass": [10, 242, 408, 425, 876], "multinomi": 10, "logist": [10, 11, 15, 18, 194], "paper": [10, 16, 200, 204, 242, 295, 471, 523, 556, 656, 850, 858], "pairwis": [10, 47, 69, 115, 242, 564], "binari": [10, 97, 159, 194, 214, 260, 409, 425, 449, 492, 493, 497, 500, 606, 676, 682, 694, 821, 833, 840, 841, 858, 861, 876], "roc": [10, 657], "auc": [10, 194, 657], "final": [10, 16, 19, 42, 68, 69, 81, 82, 110, 111, 112, 125, 133, 136, 139, 140, 143, 145, 149, 150, 155, 159, 161, 165, 170, 178, 180, 181, 189, 193, 198, 199, 203, 204, 205, 208, 209, 224, 226, 228, 229, 232, 234, 239, 262, 263, 264, 265, 316, 327, 414, 451, 476, 477, 646, 813, 835, 851, 855, 857, 876], "sake": [10, 125, 199, 228, 862], "did": [10, 11, 28, 29, 30, 38, 39, 44, 47, 52, 57, 60, 81, 102, 105, 106, 108, 122, 159, 160, 161, 165, 169, 171, 174, 175, 180, 200, 203, 205, 206, 219, 220, 232, 234, 267, 275, 853, 861, 876], "instant": [10, 13, 42, 118, 176, 182, 194, 260, 264, 265, 285, 351, 451, 670, 671, 672, 696, 701, 702, 703, 704, 705, 706, 707, 778, 780, 782], "50m": 10, "300m": 10, "focu": [10, 12, 81, 125, 143, 199, 200, 841, 876], "liblinear": [10, 11, 13, 15, 18, 194], "multi_class": [10, 15], "y_pred": [10, 12, 19, 136, 411, 412, 414, 418, 876], "probabilist": [10, 242, 352, 411, 412, 418, 858, 864], "necessari": [10, 21, 31, 72, 92, 125, 134, 145, 150, 154, 155, 157, 159, 160, 165, 168, 170, 179, 197, 199, 200, 201, 202, 203, 204, 205, 213, 214, 219, 224, 255, 262, 263, 264, 265, 266, 269, 270, 273, 274, 276, 277, 278, 295, 296, 314, 316, 323, 356, 373, 408, 415, 417, 432, 443, 451, 475, 476, 477, 484, 491, 495, 523, 584, 592, 602, 609, 613, 641, 660, 696, 698, 699, 700, 743, 782, 801, 806, 831, 835, 851, 852, 856, 857, 858, 861, 876], "predict_proba": [10, 411, 412, 418], "ii": [10, 15, 19, 39, 91, 97, 105, 117, 134, 158, 182, 184, 189, 193, 210, 224, 234, 242, 269, 270, 273, 276, 277, 278, 318, 411, 418, 485, 556, 645, 682, 760, 876], "train_class": 10, "jj": 10, "im": [10, 13, 15, 22, 69, 113, 135, 194, 746, 805, 813, 876], "matshow": [10, 13], "rdbu_r": [10, 13, 16, 19, 22, 105, 112, 193, 194, 226, 227, 259, 262, 263, 264, 265, 271, 408, 415, 476, 477, 555, 556, 570, 696, 698, 700, 760, 774, 775, 779, 782, 786, 795, 798, 803, 804, 805, 835], "set_ytick": 10, "set_yticklabel": [10, 110], "set_xtick": [10, 239], "set_xticklabel": [10, 239], "colorbar": [10, 13, 15, 22, 69, 70, 105, 110, 112, 113, 114, 118, 125, 135, 141, 145, 149, 175, 181, 194, 205, 209, 216, 224, 225, 226, 228, 229, 259, 262, 263, 264, 265, 269, 270, 271, 273, 276, 277, 278, 408, 415, 476, 477, 555, 556, 570, 696, 697, 698, 700, 743, 757, 760, 762, 767, 768, 769, 774, 775, 779, 780, 782, 786, 795, 798, 801, 803, 804, 805, 806, 807, 876], "tight_layout": [10, 12, 15, 19, 39, 41, 58, 69, 71, 84, 112, 113, 118, 133, 143, 175, 180, 182, 193, 200, 205, 208, 209, 221, 224, 228, 229, 238, 876], "relat": [10, 12, 19, 27, 32, 33, 34, 69, 76, 99, 103, 104, 110, 115, 126, 130, 135, 143, 145, 152, 153, 154, 157, 159, 161, 164, 165, 171, 172, 177, 187, 188, 193, 194, 197, 199, 200, 202, 203, 204, 207, 208, 209, 215, 225, 232, 238, 239, 242, 262, 263, 264, 265, 267, 272, 285, 312, 327, 351, 391, 414, 415, 432, 444, 449, 465, 476, 477, 547, 556, 564, 611, 641, 645, 675, 696, 743, 756, 764, 767, 774, 789, 790, 796, 804, 815, 831, 833, 835, 838, 850, 852, 853, 855, 856, 857, 858, 859, 864, 876], "histor": [10, 149, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 333, 476, 477, 696, 699, 858, 864], "summar": [10, 45, 111, 150, 201, 203, 213, 262, 263, 269, 270, 273, 276, 277, 278, 767, 774, 851, 857, 862, 876], "dimension": [10, 149, 174, 194, 198, 204, 205, 213, 229, 232, 233, 234, 242, 264, 265, 269, 270, 273, 276, 277, 278, 352, 416, 421, 423, 556, 676, 696, 743, 777, 831, 858, 876], "reduct": [10, 17, 20, 27, 112, 190, 201, 209, 210, 242, 262, 263, 264, 265, 267, 367, 371, 407, 416, 422, 476, 553, 556, 557, 584, 592, 611, 724, 727, 876], "multi": [10, 16, 27, 36, 46, 56, 81, 102, 124, 169, 188, 194, 200, 232, 233, 234, 242, 259, 260, 262, 263, 264, 265, 266, 267, 271, 277, 300, 385, 408, 409, 413, 415, 424, 447, 449, 451, 474, 476, 477, 518, 522, 523, 525, 529, 530, 534, 555, 556, 570, 603, 605, 606, 631, 696, 698, 700, 714, 719, 760, 775, 782, 786, 795, 798, 803, 805, 809, 842, 858, 861, 876], "cluster": [10, 27, 96, 100, 110, 164, 225, 230, 231, 235, 236, 239, 242, 262, 264, 265, 267, 273, 274, 275, 316, 351, 358, 431, 449, 476, 522, 523, 537, 553, 611, 624, 626, 631, 668, 676, 677, 679, 683, 684, 686, 687, 688, 699, 726, 743, 802, 873, 876], "togeth": [10, 43, 69, 73, 140, 148, 150, 165, 171, 174, 187, 197, 203, 205, 208, 209, 213, 219, 229, 262, 263, 264, 265, 272, 281, 295, 296, 352, 356, 357, 367, 368, 369, 408, 415, 430, 451, 452, 471, 473, 474, 476, 477, 500, 534, 556, 583, 610, 627, 630, 683, 684, 686, 687, 714, 783, 824, 829, 831, 835, 876], "precomput": [10, 155, 180, 190, 262, 263, 358, 476, 477, 556, 644, 773, 790, 796, 876], "colormap": [10, 24, 58, 107, 110, 111, 114, 125, 133, 135, 141, 159, 205, 239, 259, 262, 263, 264, 265, 269, 270, 271, 273, 276, 277, 278, 408, 415, 476, 477, 555, 556, 570, 688, 696, 697, 698, 700, 743, 758, 760, 762, 767, 769, 774, 775, 779, 782, 785, 786, 795, 798, 801, 803, 804, 805, 806, 807, 826, 835, 876], "rainbow": 10, "sel": [10, 31, 225, 547, 550, 552, 553, 631, 697], "this_nam": 10, "scatter": [10, 45, 113, 224, 761, 876], "facecolor": [10, 47, 133, 150, 224], "scatterpoint": 10, "ncol": [10, 15, 72, 110, 118, 125, 136, 145, 150, 175, 182, 209, 264, 265, 408, 415, 556, 782, 786, 861, 876], "shepard": [10, 242], "multidimension": [10, 224, 242, 411, 418, 425], "tree": [10, 242, 861], "scienc": [10, 13, 33, 40, 99, 111, 179, 194, 221, 225, 239, 242, 253, 288, 295, 391, 473, 523, 556, 852, 858, 863], "210": [10, 13, 35, 79, 85, 122, 149, 168, 194, 224, 229, 242], "4468": [10, 242], "390": [10, 12, 13, 21, 79, 136, 207, 229, 242], "398": [10, 13, 79, 207, 229, 242], "1980": [10, 150, 242], "1126": [10, 242], "aarr": [10, 242], "laakso": [10, 242], "garrison": [10, 242], "cottrel": [10, 242], "content": [10, 27, 103, 157, 165, 168, 171, 200, 201, 204, 209, 216, 238, 242, 262, 263, 266, 272, 384, 385, 440, 507, 751, 767, 774, 831, 835, 840, 876], "assess": [10, 13, 136, 155, 161, 169, 197, 242, 523, 534, 556, 653, 658, 855, 858], "neural": [10, 18, 19, 22, 27, 33, 62, 66, 69, 70, 81, 115, 136, 150, 177, 179, 194, 197, 200, 203, 206, 210, 221, 239, 240, 242, 267, 288, 295, 296, 371, 408, 412, 414, 415, 471, 477, 556, 565, 582, 831, 836, 852, 876], "philosoph": [10, 242, 523, 858], "76": [10, 13, 15, 16, 18, 19, 34, 35, 46, 47, 78, 79, 101, 106, 107, 110, 112, 117, 158, 168, 175, 190, 193, 194, 207, 224, 225, 226, 228, 229, 232, 233, 234, 242, 677, 760], "09515080050002726": [10, 242], "nikolau": [10, 242], "kriegeskort": [10, 242], "mariek": [10, 242], "mur": [10, 242], "peter": [10, 179, 237, 242, 262, 263, 264, 265, 476, 477, 523, 556, 698, 700, 715, 725, 728, 858, 876], "bandettini": [10, 242], "connect": [10, 38, 47, 69, 159, 165, 221, 224, 242, 268, 287, 289, 295, 296, 373, 588, 676, 683, 684, 686, 687, 692, 763, 841, 842, 847, 866, 876], "branch": [10, 242, 835], "neuro": [10, 84, 242, 876], "radoslaw": [10, 242, 852], "aud": [10, 28, 29, 37, 39, 49, 90, 97, 102, 105, 106, 149, 229, 242, 262, 767, 852], "oliva": [10, 242, 852], "resolv": [10, 179, 203, 208, 242, 707, 839, 852, 876], "recognit": [10, 46, 99, 150, 200, 242, 725, 728, 852], "455": [10, 224, 229, 242, 275, 852], "462": [10, 207, 212, 224, 242, 275, 852], "2014": [10, 12, 13, 18, 19, 40, 70, 111, 119, 150, 161, 194, 200, 242, 264, 265, 352, 412, 414, 415, 416, 426, 473, 565, 588, 678, 725, 728, 850, 852, 855], "1038": [10, 124, 193, 242, 385, 414, 852], "nn": [10, 177, 242, 275, 645, 852, 861, 876], "3635": [10, 242, 852], "decoding_rsa_sgskip": [10, 20], "cortic": [11, 24, 26, 27, 31, 32, 41, 43, 58, 76, 78, 83, 88, 92, 107, 111, 120, 128, 154, 157, 162, 164, 165, 171, 174, 177, 179, 185, 190, 198, 221, 224, 233, 242, 254, 259, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 280, 282, 283, 295, 296, 358, 362, 386, 442, 453, 471, 473, 474, 476, 509, 523, 524, 525, 526, 527, 530, 534, 539, 540, 553, 554, 571, 601, 604, 605, 616, 619, 626, 653, 656, 658, 659, 660, 661, 662, 692, 743, 754, 802, 831, 833, 836, 839, 842, 852, 861, 864, 876], "univari": [11, 164, 194, 224, 225, 230, 231, 242, 262, 267, 476, 553, 611, 677, 679, 680, 684, 699, 726, 873, 876], "confin": [11, 47, 157, 228, 288, 858], "potenti": [11, 15, 47, 69, 70, 72, 77, 86, 99, 115, 125, 126, 140, 143, 152, 153, 164, 167, 171, 194, 198, 200, 202, 206, 224, 225, 228, 239, 242, 262, 263, 264, 265, 267, 268, 273, 307, 312, 351, 358, 367, 391, 447, 464, 465, 476, 477, 478, 547, 557, 564, 565, 611, 641, 659, 662, 682, 689, 758, 767, 774, 804, 815, 851, 852, 855, 857, 858, 876], "relev": [11, 12, 26, 99, 110, 124, 150, 168, 179, 194, 200, 201, 202, 209, 242, 275, 370, 415, 556, 572, 695, 786, 788, 835, 850, 851, 855, 858, 861], "eric": [11, 19, 22, 26, 34, 39, 50, 57, 65, 71, 78, 82, 91, 92, 107, 116, 118, 121, 124, 125, 127, 133, 134, 135, 154, 156, 158, 178, 179, 181, 182, 183, 190, 193, 194, 207, 224, 228, 229, 232, 233, 234, 242, 268, 273, 386, 523, 592, 661, 683, 684, 686, 687, 850, 852, 863, 876], "larson": [11, 19, 22, 26, 34, 39, 50, 57, 65, 71, 78, 82, 91, 92, 107, 116, 118, 121, 124, 125, 127, 133, 134, 135, 158, 178, 179, 181, 182, 183, 190, 193, 194, 207, 224, 228, 232, 233, 234, 242, 262, 263, 264, 265, 268, 273, 386, 476, 477, 592, 661, 850, 852, 863, 876], "feature_select": 11, "selectkbest": 11, "f_classif": 11, "apply_inverse_epoch": [11, 28, 45, 269, 270, 273, 276, 277, 278, 523, 524, 526, 527, 866, 876], "read_inverse_oper": [11, 28, 29, 30, 38, 39, 44, 47, 52, 57, 60, 102, 105, 106, 108, 122, 165, 180, 220, 232, 234, 541, 866], "cross_val_multiscor": [11, 194, 866, 876], "linearmodel": [11, 18, 194, 866, 876], "slidingestim": [11, 194, 425, 866, 876], "get_coef": [11, 18, 194, 866, 876], "meg_path": [11, 13, 14, 15, 16, 22, 28, 30, 31, 35, 37, 39, 40, 42, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 67, 68, 70, 71, 75, 77, 84, 85, 86, 90, 91, 92, 94, 95, 97, 98, 101, 102, 105, 106, 108, 109, 115, 116, 119, 129, 130, 131, 177, 178, 179, 180, 194, 221, 226, 227, 228, 229, 232, 233, 234], "fname_fwd": [11, 32, 33, 34, 41, 42, 43, 47, 48, 49, 54, 58, 176, 178, 220], "sample_audvi": [11, 22, 28, 29, 30, 31, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 64, 67, 77, 84, 85, 88, 90, 91, 92, 93, 102, 105, 106, 108, 114, 117, 118, 122, 125, 129, 132, 148, 149, 165, 171, 174, 175, 176, 177, 178, 179, 180, 194, 220, 221, 232, 233, 234, 254, 262, 263, 264, 265, 476, 477], "sample_audvis_filt": [11, 13, 14, 15, 16, 18, 28, 42, 49, 68, 71, 72, 75, 86, 94, 95, 97, 98, 115, 119, 130, 131, 140, 144, 150, 151, 165, 168, 171, 176, 179, 194, 199, 203, 229, 232, 234, 858], "40_raw": [11, 13, 14, 15, 16, 18, 28, 42, 49, 68, 71, 72, 75, 86, 94, 95, 97, 98, 115, 119, 130, 131, 140, 144, 150, 151, 165, 168, 171, 176, 179, 194, 199, 203, 229, 232, 234, 858], "event_fnam": [11, 14, 15, 16, 18, 68, 86, 94, 95, 98, 115, 119, 130, 227, 228, 229, 232, 234], "ev": [11, 13, 14, 15, 16, 18, 28, 68, 86, 92, 94, 95, 98, 101, 102, 115, 119, 130, 139, 144, 150, 171, 199, 214, 227, 228, 229, 232, 234, 254, 611, 612, 821, 855, 876], "fname_cov": [11, 41, 48, 49, 50, 54, 55, 58, 64, 92, 175, 178, 180], "fname_inv": [11, 28, 29, 30, 38, 39, 44, 47, 57, 60, 102, 105, 106, 108, 122, 180, 220, 232, 234], "inv": [11, 28, 29, 30, 38, 39, 44, 45, 47, 52, 57, 60, 92, 102, 105, 106, 108, 122, 133, 155, 157, 159, 165, 171, 176, 177, 178, 180, 181, 190, 194, 220, 221, 232, 234, 254, 442, 528, 531, 534, 536, 537, 541, 800, 835, 851, 858, 876], "aud_r": [11, 14, 15, 42, 228], "vis_r": [11, 14, 15, 42, 86, 228], "contra": 11, "setup": [11, 15, 16, 18, 24, 43, 44, 45, 68, 69, 71, 86, 94, 95, 98, 105, 106, 108, 115, 130, 133, 154, 226, 227, 232, 234, 238, 255, 275, 322, 373, 449, 834, 835, 836, 837, 839, 841, 852, 856, 861, 876], "read_ev": [11, 13, 14, 15, 16, 18, 28, 68, 86, 92, 94, 95, 98, 101, 102, 115, 119, 130, 139, 144, 150, 199, 214, 227, 228, 229, 232, 234, 263, 449, 608, 821, 831, 866, 876], "modifi": [11, 61, 68, 115, 133, 139, 148, 149, 150, 160, 164, 167, 168, 171, 172, 173, 181, 194, 198, 204, 206, 209, 215, 219, 224, 228, 237, 242, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 273, 274, 275, 276, 277, 278, 279, 285, 310, 316, 338, 359, 361, 362, 363, 382, 408, 410, 412, 413, 415, 416, 417, 419, 420, 422, 423, 430, 467, 471, 476, 477, 484, 491, 506, 523, 536, 548, 552, 555, 556, 578, 581, 583, 584, 585, 586, 587, 599, 632, 638, 641, 647, 648, 649, 650, 678, 689, 690, 696, 697, 698, 699, 700, 713, 715, 739, 743, 746, 759, 764, 778, 780, 796, 810, 811, 816, 843, 851, 852, 858, 861, 876], "your": [11, 31, 47, 68, 69, 92, 93, 115, 119, 125, 133, 134, 139, 140, 141, 148, 150, 154, 156, 157, 158, 160, 161, 165, 166, 167, 171, 176, 180, 181, 189, 190, 193, 194, 197, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 213, 214, 215, 224, 237, 238, 239, 254, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 279, 295, 296, 307, 316, 327, 330, 333, 336, 352, 356, 357, 367, 368, 369, 386, 408, 415, 432, 449, 451, 452, 471, 473, 474, 476, 477, 487, 492, 534, 542, 555, 556, 559, 566, 572, 584, 602, 608, 682, 696, 698, 699, 700, 743, 773, 780, 783, 789, 790, 796, 801, 813, 833, 838, 839, 840, 841, 842, 843, 850, 851, 852, 853, 854, 855, 856, 858, 861, 876], "2443": [11, 42, 72, 75, 86, 90, 91, 105, 106, 108, 109, 115, 119, 145, 165, 166, 167, 168, 176, 179, 194, 197, 198, 199, 204, 205, 208, 213, 214, 215, 216, 221, 226, 227, 228, 232, 234], "grad": [11, 16, 22, 28, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 61, 75, 77, 84, 85, 91, 92, 94, 95, 97, 98, 101, 102, 105, 107, 108, 109, 111, 112, 114, 115, 117, 118, 119, 121, 122, 125, 129, 130, 139, 141, 144, 149, 151, 155, 156, 157, 161, 165, 168, 169, 171, 175, 176, 177, 178, 179, 180, 182, 194, 198, 199, 205, 207, 208, 213, 219, 220, 221, 226, 227, 228, 232, 234, 237, 238, 254, 257, 259, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 295, 296, 309, 316, 317, 336, 352, 356, 357, 367, 368, 369, 371, 408, 415, 417, 451, 452, 471, 473, 474, 476, 477, 512, 519, 534, 553, 554, 555, 556, 561, 566, 568, 569, 570, 572, 573, 575, 637, 682, 696, 698, 699, 700, 766, 767, 773, 774, 775, 777, 779, 781, 782, 783, 786, 796, 798, 799, 803, 804, 805, 831, 851, 858, 861, 876], "4000e": [11, 16, 28, 42, 45, 46, 75, 94, 95, 98, 101, 102, 105, 108, 111, 115, 119, 130, 151, 165, 176, 179, 194, 205, 226, 227, 228, 232, 234, 238, 257, 262, 263, 357, 556, 572, 573, 682, 851], "150e": [11, 16, 28, 42, 45, 94, 95, 98, 102, 105, 108, 115, 140, 141, 151, 165, 176, 179, 194, 205, 226, 227, 228, 229, 232, 234, 262, 263, 272, 476, 477, 773, 796, 851, 858], "v1": [11, 13, 14, 15, 16, 18, 26, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 67, 68, 70, 71, 72, 75, 77, 81, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 105, 106, 108, 109, 114, 115, 116, 117, 118, 119, 121, 122, 125, 127, 130, 131, 139, 140, 141, 145, 148, 149, 150, 151, 155, 156, 157, 159, 161, 165, 166, 167, 168, 170, 171, 175, 176, 177, 178, 179, 180, 181, 188, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 213, 214, 215, 216, 220, 221, 226, 227, 228, 229, 232, 234, 695], "idl": [11, 13, 14, 15, 16, 18, 26, 28, 29, 42, 45, 49, 61, 67, 68, 70, 71, 72, 75, 81, 82, 86, 90, 91, 92, 94, 95, 97, 98, 101, 102, 105, 108, 109, 115, 116, 119, 121, 125, 127, 129, 130, 131, 140, 141, 145, 150, 151, 155, 156, 157, 159, 161, 165, 166, 167, 168, 171, 176, 179, 181, 182, 190, 194, 197, 201, 202, 203, 204, 205, 207, 208, 213, 216, 220, 221, 226, 227, 228, 229, 232, 234], "v2": [11, 13, 14, 15, 16, 18, 26, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 67, 68, 70, 71, 72, 75, 77, 81, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 105, 106, 108, 109, 114, 115, 116, 117, 118, 119, 121, 122, 125, 127, 130, 131, 139, 140, 141, 145, 148, 149, 150, 151, 155, 156, 157, 159, 161, 165, 166, 167, 168, 171, 175, 176, 177, 178, 179, 180, 181, 188, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 213, 214, 215, 216, 220, 221, 226, 227, 228, 229, 232, 234, 242, 385, 584, 876], "v3": [11, 13, 14, 15, 16, 18, 26, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 67, 68, 70, 71, 72, 75, 77, 81, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 105, 106, 108, 109, 114, 115, 116, 117, 118, 119, 121, 122, 125, 127, 130, 131, 139, 140, 141, 145, 148, 149, 150, 151, 155, 156, 157, 159, 161, 165, 166, 167, 168, 171, 175, 176, 177, 178, 179, 180, 181, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 213, 214, 215, 216, 220, 221, 226, 227, 228, 229, 232, 234], "refer": [11, 14, 22, 27, 28, 29, 30, 31, 38, 39, 41, 45, 47, 48, 49, 50, 52, 57, 60, 61, 64, 67, 68, 71, 72, 75, 76, 79, 80, 83, 84, 85, 88, 90, 91, 93, 94, 95, 97, 98, 102, 105, 106, 108, 114, 118, 122, 125, 130, 131, 144, 148, 149, 151, 155, 157, 158, 164, 165, 166, 168, 169, 171, 174, 176, 178, 180, 181, 187, 199, 207, 211, 212, 213, 220, 232, 234, 238, 239, 242, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 288, 295, 296, 298, 300, 333, 352, 357, 358, 367, 378, 382, 385, 386, 389, 390, 391, 400, 401, 408, 409, 412, 414, 415, 416, 418, 424, 426, 429, 432, 434, 447, 471, 473, 474, 476, 477, 487, 519, 520, 523, 524, 534, 538, 553, 554, 555, 556, 557, 561, 564, 565, 567, 568, 569, 570, 571, 575, 582, 584, 585, 588, 591, 592, 599, 636, 638, 641, 645, 649, 653, 656, 658, 661, 678, 680, 682, 683, 684, 685, 686, 687, 689, 690, 696, 698, 699, 700, 704, 705, 706, 707, 708, 710, 712, 714, 715, 722, 723, 725, 726, 728, 743, 745, 759, 760, 775, 782, 783, 786, 787, 790, 795, 797, 798, 803, 805, 815, 831, 839, 850, 857, 859, 861, 876], "6450": [11, 13, 14, 15, 16, 18, 28, 42, 49, 68, 71, 72, 75, 86, 94, 95, 97, 98, 115, 119, 130, 131, 140, 150, 151, 165, 168, 171, 176, 179, 194, 203, 229, 232, 234], "48149": [11, 13, 14, 15, 16, 18, 28, 42, 49, 68, 71, 72, 75, 86, 94, 95, 97, 98, 115, 119, 130, 131, 140, 150, 151, 165, 168, 171, 176, 179, 194, 203, 229, 232, 234], "956": [11, 13, 14, 15, 16, 18, 28, 29, 42, 45, 49, 67, 68, 70, 71, 72, 75, 78, 81, 86, 90, 91, 94, 95, 97, 98, 101, 102, 105, 108, 109, 115, 116, 119, 121, 125, 130, 131, 140, 142, 145, 150, 151, 155, 161, 165, 166, 167, 168, 171, 176, 179, 181, 194, 197, 201, 202, 203, 204, 205, 206, 213, 216, 220, 221, 226, 227, 228, 229, 232, 234], "320": [11, 13, 14, 15, 16, 18, 28, 29, 42, 45, 49, 67, 68, 70, 71, 72, 75, 79, 81, 86, 90, 91, 94, 95, 97, 98, 101, 102, 105, 106, 108, 109, 115, 116, 119, 121, 125, 130, 131, 133, 139, 140, 145, 148, 150, 151, 155, 161, 165, 166, 167, 168, 170, 171, 176, 179, 181, 194, 197, 198, 201, 202, 203, 204, 205, 207, 213, 216, 220, 221, 226, 227, 228, 229, 232, 234, 407], "665": [11, 13, 14, 15, 16, 18, 28, 42, 49, 68, 71, 72, 75, 86, 88, 92, 93, 94, 95, 97, 98, 115, 119, 130, 131, 140, 150, 151, 165, 168, 171, 176, 179, 194, 203, 229, 232, 234], "41699": [11, 13, 14, 15, 16, 18, 42, 71, 72, 86, 97, 119, 131, 140, 151, 165, 194, 229], "277": [11, 13, 14, 15, 16, 18, 42, 70, 71, 72, 86, 97, 110, 119, 131, 140, 151, 165, 166, 168, 181, 194, 199, 202, 213, 229], "709": [11, 13, 14, 15, 16, 18, 42, 71, 72, 86, 97, 119, 131, 140, 151, 165, 194, 229], "199": [11, 30, 31, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 77, 84, 85, 114, 117, 118, 124, 125, 128, 148, 168, 171, 175, 177, 178, 180, 182, 190, 208, 219, 224, 228, 234, 242, 710, 712, 722, 726], "325": [11, 72, 168, 207, 224, 229], "366": [11, 13, 14, 15, 16, 18, 22, 31, 35, 40, 47, 48, 49, 50, 51, 54, 55, 58, 59, 64, 67, 79, 86, 88, 90, 91, 92, 93, 104, 119, 129, 131, 143, 148, 168, 171, 177, 178, 193, 194, 207, 208, 220, 221, 224, 229], "143": [11, 49, 72, 168, 194, 199, 207, 208, 224, 228, 229, 242, 275], "19979521315838786": [11, 28, 61, 68, 70, 71, 78, 91, 92, 94, 95, 98, 101, 102, 105, 108, 115, 130, 141, 144, 148, 149, 151, 165, 171, 176, 179, 181, 198, 199, 202, 220, 227, 228, 232, 234], "151": [11, 21, 118, 150, 168, 171, 203, 207, 224, 228, 229, 234, 275], "prior": [11, 12, 18, 27, 28, 29, 30, 34, 36, 38, 39, 40, 44, 47, 52, 56, 57, 58, 60, 88, 102, 105, 106, 108, 111, 122, 141, 148, 150, 161, 165, 171, 177, 178, 179, 180, 194, 203, 206, 208, 210, 216, 220, 229, 232, 234, 259, 260, 264, 266, 267, 273, 295, 296, 452, 453, 471, 472, 473, 474, 476, 477, 493, 522, 523, 534, 556, 566, 575, 584, 605, 614, 616, 743, 770, 771, 796, 802, 858, 861, 864, 876], "061": [11, 16, 28, 32, 33, 45, 46, 61, 70, 71, 72, 91, 92, 94, 98, 105, 111, 115, 139, 144, 150, 151, 165, 166, 167, 168, 171, 176, 179, 197, 198, 199, 202, 203, 204, 205, 208, 213, 214, 215, 216, 224, 225, 226, 227, 228, 229, 232, 234, 238, 242, 683, 684, 686, 687], "read_cov": [11, 31, 35, 40, 41, 45, 48, 49, 50, 51, 54, 55, 58, 59, 64, 67, 90, 92, 161, 177, 178, 259, 820, 855, 866], "305": [11, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 75, 77, 80, 85, 86, 92, 102, 105, 106, 107, 108, 119, 122, 139, 145, 149, 151, 161, 165, 168, 171, 175, 176, 177, 178, 179, 180, 194, 206, 220, 229, 232, 234, 241, 242, 262, 263, 264, 265, 476, 477, 641], "22494": [11, 22, 28, 29, 35, 38, 39, 52, 57, 60, 102, 105, 106, 108, 122, 165, 171, 180, 232, 234], "diagon": [11, 28, 29, 30, 38, 39, 44, 47, 52, 57, 60, 69, 102, 105, 106, 108, 122, 165, 171, 179, 180, 194, 220, 221, 232, 234, 242, 259, 295, 296, 352, 369, 512, 523, 531, 858, 861, 876], "retriev": [11, 194, 203, 207, 238, 326, 327, 347, 426, 484, 491, 614, 876], "lh_data": [11, 114, 174, 234, 273, 276], "hemispher": [11, 24, 27, 40, 43, 47, 52, 120, 124, 125, 128, 140, 150, 154, 157, 174, 177, 182, 232, 233, 234, 258, 268, 269, 270, 273, 274, 275, 276, 277, 278, 358, 385, 466, 509, 601, 619, 621, 624, 644, 659, 667, 692, 742, 743, 801, 806, 826, 861, 876], "prepar": [11, 12, 19, 21, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 54, 55, 57, 58, 59, 60, 77, 85, 88, 92, 102, 105, 106, 107, 108, 117, 122, 133, 149, 165, 176, 177, 178, 180, 181, 190, 194, 198, 205, 220, 221, 226, 232, 305, 316, 327, 367, 368, 523, 524, 525, 526, 527, 529, 530, 536, 539, 540, 585, 835, 861, 876], "seri": [11, 16, 27, 28, 29, 31, 36, 41, 56, 70, 79, 88, 91, 92, 93, 109, 136, 160, 167, 174, 179, 180, 187, 203, 204, 216, 221, 234, 239, 242, 260, 261, 262, 263, 264, 265, 268, 269, 270, 273, 275, 276, 277, 278, 295, 296, 352, 411, 418, 421, 442, 476, 477, 522, 523, 526, 537, 556, 561, 565, 614, 618, 682, 683, 684, 696, 697, 699, 701, 702, 703, 712, 721, 722, 756, 767, 807, 831, 833, 835, 858, 876], "time_decod": [11, 194], "31": [11, 13, 19, 28, 32, 34, 35, 43, 45, 47, 74, 79, 80, 81, 101, 106, 107, 110, 112, 141, 147, 150, 158, 159, 163, 168, 179, 182, 184, 190, 193, 194, 203, 207, 209, 224, 225, 226, 228, 229, 232, 233, 234, 237, 238, 241, 242, 262, 263, 275, 333, 534, 653, 658, 858, 876], "03": [11, 19, 24, 33, 34, 35, 49, 56, 59, 66, 70, 72, 74, 75, 81, 82, 83, 88, 91, 92, 101, 104, 106, 107, 118, 119, 125, 140, 145, 149, 150, 157, 161, 165, 166, 167, 168, 169, 173, 181, 182, 183, 193, 194, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 213, 214, 215, 216, 219, 220, 221, 223, 224, 225, 226, 228, 229, 233, 234, 242, 256, 260, 352, 556, 683, 684, 686, 687, 771], "87it": [11, 13, 19, 33, 94, 101, 110, 179, 193, 194, 207, 224, 225, 226, 229], "95it": [11, 13, 19, 33, 34, 106, 107, 110, 194, 207, 224, 225, 229, 232, 234], "90it": [11, 13, 19, 101, 102, 107, 110, 193, 194, 207, 224, 225, 229, 232, 233], "20it": [11, 19, 94, 101, 107, 110, 193, 194, 224, 229, 232], "62it": [11, 13, 19, 34, 101, 102, 106, 107, 110, 193, 194, 207, 224, 225, 229, 232], "11it": [11, 13, 19, 33, 101, 110, 193, 194, 207, 225, 229, 232], "46it": [11, 13, 19, 33, 34, 101, 106, 110, 193, 194, 207, 224, 225, 228, 229, 234], "59it": [11, 19, 34, 101, 102, 107, 110, 179, 193, 207, 224, 225, 228, 229, 233, 234], "29": [11, 13, 19, 21, 24, 28, 34, 35, 41, 42, 43, 45, 46, 47, 50, 56, 79, 101, 106, 107, 110, 111, 112, 121, 136, 142, 155, 156, 157, 168, 170, 182, 183, 184, 193, 196, 201, 205, 207, 208, 209, 212, 224, 225, 226, 228, 229, 232, 233, 234, 238, 242, 275, 876], "57it": [11, 13, 19, 33, 34, 101, 110, 193, 194, 207, 228, 229, 234], "32": [11, 12, 13, 19, 21, 28, 34, 35, 41, 42, 45, 47, 49, 68, 70, 71, 72, 73, 79, 80, 92, 97, 101, 102, 105, 106, 107, 108, 110, 112, 118, 127, 128, 134, 139, 140, 141, 145, 148, 150, 151, 157, 158, 161, 163, 165, 167, 168, 169, 170, 171, 175, 176, 179, 181, 182, 183, 184, 193, 194, 198, 199, 201, 202, 203, 205, 206, 207, 212, 214, 219, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 234, 239, 242, 255, 262, 263, 387, 407, 449, 476, 477, 497, 523, 571, 841, 852, 858, 861, 862, 876], "83it": [11, 19, 101, 106, 107, 110, 193, 207, 224, 229, 233], "25it": [11, 19, 34, 101, 179, 193, 194, 207, 224, 228, 229], "39": [11, 12, 13, 19, 21, 28, 35, 45, 47, 79, 101, 106, 107, 110, 112, 139, 156, 157, 158, 168, 175, 179, 183, 184, 186, 190, 193, 194, 199, 207, 208, 224, 225, 226, 228, 229, 232, 233, 234, 242, 275, 400, 851], "80it": [11, 19, 34, 101, 106, 107, 110, 193, 194, 207, 224, 225, 228, 229], "56it": [11, 13, 19, 101, 193, 194, 207, 224, 225, 228, 229, 233, 234], "74it": [11, 13, 19, 34, 101, 106, 107, 110, 194, 224, 225, 228, 229, 233], "52": [11, 13, 19, 28, 35, 45, 47, 79, 80, 97, 101, 106, 107, 110, 112, 133, 144, 150, 167, 168, 190, 193, 194, 200, 203, 207, 212, 224, 225, 228, 229, 232, 234, 242, 400, 682, 725, 728, 876], "43it": [11, 19, 94, 101, 106, 107, 110, 194, 207, 224, 227, 228, 229, 233, 234], "18it": [11, 13, 19, 33, 34, 101, 106, 110, 193, 194, 207, 224, 226, 228, 229], "61": [11, 13, 19, 30, 35, 45, 47, 51, 57, 70, 79, 81, 88, 91, 101, 106, 107, 110, 112, 114, 121, 125, 135, 145, 148, 165, 166, 167, 168, 169, 171, 175, 177, 178, 183, 184, 193, 194, 197, 198, 201, 204, 205, 206, 207, 208, 213, 214, 215, 216, 224, 225, 226, 228, 229, 232, 233, 234, 242, 352], "76it": [11, 13, 19, 106, 107, 193, 194, 207, 224, 228, 229], "65": [11, 12, 13, 19, 21, 34, 35, 45, 47, 56, 79, 82, 101, 106, 107, 110, 112, 133, 135, 142, 144, 155, 168, 169, 176, 177, 183, 193, 194, 199, 206, 207, 224, 225, 226, 228, 229, 234, 242, 592, 876], "34it": [11, 19, 33, 101, 107, 193, 194, 224, 225, 229, 233], "68": [11, 13, 19, 34, 35, 41, 45, 47, 79, 80, 88, 94, 99, 101, 106, 107, 110, 112, 124, 139, 142, 144, 157, 168, 170, 171, 175, 180, 183, 190, 193, 194, 207, 224, 225, 227, 228, 229, 232, 242, 264, 265, 295, 296, 333, 352, 356, 357, 367, 368, 369, 400, 408, 415, 451, 452, 471, 473, 474, 534, 695, 783], "21": [11, 13, 19, 20, 28, 34, 35, 41, 44, 45, 46, 47, 64, 69, 79, 82, 83, 101, 102, 106, 107, 112, 125, 128, 144, 149, 154, 159, 163, 167, 168, 170, 171, 182, 187, 190, 193, 194, 207, 213, 224, 225, 226, 228, 229, 232, 234, 239, 242, 259, 260, 262, 263, 264, 265, 269, 270, 271, 272, 273, 275, 276, 277, 278, 283, 295, 296, 356, 358, 401, 408, 415, 442, 447, 461, 476, 477, 511, 516, 536, 555, 556, 564, 566, 567, 570, 572, 573, 575, 584, 619, 627, 641, 645, 688, 695, 696, 698, 700, 760, 761, 771, 775, 776, 777, 778, 782, 783, 784, 786, 788, 795, 796, 798, 800, 801, 803, 805, 809, 826, 829, 833, 834, 852, 858], "82it": [11, 13, 19, 34, 101, 106, 107, 194, 207, 224, 228, 229], "71": [11, 12, 13, 19, 21, 35, 45, 79, 101, 106, 107, 110, 112, 128, 168, 175, 180, 181, 183, 193, 194, 207, 224, 225, 226, 228, 229, 232, 233, 234], "37it": [11, 19, 34, 101, 106, 110, 193, 194, 207, 224, 228, 229], "74": [11, 13, 15, 19, 26, 35, 41, 45, 50, 78, 79, 80, 99, 100, 101, 106, 107, 110, 112, 133, 157, 167, 168, 169, 175, 180, 183, 190, 193, 194, 200, 205, 207, 221, 224, 225, 228, 229, 234, 677], "13it": [11, 19, 34, 101, 107, 110, 193, 194, 224, 226, 228, 229, 233], "65it": [11, 13, 19, 33, 34, 101, 193, 194, 207, 224, 226, 228, 229], "81": [11, 15, 16, 19, 34, 35, 39, 56, 79, 101, 105, 106, 107, 112, 141, 155, 168, 179, 183, 189, 192, 193, 194, 206, 207, 209, 224, 225, 228, 229, 232, 237, 242, 653, 658, 710, 712, 722, 726, 876], "16it": [11, 19, 33, 101, 106, 110, 193, 194, 207, 225, 228, 229], "89it": [11, 19, 34, 101, 106, 107, 110, 193, 194, 207, 224, 225, 228, 229, 233], "87": [11, 18, 19, 33, 35, 47, 78, 91, 92, 106, 107, 110, 112, 121, 122, 168, 194, 205, 207, 208, 224, 225, 228, 229, 232, 242, 412, 414, 426, 858], "27": [11, 12, 13, 19, 21, 24, 28, 33, 34, 35, 39, 41, 43, 45, 47, 50, 75, 79, 80, 83, 101, 106, 107, 110, 112, 144, 149, 157, 159, 168, 170, 177, 179, 182, 184, 190, 207, 209, 212, 224, 225, 226, 228, 229, 232, 233, 234, 242, 567, 833], "64it": [11, 19, 34, 101, 106, 110, 193, 194, 207, 224, 225, 226, 228, 229, 233, 234], "12it": [11, 19, 33, 34, 101, 106, 107, 193, 194, 207, 221, 224, 226, 228, 229, 233], "94": [11, 19, 35, 47, 79, 101, 105, 106, 107, 110, 112, 136, 168, 169, 179, 182, 190, 193, 194, 205, 207, 210, 224, 225, 226, 227, 228, 229, 232, 233, 234, 242, 858], "86it": [11, 13, 19, 101, 193, 207, 224, 225, 229, 233], "63it": [11, 13, 19, 34, 106, 107, 110, 179, 194, 207, 224, 226, 228, 229, 234], "19it": [11, 19, 33, 34, 101, 106, 107, 110, 193, 207, 224, 225, 228, 229, 233], "88it": [11, 13, 19, 193, 224, 225, 228, 229, 233], "81it": [11, 13, 19, 34, 101, 106, 107, 110, 193, 194, 207, 224, 227, 228, 229, 232, 234], "26it": [11, 13, 19, 33, 34, 101, 110, 194, 207, 224, 225, 228, 229, 232], "10it": [11, 19, 34, 106, 110, 193, 194, 207, 224, 228, 229], "08it": [11, 13, 19, 34, 101, 106, 110, 193, 194, 207, 224, 228, 229], "23it": [11, 13, 19, 34, 101, 110, 194, 207, 224, 225, 226, 228, 229, 233, 234], "44it": [11, 13, 19, 33, 34, 101, 106, 110, 194, 207, 224, 225, 226, 229, 232, 234], "06it": [11, 13, 19, 34, 106, 107, 110, 193, 194, 207, 224, 225, 228, 229], "99it": [11, 19, 101, 106, 110, 193, 194, 207, 224, 225, 228, 229], "53it": [11, 13, 19, 34, 101, 110, 179, 193, 207, 224, 225, 228, 229, 232, 234], "15it": [11, 19, 101, 110, 194, 207, 224, 228, 229, 234], "67it": [11, 19, 34, 101, 107, 110, 179, 193, 194, 207, 224, 225, 226, 228, 229, 233], "66it": [11, 19, 33, 34, 106, 107, 110, 179, 194, 207, 224, 228, 229, 234], "69it": [11, 13, 19, 110, 179, 193, 194, 207, 224, 225, 228, 229, 234], "05it": [11, 13, 19, 106, 110, 193, 194, 207, 224, 225, 229, 232], "39it": [11, 13, 19, 34, 101, 106, 121, 179, 193, 194, 207, 228, 229, 232], "79it": [11, 13, 19, 33, 34, 101, 107, 110, 193, 194, 225, 226, 228, 229], "52it": [11, 19, 34, 107, 110, 179, 193, 194, 224, 225, 226, 228, 229, 233, 234], "02it": [11, 13, 19, 33, 34, 101, 107, 110, 121, 193, 194, 207, 225, 226, 227, 229], "84it": [11, 13, 19, 33, 94, 101, 106, 110, 193, 194, 207, 224, 225, 226, 228, 229, 233], "77it": [11, 13, 19, 33, 101, 106, 193, 194, 224, 229, 232], "03it": [11, 13, 19, 101, 193, 194, 207, 224, 225, 226, 228, 229, 232], "68it": [11, 13, 19, 101, 106, 110, 193, 194, 207, 225, 228, 229, 234], "38it": [11, 13, 19, 101, 107, 110, 194, 207, 224, 225, 228, 229], "41it": [11, 19, 34, 101, 106, 110, 194, 207, 224, 228, 229, 234], "33it": [11, 13, 19, 34, 101, 106, 110, 193, 194, 207, 224, 228, 229, 233], "85it": [11, 13, 19, 34, 101, 106, 107, 110, 194, 207, 224, 225, 226, 228, 229], "27it": [11, 19, 34, 101, 102, 107, 193, 194, 207, 224, 225, 228, 229, 233], "31it": [11, 13, 19, 34, 101, 106, 107, 110, 193, 194, 207, 224, 226, 228, 229], "75it": [11, 13, 19, 106, 107, 110, 193, 194, 207, 224, 225, 229], "92it": [11, 19, 33, 34, 110, 194, 207, 224, 225, 226, 228, 229], "71it": [11, 19, 34, 101, 106, 107, 110, 193, 194, 207, 224, 228, 229, 232], "24it": [11, 19, 94, 101, 107, 110, 193, 194, 207, 224, 226, 228, 229], "72it": [11, 19, 34, 101, 106, 110, 179, 193, 194, 207, 224, 225, 228, 229], "55it": [11, 13, 19, 33, 34, 101, 107, 110, 193, 194, 228, 229, 234], "54it": [11, 19, 34, 94, 101, 106, 107, 193, 194, 224, 225, 229, 233, 234], "30it": [11, 19, 101, 106, 110, 194, 207, 224, 226, 228, 229, 234], "91it": [11, 13, 19, 34, 101, 107, 110, 193, 194, 224, 228, 229], "42it": [11, 13, 19, 101, 107, 110, 193, 194, 207, 224, 225, 226, 228, 229, 234], "48it": [11, 13, 19, 34, 101, 102, 110, 193, 194, 207, 224, 226, 228, 229, 233, 234], "07it": [11, 13, 19, 34, 101, 106, 193, 207, 221, 224, 225, 226, 228, 229, 232, 233], "14it": [11, 19, 33, 34, 106, 107, 110, 194, 207, 224, 226, 227, 228, 229, 232], "94it": [11, 19, 44, 101, 106, 110, 193, 194, 207, 224, 225, 226, 228, 229, 233], "60it": [11, 19, 33, 34, 101, 106, 107, 110, 193, 194, 224, 225, 228, 229], "04it": [11, 13, 19, 33, 34, 94, 101, 102, 106, 107, 194, 207, 224, 225, 229], "00it": [11, 19, 101, 107, 110, 179, 193, 194, 207, 224, 225, 229, 234], "22it": [11, 19, 34, 101, 194, 207, 224, 225, 228, 229, 232], "97it": [11, 19, 33, 34, 94, 101, 106, 107, 110, 193, 194, 207, 224, 225, 228, 229], "96it": [11, 13, 19, 33, 94, 101, 110, 193, 194, 207, 224, 225, 226, 228, 229], "45it": [11, 13, 19, 34, 101, 110, 179, 193, 194, 207, 224, 226, 229], "21it": [11, 13, 19, 33, 34, 94, 101, 121, 193, 207, 224, 225, 226, 228, 229, 233], "investig": [11, 21, 143, 150, 190, 200, 234, 264, 265, 556, 783, 852], "patterns_": [11, 15, 18, 19, 21, 194, 408, 412, 414, 415, 416, 426, 557, 876], "inverse_transform": [11, 18, 194, 416, 417, 422, 423, 426, 557], "lookup": [11, 41, 133, 255, 262, 263, 264, 265, 267, 275, 460, 461, 476, 477, 645, 743, 831], "vertic": [11, 22, 24, 28, 38, 39, 41, 43, 48, 52, 53, 67, 114, 125, 132, 133, 135, 139, 141, 154, 157, 158, 159, 160, 174, 177, 180, 190, 198, 201, 206, 207, 213, 216, 221, 224, 225, 232, 233, 234, 258, 262, 263, 264, 265, 268, 269, 270, 273, 274, 275, 276, 277, 278, 282, 283, 295, 296, 356, 358, 442, 455, 464, 466, 467, 476, 477, 509, 511, 532, 533, 618, 646, 659, 661, 662, 664, 665, 666, 667, 668, 670, 671, 672, 683, 684, 686, 687, 688, 691, 692, 742, 743, 757, 762, 767, 773, 781, 796, 801, 806, 826, 831, 858, 861, 876], "lh_vertno": [11, 114, 174, 273, 276, 659], "empti": [11, 15, 27, 120, 128, 139, 141, 149, 160, 161, 165, 168, 170, 171, 183, 184, 190, 199, 203, 204, 206, 208, 213, 219, 234, 256, 259, 262, 263, 264, 265, 267, 271, 273, 286, 300, 308, 317, 324, 346, 347, 352, 357, 375, 376, 377, 380, 381, 383, 388, 391, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 435, 456, 476, 477, 484, 488, 491, 492, 498, 502, 522, 547, 548, 549, 553, 554, 556, 557, 559, 566, 567, 575, 584, 585, 608, 616, 627, 637, 641, 677, 683, 692, 696, 698, 699, 700, 713, 731, 743, 752, 759, 767, 768, 773, 774, 780, 782, 790, 796, 797, 831, 835, 851, 858, 861, 876], "stc_feat": 11, "sourceestim": [11, 22, 26, 31, 35, 37, 40, 46, 59, 60, 92, 154, 157, 164, 165, 180, 185, 186, 220, 221, 232, 233, 234, 261, 264, 265, 268, 269, 270, 272, 274, 275, 276, 277, 278, 282, 283, 287, 288, 289, 290, 291, 292, 293, 294, 358, 442, 455, 471, 472, 473, 474, 511, 523, 524, 525, 526, 527, 529, 532, 533, 538, 539, 618, 624, 637, 646, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 681, 688, 691, 692, 743, 757, 801, 802, 831, 853, 855, 866, 876], "ab": [11, 19, 35, 38, 40, 47, 59, 60, 67, 95, 117, 118, 125, 134, 150, 178, 182, 190, 193, 200, 224, 226, 227, 232, 233, 234, 239, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 558, 712, 722, 778, 858, 876], "tstep": [11, 22, 31, 46, 59, 88, 92, 93, 180, 221, 232, 233, 234, 269, 270, 273, 276, 277, 278, 357, 474, 511, 556, 646, 663, 682, 688, 711, 719, 876], "transpar": [11, 58, 99, 133, 171, 180, 198, 239, 254, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 696, 743, 762, 779, 796, 801, 806, 807, 808, 809, 857, 876], "29it": [11, 13, 19, 33, 34, 101, 110, 193, 194, 207, 224, 229, 233], "61it": [11, 13, 19, 34, 44, 101, 107, 110, 207, 224, 225, 226, 229, 234], "01it": [11, 19, 34, 101, 102, 110, 194, 225, 228, 229], "78it": [11, 13, 19, 33, 34, 106, 110, 193, 194, 207, 224, 225, 229], "70it": [11, 19, 33, 34, 101, 106, 110, 193, 194, 207, 224, 225, 229], "73it": [11, 13, 19, 34, 107, 110, 193, 194, 207, 225, 226, 228, 229], "50724321": 11, "37721471": 11, "59502306": 11, "616": [11, 20, 229], "420": [11, 20, 35, 79, 156, 163, 224, 229], "decoding_spatio_temporal_sourc": [11, 20], "comodul": [12, 415], "allow": [12, 19, 40, 43, 44, 46, 60, 92, 102, 110, 113, 114, 118, 133, 136, 139, 140, 141, 142, 143, 145, 149, 150, 156, 157, 159, 165, 168, 169, 171, 177, 188, 194, 200, 205, 213, 214, 216, 224, 225, 226, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 269, 270, 273, 275, 276, 277, 278, 289, 290, 293, 306, 310, 333, 338, 345, 352, 370, 408, 414, 415, 416, 441, 449, 466, 475, 476, 477, 479, 491, 492, 496, 525, 527, 530, 532, 533, 534, 538, 556, 557, 561, 575, 582, 602, 608, 614, 632, 645, 661, 663, 682, 696, 698, 699, 700, 723, 724, 726, 727, 737, 741, 764, 773, 775, 786, 788, 796, 831, 833, 835, 853, 857, 858, 861, 864, 876], "composit": [12, 187, 194, 269, 270, 273, 276, 277, 278, 743, 801, 806, 858], "orthogon": [12, 112, 155, 159, 177, 194, 204, 205, 208, 295, 296, 556, 724, 727, 858, 861, 864, 876], "spatial": [12, 14, 15, 17, 18, 20, 27, 31, 32, 33, 34, 36, 47, 56, 69, 70, 78, 81, 82, 88, 111, 117, 119, 150, 151, 154, 155, 161, 174, 197, 198, 200, 204, 205, 210, 216, 219, 221, 224, 226, 229, 232, 233, 234, 238, 239, 242, 259, 262, 263, 264, 265, 266, 267, 268, 271, 273, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 310, 326, 352, 358, 361, 362, 371, 408, 409, 415, 416, 422, 424, 426, 437, 476, 477, 488, 489, 491, 517, 522, 534, 535, 538, 553, 554, 555, 556, 557, 570, 583, 584, 605, 611, 614, 616, 650, 653, 658, 666, 667, 668, 669, 673, 683, 684, 686, 687, 696, 698, 700, 715, 733, 743, 760, 775, 777, 782, 783, 786, 795, 798, 803, 805, 831, 851, 852, 855, 858, 876], "maxim": [12, 60, 86, 141, 159, 175, 176, 179, 182, 194, 200, 202, 242, 270, 276, 277, 278, 295, 296, 416, 556, 582, 666, 667, 668, 670, 671, 682, 807, 858, 876], "csp": [12, 17, 20, 27, 194, 262, 267, 310, 326, 361, 371, 412, 415, 437, 491, 553, 557, 696, 852, 866, 876], "variabl": [12, 16, 31, 43, 99, 101, 110, 115, 140, 142, 149, 154, 167, 169, 194, 197, 200, 202, 204, 213, 215, 228, 229, 234, 242, 255, 260, 262, 263, 268, 269, 270, 272, 273, 276, 277, 278, 301, 305, 306, 307, 310, 358, 363, 364, 365, 370, 373, 375, 376, 377, 378, 380, 381, 384, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 415, 425, 427, 437, 449, 450, 456, 458, 460, 464, 466, 467, 468, 469, 470, 476, 477, 495, 509, 513, 515, 542, 555, 556, 575, 581, 599, 601, 609, 613, 619, 628, 633, 634, 635, 636, 643, 644, 645, 659, 662, 673, 683, 684, 685, 686, 687, 691, 692, 735, 743, 759, 761, 771, 773, 790, 796, 801, 806, 807, 809, 816, 826, 831, 833, 840, 841, 851, 855, 858, 862, 876], "fluctuat": [12, 140, 141, 150, 197, 199, 205, 206, 210, 221, 264, 265, 783, 831], "electromyogram": [12, 876], "cortico": 12, "muscular": [12, 197, 203], "coher": [12, 32, 33, 101, 105, 179, 221, 242, 287, 288, 289, 290, 295, 696, 697, 723, 724, 725, 726, 727, 728, 769, 831, 842, 852], "fieldtrip": [12, 155, 190, 200, 206, 224, 226, 232, 320, 327, 495, 609, 613, 723, 724, 726, 727, 858, 864, 876], "fieldtrip_cmc": [12, 21], "ridg": [12, 19, 193, 414, 420], "kfold": [12, 16, 19, 352, 357, 425, 876], "cross_val_predict": [12, 876], "subjectcmc": [12, 21], "emg": [12, 81, 136, 168, 188, 194, 213, 219, 242, 262, 263, 264, 265, 272, 309, 371, 415, 441, 476, 477, 488, 491, 502, 553, 556, 696, 698, 699, 700, 773, 796, 852, 858, 861, 876], "pick_channel": [12, 45, 69, 71, 84, 98, 113, 125, 139, 140, 148, 150, 168, 169, 213, 221, 226, 227, 228, 259, 262, 263, 264, 265, 266, 476, 477, 550, 696, 697, 698, 699, 700, 866, 876], "emglft": 12, "ref_meg": [12, 21, 73, 117, 121, 168, 210, 262, 263, 264, 265, 272, 309, 371, 476, 477, 553, 554, 696, 698, 699, 700, 773, 796, 876], "make_fixed_length_ev": [12, 21, 165, 167, 214, 219, 357, 529, 831, 866, 876], "durat": [12, 21, 49, 65, 69, 70, 72, 73, 74, 75, 79, 80, 81, 88, 91, 92, 121, 125, 136, 139, 140, 143, 145, 148, 149, 150, 165, 166, 167, 190, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 221, 232, 233, 234, 254, 256, 262, 263, 264, 265, 272, 273, 281, 339, 341, 355, 357, 408, 410, 414, 415, 419, 420, 437, 444, 446, 447, 449, 476, 477, 493, 516, 517, 556, 558, 559, 561, 575, 584, 592, 646, 648, 688, 710, 773, 782, 790, 796, 831, 835, 876], "meg_epoch": [12, 18], "detrend": [12, 108, 134, 209, 257, 262, 264, 265, 516, 607, 876], "emg_epoch": 12, "var": [12, 47, 69, 170, 205, 373, 456, 689], "oa": [12, 21, 82, 182, 352], "validaton": 12, "first_samp": [12, 69, 74, 136, 165, 167, 183, 213, 214, 215, 256, 257, 262, 263, 267, 272, 281, 360, 436, 437, 449, 475, 476, 477, 496, 517, 551, 556, 585, 610, 611, 646, 661, 776, 790, 796, 821, 831, 861, 876], "set_xlabel": [12, 13, 19, 21, 22, 45, 69, 94, 102, 111, 131, 143, 145, 171, 182, 194, 204, 227, 228, 229], "set_titl": [12, 13, 22, 45, 69, 70, 94, 97, 110, 112, 118, 125, 133, 135, 143, 193, 194, 208, 209, 227, 228, 229, 238, 239], "78": [12, 13, 19, 21, 34, 35, 47, 51, 78, 79, 101, 110, 112, 121, 142, 156, 157, 165, 168, 175, 178, 184, 194, 207, 213, 224, 225, 226, 228, 229, 233, 234, 242, 298, 400, 858], "62": [12, 13, 16, 19, 21, 34, 35, 45, 47, 69, 79, 101, 106, 110, 112, 135, 168, 179, 193, 194, 207, 224, 225, 228, 229, 232, 242], "258": [12, 21, 110, 121, 157, 165, 168, 194, 207, 224, 229], "114": [12, 21, 35, 79, 150, 168, 180, 229, 876], "12000": [12, 21], "911610": [12, 21], "191": [12, 21, 168, 224, 228, 229], "180000": 12, "150": [12, 35, 42, 45, 59, 72, 73, 75, 79, 80, 92, 93, 118, 121, 140, 141, 145, 150, 157, 159, 165, 168, 179, 190, 199, 203, 205, 207, 224, 229, 254, 275, 714, 876], "793": [12, 143, 194, 219, 223], "661": [12, 19, 194, 200, 225, 229], "1057": [12, 207], "881": [12, 19, 194, 229, 275], "183": [12, 168, 194, 207, 224, 228], "1801": 12, "contribut": [12, 19, 45, 67, 148, 150, 179, 226, 229, 253, 262, 263, 437, 571, 652, 833, 839, 852, 854, 857, 876], "sven": [12, 18, 19, 194, 242, 412, 414, 415, 416, 426], "d\u00e4hne": [12, 18, 19, 194, 242, 412, 414, 415, 426], "frank": [12, 18, 19, 74, 194, 203, 242, 412, 414, 415, 426, 556, 591], "meineck": [12, 18, 19, 194, 242, 412, 414, 415, 426], "stefan": [12, 18, 19, 33, 111, 125, 194, 203, 226, 229, 232, 238, 242, 412, 414, 415, 416, 426, 570, 863, 876], "hauf": [12, 18, 19, 194, 242, 412, 414, 415, 416, 426], "johann": [12, 194, 242, 415, 876], "h\u00f6hne": [12, 194, 242, 415], "michael": [12, 19, 99, 193, 194, 202, 203, 242, 352, 408, 414, 415, 555, 556, 588, 599, 710, 712, 722, 726, 852, 858, 876], "tangermann": [12, 194, 203, 242, 415], "klau": [12, 194, 203, 242, 408, 415, 556], "robert": [12, 74, 179, 193, 194, 203, 210, 229, 242, 408, 414, 415, 683, 684, 686, 687, 852, 863, 876], "m\u00fcller": [12, 73, 194, 203, 242, 408, 415, 556], "vadim": [12, 21, 194, 242, 415, 416], "nikulin": [12, 21, 194, 242, 415, 416], "novel": [12, 21, 194, 242, 330, 415, 416, 864], "framework": [12, 35, 194, 242, 415, 471, 847, 858], "amplitud": [12, 19, 35, 37, 39, 40, 45, 47, 53, 59, 79, 80, 91, 92, 93, 114, 121, 125, 130, 134, 139, 140, 143, 144, 161, 165, 171, 174, 179, 182, 183, 189, 193, 194, 197, 198, 200, 203, 204, 205, 207, 209, 210, 221, 242, 254, 257, 260, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 288, 296, 339, 340, 341, 345, 357, 415, 451, 473, 474, 476, 477, 518, 527, 538, 556, 558, 572, 573, 606, 648, 649, 653, 657, 658, 682, 683, 698, 699, 700, 712, 722, 743, 770, 771, 784, 797, 831, 842, 855, 858, 861, 876], "neuron": [12, 21, 136, 143, 193, 194, 197, 242, 295, 401, 414, 415, 416, 523, 831, 852, 858], "oscil": [12, 21, 67, 92, 111, 112, 194, 197, 201, 221, 242, 415, 416, 649, 710, 712, 722, 726], "behavior": [12, 143, 168, 187, 194, 197, 199, 200, 205, 242, 255, 262, 263, 272, 415, 449, 517, 521, 523, 584, 611, 645, 813, 835, 854, 855, 857, 864], "111": [12, 32, 35, 46, 111, 125, 144, 168, 194, 207, 224, 229, 242, 415], "122": [12, 16, 31, 56, 159, 168, 169, 175, 194, 203, 224, 229, 242, 333, 409, 415, 424, 858, 876], "2013": [12, 16, 18, 19, 43, 59, 79, 80, 127, 143, 168, 194, 242, 268, 273, 274, 280, 358, 409, 412, 414, 415, 424, 426, 432, 474, 561, 588, 653, 658, 850], "07": [12, 19, 20, 35, 46, 56, 59, 66, 79, 82, 83, 101, 104, 106, 132, 159, 163, 169, 175, 178, 182, 183, 184, 186, 190, 193, 194, 207, 226, 229, 234, 242, 319, 415, 656, 858], "079": [12, 135, 194, 242, 415], "556": [12, 20, 229], "291": [12, 107, 110, 168, 207, 229], "decoding_spoc_cmc": [12, 20], "illustr": [13, 27, 28, 67, 68, 88, 92, 93, 123, 132, 137, 141, 145, 149, 150, 164, 165, 170, 187, 197, 198, 199, 201, 203, 205, 209, 213, 224, 228, 234, 238, 476, 477, 831, 851, 858], "discriminatori": 13, "given": [13, 16, 19, 26, 31, 69, 78, 92, 93, 110, 118, 119, 136, 142, 143, 148, 149, 150, 157, 159, 161, 164, 165, 168, 169, 170, 174, 177, 179, 185, 186, 187, 193, 194, 199, 200, 203, 204, 205, 208, 213, 214, 216, 224, 226, 228, 229, 237, 239, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 276, 277, 278, 286, 295, 296, 300, 308, 310, 314, 315, 316, 325, 327, 328, 352, 357, 363, 364, 365, 366, 367, 375, 376, 377, 378, 380, 381, 383, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 410, 412, 415, 416, 418, 423, 424, 428, 429, 433, 443, 444, 447, 449, 451, 453, 464, 471, 473, 474, 475, 476, 477, 516, 519, 520, 522, 523, 524, 525, 526, 527, 529, 530, 531, 534, 539, 540, 555, 556, 557, 558, 559, 561, 567, 570, 571, 572, 573, 575, 578, 581, 584, 590, 592, 598, 599, 604, 607, 641, 645, 650, 660, 663, 664, 676, 678, 682, 683, 684, 686, 687, 689, 691, 694, 696, 697, 698, 699, 700, 704, 705, 706, 707, 708, 709, 712, 714, 716, 720, 722, 727, 731, 732, 735, 743, 747, 749, 759, 760, 761, 767, 771, 773, 774, 775, 777, 778, 779, 780, 782, 787, 790, 794, 796, 797, 798, 799, 801, 803, 805, 806, 810, 811, 831, 833, 835, 852, 855, 857, 858, 861, 876], "subsequ": [13, 68, 82, 110, 111, 139, 141, 144, 156, 160, 165, 194, 198, 201, 203, 213, 232, 242, 262, 263, 476, 477, 556, 559, 566, 575, 688, 831, 838, 851, 855, 858, 876], "accur": [13, 26, 41, 44, 45, 50, 107, 133, 134, 157, 158, 175, 181, 187, 194, 202, 203, 205, 208, 255, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 451, 476, 477, 515, 556, 733, 782, 809, 816, 851, 876], "generalizingestim": [13, 194, 425, 866, 876], "events_fnam": 13, "auditori": [13, 15, 30, 31, 37, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 57, 58, 60, 61, 65, 70, 77, 78, 84, 85, 92, 110, 114, 117, 118, 122, 125, 130, 139, 140, 141, 142, 144, 145, 148, 149, 150, 151, 164, 165, 167, 171, 174, 175, 177, 178, 179, 180, 181, 191, 192, 193, 194, 200, 205, 210, 214, 220, 228, 232, 234, 237, 239, 242, 255, 256, 257, 259, 262, 263, 264, 265, 267, 268, 273, 307, 351, 353, 357, 359, 361, 414, 435, 449, 476, 489, 513, 514, 519, 521, 522, 523, 534, 569, 588, 608, 610, 616, 622, 629, 644, 699, 743, 876], "050": [13, 79, 139, 141, 148, 168, 179, 198, 206, 207, 221, 242], "faster": [13, 18, 44, 118, 139, 182, 194, 203, 239, 242, 254, 262, 263, 264, 265, 268, 269, 270, 273, 276, 277, 278, 358, 361, 448, 464, 475, 476, 477, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 516, 556, 558, 683, 684, 686, 687, 833, 838, 839, 841, 864, 876], "constructor": [13, 86, 139, 141, 150, 164, 165, 171, 199, 201, 204, 215, 219, 222, 257, 269, 270, 273, 276, 277, 278, 475, 557, 572, 801, 806, 835, 855, 876], "497": [13, 14, 15, 75, 86, 94, 97, 119, 128, 131, 132, 177, 203, 229, 242, 275], "310": [13, 14, 15, 35, 75, 79, 86, 97, 107, 119, 131, 168, 203, 207, 224, 229], "lbfg": [13, 18, 194], "time_gen": [13, 194], "experiment": [13, 16, 45, 69, 70, 72, 75, 79, 80, 81, 88, 91, 125, 139, 140, 145, 148, 149, 150, 152, 164, 166, 167, 168, 179, 194, 197, 198, 199, 201, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 219, 221, 224, 242, 262, 263, 264, 265, 267, 409, 424, 476, 477, 478, 523, 575, 584, 585, 648, 649, 656, 696, 699, 831, 851, 858, 862, 876], "59": [13, 15, 19, 28, 30, 31, 34, 35, 38, 39, 40, 41, 44, 45, 48, 49, 54, 55, 58, 59, 60, 68, 70, 75, 77, 79, 81, 88, 90, 91, 92, 94, 101, 106, 109, 110, 112, 114, 116, 119, 125, 129, 140, 141, 144, 149, 150, 151, 155, 157, 161, 168, 171, 175, 177, 181, 183, 197, 198, 203, 204, 205, 207, 220, 224, 225, 226, 228, 229, 233, 234, 237, 242, 275, 429, 567, 575, 584, 689, 690], "98it": [13, 19, 34, 101, 110, 193, 194, 207, 224, 225, 226, 229], "54": [13, 19, 28, 34, 35, 45, 47, 79, 101, 102, 106, 110, 112, 143, 150, 153, 156, 157, 168, 193, 194, 207, 208, 210, 224, 225, 228, 229, 242, 275, 876], "83": [13, 19, 35, 40, 47, 79, 101, 106, 110, 112, 168, 170, 193, 194, 198, 199, 202, 207, 208, 212, 224, 225, 228, 229, 242, 333, 555, 599, 683, 684, 686, 687], "72": [13, 15, 19, 28, 35, 45, 47, 70, 77, 78, 79, 94, 98, 101, 102, 110, 112, 115, 121, 129, 136, 139, 148, 155, 161, 168, 176, 179, 181, 182, 183, 184, 193, 194, 198, 207, 208, 224, 225, 226, 227, 228, 229, 232, 242, 556, 565, 858, 876], "34": [13, 19, 28, 34, 35, 41, 45, 47, 67, 70, 79, 101, 106, 110, 112, 114, 134, 138, 144, 168, 170, 180, 181, 184, 186, 194, 200, 207, 208, 212, 220, 224, 225, 226, 228, 229, 231, 233, 234, 242, 565, 677], "1225": 13, "438": [13, 48, 49, 54, 55, 56, 207, 224, 229], "498": [13, 88, 224, 229], "67": [13, 19, 33, 35, 47, 57, 79, 80, 101, 106, 110, 112, 114, 136, 148, 157, 168, 171, 175, 177, 180, 190, 194, 207, 224, 225, 226, 227, 228, 229, 233, 234, 242, 523, 876], "491": [13, 52, 56, 194, 224], "104": [13, 35, 61, 168, 194, 207, 224, 228, 229, 242, 656, 861, 876], "511": 13, "123": [13, 35, 121, 168, 180, 203, 205, 228, 229, 343], "141": [13, 168, 194, 207, 228, 275], "522": 13, "160": [13, 79, 80, 82, 121, 168, 169, 170, 187, 194, 229, 242, 336, 534, 568, 576, 579, 653, 658], "527": [13, 116, 128, 229], "178": [13, 124, 168, 182, 183, 184, 194, 199, 224, 229, 242, 385], "528": [13, 35, 142, 144, 147, 229], "196": [13, 80, 168, 224, 228, 229], "215": [13, 50, 168, 224, 228, 229, 242, 571], "532": [13, 68, 107, 194, 206], "234": [13, 35, 110, 168, 207, 228, 229], "535": 13, "271": [13, 165, 168, 197, 207, 212, 229], "537": [13, 207], "287": [13, 110, 168, 207, 229], "337": [13, 168, 190, 192, 193, 194, 207, 224], "356": [13, 79, 168, 224, 229], "525": [13, 229], "526": [13, 229], "32it": [13, 19, 33, 94, 101, 110, 179, 193, 194, 207, 224, 226, 228, 229, 234], "405": [13, 79, 207, 229, 241], "516": [13, 143, 157, 229], "421": [13, 70, 105, 108, 141, 161, 175, 181, 194, 202, 207, 220, 224, 227, 228, 229], "513": [13, 143], "435": [13, 136, 138, 229], "506": [13, 229], "37": [13, 19, 28, 34, 35, 45, 47, 79, 101, 106, 110, 112, 144, 156, 168, 170, 193, 194, 207, 224, 225, 226, 228, 229, 233, 234, 237, 333, 400, 449, 567, 695, 876], "449": [13, 229, 275], "38": [13, 19, 28, 34, 35, 45, 47, 70, 72, 79, 80, 91, 94, 100, 101, 106, 110, 112, 125, 139, 140, 141, 143, 157, 165, 168, 173, 179, 183, 190, 193, 194, 199, 205, 207, 224, 225, 226, 228, 229, 233, 234, 567], "465": [13, 35, 201, 224, 229], "36it": [13, 19, 101, 110, 193, 194, 207, 224, 225, 228, 229, 234], "480": [13, 73, 79, 170, 190, 224, 229], "494": [13, 114, 128, 207, 224], "495": [13, 22, 25, 35, 80, 219, 229], "58it": [13, 19, 33, 44, 101, 106, 107, 110, 179, 193, 194, 224, 225, 228, 229, 233, 234], "510": [13, 79, 143, 193, 207, 224, 239], "488": [13, 50, 224, 229], "485": [13, 224, 275], "542": [13, 193, 229], "486": [13, 35, 142, 229], "558": [13, 94, 100, 107, 168, 173, 177, 183, 186, 194, 207, 229], "572": [13, 229], "583": [13, 229, 242, 416], "471": [13, 200, 229, 242], "595": [13, 229, 242], "464": [13, 74, 143, 170, 207, 209, 275], "610": [13, 45, 79, 207], "463": [13, 99, 100, 197, 229, 275], "620": [13, 56, 79, 229], "453": [13, 207, 275], "631": [13, 14, 20, 229], "445": [13, 135], "645": [13, 182, 229], "443": [13, 142, 229, 242], "655": [13, 166, 173, 194, 206, 229], "40it": [13, 19, 34, 101, 107, 110, 193, 194, 207, 224, 226, 228, 229, 234], "427": [13, 224, 229], "56": [13, 15, 19, 32, 35, 45, 47, 74, 78, 79, 80, 86, 101, 102, 106, 110, 112, 122, 128, 136, 150, 159, 168, 170, 171, 175, 179, 190, 193, 194, 207, 209, 224, 225, 228, 229, 242, 256, 408, 557, 683, 684, 686, 687], "681": [13, 94, 193, 194, 229], "429": [13, 229], "691": [13, 107, 229], "422": [13, 59, 229, 242, 474], "28it": [13, 19, 34, 94, 101, 106, 107, 110, 193, 194, 207, 224, 225, 228, 229], "57": [13, 19, 34, 35, 40, 45, 79, 101, 104, 106, 107, 110, 112, 115, 124, 135, 136, 149, 150, 156, 168, 179, 182, 183, 190, 193, 205, 207, 215, 224, 225, 226, 228, 229, 234, 237, 242, 262, 263, 264, 265, 333, 473, 476, 477, 698, 700, 708, 714, 876], "702": [13, 229], "416": [13, 143, 170, 202, 207, 212, 224, 229], "715": [13, 229], "414": [13, 224, 229], "725": [13, 19, 69, 207, 214, 218, 229], "408": [13, 35, 79, 184, 207, 229], "736": [13, 194, 207, 229], "403": [13, 19, 50, 79, 224, 229], "747": [13, 229], "399": [13, 79, 224, 229], "392": [13, 56, 79, 194, 207, 224, 229], "769": [13, 136, 194, 242], "391": [13, 79, 194, 229], "781": [13, 177, 186, 194, 229], "389": [13, 79, 138, 194, 229], "792": [13, 143, 179, 186, 194], "384": [13, 21, 35, 68, 79, 83, 143, 170, 229], "803": [13, 104, 105, 194, 229], "381": [13, 79, 207, 229], "49it": [13, 19, 33, 101, 106, 110, 193, 194, 207, 224, 225, 226, 228, 229, 233], "815": [13, 41, 194, 207, 229, 237, 241], "380": [13, 79, 80, 83, 207, 224, 229], "824": [13, 229], "839": [13, 229, 858], "377": [13, 79, 150, 153, 229], "851": [13, 207, 229], "376": [13, 72, 79, 91, 92, 93, 148, 165, 166, 168, 178, 213, 229], "861": 13, "372": [13, 79, 168, 224, 229], "888": [13, 229], "373": [13, 79, 168, 224, 229], "898": [13, 150, 229], "369": [13, 79, 168, 207, 224, 242, 523, 656, 858], "912": 13, "926": 13, "941": [13, 20], "959": [13, 142, 194, 229], "385": [13, 79, 224, 229], "973": [13, 193, 229], "387": [13, 35, 71, 79, 83, 224, 229, 242, 295], "986": [13, 229], "386": [13, 79, 207, 229], "1002": [13, 58, 82, 177, 237, 242, 262, 263, 264, 265, 273, 476, 477, 592, 649, 685, 698, 700, 708, 714, 851], "1015": 13, "1033": [13, 168], "1053": [13, 193], "407": [13, 79, 94, 207, 224, 229], "88": [13, 19, 26, 35, 41, 45, 47, 50, 78, 79, 80, 101, 107, 110, 112, 118, 157, 168, 175, 179, 180, 181, 190, 194, 207, 209, 224, 225, 226, 228, 229, 233, 234, 242, 352], "1072": [13, 193, 207], "415": [13, 163, 207], "89": [13, 19, 34, 35, 47, 70, 77, 78, 79, 80, 101, 106, 110, 112, 135, 168, 183, 190, 193, 194, 198, 207, 224, 225, 228, 229, 242, 565, 858], "1088": [13, 40, 175, 193, 206, 208, 242, 262, 263, 264, 265, 414, 473, 476, 477, 584, 641, 858], "418": [13, 224, 229, 876], "1108": 13, "1124": [13, 194], "93": [13, 19, 33, 35, 40, 47, 78, 101, 106, 110, 112, 168, 193, 194, 207, 224, 225, 228, 229, 242, 588], "1144": [13, 207], "437": [13, 25, 56, 82, 182, 224], "1164": 13, "96": [13, 15, 18, 19, 44, 47, 80, 101, 105, 106, 110, 111, 112, 133, 161, 168, 170, 179, 183, 193, 194, 204, 205, 207, 224, 225, 226, 227, 228, 229, 233, 234, 242, 264, 265, 412, 414, 426, 783, 855], "1182": 13, "50it": [13, 19, 34, 106, 107, 193, 194, 207, 225, 226, 228, 229, 234], "1200": [13, 35, 220], "1220": [13, 194], "460": [13, 79, 183, 229, 242, 850], "444": [13, 224, 229, 234], "vmax": [13, 19, 69, 86, 105, 110, 112, 114, 115, 122, 135, 140, 159, 175, 193, 194, 208, 209, 224, 226, 227, 238, 259, 262, 263, 264, 265, 271, 408, 415, 476, 477, 555, 556, 696, 698, 700, 743, 760, 774, 775, 778, 782, 786, 795, 798, 803, 804, 805, 876], "xaxi": [13, 125], "set_ticks_posit": 13, "bottom": [13, 69, 72, 73, 110, 118, 125, 139, 145, 160, 190, 215, 216, 224, 229, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 756, 773, 783, 801, 806, 831, 876], "r\u00e9mi": [13, 194, 242], "stanisla": [13, 16, 136, 194, 242, 409, 424, 876], "dehaen": [13, 16, 194, 242, 409, 424], "dynam": [13, 21, 27, 32, 33, 69, 92, 103, 104, 110, 165, 179, 194, 200, 202, 203, 210, 221, 242, 262, 265, 268, 273, 285, 287, 288, 289, 290, 295, 416, 447, 449, 476, 477, 523, 556, 557, 564, 675, 796, 831, 842, 852, 858, 861, 876], "represent": [13, 17, 20, 27, 43, 44, 92, 101, 110, 113, 139, 148, 159, 165, 167, 168, 169, 171, 174, 189, 194, 203, 213, 214, 232, 233, 234, 237, 238, 242, 262, 263, 264, 265, 272, 274, 358, 361, 443, 449, 476, 477, 507, 553, 556, 696, 698, 700, 723, 724, 726, 727, 728, 751, 787, 831, 842, 852, 861, 876], "tempor": [13, 16, 19, 27, 46, 59, 76, 83, 103, 104, 111, 112, 134, 135, 136, 139, 141, 145, 150, 164, 179, 183, 195, 196, 199, 200, 201, 202, 205, 208, 215, 224, 226, 227, 228, 229, 235, 236, 242, 257, 262, 264, 265, 267, 273, 274, 275, 352, 358, 414, 420, 428, 431, 434, 448, 449, 451, 472, 473, 474, 476, 477, 516, 520, 522, 523, 537, 539, 540, 553, 556, 558, 571, 584, 591, 592, 607, 611, 622, 624, 626, 631, 651, 652, 653, 654, 655, 656, 657, 658, 668, 670, 671, 672, 676, 677, 679, 686, 687, 688, 709, 712, 722, 723, 724, 725, 726, 727, 728, 743, 852, 853, 858, 876], "trend": [13, 65, 111, 140, 194, 242], "cognit": [13, 42, 43, 194, 200, 242, 253, 274, 358, 524, 863], "203": [13, 35, 40, 42, 49, 50, 58, 59, 78, 85, 90, 91, 92, 97, 109, 114, 117, 119, 121, 122, 129, 141, 149, 151, 155, 156, 157, 161, 168, 169, 171, 176, 177, 178, 179, 194, 198, 204, 205, 207, 208, 221, 224, 228, 229, 242], "tic": [13, 194, 242], "decoding_time_generalization_condit": [13, 20], "Then": [14, 19, 45, 80, 107, 111, 113, 133, 134, 135, 139, 155, 160, 180, 189, 190, 205, 229, 239, 264, 265, 315, 433, 570, 691, 779, 835, 839, 846, 855, 858], "virtual": [14, 69, 97, 150, 203, 206, 262, 263, 264, 265, 312, 429, 476, 477, 583, 638, 641, 831, 833, 843, 876], "output": [14, 19, 32, 35, 40, 44, 46, 47, 59, 111, 112, 120, 125, 133, 134, 139, 142, 148, 150, 154, 160, 162, 163, 164, 167, 170, 171, 187, 193, 194, 200, 201, 203, 204, 205, 213, 214, 216, 219, 224, 226, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 301, 302, 303, 304, 305, 306, 307, 310, 312, 314, 315, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 411, 413, 414, 418, 419, 420, 421, 424, 425, 427, 429, 433, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 458, 459, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 518, 519, 520, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 549, 551, 552, 556, 558, 559, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 579, 580, 581, 582, 584, 585, 587, 588, 591, 592, 593, 596, 597, 598, 599, 601, 603, 604, 605, 606, 607, 608, 610, 611, 612, 614, 615, 616, 618, 619, 620, 621, 622, 626, 627, 628, 629, 630, 631, 632, 633, 635, 636, 637, 638, 641, 642, 644, 645, 647, 648, 649, 650, 659, 660, 661, 662, 664, 666, 667, 668, 669, 670, 671, 672, 683, 684, 685, 686, 687, 688, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 714, 715, 718, 719, 723, 724, 726, 727, 728, 729, 732, 733, 738, 742, 743, 747, 751, 759, 761, 768, 771, 775, 776, 777, 778, 783, 784, 786, 787, 788, 793, 794, 796, 797, 799, 800, 801, 802, 806, 807, 808, 811, 812, 816, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 834, 835, 839, 840, 843, 855, 858, 859, 861, 876], "asish": [14, 876], "asishrocks95": 14, "decod": [14, 16, 19, 20, 21, 151, 164, 165, 167, 193, 195, 196, 242, 259, 262, 264, 265, 267, 273, 310, 326, 352, 361, 371, 437, 449, 476, 484, 489, 491, 500, 517, 522, 523, 525, 534, 537, 553, 557, 605, 611, 616, 696, 743, 852, 866, 876], "unsupervisedspatialfilt": [14, 866, 876], "fastica": [14, 75, 203, 556], "aud_l": [14, 15, 18, 42, 176, 228, 262, 263, 773, 776], "vis_l": [14, 15, 18, 42, 228], "ie": [14, 53, 108, 259, 269, 273, 277, 601, 712, 722, 743, 768, 801, 802], "pca_data": 14, "evokedarrai": [14, 15, 16, 18, 21, 82, 98, 107, 182, 187, 194, 219, 229, 263, 264, 477, 529, 530, 613, 615, 831, 866, 876], "window_titl": [14, 190, 264, 265, 777], "ica_data": 14, "ev1": [14, 876], "decoding_unsupervised_spatial_filt": [14, 20], "erp": [15, 97, 99, 115, 126, 152, 153, 164, 171, 194, 197, 198, 200, 203, 205, 206, 242, 262, 264, 265, 267, 312, 351, 465, 476, 547, 556, 557, 611, 641, 682, 767, 786, 788, 815, 842, 862, 864, 876], "concaten": [15, 69, 73, 79, 110, 136, 150, 167, 187, 190, 202, 204, 213, 239, 262, 263, 264, 265, 359, 360, 361, 408, 417, 473, 476, 477, 559, 574, 575, 584, 661, 785, 876], "rescal": [15, 63, 111, 112, 367, 368, 369, 573, 696, 699, 803, 866, 876], "fed": 15, "classification_report": [15, 136], "confusion_matrix": [15, 136], "minmaxscal": 15, "n_filter": 15, "penalti": [15, 40, 46, 242, 473, 474, 864], "l1": [15, 40, 473, 474], "pred": 15, "report": [15, 136, 164, 172, 173, 208, 210, 225, 239, 242, 262, 263, 264, 267, 287, 289, 432, 449, 476, 477, 482, 545, 556, 573, 575, 589, 614, 695, 712, 722, 726, 773, 790, 796, 833, 835, 851, 854, 855, 856, 858, 864, 866, 876], "target_nam": [15, 136], "cm_normal": 15, "astyp": [15, 71, 133, 144, 159, 190, 193, 201, 213], "float": [15, 19, 31, 40, 65, 91, 113, 142, 143, 144, 148, 159, 168, 187, 193, 203, 213, 215, 224, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 288, 295, 296, 302, 303, 310, 319, 324, 326, 328, 339, 340, 341, 342, 345, 351, 352, 355, 356, 357, 358, 363, 369, 371, 408, 410, 412, 413, 414, 415, 416, 419, 420, 421, 425, 429, 432, 434, 436, 437, 443, 444, 446, 447, 448, 449, 451, 452, 453, 460, 466, 467, 471, 473, 474, 475, 476, 477, 486, 487, 500, 509, 511, 512, 516, 517, 519, 520, 523, 524, 525, 526, 527, 529, 530, 534, 535, 536, 538, 539, 540, 555, 556, 557, 558, 559, 560, 561, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 584, 586, 588, 589, 590, 592, 593, 602, 627, 633, 634, 635, 636, 645, 646, 651, 652, 653, 654, 655, 656, 657, 658, 661, 663, 666, 667, 668, 670, 671, 674, 675, 678, 679, 680, 682, 683, 684, 686, 687, 688, 689, 690, 691, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 714, 715, 720, 722, 723, 724, 725, 726, 727, 728, 732, 733, 743, 747, 748, 756, 760, 762, 763, 767, 771, 772, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 786, 787, 788, 789, 790, 791, 793, 795, 796, 797, 798, 799, 801, 802, 803, 804, 805, 806, 807, 811, 816, 829, 861, 876], "sum": [15, 28, 31, 41, 47, 60, 71, 80, 107, 111, 112, 115, 136, 143, 148, 160, 161, 167, 174, 182, 183, 200, 224, 225, 229, 239, 262, 263, 264, 265, 268, 269, 270, 273, 276, 277, 278, 284, 351, 356, 476, 477, 538, 556, 561, 648, 683, 684, 686, 687, 691, 697, 698, 700, 775, 855, 858, 861, 876], "imshow": [15, 16, 22, 69, 105, 113, 114, 125, 133, 135, 145, 159, 171, 194, 224, 226, 227, 228, 229, 262, 263, 264, 265, 319, 696, 744, 746, 781, 804, 813], "nearest": [15, 26, 78, 114, 118, 135, 139, 144, 159, 167, 181, 213, 224, 259, 262, 263, 264, 265, 268, 269, 270, 271, 273, 275, 276, 277, 278, 280, 358, 363, 408, 415, 476, 477, 555, 556, 570, 691, 696, 697, 698, 699, 700, 732, 743, 760, 761, 767, 775, 782, 786, 795, 798, 803, 805, 858, 861, 876], "blue": [15, 54, 55, 78, 81, 110, 130, 134, 141, 150, 155, 171, 174, 176, 177, 180, 189, 205, 232, 233, 239, 260, 743, 758, 759, 767, 771, 831], "tick_mark": 15, "ytick": [15, 125, 193, 200, 224], "precis": [15, 47, 69, 88, 133, 136, 156, 183, 200, 201, 208, 213, 221, 256, 262, 263, 268, 295, 296, 449, 476, 477, 497, 584, 652, 654, 673, 723, 724, 726, 727, 851, 855, 861, 876], "recal": [15, 88, 136, 148, 149, 155, 214, 652, 653, 655, 658], "f1": [15, 69, 88, 136, 652], "support": [15, 34, 61, 121, 133, 134, 135, 136, 139, 141, 148, 149, 150, 165, 169, 171, 180, 181, 184, 188, 189, 216, 237, 238, 239, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 269, 270, 272, 273, 275, 276, 277, 278, 295, 296, 302, 310, 316, 318, 338, 352, 357, 358, 367, 368, 369, 371, 389, 408, 415, 416, 424, 429, 438, 439, 441, 442, 446, 447, 448, 468, 475, 476, 477, 482, 487, 496, 499, 500, 501, 502, 506, 511, 515, 518, 519, 556, 567, 575, 584, 606, 609, 610, 624, 631, 632, 641, 644, 645, 661, 677, 679, 688, 691, 696, 698, 699, 700, 743, 759, 761, 764, 767, 771, 772, 773, 777, 782, 790, 796, 797, 801, 806, 807, 808, 809, 812, 831, 833, 835, 838, 840, 841, 842, 847, 853, 855, 862, 876], "288": [15, 35, 70, 71, 110, 130, 140, 144, 159, 168, 170, 224, 229, 234, 242, 565], "macro": [15, 136], "avg": [15, 136, 143, 224, 254, 723, 724], "attribut": [15, 30, 31, 35, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 70, 77, 81, 84, 85, 114, 117, 118, 125, 139, 140, 142, 148, 149, 150, 165, 167, 168, 169, 171, 174, 175, 177, 178, 180, 181, 182, 199, 203, 204, 208, 209, 216, 219, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 300, 351, 363, 408, 409, 411, 412, 414, 415, 416, 418, 423, 426, 465, 466, 475, 476, 477, 483, 485, 486, 487, 488, 489, 492, 493, 494, 497, 499, 500, 501, 502, 503, 504, 505, 506, 515, 555, 556, 557, 608, 614, 618, 624, 646, 681, 696, 697, 698, 699, 700, 731, 743, 745, 767, 776, 789, 825, 831, 835, 853, 876], "nrow": [15, 45, 72, 118, 125, 145, 150, 175, 182, 209, 225, 264, 265, 408, 415, 556, 782, 786, 861, 876], "fitted_xdawn": 15, "get_channel_typ": [15, 139, 168, 262, 263, 264, 265, 267, 476, 477, 556, 696, 698, 699, 700, 876], "get_montag": [15, 113, 133, 134, 135, 262, 263, 264, 265, 267, 476, 477, 876], "cur_class": 15, "cur_pattern": 15, "pattern_evok": 15, "time_format": [15, 21, 98, 107, 110, 144, 175, 215, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 556, 696, 699, 782, 790, 796, 876], "show_nam": [15, 98, 118, 150, 169, 181, 225, 259, 262, 263, 264, 265, 271, 310, 408, 415, 476, 477, 555, 556, 570, 696, 698, 700, 760, 779, 782, 786, 793, 795, 798, 799, 803, 876], "h_pad": [15, 224], "w_pad": [15, 224], "bertrand": [15, 70, 77, 86, 194, 198, 242, 557, 565, 712, 722, 723, 726, 858, 876], "rivet": [15, 86, 194, 242, 557], "antoin": [15, 86, 194, 242, 557, 876], "souloumiac": [15, 86, 194, 242, 557], "virgini": [15, 86, 194, 242, 557], "attina": [15, 86, 194, 242, 557], "gibert": [15, 86, 194, 242, 557], "algorithm": [15, 27, 31, 69, 73, 76, 81, 82, 83, 86, 111, 124, 133, 151, 155, 156, 161, 165, 194, 198, 200, 203, 208, 224, 229, 232, 233, 234, 242, 267, 268, 272, 307, 352, 407, 408, 422, 429, 473, 476, 523, 542, 556, 557, 559, 564, 566, 567, 572, 575, 577, 582, 584, 591, 592, 593, 656, 673, 678, 733, 842, 847, 851, 852, 853, 864, 876], "enhanc": [15, 86, 193, 194, 225, 229, 242, 414, 556, 557, 575, 683, 684, 686, 687, 835, 854, 861, 864], "2035": [15, 86, 179, 194, 242, 557], "2043": [15, 86, 168, 194, 242, 557], "2009": [15, 35, 58, 86, 115, 170, 194, 203, 224, 225, 242, 273, 471, 557, 570, 683, 684, 686, 687, 851, 861, 876], "2012869": [15, 86, 194, 242, 557], "hubert": [15, 86, 242, 557, 876], "cecotti": [15, 86, 242, 557], "emmanuel": [15, 86, 200, 242, 557], "mabi": [15, 86, 242, 557], "j\u00e9r\u00e9mie": [15, 86, 242, 557], "mattout": [15, 86, 242, 557], "theoret": [15, 86, 193, 194, 200, 219, 242, 408, 557, 831], "effici": [15, 42, 44, 86, 190, 200, 224, 242, 257, 262, 263, 264, 265, 420, 476, 477, 556, 557, 558, 656, 698, 700, 726, 727, 853, 876], "p300": [15, 86, 190, 194, 200, 242, 557, 725, 728], "proceed": [15, 33, 40, 46, 86, 165, 179, 202, 203, 221, 242, 288, 295, 474, 557, 725, 728, 851, 858], "eusipco": [15, 86, 242, 557, 725, 728], "1382": [15, 86, 242, 557], "1386": [15, 86, 242, 557], "barcelona": [15, 86, 242, 557], "url": [15, 86, 111, 150, 194, 242, 352, 378, 383, 385, 389, 400, 401, 471, 523, 557, 678, 725, 728, 835, 858, 876], "ieeexplor": [15, 86, 242, 557, 725, 728], "7073970": [15, 86, 242, 557], "decoding_xdawn_eeg": [15, 20], "cours": [16, 27, 32, 36, 38, 39, 41, 50, 56, 69, 73, 81, 88, 90, 93, 99, 111, 114, 134, 135, 141, 142, 150, 164, 165, 171, 174, 175, 176, 179, 185, 186, 194, 197, 200, 204, 205, 221, 229, 234, 242, 260, 261, 262, 263, 264, 265, 268, 269, 270, 273, 275, 276, 277, 278, 287, 289, 291, 294, 358, 409, 424, 442, 451, 461, 471, 473, 474, 476, 477, 511, 518, 522, 523, 537, 553, 614, 618, 624, 646, 660, 662, 663, 682, 696, 698, 699, 700, 742, 743, 767, 794, 801, 806, 831, 858, 861, 876], "techniqu": [16, 17, 20, 27, 59, 69, 72, 73, 74, 148, 150, 164, 165, 194, 197, 200, 202, 203, 205, 206, 208, 209, 210, 211, 221, 224, 242, 262, 263, 264, 265, 267, 371, 410, 419, 422, 444, 446, 447, 467, 476, 477, 553, 556, 611, 641, 831, 852, 858, 859, 864], "By": [16, 45, 69, 78, 81, 101, 102, 110, 133, 134, 141, 144, 148, 149, 150, 157, 165, 167, 168, 169, 170, 171, 177, 187, 188, 198, 200, 203, 204, 205, 206, 208, 213, 214, 216, 237, 254, 262, 263, 264, 265, 267, 268, 269, 270, 273, 276, 277, 278, 307, 324, 432, 449, 476, 477, 556, 559, 638, 661, 673, 689, 696, 697, 698, 699, 700, 769, 773, 781, 789, 796, 806, 858, 864, 876], "onto": [16, 18, 40, 72, 135, 141, 154, 165, 169, 174, 179, 193, 198, 204, 205, 208, 220, 268, 270, 276, 278, 416, 581, 645, 673, 743, 759, 794, 813, 852, 858, 876], "surrog": [16, 156, 182, 205, 363, 424, 470, 876], "expos": [16, 131, 193, 228, 840, 876], "exhibit": [16, 239, 264, 265, 269, 270, 273, 276, 277, 278, 858], "evolut": [16, 111, 556, 790], "compute_em": [16, 866, 876], "audl": [16, 71], "visl": [16, 71], "wai": [16, 21, 27, 34, 43, 44, 73, 112, 113, 125, 133, 139, 140, 141, 143, 148, 149, 150, 155, 159, 160, 165, 167, 168, 169, 170, 171, 176, 179, 189, 193, 198, 199, 200, 201, 203, 204, 205, 208, 210, 214, 215, 216, 219, 221, 224, 226, 227, 232, 234, 239, 242, 256, 257, 260, 261, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 352, 432, 442, 476, 477, 491, 516, 556, 558, 572, 578, 585, 607, 614, 645, 677, 678, 679, 685, 691, 696, 699, 710, 712, 722, 726, 743, 831, 833, 835, 838, 841, 851, 852, 853, 854, 857, 859, 876], "n_epoch": [16, 112, 139, 145, 148, 165, 193, 194, 219, 229, 238, 257, 262, 263, 312, 408, 409, 410, 413, 414, 415, 416, 417, 419, 420, 422, 423, 446, 447, 557, 564, 698, 699, 701, 702, 703, 723, 724, 725, 767, 773, 774, 876], "n_time": [16, 19, 31, 63, 65, 69, 74, 81, 112, 139, 145, 148, 158, 165, 189, 190, 193, 194, 203, 206, 213, 219, 221, 224, 228, 229, 232, 233, 234, 257, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 312, 346, 408, 409, 410, 413, 414, 415, 416, 417, 419, 421, 422, 424, 442, 444, 446, 447, 475, 476, 477, 496, 531, 557, 582, 646, 651, 652, 653, 654, 655, 656, 657, 658, 663, 670, 671, 672, 676, 682, 686, 687, 696, 698, 699, 700, 701, 702, 703, 714, 715, 719, 721, 723, 724, 725, 743, 767, 774, 775, 782, 803, 876], "993": [16, 18, 111, 229], "613": [16, 18], "145": [16, 18, 19, 45, 72, 74, 80, 148, 168, 184, 194, 220, 224, 228, 229], "106": [16, 35, 71, 94, 95, 98, 119, 140, 144, 151, 165, 168, 171, 176, 179, 194, 199, 203, 228, 229, 861], "x_transform": 16, "leav": [16, 136, 143, 171, 190, 197, 202, 213, 592, 833, 841, 843, 876], "recommend": [16, 41, 43, 44, 45, 69, 112, 133, 154, 157, 160, 171, 187, 189, 200, 201, 203, 204, 206, 208, 242, 257, 262, 263, 264, 265, 269, 273, 277, 280, 305, 307, 316, 328, 345, 352, 357, 358, 371, 407, 410, 416, 452, 471, 476, 477, 495, 506, 516, 523, 529, 536, 556, 561, 572, 584, 591, 607, 609, 613, 638, 644, 645, 682, 686, 687, 752, 759, 801, 833, 835, 839, 840, 841, 854, 855, 858, 876], "stratifi": [16, 425], "tend": [16, 161, 177, 200, 202, 203, 224, 566, 855, 858], "overfit": [16, 86, 193], "cannot": [16, 59, 160, 168, 171, 187, 189, 200, 201, 204, 206, 215, 234, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 288, 339, 341, 430, 476, 477, 523, 556, 575, 616, 645, 696, 743, 779, 801, 806, 823, 833, 835, 857, 876], "x_scale": 16, "futur": [16, 69, 170, 203, 216, 280, 414, 420, 448, 575, 835, 839, 853, 855, 857, 876], "filters_": [16, 18, 408, 409, 412, 415, 416, 426, 557, 876], "individu": [16, 26, 32, 37, 42, 43, 44, 99, 133, 139, 141, 143, 154, 158, 165, 169, 171, 174, 198, 204, 205, 209, 215, 216, 224, 238, 239, 242, 257, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 295, 296, 326, 347, 408, 449, 476, 477, 524, 532, 533, 572, 592, 614, 674, 680, 688, 725, 728, 761, 773, 777, 781, 794, 796, 822, 835, 851, 852, 857, 858, 876], "argsort": [16, 31, 115, 126, 142, 180], "reorder": [16, 47, 115, 262, 263, 264, 265, 476, 477, 487, 696, 698, 699, 700, 774, 804, 876], "kei": [16, 92, 93, 125, 133, 136, 139, 140, 141, 148, 149, 151, 165, 168, 169, 170, 180, 188, 204, 205, 213, 214, 216, 219, 255, 256, 257, 259, 260, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 281, 286, 295, 296, 300, 322, 323, 352, 356, 357, 363, 366, 367, 368, 369, 383, 389, 400, 408, 415, 417, 424, 432, 435, 437, 451, 452, 453, 456, 468, 471, 473, 474, 476, 477, 508, 512, 522, 523, 534, 546, 555, 556, 558, 570, 572, 573, 575, 595, 608, 610, 627, 640, 647, 648, 649, 661, 665, 681, 682, 683, 684, 686, 687, 696, 698, 699, 700, 731, 733, 743, 760, 765, 766, 767, 771, 773, 774, 775, 776, 777, 779, 781, 782, 783, 786, 795, 796, 798, 799, 801, 803, 805, 806, 807, 829, 835, 841, 852, 864, 876], "ems_av": 16, "u": [16, 19, 21, 47, 69, 102, 110, 113, 114, 136, 140, 143, 145, 148, 150, 159, 165, 170, 171, 179, 180, 182, 187, 188, 193, 199, 200, 203, 204, 205, 213, 214, 219, 224, 242, 253, 254, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 442, 476, 477, 531, 835, 838, 843, 854, 857, 858, 861, 876], "schurger": [16, 194, 242, 409, 424], "thu": [16, 18, 43, 47, 55, 69, 101, 112, 139, 140, 148, 151, 169, 170, 174, 179, 181, 187, 194, 200, 203, 205, 206, 208, 224, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 345, 410, 419, 431, 442, 444, 446, 476, 477, 523, 531, 534, 558, 724, 727, 831, 835, 851, 852, 855, 858, 876], "equalize_event_count": [16, 148, 150, 165, 228, 229, 234, 262, 263, 699, 876], "112": [16, 69, 113, 133, 168, 170, 204, 205, 206, 207, 212, 213, 218, 228, 229, 242, 564, 861], "aaron": [16, 194, 242, 409, 424], "sebastien": [16, 194, 242, 409, 424, 876], "marti": [16, 194, 242, 409, 424, 876], "reveal": [16, 99, 111, 143, 169, 190, 194, 200, 239, 242, 409, 424, 725, 728], "639": [16, 20, 131, 165, 171, 192, 194, 229], "ems_filt": [16, 20], "continu": [17, 19, 20, 21, 27, 96, 100, 139, 141, 144, 147, 150, 160, 167, 187, 194, 195, 196, 197, 199, 200, 203, 204, 208, 211, 214, 218, 219, 224, 237, 242, 254, 256, 262, 263, 264, 265, 267, 343, 351, 355, 357, 361, 391, 399, 403, 408, 414, 415, 416, 420, 448, 449, 476, 477, 489, 495, 496, 506, 516, 517, 553, 555, 556, 559, 568, 576, 577, 602, 607, 680, 681, 682, 696, 698, 699, 700, 721, 767, 779, 786, 788, 831, 835, 851, 852, 857, 861, 864, 876], "spoc": [17, 20, 27, 242, 262, 267, 408, 416, 489, 517, 557, 866, 876], "xdawn": [17, 20, 27, 76, 83, 242, 259, 262, 264, 265, 267, 357, 371, 408, 412, 415, 423, 476, 553, 611, 774, 866, 876], "em": [17, 20, 27, 194, 262, 264, 265, 267, 424, 476, 553, 611, 866, 876], "recept": [17, 20, 27, 164, 195, 196, 242, 248, 267, 310, 326, 371, 414, 420, 448, 477, 805, 852], "spectro": [17, 20, 27, 112, 164, 195, 196, 262, 264, 265, 267, 414, 416, 420, 448, 489, 517, 715], "ssd": [17, 20, 27, 262, 264, 265, 267, 489, 517, 715, 866, 876], "mvpa": [18, 164, 195, 196, 259, 262, 264, 265, 267, 273, 352, 408, 409, 410, 411, 412, 413, 415, 417, 418, 423, 425, 426, 449, 523, 534, 557, 616, 743, 876], "neurophysiolog": [18, 19, 832], "interpret": [18, 19, 101, 141, 150, 158, 187, 194, 200, 201, 215, 226, 228, 229, 234, 242, 257, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 276, 277, 278, 280, 301, 308, 311, 325, 327, 352, 353, 355, 357, 367, 410, 411, 412, 414, 418, 421, 424, 425, 426, 429, 446, 447, 451, 464, 466, 467, 476, 477, 484, 491, 498, 500, 515, 518, 519, 523, 529, 530, 539, 540, 555, 556, 558, 561, 568, 569, 571, 572, 573, 575, 578, 581, 590, 592, 599, 644, 647, 648, 649, 652, 661, 664, 682, 683, 684, 685, 686, 687, 691, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 714, 715, 723, 724, 725, 726, 727, 743, 767, 773, 774, 775, 777, 778, 779, 780, 787, 792, 794, 797, 835, 838, 839, 846, 858, 876], "romain": [18, 876], "trachel": [18, 876], "trachelr": 18, "sample_path": [18, 122, 133, 134, 135], "meg_data": [18, 139], "reshap": [18, 136, 193, 224, 225, 228, 232, 234, 414, 423], "scaler": [18, 866, 876], "coef": [18, 19, 193, 194, 426], "revers": [18, 19, 71, 142, 145, 171, 187, 197, 199, 200, 202, 203, 205, 213, 259, 264, 265, 269, 270, 273, 275, 276, 277, 278, 777, 779, 781, 782, 801, 806, 876], "sequenti": [18, 139, 149, 219, 260, 261, 262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 280, 333, 352, 353, 355, 357, 411, 418, 421, 424, 425, 451, 464, 466, 476, 477, 515, 518, 519, 529, 530, 539, 540, 561, 568, 569, 644, 647, 648, 649, 661, 683, 684, 685, 686, 687, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 714, 715, 723, 724, 725, 726, 727, 733, 743, 762, 767, 775, 778, 797, 801, 806, 807, 831], "kai": [18, 19, 143, 242, 412, 414, 426, 432], "g\u00f6rgen": [18, 19, 242, 412, 414, 426], "dylan": [18, 19, 81, 242, 412, 414, 426, 556], "hayn": [18, 19, 242, 412, 414, 426], "benjamin": [18, 19, 242, 408, 412, 414, 426], "blankertz": [18, 19, 242, 408, 412, 414, 426], "felix": [18, 19, 110, 242, 412, 414, 426, 876], "bie\u00dfmann": [18, 19, 242, 412, 414, 426], "On": [18, 19, 69, 70, 165, 167, 198, 200, 203, 204, 239, 242, 254, 280, 412, 414, 426, 437, 457, 556, 565, 833, 835, 840, 841, 843, 853, 858, 876], "multivari": [18, 19, 88, 92, 136, 161, 193, 194, 242, 352, 412, 414, 426, 650, 852, 855, 876], "110": [18, 19, 21, 35, 41, 79, 80, 110, 133, 157, 168, 207, 224, 228, 229, 242, 412, 414, 426, 561], "067": [18, 19, 242, 412, 414, 426], "791": [18, 20, 32, 33, 34, 46, 95, 100, 111, 180, 229, 238], "1031": [18, 34, 168, 221, 834], "linear_model_pattern": [18, 20], "reproduc": [19, 45, 69, 91, 150, 193, 214, 295, 509, 556, 582, 601, 648, 649, 650, 659, 660, 662, 683, 684, 685, 686, 687, 835, 876], "lalor": [19, 193, 242, 414, 852], "mtrf": [19, 193, 242, 414, 866, 876], "receptivefield": [19, 193, 420, 866, 876], "speech": [19, 193, 242, 414, 588, 725, 728, 852], "envelop": [19, 80, 111, 112, 113, 135, 145, 194, 262, 263, 264, 265, 415, 476, 477, 561, 852, 876], "128": [19, 24, 41, 50, 71, 83, 86, 118, 128, 140, 147, 157, 159, 167, 168, 169, 170, 194, 221, 224, 228, 229, 231, 262, 263, 407, 761, 852, 876], "try": [19, 31, 69, 73, 81, 139, 140, 142, 150, 155, 157, 160, 161, 166, 170, 175, 179, 200, 201, 202, 203, 204, 205, 213, 220, 221, 239, 272, 280, 425, 445, 458, 484, 491, 556, 570, 759, 817, 833, 834, 835, 840, 853, 855, 856, 876], "known": [19, 44, 86, 110, 112, 143, 150, 155, 159, 164, 179, 222, 223, 224, 259, 262, 263, 264, 265, 266, 267, 268, 273, 352, 362, 443, 449, 476, 477, 484, 491, 506, 522, 523, 537, 592, 616, 619, 652, 660, 663, 678, 743, 831, 847, 852, 858, 876], "literatur": [19, 143, 239, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 696, 699, 831], "simpli": [19, 43, 134, 142, 143, 145, 148, 169, 170, 187, 198, 199, 203, 205, 208, 214, 215, 224, 238, 239, 257, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 295, 296, 476, 477, 572, 573, 696, 699, 833, 835, 838, 843, 852, 858, 876], "chri": [19, 112, 135, 193, 194, 242, 876], "holdgraf": [19, 112, 113, 135, 193, 194, 242, 414, 876], "choldgraf": [19, 112, 113, 135, 193], "nicola": [19, 47, 242, 656, 876], "barascud": [19, 876], "sphinx_gallery_thumbnail_numb": [19, 118, 194], "scipi": [19, 31, 95, 109, 155, 170, 171, 193, 200, 204, 221, 224, 225, 226, 229, 232, 233, 239, 254, 259, 262, 263, 264, 265, 269, 270, 271, 273, 274, 275, 276, 277, 278, 280, 316, 327, 356, 358, 408, 410, 415, 419, 443, 444, 446, 447, 448, 451, 476, 477, 555, 556, 564, 570, 644, 676, 678, 683, 684, 686, 687, 689, 690, 695, 696, 698, 699, 700, 712, 715, 722, 743, 760, 775, 782, 786, 795, 797, 798, 803, 805, 834, 835, 855, 857, 860, 873, 876], "loadmat": [19, 193], "collect": [19, 69, 125, 150, 156, 167, 171, 182, 183, 189, 190, 198, 208, 239, 242, 255, 259, 262, 263, 264, 265, 319, 408, 415, 435, 476, 477, 555, 556, 681, 696, 698, 700, 757, 767, 775, 782, 786, 798, 803, 805, 831, 835, 850, 851, 858, 861, 876], "listen": [19, 852, 857, 864], "know": [19, 40, 125, 141, 143, 155, 159, 168, 171, 188, 198, 200, 203, 204, 205, 215, 228, 264, 265, 295, 296, 352, 356, 357, 367, 368, 369, 408, 415, 451, 452, 471, 473, 474, 531, 534, 637, 783, 835, 838, 841, 842, 853, 855, 858, 876], "primarili": [19, 69, 169, 197, 200, 410, 476, 477, 598, 765, 831, 842], "speech_data": [19, 193], "down": [19, 21, 69, 110, 133, 150, 160, 193, 194, 200, 204, 215, 216, 226, 228, 259, 260, 262, 263, 264, 265, 271, 272, 408, 415, 448, 476, 477, 555, 556, 582, 683, 684, 686, 687, 696, 698, 700, 743, 771, 773, 774, 775, 779, 782, 786, 795, 796, 798, 803, 833, 835, 857, 876], "biosemi128": [19, 169], "rawarrai": [19, 63, 65, 69, 74, 81, 112, 158, 187, 189, 203, 206, 219, 263, 265, 495, 831, 866, 876], "ln": [19, 90, 712, 722, 726, 841, 858], "800": [19, 33, 43, 51, 79, 81, 124, 125, 132, 134, 143, 154, 155, 159, 165, 174, 176, 194, 200, 207, 232, 269, 270, 273, 276, 277, 278, 467, 743, 801, 806], "alpha": [19, 21, 28, 35, 39, 40, 44, 46, 49, 50, 59, 69, 94, 95, 108, 110, 111, 114, 133, 134, 136, 145, 150, 171, 176, 180, 189, 193, 204, 210, 224, 226, 229, 234, 238, 239, 258, 262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 352, 414, 420, 466, 471, 473, 474, 476, 477, 539, 618, 674, 680, 683, 684, 686, 687, 696, 698, 700, 743, 759, 762, 775, 779, 791, 797, 801, 806, 876], "ln1": 19, "lw": [19, 39, 133, 143, 171, 180, 193, 208, 210, 221, 712, 722, 876], "frameon": [19, 125], "float64": [19, 63, 65, 69, 74, 81, 90, 92, 112, 158, 166, 189, 203, 206, 219, 475, 676, 858], "7677": 19, "7676": 19, "119": [19, 121, 133, 134, 159, 168, 228, 876], "938": [19, 229], "construct": [19, 42, 68, 101, 139, 143, 161, 167, 177, 179, 182, 183, 187, 190, 194, 200, 203, 204, 205, 208, 221, 224, 238, 239, 262, 263, 264, 265, 269, 273, 275, 277, 278, 282, 283, 295, 311, 358, 432, 443, 444, 446, 447, 476, 477, 493, 570, 608, 641, 645, 646, 682, 691, 702, 705, 756, 762, 796, 801, 807, 831, 851, 858, 876], "relationship": [19, 22, 142, 159, 202, 224, 414, 420, 452, 712, 722, 723, 724, 726, 727, 831, 852, 857, 858], "rf": [19, 193, 414], "feature_nam": [19, 193, 414, 876], "corrcoef": [19, 22, 47, 414], "extra": [19, 79, 80, 144, 159, 165, 168, 169, 190, 205, 213, 220, 259, 262, 263, 264, 265, 271, 303, 304, 310, 333, 335, 408, 409, 415, 427, 476, 477, 555, 556, 570, 696, 698, 700, 739, 760, 767, 775, 777, 779, 782, 783, 786, 793, 795, 797, 798, 799, 803, 805, 831, 839, 843, 876], "inclus": [19, 121, 139, 142, 184, 254, 262, 263, 272, 275, 378, 400, 401, 453, 471, 473, 474, 487, 534, 551, 556, 575, 688, 697, 699, 876], "n_delai": [19, 414], "held": [19, 78, 170, 193, 857], "coef_": [19, 193, 412, 414, 555], "n_output": [19, 414, 420], "n_featur": [19, 193, 194, 408, 409, 410, 412, 413, 414, 415, 416, 419, 420, 423, 557, 582, 676], "delays_": [19, 193, 414], "mean_coef": 19, "mean_scor": 19, "ix_ch": 19, "sometim": [19, 27, 60, 81, 110, 113, 115, 125, 126, 133, 139, 143, 155, 160, 167, 168, 188, 189, 198, 200, 201, 203, 205, 206, 224, 259, 262, 263, 264, 265, 267, 271, 408, 415, 476, 477, 492, 555, 556, 570, 602, 608, 696, 698, 700, 760, 767, 775, 782, 786, 795, 798, 803, 805, 831, 835, 843, 851, 855, 858, 876], "well": [19, 22, 32, 37, 47, 69, 77, 114, 118, 133, 135, 136, 139, 142, 143, 149, 151, 159, 161, 164, 165, 168, 171, 174, 181, 183, 187, 188, 190, 193, 197, 198, 200, 202, 203, 204, 205, 206, 208, 211, 213, 219, 221, 229, 237, 239, 242, 262, 263, 264, 265, 272, 273, 318, 340, 352, 367, 408, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 424, 432, 447, 448, 476, 477, 556, 557, 584, 591, 696, 712, 714, 722, 725, 726, 727, 728, 773, 775, 789, 831, 833, 835, 841, 847, 852, 853, 855, 857, 858, 860, 864, 876], "recreat": [19, 125, 139, 200, 766], "time_plot": 19, "180": [19, 24, 35, 79, 90, 109, 155, 168, 177, 190, 197, 199, 201, 203, 207, 229, 269, 270, 273, 276, 277, 278, 442, 748, 876], "highlight": [19, 21, 88, 93, 112, 118, 149, 150, 171, 174, 175, 201, 203, 208, 215, 259, 260, 262, 263, 264, 265, 272, 408, 415, 476, 477, 555, 696, 698, 700, 760, 771, 775, 777, 782, 798, 803, 805, 835, 876], "max_coef": 19, "pcolormesh": [19, 112, 193, 876], "shade": [19, 193, 204, 752, 767, 808, 809, 876], "gouraud": [19, 193], "ncoeffici": 19, "setp": [19, 193, 201], "get_xticklabel": [19, 193], "2c": [19, 858], "ix_plot": 19, "argmin": [19, 118, 143, 239], "vlim": [19, 69, 78, 98, 107, 140, 141, 202, 205, 209, 229, 239, 259, 262, 263, 264, 265, 271, 408, 415, 476, 477, 555, 556, 696, 698, 700, 760, 775, 782, 786, 795, 798, 803, 805, 876], "nfor": 19, "anoth": [19, 31, 45, 69, 85, 93, 124, 140, 142, 143, 144, 148, 150, 154, 155, 160, 166, 170, 179, 187, 199, 200, 203, 204, 208, 214, 215, 216, 224, 229, 262, 263, 264, 265, 268, 269, 270, 272, 273, 274, 276, 277, 278, 280, 312, 352, 353, 355, 357, 358, 411, 418, 421, 424, 425, 434, 451, 464, 466, 476, 477, 504, 515, 518, 519, 529, 530, 539, 540, 542, 561, 568, 569, 644, 647, 648, 649, 661, 667, 683, 684, 685, 686, 687, 698, 700, 701, 702, 703, 704, 705, 706, 714, 715, 723, 724, 725, 726, 727, 732, 733, 764, 775, 778, 796, 797, 816, 831, 833, 835, 843, 852, 857, 858, 861, 876], "case": [19, 44, 58, 69, 72, 88, 92, 93, 101, 112, 118, 121, 125, 139, 142, 143, 148, 154, 160, 161, 164, 167, 168, 170, 171, 179, 180, 184, 187, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 213, 214, 215, 224, 225, 226, 232, 234, 237, 239, 242, 256, 257, 259, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 286, 295, 296, 300, 306, 316, 327, 351, 352, 356, 357, 367, 368, 369, 370, 408, 415, 425, 432, 437, 448, 451, 452, 459, 466, 471, 473, 474, 476, 477, 484, 491, 498, 506, 511, 516, 522, 523, 524, 525, 526, 527, 534, 545, 551, 559, 570, 582, 601, 607, 624, 638, 641, 656, 661, 682, 683, 696, 698, 699, 700, 708, 714, 724, 727, 731, 743, 761, 767, 774, 776, 779, 780, 783, 801, 831, 835, 843, 855, 857, 858, 876], "aim": [19, 136, 157, 176, 220, 221, 301, 353, 354, 355], "exploit": [19, 86, 876], "context": [19, 42, 114, 170, 171, 174, 194, 200, 224, 262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 280, 352, 353, 355, 357, 408, 411, 418, 421, 424, 425, 451, 464, 466, 476, 477, 515, 518, 519, 524, 529, 530, 539, 540, 545, 556, 561, 568, 569, 644, 647, 648, 649, 661, 683, 684, 685, 686, 687, 698, 700, 701, 702, 703, 704, 705, 706, 714, 715, 723, 724, 725, 726, 727, 737, 738, 773, 775, 778, 790, 796, 797, 814, 815, 841, 857, 876], "treat": [19, 21, 150, 171, 194, 205, 206, 224, 228, 262, 263, 266, 272, 487, 489, 547, 549, 683, 684, 686, 687, 699, 767, 785, 876], "independ": [19, 69, 73, 81, 107, 110, 150, 157, 161, 165, 178, 179, 180, 194, 197, 199, 200, 202, 203, 204, 208, 215, 224, 242, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 356, 411, 418, 423, 476, 477, 556, 557, 564, 570, 575, 582, 584, 678, 680, 683, 684, 686, 687, 690, 723, 724, 726, 727, 786, 788, 790, 842, 851, 852, 855, 858, 876], "therefor": [19, 69, 92, 133, 135, 141, 145, 150, 157, 161, 168, 169, 188, 194, 198, 199, 200, 202, 203, 206, 208, 224, 239, 262, 263, 272, 316, 318, 432, 476, 492, 495, 556, 602, 608, 609, 613, 835, 839, 851, 857, 858], "qualiti": [19, 119, 156, 165, 171, 199, 200, 203, 205, 216, 239, 242, 257, 262, 263, 264, 265, 476, 477, 515, 556, 572, 588, 787, 835, 851, 857, 858, 864, 876], "expens": [19, 164, 165, 171, 592, 859, 864, 876], "especi": [19, 55, 69, 110, 118, 125, 142, 148, 161, 165, 168, 197, 198, 200, 202, 203, 207, 213, 239, 264, 265, 273, 476, 477, 556, 576, 592, 683, 684, 686, 687, 783, 831, 835, 838, 851, 855, 858, 876], "lag": [19, 27, 76, 83, 193, 221, 242, 262, 264, 265, 267, 414, 420, 434, 476, 553, 611, 876], "footcit": [19, 382, 835], "crosseetal2016": 19, "earlier": [19, 144, 166, 170, 190, 197, 200, 213, 264, 265, 295, 296, 352, 356, 357, 367, 368, 369, 408, 415, 450, 451, 452, 471, 473, 474, 534, 783, 839, 876], "wherea": [19, 79, 133, 135, 142, 155, 157, 167, 174, 194, 200, 201, 202, 208, 224, 256, 262, 263, 281, 295, 296, 476, 477, 484, 773, 796, 802, 831, 858, 862, 876], "chang": [19, 31, 44, 45, 112, 125, 133, 135, 141, 144, 148, 150, 155, 157, 160, 166, 169, 170, 171, 174, 175, 177, 183, 187, 188, 190, 193, 198, 203, 204, 205, 209, 210, 214, 215, 216, 220, 224, 227, 232, 234, 239, 242, 254, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 295, 296, 302, 305, 307, 310, 318, 333, 338, 339, 341, 345, 358, 360, 384, 408, 415, 429, 437, 442, 443, 445, 447, 449, 451, 452, 461, 467, 471, 473, 474, 476, 477, 496, 499, 500, 511, 515, 518, 519, 534, 544, 545, 555, 556, 558, 570, 575, 581, 582, 584, 606, 614, 632, 641, 643, 644, 645, 661, 688, 691, 696, 698, 699, 700, 738, 743, 753, 759, 760, 761, 767, 768, 771, 772, 773, 774, 775, 777, 779, 782, 783, 784, 786, 788, 790, 793, 795, 796, 797, 798, 799, 801, 803, 805, 806, 807, 808, 813, 822, 836, 841, 843, 851, 854, 855, 858, 861, 862], "affect": [19, 49, 70, 79, 140, 141, 148, 150, 166, 189, 197, 198, 200, 201, 203, 204, 206, 208, 239, 242, 255, 257, 262, 263, 264, 265, 269, 272, 273, 277, 363, 400, 449, 450, 476, 477, 496, 572, 614, 648, 649, 724, 727, 796, 801, 835, 851, 858, 876], "obvious": [19, 157, 208, 239], "cf": [19, 144, 154, 712, 722, 726], "next": [19, 54, 55, 58, 112, 114, 119, 134, 135, 140, 144, 149, 150, 155, 156, 160, 165, 170, 174, 176, 178, 187, 189, 197, 199, 203, 205, 209, 213, 214, 215, 224, 238, 239, 259, 262, 263, 264, 265, 271, 352, 407, 408, 415, 476, 477, 555, 556, 570, 696, 698, 699, 700, 725, 728, 760, 761, 782, 786, 795, 798, 803, 833, 835, 843, 858, 861, 876], "section": [19, 73, 114, 135, 136, 139, 141, 143, 148, 149, 150, 155, 164, 165, 166, 170, 171, 174, 187, 188, 189, 197, 199, 200, 201, 203, 206, 208, 213, 214, 239, 257, 259, 260, 261, 262, 263, 264, 265, 271, 272, 274, 295, 296, 310, 389, 408, 415, 429, 435, 443, 445, 476, 477, 493, 504, 555, 556, 570, 575, 585, 696, 698, 700, 760, 775, 782, 786, 795, 798, 803, 805, 835, 839, 851, 857, 858, 859, 861, 876], "haufeetal2014": 19, "sr": 19, "1e4": 19, "mean_pattern": 19, "max_pattern": 19, "8384": [19, 876], "1099": 19, "1723": [19, 168], "47it": [19, 33, 34, 101, 106, 107, 110, 194, 207, 224, 225, 228, 229, 232, 234], "2232": [19, 61, 168, 333], "2662": 19, "336": [19, 30, 168, 170, 229, 876], "2931": [19, 88], "3102": 19, "478": [19, 224], "3300": 19, "547": [19, 134, 138, 229], "3419": 19, "593": [19, 94, 194, 229], "3353": 19, "3443": 19, "737": [19, 229], "3572": 19, "09it": [19, 34, 107, 110, 179, 193, 194, 224, 225, 226, 228, 229], "811": [19, 229], "3669": 19, "884": [19, 229, 242], "3744": [19, 333], "954": [19, 94, 203, 229], "3798": 19, "1025": [19, 112, 143, 237], "3850": 19, "1096": 19, "3896": 19, "1168": [19, 207], "3943": 19, "1244": [19, 194], "4001": [19, 858], "1314": 19, "4025": 19, "1384": 19, "4050": 19, "1460": 19, "4099": 19, "1531": [19, 34, 165, 168, 221, 254], "4122": 19, "1602": [19, 207], "4142": 19, "1674": 19, "4166": 19, "1750": 19, "4201": 19, "1823": [19, 168], "4222": 19, "93it": [19, 33, 44, 101, 106, 107, 110, 193, 194, 207, 224, 226, 228, 229], "1894": 19, "4236": 19, "1968": 19, "4259": 19, "2041": [19, 32, 34, 168, 221], "4275": 19, "2113": [19, 26, 168], "4287": [19, 35], "2188": [19, 177], "4308": 19, "2260": 19, "4318": 19, "2334": 19, "4334": 19, "2406": 19, "4343": 19, "2474": 19, "4337": 19, "2544": 19, "4339": [19, 158], "2618": 19, "4355": 19, "2689": 19, "4359": 19, "2763": 19, "4372": 19, "2830": 19, "4361": 19, "2902": 19, "4367": 19, "2977": 19, "4383": 19, "3052": 19, "4399": 19, "3126": 19, "4408": [19, 59, 183, 190], "3198": 19, "4413": 19, "3265": 19, "4398": 19, "3329": 19, "4374": 19, "3398": 19, "4369": 19, "3467": 19, "4363": 19, "3536": 19, "3608": 19, "3674": 19, "4354": 19, "3740": 19, "4342": 19, "3809": 19, "4338": 19, "3866": 19, "4295": 19, "3938": 19, "4304": 19, "4005": [19, 858], "4296": 19, "4072": 19, "4289": 19, "4291": 19, "4210": 19, "4279": 19, "4286": 19, "4306": 19, "4425": 19, "4312": 19, "4500": [19, 32], "4331": 19, "4576": 19, "4351": 19, "4647": 19, "4717": 19, "4787": 19, "4855": 19, "4346": 19, "4929": 19, "4357": 19, "5002": [19, 858], "4365": 19, "5062": 19, "5129": 19, "4326": 19, "5205": 19, "5273": 19, "5348": 19, "5420": 19, "5492": 19, "5554": 19, "5619": 19, "4324": 19, "5685": 19, "4310": 19, "5750": 19, "5817": 19, "5881": 19, "4269": 19, "5940": 19, "4239": 19, "6000": [19, 210, 582], "4214": 19, "6070": 19, "4220": 19, "6146": 19, "4245": 19, "6218": 19, "4257": 19, "6290": [19, 864], "4268": 19, "6366": 19, "6439": 19, "4302": 19, "6514": 19, "4320": 19, "6590": 19, "4341": 19, "6663": 19, "4352": 19, "6738": 19, "4368": 19, "6810": 19, "4373": 19, "6886": 19, "4392": 19, "6957": 19, "7031": 19, "4402": 19, "7101": 19, "7169": 19, "4390": 19, "7241": 19, "4395": 19, "7312": 19, "7384": 19, "7461": 19, "4416": 19, "7535": 19, "4423": 19, "7607": 19, "4427": 19, "7680": 19, "4431": 19, "7753": 19, "4437": 19, "7824": 19, "4436": 19, "51it": [19, 33, 101, 106, 107, 110, 194, 207, 224, 228, 229, 233, 234], "7899": 19, "4448": [19, 242, 725, 728], "7972": 19, "4452": 19, "8041": 19, "4443": 19, "8106": 19, "8177": 19, "4424": 19, "8250": 19, "4429": 19, "8328": 19, "4290": 19, "1832": [19, 168], "2592": [19, 193], "222": [19, 35, 46, 110, 168, 171, 173, 190, 224, 228, 234], "3108": 19, "283": [19, 41, 70, 110, 168, 229, 242, 565], "3245": 19, "353": [19, 79, 168, 193, 224, 229], "3434": 19, "426": 19, "3603": 19, "501": [19, 167, 194, 201, 207, 224, 229], "3750": 19, "575": [19, 153, 194, 229], "3858": 19, "648": [19, 148, 194, 229], "3939": 19, "4032": 19, "799": [19, 143, 194, 229], "4092": 19, "4136": 19, "942": [19, 207, 229], "4158": 19, "1017": [19, 35, 193, 242], "4202": 19, "1089": [19, 193], "4225": 19, "1162": [19, 43, 207, 242, 274, 358, 556], "4251": 19, "1239": 19, "4294": 19, "1309": [19, 207], "4293": 19, "1365": 19, "4232": 19, "1435": 19, "4242": 19, "1495": 19, "4204": 19, "1555": 19, "4171": 19, "1628": 19, "4197": 19, "1702": [19, 181], "1754": [19, 193], "1818": 19, "4144": 19, "1883": 19, "4138": 19, "1954": 19, "4153": 19, "4115": 19, "2072": 19, "4096": [19, 21, 181, 266], "2134": [19, 193], "4080": 19, "2203": 19, "4093": 19, "2269": 19, "4094": 19, "2337": 19, "4103": 19, "2408": 19, "2477": 19, "4131": 19, "2551": 19, "4156": 19, "2625": 19, "4183": 19, "17it": [19, 33, 101, 106, 207, 224, 225, 228, 229, 233], "2699": 19, "4205": 19, "35it": [19, 34, 101, 110, 193, 194, 224, 225, 228, 229], "2773": 19, "4227": 19, "2847": 19, "4248": 19, "2918": 19, "4258": 19, "2993": 19, "4280": 19, "3068": 19, "4301": 19, "3141": 19, "4314": 19, "3216": 19, "3289": 19, "3361": 19, "4348": 19, "3437": 19, "4366": 19, "3510": 19, "3583": 19, "4382": 19, "3650": 19, "4371": 19, "3719": 19, "3795": 19, "4386": 19, "3870": 19, "3941": 19, "4014": 19, "4405": 19, "4087": 19, "4412": 19, "4160": 19, "4419": 19, "4231": 19, "4417": 19, "4297": 19, "4401": 19, "4404": 19, "4441": 19, "4406": 19, "4512": 19, "4580": 19, "4641": 19, "4362": 19, "4705": 19, "4773": 19, "4845": [19, 26], "4918": 19, "4350": [19, 184], "4986": 19, "4344": 19, "5041": 19, "5102": 19, "4271": 19, "5169": 19, "4265": 19, "5217": 19, "4196": 19, "5287": 19, "5360": 19, "4221": 19, "5432": 19, "4234": 19, "5498": 19, "4228": 19, "5564": 19, "5627": 19, "4206": 19, "5702": 19, "4229": 19, "5778": 19, "4254": 19, "5855": 19, "5927": 19, "6001": [19, 858], "6075": 19, "4319": 19, "6148": 19, "6221": 19, "4340": 19, "6288": 19, "4332": 19, "6362": 19, "6434": 19, "4347": 19, "6506": 19, "6577": 19, "6653": 19, "4377": 19, "6726": 19, "6798": 19, "4391": 19, "6871": 19, "6942": 19, "4397": 19, "7016": 19, "4407": 19, "7093": 19, "4426": 19, "7168": 19, "4439": 19, "7242": 19, "7314": 19, "4449": 19, "7391": 19, "4464": 19, "7467": 19, "4477": 19, "7542": 19, "4486": 19, "7619": 19, "7691": 19, "4498": 19, "7767": 19, "4511": 19, "7844": 19, "4523": 19, "7923": 19, "4542": 19, "8006": 19, "4572": 19, "8084": 19, "4586": 19, "8157": 19, "4585": 19, "8231": 19, "8309": 19, "4599": 19, "1767": 19, "144": [19, 42, 56, 80, 168, 170, 186, 202, 209, 229, 275, 876], "2558": 19, "3101": [19, 242], "294": [19, 110, 168, 229], "3375": [19, 50], "367": [19, 79, 107, 168, 198, 229], "3578": 19, "439": [19, 443], "3713": 19, "514": [19, 138, 181, 186, 229], "3844": 19, "587": [19, 108, 194, 207, 229], "3931": 19, "660": [19, 35, 79, 158, 163, 194, 229], "4002": [19, 35, 858], "809": [19, 140, 147, 194, 199, 212, 229], "4125": 19, "4159": 19, "957": [19, 142, 229], "4212": 19, "1032": [19, 168, 207], "4250": 19, "1104": [19, 194], "4272": 19, "1178": [19, 242], "4298": 19, "1248": 19, "4300": 19, "1320": 19, "4315": 19, "1390": 19, "1464": 19, "4327": 19, "1600": [19, 224], "4325": 19, "1676": 19, "1897": [19, 99, 225, 242, 391, 852], "2040": 19, "4396": 19, "2114": 19, "4410": [19, 59], "2190": 19, "4428": 19, "2261": 19, "2333": [19, 168, 550], "2407": 19, "2480": 19, "4445": 19, "2554": 19, "4451": 19, "2630": 19, "4467": 19, "2694": 19, "4438": 19, "2747": 19, "2801": 19, "2859": 19, "4273": 19, "2923": 19, "3002": 19, "3076": 19, "4309": 19, "3149": 19, "3224": 19, "3296": [19, 193], "4345": 19, "3366": 19, "3438": 19, "4353": 19, "3506": 19, "3573": 19, "3643": 19, "3787": 19, "3926": 19, "3987": 19, "4055": 19, "4102": 19, "4235": 19, "4148": 19, "4162": 19, "4097": [19, 181, 200], "4247": 19, "3992": 19, "3970": 19, "4411": [19, 59], "3950": 19, "4472": 19, "3942": 19, "4521": 19, "3895": 19, "4582": 19, "3889": 19, "4646": 19, "3892": 19, "4719": 19, "3924": 19, "4837": 19, "4905": 19, "3909": 19, "4974": 19, "3927": 19, "5039": 19, "3934": 19, "5106": 19, "3944": 19, "5171": 19, "3949": 19, "5242": 19, "3973": 19, "5304": [19, 51], "3967": 19, "5373": 19, "3984": 19, "5445": 19, "4009": 19, "5520": 19, "4042": 19, "5594": 19, "4071": 19, "5660": 19, "5728": 19, "4078": 19, "5788": 19, "4060": 19, "5862": 19, "4085": 19, "5934": 19, "4104": 19, "5998": 19, "4098": [19, 24, 43, 158, 159, 181, 851], "6069": 19, "4114": 19, "6135": 19, "6196": 19, "6269": 19, "4121": 19, "6334": 19, "4116": 19, "6407": 19, "6478": 19, "4150": 19, "6546": 19, "4154": 19, "6610": 19, "6684": 19, "6760": 19, "4194": 19, "6832": 19, "4208": 19, "6904": 19, "6971": 19, "4217": 19, "7045": 19, "7115": 19, "7180": 19, "4230": 19, "7247": 19, "7305": [19, 237, 242, 262, 263, 264, 265, 476, 477, 698, 700, 708, 714], "7373": 19, "7444": 19, "7517": 19, "4224": 19, "7590": 19, "7657": 19, "4237": 19, "7721": 19, "7774": 19, "4176": 19, "7841": 19, "7912": 19, "4189": 19, "7981": 19, "4195": 19, "8053": 19, "4207": 19, "8118": 19, "8166": 19, "8213": 19, "4077": 19, "8264": 19, "4028": 19, "4026": 19, "4147": 19, "sens": [19, 60, 69, 141, 159, 200, 205, 210, 239, 264, 265, 295, 296, 352, 356, 357, 367, 368, 369, 408, 415, 451, 452, 471, 473, 474, 534, 765, 783, 831, 835, 857, 858], "actual": [19, 23, 27, 41, 43, 60, 63, 79, 113, 126, 133, 143, 150, 157, 159, 161, 167, 169, 171, 174, 181, 182, 183, 184, 188, 189, 193, 198, 199, 200, 201, 215, 224, 226, 229, 232, 233, 234, 239, 255, 272, 442, 536, 556, 831, 835, 852, 858, 876], "valid_samples_": [19, 414], "grei": [19, 111, 141, 239, 264, 265, 696, 779, 876], "attempt": [19, 74, 193, 197, 226, 262, 263, 264, 265, 270, 276, 278, 373, 476, 477, 483, 493, 556, 627, 641, 806, 829, 831, 857, 876], "reflect": [19, 32, 60, 69, 118, 134, 140, 148, 150, 159, 160, 176, 180, 197, 202, 203, 205, 213, 262, 263, 264, 265, 295, 296, 352, 356, 357, 367, 368, 369, 408, 415, 446, 447, 448, 451, 452, 471, 473, 474, 476, 477, 534, 614, 676, 782, 783, 796, 831, 835, 851, 858, 876], "toward": [19, 43, 46, 54, 55, 69, 101, 159, 179, 199, 228, 239, 242, 450, 452, 538, 559, 858, 876], "directli": [19, 34, 43, 92, 93, 142, 143, 148, 169, 170, 171, 187, 189, 194, 198, 201, 202, 203, 204, 205, 215, 232, 238, 239, 254, 257, 259, 260, 261, 262, 263, 264, 265, 267, 269, 271, 273, 274, 277, 278, 310, 311, 316, 320, 357, 369, 408, 415, 444, 473, 476, 477, 478, 479, 484, 496, 555, 556, 570, 572, 614, 641, 696, 698, 700, 745, 760, 762, 773, 775, 782, 786, 795, 798, 801, 803, 805, 807, 853, 858, 866, 876], "obtain": [19, 38, 42, 43, 60, 88, 92, 93, 133, 136, 145, 150, 154, 156, 157, 169, 171, 174, 176, 177, 183, 184, 200, 202, 208, 213, 214, 221, 224, 226, 229, 238, 260, 262, 263, 264, 265, 266, 269, 273, 277, 278, 296, 307, 340, 342, 352, 354, 358, 371, 414, 416, 458, 459, 470, 473, 474, 476, 477, 484, 491, 495, 509, 523, 531, 542, 556, 560, 567, 582, 601, 609, 613, 619, 645, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 662, 663, 666, 670, 683, 684, 685, 686, 687, 697, 724, 727, 743, 762, 778, 801, 802, 807, 831, 851, 852, 856, 857, 858, 876], "via": [19, 133, 134, 135, 141, 143, 144, 148, 149, 156, 167, 168, 169, 170, 171, 174, 179, 197, 198, 199, 203, 204, 213, 216, 224, 225, 228, 232, 234, 237, 238, 242, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 272, 274, 275, 277, 278, 281, 295, 296, 307, 316, 320, 326, 327, 373, 410, 419, 442, 444, 446, 447, 460, 467, 476, 477, 489, 556, 677, 683, 684, 686, 687, 695, 698, 699, 700, 745, 759, 763, 764, 773, 777, 778, 782, 790, 796, 822, 831, 833, 835, 837, 838, 843, 855, 876], "procedur": [19, 111, 143, 160, 161, 187, 202, 203, 208, 224, 226, 227, 228, 234, 239, 242, 255, 257, 262, 263, 264, 265, 345, 352, 357, 416, 476, 477, 556, 557, 570, 572, 582, 592, 614, 683, 831, 852, 855, 858, 861, 876], "straightforward": [19, 101, 188, 200, 221, 858, 876], "sign": [19, 28, 38, 39, 47, 150, 203, 224, 227, 232, 264, 265, 269, 270, 273, 276, 277, 278, 333, 442, 450, 471, 473, 474, 510, 523, 524, 525, 526, 527, 582, 683, 684, 686, 687, 835, 858, 876], "strength": [19, 22, 35, 92, 150, 174, 203, 270, 276, 278, 570, 858], "direct": [19, 60, 78, 121, 133, 149, 155, 159, 160, 167, 177, 179, 184, 198, 204, 205, 207, 239, 242, 254, 260, 262, 263, 269, 270, 272, 273, 276, 277, 278, 288, 295, 296, 430, 442, 450, 476, 477, 487, 523, 566, 648, 698, 700, 743, 773, 785, 796, 806, 816, 831, 835, 841, 855, 857, 858, 876], "140": [19, 34, 79, 80, 110, 121, 155, 168, 204, 205, 207, 229, 242, 561, 858], "125": [19, 24, 35, 125, 136, 142, 155, 159, 168, 169, 194, 200, 228, 229, 336], "nbetween": 19, "giovanni": [19, 193, 242, 414, 852], "di": [19, 40, 142, 193, 242, 414, 852], "liberto": [19, 193, 242, 414, 852], "adam": [19, 134, 135, 193, 242, 414, 852, 863, 876], "bednar": [19, 193, 242, 414, 852], "edmund": [19, 193, 242, 414, 852], "fnhum": [19, 150, 193, 242, 414, 561, 852], "00604": [19, 193, 242, 414, 852], "017": [19, 20, 126, 139, 148, 168, 213, 221], "receptive_field_mtrf": [19, 20], "auto_examples_decod": 20, "290": [20, 64, 66, 79, 110, 143, 168, 183, 194, 224, 229, 242, 656], "ssd_spatial_filt": [20, 21], "529": [20, 21, 81, 194, 229], "08": [20, 34, 40, 42, 45, 50, 56, 58, 59, 72, 82, 89, 92, 100, 101, 104, 105, 107, 110, 128, 150, 159, 163, 165, 173, 175, 176, 177, 178, 179, 182, 183, 186, 193, 194, 200, 205, 207, 213, 220, 221, 224, 226, 227, 228, 229, 242, 695], "1030": 20, "retain": [21, 110, 148, 177, 198, 199, 213, 224, 257, 262, 263, 272, 275, 432, 556, 683, 684, 686, 687, 786, 833, 864, 876], "oscillatori": [21, 111, 221, 238, 242, 295, 296, 712, 722, 723, 726], "propos": [21, 239, 570, 575, 835], "surround": [21, 80, 99, 133, 239, 416, 561, 593, 691, 816, 835], "victoria": [21, 876], "peterson": [21, 876], "victoriapeterson09": 21, "freqs_sig": 21, "freqs_nois": 21, "sort_by_spectral_ratio": [21, 416], "filt_params_sign": [21, 416], "l_trans_bandwidth": [21, 111, 112, 200, 209, 262, 263, 264, 265, 410, 419, 444, 446, 476, 477, 588, 876], "filt_params_nois": [21, 416], "72000": [21, 80, 190], "196608": 21, "262144": 21, "327680": 21, "393216": 21, "458752": 21, "67108864": 21, "67174400": 21, "134742016": 21, "136314880": 21, "268435456": 21, "825": [21, 81, 112, 207, 229, 242, 556], "ratio": [21, 58, 86, 125, 143, 165, 194, 200, 203, 205, 221, 226, 227, 228, 229, 242, 269, 270, 273, 276, 277, 278, 285, 416, 538, 539, 540, 556, 557, 637, 654, 655, 696, 699, 746, 803, 851, 858, 876], "accord": [21, 155, 168, 169, 193, 213, 255, 262, 263, 264, 265, 414, 437, 476, 477, 484, 487, 491, 493, 551, 585, 602, 641, 646, 852, 858, 861, 876], "either": [21, 32, 43, 141, 148, 149, 150, 165, 166, 167, 169, 171, 189, 197, 201, 206, 208, 214, 215, 220, 224, 239, 254, 257, 259, 262, 263, 264, 265, 266, 269, 270, 271, 273, 275, 276, 277, 278, 286, 300, 319, 352, 408, 415, 416, 425, 435, 443, 466, 469, 476, 477, 506, 507, 509, 515, 521, 522, 555, 556, 558, 567, 570, 575, 584, 614, 624, 641, 643, 647, 648, 649, 661, 681, 682, 696, 697, 698, 700, 708, 718, 723, 724, 726, 727, 731, 743, 759, 760, 764, 767, 774, 775, 782, 786, 787, 795, 796, 797, 798, 801, 803, 805, 806, 807, 811, 835, 841, 851, 852, 855, 861, 876], "multipli": [21, 187, 200, 224, 267, 269, 270, 273, 276, 277, 278, 297, 416, 442, 523, 529, 696, 858, 861], "eq": [21, 416, 712, 722, 726, 858], "c_n": [21, 858], "reli": [21, 168, 199, 239, 310, 835, 851, 855, 858, 861, 864, 876], "suggest": [21, 26, 140, 143, 161, 199, 200, 201, 202, 203, 205, 262, 263, 287, 289, 743, 834, 839, 840, 855, 857], "pariet": [21, 49, 631, 743], "ssd_sourc": [21, 416], "psd": [21, 27, 67, 73, 90, 103, 104, 109, 131, 136, 165, 171, 194, 197, 201, 210, 216, 237, 238, 259, 262, 263, 264, 265, 267, 268, 272, 273, 357, 413, 449, 476, 477, 514, 519, 522, 529, 530, 534, 537, 553, 603, 618, 644, 698, 700, 703, 706, 714, 715, 737, 743, 759, 775, 797, 811, 852, 876], "psd_array_welch": [21, 237, 262, 263, 264, 265, 416, 476, 477, 698, 700, 866, 876], "n_fft": [21, 106, 107, 112, 131, 210, 237, 239, 262, 263, 264, 265, 416, 476, 477, 529, 697, 698, 700, 701, 703, 704, 706, 715, 725, 728, 797, 876], "spec_ratio": [21, 416], "alreadi": [21, 30, 31, 34, 35, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 69, 70, 73, 77, 84, 85, 92, 93, 113, 114, 117, 118, 125, 133, 134, 141, 143, 144, 148, 149, 150, 157, 158, 159, 161, 165, 168, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 187, 188, 197, 199, 200, 203, 204, 205, 208, 213, 219, 239, 254, 262, 263, 264, 265, 269, 270, 272, 273, 274, 276, 277, 278, 295, 296, 305, 307, 326, 352, 356, 357, 365, 367, 368, 369, 370, 378, 400, 401, 408, 415, 442, 443, 451, 452, 471, 473, 474, 476, 477, 517, 534, 567, 568, 572, 614, 634, 635, 697, 716, 764, 767, 783, 826, 835, 836, 837, 852, 855, 858, 859, 864, 876], "sorter": 21, "get_spectral_ratio": [21, 416], "spectral": [21, 27, 32, 33, 34, 67, 70, 103, 104, 110, 111, 112, 115, 131, 136, 141, 165, 171, 194, 199, 207, 221, 238, 242, 259, 262, 263, 264, 265, 267, 268, 273, 287, 288, 289, 295, 357, 413, 416, 449, 452, 476, 477, 514, 519, 522, 529, 530, 534, 537, 553, 556, 603, 611, 618, 644, 684, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 708, 713, 714, 715, 723, 724, 726, 727, 737, 743, 759, 769, 775, 797, 811, 852, 864, 876], "orang": [21, 150, 155, 189, 209, 229, 234, 800], "frac": [21, 148, 200, 201, 208, 224, 273, 531, 656, 709, 712, 722, 723, 724, 726, 727, 858], "p_f": 21, "p_": [21, 858], "sf": [21, 224], "spectrum": [21, 73, 81, 101, 102, 106, 110, 131, 136, 142, 164, 165, 171, 197, 201, 203, 205, 210, 216, 221, 238, 239, 240, 241, 242, 262, 263, 264, 265, 449, 476, 477, 556, 698, 714, 715, 717, 738, 786, 788, 797, 831, 861, 864, 866, 876], "lowest": [21, 239, 257, 262, 263, 264, 265, 268, 339, 572, 673, 696, 697, 699, 767, 777], "below50": 21, "bandfilt": 21, "loglog": 21, "fill_between": [21, 111, 150, 234, 238, 239], "10000": [21, 82, 109, 133, 437, 471, 582, 661, 685], "green": [21, 48, 49, 50, 79, 114, 150, 155, 180, 189, 205, 239, 264, 265, 743, 764, 777, 794, 800, 876], "enjoi": [21, 239], "situat": [21, 202, 206, 221, 272, 317, 435, 556, 835, 839, 857, 876], "chunk": [21, 78, 82, 136, 139, 145, 183, 208, 355, 357, 437, 476, 477, 556, 575, 646, 851, 876], "overlap": [21, 69, 82, 97, 107, 139, 145, 150, 165, 167, 190, 199, 208, 214, 215, 237, 242, 256, 262, 263, 264, 265, 324, 357, 410, 419, 432, 444, 446, 447, 466, 476, 477, 516, 517, 529, 542, 557, 572, 573, 584, 663, 682, 715, 743, 773, 797, 831, 876], "ssd_epoch": 21, "pattern_epoch": 21, "1251": 21, "1661": 21, "guido": [21, 242, 416], "nolt": [21, 242, 416], "gabriel": [21, 40, 202, 242, 416, 473, 555, 599], "curio": [21, 242, 416], "reliabl": [21, 101, 168, 201, 242, 416, 556], "basi": [21, 145, 161, 194, 242, 416, 429, 567, 575, 584, 855, 858, 876], "spatio": [21, 46, 59, 164, 183, 193, 194, 224, 225, 235, 236, 242, 262, 264, 265, 267, 273, 274, 275, 358, 414, 416, 431, 472, 473, 476, 522, 523, 537, 553, 584, 611, 624, 626, 651, 652, 653, 654, 655, 656, 657, 658, 668, 670, 671, 672, 676, 677, 679, 686, 687, 688, 743, 858, 876], "1528": [21, 242, 416], "1535": [21, 242, 416], "057": [21, 139, 141, 148, 168, 221, 242, 416], "produc": [22, 38, 80, 81, 115, 117, 126, 143, 160, 171, 178, 182, 189, 200, 202, 208, 224, 239, 242, 254, 257, 260, 262, 268, 272, 274, 275, 277, 278, 301, 302, 325, 328, 349, 353, 354, 355, 357, 364, 385, 466, 468, 476, 477, 509, 515, 516, 519, 529, 542, 556, 559, 565, 568, 569, 575, 581, 582, 601, 607, 611, 631, 645, 647, 648, 649, 650, 659, 660, 661, 662, 664, 683, 684, 685, 686, 687, 691, 743, 759, 760, 796, 825, 851, 857, 858, 861, 876], "abl": [22, 88, 133, 134, 136, 143, 158, 160, 164, 171, 202, 203, 208, 221, 232, 272, 447, 476, 477, 556, 786, 833, 835, 852, 855, 858, 864, 876], "region": [22, 38, 41, 47, 49, 92, 93, 126, 134, 136, 149, 154, 180, 189, 200, 201, 224, 225, 238, 239, 260, 262, 263, 264, 265, 275, 322, 410, 419, 444, 446, 447, 460, 461, 462, 466, 476, 477, 509, 601, 645, 656, 743, 773, 796, 799, 831, 851, 864, 876], "source_spac": [22, 275, 866, 876], "compute_distance_to_sensor": [22, 866, 876], "source_estim": [22, 27, 36, 56, 268, 273, 618, 624, 742], "surf_ori": [22, 47, 48, 49, 54, 55, 67, 157, 177, 220, 266, 362, 534, 876], "leadfield": [22, 41, 157, 162, 164, 171, 295, 296, 297, 876], "7498": [22, 31, 35, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 58, 59, 60, 67, 88, 90, 91, 92, 93, 129, 171, 174, 176, 177, 178, 180, 194, 220, 221], "combin": [22, 24, 29, 30, 31, 34, 35, 37, 40, 41, 42, 44, 47, 48, 49, 51, 54, 55, 58, 59, 67, 85, 88, 90, 91, 92, 93, 99, 110, 124, 126, 129, 130, 136, 139, 140, 141, 144, 149, 150, 154, 165, 167, 169, 174, 176, 177, 178, 179, 180, 181, 187, 189, 190, 193, 194, 197, 205, 206, 208, 209, 213, 215, 221, 224, 226, 229, 232, 234, 242, 254, 257, 262, 263, 264, 265, 268, 269, 270, 273, 275, 276, 277, 278, 288, 295, 296, 303, 304, 312, 352, 353, 354, 355, 360, 369, 385, 408, 413, 415, 427, 430, 467, 476, 477, 492, 517, 518, 523, 526, 529, 530, 532, 533, 556, 568, 569, 608, 618, 624, 631, 667, 696, 698, 699, 700, 703, 706, 714, 743, 759, 767, 774, 775, 782, 785, 803, 835, 858, 861, 864, 876], "local": [22, 26, 27, 33, 34, 35, 36, 40, 41, 42, 46, 47, 48, 49, 51, 54, 55, 56, 58, 59, 67, 69, 82, 88, 90, 92, 107, 111, 114, 118, 133, 149, 150, 151, 154, 157, 165, 170, 174, 178, 179, 183, 186, 190, 194, 205, 209, 221, 242, 259, 260, 261, 262, 263, 264, 265, 266, 267, 271, 273, 277, 295, 296, 298, 310, 314, 328, 340, 342, 351, 352, 356, 357, 362, 367, 368, 369, 371, 375, 376, 377, 378, 380, 381, 383, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 415, 429, 449, 451, 452, 465, 471, 473, 474, 476, 477, 483, 518, 519, 522, 523, 524, 534, 538, 555, 556, 564, 570, 576, 605, 614, 616, 629, 638, 641, 644, 653, 656, 658, 660, 695, 696, 698, 700, 735, 743, 752, 759, 760, 768, 771, 775, 780, 782, 783, 786, 795, 798, 802, 803, 805, 811, 816, 831, 833, 836, 841, 842, 844, 855, 858, 864, 876], "grad_map": 22, "sensitivity_map": [22, 26, 129, 157, 866], "mag_map": [22, 26], "eeg_map": 22, "204": [22, 34, 72, 75, 91, 111, 129, 145, 157, 165, 166, 167, 168, 171, 182, 183, 194, 197, 198, 199, 204, 205, 207, 208, 213, 214, 215, 216, 221, 229, 238, 876], "gain": [22, 24, 31, 41, 65, 88, 91, 92, 93, 107, 157, 179, 200, 221, 295, 296, 443, 452, 784, 791, 858, 876], "picks_meg": 22, "picks_eeg": 22, "sharex": [22, 45, 72, 88, 111, 193, 205, 239], "dipol": [22, 26, 27, 28, 31, 34, 35, 36, 39, 40, 41, 42, 46, 51, 56, 59, 60, 67, 81, 82, 90, 91, 92, 107, 117, 151, 154, 157, 164, 165, 168, 176, 178, 179, 181, 182, 183, 184, 185, 186, 190, 202, 219, 221, 242, 259, 261, 262, 263, 264, 265, 266, 267, 270, 273, 276, 277, 278, 295, 296, 297, 298, 300, 309, 340, 351, 362, 371, 387, 429, 449, 451, 453, 471, 472, 473, 474, 476, 477, 518, 522, 523, 525, 534, 543, 553, 603, 605, 606, 614, 616, 629, 631, 644, 648, 649, 653, 656, 658, 660, 662, 696, 698, 699, 700, 743, 752, 759, 760, 770, 771, 802, 806, 811, 831, 842, 844, 847, 851, 858, 861, 866, 876], "fontsiz": [22, 37, 110, 118, 125, 143, 175, 208, 802], "fig_2": [22, 171], "hist": [22, 69, 129, 143, 209], "ravel": [22, 109, 111, 115, 129, 193, 200, 225], "brain_sen": 22, "add_text": [22, 43, 47, 48, 49, 50, 54, 55, 174, 176, 178, 743], "font_siz": [22, 43, 47, 48, 49, 50, 54, 55, 174, 176, 178, 743], "02108201": 22, "32186553": 22, "minimum": [22, 31, 57, 69, 77, 81, 135, 139, 148, 150, 161, 165, 167, 176, 178, 179, 199, 200, 205, 220, 232, 242, 257, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 291, 292, 293, 294, 295, 296, 339, 341, 342, 357, 441, 444, 446, 447, 449, 451, 452, 476, 477, 519, 523, 524, 525, 526, 527, 529, 530, 534, 536, 538, 539, 540, 558, 559, 564, 572, 573, 575, 653, 656, 658, 661, 689, 696, 701, 702, 703, 704, 705, 706, 707, 725, 728, 743, 767, 781, 797, 800, 831, 842, 844, 851, 861, 876], "euclidean": [22, 268, 273, 275, 538, 656, 659, 662, 664, 667], "maxdep": 22, "vertno": [22, 43, 48, 49, 50, 157, 174, 177, 220, 232, 233, 234, 273, 275, 276, 861], "depths_map": 22, "brain_dep": 22, "like": [22, 26, 27, 31, 32, 34, 35, 36, 40, 41, 42, 47, 56, 59, 60, 69, 80, 81, 99, 107, 110, 125, 133, 134, 135, 139, 140, 141, 142, 143, 148, 149, 150, 154, 155, 159, 160, 161, 165, 166, 167, 168, 170, 171, 174, 176, 180, 181, 187, 188, 189, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 213, 214, 215, 216, 219, 224, 228, 239, 254, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 281, 286, 300, 301, 302, 305, 306, 307, 310, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 341, 345, 351, 352, 358, 363, 364, 365, 366, 383, 387, 408, 415, 431, 432, 437, 443, 449, 451, 460, 464, 466, 467, 468, 469, 470, 476, 477, 478, 480, 482, 493, 496, 499, 508, 509, 511, 513, 515, 518, 519, 522, 523, 525, 534, 542, 546, 555, 556, 561, 570, 573, 577, 581, 582, 584, 592, 598, 599, 601, 603, 605, 606, 607, 614, 619, 627, 628, 629, 631, 644, 645, 648, 649, 650, 659, 660, 661, 662, 665, 673, 677, 679, 682, 683, 684, 685, 686, 687, 691, 692, 695, 696, 698, 699, 700, 712, 717, 722, 731, 732, 735, 740, 743, 759, 760, 761, 767, 771, 773, 775, 777, 779, 781, 782, 783, 786, 790, 793, 795, 796, 797, 798, 799, 801, 803, 805, 806, 807, 816, 826, 829, 830, 831, 833, 834, 835, 836, 838, 839, 840, 841, 842, 843, 851, 853, 855, 857, 858, 861, 876], "corr": [22, 254], "gradiomt": 22, "815476": 22, "sensitivii": 22, "highest": [22, 133, 175, 203, 257, 260, 262, 263, 264, 265, 268, 452, 476, 477, 572, 673, 696, 697, 699, 771, 783, 858], "close": [22, 60, 69, 95, 105, 109, 115, 118, 125, 133, 139, 141, 143, 148, 150, 157, 159, 171, 190, 198, 199, 202, 203, 205, 206, 209, 216, 221, 224, 229, 260, 262, 263, 264, 265, 268, 340, 356, 378, 431, 451, 467, 468, 476, 477, 556, 573, 577, 667, 691, 698, 700, 743, 749, 750, 771, 773, 790, 796, 799, 835, 839, 847, 855, 858, 861, 876], "decreas": [22, 55, 110, 200, 221, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 408, 429, 476, 477, 556, 692, 696, 699, 723, 724, 726, 727, 743, 858, 876], "rapidli": 22, "inreas": 22, "confirm": [22, 47, 69, 170, 189, 199, 203, 835, 858], "134": [22, 25, 45, 69, 168, 170, 207, 229, 242, 275, 521, 564], "forward_sensitivity_map": [22, 25], "coregistr": [23, 27, 79, 155, 159, 160, 162, 163, 164, 180, 260, 267, 272, 275, 302, 306, 364, 370, 386, 427, 468, 481, 515, 519, 581, 635, 664, 691, 743, 759, 811, 849, 851, 864, 866, 876], "displai": [23, 24, 25, 27, 44, 47, 75, 110, 114, 123, 139, 142, 150, 155, 157, 159, 161, 165, 203, 206, 213, 216, 225, 229, 254, 255, 259, 262, 263, 264, 265, 266, 268, 269, 270, 273, 275, 276, 277, 278, 310, 362, 476, 477, 515, 553, 555, 556, 616, 637, 664, 696, 698, 700, 743, 744, 758, 759, 767, 772, 773, 774, 776, 777, 778, 779, 781, 782, 783, 784, 787, 788, 793, 796, 797, 798, 799, 801, 802, 804, 806, 807, 831, 833, 834, 838, 841, 847, 855, 858, 861, 864, 876], "cerebellum": [23, 25, 27, 41, 275, 644, 645, 759, 811], "volum": [23, 25, 27, 31, 36, 44, 56, 59, 70, 133, 134, 135, 154, 155, 157, 159, 165, 171, 175, 179, 208, 242, 254, 259, 260, 264, 266, 267, 269, 270, 273, 274, 275, 276, 277, 278, 301, 307, 310, 358, 442, 453, 461, 462, 471, 473, 474, 511, 519, 522, 523, 533, 534, 535, 537, 605, 614, 624, 627, 636, 644, 645, 668, 671, 688, 691, 732, 733, 743, 759, 801, 806, 807, 811, 816, 829, 831, 850, 851, 858, 864, 876], "morph": [23, 25, 27, 36, 40, 56, 132, 133, 135, 154, 159, 176, 180, 232, 233, 234, 254, 264, 266, 267, 268, 269, 273, 274, 275, 276, 277, 278, 358, 464, 481, 519, 522, 523, 537, 542, 543, 552, 553, 614, 616, 621, 624, 625, 626, 637, 645, 732, 733, 743, 801, 807, 816, 831, 851, 852, 861, 876], "its": [24, 69, 74, 92, 124, 134, 136, 139, 140, 142, 144, 149, 155, 157, 159, 165, 167, 168, 169, 170, 171, 174, 179, 182, 188, 189, 194, 197, 198, 200, 201, 203, 204, 205, 206, 208, 213, 214, 216, 224, 229, 237, 239, 242, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 310, 408, 411, 415, 422, 423, 442, 449, 473, 474, 475, 476, 477, 484, 491, 555, 556, 570, 652, 662, 682, 683, 684, 686, 687, 696, 698, 699, 700, 712, 715, 722, 733, 760, 767, 771, 774, 775, 782, 786, 794, 795, 796, 798, 801, 803, 805, 806, 831, 833, 834, 835, 839, 841, 851, 853, 855, 857, 858, 876], "freesurf": [24, 32, 33, 34, 38, 41, 43, 44, 47, 114, 134, 135, 155, 157, 160, 162, 163, 164, 171, 174, 181, 190, 242, 258, 260, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 301, 305, 306, 307, 310, 358, 363, 364, 365, 370, 382, 384, 385, 387, 390, 407, 427, 442, 460, 461, 462, 464, 466, 467, 468, 469, 470, 481, 509, 511, 513, 515, 542, 581, 601, 617, 618, 619, 620, 626, 627, 628, 629, 644, 645, 659, 662, 673, 691, 692, 694, 735, 742, 743, 754, 759, 761, 771, 801, 806, 807, 811, 816, 825, 826, 829, 831, 839, 841, 842, 847, 852, 855, 876], "alan": [24, 242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 696, 699, 876], "leggitt": [24, 876], "ucsf": 24, "setup_source_spac": [24, 41, 107, 154, 157, 159, 177, 190, 275, 626, 645, 666, 670, 851, 858, 866, 876], "setup_volume_source_spac": [24, 41, 50, 155, 157, 159, 206, 269, 270, 273, 275, 276, 277, 278, 442, 511, 626, 644, 858, 866, 876], "aseg_fnam": 24, "aseg": [24, 41, 134, 175, 180, 260, 269, 270, 273, 276, 277, 278, 442, 460, 461, 511, 645, 743, 831, 876], "mgz": [24, 30, 41, 44, 50, 133, 155, 157, 159, 160, 175, 179, 180, 181, 254, 269, 270, 273, 275, 276, 277, 278, 301, 305, 306, 307, 387, 442, 461, 511, 645, 761, 807, 831, 855, 858, 876], "surf": [24, 26, 41, 79, 107, 116, 134, 154, 155, 156, 157, 158, 159, 160, 171, 175, 180, 220, 224, 254, 260, 268, 273, 275, 277, 278, 305, 458, 459, 509, 514, 543, 604, 627, 659, 662, 693, 730, 743, 761, 771, 819, 851, 852, 858], "add_dist": [24, 41, 107, 157, 254, 644, 666, 670, 858, 876], "lh_surf": 24, "cortex": [24, 26, 31, 37, 41, 43, 52, 53, 54, 55, 58, 60, 92, 107, 114, 124, 133, 134, 144, 150, 157, 165, 177, 180, 189, 193, 203, 209, 221, 242, 269, 270, 273, 275, 276, 277, 278, 385, 414, 588, 601, 662, 743, 801, 806, 831, 851, 852, 858, 861, 876], "volume_label": [24, 41, 269, 270, 273, 275, 276, 277, 278, 442, 511, 645, 876], "lh_cereb": 24, "sphere_unit": [24, 157, 645, 876], "octahedron": [24, 41, 107, 155, 157, 159, 254, 269, 273, 277, 644, 801], "subdivis": [24, 41, 107, 157], "octahedr": [24, 41, 107, 157, 407], "vertex": [24, 26, 41, 48, 49, 50, 81, 88, 107, 155, 156, 157, 159, 160, 174, 176, 179, 180, 220, 221, 224, 234, 268, 269, 270, 273, 274, 275, 276, 277, 278, 280, 295, 296, 442, 464, 466, 509, 532, 533, 542, 556, 618, 619, 630, 631, 636, 662, 663, 664, 669, 672, 673, 688, 691, 692, 693, 742, 743, 858, 861, 876], "lh": [24, 26, 28, 29, 37, 38, 39, 41, 43, 47, 48, 49, 54, 55, 60, 67, 88, 90, 92, 93, 102, 106, 107, 114, 124, 125, 132, 134, 154, 155, 156, 157, 158, 159, 160, 171, 174, 175, 177, 178, 181, 182, 190, 220, 221, 233, 234, 254, 258, 268, 269, 270, 273, 276, 277, 278, 464, 509, 601, 619, 624, 634, 743, 801, 806, 826, 858], "triangl": [24, 26, 41, 52, 107, 155, 156, 157, 159, 160, 174, 177, 220, 268, 275, 407, 630, 665, 669, 672, 693, 858, 861], "neighbor": [24, 26, 41, 107, 141, 155, 156, 157, 160, 198, 220, 224, 226, 239, 320, 327, 339, 450, 499, 581, 666, 667, 668, 670, 671, 676, 683, 684, 686, 687, 693, 857, 858, 876], "geometri": [24, 41, 60, 69, 107, 157, 160, 182, 183, 208, 242, 254, 387, 408, 452, 627, 743, 831, 851, 876], "triangul": [24, 41, 52, 107, 157, 174, 225, 226, 254, 275, 316, 627, 630, 824, 829, 858, 861, 876], "155407": [24, 26, 41, 43, 52, 157, 159], "156866": [24, 26, 41, 43, 52, 157, 159], "132651": 24, "57769": 24, "50733": 24, "401": [24, 79, 207, 229], "voxel": [24, 41, 44, 50, 133, 155, 157, 159, 206, 224, 242, 272, 275, 277, 278, 358, 689, 690, 733, 743, 761, 807, 816, 858, 876], "neighborhood": [24, 41, 50, 155, 157, 206, 275], "005000": [24, 157], "001000": [24, 41, 50, 157], "556177": 24, "16777216": 24, "nonzero": [24, 209, 858], "coord_fram": [24, 107, 116, 121, 122, 123, 134, 135, 155, 156, 157, 158, 168, 169, 177, 181, 182, 183, 189, 208, 260, 266, 267, 275, 310, 323, 328, 429, 480, 508, 566, 567, 575, 584, 743, 759, 771, 861], "export": [24, 30, 41, 110, 113, 133, 139, 146, 147, 148, 154, 164, 167, 171, 188, 189, 217, 256, 262, 263, 264, 265, 269, 270, 273, 275, 276, 277, 278, 335, 337, 476, 477, 491, 611, 696, 698, 699, 700, 833, 835, 841, 846, 862, 866, 876], "nifti": [24, 30, 41, 154, 275, 277, 278, 876], "nii_fnam": [24, 41], "mne_sample_lh": 24, "nii": [24, 30, 41, 154, 254], "export_volum": [24, 41, 275, 876], "mri_resolut": [24, 30, 41, 44, 274, 275, 277, 278, 442, 876], "And": [24, 42, 54, 69, 107, 133, 159, 178, 180, 189, 194, 200, 205, 209, 275, 521, 531, 686, 687, 835, 851, 858], "freeview": [24, 133, 181, 855, 858, 876], "util": [24, 91, 145, 179, 188, 224, 262, 263, 438, 441, 476, 477, 738, 833, 835, 841, 845, 858, 866, 870, 876], "run_subprocess": 24, "mri_fnam": 24, "lut": [24, 461, 617, 743, 831], "opac": [24, 31, 35, 40, 46, 59, 90, 133, 155, 254, 272, 467, 698, 700, 743, 802, 808, 876], "jet": 24, "colorscal": 24, "slice": [24, 35, 40, 59, 133, 139, 142, 155, 157, 159, 171, 180, 193, 215, 228, 254, 256, 257, 260, 261, 262, 263, 264, 265, 267, 272, 277, 278, 308, 311, 325, 327, 357, 367, 410, 411, 414, 418, 421, 424, 429, 446, 447, 476, 477, 555, 556, 558, 571, 572, 573, 575, 578, 581, 590, 592, 599, 664, 682, 683, 684, 686, 687, 691, 696, 698, 699, 700, 702, 704, 705, 706, 707, 709, 721, 723, 724, 726, 727, 761, 767, 771, 773, 774, 777, 779, 780, 786, 787, 788, 790, 792, 794, 797, 807, 858, 861, 864, 876], "157": [24, 121, 136, 150, 157, 160, 163, 168, 169, 187, 209, 224, 228, 229, 242, 336, 656, 876], "365": [24, 25, 31, 40, 41, 45, 59, 79, 168, 205, 207, 224, 242, 268, 273, 352], "185": [24, 25, 168, 199, 207, 224, 228, 229, 275], "left_cerebellum_volume_sourc": [24, 25], "auto_examples_forward": 25, "source_space_morph": [25, 26], "578": [25, 26, 150, 229], "565": [25, 139, 147, 229], "oppos": [26, 60, 221, 345, 417, 831, 835, 861, 876], "evenli": [26, 206, 208, 264, 265, 357, 584, 780, 858], "caution": [26, 27, 141, 156, 168, 262, 263, 264, 265, 410, 476, 477, 478, 699, 752], "fname_tran": [26, 41, 50, 52, 122, 175, 180, 851], "sample_audvis_raw": [26, 29, 41, 45, 50, 52, 67, 70, 81, 90, 91, 92, 101, 102, 105, 106, 108, 109, 114, 116, 121, 122, 125, 139, 141, 145, 148, 149, 155, 157, 159, 161, 165, 166, 167, 169, 171, 175, 177, 180, 181, 197, 198, 201, 202, 204, 205, 206, 208, 213, 214, 215, 216, 220, 221, 226, 227, 228, 237, 254, 835], "fname_bem": [26, 41, 50, 158, 175, 180, 181], "fname_src_f": 26, "fsaverag": [26, 40, 43, 44, 123, 124, 133, 134, 135, 155, 156, 159, 170, 180, 189, 209, 232, 233, 234, 242, 260, 268, 269, 273, 274, 277, 278, 302, 310, 326, 358, 363, 364, 365, 370, 382, 384, 385, 464, 468, 515, 519, 542, 581, 633, 634, 664, 688, 691, 692, 743, 759, 801, 807, 816, 851, 876], "ico": [26, 40, 43, 135, 157, 158, 160, 190, 232, 233, 234, 254, 269, 273, 277, 280, 407, 513, 644, 668, 671, 801, 851, 861, 876], "read_info": [26, 64, 88, 90, 92, 93, 156, 157, 159, 168, 866], "pick_info": [26, 117, 134, 166, 168, 221, 866, 876], "src_f": [26, 44, 179], "read_source_spac": [26, 40, 43, 44, 134, 135, 155, 158, 159, 179, 232, 233, 234, 275, 828, 866], "src_morph": 26, "morph_source_spac": [26, 273, 276, 866, 876], "subject_to": [26, 40, 43, 44, 133, 232, 234, 254, 268, 274, 277, 278, 358, 542, 543, 621, 633, 634, 635, 636, 807, 816, 851], "return": [26, 31, 34, 67, 68, 74, 82, 90, 91, 92, 97, 101, 106, 107, 108, 111, 112, 113, 115, 119, 136, 139, 140, 143, 145, 148, 149, 150, 159, 160, 165, 166, 167, 168, 170, 177, 187, 203, 204, 205, 206, 208, 213, 215, 221, 224, 225, 228, 234, 237, 238, 239, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 375, 376, 377, 378, 380, 381, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 599, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 637, 638, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 730, 731, 732, 733, 734, 735, 736, 737, 741, 742, 743, 744, 745, 746, 747, 748, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 812, 813, 816, 817, 828, 829, 830, 853, 857, 858, 861, 876], "mag_map_f": 26, "to_original_src": [26, 273, 276, 876], "track": [26, 111, 141, 148, 165, 168, 190, 198, 201, 214, 215, 219, 556, 853, 864, 876], "sulcal": [26, 159, 743], "gyral": [26, 159, 743], "outlier": [26, 69, 156, 427, 556, 789], "mai": [26, 69, 73, 75, 81, 101, 133, 139, 140, 142, 143, 145, 148, 149, 150, 155, 157, 160, 165, 167, 169, 171, 187, 188, 189, 193, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 208, 209, 213, 214, 215, 216, 221, 226, 229, 232, 242, 257, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 272, 273, 276, 277, 278, 297, 316, 327, 328, 333, 351, 363, 407, 408, 410, 415, 417, 421, 427, 432, 438, 439, 440, 441, 442, 447, 458, 460, 467, 476, 477, 484, 491, 492, 496, 518, 523, 543, 555, 556, 558, 570, 572, 573, 575, 577, 584, 585, 602, 604, 606, 608, 614, 633, 635, 678, 682, 683, 684, 686, 687, 689, 691, 696, 698, 699, 700, 721, 723, 724, 725, 726, 727, 728, 743, 759, 760, 766, 773, 775, 777, 778, 780, 782, 786, 790, 795, 796, 798, 803, 805, 824, 833, 835, 836, 838, 839, 841, 842, 843, 850, 851, 853, 855, 857, 858, 861, 864, 876], "occur": [26, 44, 47, 69, 74, 88, 92, 93, 133, 139, 142, 143, 150, 160, 167, 199, 200, 205, 213, 226, 227, 255, 257, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 280, 295, 296, 352, 356, 357, 367, 368, 369, 408, 415, 431, 432, 434, 450, 451, 452, 471, 473, 474, 476, 477, 504, 534, 572, 573, 646, 696, 699, 773, 783, 796, 835, 836, 841, 851, 857, 858, 876], "kwarg": [26, 58, 107, 110, 114, 121, 140, 178, 179, 193, 200, 220, 238, 262, 263, 264, 265, 267, 272, 275, 411, 418, 476, 477, 482, 545, 696, 743, 744, 765, 780, 799, 802, 835], "smooth": [26, 38, 43, 59, 70, 81, 112, 132, 133, 134, 141, 150, 155, 165, 180, 193, 205, 224, 225, 232, 233, 234, 242, 262, 263, 264, 265, 268, 269, 270, 273, 274, 276, 277, 278, 358, 476, 477, 556, 565, 683, 684, 686, 687, 692, 712, 714, 722, 723, 724, 726, 727, 743, 752, 774, 801, 804, 806, 808, 809, 812, 854, 876], "smoothing_step": [26, 41, 42, 43, 55, 59, 60, 102, 107, 114, 129, 135, 174, 176, 178, 180, 220, 232, 269, 270, 273, 276, 277, 278, 743, 801, 806], "almost": [26, 112, 139, 167, 835, 858], "equidist": [26, 272], "unevenli": [26, 518], "achiev": [26, 43, 44, 110, 125, 141, 143, 145, 159, 160, 179, 200, 209, 215, 221, 264, 265, 352, 361, 509, 531, 556, 582, 601, 648, 649, 650, 659, 660, 662, 683, 684, 685, 686, 687, 783, 855, 858, 862, 864, 876], "closest": [26, 143, 156, 157, 213, 239, 257, 262, 263, 264, 265, 268, 275, 476, 477, 692, 698, 700, 743, 761, 775, 858, 876], "approxim": [26, 133, 169, 203, 213, 224, 242, 254, 259, 262, 263, 264, 265, 269, 270, 271, 273, 276, 277, 278, 310, 408, 415, 429, 444, 445, 447, 459, 476, 477, 555, 556, 567, 570, 575, 584, 644, 696, 698, 700, 708, 760, 767, 768, 775, 777, 779, 782, 783, 786, 793, 795, 797, 798, 799, 803, 805, 831, 858, 876], "brain_subject": 26, "time_label": [26, 33, 34, 59, 60, 107, 122, 129, 221, 232, 233, 234, 264, 265, 269, 270, 273, 276, 277, 278, 743, 778, 801, 806], "brain_f": 26, "remap": [26, 27, 76, 83, 264, 265, 614, 876], "destin": [26, 43, 44, 78, 154, 159, 256, 259, 260, 262, 263, 264, 265, 269, 270, 272, 273, 274, 275, 276, 277, 278, 286, 306, 307, 310, 358, 370, 407, 429, 438, 439, 440, 441, 476, 477, 508, 541, 543, 555, 556, 575, 584, 633, 634, 636, 696, 697, 698, 699, 700, 729, 730, 785, 818, 819, 820, 821, 822, 823, 824, 827, 828, 829, 830, 861, 876], "sourcespac": [26, 41, 43, 45, 50, 107, 157, 158, 159, 175, 206, 266, 268, 269, 270, 273, 276, 277, 278, 280, 358, 442, 462, 472, 510, 511, 519, 532, 533, 538, 543, 626, 644, 645, 646, 653, 656, 658, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 688, 691, 692, 743, 759, 761, 801, 806, 807, 828, 831, 858, 866, 876], "n_vertic": [26, 41, 43, 53, 107, 157, 158, 159, 258, 268, 269, 270, 273, 276, 277, 278, 452, 538, 627, 630, 664, 683, 684, 686, 687, 694, 742, 743, 824, 829], "n_use": [26, 41, 43, 45, 50, 107, 157, 158, 159, 175, 206], "10242": [26, 43, 158, 232, 233, 234, 268, 280, 464, 688, 851], "coord": [26, 41, 43, 45, 50, 107, 123, 157, 158, 159, 160, 175, 206, 340, 451, 743, 744, 813, 829], "conductor": [26, 41, 45, 50, 107, 155, 157, 158, 175, 181, 302, 451, 520, 645, 759, 831, 858, 876], "20484": [26, 135, 158, 160, 232, 233, 254, 513], "999310": [26, 41, 50, 157, 175, 180, 181], "009985": [26, 41, 50, 157, 175, 180, 181], "035787": [26, 41, 50, 157, 175, 180, 181], "012759": [26, 41, 50, 157, 175, 180, 181], "812405": [26, 41, 50, 157, 175, 180], "582954": [26, 41, 50, 157, 175, 180], "034894": [26, 41, 50, 157, 175, 180, 181], "583008": [26, 41, 50, 157, 175, 180], "811716": [26, 41, 50, 157, 175, 180, 181], "991420": [26, 41, 45, 50, 157, 175, 180], "039936": [26, 41, 45, 50, 157, 175, 180], "124467": [26, 41, 45, 50, 157, 175, 180], "060661": [26, 41, 45, 50, 157, 175, 180], "984012": [26, 41, 45, 50, 157, 175, 180], "167456": [26, 41, 45, 50, 157, 175, 180], "115790": [26, 41, 45, 50, 157, 175, 180], "173570": [26, 41, 45, 50, 157, 175, 180], "977991": [26, 41, 45, 50, 157, 175, 180], "homogen": [26, 41, 50, 107, 157, 175, 206, 858, 861, 876], "2154": 26, "8088": 26, "8079": 26, "10233": [26, 876], "4685": 26, "8129": 26, "8125": 26, "10237": 26, "20470": 26, "00205101": 26, "08784125": 26, "17433707": 26, "566": [26, 68], "work": [27, 31, 67, 69, 74, 77, 81, 85, 131, 133, 136, 137, 138, 139, 143, 146, 147, 148, 149, 150, 154, 155, 159, 160, 165, 166, 167, 168, 172, 173, 174, 176, 177, 180, 183, 187, 189, 191, 192, 194, 197, 199, 201, 202, 203, 204, 205, 208, 209, 213, 215, 216, 218, 221, 226, 229, 232, 234, 237, 238, 239, 242, 249, 253, 256, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 307, 310, 311, 314, 316, 321, 324, 326, 330, 336, 345, 351, 353, 357, 358, 359, 361, 364, 369, 380, 383, 386, 408, 409, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 431, 435, 437, 442, 443, 448, 449, 460, 468, 471, 473, 474, 476, 477, 482, 486, 489, 511, 513, 514, 517, 519, 521, 522, 523, 524, 525, 526, 527, 529, 530, 534, 540, 547, 551, 552, 553, 555, 556, 557, 569, 584, 598, 607, 611, 616, 622, 626, 627, 628, 629, 644, 645, 673, 691, 696, 698, 699, 700, 743, 744, 746, 759, 765, 767, 773, 775, 776, 781, 782, 786, 790, 795, 796, 798, 803, 809, 811, 813, 816, 821, 831, 834, 835, 836, 840, 841, 842, 852, 853, 857, 858, 859, 861, 864, 876], "variou": [27, 62, 99, 118, 119, 134, 140, 149, 154, 164, 168, 169, 176, 177, 185, 186, 187, 188, 191, 197, 200, 201, 203, 205, 211, 213, 215, 221, 224, 225, 259, 264, 267, 273, 328, 522, 523, 534, 556, 584, 605, 614, 616, 743, 765, 851, 855, 857, 858, 859, 861, 865, 876], "often": [27, 69, 73, 74, 81, 133, 139, 141, 149, 165, 167, 168, 174, 177, 179, 187, 189, 194, 198, 200, 201, 204, 206, 208, 214, 215, 226, 239, 264, 265, 269, 270, 273, 276, 277, 278, 295, 296, 352, 356, 357, 367, 368, 369, 408, 415, 451, 452, 471, 473, 474, 534, 585, 743, 783, 801, 806, 831, 835, 839, 840, 851, 855, 857, 858, 859, 876], "lack": [27, 69, 189, 259, 271, 286, 300, 522, 585, 731, 859], "narr": [27, 164, 831, 859], "explan": [27, 72, 141, 154, 164, 228, 698, 859, 863], "discov": [27, 853, 859, 876], "ve": [27, 113, 139, 148, 150, 155, 159, 170, 197, 199, 203, 205, 213, 214, 216, 239, 813, 835, 853, 855, 859], "flag": [27, 133, 164, 166, 254, 262, 263, 267, 269, 270, 273, 276, 277, 278, 307, 476, 477, 513, 762, 796, 801, 806, 807, 835, 851, 855, 876], "tutorial_script": [27, 164], "them": [27, 47, 50, 69, 73, 113, 125, 132, 133, 134, 136, 139, 140, 141, 143, 144, 148, 149, 150, 155, 159, 160, 164, 165, 167, 169, 170, 171, 190, 197, 198, 199, 200, 202, 203, 204, 205, 207, 208, 209, 213, 214, 215, 221, 224, 225, 232, 234, 239, 254, 256, 262, 263, 264, 265, 268, 289, 290, 293, 357, 360, 365, 411, 412, 426, 487, 488, 517, 518, 525, 527, 530, 551, 555, 556, 574, 585, 592, 606, 611, 650, 660, 673, 700, 738, 789, 831, 833, 835, 843, 851, 852, 853, 857, 858, 861, 864, 876], "shortcut": [27, 216, 733, 743, 876], "intention": [27, 207], "record": [27, 62, 65, 69, 73, 81, 82, 107, 133, 136, 139, 143, 145, 150, 155, 161, 165, 167, 168, 169, 171, 174, 183, 185, 187, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 213, 214, 215, 219, 221, 224, 239, 242, 256, 257, 262, 263, 264, 265, 267, 272, 279, 318, 345, 352, 357, 361, 400, 431, 440, 476, 477, 485, 489, 496, 499, 504, 505, 517, 556, 558, 559, 560, 564, 566, 567, 575, 584, 585, 592, 598, 614, 641, 682, 696, 698, 699, 700, 776, 790, 796, 831, 842, 847, 851, 852, 853, 855, 858, 861, 864, 876], "past": [27, 150, 200, 420, 646, 839, 855, 857, 861], "recip": [27, 62, 835], "write": [27, 29, 41, 62, 66, 106, 108, 139, 159, 160, 169, 170, 171, 176, 188, 201, 213, 234, 237, 254, 256, 259, 260, 264, 265, 267, 268, 269, 270, 272, 275, 276, 278, 286, 305, 350, 449, 481, 508, 541, 555, 600, 605, 695, 729, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 835, 838, 839, 851, 853, 855, 858, 864, 876], "manipul": [27, 62, 139, 148, 164, 217, 361, 475, 476, 477, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 516, 852, 858, 865, 876], "ensembl": [27, 62, 66, 136, 267, 371, 477], "neo": [27, 62, 66, 187, 267, 371, 477, 876], "xdf": [27, 62, 66, 267, 371, 477], "anatomi": [27, 87, 89, 155, 174, 259, 262, 264, 265, 266, 267, 268, 273, 275, 306, 477, 481, 522, 523, 534, 605, 611, 616, 619, 646, 648, 649, 650, 661, 743, 831, 852, 876], "css": [27, 76, 83, 171, 242, 259, 265, 266, 267, 268, 272, 273, 362, 476, 553, 554, 571, 605, 616, 619, 660, 662, 876], "bridg": [27, 76, 83, 242, 267, 310, 326, 371, 477, 482, 564, 583, 763, 805, 876], "much": [27, 44, 55, 73, 76, 81, 83, 133, 136, 139, 140, 141, 143, 148, 160, 164, 165, 169, 182, 190, 194, 200, 202, 203, 204, 205, 206, 207, 210, 213, 221, 239, 242, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 310, 326, 371, 432, 443, 447, 448, 476, 477, 482, 564, 583, 637, 763, 805, 835, 838, 839, 858, 864, 876], "gel": [27, 76, 83, 267, 310, 326, 371, 477, 482, 564, 583, 763, 805, 876], "densiti": [27, 32, 33, 34, 67, 74, 76, 77, 83, 103, 104, 117, 131, 133, 136, 141, 159, 160, 165, 171, 189, 194, 198, 199, 207, 221, 238, 242, 259, 262, 263, 264, 265, 267, 268, 273, 288, 295, 324, 357, 369, 413, 449, 476, 477, 514, 519, 522, 529, 530, 534, 537, 553, 556, 564, 565, 586, 587, 591, 603, 611, 618, 644, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 713, 714, 715, 737, 743, 759, 769, 775, 797, 811, 831, 852, 858, 861, 876], "csd": [27, 32, 33, 34, 76, 83, 103, 104, 168, 221, 262, 263, 264, 265, 267, 288, 295, 309, 324, 328, 369, 449, 476, 477, 553, 565, 611, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 713, 716, 769, 831, 876], "nir": [27, 76, 83, 209, 256, 267, 477, 504, 832, 842, 858, 865, 866, 876], "maxwel": [27, 76, 82, 83, 164, 165, 183, 197, 211, 212, 262, 264, 265, 267, 295, 296, 340, 342, 345, 346, 349, 352, 356, 357, 367, 368, 369, 408, 415, 429, 449, 451, 452, 471, 473, 474, 476, 477, 534, 567, 575, 584, 585, 783, 785, 876], "movement": [27, 73, 74, 76, 81, 83, 110, 136, 164, 197, 203, 204, 205, 211, 212, 215, 216, 242, 254, 256, 262, 264, 265, 267, 339, 340, 341, 342, 343, 345, 347, 349, 350, 361, 429, 449, 467, 476, 489, 560, 563, 575, 584, 649, 661, 759, 766, 778, 785, 811, 831, 852, 876], "reestim": [27, 76, 83, 256, 267, 342, 343, 361, 489, 560, 563, 566, 759, 785, 811, 876], "dev_head_t": [27, 76, 78, 83, 155, 165, 168, 213, 256, 267, 313, 342, 343, 361, 371, 489, 560, 563, 567, 575, 584, 647, 648, 649, 661, 759, 785, 811, 861, 876], "muscl": [27, 76, 83, 143, 203, 242, 256, 310, 326, 489, 491, 556, 561, 876], "denois": [27, 76, 83, 194, 259, 262, 264, 265, 267, 352, 357, 416, 428, 449, 451, 476, 520, 553, 557, 567, 592, 611, 774, 876], "oversampl": [27, 76, 83, 242, 262, 264, 265, 352, 428, 449, 451, 476, 520, 592], "shift": [27, 74, 76, 83, 133, 139, 165, 193, 197, 200, 201, 206, 216, 242, 257, 260, 261, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 414, 436, 476, 477, 484, 491, 547, 556, 558, 581, 591, 614, 696, 699, 708, 743, 784, 796, 807, 876], "2d": [27, 31, 35, 40, 59, 94, 95, 117, 120, 128, 150, 171, 189, 194, 198, 201, 203, 204, 205, 206, 224, 229, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 310, 311, 316, 319, 327, 336, 364, 416, 419, 423, 425, 446, 447, 476, 477, 488, 496, 506, 511, 556, 681, 683, 684, 743, 744, 755, 759, 760, 764, 781, 802, 804, 805, 811, 812, 813, 815, 831, 839, 852, 876], "arrowmap": [27, 120, 128, 264, 267, 489, 552, 553, 614, 760, 876], "layout": [27, 47, 98, 113, 120, 128, 130, 131, 141, 149, 150, 158, 188, 210, 226, 262, 263, 264, 265, 267, 271, 317, 319, 321, 324, 325, 326, 336, 371, 476, 477, 483, 487, 489, 499, 500, 520, 696, 698, 700, 744, 748, 756, 759, 767, 781, 792, 795, 804, 810, 811, 831, 858, 866, 876], "parcel": [27, 38, 41, 67, 88, 92, 93, 120, 128, 134, 154, 175, 180, 220, 242, 268, 382, 384, 385, 460, 601, 619, 743, 754, 826, 831, 876], "roi": [27, 38, 120, 128, 150, 154, 198, 225, 242, 260, 262, 264, 265, 267, 322, 434, 437, 492, 523, 743, 779, 831, 858, 861, 876], "rt": [27, 120, 128, 167, 262, 267, 322, 434, 437, 492], "room": [27, 120, 125, 128, 141, 150, 161, 171, 183, 190, 201, 203, 204, 206, 208, 209, 210, 214, 242, 273, 352, 357, 476, 566, 567, 575, 584, 585, 766, 831, 851, 858, 876], "lock": [27, 103, 104, 139, 155, 161, 167, 202, 205, 228, 239, 242, 257, 262, 267, 268, 432, 449, 476, 522, 537, 540, 553, 556, 618, 790, 855], "vectorview": [27, 61, 103, 104, 117, 169, 182, 255, 259, 264, 265, 267, 273, 311, 317, 318, 332, 336, 357, 387, 428, 429, 476, 514, 519, 529, 534, 567, 575, 584, 603, 644, 737, 743, 759, 811, 831, 847, 852, 858], "induc": [27, 103, 104, 105, 161, 165, 226, 227, 228, 239, 242, 262, 263, 267, 273, 449, 476, 522, 537, 539, 540, 553, 696, 699, 712, 722, 723, 726, 855, 876], "erd": [27, 103, 104, 238, 242, 259, 262, 263, 264, 265, 271, 361, 408, 415, 437, 476, 477, 491, 555, 556, 683, 696, 698, 699, 700, 727, 760, 775, 782, 786, 795, 798, 803, 805, 852, 876], "multitap": [27, 73, 81, 101, 103, 104, 107, 136, 141, 142, 165, 171, 194, 203, 229, 237, 238, 242, 262, 263, 264, 265, 267, 285, 371, 421, 447, 476, 477, 529, 696, 698, 699, 700, 703, 706, 723, 724, 725, 726, 727, 728, 747, 864, 876], "morlet": [27, 32, 101, 103, 104, 111, 165, 200, 228, 229, 242, 262, 267, 285, 371, 421, 477, 696, 699, 702, 705, 710, 721, 723, 726, 727, 728, 747, 866, 874, 876], "stockwel": [27, 103, 104, 229, 242, 262, 267, 285, 371, 477, 696, 699, 723, 725, 726, 727, 728, 747, 876], "hilbert": [27, 80, 103, 104, 111, 166, 229, 262, 263, 264, 265, 267, 285, 371, 476, 477, 696, 699, 723, 726, 727, 728, 747, 876], "permut": [27, 96, 100, 110, 164, 224, 225, 226, 227, 230, 231, 234, 235, 236, 242, 262, 264, 265, 267, 273, 274, 275, 316, 358, 431, 476, 522, 523, 537, 547, 553, 611, 624, 626, 668, 676, 683, 684, 685, 686, 687, 688, 699, 726, 743, 764, 767, 864, 876], "1d": [27, 96, 100, 115, 208, 262, 267, 281, 285, 473, 474, 476, 511, 553, 567, 575, 584, 593, 611, 683, 684, 686, 687, 747, 784], "fdr": [27, 96, 99, 100, 262, 267, 476, 553, 611, 674, 680, 876], "rer": [27, 96, 100, 262, 264, 265, 267, 351, 449, 476, 553, 682], "p": [27, 47, 51, 58, 94, 95, 96, 98, 99, 100, 110, 133, 155, 159, 171, 187, 200, 221, 224, 225, 226, 228, 229, 232, 233, 234, 239, 242, 254, 260, 261, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 351, 447, 449, 471, 476, 477, 534, 553, 556, 567, 653, 656, 658, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 690, 696, 699, 761, 774, 835, 851, 855, 858, 876], "sloreta": [27, 28, 30, 31, 36, 38, 39, 41, 48, 50, 56, 59, 88, 102, 164, 165, 174, 177, 178, 180, 185, 186, 220, 232, 234, 242, 259, 262, 264, 265, 267, 268, 269, 270, 273, 276, 277, 278, 352, 449, 476, 522, 523, 524, 525, 526, 527, 529, 530, 534, 535, 536, 537, 539, 540, 616, 618, 743, 768, 831, 876], "timecours": [27, 33, 36, 42, 56, 259, 260, 262, 264, 265, 266, 267, 273, 277, 286, 290, 295, 300, 449, 451, 476, 518, 522, 523, 525, 534, 603, 605, 606, 616, 631, 697, 699, 707, 726, 743], "dic": [27, 31, 36, 56, 101, 164, 179, 222, 223, 242, 259, 262, 266, 267, 273, 286, 287, 288, 289, 290, 292, 295, 296, 352, 356, 449, 476, 477, 482, 512, 522, 523, 524, 534, 547, 552, 553, 616, 631, 650, 661, 697, 699, 705, 707, 726, 743, 768, 831, 842, 852, 876], "beamform": [27, 36, 51, 56, 101, 164, 165, 185, 186, 221, 242, 259, 262, 264, 265, 266, 267, 273, 274, 275, 277, 278, 352, 356, 358, 362, 369, 449, 451, 476, 524, 532, 534, 553, 605, 616, 626, 697, 699, 705, 707, 726, 743, 768, 831, 844, 852, 866, 876], "er": [27, 32, 33, 36, 56, 110, 238, 242, 259, 262, 263, 266, 267, 273, 288, 292, 295, 296, 352, 356, 449, 476, 524, 534, 553, 616, 682, 705, 743, 768, 774, 852, 876], "lcmv": [27, 31, 36, 56, 164, 174, 185, 186, 259, 262, 264, 265, 266, 267, 273, 274, 275, 277, 278, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 352, 356, 358, 362, 369, 449, 452, 476, 524, 532, 534, 553, 605, 616, 626, 705, 743, 768, 831, 876], "spars": [27, 36, 44, 46, 56, 117, 174, 224, 229, 232, 234, 242, 254, 259, 260, 264, 266, 267, 273, 274, 275, 306, 316, 327, 358, 369, 371, 452, 471, 472, 473, 474, 522, 523, 534, 605, 614, 616, 626, 662, 676, 682, 683, 684, 686, 687, 743, 770, 771, 802, 835, 842, 844, 858, 861, 876], "gamma": [27, 36, 56, 110, 111, 115, 242, 259, 262, 263, 264, 265, 266, 267, 273, 369, 471, 472, 476, 477, 531, 605, 614, 616, 698, 700, 712, 722, 723, 726, 770, 771, 775, 802, 858, 861, 876], "bayesian": [27, 36, 56, 242, 259, 264, 266, 267, 273, 352, 369, 471, 472, 605, 614, 616, 770, 771, 802, 842, 858], "mix": [27, 36, 56, 59, 101, 194, 203, 239, 242, 259, 260, 264, 266, 267, 269, 270, 273, 274, 275, 276, 277, 278, 295, 296, 358, 442, 453, 471, 472, 473, 474, 511, 519, 522, 523, 534, 556, 582, 605, 614, 616, 619, 624, 626, 644, 645, 651, 652, 653, 654, 655, 656, 657, 658, 688, 691, 743, 770, 771, 786, 801, 802, 806, 864, 876], "norm": [27, 31, 36, 47, 48, 49, 50, 56, 57, 59, 77, 82, 114, 148, 155, 161, 165, 176, 178, 184, 205, 220, 221, 242, 259, 260, 262, 263, 264, 265, 266, 267, 273, 274, 275, 358, 452, 471, 472, 473, 474, 476, 477, 522, 523, 524, 525, 526, 527, 529, 530, 532, 533, 534, 536, 538, 539, 540, 605, 614, 616, 626, 653, 656, 658, 708, 770, 771, 800, 802, 831, 842, 844, 851, 861, 876], "mxne": [27, 31, 36, 56, 174, 259, 260, 262, 264, 265, 266, 267, 273, 274, 275, 352, 358, 449, 472, 473, 474, 522, 523, 534, 605, 614, 616, 626, 743, 770, 771, 802, 831, 876], "irmxn": [27, 36, 56, 259, 260, 264, 266, 267, 273, 274, 275, 358, 472, 473, 522, 523, 534, 605, 614, 616, 626, 770, 771, 802], "volumetr": [27, 36, 50, 56, 134, 157, 159, 174, 176, 180, 264, 269, 270, 273, 274, 275, 276, 277, 278, 358, 511, 522, 523, 537, 614, 625, 626, 743, 801, 806, 807, 809, 816, 831, 864, 876], "xfit": [27, 36, 56, 259, 260, 262, 264, 265, 266, 267, 277, 300, 449, 451, 476, 518, 522, 523, 525, 534, 603, 605, 606, 631, 876], "reweight": [27, 36, 40, 56, 242, 259, 262, 264, 265, 266, 273, 352, 449, 472, 473, 474, 616, 802], "tf": [27, 31, 36, 56, 59, 200, 259, 262, 264, 265, 266, 273, 352, 449, 472, 474, 616, 802, 876], "multiscal": [27, 36, 56, 259, 262, 264, 265, 266, 273, 352, 449, 472, 474, 616, 802], "circular": [27, 36, 56, 150, 220, 273, 275, 362, 466, 533, 535, 537, 616, 619, 743, 748, 842, 858, 876], "graph": [27, 36, 56, 115, 242, 273, 275, 362, 533, 535, 537, 616, 619, 666, 667, 668, 669, 670, 671, 672, 743, 748, 876], "spread": [27, 36, 42, 54, 55, 56, 70, 79, 81, 82, 111, 164, 167, 200, 205, 206, 208, 222, 223, 242, 259, 262, 264, 265, 266, 267, 268, 273, 275, 277, 352, 362, 449, 476, 519, 522, 523, 524, 532, 533, 534, 535, 537, 538, 564, 584, 605, 614, 616, 619, 645, 658, 660, 663, 743, 835, 858, 876], "psf": [27, 36, 54, 55, 56, 259, 264, 266, 267, 273, 275, 277, 362, 519, 522, 532, 533, 534, 535, 538, 605, 614, 616, 645, 743, 876], "talk": [27, 36, 56, 159, 200, 208, 226, 259, 262, 264, 266, 267, 273, 286, 296, 297, 352, 362, 369, 429, 449, 522, 532, 533, 534, 535, 538, 553, 566, 575, 584, 605, 614, 616, 743, 831, 857, 876], "rap": [27, 36, 56, 242, 259, 264, 266, 298, 605, 614, 616, 770, 771, 876], "music": [27, 36, 56, 203, 242, 259, 264, 266, 298, 605, 614, 616, 770, 771, 876], "resolut": [27, 30, 36, 44, 47, 48, 50, 56, 112, 118, 133, 145, 155, 156, 157, 175, 210, 226, 227, 242, 255, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 297, 358, 362, 408, 415, 442, 464, 467, 476, 477, 522, 523, 532, 533, 534, 535, 538, 554, 555, 556, 605, 614, 616, 696, 698, 700, 712, 722, 723, 724, 725, 726, 727, 728, 743, 760, 775, 782, 786, 795, 798, 801, 803, 805, 806, 831, 842, 851, 857, 858, 876], "auto_examples_python": 27, "auto_examples_jupyt": 27, "fname_raw": [28, 29, 61, 101, 102, 125, 156, 181, 207], "fname_ev": [28, 92, 101, 102], "label_nam": [28, 29, 47, 90, 92, 102, 105, 180, 220, 461], "fname_label": [28, 29, 102, 105, 106], "assumpt": [28, 107, 119, 139, 140, 143, 151, 161, 200, 204, 208, 224, 264, 265, 592, 678, 783, 855, 858, 876], "read_label": [28, 29, 37, 39, 90, 102, 105, 106, 273, 276, 646, 866], "add": [28, 37, 43, 44, 69, 73, 88, 92, 93, 99, 112, 118, 124, 125, 133, 135, 139, 140, 142, 143, 150, 160, 167, 170, 171, 174, 175, 180, 188, 190, 193, 197, 198, 199, 201, 203, 204, 206, 213, 215, 220, 221, 224, 229, 239, 254, 256, 258, 259, 262, 263, 264, 265, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 310, 370, 408, 410, 415, 419, 432, 444, 446, 447, 467, 476, 477, 555, 556, 566, 568, 569, 570, 604, 626, 635, 638, 643, 644, 646, 647, 648, 649, 650, 660, 693, 696, 698, 699, 700, 738, 743, 746, 760, 763, 764, 773, 775, 780, 782, 786, 795, 798, 803, 805, 812, 831, 833, 835, 838, 841, 842, 861, 876], "053": [28, 49, 68, 72, 90, 91, 102, 105, 106, 108, 109, 115, 150, 161, 165, 166, 167, 168, 176, 197, 198, 199, 204, 205, 206, 208, 213, 214, 215, 216, 221, 226, 227], "sqrt": [28, 115, 182, 183, 220, 221, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 561, 582, 712, 722, 726, 797, 858], "mean_stc": 28, "flip": [28, 38, 39, 113, 160, 203, 224, 254, 269, 270, 273, 276, 277, 278, 301, 442, 510, 683, 813, 858, 876], "cancel": [28, 79, 179, 200, 208, 269, 270, 273, 276, 277, 278, 429, 442, 556, 584, 787, 851, 858, 861], "label_sign_flip": [28, 866, 876], "label_mean": 28, "label_mean_flip": 28, "stc_evok": 28, "sub": [28, 32, 33, 34, 41, 46, 65, 69, 81, 111, 145, 154, 169, 210, 238, 239, 262, 263, 264, 265, 267, 435, 476, 477, 582, 645, 697, 743, 769, 847, 855, 858, 876], "stc_evoked_label": 28, "in_label": [28, 37, 38, 39, 273, 276, 277, 278, 876], "care": [28, 34, 140, 149, 150, 159, 200, 203, 204, 213, 215, 369, 474, 682, 858, 876], "polar": [28, 47, 141, 205, 765], "label_mean_evok": 28, "1711": [28, 34, 45, 105, 119, 130, 141, 144, 145, 151, 165, 168, 176, 179, 199, 221, 229, 232, 234], "benefit": [28, 45, 46, 55, 59, 70, 124, 171, 189, 242, 538, 565, 656, 851, 857], "1e3": [28, 29, 38, 39, 41, 68, 71, 95, 111, 136, 148, 150, 155, 156, 176, 184, 220, 226, 227, 228, 234], "h0": [28, 94, 98, 224, 225, 226, 227, 228, 232, 233, 234, 683, 684, 685, 686, 687], "h1": [28, 94, 110, 224, 225, 226, 227, 228, 229, 232, 233, 234], "linewidth": [28, 39, 95, 110, 111, 135, 149, 159, 204, 224, 259, 262, 263, 264, 265, 408, 415, 476, 477, 555, 696, 698, 700, 743, 760, 767, 775, 782, 798, 799, 802, 803, 805], "h2": 28, "unflip": 28, "pool": [28, 139, 148, 150, 165, 214, 295, 296, 471, 473, 474, 523, 524, 525, 526, 527, 529, 530, 540, 864], "stc_trial": 28, "_nolegend_": 28, "172": [28, 56, 70, 81, 91, 125, 166, 167, 168, 197, 198, 200, 201, 204, 205, 206, 208, 213, 214, 215, 216, 242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 656, 661, 696, 699], "compute_mne_inverse_epochs_in_label": [28, 56], "apply_inverse_raw": [29, 523, 524, 525, 527, 866, 876], "smaller": [29, 41, 74, 102, 125, 141, 148, 157, 200, 205, 208, 224, 225, 239, 257, 262, 263, 269, 270, 273, 276, 277, 278, 474, 558, 572, 575, 582, 683, 684, 686, 687, 711, 719, 743, 801, 806, 851, 858, 876], "time_as_index": [29, 40, 82, 139, 148, 174, 213, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 696, 699, 876], "mne_": [29, 30, 861], "s_raw_inverse_": 29, "overwrit": [29, 41, 102, 106, 108, 139, 160, 171, 190, 215, 254, 256, 259, 260, 262, 263, 264, 265, 269, 270, 272, 273, 274, 275, 276, 277, 278, 286, 305, 306, 307, 310, 438, 439, 440, 441, 476, 477, 508, 541, 555, 556, 565, 634, 635, 638, 642, 696, 697, 698, 699, 700, 729, 818, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829, 830, 876], "25800": [29, 45, 67, 70, 78, 81, 90, 91, 101, 102, 105, 108, 109, 116, 121, 125, 145, 155, 161, 166, 167, 171, 181, 197, 201, 202, 204, 205, 206, 213, 216, 220, 221, 226, 227, 228], "192599": [29, 45, 67, 70, 81, 90, 91, 101, 102, 105, 108, 109, 116, 121, 125, 145, 155, 161, 166, 167, 171, 181, 197, 201, 202, 204, 205, 213, 216, 220, 221, 226, 227, 228], "670": [29, 45, 67, 70, 79, 81, 90, 91, 101, 102, 105, 108, 109, 116, 121, 125, 145, 155, 161, 166, 167, 171, 181, 184, 186, 197, 201, 202, 204, 205, 207, 213, 216, 220, 221, 226, 227, 228], "664": [29, 56, 207, 229], "compute_mne_inverse_raw_in_label": [29, 56], "nilearn": [30, 41, 44, 133, 170, 175, 180, 181, 277, 278, 695, 807], "plot_stat_map": 30, "index_img": 30, "read_evok": [30, 31, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 77, 84, 85, 114, 117, 118, 122, 125, 148, 149, 171, 175, 177, 178, 180, 262, 263, 264, 265, 272, 476, 477, 822, 855, 866, 876], "vol": [30, 44, 50, 134, 159, 175, 179, 180, 260, 262, 263, 264, 265, 275, 298, 429, 624, 651, 652, 653, 654, 655, 656, 657, 658, 783], "4d": [30, 121, 164, 185, 186, 187, 259, 260, 262, 263, 264, 265, 267, 300, 352, 449, 451, 476, 477, 487, 520, 553, 554, 683, 684, 696, 698, 699, 700, 759, 771, 858, 861, 876], "img": [30, 114, 159, 181, 224, 277, 278], "as_volum": [30, 277, 278, 876], "nib": [30, 44, 133, 155], "s_invers": 30, "gz": [30, 139, 154, 171, 204, 254, 261, 262, 263, 264, 265, 275, 310, 383, 476, 477, 496, 537, 541, 556, 596, 602, 605, 607, 614, 616, 622, 626, 661, 817, 820, 822, 823, 827, 828, 841, 876], "t1_fname": [30, 159, 175], "499": [30, 31, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 77, 84, 85, 114, 117, 118, 125, 141, 142, 148, 167, 171, 175, 177, 178, 180, 227, 228, 229], "11271": [30, 44, 180, 876], "209": [30, 56, 168, 183, 200, 224, 228, 229, 242], "compute_mne_inverse_volum": [30, 56], "plug": [31, 835, 858], "facil": [31, 255], "implement": [31, 69, 133, 165, 168, 178, 194, 201, 203, 208, 221, 239, 255, 259, 267, 271, 286, 287, 289, 300, 330, 352, 358, 408, 415, 416, 421, 425, 448, 471, 473, 474, 476, 477, 519, 522, 523, 524, 525, 526, 527, 529, 530, 540, 556, 557, 564, 570, 575, 599, 621, 680, 721, 723, 731, 796, 835, 842, 850, 859, 864, 874, 876], "wmne": [31, 473, 474], "eloreta": [31, 164, 165, 174, 177, 178, 185, 186, 232, 234, 259, 262, 264, 265, 267, 273, 295, 296, 352, 449, 471, 473, 474, 522, 523, 524, 525, 526, 527, 529, 530, 534, 536, 539, 540, 616, 743, 768, 831, 876], "educ": [31, 857], "shall": [31, 143, 199, 264, 265, 432, 556, 664, 778, 835, 857, 864], "develop": [31, 69, 133, 170, 203, 208, 253, 254, 330, 575, 695, 752, 838, 839, 841, 842, 852, 855, 857, 861, 876], "meant": [31, 88, 93, 107, 170, 224, 271, 287, 289, 339, 410, 420, 511, 643, 737, 738, 746, 876], "practic": [31, 70, 97, 112, 150, 159, 167, 199, 200, 206, 208, 239, 242, 268, 295, 556, 565, 618, 624, 682, 831, 835, 857, 858], "apply_solv": 31, "linalg": [31, 82, 133, 155, 159, 184, 204, 356, 682, 855, 876], "plot_sparse_source_estim": [31, 35, 40, 46, 59, 90, 808, 866, 876], "ave_fnam": [31, 40, 59, 67, 90], "cov_fnam": [31, 35, 40, 45, 51, 59, 67, 90, 171, 221, 272], "handl": [31, 40, 46, 59, 125, 139, 143, 145, 150, 154, 159, 164, 165, 167, 169, 171, 172, 205, 208, 211, 212, 257, 262, 263, 264, 265, 267, 340, 435, 449, 476, 477, 550, 553, 556, 584, 641, 744, 752, 760, 763, 765, 776, 787, 791, 815, 835, 861, 876], "auxiliari": [31, 141, 370], "def": [31, 34, 67, 75, 82, 90, 91, 92, 107, 111, 115, 131, 133, 136, 149, 150, 155, 159, 200, 201, 204, 221, 224, 228, 234, 239, 835], "ones": [31, 81, 86, 109, 140, 169, 177, 182, 184, 187, 204, 205, 224, 239, 255, 268, 384, 443, 469, 470, 476, 477, 515, 558, 575, 618, 624, 631, 681, 835, 855, 858, 861, 876], "account": [31, 78, 107, 121, 133, 140, 141, 155, 157, 161, 179, 184, 198, 199, 205, 206, 208, 213, 214, 224, 229, 239, 256, 259, 264, 265, 295, 296, 352, 356, 357, 367, 368, 369, 408, 415, 451, 452, 471, 473, 474, 534, 556, 559, 582, 783, 835, 855, 858, 861, 876], "constraint": [31, 60, 157, 165, 177, 193, 206, 242, 262, 263, 285, 297, 451, 534, 774, 861, 876], "weigth": 31, "formul": [31, 712, 722, 723, 726, 858], "problem": [31, 40, 59, 69, 86, 94, 95, 112, 136, 143, 160, 165, 174, 175, 187, 188, 194, 198, 202, 203, 205, 206, 213, 224, 225, 229, 232, 233, 234, 239, 242, 473, 492, 556, 575, 602, 608, 683, 684, 686, 687, 689, 690, 809, 834, 835, 840, 855, 856, 858, 864, 876], "bia": [31, 40, 69, 82, 140, 150, 183, 200, 232, 234, 238, 242, 259, 264, 265, 295, 296, 358, 421, 471, 473, 474, 534, 582, 715, 777, 782, 858, 876], "callabl": [31, 149, 259, 262, 263, 264, 265, 269, 270, 271, 273, 276, 277, 278, 281, 310, 312, 338, 363, 408, 411, 415, 418, 425, 437, 476, 477, 526, 555, 556, 570, 632, 662, 663, 675, 682, 683, 684, 686, 687, 696, 698, 699, 700, 741, 743, 756, 760, 767, 774, 775, 777, 782, 786, 795, 798, 801, 803, 804, 805, 806, 876], "boolean": [31, 99, 140, 142, 168, 170, 204, 205, 213, 215, 259, 262, 263, 264, 265, 271, 273, 408, 415, 476, 477, 555, 556, 683, 684, 686, 687, 696, 698, 700, 774, 775, 779, 782, 786, 795, 798, 803, 835, 862, 876], "what": [31, 59, 70, 81, 88, 92, 93, 115, 125, 126, 133, 135, 139, 140, 141, 142, 143, 155, 159, 168, 170, 174, 179, 180, 181, 189, 198, 200, 209, 213, 214, 215, 221, 224, 226, 229, 237, 239, 257, 260, 261, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 352, 356, 363, 367, 368, 383, 400, 427, 432, 437, 441, 458, 475, 476, 477, 492, 542, 589, 602, 604, 608, 633, 635, 646, 696, 699, 724, 727, 766, 801, 806, 824, 831, 835, 838, 840, 841, 843, 861, 864, 866], "tangenti": [31, 295, 296, 453, 471, 473, 474, 534, 858, 861], "discret": [31, 45, 102, 157, 175, 194, 206, 237, 242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 275, 276, 277, 278, 415, 453, 471, 473, 474, 476, 477, 518, 534, 645, 696, 698, 699, 700, 708, 714, 857, 876], "coeffici": [31, 99, 107, 140, 145, 157, 193, 200, 202, 412, 414, 420, 426, 443, 444, 445, 473, 474, 555, 566, 567, 575, 584, 595, 599, 650, 659, 660, 681, 682, 698, 700, 709, 711, 714, 719, 784, 876], "privat": [31, 835, 876], "inverse_spars": [31, 35, 40, 46, 59, 174, 844, 866, 876], "mxne_invers": 31, "_prepare_gain": 31, "is_fixed_ori": [31, 876], "_reapply_source_weight": 31, "_make_sparse_stc": 31, "all_ch_nam": 31, "gain_info": 31, "source_weight": 31, "weights_min": [31, 40, 59, 473, 474, 876], "dot": [31, 77, 85, 110, 117, 122, 125, 143, 149, 159, 174, 177, 181, 184, 189, 193, 198, 205, 209, 232, 234, 260, 264, 265, 269, 273, 277, 682, 771, 777, 835, 858, 876], "n_orient": [31, 269, 270, 273, 276, 277, 278, 442, 538], "active_set": 31, "l2": [31, 40, 54, 55, 242, 473, 474, 538, 656, 708, 844, 861], "penal": 31, "strongest": [31, 35, 40, 47, 59, 150], "n_dipol": [31, 51, 67, 90, 91, 157, 260, 269, 270, 273, 276, 277, 278, 298, 428, 532, 533, 535, 662], "depend": [31, 69, 80, 99, 124, 134, 135, 136, 140, 148, 150, 154, 156, 157, 161, 169, 170, 171, 189, 193, 199, 200, 202, 204, 205, 208, 215, 221, 224, 225, 226, 234, 239, 242, 256, 262, 263, 264, 265, 269, 270, 273, 275, 276, 277, 278, 297, 316, 327, 340, 341, 401, 414, 420, 434, 442, 452, 476, 477, 484, 491, 493, 556, 566, 575, 592, 598, 677, 683, 684, 686, 687, 689, 691, 692, 695, 696, 698, 699, 700, 718, 743, 752, 764, 766, 767, 773, 774, 777, 790, 796, 816, 833, 834, 835, 838, 841, 842, 843, 850, 851, 852, 855, 858], "n_active_dipol": 31, "bool": [31, 118, 170, 229, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 301, 302, 303, 304, 305, 306, 307, 310, 311, 312, 314, 315, 318, 319, 320, 321, 324, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 429, 430, 433, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 456, 458, 459, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 584, 585, 587, 588, 589, 591, 592, 593, 596, 597, 598, 599, 603, 604, 605, 606, 607, 608, 610, 611, 612, 614, 615, 616, 618, 619, 620, 621, 622, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 663, 664, 666, 667, 668, 669, 670, 671, 672, 673, 674, 677, 680, 683, 684, 685, 686, 687, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 712, 713, 714, 715, 718, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 732, 733, 738, 742, 743, 748, 751, 752, 756, 757, 759, 760, 761, 762, 764, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 811, 812, 813, 816, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 855], "entri": [31, 107, 133, 139, 141, 143, 149, 150, 165, 169, 170, 194, 198, 213, 256, 259, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 284, 312, 339, 340, 341, 342, 343, 344, 408, 415, 418, 430, 440, 443, 474, 475, 476, 477, 523, 531, 555, 556, 570, 642, 645, 647, 648, 649, 661, 676, 696, 698, 699, 700, 743, 760, 761, 773, 774, 775, 779, 782, 786, 795, 796, 798, 801, 802, 803, 805, 806, 835, 838, 858, 861, 876], "x_full": 31, "solv": [31, 59, 160, 174, 408, 492, 556, 602, 608, 682, 858, 864], "ey": [31, 73, 123, 133, 134, 136, 157, 171, 182, 197, 199, 202, 204, 205, 378, 492, 573, 577, 608], "dtype": [31, 90, 92, 112, 118, 143, 155, 166, 219, 221, 229, 262, 263, 264, 265, 414, 475, 476, 477, 858], "bgcolor": [31, 35, 40, 46, 59, 90, 155, 159, 177, 476, 477, 752, 762, 796, 802], "126": [31, 35, 45, 56, 168, 207, 229], "custom_inverse_solv": [31, 56], "synchron": [32, 33, 34, 110, 145, 209, 238, 242, 255, 295, 478, 484, 491, 835, 852, 876], "marijn": [32, 33, 45, 60, 72, 101, 160, 221, 242, 295, 296, 863, 876], "van": [32, 33, 43, 45, 60, 72, 101, 124, 160, 179, 200, 221, 242, 274, 295, 296, 358, 385, 564, 858, 863, 876], "vliet": [32, 33, 45, 60, 72, 101, 160, 221, 242, 295, 296, 863, 876], "vanvliet": [32, 33, 45, 60, 72, 101, 160, 221], "rockhil": [32, 69, 70, 81, 112, 113, 114, 118, 133, 134, 135, 228, 229, 242, 863, 876], "aprockhil": [32, 69, 70, 81, 112, 113, 114, 118, 133, 134, 135, 228, 229], "mailbox": [32, 33, 69, 70, 81, 111, 112, 113, 114, 118, 125, 133, 134, 135, 226, 228, 229, 232, 238], "tfr_morlet": [32, 112, 165, 226, 227, 228, 229, 238, 421, 721, 723, 724, 725, 727, 728, 866, 876], "csd_tfr": [32, 866, 876], "make_d": [32, 33, 34, 221, 287, 288, 289, 290, 831, 866, 876], "apply_dics_tfr_epoch": [32, 287, 288, 289, 866, 876], "organ": [32, 70, 228, 229, 242, 565, 686, 687, 852, 857, 861], "_task": [32, 33, 34, 46, 111, 238], "_meg": [32, 33, 34, 46, 111, 171, 238, 254, 476, 477, 496, 497, 876], "5000e": 32, "mostli": [32, 107, 140, 174, 177, 187, 199, 202, 375, 376, 377, 380, 381, 383, 388, 391, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 453, 471, 473, 474, 476, 477, 534, 743, 831], "wavelet": [32, 101, 111, 165, 200, 228, 242, 421, 540, 696, 699, 702, 705, 710, 712, 721, 722, 723, 724, 726, 727, 831, 876], "tfr": [32, 110, 200, 226, 227, 238, 421, 523, 524, 525, 526, 696, 699, 702, 705, 707, 718, 723, 724, 726, 727, 728, 729, 803, 831, 864, 866, 874, 876], "wish": [32, 143, 170, 189, 206, 225, 226, 232, 361, 476, 477, 575, 744, 746, 835, 843, 857], "epochs_tfr": [32, 290, 527, 707], "return_itc": [32, 110, 112, 165, 226, 227, 228, 229, 238, 725, 726, 727, 728], "buffer": [32, 112, 188, 254, 267, 475, 476, 477, 492, 575, 584, 602, 608, 861, 876], "01_task": [32, 33, 34, 46, 111, 169, 238, 239], "somato_meg": [32, 33, 34, 46, 111, 238], "237600": [32, 33, 34, 46, 111, 238], "506999": [32, 33, 34, 46, 111, 238], "1688": [32, 33, 34, 46, 111, 238], "266": [32, 33, 34, 46, 110, 111, 168, 193, 200, 229, 233, 238, 242], "9989760657919393": 32, "1052": [32, 33, 34], "0121": [32, 34, 144, 165, 168, 213, 221], "0211": [32, 34, 165, 168, 221], "1331": [32, 34, 144, 168, 199, 207, 221], "2211": [32, 34, 168, 221], "2241": [32, 34, 158, 168, 221], "2521": [32, 34, 139, 148, 168, 221], "1641": [32, 34, 168, 221], "1831": [32, 34, 168, 221], "1921": [32, 34, 168, 221], "1941": [32, 34, 168, 221], "1611": [32, 34, 118, 168, 221], "0441": [32, 34, 168, 221], "1631": [32, 34, 118, 168, 193, 221], "0231": [32, 34, 118, 165, 168, 221], "1411": [32, 34, 144, 145, 168, 199, 205, 221], "0341": [32, 34, 168, 221], "1621": [32, 34, 118, 168, 221], "1811": [32, 34, 118, 149, 168, 213, 221], "1521": [32, 34, 165, 168, 221], "1721": [32, 34, 168, 221], "1911": [32, 34, 168, 221], "1931": [32, 34, 168, 221], "2111": [32, 34, 168, 221], "2121": [32, 34, 168, 221], "2021": [32, 34, 143, 168, 179, 189, 210, 221, 242, 386, 504, 852, 857], "1341": [32, 34, 168, 207, 221], "0221": [32, 34, 165, 168, 221], "0241": [32, 34, 168, 221], "1731": [32, 34, 35, 168, 221], "0731": [32, 34, 168, 221], "1141": [32, 34, 168, 221], "1131": [32, 34, 168, 221], "0131": [32, 34, 144, 165, 168, 221], "period": [32, 79, 119, 139, 140, 143, 144, 148, 149, 171, 179, 197, 199, 200, 201, 203, 210, 239, 257, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 352, 556, 559, 560, 561, 572, 614, 615, 708, 739, 777, 831, 835, 857, 876], "baseline_csd": 32, "scalar": [32, 140, 159, 179, 221, 262, 263, 264, 265, 269, 270, 271, 273, 276, 277, 278, 288, 295, 296, 297, 408, 415, 476, 477, 556, 682, 698, 700, 743, 775, 782, 786, 795, 801, 806, 876], "beamfom": 32, "noise_csd": [32, 33, 295], "reduce_rank": [32, 33, 34, 49, 295, 296, 876], "real_filt": [32, 33, 34, 221, 295, 876], "epochs_stc": 32, "return_gener": [32, 102, 289, 290, 293, 442, 525, 527, 530], "nsourc": [32, 52, 266, 861], "epoch_stc": 32, "conj": [32, 112, 295, 296], "apply_baselin": [32, 110, 125, 140, 148, 171, 177, 197, 202, 203, 205, 226, 227, 228, 229, 238, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 696, 699, 876], "8155": [32, 33, 34, 46], "sti": [32, 33, 42, 46, 68, 71, 72, 78, 88, 91, 92, 93, 105, 106, 108, 111, 139, 141, 148, 151, 165, 167, 168, 176, 187, 194, 198, 202, 203, 205, 214, 221, 226, 237, 238, 255, 449, 450, 476, 477, 493, 831, 876], "014": [32, 33, 42, 46, 61, 68, 71, 72, 78, 88, 91, 92, 93, 105, 106, 108, 111, 126, 139, 141, 148, 151, 165, 167, 168, 176, 187, 194, 198, 202, 203, 205, 214, 221, 226, 237, 238, 255, 449, 450, 476, 477, 493, 876], "001": [32, 33, 70, 78, 81, 82, 119, 126, 139, 140, 141, 143, 144, 148, 149, 150, 159, 165, 167, 168, 171, 187, 193, 197, 199, 200, 201, 202, 205, 210, 213, 221, 224, 225, 226, 228, 229, 232, 233, 238, 242, 531, 565, 646, 683, 684, 686, 687, 852, 858], "006": [32, 33, 119, 126, 139, 141, 144, 148, 157, 165, 168, 202, 205, 221, 242, 254, 268, 273, 513, 851], "015": [32, 33, 126, 139, 141, 148, 168, 202, 203, 221, 232, 242, 260, 570, 656, 771], "003": [32, 33, 71, 119, 126, 139, 140, 141, 144, 148, 155, 163, 165, 166, 168, 171, 199, 200, 202, 203, 205, 213, 221, 242], "005": [32, 33, 34, 56, 119, 126, 139, 141, 148, 156, 158, 161, 165, 168, 202, 221, 234, 238, 260, 342, 558, 771], "074": 32, "gyri": [32, 92, 154, 157, 220, 242], "border": [32, 38, 59, 102, 114, 124, 154, 180, 259, 262, 263, 264, 265, 271, 408, 415, 434, 476, 477, 555, 556, 570, 696, 698, 700, 743, 775, 781, 782, 786, 795, 798, 803, 804, 805, 876], "central": [32, 126, 140], "sulcu": 32, "primari": [32, 92, 148, 857, 858], "s1": [32, 499], "m1": [32, 169, 206, 224, 239, 262, 263, 264, 265, 476, 477, 641, 876], "dorsal": [32, 743], "brain_kwarg": [32, 41, 114, 133, 179, 180, 269, 270, 273, 276, 277, 278, 801, 806], "add_data_kwarg": [32, 134, 180, 269, 270, 273, 276, 277, 278, 801, 806], "fmid": [32, 269, 270, 273, 276, 277, 278, 743, 762, 801, 806, 807, 876], "scale_factor": [32, 35, 48, 49, 50, 59, 176, 270, 276, 278, 310, 743, 793, 802, 806], "colorbar_kwarg": [32, 134, 180, 743], "label_font_s": [32, 134, 180], "movi": [32, 60, 134, 135, 176, 180, 743, 876], "websit": [32, 134, 135, 150, 176, 180, 188, 205, 400, 401, 570, 835, 838, 857], "save_movi": [32, 60, 134, 135, 176, 180, 743, 876], "time_view": [32, 60, 107, 125, 134, 135, 176, 180, 190, 269, 270, 273, 276, 277, 278, 743, 801, 806, 876], "onc": [32, 34, 43, 44, 60, 69, 92, 118, 125, 131, 134, 141, 142, 143, 144, 149, 150, 165, 167, 168, 169, 171, 176, 180, 197, 198, 200, 202, 203, 204, 205, 213, 215, 255, 256, 262, 263, 264, 265, 274, 280, 373, 444, 446, 447, 476, 477, 574, 582, 724, 727, 764, 796, 835, 851, 857, 858, 876], "688": [32, 229], "33913449": 32, "817": [32, 229], "80202112": 32, "3163": 32, "68479992": 32, "409": [32, 56, 79, 117, 175, 186, 224, 229, 242, 760], "1391": [32, 56], "dics_epoch": [32, 56, 876], "roman": [33, 242, 850, 876], "goj": [33, 242, 850, 876], "appelhoff": [33, 111, 125, 226, 229, 232, 238, 863, 876], "csd_morlet": [33, 34, 101, 221, 697, 701, 702, 703, 704, 706, 866, 876], "apply_dics_csd": [33, 34, 221, 287, 289, 290, 295, 866, 876], "shorter": [33, 112, 200, 208, 239, 269, 270, 273, 276, 277, 278, 432, 437, 476, 477, 561, 585, 591, 712, 722, 723, 724, 726, 727, 796, 876], "498464098687909": [33, 34], "logspac": [33, 34, 193, 238, 352], "log10": [33, 34, 98, 131, 200, 210, 221, 224, 238, 239, 696], "loss": [33, 69, 199, 204, 262, 263, 264, 265, 411, 418, 438, 439, 440, 441, 476, 477, 678, 858], "csd_baselin": [33, 34], "csd_er": [33, 34], "block": [33, 34, 59, 63, 101, 131, 133, 141, 142, 171, 190, 199, 221, 260, 262, 263, 264, 265, 272, 449, 467, 468, 473, 476, 477, 545, 556, 582, 615, 683, 684, 686, 687, 698, 700, 743, 771, 773, 790, 796, 797, 799, 833, 840, 858, 861, 876], "rather": [33, 34, 60, 139, 140, 145, 148, 155, 165, 166, 167, 169, 170, 177, 187, 194, 199, 205, 206, 210, 213, 224, 228, 232, 237, 262, 263, 266, 269, 270, 273, 276, 277, 278, 415, 476, 477, 521, 529, 530, 540, 547, 549, 583, 688, 691, 743, 761, 796, 831, 833, 835, 851, 852, 857, 858, 876], "entir": [33, 73, 102, 143, 150, 175, 183, 199, 200, 202, 208, 210, 214, 224, 239, 257, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 285, 409, 424, 523, 524, 525, 526, 527, 556, 572, 614, 646, 696, 835, 876], "baseline_source_pow": 33, "beta_source_pow": 33, "messag": [33, 170, 237, 254, 269, 270, 273, 276, 277, 278, 363, 442, 492, 602, 608, 642, 643, 738, 739, 740, 743, 833, 835, 841, 846, 855, 861, 876], "40188307": 33, "5102619": 33, "34636424": 33, "joachim": [33, 179, 221, 242, 288, 295], "gro\u00df": [33, 179, 221, 242, 288, 295], "jan": [33, 179, 221, 242, 288, 295, 296, 851, 876], "kujala": [33, 179, 221, 242, 288, 295, 296], "matti": [33, 40, 54, 55, 58, 59, 124, 161, 177, 179, 208, 221, 242, 273, 288, 295, 473, 474, 523, 534, 538, 567, 571, 584, 653, 658, 842, 850, 855, 858, 876], "h\u00e4m\u00e4l\u00e4inen": [33, 40, 58, 59, 124, 177, 179, 221, 242, 273, 288, 295, 429, 473, 474, 523, 534, 538, 571, 653, 656, 658, 842, 876], "lar": [33, 179, 221, 242, 288, 295], "timmermann": [33, 179, 221, 242, 288, 295], "alfon": [33, 179, 221, 242, 288, 295], "schnitzler": [33, 179, 221, 242, 288, 295], "riitta": [33, 111, 177, 179, 221, 242, 288, 295, 296], "salmelin": [33, 111, 179, 221, 242, 288, 295, 296], "nation": [33, 179, 221, 242, 253, 288, 295, 863], "academi": [33, 179, 221, 242, 288, 295], "694": [33, 135, 138, 179, 193, 194, 221, 229, 242, 288, 295], "699": [33, 139, 150, 179, 221, 229, 242, 288, 295], "2001": [33, 41, 69, 179, 193, 206, 221, 242, 262, 263, 264, 265, 288, 295, 414, 476, 477, 564, 641, 680], "1073": [33, 179, 221, 242, 288, 295], "pna": [33, 179, 221, 242, 288, 295], "179": [33, 35, 56, 74, 168, 224, 228, 229, 242, 591, 858], "dics_source_pow": [33, 56, 876], "luke": [34, 38, 42, 74, 79, 80, 107, 863, 876], "bloi": [34, 38, 42, 79, 80, 107, 863, 876], "make_lcmv": [34, 49, 179, 287, 289, 291, 292, 293, 294, 295, 297, 831, 866, 876], "apply_lcmv_cov": [34, 179, 291, 293, 294, 866, 876], "apply_inverse_cov": [34, 42, 523, 525, 526, 527, 866, 876], "90092": 34, "maxfilt": [34, 187, 208, 267, 348, 349, 350, 429, 476, 477, 529, 530, 539, 540, 566, 567, 575, 584, 647, 648, 649, 661, 861, 876], "conserv": [34, 69, 145, 224, 564, 645, 743, 876], "advanc": [34, 72, 125, 160, 161, 202, 215, 242, 259, 262, 263, 264, 265, 271, 352, 371, 408, 415, 467, 471, 476, 477, 555, 556, 570, 661, 696, 698, 700, 752, 760, 775, 782, 786, 795, 798, 803, 805, 834, 837, 839, 855, 856, 858, 860, 864, 876], "correctli": [34, 43, 44, 149, 189, 202, 234, 262, 263, 264, 265, 330, 441, 476, 477, 758, 777, 833, 834, 841, 851, 852, 858, 861, 876], "preserv": [34, 154, 155, 159, 165, 166, 193, 198, 203, 213, 224, 228, 257, 262, 263, 264, 265, 407, 438, 439, 440, 441, 476, 477, 572, 581, 696, 698, 699, 700, 858, 876], "compute_rank": [34, 259, 416, 768, 866, 876], "tol": [34, 40, 46, 59, 73, 171, 356, 451, 471, 473, 474, 876], "tol_kind": [34, 356, 876], "active_win": 34, "baseline_win": 34, "baseline_cov": 34, "active_cov": 34, "common_cov": 34, "plot_cov": [34, 42, 176, 866, 876], "3737": 34, "_gen_dic": 34, "stc_base": [34, 42], "stc_act": 34, "_gen_lcmv": 34, "_gen_mn": 34, "stc_dic": 34, "stc_lcmv": 34, "stc_dspm": [34, 40, 59], "2441": [34, 168, 221], "1821": [34, 168, 221], "1121": [34, 168, 221], "1041": [34, 168, 221], "2331": [34, 168, 221, 550], "0331": [34, 165, 168, 221], "0931": [34, 168, 221], "1421": [34, 144, 145, 168, 199, 205, 221], "2641": [34, 168, 221], "2511": [34, 168, 221], "2311": [34, 168, 221], "2541": [34, 168, 199, 221], "0641": [34, 168, 221], "0511": [34, 145, 168, 221], "1321": [34, 168, 199, 221], "1841": [34, 168, 221], "1221": [34, 168, 194, 199, 221], "1021": [34, 168, 170, 221, 242, 262, 263, 264, 265, 476, 477], "0811": [34, 168, 199, 221], "2141": [34, 168, 199, 221, 224, 242, 689, 690], "0621": [34, 168, 221], "1741": [34, 168, 193, 199, 221, 242], "2131": [34, 168, 199, 221, 224, 242, 689, 690], "2421": [34, 118, 168, 199, 221], "1241": [34, 168, 221], "0321": [34, 165, 168, 221], "2231": [34, 168, 221], "1311": [34, 133, 134, 168, 207, 221], "0921": [34, 168, 221], "0821": [34, 168, 221], "0941": [34, 168, 221], "0611": [34, 168, 221], "1111": [34, 140, 150, 168, 200, 207, 221, 229, 242, 352, 682, 683, 684, 686, 687, 835], "2631": [34, 168, 199, 221], "0411": [34, 168, 221], "2031": [34, 168, 221], "1231": [34, 168, 221], "0711": [34, 168, 221], "0741": [34, 168, 221], "0431": [34, 168, 221], "1431": [34, 168, 193, 199, 221], "1511": [34, 165, 168, 221], "2341": [34, 168, 221], "1011": [34, 168, 207, 221], "1441": [34, 144, 168, 190, 199, 207, 221], "0311": [34, 165, 168, 221], "2431": [34, 168, 221], "0721": [34, 168, 221], "2221": [34, 168, 221], "2621": [34, 168, 199, 221], "0141": [34, 168, 199, 221], "0531": [34, 168, 221], "0521": [34, 168, 199, 221], "2531": [34, 168, 193, 199, 221], "2321": [34, 168, 221], "2611": [34, 168, 199, 221], "2411": [34, 118, 168, 221], "1211": [34, 168, 221], "0911": [34, 168, 199, 221], "0421": [34, 168, 221], "0111": [34, 144, 165, 168, 175, 199, 205, 213, 221, 631], "0631": [34, 168, 221], "0541": [34, 168, 221], "1541": [34, 168, 199, 207, 221], "planar": [34, 40, 42, 50, 58, 59, 70, 82, 90, 92, 107, 109, 117, 129, 141, 145, 171, 176, 177, 178, 182, 187, 194, 197, 204, 205, 208, 221, 224, 760, 858, 861, 876], "7615": [34, 124, 242, 385], "004172": 34, "17919e": 34, "exp": [34, 40, 42, 50, 58, 59, 88, 90, 92, 107, 176, 177, 178, 181, 190, 194, 205, 221, 224, 295, 296, 452, 471, 473, 474, 534], "37508": 34, "81894e": 34, "brain_dic": 34, "5205929": 34, "6585548": 34, "71744034": 34, "brain_lcmv": 34, "37202028": 34, "44229054": 34, "93188606": 34, "brain_dspm": 34, "71161502": 34, "88782419": 34, "99242158": 34, "292": [34, 56, 168, 193, 224], "evoked_ers_source_pow": [34, 56], "detail": [35, 44, 45, 78, 117, 139, 141, 148, 149, 150, 154, 155, 157, 165, 166, 167, 168, 169, 170, 171, 174, 176, 179, 187, 188, 189, 193, 194, 198, 199, 201, 203, 204, 205, 208, 213, 214, 215, 216, 234, 237, 242, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 301, 302, 303, 304, 305, 306, 307, 310, 312, 314, 315, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 413, 414, 415, 416, 418, 419, 421, 424, 425, 427, 429, 433, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 458, 459, 463, 464, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 518, 519, 520, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 549, 552, 555, 556, 558, 559, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 579, 580, 581, 582, 584, 585, 587, 588, 591, 592, 593, 596, 597, 598, 599, 601, 603, 604, 605, 606, 607, 608, 610, 611, 612, 614, 615, 616, 618, 619, 620, 621, 622, 626, 627, 628, 629, 630, 631, 632, 633, 635, 636, 637, 638, 641, 644, 645, 647, 648, 649, 650, 659, 660, 661, 662, 664, 666, 667, 668, 669, 670, 671, 672, 683, 684, 685, 686, 687, 689, 691, 692, 693, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 714, 715, 718, 719, 723, 724, 726, 727, 728, 729, 732, 733, 738, 742, 743, 751, 758, 759, 760, 767, 768, 771, 774, 775, 776, 777, 778, 781, 782, 783, 785, 786, 787, 788, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 805, 806, 807, 808, 812, 814, 815, 816, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 835, 851, 852, 854, 855, 859, 864, 876], "luessi": [35, 47, 102, 242, 850, 876], "mluessi": [35, 47, 102], "nmr": [35, 43, 47, 102, 112, 154, 213, 269, 273, 277, 365, 801, 858], "mgh": [35, 43, 47, 58, 102, 112, 154, 169, 213, 269, 273, 277, 326, 365, 645, 801, 846, 852, 858, 864, 876], "harvard": [35, 43, 47, 58, 102, 112, 154, 253, 269, 273, 277, 365, 801, 858, 863], "daniel": [35, 40, 46, 58, 59, 90, 125, 207, 242, 273, 473, 474, 850, 863, 876], "strohmeier": [35, 40, 46, 59, 90, 242, 473, 474, 850, 876], "tu": [35, 40, 46, 59, 90], "ilmenau": [35, 40, 46, 59, 90, 253, 863], "de": [35, 40, 46, 59, 90, 97, 110, 193, 194, 239, 242, 253, 414, 556, 570, 851, 863, 876], "gamma_map": [35, 866, 876], "make_stc_from_dipol": [35, 40, 46, 59, 866, 876], "plot_dipole_loc": [35, 40, 51, 59, 177, 182, 184, 866, 876], "plot_dipole_amplitud": [35, 40, 51, 59, 866], "evoked_fnam": [35, 51, 88, 93, 262, 263, 264, 265, 476, 477], "50e": [35, 90, 150, 202], "300e": 35, "xyz_same_gamma": [35, 471, 876], "return_residu": [35, 40, 46, 51, 59, 176, 298, 471, 473, 474, 523, 876], "return_as_dipol": [35, 40, 46, 59, 471, 473, 474, 876], "303": [35, 86, 110, 168, 207, 220, 224, 233], "364": [35, 40, 48, 49, 54, 55, 58, 59, 67, 79, 89, 90, 92, 119, 161, 165, 168, 177, 194, 207, 229, 237], "converg": [35, 40, 46, 59, 171, 178, 203, 471, 523, 556, 703, 714, 858, 876], "054e": 35, "22233": 35, "856e": 35, "20712": 35, "375e": 35, "17166": 35, "061e": 35, "12996": 35, "273e": 35, "10107": 35, "574e": 35, "8307": 35, "319e": 35, "7209": 35, "369e": 35, "6342": 35, "631e": 35, "5694": 35, "047e": 35, "5142": 35, "579e": 35, "4692": 35, "199e": 35, "889e": 35, "634e": 35, "3696": 35, "422e": 35, "3429": 35, "246e": 35, "3153": 35, "099e": 35, "2952": [35, 161, 193], "748e": 35, "2745": 35, "703e": 35, "2559": 35, "817e": 35, "2394": 35, "063e": 35, "2229": 35, "417e": 35, "2067": 35, "883e": 35, "1944": 35, "711e": 35, "1836": 35, "551e": 35, "400e": 35, "1617": 35, "266e": 35, "1509": 35, "166e": 35, "1440": 35, "066e": 35, "1350": 35, "964e": 35, "1245": 35, "861e": 35, "754e": 35, "1128": [35, 207], "643e": 35, "1077": [35, 58, 194, 242, 273, 538, 656], "529e": 35, "410e": 35, "975": [35, 72, 229], "288e": 35, "924": [35, 229], "163e": 35, "036e": 35, "837": [35, 194, 229], "906e": 35, "798": [35, 128, 129, 143, 194, 229], "776e": 35, "744": [35, 229], "644e": 35, "705": [35, 193, 194, 229], "513e": 35, "687": [35, 61, 194], "382e": 35, "253e": 35, "627": [35, 98, 100, 229], "125e": 35, "600": [35, 40, 58, 59, 70, 73, 79, 81, 88, 91, 124, 125, 132, 154, 155, 159, 166, 167, 177, 178, 179, 183, 190, 193, 197, 198, 201, 204, 205, 206, 207, 208, 210, 213, 214, 215, 216, 221, 229, 242, 474, 743, 876], "000e": 35, "588": [35, 194, 229], "877e": 35, "570": [35, 79, 205, 212, 229], "758e": 35, "552": [35, 229], "642e": 35, "421e": 35, "316e": 35, "215e": 35, "441": [35, 207, 224, 229, 242, 556, 582], "119e": 35, "417": [35, 117, 194, 229, 242, 556, 582, 760], "026e": 35, "937e": 35, "402": [35, 79, 143, 861], "853e": 35, "772e": 35, "378": [35, 79, 224, 229], "695e": 35, "348": [35, 161, 168, 200, 207, 229, 876], "622e": 35, "339": [35, 168, 207, 229], "552e": 35, "333": [35, 74, 168, 229], "486e": 35, "423e": 35, "312": [35, 168, 207, 224, 229], "306e": 35, "252e": 35, "297": [35, 168, 224, 229], "201e": 35, "152e": 35, "273": [35, 46, 110, 165, 168, 183, 207, 229, 876], "106e": 35, "261": [35, 168, 224, 229], "062e": 35, "020e": 35, "807e": 35, "431e": 35, "074e": 35, "219": [35, 41, 110, 168, 194, 228, 229, 876], "735e": 35, "412e": 35, "105e": 35, "813e": 35, "198": [35, 168, 183, 207, 224, 228, 229, 234], "535e": 35, "192": [35, 168, 170, 194, 224], "271e": 35, "186": [35, 45, 143, 158, 163, 168, 175, 180, 207, 224, 228], "018e": 35, "778e": 35, "174": [35, 124, 168, 176, 186, 229, 242, 275], "549e": 35, "168": [35, 45, 127, 168, 175, 180, 194, 207, 224, 229, 234], "121e": 35, "159": [35, 112, 148, 168, 196, 207, 224, 228, 229], "922e": 35, "156": [35, 45, 168, 175, 180, 194, 224, 229, 275], "731e": 35, "138": [35, 165, 168, 170, 194, 242, 275, 561, 876], "895e": 35, "132": [35, 46, 63, 66, 150, 168, 207, 224], "749e": 35, "129": [35, 61, 119, 126, 168, 169, 224, 228, 229, 242], "608e": 35, "344e": 35, "220e": 35, "100e": [35, 65, 144, 150, 199, 221], "117": [35, 61, 144, 168, 194, 224, 228, 229, 232, 242, 725, 728, 876], "985e": 35, "875e": 35, "107": [35, 61, 111, 113, 133, 139, 168, 224, 229, 242, 861, 876], "769e": 35, "666e": 35, "473e": 35, "208e": 35, "126e": 35, "115": [35, 61, 82, 92, 168, 182, 224, 228, 242, 564], "688e": 35, "500e": 35, "441e": 35, "384e": 35, "329e": 35, "127": [35, 168, 207, 228, 229], "275e": 35, "137": [35, 133, 168, 194, 228, 229, 275], "154": [35, 136, 147, 167, 168, 194, 228, 229], "155": [35, 145, 168, 207, 224, 228, 229, 239, 876], "247e": 35, "649e": 35, "177": [35, 144, 168, 194, 207, 224, 228, 229, 242, 683, 684, 686, 687], "116e": 35, "523e": 35, "211": [35, 41, 59, 144, 168, 194, 228, 229], "307e": 35, "227": [35, 46, 50, 56, 110, 150, 168, 229, 242, 386, 852], "214e": 35, "041e": 35, "293": [35, 110, 168, 182, 207, 224, 229, 242], "730e": 35, "124e": 35, "160e": 35, "313": [35, 100, 168, 224, 229, 876], "783e": 35, "340": [35, 51, 66, 79, 80, 121, 168, 190, 193, 207, 224, 242, 298, 876], "168e": 35, "343": [35, 142, 168, 169, 193, 207, 224, 876], "949e": 35, "886e": 35, "855e": 35, "reach": [35, 40, 46, 59, 171, 239, 255, 262, 263, 264, 265, 476, 477, 652, 696, 698, 700, 703, 714, 724, 727, 740, 775, 782, 803, 876], "dip": [35, 40, 59, 82, 114, 175, 180, 182, 183, 184, 209, 239, 260, 451, 606, 876], "mri_head_t": [35, 40, 51, 59, 180, 266, 267, 469, 470, 861], "fig_nam": [35, 40, 46, 59, 802], "david": [35, 42, 117, 124, 127, 133, 193, 200, 237, 242, 262, 263, 264, 265, 352, 385, 414, 471, 476, 477, 524, 698, 700, 708, 714, 725, 728, 760, 858, 876], "wipf": [35, 242, 471], "srikantan": [35, 221, 242, 295, 296, 471], "nagarajan": [35, 221, 242, 295, 296, 471], "unifi": [35, 136, 179, 200, 242, 471, 656, 876], "947": [35, 89, 93, 229, 242, 471], "966": [35, 42, 127, 161, 171, 205, 242, 471], "059": [35, 139, 141, 148, 168, 198, 213, 221, 242, 471], "082": [35, 56], "gamma_map_invers": [35, 56], "form": [37, 140, 142, 159, 167, 174, 177, 197, 200, 202, 203, 204, 208, 224, 226, 229, 232, 259, 262, 263, 264, 265, 267, 269, 270, 271, 273, 276, 277, 278, 333, 408, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 443, 471, 473, 474, 476, 477, 509, 518, 523, 525, 526, 527, 555, 556, 557, 565, 570, 584, 627, 630, 645, 646, 647, 648, 649, 661, 683, 684, 686, 687, 696, 698, 699, 700, 708, 760, 775, 777, 782, 786, 795, 798, 803, 805, 824, 829, 835, 854, 855, 857, 858, 861, 876], "merg": [37, 140, 214, 215, 257, 262, 264, 265, 351, 450, 521, 638, 645, 835, 857, 876], "christian": [37, 118, 124, 132, 143, 242, 385, 386, 408, 432, 656, 850, 852, 876], "brodbeck": [37, 118, 132, 242, 850, 876], "christianbrodbeck": [37, 118, 132], "read_source_estim": [37, 43, 53, 114, 125, 132, 174, 180, 233, 866, 876], "aud_lh": 37, "aud_rh": 37, "stc_lh": [37, 47], "stc_rh": [37, 47], "stc_bh": 37, "calcul": [37, 38, 58, 79, 99, 110, 126, 143, 149, 150, 157, 161, 165, 169, 175, 179, 187, 193, 199, 200, 203, 205, 210, 213, 224, 225, 229, 238, 257, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 295, 296, 302, 316, 352, 356, 357, 367, 368, 369, 408, 415, 416, 443, 451, 452, 465, 471, 473, 474, 476, 477, 513, 518, 519, 520, 534, 556, 563, 568, 569, 572, 575, 584, 588, 604, 614, 626, 661, 675, 683, 684, 686, 687, 689, 690, 697, 708, 715, 783, 788, 797, 831, 855, 861, 876], "mass": [37, 164, 224, 225, 230, 231, 262, 267, 268, 273, 476, 553, 611, 645, 653, 659, 662, 677, 679, 680, 684, 699, 726, 733, 873, 876], "mni": [37, 133, 134, 135, 158, 175, 180, 181, 189, 260, 277, 278, 310, 326, 365, 469, 628, 735, 742, 743, 807, 858, 876], "vtx": 37, "t_lh": 37, "center_of_mass": [37, 220, 268, 273, 659, 662, 876], "mni_lh": 37, "vertex_to_mni": [37, 268, 273, 866], "t_rh": 37, "mni_rh": 37, "275": [37, 46, 110, 121, 165, 168, 169, 190, 207, 224, 229, 242, 336, 408, 852, 858], "625": [37, 142, 229], "hl": 37, "hr": 37, "hb": 37, "figlegend": 37, "label_activation_from_stc": [37, 56], "typic": [38, 44, 60, 69, 81, 133, 142, 144, 148, 150, 155, 159, 166, 167, 169, 187, 190, 194, 197, 198, 200, 202, 203, 204, 205, 206, 208, 210, 215, 224, 239, 256, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 276, 277, 278, 295, 296, 310, 311, 329, 340, 342, 352, 356, 357, 358, 360, 415, 426, 451, 461, 464, 476, 477, 536, 555, 556, 558, 566, 570, 585, 595, 598, 608, 645, 667, 681, 682, 683, 684, 686, 687, 696, 699, 743, 781, 790, 794, 796, 831, 834, 835, 841, 852, 853, 855, 857, 858, 876], "anatom": [38, 44, 69, 92, 133, 134, 155, 159, 175, 180, 242, 260, 277, 278, 363, 460, 743, 761, 765, 807, 831, 858, 876], "yield": [38, 139, 141, 144, 148, 150, 154, 160, 170, 179, 201, 203, 213, 214, 239, 257, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 316, 425, 429, 556, 559, 566, 567, 575, 584, 648, 649, 688, 723, 724, 726, 727, 743, 831, 853, 855, 858, 876], "peak": [38, 54, 55, 60, 69, 71, 73, 80, 88, 92, 93, 125, 130, 144, 148, 149, 165, 171, 174, 176, 177, 179, 182, 183, 184, 190, 197, 199, 202, 203, 205, 207, 209, 224, 239, 254, 257, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 357, 538, 556, 558, 561, 568, 569, 572, 573, 575, 576, 577, 579, 580, 593, 653, 682, 696, 773, 778, 780, 781, 782, 816, 851, 858, 876], "banksst": [38, 41, 47], "aparc_label_nam": 38, "stc_mean": 38, "grow": [38, 88, 93, 239, 466, 509, 601, 842, 857], "halt": [38, 133, 141, 260, 262, 263, 264, 265, 467, 468, 476, 477, 556, 698, 700, 771, 773, 790, 796, 799, 841, 876], "read_labels_from_annot": [38, 41, 47, 67, 88, 92, 93, 124, 220, 542, 618, 826, 866, 876], "parc": [38, 41, 47, 619, 826], "aparc": [38, 41, 47, 67, 88, 92, 93, 124, 134, 154, 175, 180, 220, 260, 269, 270, 273, 276, 277, 278, 382, 442, 460, 511, 619, 634, 743, 831, 876], "regexp": [38, 88, 92, 93, 198, 203, 205, 210, 437, 550, 619, 876], "stc_mean_label": 38, "func_label": 38, "stc_to_label": [38, 866, 876], "maximum": [38, 47, 48, 50, 58, 81, 113, 117, 150, 175, 176, 180, 181, 199, 200, 203, 213, 242, 257, 262, 263, 264, 265, 269, 270, 273, 275, 276, 277, 278, 295, 296, 324, 340, 363, 441, 442, 445, 466, 471, 473, 474, 476, 477, 509, 517, 523, 532, 533, 538, 556, 558, 572, 582, 583, 661, 683, 684, 686, 687, 692, 696, 701, 702, 703, 704, 705, 706, 707, 708, 710, 712, 714, 722, 725, 726, 728, 743, 767, 772, 778, 781, 801, 806, 807, 816, 831, 858, 876], "anat_label": 38, "stc_anat_label": 38, "pca_anat": 38, "extract_label_time_cours": [38, 39, 41, 180, 269, 270, 273, 276, 277, 278, 511, 866, 876], "pca_flip": [38, 39, 269, 270, 273, 276, 277, 278, 442], "stc_func_label": 38, "pca_func": 38, "show_view": [38, 48, 107, 114, 133, 134, 159, 180, 189, 209, 221, 234, 269, 270, 273, 276, 277, 278, 743, 801, 806, 876], "add_label": [38, 59, 102, 114, 124, 743], "73227205": 38, "80078852": 38, "62750681": 38, "173": [38, 56, 70, 94, 144, 157, 168, 207, 224, 228, 229, 242, 275, 565], "label_from_stc": [38, 56], "strategi": [39, 194, 197, 203, 205, 206, 242, 351, 363, 413, 425, 473, 656, 714, 775, 855], "simpl": [39, 46, 126, 143, 144, 150, 159, 160, 165, 180, 193, 194, 200, 204, 221, 224, 239, 242, 254, 322, 351, 408, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 493, 557, 712, 722, 791, 835, 852, 858, 876], "patheffect": [39, 159], "path_effect": [39, 159], "label_fnam": 39, "stc_label": 39, "mean_flip": [39, 269, 270, 273, 276, 277, 278, 442, 876], "tc": 39, "pe": 39, "stroke": [39, 159], "foreground": [39, 141, 159, 269, 270, 273, 276, 277, 278, 743, 801, 806, 876], "possibl": [39, 43, 45, 112, 133, 136, 139, 141, 142, 144, 148, 149, 150, 155, 159, 160, 167, 168, 169, 170, 171, 177, 179, 187, 189, 194, 197, 198, 199, 200, 201, 203, 204, 206, 207, 208, 210, 213, 214, 215, 216, 221, 224, 228, 229, 237, 239, 256, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 322, 324, 352, 408, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 425, 431, 449, 459, 467, 476, 477, 484, 500, 556, 557, 591, 592, 610, 611, 641, 678, 683, 685, 696, 697, 700, 730, 759, 769, 777, 778, 781, 786, 789, 790, 797, 833, 840, 852, 853, 855, 857, 858, 861, 862, 876], "vectorsourceestim": [39, 60, 174, 269, 270, 273, 274, 277, 278, 290, 291, 471, 473, 474, 523, 524, 525, 526, 527, 532, 533, 624, 806, 807, 831, 866, 876], "stc_vec": [39, 41, 179], "stc_vec_label": 39, "ee6677": [39, 159, 712, 722], "228833": 39, "4477aa": [39, 712, 722], "xyz": [39, 155, 159, 177, 269, 270, 273, 276, 277, 278, 310, 328, 442, 471, 500, 813, 876], "zorder": [39, 159, 264, 265, 712, 722, 777, 780, 876], "740": [39, 56, 79, 194], "label_source_activ": [39, 56], "ir": 40, "l0": [40, 473], "sparser": [40, 269, 273, 277, 801], "convex": [40, 46, 59, 242, 259, 262, 263, 264, 265, 271, 408, 415, 476, 477, 555, 556, 570, 696, 698, 700, 760, 775, 782, 786, 795, 798, 803, 805, 876], "mixed_norm": [40, 174, 474, 866, 876], "sure": [40, 43, 45, 69, 107, 111, 133, 134, 139, 140, 143, 150, 155, 160, 161, 165, 169, 170, 171, 175, 188, 198, 201, 202, 203, 205, 208, 213, 228, 232, 233, 234, 254, 264, 265, 439, 440, 473, 488, 540, 555, 566, 691, 712, 722, 723, 724, 726, 780, 822, 833, 834, 835, 843, 876], "criterion": [40, 523, 876], "n_mxne_it": [40, 473], "use_cp": [40, 90, 157, 220, 270, 276, 278, 282, 283, 362, 523, 524, 525, 526, 527, 530, 534, 539, 540, 660, 661, 858, 876], "maxit": [40, 59, 471, 473, 474], "3000": [40, 49, 111, 136, 141, 144, 145, 199, 205, 210, 254, 473, 474], "active_set_s": [40, 473], "debia": [40, 59, 473, 474], "slower": [40, 44, 46, 200, 257, 262, 361, 407, 475, 476, 477, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 516, 526, 592, 835, 864], "sure_alpha_grid": [40, 473], "083": [40, 122], "tidx": [40, 180], "7262": [40, 58, 59, 92, 177, 194, 221], "020866": [40, 58, 194], "58122e": [40, 58, 59, 92, 177, 194, 221], "element": [40, 58, 88, 167, 171, 177, 178, 181, 190, 194, 200, 204, 205, 213, 215, 224, 226, 242, 256, 259, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 320, 321, 408, 415, 420, 429, 430, 442, 443, 463, 476, 477, 511, 512, 513, 555, 570, 584, 645, 676, 684, 696, 698, 700, 748, 760, 762, 767, 775, 782, 795, 798, 801, 803, 805, 806, 807, 831, 835, 841, 856, 857, 861, 876], "21995": 40, "82623e": 40, "360": [40, 48, 49, 54, 55, 58, 59, 79, 80, 91, 92, 119, 151, 161, 168, 171, 177, 190, 193, 207, 224, 229, 238], "warm": 40, "33333333333333": 40, "66666666666667": 40, "66666666666666": 40, "666666666666664": 40, "60279": 40, "603691813114": 40, "59855": 40, "33381940738": 40, "60434": 40, "87086639602": 40, "60386": 40, "806544140134": 40, "60336": 40, "58240427435": 40, "60303": 40, "83155030615": 40, "60157": 40, "013430584055": 40, "59974": 40, "67524684279": 40, "59597": 40, "86913013583": 40, "59084": 40, "52687739991": 40, "compute_source_morph": [40, 43, 44, 132, 157, 159, 179, 180, 232, 233, 234, 269, 273, 274, 277, 278, 621, 801, 807, 851, 866, 876], "subject_from": [40, 43, 44, 133, 179, 268, 274, 358, 542, 543, 621, 633, 634, 635, 636, 816, 851], "stc_fsaverag": [40, 43, 44, 851], "src_fsaverage_fnam": 40, "src_fsaverag": 40, "matthieu": [40, 59, 242, 473, 474], "kowalski": [40, 59, 242, 473, 474], "acceler": [40, 242, 473, 841, 855, 858, 876], "gradient": [40, 117, 242, 257, 262, 263, 264, 265, 267, 473, 475, 476, 477, 519, 556, 696, 698, 699, 700, 760, 876], "physic": [40, 155, 159, 169, 175, 177, 188, 208, 242, 264, 265, 267, 429, 441, 473, 476, 477, 523, 567, 575, 584, 777, 831, 858, 861], "medicin": [40, 81, 175, 208, 242, 473, 556, 584, 858], "biologi": [40, 81, 175, 208, 242, 473, 556, 584, 858], "1937": [40, 242, 473], "1961": [40, 242, 473], "2012": [40, 59, 150, 168, 200, 224, 242, 268, 273, 280, 352, 473, 474, 689, 690, 864], "0031": [40, 175, 208, 242, 473, 584, 858], "9155": [40, 175, 208, 242, 473, 584, 858], "jen": [40, 46, 59, 242, 473, 474, 876], "haueisen": [40, 46, 59, 242, 473, 474], "improv": [40, 69, 143, 193, 194, 202, 205, 242, 262, 263, 264, 265, 303, 339, 341, 345, 368, 369, 410, 419, 444, 446, 447, 448, 476, 477, 534, 557, 592, 595, 653, 658, 724, 727, 835, 851, 853, 854, 855, 876], "prni": [40, 46, 242, 474], "t\u00fcbingen": [40, 242], "6858545": [40, 242], "charl": [40, 44, 242, 274, 358, 473], "alban": [40, 242, 473], "deledal": [40, 242, 473], "samuel": [40, 92, 93, 242, 473, 876], "vaiter": [40, 242, 473], "jalal": [40, 242, 473], "fadili": [40, 242, 473], "peyr\u00e9": [40, 242, 473], "stein": [40, 242, 473], "unbias": [40, 242, 473], "risk": [40, 180, 200, 203, 228, 242, 262, 263, 264, 265, 473, 476, 477, 575, 743], "sugar": [40, 242, 473], "siam": [40, 242, 473], "journal": [40, 43, 69, 70, 73, 117, 133, 156, 194, 200, 208, 229, 237, 242, 262, 263, 264, 265, 274, 352, 358, 429, 473, 476, 477, 556, 564, 565, 567, 584, 656, 683, 684, 686, 687, 698, 700, 708, 712, 714, 722, 723, 725, 726, 728, 760, 850], "2448": [40, 242, 473], "2487": [40, 242, 473], "1137": [40, 242, 473], "140968045": [40, 242, 473], "393": [40, 79, 207, 229], "mixed_norm_invers": [40, 56], "annalisa": [41, 876], "pascarella": [41, 876], "iac": 41, "cnr": 41, "dir": [41, 170, 254, 743, 858, 861], "data_dir": [41, 57, 132, 143], "bem_dir": [41, 45, 107, 158, 160, 181], "fname_mixed_src": 41, "fname_aseg": [41, 180], "fname_model": 41, "_audvi": 41, "_audvis_raw": [41, 156], "substructur": 41, "labels_vol": 41, "amygdala": 41, "thalamu": 41, "proper": [41, 69, 224, 239, 263, 264, 265, 268, 295, 296, 352, 356, 357, 363, 367, 368, 369, 371, 408, 415, 451, 452, 471, 473, 474, 477, 534, 754, 783, 835, 852, 864, 876], "stem": [41, 71, 273, 274, 277, 483, 502], "oct6": [41, 107, 157, 254, 269, 273, 277, 636, 644, 801, 851], "oct5": [41, 107, 851], "1026": [41, 107, 851], "bound": [41, 133, 157, 259, 262, 263, 264, 265, 269, 270, 271, 273, 276, 277, 278, 408, 415, 452, 476, 477, 555, 556, 645, 696, 697, 698, 700, 714, 732, 758, 760, 762, 767, 775, 782, 786, 795, 796, 797, 798, 801, 803, 805, 806, 807, 858, 861, 876], "10mm": 41, "someth": [41, 125, 148, 160, 170, 171, 190, 200, 205, 206, 213, 269, 270, 273, 276, 277, 278, 743, 744, 801, 806, 831, 834, 835, 838, 839, 840, 842, 876], "vol_src": [41, 134, 157], "add_interpol": [41, 50, 157, 645], "usual": [41, 50, 69, 81, 110, 112, 139, 142, 144, 148, 149, 150, 154, 155, 159, 160, 165, 166, 167, 169, 171, 179, 182, 187, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 213, 214, 215, 216, 232, 234, 237, 238, 254, 260, 261, 262, 263, 264, 265, 266, 267, 275, 301, 323, 328, 333, 335, 337, 459, 476, 477, 661, 683, 684, 686, 687, 831, 835, 836, 838, 841, 843, 855, 858, 861], "nuse": [41, 267, 275, 861], "2562": [41, 107, 149, 157, 851], "node": [41, 47, 157, 670, 671, 672, 748, 861, 876], "4590": 41, "2961": 41, "346": [41, 143, 168, 193, 207, 224, 229], "1275": 41, "2615": 41, "1340": 41, "1589": 41, "919": [41, 207, 229], "1372": 41, "1306": [41, 207], "010000": [41, 155], "2169": [41, 193], "write_source_spac": [41, 626, 851, 866, 876], "again": [41, 133, 140, 141, 143, 149, 150, 154, 155, 160, 171, 194, 197, 198, 200, 202, 203, 204, 205, 213, 224, 229, 239, 262, 263, 264, 265, 272, 476, 477, 556, 592, 794, 822, 834, 857, 858, 876], "plot_img": 41, "nipy_spectr": 41, "exist": [41, 44, 97, 99, 125, 139, 142, 148, 149, 155, 160, 169, 170, 171, 175, 179, 199, 200, 201, 204, 205, 206, 215, 219, 224, 226, 254, 256, 259, 260, 262, 263, 264, 265, 266, 267, 269, 270, 272, 273, 274, 275, 276, 277, 278, 286, 305, 306, 307, 310, 370, 375, 376, 377, 378, 380, 381, 383, 384, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 430, 434, 438, 439, 440, 441, 443, 460, 476, 477, 478, 491, 508, 541, 543, 545, 555, 556, 559, 566, 585, 604, 614, 634, 635, 638, 641, 642, 643, 646, 648, 649, 666, 667, 670, 696, 697, 698, 699, 700, 729, 732, 743, 766, 782, 797, 818, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829, 830, 835, 843, 851, 852, 855, 857, 862, 864, 876], "5mm": [41, 82, 134, 428, 743], "innerskul": 41, "598": [41, 194, 229], "807": [41, 193, 194, 229], "561": [41, 229], "6003": 41, "inv_method": [41, 88], "a2009": [41, 92, 154, 175, 269, 270, 273, 276, 277, 278, 442, 511, 619], "39266": 41, "01344e": 41, "coron": [41, 134, 157, 159, 179, 260, 743, 761, 771], "silhouett": [41, 179, 180, 269, 270, 273, 276, 277, 278, 743, 801, 806, 876], "43101017": 41, "98225664": 41, "7504814": 41, "45409596": 41, "02821048": 41, "97219252": 41, "vox": [41, 133, 159, 179, 180, 181], "2045": 41, "21567156": 41, "47889133": 41, "39837939": 41, "labels_parc": 41, "label_t": 41, "allow_empti": [41, 269, 270, 273, 276, 277, 278, 442], "nam": [41, 91, 92, 93, 182, 183, 221, 662, 876], "326": [41, 56, 168, 207, 224, 229], "mixed_source_space_invers": [41, 56], "computation": [42, 171, 200, 203, 204, 592, 858, 864], "sabbagh": [42, 242, 524, 876], "pierr": [42, 75, 203, 242, 524, 556, 876], "ablin": [42, 75, 203, 242, 524, 556, 876], "ga\u00ebl": [42, 242, 524], "varoquaux": [42, 242, 524], "state": [42, 88, 91, 107, 124, 139, 161, 165, 167, 174, 197, 198, 205, 206, 214, 224, 239, 242, 255, 257, 262, 263, 347, 432, 473, 492, 509, 516, 524, 556, 582, 601, 602, 607, 608, 648, 649, 650, 659, 660, 662, 683, 684, 685, 686, 687, 696, 698, 699, 743, 786, 831, 833, 835, 843, 857, 858, 861, 864, 876], "2020": [42, 73, 143, 156, 242, 386, 524, 556, 695, 852], "116893": [42, 242, 524], "alexand": [42, 133, 210, 242, 852, 876], "captur": [42, 46, 136, 143, 165, 171, 182, 183, 194, 202, 203, 204, 205, 206, 267, 272, 452, 555, 568, 569, 572, 598, 599, 831, 876], "environ": [42, 43, 44, 154, 171, 174, 260, 268, 269, 270, 272, 273, 275, 276, 277, 278, 301, 305, 306, 307, 310, 358, 363, 364, 365, 370, 375, 376, 377, 378, 380, 381, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 427, 456, 458, 460, 464, 466, 467, 468, 469, 470, 509, 513, 515, 542, 543, 581, 601, 619, 621, 628, 633, 634, 635, 636, 640, 643, 644, 645, 659, 662, 673, 691, 692, 735, 742, 743, 759, 761, 771, 801, 806, 807, 809, 816, 826, 833, 834, 838, 839, 840, 841, 843, 851, 855, 858, 876], "raw_empty_room_fnam": [42, 161], "ernoise_raw": [42, 127, 161, 171, 205], "raw_empty_room": [42, 161], "compute_raw_covari": [42, 86, 107, 161, 183, 190, 199, 259, 352, 605, 741, 851, 866, 876], "19800": [42, 127, 161, 171, 205], "85867": [42, 127, 161, 171, 205], "142": [42, 81, 127, 161, 168, 171, 205, 207, 224, 229, 275, 876], "965": [42, 127, 161, 171, 203, 205, 207, 229], "18000": 42, "249": [42, 46, 110, 150, 168, 194, 229, 242], "658": [42, 194], "319": [42, 49, 71, 72, 97, 110, 140, 151, 165, 168, 176, 179, 194, 199, 224, 229, 242, 556], "environment": [42, 165, 197, 201, 204, 206, 208, 213, 215, 216, 851], "rest": [42, 69, 72, 107, 124, 133, 136, 139, 161, 165, 167, 168, 214, 242, 262, 263, 264, 265, 273, 371, 390, 476, 477, 641, 649, 831, 835, 857, 859, 864, 876], "base_cov": 42, "data_cov": [42, 179, 292, 296], "fig_noise_cov": 42, "show_svd": [42, 64, 259, 768], "fig_base_cov": 42, "fig_data_cov": 42, "1680": 42, "_cov": 42, "_kw": 42, "7265": [42, 176, 178], "037795": [42, 176], "52065e": [42, 176, 178], "40775": 42, "63307e": 42, "stc_data": [42, 92, 663], "11847053": 42, "45687517": 42, "03282162": 42, "476": [42, 56, 143, 194, 207, 229, 242, 408], "mne_cov_pow": [42, 56], "pre": [43, 49, 133, 139, 140, 161, 165, 179, 199, 200, 203, 213, 262, 263, 264, 265, 352, 476, 477, 556, 638, 641, 835, 836, 840, 847, 876], "spheric": [43, 70, 77, 150, 155, 169, 182, 183, 184, 198, 205, 208, 242, 259, 262, 263, 264, 265, 268, 271, 273, 274, 310, 326, 328, 358, 408, 415, 429, 476, 477, 520, 555, 556, 565, 566, 567, 570, 575, 584, 645, 659, 662, 673, 677, 696, 698, 700, 743, 760, 767, 775, 777, 779, 782, 783, 786, 793, 795, 797, 798, 799, 803, 805, 858, 876], "surfer": [43, 154, 269, 273, 277, 365, 743, 801, 858], "fswiki": [43, 154, 269, 273, 277, 365, 801, 858], "surfaceregandtempl": 43, "depict": [43, 264, 265, 270, 276, 278, 783, 806, 858], "success": [43, 143, 254, 262, 263, 269, 270, 273, 274, 276, 277, 278, 358, 474, 532, 533, 582, 646, 683, 684, 686, 687, 698, 699, 711, 719, 733, 764, 835], "inflat": [43, 48, 49, 54, 55, 59, 60, 124, 150, 174, 190, 242, 269, 273, 277, 407, 743, 759, 801, 841, 858, 876], "overlaid": [43, 44, 133, 135, 171, 254, 645, 858, 876], "tommi": [43, 44, 876], "clausner": [43, 44, 876], "sample_dir": [43, 44, 114, 157, 171, 174], "fname_src": [43, 134, 158, 181], "fname_fsaverage_src": 43, "fname_stc": [43, 125, 174, 180], "repres": [43, 69, 73, 79, 113, 117, 139, 140, 141, 142, 143, 148, 150, 155, 157, 160, 161, 165, 167, 168, 169, 174, 188, 193, 200, 203, 216, 242, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 272, 273, 275, 276, 277, 278, 295, 296, 352, 356, 357, 367, 368, 369, 408, 415, 442, 451, 452, 471, 473, 474, 476, 477, 492, 497, 500, 509, 522, 534, 556, 570, 608, 610, 684, 696, 699, 743, 760, 783, 786, 788, 790, 801, 802, 806, 831, 835, 851, 855, 858, 861, 876], "itself": [43, 69, 142, 150, 159, 171, 187, 200, 203, 204, 205, 215, 224, 256, 262, 263, 268, 273, 276, 305, 441, 476, 477, 543, 743, 833, 835, 855, 858, 861], "proxim": [43, 134, 266, 691, 876], "src_orig": [43, 273, 276], "3732": [43, 174], "3766": 43, "src_to": [43, 44, 179, 358, 876], "argument": [43, 44, 118, 150, 154, 160, 161, 168, 169, 171, 179, 187, 188, 189, 190, 199, 200, 201, 204, 208, 213, 224, 228, 234, 238, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 301, 302, 303, 304, 305, 306, 307, 310, 312, 314, 315, 317, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 411, 413, 414, 418, 419, 421, 424, 425, 427, 429, 433, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 458, 459, 463, 464, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516, 518, 519, 520, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 549, 551, 552, 556, 558, 559, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 579, 580, 581, 582, 584, 585, 587, 588, 591, 592, 593, 596, 597, 598, 599, 603, 604, 605, 606, 607, 608, 610, 611, 612, 614, 615, 616, 618, 619, 620, 621, 622, 626, 627, 628, 629, 630, 631, 632, 633, 635, 636, 637, 638, 641, 644, 645, 647, 648, 649, 650, 660, 661, 664, 666, 667, 668, 669, 670, 671, 672, 678, 683, 684, 685, 686, 687, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 714, 715, 718, 719, 723, 724, 726, 727, 728, 729, 732, 733, 738, 739, 740, 741, 742, 743, 744, 751, 758, 759, 763, 765, 768, 771, 774, 775, 776, 777, 778, 780, 783, 786, 787, 788, 793, 794, 795, 796, 797, 799, 800, 801, 802, 804, 806, 807, 808, 812, 816, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 851, 861, 864, 876], "special": [43, 159, 168, 204, 213, 239, 369, 484, 491, 839, 857, 858, 864, 876], "alwai": [43, 72, 142, 143, 148, 150, 159, 166, 167, 168, 174, 189, 197, 199, 200, 201, 202, 203, 204, 205, 206, 213, 219, 224, 239, 260, 262, 263, 267, 269, 270, 272, 273, 275, 276, 277, 278, 316, 432, 442, 507, 556, 575, 614, 616, 683, 697, 751, 761, 771, 772, 802, 804, 813, 823, 831, 835, 858, 861, 862, 876], "10239": 43, "10240": 43, "10241": 43, "give": [43, 44, 59, 69, 73, 93, 141, 151, 160, 167, 170, 179, 181, 194, 198, 200, 201, 204, 224, 254, 259, 262, 263, 264, 265, 271, 275, 310, 408, 409, 410, 415, 419, 424, 425, 429, 444, 446, 447, 451, 473, 474, 476, 477, 492, 555, 556, 570, 575, 584, 602, 608, 682, 683, 684, 686, 687, 696, 698, 700, 708, 743, 760, 767, 775, 777, 779, 782, 783, 786, 793, 795, 797, 798, 799, 803, 805, 831, 833, 835, 841, 851, 855, 857, 858, 861, 876], "surfer_kwarg": [43, 174, 176], "brain_inf": 43, "under": [43, 44, 60, 125, 142, 143, 161, 188, 194, 197, 200, 204, 220, 224, 226, 232, 262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 280, 310, 322, 352, 353, 355, 357, 375, 376, 377, 378, 380, 381, 388, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 411, 418, 421, 424, 425, 451, 464, 466, 476, 477, 488, 495, 515, 518, 519, 529, 530, 539, 540, 561, 568, 569, 570, 592, 609, 613, 644, 647, 648, 649, 657, 661, 681, 683, 684, 685, 686, 687, 698, 700, 701, 702, 703, 704, 705, 706, 714, 715, 723, 724, 725, 726, 727, 775, 778, 797, 835, 851, 857, 858, 864, 876], "h5": [43, 44, 171, 179, 221, 269, 270, 272, 273, 274, 276, 277, 278, 286, 555, 594, 696, 697, 699, 716, 718, 729, 818, 819, 876], "respect": [43, 44, 47, 55, 67, 70, 88, 130, 139, 143, 150, 155, 158, 167, 168, 171, 174, 187, 194, 198, 200, 203, 204, 206, 207, 213, 214, 229, 257, 259, 262, 263, 264, 265, 267, 271, 272, 273, 277, 278, 295, 296, 297, 333, 352, 356, 357, 363, 367, 368, 369, 408, 410, 415, 419, 432, 444, 446, 451, 452, 471, 473, 474, 476, 477, 482, 500, 509, 512, 520, 534, 555, 556, 557, 558, 560, 570, 572, 602, 610, 645, 653, 656, 658, 664, 684, 696, 698, 700, 715, 723, 724, 726, 727, 743, 759, 760, 764, 767, 773, 775, 777, 782, 783, 786, 787, 790, 795, 796, 798, 803, 805, 807, 835, 838, 841, 851, 855, 858, 861, 876], "my": [43, 44, 171, 181, 219], "read_source_morph": [43, 44, 274, 866], "further": [43, 140, 150, 156, 165, 167, 177, 187, 194, 199, 203, 205, 208, 213, 224, 229, 234, 239, 262, 263, 287, 289, 318, 363, 556, 560, 683, 684, 686, 687, 699, 758, 774, 847, 853, 857, 858, 876], "assign": [43, 45, 99, 101, 118, 135, 139, 142, 143, 150, 160, 167, 169, 174, 177, 187, 188, 205, 208, 214, 219, 256, 262, 267, 272, 275, 466, 468, 484, 488, 491, 493, 498, 500, 509, 518, 556, 572, 573, 576, 577, 579, 580, 606, 640, 765, 826, 851, 858, 861, 876], "chain": [43, 166, 194, 198, 213, 414, 853, 858], "handi": [43, 189, 203], "liner": 43, "shortest": [43, 155, 200, 262, 263, 264, 265, 410, 419, 444, 446, 447, 476, 477, 561], "dougla": [43, 242, 274, 358], "greve": [43, 242, 274, 358], "lise": [43, 242, 274, 358], "der": [43, 242, 274, 358, 858, 876], "haegen": [43, 242, 274, 358], "qing": [43, 242, 274, 358], "cai": [43, 242, 274, 358], "steven": [43, 58, 124, 143, 150, 200, 242, 273, 274, 358, 408, 534, 653, 658, 852, 876], "stufflebeam": [43, 58, 124, 242, 273, 274, 358, 534, 538, 653, 656, 658], "mert": [43, 242, 274, 358], "sabuncu": [43, 242, 274, 358], "bruce": [43, 92, 154, 242, 274, 358, 523, 858], "fischl": [43, 92, 154, 242, 274, 358, 523, 858], "marc": [43, 242, 274, 358], "brysbaert": [43, 242, 274, 358], "languag": [43, 150, 171, 200, 228, 234, 242, 259, 262, 263, 264, 265, 271, 272, 274, 358, 408, 415, 476, 477, 555, 556, 696, 698, 700, 775, 782, 786, 795, 798, 803, 839, 860, 876], "asymmetri": [43, 242, 274, 358], "1477": [43, 242, 274, 358], "1492": [43, 242, 274, 358, 851], "jocn_a_00405": [43, 242, 274, 358], "515": [43, 56, 207, 229, 876], "morph_surface_stc": [43, 56], "affin": [44, 133, 155, 179, 181, 274, 358, 365, 620, 628, 732, 733, 816, 831, 858, 876], "nonlinear": [44, 242, 682], "symmetr": [44, 133, 200, 242, 262, 263, 264, 265, 269, 270, 273, 274, 276, 277, 278, 358, 444, 446, 447, 476, 477, 683, 684, 686, 687, 697, 708, 732, 733, 743, 762, 801, 806, 807, 816, 876], "diffeomorph": [44, 133, 242, 274, 358, 732, 733, 816, 876], "sdr": [44, 133, 179, 274, 358, 732, 733, 816, 876], "afterward": [44, 148, 262, 263, 264, 265, 476, 477, 641, 660, 876], "nibabel": [44, 133, 155, 159, 170, 181, 275, 468, 469, 470, 695, 743, 816, 834, 858, 876], "fetch_fsaverag": [44, 123, 133, 134, 158, 179, 189, 852, 866, 876], "plot_glass_brain": [44, 133, 181], "sample_dir_raw": [44, 174], "fname_t1_fsaverag": 44, "ensur": [44, 45, 81, 110, 143, 148, 158, 160, 161, 179, 200, 201, 204, 206, 208, 209, 221, 259, 262, 263, 264, 265, 267, 268, 269, 270, 273, 276, 277, 278, 318, 339, 352, 442, 443, 476, 477, 478, 548, 559, 584, 585, 696, 697, 698, 699, 700, 713, 738, 833, 835, 857, 858, 876], "fname_src_fsaverag": 44, "root": [44, 80, 133, 134, 135, 148, 149, 150, 158, 171, 179, 189, 221, 259, 264, 265, 269, 270, 273, 276, 277, 278, 295, 296, 378, 383, 400, 768, 777, 835, 858, 876], "zoom": [44, 69, 133, 150, 159, 179, 203, 205, 274, 358, 733, 876], "reslic": [44, 133, 179, 358, 733], "isotrop": [44, 858], "niter_affin": [44, 179, 274, 358, 876], "niter_sdr": [44, 179, 274, 358, 876], "999999888241291": 44, "translat": [44, 133, 155, 159, 179, 188, 208, 232, 254, 262, 263, 264, 265, 348, 363, 408, 415, 429, 487, 556, 560, 584, 696, 733, 743, 759, 774, 779, 782, 787, 790, 861, 876], "optim": [44, 59, 80, 133, 141, 156, 159, 161, 178, 179, 199, 200, 203, 208, 224, 232, 233, 234, 242, 264, 265, 268, 352, 408, 451, 473, 476, 477, 556, 566, 584, 673, 725, 728, 733, 831, 855, 876], "r\u00b2": [44, 133, 179], "rigid": [44, 133, 179, 733], "compute_vol_morph_mat": [44, 274, 358, 876], "equival": [44, 134, 140, 149, 155, 157, 159, 161, 164, 170, 185, 186, 188, 200, 203, 206, 220, 224, 237, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 276, 277, 278, 295, 296, 310, 351, 408, 414, 415, 448, 451, 452, 471, 473, 474, 476, 477, 518, 523, 534, 555, 556, 559, 561, 570, 575, 614, 643, 660, 683, 696, 698, 700, 712, 722, 726, 727, 733, 743, 759, 760, 767, 775, 777, 779, 782, 783, 786, 793, 795, 797, 798, 799, 801, 803, 805, 806, 831, 835, 851, 855, 858, 861, 862, 876], "reus": [44, 73, 136, 264, 265, 696, 779, 858], "exce": [44, 224, 257, 262, 263, 264, 265, 339, 341, 408, 415, 476, 477, 558, 561, 572, 683, 782, 796, 876], "thousand": [44, 99, 204, 225, 242, 358, 391, 852, 876], "nifti1": [44, 274, 277, 278], "img_fsaverag": 44, "t1_fsaverag": 44, "plot_anat": [44, 175], "draw_cross": 44, "overlai": [44, 154, 159, 171, 179, 203, 269, 270, 273, 276, 277, 278, 556, 743, 787, 801, 806, 876], "add_overlai": [44, 743], "brian": [44, 193, 242, 274, 358, 414, 858], "avant": [44, 242, 274, 358], "epstein": [44, 242, 274, 358], "murrai": [44, 150, 242, 274, 358], "grossman": [44, 242, 274, 358], "jame": [44, 200, 242, 274, 358], "gee": [44, 242, 274, 358], "autom": [44, 81, 111, 119, 133, 143, 155, 161, 162, 163, 164, 165, 197, 198, 199, 202, 203, 208, 242, 254, 264, 265, 267, 274, 352, 358, 363, 386, 481, 635, 759, 783, 811, 843, 855, 858, 864, 876], "elderli": [44, 242, 274, 358], "neurodegen": [44, 242, 274, 358], "medic": [44, 59, 204, 205, 242, 253, 274, 358, 473, 474, 523, 858, 863], "media": [44, 242, 274, 358], "2007": [44, 179, 229, 242, 274, 358, 471, 556, 683, 684, 686, 687, 725, 728], "858": [44, 56, 229], "802": [44, 143, 194, 229], "morph_volume_stc": [44, 56], "megin": [45, 155, 584, 876], "program": [45, 150, 160, 171, 254, 260, 262, 263, 264, 265, 267, 272, 305, 467, 468, 476, 477, 556, 698, 700, 771, 773, 790, 796, 799, 835, 839, 840, 841, 842, 858, 860, 861], "offer": [45, 180, 194, 200, 206, 221, 224, 225, 255, 256, 743, 833, 835, 862, 864, 876], "guid": [45, 154, 267, 833, 839, 854, 857, 859, 876], "ecd": [45, 164, 185, 186, 260, 261, 264, 265, 266, 267, 277, 351, 451, 518, 614, 660, 831, 876], "manual": [45, 81, 118, 125, 133, 136, 141, 148, 150, 155, 156, 159, 160, 161, 171, 181, 187, 189, 197, 198, 199, 201, 204, 208, 242, 255, 258, 267, 268, 316, 326, 352, 373, 429, 443, 556, 566, 567, 575, 584, 585, 637, 766, 841, 852, 855, 858, 861, 876], "advantag": [45, 111, 136, 149, 150, 166, 167, 200, 202, 203, 206, 210, 224, 239, 833, 843], "graphic": [45, 133, 154, 188, 262, 263, 272, 468, 476, 477, 556, 773, 790, 796, 835, 839, 841, 842, 852, 876], "read_dipol": [45, 114, 260, 261, 451, 866, 876], "everyth": [45, 102, 110, 125, 133, 134, 158, 159, 168, 177, 181, 190, 200, 213, 264, 265, 781, 833, 835, 837, 852, 853, 855], "read_vectorview_select": [45, 221, 226, 866, 876], "audvi": [45, 852], "evoked_left": [45, 209], "evoked_right": [45, 209], "09989760657919393": [45, 61], "80m": 45, "picks_left": 45, "evoked_fit_left": 45, "cov_fit_left": 45, "picks_right": 45, "evoked_fit_right": 45, "cov_fit_right": 45, "sss": [45, 161, 164, 197, 207, 211, 212, 262, 263, 264, 265, 267, 339, 340, 341, 342, 345, 346, 349, 369, 429, 476, 477, 496, 556, 567, 575, 584, 614, 773, 777, 785, 796, 855, 858, 876], "normalize_proj": [45, 267, 876], "dip_left": 45, "dip_right": 45, "153": [45, 168, 194, 224, 228, 400], "38720": [45, 181], "58607874e": 45, "29495097e": 45, "04486582e": 45, "78988420e": 45, "81501987e": 45, "79536167e": 45, "22800262e": 45, "50545865e": 45, "24472969e": 45, "41763741e": 45, "51116585e": 45, "49899073e": 45, "11191910e": 45, "30776654e": 45, "58725785e": 45, "82015291e": 45, "83338121e": 45, "85132759e": 45, "76790821e": 45, "26581206e": 45, "61643686e": 45, "900": [45, 79, 175, 180, 229], "396": [45, 79, 175, 180, 229, 242, 295], "354": [45, 79, 168, 175, 180, 207, 229], "195": [45, 83, 165, 168, 175, 180, 207, 224, 228, 242], "9828": [45, 876], "152": [45, 168, 189, 194, 207, 224, 228, 229, 238, 275], "69262885e": 45, "19272571e": 45, "91546253e": 45, "01298483e": 45, "64516797e": 45, "19806525e": 45, "33734643e": 45, "87121666e": 45, "27849772e": 45, "17670368e": 45, "61094719e": 45, "47048282e": 45, "57358697e": 45, "03235995e": 45, "14274862e": 45, "19294391e": 45, "09342253e": 45, "00283865e": 45, "12915739e": 45, "54166863e": 45, "75855684e": 45, "149": [45, 89, 149, 153, 168, 180, 193, 228, 229, 275], "9340": [45, 876], "prevent": [45, 69, 118, 198, 208, 254, 509, 561, 584, 661, 816, 876], "lambda": [45, 98, 110, 144, 194, 209, 220, 239, 259, 262, 263, 264, 265, 271, 312, 408, 415, 476, 477, 531, 555, 556, 570, 662, 696, 698, 700, 760, 767, 774, 782, 786, 795, 798, 803, 858, 861], "fulli": [45, 73, 171, 199, 201, 224, 228, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 318, 476, 477, 478, 677, 743, 762, 801, 806, 807, 833, 876], "make_forward_dipol": [45, 175, 866, 876], "stc_left": 45, "stc_right": 45, "sharei": [45, 72, 111, 112, 193, 205, 239], "supylabel": 45, "meter": [45, 79, 91, 92, 150, 155, 156, 159, 169, 175, 181, 205, 219, 254, 259, 260, 262, 263, 264, 265, 267, 268, 271, 280, 310, 326, 335, 363, 408, 415, 429, 476, 477, 492, 500, 515, 555, 556, 560, 565, 566, 567, 570, 575, 584, 589, 590, 608, 618, 645, 691, 696, 698, 700, 760, 767, 771, 775, 777, 779, 782, 783, 786, 793, 795, 797, 798, 799, 803, 805, 858, 876], "kb": [45, 50, 136, 142, 175, 180, 206, 219], "161": [45, 168, 203, 224, 228, 229], "7006": 45, "97034e": 45, "stcs_left": 45, "stcs_right": 45, "90m": 45, "amplitudes_left": 45, "amplitudes_right": 45, "vstack": [45, 113, 135, 140, 183, 221], "ampltud": 45, "n_left": 45, "mean_left": 45, "mean_right": 45, "transition_point": 45, "c0": [45, 150, 204], "c1": [45, 69, 110, 150, 204], "text": [45, 67, 125, 133, 134, 141, 150, 159, 176, 182, 187, 188, 190, 200, 201, 204, 205, 214, 215, 224, 239, 254, 262, 263, 275, 330, 476, 477, 611, 661, 743, 821, 835, 839, 851, 858, 876], "605": [45, 56, 104, 107], "multi_dipole_model": [45, 56], "promot": [46, 59], "focal": [46, 59, 81, 179, 556, 743, 811, 876], "assum": [46, 59, 63, 91, 92, 113, 121, 134, 140, 143, 150, 157, 159, 164, 171, 181, 187, 188, 199, 200, 203, 210, 215, 224, 226, 228, 239, 254, 256, 259, 260, 262, 263, 264, 265, 268, 271, 275, 295, 296, 301, 302, 305, 310, 323, 335, 352, 356, 357, 363, 367, 368, 369, 371, 408, 415, 427, 435, 443, 449, 450, 451, 452, 458, 471, 473, 474, 476, 477, 483, 484, 491, 505, 515, 519, 526, 534, 555, 556, 570, 604, 611, 630, 633, 635, 645, 661, 683, 684, 686, 687, 690, 691, 696, 698, 699, 700, 732, 743, 759, 760, 767, 775, 777, 779, 782, 783, 784, 785, 786, 793, 795, 797, 798, 799, 803, 805, 824, 831, 835, 840, 843, 858, 861, 862, 876], "stationar": [46, 59, 447, 476, 477], "properti": [46, 59, 73, 99, 112, 125, 142, 160, 171, 188, 193, 198, 203, 204, 213, 216, 255, 256, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 272, 273, 276, 277, 278, 300, 363, 407, 476, 477, 542, 556, 572, 573, 585, 646, 661, 678, 696, 697, 698, 699, 700, 731, 743, 745, 762, 771, 773, 777, 783, 784, 786, 788, 796, 801, 806, 807, 811, 862, 876], "bias": [46, 69, 150, 165, 179, 198, 200, 205, 228, 242, 452, 876], "short": [46, 59, 65, 80, 101, 110, 112, 125, 135, 136, 139, 159, 167, 171, 197, 200, 204, 205, 207, 209, 215, 225, 237, 239, 242, 262, 263, 264, 265, 476, 477, 493, 589, 592, 698, 700, 701, 704, 711, 712, 715, 719, 722, 831, 835, 858, 859, 876], "transient": [46, 80, 197, 208, 239, 561], "mathurin": [46, 242, 876], "massia": [46, 242, 876], "yousra": [46, 51, 91, 124, 242, 473, 474, 876], "bekhti": [46, 51, 91, 124, 242, 473, 474, 876], "tf_mixed_norm": [46, 59, 473, 866, 876], "350e": [46, 111, 238], "49948803289596966": 46, "301": [46, 112, 168, 190, 207, 224, 237, 861], "16610": 46, "multidict": 46, "l1_ratio": [46, 59, 474, 876], "wsize": [46, 59, 474, 711, 719, 720], "n_tfmxne_it": [46, 474], "dgap": [46, 59], "89e": 46, "p_obj": [46, 59], "289": [46, 110, 148, 168, 193, 228, 229, 242, 414, 556], "000835": 46, "d_obj": [46, 59], "190": [46, 59, 74, 79, 114, 168, 183, 194, 224, 229, 242, 683, 684, 686, 687], "083203": 46, "n_activ": [46, 59, 208, 346], "247": [46, 110, 168, 210, 229, 242, 852], "27e": 46, "253": [46, 168, 207, 229, 242], "327890": 46, "582652": 46, "53e": 46, "707285": 46, "246": [46, 110, 133, 168, 179, 228, 242], "182101": 46, "18e": 46, "589468": 46, "408712": 46, "82e": 46, "243688": 46, "248": [46, 72, 83, 110, 121, 168, 194, 207, 209, 224, 228, 229], "420556": 46, "67e": [46, 59], "094971": 46, "57e": 46, "991067": 46, "49e": [46, 59], "936498": 46, "442467": 46, "08e": 46, "906871": 46, "829870": 46, "70e": 46, "887205": 46, "017223": 46, "24e": 46, "872107": 46, "148583": 46, "11e": 46, "762424": 46, "94e": 46, "854012": 46, "259629": 46, "659": [46, 167, 194, 229], "867870": 46, "46e": 46, "043596": 46, "270": [46, 79, 110, 168, 190, 193, 207, 224, 229, 876], "587841": 46, "87e": 46, "274": [46, 79, 80, 110, 121, 165, 168, 170, 173, 190, 229], "722230": 46, "272": [46, 110, 117, 147, 168, 170, 207, 224, 229, 242, 653, 658], "856399": 46, "29e": 46, "678013": 46, "849283": 46, "335": [46, 56, 107, 168, 229, 242, 858], "966495": 46, "73e": 46, "239": [46, 56, 60, 67, 79, 80, 110, 157, 168, 190, 194, 201, 207, 210, 229], "215341": 46, "236": [46, 110, 168, 221, 228, 229], "481796": 46, "17e": 46, "095509": 46, "238": [46, 168, 224, 225, 228, 229], "178504": 46, "77e": 46, "068507": 46, "591286": 46, "298": [46, 74, 168, 229], "546285": 46, "06e": 46, "223": [46, 110, 168, 229], "133013": 46, "826666": 46, "295": [46, 78, 83, 110, 168, 207, 229], "194637": 46, "debias": [46, 59], "551": [46, 73, 83, 112], "d0": [46, 59], "235933e": 46, "000000e": [46, 59], "irtf": 46, "2015": [46, 70, 97, 99, 111, 119, 161, 200, 203, 225, 239, 242, 264, 265, 352, 386, 391, 565, 682, 725, 728, 783, 852, 855, 864], "intern": [46, 69, 70, 81, 125, 131, 135, 159, 167, 169, 182, 189, 198, 205, 208, 226, 242, 262, 263, 264, 265, 310, 352, 357, 363, 387, 408, 429, 476, 477, 491, 496, 553, 556, 564, 565, 566, 567, 575, 584, 614, 682, 683, 696, 697, 698, 699, 700, 743, 789, 835, 876], "workshop": [46, 242, 408], "roland": [46, 242, 474], "badeau": [46, 242, 474], "trento": [46, 242, 474], "7552337": [46, 242, 474], "304": [46, 50, 56, 107, 110, 122, 149, 168, 170, 183, 207, 225, 229, 876], "multidict_reweighted_tfmxn": [46, 56], "plane": [47, 133, 155, 169, 204, 226, 229, 238, 428, 649, 724, 727, 761, 831, 858], "olaf": [47, 48, 49, 50, 54, 55, 99, 242, 538, 653, 658, 876], "hauk": [47, 48, 49, 50, 54, 55, 99, 242, 538, 653, 658, 876], "mrc": [47, 48, 49, 50, 54, 55, 858], "cbu": [47, 48, 49, 50, 54, 55, 858], "cam": [47, 48, 49, 50, 54, 55, 858], "ac": [47, 48, 49, 50, 54, 55, 133, 189, 197, 201, 242, 352, 369, 831, 858], "uk": [47, 48, 49, 50, 54, 55, 242, 352, 858], "rougier": 47, "borrow": [47, 228, 234], "hi": [47, 254], "make_inverse_resolution_matrix": [47, 48, 50, 54, 55, 866, 876], "get_point_spread": [47, 48, 50, 866, 876], "circular_layout": [47, 866], "plot_connectivity_circl": [47, 765], "rm_mne": [47, 54], "n_label": [47, 220, 269, 270, 273, 276, 277, 278, 442, 511, 663], "label_color": [47, 461], "lh_label": [47, 743], "endswith": [47, 169], "label_ypo": 47, "ypo": 47, "yp": 47, "rh_label": [47, 743], "summaris": [47, 210], "five": [47, 141, 149, 170, 182, 207, 216, 242, 339, 476, 477, 556, 743, 788, 858], "princip": [47, 203, 204, 242, 268, 352, 556, 673, 858, 876], "probabl": [47, 69, 164, 187, 197, 198, 199, 200, 203, 204, 224, 226, 229, 239, 412, 418, 437, 476, 477, 488, 743, 800, 833, 835, 840, 841, 842, 858], "n_comp": [47, 532, 533], "stcs_psf_mne": 47, "pca_vars_mn": 47, "return_pca_var": [47, 532, 533], "n_vert": 47, "printopt": 47, "caudalanteriorcingul": 47, "caudalmiddlefront": [47, 88, 93, 134], "cuneu": [47, 743], "entorhin": 47, "frontalpol": 47, "fusiform": 47, "inferiorpariet": [47, 220], "inferiortempor": 47, "insula": 47, "isthmuscingul": 47, "lateraloccipit": 47, "lateralorbitofront": 47, "lingual": 47, "medialorbitofront": 47, "middletempor": 47, "paracentr": 47, "parahippocamp": [47, 67], "parsoperculari": 47, "parsorbitali": 47, "parstriangulari": 47, "pericalcarin": 47, "postcentr": [47, 67], "posteriorcingul": 47, "precentr": [47, 134], "precuneu": 47, "rostralanteriorcingul": 47, "rostralmiddlefront": [47, 220], "superiorfront": [47, 134], "superiorpariet": 47, "superiortempor": 47, "supramargin": 47, "temporalpol": 47, "transversetempor": [47, 220], "overal": [47, 125, 205, 226, 232, 233, 474, 857, 876], "bigger": [47, 79, 125, 233, 476, 477], "leaker": 47, "psfs_mat": 47, "pearson": [47, 200, 203, 242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 556, 696, 699], "arbitrari": [47, 113, 159, 164, 165, 166, 170, 200, 219, 222, 226, 229, 259, 260, 261, 262, 263, 264, 265, 269, 270, 271, 273, 276, 277, 278, 408, 415, 476, 477, 493, 556, 573, 577, 683, 684, 686, 687, 696, 698, 699, 700, 775, 782, 789, 795, 803, 857, 858, 876], "absolut": [47, 60, 80, 84, 121, 127, 134, 150, 178, 188, 224, 257, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 356, 408, 476, 477, 479, 532, 533, 538, 556, 572, 596, 645, 657, 689, 696, 699, 761, 767, 787, 807, 831, 835, 841, 876], "leakage_mn": 47, "node_ord": [47, 748], "mirror": [47, 69, 169, 262, 263, 264, 265, 269, 273, 277, 278, 446, 447, 448, 476, 477, 758, 762, 801, 807, 864, 876], "node_angl": [47, 748], "start_po": [47, 748], "group_boundari": [47, 748], "subplot_kw": 47, "n_line": 47, "node_color": 47, "neighbour": [47, 259, 262, 263, 264, 265, 271, 408, 415, 476, 477, 555, 556, 570, 696, 698, 700, 775, 782, 786, 795, 798, 803, 805, 876], "deeper": [47, 54, 55, 179, 858], "versu": [47, 140, 150, 165, 214, 221, 297, 843], "fname_fig": 47, "plot_label_leakag": 47, "savefig": [47, 113], "inde": [47, 69, 140, 167, 174, 204, 205, 239, 833], "max_val": 47, "brain_lh": 47, "caudal": [47, 88, 93, 743], "pos_lim": [47, 54, 55, 179, 220, 232, 269, 270, 273, 276, 277, 278, 762, 801, 806, 807], "brain_rh": 47, "667": [47, 56, 194, 207], "621": [47, 150, 194, 229, 242], "psf_ctf_label_leakag": [47, 56], "get_cross_talk": [48, 49, 866, 876], "fname_evo": [48, 49, 50, 54, 55, 64], "regularis": [48, 54, 55, 535], "rm_lor": 48, "stc_psf": 48, "stc_ctf": 48, "31738": [48, 54, 55], "68644e": [48, 54, 55], "vertno_lh": 48, "verttru": [48, 49], "maxima": [48, 144, 264, 265, 593, 780, 782, 876], "vert_max_psf": 48, "vert_max_ctf": 48, "brain_psf": 48, "ventral": [48, 743], "add_foci": [48, 49, 50, 159, 174, 176, 221, 743, 876], "coords_as_vert": [48, 49, 50, 174, 176, 221, 743], "22842778": 48, "2956258": 48, "85246681": 48, "brain_ctf": 48, "10932369": 48, "16149934": 48, "93351158": 48, "psf_ctf_vertic": [48, 56], "make_lcmv_resolution_matrix": [49, 866, 876], "vi": [49, 149, 229, 262, 767], "cov_pr": 49, "post": [49, 118, 133, 179, 200, 205, 208, 831, 835, 841, 842, 854, 855, 857], "cov_post": 49, "4433": 49, "filters_pr": 49, "weight_norm": [49, 179, 221, 295, 296, 876], "filters_post": 49, "rm_pre": 49, "stc_pre": 49, "rm_post": 49, "stc_post": 49, "brain_pr": 49, "ndata": 49, "brain_post": 49, "psf_ctf_vertices_lcmv": [49, 56], "coars": 50, "don": [50, 93, 113, 115, 118, 133, 140, 143, 144, 145, 156, 157, 158, 161, 167, 170, 198, 201, 203, 204, 205, 213, 226, 227, 228, 229, 234, 239, 254, 257, 262, 263, 370, 487, 488, 545, 585, 601, 608, 610, 645, 683, 686, 835, 836, 841, 843, 855, 857, 859, 876], "src_vol": 50, "forward_vol": 50, "1045": 50, "895": [50, 229], "015000": [50, 206], "860": [50, 79, 94, 207], "158": [50, 117, 128, 168, 194, 224], "inverse_operator_vol": 50, "rm_lor_vol": 50, "sources_vol": 50, "stc_psf_vol": 50, "383": [50, 79, 229], "140193": 50, "7904e": 50, "66519": 50, "31885e": 50, "1209": 50, "verttrue_vol": 50, "max_vert_idx": 50, "unravel_index": [50, 180, 226], "vert_max_ctf_vol": 50, "brain_psf_vol": 50, "plot_3d": [50, 134, 179, 277, 278, 876], "volume_opt": [50, 269, 270, 273, 276, 277, 278, 743, 801, 806], "32501698": 50, "38884743": 50, "87974682": 50, "psf_volum": [50, 56], "recurs": [51, 159, 200, 242, 254, 269, 273, 277, 298, 644, 801], "rap_mus": [51, 56, 451, 866, 876], "n100": [51, 165, 190, 200, 205], "1834": 51, "ori": [51, 175, 179, 182, 184, 221, 260, 295, 296, 428, 451], "2470324143277338": 51, "7764326014559829": 51, "5797649538112025": 51, "5154591814700811": 51, "5345116895021849": 51, "6697753996853825": 51, "332": [51, 168, 190, 224, 242, 298], "1999": [51, 110, 239, 242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 298, 352, 476, 477, 556, 582, 696, 699, 858], "740118": [51, 242, 298], "560": [51, 56, 79, 176, 194, 206, 229, 241], "inv_fnam": 52, "fmri": [52, 194, 242, 473, 474, 523, 831, 852, 858, 861], "fmri_prior": 52, "rr": [52, 159, 160, 174, 177, 275, 340, 342, 343, 344, 627, 630, 645, 665, 824, 861], "use_tri": [52, 159, 275, 861], "8192": [52, 181, 184, 407], "read_invers": [52, 56], "nb": [53, 476, 477], "790": [53, 56, 79, 194, 207], "read_stc": [53, 56], "localis": [54, 55, 184, 224, 225, 242, 538, 683, 684, 686, 687], "mimic": [54, 55, 409, 432, 523], "resolution_metr": [54, 55, 56, 866, 876], "ple": [54, 55, 538], "sd": [54, 55, 133, 239, 658, 698, 700], "ple_mne_psf": 54, "peak_err": [54, 55, 538], "sd_mne_psf": 54, "sd_ext": [54, 55, 538], "rm_dspm": 54, "ple_dspm_psf": 54, "sd_dspm_psf": 54, "brain_ple_mn": 54, "brain_ple_dspm": 54, "subtract": [54, 55, 65, 69, 72, 105, 111, 118, 132, 140, 150, 175, 200, 206, 208, 224, 226, 254, 257, 258, 262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 285, 295, 296, 351, 352, 356, 357, 367, 368, 369, 408, 415, 416, 451, 452, 471, 473, 474, 476, 477, 478, 534, 539, 540, 556, 557, 572, 584, 614, 615, 638, 641, 683, 686, 696, 699, 783, 803, 831, 858, 861, 876], "diff_pl": [54, 55], "brain_ple_diff": [54, 55], "superfici": [54, 179, 858], "brain_sd_mn": 54, "brain_sd_dspm": 54, "diff_sd": [54, 55], "brain_sd_diff": [54, 55], "wors": [54, 170, 584, 851], "distinguish": [54, 71, 150, 171, 194, 197, 198, 199, 202, 203, 205, 213, 359, 831, 876], "stenroo": [54, 55, 242, 538, 653, 658], "matthia": [54, 55, 242, 538, 876], "treder": [54, 55, 242, 538], "kit": [54, 55, 169, 170, 183, 224, 242, 267, 336, 344, 429, 500, 519, 538, 567, 575, 584, 610, 858, 866, 867, 876], "biorxiv": [54, 55, 221, 242, 295, 296, 538], "2019": [54, 55, 65, 74, 140, 206, 209, 224, 229, 242, 538, 571, 591, 683, 684, 686, 687, 710, 712, 722, 725, 726, 728, 834, 841], "1101": [54, 55, 112, 221, 242, 295, 296, 538], "672956": [54, 55, 242, 538], "878": [54, 56, 194, 242, 680], "resolution_matrix": 55, "spatial_resolut": 55, "fname_fwd_emeg": 55, "forward_emeg": 55, "forward_meg": 55, "pick_types_forward": [55, 67, 90, 282, 283, 866], "inv_emeg": 55, "inv_meg": 55, "63485": 55, "05542e": 55, "rm_emeg": 55, "ple_psf_emeg": 55, "sd_psf_emeg": 55, "rm_meg": 55, "ple_psf_meg": 55, "sd_psf_meg": 55, "brain_ple_emeg": 55, "emeg": [55, 864], "brain_ple_meg": 55, "bring": [55, 69, 155, 180, 203, 215, 267, 277, 278, 429, 567, 575, 584, 807, 858, 861], "brain_sd_emeg": 55, "brain_sd_meg": 55, "217": [55, 56, 167, 168, 207, 224, 228, 229], "resolution_metrics_eegmeg": [55, 56], "auto_examples_invers": 56, "vector_mne_solut": [56, 60], "711": [56, 60, 193, 206, 229, 242, 262, 263, 264, 265, 476, 477, 641], "609": [56, 150, 228, 229, 231, 242], "time_frequency_mixed_norm_invers": [56, 59], "538": [56, 59, 143, 229], "source_space_snr": [56, 58], "039": [56, 58, 139, 141, 148, 168, 221], "231": [56, 58, 75, 83, 110, 168, 193, 224], "snr_estim": [56, 57], "686": [56, 57, 142, 229], "plot_snr_estim": [57, 866, 876], "padma": [58, 242, 571, 876], "sundaram": [58, 242, 571, 876], "tottochan": 58, "kaisu": [58, 876], "lankinen": [58, 876], "klankinen": 58, "inv_op": [58, 220], "snr_stc": [58, 273], "estimate_snr": [58, 273, 866, 876], "maxidx": 58, "med": [58, 92, 135, 165, 194, 220], "viridi": [58, 99, 125, 135, 142, 224, 697, 785], "70263": [58, 177], "18949e": [58, 177], "evoked_eeg": [58, 148, 205], "inv_op_eeg": 58, "stc_eeg": 58, "snr_stc_eeg": 58, "7499": [58, 88], "118742": [58, 88], "155292": [58, 88], "81981": 58, "0644e": 58, "goldenholz": [58, 242, 273], "seppo": [58, 242, 273, 534, 653, 658], "ahlfor": [58, 242, 273, 429, 534, 653, 658], "dahlia": [58, 242, 273], "sharon": [58, 242, 273], "mamiko": [58, 242, 273], "ishitobi": [58, 242, 273], "lucia": [58, 124, 242, 273], "vaina": [58, 124, 242, 273], "magnetoencephalographi": [58, 156, 177, 242, 273, 656, 725, 728, 858], "1086": [58, 207, 242, 273], "hbm": [58, 177, 242, 273, 685, 851], "20571": [58, 242, 273], "built": [59, 139, 149, 150, 156, 158, 164, 165, 166, 174, 180, 201, 203, 209, 213, 217, 218, 224, 260, 262, 263, 264, 265, 267, 302, 326, 327, 364, 437, 459, 460, 468, 476, 477, 515, 519, 581, 631, 664, 691, 700, 743, 759, 835, 841, 847, 855, 856, 876], "fourier": [59, 101, 200, 237, 239, 242, 262, 263, 264, 265, 476, 477, 698, 700, 701, 704, 708, 711, 712, 714, 715, 719, 722, 723, 724, 726, 727], "stft": [59, 474, 711, 720, 831, 866, 876], "henc": [59, 112, 141, 149, 155, 161, 174, 189, 202, 205, 213, 224, 237, 239, 260, 261, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 476, 477, 696, 699, 756, 831, 842, 855], "trap": 59, "minima": [59, 593], "pick_channels_evok": 59, "slightli": [59, 69, 125, 159, 179, 183, 200, 205, 208, 209, 228, 262, 263, 264, 265, 268, 357, 476, 477, 526, 534, 673, 743, 780, 851, 852, 858, 876], "eventu": [59, 135, 316, 327, 574, 835, 851], "020865": [59, 92, 177, 221], "96729": 59, "38524e": 59, "985": 59, "descent": [59, 242, 473, 876], "845726": 59, "353441": 59, "859492": 59, "292946": 59, "51e": 59, "670058": 59, "519426": 59, "61e": 59, "669663": 59, "668049": 59, "546629e": 59, "049948803289596964": [59, 93, 178, 180], "2996928197375818": [59, 139, 148, 150, 226], "10e": [59, 67, 88, 93], "15e": 59, "20e": [59, 262, 263, 272, 476, 477, 773, 796], "medial": [59, 234, 683, 684, 743], "yellow": [59, 205, 264, 265, 758, 777, 794], "scalar_thresh": [59, 743], "stationari": [59, 78, 203, 205, 242, 345, 474, 851], "410": [59, 70, 79, 81, 127, 197, 201, 205, 216, 229, 237, 242, 474], "051": [59, 139, 141, 148, 168, 198, 218, 221, 242, 474], "sparsiti": [59, 242, 474, 656], "g\u00e1bor": [59, 242, 474], "sz\u00e9keli": [59, 242, 474], "horst": [59, 242, 474], "hahn": [59, 242, 474], "editor": [59, 190, 242, 330, 471, 474, 556, 725, 728, 835, 839, 853], "6801": [59, 242, 474], "page": [59, 133, 171, 200, 216, 242, 262, 263, 327, 385, 474, 476, 477, 556, 712, 722, 723, 725, 726, 728, 743, 773, 796, 833, 835, 836, 839, 841, 842, 847, 850, 851, 854, 855, 856, 857, 858, 859, 876], "611": [59, 242, 352, 474], "springer": [59, 221, 242, 295, 296, 385, 474, 556], "berlin": [59, 221, 242, 295, 296, 474], "heidelberg": [59, 221, 242, 295, 296, 474], "1007": [59, 150, 204, 205, 206, 221, 242, 295, 296, 408, 474, 523, 556, 571, 661, 858], "978": [59, 111, 150, 200, 203, 221, 229, 242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 295, 296, 352, 474, 476, 477, 556, 678, 696, 699], "22092": [59, 242, 474], "0_49": [59, 242, 474], "magnitud": [60, 63, 69, 110, 134, 141, 144, 148, 149, 165, 167, 177, 179, 197, 198, 200, 214, 221, 232, 233, 270, 276, 278, 352, 408, 429, 452, 531, 561, 567, 575, 584, 593, 688, 784, 806, 833, 855, 876], "accomplish": [60, 133, 134, 148, 160, 170, 833, 841, 851, 852, 858], "plot_vector_source_estim": [60, 808, 866, 876], "hood": [60, 125, 142, 188, 197, 200, 204, 876], "plot_source_estim": [60, 743, 808, 866, 876], "instruct": [60, 114, 160, 188, 209, 467, 833, 834, 835, 836, 837, 839, 840, 841, 842, 846, 849, 855, 861, 876], "impos": [60, 193, 199, 876], "underli": [60, 159, 165, 200, 204, 224, 225, 237, 242, 256, 260, 261, 262, 263, 264, 265, 268, 269, 270, 273, 276, 277, 278, 408, 476, 477, 482, 577, 696, 699, 733, 876], "getter": [60, 176, 876], "peak_tim": [60, 174], "get_peak": [60, 125, 148, 150, 174, 176, 177, 179, 264, 265, 269, 270, 273, 276, 277, 278, 876], "time_dil": [60, 134, 135, 176, 180, 743], "framer": [60, 134, 135, 176, 180, 743], "95048065": 60, "56941314": 60, "72451438": 60, "stc_max": 60, "cosin": [60, 88, 200, 219, 651, 858], "source_nn": [60, 266, 295, 296, 861], "brain_max": 60, "975978731472672": 60, "90575168": 60, "52414196": 60, "71336747": 60, "brain_norm": 60, "83607509": 60, "44726242": 60, "57923594": 60, "lot": [60, 69, 125, 151, 157, 159, 165, 168, 198, 200, 202, 203, 204, 209, 213, 215, 357, 363, 427, 458, 604, 633, 635, 824, 835], "fname_inv_fix": 60, "inv_fix": 60, "stc_fix": 60, "brain_fix": [60, 177], "00351751": 60, "62842071": 60, "43519503": 60, "pars": [61, 139, 150, 164, 170, 172, 173, 189, 199, 214, 255, 256, 267, 281, 437, 449, 456, 476, 484, 491, 492, 498, 546, 611, 831, 876], "elekta": [61, 82, 155, 164, 185, 186, 208, 255, 259, 260, 262, 263, 264, 265, 267, 272, 300, 352, 428, 449, 451, 476, 477, 520, 759, 771, 773, 783, 796, 811, 847, 852, 858, 861, 876], "triux": [61, 182, 255, 262, 263, 264, 265, 387, 476, 477, 553, 696, 698, 699, 700, 852, 858], "dacq": [61, 255, 852], "acquisit": [61, 155, 159, 167, 187, 188, 189, 190, 205, 213, 242, 255, 256, 262, 263, 264, 265, 267, 281, 449, 476, 477, 478, 575, 584, 598, 661, 831, 847, 851, 858, 861, 876], "accordingli": [61, 133, 149, 157, 177, 188, 213, 257, 262, 263, 264, 265, 416, 467, 476, 477, 484, 491, 496, 585, 858, 876], "multimod": [61, 136, 242, 862, 866, 876], "multimodal_raw": 61, "grad_ssp_upright": 61, "mag_ssp_upright": 61, "v4": [61, 207, 208], "v5": [61, 207, 208], "183600": 61, "576599": 61, "960": [61, 79, 99, 142, 225, 229, 852], "categori": [61, 110, 144, 255, 333, 615, 740, 858, 859, 876], "acqpars": [61, 255, 476, 876], "acqparserfif": [61, 267, 476, 866, 876], "get_condit": [61, 255], "plot_topo": [61, 149, 151, 165, 216, 237, 238, 262, 263, 264, 265, 319, 476, 477, 696, 698, 700, 876], "background_color": [61, 130, 264, 265, 781, 876], "cat": [61, 110], "flat": [61, 81, 109, 139, 140, 149, 180, 198, 199, 200, 204, 205, 206, 208, 255, 257, 262, 263, 269, 273, 277, 355, 357, 556, 558, 568, 569, 572, 573, 575, 682, 801, 831, 851, 876], "fiff": [61, 113, 155, 159, 262, 263, 266, 272, 275, 476, 477, 480, 493, 507, 508, 556, 568, 569, 730, 751, 819, 824, 852, 876], "fname_out": [61, 751], "write_evok": [61, 148, 264, 265, 439, 614, 855, 866, 876], "118": [61, 168, 194, 207, 242, 556, 876], "0812": [61, 168], "0123": [61, 144, 165, 168, 213], "0942": [61, 168], "newcat": 61, "longer": [61, 112, 144, 161, 166, 167, 171, 190, 198, 199, 200, 201, 203, 224, 239, 262, 263, 264, 265, 267, 339, 432, 443, 447, 449, 476, 477, 558, 584, 699, 723, 724, 726, 727, 743, 753, 773, 776, 835, 841, 855, 858, 876], "ref": [61, 121, 150, 254, 743, 759, 835, 876], "reqev": [61, 255], "requir": [61, 107, 133, 134, 135, 139, 141, 143, 149, 155, 157, 160, 161, 165, 167, 169, 171, 181, 188, 189, 190, 194, 197, 200, 201, 203, 206, 208, 210, 213, 219, 221, 224, 225, 228, 232, 254, 255, 259, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 280, 295, 296, 301, 306, 310, 352, 353, 354, 355, 357, 358, 361, 383, 407, 408, 410, 411, 415, 417, 418, 421, 424, 425, 446, 447, 449, 451, 464, 466, 469, 470, 475, 476, 477, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 511, 515, 516, 518, 519, 526, 529, 530, 539, 540, 555, 556, 558, 561, 568, 569, 570, 578, 585, 593, 602, 639, 644, 647, 648, 649, 661, 683, 684, 685, 686, 687, 692, 696, 698, 700, 701, 702, 703, 704, 705, 706, 714, 715, 723, 724, 725, 726, 727, 737, 743, 760, 766, 773, 775, 778, 782, 786, 790, 795, 796, 797, 798, 801, 803, 805, 806, 812, 831, 833, 836, 839, 840, 851, 852, 857, 858, 864, 876], "reqwithin": [61, 255], "reqwhen": [61, 255], "freeli": 61, "elekta_epoch": [61, 66], "scratch": [63, 139, 148, 164, 187, 189, 190, 213, 222, 223, 239, 263, 264, 265, 267, 371, 477], "exampleio": 63, "fake": [63, 69, 158, 181], "won": [63, 150, 204, 205, 215, 228, 242, 262, 263, 264, 265, 358, 476, 477, 556, 614, 696, 698, 699, 700, 733], "consult": [63, 200, 204, 584, 835, 840, 841, 851, 855, 857, 858], "reader": [63, 165, 174, 187, 204, 213, 328, 475, 482, 484, 485, 486, 488, 491, 494, 496, 498, 499, 500, 502, 503, 504, 505, 506, 608, 610, 612, 858, 862, 876], "fakedata": 63, "nof": 63, "lazi": 63, "analogsign": 63, "multichannel": [63, 69, 110, 150, 194, 208, 242, 429, 564, 567, 584], "sampling_r": 63, "misc": [63, 65, 78, 79, 80, 113, 133, 134, 136, 148, 168, 177, 181, 182, 184, 187, 188, 190, 213, 219, 262, 263, 264, 265, 272, 309, 325, 344, 371, 441, 476, 477, 484, 486, 488, 491, 493, 498, 502, 553, 696, 698, 699, 700, 767, 773, 777, 779, 781, 796, 852, 866, 876], "show_scrollbar": [63, 74, 150, 203, 209, 219, 262, 263, 476, 477, 556, 773, 790, 796, 876], "100000": [63, 445], "99999": [63, 437], "read_neo_format": [63, 66], "ev_info": 64, "15972": [64, 193], "27235589e": 64, "79818505e": 64, "12852747e": 64, "85348042e": 64, "02846360e": 64, "26727393e": 64, "33468523e": 64, "80261790e": 64, "33583009e": 64, "93161055e": 64, "35199238e": 64, "79073915e": 64, "09498615e": 64, "16924072e": 64, "93873875e": 64, "40677185e": 64, "27444183e": 64, "08634620e": 64, "59818134e": 64, "51070563e": 64, "53708918e": 64, "read_noise_covariance_matrix": [64, 66], "analyz": [65, 70, 139, 164, 167, 179, 194, 197, 198, 200, 201, 208, 214, 215, 224, 242, 262, 263, 434, 559, 565, 679, 832, 835, 851, 858, 876], "pabr": 65, "maddox": [65, 242, 876], "lab": [65, 67, 854, 864], "clemen": [65, 110, 863, 876], "brunner": [65, 110, 863, 876], "pyxdf": [65, 188], "p001_se": 65, "s004_task": 65, "default_run": 65, "001_eeg_a2": 65, "stream": [65, 188, 198, 201, 876], "header": [65, 111, 121, 155, 159, 181, 188, 190, 264, 265, 295, 296, 337, 352, 356, 357, 367, 368, 369, 408, 415, 451, 452, 471, 473, 474, 475, 483, 486, 488, 502, 504, 505, 534, 783, 876], "load_xdf": 65, "time_seri": 65, "assert": [65, 107, 139, 143, 148, 155, 170, 190, 214, 221, 224, 226, 857, 876], "four": [65, 69, 140, 143, 150, 165, 184, 200, 224, 234, 242, 259, 262, 263, 264, 265, 271, 408, 415, 476, 477, 555, 556, 570, 696, 698, 700, 743, 760, 775, 782, 786, 795, 798, 803, 805, 851, 858, 859], "plu": [65, 165, 167, 171, 176, 181, 200, 203, 205, 207, 228, 267, 715, 842, 853, 858, 861, 876], "rerefer": 65, "bipolar": [65, 190, 202, 203, 224, 262, 263, 264, 265, 476, 477, 638, 641, 876], "subselect": [65, 114, 142, 148, 149, 150, 165, 213, 226, 229, 237, 239, 260, 261, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 368, 476, 477, 696, 697, 698, 699, 773, 855, 876], "uv": [65, 262, 263, 264, 265, 476, 477, 876], "preamp": 65, "nominal_sr": 65, "2320128": 65, "2320127": 65, "232": [65, 110, 143, 168, 228, 229], "013": [65, 126, 139, 140, 148, 150, 168, 221], "melissa": [65, 242], "polonenko": [65, 242], "ross": [65, 242, 876], "brainstem": [65, 242], "hear": [65, 242, 588], "2331216519871395": [65, 242], "1177": [65, 99, 225, 242, 391, 852], "903": [65, 66, 229], "read_xdf": [65, 66], "auto_examples_io": 66, "facilit": [67, 110, 134, 135, 166, 189, 194, 225, 262, 263, 264, 265, 476, 477, 696, 698, 699, 700, 851, 858, 861, 876], "subcort": [67, 242, 571, 876], "simul": [67, 69, 78, 89, 103, 104, 139, 148, 160, 175, 187, 189, 199, 200, 213, 219, 229, 232, 233, 234, 239, 242, 259, 262, 263, 264, 265, 266, 267, 268, 273, 275, 285, 352, 371, 449, 476, 477, 481, 509, 512, 518, 522, 523, 534, 553, 554, 588, 605, 611, 616, 618, 619, 622, 696, 698, 699, 700, 709, 723, 726, 727, 728, 743, 747, 802, 852, 866, 876], "samuelsson": [67, 242, 571, 876], "johnsam": 67, "mit": [67, 70, 150, 242, 471, 565, 846, 852, 858], "simulate_sparse_stc": [67, 90, 91, 660, 661, 663, 866, 876], "simulate_evok": [67, 90, 175, 220, 518, 661, 662, 663, 866, 876], "all_label": 67, "select_label": 67, "hiplab": 67, "postcenlab": 67, "cortical_waveform": 67, "waveform": [67, 97, 200, 202, 205, 209, 242, 270, 276, 278, 646, 648, 662, 663, 682, 802, 842], "pi": [67, 88, 91, 92, 93, 112, 200, 205, 219, 220, 221, 531, 593, 662, 712, 720, 722, 726, 858], "subcortical_waveform": 67, "data_fun": [67, 90, 91, 92, 662], "isin": [67, 110, 143], "evoked_subcort": [67, 571], "cortical_signal_suppress": [67, 866, 876], "n_proj": [67, 571], "fft": [67, 106, 131, 200, 237, 239, 262, 263, 264, 265, 416, 420, 421, 476, 477, 529, 539, 540, 697, 701, 702, 703, 704, 705, 706, 708, 715, 721, 723, 724, 725, 726, 727, 728, 797, 876], "rfft": 67, "psd_proc": 67, "transax": 67, "footbibliographi": [67, 835], "077": [67, 83, 111], "put": [68, 114, 121, 125, 140, 143, 154, 155, 160, 169, 171, 181, 182, 184, 193, 200, 203, 213, 219, 220, 221, 224, 264, 265, 268, 383, 743, 777, 835, 840, 876], "earli": [68, 69, 140, 171, 198, 200, 239, 242, 257, 262, 263, 264, 265, 476, 477, 516, 607], "button": [68, 70, 92, 119, 126, 133, 139, 141, 143, 151, 155, 160, 165, 167, 190, 197, 199, 204, 214, 215, 216, 259, 262, 263, 264, 265, 271, 272, 408, 415, 434, 476, 477, 555, 556, 696, 698, 700, 773, 774, 775, 777, 779, 782, 786, 795, 796, 797, 798, 803, 835, 852, 876], "press": [68, 70, 111, 119, 126, 133, 139, 141, 143, 150, 151, 155, 160, 165, 167, 171, 190, 197, 199, 214, 215, 216, 242, 262, 263, 352, 434, 447, 471, 476, 477, 556, 565, 773, 788, 790, 796, 852, 876], "590": [68, 79, 193, 229], "millisecond": [68, 80, 110, 139, 144, 148, 167, 213, 232, 233, 234, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 434, 476, 477, 696, 699, 743, 801, 806, 876], "late": [68, 161, 855], "quickli": [68, 164, 165, 193, 203, 204, 215, 859, 876], "slowli": 68, "define_target_ev": [68, 83, 126, 866], "quick": [68, 72, 91, 133, 182, 197, 238, 521, 835], "reference_id": [68, 126, 434], "smilei": [68, 70, 92, 151, 165, 167, 214, 852], "target_id": [68, 126, 434], "new_id": [68, 126, 434, 521], "hit": [68, 239, 259, 262, 263, 264, 265, 271, 408, 415, 476, 477, 555, 556, 696, 698, 700, 774, 775, 779, 782, 786, 795, 798, 803, 876], "fill_na": [68, 434], "fill": [68, 220, 268, 273, 275, 276, 358, 434, 464, 476, 477, 578, 663, 692, 743, 876], "events_": 68, "besid": [68, 199, 204], "tmin_": 68, "tmax_": 68, "8522": [68, 876], "10649": 68, "12859": 68, "14830": 68, "16850": 68, "18826": 68, "21224": [68, 193], "23200": 68, "25272": 68, "27243": 68, "29525": 68, "31530": 68, "33481": 68, "35611": 68, "38007": 68, "08643728": 68, "78723509": 68, "352": [68, 79, 168, 170, 212, 229], "97154325": 68, "359": [68, 79, 168, 207, 224, 229], "63138369": 68, "446": [68, 194, 229, 242, 850], "20930939": 68, "579": [68, 194, 207, 229], "40611816": 68, "512": [68, 71, 229, 272, 275, 407], "80771377": 68, "ft": [68, 141, 144, 165, 199, 205, 238, 254, 259, 262, 263, 264, 265, 269, 270, 271, 273, 276, 277, 278, 408, 415, 476, 477, 512, 555, 556, 570, 575, 696, 698, 700, 760, 774, 775, 777, 779, 782, 786, 795, 798, 803, 804, 805, 831, 858], "conduct": [69, 70, 99, 150, 157, 190, 224, 225, 226, 228, 242, 254, 513, 520, 653, 658, 831, 835, 851, 854, 858, 861, 876], "undesir": [69, 202, 556, 876], "otherwis": [69, 81, 118, 143, 150, 161, 171, 187, 199, 200, 229, 232, 234, 256, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 286, 295, 296, 300, 310, 322, 335, 352, 356, 357, 358, 367, 368, 369, 383, 401, 408, 415, 443, 446, 447, 451, 452, 466, 471, 473, 474, 476, 477, 486, 521, 522, 523, 529, 534, 555, 556, 570, 602, 611, 633, 634, 636, 642, 645, 662, 681, 682, 696, 698, 699, 700, 708, 720, 731, 733, 743, 759, 760, 767, 771, 773, 774, 775, 777, 778, 779, 780, 781, 782, 783, 786, 793, 795, 796, 797, 798, 799, 801, 802, 803, 805, 806, 821, 833, 835, 858, 876], "introduct": [69, 88, 93, 150, 229, 237, 239, 242, 272, 860], "smear": [69, 78, 79, 141, 200, 239, 583, 723, 724, 726, 727, 876], "unfortun": [69, 161, 843, 855], "brigd": 69, "far": [69, 81, 125, 139, 140, 143, 156, 170, 177, 199, 200, 201, 204, 206, 213, 214, 224, 363, 488, 559, 683, 684, 686, 687, 724, 727, 767, 858, 861], "address": [69, 94, 95, 165, 200, 224, 225, 232, 233, 234, 242, 267, 683, 684, 686, 687, 835, 841], "Or": [69, 118, 170, 197, 207, 570, 835], "quantifi": [69, 209, 239, 273], "introduc": [69, 74, 139, 140, 148, 150, 164, 165, 172, 174, 197, 199, 200, 201, 203, 204, 205, 213, 232, 234, 257, 262, 263, 264, 265, 318, 476, 477, 556, 773, 777, 796, 855, 858, 864, 876], "outcom": 69, "awar": [69, 101, 139, 143, 166, 167, 215, 226, 232, 262, 263, 264, 265, 476, 477, 780, 876], "mitig": [69, 179, 200, 201, 208, 858], "confound": [69, 150, 556], "psychophysiologi": [69, 70, 97, 140, 150, 200, 229, 242, 565, 682, 683, 684, 686, 687], "cpmc": 69, "columbia": 69, "softwar": [69, 133, 157, 164, 183, 188, 189, 206, 242, 255, 267, 318, 441, 467, 476, 477, 485, 504, 584, 627, 809, 829, 831, 833, 835, 836, 841, 843, 851, 852, 855, 856, 857, 860, 864, 866, 876], "ebridg": 69, "html": [69, 142, 168, 242, 254, 272, 570, 642, 859, 876], "linearsegmentedcolormap": [69, 758], "nearli": [69, 835], "exactli": [69, 125, 139, 143, 174, 183, 194, 213, 239, 558, 682, 761, 805, 876], "suffici": [69, 198, 200, 208, 226, 262, 263, 264, 265, 267, 280, 352, 476, 477, 515, 773, 796, 833, 835, 841, 851, 855, 858, 876], "portion": [69, 177, 197, 199, 213, 238, 262, 263, 319, 476, 477, 556, 773, 790, 796, 835, 855, 857], "plenti": 69, "settl": [69, 295], "ed_data": 69, "raw_data": 69, "read_raw": [69, 133, 134, 143, 171, 221, 254, 866, 876], "compute_bridged_electrod": [69, 583, 763, 866, 876], "1959919512423807e": 69, "665886892347821": 69, "oz": [69, 126, 158, 169, 239, 259, 262, 263, 264, 265, 271, 310, 408, 415, 476, 477, 555, 556, 570, 645, 696, 698, 700, 760, 767, 775, 777, 779, 782, 783, 786, 793, 795, 797, 798, 799, 803, 805, 876], "iz": 69, "4367320903573773": 69, "fcz": [69, 143, 239], "fc2": [69, 126], "fc4": [69, 143], "fc6": [69, 126], "f2": 69, "f4": [69, 126, 143, 158, 169, 206], "4835197413857302e": 69, "587817798758312": 69, "fc3": [69, 143, 499], "fc1": [69, 126, 475], "cp3": [69, 499], "cp1": [69, 126], "af7": 69, "af3": 69, "af4": 69, "af8": 69, "f5": [69, 499], "f3": [69, 126, 143, 158, 206, 499], "fz": [69, 126, 143, 158, 219, 225, 441, 476, 477, 491], "ft8": 69, "t8": [69, 126, 158, 169, 259, 262, 263, 264, 265, 271, 310, 408, 415, 476, 477, 555, 556, 570, 696, 698, 700, 760, 767, 775, 777, 779, 782, 783, 786, 793, 795, 797, 798, 799, 803, 805, 876], "tp8": 69, "p8": [69, 126, 158], "p7": [69, 126, 158, 499], "p5": [69, 499], "p3": [69, 126, 143, 158, 499], "p1": [69, 110, 209], "p4": [69, 126, 143, 158], "p6": 69, "po3": [69, 126, 239], "o1": [69, 126, 158, 219, 239], "po4": [69, 126, 239], "po8": [69, 126, 239, 876], "746002687400983": 69, "cz": [69, 110, 126, 143, 158, 169, 188, 190, 204, 206, 219, 225, 262, 263, 264, 265, 476, 477, 641, 876], "c2": [69, 110, 204], "c4": [69, 110, 126, 143, 158], "cp2": [69, 126], "cp4": 69, "pz": [69, 126, 142, 158, 190, 219, 225], "p2": [69, 110], "590631749463316": 69, "f6": 69, "understand": [69, 143, 159, 189, 200, 239, 712, 722, 726, 835, 858, 859, 864], "physiologi": 69, "clip": [69, 171, 216, 254, 259, 262, 263, 264, 265, 271, 408, 415, 476, 477, 555, 556, 570, 696, 698, 700, 760, 775, 782, 786, 795, 796, 798, 803, 805, 876], "bridged_idx": [69, 564, 583, 763], "ed_matrix": [69, 564, 763], "ax1": [69, 84, 88, 97, 136, 182, 193], "ax2": [69, 84, 88, 94, 97, 136, 182, 193, 226, 227], "triangular": [69, 159, 160, 268, 627, 683, 684, 686, 687, 802, 829, 851, 858, 861], "ed_plot": 69, "triu_idx": 69, "triu_indic": 69, "idx0": 69, "idx1": 69, "nanmedian": 69, "im1": 69, "cax1": 69, "set_label": [69, 145, 194, 224], "mu": [69, 200, 224, 564, 876], "im2": 69, "cax2": 69, "histogram": [69, 157, 262, 263, 773], "previou": [69, 133, 139, 143, 150, 160, 169, 170, 171, 180, 199, 200, 204, 206, 216, 264, 265, 295, 296, 352, 356, 357, 367, 368, 369, 408, 414, 415, 451, 452, 471, 473, 474, 534, 566, 575, 584, 743, 761, 783, 846, 861, 876], "pair": [69, 101, 118, 136, 143, 167, 187, 188, 189, 194, 208, 209, 224, 232, 239, 254, 259, 262, 263, 264, 265, 267, 269, 270, 271, 273, 275, 276, 277, 278, 281, 286, 300, 408, 415, 476, 477, 499, 522, 555, 556, 564, 583, 595, 627, 683, 685, 686, 696, 697, 698, 700, 731, 743, 759, 763, 764, 767, 775, 781, 782, 786, 798, 801, 803, 805, 806, 829, 835, 876], "isnan": 69, "arrang": [69, 125, 150, 164, 169, 216, 242, 748], "light": [69, 136, 141, 170, 189, 198, 262, 263, 264, 265, 411, 418, 476, 477, 556, 743, 773, 777, 790, 796, 831, 876], "horizont": [69, 79, 134, 139, 140, 141, 179, 190, 197, 208, 224, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 556, 743, 762, 777, 789, 790, 796, 801, 806, 876], "stand": [69, 154, 168, 174, 657, 835, 847], "insert": [69, 150, 168, 213, 259, 267, 271, 286, 300, 434, 450, 522, 731, 748], "syring": 69, "tip": [69, 203, 242, 352, 839, 840, 856, 862], "plot_bridged_electrod": [69, 866, 876], "saniti": [69, 118, 143, 181, 200, 444, 661, 864, 876], "implausibli": [69, 200, 224, 689], "interestingli": [69, 858], "though": [69, 73, 110, 150, 155, 159, 167, 171, 178, 182, 189, 197, 200, 201, 203, 204, 205, 210, 224, 267, 746, 766, 831, 852, 858, 876], "adjac": [69, 141, 145, 198, 225, 233, 234, 316, 327, 420, 449, 558, 561, 666, 667, 668, 669, 670, 671, 672, 676, 683, 684, 686, 687, 764, 864, 873, 876], "distinct": [69, 70, 194, 242, 259, 262, 263, 264, 265, 408, 415, 476, 477, 555, 696, 698, 700, 760, 775, 782, 798, 803, 805], "unlik": [69, 139, 140, 148, 149, 155, 159, 169, 180, 197, 200, 202, 213, 261, 262, 263, 264, 265, 270, 276, 278, 359, 387, 416, 585, 700, 806, 833, 851, 858, 876], "add_channel": [69, 73, 262, 263, 264, 265, 476, 477, 556, 696, 698, 699, 700, 876], "ch1": 69, "ch2": 69, "9760": [69, 81], "9759": [69, 81], "lesser": [69, 476, 477, 796, 876], "trough": [69, 143], "monoton": [69, 99, 487, 747, 816], "discrep": [69, 858], "driven": [69, 194, 224, 369, 415, 471], "blink": [69, 71, 81, 91, 92, 143, 171, 197, 199, 202, 203, 205, 206, 213, 215, 239, 242, 256, 262, 263, 555, 570, 648, 649, 876], "flatten": [69, 117, 204, 224, 228, 234, 242, 760, 876], "axvspan": [69, 94, 150], "subplots_adjust": [69, 70, 72, 105, 107, 110, 118, 125, 145, 150, 159, 198, 201, 203, 204, 205, 206, 209, 214, 224, 226, 227, 229, 766], "wspace": [69, 72, 125, 224], "compel": 69, "evid": [69, 111, 200, 201, 242, 556, 725, 728], "judici": [69, 835], "electrolyt": [69, 242, 564], "tri": [69, 159, 160, 167, 174, 177, 262, 263, 268, 269, 273, 275, 277, 316, 363, 431, 463, 627, 630, 645, 665, 669, 672, 801, 824, 853, 858, 861, 876], "those": [69, 73, 77, 97, 125, 141, 143, 150, 156, 160, 164, 165, 167, 168, 169, 170, 171, 174, 179, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 213, 214, 215, 219, 220, 224, 254, 257, 262, 263, 264, 265, 267, 275, 295, 308, 310, 322, 325, 327, 353, 354, 355, 357, 366, 367, 410, 414, 424, 429, 431, 432, 437, 441, 460, 476, 477, 487, 504, 534, 542, 555, 556, 558, 559, 571, 572, 573, 578, 581, 590, 592, 599, 645, 648, 649, 664, 682, 691, 696, 698, 699, 700, 704, 705, 706, 707, 709, 723, 724, 726, 727, 767, 773, 774, 777, 779, 780, 787, 794, 797, 835, 851, 857, 858, 860, 876], "still": [69, 73, 77, 113, 118, 141, 142, 143, 159, 170, 187, 188, 197, 198, 200, 201, 202, 204, 206, 208, 210, 213, 216, 224, 232, 262, 267, 275, 318, 363, 427, 458, 476, 556, 584, 604, 633, 635, 678, 699, 752, 766, 767, 808, 824, 833, 835, 841, 853, 864, 876], "biolog": [69, 197, 204, 205, 242, 523, 851, 858], "interpolate_bridged_electrod": [69, 866, 876], "midwai": [69, 583], "aid": [69, 242, 583, 876], "recov": [69, 133, 165, 363, 876], "impli": [69, 161, 220, 239, 267, 328, 362, 491, 855], "unbridg": 69, "ch0": 69, "bridged_idx_simul": 69, "data_orig": 69, "rng": [69, 90, 91, 92, 112, 193, 200, 224, 509, 556, 582, 601, 648, 649, 650, 659, 660, 662, 683, 684, 685, 686, 687], "random": [69, 82, 88, 90, 91, 92, 112, 158, 189, 190, 193, 197, 200, 203, 221, 224, 225, 232, 233, 234, 473, 509, 556, 582, 601, 648, 649, 650, 659, 660, 662, 683, 684, 685, 686, 687, 876], "default_rng": 69, "seed": [69, 88, 93, 110, 112, 203, 220, 221, 225, 232, 233, 234, 466, 509, 556, 582, 601, 648, 649, 650, 659, 660, 662, 675, 683, 684, 685, 686, 687, 876], "raw_sim": [69, 91, 92], "bridged_data": 69, "tile": [69, 112], "back": [69, 73, 81, 86, 114, 139, 142, 157, 160, 161, 165, 170, 171, 179, 180, 198, 200, 203, 204, 205, 206, 237, 255, 262, 263, 264, 265, 272, 363, 367, 423, 449, 476, 477, 556, 777, 835, 855, 876], "raw_virtu": 69, "data_virtu": 69, "raw_comp": 69, "data_comp": 69, "With": [69, 112, 119, 161, 170, 171, 187, 190, 204, 205, 210, 215, 221, 262, 263, 264, 265, 280, 450, 476, 477, 500, 556, 634, 743, 791, 831, 835, 838, 843, 847, 855, 857, 858], "comp": [69, 168, 267, 876], "1086289630998356e": 69, "139834556312537e": 69, "brought": [69, 155], "impend": 69, "help": [69, 71, 118, 133, 139, 143, 144, 145, 150, 158, 160, 161, 165, 168, 171, 180, 187, 189, 194, 197, 198, 199, 201, 202, 203, 205, 216, 228, 254, 260, 261, 262, 263, 264, 265, 268, 269, 270, 273, 276, 277, 278, 435, 437, 443, 467, 476, 477, 484, 491, 492, 498, 507, 556, 602, 608, 641, 645, 659, 662, 688, 695, 696, 699, 712, 722, 726, 740, 743, 751, 773, 787, 801, 835, 840, 841, 851, 853, 857, 858, 859, 861, 864, 876], "quest": 69, "technician": [69, 851, 852], "noisi": [69, 90, 141, 149, 198, 200, 205, 208, 224, 232, 234, 239, 267, 575, 576, 579, 648, 649, 660, 851, 876], "bid": [69, 133, 135, 242, 262, 263, 310, 476, 477, 842, 852, 864, 876], "tsv": [69, 328, 876], "kohm": 69, "passiv": [69, 197], "accept": [69, 92, 139, 168, 170, 171, 187, 198, 199, 200, 203, 204, 205, 213, 257, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 312, 342, 357, 375, 376, 377, 383, 385, 476, 477, 500, 558, 572, 573, 681, 683, 684, 686, 687, 698, 700, 743, 767, 774, 775, 781, 829, 835, 854, 876], "from_list": 69, "impedance_cmap": 69, "cn": [69, 805], "cax": [69, 110, 114, 125, 145, 229], "omega": [69, 107], "hopefulli": [69, 197, 239, 448], "convinc": [69, 150], "tenk": [69, 70, 242, 564, 565], "kayser": [69, 70, 242, 564, 565], "electroencephalogram": [69, 242, 564], "offici": [69, 70, 189, 242, 500, 556, 564, 565, 610, 835, 843, 857, 860, 876], "feder": [69, 242, 556, 564], "545": [69, 194, 229, 242, 564], "550": [69, 79, 161, 221, 229, 242, 429, 564], "march": [69, 242, 564, 861, 876], "s1388": [69, 110, 242, 564], "2457": [69, 110, 242, 564], "00553": [69, 242, 564], "arnaud": [69, 242, 556, 564], "delorm": [69, 242, 556, 564], "scott": [69, 110, 143, 242, 432, 471, 556, 564, 851, 876], "makeig": [69, 110, 143, 242, 432, 471, 556, 564, 851], "jneumeth": [69, 73, 200, 229, 242, 556, 564, 656, 683, 684, 686, 687], "2003": [69, 193, 239, 242, 414, 564, 851], "009": [69, 72, 119, 126, 139, 148, 168, 171, 173, 221, 242, 564], "782": [69, 83, 194, 207, 229], "eeg_bridg": [69, 83], "laplacian": [70, 193, 242, 420, 565, 641, 876], "sharper": [70, 200], "impact": [70, 136, 177, 198, 239, 408, 876], "166799": [70, 166, 181, 202], "714": [70, 166, 181, 182, 186, 202, 229], "date": [70, 72, 75, 79, 80, 81, 88, 91, 125, 140, 145, 150, 166, 167, 168, 188, 197, 198, 199, 201, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 219, 221, 254, 256, 262, 263, 264, 265, 267, 476, 477, 478, 488, 491, 585, 833, 835, 876], "decemb": [70, 72, 75, 79, 80, 81, 88, 91, 125, 140, 145, 150, 166, 167, 168, 197, 198, 199, 201, 203, 204, 205, 206, 208, 213, 214, 215, 216, 221], "2002": [70, 72, 75, 81, 88, 91, 110, 125, 140, 145, 150, 165, 166, 167, 168, 197, 198, 199, 200, 201, 203, 204, 205, 206, 208, 213, 214, 215, 216, 221, 242, 256, 523, 678, 680, 685, 858], "gmt": [70, 72, 75, 79, 80, 81, 88, 91, 125, 140, 145, 150, 166, 167, 168, 197, 198, 199, 201, 203, 204, 205, 206, 208, 209, 213, 214, 215, 216, 221], "146": [70, 72, 75, 81, 88, 91, 125, 140, 145, 150, 165, 166, 167, 168, 194, 197, 198, 199, 201, 203, 204, 205, 206, 208, 213, 214, 215, 216, 221, 229, 242], "hh": [70, 72, 75, 79, 80, 81, 88, 91, 125, 140, 145, 150, 166, 167, 197, 198, 199, 201, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 221], "ss": [70, 72, 75, 79, 80, 81, 88, 91, 125, 140, 145, 150, 166, 167, 197, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 221, 858], "raw_csd": 70, "compute_current_source_dens": [70, 641, 866, 876], "evoked_csd": 70, "stiff": [70, 565], "spline": [70, 77, 198, 242, 262, 263, 264, 265, 476, 477, 565, 858, 876], "flexibl": [70, 142, 171, 188, 210, 743, 876], "hspace": [70, 72, 125, 224], "set_size_inch": [70, 202], "this_evoked_csd": 70, "contour": [70, 99, 118, 157, 171, 254, 259, 262, 263, 264, 265, 271, 408, 415, 476, 477, 555, 556, 570, 581, 696, 698, 700, 760, 761, 775, 778, 779, 782, 786, 795, 798, 803, 805, 876], "n\u03bb\u00b2": 70, "perrin": [70, 77, 198, 242, 565, 858], "pernier": [70, 77, 198, 242, 565, 712, 722, 723, 726, 858], "bme": [70, 242, 565], "1987": [70, 175, 200, 242, 565], "326089": [70, 242, 565], "jacqu": [70, 77, 198, 242, 565, 712, 722, 723, 726, 858], "olivi": [70, 77, 198, 242, 352, 556, 565, 712, 722, 723, 726, 858], "fran\u0107oi": [70, 77, 198, 242, 565, 858], "echalli": [70, 77, 198, 242, 565, 858], "184": [70, 74, 77, 168, 198, 207, 224, 229, 242, 565, 591, 858], "187": [70, 74, 77, 168, 194, 198, 228, 242, 556, 565, 858], "1989": [70, 77, 198, 242, 565, 858], "90180": [70, 77, 198, 242, 565, 858], "mike": [70, 242, 565], "cohen": [70, 117, 127, 242, 565, 710, 712, 722, 726, 760, 876], "theori": [70, 164, 177, 208, 242, 565, 584], "j\u00fcrgen": [70, 203, 242, 556, 565], "craig": [70, 242, 565], "methodologi": [70, 99, 242, 352, 565], "electrophysiologi": [70, 133, 242, 565], "171": [70, 74, 124, 168, 200, 228, 229, 242, 385, 534, 565, 591, 653, 658, 876], "ijpsycho": [70, 242, 565], "334": [70, 83, 107, 168, 194, 224], "eeg_csd": [70, 83], "eog_event_id": 71, "eog_ev": [71, 199, 256, 569, 577, 580], "find_eog_ev": [71, 197, 199, 215, 256, 569, 573, 853, 866, 876], "add_ev": [71, 171, 272, 476, 477, 876], "audr": 71, "visr": 71, "pick_ch": 71, "375": [71, 79, 92, 168, 197, 199, 205, 224, 229], "dc": [71, 165, 167, 171, 189, 197, 199, 200, 201, 202, 203, 205, 210, 214, 257, 262, 264, 265, 267, 339, 476, 477, 556, 558, 584, 796, 831, 861, 876], "offset": [71, 91, 135, 160, 167, 171, 190, 197, 199, 200, 202, 203, 204, 205, 210, 213, 214, 215, 256, 257, 260, 261, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 359, 437, 449, 476, 477, 559, 598, 611, 676, 696, 699, 743, 831, 861, 876], "saccad": [71, 171, 190, 197, 199, 202, 203, 205, 555], "firwin2": [71, 145, 171, 190, 197, 199, 200, 202, 203, 205, 262, 263, 264, 265, 410, 419, 444, 446, 447, 476, 477, 876], "hann": [71, 82, 106, 107, 145, 171, 197, 199, 200, 202, 203, 205, 262, 263, 264, 265, 419, 444, 446, 447, 476, 477, 529, 530, 647, 648, 649, 661, 876], "1502": [71, 171, 199, 203], "eog_artifact_histogram": [71, 83], "basic": [72, 81, 110, 149, 150, 157, 160, 161, 164, 165, 170, 171, 172, 175, 191, 197, 202, 203, 204, 205, 208, 213, 216, 217, 221, 240, 241, 242, 254, 262, 267, 271, 310, 326, 371, 387, 437, 443, 486, 553, 698, 805, 852, 858, 876], "thorough": [72, 164, 198, 859], "modul": [72, 133, 139, 141, 142, 144, 145, 148, 149, 150, 160, 165, 166, 167, 168, 169, 170, 171, 188, 189, 197, 198, 199, 201, 202, 203, 204, 205, 206, 208, 213, 214, 215, 216, 219, 237, 239, 254, 345, 487, 550, 695, 740, 743, 834, 835, 842, 847, 855, 858, 864, 865, 866, 867, 868, 871, 874, 876], "eogregress": [72, 202, 210, 594, 798, 866, 876], "elimin": [72, 168, 202, 204, 208, 224, 232, 234, 353, 354, 355, 408, 578, 855, 858, 876], "slow": [72, 126, 136, 140, 143, 149, 200, 202, 209, 242, 262, 263, 400, 401, 413, 529, 530, 582, 714, 733, 775, 835, 852], "drift": [72, 140, 200, 202, 209, 210, 556, 598, 876], "1653": [72, 73], "offpca": [72, 75, 91, 166, 167, 168, 197, 198, 199, 201, 203, 204, 205, 208, 213, 214, 215, 216, 221], "offaverag": [72, 91, 168, 199, 203], "raw_clean": [72, 82, 202, 592], "evoked_befor": 72, "evoked_aft": 72, "epochs_aft": 72, "spatial_color": [72, 92, 97, 127, 136, 143, 149, 150, 205, 216, 262, 263, 264, 265, 476, 477, 698, 700, 777, 780, 797, 876], "905": [72, 229], "eog_regress": [72, 83], "intermitt": 73, "extern": [73, 150, 179, 187, 208, 242, 262, 263, 264, 265, 339, 341, 345, 429, 438, 439, 440, 441, 476, 477, 556, 566, 567, 575, 584, 851, 852, 858, 876], "magnet": [73, 79, 117, 127, 133, 149, 155, 175, 187, 201, 202, 210, 229, 242, 340, 523, 556, 760, 831, 836, 851, 852], "fail": [73, 205, 356, 363, 427, 429, 458, 492, 493, 566, 567, 575, 584, 602, 604, 608, 633, 635, 824, 835, 857, 876], "succe": [73, 160, 170, 841], "choos": [73, 80, 112, 113, 134, 140, 145, 150, 159, 161, 179, 180, 188, 193, 197, 200, 202, 203, 208, 226, 239, 255, 262, 263, 269, 270, 273, 275, 276, 277, 278, 317, 449, 523, 531, 555, 561, 568, 576, 579, 584, 611, 659, 662, 682, 743, 759, 762, 801, 806, 807, 833, 835, 855, 857, 876], "made": [73, 114, 154, 171, 197, 200, 224, 262, 263, 268, 270, 275, 276, 278, 312, 326, 484, 598, 661, 774, 776, 806, 833, 835, 852, 857, 876], "whose": [73, 93, 143, 167, 169, 187, 194, 221, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 295, 296, 352, 356, 357, 367, 368, 369, 408, 415, 437, 442, 451, 452, 471, 473, 474, 476, 477, 516, 534, 556, 561, 570, 572, 573, 576, 649, 699, 700, 767, 770, 783, 788, 797, 798, 857, 858, 861, 876], "particularli": [73, 160, 189, 202, 224, 262, 263, 264, 265, 435, 476, 477, 556, 575, 838, 858], "heavi": [73, 232, 234, 855, 876], "jeff": [73, 242, 556, 876], "hanna": [73, 242, 556, 876], "refmeg_nois": [73, 852, 866, 876], "sample_reference_meg_nois": 73, "refmeg": 73, "165353": 73, "530": [73, 79, 194, 206, 207, 229, 242], "30000": [73, 407], "select_pick": 73, "plot_kwarg": [73, 156, 202, 210], "raw_tog": 73, "ica_kwarg": 73, "picard": [73, 75, 81, 203, 556, 842, 876], "fit_param": [73, 75, 171, 408, 409, 410, 411, 412, 413, 415, 416, 418, 419, 425, 556, 557, 876], "all_pick": 73, "ica_tog": 73, "allow_ref_meg": [73, 556], "bad_comp": 73, "find_bads_ref": [73, 556, 876], "plot_properti": [73, 81, 165, 203, 556, 862, 876], "147": [73, 168, 194, 224, 228, 229], "patient": [73, 75, 81, 135, 165, 171, 203, 876], "took": [73, 75, 81, 165, 171, 203, 556], "dpss": [73, 81, 101, 102, 136, 141, 142, 165, 171, 203, 237, 238, 262, 263, 264, 265, 421, 476, 477, 698, 700, 708, 714, 724, 727, 876], "raw_sep": 73, "ref_pick": 73, "ica_ref": 73, "ica_sep": 73, "think": [73, 143, 171, 194, 200, 224, 831, 854], "ekg": [73, 135], "cardiac": [73, 209], "ref_comp": 73, "get_sourc": [73, 556, 876], "ref_": 73, "recognis": 73, "rename_channel": [73, 110, 126, 139, 148, 150, 158, 184, 209, 213, 262, 263, 264, 265, 310, 476, 477, 487, 499, 866, 876], "cora": [73, 242, 556, 876], "kim": [73, 242, 556, 876], "nadia": [73, 242, 556], "voggel": [73, 242, 556], "magnetoencephalograph": [73, 242, 556], "108592": [73, 242, 556], "166": [73, 83, 89, 149, 168, 194, 200, 229, 234, 242], "find_ref_artifact": [73, 83], "fnir": [74, 164, 168, 169, 191, 192, 211, 212, 242, 262, 263, 264, 265, 267, 310, 326, 328, 351, 369, 371, 437, 476, 477, 485, 499, 504, 506, 553, 586, 587, 588, 590, 591, 696, 698, 699, 700, 743, 759, 767, 776, 781, 831, 842, 858, 876], "mail": [74, 224, 846], "robertluk": 74, "net": [74, 169, 193, 242, 414, 678, 858, 876], "optical_dens": [74, 209, 866, 876], "temporal_derivative_distribution_repair": [74, 866, 876], "exact": [74, 101, 133, 201, 224, 232, 239, 242, 262, 263, 264, 265, 288, 425, 476, 477, 523, 683, 685, 686, 697, 701, 703, 704, 706, 831, 839, 858, 876], "fnirs_data_fold": [74, 209], "fnirs_motor": [74, 209, 852, 866, 876], "fnirs_cw_amplitude_dir": [74, 209], "raw_intens": [74, 209], "read_raw_nirx": [74, 189, 209, 482, 858, 866, 876], "raw_od": [74, 209], "new_annot": [74, 215], "317": [74, 168, 229], "set_annot": [74, 79, 80, 136, 167, 190, 199, 215, 256, 262, 263, 476, 477, 558, 585, 876], "23238": [74, 209], "2974": [74, 209], "spike": [74, 81, 255, 591, 851], "person": [74, 150, 209, 267, 835, 851, 857], "optod": [74, 189, 209, 506, 588, 743, 759, 852, 876], "corrupted_data": 74, "450": [74, 79, 140, 159, 275, 876], "750": [74, 79, 142, 229, 852], "corrupted_od": 74, "245": [74, 168, 184, 199, 224, 229, 242, 858], "8924": 74, "8923": 74, "suppli": [74, 99, 151, 171, 179, 205, 219, 224, 260, 261, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 358, 383, 432, 442, 443, 476, 477, 556, 570, 590, 591, 638, 696, 699, 766, 767, 786, 876], "corrected_tddr": 74, "said": [74, 174], "fishburn": [74, 242, 591], "ruth": [74, 242, 591], "ludlum": [74, 242, 591], "chandan": [74, 242, 591], "vaidya": [74, 242, 591], "andrei": [74, 242, 591], "medvedev": [74, 242, 591], "tddr": [74, 242, 591, 876], "motion": [74, 242, 560, 591, 876], "2018": [74, 82, 124, 136, 194, 203, 221, 242, 295, 296, 556, 591, 592], "025": [74, 126, 135, 139, 145, 148, 168, 190, 197, 200, 221, 224, 242, 591], "662": [74, 83, 229, 241], "fnirs_artifact_remov": [74, 83], "pierreablin": 75, "9009": [75, 171, 203], "run_ica": [75, 876], "t0": [75, 98, 184, 239, 255, 701, 702, 703], "fit_tim": 75, "infomax": [75, 203, 242, 556, 862, 866, 876], "ica_comparison": [75, 83], "replac": [77, 86, 99, 140, 142, 150, 158, 171, 187, 189, 199, 204, 205, 208, 213, 215, 242, 259, 262, 263, 264, 265, 271, 272, 408, 415, 430, 443, 476, 477, 488, 504, 521, 555, 556, 570, 696, 698, 700, 760, 782, 786, 795, 798, 803, 835, 839, 841, 843, 846, 858, 876], "evoked_interp": 77, "product": [77, 85, 117, 122, 149, 169, 187, 188, 193, 198, 205, 242, 267, 329, 421, 676, 724, 725, 727, 728, 752, 857, 858, 876], "truncat": [77, 85, 117, 122, 149, 198, 205, 214, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 431, 437, 476, 477, 489, 696, 699, 767, 876], "evoked_interp_mn": 77, "\u03b1": [77, 141, 205, 216], "0e": [77, 193, 205], "interpolate_bad_channel": [77, 83], "bilater": [78, 205, 644, 876], "repeat": [78, 91, 99, 111, 133, 139, 160, 164, 166, 204, 205, 213, 214, 224, 230, 231, 235, 236, 256, 262, 263, 264, 265, 267, 273, 275, 358, 432, 476, 522, 523, 537, 553, 556, 570, 593, 611, 626, 668, 677, 679, 680, 684, 687, 688, 699, 726, 743, 781, 835, 843, 855, 876], "maxwell_filt": [78, 183, 207, 208, 429, 566, 575, 585, 785, 855, 866, 876], "head_po": [78, 79, 207, 208, 429, 575, 584, 647, 648, 649, 661, 876], "chpi": [78, 79, 121, 168, 182, 207, 208, 254, 262, 263, 264, 265, 267, 272, 309, 429, 476, 477, 553, 560, 563, 584, 647, 648, 649, 661, 696, 698, 699, 700, 766, 773, 796, 831, 858, 864, 865, 866, 876], "read_head_po": [78, 207, 208, 340, 342, 348, 350, 429, 575, 584, 647, 648, 649, 661, 866], "simulated_quat": 78, "simulated_movement_raw": 78, "raw_stat": 78, "simulated_stationary_raw": 78, "34208": 78, "955": [78, 81, 142, 229, 231], "backward": [78, 200, 254, 262, 263, 264, 265, 369, 408, 410, 414, 415, 419, 436, 444, 446, 447, 476, 477, 529, 698, 700, 743, 775, 784, 808, 858, 876], "plot_head_posit": [78, 79, 207, 208, 866, 876], "quiver": [78, 260, 743, 771, 785], "306m": [78, 107, 114, 121, 122, 149, 155, 157, 169, 171, 182], "topo_kwarg": [78, 140], "evoked_stat": 78, "naiv": [78, 228], "therebi": [78, 174, 202, 204, 724, 727, 858], "third": [78, 92, 93, 150, 168, 171, 187, 205, 209, 215, 256, 257, 262, 436, 437, 449, 450, 476, 477, 517, 551, 556, 610, 611, 686, 687, 700, 776, 821, 835, 858], "restor": [78, 199, 206, 264, 265, 408, 412, 556, 557, 596, 743, 822, 876], "raw_sss": [78, 171, 208, 254, 476, 477, 496, 584], "evoked_raw_mc": 78, "harmon": [78, 91, 182, 183, 190, 197, 201, 207, 208, 239, 858], "fourth": [78, 200, 215, 466, 858], "cleanli": [78, 168], "evoked_evo_mc": 78, "average_mov": [78, 208, 584, 866, 876], "movement_compens": [78, 83], "contamin": [79, 200, 203, 242, 556], "similarli": [79, 97, 110, 142, 148, 170, 194, 200, 206, 209, 256, 556, 767, 853, 858], "suffer": [79, 851], "adonai": [79, 80, 876], "nune": [79, 80, 242, 656, 876], "bst_auditori": [79, 80, 190, 866], "annotate_mov": [79, 207, 866, 876], "compute_average_dev_head_t": [79, 560, 866, 876], "data_path_meg": 79, "raw_fname1": [79, 190], "s01_aef_20131218_01": [79, 80, 190], "raw_fname2": [79, 190], "s01_aef_20131218_02": [79, 190], "mismatch": [79, 159, 160, 190, 352, 442, 531, 800, 876], "on_mismatch": [79, 190, 352, 359, 361, 822, 876], "350": [79, 114, 115, 133, 140, 159, 168, 207, 224, 229], "264": [79, 80, 110, 128, 150, 168, 175, 186, 190, 194, 207, 224, 242], "s01_20131218_01": [79, 80, 190], "2400": [79, 80, 183, 190], "864000": [79, 80, 190], "263": [79, 80, 110, 168, 190, 207, 208, 229], "eab": [79, 80], "s01": [79, 80], "lt": [79, 113], "br": 79, "gt": 79, "chpi_loc": [79, 207, 340, 342, 343, 344], "extract_chpi_locs_ctf": [79, 340, 342, 866, 876], "compute_head_po": [79, 207, 208, 340, 343, 584, 866, 876], "original_head_dev_t": 79, "invert_transform": [79, 134], "average_head_dev_t": 79, "val": [79, 99], "val_ori": 79, "010": [79, 92, 126, 139, 148, 154, 168, 221, 242], "020": [79, 126, 139, 148, 168, 221], "090": [79, 207], "130": [79, 80, 81, 157, 168, 169, 229, 242, 336, 876], "220": [79, 110, 136, 168, 207, 228, 229], "260": [79, 168, 207, 229, 593, 852], "280": [79, 110, 168, 169, 207, 229, 336, 876], "370": [79, 168, 207, 229, 242, 268, 273], "430": [79, 207, 229], "470": [79, 207], "490": [79, 207, 229], "540": [79, 221, 229, 242, 295, 296], "580": [79, 194, 207, 229], "640": [79, 182, 207], "650": [79, 80, 145, 194, 210], "680": [79, 194, 196], "690": [79, 207], "710": [79, 193, 207, 229, 242, 564], "730": [79, 229], "760": [79, 207], "770": [79, 194, 229], "780": [79, 194, 229], "810": [79, 207, 229], "820": [79, 194, 229], "830": [79, 161, 163, 194, 229], "840": [79, 229], "850": [79, 194, 207, 876], "870": [79, 229, 242, 680], "880": [79, 179, 207, 210, 212, 229, 242, 295, 296], "890": [79, 207, 229, 242, 275], "910": 79, "920": [79, 99, 142, 225], "930": [79, 194, 207, 229], "940": [79, 181, 186, 229], "950": [79, 207, 239], "970": [79, 229], "980": [79, 203, 207, 209, 212, 229], "990": [79, 207], "351": [79, 168, 207], "355": [79, 168, 229], "357": [79, 168, 174, 186, 200, 207], "358": [79, 139, 147, 168, 229], "182": [79, 83, 84, 104, 110, 168, 190, 194, 224, 229], "361": [79, 168, 193, 229, 233], "362": [79, 168, 194, 220, 224, 225, 229], "363": [79, 168, 194, 229], "368": [79, 168, 170, 229, 232], "371": [79, 168, 229], "379": [79, 207], "382": [79, 83, 159, 163, 224, 242, 656], "388": [79, 224, 229, 242], "394": [79, 136, 224, 229, 678], "395": [79, 224, 229], "397": [79, 229], "404": [79, 229], "406": [79, 224, 238], "mean_distance_limit": [79, 560], "0015": 79, "annotation_mov": 79, "hpi_disp": [79, 560], "disp": 79, "0015m": 79, "0038m": 79, "new_dev_head_t": 79, "show_ax": [79, 121, 123, 134, 155, 156, 158, 181, 182, 311, 759, 792, 876], "outer_skin": [79, 107, 116, 134, 155, 157, 158, 160, 171, 759, 851, 852, 858], "ctf_275": [79, 121, 183], "movement_detect": [79, 83], "contract": [80, 857], "clench": [80, 203], "jaw": [80, 203], "swallow": [80, 197, 203], "twitch": 80, "cranial": 80, "notic": [80, 82, 139, 140, 142, 144, 148, 149, 150, 155, 159, 161, 165, 166, 169, 174, 190, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 213, 215, 216, 219, 220, 575, 835], "annotate_muscle_zscor": [80, 866, 876], "taken": [80, 92, 136, 141, 198, 202, 204, 205, 229, 232, 239, 255, 256, 264, 265, 267, 268, 272, 273, 295, 296, 352, 356, 357, 367, 368, 369, 408, 415, 451, 452, 471, 473, 474, 475, 476, 477, 534, 582, 602, 697, 708, 783, 796, 852, 857, 876], "analyt": [80, 111, 242, 262, 263, 264, 265, 476, 477, 876], "divid": [80, 99, 125, 141, 142, 143, 146, 147, 161, 164, 208, 224, 226, 229, 262, 263, 264, 265, 268, 269, 270, 273, 276, 277, 278, 285, 474, 476, 477, 516, 539, 540, 561, 564, 568, 584, 618, 673, 683, 686, 696, 698, 699, 700, 711, 719, 775, 799, 803, 831, 855, 859, 876], "squar": [80, 111, 126, 139, 148, 149, 150, 161, 167, 168, 177, 188, 200, 213, 219, 221, 224, 226, 237, 242, 259, 262, 263, 264, 265, 269, 270, 271, 273, 276, 277, 278, 295, 296, 325, 408, 415, 452, 476, 477, 531, 538, 555, 556, 570, 676, 681, 683, 684, 686, 687, 696, 697, 698, 700, 743, 760, 768, 769, 775, 777, 782, 784, 786, 789, 795, 798, 801, 803, 805, 806, 831, 855, 858, 861, 876], "hundr": [80, 203, 204, 466, 833], "bad_muscl": [80, 561], "min_length_good": [80, 561], "fraction": [80, 111, 143, 174, 197, 203, 224, 324, 529, 538, 556, 574, 691, 787, 857, 876], "notch": [80, 190, 201, 210, 345, 447, 476, 477], "1981": 80, "603": [80, 194, 229], "scores_muscl": [80, 561], "threshold_muscl": 80, "annot_muscl": 80, "filter_freq": [80, 561], "zscore": [80, 285, 539, 540, 556, 696, 699, 803], "164": [80, 88, 89, 168, 194, 200, 224, 229, 242, 683, 684, 686, 687], "muscle_detect": [80, 83], "gross": [81, 242, 408], "widespread": [81, 203], "recover": 81, "ubiquit": 81, "postur": [81, 203], "mainten": [81, 205, 835, 876], "appropri": [81, 145, 148, 161, 165, 181, 182, 189, 199, 203, 205, 208, 219, 224, 226, 228, 239, 242, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 316, 322, 358, 386, 387, 476, 477, 520, 534, 682, 743, 767, 796, 801, 806, 833, 835, 850, 855, 858, 861, 876], "wouldn": [81, 876], "pronounc": [81, 200, 855], "simultan": [81, 136, 141, 194, 201, 203, 216, 416, 466, 499, 518, 598, 606, 685, 852, 858, 864, 876], "18019": 81, "1983": [81, 202, 242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 555, 599, 696, 699], "18020": 81, "exclus": [81, 169, 198, 203, 493, 551, 556, 787, 789, 790, 876], "mdash": [81, 203], "plot_sourc": [81, 203, 262, 263, 476, 477, 556, 773, 790, 796, 876], "85861": 81, "103880": 81, "criteria": [81, 139, 165, 199, 204, 205, 209, 255, 262, 263, 272, 551, 556, 876], "slope": [81, 187, 200, 254, 255, 267, 339, 340, 500, 556, 876], "peripher": [81, 556], "pole": [81, 159], "foci": [81, 743, 876], "blob": [81, 232, 233], "worth": [81, 99, 148, 225, 242, 391, 484, 491, 835, 852, 853, 855], "fire": 81, "fuzzi": 81, "textbook": [81, 204, 242, 678], "temporali": 81, "ear": [81, 165, 169, 179, 852], "muscle_idx": [81, 556], "log_scal": [81, 556, 788], "blink_idx": 81, "heartbeat_idx": 81, "muscle_idx_auto": 81, "find_bads_muscl": [81, 556, 876], "s001r01": 81, "s002": [81, 203], "s002r01": 81, "dhani": [81, 242, 556], "dharmaprani": [81, 242, 556], "hoang": [81, 242, 556], "nguyen": [81, 242, 556], "trent": [81, 242, 556], "lewi": [81, 242, 556, 858], "delosangel": [81, 242, 556], "willoughbi": [81, 242, 556], "kenneth": [81, 143, 242, 432, 556], "pope": [81, 242, 556], "38th": [81, 242, 556], "annual": [81, 205, 242, 556, 860], "confer": [81, 143, 242, 432, 556, 860], "societi": [81, 189, 242, 352, 523, 556, 725, 728, 858], "embc": [81, 203, 242, 556], "828": [81, 194, 207, 229, 242, 556], "orlando": [81, 242, 556], "fl": [81, 242, 556], "usa": [81, 197, 242, 556], "7590828": [81, 242, 556], "946": [81, 83], "muscle_ica": [81, 83], "otp": [82, 83, 592], "flux": [82, 208, 210, 262, 263, 264, 265, 476, 477, 553, 696, 698, 699, 700, 858], "jump": [82, 110, 143, 197, 208, 683, 684, 686, 687, 876], "bst_phantom_elekta": [82, 182], "phantom": [82, 164, 185, 186, 242, 259, 260, 262, 264, 265, 267, 300, 352, 357, 387, 428, 449, 451, 476, 487, 489, 520, 584, 759, 771, 783, 811, 852, 858, 876], "rid": [82, 228], "1522": [82, 168], "dipole_numb": 82, "kojak_all_200nam_pp_no_chpi_no_ms_raw": [82, 182], "47000": [82, 182], "437999": [82, 182], "alongsid": [82, 144, 148, 154, 198, 203, 204, 206, 214, 794, 831, 842], "oversampled_temporal_project": [82, 866, 876], "lump": [82, 584], "compute_bia": 82, "sti201": [82, 182, 267], "make_sphere_model": [82, 123, 155, 182, 183, 184, 206, 513, 858, 866, 876], "r0": [82, 123, 155, 182, 183, 184, 520], "head_radiu": [82, 123, 155, 182, 183, 184, 520, 876], "036": [82, 139, 148, 168, 182, 221, 242, 656], "actual_po": [82, 182, 184], "get_phantom_dipol": [82, 182, 387, 866, 876], "1fmm": 82, "worst": [82, 119, 352, 357, 652, 654, 655, 876], "bias_clean": 82, "9mm": 82, "2mm": [82, 858], "4mm": 82, "samu": [82, 161, 208, 242, 567, 584, 592, 661, 855, 876], "taulu": [82, 161, 208, 242, 429, 567, 584, 592, 661, 855, 876], "1013": [82, 168, 242, 592], "2017": [82, 133, 150, 203, 242, 390, 556, 592, 656, 661], "2734641": [82, 242, 592], "783": [82, 83, 194, 207, 229], "874": [83, 97, 100, 207], "auto_examples_preprocess": 83, "virtual_evok": [83, 85], "823": [83, 85, 194, 207], "xdawn_denois": [83, 86], "487": [83, 86, 150, 166, 173, 224], "shift_evok": [83, 84], "hut": 84, "2332": [84, 168, 550], "ax3": [84, 88, 97, 182, 193], "magnomet": 85, "virt_evok": 85, "as_typ": [85, 262, 263, 264, 265, 876], "plot_epochs_imag": [86, 115, 556, 786, 788, 866, 876], "signal_cov": [86, 557], "xd": 86, "1388": 86, "41640": 86, "epochs_denois": 86, "brief": [88, 93, 165, 197, 216, 224, 835], "simplest": [88, 93, 167, 194, 210, 224, 858], "kostiantyn": [88, 92, 93, 242, 656, 876], "maksymenko": [88, 92, 93, 242, 656, 876], "functool": [88, 224, 269, 270, 273, 276, 277, 278, 835], "partial": [88, 148, 150, 165, 199, 213, 214, 224, 242, 262, 263, 269, 270, 273, 276, 277, 278, 316, 586, 725, 728, 743, 767, 808, 812, 852, 864, 876], "region_localization_error": [88, 866], "f1_score": [88, 866], "precision_scor": [88, 866], "recall_scor": [88, 866], "cosine_scor": [88, 866], "peak_position_error": [88, 866], "spatial_deviation_error": [88, 866], "determinist": [88, 203, 876], "middl": [88, 93, 110, 133, 159, 165, 200, 204, 219, 260, 267, 269, 270, 273, 276, 277, 278, 444, 762, 771, 801, 806, 807, 835, 858, 876], "frontal": [88, 93, 165, 197, 203, 205, 213, 221, 303, 631, 743], "selected_label": [88, 93], "term": [88, 101, 124, 133, 165, 167, 193, 200, 204, 224, 228, 234, 239, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 328, 339, 375, 376, 377, 385, 476, 477, 531, 543, 565, 656, 696, 699, 711, 719, 831, 835, 852, 857, 858, 859, 864, 876], "label_region": 88, "select_sourc": [88, 93, 866, 876], "1915": 88, "One": [88, 94, 95, 98, 140, 142, 148, 149, 150, 154, 156, 165, 170, 177, 190, 200, 202, 203, 210, 213, 224, 242, 262, 263, 264, 265, 272, 310, 312, 435, 441, 476, 477, 556, 678, 685, 761, 773, 774, 790, 796, 835, 851, 858, 860, 861, 876], "label_dipol": 88, "source_time_seri": [88, 92, 93], "sin": [88, 90, 91, 92, 93, 112, 200, 219, 220, 221, 339, 593, 662], "n_event": [88, 93, 257, 262, 263, 267, 272, 281, 361, 436, 437, 449, 476, 477, 493, 517, 551, 559, 578, 598, 608, 610, 611, 646, 682, 699, 773, 776, 821, 831], "sourcesimul": [88, 92, 93, 661, 866, 876], "source_simulator_region": 88, "add_data": [88, 92, 93, 114, 269, 270, 273, 276, 277, 278, 646, 743, 801, 806], "source_simulator_dipol": 88, "gaussian": [88, 92, 112, 119, 151, 160, 161, 200, 203, 220, 224, 262, 263, 264, 265, 471, 582, 650, 712, 722, 725, 726, 728, 774, 783, 804, 851, 855, 858], "raw_region": 88, "simulate_raw": [88, 91, 92, 93, 221, 648, 649, 660, 662, 663, 866, 876], "make_ad_hoc_cov": [88, 91, 93, 221, 259, 296, 866, 876], "add_nois": [88, 91, 92, 93, 221, 648, 649, 661, 866, 876], "iir_filt": [88, 90, 91, 93, 221, 650, 660], "raw_dipol": 88, "cos2": [88, 91, 92, 93, 221, 647, 648, 649, 661], "evoked_region": 88, "evoked_dipol": 88, "stc_true_region": 88, "get_stc": [88, 92, 646], "start_sampl": [88, 213, 646], "stop_sampl": [88, 213, 646], "stc_true_dipol": 88, "stc_est_region": 88, "stc_est_dipol": 88, "0004": 88, "34986e": 88, "scorer": [88, 414, 425, 876], "rle": [88, 656], "region_result": 88, "thx": 88, "per_sampl": [88, 651, 652, 653, 654, 655, 656, 657, 658], "ax4": 88, "col": [88, 110, 743, 876], "constrained_layout": [88, 210, 712, 722], "super": [88, 239], "ticklabel_format": 88, "style": [88, 125, 133, 149, 150, 170, 187, 209, 254, 257, 259, 262, 263, 264, 265, 272, 277, 278, 295, 408, 414, 415, 467, 476, 477, 500, 555, 556, 696, 698, 699, 700, 743, 759, 760, 767, 774, 775, 778, 780, 781, 782, 790, 791, 796, 798, 803, 804, 805, 807, 876], "sci": [88, 209, 588], "scilimit": 88, "tweak": [88, 112, 125, 239, 833, 853, 855], "dipole_result": 88, "559": [88, 89, 207, 229], "plot_stc_metr": [88, 89], "auto_examples_simul": 89, "simulated_raw_data_using_subject_anatomi": [89, 92], "433": [89, 92, 229], "721": [89, 92, 194, 229], "simulate_raw_data": [89, 91], "235": [89, 91, 110, 157, 168, 180, 207, 223, 224], "source_simul": [89, 92, 93], "simulate_evoked_data": [89, 90], "927": [89, 90, 229], "fit_iir_model_raw": [90, 109, 866, 876], "templat": [90, 91, 123, 133, 134, 154, 156, 162, 163, 164, 169, 175, 229, 242, 266, 267, 275, 282, 300, 310, 314, 315, 316, 326, 327, 328, 332, 363, 371, 386, 433, 477, 491, 519, 570, 603, 626, 645, 759, 811, 816, 831, 849, 876], "read_proj": [90, 109, 129, 141, 190, 204, 262, 263, 264, 265, 272, 476, 477, 827, 866], "sample_audvis_ecg": [90, 109, 129, 141, 171, 204, 254], "randomst": [90, 91, 92, 112, 158, 193, 200, 221, 224, 509, 556, 582, 601, 648, 649, 650, 659, 660, 662, 683, 684, 685, 686, 687, 876], "randn": [90, 112, 158, 193, 200, 221, 224, 232, 233, 234], "high_resolut": [90, 802], "wronkiewicz": [91, 876], "wronk": 91, "add_ecg": [91, 92, 649, 661, 866, 876], "add_eog": [91, 92, 648, 661, 866, 876], "epoch_dur": [91, 564], "stagger": 91, "sinusoid": [91, 92, 112, 182, 183, 200, 207, 219, 221, 339, 447, 476, 477, 662, 831], "10hz": 91, "global": [91, 111, 119, 126, 141, 143, 148, 149, 154, 161, 165, 182, 205, 242, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 432, 741, 767, 774, 777, 780, 782, 783, 801, 806, 831, 835, 855, 876], "n_samp": [91, 213, 221, 876], "25e": 91, "1e9": [91, 183, 221], "plt_show": [91, 179, 224], "input": [91, 92, 112, 154, 171, 187, 193, 194, 200, 205, 208, 213, 224, 228, 229, 234, 254, 262, 263, 264, 265, 268, 269, 270, 273, 276, 277, 278, 281, 312, 328, 353, 354, 355, 359, 366, 408, 409, 411, 412, 414, 415, 416, 418, 420, 425, 432, 437, 443, 465, 467, 468, 473, 476, 477, 500, 502, 556, 557, 565, 566, 568, 569, 572, 573, 575, 576, 597, 611, 662, 673, 675, 682, 683, 684, 686, 687, 694, 696, 714, 715, 743, 744, 746, 747, 759, 767, 774, 778, 782, 790, 801, 804, 806, 816, 851, 857, 858, 861, 876], "millimet": [91, 92, 155, 159, 181, 333, 337, 451, 466, 492, 509, 608, 858, 876], "calc": 91, "orphan": [91, 210], "167": [91, 128, 168, 194, 207, 224, 228, 229], "ivana": [92, 876], "kojcic": [92, 876], "deslauri": [92, 93, 876], "gauthier": [92, 93, 876], "sam": [92, 93, 876], "doesn": [92, 139, 155, 169, 170, 203, 205, 206, 208, 213, 226, 229, 239, 375, 376, 377, 378, 380, 381, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 545, 556, 559, 573, 577, 584, 604, 643, 697, 699, 716, 788, 835, 843, 851, 855, 876], "fname_info": 92, "g_temp_sup": 92, "g_t_transv": 92, "s_calcarin": 92, "vice": [92, 132, 159, 200, 273, 858], "versa": [92, 132, 159, 200, 273, 858], "moreov": [92, 136, 204, 205, 224], "contralater": [92, 150, 206], "ipsilater": [92, 150, 175], "activation_list": 92, "region_nam": 92, "latenc": [92, 142, 143, 144, 148, 229, 242, 264, 265, 269, 270, 273, 276, 277, 278, 432, 683, 684, 686, 687, 778, 876], "sigma": [92, 115, 126, 136, 141, 194, 224, 262, 263, 520, 689, 690, 712, 722, 733, 774, 804, 858, 861], "gf": 92, "rand": [92, 221], "100m": 92, "30m": 92, "15m": 92, "region_id": 92, "events_tmp": 92, "label_tmp": 92, "amplitude_tmp": 92, "latency_tmp": 92, "wf_tmp": 92, "evoked_aud_left": 92, "evoked_vis_right": 92, "mere": [92, 171, 203, 614, 857], "stc_aud": 92, "stc_vi": 92, "stc_diff": 92, "49264": [92, 177], "64e": [92, 177], "3254294": 92, "92023613": 92, "51105546": 92, "christoph": [92, 113, 150, 154, 193, 242, 352, 414, 680, 876], "destrieux": [92, 154, 242], "ander": [92, 154, 177, 242, 523, 858], "dale": [92, 154, 177, 242, 523, 858], "halgren": [92, 154, 242, 523], "sulci": [92, 154, 220, 242], "nomenclatur": [92, 154, 213, 242], "sine": [93, 219, 254, 711, 719], "everi": [93, 101, 111, 125, 133, 140, 143, 150, 167, 171, 174, 194, 201, 202, 203, 216, 239, 257, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 346, 457, 465, 473, 474, 476, 477, 509, 556, 558, 572, 573, 582, 601, 648, 649, 650, 659, 660, 662, 683, 684, 685, 686, 687, 696, 699, 835, 855, 856], "significantli": [94, 95, 98, 224, 227, 232, 233, 239, 269, 270, 273, 276, 277, 278, 683, 684, 686, 687, 857], "permutation_cluster_test": [94, 224, 227, 228, 687, 866, 876], "1332": [94, 95, 144, 165, 168, 207, 226, 227, 228], "epochs1": [94, 232, 431], "condition1": [94, 232], "epochs2": [94, 232, 431], "condition2": [94, 232], "t_ob": [94, 225, 226, 232, 683, 685, 686, 876], "cluster_p_valu": [94, 226, 227, 228, 232, 233, 234], "n_permut": [94, 98, 110, 224, 225, 226, 227, 228, 229, 233, 234, 683, 684, 685, 686, 687], "tail": [94, 110, 150, 224, 226, 227, 228, 229, 232, 239, 260, 683, 684, 685, 686, 687, 771, 802, 876], "out_typ": [94, 110, 224, 226, 227, 228, 683, 684, 686, 687, 876], "stat_fun": [94, 110, 111, 224, 225, 226, 227, 228, 229, 232, 233, 234, 675, 683, 684, 686, 687], "000227": 94, "167093": 94, "2500": [94, 193, 876], "2530": 94, "276": [94, 110, 143, 168, 194, 229], "2707": 94, "2722": 94, "2708": 94, "2730": 94, "2709": 94, "773": [94, 229], "2710": 94, "2690": 94, "2695": 94, "2692": 94, "erf": [94, 115, 126, 190, 197, 200, 229, 242, 556, 786, 788, 842, 876], "i_c": 94, "cluster_stats_evok": [94, 100], "discoveri": [95, 228, 242, 680], "bonferroni_correct": [95, 224, 866, 876], "fdr_correct": [95, 99, 224, 228, 866], "pval": [95, 228, 674, 680, 683, 684, 686, 687], "ttest_1samp": [95, 224, 689], "n_test": [95, 685], "threshold_uncorrect": 95, "ppf": [95, 209, 224, 226, 229, 232, 233, 586, 683, 684, 686, 687], "reject_bonferroni": 95, "pval_bonferroni": 95, "threshold_bonferroni": 95, "reject_fdr": 95, "pval_fdr": 95, "indep": [95, 680], "threshold_fdr": 95, "xmin": 95, "xmax": 95, "hline": [95, 140, 264, 265, 777], "uncorrect": [95, 224], "bonferroni": [95, 447, 476, 477, 674, 685, 876], "fdr_stats_evok": [95, 100], "generalis": 97, "tradit": [97, 142, 206, 210, 723, 724, 726, 727, 767], "predictor": [97, 140, 224, 555, 599, 682], "inapplic": 97, "rerp": [97, 242, 682], "smith": [97, 124, 224, 225, 242, 385, 682, 683, 684, 686, 687], "kuta": [97, 242, 682], "169": [97, 104, 168, 194, 207, 224, 228, 242, 682], "jona": [97, 99, 126, 194, 229, 242, 683, 684, 686, 687, 876], "sassenhagen": [97, 99, 126, 194, 229, 242, 683, 684, 686, 687, 876], "linear_regression_raw": [97, 100, 866, 876], "rerf": 97, "param": [97, 111, 408, 409, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 545, 557, 623, 876], "197": [97, 100, 168, 224, 228, 229, 852], "permutation_t_test": [98, 224, 866], "temporal_mask": 98, "logical_and": [98, 112], "50000": 98, "p_valu": [98, 224, 229, 447, 476, 477, 685], "significant_sensor": 98, "significant_sensors_nam": 98, "49999": 98, "0243": [98, 141, 168], "1323": [98, 168], "1333": [98, 168, 232, 234], "1613": [98, 168], "1643": [98, 168], "2423": [98, 168], "2522": [98, 168], "2622": [98, 168], "2632": [98, 168], "2642": [98, 168], "2643": [98, 168], "stats_pick": 98, "cbar_fmt": [98, 107, 259, 262, 263, 264, 265, 271, 408, 415, 476, 477, 555, 556, 696, 698, 700, 775, 782, 786, 795, 798, 803, 876], "sensor_permutation_test": [98, 100], "psycholinguist": [99, 224], "st\u00e9phane": [99, 225, 242, 391, 852], "dufau": [99, 225, 242, 391, 852], "grainger": [99, 225, 242, 391, 852], "katherin": [99, 225, 242, 391, 725, 728, 852], "midglei": [99, 225, 242, 391, 852], "phillip": [99, 140, 225, 242, 386, 391, 852, 876], "holcomb": [99, 225, 242, 391, 852], "pictur": [99, 225, 242, 272, 391, 852], "snapshot": [99, 171, 225, 242, 391, 813, 835, 852, 876], "megastudi": [99, 225, 242, 391, 852], "psycholog": [99, 225, 242, 391, 852], "1887": [99, 225, 242, 391, 852], "0956797615603934": [99, 225, 242, 391, 852], "matt": [99, 242, 876], "davi": [99, 242], "ford": [99, 242], "friedmann": [99, 242], "pulverm\u00fcl": [99, 242], "william": [99, 193, 242, 414], "marslen": [99, 242], "wilson": [99, 242], "1383": [99, 242], "1400": [99, 242], "2006": [99, 177, 193, 208, 242, 262, 263, 534, 584, 653, 658, 725, 728], "2005": [99, 161, 208, 242, 429, 534, 567, 584, 653, 656, 658, 855], "048": [99, 139, 141, 148, 168, 182, 216, 221, 225, 242, 710, 712, 722, 726], "tal": [99, 118, 124, 242, 484, 491, 876], "linzen": [99, 118, 876], "pd": [99, 110, 135, 142, 150, 189, 190, 208], "kiloword": [99, 142, 213, 225, 866], "kword_metadata": [99, 142, 225], "epo": [99, 139, 142, 171, 225, 254, 262, 263, 607, 876], "read_epoch": [99, 139, 142, 225, 855, 858, 866, 876], "visualcomplex": [99, 142], "film": [99, 142, 225, 864], "783710": [99, 142], "cent": [99, 142], "141553": [99, 142], "shot": [99, 142], "600033": [99, 142], "cold": [99, 142], "657457": [99, 142], "945661": [99, 142], "characterist": [99, 150, 200, 201, 242, 262, 263, 400, 431, 443, 575, 831], "concret": [99, 142, 143], "imagin": [99, 110, 204], "df": [99, 110, 139, 144, 190, 213, 224, 225, 226, 232, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 539, 683, 686, 696, 698, 699, 700], "cut": [99, 110, 111, 179, 204, 239, 254, 262, 263, 264, 265, 410, 419, 444, 446, 476, 477, 568, 569, 577, 580, 584, 588, 843, 861, 876], "split_legend": [99, 229, 767], "percentil": [99, 133, 134, 135, 145, 262, 263, 269, 270, 272, 273, 276, 277, 278, 476, 477, 732, 762, 767, 773, 796, 801, 806, 807, 876], "gfp": [99, 111, 126, 141, 143, 149, 161, 165, 190, 229, 262, 263, 264, 265, 531, 767, 774, 777, 783, 800, 831, 855, 876], "7424": 99, "plot_evoked_imag": [99, 866, 876], "null": [99, 281, 434, 678, 876], "hypothesi": [99, 171, 225, 674, 678, 680, 685, 864], "colour": [99, 175, 876], "palett": [99, 110, 144], "dark": [99, 133, 171, 262, 263, 476, 477, 556, 743, 773, 790, 796, 876], "reject_h0": 99, "fdr_pval": 99, "plot_imag": [99, 126, 141, 142, 145, 149, 165, 197, 199, 209, 225, 262, 263, 264, 265, 876], "sensor_regress": [99, 100], "auto_examples_stat": 100, "csd_fourier": [101, 697, 701, 702, 703, 705, 706, 866, 876], "csd_multitap": [101, 697, 701, 702, 703, 704, 705, 714, 866, 876], "core": [101, 143, 165, 167, 170, 188, 219, 242, 262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 280, 352, 353, 355, 357, 411, 418, 421, 424, 425, 451, 464, 466, 476, 477, 515, 518, 519, 529, 530, 539, 540, 561, 568, 569, 584, 636, 644, 647, 648, 649, 661, 683, 684, 685, 686, 687, 695, 698, 700, 701, 702, 703, 704, 705, 706, 714, 715, 723, 724, 725, 726, 727, 775, 778, 797, 833, 834, 835, 842, 857, 876], "clariti": [101, 862], "722": [101, 194, 229, 242, 712, 722, 723, 726], "adapt": [101, 111, 165, 189, 206, 221, 224, 242, 262, 263, 264, 265, 295, 296, 413, 447, 448, 476, 477, 529, 530, 556, 584, 698, 700, 703, 706, 712, 714, 722, 739, 775, 835, 841, 852, 857, 876], "csd_fft": 101, "csd_mt": 101, "convolv": [101, 109, 200, 224, 239, 414, 421], "600hz": 101, "enough": [101, 157, 179, 201, 202, 203, 205, 208, 213, 224, 239, 259, 262, 263, 264, 265, 271, 303, 304, 310, 408, 415, 427, 476, 477, 555, 556, 570, 691, 696, 698, 699, 700, 752, 760, 767, 773, 775, 777, 779, 782, 783, 786, 790, 793, 795, 796, 797, 798, 799, 803, 805, 839, 857, 858, 876], "10th": 101, "greatli": 101, "minim": [101, 140, 168, 200, 219, 239, 262, 263, 358, 416, 431, 566, 682, 724, 727, 743, 833, 855, 858], "csd_wav": 101, "crossspectraldens": [101, 288, 295, 315, 433, 701, 702, 703, 704, 705, 706, 707, 713, 716, 769, 866, 876], "trick": [101, 198, 239, 242, 685, 839, 876], "comma": [101, 254, 835, 876], "plot_dict": [101, 238], "889": [101, 104, 227, 229, 231, 275], "compute_csd": [101, 104], "taper": [102, 112, 262, 263, 264, 265, 413, 421, 447, 476, 477, 529, 530, 698, 700, 703, 706, 708, 712, 714, 722, 724, 726, 727, 775, 876], "prolat": [102, 237, 242, 262, 263, 264, 265, 476, 477, 698, 700, 708, 714], "spheroid": [102, 237, 242, 262, 263, 264, 265, 476, 477, 698, 700, 708, 714], "sequenc": [102, 136, 242, 254, 262, 263, 264, 265, 476, 477, 673, 698, 700, 708, 743, 775, 852, 858], "compute_source_psd_epoch": [102, 104, 529, 866, 876], "n_epochs_us": 102, "psd_avg": 102, "set_xlim": [102, 111, 150, 204], "046": [102, 104, 139, 141, 148, 168, 221, 242, 656, 858], "037": [104, 139, 148, 168, 213, 221], "auto_examples_time_frequ": 104, "source_power_spectrum_opm": [104, 107], "time_frequency_erd": [104, 110, 876], "666": [104, 110, 119, 194, 229], "time_frequency_global_field_pow": [104, 111], "027": [104, 111, 126, 139, 148, 168, 221, 224, 242, 295, 556, 689, 690, 850], "842": [104, 229], "time_frequency_simul": [104, 112], "109": [104, 112, 127, 136, 168, 193, 203, 229, 378, 852], "source_label_time_frequ": [104, 105], "source_power_spectrum": [104, 106], "176": [104, 106, 141, 168, 170, 178, 186, 224, 229, 242, 556], "source_space_time_frequ": [104, 108], "033": [104, 108, 139, 148, 168, 221], "586": [104, 229], "temporal_whiten": [104, 109], "684": [104, 109, 207, 225, 229], "former": [105, 141, 228, 352, 556, 857, 876], "latter": [105, 141, 150, 167, 408, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 557, 858], "source_induced_pow": [105, 866, 876], "epochs_induc": 105, "subtract_evok": [105, 111, 202, 262, 263, 599, 876], "this_epoch": 105, "inter": [105, 133, 242, 259, 262, 263, 264, 265, 271, 280, 408, 415, 432, 476, 477, 555, 556, 570, 648, 696, 698, 700, 723, 724, 726, 727, 760, 775, 782, 786, 795, 798, 803, 805], "itc": [105, 723, 724, 725, 726, 727, 728], "baseline_mod": [105, 539, 540], "compute_source_psd": [106, 107, 530, 866, 876], "100hz": 106, "2048": [106, 109, 112, 131, 262, 263, 264, 265, 407, 476, 477, 529, 797], "psd_dspm": 106, "neuromag": [107, 155, 157, 159, 165, 167, 182, 184, 198, 205, 208, 213, 214, 215, 254, 255, 260, 262, 263, 264, 265, 267, 272, 318, 428, 449, 476, 477, 487, 493, 500, 506, 584, 606, 631, 698, 700, 773, 776, 781, 796, 831, 847, 852, 858, 861, 876], "welch": [107, 221, 237, 238, 239, 242, 262, 263, 264, 265, 476, 477, 698, 700, 715, 797, 876], "next_fast_len": 107, "src_fname": [107, 232, 233, 234], "vv_fname": 107, "squid_resting_st": 107, "vv_erm_fnam": 107, "squid_empty_room": 107, "vv_trans_fnam": 107, "opm_fnam": 107, "opm_resting_state_raw": 107, "opm_erm_fnam": 107, "opm_empty_room_raw": 107, "opm_tran": 107, "opm_coil_def_fnam": 107, "vv": 107, "simplifi": [107, 178, 200, 242, 254, 262, 263, 264, 265, 476, 477, 855, 856, 876], "housekeep": [107, 210], "raw_erm": [107, 127, 183, 190, 851], "new_sfreq": 107, "nyquist": [107, 200, 201, 876], "meg2233": 107, "meg1842": 107, "hold": [107, 190, 221, 224, 262, 263, 264, 265, 429, 476, 477, 575, 584, 694, 777, 797, 799, 831, 858, 864], "61999": 107, "60999": 107, "dist": [107, 155, 156, 209, 220, 254, 268, 275, 280, 363, 427, 460, 590, 666, 667, 668, 670, 671, 861], "make_bem_solut": [107, 157, 190, 363, 427, 458, 513, 519, 520, 603, 604, 633, 635, 824, 851, 858, 866, 876], "169022": 107, "169992": 107, "202": [107, 168, 225, 229, 861, 876], "2052": 107, "995623": 107, "029776": 107, "088592": 107, "062622": 107, "916188": 107, "395825": 107, "069381": 107, "399641": 107, "914042": 107, "993107": 107, "074371": 107, "090590": 107, "079171": 107, "995577": 107, "050589": 107, "086427": 107, "057412": 107, "994603": 107, "534": [107, 229], "692": [107, 143, 229, 239], "percentag": [107, 203, 262, 263, 558, 652, 653, 654, 655, 656, 658, 732, 772, 876], "freq_band": [107, 136], "topo": [107, 113, 141, 149, 209, 238, 262, 263, 746, 756, 767, 804, 864, 876], "stc_psd": [107, 529], "sensor_psd": [107, 529], "return_sensor": [107, 529, 530], "topo_norm": 107, "keepdim": [107, 136], "stc_norm": 107, "3660": 107, "1969": 107, "014611": 107, "18765e": 107, "34378": 107, "07671e": 107, "3720": 107, "1698": 107, "007069": 107, "0841e": 107, "46031": 107, "26253e": 107, "coverag": 107, "worthwhil": [107, 150, 203], "plot_band": 107, "inferno": [107, 135, 224], "cau": 107, "show_trac": [107, 125, 134, 269, 270, 273, 276, 277, 278, 743, 801, 806, 876], "fig_alpha": 107, "brain_alpha": [107, 270, 276, 278, 806], "7045685": 107, "96394224": 107, "07428314": 107, "profil": [107, 170, 210, 695, 833, 835], "beneath": 107, "fig_beta": 107, "brain_beta": 107, "18935281": 107, "33488802": 107, "88328023": 107, "fig_beta_opm": 107, "brain_beta_opm": 107, "28867831": 107, "68102302": 107, "87342874": 107, "source_band_induced_pow": [108, 866, 876], "use_fft": [108, 110, 238, 421, 539, 540, 702, 705, 721, 723, 724, 726, 727], "induced_power_": 108, "proj_fnam": [109, 190], "20000": 109, "innov": 109, "d_": 109, "lfilter": 109, "regener": [109, 262, 263, 876], "r_": [109, 653, 658, 858], "dummi": [109, 123, 219, 234], "nfft": [109, 221], "written": [110, 170, 171, 174, 207, 215, 258, 301, 305, 440, 441, 475, 476, 477, 618, 624, 821, 826, 829, 842, 851, 864, 876], "desynchron": [110, 238, 242, 852], "conceptu": [110, 150, 200, 203, 242], "ersp": [110, 876], "perturb": 110, "goal": [110, 133, 136, 835, 853, 857, 864], "c3": [110, 126, 143, 158, 499], "35hz": 110, "customari": [110, 858], "klotzsch": [110, 876], "cb": 110, "mpg": 110, "twoslopenorm": 110, "seaborn": [110, 144, 208], "sn": [110, 144, 208], "tfr_multitap": [110, 112, 238, 421, 723, 724, 725, 726, 728, 866, 876], "permutation_cluster_1samp_test": [110, 224, 226, 686, 866, 876], "pcluster_test": 110, "strip": [110, 242], "961": [110, 159, 229], "suitabl": [110, 145, 158, 160, 226, 228, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 304, 351, 371, 407, 432, 463, 476, 477, 499, 513, 683, 696, 698, 699, 700, 831, 851, 852, 858, 864], "cnorm": [110, 259, 262, 263, 264, 265, 271, 408, 415, 476, 477, 555, 556, 696, 698, 700, 760, 775, 782, 786, 795, 798, 803, 805, 876], "asymmetr": [110, 758], "thing": [110, 140, 143, 144, 150, 159, 170, 171, 180, 187, 198, 200, 213, 221, 229, 232, 234, 310, 476, 477, 835, 855, 876], "rdbu": 110, "equal": [110, 139, 146, 147, 148, 150, 164, 167, 171, 174, 175, 179, 197, 200, 215, 216, 232, 234, 257, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 284, 295, 296, 315, 351, 352, 356, 357, 367, 368, 369, 408, 415, 421, 431, 433, 451, 452, 465, 471, 473, 474, 476, 477, 493, 516, 523, 534, 539, 540, 555, 556, 568, 573, 582, 589, 590, 615, 652, 677, 678, 683, 684, 686, 687, 688, 690, 691, 696, 698, 699, 700, 715, 760, 761, 767, 771, 774, 775, 776, 777, 779, 782, 783, 798, 799, 803, 805, 831, 857, 858, 862, 876], "promin": [110, 142, 197, 209, 239, 353, 354, 355], "extrem": [110, 141, 239, 264, 265, 295, 296, 319, 352, 356, 357, 367, 368, 369, 408, 415, 416, 451, 452, 471, 473, 474, 534, 683, 684, 686, 687, 783], "vcenter": 110, "step_down_p": [110, 683, 684, 686, 687], "buffer_s": [110, 224, 228, 229, 232, 233, 234, 526, 683, 684, 686, 687], "tfr_ev": 110, "gridspec_kw": [110, 125, 175, 209], "width_ratio": [110, 175, 209], "stack": [110, 140, 221, 232, 643, 738, 740, 839, 840, 843], "mask_styl": [110, 264, 265, 696, 779], "set_yscal": 110, "724718": 110, "552076": 110, "183231": 110, "307": [110, 111, 168], "314": [110, 168, 194, 229], "315": [110, 168, 207, 229, 876], "309": [110, 168, 207, 229, 242, 588, 725, 728], "308": [110, 168, 207, 229], "251": [110, 168, 210, 224, 476, 477], "285": [110, 168, 207], "282": [110, 168, 224], "528367": 110, "706422": 110, "286": [110, 168, 207, 224, 229], "296": [110, 168, 207, 229], "241": [110, 121, 168, 201, 207, 224, 229, 447, 476, 477], "279": [110, 168, 201, 207, 229, 242, 556, 725, 728], "581589": 110, "346448": 110, "267": [110, 142, 167, 168, 207, 224, 229, 242, 850], "713872": 110, "754759": 110, "360704": 110, "268": [110, 168, 184, 190], "992503": 110, "416450": 110, "278": [110, 168, 194, 224, 229], "206": [110, 168, 224, 228], "221": [110, 145, 168, 229], "216": [110, 168, 196, 215, 218, 229], "218": [110, 168, 200, 224, 234, 236, 242], "233": [110, 168, 229], "225": [110, 125, 143, 168, 224, 229, 242, 852], "228": [110, 168, 224, 228, 229, 242, 571], "044340": 110, "070444": 110, "242": [110, 157, 163, 168, 228, 229, 876], "259": [110, 168, 173, 224, 229, 242, 858], "269": [110, 135, 168, 207, 229], "epochstfr": [110, 112, 290, 527, 696, 707, 718, 726, 727, 729, 866, 876], "datafram": [110, 139, 146, 147, 148, 150, 164, 189, 190, 208, 213, 225, 237, 256, 257, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 432, 476, 477, 611, 682, 696, 698, 699, 700, 858, 876], "to_data_fram": [110, 135, 139, 144, 148, 213, 225, 256, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 696, 698, 699, 700, 858, 876], "0000": [110, 835], "473093": 110, "474571": 110, "764021": 110, "9875": 110, "491659": 110, "480088": 110, "762445": 110, "9750": [110, 876], "500872": 110, "469376": 110, "749421": 110, "9625": 110, "500605": 110, "449373": 110, "728686": 110, "9500": 110, "515911": 110, "443439": 110, "719536": 110, "lineplot": [110, 144], "confid": [110, 111, 141, 144, 150, 165, 175, 205, 260, 267, 556, 675, 698, 700, 767, 788, 856, 876], "long_format": [110, 144, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 696, 698, 699, 700, 876], "freq_bound": 110, "delta": [110, 136, 200, 262, 263, 264, 265, 473, 476, 477, 539, 698, 700, 775], "theta": [110, 111, 136, 262, 263, 264, 265, 476, 477, 698, 700, 775], "freq_bands_of_interest": 110, "remove_unused_categori": 110, "reorder_categori": 110, "facetgrid": 110, "margin_titl": 110, "n_boot": 110, "axline_kw": 110, "dash": [110, 139, 149, 171, 201, 204, 208, 209, 216, 259, 262, 263, 264, 265, 476, 477, 698, 700, 767, 768, 794, 797, 876], "set_axis_label": 110, "col_templ": 110, "col_nam": [110, 267, 861], "row_templ": 110, "row_nam": [110, 266, 861], "add_legend": [110, 743], "df_mean": 110, "queri": [110, 139, 144, 148, 164, 217, 225, 237, 257, 262, 263, 435, 699], "groupbi": [110, 144, 150, 225], "reset_index": [110, 144], "col_ord": 110, "violinplot": [110, 144], "deep": [110, 136, 144, 157, 180, 200, 242, 262, 263, 264, 265, 286, 408, 409, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 476, 477, 553, 554, 557, 696, 698, 699, 700, 740, 743, 759, 858, 876], "hue_ord": 110, "gert": [110, 242], "pfurtschel": [110, 242], "fernando": [110, 242, 851], "lope": [110, 242, 851], "da": [110, 242, 851], "silva": [110, 242, 851], "principl": [110, 201, 224, 229, 242, 853, 858], "1842": [110, 168, 224, 242], "1857": [110, 242], "00141": [110, 242], "bernhard": [110, 242, 471], "graimann": [110, 242], "jane": [110, 242], "huggin": [110, 242], "simon": [110, 242, 876], "levin": [110, 242], "ecog": [110, 113, 133, 134, 137, 138, 164, 168, 213, 219, 224, 242, 262, 263, 264, 265, 267, 273, 275, 309, 310, 319, 369, 371, 380, 437, 441, 476, 477, 491, 553, 554, 581, 626, 641, 691, 696, 698, 699, 700, 743, 759, 799, 811, 813, 831, 832, 842, 858, 876], "00697": [110, 242], "exposur": [110, 203, 242, 835], "tone": [110, 165, 242, 852], "1993": [110, 177, 242], "90110": [110, 242], "rectifi": 111, "magniud": 111, "uncertainti": [111, 237, 242, 262, 263, 264, 265, 476, 477, 698, 700, 708, 714, 842], "importantli": [111, 112, 199, 851], "hari": [111, 112, 124, 177, 242, 876], "neuromagnet": [111, 203, 242, 556], "1997": [111, 179, 204, 205, 242, 295, 296, 649, 712, 722, 723, 726, 858], "s0166": [111, 242], "2236": [111, 242], "10065": [111, 242], "328": [111, 119, 161, 168, 207, 224, 229, 242, 264, 265, 352, 783, 855], "342": [111, 119, 161, 168, 229, 242, 264, 265, 352, 783, 855], "bradlei": [111, 242], "efron": [111, 242], "trevor": [111, 242], "hasti": [111, 242], "institut": [111, 242, 725, 728], "mathemat": [111, 150, 175, 198, 200, 208, 224, 242, 504, 523, 683, 725, 728, 835, 851, 858, 876], "monograph": [111, 242], "cambridg": [111, 150, 242, 352], "univers": [111, 242, 253, 352, 447, 852, 857, 863, 876], "york": [111, 200, 242, 253, 447, 863, 876], "isbn": [111, 150, 200, 221, 242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 295, 296, 352, 476, 477, 678, 696, 699], "14989": [111, 242], "web": [111, 145, 203, 239, 242, 272, 544, 751, 864, 876], "stanford": [111, 242], "casi": [111, 242], "bootstrap_confidence_interv": [111, 866], "iter_freq": 111, "frequency_map": 111, "job": [111, 201, 203, 254, 262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 280, 352, 353, 355, 357, 410, 411, 413, 414, 418, 419, 420, 421, 424, 425, 446, 447, 448, 451, 464, 466, 476, 477, 515, 518, 519, 529, 530, 539, 540, 561, 568, 569, 636, 644, 647, 648, 649, 661, 683, 684, 685, 686, 687, 698, 700, 701, 702, 703, 704, 705, 706, 714, 715, 723, 724, 725, 726, 727, 728, 775, 778, 797, 876], "skip": [111, 133, 143, 148, 164, 165, 169, 171, 189, 200, 239, 254, 340, 496, 529, 572, 634, 835, 851, 861, 876], "option": [111, 123, 133, 134, 139, 141, 149, 150, 155, 160, 161, 164, 165, 166, 167, 170, 171, 172, 177, 187, 194, 197, 200, 203, 208, 209, 213, 215, 216, 219, 224, 225, 228, 234, 237, 239, 259, 260, 262, 263, 264, 265, 269, 270, 271, 272, 273, 275, 276, 277, 278, 282, 283, 301, 307, 310, 352, 362, 367, 370, 383, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 429, 439, 440, 441, 446, 447, 448, 450, 452, 471, 473, 474, 476, 477, 489, 491, 497, 515, 519, 523, 524, 525, 526, 527, 529, 530, 534, 536, 538, 539, 540, 548, 553, 555, 556, 557, 566, 567, 568, 569, 570, 575, 584, 604, 614, 616, 626, 661, 666, 670, 681, 683, 684, 686, 687, 690, 691, 696, 698, 699, 700, 733, 743, 759, 760, 761, 767, 771, 773, 775, 777, 779, 782, 783, 786, 790, 793, 795, 796, 797, 798, 799, 801, 803, 805, 806, 807, 809, 841, 843, 857, 858, 861, 873, 876], "apply_hilbert": [111, 112, 113, 135, 166, 262, 263, 264, 265, 476, 477, 876], "269399": 111, "897": [111, 207, 229], "1202": 111, "emerg": 111, "bootstrap": [111, 141, 171, 675, 698, 700, 767, 876], "domin": [111, 202, 208, 239, 269, 270, 273, 276, 277, 278, 442, 556], "helper": [111, 133, 224, 310, 328, 865], "winter_r": 111, "freq_nam": 111, "ci_low": 111, "ci_up": 111, "dhz": 111, "xy": [111, 113, 135, 180, 319, 428, 744, 813, 858], "horizontalalign": [111, 133, 200, 204], "xycoord": 111, "843": 111, "trade": [112, 200, 724, 727], "bharadwaj": [112, 124, 242, 876], "berkelei": [112, 113, 253, 863], "tfr_stockwel": [112, 238, 723, 724, 725, 726, 727, 866, 876], "tfr_array_morlet": [112, 724, 725, 726, 727, 728, 866, 876], "centers_to_edg": [112, 866, 876], "sim0001": 112, "sim0002": 112, "1024": [112, 133, 683, 684, 686, 687], "burst": [112, 182, 197, 852], "ramp": [112, 200], "logical_or": 112, "on_tim": 112, "han": [112, 578, 648, 649, 723, 724, 726, 727, 876], "sin50hz": 112, "4000": [112, 165, 205, 254, 499], "41160": 112, "41159": 112, "time_bandwidth": [112, 421, 724, 727], "sim": [112, 531, 858], "nmore": 112, "balanc": [112, 199, 200, 224, 228, 652, 677, 876], "strictli": [112, 150, 160, 167, 168, 177, 200, 202, 288, 743, 876], "regard": [112, 206, 221, 229, 238, 858, 876], "recoverd": 112, "lossless": 112, "disregard": 112, "numer": [112, 155, 161, 200, 203, 213, 224, 229, 268, 275, 351, 374, 443, 468, 476, 477, 556, 673, 683, 684, 686, 687, 709, 855, 857, 858, 864, 876], "all_n_cycl": 112, "isinst": [112, 139, 257, 475], "exagger": 112, "wise": [112, 161, 197, 201, 264, 265, 417, 685, 831, 876], "epochs_hilb": 112, "tfr_data": 112, "413": [112, 177, 224, 229, 242], "3301": 112, "255": [112, 125, 159, 168, 207, 228, 229, 233, 236, 239, 269, 270, 273, 276, 277, 278, 743, 762, 801, 806, 807], "avgpow": 112, "avg_pow": [112, 723, 724], "mesh": [112, 155, 159, 160, 174, 268, 270, 276, 278, 306, 307, 358, 407, 463, 464, 627, 743, 802, 806, 829, 841, 876], "electrocorticographi": [113, 133, 135, 242, 262, 263, 264, 265, 476, 477, 553, 554, 696, 698, 699, 700, 852, 858, 876], "scatterplot": 113, "pyvista": [113, 133, 170, 180, 260, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 695, 743, 745, 753, 757, 759, 771, 799, 801, 802, 806, 808, 813, 833, 834, 853, 864, 876], "clickableimag": [113, 866], "own": [113, 125, 150, 176, 182, 205, 216, 226, 229, 262, 263, 264, 265, 269, 272, 273, 277, 319, 474, 476, 477, 584, 743, 774, 801, 835, 838, 839, 855, 857, 861], "dirnam": [113, 123, 158, 170], "pathlib": [113, 121, 143, 156, 169, 171, 272, 375, 376, 377, 380, 381, 383, 388, 391, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 519, 612, 831, 876], "noqa": [113, 115, 169, 204, 224], "f401": 113, "snapshot_brain_montag": [113, 135, 808, 866, 876], "misc_path": [113, 133, 134, 181], "ecog_data_fnam": 113, "sample_ecog_ieeg": [113, 133], "click": [113, 131, 133, 141, 149, 150, 155, 160, 180, 190, 198, 203, 215, 216, 238, 259, 262, 263, 264, 265, 271, 277, 278, 408, 415, 476, 477, 555, 556, 696, 698, 700, 744, 756, 764, 773, 774, 775, 777, 779, 781, 782, 786, 790, 795, 796, 797, 798, 799, 803, 804, 805, 807, 833, 835, 841, 853, 864, 876], "layout_path": 113, "__file__": [113, 121, 169, 170, 171], "layout_nam": 113, "custom_layout": 113, "lout": [113, 169, 311, 324, 325, 336, 876], "coreg": [113, 133, 134, 156, 157, 158, 159, 310, 467, 470, 759, 851, 858, 866, 876], "estimate_head_mri_t": [113, 133, 134, 866, 876], "sample_ecog": [113, 133], "apply_tran": [113, 133, 134, 155, 159, 181, 310, 876], "conjunct": [113, 224, 257, 262, 410, 864], "xy_pt": [113, 135], "beta_pow": 113, "fig2": [113, 150, 169], "coolwarm": 113, "cbar": [113, 125, 145, 194, 224, 762], "set_axis_off": [113, 135, 171], "bbox_inch": [113, 876], "tight": [113, 150, 160, 193, 264, 265, 719, 777, 779, 876], "669": [113, 229], "mous": [113, 190, 215, 259, 260, 262, 263, 264, 265, 271, 408, 415, 467, 476, 477, 555, 556, 696, 698, 700, 744, 757, 759, 771, 773, 774, 775, 777, 778, 779, 782, 786, 795, 797, 798, 803, 853, 876], "imread": [113, 171], "plot_click": [113, 744], "to_layout": [113, 744], "got": [113, 143, 170, 198, 203, 221, 838, 876], "read_layout": [113, 169, 311, 866, 876], "3d_to_2d": [113, 128], "scalarmapp": 114, "low_contrast": [114, 124, 133, 134, 180, 189, 269, 270, 273, 276, 277, 278, 743, 801, 806], "rh_data": [114, 174, 273, 276], "rh_vertno": [114, 174, 273, 276, 659], "recon": [114, 134, 154, 159, 307, 364, 542, 816, 876], "brodmann": 114, "ba44": 114, "add_head": [114, 155, 189, 743, 876], "seghead": [114, 155, 156, 157, 160, 171, 175, 181, 182, 254, 260, 743, 759, 771], "read_tran": [114, 116, 155, 159, 177, 190, 275, 459, 661, 830, 866, 876], "add_sensor": [114, 133, 135, 189, 209, 743, 876], "role": [114, 164, 169, 176, 185, 186, 259, 260, 264, 266, 267, 273, 362, 522, 523, 534, 605, 614, 616, 629, 644, 743, 752, 759, 771, 811, 835, 857], "sample_audvis_set1": 114, "ylorrd": 114, "add_dipol": [114, 743, 876], "1e8": 114, "static": [114, 133, 179, 208, 213, 242, 254, 261, 385, 732, 733, 833, 861, 876], "add_ax": [114, 125, 145], "embed": [115, 155, 171, 199, 200, 272, 835, 842, 876], "simplic": [115, 176, 194, 200, 224, 228, 855, 876], "instal": [115, 133, 134, 135, 145, 154, 160, 170, 180, 254, 262, 263, 264, 265, 280, 301, 305, 336, 382, 385, 407, 410, 414, 419, 446, 447, 448, 476, 477, 699, 835, 843, 855, 856, 859, 876], "order_func": 115, "spectral_embed": 115, "rbf_kernel": 115, "this_data": 115, "good_pick": 115, "bad_pick": [115, 210], "plt_time": 115, "overlay_tim": [115, 126, 262, 263, 774, 876], "renaud": [115, 242], "keriven": [115, 242], "maureen": [115, 242], "clerc": [115, 242], "1051": [115, 207, 242], "1061": [115, 242], "2037139": [115, 242], "channel_epochs_imag": [115, 128], "135": [116, 123, 150, 157, 168, 204, 205, 206, 207, 224, 228, 242, 275, 858], "eeg_on_scalp": [116, 128], "upon": [117, 143, 156, 169, 171, 262, 263, 272, 414, 476, 477, 744, 760, 813, 835, 841, 857, 876], "hosaka": [117, 242, 760, 876], "flow": [117, 177, 242, 760, 876], "underneath": [117, 760, 876], "poor": [117, 197, 200, 209, 760, 876], "man": [117, 150, 171, 242, 760], "hidehiro": [117, 242, 760], "electrocardiologi": [117, 242, 760], "1976": [117, 242, 760], "s0022": [117, 242, 760], "0736": [117, 242, 760], "80041": [117, 242, 760], "sheraz": [117, 124, 127, 242, 571, 874, 876], "khan": [117, 124, 127, 242, 571, 874, 876], "khansheraz": 117, "plot_arrowmap": [117, 149, 866, 876], "evoked_mag": 117, "evoked_grad": 117, "topoplot": [117, 143, 169, 203, 239, 760, 763, 876], "max_time_idx": 117, "latitud": [117, 760], "longitud": [117, 159, 760], "radial": [117, 157, 529, 530, 540, 637, 760], "cartesian": [117, 174, 177, 760, 858, 861], "info_from": [117, 760, 876], "info_to": [117, 760], "raw_ctf": 117, "raw_ctf_info": 117, "evoked_arrowmap": [117, 128], "engeman": 118, "miko\u0142aj": [118, 863, 876], "magnuski": [118, 863, 876], "mmagnuski": [118, 876], "swp": [118, 253, 863], "pl": 118, "20m": 118, "regularli": [118, 165, 167], "multilin": [118, 876], "all_tim": 118, "rm": [118, 149, 150, 187, 221, 259, 262, 263, 264, 265, 273, 408, 415, 476, 477, 531, 555, 556, 696, 777, 781, 782, 786, 798, 805, 858, 876], "drawn": [118, 149, 216, 224, 259, 262, 263, 264, 265, 270, 271, 276, 278, 408, 415, 476, 477, 555, 556, 570, 648, 649, 696, 698, 700, 760, 761, 766, 767, 775, 776, 779, 781, 782, 786, 795, 797, 798, 799, 803, 805, 806, 876], "spectral_r": 118, "circl": [118, 133, 160, 169, 220, 259, 262, 263, 264, 265, 271, 310, 408, 415, 476, 477, 555, 556, 570, 696, 698, 700, 748, 760, 765, 767, 775, 777, 779, 782, 783, 786, 793, 795, 797, 798, 799, 803, 805, 831, 835, 876], "extrapol": [118, 149, 209, 259, 262, 263, 264, 265, 271, 408, 415, 476, 477, 555, 556, 570, 696, 698, 700, 760, 775, 782, 786, 795, 798, 803, 805, 876], "box": [118, 133, 160, 188, 259, 262, 263, 264, 265, 271, 311, 319, 336, 408, 415, 476, 477, 555, 556, 570, 696, 698, 700, 739, 760, 775, 777, 779, 781, 782, 786, 795, 798, 803, 805, 841, 876], "stretch": [118, 199, 743], "beyond": [118, 143, 165, 189, 234, 259, 262, 263, 264, 265, 271, 408, 415, 476, 477, 509, 555, 556, 570, 691, 696, 698, 700, 739, 760, 775, 782, 786, 795, 796, 798, 803, 805], "axes_row": 118, "extr": 118, "margin": [118, 125, 699, 766, 767], "exceed": [118, 183, 205, 208, 226, 262, 556, 582, 699], "mask_param": [118, 229, 259, 262, 263, 264, 265, 408, 415, 476, 477, 555, 696, 698, 700, 760, 775, 782, 798, 803, 805], "markers": [118, 229, 259, 262, 263, 264, 265, 408, 415, 476, 477, 555, 696, 698, 700, 760, 775, 782, 798, 803, 805], "markerfacecolor": [118, 259, 262, 263, 264, 265, 408, 415, 476, 477, 555, 696, 698, 700, 760, 775, 782, 798, 803, 805], "_time": 118, "significant_channel": 118, "_channel": 118, "in1d": 118, "_ch": 118, "perhap": [118, 200, 205, 213, 224], "imped": [118, 200, 242, 876], "image_interp": [118, 259, 262, 263, 264, 265, 271, 408, 415, 476, 477, 555, 556, 570, 696, 698, 700, 760, 775, 782, 786, 795, 798, 803, 805, 876], "cubic": [118, 259, 262, 263, 264, 265, 271, 408, 415, 476, 477, 555, 556, 570, 696, 698, 700, 743, 760, 775, 782, 786, 795, 798, 803, 805, 876], "smoothest": 118, "voronoi": [118, 259, 262, 263, 264, 265, 271, 408, 415, 476, 477, 555, 556, 570, 696, 698, 700, 760, 775, 782, 786, 795, 798, 803, 805, 876], "debug": [118, 161, 170, 254, 375, 376, 377, 380, 381, 388, 391, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 643, 695, 738, 741, 835, 855], "unalt": [118, 359], "properli": [118, 133, 135, 154, 155, 160, 167, 182, 188, 198, 204, 205, 213, 214, 232, 234, 242, 254, 257, 260, 261, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 301, 305, 345, 358, 410, 414, 419, 446, 447, 448, 476, 477, 572, 573, 641, 661, 696, 699, 739, 783, 809, 833, 835, 838, 840, 851, 876], "animate_topomap": [118, 264, 265, 876], "frame_r": [118, 264, 265], "blit": [118, 264, 265], "099": [118, 128], "evoked_topomap": [118, 128], "excel": [119, 149, 159, 200, 221], "diagnost": [119, 164, 171, 203, 208, 211], "rare": [119, 272, 857, 876], "80e": [119, 209, 858], "uncom": 119, "fewer": [119, 143, 150, 160, 169, 171, 197, 200, 214, 224, 234, 262, 263, 264, 265, 272, 410, 414, 419, 420, 444, 446, 447, 476, 477, 577, 581, 724, 727, 743, 779, 876], "007": [119, 126, 139, 140, 141, 144, 148, 165, 168, 199, 205, 221, 225, 242, 280, 588], "008": [119, 126, 139, 144, 148, 150, 165, 168, 208, 221, 242, 584], "method_param": [119, 178, 352, 357, 523, 524, 525, 526, 527, 529, 530, 536, 539, 540], "diagonal_fix": [119, 161, 352, 876], "return_estim": [119, 161, 352, 357, 855], "likelihood": [119, 150, 161, 176, 242, 259, 264, 265, 352, 357, 556, 783, 855, 858], "loglik": [119, 259], "1891": 119, "unseen": [119, 161, 176, 352, 855], "descend": [119, 161, 176, 876], "1629": 119, "1659": 119, "813": [119, 194, 229], "1802": [119, 179, 198, 242], "6663146376516": 119, "8130475750986": 119, "10315358209": 119, "647": [119, 128, 194, 229], "evoked_whiten": [119, 128], "read_raw_artemis123": [121, 187, 482, 858, 866, 876], "read_raw_bti": [121, 184, 187, 858, 866, 876], "read_raw_kit": [121, 170, 187, 482, 858, 866, 876], "set_3d_titl": [121, 123, 149, 866, 876], "root_path": 121, "parent": [121, 149, 160, 169, 170, 171, 876], "spm_ctf_meg_example_faces1_3d": 121, "324474": 121, "bti_path": 121, "test_pdf_linux": 121, "test_config_linux": 121, "test_hs_linux": 121, "magn": [121, 187, 858], "3600wh": 121, "pdf": [121, 184, 193, 242, 254, 385, 471, 487, 859], "critic": [121, 150, 159, 170, 177, 184, 200, 208, 224, 226, 229, 584, 643, 741, 852, 862], "mne_create_comp_data": [121, 184, 254, 487], "print_tabl": [121, 184], "routin": [121, 184, 201, 451, 556, 584, 864, 875, 876], "magnes_3600wh": [121, 184], "kit_path": 121, "sqd": [121, 170, 254, 479, 500, 610, 858], "artemis_data_2017": 121, "10h": 121, "38m": 121, "59s_phantom_1k_hpi_1": 121, "artemis123_mneloc": 121, "1863": 121, "hpifit": [121, 207, 254], "ok": [121, 187, 207, 258, 268], "997": [121, 200, 208, 229, 242], "cardin": [121, 165, 168, 213, 219, 303, 304, 333, 427, 831, 861, 876], "573": [121, 128, 207, 229], "meg_sensor": [121, 128, 876], "create_3d_figur": [122, 155, 159, 177, 745, 866], "mne_helmet": [122, 128], "ship": [123, 169, 224, 262, 263, 264, 265, 267, 320, 321, 326, 327, 460, 476, 477, 847, 858, 876], "joan": [123, 136, 158, 876], "massich": [123, 136, 158, 876], "mailsik": [123, 136, 158], "op": [123, 133, 158, 183, 184, 207, 262, 263, 264, 265, 476, 477], "get_builtin_montag": [123, 169, 262, 263, 264, 265, 267, 326, 460, 476, 477, 866, 876], "against": [123, 139, 140, 148, 203, 213, 242, 653, 658, 835, 876], "current_montag": 123, "fiduci": [123, 133, 135, 155, 158, 159, 169, 187, 188, 310, 313, 314, 323, 333, 334, 363, 364, 365, 384, 480, 483, 500, 508, 610, 635, 759, 831, 851, 858, 861, 876], "mri_fiduci": [123, 155, 158, 182, 759, 876], "montage_sgskip": [123, 128], "hcp": [124, 242, 385, 842, 864, 876], "mmp1": [124, 242, 385, 876], "448": [124, 151, 153, 170, 207, 224, 229, 275, 876], "mmp": [124, 385], "Of": [124, 141, 197, 204, 205, 221, 589, 590], "acknowledg": [124, 200], "wu": 124, "minn": 124, "publicli": [124, 165, 400, 401, 852, 857], "get_brain_class": [124, 154, 866], "fetch_hcp_mmp_parcel": [124, 180, 866, 876], "fetch_aparc_sub_parcel": [124, 866], "hcpmmp1": 124, "add_annot": [124, 154, 180, 743], "aud_label": 124, "l_a1_roi": 124, "hcpmmp1_combin": [124, 180, 385], "aparc_sub": 124, "matthew": [124, 179, 242, 385], "glasser": [124, 242, 385], "timothi": [124, 242, 385, 876], "coalson": [124, 242, 385], "emma": [124, 242, 385, 556], "robinson": [124, 179, 242, 385], "hacker": [124, 242, 385], "harwel": [124, 242, 385], "essa": [124, 242, 385], "yacoub": [124, 242, 385], "kamil": [124, 242, 385], "ugurbil": [124, 242, 385], "jesper": [124, 242, 385, 876], "andersson": [124, 242, 385], "beckmann": [124, 242, 385], "jenkinson": [124, 242, 385], "stephen": [124, 179, 193, 224, 225, 242, 385, 414, 556, 683, 684, 686, 687, 725, 728, 876], "essen": [124, 242, 385], "modal": [124, 188, 228, 234, 242, 385], "cerebr": [124, 242, 385], "536": [124, 193, 196, 220, 223, 229, 242, 385], "nature18933": [124, 242, 385], "javeria": [124, 242], "hashmi": [124, 242], "fahimeh": [124, 242, 876], "mamashli": [124, 242, 876], "konstantino": [124, 242], "michmizo": [124, 242], "manfr": [124, 242, 876], "kitzbichl": [124, 242, 876], "santosh": [124, 242], "ganesan": [124, 242], "keri": [124, 242], "lee": [124, 133, 242, 268, 273, 556, 582, 876], "garel": [124, 242], "susan": [124, 242, 649], "whitfield": [124, 242], "gabri": [124, 242], "randi": [124, 242, 523], "gollub": [124, 242], "jian": [124, 242], "kong": [124, 242], "kunjan": [124, 242], "rana": [124, 242], "kenet": [124, 242], "matur": [124, 242], "trajectori": [124, 242], "network": [124, 193, 242, 295, 414, 556, 846], "mediat": [124, 242, 725, 728], "018": [124, 126, 139, 148, 168, 221, 242, 571], "mccloi": [125, 207, 863, 876], "dan": [125, 207, 876], "mpl_toolkit": [125, 169, 204, 224, 229, 767], "axes_grid1": [125, 229, 767], "make_axes_locat": [125, 229], "imagegrid": 125, "inset_loc": [125, 767], "suppos": [125, 167, 204, 756, 858], "max_t": 125, "17909658": 125, "18448887": 125, "83197989": 125, "screenshot": [125, 171, 743, 813, 876], "pixel": [125, 141, 171, 224, 259, 260, 262, 263, 264, 265, 269, 270, 271, 272, 273, 276, 277, 278, 408, 415, 467, 476, 477, 555, 556, 696, 698, 700, 743, 759, 760, 771, 775, 782, 786, 795, 798, 801, 803, 805, 806, 831, 876], "integ": [125, 139, 141, 142, 144, 148, 149, 150, 159, 165, 167, 168, 170, 174, 188, 201, 203, 213, 214, 219, 229, 254, 257, 259, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 281, 295, 296, 308, 311, 312, 319, 322, 325, 327, 352, 356, 357, 367, 368, 369, 408, 410, 415, 424, 425, 429, 430, 437, 446, 447, 450, 451, 452, 466, 471, 473, 474, 476, 477, 508, 532, 533, 534, 555, 556, 558, 570, 571, 572, 573, 578, 581, 590, 592, 599, 608, 610, 614, 644, 646, 664, 682, 691, 696, 698, 699, 700, 704, 705, 706, 707, 709, 727, 730, 760, 767, 773, 774, 775, 776, 777, 779, 780, 781, 782, 783, 786, 787, 788, 790, 792, 794, 795, 796, 797, 798, 803, 805, 831, 858, 861, 876], "nonwhite_pix": 125, "nonwhite_row": 125, "nonwhite_col": 125, "cropped_screenshot": 125, "nrows_ncol": 125, "axes_pad": 125, "updat": [125, 145, 169, 171, 178, 188, 198, 200, 205, 208, 210, 213, 216, 239, 254, 259, 262, 263, 264, 265, 267, 271, 286, 300, 363, 368, 370, 375, 376, 377, 378, 380, 381, 383, 384, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 443, 460, 471, 476, 477, 496, 522, 557, 636, 640, 731, 743, 833, 835, 852, 857, 861, 876], "rcparam": [125, 136, 200, 876], "labels": 125, "titles": 125, "medium": [125, 155, 182, 254, 306, 864, 876], "height": [125, 254, 267, 269, 270, 273, 276, 277, 278, 307, 311, 319, 324, 467, 743, 752, 801, 806, 831, 876], "gridspec": [125, 264, 265, 782], "keyword": [125, 148, 154, 168, 171, 190, 200, 208, 238, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 301, 302, 303, 304, 305, 306, 307, 310, 312, 314, 315, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 411, 413, 414, 418, 419, 421, 424, 425, 427, 429, 433, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 458, 459, 463, 464, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516, 518, 519, 520, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 549, 552, 556, 558, 559, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 579, 580, 581, 582, 584, 585, 587, 588, 591, 592, 593, 596, 597, 598, 599, 603, 604, 605, 606, 607, 608, 610, 611, 612, 614, 615, 616, 618, 619, 620, 621, 622, 626, 627, 628, 629, 630, 631, 632, 633, 635, 636, 637, 638, 641, 644, 645, 647, 648, 649, 650, 660, 661, 664, 666, 667, 668, 669, 670, 671, 672, 682, 683, 684, 685, 686, 687, 691, 692, 693, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 714, 715, 718, 719, 723, 724, 726, 727, 728, 729, 732, 733, 738, 741, 742, 743, 744, 751, 759, 760, 765, 768, 771, 775, 776, 777, 778, 783, 786, 787, 788, 793, 794, 796, 797, 799, 800, 801, 802, 806, 807, 808, 812, 816, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 835, 851, 876], "subplot2grid": [125, 193], "inch": [125, 259, 262, 263, 264, 265, 271, 408, 415, 476, 477, 555, 556, 696, 698, 700, 775, 782, 786, 795, 798, 803, 805], "height_ratio": 125, "rowspan": 125, "775": [125, 194, 229], "bot": 125, "evoked_idx": 125, "brain_idx": 125, "peak_lin": 125, "66ccee": [125, 159, 712, 722], "columnspac": 125, "labelspac": 125, "fancybox": 125, "handlelength": 125, "n_ave": 125, "spine": [125, 180, 756, 767], "set_axisbelow": 125, "tick": [125, 239, 259, 262, 263, 264, 265, 271, 408, 415, 476, 477, 555, 556, 570, 696, 698, 700, 760, 767, 775, 779, 782, 786, 795, 798, 803, 804, 805, 876], "append_ax": [125, 229], "plot_brain_colorbar": [125, 866, 876], "get_posit": [125, 135, 310, 876], "ymax": [125, 201, 229, 234], "transfigur": 125, "fontweight": [125, 143, 208], "bold": [125, 143, 150, 198, 201, 204, 205, 206, 208, 209, 224], "va": [125, 159], "panel": [125, 133, 150, 155, 161, 169, 179, 239, 254, 264, 265, 467, 556, 743, 783, 787, 855], "outlin": [125, 159, 171, 175, 200, 239, 259, 260, 262, 263, 264, 265, 271, 310, 408, 415, 476, 477, 555, 556, 570, 599, 696, 698, 700, 760, 767, 771, 775, 777, 779, 780, 782, 783, 786, 793, 795, 797, 798, 799, 803, 805, 876], "familiar": [125, 143, 197, 837, 852], "to_plot": 125, "return_tim": [125, 213, 476, 477], "\u00b5v": [125, 141, 143, 144, 148, 150, 165, 199, 205, 225, 254, 259, 262, 263, 264, 265, 269, 270, 271, 272, 273, 276, 277, 278, 408, 415, 476, 477, 512, 555, 556, 570, 696, 698, 700, 760, 773, 774, 775, 777, 779, 782, 786, 795, 796, 798, 803, 804, 805, 831, 858, 876], "1e6": [125, 140, 148, 150, 259, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 352, 356, 357, 408, 415, 417, 476, 477, 774, 777, 779, 781, 782, 804], "inset_ax": [125, 767], "plot_sensor": [125, 141, 150, 169, 181, 189, 216, 262, 263, 264, 265, 476, 477, 866, 876], "server": [125, 145, 165, 171, 201, 203, 213, 809, 839], "axin": 125, "edit": [125, 150, 168, 170, 198, 200, 203, 215, 242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 678, 696, 699, 764, 812, 835, 839, 855, 876], "stai": [125, 143, 200, 201, 219, 221, 262, 263, 264, 265, 476, 477, 478, 645, 831, 835], "intact": [125, 197, 213], "That": [125, 141, 143, 160, 161, 200, 229, 264, 265, 295, 296, 352, 356, 357, 367, 368, 369, 408, 415, 451, 452, 471, 473, 474, 534, 783, 858], "nice": [125, 143, 149, 168, 170, 213, 224, 239, 835, 858, 876], "But": [125, 142, 143, 171, 183, 200, 208, 219, 224, 232, 239, 556, 853], "big": [125, 187, 203, 417, 685, 853, 876], "tast": 125, "luckili": 125, "facet": [125, 159], "set_": 125, "get_children": 125, "line2d": 125, "0x7f1d79cbc9d0": 125, "0x7f1d79d75960": 125, "0x7f1d78848190": 125, "0x7f1d78848670": 125, "pathcollect": 125, "0x7f1ccd17e890": 125, "0x7f1ccd17c850": 125, "0x7f1ccd17e230": 125, "0x7f1ccd17c190": 125, "0x7f1ccd17ca60": 125, "0x7f1ccd17ff40": 125, "yaxi": [125, 205], "0x7f1ccd17fc70": 125, "rectangl": [125, 215, 696, 760], "0x7f1ced1167a0": 125, "certainli": 125, "artistlist": 125, "sensor_dot": 125, "shrink": [125, 133, 198, 224, 225, 581, 855], "set_siz": 125, "787": [125, 128, 194], "publication_figur": [125, 128], "notat": [126, 204, 228, 234, 858], "odd": [126, 200, 322, 407, 858], "make_1020_channel_select": [126, 225, 866, 876], "test_raw": [126, 167, 254], "read_raw_eeglab": [126, 167, 188, 482, 839, 858, 862, 866, 876], "fpz": [126, 169, 203, 259, 262, 263, 264, 265, 271, 310, 408, 415, 476, 477, 555, 556, 570, 696, 698, 700, 760, 767, 775, 777, 779, 782, 783, 786, 793, 795, 797, 798, 799, 803, 805, 876], "eog1": 126, "eog2": 126, "fc5": [126, 499], "t7": [126, 158, 169, 259, 262, 263, 264, 265, 271, 310, 408, 415, 476, 477, 499, 555, 556, 570, 696, 698, 700, 760, 767, 775, 777, 779, 782, 783, 786, 793, 795, 797, 798, 799, 803, 805, 876], "011": [126, 139, 148, 168, 200, 221, 242], "012": [126, 139, 148, 168, 216, 221], "cp5": [126, 499], "cp6": 126, "019": [126, 139, 148, 168, 206, 221, 242], "021": [126, 139, 140, 148, 165, 168, 221], "022": [126, 139, 148, 168, 183, 221], "023": [126, 139, 141, 148, 168, 221, 242], "024": [126, 139, 148, 168, 221, 223, 229, 242, 683, 684, 686, 687], "po7": [126, 239], "026": [126, 139, 148, 168, 221, 242], "poz": [126, 239], "028": [126, 139, 148, 168, 221, 242, 564, 725, 728], "029": [126, 139, 148, 168, 221, 242], "o2": [126, 158, 219, 239], "standard_1020": [126, 150, 158, 169, 219, 499], "fdt": [126, 167, 492, 608], "msec": [126, 150, 696], "new_ev": [126, 214, 434, 436, 521], "203125": 126, "midlin": [126, 133, 168, 169, 216, 225, 322], "12z": [126, 225], "group_bi": [126, 141, 225, 254, 262, 263, 264, 265, 476, 477, 773, 774, 779, 796, 876], "vline": [126, 264, 265, 767, 781, 876], "208": [126, 128, 168, 170, 187, 224, 229, 234, 236, 242], "roi_erpimage_by_rt": [126, 128], "66067": 127, "xscale": [127, 205, 262, 263, 264, 265, 476, 477, 698, 700, 797, 876], "wall": [127, 200, 201, 242, 683, 684], "shield": [127, 201, 210, 242, 262, 263, 264, 265, 267, 476, 477, 553, 584, 696, 698, 699, 700, 858], "review": [127, 150, 177, 202, 203, 242, 555, 561, 835, 857], "scientif": [127, 242, 839, 840, 860], "instrument": [127, 177, 197, 203, 242], "056101": [127, 242], "1063": [127, 208, 242, 567, 584], "4802845": [127, 242], "968": [127, 128, 229], "sensor_noise_level": [127, 128], "auto_examples_visu": 128, "topo_custom": [128, 131], "163": [128, 131, 168, 194, 224, 228, 229, 231, 275], "ssp_projs_sensitivity_map": [128, 129], "xhemi": [128, 132, 274, 358, 621], "topo_compare_condit": [128, 130], "467": [128, 130], "ecg_fnam": 129, "ssp_ecg_map": 129, "arg": [129, 228, 234, 254, 267, 275, 678, 835], "plot_evoked_topo": [130, 149, 209, 866, 876], "audio": [130, 174, 190, 194, 237, 242, 262, 263, 264, 265, 415, 476, 477, 698, 699, 700, 715], "nleft": 130, "iter_topographi": [131, 866, 876], "20hz": 131, "return_freq": [131, 136, 237, 238, 239, 698, 700, 876], "my_callback": 131, "ch_idx": [131, 207, 226, 238], "fig_facecolor": [131, 141, 237, 262, 263, 264, 265, 476, 477, 696, 698, 700, 756, 804], "axis_facecolor": [131, 237, 262, 263, 264, 265, 476, 477, 698, 700, 756], "axis_spinecolor": [131, 756], "on_pick": [131, 756], "gcf": 131, "stc_path": [132, 171], "fsaverage_sym": [132, 358], "left_right": [132, 358], "stc_xhemi": 132, "70314401": 132, "48867635": 132, "29876034": 132, "involv": [133, 134, 135, 155, 157, 159, 197, 200, 201, 204, 215, 365, 558, 857, 858], "implant": [133, 242, 588], "reson": [133, 242, 858], "tomographi": [133, 242, 523, 831, 858], "greater": [133, 143, 165, 198, 203, 224, 227, 262, 263, 274, 356, 449, 556, 581, 685, 699, 725, 728, 816, 876], "intens": [133, 142, 159, 180, 181, 189, 203, 264, 265, 269, 270, 273, 276, 277, 278, 280, 532, 533, 743, 778, 801, 806, 816, 831, 876], "dipi": [133, 170, 274, 695, 732, 733, 816, 834], "pip": [133, 134, 135, 145, 160, 833, 835, 837, 840, 843], "conda": [133, 134, 135, 160, 833, 834, 835, 837, 840, 843, 876], "cite": [133, 136, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 386, 447, 476, 477, 696, 699, 835, 852], "seeg": [133, 135, 137, 138, 164, 168, 213, 219, 262, 263, 264, 265, 267, 275, 277, 309, 310, 314, 364, 369, 371, 437, 441, 460, 476, 477, 482, 491, 552, 553, 554, 556, 626, 628, 641, 691, 696, 698, 699, 700, 743, 759, 765, 799, 831, 832, 842, 858, 876], "gui": [133, 156, 157, 159, 262, 263, 269, 270, 273, 276, 277, 278, 306, 476, 477, 556, 759, 773, 790, 796, 801, 806, 833, 835, 839, 841, 842, 849, 851, 853, 855, 866, 876], "set_3d_backend": [133, 814, 833, 866, 876], "pyvistaqt": [133, 170, 269, 273, 277, 695, 753, 801, 808, 814, 833, 834, 876], "anterior": [133, 159, 268, 322, 673, 831, 858, 876], "commissur": [133, 135, 310], "posterior": [133, 135, 155, 159, 268, 310, 322, 471, 673, 831, 876], "aka": [133, 162, 164, 189], "sample_seeg_t1": 133, "cursor": [133, 744, 876], "long": [133, 136, 139, 140, 145, 197, 200, 201, 203, 207, 214, 215, 219, 225, 232, 233, 260, 262, 263, 264, 265, 269, 270, 273, 274, 276, 277, 278, 352, 358, 476, 477, 526, 559, 564, 584, 696, 698, 699, 700, 743, 835, 838, 839, 851, 857, 864, 876], "menu": [133, 171, 215, 838, 841, 859], "prefer": [133, 141, 150, 169, 170, 188, 189, 200, 203, 204, 257, 262, 263, 264, 265, 358, 415, 437, 456, 476, 477, 556, 640, 698, 700, 797, 833, 835, 839, 841, 842, 854, 857, 858, 861], "pull": [133, 150, 204, 813, 831, 842, 857], "popup": 133, "Be": [133, 160, 213, 215, 264, 265, 780], "tkreg": 133, "until": [133, 141, 198, 199, 206, 209, 257, 260, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 467, 468, 475, 476, 477, 556, 559, 698, 700, 740, 743, 771, 773, 790, 796, 799, 835, 858], "crosshair": 133, "meet": [133, 200, 857], "pc": [133, 203], "transect": 133, "sample_seeg": [133, 134], "viewer": [133, 269, 270, 273, 276, 277, 278, 743, 801, 806, 831, 864, 876], "set_posit": [133, 264, 265, 782], "xytext": [133, 180], "arrowprop": [133, 180, 193], "headwidth": 133, "consum": [133, 201, 272, 566, 689, 876], "deform": [133, 159, 169, 242], "hour": [133, 154, 476, 477, 556, 790, 796], "plan": [133, 197, 198, 201, 206, 432, 833, 839, 857], "proce": [133, 150, 257, 262, 400, 556, 559, 566, 752, 855], "my_data_directori": 133, "subjid": 133, "defac": 133, "cw256": 133, "scan": [133, 154, 165, 175, 179, 182, 208, 267, 387, 581, 816, 836, 839, 842, 847, 861, 864], "anonym": [133, 155, 262, 263, 264, 265, 476, 477, 478, 855, 876], "orig_defac": 133, "publish": [133, 204, 242, 556, 853], "mne_bid": [133, 135, 170], "write_anat": 133, "hardli": [133, 858], "misalign": [133, 145, 177, 487, 876], "stereotact": [133, 262, 263, 264, 265, 476, 477, 553, 554, 696, 698, 699, 700, 858, 876], "anteriolater": 133, "thresh": [133, 573, 577, 593, 683, 684, 686, 687, 743, 816], "apply_orient": 133, "asarrai": [133, 159, 228], "dataobj": [133, 155, 159, 181], "axcodes2ornt": 133, "aff2axcod": [133, 159], "float32": 133, "quantil": [133, 417], "squeez": [133, 140, 228, 229, 234], "grai": [133, 143, 155, 159, 171, 198, 208, 214, 226, 227, 228, 229, 234, 268, 466, 556, 601, 743, 758, 759, 767, 786], "gist_heat": 133, "invert_yaxi": 133, "ct_orig": 133, "sample_seeg_ct": 133, "world": [133, 155, 159, 171, 181, 200, 215, 226, 274, 451], "ct_resampl": 133, "moving_affin": 133, "static_affin": 133, "unalign": 133, "shear": [133, 733], "reg_affin": [133, 732, 733, 816], "compute_volume_registr": [133, 732, 866, 876], "4x4": [133, 275, 499, 647, 648, 649, 661], "99270756": 133, "03243313": 133, "11610254": 133, "094156": 133, "04374389": 133, "99439665": 133, "09623816": 133, "58320673": 133, "11233068": 133, "10061512": 133, "98856381": 133, "45551601": 133, "cval": [133, 732, 876], "ct_align": 133, "apply_volume_registr": [133, 866, 876], "failur": [133, 835, 876], "heat": 133, "navig": [133, 160, 213, 262, 263, 272, 277, 278, 476, 477, 773, 796, 807, 833, 839, 859], "toolbar": [133, 160, 808], "lta": [133, 620, 876], "realli": [133, 174], "rerun": 133, "manual_reg_affine_vox": 133, "read_lta": [133, 866, 876], "sample_seeg_ct_aligned_manu": 133, "manual_reg_affin": 133, "starting_affin": [133, 733, 876], "hyperintens": [133, 816], "hypointens": [133, 816], "brighter": [133, 234], "subcutan": 133, "fat": 133, "ct_data": 133, "get_fdata": 133, "t1_data": 133, "bright": 133, "175": [133, 141, 149, 168, 228, 229, 242, 556], "halfwai": [133, 761], "talairach": [133, 134, 159, 179, 180, 277, 278, 364, 365, 628, 807, 855, 858, 876], "get_mni_fiduci": [133, 159, 310, 364, 759, 866, 876], "subj_tran": 133, "nearbi": [133, 134, 135, 193, 197, 205, 208, 220, 242, 259, 262, 263, 264, 265, 271, 408, 415, 476, 477, 555, 556, 570, 584, 691, 696, 698, 700, 760, 775, 782, 786, 795, 798, 803, 805, 816], "video": [133, 155, 160, 860, 876], "associ": [133, 136, 143, 167, 171, 190, 197, 204, 205, 207, 224, 226, 242, 256, 257, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 416, 459, 476, 477, 518, 608, 610, 646, 678, 683, 688, 696, 699, 765, 773, 774, 776, 777, 779, 794, 795, 833, 835, 858, 861, 876], "sidebar": 133, "scroll": [133, 141, 165, 215, 216, 260, 262, 263, 476, 477, 556, 771, 773, 790, 796, 812, 876], "arrow": [133, 155, 159, 160, 177, 182, 197, 201, 204, 216, 259, 260, 262, 263, 264, 265, 270, 271, 276, 277, 278, 408, 415, 476, 477, 555, 556, 696, 698, 700, 743, 760, 771, 773, 774, 775, 779, 782, 785, 786, 795, 796, 798, 803, 806, 807, 858, 876], "snap": [133, 160, 876], "sample_seeg_ieeg": [133, 134], "locate_ieeg": [133, 866, 876], "1310640": [133, 134], "1370605": [133, 134], "411": [133, 134, 207, 229, 242, 352], "1371": [133, 134, 156, 194, 237, 242, 262, 263, 264, 265, 476, 477, 698, 700, 708, 714], "t1_ecog": 133, "ct_orig_ecog": 133, "sample_ecog_ct": 133, "99982382": 133, "00414586": 133, "01830679": 133, "15413965": 133, "00549597": 133, "99721885": 133, "07432601": 133, "54316131": 133, "01794773": 133, "07441352": 133, "99706595": 133, "84162514": 133, "ct_aligned_ecog": 133, "raw_ecog": 133, "previous": [133, 148, 169, 202, 203, 254, 288, 295, 296, 634, 743, 876], "subj_trans_ecog": 133, "3024": [133, 318, 476, 858], "dura": [133, 855], "pressur": [133, 581], "craniotomi": [133, 581], "watershed_bem": [133, 157, 581, 842, 855, 858, 876], "flash_bem": [133, 157, 581, 842, 858, 876], "modif": [133, 189, 234, 328, 371, 842, 876], "view_kwarg": [133, 156, 159], "ieeg": [133, 135, 864, 865, 866, 876], "project_sensors_onto_brain": [133, 866, 876], "cvs_avg35_inmni152": 133, "subject_brain": 133, "template_brain": 133, "regist": [133, 254, 305, 732, 733, 816, 831, 857, 858], "sdr_morph": [133, 274, 732, 733, 816], "subject_brain_sdr": 133, "appl": [133, 838], "had": [133, 141, 150, 166, 167, 174, 180, 199, 200, 201, 204, 205, 216, 237, 239, 262, 263, 401, 431, 575, 614, 699, 858, 876], "montage_warp": [133, 816], "elec_imag": 133, "warped_elec_imag": 133, "warp_montage_volum": [133, 866, 876], "subjects_dir_from": [133, 816], "subjects_dir_to": [133, 816], "dark2": 133, "degrad": 133, "inaccur": [133, 161, 213, 259, 262, 263, 264, 265, 271, 352, 408, 415, 476, 477, 555, 556, 570, 696, 698, 700, 760, 775, 782, 786, 795, 798, 803, 805, 851, 858], "add_estimated_fiduci": [133, 310, 876], "template_tran": 133, "compute_native_head_t": [133, 134, 158, 181, 310, 866, 876], "recomput": [133, 203, 206, 229, 449, 556, 582, 636, 876], "behind": [133, 155, 170, 193, 198, 203, 467, 762, 853], "scene": [133, 155, 159, 170, 193, 242, 254, 264, 265, 269, 270, 273, 276, 277, 278, 414, 467, 743, 749, 750, 752, 759, 778, 801, 806, 810, 811, 813, 833, 853, 876], "brittani": [133, 242], "stedelin": [133, 242], "alessandra": [133, 242], "mantovani": [133, 242], "ahm": [133, 242], "raslan": [133, 242], "nicol": [133, 242, 680, 876], "swann": [133, 242], "3897": [133, 242], "2022": [133, 168, 170, 179, 210, 242, 243, 852], "21105": [133, 242], "joss": [133, 242], "03897": [133, 242], "liberti": [133, 135, 242, 876], "hamilton": [133, 135, 242, 876], "morgan": [133, 200, 242], "edward": [133, 242], "semi": [133, 203, 242, 570, 876], "neuroinformat": [133, 242], "octob": [133, 242, 656], "fninf": [133, 242], "00062": [133, 242], "344": [133, 138, 143, 168], "1280": [133, 254, 407, 513], "10_ieeg_loc": [133, 138], "stereoelectroencephalographi": [134, 852], "xfm": [134, 277, 278, 365, 628, 807, 858, 876], "li": [134, 135, 159, 171, 206, 242, 858, 863, 876], "adam2392": [134, 135], "fixat": 134, "isi": [134, 190], "mni_tal": [134, 135, 310, 323], "this_subject_dir": 134, "head_mri_t": 134, "mri_mni_t": [134, 628], "read_talxfm": [134, 159, 866], "taliarach": 134, "fro": [134, 452, 731], "rostral": [134, 743], "warp": [134, 155, 158, 242, 816, 852, 876], "intracrani": [134, 137, 138, 164, 242, 267, 310, 314, 364, 365, 460, 468, 476, 477, 482, 581, 732, 733, 743, 808, 816, 851, 852, 864, 865, 876], "contact": [134, 137, 138, 164, 197, 267, 310, 314, 330, 364, 365, 468, 476, 482, 581, 732, 733, 743, 808, 816, 835, 852, 876], "combine_transform": 134, "atla": [134, 180, 242, 254, 260, 269, 270, 273, 275, 276, 277, 278, 307, 442, 511, 645, 831, 852, 855, 858, 864, 876], "get_montage_volume_label": [134, 743, 866, 876], "lami": [134, 468], "lttr": 134, "isdigit": 134, "lpm": 134, "lsma": 134, "elec": [134, 225], "plot_channel_labels_circl": [134, 866, 876], "lpcn": 134, "rahp": 134, "lpli": 134, "lstg": 134, "lpit": 134, "lofc": 134, "lent": 134, "rphp": 134, "lbri": 134, "lacn": 134, "ltpo": 134, "lphg": 134, "ctx": 134, "putamen": 134, "add_volume_label": [134, 180, 743, 876], "heatmap": [134, 208], "lfp": 134, "stc_near_sensor": [134, 135, 866, 876], "Its": [134, 207, 858], "view_layout": [134, 179, 269, 270, 273, 276, 277, 278, 743, 801, 806], "sagitt": [134, 159, 179, 260, 743, 761, 771], "m4": 134, "sai": [134, 135, 200, 201, 204, 206, 213, 219, 226, 229, 739, 835, 841, 851, 861], "041": [134, 138, 139, 141, 148, 168, 221], "20_seeg": [134, 138], "epilepsi": [135, 876], "seizur": [135, 876], "complementari": [135, 199, 864], "libertyhamilton": 135, "bidspath": 135, "read_raw_bid": 135, "bids_root": 135, "epilepsy_ecog": [135, 866, 876], "bids_path": 135, "pt1": 135, "session": [135, 139, 141, 148, 149, 165, 170, 171, 198, 208, 210, 215, 262, 263, 373, 374, 476, 477, 556, 773, 790, 796, 804, 833, 851, 855, 859, 876], "presurgeri": 135, "ictal": 135, "datatyp": [135, 876], "vhdr": [135, 169, 239, 441, 476, 477, 602, 852, 858, 876], "trans_bandwidth": [135, 200, 444, 447, 476, 477], "add_mni_fiduci": [135, 310, 876], "epoch_length": 135, "269079": 135, "2201": 135, "ad1": 135, "att1": 135, "ast1": 135, "g16": 135, "slt1": 135, "sensor_color": [135, 759], "gamma_power_t": 135, "gamma_info": 135, "gamma_power_at_15": 135, "rgba": [135, 268, 269, 270, 273, 276, 277, 278, 743, 758, 762, 801, 806, 807, 876], "get_cmap": 135, "tolist": 135, "funcanim": [135, 264, 265], "gamma_pow": 135, "x_line": 135, "epileptiform": 135, "progress": [135, 150, 164, 199, 242, 411, 418, 835, 876], "posteriorli": 135, "becom": [135, 140, 181, 199, 200, 202, 203, 208, 210, 232, 233, 234, 262, 263, 264, 265, 598, 764, 779, 835, 843, 857, 858, 876], "xyz_pt": 135, "vmid": 135, "intra": [135, 667], "4932": 135, "594": [135, 138], "30_ecog": [135, 138], "toi": [136, 224, 864], "answer": [136, 205, 229, 239, 835, 855], "question": [136, 140, 208, 239, 835, 838, 854, 856], "alic": 136, "tackl": 136, "chambon": [136, 242, 876], "stan": 136, "sleep_physionet": [136, 852, 866, 876], "fetch_data": [136, 852, 866, 876], "randomforestclassifi": 136, "accuracy_scor": 136, "functiontransform": 136, "ground": [136, 165, 205, 556, 794, 864], "truth": [136, 205, 556, 794], "expert": [136, 161, 835, 855, 857], "alice_fil": 136, "bob_fil": 136, "raw_train": 136, "marker": [136, 150, 167, 176, 187, 188, 193, 199, 204, 254, 259, 262, 263, 264, 265, 268, 269, 270, 271, 272, 273, 276, 277, 278, 280, 352, 353, 355, 357, 408, 411, 415, 418, 421, 424, 425, 451, 464, 466, 476, 477, 479, 500, 515, 518, 519, 529, 530, 539, 540, 555, 556, 561, 568, 569, 570, 610, 644, 647, 648, 649, 661, 683, 684, 685, 686, 687, 696, 698, 700, 701, 702, 703, 704, 705, 706, 714, 715, 723, 724, 725, 726, 727, 760, 775, 778, 782, 786, 795, 796, 797, 798, 802, 803, 805, 852, 876], "temp": [136, 267], "rectal": 136, "annot_train": 136, "read_annot": [136, 215, 743, 866, 876], "emit_warn": [136, 256, 476, 477, 585], "resp": [136, 168, 213, 262, 263, 264, 265, 272, 309, 476, 477, 491, 553, 696, 698, 699, 700, 773, 796, 858, 876], "physionet_sleep": 136, "sc4001e0": 136, "wake": 136, "rem": [136, 167], "abbrevi": [136, 174, 204, 743, 858, 876], "rapid": [136, 143, 193, 200, 242, 414], "awak": 136, "night": [136, 400, 852], "imbal": [136, 228, 566, 567, 575, 584, 595], "trim": [136, 262, 263], "occurr": [136, 143, 197, 432, 434], "annotation_desc_2_event_id": 136, "redefin": 136, "events_train": 136, "chunk_dur": [136, 167, 437, 876], "stage_color": 136, "prop_cycl": 136, "by_kei": 136, "841": [136, 229], "188": [136, 168, 183, 199, 212, 224, 229], "raw_test": 136, "annot_test": 136, "events_test": 136, "epochs_test": 136, "sc4011e0": 136, "1103": [136, 177, 242], "562": [136, 207, 229], "signatur": [136, 198, 228, 411, 418, 425, 835, 853, 876], "ci": [136, 145, 200, 209, 224, 237, 556, 675, 698, 700, 767, 788, 835, 876], "\u00b5v\u00b2": 136, "eeg_power_band": 136, "compat": [136, 143, 170, 175, 255, 262, 263, 264, 265, 318, 360, 369, 383, 391, 414, 416, 419, 421, 422, 423, 448, 467, 476, 477, 529, 556, 698, 700, 773, 775, 796, 797, 808, 833, 841, 843, 855, 858, 861, 876], "psds_band": 136, "boilerpl": 136, "sckit": 136, "manner": [136, 150, 177, 224, 225, 257, 262, 876], "thank": [136, 139, 835, 864], "pipe": [136, 835, 852], "n_estim": [136, 411, 418], "acc": 136, "6745240253853128": 136, "ye": [136, 207, 208, 224, 264, 476, 496, 614, 855, 876], "databas": [136, 242, 386, 400, 401], "mathieu": [136, 242, 876], "galtier": [136, 242], "pierrick": [136, 242], "arnal": [136, 242], "gill": [136, 242], "wainrib": [136, 242], "architectur": [136, 242, 876], "rehabilit": [136, 242], "758": [136, 229, 242], "tnsre": [136, 242], "2813138": [136, 242], "kemp": [136, 242, 400, 401, 852], "zwinderman": [136, 242, 400, 401, 852], "tuk": [136, 242, 401, 852], "kamphuisen": [136, 242, 400, 401, 852], "obery\u00e9": [136, 242, 401, 852], "feedback": [136, 242, 401, 852, 876], "microcontinu": [136, 242, 401, 852], "1185": [136, 242, 401, 852], "1194": [136, 207, 242, 401, 852], "867928": [136, 242, 401, 852], "60_sleep": [136, 138], "sleep": [137, 138, 164, 167, 242, 256, 262, 267, 400, 401, 437, 476, 491, 602, 698, 776, 831, 855, 876], "stage": [137, 138, 143, 154, 155, 164, 171, 190, 198, 200, 203, 204, 209, 215, 242, 256, 257, 262, 263, 264, 265, 267, 274, 358, 400, 437, 476, 477, 491, 516, 570, 602, 607, 698, 733, 776, 831, 835, 842, 851, 852, 866, 876], "polysomnographi": [137, 138, 164, 256, 262, 267, 400, 401, 437, 476, 491, 602, 698, 776, 852, 876], "psg": [137, 138, 164, 256, 262, 267, 400, 437, 476, 491, 602, 698, 776, 852, 876], "auto_tutorials_clin": 138, "1279": 138, "cover": [139, 146, 148, 150, 152, 154, 161, 162, 164, 165, 167, 170, 171, 172, 185, 191, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 211, 213, 216, 217, 224, 235, 239, 240, 268, 272, 584, 592, 601, 680, 826, 835, 858, 859, 876], "possibli": [139, 148, 165, 171, 200, 226, 227, 264, 265, 274, 295, 296, 308, 352, 356, 357, 367, 368, 369, 383, 408, 415, 451, 452, 471, 473, 474, 534, 556, 574, 575, 678, 743, 783, 851, 876], "del_proj": [139, 148, 197, 204, 205, 206, 262, 263, 264, 265, 476, 477, 876], "plot_projs_topomap": [139, 141, 148, 205, 216, 262, 263, 264, 265, 476, 477, 794, 866, 876], "plot_psd_topomap": [139, 141, 237, 238, 262, 263, 264, 265, 476, 477, 876], "sample_data_fold": [139, 141, 144, 145, 154, 165, 166, 167, 168, 169, 197, 198, 199, 201, 203, 204, 205, 206, 208, 213, 214, 215, 216, 237], "sample_data_raw_fil": [139, 141, 144, 145, 165, 166, 167, 168, 197, 198, 199, 201, 203, 204, 205, 206, 208, 213, 214, 215, 216, 237], "sample_data_events_fil": [139, 144, 214], "events_from_fil": [139, 214], "bare": [139, 165], "299693": [139, 150], "699283": 139, "quot": [139, 193, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 696, 699, 835, 858], "didn": [139, 143, 262, 443, 699, 876], "string": [139, 142, 143, 144, 148, 149, 167, 168, 170, 171, 199, 213, 214, 215, 237, 255, 256, 257, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 281, 308, 310, 319, 325, 327, 338, 351, 352, 356, 357, 361, 367, 372, 375, 376, 377, 380, 381, 383, 388, 389, 391, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 408, 410, 411, 415, 418, 424, 425, 429, 432, 437, 442, 443, 456, 458, 460, 468, 475, 476, 477, 478, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 511, 516, 519, 523, 529, 530, 553, 554, 555, 556, 558, 559, 570, 571, 572, 573, 575, 577, 578, 581, 584, 590, 592, 599, 608, 610, 614, 632, 652, 653, 654, 655, 656, 658, 661, 664, 673, 677, 679, 682, 691, 692, 696, 697, 698, 699, 700, 704, 705, 706, 707, 709, 727, 731, 732, 733, 743, 751, 759, 760, 767, 773, 774, 775, 777, 779, 780, 781, 782, 783, 786, 787, 794, 795, 796, 797, 798, 801, 803, 805, 806, 807, 833, 834, 835, 850, 855, 861, 876], "event_dict": [139, 141, 144, 148, 150, 165, 167, 209, 214, 219, 237], "buttonpress": [139, 148, 150, 165, 167, 171, 214], "mention": [139, 143, 150, 165, 167, 168, 169, 174, 200, 204, 205, 206, 213, 229, 351, 835], "haven": [139, 215, 835, 859, 876], "turn": [139, 148, 149, 151, 174, 190, 198, 203, 204, 205, 206, 239, 255, 257, 262, 449, 513, 645, 744, 764, 852, 857, 858, 876], "accommod": [139, 876], "request": [139, 160, 165, 170, 171, 203, 205, 208, 213, 214, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 407, 476, 477, 556, 568, 569, 604, 641, 677, 679, 697, 698, 700, 752, 775, 784, 786, 801, 806, 831, 841, 842, 855, 856, 857, 861, 876], "drop_log": [139, 141, 199, 257, 262, 263, 272, 568, 569, 699, 772, 876], "too_short": [139, 150, 262, 699], "forget": [139, 156, 157, 167, 835], "brows": [139, 171, 180, 198, 215, 260, 262, 263, 476, 477, 556, 771, 773, 790, 796, 847, 853, 876], "scrollbar": [139, 262, 263, 476, 477, 556, 773, 790, 796, 876], "focus": [139, 140, 180, 215, 262, 263, 476, 477, 556, 653, 658, 773, 790, 796, 835, 839, 842, 860], "screen": [139, 242, 254, 262, 263, 476, 477, 773, 796, 809, 876], "bracket": [139, 148, 150, 168, 188, 213, 219, 237, 876], "catch": [139, 141, 165, 180, 228, 234, 835], "charact": [139, 165, 168, 198, 213, 214, 322, 492, 507, 602, 608, 652, 653, 654, 655, 656, 658, 751, 835, 876], "tag": [139, 143, 150, 164, 240, 241, 242, 254, 262, 263, 267, 272, 310, 326, 432, 437, 486, 507, 553, 698, 699, 751, 805, 831, 835, 852, 864, 876], "complain": 139, "ask": [139, 143, 159, 835, 850, 852, 856, 857], "keyerror": [139, 259, 262, 263, 267, 271, 286, 300, 522, 699, 731], "rais": [139, 143, 206, 257, 259, 262, 263, 264, 265, 267, 268, 271, 272, 273, 276, 282, 283, 286, 300, 314, 337, 340, 346, 347, 352, 356, 359, 361, 363, 367, 368, 400, 427, 435, 449, 455, 456, 458, 476, 477, 496, 522, 545, 547, 556, 583, 604, 615, 633, 635, 638, 642, 646, 683, 684, 686, 687, 696, 698, 699, 700, 731, 776, 787, 822, 824, 835, 857, 876], "reorder_channel": [139, 148, 213, 262, 263, 264, 265, 476, 477, 696, 698, 699, 700, 876], "exploratori": [139, 148, 166, 204, 213, 225, 853], "epochs_eeg": 139, "new_ord": [139, 148], "epochs_subset": 139, "032": [139, 148, 168, 221, 225, 242], "034": [139, 148, 168, 208, 212, 221], "035": [139, 148, 168, 221], "038": [139, 148, 168, 221], "042": [139, 148, 168, 221, 858], "043": [139, 148, 168, 221], "045": [139, 141, 148, 168, 221], "047": [139, 141, 148, 168, 221], "049": [139, 141, 148, 168, 221], "052": [139, 141, 148, 161, 168, 184, 198, 221, 242, 725, 728], "054": [139, 141, 148, 168, 206, 221, 242, 534, 653, 658], "055": [139, 141, 148, 168, 206, 221, 242, 386], "056": [139, 141, 148, 168, 221], "058": [139, 141, 148, 168, 216, 221], "unchang": [139, 148, 204, 262, 263, 264, 265, 476, 477, 585, 636], "blinkchannel": 139, "20auditori": 139, "20buttonpress": 139, "4face": [139, 150], "4visual": 139, "19visual": 139, "shorter_epoch": 139, "include_tmax": [139, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 696, 699, 876], "obj": [139, 160, 627, 829, 876], "0998976": 139, "expand": [139, 143, 159, 199, 204, 262, 263, 264, 265, 268, 273, 276, 352, 438, 441, 466, 476, 477, 698, 700, 775, 855, 876], "later_epoch": 139, "tshift": [139, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 436, 476, 477, 696, 699], "amount": [139, 140, 161, 166, 177, 198, 205, 206, 220, 239, 259, 260, 261, 262, 263, 264, 265, 269, 270, 271, 272, 273, 276, 277, 278, 361, 372, 408, 415, 448, 475, 476, 477, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 516, 531, 555, 556, 593, 609, 696, 698, 699, 700, 712, 722, 726, 773, 775, 782, 786, 795, 796, 798, 801, 803, 806, 855, 858, 876], "00166496": 139, "00332992": 139, "99833504": 139, "99667008": 139, "enforc": [139, 816, 876], "eog_data": 139, "channel_4_6_8": 139, "arr": [139, 213, 239, 675], "repeatedli": [139, 203, 205, 476, 477, 841, 876], "hierarch": [139, 142, 143, 237, 242, 432, 471, 521, 831, 876], "multiindex": [139, 262, 263, 696, 698, 699, 700], "aggreg": [139, 142, 144, 238, 262, 263, 264, 265, 312, 432, 476, 477, 696, 698, 700, 774, 775, 876], "endpoint": [139, 142, 167, 219, 257, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 285, 572, 614, 615], "sort_index": 139, "inplac": [139, 144, 256, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 315, 433, 443, 476, 477, 552, 598, 650, 835], "read_epochs_eeglab": [139, 188, 858, 862, 866, 876], "read_epochs_kit": [139, 187, 858, 866, 876], "audiovisu": [139, 165, 213], "epochs_from_fil": 139, "convent": [139, 159, 169, 171, 187, 189, 204, 205, 214, 242, 254, 267, 301, 322, 332, 493, 592, 615, 631, 712, 721, 722, 743, 858, 861, 876], "basenam": [139, 214], "_epo": 139, "issu": [139, 140, 143, 150, 160, 193, 200, 201, 204, 214, 215, 262, 263, 268, 273, 287, 289, 419, 476, 477, 556, 591, 659, 662, 773, 790, 796, 831, 833, 835, 854, 856, 857, 864, 876], "adher": [139, 142, 356, 440], "epochsfif": [139, 142], "anyth": [139, 187, 203, 384, 743, 835], "baseepoch": [139, 556, 835, 866, 876], "ndarrai": [139, 213, 221, 239, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 281, 295, 296, 303, 319, 342, 348, 361, 363, 366, 367, 407, 408, 409, 412, 415, 420, 424, 428, 434, 436, 444, 445, 446, 448, 451, 452, 453, 475, 476, 477, 479, 511, 531, 555, 556, 557, 564, 567, 568, 569, 570, 575, 579, 580, 582, 599, 620, 645, 646, 661, 675, 676, 677, 681, 682, 683, 684, 686, 687, 696, 697, 698, 699, 700, 709, 712, 714, 715, 722, 725, 732, 733, 743, 744, 747, 757, 760, 762, 775, 779, 781, 782, 784, 785, 798, 801, 802, 803, 805, 806, 807, 816, 824, 874, 876], "10_epochs_overview": [139, 147], "aldai": [140, 242, 876], "reason": [140, 148, 149, 161, 165, 170, 171, 183, 198, 199, 200, 201, 202, 204, 205, 206, 213, 215, 224, 233, 234, 242, 260, 261, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 296, 352, 369, 420, 476, 477, 556, 568, 576, 579, 584, 683, 684, 686, 687, 689, 696, 699, 772, 809, 835, 851, 855, 857, 858, 876], "safer": [140, 269, 270, 273, 276, 277, 278, 488], "distort": [140, 188, 200, 216, 239, 488, 733], "spuriou": [140, 145, 161, 449, 855], "carina": [140, 876], "forster": [140, 876], "email": [140, 835, 841], "carinaforster0611": 140, "merge_ev": [140, 214, 352, 866, 876], "baseline_tmin": 140, "baseline_tmax": 140, "4957": [140, 150, 333], "trad_aud": 140, "trad_vi": 140, "heterogen": [140, 199, 876], "aud_predictor": 140, "vis_predictor": 140, "trickier": 140, "seaprat": 140, "baseline_predictor": 140, "singleton": [140, 743, 876], "\u03bcv": 140, "microvolt": [140, 187, 486, 858], "unstabl": [140, 161, 202, 352, 855, 876], "transpos": [140, 213, 224, 225, 229, 232, 233, 234, 861, 876], "reg_model": 140, "6254": 140, "lm": [140, 564], "namedtupl": [140, 681], "dict_kei": [140, 168, 204], "1998": [140, 148, 242, 858], "49949": [140, 148], "tell": [140, 149, 154, 161, 165, 170, 199, 203, 205, 213, 226, 228, 234, 275, 835, 838, 839, 854, 858], "strongli": [140, 171, 197, 198, 206, 476, 477, 506, 833, 835, 851, 855, 858], "\u03b2": [140, 141, 216], "constant": [140, 155, 159, 169, 194, 197, 200, 239, 257, 262, 263, 264, 265, 267, 369, 476, 477, 480, 508, 732, 831, 852, 858, 876], "effect_of_baselin": 140, "unsurprisingli": 140, "farther": [140, 855], "weaker": [140, 262, 263, 264, 265, 444, 446, 447, 476, 477, 858], "pure": [140, 273, 835], "influenc": [140, 200, 202, 203, 242, 857], "reg_aud": 140, "reg_vi": 140, "show_sensor": [140, 143, 165, 767, 876], "truncate_yaxi": [140, 229, 767, 876], "subtl": 140, "apart": [140, 149, 167, 219], "diff_tradit": 140, "diff_regress": 140, "themselv": [140, 264, 265, 295, 296, 352, 356, 357, 367, 368, 369, 408, 415, 451, 452, 471, 473, 474, 534, 783, 857], "ought": 140, "persist": [140, 141, 197, 201, 855, 876], "interaction_effect": 140, "seem": [140, 143, 150, 161, 190, 200, 203, 205, 239, 556, 835], "randomli": [140, 165, 224, 509, 582, 601, 662], "glm": [140, 242, 842], "lift": [140, 177, 194, 232, 234, 242], "psyp": [140, 150, 200, 229, 242, 682, 683, 684, 686, 687], "13451": [140, 242], "15_baseline_regress": [140, 147], "imagemap": 141, "discontinu": [141, 145, 146, 147, 150, 164, 167, 200, 203, 213, 214, 219, 237, 262, 449, 476, 607, 608, 610, 611, 698, 700, 831], "enabl": [141, 171, 216, 239, 254, 255, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 371, 467, 476, 477, 570, 591, 643, 683, 684, 686, 687, 698, 699, 738, 743, 752, 756, 759, 778, 796, 801, 806, 809, 833, 841, 851, 857, 858, 876], "unappli": [141, 149, 204, 206, 262, 263, 264, 265, 438, 439, 440, 441, 476, 477, 876], "purg": 141, "catch_trials_and_buttonpress": 141, "pick_ev": [141, 214, 866], "event_color": [141, 214, 262, 263, 476, 477, 773, 796, 876], "butterfli": [141, 148, 150, 151, 171, 198, 204, 208, 216, 262, 263, 264, 265, 272, 476, 477, 556, 773, 777, 780, 787, 796, 812, 862, 876], "ecg_proj_fil": [141, 204], "ecg_proj": [141, 145, 204, 205], "41auditori": 141, "40button": 141, "8face": 141, "8visual": 141, "40visual": 141, "inherit": [141, 237, 352, 876], "joint": [141, 181, 205, 242, 262, 263, 264, 265, 271, 408, 415, 476, 477, 641, 698, 700, 775, 782, 795, 864, 876], "epochsspectrum": [141, 164, 240, 241, 262, 263, 264, 265, 449, 476, 700, 714, 715, 738, 866, 876], "\u03b4": [141, 216], "\u03b8": [141, 216], "\u03b3": [141, 216], "api": [141, 168, 194, 216, 224, 237, 409, 544, 743, 752, 756, 843, 847, 859], "jointli": [141, 161, 203, 205, 262, 263, 264, 265, 271, 295, 296, 353, 354, 355, 408, 415, 476, 477, 556, 568, 569, 698, 700, 775, 782, 794, 795, 855, 876], "untransform": 141, "docstr": [141, 150, 179, 200, 201, 208, 213, 216, 237, 263, 281, 295, 296, 471, 473, 474, 534, 698, 739, 741, 758, 876], "plot_topo_imag": [141, 262, 263, 876], "accompani": [141, 661, 857], "scalebar": [141, 876], "highli": [141, 187, 205, 220, 228, 495, 609, 613, 682, 839], "customiz": [141, 264, 265, 696, 780], "respond": [141, 143, 193, 857], "opposit": [141, 167, 511, 858], "0242": [141, 168], "pop": [141, 149, 198, 259, 262, 263, 267, 271, 286, 300, 522, 731, 804, 833, 876], "At": [141, 190, 202, 203, 209, 318, 476, 835, 841, 851, 876], "fullscreen": [141, 467, 876], "unusu": [141, 183, 198, 202], "reject_criteria": [141, 144, 150, 165, 199, 209], "3000e": [141, 144, 199], "find_layout": [141, 169, 866, 876], "font_color": [141, 262, 263, 696, 804], "reinforc": 141, "disguis": 141, "mayb": [141, 261, 262, 263, 264, 265, 476, 477, 553, 696, 698, 699, 700], "095": [141, 147, 150, 169, 259, 262, 263, 264, 265, 271, 310, 328, 408, 415, 476, 477, 555, 556, 570, 696, 698, 700, 760, 767, 775, 777, 779, 782, 783, 786, 793, 795, 797, 798, 799, 803, 805, 876], "698": [141, 147], "20_visualize_epoch": [141, 147], "who": [142, 254, 267, 556, 835, 839, 852, 857, 876], "lexic": [142, 852], "decis": [142, 190, 200, 239, 257, 262, 412, 516, 607, 852], "kiloword_data_fold": 142, "kiloword_data_fil": 142, "capabl": [142, 154, 165, 167, 374, 743, 808, 812, 814, 815, 833, 835, 839, 842, 852, 876], "surviv": [142, 267], "reload": 142, "attach": [142, 168, 198, 213, 225, 237, 432, 831], "numberoflett": [142, 225], "english": [142, 852], "lexicon": 142, "wordfrequ": 142, "render": [142, 155, 159, 171, 254, 262, 263, 269, 270, 272, 273, 276, 277, 278, 467, 476, 477, 556, 696, 743, 752, 773, 790, 796, 801, 802, 806, 809, 811, 835, 841, 858, 859, 876], "orthographicdist": 142, "bigramfrequ": 142, "consonantvowelproport": 142, "450000": 142, "189490": 142, "900000": 142, "700704": 142, "546": [142, 193, 229], "600000": 142, "858537": 142, "484": [142, 143, 147, 202, 207, 242, 555, 599], "700000": 142, "454540": 142, "1095": [142, 194], "539076": 142, "drudgeri": 142, "473684": 142, "556303": 142, "732357": 142, "991226": 142, "859": [142, 229], "545879": 142, "billiard": 142, "500000": [142, 143, 193], "672098": 142, "838597": 142, "958": [142, 225], "698970": 142, "615": [142, 194, 229], "088112": 142, "solenoid": 142, "111111": 142, "301030": 142, "544507": 142, "iloc": [142, 144], "iat": 142, "nindex": 142, "arbitrarili": [142, 157, 229, 858], "highcomplex": 142, "startswith": [142, 876], "district": 142, "disarrai": 142, "disast": 142, "diseas": 142, "discord": 142, "dispos": 142, "lasso": [142, 242, 262, 263, 264, 265, 476, 477, 773, 796, 799, 876], "tentacl": 142, "banjo": 142, "corsag": 142, "fall": [142, 150, 167, 170, 208, 215, 255, 272, 363, 401, 432, 449, 558, 831, 858, 876], "rich": [142, 833, 839], "typhoon": 142, "bungalow": 142, "colossu": 142, "linguist": 142, "dozen": [142, 198, 203, 205, 853], "share": [142, 189, 200, 215, 256, 295, 598, 683, 684, 686, 687, 835, 853, 858, 861, 864, 876], "letter": [142, 169, 187, 225, 242, 743, 876], "n_letter": 142, "sort_ord": 142, "obviou": [142, 170, 198, 203, 216, 232], "reaction": [142, 224, 262, 263, 774, 876], "new_metadata": 142, "foo": [142, 149, 170, 262, 263, 383, 699, 835], "30_epochs_metadata": [142, 147], "eriksen": 143, "flanker": [143, 852], "introductori": [143, 149, 161, 167, 168, 197, 213, 214, 224, 855], "straight": [143, 262, 263, 264, 265, 476, 477, 799], "creation": [143, 148, 154, 167, 199, 215, 254, 256, 259, 262, 263, 272, 275, 306, 407, 568, 569, 858, 876], "ourselv": [143, 174, 202, 203, 205], "incorrect": [143, 175, 199, 200, 210, 242, 833, 858, 876], "sophist": [143, 188, 450], "erp_cor": [143, 852, 866], "infil": 143, "core_subject": 143, "001_task": [143, 210], "flankers_eeg": 143, "all_ev": 143, "all_event_id": 143, "935935": 143, "913": [143, 229], "33793": 143, "target_left": 143, "target_right": 143, "incompat": [143, 618, 624, 833, 876], "decid": [143, 209, 239, 257, 262, 263, 448, 516, 607, 772, 857], "1500": 143, "invalid": [143, 226, 876], "metadata_tmin": 143, "metadata_tmax": 143, "why": [143, 150, 157, 159, 199, 200, 204, 213, 221, 224, 228, 242, 725, 728, 857], "event_nam": [143, 229, 432, 435], "551758": 143, "997070": 143, "434570": 143, "797": [143, 194, 229], "343750": 143, "917969": 143, "425781": 143, "416016": 143, "392578": 143, "990234": 143, "402344": 143, "eleg": 143, "row_ev": [143, 432], "pertain": 143, "sync": [143, 256, 267, 437, 493, 598], "508789": 143, "00000": 143, "503906": 143, "449219": 143, "542969": 143, "496094": 143, "794": [143, 194, 207, 229], "437500": 143, "465820": 143, "796": [143, 194, 229, 231], "547852": 143, "46582": 143, "descriptor": [143, 165, 237, 242, 432, 476, 477, 831], "hed": [143, 150, 237, 242, 432, 831], "inspir": [143, 432, 447, 733, 835, 874], "keep_first": [143, 432], "regardless": [143, 150, 170, 189, 202, 205, 449, 794, 831], "first_respons": [143, 432], "notna": 143, "411133": 143, "454102": 143, "443359": 143, "466797": 143, "400391": 143, "499023": 143, "584961": 143, "226": [143, 168, 183, 207, 225, 228, 229, 231, 876], "421875": 143, "450195": 143, "399414": 143, "316406": 143, "316": [143, 168, 193, 207, 224, 229, 242, 414], "416992": 143, "386719": 143, "410156": 143, "467773": 143, "377930": 143, "483398": 143, "454": [143, 224, 229, 275], "457031": 143, "456": [143, 275], "566406": 143, "395508": 143, "354492": 143, "326172": 143, "432617": 143, "322266": 143, "482422": 143, "606": [143, 229], "484375": 143, "652": [143, 193], "371094": 143, "342773": 143, "704": 143, "307617": 143, "706": [143, 207, 229], "442383": 143, "728": [143, 194, 229], "376953": 143, "first_stimulu": 143, "perfect": [143, 157, 200, 208], "stimulus_sid": 143, "response_correct": 143, "correct_response_count": 143, "rememb": [143, 149, 160, 170, 175, 198, 203, 204, 213, 229, 858], "epochs_tmin": 143, "epochs_tmax": 143, "strong": [143, 182, 198, 203, 228, 556, 653, 658, 851], "099609375": 143, "f8": [143, 158], "fp2": [143, 158, 219, 333, 444, 447, 573, 577], "fp1": [143, 158, 206, 219, 333, 444, 447, 484, 491, 573, 577], "lastli": [143, 171, 207, 209, 238, 239, 835], "vis_erp": 143, "vis_erp_slow": 143, "40_autogenerate_metadata": [143, 147], "userwarn": [143, 175], "asid": [143, 171, 197, 234], "fact": [143, 148, 150, 180, 181, 197, 203, 204, 208, 214, 414, 420, 556, 614, 831, 851, 858], "noisier": [143, 190], "deal": [143, 161, 170, 179, 200, 203, 204, 206, 214, 224, 228, 232, 234, 264, 265, 269, 270, 273, 276, 277, 278, 295, 296, 452, 556, 567, 575, 584, 598, 864, 876], "keep_last": [143, 432], "last_": [143, 432], "last_stimulu": 143, "last_respons": 143, "431641": 143, "795": [143, 194, 229], "576172": 143, "puls": [143, 145, 165, 167, 197, 203, 205, 214, 576, 579, 858], "f7": [143, 158, 333, 499], "c5": [143, 499], "cpz": 143, "isna": 143, "bummer": 143, "impress": 143, "resp_erp_correct": 143, "resp_erp_incorrect": 143, "deflect": [143, 197, 204, 205, 876], "immedi": [143, 155, 167, 198, 203, 206, 239, 255, 425, 476, 477, 559, 607, 668, 671, 752, 796, 831, 835, 857, 858, 876], "doubt": 143, "resp_erp_diff": 143, "bolder": 143, "set_linewidth": 143, "trough_time_idx": 143, "trough_tim": 143, "emili": [143, 200, 242, 852, 876], "kappenman": [143, 200, 242, 852], "jaclyn": [143, 242, 852], "farren": [143, 242, 852], "wendi": [143, 193, 242, 414, 852], "zhang": [143, 242, 852, 858, 876], "andrew": [143, 179, 242, 556, 685, 852, 876], "stewart": [143, 242, 852], "luck": [143, 150, 200, 242, 852], "117465": [143, 242, 852], "nima": [143, 242, 432], "bigd": [143, 242, 432], "shamlo": [143, 242, 432], "kreutz": [143, 242, 432], "delgado": [143, 242, 432], "robbin": [143, 242, 432], "makoto": [143, 242, 432], "miyakoshi": [143, 242, 432], "marissa": [143, 242, 432], "westerfield": [143, 242, 432], "tarik": [143, 242, 432], "bel": [143, 242, 432], "bahar": [143, 242, 432], "koth": [143, 242, 432], "jessica": [143, 242, 432], "hsi": [143, 242, 432], "globalsip": [143, 242, 432], "6736796": [143, 242, 432], "workflow": [144, 154, 199, 852, 854, 876], "200e": [144, 150, 199], "0113": [144, 165, 168, 213], "0112": [144, 165, 168, 213], "0122": [144, 165, 168, 213, 238], "0132": [144, 168], "199795": 144, "320252": 144, "567619": 144, "248584": 144, "609895": 144, "700540": 144, "352746": 144, "908667": 144, "193135": 144, "049675": 144, "702938": 144, "168267": 144, "480975": 144, "182237": 144, "225684": 144, "072452": 144, "186476": 144, "283711": 144, "006895": 144, "912317": 144, "130290": 144, "157198": 144, "842466": 144, "986073": 144, "179816": 144, "040471": 144, "643716": 144, "835772": 144, "517952": 144, "214631": 144, "043144": 144, "672744": 144, "173156": 144, "688943": 144, "974112": 144, "561683": 144, "450115": 144, "778315": 144, "795987": 144, "277138": 144, "timedelta": [144, 215, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 696, 699], "132025e": 144, "156762e": 144, "324858e": 144, "060990e": 144, "870054e": 144, "835275e": 144, "790867e": 144, "049675e": 144, "702938e": 144, "416827e": 144, "748098e": 144, "018224e": 144, "212257e": 144, "072452e": 144, "283711e": 144, "300690e": 144, "691232e": 144, "213029e": 144, "515720e": 144, "178425e": 144, "986073e": 144, "304047e": 144, "643716e": 144, "783577e": 144, "851795e": 144, "521463e": 144, "204314e": 144, "672744e": 144, "568894e": 144, "974112e": 144, "556168e": 144, "450115e": 144, "377831e": 144, "117960e": 144, "727714e": 144, "0133": [144, 168], "dai": [144, 205, 254, 262, 263, 264, 265, 267, 476, 477, 478], "800204787": 144, "379736": 144, "123525": 144, "806864627": 144, "734826": 144, "339465": 144, "813524468": 144, "996158": 144, "627037": 144, "820184308": 144, "748030": 144, "024973": 144, "826844149": 144, "123811": 144, "917677": 144, "pivot": [144, 260, 771, 802], "long_df": [144, 225], "coupl": [144, 209, 213, 234, 411, 588, 842, 860, 876], "1342": [144, 168, 193, 232, 234], "categorydtyp": 144, "nicer": [144, 204, 876], "hue": 144, "peak_lat": 144, "regex": [144, 876], "2123": [144, 168], "idxmax": 144, "melt": 144, "id_var": 144, "var_nam": 144, "value_nam": 144, "satur": [144, 504], "931": [144, 147, 229], "50_epochs_to_data_fram": [144, 147], "equidistantli": 145, "consecut": [145, 167, 232, 269, 270, 273, 276, 277, 278, 449, 516, 558, 559, 876], "briefli": [145, 150, 200, 216, 224], "hous": 145, "compute_proj_ecg": [145, 204, 205, 572, 576, 851, 866, 876], "envelope_correl": [145, 876], "manag": [145, 165, 170, 171, 262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 280, 352, 353, 355, 357, 411, 418, 421, 424, 425, 451, 464, 466, 476, 477, 515, 518, 519, 529, 530, 539, 540, 545, 556, 561, 568, 569, 644, 647, 648, 649, 661, 683, 684, 685, 686, 687, 698, 700, 701, 702, 703, 704, 705, 706, 714, 715, 723, 724, 725, 726, 727, 737, 738, 773, 775, 778, 790, 796, 797, 833, 835, 840, 842, 857, 864, 876], "chan": [145, 253, 676], "heart": [145, 197, 202, 242, 725, 728, 876], "beat": [145, 209, 568, 576, 579, 648], "onpca": 145, "onecg": 145, "make_fixed_length_epoch": [145, 257, 866, 876], "unsuit": [145, 876], "event_related_plot": 145, "1142": [145, 168], "n_sensor": [145, 238, 269, 273, 277, 759], "alpha_data": 145, "1530": 145, "epochconnect": 145, "corr_matrix": 145, "first_30": 145, "last_30": 145, "corr_matric": 145, "color_lim": 145, "mpbl": 145, "507": [145, 147, 207, 224, 229], "60_make_fixed_length_epoch": [145, 147], "auto_tutorials_epoch": 147, "475": [147, 194, 207, 224, 229, 275], "raw_fil": [148, 150], "happen": [148, 150, 155, 159, 160, 166, 167, 170, 194, 199, 201, 203, 224, 255, 262, 263, 315, 431, 433, 831, 835, 852, 855, 857, 861, 876], "discuss": [148, 150, 155, 164, 165, 167, 172, 179, 190, 194, 197, 200, 201, 213, 216, 224, 229, 239, 242, 699, 834, 835, 852, 854, 855, 857, 858, 876], "transfer": [148, 194, 198, 200, 585, 831, 851], "maintain": [148, 198, 224, 262, 263, 264, 265, 476, 477, 478, 547, 835, 854, 857, 858, 876], "proven": [148, 876], "never": [148, 262, 263, 316, 574, 761, 835, 858, 876], "72160572e": 148, "57859354e": 148, "98040833e": 148, "75128428e": 148, "15309907e": 148, "83186429e": 148, "bewar": [148, 159, 858], "evoked_subset": 148, "repair": [148, 164, 165, 197, 198, 199, 204, 208, 211, 212, 216, 242, 262, 264, 265, 267, 355, 449, 476, 491, 550, 553, 555, 556, 568, 569, 570, 572, 573, 591, 592, 794, 795, 815, 851, 876], "evk_fil": [148, 149], "evokeds_list": [148, 149], "right_vi": 148, "remedi": 148, "left_right_aud": 148, "6992832460543575": [148, 150], "fairli": [148, 165, 197, 199, 200, 201, 203, 205, 206], "left_aud": 148, "right_aud": 148, "proport": [148, 224, 269, 270, 271, 273, 276, 277, 278, 351, 363, 474, 556, 564, 801, 806, 858, 876], "grand_averag": [148, 150, 866, 876], "intend": [148, 170, 208, 214, 255, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 432, 476, 477, 556, 585, 591, 842], "standard_error": [148, 262, 263, 264, 265, 614, 876], "iter_evok": [148, 150, 262, 263, 876], "ix": [148, 150], "return_amplitud": [148, 150, 264, 265], "569": [148, 229], "539": [148, 153], "10_evoked_overview": [148, 153], "life": [149, 857], "evk": [149, 150], "superimpos": [149, 171, 197, 216, 556, 744, 787], "timeseri": [149, 221, 262, 263, 264, 265, 476, 477, 663, 697], "resembl": [149, 161, 174, 523, 579, 580], "wing": 149, "behav": [149, 200, 213, 266, 267, 437, 876], "time_ranges_of_interest": 149, "drag": [149, 150, 160, 215, 259, 262, 263, 264, 265, 271, 408, 415, 476, 477, 555, 556, 696, 698, 700, 774, 775, 779, 782, 786, 795, 797, 798, 803, 805, 833, 853], "averaging_dur": 149, "augment": [149, 861], "custom_func": 149, "0x7f1d70db1ab0": 149, "substr": [149, 619, 631, 876], "action": [149, 170, 835, 861, 864], "ambigu": [149, 270, 276, 278, 876], "temp_list": 149, "_comment": 149, "_evk": 149, "overhead": [149, 643, 738, 876], "trans_fil": 149, "00097": 149, "meg_surf": [149, 515], "_map": 149, "20_visualize_evok": [149, 153], "materi": [150, 161, 831, 835, 855], "link": [150, 188, 242, 269, 273, 277, 443, 757, 801, 835, 841, 855, 858, 864, 876], "events_fil": [150, 199], "discard": [150, 198, 203, 204, 205, 208, 234, 583, 584, 611, 876], "last_samp": [150, 267, 360, 475, 476, 477, 831, 876], "13514": 150, "mislabel": 150, "renam": [150, 188, 209, 213, 256, 262, 263, 264, 265, 310, 338, 476, 477, 484, 491, 632, 743, 753, 808, 835, 843, 876], "lowercas": 150, "channel_renaming_dict": [150, 213], "schemat": 150, "diagram": [150, 203, 831], "addition": [150, 170, 189, 197, 204, 215, 237, 253, 270, 276, 278, 316, 327, 642, 724, 727, 806, 835, 850, 860], "realist": [150, 242, 851, 858], "dedic": [150, 197, 203, 205, 213, 476, 477, 796, 835, 839, 857, 865, 876], "use_browser_backend": [150, 198, 201, 203, 204, 205, 206, 262, 263, 476, 477, 556, 773, 790, 796, 866, 876], "xx": [150, 198, 201, 204, 205, 206, 256, 835], "qt": [150, 170, 171, 198, 201, 203, 204, 205, 206, 262, 263, 476, 477, 556, 743, 773, 790, 796, 812, 815, 833, 855, 876], "scheme": [150, 187, 219, 228, 259, 262, 263, 264, 265, 271, 408, 415, 424, 476, 477, 555, 556, 570, 638, 641, 677, 696, 698, 700, 760, 773, 775, 782, 786, 795, 798, 799, 803, 805, 835, 858, 876], "eeg53": 150, "eog61": 150, "chose": 150, "consol": [150, 839, 876], "duplic": [150, 160, 257, 262, 263, 264, 265, 268, 272, 310, 338, 476, 477, 632, 876], "eeg03": 150, "eeg01": 150, "eeg02": 150, "eeg04": 150, "eeg06": 150, "eeg07": 150, "eeg25": 150, "25auditori": 150, "27buttonpress": 150, "5visual": 150, "28visual": 150, "barplot": [150, 203], "lose": [150, 188, 215, 855], "plot_drop_log": [150, 199, 209, 262, 263, 866, 876], "break": [150, 164, 211, 212, 215, 256, 262, 264, 267, 357, 476, 553, 556, 559, 572, 573, 576, 577, 611, 829, 835, 851, 876], "l_aud": [150, 234], "l_vi": [150, 234], "fig1": [150, 169], "speak": [150, 166, 167, 202, 843], "agreement": [150, 857], "warrant": 150, "popul": [150, 154, 164, 219, 222, 227, 242, 263, 265, 371, 408, 440, 477, 585, 678, 739, 831, 876], "leverag": [150, 857], "verifi": [150, 181, 239, 840, 841, 858], "plain": [150, 202, 239, 330, 821], "ddof": [150, 161, 855], "lime": 150, "revisit": [150, 242, 408], "eeg17": 150, "eeg18": 150, "eeg26": 150, "eeg23": 150, "eeg24": 150, "eeg34": 150, "eeg35": 150, "left_ix": 150, "right_ix": 150, "roi_dict": 150, "left_roi": [150, 262, 263, 264, 265, 774, 779], "right_roi": [150, 262, 263, 264, 265, 774, 779], "roi_evok": 150, "combine_channel": [150, 866, 876], "aud_minus_vi": 150, "29969": 150, "69928": 150, "weak": [150, 203], "chapter": 150, "erplab": [150, 242], "consequ": [150, 161, 168, 208, 353, 354, 355, 437, 448, 493, 543, 855, 858, 876], "voltag": [150, 165, 167, 187, 188, 206, 214, 500, 831, 876], "p100": 150, "submit": [150, 225, 695, 835, 857], "amp": [150, 177, 182, 184, 254, 876], "throughout": [150, 170, 209, 556, 852], "remaind": 150, "print_peak_measur": 150, "3f": [150, 208, 225, 229, 239, 262, 263, 264, 265, 476, 477, 698, 700, 775, 782], "good_tmin": 150, "good_tmax": 150, "eeg55": 150, "508": [150, 224, 225, 229], "priori": [150, 239, 858], "believ": [150, 239, 835, 858], "eeg59": 150, "fist": 150, "l_vis_roi": 150, "ch_roi": 150, "lat_roi": 150, "amp_roi": 150, "FOR": 150, "ONE": [150, 156, 194, 242], "713": [150, 194, 207, 229], "suscept": [150, 201, 575], "challeng": [150, 210, 242, 852, 855, 864], "meth": [150, 171, 835, 876], "guarante": [150, 187, 198, 203, 206, 208, 224, 262, 263, 264, 265, 438, 439, 440, 441, 476, 477, 506, 876], "rise": [150, 492, 602, 608, 831], "crucial": [150, 155, 197, 232], "bad_tmin": 150, "bad_tmax": 150, "bad_lat_roi": 150, "bad_amp_roi": 150, "unclear": [150, 835], "truli": [150, 200, 683], "pink": [150, 155, 759, 831], "star": 150, "yourself": [150, 155, 168, 197, 201, 213, 254, 264, 265, 487, 782, 835], "c6": 150, "act": [150, 168, 201, 202, 204, 208, 262, 263, 264, 265, 275, 295, 296, 345, 471, 473, 474, 476, 477, 534, 584, 641, 699, 831, 853, 855, 857, 876], "eeg54": 150, "eeg57": 150, "l_vis_mean_roi": 150, "mean_amp_roi": 150, "mean_amp_roi_df": 150, "mean_amp": 150, "numeric_onli": 150, "279764": 150, "685840": 150, "reiter": 150, "hypothes": [150, 224, 225, 864], "l_vis_crop": 150, "mean_amp_al": 150, "mean_amp_all_df": 150, "option_context": 150, "max_column": 150, "689513": 150, "078492": 150, "381191": 150, "609264": 150, "eeg05": 150, "113717": 150, "eeg56": 150, "064174": 150, "259681": 150, "eeg58": 150, "156472": 150, "802306": 150, "eeg60": 150, "878811": 150, "dietrich": [150, 242, 523, 858], "lehmann": [150, 242, 523, 858], "wolfgang": [150, 242, 725, 728], "skrandi": [150, 242], "identif": [150, 203, 242, 570], "checkerboard": [150, 165, 239, 242, 852], "90419": [150, 242], "neurobiologi": [150, 242], "1984": [150, 242], "0301": [150, 242], "0082": [150, 242], "90003": [150, 242], "micah": [150, 242], "brunet": [150, 242], "michel": [150, 184, 242, 386, 556, 656], "s10548": [150, 206, 242, 571, 661], "0054": [150, 242], "ma": [150, 242, 876], "52585": [150, 242], "mitpress": [150, 242], "book": [150, 242, 447, 835], "javier": [150, 242], "lopez": [150, 242], "calderon": [150, 242], "00213": [150, 242], "preclud": [150, 200, 208, 242, 584], "00131": [150, 200, 242], "rufin": [150, 200, 242], "vanrullen": [150, 200, 242], "fallaci": [150, 200, 242], "00365": [150, 200, 242], "nichola": [150, 210, 242, 852], "gaspelin": [150, 242], "12639": [150, 242], "30_eeg_erp": [150, 153], "perspect": [151, 204, 743], "satisfi": [151, 160, 224, 295, 296, 678, 698, 700, 858], "162": [151, 153, 168, 194, 229, 242, 275], "40_whiten": [151, 153], "repetit": [152, 164, 661], "auto_tutorials_evok": 153, "outer": [154, 157, 159, 160, 182, 254, 305, 556, 584, 743, 789, 831, 836, 839, 842, 851, 852, 855, 858, 861], "tissu": [154, 157, 831], "boundari": [154, 157, 171, 181, 190, 216, 259, 262, 263, 264, 265, 268, 271, 272, 361, 408, 415, 466, 476, 477, 555, 556, 575, 601, 661, 675, 696, 698, 700, 743, 748, 760, 761, 775, 782, 786, 795, 797, 798, 803, 805, 831, 841, 861, 876], "analog": [154, 187, 189, 194, 204, 208, 262, 263, 264, 265, 443, 476, 477, 484, 491, 498, 553, 696, 698, 699, 700, 831, 861, 876], "freesurfer_hom": [154, 370, 841], "setupfreesurf": 154, "sh": [154, 838, 841], "folder": [154, 155, 157, 160, 169, 187, 213, 272, 275, 301, 305, 336, 375, 376, 377, 378, 380, 381, 383, 388, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 456, 457, 462, 492, 504, 608, 640, 759, 761, 835, 838, 841, 876], "my_subject": 154, "my_nifti": 154, "subfold": [154, 383], "beforehand": [154, 262, 263, 773, 811], "set_config": [154, 170, 262, 263, 373, 383, 456, 476, 477, 556, 741, 773, 790, 796, 833, 835, 851, 866, 876], "overview": [154, 155, 164, 169, 172, 173, 179, 199, 203, 205, 211, 212, 224, 238, 247, 262, 263, 264, 265, 267, 273, 351, 449, 476, 477, 522, 523, 537, 553, 556, 572, 573, 576, 577, 696, 726, 767, 773, 776, 790, 796, 812, 831, 855], "buckner40not": 154, "standalon": [154, 837, 868, 876], "712": [154, 163, 229], "10_background_freesurf": [154, 163], "landmark": [155, 219, 333, 363, 831, 851, 858, 861, 876], "t1w": [155, 310], "nifti1imag": [155, 181, 274, 277, 278, 305], "xyzt_unit": 155, "uint8": 155, "t1_mgh": 155, "mghimag": [155, 858], "draw": [155, 169, 175, 176, 200, 226, 259, 262, 263, 264, 265, 271, 408, 415, 476, 477, 555, 556, 570, 579, 696, 698, 700, 760, 766, 767, 774, 775, 777, 782, 786, 789, 795, 798, 799, 803, 805, 858, 861, 876], "ight": 155, "nterior": 155, "longest": 155, "uperior": 155, "camera": [155, 159, 264, 265, 467, 743, 757, 759, 778, 811, 876], "dens": [155, 156, 157, 159, 181, 182, 189, 242, 254, 275, 306, 564, 743, 759, 876], "dig_mri_dist": [155, 363, 866, 876], "na": [155, 239, 483, 831], "preauricular": [155, 310, 334, 831, 858], "manufactur": [155, 169, 187, 188, 189, 831, 858, 864, 876], "faq": [155, 188, 200, 206, 307, 369, 484, 584, 856], "intersect": [155, 159, 160, 183, 584, 601, 851, 876], "purpl": [155, 157, 234], "perpendicular": [155, 177, 858], "goe": [155, 159, 200, 215, 858], "upward": [155, 159, 203, 207, 743, 767], "compani": [155, 242, 678, 857], "acquir": [155, 198, 282, 283, 305, 499, 847, 852, 857, 858, 861, 876], "emit": [155, 207, 256, 262, 263, 264, 265, 267, 269, 270, 272, 273, 276, 277, 278, 282, 283, 314, 337, 346, 347, 352, 356, 359, 361, 363, 367, 368, 427, 442, 455, 458, 476, 477, 496, 556, 585, 604, 633, 635, 696, 698, 699, 700, 740, 776, 787, 822, 824, 831, 876], "coregist": [155, 305, 467], "front": [155, 264, 265, 304, 427, 743, 777, 831, 858], "magenta": 155, "1mm": 155, "anisotrop": [155, 242, 858], "incorrectli": [155, 468, 855, 876], "identity_tran": 155, "mri_voxel": [155, 323, 508, 731], "corner": [155, 190, 200, 201, 204, 216, 254, 262, 263, 264, 265, 267, 476, 477, 756, 767, 773, 781, 796, 861, 876], "inferior": [155, 159, 831], "seghead_rr": 155, "seghead_tri": 155, "read_surfac": [155, 159, 160, 268, 630, 645, 829, 851, 866, 876], "mri_to_head": 155, "scalp_pts_in_head_coord": 155, "head_to_meg": 155, "scalp_pts_in_meg_coord": 155, "vox_to_mri": 155, "get_vox2ras_tkr": [155, 159, 181], "mri_to_vox": 155, "scalp_points_in_vox": 155, "nose": [155, 206, 304], "roughli": [155, 352, 575, 833, 876], "blur": [155, 858], "fiffv_point_cardin": [155, 159, 267, 861], "fiffv_point_nas": [155, 159, 267, 861], "fiffv_coord_head": [155, 266, 267, 861], "nasion_mri": [155, 159], "nasion_vox": [155, 159], "toggl": [155, 165, 171, 190, 198, 203, 216, 262, 263, 476, 477, 556, 743, 773, 788, 790, 796, 812, 876], "radio": [155, 864], "icon": [155, 171], "fid": [155, 695], "icp": [155, 876], "finetun": 155, "inner_skul": [155, 157, 158, 160, 171, 182, 275, 633, 759, 851, 852], "outer_skul": [155, 157, 158, 160, 169, 171, 275, 759, 851, 852], "equiv": [155, 182, 183, 184, 206], "rv": [155, 182, 183, 184, 206, 852], "00349057": [155, 206], "mu1": [155, 182, 183, 184, 206], "944702": [155, 206], "lambda1": [155, 182, 183, 184, 206], "137194": [155, 206], "mu2": [155, 182, 183, 184, 206], "667435": [155, 206], "683781": [155, 206], "mu3": [155, 182, 183, 184, 206], "26548": [155, 206], "lambda3": [155, 182, 183, 184, 206], "0106058": [155, 206], "6156": 155, "2300": 155, "1904": 155, "541": [155, 163, 207, 226, 229, 242, 429], "20_source_align": [155, 163], "hsp": [156, 187, 254, 310, 323, 335, 363, 500, 610, 858, 876], "preprat": 156, "jon": [156, 242, 876], "houck": [156, 242, 876], "faveli": [156, 863, 876], "skin": [156, 157, 160, 254, 262, 263, 264, 265, 305, 363, 476, 477, 553, 696, 698, 699, 700, 831, 852, 855, 858, 876], "fit_fiduci": [156, 363], "fit_icp": [156, 363], "n_iter": [156, 363, 582], "nasion_weight": [156, 363], "omit_head_shape_point": [156, 363], "compute_dig_mri_dist": [156, 363], "write_tran": [156, 629, 866], "abil": [156, 177, 179, 194, 654, 655, 724, 727, 853, 857, 864, 876], "set_scale_mod": [156, 363], "fetch_infant_templ": [156, 158, 852, 866, 876], "scale_mri": [156, 363, 636, 866, 876], "clau": [156, 242], "plo": [156, 194, 242], "e0232100": [156, 242], "pone": [156, 194, 242], "0232100": [156, 242], "25_automated_coreg": [156, 163], "concept": [157, 175, 224, 242, 831, 859, 862], "make_watershed_bem": [157, 190, 831, 855, 866, 876], "make_flash_bem": [157, 301, 831, 866, 876], "plot_bem": [157, 159, 307, 759, 855, 858, 866, 876], "plot_bem_kwarg": 157, "brain_surfac": [157, 761], "mrilab": [157, 861], "isn": [157, 165, 221, 239, 258, 262, 378, 400, 401, 618, 621, 624, 699, 835, 855], "candid": [157, 198, 831, 857], "oct4": 157, "90mm": 157, "57798": 157, "24365": 157, "20377": [157, 193], "32480": 157, "22941": 157, "2787": 157, "9357": 157, "20154": 157, "846": [157, 181, 229], "10797": 157, "12738": 157, "13229": 157, "10203": 157, "2362": [157, 203, 242, 556], "10376": 157, "midpoint": [157, 189, 264, 265, 761, 858, 876], "make_bem_model": [157, 160, 190, 275, 363, 427, 458, 514, 520, 604, 633, 635, 824, 851, 866, 876], "4th": [157, 197, 262, 263, 264, 265, 410, 419, 443, 444, 446, 447, 476, 477, 568, 569], "icosahedron": [157, 159, 160, 254, 269, 273, 277, 644, 801], "n_tri": [157, 159, 268, 824], "topologi": [157, 200, 543, 876], "commonli": [157, 167, 169, 174, 200, 239, 267, 466, 556, 831, 876], "474": [157, 224, 229, 275], "gone": 157, "adequ": [157, 205, 267], "1422": [157, 168, 193], "fwd_fix": 157, "explicitli": [157, 171, 187, 194, 199, 201, 202, 203, 232, 257, 262, 263, 264, 265, 267, 272, 295, 296, 301, 308, 311, 327, 352, 356, 357, 367, 368, 369, 408, 410, 415, 424, 429, 446, 447, 451, 452, 471, 473, 474, 476, 477, 509, 534, 555, 556, 558, 571, 572, 573, 578, 582, 590, 592, 599, 601, 641, 648, 649, 650, 659, 660, 662, 664, 682, 683, 684, 685, 686, 687, 696, 698, 699, 700, 704, 705, 706, 707, 709, 727, 767, 773, 774, 777, 779, 780, 783, 792, 797, 833, 835, 851, 857, 864, 876], "src_hemi": 157, "apply_forward": [157, 283, 866, 876], "write_forward_solut": [157, 616, 866, 876], "justifi": [157, 447, 476, 477, 876], "claim": 157, "751": [157, 163], "30_forward": [157, 163], "centimet": 158, "fs_dir": [158, 384], "live": [158, 200, 835, 876], "1005": 158, "new_nam": 158, "rstrip": 158, "fp": [158, 444, 654], "999994": 158, "003552": 158, "000202": 158, "003558": 158, "998389": 158, "056626": 158, "000001": [158, 225, 228], "998395": 158, "2433": [158, 168], "7809": 158, "4478": 158, "8001": 158, "6mo": [158, 386], "ants6": 158, "0months3t": 158, "come": [158, 174, 180, 187, 188, 200, 201, 203, 205, 215, 225, 239, 268, 273, 370, 499, 517, 611, 831, 833, 835, 839, 840, 852, 858, 876], "fname_1020": 158, "mon": [158, 499], "read_dig_fif": [158, 310, 323, 326, 329, 330, 331, 333, 334, 335, 858, 866, 876], "03d": [158, 493], "99975431": 158, "01839625": 158, "01236795": 158, "00087239": 158, "0143472": 158, "96230429": 158, "27159646": 158, "01252444": 158, "01689809": 158, "27135229": 158, "96233177": 158, "03137219": 158, "48640": 158, "48214": 158, "35_eeg_no_mri": [158, 163], "readabl": [159, 262, 263, 264, 265, 372, 410, 419, 444, 446, 447, 476, 477, 816, 835], "superior": [159, 270, 276, 278, 619, 743, 831, 858], "wide": [159, 165, 213, 835, 857], "unfamiliar": [159, 839], "unsign": [159, 269, 270, 273, 276, 277, 278, 876], "triplet": [159, 267, 452, 523, 646], "geograph": 159, "earth": 159, "north": 159, "prime": [159, 169], "meridian": 159, "degre": [159, 161, 204, 224, 226, 229, 232, 254, 259, 264, 265, 267, 301, 305, 487, 582, 649, 683, 684, 686, 687, 696, 743, 748, 779, 811, 831, 841, 855, 858, 876], "nonetheless": [159, 200], "scanner": [159, 275, 470, 852, 858], "nativ": [159, 181, 187, 188, 262, 263, 264, 265, 314, 323, 328, 438, 439, 440, 441, 476, 477, 493, 500, 610, 743, 745, 852, 855, 864, 876], "mind": [159, 161, 174, 200, 253, 835], "si": [159, 189, 224, 238, 262, 263, 264, 265, 296, 452, 476, 477, 777, 779], "xyz_ra": 159, "00000000e": 159, "15484021e": 159, "91852465e": 159, "22726395e": 159, "56816911e": 159, "57160827e": 159, "18960930e": 159, "49011647e": 159, "40284092e": 159, "00712036e": 159, "726": [159, 193, 194, 229], "ras_coords_mm": 159, "inv_affin": 159, "i_": [159, 187], "j_": 159, "k_": 159, "imshow_mri": 159, "ori_slic": 159, "saggit": 159, "ori_nam": 159, "set_path_effect": 159, "reorient": 159, "rightward": 159, "x_order": 159, "lip": 159, "y_order": 159, "torig": 159, "vox2ras_tkr": [159, 181], "conform": [159, 189, 256, 858, 876], "matter": [159, 169, 262, 263, 264, 265, 268, 466, 476, 477, 509, 556, 601, 696, 698, 699, 700, 777, 851, 857, 876], "freeurfer": 159, "whenev": [159, 200, 835, 853], "everywher": 159, "xyz_mri": 159, "digpoint": [159, 363, 876], "nasion_head": 159, "nasion_dig_mri": 159, "nasion_dig_vox": 159, "convention": 159, "rr_mm": 159, "313728": 159, "80481719970703": 159, "rr_vox": 159, "tricontour": 159, "renderer_kwarg": 159, "curv": [159, 194, 262, 263, 264, 265, 267, 476, 477, 657, 694, 698, 700, 858, 861], "read_curvatur": [159, 866], "y_shift": 159, "z_shift": 159, "this_rr": 159, "this_tri": 159, "copper_r": 159, "quiver3d": [159, 204, 876], "1050": 159, "wirefram": 159, "cyan": [159, 476, 477, 796], "line_width": 159, "cull": 159, "render_lines_as_tub": 159, "uniformli": [159, 190, 205, 473], "uniform": [159, 363, 429, 523, 648, 663, 686, 687, 831, 876], "subsampl": [159, 257, 260, 261, 262, 263, 264, 265, 269, 270, 273, 275, 276, 277, 278, 476, 477, 513, 572, 573, 644, 682, 696, 699, 708, 743, 851, 876], "rr_sph": 159, "mri_mni_tran": 159, "xyz_mni": 159, "02248488": 159, "00844919": 159, "03621711": 159, "00111715": 159, "07107091": 159, "91486582": 159, "40609791": 159, "02300193": 159, "00875602": 159, "43369992": 159, "02811882": 159, "03356932": 159, "land": [159, 219], "50_background_freesurfer_mn": [159, 163], "aris": [160, 197, 575], "ezemikulan": 160, "blender_freesurf": 160, "ezequiel": [160, 876], "mikulan": [160, 876], "manorama": [160, 876], "kadwani": [160, 876], "shutil": 160, "flash": [160, 275, 301, 305, 581, 759, 876], "surf_dir": 160, "problemat": [160, 188, 200, 203, 204, 208, 224, 262, 263, 272, 306, 328], "skill": [160, 835], "conv": 160, "conv_dir": 160, "makedir": 160, "exist_ok": 160, "read_metadata": [160, 627], "write_surfac": [160, 627, 630, 866, 876], "wavefront": [160, 627, 829, 876], "vert": [160, 177, 221, 239, 275], "preset": [160, 269, 270, 273, 276, 277, 278, 743, 801, 806], "beginn": [160, 837, 860], "teach": [160, 176, 242, 876], "_fix": 160, "inner_skull_fix": 160, "backup": 160, "mistak": [160, 835, 855], "inner_skull_orig": 160, "volume_info": [160, 627, 829], "vol_info": 160, "faulti": 160, "write_head_bem": [160, 866, 876], "head_dir": 160, "read_bem_surfac": [160, 513, 514, 603, 866, 876], "make_scalp_surfac": [160, 842, 866, 876], "shrinkwrap": 160, "\u2460": 160, "\u2461": 160, "\u2462": 160, "\u2464": 160, "tab": [160, 254, 467, 544, 751, 835, 853], "\u2465": 160, "\u2467": 160, "noth": [160, 183, 184, 199, 259, 262, 263, 264, 265, 271, 274, 352, 363, 408, 415, 419, 421, 476, 477, 555, 556, 570, 638, 696, 698, 700, 746, 756, 760, 775, 782, 786, 795, 798, 803, 805, 852, 861, 876], "\u2468": 160, "extrus": 160, "extrud": 160, "rough": [160, 855], "ahead": [160, 835], "kernel": [160, 189, 193, 224, 239, 242, 269, 270, 273, 276, 277, 278, 414, 649, 833, 839, 841, 855, 876], "mri_convert": [160, 858], "fwhm": [160, 712, 722, 726, 866, 876], "t1_smoothed_3": 160, "delet": [160, 170, 198, 199, 209, 256, 259, 262, 263, 264, 265, 271, 361, 408, 415, 476, 477, 555, 556, 570, 640, 696, 698, 700, 760, 782, 786, 795, 798, 803, 835, 843, 858, 876], "cleaner": [160, 200], "encount": [160, 164, 188, 200, 442, 833, 841, 855], "runtimeerror": 160, "20516": [160, 193], "isomorph": 160, "defect": [160, 254, 306, 363, 427, 458, 604, 633, 635, 824, 855, 876], "733": [160, 194, 229], "1014": [160, 207], "2068": 160, "7732": 160, "8435": [160, 876], "8489": 160, "10181": 160, "11120": [160, 876], "11121": 160, "11122": [160, 876], "11304": 160, "11788": 160, "disrupt": 160, "999668": 160, "wrong": [160, 834, 876], "easiest": [160, 197, 199, 201, 219, 835, 838], "unedit": 160, "gpl": 160, "water": 160, "clean_from_arrai": 160, "131": [160, 163, 168, 228, 229, 232, 236, 333], "80_fix_bem_in_blend": [160, 163], "bb": [161, 437], "pp": [161, 262, 263, 298, 429, 678], "desc": [161, 204, 271], "66000": 161, "write_cov": [161, 605, 866, 876], "noise_cov_baselin": 161, "noise_cov_reg": 161, "1769": 161, "1785": 161, "423": [161, 224, 229], "1797": 161, "freedom": [161, 204, 224, 226, 229, 232, 259, 264, 265, 467, 683, 684, 686, 687, 759, 778, 855, 876], "violat": [161, 835, 855], "hack": [161, 239], "evoked_meg": 161, "empty_room": 161, "improp": [161, 876], "overestim": [161, 202], "juha": [161, 208, 242, 584, 855], "simola": [161, 208, 242, 584, 855], "kajola": [161, 208, 242, 429, 567, 584, 855, 858], "3359": [161, 242, 855], "3372": [161, 242, 855], "tsp": [161, 203, 242, 352, 556, 855], "853302": [161, 242, 855], "90_compute_covari": [161, 163], "auto_tutorials_forward": 163, "emphasi": [164, 264, 265, 777, 859], "topic": [164, 165, 188, 197, 200, 202, 242, 295, 850, 859, 860], "knowledg": [164, 239, 851, 857], "unexplain": 164, "experienc": [164, 558, 857], "troubl": [164, 876], "configur": [164, 167, 172, 173, 189, 205, 213, 229, 262, 263, 267, 355, 383, 456, 457, 467, 476, 477, 500, 534, 544, 556, 568, 569, 640, 643, 695, 738, 743, 773, 790, 796, 809, 810, 811, 833, 840, 852, 854, 855, 858, 861, 864, 866, 876], "infrar": [164, 189, 211, 212, 242, 262, 263, 264, 265, 267, 351, 437, 476, 477, 504, 553, 586, 587, 588, 590, 696, 698, 699, 700, 743, 767, 776, 781, 842, 852, 858, 876], "spectroscopi": [164, 189, 211, 212, 242, 262, 263, 264, 265, 267, 351, 437, 476, 477, 504, 553, 586, 587, 588, 590, 696, 698, 699, 700, 743, 767, 776, 781, 842, 852, 858, 876], "ssvep": [164, 169, 240, 241, 262, 267, 310, 326, 437, 486, 553, 698, 805, 866, 876], "vssr": [164, 240, 241, 262, 267, 310, 326, 437, 486, 553, 698, 805, 852], "bti": [164, 185, 186, 224, 259, 260, 262, 264, 265, 267, 300, 352, 449, 451, 487, 520, 759, 771, 858, 876], "twowai": [164, 230, 231, 262, 267, 476, 553, 611, 677, 679, 680, 684, 699, 726, 876], "anova": [164, 194, 224, 227, 230, 231, 235, 236, 262, 264, 265, 267, 273, 275, 358, 476, 522, 523, 537, 553, 611, 626, 668, 677, 678, 679, 680, 684, 687, 688, 699, 726, 743, 876], "spatiotempor": [164, 226, 230, 231, 242, 262, 264, 265, 267, 316, 476, 553, 584, 611, 676, 683, 687, 688, 699, 726, 764, 767, 876], "strf": [164, 195, 196, 414, 420, 448], "submodul": [164, 165, 197, 203, 205, 213, 219, 222, 835, 876], "corrupt": [164, 197, 198, 222, 223, 259, 262, 265, 266, 267, 268, 273, 352, 362, 449, 476, 522, 523, 537, 616, 619, 660, 663, 743, 855, 876], "auto_tutorials_python": 164, "auto_tutorials_jupyt": 164, "varieti": [165, 187, 189, 197, 213, 858], "smoothli": [165, 199, 213, 259, 262, 263, 264, 265, 271, 408, 415, 476, 477, 555, 556, 696, 698, 700, 775, 782, 786, 795, 798, 803], "substitut": [165, 370, 833, 857, 858], "glimps": [165, 213], "41700": 165, "custom_ref_appli": [165, 168, 213, 219, 267, 876], "file_id": [165, 168, 213, 262, 263, 264, 265, 267, 476, 477, 478, 861, 876], "hpi_mea": [165, 168, 213, 267, 876], "hpi_result": [165, 168, 213, 267, 876], "meas_dat": [165, 167, 168, 199, 213, 215, 219, 256, 262, 263, 264, 265, 267, 475, 476, 477, 478, 556, 585, 790, 796, 876], "utc": [165, 168, 213, 215, 262, 263, 264, 265, 267, 476, 477, 876], "meas_id": [165, 168, 213, 262, 263, 264, 265, 267, 476, 477, 478, 861, 876], "breviti": 165, "walk": [165, 203, 205], "orig_raw": 165, "chan_idx": 165, "sent": [165, 167, 189, 190, 203, 214], "deliveri": 165, "squarewav": 165, "unambigu": [165, 167], "older": [165, 167, 169, 318, 428, 476, 861, 876], "summat": [165, 167, 200, 688], "6994": 165, "7086": 165, "7192": 165, "7304": 165, "7413": 165, "ordinari": [165, 167, 198, 204, 224, 573, 577, 681, 857], "autoreject": [165, 198, 199, 842], "aren": [165, 206, 452], "fewest": 165, "conds_we_care_about": 165, "aud_epoch": 165, "vis_epoch": 165, "136": [165, 168, 170, 175, 194, 207, 224, 229, 275], "richer": 165, "aud_evok": 165, "vis_evok": 165, "classic": [165, 239, 269, 270, 273, 276, 277, 278, 725, 728, 743, 801, 806], "p200": [165, 190], "dorso": 165, "evoked_diff": [165, 209], "underdetermin": 165, "akin": 165, "inverse_operator_fil": 165, "inv_oper": 165, "\u03bb\u00b2": 165, "61922423e": 165, "06837855e": 165, "49139511e": 165, "738": [165, 173, 229], "718": [165, 229], "10_overview": [165, 173], "obligatorili": 166, "unexpect": [166, 194, 242, 262, 263, 264, 265, 316, 352, 504, 855], "apply_funct": [166, 262, 263, 264, 265, 476, 477, 876], "unprocess": [166, 861], "original_raw": 166, "complex128": [166, 262, 263, 264, 265, 476, 477], "certain": [166, 167, 190, 197, 201, 203, 208, 238, 260, 264, 265, 383, 434, 463, 476, 477, 534, 556, 574, 585, 683, 684, 777, 809, 833, 835, 857, 858, 876], "rereferenc": [166, 239], "unaffect": [166, 201, 414], "rereferenced_raw": 166, "ref_data": [166, 641], "fig_orig": 166, "fig_reref": 166, "unless": [166, 262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 280, 352, 353, 355, 357, 408, 411, 415, 418, 421, 424, 425, 427, 432, 451, 453, 464, 466, 471, 473, 474, 476, 477, 486, 515, 518, 519, 529, 530, 534, 539, 540, 555, 556, 561, 568, 569, 584, 644, 647, 648, 649, 661, 683, 684, 685, 686, 687, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 714, 715, 723, 724, 725, 726, 727, 733, 767, 773, 774, 775, 778, 782, 786, 790, 796, 797, 798, 835, 857, 858, 876], "15_inplac": [166, 173], "broadli": 167, "ram": [167, 197, 199, 213, 214, 215, 216, 262, 263, 476, 477, 556, 773, 790, 796, 876], "36037": [167, 197, 201, 204, 205, 206, 208, 214, 215, 216], "necessarili": [167, 169, 188, 197, 199, 202, 255, 262, 263, 295, 712, 722, 726, 752, 858], "instantan": [167, 221], "receiv": [167, 189, 429, 493, 657, 833, 858, 876], "rectangular": [167, 200, 224, 269, 270, 273, 276, 277, 278, 801, 806], "ttl": [167, 598], "upcom": 167, "newer": [167, 169, 203, 833, 838, 841, 843, 876], "27977": 167, "28345": 167, "28771": 167, "29219": 167, "29652": 167, "preced": [167, 262, 263, 358, 468, 743, 773, 831, 835, 876], "config": [167, 170, 187, 254, 255, 262, 263, 373, 375, 376, 377, 378, 380, 381, 383, 384, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 449, 450, 456, 457, 467, 476, 477, 487, 546, 556, 623, 633, 636, 640, 743, 752, 773, 790, 796, 835, 876], "mne_stim_channel": [167, 170, 255, 449, 450, 476, 477], "mne_stim_channel_1": [167, 255, 449, 450], "saver": [167, 199, 201, 853, 855], "testing_data_fold": 167, "eeglab_raw_fil": 167, "eeglab_raw": 167, "began": 167, "000068": 167, "602": [167, 201, 229, 861], "unmodifi": [167, 206, 504], "custom_map": 167, "annotations_from_ev": [167, 256, 437, 866, 876], "orig_tim": [167, 199, 215, 256, 281, 876], "annot_from_ev": 167, "event_desc": [167, 281], "rem_annot": 167, "rem_ev": 167, "rem_event_dict": 167, "modulo": 167, "onlin": [167, 198, 203, 216, 255, 847, 860, 876], "995": [167, 173, 219, 229], "20_events_from_raw": [167, 173], "alon": [168, 847], "gantri": [168, 267, 876], "blank": [168, 213, 696, 841, 876], "subject_info": [168, 262, 263, 264, 265, 267, 476, 477, 478, 876], "device_info": [168, 262, 263, 264, 265, 267, 440, 476, 477, 478, 876], "helium_info": [168, 262, 263, 264, 265, 267, 476, 477, 478, 876], "hpi_subsystem": [168, 267], "proc_histori": [168, 262, 263, 264, 265, 267, 476, 477, 478], "proj_id": [168, 213, 262, 263, 264, 265, 267, 476, 477, 478], "proj_nam": [168, 213, 262, 263, 264, 265, 267, 476, 477, 478], "utc_offset": [168, 262, 263, 264, 265, 267, 476, 477, 478, 876], "line_freq": [168, 239, 267], "gantry_angl": [168, 267], "ctf_head_t": [168, 267, 861], "dev_ctf_t": [168, 267, 861], "acq_par": [168, 213, 255, 267], "acq_stim": [168, 267], "xplotter_layout": [168, 267], "kit_system_id": [168, 267], "0143": 168, "0142": 168, "0213": 168, "0212": [168, 333], "0222": 168, "0223": 168, "0232": 168, "0233": 168, "0313": 168, "0312": 168, "0322": 168, "0323": 168, "0333": 168, "0332": 168, "0343": 168, "0342": 168, "0413": 168, "0412": 168, "0422": 168, "0423": 168, "0432": 168, "0433": 168, "0443": 168, "0442": 168, "0513": 168, "0512": 168, "0523": [168, 242, 661], "0522": 168, "0532": 168, "0533": 168, "0542": 168, "0543": 168, "0613": 168, "0612": 168, "0622": 168, "0623": 168, "0633": 168, "0632": 168, "0643": 168, "0713": 168, "0712": 168, "0723": 168, "0722": 168, "0733": 168, "0732": 168, "0743": 168, "0742": 168, "0813": 168, "0822": 168, "0823": 168, "0913": 168, "0912": 168, "0923": 168, "0922": 168, "0932": 168, "0933": 168, "0943": 168, "1012": [168, 194], "1023": [168, 194], "1022": 168, "1042": [168, 333], "1112": 168, "1113": 168, "1123": [168, 207], "1122": [168, 201], "1133": [168, 194], "1132": 168, "1143": 168, "1213": 168, "1212": 168, "1223": 168, "1222": 168, "1232": 168, "1233": 168, "1243": [168, 194], "1242": 168, "1312": 168, "1313": 168, "1322": 168, "1343": 168, "1412": 168, "1413": 168, "1423": 168, "1433": [168, 193], "1432": [168, 193], "1442": [168, 193], "1443": 168, "1512": [168, 207, 242, 471], "1513": 168, "1523": [168, 242, 712, 722, 723, 725, 726, 728], "1533": 168, "1532": 168, "1543": 168, "1542": 168, "1612": 168, "1622": 168, "1623": 168, "1632": 168, "1633": 168, "1642": 168, "1713": 168, "1712": 168, "1722": 168, "1732": 168, "1733": 168, "1743": 168, "1742": 168, "1813": 168, "1812": [168, 193], "1822": 168, "1833": 168, "1843": [168, 193], "1912": 168, "1913": 168, "1923": 168, "1922": 168, "1932": 168, "1933": 168, "1943": 168, "1942": 168, "2023": 168, "2032": 168, "2033": 168, "2042": 168, "2112": 168, "2122": 168, "2133": 168, "2132": 168, "2143": [168, 242, 725, 728], "2142": 168, "2212": 168, "2213": 168, "2223": 168, "2222": 168, "2233": 168, "2242": [168, 213], "2243": [168, 193], "2312": 168, "2313": [168, 208], "2323": 168, "2322": 168, "2343": 168, "2342": 168, "2412": 168, "2413": [168, 193], "2422": 168, "2432": 168, "2442": 168, "2512": 168, "2513": 168, "2523": 168, "2533": 168, "2532": [168, 193], "2543": 168, "2542": 168, "2612": 168, "2613": 168, "2623": 168, "2633": 168, "bear": [168, 835, 855, 876], "scanno": [168, 267, 861], "logno": [168, 267, 861], "cal": [168, 267, 318, 475, 861], "coil_typ": [168, 267, 852], "unit_mul": [168, 267, 861], "116": [168, 224, 229, 236], "148": [168, 194, 224, 229], "193": [168, 207, 224, 228, 229, 876], "194": [168, 224, 229, 242, 858, 876], "212": [168, 200, 207, 216, 218, 224, 229, 242], "224": [168, 170, 187, 207, 224, 228, 229], "229": [168, 229], "237": [168, 207, 229], "254": [168, 193, 207, 224, 228], "311": [168, 229], "318": [168, 194, 224, 229], "321": [168, 200, 229], "322": [168, 224, 229], "323": [168, 207, 208, 229], "324": [168, 207, 212], "327": [168, 193, 229], "329": [168, 207, 229], "338": [168, 224, 229], "341": [168, 229, 521], "345": [168, 207, 224, 229], "347": [168, 207, 229, 876], "349": [168, 229, 242, 858], "oxyhemoglobin": [168, 262, 263, 264, 265, 476, 477, 553, 696, 698, 699, 700, 831, 858], "deoxyhemoglobin": [168, 189, 262, 263, 264, 265, 476, 477, 553, 696, 698, 699, 700, 831, 858], "hbo": [168, 189, 209, 213, 219, 262, 263, 264, 265, 309, 369, 371, 476, 477, 553, 696, 698, 699, 700, 831, 858], "hbr": [168, 189, 209, 213, 219, 262, 263, 264, 265, 309, 369, 371, 476, 477, 553, 696, 698, 699, 700, 831, 858], "express": [168, 198, 425, 437, 484, 491, 498, 531, 550, 575, 602, 619, 710, 857, 858, 861, 876], "pick_channels_regexp": [168, 198, 203, 205, 210, 547, 866], "unawar": 168, "accident": [168, 215, 661, 876], "channel_typ": [168, 203, 262, 263, 264, 265, 267, 476, 477, 556, 696, 698, 699, 700, 866], "emb": 168, "comprehens": [168, 194, 213, 224, 226, 408, 835, 857], "channel_indices_by_typ": [168, 866], "ch_idx_by_typ": 168, "exci": [168, 213, 262, 263, 264, 265, 309, 476, 477, 553, 696, 698, 699, 700, 858], "ia": [168, 213, 262, 263, 264, 265, 267, 309, 476, 477, 553, 696, 698, 699, 700, 858, 876], "syst": [168, 213, 262, 263, 264, 265, 309, 476, 477, 553, 696, 698, 699, 700, 858], "bio": [168, 219, 262, 263, 264, 265, 309, 371, 441, 476, 477, 491, 553, 696, 698, 699, 700, 858], "temperatur": [168, 262, 263, 264, 265, 309, 476, 477, 553, 696, 698, 699, 700, 831, 852, 858, 876], "gsr": [168, 262, 263, 264, 265, 309, 476, 477, 553, 696, 698, 699, 700, 858, 876], "fnirs_cw_amplitud": [168, 189, 209, 262, 263, 264, 265, 369, 476, 477, 831], "fnirs_fd_ac_amplitud": [168, 189, 262, 263, 264, 265, 369, 476, 477, 831], "fnirs_fd_phas": [168, 189, 262, 263, 264, 265, 369, 476, 477, 831], "fnirs_od": [168, 262, 263, 264, 265, 369, 476, 477, 831], "eeg_indic": 168, "ipython": [168, 262, 263, 476, 477, 556, 773, 790, 796, 833, 846, 855, 857, 859], "30_info": [168, 173], "mplot3d": [169, 204, 224], "axes3d": [169, 204, 224, 260, 262, 263, 264, 265, 476, 477, 771, 799, 876], "plai": [169, 203, 221, 239, 724, 727, 857, 858], "eeg_posit": 169, "builtin_montag": 169, "montage_nam": 169, "montage_descript": 169, "standard_alphabet": 169, "a1": [169, 206], "b2": 169, "standard_postfix": 169, "postfix": 169, "intermedi": [169, 198, 268, 287, 289, 682, 743, 858], "standard_prefix": 169, "standard_prim": 169, "biosemi16": [169, 224], "biosemi": [169, 224, 336, 484, 858], "cap": [169, 194, 224, 831, 852, 876], "biosemi32": [169, 224], "biosemi64": [169, 224], "biosemi160": 169, "biosemi256": 169, "easycap": [169, 224, 239, 876], "m10": [169, 876], "egi_256": 169, "geodes": [169, 466, 509, 666, 667, 668, 670, 671, 876], "gsn": [169, 440], "hydrocel": [169, 440], "64_1": 169, "65_1": 169, "mgh60": [169, 876], "mgh70": [169, 876], "brainvis": [169, 328, 329, 437, 441, 476, 477, 486, 602, 852, 858, 876], "artini": [169, 189, 326, 876], "octamon": [169, 189, 876], "detector": [169, 189, 209, 213, 499, 589, 590, 743, 759, 858, 876], "brite23": [169, 876], "brainproduct": 169, "rnp": 169, "ba": [169, 443, 858, 876], "easycap_montag": 169, "digmontag": [169, 181, 262, 263, 264, 265, 267, 313, 314, 323, 326, 328, 329, 330, 331, 332, 333, 334, 335, 363, 460, 476, 477, 488, 793, 813, 816, 831, 866, 876], "headshap": [169, 254, 303, 310, 323, 335, 876], "gca": 169, "view_init": [169, 204, 224], "azim": [169, 204], "ssvep_fold": 169, "ssvep_data_raw_path": 169, "se": [169, 199, 210, 239, 858], "02_se": [169, 239], "ssvep_eeg": [169, 239], "ssvep_raw": 169, "read_raw_brainvis": [169, 188, 239, 482, 858, 866, 876], "circumfer": 169, "t4": 169, "t3": [169, 318, 476, 876], "075": 169, "sample_data_raw_path": 169, "sample_raw": 169, "ax2d": 169, "add_subplot": [169, 224], "ax3d": 169, "irregular": [169, 855, 876], "fastrak": 169, "predefin": [169, 831], "layout_dir": 169, "iterdir": 169, "IN": 169, "ctf151": [169, 224, 336], "lai": [169, 505, 858, 876], "ctf275": [169, 224, 336], "eeg1005": [169, 336], "egi256": [169, 336], "geodesicheadweb": [169, 336], "AS": [169, 336], "umd": [169, 224, 336], "neuromag_122": [169, 336], "grad_norm": [169, 336], "magneswh3600": [169, 336, 487], "biosemi_layout": 169, "make_eeg_layout": [169, 319, 325, 866], "layout_from_raw": 169, "make_meg_layout": 169, "snugli": 169, "40_sensor_loc": [169, 173], "suit": [170, 847], "get_config": [170, 383, 640, 866, 876], "unnam": 170, "mne_use_cuda": [170, 373, 833], "json": [170, 457], "unset": [170, 262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 280, 352, 353, 355, 357, 411, 418, 421, 424, 425, 451, 464, 466, 476, 477, 515, 518, 519, 529, 530, 539, 540, 561, 568, 569, 644, 647, 648, 649, 661, 683, 684, 685, 686, 687, 698, 700, 701, 702, 703, 704, 705, 706, 714, 715, 723, 724, 725, 726, 727, 775, 778, 797, 833, 876], "typeerror": [170, 175, 767, 876], "err": [170, 202, 342], "nonetyp": 170, "unsur": [170, 201, 835], "fallback": [170, 262, 263, 476, 477, 773, 796, 857, 876], "missing_config_kei": 170, "mne_browse_raw_s": 170, "979166666666666": 170, "mne_datasets_brainstorm_path": 170, "mne_datasets_eegbci_path": [170, 378, 383], "mne_datasets_epilepsy_ecog_path": [170, 380], "mne_datasets_erp_core_path": [170, 381], "mne_datasets_fieldtrip_cmc_path": 170, "mne_datasets_fnirs_motor_path": [170, 388], "mne_datasets_hf_sef_path": [170, 390], "mne_datasets_kiloword_path": [170, 391], "mne_datasets_limo_path": [170, 392], "mne_datasets_misc_path": [170, 393], "mne_datasets_mtrf_path": [170, 394], "mne_datasets_multimodal_path": [170, 395], "mne_datasets_opm_path": 170, "mne_datasets_phantom_4dbti_path": [170, 397], "mne_datasets_refmeg_noise_path": [170, 398], "mne_datasets_sample_path": [170, 383, 399], "mne_datasets_somato_path": [170, 402], "mne_datasets_spm_face_path": 170, "mne_datasets_ssvep_path": [170, 404], "mne_datasets_testing_path": 170, "mne_datasets_ucl_opm_auditory_path": [170, 405], "mne_logging_level": [170, 643], "mne_browser_precomput": [170, 262, 263, 476, 477, 556, 773, 790, 796], "mne_browser_backend": [170, 262, 263, 476, 477, 556, 773, 790, 796, 876], "mne_browser_overview_mod": [170, 262, 263, 476, 477, 556, 773, 790, 796], "hidden": [170, 171, 262, 263, 476, 477, 556, 743, 773, 790, 796, 876], "mne_3d_option_them": [170, 743, 876], "mne_3d_option_multi_sampl": [170, 833, 876], "mne_browser_them": [170, 262, 263, 476, 477, 556, 773, 790, 796, 876], "recogn": [170, 205, 491, 857, 876], "mne_3d_option_antialia": [170, 809, 833, 876], "mne_3d_option_depth_peel": [170, 809], "mne_3d_option_smooth_shad": [170, 752, 809], "mne_browser_use_opengl": [170, 262, 263, 476, 477, 556, 773, 790, 796, 876], "mne_cache_dir": 170, "mne_coreg_advanced_rend": 170, "mne_coreg_copy_annot": 170, "mne_coreg_fullscreen": [170, 467], "mne_coreg_guess_mri_subject": 170, "mne_coreg_head_high_r": [170, 467], "mne_coreg_head_opac": [170, 467], "mne_coreg_head_insid": 170, "mne_coreg_interact": 170, "mne_coreg_mark_insid": 170, "mne_coreg_prepare_bem": 170, "mne_coreg_orient_to_surfac": 170, "mne_coreg_scale_label": 170, "mne_coreg_scale_by_dist": 170, "mne_coreg_scene_scal": 170, "mne_coreg_window_height": 170, "mne_coreg_window_width": [170, 467], "mne_coreg_subjects_dir": 170, "mne_cuda_devic": [170, 876], "mne_cuda_ignore_precis": 170, "mne_datasets_megsim_path": 170, "mne_datasets_spm_face_datasets_test": 170, "mne_datasets_visual_92_categories_path": [170, 406], "mne_force_seri": 170, "mne_kit2fiff_stim_channel": 170, "mne_kit2fiff_stim_channel_cod": 170, "mne_kit2fiff_stim_channel_slop": 170, "mne_kit2fiff_stim_channel_threshold": 170, "mne_memmap_min_s": 170, "mne_repr_html": [170, 876], "mne_skip_ftp_test": 170, "mne_skip_network_test": 170, "mne_skip_testing_dataset_test": 170, "mne_tqdm": [170, 876], "mne_use_numba": 170, "misspel": 170, "mnee_use_cuudaa": 170, "intro": [170, 171, 239], "50_configure_mn": [170, 173], "runtimewarn": [170, 740], "unrecogn": [170, 262, 263, 264, 265, 267, 476, 477, 876], "concern": [170, 202, 224, 495, 575, 609, 613], "userprofil": [170, 457], "linux": [170, 695, 834, 835, 836, 838, 840, 841, 843, 876], "maco": [170, 835, 836, 838, 839, 840, 876], "get_config_path": [170, 866, 876], "home_dir": [170, 456, 457, 640], "use_env": [170, 456], "set_env": [170, 640, 876], "python_env": [170, 203], "minimal_cmd": 170, "usr": [170, 695, 841, 846], "sbin": 170, "statement": [170, 171, 224, 642, 841], "fresh": 170, "me": [170, 691], "worrisom": 170, "set_log_level": [170, 642, 741, 866], "temporarili": [170, 204, 205, 262, 263, 264, 265, 374, 410, 446, 476, 477, 556, 773, 790, 796], "kit_data_path": 170, "abspath": 170, "use_log_level": [170, 237, 866], "432": [170, 207, 229], "496": [170, 207, 229, 275], "meg160": 170, "v2r004": 170, "160ch": 170, "jan24": 170, "eq1160c": 170, "dewar": 170, "fll": 170, "board": 170, "adc": [170, 188], "alloc": [170, 683, 684, 686, 687], "shorthand": 170, "whatev": [170, 206, 476, 477, 699, 835], "hasn": [170, 568, 876], "sys_info": [170, 272, 833, 834, 855, 866, 876], "stdout": [170, 642, 695, 876], "platform": [170, 262, 263, 264, 265, 476, 477, 695, 698, 700, 796, 834, 838, 843, 847, 864], "aw": [170, 253, 695], "x86_64": [170, 695, 834, 841], "glibc2": [170, 695, 834], "nov": [170, 298], "gcc": [170, 695, 834], "cpu": [170, 262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 280, 352, 353, 355, 357, 411, 418, 420, 421, 424, 425, 451, 464, 466, 476, 477, 515, 518, 519, 529, 530, 539, 540, 556, 561, 568, 569, 584, 644, 647, 648, 649, 661, 683, 684, 685, 686, 687, 695, 698, 700, 701, 702, 703, 704, 705, 706, 714, 715, 723, 724, 725, 726, 727, 773, 775, 778, 790, 796, 797, 833, 834], "gb": [170, 695, 833, 834, 841], "dev0": [170, 695, 834], "openbla": [170, 695, 834, 855], "thread": [170, 234, 262, 263, 476, 477, 556, 773, 790, 796, 858], "agg": 170, "numba": [170, 695, 834, 876], "openmeeg": [170, 514, 519, 876], "cupi": [170, 262, 263, 264, 265, 410, 414, 419, 446, 447, 448, 476, 477, 695, 833, 834, 876], "opengl": [170, 254, 262, 263, 467, 476, 477, 556, 695, 773, 790, 796, 833, 841, 847], "mesa": [170, 467, 695, 809, 876], "llvmpipe": [170, 695, 833], "llvm": [170, 695, 833], "ipyvtklink": [170, 864], "vtk": [170, 407, 695, 743, 758, 833, 834, 876], "qtpy": [170, 695, 834], "pyqt6": 170, "ipympl": 170, "pyqtgraph": [170, 262, 263, 476, 477, 556, 695, 773, 790, 796, 876], "pooch": [170, 383, 695, 876], "mne_nir": 170, "mne_featur": 170, "mne_qt_brows": [170, 262, 263, 476, 477, 556, 773, 790, 796, 876], "0dev0": 170, "mne_icalabel": 170, "shell": [171, 182, 208, 242, 254, 513, 520, 834, 835, 840, 841, 842, 855, 858], "deploi": [171, 855], "browser": [171, 190, 213, 254, 262, 263, 272, 476, 477, 544, 556, 751, 755, 773, 790, 796, 812, 815, 835, 876], "tempfil": 171, "ndimag": 171, "raw_tsss": [171, 254, 476, 477, 496], "_eeg": [171, 254, 476, 477, 876], "_ieeg": [171, 254, 476, 477, 876], "underscor": [171, 199, 203, 213, 556], "parse_fold": [171, 272, 876], "add_raw": [171, 272, 876], "slider": [171, 264, 265, 272, 782, 833, 876], "scrub": 171, "report_raw": 171, "jqueri": 171, "bundl": [171, 838, 840, 876], "tableexport": 171, "highlightj": 171, "atom": 171, "meaning": [171, 214, 271, 638, 835], "events_path": 171, "report_ev": 171, "add_epoch": [171, 272, 876], "fly": [171, 226, 262, 263, 476, 477, 729, 741, 773, 796, 876], "make_metadata": [171, 866, 876], "report_epoch": 171, "add_evok": [171, 272], "n_time_point": [171, 272], "evoked_path": 171, "cov_path": 171, "evokeds_subset": 171, "report_evok": 171, "add_covari": [171, 272], "report_cov": 171, "ecg_proj_path": 171, "eog_proj_path": 171, "sample_audvis_eog": [171, 855], "report_proj": 171, "998": [171, 183, 190, 207, 208, 229, 569, 573, 577, 580], "add_ica": [171, 272, 876], "inst": [171, 203, 254, 256, 260, 261, 262, 263, 264, 265, 267, 269, 270, 272, 273, 276, 277, 278, 279, 310, 312, 356, 408, 409, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 467, 476, 477, 555, 556, 557, 564, 565, 574, 578, 583, 599, 638, 641, 650, 681, 696, 698, 699, 700, 726, 727, 728, 786, 787, 788, 790, 797, 876], "ecg_evok": [171, 203, 205, 272], "eog_evok": [171, 202, 203, 205, 272], "artifactu": [171, 197, 200, 203, 242, 556], "find_bads_ecg": [171, 203, 272, 556, 876], "ecg_scor": [171, 203, 272], "liber": 171, "eog_compon": 171, "report_ica": 171, "add_bem": [171, 272, 876], "th": [171, 262, 556, 653, 656, 658, 699, 855, 858], "report_mri_and_bem": 171, "add_tran": [171, 272, 876], "opaqu": [171, 272, 467, 876], "trans_path": 171, "report_coregistr": 171, "add_forward": [171, 272, 743, 876], "fwd_path": 171, "report_forward_sol": 171, "add_inverse_oper": [171, 272], "inverse_op_path": 171, "report_inverse_op": 171, "add_stc": [171, 272, 876], "report_inverse_sol": 171, "01632618": 171, "06303297": 171, "63565434": 171, "add_cod": [171, 272], "syntax": [171, 272, 835, 858], "snippet": [171, 232, 272, 855], "liter": [171, 272, 858], "mne_init_py_path": 171, "__init__": [171, 545], "mne_init_py_cont": 171, "read_text": 171, "utf": [171, 492, 602, 608, 876], "report_cod": 171, "add_figur": [171, 272, 876], "caption": [171, 272, 876], "num": [171, 238], "sky": 171, "image_format": [171, 254, 272, 876], "report_custom_figur": 171, "fig_1": 171, "ax_1": 171, "ax_2": 171, "report_custom_figure_sect": 171, "intuit": [171, 194, 239, 409, 424, 654, 655], "logo": [171, 876], "mne_logo_path": 171, "mne_icon": 171, "fig_arrai": 171, "rotation_angl": 171, "fig_array_rot": 171, "mneqtbrows": [171, 262, 263, 476, 477, 556, 773, 790, 796], "fun": [171, 262, 263, 264, 265, 476, 477], "768": [171, 182, 229], "862": [171, 229], "9176882624364033": 171, "photo": 171, "sketch": 171, "add_imag": [171, 272, 876], "jpeg": [171, 272], "gif": [171, 272, 743, 876], "svg": [171, 254, 272, 876], "report_custom_imag": 171, "add_": 171, "dropdown": [171, 876], "hide": [171, 215, 237, 876], "checkbox": [171, 876], "report_tag": 171, "hdf5": [171, 269, 270, 272, 276, 278, 286, 299, 545, 555, 594, 624, 696, 697, 698, 699, 700, 716, 717, 718, 729, 818, 819, 839, 855, 876], "report_parti": 171, "amend": [171, 330], "report_from_disk": 171, "open_report": [171, 272, 866, 876], "report_fin": 171, "invok": [171, 254, 756, 841, 876], "barebon": [171, 254], "render_bem": [171, 272, 876], "raw_butterfli": [171, 272], "report_parse_folder_bas": 171, "raw_psd": [171, 272, 876], "refin": [171, 274, 318, 358], "report_parse_folder_raw_psd_proj": 171, "mri_decim": [171, 254, 272], "report_parse_folder_mri_bem": 171, "temporarydirectori": 171, "n_time_points_evok": [171, 272], "report_parse_folder_evok": 171, "tmp": 171, "tmp7mbttxeh": 171, "info_fnam": [171, 272], "report_parse_folder_cov": 171, "add_html": [171, 272, 876], "remind": [171, 556, 835], "my_html": 171, "ol": [171, 681, 864, 876], "manifest": [171, 201, 202, 203, 205, 831], "n1": 171, "report_add_html": 171, "70_report": [171, 173], "auto_tutorials_intro": 173, "717": 173, "volsourceestim": [174, 179, 180, 269, 270, 273, 274, 276, 278, 287, 289, 290, 291, 292, 293, 294, 511, 518, 523, 524, 525, 526, 527, 529, 539, 624, 637, 831, 866, 876], "mixedsourceestim": [174, 270, 273, 276, 277, 278, 624, 831, 866, 876], "carri": [174, 197, 203, 239, 484, 677], "belong": [174, 267, 268, 272, 618, 673, 742, 743, 861], "shape_lh": 174, "is_equ": 174, "suspect": 174, "nth": [174, 203, 257, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 572, 573, 696, 699], "peak_vertex": 174, "vert_as_index": [174, 179, 269, 270, 273, 276, 277, 278], "peak_vertex_surf": 174, "peak_valu": 174, "logic": [174, 226, 229, 262, 263, 264, 265, 267, 467, 476, 477, 478, 556, 575, 861, 876], "lh_coordin": 174, "rh_coordin": 174, "10_stc_class": [174, 186], "gist": [175, 188, 262, 263, 264, 265, 476, 477, 855], "load_mni152_templ": 175, "fname_av": 175, "fname_surf_lh": 175, "n100m": 175, "evoked_ful": 175, "posixpath": [175, 180], "7283": 175, "6941": 175, "5323": 175, "2659": 175, "0605": 175, "7276": 175, "4483": 175, "mni_po": 175, "to_mni": [175, 260, 876], "mri_po": 175, "to_mri": [175, 260, 876], "best_dip_idx": 175, "to_volume_label": [175, 260, 876], "fig_t1": 175, "cut_coord": 175, "fig_templ": 175, "pred_evok": 175, "inf": [175, 190, 197, 220, 262, 263, 264, 265, 280, 413, 473, 474, 476, 477, 507, 569, 696, 698, 700, 701, 703, 704, 706, 714, 715, 751, 797, 803, 876], "best_idx": 175, "best_tim": 175, "conf": [175, 260, 835], "plot_param": 175, "0f": [175, 264, 265, 778], "20_dipole_fit": [175, 186], "dip_fix": 175, "7509": 175, "6603": 175, "jukka": [175, 177, 242, 876], "sarva": [175, 242], "electromagnet": [175, 177, 197, 205, 208, 221, 242, 295, 296, 429, 523, 567, 584, 831, 858], "biomagnet": [175, 242], "200m": 176, "500m": 176, "fig_cov": [176, 259, 768], "fig_spectra": 176, "1705": [176, 179], "1468": 176, "1574": 176, "608": 176, "write_inverse_oper": [176, 537, 866, 876], "6837": 176, "16026e": 176, "set_color": [176, 182], "98df81": [176, 182], "vertno_max": 176, "time_max": [176, 177], "677": [176, 186, 229, 239, 241], "30_mne_dspm_loreta": [176, 186], "left_auditori": 177, "dip_po": 177, "dip_ori": 177, "dip_len": 177, "dip_tim": 177, "rgb": [177, 269, 270, 273, 276, 277, 278, 461, 466, 743, 759, 762, 801, 806, 807], "actual_amp": [177, 182, 184], "actual_gof": [177, 182, 184], "outward": [177, 260, 270, 276, 278, 363, 771, 855], "moment": [177, 179, 267, 270, 276, 278, 316, 340, 342, 343, 344, 429, 566, 567, 575, 584, 806], "06165525": 177, "70033915": 177, "34794621": 177, "inward": [177, 855], "curvatur": [177, 269, 270, 273, 276, 277, 278, 694, 743, 801, 806, 861, 876], "collaps": [177, 272, 430], "brain_mag": 177, "overlay_alpha": [177, 270, 276, 278, 806], "44205e": 177, "79973942": 177, "38378769": 177, "8347911": 177, "somewhat": [177, 197], "strai": 177, "unrestrict": 177, "brain_loos": 177, "03844879": 177, "68532258": 177, "12541436": 177, "risto": [177, 204, 205, 242, 523, 858], "ilmoniemi": [177, 204, 205, 242, 523, 858], "knuutila": [177, 242], "olli": [177, 242], "lounasmaa": [177, 242], "noninvas": [177, 242], "modern": [177, 187, 242, 384, 833, 858, 860, 876], "revmodphi": [177, 242], "fa": [177, 242, 534, 653, 658], "hsuan": [177, 242, 534, 653, 658], "lin": [177, 193, 242, 414, 534, 653, 658], "belliveau": [177, 242, 523, 534, 653, 658], "20155": [177, 242], "35_dipole_orient": [177, 186], "variant": [178, 188, 461, 567, 833, 876], "1498464098687909": [178, 180], "037797": 178, "65922": 178, "72259e": 178, "28047949e": 178, "72734061e": 178, "97200565e": 178, "56295843": 178, "27742998": 178, "00597191": 178, "65359441": 178, "22223215": 178, "63030546": 178, "eigen": [178, 268, 673], "34003429e": 178, "79067976e": 178, "93243713e": 178, "61893": 178, "8713e": 178, "81398589e": 178, "00293217e": 178, "59049572e": 178, "79225614": 178, "45181117": 178, "88420763": 178, "65906465": 178, "114468": 178, "42240231": 178, "41240751e": 178, "15338772e": 178, "80101709e": 178, "40_mne_fixed_fre": [178, 186], "britta": [179, 242, 863, 876], "westner": [179, 242, 863, 876], "wstnr": 179, "apply_lcmv": [179, 287, 289, 292, 293, 294, 866, 876], "linearli": [179, 204, 208, 242, 291, 292, 293, 294, 295, 296, 831, 855], "ingredi": 179, "valuabl": [179, 858], "gaug": 179, "incorpor": [179, 224, 229, 318, 432, 441, 476, 477, 561, 835, 858, 864, 876], "stabl": [179, 200, 202, 242, 257, 295, 296, 339, 447, 475, 476, 477, 544, 556, 566, 752, 835, 841, 855], "rule": [179, 197, 201, 242, 556, 858], "thumb": [179, 197, 201, 556, 852], "advic": [179, 835], "defici": [179, 367, 556, 858, 876], "misrepres": 179, "3757": [179, 180], "inher": [179, 188, 229, 425], "somehow": [179, 181, 203], "nai": [179, 295, 296, 876], "switch": [179, 182, 183, 200, 207, 221, 242, 254, 268, 273, 347, 476, 477, 833, 835, 841, 861, 876], "invari": [179, 295, 296], "filters_vec": 179, "apply_lcmv_raw": [179, 291, 292, 293, 866, 876], "apply_lcmv_epoch": [179, 269, 270, 273, 276, 277, 278, 291, 292, 294, 866, 876], "087": 179, "stat_map": [179, 277, 278, 807], "5184": 179, "glass_brain": [179, 180, 277, 278, 807, 876], "022485": [179, 180], "008449": [179, 180], "036217": [179, 180], "071071": [179, 180], "914866": [179, 180], "406098": [179, 180], "008756": [179, 180], "433700": [179, 180], "028119": [179, 180], "plotter": [179, 262, 263, 556, 743, 745, 773, 790, 853, 876], "peak_vox": 179, "ori_label": 179, "sourcemorph": [179, 277, 278, 358, 625, 807, 839, 866, 876], "fname_fs_src": 179, "stc_f": [179, 180], "085": 179, "17352": 179, "barri": [179, 200, 202, 203, 242, 295, 296, 555, 570], "veen": [179, 242, 295, 296], "wim": [179, 242, 295, 296], "drongelen": [179, 242, 295, 296], "mosh": [179, 242, 295, 296], "yuchtman": [179, 242, 295, 296], "akifumi": [179, 242, 295, 296], "suzuki": [179, 242, 295, 296], "867": [179, 229, 242, 295, 296], "623056": [179, 242, 295, 296], "brook": [179, 242, 850, 876], "jiri": [179, 242], "vrba": [179, 242], "clair": [179, 242, 876], "stevenson": [179, 242], "gareth": [179, 210, 242, 852], "barn": [179, 210, 242, 852], "arjan": [179, 242], "hillebrand": [179, 242], "morri": [179, 242], "optimis": [179, 242], "1788": [179, 242], "sarang": [179, 242, 864], "dalal": [179, 242, 864], "vladimir": [179, 224, 242, 689, 690], "litvak": [179, 224, 242, 689, 690], "oostenveld": [179, 229, 242, 683, 684, 686, 687, 876], "mathij": [179, 242], "schoffelen": [179, 242], "118789": [179, 242], "849": [179, 186], "50_beamformer_lcmv": [179, 186], "flatmap": [180, 269, 273, 277, 743, 801, 876], "mpl_fig": 180, "94880328959697": 180, "84640986879091": 180, "649601096532322": 180, "5653": 180, "67635542": 180, "11717401": 180, "19136023": 180, "atlas": [180, 645, 876], "get_volume_labels_from_aseg": [180, 866, 876], "label_tc": [180, 269, 270, 273, 276, 277, 278, 442], "lidx": 180, "arrowstyl": [180, 193], "set_vis": 180, "grain": [180, 876], "loci": 180, "stc_back": 180, "labels_to_stc": [180, 866, 876], "6210": 180, "69834054": 180, "98871778": 180, "62206532": 180, "70708526": 180, "36619556": 180, "64056812": 180, "6864": 180, "882": [180, 186, 193, 229], "743": [180, 186, 229], "60_visualize_stc": [180, 186], "read_custom_montag": [181, 189, 262, 263, 264, 265, 267, 326, 476, 477, 866, 876], "reconstrct": 181, "elc": [181, 328, 876], "synthes": [181, 187, 301, 305, 500, 576, 876], "fname_t1_electrod": 181, "sample_eeg_mri": 181, "t1_electrod": 181, "fname_mon": 181, "sample_mri_montag": 181, "ras_mni_t": [181, 735], "read_ras_mni_t": [181, 866], "mni_affin": 181, "img_mni": 181, "hot_black_bon": 181, "black_bg": 181, "resampling_interpol": 181, "pos_vox": 181, "fname_t1": 181, "vox2mri_t": 181, "pos_mri": [181, 260], "tkmedit": [181, 841, 858], "dig_montag": 181, "head_siz": [181, 326, 328], "99930957": 181, "00998471": 181, "03578661": 181, "00316747": 181, "01275917": 181, "81240435": 181, "58295487": 181, "00685511": 181, "03489383": 181, "58300899": 181, "81171605": 181, "02888406": 181, "812404": 181, "582955": 181, "583009": 181, "3252": 181, "3250": 181, "3223": 181, "1709": 181, "8193": 181, "040598": 181, "157084": 181, "86184": 181, "24877e": 181, "17591891": 181, "939572": 181, "86348066": 181, "70_eeg_mri_coord": [181, 186], "fetch_phantom": [182, 428, 866, 876], "planor": 182, "meg1933": 182, "meg2421": 182, "1792": 182, "3840": 182, "7936": 182, "bmax": [182, 254], "ring": [182, 200, 443, 445, 876], "otaniemi": [182, 387, 428, 852, 876], "phantom_otaniemi": 182, "00365867": [182, 183, 184], "944092": [182, 183, 184], "138723": [182, 183, 184], "665896": [182, 183, 184], "684544": [182, 183, 184], "132233": [182, 183, 184], "0128974": [182, 183, 184], "plot_evoked_whit": [182, 264, 265, 777, 866, 876], "t_peak": 182, "32640": 182, "32639": 182, "55367811e": 182, "90213143e": 182, "55347147e": 182, "28605719e": 182, "96728167e": 182, "86739464e": 182, "38610872e": 182, "82304534e": 182, "48308374e": 182, "31818228e": 182, "16854987e": 182, "00130181e": 182, "01608756e": 182, "05724640e": 182, "66791928e": 182, "36603176e": 182, "50599819e": 182, "82644670e": 182, "99846050e": 182, "93593540e": 182, "60183041e": 182, "976295": 182, "211976": 182, "043756": 182, "206488": 182, "972764": 182, "105326": 182, "064891": 182, "093794": 182, "993475": 182, "729": [182, 183, 184, 193, 194, 229], "actual_ori": 182, "rad2deg": 182, "arcco": 182, "dip_tru": [182, 184], "80_brainstorm_phantom_elekta": [182, 186], "phantomctf": 183, "bst_phantom_ctf": 183, "phantom_200ua_20150709_01": 183, "dip_freq": 183, "phantom_20ua_20150603_03": 183, "erm_path": 183, "emptyroom_20150709_01": 183, "24000": 183, "23999": 183, "hdac006": 183, "zeros_lik": [183, 193], "ones_lik": [183, 226, 227], "tsss": [183, 264, 267, 476, 496, 584, 592, 614, 876], "apply_gradient_compens": [183, 187, 476, 477, 858, 876], "un": [183, 201, 204, 208, 216, 476, 477, 532, 533, 796, 858], "mf_kwarg": 183, "st_durat": [183, 208, 575, 584], "021666666666666667": 183, "458": [183, 224, 229], "catch_warn": 183, "simplefilt": 183, "60000": 183, "99596855e": 183, "57828787e": 183, "09548814e": 183, "44821628e": 183, "22550465e": 183, "07831245e": 183, "16519699e": 183, "85599860e": 183, "24819011e": 183, "19149506e": 183, "49201625e": 183, "90435099e": 183, "37114004e": 183, "52368814e": 183, "95491435e": 183, "09260032e": 183, "84849095e": 183, "02461913e": 183, "40860739e": 183, "15627312e": 183, "58591259e": 183, "999939": 183, "002039": 183, "010868": 183, "001115": 183, "959234": 183, "282612": 183, "011001": 183, "282607": 183, "959173": 183, "expected_po": 183, "array_str": 183, "434": [183, 186, 193, 207, 224], "85_brainstorm_phantom_ctf": [183, 186], "4dbti": 184, "badier": [184, 242, 656], "marseil": [184, 852], "franc": 184, "phantom_4dbti": [184, 852, 866, 876], "rfhp1": 184, "0hz": 184, "a173": 184, "a213": 184, "a232": 184, "not_and": [184, 255, 449, 611, 876], "hs_file": [184, 187, 487], "13599": 184, "20053968578577042": 184, "6576": 184, "6575": 184, "50691838e": 184, "61763336e": 184, "91409625e": 184, "91576159e": 184, "16898444e": 184, "75585208e": 184, "47442194e": 184, "45272203e": 184, "55529894e": 184, "46448717e": 184, "88484744e": 184, "05130802e": 184, "14443569e": 184, "70955369e": 184, "39503671e": 184, "16681391e": 184, "65491197e": 184, "24338008e": 184, "53281664e": 184, "47448228e": 184, "78257781e": 184, "975564": 184, "033891": 184, "217085": 184, "044586": 184, "998011": 184, "044560": 184, "215143": 184, "053150": 184, "975135": 184, "43530566e": 184, "00499851e": 184, "47056513e": 184, "49717001e": 184, "01651220e": 184, "39837298e": 184, "09320996e": 184, "53068976e": 184, "44272962e": 184, "07218608e": 184, "57916869e": 184, "24522939e": 184, "45459681e": 184, "19250060e": 184, "30544307e": 184, "26518629e": 184, "97497347e": 184, "82472005e": 184, "37787240e": 184, "96791371e": 184, "70423989e": 184, "975554": 184, "034041": 184, "217109": 184, "044503": 184, "998063": 184, "043482": 184, "215208": 184, "052081": 184, "975178": 184, "58999814e": 184, "84421337e": 184, "28166457e": 184, "67818745e": 184, "17428979e": 184, "76211498e": 184, "09542089e": 184, "22401648e": 184, "04141267e": 184, "15865669e": 184, "76599754e": 184, "17446488e": 184, "49708010e": 184, "60822410e": 184, "73060305e": 184, "05814038e": 184, "01071067e": 184, "20173942e": 184, "25861185e": 184, "85502070e": 184, "47521229e": 184, "975577": 184, "033678": 184, "217061": 184, "044611": 184, "997960": 184, "045666": 184, "215080": 184, "054233": 184, "975089": 184, "40101009e": 184, "10513936e": 184, "52303974e": 184, "27457778e": 184, "38233857e": 184, "06793751e": 184, "00477278e": 184, "15792686e": 184, "30206685e": 184, "40306943e": 184, "32057779e": 184, "22353020e": 184, "11884928e": 184, "17314181e": 184, "64256593e": 184, "23243102e": 184, "97110034e": 184, "94566869e": 184, "63267153e": 184, "08360546e": 184, "98210291e": 184, "975557": 184, "033946": 184, "217110": 184, "044391": 184, "998071": 184, "043409": 184, "215218": 184, "051986": 184, "975181": 184, "44409481": 184, "37628851": 184, "1860296": 184, "17616473": 184, "90_phantom_4dbti": [184, 186], "857": [186, 194, 229], "auto_tutorials_invers": 186, "maxshield": [187, 254, 264, 267, 476, 496, 584, 614, 861, 876], "allow_maxshield": [187, 207, 208, 264, 476, 496, 614], "ucl": [187, 210, 242, 352, 876], "read_raw_fil": [187, 210, 482, 858, 866, 876], "mandatori": [187, 295, 296, 318, 476, 556, 858], "rfdc": [187, 254], "realiz": [187, 200], "carefulli": [187, 198, 200, 852], "read_dig_polhemus_isotrak": [187, 310, 323, 326, 329, 330, 331, 332, 333, 334, 337, 858, 866, 876], "technic": [187, 237, 242, 262, 263, 264, 265, 476, 477, 523, 698, 700, 708, 714, 851, 857, 858], "disturb": [187, 851, 858], "mainli": [187, 239, 835, 858], "nicknam": 187, "n_1": 187, "n_2": 187, "n_3": 187, "x_1": [187, 858], "x_2": [187, 858], "x_3": 187, "denot": [187, 194, 215, 270, 276, 278, 582, 653, 656, 658, 677, 679, 697, 831, 858], "x_": [187, 194, 858], "m_": 187, "bmatrix": [187, 858], "c_": [187, 224, 858], "standardize_nam": [187, 500, 610, 876], "nx3": [187, 463], "mrk": [187, 254, 479, 500, 610, 876], "elp": [187, 254, 328, 335, 500, 610, 612, 858, 876], "onward": [187, 646], "miscellan": [187, 213, 262, 263, 264, 265, 476, 477, 553, 696, 698, 699, 700, 858, 861], "eight": [187, 858, 876], "endian": [187, 876], "stimthresh": [187, 254, 500], "sum_": [187, 200, 656, 858], "t_p": 187, "d_p": 187, "bigg": 187, "leq": [187, 224], "read_raw_fieldtrip": [187, 482, 858, 866, 876], "read_epochs_fieldtrip": [187, 858, 866, 876], "read_evoked_fieldtrip": [187, 858, 866, 876], "intent": [187, 853], "original_data": 187, "read_raw_fiff": 187, "original_info": 187, "data_from_ft": 187, "evoked_data": [187, 226], "untest": 187, "cnt": [187, 437, 488, 602, 858, 876], "egi": [187, 328, 331, 493, 858, 876], "calibr": [187, 208, 267, 429, 566, 567, 575, 584, 595, 600, 861, 876], "eximia": [187, 494, 858, 876], "3rd": [187, 197, 269, 270, 273, 276, 277, 278, 682], "parti": 187, "librari": [187, 745, 833, 835, 841, 842, 847, 853, 855, 876], "abund": 187, "electrophysiolog": [187, 200, 242, 831], "10_reading_meg_data": [187, 192], "meta": [188, 262, 263, 264, 265, 476, 477, 478, 864], "ini": 188, "host": [188, 857, 876], "pybv": [188, 441, 476, 477], "mnelab": [188, 842], "pyedflib": 188, "read_raw_bdf": [188, 482, 491, 498, 858, 866, 876], "amplifi": [188, 202, 206, 504, 847, 876], "mastoid": [188, 206, 262, 263, 264, 265, 476, 477, 641], "byte": [188, 262, 263, 476, 477, 507, 751, 861, 876], "read_raw_gdf": [188, 482, 484, 491, 858, 866, 876], "overcom": 188, "releas": [188, 835, 843, 855, 857, 876], "gender": [188, 242, 400], "read_raw_cnt": [188, 482, 858, 866, 876], "danger": [188, 267], "x_coord": 188, "y_coord": 188, "electloc": 188, "encourag": [188, 221, 846, 857, 876], "read_raw_egi": [188, 482, 858, 866, 876], "netstat": [188, 493, 876], "read_raw_nicolet": [188, 482, 858, 866, 876], "nexstim": 188, "read_raw_eximia": [188, 482, 858, 866], "read_raw_persyst": [188, 858, 866, 876], "nk": 188, "read_raw_nihon": [188, 866, 876], "11d": 188, "cmt": 188, "cn2": 188, "difficult": [188, 199, 229, 556, 858], "histori": [188, 267, 440, 831, 861, 876], "successfulli": [188, 214, 835, 861], "neither": [188, 465, 476, 477, 843], "nor": [188, 206, 465, 476, 477, 843, 857], "20_reading_eeg_data": [188, 192], "emitt": 189, "transmitt": 189, "oxyhaemoglobin": [189, 209], "Near": 189, "commun": [189, 193, 194, 221, 242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 414, 476, 477, 696, 699, 725, 728, 835, 839, 854, 864], "effort": [189, 484, 835, 856, 864], "sfnir": 189, "gowerlab": [189, 876], "cortivis": 189, "read_raw_snirf": [189, 866, 876], "provis": 189, "haemoglobin": [189, 586, 876], "optode_fram": [189, 506], "vendor": [189, 858], "icbm": 189, "2009b": 189, "nirstar": [189, 504], "aurora": [189, 504, 876], "nirscout": [189, 504], "nirsport": [189, 504, 876], "read_raw_hitachi": [189, 866, 876], "read_raw_boxi": [189, 482, 858, 866, 876], "iss": [189, 485, 876], "paren": 189, "unmodul": 189, "unpars": 189, "organis": 189, "digaux": 189, "port": [189, 841, 847], "discourag": [189, 262, 263, 264, 265, 476, 477, 698, 700, 775, 855, 876], "standardis": [189, 876], "to_csv": [189, 213], "_d": 189, "wavelength": [189, 197], "s1_d1": [189, 209], "s2_d1": 189, "s3_d1": 189, "s4_d1": 189, "s5_d2": 189, "s6_d2": 189, "s7_d2": 189, "s8_d2": 189, "assist": [189, 248, 833, 841, 858], "ficidu": 189, "30_reading_fnirs_data": [189, 192], "site": [190, 202, 203, 208, 242, 267, 318, 476, 567, 575, 584, 835], "beep": 190, "deviant": [190, 200], "finger": [190, 852], "bug": [190, 255, 449, 467, 695, 743, 835, 854, 856, 857], "tracker": [190, 835, 855], "consumpt": [190, 264, 265, 425, 777, 876], "use_precomput": 190, "erm_fnam": 190, "s01_noise_20131218_01": 190, "demand": [190, 213, 425, 429, 475, 607, 858, 876], "n_times_run1": 190, "4800": 190, "unus": [190, 267, 275, 575, 876], "heog": [190, 488], "veog": [190, 488, 876], "favorit": [190, 835], "annotations_df": 190, "csv_fname": 190, "events_bad_0": 190, "concat": [190, 408], "saccades_ev": 190, "7625": 190, "142459": 190, "216954": 190, "345135": 190, "357687": 190, "409101": 190, "461110": 190, "479866": 190, "764914": 190, "798174": 190, "846880": 190, "858863": 190, "9256": 190, "14287": 190, "116432": 190, "134489": 190, "464527": 190, "494136": 190, "749288": 190, "788623": 190, "21179": 190, "72993": 190, "134527": 190, "196555": 190, "249894": 190, "343357": 190, "400771": 190, "450256": 190, "593101": 190, "733942": 190, "765939": 190, "789476": 190, "792852": 190, "833208": 190, "859869": 190, "862888": 190, "saccade_epoch": 190, "reject_by_annot": [190, 209, 215, 262, 357, 476, 477, 516, 556, 572, 573, 576, 577, 700, 788, 797, 876], "projs_saccad": 190, "compute_proj_epoch": [190, 204, 205, 354, 355, 866, 876], "n_mag": [190, 205, 254, 353, 354, 355, 568, 569], "desc_prefix": [190, 353, 354], "projs_eog": 190, "compute_proj_eog": [190, 204, 205, 573, 577, 851, 866, 876], "1201": [190, 193, 298], "spectra": [190, 237, 242, 259, 262, 263, 264, 265, 413, 476, 477, 529, 530, 683, 698, 700, 703, 706, 714, 715, 768, 775, 797, 831], "doubl": [190, 200, 203, 239, 262, 263, 264, 265, 410, 419, 441, 444, 446, 447, 475, 476, 477, 497, 584, 835, 841, 858, 861, 876], "filter_length": [190, 200, 201, 205, 254, 262, 263, 264, 265, 410, 419, 444, 446, 447, 476, 477, 568, 569, 576, 577, 876], "sound": [190, 193, 194, 203, 242, 415, 725, 728], "uadc001": 190, "sound_data": 190, "min_diff": 190, "\u03bc": [190, 208, 417], "\u03c3": [190, 208, 417, 520], "mlo52": 190, "mrt51": 190, "mlo42": 190, "mlo43": 190, "epochs_standard": 190, "concatenate_epoch": [190, 866, 876], "epochs_devi": 190, "mlp52": 190, "evoked_std": 190, "evoked_dev": 190, "p50": 190, "paint": [190, 262, 263, 264, 265, 476, 477, 777, 797], "mmn": [190, 864], "emphasis": 190, "evoked_differ": 190, "ico4": [190, 636, 851], "8033": 190, "015871": 190, "10585e": 190, "09843": 190, "11765e": 190, "stc_standard": 190, "80289064": 190, "69025561": 190, "89954824": 190, "stc_deviant": 190, "12814542": 190, "29154719": 190, "6203076": 190, "stc_differ": 190, "96162575": 190, "78319301": 190, "94351171": 190, "754": [190, 192, 194, 229, 242, 851], "60_ctf_bst_auditori": [190, 192], "auto_tutorials_io": 192, "timedelayingridg": [193, 414, 866, 876], "multivariate_norm": 193, "1337": 193, "path_audio": 193, "spectrogram": [193, 229, 239, 831, 864, 876], "n_decim": 193, "explicit": [193, 261, 356, 367, 368, 835, 861, 876], "delays_samp": 193, "delays_sec": 193, "5000": [193, 226], "meshgrid": [193, 204, 229], "swap": [193, 228, 234, 630, 858, 876], "swapax": [193, 228, 234], "gabor": 193, "means_high": 193, "means_low": 193, "gauss_high": 193, "gauss_low": 193, "autoscal": 193, "artifici": [193, 242, 493, 556, 852], "convolut": [193, 200, 239, 421, 539, 540, 702, 705, 721, 723, 724, 726, 727, 842, 876], "n_second": 193, "x_del": 193, "ix_delai": 193, "ndim": [193, 239], "elif": 193, "rollaxi": 193, "weights_sim": 193, "iep": 193, "noise_amp": 193, "x_plt": 193, "hstack": [193, 204], "y_plt": 193, "autocorrel": [193, 414, 420], "ix_best_alpha": 193, "best_mod": 193, "best_pr": 193, "iax": 193, "time_pr": 193, "3450": 193, "505": [193, 224], "969": [193, 229], "1756": 193, "2105": 193, "2455": 193, "2803": 193, "3157": 193, "459": 193, "18667": 193, "866": 193, "17948": 193, "1145": 193, "17804": 193, "1424": [193, 207], "17714": 193, "1768": [193, 208, 242, 584], "18418": 193, "2097": 193, "18765": 193, "2357": 193, "18383": 193, "2649": 193, "18364": 193, "2935": 193, "18298": 193, "3173": 193, "17901": 193, "3400": 193, "17491": 193, "17582": 193, "16854": 193, "17034": 193, "16780": 193, "16719": 193, "16752": 193, "1615": 193, "16800": 193, "1871": 193, "16665": 193, "2093": 193, "16249": 193, "2344": 193, "16163": 193, "16081": 193, "2835": 193, "3065": 193, "15798": 193, "15653": 193, "15864": 193, "15811": 193, "16923": 193, "18424": 193, "1215": 193, "19061": 193, "1557": 193, "19571": 193, "1901": 193, "19933": 193, "20170": 193, "2586": 193, "20355": 193, "2932": 193, "20521": 193, "3277": 193, "20649": 193, "20501": 193, "21382": 193, "678": [193, 229], "21149": 193, "984": [193, 194, 227, 229], "20421": 193, "1287": 193, "20010": 193, "1560": 193, "19347": 193, "19033": 193, "2175": 193, "19312": 193, "2507": 193, "19523": 193, "2834": 193, "19640": 193, "3154": 193, "19679": [193, 203], "19714": 193, "21051": 193, "21268": 193, "21155": 193, "1361": 193, "21247": 193, "20277": 193, "1936": 193, "20047": 193, "2273": 193, "20212": 193, "2616": 193, "20390": 193, "20467": 193, "3286": 193, "20559": 193, "20641": 193, "20337": 193, "20224": 193, "1302": 193, "20314": 193, "1540": 193, "19092": 193, "17855": 193, "1977": 193, "17327": 193, "2194": 193, "16760": 193, "16345": 193, "2636": 193, "16045": 193, "2867": 193, "15855": 193, "3079": 193, "15568": 193, "3290": 193, "15322": 193, "15632": 193, "i_alpha": 193, "ddot": 193, "tikhonov": 193, "trf": [193, 228], "insensit": [193, 262, 263, 437, 484, 491, 498, 559, 699, 876], "whilst": [193, 210], "mse": 193, "scores_lap": 193, "models_lap": 193, "reg_typ": [193, 420], "ix_best_alpha_lap": 193, "21616": 193, "22007": 193, "1074": 193, "22372": 193, "22540": 193, "22669": 193, "2177": 193, "22693": 193, "2547": 193, "22759": 193, "2909": 193, "22734": 193, "3281": 193, "22802": 193, "22729": 193, "22449": 193, "724": [193, 229], "22595": 193, "1087": 193, "22622": 193, "1451": 193, "22655": 193, "1820": 193, "22740": 193, "2185": 193, "22745": 193, "2545": 193, "22704": 193, "2911": 193, "22726": 193, "3276": 193, "22732": 193, "22712": 193, "22864": 193, "22768": 193, "22664": 193, "1448": 193, "22597": 193, "1805": [193, 224], "22530": 193, "22566": 193, "22583": 193, "2891": 193, "22554": 193, "3254": 193, "22568": 193, "22550": 193, "22035": 193, "22149": 193, "1070": 193, "22253": 193, "22175": 193, "1779": 193, "22199": 193, "22194": 193, "2388": 193, "21147": 193, "20303": 193, "2890": 193, "19703": 193, "3221": 193, "19797": 193, "20213": 193, "21670": 193, "21933": 193, "1397": 193, "21812": 193, "21918": 193, "2118": 193, "22066": 193, "2482": 193, "22173": 193, "2843": 193, "22223": 193, "3212": 193, "22333": 193, "22285": 193, "21412": 193, "22222": 193, "1066": 193, "22190": 193, "22369": 193, "1791": 193, "22378": 193, "2140": 193, "22261": 193, "2492": 193, "22217": 193, "2844": 193, "22179": 193, "3211": 193, "22278": 193, "22191": 193, "22468": 193, "22626": 193, "1081": 193, "22302": 193, "1790": 193, "22329": 193, "2155": 193, "22414": 193, "22555": 193, "2897": 193, "3249": 193, "22513": 193, "22520": 193, "rf_lap": 193, "fr\u00e9d\u00e9ric": [193, 242, 414], "theunissen": [193, 242, 414], "nandini": [193, 242, 414], "singh": [193, 242, 414, 876], "ann": [193, 215, 242, 414, 876], "hsu": [193, 242, 414], "vinj": [193, 242, 414], "jack": [193, 242, 414, 876], "gallant": [193, 242, 414], "ben": [193, 242, 414, 876], "willmor": [193, 242, 414], "darragh": [193, 242, 414], "smyth": [193, 242, 414], "cell": [193, 197, 242, 414, 861, 876], "553": [193, 207, 229, 242, 414], "577": [193, 194, 207, 229, 242, 414], "0954": [193, 242, 414], "898x_14_3_309": [193, 242, 414], "heer": [193, 242, 414], "paslei": [193, 242, 414], "jochem": [193, 242, 414], "rieger": [193, 242, 414], "nathan": [193, 242, 414], "crone": [193, 242, 414], "knight": [193, 242, 414], "tune": [193, 205, 242, 414], "ncomms13654": [193, 242, 414], "30_strf": [193, 196], "visit": [194, 242, 847], "insight": [194, 858], "eas": 194, "camel": 194, "n_meg_channel": 194, "standand": 194, "interquartil": 194, "robustscal": [194, 417], "n_frequenc": [194, 295, 697], "popular": [194, 831, 839], "win": [194, 239], "grasp": 194, "competit": 194, "kaggl": 194, "week": [194, 857], "clf_csp": 194, "ssnr": [194, 557], "rewrit": [194, 876], "plot_filt": [194, 200, 201, 408, 415, 791, 866, 876], "boil": [194, 833], "evoked_time_gen": 194, "joint_kwarg": 194, "diag": [194, 676, 861], "1296": [194, 207, 242], "617": [194, 229], "614": [194, 229], "574": 194, "576": [194, 207, 229], "604": [194, 229, 236], "641": 194, "517": [194, 229], "649": [194, 229], "663": [194, 237], "634": [194, 242, 556], "654": [194, 229], "674": 194, "657": [194, 201, 212, 229], "749": [194, 229], "776": [194, 229], "693": [194, 206, 229, 242, 262, 263, 264, 265, 476, 477, 641], "906": 194, "697": [194, 229], "932": [194, 207, 227, 229], "1040": [194, 207], "719": [194, 229], "1065": 194, "1091": 194, "1119": 194, "727": [194, 229], "1146": 194, "731": [194, 229], "1172": 194, "1199": [194, 207], "1273": 194, "735": [194, 229], "771": [194, 229], "821": [194, 229], "827": [194, 207, 229], "829": [194, 229], "826": [194, 229], "503": [194, 229], "589": 194, "832": [194, 229], "618": [194, 229, 242, 678], "834": [194, 229], "646": 194, "833": [194, 207], "676": 194, "814": [194, 201, 212, 229], "772": [194, 229], "805": [194, 207, 229], "953": [194, 229], "789": [194, 206, 207, 212], "982": [194, 207, 229], "1003": 194, "1048": 194, "774": [194, 229], "778": 194, "1188": 194, "1217": [194, 207], "785": [194, 229], "1246": 194, "1272": 194, "788": [194, 229], "644": [194, 207], "739": [194, 229], "755": 194, "763": [194, 229], "766": [194, 207], "777": [194, 229], "451": [194, 224, 275], "786": [194, 207, 229], "784": [194, 229], "643": [194, 207], "671": [194, 229], "808": [194, 229], "864": [194, 275], "893": [194, 229], "921": [194, 229], "951": [194, 229], "979": [194, 229], "1009": [194, 200, 242], "1037": [194, 242, 680], "1067": [194, 695], "819": [194, 207, 229], "818": 194, "1149": 194, "1195": 194, "1266": 194, "1292": 194, "lanczo": 194, "1353": 194, "91709": 194, "26373e": 194, "98776221": 194, "41838256": 194, "06628582": 194, "methodolog": [194, 242], "uncov": [194, 242], "hal": [194, 242], "01848442": [194, 242], "archiv": [194, 242, 383, 835, 841, 843, 855, 864], "ouvert": [194, 242], "lionel": [194, 242], "naccach": [194, 242], "subtend": [194, 242, 858], "e85791": [194, 242], "0085791": [194, 242], "50_decod": [194, 196], "auto_tutorials_machin": 196, "vibrat": 197, "door": [197, 199], "slam": [197, 199], "phone": 197, "geomagnet": 197, "unshield": 197, "headphon": 197, "malfunct": [197, 198, 851], "qr": [197, 254, 568, 576, 579, 876], "sensori": 197, "genesi": 197, "ssp_projector": 197, "readili": [197, 201, 864], "mag_channel": 197, "remove_dc": [197, 201, 476, 477, 796, 876], "get_xdata": [197, 201], "get_ydata": [197, 201], "searchsort": [197, 201], "dx": [197, 201], "dy": [197, 201], "head_width": [197, 201], "length_includes_head": [197, 201], "find_ecg_ev": [197, 199, 205, 215, 568, 572, 866, 876], "create_ecg_epoch": [197, 199, 203, 205, 568, 576, 866, 876], "ecg_epoch": [197, 203, 572], "6007": [197, 202], "streak": 197, "avg_ecg_epoch": 197, "blocki": 197, "efficaci": 197, "pro": [197, 200, 835], "con": [197, 200], "10_preprocessing_overview": [197, 212], "deepcopi": 198, "usabl": [198, 423, 566, 592, 876], "wildcard": 198, "original_bad": 198, "bad_chan": 198, "paus": [198, 264, 265, 743, 876], "codebas": [198, 835, 850, 859, 864], "good_eeg": 198, "all_eeg": 198, "setdiff1d": 198, "excess": [198, 200, 476, 477, 796, 876], "protocol": [198, 851], "sheet": [198, 851], "offlin": [198, 843], "raw2": [198, 215], "invest": [198, 857], "presenc": [198, 209, 221, 239, 242, 267, 389, 432, 835, 851, 876], "unrealist": [198, 851], "dramat": 198, "robust": [198, 202, 203, 238, 242, 262, 263, 408, 556, 653, 658, 876], "uninform": 198, "deweight": 198, "fair": [198, 206], "eeg_data": [198, 213], "eeg_data_interp": 198, "interp": [198, 647, 648, 649, 661, 876], "00000022": 198, "bad_color": [198, 476, 477, 796], "grad_data": 198, "grad_data_interp": 198, "00000009": 198, "propag": [198, 201, 256, 836], "974": [198, 212, 229], "15_handling_bad_channel": [198, 212], "fake_keypress": [199, 215], "keyboard": [199, 216, 743, 852, 876], "push": [199, 200, 835, 876], "enter": [199, 205, 215, 216, 834, 835, 838], "bad_cough": 199, "wrapper": [199, 266, 439, 443, 482, 686, 687, 876], "bad_blink": 199, "blink_annot": 199, "eeg_pick": 199, "albeit": 199, "annotate_break": [199, 866, 876], "first_tim": [199, 475, 476, 477, 496, 585, 876], "block_1": 199, "block_2": 199, "block_annot": 199, "break_annot": [199, 559], "min_break_dur": [199, 559], "t_start_after_previ": [199, 559], "t_stop_before_next": [199, 559], "bad_break": [199, 559], "events_subset": 199, "flat_criteria": 199, "stringent": 199, "reject_tmin": [199, 257, 262, 263, 572, 876], "reject_tmax": [199, 257, 262, 263, 572, 876], "disappear": [199, 239, 876], "subsum": 199, "stronger_reject_criteria": 199, "2000e": 199, "20_rejecting_bad_data": [199, 212], "park": [200, 242], "burru": [200, 242], "ifeachor": [200, 242], "jervi": [200, 242], "widmann": [200, 242], "somedai": 200, "conclud": [200, 228], "lightli": [200, 835], "cautious": 200, "hope": [200, 201, 203, 239], "math": [200, 204, 855], "b_0": 200, "b_1": [200, 858], "b_2": 200, "ldot": 200, "b_m": [200, 858], "a_1": 200, "a_2": 200, "a_n": 200, "mb_kz": 200, "na_kz": 200, "b_k": [200, 273, 858], "denomin": [200, 229, 295, 296, 650, 660, 684, 687, 709, 876], "a_k": 200, "autoregress": 200, "broken": [200, 267, 448, 835, 876], "finit": [200, 220, 229, 242, 452, 851, 858, 876], "impuls": [200, 855], "infinit": [200, 858, 876], "qquad": 200, "foral": [200, 858], "steeper": [200, 201], "accumul": [200, 262, 263], "despit": [200, 228], "throughput": 200, "sharp": [200, 224, 876], "steep": 200, "broader": [200, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 696, 699], "fundament": 200, "fftfreq": 200, "plot_ideal_filt": [200, 784, 866, 876], "f_p": [200, 858], "flim": [200, 201, 784, 791], "dlim": [200, 784], "f_": 200, "nyq": [200, 444, 447], "third_height": 200, "hypothet": [200, 556], "na\u00efv": 200, "brick": [200, 201], "correspondingli": [200, 262, 263, 858], "tighter": [200, 876], "fortun": [200, 204, 858], "remez": 200, "firl": 200, "ifft": 200, "relax": [200, 234, 876], "shallow": [200, 271], "gradual": 200, "shorten": [200, 216, 239, 767, 839, 858, 876], "benefici": [200, 274], "wherebi": 200, "came": [200, 841], "minimum_phas": 200, "falloff": 200, "h_min": 200, "uncompens": 200, "imaginari": [200, 242, 723, 724, 876], "dur": 200, "morlet_freq": 200, "tlim": 200, "ttick": 200, "blip": 200, "n_onset": 200, "x_orig": 200, "transition_band": 200, "create_filt": [200, 201, 262, 263, 264, 265, 446, 447, 476, 477, 784, 866, 876], "x_v16": 200, "twice": [200, 262, 263, 264, 265, 444, 446, 447, 476, 477, 796], "filter_dur": 200, "x_v14": 200, "x_v13": 200, "h_eff": 200, "10001": [200, 876], "design_mne_c_filt": 200, "x_mne_c": 200, "hpw": 200, "lpw": 200, "x_min": [200, 311], "cost": [200, 269, 270, 273, 276, 277, 278, 414, 420, 556, 683, 684, 686, 687, 743, 801, 806, 858], "plot_sign": 200, "yscale": [200, 696, 876], "yticklabel": 200, "get_yticklabel": 200, "iirfilt": [200, 443], "iirdesign": [200, 443], "butterworth": [200, 262, 263, 264, 265, 410, 419, 443, 444, 446, 447, 476, 477, 568, 569, 876], "worsen": 200, "filtfilt": [200, 262, 263, 264, 265, 410, 419, 444, 446, 447, 476, 477, 796], "btype": [200, 443], "ftype": [200, 269, 270, 273, 276, 277, 278, 443], "butter": [200, 443], "x_shallow": 200, "sosfiltfilt": 200, "sosfilt": 200, "zpk2so": 200, "polynomi": [200, 262, 263, 264, 265, 476, 477, 515, 858, 876], "iir_param": [200, 205, 262, 263, 264, 265, 410, 419, 443, 444, 446, 447, 476, 477, 568, 569, 876], "filt": [200, 444], "x_steep": 200, "chebychev": [200, 443], "cheby1": [200, 443], "rp": [200, 443], "chebyshev": [200, 443, 876], "substanti": [200, 208, 262, 263, 268, 371, 464, 857, 858, 864], "adjust_ax": 200, "errant": 200, "misappl": 200, "deleteri": 200, "schr\u00f6ger": [200, 242], "uncontrol": 200, "acunzo": [200, 242], "misinterpret": 200, "tanner": [200, 242], "semant": 200, "syntact": 200, "n400": 200, "p600": 200, "5\u00b5v": 200, "sic": 200, "poststimulu": 200, "octav": 200, "energi": [200, 253, 855, 876], "understood": [200, 743], "cos_t": 200, "sig": [200, 228, 233, 234], "iir_lp_30": 200, "iir_hp_p1": 200, "iir_lp_2": 200, "iir_hp_2": 200, "x_lp_30": 200, "padlen": [200, 443], "x_hp_p1": 200, "x_lp_2": 200, "x_hp_2": 200, "x_f": 200, "lp": 200, "_2": [200, 858], "hp": [200, 208, 254], "nbsp": 200, "evolv": 200, "maess": [200, 242, 876], "rebut": 200, "old": [200, 213, 215, 237, 242, 256, 259, 262, 263, 264, 265, 273, 276, 310, 318, 338, 400, 476, 477, 500, 521, 588, 610, 631, 632, 643, 743, 808, 812, 835, 843, 876], "baseline_plot": 200, "all_ax": 200, "ri": [200, 224, 242, 725, 728], "iir_hp": 200, "x_hp": 200, "leak": [200, 220, 857, 858], "n_pre": 200, "sig_pr": 200, "filter_data": [200, 262, 263, 264, 265, 419, 443, 444, 447, 476, 477, 866, 876], "adopt": [200, 833, 835], "reciproc": [200, 262, 263, 264, 265, 339, 410, 419, 429, 444, 446, 447, 476, 477, 567, 575, 584], "decent": 200, "blackman": [200, 262, 263, 264, 265, 419, 444, 446, 447, 476, 477], "fir_window": [200, 262, 263, 264, 265, 410, 419, 444, 446, 447, 476, 477], "fir_desgin": 200, "8197": 200, "outdat": 200, "construct_iir_filt": [200, 262, 263, 264, 265, 410, 419, 444, 446, 447, 476, 477, 568, 569, 866, 876], "transition_bandwidth": 200, "fir_coef": 200, "0545": 200, "0017": 200, "wider": [200, 201], "thoma": [200, 224, 225, 242, 534, 653, 658, 680, 683, 684, 685, 686, 687, 876], "sidnei": [200, 242], "wilei": [200, 242], "82896": [200, 242], "andrea": [200, 242, 295, 876], "erich": [200, 242], "burkhard": [200, 242, 876], "00233": [200, 242], "graham": [200, 242], "mackenzi": [200, 242], "rossum": [200, 242], "darren": [200, 242], "kara": [200, 242], "inappropri": [200, 242, 269, 270, 273, 276, 277, 278], "conclus": [200, 226, 242], "12437": [200, 242], "1469": [200, 242], "8986": [200, 242], "01009": [200, 242], "commentari": [200, 242], "artefact": [200, 210, 242], "norton": [200, 242], "ermf": [200, 242], "25_background_filt": [200, 212], "mathrm": [201, 208, 224, 712, 722, 724, 726, 727], "raw_highpass": 201, "19821": 201, "9911": [201, 876], "filter_param": 201, "add_arrow": 201, "meg_pick": 201, "raw_notch": 201, "3965": 201, "raw_notch_fit": 201, "spectrum_fit": [201, 447, 476, 477, 876], "notabl": [201, 238, 876], "raw_downsampl": 201, "pitfal": 201, "safe": [201, 213, 242, 262, 263, 318, 375, 376, 377, 380, 381, 383, 388, 391, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 476, 841, 843], "614990234375": [201, 213], "current_sfreq": 201, "desired_sfreq": 201, "obtained_sfreq": 201, "lowpass_freq": 201, "19813025304873463": 201, "80214146205357": 201, "synch": 201, "30_filtering_resampl": [201, 212], "gratton": [202, 242, 555, 599], "croft": [202, 242, 555], "articl": [202, 850], "6607": 202, "bleed": [202, 280, 816], "250m": 202, "model_plain": 202, "picks_artifact": [202, 210, 555, 599], "epochs_clean_plain": 202, "redo": 202, "partli": 202, "variat": [202, 221, 408, 851, 876], "prone": 202, "allevi": [202, 858], "epochs_sub": 202, "model_sub": 202, "epochs_clean_sub": 202, "piec": [202, 215, 262, 263, 476, 477, 858], "ongo": [202, 559, 851, 864], "alik": 202, "model_evok": 202, "epochs_clean_evok": 202, "eog_evoked_clean": 202, "raw_kwarg": 202, "cole": [202, 242, 555, 599], "emanuel": [202, 242, 555, 599, 649, 876], "donchin": [202, 242, 555, 599], "ocular": [202, 203, 205, 242, 555, 599], "468": [202, 224, 229, 242, 555, 599], "90135": [202, 242, 555, 599], "s0987": [202, 242, 555], "7053": [202, 242, 555], "00055": [202, 242, 555], "35_artifact_correction_regress": [202, 212], "corrmap": [203, 866, 876], "guidanc": [203, 205, 857], "blind": [203, 242, 556, 582], "microphon": 203, "unmix": [203, 556, 557, 582, 787, 790, 876], "analogi": 203, "unwant": [203, 205, 209, 316, 876], "ic": [203, 272, 556, 570, 786, 788, 790, 876], "n_pca_compon": [203, 556, 787, 876], "smallest": [203, 229, 339, 408, 556, 855, 858], "runica": [203, 556], "mixing_matrix_": [203, 556], "unmixing_matrix_": [203, 556], "tesla": [203, 205, 219, 858], "artifact_pick": [203, 205], "harder": [203, 835], "filt_raw": 203, "huge": [203, 274, 277, 278, 682], "9010": 203, "get_explained_variance_ratio": [203, 556, 876], "explained_var_ratio": 203, "9358001342790973": 203, "7717091491114122": 203, "ratio_perc": 203, "trackpad": [203, 264, 265, 467, 759, 778], "15459": 203, "ica000": [203, 876], "ica001": [203, 272, 556, 786, 788, 790], "anywai": [203, 214, 835, 841, 876], "read_ica": [203, 556, 866], "reconst_raw": 203, "tediou": 203, "reset": [203, 259, 262, 263, 264, 265, 271, 363, 408, 415, 476, 477, 555, 556, 696, 698, 699, 700, 743, 774, 775, 779, 782, 786, 795, 798, 803, 811, 861, 876], "eog_indic": 203, "prefront": 203, "ctp": [203, 556, 876], "ecg_indic": 203, "caught": 203, "ica014": 203, "refit": [203, 876], "new_ica": 203, "neck": [203, 306], "trail": [203, 556, 584, 739], "s001r03": 203, "s002r03": 203, "s003": 203, "s003r03": 203, "lib": [203, 833, 841], "python3": [203, 834, 876], "_fastica": 203, "convergencewarn": 203, "s004": 203, "s004r03": 203, "6250": 203, "6249": 203, "6150": 203, "6149": 203, "ica002": 203, "labels_": [203, 556, 570, 789], "get_compon": [203, 556, 876], "subject_index": 203, "component_index": 203, "template_eog_compon": 203, "33638605": 203, "32708878": 203, "32846765": 203, "32807248": 203, "35916344": 203, "37615216": 203, "42464993": 203, "21789139": 203, "22387812": 203, "22237922": 203, "21342143": 203, "2425263": 203, "26757238": 203, "27806995": 203, "15470616": 203, "1693302": 203, "17711037": 203, "17373137": 203, "19651749": 203, "21091786": 203, "22459439": 203, "68783519": 203, "46717407": 203, "64182737": 203, "34165002": 203, "28991817": 203, "76938995": 203, "0057612": 203, "54311043": 203, "54567127": 203, "63806031": 203, "57058636": 203, "52637437": 203, "51788659": 203, "55774431": 203, "56188149": 203, "69340923": 203, "73333856": 203, "2829121": 203, "39253171": 203, "16120286": 203, "25431324": 203, "06352167": 203, "1647002": 203, "11930156": 203, "1811579": 203, "10112171": 203, "12638332": 203, "13623739": 203, "1301851": 203, "14380943": 203, "15329772": 203, "1715539": 203, "16560352": 203, "13293812": 203, "08175318": 203, "10173655": 203, "10764581": 203, "12707317": 203, "09785876": 203, "07433338": 203, "08470678": 203, "07373196": 203, "03379354": 203, "ecg_ind": 203, "francoi": [203, 242, 556], "cardoso": [203, 242, 556], "precondit": [203, 208, 242, 556, 585, 876], "hessian": [203, 242, 556], "4040": [203, 242, 556], "4049": [203, 242, 556], "2844203": [203, 242, 556], "iren": [203, 242], "winkler": [203, 242], "deben": [203, 242, 570], "4101": [203, 242], "4105": [203, 242], "milan": [203, 242, 876], "7319296": [203, 242], "dammer": [203, 242, 556, 876], "schiek": [203, 242, 556], "boer": [203, 242, 556], "carmen": [203, 242, 386, 556], "silex": [203, 242, 556], "mikhail": [203, 242, 556], "zvyagintsev": [203, 242, 556], "uw": [203, 242, 556], "pietrzyk": [203, 242, 556], "mathiak": [203, 242, 556], "2353": [203, 242, 556], "926677": [203, 242, 556], "filipa": [203, 242, 570], "campo": [203, 242, 570], "viola": [203, 242, 570, 876], "jeremi": [203, 242, 570], "thorn": [203, 242, 570], "edmond": [203, 242, 570], "till": [203, 242, 570], "schneider": [203, 242, 570], "tom": [203, 242, 570, 876], "eichel": [203, 242, 570], "868": [203, 229, 242, 570], "877": [203, 229, 242, 570], "clinph": [203, 242, 556, 564, 570, 725, 728], "964": [203, 212, 229], "40_artifact_correction_ica": [203, 212], "setup_3d_ax": 204, "set_zlabel": 204, "set_ylim": [204, 239], "set_zlim": 204, "geometr": [204, 269, 270, 273, 276, 277, 278, 442, 808, 851, 858], "shadow": [204, 637], "cast": [204, 255, 449, 747, 876], "sun": 204, "xy_projection_matrix": 204, "projected_point": 204, "projected_vector": 204, "arrow_coord": 204, "arrow_length_ratio": 204, "symbol": [204, 856, 858, 876], "expans": [204, 208, 262, 263, 264, 265, 429, 476, 477, 515, 566, 567, 575, 584, 858], "unpack": [204, 229, 756, 841], "lucki": 204, "bother": [204, 213], "trigger_effect": 204, "internet": [204, 857], "algebra": [204, 855, 876], "full_matric": 204, "trigger_projection_matrix": 204, "plot_trisurf": 204, "interchang": [204, 295, 831], "ten": [204, 239, 466, 839, 852], "hyperplan": [204, 411, 418], "synonym": [204, 861], "incident": [204, 264, 265, 467, 759, 778], "phrase": 204, "first_projector": 204, "explained_var": [204, 271, 876], "inact": [204, 208, 262, 263, 264, 265, 476, 477, 857], "compute_proj_raw": [204, 205, 353, 354, 858, 866, 876], "ortho": [204, 556], "write_proj": [204, 622, 866, 876], "forgo": 204, "offecg": 204, "remove_exist": [204, 205, 262, 263, 264, 265, 476, 477, 743], "perman": [204, 833, 851, 876], "mags_ecg": 204, "_projector": 204, "cheaper": 204, "consequenti": 204, "mikko": [204, 205, 242, 858], "uusitalo": [204, 205, 242, 858], "bf02534144": [204, 205, 242, 858], "477": [204, 212, 229], "45_projectors_background": [204, 212], "equip": [205, 858], "system_proj": 205, "empty_room_fil": 205, "empty_room_raw": 205, "empty_room_proj": 205, "distant": [205, 855], "_proj": [205, 876], "no_proj": [205, 568, 569], "picks_trac": [205, 794], "plot_projs_joint": [205, 866, 876], "ecg_l_freq": [205, 254, 568], "ecg_h_freq": [205, 254, 568], "filter_method": [205, 568, 569], "presum": 205, "clutter": 205, "eog_proj": 205, "okai": 205, "eog_projs_bad": 205, "perfectli": [205, 239, 719, 858], "get_titl": [205, 209], "get_ylabel": 205, "set_tick_param": 205, "labelbottom": 205, "50_artifact_correction_ssp": [205, 212], "earlob": 206, "collarbon": 206, "disadvantag": [206, 224], "add_reference_channel": [206, 262, 263, 264, 265, 476, 477, 696, 698, 699, 700, 866, 876], "ref_channel": [206, 262, 263, 264, 265, 279, 476, 477, 641, 696, 698, 699, 700], "m2": [206, 262, 263, 264, 265, 476, 477, 641, 861], "set_bipolar_refer": [206, 262, 263, 264, 265, 476, 477, 641, 866, 876], "anod": [206, 638, 876], "cathod": [206, 638, 876], "alter": [206, 208, 213, 256, 585, 876], "raw_new_ref": 206, "raw_avg_ref": 206, "wasn": [206, 876], "infin": [206, 242, 262, 263, 264, 265, 476, 477, 641, 876], "raw_rest": 206, "_raw": 206, "2197": 206, "00413199": 206, "0159844": 206, "05174612": 206, "eeg_bipolar": [206, 638], "transvers": [206, 260], "raw_bip_ref": 206, "36038": [206, 213], "61837": 206, "valueerror": [206, 273, 276, 442, 615, 638, 646, 767], "yao": [206, 242, 262, 263, 264, 265, 476, 477, 641, 656], "0967": [206, 242, 262, 263, 264, 265, 476, 477, 641], "3334": [206, 242, 262, 263, 264, 265, 476, 477, 641], "dezhong": [206, 242], "yun": [206, 242], "qin": [206, 242], "shiang": [206, 242], "hu": [206, 242], "dong": [206, 242, 876], "maria": [206, 242], "bringa": [206, 242], "vega": [206, 242], "pedro": [206, 242], "vald": [206, 242], "\u00e9": [206, 242], "sosa": [206, 242], "00707": [206, 242], "55_setting_eeg_refer": [206, 212], "h\u00f6chenberg": [207, 238, 863, 876], "hoechenberg": [207, 238], "test_move_anon_raw": [207, 208], "v6": [207, 208], "v7": [207, 208, 876], "10800": [207, 208, 876], "31199": [207, 208], "20399": 207, "get_chpi_info": [207, 866, 876], "chpi_freq": 207, "chpi_cod": 207, "chpi_amplitud": [207, 339, 340], "compute_chpi_amplitud": [207, 340, 341, 866, 876], "1696": 207, "461": [207, 229], "599": [207, 229], "622": [207, 229, 242, 352], "759": [207, 229], "685": [207, 229], "745": 207, "988": [207, 229], "844": 207, "1079": 207, "1102": 207, "879": [207, 229], "1125": 207, "1148": 207, "915": [207, 229], "1171": 207, "949": [207, 229], "1240": 207, "1263": 207, "1286": 207, "1029": 207, "1355": 207, "1378": 207, "1401": 207, "1085": 207, "1098": [207, 242, 523, 858], "1447": 207, "1470": 207, "1493": 207, "1135": 207, "1515": 207, "1537": 207, "1153": 207, "1559": 207, "1580": [207, 262, 263], "1175": 207, "1624": 207, "1183": 207, "1646": 207, "1191": 207, "1669": 207, "1692": 207, "1208": 207, "504": [207, 229], "compute_chpi_loc": [207, 208, 339, 341, 342, 866, 876], "4385": 207, "442": [207, 229], "483": [207, 229], "544": [207, 229], "518": [207, 226, 231], "568": [207, 229], "741": [207, 229], "424": [207, 229], "848": [207, 229], "948": [207, 229], "1062": 207, "1228": 207, "1271": 207, "1301": 207, "1315": 207, "1319": 207, "1325": 207, "1414": 207, "1475": 207, "1565": [207, 242], "1573": 207, "1586": 207, "1590": 207, "1594": 207, "1599": 207, "1609": 207, "1651": 207, "1652": 207, "1694": 207, "write_head_po": [207, 340, 342, 348, 349, 866], "compute_chpi_snr": [207, 339, 766, 866, 876], "plot_chpi_snr": [207, 866, 876], "snr_dict": [207, 766], "59_head_posit": [207, 212], "find_bad_channels_maxwel": [208, 584, 866, 876], "obliqu": 208, "filter_chpi": [208, 584, 866, 876], "crosstalk": 208, "fine_cal_fil": 208, "sss_cal_mgh": 208, "crosstalk_fil": 208, "ct_sparse_mgh": 208, "raw_check": 208, "auto_noisy_ch": 208, "auto_flat_ch": 208, "auto_scor": 208, "cross_talk": [208, 566, 575, 584], "return_scor": [208, 575], "ex": [208, 835, 839, 840], "ei": 208, "ch_subset": 208, "scores_noisi": [208, 575], "limits_noisi": [208, 575], "bin_label": 208, "data_to_plot": 208, "cbar_kw": 208, "nanmin": 208, "rect": 208, "nanmax": [208, 227], "appar": [208, 851], "fashion": [208, 369, 876], "min_count": [208, 575], "qualifi": 208, "int_ord": [208, 429, 567, 575, 584], "ext_ord": [208, 339, 341, 345, 429, 566, 567, 575, 584], "thick": [208, 858], "mathtt": [208, 712, 722, 723, 724, 726, 727], "st": [208, 254], "_durat": 208, "penultim": 208, "st_correl": [208, 575, 584, 592], "st_onli": [208, 575, 584, 876], "doublecheck": 208, "get_active_chpi": [208, 866, 876], "chpi_fif_fil": 208, "head_pos_fil": 208, "headpo": [208, 254, 349], "patent": [208, 584, 592], "legal": [208, 767, 857], "commerci": [208, 584], "124905": [208, 242, 429, 567, 584], "1935742": [208, 242, 567, 584], "1759": [208, 242, 584], "60_maxwell_filtering_sss": [208, 212], "deoxyhaemoglobin": [209, 876], "itertool": 209, "compress": [209, 257, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 383, 476, 477, 572, 573, 696, 699, 841, 876], "novemb": [209, 242, 653, 658], "cw": [209, 369, 831], "set_dur": [209, 256, 876], "mid": [209, 224], "source_detector_dist": [209, 866, 876], "photodetect": 209, "scalp_coupling_index": [209, 866, 876], "beer": 209, "lambert": 209, "law": [209, 857, 876], "raw_haemo": 209, "beer_lambert_law": [209, 866, 876], "haemodynam": 209, "predominantli": 209, "1291": 209, "992": [209, 229], "s4_d4": 209, "s8_d8": 209, "s3_d3": 209, "s7_d6": 209, "s7_d7": 209, "s6_d8": 209, "oxi": [209, 876], "morphologi": 209, "evoked_dict": 209, "color_dict": 209, "aa3377": [209, 712, 722], "styles_dict": 209, "chroma": 209, "drive": [209, 361, 475, 476, 477, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 516], "tidi": 209, "leg_lin": 209, "get_c": 209, "70_fnirs_process": [209, 212], "technologi": [210, 242, 253, 863], "placement": [210, 264, 265, 780, 831, 876], "opm_data_fold": 210, "ucl_opm_auditori": [210, 852, 866], "opm_fil": 210, "001_se": 210, "aef_run": 210, "001_meg": 210, "720000": 210, "pt": [210, 480, 508], "amp_scal": 210, "1e12": [210, 368], "data_d": 210, "time_d": 210, "set_kwarg": 210, "ambient": 210, "knowldg": 210, "evironment": 210, "psd_kwarg": 210, "psd_pre": 210, "9901": [210, 876], "psd_post": 210, "remnant": 210, "motiv": [210, 239], "minimis": 210, "interfec": 210, "39601": 210, "19801": 210, "seymour": [210, 242, 852, 876], "stephani": [210, 242, 852], "mellor": [210, 242, 852], "neill": [210, 242, 852, 876], "tim": [210, 242, 852], "tiernei": [210, 242, 852], "eleanor": [210, 242, 852], "maguir": [210, 242, 852], "opportun": [210, 242, 852], "118834": [210, 242, 852], "februari": [210, 242, 298, 852], "991": [210, 212], "80_opm_process": [210, 212], "auto_tutorials_preprocess": 212, "166800": 213, "read_raw_": [213, 475, 858, 876], "famili": [213, 685], "seriou": [213, 857], "parenthes": [213, 858], "estimate_rank": [213, 876], "n_time_samp": 213, "time_sec": 213, "n_chan": [213, 676, 723, 724, 805], "000167471573526": 213, "megacq": 213, "acqch001": 213, "110113": 213, "acqch002": 213, "110112": 213, "acqch003": 213, "110111": 213, "acqch004": 213, "110122": 213, "frequent": [213, 833, 835, 853, 856, 876], "12012": 213, "18018": 213, "24024": 213, "underlyingli": [213, 853], "n_timepoint": [213, 681], "pose": [213, 835], "undo": [213, 614, 876], "eeg_and_eog": 213, "raw_temp": 213, "channel_nam": [213, 493, 615, 876], "eog_and_frontal_eeg": 213, "frivol": 213, "eeg_059": 213, "eeg_060": 213, "blink_detector": 213, "makeshift": 213, "eeg_001": 213, "raw_select": 213, "1503": 213, "unspecifi": [213, 219, 767], "500770084699155": 213, "5001290587975622": 213, "raw_selection1": 213, "raw_selection2": 213, "raw_selection3": 213, "5041000049184614": 213, "sampling_freq": [213, 219], "start_stop_second": 213, "channel_index": [213, 756], "85742192e": 213, "64355481e": 213, "89306644e": 213, "99872648": 213, "00039144": 213, "0020564": 213, "9933487": 213, "99501366": 213, "99667862": 213, "data_arrai": 213, "times_arrai": 213, "meg_0712": 213, "meg_1022": 213, "two_meg_chan": 213, "y_offset": 213, "safest": [213, 851], "eeg_channel_indic": 213, "planar1": [213, 259, 262, 263, 264, 265, 408, 415, 476, 477, 553, 554, 555, 556, 570, 696, 698, 699, 700, 775, 782, 786, 798, 803, 805], "planar2": [213, 259, 262, 263, 264, 265, 408, 415, 476, 477, 553, 554, 555, 556, 570, 696, 698, 699, 700, 775, 782, 786, 798, 803, 805], "first_channel_data": [213, 858], "eeg_and_eog_data": 213, "two_meg_chans_data": 213, "my_data": 213, "npy": [213, 214], "afford": 213, "scaling_tim": 213, "start_end_sec": 213, "to_hdf": 213, "999750": 213, "952283e": 213, "001415": 213, "069226e": 213, "003080": 213, "080921e": 213, "004745": 213, "010755e": 213, "006410": 213, "10_raw_overview": [213, 218], "write_ev": [214, 449, 611, 866, 876], "lst": [214, 611, 821], "array_equ": 214, "_eve": 214, "my_experi": 214, "told": 214, "events_no_button": 214, "merged_ev": 214, "ultim": [214, 835], "send": [214, 740], "cumbersom": 214, "20_event_arrai": [214, 218], "datetim": [215, 256, 262, 263, 264, 265, 267, 281, 476, 477, 876], "compris": [215, 219, 262, 263, 684, 698, 699, 700, 858, 864], "posix": [215, 256], "timestamp": [215, 256, 269, 270, 273, 276, 277, 278, 476, 477, 493, 602, 876], "my_annot": 215, "aaa": 215, "bbb": 215, "ccc": 215, "microsecond": [215, 256, 262, 263, 264, 265, 267, 476, 477, 861], "time_of_first_sampl": 215, "95597083": 215, "iso": 215, "8601": 215, "new_orig_tim": 215, "strftime": 215, "later_annot": 215, "ddd": 215, "eee": 215, "fff": 215, "720100": 215, "darker": 215, "spinbox": 215, "safeguard": [215, 267, 876], "interactive_annot": 215, "bad_": [215, 876], "ordereddict": 215, "95597082905339": [215, 256], "tzinfo": 215, "timezon": [215, 262, 263, 264, 265, 476, 477], "descr": 215, "70597082905339": 215, "45597082905339": 215, "20597082905339": 215, "WILL": 215, "NOT": 215, "annot_from_fil": 215, "30_annotate_raw": [215, 218], "versatil": 216, "lengthen": 216, "unmark": 216, "newli": [216, 764], "hover": 216, "thumbnail": 216, "plot_psd_topo": [216, 237, 262, 263, 264, 265, 476, 477], "989": [216, 218, 229], "40_visualize_raw": [216, 218], "auto_tutorials_raw": 218, "synthet": [219, 493, 572, 576, 858, 876], "hertz": [219, 221, 267, 697, 701, 702, 703, 704, 705, 706], "eog001": 219, "meg001": 219, "meg002": 219, "meg003": 219, "meg004": 219, "meg005": 219, "meg006": 219, "meg007": 219, "meg008": 219, "seven": [219, 858, 876], "molar": [219, 858], "amper": [219, 858], "simulated_raw": 219, "show_scalebar": [219, 262, 263, 476, 477, 773, 796, 876], "simulated_epoch": 219, "column_stack": 219, "condition_a": 219, "condition_b": 219, "evoked_arrai": 219, "10_array_obj": [219, 223], "simulate_stc": [220, 660, 661, 662, 866, 876], "dt": [220, 429, 708], "17545": 220, "hemi_to_ind": 220, "elig": [220, 857], "surf_vertic": 220, "restrict_vert": 220, "intersect1d": 220, "restrict_vertic": [220, 268, 273], "cent_idx": 220, "elsewher": 220, "distances_to_outsid": [220, 268, 876], "compute_area": [220, 268, 876], "stc_gen": 220, "value_fun": [220, 663], "brain_gen": 220, "evoked_gen": 220, "stc_inv": 220, "brain_inv": 220, "45968308": 220, "57021267": 220, "69354621": 220, "evoked_snr": 220, "70_point_spread": [220, 223], "unit_impuls": 221, "coh_signal_gen": 221, "t_rand": 221, "dev": [221, 544, 642], "base_freq": 221, "cumsum": 221, "signal1": 221, "signal2": 221, "am": [221, 260, 263, 265, 371, 477, 861, 876], "nperseg": 221, "coh": [221, 697, 769], "noverlap": 221, "146374": 221, "33830": 221, "stc_signal": 221, "stc_nois": 221, "pretend": [221, 224], "s_rm": 221, "59828": 221, "89697e": 221, "40489756": 221, "65479053": 221, "61269642": 221, "dampen": [221, 637, 712, 722, 726], "consensu": [221, 857], "csd_signal": 221, "filters_approach1": 221, "filters_approach2": 221, "filters_1": 221, "power_approach1": 221, "power_approach2": 221, "plot_approach": 221, "brain1": 221, "42918831e": 221, "04345299e": 221, "40589757e": 221, "brain2": 221, "mia": [221, 242, 295, 296], "liljestr\u00f6m": [221, 242, 295, 296], "susanna": [221, 242, 295, 296, 876], "aro": [221, 242, 295, 296, 876], "245530": [221, 242, 295, 296], "kensuk": [221, 242, 295, 296], "sekihara": [221, 242, 295, 296], "79369": [221, 242, 295, 296], "79370": [221, 242, 295, 296], "80_dic": [221, 223], "068": [223, 238, 241], "auto_tutorials_simul": 223, "ttest_1samp_no_p": [224, 683, 686, 690, 866, 876], "phenomena": 224, "n_subject": [224, 232, 234, 679], "signal_mean": 224, "signal_sd": 224, "noise_sd": 224, "gaussian_sd": 224, "n_src": [224, 270, 275], "h_0": 224, "colon": [224, 254, 383, 861], "h_1": 224, "neq": [224, 858], "geq": 224, "cdot": [224, 656, 858], "mcc": 224, "plot_t_p": 224, "p_lim": 224, "t_lim": 224, "mgrid": 224, "plot_surfac": [224, 876], "rstride": 224, "cstride": 224, "ztick": 224, "mappabl": 224, "set_tick": 224, "set_ticklabel": 224, "get_xaxi": 224, "set_label_coord": 224, "set_weight": 224, "use_p": 224, "log_": 224, "t_": [224, 858], "exchang": [224, 876], "verid": 224, "n_": [224, 858], "samp": 224, "gymnast": 224, "declar": [224, 857], "p_type_i": 224, "combat": 224, "familywis": 224, "fwer": 224, "benjamini": [224, 680], "hochberg": [224, 680], "strict": [224, 451, 839], "indistinguish": 224, "mathbf": [224, 567], "perm_": 224, "aforement": 224, "rethink": 224, "thought": [224, 677, 831], "refram": 224, "drawback": 224, "touch": [224, 319], "feature_extract": 224, "grid_to_graph": 224, "e402": 224, "mini_adjac": 224, "toarrai": 224, "find_ch_adjac": [224, 225, 226, 229, 327, 676, 683, 684, 686, 687, 764, 866, 876], "combine_adjac": [224, 226, 229, 232, 316, 327, 683, 684, 686, 687, 866, 876], "get_builtin_ch_adjac": [224, 316, 327, 764, 866], "builtin_ch_adj": 224, "adj_nam": 224, "adj_descript": 224, "bti148": 224, "bti248": 224, "bti248grad": 224, "ctf64": 224, "easycap128ch": 224, "easycap32ch": 224, "easycap64ch": 224, "easycapm1": [224, 876], "easycapm11": 224, "m11": 224, "easycapm14": 224, "m14": 224, "easycapm15": 224, "m15": 224, "ecog256": 224, "256channel": 224, "ecog256bipolar": 224, "eeg1010_neighb": 224, "elec1005": 224, "elec1010": 224, "elec1020": 224, "itab153": 224, "itab": 224, "itab28": 224, "language29ch": 224, "mpi": 224, "mpi_59_channel": 224, "neuromag122cmb": 224, "neuromag122": [224, 876], "neuromag306cmb": 224, "neuromag306": 224, "neuromag306mag": [224, 229], "neuromag306planar": [224, 226], "yokogawa160": 224, "yokogawa440": 224, "read_ch_adjac": [224, 316, 320, 676, 764, 866, 876], "n_space": 224, "t_thresh": [224, 226], "t_clust": 224, "viewabl": 224, "p_clust": 224, "cl": 224, "195527": 224, "120434": 224, "1639": [224, 242, 262, 263, 264, 265, 476, 477], "1683": 224, "1775": 224, "1855": 224, "1835": 224, "stat_fun_hat": 224, "t_hat": 224, "p_hat": 224, "043603": 224, "127369": 224, "4603": 224, "4768": 224, "4908": 224, "4872": 224, "riemann": 224, "threshold_tfc": 224, "t_tfce": 224, "p_tfce": 224, "h_power": [224, 225], "e_pow": [224, 225], "431": [224, 229], "469": [224, 229], "472": [224, 229, 242, 408], "502": [224, 521, 861], "t_tfce_hat": 224, "p_tfce_hat": 224, "jag": 224, "peaki": 224, "broad": [224, 239], "tighten": 224, "broaden": 224, "exhaust": [224, 295], "unbalanc": 224, "statsmodel": [224, 864, 873], "anova_lm": 224, "wrap": [224, 266, 529, 876], "q": [224, 254, 656, 683, 684, 686, 687, 858], "f_onewai": [224, 677, 679, 684, 687, 866], "f_mway_rm": [224, 228, 234, 679, 866, 876], "f_threshold_mway_rm": [224, 228, 234, 677, 866], "unpair": 224, "spatio_temporal_cluster_test": [224, 225, 229, 233, 234, 866, 876], "spatio_temporal_cluster_1samp_test": [224, 232, 683, 866, 876], "gerard": [224, 242, 689, 690], "ridgwai": [224, 242, 689, 690], "flandin": [224, 242, 689, 690], "karl": [224, 242, 253, 689, 690, 863], "friston": [224, 242, 689, 690], "Will": [224, 242, 254, 266, 309, 444, 475, 556, 689, 690, 695, 708, 715, 739, 817, 840], "penni": [224, 242, 689, 690], "haircut": [224, 242, 689, 690], "nichol": [224, 225, 242, 680, 683, 684, 685, 686, 687], "917": [224, 229, 231], "10_background_stat": [224, 231], "confirmatori": 225, "tfce": [225, 683, 684, 686, 687, 864, 876], "ttest_ind": [225, 690], "unsaf": [225, 699], "median_valu": 225, "long_word": 225, "short_word": 225, "time_window": [225, 696], "ntarget": 225, "short_df": 225, "format_dict": 225, "096": 225, "453939": 225, "222424": 225, "518939": 225, "371515": 225, "064": [225, 242, 344, 538, 656], "811667": 225, "250152": 225, "039697": 225, "318030": 225, "163030": 225, "425152": 225, "509": [225, 229], "682": [225, 229], "absent": [225, 363, 861, 876], "amongst": [225, 239], "temor": 225, "cluster_pv": [225, 683, 684, 686, 687], "significant_point": 225, "delaunai": [225, 226, 316, 876], "917298": 225, "1856": 225, "20_erp_stat": [225, 231], "whom": [226, 229, 835], "downstream": [226, 227], "nonparametr": [226, 227, 229, 242, 683, 684, 685, 686, 687], "spectrotempor": [226, 227, 723, 724, 726, 727], "tfr_epoch": 226, "logratio": [226, 238, 285, 539, 540, 696, 699, 803], "epochs_pow": [226, 228, 229], "lattic": [226, 229, 676, 683, 684, 686, 687], "sensor_adjac": 226, "use_idx": 226, "n_ch": 226, "unrol": 226, "degrees_of_freedom": 226, "455144": 226, "265125": 226, "caveat": [226, 229, 242, 556, 858], "anywher": [226, 876], "t_obs_plot": 226, "f_idx": 226, "t_idx": [226, 476, 477], "nanargmax": 226, "40_cluster_1samp_time_freq": [226, 231], "epochs_condition_1": 227, "epochs_condition_2": 227, "comptuat": 227, "tfr_epochs_1": 227, "tfr_epochs_2": 227, "epochs_power_1": 227, "epochs_power_2": 227, "f_ob": [227, 228, 229, 233, 234, 684, 687], "566824": 227, "1001": [227, 861], "996": 227, "evoked_power_1": 227, "evoked_power_2": 227, "evoked_power_contrast": 227, "f_obs_plot": [227, 228, 229], "max_f": 227, "evoked_condition_1": 227, "evoked_condition_2": 227, "evoked_contrast": 227, "50_cluster_between_time_freq": [227, 231], "interplai": 228, "perceptu": 228, "56aud_r": 228, "60vis_l": 228, "64vis_r": 228, "forgiv": 228, "zero_mean": [228, 540, 712, 722, 723, 724, 726], "this_tfr": [228, 229], "this_pow": 228, "n_condit": [228, 229, 234, 684, 687], "n_replic": 228, "factor_level": [228, 234, 677, 679], "formula": [228, 234, 295, 296, 352, 652, 656, 709, 710, 858, 876], "a1b1": [228, 677], "a1b2": [228, 677], "a2b1": [228, 677], "b2b2": 228, "fval": 228, "effect_label": 228, "autumn": [228, 229], "overrid": [228, 272, 368, 370, 476, 477, 493, 633, 634, 635, 636, 741, 767, 839, 841, 857], "necessit": [228, 234, 876], "return_pv": [228, 234, 677], "pthresh": [228, 234], "f_thresh": [228, 229, 234], "419588": 228, "good_clust": [228, 232], "f_imag": [228, 229], "f_obs_plot2": 228, "70_cluster_rmanova_time_freq": [228, 231], "differenti": [229, 242, 262, 263, 264, 265, 432, 476, 477, 725, 728, 864], "plot_ch_adjac": [229, 316, 327, 866, 876], "_csr": 229, "csr_matrix": [229, 274, 275, 316, 327, 621], "bind": [229, 234], "stackexchang": 229, "73993": 229, "alpha_cluster_form": 229, "n_observ": [229, 681, 683, 684, 686, 687, 767], "dfn": [229, 684, 687], "dfd": [229, 684, 687], "cluster_stat": 229, "004107": 229, "094418": 229, "419": 229, "452": [229, 275], "466": 229, "489": [229, 239], "533": 229, "564": [229, 242, 400], "582": [229, 242], "585": [229, 242], "592": 229, "597": [229, 242, 416], "612": 229, "624": 229, "633": 229, "636": 229, "651": 229, "672": 229, "675": 229, "689": 229, "708": 229, "716": 229, "753": 229, "762": 229, "765": 229, "822": 229, "831": 229, "845": 229, "853": 229, "856": 229, "865": 229, "871": 229, "876": [229, 275], "887": 229, "892": 229, "908": 229, "911": 229, "916": [229, 239], "922": 229, "925": 229, "928": 229, "933": 229, "936": 229, "939": 229, "945": [229, 264, 265, 696, 781], "962": 229, "967": 229, "972": 229, "981": 229, "987": 229, "p_accept": 229, "good_cluster_ind": [229, 233, 234], "crimson": [229, 743], "steelblu": [229, 476, 477, 796], "i_clu": 229, "clu_idx": 229, "time_ind": 229, "space_ind": 229, "ch_ind": 229, "f_map": 229, "sig_tim": 229, "ax_topo": 229, "f_evok": 229, "ax_colorbar": 229, "ax_sign": 229, "ymin": [229, 234], "get_ylim": 229, "fill_betweenx": [229, 234], "tfr_adjac": 229, "tfr_threshold": 229, "333033": 229, "412": 229, "425": 229, "457": 229, "479": 229, "548": 229, "554": 229, "557": [229, 242, 400], "596": 229, "607": 229, "623": 229, "626": [229, 242, 556], "628": 229, "632": 229, "635": 229, "637": 229, "653": 229, "668": 229, "673": 229, "679": 229, "695": 229, "742": 229, "752": 229, "757": 229, "761": 229, "764": 229, "767": [229, 242, 851], "779": 229, "804": 229, "806": 229, "812": 229, "816": 229, "835": 229, "836": 229, "854": 229, "863": 229, "883": 229, "885": 229, "886": 229, "896": 229, "904": [229, 275], "907": 229, "909": 229, "914": 229, "929": 229, "934": 229, "937": 229, "943": 229, "944": 229, "952": 229, "963": 229, "971": 229, "976": 229, "difficulti": [229, 401, 833, 855], "freq_ind": 229, "ax_spec": 229, "f_obs_plot_sig": 229, "ax_colorbar2": 229, "mari": [229, 242, 683, 684, 686, 687, 876], "dejan": [229, 242, 683, 684, 686, 687], "draschkow": [229, 242, 683, 684, 686, 687], "e13335": [229, 242, 683, 684, 686, 687], "13335": [229, 242, 683, 684, 686, 687], "75_cluster_ftest_spatiotempor": [229, 231], "auto_tutorials_stat": [231, 236], "equalize_epoch_count": [232, 866], "summarize_clusters_stc": [232, 233, 234, 866, 876], "1000e": [232, 234], "sample_vertic": [232, 234], "evoked1": [232, 862], "evoked2": [232, 862], "n_vertices_sampl": [232, 234], "morph_data": [232, 876], "fsave_vertic": [232, 233, 234], "morph_mat": [232, 234, 274], "n_vertices_fsav": [232, 233, 234], "govern": 232, "member": [232, 681, 857, 861, 864], "max_step": [232, 683, 684, 686, 687], "spatial_src_adjac": [232, 233, 234, 866, 876], "p_threshold": [232, 233], "t_threshold": 232, "clu": [232, 233, 234, 688], "563537": 232, "791547": 232, "permutationt": 232, "good_clusters_idx": 232, "stc_all_cluster_vi": [232, 233, 234], "20_cluster_1samp_spatiotempor": [232, 236], "stc_fname": 233, "n_subjects1": 233, "n_subjects2": 233, "x1": [233, 681, 684], "x2": [233, 681, 684], "subjects_k": 233, "f_threshold": [233, 679], "632172": 233, "30_cluster_ftest_spatiotempor": [233, 236], "engemannn": 234, "r_aud": 234, "r_vi": 234, "tini": [234, 296], "1782": 234, "851281": 234, "inds_t": 234, "inds_v": 234, "cluster_ind": 234, "eve_id": 234, "mean_tc": 234, "std_tc": 234, "60_cluster_rmanova_spatiotempor": [234, 236], "v\u00b2": 237, "\u00b2": [237, 238], "t\u00b2": [237, 239], "overridden": [237, 474, 876], "esp": 237, "method_kw": [237, 262, 263, 264, 265, 476, 477, 698, 700], "psd_array_multitap": [237, 262, 263, 264, 265, 413, 476, 477, 698, 700, 724, 727, 866, 876], "irrelev": [237, 254, 835, 858], "epo_spectrum": 237, "npsd": 237, "__getitem__": [237, 255, 256, 257, 259, 260, 262, 263, 267, 271, 275, 286, 300, 476, 477, 522, 697, 698, 699, 700, 731, 876], "evk_spectrum": 237, "61863537e": 237, "13487136e": 237, "88010499e": 237, "89065956e": 237, "24056397e": 237, "91160668e": 237, "56762015e": 237, "65842303e": 237, "39426775e": 237, "38758770e": 237, "03771739e": 237, "98519756e": 237, "agg_fun": [237, 262, 263, 264, 265, 476, 477, 698, 700, 775], "psd_welch": [237, 876], "psd_multitap": [237, 876], "area_mod": [237, 262, 263, 264, 265, 476, 477, 797], "kept": [237, 257, 262, 268, 369, 432, 471, 473, 474, 516, 523, 524, 525, 526, 527, 529, 530, 540, 556, 557, 567, 607, 787, 835, 876], "periodogram": [237, 242, 262, 263, 264, 265, 476, 477, 698, 700, 715], "electroacoust": [237, 242, 262, 263, 264, 265, 476, 477, 698, 700, 715], "1967": [237, 242, 262, 263, 264, 265, 476, 477, 698, 700, 715], "tau": [237, 242, 262, 263, 264, 265, 476, 477, 698, 700, 715], "1161901": [237, 242, 262, 263, 264, 265, 476, 477, 698, 700, 715], "slepian": [237, 242, 262, 263, 264, 265, 476, 477, 698, 700, 708, 714], "bell": [237, 242, 262, 263, 264, 265, 476, 477, 556, 582, 698, 700, 708, 714], "1430": [237, 242, 262, 263, 264, 265, 476, 477, 698, 700, 708, 714], "1978": [237, 242, 262, 263, 264, 265, 476, 477, 698, 700, 708, 714], "1538": [237, 242, 262, 263, 264, 265, 476, 477, 698, 700, 708, 714], "tb02104": [237, 242, 262, 263, 264, 265, 476, 477, 698, 700, 708, 714], "10_spectrum_class": [237, 241], "72074": 238, "mean_spectrum": 238, "psds_mean": [238, 239], "psds_std": [238, 239], "arithmet": [238, 556, 715, 876], "psds_welch_mean": 238, "freqs_mean": 238, "psds_welch_median": 238, "freqs_median": 238, "epo_idx": 238, "unaggreg": [238, 715, 876], "n_segment": [238, 715], "welch_unagg": 238, "topomap_kw": 238, "fmin_fmax": 238, "timefreq": [238, 696], "20_sensors_time_frequ": [238, 241], "fpv": 239, "steadi": 239, "assr": 239, "norcia": 239, "picton": 239, "wet": [239, 852], "dominik": [239, 876], "welk": [239, 876], "evgenii": [239, 876], "kalenkovich": [239, 876], "ttest_rel": 239, "bids_fnam": 239, "12hz": 239, "15hz": 239, "decai": 239, "stabil": [239, 443, 556, 567, 876], "bach": 239, "meigen": 239, "boxcar": [239, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 448, 476, 477, 855, 876], "n_overlap": [239, 262, 263, 264, 265, 476, 477, 698, 700, 715, 797], "n_per_seg": [239, 262, 263, 264, 265, 476, 477, 698, 700, 715, 876], "snr_spectrum": 239, "noise_n_neighbor_freq": 239, "noise_skip_neighbor_freq": 239, "n_trial": [239, 424], "n_frequency_bin": 239, "increment": [239, 473, 556], "ON": 239, "averaging_kernel": 239, "mean_nois": 239, "apply_along_axi": 239, "psd_": 239, "edge_width": 239, "pad_width": 239, "constant_valu": 239, "drastic": [239, 274, 876], "reappear": 239, "grand": [239, 465, 858, 876], "floor": [239, 421, 582, 724, 727], "ceil": [239, 719], "psds_plot": 239, "snr_mean": 239, "snr_std": 239, "stim_freq": 239, "i_bin_12hz": 239, "1st": [239, 638], "i_bin_24hz": 239, "i_bin_36hz": 239, "i_bin_15hz": 239, "i_bin_30hz": 239, "i_bin_45hz": 239, "i_trial_12hz": 239, "i_trial_15hz": 239, "roi_vi": 239, "po9": 239, "po10": 239, "o9": 239, "o10": 239, "picks_roi_vi": 239, "hotel": 239, "snrs_target": 239, "69365541718619": 239, "wait": [239, 257, 262, 835, 843, 876], "snrs_12hz": 239, "snrs_12hz_chaverag": 239, "tstat_roi_vs_scalp": 239, "985902": 239, "693655": 239, "000067": 239, "Such": [239, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 295, 296, 476, 477, 637, 696, 699, 831, 857, 858], "somewher": [239, 476, 477, 796, 840, 859], "unintend": 239, "preregist": 239, "peopl": [239, 835, 846, 857, 876], "detour": 239, "snrs_roi": 239, "freq_plot": 239, "color_plot": 239, "darkblu": [239, 476, 477, 796], "darkgreen": 239, "mediumblu": 239, "seagreen": 239, "xpos_plot": 239, "stim_12hz_tmp": 239, "stim_15hz_tmp": 239, "snr_tmp": 239, "yerr": 239, "stim_12hz_snrs_": 239, "ihz": 239, "stim_15hz_snrs_": 239, "strike": 239, "tstat_12hz_trial_stim": 239, "stim_12hz_snrs_12hz": 239, "stim_12hz_snrs_15hz": 239, "tstat_12hz_trial_1st_harmon": 239, "stim_12hz_snrs_24hz": 239, "stim_12hz_snrs_30hz": 239, "tstat_12hz_trial_2nd_harmon": 239, "stim_12hz_snrs_36hz": 239, "stim_12hz_snrs_45hz": 239, "tstat_15hz_trial_stim": 239, "stim_15hz_snrs_12hz": 239, "stim_15hz_snrs_15hz": 239, "tstat_15hz_trial_1st_harmon": 239, "stim_15hz_snrs_24hz": 239, "stim_15hz_snrs_30hz": 239, "tstat_15hz_trial_2nd_harmon": 239, "stim_15hz_snrs_36hz": 239, "stim_15hz_snrs_45hz": 239, "000037": 239, "000014": 239, "899": 239, "000297": 239, "000024": 239, "519": 239, "006525": 239, "tour": [239, 876], "overli": 239, "stim_bandwidth": 239, "window_length": 239, "window_snr": 239, "i_win": 239, "this_spectrum": 239, "windowed_psd": 239, "windowed_freq": 239, "stimfreq": 239, "bin_width": 239, "skip_neighbor_freq": 239, "n_neighbor_freq": 239, "windowed_snr": 239, "boxplot": 239, "stochast": [239, 242, 556], "window_start": 239, "greyscal": 239, "optimist": 239, "serious": [239, 858], "50_ssvep": [239, 241], "auto_tutorials_tim": 241, "alphabet": [242, 835, 876], "fiorenzo": [242, 556], "artoni": [242, 556], "magazin": [242, 408], "962275": 242, "stephan": [242, 408], "bonnet": [242, 408], "marco": [242, 408], "congedo": [242, 408], "jutten": [242, 408], "riemannian": [242, 408], "multimedia": [242, 408], "mmsp": [242, 408], "5662067": [242, 408], "barber": [242, 352], "521": [242, 352], "51814": [242, 352], "www": [242, 352, 447, 484, 570, 835, 855], "staff": [242, 352, 841], "brml": [242, 352], "becker": [242, 656], "albera": [242, 656], "comon": [242, 656], "gribonv": [242, 656], "fleureau": [242, 656], "guillotel": [242, 656], "merlet": [242, 656], "sissi": [242, 656], "august": [242, 656], "anthoni": [242, 556], "terrenc": [242, 556], "sejnowski": [242, 556, 582], "deconvolut": [242, 556, 582], "1129": [242, 556, 582], "1159": [242, 556, 582], "1995": [242, 400, 556, 582, 858], "neco": [242, 556], "anna": [242, 649, 876], "rita": [242, 649], "bentivoglio": [242, 649], "bressman": [242, 649], "cassetta": [242, 649], "donatella": [242, 649], "carretta": [242, 649], "pietro": [242, 649], "tonali": [242, 649], "alberto": [242, 649], "albanes": [242, 649], "disord": [242, 649], "1028": [242, 649], "870120629": [242, 649], "berg": [242, 858], "scherg": [242, 858], "1994": [242, 523, 858], "90113": [242, 858], "quentin": [242, 876], "anderson": [242, 876], "arindam": 242, "banerje": 242, "kenji": 242, "fukumizu": 242, "24th": 242, "1288": 242, "pmlr": 242, "apr": 242, "mlr": 242, "v130": 242, "bertrand21a": 242, "ryota": [242, 408], "tomioka": [242, 408], "lemm": [242, 408], "motoaki": [242, 408], "kawanab": [242, 408], "msp": [242, 408], "4408441": [242, 408], "fred": 242, "bookstein": 242, "thin": 242, "plate": 242, "24792": 242, "oleg": 242, "burdakov": 242, "bori": 242, "merkulov": 242, "lith": 242, "\u00f6": 242, "ping": 242, "yilun": [242, 352], "chen": [242, 352], "ami": [242, 352], "wiesel": [242, 352], "yonina": [242, 352], "eldar": [242, 352], "alfr": [242, 352, 851], "hero": [242, 352], "shrinkag": [242, 352, 408, 415, 416, 557, 876], "mmse": [242, 352], "5016": [242, 352], "5029": [242, 352], "2053029": [242, 352], "contributor": [242, 839, 842, 854, 855, 857, 864, 876], "readthedoc": 242, "ronald": [242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 696, 699], "crochier": [242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 696, 699], "lawrenc": [242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 564, 696, 699], "rabin": [242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 696, 699], "multir": [242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 696, 699], "englewood": [242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 696, 699], "cliff": [242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 696, 699], "nj": [242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 696, 699], "605162": [242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 696, 699], "adrian": [242, 268, 273], "guggisberg": 242, "erik": [242, 876], "findlai": 242, "ryan": [242, 876], "canolti": 242, "mitchel": 242, "berger": 242, "barbaro": 242, "heidi": 242, "kirsch": 242, "1686": 242, "1700": 242, "sereno": [242, 858], "1006": [242, 680, 858], "nimg": [242, 680, 858], "0395": [242, 858], "arthur": [242, 523, 725, 728], "liu": [242, 523], "buckner": [242, 523], "lewin": [242, 523], "s0896": [242, 523], "6273": [242, 523], "81138": [242, 523], "jocn": 242, "darva": 242, "ermer": 242, "20171": 242, "salat": [242, 858], "andr\u00e9": [242, 858], "kouw": [242, 858], "niko": [242, 858], "makri": [242, 858], "florent": [242, 858], "s\u00e9gonn": [242, 858], "quinn": [242, 858, 876], "s69": [242, 858], "s84": [242, 858], "0396": 242, "tootel": 242, "intersubject": 242, "sici": 242, "1097": 242, "0193": 242, "hbm10": 242, "genoves": [242, 680], "lazar": [242, 408, 680], "supplementari": [242, 385], "neuroanatom": [242, 385], "esm": [242, 385], "art": [242, 385, 864], "3a10": [242, 385], "2fnature18933": [242, 385], "mediaobject": [242, 385], "41586_2016_bfnature18933_moesm330_esm": [242, 385], "s\u00f3nia": [242, 851], "gon\u00e7alv": [242, 851], "casper": [242, 851], "munck": [242, 851], "jeroen": [242, 851, 876], "verbunt": [242, 851], "fetsj": [242, 851], "bijma": [242, 851], "rob": [242, 851, 876], "heethaar": [242, 851], "vivo": [242, 851], "resist": [242, 851], "eit": [242, 851], "812164": [242, 851], "teon": [242, 850, 876], "lauri": [242, 850], "parkkonen": [242, 850], "\u00e4": [242, 416, 850], "inen": [242, 850], "fnin": [242, 850], "00267": [242, 850], "greischar": [242, 564], "cori": [242, 564], "burghi": [242, 564], "carien": [242, 564], "reekum": [242, 564], "daren": [242, 564], "jackson": [242, 564], "diego": [242, 564], "pizzag": [242, 564], "corrina": [242, 564], "mueller": [242, 564], "davidson": [242, 564], "electroencephalograph": [242, 564], "hne": [242, 416], "073": [242, 416], "gari": [242, 678], "heiman": [242, 678], "houghton": [242, 678], "mifflin": [242, 678], "boston": [242, 253, 678, 863], "17028": [242, 678], "joerg": [242, 295], "hipp": [242, 295], "hawellek": 242, "maurizio": 242, "corbetta": 242, "marku": [242, 295], "siegel": [242, 295], "engel": [242, 295], "spontan": [242, 851], "percept": [242, 295, 831, 852, 876], "aapo": [242, 556], "hyv\u00e4rinen": [242, 556], "761722": [242, 556], "toga": 242, "mazziotta": 242, "academ": 242, "san": 242, "b978": 242, "012693019": 242, "50012": 242, "bf02512476": [242, 523], "tkk": 242, "a559": 242, "helsinki": 242, "16463": 242, "kevin": [242, 725, 728], "jone": [242, 725, 728], "bernic": [242, 725, 728], "porjesz": [242, 725, 728], "chorlian": [242, 725, 728], "madhavi": [242, 725, 728], "rangaswami": [242, 725, 728], "chella": [242, 725, 728], "kamarajan": [242, 725, 728], "ajayan": [242, 725, 728], "padmanabhapillai": [242, 725, 728], "stimu": [242, 725, 728], "henri": [242, 725, 728], "begleit": [242, 725, 728], "deficit": [242, 725, 728], "diagnos": [242, 725, 728, 876], "alcohol": [242, 725, 728], "2128": [242, 725, 728], "jorg": 242, "jovicich": 242, "silvest": 242, "czanner": 242, "elizabeth": 242, "halei": 242, "andr": [242, 876], "kennedi": 242, "franz": 242, "schmitt": 242, "gregori": 242, "brown": [242, 538, 656], "macfal": 242, "436": 242, "antti": [242, 876], "ahonen": 242, "lain": 242, "claudia": [242, 858], "tesch": [242, 858], "3315": 242, "3320": 242, "281163": 242, "zhou": [242, 408], "1990": [242, 408], "bf01129656": [242, 408], "philipp": 242, "lachaux": 242, "eugenio": 242, "rodriguez": [242, 876], "martineri": 242, "francisco": 242, "varela": 242, "synchroni": 242, "hbm4": 242, "attent": [242, 268, 273, 861], "ledoit": [242, 352], "wolf": [242, 352], "s0047": [242, 352], "259x": [242, 352], "00096": [242, 352], "te": [242, 556, 876], "girolami": [242, 556, 582], "subgaussian": [242, 556, 582, 876], "supergaussian": [242, 556, 582], "089976699300016719": [242, 556], "seok": [242, 851], "lew": [242, 851], "carsten": [242, 851], "wolter": [242, 851], "anwand": [242, 851], "macleod": [242, 851], "compart": [242, 254, 520, 831, 851, 861], "2862": [242, 851], "2878": [242, 851], "20714": [242, 851], "witzel": [242, 534, 653, 658], "8945": 242, "8950": 242, "10024": [242, 876], "lowri": [242, 678], "vassarstat": [242, 678], "bernard": [242, 656], "giusiano": [242, 656], "roehri": [242, 656], "b\u00e9nar": [242, 656], "kathryn": [242, 385], "mill": [242, 385], "6084": [242, 385], "m9": [242, 385], "figshar": [242, 385], "3498446": [242, 385], "molin": [242, 538, 656], "quantif": [242, 429, 538, 656, 842], "1069": [242, 538, 656], "paul": [242, 858, 876], "748978": [242, 858], "ali": [242, 725, 728], "moukadem": [242, 725, 728], "zi": [242, 725, 728], "bouguila": [242, 725, 728], "djaffar": [242, 725, 728], "ould": [242, 725, 728], "abdeslam": [242, 725, 728], "alain": [242, 725, 728], "dieterlen": [242, 725, 728], "lisbon": [242, 725, 728], "6952743": [242, 725, 728], "mourtazaev": [242, 400], "1093": [242, 400], "suresh": [242, 561], "muthukumaraswami": [242, 561], "00138": [242, 561], "ndiay": 242, "fercoq": 242, "salmon": 242, "sugiyama": 242, "luxburg": 242, "guyon": 242, "garnett": 242, "curran": 242, "inc": [242, 835, 840], "nip": [242, 471], "cc": [242, 471, 857], "6405": 242, "holm": [242, 685], "primer": [242, 685], "1058": [242, 685], "ou": 242, "bai": 242, "wheaton": 242, "sherri": 242, "vorbach": 242, "hallett": 242, "2292": 242, "2307": 242, "zieh": 242, "aloi": 242, "schl\u00f6gl": 242, "kr\u00e4mer": 242, "brismar": 242, "robustli": 242, "physrevlett": 242, "234101": 242, "hilla": [242, 390], "paananen": [242, 390], "jyrki": [242, 390], "m\u00e4kel\u00e4": [242, 390], "5281": [242, 390], "zenodo": [242, 390, 850], "889234": [242, 390], "reilli": [242, 386, 852, 876], "mayada": [242, 386, 852], "elsabbagh": [242, 386, 852], "infant": [242, 386, 876], "117682": [242, 386, 852], "thom": [242, 851], "oostendorp": [242, 851], "delbek": [242, 851], "dick": [242, 851], "stegeman": [242, 851], "vitro": [242, 851], "1487": [242, 851], "880100": [242, 851], "oppenheim": [242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 696, 699], "schafer": [242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 696, 699], "buck": [242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 696, 699], "prentic": [242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 696, 699], "hall": [242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 696, 699], "saddl": [242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 696, 699], "river": [242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 696, 699], "754920": [242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 696, 699], "roberto": [242, 523, 858], "pascual": [242, 523, 858], "marqui": [242, 523, 858], "martha": [242, 523, 858], "koukkou": [242, 523, 858], "kieko": [242, 523, 858], "kochi": [242, 523, 858], "bernd": [242, 523, 858], "saletu": [242, 523, 858], "hideaki": [242, 523, 858], "tanaka": [242, 523, 858], "koichi": [242, 523, 858], "hirata": [242, 523, 858], "lesli": [242, 523, 858], "prichep": [242, 523, 858], "rolando": [242, 523, 858], "biscai": [242, 523, 858], "lirio": [242, 523, 858], "toshihiko": [242, 523, 858], "kinoshita": [242, 523, 858], "royal": [242, 352, 523, 858], "1952": [242, 523, 858], "3768": [242, 523, 858], "3784": [242, 523, 858], "rsta": [242, 523, 858], "0081": [242, 523, 858], "donald": 242, "perciv": 242, "walden": 242, "35532": 242, "cbo9780511622762": 242, "dinh": [242, 876], "tuan": 242, "pham": 242, "hermitian": 242, "1136": 242, "1152": 242, "s089547980035689x": 242, "luca": [242, 588], "pollonini": [242, 588], "cristen": [242, 588], "homer": [242, 588], "abaya": [242, 588], "heather": [242, 588], "bortfeld": [242, 588], "beauchamp": [242, 269, 273, 277, 588, 801], "oghalai": [242, 588], "cochlear": [242, 588], "ernesto": 242, "pereda": 242, "ricardo": 242, "bru": 242, "\u00f1": 242, "maest": 242, "\u00fa": 242, "dog": 242, "056011": 242, "2552": 242, "aacfe4": 242, "sanchez": [242, 386], "meek": [242, 386], "wanz": [242, 386], "xie": [242, 386], "1254": [242, 386], "1259": [242, 386], "hat": [242, 531, 567, 656, 689, 690, 858, 876], "noam": [242, 571], "pele": [242, 571], "00694": [242, 571], "abraham": [242, 262, 263, 264, 265, 476, 477], "savitzki": [242, 262, 263, 264, 265, 476, 477], "marcel": [242, 262, 263, 264, 265, 476, 477], "golai": [242, 262, 263, 264, 265, 476, 477, 876], "chemistri": [242, 262, 263, 264, 265, 476, 477], "1627": [242, 262, 263, 264, 265, 476, 477], "1964": [242, 262, 263, 264, 265, 476, 477], "ac60214a047": [242, 262, 263, 264, 265, 476, 477], "nathaniel": [242, 682], "marta": [242, 682], "12320": [242, 682], "corn": 242, "stam": 242, "daffertshof": 242, "diminish": 242, "1193": 242, "20346": 242, "086": [242, 653, 658], "luigi": [242, 725, 728], "rodino": [242, 725, 728], "bert": [242, 725, 728], "schulz": [242, 725, 728, 876], "wong": [242, 725, 728, 876], "pseudo": [242, 295, 296, 312, 725, 728], "american": [242, 725, 728], "1090": [242, 725, 728], "fic": [242, 725, 728], "2218": [242, 473], "2228": [242, 473], "tmi": [242, 473], "2553445": [242, 473], "evelina": 242, "busa": 242, "glessner": 242, "hybrid": 242, "1060": 242, "1075": 242, "catherin": [242, 712, 722, 723, 726], "tallon": [242, 712, 722, 723, 726], "baudri": [242, 712, 722, 723, 726], "claud": [242, 712, 722, 723, 726], "delpuech": [242, 712, 722, 723, 726], "734": [242, 712, 722, 723, 726], "jneurosci": [242, 712, 722, 723, 725, 726, 728], "00722": [242, 712, 722, 723, 726], "minna": [242, 858], "huotilainen": [242, 858], "oili": [242, 858], "salonen": [242, 858], "00064": [242, 858], "bishop": [242, 352], "1467": [242, 352], "9868": [242, 352], "00196": [242, 352], "vinck": 242, "wingerden": 242, "franscesco": 242, "battaglia": 242, "cyriel": 242, "pennartz": 242, "1548": 242, "womelsdorf": 242, "pascal": 242, "fri": 242, "rhythmic": 242, "wehner": [242, 429], "modi": [242, 429], "children": [242, 253, 429, 861, 863], "wheat": [242, 725, 728], "pier": [242, 725, 728], "cornelissen": [242, 725, 728], "frost": [242, 725, 728], "hansen": [242, 725, 728], "phonologi": [242, 725, 728], "5229": [242, 725, 728], "5233": [242, 725, 728], "whitham": [242, 556], "sean": [242, 556], "fitzgibbon": [242, 556], "clark": [242, 556, 876], "loveless": [242, 556], "marita": [242, 556], "broberg": [242, 556], "angu": [242, 556], "wallac": [242, 556], "lilli": [242, 556], "hardi": [242, 556], "rik": [242, 556], "fronsko": [242, 556], "alyson": [242, 556], "pulbrook": [242, 556], "paralysi": [242, 556], "1877": [242, 556], "1888": [242, 556], "rei": [242, 471], "ram\u00edrez": [242, 471], "jason": [242, 471], "palmer": [242, 471], "bhaskar": [242, 471], "rao": [242, 471], "neuroelectromagnet": [242, 471], "sch\u00f6lkopf": [242, 471], "platt": [242, 471], "hoffman": [242, 471], "1505": [242, 471], "3089": [242, 471], "jun": [242, 656], "juliu": [242, 656, 876], "dewald": [242, 656], "april": [242, 656], "zhi": [242, 858, 876], "multilay": [242, 858], "moritz": [242, 408, 876], "wentrup": [242, 408], "buss": [242, 408], "921154": [242, 408], "jair": [242, 556, 876], "montoya": [242, 556, 876], "mart\u00ednez": [242, 556], "petr": [242, 556], "tichavsk\u00fd": [242, 556], "massoud": [242, 556], "babai": [242, 556], "zadeh": [242, 556], "nad\u00e8g": [242, 556], "thirion": [242, 556], "moreau": [242, 556], "latent": [242, 556, 790], "10169": [242, 556], "lectur": [242, 556, 860], "cham": [242, 556], "53547": [242, 556], "0_27": [242, 556], "pharmacologi": [242, 523, 858], "pubm": [242, 523, 858], "ncbi": [242, 523, 858], "nlm": [242, 523, 858], "nih": [242, 523, 858], "gov": [242, 523, 858], "12575463": [242, 523, 858], "encyclopedia": 242, "php": 242, "international_system_of_unit": 242, "oldid": 242, "982683558": 242, "googl": [243, 253, 808, 864, 876], "scholar": 243, "dec": [243, 741, 834], "1370": 243, "1640": 243, "health": 253, "r01": 253, "eb009048": 253, "eb006385": 253, "hd040712": 253, "ns044319": 253, "ns037462": 253, "ns104585": 253, "p41": 253, "eb015896": 253, "rr014075": 253, "foundat": [253, 857], "0958669": 253, "1042134": 253, "european": [253, 858], "council": 253, "ystg": 253, "263584": 253, "676943": 253, "depart": 253, "fg02": 253, "99er62764": 253, "agenc": 253, "national": 253, "la": [253, 852, 863, 876], "recherch": [253, 863], "neuc": 253, "0002": 253, "idex": 253, "pari": [253, 876], "saclai": 253, "0003": 253, "summer": [253, 864, 876], "year": [253, 267, 400, 850, 857, 864], "amazon": 253, "grant": [253, 264, 265, 295, 296, 352, 356, 357, 367, 368, 369, 408, 415, 451, 452, 471, 473, 474, 534, 783, 835, 857, 876], "zuckerberg": 253, "eoss2": [253, 864], "eoss4": 253, "employe": [253, 857], "duti": [253, 857], "aalto": [253, 852, 863], "yliopiston": [253, 863], "perustieteiden": [253, 863], "korkeakoulu": [253, 863], "athinoula": [253, 852, 863], "martino": [253, 852, 863], "hospit": [253, 852, 863], "philadelphia": [253, 863], "donder": [253, 863], "behaviour": [253, 256, 504, 506, 863], "radboud": [253, 863], "school": [253, 863], "informatiqu": [253, 863], "automatiqu": [253, 863], "franzen": [253, 863], "universit\u00e4t": [253, 863], "graz": [253, 863], "macquari": [253, 852, 863], "massachusett": [253, 863], "planck": [253, 863], "f\u00fcr": [253, 863], "bildungsforschung": [253, 863], "uniwersytet": [253, 863], "humanistycznospo\u0142eczni": [253, 863], "washington": [253, 863], "aarhu": [253, 863], "universitet": [253, 863], "commissariat": [253, 863], "\u00e0": [253, 863], "\u00e9nergi": [253, 863], "atomiqu": [253, 863], "aux": [253, 863], "forschungszentrum": [253, 863], "j\u00fclich": [253, 863], "du": [253, 863], "cerveau": [253, 863], "moell": [253, 863], "\u00e9pini\u00e8r": [253, 863], "sant\u00e9": [253, 863], "m\u00e9dical": [253, 863], "technisch": [253, 863], "t\u00e9l\u00e9com": [253, 863], "exit": [254, 268, 467, 545, 835], "outfil": 254, "anon": 254, "keep_hi": [254, 262, 263, 264, 265, 476, 477, 478, 876], "n_dai": 254, "daysback": [254, 262, 263, 264, 265, 476, 477, 478], "anonymize_info": [254, 262, 263, 264, 265, 476, 477, 866, 876], "resav": 254, "projoff": [254, 876], "navigaton": 254, "show_opt": [254, 476, 477, 796], "dialog": [254, 262, 263, 264, 265, 476, 477, 796, 799, 841], "allowmaxshield": 254, "filtord": [254, 476, 477, 796, 876], "iir": [254, 262, 263, 264, 265, 410, 419, 443, 444, 446, 447, 476, 477, 568, 569, 588, 650, 660, 709, 784, 796, 865, 876], "clamp": [254, 476, 477, 743, 796], "filterchpi": [254, 876], "head_shap": 254, "out_fnam": 254, "rotation_x": [254, 487], "compensatori": 254, "deg": 254, "ecg_ch": [254, 487], "eog_ch": [254, 487, 876], "e31": [254, 487], "e63": [254, 487], "my_raw": 254, "quiet": [254, 262, 263, 699], "mne_process_raw": [254, 861], "in_raw": 254, "clean_raw": 254, "file_a": 254, "file_b": 254, "test_raw_sss": 254, "filters": 254, "tap": [254, 568, 569, 576, 577, 852], "rej": 254, "rej_grad": 254, "rej_mag": 254, "rej_eeg": 254, "rej_eog": 254, "bad_fnam": 254, "raw_event_fnam": 254, "tstart": [254, 269, 270, 273, 276, 277, 278, 568, 569, 576, 577, 579, 876], "qrsthr": 254, "qrs_threshold": [254, 568, 576, 579], "eog_l_freq": [254, 569], "eog_h_freq": [254, 569], "head_opac": [254, 467], "trackbal": [254, 264, 265, 467, 743, 759, 778], "terrain": [254, 264, 265, 467, 743, 759, 778, 876], "flash30": [254, 301, 858, 876], "noflash30": [254, 858], "flash5": [254, 301, 305, 858, 876], "multiecho": [254, 301, 305], "echo": [254, 301, 834, 840, 841, 858], "noconvert": 254, "deprec": [254, 795, 866, 876], "unwarp": [254, 301, 858], "grad_unwarp": [254, 301, 858], "symlink": [254, 305, 307, 876], "flash_path": 254, "parameter_map": [254, 305, 858], "mef05": 254, "mef30": 254, "mef05_": [254, 301, 876], "mef30_": [254, 301, 876], "spin": [254, 305], "termin": [254, 833, 834, 835, 838, 839, 841, 846, 855, 866, 876], "kt2fiff": 254, "mkheadsurf": [254, 306], "topolog": [254, 306, 363, 407, 427, 458, 604, 633, 635, 824, 851, 876], "suffix": [254, 272, 476, 477, 489, 876], "_sss": 254, "origin_out": 254, "autobad": 254, "maxst": 254, "buflen": 254, "st_buflen": 254, "st_corr": 254, "mv_tran": 254, "in_fnam": 254, "movecomp": 254, "mv_hp": 254, "ascii": [254, 492, 602, 608, 630, 876], "hpistep": 254, "mv_hpistep": 254, "hpisubt": 254, "mv_hpisubt": 254, "nohpicon": 254, "linefreq": 254, "nooverwrit": 254, "mx_arg": 254, "sof": 254, "bmin": 254, "bash": [254, 834, 835, 840, 841, 846], "TO": 254, "brainc": 254, "skullc": 254, "scalpc": 254, "homog": [254, 513, 851], "7mm": 254, "joblib": [254, 262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 280, 352, 353, 355, 357, 411, 418, 421, 424, 425, 451, 464, 466, 476, 477, 515, 518, 519, 529, 530, 539, 540, 561, 568, 569, 639, 644, 647, 648, 649, 661, 683, 684, 685, 686, 687, 698, 700, 701, 702, 703, 704, 705, 706, 714, 715, 723, 724, 725, 726, 727, 775, 778, 797, 864, 876], "cp": [254, 841, 858, 876], "mri_watersh": [254, 307, 855, 858], "gcaatla": [254, 307, 855], "brain_atla": [254, 307], "preflood": [254, 307, 855], "brainmask": [254, 307, 855, 876], "fname2": 254, "parser": [255, 437, 876], "reaverag": 255, "category_nam": 255, "acq_dict": 255, "subav": 255, "subaverag": [255, 861], "__len__": [255, 256, 258, 259, 260, 262, 263, 267, 268, 271, 272, 286, 300, 476, 477, 522, 697, 698, 699, 731], "n_cat": 255, "uint_cast": [255, 449], "delayed_lookup": 255, "acqp": 255, "mne_stim_channel_2": [255, 449, 450], "uint16": [255, 449], "sti014": [255, 449, 876], "sti016": [255, 449], "32768": [255, 407, 449], "mne_fix_stim14": [255, 449], "slight": [255, 876], "asynchroni": 255, "conds_data": 255, "n_epochs_out": 255, "n_annot": 256, "iso8601": 256, "delimit": 256, "bad_flux": 256, "bad_nois": 256, "meg0111": [256, 257, 262, 263, 264, 265, 267, 308, 325, 327, 357, 367, 410, 424, 429, 476, 477, 555, 556, 558, 571, 572, 573, 578, 581, 590, 592, 599, 631, 664, 682, 691, 696, 698, 699, 700, 704, 705, 706, 707, 709, 727, 767, 773, 774, 777, 779, 780, 787, 794, 797], "meg2563": 256, "meg1443": 256, "n_blink": 256, "yy": [256, 488], "______________": 256, "_________": 256, "anot": 256, "___________________": 256, "o_________": 256, "________________________": 256, "o______________": 256, "crash": [256, 876], "o________________________": 256, "bad_acq_skip": [256, 262, 263, 264, 265, 476, 477, 496, 575, 584, 876], "__add__": [256, 258, 259, 268, 269, 270, 273, 275, 276, 277, 278, 310, 696], "concatenc": 256, "__iter__": [256, 259, 262, 263, 267, 271, 286, 300, 522, 646, 698, 699, 731], "array_lik": [256, 257, 259, 260, 262, 263, 264, 265, 267, 271, 272, 281, 308, 310, 325, 327, 357, 366, 367, 408, 410, 415, 418, 421, 423, 424, 425, 429, 435, 474, 476, 477, 487, 500, 515, 520, 555, 556, 557, 558, 561, 565, 566, 567, 570, 571, 572, 573, 575, 578, 581, 584, 590, 592, 598, 599, 610, 634, 635, 650, 664, 674, 675, 678, 680, 681, 682, 690, 691, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 712, 722, 726, 727, 743, 748, 759, 760, 767, 773, 774, 775, 777, 779, 780, 782, 783, 784, 785, 786, 787, 788, 789, 791, 793, 794, 795, 797, 798, 799, 803, 805], "use_orig_tim": [256, 876], "676071": 256, "shortstimulu": 256, "longstimulu": 256, "tabular": [256, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 696, 698, 699, 700], "on_miss": [257, 262, 263, 264, 265, 267, 282, 283, 314, 346, 347, 400, 435, 455, 476, 477, 696, 698, 699, 700, 776, 876], "preload_at_end": 257, "event_rep": [257, 262, 876], "raw_sfreq": [257, 263], "abstract": [257, 864], "meg2623": [257, 262, 263, 264, 265, 267, 308, 325, 327, 357, 367, 410, 424, 429, 476, 477, 555, 556, 558, 571, 572, 573, 578, 581, 590, 592, 599, 664, 682, 691, 696, 698, 699, 700, 704, 705, 706, 707, 709, 727, 767, 773, 774, 777, 779, 780, 787, 794, 797], "ptp": [257, 262, 263, 556, 558, 572], "40e": [257, 262, 263, 357, 556, 572, 573, 682], "zeroth": [257, 262, 876], "unproject": [257, 262, 516, 607], "postpon": [257, 262, 516, 607], "silent": [257, 262, 400, 585, 853, 876], "irrespect": [257, 262, 363, 427, 458, 604, 633, 635, 824, 858], "coincid": [257, 262], "my_epoch": 257, "compensation_grad": [257, 262, 263, 264, 265, 267, 475, 476, 477, 556, 696, 698, 699, 700], "__sub__": [258, 268, 269, 270, 273, 276, 277, 278, 696], "nfree": [259, 260, 861, 876], "eig": [259, 861], "eigvec": [259, 861], "eigenvector": [259, 858, 861], "__contains__": [259, 262, 263, 264, 265, 267, 271, 286, 300, 476, 477, 522, 556, 696, 698, 699, 700, 731], "as_diag": 259, "diagnois": 259, "fromkei": [259, 267, 271, 286, 300, 522, 731], "fig_svd": [259, 768], "1e13": [259, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 352, 356, 357, 408, 415, 417, 476, 477, 774, 777, 779, 781, 782, 804], "1e15": [259, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 352, 356, 357, 408, 415, 417, 476, 477, 774, 777, 779, 781, 782, 804], "pluss": [259, 262, 263, 264, 265, 271, 408, 415, 476, 477, 555, 556, 570, 696, 698, 700, 760, 775, 782, 786, 795, 798, 803, 805], "markeredgecolor": [259, 262, 263, 264, 265, 408, 415, 476, 477, 555, 696, 698, 700, 760, 775, 782, 798, 803, 805], "mask_po": [259, 262, 263, 264, 265, 271, 408, 415, 476, 477, 555, 556, 570, 696, 698, 700, 760, 775, 782, 786, 795, 798, 803, 805], "cloughtocher2dinterpol": [259, 262, 263, 264, 265, 271, 408, 415, 476, 477, 555, 556, 570, 696, 698, 700, 760, 775, 782, 786, 795, 798, 803, 805], "linearndinterpol": [259, 262, 263, 264, 265, 271, 408, 415, 476, 477, 555, 556, 570, 696, 698, 700, 760, 775, 782, 786, 795, 798, 803, 805], "encompass": [259, 262, 263, 264, 265, 271, 408, 415, 476, 477, 555, 556, 570, 696, 698, 700, 760, 775, 782, 786, 795, 798, 803, 805], "polygon": [259, 262, 263, 264, 265, 271, 408, 415, 476, 477, 555, 556, 570, 696, 698, 700, 760, 775, 782, 786, 795, 798, 803, 805, 809, 876], "hull": [259, 262, 263, 264, 265, 271, 408, 415, 476, 477, 555, 556, 570, 696, 698, 700, 760, 775, 782, 786, 795, 798, 803, 805, 876], "doc": [259, 262, 263, 264, 265, 271, 408, 415, 476, 477, 555, 556, 642, 696, 698, 700, 712, 722, 760, 775, 782, 786, 795, 798, 803, 805, 835, 855, 864, 876], "rightmost": [259, 262, 263, 264, 265, 271, 408, 415, 476, 477, 555, 556, 696, 698, 700, 775, 782, 786, 795, 798, 803], "mini": [259, 262, 263, 264, 265, 271, 408, 415, 476, 477, 555, 556, 696, 698, 700, 775, 782, 786, 795, 798, 803], "unrepresent": [259, 267, 271, 286, 300, 522, 731], "popitem": [259, 267, 271, 286, 300, 522, 731], "lifo": [259, 267, 271, 286, 300, 522, 731], "setdefault": [259, 267, 271, 286, 300, 522, 731], "khi2": 260, "mne_dipole_fit": [260, 876], "longitudin": 260, "qlong": 260, "qtran": 260, "\u03c7": 260, "dipolefix": [260, 451, 606, 866], "plot_amplitud": 260, "show_al": [260, 771], "highlight_color": [260, 771], "head_sourc": [260, 515, 771, 876], "glyph": [260, 270, 276, 278, 743, 759, 771, 802, 806, 808, 876], "cube": [260, 771, 876], "mri_rot": [260, 771], "figure3d": [260, 264, 265, 269, 270, 272, 273, 275, 276, 277, 278, 752, 759, 771, 778, 801, 802, 806, 813, 835, 853, 866], "600x600": [260, 759, 771], "get_head_surf": [260, 515, 771, 866, 876], "bdip": [260, 606, 876], "use_round": [260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 437, 476, 477, 696, 699], "pos_mni": 260, "n_po": [260, 340, 342, 469, 470, 785], "subdirectori": [260, 460, 743], "aspect_kind": 261, "combine_event_id": [262, 866], "id_numb": 262, "event_id_1": 262, "event_id_2": 262, "new_id_numb": 262, "programmat": 262, "lost": [262, 263, 264, 265, 438, 439, 440, 441, 476, 477, 833], "no_data": [262, 699], "equalized_count": [262, 699], "membership": [262, 263, 264, 265, 476, 477, 556, 696, 698, 699, 700, 876], "audio_left": [262, 263, 699], "name_1": [262, 263, 699], "name_2": [262, 263, 699], "likewis": [262, 263, 699, 857, 858], "eval": [262, 263, 699], "col_a": [262, 263, 699], "col_b": [262, 263, 699], "add_annotations_to_metadata": [262, 263], "annot_onset": [262, 263], "annot_dur": [262, 263], "annot_descript": [262, 263], "add_list": [262, 263, 264, 265, 476, 477, 696, 698, 699, 700], "force_update_info": [262, 263, 264, 265, 476, 477, 696, 698, 699, 700], "overwritten": [262, 263, 264, 265, 384, 476, 477, 478, 570, 585, 696, 698, 699, 700, 876], "memmap": [262, 263, 264, 265, 476, 477, 639, 696, 698, 699, 700, 876], "resiz": [262, 263, 264, 265, 476, 477, 696, 698, 699, 700, 782, 876], "januari": [262, 263, 264, 265, 476, 477, 478, 861], "1\u02e2\u1d57": [262, 263, 264, 265, 476, 477, 478], "his_id": [262, 263, 264, 265, 267, 476, 477, 478], "birthdai": [262, 263, 264, 265, 267, 476, 477, 478, 876], "revert": [262, 263, 616, 823, 876], "channel_wis": [262, 263, 264, 265, 476, 477, 876], "parallel_backend": [262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 280, 352, 353, 355, 357, 411, 418, 421, 424, 425, 451, 464, 466, 476, 477, 515, 518, 519, 529, 530, 539, 540, 561, 568, 569, 644, 647, 648, 649, 661, 683, 684, 685, 686, 687, 698, 700, 701, 702, 703, 704, 705, 706, 714, 715, 723, 724, 725, 726, 727, 775, 778, 797, 876], "workload": [262, 263, 264, 265, 476, 477], "x_a": [262, 263, 264, 265, 476, 477], "2u": [262, 263, 264, 265, 476, 477], "enevlop": [262, 263, 264, 265, 476, 477], "hint": [262, 263, 264, 265, 476, 477, 774], "projs_a": [262, 263, 264, 265, 476, 477], "proj_a": [262, 263, 264, 265, 476, 477], "projs_b": [262, 263, 264, 265, 476, 477], "proj_b": [262, 263, 264, 265, 476, 477], "_v": [262, 263, 264, 265, 876], "emphas": [262, 263, 264, 265], "legendr": [262, 263, 264, 265, 476, 477, 515, 565, 858], "by_event_typ": [262, 263, 876], "trim_mean": [262, 263], "low_bia": [262, 263, 264, 265, 413, 476, 477, 529, 530, 698, 700, 703, 706, 708, 714, 775], "undrop": [262, 263], "timeout": [262, 263], "forev": [262, 263, 876], "lenient": [262, 263], "drop_log_stat": [262, 263], "perc": [262, 263], "mintim": [262, 263, 431], "seek": [262, 263, 416, 431], "nonspati": [262, 263], "fmt": [262, 263, 264, 265, 438, 439, 441, 476, 477, 858, 876], "eeglabio": [262, 263, 438, 441, 476, 477, 876], "cart_to_eeglab": [262, 263, 438, 441, 476, 477], "5500m": [262, 263, 264, 265, 410, 419, 444, 446, 447, 476, 477], "cuda": [262, 263, 264, 265, 410, 414, 419, 420, 446, 447, 448, 476, 477, 839, 845, 855, 866, 876], "constrict": [262, 263, 264, 265, 444, 446, 447, 476, 477], "reflect_limit": [262, 263, 264, 265, 446, 447, 448, 476, 477], "savgol_filt": [262, 263, 264, 265, 476, 477], "get_annotations_per_epoch": [262, 263], "epoch_annot": [262, 263], "only_data_ch": [262, 263, 264, 265, 267, 476, 477, 556, 696, 698, 699, 700], "alia": [262, 263, 264, 265, 275, 476, 477, 591, 741, 759, 796, 835, 876], "unitless": [262, 263, 264, 265, 476, 477, 858], "return_event_id": [262, 263, 611, 698, 699, 876], "respiratori": [262, 263, 264, 265, 476, 477, 553, 696, 698, 699, 700, 876], "excit": [262, 263, 264, 265, 267, 476, 477, 553, 696, 698, 699, 700, 858], "galvan": [262, 263, 264, 265, 476, 477, 553, 696, 698, 699, 700, 858, 876], "epoch_color": [262, 263, 773], "use_opengl": [262, 263, 476, 477, 556, 773, 790, 796, 876], "theme": [262, 263, 476, 477, 556, 743, 773, 790, 796, 876], "overview_mod": [262, 263, 476, 477, 556, 773, 790, 796, 876], "5th": [262, 263, 264, 265, 272, 476, 477, 773, 796], "1e2": [262, 263, 272, 476, 477, 773, 796], "20\u00b5v": [262, 263, 272, 476, 477, 773, 796], "ital": [262, 263, 264, 265, 476, 477, 773, 777, 781, 796, 861], "zen": [262, 263, 476, 477, 556, 773, 790, 796, 876], "selector": [262, 263, 264, 265, 476, 477, 773, 796, 799, 861, 876], "processor": [262, 263, 383, 476, 477, 556, 773, 790, 796], "pyopengl": [262, 263, 476, 477, 556, 773, 790, 796], "stylesheet": [262, 263, 476, 477, 556, 743, 773, 790, 796], "qdarkstyl": [262, 263, 476, 477, 556, 743, 773, 790, 796], "darkdetect": [262, 263, 476, 477, 556, 743, 773, 790, 796], "mpl": [262, 263, 269, 270, 273, 276, 277, 278, 476, 477, 743, 773, 796, 801, 806], "tkagg": [262, 263, 476, 477, 773, 796], "f11": [262, 263, 476, 477, 773, 796], "set_browser_backend": [262, 263, 476, 477, 556, 773, 790, 796, 815, 866, 876], "magic": [262, 263, 476, 477, 556, 773, 790, 796, 833, 855], "qt5": [262, 263, 476, 477, 556, 773, 790, 796, 839], "n_max_plot": [262, 263, 772], "good_epoch": [262, 263, 774], "area_alpha": [262, 263, 264, 265, 476, 477, 797], "line_alpha": [262, 263, 264, 265, 476, 477, 797], "asd": [262, 263, 264, 265, 476, 477, 797], "idiom": [262, 263, 264, 265, 476, 477, 797, 835], "decibel": [262, 263, 264, 265, 273, 476, 477, 529, 698, 700, 775], "log\u2081\u2080": [262, 263, 264, 265, 476, 477, 681, 698, 700, 775], "ch_group": [262, 263, 264, 265, 476, 477, 799], "to_spher": [262, 263, 264, 265, 476, 477, 799, 876], "n_ch_group": [262, 263, 264, 265, 476, 477, 799], "n_pick": [262, 263, 264, 265, 476, 477, 599, 799], "plot_raw": [262, 263, 264, 265, 476, 477, 799, 812, 866, 876], "downward": [262, 263, 264, 265, 476, 477, 799], "plot_layout": [262, 263, 264, 265, 476, 477, 799, 866, 876], "layout_scal": [262, 263, 264, 265, 696, 756, 781, 804], "fig_background": [262, 263, 264, 265, 696, 781, 804], "canva": [262, 263, 264, 265, 696, 756, 781, 804, 858], "allow_dupl": [262, 263, 264, 265, 310, 338, 476, 477, 632, 876], "eeg061": [262, 263, 264, 265, 310, 338, 476, 477, 632], "eeg161": [262, 263, 264, 265, 310, 338, 476, 477, 632], "anti": [262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 809, 876], "reset_drop_log_select": [262, 263, 876], "meaningless": [262, 263], "split_siz": [262, 263, 476, 477], "2gb": [262, 263, 476, 477, 876], "split_nam": [262, 263, 476, 477, 876], "100mb": [262, 263, 476, 477], "partit": [262, 263, 357, 476, 477, 684, 858, 876], "schema": [262, 263, 476, 477], "fname_split": [262, 263, 476, 477], "github": [262, 263, 264, 265, 476, 477, 833, 843, 847, 854, 855, 856, 857], "bbac101d50176611136b": [262, 263, 264, 265, 476, 477], "setter": [262, 263, 476, 477], "set_meas_d": [262, 263, 264, 265, 476, 477, 876], "match_cas": [262, 263, 264, 265, 267, 476, 477, 876], "match_alia": [262, 263, 264, 265, 267, 476, 477, 876], "channel_loc_alias": [262, 263, 264, 265, 267, 476, 477], "make_dig_montag": [262, 263, 264, 265, 267, 310, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 476, 477, 499, 858, 866, 876], "std_err": [262, 263], "mechan": [262, 263, 857], "1591": [262, 263], "juli": [262, 263], "rangeindex": [262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 696, 698, 699, 700], "float64index": [262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 696, 698, 699, 700], "int64index": [262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 696, 698, 699, 700], "timedeltaindex": [262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 476, 477, 696, 699], "elicit": [264, 476, 496, 614, 852], "__neg__": [264, 265, 269, 270, 273, 276, 277, 278], "negat": [264, 265, 269, 270, 273, 276, 277, 278], "evoked_neg": [264, 265], "prepend": [264, 265], "resum": [264, 265, 857], "mff": [264, 265, 331, 439, 440, 493, 615, 858, 876], "export_evokeds_mff": [264, 265, 439, 866, 876], "merge_grad": [264, 265, 781, 876], "unsort": [264, 265, 777], "weakest": [264, 265, 777, 876], "obscur": [264, 265, 777], "multiax": [264, 265, 777], "t_start": [264, 265, 777], "t_end": [264, 265, 777], "surf_map": [264, 265, 515, 778], "n_contour": [264, 265, 778], "turntabl": [264, 265, 467, 743, 759, 778], "unintent": [264, 265, 467, 759, 778], "mask_cmap": [264, 265, 696, 779], "mask_alpha": [264, 265, 696, 779], "do_mask": [264, 265, 779], "illeg": [264, 265, 780], "01d": [264, 265, 408, 415, 782], "amplif": [264, 265, 295, 296, 352, 356, 357, 367, 368, 369, 408, 415, 451, 452, 471, 473, 474, 534, 783], "improperli": [264, 265, 295, 296, 352, 356, 357, 367, 368, 369, 408, 415, 451, 452, 468, 471, 473, 474, 534, 783, 876], "logger": [264, 265, 738, 740, 783], "_ave": [264, 265], "source_ori": [266, 861], "fiffv_mne_fixed_ori": [266, 861], "fiffv_mne_free_ori": [266, 861], "n_ori": 266, "source_rr": [266, 861], "n_sourc": [266, 295, 296, 408, 415, 453, 471, 473, 474], "nest": [267, 408, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 557, 740, 835], "fiffv_coil_meg": 267, "fiffv_eeg_ch": 267, "3x3": [267, 499, 523], "fiff_unit_t_m": 267, "fiff_unitm_non": 267, "ctfkind": [267, 861], "colcal": 267, "rowcal": 267, "save_calibr": [267, 861], "serial": 267, "fiffv_point_eeg": [267, 861], "fiffc_vers": 267, "machid": [267, 861], "mac": 267, "usec": [267, 861], "he_level_raw": 267, "helium": 267, "helium_level": 267, "orig_file_guid": 267, "mea": 267, "creator": 267, "ncoil": 267, "hpi_coil": 267, "corr_coeff": 267, "coil_freq": 267, "dig_point": 267, "good_limit": 267, "dist_limit": [267, 275, 280, 342, 861, 876], "coord_tran": 267, "event_channel": 267, "mri_id": 267, "block_id": 267, "max_info": 267, "sss_info": 267, "max_st": 267, "sss_ctc": 267, "sss_cal": 267, "smartshield": [267, 876], "last_nam": 267, "first_nam": 267, "middle_nam": 267, "month": 267, "sex": [267, 876], "male": [267, 400], "femal": [267, 400], "handed": 267, "ambidextr": 267, "kilogram": 267, "command_lin": [267, 275], "tilt": [267, 487, 743, 858, 876], "subsystem": [267, 835], "meas_fil": 267, "mri_fil": 267, "roundtrip": [267, 876], "shh": 267, "working_dir": [267, 275], "xplotter": 267, "__setitem__": 267, "conflict": [268, 833, 835, 839, 876], "accuru": [268, 273], "m\u00b2": [268, 831], "versionad": [268, 699, 759], "outside_vertic": 268, "lie": [268, 858], "get_tri": 268, "label_tri": 268, "get_vertices_us": 268, "label_vert": 268, "n_label_vertic": 268, "icosahedr": [268, 358, 407, 463, 464], "morph_label": [268, 619, 866, 876], "div1": [268, 673], "div2": [268, 673], "split_label": [268, 866, 876], "mris_divide_parcel": [268, 673], "n_part": [268, 673], "fring": 268, "sens_data": [269, 270, 273, 276, 277, 278], "volvectorsourceestim": [269, 270, 273, 274, 277, 866, 876], "__div__": [269, 270, 273, 276, 277, 278], "__mul__": [269, 270, 273, 276, 277, 278, 696], "tstop": [269, 270, 273, 276, 277, 278], "bihemilabel": [269, 270, 273, 276, 277, 278, 442, 510, 511, 866], "pane": [269, 273, 277, 743, 801, 841], "n_color": [269, 270, 273, 276, 277, 278, 762, 801, 806, 807], "hot": [269, 270, 273, 276, 277, 278, 801, 806], "diverg": [269, 270, 273, 276, 277, 278, 743, 762, 801, 806, 807, 835], "binar": [269, 270, 273, 276, 277, 278, 652, 654, 655, 743, 801, 806], "colorschem": [269, 270, 273, 276, 277, 278, 801, 806], "bone": [269, 270, 273, 276, 277, 278, 743, 801, 806], "high_contrast": [269, 270, 273, 276, 277, 278, 743, 801, 806], "resort": [269, 273, 277, 801, 855], "devot": [269, 270, 273, 276, 277, 278, 801, 806], "occupi": [269, 270, 273, 276, 277, 278, 466, 645, 801, 806], "blend": [269, 270, 273, 276, 277, 278, 743, 762, 801, 806], "mip": [269, 270, 273, 276, 277, 278, 743, 801, 806], "surface_alpha": [269, 270, 273, 276, 277, 278, 743, 801, 806], "enclos": [269, 270, 273, 276, 277, 278, 743, 801, 806, 858, 876], "silhouette_alpha": [269, 270, 273, 276, 277, 278, 743, 801, 806], "silhouette_linewidth": [269, 270, 273, 276, 277, 278, 743, 801, 806], "time_label_s": [269, 270, 273, 276, 277, 278, 743, 801, 806], "freesurferoccipitalflattenedpatch": [269, 273, 277, 801], "openwetwar": [269, 273, 277, 801], "transform_data": [269, 270, 273, 276, 277, 278], "tmin_idx": [269, 270, 273, 276, 277, 278], "tmax_idx": [269, 270, 273, 276, 277, 278], "indicic": [269, 270, 273, 276, 277, 278], "data_t": [269, 270, 273, 276, 277, 278], "direction": [270, 276, 278], "vector_alpha": [270, 276, 278, 743, 806], "sane": [270, 276, 278, 806], "fiffv_proj_item_field": [271, 861], "compute_proj_": 271, "webp": [272, 876], "fidel": 272, "lang": [272, 876], "n_file": 272, "clearer": [272, 876], "add_custom_css": [272, 876], "add_custom_j": [272, 876], "javascript": [272, 876], "topomap_kwarg": [272, 794], "drop_log_ignor": [272, 876], "declutt": 272, "inverseoper": [272, 523, 524, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 539, 540, 800, 866, 876], "inverse_op": 272, "altogeth": 272, "stc_plot_kwarg": 272, "add_sys_info": 272, "sysinfo": 272, "sort_cont": [272, 876], "on_error": 272, "n_time_points_stc": 272, "remove_al": 272, "removed_index": 272, "open_brows": 272, "nanoamper": 273, "log_10": 273, "sum_k": [273, 858], "s_k": [273, 858], "subject_orig": [273, 276], "vertices_to": [274, 358], "pre_affin": 274, "src_data": 274, "vol_morph_mat": 274, "affinemap": 274, "diffeomorphicmap": [274, 732, 733, 816], "stc_from": 274, "mri_spac": [274, 876], "nifti2": [274, 277, 278], "stc_to": 274, "nifti2imag": 274, "src_from": [274, 543], "monolith": 275, "fiffv_mne_surf_left_hemi": [275, 861], "fiffv_mne_surf_right_hemi": [275, 861], "fiffv_mne_surf_unknown": 275, "fiffv_coord_mri": [275, 861], "inus": [275, 861], "subject_his_id": [275, 358], "ntri": [275, 861], "nuse_tri": [275, 861], "pinfo": 275, "155295": 275, "155323": 275, "155330": 275, "patch_ind": 275, "n_src_remain": 275, "essenti": [275, 384, 851, 858, 861], "115407": 275, "nearest_dist": [275, 861], "mri_width": 275, "mri_height": 275, "mri_depth": 275, "neighbor_vert": 275, "mri_ras_t": 275, "fiffv_mne_coord_ra": 275, "src_mri_t": [275, 876], "vox_mri_t": 275, "fiffv_mne_coord_mri_voxel": 275, "mri_volume_nam": 275, "seg_nam": 275, "include_surfac": 275, "include_discret": 275, "dest": [275, 277, 278, 730], "use_lut": [275, 876], "mne_analyz": [275, 661, 758, 841, 852, 864, 876], "subvolum": [277, 278, 876], "upsampl": [277, 278, 442, 448], "trilinear": [277, 278, 442], "ensnur": [277, 278, 442], "bg_img": [277, 278, 807, 876], "initial_po": [277, 278, 807], "nutmeg": [277, 278, 807], "spatialimag": [277, 278, 301, 468, 732, 733, 807, 816], "src_sampl": [277, 278, 807], "stc_vol_sampl": [277, 278, 807], "vl": [277, 624], "save_as_volum": [277, 278, 876], "pick_channels_forward": [282, 283, 866], "evoked_templ": 282, "apply_forward_raw": [282, 866, 876], "zlogratio": [285, 539, 540, 696, 699, 803], "data_sc": 285, "apply_dics_epoch": [287, 288, 290, 866, 876], "meaningfulli": 288, "quadrant": 288, "apply_d": [288, 289, 290, 866, 876], "borgiotti": [295, 296], "kaplan": [295, 296], "\u03b8i": [295, 296], "arguabl": [295, 296], "max_pow": [295, 296], "expon": [295, 296, 452, 471, 473, 474, 534], "compute_depth_prior": [295, 296, 453, 471, 473, 474, 534, 866, 876], "n_weight": 295, "src_type": [295, 296], "is_free_ori": [295, 296], "supplement": 295, "is_ssp": 296, "vec_stc": 296, "rework": [296, 876], "resmat": [297, 532, 533, 535, 538], "n_dipoles_lcmv": 297, "n_dipoles_fwd": 297, "1996": 298, "1207": 298, "acssc": 298, "599135": 298, "mef": [301, 858], "mef05_001": 301, "mef30_001": 301, "flash5_img": [301, 305], "dig_kind": [303, 304, 427, 876], "origin_head": 303, "origin_devic": 303, "exclude_front": [304, 427], "n_pt": 304, "convert_flash_mri": [305, 858, 866, 876], "no_decim": 306, "watersh": [307, 852, 876], "autorecon1": [307, 855, 876], "idx_by_typ": 308, "read_dig_captrak": [310, 323, 326, 330, 331, 332, 333, 334, 335, 858, 866, 876], "read_dig_dat": [310, 326, 329, 331, 332, 333, 334, 335, 488, 858, 866, 876], "read_dig_egi": [310, 323, 326, 329, 330, 332, 333, 334, 335, 858, 866, 876], "read_dig_hpt": [310, 326, 329, 330, 331, 332, 334, 858, 866, 876], "read_dig_localit": [310, 323, 329, 330, 331, 332, 333, 335, 866, 876], "acpc": 310, "ch_po": [310, 323], "remove_fiduci": [310, 876], "circumst": [310, 437, 876], "x_max": 311, "y_min": 311, "y_max": 311, "my_layout": 311, "keep_stim": 312, "combined_inst": 312, "native_head_t": 314, "equalized_inst": [315, 433], "ch_adjac": [316, 327], "use_c": 318, "3022": [318, 476, 858], "sq20483n": [318, 476], "3023": [318, 476, 858], "sq20483": [318, 476], "sq20950n": [318, 476], "upgrad": [318, 476, 876], "ch_indic": 319, "bg_imag": 319, "reserv": [319, 835, 857, 876], "make_grid_layout": [319, 324, 866], "neighbor_nam": 320, "builtin": [320, 321, 743, 835, 876], "heurist": 322, "capit": [322, 876], "periauricular": [323, 858], "n_point": [323, 337, 363, 427, 479, 500, 610], "n_hpi": 323, "compute_dev_head_t": [323, 866, 876], "fs_tal": [323, 508, 731], "ctf_head": [323, 508, 731], "ctf_meg": [323, 508, 731], "viewport": [324, 476, 477, 796], "generate_2d_layout": [324, 325, 744, 866], "n_col": [325, 556, 697, 699, 769, 789, 876], "95mm": 326, "eloc": 328, "sfp": [328, 876], "besa": [328, 612, 876], "bvef": [328, 876], "095m": 328, "weakli": 328, "eg": [328, 876], "captrak": [329, 876], "xml": [329, 331, 440, 615, 858, 876], "bvct": [329, 858, 876], "compumed": [330, 488, 858], "eeg001": 332, "eeg002": 332, "hpt": [333, 858], "filepath": [333, 335, 694, 743], "digitz": 333, "pound": [333, 858], "auricular": [333, 858, 861], "signifi": [333, 556], "6729": 333, "3873": 333, "3671": 333, "6782": 333, "5228": 333, "3127": 333, "3976": 333, "2363": 333, "4493": 333, "8450": 333, "3601": 333, "5353": 333, "6828": 333, "8518": 333, "0697": 333, "0829": 333, "6297": 333, "1376": 333, "4264": 333, "7352": 333, "7756": 333, "8676": 333, "0439": 333, "9297": 333, "6852": 333, "4881": 333, "2969": 333, "4939": 333, "localit": [334, 876], "read_polhemus_fastscan": [335, 866, 876], "on_header_miss": [337, 876], "fastscan": [337, 858], "t_step_min": [339, 340, 341], "t_window": [339, 341, 345, 566], "interf": [339, 341, 345], "_setup_hpi_amplitude_fit": 339, "disambigu": 339, "t_step_max": 340, "too_clos": 340, "adjust_dig": [340, 342], "\u03b4t": 340, "veloc": [340, 560], "chpi_snr": 341, "snr_mag": 341, "power_mag": 341, "resid_mag": 341, "snr_grad": 341, "power_grad": 341, "resid_grad": 341, "gof_limit": 342, "quat": [342, 348, 734, 736], "q1": [342, 476, 477, 734, 736], "q2": [342, 734, 736], "q3": [342, 476, 477, 734, 736], "monitor": [343, 858, 861], "hlc001": 343, "hlc002": 343, "hlc003": 343, "rawkit": [344, 500], "include_lin": 345, "t_step": 345, "allow_line_onli": [345, 876], "hpi_freq": 347, "n_coil": 347, "hpi_pick": 347, "hpi_on": 347, "head_pos_to_trans_rot_t": [349, 350, 647, 648, 649, 661, 866], "all_evok": 351, "keep_sample_mean": 352, "ledoit_wolf": [352, 876], "factor_analysi": 352, "store_precis": 352, "assume_cent": 352, "shrikag": 352, "iter_n_compon": 352, "emprici": 352, "redund": [352, 858, 876], "on_rank_mismatch": [356, 367, 368], "orth": [356, 876], "implicitli": [356, 420, 584, 851, 858], "resultingmorph": 358, "vertices_from": 358, "vert_rh": 358, "vert_lh": 358, "mris_left_right_regist": 358, "epochs_list": [359, 431], "add_offset": 359, "events_list": [361, 876], "event_list": [361, 876], "on_defect": [363, 427, 458, 604, 633, 635, 824, 876], "read_fiduci": [363, 866, 876], "canon": [363, 483, 743, 759, 850, 876], "quantiti": [363, 582, 857, 858], "radian": [363, 560], "lpa_weight": 363, "rpa_weight": 363, "hsp_weight": 363, "eeg_weight": 363, "hpi_weight": 363, "callback": [363, 743, 756, 876], "set_fid_match": 363, "set_grow_hair": 363, "hair": 363, "set_rot": 363, "rot": [363, 734, 736], "set_scal": 363, "sca": 363, "scale_mod": 363, "set_transl": 363, "tra": 363, "fids_mri": 365, "coordinatesystem": [365, 858], "return_rank": 367, "return_color": [367, 461], "prepare_noise_cov": [367, 866, 876], "n_nonzero": 367, "1e11": 368, "1e5": 368, "fd": [369, 831], "reg_cov": 369, "fs_home": 370, "create_raw": 371, "ignore_config": 373, "env": [373, 456, 833, 835, 839, 843], "device_id": 374, "force_upd": [375, 376, 377, 378, 380, 381, 383, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406], "update_path": [375, 376, 377, 378, 380, 381, 383, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406], "mne_datasets_brainstorm_data_path": [375, 376, 377], "prompt": [375, 376, 377, 378, 380, 381, 383, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 834, 838, 840, 846, 855], "base_url": [378, 400, 401], "getenv": 378, "foot": 378, "khanetal2018": 382, "dataset_param": 383, "check_vers": 383, "return_vers": 383, "auth": 383, "token": 383, "archive_nam": [383, 389], "folder_nam": [383, 389], "hash": [383, 389, 876], "config_kei": 383, "unzip": [383, 835], "untar": [383, 833], "decompress": 383, "authent": [383, 835], "usernam": [383, 835], "password": [383, 835], "httpdownload": 383, "012345": 383, "has_dataset": [383, 866, 876], "uncompress": 383, "cryptograph": 383, "sha256": 383, "19uheid": 383, "md5": 383, "upodh2io": 383, "dataset_nam": [383, 389, 876], "tar": [383, 833, 841], "12b75d1cb7df9dfb4ad73ed82f61094f": 383, "osf": 383, "86qa2": 383, "webpag": 385, "2wk": 386, "1mo": 386, "2mo": 386, "3mo": 386, "5mo": 386, "9mo": 386, "12mo": 386, "15mo": 386, "18mo": 386, "2yr": 386, "ants4": 386, "5month3t": 386, "subject_dir": 387, "fetch_dataset": [389, 866, 876], "\u00ecnt": 392, "mne_datasets_opml_path": 396, "edfx": [400, 401], "cassett": 400, "physionet_sleep_path": [400, 401], "temazepam": [400, 852, 866, 876], "telemetri": 401, "mild": 401, "asleep": 401, "mne_datasets_spm_data_path": 403, "n_triangl": 407, "quadric": 407, "30001": 407, "20480": 407, "cov_est": 408, "transform_into": [408, 415, 876], "average_pow": [408, 415], "cov_method_param": [408, 415, 416], "component_ord": [408, 876], "mutual_info": [408, 876], "csp_space": [408, 415], "mutual": [408, 493, 733], "simplif": 408, "mean_": [408, 415], "std_": [408, 415], "x_new": [408, 409, 410, 413, 415, 416, 419, 557], "n_features_new": [408, 409, 410, 413, 415, 416, 419, 557], "get_param": [408, 409, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 557], "subobject": [408, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 557], "name_format": [408, 415], "n_pattern": [408, 415], "set_param": [408, 409, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 557], "__": [408, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 557], "classes_": [409, 411], "n_class": [409, 411, 412, 418, 424], "rtepoch": [410, 876], "temporalfilt": [410, 866, 876], "mne_realtim": [410, 868, 876], "base_estim": [411, 418, 876], "score_func": [411, 418, 556], "decision_funct": [411, 412, 418], "nd_featur": [411, 418], "n_slice": 411, "n_features_1": [411, 418], "n_features_2": [411, 418], "n_task": [411, 418], "clone": [411, 418, 833, 835, 843, 876], "n_target": [411, 412, 418, 425], "xt": [411, 418, 421], "283185307179586": 413, "nitim": [413, 708, 714, 775, 876], "n_signal": [413, 719, 721], "fit_intercept": [414, 420], "r2": 414, "edge_correct": [414, 420], "baseestim": [414, 422, 425], "return_filt": 416, "flank": 416, "spectal": 416, "sprectal": 416, "sorter_spec": 416, "x_ssd": 416, "with_mean": 417, "with_std": 417, "estimators_": 418, "filterestim": [419, 866, 876], "unsupervis": 422, "spatialfilt": 423, "_xdawntransform": 423, "features_shape_": 423, "objective_funct": 424, "leaveoneout": 424, "surrogate_tri": 424, "mean_spatial_filt": 424, "pre_dispatch": 425, "n_dimensional_featur": 425, "dispatch": 425, "explos": 425, "spawn": [425, 876], "lightweight": [425, 833], "n_score": 425, "attr": [426, 835], "get_fitting_dig": [427, 866], "extrema": [428, 593, 816], "orig_sfreq": 429, "weight_al": 429, "ignore_ref": [429, 519, 567, 575, 584], "return_map": 429, "mag_scal": [429, 567, 575, 584], "multipolar": [429, 566, 567, 575, 584], "fit_sphere_to_headshap": [429, 566, 567, 575, 584, 866, 876], "magenetomet": [429, 567, 575, 584], "pickup": [429, 567, 575, 584, 858], "0168": [429, 567, 575, 584], "sp": 429, "old_event_id": 430, "new_event_id": 430, "safeti": [430, 843], "collat": 432, "absenc": 432, "ancillari": 432, "union": [432, 449, 556, 585], "myevent": 432, "last_myev": 432, "first_": 432, "event_typ": 432, "respet": 432, "slash": [435, 831, 876], "n_new_ev": 436, "aa": 437, "dd": [437, 488, 876], "ee": 437, "gg": 437, "syncstatu": 437, "99998": 437, "neuroscan": [437, 858, 876], "mffpy": [440, 876], "xml_file": 440, "physical_rang": [441, 476, 477], "add_ch_typ": [441, 476, 477], "vmrk": [441, 476, 477, 602, 852, 876], "edflib": [441, 476, 477, 876], "f_pass": 443, "f_stop": 443, "return_copi": 443, "ellipt": 443, "gpass": 443, "gstop": 443, "weren": 443, "triag": [443, 695], "fs1": 444, "fs2": [444, 447], "fstop": 444, "max_tri": 445, "mt_bandwidth": [447, 476, 477], "centr": [447, 476, 477, 538], "xf": 447, "chronux": 447, "partha": 447, "mitra": 447, "hemant": 447, "bokil": 447, "oxford": [447, 835], "upfirdn": 448, "shortest_ev": 449, "find_stim_step": [449, 866, 876], "00000101": 449, "0000111": 449, "0100101": 449, "0000101": 449, "0000010": 449, "pad_start": 450, "pad_stop": 450, "whichev": [450, 452, 761], "v_from": 450, "v_to": 450, "min_dist": 451, "rhoend": 451, "fmin_cobyla": 451, "limit_depth_ch": [452, 876], "combine_xyz": 452, "gk": 452, "frobeniu": 452, "depth_prior": 452, "compute_orient_prior": [452, 866], "matirx": 452, "orient_prior": 453, "fwd_out": [454, 455], "restrict_forward_to_stc": [454, 866, 876], "restrict_forward_to_label": [455, 866, 876], "raise_error": 456, "config_path": 457, "mnemn": 457, "mgz_fname": 461, "atlas_id": [461, 617], "read_freesurfer_lut": [461, 866, 876], "labels_aseg": 462, "spatio_temporal_tris_adjac": [463, 866, 876], "all_inst": 465, "grown": 466, "territori": 466, "invad": 466, "broadcast": 466, "guess_mri_subject": 467, "head_high_r": 467, "scrollabl": 467, "orient_to_surfac": 467, "scale_by_dist": 467, "mark_insid": 467, "advanced_rend": 467, "head_insid": 467, "launch": [467, 544, 833, 835, 839, 841, 876], "movabl": 467, "splitter": 467, "qt4": 467, "unnecessari": [467, 484, 491, 498, 851, 853], "wx": 467, "occlud": 467, "coregistrationui": 467, "aligned_ct": 468, "ct": [468, 733, 816, 876], "intracranialelectrodeloc": 468, "unscal": [470, 876], "update_mod": 471, "bay": 471, "mackai": 471, "time_pca": 473, "dgap_freq": [473, 474, 876], "cd": [473, 835, 841, 855, 858, 876], "bcd": [473, 876], "dualiti": [473, 474, 876], "alpha_max": [473, 474], "epsilon": [473, 523], "alpha_spac": [474, 876], "alpha_tim": [474, 876], "raw_extra": 475, "orig_format": [475, 476, 477, 876], "buffer_size_sec": [475, 476, 477, 876], "orig_unit": 475, "unsplit": 475, "orig_nchan": 475, "nv": 475, "my_raw_object": 475, "subclass": 475, "_read_segment_fil": 475, "mult": 475, "time_slic": [476, 477], "rawfif": [476, 477], "crop_by_annot": [476, 477, 876], "data_fram": [476, 477], "quartil": [476, 477], "fix_mag_coil_typ": [476, 866, 876], "mne_fix_mag_coil_typ": 476, "load_bad_channel": [476, 477, 876], "bad_fil": [476, 477], "mne_mark_bad_channel": [476, 477], "europ": [476, 477], "lightgrai": [476, 477, 772, 796], "show_first_samp": [476, 477, 556, 790, 796], "eventloop": [476, 477, 796], "prj": [476, 477, 796], "secondari": [476, 477, 796], "stim_pick": [476, 477, 876], "supersampl": [476, 477], "optimum": [476, 477], "drop_small_buff": [476, 477], "gzip": [476, 477, 876], "projecton": [476, 477], "datetimeindex": [476, 477], "pickl": 479, "mrk_point": 479, "fiffv_coord_": [480, 508], "input_fnam": [483, 484, 488, 491, 492, 493, 498, 500, 502, 608, 610], "pos_fnam": 483, "add_head_tran": 483, "artemis123": [483, 858, 876], "infer_typ": [484, 491, 876], "utf8": [484, 491, 876], "bdf": [484, 491, 498, 858, 876], "rawedf": [484, 491, 876], "gdf": [484, 491, 498, 858, 876], "batteri": 484, "trigger_sign": 484, "htm": 484, "cms_bit": 484, "cms_high": 484, "boxi": [485, 858, 876], "rawboxi": 485, "vhdr_fname": 486, "heogl": 486, "heogr": 486, "veogb": 486, "vision": [486, 857, 876], "rawbrainvis": [486, 876], "pdf_fname": 487, "config_fnam": 487, "head_shape_fnam": 487, "sort_by_ch_nam": 487, "e64": 487, "rawbti": 487, "data_format": 488, "date_format": 488, "int16": 488, "int32": [488, 861], "numsampl": 488, "rawcnt": 488, "system_clock": 489, "clean_nam": [489, 876], "rawctf": 489, "curri": [490, 602, 876], "dap": [490, 602], "rs3": 490, "cdt": [490, 602, 876], "dpa": [490, 602], "cef": [490, 602], "rawcurri": 490, "export_raw": [491, 866, 876], "storag": [491, 639], "sao2": 491, "subsecond": 491, "uint16_codec": [492, 602, 608, 876], "montage_unit": [492, 608, 876], "codec": [492, 602, 608, 743], "latin1": [492, 602, 608], "raweeglab": [492, 876], "trev": 493, "e1": [493, 615], "e2": [493, 615], "e3": [493, 615], "rawegi": 493, "nxe": [494, 858], "raweximia": 494, "data_nam": [495, 609, 613], "ft_datatype_raw": 495, "binfil": 497, "fil": [497, 852, 858, 876], "opmeg": 497, "rawfil": 497, "rawgdf": 498, "hitachi": [499, 876], "probe": [499, 876], "rawhitachi": 499, "3x5": 499, "etg": 499, "7000": 499, "d1": 499, "s2": 499, "d2": 499, "s3": 499, "d3": 499, "s4": 499, "d4": 499, "s5": 499, "d5": 499, "s6": 499, "d6": 499, "s7": 499, "d7": 499, "s8": 499, "ft7": 499, "tp7": 499, "laid": 499, "d8": 499, "s9": 499, "d9": 499, "s10": 499, "3x11": 499, "d10": 499, "s11": 499, "d11": 499, "s12": 499, "d12": 499, "s13": 499, "d13": 499, "s14": 499, "d14": 499, "s16": 499, "d16": 499, "s17": 499, "d17": 499, "s18": 499, "stim_cod": 500, "allow_unknown_format": [500, 610], "ricoh": [500, 610, 876], "laboratori": [500, 610], "neuroelectr": 501, "nedf": [501, 876], "rawnedf": 501, "nicolet": [502, 858, 876], "nihon": 503, "kohden": 503, "rawnihon": 503, "nirx": [504, 858, 876], "nosatflag": 504, "rawnirx": 504, "wlx": 504, "nosatflags_wlx": 504, "persyst": [505, 858, 876], "rawpersyst": 505, "snirf": [506, 876], "jnir": 506, "rawsnirf": 506, "indent": [507, 751], "read_limit": [507, 751], "max_str": [507, 751], "mne_show_fiff": 507, "mri_tal": [508, 731], "grow_outsid": 509, "hoc": [512, 842, 876], "standard_devi": 512, "write_bem_surfac": [513, 514, 603, 604, 851, 866, 876], "write_bem_solut": [514, 603, 604, 851, 866, 876], "relative_radii": 520, "radii": [520, 648], "csf": [520, 858], "replace_ev": [521, 876], "n_events_in": 521, "n_events_out": 521, "1111111111111111": [523, 524, 529, 530, 535, 539, 540], "prepare_inverse_oper": [523, 524, 525, 526, 527, 529, 530, 539, 540, 866, 876], "apply_inverse_tfr_epoch": [523, 524, 525, 526, 866, 876], "force_equ": [523, 876], "time_func": 526, "approx": [526, 858], "inv_split": [529, 530], "snr_est": 531, "unregular": 531, "tild": [531, 858, 876], "lambda_k": [531, 858], "gamma_k": [531, 858], "biggest": 531, "chi": 531, "normalis": [532, 533], "willb": [532, 533], "n_orient_inv": [532, 533, 535], "n_orient_fwd": [532, 533, 535], "pca_var": [532, 533], "mantl": [534, 858], "cog_err": 538, "graviti": 538, "cog": 538, "maxrad_ext": 538, "peak_amp": 538, "sum_amp": 538, "surf_nam": [542, 619], "mne_docs_kind": 544, "mne_docs_vers": 544, "grad_reject": 546, "mag_reject": 546, "eeg_reject": 546, "eog_reject": 546, "explanatori": [555, 599], "info_": 555, "intercept_": 555, "cumul": 556, "999999": [556, 876], "n_components_": [556, 876], "n_iter_": [556, 876], "pseudoinvers": [556, 567, 858, 876], "instabl": 556, "migrat": [556, 876], "debat": 556, "zca": 556, "tol_fastica": 556, "tol_picard": 556, "current_fit": 556, "unfit": 556, "pre_whitener_": 556, "pca_components_": 556, "pca_mean_": 556, "pca_explained_variance_": 556, "scrap": 556, "n_samples_": 556, "on_baselin": [556, 787, 876], "ummix": [556, 557], "reappli": [556, 787, 823, 876], "anymor": [556, 843, 876], "supra": [556, 558], "ecg_idx": 556, "kuiper": 556, "eog_idx": 556, "paralyz": 556, "threefold": 556, "farthest": 556, "msucl": 556, "ref_ica": 556, "ref_idx": 556, "baseraw": [556, 564, 866, 876], "unclean": 556, "pvaf": 556, "usecas": [556, 790], "plot_std": [556, 786, 788], "image_arg": [556, 696, 786, 788], "psd_arg": [556, 786, 788], "plot_ica_compon": [556, 866, 876], "topomap_axi": [556, 788], "image_axi": [556, 788], "erp_axi": [556, 788], "spectrum_axi": [556, 788], "variance_axi": [556, 788], "logarithm": [556, 788], "ass": [556, 789], "n_ica_compon": [556, 789], "sublabel": [556, 789], "score_sourc": [556, 876], "pearsonr": 556, "skew": 556, "correct_overlap": 557, "overlapp_correct": 557, "evokeds_": 557, "event_id_": 557, "correct_overlap_": 557, "n_event_typ": 557, "bad_perc": 558, "bad_peak": 558, "bad_flat": 558, "uncommon": 558, "sole": [559, 852, 857], "rotation_velocity_limit": 560, "translation_velocity_limit": 560, "use_dev_head_tran": [560, 876], "lm_cutoff": 564, "epoch_threshold": 564, "bw_method": 564, "intrins": 564, "hjorth": 564, "gaussian_kd": 564, "n_legendre_term": 565, "lap": [565, 641], "inst_csd": 565, "n_imbal": 566, "multipol": [566, 584], "bad_condit": [567, 575, 584], "extended_proj": [567, 575, 584], "ill": [567, 575, 584], "esss": [567, 575, 584, 864, 876], "n_meg": [567, 575], "n_moment": 567, "n_good_meg": 567, "reg_moment": 567, "n_use_in": 567, "dagger": 567, "phi": 567, "phi_in": 567, "data_meg_good": 567, "raw_ev": [568, 569], "avg_ref": [568, 569], "return_drop_log": [568, 569, 876], "ecg_ev": [568, 576, 579], "0005": [569, 855], "e0g": 569, "feed": [570, 858], "corrmapplugin1": 570, "categoris": 570, "preexist": 570, "dry": 570, "template_fig": 570, "labelled_": 570, "mag_pick": 571, "grad_pick": 571, "keep_ecg": [572, 876], "r_peak_events_arrai": 572, "doctest": 572, "interp_thresh": 574, "insts_bad": 574, "formerli": [574, 876], "noisy_ch": 575, "flat_ch": 575, "Their": [575, 835], "scores_flat": 575, "limits_flat": 575, "annotate_amplitud": [575, 584, 866, 876], "st_fix": [575, 584], "d_k": 575, "mu_d": 575, "sigma_d": [575, 858], "textrm": 575, "return_ecg": 576, "ch_ecg": [576, 579], "average_puls": [576, 579], "ecg_sourc": 579, "eog_sourc": 580, "n_neighbor": 581, "l_rate": 582, "w_chang": 582, "anneal_deg": 582, "anneal_step": 582, "n_subgauss": 582, "kurt_siz": 582, "ext_block": 582, "blowup": [582, 661], "blowup_fac": 582, "n_small_angl": 582, "use_bia": 582, "return_n_it": [582, 876], "kurtosi": 582, "unmixing_matrix": 582, "return_max_it": 582, "bad_limit": 583, "forth": 584, "relicens": 584, "permiss": 584, "certifi": 584, "seamless": 584, "vet": [584, 864], "abramowitz": 584, "stegun": 584, "us2006031038": 584, "us6876196": 584, "wo2005067789": 584, "wo2005078467": 584, "wo2006114473": 584, "lawyer": 584, "raw_er": 585, "from_raw": 585, "inject": 585, "raw_er_prepar": 585, "compil": 585, "pathlength": [586, 876], "hemoglobin": [591, 876], "wherev": 591, "realtim": [592, 866, 876], "provision": 592, "x0": [593, 681], "peak_loc": 593, "peak_mag": 593, "nathanael": 593, "yoder": 593, "ncyoder": 593, "purdu": 593, "36900026": 593, "76007351": 593, "imb_cal": 595, "t_raw": 598, "t_other": 598, "realign": [598, 831, 876], "first_ev": 598, "n_picks_ref": 599, "epochs_no_av": 599, "epochs_clean": 599, "n_parcel": 601, "amrk": 602, "ahdr": [602, 876], "patch_stat": [604, 626], "s_id": 604, "eventtyp": 608, "trialinfo_column": 609, "trialinfo": [609, 876], "mne_browse_raw": [611, 861], "avr": [612, 876], "mul": [612, 876], "sidecar": 612, "timelock": 613, "write_labels_to_annot": [618, 619, 825, 866, 876], "annot_fnam": [619, 826], "ascend": [619, 784, 791, 855, 876], "mne_make_morph_map": [621, 861], "morph_map": 621, "left_map": 621, "right_map": 621, "asterisk": 624, "source_morph": 625, "return_dict": 627, "file_format": [627, 829], "voxels": [627, 829], "xra": [627, 829], "yra": [627, 829], "zra": [627, 829], "cra": [627, 829], "n_face": [627, 630, 829], "read_tri": [627, 829, 866], "return_al": 629, "fname_in": 630, "clockwis": [630, 748], "counterclockwis": [630, 861], "spcecifi": 631, "bem_nam": 633, "subjects_from": [633, 636], "ba3a": 634, "cfg": 634, "skip_fiduci": 635, "ioerror": 635, "scale_bem": [635, 866, 876], "scale_label": [635, 866], "scale_source_spac": [635, 866], "src_name": 636, "my_source_spac": 636, "mne_sensitivity_map": 637, "ch_info": [638, 876], "drop_ref": [638, 876], "on_bad": 638, "unreferenc": 638, "cache_dir": 639, "output_format": 642, "howto": 642, "asctim": 642, "levelnam": 642, "notifi": [642, 835], "return_old_level": 643, "add_fram": [643, 738], "old_level": 643, "single_volum": [645, 876], "ox": 645, "oi": 645, "iii": 645, "get_stim_channel": 646, "stim_data": 646, "add_chpi": [648, 649, 661, 866, 876], "inhomogen": 649, "poisson": 649, "stc_true": [651, 652, 653, 654, 655, 656, 657, 658], "stc_est": [651, 652, 653, 654, 655, 656, 657, 658], "ppe": 653, "dfrac": [653, 658], "sum_i": [653, 658], "s_i": [653, 658], "r_i": [653, 658, 858], "tp": [654, 655], "fn": 655, "2q": 656, "min_": [656, 858], "r_k": 656, "r_l": 656, "mathbb": 656, "dle": 656, "ed": [656, 876], "terminologi": 656, "actual_snr": 660, "sti001": 661, "allow_overlap": 663, "coo_matrix": [666, 667, 668, 669, 670, 671, 672, 676], "additit": 667, "remap_vertic": [669, 672], "reassign": [669, 672], "2n": [670, 671, 672, 858], "pval_correct": [674, 680], "n_bootstrap": 675, "spmatrix": [676, 683, 684, 686, 687], "n_ob": 676, "chan_adj": 676, "5600x5600": 676, "27076": 676, "compliant": [677, 864], "slowest": 677, "a2b2": 677, "greenhous": 677, "geisser": 677, "f_val": 677, "homoscedast": 678, "kruskal": 678, "walli": 678, "pvalu": 679, "yekuti": 680, "negcorr": 680, "n_regressor": 681, "choleski": [682, 858, 876], "n_cond": 682, "bx": 682, "enorm": 682, "overload": 682, "subepoch": 682, "n_predictor": 682, "time_window_length": 682, "t_power": [683, 684, 686, 687], "check_disjoint": [683, 684, 686, 687], "subarrai": 683, "kth": 683, "unconnect": [683, 684, 686, 687], "disjoint": [683, 684, 686, 687], "set_cache_dir": [683, 684, 686, 687, 866], "rv_continu": [683, 684, 686, 687], "untract": 685, "spatial_exclud": [686, 687], "p_thresh": 688, "equal_var": 690, "ball": 691, "volu": 691, "do_neighbor_vert": 693, "do_neighbor_tri": 693, "show_path": 695, "sy": [695, 839, 876], "feb": 695, "bla": [695, 834], "lapack": [695, 834], "qt5agg": 695, "pyside6": [695, 834], "power_baselin": 696, "frequency_window": 696, "read_tfr": [696, 699, 729, 866, 876], "write_tfr": [696, 699, 718, 866], "csd_array_fouri": [697, 702, 703, 704, 705, 706, 866, 876], "csd_array_multitap": [697, 701, 702, 704, 705, 706, 866, 876], "csd_array_morlet": [697, 701, 703, 704, 705, 706, 866, 876], "as_cov": 697, "pack": 697, "pick_frequ": 697, "read_csd": [697, 866, 876], "getitem_epochspectrum_return": 698, "ci_alpha": [698, 700], "read_spectrum": [698, 700, 866], "latex": [698, 700], "pertin": 699, "12676": 699, "getitem_spectrum_return": 700, "sixth": 700, "subscript": 700, "freq_indic": 700, "half_nbw": 708, "kmax": 708, "sym": [708, 876], "nw": 708, "half_bw": 708, "bw": 708, "f0": 708, "tridiagon": 708, "jw": 709, "jnw": 709, "tx": 711, "n_step": [711, 719, 743], "_cycl": [712, 722, 723, 724, 726, 727], "morlet2": [712, 722], "sp_morlet": [712, 722], "this_fwhm": [712, 722], "wavelet_sp": [712, 722], "half_max": [712, 722], "n_taper": [714, 724], "get_window": [715, 797], "istft": [719, 720, 866, 876], "stftfreq": [719, 866], "epoch_data": [723, 724], "avg_power_itc": [723, 724], "power_": [723, 724], "tfr_array_multitap": [723, 725, 726, 727, 728, 866, 876], "tfr_array_stockwel": [723, 724, 726, 727, 728, 866, 876], "interrel": [723, 724, 726, 727, 842], "strive": [724, 727, 857], "finer": [724, 727, 876], "undermin": [724, 727], "intertri": [725, 728], "st_power": 725, "from_str": 731, "to_str": 731, "reg_img": 732, "niter": [733, 876], "mr": [733, 858, 864, 876], "affine_registr": 733, "rot_to_quat": [734, 866], "quat_to_rot": [736, 866], "contextlib": 737, "contextmanag": 737, "my_fnam": 737, "moin": 739, "pythondecoratorlibrari": 739, "sentenc": 739, "futurewarn": [739, 835, 876], "ignore_namespac": 740, "namespac": [740, 835, 866, 876], "travers": 740, "_funct": 741, "filler": 741, "5880": 741, "offscreen": 743, "subject_id": [743, 876], "buggi": 743, "soon": [743, 852, 857, 858], "add_skul": 743, "remove_data": 743, "remove_dipol": [743, 876], "remove_forward": [743, 876], "remove_head": 743, "remove_label": 743, "remove_annot": 743, "remove_sensor": 743, "remove_skul": 743, "remove_text": 743, "remove_volume_label": 743, "timeview": 743, "get_picked_point": 743, "geo": 743, "ctab": 743, "lh_ctab": 743, "rh_ctab": 743, "rbga": 743, "icefir": 743, "rocket": 743, "nvtx": 743, "thrown": [743, 876], "font": [743, 802], "add_scalar_bar": 743, "title_font_s": 743, "hex": [743, 767], "map_surfac": [743, 876], "n_coord": 743, "stereotax": 743, "coord_as_vert": 743, "1cm": 743, "subdir": 743, "reset_camera": [743, 811], "justif": 743, "update_text": 743, "fill_hole_s": [743, 876], "hole": [743, 876], "dilat": 743, "apply_auto_sc": 743, "clear_glyph": 743, "cleanup": [743, 864], "widget": [743, 745, 876], "get_view": [743, 876], "zenith": [743, 811], "plot_time_cours": 743, "vertex_id": 743, "plot_time_lin": 743, "reset_view": 743, "restore_user_sc": 743, "bitrat": 743, "imageio": 743, "mov": 743, "interp1d": 743, "slinear": 743, "quadrat": 743, "n_frame": 743, "separate_canva": 743, "set_data_smooth": 743, "set_playback_spe": 743, "playback": 743, "set_tim": [743, 876], "set_time_interpol": 743, "set_time_point": 743, "time_idx": 743, "setup_time_view": 743, "rear": [743, 831], "time_interpol": 743, "toggle_interfac": 743, "toggle_playback": 743, "update_lut": 743, "imdata": 744, "onclick": 744, "backend_bas": 744, "bg": [744, 746], "set_ratio": 746, "ax_im": 746, "node_nam": 748, "start_between": 748, "group_sep": 748, "n_node_nam": 748, "fname_1": 751, "fname_2": 751, "show_fiff": [751, 866, 876], "smooth_shad": [752, 809], "_render": 752, "undocu": 752, "backend_us": [753, 755], "ch_dx": 756, "teal": 758, "onselect": [760, 805], "rectangleselector": [760, 805], "show_indic": 761, "show_orient": [761, 876], "colorbarbas": 762, "polarax": 765, "type_snr": 766, "type_pow": 766, "type_resid": 766, "truncate_xaxi": [767, 876], "invert_i": 767, "unweight": 767, "inset": [767, 876], "n_evok": 767, "hexadecim": 767, "equal_spac": 776, "1f77b4": 784, "fscale": [784, 791], "alim": [784, 791], "pointsiz": 799, "bet": 799, "bluish": 800, "brain_color": [802, 876], "fig_numb": 802, "cone": 802, "axesimag": 805, "contourset": 805, "fieldlin": 805, "mixedvectorsourceestim": [806, 866, 876], "backend_nam": [808, 812, 814, 815], "old_backend_nam": [808, 812], "plot_evoked_field": [808, 866, 876], "link_brain": [808, 866, 876], "inlin": [808, 833, 839], "jupyterlab": 808, "colab": 808, "antialia": [809, 833], "depth_peel": 809, "multi_sampl": 809, "plot_epoch": [812, 835, 866, 876], "plot_ica_sourc": [812, 866, 876], "hide_sensor": 813, "dn": 813, "base_imag": 816, "max_peak_dist": 816, "voxels_max": 816, "use_min": 816, "subject_dir_from": 816, "image_from": 816, "image_to": 816, "hsv": 826, "table_nam": 826, "colort": 826, "create_stamp": 829, "vocabulari": [831, 859], "textual": [831, 876], "spindl": 831, "acronym": [831, 859], "definion": 831, "mv": [831, 876], "\u00b5m": 831, "od": 831, "dealt": 831, "synapt": 831, "intracellular": 831, "pyramid": [831, 858], "perpendicularli": 831, "erron": [831, 876], "peculiar": 831, "encapsul": [831, 858], "hcpmmp": [831, 876], "gave": 831, "cartoon": 831, "pependicular": 831, "laser": 831, "ga": 831, "rubidium": 831, "superconduct": 831, "quantum": 831, "scaleogram": 831, "uncorrel": 831, "nb_conda_kernel": 833, "anaconda": [833, 835, 839, 840, 846, 876], "forum": [833, 834, 835, 838, 841, 842, 852, 854, 855, 856], "osmesa": 833, "xvfb": 833, "forg": [833, 835, 839, 843], "latest": [833, 835, 843, 855, 876], "git": [833, 842], "miniconda": [833, 835], "miniforg": 833, "pythonpath": 833, "pythonhom": 833, "curl": [833, 835], "githubusercont": [833, 835], "unabl": [833, 857, 876], "nvidia": [833, 855], "proprietari": [833, 857], "driver": 833, "init_cuda": [833, 866], "pytest": [833, 835], "test_filt": 833, "multithread": [833, 855], "swr": 833, "cento": 833, "spyder": [833, 835, 838, 839, 855], "mesa_gl_version_overrid": 833, "rend": 833, "msaa": 833, "antialias": [833, 876], "set_3d_opt": [833, 866, 876], "incomplet": [833, 864, 876], "prebuilt": 833, "xzvf": 833, "mesa_18": 833, "6_centos_lib": 833, "tgz": 833, "libgl_drivers_path": 833, "pwd": 833, "ld_library_path": 833, "went": [833, 834], "glxinfo": 833, "grep": [833, 835, 843], "uninstal": [833, 843], "cach": [833, 843], "gcp": 834, "travi": [834, 876], "virtualenv": 834, "8dfaa4a": 834, "f614064": 834, "qtagg": 834, "post1": 834, "modulenotfounderror": 834, "bashrc": [834, 840, 841], "zprofil": [834, 840], "zsh": [834, 840, 841], "troubleshoot": [834, 854, 856], "sustain": [835, 857], "volunt": 835, "welcom": 835, "anyon": [835, 857], "abid": 835, "fastest": [835, 841], "feel": [835, 842, 857, 876], "upstream": 835, "desktop": 835, "appreci": 835, "sudo": [835, 836, 841], "apt": [835, 836], "dmg": [835, 841], "atlassian": 835, "macport": [835, 841], "homebrew": [835, 841], "yourdomain": 835, "sooner": 835, "commit": [835, 857, 864, 876], "emac": 835, "vim": 835, "nano": 835, "subl": 835, "makefil": 835, "newest": 835, "guil": 835, "w32": 835, "ezwinport": 835, "path_to_git": 835, "mingw64": 835, "mnedev": 835, "path_to_anaconda": 835, "team": [835, 857], "yml": 835, "github_usernam": 835, "insert_your_actual_github_username_her": 835, "install_loc": 835, "opt": [835, 839, 840, 841], "site_packag": 835, "requirements_test": 835, "requirements_doc": 835, "graphviz": 835, "graphviz_dot": 835, "conda_prefix": 835, "optipng": 835, "linter": 835, "restructuredtext": 835, "autobuild": 835, "doc8": 835, "url_of_remote_repo": 835, "nickname_of_remot": 835, "repo": [835, 857], "undoubtedli": 835, "checkout": 835, "colleagu": 835, "unstag": 835, "some_fil": 835, "some_new_fil": 835, "entireti": 835, "some_other_fil": 835, "bypass": [835, 876], "enh": 835, "some_testing_fil": 835, "new_tutorial_fil": 835, "stuck": 835, "secur": [835, 841], "secret": 835, "client": [835, 876], "test_evok": 835, "python_refer": 835, "rst": 835, "my_funct": 835, "my_new_funct": 835, "old_param": 835, "new_param": 835, "my_other_funct": 835, "depr_messag": 835, "changeset": 835, "minor": [835, 861, 864, 876], "typo": [835, 854, 876], "subsect": 835, "bugfix": [835, 843], "happi": 835, "credit": 835, "gh": [835, 876], "newcontrib": 835, "firstnam": 835, "lastnam": 835, "_your": 835, "test_topo": 835, "pep": 835, "pep8": 835, "pyflak": 835, "flake8": 835, "flake": 835, "ins": 835, "camelcas": [835, 866], "snake_cas": 835, "nsampl": 835, "complic": [835, 876], "sphinxcontrib": 835, "bibtex": [835, 850], "citat": [835, 876], "bibliograph": 835, "bib": 835, "singleauthor2019": 835, "authoroneauthortwo2020": 835, "firstauthoretal2021a": 835, "firstauthoretal2021b": 835, "param_nam": 835, "test_docstring_paramet": 835, "docstyl": 835, "glossari": [835, 859], "mod": 835, "intersphinx": 835, "inventori": 835, "sphobjinv": 835, "dump": 835, "ext": 835, "backtick": [835, 855], "pdb": 835, "debugg": [835, 876], "test_io_evok": 835, "imit": 835, "html_dev": 835, "noplot": 835, "regex_to_select_my_tutori": 835, "unrel": 835, "browse_raw": [835, 876], "mortem": 835, "pm": 835, "everyon": 835, "scientist": [835, 839, 854], "spare": 835, "streamlin": 835, "collabor": [835, 842, 857], "fruit": 835, "road": 835, "someon": 835, "occasion": [835, 852], "cosmet": 835, "backport": [835, 876], "whats_new": 835, "draft": 835, "wip": 835, "mrg": 835, "sty": 835, "azp": 835, "azur": 835, "exemplifi": 835, "ecosystem": [836, 839, 842], "tcsh": [836, 840, 841], "ubuntu": [836, 838, 841, 864], "bionic": 838, "beaver": 838, "1_0": 838, "intel": [838, 855], "catalina": [838, 840, 876], "silicon": 838, "studio": [838, 839], "python_1": 838, "0_1": 838, "mamba": 839, "prioriti": 839, "h5io": [839, 855], "h5py": [839, 855], "pymatread": [839, 876], "vscode": 839, "microsoft": 839, "anaconda3": [839, 840], "pyqt5": 839, "pyqt": [839, 876], "pycharm": [839, 855], "paid": 839, "profession": 839, "cmd": 840, "bash_profil": 840, "__conda_setup": 840, "overflow": [840, 876], "leopard": 841, "powerpc": 841, "runtim": 841, "mne_convert_mne_data": 841, "mne_epochs2mat": [841, 861], "mne_raw2mat": 841, "mne_simu": 841, "xcode": 841, "xquartz": 841, "x11": 841, "libxt": 841, "dylib": 841, "bak": 841, "flat_namespac": 841, "netpbm": 841, "brew": 841, "app": 841, "nightli": [841, 876], "path_to_desired_install_loc": 841, "zxvf": 841, "path_to_archive_fil": 841, "pkg": 841, "untrust": 841, "privaci": [841, 857], "mne_root": [841, 858, 861, 876], "matlab_root": 841, "r2018b": 841, "undefin": 841, "mne_setup_sh": 841, "csh": 841, "mne_setup": [841, 861], "path_to_mn": 841, "path_to_matlab": 841, "emul": 841, "zshrc": 841, "cshrc": 841, "tcshrc": 841, "setenv": [841, 846], "mne_opengl_test": 841, "redraw": 841, "spent": 841, "revolut": 841, "interrupt": 841, "glx": 841, "nondirect": 841, "IT": 841, "vnc": 841, "card": [841, 876], "libxp": 841, "libxp6": 841, "debian": [841, 864, 876], "dpkg": 841, "libxp6_1": 841, "1ubuntu1_amd64": 841, "deb": 841, "libgfortran": 841, "libfortran": 841, "gnu": 841, "maxdepth": 841, "interoper": 842, "reimplement": 842, "cpp": [842, 876], "connectom": [842, 864], "compli": [842, 876], "alphacsc": 842, "pactool": 842, "microst": 842, "conpi": 842, "eelbrain": 842, "posthoc": 842, "prep": 842, "pyprep": 842, "sesam": 842, "sesameeg": 842, "invertmeeg": 842, "unix": [842, 876], "name_of_environ": 843, "fool": 843, "proof": 843, "old_mn": 843, "dep": 843, "hm": [846, 852], "pubsw": 846, "subscrib": 846, "modular": 847, "qt3d": 847, "babymeg": 847, "tmsi": 847, "refa": 847, "brainamp": 847, "ant": 847, "eegosport": 847, "gusbamp": 847, "gramfortetal2013a": 850, "gramfortetal2014": 850, "bibliographi": 850, "meg2443": 851, "vanish": 851, "advers": 851, "preliminari": 851, "stamp": 851, "mm2": 851, "ico5": 851, "tessel": [851, 861], "prerequisit": 851, "bulletproof": 851, "feasibl": 851, "sep": 851, "bem_sol": 851, "reestablish": 851, "corregistr": 851, "charg": 851, "photograph": 851, "uninterest": 851, "epilept": 851, "infrequ": 851, "hesit": [852, 855], "siemen": [852, 858], "sonata": 852, "mprage": [852, 855, 858], "interspers": 852, "lv": 852, "audvis_raw": 852, "auvi": 852, "agre": 852, "bst_rest": [852, 866], "khz": 852, "dicom": [852, 861, 876], "richli": 852, "timon": [852, 876], "9999": 852, "msr": 852, "retrospect": 852, "satisfactori": 852, "chin": 852, "respir": [852, 858, 861], "hypnogram": 852, "rechtschaffen": 852, "kale": 852, "erlangen": 852, "germani": 852, "shaft": [852, 864], "pend": 852, "craft": 852, "lrp": 852, "ern": 852, "neuroscientist": 853, "keystrok": 853, "peak_find": [853, 866, 876], "appnop": 855, "nope": 855, "nsappsleepdis": 855, "tempt": 855, "benfrederickson": 855, "dont": 855, "stackoverflow": 855, "21752259": 855, "write_": 855, "resid": 855, "plot_find_ecg_artifact": 855, "ordinarili": 855, "mkl": 855, "openmp": 855, "omp_num_thread": 855, "openblas_num_thread": 855, "num_cpu": 855, "implic": 855, "simplist": 855, "gpu": [855, 876], "epochs_path": 855, "protrud": 855, "shrunken": 855, "mri_norm": 855, "xopt": 855, "gentl": 855, "listserv": 855, "recon_al": 855, "autorecon2": 855, "autorecon3": 855, "formal": 857, "extraordinari": 857, "clarifi": [857, 876], "profit": 857, "entiti": [857, 861], "openli": 857, "affili": 857, "discours": 857, "behalf": 857, "barrier": 857, "leadership": 857, "neutral": 857, "tradition": [857, 858], "reward": 857, "benevol": 857, "dictat": 857, "defer": 857, "vote": 857, "deadlock": 857, "fork": 857, "disagre": 857, "deleg": 857, "appoint": 857, "successor": 857, "faith": 857, "director": 857, "ceo": [857, 876], "everydai": 857, "peer": 857, "privileg": 857, "servic": [857, 876], "scope": 857, "strateg": 857, "polici": [857, 876], "nomin": 857, "willing": 857, "capac": 857, "infrastructur": [857, 876], "outreach": 857, "deliber": 857, "divers": 857, "viewpoint": 857, "talent": 857, "grace": 857, "retir": 857, "eject": 857, "deem": 857, "harm": 857, "financi": 857, "employ": 857, "disclos": 857, "recus": 857, "themself": 857, "sparingli": 857, "apach": 857, "veto": 857, "rational": 857, "opinion": 857, "anticip": [857, 876], "suffic": 857, "usurp": 857, "countri": 857, "gift": 857, "partnership": 857, "approv": 857, "commenc": 857, "laps": 857, "pursu": 857, "monei": 857, "donor": 857, "umbrella": 857, "trademark": 857, "invit": 857, "waiv": 857, "copyright": 857, "mole": 858, "sensibl": 858, "femtotesla": 858, "typecast": 858, "unread": [858, 876], "electrocardiographi": 858, "electromyographi": 858, "celsiu": 858, "channels_3_and_4": 858, "boldsymbol": 858, "c_0": 858, "g_": 858, "infti": 858, "r_j": 858, "t_d": 858, "underbrac": 858, "b_": 858, "b_n": 858, "dotso": 858, "uc_n": 858, "constitut": 858, "orthonorm": 858, "c_e": 858, "complement": 858, "perp": 858, "uu": 858, "segonn": 858, "_brain_surfac": 858, "_inner_skull_surfac": 858, "_outer_skull_surfac": 858, "_outer_skin_surfac": 858, "availablili": 858, "fov": 858, "dcm2niix": 858, "mne_organize_dicom": 858, "flash05": 858, "fat32": 858, "mri_ms_fitparm": 858, "mri_synthes": 858, "fsl_rigid_regist": 858, "flash5_reg": 858, "cor": 858, "mri_make_bem_surfac": 858, "tringul": 858, "t_x": 858, "ti": 858, "mm3": 858, "mnitalairach": 858, "mni305": 858, "y_2": 858, "z_2": 858, "y_1": 858, "z_1": 858, "x_0": 858, "y_0": 858, "z_0": 858, "x_k": 858, "y_k": 858, "z_k": 858, "jk": 858, "9688": [858, 876], "0485": 858, "9189": 858, "t_1": 858, "s_1": 858, "s_n": 858, "t_2": 858, "filessepar": 858, "t_3": 858, "mghformat": 858, "t_4": 858, "hardcod": 858, "idiosyncrasi": 858, "conceiv": 858, "s_p": 858, "50mm": 858, "r_0": 858, "e_x": 858, "e_i": 858, "e_z": 858, "r_c": 858, "r_d": 858, "0d": 858, "n_k": 858, "w_": 858, "kp": 858, "sixteen": 858, "tm": [858, 861, 876], "centerpoint": 858, "mne_list_coil_def": 858, "3012": 858, "8mm": 858, "3013": 858, "wh": 858, "3600": 858, "4003": 858, "4004": 858, "5001": 858, "5003": 858, "5004": 858, "diamet": 858, "nx": 858, "ny": 858, "nz": [858, 876], "r_1": 858, "dotsc": 858, "r_m": 858, "mu_1": 858, "mu_m": 858, "int_": 858, "v_": 858, "ly": 858, "average_forward_solut": [858, 866], "ensu": 858, "posteriori": 858, "viabl": 858, "3p": 858, "unconstrain": 858, "mx": 858, "smoother": [858, 876], "arriv": 858, "bigl": 858, "bigr": 858, "u_c": 858, "lambda_c": 858, "grg": 858, "possess": 858, "varepsilon_k": 858, "sigma_k": 858, "rout": 858, "superscript": 858, "v_k": 858, "w_k": 858, "propto": 858, "dimensionless": 858, "tendenc": 858, "divis": [858, 876], "2_k": 858, "g_i": 858, "u_": 858, "lambda_": 858, "_i": 858, "noiseless": 858, "misfit": 858, "pi_k": 858, "recolor": 858, "eigenfield": 858, "n_d": 858, "a_d": 858, "postsynapt": 858, "microscop": 858, "rigidli": 858, "floc": 858, "thereaft": 858, "vloc": 858, "favor": [858, 876], "1p": 858, "2p": 858, "l_": 858, "eff": 858, "w_i": 858, "x_i": 858, "c_y": 858, "l_i": 858, "w_1": 858, "w_2": 858, "l_1": 858, "l_2": 858, "supposedli": 858, "x_j": 858, "t_j": 858, "biject": 858, "smudg": 858, "n_j": 858, "prod_": 858, "kindli": 859, "function_nam": 859, "w3school": 860, "carpentri": 860, "lesson": 860, "fiff_": 861, "startup": 861, "mne_ex": 861, "fiff_setup_read_raw": 861, "fiff_read_raw_seg": 861, "fiff_find_evok": 861, "fiff_read_bad_channel": 861, "fiff_read_ctf_comp": 861, "fiff_read_evok": 861, "fiff_read_evoked_al": 861, "fiff_read_meas_info": 861, "fiff_read_mri": 861, "fiff_read_proj": 861, "fiff_read_raw_segment_tim": 861, "fiff_pick_channel": 861, "fiff_pick_channels_evok": 861, "fiff_pick_info": 861, "fiff_pick_typ": 861, "fiff_pick_types_evok": 861, "fiff_invert_transform": 861, "fiff_reset_ch_po": 861, "fiff_transform_eeg_ch": 861, "fiff_transform_meg_ch": 861, "fiff_define_const": 861, "fiff_dir_tree_find": 861, "fiff_list_dir_tre": 861, "fiff_make_dir_tre": 861, "fiff_open": 861, "fiff_read_named_matrix": 861, "fiff_read_tag": 861, "fiff_read_tag_info": 861, "fiff_split_name_list": 861, "fiff_end_block": 861, "fiff_end_fil": 861, "fiff_start_block": 861, "fiff_start_fil": 861, "fiff_write_ch_info": 861, "fiff_write_coord_tran": 861, "fiff_write_ctf_comp": 861, "fiff_write_dig_point": 861, "fiff_write_complex": 861, "fiff_write_complex_matrix": 861, "fiff_write_doubl": 861, "fiff_write_double_complex": 861, "fiff_write_double_complex_matrix": 861, "fiff_write_double_matrix": 861, "fiff_write_evok": 861, "repons": 861, "fiff_write_float": 861, "fiff_write_float_matrix": 861, "fiff_write_id": 861, "fiff_write_int": 861, "fiff_write_int_matrix": 861, "fiff_write_name_list": 861, "fiff_write_named_matrix": 861, "fiff_write_proj": 861, "fiff_write_short": 861, "fiff_write_str": 861, "fiff_finish_writing_raw": 861, "fiff_start_writing_raw": 861, "fiff_write_dig_fil": 861, "fiff_write_raw_buff": 861, "mne_add_coil_def": 861, "mne_load_coil_def": 861, "mne_compensate_to": 861, "mne_get_current_comp": 861, "mne_make_compens": 861, "mne_make_projector_info": 861, "mne_make_projector": 861, "mne_set_current_comp": 861, "mne_pick_channels_cov": 861, "mne_pick_channels_forward": 861, "mne_read_bem_surfac": 861, "mne_read_cov": 861, "mne_read_epoch": 861, "mne_read_ev": 861, "mne_read_forward_solut": 861, "mne_read_inverse_oper": 861, "mne_read_morph_map": 861, "mne_read_noise_cov": 861, "mne_read_source_spac": 861, "mne_write_cov": 861, "mne_write_cov_fil": 861, "mne_write_ev": 861, "mne_write_inverse_sol_stc": 861, "mne_write_inverse_sol_w": 861, "mne_read_stc_fil": 861, "mne_read_stc_file1": 861, "mne_read_w_fil": 861, "mne_read_w_file1": 861, "mne_write_stc_fil": 861, "mne_write_stc_file1": 861, "mne_write_w_fil": 861, "mne_write_w_file1": 861, "mne_read_label_fil": 861, "mne_write_label_fil": 861, "mne_label_time_cours": 861, "mne_read_curvatur": 861, "mne_read_surfac": 861, "mne_reduce_surfac": 861, "reducepatch": 861, "mne_write_surfac": 861, "mne_block_diag": 861, "mne_combine_xyz": 861, "mne_file_nam": 861, "mne_find_channel": 861, "mne_find_source_space_hemi": 861, "mne_fread3": 861, "mne_fwrite3": 861, "mne_make_combined_event_fil": 861, "mne_omit_first_lin": 861, "mne_setup_toolbox": 861, "mne_transform_coordin": 861, "mne_collect_transform": 861, "mne_transpose_named_matrix": 861, "mne_transform_source_space_to": 861, "mne_ex_average_epoch": 861, "mne_ex_cancel_nois": 861, "mne_ex_compute_invers": 861, "mne_ex_data_set": 861, "mne_ex_evoked_grad_amp": 861, "mne_ex_read_epoch": 861, "mne_ex_read_evok": 861, "mne_ex_read_raw": 861, "mne_ex_read_write_raw": 861, "mne_copy_processing_histori": 861, "revis": 861, "coil_geometry_inform": 861, "fiffb_meas_info": 861, "mne_compute_raw_invers": 861, "fiffv_meg_ch": 861, "fiffv_ref_meg_ch": 861, "fiffv_eef_ch": 861, "fiffv_mcg_ch": 861, "mcg": 861, "fiffv_stim_ch": 861, "fiffv_eog_ch": 861, "fiffv_emg_ch": 861, "fiffv_ecg_ch": 861, "fiffv_misc_ch": 861, "fiffv_resp_ch": 861, "fiffv_coord_unknown": 861, "fiffv_coord_devic": 861, "fiffv_coord_isotrak": 861, "fiffv_coord_hpi": 861, "fiffv_coord_mri_slic": 861, "fiffv_coord_mri_displai": 861, "fiffv_coord_dicom_devic": 861, "fiffv_coord_imaging_devic": 861, "fiffv_mne_coord_tufts_eeg": 861, "tuft": 861, "fiffv_mne_coord_ctf_devic": 861, "fiffv_mne_coord_ctf_head": 861, "1004": 861, "fiffv_aspect_averag": 861, "fiffv_aspect_std_err": 861, "fiffv_aspect_singl": 861, "fiffv_aspect_subaverag": 861, "fiffv_aspect_altaverag": 861, "fiffv_aspect_sampl": 861, "fiffv_aspect_power_dens": 861, "fiffv_aspect_dipole_wav": 861, "fiffv_bem_surf_id_unknown": 861, "fiffv_bem_surf_id_brain": 861, "fiffv_bem_surf_id_skul": 861, "fiffv_bem_surf_id_head": 861, "fiffv_point_hpi": 861, "fiffv_point_ecg": 861, "fiffv_point_extra": 861, "fiffv_point_lpa": 861, "fiffv_point_rpa": 861, "fiffv_mne_meg": 861, "fiffv_mne_eeg": 861, "fiffv_mne_meg_eeg": 861, "fiffv_mne_unknown_cov": 861, "fiffv_mne_noise_cov": 861, "fiffv_mne_sensor_cov": 861, "fiffv_mne_source_cov": 861, "fiffv_mne_fmri_prior_cov": 861, "fiffv_mne_signal_cov": 861, "fiffv_mne_depth_prior_cov": 861, "fiffv_mne_orient_prior_cov": 861, "fiffv_proj_item_non": 861, "fiffv_proj_item_dip_fix": 861, "fiffv_proj_item_dip_rot": 861, "fiffv_proj_item_homog_grad": 861, "fiffv_proj_item_homog_field": 861, "fiffv_proj_item_eeg_avref": 861, "uint32": 861, "parent_id": 861, "nent": 861, "nchild": 861, "1970": [861, 876], "fiffv_coord": 861, "fiffv_mne_coord": 861, "fiff_point": 861, "num_point": 861, "char": [861, 876], "fv": 861, "struct": 861, "fiff_eeg_ch": 861, "coil_tran": 861, "eeg_loc": 861, "six": 861, "10unit_mul": 861, "fiffv_proj_item": 861, "fiffv_mne_proj_item": 861, "decalibr": 861, "row_cal": 861, "col_cal": 861, "tri_area": 861, "tri_cent": 861, "centroid": 861, "tri_nn": 861, "mne_add_patch_info": 861, "sol_grad": 861, "sing": 861, "eigen_lead": 861, "eigen_field": 861, "source_cov": 861, "cond1": 862, "cond2": 862, "addpath": 862, "pop_fileio": 862, "pop_eegfiltnew": 862, "pop_averef": 862, "pop_select": 862, "pop_runica": 862, "pop_binica": 862, "pop_compprop": 862, "comp_num": 862, "winhandl": 862, "comphead": 862, "pop_selectcomp": 862, "list_of_components_to_exclud": 862, "pop_epoch": 862, "eeg_epoch": 862, "pop_timtopo": 862, "pop_compareerp": 862, "eeg_epochs1": 862, "eeg_epochs2": 862, "pop_saveset": 862, "lfreq": 862, "hfreq": 862, "filtered_raw": 862, "bdfl": 863, "nutmegtrip": 864, "youtub": [864, 876], "cluster_based_statist": 864, "patsi": 864, "dmatric": 864, "4859": 864, "2852": 864, "3585": 864, "openneuro": 864, "6687": 864, "adult": 864, "dcm": 864, "kymata": 864, "watch": 864, "bnci": 864, "horizon": 864, "pde": 864, "swig": 864, "ambit": 864, "useless": 864, "recruit": 864, "8221": 864, "rudimentari": 864, "crossspectrum": 864, "multitaperspectrum": 864, "7671": 864, "8026": 864, "8724": 864, "9045": 864, "pr": 864, "6609": 864, "6629": 864, "6672": 864, "6673": 864, "8397": 864, "8892": 864, "mnefun": 864, "ptfce": 864, "mayavi": [864, 876], "7162": 864, "cloud": 864, "dask": 864, "czi": 864, "7751": 864, "docker": 864, "underscore_cas": 866, "themat": 866, "read_raw_curri": [866, 876], "read_raw_nedf": [866, 876], "read_mrk": 866, "get_meg_helmet_surf": 866, "get_volume_labels_from_src": [866, 876], "parse_config": 866, "read_evoked_besa": [866, 876], "read_evokeds_mff": [866, 876], "read_morph_map": [866, 876], "read_reject_paramet": 866, "write_label": 866, "export_epoch": [866, 876], "export_evok": [866, 876], "add_background_imag": 866, "compare_fiff": 866, "mne_analyze_colormap": 866, "plot_csd": 866, "plot_epochs_psd_topomap": [866, 876], "plot_evok": [866, 876], "plot_evoked_topomap": [866, 876], "plot_evoked_joint": [866, 876], "plot_ica_properti": [866, 876], "plot_ica_scor": [866, 876], "plot_ica_overlai": [866, 876], "plot_montag": [866, 876], "plot_raw_psd": [866, 876], "plot_regression_weight": [866, 876], "plot_volume_source_estim": [866, 876], "plot_tfr_topomap": [866, 876], "plot_topo_image_epoch": [866, 876], "get_3d_backend": [866, 876], "use_3d_backend": [866, 876], "close_3d_figur": 866, "close_all_3d_figur": 866, "get_browser_backend": [866, 876], "equalize_channel": [866, 876], "annotate_nan": [866, 876], "compute_fine_calibr": [866, 876], "compute_maxwell_basi": [866, 876], "ica_find_ecg_ev": 866, "ica_find_eog_ev": 866, "equalize_bad": [866, 876], "maxwell_filter_prepare_emptyroom": [866, 876], "read_eog_regress": 866, "realign_raw": [866, 876], "regress_artifact": [866, 876], "read_ica_eeglab": [866, 876], "read_fine_calibr": 866, "write_fine_calibr": 866, "short_channel": [866, 876], "estimate_ringing_sampl": 866, "extract_chpi_locs_kit": [866, 876], "concatenate_ev": 866, "count_ev": [866, 876], "match_event_nam": [866, 876], "shift_time_ev": [866, 876], "pick_channels_cov": 866, "compute_whiten": [866, 876], "write_fiduci": 866, "create_default_subject": [866, 876], "head_to_mni": 866, "head_to_mri": [866, 876], "add_source_space_dist": [866, 876], "decimate_surfac": [866, 876], "complete_surface_info": 866, "distance_to_bem": [866, 876], "compute_rank_invers": 866, "read_beamform": [866, 876], "grade_to_tri": 866, "grade_to_vertic": 866, "grow_label": [866, 876], "random_parcel": 866, "transform_surface_to": [866, 876], "get_decimated_surfac": [866, 876], "pick_channels_csd": 866, "dpss_window": [866, 876], "cwt": 866, "ttest_ind_no_p": [866, 876], "spatial_dist_adjac": [866, 876], "spatial_tris_adjac": [866, 876], "spatial_inter_hemi_adjac": [866, 876], "spatio_temporal_src_adjac": [866, 876], "spatio_temporal_dist_adjac": [866, 876], "select_source_in_label": 866, "psdestim": 866, "timefrequ": [866, 876], "open_doc": [866, 876], "set_log_fil": 866, "get_cuda_memori": 866, "set_cuda_devic": [866, 876], "11366": 876, "11397": 876, "11401": 876, "11407": 876, "11388": 876, "11419": 876, "11430": 876, "sanit": 876, "11399": 876, "splash": 876, "11398": 876, "11402": 876, "11421": 876, "11427": 876, "11436": 876, "11333": 876, "tooma": 876, "anij\u00e4rv": 876, "11237": 876, "scheltienn": 876, "11236": 876, "11241": 876, "jevri": 876, "repr": 876, "11357": 876, "11359": 876, "11096": 876, "11353": 876, "11283": 876, "11329": 876, "11375": 876, "hennei": 876, "11310": 876, "santeri": 876, "ruuskanen": 876, "11289": 876, "mauricio": 876, "cesped": 876, "tenorio": 876, "11235": 876, "hasegan": 876, "11245": 876, "gerster": 876, "dinara": 876, "issagaliyeva": 876, "jennif": 876, "behnk": 876, "hakimeh": 876, "aslsardroud": 876, "pavel": 876, "navratil": 876, "ear_left": 876, "ear_right": 876, "11255": 876, "11263": 876, "torr": 876, "ortiz": 876, "11351": 876, "enzo": 876, "altamiranda": 876, "reject_": 876, "11244": 876, "11303": 876, "11290": 876, "wrongli": 876, "11248": 876, "11258": 876, "erkka": 876, "heinila": 876, "outli": 876, "11298": 876, "11345": 876, "11311": 876, "11300": 876, "11340": 876, "11318": 876, "11346": 876, "11344": 876, "errantli": 876, "11347": 876, "11293": 876, "11322": 876, "11369": 876, "11361": 876, "nowadai": 876, "interp_from": 876, "interp_kind": 876, "11371": 876, "brayet": 876, "luka": 876, "hecker": 876, "omer": 876, "shubi": 876, "merk": 876, "11073": 876, "10656": 876, "10784": 876, "11011": 876, "11006": 876, "6233": 876, "10986": 876, "11048": 876, "8639": 876, "11083": 876, "11051": 876, "11020": 876, "11075": 876, "valerii": 876, "chirkov": 876, "electroderm": 876, "11090": 876, "11108": 876, "19080": 876, "11099": 876, "11077": 876, "11094": 876, "11095": 876, "11186": 876, "eduard": 876, "ort": 876, "11116": 876, "11147": 876, "11150": 876, "11185": 876, "11154": 876, "11141": 876, "11232": 876, "11159": 876, "11196": 876, "gemein": 876, "unlabel": 876, "11074": 876, "sebastiaan": 876, "mathot": 876, "11072": 876, "chetan": 876, "gohil": 876, "11004": 876, "carlstr\u00f6m": 876, "schad": 876, "11190": 876, "wetzel": 876, "11019": 876, "sena": 876, "11049": 876, "11084": 876, "11145": 876, "11182": 876, "11040": 876, "marian": 876, "dovgialo": 876, "11171": 876, "11181": 876, "11193": 876, "11102": 876, "11081": 876, "11191": 876, "6870": 876, "simeon": 876, "11197": 876, "11212": 876, "11203": 876, "11201": 876, "h\u00fcseyin": 876, "orkun": 876, "elma": 876, "deprecationwarn": 876, "11123": 876, "11050": 876, "show_toolbar": 876, "10184": 876, "skirt": 876, "add_channels_epoch": 876, "11180": 876, "11046": 876, "welzel": 876, "luzpaz": 876, "10974": 876, "ilia": 876, "machaira": 876, "10942": 876, "tziona": 876, "nessaiv": 876, "10922": 876, "mingjian": 876, "he": 876, "10736": 876, "jordan": 876, "drew": 876, "10632": 876, "courtemanch": 876, "10515": 876, "alessandro": 876, "tonin": 876, "10555": 876, "powel": 876, "10627": 876, "evan": 876, "hathawai": 876, "icalabel": 876, "10615": 876, "10501": 876, "10460": 876, "10544": 876, "10720": 876, "10464": 876, "10699": 876, "10534": 876, "10568": 876, "10567": 876, "10533": 876, "10557": 876, "10591": 876, "10571": 876, "10587": 876, "10125": 876, "benerradi": 876, "10606": 876, "10610": 876, "10614": 876, "10611": 876, "10633": 876, "10661": 876, "10668": 876, "10681": 876, "timeformat": 876, "yyyi": 876, "_convert_tim": 876, "10674": 876, "kern": 876, "10694": 876, "10572": 876, "10373": 876, "10734": 876, "michiru": 876, "kaneda": 876, "10284": 876, "10749": 876, "10788": 876, "10892": 876, "10940": 876, "vref": 876, "10823": 876, "huberti": 876, "10979": 876, "_project_onto_surfac": 876, "return_nn": 876, "10930": 876, "10927": 876, "reza": 876, "nasri": 876, "hypnodyn": 876, "zmax": 876, "10754": 876, "frederik": 876, "weber": 876, "10718": 876, "t1t2": 876, "10639": 876, "toivonen": 876, "10217": 876, "wang": 876, "10517": 876, "10470": 876, "dold": 876, "10485": 876, "10487": 876, "10500": 876, "10491": 876, "10662": 876, "10866": 876, "10957": 876, "10513": 876, "10493": 876, "10504": 876, "10705": 876, "10521": 876, "10547": 876, "10543": 876, "10912": 876, "10560": 876, "10619": 876, "10618": 876, "shoorangiz": 876, "10638": 876, "10664": 876, "honor": 876, "10686": 876, "10685": 876, "10688": 876, "8754": 876, "10703": 876, "10730": 876, "10753": 876, "10765": 876, "po6": 876, "blender": 876, "10778": 876, "10802": 876, "10471": 876, "10851": 876, "10898": 876, "10990": 876, "10968": 876, "10936": 876, "10963": 876, "10978": 876, "10531": 876, "bilinear": 876, "set_interpol": 876, "10617": 876, "10715": 876, "10950": 876, "10925": 876, "10945": 876, "adelin": 876, "fecker": 876, "ciok": 876, "archit": 876, "singhal": 876, "ashlei": 876, "beaslei": 876, "dominiqu": 876, "makowski": 876, "hamid": 876, "maymandi": 876, "naveen": 876, "srinivasan": 876, "sondr": 876, "foslien": 876, "10396": 876, "10089": 876, "senwen": 876, "deng": 876, "10076": 876, "zerfowski": 876, "10054": 876, "etienn": 876, "montalivet": 876, "10174": 876, "veillett": 876, "10307": 876, "10281": 876, "9952": 876, "10379": 876, "9922": 876, "9978": 876, "9994": 876, "9929": 876, "concis": 876, "__repr__": 876, "10042": 876, "sosulski": 876, "10056": 876, "10077": 876, "10102": 876, "10058": 876, "10109": 876, "10115": 876, "10119": 876, "10114": 876, "10116": 876, "dpi": 876, "10126": 876, "10129": 876, "10135": 876, "10142": 876, "10166": 876, "10175": 876, "10182": 876, "10186": 876, "10185": 876, "9969": 876, "10019": 876, "10200": 876, "10255": 876, "10202": 876, "9972": 876, "10206": 876, "10220": 876, "10230": 876, "10249": 876, "10243": 876, "10212": 876, "ui": 876, "10222": 876, "10183": 876, "10247": 876, "10297": 876, "10299": 876, "10330": 876, "10384": 876, "10417": 876, "10418": 876, "10408": 876, "subsurfac": 876, "10421": 876, "joshua": 876, "teve": 876, "latin": 876, "10429": 876, "eberlein": 876, "10431": 876, "rawmff": 876, "10304": 876, "10361": 876, "shift_jist": 876, "10356": 876, "10093": 876, "adina": 876, "wagner": 876, "loadtxt": 876, "10189": 876, "federico": 876, "zamberlan": 876, "nikolai": 876, "chapochnikov": 876, "9957": 876, "led": 876, "inconsist": 876, "9966": 876, "9998": 876, "9968": 876, "alphanumer": 876, "10002": 876, "9975": 876, "9980": 876, "9990": 876, "suboptim": 876, "9991": 876, "10004": 876, "9970": 876, "10021": 876, "10040": 876, "10358": 876, "10047": 876, "10399": 876, "10073": 876, "10087": 876, "annotate_": 876, "meas_tim": 876, "10067": 876, "10118": 876, "10074": 876, "10082": 876, "10112": 876, "trip": 876, "10177": 876, "10127": 876, "10132": 876, "10095": 876, "10176": 876, "stout": 876, "10210": 876, "10235": 876, "10267": 876, "german": 876, "de_d": 876, "french": 876, "fr_fr": 876, "italian": 876, "it_it": 876, "10277": 876, "10292": 876, "10309": 876, "10265": 876, "10415": 876, "initial_valu": 876, "10289": 876, "10324": 876, "10342": 876, "10347": 876, "10313": 876, "10400": 876, "10335": 876, "mislead": 876, "10393": 876, "10392": 876, "10401": 876, "9960": 876, "10039": 876, "10348": 876, "annotate_flat": 876, "10143": 876, "max_ori_out": 876, "10366": 876, "10323": 876, "jinja2": 876, "tempita": 876, "10211": 876, "julia": 876, "guiomar": 876, "niso": 876, "gal\u00e1n": 876, "steve": 876, "matindi": 876, "hartmann": 876, "julien": 876, "derollepot": 876, "xiaokai": 876, "xia": 876, "bannier": 876, "darin": 876, "erat": 876, "sleiter": 876, "gate": 876, "evgeni": 876, "goldstein": 876, "riessariu": 876, "stargardski": 876, "9801": 876, "9575": 876, "nirsport2": 876, "9348": 876, "9401": 876, "9376": 876, "9430": 876, "9481": 876, "9637": 876, "9872": 876, "9782": 876, "9858": 876, "9640": 876, "6888": 876, "9892": 876, "9725": 876, "ckdtree": 876, "9568": 876, "9643": 876, "9369": 876, "9427": 876, "9391": 876, "9396": 876, "9424": 876, "9403": 876, "9463": 876, "9431": 876, "9443": 876, "9406": 876, "9438": 876, "datablock": 876, "acquist": 876, "9437": 876, "raimondo": 876, "9445": 876, "9419": 876, "9458": 876, "9444": 876, "9503": 876, "9484": 876, "9697": 876, "9468": 876, "9514": 876, "erica": 876, "9541": 876, "9519": 876, "9525": 876, "9529": 876, "9558": 876, "9555": 876, "9553": 876, "insens": 876, "9544": 876, "9556": 876, "9578": 876, "9570": 876, "9545": 876, "9540": 876, "9601": 876, "9605": 876, "abort": 876, "9614": 876, "9516": 876, "9618": 876, "9658": 876, "9585": 876, "9682": 876, "9684": 876, "9789": 876, "9694": 876, "9586": 876, "9742": 876, "9796": 876, "9763": 876, "9784": 876, "9810": 876, "revamp": 876, "9754": 876, "9847": 876, "9860": 876, "9861": 876, "9862": 876, "9863": 876, "9871": 876, "9881": 876, "9891": 876, "9795": 876, "9800": 876, "9613": 876, "9845": 876, "9851": 876, "9869": 876, "9859": 876, "9687": 876, "9708": 876, "9706": 876, "9378": 876, "9381": 876, "9712": 876, "9719": 876, "chronolog": 876, "9765": 876, "9849": 876, "9897": 876, "9920": 876, "9384": 876, "9404": 876, "9435": 876, "9531": 876, "9447": 876, "assertionerror": 876, "9612": 876, "9831": 876, "protect": 876, "9522": 876, "9485": 876, "9513": 876, "9489": 876, "9524": 876, "9603": 876, "9528": 876, "imposs": 876, "9893": 876, "9535": 876, "9564": 876, "9565": 876, "9629": 876, "9771": 876, "9607": 876, "9663": 876, "9630": 876, "9580": 876, "identitii": 876, "9758": 876, "dollar": 876, "9695": 876, "9746": 876, "9799": 876, "9804": 876, "9777": 876, "9780": 876, "9933": 876, "9864": 876, "9873": 876, "9940": 876, "9867": 876, "9904": 876, "pysurf": 876, "kit2fiff": 876, "mne_kit_gui": 876, "9505": 876, "9596": 876, "prox": 876, "outperform": 876, "9608": 876, "9493": 876, "9685": 876, "has_": 876, "_data": 876, "9781": 876, "add_figs_to_sect": 876, "add_slider_to_sect": 876, "add_images_to_sect": 876, "add_bem_to_sect": 876, "add_htmls_to_sect": 876, "sort_sect": 876, "9815": 876, "center_cmap": 876, "9843": 876, "detect_artifact": 876, "9909": 876, "fede": 876, "gansheng": 876, "tan": 876, "banvil": 876, "josh": 876, "koen": 876, "sumalyo": 876, "datta": 876, "pade": 876, "koehler": 876, "rotem": 876, "falach": 876, "sanderson": 876, "enrico": 876, "varano": 876, "judi": 876, "zhu": 876, "matteo": 876, "anelli": 876, "apoorva": 876, "karek": 876, "silvia": 876, "cotroneo": 876, "maggi": 876, "9192": 876, "9285": 876, "9278": 876, "9124": 876, "9203": 876, "9174": 876, "refactor": 876, "9088": 876, "9156": 876, "9043": 876, "9096": 876, "8867": 876, "8739": 876, "9169": 876, "yokogawa": 876, "8813": 876, "8799": 876, "ipyvtk_simpl": 876, "8503": 876, "8346": 876, "8896": 876, "8723": 876, "8738": 876, "8789": 876, "9268": 876, "8790": 876, "8697": 876, "8801": 876, "8829": 876, "8744": 876, "8762": 876, "9037": 876, "8793": 876, "9262": 876, "keypress": 876, "8806": 876, "starstim": 876, "enobio": 876, "8734": 876, "tristan": 876, "stenner": 876, "8760": 876, "8783": 876, "8822": 876, "8771": 876, "8805": 876, "8794": 876, "auto_clos": 876, "8730": 876, "8841": 876, "yu": 876, "luo": 876, "8858": 876, "checker": 876, "pylanc": 876, "8862": 876, "8874": 876, "interobail": 876, "8868": 876, "qt_mac_wants_lay": 876, "8959": 876, "8879": 876, "8834": 876, "9023": 876, "9015": 876, "9087": 876, "9113": 876, "9118": 876, "9103": 876, "9175": 876, "9149": 876, "9166": 876, "bierer": 876, "9210": 876, "9136": 876, "9241": 876, "9261": 876, "9269": 876, "9270": 876, "9141": 876, "9347": 876, "misbehav": 876, "8013": 876, "9207": 876, "9187": 876, "9151": 876, "9162": 876, "9152": 876, "x_label": 876, "9115": 876, "9062": 876, "8989": 876, "spectral_connect": 876, "8839": 876, "8844": 876, "8311": 876, "macosx": 876, "8688": 876, "8983": 876, "superset": 876, "8675": 876, "8713": 876, "8689": 876, "8954": 876, "8884": 876, "num_sampl": 876, "duration_in_sec": 876, "8712": 876, "8780": 876, "8804": 876, "8842": 876, "8857": 876, "9315": 876, "8956": 876, "9284": 876, "9317": 876, "8845": 876, "8811": 876, "bailei": 876, "8736": 876, "8831": 876, "8728": 876, "8731": 876, "8996": 876, "8752": 876, "8759": 876, "8775": 876, "8800": 876, "8817": 876, "8821": 876, "8856": 876, "8965": 876, "8985": 876, "8891": 876, "8963": 876, "9109": 876, "9178": 876, "9252": 876, "9027": 876, "9236": 876, "9246": 876, "9305": 876, "9277": 876, "9099": 876, "plot_sensors_connect": 876, "cbar_label": 876, "9248": 876, "read_select": 876, "8870": 876, "tf_dic": 876, "9122": 876, "9033": 876, "ana": 876, "radanov": 876, "magalvan": 876, "mista": 876, "christina": 876, "zhao": 876, "giorgio": 876, "marinato": 876, "jori": 876, "den": 876, "bossch": 876, "gensollen": 876, "treguer": 876, "austin": 876, "hurst": 876, "aniket": 876, "pradhan": 876, "hongjiang": 876, "kuziek": 876, "qianliang": 876, "tod": 876, "flak": 876, "8354": 876, "7070": 876, "imgag": 876, "7717": 876, "kyle": 876, "mathewson": 876, "8275": 876, "8445": 876, "keith": 876, "doell": 876, "8553": 876, "8351": 876, "8190": 876, "8539": 876, "8379": 876, "8366": 876, "8642": 876, "8447": 876, "8323": 876, "8449": 876, "8402": 876, "8460": 876, "8532": 876, "8482": 876, "8608": 876, "8502": 876, "tqdm": 876, "8515": 876, "8622": 876, "8381": 876, "8584": 876, "8442": 876, "8534": 876, "8624": 876, "8519": 876, "8452": 876, "8415": 876, "8395": 876, "8658": 876, "cascad": 876, "8633": 876, "8580": 876, "8400": 876, "test_egi": 876, "mandatorili": 876, "8474": 876, "8339": 876, "8558": 876, "s390x": 876, "8618": 876, "8594": 876, "8610": 876, "8377": 876, "8285": 876, "8344": 876, "8318": 876, "8637": 876, "8306": 876, "8448": 876, "8283": 876, "name_split": 876, "01_meg": 876, "name_meg": 876, "8464": 876, "8326": 876, "8343": 876, "8425": 876, "8317": 876, "8663": 876, "8320": 876, "8303": 876, "8484": 876, "8349": 876, "max_pca_compon": 876, "max_pca_components_": 876, "8321": 876, "8341": 876, "everyhwer": 876, "8368": 876, "8393": 876, "8416": 876, "8434": 876, "8486": 876, "8491": 876, "8492": 876, "8545": 876, "8590": 876, "tukei": 876, "8542": 876, "8520": 876, "8589": 876, "8564": 876, "8605": 876, "8374": 876, "8357": 876, "8356": 876, "8389": 876, "justu": 876, "schwabed": 876, "mad": 876, "jensen": 876, "mikolaj": 876, "rahul": 876, "nadkarni": 876, "lau": 876, "m\u00f8ller": 876, "andersen": 876, "sedivi": 876, "donckt": 876, "svea": 876, "meyer": 876, "lx37": 876, "rai": 876, "n_iter_sdr": 876, "immut": 876, "fxaa": 876, "_split": 876, "_part": 876, "read_raw_xxx": 876, "simpler": 876, "permit": 876, "outermost": 876, "setup_forward_model": 876, "unicod": 876, "conjug": 876, "throw": 876, "spatio_temporal_src_connect": 876, "find_ch_connect": 876, "read_ch_connect": 876, "spatial_dist_connect": 876, "spatial_inter_hemi_connect": 876, "spatial_src_connect": 876, "spatial_tris_connect": 876, "spatio_temporal_dist_connect": 876, "spatio_temporal_tris_connect": 876, "normalize_fwd": 876, "stc_mix": 876, "read_dig_captrack": 876, "spell": 876, "captrack": 876, "mark_flat": 876, "alejandro": 876, "weinstein": 876, "anton": 876, "nikola": 876, "waniek": 876, "harmelen": 876, "sara": 876, "sommariva": 876, "chapochn": 876, "mshader": 876, "sophi": 876, "herbst": 876, "victor": 876, "ferat": 876, "mohammad": 876, "daneshzand": 876, "reppling": 876, "plv": 876, "dmitrii": 876, "altukhov": 876, "epochs_color": 876, "prepare_bem_model": 876, "unavail": 876, "compromis": 876, "roc_auc_ovo": 876, "roc_auc_ovo_weight": 876, "sebastian": 876, "old_tim": 876, "subprocess": 876, "htp": 876, "insuffici": 876, "demetr": 876, "kosta": 876, "gridsearchcv": 876, "chun": 876, "hui": 876, "henrich": 876, "kolkhorst": 876, "fu": 876, "geoff": 876, "brookshir": 876, "eegmi_url": 876, "ramiro": 876, "gatti": 876, "get_channel_type_const": 876, "bump": 876, "tandem": 876, "point_spread_funct": 876, "cross_talk_funct": 876, "ariel": 876, "rokem": 876, "jos\u00e9": 876, "garc\u00eda": 876, "moham": 876, "sherif": 876, "nataliia": 876, "kozhemiako": 876, "legrand": 876, "f\u00e9rat": 876, "theodor": 876, "papadopoulo": 876, "markerfil": 876, "dirk": 876, "g\u00fctlin": 876, "10x": 876, "jit": 876, "ryb\u00e1\u0159": 876, "abram": 876, "hindl": 876, "eberhard": 876, "eich": 876, "radman": 876, "hidpi": 876, "pycord": 876, "read_montag": 876, "read_dig_montag": 876, "set_dig": 876, "update_ch_nam": 876, "raise_if_subset": 876, "_smsh_": 876, "_smartshield": 876, "max_tick": 876, "show_legend": 876, "biosig": 876, "nathali": 876, "gayraud": 876, "crist\u00f3bal": 876, "mo\u00ebnn": 876, "loccoz": 876, "mixin": 876, "lslclient": 876, "lsl": 876, "chala": 876, "mocklslstream": 876, "roujanski": 876, "fault": 876, "kovrig": 876, "n_pad": 876, "bruno": 876, "nicenboim": 876, "32bit": 876, "edge_": 876, "v0": 876, "retina": 876, "larri": 876, "eisenman": 876, "mishandl": 876, "haslach": 876, "clean_eog_ecg": 876, "jeythekei": 876, "_criterion": 876, "katarina": 876, "slama": 876, "synthesi": 876, "find_edf_ev": 876, "patch_info": 876, "castano": 876, "finder": 876, "rasmu": 876, "zetter": 876, "orgin": 876, "gsoc": 876, "molfes": 876, "sphx_glr_auto_examples_datasets_plot_opm_rest_data": 876, "gutstein": 876, "trig_shift_by_typ": 876, "read_annotations_brainvis": 876, "get_blas_func": 876, "_compute_covariance_auto": 876, "onewai": 876, "marcin": 876, "koculak": 876, "buildup": 876, "incom": 876, "bethard": 876, "dateutil": 876, "jasper": 876, "bosch": 876, "_current": 876, "unit_noise_gain": 876, "buildqa": 876, "read_annotations_eeglab": 876, "annotmap": 876, "runtimeexcept": 876, "morph_precomput": 876, "compute_morph_matrix": 876, "morph_data_precomput": 876, "pycuda": 876, "warn_explicit": 876, "save_stc_as_volum": 876, "stop_receive_thread": 876, "johan": 876, "meer": 876, "kambiz": 876, "tavabi": 876, "lorenz": 876, "esch": 876, "manu": 876, "sutela": 876, "perri": 876, "sergei": 876, "antopolskii": 876, "teekuninga": 876, "jochmann": 876, "dupr\u00e9": 876, "workaround": 876, "trainsform": 876, "dubarri": 876, "tf_mxne_optim": 876, "mxne_optim": 876, "multidictionari": 876, "image_mask": 876, "csd_epoch": 876, "csd_arrai": 876, "oleh": 876, "kozynet": 876, "lcmv_epoch": 876, "lcmv_raw": 876, "braboszcz": 876, "desislava": 876, "petkova": 876, "krzemi\u0144ski": 876, "hornberg": 876, "juergen": 876, "katrin": 876, "leinweb": 876, "yaroslav": 876, "halchenko": 876, "baptist": 876, "schiratti": 876, "utilis": 876, "dgap_l21l1": 876, "ramonapariciog": 876, "get_pos2d": 876, "\u03c7\u00b2": 876, "writabl": 876, "plot_roi_erpimage_by_rt": 876, "ansi": 876, "codepag": 876, "okba": 876, "bekhelifi": 876, "boggess": 876, "duemos": 876, "nielsen": 876, "luk\u00e1\u0161": 876, "hejtm\u00e1nek": 876, "_virtual": 876, "treatment": 876, "megsim": 876, "mrn": 876, "reformat": 876, "timedecod": 876, "generalizationacrosstim": 876, "plot_gat_tim": 876, "plot_gat_matrix": 876, "read_events_eeglab": 876, "plot_tran": 876, "tf_lcmv": 876, "scale_tim": 876, "scalings_tim": 876, "akshay0724": 876, "rudiuk": 876, "dykstra": 876, "laetitia": 876, "grabot": 876, "proulx": 876, "apariciogarcia": 876, "robin": 876, "tibor": 876, "schirrmeist": 876, "rodrigo": 876, "h\u00fcbner": 876, "toddler": 876, "fasttrack": 876, "brovelli": 876, "_plot_topo_onpick": 876, "nikla": 876, "wilm": 876, "rantala": 876, "_bad_drop": 876, "_filenam": 876, "pasler": 876, "predict_mod": 876, "chanloc": 876, "dgap_l21": 876, "band_pass_filt": 876, "band_stop_filt": 876, "low_pass_filt": 876, "high_pass_filt": 876, "eeg_sensor": 876, "typecheck": 876, "leonardo": 876, "barbosa": 876, "superflu": 876, "hermann": 876, "sonntag": 876, "jakub": 876, "kaczmarzyk": 876, "lorenzo": 876, "alfin": 876, "visconti": 876, "nick": 876, "foti": 876, "pop_prop": 876, "maryland": 876, "preview": 876, "raimundo": 876, "hid": 876, "martinez": 876, "pablo": 876, "aria": 876, "duma": 876, "fieldtripcli": 876, "get_data_as_epoch": 876, "unitsposit": 876, "mullin": 876, "bva": 876, "strictest": 876, "hojlund": 876, "niediek": 876, "add_eeg_ref": 876, "csd_compute_epoch": 876, "ev2": 876, "\u00b5": 876, "aru": 876, "unsupport": 876, "config_opt": 876, "epochsvector": 876, "favour": 876, "cwt_morlet": 876, "single_trial_pow": 876, "committ": 876, "camilo": 876, "lamu": 876, "f\u00e9lix": 876, "kraus": 876, "shlomo": 876, "poil": 876, "show_info": 876, "compute_raw_psd": 876, "compute_epochs_psd": 876, "614990234": 876, "00064103": 876, "99897607": 876, "train_tim": 876, "ecg_criterion": 876, "eog_criterion": 876, "natali": 876, "klein": 876, "coordinan": 876, "ware": 876, "score_mod": 876, "stimserv": 876, "ip": 876, "mesh_color": 876, "multitaper_psd": 876, "vertor": 876, "renorm": 876, "drop_bad_epoch": 876, "drop_epoch": 876, "do_forward_solut": 876, "kaichogami": 876, "cl\u00e9ment": 876, "moutard": 876, "martinbab": 876, "sagun": 876, "pai": 876, "sourav": 876, "kambyses": 876, "pbnsilva": 876, "sviter": 876, "zuxfoucault": 876, "nenonen": 876, "add_eeg_average_proj": 876, "n_samp_tot": 876, "emilyps14": 876, "lennyvarghes": 876, "freeview_bem_surfac": 876, "desanti": 876, "_setup_vmin_vmax": 876, "concatenatechannel": 876, "redesign": 876, "rewrot": 876, "plot_image_epoch": 876, "preload_data": 876, "santi": 876, "roan": 876, "laplant": 876, "wakeman": 876, "add_sect": 876, "marmaduk": 876, "woodman": 876, "whiten_evok": 876, "oddbal": 876, "label_1": 876, "label_2": 876, "savitski": 876, "_baseraw": 876, "prof": 876, "decoupl": 876, "read_hsp": 876, "read_elp": 876, "write_hsp": 876, "write_mrk": 876, "label_time_cours": 876, "as_data_fram": 876, "pick_types_evok": 876, "textbox": 876, "iir_filter_raw": 876, "ingoo": 876, "kj": 876, "basil": 876, "pinsard": 876, "hafeza": 876, "anevar": 876, "manoj": 876, "kumar": 876, "tucker": 876, "ward": 876, "radic": 876, "tack": 876, "equalize_channnel": 876, "s\u00e9bastien": 876, "connector": 876, "cathi": 876, "nangini": 876, "succintli": 876, "breuer": 876, "aesthet": 876, "qunxi": 876, "drop_pick": 876, "labels_from_parc": 876, "parc_from_label": 876, "setno": 876, "plot_": 876, "praveen": 876, "sripad": 876, "tanai": 876, "saket": 876, "choudhari": 876, "brad": 876, "buran": 876, "stimclient": 876, "rtclient": 876, "mockrtclient": 876, "trelli": 876, "ki2fiff": 876, "pick_norm": 876, "write_stc": 876, "olivetti": 876, "kornblith": 876, "smarter": 876, "sources_as_epoch": 876, "psi": 876, "mne_compute_proj_eog": 876, "applicationon": 876, "proj_act": 876, "keep_comp": 876, "dest_comp": 876, "speedup": 876, "clike": 876, "l21": 876, "bessel": 876, "time_to_index": 876, "mne_compute_proj_ecg": 876, "mne_maxfilt": 876, "loui": 876, "thibault": 876, "ellen": 876, "ruzich": 876}, "objects": {"": [[866, 0, 0, "-", "mne"]], "mne": [[255, 1, 1, "", "AcqParserFIF"], [256, 1, 1, "", "Annotations"], [257, 1, 1, "", "BaseEpochs"], [258, 1, 1, "", "BiHemiLabel"], [259, 1, 1, "", "Covariance"], [260, 1, 1, "", "Dipole"], [261, 1, 1, "", "DipoleFixed"], [262, 1, 1, "", "Epochs"], [263, 1, 1, "", "EpochsArray"], [264, 1, 1, "", "Evoked"], [265, 1, 1, "", "EvokedArray"], [266, 1, 1, "", "Forward"], [267, 1, 1, "", "Info"], [268, 1, 1, "", "Label"], [269, 1, 1, "", "MixedSourceEstimate"], [270, 1, 1, "", "MixedVectorSourceEstimate"], [271, 1, 1, "", "Projection"], [272, 1, 1, "", "Report"], [273, 1, 1, "", "SourceEstimate"], [274, 1, 1, "", "SourceMorph"], [275, 1, 1, "", "SourceSpaces"], [276, 1, 1, "", "VectorSourceEstimate"], [277, 1, 1, "", "VolSourceEstimate"], [278, 1, 1, "", "VolVectorSourceEstimate"], [279, 4, 1, "", "add_reference_channels"], [280, 4, 1, "", "add_source_space_distances"], [281, 4, 1, "", "annotations_from_events"], [282, 4, 1, "", "apply_forward"], [283, 4, 1, "", "apply_forward_raw"], [284, 4, 1, "", "average_forward_solutions"], [870, 0, 0, "-", "baseline"], [844, 0, 0, "-", "beamformer"], [252, 0, 0, "-", "bem"], [308, 4, 1, "", "channel_indices_by_type"], [309, 4, 1, "", "channel_type"], [865, 0, 0, "-", "channels"], [865, 0, 0, "-", "chpi"], [351, 4, 1, "", "combine_evoked"], [352, 4, 1, "", "compute_covariance"], [353, 4, 1, "", "compute_proj_epochs"], [354, 4, 1, "", "compute_proj_evoked"], [355, 4, 1, "", "compute_proj_raw"], [356, 4, 1, "", "compute_rank"], [357, 4, 1, "", "compute_raw_covariance"], [358, 4, 1, "", "compute_source_morph"], [359, 4, 1, "", "concatenate_epochs"], [360, 4, 1, "", "concatenate_events"], [361, 4, 1, "", "concatenate_raws"], [362, 4, 1, "", "convert_forward_solution"], [366, 4, 1, "", "count_events"], [370, 4, 1, "", "create_default_subject"], [371, 4, 1, "", "create_info"], [845, 0, 0, "-", "cuda"], [247, 0, 0, "-", "datasets"], [407, 4, 1, "", "decimate_surface"], [248, 0, 0, "-", "decoding"], [427, 4, 1, "", "dig_mri_distances"], [844, 0, 0, "-", "dipole"], [249, 0, 0, "-", "epochs"], [433, 4, 1, "", "equalize_channels"], [249, 0, 0, "-", "event"], [437, 4, 1, "", "events_from_annotations"], [250, 0, 0, "-", "export"], [442, 4, 1, "", "extract_label_time_course"], [865, 0, 0, "-", "filter"], [449, 4, 1, "", "find_events"], [450, 4, 1, "", "find_stim_steps"], [451, 4, 1, "", "fit_dipole"], [456, 4, 1, "", "get_config"], [457, 4, 1, "", "get_config_path"], [458, 4, 1, "", "get_head_surf"], [459, 4, 1, "", "get_meg_helmet_surf"], [460, 4, 1, "", "get_montage_volume_labels"], [461, 4, 1, "", "get_volume_labels_from_aseg"], [462, 4, 1, "", "get_volume_labels_from_src"], [463, 4, 1, "", "grade_to_tris"], [464, 4, 1, "", "grade_to_vertices"], [465, 4, 1, "", "grand_average"], [466, 4, 1, "", "grow_labels"], [469, 4, 1, "", "head_to_mni"], [470, 4, 1, "", "head_to_mri"], [844, 0, 0, "-", "inverse_sparse"], [867, 0, 0, "-", "io"], [510, 4, 1, "", "label_sign_flip"], [511, 4, 1, "", "labels_to_stc"], [512, 4, 1, "", "make_ad_hoc_cov"], [513, 4, 1, "", "make_bem_model"], [514, 4, 1, "", "make_bem_solution"], [515, 4, 1, "", "make_field_map"], [516, 4, 1, "", "make_fixed_length_epochs"], [517, 4, 1, "", "make_fixed_length_events"], [518, 4, 1, "", "make_forward_dipole"], [519, 4, 1, "", "make_forward_solution"], [520, 4, 1, "", "make_sphere_model"], [521, 4, 1, "", "merge_events"], [844, 0, 0, "-", "minimum_norm"], [542, 4, 1, "", "morph_labels"], [543, 4, 1, "", "morph_source_spaces"], [544, 4, 1, "", "open_docs"], [545, 4, 1, "", "open_report"], [546, 4, 1, "", "parse_config"], [547, 4, 1, "", "pick_channels"], [548, 4, 1, "", "pick_channels_cov"], [549, 4, 1, "", "pick_channels_forward"], [550, 4, 1, "", "pick_channels_regexp"], [551, 4, 1, "", "pick_events"], [552, 4, 1, "", "pick_info"], [553, 4, 1, "", "pick_types"], [554, 4, 1, "", "pick_types_forward"], [865, 0, 0, "-", "preprocessing"], [601, 4, 1, "", "random_parcellation"], [602, 4, 1, "", "read_annotations"], [603, 4, 1, "", "read_bem_solution"], [604, 4, 1, "", "read_bem_surfaces"], [605, 4, 1, "", "read_cov"], [606, 4, 1, "", "read_dipole"], [607, 4, 1, "", "read_epochs"], [608, 4, 1, "", "read_epochs_eeglab"], [609, 4, 1, "", "read_epochs_fieldtrip"], [610, 4, 1, "", "read_epochs_kit"], [611, 4, 1, "", "read_events"], [612, 4, 1, "", "read_evoked_besa"], [613, 4, 1, "", "read_evoked_fieldtrip"], [614, 4, 1, "", "read_evokeds"], [615, 4, 1, "", "read_evokeds_mff"], [616, 4, 1, "", "read_forward_solution"], [617, 4, 1, "", "read_freesurfer_lut"], [618, 4, 1, "", "read_label"], [619, 4, 1, "", "read_labels_from_annot"], [620, 4, 1, "", "read_lta"], [621, 4, 1, "", "read_morph_map"], [622, 4, 1, "", "read_proj"], [623, 4, 1, "", "read_reject_parameters"], [624, 4, 1, "", "read_source_estimate"], [625, 4, 1, "", "read_source_morph"], [626, 4, 1, "", "read_source_spaces"], [627, 4, 1, "", "read_surface"], [628, 4, 1, "", "read_talxfm"], [629, 4, 1, "", "read_trans"], [630, 4, 1, "", "read_tri"], [631, 4, 1, "", "read_vectorview_selection"], [632, 4, 1, "", "rename_channels"], [633, 4, 1, "", "scale_bem"], [634, 4, 1, "", "scale_labels"], [635, 4, 1, "", "scale_mri"], [636, 4, 1, "", "scale_source_space"], [637, 4, 1, "", "sensitivity_map"], [638, 4, 1, "", "set_bipolar_reference"], [639, 4, 1, "", "set_cache_dir"], [640, 4, 1, "", "set_config"], [641, 4, 1, "", "set_eeg_reference"], [642, 4, 1, "", "set_log_file"], [643, 4, 1, "", "set_log_level"], [644, 4, 1, "", "setup_source_space"], [645, 4, 1, "", "setup_volume_source_space"], [871, 0, 0, "-", "simulation"], [666, 4, 1, "", "spatial_dist_adjacency"], [667, 4, 1, "", "spatial_inter_hemi_adjacency"], [668, 4, 1, "", "spatial_src_adjacency"], [669, 4, 1, "", "spatial_tris_adjacency"], [670, 4, 1, "", "spatio_temporal_dist_adjacency"], [671, 4, 1, "", "spatio_temporal_src_adjacency"], [672, 4, 1, "", "spatio_temporal_tris_adjacency"], [673, 4, 1, "", "split_label"], [873, 0, 0, "-", "stats"], [691, 4, 1, "", "stc_near_sensors"], [692, 4, 1, "", "stc_to_label"], [695, 4, 1, "", "sys_info"], [874, 0, 0, "-", "time_frequency"], [730, 4, 1, "", "transform_surface_to"], [865, 0, 0, "-", "transforms"], [737, 4, 1, "", "use_coil_def"], [738, 1, 1, "", "use_log_level"], [845, 0, 0, "-", "utils"], [741, 4, 1, "", "verbose"], [742, 4, 1, "", "vertex_to_mni"], [875, 0, 0, "-", "viz"], [816, 4, 1, "", "warp_montage_volume"], [817, 4, 1, "", "what"], [818, 4, 1, "", "write_bem_solution"], [819, 4, 1, "", "write_bem_surfaces"], [820, 4, 1, "", "write_cov"], [821, 4, 1, "", "write_events"], [822, 4, 1, "", "write_evokeds"], [823, 4, 1, "", "write_forward_solution"], [824, 4, 1, "", "write_head_bem"], [825, 4, 1, "", "write_label"], [826, 4, 1, "", "write_labels_to_annot"], [827, 4, 1, "", "write_proj"], [828, 4, 1, "", "write_source_spaces"], [829, 4, 1, "", "write_surface"], [830, 4, 1, "", "write_trans"]], "mne.AcqParserFIF": [[255, 2, 1, "", "__getitem__"], [255, 2, 1, "", "__len__"], [255, 3, 1, "", "categories"], [255, 3, 1, "", "events"], [255, 2, 1, "", "get_condition"]], "mne.Annotations": [[256, 2, 1, "", "__add__"], [256, 2, 1, "", "__getitem__"], [256, 2, 1, "", "__iter__"], [256, 2, 1, "", "__len__"], [256, 2, 1, "", "append"], [256, 2, 1, "", "copy"], [256, 2, 1, "", "crop"], [256, 2, 1, "", "delete"], [256, 3, 1, "", "orig_time"], [256, 2, 1, "", "rename"], [256, 2, 1, "", "save"], [256, 2, 1, "", "set_durations"], [256, 2, 1, "", "to_data_frame"]], "mne.BiHemiLabel": [[258, 2, 1, "", "__add__"], [258, 2, 1, "", "__len__"], [258, 2, 1, "", "__sub__"]], "mne.Covariance": [[259, 2, 1, "", "__add__"], [259, 2, 1, "", "__contains__"], [259, 2, 1, "", "__getitem__"], [259, 2, 1, "", "__iter__"], [259, 2, 1, "", "__len__"], [259, 2, 1, "", "as_diag"], [259, 3, 1, "", "ch_names"], [259, 2, 1, "", "clear"], [259, 2, 1, "", "copy"], [259, 3, 1, "", "data"], [259, 2, 1, "", "fromkeys"], [259, 2, 1, "", "get"], [259, 2, 1, "", "items"], [259, 2, 1, "", "keys"], [259, 3, 1, "", "nfree"], [259, 2, 1, "", "pick_channels"], [259, 2, 1, "", "plot"], [259, 2, 1, "", "plot_topomap"], [259, 2, 1, "", "pop"], [259, 2, 1, "", "popitem"], [259, 2, 1, "", "save"], [259, 2, 1, "", "setdefault"], [259, 2, 1, "", "update"], [259, 2, 1, "", "values"]], "mne.Dipole": [[260, 2, 1, "", "__getitem__"], [260, 2, 1, "", "__len__"], [260, 2, 1, "", "copy"], [260, 2, 1, "", "crop"], [260, 2, 1, "", "decimate"], [260, 2, 1, "", "plot_amplitudes"], [260, 2, 1, "", "plot_locations"], [260, 2, 1, "", "save"], [260, 2, 1, "", "shift_time"], [260, 2, 1, "", "time_as_index"], [260, 3, 1, "", "times"], [260, 3, 1, "", "tmax"], [260, 3, 1, "", "tmin"], [260, 2, 1, "", "to_mni"], [260, 2, 1, "", "to_mri"], [260, 2, 1, "", "to_volume_labels"]], "mne.DipoleFixed": [[261, 3, 1, "", "ch_names"], [261, 2, 1, "", "copy"], [261, 2, 1, "", "crop"], [261, 2, 1, "", "decimate"], [261, 2, 1, "", "plot"], [261, 2, 1, "", "save"], [261, 2, 1, "", "shift_time"], [261, 2, 1, "", "time_as_index"], [261, 3, 1, "", "times"], [261, 3, 1, "", "tmax"], [261, 3, 1, "", "tmin"]], "mne.Epochs": [[262, 2, 1, "", "__contains__"], [262, 2, 1, "", "__getitem__"], [262, 2, 1, "", "__iter__"], [262, 2, 1, "", "__len__"], [262, 2, 1, "", "add_annotations_to_metadata"], [262, 2, 1, "", "add_channels"], [262, 2, 1, "", "add_proj"], [262, 2, 1, "", "add_reference_channels"], [262, 2, 1, "", "anonymize"], [262, 2, 1, "", "apply_baseline"], [262, 2, 1, "", "apply_function"], [262, 2, 1, "", "apply_hilbert"], [262, 2, 1, "", "apply_proj"], [262, 2, 1, "", "as_type"], [262, 2, 1, "", "average"], [262, 3, 1, "", "ch_names"], [262, 3, 1, "", "compensation_grade"], [262, 2, 1, "", "compute_psd"], [262, 2, 1, "", "copy"], [262, 2, 1, "", "crop"], [262, 2, 1, "", "decimate"], [262, 2, 1, "", "del_proj"], [262, 2, 1, "", "drop"], [262, 2, 1, "", "drop_bad"], [262, 2, 1, "", "drop_channels"], [262, 2, 1, "", "drop_log_stats"], [262, 2, 1, "", "equalize_event_counts"], [262, 2, 1, "", "export"], [262, 3, 1, "", "filename"], [262, 2, 1, "", "filter"], [262, 2, 1, "", "get_annotations_per_epoch"], [262, 2, 1, "", "get_channel_types"], [262, 2, 1, "", "get_data"], [262, 2, 1, "", "get_montage"], [262, 2, 1, "", "interpolate_bads"], [262, 2, 1, "", "iter_evoked"], [262, 2, 1, "", "load_data"], [262, 3, 1, "", "metadata"], [262, 2, 1, "", "next"], [262, 2, 1, "", "pick"], [262, 2, 1, "", "pick_channels"], [262, 2, 1, "", "pick_types"], [262, 2, 1, "", "plot"], [262, 2, 1, "", "plot_drop_log"], [262, 2, 1, "", "plot_image"], [262, 2, 1, "", "plot_projs_topomap"], [262, 2, 1, "", "plot_psd"], [262, 2, 1, "", "plot_psd_topo"], [262, 2, 1, "", "plot_psd_topomap"], [262, 2, 1, "", "plot_sensors"], [262, 2, 1, "", "plot_topo_image"], [262, 3, 1, "", "proj"], [262, 2, 1, "", "rename_channels"], [262, 2, 1, "", "reorder_channels"], [262, 2, 1, "", "resample"], [262, 2, 1, "", "reset_drop_log_selection"], [262, 2, 1, "", "save"], [262, 2, 1, "", "savgol_filter"], [262, 2, 1, "", "set_annotations"], [262, 2, 1, "", "set_channel_types"], [262, 2, 1, "", "set_eeg_reference"], [262, 2, 1, "", "set_meas_date"], [262, 2, 1, "", "set_montage"], [262, 2, 1, "", "shift_time"], [262, 2, 1, "", "standard_error"], [262, 2, 1, "", "subtract_evoked"], [262, 2, 1, "", "time_as_index"], [262, 3, 1, "", "times"], [262, 3, 1, "", "tmax"], [262, 3, 1, "", "tmin"], [262, 2, 1, "", "to_data_frame"]], "mne.EpochsArray": [[263, 2, 1, "", "__contains__"], [263, 2, 1, "", "__getitem__"], [263, 2, 1, "", "__iter__"], [263, 2, 1, "", "__len__"], [263, 2, 1, "", "add_annotations_to_metadata"], [263, 2, 1, "", "add_channels"], [263, 2, 1, "", "add_proj"], [263, 2, 1, "", "add_reference_channels"], [263, 2, 1, "", "anonymize"], [263, 2, 1, "", "apply_baseline"], [263, 2, 1, "", "apply_function"], [263, 2, 1, "", "apply_hilbert"], [263, 2, 1, "", "apply_proj"], [263, 2, 1, "", "as_type"], [263, 2, 1, "", "average"], [263, 3, 1, "", "ch_names"], [263, 3, 1, "", "compensation_grade"], [263, 2, 1, "", "compute_psd"], [263, 2, 1, "", "copy"], [263, 2, 1, "", "crop"], [263, 2, 1, "", "decimate"], [263, 2, 1, "", "del_proj"], [263, 2, 1, "", "drop"], [263, 2, 1, "", "drop_bad"], [263, 2, 1, "", "drop_channels"], [263, 2, 1, "", "drop_log_stats"], [263, 2, 1, "", "equalize_event_counts"], [263, 2, 1, "", "export"], [263, 3, 1, "", "filename"], [263, 2, 1, "", "filter"], [263, 2, 1, "", "get_annotations_per_epoch"], [263, 2, 1, "", "get_channel_types"], [263, 2, 1, "", "get_data"], [263, 2, 1, "", "get_montage"], [263, 2, 1, "", "interpolate_bads"], [263, 2, 1, "", "iter_evoked"], [263, 2, 1, "", "load_data"], [263, 3, 1, "", "metadata"], [263, 2, 1, "", "next"], [263, 2, 1, "", "pick"], [263, 2, 1, "", "pick_channels"], [263, 2, 1, "", "pick_types"], [263, 2, 1, "", "plot"], [263, 2, 1, "", "plot_drop_log"], [263, 2, 1, "", "plot_image"], [263, 2, 1, "", "plot_projs_topomap"], [263, 2, 1, "", "plot_psd"], [263, 2, 1, "", "plot_psd_topo"], [263, 2, 1, "", "plot_psd_topomap"], [263, 2, 1, "", "plot_sensors"], [263, 2, 1, "", "plot_topo_image"], [263, 3, 1, "", "proj"], [263, 2, 1, "", "rename_channels"], [263, 2, 1, "", "reorder_channels"], [263, 2, 1, "", "resample"], [263, 2, 1, "", "reset_drop_log_selection"], [263, 2, 1, "", "save"], [263, 2, 1, "", "savgol_filter"], [263, 2, 1, "", "set_annotations"], [263, 2, 1, "", "set_channel_types"], [263, 2, 1, "", "set_eeg_reference"], [263, 2, 1, "", "set_meas_date"], [263, 2, 1, "", "set_montage"], [263, 2, 1, "", "shift_time"], [263, 2, 1, "", "standard_error"], [263, 2, 1, "", "subtract_evoked"], [263, 2, 1, "", "time_as_index"], [263, 3, 1, "", "times"], [263, 3, 1, "", "tmax"], [263, 3, 1, "", "tmin"], [263, 2, 1, "", "to_data_frame"]], "mne.Evoked": [[264, 2, 1, "", "__contains__"], [264, 2, 1, "", "__neg__"], [264, 2, 1, "", "add_channels"], [264, 2, 1, "", "add_proj"], [264, 2, 1, "", "add_reference_channels"], [264, 2, 1, "", "animate_topomap"], [264, 2, 1, "", "anonymize"], [264, 2, 1, "", "apply_baseline"], [264, 2, 1, "", "apply_function"], [264, 2, 1, "", "apply_hilbert"], [264, 2, 1, "", "apply_proj"], [264, 2, 1, "", "as_type"], [264, 3, 1, "", "ch_names"], [264, 3, 1, "", "compensation_grade"], [264, 2, 1, "", "compute_psd"], [264, 2, 1, "", "copy"], [264, 2, 1, "", "crop"], [264, 3, 1, "", "data"], [264, 2, 1, "", "decimate"], [264, 2, 1, "", "del_proj"], [264, 2, 1, "", "detrend"], [264, 2, 1, "", "drop_channels"], [264, 2, 1, "", "export"], [264, 2, 1, "", "filter"], [264, 2, 1, "", "get_channel_types"], [264, 2, 1, "", "get_data"], [264, 2, 1, "", "get_montage"], [264, 2, 1, "", "get_peak"], [264, 2, 1, "", "interpolate_bads"], [264, 3, 1, "", "kind"], [264, 2, 1, "", "pick"], [264, 2, 1, "", "pick_channels"], [264, 2, 1, "", "pick_types"], [264, 2, 1, "", "plot"], [264, 2, 1, "", "plot_field"], [264, 2, 1, "", "plot_image"], [264, 2, 1, "", "plot_joint"], [264, 2, 1, "", "plot_projs_topomap"], [264, 2, 1, "", "plot_psd"], [264, 2, 1, "", "plot_psd_topo"], [264, 2, 1, "", "plot_psd_topomap"], [264, 2, 1, "", "plot_sensors"], [264, 2, 1, "", "plot_topo"], [264, 2, 1, "", "plot_topomap"], [264, 2, 1, "", "plot_white"], [264, 3, 1, "", "proj"], [264, 2, 1, "", "rename_channels"], [264, 2, 1, "", "reorder_channels"], [264, 2, 1, "", "resample"], [264, 2, 1, "", "save"], [264, 2, 1, "", "savgol_filter"], [264, 2, 1, "", "set_channel_types"], [264, 2, 1, "", "set_eeg_reference"], [264, 2, 1, "", "set_meas_date"], [264, 2, 1, "", "set_montage"], [264, 2, 1, "", "shift_time"], [264, 2, 1, "", "time_as_index"], [264, 3, 1, "", "times"], [264, 3, 1, "", "tmax"], [264, 3, 1, "", "tmin"], [264, 2, 1, "", "to_data_frame"]], "mne.EvokedArray": [[265, 2, 1, "", "__contains__"], [265, 2, 1, "", "__neg__"], [265, 2, 1, "", "add_channels"], [265, 2, 1, "", "add_proj"], [265, 2, 1, "", "add_reference_channels"], [265, 2, 1, "", "animate_topomap"], [265, 2, 1, "", "anonymize"], [265, 2, 1, "", "apply_baseline"], [265, 2, 1, "", "apply_function"], [265, 2, 1, "", "apply_hilbert"], [265, 2, 1, "", "apply_proj"], [265, 2, 1, "", "as_type"], [265, 3, 1, "", "ch_names"], [265, 3, 1, "", "compensation_grade"], [265, 2, 1, "", "compute_psd"], [265, 2, 1, "", "copy"], [265, 2, 1, "", "crop"], [265, 3, 1, "", "data"], [265, 2, 1, "", "decimate"], [265, 2, 1, "", "del_proj"], [265, 2, 1, "", "detrend"], [265, 2, 1, "", "drop_channels"], [265, 2, 1, "", "export"], [265, 2, 1, "", "filter"], [265, 2, 1, "", "get_channel_types"], [265, 2, 1, "", "get_data"], [265, 2, 1, "", "get_montage"], [265, 2, 1, "", "get_peak"], [265, 2, 1, "", "interpolate_bads"], [265, 3, 1, "", "kind"], [265, 2, 1, "", "pick"], [265, 2, 1, "", "pick_channels"], [265, 2, 1, "", "pick_types"], [265, 2, 1, "", "plot"], [265, 2, 1, "", "plot_field"], [265, 2, 1, "", "plot_image"], [265, 2, 1, "", "plot_joint"], [265, 2, 1, "", "plot_projs_topomap"], [265, 2, 1, "", "plot_psd"], [265, 2, 1, "", "plot_psd_topo"], [265, 2, 1, "", "plot_psd_topomap"], [265, 2, 1, "", "plot_sensors"], [265, 2, 1, "", "plot_topo"], [265, 2, 1, "", "plot_topomap"], [265, 2, 1, "", "plot_white"], [265, 3, 1, "", "proj"], [265, 2, 1, "", "rename_channels"], [265, 2, 1, "", "reorder_channels"], [265, 2, 1, "", "resample"], [265, 2, 1, "", "save"], [265, 2, 1, "", "savgol_filter"], [265, 2, 1, "", "set_channel_types"], [265, 2, 1, "", "set_eeg_reference"], [265, 2, 1, "", "set_meas_date"], [265, 2, 1, "", "set_montage"], [265, 2, 1, "", "shift_time"], [265, 2, 1, "", "time_as_index"], [265, 3, 1, "", "times"], [265, 3, 1, "", "tmax"], [265, 3, 1, "", "tmin"], [265, 2, 1, "", "to_data_frame"]], "mne.Forward": [[266, 2, 1, "", "copy"], [266, 2, 1, "", "pick_channels"]], "mne.Info": [[267, 2, 1, "", "__contains__"], [267, 2, 1, "", "__getitem__"], [267, 2, 1, "", "__iter__"], [267, 2, 1, "", "__len__"], [267, 2, 1, "", "clear"], [267, 3, 1, "", "compensation_grade"], [267, 2, 1, "", "copy"], [267, 2, 1, "", "fromkeys"], [267, 2, 1, "", "get"], [267, 2, 1, "", "get_channel_types"], [267, 2, 1, "", "get_montage"], [267, 2, 1, "", "items"], [267, 2, 1, "", "keys"], [267, 2, 1, "", "normalize_proj"], [267, 2, 1, "", "pop"], [267, 2, 1, "", "popitem"], [267, 2, 1, "", "save"], [267, 2, 1, "", "set_montage"], [267, 2, 1, "", "setdefault"], [267, 2, 1, "", "update"], [267, 2, 1, "", "values"]], "mne.Label": [[268, 2, 1, "", "__add__"], [268, 2, 1, "", "__len__"], [268, 2, 1, "", "__sub__"], [268, 2, 1, "", "center_of_mass"], [268, 2, 1, "", "compute_area"], [268, 2, 1, "", "copy"], [268, 2, 1, "", "distances_to_outside"], [268, 2, 1, "", "fill"], [268, 2, 1, "", "get_tris"], [268, 2, 1, "", "get_vertices_used"], [268, 2, 1, "", "morph"], [268, 2, 1, "", "restrict"], [268, 2, 1, "", "save"], [268, 2, 1, "", "smooth"], [268, 2, 1, "", "split"]], "mne.MixedSourceEstimate": [[269, 2, 1, "", "__add__"], [269, 2, 1, "", "__div__"], [269, 2, 1, "", "__mul__"], [269, 2, 1, "", "__neg__"], [269, 2, 1, "", "__sub__"], [269, 2, 1, "", "apply_baseline"], [269, 2, 1, "", "bin"], [269, 2, 1, "", "copy"], [269, 2, 1, "", "crop"], [269, 3, 1, "", "data"], [269, 2, 1, "", "decimate"], [269, 2, 1, "", "extract_label_time_course"], [269, 2, 1, "", "get_peak"], [269, 2, 1, "", "mean"], [269, 2, 1, "", "plot"], [269, 2, 1, "", "resample"], [269, 2, 1, "", "save"], [269, 3, 1, "", "sfreq"], [269, 3, 1, "", "shape"], [269, 2, 1, "", "shift_time"], [269, 2, 1, "", "sqrt"], [269, 2, 1, "", "sum"], [269, 2, 1, "", "surface"], [269, 2, 1, "", "time_as_index"], [269, 3, 1, "", "times"], [269, 3, 1, "", "tmax"], [269, 3, 1, "", "tmin"], [269, 2, 1, "", "to_data_frame"], [269, 2, 1, "", "transform"], [269, 2, 1, "", "transform_data"], [269, 3, 1, "", "tstep"], [269, 2, 1, "", "volume"]], "mne.MixedVectorSourceEstimate": [[270, 2, 1, "", "__add__"], [270, 2, 1, "", "__div__"], [270, 2, 1, "", "__mul__"], [270, 2, 1, "", "__neg__"], [270, 2, 1, "", "__sub__"], [270, 2, 1, "", "apply_baseline"], [270, 2, 1, "", "bin"], [270, 2, 1, "", "copy"], [270, 2, 1, "", "crop"], [270, 3, 1, "", "data"], [270, 2, 1, "", "decimate"], [270, 2, 1, "", "extract_label_time_course"], [270, 2, 1, "", "get_peak"], [270, 2, 1, "", "magnitude"], [270, 2, 1, "", "mean"], [270, 2, 1, "", "plot"], [270, 2, 1, "", "project"], [270, 2, 1, "", "resample"], [270, 2, 1, "", "save"], [270, 3, 1, "", "sfreq"], [270, 3, 1, "", "shape"], [270, 2, 1, "", "shift_time"], [270, 2, 1, "", "sqrt"], [270, 2, 1, "", "sum"], [270, 2, 1, "", "surface"], [270, 2, 1, "", "time_as_index"], [270, 3, 1, "", "times"], [270, 3, 1, "", "tmax"], [270, 3, 1, "", "tmin"], [270, 2, 1, "", "to_data_frame"], [270, 2, 1, "", "transform"], [270, 2, 1, "", "transform_data"], [270, 3, 1, "", "tstep"], [270, 2, 1, "", "volume"]], "mne.Projection": [[271, 2, 1, "", "__contains__"], [271, 2, 1, "", "__getitem__"], [271, 2, 1, "", "__iter__"], [271, 2, 1, "", "__len__"], [271, 2, 1, "", "clear"], [271, 2, 1, "", "copy"], [271, 2, 1, "", "fromkeys"], [271, 2, 1, "", "get"], [271, 2, 1, "", "items"], [271, 2, 1, "", "keys"], [271, 2, 1, "", "plot_topomap"], [271, 2, 1, "", "pop"], [271, 2, 1, "", "popitem"], [271, 2, 1, "", "setdefault"], [271, 2, 1, "", "update"], [271, 2, 1, "", "values"]], "mne.Report": [[272, 2, 1, "", "__len__"], [272, 2, 1, "", "add_bem"], [272, 2, 1, "", "add_code"], [272, 2, 1, "", "add_covariance"], [272, 2, 1, "", "add_custom_css"], [272, 2, 1, "", "add_custom_js"], [272, 2, 1, "", "add_epochs"], [272, 2, 1, "", "add_events"], [272, 2, 1, "", "add_evokeds"], [272, 2, 1, "", "add_figure"], [272, 2, 1, "", "add_forward"], [272, 2, 1, "", "add_html"], [272, 2, 1, "", "add_ica"], [272, 2, 1, "", "add_image"], [272, 2, 1, "", "add_inverse_operator"], [272, 2, 1, "", "add_projs"], [272, 2, 1, "", "add_raw"], [272, 2, 1, "", "add_stc"], [272, 2, 1, "", "add_sys_info"], [272, 2, 1, "", "add_trans"], [272, 3, 1, "", "html"], [272, 2, 1, "", "parse_folder"], [272, 2, 1, "", "remove"], [272, 2, 1, "", "save"], [272, 3, 1, "", "tags"]], "mne.SourceEstimate": [[273, 2, 1, "", "__add__"], [273, 2, 1, "", "__div__"], [273, 2, 1, "", "__mul__"], [273, 2, 1, "", "__neg__"], [273, 2, 1, "", "__sub__"], [273, 2, 1, "", "apply_baseline"], [273, 2, 1, "", "bin"], [273, 2, 1, "", "center_of_mass"], [273, 2, 1, "", "copy"], [273, 2, 1, "", "crop"], [273, 3, 1, "", "data"], [273, 2, 1, "", "decimate"], [273, 2, 1, "", "estimate_snr"], [273, 2, 1, "", "expand"], [273, 2, 1, "", "extract_label_time_course"], [273, 2, 1, "", "get_peak"], [273, 2, 1, "", "in_label"], [273, 3, 1, "", "lh_data"], [273, 3, 1, "", "lh_vertno"], [273, 2, 1, "", "mean"], [273, 2, 1, "", "plot"], [273, 2, 1, "", "resample"], [273, 3, 1, "", "rh_data"], [273, 3, 1, "", "rh_vertno"], [273, 2, 1, "", "save"], [273, 3, 1, "", "sfreq"], [273, 3, 1, "", "shape"], [273, 2, 1, "", "shift_time"], [273, 2, 1, "", "sqrt"], [273, 2, 1, "", "sum"], [273, 2, 1, "", "time_as_index"], [273, 3, 1, "", "times"], [273, 3, 1, "", "tmax"], [273, 3, 1, "", "tmin"], [273, 2, 1, "", "to_data_frame"], [273, 2, 1, "", "to_original_src"], [273, 2, 1, "", "transform"], [273, 2, 1, "", "transform_data"], [273, 3, 1, "", "tstep"]], "mne.SourceMorph": [[274, 2, 1, "", "apply"], [274, 2, 1, "", "compute_vol_morph_mat"], [274, 2, 1, "", "save"]], "mne.SourceSpaces": [[275, 2, 1, "", "__add__"], [275, 2, 1, "", "__getitem__"], [275, 2, 1, "", "copy"], [275, 2, 1, "", "export_volume"], [275, 2, 1, "", "plot"], [275, 2, 1, "", "save"]], "mne.VectorSourceEstimate": [[276, 2, 1, "", "__add__"], [276, 2, 1, "", "__div__"], [276, 2, 1, "", "__mul__"], [276, 2, 1, "", "__neg__"], [276, 2, 1, "", "__sub__"], [276, 2, 1, "", "apply_baseline"], [276, 2, 1, "", "bin"], [276, 2, 1, "", "copy"], [276, 2, 1, "", "crop"], [276, 3, 1, "", "data"], [276, 2, 1, "", "decimate"], [276, 2, 1, "", "expand"], [276, 2, 1, "", "extract_label_time_course"], [276, 2, 1, "", "get_peak"], [276, 2, 1, "", "in_label"], [276, 3, 1, "", "lh_data"], [276, 3, 1, "", "lh_vertno"], [276, 2, 1, "", "magnitude"], [276, 2, 1, "", "mean"], [276, 2, 1, "", "plot"], [276, 2, 1, "", "project"], [276, 2, 1, "", "resample"], [276, 3, 1, "", "rh_data"], [276, 3, 1, "", "rh_vertno"], [276, 2, 1, "", "save"], [276, 3, 1, "", "sfreq"], [276, 3, 1, "", "shape"], [276, 2, 1, "", "shift_time"], [276, 2, 1, "", "sqrt"], [276, 2, 1, "", "sum"], [276, 2, 1, "", "time_as_index"], [276, 3, 1, "", "times"], [276, 3, 1, "", "tmax"], [276, 3, 1, "", "tmin"], [276, 2, 1, "", "to_data_frame"], [276, 2, 1, "", "to_original_src"], [276, 2, 1, "", "transform"], [276, 2, 1, "", "transform_data"], [276, 3, 1, "", "tstep"]], "mne.VolSourceEstimate": [[277, 2, 1, "", "__add__"], [277, 2, 1, "", "__div__"], [277, 2, 1, "", "__mul__"], [277, 2, 1, "", "__neg__"], [277, 2, 1, "", "__sub__"], [277, 2, 1, "", "apply_baseline"], [277, 2, 1, "", "as_volume"], [277, 2, 1, "", "bin"], [277, 2, 1, "", "copy"], [277, 2, 1, "", "crop"], [277, 3, 1, "", "data"], [277, 2, 1, "", "decimate"], [277, 2, 1, "", "extract_label_time_course"], [277, 2, 1, "", "get_peak"], [277, 2, 1, "", "in_label"], [277, 2, 1, "", "mean"], [277, 2, 1, "", "plot"], [277, 2, 1, "", "plot_3d"], [277, 2, 1, "", "resample"], [277, 2, 1, "", "save"], [277, 2, 1, "", "save_as_volume"], [277, 3, 1, "", "sfreq"], [277, 3, 1, "", "shape"], [277, 2, 1, "", "shift_time"], [277, 2, 1, "", "sqrt"], [277, 2, 1, "", "sum"], [277, 2, 1, "", "time_as_index"], [277, 3, 1, "", "times"], [277, 3, 1, "", "tmax"], [277, 3, 1, "", "tmin"], [277, 2, 1, "", "to_data_frame"], [277, 2, 1, "", "transform"], [277, 2, 1, "", "transform_data"], [277, 3, 1, "", "tstep"]], "mne.VolVectorSourceEstimate": [[278, 2, 1, "", "__add__"], [278, 2, 1, "", "__div__"], [278, 2, 1, "", "__mul__"], [278, 2, 1, "", "__neg__"], [278, 2, 1, "", "__sub__"], [278, 2, 1, "", "apply_baseline"], [278, 2, 1, "", "as_volume"], [278, 2, 1, "", "bin"], [278, 2, 1, "", "copy"], [278, 2, 1, "", "crop"], [278, 3, 1, "", "data"], [278, 2, 1, "", "decimate"], [278, 2, 1, "", "extract_label_time_course"], [278, 2, 1, "", "get_peak"], [278, 2, 1, "", "in_label"], [278, 2, 1, "", "magnitude"], [278, 2, 1, "", "mean"], [278, 2, 1, "", "plot"], [278, 2, 1, "", "plot_3d"], [278, 2, 1, "", "project"], [278, 2, 1, "", "resample"], [278, 2, 1, "", "save"], [278, 2, 1, "", "save_as_volume"], [278, 3, 1, "", "sfreq"], [278, 3, 1, "", "shape"], [278, 2, 1, "", "shift_time"], [278, 2, 1, "", "sqrt"], [278, 2, 1, "", "sum"], [278, 2, 1, "", "time_as_index"], [278, 3, 1, "", "times"], [278, 3, 1, "", "tmax"], [278, 3, 1, "", "tmin"], [278, 2, 1, "", "to_data_frame"], [278, 2, 1, "", "transform"], [278, 2, 1, "", "transform_data"], [278, 3, 1, "", "tstep"]], "mne.baseline": [[285, 4, 1, "", "rescale"]], "mne.beamformer": [[286, 1, 1, "", "Beamformer"], [287, 4, 1, "", "apply_dics"], [288, 4, 1, "", "apply_dics_csd"], [289, 4, 1, "", "apply_dics_epochs"], [290, 4, 1, "", "apply_dics_tfr_epochs"], [291, 4, 1, "", "apply_lcmv"], [292, 4, 1, "", "apply_lcmv_cov"], [293, 4, 1, "", "apply_lcmv_epochs"], [294, 4, 1, "", "apply_lcmv_raw"], [295, 4, 1, "", "make_dics"], [296, 4, 1, "", "make_lcmv"], [297, 4, 1, "", "make_lcmv_resolution_matrix"], [298, 4, 1, "", "rap_music"], [299, 4, 1, "", "read_beamformer"]], "mne.beamformer.Beamformer": [[286, 2, 1, "", "__contains__"], [286, 2, 1, "", "__getitem__"], [286, 2, 1, "", "__iter__"], [286, 2, 1, "", "__len__"], [286, 2, 1, "", "clear"], [286, 2, 1, "", "copy"], [286, 2, 1, "", "fromkeys"], [286, 2, 1, "", "get"], [286, 2, 1, "", "items"], [286, 2, 1, "", "keys"], [286, 2, 1, "", "pop"], [286, 2, 1, "", "popitem"], [286, 2, 1, "", "save"], [286, 2, 1, "", "setdefault"], [286, 2, 1, "", "update"], [286, 2, 1, "", "values"]], "mne.bem": [[300, 1, 1, "", "ConductorModel"], [301, 4, 1, "", "convert_flash_mris"], [302, 4, 1, "", "distance_to_bem"], [303, 4, 1, "", "fit_sphere_to_headshape"], [304, 4, 1, "", "get_fitting_dig"], [305, 4, 1, "", "make_flash_bem"], [306, 4, 1, "", "make_scalp_surfaces"], [307, 4, 1, "", "make_watershed_bem"]], "mne.bem.ConductorModel": [[300, 2, 1, "", "__contains__"], [300, 2, 1, "", "__getitem__"], [300, 2, 1, "", "__iter__"], [300, 2, 1, "", "__len__"], [300, 2, 1, "", "clear"], [300, 2, 1, "", "copy"], [300, 2, 1, "", "fromkeys"], [300, 2, 1, "", "get"], [300, 2, 1, "", "items"], [300, 2, 1, "", "keys"], [300, 2, 1, "", "pop"], [300, 2, 1, "", "popitem"], [300, 3, 1, "", "radius"], [300, 2, 1, "", "setdefault"], [300, 2, 1, "", "update"], [300, 2, 1, "", "values"]], "mne.channels": [[310, 1, 1, "", "DigMontage"], [311, 1, 1, "", "Layout"], [312, 4, 1, "", "combine_channels"], [313, 4, 1, "", "compute_dev_head_t"], [314, 4, 1, "", "compute_native_head_t"], [315, 4, 1, "", "equalize_channels"], [316, 4, 1, "", "find_ch_adjacency"], [317, 4, 1, "", "find_layout"], [318, 4, 1, "", "fix_mag_coil_types"], [319, 4, 1, "", "generate_2d_layout"], [320, 4, 1, "", "get_builtin_ch_adjacencies"], [321, 4, 1, "", "get_builtin_montages"], [322, 4, 1, "", "make_1020_channel_selections"], [323, 4, 1, "", "make_dig_montage"], [324, 4, 1, "", "make_eeg_layout"], [325, 4, 1, "", "make_grid_layout"], [326, 4, 1, "", "make_standard_montage"], [327, 4, 1, "", "read_ch_adjacency"], [328, 4, 1, "", "read_custom_montage"], [329, 4, 1, "", "read_dig_captrak"], [330, 4, 1, "", "read_dig_dat"], [331, 4, 1, "", "read_dig_egi"], [332, 4, 1, "", "read_dig_fif"], [333, 4, 1, "", "read_dig_hpts"], [334, 4, 1, "", "read_dig_localite"], [335, 4, 1, "", "read_dig_polhemus_isotrak"], [336, 4, 1, "", "read_layout"], [337, 4, 1, "", "read_polhemus_fastscan"], [338, 4, 1, "", "rename_channels"]], "mne.channels.DigMontage": [[310, 2, 1, "", "__add__"], [310, 2, 1, "", "add_estimated_fiducials"], [310, 2, 1, "", "add_mni_fiducials"], [310, 2, 1, "", "apply_trans"], [310, 2, 1, "", "copy"], [310, 2, 1, "", "get_positions"], [310, 2, 1, "", "plot"], [310, 2, 1, "", "remove_fiducials"], [310, 2, 1, "", "rename_channels"], [310, 2, 1, "", "save"]], "mne.channels.Layout": [[311, 2, 1, "", "plot"], [311, 2, 1, "", "save"]], "mne.chpi": [[339, 4, 1, "", "compute_chpi_amplitudes"], [340, 4, 1, "", "compute_chpi_locs"], [341, 4, 1, "", "compute_chpi_snr"], [342, 4, 1, "", "compute_head_pos"], [343, 4, 1, "", "extract_chpi_locs_ctf"], [344, 4, 1, "", "extract_chpi_locs_kit"], [345, 4, 1, "", "filter_chpi"], [346, 4, 1, "", "get_active_chpi"], [347, 4, 1, "", "get_chpi_info"], [348, 4, 1, "", "head_pos_to_trans_rot_t"], [349, 4, 1, "", "read_head_pos"], [350, 4, 1, "", "write_head_pos"]], "mne.coreg": [[363, 1, 1, "", "Coregistration"], [364, 4, 1, "", "estimate_head_mri_t"], [365, 4, 1, "", "get_mni_fiducials"]], "mne.coreg.Coregistration": [[363, 2, 1, "", "compute_dig_mri_distances"], [363, 2, 1, "", "fit_fiducials"], [363, 2, 1, "", "fit_icp"], [363, 2, 1, "", "omit_head_shape_points"], [363, 2, 1, "", "reset"], [363, 3, 1, "", "scale"], [363, 2, 1, "", "set_fid_match"], [363, 2, 1, "", "set_grow_hair"], [363, 2, 1, "", "set_rotation"], [363, 2, 1, "", "set_scale"], [363, 2, 1, "", "set_scale_mode"], [363, 2, 1, "", "set_translation"], [363, 3, 1, "", "trans"]], "mne.cov": [[367, 4, 1, "", "compute_whitener"], [368, 4, 1, "", "prepare_noise_cov"], [369, 4, 1, "", "regularize"]], "mne.cuda": [[372, 4, 1, "", "get_cuda_memory"], [373, 4, 1, "", "init_cuda"], [374, 4, 1, "", "set_cuda_device"]], "mne.datasets.brainstorm.bst_auditory": [[375, 4, 1, "", "data_path"]], "mne.datasets.brainstorm.bst_raw": [[376, 4, 1, "", "data_path"]], "mne.datasets.brainstorm.bst_resting": [[377, 4, 1, "", "data_path"]], "mne.datasets.eegbci": [[378, 4, 1, "", "load_data"], [379, 4, 1, "", "standardize"]], "mne.datasets.epilepsy_ecog": [[380, 4, 1, "", "data_path"]], "mne.datasets.erp_core": [[381, 4, 1, "", "data_path"]], "mne.datasets": [[382, 4, 1, "", "fetch_aparc_sub_parcellation"], [383, 4, 1, "", "fetch_dataset"], [384, 4, 1, "", "fetch_fsaverage"], [385, 4, 1, "", "fetch_hcp_mmp_parcellation"], [386, 4, 1, "", "fetch_infant_template"], [387, 4, 1, "", "fetch_phantom"], [389, 4, 1, "", "has_dataset"]], "mne.datasets.fnirs_motor": [[388, 4, 1, "", "data_path"]], "mne.datasets.hf_sef": [[390, 4, 1, "", "data_path"]], "mne.datasets.kiloword": [[391, 4, 1, "", "data_path"]], "mne.datasets.limo": [[392, 4, 1, "", "load_data"]], "mne.datasets.misc": [[393, 4, 1, "", "data_path"]], "mne.datasets.mtrf": [[394, 4, 1, "", "data_path"]], "mne.datasets.multimodal": [[395, 4, 1, "", "data_path"]], "mne.datasets.opm": [[396, 4, 1, "", "data_path"]], "mne.datasets.phantom_4dbti": [[397, 4, 1, "", "data_path"]], "mne.datasets.refmeg_noise": [[398, 4, 1, "", "data_path"]], "mne.datasets.sample": [[399, 4, 1, "", "data_path"]], "mne.datasets.sleep_physionet.age": [[400, 4, 1, "", "fetch_data"]], "mne.datasets.sleep_physionet.temazepam": [[401, 4, 1, "", "fetch_data"]], "mne.datasets.somato": [[402, 4, 1, "", "data_path"]], "mne.datasets.spm_face": [[403, 4, 1, "", "data_path"]], "mne.datasets.ssvep": [[404, 4, 1, "", "data_path"]], "mne.datasets.ucl_opm_auditory": [[405, 4, 1, "", "data_path"]], "mne.datasets.visual_92_categories": [[406, 4, 1, "", "data_path"]], "mne.decoding": [[408, 1, 1, "", "CSP"], [409, 1, 1, "", "EMS"], [410, 1, 1, "", "FilterEstimator"], [411, 1, 1, "", "GeneralizingEstimator"], [412, 1, 1, "", "LinearModel"], [413, 1, 1, "", "PSDEstimator"], [414, 1, 1, "", "ReceptiveField"], [415, 1, 1, "", "SPoC"], [416, 1, 1, "", "SSD"], [417, 1, 1, "", "Scaler"], [418, 1, 1, "", "SlidingEstimator"], [419, 1, 1, "", "TemporalFilter"], [420, 1, 1, "", "TimeDelayingRidge"], [421, 1, 1, "", "TimeFrequency"], [422, 1, 1, "", "UnsupervisedSpatialFilter"], [423, 1, 1, "", "Vectorizer"], [424, 4, 1, "", "compute_ems"], [425, 4, 1, "", "cross_val_multiscore"], [426, 4, 1, "", "get_coef"]], "mne.decoding.CSP": [[408, 2, 1, "", "fit"], [408, 2, 1, "", "fit_transform"], [408, 2, 1, "", "get_params"], [408, 2, 1, "", "plot_filters"], [408, 2, 1, "", "plot_patterns"], [408, 2, 1, "", "set_params"], [408, 2, 1, "", "transform"]], "mne.decoding.EMS": [[409, 2, 1, "", "fit"], [409, 2, 1, "", "fit_transform"], [409, 2, 1, "", "get_params"], [409, 2, 1, "", "set_params"], [409, 2, 1, "", "transform"]], "mne.decoding.FilterEstimator": [[410, 2, 1, "", "fit"], [410, 2, 1, "", "fit_transform"], [410, 2, 1, "", "transform"]], "mne.decoding.GeneralizingEstimator": [[411, 2, 1, "", "decision_function"], [411, 2, 1, "", "fit"], [411, 2, 1, "", "fit_transform"], [411, 2, 1, "", "get_params"], [411, 2, 1, "", "predict"], [411, 2, 1, "", "predict_proba"], [411, 2, 1, "", "score"], [411, 2, 1, "", "set_params"], [411, 2, 1, "", "transform"]], "mne.decoding.LinearModel": [[412, 2, 1, "", "decision_function"], [412, 2, 1, "", "fit"], [412, 2, 1, "", "fit_transform"], [412, 2, 1, "", "get_params"], [412, 2, 1, "", "predict"], [412, 2, 1, "", "predict_proba"], [412, 2, 1, "", "score"], [412, 2, 1, "", "set_params"], [412, 2, 1, "", "transform"]], "mne.decoding.PSDEstimator": [[413, 2, 1, "", "fit"], [413, 2, 1, "", "fit_transform"], [413, 2, 1, "", "transform"]], "mne.decoding.ReceptiveField": [[414, 2, 1, "", "fit"], [414, 2, 1, "", "get_params"], [414, 2, 1, "", "predict"], [414, 2, 1, "", "score"], [414, 2, 1, "", "set_params"]], "mne.decoding.SPoC": [[415, 2, 1, "", "fit"], [415, 2, 1, "", "fit_transform"], [415, 2, 1, "", "get_params"], [415, 2, 1, "", "plot_filters"], [415, 2, 1, "", "plot_patterns"], [415, 2, 1, "", "set_params"], [415, 2, 1, "", "transform"]], "mne.decoding.SSD": [[416, 2, 1, "", "apply"], [416, 2, 1, "", "fit"], [416, 2, 1, "", "fit_transform"], [416, 2, 1, "", "get_params"], [416, 2, 1, "", "get_spectral_ratio"], [416, 2, 1, "", "inverse_transform"], [416, 2, 1, "", "set_params"], [416, 2, 1, "", "transform"]], "mne.decoding.Scaler": [[417, 2, 1, "", "fit"], [417, 2, 1, "", "fit_transform"], [417, 2, 1, "", "get_params"], [417, 2, 1, "", "inverse_transform"], [417, 2, 1, "", "set_params"], [417, 2, 1, "", "transform"]], "mne.decoding.SlidingEstimator": [[418, 2, 1, "", "decision_function"], [418, 2, 1, "", "fit"], [418, 2, 1, "", "fit_transform"], [418, 2, 1, "", "get_params"], [418, 2, 1, "", "predict"], [418, 2, 1, "", "predict_proba"], [418, 2, 1, "", "score"], [418, 2, 1, "", "set_params"], [418, 2, 1, "", "transform"]], "mne.decoding.TemporalFilter": [[419, 2, 1, "", "fit"], [419, 2, 1, "", "fit_transform"], [419, 2, 1, "", "transform"]], "mne.decoding.TimeDelayingRidge": [[420, 2, 1, "", "fit"], [420, 2, 1, "", "get_params"], [420, 2, 1, "", "predict"], [420, 2, 1, "", "set_params"]], "mne.decoding.TimeFrequency": [[421, 2, 1, "", "fit"], [421, 2, 1, "", "fit_transform"], [421, 2, 1, "", "get_params"], [421, 2, 1, "", "set_params"], [421, 2, 1, "", "transform"]], "mne.decoding.UnsupervisedSpatialFilter": [[422, 2, 1, "", "fit"], [422, 2, 1, "", "fit_transform"], [422, 2, 1, "", "get_params"], [422, 2, 1, "", "inverse_transform"], [422, 2, 1, "", "set_params"], [422, 2, 1, "", "transform"]], "mne.decoding.Vectorizer": [[423, 2, 1, "", "fit"], [423, 2, 1, "", "fit_transform"], [423, 2, 1, "", "inverse_transform"], [423, 2, 1, "", "transform"]], "mne.dipole": [[428, 4, 1, "", "get_phantom_dipoles"]], "mne.epochs": [[429, 4, 1, "", "average_movements"], [430, 4, 1, "", "combine_event_ids"], [431, 4, 1, "", "equalize_epoch_counts"], [432, 4, 1, "", "make_metadata"]], "mne.event": [[434, 4, 1, "", "define_target_events"], [435, 4, 1, "", "match_event_names"], [436, 4, 1, "", "shift_time_events"]], "mne.export": [[438, 4, 1, "", "export_epochs"], [439, 4, 1, "", "export_evokeds"], [440, 4, 1, "", "export_evokeds_mff"], [441, 4, 1, "", "export_raw"]], "mne.filter": [[443, 4, 1, "", "construct_iir_filter"], [444, 4, 1, "", "create_filter"], [445, 4, 1, "", "estimate_ringing_samples"], [446, 4, 1, "", "filter_data"], [447, 4, 1, "", "notch_filter"], [448, 4, 1, "", "resample"]], "mne.forward": [[452, 4, 1, "", "compute_depth_prior"], [453, 4, 1, "", "compute_orient_prior"], [454, 4, 1, "", "restrict_forward_to_label"], [455, 4, 1, "", "restrict_forward_to_stc"]], "mne.gui": [[467, 4, 1, "", "coregistration"], [468, 4, 1, "", "locate_ieeg"]], "mne.inverse_sparse": [[471, 4, 1, "", "gamma_map"], [472, 4, 1, "", "make_stc_from_dipoles"], [473, 4, 1, "", "mixed_norm"], [474, 4, 1, "", "tf_mixed_norm"]], "mne.io": [[475, 1, 1, "", "BaseRaw"], [476, 1, 1, "", "Raw"], [477, 1, 1, "", "RawArray"], [478, 4, 1, "", "anonymize_info"], [867, 0, 0, "-", "kit"], [480, 4, 1, "", "read_fiducials"], [481, 4, 1, "", "read_info"], [482, 4, 1, "", "read_raw"], [483, 4, 1, "", "read_raw_artemis123"], [484, 4, 1, "", "read_raw_bdf"], [485, 4, 1, "", "read_raw_boxy"], [486, 4, 1, "", "read_raw_brainvision"], [487, 4, 1, "", "read_raw_bti"], [488, 4, 1, "", "read_raw_cnt"], [489, 4, 1, "", "read_raw_ctf"], [490, 4, 1, "", "read_raw_curry"], [491, 4, 1, "", "read_raw_edf"], [492, 4, 1, "", "read_raw_eeglab"], [493, 4, 1, "", "read_raw_egi"], [494, 4, 1, "", "read_raw_eximia"], [495, 4, 1, "", "read_raw_fieldtrip"], [496, 4, 1, "", "read_raw_fif"], [497, 4, 1, "", "read_raw_fil"], [498, 4, 1, "", "read_raw_gdf"], [499, 4, 1, "", "read_raw_hitachi"], [500, 4, 1, "", "read_raw_kit"], [501, 4, 1, "", "read_raw_nedf"], [502, 4, 1, "", "read_raw_nicolet"], [503, 4, 1, "", "read_raw_nihon"], [504, 4, 1, "", "read_raw_nirx"], [505, 4, 1, "", "read_raw_persyst"], [506, 4, 1, "", "read_raw_snirf"], [507, 4, 1, "", "show_fiff"], [508, 4, 1, "", "write_fiducials"]], "mne.io.Raw": [[476, 2, 1, "", "__contains__"], [476, 2, 1, "", "__getitem__"], [476, 2, 1, "", "__len__"], [476, 3, 1, "", "acqparser"], [476, 2, 1, "", "add_channels"], [476, 2, 1, "", "add_events"], [476, 2, 1, "", "add_proj"], [476, 2, 1, "", "add_reference_channels"], [476, 3, 1, "", "annotations"], [476, 2, 1, "", "anonymize"], [476, 2, 1, "", "append"], [476, 2, 1, "", "apply_function"], [476, 2, 1, "", "apply_gradient_compensation"], [476, 2, 1, "", "apply_hilbert"], [476, 2, 1, "", "apply_proj"], [476, 3, 1, "", "ch_names"], [476, 2, 1, "", "close"], [476, 3, 1, "", "compensation_grade"], [476, 2, 1, "", "compute_psd"], [476, 2, 1, "", "copy"], [476, 2, 1, "", "crop"], [476, 2, 1, "", "crop_by_annotations"], [476, 2, 1, "", "decimate"], [476, 2, 1, "", "del_proj"], [476, 2, 1, "", "describe"], [476, 2, 1, "", "drop_channels"], [476, 2, 1, "", "export"], [476, 3, 1, "", "filenames"], [476, 2, 1, "", "filter"], [476, 3, 1, "", "first_samp"], [476, 3, 1, "", "first_time"], [476, 2, 1, "", "fix_mag_coil_types"], [476, 2, 1, "", "get_channel_types"], [476, 2, 1, "", "get_data"], [476, 2, 1, "", "get_montage"], [476, 2, 1, "", "interpolate_bads"], [476, 3, 1, "", "last_samp"], [476, 2, 1, "", "load_bad_channels"], [476, 2, 1, "", "load_data"], [476, 3, 1, "", "n_times"], [476, 2, 1, "", "notch_filter"], [476, 2, 1, "", "pick"], [476, 2, 1, "", "pick_channels"], [476, 2, 1, "", "pick_types"], [476, 2, 1, "", "plot"], [476, 2, 1, "", "plot_projs_topomap"], [476, 2, 1, "", "plot_psd"], [476, 2, 1, "", "plot_psd_topo"], [476, 2, 1, "", "plot_psd_topomap"], [476, 2, 1, "", "plot_sensors"], [476, 3, 1, "", "proj"], [476, 2, 1, "", "rename_channels"], [476, 2, 1, "", "reorder_channels"], [476, 2, 1, "", "resample"], [476, 2, 1, "", "save"], [476, 2, 1, "", "savgol_filter"], [476, 2, 1, "", "set_annotations"], [476, 2, 1, "", "set_channel_types"], [476, 2, 1, "", "set_eeg_reference"], [476, 2, 1, "", "set_meas_date"], [476, 2, 1, "", "set_montage"], [476, 2, 1, "", "shift_time"], [476, 2, 1, "", "time_as_index"], [476, 3, 1, "", "times"], [476, 3, 1, "", "tmax"], [476, 3, 1, "", "tmin"], [476, 2, 1, "", "to_data_frame"]], "mne.io.RawArray": [[477, 2, 1, "", "__contains__"], [477, 2, 1, "", "__getitem__"], [477, 2, 1, "", "__len__"], [477, 2, 1, "", "add_channels"], [477, 2, 1, "", "add_events"], [477, 2, 1, "", "add_proj"], [477, 2, 1, "", "add_reference_channels"], [477, 3, 1, "", "annotations"], [477, 2, 1, "", "anonymize"], [477, 2, 1, "", "append"], [477, 2, 1, "", "apply_function"], [477, 2, 1, "", "apply_gradient_compensation"], [477, 2, 1, "", "apply_hilbert"], [477, 2, 1, "", "apply_proj"], [477, 3, 1, "", "ch_names"], [477, 2, 1, "", "close"], [477, 3, 1, "", "compensation_grade"], [477, 2, 1, "", "compute_psd"], [477, 2, 1, "", "copy"], [477, 2, 1, "", "crop"], [477, 2, 1, "", "crop_by_annotations"], [477, 2, 1, "", "decimate"], [477, 2, 1, "", "del_proj"], [477, 2, 1, "", "describe"], [477, 2, 1, "", "drop_channels"], [477, 2, 1, "", "export"], [477, 3, 1, "", "filenames"], [477, 2, 1, "", "filter"], [477, 3, 1, "", "first_samp"], [477, 3, 1, "", "first_time"], [477, 2, 1, "", "get_channel_types"], [477, 2, 1, "", "get_data"], [477, 2, 1, "", "get_montage"], [477, 2, 1, "", "interpolate_bads"], [477, 3, 1, "", "last_samp"], [477, 2, 1, "", "load_bad_channels"], [477, 2, 1, "", "load_data"], [477, 3, 1, "", "n_times"], [477, 2, 1, "", "notch_filter"], [477, 2, 1, "", "pick"], [477, 2, 1, "", "pick_channels"], [477, 2, 1, "", "pick_types"], [477, 2, 1, "", "plot"], [477, 2, 1, "", "plot_projs_topomap"], [477, 2, 1, "", "plot_psd"], [477, 2, 1, "", "plot_psd_topo"], [477, 2, 1, "", "plot_psd_topomap"], [477, 2, 1, "", "plot_sensors"], [477, 3, 1, "", "proj"], [477, 2, 1, "", "rename_channels"], [477, 2, 1, "", "reorder_channels"], [477, 2, 1, "", "resample"], [477, 2, 1, "", "save"], [477, 2, 1, "", "savgol_filter"], [477, 2, 1, "", "set_annotations"], [477, 2, 1, "", "set_channel_types"], [477, 2, 1, "", "set_eeg_reference"], [477, 2, 1, "", "set_meas_date"], [477, 2, 1, "", "set_montage"], [477, 2, 1, "", "shift_time"], [477, 2, 1, "", "time_as_index"], [477, 3, 1, "", "times"], [477, 3, 1, "", "tmax"], [477, 3, 1, "", "tmin"], [477, 2, 1, "", "to_data_frame"]], "mne.io.kit": [[479, 4, 1, "", "read_mrk"]], "mne.label": [[509, 4, 1, "", "select_sources"]], "mne.minimum_norm": [[522, 1, 1, "", "InverseOperator"], [523, 4, 1, "", "apply_inverse"], [524, 4, 1, "", "apply_inverse_cov"], [525, 4, 1, "", "apply_inverse_epochs"], [526, 4, 1, "", "apply_inverse_raw"], [527, 4, 1, "", "apply_inverse_tfr_epochs"], [528, 4, 1, "", "compute_rank_inverse"], [529, 4, 1, "", "compute_source_psd"], [530, 4, 1, "", "compute_source_psd_epochs"], [531, 4, 1, "", "estimate_snr"], [532, 4, 1, "", "get_cross_talk"], [533, 4, 1, "", "get_point_spread"], [534, 4, 1, "", "make_inverse_operator"], [535, 4, 1, "", "make_inverse_resolution_matrix"], [536, 4, 1, "", "prepare_inverse_operator"], [537, 4, 1, "", "read_inverse_operator"], [538, 4, 1, "", "resolution_metrics"], [539, 4, 1, "", "source_band_induced_power"], [540, 4, 1, "", "source_induced_power"], [541, 4, 1, "", "write_inverse_operator"]], "mne.minimum_norm.InverseOperator": [[522, 2, 1, "", "__contains__"], [522, 2, 1, "", "__getitem__"], [522, 2, 1, "", "__iter__"], [522, 2, 1, "", "__len__"], [522, 2, 1, "", "clear"], [522, 2, 1, "", "copy"], [522, 2, 1, "", "fromkeys"], [522, 2, 1, "", "get"], [522, 2, 1, "", "items"], [522, 2, 1, "", "keys"], [522, 2, 1, "", "pop"], [522, 2, 1, "", "popitem"], [522, 2, 1, "", "setdefault"], [522, 2, 1, "", "update"], [522, 2, 1, "", "values"]], "mne.preprocessing": [[555, 1, 1, "", "EOGRegression"], [556, 1, 1, "", "ICA"], [557, 1, 1, "", "Xdawn"], [558, 4, 1, "", "annotate_amplitude"], [559, 4, 1, "", "annotate_break"], [560, 4, 1, "", "annotate_movement"], [561, 4, 1, "", "annotate_muscle_zscore"], [562, 4, 1, "", "annotate_nan"], [563, 4, 1, "", "compute_average_dev_head_t"], [564, 4, 1, "", "compute_bridged_electrodes"], [565, 4, 1, "", "compute_current_source_density"], [566, 4, 1, "", "compute_fine_calibration"], [567, 4, 1, "", "compute_maxwell_basis"], [568, 4, 1, "", "compute_proj_ecg"], [569, 4, 1, "", "compute_proj_eog"], [570, 4, 1, "", "corrmap"], [571, 4, 1, "", "cortical_signal_suppression"], [572, 4, 1, "", "create_ecg_epochs"], [573, 4, 1, "", "create_eog_epochs"], [574, 4, 1, "", "equalize_bads"], [575, 4, 1, "", "find_bad_channels_maxwell"], [576, 4, 1, "", "find_ecg_events"], [577, 4, 1, "", "find_eog_events"], [578, 4, 1, "", "fix_stim_artifact"], [579, 4, 1, "", "ica_find_ecg_events"], [580, 4, 1, "", "ica_find_eog_events"], [865, 0, 0, "-", "ieeg"], [582, 4, 1, "", "infomax"], [583, 4, 1, "", "interpolate_bridged_electrodes"], [584, 4, 1, "", "maxwell_filter"], [585, 4, 1, "", "maxwell_filter_prepare_emptyroom"], [865, 0, 0, "-", "nirs"], [592, 4, 1, "", "oversampled_temporal_projection"], [593, 4, 1, "", "peak_finder"], [594, 4, 1, "", "read_eog_regression"], [595, 4, 1, "", "read_fine_calibration"], [596, 4, 1, "", "read_ica"], [597, 4, 1, "", "read_ica_eeglab"], [598, 4, 1, "", "realign_raw"], [599, 4, 1, "", "regress_artifact"], [600, 4, 1, "", "write_fine_calibration"]], "mne.preprocessing.EOGRegression": [[555, 2, 1, "", "apply"], [555, 2, 1, "", "fit"], [555, 2, 1, "", "plot"], [555, 2, 1, "", "save"]], "mne.preprocessing.ICA": [[556, 2, 1, "", "__contains__"], [556, 2, 1, "", "apply"], [556, 3, 1, "", "compensation_grade"], [556, 2, 1, "", "copy"], [556, 2, 1, "", "find_bads_ecg"], [556, 2, 1, "", "find_bads_eog"], [556, 2, 1, "", "find_bads_muscle"], [556, 2, 1, "", "find_bads_ref"], [556, 2, 1, "", "fit"], [556, 2, 1, "", "get_channel_types"], [556, 2, 1, "", "get_components"], [556, 2, 1, "", "get_explained_variance_ratio"], [556, 2, 1, "", "get_sources"], [556, 2, 1, "", "plot_components"], [556, 2, 1, "", "plot_overlay"], [556, 2, 1, "", "plot_properties"], [556, 2, 1, "", "plot_scores"], [556, 2, 1, "", "plot_sources"], [556, 2, 1, "", "save"], [556, 2, 1, "", "score_sources"]], "mne.preprocessing.Xdawn": [[557, 2, 1, "", "apply"], [557, 2, 1, "", "fit"], [557, 2, 1, "", "fit_transform"], [557, 2, 1, "", "get_params"], [557, 2, 1, "", "inverse_transform"], [557, 2, 1, "", "set_params"], [557, 2, 1, "", "transform"]], "mne.preprocessing.ieeg": [[581, 4, 1, "", "project_sensors_onto_brain"]], "mne.preprocessing.nirs": [[586, 4, 1, "", "beer_lambert_law"], [587, 4, 1, "", "optical_density"], [588, 4, 1, "", "scalp_coupling_index"], [589, 4, 1, "", "short_channels"], [590, 4, 1, "", "source_detector_distances"], [591, 4, 1, "", "temporal_derivative_distribution_repair"]], "mne.simulation": [[646, 1, 1, "", "SourceSimulator"], [647, 4, 1, "", "add_chpi"], [648, 4, 1, "", "add_ecg"], [649, 4, 1, "", "add_eog"], [650, 4, 1, "", "add_noise"], [871, 0, 0, "-", "metrics"], [659, 4, 1, "", "select_source_in_label"], [660, 4, 1, "", "simulate_evoked"], [661, 4, 1, "", "simulate_raw"], [662, 4, 1, "", "simulate_sparse_stc"], [663, 4, 1, "", "simulate_stc"]], "mne.simulation.SourceSimulator": [[646, 2, 1, "", "__iter__"], [646, 2, 1, "", "add_data"], [646, 3, 1, "", "duration"], [646, 2, 1, "", "get_stc"], [646, 2, 1, "", "get_stim_channel"], [646, 3, 1, "", "n_times"]], "mne.simulation.metrics": [[651, 4, 1, "", "cosine_score"], [652, 4, 1, "", "f1_score"], [653, 4, 1, "", "peak_position_error"], [654, 4, 1, "", "precision_score"], [655, 4, 1, "", "recall_score"], [656, 4, 1, "", "region_localization_error"], [657, 4, 1, "", "roc_auc_score"], [658, 4, 1, "", "spatial_deviation_error"]], "mne.source_space": [[664, 4, 1, "", "compute_distance_to_sensors"], [665, 4, 1, "", "get_decimated_surfaces"]], "mne.stats": [[674, 4, 1, "", "bonferroni_correction"], [675, 4, 1, "", "bootstrap_confidence_interval"], [676, 4, 1, "", "combine_adjacency"], [677, 4, 1, "", "f_mway_rm"], [678, 4, 1, "", "f_oneway"], [679, 4, 1, "", "f_threshold_mway_rm"], [680, 4, 1, "", "fdr_correction"], [681, 4, 1, "", "linear_regression"], [682, 4, 1, "", "linear_regression_raw"], [683, 4, 1, "", "permutation_cluster_1samp_test"], [684, 4, 1, "", "permutation_cluster_test"], [685, 4, 1, "", "permutation_t_test"], [686, 4, 1, "", "spatio_temporal_cluster_1samp_test"], [687, 4, 1, "", "spatio_temporal_cluster_test"], [688, 4, 1, "", "summarize_clusters_stc"], [689, 4, 1, "", "ttest_1samp_no_p"], [690, 4, 1, "", "ttest_ind_no_p"]], "mne.surface": [[693, 4, 1, "", "complete_surface_info"], [694, 4, 1, "", "read_curvature"]], "mne.time_frequency": [[696, 1, 1, "", "AverageTFR"], [697, 1, 1, "", "CrossSpectralDensity"], [698, 1, 1, "", "EpochsSpectrum"], [699, 1, 1, "", "EpochsTFR"], [700, 1, 1, "", "Spectrum"], [701, 4, 1, "", "csd_array_fourier"], [702, 4, 1, "", "csd_array_morlet"], [703, 4, 1, "", "csd_array_multitaper"], [704, 4, 1, "", "csd_fourier"], [705, 4, 1, "", "csd_morlet"], [706, 4, 1, "", "csd_multitaper"], [707, 4, 1, "", "csd_tfr"], [708, 4, 1, "", "dpss_windows"], [709, 4, 1, "", "fit_iir_model_raw"], [710, 4, 1, "", "fwhm"], [711, 4, 1, "", "istft"], [712, 4, 1, "", "morlet"], [713, 4, 1, "", "pick_channels_csd"], [714, 4, 1, "", "psd_array_multitaper"], [715, 4, 1, "", "psd_array_welch"], [716, 4, 1, "", "read_csd"], [717, 4, 1, "", "read_spectrum"], [718, 4, 1, "", "read_tfrs"], [719, 4, 1, "", "stft"], [720, 4, 1, "", "stftfreq"], [874, 0, 0, "-", "tfr"], [723, 4, 1, "", "tfr_array_morlet"], [724, 4, 1, "", "tfr_array_multitaper"], [725, 4, 1, "", "tfr_array_stockwell"], [726, 4, 1, "", "tfr_morlet"], [727, 4, 1, "", "tfr_multitaper"], [728, 4, 1, "", "tfr_stockwell"], [729, 4, 1, "", "write_tfrs"]], "mne.time_frequency.AverageTFR": [[696, 2, 1, "", "__add__"], [696, 2, 1, "", "__contains__"], [696, 2, 1, "", "__mul__"], [696, 2, 1, "", "__sub__"], [696, 2, 1, "", "add_channels"], [696, 2, 1, "", "add_reference_channels"], [696, 2, 1, "", "apply_baseline"], [696, 3, 1, "", "ch_names"], [696, 3, 1, "", "compensation_grade"], [696, 2, 1, "", "copy"], [696, 2, 1, "", "crop"], [696, 2, 1, "", "decimate"], [696, 2, 1, "", "drop_channels"], [696, 2, 1, "", "get_channel_types"], [696, 2, 1, "", "pick"], [696, 2, 1, "", "pick_channels"], [696, 2, 1, "", "pick_types"], [696, 2, 1, "", "plot"], [696, 2, 1, "", "plot_joint"], [696, 2, 1, "", "plot_topo"], [696, 2, 1, "", "plot_topomap"], [696, 2, 1, "", "reorder_channels"], [696, 2, 1, "", "save"], [696, 2, 1, "", "shift_time"], [696, 2, 1, "", "time_as_index"], [696, 3, 1, "", "times"], [696, 3, 1, "", "tmax"], [696, 3, 1, "", "tmin"], [696, 2, 1, "", "to_data_frame"]], "mne.time_frequency.CrossSpectralDensity": [[697, 2, 1, "", "__getitem__"], [697, 2, 1, "", "__len__"], [697, 2, 1, "", "copy"], [697, 2, 1, "", "get_data"], [697, 2, 1, "", "mean"], [697, 3, 1, "", "n_channels"], [697, 2, 1, "", "pick_channels"], [697, 2, 1, "", "pick_frequency"], [697, 2, 1, "", "plot"], [697, 2, 1, "", "save"], [697, 2, 1, "", "sum"]], "mne.time_frequency.EpochsSpectrum": [[698, 2, 1, "", "__contains__"], [698, 2, 1, "", "__getitem__"], [698, 2, 1, "", "__iter__"], [698, 2, 1, "", "__len__"], [698, 2, 1, "", "add_channels"], [698, 2, 1, "", "add_reference_channels"], [698, 2, 1, "", "average"], [698, 3, 1, "", "compensation_grade"], [698, 2, 1, "", "copy"], [698, 2, 1, "", "drop_channels"], [698, 2, 1, "", "get_channel_types"], [698, 2, 1, "", "get_data"], [698, 3, 1, "", "metadata"], [698, 2, 1, "", "next"], [698, 2, 1, "", "pick"], [698, 2, 1, "", "pick_channels"], [698, 2, 1, "", "pick_types"], [698, 2, 1, "", "plot"], [698, 2, 1, "", "plot_topo"], [698, 2, 1, "", "plot_topomap"], [698, 2, 1, "", "reorder_channels"], [698, 2, 1, "", "save"], [698, 2, 1, "", "to_data_frame"], [698, 2, 1, "", "units"]], "mne.time_frequency.EpochsTFR": [[699, 2, 1, "", "__contains__"], [699, 2, 1, "", "__getitem__"], [699, 2, 1, "", "__iter__"], [699, 2, 1, "", "__len__"], [699, 2, 1, "", "add_channels"], [699, 2, 1, "", "add_reference_channels"], [699, 2, 1, "", "apply_baseline"], [699, 2, 1, "", "average"], [699, 3, 1, "", "ch_names"], [699, 3, 1, "", "compensation_grade"], [699, 2, 1, "", "copy"], [699, 2, 1, "", "crop"], [699, 2, 1, "", "decimate"], [699, 2, 1, "", "drop_channels"], [699, 2, 1, "", "get_channel_types"], [699, 3, 1, "", "metadata"], [699, 2, 1, "", "next"], [699, 2, 1, "", "pick"], [699, 2, 1, "", "pick_channels"], [699, 2, 1, "", "pick_types"], [699, 2, 1, "", "reorder_channels"], [699, 2, 1, "", "save"], [699, 2, 1, "", "shift_time"], [699, 2, 1, "", "time_as_index"], [699, 3, 1, "", "times"], [699, 3, 1, "", "tmax"], [699, 3, 1, "", "tmin"], [699, 2, 1, "", "to_data_frame"]], "mne.time_frequency.Spectrum": [[700, 2, 1, "", "__contains__"], [700, 2, 1, "", "__getitem__"], [700, 2, 1, "", "add_channels"], [700, 2, 1, "", "add_reference_channels"], [700, 3, 1, "", "compensation_grade"], [700, 2, 1, "", "copy"], [700, 2, 1, "", "drop_channels"], [700, 2, 1, "", "get_channel_types"], [700, 2, 1, "", "get_data"], [700, 2, 1, "", "pick"], [700, 2, 1, "", "pick_channels"], [700, 2, 1, "", "pick_types"], [700, 2, 1, "", "plot"], [700, 2, 1, "", "plot_topo"], [700, 2, 1, "", "plot_topomap"], [700, 2, 1, "", "reorder_channels"], [700, 2, 1, "", "save"], [700, 2, 1, "", "to_data_frame"], [700, 2, 1, "", "units"]], "mne.time_frequency.tfr": [[721, 4, 1, "", "cwt"], [722, 4, 1, "", "morlet"]], "mne.transforms": [[731, 1, 1, "", "Transform"], [732, 4, 1, "", "apply_volume_registration"], [733, 4, 1, "", "compute_volume_registration"], [734, 4, 1, "", "quat_to_rot"], [735, 4, 1, "", "read_ras_mni_t"], [736, 4, 1, "", "rot_to_quat"]], "mne.transforms.Transform": [[731, 2, 1, "", "__contains__"], [731, 2, 1, "", "__getitem__"], [731, 2, 1, "", "__iter__"], [731, 2, 1, "", "__len__"], [731, 2, 1, "", "clear"], [731, 2, 1, "", "copy"], [731, 3, 1, "", "from_str"], [731, 2, 1, "", "fromkeys"], [731, 2, 1, "", "get"], [731, 2, 1, "", "items"], [731, 2, 1, "", "keys"], [731, 2, 1, "", "pop"], [731, 2, 1, "", "popitem"], [731, 2, 1, "", "save"], [731, 2, 1, "", "setdefault"], [731, 3, 1, "", "to_str"], [731, 2, 1, "", "update"], [731, 2, 1, "", "values"]], "mne.utils": [[739, 1, 1, "", "deprecated"], [740, 4, 1, "", "warn"]], "mne.viz": [[743, 1, 1, "", "Brain"], [744, 1, 1, "", "ClickableImage"], [745, 1, 1, "", "Figure3D"], [746, 4, 1, "", "add_background_image"], [747, 4, 1, "", "centers_to_edges"], [748, 4, 1, "", "circular_layout"], [749, 4, 1, "", "close_3d_figure"], [750, 4, 1, "", "close_all_3d_figures"], [751, 4, 1, "", "compare_fiff"], [752, 4, 1, "", "create_3d_figure"], [753, 4, 1, "", "get_3d_backend"], [754, 4, 1, "", "get_brain_class"], [755, 4, 1, "", "get_browser_backend"], [756, 4, 1, "", "iter_topography"], [757, 4, 1, "", "link_brains"], [758, 4, 1, "", "mne_analyze_colormap"], [759, 4, 1, "", "plot_alignment"], [760, 4, 1, "", "plot_arrowmap"], [761, 4, 1, "", "plot_bem"], [762, 4, 1, "", "plot_brain_colorbar"], [763, 4, 1, "", "plot_bridged_electrodes"], [764, 4, 1, "", "plot_ch_adjacency"], [765, 4, 1, "", "plot_channel_labels_circle"], [766, 4, 1, "", "plot_chpi_snr"], [767, 4, 1, "", "plot_compare_evokeds"], [768, 4, 1, "", "plot_cov"], [769, 4, 1, "", "plot_csd"], [770, 4, 1, "", "plot_dipole_amplitudes"], [771, 4, 1, "", "plot_dipole_locations"], [772, 4, 1, "", "plot_drop_log"], [773, 4, 1, "", "plot_epochs"], [774, 4, 1, "", "plot_epochs_image"], [775, 4, 1, "", "plot_epochs_psd_topomap"], [776, 4, 1, "", "plot_events"], [777, 4, 1, "", "plot_evoked"], [778, 4, 1, "", "plot_evoked_field"], [779, 4, 1, "", "plot_evoked_image"], [780, 4, 1, "", "plot_evoked_joint"], [781, 4, 1, "", "plot_evoked_topo"], [782, 4, 1, "", "plot_evoked_topomap"], [783, 4, 1, "", "plot_evoked_white"], [784, 4, 1, "", "plot_filter"], [785, 4, 1, "", "plot_head_positions"], [786, 4, 1, "", "plot_ica_components"], [787, 4, 1, "", "plot_ica_overlay"], [788, 4, 1, "", "plot_ica_properties"], [789, 4, 1, "", "plot_ica_scores"], [790, 4, 1, "", "plot_ica_sources"], [791, 4, 1, "", "plot_ideal_filter"], [792, 4, 1, "", "plot_layout"], [793, 4, 1, "", "plot_montage"], [794, 4, 1, "", "plot_projs_joint"], [795, 4, 1, "", "plot_projs_topomap"], [796, 4, 1, "", "plot_raw"], [797, 4, 1, "", "plot_raw_psd"], [798, 4, 1, "", "plot_regression_weights"], [799, 4, 1, "", "plot_sensors"], [800, 4, 1, "", "plot_snr_estimate"], [801, 4, 1, "", "plot_source_estimates"], [802, 4, 1, "", "plot_sparse_source_estimates"], [803, 4, 1, "", "plot_tfr_topomap"], [804, 4, 1, "", "plot_topo_image_epochs"], [805, 4, 1, "", "plot_topomap"], [806, 4, 1, "", "plot_vector_source_estimates"], [807, 4, 1, "", "plot_volume_source_estimates"], [808, 4, 1, "", "set_3d_backend"], [809, 4, 1, "", "set_3d_options"], [810, 4, 1, "", "set_3d_title"], [811, 4, 1, "", "set_3d_view"], [812, 4, 1, "", "set_browser_backend"], [813, 4, 1, "", "snapshot_brain_montage"], [814, 4, 1, "", "use_3d_backend"], [815, 4, 1, "", "use_browser_backend"]], "mne.viz.Brain": [[743, 2, 1, "", "add_annotation"], [743, 2, 1, "", "add_data"], [743, 2, 1, "", "add_dipole"], [743, 2, 1, "", "add_foci"], [743, 2, 1, "", "add_forward"], [743, 2, 1, "", "add_head"], [743, 2, 1, "", "add_label"], [743, 2, 1, "", "add_sensors"], [743, 2, 1, "", "add_skull"], [743, 2, 1, "", "add_text"], [743, 2, 1, "", "add_volume_labels"], [743, 2, 1, "", "apply_auto_scaling"], [743, 2, 1, "", "clear_glyphs"], [743, 2, 1, "", "close"], [743, 3, 1, "", "data"], [743, 2, 1, "", "get_picked_points"], [743, 2, 1, "", "get_view"], [743, 2, 1, "", "help"], [743, 3, 1, "", "interaction"], [743, 2, 1, "", "plot_time_course"], [743, 2, 1, "", "plot_time_line"], [743, 2, 1, "", "remove_annotations"], [743, 2, 1, "", "remove_data"], [743, 2, 1, "", "remove_dipole"], [743, 2, 1, "", "remove_forward"], [743, 2, 1, "", "remove_head"], [743, 2, 1, "", "remove_labels"], [743, 2, 1, "", "remove_sensors"], [743, 2, 1, "", "remove_skull"], [743, 2, 1, "", "remove_text"], [743, 2, 1, "", "remove_volume_labels"], [743, 2, 1, "", "reset"], [743, 2, 1, "", "reset_view"], [743, 2, 1, "", "restore_user_scaling"], [743, 2, 1, "", "save_image"], [743, 2, 1, "", "save_movie"], [743, 2, 1, "", "screenshot"], [743, 2, 1, "", "set_data_smoothing"], [743, 2, 1, "", "set_playback_speed"], [743, 2, 1, "", "set_time"], [743, 2, 1, "", "set_time_interpolation"], [743, 2, 1, "", "set_time_point"], [743, 2, 1, "", "setup_time_viewer"], [743, 2, 1, "", "show"], [743, 2, 1, "", "show_view"], [743, 3, 1, "", "time_interpolation"], [743, 2, 1, "", "toggle_interface"], [743, 2, 1, "", "toggle_playback"], [743, 2, 1, "", "update_lut"]], "mne.viz.ClickableImage": [[744, 2, 1, "", "onclick"], [744, 2, 1, "", "plot_clicks"], [744, 2, 1, "", "to_layout"]], "mne.viz.Figure3D": [[745, 3, 1, "", "plotter"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"]}, "titleterms": {"connect": [0, 27, 145, 244, 835], "analysi": [0, 4, 10, 14, 27, 36, 136, 145, 150, 164, 165, 215, 230, 235, 238, 239, 240, 853, 855, 862], "exampl": [0, 3, 27, 96, 103, 145, 155, 174, 194, 203, 204, 205, 254, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 281, 285, 286, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 305, 307, 308, 309, 310, 311, 312, 314, 316, 320, 321, 322, 324, 326, 327, 328, 332, 335, 336, 339, 340, 341, 342, 343, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 369, 371, 380, 386, 391, 399, 400, 403, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 434, 437, 442, 443, 444, 446, 448, 449, 451, 456, 457, 460, 461, 465, 467, 468, 471, 472, 473, 474, 476, 477, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 543, 545, 547, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 561, 563, 564, 565, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 581, 583, 584, 586, 587, 588, 590, 591, 592, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 613, 614, 616, 618, 619, 622, 624, 625, 626, 627, 628, 629, 631, 635, 637, 638, 640, 641, 643, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 660, 661, 662, 663, 664, 668, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 691, 692, 694, 695, 696, 697, 698, 699, 700, 704, 705, 706, 707, 709, 712, 714, 715, 723, 726, 727, 728, 732, 733, 735, 737, 738, 742, 743, 744, 747, 748, 752, 754, 756, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 770, 771, 774, 776, 779, 781, 783, 784, 785, 791, 794, 795, 800, 801, 802, 805, 806, 808, 810, 811, 813, 815, 816, 820, 821, 822, 823, 824, 827, 829, 852, 861, 864], "brainstorm": [1, 182, 183, 190, 375, 376, 377, 852], "raw": [1, 7, 29, 69, 79, 88, 91, 92, 136, 139, 151, 167, 171, 176, 202, 209, 210, 213, 214, 215, 216, 219, 254, 476, 855, 858, 867], "median": [1, 852], "nerv": [1, 852], "dataset": [1, 2, 3, 4, 7, 27, 69, 81, 182, 183, 184, 190, 213, 239, 247, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 852, 855], "refer": [1, 4, 8, 10, 12, 13, 15, 16, 18, 19, 21, 33, 35, 40, 42, 43, 44, 46, 51, 54, 55, 58, 59, 65, 69, 70, 73, 74, 77, 81, 82, 86, 92, 99, 107, 110, 111, 115, 117, 119, 124, 127, 133, 136, 140, 143, 150, 154, 156, 161, 175, 177, 179, 182, 183, 188, 190, 193, 194, 198, 200, 202, 203, 204, 205, 206, 208, 210, 221, 224, 225, 229, 237, 835, 851, 852, 855, 858, 866], "hf": 2, "sef": [2, 852], "open": [3, 27, 254, 835, 864], "singl": [4, 28, 102, 126, 226, 227, 228], "trial": [4, 126, 209, 214, 226, 227, 228, 238, 239], "linear": [4, 18, 254, 858], "regress": [4, 72, 97, 99, 140, 202, 210], "limo": [4, 392, 852], "about": [4, 169, 170, 197, 858], "data": [4, 5, 7, 8, 11, 13, 15, 18, 19, 21, 27, 29, 30, 41, 42, 49, 51, 57, 63, 65, 70, 72, 74, 78, 79, 84, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 107, 112, 113, 114, 117, 118, 119, 127, 134, 135, 136, 139, 140, 141, 145, 146, 148, 149, 151, 158, 164, 165, 166, 167, 168, 171, 174, 176, 177, 179, 187, 188, 189, 190, 191, 193, 199, 201, 202, 209, 210, 213, 214, 215, 216, 217, 219, 220, 221, 225, 228, 229, 230, 232, 233, 234, 237, 239, 246, 254, 661, 851, 852, 855, 858, 861, 867, 870, 872], "load": [4, 19, 47, 72, 113, 114, 135, 136, 139, 140, 148, 158, 165, 174, 177, 189, 193, 204, 213, 220, 858], "visual": [4, 19, 27, 47, 48, 49, 50, 54, 55, 110, 115, 120, 135, 139, 141, 143, 148, 149, 155, 157, 169, 176, 179, 180, 181, 193, 202, 203, 204, 205, 207, 224, 229, 232, 233, 234, 237, 835, 852, 864, 875], "event": [4, 68, 111, 136, 143, 150, 165, 167, 171, 214, 249, 434, 435, 436], "condit": [4, 13, 130, 150, 227, 228], "erp": [4, 140, 143, 150, 852], "effect": [4, 16, 193, 194, 202, 204, 224, 239, 858], "stimulu": [4, 19], "phase": [4, 105], "coher": [4, 238], "prepar": [4, 5, 143, 202, 234], "defin": [4, 68, 88, 155, 224, 226], "predictor": 4, "variabl": [4, 170, 835], "design": [4, 136, 194, 200, 853], "matrix": [4, 41, 64, 69, 101, 161, 224, 232, 851, 855, 858, 861], "extract": [4, 37, 39, 92, 136, 139, 207, 209, 213, 239], "coeffici": [4, 19], "plot": [4, 18, 34, 41, 42, 43, 44, 47, 48, 50, 60, 68, 69, 79, 80, 82, 114, 116, 117, 118, 121, 122, 123, 124, 125, 126, 131, 135, 140, 141, 149, 151, 161, 169, 209, 214, 216, 220, 226, 227, 238, 239, 833, 855], "model": [4, 19, 23, 27, 45, 109, 156, 157, 162, 164, 165, 176, 179, 193, 195, 206, 252, 254, 851, 857, 858, 864], "result": [4, 43, 44, 54, 239], "optic": [5, 209, 210], "pump": [5, 210], "magnetomet": [5, 210], "opm": [5, 107, 187, 210, 396, 852, 864], "local": [5, 31, 164, 175, 176, 177, 181, 185, 835, 851], "perform": [5, 72, 88, 135, 193], "dipol": [5, 45, 88, 114, 175, 177, 180, 260, 428], "fit": [5, 19, 156, 175, 180, 193, 203], "minimum": [5, 858], "norm": [5, 40, 858], "comput": [6, 16, 20, 21, 25, 28, 29, 30, 32, 33, 34, 35, 39, 40, 41, 42, 45, 46, 47, 49, 51, 54, 55, 56, 58, 59, 66, 69, 83, 88, 89, 92, 100, 101, 102, 104, 105, 106, 107, 108, 110, 128, 135, 138, 147, 153, 157, 158, 161, 163, 169, 173, 176, 178, 179, 186, 192, 196, 200, 202, 203, 204, 207, 212, 218, 223, 226, 227, 229, 231, 232, 233, 234, 236, 241, 245, 254, 851, 858, 864], "time": [6, 9, 13, 20, 25, 27, 32, 37, 39, 46, 56, 59, 66, 68, 69, 71, 83, 84, 89, 92, 100, 103, 104, 112, 128, 135, 138, 139, 141, 143, 144, 147, 153, 163, 164, 165, 173, 180, 186, 192, 194, 196, 203, 212, 213, 218, 223, 226, 227, 229, 231, 236, 238, 239, 240, 241, 835, 864, 874], "from": [7, 8, 15, 19, 37, 38, 43, 44, 61, 88, 102, 127, 136, 139, 141, 143, 148, 167, 168, 187, 188, 189, 202, 205, 209, 213, 214, 215, 216, 219, 220, 246, 254, 862], "dspm": [7, 28, 30, 34, 54, 92, 108, 176, 858], "spm": [7, 852], "face": [7, 852], "motor": [8, 852], "imageri": [8, 852], "decod": [8, 9, 11, 12, 13, 15, 17, 18, 27, 194, 248, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426], "eeg": [8, 15, 22, 55, 58, 65, 69, 70, 77, 116, 123, 150, 158, 165, 181, 187, 188, 206, 225, 239, 851, 858, 864], "us": [8, 9, 14, 18, 26, 32, 33, 34, 35, 39, 47, 57, 63, 70, 82, 92, 136, 142, 145, 148, 154, 155, 156, 159, 160, 170, 179, 193, 203, 206, 208, 228, 254, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 281, 285, 286, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 305, 307, 308, 309, 310, 311, 312, 314, 316, 320, 321, 322, 324, 326, 327, 328, 332, 335, 336, 339, 340, 341, 342, 343, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 369, 371, 380, 386, 391, 399, 400, 403, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 434, 437, 442, 443, 444, 446, 448, 449, 451, 456, 457, 460, 461, 465, 467, 468, 471, 472, 473, 474, 476, 477, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 543, 545, 547, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 561, 563, 564, 565, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 581, 583, 584, 586, 587, 588, 590, 591, 592, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 613, 614, 616, 618, 619, 622, 624, 625, 626, 627, 628, 629, 631, 635, 637, 638, 640, 641, 643, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 660, 661, 662, 663, 664, 668, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 691, 692, 694, 695, 696, 697, 698, 699, 700, 704, 705, 706, 707, 709, 712, 714, 715, 723, 726, 727, 728, 732, 733, 735, 737, 738, 742, 743, 744, 747, 748, 752, 754, 756, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 770, 771, 774, 776, 779, 781, 783, 784, 785, 791, 794, 795, 800, 801, 802, 805, 806, 808, 810, 811, 813, 815, 816, 820, 821, 822, 823, 824, 827, 829, 833, 835, 848, 851, 855, 858, 861], "common": [8, 9, 133, 194, 232, 234, 237], "spatial": [8, 9, 16, 21, 54, 55, 179, 194, 220], "pattern": [8, 9, 18, 194], "csp": [8, 9, 408], "frequenc": [9, 27, 32, 46, 59, 103, 111, 112, 135, 164, 165, 189, 197, 200, 207, 226, 227, 229, 237, 238, 239, 240, 852, 864, 874], "space": [9, 11, 13, 18, 24, 26, 30, 41, 54, 58, 99, 102, 105, 108, 145, 157, 158, 162, 164, 177, 194, 204, 205, 208, 214, 220, 232, 234, 254, 851, 858, 861, 870, 872], "represent": [10, 112, 209, 228, 858], "similar": [10, 148], "sourc": [11, 24, 26, 27, 30, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 44, 45, 47, 54, 58, 70, 88, 92, 93, 102, 105, 106, 107, 108, 114, 155, 157, 158, 162, 164, 171, 175, 176, 177, 179, 180, 181, 185, 194, 206, 220, 232, 233, 234, 235, 254, 851, 858, 864, 872], "continu": [12, 79, 97, 99, 145, 146, 164, 165, 189, 193, 207, 213, 215, 216, 217, 858], "target": [12, 68], "spoc": [12, 194, 415], "sensor": [13, 18, 22, 82, 94, 95, 98, 99, 114, 116, 121, 123, 131, 135, 141, 164, 169, 189, 194, 205, 209, 210, 216, 220, 229, 230, 238, 858, 870], "gener": [13, 24, 38, 90, 91, 93, 143, 188, 194, 199, 210, 220, 242, 835, 855, 858], "across": [13, 69, 80, 150, 209], "evok": [14, 30, 34, 41, 51, 68, 84, 88, 90, 92, 117, 118, 119, 125, 130, 148, 149, 150, 151, 152, 164, 165, 171, 176, 202, 210, 219, 264, 851], "respons": [14, 68, 130, 143, 150, 152, 164, 165, 176, 193, 202, 209, 210, 863], "ica": [14, 75, 81, 171, 203, 556, 851], "pca": [14, 47, 254], "reduct": [14, 203, 204, 205], "techniqu": 14, "xdawn": [15, 86, 194, 557], "match": [16, 194, 203], "filter": [16, 18, 21, 49, 78, 112, 150, 179, 194, 200, 201, 203, 208, 210, 443, 444, 445, 446, 447, 448, 858], "em": [16, 409], "machin": [17, 27, 164, 195], "learn": [17, 27, 136, 164, 195], "encod": [17, 27, 661], "mvpa": [17, 27, 194], "classifi": 18, "logisticregress": 18, "recept": [19, 193], "field": [19, 149, 150, 193, 858, 861], "estim": [19, 34, 38, 41, 42, 43, 44, 57, 88, 152, 164, 165, 180, 181, 193, 207, 220, 235, 244, 851, 858], "predict": [19, 858], "public": [19, 125], "creat": [19, 88, 92, 113, 114, 136, 139, 143, 148, 187, 193, 202, 205, 206, 215, 219, 220, 228, 246, 254, 835, 851, 858], "investig": 19, "reconstruct": [19, 88, 92, 154, 159, 179, 205, 851], "spectro": [21, 193], "decomposit": 21, "ssd": [21, 416], "epoch": [21, 28, 42, 92, 102, 112, 115, 136, 139, 141, 142, 143, 144, 145, 146, 148, 150, 151, 164, 165, 171, 199, 202, 203, 209, 219, 229, 232, 234, 262, 429, 430, 431, 432, 851, 858], "displai": 22, "sensit": [22, 129], "map": [22, 35, 110, 118, 129, 141, 148, 149, 214, 221, 858], "meg": [22, 55, 73, 77, 85, 121, 131, 165, 187, 210, 220, 852, 858, 864], "forward": [23, 27, 47, 107, 157, 158, 162, 164, 171, 179, 252, 266, 452, 453, 454, 455, 851, 855, 858], "left": [24, 209], "cerebellum": 24, "volum": [24, 30, 41, 50, 180], "morph": [26, 43, 44, 179, 858], "galleri": 27, "input": [27, 62], "output": [27, 62, 159, 179], "simul": [27, 87, 88, 90, 91, 92, 93, 112, 164, 193, 203, 220, 221, 222, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 871], "preprocess": [27, 76, 107, 135, 140, 164, 165, 209, 210, 211, 215, 239, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 851, 865], "statist": [27, 96, 164, 224, 225, 226, 227, 229, 230, 232, 233, 234, 235, 239, 858, 864, 873], "invers": [27, 28, 29, 30, 31, 35, 36, 39, 40, 41, 42, 47, 52, 57, 92, 102, 164, 165, 176, 185, 844, 850, 851, 855, 858], "problem": [27, 36, 200], "mne": [28, 30, 41, 42, 54, 60, 75, 114, 122, 154, 159, 160, 165, 170, 171, 176, 178, 187, 198, 200, 203, 204, 208, 213, 219, 224, 243, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 832, 835, 837, 838, 839, 841, 842, 843, 847, 850, 854, 855, 858, 861, 869], "solut": [28, 29, 30, 35, 39, 40, 41, 47, 60, 102, 157, 171, 176, 178, 200, 203, 254, 844, 851, 855, 858], "sloreta": [29, 176, 858], "custom": [31, 125, 131, 171, 189], "solver": 31, "level": [32, 94, 127, 861], "timecours": [32, 45, 125], "dic": [32, 33, 34, 221], "beamform": [32, 33, 34, 49, 179, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299], "power": [33, 34, 42, 102, 105, 106, 107, 108, 135, 141, 150, 194, 197, 201, 221, 226, 227, 228, 238, 239], "er": 34, "lcmv": [34, 49, 179], "covari": [34, 42, 49, 64, 119, 161, 171, 176, 179, 220, 245, 259, 851, 855, 858], "some": [34, 200, 861], "spars": [35, 40, 59], "gamma": [35, 135], "empir": 35, "bayesian": 35, "method": [35, 74, 210, 213, 216, 224], "cours": [37, 92, 180], "source_estim": 37, "object": [37, 44, 136, 139, 141, 142, 144, 148, 149, 167, 168, 213, 215, 216, 219, 237, 246, 852, 855], "function": [38, 47, 48, 49, 50, 136, 209, 224, 234, 835, 839, 855, 861], "label": [38, 39, 41, 47, 102, 105, 106, 220, 268, 509, 861], "seri": [39, 69, 141], "activ": [39, 88, 92, 125, 126, 164, 179, 195, 209], "view": [39, 41, 80, 114, 142, 209, 226, 227, 254], "vector": [39, 43, 60, 171, 179, 180, 194, 423], "mix": [40, 41], "mxne": [40, 46, 59], "irmxn": 40, "set": [41, 43, 144, 150, 156, 170, 188, 206, 226, 228, 229, 232, 233, 234, 254, 835, 851, 852], "up": [41, 43, 156, 160, 254, 835, 851], "our": [41, 181], "fwd": [41, 861], "surfac": [41, 43, 157, 159, 160, 169, 180, 181, 209, 254, 693, 694, 851, 858, 861], "process": [41, 166, 179, 835, 849], "project": [42, 82, 113, 129, 169, 171, 194, 204, 254, 271, 857, 858, 861], "empti": [42, 127, 205], "room": [42, 127, 205], "appli": [42, 43, 44, 74, 136, 143, 179, 187, 189, 200, 202, 204, 239, 254], "oper": [42, 47, 52, 92, 112, 157, 158, 160, 215, 851, 853, 858], "sourcemorph": [43, 44, 274], "sourceestim": [43, 171, 174, 273], "read": [43, 44, 47, 52, 53, 64, 65, 136, 164, 167, 169, 188, 191, 214, 215, 229, 232, 234, 855, 861, 867], "write": [43, 44, 64, 214, 215, 861], "disk": [43, 44, 139], "volumetr": [44, 179, 858], "get": [44, 61, 158, 160, 170, 171, 181, 239, 842, 855, 856, 860], "volsourceestim": [44, 277], "convert": [44, 113, 144, 167, 209, 254], "nifti": 44, "an": [45, 52, 53, 57, 69, 115, 141, 142, 144, 156, 158, 160, 167, 168, 171, 179, 181, 203, 206, 210, 239, 851], "xfit": 45, "like": [45, 169], "multi": 45, "iter": [46, 139], "reweight": 46, "tf": 46, "multiscal": 46, "dictionari": 46, "leakag": 47, "among": [47, 148], "circular": 47, "graph": 47, "organis": 47, "cortic": [47, 67, 124, 135, 159, 232, 234, 851, 858], "parcel": [47, 124], "point": [47, 48, 50, 156, 220, 858], "spread": [47, 48, 50, 220], "summari": [47, 69, 166, 174, 197, 198, 200, 213, 876], "all": [47, 133, 179, 198, 228, 232, 234, 835, 839, 843, 855], "evalu": [47, 209], "base": [47, 68, 136, 140, 199, 254, 853, 858], "psf": [47, 48, 50], "correl": 47, "save": [47, 139, 148, 171, 204, 213], "figur": [47, 125, 171], "option": [47, 118, 254, 835, 855], "individu": [47, 861], "cross": [48, 49, 101, 132, 835], "talk": [48, 49], "ctf": [48, 121, 183, 187, 190], "differ": [49, 75, 88, 130, 140, 164, 191, 193, 239], "matric": [49, 161, 179], "resolut": [49, 54, 55, 160, 254], "two": [49, 220], "rap": 51, "music": 51, "stc": [53, 88, 174, 180, 861], "file": [53, 61, 169, 171, 188, 214, 215, 251, 254, 851, 855, 858, 861], "metric": [54, 55, 69, 651, 652, 653, 654, 655, 656, 657, 658], "compar": [55, 69, 75, 88, 130, 149, 150, 193, 209, 210, 224, 254], "eegmeg": 55, "snr": [57, 58, 207, 239], "prior": 59, "full": [60, 229], "valu": [60, 144, 239], "averag": [61, 112, 148, 150, 206, 858], "info": [61, 168, 213, 219, 254, 267, 861], "fif": [61, 187, 254, 855], "how": [63, 113, 159, 161, 198, 205, 215, 850, 855], "neural": [63, 164, 193, 195, 209], "ensembl": 63, "neo": 63, "format": [63, 144, 188, 189, 858], "nois": [64, 119, 127, 176, 197, 201, 204, 205, 220, 239, 851, 852, 858], "xdf": [65, 188], "signal": [67, 149, 166, 167, 204, 205, 207, 208, 209, 210, 220, 239, 858, 861], "suppress": [67, 851], "css": 67, "remov": [67, 72, 81, 203, 204, 209, 232, 234], "lag": 68, "identifi": 69, "electrod": [69, 113, 133, 135, 181, 188, 858], "bridg": 69, "too": 69, "much": 69, "gel": 69, "electr": 69, "distanc": 69, "examin": [69, 140, 210], "distribut": [69, 74, 177, 833, 864], "topomap": [69, 118], "voltag": 69, "subject": [69, 92, 207, 254, 852], "eegbci": [69, 81, 378, 379, 852], "The": [69, 139, 143, 148, 166, 167, 168, 169, 174, 177, 179, 199, 213, 237, 851, 852, 857, 858, 861], "relationship": [69, 174], "between": [69, 167, 227], "imped": 69, "transform": [70, 112, 136, 155, 159, 194, 232, 234, 731, 732, 733, 734, 735, 736, 858, 861], "current": [70, 114, 175, 253, 858, 863, 876], "densiti": [70, 101, 102, 106, 107, 209, 216, 239], "csd": [70, 101], "show": [71, 127, 254], "eog": [71, 72, 197, 202, 203, 205, 254], "artifact": [71, 72, 73, 74, 79, 80, 197, 201, 202, 203, 205, 254, 851], "reduc": 72, "through": 72, "import": [72, 74, 125, 187, 188, 189, 254, 835], "packag": [72, 843, 858], "befor": [72, 202, 835], "after": [72, 833], "comparison": [72, 132, 224, 228], "find": [73, 220, 229, 232], "channel": [73, 77, 85, 115, 139, 144, 148, 150, 166, 167, 168, 169, 187, 198, 199, 203, 206, 209, 213, 229, 232, 234, 239, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 661, 851, 852, 858, 861], "visualis": [74, 225], "nir": [74, 586, 587, 588, 589, 590, 591], "correct": [74, 95, 140, 143, 224], "add": [74, 114], "artifici": 74, "tempor": [74, 82, 109, 193, 194, 232, 233, 234], "deriv": 74, "repair": [74, 201, 202, 203, 205, 858], "algorithm": [75, 254, 850, 858], "interpol": [77, 118, 198, 858], "bad": [77, 155, 156, 160, 198, 199, 232, 234, 851, 858], "maxwel": [78, 208, 858], "movement": [78, 79, 207, 208], "compens": [78, 187, 208, 858, 861], "annot": [79, 80, 136, 167, 199, 209, 215, 256, 851], "reestim": 79, "dev_head_t": 79, "head": [79, 114, 155, 157, 159, 160, 181, 188, 207, 254, 851, 858], "posit": [79, 113, 114, 207], "respect": 79, "mean": [79, 150], "record": [79, 80, 164, 188, 191, 205], "muscl": [80, 81], "z": 80, "score": [80, 88], "compon": [81, 143, 179, 203], "let": 81, "": [81, 112, 159, 876], "now": 81, "replic": 81, "thi": [81, 193], "denois": [82, 86, 210], "oversampl": 82, "shift": 84, "scale": [84, 144, 151, 858], "remap": 85, "type": [85, 139, 150, 168, 193, 200, 213, 239, 254, 835, 858], "main": 88, "paramet": [88, 166, 199, 226, 228, 229, 232, 233, 234], "true": 88, "correspond": [88, 851], "amplitud": [88, 150, 199], "threshold": [88, 224, 225], "For": [88, 861], "region": [88, 114, 150], "anatomi": 92, "responss": 92, "permut": [94, 98, 228, 229, 232, 233], "f": [94, 97, 229], "test": [94, 95, 98, 136, 224, 228, 229, 232, 233, 834, 835, 841], "1d": 94, "cluster": [94, 224, 226, 227, 228, 229, 232, 233, 234, 864], "fdr": [95, 224, 228], "t": [95, 98, 232, 855], "rer": 97, "p": 97, "analys": [99, 851], "featur": [99, 135, 136], "bin": [99, 187, 855], "spectral": [101, 102, 106, 107, 216, 237, 239], "psd": [102, 106, 107, 239], "lock": [105, 143], "vectorview": [107, 187, 213], "align": [107, 133, 155, 159, 254, 661, 851], "alpha": 107, "beta": 107, "induc": 108, "whiten": [109, 119, 151, 858, 861], "ar": [109, 148, 170, 197, 204, 855, 861], "erd": 110, "explor": [111, 135], "relat": [111, 150, 842, 861], "dynam": 111, "specif": 111, "band": 111, "multitap": 112, "v": [112, 194, 213, 838], "morlet": [112, 712, 722], "stockwel": 112, "hilbert": 112, "calcul": [112, 239, 851, 858], "tfr": [112, 228, 721, 722], "wavelet": 112, "narrow": 112, "bandpass": 112, "without": [112, 155], "over": [112, 115, 139, 194, 209], "arrai": [112, 167, 214, 246, 858], "3d": [113, 149, 169, 179, 833, 855, 858, 864], "2d": [113, 169, 179, 864], "imag": [113, 114, 115, 141, 149, 171, 209, 254, 850, 858, 864], "snapshot": 113, "manual": [113, 169, 203], "viz": [114, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815], "brain": [114, 122, 125, 135, 179, 209, 743], "inform": [114, 168, 170, 177, 200, 209, 254, 851, 858, 861], "modifi": [114, 142, 166, 213, 835], "highlight": 114, "includ": [114, 214, 254], "screenshot": 114, "export": [114, 144, 160, 213, 250, 438, 439, 440, 441], "scalp": [116, 140, 149], "topograph": [117, 118, 149, 151, 209], "arrowmap": 117, "basic": [118, 135, 139, 143, 148, 200, 239, 835, 861], "plot_topomap": [118, 805], "addit": 118, "more": [118, 125, 209, 861], "advanc": [118, 833], "usag": 118, "anim": 118, "layout": [121, 123, 169, 228, 311], "system": [121, 123, 164, 170, 187, 189, 191, 254, 841, 858], "neuromag": [121, 187], "bti": [121, 184, 187, 254, 852], "kit": [121, 187, 254, 479], "artemis123": [121, 187], "helmet": 122, "make": [125, 167, 214, 835, 857], "readi": 125, "montag": [125, 169], "inset": 125, "group": [126, 143, 851], "roi": [126, 239], "sort": 126, "rt": 126, "ssp": [129, 204, 205, 254, 851, 858], "topographi": [131, 140, 149, 239], "hemispher": [132, 254, 851], "locat": [133, 141, 150, 169, 181, 188, 189, 209, 216, 858], "intracrani": 133, "contact": 133, "t1": 133, "acpc": 133, "freesurf": [133, 154, 159, 254, 836, 851, 858, 861], "recon": 133, "ct": 133, "mr": 133, "mark": [133, 198, 851], "each": [133, 220], "warp": 133, "atla": 133, "work": [134, 135, 142, 164, 169, 171, 190, 198, 214, 217, 833, 855], "seeg": [134, 852, 864], "ecog": [135, 852, 864], "templat": [135, 158, 203, 852], "evolut": 135, "sleep": [136, 852], "stage": 136, "classif": 136, "polysomnographi": 136, "psg": 136, "hypnogram": 136, "30": 136, "found": [136, 855], "same": 136, "step": [136, 154, 838, 855], "bob": 136, "engin": 136, "scikit": 136, "python": [136, 154, 159, 160, 165, 170, 171, 198, 200, 203, 204, 208, 213, 219, 243, 254, 832, 833, 835, 837, 838, 839, 840, 843, 850, 853, 854, 855, 860, 864, 866], "multiclass": 136, "workflow": [136, 835, 851], "further": 136, "exercis": [136, 157, 194, 220, 229, 238, 239], "clinic": [137, 164, 864], "applic": [137, 164], "structur": [139, 148, 167, 168, 174, 187, 213, 219, 858, 861], "discontinu": 139, "subselect": [139, 214], "select": [139, 142, 148, 203, 209, 213, 232, 861], "index": [139, 144, 213, 239], "drop": [139, 148, 168, 213], "reorder": [139, 148, 213], "chang": [139, 206, 213, 835, 876], "name": [139, 150, 187, 213, 835, 861], "domain": [139, 189, 203, 213, 237], "other": [139, 148, 200, 253, 833, 835, 839, 850, 858, 862], "form": [139, 239], "baselin": [140, 200, 220, 285], "tradit": 140, "regressor": 140, "wave": [140, 189], "interact": [140, 141, 215, 216, 853], "term": 140, "pipelin": [141, 864], "script": [141, 171, 853], "projector": [141, 204, 205, 206, 216], "spectrum": [141, 237, 700], "metadata": [142, 143], "restrict": 142, "datafram": [142, 144], "queri": [142, 168, 213], "ad": [142, 143, 171, 204], "auto": 143, "make_metadata": [143, 432], "specifi": [143, 189], "keep": 143, "onli": [143, 839, 843], "first": [143, 154, 835, 838, 864], "new": [143, 835, 876], "column": [143, 167], "describ": [143, 835], "stimul": [143, 239], "side": 143, "knowledg": 143, "ern": 143, "panda": 144, "wide": 144, "versu": [144, 228, 853], "long": [144, 213], "divid": 145, "equal": [145, 214], "characterist": 145, "fix": [145, 160, 177, 178], "length": [145, 200], "case": 145, "segment": [146, 164], "subset": [148, 168, 239], "memori": [148, 187, 858], "core": [148, 839, 852, 855], "combin": [148, 214], "trace": 149, "butterfli": 149, "arrow": 149, "joint": [149, 238], "subplot": 149, "potenti": [150, 862], "global": 150, "gfp": 150, "interest": [150, 229, 857], "grand": 150, "latenc": 150, "measur": [150, 228, 234, 254], "peak": 150, "mri": [154, 155, 158, 159, 171, 179, 181, 254, 849, 852, 858], "anatom": [154, 851], "fsaverag": [154, 158, 179, 852], "coordin": [155, 159, 189, 254, 851, 858, 861], "frame": [155, 159, 851], "understand": 155, "definit": [155, 229, 858, 861], "A": [155, 855], "good": 155, "defac": 155, "tran": [155, 861], "gui": [155, 254, 467, 468], "autom": 156, "approach": [156, 254], "coregistr": [156, 157, 171, 254, 363, 467], "initi": 156, "fiduci": 156, "refin": 156, "icp": 156, "omit": 156, "final": 156, "bem": [157, 160, 171, 254, 300, 301, 302, 303, 304, 305, 306, 307, 851, 855, 858], "adult": 158, "setup": [158, 221, 228, 229, 833, 838, 846], "infant": [158, 852], "surrog": 158, "under": [159, 855], "hood": 159, "ra": [159, 181], "spheric": 159, "decim": [159, 855], "mni": [159, 179], "affin": 159, "blender": 160, "edit": [160, 171], "low": [160, 197, 200], "high": [160, 200, 254, 852, 861], "tip": 160, "what": [160, 167, 197, 203, 204, 205, 254, 817, 842, 855, 876], "you": 160, "still": [160, 855], "error": 160, "clean": [160, 254], "dens": 160, "smooth": [160, 858], "topolog": 160, "deal": 160, "topologi": [160, 858], "pymeshfix": 160, "should": [161, 842, 855], "i": [161, 167, 169, 203, 204, 205, 251, 833, 839, 841, 842, 855, 858], "regular": [161, 176, 193, 369, 855, 858], "tutori": [164, 172, 182, 183, 184, 864], "introductori": [164, 172], "overview": [165, 197, 835, 842, 851, 852, 859, 861], "detect": [165, 197, 199, 209], "experiment": 165, "place": [166, 169, 853], "pick": 166, "copi": 166, "pars": 167, "stim": [167, 661], "middl": 167, "embed": 167, "multipl": [167, 224, 228, 855], "per": [167, 851], "obtain": 168, "built": [169, 216], "eeglab": [169, 188, 839, 862], "sphere": [169, 858], "keyword": 169, "avail": 169, "mani": 169, "control": 169, "digit": [169, 858], "render": [169, 179, 833], "configur": [170, 835, 841, 845], "where": 170, "store": 170, "environ": [170, 835], "log": [170, 188, 845], "your": [170, 834, 835], "start": [171, 860], "report": [171, 200, 254, 272, 869], "inverseoper": [171, 522], "code": [171, 237, 835, 838, 852], "e": 171, "g": 171, "tag": [171, 239, 861], "entir": 171, "folder": [171, 254], "html": 171, "descript": [171, 858], "text": 171, "inspect": [174, 238, 858], "sourcespac": [174, 275], "src": 174, "equival": 175, "ecd": 175, "eloreta": [176, 858], "role": 177, "orient": [177, 178, 858], "loos": 177, "limit": 177, "them": 177, "discard": 177, "variou": 178, "free": [178, 224], "introduct": 179, "handl": [179, 198], "depth": [179, 858], "bia": [179, 205], "On": [179, 861], "slice": 179, "orthoview": 179, "glass": 179, "maximum": [179, 224], "voxel": [179, 181], "three": 179, "given": 181, "prerequisit": 181, "coord": 181, "elekta": [182, 187], "phantom": [182, 183, 184], "4d": [184, 254, 852], "neuroimag": [184, 187, 852], "devic": [187, 188, 189, 858], "megin": 187, "triux": 187, "fil": 187, "4": [187, 876], "d": 187, "dir": 187, "polhemu": 187, "softwar": [187, 200, 842, 850, 858, 861, 862], "gradient": [187, 858, 861], "ricoh": 187, "con": 187, "sqd": 187, "fieldtrip": [187, 229], "mat": 187, "arbitrari": [187, 234], "brainvis": 188, "vhdr": 188, "vmrk": 188, "european": 188, "edf": 188, "biosemi": 188, "bdf": 188, "gdf": 188, "neuroscan": 188, "cnt": 188, "egi": 188, "simpl": [188, 855], "binari": 188, "mff": 188, "fdt": 188, "nicolet": 188, "eximia": 188, "nxe": 188, "persyst": 188, "lai": 188, "dat": 188, "nihon": 188, "kohden": 188, "21e": 188, "pnt": 188, "xdfz": 188, "shape": 188, "fnir": [189, 209, 852], "standard": [189, 209, 224, 379, 835], "snirf": 189, "nirx": 189, "directori": [189, 852, 858, 861], "hdr": 189, "hitachi": 189, "csv": 189, "boxi": 189, "txt": 189, "legaci": [189, 237], "tsv": 189, "auditori": [190, 852], "strf": 193, "audio": 193, "recov": 193, "philosophi": [194, 853], "class": [194, 237, 833, 841, 848, 864], "scaler": [194, 417], "psdestim": [194, 413], "filterestim": [194, 410], "comodul": 194, "do": [197, 855], "drift": [197, 201, 203], "line": [197, 201, 254, 835, 861], "heartbeat": 197, "ecg": [197, 203, 205, 254], "ocular": 197, "block": 198, "execut": 198, "when": [198, 204, 835], "look": [198, 203, 855], "why": [198, 855, 858], "reject": [199, 851], "span": 199, "break": 199, "reject_by_annot": 199, "programmat": [199, 215], "background": [200, 201, 204, 206, 208, 220], "statement": 200, "fir": 200, "iir": 200, "pitfal": [200, 862], "pass": 200, "default": [200, 858], "c": [200, 841], "cutoff": 200, "order": 200, "transit": 200, "bandwidth": 200, "roll": 200, "off": [200, 833], "passband": 200, "rippl": 200, "stopband": 200, "attenu": 200, "delai": 200, "direct": 200, "resampl": [201, 224, 448, 855], "slow": [201, 203, 855], "best": [201, 204], "practic": [201, 204], "origin": [202, 220], "subtract": 202, "dimension": 203, "ignor": 203, "terminologi": 204, "environment": 205, "affect": [205, 215], "choos": 205, "number": [205, 213, 858], "via": [205, 210, 839, 858, 864], "infinit": 206, "rest": [206, 852], "bipolar": 206, "hpi": 207, "separ": [208, 239], "sss": 208, "spatiotempor": [208, 229], "tsss": 208, "caveat": 208, "infrar": 209, "spectroscopi": 209, "provid": [209, 224], "meaning": 209, "appropri": 209, "intens": 209, "qualiti": 209, "haemoglobin": 209, "heart": 209, "rate": [209, 224], "consist": [209, 219, 835], "tap": 209, "right": 209, "hand": 209, "nuisanc": 210, "attribut": 213, "sampl": [213, 226, 228, 233, 399, 852], "len": 213, "get_data": 213, "wai": 213, "exclud": 214, "id": [214, 839, 861], "descriptor": 214, "togeth": 214, "brows": [216, 254], "scratch": 219, "unit": [219, 858], "corrupt": 220, "known": 220, "period": 220, "sinusoid": 220, "distant": 220, "center": [220, 846], "vertic": 220, "infer": 224, "hypothesi": 224, "null": 224, "parametr": [224, 226, 227], "hat": 224, "varianc": 224, "adjust": 224, "non": [224, 226, 227], "bonferroni": 224, "fals": 224, "discoveri": 224, "size": 224, "adjac": [224, 226, 229, 232], "enhanc": [224, 876], "tfce": 224, "signific": [225, 232], "1": [226, 876], "mass": 228, "univari": 228, "twowai": 228, "repeat": [228, 234], "anova": [228, 234], "account": 228, "neighbor": 229, "spatio": [232, 233, 234], "one": [232, 234], "2": [233, 876], "contrast": 234, "epochsspectrum": [237, 698], "migrat": [237, 862], "quick": 237, "action": 237, "inter": 238, "itc": 238, "ssvep": [239, 404, 852], "vssr": 239, "ratio": 239, "spectra": 239, "12": [239, 876], "hz": 239, "indic": 239, "check": [239, 254, 858], "15": [239, 876], "debrief": 239, "bonu": 239, "durat": 239, "resolv": 239, "bibliographi": 242, "paper": 243, "cite": [243, 850, 855], "o": [251, 839, 858], "fund": [253, 857], "support": [253, 839, 858, 864], "institut": [253, 857, 863], "partner": [253, 857, 863], "former": [253, 863], "command": [254, 835, 855], "tool": [254, 835, 842], "anonym": 254, "browse_raw": 254, "bti2fiff": 254, "magneswh3600": 254, "note": [254, 861], "clean_eog_ecg": 254, "ie": 254, "compare_fiff": [254, 751], "fiff": [254, 861], "compute_proj_ecg": [254, 568], "compute_proj_eog": [254, 569], "coreg": [254, 363, 364, 365], "flash_bem": 254, "3": [254, 876], "layer": 254, "flash": [254, 858], "freeview_bem_surfac": 254, "freeview": 254, "kit2fiff": 254, "nyu": 254, "make_scalp_surfac": [254, 306], "maxfilt": 254, "prepare_bem_model": 254, "colloc": 254, "setup_forward_model": 254, "setup_source_spac": [254, 644], "bilater": 254, "subsampl": 254, "show_fiff": [254, 507], "content": [254, 852, 864], "show_info": 254, "surf2bem": 254, "sys_info": [254, 695], "watershed_bem": 254, "watersh": [254, 855, 858], "acqparserfif": 255, "baseepoch": 257, "bihemilabel": 258, "dipolefix": 261, "epochsarrai": 263, "evokedarrai": 265, "mixedsourceestim": 269, "mixedvectorsourceestim": 270, "vectorsourceestim": 276, "volvectorsourceestim": 278, "add_reference_channel": 279, "add_source_space_dist": 280, "annotations_from_ev": 281, "apply_forward": 282, "apply_forward_raw": 283, "average_forward_solut": 284, "rescal": 285, "apply_d": 287, "apply_dics_csd": 288, "apply_dics_epoch": 289, "apply_dics_tfr_epoch": 290, "apply_lcmv": 291, "apply_lcmv_cov": 292, "apply_lcmv_epoch": 293, "apply_lcmv_raw": 294, "make_d": 295, "make_lcmv": 296, "make_lcmv_resolution_matrix": 297, "rap_mus": 298, "read_beamform": 299, "conductormodel": 300, "convert_flash_mri": 301, "distance_to_bem": 302, "fit_sphere_to_headshap": 303, "get_fitting_dig": 304, "make_flash_bem": 305, "make_watershed_bem": 307, "channel_indices_by_typ": 308, "channel_typ": 309, "digmontag": 310, "combine_channel": 312, "compute_dev_head_t": 313, "compute_native_head_t": 314, "equalize_channel": [315, 433], "find_ch_adjac": 316, "find_layout": 317, "fix_mag_coil_typ": 318, "generate_2d_layout": 319, "get_builtin_ch_adjac": 320, "get_builtin_montag": 321, "make_1020_channel_select": 322, "make_dig_montag": 323, "make_eeg_layout": 324, "make_grid_layout": 325, "make_standard_montag": 326, "read_ch_adjac": 327, "read_custom_montag": 328, "read_dig_captrak": 329, "read_dig_dat": 330, "read_dig_egi": 331, "read_dig_fif": 332, "read_dig_hpt": 333, "read_dig_localit": 334, "read_dig_polhemus_isotrak": 335, "read_layout": 336, "read_polhemus_fastscan": 337, "rename_channel": [338, 632], "chpi": [339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350], "compute_chpi_amplitud": 339, "compute_chpi_loc": 340, "compute_chpi_snr": 341, "compute_head_po": 342, "extract_chpi_locs_ctf": 343, "extract_chpi_locs_kit": 344, "filter_chpi": 345, "get_active_chpi": 346, "get_chpi_info": 347, "head_pos_to_trans_rot_t": 348, "read_head_po": 349, "write_head_po": 350, "combine_evok": 351, "compute_covari": 352, "compute_proj_epoch": 353, "compute_proj_evok": 354, "compute_proj_raw": 355, "compute_rank": 356, "compute_raw_covari": 357, "compute_source_morph": 358, "concatenate_epoch": 359, "concatenate_ev": 360, "concatenate_raw": 361, "convert_forward_solut": 362, "estimate_head_mri_t": 364, "get_mni_fiduci": 365, "count_ev": 366, "cov": [367, 368, 369, 861], "compute_whiten": 367, "prepare_noise_cov": 368, "create_default_subject": 370, "create_info": 371, "cuda": [372, 373, 374, 833], "get_cuda_memori": 372, "init_cuda": 373, "set_cuda_devic": 374, "bst_auditori": 375, "data_path": [375, 376, 377, 380, 381, 388, 390, 391, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406], "bst_raw": 376, "bst_rest": 377, "load_data": [378, 392], "epilepsy_ecog": 380, "erp_cor": 381, "fetch_aparc_sub_parcel": 382, "fetch_dataset": 383, "fetch_fsaverag": 384, "fetch_hcp_mmp_parcel": 385, "fetch_infant_templ": 386, "fetch_phantom": 387, "fnirs_motor": 388, "has_dataset": 389, "hf_sef": 390, "kiloword": [391, 852], "misc": 393, "mtrf": [394, 852], "multimod": [395, 852], "phantom_4dbti": 397, "refmeg_nois": 398, "sleep_physionet": [400, 401], "ag": 400, "fetch_data": [400, 401], "temazepam": 401, "somato": 402, "spm_face": 403, "ucl_opm_auditori": 405, "visual_92_categori": 406, "decimate_surfac": 407, "generalizingestim": 411, "linearmodel": 412, "receptivefield": 414, "slidingestim": 418, "temporalfilt": 419, "timedelayingridg": 420, "timefrequ": 421, "unsupervisedspatialfilt": 422, "compute_em": 424, "cross_val_multiscor": 425, "get_coef": 426, "dig_mri_dist": 427, "get_phantom_dipol": 428, "average_mov": 429, "combine_event_id": 430, "equalize_epoch_count": 431, "define_target_ev": 434, "match_event_nam": 435, "shift_time_ev": 436, "events_from_annot": 437, "export_epoch": 438, "export_evok": 439, "export_evokeds_mff": 440, "export_raw": 441, "extract_label_time_cours": 442, "construct_iir_filt": 443, "create_filt": 444, "estimate_ringing_sampl": 445, "filter_data": 446, "notch_filt": 447, "find_ev": 449, "find_stim_step": 450, "fit_dipol": 451, "compute_depth_prior": 452, "compute_orient_prior": 453, "restrict_forward_to_label": 454, "restrict_forward_to_stc": 455, "get_config": 456, "get_config_path": 457, "get_head_surf": 458, "get_meg_helmet_surf": 459, "get_montage_volume_label": 460, "get_volume_labels_from_aseg": 461, "get_volume_labels_from_src": 462, "grade_to_tri": 463, "grade_to_vertic": 464, "grand_averag": 465, "grow_label": 466, "locate_ieeg": 468, "head_to_mni": 469, "head_to_mri": 470, "inverse_spars": [471, 472, 473, 474], "gamma_map": 471, "make_stc_from_dipol": 472, "mixed_norm": 473, "tf_mixed_norm": 474, "io": [475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508], "baseraw": 475, "rawarrai": 477, "anonymize_info": 478, "read_mrk": 479, "read_fiduci": 480, "read_info": 481, "read_raw": 482, "read_raw_artemis123": 483, "read_raw_bdf": 484, "read_raw_boxi": 485, "read_raw_brainvis": 486, "read_raw_bti": 487, "read_raw_cnt": 488, "read_raw_ctf": 489, "read_raw_curri": 490, "read_raw_edf": 491, "read_raw_eeglab": 492, "read_raw_egi": 493, "read_raw_eximia": 494, "read_raw_fieldtrip": 495, "read_raw_fif": 496, "read_raw_fil": 497, "read_raw_gdf": 498, "read_raw_hitachi": 499, "read_raw_kit": 500, "read_raw_nedf": 501, "read_raw_nicolet": 502, "read_raw_nihon": 503, "read_raw_nirx": 504, "read_raw_persyst": 505, "read_raw_snirf": 506, "write_fiduci": 508, "select_sourc": 509, "label_sign_flip": 510, "labels_to_stc": 511, "make_ad_hoc_cov": 512, "make_bem_model": 513, "make_bem_solut": 514, "make_field_map": 515, "make_fixed_length_epoch": 516, "make_fixed_length_ev": 517, "make_forward_dipol": 518, "make_forward_solut": 519, "make_sphere_model": 520, "merge_ev": 521, "minimum_norm": [522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541], "apply_invers": 523, "apply_inverse_cov": 524, "apply_inverse_epoch": 525, "apply_inverse_raw": 526, "apply_inverse_tfr_epoch": 527, "compute_rank_invers": 528, "compute_source_psd": 529, "compute_source_psd_epoch": 530, "estimate_snr": 531, "get_cross_talk": 532, "get_point_spread": 533, "make_inverse_oper": 534, "make_inverse_resolution_matrix": 535, "prepare_inverse_oper": 536, "read_inverse_oper": 537, "resolution_metr": 538, "source_band_induced_pow": 539, "source_induced_pow": 540, "write_inverse_oper": 541, "morph_label": 542, "morph_source_spac": 543, "open_doc": 544, "open_report": 545, "parse_config": 546, "pick_channel": 547, "pick_channels_cov": 548, "pick_channels_forward": 549, "pick_channels_regexp": 550, "pick_ev": 551, "pick_info": 552, "pick_typ": 553, "pick_types_forward": 554, "eogregress": 555, "annotate_amplitud": 558, "annotate_break": 559, "annotate_mov": 560, "annotate_muscle_zscor": 561, "annotate_nan": 562, "compute_average_dev_head_t": 563, "compute_bridged_electrod": 564, "compute_current_source_dens": 565, "compute_fine_calibr": 566, "compute_maxwell_basi": 567, "corrmap": 570, "cortical_signal_suppress": 571, "create_ecg_epoch": 572, "create_eog_epoch": 573, "equalize_bad": 574, "find_bad_channels_maxwel": 575, "find_ecg_ev": 576, "find_eog_ev": 577, "fix_stim_artifact": 578, "ica_find_ecg_ev": 579, "ica_find_eog_ev": 580, "ieeg": 581, "project_sensors_onto_brain": 581, "infomax": 582, "interpolate_bridged_electrod": 583, "maxwell_filt": 584, "maxwell_filter_prepare_emptyroom": 585, "beer_lambert_law": 586, "optical_dens": 587, "scalp_coupling_index": 588, "short_channel": 589, "source_detector_dist": 590, "temporal_derivative_distribution_repair": 591, "oversampled_temporal_project": 592, "peak_find": 593, "read_eog_regress": 594, "read_fine_calibr": 595, "read_ica": 596, "read_ica_eeglab": 597, "realign_raw": 598, "regress_artifact": 599, "write_fine_calibr": 600, "random_parcel": 601, "read_annot": 602, "read_bem_solut": 603, "read_bem_surfac": 604, "read_cov": 605, "read_dipol": 606, "read_epoch": 607, "read_epochs_eeglab": 608, "read_epochs_fieldtrip": 609, "read_epochs_kit": 610, "read_ev": 611, "read_evoked_besa": 612, "read_evoked_fieldtrip": 613, "read_evok": 614, "read_evokeds_mff": 615, "read_forward_solut": 616, "read_freesurfer_lut": 617, "read_label": 618, "read_labels_from_annot": 619, "read_lta": 620, "read_morph_map": 621, "read_proj": 622, "read_reject_paramet": 623, "read_source_estim": 624, "read_source_morph": 625, "read_source_spac": 626, "read_surfac": 627, "read_talxfm": 628, "read_tran": 629, "read_tri": 630, "read_vectorview_select": 631, "scale_bem": 633, "scale_label": 634, "scale_mri": 635, "scale_source_spac": 636, "sensitivity_map": 637, "set_bipolar_refer": 638, "set_cache_dir": 639, "set_config": 640, "set_eeg_refer": 641, "set_log_fil": 642, "set_log_level": 643, "setup_volume_source_spac": 645, "sourcesimul": 646, "add_chpi": 647, "add_ecg": 648, "add_eog": 649, "add_nois": 650, "cosine_scor": 651, "f1_score": 652, "peak_position_error": 653, "precision_scor": 654, "recall_scor": 655, "region_localization_error": 656, "roc_auc_scor": 657, "spatial_deviation_error": 658, "select_source_in_label": 659, "simulate_evok": 660, "simulate_raw": 661, "simulate_sparse_stc": 662, "simulate_stc": 663, "source_spac": [664, 665], "compute_distance_to_sensor": 664, "get_decimated_surfac": 665, "spatial_dist_adjac": 666, "spatial_inter_hemi_adjac": 667, "spatial_src_adjac": 668, "spatial_tris_adjac": 669, "spatio_temporal_dist_adjac": 670, "spatio_temporal_src_adjac": 671, "spatio_temporal_tris_adjac": 672, "split_label": 673, "stat": [674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690], "bonferroni_correct": 674, "bootstrap_confidence_interv": 675, "combine_adjac": 676, "f_mway_rm": 677, "f_onewai": 678, "f_threshold_mway_rm": 679, "fdr_correct": 680, "linear_regress": 681, "linear_regression_raw": 682, "permutation_cluster_1samp_test": 683, "permutation_cluster_test": 684, "permutation_t_test": 685, "spatio_temporal_cluster_1samp_test": 686, "spatio_temporal_cluster_test": 687, "summarize_clusters_stc": 688, "ttest_1samp_no_p": 689, "ttest_ind_no_p": 690, "stc_near_sensor": 691, "stc_to_label": 692, "complete_surface_info": 693, "read_curvatur": 694, "time_frequ": [696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729], "averagetfr": 696, "crossspectraldens": 697, "epochstfr": 699, "csd_array_fouri": 701, "csd_array_morlet": 702, "csd_array_multitap": 703, "csd_fourier": 704, "csd_morlet": 705, "csd_multitap": 706, "csd_tfr": 707, "dpss_window": 708, "fit_iir_model_raw": 709, "fwhm": 710, "istft": 711, "pick_channels_csd": 713, "psd_array_multitap": 714, "psd_array_welch": 715, "read_csd": 716, "read_spectrum": 717, "read_tfr": 718, "stft": 719, "stftfreq": 720, "cwt": 721, "tfr_array_morlet": 723, "tfr_array_multitap": 724, "tfr_array_stockwel": 725, "tfr_morlet": 726, "tfr_multitap": 727, "tfr_stockwel": 728, "write_tfr": 729, "transform_surface_to": 730, "apply_volume_registr": 732, "compute_volume_registr": 733, "quat_to_rot": 734, "read_ras_mni_t": 735, "rot_to_quat": 736, "use_coil_def": 737, "use_log_level": 738, "util": [739, 740, 861], "deprec": [739, 835], "warn": [740, 835], "verbos": 741, "vertex_to_mni": 742, "clickableimag": 744, "figure3d": 745, "add_background_imag": 746, "centers_to_edg": 747, "circular_layout": 748, "close_3d_figur": 749, "close_all_3d_figur": 750, "create_3d_figur": 752, "get_3d_backend": 753, "get_brain_class": 754, "get_browser_backend": 755, "iter_topographi": 756, "link_brain": 757, "mne_analyze_colormap": 758, "plot_align": 759, "plot_arrowmap": 760, "plot_bem": 761, "plot_brain_colorbar": 762, "plot_bridged_electrod": 763, "plot_ch_adjac": 764, "plot_channel_labels_circl": 765, "plot_chpi_snr": 766, "plot_compare_evok": 767, "plot_cov": 768, "plot_csd": 769, "plot_dipole_amplitud": 770, "plot_dipole_loc": 771, "plot_drop_log": 772, "plot_epoch": 773, "plot_epochs_imag": 774, "plot_epochs_psd_topomap": 775, "plot_ev": 776, "plot_evok": 777, "plot_evoked_field": 778, "plot_evoked_imag": 779, "plot_evoked_joint": 780, "plot_evoked_topo": 781, "plot_evoked_topomap": 782, "plot_evoked_whit": 783, "plot_filt": 784, "plot_head_posit": 785, "plot_ica_compon": 786, "plot_ica_overlai": 787, "plot_ica_properti": 788, "plot_ica_scor": 789, "plot_ica_sourc": 790, "plot_ideal_filt": 791, "plot_layout": 792, "plot_montag": 793, "plot_projs_joint": 794, "plot_projs_topomap": 795, "plot_raw": 796, "plot_raw_psd": 797, "plot_regression_weight": 798, "plot_sensor": 799, "plot_snr_estim": 800, "plot_source_estim": 801, "plot_sparse_source_estim": 802, "plot_tfr_topomap": 803, "plot_topo_image_epoch": 804, "plot_vector_source_estim": 806, "plot_volume_source_estim": 807, "set_3d_backend": 808, "set_3d_opt": 809, "set_3d_titl": 810, "set_3d_view": 811, "set_browser_backend": 812, "snapshot_brain_montag": 813, "use_3d_backend": 814, "use_browser_backend": 815, "warp_montage_volum": 816, "write_bem_solut": 818, "write_bem_surfac": 819, "write_cov": 820, "write_ev": 821, "write_evok": 822, "write_forward_solut": 823, "write_head_bem": 824, "write_label": 825, "write_labels_to_annot": 826, "write_proj": 827, "write_source_spac": 828, "write_surfac": 829, "write_tran": 830, "glossari": 831, "homepag": 832, "jupyt": 833, "notebook": 833, "jupyterlab": 833, "fa": [833, 841], "brand": [833, 841], "window": [833, 855], "instal": [833, 834, 836, 837, 838, 839, 840, 841, 842], "headless": 833, "linux": 833, "server": 833, "develop": [833, 835, 843, 854], "version": [833, 843, 876], "gpu": 833, "acceler": 833, "screen": 833, "mesa": 833, "troubleshoot": [833, 841], "troubl": 833, "upgrad": [833, 843], "maco": [833, 841, 855], "contribut": 835, "guid": 835, "git": 835, "gnu": 835, "fork": 835, "repositori": 835, "virtual": 835, "github": 835, "ssh": 835, "convent": 835, "requir": [835, 841], "must": 835, "have": [835, 851, 855], "coverag": 835, "document": [835, 857, 859, 861, 863, 864], "avoid": 835, "api": [835, 853, 864, 866, 876], "possibl": 835, "decor": 835, "changelog": [835, 876], "contributor": 835, "recur": 835, "pull": 835, "request": 835, "pr": 835, "fast": 835, "thorough": 835, "style": 835, "adher": 835, "guidelin": [835, 863], "we": 835, "mostli": [835, 853], "follow": 835, "numpi": [835, 858], "docstr": 835, "everywher": 835, "guidanc": 835, "organ": [835, 853, 858], "return": 835, "run": [835, 855], "suit": [835, 842], "build": 835, "pip": 839, "conda": 839, "depend": [839, 876], "minim": 839, "scenario": 839, "appl": 841, "download": [841, 855], "help": [842, 855, 856], "updat": [843, 864], "martino": 846, "cpp": 847, "most": 848, "typic": 851, "m": [851, 855], "recommend": 851, "subdivis": 851, "icosahedron": 851, "octahedron": 851, "creation": 851, "approxim": 851, "area": 851, "been": 851, "assum": 851, "1000": 851, "cm2": 851, "mesh": [851, 855, 858], "triangul": 851, "boundari": [851, 858], "element": [851, 858], "trigger": 852, "ucl": 852, "state": 852, "somatosensori": 852, "92": 852, "categori": 852, "polysomnograph": 852, "databas": [852, 864], "miscellan": 852, "integr": [853, 864], "scientif": 853, "stack": 853, "submodul": 853, "unifi": 853, "In": [853, 864], "frequent": 855, "ask": 855, "question": 855, "faq": 855, "issu": 855, "can": 855, "pyvista": 855, "extrem": 855, "even": 855, "sure": 855, "x": 855, "my": 855, "y": 855, "think": 855, "bug": [855, 876], "danger": 855, "pickl": 855, "later": 855, "onc": 855, "again": 855, "cpu": 855, "though": 855, "didn": 855, "tell": 855, "mysteri": 855, "take": 855, "forev": 855, "incorrect": 855, "govern": 857, "bdfl": 857, "steer": [857, 863], "council": [857, 863], "membership": 857, "conflict": 857, "privat": 857, "commun": [857, 863], "decis": 857, "histori": [857, 863], "acknowledg": 857, "licens": 857, "implement": 858, "detail": [858, 861], "intern": 858, "float": 858, "precis": 858, "effici": [858, 864], "preload": 858, "explicitli": 858, "access": [858, 864], "concept": 858, "subspac": 858, "tessel": 858, "discret": 858, "geometri": [858, 861], "coil": [858, 861], "magnet": 858, "normal": 858, "accur": 858, "accuraci": 858, "purpos": 858, "patch": 858, "constraint": 858, "weight": 858, "matlab": 861, "routin": 861, "w": 861, "demonstr": 861, "toolbox": 861, "constant": 861, "taginfo": 861, "dig": 861, "coildef": 861, "see": 861, "ch": 861, "proj": 861, "comp": 861, "mea": 861, "surf": 861, "inv": 861, "reginv": 861, "noisenorm": 861, "fill": 861, "mne_prepare_inverse_oper": 861, "benevol": 863, "dictat": 863, "life": 863, "particip": 863, "lead": 863, "roadmap": 864, "page": 864, "openmeeg": 864, "improv": 864, "bind": 864, "progress": 864, "divers": 864, "equiti": 864, "inclus": 864, "dei": 864, "deep": 864, "better": 864, "db": 864, "pediatr": 864, "complet": 864, "overhaul": 864, "realtim": 868, "dev0": 876, "0": 876, "2022": 876, "21": 876, "author": 876, "10": 876, "11": 876, "08": 876, "03": 876, "behavior": 876, "24": 876, "2021": 876, "23": 876, "04": 876, "27": 876, "22": 876, "2020": 876, "17": 876, "09": 876, "20": 876, "19": 876, "2019": 876, "18": 876, "05": 876, "2018": 876, "16": 876, "01": 876, "2017": 876, "14": 876, "13": 876, "2016": 876, "2015": 876, "26": 876, "9": 876, "8": 876, "2014": 876, "06": 876, "25": 876, "7": 876, "2013": 876, "6": 876, "5": 876, "2012": 876, "2011": 876}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinxcontrib.bibtex": 9, "sphinx": 57}, "alltitles": {"Connectivity Analysis Examples": [[0, "connectivity-analysis-examples"], [27, "connectivity-analysis-examples"]], "Brainstorm raw (median nerve) dataset": [[1, "brainstorm-raw-median-nerve-dataset"]], "References": [[1, "references"], [4, "references"], [8, "references"], [10, "references"], [12, "references"], [13, "references"], [15, "references"], [16, "references"], [18, "references"], [19, "references"], [21, "references"], [33, "references"], [35, "references"], [40, "references"], [42, "references"], [43, "references"], [44, "references"], [46, "references"], [51, "references"], [54, "references"], [55, "references"], [58, "references"], [59, "references"], [65, "references"], [69, "references"], [70, "references"], [73, "references"], [74, "references"], [77, "references"], [81, "references"], [82, "references"], [86, "references"], [92, "references"], [99, "references"], [107, "references"], [110, "references"], [111, "references"], [115, "references"], [117, "references"], [119, "references"], [124, "references"], [127, "references"], [133, "references"], [136, "references"], [140, "references"], [143, "references"], [150, "references"], [154, "references"], [156, "references"], [161, "references"], [175, "references"], [177, "references"], [179, "references"], [182, "references"], [183, "references"], [190, "references"], [193, "references"], [194, "references"], [198, "references"], [200, "references"], [202, "references"], [203, "references"], [204, "references"], [205, "references"], [206, "references"], [208, "references"], [210, "references"], [221, "references"], [224, "references"], [225, "references"], [229, "references"], [237, "references"], [851, "references"], [852, "references"], [855, "references"], [858, "references"]], "HF-SEF dataset": [[2, "hf-sef-dataset"]], "Examples on open datasets": [[3, "examples-on-open-datasets"], [27, "examples-on-open-datasets"]], "Single trial linear regression analysis with the LIMO dataset": [[4, "single-trial-linear-regression-analysis-with-the-limo-dataset"]], "About the data": [[4, "about-the-data"]], "Load the data": [[4, "load-the-data"], [136, "load-the-data"], [140, "load-the-data"], [158, "load-the-data"]], "Visualize events": [[4, "visualize-events"]], "Visualize condition ERPs": [[4, "visualize-condition-erps"]], "Visualize effect of stimulus phase-coherence": [[4, "visualize-effect-of-stimulus-phase-coherence"]], "Prepare data for linear regression analysis": [[4, "prepare-data-for-linear-regression-analysis"]], "Define predictor variables and design matrix": [[4, "define-predictor-variables-and-design-matrix"]], "Extract regression coefficients": [[4, "extract-regression-coefficients"]], "Plot model results": [[4, "plot-model-results"]], "Optically pumped magnetometer (OPM) data": [[5, "optically-pumped-magnetometer-opm-data"]], "Prepare data for localization": [[5, "prepare-data-for-localization"]], "Perform dipole fitting": [[5, "perform-dipole-fitting"]], "Perform minimum-norm localization": [[5, "perform-minimum-norm-localization"]], "Computation times": [[6, "computation-times"], [20, "computation-times"], [25, "computation-times"], [56, "computation-times"], [66, "computation-times"], [83, "computation-times"], [89, "computation-times"], [100, "computation-times"], [104, "computation-times"], [128, "computation-times"], [138, "computation-times"], [147, "computation-times"], [153, "computation-times"], [163, "computation-times"], [173, "computation-times"], [186, "computation-times"], [192, "computation-times"], [196, "computation-times"], [212, "computation-times"], [218, "computation-times"], [223, "computation-times"], [231, "computation-times"], [236, "computation-times"], [241, "computation-times"]], "From raw data to dSPM on SPM Faces dataset": [[7, "from-raw-data-to-dspm-on-spm-faces-dataset"]], "Motor imagery decoding from EEG data using the Common Spatial Pattern (CSP)": [[8, "motor-imagery-decoding-from-eeg-data-using-the-common-spatial-pattern-csp"]], "Decoding in time-frequency space using Common Spatial Patterns (CSP)": [[9, "decoding-in-time-frequency-space-using-common-spatial-patterns-csp"]], "Representational Similarity Analysis": [[10, "representational-similarity-analysis"]], "Decoding source space data": [[11, "decoding-source-space-data"]], "Continuous Target Decoding with SPoC": [[12, "continuous-target-decoding-with-spoc"]], "Decoding sensor space data with generalization across time and conditions": [[13, "decoding-sensor-space-data-with-generalization-across-time-and-conditions"]], "Analysis of evoked response using ICA and PCA reduction techniques": [[14, "analysis-of-evoked-response-using-ica-and-pca-reduction-techniques"]], "XDAWN Decoding From EEG data": [[15, "xdawn-decoding-from-eeg-data"]], "Compute effect-matched-spatial filtering (EMS)": [[16, "compute-effect-matched-spatial-filtering-ems"]], "Machine Learning (Decoding, Encoding, and MVPA)": [[17, "machine-learning-decoding-encoding-and-mvpa"], [27, "machine-learning-decoding-encoding-and-mvpa"]], "Linear classifier on sensor data with plot patterns and filters": [[18, "linear-classifier-on-sensor-data-with-plot-patterns-and-filters"]], "Decoding in sensor space using a LogisticRegression classifier": [[18, "decoding-in-sensor-space-using-a-logisticregression-classifier"]], "Receptive Field Estimation and Prediction": [[19, "receptive-field-estimation-and-prediction"]], "Load the data from the publication": [[19, "load-the-data-from-the-publication"]], "Create and fit a receptive field model": [[19, "create-and-fit-a-receptive-field-model"]], "Investigate model coefficients": [[19, "investigate-model-coefficients"], [19, "id5"]], "Create and fit a stimulus reconstruction model": [[19, "create-and-fit-a-stimulus-reconstruction-model"]], "Visualize stimulus reconstruction": [[19, "visualize-stimulus-reconstruction"]], "Compute Spectro-Spatial Decomposition (SSD) spatial filters": [[21, "compute-spectro-spatial-decomposition-ssd-spatial-filters"]], "Epoched data": [[21, "epoched-data"]], "Display sensitivity maps for EEG and MEG sensors": [[22, "display-sensitivity-maps-for-eeg-and-meg-sensors"]], "Forward modeling": [[23, "forward-modeling"], [27, "forward-modeling"]], "Generate a left cerebellum volume source space": [[24, "generate-a-left-cerebellum-volume-source-space"]], "Use source space morphing": [[26, "use-source-space-morphing"]], "Examples Gallery": [[27, "examples-gallery"]], "Input/Output": [[27, "input-output"], [62, "input-output"]], "Data Simulation": [[27, "data-simulation"], [87, "data-simulation"]], "Preprocessing": [[27, "preprocessing"], [76, "preprocessing"], [107, "preprocessing"], [140, "preprocessing"], [164, "preprocessing"], [165, "preprocessing"], [211, "preprocessing"], [851, "preprocessing"], [865, "preprocessing"]], "Visualization": [[27, "visualization"], [55, "visualization"], [120, "visualization"], [176, "visualization"], [835, "visualization"], [875, "visualization"]], "Time-Frequency Examples": [[27, "time-frequency-examples"], [103, "time-frequency-examples"]], "Statistics Examples": [[27, "statistics-examples"], [96, "statistics-examples"]], "Inverse problem and source analysis": [[27, "inverse-problem-and-source-analysis"], [36, "inverse-problem-and-source-analysis"]], "Compute MNE-dSPM inverse solution on single epochs": [[28, "compute-mne-dspm-inverse-solution-on-single-epochs"]], "Compute sLORETA inverse solution on raw data": [[29, "compute-sloreta-inverse-solution-on-raw-data"]], "Compute MNE-dSPM inverse solution on evoked data in volume source space": [[30, "compute-mne-dspm-inverse-solution-on-evoked-data-in-volume-source-space"]], "Source localization with a custom inverse solver": [[31, "source-localization-with-a-custom-inverse-solver"]], "Compute source level time-frequency timecourses using a DICS beamformer": [[32, "compute-source-level-time-frequency-timecourses-using-a-dics-beamformer"]], "Compute source power using DICS beamformer": [[33, "compute-source-power-using-dics-beamformer"]], "Compute evoked ERS source power using DICS, LCMV beamformer, and dSPM": [[34, "compute-evoked-ers-source-power-using-dics-lcmv-beamformer-and-dspm"]], "Compute covariances": [[34, "compute-covariances"]], "Compute some source estimates": [[34, "compute-some-source-estimates"]], "Plot source estimates": [[34, "plot-source-estimates"]], "Compute a sparse inverse solution using the Gamma-MAP empirical Bayesian method": [[35, "compute-a-sparse-inverse-solution-using-the-gamma-map-empirical-bayesian-method"]], "Extracting time course from source_estimate object": [[37, "extracting-time-course-from-source-estimate-object"]], "Generate a functional label from source estimates": [[38, "generate-a-functional-label-from-source-estimates"]], "Extracting the time series of activations in a label": [[39, "extracting-the-time-series-of-activations-in-a-label"]], "Compute inverse solution": [[39, "compute-inverse-solution"], [41, "compute-inverse-solution"], [176, "compute-inverse-solution"]], "View source activations": [[39, "view-source-activations"]], "Using vector solutions": [[39, "using-vector-solutions"]], "Compute sparse inverse solution with mixed norm: MxNE and irMxNE": [[40, "compute-sparse-inverse-solution-with-mixed-norm-mxne-and-irmxne"]], "Compute MNE inverse solution on evoked data with a mixed source space": [[41, "compute-mne-inverse-solution-on-evoked-data-with-a-mixed-source-space"]], "Set up our source space": [[41, "set-up-our-source-space"]], "View the source space": [[41, "view-the-source-space"]], "Compute the fwd matrix": [[41, "compute-the-fwd-matrix"]], "Plot the mixed source estimate": [[41, "plot-the-mixed-source-estimate"]], "Plot the surface": [[41, "plot-the-surface"]], "Plot the volume": [[41, "plot-the-volume"]], "Process labels": [[41, "process-labels"]], "Compute source power estimate by projecting the covariance with MNE": [[42, "compute-source-power-estimate-by-projecting-the-covariance-with-mne"]], "Compute empty-room covariance": [[42, "compute-empty-room-covariance"]], "Epoch the data": [[42, "epoch-the-data"]], "Compute and plot covariances": [[42, "compute-and-plot-covariances"]], "Apply inverse operator to covariance": [[42, "apply-inverse-operator-to-covariance"]], "Morph surface source estimate": [[43, "morph-surface-source-estimate"]], "Setting up SourceMorph for SourceEstimate": [[43, "setting-up-sourcemorph-for-sourceestimate"]], "Apply morph to (Vector) SourceEstimate": [[43, "apply-morph-to-vector-sourceestimate"]], "Plot results": [[43, "plot-results"], [44, "plot-results"]], "Reading and writing SourceMorph from and to disk": [[43, "reading-and-writing-sourcemorph-from-and-to-disk"], [44, "reading-and-writing-sourcemorph-from-and-to-disk"]], "Morph volumetric source estimate": [[44, "morph-volumetric-source-estimate"]], "Get a SourceMorph object for VolSourceEstimate": [[44, "get-a-sourcemorph-object-for-volsourceestimate"]], "Apply morph to VolSourceEstimate": [[44, "apply-morph-to-volsourceestimate"]], "Convert morphed VolSourceEstimate into NIfTI": [[44, "convert-morphed-volsourceestimate-into-nifti"]], "Computing source timecourses with an XFit-like multi-dipole model": [[45, "computing-source-timecourses-with-an-xfit-like-multi-dipole-model"]], "Compute iterative reweighted TF-MxNE with multiscale time-frequency dictionary": [[46, "compute-iterative-reweighted-tf-mxne-with-multiscale-time-frequency-dictionary"]], "Visualize source leakage among labels using a circular graph": [[47, "visualize-source-leakage-among-labels-using-a-circular-graph"]], "Load forward solution and inverse operator": [[47, "load-forward-solution-and-inverse-operator"]], "Read and organise labels for cortical parcellation": [[47, "read-and-organise-labels-for-cortical-parcellation"]], "Compute point-spread function summaries (PCA) for all labels": [[47, "compute-point-spread-function-summaries-pca-for-all-labels"]], "Evaluate leakage based on label-to-label PSF correlations": [[47, "evaluate-leakage-based-on-label-to-label-psf-correlations"]], "Save the figure (optional)": [[47, "save-the-figure-optional"]], "Plot PSFs for individual labels": [[47, "plot-psfs-for-individual-labels"]], "Plot point-spread functions (PSFs) and cross-talk functions (CTFs)": [[48, "plot-point-spread-functions-psfs-and-cross-talk-functions-ctfs"]], "Visualize": [[48, "visualize"], [49, "visualize"], [50, "visualize"]], "Compute cross-talk functions for LCMV beamformers": [[49, "compute-cross-talk-functions-for-lcmv-beamformers"]], "Compute LCMV filters with different data covariance matrices": [[49, "compute-lcmv-filters-with-different-data-covariance-matrices"]], "Compute resolution matrices for the two LCMV beamformers": [[49, "compute-resolution-matrices-for-the-two-lcmv-beamformers"]], "Plot point-spread functions (PSFs) for a volume": [[50, "plot-point-spread-functions-psfs-for-a-volume"]], "Compute Rap-Music on evoked data": [[51, "compute-rap-music-on-evoked-data"]], "Reading an inverse operator": [[52, "reading-an-inverse-operator"]], "Reading an STC file": [[53, "reading-an-stc-file"]], "Compute spatial resolution metrics in source space": [[54, "compute-spatial-resolution-metrics-in-source-space"]], "MNE": [[54, "mne"]], "dSPM": [[54, "dspm"], [858, "dspm"]], "Visualize results": [[54, "visualize-results"]], "Compute spatial resolution metrics to compare MEG with EEG+MEG": [[55, "compute-spatial-resolution-metrics-to-compare-meg-with-eeg-meg"]], "EEGMEG": [[55, "eegmeg"]], "MEG": [[55, "meg"]], "Estimate data SNR using an inverse": [[57, "estimate-data-snr-using-an-inverse"]], "Computing source space SNR": [[58, "computing-source-space-snr"]], "EEG": [[58, "eeg"]], "Compute MxNE with time-frequency sparse prior": [[59, "compute-mxne-with-time-frequency-sparse-prior"]], "Plotting the full vector-valued MNE solution": [[60, "plotting-the-full-vector-valued-mne-solution"]], "Getting averaging info from .fif files": [[61, "getting-averaging-info-from-fif-files"]], "How to use data in neural ensemble (NEO) format": [[63, "how-to-use-data-in-neural-ensemble-neo-format"]], "Reading/Writing a noise covariance matrix": [[64, "reading-writing-a-noise-covariance-matrix"]], "Reading XDF EEG data": [[65, "reading-xdf-eeg-data"]], "Cortical Signal Suppression (CSS) for removal of cortical signals": [[67, "cortical-signal-suppression-css-for-removal-of-cortical-signals"]], "Define target events based on time lag, plot evoked response": [[68, "define-target-events-based-on-time-lag-plot-evoked-response"]], "Identify EEG Electrodes Bridged by too much Gel": [[69, "ex-eeg-bridging"]], "Compute Electrical Distance Metric": [[69, "compute-electrical-distance-metric"]], "Examine an Electrical Distance Matrix": [[69, "examine-an-electrical-distance-matrix"]], "Examine the Distribution of Electrical Distances": [[69, "examine-the-distribution-of-electrical-distances"]], "Plot Electrical Distances on a Topomap": [[69, "plot-electrical-distances-on-a-topomap"]], "Plot the Raw Voltage Time Series for Bridged Electrodes": [[69, "plot-the-raw-voltage-time-series-for-bridged-electrodes"]], "Compare Bridging Across Subjects in the EEGBCI Dataset": [[69, "compare-bridging-across-subjects-in-the-eegbci-dataset"]], "The Relationship Between Bridging and Impedances": [[69, "the-relationship-between-bridging-and-impedances"]], "Summary": [[69, "summary"], [166, "summary"], [174, "summary"], [197, "summary"], [198, "summary"], [200, "summary"]], "Transform EEG data using current source density (CSD)": [[70, "transform-eeg-data-using-current-source-density-csd"]], "Show EOG artifact timing": [[71, "show-eog-artifact-timing"]], "Reduce EOG artifacts through regression": [[72, "reduce-eog-artifacts-through-regression"]], "Import packages and load data": [[72, "import-packages-and-load-data"]], "Perform regression and remove EOG": [[72, "perform-regression-and-remove-eog"]], "Before/after comparison": [[72, "before-after-comparison"]], "Find MEG reference channel artifacts": [[73, "find-meg-reference-channel-artifacts"]], "Visualise NIRS artifact correction methods": [[74, "visualise-nirs-artifact-correction-methods"]], "Import data": [[74, "import-data"]], "Add artificial artifacts to data": [[74, "add-artificial-artifacts-to-data"]], "Apply temporal derivative distribution repair": [[74, "apply-temporal-derivative-distribution-repair"]], "Compare the different ICA algorithms in MNE": [[75, "compare-the-different-ica-algorithms-in-mne"]], "Interpolate bad channels for MEG/EEG channels": [[77, "interpolate-bad-channels-for-meg-eeg-channels"]], "Maxwell filter data with movement compensation": [[78, "maxwell-filter-data-with-movement-compensation"]], "Annotate movement artifacts and reestimate dev_head_t": [[79, "annotate-movement-artifacts-and-reestimate-dev-head-t"]], "Plot continuous head position with respect to the mean recording position": [[79, "plot-continuous-head-position-with-respect-to-the-mean-recording-position"]], "Plot raw data with annotated movement": [[79, "plot-raw-data-with-annotated-movement"]], "Annotate muscle artifacts": [[80, "annotate-muscle-artifacts"]], "Plot muscle z-scores across recording": [[80, "plot-muscle-z-scores-across-recording"]], "View the annotations": [[80, "view-the-annotations"]], "Removing muscle ICA components": [[81, "removing-muscle-ica-components"]], "Let\u2019s now replicate this on the EEGBCI dataset": [[81, "let-s-now-replicate-this-on-the-eegbci-dataset"]], "Plot sensor denoising using oversampled temporal projection": [[82, "plot-sensor-denoising-using-oversampled-temporal-projection"]], "Shifting time-scale in evoked data": [[84, "shifting-time-scale-in-evoked-data"]], "Remap MEG channel types": [[85, "remap-meg-channel-types"]], "XDAWN Denoising": [[86, "xdawn-denoising"]], "Compare simulated and estimated source activity": [[88, "compare-simulated-and-estimated-source-activity"]], "Define main parameters of sources": [[88, "define-main-parameters-of-sources"]], "Create simulated source activity": [[88, "create-simulated-source-activity"], [92, "create-simulated-source-activity"]], "Simulate raw data": [[88, "simulate-raw-data"], [92, "simulate-raw-data"]], "Compute evoked from raw data": [[88, "compute-evoked-from-raw-data"]], "Create true stcs corresponding to evoked": [[88, "create-true-stcs-corresponding-to-evoked"]], "Reconstruct simulated sources": [[88, "reconstruct-simulated-sources"]], "Compute performance scores for different source amplitude thresholds": [[88, "compute-performance-scores-for-different-source-amplitude-thresholds"]], "For region": [[88, "for-region"]], "For Dipoles": [[88, "for-dipoles"]], "Generate simulated evoked data": [[90, "generate-simulated-evoked-data"]], "Generate simulated raw data": [[91, "generate-simulated-raw-data"]], "Simulate raw data using subject anatomy": [[92, "simulate-raw-data-using-subject-anatomy"]], "Extract epochs and compute evoked responsses": [[92, "extract-epochs-and-compute-evoked-responsses"]], "Reconstruct simulated source time courses using dSPM inverse operator": [[92, "reconstruct-simulated-source-time-courses-using-dspm-inverse-operator"]], "Generate simulated source data": [[93, "generate-simulated-source-data"]], "Permutation F-test on sensor data with 1D cluster level": [[94, "permutation-f-test-on-sensor-data-with-1d-cluster-level"]], "FDR correction on T-test on sensor data": [[95, "fdr-correction-on-t-test-on-sensor-data"]], "Regression on continuous data (rER[P/F])": [[97, "regression-on-continuous-data-rer-p-f"]], "Permutation T-test on sensor data": [[98, "permutation-t-test-on-sensor-data"]], "Analysing continuous features with binning and regression in sensor space": [[99, "analysing-continuous-features-with-binning-and-regression-in-sensor-space"]], "Compute a cross-spectral density (CSD) matrix": [[101, "compute-a-cross-spectral-density-csd-matrix"]], "Compute Power Spectral Density of inverse solution from single epochs": [[102, "compute-power-spectral-density-of-inverse-solution-from-single-epochs"]], "Compute source space PSD in label": [[102, "compute-source-space-psd-in-label"]], "Compute power and phase lock in label of the source space": [[105, "compute-power-and-phase-lock-in-label-of-the-source-space"]], "Compute source power spectral density (PSD) in a label": [[106, "compute-source-power-spectral-density-psd-in-a-label"]], "Compute source power spectral density (PSD) of VectorView and OPM data": [[107, "compute-source-power-spectral-density-psd-of-vectorview-and-opm-data"]], "Alignment and forward": [[107, "alignment-and-forward"]], "Alpha": [[107, "alpha"]], "Beta": [[107, "beta"]], "Compute induced power in the source space with dSPM": [[108, "compute-induced-power-in-the-source-space-with-dspm"]], "Temporal whitening with AR model": [[109, "temporal-whitening-with-ar-model"]], "Compute and visualize ERDS maps": [[110, "compute-and-visualize-erds-maps"]], "Explore event-related dynamics for specific frequency bands": [[111, "explore-event-related-dynamics-for-specific-frequency-bands"]], "Time-frequency on simulated data (Multitaper vs. Morlet vs. Stockwell vs. Hilbert)": [[112, "time-frequency-on-simulated-data-multitaper-vs-morlet-vs-stockwell-vs-hilbert"]], "Simulate data": [[112, "simulate-data"]], "Calculate a time-frequency representation (TFR)": [[112, "calculate-a-time-frequency-representation-tfr"]], "Multitaper transform": [[112, "multitaper-transform"]], "Stockwell (S) transform": [[112, "stockwell-s-transform"]], "Morlet Wavelets": [[112, "morlet-wavelets"]], "Narrow-bandpass Filter and Hilbert Transform": [[112, "narrow-bandpass-filter-and-hilbert-transform"]], "Calculating a TFR without averaging over epochs": [[112, "calculating-a-tfr-without-averaging-over-epochs"]], "Operating on arrays": [[112, "operating-on-arrays"]], "How to convert 3D electrode positions to a 2D image": [[113, "how-to-convert-3d-electrode-positions-to-a-2d-image"]], "Load data": [[113, "load-data"], [114, "load-data"], [177, "load-data"]], "Project 3D electrodes to a 2D snapshot": [[113, "project-3d-electrodes-to-a-2d-snapshot"]], "Manually creating 2D electrode positions": [[113, "manually-creating-2d-electrode-positions"]], "Plotting with mne.viz.Brain": [[114, "plotting-with-mne-viz-brain"]], "Add source information": [[114, "add-source-information"]], "Modify the view of the brain": [[114, "modify-the-view-of-the-brain"]], "Highlight a region on the brain": [[114, "highlight-a-region-on-the-brain"]], "Include the head in the image": [[114, "include-the-head-in-the-image"]], "Add sensors positions": [[114, "add-sensors-positions"]], "Add current dipoles": [[114, "add-current-dipoles"]], "Create a screenshot for exporting the brain image": [[114, "create-a-screenshot-for-exporting-the-brain-image"]], "Visualize channel over epochs as an image": [[115, "visualize-channel-over-epochs-as-an-image"]], "Plotting EEG sensors on the scalp": [[116, "plotting-eeg-sensors-on-the-scalp"]], "Plotting topographic arrowmaps of evoked data": [[117, "plotting-topographic-arrowmaps-of-evoked-data"]], "Plotting topographic maps of evoked data": [[118, "plotting-topographic-maps-of-evoked-data"]], "Basic plot_topomap() options": [[118, "basic-plot-topomap-options"]], "Additional plot_topomap() options": [[118, "additional-plot-topomap-options"]], "More advanced usage": [[118, "more-advanced-usage"]], "Interpolating topomaps": [[118, "interpolating-topomaps"]], "Animating the topomap": [[118, "animating-the-topomap"]], "Whitening evoked data with a noise covariance": [[119, "whitening-evoked-data-with-a-noise-covariance"]], "Plotting sensor layouts of MEG systems": [[121, "plotting-sensor-layouts-of-meg-systems"]], "Neuromag": [[121, "neuromag"]], "CTF": [[121, "ctf"]], "BTi": [[121, "bti"]], "KIT": [[121, "kit"]], "Artemis123": [[121, "artemis123"]], "Plot the MNE brain and helmet": [[122, "plot-the-mne-brain-and-helmet"]], "Plotting sensor layouts of EEG systems": [[123, "plotting-sensor-layouts-of-eeg-systems"]], "Plot a cortical parcellation": [[124, "plot-a-cortical-parcellation"]], "Make figures more publication ready": [[125, "make-figures-more-publication-ready"]], "Imports": [[125, "imports"]], "Evoked plot with brain activation": [[125, "evoked-plot-with-brain-activation"]], "Custom timecourse with montage inset": [[125, "custom-timecourse-with-montage-inset"]], "Plot single trial activity, grouped by ROI and sorted by RT": [[126, "plot-single-trial-activity-grouped-by-roi-and-sorted-by-rt"]], "Show noise levels from empty room data": [[127, "show-noise-levels-from-empty-room-data"]], "Sensitivity map of SSP projections": [[129, "sensitivity-map-of-ssp-projections"]], "Compare evoked responses for different conditions": [[130, "compare-evoked-responses-for-different-conditions"]], "Plot custom topographies for MEG sensors": [[131, "plot-custom-topographies-for-meg-sensors"]], "Cross-hemisphere comparison": [[132, "cross-hemisphere-comparison"]], "Locating intracranial electrode contacts": [[133, "locating-intracranial-electrode-contacts"]], "Aligning the T1 to ACPC": [[133, "aligning-the-t1-to-acpc"]], "Freesurfer recon-all": [[133, "freesurfer-recon-all"]], "Aligning the CT to the MR": [[133, "aligning-the-ct-to-the-mr"]], "Marking the Location of Each Electrode Contact": [[133, "marking-the-location-of-each-electrode-contact"]], "Warping to a Common Atlas": [[133, "warping-to-a-common-atlas"]], "Working with sEEG data": [[134, "working-with-seeg-data"]], "Working with ECoG data": [[135, "working-with-ecog-data"]], "Load in data and perform basic preprocessing": [[135, "load-in-data-and-perform-basic-preprocessing"]], "Explore the electrodes on a template brain": [[135, "explore-the-electrodes-on-a-template-brain"]], "Compute frequency features of the data": [[135, "compute-frequency-features-of-the-data"]], "Plot Gamma Power on cortical sensors": [[135, "plot-gamma-power-on-cortical-sensors"]], "Visualize the time-evolution of the gamma power on the brain": [[135, "visualize-the-time-evolution-of-the-gamma-power-on-the-brain"]], "Sleep stage classification from polysomnography (PSG) data": [[136, "sleep-stage-classification-from-polysomnography-psg-data"]], "Read the PSG data and Hypnograms to create a raw object": [[136, "read-the-psg-data-and-hypnograms-to-create-a-raw-object"]], "Extract 30s events from annotations": [[136, "extract-30s-events-from-annotations"]], "Create Epochs from the data based on the events found in the annotations": [[136, "create-epochs-from-the-data-based-on-the-events-found-in-the-annotations"]], "Applying the same steps to the test data from Bob": [[136, "applying-the-same-steps-to-the-test-data-from-bob"]], "Feature Engineering": [[136, "feature-engineering"]], "Design a scikit-learn transformer from a Python function": [[136, "design-a-scikit-learn-transformer-from-a-python-function"]], "Multiclass classification workflow using scikit-learn": [[136, "multiclass-classification-workflow-using-scikit-learn"]], "Further analysis of the data": [[136, "further-analysis-of-the-data"]], "Exercise": [[136, "exercise"], [157, "exercise"], [194, "exercise"], [238, "exercise"]], "Clinical applications": [[137, "clinical-applications"], [164, "clinical-applications"]], "The Epochs data structure: discontinuous data": [[139, "the-epochs-data-structure-discontinuous-data"]], "Creating Epoched data from a Raw object": [[139, "creating-epoched-data-from-a-raw-object"]], "Basic visualization of Epochs objects": [[139, "basic-visualization-of-epochs-objects"]], "Subselecting epochs": [[139, "subselecting-epochs"]], "Selecting epochs by index": [[139, "selecting-epochs-by-index"]], "Selecting, dropping, and reordering channels": [[139, "selecting-dropping-and-reordering-channels"], [148, "selecting-dropping-and-reordering-channels"], [213, "selecting-dropping-and-reordering-channels"]], "Changing channel name and type": [[139, "changing-channel-name-and-type"], [213, "changing-channel-name-and-type"]], "Selection in the time domain": [[139, "selection-in-the-time-domain"], [213, "selection-in-the-time-domain"]], "Extracting data in other forms": [[139, "extracting-data-in-other-forms"]], "Loading and saving Epochs objects to disk": [[139, "loading-and-saving-epochs-objects-to-disk"]], "Iterating over Epochs": [[139, "iterating-over-epochs"]], "Regression-based baseline correction": [[140, "regression-based-baseline-correction"]], "Traditional baselining": [[140, "traditional-baselining"]], "Regression-based baselining": [[140, "regression-based-baselining"]], "Plot the baseline regressor": [[140, "plot-the-baseline-regressor"]], "Plot the ERPs": [[140, "plot-the-erps"]], "Plot the scalp topographies and difference waves": [[140, "plot-the-scalp-topographies-and-difference-waves"]], "Examine the interaction term": [[140, "examine-the-interaction-term"]], "Visualizing epoched data": [[141, "visualizing-epoched-data"]], "Plotting Epochs as time series": [[141, "plotting-epochs-as-time-series"]], "Interactivity in pipelines and scripts": [[141, null]], "Plotting projectors from an Epochs object": [[141, "plotting-projectors-from-an-epochs-object"]], "Plotting sensor locations": [[141, "plotting-sensor-locations"]], "Plotting the power spectrum of Epochs": [[141, "plotting-the-power-spectrum-of-epochs"]], "Plotting Epochs as an image map": [[141, "plotting-epochs-as-an-image-map"]], "Working with Epoch metadata": [[142, "working-with-epoch-metadata"]], "Viewing Epochs metadata": [[142, "viewing-epochs-metadata"]], "Restrictions on metadata DataFrames": [[142, null]], "Modifying the metadata": [[142, "modifying-the-metadata"]], "Selecting epochs using metadata queries": [[142, "selecting-epochs-using-metadata-queries"]], "Adding metadata to an Epochs object": [[142, "adding-metadata-to-an-epochs-object"]], "Auto-generating Epochs metadata": [[143, "auto-generating-epochs-metadata"]], "Preparation": [[143, "preparation"]], "Creating metadata from events": [[143, "creating-metadata-from-events"]], "The basics of make_metadata": [[143, "the-basics-of-make-metadata"]], "Specifying time-locked events": [[143, "specifying-time-locked-events"]], "Keeping only the first events of a group": [[143, "keeping-only-the-first-events-of-a-group"]], "Adding new columns to describe stimulation side and response correctness": [[143, "adding-new-columns-to-describe-stimulation-side-and-response-correctness"]], "Creating Epochs with metadata, and visualizing ERPs": [[143, "creating-epochs-with-metadata-and-visualizing-erps"]], "Applying the knowledge: visualizing the ERN component": [[143, "applying-the-knowledge-visualizing-the-ern-component"]], "Exporting Epochs to Pandas DataFrames": [[144, "exporting-epochs-to-pandas-dataframes"]], "Converting an Epochs object to a DataFrame": [[144, "converting-an-epochs-object-to-a-dataframe"]], "Scaling time and channel values": [[144, "scaling-time-and-channel-values"]], "Setting the index": [[144, "setting-the-index"]], "Wide- versus long-format DataFrames": [[144, "wide-versus-long-format-dataframes"]], "Divide continuous data into equally-spaced epochs": [[145, "divide-continuous-data-into-equally-spaced-epochs"]], "Characteristics of Fixed Length Epochs": [[145, "characteristics-of-fixed-length-epochs"]], "Example Use Case for Fixed Length Epochs: Connectivity Analysis": [[145, "example-use-case-for-fixed-length-epochs-connectivity-analysis"]], "Segmenting continuous data into epochs": [[146, "segmenting-continuous-data-into-epochs"], [164, "segmenting-continuous-data-into-epochs"]], "The Evoked data structure: evoked/averaged data": [[148, "the-evoked-data-structure-evoked-averaged-data"]], "Creating Evoked objects from Epochs": [[148, "creating-evoked-objects-from-epochs"]], "Basic visualization of Evoked objects": [[148, "basic-visualization-of-evoked-objects"]], "Subsetting Evoked data": [[148, "subsetting-evoked-data"]], "Evokeds are not memory-mapped": [[148, null]], "Similarities among the core data structures": [[148, "similarities-among-the-core-data-structures"]], "Loading and saving Evoked data": [[148, "loading-and-saving-evoked-data"]], "Combining Evoked objects": [[148, "combining-evoked-objects"]], "Other uses of Evoked objects": [[148, "other-uses-of-evoked-objects"]], "Visualizing Evoked data": [[149, "visualizing-evoked-data"]], "Plotting signal traces": [[149, "plotting-signal-traces"]], "Butterfly plots": [[149, null]], "Plotting scalp topographies": [[149, "plotting-scalp-topographies"]], "Arrow maps": [[149, "arrow-maps"]], "Joint plots": [[149, "joint-plots"]], "Comparing Evoked objects": [[149, "comparing-evoked-objects"]], "Image plots": [[149, "image-plots"]], "Topographical subplots": [[149, "topographical-subplots"]], "3D Field Maps": [[149, "d-field-maps"]], "EEG analysis - Event-Related Potentials (ERPs)": [[150, "eeg-analysis-event-related-potentials-erps"]], "Channel names and types": [[150, "channel-names-and-types"]], "Channel locations": [[150, "channel-locations"]], "Setting the EEG reference": [[150, "setting-the-eeg-reference"], [206, "setting-the-eeg-reference"]], "Filtering": [[150, "filtering"]], "Evoked responses: epoching and averaging": [[150, "evoked-responses-epoching-and-averaging"]], "Global field power (GFP)": [[150, "global-field-power-gfp"]], "Averaging across channels with regions of interest": [[150, "averaging-across-channels-with-regions-of-interest"]], "Comparing conditions": [[150, "comparing-conditions"]], "Grand averages": [[150, "grand-averages"]], "Amplitude and latency measures": [[150, "amplitude-and-latency-measures"]], "Peak latency and amplitude": [[150, "peak-latency-and-amplitude"]], "Mean Amplitude": [[150, "mean-amplitude"]], "Plotting whitened data": [[151, "plotting-whitened-data"]], "Raw data with whitening": [[151, "raw-data-with-whitening"]], "Epochs with whitening": [[151, "epochs-with-whitening"]], "Evoked data with whitening": [[151, "evoked-data-with-whitening"]], "Evoked data with scaled whitening": [[151, "evoked-data-with-scaled-whitening"]], "Topographic plot with whitening": [[151, "topographic-plot-with-whitening"]], "Estimating evoked responses": [[152, "estimating-evoked-responses"], [164, "estimating-evoked-responses"], [165, "estimating-evoked-responses"]], "FreeSurfer MRI reconstruction": [[154, "freesurfer-mri-reconstruction"]], "First steps": [[154, "first-steps"], [838, "first-steps"]], "Anatomical reconstruction": [[154, "anatomical-reconstruction"]], "Use with MNE-Python": [[154, "use-with-mne-python"]], "\u2018fsaverage\u2019": [[154, "fsaverage"]], "Source alignment and coordinate frames": [[155, "source-alignment-and-coordinate-frames"]], "Understanding coordinate frames": [[155, "understanding-coordinate-frames"]], "Coordinate frame definitions": [[155, "coordinate-frame-definitions"]], "A bad example": [[155, "a-bad-example"]], "A good example": [[155, "a-good-example"]], "Visualizing the transformations": [[155, "visualizing-the-transformations"]], "Example: MRI defacing": [[155, "example-mri-defacing"]], "Defining the head\u2194MRI trans using the GUI": [[155, "defining-the-headmri-trans-using-the-gui"]], "Alignment without MRI": [[155, "alignment-without-mri"]], "Using an automated approach to coregistration": [[156, "using-an-automated-approach-to-coregistration"]], "Set up the coregistration model": [[156, "set-up-the-coregistration-model"]], "Initial fit with fiducials": [[156, "initial-fit-with-fiducials"]], "Refining with ICP": [[156, "refining-with-icp"]], "Omitting bad points": [[156, "omitting-bad-points"]], "Final coregistration fit": [[156, "final-coregistration-fit"]], "Head model and forward computation": [[157, "head-model-and-forward-computation"]], "Computing the forward operator": [[157, "computing-the-forward-operator"]], "Compute and visualize BEM surfaces": [[157, "compute-and-visualize-bem-surfaces"]], "Visualizing the coregistration": [[157, "visualizing-the-coregistration"]], "Compute Source Space": [[157, "compute-source-space"]], "Compute forward solution": [[157, "compute-forward-solution"]], "EEG forward operator with a template MRI": [[158, "eeg-forward-operator-with-a-template-mri"]], "Adult template MRI (fsaverage)": [[158, "adult-template-mri-fsaverage"]], "Setup source space and compute forward": [[158, "setup-source-space-and-compute-forward"]], "Infant MRI surrogates": [[158, "infant-mri-surrogates"]], "Get an infant MRI template": [[158, "get-an-infant-mri-template"]], "How MNE uses FreeSurfer\u2019s outputs": [[159, "how-mne-uses-freesurfer-s-outputs"]], "MRI coordinate frames": [[159, "mri-coordinate-frames"]], "Under the hood": [[159, null]], "\u201cMRI coordinates\u201d in MNE-Python: FreeSurfer surface RAS": [[159, "mri-coordinates-in-mne-python-freesurfer-surface-ras"]], "Head coordinate frame": [[159, null]], "Using FreeSurfer\u2019s surface reconstructions": [[159, "using-freesurfer-s-surface-reconstructions"]], "Cortical alignment (spherical)": [[159, "cortical-alignment-spherical"]], "Surface decimation": [[159, "surface-decimation"]], "FreeSurfer\u2019s MNI affine transformation": [[159, "freesurfer-s-mni-affine-transformation"]], "Fixing BEM and head surfaces": [[160, "fixing-bem-and-head-surfaces"]], "Exporting surfaces to Blender": [[160, "exporting-surfaces-to-blender"]], "Editing in Blender": [[160, "editing-in-blender"]], "Using the fixed surfaces in MNE-Python": [[160, "using-the-fixed-surfaces-in-mne-python"]], "Editing the head surfaces": [[160, "editing-the-head-surfaces"]], "Low-resolution head": [[160, "low-resolution-head"]], "High-resolution head": [[160, "high-resolution-head"]], "Blender editing tips": [[160, "blender-editing-tips"]], "What if you still get an error?": [[160, "what-if-you-still-get-an-error"]], "Blender operations": [[160, "blender-operations"]], "Cleaning up a bad dense head surface by smoothing": [[160, "cleaning-up-a-bad-dense-head-surface-by-smoothing"]], "Topological errors": [[160, "topological-errors"]], "Dealing with topology in blender": [[160, "dealing-with-topology-in-blender"]], "Dealing with topology using pymeshfix": [[160, "dealing-with-topology-using-pymeshfix"]], "Computing a covariance matrix": [[161, "computing-a-covariance-matrix"]], "Plot the covariance matrices": [[161, "plot-the-covariance-matrices"]], "How should I regularize the covariance matrix?": [[161, "how-should-i-regularize-the-covariance-matrix"], [855, "how-should-i-regularize-the-covariance-matrix"]], "Forward models and source spaces": [[162, "forward-models-and-source-spaces"], [164, "forward-models-and-source-spaces"]], "Tutorials": [[164, "tutorials"]], "Introductory tutorials": [[164, "introductory-tutorials"], [172, "introductory-tutorials"]], "Reading data for different recording systems": [[164, "reading-data-for-different-recording-systems"], [191, "reading-data-for-different-recording-systems"]], "Working with continuous data": [[164, "working-with-continuous-data"], [217, "working-with-continuous-data"]], "Time-frequency analysis": [[164, "time-frequency-analysis"], [165, "time-frequency-analysis"], [240, "time-frequency-analysis"]], "Source localization and inverses": [[164, "source-localization-and-inverses"], [185, "source-localization-and-inverses"]], "Statistical analysis of sensor data": [[164, "statistical-analysis-of-sensor-data"], [230, "statistical-analysis-of-sensor-data"]], "Statistical analysis of source estimates": [[164, "statistical-analysis-of-source-estimates"], [235, "statistical-analysis-of-source-estimates"]], "Machine learning models of neural activity": [[164, "machine-learning-models-of-neural-activity"], [195, "machine-learning-models-of-neural-activity"]], "Simulation": [[164, "simulation"], [222, "simulation"], [871, "simulation"]], "Overview of MEG/EEG analysis with MNE-Python": [[165, "overview-of-meg-eeg-analysis-with-mne-python"]], "Loading data": [[165, "loading-data"]], "Detecting experimental events": [[165, "detecting-experimental-events"]], "Epoching continuous data": [[165, "epoching-continuous-data"]], "Inverse modeling": [[165, "inverse-modeling"]], "Modifying data in-place": [[166, "modifying-data-in-place"]], "Signal processing": [[166, "signal-processing"]], "Channel picking": [[166, "channel-picking"]], "The copy parameter": [[166, "the-copy-parameter"]], "Parsing events from raw data": [[167, "parsing-events-from-raw-data"]], "The Events and Annotations data structures": [[167, "the-events-and-annotations-data-structures"]], "What is a STIM channel?": [[167, "what-is-a-stim-channel"]], "Converting a STIM channel signal to an Events array": [[167, "converting-a-stim-channel-signal-to-an-events-array"]], "The middle column of the Events array": [[167, null]], "Reading embedded events as Annotations": [[167, "reading-embedded-events-as-annotations"]], "Converting between Events arrays and Annotations objects": [[167, "converting-between-events-arrays-and-annotations-objects"]], "Making multiple events per annotation": [[167, "making-multiple-events-per-annotation"]], "The Info data structure": [[168, "the-info-data-structure"]], "Querying the Info object": [[168, "querying-the-info-object"]], "Obtaining subsets of channels": [[168, "obtaining-subsets-of-channels"]], "Obtaining channel type information": [[168, "obtaining-channel-type-information"]], "Dropping channels from an Info object": [[168, "dropping-channels-from-an-info-object"]], "Working with sensor locations": [[169, "working-with-sensor-locations"]], "About montages and layouts": [[169, "about-montages-and-layouts"]], "Working with built-in montages": [[169, "working-with-built-in-montages"]], "Computing sensor locations": [[169, null]], "Plotting 2D sensor locations like EEGLAB": [[169, "plotting-2d-sensor-locations-like-eeglab"]], "The sphere keyword is available in many places!": [[169, null]], "Manually controlling 2D channel projection": [[169, "manually-controlling-2d-channel-projection"]], "Reading sensor digitization files": [[169, "reading-sensor-digitization-files"]], "Visualizing sensors in 3D surface renderings": [[169, "visualizing-sensors-in-3d-surface-renderings"]], "Working with layout files": [[169, "working-with-layout-files"]], "Configuring MNE-Python": [[170, "configuring-mne-python"]], "Getting and setting configuration variables": [[170, "getting-and-setting-configuration-variables"]], "Where configurations are stored": [[170, "where-configurations-are-stored"]], "Using environment variables": [[170, "using-environment-variables"]], "Logging": [[170, "logging"]], "Getting information about your system": [[170, "getting-information-about-your-system"]], "Getting started with mne.Report": [[171, "getting-started-with-mne-report"]], "Adding Raw data": [[171, "adding-raw-data"]], "Adding events": [[171, "adding-events"]], "Adding Epochs": [[171, "adding-epochs"]], "Adding Evoked": [[171, "adding-evoked"]], "Adding Covariance": [[171, "adding-covariance"]], "Adding Projection vectors": [[171, "adding-projection-vectors"]], "Adding ICA": [[171, "adding-ica"]], "Adding MRI with BEM": [[171, "adding-mri-with-bem"]], "Adding coregistration": [[171, "adding-coregistration"]], "Adding a Forward solution": [[171, "adding-a-forward-solution"]], "Adding an InverseOperator": [[171, "adding-an-inverseoperator"]], "Adding a SourceEstimate": [[171, "adding-a-sourceestimate"]], "Adding source code (e.g., a Python script)": [[171, "adding-source-code-e-g-a-python-script"]], "Adding custom figures": [[171, "adding-custom-figures"]], "Adding image files": [[171, "adding-image-files"]], "Working with tags": [[171, "working-with-tags"]], "Editing a saved report": [[171, "editing-a-saved-report"]], "Adding an entire folder of files": [[171, "adding-an-entire-folder-of-files"]], "Adding custom HTML (e.g., a description text)": [[171, "adding-custom-html-e-g-a-description-text"]], "The SourceEstimate data structure": [[174, "the-sourceestimate-data-structure"]], "Load and inspect example data": [[174, "load-and-inspect-example-data"]], "SourceEstimate (stc)": [[174, "sourceestimate-stc"]], "Relationship to SourceSpaces (src)": [[174, "relationship-to-sourcespaces-src"]], "Source localization with equivalent current dipole (ECD) fit": [[175, "source-localization-with-equivalent-current-dipole-ecd-fit"]], "Source localization with MNE, dSPM, sLORETA, and eLORETA": [[176, "source-localization-with-mne-dspm-sloreta-and-eloreta"]], "Compute regularized noise covariance": [[176, "compute-regularized-noise-covariance"]], "Compute the evoked response": [[176, "compute-the-evoked-response"]], "Inverse modeling: MNE/dSPM on evoked and raw data": [[176, "inverse-modeling-mne-dspm-on-evoked-and-raw-data"]], "The role of dipole orientations in distributed source localization": [[177, "the-role-of-dipole-orientations-in-distributed-source-localization"]], "The source space": [[177, "the-source-space"]], "Fixed dipole orientations": [[177, "fixed-dipole-orientations"]], "Loose dipole orientations": [[177, "loose-dipole-orientations"]], "Limiting orientations, but not fixing them": [[177, "limiting-orientations-but-not-fixing-them"]], "Discarding dipole orientation information": [[177, "discarding-dipole-orientation-information"]], "Computing various MNE solutions": [[178, "computing-various-mne-solutions"]], "Fixed orientation": [[178, "fixed-orientation"]], "Free orientation": [[178, "free-orientation"]], "Source reconstruction using an LCMV beamformer": [[179, "source-reconstruction-using-an-lcmv-beamformer"]], "Introduction to beamformers": [[179, "introduction-to-beamformers"]], "Data processing": [[179, "data-processing"]], "Computing the covariance matrices": [[179, "computing-the-covariance-matrices"]], "The forward model": [[179, "the-forward-model"]], "Handling depth bias": [[179, "handling-depth-bias"]], "Compute the spatial filter": [[179, "compute-the-spatial-filter"]], "Apply the spatial filter": [[179, "apply-the-spatial-filter"]], "Visualize the reconstructed source activity": [[179, "visualize-the-reconstructed-source-activity"]], "On MRI slices (orthoview; 2D)": [[179, "on-mri-slices-orthoview-2d"]], "On MNI glass brain (orthoview; 2D)": [[179, "on-mni-glass-brain-orthoview-2d"]], "Volumetric rendering (3D) with vectors": [[179, "volumetric-rendering-3d-with-vectors"]], "Visualize the activity of the maximum voxel with all three components": [[179, "visualize-the-activity-of-the-maximum-voxel-with-all-three-components"]], "Morph the output to fsaverage": [[179, "morph-the-output-to-fsaverage"]], "Visualize source time courses (stcs)": [[180, "visualize-source-time-courses-stcs"]], "Surface Source Estimates": [[180, "surface-source-estimates"]], "Volume Source Estimates": [[180, "volume-source-estimates"]], "Vector Source Estimates": [[180, "vector-source-estimates"]], "Dipole fits": [[180, "dipole-fits"]], "EEG source localization given electrode locations on an MRI": [[181, "eeg-source-localization-given-electrode-locations-on-an-mri"]], "Prerequisites": [[181, "prerequisites"]], "Visualizing the MRI": [[181, "visualizing-the-mri"]], "Getting our MRI voxel EEG locations to head (and MRI surface RAS) coords": [[181, "getting-our-mri-voxel-eeg-locations-to-head-and-mri-surface-ras-coords"]], "Getting a source estimate": [[181, "getting-a-source-estimate"]], "Brainstorm Elekta phantom dataset tutorial": [[182, "brainstorm-elekta-phantom-dataset-tutorial"]], "Brainstorm CTF phantom dataset tutorial": [[183, "brainstorm-ctf-phantom-dataset-tutorial"]], "4D Neuroimaging/BTi phantom dataset tutorial": [[184, "d-neuroimaging-bti-phantom-dataset-tutorial"]], "Importing data from MEG devices": [[187, "importing-data-from-meg-devices"]], "MEGIN/Elekta Neuromag VectorView and TRIUX (.fif)": [[187, "megin-elekta-neuromag-vectorview-and-triux-fif"]], "FIL OPM (.bin)": [[187, "fil-opm-bin"]], "Artemis123 (.bin)": [[187, "artemis123-bin"]], "4-D Neuroimaging / BTI data (dir)": [[187, "d-neuroimaging-bti-data-dir"]], "CTF data (dir)": [[187, "ctf-data-dir"]], "CTF Polhemus data": [[187, "ctf-polhemus-data"]], "Applying software gradient compensation": [[187, "applying-software-gradient-compensation"]], "Ricoh/KIT MEG system data (.con/.sqd)": [[187, "ricoh-kit-meg-system-data-con-sqd"]], "Channel naming": [[187, null]], "FieldTrip MEG/EEG data (.mat)": [[187, "fieldtrip-meg-eeg-data-mat"]], "Creating MNE data structures from arbitrary data (from memory)": [[187, "creating-mne-data-structures-from-arbitrary-data-from-memory"]], "Importing data from EEG devices": [[188, "importing-data-from-eeg-devices"]], "BrainVision (.vhdr, .vmrk, .eeg)": [[188, "brainvision-vhdr-vmrk-eeg"]], "European data format (.edf)": [[188, "european-data-format-edf"]], "BioSemi data format (.bdf)": [[188, "biosemi-data-format-bdf"]], "General data format (.gdf)": [[188, "general-data-format-gdf"]], "Neuroscan CNT (.cnt)": [[188, "neuroscan-cnt-cnt"]], "EGI simple binary (.egi)": [[188, "egi-simple-binary-egi"]], "EGI MFF (.mff)": [[188, "egi-mff-mff"]], "EEGLAB files (.set, .fdt)": [[188, "eeglab-files-set-fdt"]], "Nicolet (.data)": [[188, "nicolet-data"]], "eXimia EEG data (.nxe)": [[188, "eximia-eeg-data-nxe"]], "Persyst EEG data (.lay, .dat)": [[188, "persyst-eeg-data-lay-dat"]], "Nihon Kohden EEG data (.eeg, .21e, .pnt, .log)": [[188, "nihon-kohden-eeg-data-eeg-21e-pnt-log"]], "XDF data (.xdf, .xdfz)": [[188, "xdf-data-xdf-xdfz"]], "Setting EEG references": [[188, "setting-eeg-references"]], "Reading electrode locations and head shapes for EEG recordings": [[188, "reading-electrode-locations-and-head-shapes-for-eeg-recordings"]], "Importing data from fNIRS devices": [[189, "importing-data-from-fnirs-devices"]], "Standardized data": [[189, "standardized-data"]], "SNIRF (.snirf)": [[189, "snirf-snirf"]], "Specifying the coordinate system": [[189, "specifying-the-coordinate-system"]], "Continuous Wave Devices": [[189, "continuous-wave-devices"]], "NIRx (directory or hdr)": [[189, "nirx-directory-or-hdr"]], "Hitachi (.csv)": [[189, "hitachi-csv"]], "Frequency Domain Devices": [[189, "frequency-domain-devices"]], "BOXY (.txt)": [[189, "boxy-txt"]], "Custom Data Import": [[189, "custom-data-import"]], "Loading legacy data in CSV or TSV format": [[189, "loading-legacy-data-in-csv-or-tsv-format"]], "Applying standard sensor locations to imported data": [[189, "applying-standard-sensor-locations-to-imported-data"]], "Working with CTF data: the Brainstorm auditory dataset": [[190, "working-with-ctf-data-the-brainstorm-auditory-dataset"]], "Spectro-temporal receptive field (STRF) estimation on continuous data": [[193, "spectro-temporal-receptive-field-strf-estimation-on-continuous-data"]], "Load audio data": [[193, "load-audio-data"]], "Create a receptive field": [[193, "create-a-receptive-field"]], "Simulate a neural response": [[193, "simulate-a-neural-response"]], "Fit a model to recover this receptive field": [[193, "fit-a-model-to-recover-this-receptive-field"]], "Visualize the effects of regularization": [[193, "visualize-the-effects-of-regularization"]], "Using different regularization types": [[193, "using-different-regularization-types"]], "Compare model performance": [[193, "compare-model-performance"]], "Decoding (MVPA)": [[194, "decoding-mvpa"]], "Design philosophy": [[194, "design-philosophy"], [853, "design-philosophy"]], "Transformation classes": [[194, "transformation-classes"]], "Scaler": [[194, "scaler"]], "Vectorizer": [[194, "vectorizer"]], "PSDEstimator": [[194, "psdestimator"]], "FilterEstimator": [[194, "filterestimator"]], "Spatial filters": [[194, "spatial-filters"]], "Common spatial pattern": [[194, "common-spatial-pattern"]], "Examples": [[194, null], [194, null], [194, null], [194, null], [194, null], [254, "examples"], [254, "id4"], [254, "id7"], [254, "id10"], [254, "id13"], [254, "id16"], [254, "id19"], [254, "id22"], [254, "id25"], [254, "id29"], [254, "id32"], [254, "id35"], [254, "id38"], [254, "id41"], [254, "id44"], [254, "id47"], [254, "id50"], [254, "id53"], [254, "id56"], [254, "id59"], [254, "id62"], [254, "id65"], [254, "id68"], [852, null], [852, null], [852, null], [852, null], [852, null], [852, null], [852, null], [852, null], [852, null], [852, null], [852, null], [852, null], [852, null], [852, null], [852, null], [852, null], [852, null], [852, null], [852, null], [852, null], [852, null], [852, null]], "Source power comodulation (SPoC)": [[194, "source-power-comodulation-spoc"]], "xDAWN": [[194, "xdawn"]], "Effect-matched spatial filtering": [[194, "effect-matched-spatial-filtering"]], "Patterns vs. filters": [[194, "patterns-vs-filters"]], "Decoding over time": [[194, "decoding-over-time"]], "Temporal decoding": [[194, "temporal-decoding"]], "Temporal generalization": [[194, "temporal-generalization"]], "Projecting sensor-space patterns to source space": [[194, "projecting-sensor-space-patterns-to-source-space"]], "Source-space decoding": [[194, "source-space-decoding"]], "Overview of artifact detection": [[197, "overview-of-artifact-detection"]], "What are artifacts?": [[197, "what-are-artifacts"]], "What to do about artifacts": [[197, "what-to-do-about-artifacts"]], "Artifact detection": [[197, "artifact-detection"]], "Low-frequency drifts": [[197, "low-frequency-drifts"]], "Power line noise": [[197, "power-line-noise"], [201, "power-line-noise"]], "Heartbeat artifacts (ECG)": [[197, "heartbeat-artifacts-ecg"]], "Ocular artifacts (EOG)": [[197, "ocular-artifacts-eog"]], "Handling bad channels": [[198, "handling-bad-channels"]], "Marking bad channels": [[198, "marking-bad-channels"], [851, "marking-bad-channels"]], "Blocking execution": [[198, null]], "When to look for bad channels": [[198, "when-to-look-for-bad-channels"]], "Why mark bad channels at all?": [[198, "why-mark-bad-channels-at-all"]], "Interpolating bad channels": [[198, "interpolating-bad-channels"]], "How interpolation works": [[198, "how-interpolation-works"]], "Interpolation in MNE-Python": [[198, "interpolation-in-mne-python"]], "Rejecting bad data spans and breaks": [[199, "rejecting-bad-data-spans-and-breaks"]], "Annotating bad spans of data": [[199, "annotating-bad-spans-of-data"]], "The reject_by_annotation parameter": [[199, "the-reject-by-annotation-parameter"]], "Generating annotations programmatically": [[199, "generating-annotations-programmatically"]], "Detecting and annotating breaks": [[199, "detecting-and-annotating-breaks"]], "Rejecting Epochs based on channel amplitude": [[199, "rejecting-epochs-based-on-channel-amplitude"]], "Background information on filtering": [[200, "background-information-on-filtering"]], "Problem statement": [[200, "problem-statement"]], "Filtering basics": [[200, "filtering-basics"]], "FIR Filters": [[200, "fir-filters"]], "Designing FIR filters": [[200, "designing-fir-filters"]], "Applying FIR filters": [[200, "applying-fir-filters"]], "IIR filters": [[200, "iir-filters"]], "Designing IIR filters": [[200, "designing-iir-filters"]], "Applying IIR filters": [[200, "applying-iir-filters"]], "Some pitfalls of filtering": [[200, "some-pitfalls-of-filtering"]], "Low-pass problems": [[200, "low-pass-problems"]], "High-pass problems": [[200, "high-pass-problems"]], "Baseline problems (or solutions?)": [[200, "baseline-problems-or-solutions"]], "Filtering defaults": [[200, "filtering-defaults"]], "Defaults in MNE-Python": [[200, "defaults-in-mne-python"]], "Defaults in MNE-C": [[200, "defaults-in-mne-c"]], "Defaults in other software": [[200, "defaults-in-other-software"]], "Reporting Filters": [[200, "reporting-filters"]], "Filter type": [[200, "filter-type"]], "Cutoff frequency": [[200, "cutoff-frequency"]], "Filter length (order) and transition bandwidth (roll-off)": [[200, "filter-length-order-and-transition-bandwidth-roll-off"]], "Passband ripple and stopband attenuation": [[200, "passband-ripple-and-stopband-attenuation"]], "Filter delay and direction of computation": [[200, "filter-delay-and-direction-of-computation"]], "Filtering and resampling data": [[201, "filtering-and-resampling-data"]], "Background on filtering": [[201, "background-on-filtering"]], "Repairing artifacts by filtering": [[201, "repairing-artifacts-by-filtering"]], "Slow drifts": [[201, "slow-drifts"]], "Resampling": [[201, "resampling"]], "Best practices": [[201, "best-practices"], [204, "best-practices"]], "Repairing artifacts with regression": [[202, "repairing-artifacts-with-regression"]], "Prepare the data": [[202, "prepare-the-data"]], "Visualize the original data": [[202, "visualize-the-original-data"]], "Compute and apply EOG regression": [[202, "compute-and-apply-eog-regression"]], "Subtract the evoked response from the epoch data before regression": [[202, "subtract-the-evoked-response-from-the-epoch-data-before-regression"]], "Create EOG evoked before regression": [[202, "create-eog-evoked-before-regression"]], "Visualize the effect on raw data": [[202, "visualize-the-effect-on-raw-data"]], "Repairing artifacts with ICA": [[203, "repairing-artifacts-with-ica"]], "What is ICA?": [[203, "what-is-ica"]], "ICA in MNE-Python": [[203, "ica-in-mne-python"]], "ICA and dimensionality reduction": [[203, null]], "Example: EOG and ECG artifact repair": [[203, "example-eog-and-ecg-artifact-repair"], [205, "example-eog-and-ecg-artifact-repair"]], "Visualizing the artifacts": [[203, "visualizing-the-artifacts"], [205, "visualizing-the-artifacts"]], "Filtering to remove slow drifts": [[203, "filtering-to-remove-slow-drifts"]], "Fitting ICA": [[203, "fitting-ica"]], "Ignoring the time domain": [[203, null]], "Looking at the ICA solution": [[203, "looking-at-the-ica-solution"]], "Selecting ICA components manually": [[203, "selecting-ica-components-manually"]], "Using an EOG channel to select ICA components": [[203, "using-an-eog-channel-to-select-ica-components"]], "Using a simulated channel to select ICA components": [[203, "using-a-simulated-channel-to-select-ica-components"]], "Selecting ICA components using template matching": [[203, "selecting-ica-components-using-template-matching"]], "Compute ICA components on Epochs": [[203, "compute-ica-components-on-epochs"]], "Background on projectors and projections": [[204, "background-on-projectors-and-projections"]], "What is a projection?": [[204, "what-is-a-projection"]], "Example: projection as noise reduction": [[204, "example-projection-as-noise-reduction"]], "Terminology": [[204, null]], "Signal-space projection (SSP)": [[204, "signal-space-projection-ssp"]], "Projectors in MNE-Python": [[204, "projectors-in-mne-python"]], "Computing projectors": [[204, "computing-projectors"]], "Visualizing the effect of projectors": [[204, "visualizing-the-effect-of-projectors"]], "Loading and saving projectors": [[204, "loading-and-saving-projectors"]], "Adding and removing projectors": [[204, "adding-and-removing-projectors"]], "When are projectors \u201capplied\u201d?": [[204, "when-are-projectors-applied"]], "Repairing artifacts with SSP": [[205, "repairing-artifacts-with-ssp"]], "What is SSP?": [[205, "what-is-ssp"]], "Example: Environmental noise reduction from empty-room recordings": [[205, "example-environmental-noise-reduction-from-empty-room-recordings"]], "Visualizing the empty-room noise": [[205, "visualizing-the-empty-room-noise"]], "Creating the empty-room projectors": [[205, "creating-the-empty-room-projectors"]], "Visualizing how projectors affect the signal": [[205, "visualizing-how-projectors-affect-the-signal"]], "Repairing ECG artifacts with SSP": [[205, "repairing-ecg-artifacts-with-ssp"]], "Repairing EOG artifacts with SSP": [[205, "repairing-eog-artifacts-with-ssp"]], "Choosing the number of projectors": [[205, "choosing-the-number-of-projectors"]], "Visualizing SSP sensor-space bias via signal reconstruction": [[205, "visualizing-ssp-sensor-space-bias-via-signal-reconstruction"]], "SSP reconstruction": [[205, null]], "Background": [[206, "background"]], "Setting or changing the reference channel": [[206, "setting-or-changing-the-reference-channel"]], "Setting average reference": [[206, "setting-average-reference"]], "Creating the average reference as a projector": [[206, "creating-the-average-reference-as-a-projector"]], "Using an infinite reference (REST)": [[206, "using-an-infinite-reference-rest"]], "Using a bipolar reference": [[206, "using-a-bipolar-reference"]], "EEG reference and source modeling": [[206, "eeg-reference-and-source-modeling"]], "Extracting and visualizing subject head movement": [[207, "extracting-and-visualizing-subject-head-movement"]], "HPI frequencies": [[207, "hpi-frequencies"]], "Estimating continuous head position": [[207, "estimating-continuous-head-position"]], "Visualizing continuous head position": [[207, "visualizing-continuous-head-position"]], "Computing SNR of the HPI signal": [[207, "computing-snr-of-the-hpi-signal"]], "Signal-space separation (SSS) and Maxwell filtering": [[208, "signal-space-separation-sss-and-maxwell-filtering"]], "Background on SSS and Maxwell filtering": [[208, "background-on-sss-and-maxwell-filtering"]], "Using SSS and Maxwell filtering in MNE-Python": [[208, "using-sss-and-maxwell-filtering-in-mne-python"]], "Spatiotemporal SSS (tSSS)": [[208, "spatiotemporal-sss-tsss"]], "Movement compensation": [[208, "movement-compensation"]], "Caveats to using SSS / Maxwell filtering": [[208, "caveats-to-using-sss-maxwell-filtering"]], "Preprocessing functional near-infrared spectroscopy (fNIRS) data": [[209, "preprocessing-functional-near-infrared-spectroscopy-fnirs-data"]], "Providing more meaningful annotation information": [[209, "providing-more-meaningful-annotation-information"]], "Viewing location of sensors over brain surface": [[209, "viewing-location-of-sensors-over-brain-surface"]], "Selecting channels appropriate for detecting neural responses": [[209, "selecting-channels-appropriate-for-detecting-neural-responses"]], "Converting from raw intensity to optical density": [[209, "converting-from-raw-intensity-to-optical-density"]], "Evaluating the quality of the data": [[209, "evaluating-the-quality-of-the-data"]], "Converting from optical density to haemoglobin": [[209, "converting-from-optical-density-to-haemoglobin"]], "Removing heart rate from signal": [[209, "removing-heart-rate-from-signal"]], "Extract epochs": [[209, "extract-epochs"]], "View consistency of responses across trials": [[209, "view-consistency-of-responses-across-trials"]], "View consistency of responses across channels": [[209, "view-consistency-of-responses-across-channels"]], "Plot standard fNIRS response image": [[209, "plot-standard-fnirs-response-image"]], "View topographic representation of activity": [[209, "view-topographic-representation-of-activity"]], "Compare tapping of left and right hands": [[209, "compare-tapping-of-left-and-right-hands"]], "Preprocessing optically pumped magnetometer (OPM) MEG data": [[210, "preprocessing-optically-pumped-magnetometer-opm-meg-data"]], "Examining raw data": [[210, "examining-raw-data"]], "Denoising: Regressing via reference sensors": [[210, "denoising-regressing-via-reference-sensors"]], "Comparing denoising methods": [[210, "comparing-denoising-methods"]], "Filtering nuisance signals": [[210, "filtering-nuisance-signals"]], "Generating an evoked response": [[210, "generating-an-evoked-response"]], "The Raw data structure: continuous data": [[213, "the-raw-data-structure-continuous-data"]], "Loading continuous data": [[213, "loading-continuous-data"]], "Datasets in MNE-Python": [[213, null]], "Querying the Raw object": [[213, "querying-the-raw-object"]], "Attributes vs. Methods": [[213, null]], "The Raw.info attribute": [[213, "the-raw-info-attribute"]], "Time, sample number, and sample index": [[213, "time-sample-number-and-sample-index"]], "Sample numbering in VectorView data": [[213, null]], "Modifying Raw objects": [[213, "modifying-raw-objects"]], "len(raw)": [[213, null]], "Long channel names": [[213, null]], "Extracting data from Raw objects": [[213, "extracting-data-from-raw-objects"]], "Extracting data by index": [[213, "extracting-data-by-index"]], "Extracting channels by name": [[213, "extracting-channels-by-name"]], "Extracting channels by type": [[213, "extracting-channels-by-type"]], "The Raw.get_data() method": [[213, "the-raw-get-data-method"]], "Summary of ways to extract data from Raw objects": [[213, "summary-of-ways-to-extract-data-from-raw-objects"]], "Exporting and saving Raw objects": [[213, "exporting-and-saving-raw-objects"]], "Working with events": [[214, "working-with-events"]], "Reading and writing events from/to a file": [[214, "reading-and-writing-events-from-to-a-file"]], "Subselecting and combining events": [[214, "subselecting-and-combining-events"]], "Including/excluding events": [[214, null]], "Mapping Event IDs to trial descriptors": [[214, "mapping-event-ids-to-trial-descriptors"]], "Plotting events": [[214, "plotting-events"]], "Plotting events and raw data together": [[214, "plotting-events-and-raw-data-together"]], "Making equally-spaced Events arrays": [[214, "making-equally-spaced-events-arrays"]], "Annotating continuous data": [[215, "annotating-continuous-data"]], "Creating annotations programmatically": [[215, "creating-annotations-programmatically"]], "Annotating Raw objects interactively": [[215, "annotating-raw-objects-interactively"]], "How annotations affect preprocessing and analysis": [[215, "how-annotations-affect-preprocessing-and-analysis"]], "Operations on Annotations objects": [[215, "operations-on-annotations-objects"]], "Reading and writing Annotations to/from a file": [[215, "reading-and-writing-annotations-to-from-a-file"]], "Built-in plotting methods for Raw objects": [[216, "built-in-plotting-methods-for-raw-objects"]], "Interactive data browsing with Raw.plot()": [[216, "interactive-data-browsing-with-raw-plot"]], "Plotting spectral density of continuous data": [[216, "plotting-spectral-density-of-continuous-data"]], "Plotting sensor locations from Raw objects": [[216, "plotting-sensor-locations-from-raw-objects"]], "Plotting projectors from Raw objects": [[216, "plotting-projectors-from-raw-objects"]], "Creating MNE-Python data structures from scratch": [[219, "creating-mne-python-data-structures-from-scratch"]], "Creating Info objects": [[219, "creating-info-objects"]], "Info objects": [[219, null]], "Info consistency": [[219, null]], "Creating Raw objects": [[219, "creating-raw-objects"]], "Units": [[219, null]], "Creating Epochs objects": [[219, "creating-epochs-objects"]], "Creating Evoked Objects": [[219, "creating-evoked-objects"]], "Corrupt known signal with point spread": [[220, "corrupt-known-signal-with-point-spread"]], "Load the MEG data": [[220, "load-the-meg-data"]], "Estimate the background noise covariance from the baseline period": [[220, "estimate-the-background-noise-covariance-from-the-baseline-period"]], "Generate sinusoids in two spatially distant labels": [[220, "generate-sinusoids-in-two-spatially-distant-labels"]], "Find the center vertices in source space of each label": [[220, "find-the-center-vertices-in-source-space-of-each-label"]], "Create source-space data with known signals": [[220, "create-source-space-data-with-known-signals"]], "Plot original signals": [[220, "plot-original-signals"]], "Simulate sensor-space signals": [[220, "simulate-sensor-space-signals"]], "Plot the point-spread of corrupted signal": [[220, "plot-the-point-spread-of-corrupted-signal"]], "Exercises": [[220, "exercises"], [229, "exercises"]], "DICS for power mapping": [[221, "dics-for-power-mapping"]], "Setup": [[221, "setup"]], "Data simulation": [[221, "data-simulation"]], "Power mapping": [[221, "power-mapping"]], "Statistical inference": [[224, "statistical-inference"]], "Hypothesis testing": [[224, "hypothesis-testing"]], "Null hypothesis": [[224, "null-hypothesis"]], "Parametric tests": [[224, "parametric-tests"]], "\u201cHat\u201d variance adjustment": [[224, "hat-variance-adjustment"], [224, "id3"]], "Non-parametric tests": [[224, "non-parametric-tests"]], "Multiple comparisons": [[224, "multiple-comparisons"]], "Bonferroni correction": [[224, "bonferroni-correction"]], "False discovery rate (FDR) correction": [[224, "false-discovery-rate-fdr-correction"]], "Non-parametric resampling test with a maximum statistic": [[224, "non-parametric-resampling-test-with-a-maximum-statistic"]], "Clustering": [[224, "clustering"]], "Effect size": [[224, null]], "Defining the adjacency matrix": [[224, "defining-the-adjacency-matrix"]], "Standard clustering": [[224, "standard-clustering"]], "Threshold-free cluster enhancement (TFCE)": [[224, "threshold-free-cluster-enhancement-tfce"]], "Visualize and compare methods": [[224, "visualize-and-compare-methods"]], "Statistical functions in MNE": [[224, "statistical-functions-in-mne"]], "Parametric methods provided by MNE": [[224, "parametric-methods-provided-by-mne"]], "Non-parametric methods": [[224, "non-parametric-methods"]], "Visualising statistical significance thresholds on EEG data": [[225, "visualising-statistical-significance-thresholds-on-eeg-data"]], "Non-parametric 1 sample cluster statistic on single trial power": [[226, "non-parametric-1-sample-cluster-statistic-on-single-trial-power"]], "Set parameters": [[226, "set-parameters"], [228, "set-parameters"], [229, "set-parameters"], [232, "set-parameters"], [233, "set-parameters"], [234, "set-parameters"]], "Define adjacency for statistics": [[226, "define-adjacency-for-statistics"]], "Compute statistic": [[226, "compute-statistic"], [227, "compute-statistic"], [232, "compute-statistic"], [233, "compute-statistic"]], "View time-frequency plots": [[226, "view-time-frequency-plots"], [227, "view-time-frequency-plots"]], "Non-parametric between conditions cluster statistic on single trial power": [[227, "non-parametric-between-conditions-cluster-statistic-on-single-trial-power"]], "Mass-univariate twoway repeated measures ANOVA on single trial power": [[228, "mass-univariate-twoway-repeated-measures-anova-on-single-trial-power"]], "Create TFR representations for all conditions": [[228, "create-tfr-representations-for-all-conditions"]], "Setup repeated measures ANOVA": [[228, "setup-repeated-measures-anova"]], "Sample data layout": [[228, "id1"]], "Account for multiple comparisons using FDR versus permutation clustering test": [[228, "account-for-multiple-comparisons-using-fdr-versus-permutation-clustering-test"]], "Spatiotemporal permutation F-test on full sensor data": [[229, "spatiotemporal-permutation-f-test-on-full-sensor-data"]], "Read epochs for the channel of interest": [[229, "read-epochs-for-the-channel-of-interest"]], "Find the FieldTrip neighbor definition to setup sensor adjacency": [[229, "find-the-fieldtrip-neighbor-definition-to-setup-sensor-adjacency"]], "Compute permutation statistic": [[229, "compute-permutation-statistic"]], "Visualize clusters": [[229, "visualize-clusters"]], "Permutation statistic for time-frequencies": [[229, "permutation-statistic-for-time-frequencies"]], "Permutation t-test on source data with spatio-temporal clustering": [[232, "permutation-t-test-on-source-data-with-spatio-temporal-clustering"]], "Read epochs for all channels, removing a bad one": [[232, "read-epochs-for-all-channels-removing-a-bad-one"], [234, "read-epochs-for-all-channels-removing-a-bad-one"]], "Transform to source space": [[232, "transform-to-source-space"], [234, "transform-to-source-space"]], "Transform to common cortical space": [[232, "transform-to-common-cortical-space"], [234, "transform-to-common-cortical-space"]], "Find adjacency matrix": [[232, "find-adjacency-matrix"]], "Selecting \u201csignificant\u201d clusters": [[232, "selecting-significant-clusters"]], "Visualize the clusters": [[232, "visualize-the-clusters"], [233, "visualize-the-clusters"], [234, "visualize-the-clusters"]], "2 samples permutation test on source data with spatio-temporal clustering": [[233, "samples-permutation-test-on-source-data-with-spatio-temporal-clustering"]], "Repeated measures ANOVA on source data with spatio-temporal clustering": [[234, "repeated-measures-anova-on-source-data-with-spatio-temporal-clustering"]], "Prepare function for arbitrary contrast": [[234, "prepare-function-for-arbitrary-contrast"]], "Compute clustering statistic": [[234, "compute-clustering-statistic"]], "The Spectrum and EpochsSpectrum classes: frequency-domain data": [[237, "the-spectrum-and-epochsspectrum-classes-frequency-domain-data"]], "Visualizing Spectrum objects": [[237, "visualizing-spectrum-objects"]], "Migrating legacy code": [[237, "migrating-legacy-code"]], "Quick reference for common Spectral class actions": [[237, "id4"]], "Frequency and time-frequency sensor analysis": [[238, "frequency-and-time-frequency-sensor-analysis"]], "Frequency analysis": [[238, "frequency-analysis"], [239, "frequency-analysis"]], "Time-frequency analysis: power and inter-trial coherence": [[238, "time-frequency-analysis-power-and-inter-trial-coherence"]], "Inspect power": [[238, "inspect-power"]], "Joint Plot": [[238, "joint-plot"]], "Inspect ITC": [[238, "inspect-itc"]], "Frequency-tagging: Basic analysis of an SSVEP/vSSR dataset": [[239, "frequency-tagging-basic-analysis-of-an-ssvep-vssr-dataset"]], "Data preprocessing": [[239, "data-preprocessing"]], "Calculate power spectral density (PSD)": [[239, "calculate-power-spectral-density-psd"]], "Calculate signal to noise ratio (SNR)": [[239, "calculate-signal-to-noise-ratio-snr"]], "Plot PSD and SNR spectra": [[239, "plot-psd-and-snr-spectra"]], "Extract SNR values at the stimulation frequency": [[239, "extract-snr-values-at-the-stimulation-frequency"]], "Get index for the stimulation frequency (12 Hz)": [[239, "get-index-for-the-stimulation-frequency-12-hz"]], "Get indices for the different trial types": [[239, "get-indices-for-the-different-trial-types"]], "Get indices of EEG channels forming the ROI": [[239, "get-indices-of-eeg-channels-forming-the-roi"]], "Apply the subset, and check the result": [[239, "apply-the-subset-and-check-the-result"]], "Topography of the vSSR": [[239, "topography-of-the-vssr"]], "Statistical separation of 12 Hz and 15 Hz vSSR": [[239, "statistical-separation-of-12-hz-and-15-hz-vssr"]], "Debriefing": [[239, "debriefing"]], "Bonus exercises": [[239, "bonus-exercises"]], "Effect of trial duration on SNR": [[239, "effect-of-trial-duration-on-snr"]], "Time resolved SNR": [[239, "time-resolved-snr"]], "General bibliography": [[242, "general-bibliography"]], "Papers citing MNE-Python": [[243, "papers-citing-mne-python"]], "Connectivity Estimation": [[244, "connectivity-estimation"]], "Covariance computation": [[245, "covariance-computation"]], "Creating data objects from arrays": [[246, "creating-data-objects-from-arrays"]], "Datasets": [[247, "datasets"]], "Decoding": [[248, "decoding"]], "Events": [[249, "events"]], "Exporting": [[250, "exporting"]], "File I/O": [[251, "file-i-o"]], "Forward Modeling": [[252, "forward-modeling"]], "Funding and other support": [[253, "funding-and-other-support"]], "Institutional partners": [[253, "institutional-partners"]], "Current partners": [[253, "current-partners"], [863, "current-partners"]], "Former partners": [[253, "former-partners"], [863, "former-partners"]], "Command line tools using Python": [[254, "command-line-tools-using-python"]], "mne anonymize": [[254, "mne-anonymize"]], "Anonymize raw fif file.": [[254, "anonymize-raw-fif-file"]], "Options": [[254, "options"], [254, "id3"], [254, "id6"], [254, "id9"], [254, "id12"], [254, "id15"], [254, "id18"], [254, "id21"], [254, "id24"], [254, "id28"], [254, "id31"], [254, "id34"], [254, "id37"], [254, "id40"], [254, "id43"], [254, "id46"], [254, "id49"], [254, "id52"], [254, "id55"], [254, "id58"], [254, "id61"], [254, "id64"], [254, "id67"]], "mne browse_raw": [[254, "mne-browse-raw"]], "Browse raw data.": [[254, "browse-raw-data"]], "mne bti2fiff": [[254, "mne-bti2fiff"]], "Import BTi / 4D MagnesWH3600 data to fif file.": [[254, "import-bti-4d-magneswh3600-data-to-fif-file"]], "Notes": [[254, "notes"], [254, "id26"]], "mne clean_eog_ecg": [[254, "mne-clean-eog-ecg"]], "Clean a raw file from EOG and ECG artifacts with PCA (ie SSP).": [[254, "clean-a-raw-file-from-eog-and-ecg-artifacts-with-pca-ie-ssp"]], "mne compare_fiff": [[254, "mne-compare-fiff"]], "Compare FIFF files.": [[254, "compare-fiff-files"]], "mne compute_proj_ecg": [[254, "mne-compute-proj-ecg"]], "Compute SSP/PCA projections for ECG artifacts.": [[254, "compute-ssp-pca-projections-for-ecg-artifacts"]], "mne compute_proj_eog": [[254, "mne-compute-proj-eog"]], "Compute SSP/PCA projections for EOG artifacts.": [[254, "compute-ssp-pca-projections-for-eog-artifacts"]], "mne coreg": [[254, "mne-coreg"]], "Open the coregistration GUI.": [[254, "open-the-coregistration-gui"]], "mne flash_bem": [[254, "mne-flash-bem"]], "Create 3-layer BEM model from Flash MRI images.": [[254, "create-3-layer-bem-model-from-flash-mri-images"]], "mne freeview_bem_surfaces": [[254, "mne-freeview-bem-surfaces"]], "View the 3-Layers BEM model using Freeview.": [[254, "view-the-3-layers-bem-model-using-freeview"]], "mne kit2fiff": [[254, "mne-kit2fiff"]], "Import KIT / NYU data to fif file.": [[254, "import-kit-nyu-data-to-fif-file"]], "mne make_scalp_surfaces": [[254, "mne-make-scalp-surfaces"]], "Create high-resolution head surfaces for coordinate alignment.": [[254, "create-high-resolution-head-surfaces-for-coordinate-alignment"]], "mne maxfilter": [[254, "mne-maxfilter"]], "Apply MaxFilter.": [[254, "apply-maxfilter"]], "mne prepare_bem_model": [[254, "mne-prepare-bem-model"]], "Create a BEM solution using the linear collocation approach.": [[254, "create-a-bem-solution-using-the-linear-collocation-approach"]], "mne report": [[254, "mne-report"]], "Create mne report for a folder.": [[254, "create-mne-report-for-a-folder"]], "mne setup_forward_model": [[254, "mne-setup-forward-model"]], "Create a BEM model for a subject.": [[254, "create-a-bem-model-for-a-subject"]], "mne setup_source_space": [[254, "mne-setup-source-space"]], "Set up bilateral hemisphere surface-based source space with subsampling.": [[254, "set-up-bilateral-hemisphere-surface-based-source-space-with-subsampling"]], "mne show_fiff": [[254, "mne-show-fiff"]], "Show the contents of a FIFF file.": [[254, "show-the-contents-of-a-fiff-file"]], "mne show_info": [[254, "mne-show-info"]], "Show measurement info from .fif file.": [[254, "show-measurement-info-from-fif-file"]], "mne surf2bem": [[254, "mne-surf2bem"]], "Convert surface to BEM FIF file.": [[254, "convert-surface-to-bem-fif-file"]], "mne sys_info": [[254, "mne-sys-info"]], "Show system information.": [[254, "show-system-information"]], "mne watershed_bem": [[254, "mne-watershed-bem"]], "Create BEM surfaces using the watershed algorithm included with FreeSurfer.": [[254, "create-bem-surfaces-using-the-watershed-algorithm-included-with-freesurfer"]], "mne what": [[254, "mne-what"]], "Check type of FIF file.": [[254, "check-type-of-fif-file"]], "mne.AcqParserFIF": [[255, "mne-acqparserfif"]], "mne.Annotations": [[256, "mne-annotations"]], "Examples using mne.Annotations": [[256, "examples-using-mne-annotations"]], "mne.BaseEpochs": [[257, "mne-baseepochs"]], "mne.BiHemiLabel": [[258, "mne-bihemilabel"]], "mne.Covariance": [[259, "mne-covariance"]], "Examples using mne.Covariance": [[259, "examples-using-mne-covariance"]], "mne.Dipole": [[260, "mne-dipole"]], "Examples using mne.Dipole": [[260, "examples-using-mne-dipole"]], "mne.DipoleFixed": [[261, "mne-dipolefixed"]], "Examples using mne.DipoleFixed": [[261, "examples-using-mne-dipolefixed"]], "mne.Epochs": [[262, "mne-epochs"]], "Examples using mne.Epochs": [[262, "examples-using-mne-epochs"]], "mne.EpochsArray": [[263, "mne-epochsarray"]], "Examples using mne.EpochsArray": [[263, "examples-using-mne-epochsarray"]], "mne.Evoked": [[264, "mne-evoked"]], "Examples using mne.Evoked": [[264, "examples-using-mne-evoked"]], "mne.EvokedArray": [[265, "mne-evokedarray"]], "Examples using mne.EvokedArray": [[265, "examples-using-mne-evokedarray"]], "mne.Forward": [[266, "mne-forward"]], "Examples using mne.Forward": [[266, "examples-using-mne-forward"]], "mne.Info": [[267, "mne-info"]], "Examples using mne.Info": [[267, "examples-using-mne-info"]], "mne.Label": [[268, "mne-label"]], "Examples using mne.Label": [[268, "examples-using-mne-label"]], "mne.MixedSourceEstimate": [[269, "mne-mixedsourceestimate"]], "Examples using mne.MixedSourceEstimate": [[269, "examples-using-mne-mixedsourceestimate"]], "mne.MixedVectorSourceEstimate": [[270, "mne-mixedvectorsourceestimate"]], "Examples using mne.MixedVectorSourceEstimate": [[270, "examples-using-mne-mixedvectorsourceestimate"]], "mne.Projection": [[271, "mne-projection"]], "Examples using mne.Projection": [[271, "examples-using-mne-projection"]], "mne.Report": [[272, "mne-report"]], "Examples using mne.Report": [[272, "examples-using-mne-report"]], "mne.SourceEstimate": [[273, "mne-sourceestimate"]], "Examples using mne.SourceEstimate": [[273, "examples-using-mne-sourceestimate"]], "mne.SourceMorph": [[274, "mne-sourcemorph"]], "Examples using mne.SourceMorph": [[274, "examples-using-mne-sourcemorph"]], "mne.SourceSpaces": [[275, "mne-sourcespaces"]], "Examples using mne.SourceSpaces": [[275, "examples-using-mne-sourcespaces"]], "mne.VectorSourceEstimate": [[276, "mne-vectorsourceestimate"]], "Examples using mne.VectorSourceEstimate": [[276, "examples-using-mne-vectorsourceestimate"]], "mne.VolSourceEstimate": [[277, "mne-volsourceestimate"]], "Examples using mne.VolSourceEstimate": [[277, "examples-using-mne-volsourceestimate"]], "mne.VolVectorSourceEstimate": [[278, "mne-volvectorsourceestimate"]], "mne.add_reference_channels": [[279, "mne-add-reference-channels"]], "Examples using mne.add_reference_channels": [[279, "examples-using-mne-add-reference-channels"]], "mne.add_source_space_distances": [[280, "mne-add-source-space-distances"]], "mne.annotations_from_events": [[281, "mne-annotations-from-events"]], "Examples using mne.annotations_from_events": [[281, "examples-using-mne-annotations-from-events"]], "mne.apply_forward": [[282, "mne-apply-forward"]], "mne.apply_forward_raw": [[283, "mne-apply-forward-raw"]], "mne.average_forward_solutions": [[284, "mne-average-forward-solutions"]], "mne.baseline.rescale": [[285, "mne-baseline-rescale"]], "Examples using mne.baseline.rescale": [[285, "examples-using-mne-baseline-rescale"]], "mne.beamformer.Beamformer": [[286, "mne-beamformer-beamformer"]], "Examples using mne.beamformer.Beamformer": [[286, "examples-using-mne-beamformer-beamformer"]], "mne.beamformer.apply_dics": [[287, "mne-beamformer-apply-dics"]], "mne.beamformer.apply_dics_csd": [[288, "mne-beamformer-apply-dics-csd"]], "Examples using mne.beamformer.apply_dics_csd": [[288, "examples-using-mne-beamformer-apply-dics-csd"]], "mne.beamformer.apply_dics_epochs": [[289, "mne-beamformer-apply-dics-epochs"]], "mne.beamformer.apply_dics_tfr_epochs": [[290, "mne-beamformer-apply-dics-tfr-epochs"]], "Examples using mne.beamformer.apply_dics_tfr_epochs": [[290, "examples-using-mne-beamformer-apply-dics-tfr-epochs"]], "mne.beamformer.apply_lcmv": [[291, "mne-beamformer-apply-lcmv"]], "Examples using mne.beamformer.apply_lcmv": [[291, "examples-using-mne-beamformer-apply-lcmv"]], "mne.beamformer.apply_lcmv_cov": [[292, "mne-beamformer-apply-lcmv-cov"]], "Examples using mne.beamformer.apply_lcmv_cov": [[292, "examples-using-mne-beamformer-apply-lcmv-cov"]], "mne.beamformer.apply_lcmv_epochs": [[293, "mne-beamformer-apply-lcmv-epochs"]], "Examples using mne.beamformer.apply_lcmv_epochs": [[293, "examples-using-mne-beamformer-apply-lcmv-epochs"]], "mne.beamformer.apply_lcmv_raw": [[294, "mne-beamformer-apply-lcmv-raw"]], "Examples using mne.beamformer.apply_lcmv_raw": [[294, "examples-using-mne-beamformer-apply-lcmv-raw"]], "mne.beamformer.make_dics": [[295, "mne-beamformer-make-dics"]], "Examples using mne.beamformer.make_dics": [[295, "examples-using-mne-beamformer-make-dics"]], "mne.beamformer.make_lcmv": [[296, "mne-beamformer-make-lcmv"]], "Examples using mne.beamformer.make_lcmv": [[296, "examples-using-mne-beamformer-make-lcmv"]], "mne.beamformer.make_lcmv_resolution_matrix": [[297, "mne-beamformer-make-lcmv-resolution-matrix"]], "Examples using mne.beamformer.make_lcmv_resolution_matrix": [[297, "examples-using-mne-beamformer-make-lcmv-resolution-matrix"]], "mne.beamformer.rap_music": [[298, "mne-beamformer-rap-music"]], "Examples using mne.beamformer.rap_music": [[298, "examples-using-mne-beamformer-rap-music"]], "mne.beamformer.read_beamformer": [[299, "mne-beamformer-read-beamformer"]], "mne.bem.ConductorModel": [[300, "mne-bem-conductormodel"]], "Examples using mne.bem.ConductorModel": [[300, "examples-using-mne-bem-conductormodel"]], "mne.bem.convert_flash_mris": [[301, "mne-bem-convert-flash-mris"]], "mne.bem.distance_to_bem": [[302, "mne-bem-distance-to-bem"]], "mne.bem.fit_sphere_to_headshape": [[303, "mne-bem-fit-sphere-to-headshape"]], "mne.bem.get_fitting_dig": [[304, "mne-bem-get-fitting-dig"]], "mne.bem.make_flash_bem": [[305, "mne-bem-make-flash-bem"]], "Examples using mne.bem.make_flash_bem": [[305, "examples-using-mne-bem-make-flash-bem"]], "mne.bem.make_scalp_surfaces": [[306, "mne-bem-make-scalp-surfaces"]], "mne.bem.make_watershed_bem": [[307, "mne-bem-make-watershed-bem"]], "Examples using mne.bem.make_watershed_bem": [[307, "examples-using-mne-bem-make-watershed-bem"]], "mne.channel_indices_by_type": [[308, "mne-channel-indices-by-type"]], "Examples using mne.channel_indices_by_type": [[308, "examples-using-mne-channel-indices-by-type"]], "mne.channel_type": [[309, "mne-channel-type"]], "Examples using mne.channel_type": [[309, "examples-using-mne-channel-type"]], "mne.channels.DigMontage": [[310, "mne-channels-digmontage"]], "Examples using mne.channels.DigMontage": [[310, "examples-using-mne-channels-digmontage"]], "mne.channels.Layout": [[311, "mne-channels-layout"]], "Examples using mne.channels.Layout": [[311, "examples-using-mne-channels-layout"]], "mne.channels.combine_channels": [[312, "mne-channels-combine-channels"]], "Examples using mne.channels.combine_channels": [[312, "examples-using-mne-channels-combine-channels"]], "mne.channels.compute_dev_head_t": [[313, "mne-channels-compute-dev-head-t"]], "mne.channels.compute_native_head_t": [[314, "mne-channels-compute-native-head-t"]], "Examples using mne.channels.compute_native_head_t": [[314, "examples-using-mne-channels-compute-native-head-t"]], "mne.channels.equalize_channels": [[315, "mne-channels-equalize-channels"]], "mne.channels.find_ch_adjacency": [[316, "mne-channels-find-ch-adjacency"]], "Examples using mne.channels.find_ch_adjacency": [[316, "examples-using-mne-channels-find-ch-adjacency"]], "mne.channels.find_layout": [[317, "mne-channels-find-layout"]], "mne.channels.fix_mag_coil_types": [[318, "mne-channels-fix-mag-coil-types"]], "mne.channels.generate_2d_layout": [[319, "mne-channels-generate-2d-layout"]], "mne.channels.get_builtin_ch_adjacencies": [[320, "mne-channels-get-builtin-ch-adjacencies"]], "Examples using mne.channels.get_builtin_ch_adjacencies": [[320, "examples-using-mne-channels-get-builtin-ch-adjacencies"]], "mne.channels.get_builtin_montages": [[321, "mne-channels-get-builtin-montages"]], "Examples using mne.channels.get_builtin_montages": [[321, "examples-using-mne-channels-get-builtin-montages"]], "mne.channels.make_1020_channel_selections": [[322, "mne-channels-make-1020-channel-selections"]], "Examples using mne.channels.make_1020_channel_selections": [[322, "examples-using-mne-channels-make-1020-channel-selections"]], "mne.channels.make_dig_montage": [[323, "mne-channels-make-dig-montage"]], "mne.channels.make_eeg_layout": [[324, "mne-channels-make-eeg-layout"]], "Examples using mne.channels.make_eeg_layout": [[324, "examples-using-mne-channels-make-eeg-layout"]], "mne.channels.make_grid_layout": [[325, "mne-channels-make-grid-layout"]], "mne.channels.make_standard_montage": [[326, "mne-channels-make-standard-montage"]], "Examples using mne.channels.make_standard_montage": [[326, "examples-using-mne-channels-make-standard-montage"]], "mne.channels.read_ch_adjacency": [[327, "mne-channels-read-ch-adjacency"]], "Examples using mne.channels.read_ch_adjacency": [[327, "examples-using-mne-channels-read-ch-adjacency"]], "mne.channels.read_custom_montage": [[328, "mne-channels-read-custom-montage"]], "Examples using mne.channels.read_custom_montage": [[328, "examples-using-mne-channels-read-custom-montage"]], "mne.channels.read_dig_captrak": [[329, "mne-channels-read-dig-captrak"]], "mne.channels.read_dig_dat": [[330, "mne-channels-read-dig-dat"]], "mne.channels.read_dig_egi": [[331, "mne-channels-read-dig-egi"]], "mne.channels.read_dig_fif": [[332, "mne-channels-read-dig-fif"]], "Examples using mne.channels.read_dig_fif": [[332, "examples-using-mne-channels-read-dig-fif"]], "mne.channels.read_dig_hpts": [[333, "mne-channels-read-dig-hpts"]], "mne.channels.read_dig_localite": [[334, "mne-channels-read-dig-localite"]], "mne.channels.read_dig_polhemus_isotrak": [[335, "mne-channels-read-dig-polhemus-isotrak"]], "Examples using mne.channels.read_dig_polhemus_isotrak": [[335, "examples-using-mne-channels-read-dig-polhemus-isotrak"]], "mne.channels.read_layout": [[336, "mne-channels-read-layout"]], "Examples using mne.channels.read_layout": [[336, "examples-using-mne-channels-read-layout"]], "mne.channels.read_polhemus_fastscan": [[337, "mne-channels-read-polhemus-fastscan"]], "mne.channels.rename_channels": [[338, "mne-channels-rename-channels"]], "mne.chpi.compute_chpi_amplitudes": [[339, "mne-chpi-compute-chpi-amplitudes"]], "Examples using mne.chpi.compute_chpi_amplitudes": [[339, "examples-using-mne-chpi-compute-chpi-amplitudes"]], "mne.chpi.compute_chpi_locs": [[340, "mne-chpi-compute-chpi-locs"]], "Examples using mne.chpi.compute_chpi_locs": [[340, "examples-using-mne-chpi-compute-chpi-locs"]], "mne.chpi.compute_chpi_snr": [[341, "mne-chpi-compute-chpi-snr"]], "Examples using mne.chpi.compute_chpi_snr": [[341, "examples-using-mne-chpi-compute-chpi-snr"]], "mne.chpi.compute_head_pos": [[342, "mne-chpi-compute-head-pos"]], "Examples using mne.chpi.compute_head_pos": [[342, "examples-using-mne-chpi-compute-head-pos"]], "mne.chpi.extract_chpi_locs_ctf": [[343, "mne-chpi-extract-chpi-locs-ctf"]], "Examples using mne.chpi.extract_chpi_locs_ctf": [[343, "examples-using-mne-chpi-extract-chpi-locs-ctf"]], "mne.chpi.extract_chpi_locs_kit": [[344, "mne-chpi-extract-chpi-locs-kit"]], "mne.chpi.filter_chpi": [[345, "mne-chpi-filter-chpi"]], "Examples using mne.chpi.filter_chpi": [[345, "examples-using-mne-chpi-filter-chpi"]], "mne.chpi.get_active_chpi": [[346, "mne-chpi-get-active-chpi"]], "Examples using mne.chpi.get_active_chpi": [[346, "examples-using-mne-chpi-get-active-chpi"]], "mne.chpi.get_chpi_info": [[347, "mne-chpi-get-chpi-info"]], "Examples using mne.chpi.get_chpi_info": [[347, "examples-using-mne-chpi-get-chpi-info"]], "mne.chpi.head_pos_to_trans_rot_t": [[348, "mne-chpi-head-pos-to-trans-rot-t"]], "mne.chpi.read_head_pos": [[349, "mne-chpi-read-head-pos"]], "Examples using mne.chpi.read_head_pos": [[349, "examples-using-mne-chpi-read-head-pos"]], "mne.chpi.write_head_pos": [[350, "mne-chpi-write-head-pos"]], "Examples using mne.chpi.write_head_pos": [[350, "examples-using-mne-chpi-write-head-pos"]], "mne.combine_evoked": [[351, "mne-combine-evoked"]], "Examples using mne.combine_evoked": [[351, "examples-using-mne-combine-evoked"]], "mne.compute_covariance": [[352, "mne-compute-covariance"]], "Examples using mne.compute_covariance": [[352, "examples-using-mne-compute-covariance"]], "mne.compute_proj_epochs": [[353, "mne-compute-proj-epochs"]], "Examples using mne.compute_proj_epochs": [[353, "examples-using-mne-compute-proj-epochs"]], "mne.compute_proj_evoked": [[354, "mne-compute-proj-evoked"]], "Examples using mne.compute_proj_evoked": [[354, "examples-using-mne-compute-proj-evoked"]], "mne.compute_proj_raw": [[355, "mne-compute-proj-raw"]], "Examples using mne.compute_proj_raw": [[355, "examples-using-mne-compute-proj-raw"]], "mne.compute_rank": [[356, "mne-compute-rank"]], "Examples using mne.compute_rank": [[356, "examples-using-mne-compute-rank"]], "mne.compute_raw_covariance": [[357, "mne-compute-raw-covariance"]], "Examples using mne.compute_raw_covariance": [[357, "examples-using-mne-compute-raw-covariance"]], "mne.compute_source_morph": [[358, "mne-compute-source-morph"]], "Examples using mne.compute_source_morph": [[358, "examples-using-mne-compute-source-morph"]], "mne.concatenate_epochs": [[359, "mne-concatenate-epochs"]], "Examples using mne.concatenate_epochs": [[359, "examples-using-mne-concatenate-epochs"]], "mne.concatenate_events": [[360, "mne-concatenate-events"]], "mne.concatenate_raws": [[361, "mne-concatenate-raws"]], "Examples using mne.concatenate_raws": [[361, "examples-using-mne-concatenate-raws"]], "mne.convert_forward_solution": [[362, "mne-convert-forward-solution"]], "Examples using mne.convert_forward_solution": [[362, "examples-using-mne-convert-forward-solution"]], "mne.coreg.Coregistration": [[363, "mne-coreg-coregistration"]], "Examples using mne.coreg.Coregistration": [[363, "examples-using-mne-coreg-coregistration"]], "mne.coreg.estimate_head_mri_t": [[364, "mne-coreg-estimate-head-mri-t"]], "Examples using mne.coreg.estimate_head_mri_t": [[364, "examples-using-mne-coreg-estimate-head-mri-t"]], "mne.coreg.get_mni_fiducials": [[365, "mne-coreg-get-mni-fiducials"]], "Examples using mne.coreg.get_mni_fiducials": [[365, "examples-using-mne-coreg-get-mni-fiducials"]], "mne.count_events": [[366, "mne-count-events"]], "mne.cov.compute_whitener": [[367, "mne-cov-compute-whitener"]], "mne.cov.prepare_noise_cov": [[368, "mne-cov-prepare-noise-cov"]], "mne.cov.regularize": [[369, "mne-cov-regularize"]], "Examples using mne.cov.regularize": [[369, "examples-using-mne-cov-regularize"]], "mne.create_default_subject": [[370, "mne-create-default-subject"]], "mne.create_info": [[371, "mne-create-info"]], "Examples using mne.create_info": [[371, "examples-using-mne-create-info"]], "mne.cuda.get_cuda_memory": [[372, "mne-cuda-get-cuda-memory"]], "mne.cuda.init_cuda": [[373, "mne-cuda-init-cuda"]], "mne.cuda.set_cuda_device": [[374, "mne-cuda-set-cuda-device"]], "mne.datasets.brainstorm.bst_auditory.data_path": [[375, "mne-datasets-brainstorm-bst-auditory-data-path"]], "mne.datasets.brainstorm.bst_raw.data_path": [[376, "mne-datasets-brainstorm-bst-raw-data-path"]], "mne.datasets.brainstorm.bst_resting.data_path": [[377, "mne-datasets-brainstorm-bst-resting-data-path"]], "mne.datasets.eegbci.load_data": [[378, "mne-datasets-eegbci-load-data"]], "mne.datasets.eegbci.standardize": [[379, "mne-datasets-eegbci-standardize"]], "mne.datasets.epilepsy_ecog.data_path": [[380, "mne-datasets-epilepsy-ecog-data-path"]], "Examples using mne.datasets.epilepsy_ecog.data_path": [[380, "examples-using-mne-datasets-epilepsy-ecog-data-path"]], "mne.datasets.erp_core.data_path": [[381, "mne-datasets-erp-core-data-path"]], "mne.datasets.fetch_aparc_sub_parcellation": [[382, "mne-datasets-fetch-aparc-sub-parcellation"]], "mne.datasets.fetch_dataset": [[383, "mne-datasets-fetch-dataset"]], "mne.datasets.fetch_fsaverage": [[384, "mne-datasets-fetch-fsaverage"]], "mne.datasets.fetch_hcp_mmp_parcellation": [[385, "mne-datasets-fetch-hcp-mmp-parcellation"]], "mne.datasets.fetch_infant_template": [[386, "mne-datasets-fetch-infant-template"]], "Examples using mne.datasets.fetch_infant_template": [[386, "examples-using-mne-datasets-fetch-infant-template"]], "mne.datasets.fetch_phantom": [[387, "mne-datasets-fetch-phantom"]], "mne.datasets.fnirs_motor.data_path": [[388, "mne-datasets-fnirs-motor-data-path"]], "mne.datasets.has_dataset": [[389, "mne-datasets-has-dataset"]], "mne.datasets.hf_sef.data_path": [[390, "mne-datasets-hf-sef-data-path"]], "mne.datasets.kiloword.data_path": [[391, "mne-datasets-kiloword-data-path"]], "Examples using mne.datasets.kiloword.data_path": [[391, "examples-using-mne-datasets-kiloword-data-path"]], "mne.datasets.limo.load_data": [[392, "mne-datasets-limo-load-data"]], "mne.datasets.misc.data_path": [[393, "mne-datasets-misc-data-path"]], "mne.datasets.mtrf.data_path": [[394, "mne-datasets-mtrf-data-path"]], "mne.datasets.multimodal.data_path": [[395, "mne-datasets-multimodal-data-path"]], "mne.datasets.opm.data_path": [[396, "mne-datasets-opm-data-path"]], "mne.datasets.phantom_4dbti.data_path": [[397, "mne-datasets-phantom-4dbti-data-path"]], "mne.datasets.refmeg_noise.data_path": [[398, "mne-datasets-refmeg-noise-data-path"]], "mne.datasets.sample.data_path": [[399, "mne-datasets-sample-data-path"]], "Examples using mne.datasets.sample.data_path": [[399, "examples-using-mne-datasets-sample-data-path"]], "mne.datasets.sleep_physionet.age.fetch_data": [[400, "mne-datasets-sleep-physionet-age-fetch-data"]], "Examples using mne.datasets.sleep_physionet.age.fetch_data": [[400, "examples-using-mne-datasets-sleep-physionet-age-fetch-data"]], "mne.datasets.sleep_physionet.temazepam.fetch_data": [[401, "mne-datasets-sleep-physionet-temazepam-fetch-data"]], "mne.datasets.somato.data_path": [[402, "mne-datasets-somato-data-path"]], "mne.datasets.spm_face.data_path": [[403, "mne-datasets-spm-face-data-path"]], "Examples using mne.datasets.spm_face.data_path": [[403, "examples-using-mne-datasets-spm-face-data-path"]], "mne.datasets.ssvep.data_path": [[404, "mne-datasets-ssvep-data-path"]], "mne.datasets.ucl_opm_auditory.data_path": [[405, "mne-datasets-ucl-opm-auditory-data-path"]], "mne.datasets.visual_92_categories.data_path": [[406, "mne-datasets-visual-92-categories-data-path"]], "mne.decimate_surface": [[407, "mne-decimate-surface"]], "mne.decoding.CSP": [[408, "mne-decoding-csp"]], "Examples using mne.decoding.CSP": [[408, "examples-using-mne-decoding-csp"]], "mne.decoding.EMS": [[409, "mne-decoding-ems"]], "Examples using mne.decoding.EMS": [[409, "examples-using-mne-decoding-ems"]], "mne.decoding.FilterEstimator": [[410, "mne-decoding-filterestimator"]], "Examples using mne.decoding.FilterEstimator": [[410, "examples-using-mne-decoding-filterestimator"]], "mne.decoding.GeneralizingEstimator": [[411, "mne-decoding-generalizingestimator"]], "Examples using mne.decoding.GeneralizingEstimator": [[411, "examples-using-mne-decoding-generalizingestimator"]], "mne.decoding.LinearModel": [[412, "mne-decoding-linearmodel"]], "Examples using mne.decoding.LinearModel": [[412, "examples-using-mne-decoding-linearmodel"]], "mne.decoding.PSDEstimator": [[413, "mne-decoding-psdestimator"]], "Examples using mne.decoding.PSDEstimator": [[413, "examples-using-mne-decoding-psdestimator"]], "mne.decoding.ReceptiveField": [[414, "mne-decoding-receptivefield"]], "Examples using mne.decoding.ReceptiveField": [[414, "examples-using-mne-decoding-receptivefield"]], "mne.decoding.SPoC": [[415, "mne-decoding-spoc"]], "Examples using mne.decoding.SPoC": [[415, "examples-using-mne-decoding-spoc"]], "mne.decoding.SSD": [[416, "mne-decoding-ssd"]], "Examples using mne.decoding.SSD": [[416, "examples-using-mne-decoding-ssd"]], "mne.decoding.Scaler": [[417, "mne-decoding-scaler"]], "Examples using mne.decoding.Scaler": [[417, "examples-using-mne-decoding-scaler"]], "mne.decoding.SlidingEstimator": [[418, "mne-decoding-slidingestimator"]], "Examples using mne.decoding.SlidingEstimator": [[418, "examples-using-mne-decoding-slidingestimator"]], "mne.decoding.TemporalFilter": [[419, "mne-decoding-temporalfilter"]], "mne.decoding.TimeDelayingRidge": [[420, "mne-decoding-timedelayingridge"]], "Examples using mne.decoding.TimeDelayingRidge": [[420, "examples-using-mne-decoding-timedelayingridge"]], "mne.decoding.TimeFrequency": [[421, "mne-decoding-timefrequency"]], "mne.decoding.UnsupervisedSpatialFilter": [[422, "mne-decoding-unsupervisedspatialfilter"]], "Examples using mne.decoding.UnsupervisedSpatialFilter": [[422, "examples-using-mne-decoding-unsupervisedspatialfilter"]], "mne.decoding.Vectorizer": [[423, "mne-decoding-vectorizer"]], "Examples using mne.decoding.Vectorizer": [[423, "examples-using-mne-decoding-vectorizer"]], "mne.decoding.compute_ems": [[424, "mne-decoding-compute-ems"]], "Examples using mne.decoding.compute_ems": [[424, "examples-using-mne-decoding-compute-ems"]], "mne.decoding.cross_val_multiscore": [[425, "mne-decoding-cross-val-multiscore"]], "Examples using mne.decoding.cross_val_multiscore": [[425, "examples-using-mne-decoding-cross-val-multiscore"]], "mne.decoding.get_coef": [[426, "mne-decoding-get-coef"]], "Examples using mne.decoding.get_coef": [[426, "examples-using-mne-decoding-get-coef"]], "mne.dig_mri_distances": [[427, "mne-dig-mri-distances"]], "Examples using mne.dig_mri_distances": [[427, "examples-using-mne-dig-mri-distances"]], "mne.dipole.get_phantom_dipoles": [[428, "mne-dipole-get-phantom-dipoles"]], "Examples using mne.dipole.get_phantom_dipoles": [[428, "examples-using-mne-dipole-get-phantom-dipoles"]], "mne.epochs.average_movements": [[429, "mne-epochs-average-movements"]], "Examples using mne.epochs.average_movements": [[429, "examples-using-mne-epochs-average-movements"]], "mne.epochs.combine_event_ids": [[430, "mne-epochs-combine-event-ids"]], "mne.epochs.equalize_epoch_counts": [[431, "mne-epochs-equalize-epoch-counts"]], "Examples using mne.epochs.equalize_epoch_counts": [[431, "examples-using-mne-epochs-equalize-epoch-counts"]], "mne.epochs.make_metadata": [[432, "mne-epochs-make-metadata"]], "Examples using mne.epochs.make_metadata": [[432, "examples-using-mne-epochs-make-metadata"]], "mne.equalize_channels": [[433, "mne-equalize-channels"]], "mne.event.define_target_events": [[434, "mne-event-define-target-events"]], "Examples using mne.event.define_target_events": [[434, "examples-using-mne-event-define-target-events"]], "mne.event.match_event_names": [[435, "mne-event-match-event-names"]], "mne.event.shift_time_events": [[436, "mne-event-shift-time-events"]], "mne.events_from_annotations": [[437, "mne-events-from-annotations"]], "Examples using mne.events_from_annotations": [[437, "examples-using-mne-events-from-annotations"]], "mne.export.export_epochs": [[438, "mne-export-export-epochs"]], "mne.export.export_evokeds": [[439, "mne-export-export-evokeds"]], "mne.export.export_evokeds_mff": [[440, "mne-export-export-evokeds-mff"]], "mne.export.export_raw": [[441, "mne-export-export-raw"]], "mne.extract_label_time_course": [[442, "mne-extract-label-time-course"]], "Examples using mne.extract_label_time_course": [[442, "examples-using-mne-extract-label-time-course"]], "mne.filter.construct_iir_filter": [[443, "mne-filter-construct-iir-filter"]], "Examples using mne.filter.construct_iir_filter": [[443, "examples-using-mne-filter-construct-iir-filter"]], "mne.filter.create_filter": [[444, "mne-filter-create-filter"]], "Examples using mne.filter.create_filter": [[444, "examples-using-mne-filter-create-filter"]], "mne.filter.estimate_ringing_samples": [[445, "mne-filter-estimate-ringing-samples"]], "mne.filter.filter_data": [[446, "mne-filter-filter-data"]], "Examples using mne.filter.filter_data": [[446, "examples-using-mne-filter-filter-data"]], "mne.filter.notch_filter": [[447, "mne-filter-notch-filter"]], "mne.filter.resample": [[448, "mne-filter-resample"]], "Examples using mne.filter.resample": [[448, "examples-using-mne-filter-resample"]], "mne.find_events": [[449, "mne-find-events"]], "Examples using mne.find_events": [[449, "examples-using-mne-find-events"]], "mne.find_stim_steps": [[450, "mne-find-stim-steps"]], "mne.fit_dipole": [[451, "mne-fit-dipole"]], "Examples using mne.fit_dipole": [[451, "examples-using-mne-fit-dipole"]], "mne.forward.compute_depth_prior": [[452, "mne-forward-compute-depth-prior"]], "mne.forward.compute_orient_prior": [[453, "mne-forward-compute-orient-prior"]], "mne.forward.restrict_forward_to_label": [[454, "mne-forward-restrict-forward-to-label"]], "mne.forward.restrict_forward_to_stc": [[455, "mne-forward-restrict-forward-to-stc"]], "mne.get_config": [[456, "mne-get-config"]], "Examples using mne.get_config": [[456, "examples-using-mne-get-config"]], "mne.get_config_path": [[457, "mne-get-config-path"]], "Examples using mne.get_config_path": [[457, "examples-using-mne-get-config-path"]], "mne.get_head_surf": [[458, "mne-get-head-surf"]], "mne.get_meg_helmet_surf": [[459, "mne-get-meg-helmet-surf"]], "mne.get_montage_volume_labels": [[460, "mne-get-montage-volume-labels"]], "Examples using mne.get_montage_volume_labels": [[460, "examples-using-mne-get-montage-volume-labels"]], "mne.get_volume_labels_from_aseg": [[461, "mne-get-volume-labels-from-aseg"]], "Examples using mne.get_volume_labels_from_aseg": [[461, "examples-using-mne-get-volume-labels-from-aseg"]], "mne.get_volume_labels_from_src": [[462, "mne-get-volume-labels-from-src"]], "mne.grade_to_tris": [[463, "mne-grade-to-tris"]], "mne.grade_to_vertices": [[464, "mne-grade-to-vertices"]], "mne.grand_average": [[465, "mne-grand-average"]], "Examples using mne.grand_average": [[465, "examples-using-mne-grand-average"]], "mne.grow_labels": [[466, "mne-grow-labels"]], "mne.gui.coregistration": [[467, "mne-gui-coregistration"]], "Examples using mne.gui.coregistration": [[467, "examples-using-mne-gui-coregistration"]], "mne.gui.locate_ieeg": [[468, "mne-gui-locate-ieeg"]], "Examples using mne.gui.locate_ieeg": [[468, "examples-using-mne-gui-locate-ieeg"]], "mne.head_to_mni": [[469, "mne-head-to-mni"]], "mne.head_to_mri": [[470, "mne-head-to-mri"]], "mne.inverse_sparse.gamma_map": [[471, "mne-inverse-sparse-gamma-map"]], "Examples using mne.inverse_sparse.gamma_map": [[471, "examples-using-mne-inverse-sparse-gamma-map"]], "mne.inverse_sparse.make_stc_from_dipoles": [[472, "mne-inverse-sparse-make-stc-from-dipoles"]], "Examples using mne.inverse_sparse.make_stc_from_dipoles": [[472, "examples-using-mne-inverse-sparse-make-stc-from-dipoles"]], "mne.inverse_sparse.mixed_norm": [[473, "mne-inverse-sparse-mixed-norm"]], "Examples using mne.inverse_sparse.mixed_norm": [[473, "examples-using-mne-inverse-sparse-mixed-norm"]], "mne.inverse_sparse.tf_mixed_norm": [[474, "mne-inverse-sparse-tf-mixed-norm"]], "Examples using mne.inverse_sparse.tf_mixed_norm": [[474, "examples-using-mne-inverse-sparse-tf-mixed-norm"]], "mne.io.BaseRaw": [[475, "mne-io-baseraw"]], "mne.io.Raw": [[476, "mne-io-raw"]], "Examples using mne.io.Raw": [[476, "examples-using-mne-io-raw"]], "mne.io.RawArray": [[477, "mne-io-rawarray"]], "Examples using mne.io.RawArray": [[477, "examples-using-mne-io-rawarray"]], "mne.io.anonymize_info": [[478, "mne-io-anonymize-info"]], "mne.io.kit.read_mrk": [[479, "mne-io-kit-read-mrk"]], "mne.io.read_fiducials": [[480, "mne-io-read-fiducials"]], "mne.io.read_info": [[481, "mne-io-read-info"]], "Examples using mne.io.read_info": [[481, "examples-using-mne-io-read-info"]], "mne.io.read_raw": [[482, "mne-io-read-raw"]], "Examples using mne.io.read_raw": [[482, "examples-using-mne-io-read-raw"]], "mne.io.read_raw_artemis123": [[483, "mne-io-read-raw-artemis123"]], "Examples using mne.io.read_raw_artemis123": [[483, "examples-using-mne-io-read-raw-artemis123"]], "mne.io.read_raw_bdf": [[484, "mne-io-read-raw-bdf"]], "Examples using mne.io.read_raw_bdf": [[484, "examples-using-mne-io-read-raw-bdf"]], "mne.io.read_raw_boxy": [[485, "mne-io-read-raw-boxy"]], "Examples using mne.io.read_raw_boxy": [[485, "examples-using-mne-io-read-raw-boxy"]], "mne.io.read_raw_brainvision": [[486, "mne-io-read-raw-brainvision"]], "Examples using mne.io.read_raw_brainvision": [[486, "examples-using-mne-io-read-raw-brainvision"]], "mne.io.read_raw_bti": [[487, "mne-io-read-raw-bti"]], "Examples using mne.io.read_raw_bti": [[487, "examples-using-mne-io-read-raw-bti"]], "mne.io.read_raw_cnt": [[488, "mne-io-read-raw-cnt"]], "Examples using mne.io.read_raw_cnt": [[488, "examples-using-mne-io-read-raw-cnt"]], "mne.io.read_raw_ctf": [[489, "mne-io-read-raw-ctf"]], "Examples using mne.io.read_raw_ctf": [[489, "examples-using-mne-io-read-raw-ctf"]], "mne.io.read_raw_curry": [[490, "mne-io-read-raw-curry"]], "mne.io.read_raw_edf": [[491, "mne-io-read-raw-edf"]], "Examples using mne.io.read_raw_edf": [[491, "examples-using-mne-io-read-raw-edf"]], "mne.io.read_raw_eeglab": [[492, "mne-io-read-raw-eeglab"]], "Examples using mne.io.read_raw_eeglab": [[492, "examples-using-mne-io-read-raw-eeglab"]], "mne.io.read_raw_egi": [[493, "mne-io-read-raw-egi"]], "Examples using mne.io.read_raw_egi": [[493, "examples-using-mne-io-read-raw-egi"]], "mne.io.read_raw_eximia": [[494, "mne-io-read-raw-eximia"]], "Examples using mne.io.read_raw_eximia": [[494, "examples-using-mne-io-read-raw-eximia"]], "mne.io.read_raw_fieldtrip": [[495, "mne-io-read-raw-fieldtrip"]], "Examples using mne.io.read_raw_fieldtrip": [[495, "examples-using-mne-io-read-raw-fieldtrip"]], "mne.io.read_raw_fif": [[496, "mne-io-read-raw-fif"]], "Examples using mne.io.read_raw_fif": [[496, "examples-using-mne-io-read-raw-fif"]], "mne.io.read_raw_fil": [[497, "mne-io-read-raw-fil"]], "Examples using mne.io.read_raw_fil": [[497, "examples-using-mne-io-read-raw-fil"]], "mne.io.read_raw_gdf": [[498, "mne-io-read-raw-gdf"]], "Examples using mne.io.read_raw_gdf": [[498, "examples-using-mne-io-read-raw-gdf"]], "mne.io.read_raw_hitachi": [[499, "mne-io-read-raw-hitachi"]], "Examples using mne.io.read_raw_hitachi": [[499, "examples-using-mne-io-read-raw-hitachi"]], "mne.io.read_raw_kit": [[500, "mne-io-read-raw-kit"]], "Examples using mne.io.read_raw_kit": [[500, "examples-using-mne-io-read-raw-kit"]], "mne.io.read_raw_nedf": [[501, "mne-io-read-raw-nedf"]], "mne.io.read_raw_nicolet": [[502, "mne-io-read-raw-nicolet"]], "Examples using mne.io.read_raw_nicolet": [[502, "examples-using-mne-io-read-raw-nicolet"]], "mne.io.read_raw_nihon": [[503, "mne-io-read-raw-nihon"]], "Examples using mne.io.read_raw_nihon": [[503, "examples-using-mne-io-read-raw-nihon"]], "mne.io.read_raw_nirx": [[504, "mne-io-read-raw-nirx"]], "Examples using mne.io.read_raw_nirx": [[504, "examples-using-mne-io-read-raw-nirx"]], "mne.io.read_raw_persyst": [[505, "mne-io-read-raw-persyst"]], "Examples using mne.io.read_raw_persyst": [[505, "examples-using-mne-io-read-raw-persyst"]], "mne.io.read_raw_snirf": [[506, "mne-io-read-raw-snirf"]], "Examples using mne.io.read_raw_snirf": [[506, "examples-using-mne-io-read-raw-snirf"]], "mne.io.show_fiff": [[507, "mne-io-show-fiff"]], "mne.io.write_fiducials": [[508, "mne-io-write-fiducials"]], "mne.label.select_sources": [[509, "mne-label-select-sources"]], "Examples using mne.label.select_sources": [[509, "examples-using-mne-label-select-sources"]], "mne.label_sign_flip": [[510, "mne-label-sign-flip"]], "Examples using mne.label_sign_flip": [[510, "examples-using-mne-label-sign-flip"]], "mne.labels_to_stc": [[511, "mne-labels-to-stc"]], "Examples using mne.labels_to_stc": [[511, "examples-using-mne-labels-to-stc"]], "mne.make_ad_hoc_cov": [[512, "mne-make-ad-hoc-cov"]], "Examples using mne.make_ad_hoc_cov": [[512, "examples-using-mne-make-ad-hoc-cov"]], "mne.make_bem_model": [[513, "mne-make-bem-model"]], "Examples using mne.make_bem_model": [[513, "examples-using-mne-make-bem-model"]], "mne.make_bem_solution": [[514, "mne-make-bem-solution"]], "Examples using mne.make_bem_solution": [[514, "examples-using-mne-make-bem-solution"]], "mne.make_field_map": [[515, "mne-make-field-map"]], "Examples using mne.make_field_map": [[515, "examples-using-mne-make-field-map"]], "mne.make_fixed_length_epochs": [[516, "mne-make-fixed-length-epochs"]], "Examples using mne.make_fixed_length_epochs": [[516, "examples-using-mne-make-fixed-length-epochs"]], "mne.make_fixed_length_events": [[517, "mne-make-fixed-length-events"]], "Examples using mne.make_fixed_length_events": [[517, "examples-using-mne-make-fixed-length-events"]], "mne.make_forward_dipole": [[518, "mne-make-forward-dipole"]], "Examples using mne.make_forward_dipole": [[518, "examples-using-mne-make-forward-dipole"]], "mne.make_forward_solution": [[519, "mne-make-forward-solution"]], "Examples using mne.make_forward_solution": [[519, "examples-using-mne-make-forward-solution"]], "mne.make_sphere_model": [[520, "mne-make-sphere-model"]], "Examples using mne.make_sphere_model": [[520, "examples-using-mne-make-sphere-model"]], "mne.merge_events": [[521, "mne-merge-events"]], "Examples using mne.merge_events": [[521, "examples-using-mne-merge-events"]], "mne.minimum_norm.InverseOperator": [[522, "mne-minimum-norm-inverseoperator"]], "Examples using mne.minimum_norm.InverseOperator": [[522, "examples-using-mne-minimum-norm-inverseoperator"]], "mne.minimum_norm.apply_inverse": [[523, "mne-minimum-norm-apply-inverse"]], "Examples using mne.minimum_norm.apply_inverse": [[523, "examples-using-mne-minimum-norm-apply-inverse"]], "mne.minimum_norm.apply_inverse_cov": [[524, "mne-minimum-norm-apply-inverse-cov"]], "Examples using mne.minimum_norm.apply_inverse_cov": [[524, "examples-using-mne-minimum-norm-apply-inverse-cov"]], "mne.minimum_norm.apply_inverse_epochs": [[525, "mne-minimum-norm-apply-inverse-epochs"]], "Examples using mne.minimum_norm.apply_inverse_epochs": [[525, "examples-using-mne-minimum-norm-apply-inverse-epochs"]], "mne.minimum_norm.apply_inverse_raw": [[526, "mne-minimum-norm-apply-inverse-raw"]], "Examples using mne.minimum_norm.apply_inverse_raw": [[526, "examples-using-mne-minimum-norm-apply-inverse-raw"]], "mne.minimum_norm.apply_inverse_tfr_epochs": [[527, "mne-minimum-norm-apply-inverse-tfr-epochs"]], "mne.minimum_norm.compute_rank_inverse": [[528, "mne-minimum-norm-compute-rank-inverse"]], "mne.minimum_norm.compute_source_psd": [[529, "mne-minimum-norm-compute-source-psd"]], "Examples using mne.minimum_norm.compute_source_psd": [[529, "examples-using-mne-minimum-norm-compute-source-psd"]], "mne.minimum_norm.compute_source_psd_epochs": [[530, "mne-minimum-norm-compute-source-psd-epochs"]], "Examples using mne.minimum_norm.compute_source_psd_epochs": [[530, "examples-using-mne-minimum-norm-compute-source-psd-epochs"]], "mne.minimum_norm.estimate_snr": [[531, "mne-minimum-norm-estimate-snr"]], "mne.minimum_norm.get_cross_talk": [[532, "mne-minimum-norm-get-cross-talk"]], "Examples using mne.minimum_norm.get_cross_talk": [[532, "examples-using-mne-minimum-norm-get-cross-talk"]], "mne.minimum_norm.get_point_spread": [[533, "mne-minimum-norm-get-point-spread"]], "Examples using mne.minimum_norm.get_point_spread": [[533, "examples-using-mne-minimum-norm-get-point-spread"]], "mne.minimum_norm.make_inverse_operator": [[534, "mne-minimum-norm-make-inverse-operator"]], "Examples using mne.minimum_norm.make_inverse_operator": [[534, "examples-using-mne-minimum-norm-make-inverse-operator"]], "mne.minimum_norm.make_inverse_resolution_matrix": [[535, "mne-minimum-norm-make-inverse-resolution-matrix"]], "Examples using mne.minimum_norm.make_inverse_resolution_matrix": [[535, "examples-using-mne-minimum-norm-make-inverse-resolution-matrix"]], "mne.minimum_norm.prepare_inverse_operator": [[536, "mne-minimum-norm-prepare-inverse-operator"]], "mne.minimum_norm.read_inverse_operator": [[537, "mne-minimum-norm-read-inverse-operator"]], "Examples using mne.minimum_norm.read_inverse_operator": [[537, "examples-using-mne-minimum-norm-read-inverse-operator"]], "mne.minimum_norm.resolution_metrics": [[538, "mne-minimum-norm-resolution-metrics"]], "Examples using mne.minimum_norm.resolution_metrics": [[538, "examples-using-mne-minimum-norm-resolution-metrics"]], "mne.minimum_norm.source_band_induced_power": [[539, "mne-minimum-norm-source-band-induced-power"]], "Examples using mne.minimum_norm.source_band_induced_power": [[539, "examples-using-mne-minimum-norm-source-band-induced-power"]], "mne.minimum_norm.source_induced_power": [[540, "mne-minimum-norm-source-induced-power"]], "Examples using mne.minimum_norm.source_induced_power": [[540, "examples-using-mne-minimum-norm-source-induced-power"]], "mne.minimum_norm.write_inverse_operator": [[541, "mne-minimum-norm-write-inverse-operator"]], "mne.morph_labels": [[542, "mne-morph-labels"]], "mne.morph_source_spaces": [[543, "mne-morph-source-spaces"]], "Examples using mne.morph_source_spaces": [[543, "examples-using-mne-morph-source-spaces"]], "mne.open_docs": [[544, "mne-open-docs"]], "mne.open_report": [[545, "mne-open-report"]], "Examples using mne.open_report": [[545, "examples-using-mne-open-report"]], "mne.parse_config": [[546, "mne-parse-config"]], "mne.pick_channels": [[547, "mne-pick-channels"]], "Examples using mne.pick_channels": [[547, "examples-using-mne-pick-channels"]], "mne.pick_channels_cov": [[548, "mne-pick-channels-cov"]], "mne.pick_channels_forward": [[549, "mne-pick-channels-forward"]], "mne.pick_channels_regexp": [[550, "mne-pick-channels-regexp"]], "Examples using mne.pick_channels_regexp": [[550, "examples-using-mne-pick-channels-regexp"]], "mne.pick_events": [[551, "mne-pick-events"]], "Examples using mne.pick_events": [[551, "examples-using-mne-pick-events"]], "mne.pick_info": [[552, "mne-pick-info"]], "Examples using mne.pick_info": [[552, "examples-using-mne-pick-info"]], "mne.pick_types": [[553, "mne-pick-types"]], "Examples using mne.pick_types": [[553, "examples-using-mne-pick-types"]], "mne.pick_types_forward": [[554, "mne-pick-types-forward"]], "Examples using mne.pick_types_forward": [[554, "examples-using-mne-pick-types-forward"]], "mne.preprocessing.EOGRegression": [[555, "mne-preprocessing-eogregression"]], "Examples using mne.preprocessing.EOGRegression": [[555, "examples-using-mne-preprocessing-eogregression"]], "mne.preprocessing.ICA": [[556, "mne-preprocessing-ica"]], "Examples using mne.preprocessing.ICA": [[556, "examples-using-mne-preprocessing-ica"]], "mne.preprocessing.Xdawn": [[557, "mne-preprocessing-xdawn"]], "Examples using mne.preprocessing.Xdawn": [[557, "examples-using-mne-preprocessing-xdawn"]], "mne.preprocessing.annotate_amplitude": [[558, "mne-preprocessing-annotate-amplitude"]], "mne.preprocessing.annotate_break": [[559, "mne-preprocessing-annotate-break"]], "Examples using mne.preprocessing.annotate_break": [[559, "examples-using-mne-preprocessing-annotate-break"]], "mne.preprocessing.annotate_movement": [[560, "mne-preprocessing-annotate-movement"]], "Examples using mne.preprocessing.annotate_movement": [[560, "examples-using-mne-preprocessing-annotate-movement"]], "mne.preprocessing.annotate_muscle_zscore": [[561, "mne-preprocessing-annotate-muscle-zscore"]], "Examples using mne.preprocessing.annotate_muscle_zscore": [[561, "examples-using-mne-preprocessing-annotate-muscle-zscore"]], "mne.preprocessing.annotate_nan": [[562, "mne-preprocessing-annotate-nan"]], "mne.preprocessing.compute_average_dev_head_t": [[563, "mne-preprocessing-compute-average-dev-head-t"]], "Examples using mne.preprocessing.compute_average_dev_head_t": [[563, "examples-using-mne-preprocessing-compute-average-dev-head-t"]], "mne.preprocessing.compute_bridged_electrodes": [[564, "mne-preprocessing-compute-bridged-electrodes"]], "Examples using mne.preprocessing.compute_bridged_electrodes": [[564, "examples-using-mne-preprocessing-compute-bridged-electrodes"]], "mne.preprocessing.compute_current_source_density": [[565, "mne-preprocessing-compute-current-source-density"]], "Examples using mne.preprocessing.compute_current_source_density": [[565, "examples-using-mne-preprocessing-compute-current-source-density"]], "mne.preprocessing.compute_fine_calibration": [[566, "mne-preprocessing-compute-fine-calibration"]], "mne.preprocessing.compute_maxwell_basis": [[567, "mne-preprocessing-compute-maxwell-basis"]], "mne.preprocessing.compute_proj_ecg": [[568, "mne-preprocessing-compute-proj-ecg"]], "Examples using mne.preprocessing.compute_proj_ecg": [[568, "examples-using-mne-preprocessing-compute-proj-ecg"]], "mne.preprocessing.compute_proj_eog": [[569, "mne-preprocessing-compute-proj-eog"]], "Examples using mne.preprocessing.compute_proj_eog": [[569, "examples-using-mne-preprocessing-compute-proj-eog"]], "mne.preprocessing.corrmap": [[570, "mne-preprocessing-corrmap"]], "Examples using mne.preprocessing.corrmap": [[570, "examples-using-mne-preprocessing-corrmap"]], "mne.preprocessing.cortical_signal_suppression": [[571, "mne-preprocessing-cortical-signal-suppression"]], "Examples using mne.preprocessing.cortical_signal_suppression": [[571, "examples-using-mne-preprocessing-cortical-signal-suppression"]], "mne.preprocessing.create_ecg_epochs": [[572, "mne-preprocessing-create-ecg-epochs"]], "Examples using mne.preprocessing.create_ecg_epochs": [[572, "examples-using-mne-preprocessing-create-ecg-epochs"]], "mne.preprocessing.create_eog_epochs": [[573, "mne-preprocessing-create-eog-epochs"]], "Examples using mne.preprocessing.create_eog_epochs": [[573, "examples-using-mne-preprocessing-create-eog-epochs"]], "mne.preprocessing.equalize_bads": [[574, "mne-preprocessing-equalize-bads"]], "mne.preprocessing.find_bad_channels_maxwell": [[575, "mne-preprocessing-find-bad-channels-maxwell"]], "Examples using mne.preprocessing.find_bad_channels_maxwell": [[575, "examples-using-mne-preprocessing-find-bad-channels-maxwell"]], "mne.preprocessing.find_ecg_events": [[576, "mne-preprocessing-find-ecg-events"]], "Examples using mne.preprocessing.find_ecg_events": [[576, "examples-using-mne-preprocessing-find-ecg-events"]], "mne.preprocessing.find_eog_events": [[577, "mne-preprocessing-find-eog-events"]], "Examples using mne.preprocessing.find_eog_events": [[577, "examples-using-mne-preprocessing-find-eog-events"]], "mne.preprocessing.fix_stim_artifact": [[578, "mne-preprocessing-fix-stim-artifact"]], "Examples using mne.preprocessing.fix_stim_artifact": [[578, "examples-using-mne-preprocessing-fix-stim-artifact"]], "mne.preprocessing.ica_find_ecg_events": [[579, "mne-preprocessing-ica-find-ecg-events"]], "mne.preprocessing.ica_find_eog_events": [[580, "mne-preprocessing-ica-find-eog-events"]], "mne.preprocessing.ieeg.project_sensors_onto_brain": [[581, "mne-preprocessing-ieeg-project-sensors-onto-brain"]], "Examples using mne.preprocessing.ieeg.project_sensors_onto_brain": [[581, "examples-using-mne-preprocessing-ieeg-project-sensors-onto-brain"]], "mne.preprocessing.infomax": [[582, "mne-preprocessing-infomax"]], "mne.preprocessing.interpolate_bridged_electrodes": [[583, "mne-preprocessing-interpolate-bridged-electrodes"]], "Examples using mne.preprocessing.interpolate_bridged_electrodes": [[583, "examples-using-mne-preprocessing-interpolate-bridged-electrodes"]], "mne.preprocessing.maxwell_filter": [[584, "mne-preprocessing-maxwell-filter"]], "Examples using mne.preprocessing.maxwell_filter": [[584, "examples-using-mne-preprocessing-maxwell-filter"]], "mne.preprocessing.maxwell_filter_prepare_emptyroom": [[585, "mne-preprocessing-maxwell-filter-prepare-emptyroom"]], "mne.preprocessing.nirs.beer_lambert_law": [[586, "mne-preprocessing-nirs-beer-lambert-law"]], "Examples using mne.preprocessing.nirs.beer_lambert_law": [[586, "examples-using-mne-preprocessing-nirs-beer-lambert-law"]], "mne.preprocessing.nirs.optical_density": [[587, "mne-preprocessing-nirs-optical-density"]], "Examples using mne.preprocessing.nirs.optical_density": [[587, "examples-using-mne-preprocessing-nirs-optical-density"]], "mne.preprocessing.nirs.scalp_coupling_index": [[588, "mne-preprocessing-nirs-scalp-coupling-index"]], "Examples using mne.preprocessing.nirs.scalp_coupling_index": [[588, "examples-using-mne-preprocessing-nirs-scalp-coupling-index"]], "mne.preprocessing.nirs.short_channels": [[589, "mne-preprocessing-nirs-short-channels"]], "mne.preprocessing.nirs.source_detector_distances": [[590, "mne-preprocessing-nirs-source-detector-distances"]], "Examples using mne.preprocessing.nirs.source_detector_distances": [[590, "examples-using-mne-preprocessing-nirs-source-detector-distances"]], "mne.preprocessing.nirs.temporal_derivative_distribution_repair": [[591, "mne-preprocessing-nirs-temporal-derivative-distribution-repair"]], "Examples using mne.preprocessing.nirs.temporal_derivative_distribution_repair": [[591, "examples-using-mne-preprocessing-nirs-temporal-derivative-distribution-repair"]], "mne.preprocessing.oversampled_temporal_projection": [[592, "mne-preprocessing-oversampled-temporal-projection"]], "Examples using mne.preprocessing.oversampled_temporal_projection": [[592, "examples-using-mne-preprocessing-oversampled-temporal-projection"]], "mne.preprocessing.peak_finder": [[593, "mne-preprocessing-peak-finder"]], "mne.preprocessing.read_eog_regression": [[594, "mne-preprocessing-read-eog-regression"]], "mne.preprocessing.read_fine_calibration": [[595, "mne-preprocessing-read-fine-calibration"]], "mne.preprocessing.read_ica": [[596, "mne-preprocessing-read-ica"]], "mne.preprocessing.read_ica_eeglab": [[597, "mne-preprocessing-read-ica-eeglab"]], "mne.preprocessing.realign_raw": [[598, "mne-preprocessing-realign-raw"]], "mne.preprocessing.regress_artifact": [[599, "mne-preprocessing-regress-artifact"]], "mne.preprocessing.write_fine_calibration": [[600, "mne-preprocessing-write-fine-calibration"]], "mne.random_parcellation": [[601, "mne-random-parcellation"]], "mne.read_annotations": [[602, "mne-read-annotations"]], "Examples using mne.read_annotations": [[602, "examples-using-mne-read-annotations"]], "mne.read_bem_solution": [[603, "mne-read-bem-solution"]], "Examples using mne.read_bem_solution": [[603, "examples-using-mne-read-bem-solution"]], "mne.read_bem_surfaces": [[604, "mne-read-bem-surfaces"]], "Examples using mne.read_bem_surfaces": [[604, "examples-using-mne-read-bem-surfaces"]], "mne.read_cov": [[605, "mne-read-cov"]], "Examples using mne.read_cov": [[605, "examples-using-mne-read-cov"]], "mne.read_dipole": [[606, "mne-read-dipole"]], "Examples using mne.read_dipole": [[606, "examples-using-mne-read-dipole"]], "mne.read_epochs": [[607, "mne-read-epochs"]], "Examples using mne.read_epochs": [[607, "examples-using-mne-read-epochs"]], "mne.read_epochs_eeglab": [[608, "mne-read-epochs-eeglab"]], "Examples using mne.read_epochs_eeglab": [[608, "examples-using-mne-read-epochs-eeglab"]], "mne.read_epochs_fieldtrip": [[609, "mne-read-epochs-fieldtrip"]], "Examples using mne.read_epochs_fieldtrip": [[609, "examples-using-mne-read-epochs-fieldtrip"]], "mne.read_epochs_kit": [[610, "mne-read-epochs-kit"]], "Examples using mne.read_epochs_kit": [[610, "examples-using-mne-read-epochs-kit"]], "mne.read_events": [[611, "mne-read-events"]], "Examples using mne.read_events": [[611, "examples-using-mne-read-events"]], "mne.read_evoked_besa": [[612, "mne-read-evoked-besa"]], "mne.read_evoked_fieldtrip": [[613, "mne-read-evoked-fieldtrip"]], "Examples using mne.read_evoked_fieldtrip": [[613, "examples-using-mne-read-evoked-fieldtrip"]], "mne.read_evokeds": [[614, "mne-read-evokeds"]], "Examples using mne.read_evokeds": [[614, "examples-using-mne-read-evokeds"]], "mne.read_evokeds_mff": [[615, "mne-read-evokeds-mff"]], "mne.read_forward_solution": [[616, "mne-read-forward-solution"]], "Examples using mne.read_forward_solution": [[616, "examples-using-mne-read-forward-solution"]], "mne.read_freesurfer_lut": [[617, "mne-read-freesurfer-lut"]], "mne.read_label": [[618, "mne-read-label"]], "Examples using mne.read_label": [[618, "examples-using-mne-read-label"]], "mne.read_labels_from_annot": [[619, "mne-read-labels-from-annot"]], "Examples using mne.read_labels_from_annot": [[619, "examples-using-mne-read-labels-from-annot"]], "mne.read_lta": [[620, "mne-read-lta"]], "mne.read_morph_map": [[621, "mne-read-morph-map"]], "mne.read_proj": [[622, "mne-read-proj"]], "Examples using mne.read_proj": [[622, "examples-using-mne-read-proj"]], "mne.read_reject_parameters": [[623, "mne-read-reject-parameters"]], "mne.read_source_estimate": [[624, "mne-read-source-estimate"]], "Examples using mne.read_source_estimate": [[624, "examples-using-mne-read-source-estimate"]], "mne.read_source_morph": [[625, "mne-read-source-morph"]], "Examples using mne.read_source_morph": [[625, "examples-using-mne-read-source-morph"]], "mne.read_source_spaces": [[626, "mne-read-source-spaces"]], "Examples using mne.read_source_spaces": [[626, "examples-using-mne-read-source-spaces"]], "mne.read_surface": [[627, "mne-read-surface"]], "Examples using mne.read_surface": [[627, "examples-using-mne-read-surface"]], "mne.read_talxfm": [[628, "mne-read-talxfm"]], "Examples using mne.read_talxfm": [[628, "examples-using-mne-read-talxfm"]], "mne.read_trans": [[629, "mne-read-trans"]], "Examples using mne.read_trans": [[629, "examples-using-mne-read-trans"]], "mne.read_tri": [[630, "mne-read-tri"]], "mne.read_vectorview_selection": [[631, "mne-read-vectorview-selection"]], "Examples using mne.read_vectorview_selection": [[631, "examples-using-mne-read-vectorview-selection"]], "mne.rename_channels": [[632, "mne-rename-channels"]], "mne.scale_bem": [[633, "mne-scale-bem"]], "mne.scale_labels": [[634, "mne-scale-labels"]], "mne.scale_mri": [[635, "mne-scale-mri"]], "Examples using mne.scale_mri": [[635, "examples-using-mne-scale-mri"]], "mne.scale_source_space": [[636, "mne-scale-source-space"]], "mne.sensitivity_map": [[637, "mne-sensitivity-map"]], "Examples using mne.sensitivity_map": [[637, "examples-using-mne-sensitivity-map"]], "mne.set_bipolar_reference": [[638, "mne-set-bipolar-reference"]], "Examples using mne.set_bipolar_reference": [[638, "examples-using-mne-set-bipolar-reference"]], "mne.set_cache_dir": [[639, "mne-set-cache-dir"]], "mne.set_config": [[640, "mne-set-config"]], "Examples using mne.set_config": [[640, "examples-using-mne-set-config"]], "mne.set_eeg_reference": [[641, "mne-set-eeg-reference"]], "Examples using mne.set_eeg_reference": [[641, "examples-using-mne-set-eeg-reference"]], "mne.set_log_file": [[642, "mne-set-log-file"]], "mne.set_log_level": [[643, "mne-set-log-level"]], "Examples using mne.set_log_level": [[643, "examples-using-mne-set-log-level"]], "mne.setup_source_space": [[644, "mne-setup-source-space"]], "Examples using mne.setup_source_space": [[644, "examples-using-mne-setup-source-space"]], "mne.setup_volume_source_space": [[645, "mne-setup-volume-source-space"]], "Examples using mne.setup_volume_source_space": [[645, "examples-using-mne-setup-volume-source-space"]], "mne.simulation.SourceSimulator": [[646, "mne-simulation-sourcesimulator"]], "Examples using mne.simulation.SourceSimulator": [[646, "examples-using-mne-simulation-sourcesimulator"]], "mne.simulation.add_chpi": [[647, "mne-simulation-add-chpi"]], "mne.simulation.add_ecg": [[648, "mne-simulation-add-ecg"]], "Examples using mne.simulation.add_ecg": [[648, "examples-using-mne-simulation-add-ecg"]], "mne.simulation.add_eog": [[649, "mne-simulation-add-eog"]], "Examples using mne.simulation.add_eog": [[649, "examples-using-mne-simulation-add-eog"]], "mne.simulation.add_noise": [[650, "mne-simulation-add-noise"]], "Examples using mne.simulation.add_noise": [[650, "examples-using-mne-simulation-add-noise"]], "mne.simulation.metrics.cosine_score": [[651, "mne-simulation-metrics-cosine-score"]], "Examples using mne.simulation.metrics.cosine_score": [[651, "examples-using-mne-simulation-metrics-cosine-score"]], "mne.simulation.metrics.f1_score": [[652, "mne-simulation-metrics-f1-score"]], "Examples using mne.simulation.metrics.f1_score": [[652, "examples-using-mne-simulation-metrics-f1-score"]], "mne.simulation.metrics.peak_position_error": [[653, "mne-simulation-metrics-peak-position-error"]], "Examples using mne.simulation.metrics.peak_position_error": [[653, "examples-using-mne-simulation-metrics-peak-position-error"]], "mne.simulation.metrics.precision_score": [[654, "mne-simulation-metrics-precision-score"]], "Examples using mne.simulation.metrics.precision_score": [[654, "examples-using-mne-simulation-metrics-precision-score"]], "mne.simulation.metrics.recall_score": [[655, "mne-simulation-metrics-recall-score"]], "Examples using mne.simulation.metrics.recall_score": [[655, "examples-using-mne-simulation-metrics-recall-score"]], "mne.simulation.metrics.region_localization_error": [[656, "mne-simulation-metrics-region-localization-error"]], "Examples using mne.simulation.metrics.region_localization_error": [[656, "examples-using-mne-simulation-metrics-region-localization-error"]], "mne.simulation.metrics.roc_auc_score": [[657, "mne-simulation-metrics-roc-auc-score"]], "mne.simulation.metrics.spatial_deviation_error": [[658, "mne-simulation-metrics-spatial-deviation-error"]], "Examples using mne.simulation.metrics.spatial_deviation_error": [[658, "examples-using-mne-simulation-metrics-spatial-deviation-error"]], "mne.simulation.select_source_in_label": [[659, "mne-simulation-select-source-in-label"]], "mne.simulation.simulate_evoked": [[660, "mne-simulation-simulate-evoked"]], "Examples using mne.simulation.simulate_evoked": [[660, "examples-using-mne-simulation-simulate-evoked"]], "mne.simulation.simulate_raw": [[661, "mne-simulation-simulate-raw"]], "Data alignment and stim channel encoding": [[661, "id3"]], "Examples using mne.simulation.simulate_raw": [[661, "examples-using-mne-simulation-simulate-raw"]], "mne.simulation.simulate_sparse_stc": [[662, "mne-simulation-simulate-sparse-stc"]], "Examples using mne.simulation.simulate_sparse_stc": [[662, "examples-using-mne-simulation-simulate-sparse-stc"]], "mne.simulation.simulate_stc": [[663, "mne-simulation-simulate-stc"]], "Examples using mne.simulation.simulate_stc": [[663, "examples-using-mne-simulation-simulate-stc"]], "mne.source_space.compute_distance_to_sensors": [[664, "mne-source-space-compute-distance-to-sensors"]], "Examples using mne.source_space.compute_distance_to_sensors": [[664, "examples-using-mne-source-space-compute-distance-to-sensors"]], "mne.source_space.get_decimated_surfaces": [[665, "mne-source-space-get-decimated-surfaces"]], "mne.spatial_dist_adjacency": [[666, "mne-spatial-dist-adjacency"]], "mne.spatial_inter_hemi_adjacency": [[667, "mne-spatial-inter-hemi-adjacency"]], "mne.spatial_src_adjacency": [[668, "mne-spatial-src-adjacency"]], "Examples using mne.spatial_src_adjacency": [[668, "examples-using-mne-spatial-src-adjacency"]], "mne.spatial_tris_adjacency": [[669, "mne-spatial-tris-adjacency"]], "mne.spatio_temporal_dist_adjacency": [[670, "mne-spatio-temporal-dist-adjacency"]], "mne.spatio_temporal_src_adjacency": [[671, "mne-spatio-temporal-src-adjacency"]], "mne.spatio_temporal_tris_adjacency": [[672, "mne-spatio-temporal-tris-adjacency"]], "mne.split_label": [[673, "mne-split-label"]], "mne.stats.bonferroni_correction": [[674, "mne-stats-bonferroni-correction"]], "Examples using mne.stats.bonferroni_correction": [[674, "examples-using-mne-stats-bonferroni-correction"]], "mne.stats.bootstrap_confidence_interval": [[675, "mne-stats-bootstrap-confidence-interval"]], "Examples using mne.stats.bootstrap_confidence_interval": [[675, "examples-using-mne-stats-bootstrap-confidence-interval"]], "mne.stats.combine_adjacency": [[676, "mne-stats-combine-adjacency"]], "Examples using mne.stats.combine_adjacency": [[676, "examples-using-mne-stats-combine-adjacency"]], "mne.stats.f_mway_rm": [[677, "mne-stats-f-mway-rm"]], "Examples using mne.stats.f_mway_rm": [[677, "examples-using-mne-stats-f-mway-rm"]], "mne.stats.f_oneway": [[678, "mne-stats-f-oneway"]], "Examples using mne.stats.f_oneway": [[678, "examples-using-mne-stats-f-oneway"]], "mne.stats.f_threshold_mway_rm": [[679, "mne-stats-f-threshold-mway-rm"]], "Examples using mne.stats.f_threshold_mway_rm": [[679, "examples-using-mne-stats-f-threshold-mway-rm"]], "mne.stats.fdr_correction": [[680, "mne-stats-fdr-correction"]], "Examples using mne.stats.fdr_correction": [[680, "examples-using-mne-stats-fdr-correction"]], "mne.stats.linear_regression": [[681, "mne-stats-linear-regression"]], "Examples using mne.stats.linear_regression": [[681, "examples-using-mne-stats-linear-regression"]], "mne.stats.linear_regression_raw": [[682, "mne-stats-linear-regression-raw"]], "Examples using mne.stats.linear_regression_raw": [[682, "examples-using-mne-stats-linear-regression-raw"]], "mne.stats.permutation_cluster_1samp_test": [[683, "mne-stats-permutation-cluster-1samp-test"]], "Examples using mne.stats.permutation_cluster_1samp_test": [[683, "examples-using-mne-stats-permutation-cluster-1samp-test"]], "mne.stats.permutation_cluster_test": [[684, "mne-stats-permutation-cluster-test"]], "Examples using mne.stats.permutation_cluster_test": [[684, "examples-using-mne-stats-permutation-cluster-test"]], "mne.stats.permutation_t_test": [[685, "mne-stats-permutation-t-test"]], "Examples using mne.stats.permutation_t_test": [[685, "examples-using-mne-stats-permutation-t-test"]], "mne.stats.spatio_temporal_cluster_1samp_test": [[686, "mne-stats-spatio-temporal-cluster-1samp-test"]], "Examples using mne.stats.spatio_temporal_cluster_1samp_test": [[686, "examples-using-mne-stats-spatio-temporal-cluster-1samp-test"]], "mne.stats.spatio_temporal_cluster_test": [[687, "mne-stats-spatio-temporal-cluster-test"]], "Examples using mne.stats.spatio_temporal_cluster_test": [[687, "examples-using-mne-stats-spatio-temporal-cluster-test"]], "mne.stats.summarize_clusters_stc": [[688, "mne-stats-summarize-clusters-stc"]], "Examples using mne.stats.summarize_clusters_stc": [[688, "examples-using-mne-stats-summarize-clusters-stc"]], "mne.stats.ttest_1samp_no_p": [[689, "mne-stats-ttest-1samp-no-p"]], "Examples using mne.stats.ttest_1samp_no_p": [[689, "examples-using-mne-stats-ttest-1samp-no-p"]], "mne.stats.ttest_ind_no_p": [[690, "mne-stats-ttest-ind-no-p"]], "mne.stc_near_sensors": [[691, "mne-stc-near-sensors"]], "Examples using mne.stc_near_sensors": [[691, "examples-using-mne-stc-near-sensors"]], "mne.stc_to_label": [[692, "mne-stc-to-label"]], "Examples using mne.stc_to_label": [[692, "examples-using-mne-stc-to-label"]], "mne.surface.complete_surface_info": [[693, "mne-surface-complete-surface-info"]], "mne.surface.read_curvature": [[694, "mne-surface-read-curvature"]], "Examples using mne.surface.read_curvature": [[694, "examples-using-mne-surface-read-curvature"]], "mne.sys_info": [[695, "mne-sys-info"]], "Examples using mne.sys_info": [[695, "examples-using-mne-sys-info"]], "mne.time_frequency.AverageTFR": [[696, "mne-time-frequency-averagetfr"]], "Examples using mne.time_frequency.AverageTFR": [[696, "examples-using-mne-time-frequency-averagetfr"]], "mne.time_frequency.CrossSpectralDensity": [[697, "mne-time-frequency-crossspectraldensity"]], "Examples using mne.time_frequency.CrossSpectralDensity": [[697, "examples-using-mne-time-frequency-crossspectraldensity"]], "mne.time_frequency.EpochsSpectrum": [[698, "mne-time-frequency-epochsspectrum"]], "Examples using mne.time_frequency.EpochsSpectrum": [[698, "examples-using-mne-time-frequency-epochsspectrum"]], "mne.time_frequency.EpochsTFR": [[699, "mne-time-frequency-epochstfr"]], "Examples using mne.time_frequency.EpochsTFR": [[699, "examples-using-mne-time-frequency-epochstfr"]], "mne.time_frequency.Spectrum": [[700, "mne-time-frequency-spectrum"]], "Examples using mne.time_frequency.Spectrum": [[700, "examples-using-mne-time-frequency-spectrum"]], "mne.time_frequency.csd_array_fourier": [[701, "mne-time-frequency-csd-array-fourier"]], "mne.time_frequency.csd_array_morlet": [[702, "mne-time-frequency-csd-array-morlet"]], "mne.time_frequency.csd_array_multitaper": [[703, "mne-time-frequency-csd-array-multitaper"]], "mne.time_frequency.csd_fourier": [[704, "mne-time-frequency-csd-fourier"]], "Examples using mne.time_frequency.csd_fourier": [[704, "examples-using-mne-time-frequency-csd-fourier"]], "mne.time_frequency.csd_morlet": [[705, "mne-time-frequency-csd-morlet"]], "Examples using mne.time_frequency.csd_morlet": [[705, "examples-using-mne-time-frequency-csd-morlet"]], "mne.time_frequency.csd_multitaper": [[706, "mne-time-frequency-csd-multitaper"]], "Examples using mne.time_frequency.csd_multitaper": [[706, "examples-using-mne-time-frequency-csd-multitaper"]], "mne.time_frequency.csd_tfr": [[707, "mne-time-frequency-csd-tfr"]], "Examples using mne.time_frequency.csd_tfr": [[707, "examples-using-mne-time-frequency-csd-tfr"]], "mne.time_frequency.dpss_windows": [[708, "mne-time-frequency-dpss-windows"]], "mne.time_frequency.fit_iir_model_raw": [[709, "mne-time-frequency-fit-iir-model-raw"]], "Examples using mne.time_frequency.fit_iir_model_raw": [[709, "examples-using-mne-time-frequency-fit-iir-model-raw"]], "mne.time_frequency.fwhm": [[710, "mne-time-frequency-fwhm"]], "mne.time_frequency.istft": [[711, "mne-time-frequency-istft"]], "mne.time_frequency.morlet": [[712, "mne-time-frequency-morlet"]], "Examples using mne.time_frequency.morlet": [[712, "examples-using-mne-time-frequency-morlet"]], "mne.time_frequency.pick_channels_csd": [[713, "mne-time-frequency-pick-channels-csd"]], "mne.time_frequency.psd_array_multitaper": [[714, "mne-time-frequency-psd-array-multitaper"]], "Examples using mne.time_frequency.psd_array_multitaper": [[714, "examples-using-mne-time-frequency-psd-array-multitaper"]], "mne.time_frequency.psd_array_welch": [[715, "mne-time-frequency-psd-array-welch"]], "Examples using mne.time_frequency.psd_array_welch": [[715, "examples-using-mne-time-frequency-psd-array-welch"]], "mne.time_frequency.read_csd": [[716, "mne-time-frequency-read-csd"]], "mne.time_frequency.read_spectrum": [[717, "mne-time-frequency-read-spectrum"]], "mne.time_frequency.read_tfrs": [[718, "mne-time-frequency-read-tfrs"]], "mne.time_frequency.stft": [[719, "mne-time-frequency-stft"]], "mne.time_frequency.stftfreq": [[720, "mne-time-frequency-stftfreq"]], "mne.time_frequency.tfr.cwt": [[721, "mne-time-frequency-tfr-cwt"]], "mne.time_frequency.tfr.morlet": [[722, "mne-time-frequency-tfr-morlet"]], "mne.time_frequency.tfr_array_morlet": [[723, "mne-time-frequency-tfr-array-morlet"]], "Examples using mne.time_frequency.tfr_array_morlet": [[723, "examples-using-mne-time-frequency-tfr-array-morlet"]], "mne.time_frequency.tfr_array_multitaper": [[724, "mne-time-frequency-tfr-array-multitaper"]], "mne.time_frequency.tfr_array_stockwell": [[725, "mne-time-frequency-tfr-array-stockwell"]], "mne.time_frequency.tfr_morlet": [[726, "mne-time-frequency-tfr-morlet"]], "Examples using mne.time_frequency.tfr_morlet": [[726, "examples-using-mne-time-frequency-tfr-morlet"]], "mne.time_frequency.tfr_multitaper": [[727, "mne-time-frequency-tfr-multitaper"]], "Examples using mne.time_frequency.tfr_multitaper": [[727, "examples-using-mne-time-frequency-tfr-multitaper"]], "mne.time_frequency.tfr_stockwell": [[728, "mne-time-frequency-tfr-stockwell"]], "Examples using mne.time_frequency.tfr_stockwell": [[728, "examples-using-mne-time-frequency-tfr-stockwell"]], "mne.time_frequency.write_tfrs": [[729, "mne-time-frequency-write-tfrs"]], "mne.transform_surface_to": [[730, "mne-transform-surface-to"]], "mne.transforms.Transform": [[731, "mne-transforms-transform"]], "mne.transforms.apply_volume_registration": [[732, "mne-transforms-apply-volume-registration"]], "Examples using mne.transforms.apply_volume_registration": [[732, "examples-using-mne-transforms-apply-volume-registration"]], "mne.transforms.compute_volume_registration": [[733, "mne-transforms-compute-volume-registration"]], "Examples using mne.transforms.compute_volume_registration": [[733, "examples-using-mne-transforms-compute-volume-registration"]], "mne.transforms.quat_to_rot": [[734, "mne-transforms-quat-to-rot"]], "mne.transforms.read_ras_mni_t": [[735, "mne-transforms-read-ras-mni-t"]], "Examples using mne.transforms.read_ras_mni_t": [[735, "examples-using-mne-transforms-read-ras-mni-t"]], "mne.transforms.rot_to_quat": [[736, "mne-transforms-rot-to-quat"]], "mne.use_coil_def": [[737, "mne-use-coil-def"]], "Examples using mne.use_coil_def": [[737, "examples-using-mne-use-coil-def"]], "mne.use_log_level": [[738, "mne-use-log-level"]], "Examples using mne.use_log_level": [[738, "examples-using-mne-use-log-level"]], "mne.utils.deprecated": [[739, "mne-utils-deprecated"]], "mne.utils.warn": [[740, "mne-utils-warn"]], "mne.verbose": [[741, "mne-verbose"]], "mne.vertex_to_mni": [[742, "mne-vertex-to-mni"]], "Examples using mne.vertex_to_mni": [[742, "examples-using-mne-vertex-to-mni"]], "mne.viz.Brain": [[743, "mne-viz-brain"]], "Examples using mne.viz.Brain": [[743, "examples-using-mne-viz-brain"]], "mne.viz.ClickableImage": [[744, "mne-viz-clickableimage"]], "Examples using mne.viz.ClickableImage": [[744, "examples-using-mne-viz-clickableimage"]], "mne.viz.Figure3D": [[745, "mne-viz-figure3d"]], "mne.viz.add_background_image": [[746, "mne-viz-add-background-image"]], "mne.viz.centers_to_edges": [[747, "mne-viz-centers-to-edges"]], "Examples using mne.viz.centers_to_edges": [[747, "examples-using-mne-viz-centers-to-edges"]], "mne.viz.circular_layout": [[748, "mne-viz-circular-layout"]], "Examples using mne.viz.circular_layout": [[748, "examples-using-mne-viz-circular-layout"]], "mne.viz.close_3d_figure": [[749, "mne-viz-close-3d-figure"]], "mne.viz.close_all_3d_figures": [[750, "mne-viz-close-all-3d-figures"]], "mne.viz.compare_fiff": [[751, "mne-viz-compare-fiff"]], "mne.viz.create_3d_figure": [[752, "mne-viz-create-3d-figure"]], "Examples using mne.viz.create_3d_figure": [[752, "examples-using-mne-viz-create-3d-figure"]], "mne.viz.get_3d_backend": [[753, "mne-viz-get-3d-backend"]], "mne.viz.get_brain_class": [[754, "mne-viz-get-brain-class"]], "Examples using mne.viz.get_brain_class": [[754, "examples-using-mne-viz-get-brain-class"]], "mne.viz.get_browser_backend": [[755, "mne-viz-get-browser-backend"]], "mne.viz.iter_topography": [[756, "mne-viz-iter-topography"]], "Examples using mne.viz.iter_topography": [[756, "examples-using-mne-viz-iter-topography"]], "mne.viz.link_brains": [[757, "mne-viz-link-brains"]], "mne.viz.mne_analyze_colormap": [[758, "mne-viz-mne-analyze-colormap"]], "mne.viz.plot_alignment": [[759, "mne-viz-plot-alignment"]], "Examples using mne.viz.plot_alignment": [[759, "examples-using-mne-viz-plot-alignment"]], "mne.viz.plot_arrowmap": [[760, "mne-viz-plot-arrowmap"]], "Examples using mne.viz.plot_arrowmap": [[760, "examples-using-mne-viz-plot-arrowmap"]], "mne.viz.plot_bem": [[761, "mne-viz-plot-bem"]], "Examples using mne.viz.plot_bem": [[761, "examples-using-mne-viz-plot-bem"]], "mne.viz.plot_brain_colorbar": [[762, "mne-viz-plot-brain-colorbar"]], "Examples using mne.viz.plot_brain_colorbar": [[762, "examples-using-mne-viz-plot-brain-colorbar"]], "mne.viz.plot_bridged_electrodes": [[763, "mne-viz-plot-bridged-electrodes"]], "Examples using mne.viz.plot_bridged_electrodes": [[763, "examples-using-mne-viz-plot-bridged-electrodes"]], "mne.viz.plot_ch_adjacency": [[764, "mne-viz-plot-ch-adjacency"]], "Examples using mne.viz.plot_ch_adjacency": [[764, "examples-using-mne-viz-plot-ch-adjacency"]], "mne.viz.plot_channel_labels_circle": [[765, "mne-viz-plot-channel-labels-circle"]], "Examples using mne.viz.plot_channel_labels_circle": [[765, "examples-using-mne-viz-plot-channel-labels-circle"]], "mne.viz.plot_chpi_snr": [[766, "mne-viz-plot-chpi-snr"]], "Examples using mne.viz.plot_chpi_snr": [[766, "examples-using-mne-viz-plot-chpi-snr"]], "mne.viz.plot_compare_evokeds": [[767, "mne-viz-plot-compare-evokeds"]], "Examples using mne.viz.plot_compare_evokeds": [[767, "examples-using-mne-viz-plot-compare-evokeds"]], "mne.viz.plot_cov": [[768, "mne-viz-plot-cov"]], "Examples using mne.viz.plot_cov": [[768, "examples-using-mne-viz-plot-cov"]], "mne.viz.plot_csd": [[769, "mne-viz-plot-csd"]], "mne.viz.plot_dipole_amplitudes": [[770, "mne-viz-plot-dipole-amplitudes"]], "Examples using mne.viz.plot_dipole_amplitudes": [[770, "examples-using-mne-viz-plot-dipole-amplitudes"]], "mne.viz.plot_dipole_locations": [[771, "mne-viz-plot-dipole-locations"]], "Examples using mne.viz.plot_dipole_locations": [[771, "examples-using-mne-viz-plot-dipole-locations"]], "mne.viz.plot_drop_log": [[772, "mne-viz-plot-drop-log"]], "mne.viz.plot_epochs": [[773, "mne-viz-plot-epochs"]], "mne.viz.plot_epochs_image": [[774, "mne-viz-plot-epochs-image"]], "Examples using mne.viz.plot_epochs_image": [[774, "examples-using-mne-viz-plot-epochs-image"]], "mne.viz.plot_epochs_psd_topomap": [[775, "mne-viz-plot-epochs-psd-topomap"]], "mne.viz.plot_events": [[776, "mne-viz-plot-events"]], "Examples using mne.viz.plot_events": [[776, "examples-using-mne-viz-plot-events"]], "mne.viz.plot_evoked": [[777, "mne-viz-plot-evoked"]], "mne.viz.plot_evoked_field": [[778, "mne-viz-plot-evoked-field"]], "mne.viz.plot_evoked_image": [[779, "mne-viz-plot-evoked-image"]], "Examples using mne.viz.plot_evoked_image": [[779, "examples-using-mne-viz-plot-evoked-image"]], "mne.viz.plot_evoked_joint": [[780, "mne-viz-plot-evoked-joint"]], "mne.viz.plot_evoked_topo": [[781, "mne-viz-plot-evoked-topo"]], "Examples using mne.viz.plot_evoked_topo": [[781, "examples-using-mne-viz-plot-evoked-topo"]], "mne.viz.plot_evoked_topomap": [[782, "mne-viz-plot-evoked-topomap"]], "mne.viz.plot_evoked_white": [[783, "mne-viz-plot-evoked-white"]], "Examples using mne.viz.plot_evoked_white": [[783, "examples-using-mne-viz-plot-evoked-white"]], "mne.viz.plot_filter": [[784, "mne-viz-plot-filter"]], "Examples using mne.viz.plot_filter": [[784, "examples-using-mne-viz-plot-filter"]], "mne.viz.plot_head_positions": [[785, "mne-viz-plot-head-positions"]], "Examples using mne.viz.plot_head_positions": [[785, "examples-using-mne-viz-plot-head-positions"]], "mne.viz.plot_ica_components": [[786, "mne-viz-plot-ica-components"]], "mne.viz.plot_ica_overlay": [[787, "mne-viz-plot-ica-overlay"]], "mne.viz.plot_ica_properties": [[788, "mne-viz-plot-ica-properties"]], "mne.viz.plot_ica_scores": [[789, "mne-viz-plot-ica-scores"]], "mne.viz.plot_ica_sources": [[790, "mne-viz-plot-ica-sources"]], "mne.viz.plot_ideal_filter": [[791, "mne-viz-plot-ideal-filter"]], "Examples using mne.viz.plot_ideal_filter": [[791, "examples-using-mne-viz-plot-ideal-filter"]], "mne.viz.plot_layout": [[792, "mne-viz-plot-layout"]], "mne.viz.plot_montage": [[793, "mne-viz-plot-montage"]], "mne.viz.plot_projs_joint": [[794, "mne-viz-plot-projs-joint"]], "Examples using mne.viz.plot_projs_joint": [[794, "examples-using-mne-viz-plot-projs-joint"]], "mne.viz.plot_projs_topomap": [[795, "mne-viz-plot-projs-topomap"]], "Examples using mne.viz.plot_projs_topomap": [[795, "examples-using-mne-viz-plot-projs-topomap"]], "mne.viz.plot_raw": [[796, "mne-viz-plot-raw"]], "mne.viz.plot_raw_psd": [[797, "mne-viz-plot-raw-psd"]], "mne.viz.plot_regression_weights": [[798, "mne-viz-plot-regression-weights"]], "mne.viz.plot_sensors": [[799, "mne-viz-plot-sensors"]], "mne.viz.plot_snr_estimate": [[800, "mne-viz-plot-snr-estimate"]], "Examples using mne.viz.plot_snr_estimate": [[800, "examples-using-mne-viz-plot-snr-estimate"]], "mne.viz.plot_source_estimates": [[801, "mne-viz-plot-source-estimates"]], "Examples using mne.viz.plot_source_estimates": [[801, "examples-using-mne-viz-plot-source-estimates"]], "mne.viz.plot_sparse_source_estimates": [[802, "mne-viz-plot-sparse-source-estimates"]], "Examples using mne.viz.plot_sparse_source_estimates": [[802, "examples-using-mne-viz-plot-sparse-source-estimates"]], "mne.viz.plot_tfr_topomap": [[803, "mne-viz-plot-tfr-topomap"]], "mne.viz.plot_topo_image_epochs": [[804, "mne-viz-plot-topo-image-epochs"]], "mne.viz.plot_topomap": [[805, "mne-viz-plot-topomap"]], "Examples using mne.viz.plot_topomap": [[805, "examples-using-mne-viz-plot-topomap"]], "mne.viz.plot_vector_source_estimates": [[806, "mne-viz-plot-vector-source-estimates"]], "Examples using mne.viz.plot_vector_source_estimates": [[806, "examples-using-mne-viz-plot-vector-source-estimates"]], "mne.viz.plot_volume_source_estimates": [[807, "mne-viz-plot-volume-source-estimates"]], "mne.viz.set_3d_backend": [[808, "mne-viz-set-3d-backend"]], "Examples using mne.viz.set_3d_backend": [[808, "examples-using-mne-viz-set-3d-backend"]], "mne.viz.set_3d_options": [[809, "mne-viz-set-3d-options"]], "mne.viz.set_3d_title": [[810, "mne-viz-set-3d-title"]], "Examples using mne.viz.set_3d_title": [[810, "examples-using-mne-viz-set-3d-title"]], "mne.viz.set_3d_view": [[811, "mne-viz-set-3d-view"]], "Examples using mne.viz.set_3d_view": [[811, "examples-using-mne-viz-set-3d-view"]], "mne.viz.set_browser_backend": [[812, "mne-viz-set-browser-backend"]], "mne.viz.snapshot_brain_montage": [[813, "mne-viz-snapshot-brain-montage"]], "Examples using mne.viz.snapshot_brain_montage": [[813, "examples-using-mne-viz-snapshot-brain-montage"]], "mne.viz.use_3d_backend": [[814, "mne-viz-use-3d-backend"]], "mne.viz.use_browser_backend": [[815, "mne-viz-use-browser-backend"]], "Examples using mne.viz.use_browser_backend": [[815, "examples-using-mne-viz-use-browser-backend"]], "mne.warp_montage_volume": [[816, "mne-warp-montage-volume"]], "Examples using mne.warp_montage_volume": [[816, "examples-using-mne-warp-montage-volume"]], "mne.what": [[817, "mne-what"]], "mne.write_bem_solution": [[818, "mne-write-bem-solution"]], "mne.write_bem_surfaces": [[819, "mne-write-bem-surfaces"]], "mne.write_cov": [[820, "mne-write-cov"]], "Examples using mne.write_cov": [[820, "examples-using-mne-write-cov"]], "mne.write_events": [[821, "mne-write-events"]], "Examples using mne.write_events": [[821, "examples-using-mne-write-events"]], "mne.write_evokeds": [[822, "mne-write-evokeds"]], "Examples using mne.write_evokeds": [[822, "examples-using-mne-write-evokeds"]], "mne.write_forward_solution": [[823, "mne-write-forward-solution"]], "Examples using mne.write_forward_solution": [[823, "examples-using-mne-write-forward-solution"]], "mne.write_head_bem": [[824, "mne-write-head-bem"]], "Examples using mne.write_head_bem": [[824, "examples-using-mne-write-head-bem"]], "mne.write_label": [[825, "mne-write-label"]], "mne.write_labels_to_annot": [[826, "mne-write-labels-to-annot"]], "mne.write_proj": [[827, "mne-write-proj"]], "Examples using mne.write_proj": [[827, "examples-using-mne-write-proj"]], "mne.write_source_spaces": [[828, "mne-write-source-spaces"]], "mne.write_surface": [[829, "mne-write-surface"]], "Examples using mne.write_surface": [[829, "examples-using-mne-write-surface"]], "mne.write_trans": [[830, "mne-write-trans"]], "Glossary": [[831, "glossary"]], "MNE-Python Homepage": [[832, "mne-python-homepage"]], "Advanced setup": [[833, "advanced-setup"]], "Working with Jupyter Notebooks and JupyterLab": [[833, "working-with-jupyter-notebooks-and-jupyterlab"]], "<i class=\"fa-brands fa-windows\"></i> Windows": [[833, null]], "Installing to a headless Linux server": [[833, "installing-to-a-headless-linux-server"]], "Using the development version": [[833, "using-the-development-version"]], "Other Python distributions": [[833, "other-python-distributions"]], "GPU acceleration with CUDA": [[833, "gpu-acceleration-with-cuda"]], "Off-screen rendering with MESA": [[833, "off-screen-rendering-with-mesa"]], "Troubleshooting 3D plots": [[833, "troubleshooting-3d-plots"]], "3D plotting trouble after upgrade on macOS": [[833, "d-plotting-trouble-after-upgrade-on-macos"]], "Testing your installation": [[834, "testing-your-installation"]], "Contributing guide": [[835, "contributing-guide"]], "Overview of contribution process": [[835, "overview-of-contribution-process"]], "Setting up your local development environment": [[835, "setting-up-your-local-development-environment"]], "Configuring git": [[835, "configuring-git"]], "GNU Make": [[835, "gnu-make"]], "Forking the MNE-Python repository": [[835, "forking-the-mne-python-repository"]], "Creating the virtual environment": [[835, "creating-the-virtual-environment"]], "Basic git commands": [[835, "basic-git-commands"]], "Connecting to GitHub with SSH (optional)": [[835, "connecting-to-github-with-ssh-optional"]], "MNE-Python coding conventions": [[835, "mne-python-coding-conventions"]], "General requirements": [[835, "general-requirements"]], "All new functionality must have test coverage": [[835, "all-new-functionality-must-have-test-coverage"]], "All new functionality must be documented": [[835, "all-new-functionality-must-be-documented"]], "Avoid API changes when possible": [[835, "avoid-api-changes-when-possible"]], "Deprecate with a decorator or a warning": [[835, "deprecate-with-a-decorator-or-a-warning"]], "Describe your changes in the changelog": [[835, "describe-your-changes-in-the-changelog"]], "First-time contributors": [[835, "first-time-contributors"]], "Recurring contributors": [[835, "recurring-contributors"]], "Test locally before opening pull requests (PRs)": [[835, "test-locally-before-opening-pull-requests-prs"]], "Make tests fast and thorough": [[835, "make-tests-fast-and-thorough"]], "Code style": [[835, "code-style"]], "Adhere to standard Python style guidelines": [[835, "adhere-to-standard-python-style-guidelines"]], "Use consistent variable naming": [[835, "use-consistent-variable-naming"]], "We (mostly) follow NumPy style for docstrings": [[835, "we-mostly-follow-numpy-style-for-docstrings"]], "Cross-reference everywhere": [[835, "cross-reference-everywhere"]], "Other style guidance": [[835, "other-style-guidance"]], "Code organization": [[835, "code-organization"]], "Importing": [[835, "importing"]], "Return types": [[835, "return-types"]], "Running the test suite": [[835, "running-the-test-suite"]], "Building the documentation": [[835, "building-the-documentation"]], "Modifying command-line tools": [[835, "modifying-command-line-tools"]], "GitHub workflow": [[835, "github-workflow"]], "Installing FreeSurfer": [[836, "installing-freesurfer"]], "Installing MNE-Python": [[837, "installing-mne-python"]], "MNE-Python installers": [[838, "mne-python-installers"]], "VS Code Setup": [[838, "vs-code-setup"]], "Install via pip or conda": [[839, "install-via-pip-or-conda"]], "Installing MNE-Python with all dependencies": [[839, "installing-mne-python-with-all-dependencies"]], "Installing a minimal MNE-Python with core functionality only": [[839, "installing-a-minimal-mne-python-with-core-functionality-only"]], "Installing a minimal MNE-Python with EEGLAB I/O support": [[839, "installing-a-minimal-mne-python-with-eeglab-i-o-support"]], "Installing MNE-Python for other scenarios": [[839, "installing-mne-python-for-other-scenarios"]], "Python IDEs": [[839, "python-ides"]], "Installing Python": [[840, "installing-python"]], "Installing MNE-C": [[841, "installing-mne-c"]], "System requirements": [[841, "system-requirements"]], "<i class=\"fa-brands fa-apple\"></i> macOS": [[841, null]], "Downloading and Installing MNE-C": [[841, "downloading-and-installing-mne-c"]], "Configuring MNE-C": [[841, "configuring-mne-c"]], "Testing MNE-C installation": [[841, "testing-mne-c-installation"]], "Troubleshooting MNE-C installation": [[841, "troubleshooting-mne-c-installation"]], "Overview of the MNE tools suite": [[842, "overview-of-the-mne-tools-suite"]], "Related software": [[842, "related-software"]], "What should I install?": [[842, "what-should-i-install"]], "Getting help": [[842, "getting-help"], [856, "getting-help"]], "Updating MNE-Python": [[843, "updating-mne-python"]], "Upgrading MNE-Python only": [[843, "upgrading-mne-python-only"]], "Upgrading all packages": [[843, "upgrading-all-packages"]], "Upgrading to the development version": [[843, "upgrading-to-the-development-version"]], "Inverse Solutions": [[844, "inverse-solutions"]], "Logging and Configuration": [[845, "logging-and-configuration"]], "Martinos Center setup": [[846, "martinos-center-setup"]], "MNE with CPP": [[847, "mne-with-cpp"]], "Most-used classes": [[848, "most-used-classes"]], "MRI Processing": [[849, "mri-processing"]], "How to cite MNE-Python": [[850, "how-to-cite-mne-python"]], "Citing the software": [[850, "citing-the-software"]], "Citing the inverse imaging algorithms": [[850, "citing-the-inverse-imaging-algorithms"]], "Citing other algorithms": [[850, "citing-other-algorithms"]], "The typical M/EEG workflow": [[851, "the-typical-m-eeg-workflow"]], "Overview": [[851, "overview"], [861, "overview"]], "Artifact suppression": [[851, "artifact-suppression"]], "SSP": [[851, "ssp"]], "ICA": [[851, "ica"]], "Epoching and evoked data": [[851, "epoching-and-evoked-data"]], "Rejection using annotations": [[851, "rejection-using-annotations"]], "Source localization": [[851, "source-localization"]], "Anatomical information": [[851, "anatomical-information"]], "Cortical surface reconstruction with FreeSurfer": [[851, "cortical-surface-reconstruction-with-freesurfer"]], "Setting up the source space": [[851, "setting-up-the-source-space"]], "Recommended subdivisions of an icosahedron and an octahedron for\n       the creation of source spaces. The approximate source spacing and\n       corresponding surface area have been calculated assuming a\n       1000-cm2 surface area per hemisphere.": [[851, "id9"]], "Creating the BEM model meshes": [[851, "creating-the-bem-model-meshes"]], "Setting up the head surface triangulation files": [[851, "setting-up-the-head-surface-triangulation-files"]], "Setting up the boundary-element model": [[851, "setting-up-the-boundary-element-model"]], "Aligning coordinate frames": [[851, "aligning-coordinate-frames"]], "Computing the forward solution": [[851, "computing-the-forward-solution"], [858, "computing-the-forward-solution"]], "Computing the noise-covariance matrix": [[851, "computing-the-noise-covariance-matrix"]], "Calculating the inverse operator": [[851, "calculating-the-inverse-operator"]], "Creating source estimates": [[851, "creating-source-estimates"]], "Group analyses": [[851, "group-analyses"]], "Datasets Overview": [[852, "datasets-overview"]], "Sample": [[852, "sample"]], "Trigger codes for the sample data set.": [[852, "id20"]], "Contents of the data set": [[852, "contents-of-the-data-set"]], "Contents of the MEG/sample directory.": [[852, "id21"]], "Overview of the contents of the subjects/sample directory.": [[852, "id22"]], "UCL OPM Auditory": [[852, "ucl-opm-auditory"]], "Brainstorm": [[852, "brainstorm"]], "Auditory": [[852, "auditory"]], "Resting state": [[852, "resting-state"]], "Median nerve": [[852, "median-nerve"]], "SPM faces": [[852, "spm-faces"]], "EEGBCI motor imagery": [[852, "eegbci-motor-imagery"]], "Somatosensory": [[852, "somatosensory"]], "Multimodal": [[852, "multimodal"]], "fNIRS motor": [[852, "fnirs-motor"]], "High frequency SEF": [[852, "high-frequency-sef"]], "Visual 92 object categories": [[852, "visual-92-object-categories"]], "mTRF Dataset": [[852, "mtrf-dataset"]], "Kiloword dataset": [[852, "kiloword-dataset"]], "4D Neuroimaging / BTi dataset": [[852, "d-neuroimaging-bti-dataset"]], "OPM": [[852, "opm"]], "The Sleep PolySomnoGraphic Database": [[852, "the-sleep-polysomnographic-database"]], "Reference channel noise MEG data set": [[852, "reference-channel-noise-meg-data-set"]], "Miscellaneous Datasets": [[852, "miscellaneous-datasets"]], "fsaverage": [[852, "fsaverage"]], "Infant template MRIs": [[852, "infant-template-mris"]], "ECoG Dataset": [[852, "ecog-dataset"]], "sEEG Dataset": [[852, "seeg-dataset"]], "LIMO Dataset": [[852, "limo-dataset"]], "ERP CORE Dataset": [[852, "erp-core-dataset"]], "SSVEP": [[852, "ssvep"]], "Interactive versus scripted analysis": [[853, "interactive-versus-scripted-analysis"]], "Integration with the scientific python stack": [[853, "integration-with-the-scientific-python-stack"]], "Submodule-based organization": [[853, "submodule-based-organization"]], "(Mostly) unified API": [[853, "mostly-unified-api"]], "In-place operation": [[853, "in-place-operation"]], "MNE-Python Development": [[854, "mne-python-development"]], "Frequently Asked Questions (FAQ)": [[855, "frequently-asked-questions-faq"]], "General MNE-Python issues": [[855, "general-mne-python-issues"]], "Help! I can\u2019t get Python and MNE-Python working!": [[855, "help-i-can-t-get-python-and-mne-python-working"]], "I still can\u2019t get it to work!": [[855, "i-still-can-t-get-it-to-work"]], "I can\u2019t get PyVista/3D plotting to work under Windows": [[855, "i-can-t-get-pyvista-3d-plotting-to-work-under-windows"]], "Python runs on macOS extremely slow even on simple commands!": [[855, "python-runs-on-macos-extremely-slow-even-on-simple-commands"]], "How do I cite MNE?": [[855, "how-do-i-cite-mne"]], "I\u2019m not sure how to do X analysis step with my Y data\u2026": [[855, "i-m-not-sure-how-to-do-x-analysis-step-with-my-y-data"]], "I think I found a bug, what do I do?": [[855, "i-think-i-found-a-bug-what-do-i-do"]], "Why is it dangerous to \u201cpickle\u201d my MNE-Python objects and data for later use?": [[855, "why-is-it-dangerous-to-pickle-my-mne-python-objects-and-data-for-later-use"]], "I downloaded a dataset once, but MNE-Python is asking to download it again. Why?": [[855, "i-downloaded-a-dataset-once-but-mne-python-is-asking-to-download-it-again-why"]], "A function uses multiple CPU cores even though I didn\u2019t tell it to. Why?": [[855, "a-function-uses-multiple-cpu-cores-even-though-i-didn-t-tell-it-to-why"]], "I have a mystery FIF file, how do I read it?": [[855, "i-have-a-mystery-fif-file-how-do-i-read-it"]], "Resampling and decimating data": [[855, "resampling-and-decimating-data"]], "What are all these options for resampling, decimating, and binning data?": [[855, "what-are-all-these-options-for-resampling-decimating-and-binning-data"]], "Resampling raw data is taking forever! What do I do?": [[855, "resampling-raw-data-is-taking-forever-what-do-i-do"]], "Forward and Inverse Solution": [[855, "forward-and-inverse-solution"]], "My watershed BEM meshes look incorrect": [[855, "my-watershed-bem-meshes-look-incorrect"]], "Project Governance": [[857, "project-governance"]], "The Project": [[857, "the-project"]], "Governance model": [[857, "governance-model"]], "BDFL": [[857, "bdfl"]], "Steering Council": [[857, "steering-council"], [863, "steering-council"]], "Council membership": [[857, "council-membership"]], "Conflict of interest": [[857, "conflict-of-interest"]], "Private communications of the Council": [[857, "private-communications-of-the-council"]], "Council decision making": [[857, "council-decision-making"]], "Institutional Partners and funding": [[857, "institutional-partners-and-funding"]], "Document history": [[857, "document-history"], [863, "document-history"]], "Acknowledgements": [[857, "acknowledgements"]], "License": [[857, "license"]], "Algorithms and other implementation details": [[858, "algorithms-and-other-implementation-details"]], "Internal representation (units)": [[858, "internal-representation-units"]], "Floating-point precision": [[858, "floating-point-precision"]], "Supported channel types": [[858, "supported-channel-types"]], "Supported data formats": [[858, "supported-data-formats"]], "Supported formats for digitized 3D locations": [[858, "supported-formats-for-digitized-3d-locations"]], "Memory-efficient I/O": [[858, "memory-efficient-i-o"]], "Preloading continuous (raw) data": [[858, "preloading-continuous-raw-data"]], "Preloading epoched data": [[858, "preloading-epoched-data"]], "Loading data explicitly": [[858, "loading-data-explicitly"]], "Accessing data as NumPy arrays": [[858, "accessing-data-as-numpy-arrays"]], "Bad channel repair via interpolation": [[858, "bad-channel-repair-via-interpolation"]], "Maxwell filtering": [[858, "maxwell-filtering"]], "Signal-Space Projection (SSP)": [[858, "signal-space-projection-ssp"]], "General concepts": [[858, "general-concepts"]], "Estimation of the noise subspace": [[858, "estimation-of-the-noise-subspace"]], "EEG average electrode reference": [[858, "eeg-average-electrode-reference"]], "The Boundary Element Model (BEM)": [[858, "the-boundary-element-model-bem"]], "Using the watershed algorithm": [[858, "using-the-watershed-algorithm"]], "Using FLASH images": [[858, "using-flash-images"]], "Organizing MRI data into directories": [[858, "organizing-mri-data-into-directories"]], "Creating the surface tessellations": [[858, "creating-the-surface-tessellations"]], "Inspecting the meshes": [[858, "inspecting-the-meshes"]], "The forward solution": [[858, "the-forward-solution"]], "MEG/EEG and MRI coordinate systems": [[858, "meg-eeg-and-mri-coordinate-systems"]], "Coordinate transformations in FreeSurfer and MNE software packages.": [[858, "id18"]], "The head and device coordinate systems": [[858, "the-head-and-device-coordinate-systems"]], "Creating a surface-based source space": [[858, "creating-a-surface-based-source-space"]], "Creating a volumetric or discrete source space": [[858, "creating-a-volumetric-or-discrete-source-space"]], "Creating the BEM meshes": [[858, "creating-the-bem-meshes"]], "Topology checks": [[858, "topology-checks"]], "Computing the BEM geometry data": [[858, "computing-the-bem-geometry-data"]], "Coil geometry information": [[858, "coil-geometry-information"]], "The sensor coordinate system": [[858, "the-sensor-coordinate-system"]], "Calculation of the magnetic field": [[858, "calculation-of-the-magnetic-field"]], "Implemented coil geometries": [[858, "implemented-coil-geometries"]], "Normal coil descriptions.": [[858, "id20"]], "Accurate coil descriptions": [[858, "id21"]], "The coil definition file": [[858, "the-coil-definition-file"]], "Coil representation accuracies.": [[858, "id22"]], "Purpose": [[858, "purpose"]], "Implementation of software gradient compensation": [[858, "implementation-of-software-gradient-compensation"]], "The EEG sphere model definition file": [[858, "the-eeg-sphere-model-definition-file"]], "Structure of the default EEG model": [[858, "id23"]], "EEG forward solution in the sphere model": [[858, "eeg-forward-solution-in-the-sphere-model"]], "Averaging forward solutions": [[858, "averaging-forward-solutions"]], "The minimum-norm current estimates": [[858, "the-minimum-norm-current-estimates"]], "The linear inverse operator": [[858, "the-linear-inverse-operator"]], "Regularization": [[858, "regularization"]], "Whitening and scaling": [[858, "whitening-and-scaling"]], "Regularization of the noise-covariance matrix": [[858, "regularization-of-the-noise-covariance-matrix"]], "Computation of the solution": [[858, "computation-of-the-solution"]], "Noise normalization": [[858, "noise-normalization"]], "sLORETA": [[858, "sloreta"]], "eLORETA": [[858, "eloreta"]], "Predicted data": [[858, "predicted-data"]], "Cortical patch statistics": [[858, "cortical-patch-statistics"]], "Orientation constraints": [[858, "orientation-constraints"]], "Depth weighting": [[858, "depth-weighting"]], "Effective number of averages": [[858, "effective-number-of-averages"]], "Morphing and averaging source estimates": [[858, "morphing-and-averaging-source-estimates"]], "Why morphing?": [[858, "why-morphing"]], "The morphing maps": [[858, "the-morphing-maps"]], "About smoothing": [[858, "about-smoothing"]], "Documentation overview": [[859, "documentation-overview"]], "Getting started with Python": [[860, "getting-started-with-python"]], "MNE-MATLAB documentation": [[861, "mne-matlab-documentation"]], "High-level reading routines.": [[861, "id2"]], "Channel selection utilities.": [[861, "id3"]], "Coordinate transformation utilities.": [[861, "id4"]], "Basic reading routines.": [[861, "id5"]], "Writing routines.": [[861, "id6"]], "High-level data writing routines.": [[861, "id7"]], "Coil definition utilities.": [[861, "id8"]], "Routines for software gradient compensation and signal-space projection.": [[861, "id9"]], "High-level routines for reading MNE data files.": [[861, "id10"]], "High-level routines for writing MNE data files.": [[861, "id11"]], "Routines related to stc, w, and label files.": [[861, "id12"]], "Routines for reading FreeSurfer surfaces.": [[861, "id13"]], "Utility functions.": [[861, "id14"]], "Examples demonstrating the use of the toolbox.": [[861, "id15"]], "Some data structures": [[861, "some-data-structures"]], "FIFF constants.": [[861, "id16"]], "The tag structure.": [[861, "id17"]], "The taginfo structure.": [[861, "id18"]], "The directory structure.": [[861, "id19"]], "The id structure.": [[861, "id20"]], "The named matrix structure.": [[861, "id21"]], "The trans structure.": [[861, "id22"]], "The dig structure.": [[861, "id23"]], "The coildef structure. For more detailed information, see Coil geometry information.": [[861, "id24"]], "The ch structure.": [[861, "id25"]], "The proj structure.": [[861, "id26"]], "The comp structure.": [[861, "id27"]], "The meas info structure.": [[861, "id28"]], "The surf structure.": [[861, "id29"]], "The cov structure.": [[861, "id30"]], "The fwd structure.": [[861, "id31"]], "The inv structure. Note: The fields proj, whitener, reginv, and noisenorm are filled in by the routine mne_prepare_inverse_operator.": [[861, "id32"]], "On-line documentation for individual routines": [[861, "on-line-documentation-for-individual-routines"]], "Migrating from other analysis software": [[862, "migrating-from-other-analysis-software"]], "EEGLAB": [[862, "eeglab"]], "Potential pitfalls": [[862, "potential-pitfalls"]], "Current steering council and institutional partners": [[863, "current-steering-council-and-institutional-partners"]], "Benevolent Dictator for Life": [[863, "benevolent-dictator-for-life"]], "Community Participation Guidelines Response Leads": [[863, "community-participation-guidelines-response-leads"]], "Institutional Partners": [[863, "institutional-partners"]], "Roadmap": [[864, "roadmap"]], "Page contents": [[864, "page-contents"]], "Open": [[864, "open"]], "Time-frequency visualization": [[864, "time-frequency-visualization"]], "Clustering statistics API": [[864, "clustering-statistics-api"]], "Access to open EEG/MEG databases": [[864, "access-to-open-eeg-meg-databases"]], "Integrate OpenMEEG via improved Python bindings": [[864, "integrate-openmeeg-via-improved-python-bindings"]], "In progress": [[864, "in-progress"]], "Diversity, Equity, and Inclusion (DEI)": [[864, "diversity-equity-and-inclusion-dei"]], "First-class OPM support": [[864, "first-class-opm-support"]], "Deep source modeling": [[864, "deep-source-modeling"]], "Better sEEG/ECoG/DBS support": [[864, "better-seeg-ecog-dbs-support"]], "Time-frequency classes": [[864, "time-frequency-classes"]], "Pediatric and clinical MEG pipelines": [[864, "pediatric-and-clinical-meg-pipelines"]], "Statistics efficiency": [[864, "statistics-efficiency"]], "3D visualization": [[864, "d-visualization"]], "Documentation updates": [[864, "documentation-updates"]], "Completed": [[864, "completed"]], "Distributed computing support": [[864, "distributed-computing-support"]], "2D visualization": [[864, "id3"]], "Tutorial / example overhaul": [[864, "tutorial-example-overhaul"]], "Cluster computing images": [[864, "cluster-computing-images"]], "Python API Reference": [[866, "python-api-reference"]], "Reading raw data": [[867, "reading-raw-data"]], "Realtime": [[868, "realtime"]], "MNE-Report": [[869, "mne-report"]], "Sensor Space Data": [[870, "sensor-space-data"]], "Source Space Data": [[872, "source-space-data"]], "Statistics": [[873, "statistics"]], "Time-Frequency": [[874, "time-frequency"]], "What\u2019s new": [[876, "what-s-new"]], "Current (1.4.dev0)": [[876, "current-1-4-dev0"]], "Enhancements": [[876, "enhancements"], [876, "id2"], [876, "id5"], [876, "id9"], [876, "id12"], [876, "id16"], [876, "id20"], [876, "id24"], [876, "id28"]], "Bugs": [[876, "bugs"], [876, "id3"], [876, "id6"], [876, "id10"], [876, "id13"], [876, "id17"], [876, "id21"], [876, "id25"], [876, "id29"]], "API changes": [[876, "api-changes"], [876, "id4"], [876, "id7"], [876, "id14"], [876, "id18"], [876, "id22"], [876, "id26"], [876, "id30"]], "Version 1.3.0 (2022-12-21)": [[876, "version-1-3-0-2022-12-21"]], "Authors": [[876, "authors"], [876, "id8"], [876, "id11"], [876, "id15"], [876, "id19"], [876, "id23"], [876, "id27"], [876, "id31"], [876, "id32"], [876, "id42"], [876, "id46"], [876, "id50"], [876, "id54"], [876, "id58"], [876, "id62"], [876, "id66"], [876, "id70"], [876, "id74"], [876, "id78"], [876, "id81"], [876, "id84"], [876, "id87"], [876, "id89"], [876, "id91"], [876, "id93"], [876, "id94"]], "Version 1.2.0 (2022-10-11)": [[876, "version-1-2-0-2022-10-11"]], "Version 1.1.0 (2022-08-03)": [[876, "version-1-1-0-2022-08-03"]], "API and behavior changes": [[876, "api-and-behavior-changes"]], "Version 1.0.0 (2022-03-21)": [[876, "version-1-0-0-2022-03-21"]], "Dependencies": [[876, "dependencies"]], "Version 0.24.0 (2021-11-03)": [[876, "version-0-24-0-2021-11-03"]], "Version 0.23.0 (2021-04-27)": [[876, "version-0-23-0-2021-04-27"]], "Version 0.22.0 (2020-12-17)": [[876, "version-0-22-0-2020-12-17"]], "Version 0.21 (2020-09-21)": [[876, "version-0-21-2020-09-21"]], "Version 0.20 (2020-03-27)": [[876, "version-0-20-2020-03-27"]], "Changelog": [[876, "changelog"], [876, "id33"], [876, "id36"], [876, "id39"], [876, "id43"], [876, "id47"], [876, "id51"], [876, "id55"], [876, "id59"], [876, "id63"], [876, "id67"], [876, "id71"], [876, "id75"], [876, "id79"], [876, "id82"], [876, "id85"], [876, "id88"], [876, "id90"], [876, "id92"]], "Bug": [[876, "bug"], [876, "id34"], [876, "id37"], [876, "id40"], [876, "id44"]], "API": [[876, "api"], [876, "id35"], [876, "id38"], [876, "id41"], [876, "id45"], [876, "id49"], [876, "id53"], [876, "id57"], [876, "id61"], [876, "id65"], [876, "id69"], [876, "id73"], [876, "id77"], [876, "id80"], [876, "id83"], [876, "id86"]], "Version 0.19 (2019-09-24)": [[876, "version-0-19-2019-09-24"]], "Version 0.18 (2019-05-19)": [[876, "version-0-18-2019-05-19"]], "Version 0.17 (2018-11-19)": [[876, "version-0-17-2018-11-19"]], "Version 0.16 (2018-05-01)": [[876, "version-0-16-2018-05-01"]], "Version 0.15 (2017-10-20)": [[876, "version-0-15-2017-10-20"]], "BUG": [[876, "id48"], [876, "id52"], [876, "id56"], [876, "id60"], [876, "id64"], [876, "id68"], [876, "id72"], [876, "id76"]], "Version 0.14 (2017-03-24)": [[876, "version-0-14-2017-03-24"]], "Version 0.13 (2016-09-27)": [[876, "version-0-13-2016-09-27"]], "Version 0.12 (2016-05-10)": [[876, "version-0-12-2016-05-10"]], "Version 0.11 (2015-12-24)": [[876, "version-0-11-2015-12-24"]], "Version 0.10 (2015-10-26)": [[876, "version-0-10-2015-10-26"]], "Version 0.9 (2015-05-22)": [[876, "version-0-9-2015-05-22"]], "Version 0.8 (2014-06-25)": [[876, "version-0-8-2014-06-25"]], "Version 0.7 (2013-11-26)": [[876, "version-0-7-2013-11-26"]], "Version 0.6 (2013-06-15)": [[876, "version-0-6-2013-06-15"]], "Version 0.5 (2012-12-27)": [[876, "version-0-5-2012-12-27"]], "Version 0.4 (2012-08-24)": [[876, "version-0-4-2012-08-24"]], "Version 0.3 (2012-03-23)": [[876, "version-0-3-2012-03-23"]], "Version 0.2 (2011-11-08)": [[876, "version-0-2-2011-11-08"]], "API changes summary": [[876, "api-changes-summary"]], "Version 0.1 (2011-09-23)": [[876, "version-0-1-2011-09-23"]]}, "indexentries": {"mne.datasets": [[247, "module-mne.datasets"]], "module": [[247, "module-mne.datasets"], [248, "module-mne.decoding"], [249, "module-mne.epochs"], [249, "module-mne.event"], [250, "module-mne.export"], [252, "module-mne.bem"], [844, "module-mne.beamformer"], [844, "module-mne.dipole"], [844, "module-mne.inverse_sparse"], [844, "module-mne.minimum_norm"], [845, "module-mne.cuda"], [845, "module-mne.utils"], [865, "module-mne.channels"], [865, "module-mne.chpi"], [865, "module-mne.filter"], [865, "module-mne.preprocessing"], [865, "module-mne.preprocessing.ieeg"], [865, "module-mne.preprocessing.nirs"], [865, "module-mne.transforms"], [866, "module-mne"], [867, "module-mne.io"], [867, "module-mne.io.kit"], [870, "module-mne.baseline"], [871, "module-mne.simulation"], [871, "module-mne.simulation.metrics"], [873, "module-mne.stats"], [874, "module-mne.time_frequency"], [874, "module-mne.time_frequency.tfr"], [875, "module-mne.viz"]], "mne.decoding": [[248, "module-mne.decoding"]], "mne.epochs": [[249, "module-mne.epochs"]], "mne.event": [[249, "module-mne.event"]], "mne.export": [[250, "module-mne.export"]], "mne.bem": [[252, "module-mne.bem"]], "acqparserfif (class in mne)": [[255, "mne.AcqParserFIF"]], "__getitem__() (mne.acqparserfif method)": [[255, "mne.AcqParserFIF.__getitem__"]], "__len__() (mne.acqparserfif method)": [[255, "mne.AcqParserFIF.__len__"]], "categories (mne.acqparserfif property)": [[255, "mne.AcqParserFIF.categories"]], "events (mne.acqparserfif property)": [[255, "mne.AcqParserFIF.events"]], "get_condition() (mne.acqparserfif method)": [[255, "mne.AcqParserFIF.get_condition"]], "annotations (class in mne)": [[256, "mne.Annotations"]], "__add__() (mne.annotations method)": [[256, "mne.Annotations.__add__"]], "__getitem__() (mne.annotations method)": [[256, "mne.Annotations.__getitem__"]], "__iter__() (mne.annotations method)": [[256, "mne.Annotations.__iter__"]], "__len__() (mne.annotations method)": [[256, "mne.Annotations.__len__"]], "append() (mne.annotations method)": [[256, "mne.Annotations.append"]], "copy() (mne.annotations method)": [[256, "mne.Annotations.copy"]], "crop() (mne.annotations method)": [[256, "mne.Annotations.crop"]], "delete() (mne.annotations method)": [[256, "mne.Annotations.delete"]], "orig_time (mne.annotations property)": [[256, "mne.Annotations.orig_time"]], "rename() (mne.annotations method)": [[256, "mne.Annotations.rename"]], "save() (mne.annotations method)": [[256, "mne.Annotations.save"]], "set_durations() (mne.annotations method)": [[256, "mne.Annotations.set_durations"]], "to_data_frame() (mne.annotations method)": [[256, "mne.Annotations.to_data_frame"]], "baseepochs (class in mne)": [[257, "mne.BaseEpochs"]], "bihemilabel (class in mne)": [[258, "mne.BiHemiLabel"]], "__add__() (mne.bihemilabel method)": [[258, "mne.BiHemiLabel.__add__"]], "__len__() (mne.bihemilabel method)": [[258, "mne.BiHemiLabel.__len__"]], "__sub__() (mne.bihemilabel method)": [[258, "mne.BiHemiLabel.__sub__"]], "covariance (class in mne)": [[259, "mne.Covariance"]], "__add__() (mne.covariance method)": [[259, "mne.Covariance.__add__"]], "__contains__() (mne.covariance method)": [[259, "mne.Covariance.__contains__"]], "__getitem__() (mne.covariance method)": [[259, "mne.Covariance.__getitem__"]], "__iter__() (mne.covariance method)": [[259, "mne.Covariance.__iter__"]], "__len__() (mne.covariance method)": [[259, "mne.Covariance.__len__"]], "as_diag() (mne.covariance method)": [[259, "mne.Covariance.as_diag"]], "ch_names (mne.covariance property)": [[259, "mne.Covariance.ch_names"]], "clear() (mne.covariance method)": [[259, "mne.Covariance.clear"]], "copy() (mne.covariance method)": [[259, "mne.Covariance.copy"]], "data (mne.covariance property)": [[259, "mne.Covariance.data"]], "fromkeys() (mne.covariance method)": [[259, "mne.Covariance.fromkeys"]], "get() (mne.covariance method)": [[259, "mne.Covariance.get"]], "items() (mne.covariance method)": [[259, "mne.Covariance.items"]], "keys() (mne.covariance method)": [[259, "mne.Covariance.keys"]], "nfree (mne.covariance property)": [[259, "mne.Covariance.nfree"]], "pick_channels() (mne.covariance method)": [[259, "mne.Covariance.pick_channels"]], "plot() (mne.covariance method)": [[259, "mne.Covariance.plot"]], "plot_topomap() (mne.covariance method)": [[259, "mne.Covariance.plot_topomap"]], "pop() (mne.covariance method)": [[259, "mne.Covariance.pop"]], "popitem() (mne.covariance method)": [[259, "mne.Covariance.popitem"]], "save() (mne.covariance method)": [[259, "mne.Covariance.save"]], "setdefault() (mne.covariance method)": [[259, "mne.Covariance.setdefault"]], "update() (mne.covariance method)": [[259, "mne.Covariance.update"]], "values() (mne.covariance method)": [[259, "mne.Covariance.values"]], "dipole (class in mne)": [[260, "mne.Dipole"]], "__getitem__() (mne.dipole method)": [[260, "mne.Dipole.__getitem__"]], "__len__() (mne.dipole method)": [[260, "mne.Dipole.__len__"]], "copy() (mne.dipole method)": [[260, "mne.Dipole.copy"]], "crop() (mne.dipole method)": [[260, "mne.Dipole.crop"]], "decimate() (mne.dipole method)": [[260, "mne.Dipole.decimate"]], "plot_amplitudes() (mne.dipole method)": [[260, "mne.Dipole.plot_amplitudes"]], "plot_locations() (mne.dipole method)": [[260, "mne.Dipole.plot_locations"]], "save() (mne.dipole method)": [[260, "mne.Dipole.save"]], "shift_time() (mne.dipole method)": [[260, "mne.Dipole.shift_time"]], "time_as_index() (mne.dipole method)": [[260, "mne.Dipole.time_as_index"]], "times (mne.dipole property)": [[260, "mne.Dipole.times"]], "tmax (mne.dipole property)": [[260, "mne.Dipole.tmax"]], "tmin (mne.dipole property)": [[260, "mne.Dipole.tmin"]], "to_mni() (mne.dipole method)": [[260, "mne.Dipole.to_mni"]], "to_mri() (mne.dipole method)": [[260, "mne.Dipole.to_mri"]], "to_volume_labels() (mne.dipole method)": [[260, "mne.Dipole.to_volume_labels"]], "dipolefixed (class in mne)": [[261, "mne.DipoleFixed"]], "ch_names (mne.dipolefixed property)": [[261, "mne.DipoleFixed.ch_names"]], "copy() (mne.dipolefixed method)": [[261, "mne.DipoleFixed.copy"]], "crop() (mne.dipolefixed method)": [[261, "mne.DipoleFixed.crop"]], "decimate() (mne.dipolefixed method)": [[261, "mne.DipoleFixed.decimate"]], "plot() (mne.dipolefixed method)": [[261, "mne.DipoleFixed.plot"]], "save() (mne.dipolefixed method)": [[261, "mne.DipoleFixed.save"]], "shift_time() (mne.dipolefixed method)": [[261, "mne.DipoleFixed.shift_time"]], "time_as_index() (mne.dipolefixed method)": [[261, "mne.DipoleFixed.time_as_index"]], "times (mne.dipolefixed property)": [[261, "mne.DipoleFixed.times"]], "tmax (mne.dipolefixed property)": [[261, "mne.DipoleFixed.tmax"]], "tmin (mne.dipolefixed property)": [[261, "mne.DipoleFixed.tmin"]], "epochs (class in mne)": [[262, "mne.Epochs"]], "__contains__() (mne.epochs method)": [[262, "mne.Epochs.__contains__"]], "__getitem__() (mne.epochs method)": [[262, "mne.Epochs.__getitem__"]], "__iter__() (mne.epochs method)": [[262, "mne.Epochs.__iter__"]], "__len__() (mne.epochs method)": [[262, "mne.Epochs.__len__"]], "add_annotations_to_metadata() (mne.epochs method)": [[262, "mne.Epochs.add_annotations_to_metadata"]], "add_channels() (mne.epochs method)": [[262, "mne.Epochs.add_channels"]], "add_proj() (mne.epochs method)": [[262, "mne.Epochs.add_proj"]], "add_reference_channels() (mne.epochs method)": [[262, "mne.Epochs.add_reference_channels"]], "anonymize() (mne.epochs method)": [[262, "mne.Epochs.anonymize"]], "apply_baseline() (mne.epochs method)": [[262, "mne.Epochs.apply_baseline"]], "apply_function() (mne.epochs method)": [[262, "mne.Epochs.apply_function"]], "apply_hilbert() (mne.epochs method)": [[262, "mne.Epochs.apply_hilbert"]], "apply_proj() (mne.epochs method)": [[262, "mne.Epochs.apply_proj"]], "as_type() (mne.epochs method)": [[262, "mne.Epochs.as_type"]], "average() (mne.epochs method)": [[262, "mne.Epochs.average"]], "ch_names (mne.epochs property)": [[262, "mne.Epochs.ch_names"]], "compensation_grade (mne.epochs property)": [[262, "mne.Epochs.compensation_grade"]], "compute_psd() (mne.epochs method)": [[262, "mne.Epochs.compute_psd"]], "copy() (mne.epochs method)": [[262, "mne.Epochs.copy"]], "crop() (mne.epochs method)": [[262, "mne.Epochs.crop"]], "decimate() (mne.epochs method)": [[262, "mne.Epochs.decimate"]], "del_proj() (mne.epochs method)": [[262, "mne.Epochs.del_proj"]], "drop() (mne.epochs method)": [[262, "mne.Epochs.drop"]], "drop_bad() (mne.epochs method)": [[262, "mne.Epochs.drop_bad"]], "drop_channels() (mne.epochs method)": [[262, "mne.Epochs.drop_channels"]], "drop_log_stats() (mne.epochs method)": [[262, "mne.Epochs.drop_log_stats"]], "equalize_event_counts() (mne.epochs method)": [[262, "mne.Epochs.equalize_event_counts"]], "export() (mne.epochs method)": [[262, "mne.Epochs.export"]], "filename (mne.epochs property)": [[262, "mne.Epochs.filename"]], "filter() (mne.epochs method)": [[262, "mne.Epochs.filter"]], "get_annotations_per_epoch() (mne.epochs method)": [[262, "mne.Epochs.get_annotations_per_epoch"]], "get_channel_types() (mne.epochs method)": [[262, "mne.Epochs.get_channel_types"]], "get_data() (mne.epochs method)": [[262, "mne.Epochs.get_data"]], "get_montage() (mne.epochs method)": [[262, "mne.Epochs.get_montage"]], "interpolate_bads() (mne.epochs method)": [[262, "mne.Epochs.interpolate_bads"]], "iter_evoked() (mne.epochs method)": [[262, "mne.Epochs.iter_evoked"]], "load_data() (mne.epochs method)": [[262, "mne.Epochs.load_data"]], "metadata (mne.epochs property)": [[262, "mne.Epochs.metadata"]], "next() (mne.epochs method)": [[262, "mne.Epochs.next"]], "pick() (mne.epochs method)": [[262, "mne.Epochs.pick"]], "pick_channels() (mne.epochs method)": [[262, "mne.Epochs.pick_channels"]], "pick_types() (mne.epochs method)": [[262, "mne.Epochs.pick_types"]], "plot() (mne.epochs method)": [[262, "mne.Epochs.plot"]], "plot_drop_log() (mne.epochs method)": [[262, "mne.Epochs.plot_drop_log"]], "plot_image() (mne.epochs method)": [[262, "mne.Epochs.plot_image"]], "plot_projs_topomap() (mne.epochs method)": [[262, "mne.Epochs.plot_projs_topomap"]], "plot_psd() (mne.epochs method)": [[262, "mne.Epochs.plot_psd"]], "plot_psd_topo() (mne.epochs method)": [[262, "mne.Epochs.plot_psd_topo"]], "plot_psd_topomap() (mne.epochs method)": [[262, "mne.Epochs.plot_psd_topomap"]], "plot_sensors() (mne.epochs method)": [[262, "mne.Epochs.plot_sensors"]], "plot_topo_image() (mne.epochs method)": [[262, "mne.Epochs.plot_topo_image"]], "proj (mne.epochs property)": [[262, "mne.Epochs.proj"]], "rename_channels() (mne.epochs method)": [[262, "mne.Epochs.rename_channels"]], "reorder_channels() (mne.epochs method)": [[262, "mne.Epochs.reorder_channels"]], "resample() (mne.epochs method)": [[262, "mne.Epochs.resample"]], "reset_drop_log_selection() (mne.epochs method)": [[262, "mne.Epochs.reset_drop_log_selection"]], "save() (mne.epochs method)": [[262, "mne.Epochs.save"]], "savgol_filter() (mne.epochs method)": [[262, "mne.Epochs.savgol_filter"]], "set_annotations() (mne.epochs method)": [[262, "mne.Epochs.set_annotations"]], "set_channel_types() (mne.epochs method)": [[262, "mne.Epochs.set_channel_types"]], "set_eeg_reference() (mne.epochs method)": [[262, "mne.Epochs.set_eeg_reference"]], "set_meas_date() (mne.epochs method)": [[262, "mne.Epochs.set_meas_date"]], "set_montage() (mne.epochs method)": [[262, "mne.Epochs.set_montage"]], "shift_time() (mne.epochs method)": [[262, "mne.Epochs.shift_time"]], "standard_error() (mne.epochs method)": [[262, "mne.Epochs.standard_error"]], "subtract_evoked() (mne.epochs method)": [[262, "mne.Epochs.subtract_evoked"]], "time_as_index() (mne.epochs method)": [[262, "mne.Epochs.time_as_index"]], "times (mne.epochs property)": [[262, "mne.Epochs.times"]], "tmax (mne.epochs property)": [[262, "mne.Epochs.tmax"]], "tmin (mne.epochs property)": [[262, "mne.Epochs.tmin"]], "to_data_frame() (mne.epochs method)": [[262, "mne.Epochs.to_data_frame"]], "epochsarray (class in mne)": [[263, "mne.EpochsArray"]], "__contains__() (mne.epochsarray method)": [[263, "mne.EpochsArray.__contains__"]], "__getitem__() (mne.epochsarray method)": [[263, "mne.EpochsArray.__getitem__"]], "__iter__() (mne.epochsarray method)": [[263, "mne.EpochsArray.__iter__"]], "__len__() (mne.epochsarray method)": [[263, "mne.EpochsArray.__len__"]], "add_annotations_to_metadata() (mne.epochsarray method)": [[263, "mne.EpochsArray.add_annotations_to_metadata"]], "add_channels() (mne.epochsarray method)": [[263, "mne.EpochsArray.add_channels"]], "add_proj() (mne.epochsarray method)": [[263, "mne.EpochsArray.add_proj"]], "add_reference_channels() (mne.epochsarray method)": [[263, "mne.EpochsArray.add_reference_channels"]], "anonymize() (mne.epochsarray method)": [[263, "mne.EpochsArray.anonymize"]], "apply_baseline() (mne.epochsarray method)": [[263, "mne.EpochsArray.apply_baseline"]], "apply_function() (mne.epochsarray method)": [[263, "mne.EpochsArray.apply_function"]], "apply_hilbert() (mne.epochsarray method)": [[263, "mne.EpochsArray.apply_hilbert"]], "apply_proj() (mne.epochsarray method)": [[263, "mne.EpochsArray.apply_proj"]], "as_type() (mne.epochsarray method)": [[263, "mne.EpochsArray.as_type"]], "average() (mne.epochsarray method)": [[263, "mne.EpochsArray.average"]], "ch_names (mne.epochsarray property)": [[263, "mne.EpochsArray.ch_names"]], "compensation_grade (mne.epochsarray property)": [[263, "mne.EpochsArray.compensation_grade"]], "compute_psd() (mne.epochsarray method)": [[263, "mne.EpochsArray.compute_psd"]], "copy() (mne.epochsarray method)": [[263, "mne.EpochsArray.copy"]], "crop() (mne.epochsarray method)": [[263, "mne.EpochsArray.crop"]], "decimate() (mne.epochsarray method)": [[263, "mne.EpochsArray.decimate"]], "del_proj() (mne.epochsarray method)": [[263, "mne.EpochsArray.del_proj"]], "drop() (mne.epochsarray method)": [[263, "mne.EpochsArray.drop"]], "drop_bad() (mne.epochsarray method)": [[263, "mne.EpochsArray.drop_bad"]], "drop_channels() (mne.epochsarray method)": [[263, "mne.EpochsArray.drop_channels"]], "drop_log_stats() (mne.epochsarray method)": [[263, "mne.EpochsArray.drop_log_stats"]], "equalize_event_counts() (mne.epochsarray method)": [[263, "mne.EpochsArray.equalize_event_counts"]], "export() (mne.epochsarray method)": [[263, "mne.EpochsArray.export"]], "filename (mne.epochsarray property)": [[263, "mne.EpochsArray.filename"]], "filter() (mne.epochsarray method)": [[263, "mne.EpochsArray.filter"]], "get_annotations_per_epoch() (mne.epochsarray method)": [[263, "mne.EpochsArray.get_annotations_per_epoch"]], "get_channel_types() (mne.epochsarray method)": [[263, "mne.EpochsArray.get_channel_types"]], "get_data() (mne.epochsarray method)": [[263, "mne.EpochsArray.get_data"]], "get_montage() (mne.epochsarray method)": [[263, "mne.EpochsArray.get_montage"]], "interpolate_bads() (mne.epochsarray method)": [[263, "mne.EpochsArray.interpolate_bads"]], "iter_evoked() (mne.epochsarray method)": [[263, "mne.EpochsArray.iter_evoked"]], "load_data() (mne.epochsarray method)": [[263, "mne.EpochsArray.load_data"]], "metadata (mne.epochsarray property)": [[263, "mne.EpochsArray.metadata"]], "next() (mne.epochsarray method)": [[263, "mne.EpochsArray.next"]], "pick() (mne.epochsarray method)": [[263, "mne.EpochsArray.pick"]], "pick_channels() (mne.epochsarray method)": [[263, "mne.EpochsArray.pick_channels"]], "pick_types() (mne.epochsarray method)": [[263, "mne.EpochsArray.pick_types"]], "plot() (mne.epochsarray method)": [[263, "mne.EpochsArray.plot"]], "plot_drop_log() (mne.epochsarray method)": [[263, "mne.EpochsArray.plot_drop_log"]], "plot_image() (mne.epochsarray method)": [[263, "mne.EpochsArray.plot_image"]], "plot_projs_topomap() (mne.epochsarray method)": [[263, "mne.EpochsArray.plot_projs_topomap"]], "plot_psd() (mne.epochsarray method)": [[263, "mne.EpochsArray.plot_psd"]], "plot_psd_topo() (mne.epochsarray method)": [[263, "mne.EpochsArray.plot_psd_topo"]], "plot_psd_topomap() (mne.epochsarray method)": [[263, "mne.EpochsArray.plot_psd_topomap"]], "plot_sensors() (mne.epochsarray method)": [[263, "mne.EpochsArray.plot_sensors"]], "plot_topo_image() (mne.epochsarray method)": [[263, "mne.EpochsArray.plot_topo_image"]], "proj (mne.epochsarray property)": [[263, "mne.EpochsArray.proj"]], "rename_channels() (mne.epochsarray method)": [[263, "mne.EpochsArray.rename_channels"]], "reorder_channels() (mne.epochsarray method)": [[263, "mne.EpochsArray.reorder_channels"]], "resample() (mne.epochsarray method)": [[263, "mne.EpochsArray.resample"]], "reset_drop_log_selection() (mne.epochsarray method)": [[263, "mne.EpochsArray.reset_drop_log_selection"]], "save() (mne.epochsarray method)": [[263, "mne.EpochsArray.save"]], "savgol_filter() (mne.epochsarray method)": [[263, "mne.EpochsArray.savgol_filter"]], "set_annotations() (mne.epochsarray method)": [[263, "mne.EpochsArray.set_annotations"]], "set_channel_types() (mne.epochsarray method)": [[263, "mne.EpochsArray.set_channel_types"]], "set_eeg_reference() (mne.epochsarray method)": [[263, "mne.EpochsArray.set_eeg_reference"]], "set_meas_date() (mne.epochsarray method)": [[263, "mne.EpochsArray.set_meas_date"]], "set_montage() (mne.epochsarray method)": [[263, "mne.EpochsArray.set_montage"]], "shift_time() (mne.epochsarray method)": [[263, "mne.EpochsArray.shift_time"]], "standard_error() (mne.epochsarray method)": [[263, "mne.EpochsArray.standard_error"]], "subtract_evoked() (mne.epochsarray method)": [[263, "mne.EpochsArray.subtract_evoked"]], "time_as_index() (mne.epochsarray method)": [[263, "mne.EpochsArray.time_as_index"]], "times (mne.epochsarray property)": [[263, "mne.EpochsArray.times"]], "tmax (mne.epochsarray property)": [[263, "mne.EpochsArray.tmax"]], "tmin (mne.epochsarray property)": [[263, "mne.EpochsArray.tmin"]], "to_data_frame() (mne.epochsarray method)": [[263, "mne.EpochsArray.to_data_frame"]], "evoked (class in mne)": [[264, "mne.Evoked"]], "__contains__() (mne.evoked method)": [[264, "mne.Evoked.__contains__"]], "__neg__() (mne.evoked method)": [[264, "mne.Evoked.__neg__"]], "add_channels() (mne.evoked method)": [[264, "mne.Evoked.add_channels"]], "add_proj() (mne.evoked method)": [[264, "mne.Evoked.add_proj"]], "add_reference_channels() (mne.evoked method)": [[264, "mne.Evoked.add_reference_channels"]], "animate_topomap() (mne.evoked method)": [[264, "mne.Evoked.animate_topomap"]], "anonymize() (mne.evoked method)": [[264, "mne.Evoked.anonymize"]], "apply_baseline() (mne.evoked method)": [[264, "mne.Evoked.apply_baseline"]], "apply_function() (mne.evoked method)": [[264, "mne.Evoked.apply_function"]], "apply_hilbert() (mne.evoked method)": [[264, "mne.Evoked.apply_hilbert"]], "apply_proj() (mne.evoked method)": [[264, "mne.Evoked.apply_proj"]], "as_type() (mne.evoked method)": [[264, "mne.Evoked.as_type"]], "ch_names (mne.evoked property)": [[264, "mne.Evoked.ch_names"]], "compensation_grade (mne.evoked property)": [[264, "mne.Evoked.compensation_grade"]], "compute_psd() (mne.evoked method)": [[264, "mne.Evoked.compute_psd"]], "copy() (mne.evoked method)": [[264, "mne.Evoked.copy"]], "crop() (mne.evoked method)": [[264, "mne.Evoked.crop"]], "data (mne.evoked property)": [[264, "mne.Evoked.data"]], "decimate() (mne.evoked method)": [[264, "mne.Evoked.decimate"]], "del_proj() (mne.evoked method)": [[264, "mne.Evoked.del_proj"]], "detrend() (mne.evoked method)": [[264, "mne.Evoked.detrend"]], "drop_channels() (mne.evoked method)": [[264, "mne.Evoked.drop_channels"]], "export() (mne.evoked method)": [[264, "mne.Evoked.export"]], "filter() (mne.evoked method)": [[264, "mne.Evoked.filter"]], "get_channel_types() (mne.evoked method)": [[264, "mne.Evoked.get_channel_types"]], "get_data() (mne.evoked method)": [[264, "mne.Evoked.get_data"]], "get_montage() (mne.evoked method)": [[264, "mne.Evoked.get_montage"]], "get_peak() (mne.evoked method)": [[264, "mne.Evoked.get_peak"]], "interpolate_bads() (mne.evoked method)": [[264, "mne.Evoked.interpolate_bads"]], "kind (mne.evoked property)": [[264, "mne.Evoked.kind"]], "pick() (mne.evoked method)": [[264, "mne.Evoked.pick"]], "pick_channels() (mne.evoked method)": [[264, "mne.Evoked.pick_channels"]], "pick_types() (mne.evoked method)": [[264, "mne.Evoked.pick_types"]], "plot() (mne.evoked method)": [[264, "mne.Evoked.plot"]], "plot_field() (mne.evoked method)": [[264, "mne.Evoked.plot_field"]], "plot_image() (mne.evoked method)": [[264, "mne.Evoked.plot_image"]], "plot_joint() (mne.evoked method)": [[264, "mne.Evoked.plot_joint"]], "plot_projs_topomap() (mne.evoked method)": [[264, "mne.Evoked.plot_projs_topomap"]], "plot_psd() (mne.evoked method)": [[264, "mne.Evoked.plot_psd"]], "plot_psd_topo() (mne.evoked method)": [[264, "mne.Evoked.plot_psd_topo"]], "plot_psd_topomap() (mne.evoked method)": [[264, "mne.Evoked.plot_psd_topomap"]], "plot_sensors() (mne.evoked method)": [[264, "mne.Evoked.plot_sensors"]], "plot_topo() (mne.evoked method)": [[264, "mne.Evoked.plot_topo"]], "plot_topomap() (mne.evoked method)": [[264, "mne.Evoked.plot_topomap"]], "plot_white() (mne.evoked method)": [[264, "mne.Evoked.plot_white"]], "proj (mne.evoked property)": [[264, "mne.Evoked.proj"]], "rename_channels() (mne.evoked method)": [[264, "mne.Evoked.rename_channels"]], "reorder_channels() (mne.evoked method)": [[264, "mne.Evoked.reorder_channels"]], "resample() (mne.evoked method)": [[264, "mne.Evoked.resample"]], "save() (mne.evoked method)": [[264, "mne.Evoked.save"]], "savgol_filter() (mne.evoked method)": [[264, "mne.Evoked.savgol_filter"]], "set_channel_types() (mne.evoked method)": [[264, "mne.Evoked.set_channel_types"]], "set_eeg_reference() (mne.evoked method)": [[264, "mne.Evoked.set_eeg_reference"]], "set_meas_date() (mne.evoked method)": [[264, "mne.Evoked.set_meas_date"]], "set_montage() (mne.evoked method)": [[264, "mne.Evoked.set_montage"]], "shift_time() (mne.evoked method)": [[264, "mne.Evoked.shift_time"]], "time_as_index() (mne.evoked method)": [[264, "mne.Evoked.time_as_index"]], "times (mne.evoked property)": [[264, "mne.Evoked.times"]], "tmax (mne.evoked property)": [[264, "mne.Evoked.tmax"]], "tmin (mne.evoked property)": [[264, "mne.Evoked.tmin"]], "to_data_frame() (mne.evoked method)": [[264, "mne.Evoked.to_data_frame"]], "evokedarray (class in mne)": [[265, "mne.EvokedArray"]], "__contains__() (mne.evokedarray method)": [[265, "mne.EvokedArray.__contains__"]], "__neg__() (mne.evokedarray method)": [[265, "mne.EvokedArray.__neg__"]], "add_channels() (mne.evokedarray method)": [[265, "mne.EvokedArray.add_channels"]], "add_proj() (mne.evokedarray method)": [[265, "mne.EvokedArray.add_proj"]], "add_reference_channels() (mne.evokedarray method)": [[265, "mne.EvokedArray.add_reference_channels"]], "animate_topomap() (mne.evokedarray method)": [[265, "mne.EvokedArray.animate_topomap"]], "anonymize() (mne.evokedarray method)": [[265, "mne.EvokedArray.anonymize"]], "apply_baseline() (mne.evokedarray method)": [[265, "mne.EvokedArray.apply_baseline"]], "apply_function() (mne.evokedarray method)": [[265, "mne.EvokedArray.apply_function"]], "apply_hilbert() (mne.evokedarray method)": [[265, "mne.EvokedArray.apply_hilbert"]], "apply_proj() (mne.evokedarray method)": [[265, "mne.EvokedArray.apply_proj"]], "as_type() (mne.evokedarray method)": [[265, "mne.EvokedArray.as_type"]], "ch_names (mne.evokedarray property)": [[265, "mne.EvokedArray.ch_names"]], "compensation_grade (mne.evokedarray property)": [[265, "mne.EvokedArray.compensation_grade"]], "compute_psd() (mne.evokedarray method)": [[265, "mne.EvokedArray.compute_psd"]], "copy() (mne.evokedarray method)": [[265, "mne.EvokedArray.copy"]], "crop() (mne.evokedarray method)": [[265, "mne.EvokedArray.crop"]], "data (mne.evokedarray property)": [[265, "mne.EvokedArray.data"]], "decimate() (mne.evokedarray method)": [[265, "mne.EvokedArray.decimate"]], "del_proj() (mne.evokedarray method)": [[265, "mne.EvokedArray.del_proj"]], "detrend() (mne.evokedarray method)": [[265, "mne.EvokedArray.detrend"]], "drop_channels() (mne.evokedarray method)": [[265, "mne.EvokedArray.drop_channels"]], "export() (mne.evokedarray method)": [[265, "mne.EvokedArray.export"]], "filter() (mne.evokedarray method)": [[265, "mne.EvokedArray.filter"]], "get_channel_types() (mne.evokedarray method)": [[265, "mne.EvokedArray.get_channel_types"]], "get_data() (mne.evokedarray method)": [[265, "mne.EvokedArray.get_data"]], "get_montage() (mne.evokedarray method)": [[265, "mne.EvokedArray.get_montage"]], "get_peak() (mne.evokedarray method)": [[265, "mne.EvokedArray.get_peak"]], "interpolate_bads() (mne.evokedarray method)": [[265, "mne.EvokedArray.interpolate_bads"]], "kind (mne.evokedarray property)": [[265, "mne.EvokedArray.kind"]], "pick() (mne.evokedarray method)": [[265, "mne.EvokedArray.pick"]], "pick_channels() (mne.evokedarray method)": [[265, "mne.EvokedArray.pick_channels"]], "pick_types() (mne.evokedarray method)": [[265, "mne.EvokedArray.pick_types"]], "plot() (mne.evokedarray method)": [[265, "mne.EvokedArray.plot"]], "plot_field() (mne.evokedarray method)": [[265, "mne.EvokedArray.plot_field"]], "plot_image() (mne.evokedarray method)": [[265, "mne.EvokedArray.plot_image"]], "plot_joint() (mne.evokedarray method)": [[265, "mne.EvokedArray.plot_joint"]], "plot_projs_topomap() (mne.evokedarray method)": [[265, "mne.EvokedArray.plot_projs_topomap"]], "plot_psd() (mne.evokedarray method)": [[265, "mne.EvokedArray.plot_psd"]], "plot_psd_topo() (mne.evokedarray method)": [[265, "mne.EvokedArray.plot_psd_topo"]], "plot_psd_topomap() (mne.evokedarray method)": [[265, "mne.EvokedArray.plot_psd_topomap"]], "plot_sensors() (mne.evokedarray method)": [[265, "mne.EvokedArray.plot_sensors"]], "plot_topo() (mne.evokedarray method)": [[265, "mne.EvokedArray.plot_topo"]], "plot_topomap() (mne.evokedarray method)": [[265, "mne.EvokedArray.plot_topomap"]], "plot_white() (mne.evokedarray method)": [[265, "mne.EvokedArray.plot_white"]], "proj (mne.evokedarray property)": [[265, "mne.EvokedArray.proj"]], "rename_channels() (mne.evokedarray method)": [[265, "mne.EvokedArray.rename_channels"]], "reorder_channels() (mne.evokedarray method)": [[265, "mne.EvokedArray.reorder_channels"]], "resample() (mne.evokedarray method)": [[265, "mne.EvokedArray.resample"]], "save() (mne.evokedarray method)": [[265, "mne.EvokedArray.save"]], "savgol_filter() (mne.evokedarray method)": [[265, "mne.EvokedArray.savgol_filter"]], "set_channel_types() (mne.evokedarray method)": [[265, "mne.EvokedArray.set_channel_types"]], "set_eeg_reference() (mne.evokedarray method)": [[265, "mne.EvokedArray.set_eeg_reference"]], "set_meas_date() (mne.evokedarray method)": [[265, "mne.EvokedArray.set_meas_date"]], "set_montage() (mne.evokedarray method)": [[265, "mne.EvokedArray.set_montage"]], "shift_time() (mne.evokedarray method)": [[265, "mne.EvokedArray.shift_time"]], "time_as_index() (mne.evokedarray method)": [[265, "mne.EvokedArray.time_as_index"]], "times (mne.evokedarray property)": [[265, "mne.EvokedArray.times"]], "tmax (mne.evokedarray property)": [[265, "mne.EvokedArray.tmax"]], "tmin (mne.evokedarray property)": [[265, "mne.EvokedArray.tmin"]], "to_data_frame() (mne.evokedarray method)": [[265, "mne.EvokedArray.to_data_frame"]], "forward (class in mne)": [[266, "mne.Forward"]], "copy() (mne.forward method)": [[266, "mne.Forward.copy"]], "pick_channels() (mne.forward method)": [[266, "mne.Forward.pick_channels"]], "info (class in mne)": [[267, "mne.Info"]], "__contains__() (mne.info method)": [[267, "mne.Info.__contains__"]], "__getitem__() (mne.info method)": [[267, "mne.Info.__getitem__"]], "__iter__() (mne.info method)": [[267, "mne.Info.__iter__"]], "__len__() (mne.info method)": [[267, "mne.Info.__len__"]], "clear() (mne.info method)": [[267, "mne.Info.clear"]], "compensation_grade (mne.info property)": [[267, "mne.Info.compensation_grade"]], "copy() (mne.info method)": [[267, "mne.Info.copy"]], "fromkeys() (mne.info method)": [[267, "mne.Info.fromkeys"]], "get() (mne.info method)": [[267, "mne.Info.get"]], "get_channel_types() (mne.info method)": [[267, "mne.Info.get_channel_types"]], "get_montage() (mne.info method)": [[267, "mne.Info.get_montage"]], "items() (mne.info method)": [[267, "mne.Info.items"]], "keys() (mne.info method)": [[267, "mne.Info.keys"]], "normalize_proj() (mne.info method)": [[267, "mne.Info.normalize_proj"]], "pop() (mne.info method)": [[267, "mne.Info.pop"]], "popitem() (mne.info method)": [[267, "mne.Info.popitem"]], "save() (mne.info method)": [[267, "mne.Info.save"]], "set_montage() (mne.info method)": [[267, "mne.Info.set_montage"]], "setdefault() (mne.info method)": [[267, "mne.Info.setdefault"]], "update() (mne.info method)": [[267, "mne.Info.update"]], "values() (mne.info method)": [[267, "mne.Info.values"]], "label (class in mne)": [[268, "mne.Label"]], "__add__() (mne.label method)": [[268, "mne.Label.__add__"]], "__len__() (mne.label method)": [[268, "mne.Label.__len__"]], "__sub__() (mne.label method)": [[268, "mne.Label.__sub__"]], "center_of_mass() (mne.label method)": [[268, "mne.Label.center_of_mass"]], "compute_area() (mne.label method)": [[268, "mne.Label.compute_area"]], "copy() (mne.label method)": [[268, "mne.Label.copy"]], "distances_to_outside() (mne.label method)": [[268, "mne.Label.distances_to_outside"]], "fill() (mne.label method)": [[268, "mne.Label.fill"]], "get_tris() (mne.label method)": [[268, "mne.Label.get_tris"]], "get_vertices_used() (mne.label method)": [[268, "mne.Label.get_vertices_used"]], "morph() (mne.label method)": [[268, "mne.Label.morph"]], "restrict() (mne.label method)": [[268, "mne.Label.restrict"]], "save() (mne.label method)": [[268, "mne.Label.save"]], "smooth() (mne.label method)": [[268, "mne.Label.smooth"]], "split() (mne.label method)": [[268, "mne.Label.split"]], "mixedsourceestimate (class in mne)": [[269, "mne.MixedSourceEstimate"]], "__add__() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.__add__"]], "__div__() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.__div__"]], "__mul__() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.__mul__"]], "__neg__() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.__neg__"]], "__sub__() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.__sub__"]], "apply_baseline() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.apply_baseline"]], "bin() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.bin"]], "copy() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.copy"]], "crop() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.crop"]], "data (mne.mixedsourceestimate property)": [[269, "mne.MixedSourceEstimate.data"]], "decimate() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.decimate"]], "extract_label_time_course() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.extract_label_time_course"]], "get_peak() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.get_peak"]], "mean() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.mean"]], "plot() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.plot"]], "resample() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.resample"]], "save() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.save"]], "sfreq (mne.mixedsourceestimate property)": [[269, "mne.MixedSourceEstimate.sfreq"]], "shape (mne.mixedsourceestimate property)": [[269, "mne.MixedSourceEstimate.shape"]], "shift_time() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.shift_time"]], "sqrt() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.sqrt"]], "sum() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.sum"]], "surface() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.surface"]], "time_as_index() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.time_as_index"]], "times (mne.mixedsourceestimate property)": [[269, "mne.MixedSourceEstimate.times"]], "tmax (mne.mixedsourceestimate property)": [[269, "mne.MixedSourceEstimate.tmax"]], "tmin (mne.mixedsourceestimate property)": [[269, "mne.MixedSourceEstimate.tmin"]], "to_data_frame() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.to_data_frame"]], "transform() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.transform"]], "transform_data() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.transform_data"]], "tstep (mne.mixedsourceestimate property)": [[269, "mne.MixedSourceEstimate.tstep"]], "volume() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.volume"]], "mixedvectorsourceestimate (class in mne)": [[270, "mne.MixedVectorSourceEstimate"]], "__add__() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.__add__"]], "__div__() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.__div__"]], "__mul__() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.__mul__"]], "__neg__() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.__neg__"]], "__sub__() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.__sub__"]], "apply_baseline() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.apply_baseline"]], "bin() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.bin"]], "copy() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.copy"]], "crop() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.crop"]], "data (mne.mixedvectorsourceestimate property)": [[270, "mne.MixedVectorSourceEstimate.data"]], "decimate() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.decimate"]], "extract_label_time_course() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.extract_label_time_course"]], "get_peak() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.get_peak"]], "magnitude() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.magnitude"]], "mean() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.mean"]], "plot() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.plot"]], "project() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.project"]], "resample() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.resample"]], "save() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.save"]], "sfreq (mne.mixedvectorsourceestimate property)": [[270, "mne.MixedVectorSourceEstimate.sfreq"]], "shape (mne.mixedvectorsourceestimate property)": [[270, "mne.MixedVectorSourceEstimate.shape"]], "shift_time() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.shift_time"]], "sqrt() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.sqrt"]], "sum() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.sum"]], "surface() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.surface"]], "time_as_index() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.time_as_index"]], "times (mne.mixedvectorsourceestimate property)": [[270, "mne.MixedVectorSourceEstimate.times"]], "tmax (mne.mixedvectorsourceestimate property)": [[270, "mne.MixedVectorSourceEstimate.tmax"]], "tmin (mne.mixedvectorsourceestimate property)": [[270, "mne.MixedVectorSourceEstimate.tmin"]], "to_data_frame() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.to_data_frame"]], "transform() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.transform"]], "transform_data() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.transform_data"]], "tstep (mne.mixedvectorsourceestimate property)": [[270, "mne.MixedVectorSourceEstimate.tstep"]], "volume() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.volume"]], "projection (class in mne)": [[271, "mne.Projection"]], "__contains__() (mne.projection method)": [[271, "mne.Projection.__contains__"]], "__getitem__() (mne.projection method)": [[271, "mne.Projection.__getitem__"]], "__iter__() (mne.projection method)": [[271, "mne.Projection.__iter__"]], "__len__() (mne.projection method)": [[271, "mne.Projection.__len__"]], "clear() (mne.projection method)": [[271, "mne.Projection.clear"]], "copy() (mne.projection method)": [[271, "mne.Projection.copy"]], "fromkeys() (mne.projection method)": [[271, "mne.Projection.fromkeys"]], "get() (mne.projection method)": [[271, "mne.Projection.get"]], "items() (mne.projection method)": [[271, "mne.Projection.items"]], "keys() (mne.projection method)": [[271, "mne.Projection.keys"]], "plot_topomap() (mne.projection method)": [[271, "mne.Projection.plot_topomap"]], "pop() (mne.projection method)": [[271, "mne.Projection.pop"]], "popitem() (mne.projection method)": [[271, "mne.Projection.popitem"]], "setdefault() (mne.projection method)": [[271, "mne.Projection.setdefault"]], "update() (mne.projection method)": [[271, "mne.Projection.update"]], "values() (mne.projection method)": [[271, "mne.Projection.values"]], "report (class in mne)": [[272, "mne.Report"]], "__len__() (mne.report method)": [[272, "mne.Report.__len__"]], "add_bem() (mne.report method)": [[272, "mne.Report.add_bem"]], "add_code() (mne.report method)": [[272, "mne.Report.add_code"]], "add_covariance() (mne.report method)": [[272, "mne.Report.add_covariance"]], "add_custom_css() (mne.report method)": [[272, "mne.Report.add_custom_css"]], "add_custom_js() (mne.report method)": [[272, "mne.Report.add_custom_js"]], "add_epochs() (mne.report method)": [[272, "mne.Report.add_epochs"]], "add_events() (mne.report method)": [[272, "mne.Report.add_events"]], "add_evokeds() (mne.report method)": [[272, "mne.Report.add_evokeds"]], "add_figure() (mne.report method)": [[272, "mne.Report.add_figure"]], "add_forward() (mne.report method)": [[272, "mne.Report.add_forward"]], "add_html() (mne.report method)": [[272, "mne.Report.add_html"]], "add_ica() (mne.report method)": [[272, "mne.Report.add_ica"]], "add_image() (mne.report method)": [[272, "mne.Report.add_image"]], "add_inverse_operator() (mne.report method)": [[272, "mne.Report.add_inverse_operator"]], "add_projs() (mne.report method)": [[272, "mne.Report.add_projs"]], "add_raw() (mne.report method)": [[272, "mne.Report.add_raw"]], "add_stc() (mne.report method)": [[272, "mne.Report.add_stc"]], "add_sys_info() (mne.report method)": [[272, "mne.Report.add_sys_info"]], "add_trans() (mne.report method)": [[272, "mne.Report.add_trans"]], "html (mne.report property)": [[272, "mne.Report.html"]], "parse_folder() (mne.report method)": [[272, "mne.Report.parse_folder"]], "remove() (mne.report method)": [[272, "mne.Report.remove"]], "save() (mne.report method)": [[272, "mne.Report.save"]], "tags (mne.report property)": [[272, "mne.Report.tags"]], "sourceestimate (class in mne)": [[273, "mne.SourceEstimate"]], "__add__() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.__add__"]], "__div__() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.__div__"]], "__mul__() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.__mul__"]], "__neg__() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.__neg__"]], "__sub__() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.__sub__"]], "apply_baseline() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.apply_baseline"]], "bin() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.bin"]], "center_of_mass() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.center_of_mass"]], "copy() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.copy"]], "crop() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.crop"]], "data (mne.sourceestimate property)": [[273, "mne.SourceEstimate.data"]], "decimate() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.decimate"]], "estimate_snr() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.estimate_snr"]], "expand() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.expand"]], "extract_label_time_course() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.extract_label_time_course"]], "get_peak() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.get_peak"]], "in_label() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.in_label"]], "lh_data (mne.sourceestimate property)": [[273, "mne.SourceEstimate.lh_data"]], "lh_vertno (mne.sourceestimate property)": [[273, "mne.SourceEstimate.lh_vertno"]], "mean() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.mean"]], "plot() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.plot"]], "resample() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.resample"]], "rh_data (mne.sourceestimate property)": [[273, "mne.SourceEstimate.rh_data"]], "rh_vertno (mne.sourceestimate property)": [[273, "mne.SourceEstimate.rh_vertno"]], "save() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.save"]], "sfreq (mne.sourceestimate property)": [[273, "mne.SourceEstimate.sfreq"]], "shape (mne.sourceestimate property)": [[273, "mne.SourceEstimate.shape"]], "shift_time() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.shift_time"]], "sqrt() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.sqrt"]], "sum() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.sum"]], "time_as_index() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.time_as_index"]], "times (mne.sourceestimate property)": [[273, "mne.SourceEstimate.times"]], "tmax (mne.sourceestimate property)": [[273, "mne.SourceEstimate.tmax"]], "tmin (mne.sourceestimate property)": [[273, "mne.SourceEstimate.tmin"]], "to_data_frame() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.to_data_frame"]], "to_original_src() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.to_original_src"]], "transform() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.transform"]], "transform_data() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.transform_data"]], "tstep (mne.sourceestimate property)": [[273, "mne.SourceEstimate.tstep"]], "sourcemorph (class in mne)": [[274, "mne.SourceMorph"]], "apply() (mne.sourcemorph method)": [[274, "mne.SourceMorph.apply"]], "compute_vol_morph_mat() (mne.sourcemorph method)": [[274, "mne.SourceMorph.compute_vol_morph_mat"]], "save() (mne.sourcemorph method)": [[274, "mne.SourceMorph.save"]], "sourcespaces (class in mne)": [[275, "mne.SourceSpaces"]], "__add__() (mne.sourcespaces method)": [[275, "mne.SourceSpaces.__add__"]], "__getitem__() (mne.sourcespaces method)": [[275, "mne.SourceSpaces.__getitem__"]], "copy() (mne.sourcespaces method)": [[275, "mne.SourceSpaces.copy"]], "export_volume() (mne.sourcespaces method)": [[275, "mne.SourceSpaces.export_volume"]], "plot() (mne.sourcespaces method)": [[275, "mne.SourceSpaces.plot"]], "save() (mne.sourcespaces method)": [[275, "mne.SourceSpaces.save"]], "vectorsourceestimate (class in mne)": [[276, "mne.VectorSourceEstimate"]], "__add__() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.__add__"]], "__div__() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.__div__"]], "__mul__() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.__mul__"]], "__neg__() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.__neg__"]], "__sub__() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.__sub__"]], "apply_baseline() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.apply_baseline"]], "bin() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.bin"]], "copy() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.copy"]], "crop() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.crop"]], "data (mne.vectorsourceestimate property)": [[276, "mne.VectorSourceEstimate.data"]], "decimate() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.decimate"]], "expand() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.expand"]], "extract_label_time_course() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.extract_label_time_course"]], "get_peak() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.get_peak"]], "in_label() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.in_label"]], "lh_data (mne.vectorsourceestimate property)": [[276, "mne.VectorSourceEstimate.lh_data"]], "lh_vertno (mne.vectorsourceestimate property)": [[276, "mne.VectorSourceEstimate.lh_vertno"]], "magnitude() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.magnitude"]], "mean() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.mean"]], "plot() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.plot"]], "project() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.project"]], "resample() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.resample"]], "rh_data (mne.vectorsourceestimate property)": [[276, "mne.VectorSourceEstimate.rh_data"]], "rh_vertno (mne.vectorsourceestimate property)": [[276, "mne.VectorSourceEstimate.rh_vertno"]], "save() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.save"]], "sfreq (mne.vectorsourceestimate property)": [[276, "mne.VectorSourceEstimate.sfreq"]], "shape (mne.vectorsourceestimate property)": [[276, "mne.VectorSourceEstimate.shape"]], "shift_time() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.shift_time"]], "sqrt() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.sqrt"]], "sum() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.sum"]], "time_as_index() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.time_as_index"]], "times (mne.vectorsourceestimate property)": [[276, "mne.VectorSourceEstimate.times"]], "tmax (mne.vectorsourceestimate property)": [[276, "mne.VectorSourceEstimate.tmax"]], "tmin (mne.vectorsourceestimate property)": [[276, "mne.VectorSourceEstimate.tmin"]], "to_data_frame() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.to_data_frame"]], "to_original_src() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.to_original_src"]], "transform() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.transform"]], "transform_data() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.transform_data"]], "tstep (mne.vectorsourceestimate property)": [[276, "mne.VectorSourceEstimate.tstep"]], "volsourceestimate (class in mne)": [[277, "mne.VolSourceEstimate"]], "__add__() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.__add__"]], "__div__() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.__div__"]], "__mul__() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.__mul__"]], "__neg__() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.__neg__"]], "__sub__() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.__sub__"]], "apply_baseline() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.apply_baseline"]], "as_volume() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.as_volume"]], "bin() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.bin"]], "copy() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.copy"]], "crop() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.crop"]], "data (mne.volsourceestimate property)": [[277, "mne.VolSourceEstimate.data"]], "decimate() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.decimate"]], "extract_label_time_course() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.extract_label_time_course"]], "get_peak() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.get_peak"]], "in_label() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.in_label"]], "mean() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.mean"]], "plot() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.plot"]], "plot_3d() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.plot_3d"]], "resample() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.resample"]], "save() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.save"]], "save_as_volume() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.save_as_volume"]], "sfreq (mne.volsourceestimate property)": [[277, "mne.VolSourceEstimate.sfreq"]], "shape (mne.volsourceestimate property)": [[277, "mne.VolSourceEstimate.shape"]], "shift_time() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.shift_time"]], "sqrt() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.sqrt"]], "sum() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.sum"]], "time_as_index() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.time_as_index"]], "times (mne.volsourceestimate property)": [[277, "mne.VolSourceEstimate.times"]], "tmax (mne.volsourceestimate property)": [[277, "mne.VolSourceEstimate.tmax"]], "tmin (mne.volsourceestimate property)": [[277, "mne.VolSourceEstimate.tmin"]], "to_data_frame() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.to_data_frame"]], "transform() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.transform"]], "transform_data() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.transform_data"]], "tstep (mne.volsourceestimate property)": [[277, "mne.VolSourceEstimate.tstep"]], "volvectorsourceestimate (class in mne)": [[278, "mne.VolVectorSourceEstimate"]], "__add__() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.__add__"]], "__div__() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.__div__"]], "__mul__() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.__mul__"]], "__neg__() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.__neg__"]], "__sub__() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.__sub__"]], "apply_baseline() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.apply_baseline"]], "as_volume() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.as_volume"]], "bin() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.bin"]], "copy() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.copy"]], "crop() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.crop"]], "data (mne.volvectorsourceestimate property)": [[278, "mne.VolVectorSourceEstimate.data"]], "decimate() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.decimate"]], "extract_label_time_course() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.extract_label_time_course"]], "get_peak() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.get_peak"]], "in_label() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.in_label"]], "magnitude() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.magnitude"]], "mean() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.mean"]], "plot() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.plot"]], "plot_3d() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.plot_3d"]], "project() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.project"]], "resample() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.resample"]], "save() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.save"]], "save_as_volume() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.save_as_volume"]], "sfreq (mne.volvectorsourceestimate property)": [[278, "mne.VolVectorSourceEstimate.sfreq"]], "shape (mne.volvectorsourceestimate property)": [[278, "mne.VolVectorSourceEstimate.shape"]], "shift_time() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.shift_time"]], "sqrt() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.sqrt"]], "sum() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.sum"]], "time_as_index() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.time_as_index"]], "times (mne.volvectorsourceestimate property)": [[278, "mne.VolVectorSourceEstimate.times"]], "tmax (mne.volvectorsourceestimate property)": [[278, "mne.VolVectorSourceEstimate.tmax"]], "tmin (mne.volvectorsourceestimate property)": [[278, "mne.VolVectorSourceEstimate.tmin"]], "to_data_frame() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.to_data_frame"]], "transform() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.transform"]], "transform_data() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.transform_data"]], "tstep (mne.volvectorsourceestimate property)": [[278, "mne.VolVectorSourceEstimate.tstep"]], "add_reference_channels() (in module mne)": [[279, "mne.add_reference_channels"]], "add_source_space_distances() (in module mne)": [[280, "mne.add_source_space_distances"]], "annotations_from_events() (in module mne)": [[281, "mne.annotations_from_events"]], "apply_forward() (in module mne)": [[282, "mne.apply_forward"]], "apply_forward_raw() (in module mne)": [[283, "mne.apply_forward_raw"]], "average_forward_solutions() (in module mne)": [[284, "mne.average_forward_solutions"]], "rescale() (in module mne.baseline)": [[285, "mne.baseline.rescale"]], "beamformer (class in mne.beamformer)": [[286, "mne.beamformer.Beamformer"]], "__contains__() (mne.beamformer.beamformer method)": [[286, "mne.beamformer.Beamformer.__contains__"]], "__getitem__() (mne.beamformer.beamformer method)": [[286, "mne.beamformer.Beamformer.__getitem__"]], "__iter__() (mne.beamformer.beamformer method)": [[286, "mne.beamformer.Beamformer.__iter__"]], "__len__() (mne.beamformer.beamformer method)": [[286, "mne.beamformer.Beamformer.__len__"]], "clear() (mne.beamformer.beamformer method)": [[286, "mne.beamformer.Beamformer.clear"]], "copy() (mne.beamformer.beamformer method)": [[286, "mne.beamformer.Beamformer.copy"]], "fromkeys() (mne.beamformer.beamformer method)": [[286, "mne.beamformer.Beamformer.fromkeys"]], "get() (mne.beamformer.beamformer method)": [[286, "mne.beamformer.Beamformer.get"]], "items() (mne.beamformer.beamformer method)": [[286, "mne.beamformer.Beamformer.items"]], "keys() (mne.beamformer.beamformer method)": [[286, "mne.beamformer.Beamformer.keys"]], "pop() (mne.beamformer.beamformer method)": [[286, "mne.beamformer.Beamformer.pop"]], "popitem() (mne.beamformer.beamformer method)": [[286, "mne.beamformer.Beamformer.popitem"]], "save() (mne.beamformer.beamformer method)": [[286, "mne.beamformer.Beamformer.save"]], "setdefault() (mne.beamformer.beamformer method)": [[286, "mne.beamformer.Beamformer.setdefault"]], "update() (mne.beamformer.beamformer method)": [[286, "mne.beamformer.Beamformer.update"]], "values() (mne.beamformer.beamformer method)": [[286, "mne.beamformer.Beamformer.values"]], "apply_dics() (in module mne.beamformer)": [[287, "mne.beamformer.apply_dics"]], "apply_dics_csd() (in module mne.beamformer)": [[288, "mne.beamformer.apply_dics_csd"]], "apply_dics_epochs() (in module mne.beamformer)": [[289, "mne.beamformer.apply_dics_epochs"]], "apply_dics_tfr_epochs() (in module mne.beamformer)": [[290, "mne.beamformer.apply_dics_tfr_epochs"]], "apply_lcmv() (in module mne.beamformer)": [[291, "mne.beamformer.apply_lcmv"]], "apply_lcmv_cov() (in module mne.beamformer)": [[292, "mne.beamformer.apply_lcmv_cov"]], "apply_lcmv_epochs() (in module mne.beamformer)": [[293, "mne.beamformer.apply_lcmv_epochs"]], "apply_lcmv_raw() (in module mne.beamformer)": [[294, "mne.beamformer.apply_lcmv_raw"]], "make_dics() (in module mne.beamformer)": [[295, "mne.beamformer.make_dics"]], "make_lcmv() (in module mne.beamformer)": [[296, "mne.beamformer.make_lcmv"]], "make_lcmv_resolution_matrix() (in module mne.beamformer)": [[297, "mne.beamformer.make_lcmv_resolution_matrix"]], "rap_music() (in module mne.beamformer)": [[298, "mne.beamformer.rap_music"]], "read_beamformer() (in module mne.beamformer)": [[299, "mne.beamformer.read_beamformer"]], "conductormodel (class in mne.bem)": [[300, "mne.bem.ConductorModel"]], "__contains__() (mne.bem.conductormodel method)": [[300, "mne.bem.ConductorModel.__contains__"]], "__getitem__() (mne.bem.conductormodel method)": [[300, "mne.bem.ConductorModel.__getitem__"]], "__iter__() (mne.bem.conductormodel method)": [[300, "mne.bem.ConductorModel.__iter__"]], "__len__() (mne.bem.conductormodel method)": [[300, "mne.bem.ConductorModel.__len__"]], "clear() (mne.bem.conductormodel method)": [[300, "mne.bem.ConductorModel.clear"]], "copy() (mne.bem.conductormodel method)": [[300, "mne.bem.ConductorModel.copy"]], "fromkeys() (mne.bem.conductormodel method)": [[300, "mne.bem.ConductorModel.fromkeys"]], "get() (mne.bem.conductormodel method)": [[300, "mne.bem.ConductorModel.get"]], "items() (mne.bem.conductormodel method)": [[300, "mne.bem.ConductorModel.items"]], "keys() (mne.bem.conductormodel method)": [[300, "mne.bem.ConductorModel.keys"]], "pop() (mne.bem.conductormodel method)": [[300, "mne.bem.ConductorModel.pop"]], "popitem() (mne.bem.conductormodel method)": [[300, "mne.bem.ConductorModel.popitem"]], "radius (mne.bem.conductormodel property)": [[300, "mne.bem.ConductorModel.radius"]], "setdefault() (mne.bem.conductormodel method)": [[300, "mne.bem.ConductorModel.setdefault"]], "update() (mne.bem.conductormodel method)": [[300, "mne.bem.ConductorModel.update"]], "values() (mne.bem.conductormodel method)": [[300, "mne.bem.ConductorModel.values"]], "convert_flash_mris() (in module mne.bem)": [[301, "mne.bem.convert_flash_mris"]], "distance_to_bem() (in module mne.bem)": [[302, "mne.bem.distance_to_bem"]], "fit_sphere_to_headshape() (in module mne.bem)": [[303, "mne.bem.fit_sphere_to_headshape"]], "get_fitting_dig() (in module mne.bem)": [[304, "mne.bem.get_fitting_dig"]], "make_flash_bem() (in module mne.bem)": [[305, "mne.bem.make_flash_bem"]], "make_scalp_surfaces() (in module mne.bem)": [[306, "mne.bem.make_scalp_surfaces"]], "make_watershed_bem() (in module mne.bem)": [[307, "mne.bem.make_watershed_bem"]], "channel_indices_by_type() (in module mne)": [[308, "mne.channel_indices_by_type"]], "channel_type() (in module mne)": [[309, "mne.channel_type"]], "digmontage (class in mne.channels)": [[310, "mne.channels.DigMontage"]], "__add__() (mne.channels.digmontage method)": [[310, "mne.channels.DigMontage.__add__"]], "add_estimated_fiducials() (mne.channels.digmontage method)": [[310, "mne.channels.DigMontage.add_estimated_fiducials"]], "add_mni_fiducials() (mne.channels.digmontage method)": [[310, "mne.channels.DigMontage.add_mni_fiducials"]], "apply_trans() (mne.channels.digmontage method)": [[310, "mne.channels.DigMontage.apply_trans"]], "copy() (mne.channels.digmontage method)": [[310, "mne.channels.DigMontage.copy"]], "get_positions() (mne.channels.digmontage method)": [[310, "mne.channels.DigMontage.get_positions"]], "plot() (mne.channels.digmontage method)": [[310, "mne.channels.DigMontage.plot"]], "remove_fiducials() (mne.channels.digmontage method)": [[310, "mne.channels.DigMontage.remove_fiducials"]], "rename_channels() (mne.channels.digmontage method)": [[310, "mne.channels.DigMontage.rename_channels"]], "save() (mne.channels.digmontage method)": [[310, "mne.channels.DigMontage.save"]], "layout (class in mne.channels)": [[311, "mne.channels.Layout"]], "plot() (mne.channels.layout method)": [[311, "mne.channels.Layout.plot"]], "save() (mne.channels.layout method)": [[311, "mne.channels.Layout.save"]], "combine_channels() (in module mne.channels)": [[312, "mne.channels.combine_channels"]], "compute_dev_head_t() (in module mne.channels)": [[313, "mne.channels.compute_dev_head_t"]], "compute_native_head_t() (in module mne.channels)": [[314, "mne.channels.compute_native_head_t"]], "equalize_channels() (in module mne.channels)": [[315, "mne.channels.equalize_channels"]], "find_ch_adjacency() (in module mne.channels)": [[316, "mne.channels.find_ch_adjacency"]], "find_layout() (in module mne.channels)": [[317, "mne.channels.find_layout"]], "fix_mag_coil_types() (in module mne.channels)": [[318, "mne.channels.fix_mag_coil_types"]], "generate_2d_layout() (in module mne.channels)": [[319, "mne.channels.generate_2d_layout"]], "get_builtin_ch_adjacencies() (in module mne.channels)": [[320, "mne.channels.get_builtin_ch_adjacencies"]], "get_builtin_montages() (in module mne.channels)": [[321, "mne.channels.get_builtin_montages"]], "make_1020_channel_selections() (in module mne.channels)": [[322, "mne.channels.make_1020_channel_selections"]], "make_dig_montage() (in module mne.channels)": [[323, "mne.channels.make_dig_montage"]], "make_eeg_layout() (in module mne.channels)": [[324, "mne.channels.make_eeg_layout"]], "make_grid_layout() (in module mne.channels)": [[325, "mne.channels.make_grid_layout"]], "make_standard_montage() (in module mne.channels)": [[326, "mne.channels.make_standard_montage"]], "read_ch_adjacency() (in module mne.channels)": [[327, "mne.channels.read_ch_adjacency"]], "read_custom_montage() (in module mne.channels)": [[328, "mne.channels.read_custom_montage"]], "read_dig_captrak() (in module mne.channels)": [[329, "mne.channels.read_dig_captrak"]], "read_dig_dat() (in module mne.channels)": [[330, "mne.channels.read_dig_dat"]], "read_dig_egi() (in module mne.channels)": [[331, "mne.channels.read_dig_egi"]], "read_dig_fif() (in module mne.channels)": [[332, "mne.channels.read_dig_fif"]], "read_dig_hpts() (in module mne.channels)": [[333, "mne.channels.read_dig_hpts"]], "read_dig_localite() (in module mne.channels)": [[334, "mne.channels.read_dig_localite"]], "read_dig_polhemus_isotrak() (in module mne.channels)": [[335, "mne.channels.read_dig_polhemus_isotrak"]], "read_layout() (in module mne.channels)": [[336, "mne.channels.read_layout"]], "read_polhemus_fastscan() (in module mne.channels)": [[337, "mne.channels.read_polhemus_fastscan"]], "rename_channels() (in module mne.channels)": [[338, "mne.channels.rename_channels"]], "compute_chpi_amplitudes() (in module mne.chpi)": [[339, "mne.chpi.compute_chpi_amplitudes"]], "compute_chpi_locs() (in module mne.chpi)": [[340, "mne.chpi.compute_chpi_locs"]], "compute_chpi_snr() (in module mne.chpi)": [[341, "mne.chpi.compute_chpi_snr"]], "compute_head_pos() (in module mne.chpi)": [[342, "mne.chpi.compute_head_pos"]], "extract_chpi_locs_ctf() (in module mne.chpi)": [[343, "mne.chpi.extract_chpi_locs_ctf"]], "extract_chpi_locs_kit() (in module mne.chpi)": [[344, "mne.chpi.extract_chpi_locs_kit"]], "filter_chpi() (in module mne.chpi)": [[345, "mne.chpi.filter_chpi"]], "get_active_chpi() (in module mne.chpi)": [[346, "mne.chpi.get_active_chpi"]], "get_chpi_info() (in module mne.chpi)": [[347, "mne.chpi.get_chpi_info"]], "head_pos_to_trans_rot_t() (in module mne.chpi)": [[348, "mne.chpi.head_pos_to_trans_rot_t"]], "read_head_pos() (in module mne.chpi)": [[349, "mne.chpi.read_head_pos"]], "write_head_pos() (in module mne.chpi)": [[350, "mne.chpi.write_head_pos"]], "combine_evoked() (in module mne)": [[351, "mne.combine_evoked"]], "compute_covariance() (in module mne)": [[352, "mne.compute_covariance"]], "compute_proj_epochs() (in module mne)": [[353, "mne.compute_proj_epochs"]], "compute_proj_evoked() (in module mne)": [[354, "mne.compute_proj_evoked"]], "compute_proj_raw() (in module mne)": [[355, "mne.compute_proj_raw"]], "compute_rank() (in module mne)": [[356, "mne.compute_rank"]], "compute_raw_covariance() (in module mne)": [[357, "mne.compute_raw_covariance"]], "compute_source_morph() (in module mne)": [[358, "mne.compute_source_morph"]], "concatenate_epochs() (in module mne)": [[359, "mne.concatenate_epochs"]], "concatenate_events() (in module mne)": [[360, "mne.concatenate_events"]], "concatenate_raws() (in module mne)": [[361, "mne.concatenate_raws"]], "convert_forward_solution() (in module mne)": [[362, "mne.convert_forward_solution"]], "coregistration (class in mne.coreg)": [[363, "mne.coreg.Coregistration"]], "compute_dig_mri_distances() (mne.coreg.coregistration method)": [[363, "mne.coreg.Coregistration.compute_dig_mri_distances"]], "fit_fiducials() (mne.coreg.coregistration method)": [[363, "mne.coreg.Coregistration.fit_fiducials"]], "fit_icp() (mne.coreg.coregistration method)": [[363, "mne.coreg.Coregistration.fit_icp"]], "omit_head_shape_points() (mne.coreg.coregistration method)": [[363, "mne.coreg.Coregistration.omit_head_shape_points"]], "reset() (mne.coreg.coregistration method)": [[363, "mne.coreg.Coregistration.reset"]], "scale (mne.coreg.coregistration property)": [[363, "mne.coreg.Coregistration.scale"]], "set_fid_match() (mne.coreg.coregistration method)": [[363, "mne.coreg.Coregistration.set_fid_match"]], "set_grow_hair() (mne.coreg.coregistration method)": [[363, "mne.coreg.Coregistration.set_grow_hair"]], "set_rotation() (mne.coreg.coregistration method)": [[363, "mne.coreg.Coregistration.set_rotation"]], "set_scale() (mne.coreg.coregistration method)": [[363, "mne.coreg.Coregistration.set_scale"]], "set_scale_mode() (mne.coreg.coregistration method)": [[363, "mne.coreg.Coregistration.set_scale_mode"]], "set_translation() (mne.coreg.coregistration method)": [[363, "mne.coreg.Coregistration.set_translation"]], "trans (mne.coreg.coregistration property)": [[363, "mne.coreg.Coregistration.trans"]], "estimate_head_mri_t() (in module mne.coreg)": [[364, "mne.coreg.estimate_head_mri_t"]], "get_mni_fiducials() (in module mne.coreg)": [[365, "mne.coreg.get_mni_fiducials"]], "count_events() (in module mne)": [[366, "mne.count_events"]], "compute_whitener() (in module mne.cov)": [[367, "mne.cov.compute_whitener"]], "prepare_noise_cov() (in module mne.cov)": [[368, "mne.cov.prepare_noise_cov"]], "regularize() (in module mne.cov)": [[369, "mne.cov.regularize"]], "create_default_subject() (in module mne)": [[370, "mne.create_default_subject"]], "create_info() (in module mne)": [[371, "mne.create_info"]], "get_cuda_memory() (in module mne.cuda)": [[372, "mne.cuda.get_cuda_memory"]], "init_cuda() (in module mne.cuda)": [[373, "mne.cuda.init_cuda"]], "set_cuda_device() (in module mne.cuda)": [[374, "mne.cuda.set_cuda_device"]], "data_path() (in module mne.datasets.brainstorm.bst_auditory)": [[375, "mne.datasets.brainstorm.bst_auditory.data_path"]], "data_path() (in module mne.datasets.brainstorm.bst_raw)": [[376, "mne.datasets.brainstorm.bst_raw.data_path"]], "data_path() (in module mne.datasets.brainstorm.bst_resting)": [[377, "mne.datasets.brainstorm.bst_resting.data_path"]], "load_data() (in module mne.datasets.eegbci)": [[378, "mne.datasets.eegbci.load_data"]], "standardize() (in module mne.datasets.eegbci)": [[379, "mne.datasets.eegbci.standardize"]], "data_path() (in module mne.datasets.epilepsy_ecog)": [[380, "mne.datasets.epilepsy_ecog.data_path"]], "data_path() (in module mne.datasets.erp_core)": [[381, "mne.datasets.erp_core.data_path"]], "fetch_aparc_sub_parcellation() (in module mne.datasets)": [[382, "mne.datasets.fetch_aparc_sub_parcellation"]], "fetch_dataset() (in module mne.datasets)": [[383, "mne.datasets.fetch_dataset"]], "fetch_fsaverage() (in module mne.datasets)": [[384, "mne.datasets.fetch_fsaverage"]], "fetch_hcp_mmp_parcellation() (in module mne.datasets)": [[385, "mne.datasets.fetch_hcp_mmp_parcellation"]], "fetch_infant_template() (in module mne.datasets)": [[386, "mne.datasets.fetch_infant_template"]], "fetch_phantom() (in module mne.datasets)": [[387, "mne.datasets.fetch_phantom"]], "data_path() (in module mne.datasets.fnirs_motor)": [[388, "mne.datasets.fnirs_motor.data_path"]], "has_dataset() (in module mne.datasets)": [[389, "mne.datasets.has_dataset"]], "data_path() (in module mne.datasets.hf_sef)": [[390, "mne.datasets.hf_sef.data_path"]], "data_path() (in module mne.datasets.kiloword)": [[391, "mne.datasets.kiloword.data_path"]], "load_data() (in module mne.datasets.limo)": [[392, "mne.datasets.limo.load_data"]], "data_path() (in module mne.datasets.misc)": [[393, "mne.datasets.misc.data_path"]], "data_path() (in module mne.datasets.mtrf)": [[394, "mne.datasets.mtrf.data_path"]], "data_path() (in module mne.datasets.multimodal)": [[395, "mne.datasets.multimodal.data_path"]], "data_path() (in module mne.datasets.opm)": [[396, "mne.datasets.opm.data_path"]], "data_path() (in module mne.datasets.phantom_4dbti)": [[397, "mne.datasets.phantom_4dbti.data_path"]], "data_path() (in module mne.datasets.refmeg_noise)": [[398, "mne.datasets.refmeg_noise.data_path"]], "data_path() (in module mne.datasets.sample)": [[399, "mne.datasets.sample.data_path"]], "fetch_data() (in module mne.datasets.sleep_physionet.age)": [[400, "mne.datasets.sleep_physionet.age.fetch_data"]], "fetch_data() (in module mne.datasets.sleep_physionet.temazepam)": [[401, "mne.datasets.sleep_physionet.temazepam.fetch_data"]], "data_path() (in module mne.datasets.somato)": [[402, "mne.datasets.somato.data_path"]], "data_path() (in module mne.datasets.spm_face)": [[403, "mne.datasets.spm_face.data_path"]], "data_path() (in module mne.datasets.ssvep)": [[404, "mne.datasets.ssvep.data_path"]], "data_path() (in module mne.datasets.ucl_opm_auditory)": [[405, "mne.datasets.ucl_opm_auditory.data_path"]], "data_path() (in module mne.datasets.visual_92_categories)": [[406, "mne.datasets.visual_92_categories.data_path"]], "decimate_surface() (in module mne)": [[407, "mne.decimate_surface"]], "csp (class in mne.decoding)": [[408, "mne.decoding.CSP"]], "fit() (mne.decoding.csp method)": [[408, "mne.decoding.CSP.fit"]], "fit_transform() (mne.decoding.csp method)": [[408, "mne.decoding.CSP.fit_transform"]], "get_params() (mne.decoding.csp method)": [[408, "mne.decoding.CSP.get_params"]], "plot_filters() (mne.decoding.csp method)": [[408, "mne.decoding.CSP.plot_filters"]], "plot_patterns() (mne.decoding.csp method)": [[408, "mne.decoding.CSP.plot_patterns"]], "set_params() (mne.decoding.csp method)": [[408, "mne.decoding.CSP.set_params"]], "transform() (mne.decoding.csp method)": [[408, "mne.decoding.CSP.transform"]], "ems (class in mne.decoding)": [[409, "mne.decoding.EMS"]], "fit() (mne.decoding.ems method)": [[409, "mne.decoding.EMS.fit"]], "fit_transform() (mne.decoding.ems method)": [[409, "mne.decoding.EMS.fit_transform"]], "get_params() (mne.decoding.ems method)": [[409, "mne.decoding.EMS.get_params"]], "set_params() (mne.decoding.ems method)": [[409, "mne.decoding.EMS.set_params"]], "transform() (mne.decoding.ems method)": [[409, "mne.decoding.EMS.transform"]], "filterestimator (class in mne.decoding)": [[410, "mne.decoding.FilterEstimator"]], "fit() (mne.decoding.filterestimator method)": [[410, "mne.decoding.FilterEstimator.fit"]], "fit_transform() (mne.decoding.filterestimator method)": [[410, "mne.decoding.FilterEstimator.fit_transform"]], "transform() (mne.decoding.filterestimator method)": [[410, "mne.decoding.FilterEstimator.transform"]], "generalizingestimator (class in mne.decoding)": [[411, "mne.decoding.GeneralizingEstimator"]], "decision_function() (mne.decoding.generalizingestimator method)": [[411, "mne.decoding.GeneralizingEstimator.decision_function"]], "fit() (mne.decoding.generalizingestimator method)": [[411, "mne.decoding.GeneralizingEstimator.fit"]], "fit_transform() (mne.decoding.generalizingestimator method)": [[411, "mne.decoding.GeneralizingEstimator.fit_transform"]], "get_params() (mne.decoding.generalizingestimator method)": [[411, "mne.decoding.GeneralizingEstimator.get_params"]], "predict() (mne.decoding.generalizingestimator method)": [[411, "mne.decoding.GeneralizingEstimator.predict"]], "predict_proba() (mne.decoding.generalizingestimator method)": [[411, "mne.decoding.GeneralizingEstimator.predict_proba"]], "score() (mne.decoding.generalizingestimator method)": [[411, "mne.decoding.GeneralizingEstimator.score"]], "set_params() (mne.decoding.generalizingestimator method)": [[411, "mne.decoding.GeneralizingEstimator.set_params"]], "transform() (mne.decoding.generalizingestimator method)": [[411, "mne.decoding.GeneralizingEstimator.transform"]], "linearmodel (class in mne.decoding)": [[412, "mne.decoding.LinearModel"]], "decision_function() (mne.decoding.linearmodel method)": [[412, "mne.decoding.LinearModel.decision_function"]], "fit() (mne.decoding.linearmodel method)": [[412, "mne.decoding.LinearModel.fit"]], "fit_transform() (mne.decoding.linearmodel method)": [[412, "mne.decoding.LinearModel.fit_transform"]], "get_params() (mne.decoding.linearmodel method)": [[412, "mne.decoding.LinearModel.get_params"]], "predict() (mne.decoding.linearmodel method)": [[412, "mne.decoding.LinearModel.predict"]], "predict_proba() (mne.decoding.linearmodel method)": [[412, "mne.decoding.LinearModel.predict_proba"]], "score() (mne.decoding.linearmodel method)": [[412, "mne.decoding.LinearModel.score"]], "set_params() (mne.decoding.linearmodel method)": [[412, "mne.decoding.LinearModel.set_params"]], "transform() (mne.decoding.linearmodel method)": [[412, "mne.decoding.LinearModel.transform"]], "psdestimator (class in mne.decoding)": [[413, "mne.decoding.PSDEstimator"]], "fit() (mne.decoding.psdestimator method)": [[413, "mne.decoding.PSDEstimator.fit"]], "fit_transform() (mne.decoding.psdestimator method)": [[413, "mne.decoding.PSDEstimator.fit_transform"]], "transform() (mne.decoding.psdestimator method)": [[413, "mne.decoding.PSDEstimator.transform"]], "receptivefield (class in mne.decoding)": [[414, "mne.decoding.ReceptiveField"]], "fit() (mne.decoding.receptivefield method)": [[414, "mne.decoding.ReceptiveField.fit"]], "get_params() (mne.decoding.receptivefield method)": [[414, "mne.decoding.ReceptiveField.get_params"]], "predict() (mne.decoding.receptivefield method)": [[414, "mne.decoding.ReceptiveField.predict"]], "score() (mne.decoding.receptivefield method)": [[414, "mne.decoding.ReceptiveField.score"]], "set_params() (mne.decoding.receptivefield method)": [[414, "mne.decoding.ReceptiveField.set_params"]], "spoc (class in mne.decoding)": [[415, "mne.decoding.SPoC"]], "fit() (mne.decoding.spoc method)": [[415, "mne.decoding.SPoC.fit"]], "fit_transform() (mne.decoding.spoc method)": [[415, "mne.decoding.SPoC.fit_transform"]], "get_params() (mne.decoding.spoc method)": [[415, "mne.decoding.SPoC.get_params"]], "plot_filters() (mne.decoding.spoc method)": [[415, "mne.decoding.SPoC.plot_filters"]], "plot_patterns() (mne.decoding.spoc method)": [[415, "mne.decoding.SPoC.plot_patterns"]], "set_params() (mne.decoding.spoc method)": [[415, "mne.decoding.SPoC.set_params"]], "transform() (mne.decoding.spoc method)": [[415, "mne.decoding.SPoC.transform"]], "ssd (class in mne.decoding)": [[416, "mne.decoding.SSD"]], "apply() (mne.decoding.ssd method)": [[416, "mne.decoding.SSD.apply"]], "fit() (mne.decoding.ssd method)": [[416, "mne.decoding.SSD.fit"]], "fit_transform() (mne.decoding.ssd method)": [[416, "mne.decoding.SSD.fit_transform"]], "get_params() (mne.decoding.ssd method)": [[416, "mne.decoding.SSD.get_params"]], "get_spectral_ratio() (mne.decoding.ssd method)": [[416, "mne.decoding.SSD.get_spectral_ratio"]], "inverse_transform() (mne.decoding.ssd method)": [[416, "mne.decoding.SSD.inverse_transform"]], "set_params() (mne.decoding.ssd method)": [[416, "mne.decoding.SSD.set_params"]], "transform() (mne.decoding.ssd method)": [[416, "mne.decoding.SSD.transform"]], "scaler (class in mne.decoding)": [[417, "mne.decoding.Scaler"]], "fit() (mne.decoding.scaler method)": [[417, "mne.decoding.Scaler.fit"]], "fit_transform() (mne.decoding.scaler method)": [[417, "mne.decoding.Scaler.fit_transform"]], "get_params() (mne.decoding.scaler method)": [[417, "mne.decoding.Scaler.get_params"]], "inverse_transform() (mne.decoding.scaler method)": [[417, "mne.decoding.Scaler.inverse_transform"]], "set_params() (mne.decoding.scaler method)": [[417, "mne.decoding.Scaler.set_params"]], "transform() (mne.decoding.scaler method)": [[417, "mne.decoding.Scaler.transform"]], "slidingestimator (class in mne.decoding)": [[418, "mne.decoding.SlidingEstimator"]], "decision_function() (mne.decoding.slidingestimator method)": [[418, "mne.decoding.SlidingEstimator.decision_function"]], "fit() (mne.decoding.slidingestimator method)": [[418, "mne.decoding.SlidingEstimator.fit"]], "fit_transform() (mne.decoding.slidingestimator method)": [[418, "mne.decoding.SlidingEstimator.fit_transform"]], "get_params() (mne.decoding.slidingestimator method)": [[418, "mne.decoding.SlidingEstimator.get_params"]], "predict() (mne.decoding.slidingestimator method)": [[418, "mne.decoding.SlidingEstimator.predict"]], "predict_proba() (mne.decoding.slidingestimator method)": [[418, "mne.decoding.SlidingEstimator.predict_proba"]], "score() (mne.decoding.slidingestimator method)": [[418, "mne.decoding.SlidingEstimator.score"]], "set_params() (mne.decoding.slidingestimator method)": [[418, "mne.decoding.SlidingEstimator.set_params"]], "transform() (mne.decoding.slidingestimator method)": [[418, "mne.decoding.SlidingEstimator.transform"]], "temporalfilter (class in mne.decoding)": [[419, "mne.decoding.TemporalFilter"]], "fit() (mne.decoding.temporalfilter method)": [[419, "mne.decoding.TemporalFilter.fit"]], "fit_transform() (mne.decoding.temporalfilter method)": [[419, "mne.decoding.TemporalFilter.fit_transform"]], "transform() (mne.decoding.temporalfilter method)": [[419, "mne.decoding.TemporalFilter.transform"]], "timedelayingridge (class in mne.decoding)": [[420, "mne.decoding.TimeDelayingRidge"]], "fit() (mne.decoding.timedelayingridge method)": [[420, "mne.decoding.TimeDelayingRidge.fit"]], "get_params() (mne.decoding.timedelayingridge method)": [[420, "mne.decoding.TimeDelayingRidge.get_params"]], "predict() (mne.decoding.timedelayingridge method)": [[420, "mne.decoding.TimeDelayingRidge.predict"]], "set_params() (mne.decoding.timedelayingridge method)": [[420, "mne.decoding.TimeDelayingRidge.set_params"]], "timefrequency (class in mne.decoding)": [[421, "mne.decoding.TimeFrequency"]], "fit() (mne.decoding.timefrequency method)": [[421, "mne.decoding.TimeFrequency.fit"]], "fit_transform() (mne.decoding.timefrequency method)": [[421, "mne.decoding.TimeFrequency.fit_transform"]], "get_params() (mne.decoding.timefrequency method)": [[421, "mne.decoding.TimeFrequency.get_params"]], "set_params() (mne.decoding.timefrequency method)": [[421, "mne.decoding.TimeFrequency.set_params"]], "transform() (mne.decoding.timefrequency method)": [[421, "mne.decoding.TimeFrequency.transform"]], "unsupervisedspatialfilter (class in mne.decoding)": [[422, "mne.decoding.UnsupervisedSpatialFilter"]], "fit() (mne.decoding.unsupervisedspatialfilter method)": [[422, "mne.decoding.UnsupervisedSpatialFilter.fit"]], "fit_transform() (mne.decoding.unsupervisedspatialfilter method)": [[422, "mne.decoding.UnsupervisedSpatialFilter.fit_transform"]], "get_params() (mne.decoding.unsupervisedspatialfilter method)": [[422, "mne.decoding.UnsupervisedSpatialFilter.get_params"]], "inverse_transform() (mne.decoding.unsupervisedspatialfilter method)": [[422, "mne.decoding.UnsupervisedSpatialFilter.inverse_transform"]], "set_params() (mne.decoding.unsupervisedspatialfilter method)": [[422, "mne.decoding.UnsupervisedSpatialFilter.set_params"]], "transform() (mne.decoding.unsupervisedspatialfilter method)": [[422, "mne.decoding.UnsupervisedSpatialFilter.transform"]], "vectorizer (class in mne.decoding)": [[423, "mne.decoding.Vectorizer"]], "fit() (mne.decoding.vectorizer method)": [[423, "mne.decoding.Vectorizer.fit"]], "fit_transform() (mne.decoding.vectorizer method)": [[423, "mne.decoding.Vectorizer.fit_transform"]], "inverse_transform() (mne.decoding.vectorizer method)": [[423, "mne.decoding.Vectorizer.inverse_transform"]], "transform() (mne.decoding.vectorizer method)": [[423, "mne.decoding.Vectorizer.transform"]], "compute_ems() (in module mne.decoding)": [[424, "mne.decoding.compute_ems"]], "cross_val_multiscore() (in module mne.decoding)": [[425, "mne.decoding.cross_val_multiscore"]], "get_coef() (in module mne.decoding)": [[426, "mne.decoding.get_coef"]], "dig_mri_distances() (in module mne)": [[427, "mne.dig_mri_distances"]], "get_phantom_dipoles() (in module mne.dipole)": [[428, "mne.dipole.get_phantom_dipoles"]], "average_movements() (in module mne.epochs)": [[429, "mne.epochs.average_movements"]], "combine_event_ids() (in module mne.epochs)": [[430, "mne.epochs.combine_event_ids"]], "equalize_epoch_counts() (in module mne.epochs)": [[431, "mne.epochs.equalize_epoch_counts"]], "make_metadata() (in module mne.epochs)": [[432, "mne.epochs.make_metadata"]], "equalize_channels() (in module mne)": [[433, "mne.equalize_channels"]], "define_target_events() (in module mne.event)": [[434, "mne.event.define_target_events"]], "match_event_names() (in module mne.event)": [[435, "mne.event.match_event_names"]], "shift_time_events() (in module mne.event)": [[436, "mne.event.shift_time_events"]], "events_from_annotations() (in module mne)": [[437, "mne.events_from_annotations"]], "export_epochs() (in module mne.export)": [[438, "mne.export.export_epochs"]], "export_evokeds() (in module mne.export)": [[439, "mne.export.export_evokeds"]], "export_evokeds_mff() (in module mne.export)": [[440, "mne.export.export_evokeds_mff"]], "export_raw() (in module mne.export)": [[441, "mne.export.export_raw"]], "extract_label_time_course() (in module mne)": [[442, "mne.extract_label_time_course"]], "construct_iir_filter() (in module mne.filter)": [[443, "mne.filter.construct_iir_filter"]], "create_filter() (in module mne.filter)": [[444, "mne.filter.create_filter"]], "estimate_ringing_samples() (in module mne.filter)": [[445, "mne.filter.estimate_ringing_samples"]], "filter_data() (in module mne.filter)": [[446, "mne.filter.filter_data"]], "notch_filter() (in module mne.filter)": [[447, "mne.filter.notch_filter"]], "resample() (in module mne.filter)": [[448, "mne.filter.resample"]], "find_events() (in module mne)": [[449, "mne.find_events"]], "find_stim_steps() (in module mne)": [[450, "mne.find_stim_steps"]], "fit_dipole() (in module mne)": [[451, "mne.fit_dipole"]], "compute_depth_prior() (in module mne.forward)": [[452, "mne.forward.compute_depth_prior"]], "compute_orient_prior() (in module mne.forward)": [[453, "mne.forward.compute_orient_prior"]], "restrict_forward_to_label() (in module mne.forward)": [[454, "mne.forward.restrict_forward_to_label"]], "restrict_forward_to_stc() (in module mne.forward)": [[455, "mne.forward.restrict_forward_to_stc"]], "get_config() (in module mne)": [[456, "mne.get_config"]], "get_config_path() (in module mne)": [[457, "mne.get_config_path"]], "get_head_surf() (in module mne)": [[458, "mne.get_head_surf"]], "get_meg_helmet_surf() (in module mne)": [[459, "mne.get_meg_helmet_surf"]], "get_montage_volume_labels() (in module mne)": [[460, "mne.get_montage_volume_labels"]], "get_volume_labels_from_aseg() (in module mne)": [[461, "mne.get_volume_labels_from_aseg"]], "get_volume_labels_from_src() (in module mne)": [[462, "mne.get_volume_labels_from_src"]], "grade_to_tris() (in module mne)": [[463, "mne.grade_to_tris"]], "grade_to_vertices() (in module mne)": [[464, "mne.grade_to_vertices"]], "grand_average() (in module mne)": [[465, "mne.grand_average"]], "grow_labels() (in module mne)": [[466, "mne.grow_labels"]], "coregistration() (in module mne.gui)": [[467, "mne.gui.coregistration"]], "locate_ieeg() (in module mne.gui)": [[468, "mne.gui.locate_ieeg"]], "head_to_mni() (in module mne)": [[469, "mne.head_to_mni"]], "head_to_mri() (in module mne)": [[470, "mne.head_to_mri"]], "gamma_map() (in module mne.inverse_sparse)": [[471, "mne.inverse_sparse.gamma_map"]], "make_stc_from_dipoles() (in module mne.inverse_sparse)": [[472, "mne.inverse_sparse.make_stc_from_dipoles"]], "mixed_norm() (in module mne.inverse_sparse)": [[473, "mne.inverse_sparse.mixed_norm"]], "tf_mixed_norm() (in module mne.inverse_sparse)": [[474, "mne.inverse_sparse.tf_mixed_norm"]], "baseraw (class in mne.io)": [[475, "mne.io.BaseRaw"]], "raw (class in mne.io)": [[476, "mne.io.Raw"]], "__contains__() (mne.io.raw method)": [[476, "mne.io.Raw.__contains__"]], "__getitem__() (mne.io.raw method)": [[476, "mne.io.Raw.__getitem__"]], "__len__() (mne.io.raw method)": [[476, "mne.io.Raw.__len__"]], "acqparser (mne.io.raw property)": [[476, "mne.io.Raw.acqparser"]], "add_channels() (mne.io.raw method)": [[476, "mne.io.Raw.add_channels"]], "add_events() (mne.io.raw method)": [[476, "mne.io.Raw.add_events"]], "add_proj() (mne.io.raw method)": [[476, "mne.io.Raw.add_proj"]], "add_reference_channels() (mne.io.raw method)": [[476, "mne.io.Raw.add_reference_channels"]], "annotations (mne.io.raw property)": [[476, "mne.io.Raw.annotations"]], "anonymize() (mne.io.raw method)": [[476, "mne.io.Raw.anonymize"]], "append() (mne.io.raw method)": [[476, "mne.io.Raw.append"]], "apply_function() (mne.io.raw method)": [[476, "mne.io.Raw.apply_function"]], "apply_gradient_compensation() (mne.io.raw method)": [[476, "mne.io.Raw.apply_gradient_compensation"]], "apply_hilbert() (mne.io.raw method)": [[476, "mne.io.Raw.apply_hilbert"]], "apply_proj() (mne.io.raw method)": [[476, "mne.io.Raw.apply_proj"]], "ch_names (mne.io.raw property)": [[476, "mne.io.Raw.ch_names"]], "close() (mne.io.raw method)": [[476, "mne.io.Raw.close"]], "compensation_grade (mne.io.raw property)": [[476, "mne.io.Raw.compensation_grade"]], "compute_psd() (mne.io.raw method)": [[476, "mne.io.Raw.compute_psd"]], "copy() (mne.io.raw method)": [[476, "mne.io.Raw.copy"]], "crop() (mne.io.raw method)": [[476, "mne.io.Raw.crop"]], "crop_by_annotations() (mne.io.raw method)": [[476, "mne.io.Raw.crop_by_annotations"]], "decimate() (mne.io.raw method)": [[476, "mne.io.Raw.decimate"]], "del_proj() (mne.io.raw method)": [[476, "mne.io.Raw.del_proj"]], "describe() (mne.io.raw method)": [[476, "mne.io.Raw.describe"]], "drop_channels() (mne.io.raw method)": [[476, "mne.io.Raw.drop_channels"]], "export() (mne.io.raw method)": [[476, "mne.io.Raw.export"]], "filenames (mne.io.raw property)": [[476, "mne.io.Raw.filenames"]], "filter() (mne.io.raw method)": [[476, "mne.io.Raw.filter"]], "first_samp (mne.io.raw property)": [[476, "mne.io.Raw.first_samp"]], "first_time (mne.io.raw property)": [[476, "mne.io.Raw.first_time"]], "fix_mag_coil_types() (mne.io.raw method)": [[476, "mne.io.Raw.fix_mag_coil_types"]], "get_channel_types() (mne.io.raw method)": [[476, "mne.io.Raw.get_channel_types"]], "get_data() (mne.io.raw method)": [[476, "mne.io.Raw.get_data"]], "get_montage() (mne.io.raw method)": [[476, "mne.io.Raw.get_montage"]], "interpolate_bads() (mne.io.raw method)": [[476, "mne.io.Raw.interpolate_bads"]], "last_samp (mne.io.raw property)": [[476, "mne.io.Raw.last_samp"]], "load_bad_channels() (mne.io.raw method)": [[476, "mne.io.Raw.load_bad_channels"]], "load_data() (mne.io.raw method)": [[476, "mne.io.Raw.load_data"]], "n_times (mne.io.raw property)": [[476, "mne.io.Raw.n_times"]], "notch_filter() (mne.io.raw method)": [[476, "mne.io.Raw.notch_filter"]], "pick() (mne.io.raw method)": [[476, "mne.io.Raw.pick"]], "pick_channels() (mne.io.raw method)": [[476, "mne.io.Raw.pick_channels"]], "pick_types() (mne.io.raw method)": [[476, "mne.io.Raw.pick_types"]], "plot() (mne.io.raw method)": [[476, "mne.io.Raw.plot"]], "plot_projs_topomap() (mne.io.raw method)": [[476, "mne.io.Raw.plot_projs_topomap"]], "plot_psd() (mne.io.raw method)": [[476, "mne.io.Raw.plot_psd"]], "plot_psd_topo() (mne.io.raw method)": [[476, "mne.io.Raw.plot_psd_topo"]], "plot_psd_topomap() (mne.io.raw method)": [[476, "mne.io.Raw.plot_psd_topomap"]], "plot_sensors() (mne.io.raw method)": [[476, "mne.io.Raw.plot_sensors"]], "proj (mne.io.raw property)": [[476, "mne.io.Raw.proj"]], "rename_channels() (mne.io.raw method)": [[476, "mne.io.Raw.rename_channels"]], "reorder_channels() (mne.io.raw method)": [[476, "mne.io.Raw.reorder_channels"]], "resample() (mne.io.raw method)": [[476, "mne.io.Raw.resample"]], "save() (mne.io.raw method)": [[476, "mne.io.Raw.save"]], "savgol_filter() (mne.io.raw method)": [[476, "mne.io.Raw.savgol_filter"]], "set_annotations() (mne.io.raw method)": [[476, "mne.io.Raw.set_annotations"]], "set_channel_types() (mne.io.raw method)": [[476, "mne.io.Raw.set_channel_types"]], "set_eeg_reference() (mne.io.raw method)": [[476, "mne.io.Raw.set_eeg_reference"]], "set_meas_date() (mne.io.raw method)": [[476, "mne.io.Raw.set_meas_date"]], "set_montage() (mne.io.raw method)": [[476, "mne.io.Raw.set_montage"]], "shift_time() (mne.io.raw method)": [[476, "mne.io.Raw.shift_time"]], "time_as_index() (mne.io.raw method)": [[476, "mne.io.Raw.time_as_index"]], "times (mne.io.raw property)": [[476, "mne.io.Raw.times"]], "tmax (mne.io.raw property)": [[476, "mne.io.Raw.tmax"]], "tmin (mne.io.raw property)": [[476, "mne.io.Raw.tmin"]], "to_data_frame() (mne.io.raw method)": [[476, "mne.io.Raw.to_data_frame"]], "rawarray (class in mne.io)": [[477, "mne.io.RawArray"]], "__contains__() (mne.io.rawarray method)": [[477, "mne.io.RawArray.__contains__"]], "__getitem__() (mne.io.rawarray method)": [[477, "mne.io.RawArray.__getitem__"]], "__len__() (mne.io.rawarray method)": [[477, "mne.io.RawArray.__len__"]], "add_channels() (mne.io.rawarray method)": [[477, "mne.io.RawArray.add_channels"]], "add_events() (mne.io.rawarray method)": [[477, "mne.io.RawArray.add_events"]], "add_proj() (mne.io.rawarray method)": [[477, "mne.io.RawArray.add_proj"]], "add_reference_channels() (mne.io.rawarray method)": [[477, "mne.io.RawArray.add_reference_channels"]], "annotations (mne.io.rawarray property)": [[477, "mne.io.RawArray.annotations"]], "anonymize() (mne.io.rawarray method)": [[477, "mne.io.RawArray.anonymize"]], "append() (mne.io.rawarray method)": [[477, "mne.io.RawArray.append"]], "apply_function() (mne.io.rawarray method)": [[477, "mne.io.RawArray.apply_function"]], "apply_gradient_compensation() (mne.io.rawarray method)": [[477, "mne.io.RawArray.apply_gradient_compensation"]], "apply_hilbert() (mne.io.rawarray method)": [[477, "mne.io.RawArray.apply_hilbert"]], "apply_proj() (mne.io.rawarray method)": [[477, "mne.io.RawArray.apply_proj"]], "ch_names (mne.io.rawarray property)": [[477, "mne.io.RawArray.ch_names"]], "close() (mne.io.rawarray method)": [[477, "mne.io.RawArray.close"]], "compensation_grade (mne.io.rawarray property)": [[477, "mne.io.RawArray.compensation_grade"]], "compute_psd() (mne.io.rawarray method)": [[477, "mne.io.RawArray.compute_psd"]], "copy() (mne.io.rawarray method)": [[477, "mne.io.RawArray.copy"]], "crop() (mne.io.rawarray method)": [[477, "mne.io.RawArray.crop"]], "crop_by_annotations() (mne.io.rawarray method)": [[477, "mne.io.RawArray.crop_by_annotations"]], "decimate() (mne.io.rawarray method)": [[477, "mne.io.RawArray.decimate"]], "del_proj() (mne.io.rawarray method)": [[477, "mne.io.RawArray.del_proj"]], "describe() (mne.io.rawarray method)": [[477, "mne.io.RawArray.describe"]], "drop_channels() (mne.io.rawarray method)": [[477, "mne.io.RawArray.drop_channels"]], "export() (mne.io.rawarray method)": [[477, "mne.io.RawArray.export"]], "filenames (mne.io.rawarray property)": [[477, "mne.io.RawArray.filenames"]], "filter() (mne.io.rawarray method)": [[477, "mne.io.RawArray.filter"]], "first_samp (mne.io.rawarray property)": [[477, "mne.io.RawArray.first_samp"]], "first_time (mne.io.rawarray property)": [[477, "mne.io.RawArray.first_time"]], "get_channel_types() (mne.io.rawarray method)": [[477, "mne.io.RawArray.get_channel_types"]], "get_data() (mne.io.rawarray method)": [[477, "mne.io.RawArray.get_data"]], "get_montage() (mne.io.rawarray method)": [[477, "mne.io.RawArray.get_montage"]], "interpolate_bads() (mne.io.rawarray method)": [[477, "mne.io.RawArray.interpolate_bads"]], "last_samp (mne.io.rawarray property)": [[477, "mne.io.RawArray.last_samp"]], "load_bad_channels() (mne.io.rawarray method)": [[477, "mne.io.RawArray.load_bad_channels"]], "load_data() (mne.io.rawarray method)": [[477, "mne.io.RawArray.load_data"]], "n_times (mne.io.rawarray property)": [[477, "mne.io.RawArray.n_times"]], "notch_filter() (mne.io.rawarray method)": [[477, "mne.io.RawArray.notch_filter"]], "pick() (mne.io.rawarray method)": [[477, "mne.io.RawArray.pick"]], "pick_channels() (mne.io.rawarray method)": [[477, "mne.io.RawArray.pick_channels"]], "pick_types() (mne.io.rawarray method)": [[477, "mne.io.RawArray.pick_types"]], "plot() (mne.io.rawarray method)": [[477, "mne.io.RawArray.plot"]], "plot_projs_topomap() (mne.io.rawarray method)": [[477, "mne.io.RawArray.plot_projs_topomap"]], "plot_psd() (mne.io.rawarray method)": [[477, "mne.io.RawArray.plot_psd"]], "plot_psd_topo() (mne.io.rawarray method)": [[477, "mne.io.RawArray.plot_psd_topo"]], "plot_psd_topomap() (mne.io.rawarray method)": [[477, "mne.io.RawArray.plot_psd_topomap"]], "plot_sensors() (mne.io.rawarray method)": [[477, "mne.io.RawArray.plot_sensors"]], "proj (mne.io.rawarray property)": [[477, "mne.io.RawArray.proj"]], "rename_channels() (mne.io.rawarray method)": [[477, "mne.io.RawArray.rename_channels"]], "reorder_channels() (mne.io.rawarray method)": [[477, "mne.io.RawArray.reorder_channels"]], "resample() (mne.io.rawarray method)": [[477, "mne.io.RawArray.resample"]], "save() (mne.io.rawarray method)": [[477, "mne.io.RawArray.save"]], "savgol_filter() (mne.io.rawarray method)": [[477, "mne.io.RawArray.savgol_filter"]], "set_annotations() (mne.io.rawarray method)": [[477, "mne.io.RawArray.set_annotations"]], "set_channel_types() (mne.io.rawarray method)": [[477, "mne.io.RawArray.set_channel_types"]], "set_eeg_reference() (mne.io.rawarray method)": [[477, "mne.io.RawArray.set_eeg_reference"]], "set_meas_date() (mne.io.rawarray method)": [[477, "mne.io.RawArray.set_meas_date"]], "set_montage() (mne.io.rawarray method)": [[477, "mne.io.RawArray.set_montage"]], "shift_time() (mne.io.rawarray method)": [[477, "mne.io.RawArray.shift_time"]], "time_as_index() (mne.io.rawarray method)": [[477, "mne.io.RawArray.time_as_index"]], "times (mne.io.rawarray property)": [[477, "mne.io.RawArray.times"]], "tmax (mne.io.rawarray property)": [[477, "mne.io.RawArray.tmax"]], "tmin (mne.io.rawarray property)": [[477, "mne.io.RawArray.tmin"]], "to_data_frame() (mne.io.rawarray method)": [[477, "mne.io.RawArray.to_data_frame"]], "anonymize_info() (in module mne.io)": [[478, "mne.io.anonymize_info"]], "read_mrk() (in module mne.io.kit)": [[479, "mne.io.kit.read_mrk"]], "read_fiducials() (in module mne.io)": [[480, "mne.io.read_fiducials"]], "read_info() (in module mne.io)": [[481, "mne.io.read_info"]], "read_raw() (in module mne.io)": [[482, "mne.io.read_raw"]], "read_raw_artemis123() (in module mne.io)": [[483, "mne.io.read_raw_artemis123"]], "read_raw_bdf() (in module mne.io)": [[484, "mne.io.read_raw_bdf"]], "read_raw_boxy() (in module mne.io)": [[485, "mne.io.read_raw_boxy"]], "read_raw_brainvision() (in module mne.io)": [[486, "mne.io.read_raw_brainvision"]], "read_raw_bti() (in module mne.io)": [[487, "mne.io.read_raw_bti"]], "read_raw_cnt() (in module mne.io)": [[488, "mne.io.read_raw_cnt"]], "read_raw_ctf() (in module mne.io)": [[489, "mne.io.read_raw_ctf"]], "read_raw_curry() (in module mne.io)": [[490, "mne.io.read_raw_curry"]], "read_raw_edf() (in module mne.io)": [[491, "mne.io.read_raw_edf"]], "read_raw_eeglab() (in module mne.io)": [[492, "mne.io.read_raw_eeglab"]], "read_raw_egi() (in module mne.io)": [[493, "mne.io.read_raw_egi"]], "read_raw_eximia() (in module mne.io)": [[494, "mne.io.read_raw_eximia"]], "read_raw_fieldtrip() (in module mne.io)": [[495, "mne.io.read_raw_fieldtrip"]], "read_raw_fif() (in module mne.io)": [[496, "mne.io.read_raw_fif"]], "read_raw_fil() (in module mne.io)": [[497, "mne.io.read_raw_fil"]], "read_raw_gdf() (in module mne.io)": [[498, "mne.io.read_raw_gdf"]], "read_raw_hitachi() (in module mne.io)": [[499, "mne.io.read_raw_hitachi"]], "read_raw_kit() (in module mne.io)": [[500, "mne.io.read_raw_kit"]], "read_raw_nedf() (in module mne.io)": [[501, "mne.io.read_raw_nedf"]], "read_raw_nicolet() (in module mne.io)": [[502, "mne.io.read_raw_nicolet"]], "read_raw_nihon() (in module mne.io)": [[503, "mne.io.read_raw_nihon"]], "read_raw_nirx() (in module mne.io)": [[504, "mne.io.read_raw_nirx"]], "read_raw_persyst() (in module mne.io)": [[505, "mne.io.read_raw_persyst"]], "read_raw_snirf() (in module mne.io)": [[506, "mne.io.read_raw_snirf"]], "show_fiff() (in module mne.io)": [[507, "mne.io.show_fiff"]], "write_fiducials() (in module mne.io)": [[508, "mne.io.write_fiducials"]], "select_sources() (in module mne.label)": [[509, "mne.label.select_sources"]], "label_sign_flip() (in module mne)": [[510, "mne.label_sign_flip"]], "labels_to_stc() (in module mne)": [[511, "mne.labels_to_stc"]], "make_ad_hoc_cov() (in module mne)": [[512, "mne.make_ad_hoc_cov"]], "make_bem_model() (in module mne)": [[513, "mne.make_bem_model"]], "make_bem_solution() (in module mne)": [[514, "mne.make_bem_solution"]], "make_field_map() (in module mne)": [[515, "mne.make_field_map"]], "make_fixed_length_epochs() (in module mne)": [[516, "mne.make_fixed_length_epochs"]], "make_fixed_length_events() (in module mne)": [[517, "mne.make_fixed_length_events"]], "make_forward_dipole() (in module mne)": [[518, "mne.make_forward_dipole"]], "make_forward_solution() (in module mne)": [[519, "mne.make_forward_solution"]], "make_sphere_model() (in module mne)": [[520, "mne.make_sphere_model"]], "merge_events() (in module mne)": [[521, "mne.merge_events"]], "inverseoperator (class in mne.minimum_norm)": [[522, "mne.minimum_norm.InverseOperator"]], "__contains__() (mne.minimum_norm.inverseoperator method)": [[522, "mne.minimum_norm.InverseOperator.__contains__"]], "__getitem__() (mne.minimum_norm.inverseoperator method)": [[522, "mne.minimum_norm.InverseOperator.__getitem__"]], "__iter__() (mne.minimum_norm.inverseoperator method)": [[522, "mne.minimum_norm.InverseOperator.__iter__"]], "__len__() (mne.minimum_norm.inverseoperator method)": [[522, "mne.minimum_norm.InverseOperator.__len__"]], "clear() (mne.minimum_norm.inverseoperator method)": [[522, "mne.minimum_norm.InverseOperator.clear"]], "copy() (mne.minimum_norm.inverseoperator method)": [[522, "mne.minimum_norm.InverseOperator.copy"]], "fromkeys() (mne.minimum_norm.inverseoperator method)": [[522, "mne.minimum_norm.InverseOperator.fromkeys"]], "get() (mne.minimum_norm.inverseoperator method)": [[522, "mne.minimum_norm.InverseOperator.get"]], "items() (mne.minimum_norm.inverseoperator method)": [[522, "mne.minimum_norm.InverseOperator.items"]], "keys() (mne.minimum_norm.inverseoperator method)": [[522, "mne.minimum_norm.InverseOperator.keys"]], "pop() (mne.minimum_norm.inverseoperator method)": [[522, "mne.minimum_norm.InverseOperator.pop"]], "popitem() (mne.minimum_norm.inverseoperator method)": [[522, "mne.minimum_norm.InverseOperator.popitem"]], "setdefault() (mne.minimum_norm.inverseoperator method)": [[522, "mne.minimum_norm.InverseOperator.setdefault"]], "update() (mne.minimum_norm.inverseoperator method)": [[522, "mne.minimum_norm.InverseOperator.update"]], "values() (mne.minimum_norm.inverseoperator method)": [[522, "mne.minimum_norm.InverseOperator.values"]], "apply_inverse() (in module mne.minimum_norm)": [[523, "mne.minimum_norm.apply_inverse"]], "apply_inverse_cov() (in module mne.minimum_norm)": [[524, "mne.minimum_norm.apply_inverse_cov"]], "apply_inverse_epochs() (in module mne.minimum_norm)": [[525, "mne.minimum_norm.apply_inverse_epochs"]], "apply_inverse_raw() (in module mne.minimum_norm)": [[526, "mne.minimum_norm.apply_inverse_raw"]], "apply_inverse_tfr_epochs() (in module mne.minimum_norm)": [[527, "mne.minimum_norm.apply_inverse_tfr_epochs"]], "compute_rank_inverse() (in module mne.minimum_norm)": [[528, "mne.minimum_norm.compute_rank_inverse"]], "compute_source_psd() (in module mne.minimum_norm)": [[529, "mne.minimum_norm.compute_source_psd"]], "compute_source_psd_epochs() (in module mne.minimum_norm)": [[530, "mne.minimum_norm.compute_source_psd_epochs"]], "estimate_snr() (in module mne.minimum_norm)": [[531, "mne.minimum_norm.estimate_snr"]], "get_cross_talk() (in module mne.minimum_norm)": [[532, "mne.minimum_norm.get_cross_talk"]], "get_point_spread() (in module mne.minimum_norm)": [[533, "mne.minimum_norm.get_point_spread"]], "make_inverse_operator() (in module mne.minimum_norm)": [[534, "mne.minimum_norm.make_inverse_operator"]], "make_inverse_resolution_matrix() (in module mne.minimum_norm)": [[535, "mne.minimum_norm.make_inverse_resolution_matrix"]], "prepare_inverse_operator() (in module mne.minimum_norm)": [[536, "mne.minimum_norm.prepare_inverse_operator"]], "read_inverse_operator() (in module mne.minimum_norm)": [[537, "mne.minimum_norm.read_inverse_operator"]], "resolution_metrics() (in module mne.minimum_norm)": [[538, "mne.minimum_norm.resolution_metrics"]], "source_band_induced_power() (in module mne.minimum_norm)": [[539, "mne.minimum_norm.source_band_induced_power"]], "source_induced_power() (in module mne.minimum_norm)": [[540, "mne.minimum_norm.source_induced_power"]], "write_inverse_operator() (in module mne.minimum_norm)": [[541, "mne.minimum_norm.write_inverse_operator"]], "morph_labels() (in module mne)": [[542, "mne.morph_labels"]], "morph_source_spaces() (in module mne)": [[543, "mne.morph_source_spaces"]], "open_docs() (in module mne)": [[544, "mne.open_docs"]], "open_report() (in module mne)": [[545, "mne.open_report"]], "parse_config() (in module mne)": [[546, "mne.parse_config"]], "pick_channels() (in module mne)": [[547, "mne.pick_channels"]], "pick_channels_cov() (in module mne)": [[548, "mne.pick_channels_cov"]], "pick_channels_forward() (in module mne)": [[549, "mne.pick_channels_forward"]], "pick_channels_regexp() (in module mne)": [[550, "mne.pick_channels_regexp"]], "pick_events() (in module mne)": [[551, "mne.pick_events"]], "pick_info() (in module mne)": [[552, "mne.pick_info"]], "pick_types() (in module mne)": [[553, "mne.pick_types"]], "pick_types_forward() (in module mne)": [[554, "mne.pick_types_forward"]], "eogregression (class in mne.preprocessing)": [[555, "mne.preprocessing.EOGRegression"]], "apply() (mne.preprocessing.eogregression method)": [[555, "mne.preprocessing.EOGRegression.apply"]], "fit() (mne.preprocessing.eogregression method)": [[555, "mne.preprocessing.EOGRegression.fit"]], "plot() (mne.preprocessing.eogregression method)": [[555, "mne.preprocessing.EOGRegression.plot"]], "save() (mne.preprocessing.eogregression method)": [[555, "mne.preprocessing.EOGRegression.save"]], "ica (class in mne.preprocessing)": [[556, "mne.preprocessing.ICA"]], "__contains__() (mne.preprocessing.ica method)": [[556, "mne.preprocessing.ICA.__contains__"]], "apply() (mne.preprocessing.ica method)": [[556, "mne.preprocessing.ICA.apply"]], "compensation_grade (mne.preprocessing.ica property)": [[556, "mne.preprocessing.ICA.compensation_grade"]], "copy() (mne.preprocessing.ica method)": [[556, "mne.preprocessing.ICA.copy"]], "find_bads_ecg() (mne.preprocessing.ica method)": [[556, "mne.preprocessing.ICA.find_bads_ecg"]], "find_bads_eog() (mne.preprocessing.ica method)": [[556, "mne.preprocessing.ICA.find_bads_eog"]], "find_bads_muscle() (mne.preprocessing.ica method)": [[556, "mne.preprocessing.ICA.find_bads_muscle"]], "find_bads_ref() (mne.preprocessing.ica method)": [[556, "mne.preprocessing.ICA.find_bads_ref"]], "fit() (mne.preprocessing.ica method)": [[556, "mne.preprocessing.ICA.fit"]], "get_channel_types() (mne.preprocessing.ica method)": [[556, "mne.preprocessing.ICA.get_channel_types"]], "get_components() (mne.preprocessing.ica method)": [[556, "mne.preprocessing.ICA.get_components"]], "get_explained_variance_ratio() (mne.preprocessing.ica method)": [[556, "mne.preprocessing.ICA.get_explained_variance_ratio"]], "get_sources() (mne.preprocessing.ica method)": [[556, "mne.preprocessing.ICA.get_sources"]], "plot_components() (mne.preprocessing.ica method)": [[556, "mne.preprocessing.ICA.plot_components"]], "plot_overlay() (mne.preprocessing.ica method)": [[556, "mne.preprocessing.ICA.plot_overlay"]], "plot_properties() (mne.preprocessing.ica method)": [[556, "mne.preprocessing.ICA.plot_properties"]], "plot_scores() (mne.preprocessing.ica method)": [[556, "mne.preprocessing.ICA.plot_scores"]], "plot_sources() (mne.preprocessing.ica method)": [[556, "mne.preprocessing.ICA.plot_sources"]], "save() (mne.preprocessing.ica method)": [[556, "mne.preprocessing.ICA.save"]], "score_sources() (mne.preprocessing.ica method)": [[556, "mne.preprocessing.ICA.score_sources"]], "xdawn (class in mne.preprocessing)": [[557, "mne.preprocessing.Xdawn"]], "apply() (mne.preprocessing.xdawn method)": [[557, "mne.preprocessing.Xdawn.apply"]], "fit() (mne.preprocessing.xdawn method)": [[557, "mne.preprocessing.Xdawn.fit"]], "fit_transform() (mne.preprocessing.xdawn method)": [[557, "mne.preprocessing.Xdawn.fit_transform"]], "get_params() (mne.preprocessing.xdawn method)": [[557, "mne.preprocessing.Xdawn.get_params"]], "inverse_transform() (mne.preprocessing.xdawn method)": [[557, "mne.preprocessing.Xdawn.inverse_transform"]], "set_params() (mne.preprocessing.xdawn method)": [[557, "mne.preprocessing.Xdawn.set_params"]], "transform() (mne.preprocessing.xdawn method)": [[557, "mne.preprocessing.Xdawn.transform"]], "annotate_amplitude() (in module mne.preprocessing)": [[558, "mne.preprocessing.annotate_amplitude"]], "annotate_break() (in module mne.preprocessing)": [[559, "mne.preprocessing.annotate_break"]], "annotate_movement() (in module mne.preprocessing)": [[560, "mne.preprocessing.annotate_movement"]], "annotate_muscle_zscore() (in module mne.preprocessing)": [[561, "mne.preprocessing.annotate_muscle_zscore"]], "annotate_nan() (in module mne.preprocessing)": [[562, "mne.preprocessing.annotate_nan"]], "compute_average_dev_head_t() (in module mne.preprocessing)": [[563, "mne.preprocessing.compute_average_dev_head_t"]], "compute_bridged_electrodes() (in module mne.preprocessing)": [[564, "mne.preprocessing.compute_bridged_electrodes"]], "compute_current_source_density() (in module mne.preprocessing)": [[565, "mne.preprocessing.compute_current_source_density"]], "compute_fine_calibration() (in module mne.preprocessing)": [[566, "mne.preprocessing.compute_fine_calibration"]], "compute_maxwell_basis() (in module mne.preprocessing)": [[567, "mne.preprocessing.compute_maxwell_basis"]], "compute_proj_ecg() (in module mne.preprocessing)": [[568, "mne.preprocessing.compute_proj_ecg"]], "compute_proj_eog() (in module mne.preprocessing)": [[569, "mne.preprocessing.compute_proj_eog"]], "corrmap() (in module mne.preprocessing)": [[570, "mne.preprocessing.corrmap"]], "cortical_signal_suppression() (in module mne.preprocessing)": [[571, "mne.preprocessing.cortical_signal_suppression"]], "create_ecg_epochs() (in module mne.preprocessing)": [[572, "mne.preprocessing.create_ecg_epochs"]], "create_eog_epochs() (in module mne.preprocessing)": [[573, "mne.preprocessing.create_eog_epochs"]], "equalize_bads() (in module mne.preprocessing)": [[574, "mne.preprocessing.equalize_bads"]], "find_bad_channels_maxwell() (in module mne.preprocessing)": [[575, "mne.preprocessing.find_bad_channels_maxwell"]], "find_ecg_events() (in module mne.preprocessing)": [[576, "mne.preprocessing.find_ecg_events"]], "find_eog_events() (in module mne.preprocessing)": [[577, "mne.preprocessing.find_eog_events"]], "fix_stim_artifact() (in module mne.preprocessing)": [[578, "mne.preprocessing.fix_stim_artifact"]], "ica_find_ecg_events() (in module mne.preprocessing)": [[579, "mne.preprocessing.ica_find_ecg_events"]], "ica_find_eog_events() (in module mne.preprocessing)": [[580, "mne.preprocessing.ica_find_eog_events"]], "project_sensors_onto_brain() (in module mne.preprocessing.ieeg)": [[581, "mne.preprocessing.ieeg.project_sensors_onto_brain"]], "infomax() (in module mne.preprocessing)": [[582, "mne.preprocessing.infomax"]], "interpolate_bridged_electrodes() (in module mne.preprocessing)": [[583, "mne.preprocessing.interpolate_bridged_electrodes"]], "maxwell_filter() (in module mne.preprocessing)": [[584, "mne.preprocessing.maxwell_filter"]], "maxwell_filter_prepare_emptyroom() (in module mne.preprocessing)": [[585, "mne.preprocessing.maxwell_filter_prepare_emptyroom"]], "beer_lambert_law() (in module mne.preprocessing.nirs)": [[586, "mne.preprocessing.nirs.beer_lambert_law"]], "optical_density() (in module mne.preprocessing.nirs)": [[587, "mne.preprocessing.nirs.optical_density"]], "scalp_coupling_index() (in module mne.preprocessing.nirs)": [[588, "mne.preprocessing.nirs.scalp_coupling_index"]], "short_channels() (in module mne.preprocessing.nirs)": [[589, "mne.preprocessing.nirs.short_channels"]], "source_detector_distances() (in module mne.preprocessing.nirs)": [[590, "mne.preprocessing.nirs.source_detector_distances"]], "temporal_derivative_distribution_repair() (in module mne.preprocessing.nirs)": [[591, "mne.preprocessing.nirs.temporal_derivative_distribution_repair"]], "oversampled_temporal_projection() (in module mne.preprocessing)": [[592, "mne.preprocessing.oversampled_temporal_projection"]], "peak_finder() (in module mne.preprocessing)": [[593, "mne.preprocessing.peak_finder"]], "read_eog_regression() (in module mne.preprocessing)": [[594, "mne.preprocessing.read_eog_regression"]], "read_fine_calibration() (in module mne.preprocessing)": [[595, "mne.preprocessing.read_fine_calibration"]], "read_ica() (in module mne.preprocessing)": [[596, "mne.preprocessing.read_ica"]], "read_ica_eeglab() (in module mne.preprocessing)": [[597, "mne.preprocessing.read_ica_eeglab"]], "realign_raw() (in module mne.preprocessing)": [[598, "mne.preprocessing.realign_raw"]], "regress_artifact() (in module mne.preprocessing)": [[599, "mne.preprocessing.regress_artifact"]], "write_fine_calibration() (in module mne.preprocessing)": [[600, "mne.preprocessing.write_fine_calibration"]], "random_parcellation() (in module mne)": [[601, "mne.random_parcellation"]], "read_annotations() (in module mne)": [[602, "mne.read_annotations"]], "read_bem_solution() (in module mne)": [[603, "mne.read_bem_solution"]], "read_bem_surfaces() (in module mne)": [[604, "mne.read_bem_surfaces"]], "read_cov() (in module mne)": [[605, "mne.read_cov"]], "read_dipole() (in module mne)": [[606, "mne.read_dipole"]], "read_epochs() (in module mne)": [[607, "mne.read_epochs"]], "read_epochs_eeglab() (in module mne)": [[608, "mne.read_epochs_eeglab"]], "read_epochs_fieldtrip() (in module mne)": [[609, "mne.read_epochs_fieldtrip"]], "read_epochs_kit() (in module mne)": [[610, "mne.read_epochs_kit"]], "read_events() (in module mne)": [[611, "mne.read_events"]], "read_evoked_besa() (in module mne)": [[612, "mne.read_evoked_besa"]], "read_evoked_fieldtrip() (in module mne)": [[613, "mne.read_evoked_fieldtrip"]], "read_evokeds() (in module mne)": [[614, "mne.read_evokeds"]], "read_evokeds_mff() (in module mne)": [[615, "mne.read_evokeds_mff"]], "read_forward_solution() (in module mne)": [[616, "mne.read_forward_solution"]], "read_freesurfer_lut() (in module mne)": [[617, "mne.read_freesurfer_lut"]], "read_label() (in module mne)": [[618, "mne.read_label"]], "read_labels_from_annot() (in module mne)": [[619, "mne.read_labels_from_annot"]], "read_lta() (in module mne)": [[620, "mne.read_lta"]], "read_morph_map() (in module mne)": [[621, "mne.read_morph_map"]], "read_proj() (in module mne)": [[622, "mne.read_proj"]], "read_reject_parameters() (in module mne)": [[623, "mne.read_reject_parameters"]], "read_source_estimate() (in module mne)": [[624, "mne.read_source_estimate"]], "read_source_morph() (in module mne)": [[625, "mne.read_source_morph"]], "read_source_spaces() (in module mne)": [[626, "mne.read_source_spaces"]], "read_surface() (in module mne)": [[627, "mne.read_surface"]], "read_talxfm() (in module mne)": [[628, "mne.read_talxfm"]], "read_trans() (in module mne)": [[629, "mne.read_trans"]], "read_tri() (in module mne)": [[630, "mne.read_tri"]], "read_vectorview_selection() (in module mne)": [[631, "mne.read_vectorview_selection"]], "rename_channels() (in module mne)": [[632, "mne.rename_channels"]], "scale_bem() (in module mne)": [[633, "mne.scale_bem"]], "scale_labels() (in module mne)": [[634, "mne.scale_labels"]], "scale_mri() (in module mne)": [[635, "mne.scale_mri"]], "scale_source_space() (in module mne)": [[636, "mne.scale_source_space"]], "sensitivity_map() (in module mne)": [[637, "mne.sensitivity_map"]], "set_bipolar_reference() (in module mne)": [[638, "mne.set_bipolar_reference"]], "set_cache_dir() (in module mne)": [[639, "mne.set_cache_dir"]], "set_config() (in module mne)": [[640, "mne.set_config"]], "set_eeg_reference() (in module mne)": [[641, "mne.set_eeg_reference"]], "set_log_file() (in module mne)": [[642, "mne.set_log_file"]], "set_log_level() (in module mne)": [[643, "mne.set_log_level"]], "setup_source_space() (in module mne)": [[644, "mne.setup_source_space"]], "setup_volume_source_space() (in module mne)": [[645, "mne.setup_volume_source_space"]], "sourcesimulator (class in mne.simulation)": [[646, "mne.simulation.SourceSimulator"]], "__iter__() (mne.simulation.sourcesimulator method)": [[646, "mne.simulation.SourceSimulator.__iter__"]], "add_data() (mne.simulation.sourcesimulator method)": [[646, "mne.simulation.SourceSimulator.add_data"]], "duration (mne.simulation.sourcesimulator property)": [[646, "mne.simulation.SourceSimulator.duration"]], "get_stc() (mne.simulation.sourcesimulator method)": [[646, "mne.simulation.SourceSimulator.get_stc"]], "get_stim_channel() (mne.simulation.sourcesimulator method)": [[646, "mne.simulation.SourceSimulator.get_stim_channel"]], "n_times (mne.simulation.sourcesimulator property)": [[646, "mne.simulation.SourceSimulator.n_times"]], "add_chpi() (in module mne.simulation)": [[647, "mne.simulation.add_chpi"]], "add_ecg() (in module mne.simulation)": [[648, "mne.simulation.add_ecg"]], "add_eog() (in module mne.simulation)": [[649, "mne.simulation.add_eog"]], "add_noise() (in module mne.simulation)": [[650, "mne.simulation.add_noise"]], "cosine_score() (in module mne.simulation.metrics)": [[651, "mne.simulation.metrics.cosine_score"]], "f1_score() (in module mne.simulation.metrics)": [[652, "mne.simulation.metrics.f1_score"]], "peak_position_error() (in module mne.simulation.metrics)": [[653, "mne.simulation.metrics.peak_position_error"]], "precision_score() (in module mne.simulation.metrics)": [[654, "mne.simulation.metrics.precision_score"]], "recall_score() (in module mne.simulation.metrics)": [[655, "mne.simulation.metrics.recall_score"]], "region_localization_error() (in module mne.simulation.metrics)": [[656, "mne.simulation.metrics.region_localization_error"]], "roc_auc_score() (in module mne.simulation.metrics)": [[657, "mne.simulation.metrics.roc_auc_score"]], "spatial_deviation_error() (in module mne.simulation.metrics)": [[658, "mne.simulation.metrics.spatial_deviation_error"]], "select_source_in_label() (in module mne.simulation)": [[659, "mne.simulation.select_source_in_label"]], "simulate_evoked() (in module mne.simulation)": [[660, "mne.simulation.simulate_evoked"]], "simulate_raw() (in module mne.simulation)": [[661, "mne.simulation.simulate_raw"]], "simulate_sparse_stc() (in module mne.simulation)": [[662, "mne.simulation.simulate_sparse_stc"]], "simulate_stc() (in module mne.simulation)": [[663, "mne.simulation.simulate_stc"]], "compute_distance_to_sensors() (in module mne.source_space)": [[664, "mne.source_space.compute_distance_to_sensors"]], "get_decimated_surfaces() (in module mne.source_space)": [[665, "mne.source_space.get_decimated_surfaces"]], "spatial_dist_adjacency() (in module mne)": [[666, "mne.spatial_dist_adjacency"]], "spatial_inter_hemi_adjacency() (in module mne)": [[667, "mne.spatial_inter_hemi_adjacency"]], "spatial_src_adjacency() (in module mne)": [[668, "mne.spatial_src_adjacency"]], "spatial_tris_adjacency() (in module mne)": [[669, "mne.spatial_tris_adjacency"]], "spatio_temporal_dist_adjacency() (in module mne)": [[670, "mne.spatio_temporal_dist_adjacency"]], "spatio_temporal_src_adjacency() (in module mne)": [[671, "mne.spatio_temporal_src_adjacency"]], "spatio_temporal_tris_adjacency() (in module mne)": [[672, "mne.spatio_temporal_tris_adjacency"]], "split_label() (in module mne)": [[673, "mne.split_label"]], "bonferroni_correction() (in module mne.stats)": [[674, "mne.stats.bonferroni_correction"]], "bootstrap_confidence_interval() (in module mne.stats)": [[675, "mne.stats.bootstrap_confidence_interval"]], "combine_adjacency() (in module mne.stats)": [[676, "mne.stats.combine_adjacency"]], "f_mway_rm() (in module mne.stats)": [[677, "mne.stats.f_mway_rm"]], "f_oneway() (in module mne.stats)": [[678, "mne.stats.f_oneway"]], "f_threshold_mway_rm() (in module mne.stats)": [[679, "mne.stats.f_threshold_mway_rm"]], "fdr_correction() (in module mne.stats)": [[680, "mne.stats.fdr_correction"]], "linear_regression() (in module mne.stats)": [[681, "mne.stats.linear_regression"]], "linear_regression_raw() (in module mne.stats)": [[682, "mne.stats.linear_regression_raw"]], "permutation_cluster_1samp_test() (in module mne.stats)": [[683, "mne.stats.permutation_cluster_1samp_test"]], "permutation_cluster_test() (in module mne.stats)": [[684, "mne.stats.permutation_cluster_test"]], "permutation_t_test() (in module mne.stats)": [[685, "mne.stats.permutation_t_test"]], "spatio_temporal_cluster_1samp_test() (in module mne.stats)": [[686, "mne.stats.spatio_temporal_cluster_1samp_test"]], "spatio_temporal_cluster_test() (in module mne.stats)": [[687, "mne.stats.spatio_temporal_cluster_test"]], "summarize_clusters_stc() (in module mne.stats)": [[688, "mne.stats.summarize_clusters_stc"]], "ttest_1samp_no_p() (in module mne.stats)": [[689, "mne.stats.ttest_1samp_no_p"]], "ttest_ind_no_p() (in module mne.stats)": [[690, "mne.stats.ttest_ind_no_p"]], "stc_near_sensors() (in module mne)": [[691, "mne.stc_near_sensors"]], "stc_to_label() (in module mne)": [[692, "mne.stc_to_label"]], "complete_surface_info() (in module mne.surface)": [[693, "mne.surface.complete_surface_info"]], "read_curvature() (in module mne.surface)": [[694, "mne.surface.read_curvature"]], "sys_info() (in module mne)": [[695, "mne.sys_info"]], "averagetfr (class in mne.time_frequency)": [[696, "mne.time_frequency.AverageTFR"]], "__add__() (mne.time_frequency.averagetfr method)": [[696, "mne.time_frequency.AverageTFR.__add__"]], "__contains__() (mne.time_frequency.averagetfr method)": [[696, "mne.time_frequency.AverageTFR.__contains__"]], "__mul__() (mne.time_frequency.averagetfr method)": [[696, "mne.time_frequency.AverageTFR.__mul__"]], "__sub__() (mne.time_frequency.averagetfr method)": [[696, "mne.time_frequency.AverageTFR.__sub__"]], "add_channels() (mne.time_frequency.averagetfr method)": [[696, "mne.time_frequency.AverageTFR.add_channels"]], "add_reference_channels() (mne.time_frequency.averagetfr method)": [[696, "mne.time_frequency.AverageTFR.add_reference_channels"]], "apply_baseline() (mne.time_frequency.averagetfr method)": [[696, "mne.time_frequency.AverageTFR.apply_baseline"]], "ch_names (mne.time_frequency.averagetfr property)": [[696, "mne.time_frequency.AverageTFR.ch_names"]], "compensation_grade (mne.time_frequency.averagetfr property)": [[696, "mne.time_frequency.AverageTFR.compensation_grade"]], "copy() (mne.time_frequency.averagetfr method)": [[696, "mne.time_frequency.AverageTFR.copy"]], "crop() (mne.time_frequency.averagetfr method)": [[696, "mne.time_frequency.AverageTFR.crop"]], "decimate() (mne.time_frequency.averagetfr method)": [[696, "mne.time_frequency.AverageTFR.decimate"]], "drop_channels() (mne.time_frequency.averagetfr method)": [[696, "mne.time_frequency.AverageTFR.drop_channels"]], "get_channel_types() (mne.time_frequency.averagetfr method)": [[696, "mne.time_frequency.AverageTFR.get_channel_types"]], "pick() (mne.time_frequency.averagetfr method)": [[696, "mne.time_frequency.AverageTFR.pick"]], "pick_channels() (mne.time_frequency.averagetfr method)": [[696, "mne.time_frequency.AverageTFR.pick_channels"]], "pick_types() (mne.time_frequency.averagetfr method)": [[696, "mne.time_frequency.AverageTFR.pick_types"]], "plot() (mne.time_frequency.averagetfr method)": [[696, "mne.time_frequency.AverageTFR.plot"]], "plot_joint() (mne.time_frequency.averagetfr method)": [[696, "mne.time_frequency.AverageTFR.plot_joint"]], "plot_topo() (mne.time_frequency.averagetfr method)": [[696, "mne.time_frequency.AverageTFR.plot_topo"]], "plot_topomap() (mne.time_frequency.averagetfr method)": [[696, "mne.time_frequency.AverageTFR.plot_topomap"]], "reorder_channels() (mne.time_frequency.averagetfr method)": [[696, "mne.time_frequency.AverageTFR.reorder_channels"]], "save() (mne.time_frequency.averagetfr method)": [[696, "mne.time_frequency.AverageTFR.save"]], "shift_time() (mne.time_frequency.averagetfr method)": [[696, "mne.time_frequency.AverageTFR.shift_time"]], "time_as_index() (mne.time_frequency.averagetfr method)": [[696, "mne.time_frequency.AverageTFR.time_as_index"]], "times (mne.time_frequency.averagetfr property)": [[696, "mne.time_frequency.AverageTFR.times"]], "tmax (mne.time_frequency.averagetfr property)": [[696, "mne.time_frequency.AverageTFR.tmax"]], "tmin (mne.time_frequency.averagetfr property)": [[696, "mne.time_frequency.AverageTFR.tmin"]], "to_data_frame() (mne.time_frequency.averagetfr method)": [[696, "mne.time_frequency.AverageTFR.to_data_frame"]], "crossspectraldensity (class in mne.time_frequency)": [[697, "mne.time_frequency.CrossSpectralDensity"]], "__getitem__() (mne.time_frequency.crossspectraldensity method)": [[697, "mne.time_frequency.CrossSpectralDensity.__getitem__"]], "__len__() (mne.time_frequency.crossspectraldensity method)": [[697, "mne.time_frequency.CrossSpectralDensity.__len__"]], "copy() (mne.time_frequency.crossspectraldensity method)": [[697, "mne.time_frequency.CrossSpectralDensity.copy"]], "get_data() (mne.time_frequency.crossspectraldensity method)": [[697, "mne.time_frequency.CrossSpectralDensity.get_data"]], "mean() (mne.time_frequency.crossspectraldensity method)": [[697, "mne.time_frequency.CrossSpectralDensity.mean"]], "n_channels (mne.time_frequency.crossspectraldensity property)": [[697, "mne.time_frequency.CrossSpectralDensity.n_channels"]], "pick_channels() (mne.time_frequency.crossspectraldensity method)": [[697, "mne.time_frequency.CrossSpectralDensity.pick_channels"]], "pick_frequency() (mne.time_frequency.crossspectraldensity method)": [[697, "mne.time_frequency.CrossSpectralDensity.pick_frequency"]], "plot() (mne.time_frequency.crossspectraldensity method)": [[697, "mne.time_frequency.CrossSpectralDensity.plot"]], "save() (mne.time_frequency.crossspectraldensity method)": [[697, "mne.time_frequency.CrossSpectralDensity.save"]], "sum() (mne.time_frequency.crossspectraldensity method)": [[697, "mne.time_frequency.CrossSpectralDensity.sum"]], "epochsspectrum (class in mne.time_frequency)": [[698, "mne.time_frequency.EpochsSpectrum"]], "__contains__() (mne.time_frequency.epochsspectrum method)": [[698, "mne.time_frequency.EpochsSpectrum.__contains__"]], "__getitem__() (mne.time_frequency.epochsspectrum method)": [[698, "mne.time_frequency.EpochsSpectrum.__getitem__"]], "__iter__() (mne.time_frequency.epochsspectrum method)": [[698, "mne.time_frequency.EpochsSpectrum.__iter__"]], "__len__() (mne.time_frequency.epochsspectrum method)": [[698, "mne.time_frequency.EpochsSpectrum.__len__"]], "add_channels() (mne.time_frequency.epochsspectrum method)": [[698, "mne.time_frequency.EpochsSpectrum.add_channels"]], "add_reference_channels() (mne.time_frequency.epochsspectrum method)": [[698, "mne.time_frequency.EpochsSpectrum.add_reference_channels"]], "average() (mne.time_frequency.epochsspectrum method)": [[698, "mne.time_frequency.EpochsSpectrum.average"]], "compensation_grade (mne.time_frequency.epochsspectrum property)": [[698, "mne.time_frequency.EpochsSpectrum.compensation_grade"]], "copy() (mne.time_frequency.epochsspectrum method)": [[698, "mne.time_frequency.EpochsSpectrum.copy"]], "drop_channels() (mne.time_frequency.epochsspectrum method)": [[698, "mne.time_frequency.EpochsSpectrum.drop_channels"]], "get_channel_types() (mne.time_frequency.epochsspectrum method)": [[698, "mne.time_frequency.EpochsSpectrum.get_channel_types"]], "get_data() (mne.time_frequency.epochsspectrum method)": [[698, "mne.time_frequency.EpochsSpectrum.get_data"]], "metadata (mne.time_frequency.epochsspectrum property)": [[698, "mne.time_frequency.EpochsSpectrum.metadata"]], "next() (mne.time_frequency.epochsspectrum method)": [[698, "mne.time_frequency.EpochsSpectrum.next"]], "pick() (mne.time_frequency.epochsspectrum method)": [[698, "mne.time_frequency.EpochsSpectrum.pick"]], "pick_channels() (mne.time_frequency.epochsspectrum method)": [[698, "mne.time_frequency.EpochsSpectrum.pick_channels"]], "pick_types() (mne.time_frequency.epochsspectrum method)": [[698, "mne.time_frequency.EpochsSpectrum.pick_types"]], "plot() (mne.time_frequency.epochsspectrum method)": [[698, "mne.time_frequency.EpochsSpectrum.plot"]], "plot_topo() (mne.time_frequency.epochsspectrum method)": [[698, "mne.time_frequency.EpochsSpectrum.plot_topo"]], "plot_topomap() (mne.time_frequency.epochsspectrum method)": [[698, "mne.time_frequency.EpochsSpectrum.plot_topomap"]], "reorder_channels() (mne.time_frequency.epochsspectrum method)": [[698, "mne.time_frequency.EpochsSpectrum.reorder_channels"]], "save() (mne.time_frequency.epochsspectrum method)": [[698, "mne.time_frequency.EpochsSpectrum.save"]], "to_data_frame() (mne.time_frequency.epochsspectrum method)": [[698, "mne.time_frequency.EpochsSpectrum.to_data_frame"]], "units() (mne.time_frequency.epochsspectrum method)": [[698, "mne.time_frequency.EpochsSpectrum.units"]], "epochstfr (class in mne.time_frequency)": [[699, "mne.time_frequency.EpochsTFR"]], "__contains__() (mne.time_frequency.epochstfr method)": [[699, "mne.time_frequency.EpochsTFR.__contains__"]], "__getitem__() (mne.time_frequency.epochstfr method)": [[699, "mne.time_frequency.EpochsTFR.__getitem__"]], "__iter__() (mne.time_frequency.epochstfr method)": [[699, "mne.time_frequency.EpochsTFR.__iter__"]], "__len__() (mne.time_frequency.epochstfr method)": [[699, "mne.time_frequency.EpochsTFR.__len__"]], "add_channels() (mne.time_frequency.epochstfr method)": [[699, "mne.time_frequency.EpochsTFR.add_channels"]], "add_reference_channels() (mne.time_frequency.epochstfr method)": [[699, "mne.time_frequency.EpochsTFR.add_reference_channels"]], "apply_baseline() (mne.time_frequency.epochstfr method)": [[699, "mne.time_frequency.EpochsTFR.apply_baseline"]], "average() (mne.time_frequency.epochstfr method)": [[699, "mne.time_frequency.EpochsTFR.average"]], "ch_names (mne.time_frequency.epochstfr property)": [[699, "mne.time_frequency.EpochsTFR.ch_names"]], "compensation_grade (mne.time_frequency.epochstfr property)": [[699, "mne.time_frequency.EpochsTFR.compensation_grade"]], "copy() (mne.time_frequency.epochstfr method)": [[699, "mne.time_frequency.EpochsTFR.copy"]], "crop() (mne.time_frequency.epochstfr method)": [[699, "mne.time_frequency.EpochsTFR.crop"]], "decimate() (mne.time_frequency.epochstfr method)": [[699, "mne.time_frequency.EpochsTFR.decimate"]], "drop_channels() (mne.time_frequency.epochstfr method)": [[699, "mne.time_frequency.EpochsTFR.drop_channels"]], "get_channel_types() (mne.time_frequency.epochstfr method)": [[699, "mne.time_frequency.EpochsTFR.get_channel_types"]], "metadata (mne.time_frequency.epochstfr property)": [[699, "mne.time_frequency.EpochsTFR.metadata"]], "next() (mne.time_frequency.epochstfr method)": [[699, "mne.time_frequency.EpochsTFR.next"]], "pick() (mne.time_frequency.epochstfr method)": [[699, "mne.time_frequency.EpochsTFR.pick"]], "pick_channels() (mne.time_frequency.epochstfr method)": [[699, "mne.time_frequency.EpochsTFR.pick_channels"]], "pick_types() (mne.time_frequency.epochstfr method)": [[699, "mne.time_frequency.EpochsTFR.pick_types"]], "reorder_channels() (mne.time_frequency.epochstfr method)": [[699, "mne.time_frequency.EpochsTFR.reorder_channels"]], "save() (mne.time_frequency.epochstfr method)": [[699, "mne.time_frequency.EpochsTFR.save"]], "shift_time() (mne.time_frequency.epochstfr method)": [[699, "mne.time_frequency.EpochsTFR.shift_time"]], "time_as_index() (mne.time_frequency.epochstfr method)": [[699, "mne.time_frequency.EpochsTFR.time_as_index"]], "times (mne.time_frequency.epochstfr property)": [[699, "mne.time_frequency.EpochsTFR.times"]], "tmax (mne.time_frequency.epochstfr property)": [[699, "mne.time_frequency.EpochsTFR.tmax"]], "tmin (mne.time_frequency.epochstfr property)": [[699, "mne.time_frequency.EpochsTFR.tmin"]], "to_data_frame() (mne.time_frequency.epochstfr method)": [[699, "mne.time_frequency.EpochsTFR.to_data_frame"]], "spectrum (class in mne.time_frequency)": [[700, "mne.time_frequency.Spectrum"]], "__contains__() (mne.time_frequency.spectrum method)": [[700, "mne.time_frequency.Spectrum.__contains__"]], "__getitem__() (mne.time_frequency.spectrum method)": [[700, "mne.time_frequency.Spectrum.__getitem__"]], "add_channels() (mne.time_frequency.spectrum method)": [[700, "mne.time_frequency.Spectrum.add_channels"]], "add_reference_channels() (mne.time_frequency.spectrum method)": [[700, "mne.time_frequency.Spectrum.add_reference_channels"]], "compensation_grade (mne.time_frequency.spectrum property)": [[700, "mne.time_frequency.Spectrum.compensation_grade"]], "copy() (mne.time_frequency.spectrum method)": [[700, "mne.time_frequency.Spectrum.copy"]], "drop_channels() (mne.time_frequency.spectrum method)": [[700, "mne.time_frequency.Spectrum.drop_channels"]], "get_channel_types() (mne.time_frequency.spectrum method)": [[700, "mne.time_frequency.Spectrum.get_channel_types"]], "get_data() (mne.time_frequency.spectrum method)": [[700, "mne.time_frequency.Spectrum.get_data"]], "pick() (mne.time_frequency.spectrum method)": [[700, "mne.time_frequency.Spectrum.pick"]], "pick_channels() (mne.time_frequency.spectrum method)": [[700, "mne.time_frequency.Spectrum.pick_channels"]], "pick_types() (mne.time_frequency.spectrum method)": [[700, "mne.time_frequency.Spectrum.pick_types"]], "plot() (mne.time_frequency.spectrum method)": [[700, "mne.time_frequency.Spectrum.plot"]], "plot_topo() (mne.time_frequency.spectrum method)": [[700, "mne.time_frequency.Spectrum.plot_topo"]], "plot_topomap() (mne.time_frequency.spectrum method)": [[700, "mne.time_frequency.Spectrum.plot_topomap"]], "reorder_channels() (mne.time_frequency.spectrum method)": [[700, "mne.time_frequency.Spectrum.reorder_channels"]], "save() (mne.time_frequency.spectrum method)": [[700, "mne.time_frequency.Spectrum.save"]], "to_data_frame() (mne.time_frequency.spectrum method)": [[700, "mne.time_frequency.Spectrum.to_data_frame"]], "units() (mne.time_frequency.spectrum method)": [[700, "mne.time_frequency.Spectrum.units"]], "csd_array_fourier() (in module mne.time_frequency)": [[701, "mne.time_frequency.csd_array_fourier"]], "csd_array_morlet() (in module mne.time_frequency)": [[702, "mne.time_frequency.csd_array_morlet"]], "csd_array_multitaper() (in module mne.time_frequency)": [[703, "mne.time_frequency.csd_array_multitaper"]], "csd_fourier() (in module mne.time_frequency)": [[704, "mne.time_frequency.csd_fourier"]], "csd_morlet() (in module mne.time_frequency)": [[705, "mne.time_frequency.csd_morlet"]], "csd_multitaper() (in module mne.time_frequency)": [[706, "mne.time_frequency.csd_multitaper"]], "csd_tfr() (in module mne.time_frequency)": [[707, "mne.time_frequency.csd_tfr"]], "dpss_windows() (in module mne.time_frequency)": [[708, "mne.time_frequency.dpss_windows"]], "fit_iir_model_raw() (in module mne.time_frequency)": [[709, "mne.time_frequency.fit_iir_model_raw"]], "fwhm() (in module mne.time_frequency)": [[710, "mne.time_frequency.fwhm"]], "istft() (in module mne.time_frequency)": [[711, "mne.time_frequency.istft"]], "morlet() (in module mne.time_frequency)": [[712, "mne.time_frequency.morlet"]], "pick_channels_csd() (in module mne.time_frequency)": [[713, "mne.time_frequency.pick_channels_csd"]], "psd_array_multitaper() (in module mne.time_frequency)": [[714, "mne.time_frequency.psd_array_multitaper"]], "psd_array_welch() (in module mne.time_frequency)": [[715, "mne.time_frequency.psd_array_welch"]], "read_csd() (in module mne.time_frequency)": [[716, "mne.time_frequency.read_csd"]], "read_spectrum() (in module mne.time_frequency)": [[717, "mne.time_frequency.read_spectrum"]], "read_tfrs() (in module mne.time_frequency)": [[718, "mne.time_frequency.read_tfrs"]], "stft() (in module mne.time_frequency)": [[719, "mne.time_frequency.stft"]], "stftfreq() (in module mne.time_frequency)": [[720, "mne.time_frequency.stftfreq"]], "cwt() (in module mne.time_frequency.tfr)": [[721, "mne.time_frequency.tfr.cwt"]], "morlet() (in module mne.time_frequency.tfr)": [[722, "mne.time_frequency.tfr.morlet"]], "tfr_array_morlet() (in module mne.time_frequency)": [[723, "mne.time_frequency.tfr_array_morlet"]], "tfr_array_multitaper() (in module mne.time_frequency)": [[724, "mne.time_frequency.tfr_array_multitaper"]], "tfr_array_stockwell() (in module mne.time_frequency)": [[725, "mne.time_frequency.tfr_array_stockwell"]], "tfr_morlet() (in module mne.time_frequency)": [[726, "mne.time_frequency.tfr_morlet"]], "tfr_multitaper() (in module mne.time_frequency)": [[727, "mne.time_frequency.tfr_multitaper"]], "tfr_stockwell() (in module mne.time_frequency)": [[728, "mne.time_frequency.tfr_stockwell"]], "write_tfrs() (in module mne.time_frequency)": [[729, "mne.time_frequency.write_tfrs"]], "transform_surface_to() (in module mne)": [[730, "mne.transform_surface_to"]], "transform (class in mne.transforms)": [[731, "mne.transforms.Transform"]], "__contains__() (mne.transforms.transform method)": [[731, "mne.transforms.Transform.__contains__"]], "__getitem__() (mne.transforms.transform method)": [[731, "mne.transforms.Transform.__getitem__"]], "__iter__() (mne.transforms.transform method)": [[731, "mne.transforms.Transform.__iter__"]], "__len__() (mne.transforms.transform method)": [[731, "mne.transforms.Transform.__len__"]], "clear() (mne.transforms.transform method)": [[731, "mne.transforms.Transform.clear"]], "copy() (mne.transforms.transform method)": [[731, "mne.transforms.Transform.copy"]], "from_str (mne.transforms.transform property)": [[731, "mne.transforms.Transform.from_str"]], "fromkeys() (mne.transforms.transform method)": [[731, "mne.transforms.Transform.fromkeys"]], "get() (mne.transforms.transform method)": [[731, "mne.transforms.Transform.get"]], "items() (mne.transforms.transform method)": [[731, "mne.transforms.Transform.items"]], "keys() (mne.transforms.transform method)": [[731, "mne.transforms.Transform.keys"]], "pop() (mne.transforms.transform method)": [[731, "mne.transforms.Transform.pop"]], "popitem() (mne.transforms.transform method)": [[731, "mne.transforms.Transform.popitem"]], "save() (mne.transforms.transform method)": [[731, "mne.transforms.Transform.save"]], "setdefault() (mne.transforms.transform method)": [[731, "mne.transforms.Transform.setdefault"]], "to_str (mne.transforms.transform property)": [[731, "mne.transforms.Transform.to_str"]], "update() (mne.transforms.transform method)": [[731, "mne.transforms.Transform.update"]], "values() (mne.transforms.transform method)": [[731, "mne.transforms.Transform.values"]], "apply_volume_registration() (in module mne.transforms)": [[732, "mne.transforms.apply_volume_registration"]], "compute_volume_registration() (in module mne.transforms)": [[733, "mne.transforms.compute_volume_registration"]], "quat_to_rot() (in module mne.transforms)": [[734, "mne.transforms.quat_to_rot"]], "read_ras_mni_t() (in module mne.transforms)": [[735, "mne.transforms.read_ras_mni_t"]], "rot_to_quat() (in module mne.transforms)": [[736, "mne.transforms.rot_to_quat"]], "use_coil_def() (in module mne)": [[737, "mne.use_coil_def"]], "use_log_level (class in mne)": [[738, "mne.use_log_level"]], "deprecated (class in mne.utils)": [[739, "mne.utils.deprecated"]], "warn() (in module mne.utils)": [[740, "mne.utils.warn"]], "verbose() (in module mne)": [[741, "mne.verbose"]], "vertex_to_mni() (in module mne)": [[742, "mne.vertex_to_mni"]], "brain (class in mne.viz)": [[743, "mne.viz.Brain"]], "add_annotation() (mne.viz.brain method)": [[743, "mne.viz.Brain.add_annotation"]], "add_data() (mne.viz.brain method)": [[743, "mne.viz.Brain.add_data"]], "add_dipole() (mne.viz.brain method)": [[743, "mne.viz.Brain.add_dipole"]], "add_foci() (mne.viz.brain method)": [[743, "mne.viz.Brain.add_foci"]], "add_forward() (mne.viz.brain method)": [[743, "mne.viz.Brain.add_forward"]], "add_head() (mne.viz.brain method)": [[743, "mne.viz.Brain.add_head"]], "add_label() (mne.viz.brain method)": [[743, "mne.viz.Brain.add_label"]], "add_sensors() (mne.viz.brain method)": [[743, "mne.viz.Brain.add_sensors"]], "add_skull() (mne.viz.brain method)": [[743, "mne.viz.Brain.add_skull"]], "add_text() (mne.viz.brain method)": [[743, "mne.viz.Brain.add_text"]], "add_volume_labels() (mne.viz.brain method)": [[743, "mne.viz.Brain.add_volume_labels"]], "apply_auto_scaling() (mne.viz.brain method)": [[743, "mne.viz.Brain.apply_auto_scaling"]], "clear_glyphs() (mne.viz.brain method)": [[743, "mne.viz.Brain.clear_glyphs"]], "close() (mne.viz.brain method)": [[743, "mne.viz.Brain.close"]], "data (mne.viz.brain property)": [[743, "mne.viz.Brain.data"]], "get_picked_points() (mne.viz.brain method)": [[743, "mne.viz.Brain.get_picked_points"]], "get_view() (mne.viz.brain method)": [[743, "mne.viz.Brain.get_view"]], "help() (mne.viz.brain method)": [[743, "mne.viz.Brain.help"]], "interaction (mne.viz.brain property)": [[743, "mne.viz.Brain.interaction"]], "plot_time_course() (mne.viz.brain method)": [[743, "mne.viz.Brain.plot_time_course"]], "plot_time_line() (mne.viz.brain method)": [[743, "mne.viz.Brain.plot_time_line"]], "remove_annotations() (mne.viz.brain method)": [[743, "mne.viz.Brain.remove_annotations"]], "remove_data() (mne.viz.brain method)": [[743, "mne.viz.Brain.remove_data"]], "remove_dipole() (mne.viz.brain method)": [[743, "mne.viz.Brain.remove_dipole"]], "remove_forward() (mne.viz.brain method)": [[743, "mne.viz.Brain.remove_forward"]], "remove_head() (mne.viz.brain method)": [[743, "mne.viz.Brain.remove_head"]], "remove_labels() (mne.viz.brain method)": [[743, "mne.viz.Brain.remove_labels"]], "remove_sensors() (mne.viz.brain method)": [[743, "mne.viz.Brain.remove_sensors"]], "remove_skull() (mne.viz.brain method)": [[743, "mne.viz.Brain.remove_skull"]], "remove_text() (mne.viz.brain method)": [[743, "mne.viz.Brain.remove_text"]], "remove_volume_labels() (mne.viz.brain method)": [[743, "mne.viz.Brain.remove_volume_labels"]], "reset() (mne.viz.brain method)": [[743, "mne.viz.Brain.reset"]], "reset_view() (mne.viz.brain method)": [[743, "mne.viz.Brain.reset_view"]], "restore_user_scaling() (mne.viz.brain method)": [[743, "mne.viz.Brain.restore_user_scaling"]], "save_image() (mne.viz.brain method)": [[743, "mne.viz.Brain.save_image"]], "save_movie() (mne.viz.brain method)": [[743, "mne.viz.Brain.save_movie"]], "screenshot() (mne.viz.brain method)": [[743, "mne.viz.Brain.screenshot"]], "set_data_smoothing() (mne.viz.brain method)": [[743, "mne.viz.Brain.set_data_smoothing"]], "set_playback_speed() (mne.viz.brain method)": [[743, "mne.viz.Brain.set_playback_speed"]], "set_time() (mne.viz.brain method)": [[743, "mne.viz.Brain.set_time"]], "set_time_interpolation() (mne.viz.brain method)": [[743, "mne.viz.Brain.set_time_interpolation"]], "set_time_point() (mne.viz.brain method)": [[743, "mne.viz.Brain.set_time_point"]], "setup_time_viewer() (mne.viz.brain method)": [[743, "mne.viz.Brain.setup_time_viewer"]], "show() (mne.viz.brain method)": [[743, "mne.viz.Brain.show"]], "show_view() (mne.viz.brain method)": [[743, "mne.viz.Brain.show_view"]], "time_interpolation (mne.viz.brain property)": [[743, "mne.viz.Brain.time_interpolation"]], "toggle_interface() (mne.viz.brain method)": [[743, "mne.viz.Brain.toggle_interface"]], "toggle_playback() (mne.viz.brain method)": [[743, "mne.viz.Brain.toggle_playback"]], "update_lut() (mne.viz.brain method)": [[743, "mne.viz.Brain.update_lut"]], "clickableimage (class in mne.viz)": [[744, "mne.viz.ClickableImage"]], "onclick() (mne.viz.clickableimage method)": [[744, "mne.viz.ClickableImage.onclick"]], "plot_clicks() (mne.viz.clickableimage method)": [[744, "mne.viz.ClickableImage.plot_clicks"]], "to_layout() (mne.viz.clickableimage method)": [[744, "mne.viz.ClickableImage.to_layout"]], "figure3d (class in mne.viz)": [[745, "mne.viz.Figure3D"]], "plotter (mne.viz.figure3d property)": [[745, "mne.viz.Figure3D.plotter"]], "add_background_image() (in module mne.viz)": [[746, "mne.viz.add_background_image"]], "centers_to_edges() (in module mne.viz)": [[747, "mne.viz.centers_to_edges"]], "circular_layout() (in module mne.viz)": [[748, "mne.viz.circular_layout"]], "close_3d_figure() (in module mne.viz)": [[749, "mne.viz.close_3d_figure"]], "close_all_3d_figures() (in module mne.viz)": [[750, "mne.viz.close_all_3d_figures"]], "compare_fiff() (in module mne.viz)": [[751, "mne.viz.compare_fiff"]], "create_3d_figure() (in module mne.viz)": [[752, "mne.viz.create_3d_figure"]], "get_3d_backend() (in module mne.viz)": [[753, "mne.viz.get_3d_backend"]], "get_brain_class() (in module mne.viz)": [[754, "mne.viz.get_brain_class"]], "get_browser_backend() (in module mne.viz)": [[755, "mne.viz.get_browser_backend"]], "iter_topography() (in module mne.viz)": [[756, "mne.viz.iter_topography"]], "link_brains() (in module mne.viz)": [[757, "mne.viz.link_brains"]], "mne_analyze_colormap() (in module mne.viz)": [[758, "mne.viz.mne_analyze_colormap"]], "plot_alignment() (in module mne.viz)": [[759, "mne.viz.plot_alignment"]], "plot_arrowmap() (in module mne.viz)": [[760, "mne.viz.plot_arrowmap"]], "plot_bem() (in module mne.viz)": [[761, "mne.viz.plot_bem"]], "plot_brain_colorbar() (in module mne.viz)": [[762, "mne.viz.plot_brain_colorbar"]], "plot_bridged_electrodes() (in module mne.viz)": [[763, "mne.viz.plot_bridged_electrodes"]], "plot_ch_adjacency() (in module mne.viz)": [[764, "mne.viz.plot_ch_adjacency"]], "plot_channel_labels_circle() (in module mne.viz)": [[765, "mne.viz.plot_channel_labels_circle"]], "plot_chpi_snr() (in module mne.viz)": [[766, "mne.viz.plot_chpi_snr"]], "plot_compare_evokeds() (in module mne.viz)": [[767, "mne.viz.plot_compare_evokeds"]], "plot_cov() (in module mne.viz)": [[768, "mne.viz.plot_cov"]], "plot_csd() (in module mne.viz)": [[769, "mne.viz.plot_csd"]], "plot_dipole_amplitudes() (in module mne.viz)": [[770, "mne.viz.plot_dipole_amplitudes"]], "plot_dipole_locations() (in module mne.viz)": [[771, "mne.viz.plot_dipole_locations"]], "plot_drop_log() (in module mne.viz)": [[772, "mne.viz.plot_drop_log"]], "plot_epochs() (in module mne.viz)": [[773, "mne.viz.plot_epochs"]], "plot_epochs_image() (in module mne.viz)": [[774, "mne.viz.plot_epochs_image"]], "plot_epochs_psd_topomap() (in module mne.viz)": [[775, "mne.viz.plot_epochs_psd_topomap"]], "plot_events() (in module mne.viz)": [[776, "mne.viz.plot_events"]], "plot_evoked() (in module mne.viz)": [[777, "mne.viz.plot_evoked"]], "plot_evoked_field() (in module mne.viz)": [[778, "mne.viz.plot_evoked_field"]], "plot_evoked_image() (in module mne.viz)": [[779, "mne.viz.plot_evoked_image"]], "plot_evoked_joint() (in module mne.viz)": [[780, "mne.viz.plot_evoked_joint"]], "plot_evoked_topo() (in module mne.viz)": [[781, "mne.viz.plot_evoked_topo"]], "plot_evoked_topomap() (in module mne.viz)": [[782, "mne.viz.plot_evoked_topomap"]], "plot_evoked_white() (in module mne.viz)": [[783, "mne.viz.plot_evoked_white"]], "plot_filter() (in module mne.viz)": [[784, "mne.viz.plot_filter"]], "plot_head_positions() (in module mne.viz)": [[785, "mne.viz.plot_head_positions"]], "plot_ica_components() (in module mne.viz)": [[786, "mne.viz.plot_ica_components"]], "plot_ica_overlay() (in module mne.viz)": [[787, "mne.viz.plot_ica_overlay"]], "plot_ica_properties() (in module mne.viz)": [[788, "mne.viz.plot_ica_properties"]], "plot_ica_scores() (in module mne.viz)": [[789, "mne.viz.plot_ica_scores"]], "plot_ica_sources() (in module mne.viz)": [[790, "mne.viz.plot_ica_sources"]], "plot_ideal_filter() (in module mne.viz)": [[791, "mne.viz.plot_ideal_filter"]], "plot_layout() (in module mne.viz)": [[792, "mne.viz.plot_layout"]], "plot_montage() (in module mne.viz)": [[793, "mne.viz.plot_montage"]], "plot_projs_joint() (in module mne.viz)": [[794, "mne.viz.plot_projs_joint"]], "plot_projs_topomap() (in module mne.viz)": [[795, "mne.viz.plot_projs_topomap"]], "plot_raw() (in module mne.viz)": [[796, "mne.viz.plot_raw"]], "plot_raw_psd() (in module mne.viz)": [[797, "mne.viz.plot_raw_psd"]], "plot_regression_weights() (in module mne.viz)": [[798, "mne.viz.plot_regression_weights"]], "plot_sensors() (in module mne.viz)": [[799, "mne.viz.plot_sensors"]], "plot_snr_estimate() (in module mne.viz)": [[800, "mne.viz.plot_snr_estimate"]], "plot_source_estimates() (in module mne.viz)": [[801, "mne.viz.plot_source_estimates"]], "plot_sparse_source_estimates() (in module mne.viz)": [[802, "mne.viz.plot_sparse_source_estimates"]], "plot_tfr_topomap() (in module mne.viz)": [[803, "mne.viz.plot_tfr_topomap"]], "plot_topo_image_epochs() (in module mne.viz)": [[804, "mne.viz.plot_topo_image_epochs"]], "plot_topomap() (in module mne.viz)": [[805, "mne.viz.plot_topomap"]], "plot_vector_source_estimates() (in module mne.viz)": [[806, "mne.viz.plot_vector_source_estimates"]], "plot_volume_source_estimates() (in module mne.viz)": [[807, "mne.viz.plot_volume_source_estimates"]], "set_3d_backend() (in module mne.viz)": [[808, "mne.viz.set_3d_backend"]], "set_3d_options() (in module mne.viz)": [[809, "mne.viz.set_3d_options"]], "set_3d_title() (in module mne.viz)": [[810, "mne.viz.set_3d_title"]], "set_3d_view() (in module mne.viz)": [[811, "mne.viz.set_3d_view"]], "set_browser_backend() (in module mne.viz)": [[812, "mne.viz.set_browser_backend"]], "snapshot_brain_montage() (in module mne.viz)": [[813, "mne.viz.snapshot_brain_montage"]], "use_3d_backend() (in module mne.viz)": [[814, "mne.viz.use_3d_backend"]], "use_browser_backend() (in module mne.viz)": [[815, "mne.viz.use_browser_backend"]], "warp_montage_volume() (in module mne)": [[816, "mne.warp_montage_volume"]], "what() (in module mne)": [[817, "mne.what"]], "write_bem_solution() (in module mne)": [[818, "mne.write_bem_solution"]], "write_bem_surfaces() (in module mne)": [[819, "mne.write_bem_surfaces"]], "write_cov() (in module mne)": [[820, "mne.write_cov"]], "write_events() (in module mne)": [[821, "mne.write_events"]], "write_evokeds() (in module mne)": [[822, "mne.write_evokeds"]], "write_forward_solution() (in module mne)": [[823, "mne.write_forward_solution"]], "write_head_bem() (in module mne)": [[824, "mne.write_head_bem"]], "write_label() (in module mne)": [[825, "mne.write_label"]], "write_labels_to_annot() (in module mne)": [[826, "mne.write_labels_to_annot"]], "write_proj() (in module mne)": [[827, "mne.write_proj"]], "write_source_spaces() (in module mne)": [[828, "mne.write_source_spaces"]], "write_surface() (in module mne)": [[829, "mne.write_surface"]], "write_trans() (in module mne)": [[830, "mne.write_trans"]], "bem": [[831, "term-BEM"]], "dc": [[831, "term-DC"]], "dics": [[831, "term-DICS"]], "ecd": [[831, "term-ECD"]], "freesurfer lut": [[831, "term-FreeSurfer-LUT"]], "gfp": [[831, "term-GFP"]], "hed": [[831, "term-HED"]], "hpi": [[831, "term-HPI"]], "lcmv": [[831, "term-LCMV"]], "lcmv beamformer": [[831, "term-LCMV-beamformer"]], "lut": [[831, "term-LUT"]], "mne": [[831, "term-MNE"], [866, "module-mne"]], "opm": [[831, "term-OPM"]], "ras": [[831, "term-RAS"]], "roi": [[831, "term-ROI"]], "squid": [[831, "term-SQUID"]], "ssp": [[831, "term-SSP"]], "stc": [[831, "term-STC"]], "anatomical landmark": [[831, "term-anatomical-landmark"]], "annotations": [[831, "term-annotations"]], "beamformer": [[831, "term-beamformer"]], "boundary element method": [[831, "term-boundary-element-method"]], "boundary element model": [[831, "term-boundary-element-model"]], "chpi": [[831, "term-cHPI"]], "channels": [[831, "term-channels"]], "dspm": [[831, "term-dSPM"]], "data channels": [[831, "term-data-channels"]], "digitization": [[831, "term-digitization"]], "dipole": [[831, "term-dipole"]], "direct current": [[831, "term-direct-current"]], "dynamic imaging of coherent sources": [[831, "term-dynamic-imaging-of-coherent-sources"]], "dynamic statistical parametric mapping": [[831, "term-dynamic-statistical-parametric-mapping"]], "eloreta": [[831, "term-eLORETA"]], "epochs": [[831, "term-epochs"]], "equivalent current dipole": [[831, "term-equivalent-current-dipole"]], "events": [[831, "term-events"]], "evoked": [[831, "term-evoked"]], "fiducial": [[831, "term-fiducial"]], "fiducial point": [[831, "term-fiducial-point"]], "first_samp": [[831, "term-first_samp"]], "forward": [[831, "term-forward"]], "forward solution": [[831, "term-forward-solution"]], "global field power": [[831, "term-global-field-power"]], "head position indicator": [[831, "term-head-position-indicator"]], "hierarchical event descriptors": [[831, "term-hierarchical-event-descriptors"]], "info": [[831, "term-info"]], "inverse": [[831, "term-inverse"]], "inverse operator": [[831, "term-inverse-operator"]], "label": [[831, "term-label"]], "last_samp": [[831, "term-last_samp"]], "layout": [[831, "term-layout"]], "maximum intensity projection": [[831, "term-maximum-intensity-projection"]], "measurement info": [[831, "term-measurement-info"]], "minimum-norm estimate": [[831, "term-minimum-norm-estimate"]], "minimum-norm estimation": [[831, "term-minimum-norm-estimation"]], "montage": [[831, "term-montage"]], "morphing": [[831, "term-morphing"]], "noise covariance": [[831, "term-noise-covariance"]], "optically pumped magnetometer": [[831, "term-optically-pumped-magnetometer"]], "path-like": [[831, "term-path-like"]], "pick": [[831, "term-pick"]], "projector": [[831, "term-projector"]], "raw": [[831, "term-raw"]], "region of interest": [[831, "term-region-of-interest"]], "sloreta": [[831, "term-sLORETA"]], "selection": [[831, "term-selection"]], "source estimate": [[831, "term-source-estimate"]], "source space": [[831, "term-source-space"]], "source time course": [[831, "term-source-time-course"]], "stim channel": [[831, "term-stim-channel"]], "superconducting quantum interference device": [[831, "term-superconducting-quantum-interference-device"]], "template montage": [[831, "term-template-montage"]], "tfr": [[831, "term-tfr"]], "trans": [[831, "term-trans"]], "trigger channel": [[831, "term-trigger-channel"]], "whitening": [[831, "term-whitening"]], "mne.beamformer": [[844, "module-mne.beamformer"]], "mne.dipole": [[844, "module-mne.dipole"]], "mne.inverse_sparse": [[844, "module-mne.inverse_sparse"]], "mne.minimum_norm": [[844, "module-mne.minimum_norm"]], "mne.cuda": [[845, "module-mne.cuda"]], "mne.utils": [[845, "module-mne.utils"]], "mne.channels": [[865, "module-mne.channels"]], "mne.chpi": [[865, "module-mne.chpi"]], "mne.filter": [[865, "module-mne.filter"]], "mne.preprocessing": [[865, "module-mne.preprocessing"]], "mne.preprocessing.ieeg": [[865, "module-mne.preprocessing.ieeg"]], "mne.preprocessing.nirs": [[865, "module-mne.preprocessing.nirs"]], "mne.transforms": [[865, "module-mne.transforms"]], "mne.io": [[867, "module-mne.io"]], "mne.io.kit": [[867, "module-mne.io.kit"]], "mne.baseline": [[870, "module-mne.baseline"]], "mne.simulation": [[871, "module-mne.simulation"]], "mne.simulation.metrics": [[871, "module-mne.simulation.metrics"]], "mne.stats": [[873, "module-mne.stats"]], "mne.time_frequency": [[874, "module-mne.time_frequency"]], "mne.time_frequency.tfr": [[874, "module-mne.time_frequency.tfr"]], "mne.viz": [[875, "module-mne.viz"]]}})