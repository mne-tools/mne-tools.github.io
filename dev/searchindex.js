Search.setIndex({"docnames": ["auto_examples/connectivity/index", "auto_examples/datasets/brainstorm_data", "auto_examples/datasets/hf_sef_data", "auto_examples/datasets/index", "auto_examples/datasets/limo_data", "auto_examples/datasets/opm_data", "auto_examples/datasets/sg_execution_times", "auto_examples/datasets/spm_faces_dataset_sgskip", "auto_examples/decoding/decoding_csp_eeg", "auto_examples/decoding/decoding_csp_timefreq", "auto_examples/decoding/decoding_rsa_sgskip", "auto_examples/decoding/decoding_spatio_temporal_source", "auto_examples/decoding/decoding_spoc_CMC", "auto_examples/decoding/decoding_time_generalization_conditions", "auto_examples/decoding/decoding_unsupervised_spatial_filter", "auto_examples/decoding/decoding_xdawn_eeg", "auto_examples/decoding/ems_filtering", "auto_examples/decoding/index", "auto_examples/decoding/linear_model_patterns", "auto_examples/decoding/receptive_field_mtrf", "auto_examples/decoding/sg_execution_times", "auto_examples/decoding/ssd_spatial_filters", "auto_examples/forward/forward_sensitivity_maps", "auto_examples/forward/index", "auto_examples/forward/left_cerebellum_volume_source", "auto_examples/forward/sg_execution_times", "auto_examples/forward/source_space_morphing", "auto_examples/index", "auto_examples/inverse/compute_mne_inverse_epochs_in_label", "auto_examples/inverse/compute_mne_inverse_raw_in_label", "auto_examples/inverse/compute_mne_inverse_volume", "auto_examples/inverse/custom_inverse_solver", "auto_examples/inverse/dics_epochs", "auto_examples/inverse/dics_source_power", "auto_examples/inverse/evoked_ers_source_power", "auto_examples/inverse/gamma_map_inverse", "auto_examples/inverse/index", "auto_examples/inverse/label_activation_from_stc", "auto_examples/inverse/label_from_stc", "auto_examples/inverse/label_source_activations", "auto_examples/inverse/mixed_norm_inverse", "auto_examples/inverse/mixed_source_space_inverse", "auto_examples/inverse/mne_cov_power", "auto_examples/inverse/morph_surface_stc", "auto_examples/inverse/morph_volume_stc", "auto_examples/inverse/multi_dipole_model", "auto_examples/inverse/multidict_reweighted_tfmxne", "auto_examples/inverse/psf_ctf_label_leakage", "auto_examples/inverse/psf_ctf_vertices", "auto_examples/inverse/psf_ctf_vertices_lcmv", "auto_examples/inverse/psf_volume", "auto_examples/inverse/rap_music", "auto_examples/inverse/read_inverse", "auto_examples/inverse/read_stc", "auto_examples/inverse/resolution_metrics", "auto_examples/inverse/resolution_metrics_eegmeg", "auto_examples/inverse/sg_execution_times", "auto_examples/inverse/snr_estimate", "auto_examples/inverse/source_space_snr", "auto_examples/inverse/time_frequency_mixed_norm_inverse", "auto_examples/inverse/vector_mne_solution", "auto_examples/io/elekta_epochs", "auto_examples/io/index", "auto_examples/io/read_neo_format", "auto_examples/io/read_noise_covariance_matrix", "auto_examples/io/read_xdf", "auto_examples/io/sg_execution_times", "auto_examples/preprocessing/css", "auto_examples/preprocessing/define_target_events", "auto_examples/preprocessing/eeg_bridging", "auto_examples/preprocessing/eeg_csd", "auto_examples/preprocessing/eog_artifact_histogram", "auto_examples/preprocessing/eog_regression", "auto_examples/preprocessing/find_ref_artifacts", "auto_examples/preprocessing/fnirs_artifact_removal", "auto_examples/preprocessing/ica_comparison", "auto_examples/preprocessing/index", "auto_examples/preprocessing/interpolate_bad_channels", "auto_examples/preprocessing/movement_compensation", "auto_examples/preprocessing/movement_detection", "auto_examples/preprocessing/muscle_detection", "auto_examples/preprocessing/muscle_ica", "auto_examples/preprocessing/otp", "auto_examples/preprocessing/sg_execution_times", "auto_examples/preprocessing/shift_evoked", "auto_examples/preprocessing/virtual_evoked", "auto_examples/preprocessing/xdawn_denoising", "auto_examples/simulation/index", "auto_examples/simulation/plot_stc_metrics", "auto_examples/simulation/sg_execution_times", "auto_examples/simulation/simulate_evoked_data", "auto_examples/simulation/simulate_raw_data", "auto_examples/simulation/simulated_raw_data_using_subject_anatomy", "auto_examples/simulation/source_simulator", "auto_examples/stats/cluster_stats_evoked", "auto_examples/stats/fdr_stats_evoked", "auto_examples/stats/index", "auto_examples/stats/linear_regression_raw", "auto_examples/stats/sensor_permutation_test", "auto_examples/stats/sensor_regression", "auto_examples/stats/sg_execution_times", "auto_examples/time_frequency/compute_csd", "auto_examples/time_frequency/compute_source_psd_epochs", "auto_examples/time_frequency/index", "auto_examples/time_frequency/sg_execution_times", "auto_examples/time_frequency/source_label_time_frequency", "auto_examples/time_frequency/source_power_spectrum", "auto_examples/time_frequency/source_power_spectrum_opm", "auto_examples/time_frequency/source_space_time_frequency", "auto_examples/time_frequency/temporal_whitening", "auto_examples/time_frequency/time_frequency_erds", "auto_examples/time_frequency/time_frequency_global_field_power", "auto_examples/time_frequency/time_frequency_simulated", "auto_examples/visualization/3d_to_2d", "auto_examples/visualization/brain", "auto_examples/visualization/channel_epochs_image", "auto_examples/visualization/eeg_on_scalp", "auto_examples/visualization/evoked_arrowmap", "auto_examples/visualization/evoked_topomap", "auto_examples/visualization/evoked_whitening", "auto_examples/visualization/index", "auto_examples/visualization/meg_sensors", "auto_examples/visualization/mne_helmet", "auto_examples/visualization/montage_sgskip", "auto_examples/visualization/parcellation", "auto_examples/visualization/publication_figure", "auto_examples/visualization/roi_erpimage_by_rt", "auto_examples/visualization/sensor_noise_level", "auto_examples/visualization/sg_execution_times", "auto_examples/visualization/ssp_projs_sensitivity_map", "auto_examples/visualization/topo_compare_conditions", "auto_examples/visualization/topo_customized", "auto_examples/visualization/xhemi", "auto_tutorials/clinical/10_ieeg_localize", "auto_tutorials/clinical/20_seeg", "auto_tutorials/clinical/30_ecog", "auto_tutorials/clinical/60_sleep", "auto_tutorials/clinical/index", "auto_tutorials/clinical/sg_execution_times", "auto_tutorials/epochs/10_epochs_overview", "auto_tutorials/epochs/15_baseline_regression", "auto_tutorials/epochs/20_visualize_epochs", "auto_tutorials/epochs/30_epochs_metadata", "auto_tutorials/epochs/40_autogenerate_metadata", "auto_tutorials/epochs/50_epochs_to_data_frame", "auto_tutorials/epochs/60_make_fixed_length_epochs", "auto_tutorials/epochs/index", "auto_tutorials/epochs/sg_execution_times", "auto_tutorials/evoked/10_evoked_overview", "auto_tutorials/evoked/20_visualize_evoked", "auto_tutorials/evoked/30_eeg_erp", "auto_tutorials/evoked/40_whitened", "auto_tutorials/evoked/index", "auto_tutorials/evoked/sg_execution_times", "auto_tutorials/forward/10_background_freesurfer", "auto_tutorials/forward/20_source_alignment", "auto_tutorials/forward/25_automated_coreg", "auto_tutorials/forward/30_forward", "auto_tutorials/forward/35_eeg_no_mri", "auto_tutorials/forward/50_background_freesurfer_mne", "auto_tutorials/forward/80_fix_bem_in_blender", "auto_tutorials/forward/90_compute_covariance", "auto_tutorials/forward/index", "auto_tutorials/forward/sg_execution_times", "auto_tutorials/index", "auto_tutorials/intro/10_overview", "auto_tutorials/intro/15_inplace", "auto_tutorials/intro/20_events_from_raw", "auto_tutorials/intro/30_info", "auto_tutorials/intro/40_sensor_locations", "auto_tutorials/intro/50_configure_mne", "auto_tutorials/intro/70_report", "auto_tutorials/intro/index", "auto_tutorials/intro/sg_execution_times", "auto_tutorials/inverse/10_stc_class", "auto_tutorials/inverse/20_dipole_fit", "auto_tutorials/inverse/30_mne_dspm_loreta", "auto_tutorials/inverse/35_dipole_orientations", "auto_tutorials/inverse/40_mne_fixed_free", "auto_tutorials/inverse/50_beamformer_lcmv", "auto_tutorials/inverse/60_visualize_stc", "auto_tutorials/inverse/70_eeg_mri_coords", "auto_tutorials/inverse/80_brainstorm_phantom_elekta", "auto_tutorials/inverse/85_brainstorm_phantom_ctf", "auto_tutorials/inverse/90_phantom_4DBTi", "auto_tutorials/inverse/index", "auto_tutorials/inverse/sg_execution_times", "auto_tutorials/io/10_reading_meg_data", "auto_tutorials/io/20_reading_eeg_data", "auto_tutorials/io/30_reading_fnirs_data", "auto_tutorials/io/60_ctf_bst_auditory", "auto_tutorials/io/index", "auto_tutorials/io/sg_execution_times", "auto_tutorials/machine-learning/30_strf", "auto_tutorials/machine-learning/50_decoding", "auto_tutorials/machine-learning/index", "auto_tutorials/machine-learning/sg_execution_times", "auto_tutorials/preprocessing/10_preprocessing_overview", "auto_tutorials/preprocessing/15_handling_bad_channels", "auto_tutorials/preprocessing/20_rejecting_bad_data", "auto_tutorials/preprocessing/25_background_filtering", "auto_tutorials/preprocessing/30_filtering_resampling", "auto_tutorials/preprocessing/35_artifact_correction_regression", "auto_tutorials/preprocessing/40_artifact_correction_ica", "auto_tutorials/preprocessing/45_projectors_background", "auto_tutorials/preprocessing/50_artifact_correction_ssp", "auto_tutorials/preprocessing/55_setting_eeg_reference", "auto_tutorials/preprocessing/59_head_positions", "auto_tutorials/preprocessing/60_maxwell_filtering_sss", "auto_tutorials/preprocessing/70_fnirs_processing", "auto_tutorials/preprocessing/80_opm_processing", "auto_tutorials/preprocessing/index", "auto_tutorials/preprocessing/sg_execution_times", "auto_tutorials/raw/10_raw_overview", "auto_tutorials/raw/20_event_arrays", "auto_tutorials/raw/30_annotate_raw", "auto_tutorials/raw/40_visualize_raw", "auto_tutorials/raw/index", "auto_tutorials/raw/sg_execution_times", "auto_tutorials/simulation/10_array_objs", "auto_tutorials/simulation/70_point_spread", "auto_tutorials/simulation/80_dics", "auto_tutorials/simulation/index", "auto_tutorials/simulation/sg_execution_times", "auto_tutorials/stats-sensor-space/10_background_stats", "auto_tutorials/stats-sensor-space/20_erp_stats", "auto_tutorials/stats-sensor-space/40_cluster_1samp_time_freq", "auto_tutorials/stats-sensor-space/50_cluster_between_time_freq", "auto_tutorials/stats-sensor-space/70_cluster_rmANOVA_time_freq", "auto_tutorials/stats-sensor-space/75_cluster_ftest_spatiotemporal", "auto_tutorials/stats-sensor-space/index", "auto_tutorials/stats-sensor-space/sg_execution_times", "auto_tutorials/stats-source-space/20_cluster_1samp_spatiotemporal", "auto_tutorials/stats-source-space/30_cluster_ftest_spatiotemporal", "auto_tutorials/stats-source-space/60_cluster_rmANOVA_spatiotemporal", "auto_tutorials/stats-source-space/index", "auto_tutorials/stats-source-space/sg_execution_times", "auto_tutorials/time-freq/10_spectrum_class", "auto_tutorials/time-freq/20_sensors_time_frequency", "auto_tutorials/time-freq/50_ssvep", "auto_tutorials/time-freq/index", "auto_tutorials/time-freq/sg_execution_times", "bibliography", "cited", "connectivity", "covariance", "creating_from_arrays", "datasets", "decoding", "events", "export", "file_io", "forward", "funding", "generated/commands", "generated/mne.AcqParserFIF", "generated/mne.Annotations", "generated/mne.BaseEpochs", "generated/mne.BiHemiLabel", "generated/mne.Covariance", "generated/mne.Dipole", "generated/mne.DipoleFixed", "generated/mne.Epochs", "generated/mne.EpochsArray", "generated/mne.Evoked", "generated/mne.EvokedArray", "generated/mne.Forward", "generated/mne.Info", "generated/mne.Label", "generated/mne.MixedSourceEstimate", "generated/mne.MixedVectorSourceEstimate", "generated/mne.Projection", "generated/mne.Report", "generated/mne.SourceEstimate", "generated/mne.SourceMorph", "generated/mne.SourceSpaces", "generated/mne.VectorSourceEstimate", "generated/mne.VolSourceEstimate", "generated/mne.VolVectorSourceEstimate", "generated/mne.add_reference_channels", "generated/mne.add_source_space_distances", "generated/mne.annotations_from_events", "generated/mne.apply_forward", "generated/mne.apply_forward_raw", "generated/mne.average_forward_solutions", "generated/mne.baseline.rescale", "generated/mne.beamformer.Beamformer", "generated/mne.beamformer.apply_dics", "generated/mne.beamformer.apply_dics_csd", "generated/mne.beamformer.apply_dics_epochs", "generated/mne.beamformer.apply_dics_tfr_epochs", "generated/mne.beamformer.apply_lcmv", "generated/mne.beamformer.apply_lcmv_cov", "generated/mne.beamformer.apply_lcmv_epochs", "generated/mne.beamformer.apply_lcmv_raw", "generated/mne.beamformer.make_dics", "generated/mne.beamformer.make_lcmv", "generated/mne.beamformer.make_lcmv_resolution_matrix", "generated/mne.beamformer.rap_music", "generated/mne.beamformer.read_beamformer", "generated/mne.bem.ConductorModel", "generated/mne.bem.convert_flash_mris", "generated/mne.bem.distance_to_bem", "generated/mne.bem.fit_sphere_to_headshape", "generated/mne.bem.get_fitting_dig", "generated/mne.bem.make_flash_bem", "generated/mne.bem.make_scalp_surfaces", "generated/mne.bem.make_watershed_bem", "generated/mne.channel_indices_by_type", "generated/mne.channel_type", "generated/mne.channels.DigMontage", "generated/mne.channels.Layout", "generated/mne.channels.combine_channels", "generated/mne.channels.compute_dev_head_t", "generated/mne.channels.compute_native_head_t", "generated/mne.channels.equalize_channels", "generated/mne.channels.find_ch_adjacency", "generated/mne.channels.find_layout", "generated/mne.channels.fix_mag_coil_types", "generated/mne.channels.generate_2d_layout", "generated/mne.channels.get_builtin_ch_adjacencies", "generated/mne.channels.get_builtin_montages", "generated/mne.channels.make_1020_channel_selections", "generated/mne.channels.make_dig_montage", "generated/mne.channels.make_eeg_layout", "generated/mne.channels.make_grid_layout", "generated/mne.channels.make_standard_montage", "generated/mne.channels.read_ch_adjacency", "generated/mne.channels.read_custom_montage", "generated/mne.channels.read_dig_captrak", "generated/mne.channels.read_dig_dat", "generated/mne.channels.read_dig_egi", "generated/mne.channels.read_dig_fif", "generated/mne.channels.read_dig_hpts", "generated/mne.channels.read_dig_localite", "generated/mne.channels.read_dig_polhemus_isotrak", "generated/mne.channels.read_layout", "generated/mne.channels.read_polhemus_fastscan", "generated/mne.channels.rename_channels", "generated/mne.chpi.compute_chpi_amplitudes", "generated/mne.chpi.compute_chpi_locs", "generated/mne.chpi.compute_chpi_snr", "generated/mne.chpi.compute_head_pos", "generated/mne.chpi.extract_chpi_locs_ctf", "generated/mne.chpi.extract_chpi_locs_kit", "generated/mne.chpi.filter_chpi", "generated/mne.chpi.get_active_chpi", "generated/mne.chpi.get_chpi_info", "generated/mne.chpi.head_pos_to_trans_rot_t", "generated/mne.chpi.read_head_pos", "generated/mne.chpi.write_head_pos", "generated/mne.combine_evoked", "generated/mne.compute_covariance", "generated/mne.compute_proj_epochs", "generated/mne.compute_proj_evoked", "generated/mne.compute_proj_raw", "generated/mne.compute_rank", "generated/mne.compute_raw_covariance", "generated/mne.compute_source_morph", "generated/mne.concatenate_epochs", "generated/mne.concatenate_events", "generated/mne.concatenate_raws", "generated/mne.convert_forward_solution", "generated/mne.coreg.Coregistration", "generated/mne.coreg.estimate_head_mri_t", "generated/mne.coreg.get_mni_fiducials", "generated/mne.cov.compute_whitener", "generated/mne.cov.prepare_noise_cov", "generated/mne.cov.regularize", "generated/mne.create_default_subject", "generated/mne.create_info", "generated/mne.cuda.get_cuda_memory", "generated/mne.cuda.init_cuda", "generated/mne.cuda.set_cuda_device", "generated/mne.datasets.brainstorm.bst_auditory.data_path", "generated/mne.datasets.brainstorm.bst_raw.data_path", "generated/mne.datasets.brainstorm.bst_resting.data_path", "generated/mne.datasets.eegbci.load_data", "generated/mne.datasets.eegbci.standardize", "generated/mne.datasets.epilepsy_ecog.data_path", "generated/mne.datasets.erp_core.data_path", "generated/mne.datasets.fetch_aparc_sub_parcellation", "generated/mne.datasets.fetch_dataset", "generated/mne.datasets.fetch_fsaverage", "generated/mne.datasets.fetch_hcp_mmp_parcellation", "generated/mne.datasets.fetch_infant_template", "generated/mne.datasets.fetch_phantom", "generated/mne.datasets.fnirs_motor.data_path", "generated/mne.datasets.has_dataset", "generated/mne.datasets.hf_sef.data_path", "generated/mne.datasets.kiloword.data_path", "generated/mne.datasets.limo.load_data", "generated/mne.datasets.misc.data_path", "generated/mne.datasets.mtrf.data_path", "generated/mne.datasets.multimodal.data_path", "generated/mne.datasets.opm.data_path", "generated/mne.datasets.phantom_4dbti.data_path", "generated/mne.datasets.refmeg_noise.data_path", "generated/mne.datasets.sample.data_path", "generated/mne.datasets.sleep_physionet.age.fetch_data", "generated/mne.datasets.sleep_physionet.temazepam.fetch_data", "generated/mne.datasets.somato.data_path", "generated/mne.datasets.spm_face.data_path", "generated/mne.datasets.ssvep.data_path", "generated/mne.datasets.ucl_opm_auditory.data_path", "generated/mne.datasets.visual_92_categories.data_path", "generated/mne.decimate_surface", "generated/mne.decoding.CSP", "generated/mne.decoding.EMS", "generated/mne.decoding.FilterEstimator", "generated/mne.decoding.GeneralizingEstimator", "generated/mne.decoding.LinearModel", "generated/mne.decoding.PSDEstimator", "generated/mne.decoding.ReceptiveField", "generated/mne.decoding.SPoC", "generated/mne.decoding.SSD", "generated/mne.decoding.Scaler", "generated/mne.decoding.SlidingEstimator", "generated/mne.decoding.TemporalFilter", "generated/mne.decoding.TimeDelayingRidge", "generated/mne.decoding.TimeFrequency", "generated/mne.decoding.UnsupervisedSpatialFilter", "generated/mne.decoding.Vectorizer", "generated/mne.decoding.compute_ems", "generated/mne.decoding.cross_val_multiscore", "generated/mne.decoding.get_coef", "generated/mne.dig_mri_distances", "generated/mne.dipole.get_phantom_dipoles", "generated/mne.epochs.average_movements", "generated/mne.epochs.combine_event_ids", "generated/mne.epochs.equalize_epoch_counts", "generated/mne.epochs.make_metadata", "generated/mne.equalize_channels", "generated/mne.event.define_target_events", "generated/mne.event.match_event_names", "generated/mne.event.shift_time_events", "generated/mne.events_from_annotations", "generated/mne.export.export_epochs", "generated/mne.export.export_evokeds", "generated/mne.export.export_evokeds_mff", "generated/mne.export.export_raw", "generated/mne.extract_label_time_course", "generated/mne.filter.construct_iir_filter", "generated/mne.filter.create_filter", "generated/mne.filter.estimate_ringing_samples", "generated/mne.filter.filter_data", "generated/mne.filter.notch_filter", "generated/mne.filter.resample", "generated/mne.find_events", "generated/mne.find_stim_steps", "generated/mne.fit_dipole", "generated/mne.forward.compute_depth_prior", "generated/mne.forward.compute_orient_prior", "generated/mne.forward.restrict_forward_to_label", "generated/mne.forward.restrict_forward_to_stc", "generated/mne.get_config", "generated/mne.get_config_path", "generated/mne.get_head_surf", "generated/mne.get_meg_helmet_surf", "generated/mne.get_montage_volume_labels", "generated/mne.get_volume_labels_from_aseg", "generated/mne.get_volume_labels_from_src", "generated/mne.grade_to_tris", "generated/mne.grade_to_vertices", "generated/mne.grand_average", "generated/mne.grow_labels", "generated/mne.gui.coregistration", "generated/mne.gui.locate_ieeg", "generated/mne.head_to_mni", "generated/mne.head_to_mri", "generated/mne.inverse_sparse.gamma_map", "generated/mne.inverse_sparse.make_stc_from_dipoles", "generated/mne.inverse_sparse.mixed_norm", "generated/mne.inverse_sparse.tf_mixed_norm", "generated/mne.io.BaseRaw", "generated/mne.io.Raw", "generated/mne.io.RawArray", "generated/mne.io.anonymize_info", "generated/mne.io.kit.read_mrk", "generated/mne.io.read_fiducials", "generated/mne.io.read_info", "generated/mne.io.read_raw", "generated/mne.io.read_raw_artemis123", "generated/mne.io.read_raw_bdf", "generated/mne.io.read_raw_boxy", "generated/mne.io.read_raw_brainvision", "generated/mne.io.read_raw_bti", "generated/mne.io.read_raw_cnt", "generated/mne.io.read_raw_ctf", "generated/mne.io.read_raw_curry", "generated/mne.io.read_raw_edf", "generated/mne.io.read_raw_eeglab", "generated/mne.io.read_raw_egi", "generated/mne.io.read_raw_eximia", "generated/mne.io.read_raw_fieldtrip", "generated/mne.io.read_raw_fif", "generated/mne.io.read_raw_fil", "generated/mne.io.read_raw_gdf", "generated/mne.io.read_raw_hitachi", "generated/mne.io.read_raw_kit", "generated/mne.io.read_raw_nedf", "generated/mne.io.read_raw_nicolet", "generated/mne.io.read_raw_nihon", "generated/mne.io.read_raw_nirx", "generated/mne.io.read_raw_persyst", "generated/mne.io.read_raw_snirf", "generated/mne.io.show_fiff", "generated/mne.io.write_fiducials", "generated/mne.label.select_sources", "generated/mne.label_sign_flip", "generated/mne.labels_to_stc", "generated/mne.make_ad_hoc_cov", "generated/mne.make_bem_model", "generated/mne.make_bem_solution", "generated/mne.make_field_map", "generated/mne.make_fixed_length_epochs", "generated/mne.make_fixed_length_events", "generated/mne.make_forward_dipole", "generated/mne.make_forward_solution", "generated/mne.make_sphere_model", "generated/mne.merge_events", "generated/mne.minimum_norm.InverseOperator", "generated/mne.minimum_norm.apply_inverse", "generated/mne.minimum_norm.apply_inverse_cov", "generated/mne.minimum_norm.apply_inverse_epochs", "generated/mne.minimum_norm.apply_inverse_raw", "generated/mne.minimum_norm.apply_inverse_tfr_epochs", "generated/mne.minimum_norm.compute_rank_inverse", "generated/mne.minimum_norm.compute_source_psd", "generated/mne.minimum_norm.compute_source_psd_epochs", "generated/mne.minimum_norm.estimate_snr", "generated/mne.minimum_norm.get_cross_talk", "generated/mne.minimum_norm.get_point_spread", "generated/mne.minimum_norm.make_inverse_operator", "generated/mne.minimum_norm.make_inverse_resolution_matrix", "generated/mne.minimum_norm.prepare_inverse_operator", "generated/mne.minimum_norm.read_inverse_operator", "generated/mne.minimum_norm.resolution_metrics", "generated/mne.minimum_norm.source_band_induced_power", "generated/mne.minimum_norm.source_induced_power", "generated/mne.minimum_norm.write_inverse_operator", "generated/mne.morph_labels", "generated/mne.morph_source_spaces", "generated/mne.open_docs", "generated/mne.open_report", "generated/mne.parse_config", "generated/mne.pick_channels", "generated/mne.pick_channels_cov", "generated/mne.pick_channels_forward", "generated/mne.pick_channels_regexp", "generated/mne.pick_events", "generated/mne.pick_info", "generated/mne.pick_types", "generated/mne.pick_types_forward", "generated/mne.preprocessing.EOGRegression", "generated/mne.preprocessing.ICA", "generated/mne.preprocessing.Xdawn", "generated/mne.preprocessing.annotate_amplitude", "generated/mne.preprocessing.annotate_break", "generated/mne.preprocessing.annotate_movement", "generated/mne.preprocessing.annotate_muscle_zscore", "generated/mne.preprocessing.annotate_nan", "generated/mne.preprocessing.compute_average_dev_head_t", "generated/mne.preprocessing.compute_bridged_electrodes", "generated/mne.preprocessing.compute_current_source_density", "generated/mne.preprocessing.compute_fine_calibration", "generated/mne.preprocessing.compute_maxwell_basis", "generated/mne.preprocessing.compute_proj_ecg", "generated/mne.preprocessing.compute_proj_eog", "generated/mne.preprocessing.corrmap", "generated/mne.preprocessing.cortical_signal_suppression", "generated/mne.preprocessing.create_ecg_epochs", "generated/mne.preprocessing.create_eog_epochs", "generated/mne.preprocessing.equalize_bads", "generated/mne.preprocessing.find_bad_channels_maxwell", "generated/mne.preprocessing.find_ecg_events", "generated/mne.preprocessing.find_eog_events", "generated/mne.preprocessing.fix_stim_artifact", "generated/mne.preprocessing.ica_find_ecg_events", "generated/mne.preprocessing.ica_find_eog_events", "generated/mne.preprocessing.ieeg.project_sensors_onto_brain", "generated/mne.preprocessing.infomax", "generated/mne.preprocessing.interpolate_bridged_electrodes", "generated/mne.preprocessing.maxwell_filter", "generated/mne.preprocessing.maxwell_filter_prepare_emptyroom", "generated/mne.preprocessing.nirs.beer_lambert_law", "generated/mne.preprocessing.nirs.optical_density", "generated/mne.preprocessing.nirs.scalp_coupling_index", "generated/mne.preprocessing.nirs.short_channels", "generated/mne.preprocessing.nirs.source_detector_distances", "generated/mne.preprocessing.nirs.temporal_derivative_distribution_repair", "generated/mne.preprocessing.oversampled_temporal_projection", "generated/mne.preprocessing.peak_finder", "generated/mne.preprocessing.read_eog_regression", "generated/mne.preprocessing.read_fine_calibration", "generated/mne.preprocessing.read_ica", "generated/mne.preprocessing.read_ica_eeglab", "generated/mne.preprocessing.realign_raw", "generated/mne.preprocessing.regress_artifact", "generated/mne.preprocessing.write_fine_calibration", "generated/mne.random_parcellation", "generated/mne.read_annotations", "generated/mne.read_bem_solution", "generated/mne.read_bem_surfaces", "generated/mne.read_cov", "generated/mne.read_dipole", "generated/mne.read_epochs", "generated/mne.read_epochs_eeglab", "generated/mne.read_epochs_fieldtrip", "generated/mne.read_epochs_kit", "generated/mne.read_events", "generated/mne.read_evoked_besa", "generated/mne.read_evoked_fieldtrip", "generated/mne.read_evokeds", "generated/mne.read_evokeds_mff", "generated/mne.read_forward_solution", "generated/mne.read_freesurfer_lut", "generated/mne.read_label", "generated/mne.read_labels_from_annot", "generated/mne.read_lta", "generated/mne.read_morph_map", "generated/mne.read_proj", "generated/mne.read_reject_parameters", "generated/mne.read_source_estimate", "generated/mne.read_source_morph", "generated/mne.read_source_spaces", "generated/mne.read_surface", "generated/mne.read_talxfm", "generated/mne.read_trans", "generated/mne.read_tri", "generated/mne.read_vectorview_selection", "generated/mne.rename_channels", "generated/mne.scale_bem", "generated/mne.scale_labels", "generated/mne.scale_mri", "generated/mne.scale_source_space", "generated/mne.sensitivity_map", "generated/mne.set_bipolar_reference", "generated/mne.set_cache_dir", "generated/mne.set_config", "generated/mne.set_eeg_reference", "generated/mne.set_log_file", "generated/mne.set_log_level", "generated/mne.setup_source_space", "generated/mne.setup_volume_source_space", "generated/mne.simulation.SourceSimulator", "generated/mne.simulation.add_chpi", "generated/mne.simulation.add_ecg", "generated/mne.simulation.add_eog", "generated/mne.simulation.add_noise", "generated/mne.simulation.metrics.cosine_score", "generated/mne.simulation.metrics.f1_score", "generated/mne.simulation.metrics.peak_position_error", "generated/mne.simulation.metrics.precision_score", "generated/mne.simulation.metrics.recall_score", "generated/mne.simulation.metrics.region_localization_error", "generated/mne.simulation.metrics.roc_auc_score", "generated/mne.simulation.metrics.spatial_deviation_error", "generated/mne.simulation.select_source_in_label", "generated/mne.simulation.simulate_evoked", "generated/mne.simulation.simulate_raw", "generated/mne.simulation.simulate_sparse_stc", "generated/mne.simulation.simulate_stc", "generated/mne.source_space.compute_distance_to_sensors", "generated/mne.source_space.get_decimated_surfaces", "generated/mne.spatial_dist_adjacency", "generated/mne.spatial_inter_hemi_adjacency", "generated/mne.spatial_src_adjacency", "generated/mne.spatial_tris_adjacency", "generated/mne.spatio_temporal_dist_adjacency", "generated/mne.spatio_temporal_src_adjacency", "generated/mne.spatio_temporal_tris_adjacency", "generated/mne.split_label", "generated/mne.stats.bonferroni_correction", "generated/mne.stats.bootstrap_confidence_interval", "generated/mne.stats.combine_adjacency", "generated/mne.stats.f_mway_rm", "generated/mne.stats.f_oneway", "generated/mne.stats.f_threshold_mway_rm", "generated/mne.stats.fdr_correction", "generated/mne.stats.linear_regression", "generated/mne.stats.linear_regression_raw", "generated/mne.stats.permutation_cluster_1samp_test", "generated/mne.stats.permutation_cluster_test", "generated/mne.stats.permutation_t_test", "generated/mne.stats.spatio_temporal_cluster_1samp_test", "generated/mne.stats.spatio_temporal_cluster_test", "generated/mne.stats.summarize_clusters_stc", "generated/mne.stats.ttest_1samp_no_p", "generated/mne.stats.ttest_ind_no_p", "generated/mne.stc_near_sensors", "generated/mne.stc_to_label", "generated/mne.surface.complete_surface_info", "generated/mne.surface.read_curvature", "generated/mne.sys_info", "generated/mne.time_frequency.AverageTFR", "generated/mne.time_frequency.CrossSpectralDensity", "generated/mne.time_frequency.EpochsSpectrum", "generated/mne.time_frequency.EpochsTFR", "generated/mne.time_frequency.Spectrum", "generated/mne.time_frequency.csd_array_fourier", "generated/mne.time_frequency.csd_array_morlet", "generated/mne.time_frequency.csd_array_multitaper", "generated/mne.time_frequency.csd_fourier", "generated/mne.time_frequency.csd_morlet", "generated/mne.time_frequency.csd_multitaper", "generated/mne.time_frequency.csd_tfr", "generated/mne.time_frequency.dpss_windows", "generated/mne.time_frequency.fit_iir_model_raw", "generated/mne.time_frequency.fwhm", "generated/mne.time_frequency.istft", "generated/mne.time_frequency.morlet", "generated/mne.time_frequency.pick_channels_csd", "generated/mne.time_frequency.psd_array_multitaper", "generated/mne.time_frequency.psd_array_welch", "generated/mne.time_frequency.read_csd", "generated/mne.time_frequency.read_spectrum", "generated/mne.time_frequency.read_tfrs", "generated/mne.time_frequency.stft", "generated/mne.time_frequency.stftfreq", "generated/mne.time_frequency.tfr.cwt", "generated/mne.time_frequency.tfr.morlet", "generated/mne.time_frequency.tfr_array_morlet", "generated/mne.time_frequency.tfr_array_multitaper", "generated/mne.time_frequency.tfr_array_stockwell", "generated/mne.time_frequency.tfr_morlet", "generated/mne.time_frequency.tfr_multitaper", "generated/mne.time_frequency.tfr_stockwell", "generated/mne.time_frequency.write_tfrs", "generated/mne.transform_surface_to", "generated/mne.transforms.Transform", "generated/mne.transforms.apply_volume_registration", "generated/mne.transforms.compute_volume_registration", "generated/mne.transforms.quat_to_rot", "generated/mne.transforms.read_ras_mni_t", "generated/mne.transforms.rot_to_quat", "generated/mne.use_coil_def", "generated/mne.use_log_level", "generated/mne.utils.deprecated", "generated/mne.utils.warn", "generated/mne.verbose", "generated/mne.vertex_to_mni", "generated/mne.viz.Brain", "generated/mne.viz.ClickableImage", "generated/mne.viz.Figure3D", "generated/mne.viz.add_background_image", "generated/mne.viz.centers_to_edges", "generated/mne.viz.circular_layout", "generated/mne.viz.close_3d_figure", "generated/mne.viz.close_all_3d_figures", "generated/mne.viz.compare_fiff", "generated/mne.viz.create_3d_figure", "generated/mne.viz.get_3d_backend", "generated/mne.viz.get_brain_class", "generated/mne.viz.get_browser_backend", "generated/mne.viz.iter_topography", "generated/mne.viz.link_brains", "generated/mne.viz.mne_analyze_colormap", "generated/mne.viz.plot_alignment", "generated/mne.viz.plot_arrowmap", "generated/mne.viz.plot_bem", "generated/mne.viz.plot_brain_colorbar", "generated/mne.viz.plot_bridged_electrodes", "generated/mne.viz.plot_ch_adjacency", "generated/mne.viz.plot_channel_labels_circle", "generated/mne.viz.plot_chpi_snr", "generated/mne.viz.plot_compare_evokeds", "generated/mne.viz.plot_cov", "generated/mne.viz.plot_csd", "generated/mne.viz.plot_dipole_amplitudes", "generated/mne.viz.plot_dipole_locations", "generated/mne.viz.plot_drop_log", "generated/mne.viz.plot_epochs", "generated/mne.viz.plot_epochs_image", "generated/mne.viz.plot_epochs_psd_topomap", "generated/mne.viz.plot_events", "generated/mne.viz.plot_evoked", "generated/mne.viz.plot_evoked_field", "generated/mne.viz.plot_evoked_image", "generated/mne.viz.plot_evoked_joint", "generated/mne.viz.plot_evoked_topo", "generated/mne.viz.plot_evoked_topomap", "generated/mne.viz.plot_evoked_white", "generated/mne.viz.plot_filter", "generated/mne.viz.plot_head_positions", "generated/mne.viz.plot_ica_components", "generated/mne.viz.plot_ica_overlay", "generated/mne.viz.plot_ica_properties", "generated/mne.viz.plot_ica_scores", "generated/mne.viz.plot_ica_sources", "generated/mne.viz.plot_ideal_filter", "generated/mne.viz.plot_layout", "generated/mne.viz.plot_montage", "generated/mne.viz.plot_projs_joint", "generated/mne.viz.plot_projs_topomap", "generated/mne.viz.plot_raw", "generated/mne.viz.plot_raw_psd", "generated/mne.viz.plot_regression_weights", "generated/mne.viz.plot_sensors", "generated/mne.viz.plot_snr_estimate", "generated/mne.viz.plot_source_estimates", "generated/mne.viz.plot_sparse_source_estimates", "generated/mne.viz.plot_tfr_topomap", "generated/mne.viz.plot_topo_image_epochs", "generated/mne.viz.plot_topomap", "generated/mne.viz.plot_vector_source_estimates", "generated/mne.viz.plot_volume_source_estimates", "generated/mne.viz.set_3d_backend", "generated/mne.viz.set_3d_options", "generated/mne.viz.set_3d_title", "generated/mne.viz.set_3d_view", "generated/mne.viz.set_browser_backend", "generated/mne.viz.snapshot_brain_montage", "generated/mne.viz.use_3d_backend", "generated/mne.viz.use_browser_backend", "generated/mne.warp_montage_volume", "generated/mne.what", "generated/mne.write_bem_solution", "generated/mne.write_bem_surfaces", "generated/mne.write_cov", "generated/mne.write_events", "generated/mne.write_evokeds", "generated/mne.write_forward_solution", "generated/mne.write_head_bem", "generated/mne.write_label", "generated/mne.write_labels_to_annot", "generated/mne.write_proj", "generated/mne.write_source_spaces", "generated/mne.write_surface", "generated/mne.write_trans", "glossary", "index", "install/advanced", "install/check_installation", "install/contributing", "install/freesurfer", "install/index", "install/installers", "install/manual_install", "install/manual_install_python", "install/mne_c", "install/mne_tools_suite", "install/updating", "inverse", "logging", "martinos", "mne_cpp", "most_used_classes", "mri", "overview/cite", "overview/cookbook", "overview/datasets_index", "overview/design_philosophy", "overview/development", "overview/faq", "overview/get_help", "overview/governance", "overview/implementation", "overview/index", "overview/learn_python", "overview/matlab", "overview/migrating", "overview/people", "overview/roadmap", "preprocessing", "python_reference", "reading_raw_data", "realtime", "report", "sensor_space", "simulation", "source_space", "statistics", "time_frequency", "visualization", "whats_new"], "filenames": ["auto_examples/connectivity/index.rst", "auto_examples/datasets/brainstorm_data.rst", "auto_examples/datasets/hf_sef_data.rst", "auto_examples/datasets/index.rst", "auto_examples/datasets/limo_data.rst", "auto_examples/datasets/opm_data.rst", "auto_examples/datasets/sg_execution_times.rst", "auto_examples/datasets/spm_faces_dataset_sgskip.rst", "auto_examples/decoding/decoding_csp_eeg.rst", "auto_examples/decoding/decoding_csp_timefreq.rst", "auto_examples/decoding/decoding_rsa_sgskip.rst", "auto_examples/decoding/decoding_spatio_temporal_source.rst", "auto_examples/decoding/decoding_spoc_CMC.rst", "auto_examples/decoding/decoding_time_generalization_conditions.rst", "auto_examples/decoding/decoding_unsupervised_spatial_filter.rst", "auto_examples/decoding/decoding_xdawn_eeg.rst", "auto_examples/decoding/ems_filtering.rst", "auto_examples/decoding/index.rst", "auto_examples/decoding/linear_model_patterns.rst", "auto_examples/decoding/receptive_field_mtrf.rst", "auto_examples/decoding/sg_execution_times.rst", "auto_examples/decoding/ssd_spatial_filters.rst", "auto_examples/forward/forward_sensitivity_maps.rst", "auto_examples/forward/index.rst", "auto_examples/forward/left_cerebellum_volume_source.rst", "auto_examples/forward/sg_execution_times.rst", "auto_examples/forward/source_space_morphing.rst", "auto_examples/index.rst", "auto_examples/inverse/compute_mne_inverse_epochs_in_label.rst", "auto_examples/inverse/compute_mne_inverse_raw_in_label.rst", "auto_examples/inverse/compute_mne_inverse_volume.rst", "auto_examples/inverse/custom_inverse_solver.rst", "auto_examples/inverse/dics_epochs.rst", "auto_examples/inverse/dics_source_power.rst", "auto_examples/inverse/evoked_ers_source_power.rst", "auto_examples/inverse/gamma_map_inverse.rst", "auto_examples/inverse/index.rst", "auto_examples/inverse/label_activation_from_stc.rst", "auto_examples/inverse/label_from_stc.rst", "auto_examples/inverse/label_source_activations.rst", "auto_examples/inverse/mixed_norm_inverse.rst", "auto_examples/inverse/mixed_source_space_inverse.rst", "auto_examples/inverse/mne_cov_power.rst", "auto_examples/inverse/morph_surface_stc.rst", "auto_examples/inverse/morph_volume_stc.rst", "auto_examples/inverse/multi_dipole_model.rst", "auto_examples/inverse/multidict_reweighted_tfmxne.rst", "auto_examples/inverse/psf_ctf_label_leakage.rst", "auto_examples/inverse/psf_ctf_vertices.rst", "auto_examples/inverse/psf_ctf_vertices_lcmv.rst", "auto_examples/inverse/psf_volume.rst", "auto_examples/inverse/rap_music.rst", "auto_examples/inverse/read_inverse.rst", "auto_examples/inverse/read_stc.rst", "auto_examples/inverse/resolution_metrics.rst", "auto_examples/inverse/resolution_metrics_eegmeg.rst", "auto_examples/inverse/sg_execution_times.rst", "auto_examples/inverse/snr_estimate.rst", "auto_examples/inverse/source_space_snr.rst", "auto_examples/inverse/time_frequency_mixed_norm_inverse.rst", "auto_examples/inverse/vector_mne_solution.rst", "auto_examples/io/elekta_epochs.rst", "auto_examples/io/index.rst", "auto_examples/io/read_neo_format.rst", "auto_examples/io/read_noise_covariance_matrix.rst", "auto_examples/io/read_xdf.rst", "auto_examples/io/sg_execution_times.rst", "auto_examples/preprocessing/css.rst", "auto_examples/preprocessing/define_target_events.rst", "auto_examples/preprocessing/eeg_bridging.rst", "auto_examples/preprocessing/eeg_csd.rst", "auto_examples/preprocessing/eog_artifact_histogram.rst", "auto_examples/preprocessing/eog_regression.rst", "auto_examples/preprocessing/find_ref_artifacts.rst", "auto_examples/preprocessing/fnirs_artifact_removal.rst", "auto_examples/preprocessing/ica_comparison.rst", "auto_examples/preprocessing/index.rst", "auto_examples/preprocessing/interpolate_bad_channels.rst", "auto_examples/preprocessing/movement_compensation.rst", "auto_examples/preprocessing/movement_detection.rst", "auto_examples/preprocessing/muscle_detection.rst", "auto_examples/preprocessing/muscle_ica.rst", "auto_examples/preprocessing/otp.rst", "auto_examples/preprocessing/sg_execution_times.rst", "auto_examples/preprocessing/shift_evoked.rst", "auto_examples/preprocessing/virtual_evoked.rst", "auto_examples/preprocessing/xdawn_denoising.rst", "auto_examples/simulation/index.rst", "auto_examples/simulation/plot_stc_metrics.rst", "auto_examples/simulation/sg_execution_times.rst", "auto_examples/simulation/simulate_evoked_data.rst", "auto_examples/simulation/simulate_raw_data.rst", "auto_examples/simulation/simulated_raw_data_using_subject_anatomy.rst", "auto_examples/simulation/source_simulator.rst", "auto_examples/stats/cluster_stats_evoked.rst", "auto_examples/stats/fdr_stats_evoked.rst", "auto_examples/stats/index.rst", "auto_examples/stats/linear_regression_raw.rst", "auto_examples/stats/sensor_permutation_test.rst", "auto_examples/stats/sensor_regression.rst", "auto_examples/stats/sg_execution_times.rst", "auto_examples/time_frequency/compute_csd.rst", "auto_examples/time_frequency/compute_source_psd_epochs.rst", "auto_examples/time_frequency/index.rst", "auto_examples/time_frequency/sg_execution_times.rst", "auto_examples/time_frequency/source_label_time_frequency.rst", "auto_examples/time_frequency/source_power_spectrum.rst", "auto_examples/time_frequency/source_power_spectrum_opm.rst", "auto_examples/time_frequency/source_space_time_frequency.rst", "auto_examples/time_frequency/temporal_whitening.rst", "auto_examples/time_frequency/time_frequency_erds.rst", "auto_examples/time_frequency/time_frequency_global_field_power.rst", "auto_examples/time_frequency/time_frequency_simulated.rst", "auto_examples/visualization/3d_to_2d.rst", "auto_examples/visualization/brain.rst", "auto_examples/visualization/channel_epochs_image.rst", "auto_examples/visualization/eeg_on_scalp.rst", "auto_examples/visualization/evoked_arrowmap.rst", "auto_examples/visualization/evoked_topomap.rst", "auto_examples/visualization/evoked_whitening.rst", "auto_examples/visualization/index.rst", "auto_examples/visualization/meg_sensors.rst", "auto_examples/visualization/mne_helmet.rst", "auto_examples/visualization/montage_sgskip.rst", "auto_examples/visualization/parcellation.rst", "auto_examples/visualization/publication_figure.rst", "auto_examples/visualization/roi_erpimage_by_rt.rst", "auto_examples/visualization/sensor_noise_level.rst", "auto_examples/visualization/sg_execution_times.rst", "auto_examples/visualization/ssp_projs_sensitivity_map.rst", "auto_examples/visualization/topo_compare_conditions.rst", "auto_examples/visualization/topo_customized.rst", "auto_examples/visualization/xhemi.rst", "auto_tutorials/clinical/10_ieeg_localize.rst", "auto_tutorials/clinical/20_seeg.rst", "auto_tutorials/clinical/30_ecog.rst", "auto_tutorials/clinical/60_sleep.rst", "auto_tutorials/clinical/index.rst", "auto_tutorials/clinical/sg_execution_times.rst", "auto_tutorials/epochs/10_epochs_overview.rst", "auto_tutorials/epochs/15_baseline_regression.rst", "auto_tutorials/epochs/20_visualize_epochs.rst", "auto_tutorials/epochs/30_epochs_metadata.rst", "auto_tutorials/epochs/40_autogenerate_metadata.rst", "auto_tutorials/epochs/50_epochs_to_data_frame.rst", "auto_tutorials/epochs/60_make_fixed_length_epochs.rst", "auto_tutorials/epochs/index.rst", "auto_tutorials/epochs/sg_execution_times.rst", "auto_tutorials/evoked/10_evoked_overview.rst", "auto_tutorials/evoked/20_visualize_evoked.rst", "auto_tutorials/evoked/30_eeg_erp.rst", "auto_tutorials/evoked/40_whitened.rst", "auto_tutorials/evoked/index.rst", "auto_tutorials/evoked/sg_execution_times.rst", "auto_tutorials/forward/10_background_freesurfer.rst", "auto_tutorials/forward/20_source_alignment.rst", "auto_tutorials/forward/25_automated_coreg.rst", "auto_tutorials/forward/30_forward.rst", "auto_tutorials/forward/35_eeg_no_mri.rst", "auto_tutorials/forward/50_background_freesurfer_mne.rst", "auto_tutorials/forward/80_fix_bem_in_blender.rst", "auto_tutorials/forward/90_compute_covariance.rst", "auto_tutorials/forward/index.rst", "auto_tutorials/forward/sg_execution_times.rst", "auto_tutorials/index.rst", "auto_tutorials/intro/10_overview.rst", "auto_tutorials/intro/15_inplace.rst", "auto_tutorials/intro/20_events_from_raw.rst", "auto_tutorials/intro/30_info.rst", "auto_tutorials/intro/40_sensor_locations.rst", "auto_tutorials/intro/50_configure_mne.rst", "auto_tutorials/intro/70_report.rst", "auto_tutorials/intro/index.rst", "auto_tutorials/intro/sg_execution_times.rst", "auto_tutorials/inverse/10_stc_class.rst", "auto_tutorials/inverse/20_dipole_fit.rst", "auto_tutorials/inverse/30_mne_dspm_loreta.rst", "auto_tutorials/inverse/35_dipole_orientations.rst", "auto_tutorials/inverse/40_mne_fixed_free.rst", "auto_tutorials/inverse/50_beamformer_lcmv.rst", "auto_tutorials/inverse/60_visualize_stc.rst", "auto_tutorials/inverse/70_eeg_mri_coords.rst", "auto_tutorials/inverse/80_brainstorm_phantom_elekta.rst", "auto_tutorials/inverse/85_brainstorm_phantom_ctf.rst", "auto_tutorials/inverse/90_phantom_4DBTi.rst", "auto_tutorials/inverse/index.rst", "auto_tutorials/inverse/sg_execution_times.rst", "auto_tutorials/io/10_reading_meg_data.rst", "auto_tutorials/io/20_reading_eeg_data.rst", "auto_tutorials/io/30_reading_fnirs_data.rst", "auto_tutorials/io/60_ctf_bst_auditory.rst", "auto_tutorials/io/index.rst", "auto_tutorials/io/sg_execution_times.rst", "auto_tutorials/machine-learning/30_strf.rst", "auto_tutorials/machine-learning/50_decoding.rst", "auto_tutorials/machine-learning/index.rst", "auto_tutorials/machine-learning/sg_execution_times.rst", "auto_tutorials/preprocessing/10_preprocessing_overview.rst", "auto_tutorials/preprocessing/15_handling_bad_channels.rst", "auto_tutorials/preprocessing/20_rejecting_bad_data.rst", "auto_tutorials/preprocessing/25_background_filtering.rst", "auto_tutorials/preprocessing/30_filtering_resampling.rst", "auto_tutorials/preprocessing/35_artifact_correction_regression.rst", "auto_tutorials/preprocessing/40_artifact_correction_ica.rst", "auto_tutorials/preprocessing/45_projectors_background.rst", "auto_tutorials/preprocessing/50_artifact_correction_ssp.rst", "auto_tutorials/preprocessing/55_setting_eeg_reference.rst", "auto_tutorials/preprocessing/59_head_positions.rst", "auto_tutorials/preprocessing/60_maxwell_filtering_sss.rst", "auto_tutorials/preprocessing/70_fnirs_processing.rst", "auto_tutorials/preprocessing/80_opm_processing.rst", "auto_tutorials/preprocessing/index.rst", "auto_tutorials/preprocessing/sg_execution_times.rst", "auto_tutorials/raw/10_raw_overview.rst", "auto_tutorials/raw/20_event_arrays.rst", "auto_tutorials/raw/30_annotate_raw.rst", "auto_tutorials/raw/40_visualize_raw.rst", "auto_tutorials/raw/index.rst", "auto_tutorials/raw/sg_execution_times.rst", "auto_tutorials/simulation/10_array_objs.rst", "auto_tutorials/simulation/70_point_spread.rst", "auto_tutorials/simulation/80_dics.rst", "auto_tutorials/simulation/index.rst", "auto_tutorials/simulation/sg_execution_times.rst", "auto_tutorials/stats-sensor-space/10_background_stats.rst", "auto_tutorials/stats-sensor-space/20_erp_stats.rst", "auto_tutorials/stats-sensor-space/40_cluster_1samp_time_freq.rst", "auto_tutorials/stats-sensor-space/50_cluster_between_time_freq.rst", "auto_tutorials/stats-sensor-space/70_cluster_rmANOVA_time_freq.rst", "auto_tutorials/stats-sensor-space/75_cluster_ftest_spatiotemporal.rst", "auto_tutorials/stats-sensor-space/index.rst", "auto_tutorials/stats-sensor-space/sg_execution_times.rst", "auto_tutorials/stats-source-space/20_cluster_1samp_spatiotemporal.rst", "auto_tutorials/stats-source-space/30_cluster_ftest_spatiotemporal.rst", "auto_tutorials/stats-source-space/60_cluster_rmANOVA_spatiotemporal.rst", "auto_tutorials/stats-source-space/index.rst", "auto_tutorials/stats-source-space/sg_execution_times.rst", "auto_tutorials/time-freq/10_spectrum_class.rst", "auto_tutorials/time-freq/20_sensors_time_frequency.rst", "auto_tutorials/time-freq/50_ssvep.rst", "auto_tutorials/time-freq/index.rst", "auto_tutorials/time-freq/sg_execution_times.rst", "bibliography.rst", "cited.rst", "connectivity.rst", "covariance.rst", "creating_from_arrays.rst", "datasets.rst", "decoding.rst", "events.rst", "export.rst", "file_io.rst", "forward.rst", "funding.rst", "generated/commands.rst", "generated/mne.AcqParserFIF.rst", "generated/mne.Annotations.rst", "generated/mne.BaseEpochs.rst", "generated/mne.BiHemiLabel.rst", "generated/mne.Covariance.rst", "generated/mne.Dipole.rst", "generated/mne.DipoleFixed.rst", "generated/mne.Epochs.rst", "generated/mne.EpochsArray.rst", "generated/mne.Evoked.rst", "generated/mne.EvokedArray.rst", "generated/mne.Forward.rst", "generated/mne.Info.rst", "generated/mne.Label.rst", "generated/mne.MixedSourceEstimate.rst", "generated/mne.MixedVectorSourceEstimate.rst", "generated/mne.Projection.rst", "generated/mne.Report.rst", "generated/mne.SourceEstimate.rst", "generated/mne.SourceMorph.rst", "generated/mne.SourceSpaces.rst", "generated/mne.VectorSourceEstimate.rst", "generated/mne.VolSourceEstimate.rst", "generated/mne.VolVectorSourceEstimate.rst", "generated/mne.add_reference_channels.rst", "generated/mne.add_source_space_distances.rst", "generated/mne.annotations_from_events.rst", "generated/mne.apply_forward.rst", "generated/mne.apply_forward_raw.rst", "generated/mne.average_forward_solutions.rst", "generated/mne.baseline.rescale.rst", "generated/mne.beamformer.Beamformer.rst", "generated/mne.beamformer.apply_dics.rst", "generated/mne.beamformer.apply_dics_csd.rst", "generated/mne.beamformer.apply_dics_epochs.rst", "generated/mne.beamformer.apply_dics_tfr_epochs.rst", "generated/mne.beamformer.apply_lcmv.rst", "generated/mne.beamformer.apply_lcmv_cov.rst", "generated/mne.beamformer.apply_lcmv_epochs.rst", "generated/mne.beamformer.apply_lcmv_raw.rst", "generated/mne.beamformer.make_dics.rst", "generated/mne.beamformer.make_lcmv.rst", "generated/mne.beamformer.make_lcmv_resolution_matrix.rst", "generated/mne.beamformer.rap_music.rst", "generated/mne.beamformer.read_beamformer.rst", "generated/mne.bem.ConductorModel.rst", "generated/mne.bem.convert_flash_mris.rst", "generated/mne.bem.distance_to_bem.rst", "generated/mne.bem.fit_sphere_to_headshape.rst", "generated/mne.bem.get_fitting_dig.rst", "generated/mne.bem.make_flash_bem.rst", "generated/mne.bem.make_scalp_surfaces.rst", "generated/mne.bem.make_watershed_bem.rst", "generated/mne.channel_indices_by_type.rst", "generated/mne.channel_type.rst", "generated/mne.channels.DigMontage.rst", "generated/mne.channels.Layout.rst", "generated/mne.channels.combine_channels.rst", "generated/mne.channels.compute_dev_head_t.rst", "generated/mne.channels.compute_native_head_t.rst", "generated/mne.channels.equalize_channels.rst", "generated/mne.channels.find_ch_adjacency.rst", "generated/mne.channels.find_layout.rst", "generated/mne.channels.fix_mag_coil_types.rst", "generated/mne.channels.generate_2d_layout.rst", "generated/mne.channels.get_builtin_ch_adjacencies.rst", "generated/mne.channels.get_builtin_montages.rst", "generated/mne.channels.make_1020_channel_selections.rst", "generated/mne.channels.make_dig_montage.rst", "generated/mne.channels.make_eeg_layout.rst", "generated/mne.channels.make_grid_layout.rst", "generated/mne.channels.make_standard_montage.rst", "generated/mne.channels.read_ch_adjacency.rst", "generated/mne.channels.read_custom_montage.rst", "generated/mne.channels.read_dig_captrak.rst", "generated/mne.channels.read_dig_dat.rst", "generated/mne.channels.read_dig_egi.rst", "generated/mne.channels.read_dig_fif.rst", "generated/mne.channels.read_dig_hpts.rst", "generated/mne.channels.read_dig_localite.rst", "generated/mne.channels.read_dig_polhemus_isotrak.rst", "generated/mne.channels.read_layout.rst", "generated/mne.channels.read_polhemus_fastscan.rst", "generated/mne.channels.rename_channels.rst", "generated/mne.chpi.compute_chpi_amplitudes.rst", "generated/mne.chpi.compute_chpi_locs.rst", "generated/mne.chpi.compute_chpi_snr.rst", "generated/mne.chpi.compute_head_pos.rst", "generated/mne.chpi.extract_chpi_locs_ctf.rst", "generated/mne.chpi.extract_chpi_locs_kit.rst", "generated/mne.chpi.filter_chpi.rst", "generated/mne.chpi.get_active_chpi.rst", "generated/mne.chpi.get_chpi_info.rst", "generated/mne.chpi.head_pos_to_trans_rot_t.rst", "generated/mne.chpi.read_head_pos.rst", "generated/mne.chpi.write_head_pos.rst", "generated/mne.combine_evoked.rst", "generated/mne.compute_covariance.rst", "generated/mne.compute_proj_epochs.rst", "generated/mne.compute_proj_evoked.rst", "generated/mne.compute_proj_raw.rst", "generated/mne.compute_rank.rst", "generated/mne.compute_raw_covariance.rst", "generated/mne.compute_source_morph.rst", "generated/mne.concatenate_epochs.rst", "generated/mne.concatenate_events.rst", "generated/mne.concatenate_raws.rst", "generated/mne.convert_forward_solution.rst", "generated/mne.coreg.Coregistration.rst", "generated/mne.coreg.estimate_head_mri_t.rst", "generated/mne.coreg.get_mni_fiducials.rst", "generated/mne.cov.compute_whitener.rst", "generated/mne.cov.prepare_noise_cov.rst", "generated/mne.cov.regularize.rst", "generated/mne.create_default_subject.rst", "generated/mne.create_info.rst", "generated/mne.cuda.get_cuda_memory.rst", "generated/mne.cuda.init_cuda.rst", "generated/mne.cuda.set_cuda_device.rst", "generated/mne.datasets.brainstorm.bst_auditory.data_path.rst", "generated/mne.datasets.brainstorm.bst_raw.data_path.rst", "generated/mne.datasets.brainstorm.bst_resting.data_path.rst", "generated/mne.datasets.eegbci.load_data.rst", "generated/mne.datasets.eegbci.standardize.rst", "generated/mne.datasets.epilepsy_ecog.data_path.rst", "generated/mne.datasets.erp_core.data_path.rst", "generated/mne.datasets.fetch_aparc_sub_parcellation.rst", "generated/mne.datasets.fetch_dataset.rst", "generated/mne.datasets.fetch_fsaverage.rst", "generated/mne.datasets.fetch_hcp_mmp_parcellation.rst", "generated/mne.datasets.fetch_infant_template.rst", "generated/mne.datasets.fetch_phantom.rst", "generated/mne.datasets.fnirs_motor.data_path.rst", "generated/mne.datasets.has_dataset.rst", "generated/mne.datasets.hf_sef.data_path.rst", "generated/mne.datasets.kiloword.data_path.rst", "generated/mne.datasets.limo.load_data.rst", "generated/mne.datasets.misc.data_path.rst", "generated/mne.datasets.mtrf.data_path.rst", "generated/mne.datasets.multimodal.data_path.rst", "generated/mne.datasets.opm.data_path.rst", "generated/mne.datasets.phantom_4dbti.data_path.rst", "generated/mne.datasets.refmeg_noise.data_path.rst", "generated/mne.datasets.sample.data_path.rst", "generated/mne.datasets.sleep_physionet.age.fetch_data.rst", "generated/mne.datasets.sleep_physionet.temazepam.fetch_data.rst", "generated/mne.datasets.somato.data_path.rst", "generated/mne.datasets.spm_face.data_path.rst", "generated/mne.datasets.ssvep.data_path.rst", "generated/mne.datasets.ucl_opm_auditory.data_path.rst", "generated/mne.datasets.visual_92_categories.data_path.rst", "generated/mne.decimate_surface.rst", "generated/mne.decoding.CSP.rst", "generated/mne.decoding.EMS.rst", "generated/mne.decoding.FilterEstimator.rst", "generated/mne.decoding.GeneralizingEstimator.rst", "generated/mne.decoding.LinearModel.rst", "generated/mne.decoding.PSDEstimator.rst", "generated/mne.decoding.ReceptiveField.rst", "generated/mne.decoding.SPoC.rst", "generated/mne.decoding.SSD.rst", "generated/mne.decoding.Scaler.rst", "generated/mne.decoding.SlidingEstimator.rst", "generated/mne.decoding.TemporalFilter.rst", "generated/mne.decoding.TimeDelayingRidge.rst", "generated/mne.decoding.TimeFrequency.rst", "generated/mne.decoding.UnsupervisedSpatialFilter.rst", "generated/mne.decoding.Vectorizer.rst", "generated/mne.decoding.compute_ems.rst", "generated/mne.decoding.cross_val_multiscore.rst", "generated/mne.decoding.get_coef.rst", "generated/mne.dig_mri_distances.rst", "generated/mne.dipole.get_phantom_dipoles.rst", "generated/mne.epochs.average_movements.rst", "generated/mne.epochs.combine_event_ids.rst", "generated/mne.epochs.equalize_epoch_counts.rst", "generated/mne.epochs.make_metadata.rst", "generated/mne.equalize_channels.rst", "generated/mne.event.define_target_events.rst", "generated/mne.event.match_event_names.rst", "generated/mne.event.shift_time_events.rst", "generated/mne.events_from_annotations.rst", "generated/mne.export.export_epochs.rst", "generated/mne.export.export_evokeds.rst", "generated/mne.export.export_evokeds_mff.rst", "generated/mne.export.export_raw.rst", "generated/mne.extract_label_time_course.rst", "generated/mne.filter.construct_iir_filter.rst", "generated/mne.filter.create_filter.rst", "generated/mne.filter.estimate_ringing_samples.rst", "generated/mne.filter.filter_data.rst", "generated/mne.filter.notch_filter.rst", "generated/mne.filter.resample.rst", "generated/mne.find_events.rst", "generated/mne.find_stim_steps.rst", "generated/mne.fit_dipole.rst", "generated/mne.forward.compute_depth_prior.rst", "generated/mne.forward.compute_orient_prior.rst", "generated/mne.forward.restrict_forward_to_label.rst", "generated/mne.forward.restrict_forward_to_stc.rst", "generated/mne.get_config.rst", "generated/mne.get_config_path.rst", "generated/mne.get_head_surf.rst", "generated/mne.get_meg_helmet_surf.rst", "generated/mne.get_montage_volume_labels.rst", "generated/mne.get_volume_labels_from_aseg.rst", "generated/mne.get_volume_labels_from_src.rst", "generated/mne.grade_to_tris.rst", "generated/mne.grade_to_vertices.rst", "generated/mne.grand_average.rst", "generated/mne.grow_labels.rst", "generated/mne.gui.coregistration.rst", "generated/mne.gui.locate_ieeg.rst", "generated/mne.head_to_mni.rst", "generated/mne.head_to_mri.rst", "generated/mne.inverse_sparse.gamma_map.rst", "generated/mne.inverse_sparse.make_stc_from_dipoles.rst", "generated/mne.inverse_sparse.mixed_norm.rst", "generated/mne.inverse_sparse.tf_mixed_norm.rst", "generated/mne.io.BaseRaw.rst", "generated/mne.io.Raw.rst", "generated/mne.io.RawArray.rst", "generated/mne.io.anonymize_info.rst", "generated/mne.io.kit.read_mrk.rst", "generated/mne.io.read_fiducials.rst", "generated/mne.io.read_info.rst", "generated/mne.io.read_raw.rst", "generated/mne.io.read_raw_artemis123.rst", "generated/mne.io.read_raw_bdf.rst", "generated/mne.io.read_raw_boxy.rst", "generated/mne.io.read_raw_brainvision.rst", "generated/mne.io.read_raw_bti.rst", "generated/mne.io.read_raw_cnt.rst", "generated/mne.io.read_raw_ctf.rst", "generated/mne.io.read_raw_curry.rst", "generated/mne.io.read_raw_edf.rst", "generated/mne.io.read_raw_eeglab.rst", "generated/mne.io.read_raw_egi.rst", "generated/mne.io.read_raw_eximia.rst", "generated/mne.io.read_raw_fieldtrip.rst", "generated/mne.io.read_raw_fif.rst", "generated/mne.io.read_raw_fil.rst", "generated/mne.io.read_raw_gdf.rst", "generated/mne.io.read_raw_hitachi.rst", "generated/mne.io.read_raw_kit.rst", "generated/mne.io.read_raw_nedf.rst", "generated/mne.io.read_raw_nicolet.rst", "generated/mne.io.read_raw_nihon.rst", "generated/mne.io.read_raw_nirx.rst", "generated/mne.io.read_raw_persyst.rst", "generated/mne.io.read_raw_snirf.rst", "generated/mne.io.show_fiff.rst", "generated/mne.io.write_fiducials.rst", "generated/mne.label.select_sources.rst", "generated/mne.label_sign_flip.rst", "generated/mne.labels_to_stc.rst", "generated/mne.make_ad_hoc_cov.rst", "generated/mne.make_bem_model.rst", "generated/mne.make_bem_solution.rst", "generated/mne.make_field_map.rst", "generated/mne.make_fixed_length_epochs.rst", "generated/mne.make_fixed_length_events.rst", "generated/mne.make_forward_dipole.rst", "generated/mne.make_forward_solution.rst", "generated/mne.make_sphere_model.rst", "generated/mne.merge_events.rst", "generated/mne.minimum_norm.InverseOperator.rst", "generated/mne.minimum_norm.apply_inverse.rst", "generated/mne.minimum_norm.apply_inverse_cov.rst", "generated/mne.minimum_norm.apply_inverse_epochs.rst", "generated/mne.minimum_norm.apply_inverse_raw.rst", "generated/mne.minimum_norm.apply_inverse_tfr_epochs.rst", "generated/mne.minimum_norm.compute_rank_inverse.rst", "generated/mne.minimum_norm.compute_source_psd.rst", "generated/mne.minimum_norm.compute_source_psd_epochs.rst", "generated/mne.minimum_norm.estimate_snr.rst", "generated/mne.minimum_norm.get_cross_talk.rst", "generated/mne.minimum_norm.get_point_spread.rst", "generated/mne.minimum_norm.make_inverse_operator.rst", "generated/mne.minimum_norm.make_inverse_resolution_matrix.rst", "generated/mne.minimum_norm.prepare_inverse_operator.rst", "generated/mne.minimum_norm.read_inverse_operator.rst", "generated/mne.minimum_norm.resolution_metrics.rst", "generated/mne.minimum_norm.source_band_induced_power.rst", "generated/mne.minimum_norm.source_induced_power.rst", "generated/mne.minimum_norm.write_inverse_operator.rst", "generated/mne.morph_labels.rst", "generated/mne.morph_source_spaces.rst", "generated/mne.open_docs.rst", "generated/mne.open_report.rst", "generated/mne.parse_config.rst", "generated/mne.pick_channels.rst", "generated/mne.pick_channels_cov.rst", "generated/mne.pick_channels_forward.rst", "generated/mne.pick_channels_regexp.rst", "generated/mne.pick_events.rst", "generated/mne.pick_info.rst", "generated/mne.pick_types.rst", "generated/mne.pick_types_forward.rst", "generated/mne.preprocessing.EOGRegression.rst", "generated/mne.preprocessing.ICA.rst", "generated/mne.preprocessing.Xdawn.rst", "generated/mne.preprocessing.annotate_amplitude.rst", "generated/mne.preprocessing.annotate_break.rst", "generated/mne.preprocessing.annotate_movement.rst", "generated/mne.preprocessing.annotate_muscle_zscore.rst", "generated/mne.preprocessing.annotate_nan.rst", "generated/mne.preprocessing.compute_average_dev_head_t.rst", "generated/mne.preprocessing.compute_bridged_electrodes.rst", "generated/mne.preprocessing.compute_current_source_density.rst", "generated/mne.preprocessing.compute_fine_calibration.rst", "generated/mne.preprocessing.compute_maxwell_basis.rst", "generated/mne.preprocessing.compute_proj_ecg.rst", "generated/mne.preprocessing.compute_proj_eog.rst", "generated/mne.preprocessing.corrmap.rst", "generated/mne.preprocessing.cortical_signal_suppression.rst", "generated/mne.preprocessing.create_ecg_epochs.rst", "generated/mne.preprocessing.create_eog_epochs.rst", "generated/mne.preprocessing.equalize_bads.rst", "generated/mne.preprocessing.find_bad_channels_maxwell.rst", "generated/mne.preprocessing.find_ecg_events.rst", "generated/mne.preprocessing.find_eog_events.rst", "generated/mne.preprocessing.fix_stim_artifact.rst", "generated/mne.preprocessing.ica_find_ecg_events.rst", "generated/mne.preprocessing.ica_find_eog_events.rst", "generated/mne.preprocessing.ieeg.project_sensors_onto_brain.rst", "generated/mne.preprocessing.infomax.rst", "generated/mne.preprocessing.interpolate_bridged_electrodes.rst", "generated/mne.preprocessing.maxwell_filter.rst", "generated/mne.preprocessing.maxwell_filter_prepare_emptyroom.rst", "generated/mne.preprocessing.nirs.beer_lambert_law.rst", "generated/mne.preprocessing.nirs.optical_density.rst", "generated/mne.preprocessing.nirs.scalp_coupling_index.rst", "generated/mne.preprocessing.nirs.short_channels.rst", "generated/mne.preprocessing.nirs.source_detector_distances.rst", "generated/mne.preprocessing.nirs.temporal_derivative_distribution_repair.rst", "generated/mne.preprocessing.oversampled_temporal_projection.rst", "generated/mne.preprocessing.peak_finder.rst", "generated/mne.preprocessing.read_eog_regression.rst", "generated/mne.preprocessing.read_fine_calibration.rst", "generated/mne.preprocessing.read_ica.rst", "generated/mne.preprocessing.read_ica_eeglab.rst", "generated/mne.preprocessing.realign_raw.rst", "generated/mne.preprocessing.regress_artifact.rst", "generated/mne.preprocessing.write_fine_calibration.rst", "generated/mne.random_parcellation.rst", "generated/mne.read_annotations.rst", "generated/mne.read_bem_solution.rst", "generated/mne.read_bem_surfaces.rst", "generated/mne.read_cov.rst", "generated/mne.read_dipole.rst", "generated/mne.read_epochs.rst", "generated/mne.read_epochs_eeglab.rst", "generated/mne.read_epochs_fieldtrip.rst", "generated/mne.read_epochs_kit.rst", "generated/mne.read_events.rst", "generated/mne.read_evoked_besa.rst", "generated/mne.read_evoked_fieldtrip.rst", "generated/mne.read_evokeds.rst", "generated/mne.read_evokeds_mff.rst", "generated/mne.read_forward_solution.rst", "generated/mne.read_freesurfer_lut.rst", "generated/mne.read_label.rst", "generated/mne.read_labels_from_annot.rst", "generated/mne.read_lta.rst", "generated/mne.read_morph_map.rst", "generated/mne.read_proj.rst", "generated/mne.read_reject_parameters.rst", "generated/mne.read_source_estimate.rst", "generated/mne.read_source_morph.rst", "generated/mne.read_source_spaces.rst", "generated/mne.read_surface.rst", "generated/mne.read_talxfm.rst", "generated/mne.read_trans.rst", "generated/mne.read_tri.rst", "generated/mne.read_vectorview_selection.rst", "generated/mne.rename_channels.rst", "generated/mne.scale_bem.rst", "generated/mne.scale_labels.rst", "generated/mne.scale_mri.rst", "generated/mne.scale_source_space.rst", "generated/mne.sensitivity_map.rst", "generated/mne.set_bipolar_reference.rst", "generated/mne.set_cache_dir.rst", "generated/mne.set_config.rst", "generated/mne.set_eeg_reference.rst", "generated/mne.set_log_file.rst", "generated/mne.set_log_level.rst", "generated/mne.setup_source_space.rst", "generated/mne.setup_volume_source_space.rst", "generated/mne.simulation.SourceSimulator.rst", "generated/mne.simulation.add_chpi.rst", "generated/mne.simulation.add_ecg.rst", "generated/mne.simulation.add_eog.rst", "generated/mne.simulation.add_noise.rst", "generated/mne.simulation.metrics.cosine_score.rst", "generated/mne.simulation.metrics.f1_score.rst", "generated/mne.simulation.metrics.peak_position_error.rst", "generated/mne.simulation.metrics.precision_score.rst", "generated/mne.simulation.metrics.recall_score.rst", "generated/mne.simulation.metrics.region_localization_error.rst", "generated/mne.simulation.metrics.roc_auc_score.rst", "generated/mne.simulation.metrics.spatial_deviation_error.rst", "generated/mne.simulation.select_source_in_label.rst", "generated/mne.simulation.simulate_evoked.rst", "generated/mne.simulation.simulate_raw.rst", "generated/mne.simulation.simulate_sparse_stc.rst", "generated/mne.simulation.simulate_stc.rst", "generated/mne.source_space.compute_distance_to_sensors.rst", "generated/mne.source_space.get_decimated_surfaces.rst", "generated/mne.spatial_dist_adjacency.rst", "generated/mne.spatial_inter_hemi_adjacency.rst", "generated/mne.spatial_src_adjacency.rst", "generated/mne.spatial_tris_adjacency.rst", "generated/mne.spatio_temporal_dist_adjacency.rst", "generated/mne.spatio_temporal_src_adjacency.rst", "generated/mne.spatio_temporal_tris_adjacency.rst", "generated/mne.split_label.rst", "generated/mne.stats.bonferroni_correction.rst", "generated/mne.stats.bootstrap_confidence_interval.rst", "generated/mne.stats.combine_adjacency.rst", "generated/mne.stats.f_mway_rm.rst", "generated/mne.stats.f_oneway.rst", "generated/mne.stats.f_threshold_mway_rm.rst", "generated/mne.stats.fdr_correction.rst", "generated/mne.stats.linear_regression.rst", "generated/mne.stats.linear_regression_raw.rst", "generated/mne.stats.permutation_cluster_1samp_test.rst", "generated/mne.stats.permutation_cluster_test.rst", "generated/mne.stats.permutation_t_test.rst", "generated/mne.stats.spatio_temporal_cluster_1samp_test.rst", "generated/mne.stats.spatio_temporal_cluster_test.rst", "generated/mne.stats.summarize_clusters_stc.rst", "generated/mne.stats.ttest_1samp_no_p.rst", "generated/mne.stats.ttest_ind_no_p.rst", "generated/mne.stc_near_sensors.rst", "generated/mne.stc_to_label.rst", "generated/mne.surface.complete_surface_info.rst", "generated/mne.surface.read_curvature.rst", "generated/mne.sys_info.rst", "generated/mne.time_frequency.AverageTFR.rst", "generated/mne.time_frequency.CrossSpectralDensity.rst", "generated/mne.time_frequency.EpochsSpectrum.rst", "generated/mne.time_frequency.EpochsTFR.rst", "generated/mne.time_frequency.Spectrum.rst", "generated/mne.time_frequency.csd_array_fourier.rst", "generated/mne.time_frequency.csd_array_morlet.rst", "generated/mne.time_frequency.csd_array_multitaper.rst", "generated/mne.time_frequency.csd_fourier.rst", "generated/mne.time_frequency.csd_morlet.rst", "generated/mne.time_frequency.csd_multitaper.rst", "generated/mne.time_frequency.csd_tfr.rst", "generated/mne.time_frequency.dpss_windows.rst", "generated/mne.time_frequency.fit_iir_model_raw.rst", "generated/mne.time_frequency.fwhm.rst", "generated/mne.time_frequency.istft.rst", "generated/mne.time_frequency.morlet.rst", "generated/mne.time_frequency.pick_channels_csd.rst", "generated/mne.time_frequency.psd_array_multitaper.rst", "generated/mne.time_frequency.psd_array_welch.rst", "generated/mne.time_frequency.read_csd.rst", "generated/mne.time_frequency.read_spectrum.rst", "generated/mne.time_frequency.read_tfrs.rst", "generated/mne.time_frequency.stft.rst", "generated/mne.time_frequency.stftfreq.rst", "generated/mne.time_frequency.tfr.cwt.rst", "generated/mne.time_frequency.tfr.morlet.rst", "generated/mne.time_frequency.tfr_array_morlet.rst", "generated/mne.time_frequency.tfr_array_multitaper.rst", "generated/mne.time_frequency.tfr_array_stockwell.rst", "generated/mne.time_frequency.tfr_morlet.rst", "generated/mne.time_frequency.tfr_multitaper.rst", "generated/mne.time_frequency.tfr_stockwell.rst", "generated/mne.time_frequency.write_tfrs.rst", "generated/mne.transform_surface_to.rst", "generated/mne.transforms.Transform.rst", "generated/mne.transforms.apply_volume_registration.rst", "generated/mne.transforms.compute_volume_registration.rst", "generated/mne.transforms.quat_to_rot.rst", "generated/mne.transforms.read_ras_mni_t.rst", "generated/mne.transforms.rot_to_quat.rst", "generated/mne.use_coil_def.rst", "generated/mne.use_log_level.rst", "generated/mne.utils.deprecated.rst", "generated/mne.utils.warn.rst", "generated/mne.verbose.rst", "generated/mne.vertex_to_mni.rst", "generated/mne.viz.Brain.rst", "generated/mne.viz.ClickableImage.rst", "generated/mne.viz.Figure3D.rst", "generated/mne.viz.add_background_image.rst", "generated/mne.viz.centers_to_edges.rst", "generated/mne.viz.circular_layout.rst", "generated/mne.viz.close_3d_figure.rst", "generated/mne.viz.close_all_3d_figures.rst", "generated/mne.viz.compare_fiff.rst", "generated/mne.viz.create_3d_figure.rst", "generated/mne.viz.get_3d_backend.rst", "generated/mne.viz.get_brain_class.rst", "generated/mne.viz.get_browser_backend.rst", "generated/mne.viz.iter_topography.rst", "generated/mne.viz.link_brains.rst", "generated/mne.viz.mne_analyze_colormap.rst", "generated/mne.viz.plot_alignment.rst", "generated/mne.viz.plot_arrowmap.rst", "generated/mne.viz.plot_bem.rst", "generated/mne.viz.plot_brain_colorbar.rst", "generated/mne.viz.plot_bridged_electrodes.rst", "generated/mne.viz.plot_ch_adjacency.rst", "generated/mne.viz.plot_channel_labels_circle.rst", "generated/mne.viz.plot_chpi_snr.rst", "generated/mne.viz.plot_compare_evokeds.rst", "generated/mne.viz.plot_cov.rst", "generated/mne.viz.plot_csd.rst", "generated/mne.viz.plot_dipole_amplitudes.rst", "generated/mne.viz.plot_dipole_locations.rst", "generated/mne.viz.plot_drop_log.rst", "generated/mne.viz.plot_epochs.rst", "generated/mne.viz.plot_epochs_image.rst", "generated/mne.viz.plot_epochs_psd_topomap.rst", "generated/mne.viz.plot_events.rst", "generated/mne.viz.plot_evoked.rst", "generated/mne.viz.plot_evoked_field.rst", "generated/mne.viz.plot_evoked_image.rst", "generated/mne.viz.plot_evoked_joint.rst", "generated/mne.viz.plot_evoked_topo.rst", "generated/mne.viz.plot_evoked_topomap.rst", "generated/mne.viz.plot_evoked_white.rst", "generated/mne.viz.plot_filter.rst", "generated/mne.viz.plot_head_positions.rst", "generated/mne.viz.plot_ica_components.rst", "generated/mne.viz.plot_ica_overlay.rst", "generated/mne.viz.plot_ica_properties.rst", "generated/mne.viz.plot_ica_scores.rst", "generated/mne.viz.plot_ica_sources.rst", "generated/mne.viz.plot_ideal_filter.rst", "generated/mne.viz.plot_layout.rst", "generated/mne.viz.plot_montage.rst", "generated/mne.viz.plot_projs_joint.rst", "generated/mne.viz.plot_projs_topomap.rst", "generated/mne.viz.plot_raw.rst", "generated/mne.viz.plot_raw_psd.rst", "generated/mne.viz.plot_regression_weights.rst", "generated/mne.viz.plot_sensors.rst", "generated/mne.viz.plot_snr_estimate.rst", "generated/mne.viz.plot_source_estimates.rst", "generated/mne.viz.plot_sparse_source_estimates.rst", "generated/mne.viz.plot_tfr_topomap.rst", "generated/mne.viz.plot_topo_image_epochs.rst", "generated/mne.viz.plot_topomap.rst", "generated/mne.viz.plot_vector_source_estimates.rst", "generated/mne.viz.plot_volume_source_estimates.rst", "generated/mne.viz.set_3d_backend.rst", "generated/mne.viz.set_3d_options.rst", "generated/mne.viz.set_3d_title.rst", "generated/mne.viz.set_3d_view.rst", "generated/mne.viz.set_browser_backend.rst", "generated/mne.viz.snapshot_brain_montage.rst", "generated/mne.viz.use_3d_backend.rst", "generated/mne.viz.use_browser_backend.rst", "generated/mne.warp_montage_volume.rst", "generated/mne.what.rst", "generated/mne.write_bem_solution.rst", "generated/mne.write_bem_surfaces.rst", "generated/mne.write_cov.rst", "generated/mne.write_events.rst", "generated/mne.write_evokeds.rst", "generated/mne.write_forward_solution.rst", "generated/mne.write_head_bem.rst", "generated/mne.write_label.rst", "generated/mne.write_labels_to_annot.rst", "generated/mne.write_proj.rst", "generated/mne.write_source_spaces.rst", "generated/mne.write_surface.rst", "generated/mne.write_trans.rst", "glossary.rst", "index.rst", "install/advanced.rst", "install/check_installation.rst", "install/contributing.rst", "install/freesurfer.rst", "install/index.rst", "install/installers.rst", "install/manual_install.rst", "install/manual_install_python.rst", "install/mne_c.rst", "install/mne_tools_suite.rst", "install/updating.rst", "inverse.rst", "logging.rst", "martinos.rst", "mne_cpp.rst", "most_used_classes.rst", "mri.rst", "overview/cite.rst", "overview/cookbook.rst", "overview/datasets_index.rst", "overview/design_philosophy.rst", "overview/development.rst", "overview/faq.rst", "overview/get_help.rst", "overview/governance.rst", "overview/implementation.rst", "overview/index.rst", "overview/learn_python.rst", "overview/matlab.rst", "overview/migrating.rst", "overview/people.rst", "overview/roadmap.rst", "preprocessing.rst", "python_reference.rst", "reading_raw_data.rst", "realtime.rst", "report.rst", "sensor_space.rst", "simulation.rst", "source_space.rst", "statistics.rst", "time_frequency.rst", "visualization.rst", "whats_new.rst"], "titles": ["Connectivity Analysis Examples", "Brainstorm raw (median nerve) dataset", "HF-SEF dataset", "Examples on open datasets", "Single trial linear regression analysis with the LIMO dataset", "Optically pumped magnetometer (OPM) data", "Computation times", "From raw data to dSPM on SPM Faces dataset", "Motor imagery decoding from EEG data using the Common Spatial Pattern (CSP)", "Decoding in time-frequency space using Common Spatial Patterns (CSP)", "Representational Similarity Analysis", "Decoding source space data", "Continuous Target Decoding with SPoC", "Decoding sensor space data with generalization across time and conditions", "Analysis of evoked response using ICA and PCA reduction techniques", "XDAWN Decoding From EEG data", "Compute effect-matched-spatial filtering (EMS)", "Machine Learning (Decoding, Encoding, and MVPA)", "Linear classifier on sensor data with plot patterns and filters", "Receptive Field Estimation and Prediction", "Computation times", "Compute Spectro-Spatial Decomposition (SSD) spatial filters", "Display sensitivity maps for EEG and MEG sensors", "Forward modeling", "Generate a left cerebellum volume source space", "Computation times", "Use source space morphing", "Examples Gallery", "Compute MNE-dSPM inverse solution on single epochs", "Compute sLORETA inverse solution on raw data", "Compute MNE-dSPM inverse solution on evoked data in volume source space", "Source localization with a custom inverse solver", "Compute source level time-frequency timecourses using a DICS beamformer", "Compute source power using DICS beamformer", "Compute evoked ERS source power using DICS, LCMV beamformer, and dSPM", "Compute a sparse inverse solution using the Gamma-MAP empirical Bayesian method", "Inverse problem and source analysis", "Extracting time course from source_estimate object", "Generate a functional label from source estimates", "Extracting the time series of activations in a label", "Compute sparse inverse solution with mixed norm: MxNE and irMxNE", "Compute MNE inverse solution on evoked data with a mixed source space", "Compute source power estimate by projecting the covariance with MNE", "Morph surface source estimate", "Morph volumetric source estimate", "Computing source timecourses with an XFit-like multi-dipole model", "Compute iterative reweighted TF-MxNE with multiscale time-frequency dictionary", "Visualize source leakage among labels using a circular graph", "Plot point-spread functions (PSFs) and cross-talk functions (CTFs)", "Compute cross-talk functions for LCMV beamformers", "Plot point-spread functions (PSFs) for a volume", "Compute Rap-Music on evoked data", "Reading an inverse operator", "Reading an STC file", "Compute spatial resolution metrics in source space", "Compute spatial resolution metrics to compare MEG with EEG+MEG", "Computation times", "Estimate data SNR using an inverse", "Computing source space SNR", "Compute MxNE with time-frequency sparse prior", "Plotting the full vector-valued MNE solution", "Getting averaging info from .fif files", "Input/Output", "How to use data in neural ensemble (NEO) format", "Reading/Writing a noise covariance matrix", "Reading XDF EEG data", "Computation times", "Cortical Signal Suppression (CSS) for removal of cortical signals", "Define target events based on time lag, plot evoked response", "Identify EEG Electrodes Bridged by too much Gel", "Transform EEG data using current source density (CSD)", "Show EOG artifact timing", "Reduce EOG artifacts through regression", "Find MEG reference channel artifacts", "Visualise NIRS artifact correction methods", "Compare the different ICA algorithms in MNE", "Preprocessing", "Interpolate bad channels for MEG/EEG channels", "Maxwell filter data with movement compensation", "Annotate movement artifacts and reestimate dev_head_t", "Annotate muscle artifacts", "Removing muscle ICA components", "Plot sensor denoising using oversampled temporal projection", "Computation times", "Shifting time-scale in evoked data", "Remap MEG channel types", "XDAWN Denoising", "Data Simulation", "Compare simulated and estimated source activity", "Computation times", "Generate simulated evoked data", "Generate simulated raw data", "Simulate raw data using subject anatomy", "Generate simulated source data", "Permutation F-test on sensor data with 1D cluster level", "FDR correction on T-test on sensor data", "Statistics Examples", "Regression on continuous data (rER[P/F])", "Permutation T-test on sensor data", "Analysing continuous features with binning and regression in sensor space", "Computation times", "Compute a cross-spectral density (CSD) matrix", "Compute Power Spectral Density of inverse solution from single epochs", "Time-Frequency Examples", "Computation times", "Compute power and phase lock in label of the source space", "Compute source power spectral density (PSD) in a label", "Compute source power spectral density (PSD) of VectorView and OPM data", "Compute induced power in the source space with dSPM", "Temporal whitening with AR model", "Compute and visualize ERDS maps", "Explore event-related dynamics for specific frequency bands", "Time-frequency on simulated data (Multitaper vs. Morlet vs. Stockwell vs. Hilbert)", "How to convert 3D electrode positions to a 2D image", "Plotting with <code class=\"docutils literal notranslate\"><span class=\"pre\">mne.viz.Brain</span></code>", "Visualize channel over epochs as an image", "Plotting EEG sensors on the scalp", "Plotting topographic arrowmaps of evoked data", "Plotting topographic maps of evoked data", "Whitening evoked data with a noise covariance", "Visualization", "Plotting sensor layouts of MEG systems", "Plot the MNE brain and helmet", "Plotting sensor layouts of EEG systems", "Plot a cortical parcellation", "Make figures more publication ready", "Plot single trial activity, grouped by ROI and sorted by RT", "Show noise levels from empty room data", "Computation times", "Sensitivity map of SSP projections", "Compare evoked responses for different conditions", "Plot custom topographies for MEG sensors", "Cross-hemisphere comparison", "Locating intracranial electrode contacts", "Working with sEEG data", "Working with ECoG data", "Sleep stage classification from polysomnography (PSG) data", "Clinical applications", "Computation times", "The Epochs data structure: discontinuous data", "Regression-based baseline correction", "Visualizing epoched data", "Working with Epoch metadata", "Auto-generating Epochs metadata", "Exporting Epochs to Pandas DataFrames", "Divide continuous data into equally-spaced epochs", "Segmenting continuous data into epochs", "Computation times", "The Evoked data structure: evoked/averaged data", "Visualizing Evoked data", "EEG analysis - Event-Related Potentials (ERPs)", "Plotting whitened data", "Estimating evoked responses", "Computation times", "FreeSurfer MRI reconstruction", "Source alignment and coordinate frames", "Using an automated approach to coregistration", "Head model and forward computation", "EEG forward operator with a template MRI", "How MNE uses FreeSurfer\u2019s outputs", "Fixing BEM and head surfaces", "Computing a covariance matrix", "Forward models and source spaces", "Computation times", "Tutorials", "Overview of MEG/EEG analysis with MNE-Python", "Modifying data in-place", "Parsing events from raw data", "The Info data structure", "Working with sensor locations", "Configuring MNE-Python", "Getting started with mne.Report", "Introductory tutorials", "Computation times", "The SourceEstimate data structure", "Source localization with equivalent current dipole (ECD) fit", "Source localization with MNE, dSPM, sLORETA, and eLORETA", "The role of dipole orientations in distributed source localization", "Computing various MNE solutions", "Source reconstruction using an LCMV beamformer", "Visualize source time courses (stcs)", "EEG source localization given electrode locations on an MRI", "Brainstorm Elekta phantom dataset tutorial", "Brainstorm CTF phantom dataset tutorial", "4D Neuroimaging/BTi phantom dataset tutorial", "Source localization and inverses", "Computation times", "Importing data from MEG devices", "Importing data from EEG devices", "Importing data from fNIRS devices", "Working with CTF data: the Brainstorm auditory dataset", "Reading data for different recording systems", "Computation times", "Spectro-temporal receptive field (STRF) estimation on continuous data", "Decoding (MVPA)", "Machine learning models of neural activity", "Computation times", "Overview of artifact detection", "Handling bad channels", "Rejecting bad data spans and breaks", "Background information on filtering", "Filtering and resampling data", "Repairing artifacts with regression", "Repairing artifacts with ICA", "Background on projectors and projections", "Repairing artifacts with SSP", "Setting the EEG reference", "Extracting and visualizing subject head movement", "Signal-space separation (SSS) and Maxwell filtering", "Preprocessing functional near-infrared spectroscopy (fNIRS) data", "Preprocessing optically pumped magnetometer (OPM) MEG data", "Preprocessing", "Computation times", "The Raw data structure: continuous data", "Working with events", "Annotating continuous data", "Built-in plotting methods for Raw objects", "Working with continuous data", "Computation times", "Creating MNE-Python data structures from scratch", "Corrupt known signal with point spread", "DICS for power mapping", "Simulation", "Computation times", "Statistical inference", "Visualising statistical significance thresholds on EEG data", "Non-parametric 1 sample cluster statistic on single trial power", "Non-parametric between conditions cluster statistic on single trial power", "Mass-univariate twoway repeated measures ANOVA on single trial power", "Spatiotemporal permutation F-test on full sensor data", "Statistical analysis of sensor data", "Computation times", "Permutation t-test on source data with spatio-temporal clustering", "2 samples permutation test on source data with spatio-temporal clustering", "Repeated measures ANOVA on source data with spatio-temporal clustering", "Statistical analysis of source estimates", "Computation times", "The Spectrum and EpochsSpectrum classes: frequency-domain data", "Frequency and time-frequency sensor analysis", "Frequency-tagging: Basic analysis of an SSVEP/vSSR dataset", "Time-frequency analysis", "Computation times", "General bibliography", "Papers citing MNE-Python", "Connectivity Estimation", "Covariance computation", "Creating data objects from arrays", "Datasets", "Decoding", "Events", "Exporting", "File I/O", "Forward Modeling", "Funding and other support", "Command line tools using Python", "mne.AcqParserFIF", "mne.Annotations", "mne.BaseEpochs", "mne.BiHemiLabel", "mne.Covariance", "mne.Dipole", "mne.DipoleFixed", "mne.Epochs", "mne.EpochsArray", "mne.Evoked", "mne.EvokedArray", "mne.Forward", "mne.Info", "mne.Label", "mne.MixedSourceEstimate", "mne.MixedVectorSourceEstimate", "mne.Projection", "mne.Report", "mne.SourceEstimate", "mne.SourceMorph", "mne.SourceSpaces", "mne.VectorSourceEstimate", "mne.VolSourceEstimate", "mne.VolVectorSourceEstimate", "mne.add_reference_channels", "mne.add_source_space_distances", "mne.annotations_from_events", "mne.apply_forward", "mne.apply_forward_raw", "mne.average_forward_solutions", "mne.baseline.rescale", "mne.beamformer.Beamformer", "mne.beamformer.apply_dics", "mne.beamformer.apply_dics_csd", "mne.beamformer.apply_dics_epochs", "mne.beamformer.apply_dics_tfr_epochs", "mne.beamformer.apply_lcmv", "mne.beamformer.apply_lcmv_cov", "mne.beamformer.apply_lcmv_epochs", "mne.beamformer.apply_lcmv_raw", "mne.beamformer.make_dics", "mne.beamformer.make_lcmv", "mne.beamformer.make_lcmv_resolution_matrix", "mne.beamformer.rap_music", "mne.beamformer.read_beamformer", "mne.bem.ConductorModel", "mne.bem.convert_flash_mris", "mne.bem.distance_to_bem", "mne.bem.fit_sphere_to_headshape", "mne.bem.get_fitting_dig", "mne.bem.make_flash_bem", "mne.bem.make_scalp_surfaces", "mne.bem.make_watershed_bem", "mne.channel_indices_by_type", "mne.channel_type", "mne.channels.DigMontage", "mne.channels.Layout", "mne.channels.combine_channels", "mne.channels.compute_dev_head_t", "mne.channels.compute_native_head_t", "mne.channels.equalize_channels", "mne.channels.find_ch_adjacency", "mne.channels.find_layout", "mne.channels.fix_mag_coil_types", "mne.channels.generate_2d_layout", "mne.channels.get_builtin_ch_adjacencies", "mne.channels.get_builtin_montages", "mne.channels.make_1020_channel_selections", "mne.channels.make_dig_montage", "mne.channels.make_eeg_layout", "mne.channels.make_grid_layout", "mne.channels.make_standard_montage", "mne.channels.read_ch_adjacency", "mne.channels.read_custom_montage", "mne.channels.read_dig_captrak", "mne.channels.read_dig_dat", "mne.channels.read_dig_egi", "mne.channels.read_dig_fif", "mne.channels.read_dig_hpts", "mne.channels.read_dig_localite", "mne.channels.read_dig_polhemus_isotrak", "mne.channels.read_layout", "mne.channels.read_polhemus_fastscan", "mne.channels.rename_channels", "mne.chpi.compute_chpi_amplitudes", "mne.chpi.compute_chpi_locs", "mne.chpi.compute_chpi_snr", "mne.chpi.compute_head_pos", "mne.chpi.extract_chpi_locs_ctf", "mne.chpi.extract_chpi_locs_kit", "mne.chpi.filter_chpi", "mne.chpi.get_active_chpi", "mne.chpi.get_chpi_info", "mne.chpi.head_pos_to_trans_rot_t", "mne.chpi.read_head_pos", "mne.chpi.write_head_pos", "mne.combine_evoked", "mne.compute_covariance", "mne.compute_proj_epochs", "mne.compute_proj_evoked", "mne.compute_proj_raw", "mne.compute_rank", "mne.compute_raw_covariance", "mne.compute_source_morph", "mne.concatenate_epochs", "mne.concatenate_events", "mne.concatenate_raws", "mne.convert_forward_solution", "mne.coreg.Coregistration", "mne.coreg.estimate_head_mri_t", "mne.coreg.get_mni_fiducials", "mne.cov.compute_whitener", "mne.cov.prepare_noise_cov", "mne.cov.regularize", "mne.create_default_subject", "mne.create_info", "mne.cuda.get_cuda_memory", "mne.cuda.init_cuda", "mne.cuda.set_cuda_device", "mne.datasets.brainstorm.bst_auditory.data_path", "mne.datasets.brainstorm.bst_raw.data_path", "mne.datasets.brainstorm.bst_resting.data_path", "mne.datasets.eegbci.load_data", "mne.datasets.eegbci.standardize", "mne.datasets.epilepsy_ecog.data_path", "mne.datasets.erp_core.data_path", "mne.datasets.fetch_aparc_sub_parcellation", "mne.datasets.fetch_dataset", "mne.datasets.fetch_fsaverage", "mne.datasets.fetch_hcp_mmp_parcellation", "mne.datasets.fetch_infant_template", "mne.datasets.fetch_phantom", "mne.datasets.fnirs_motor.data_path", "mne.datasets.has_dataset", "mne.datasets.hf_sef.data_path", "mne.datasets.kiloword.data_path", "mne.datasets.limo.load_data", "mne.datasets.misc.data_path", "mne.datasets.mtrf.data_path", "mne.datasets.multimodal.data_path", "mne.datasets.opm.data_path", "mne.datasets.phantom_4dbti.data_path", "mne.datasets.refmeg_noise.data_path", "mne.datasets.sample.data_path", "mne.datasets.sleep_physionet.age.fetch_data", "mne.datasets.sleep_physionet.temazepam.fetch_data", "mne.datasets.somato.data_path", "mne.datasets.spm_face.data_path", "mne.datasets.ssvep.data_path", "mne.datasets.ucl_opm_auditory.data_path", "mne.datasets.visual_92_categories.data_path", "mne.decimate_surface", "mne.decoding.CSP", "mne.decoding.EMS", "mne.decoding.FilterEstimator", "mne.decoding.GeneralizingEstimator", "mne.decoding.LinearModel", "mne.decoding.PSDEstimator", "mne.decoding.ReceptiveField", "mne.decoding.SPoC", "mne.decoding.SSD", "mne.decoding.Scaler", "mne.decoding.SlidingEstimator", "mne.decoding.TemporalFilter", "mne.decoding.TimeDelayingRidge", "mne.decoding.TimeFrequency", "mne.decoding.UnsupervisedSpatialFilter", "mne.decoding.Vectorizer", "mne.decoding.compute_ems", "mne.decoding.cross_val_multiscore", "mne.decoding.get_coef", "mne.dig_mri_distances", "mne.dipole.get_phantom_dipoles", "mne.epochs.average_movements", "mne.epochs.combine_event_ids", "mne.epochs.equalize_epoch_counts", "mne.epochs.make_metadata", "mne.equalize_channels", "mne.event.define_target_events", "mne.event.match_event_names", "mne.event.shift_time_events", "mne.events_from_annotations", "mne.export.export_epochs", "mne.export.export_evokeds", "mne.export.export_evokeds_mff", "mne.export.export_raw", "mne.extract_label_time_course", "mne.filter.construct_iir_filter", "mne.filter.create_filter", "mne.filter.estimate_ringing_samples", "mne.filter.filter_data", "mne.filter.notch_filter", "mne.filter.resample", "mne.find_events", "mne.find_stim_steps", "mne.fit_dipole", "mne.forward.compute_depth_prior", "mne.forward.compute_orient_prior", "mne.forward.restrict_forward_to_label", "mne.forward.restrict_forward_to_stc", "mne.get_config", "mne.get_config_path", "mne.get_head_surf", "mne.get_meg_helmet_surf", "mne.get_montage_volume_labels", "mne.get_volume_labels_from_aseg", "mne.get_volume_labels_from_src", "mne.grade_to_tris", "mne.grade_to_vertices", "mne.grand_average", "mne.grow_labels", "mne.gui.coregistration", "mne.gui.locate_ieeg", "mne.head_to_mni", "mne.head_to_mri", "mne.inverse_sparse.gamma_map", "mne.inverse_sparse.make_stc_from_dipoles", "mne.inverse_sparse.mixed_norm", "mne.inverse_sparse.tf_mixed_norm", "mne.io.BaseRaw", "mne.io.Raw", "mne.io.RawArray", "mne.io.anonymize_info", "mne.io.kit.read_mrk", "mne.io.read_fiducials", "mne.io.read_info", "mne.io.read_raw", "mne.io.read_raw_artemis123", "mne.io.read_raw_bdf", "mne.io.read_raw_boxy", "mne.io.read_raw_brainvision", "mne.io.read_raw_bti", "mne.io.read_raw_cnt", "mne.io.read_raw_ctf", "mne.io.read_raw_curry", "mne.io.read_raw_edf", "mne.io.read_raw_eeglab", "mne.io.read_raw_egi", "mne.io.read_raw_eximia", "mne.io.read_raw_fieldtrip", "mne.io.read_raw_fif", "mne.io.read_raw_fil", "mne.io.read_raw_gdf", "mne.io.read_raw_hitachi", "mne.io.read_raw_kit", "mne.io.read_raw_nedf", "mne.io.read_raw_nicolet", "mne.io.read_raw_nihon", "mne.io.read_raw_nirx", "mne.io.read_raw_persyst", "mne.io.read_raw_snirf", "mne.io.show_fiff", "mne.io.write_fiducials", "mne.label.select_sources", "mne.label_sign_flip", "mne.labels_to_stc", "mne.make_ad_hoc_cov", "mne.make_bem_model", "mne.make_bem_solution", "mne.make_field_map", "mne.make_fixed_length_epochs", "mne.make_fixed_length_events", "mne.make_forward_dipole", "mne.make_forward_solution", "mne.make_sphere_model", "mne.merge_events", "mne.minimum_norm.InverseOperator", "mne.minimum_norm.apply_inverse", "mne.minimum_norm.apply_inverse_cov", "mne.minimum_norm.apply_inverse_epochs", "mne.minimum_norm.apply_inverse_raw", "mne.minimum_norm.apply_inverse_tfr_epochs", "mne.minimum_norm.compute_rank_inverse", "mne.minimum_norm.compute_source_psd", "mne.minimum_norm.compute_source_psd_epochs", "mne.minimum_norm.estimate_snr", "mne.minimum_norm.get_cross_talk", "mne.minimum_norm.get_point_spread", "mne.minimum_norm.make_inverse_operator", "mne.minimum_norm.make_inverse_resolution_matrix", "mne.minimum_norm.prepare_inverse_operator", "mne.minimum_norm.read_inverse_operator", "mne.minimum_norm.resolution_metrics", "mne.minimum_norm.source_band_induced_power", "mne.minimum_norm.source_induced_power", "mne.minimum_norm.write_inverse_operator", "mne.morph_labels", "mne.morph_source_spaces", "mne.open_docs", "mne.open_report", "mne.parse_config", "mne.pick_channels", "mne.pick_channels_cov", "mne.pick_channels_forward", "mne.pick_channels_regexp", "mne.pick_events", "mne.pick_info", "mne.pick_types", "mne.pick_types_forward", "mne.preprocessing.EOGRegression", "mne.preprocessing.ICA", "mne.preprocessing.Xdawn", "mne.preprocessing.annotate_amplitude", "mne.preprocessing.annotate_break", "mne.preprocessing.annotate_movement", "mne.preprocessing.annotate_muscle_zscore", "mne.preprocessing.annotate_nan", "mne.preprocessing.compute_average_dev_head_t", "mne.preprocessing.compute_bridged_electrodes", "mne.preprocessing.compute_current_source_density", "mne.preprocessing.compute_fine_calibration", "mne.preprocessing.compute_maxwell_basis", "mne.preprocessing.compute_proj_ecg", "mne.preprocessing.compute_proj_eog", "mne.preprocessing.corrmap", "mne.preprocessing.cortical_signal_suppression", "mne.preprocessing.create_ecg_epochs", "mne.preprocessing.create_eog_epochs", "mne.preprocessing.equalize_bads", "mne.preprocessing.find_bad_channels_maxwell", "mne.preprocessing.find_ecg_events", "mne.preprocessing.find_eog_events", "mne.preprocessing.fix_stim_artifact", "mne.preprocessing.ica_find_ecg_events", "mne.preprocessing.ica_find_eog_events", "mne.preprocessing.ieeg.project_sensors_onto_brain", "mne.preprocessing.infomax", "mne.preprocessing.interpolate_bridged_electrodes", "mne.preprocessing.maxwell_filter", "mne.preprocessing.maxwell_filter_prepare_emptyroom", "mne.preprocessing.nirs.beer_lambert_law", "mne.preprocessing.nirs.optical_density", "mne.preprocessing.nirs.scalp_coupling_index", "mne.preprocessing.nirs.short_channels", "mne.preprocessing.nirs.source_detector_distances", "mne.preprocessing.nirs.temporal_derivative_distribution_repair", "mne.preprocessing.oversampled_temporal_projection", "mne.preprocessing.peak_finder", "mne.preprocessing.read_eog_regression", "mne.preprocessing.read_fine_calibration", "mne.preprocessing.read_ica", "mne.preprocessing.read_ica_eeglab", "mne.preprocessing.realign_raw", "mne.preprocessing.regress_artifact", "mne.preprocessing.write_fine_calibration", "mne.random_parcellation", "mne.read_annotations", "mne.read_bem_solution", "mne.read_bem_surfaces", "mne.read_cov", "mne.read_dipole", "mne.read_epochs", "mne.read_epochs_eeglab", "mne.read_epochs_fieldtrip", "mne.read_epochs_kit", "mne.read_events", "mne.read_evoked_besa", "mne.read_evoked_fieldtrip", "mne.read_evokeds", "mne.read_evokeds_mff", "mne.read_forward_solution", "mne.read_freesurfer_lut", "mne.read_label", "mne.read_labels_from_annot", "mne.read_lta", "mne.read_morph_map", "mne.read_proj", "mne.read_reject_parameters", "mne.read_source_estimate", "mne.read_source_morph", "mne.read_source_spaces", "mne.read_surface", "mne.read_talxfm", "mne.read_trans", "mne.read_tri", "mne.read_vectorview_selection", "mne.rename_channels", "mne.scale_bem", "mne.scale_labels", "mne.scale_mri", "mne.scale_source_space", "mne.sensitivity_map", "mne.set_bipolar_reference", "mne.set_cache_dir", "mne.set_config", "mne.set_eeg_reference", "mne.set_log_file", "mne.set_log_level", "mne.setup_source_space", "mne.setup_volume_source_space", "mne.simulation.SourceSimulator", "mne.simulation.add_chpi", "mne.simulation.add_ecg", "mne.simulation.add_eog", "mne.simulation.add_noise", "mne.simulation.metrics.cosine_score", "mne.simulation.metrics.f1_score", "mne.simulation.metrics.peak_position_error", "mne.simulation.metrics.precision_score", "mne.simulation.metrics.recall_score", "mne.simulation.metrics.region_localization_error", "mne.simulation.metrics.roc_auc_score", "mne.simulation.metrics.spatial_deviation_error", "mne.simulation.select_source_in_label", "mne.simulation.simulate_evoked", "mne.simulation.simulate_raw", "mne.simulation.simulate_sparse_stc", "mne.simulation.simulate_stc", "mne.source_space.compute_distance_to_sensors", "mne.source_space.get_decimated_surfaces", "mne.spatial_dist_adjacency", "mne.spatial_inter_hemi_adjacency", "mne.spatial_src_adjacency", "mne.spatial_tris_adjacency", "mne.spatio_temporal_dist_adjacency", "mne.spatio_temporal_src_adjacency", "mne.spatio_temporal_tris_adjacency", "mne.split_label", "mne.stats.bonferroni_correction", "mne.stats.bootstrap_confidence_interval", "mne.stats.combine_adjacency", "mne.stats.f_mway_rm", "mne.stats.f_oneway", "mne.stats.f_threshold_mway_rm", "mne.stats.fdr_correction", "mne.stats.linear_regression", "mne.stats.linear_regression_raw", "mne.stats.permutation_cluster_1samp_test", "mne.stats.permutation_cluster_test", "mne.stats.permutation_t_test", "mne.stats.spatio_temporal_cluster_1samp_test", "mne.stats.spatio_temporal_cluster_test", "mne.stats.summarize_clusters_stc", "mne.stats.ttest_1samp_no_p", "mne.stats.ttest_ind_no_p", "mne.stc_near_sensors", "mne.stc_to_label", "mne.surface.complete_surface_info", "mne.surface.read_curvature", "mne.sys_info", "mne.time_frequency.AverageTFR", "mne.time_frequency.CrossSpectralDensity", "mne.time_frequency.EpochsSpectrum", "mne.time_frequency.EpochsTFR", "mne.time_frequency.Spectrum", "mne.time_frequency.csd_array_fourier", "mne.time_frequency.csd_array_morlet", "mne.time_frequency.csd_array_multitaper", "mne.time_frequency.csd_fourier", "mne.time_frequency.csd_morlet", "mne.time_frequency.csd_multitaper", "mne.time_frequency.csd_tfr", "mne.time_frequency.dpss_windows", "mne.time_frequency.fit_iir_model_raw", "mne.time_frequency.fwhm", "mne.time_frequency.istft", "mne.time_frequency.morlet", "mne.time_frequency.pick_channels_csd", "mne.time_frequency.psd_array_multitaper", "mne.time_frequency.psd_array_welch", "mne.time_frequency.read_csd", "mne.time_frequency.read_spectrum", "mne.time_frequency.read_tfrs", "mne.time_frequency.stft", "mne.time_frequency.stftfreq", "mne.time_frequency.tfr.cwt", "mne.time_frequency.tfr.morlet", "mne.time_frequency.tfr_array_morlet", "mne.time_frequency.tfr_array_multitaper", "mne.time_frequency.tfr_array_stockwell", "mne.time_frequency.tfr_morlet", "mne.time_frequency.tfr_multitaper", "mne.time_frequency.tfr_stockwell", "mne.time_frequency.write_tfrs", "mne.transform_surface_to", "mne.transforms.Transform", "mne.transforms.apply_volume_registration", "mne.transforms.compute_volume_registration", "mne.transforms.quat_to_rot", "mne.transforms.read_ras_mni_t", "mne.transforms.rot_to_quat", "mne.use_coil_def", "mne.use_log_level", "mne.utils.deprecated", "mne.utils.warn", "mne.verbose", "mne.vertex_to_mni", "mne.viz.Brain", "mne.viz.ClickableImage", "mne.viz.Figure3D", "mne.viz.add_background_image", "mne.viz.centers_to_edges", "mne.viz.circular_layout", "mne.viz.close_3d_figure", "mne.viz.close_all_3d_figures", "mne.viz.compare_fiff", "mne.viz.create_3d_figure", "mne.viz.get_3d_backend", "mne.viz.get_brain_class", "mne.viz.get_browser_backend", "mne.viz.iter_topography", "mne.viz.link_brains", "mne.viz.mne_analyze_colormap", "mne.viz.plot_alignment", "mne.viz.plot_arrowmap", "mne.viz.plot_bem", "mne.viz.plot_brain_colorbar", "mne.viz.plot_bridged_electrodes", "mne.viz.plot_ch_adjacency", "mne.viz.plot_channel_labels_circle", "mne.viz.plot_chpi_snr", "mne.viz.plot_compare_evokeds", "mne.viz.plot_cov", "mne.viz.plot_csd", "mne.viz.plot_dipole_amplitudes", "mne.viz.plot_dipole_locations", "mne.viz.plot_drop_log", "mne.viz.plot_epochs", "mne.viz.plot_epochs_image", "mne.viz.plot_epochs_psd_topomap", "mne.viz.plot_events", "mne.viz.plot_evoked", "mne.viz.plot_evoked_field", "mne.viz.plot_evoked_image", "mne.viz.plot_evoked_joint", "mne.viz.plot_evoked_topo", "mne.viz.plot_evoked_topomap", "mne.viz.plot_evoked_white", "mne.viz.plot_filter", "mne.viz.plot_head_positions", "mne.viz.plot_ica_components", "mne.viz.plot_ica_overlay", "mne.viz.plot_ica_properties", "mne.viz.plot_ica_scores", "mne.viz.plot_ica_sources", "mne.viz.plot_ideal_filter", "mne.viz.plot_layout", "mne.viz.plot_montage", "mne.viz.plot_projs_joint", "mne.viz.plot_projs_topomap", "mne.viz.plot_raw", "mne.viz.plot_raw_psd", "mne.viz.plot_regression_weights", "mne.viz.plot_sensors", "mne.viz.plot_snr_estimate", "mne.viz.plot_source_estimates", "mne.viz.plot_sparse_source_estimates", "mne.viz.plot_tfr_topomap", "mne.viz.plot_topo_image_epochs", "mne.viz.plot_topomap", "mne.viz.plot_vector_source_estimates", "mne.viz.plot_volume_source_estimates", "mne.viz.set_3d_backend", "mne.viz.set_3d_options", "mne.viz.set_3d_title", "mne.viz.set_3d_view", "mne.viz.set_browser_backend", "mne.viz.snapshot_brain_montage", "mne.viz.use_3d_backend", "mne.viz.use_browser_backend", "mne.warp_montage_volume", "mne.what", "mne.write_bem_solution", "mne.write_bem_surfaces", "mne.write_cov", "mne.write_events", "mne.write_evokeds", "mne.write_forward_solution", "mne.write_head_bem", "mne.write_label", "mne.write_labels_to_annot", "mne.write_proj", "mne.write_source_spaces", "mne.write_surface", "mne.write_trans", "Glossary", "MNE", "Advanced setup", "Testing your installation", "Contributing guide", "Installing FreeSurfer", "Installing MNE-Python", "MNE-Python installers", "Install via <code class=\"code docutils literal notranslate\"><span class=\"pre\">pip</span></code> or <code class=\"code docutils literal notranslate\"><span class=\"pre\">conda</span></code>", "Installing Python", "Installing MNE-C", "Overview of the MNE tools suite", "Updating MNE-Python", "Inverse Solutions", "Logging and Configuration", "Martinos Center setup", "MNE with CPP", "Most-used classes", "MRI Processing", "How to cite MNE-Python", "The typical M/EEG workflow", "Datasets Overview", "Design philosophy", "MNE-Python Development", "Frequently Asked Questions (FAQ)", "Getting help", "Project Governance", "Algorithms and other implementation details", "Documentation overview", "Getting started with Python", "MNE-MATLAB documentation", "Migrating from other analysis software", "Current steering council and institutional partners", "Roadmap", "Preprocessing", "Python API Reference", "Reading raw data", "Realtime", "MNE-Report", "Sensor Space Data", "Simulation", "Source Space Data", "Statistics", "Time-Frequency", "Visualization", "What\u2019s new"], "terms": {"3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874], "7": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874], "demonstr": [0, 5, 19, 27, 33, 41, 43, 44, 45, 63, 69, 70, 72, 78, 82, 97, 101, 112, 115, 144, 145, 150, 151, 160, 167, 169, 170, 171, 189, 193, 197, 199, 200, 202, 203, 206, 208, 213, 220, 221, 224, 232, 237, 571, 842, 851, 854, 857, 858, 875], "sensor": [0, 4, 5, 11, 15, 16, 17, 20, 23, 25, 27, 28, 32, 34, 41, 42, 45, 49, 67, 69, 70, 76, 77, 78, 83, 86, 88, 90, 92, 93, 96, 100, 101, 107, 117, 118, 120, 122, 125, 128, 130, 133, 143, 145, 149, 150, 155, 156, 157, 158, 161, 165, 167, 168, 171, 172, 173, 174, 175, 177, 179, 180, 181, 182, 183, 184, 185, 187, 190, 197, 198, 200, 202, 203, 204, 206, 207, 208, 213, 221, 224, 225, 226, 231, 237, 240, 241, 242, 255, 257, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 282, 283, 295, 296, 297, 303, 304, 308, 309, 310, 311, 316, 317, 318, 319, 321, 322, 324, 325, 326, 327, 336, 338, 340, 342, 347, 352, 353, 354, 355, 356, 362, 366, 367, 368, 370, 407, 408, 409, 410, 411, 414, 415, 416, 417, 422, 423, 425, 426, 427, 448, 450, 451, 458, 467, 474, 475, 476, 477, 480, 482, 485, 486, 488, 499, 511, 517, 518, 519, 523, 525, 528, 529, 533, 546, 551, 552, 554, 555, 556, 560, 566, 569, 580, 583, 588, 589, 591, 594, 606, 609, 610, 615, 628, 630, 631, 636, 647, 648, 659, 660, 663, 673, 675, 679, 680, 682, 683, 684, 685, 686, 690, 695, 696, 697, 698, 699, 725, 726, 727, 742, 755, 758, 759, 762, 763, 765, 766, 767, 768, 772, 774, 776, 777, 778, 780, 781, 782, 784, 785, 791, 794, 795, 797, 798, 802, 803, 804, 809, 810, 812, 815, 830, 835, 841, 850, 851, 852, 854, 860, 863, 864, 865, 875], "sourc": [0, 1, 2, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 28, 29, 35, 37, 40, 46, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 94, 95, 97, 98, 99, 101, 103, 104, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 156, 159, 160, 161, 163, 165, 166, 167, 168, 169, 170, 174, 178, 182, 183, 184, 186, 187, 188, 189, 190, 193, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 213, 214, 215, 216, 219, 221, 224, 225, 226, 227, 228, 229, 236, 237, 238, 239, 242, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 838, 840, 841, 843, 846, 851, 854, 855, 856, 860, 865, 875], "space": [0, 5, 10, 17, 20, 22, 23, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 59, 60, 67, 73, 81, 86, 88, 90, 91, 92, 93, 96, 100, 103, 104, 106, 107, 111, 113, 117, 118, 122, 125, 129, 132, 133, 134, 135, 139, 146, 147, 150, 154, 155, 159, 161, 165, 167, 169, 171, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 190, 193, 197, 203, 206, 211, 212, 213, 216, 219, 221, 224, 225, 229, 231, 233, 236, 237, 238, 242, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 282, 283, 295, 296, 310, 314, 323, 328, 340, 342, 345, 346, 349, 353, 354, 355, 357, 358, 361, 362, 365, 366, 370, 407, 410, 411, 414, 415, 417, 421, 424, 425, 428, 436, 441, 448, 452, 461, 463, 465, 469, 470, 471, 472, 473, 475, 476, 478, 480, 483, 490, 509, 510, 515, 517, 518, 521, 522, 523, 524, 525, 526, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 542, 551, 552, 554, 555, 565, 566, 567, 568, 574, 583, 604, 606, 610, 613, 615, 617, 618, 625, 627, 630, 632, 634, 635, 636, 643, 644, 645, 652, 655, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 679, 680, 682, 683, 685, 686, 687, 690, 691, 695, 697, 699, 707, 729, 742, 758, 760, 766, 772, 773, 774, 775, 778, 779, 781, 784, 785, 789, 794, 795, 797, 800, 801, 802, 805, 806, 810, 815, 827, 830, 840, 851, 854, 863, 865, 875], "function": [0, 1, 4, 8, 16, 19, 27, 31, 36, 44, 45, 54, 55, 56, 57, 59, 70, 73, 75, 90, 92, 93, 99, 101, 107, 110, 111, 112, 113, 114, 127, 131, 133, 134, 135, 139, 140, 142, 143, 145, 148, 149, 150, 151, 154, 155, 156, 157, 159, 160, 164, 165, 166, 167, 168, 169, 170, 171, 177, 179, 181, 182, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 219, 220, 221, 226, 228, 229, 237, 238, 239, 242, 244, 247, 248, 254, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 286, 287, 289, 295, 296, 297, 301, 303, 305, 310, 315, 316, 318, 319, 327, 328, 330, 338, 339, 340, 345, 351, 352, 353, 354, 355, 356, 357, 358, 359, 362, 363, 368, 370, 372, 383, 386, 407, 410, 411, 412, 413, 414, 415, 416, 417, 424, 426, 428, 431, 432, 433, 434, 436, 438, 439, 440, 441, 442, 446, 447, 448, 450, 464, 465, 468, 469, 473, 474, 475, 476, 481, 483, 484, 486, 487, 490, 492, 494, 495, 497, 499, 503, 505, 506, 508, 510, 518, 521, 522, 525, 528, 529, 530, 531, 532, 533, 534, 536, 537, 544, 550, 552, 554, 555, 557, 558, 559, 564, 565, 566, 567, 568, 569, 571, 572, 574, 577, 581, 583, 584, 585, 586, 587, 589, 590, 597, 600, 601, 604, 607, 608, 609, 610, 611, 612, 613, 615, 618, 623, 631, 634, 637, 640, 644, 645, 647, 648, 649, 658, 659, 661, 662, 679, 681, 682, 683, 684, 685, 686, 690, 691, 694, 695, 696, 697, 698, 699, 702, 705, 707, 713, 714, 723, 725, 726, 732, 736, 737, 738, 739, 740, 742, 752, 755, 757, 758, 759, 766, 768, 772, 774, 775, 780, 781, 782, 785, 788, 793, 794, 796, 797, 798, 800, 802, 804, 805, 806, 807, 811, 830, 832, 841, 842, 843, 849, 850, 851, 852, 857, 858, 861, 863, 864, 865, 867, 869, 872, 873, 875], "ha": [0, 1, 5, 9, 10, 27, 32, 42, 45, 49, 54, 69, 70, 73, 77, 81, 82, 91, 92, 101, 107, 112, 124, 125, 133, 135, 139, 141, 143, 144, 145, 148, 149, 150, 154, 155, 156, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 179, 180, 181, 182, 184, 187, 188, 189, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 214, 216, 219, 221, 224, 225, 229, 237, 239, 244, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 282, 283, 286, 287, 288, 289, 295, 296, 300, 301, 306, 352, 356, 357, 358, 366, 367, 368, 374, 375, 376, 379, 380, 382, 386, 387, 388, 390, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 407, 413, 414, 428, 443, 445, 446, 448, 450, 451, 454, 467, 470, 472, 473, 475, 476, 477, 483, 484, 495, 503, 519, 521, 522, 523, 525, 533, 554, 555, 556, 558, 569, 580, 583, 590, 613, 614, 632, 635, 676, 677, 682, 683, 685, 686, 695, 696, 697, 698, 699, 702, 711, 713, 721, 722, 723, 725, 726, 730, 752, 766, 774, 776, 778, 779, 780, 781, 782, 785, 787, 789, 794, 795, 796, 797, 798, 800, 802, 804, 830, 832, 834, 838, 840, 841, 842, 850, 851, 852, 853, 854, 855, 856, 857, 860, 863, 867, 875], "move": [0, 27, 60, 74, 78, 79, 114, 133, 139, 144, 155, 160, 176, 200, 203, 204, 207, 232, 239, 244, 254, 259, 262, 263, 264, 265, 271, 277, 278, 363, 407, 414, 442, 475, 476, 554, 555, 559, 695, 697, 699, 731, 732, 773, 774, 778, 781, 785, 794, 797, 802, 806, 854, 856, 857, 867, 875], "mne_connect": [0, 27, 47, 145, 170, 244, 764], "packag": [0, 27, 145, 159, 165, 188, 194, 198, 199, 200, 203, 221, 224, 244, 254, 256, 262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 280, 352, 353, 355, 357, 369, 370, 410, 417, 420, 423, 424, 450, 463, 465, 475, 476, 513, 514, 517, 518, 528, 529, 538, 539, 560, 567, 568, 643, 646, 647, 648, 660, 682, 683, 684, 685, 686, 695, 697, 698, 699, 700, 701, 702, 703, 704, 705, 713, 714, 722, 723, 724, 725, 726, 774, 777, 796, 830, 831, 832, 834, 835, 837, 838, 839, 840, 841, 845, 849, 851, 852, 863, 875], "can": [0, 4, 5, 7, 12, 13, 15, 16, 19, 21, 22, 24, 26, 27, 31, 32, 40, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 69, 70, 73, 74, 77, 78, 80, 81, 82, 86, 92, 93, 97, 99, 101, 107, 110, 111, 112, 113, 114, 117, 118, 119, 124, 125, 127, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 179, 180, 181, 182, 183, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 221, 224, 225, 226, 227, 229, 232, 233, 234, 237, 238, 239, 242, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 285, 288, 295, 296, 301, 302, 303, 304, 307, 308, 310, 312, 314, 315, 318, 319, 320, 321, 325, 326, 327, 328, 330, 333, 337, 338, 339, 340, 346, 347, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 363, 364, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 379, 380, 382, 385, 386, 387, 388, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 426, 428, 431, 432, 433, 434, 436, 440, 441, 442, 443, 445, 446, 447, 448, 450, 451, 452, 454, 457, 458, 459, 460, 463, 465, 466, 467, 469, 470, 472, 473, 475, 476, 483, 487, 490, 491, 494, 495, 497, 499, 503, 505, 506, 508, 510, 513, 514, 515, 517, 518, 520, 522, 528, 529, 531, 532, 533, 535, 539, 541, 542, 543, 544, 552, 553, 554, 555, 557, 558, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 580, 582, 583, 584, 587, 589, 590, 591, 597, 598, 601, 603, 606, 607, 608, 609, 612, 613, 614, 616, 618, 620, 626, 630, 631, 632, 634, 635, 637, 640, 642, 643, 644, 651, 658, 659, 660, 661, 663, 665, 667, 669, 670, 674, 675, 681, 682, 683, 684, 685, 686, 687, 688, 690, 691, 694, 695, 696, 697, 698, 699, 703, 704, 705, 706, 708, 711, 718, 721, 723, 725, 726, 729, 731, 732, 737, 739, 740, 742, 743, 747, 750, 755, 758, 759, 760, 761, 762, 763, 764, 765, 766, 770, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 789, 790, 792, 793, 794, 795, 796, 797, 798, 800, 802, 804, 805, 806, 808, 815, 817, 818, 821, 823, 828, 830, 832, 833, 834, 838, 839, 840, 841, 842, 846, 849, 850, 851, 852, 856, 857, 858, 860, 863, 864, 865, 875], "found": [0, 1, 2, 4, 5, 8, 9, 11, 12, 16, 18, 21, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 67, 68, 69, 70, 71, 72, 73, 77, 78, 79, 80, 81, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 110, 111, 112, 114, 115, 117, 118, 119, 122, 125, 126, 127, 130, 133, 134, 135, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 157, 158, 160, 161, 165, 167, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 194, 197, 198, 199, 200, 201, 202, 203, 205, 208, 209, 210, 214, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 238, 254, 255, 257, 259, 262, 263, 264, 265, 267, 271, 286, 300, 316, 317, 327, 346, 347, 363, 374, 375, 376, 377, 379, 380, 387, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 426, 434, 448, 449, 455, 456, 457, 466, 475, 476, 482, 501, 521, 555, 558, 567, 571, 572, 575, 576, 578, 579, 592, 603, 626, 632, 634, 639, 640, 644, 682, 694, 730, 742, 752, 754, 758, 772, 789, 795, 823, 830, 833, 834, 839, 851, 855, 857, 863, 865, 875], "go": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 275, 355, 457, 475, 476, 555, 644, 834, 845, 854, 855, 856, 857], "end": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 280, 285, 286, 310, 315, 322, 338, 339, 341, 352, 355, 357, 407, 413, 414, 419, 425, 430, 431, 432, 447, 448, 475, 476, 488, 495, 496, 501, 516, 528, 536, 538, 539, 540, 554, 555, 558, 571, 572, 577, 593, 595, 597, 604, 606, 613, 614, 615, 621, 625, 629, 631, 651, 652, 653, 654, 655, 657, 660, 672, 695, 696, 698, 700, 701, 702, 703, 704, 705, 706, 708, 717, 728, 730, 742, 772, 781, 786, 789, 795, 802, 816, 817, 818, 819, 821, 822, 826, 827, 828, 829, 830, 832, 834, 854, 856, 857, 860, 875], "download": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 387, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 832, 834, 835, 836, 837, 841, 842, 851, 875], "full": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 237, 238, 239, 262, 263, 264, 265, 267, 269, 270, 273, 275, 276, 278, 295, 296, 298, 316, 317, 352, 356, 357, 358, 366, 367, 368, 407, 412, 414, 415, 420, 437, 440, 450, 451, 470, 472, 473, 475, 476, 521, 522, 533, 536, 552, 555, 610, 613, 624, 675, 681, 682, 684, 686, 698, 709, 711, 713, 720, 721, 723, 725, 726, 732, 742, 758, 760, 763, 766, 772, 774, 782, 789, 795, 800, 805, 807, 808, 811, 832, 834, 840, 846, 850, 851, 856, 875], "exampl": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 148, 149, 150, 151, 154, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 197, 198, 199, 200, 201, 202, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 242, 257, 278, 333, 360, 366, 367, 377, 382, 400, 406, 429, 434, 451, 474, 543, 565, 573, 592, 632, 641, 721, 723, 740, 772, 774, 781, 785, 787, 795, 797, 802, 806, 830, 832, 834, 837, 841, 850, 852, 854, 855, 857, 858, 875], "code": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 238, 239, 242, 253, 257, 262, 263, 264, 265, 272, 281, 347, 434, 436, 446, 448, 451, 474, 475, 476, 483, 492, 499, 523, 583, 592, 608, 681, 697, 699, 724, 727, 742, 774, 776, 796, 830, 838, 850, 853, 854, 856, 857, 858, 861, 863, 870, 873, 875], "here": [1, 4, 5, 7, 9, 10, 11, 12, 15, 18, 19, 21, 28, 31, 33, 34, 38, 41, 42, 43, 45, 65, 69, 70, 73, 74, 80, 81, 82, 88, 92, 93, 98, 99, 102, 107, 109, 110, 112, 114, 115, 118, 119, 125, 131, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 155, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 176, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 221, 224, 225, 226, 228, 229, 232, 233, 234, 238, 239, 268, 272, 273, 275, 277, 278, 332, 358, 382, 388, 413, 424, 431, 447, 474, 508, 518, 520, 530, 555, 571, 581, 584, 598, 600, 613, 644, 647, 648, 649, 658, 659, 661, 682, 683, 684, 685, 686, 690, 775, 806, 832, 834, 841, 842, 851, 854, 857, 858, 859, 861, 875], "we": [1, 4, 5, 7, 9, 10, 11, 13, 16, 18, 19, 21, 22, 26, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 54, 58, 59, 65, 67, 68, 69, 70, 72, 73, 74, 81, 82, 85, 86, 88, 92, 93, 99, 101, 107, 109, 110, 111, 112, 113, 114, 115, 118, 119, 124, 125, 127, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 242, 259, 262, 263, 264, 265, 269, 272, 273, 275, 277, 280, 305, 328, 415, 417, 437, 438, 439, 440, 447, 457, 475, 476, 477, 505, 530, 555, 571, 582, 590, 655, 698, 742, 743, 758, 767, 782, 800, 832, 838, 839, 842, 845, 849, 850, 851, 852, 854, 856, 857, 861, 863, 875], "comput": [1, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 17, 19, 22, 23, 24, 26, 27, 31, 36, 38, 43, 44, 48, 50, 52, 57, 60, 67, 70, 71, 75, 77, 79, 85, 86, 90, 91, 93, 94, 95, 96, 98, 103, 111, 112, 113, 117, 118, 119, 121, 122, 129, 132, 133, 134, 140, 141, 144, 145, 148, 149, 150, 151, 154, 155, 156, 159, 162, 164, 165, 166, 167, 171, 174, 175, 177, 180, 181, 182, 183, 184, 185, 188, 190, 193, 194, 198, 199, 201, 205, 206, 208, 210, 213, 216, 220, 221, 224, 225, 228, 237, 238, 239, 242, 255, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 280, 282, 283, 286, 287, 288, 289, 290, 292, 295, 296, 297, 298, 300, 302, 305, 307, 313, 314, 316, 318, 323, 327, 339, 340, 341, 342, 351, 352, 353, 354, 355, 356, 357, 358, 361, 362, 363, 366, 367, 368, 377, 407, 408, 411, 412, 413, 414, 415, 419, 423, 426, 436, 441, 446, 448, 450, 451, 452, 457, 463, 465, 466, 470, 471, 472, 473, 475, 476, 480, 482, 487, 488, 490, 509, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 552, 553, 555, 556, 559, 562, 563, 565, 566, 567, 568, 571, 574, 580, 581, 600, 602, 603, 604, 605, 610, 613, 614, 615, 617, 618, 625, 627, 630, 632, 634, 636, 638, 640, 643, 644, 645, 650, 651, 652, 653, 654, 655, 656, 657, 660, 663, 665, 666, 667, 668, 669, 670, 671, 676, 677, 678, 681, 682, 683, 685, 686, 690, 691, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 711, 713, 714, 719, 720, 721, 722, 723, 724, 725, 726, 727, 731, 736, 742, 758, 759, 760, 766, 767, 769, 770, 772, 773, 774, 781, 782, 789, 794, 795, 801, 810, 819, 822, 823, 830, 834, 835, 837, 840, 841, 846, 851, 854, 860, 865, 870, 872, 875], "evok": [1, 2, 4, 5, 7, 8, 15, 16, 17, 18, 20, 27, 28, 31, 35, 36, 38, 39, 40, 42, 44, 45, 46, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 67, 70, 72, 76, 77, 78, 82, 83, 85, 86, 87, 89, 91, 93, 94, 95, 97, 98, 99, 105, 111, 114, 115, 120, 122, 128, 134, 135, 140, 142, 143, 153, 161, 166, 168, 169, 175, 177, 178, 179, 180, 181, 182, 183, 184, 187, 190, 194, 197, 198, 199, 200, 201, 203, 204, 205, 208, 220, 221, 225, 226, 227, 228, 229, 232, 234, 237, 239, 242, 254, 257, 259, 260, 261, 262, 263, 265, 266, 267, 269, 270, 272, 273, 275, 276, 277, 278, 279, 282, 283, 287, 288, 291, 292, 295, 296, 298, 312, 315, 351, 352, 354, 356, 370, 389, 412, 421, 428, 432, 433, 438, 439, 441, 448, 450, 464, 466, 470, 472, 473, 475, 476, 480, 488, 514, 515, 518, 521, 522, 523, 524, 525, 526, 530, 533, 536, 546, 551, 552, 553, 554, 555, 556, 563, 564, 567, 568, 570, 573, 577, 582, 583, 598, 604, 606, 610, 611, 612, 613, 614, 615, 617, 618, 621, 637, 640, 643, 644, 649, 659, 661, 681, 690, 695, 697, 698, 699, 704, 708, 713, 723, 725, 726, 727, 742, 759, 766, 767, 769, 770, 772, 773, 776, 777, 778, 779, 780, 781, 782, 786, 789, 793, 795, 796, 799, 801, 804, 809, 821, 830, 834, 851, 852, 854, 857, 860, 861, 865, 875], "from": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 140, 142, 144, 145, 146, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 203, 204, 206, 207, 208, 210, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 242, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 282, 283, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 300, 301, 305, 307, 310, 311, 313, 316, 319, 322, 323, 324, 326, 328, 329, 330, 331, 332, 335, 336, 337, 340, 343, 344, 345, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 366, 367, 368, 369, 370, 377, 382, 390, 391, 399, 400, 407, 411, 413, 414, 415, 416, 422, 425, 429, 430, 431, 433, 436, 437, 438, 439, 440, 441, 446, 448, 449, 450, 451, 452, 455, 457, 459, 460, 464, 465, 466, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 528, 529, 530, 531, 532, 533, 535, 536, 537, 541, 542, 546, 547, 548, 552, 553, 554, 555, 556, 557, 558, 559, 562, 564, 565, 566, 569, 570, 571, 572, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 592, 593, 594, 595, 598, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 612, 613, 614, 615, 616, 617, 618, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 632, 633, 635, 637, 640, 644, 645, 646, 647, 648, 649, 655, 658, 659, 660, 661, 662, 664, 665, 667, 668, 669, 670, 671, 672, 674, 675, 677, 681, 682, 683, 684, 685, 686, 687, 690, 691, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 707, 708, 709, 711, 712, 713, 714, 715, 716, 717, 721, 723, 724, 726, 727, 730, 731, 732, 734, 737, 738, 741, 742, 750, 755, 758, 759, 766, 770, 771, 772, 774, 775, 776, 778, 779, 780, 781, 782, 783, 785, 786, 787, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 802, 804, 810, 812, 815, 821, 822, 825, 828, 830, 832, 834, 837, 838, 839, 840, 841, 842, 846, 850, 851, 852, 854, 856, 857, 859, 860, 863, 865, 873, 875], "tutori": [1, 27, 32, 62, 69, 72, 82, 107, 122, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 175, 176, 177, 179, 180, 181, 185, 186, 189, 190, 191, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 224, 226, 229, 230, 232, 234, 235, 237, 239, 240, 242, 259, 260, 262, 263, 264, 265, 267, 295, 300, 352, 357, 407, 427, 442, 445, 448, 450, 475, 476, 486, 488, 519, 543, 583, 722, 723, 725, 726, 758, 770, 782, 810, 830, 834, 851, 854, 857, 858, 859, 875], "For": [1, 4, 15, 19, 43, 44, 47, 50, 55, 63, 68, 69, 78, 93, 99, 101, 107, 111, 113, 118, 119, 121, 125, 132, 133, 134, 135, 139, 142, 143, 144, 145, 148, 149, 150, 154, 155, 157, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 202, 203, 204, 205, 206, 208, 210, 213, 214, 216, 219, 224, 226, 228, 229, 232, 234, 237, 238, 239, 254, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 281, 295, 296, 312, 323, 333, 352, 356, 357, 358, 365, 366, 367, 368, 377, 382, 399, 400, 406, 407, 409, 410, 413, 414, 415, 417, 419, 420, 424, 428, 429, 430, 431, 433, 436, 437, 438, 440, 442, 443, 445, 446, 448, 449, 450, 451, 464, 465, 466, 469, 470, 472, 473, 474, 475, 476, 481, 483, 490, 495, 498, 499, 520, 528, 533, 537, 542, 554, 555, 556, 557, 566, 570, 573, 574, 583, 587, 594, 601, 610, 626, 630, 632, 637, 640, 642, 644, 675, 680, 681, 682, 683, 685, 686, 690, 695, 696, 697, 698, 699, 713, 715, 722, 723, 725, 726, 732, 742, 757, 758, 760, 766, 767, 772, 773, 774, 776, 778, 781, 782, 783, 785, 786, 787, 789, 795, 797, 798, 802, 804, 806, 830, 832, 834, 836, 840, 845, 846, 850, 851, 852, 853, 854, 857, 861, 875], "comparison": [1, 27, 31, 38, 81, 94, 95, 99, 110, 120, 128, 133, 150, 154, 156, 166, 175, 182, 183, 190, 200, 205, 209, 229, 232, 233, 234, 238, 239, 242, 273, 274, 358, 555, 558, 584, 623, 679, 683, 684, 842, 850, 857, 872, 875], "see": [1, 4, 7, 8, 10, 19, 21, 22, 26, 27, 32, 34, 35, 39, 43, 44, 62, 63, 69, 70, 72, 74, 78, 80, 81, 82, 99, 111, 113, 117, 118, 119, 125, 127, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 145, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 179, 180, 181, 182, 183, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 226, 227, 229, 232, 237, 239, 247, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 310, 312, 314, 315, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 412, 413, 414, 415, 417, 418, 420, 423, 424, 426, 428, 432, 434, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 457, 458, 462, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 517, 518, 519, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 548, 549, 551, 554, 555, 556, 557, 558, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 578, 579, 580, 581, 583, 584, 586, 587, 590, 591, 592, 595, 596, 597, 598, 600, 602, 603, 604, 605, 606, 607, 609, 610, 611, 613, 614, 615, 617, 618, 619, 620, 621, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 640, 641, 643, 644, 646, 647, 648, 649, 658, 659, 660, 661, 663, 665, 666, 667, 668, 669, 670, 671, 681, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 711, 713, 714, 717, 718, 721, 722, 723, 724, 725, 726, 727, 728, 730, 731, 732, 737, 741, 742, 747, 750, 757, 758, 759, 766, 767, 770, 772, 773, 774, 775, 776, 777, 778, 780, 781, 782, 784, 785, 786, 787, 789, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 811, 813, 814, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 832, 833, 834, 838, 839, 840, 841, 850, 851, 852, 854, 856, 857, 858, 861, 862, 863, 865, 872, 875], "1": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 219, 220, 221, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 242, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 288, 295, 296, 297, 302, 305, 306, 307, 310, 312, 314, 316, 319, 320, 321, 333, 339, 340, 341, 345, 346, 351, 352, 353, 355, 357, 358, 363, 368, 377, 383, 384, 385, 389, 390, 391, 399, 400, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 426, 428, 429, 430, 431, 434, 436, 437, 438, 439, 440, 442, 443, 445, 446, 447, 448, 450, 451, 452, 457, 463, 465, 466, 469, 470, 472, 473, 474, 475, 476, 483, 485, 490, 491, 492, 498, 499, 500, 507, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 549, 552, 554, 555, 556, 557, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 587, 590, 591, 592, 593, 598, 605, 607, 609, 617, 630, 632, 634, 636, 640, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 662, 664, 669, 670, 671, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 707, 708, 709, 710, 711, 713, 714, 718, 720, 721, 722, 723, 724, 725, 726, 727, 731, 732, 737, 742, 746, 751, 755, 758, 759, 763, 766, 770, 771, 772, 773, 774, 776, 777, 778, 781, 782, 783, 785, 786, 787, 789, 790, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 808, 815, 819, 821, 826, 830, 832, 833, 834, 837, 839, 840, 842, 849, 850, 851, 854, 856, 857, 860, 863], "http": [1, 8, 15, 43, 69, 86, 111, 150, 154, 183, 194, 229, 242, 262, 263, 264, 265, 269, 273, 277, 298, 352, 365, 377, 382, 384, 399, 400, 415, 470, 475, 476, 483, 522, 556, 641, 677, 679, 724, 727, 738, 800, 832, 834, 842, 854, 857, 875], "neuroimag": [1, 10, 12, 18, 19, 21, 35, 42, 46, 59, 74, 92, 99, 111, 119, 124, 143, 154, 161, 164, 179, 183, 185, 186, 194, 210, 224, 225, 242, 259, 260, 262, 263, 264, 265, 267, 268, 273, 300, 352, 385, 411, 413, 414, 415, 425, 428, 448, 450, 470, 473, 486, 519, 523, 533, 537, 555, 590, 652, 655, 657, 679, 682, 683, 684, 685, 686, 688, 689, 709, 711, 721, 725, 758, 770, 782, 830, 841, 849, 852, 854, 857, 858, 863], "usc": [1, 183], "edu": [1, 9, 24, 35, 37, 43, 47, 58, 67, 69, 99, 102, 111, 112, 113, 118, 132, 150, 154, 183, 242, 269, 273, 277, 365, 592, 800, 857], "mediannervectf": 1, "author": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 140, 156, 158, 160, 178, 179, 181, 182, 183, 184, 190, 193, 200, 207, 221, 224, 226, 227, 228, 229, 232, 233, 234, 238, 239, 242, 590, 834, 849, 856], "mainak": [1, 46, 77, 84, 85, 190, 242, 473, 849, 862, 875], "ja": [1, 46, 77, 84, 85, 190, 242, 473, 849, 862, 875], "telecom": [1, 77, 85, 190], "paristech": [1, 77, 85, 190, 253, 862], "fr": [1, 7, 9, 10, 11, 13, 18, 19, 28, 29, 30, 38, 39, 40, 42, 46, 47, 48, 50, 52, 53, 59, 64, 77, 85, 90, 94, 95, 98, 105, 106, 108, 109, 115, 119, 123, 129, 130, 136, 158, 184, 190, 194, 226, 227, 228, 232, 233, 234, 238, 242, 875], "licens": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 140, 156, 158, 160, 178, 179, 181, 182, 183, 184, 190, 193, 207, 221, 224, 226, 227, 228, 229, 232, 233, 234, 238, 239, 374, 375, 376, 382, 384, 851, 875], "bsd": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 140, 156, 158, 160, 178, 179, 181, 182, 183, 184, 190, 193, 207, 221, 224, 226, 227, 228, 229, 232, 233, 234, 238, 239, 583, 856], "claus": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 140, 156, 158, 160, 178, 179, 181, 182, 183, 184, 190, 193, 207, 221, 224, 226, 227, 228, 229, 232, 233, 234, 238, 239], "import": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 73, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 242, 262, 263, 264, 265, 267, 310, 326, 328, 335, 370, 377, 399, 400, 447, 475, 476, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 555, 592, 607, 608, 609, 612, 626, 640, 660, 675, 677, 694, 695, 697, 698, 699, 711, 721, 737, 740, 742, 790, 828, 832, 833, 838, 841, 842, 845, 850, 851, 852, 854, 856, 857, 861, 863, 875], "numpi": [1, 4, 5, 8, 9, 10, 11, 14, 15, 16, 19, 22, 28, 31, 32, 33, 34, 35, 38, 40, 42, 45, 47, 50, 58, 59, 60, 63, 67, 69, 70, 71, 73, 80, 82, 88, 90, 91, 92, 93, 95, 98, 105, 109, 110, 111, 112, 113, 115, 117, 118, 123, 125, 131, 133, 134, 135, 136, 139, 140, 142, 145, 148, 149, 150, 155, 156, 157, 158, 159, 165, 167, 169, 170, 171, 175, 176, 177, 180, 181, 182, 183, 184, 189, 190, 193, 194, 197, 198, 200, 201, 202, 203, 204, 205, 208, 209, 210, 213, 214, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 256, 259, 262, 263, 264, 265, 269, 270, 271, 272, 273, 276, 277, 278, 407, 413, 414, 415, 445, 446, 447, 472, 473, 474, 475, 476, 508, 555, 569, 581, 592, 600, 647, 648, 649, 658, 659, 661, 675, 680, 682, 683, 684, 685, 686, 694, 695, 696, 697, 698, 699, 700, 702, 703, 705, 711, 721, 722, 723, 724, 725, 726, 727, 742, 774, 776, 781, 794, 830, 833, 852, 856, 859, 875], "np": [1, 4, 5, 8, 9, 10, 11, 14, 15, 16, 19, 22, 28, 31, 32, 33, 34, 35, 38, 40, 42, 43, 45, 47, 50, 58, 59, 60, 67, 69, 70, 71, 73, 80, 82, 88, 90, 91, 92, 93, 95, 98, 105, 109, 110, 111, 112, 113, 115, 117, 118, 123, 125, 131, 133, 134, 135, 136, 140, 142, 145, 149, 150, 155, 156, 157, 158, 159, 165, 167, 169, 171, 175, 176, 177, 180, 181, 182, 183, 184, 189, 190, 193, 194, 197, 198, 200, 201, 202, 204, 205, 208, 209, 210, 213, 214, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 256, 262, 263, 264, 265, 268, 269, 270, 273, 275, 276, 277, 278, 280, 312, 352, 441, 442, 446, 463, 475, 476, 492, 506, 555, 569, 574, 581, 592, 661, 675, 687, 695, 697, 698, 699, 711, 713, 721, 722, 723, 725, 726, 742, 750, 756, 761, 766, 773, 796, 800, 802, 805, 806, 834, 857, 860, 873, 875], "mne": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 155, 156, 157, 158, 161, 162, 163, 164, 166, 167, 168, 169, 172, 173, 174, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 197, 199, 201, 202, 205, 206, 207, 209, 210, 214, 215, 216, 217, 220, 221, 222, 223, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 242, 247, 248, 249, 250, 252, 253, 830, 832, 833, 835, 839, 843, 844, 845, 850, 851, 852, 855, 856, 858, 861, 862, 863, 864, 865, 866, 869, 870, 872, 873, 874, 875], "bst_raw": [1, 117, 851, 865], "io": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 26, 28, 29, 32, 33, 34, 42, 45, 46, 49, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 119, 121, 125, 126, 127, 130, 131, 133, 134, 136, 139, 140, 141, 143, 144, 145, 148, 150, 151, 155, 156, 157, 158, 159, 161, 165, 166, 167, 168, 169, 170, 171, 176, 179, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 226, 227, 228, 229, 232, 234, 237, 238, 239, 242, 249, 254, 255, 256, 260, 261, 262, 263, 264, 265, 267, 269, 270, 272, 273, 276, 277, 278, 281, 294, 363, 382, 412, 440, 442, 445, 518, 555, 563, 567, 568, 574, 583, 695, 697, 698, 699, 713, 742, 786, 787, 789, 832, 834, 838, 850, 851, 852, 854, 857, 861, 865, 866, 875], "read_raw_ctf": [1, 7, 12, 21, 79, 80, 117, 121, 183, 187, 190, 481, 857, 865, 875], "print": [1, 2, 4, 5, 7, 8, 10, 11, 13, 14, 15, 16, 18, 19, 22, 24, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 68, 69, 70, 71, 72, 73, 75, 77, 78, 81, 82, 84, 85, 86, 90, 91, 92, 93, 94, 95, 98, 99, 101, 102, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 121, 125, 126, 129, 130, 131, 134, 135, 136, 139, 140, 141, 142, 143, 145, 148, 149, 150, 155, 156, 157, 158, 159, 165, 166, 167, 168, 169, 170, 174, 175, 178, 180, 181, 182, 183, 184, 190, 194, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 213, 214, 215, 219, 220, 221, 224, 225, 227, 228, 229, 232, 233, 234, 237, 238, 239, 242, 254, 262, 263, 264, 265, 271, 352, 390, 442, 448, 475, 476, 506, 641, 642, 694, 697, 698, 737, 750, 766, 777, 779, 782, 838, 840, 851, 854, 875], "__doc__": [1, 2, 4, 7, 8, 10, 11, 13, 14, 15, 16, 18, 22, 24, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 68, 69, 70, 71, 72, 73, 75, 77, 78, 82, 84, 85, 86, 90, 91, 92, 93, 94, 95, 98, 101, 102, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 118, 119, 121, 126, 129, 130, 131, 135, 174, 178, 182, 183, 190, 227, 228, 233, 234], "tmin": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 28, 31, 32, 33, 34, 35, 38, 40, 42, 45, 46, 49, 51, 59, 60, 68, 70, 71, 72, 81, 82, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 105, 106, 108, 109, 110, 111, 112, 115, 119, 126, 130, 131, 135, 136, 139, 140, 141, 143, 144, 148, 150, 161, 165, 171, 176, 179, 180, 182, 183, 184, 190, 193, 194, 198, 199, 203, 207, 209, 210, 213, 219, 220, 221, 225, 226, 227, 228, 229, 232, 234, 237, 238, 239, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 339, 341, 352, 353, 354, 357, 413, 419, 431, 433, 474, 475, 476, 510, 528, 545, 567, 568, 571, 572, 577, 662, 681, 687, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 742, 774, 796, 802, 850, 857, 861, 875], "tmax": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 28, 31, 32, 33, 34, 35, 38, 40, 42, 45, 46, 49, 51, 59, 60, 68, 70, 71, 72, 81, 82, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 105, 106, 108, 109, 110, 111, 112, 115, 119, 126, 127, 130, 131, 135, 136, 139, 140, 141, 143, 144, 145, 148, 150, 151, 161, 165, 166, 167, 171, 176, 179, 180, 181, 182, 183, 184, 190, 193, 194, 197, 198, 199, 203, 204, 206, 207, 208, 209, 210, 213, 214, 215, 216, 220, 221, 225, 226, 227, 228, 229, 232, 234, 237, 238, 239, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 339, 341, 352, 353, 354, 357, 413, 419, 431, 433, 474, 475, 476, 528, 545, 567, 568, 571, 572, 577, 681, 684, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 742, 774, 783, 796, 802, 850, 854, 857, 861, 875], "event_idtake": [1, 4, 5, 7, 10, 16, 19, 26, 31, 38, 41, 43, 44, 45, 47, 50, 69, 70, 73, 75, 78, 81, 92, 94, 95, 99, 107, 108, 111, 113, 117, 121, 125, 129, 131, 133, 134, 136, 139, 140, 141, 143, 144, 148, 149, 151, 154, 157, 158, 159, 161, 165, 166, 167, 168, 170, 171, 175, 178, 180, 181, 182, 184, 188, 193, 194, 199, 200, 203, 204, 205, 206, 208, 213, 219, 221, 224, 232, 233, 234, 238, 239, 254, 256, 259, 262, 263, 264, 265, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 285, 295, 296, 307, 310, 328, 338, 340, 352, 356, 357, 358, 365, 366, 367, 368, 407, 414, 431, 436, 440, 448, 450, 451, 464, 466, 470, 472, 473, 475, 476, 501, 522, 523, 524, 525, 526, 528, 529, 533, 538, 539, 555, 558, 560, 563, 631, 637, 643, 645, 656, 661, 681, 690, 695, 697, 698, 699, 739, 742, 743, 759, 766, 772, 774, 776, 781, 782, 785, 794, 802, 812, 830, 834, 837, 838, 842, 856, 857, 858, 860, 875], "right": [1, 5, 8, 10, 11, 13, 15, 39, 40, 41, 43, 45, 47, 51, 52, 57, 61, 69, 70, 72, 78, 81, 92, 107, 110, 111, 112, 114, 118, 125, 126, 130, 132, 133, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 157, 159, 160, 165, 167, 171, 174, 175, 177, 178, 179, 180, 190, 193, 199, 200, 202, 203, 204, 205, 208, 213, 214, 215, 216, 220, 221, 226, 228, 229, 232, 233, 234, 237, 238, 258, 259, 262, 263, 264, 265, 267, 268, 269, 270, 271, 273, 276, 277, 278, 310, 312, 322, 323, 333, 334, 358, 377, 407, 414, 429, 431, 434, 441, 465, 473, 475, 476, 498, 508, 520, 554, 555, 630, 658, 695, 697, 698, 699, 711, 721, 742, 755, 765, 766, 772, 773, 774, 778, 780, 781, 785, 793, 794, 795, 797, 802, 806, 830, 832, 834, 837, 851, 854, 856, 857, 860, 875], "hand": [1, 5, 8, 9, 110, 155, 159, 198, 203, 204, 205, 239, 267, 377, 555, 857, 875], "somato": [1, 32, 33, 34, 46, 61, 111, 238, 851, 865, 875], "reject": [1, 5, 7, 11, 13, 16, 27, 28, 32, 42, 45, 46, 61, 68, 75, 76, 81, 94, 95, 97, 98, 99, 101, 102, 105, 108, 111, 112, 115, 119, 130, 139, 140, 141, 143, 144, 145, 150, 151, 164, 165, 171, 176, 179, 188, 190, 194, 198, 203, 204, 205, 208, 209, 211, 212, 215, 224, 226, 227, 228, 229, 232, 234, 238, 242, 254, 255, 256, 257, 262, 263, 264, 267, 272, 355, 357, 475, 476, 515, 552, 555, 557, 558, 567, 568, 571, 572, 575, 576, 583, 606, 610, 622, 673, 679, 681, 772, 785, 786, 787, 788, 857, 875], "dict": [1, 4, 5, 7, 8, 9, 10, 11, 13, 14, 16, 18, 21, 22, 26, 28, 32, 35, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 54, 55, 58, 59, 61, 65, 68, 69, 73, 75, 77, 78, 84, 86, 91, 92, 94, 95, 97, 98, 99, 101, 102, 105, 107, 108, 110, 111, 112, 113, 114, 115, 118, 119, 121, 125, 126, 129, 130, 133, 134, 135, 136, 139, 140, 141, 142, 144, 149, 150, 151, 156, 157, 158, 159, 165, 167, 168, 169, 170, 171, 174, 175, 176, 178, 179, 180, 183, 190, 193, 194, 199, 200, 202, 203, 204, 205, 206, 208, 209, 210, 213, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 238, 239, 255, 256, 257, 259, 260, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 284, 286, 295, 296, 300, 302, 308, 310, 312, 322, 323, 338, 339, 340, 341, 342, 343, 344, 352, 355, 356, 357, 363, 364, 365, 366, 367, 368, 382, 388, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 429, 431, 434, 436, 439, 441, 442, 443, 445, 446, 450, 451, 452, 453, 455, 457, 458, 459, 460, 467, 470, 472, 473, 474, 475, 476, 479, 483, 490, 494, 498, 507, 510, 511, 512, 513, 514, 517, 518, 521, 522, 523, 524, 525, 526, 528, 529, 533, 535, 538, 539, 540, 545, 547, 548, 551, 553, 554, 555, 556, 557, 565, 567, 568, 569, 571, 572, 574, 580, 594, 599, 603, 607, 608, 609, 610, 612, 616, 622, 626, 628, 631, 637, 644, 646, 647, 648, 658, 660, 663, 664, 680, 681, 682, 683, 685, 686, 690, 692, 695, 697, 698, 699, 711, 721, 729, 730, 732, 742, 743, 758, 759, 761, 762, 764, 765, 766, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 785, 787, 793, 794, 795, 797, 800, 801, 802, 803, 804, 805, 806, 812, 818, 828, 829, 834, 850, 857, 861, 875], "mag": [1, 5, 7, 8, 9, 12, 13, 21, 22, 26, 28, 31, 32, 33, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 68, 73, 75, 78, 79, 80, 85, 91, 92, 102, 105, 107, 114, 117, 118, 119, 121, 122, 130, 139, 141, 144, 145, 149, 151, 155, 156, 157, 161, 165, 168, 169, 171, 175, 176, 177, 178, 179, 180, 182, 183, 184, 190, 194, 197, 199, 201, 203, 204, 205, 207, 208, 213, 219, 220, 229, 232, 234, 237, 254, 257, 259, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 295, 296, 309, 316, 317, 336, 352, 356, 357, 366, 367, 368, 370, 407, 414, 416, 450, 451, 470, 472, 473, 475, 476, 511, 533, 552, 553, 554, 555, 560, 565, 567, 568, 569, 571, 572, 574, 636, 681, 695, 697, 698, 699, 765, 766, 772, 773, 774, 776, 778, 780, 781, 782, 785, 795, 797, 798, 802, 803, 804, 830, 850, 857, 875], "4e": [1, 9, 21, 28, 31, 42, 45, 68, 77, 80, 102, 105, 119, 130, 151, 161, 176, 179, 184, 190, 194, 203, 220, 221, 229, 257, 262, 263, 272, 357, 475, 476, 555, 571, 572, 681, 772, 795, 850], "12": [1, 7, 8, 9, 11, 12, 13, 18, 19, 20, 21, 24, 28, 32, 33, 34, 35, 42, 43, 44, 45, 46, 47, 48, 56, 59, 61, 64, 66, 68, 69, 71, 75, 78, 79, 81, 83, 85, 89, 91, 94, 99, 101, 102, 104, 105, 106, 107, 110, 111, 112, 119, 125, 128, 130, 131, 133, 136, 142, 144, 145, 147, 150, 151, 153, 158, 160, 161, 165, 167, 168, 170, 171, 174, 176, 178, 179, 182, 190, 193, 194, 197, 199, 200, 201, 202, 203, 205, 207, 208, 210, 212, 213, 215, 219, 221, 224, 225, 226, 227, 228, 229, 231, 234, 238, 242, 256, 257, 260, 261, 262, 263, 264, 265, 267, 269, 270, 272, 273, 274, 275, 276, 277, 278, 295, 303, 307, 311, 333, 345, 349, 350, 352, 357, 358, 377, 390, 413, 429, 448, 450, 473, 475, 476, 487, 517, 520, 522, 555, 566, 567, 568, 571, 572, 581, 583, 648, 681, 694, 695, 697, 698, 699, 723, 726, 760, 772, 774, 779, 791, 795, 798, 850, 851, 854, 857, 860], "eog": [1, 4, 8, 9, 11, 12, 14, 15, 16, 27, 28, 32, 33, 42, 45, 46, 61, 68, 70, 73, 75, 76, 79, 80, 81, 83, 86, 88, 91, 92, 94, 95, 98, 102, 105, 106, 107, 108, 111, 115, 125, 126, 136, 139, 140, 144, 145, 148, 150, 151, 165, 166, 167, 168, 171, 176, 179, 188, 190, 194, 198, 199, 201, 204, 206, 208, 209, 210, 213, 214, 215, 216, 219, 221, 226, 227, 228, 229, 232, 234, 238, 257, 262, 263, 264, 265, 267, 272, 309, 357, 370, 440, 448, 475, 476, 483, 485, 486, 487, 490, 491, 492, 497, 501, 546, 552, 554, 555, 568, 571, 572, 576, 579, 593, 598, 607, 647, 648, 681, 695, 697, 698, 699, 772, 773, 788, 793, 795, 830, 850, 851, 852, 857, 860, 861, 875], "250e": [1, 32, 143, 165, 190, 202, 205, 257, 262, 263, 357, 555, 571, 572, 681], "6": [1, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 65, 66, 67, 69, 70, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 122, 125, 128, 129, 131, 133, 135, 139, 140, 141, 142, 143, 144, 145, 147, 150, 151, 153, 155, 156, 157, 158, 159, 161, 165, 167, 168, 170, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 193, 194, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 213, 215, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 236, 238, 239, 242, 254, 257, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 280, 298, 312, 333, 357, 377, 383, 407, 409, 412, 414, 442, 443, 445, 446, 475, 476, 522, 554, 555, 564, 569, 570, 571, 572, 581, 585, 636, 648, 682, 683, 685, 686, 694, 695, 697, 698, 699, 711, 721, 722, 723, 725, 726, 757, 758, 759, 772, 773, 774, 778, 781, 785, 787, 794, 795, 797, 801, 802, 804, 832, 833, 840, 850, 851, 857, 860], "data_path": [1, 2, 5, 7, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 111, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 159, 160, 161, 165, 166, 167, 168, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 193, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 220, 221, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 262, 263, 264, 265, 272, 382, 475, 476, 834, 851, 857, 865, 875], "raw_path": [1, 171, 183], "meg": [1, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 64, 67, 68, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 122, 125, 127, 128, 129, 130, 132, 134, 135, 139, 140, 141, 144, 145, 148, 149, 150, 151, 155, 156, 157, 158, 159, 161, 164, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 190, 191, 192, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 221, 226, 227, 228, 229, 232, 233, 234, 237, 238, 242, 254, 257, 259, 262, 263, 264, 265, 266, 267, 271, 273, 275, 282, 283, 295, 296, 298, 308, 313, 316, 317, 318, 323, 325, 327, 335, 339, 351, 352, 353, 354, 355, 356, 357, 362, 366, 367, 368, 370, 389, 407, 409, 414, 415, 423, 428, 448, 450, 451, 458, 464, 470, 472, 473, 475, 476, 478, 482, 486, 488, 494, 495, 496, 499, 505, 507, 514, 518, 521, 522, 523, 533, 534, 536, 537, 549, 552, 553, 554, 555, 557, 560, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 577, 580, 583, 584, 589, 591, 598, 604, 608, 609, 612, 613, 615, 630, 636, 647, 648, 652, 655, 657, 660, 663, 681, 682, 683, 685, 686, 690, 695, 697, 698, 699, 703, 704, 705, 706, 708, 725, 726, 729, 730, 742, 755, 758, 759, 765, 766, 772, 773, 774, 775, 776, 777, 778, 779, 781, 782, 784, 785, 786, 793, 794, 796, 797, 802, 804, 809, 830, 831, 834, 841, 846, 849, 850, 854, 860, 861, 865, 875], "subj001_somatosensory_20111109_01_aux": [1, 117], "f": [1, 5, 8, 9, 10, 18, 19, 21, 22, 27, 28, 29, 32, 33, 39, 40, 41, 46, 47, 60, 63, 69, 70, 81, 84, 88, 90, 92, 96, 100, 102, 105, 107, 109, 110, 111, 112, 113, 117, 124, 125, 133, 134, 140, 143, 148, 149, 150, 156, 157, 158, 159, 164, 166, 169, 171, 175, 181, 190, 193, 194, 197, 198, 200, 203, 205, 207, 208, 215, 219, 220, 221, 224, 226, 227, 228, 230, 231, 232, 233, 234, 237, 238, 239, 242, 254, 256, 259, 262, 263, 264, 265, 267, 271, 286, 295, 300, 316, 351, 384, 446, 448, 475, 476, 521, 552, 564, 610, 651, 675, 676, 677, 678, 681, 683, 686, 698, 711, 721, 725, 730, 763, 766, 773, 830, 840, 842, 850, 851, 857, 875], "d": [1, 4, 7, 11, 12, 15, 19, 21, 22, 26, 34, 39, 41, 46, 50, 52, 57, 59, 65, 71, 78, 79, 80, 82, 91, 92, 98, 99, 107, 109, 111, 116, 117, 118, 121, 124, 125, 127, 133, 134, 135, 140, 156, 157, 158, 159, 170, 178, 179, 181, 182, 183, 184, 190, 193, 200, 206, 207, 215, 221, 224, 228, 232, 233, 234, 237, 239, 242, 254, 256, 259, 262, 263, 264, 265, 267, 271, 286, 295, 296, 300, 319, 352, 384, 415, 470, 475, 476, 488, 492, 521, 522, 614, 640, 688, 689, 697, 699, 714, 730, 743, 782, 795, 842, 851, 852, 857, 863, 875], "crop": [1, 5, 8, 9, 10, 12, 21, 30, 31, 32, 33, 34, 35, 38, 40, 42, 44, 45, 46, 51, 59, 73, 75, 79, 80, 81, 82, 107, 110, 114, 125, 136, 139, 140, 141, 145, 148, 150, 166, 167, 171, 175, 178, 179, 180, 182, 183, 184, 197, 198, 201, 203, 204, 205, 206, 207, 208, 210, 213, 214, 215, 216, 221, 225, 226, 232, 234, 237, 238, 256, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 565, 584, 597, 695, 698, 852, 875], "half": [1, 69, 200, 201, 234, 261, 262, 263, 264, 265, 267, 269, 270, 272, 273, 276, 277, 278, 339, 409, 443, 445, 446, 475, 476, 573, 682, 683, 685, 686, 690, 707, 709, 711, 713, 721, 723, 725, 726, 742, 766, 772, 774, 795, 800, 805, 834, 857, 875], "length": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 71, 72, 75, 80, 81, 82, 86, 97, 109, 110, 111, 112, 113, 119, 131, 135, 140, 142, 143, 148, 150, 171, 174, 190, 194, 197, 199, 201, 202, 203, 204, 205, 208, 209, 210, 213, 216, 219, 225, 229, 237, 254, 257, 259, 260, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 276, 277, 278, 285, 311, 357, 390, 407, 409, 412, 413, 414, 415, 418, 419, 422, 443, 445, 446, 465, 473, 474, 475, 476, 525, 537, 539, 554, 555, 557, 563, 571, 572, 583, 590, 613, 614, 635, 645, 661, 675, 676, 680, 681, 695, 697, 698, 699, 700, 701, 702, 703, 705, 707, 710, 713, 714, 718, 722, 723, 724, 725, 726, 727, 732, 742, 757, 758, 759, 766, 773, 774, 776, 778, 781, 783, 785, 794, 797, 800, 801, 802, 803, 804, 805, 830, 850, 851, 857, 875], "save": [1, 5, 7, 9, 11, 29, 30, 32, 34, 41, 43, 44, 60, 61, 69, 73, 106, 107, 108, 111, 113, 133, 134, 135, 141, 142, 149, 150, 155, 156, 157, 159, 160, 161, 167, 169, 176, 179, 180, 182, 187, 189, 190, 198, 199, 201, 203, 205, 206, 208, 214, 215, 216, 221, 228, 232, 254, 256, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 280, 286, 310, 311, 336, 377, 382, 411, 437, 438, 439, 440, 466, 474, 475, 476, 492, 494, 499, 528, 529, 544, 554, 555, 596, 608, 609, 612, 613, 617, 620, 623, 634, 685, 686, 695, 696, 697, 698, 699, 715, 716, 728, 730, 742, 817, 821, 822, 824, 832, 834, 838, 852, 854, 857, 860, 861, 875], "memori": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 254, 257, 262, 263, 264, 265, 280, 289, 290, 293, 328, 357, 359, 361, 371, 409, 416, 419, 420, 424, 445, 474, 475, 476, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 515, 524, 525, 526, 528, 529, 535, 557, 583, 638, 644, 682, 683, 685, 686, 694, 701, 704, 720, 722, 723, 724, 725, 726, 727, 742, 776, 832, 833, 840, 852, 861, 863, 875], "120": [1, 5, 7, 22, 24, 25, 33, 35, 38, 42, 45, 59, 79, 80, 88, 94, 106, 131, 133, 134, 141, 150, 159, 168, 175, 180, 190, 197, 199, 201, 203, 207, 210, 228, 229, 238, 242, 254, 262, 263, 430, 475, 476, 565, 569, 772, 795], "load_data": [1, 4, 8, 9, 12, 21, 34, 42, 69, 70, 73, 74, 75, 79, 80, 81, 82, 97, 107, 110, 111, 113, 135, 145, 150, 158, 165, 167, 171, 181, 190, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 209, 210, 213, 214, 215, 216, 238, 262, 263, 264, 265, 475, 476, 851, 857, 865, 875], "plot": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 45, 46, 49, 51, 53, 54, 55, 56, 58, 59, 61, 63, 64, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 119, 120, 127, 128, 129, 130, 132, 133, 134, 136, 139, 142, 143, 144, 145, 148, 150, 152, 153, 155, 157, 158, 159, 164, 165, 166, 167, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 213, 215, 217, 218, 219, 221, 224, 225, 229, 232, 233, 234, 237, 254, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 310, 311, 319, 321, 322, 326, 336, 352, 362, 370, 407, 411, 414, 422, 425, 427, 433, 436, 448, 450, 467, 475, 476, 482, 486, 488, 491, 499, 514, 518, 519, 521, 522, 531, 532, 533, 534, 536, 551, 552, 554, 555, 569, 591, 604, 605, 610, 613, 615, 618, 623, 628, 635, 644, 681, 695, 696, 697, 698, 699, 711, 721, 742, 743, 744, 745, 747, 751, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 812, 830, 833, 834, 838, 850, 851, 852, 855, 857, 858, 861, 863, 864, 875], "set": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 44, 45, 46, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 80, 81, 82, 84, 85, 86, 88, 91, 92, 93, 94, 95, 97, 98, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 124, 125, 126, 130, 131, 133, 134, 135, 136, 139, 140, 141, 142, 143, 145, 148, 149, 151, 154, 155, 157, 158, 159, 160, 161, 164, 165, 167, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 211, 212, 215, 219, 220, 221, 224, 227, 238, 239, 255, 256, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 285, 286, 295, 296, 298, 300, 301, 315, 323, 328, 339, 352, 353, 355, 357, 358, 359, 363, 366, 372, 373, 374, 375, 376, 377, 379, 380, 382, 384, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 430, 431, 432, 435, 436, 437, 440, 441, 442, 446, 448, 450, 463, 464, 465, 466, 472, 475, 476, 477, 483, 490, 491, 494, 497, 508, 510, 512, 514, 516, 517, 518, 519, 520, 521, 524, 525, 526, 528, 529, 533, 538, 539, 541, 542, 543, 546, 548, 554, 555, 556, 557, 558, 560, 567, 568, 569, 571, 572, 574, 584, 596, 601, 607, 608, 612, 613, 614, 617, 620, 623, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 660, 672, 673, 677, 679, 681, 682, 683, 684, 685, 686, 690, 695, 697, 698, 699, 700, 701, 702, 703, 704, 705, 711, 713, 714, 721, 722, 723, 724, 725, 726, 730, 732, 733, 735, 740, 741, 742, 745, 759, 761, 766, 769, 770, 772, 774, 777, 778, 779, 780, 781, 785, 787, 788, 789, 794, 795, 796, 797, 798, 800, 802, 804, 805, 806, 807, 808, 811, 814, 830, 832, 833, 838, 839, 841, 852, 854, 856, 857, 860, 861, 864, 875], "channel": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 65, 67, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 88, 90, 91, 92, 93, 94, 95, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 140, 141, 143, 145, 149, 151, 155, 156, 157, 158, 161, 164, 165, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 189, 190, 193, 194, 197, 201, 202, 204, 205, 207, 208, 210, 211, 212, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 237, 238, 242, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 276, 277, 278, 279, 282, 283, 295, 296, 306, 308, 309, 339, 341, 343, 344, 347, 351, 352, 353, 354, 355, 356, 357, 366, 367, 368, 370, 378, 407, 409, 414, 415, 416, 418, 420, 423, 428, 432, 437, 439, 440, 445, 446, 448, 449, 450, 451, 459, 464, 467, 470, 472, 473, 474, 475, 476, 483, 485, 486, 487, 488, 490, 491, 492, 494, 497, 498, 499, 501, 511, 514, 518, 523, 533, 546, 547, 548, 549, 551, 552, 553, 554, 555, 557, 560, 561, 563, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 580, 582, 583, 584, 587, 588, 589, 591, 594, 597, 598, 607, 608, 609, 610, 612, 613, 614, 615, 630, 631, 636, 637, 640, 645, 647, 648, 649, 663, 675, 681, 682, 683, 685, 686, 690, 695, 696, 697, 698, 699, 703, 704, 705, 706, 708, 712, 718, 722, 725, 726, 727, 742, 755, 758, 759, 762, 763, 764, 766, 767, 768, 771, 772, 773, 774, 776, 778, 779, 780, 781, 782, 785, 786, 787, 788, 789, 791, 792, 793, 794, 795, 796, 797, 798, 802, 803, 804, 812, 814, 815, 830, 832, 834, 838, 841, 842, 852, 854, 856, 861, 864, 865, 875], "set_channel_typ": [1, 126, 139, 148, 150, 190, 213, 262, 263, 264, 265, 440, 475, 476, 875], "eeg058": 1, "set_eeg_refer": [1, 29, 70, 91, 92, 150, 158, 161, 166, 181, 188, 202, 204, 206, 220, 239, 262, 263, 264, 265, 475, 476, 554, 637, 659, 861, 865, 875], "averag": [1, 2, 4, 5, 7, 10, 11, 13, 14, 15, 16, 18, 19, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 62, 64, 66, 67, 68, 70, 71, 72, 75, 77, 78, 79, 80, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 102, 105, 106, 108, 110, 111, 114, 115, 117, 118, 119, 122, 125, 127, 130, 131, 133, 134, 135, 136, 140, 141, 142, 143, 144, 145, 149, 151, 152, 153, 157, 158, 161, 164, 165, 168, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 190, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 234, 237, 238, 239, 242, 254, 255, 259, 261, 262, 263, 264, 265, 267, 269, 270, 271, 273, 276, 277, 278, 284, 351, 352, 354, 369, 385, 407, 414, 421, 426, 428, 441, 448, 464, 475, 476, 499, 509, 510, 523, 524, 525, 526, 528, 529, 535, 538, 539, 554, 555, 559, 560, 562, 567, 568, 569, 571, 574, 575, 578, 580, 609, 613, 614, 637, 640, 651, 659, 695, 696, 697, 698, 699, 713, 714, 722, 723, 724, 725, 726, 727, 742, 766, 774, 776, 777, 781, 785, 786, 793, 794, 796, 797, 802, 804, 821, 830, 850, 851, 854, 860, 861, 863, 875], "project": [1, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 81, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 130, 131, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 197, 198, 199, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 234, 238, 239, 242, 257, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 276, 277, 278, 282, 283, 295, 296, 298, 339, 341, 345, 352, 353, 354, 355, 357, 366, 368, 384, 415, 427, 448, 450, 451, 474, 475, 476, 495, 515, 517, 519, 521, 522, 523, 533, 554, 555, 566, 567, 568, 570, 574, 580, 583, 591, 598, 606, 615, 621, 636, 637, 640, 659, 672, 690, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 742, 758, 759, 764, 767, 774, 776, 778, 780, 781, 785, 793, 794, 795, 796, 798, 800, 805, 811, 812, 814, 826, 830, 834, 839, 841, 846, 850, 851, 853, 863, 864, 865, 875], "true": [1, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 81, 82, 84, 85, 86, 90, 91, 92, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 121, 122, 123, 124, 125, 127, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 148, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 215, 216, 220, 221, 224, 226, 227, 228, 229, 232, 234, 237, 238, 239, 242, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 285, 286, 295, 296, 298, 300, 301, 304, 305, 306, 307, 310, 311, 312, 315, 318, 319, 320, 321, 323, 336, 338, 339, 340, 341, 342, 345, 352, 356, 357, 358, 359, 361, 362, 366, 367, 368, 372, 374, 375, 376, 377, 379, 380, 382, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 425, 426, 428, 429, 432, 436, 437, 438, 439, 440, 441, 442, 445, 446, 448, 450, 451, 452, 455, 460, 464, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 515, 516, 518, 520, 521, 522, 523, 524, 525, 526, 528, 529, 531, 532, 533, 535, 537, 538, 539, 540, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 564, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 580, 581, 583, 598, 606, 609, 610, 613, 618, 626, 628, 631, 634, 637, 639, 640, 642, 643, 644, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 665, 669, 672, 673, 676, 677, 679, 682, 683, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 704, 705, 707, 711, 712, 713, 720, 721, 722, 723, 724, 725, 726, 727, 728, 730, 737, 740, 742, 747, 750, 751, 755, 756, 758, 759, 760, 761, 763, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 810, 812, 817, 818, 819, 820, 821, 822, 823, 825, 826, 827, 828, 829, 832, 834, 850, 851, 854, 857, 875], "show": [1, 4, 7, 8, 10, 12, 13, 14, 15, 16, 19, 22, 26, 27, 28, 29, 31, 32, 35, 37, 38, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 58, 59, 60, 63, 67, 68, 70, 72, 73, 76, 77, 83, 95, 97, 99, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 124, 125, 128, 129, 130, 131, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 154, 155, 156, 158, 159, 165, 167, 168, 169, 171, 175, 177, 178, 179, 180, 181, 182, 189, 190, 197, 199, 200, 201, 202, 203, 204, 205, 207, 209, 213, 215, 216, 219, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 259, 260, 261, 262, 263, 264, 265, 267, 270, 271, 275, 276, 277, 278, 305, 307, 310, 311, 407, 414, 448, 466, 467, 475, 476, 506, 546, 552, 554, 555, 569, 574, 576, 694, 695, 696, 697, 699, 711, 721, 742, 750, 751, 758, 759, 760, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 801, 802, 803, 804, 805, 806, 807, 811, 830, 832, 834, 839, 842, 850, 857, 863, 875], "power": [1, 12, 21, 27, 32, 36, 38, 56, 60, 67, 70, 80, 81, 103, 104, 110, 111, 112, 113, 119, 126, 131, 136, 144, 145, 148, 149, 161, 164, 165, 171, 179, 182, 190, 193, 199, 200, 204, 207, 210, 216, 222, 223, 225, 229, 230, 231, 237, 242, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 276, 277, 278, 286, 287, 288, 289, 292, 295, 296, 316, 351, 352, 356, 357, 407, 409, 412, 414, 415, 418, 420, 441, 443, 445, 446, 447, 448, 475, 476, 481, 511, 513, 518, 521, 522, 523, 528, 529, 533, 536, 538, 539, 546, 551, 552, 555, 602, 610, 615, 617, 630, 643, 649, 660, 675, 676, 677, 678, 679, 682, 683, 684, 685, 686, 695, 696, 697, 698, 699, 704, 713, 714, 722, 723, 724, 725, 726, 727, 736, 742, 758, 765, 766, 767, 773, 774, 776, 779, 781, 782, 787, 793, 796, 802, 810, 830, 834, 851, 854, 856, 860, 875], "line": [1, 8, 9, 69, 79, 80, 81, 99, 107, 110, 118, 119, 121, 125, 135, 136, 139, 140, 143, 150, 154, 155, 157, 158, 159, 161, 168, 170, 171, 176, 182, 189, 190, 200, 202, 203, 205, 206, 207, 208, 209, 213, 216, 226, 227, 238, 239, 242, 259, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 333, 339, 345, 407, 414, 466, 475, 476, 506, 512, 554, 555, 569, 590, 598, 610, 617, 626, 629, 695, 697, 699, 742, 750, 755, 758, 759, 766, 767, 772, 773, 774, 776, 778, 780, 781, 782, 784, 785, 788, 789, 790, 793, 794, 795, 796, 797, 799, 800, 801, 802, 804, 805, 823, 828, 832, 833, 837, 839, 841, 846, 850, 851, 852, 854, 857, 865, 875], "interfer": [1, 121, 135, 197, 198, 201, 206, 207, 208, 210, 215, 242, 254, 583, 830, 851, 854], "remov": [1, 7, 16, 18, 21, 27, 28, 31, 32, 35, 42, 51, 58, 59, 68, 69, 70, 71, 73, 74, 75, 76, 79, 80, 83, 88, 91, 97, 101, 107, 110, 111, 117, 125, 130, 133, 135, 139, 140, 141, 142, 145, 148, 149, 150, 156, 157, 159, 160, 161, 165, 166, 167, 169, 171, 175, 176, 179, 180, 181, 182, 183, 190, 194, 197, 198, 199, 200, 201, 202, 205, 206, 208, 210, 213, 215, 216, 221, 226, 227, 228, 229, 237, 239, 242, 254, 256, 259, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 286, 300, 310, 326, 345, 352, 361, 362, 413, 415, 419, 430, 446, 450, 459, 472, 473, 475, 476, 477, 490, 495, 521, 552, 553, 554, 555, 556, 570, 574, 590, 591, 598, 604, 613, 615, 618, 637, 640, 659, 661, 695, 697, 698, 699, 730, 742, 763, 779, 795, 811, 812, 830, 834, 842, 851, 856, 857, 860, 861, 863, 875], "plot_psd": [1, 70, 73, 107, 127, 139, 141, 142, 165, 166, 171, 182, 190, 197, 201, 205, 207, 209, 216, 237, 238, 262, 263, 264, 265, 272, 475, 476, 834, 857, 875], "60": [1, 5, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 28, 29, 30, 31, 33, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 64, 67, 68, 69, 71, 72, 73, 75, 77, 79, 80, 81, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 105, 106, 107, 108, 109, 110, 112, 114, 115, 117, 118, 119, 121, 122, 125, 129, 130, 131, 133, 135, 136, 139, 140, 142, 143, 148, 149, 150, 151, 158, 165, 166, 167, 168, 169, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 214, 215, 216, 220, 221, 224, 225, 227, 228, 229, 232, 234, 237, 254, 446, 475, 476, 581, 783, 851, 875], "fals": [1, 4, 5, 8, 9, 11, 12, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 30, 31, 32, 40, 41, 42, 44, 47, 48, 49, 50, 51, 54, 55, 58, 63, 64, 67, 68, 69, 70, 71, 73, 74, 75, 77, 79, 80, 81, 82, 84, 86, 88, 92, 94, 95, 97, 98, 99, 102, 105, 106, 107, 108, 110, 112, 113, 116, 117, 118, 121, 122, 124, 125, 127, 132, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 154, 155, 157, 159, 161, 165, 166, 167, 168, 169, 170, 171, 175, 177, 179, 180, 181, 182, 184, 187, 190, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 225, 226, 227, 228, 229, 234, 237, 238, 239, 242, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 286, 289, 290, 293, 295, 296, 298, 300, 301, 305, 306, 307, 310, 311, 312, 315, 318, 320, 321, 324, 338, 340, 342, 345, 352, 357, 358, 359, 361, 362, 366, 369, 372, 374, 375, 376, 377, 379, 380, 382, 384, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 412, 413, 414, 415, 421, 425, 426, 428, 432, 437, 438, 439, 440, 441, 442, 448, 451, 455, 460, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 515, 518, 520, 521, 522, 523, 524, 525, 526, 528, 529, 531, 532, 533, 535, 538, 539, 540, 546, 547, 548, 550, 551, 552, 553, 554, 555, 560, 567, 568, 569, 571, 572, 574, 575, 576, 580, 581, 583, 584, 587, 603, 606, 609, 610, 613, 620, 625, 626, 628, 629, 631, 633, 634, 637, 640, 641, 642, 644, 650, 651, 652, 653, 654, 655, 656, 657, 662, 668, 671, 672, 673, 676, 679, 682, 683, 685, 686, 691, 692, 694, 695, 696, 697, 698, 699, 702, 705, 707, 711, 712, 713, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 737, 740, 742, 751, 755, 756, 758, 759, 760, 763, 766, 767, 770, 772, 773, 774, 776, 778, 780, 781, 783, 785, 787, 789, 791, 794, 795, 796, 797, 798, 800, 801, 802, 804, 805, 808, 815, 817, 818, 819, 820, 821, 822, 823, 825, 826, 827, 828, 829, 832, 857, 860, 875], "notch_filt": [1, 5, 80, 135, 166, 190, 201, 208, 210, 262, 263, 264, 265, 445, 475, 476, 865, 875], "arang": [1, 4, 8, 9, 15, 19, 43, 45, 67, 80, 88, 90, 92, 93, 105, 110, 112, 118, 125, 165, 190, 193, 194, 200, 209, 210, 219, 221, 224, 226, 227, 228, 229, 233, 234, 239, 268, 275, 446, 463, 475, 476, 492, 592, 687, 711, 721, 722, 723, 725, 726], "181": [1, 35, 124, 168, 190, 207, 212, 224, 242, 660, 681], "fir_design": [1, 7, 8, 9, 11, 13, 14, 15, 16, 18, 75, 86, 97, 119, 131, 190, 200, 203, 239, 262, 263, 264, 265, 409, 418, 443, 445, 446, 475, 476, 875], "firwin": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 75, 80, 81, 82, 86, 97, 111, 112, 113, 119, 131, 135, 140, 143, 145, 150, 190, 194, 200, 201, 202, 203, 208, 209, 210, 229, 239, 262, 263, 264, 265, 409, 418, 443, 445, 446, 475, 476, 875], "event": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 27, 28, 32, 33, 34, 42, 45, 46, 49, 61, 69, 70, 71, 72, 73, 76, 78, 79, 80, 81, 82, 83, 86, 88, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 115, 119, 126, 130, 134, 135, 139, 140, 141, 142, 144, 145, 148, 151, 152, 153, 161, 164, 168, 172, 173, 176, 179, 181, 182, 183, 184, 187, 188, 190, 194, 197, 198, 199, 200, 201, 202, 203, 205, 207, 209, 210, 213, 216, 217, 218, 219, 220, 221, 225, 226, 227, 228, 229, 232, 234, 237, 238, 239, 242, 254, 255, 256, 257, 262, 263, 264, 265, 267, 272, 281, 285, 312, 351, 352, 359, 360, 361, 390, 408, 423, 428, 430, 431, 436, 448, 449, 464, 475, 476, 483, 490, 491, 492, 497, 499, 516, 520, 545, 546, 550, 552, 555, 556, 557, 558, 563, 567, 568, 571, 572, 575, 576, 577, 578, 579, 597, 607, 608, 609, 610, 640, 645, 674, 681, 695, 697, 698, 742, 743, 766, 772, 773, 775, 789, 795, 803, 811, 814, 820, 830, 850, 851, 854, 857, 860, 861, 865, 875], "find_ev": [1, 5, 7, 10, 32, 33, 34, 42, 45, 46, 49, 70, 71, 72, 78, 82, 88, 91, 93, 97, 105, 106, 108, 111, 139, 140, 141, 148, 151, 161, 165, 167, 171, 176, 179, 181, 182, 184, 190, 194, 198, 201, 202, 203, 205, 210, 214, 220, 221, 226, 237, 238, 267, 433, 449, 483, 490, 497, 516, 550, 597, 610, 830, 850, 857, 861, 865, 875], "stim_channel": [1, 5, 7, 42, 46, 78, 105, 106, 108, 111, 136, 139, 141, 148, 151, 165, 167, 176, 190, 198, 203, 205, 214, 226, 237, 238, 255, 344, 448, 449, 475, 476, 483, 490, 497, 577, 875], "uppt001": [1, 7, 190], "pick": [1, 2, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 67, 68, 69, 71, 72, 73, 75, 77, 79, 80, 81, 84, 86, 88, 90, 92, 94, 95, 97, 98, 101, 102, 105, 106, 107, 108, 109, 110, 113, 115, 117, 118, 119, 125, 129, 130, 131, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 156, 157, 159, 161, 165, 168, 169, 171, 176, 177, 178, 179, 180, 181, 183, 190, 194, 197, 198, 199, 201, 202, 203, 205, 206, 208, 209, 210, 213, 216, 219, 220, 221, 226, 227, 228, 229, 232, 234, 237, 238, 257, 259, 262, 263, 264, 265, 266, 267, 269, 270, 272, 273, 276, 277, 278, 285, 295, 296, 308, 311, 312, 315, 322, 325, 327, 357, 366, 409, 415, 423, 428, 432, 445, 446, 475, 476, 546, 547, 548, 549, 552, 553, 554, 555, 557, 570, 571, 572, 577, 580, 589, 591, 598, 663, 681, 690, 695, 696, 697, 698, 699, 703, 704, 705, 706, 708, 712, 725, 726, 742, 756, 760, 764, 766, 772, 773, 776, 778, 779, 785, 786, 787, 789, 791, 793, 796, 798, 800, 805, 830, 834, 850, 857, 860, 861, 875], "pick_typ": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 26, 28, 31, 34, 35, 40, 45, 46, 49, 51, 58, 59, 67, 68, 70, 71, 73, 81, 86, 88, 90, 94, 95, 97, 98, 101, 102, 105, 106, 108, 109, 111, 117, 125, 131, 135, 139, 140, 148, 149, 165, 167, 168, 169, 171, 175, 180, 181, 194, 197, 198, 199, 201, 202, 203, 204, 205, 209, 210, 213, 221, 226, 227, 228, 229, 232, 234, 238, 239, 262, 263, 264, 265, 475, 476, 546, 695, 697, 698, 699, 834, 857, 861, 865, 875], "info": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 73, 74, 78, 79, 80, 81, 82, 84, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 119, 121, 122, 123, 125, 126, 131, 133, 134, 135, 136, 139, 141, 143, 145, 148, 149, 150, 154, 155, 156, 157, 158, 159, 161, 164, 165, 166, 167, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 215, 216, 220, 221, 225, 226, 227, 228, 229, 232, 234, 237, 238, 239, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 271, 272, 273, 275, 280, 282, 283, 295, 296, 297, 303, 304, 308, 309, 311, 315, 316, 317, 318, 322, 324, 325, 327, 338, 340, 342, 347, 352, 356, 357, 363, 366, 367, 368, 370, 407, 409, 414, 415, 416, 418, 423, 426, 428, 432, 437, 438, 439, 440, 443, 445, 446, 450, 451, 458, 459, 467, 470, 472, 473, 474, 475, 476, 477, 480, 482, 494, 511, 514, 517, 518, 519, 521, 523, 533, 546, 549, 551, 552, 553, 554, 555, 557, 559, 566, 570, 571, 572, 574, 577, 580, 583, 587, 588, 589, 591, 598, 601, 608, 612, 630, 631, 636, 637, 640, 642, 646, 647, 648, 649, 659, 660, 663, 681, 695, 696, 697, 698, 699, 703, 704, 705, 706, 708, 726, 737, 740, 742, 755, 758, 759, 762, 763, 766, 767, 768, 772, 773, 776, 777, 778, 779, 782, 784, 789, 791, 794, 795, 796, 798, 804, 812, 821, 830, 832, 834, 837, 839, 850, 851, 852, 854, 857, 863, 865, 875], "eeg": [1, 4, 5, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 59, 60, 62, 63, 64, 66, 67, 68, 71, 72, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 114, 115, 117, 118, 119, 120, 121, 122, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 189, 190, 191, 192, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 226, 227, 228, 229, 230, 231, 232, 234, 237, 238, 242, 254, 257, 259, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 295, 296, 298, 300, 303, 304, 308, 309, 310, 312, 314, 316, 317, 321, 322, 324, 325, 326, 327, 328, 329, 332, 333, 335, 351, 352, 353, 354, 355, 356, 357, 361, 362, 363, 366, 367, 368, 370, 385, 399, 400, 407, 409, 411, 414, 415, 416, 422, 423, 426, 428, 431, 436, 439, 440, 448, 450, 451, 464, 466, 470, 472, 473, 475, 476, 481, 483, 485, 486, 487, 490, 491, 492, 493, 497, 499, 501, 502, 504, 511, 514, 518, 519, 521, 522, 523, 533, 534, 536, 537, 546, 552, 553, 554, 555, 556, 557, 560, 563, 564, 567, 568, 569, 570, 571, 572, 576, 577, 580, 582, 589, 591, 598, 602, 604, 606, 607, 609, 610, 613, 614, 615, 625, 628, 636, 637, 640, 644, 648, 655, 660, 663, 681, 682, 683, 685, 686, 690, 695, 697, 698, 699, 703, 704, 705, 706, 708, 725, 726, 734, 742, 758, 759, 762, 766, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 785, 786, 792, 793, 794, 795, 796, 797, 798, 802, 803, 804, 809, 810, 814, 830, 831, 841, 846, 849, 851, 854, 860, 861, 864, 865, 875], "stim": [1, 8, 9, 11, 14, 15, 16, 28, 42, 45, 46, 65, 68, 70, 71, 86, 88, 97, 98, 102, 105, 106, 108, 139, 140, 141, 148, 150, 165, 168, 171, 181, 187, 190, 194, 201, 202, 203, 213, 214, 221, 226, 227, 228, 238, 239, 254, 255, 262, 263, 264, 265, 267, 272, 309, 347, 370, 440, 448, 449, 475, 476, 483, 490, 497, 499, 552, 555, 577, 610, 645, 695, 697, 698, 699, 772, 795, 830, 857, 860, 861, 875], "exclud": [1, 5, 7, 8, 9, 11, 13, 14, 15, 16, 24, 26, 28, 31, 34, 35, 40, 41, 43, 45, 49, 50, 51, 58, 59, 64, 67, 68, 69, 70, 73, 77, 81, 84, 86, 90, 94, 95, 98, 102, 105, 106, 107, 108, 109, 110, 131, 141, 143, 149, 155, 156, 157, 165, 168, 171, 175, 176, 180, 181, 182, 183, 184, 190, 194, 197, 198, 199, 201, 203, 204, 206, 216, 221, 226, 227, 228, 232, 234, 239, 254, 259, 260, 261, 262, 263, 264, 265, 269, 270, 272, 273, 275, 276, 277, 278, 303, 304, 317, 324, 357, 363, 366, 368, 415, 426, 475, 476, 483, 490, 492, 497, 519, 546, 547, 548, 550, 552, 553, 554, 555, 556, 567, 568, 569, 574, 583, 598, 610, 615, 636, 640, 644, 682, 683, 685, 686, 695, 697, 698, 699, 703, 704, 705, 706, 712, 767, 776, 778, 779, 780, 786, 788, 789, 796, 850, 860, 861, 875], "bad": [1, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 27, 28, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 49, 51, 58, 59, 64, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 83, 86, 88, 90, 91, 94, 95, 98, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 115, 119, 125, 126, 134, 135, 136, 139, 140, 141, 143, 144, 145, 148, 149, 150, 151, 161, 164, 165, 166, 167, 168, 169, 171, 175, 176, 179, 180, 181, 182, 183, 184, 190, 194, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 226, 227, 228, 229, 238, 239, 254, 256, 257, 259, 262, 263, 264, 265, 267, 296, 308, 311, 312, 317, 324, 327, 357, 361, 366, 367, 368, 409, 423, 428, 436, 445, 446, 448, 464, 475, 476, 515, 533, 547, 548, 549, 552, 553, 554, 555, 557, 558, 559, 562, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 583, 584, 589, 591, 598, 610, 613, 636, 637, 640, 663, 681, 695, 697, 698, 699, 703, 704, 705, 706, 708, 726, 766, 767, 772, 773, 776, 778, 779, 780, 787, 791, 795, 796, 814, 830, 841, 852, 854, 860, 875], "epoch": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 27, 32, 33, 34, 36, 45, 46, 49, 56, 59, 61, 68, 69, 70, 71, 72, 77, 78, 81, 82, 86, 88, 90, 91, 93, 94, 95, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 110, 111, 119, 120, 126, 128, 130, 134, 135, 140, 147, 149, 161, 166, 167, 168, 169, 176, 178, 179, 180, 181, 182, 183, 184, 187, 190, 193, 194, 197, 198, 201, 204, 205, 208, 210, 214, 215, 220, 221, 225, 226, 227, 228, 237, 238, 239, 249, 254, 255, 256, 257, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 273, 276, 277, 278, 279, 289, 290, 293, 311, 312, 315, 351, 352, 353, 355, 356, 357, 359, 391, 407, 409, 412, 413, 414, 415, 416, 419, 420, 421, 422, 423, 432, 433, 436, 437, 448, 466, 472, 475, 476, 481, 509, 514, 515, 520, 521, 522, 523, 524, 525, 526, 528, 529, 536, 538, 539, 550, 552, 554, 555, 556, 557, 563, 564, 567, 568, 571, 572, 573, 577, 582, 583, 598, 606, 607, 608, 609, 610, 617, 621, 637, 640, 649, 659, 680, 681, 695, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 713, 722, 723, 724, 725, 726, 727, 742, 766, 771, 772, 773, 774, 785, 786, 787, 789, 793, 795, 796, 803, 830, 834, 851, 852, 854, 860, 861, 863, 865, 875], "baselin": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 68, 70, 71, 72, 73, 74, 77, 78, 81, 82, 84, 85, 86, 88, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 110, 111, 112, 114, 115, 117, 118, 119, 122, 125, 126, 130, 134, 135, 136, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 159, 161, 164, 165, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 197, 198, 199, 201, 202, 203, 205, 209, 210, 219, 221, 225, 226, 227, 228, 229, 232, 234, 238, 239, 242, 254, 257, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 351, 352, 357, 377, 448, 475, 476, 515, 520, 538, 539, 555, 571, 572, 590, 606, 613, 614, 680, 695, 698, 766, 782, 786, 799, 802, 821, 830, 850, 854, 857, 860, 865, 869, 875], "none": [1, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 68, 69, 70, 72, 75, 77, 79, 80, 81, 82, 84, 85, 86, 88, 91, 92, 94, 95, 97, 98, 101, 102, 105, 107, 108, 110, 111, 112, 115, 117, 118, 119, 122, 125, 130, 133, 134, 135, 136, 140, 141, 142, 143, 144, 148, 149, 150, 151, 157, 158, 159, 160, 161, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 190, 193, 194, 200, 201, 202, 203, 205, 206, 208, 209, 210, 215, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 238, 239, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 314, 315, 316, 317, 319, 323, 324, 325, 326, 327, 328, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 455, 456, 457, 458, 459, 460, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 548, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 586, 587, 589, 590, 591, 592, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 674, 680, 681, 682, 683, 684, 685, 686, 687, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 711, 713, 714, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 728, 730, 731, 732, 734, 737, 741, 742, 745, 747, 750, 751, 752, 754, 755, 758, 759, 760, 761, 762, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 810, 811, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 834, 850, 856, 857, 875], "preload": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 32, 33, 34, 42, 49, 69, 70, 71, 72, 79, 80, 81, 82, 86, 97, 101, 105, 108, 110, 111, 112, 115, 119, 127, 131, 139, 140, 141, 143, 144, 145, 148, 150, 151, 158, 165, 166, 169, 171, 179, 181, 182, 183, 184, 187, 190, 194, 197, 199, 202, 203, 204, 205, 209, 213, 220, 221, 226, 227, 228, 229, 232, 234, 237, 238, 239, 254, 262, 263, 264, 265, 272, 345, 361, 474, 475, 476, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 515, 567, 568, 571, 572, 606, 608, 612, 637, 640, 695, 697, 698, 699, 772, 795, 850, 851, 875], "physiolog": [1, 8, 42, 136, 201, 203, 206, 242, 262, 263, 264, 265, 377, 399, 400, 475, 476, 640, 851, 875], "artifact": [1, 7, 27, 32, 42, 69, 76, 81, 82, 83, 107, 108, 141, 143, 145, 148, 164, 165, 171, 182, 190, 199, 200, 204, 206, 208, 209, 211, 212, 215, 216, 242, 256, 257, 260, 261, 262, 263, 264, 265, 267, 269, 270, 272, 273, 276, 277, 278, 342, 343, 353, 354, 355, 356, 357, 361, 409, 413, 420, 448, 473, 475, 476, 488, 490, 503, 546, 549, 552, 554, 555, 559, 560, 562, 567, 568, 569, 571, 572, 575, 576, 577, 579, 583, 586, 590, 598, 647, 648, 695, 698, 720, 722, 723, 725, 726, 758, 784, 786, 793, 794, 795, 810, 814, 851, 854, 857, 863, 864, 875], "eyeblink": [1, 568, 572], "heartbeat": [1, 81, 141, 145, 199, 203, 204, 205, 206, 208, 215, 567, 571, 575, 578], "usssp": [1, 11, 15, 18, 27, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 67, 68, 70, 72, 82, 86, 88, 90, 91, 92, 93, 102, 105, 106, 107, 108, 119, 120, 128, 130, 139, 140, 141, 144, 145, 148, 150, 151, 161, 164, 165, 171, 175, 176, 177, 178, 179, 180, 181, 182, 190, 197, 198, 199, 201, 202, 203, 206, 208, 211, 212, 213, 216, 220, 229, 232, 234, 257, 259, 262, 263, 264, 265, 266, 267, 271, 272, 273, 353, 354, 355, 448, 475, 476, 515, 549, 552, 554, 567, 568, 571, 572, 598, 606, 615, 621, 636, 697, 699, 774, 776, 778, 780, 781, 793, 794, 796, 814, 830, 854, 860, 863, 864, 875], "add_proj": [1, 2, 4, 5, 42, 90, 99, 107, 109, 139, 141, 145, 148, 161, 171, 183, 184, 190, 194, 197, 202, 204, 205, 209, 210, 213, 225, 262, 263, 264, 265, 272, 475, 476, 659], "compute_proj_evok": [1, 204, 353, 355, 865], "copi": [1, 2, 4, 5, 8, 9, 10, 12, 18, 19, 22, 27, 38, 45, 46, 47, 48, 49, 54, 58, 61, 69, 72, 73, 77, 82, 105, 107, 112, 117, 125, 133, 135, 139, 140, 143, 148, 149, 150, 154, 160, 161, 165, 167, 168, 171, 175, 177, 184, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 210, 213, 215, 221, 225, 228, 254, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 275, 276, 277, 278, 279, 285, 286, 300, 305, 307, 310, 315, 362, 367, 369, 374, 375, 376, 377, 379, 380, 382, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 416, 429, 432, 445, 446, 475, 476, 521, 535, 547, 548, 551, 554, 555, 564, 567, 568, 573, 577, 580, 584, 598, 607, 634, 637, 640, 692, 695, 696, 697, 698, 699, 701, 703, 704, 705, 706, 707, 712, 729, 730, 834, 842, 852, 854, 857, 860, 861, 875], "apply_proj": [1, 70, 92, 141, 145, 148, 158, 166, 181, 204, 205, 206, 262, 263, 264, 265, 437, 438, 439, 440, 475, 476, 640, 795, 875], "fix": [1, 5, 22, 31, 40, 41, 45, 47, 48, 49, 54, 55, 58, 60, 78, 88, 98, 133, 139, 141, 157, 162, 163, 164, 167, 169, 175, 179, 194, 209, 210, 220, 242, 255, 260, 261, 264, 265, 266, 273, 295, 296, 306, 318, 352, 359, 362, 420, 448, 450, 452, 466, 470, 472, 473, 475, 512, 516, 518, 522, 523, 524, 525, 526, 533, 534, 537, 538, 539, 555, 559, 563, 581, 603, 615, 626, 636, 701, 704, 711, 721, 722, 723, 725, 726, 758, 777, 822, 823, 828, 832, 834, 839, 853, 854, 857, 860, 875], "preprocess": [1, 4, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 67, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 86, 97, 110, 133, 136, 143, 145, 171, 183, 187, 190, 193, 194, 197, 198, 199, 200, 202, 203, 204, 205, 207, 208, 212, 216, 256, 262, 263, 264, 265, 267, 272, 351, 407, 411, 414, 416, 428, 436, 448, 475, 476, 494, 496, 503, 549, 552, 608, 699, 742, 762, 766, 772, 775, 780, 784, 785, 786, 787, 788, 789, 795, 830, 841, 851, 852, 854, 857, 861, 863, 865, 875], "fix_stim_artifact": [1, 865, 875], "correct": [1, 4, 8, 9, 11, 12, 16, 18, 21, 27, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 68, 70, 71, 72, 73, 76, 77, 78, 81, 83, 84, 85, 86, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 110, 111, 112, 114, 115, 117, 118, 119, 125, 126, 129, 130, 134, 135, 136, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 155, 158, 159, 160, 161, 164, 165, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 219, 220, 221, 225, 226, 227, 228, 229, 232, 233, 234, 238, 239, 242, 254, 256, 257, 259, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 276, 277, 278, 285, 307, 318, 351, 352, 357, 363, 407, 413, 414, 419, 426, 428, 446, 448, 457, 475, 476, 481, 483, 487, 490, 503, 504, 520, 523, 538, 539, 552, 554, 555, 556, 565, 566, 571, 572, 574, 583, 586, 590, 597, 603, 610, 613, 614, 632, 634, 650, 651, 652, 653, 654, 655, 656, 657, 673, 676, 679, 680, 681, 682, 683, 684, 695, 697, 698, 699, 707, 714, 766, 773, 774, 780, 781, 785, 786, 794, 796, 797, 799, 802, 821, 823, 830, 832, 834, 839, 850, 853, 854, 857, 869, 872, 875], "delai": [1, 4, 19, 190, 193, 204, 205, 209, 242, 255, 257, 262, 263, 264, 265, 413, 419, 424, 443, 445, 446, 475, 476, 515, 606, 783, 851, 875], "due": [1, 5, 40, 43, 47, 79, 133, 167, 188, 189, 197, 199, 200, 204, 208, 209, 210, 213, 216, 220, 239, 258, 262, 263, 264, 265, 266, 268, 399, 406, 413, 424, 428, 441, 472, 473, 475, 476, 565, 566, 574, 580, 583, 597, 617, 623, 698, 742, 824, 830, 850, 854, 857, 875], "hardwar": [1, 165, 189, 199, 206, 255, 262, 263, 267, 372, 399, 475, 476, 555, 772, 789, 795, 830, 840, 857, 860, 875], "i": [1, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 21, 22, 26, 27, 28, 31, 32, 34, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 54, 59, 60, 63, 65, 68, 69, 70, 71, 72, 73, 74, 77, 79, 80, 81, 85, 86, 88, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 107, 108, 110, 111, 112, 113, 114, 115, 117, 118, 121, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 164, 165, 166, 168, 170, 171, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 228, 229, 232, 233, 234, 237, 238, 239, 242, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 294, 295, 296, 298, 300, 302, 304, 305, 306, 310, 312, 315, 316, 318, 320, 321, 322, 323, 325, 327, 328, 329, 335, 337, 339, 340, 341, 345, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 365, 366, 367, 368, 369, 370, 372, 374, 375, 376, 377, 379, 380, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 431, 432, 433, 434, 436, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 463, 464, 465, 466, 467, 470, 472, 473, 474, 475, 476, 477, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 512, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 541, 542, 544, 545, 546, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 580, 581, 582, 583, 584, 587, 588, 590, 591, 592, 597, 598, 600, 601, 603, 606, 607, 608, 609, 610, 611, 612, 613, 614, 617, 618, 620, 623, 626, 629, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 707, 708, 711, 713, 714, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 730, 732, 736, 737, 738, 740, 741, 742, 743, 745, 747, 750, 751, 752, 754, 755, 758, 759, 760, 763, 765, 766, 767, 768, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 815, 820, 821, 823, 825, 828, 830, 833, 834, 835, 837, 839, 842, 845, 846, 848, 850, 851, 852, 853, 855, 856, 858, 859, 860, 861, 862, 863, 865, 875], "4": [1, 2, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 121, 122, 123, 125, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 165, 167, 168, 170, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 190, 193, 194, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 242, 254, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 276, 277, 278, 295, 296, 303, 304, 310, 311, 312, 333, 352, 377, 385, 407, 413, 414, 415, 420, 426, 430, 431, 442, 448, 450, 465, 472, 473, 475, 476, 512, 522, 529, 554, 555, 560, 562, 564, 567, 569, 576, 582, 592, 598, 617, 636, 640, 644, 648, 655, 675, 676, 679, 683, 694, 695, 697, 698, 699, 711, 713, 718, 721, 722, 723, 724, 725, 726, 727, 730, 731, 732, 742, 745, 757, 758, 759, 761, 766, 772, 773, 774, 776, 778, 781, 782, 785, 792, 794, 795, 796, 797, 798, 800, 802, 804, 805, 806, 815, 830, 832, 833, 839, 840, 850, 851, 854, 857, 860], "m": [1, 2, 4, 5, 8, 16, 18, 19, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 39, 40, 41, 44, 45, 46, 48, 50, 51, 53, 54, 55, 57, 58, 59, 60, 68, 70, 71, 72, 77, 84, 85, 94, 95, 96, 97, 98, 99, 101, 103, 107, 108, 111, 112, 114, 117, 118, 121, 124, 125, 133, 134, 136, 139, 140, 142, 143, 144, 148, 149, 150, 155, 156, 157, 158, 160, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 193, 198, 199, 200, 203, 205, 207, 208, 210, 214, 215, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 242, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 273, 276, 277, 278, 298, 302, 303, 323, 328, 333, 335, 337, 339, 341, 342, 343, 345, 352, 357, 363, 370, 377, 384, 399, 400, 407, 409, 411, 413, 414, 415, 418, 428, 431, 443, 445, 446, 450, 468, 469, 472, 473, 475, 476, 478, 491, 511, 519, 522, 530, 533, 537, 554, 555, 557, 563, 564, 566, 569, 571, 572, 574, 581, 583, 588, 591, 607, 644, 648, 652, 655, 657, 660, 665, 666, 667, 669, 670, 676, 681, 682, 683, 685, 686, 690, 695, 697, 698, 699, 711, 721, 724, 727, 742, 745, 759, 766, 774, 776, 777, 778, 781, 782, 785, 794, 795, 797, 800, 802, 804, 805, 806, 810, 812, 830, 834, 841, 849, 851, 857, 860, 861, 875], "shift_tim": [1, 84, 139, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 695, 698, 875], "004": [1, 10, 32, 33, 44, 119, 126, 139, 141, 144, 148, 165, 168, 175, 202, 221, 242, 274, 358, 519], "result": [1, 8, 9, 26, 29, 30, 45, 46, 55, 58, 60, 69, 78, 81, 88, 97, 99, 101, 105, 112, 124, 125, 132, 133, 135, 136, 143, 145, 148, 150, 154, 155, 156, 158, 159, 161, 165, 166, 169, 171, 175, 177, 187, 193, 194, 197, 200, 202, 203, 204, 205, 207, 213, 214, 216, 219, 221, 224, 225, 228, 229, 232, 233, 234, 242, 254, 256, 257, 262, 263, 264, 265, 267, 269, 270, 273, 274, 276, 277, 278, 287, 289, 296, 312, 315, 316, 351, 352, 357, 359, 361, 384, 386, 406, 408, 409, 423, 432, 441, 447, 465, 470, 472, 473, 475, 476, 492, 508, 515, 519, 522, 524, 525, 526, 528, 533, 534, 541, 555, 560, 566, 571, 572, 574, 581, 583, 600, 606, 614, 637, 647, 648, 649, 658, 659, 661, 680, 681, 682, 683, 684, 685, 686, 687, 695, 697, 698, 699, 742, 750, 766, 772, 773, 795, 834, 839, 850, 851, 854, 857, 860, 875], "time_unit": [1, 11, 14, 35, 40, 42, 43, 51, 59, 61, 68, 70, 84, 90, 91, 97, 98, 99, 119, 149, 150, 151, 161, 174, 176, 177, 182, 183, 184, 190, 194, 220, 225, 226, 227, 261, 264, 265, 269, 270, 273, 276, 277, 278, 766, 776, 778, 781, 782, 800, 805, 875], "": [1, 4, 7, 8, 10, 11, 12, 13, 14, 16, 18, 19, 21, 24, 26, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 51, 52, 53, 55, 58, 59, 61, 63, 68, 69, 70, 71, 72, 73, 74, 75, 79, 80, 84, 85, 90, 91, 94, 97, 98, 99, 101, 102, 105, 106, 107, 108, 110, 111, 113, 114, 117, 118, 119, 121, 123, 124, 125, 127, 131, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 242, 253, 254, 256, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 286, 288, 295, 296, 300, 301, 302, 319, 326, 351, 352, 356, 358, 364, 365, 381, 382, 384, 399, 400, 407, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 428, 431, 437, 438, 439, 440, 441, 443, 445, 446, 447, 466, 469, 472, 473, 475, 476, 480, 483, 490, 492, 497, 498, 506, 510, 514, 517, 519, 521, 522, 533, 537, 538, 539, 554, 555, 556, 566, 572, 573, 576, 577, 582, 583, 587, 590, 613, 614, 623, 625, 626, 627, 628, 632, 633, 635, 637, 640, 641, 643, 644, 645, 652, 655, 657, 672, 681, 682, 683, 684, 685, 686, 690, 691, 693, 695, 696, 697, 698, 699, 707, 711, 713, 714, 719, 721, 723, 724, 726, 727, 730, 734, 741, 742, 750, 751, 759, 760, 766, 768, 770, 772, 773, 776, 778, 779, 781, 782, 785, 789, 795, 797, 798, 800, 802, 803, 804, 805, 806, 810, 824, 825, 830, 832, 834, 838, 840, 846, 849, 850, 851, 852, 854, 856, 857, 859, 860, 861, 862, 863], "topomap": [1, 19, 42, 72, 81, 85, 117, 141, 150, 169, 202, 205, 229, 238, 259, 262, 263, 264, 265, 271, 272, 310, 407, 414, 475, 476, 554, 555, 569, 695, 697, 699, 759, 772, 774, 776, 779, 781, 785, 792, 793, 794, 795, 796, 797, 798, 802, 804, 830, 875], "plot_topomap": [1, 15, 16, 18, 19, 21, 42, 69, 70, 78, 85, 98, 107, 140, 141, 143, 149, 150, 165, 169, 175, 176, 190, 197, 205, 209, 216, 229, 237, 238, 239, 259, 262, 263, 264, 265, 271, 475, 476, 555, 695, 697, 699, 762, 774, 779, 787, 865, 875], "time": [1, 2, 4, 5, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 63, 64, 65, 67, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 88, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 140, 142, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 187, 189, 190, 193, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 214, 215, 216, 219, 220, 221, 224, 225, 228, 232, 233, 234, 237, 242, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 294, 295, 339, 340, 341, 342, 343, 344, 345, 346, 348, 351, 352, 355, 357, 358, 359, 361, 370, 399, 407, 408, 409, 410, 413, 414, 416, 417, 418, 419, 420, 421, 423, 430, 431, 433, 435, 436, 441, 443, 445, 446, 448, 449, 450, 460, 465, 470, 471, 472, 473, 474, 475, 476, 488, 490, 495, 503, 508, 510, 516, 517, 521, 522, 523, 525, 526, 528, 529, 530, 533, 534, 536, 538, 539, 546, 550, 552, 554, 555, 557, 558, 559, 560, 563, 564, 565, 567, 568, 569, 571, 572, 573, 574, 576, 577, 581, 591, 597, 600, 604, 605, 609, 610, 613, 614, 615, 617, 623, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 669, 670, 671, 675, 680, 681, 682, 683, 684, 685, 686, 687, 688, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 711, 714, 720, 721, 722, 723, 724, 725, 726, 727, 741, 742, 746, 756, 759, 765, 766, 769, 770, 772, 773, 774, 775, 776, 777, 778, 779, 781, 782, 783, 784, 785, 786, 789, 793, 794, 795, 796, 797, 800, 801, 802, 803, 804, 805, 806, 820, 830, 832, 833, 838, 840, 841, 846, 850, 851, 852, 854, 856, 857, 860, 861, 865, 875], "arraidirectori": [1, 12, 21, 33, 34, 79, 80, 92, 93, 114, 117, 121, 154, 155, 160, 165, 170, 171, 183, 190, 254, 260, 267, 268, 269, 272, 273, 276, 277, 278, 301, 305, 306, 307, 310, 358, 363, 364, 365, 369, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 426, 457, 459, 463, 465, 466, 467, 468, 469, 482, 488, 501, 504, 508, 512, 514, 541, 580, 600, 614, 618, 620, 627, 633, 634, 635, 638, 643, 644, 658, 661, 672, 690, 691, 734, 742, 758, 760, 770, 800, 806, 815, 825, 834, 837, 840, 850, 854, 875], "home": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 129, 130, 131, 133, 134, 136, 139, 140, 142, 143, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 161, 165, 166, 167, 168, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 194, 197, 201, 202, 203, 204, 205, 207, 208, 209, 213, 216, 220, 221, 225, 226, 227, 228, 229, 232, 234, 238, 262, 263, 369, 377, 475, 476, 772, 795, 833, 839, 875], "circleci": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 129, 130, 131, 133, 134, 136, 139, 140, 142, 143, 145, 148, 149, 150, 151, 155, 156, 157, 158, 161, 165, 166, 167, 168, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 194, 197, 201, 202, 203, 204, 205, 207, 208, 209, 213, 216, 220, 221, 225, 226, 227, 228, 229, 232, 234, 238, 834], "mne_data": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 129, 130, 131, 133, 134, 136, 140, 142, 143, 145, 148, 149, 150, 151, 155, 156, 157, 158, 161, 165, 166, 167, 168, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 194, 197, 201, 202, 203, 204, 205, 207, 208, 209, 213, 216, 220, 221, 225, 226, 227, 228, 229, 232, 234, 238, 374, 375, 376, 377, 379, 380, 382, 383, 387, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 834, 854, 875], "data": [1, 2, 3, 6, 9, 10, 12, 14, 16, 17, 20, 22, 24, 26, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 71, 73, 75, 76, 77, 80, 81, 82, 83, 85, 86, 89, 96, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 115, 116, 120, 121, 122, 124, 125, 126, 128, 129, 130, 131, 132, 133, 137, 138, 142, 143, 144, 147, 150, 152, 153, 154, 155, 156, 157, 159, 160, 161, 169, 170, 172, 173, 175, 178, 180, 181, 182, 183, 184, 185, 186, 192, 194, 195, 196, 197, 198, 200, 203, 204, 205, 206, 207, 208, 211, 212, 218, 222, 223, 224, 226, 227, 231, 235, 236, 238, 240, 241, 242, 249, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 300, 301, 307, 308, 309, 310, 311, 312, 314, 316, 318, 322, 324, 325, 326, 327, 328, 333, 335, 336, 337, 339, 341, 343, 344, 345, 346, 347, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 364, 366, 367, 368, 370, 374, 375, 376, 377, 378, 379, 380, 382, 383, 385, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 430, 431, 433, 434, 435, 436, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 459, 464, 466, 470, 472, 473, 474, 475, 476, 477, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 511, 512, 513, 514, 515, 516, 517, 518, 521, 522, 523, 524, 525, 528, 529, 530, 533, 536, 537, 538, 539, 546, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 591, 592, 598, 601, 602, 604, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 621, 623, 625, 627, 628, 637, 640, 643, 644, 645, 646, 647, 648, 649, 651, 653, 654, 655, 659, 661, 663, 667, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 690, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 713, 714, 722, 723, 724, 725, 726, 727, 731, 736, 737, 742, 746, 750, 755, 757, 758, 759, 760, 761, 763, 764, 766, 767, 769, 770, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 789, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 812, 814, 821, 828, 829, 830, 831, 834, 835, 841, 846, 849, 852, 855, 856, 861, 862, 863, 865, 870, 875], "res4": [1, 12, 21, 79, 80, 117, 121, 183, 190], "read": [1, 2, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 70, 71, 72, 73, 74, 75, 77, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 134, 135, 139, 140, 141, 142, 143, 145, 148, 150, 151, 155, 156, 157, 158, 159, 160, 161, 165, 166, 168, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 216, 219, 220, 221, 225, 226, 227, 228, 233, 238, 254, 255, 256, 257, 259, 262, 263, 264, 265, 267, 273, 275, 295, 296, 299, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 349, 352, 356, 357, 366, 367, 368, 370, 407, 414, 415, 439, 448, 449, 450, 451, 455, 457, 460, 466, 470, 472, 473, 474, 475, 476, 479, 480, 481, 482, 483, 487, 488, 489, 490, 491, 492, 494, 495, 497, 499, 500, 501, 505, 506, 521, 533, 535, 536, 544, 557, 577, 593, 594, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 628, 629, 630, 632, 633, 635, 642, 648, 696, 715, 717, 734, 750, 758, 782, 810, 821, 822, 830, 834, 837, 842, 850, 852, 857, 858, 861, 863, 865, 875], "hc": [1, 12, 21, 79, 80, 117, 121, 183, 190], "separ": [1, 10, 12, 16, 21, 32, 33, 45, 47, 69, 73, 79, 80, 81, 92, 117, 121, 134, 139, 140, 141, 144, 145, 148, 149, 150, 154, 155, 159, 160, 161, 164, 167, 174, 183, 188, 190, 194, 197, 200, 202, 203, 204, 205, 207, 211, 212, 213, 214, 215, 232, 234, 237, 242, 244, 254, 256, 257, 262, 263, 264, 265, 267, 271, 272, 295, 296, 322, 340, 342, 343, 345, 346, 349, 353, 354, 355, 360, 368, 382, 389, 407, 414, 428, 440, 470, 475, 476, 491, 498, 514, 516, 555, 565, 566, 567, 568, 571, 574, 581, 583, 597, 607, 614, 644, 650, 651, 652, 653, 654, 655, 656, 657, 682, 683, 685, 686, 697, 698, 699, 700, 701, 702, 725, 726, 732, 742, 747, 765, 766, 772, 773, 774, 781, 782, 784, 789, 794, 795, 796, 830, 832, 834, 838, 850, 851, 852, 854, 857, 860, 863, 875], "posit": [1, 4, 12, 19, 21, 24, 27, 38, 39, 41, 45, 69, 74, 77, 78, 80, 81, 88, 91, 92, 93, 99, 110, 117, 120, 121, 125, 128, 133, 134, 135, 149, 150, 155, 157, 158, 159, 169, 174, 175, 177, 182, 183, 184, 187, 189, 190, 197, 198, 202, 204, 208, 210, 221, 224, 228, 232, 239, 242, 254, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 288, 302, 304, 310, 311, 312, 323, 326, 328, 330, 333, 336, 340, 342, 343, 348, 349, 350, 352, 364, 378, 386, 407, 410, 413, 414, 417, 419, 426, 427, 428, 435, 449, 450, 459, 466, 475, 476, 488, 491, 495, 498, 499, 505, 517, 554, 555, 559, 560, 562, 569, 574, 576, 581, 583, 605, 607, 644, 646, 647, 648, 652, 653, 654, 655, 656, 657, 658, 660, 663, 664, 679, 695, 697, 698, 699, 710, 718, 719, 742, 743, 747, 755, 758, 759, 761, 766, 772, 773, 774, 777, 779, 780, 781, 784, 785, 791, 794, 795, 797, 798, 800, 802, 803, 804, 806, 810, 812, 830, 834, 850, 851, 857, 860, 864, 875], "file": [1, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 40, 41, 42, 43, 44, 45, 46, 49, 56, 59, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 75, 78, 79, 80, 81, 82, 83, 86, 89, 90, 91, 92, 94, 95, 97, 98, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 116, 117, 118, 119, 121, 125, 126, 127, 128, 130, 131, 133, 134, 136, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 170, 173, 176, 179, 180, 181, 182, 183, 184, 186, 187, 189, 190, 192, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 213, 216, 218, 220, 221, 223, 226, 227, 228, 229, 231, 232, 234, 236, 238, 241, 249, 256, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 286, 299, 301, 302, 305, 306, 307, 310, 311, 316, 318, 319, 322, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 340, 342, 355, 360, 361, 363, 364, 365, 369, 377, 381, 382, 383, 384, 390, 399, 400, 426, 428, 436, 437, 438, 439, 440, 448, 449, 455, 456, 457, 459, 460, 464, 466, 467, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 514, 515, 517, 518, 528, 535, 536, 540, 544, 545, 554, 555, 565, 566, 567, 568, 574, 580, 583, 593, 594, 595, 596, 599, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 632, 633, 634, 635, 638, 639, 641, 644, 646, 647, 648, 660, 663, 672, 690, 693, 694, 695, 696, 697, 698, 699, 715, 716, 717, 728, 730, 736, 742, 750, 758, 760, 795, 806, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 832, 833, 834, 839, 840, 841, 846, 851, 861, 865, 875], "present": [1, 4, 10, 12, 13, 16, 21, 31, 40, 43, 44, 68, 80, 114, 117, 121, 124, 132, 139, 141, 143, 148, 149, 157, 165, 167, 168, 169, 179, 187, 188, 190, 197, 198, 202, 204, 205, 206, 208, 214, 216, 224, 228, 232, 233, 234, 242, 254, 255, 257, 259, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 281, 282, 283, 286, 295, 296, 300, 305, 310, 316, 318, 327, 332, 341, 345, 352, 356, 357, 358, 366, 367, 368, 388, 407, 414, 426, 428, 431, 436, 448, 449, 450, 451, 455, 470, 472, 473, 475, 476, 483, 486, 490, 497, 514, 521, 533, 552, 554, 555, 557, 558, 565, 566, 569, 571, 575, 583, 591, 610, 611, 659, 664, 680, 695, 697, 698, 699, 713, 730, 742, 758, 759, 765, 766, 772, 774, 776, 778, 781, 782, 785, 792, 794, 795, 796, 797, 798, 801, 802, 804, 830, 840, 850, 851, 857, 860, 875], "quaternion": [1, 12, 21, 79, 80, 117, 121, 183, 190, 348, 349, 350, 559, 562, 733, 735, 784, 875], "match": [1, 4, 8, 9, 11, 12, 17, 18, 20, 21, 27, 28, 31, 32, 33, 34, 40, 41, 45, 46, 47, 49, 51, 58, 59, 61, 68, 70, 71, 72, 73, 78, 79, 80, 81, 86, 88, 91, 92, 93, 94, 95, 98, 99, 101, 102, 105, 106, 107, 108, 110, 111, 112, 115, 117, 119, 121, 126, 130, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 150, 151, 156, 160, 161, 165, 168, 171, 176, 179, 181, 182, 183, 184, 190, 193, 197, 198, 199, 201, 202, 205, 209, 210, 213, 214, 215, 219, 220, 221, 225, 226, 227, 228, 229, 232, 234, 238, 255, 257, 259, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 276, 277, 278, 315, 327, 352, 356, 363, 366, 367, 407, 408, 413, 414, 415, 417, 423, 428, 431, 432, 434, 436, 438, 439, 441, 457, 474, 475, 476, 483, 490, 497, 541, 544, 547, 552, 554, 555, 564, 565, 569, 574, 584, 597, 607, 609, 610, 630, 633, 645, 660, 681, 686, 690, 695, 696, 697, 698, 699, 711, 712, 721, 732, 766, 772, 773, 774, 778, 781, 782, 785, 788, 794, 795, 796, 797, 821, 834, 838, 857, 875], "desir": [1, 5, 11, 12, 21, 22, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 67, 69, 79, 80, 88, 90, 91, 92, 93, 99, 102, 105, 106, 108, 110, 117, 121, 122, 125, 129, 141, 145, 150, 156, 160, 165, 167, 169, 171, 176, 177, 178, 179, 180, 183, 187, 188, 190, 193, 194, 198, 199, 200, 201, 204, 214, 220, 221, 232, 234, 255, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 358, 406, 431, 442, 475, 476, 516, 533, 554, 577, 592, 640, 695, 697, 698, 699, 729, 742, 805, 840, 850, 852, 854, 860, 875], "v": [1, 4, 8, 9, 12, 13, 21, 24, 27, 28, 32, 43, 54, 55, 63, 65, 69, 74, 79, 80, 103, 104, 117, 121, 125, 130, 136, 140, 170, 171, 177, 183, 190, 193, 197, 200, 204, 225, 228, 229, 234, 237, 242, 254, 257, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 273, 276, 277, 278, 281, 285, 286, 296, 300, 318, 342, 357, 370, 377, 413, 414, 415, 428, 475, 476, 521, 530, 555, 563, 566, 571, 572, 574, 583, 590, 681, 695, 697, 698, 699, 707, 713, 722, 725, 726, 727, 730, 746, 830, 834, 838, 850, 857, 860, 875], "transform": [1, 5, 7, 8, 11, 12, 14, 16, 19, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 67, 73, 76, 79, 80, 81, 83, 86, 88, 90, 91, 92, 93, 101, 102, 105, 106, 107, 108, 110, 111, 113, 117, 121, 122, 123, 125, 129, 133, 134, 144, 149, 154, 156, 157, 158, 165, 166, 168, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 190, 203, 206, 213, 220, 221, 237, 239, 242, 254, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 302, 310, 313, 314, 324, 352, 358, 359, 361, 363, 364, 365, 370, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 425, 426, 428, 448, 450, 458, 466, 467, 468, 469, 475, 476, 482, 505, 514, 517, 518, 528, 529, 538, 539, 555, 556, 559, 562, 564, 566, 574, 580, 583, 584, 615, 619, 627, 628, 635, 640, 660, 663, 680, 690, 692, 697, 699, 701, 704, 710, 711, 714, 718, 719, 720, 721, 722, 723, 724, 727, 729, 742, 758, 759, 806, 812, 821, 822, 830, 841, 850, 851, 854, 864, 865, 875], "84": [1, 11, 13, 19, 34, 35, 41, 47, 58, 79, 106, 107, 110, 112, 117, 127, 133, 135, 136, 150, 168, 193, 194, 198, 207, 224, 225, 226, 228, 229, 233, 234, 242, 484, 587], "69": [1, 13, 15, 19, 35, 40, 47, 49, 79, 80, 101, 106, 110, 112, 117, 139, 142, 168, 170, 175, 179, 183, 184, 190, 193, 194, 202, 207, 224, 225, 226, 228, 229, 232, 233, 234, 242, 262, 263, 295, 399], "49": [1, 5, 19, 28, 30, 31, 34, 35, 38, 39, 40, 41, 44, 45, 47, 48, 50, 51, 54, 55, 57, 58, 59, 60, 77, 79, 84, 85, 101, 106, 110, 111, 112, 114, 117, 118, 121, 125, 148, 168, 171, 175, 177, 178, 180, 183, 184, 190, 207, 208, 209, 215, 221, 224, 225, 226, 228, 229, 233, 234, 238, 242, 740, 833, 875], "00": [1, 2, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 24, 25, 26, 33, 34, 41, 42, 44, 45, 46, 50, 56, 59, 66, 69, 70, 71, 72, 75, 79, 80, 81, 82, 83, 86, 88, 89, 91, 94, 97, 99, 100, 101, 102, 104, 106, 107, 110, 111, 112, 113, 117, 119, 121, 125, 128, 131, 135, 138, 140, 142, 143, 145, 147, 150, 153, 155, 156, 157, 158, 159, 163, 166, 167, 168, 171, 173, 175, 179, 180, 181, 182, 183, 184, 186, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 218, 219, 221, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 241, 242, 522, 554, 563], "mm": [1, 4, 5, 12, 21, 24, 26, 41, 44, 45, 50, 69, 70, 72, 75, 77, 78, 79, 80, 81, 88, 91, 92, 93, 107, 117, 121, 125, 133, 135, 140, 145, 150, 155, 156, 157, 158, 159, 160, 166, 167, 175, 177, 179, 180, 181, 182, 183, 184, 190, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 220, 221, 254, 260, 267, 269, 270, 273, 276, 277, 278, 303, 333, 335, 337, 358, 363, 426, 450, 459, 465, 468, 469, 487, 491, 508, 518, 607, 643, 644, 732, 734, 741, 742, 800, 805, 810, 850, 857, 875], "orig": [1, 12, 21, 79, 80, 117, 121, 159, 183, 190, 198, 535, 547, 548, 553], "44": [1, 19, 28, 35, 41, 45, 46, 47, 79, 101, 104, 106, 107, 110, 111, 112, 114, 117, 157, 167, 168, 175, 179, 180, 183, 194, 200, 207, 208, 224, 225, 226, 228, 229, 232, 233, 234, 242, 295, 296, 428, 470, 682, 683, 685, 686, 875], "30": [1, 5, 7, 8, 9, 11, 12, 13, 14, 19, 24, 28, 33, 34, 35, 41, 42, 43, 45, 46, 47, 50, 58, 69, 72, 73, 75, 79, 80, 81, 88, 90, 92, 95, 99, 101, 105, 106, 107, 111, 112, 113, 117, 118, 121, 125, 128, 133, 135, 143, 145, 149, 155, 157, 158, 159, 163, 165, 168, 170, 171, 182, 183, 193, 194, 197, 199, 200, 201, 202, 203, 205, 206, 207, 209, 212, 213, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 237, 239, 242, 254, 262, 263, 264, 265, 273, 275, 301, 305, 333, 352, 475, 476, 506, 554, 558, 563, 574, 648, 659, 660, 697, 699, 711, 721, 722, 724, 725, 727, 746, 750, 774, 832, 850, 851, 857, 860, 875], "51": [1, 5, 8, 13, 19, 28, 34, 35, 41, 45, 47, 56, 69, 70, 78, 79, 80, 89, 92, 101, 106, 107, 110, 112, 117, 125, 133, 138, 151, 155, 157, 168, 171, 183, 184, 190, 193, 194, 199, 203, 206, 207, 208, 213, 224, 225, 226, 228, 229, 234, 242, 272, 377, 583, 851, 875], "45": [1, 5, 8, 9, 11, 13, 15, 16, 19, 28, 35, 45, 50, 79, 82, 101, 102, 106, 107, 110, 111, 112, 117, 119, 121, 140, 142, 143, 144, 148, 155, 156, 157, 167, 168, 175, 179, 180, 190, 193, 194, 200, 202, 203, 205, 206, 207, 208, 215, 224, 225, 226, 228, 229, 232, 233, 234, 239, 256, 262, 263, 264, 265, 295, 296, 333, 352, 356, 357, 366, 367, 368, 407, 414, 442, 450, 451, 470, 472, 473, 475, 476, 533, 555, 676, 697, 699, 746, 774, 782, 857, 875], "252": [1, 13, 20, 35, 117, 121, 168, 228, 229], "43": [1, 13, 19, 26, 28, 34, 35, 41, 45, 46, 47, 48, 50, 54, 55, 79, 80, 101, 105, 106, 110, 112, 117, 121, 144, 149, 153, 156, 157, 168, 175, 180, 181, 193, 194, 207, 224, 225, 226, 227, 228, 229, 232, 233, 234, 242, 262, 263, 333, 697, 698], "diff": [1, 9, 12, 21, 69, 79, 80, 117, 121, 132, 175, 182, 183, 190, 213, 232, 750, 842], "000": [1, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 34, 42, 59, 63, 65, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 86, 88, 91, 92, 93, 97, 107, 110, 111, 112, 113, 117, 119, 121, 126, 127, 128, 131, 133, 135, 139, 140, 141, 142, 143, 145, 148, 150, 151, 158, 165, 166, 167, 171, 178, 180, 181, 182, 183, 184, 189, 190, 192, 194, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 215, 216, 219, 221, 225, 227, 228, 229, 238, 499, 609], "46": [1, 12, 13, 19, 21, 28, 33, 34, 35, 40, 41, 45, 47, 51, 55, 71, 79, 101, 102, 106, 110, 112, 117, 121, 148, 156, 163, 168, 182, 186, 190, 192, 194, 196, 199, 200, 202, 207, 215, 224, 225, 226, 228, 229, 233, 234, 242, 857, 875], "28": [1, 11, 13, 18, 19, 26, 28, 34, 35, 41, 45, 47, 50, 56, 79, 101, 106, 107, 112, 117, 139, 156, 157, 159, 163, 168, 170, 175, 180, 181, 182, 183, 184, 194, 199, 201, 207, 224, 225, 226, 228, 229, 232, 234, 238, 242, 333, 875], "53": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 28, 32, 33, 34, 35, 40, 42, 45, 46, 47, 72, 75, 79, 80, 81, 82, 86, 92, 97, 101, 106, 110, 111, 112, 113, 117, 119, 121, 131, 135, 136, 140, 143, 144, 145, 150, 154, 161, 168, 175, 183, 190, 193, 194, 200, 201, 202, 203, 207, 208, 209, 210, 212, 215, 224, 225, 226, 228, 229, 233, 234, 242, 676, 854], "58": [1, 11, 13, 19, 35, 40, 45, 47, 48, 49, 54, 55, 57, 58, 59, 77, 79, 88, 91, 92, 101, 106, 107, 110, 112, 114, 117, 119, 125, 135, 136, 148, 150, 151, 161, 168, 171, 177, 181, 190, 194, 197, 203, 205, 207, 213, 223, 224, 225, 228, 229, 232, 242, 352, 857, 875], "243": [1, 79, 100, 101, 117, 168, 190, 207, 224, 228, 229, 236], "47": [1, 10, 13, 16, 19, 28, 33, 35, 45, 51, 79, 82, 101, 102, 106, 110, 112, 117, 134, 136, 138, 158, 167, 168, 180, 182, 194, 207, 215, 224, 225, 226, 228, 229, 233, 234, 236, 242, 298, 333, 400, 850, 851, 857], "86": [1, 5, 12, 13, 15, 19, 26, 34, 35, 40, 41, 47, 50, 79, 101, 106, 110, 112, 117, 136, 139, 150, 155, 156, 157, 167, 168, 171, 175, 180, 181, 183, 193, 194, 201, 203, 205, 206, 207, 210, 214, 224, 225, 226, 228, 229, 234, 242, 414, 709, 711, 721, 725, 849], "41": [1, 13, 19, 28, 34, 35, 44, 45, 47, 79, 80, 89, 101, 106, 112, 117, 136, 167, 168, 180, 182, 183, 186, 190, 193, 194, 203, 205, 206, 207, 213, 224, 225, 226, 228, 229, 232, 233, 234, 239, 242, 274, 358, 399, 407, 875], "63": [1, 13, 19, 35, 45, 47, 69, 79, 80, 99, 101, 106, 110, 112, 115, 117, 142, 168, 183, 184, 190, 193, 207, 224, 225, 226, 228, 229, 232, 234, 875], "55": [1, 11, 13, 19, 21, 28, 30, 31, 32, 35, 38, 39, 40, 41, 44, 45, 46, 48, 50, 54, 55, 57, 58, 60, 77, 79, 84, 85, 99, 101, 106, 107, 110, 112, 114, 117, 118, 122, 125, 142, 148, 150, 159, 168, 171, 176, 177, 179, 180, 193, 194, 202, 203, 205, 207, 209, 215, 224, 225, 226, 228, 229, 233, 234, 242, 407, 415, 522, 554, 555, 598, 832, 875], "82": [1, 19, 35, 46, 79, 101, 110, 112, 117, 144, 168, 179, 180, 183, 190, 193, 194, 207, 224, 225, 226, 228, 229, 233, 234, 238, 399, 442], "230": [1, 79, 86, 117, 168], "26": [1, 5, 11, 13, 16, 19, 28, 32, 34, 35, 41, 44, 45, 47, 56, 64, 79, 80, 91, 99, 101, 106, 107, 112, 117, 135, 136, 144, 157, 168, 170, 174, 182, 183, 184, 186, 190, 193, 194, 207, 224, 225, 226, 228, 229, 232, 233, 234, 236, 238, 241, 242, 274, 275, 358, 390, 522, 851], "coordin": [1, 5, 11, 12, 21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 67, 70, 79, 80, 88, 90, 91, 92, 93, 102, 105, 106, 107, 108, 113, 117, 121, 122, 125, 129, 133, 134, 135, 149, 157, 158, 162, 163, 164, 165, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 190, 194, 206, 208, 210, 220, 221, 232, 234, 242, 259, 260, 262, 263, 264, 265, 266, 267, 268, 271, 275, 277, 278, 300, 302, 303, 304, 310, 313, 314, 319, 323, 326, 328, 329, 331, 333, 337, 362, 363, 365, 386, 407, 414, 426, 428, 450, 458, 466, 468, 469, 472, 475, 476, 479, 482, 486, 487, 499, 505, 507, 514, 519, 554, 555, 566, 569, 574, 583, 615, 625, 626, 628, 629, 644, 648, 672, 675, 695, 697, 699, 729, 730, 741, 742, 743, 758, 759, 760, 766, 770, 774, 776, 778, 780, 781, 782, 784, 785, 792, 794, 796, 797, 798, 802, 804, 810, 812, 822, 823, 828, 830, 851, 875], "establish": [1, 12, 21, 79, 80, 117, 121, 183, 187, 190, 200, 229, 242, 682, 683, 685, 686], "digit": [1, 70, 72, 75, 79, 80, 81, 88, 91, 116, 117, 121, 125, 133, 140, 145, 150, 155, 156, 158, 159, 166, 167, 168, 181, 184, 187, 188, 190, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 221, 242, 254, 255, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 273, 276, 277, 278, 303, 304, 310, 323, 324, 326, 328, 331, 332, 335, 337, 339, 340, 342, 363, 407, 414, 426, 428, 448, 466, 475, 476, 479, 482, 488, 499, 507, 514, 519, 554, 555, 564, 565, 566, 569, 574, 583, 609, 610, 644, 695, 697, 698, 699, 742, 758, 759, 766, 774, 776, 778, 781, 782, 785, 792, 794, 796, 797, 798, 802, 804, 812, 830, 850, 851, 860, 875], "point": [1, 5, 8, 9, 11, 12, 16, 18, 21, 22, 26, 27, 32, 33, 34, 36, 38, 41, 42, 44, 45, 46, 49, 54, 55, 56, 58, 60, 70, 71, 72, 75, 79, 80, 81, 88, 91, 92, 94, 95, 98, 99, 101, 105, 107, 108, 110, 111, 112, 113, 115, 117, 118, 119, 121, 125, 126, 132, 133, 134, 135, 136, 139, 140, 141, 143, 144, 145, 148, 149, 150, 151, 155, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 190, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 238, 239, 242, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 295, 296, 303, 304, 310, 313, 314, 319, 323, 328, 332, 333, 334, 335, 337, 340, 346, 348, 352, 357, 358, 362, 363, 365, 406, 407, 408, 409, 413, 414, 416, 423, 426, 428, 441, 443, 445, 448, 466, 469, 470, 474, 475, 476, 478, 479, 482, 488, 494, 499, 507, 517, 518, 519, 521, 522, 531, 532, 533, 534, 536, 537, 554, 555, 557, 565, 566, 569, 574, 583, 604, 608, 609, 612, 613, 615, 618, 623, 626, 629, 640, 643, 644, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 662, 669, 671, 680, 681, 682, 683, 685, 686, 687, 695, 696, 697, 698, 699, 713, 714, 742, 743, 746, 747, 758, 759, 760, 761, 766, 770, 774, 776, 777, 778, 779, 781, 782, 785, 786, 789, 792, 794, 796, 797, 798, 800, 801, 802, 804, 805, 806, 810, 823, 828, 830, 834, 850, 852, 854, 856, 860, 863, 875], "subj00111092011": [1, 117], "po": [1, 19, 41, 47, 50, 78, 79, 80, 82, 91, 113, 117, 135, 150, 155, 175, 182, 183, 184, 190, 206, 208, 260, 264, 265, 268, 269, 270, 273, 276, 277, 278, 302, 311, 336, 349, 350, 427, 450, 468, 469, 488, 559, 562, 617, 644, 784, 804, 860, 875], "polhemu": [1, 12, 21, 79, 80, 117, 121, 155, 169, 183, 190, 267, 310, 335, 337, 488, 857, 860, 875], "hpi": [1, 12, 21, 79, 80, 117, 121, 155, 165, 168, 169, 183, 187, 190, 197, 208, 213, 254, 262, 263, 264, 265, 267, 303, 304, 310, 313, 323, 333, 335, 339, 340, 341, 344, 345, 346, 363, 426, 427, 475, 476, 482, 552, 559, 695, 697, 698, 699, 765, 830, 857, 860, 864, 875], "coil": [1, 5, 12, 21, 26, 41, 45, 50, 79, 80, 107, 117, 121, 122, 149, 155, 157, 158, 175, 180, 181, 182, 183, 184, 187, 190, 197, 206, 207, 208, 254, 262, 263, 264, 265, 267, 318, 333, 339, 340, 342, 343, 344, 346, 347, 427, 450, 475, 476, 482, 499, 552, 565, 566, 583, 594, 609, 637, 695, 697, 698, 699, 736, 765, 830, 864, 875], "ad": [1, 4, 5, 11, 12, 21, 22, 27, 28, 29, 31, 35, 38, 39, 40, 41, 42, 43, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 67, 69, 70, 79, 80, 88, 90, 91, 92, 93, 99, 102, 105, 106, 108, 117, 118, 121, 122, 125, 129, 133, 139, 140, 141, 145, 150, 155, 157, 158, 159, 160, 161, 165, 169, 174, 176, 177, 178, 180, 181, 183, 190, 194, 199, 203, 205, 206, 208, 215, 216, 219, 220, 221, 224, 225, 232, 234, 254, 256, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 310, 336, 339, 341, 345, 358, 359, 368, 407, 414, 428, 451, 474, 475, 476, 498, 511, 516, 517, 518, 520, 554, 555, 557, 569, 571, 605, 640, 644, 645, 649, 659, 687, 690, 695, 697, 698, 699, 738, 742, 745, 747, 759, 760, 766, 770, 771, 774, 776, 778, 781, 782, 785, 789, 792, 794, 796, 797, 798, 800, 802, 804, 805, 834, 851, 857, 860, 863, 875], "devic": [1, 5, 12, 21, 26, 41, 45, 50, 70, 78, 79, 80, 107, 117, 121, 149, 155, 157, 164, 165, 168, 169, 175, 180, 182, 183, 184, 190, 191, 192, 204, 206, 210, 213, 254, 263, 264, 265, 267, 303, 310, 313, 326, 328, 335, 359, 361, 370, 373, 428, 439, 466, 475, 476, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 559, 562, 583, 584, 597, 607, 608, 609, 612, 640, 742, 758, 777, 821, 830, 846, 850, 851, 860, 875], "locat": [1, 4, 5, 12, 21, 26, 31, 35, 40, 41, 45, 47, 48, 49, 50, 55, 59, 60, 67, 78, 79, 80, 88, 91, 92, 93, 98, 107, 113, 116, 117, 121, 122, 134, 135, 136, 137, 138, 140, 148, 149, 154, 155, 157, 158, 159, 160, 162, 164, 165, 170, 172, 173, 174, 175, 176, 177, 179, 180, 182, 183, 184, 185, 186, 187, 190, 198, 204, 206, 207, 208, 210, 213, 219, 220, 221, 224, 225, 226, 228, 229, 234, 239, 242, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 275, 276, 277, 278, 295, 296, 304, 305, 306, 310, 311, 314, 316, 319, 321, 324, 326, 327, 328, 329, 330, 331, 332, 333, 336, 340, 342, 343, 344, 352, 364, 365, 374, 375, 376, 377, 379, 380, 382, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 414, 427, 428, 437, 440, 448, 458, 463, 467, 475, 476, 481, 485, 487, 494, 499, 505, 508, 518, 521, 522, 531, 532, 533, 537, 541, 546, 552, 554, 555, 559, 569, 576, 579, 580, 583, 594, 608, 609, 612, 617, 618, 634, 635, 637, 644, 647, 648, 658, 661, 682, 683, 685, 686, 687, 695, 697, 699, 731, 732, 734, 742, 758, 759, 763, 766, 770, 774, 776, 780, 781, 784, 785, 794, 795, 796, 797, 798, 802, 804, 807, 810, 812, 815, 830, 835, 840, 850, 851, 854, 860, 863, 864, 875], "measur": [1, 4, 5, 12, 21, 26, 41, 45, 50, 70, 72, 75, 78, 79, 80, 81, 88, 91, 101, 107, 117, 121, 125, 140, 143, 144, 145, 155, 157, 158, 161, 164, 165, 166, 167, 168, 169, 171, 175, 181, 183, 187, 188, 189, 190, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 221, 224, 229, 230, 231, 235, 236, 238, 239, 242, 255, 257, 259, 261, 262, 263, 264, 265, 266, 267, 271, 273, 275, 282, 283, 295, 296, 297, 303, 304, 308, 309, 316, 317, 318, 322, 324, 325, 338, 340, 342, 344, 347, 352, 356, 357, 358, 363, 366, 367, 368, 370, 407, 409, 411, 414, 415, 416, 426, 438, 439, 440, 450, 451, 458, 467, 470, 472, 473, 474, 475, 476, 477, 480, 488, 490, 503, 511, 514, 517, 518, 519, 521, 522, 523, 530, 531, 532, 533, 536, 551, 552, 555, 566, 580, 583, 584, 587, 588, 589, 610, 625, 630, 631, 640, 651, 652, 659, 660, 663, 667, 676, 677, 678, 679, 683, 686, 687, 695, 696, 697, 698, 699, 725, 742, 755, 758, 759, 762, 767, 768, 782, 784, 793, 794, 798, 821, 830, 842, 850, 851, 857, 860, 863, 875], "compos": [1, 12, 21, 26, 41, 45, 50, 79, 80, 107, 117, 121, 136, 157, 175, 183, 187, 190, 194, 850, 860], "find": [1, 5, 7, 11, 12, 19, 21, 27, 28, 29, 30, 38, 39, 44, 47, 48, 49, 50, 52, 57, 58, 60, 67, 68, 76, 79, 80, 81, 83, 102, 105, 106, 108, 117, 121, 122, 125, 126, 133, 135, 139, 140, 144, 149, 150, 154, 155, 156, 160, 165, 169, 171, 174, 175, 179, 180, 183, 190, 194, 197, 199, 200, 203, 208, 215, 221, 224, 225, 226, 234, 239, 242, 260, 264, 265, 267, 268, 269, 270, 273, 276, 277, 278, 316, 353, 354, 355, 363, 441, 446, 448, 449, 475, 476, 494, 522, 552, 555, 558, 561, 567, 568, 569, 570, 571, 572, 574, 575, 576, 578, 579, 592, 608, 612, 633, 654, 658, 661, 672, 742, 779, 781, 815, 830, 832, 834, 837, 838, 839, 840, 851, 854, 857, 858, 860, 875], "sampl": [1, 2, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 64, 65, 67, 68, 70, 71, 72, 75, 77, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 127, 129, 130, 131, 132, 133, 134, 135, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 214, 215, 216, 219, 220, 221, 224, 227, 229, 230, 231, 232, 234, 235, 236, 237, 238, 242, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 267, 269, 270, 272, 273, 274, 275, 276, 277, 278, 281, 282, 283, 294, 316, 352, 358, 360, 370, 382, 409, 410, 411, 412, 413, 417, 418, 419, 420, 421, 422, 424, 428, 431, 433, 435, 436, 442, 443, 444, 445, 446, 448, 449, 473, 474, 475, 476, 483, 490, 497, 516, 518, 525, 531, 532, 550, 552, 555, 557, 560, 571, 572, 591, 597, 601, 608, 609, 610, 623, 625, 630, 645, 650, 651, 652, 653, 654, 655, 656, 657, 660, 661, 662, 667, 675, 677, 681, 682, 683, 684, 685, 686, 687, 688, 689, 695, 696, 698, 700, 701, 702, 703, 704, 705, 706, 710, 711, 713, 714, 718, 719, 721, 722, 723, 724, 725, 740, 742, 772, 774, 775, 783, 795, 800, 805, 806, 808, 820, 830, 834, 850, 854, 855, 857, 858, 860, 865, 875], "meg4": [1, 12, 21, 79, 80, 117, 121, 183, 190], "system": [1, 5, 8, 10, 12, 19, 21, 27, 62, 69, 73, 78, 79, 80, 107, 114, 117, 120, 122, 127, 128, 135, 136, 149, 150, 154, 155, 157, 158, 159, 165, 167, 168, 169, 171, 177, 182, 183, 184, 188, 190, 193, 197, 198, 203, 204, 205, 206, 208, 210, 213, 214, 215, 224, 237, 242, 260, 261, 262, 263, 264, 265, 267, 269, 270, 272, 273, 275, 276, 277, 278, 282, 283, 298, 310, 313, 318, 321, 326, 328, 329, 331, 332, 333, 335, 337, 362, 363, 365, 370, 377, 413, 427, 442, 444, 456, 468, 469, 470, 475, 476, 482, 483, 484, 486, 487, 488, 499, 508, 519, 552, 555, 557, 581, 583, 600, 630, 647, 648, 649, 658, 659, 661, 681, 682, 683, 684, 685, 686, 694, 695, 697, 698, 699, 707, 713, 729, 758, 759, 772, 775, 780, 783, 789, 795, 803, 809, 810, 823, 830, 832, 833, 834, 835, 837, 838, 839, 846, 850, 851, 853, 860, 863, 875], "clock": [1, 12, 21, 79, 80, 117, 121, 183, 190, 475, 476, 488, 555, 597, 789, 795, 851, 875], "avail": [1, 2, 5, 7, 8, 12, 19, 21, 22, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 67, 70, 72, 75, 77, 79, 80, 81, 84, 85, 88, 90, 91, 92, 93, 99, 107, 114, 117, 118, 121, 125, 129, 133, 135, 139, 140, 141, 142, 143, 145, 148, 149, 150, 154, 155, 158, 161, 164, 165, 166, 167, 168, 171, 172, 175, 176, 177, 178, 179, 180, 183, 187, 188, 190, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 225, 237, 254, 259, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 276, 277, 278, 301, 303, 304, 310, 330, 369, 371, 377, 399, 400, 406, 407, 413, 414, 419, 426, 433, 455, 472, 475, 476, 514, 531, 532, 546, 547, 548, 554, 555, 569, 613, 620, 660, 691, 695, 696, 697, 699, 712, 725, 742, 759, 766, 772, 774, 776, 778, 781, 782, 785, 789, 792, 794, 795, 796, 797, 798, 800, 802, 804, 805, 813, 814, 830, 832, 834, 835, 840, 841, 842, 845, 848, 851, 854, 857, 858, 859, 860, 863, 875], "check": [1, 5, 12, 21, 26, 41, 43, 45, 50, 61, 69, 79, 80, 107, 117, 118, 119, 121, 123, 134, 136, 139, 141, 142, 143, 156, 157, 158, 160, 165, 167, 169, 170, 171, 174, 175, 180, 181, 183, 190, 198, 200, 203, 204, 213, 214, 216, 224, 225, 238, 257, 259, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 316, 318, 382, 388, 426, 440, 443, 474, 475, 476, 483, 486, 530, 544, 555, 563, 565, 682, 683, 685, 686, 695, 697, 698, 699, 729, 742, 758, 776, 778, 779, 780, 781, 812, 832, 833, 834, 842, 850, 851, 854, 863, 875], "which": [1, 4, 5, 12, 16, 18, 19, 21, 26, 31, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 58, 60, 69, 73, 78, 79, 80, 81, 86, 92, 99, 101, 107, 110, 112, 113, 114, 117, 118, 121, 125, 126, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 145, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 177, 179, 181, 183, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 238, 239, 242, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 288, 295, 296, 303, 304, 310, 312, 319, 326, 328, 329, 330, 331, 332, 338, 339, 341, 345, 347, 351, 352, 357, 358, 361, 365, 369, 370, 377, 382, 399, 407, 409, 414, 415, 418, 424, 426, 428, 431, 433, 436, 437, 438, 440, 441, 443, 445, 446, 447, 448, 449, 450, 451, 458, 465, 466, 472, 473, 474, 475, 476, 477, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 508, 509, 510, 514, 515, 517, 522, 523, 531, 532, 535, 536, 540, 544, 554, 555, 556, 557, 563, 565, 566, 569, 571, 572, 573, 574, 580, 581, 583, 588, 597, 600, 606, 608, 612, 613, 614, 615, 617, 618, 620, 625, 626, 629, 630, 631, 632, 634, 635, 637, 638, 640, 644, 645, 649, 652, 655, 657, 658, 661, 663, 664, 672, 674, 675, 681, 687, 690, 691, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 714, 717, 722, 723, 725, 726, 728, 730, 732, 742, 743, 745, 747, 748, 757, 758, 760, 763, 765, 766, 768, 770, 772, 773, 774, 776, 777, 780, 781, 785, 787, 789, 794, 795, 796, 800, 802, 805, 809, 810, 812, 821, 822, 823, 825, 827, 828, 829, 830, 832, 834, 835, 837, 839, 842, 846, 848, 849, 850, 851, 852, 854, 856, 857, 860, 861, 863, 873, 875], "ar": [1, 4, 5, 11, 12, 14, 15, 16, 18, 19, 21, 24, 26, 27, 31, 32, 33, 34, 38, 41, 43, 45, 46, 47, 50, 59, 69, 73, 74, 75, 79, 80, 81, 82, 85, 86, 92, 97, 99, 101, 102, 103, 104, 105, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 125, 126, 130, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 242, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 280, 282, 283, 286, 287, 289, 295, 296, 298, 300, 301, 303, 304, 305, 306, 308, 310, 311, 312, 314, 315, 318, 320, 321, 322, 323, 326, 327, 328, 330, 332, 333, 336, 339, 340, 341, 345, 351, 352, 356, 357, 358, 359, 361, 363, 366, 367, 368, 370, 382, 383, 390, 399, 407, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 428, 431, 432, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 457, 459, 460, 464, 465, 466, 467, 470, 472, 473, 474, 475, 476, 477, 481, 482, 483, 485, 486, 487, 488, 490, 491, 492, 495, 497, 499, 500, 501, 502, 503, 504, 505, 508, 511, 514, 515, 517, 519, 520, 521, 530, 531, 532, 533, 534, 537, 539, 544, 546, 547, 548, 550, 551, 552, 554, 555, 556, 557, 558, 560, 562, 563, 565, 569, 570, 571, 572, 574, 575, 577, 582, 583, 584, 587, 588, 589, 591, 592, 594, 598, 600, 601, 603, 606, 607, 608, 609, 610, 613, 615, 618, 621, 623, 630, 632, 633, 634, 635, 636, 637, 640, 642, 644, 645, 647, 648, 651, 652, 655, 657, 658, 660, 661, 663, 666, 667, 669, 670, 671, 676, 677, 680, 681, 682, 683, 684, 685, 686, 687, 691, 695, 696, 697, 698, 699, 700, 702, 703, 704, 705, 706, 707, 708, 711, 712, 713, 719, 721, 722, 723, 724, 725, 726, 728, 730, 732, 737, 742, 743, 747, 757, 758, 759, 760, 763, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 785, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 812, 815, 820, 822, 823, 824, 825, 830, 832, 834, 835, 837, 838, 839, 840, 841, 842, 846, 849, 850, 851, 852, 853, 855, 856, 857, 858, 859, 861, 862, 863, 865, 875], "valid": [1, 8, 9, 10, 11, 12, 15, 16, 21, 73, 79, 80, 109, 117, 119, 121, 136, 161, 170, 176, 183, 189, 190, 194, 200, 209, 224, 239, 257, 259, 262, 263, 264, 265, 267, 269, 270, 271, 273, 276, 277, 278, 323, 336, 352, 357, 399, 407, 413, 414, 423, 424, 428, 439, 441, 448, 455, 459, 475, 476, 531, 532, 554, 555, 557, 569, 571, 572, 626, 640, 677, 682, 683, 685, 686, 695, 697, 698, 699, 720, 730, 742, 745, 758, 759, 766, 773, 774, 775, 776, 778, 780, 781, 785, 794, 797, 800, 802, 803, 804, 805, 828, 834, 840, 841, 850, 854, 857, 875], "240": [1, 35, 42, 46, 74, 79, 107, 117, 168, 170, 180, 197, 201, 207, 210, 224, 228, 229, 238], "x": [1, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 67, 68, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 125, 127, 129, 130, 131, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 155, 156, 157, 159, 161, 165, 166, 167, 168, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 190, 193, 194, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 216, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 239, 242, 254, 259, 262, 263, 264, 265, 267, 269, 270, 271, 273, 275, 276, 277, 278, 286, 300, 310, 311, 333, 342, 343, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 445, 446, 447, 475, 476, 486, 487, 521, 522, 530, 554, 555, 556, 564, 569, 592, 615, 647, 668, 671, 676, 680, 681, 682, 683, 684, 685, 686, 688, 695, 697, 699, 700, 701, 702, 707, 709, 710, 711, 713, 714, 718, 720, 721, 725, 730, 732, 733, 735, 742, 743, 746, 759, 761, 763, 766, 774, 776, 778, 780, 781, 782, 783, 784, 785, 790, 792, 794, 796, 797, 798, 800, 802, 804, 805, 806, 808, 810, 822, 830, 834, 840, 851, 857, 860, 875], "1800": [1, 117], "432000": [1, 117], "302": [1, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 74, 81, 91, 92, 102, 105, 106, 108, 117, 119, 151, 161, 165, 168, 171, 175, 176, 177, 178, 179, 180, 220, 229, 232, 234, 860], "ch": [1, 2, 8, 12, 21, 67, 79, 80, 110, 113, 117, 118, 121, 135, 136, 140, 148, 150, 165, 168, 169, 183, 190, 203, 213, 219, 221, 242, 254, 267, 317, 318, 377, 399, 400, 475, 476, 812, 830, 851, 875], "current": [1, 12, 21, 22, 27, 29, 30, 31, 34, 41, 42, 44, 59, 76, 77, 79, 80, 83, 92, 117, 121, 139, 148, 160, 161, 164, 165, 170, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 198, 200, 208, 210, 215, 221, 232, 234, 242, 254, 255, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 276, 277, 278, 282, 283, 295, 296, 316, 318, 324, 351, 358, 363, 369, 370, 373, 413, 428, 431, 440, 445, 447, 448, 450, 470, 474, 475, 476, 481, 486, 490, 517, 518, 522, 525, 555, 564, 566, 567, 568, 574, 583, 613, 620, 640, 659, 676, 678, 695, 697, 698, 699, 720, 742, 749, 751, 752, 753, 754, 755, 759, 763, 766, 772, 795, 804, 805, 812, 830, 834, 837, 840, 842, 850, 851, 854, 856, 860, 863], "compens": [1, 2, 12, 21, 27, 30, 31, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 76, 77, 79, 80, 83, 84, 85, 99, 114, 117, 118, 121, 125, 139, 142, 148, 171, 175, 177, 178, 180, 183, 184, 190, 200, 207, 224, 225, 242, 254, 257, 262, 263, 264, 265, 267, 349, 363, 428, 430, 443, 445, 446, 448, 474, 475, 476, 488, 495, 518, 552, 555, 566, 574, 580, 583, 613, 660, 695, 697, 698, 699, 783, 784, 875], "grade": [1, 12, 21, 24, 41, 69, 79, 80, 99, 107, 117, 121, 157, 160, 183, 187, 190, 232, 234, 257, 262, 263, 264, 265, 267, 268, 462, 463, 474, 475, 476, 555, 695, 697, 698, 699, 875], "144000": [1, 79], "sec": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 28, 29, 32, 33, 34, 41, 42, 45, 46, 49, 58, 59, 61, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 105, 107, 108, 109, 110, 111, 112, 113, 115, 116, 119, 121, 125, 126, 127, 130, 131, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 150, 151, 155, 158, 161, 165, 166, 167, 168, 171, 176, 178, 179, 180, 181, 182, 183, 184, 189, 190, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 226, 227, 228, 229, 232, 234, 238, 254, 260, 267, 355, 557, 645, 783, 860, 875], "type": [1, 2, 5, 15, 16, 22, 27, 29, 30, 31, 34, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 63, 70, 74, 76, 77, 79, 80, 81, 83, 84, 88, 91, 92, 93, 101, 107, 111, 112, 113, 114, 116, 117, 118, 121, 122, 125, 126, 129, 133, 134, 135, 136, 140, 141, 142, 143, 144, 145, 148, 149, 155, 156, 157, 158, 161, 165, 166, 167, 169, 170, 171, 175, 177, 178, 179, 180, 181, 182, 184, 187, 189, 194, 197, 198, 199, 202, 203, 204, 205, 206, 207, 209, 214, 216, 219, 220, 221, 224, 228, 229, 237, 238, 255, 257, 259, 260, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 295, 296, 306, 308, 309, 311, 312, 315, 316, 317, 318, 319, 325, 327, 333, 341, 352, 353, 354, 355, 356, 357, 366, 367, 368, 370, 377, 382, 399, 400, 407, 409, 414, 416, 423, 428, 431, 432, 439, 440, 442, 445, 446, 447, 448, 450, 451, 452, 457, 464, 470, 472, 473, 474, 475, 476, 483, 490, 494, 501, 505, 506, 514, 533, 545, 552, 553, 554, 555, 556, 557, 560, 564, 566, 569, 570, 571, 572, 574, 576, 577, 580, 583, 589, 591, 598, 608, 610, 612, 613, 636, 637, 640, 646, 647, 648, 660, 663, 666, 675, 681, 682, 683, 685, 686, 690, 695, 696, 697, 698, 699, 703, 704, 705, 706, 708, 726, 729, 742, 757, 761, 765, 766, 767, 768, 770, 772, 773, 774, 776, 777, 778, 779, 780, 781, 782, 783, 785, 786, 787, 793, 794, 795, 796, 797, 798, 800, 802, 803, 804, 805, 806, 808, 816, 830, 832, 833, 839, 840, 841, 845, 850, 852, 854, 858, 860, 861, 875], "select": [1, 5, 7, 11, 15, 21, 24, 28, 29, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 50, 51, 54, 55, 58, 59, 70, 73, 75, 80, 81, 86, 88, 91, 92, 93, 97, 101, 107, 110, 111, 117, 118, 119, 126, 133, 136, 140, 141, 143, 149, 150, 157, 158, 160, 161, 165, 166, 168, 169, 171, 174, 176, 177, 178, 179, 180, 181, 188, 190, 194, 198, 199, 200, 202, 205, 206, 208, 214, 215, 216, 220, 221, 225, 229, 233, 234, 237, 238, 239, 242, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 272, 273, 276, 277, 278, 317, 322, 352, 363, 409, 415, 438, 445, 466, 472, 475, 476, 481, 508, 547, 548, 550, 551, 552, 553, 555, 556, 560, 569, 571, 572, 578, 579, 592, 618, 630, 637, 640, 658, 661, 681, 695, 696, 697, 698, 699, 706, 712, 759, 766, 772, 776, 778, 780, 781, 782, 785, 787, 789, 795, 798, 800, 804, 807, 811, 830, 834, 837, 850, 854, 857, 861, 875], "re": [1, 4, 29, 45, 70, 91, 92, 99, 101, 111, 112, 118, 125, 133, 139, 140, 143, 150, 155, 157, 158, 159, 160, 161, 165, 166, 168, 169, 170, 171, 181, 188, 198, 199, 200, 202, 203, 204, 205, 206, 213, 215, 220, 226, 228, 234, 239, 242, 254, 256, 259, 262, 263, 264, 265, 267, 271, 279, 311, 315, 407, 414, 432, 475, 476, 499, 547, 548, 551, 553, 554, 555, 564, 609, 637, 640, 644, 695, 697, 698, 699, 706, 712, 729, 759, 774, 781, 785, 794, 797, 799, 802, 804, 834, 838, 839, 842, 852, 854, 855, 857, 863, 875], "referenc": [1, 29, 70, 91, 92, 139, 149, 150, 158, 161, 166, 181, 188, 198, 202, 206, 220, 224, 256, 262, 263, 264, 265, 279, 475, 476, 637, 640, 695, 697, 698, 699, 776, 830, 834, 857, 861, 864, 875], "item": [1, 4, 8, 11, 12, 13, 14, 15, 16, 18, 21, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 122, 125, 126, 127, 129, 130, 131, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 150, 151, 155, 156, 157, 158, 159, 161, 165, 166, 167, 168, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 216, 219, 220, 221, 225, 226, 227, 228, 229, 232, 234, 238, 255, 259, 260, 262, 263, 267, 271, 275, 281, 286, 300, 475, 476, 521, 697, 698, 699, 730, 742, 840, 860, 875], "deactiv": [1, 29, 42, 51, 67, 70, 90, 91, 92, 109, 141, 145, 158, 161, 181, 190, 204, 205, 206, 220, 763, 832], "wa": [1, 5, 7, 13, 18, 21, 33, 60, 65, 70, 92, 113, 133, 139, 143, 148, 150, 157, 158, 165, 166, 167, 169, 170, 180, 181, 182, 188, 190, 193, 194, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 215, 216, 219, 227, 228, 229, 239, 255, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 282, 283, 295, 296, 330, 345, 386, 406, 407, 414, 429, 431, 472, 475, 476, 492, 494, 503, 508, 518, 528, 529, 531, 532, 537, 538, 539, 554, 555, 556, 567, 568, 569, 572, 574, 575, 576, 583, 590, 608, 612, 633, 644, 647, 648, 680, 690, 695, 696, 697, 698, 699, 711, 715, 721, 742, 758, 759, 774, 776, 781, 785, 794, 797, 802, 804, 807, 811, 830, 833, 834, 839, 840, 841, 851, 856, 857, 860, 863, 875], "been": [1, 9, 10, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 69, 70, 73, 77, 78, 82, 84, 85, 92, 114, 117, 118, 125, 133, 139, 141, 144, 148, 149, 150, 158, 159, 161, 165, 166, 168, 170, 171, 174, 175, 177, 178, 180, 181, 182, 187, 190, 193, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 237, 244, 253, 254, 257, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 273, 274, 275, 276, 277, 278, 287, 288, 289, 295, 296, 301, 352, 356, 357, 366, 367, 368, 374, 375, 376, 379, 380, 382, 387, 390, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 407, 414, 428, 450, 451, 467, 470, 472, 473, 475, 476, 477, 483, 484, 495, 503, 523, 533, 554, 555, 556, 567, 583, 590, 613, 695, 696, 697, 698, 699, 711, 721, 723, 725, 726, 752, 766, 772, 776, 778, 780, 782, 796, 834, 842, 846, 851, 854, 856, 857, 860, 863, 875], "appli": [1, 4, 5, 7, 8, 9, 10, 11, 12, 15, 16, 18, 21, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 77, 78, 80, 81, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 98, 99, 101, 102, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 125, 126, 130, 132, 133, 134, 135, 139, 140, 141, 142, 144, 145, 148, 149, 150, 151, 155, 157, 158, 159, 160, 161, 165, 166, 168, 169, 171, 175, 176, 177, 178, 180, 181, 182, 183, 184, 188, 190, 194, 197, 198, 199, 201, 203, 205, 206, 208, 209, 210, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 238, 242, 255, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 310, 336, 351, 356, 365, 366, 368, 407, 409, 410, 414, 415, 416, 418, 420, 428, 437, 438, 439, 440, 441, 443, 445, 446, 448, 451, 465, 472, 473, 475, 476, 512, 515, 522, 523, 524, 525, 526, 531, 532, 534, 537, 538, 539, 554, 555, 556, 557, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 583, 590, 598, 606, 610, 613, 614, 615, 635, 640, 651, 652, 653, 654, 655, 657, 662, 676, 677, 682, 683, 684, 695, 696, 697, 698, 699, 707, 711, 721, 724, 725, 727, 731, 732, 742, 766, 767, 772, 773, 774, 776, 778, 780, 781, 785, 786, 787, 789, 795, 796, 800, 802, 803, 805, 812, 815, 822, 825, 830, 834, 850, 852, 854, 857, 858, 860, 863, 875], "yet": [1, 70, 92, 133, 158, 181, 188, 204, 206, 239, 262, 374, 375, 376, 379, 380, 382, 387, 390, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 415, 420, 544, 569, 742, 834, 875], "method": [1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 27, 28, 29, 30, 31, 34, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 59, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 83, 86, 91, 92, 93, 95, 97, 99, 101, 102, 105, 106, 107, 108, 111, 112, 113, 114, 119, 125, 131, 135, 139, 140, 141, 142, 143, 145, 148, 149, 150, 151, 158, 159, 161, 164, 165, 166, 167, 168, 169, 171, 174, 176, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 211, 215, 217, 218, 219, 220, 221, 225, 229, 232, 234, 237, 238, 239, 242, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 282, 283, 286, 295, 296, 297, 298, 300, 303, 304, 308, 309, 310, 311, 312, 316, 317, 318, 319, 322, 324, 325, 338, 340, 342, 345, 347, 352, 356, 357, 358, 363, 366, 367, 368, 370, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 426, 428, 430, 442, 443, 445, 446, 447, 451, 458, 467, 470, 471, 472, 473, 474, 475, 476, 477, 480, 482, 484, 485, 486, 487, 488, 491, 492, 493, 496, 498, 499, 500, 501, 502, 503, 504, 505, 508, 511, 518, 519, 521, 522, 523, 524, 525, 526, 528, 529, 533, 534, 535, 537, 538, 539, 551, 552, 554, 555, 556, 563, 566, 567, 568, 570, 580, 581, 583, 586, 587, 588, 589, 590, 598, 600, 604, 607, 613, 615, 630, 631, 640, 645, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 663, 673, 676, 677, 679, 682, 683, 684, 685, 686, 688, 695, 696, 697, 698, 699, 702, 705, 707, 713, 714, 722, 723, 725, 726, 730, 737, 738, 740, 742, 743, 755, 758, 762, 767, 768, 769, 770, 773, 781, 784, 786, 794, 798, 801, 830, 832, 834, 849, 850, 852, 854, 857, 858, 860, 861, 872, 875], "note": [1, 4, 13, 16, 18, 21, 26, 47, 69, 70, 73, 81, 102, 107, 110, 112, 127, 133, 134, 135, 139, 140, 141, 142, 144, 148, 150, 155, 157, 159, 161, 165, 166, 167, 168, 169, 170, 171, 179, 180, 181, 182, 188, 189, 193, 197, 198, 199, 200, 201, 202, 203, 205, 207, 208, 209, 210, 213, 214, 215, 219, 220, 228, 229, 232, 233, 234, 238, 239, 242, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 286, 291, 295, 296, 298, 301, 302, 303, 304, 305, 307, 308, 310, 311, 312, 315, 316, 317, 318, 319, 320, 322, 326, 327, 328, 330, 332, 333, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 356, 357, 358, 359, 362, 363, 365, 366, 369, 370, 377, 382, 383, 384, 385, 386, 388, 399, 400, 406, 407, 409, 410, 411, 413, 414, 415, 416, 417, 419, 423, 424, 426, 427, 428, 429, 430, 431, 432, 434, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 450, 451, 457, 458, 460, 463, 464, 465, 466, 468, 469, 474, 475, 476, 477, 483, 487, 488, 490, 491, 492, 495, 497, 498, 499, 501, 503, 504, 508, 510, 511, 512, 513, 515, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 533, 535, 537, 538, 539, 541, 542, 554, 555, 556, 557, 558, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 577, 580, 583, 584, 589, 590, 591, 592, 593, 597, 598, 601, 603, 605, 606, 607, 609, 610, 613, 614, 615, 617, 618, 620, 623, 629, 631, 632, 634, 635, 637, 640, 642, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 663, 664, 672, 675, 676, 677, 678, 681, 682, 683, 684, 685, 686, 688, 690, 695, 696, 697, 698, 699, 703, 704, 705, 706, 707, 708, 709, 711, 713, 714, 717, 721, 722, 723, 725, 726, 727, 728, 730, 731, 732, 736, 737, 740, 742, 743, 745, 757, 758, 759, 760, 761, 763, 765, 766, 767, 769, 770, 772, 773, 774, 775, 776, 778, 779, 781, 782, 783, 785, 787, 788, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 802, 803, 804, 805, 806, 807, 808, 811, 812, 816, 820, 821, 822, 823, 824, 825, 830, 832, 834, 835, 841, 850, 854, 856, 857, 859, 875], "legaci": [1, 70, 73, 107, 127, 141, 142, 165, 171, 182, 197, 201, 205, 207, 209, 216, 238, 262, 263, 264, 265, 475, 476, 774, 796, 875], "new": [1, 8, 14, 19, 27, 31, 61, 68, 70, 73, 79, 107, 111, 127, 133, 136, 139, 141, 142, 144, 148, 150, 160, 164, 165, 171, 174, 181, 182, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 213, 215, 216, 219, 224, 227, 228, 229, 237, 238, 242, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 282, 283, 285, 286, 291, 295, 296, 298, 300, 302, 303, 304, 305, 306, 307, 310, 311, 312, 314, 315, 316, 319, 320, 321, 326, 328, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 366, 367, 368, 369, 377, 383, 385, 386, 399, 400, 406, 407, 409, 411, 413, 414, 418, 419, 426, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 454, 455, 457, 460, 464, 465, 466, 469, 470, 472, 473, 474, 475, 476, 483, 486, 487, 488, 490, 491, 492, 495, 498, 503, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 528, 529, 530, 531, 532, 535, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 554, 555, 556, 557, 558, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 580, 582, 583, 584, 591, 593, 597, 598, 603, 607, 609, 610, 614, 618, 626, 628, 629, 630, 631, 632, 634, 637, 640, 644, 646, 647, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 664, 672, 676, 678, 688, 689, 690, 694, 695, 696, 697, 698, 699, 707, 709, 712, 713, 714, 717, 722, 723, 725, 726, 727, 728, 730, 731, 732, 739, 742, 743, 745, 750, 751, 755, 758, 759, 760, 761, 763, 765, 766, 768, 769, 770, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 804, 805, 806, 808, 811, 816, 819, 820, 821, 825, 826, 828, 830, 832, 833, 836, 838, 839, 840, 842, 845, 850, 851, 854, 855, 856, 857, 858, 860, 862, 863], "should": [1, 4, 5, 16, 19, 40, 41, 63, 69, 70, 73, 80, 86, 88, 107, 118, 119, 127, 131, 133, 134, 135, 139, 140, 141, 142, 143, 150, 155, 156, 157, 159, 160, 164, 165, 166, 171, 179, 181, 182, 183, 189, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 214, 215, 216, 219, 228, 229, 237, 238, 239, 242, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 301, 302, 303, 304, 305, 306, 307, 310, 312, 314, 315, 326, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 379, 380, 381, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 412, 413, 414, 417, 418, 419, 420, 423, 424, 426, 428, 432, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 457, 458, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 510, 511, 512, 513, 514, 515, 517, 518, 519, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 548, 551, 554, 555, 557, 558, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 578, 579, 580, 581, 583, 584, 586, 587, 590, 591, 592, 593, 595, 596, 597, 598, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 613, 614, 615, 617, 618, 619, 620, 621, 623, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 640, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 657, 659, 660, 661, 663, 665, 666, 667, 668, 669, 670, 671, 672, 677, 682, 683, 684, 685, 686, 690, 691, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 713, 714, 717, 718, 722, 723, 725, 726, 727, 728, 730, 731, 732, 737, 738, 741, 742, 744, 746, 750, 758, 759, 760, 761, 765, 766, 767, 769, 770, 772, 773, 774, 775, 776, 777, 778, 781, 782, 785, 786, 787, 788, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 811, 812, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 832, 833, 834, 837, 838, 839, 840, 845, 850, 851, 856, 857, 860, 863, 875], "compute_psd": [1, 70, 73, 107, 127, 131, 136, 141, 142, 165, 171, 182, 197, 199, 201, 205, 207, 209, 210, 216, 237, 238, 239, 262, 263, 264, 265, 412, 475, 476, 555, 697, 699, 713, 774, 785, 787, 796, 875], "5": [1, 2, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 67, 68, 69, 70, 71, 72, 73, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 94, 95, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 155, 156, 157, 158, 159, 161, 165, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 189, 190, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 219, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 242, 254, 256, 257, 262, 263, 264, 265, 268, 269, 270, 273, 276, 277, 278, 280, 295, 296, 298, 301, 305, 312, 324, 333, 352, 358, 377, 382, 406, 407, 413, 424, 427, 428, 430, 448, 449, 450, 463, 472, 475, 476, 499, 511, 512, 522, 528, 533, 537, 538, 539, 554, 555, 557, 558, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 578, 581, 583, 587, 591, 592, 609, 617, 636, 644, 648, 681, 694, 697, 699, 707, 711, 713, 721, 722, 723, 725, 726, 732, 742, 757, 761, 773, 774, 778, 779, 785, 787, 790, 795, 800, 805, 815, 832, 833, 834, 840, 850, 851, 854, 856, 857, 860, 863], "becaus": [1, 4, 5, 11, 16, 18, 21, 26, 34, 41, 43, 44, 45, 50, 60, 69, 73, 79, 80, 81, 99, 112, 113, 117, 133, 139, 141, 142, 143, 145, 148, 149, 150, 157, 159, 160, 161, 165, 166, 167, 169, 170, 175, 179, 180, 181, 182, 183, 188, 189, 190, 193, 194, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 215, 219, 224, 225, 226, 229, 232, 239, 262, 263, 264, 265, 345, 356, 428, 450, 565, 574, 582, 682, 683, 685, 686, 698, 751, 772, 803, 830, 834, 838, 842, 850, 852, 854, 856, 857, 861, 875], "all": [1, 4, 5, 10, 13, 14, 18, 19, 21, 27, 28, 31, 33, 35, 40, 45, 59, 61, 63, 69, 72, 79, 80, 81, 88, 93, 95, 97, 101, 105, 109, 110, 111, 112, 114, 115, 117, 118, 119, 123, 125, 134, 139, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 167, 168, 169, 170, 171, 175, 178, 180, 181, 182, 183, 184, 187, 188, 189, 190, 194, 197, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 229, 233, 237, 238, 239, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 289, 290, 293, 295, 296, 298, 300, 305, 306, 307, 308, 310, 311, 312, 315, 320, 321, 322, 325, 326, 327, 336, 346, 347, 351, 352, 356, 357, 358, 359, 363, 364, 366, 367, 368, 370, 383, 407, 409, 410, 414, 416, 423, 424, 428, 431, 432, 434, 436, 437, 438, 439, 440, 441, 445, 446, 447, 448, 449, 450, 451, 455, 457, 463, 464, 465, 466, 470, 472, 473, 475, 476, 477, 481, 483, 487, 490, 497, 499, 502, 506, 510, 521, 522, 524, 526, 529, 531, 532, 533, 534, 538, 539, 541, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 565, 569, 570, 571, 572, 573, 574, 577, 580, 583, 589, 591, 598, 603, 606, 607, 609, 610, 613, 614, 615, 618, 628, 633, 634, 640, 643, 645, 654, 660, 663, 672, 675, 676, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 690, 695, 696, 697, 698, 699, 703, 704, 705, 706, 708, 711, 712, 713, 717, 721, 722, 723, 725, 726, 730, 732, 740, 742, 749, 750, 758, 759, 760, 766, 770, 772, 773, 774, 776, 777, 778, 779, 781, 782, 783, 785, 786, 789, 791, 792, 793, 794, 795, 796, 797, 798, 800, 802, 803, 804, 805, 806, 815, 830, 837, 841, 845, 849, 850, 851, 852, 856, 857, 860, 861, 863, 875], "were": [1, 4, 5, 10, 18, 21, 38, 79, 80, 117, 125, 133, 136, 139, 140, 141, 142, 143, 148, 149, 150, 160, 166, 167, 170, 171, 180, 181, 182, 183, 187, 189, 190, 198, 199, 200, 203, 204, 205, 206, 208, 209, 213, 214, 215, 216, 219, 224, 226, 228, 229, 262, 263, 264, 265, 267, 270, 272, 273, 276, 278, 279, 295, 296, 318, 346, 347, 358, 361, 399, 400, 431, 433, 475, 476, 498, 555, 565, 566, 574, 583, 690, 695, 696, 697, 698, 699, 786, 788, 795, 830, 834, 841, 851, 854, 856, 860, 875], "effect": [1, 7, 17, 19, 20, 21, 26, 27, 39, 57, 59, 69, 70, 73, 81, 82, 97, 101, 107, 110, 111, 118, 119, 127, 131, 140, 144, 148, 150, 159, 161, 165, 166, 167, 171, 182, 190, 197, 199, 200, 201, 205, 206, 207, 208, 209, 210, 216, 220, 221, 225, 226, 228, 229, 234, 237, 238, 242, 262, 263, 264, 265, 267, 268, 269, 272, 273, 277, 295, 296, 318, 352, 356, 357, 366, 367, 368, 399, 400, 407, 408, 414, 423, 428, 430, 431, 446, 450, 451, 470, 472, 473, 475, 476, 491, 492, 522, 525, 533, 552, 555, 558, 563, 610, 676, 678, 681, 682, 683, 685, 686, 697, 699, 702, 713, 772, 776, 782, 785, 787, 789, 795, 796, 798, 800, 830, 840, 841, 854, 875], "window": [1, 2, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 59, 70, 71, 72, 73, 75, 80, 81, 82, 86, 91, 97, 98, 101, 102, 106, 107, 111, 112, 113, 119, 121, 127, 131, 135, 136, 140, 141, 142, 143, 145, 150, 165, 170, 171, 179, 182, 190, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 215, 216, 225, 229, 237, 238, 239, 254, 257, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 288, 339, 341, 345, 407, 408, 412, 414, 418, 420, 423, 431, 433, 442, 443, 445, 446, 447, 456, 466, 467, 473, 475, 476, 528, 529, 555, 557, 565, 574, 577, 581, 583, 591, 647, 648, 681, 695, 696, 697, 699, 702, 705, 707, 710, 713, 714, 718, 719, 722, 723, 724, 725, 726, 727, 742, 772, 773, 774, 781, 789, 795, 796, 800, 805, 834, 837, 838, 839, 840, 875], "size": [1, 5, 8, 9, 10, 21, 22, 32, 35, 41, 43, 44, 45, 46, 53, 58, 64, 69, 70, 73, 81, 98, 106, 107, 112, 118, 124, 125, 127, 131, 132, 133, 134, 135, 141, 143, 145, 149, 150, 154, 155, 157, 159, 165, 171, 174, 176, 177, 178, 179, 180, 182, 183, 184, 188, 189, 197, 198, 200, 201, 204, 205, 206, 207, 209, 210, 213, 216, 220, 221, 226, 229, 232, 237, 238, 239, 242, 259, 260, 262, 263, 264, 265, 269, 270, 271, 272, 273, 276, 277, 278, 310, 318, 326, 328, 358, 407, 409, 414, 418, 419, 442, 443, 445, 446, 447, 472, 474, 475, 476, 515, 528, 554, 555, 569, 574, 581, 661, 677, 681, 682, 683, 685, 686, 695, 697, 699, 719, 732, 742, 751, 755, 770, 772, 774, 780, 781, 785, 787, 788, 789, 792, 794, 795, 797, 798, 800, 801, 802, 803, 804, 805, 809, 815, 857, 860, 875], "707": [1, 143, 147, 207, 229], "need": [1, 4, 5, 11, 28, 29, 30, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 54, 55, 58, 59, 60, 68, 69, 73, 74, 84, 88, 92, 93, 101, 102, 105, 106, 107, 108, 110, 112, 115, 117, 125, 133, 134, 135, 139, 140, 141, 142, 143, 144, 148, 149, 150, 155, 157, 158, 159, 160, 164, 165, 166, 167, 168, 169, 171, 174, 176, 177, 178, 179, 180, 181, 187, 189, 190, 193, 194, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 239, 242, 262, 263, 264, 265, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 281, 295, 316, 327, 369, 372, 382, 408, 409, 417, 423, 431, 440, 445, 465, 474, 475, 476, 483, 490, 498, 514, 519, 542, 555, 590, 644, 682, 683, 685, 686, 695, 697, 698, 699, 742, 748, 759, 765, 780, 785, 795, 832, 834, 835, 837, 838, 839, 840, 841, 842, 850, 851, 856, 857, 858, 860, 863, 875], "more": [1, 4, 18, 19, 27, 28, 34, 42, 43, 44, 49, 54, 58, 69, 70, 72, 74, 79, 80, 81, 82, 84, 92, 102, 105, 108, 111, 112, 119, 120, 128, 132, 133, 134, 135, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 154, 155, 157, 159, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 176, 177, 179, 180, 183, 184, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 213, 214, 215, 216, 221, 224, 225, 226, 227, 229, 232, 234, 238, 239, 247, 256, 257, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 287, 295, 296, 303, 304, 327, 352, 356, 358, 363, 365, 368, 399, 400, 406, 407, 409, 411, 412, 414, 415, 419, 424, 426, 437, 438, 440, 441, 442, 443, 445, 446, 448, 449, 457, 466, 475, 476, 483, 492, 499, 510, 514, 517, 522, 528, 529, 530, 554, 555, 557, 563, 565, 574, 580, 583, 592, 603, 605, 609, 610, 613, 623, 632, 634, 635, 637, 640, 647, 672, 676, 677, 682, 683, 684, 685, 686, 695, 697, 698, 699, 702, 705, 713, 722, 723, 724, 725, 726, 727, 739, 742, 758, 759, 760, 761, 766, 770, 774, 777, 778, 780, 781, 785, 794, 797, 800, 802, 804, 805, 813, 814, 823, 830, 831, 832, 834, 838, 839, 840, 841, 850, 851, 852, 854, 856, 857, 858, 859, 863, 872, 875], "than": [1, 5, 13, 18, 24, 26, 33, 34, 41, 42, 44, 45, 46, 50, 54, 58, 59, 60, 68, 69, 77, 81, 84, 85, 92, 112, 117, 122, 125, 133, 134, 135, 139, 140, 141, 142, 143, 145, 148, 149, 150, 155, 157, 160, 165, 166, 167, 168, 169, 170, 171, 175, 179, 180, 182, 183, 184, 187, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 224, 227, 237, 239, 257, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 287, 303, 304, 351, 356, 363, 407, 409, 412, 414, 418, 424, 426, 436, 441, 443, 445, 446, 448, 451, 463, 472, 473, 475, 476, 492, 499, 510, 520, 528, 529, 539, 544, 546, 548, 554, 555, 557, 563, 565, 569, 571, 581, 582, 584, 588, 591, 609, 614, 635, 644, 676, 682, 683, 684, 685, 686, 687, 690, 695, 697, 698, 699, 702, 705, 710, 713, 718, 724, 727, 742, 759, 760, 772, 774, 775, 778, 781, 785, 794, 795, 797, 800, 802, 804, 805, 815, 832, 834, 839, 840, 841, 856, 857, 875], "one": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 24, 31, 32, 33, 34, 40, 41, 42, 43, 45, 46, 48, 49, 50, 58, 59, 65, 67, 69, 72, 73, 75, 80, 81, 82, 84, 85, 86, 88, 92, 94, 95, 97, 101, 107, 109, 111, 112, 113, 115, 119, 125, 129, 131, 133, 134, 135, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 165, 166, 167, 168, 171, 175, 176, 177, 178, 179, 180, 181, 183, 187, 188, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 219, 221, 224, 226, 227, 228, 229, 233, 238, 239, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 284, 287, 295, 296, 309, 310, 312, 316, 317, 319, 351, 353, 354, 356, 358, 359, 363, 377, 385, 388, 390, 399, 400, 406, 407, 413, 414, 417, 420, 422, 426, 429, 430, 431, 438, 439, 441, 442, 448, 457, 464, 465, 466, 473, 474, 475, 476, 479, 483, 492, 507, 508, 510, 512, 517, 531, 532, 538, 539, 541, 544, 555, 556, 557, 558, 571, 575, 578, 579, 591, 594, 603, 605, 613, 614, 620, 632, 634, 640, 644, 647, 661, 666, 676, 677, 682, 683, 684, 685, 686, 688, 691, 695, 696, 697, 698, 699, 701, 704, 711, 721, 722, 723, 725, 726, 728, 731, 732, 742, 755, 758, 760, 761, 766, 773, 774, 776, 777, 778, 779, 781, 782, 783, 785, 787, 800, 801, 803, 804, 805, 806, 815, 821, 823, 830, 832, 833, 834, 837, 838, 842, 850, 851, 852, 854, 856, 857, 860, 875], "make": [1, 4, 9, 10, 13, 18, 19, 21, 27, 28, 31, 32, 34, 38, 42, 45, 48, 50, 54, 55, 59, 61, 69, 74, 84, 88, 91, 92, 101, 107, 109, 110, 111, 112, 120, 122, 128, 131, 133, 134, 135, 139, 140, 141, 142, 143, 149, 150, 155, 157, 159, 160, 161, 165, 166, 168, 169, 170, 171, 175, 176, 177, 178, 179, 181, 182, 183, 184, 187, 188, 190, 193, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 213, 215, 219, 224, 226, 227, 228, 232, 233, 234, 239, 254, 261, 262, 263, 264, 265, 267, 269, 270, 273, 275, 276, 277, 278, 295, 296, 323, 335, 352, 356, 357, 358, 363, 366, 367, 368, 369, 407, 410, 411, 414, 416, 417, 426, 430, 431, 442, 443, 445, 446, 450, 451, 457, 464, 466, 470, 472, 473, 475, 476, 516, 533, 539, 548, 554, 555, 565, 580, 582, 591, 601, 603, 613, 623, 632, 634, 647, 659, 690, 692, 696, 711, 721, 722, 723, 725, 730, 737, 738, 742, 760, 761, 764, 765, 766, 768, 779, 782, 788, 795, 800, 805, 806, 823, 830, 832, 833, 841, 842, 850, 851, 852, 854, 855, 857, 860, 863, 875], "topographi": [1, 13, 21, 27, 69, 70, 73, 84, 112, 118, 120, 128, 130, 141, 143, 150, 165, 169, 171, 175, 190, 203, 205, 206, 216, 227, 229, 237, 242, 262, 263, 264, 265, 267, 271, 272, 311, 407, 414, 475, 476, 552, 555, 570, 660, 695, 697, 699, 755, 774, 779, 780, 781, 785, 787, 791, 796, 798, 802, 803, 830, 875], "disabl": [1, 84, 112, 141, 148, 149, 150, 171, 197, 198, 201, 216, 227, 254, 259, 262, 263, 264, 265, 271, 272, 306, 363, 407, 413, 414, 419, 475, 476, 554, 555, 574, 583, 638, 642, 695, 697, 699, 737, 742, 759, 774, 776, 780, 781, 785, 794, 795, 797, 802, 804, 808, 832, 875], "interact": [1, 27, 33, 45, 47, 84, 112, 113, 118, 125, 133, 139, 148, 149, 150, 164, 165, 167, 171, 179, 180, 190, 198, 199, 203, 204, 205, 209, 213, 221, 224, 227, 228, 234, 238, 239, 242, 254, 259, 262, 263, 264, 265, 269, 270, 271, 272, 273, 276, 277, 278, 288, 295, 407, 414, 466, 475, 476, 522, 554, 555, 591, 676, 678, 695, 697, 699, 742, 744, 758, 759, 763, 773, 774, 776, 777, 778, 780, 781, 785, 787, 789, 794, 795, 796, 797, 798, 800, 802, 803, 804, 805, 832, 834, 856, 857, 858, 863, 875], "filter": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 17, 19, 20, 27, 32, 33, 34, 42, 45, 59, 67, 71, 72, 75, 76, 80, 81, 82, 83, 86, 90, 97, 107, 110, 111, 113, 119, 131, 135, 139, 140, 143, 144, 145, 148, 161, 164, 165, 166, 168, 171, 175, 180, 182, 183, 184, 190, 193, 197, 199, 202, 205, 209, 211, 212, 213, 215, 216, 221, 229, 239, 242, 254, 257, 260, 261, 262, 263, 264, 265, 267, 269, 270, 272, 273, 276, 277, 278, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 340, 342, 345, 346, 349, 352, 356, 357, 366, 367, 368, 372, 407, 408, 409, 411, 414, 415, 418, 421, 422, 423, 425, 428, 436, 448, 450, 451, 470, 472, 473, 475, 476, 488, 516, 533, 552, 555, 556, 560, 566, 567, 568, 571, 572, 574, 575, 576, 583, 584, 587, 610, 649, 659, 695, 697, 698, 699, 707, 708, 711, 714, 782, 783, 784, 790, 795, 796, 814, 830, 832, 834, 850, 852, 854, 861, 864, 865, 875], "contigu": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 34, 42, 72, 75, 80, 81, 82, 86, 97, 111, 112, 113, 119, 131, 135, 140, 143, 145, 150, 194, 201, 202, 203, 205, 208, 209, 210, 228, 229, 268], "segment": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 23, 24, 27, 33, 34, 38, 42, 63, 69, 72, 75, 79, 80, 81, 82, 86, 97, 107, 111, 112, 113, 119, 131, 133, 134, 135, 136, 140, 143, 144, 145, 150, 161, 167, 171, 183, 190, 194, 199, 201, 202, 203, 204, 205, 207, 208, 209, 210, 215, 229, 238, 242, 254, 256, 260, 262, 263, 264, 265, 272, 275, 301, 352, 357, 436, 459, 460, 461, 474, 475, 476, 503, 515, 523, 525, 555, 557, 558, 559, 560, 561, 562, 565, 571, 572, 574, 575, 581, 583, 695, 714, 740, 742, 776, 778, 785, 787, 830, 850, 851, 857, 860, 875], "up": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 23, 24, 26, 27, 28, 33, 34, 42, 44, 45, 50, 68, 71, 72, 75, 78, 80, 81, 82, 86, 88, 91, 92, 93, 97, 101, 102, 107, 109, 110, 111, 112, 113, 115, 119, 121, 130, 131, 133, 135, 139, 140, 143, 144, 145, 149, 150, 154, 155, 157, 158, 159, 161, 164, 165, 171, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 213, 215, 216, 220, 221, 225, 226, 229, 232, 234, 239, 259, 260, 262, 263, 264, 265, 269, 270, 271, 272, 273, 274, 276, 277, 278, 407, 412, 413, 414, 419, 447, 475, 476, 528, 529, 554, 555, 557, 574, 638, 643, 644, 681, 690, 695, 697, 699, 713, 740, 742, 761, 770, 772, 773, 774, 778, 781, 785, 788, 794, 795, 797, 800, 802, 805, 806, 812, 830, 832, 838, 854, 857, 858, 860, 863, 875], "band": [1, 5, 8, 9, 12, 13, 14, 15, 16, 18, 21, 27, 32, 33, 34, 42, 71, 75, 80, 86, 92, 103, 104, 105, 107, 108, 110, 112, 113, 119, 124, 131, 135, 136, 140, 141, 143, 144, 145, 166, 171, 194, 197, 199, 200, 201, 202, 203, 205, 209, 210, 216, 228, 229, 237, 238, 239, 242, 262, 263, 264, 265, 285, 409, 415, 418, 442, 443, 445, 446, 448, 475, 476, 538, 560, 587, 674, 697, 699, 711, 721, 722, 725, 766, 774, 790, 830, 851, 854, 875], "stop": [1, 5, 29, 67, 80, 91, 94, 125, 135, 166, 171, 199, 200, 201, 208, 210, 213, 214, 215, 254, 255, 262, 263, 264, 265, 282, 283, 294, 355, 409, 418, 442, 443, 445, 446, 474, 475, 476, 516, 525, 528, 555, 574, 581, 597, 786, 789, 834, 856, 875], "fir": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 71, 72, 75, 80, 81, 82, 86, 97, 111, 112, 113, 119, 131, 135, 140, 143, 145, 150, 171, 190, 194, 197, 199, 201, 202, 203, 205, 208, 209, 210, 229, 254, 262, 263, 264, 265, 409, 418, 443, 445, 446, 475, 476, 567, 568, 587, 708, 783, 795, 832, 854, 864, 875], "paramet": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 24, 31, 34, 40, 41, 42, 43, 44, 48, 54, 55, 59, 61, 68, 70, 71, 72, 74, 75, 80, 81, 82, 86, 94, 95, 97, 98, 99, 105, 106, 107, 108, 110, 111, 112, 113, 115, 117, 118, 119, 121, 126, 130, 131, 135, 136, 139, 140, 141, 143, 144, 145, 148, 149, 150, 155, 157, 158, 160, 161, 165, 167, 168, 169, 170, 171, 174, 177, 179, 187, 190, 193, 194, 197, 198, 200, 201, 202, 203, 204, 205, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 227, 237, 238, 239, 242, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 745, 746, 747, 748, 750, 751, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 834, 850, 852, 854, 857, 861, 875], "design": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 60, 71, 72, 75, 80, 81, 82, 86, 97, 111, 112, 113, 119, 131, 135, 140, 143, 145, 150, 159, 160, 171, 179, 187, 189, 190, 197, 199, 201, 202, 203, 205, 206, 208, 209, 210, 221, 224, 229, 242, 255, 262, 263, 264, 265, 340, 383, 386, 409, 418, 442, 443, 445, 446, 475, 476, 483, 485, 487, 490, 491, 492, 497, 501, 554, 556, 583, 590, 597, 607, 676, 680, 707, 718, 795, 813, 814, 839, 851, 854, 856, 863, 875], "pass": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 32, 34, 42, 43, 59, 71, 72, 75, 80, 81, 82, 86, 97, 111, 112, 113, 119, 131, 133, 135, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 154, 155, 157, 165, 166, 167, 168, 169, 170, 171, 179, 182, 188, 190, 194, 197, 198, 199, 201, 202, 203, 204, 205, 208, 209, 210, 213, 214, 215, 216, 219, 221, 224, 226, 228, 229, 232, 233, 234, 237, 238, 242, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 301, 302, 303, 304, 305, 306, 307, 310, 312, 314, 315, 316, 320, 321, 322, 327, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 420, 423, 424, 426, 428, 431, 432, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 450, 451, 452, 457, 458, 462, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 517, 518, 519, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 544, 548, 551, 554, 555, 556, 557, 558, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 586, 587, 590, 591, 592, 595, 596, 597, 598, 600, 602, 603, 604, 605, 606, 607, 609, 610, 611, 613, 614, 615, 617, 618, 619, 620, 621, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 640, 642, 643, 644, 646, 647, 648, 649, 658, 659, 660, 661, 663, 665, 666, 667, 668, 669, 670, 671, 675, 682, 683, 684, 685, 686, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 713, 714, 717, 718, 722, 723, 725, 726, 727, 728, 731, 732, 737, 741, 742, 743, 750, 755, 758, 759, 762, 764, 766, 767, 768, 770, 772, 773, 774, 775, 776, 777, 779, 780, 781, 782, 785, 786, 787, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 811, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 832, 834, 838, 839, 850, 852, 854, 857, 875], "zero": [1, 2, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 24, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 63, 69, 71, 72, 73, 75, 80, 81, 82, 86, 88, 91, 92, 93, 97, 107, 110, 111, 112, 113, 118, 119, 131, 135, 139, 140, 141, 143, 145, 148, 150, 151, 157, 159, 161, 165, 167, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 219, 220, 221, 224, 228, 229, 239, 255, 256, 257, 260, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 276, 277, 278, 279, 281, 295, 296, 352, 356, 358, 366, 409, 413, 418, 419, 420, 441, 443, 445, 446, 447, 448, 470, 475, 476, 477, 488, 528, 539, 555, 556, 575, 597, 610, 646, 647, 648, 656, 660, 675, 682, 683, 685, 686, 690, 691, 695, 697, 698, 699, 711, 714, 721, 722, 723, 724, 725, 727, 742, 757, 761, 771, 772, 795, 800, 805, 806, 830, 834, 850, 857, 860, 875], "phase": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 27, 34, 42, 71, 72, 75, 80, 81, 82, 86, 97, 103, 104, 111, 112, 113, 119, 131, 135, 140, 143, 145, 150, 166, 171, 189, 190, 194, 197, 199, 200, 201, 202, 203, 205, 208, 209, 210, 221, 229, 239, 242, 262, 263, 264, 265, 267, 268, 269, 270, 273, 276, 277, 278, 288, 339, 368, 409, 418, 420, 441, 443, 445, 446, 448, 475, 476, 521, 526, 536, 539, 552, 555, 617, 722, 723, 732, 783, 830, 841, 851, 875], "non": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 24, 34, 40, 41, 42, 46, 50, 59, 69, 71, 72, 75, 80, 81, 82, 86, 91, 97, 107, 111, 112, 113, 119, 131, 135, 140, 141, 142, 143, 145, 149, 150, 157, 164, 165, 168, 170, 171, 174, 179, 180, 184, 188, 189, 190, 194, 197, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 213, 219, 229, 230, 231, 242, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 276, 277, 278, 284, 295, 296, 316, 351, 352, 356, 358, 407, 413, 414, 415, 419, 436, 443, 445, 446, 448, 473, 475, 476, 491, 528, 535, 541, 552, 554, 555, 556, 569, 583, 584, 601, 607, 610, 630, 656, 674, 675, 682, 683, 685, 686, 690, 691, 695, 697, 698, 699, 725, 732, 742, 759, 770, 773, 774, 781, 785, 794, 797, 801, 802, 804, 830, 832, 834, 843, 850, 854, 856, 857, 872, 875], "causal": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 71, 72, 75, 80, 81, 82, 86, 97, 111, 112, 113, 119, 131, 135, 140, 143, 145, 150, 171, 190, 194, 197, 199, 200, 201, 202, 203, 205, 208, 209, 210, 229, 262, 263, 264, 265, 413, 443, 445, 446, 475, 476], "bandstop": [1, 5, 80, 135, 201, 210, 475, 476, 795], "domain": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 46, 71, 72, 75, 80, 81, 82, 86, 97, 101, 111, 112, 113, 119, 131, 133, 135, 140, 143, 145, 150, 164, 165, 171, 190, 194, 197, 199, 200, 201, 202, 205, 208, 209, 210, 216, 229, 239, 240, 241, 242, 254, 262, 263, 264, 265, 409, 418, 419, 443, 445, 446, 447, 448, 475, 476, 538, 539, 644, 697, 699, 713, 714, 731, 737, 856, 875], "ham": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 75, 80, 81, 82, 86, 97, 111, 112, 113, 119, 131, 135, 140, 143, 145, 150, 190, 194, 200, 201, 202, 203, 205, 208, 209, 210, 229, 262, 263, 264, 265, 409, 418, 443, 445, 446, 475, 476, 714, 796, 875], "0194": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 75, 80, 81, 82, 86, 97, 111, 112, 113, 119, 131, 135, 140, 143, 145, 150, 190, 194, 200, 201, 202, 203, 208, 209, 210, 229], "passband": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 71, 72, 75, 80, 81, 82, 86, 97, 111, 112, 113, 119, 131, 135, 140, 143, 145, 150, 171, 190, 194, 197, 199, 201, 202, 203, 205, 208, 209, 210, 229, 850], "rippl": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 75, 80, 81, 82, 86, 97, 111, 112, 113, 119, 131, 135, 140, 143, 145, 150, 190, 194, 201, 202, 203, 208, 209, 210, 229], "db": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 71, 72, 75, 80, 81, 82, 86, 97, 106, 107, 111, 112, 113, 119, 127, 131, 135, 136, 140, 141, 143, 145, 150, 168, 171, 190, 194, 197, 199, 200, 201, 202, 203, 205, 208, 209, 210, 213, 216, 219, 221, 229, 237, 238, 239, 262, 263, 264, 265, 267, 309, 310, 368, 370, 440, 443, 475, 476, 490, 501, 528, 552, 553, 555, 640, 690, 695, 697, 698, 699, 742, 758, 774, 783, 787, 790, 796, 798, 830, 857, 875], "stopband": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 75, 80, 81, 82, 86, 97, 111, 112, 113, 119, 131, 135, 140, 143, 145, 150, 190, 194, 201, 202, 203, 208, 209, 210, 229], "attenu": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 75, 80, 81, 82, 86, 97, 111, 112, 113, 119, 131, 135, 140, 143, 145, 150, 161, 190, 194, 201, 202, 203, 208, 209, 210, 229, 262, 263, 264, 265, 409, 418, 443, 445, 446, 475, 476, 857, 875], "lower": [1, 2, 5, 8, 9, 10, 12, 13, 14, 15, 16, 18, 21, 22, 34, 37, 40, 42, 49, 54, 55, 61, 69, 71, 72, 75, 80, 81, 86, 97, 105, 110, 111, 112, 113, 118, 119, 125, 131, 133, 135, 140, 141, 143, 145, 150, 155, 159, 171, 179, 180, 183, 194, 197, 199, 200, 201, 202, 203, 204, 205, 209, 210, 216, 226, 227, 228, 229, 232, 234, 239, 257, 259, 262, 263, 264, 265, 269, 270, 271, 273, 276, 277, 278, 407, 409, 412, 414, 433, 443, 445, 475, 476, 515, 528, 529, 554, 555, 560, 565, 569, 587, 606, 674, 681, 682, 684, 685, 695, 696, 697, 699, 713, 714, 759, 761, 766, 773, 774, 780, 781, 785, 794, 795, 796, 797, 800, 802, 804, 805, 806, 830, 832, 875], "transit": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 71, 72, 75, 80, 81, 82, 86, 97, 111, 112, 113, 119, 131, 135, 140, 143, 145, 150, 171, 190, 194, 197, 199, 201, 202, 203, 205, 208, 209, 210, 229, 255, 262, 263, 264, 265, 409, 418, 443, 445, 446, 475, 476, 557, 587, 808, 857, 875], "bandwidth": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 71, 72, 75, 80, 81, 82, 86, 97, 102, 111, 112, 113, 119, 131, 135, 140, 143, 145, 150, 171, 190, 194, 197, 199, 201, 202, 203, 205, 208, 209, 210, 229, 239, 262, 263, 264, 265, 412, 420, 446, 475, 476, 528, 529, 697, 699, 702, 705, 707, 713, 723, 726, 774], "50": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 28, 34, 35, 41, 42, 45, 46, 47, 65, 71, 75, 79, 80, 81, 82, 86, 88, 93, 97, 101, 106, 107, 110, 111, 112, 113, 118, 119, 131, 134, 135, 136, 142, 143, 145, 148, 150, 157, 159, 165, 167, 168, 169, 170, 171, 177, 179, 183, 184, 188, 190, 193, 194, 197, 199, 200, 201, 202, 203, 205, 207, 210, 213, 214, 215, 221, 224, 225, 226, 228, 229, 232, 233, 234, 239, 242, 254, 333, 442, 475, 476, 537, 564, 652, 657, 675, 683, 694, 742, 790, 850, 857, 875], "hz": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 32, 33, 34, 42, 67, 70, 71, 72, 75, 79, 80, 81, 82, 86, 88, 91, 92, 93, 97, 102, 105, 106, 107, 111, 112, 113, 119, 121, 125, 131, 135, 136, 140, 141, 143, 145, 150, 165, 166, 167, 168, 171, 179, 182, 183, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 221, 226, 227, 228, 229, 237, 238, 242, 254, 262, 263, 264, 265, 409, 412, 418, 442, 443, 445, 446, 448, 475, 476, 528, 529, 555, 560, 563, 567, 568, 574, 576, 579, 583, 587, 661, 681, 695, 697, 698, 699, 702, 705, 711, 713, 719, 721, 722, 723, 725, 726, 772, 774, 783, 790, 795, 796, 851, 860, 861], "upper": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 34, 39, 42, 61, 69, 71, 75, 80, 82, 86, 111, 112, 113, 118, 119, 125, 131, 133, 135, 140, 141, 143, 145, 158, 165, 171, 190, 194, 197, 199, 200, 201, 202, 203, 205, 208, 209, 210, 229, 238, 239, 242, 259, 260, 261, 262, 263, 264, 265, 269, 270, 271, 273, 276, 277, 278, 280, 407, 409, 412, 414, 433, 443, 445, 451, 475, 476, 528, 529, 554, 555, 560, 587, 674, 681, 682, 683, 684, 685, 686, 695, 696, 697, 698, 699, 711, 713, 714, 721, 759, 761, 766, 774, 780, 781, 785, 794, 796, 797, 800, 802, 804, 805, 806, 875], "7921": 1, "601": [1, 5, 135, 138, 139, 148, 197, 202, 213, 229], "parallel": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 31, 32, 33, 34, 41, 42, 45, 50, 65, 71, 72, 75, 77, 80, 81, 82, 85, 86, 88, 93, 97, 98, 105, 107, 108, 110, 111, 112, 113, 117, 119, 122, 131, 135, 140, 143, 145, 149, 150, 157, 158, 165, 171, 175, 180, 181, 182, 183, 184, 190, 194, 197, 198, 199, 201, 202, 203, 205, 206, 208, 209, 210, 221, 226, 227, 228, 229, 238, 242, 254, 262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 280, 352, 353, 355, 357, 409, 410, 412, 413, 417, 418, 420, 423, 424, 445, 446, 447, 450, 452, 463, 465, 470, 472, 473, 475, 476, 514, 517, 518, 528, 529, 533, 538, 539, 560, 567, 568, 591, 635, 638, 643, 646, 647, 648, 660, 682, 683, 684, 685, 686, 697, 699, 700, 701, 702, 703, 704, 705, 713, 714, 722, 723, 724, 725, 726, 727, 774, 777, 796, 842, 854, 857, 863, 875], "n_job": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 71, 72, 75, 77, 80, 81, 82, 85, 86, 88, 93, 94, 97, 98, 101, 105, 107, 108, 110, 111, 112, 113, 117, 119, 122, 131, 135, 140, 143, 145, 149, 150, 157, 158, 165, 171, 175, 180, 181, 182, 183, 184, 190, 194, 197, 198, 199, 201, 202, 203, 205, 206, 208, 209, 210, 221, 224, 226, 227, 228, 229, 232, 233, 234, 238, 254, 262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 280, 352, 353, 355, 357, 409, 410, 412, 413, 417, 418, 419, 420, 423, 424, 445, 446, 447, 450, 463, 465, 475, 476, 514, 517, 518, 528, 529, 538, 539, 560, 567, 568, 635, 643, 646, 647, 648, 660, 682, 683, 684, 685, 686, 697, 699, 700, 701, 702, 703, 704, 705, 713, 714, 722, 723, 724, 725, 726, 727, 774, 777, 796, 832, 854, 875], "backend": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 71, 72, 75, 77, 80, 81, 82, 85, 86, 88, 93, 97, 98, 105, 107, 108, 110, 111, 112, 113, 117, 119, 122, 131, 133, 135, 140, 143, 145, 149, 150, 155, 157, 158, 159, 165, 170, 171, 175, 180, 181, 182, 183, 184, 190, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 208, 209, 210, 221, 226, 227, 228, 229, 238, 262, 263, 269, 270, 273, 276, 277, 278, 466, 475, 476, 555, 694, 742, 749, 751, 752, 753, 754, 772, 789, 795, 800, 805, 807, 811, 812, 813, 814, 832, 833, 838, 854, 863, 875], "sequentialbackend": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 71, 72, 75, 77, 80, 81, 82, 85, 86, 88, 93, 97, 98, 105, 107, 108, 110, 111, 112, 113, 117, 119, 122, 131, 135, 140, 143, 145, 149, 150, 157, 158, 165, 171, 175, 180, 181, 182, 183, 184, 190, 194, 197, 198, 199, 201, 202, 203, 205, 206, 208, 209, 210, 221, 226, 227, 228, 229, 238], "concurr": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 71, 72, 75, 77, 80, 81, 82, 85, 86, 88, 93, 97, 98, 105, 107, 108, 110, 111, 112, 113, 117, 119, 122, 131, 135, 140, 143, 145, 149, 150, 157, 158, 165, 171, 175, 180, 181, 182, 183, 184, 190, 194, 197, 198, 199, 201, 202, 203, 205, 206, 208, 209, 210, 221, 226, 227, 228, 229, 238], "worker": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 71, 72, 75, 77, 80, 81, 82, 85, 86, 88, 93, 97, 98, 105, 107, 108, 110, 111, 112, 113, 117, 119, 122, 131, 135, 140, 143, 145, 149, 150, 157, 158, 165, 171, 175, 180, 181, 182, 183, 184, 190, 194, 197, 198, 199, 201, 202, 203, 205, 206, 208, 209, 210, 221, 226, 227, 228, 229, 238, 863], "done": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 67, 69, 71, 72, 75, 77, 78, 80, 81, 82, 85, 86, 88, 90, 91, 92, 93, 97, 98, 99, 101, 102, 105, 106, 107, 108, 110, 111, 112, 113, 117, 119, 122, 129, 131, 132, 133, 134, 135, 139, 140, 142, 143, 145, 149, 150, 154, 155, 157, 158, 159, 160, 161, 165, 166, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 238, 239, 255, 260, 261, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 295, 296, 318, 357, 420, 470, 472, 473, 475, 476, 522, 524, 525, 526, 555, 567, 568, 570, 572, 681, 695, 696, 698, 720, 722, 723, 725, 726, 740, 742, 745, 758, 766, 796, 830, 834, 839, 840, 850, 854, 856, 857, 863, 875], "out": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 67, 69, 71, 72, 73, 75, 77, 78, 80, 81, 82, 85, 86, 88, 90, 92, 93, 97, 98, 105, 107, 108, 110, 111, 112, 113, 117, 118, 119, 121, 122, 125, 129, 131, 133, 135, 136, 139, 140, 142, 143, 145, 149, 150, 155, 157, 158, 159, 165, 166, 169, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 216, 221, 224, 226, 227, 228, 229, 238, 239, 254, 259, 262, 263, 264, 265, 267, 271, 286, 300, 336, 353, 354, 355, 407, 409, 414, 418, 443, 445, 475, 476, 483, 498, 521, 529, 554, 555, 556, 569, 591, 597, 599, 687, 695, 697, 699, 722, 723, 730, 759, 766, 774, 778, 781, 785, 786, 794, 797, 802, 804, 832, 833, 834, 840, 851, 852, 854, 857, 860, 861, 875], "elaps": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 71, 72, 75, 77, 80, 81, 82, 85, 86, 88, 93, 97, 98, 105, 107, 108, 110, 111, 112, 113, 117, 119, 122, 131, 135, 140, 143, 145, 149, 150, 157, 158, 165, 171, 175, 180, 181, 182, 183, 184, 190, 194, 197, 198, 199, 201, 202, 203, 205, 206, 208, 209, 210, 221, 226, 227, 228, 229, 238], "remain": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 67, 71, 72, 74, 75, 77, 80, 81, 82, 85, 86, 88, 90, 92, 93, 97, 98, 105, 107, 108, 110, 111, 112, 113, 117, 119, 122, 129, 131, 135, 136, 140, 143, 145, 149, 150, 155, 157, 158, 165, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 208, 209, 210, 221, 226, 227, 228, 229, 238, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 295, 296, 352, 356, 357, 366, 367, 368, 407, 414, 430, 450, 451, 470, 472, 473, 475, 476, 477, 533, 555, 636, 683, 695, 697, 698, 722, 723, 725, 726, 782, 842, 850, 860, 863, 875], "299": [1, 5, 34, 139, 168, 183, 207, 237], "finish": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 71, 72, 75, 77, 80, 81, 82, 85, 86, 88, 93, 97, 98, 105, 107, 108, 110, 111, 112, 113, 117, 119, 122, 131, 133, 135, 140, 143, 145, 149, 150, 157, 158, 165, 171, 175, 180, 181, 182, 183, 184, 190, 194, 197, 198, 199, 201, 202, 203, 205, 206, 208, 209, 210, 215, 221, 226, 227, 228, 229, 238, 852, 875], "66": [1, 12, 13, 16, 19, 21, 35, 40, 41, 45, 79, 101, 104, 106, 110, 112, 143, 145, 157, 168, 175, 180, 183, 190, 194, 203, 207, 224, 225, 227, 228, 229, 242, 264, 265, 295, 296, 352, 356, 357, 366, 367, 368, 407, 414, 450, 451, 470, 472, 473, 533, 555, 782, 875], "id": [1, 5, 12, 21, 32, 33, 34, 42, 45, 46, 49, 68, 70, 71, 72, 78, 79, 80, 88, 91, 92, 93, 97, 105, 106, 108, 110, 111, 139, 140, 141, 145, 148, 151, 161, 165, 167, 168, 170, 171, 176, 179, 181, 182, 184, 190, 194, 198, 201, 202, 203, 205, 210, 219, 220, 221, 226, 238, 254, 257, 262, 263, 264, 267, 269, 270, 273, 275, 276, 277, 278, 281, 295, 296, 311, 352, 373, 423, 429, 431, 433, 435, 436, 448, 460, 475, 476, 515, 516, 520, 550, 556, 567, 568, 577, 600, 607, 609, 610, 616, 644, 697, 698, 742, 775, 795, 800, 805, 820, 834, 854, 857, 875], "Not": [1, 8, 9, 11, 12, 16, 18, 21, 28, 32, 33, 34, 45, 46, 49, 61, 68, 70, 71, 72, 73, 75, 78, 79, 80, 81, 86, 88, 91, 92, 93, 94, 95, 98, 101, 102, 105, 106, 107, 108, 110, 111, 112, 115, 119, 125, 126, 130, 134, 135, 136, 139, 140, 141, 142, 144, 145, 148, 150, 151, 165, 166, 167, 168, 170, 171, 176, 179, 181, 182, 183, 184, 190, 197, 198, 199, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 226, 227, 228, 229, 232, 234, 238, 264, 265, 270, 276, 277, 278, 415, 418, 442, 451, 556, 694, 695, 742, 778, 806, 833, 857, 863], "metadata": [1, 4, 8, 9, 11, 12, 16, 18, 21, 28, 32, 33, 34, 45, 46, 49, 61, 68, 70, 71, 72, 73, 78, 81, 86, 88, 91, 92, 93, 94, 95, 98, 99, 101, 102, 105, 106, 107, 108, 110, 111, 112, 115, 119, 126, 130, 134, 135, 136, 139, 140, 141, 144, 145, 146, 147, 148, 150, 151, 160, 164, 165, 171, 176, 179, 181, 182, 183, 184, 187, 188, 189, 190, 197, 198, 199, 201, 202, 203, 205, 209, 210, 213, 219, 220, 221, 225, 226, 227, 228, 229, 232, 234, 237, 238, 257, 262, 263, 264, 265, 266, 267, 351, 431, 436, 475, 476, 481, 606, 626, 695, 697, 698, 699, 766, 830, 851, 875], "33": [1, 8, 12, 13, 19, 21, 28, 33, 34, 35, 39, 40, 41, 45, 47, 56, 75, 79, 101, 102, 106, 107, 110, 112, 113, 140, 143, 150, 168, 169, 182, 194, 201, 203, 207, 224, 225, 226, 228, 229, 233, 234, 262, 263, 264, 265, 333, 448, 475, 476, 519, 796, 857, 875], "interv": [1, 10, 11, 28, 32, 33, 34, 38, 45, 46, 49, 61, 68, 69, 70, 71, 78, 81, 88, 91, 92, 93, 94, 95, 98, 101, 102, 105, 108, 110, 111, 115, 125, 126, 130, 139, 141, 143, 144, 148, 149, 150, 151, 165, 171, 175, 176, 177, 179, 181, 182, 183, 184, 190, 198, 199, 201, 202, 205, 208, 209, 220, 221, 226, 227, 228, 232, 234, 238, 254, 256, 257, 260, 261, 262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 285, 344, 357, 431, 528, 538, 539, 555, 571, 572, 577, 613, 614, 645, 647, 672, 674, 695, 697, 698, 699, 708, 766, 787, 802, 851, 861, 875], "mode": [1, 5, 8, 9, 11, 22, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 44, 45, 46, 47, 49, 51, 57, 58, 59, 60, 61, 68, 69, 70, 71, 72, 77, 78, 81, 84, 85, 91, 92, 93, 94, 95, 98, 101, 102, 105, 108, 110, 111, 112, 115, 117, 118, 125, 126, 129, 130, 135, 139, 140, 141, 143, 144, 148, 150, 151, 157, 158, 160, 165, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 190, 194, 197, 198, 199, 200, 201, 202, 203, 205, 207, 208, 209, 210, 215, 216, 220, 226, 227, 228, 229, 232, 234, 238, 239, 242, 254, 259, 260, 262, 263, 264, 265, 269, 270, 271, 272, 273, 276, 277, 278, 285, 295, 296, 339, 352, 356, 357, 358, 362, 363, 366, 367, 368, 406, 407, 413, 414, 441, 445, 446, 447, 466, 470, 475, 476, 514, 531, 532, 554, 555, 577, 583, 636, 658, 661, 690, 695, 696, 697, 698, 699, 720, 742, 768, 770, 772, 773, 774, 778, 781, 784, 785, 789, 794, 795, 796, 797, 800, 801, 802, 805, 806, 811, 834, 842, 863, 875], "mean": [1, 4, 8, 9, 10, 11, 14, 16, 19, 21, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 51, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 77, 78, 82, 84, 85, 91, 92, 93, 94, 95, 98, 99, 101, 102, 105, 108, 110, 111, 112, 115, 117, 118, 125, 126, 130, 136, 139, 140, 141, 142, 143, 144, 148, 149, 151, 155, 156, 157, 159, 165, 169, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 213, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 234, 237, 238, 239, 256, 257, 259, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 275, 276, 277, 278, 285, 288, 295, 296, 312, 316, 352, 357, 407, 413, 414, 416, 419, 428, 440, 441, 449, 466, 470, 472, 473, 475, 476, 477, 483, 490, 497, 508, 514, 522, 528, 531, 532, 533, 538, 539, 554, 555, 559, 562, 565, 566, 569, 571, 574, 576, 581, 583, 592, 600, 613, 614, 640, 647, 648, 649, 658, 659, 661, 674, 677, 682, 683, 684, 685, 686, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 711, 714, 721, 722, 723, 725, 726, 742, 766, 768, 772, 773, 774, 776, 781, 785, 794, 795, 796, 797, 800, 802, 804, 834, 839, 854, 856, 857, 860, 875], "activ": [1, 4, 5, 8, 11, 12, 16, 18, 19, 21, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 80, 81, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 110, 111, 112, 114, 115, 117, 118, 119, 120, 122, 128, 130, 132, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 157, 158, 161, 165, 166, 167, 171, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 188, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 213, 214, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 238, 242, 255, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 295, 296, 322, 346, 433, 436, 441, 448, 450, 454, 470, 472, 473, 474, 475, 476, 480, 491, 495, 508, 511, 521, 522, 523, 524, 525, 526, 533, 536, 552, 560, 570, 587, 613, 615, 617, 618, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 657, 660, 667, 670, 687, 690, 695, 697, 698, 699, 711, 721, 722, 725, 751, 761, 763, 770, 801, 806, 830, 832, 833, 834, 835, 837, 838, 841, 842, 850, 851, 854, 856, 857, 860, 863, 875], "projector": [1, 2, 4, 5, 8, 9, 16, 18, 21, 28, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 67, 68, 70, 72, 75, 81, 88, 90, 91, 92, 97, 99, 101, 107, 117, 119, 125, 130, 139, 140, 145, 148, 149, 150, 151, 161, 164, 165, 166, 167, 168, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 197, 198, 201, 202, 203, 209, 210, 211, 212, 213, 220, 221, 225, 226, 227, 228, 229, 232, 234, 254, 262, 263, 264, 265, 267, 271, 272, 295, 296, 352, 353, 354, 355, 356, 357, 366, 367, 368, 407, 414, 437, 438, 439, 440, 450, 451, 470, 472, 473, 475, 476, 495, 522, 533, 555, 567, 568, 583, 613, 621, 640, 696, 700, 701, 702, 703, 704, 705, 706, 772, 782, 789, 793, 794, 795, 814, 826, 830, 850, 852, 854, 857, 875], "n_channel": [1, 16, 18, 19, 28, 31, 35, 42, 51, 58, 59, 63, 65, 68, 69, 70, 73, 74, 75, 79, 81, 82, 88, 97, 101, 112, 117, 125, 130, 139, 140, 141, 142, 148, 149, 150, 158, 161, 165, 166, 167, 171, 175, 176, 179, 180, 181, 189, 194, 197, 198, 201, 202, 203, 204, 205, 206, 209, 213, 216, 219, 221, 226, 227, 228, 229, 232, 234, 239, 254, 257, 259, 261, 262, 263, 264, 265, 266, 267, 295, 296, 311, 312, 316, 327, 366, 407, 408, 409, 412, 413, 414, 415, 416, 418, 420, 421, 423, 445, 446, 475, 476, 554, 555, 556, 560, 563, 663, 680, 681, 695, 696, 697, 698, 699, 700, 701, 702, 722, 723, 724, 759, 762, 766, 772, 773, 774, 781, 795, 797, 802, 804, 812, 830, 875], "No": [1, 2, 4, 5, 8, 9, 12, 16, 18, 21, 34, 41, 46, 48, 50, 54, 55, 73, 78, 81, 86, 88, 99, 106, 107, 110, 111, 112, 114, 115, 119, 125, 126, 134, 135, 136, 139, 140, 141, 142, 145, 148, 150, 155, 165, 170, 171, 177, 183, 184, 189, 190, 194, 197, 200, 202, 203, 205, 208, 209, 210, 219, 221, 224, 225, 229, 238, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 383, 408, 423, 470, 472, 473, 475, 476, 522, 524, 525, 526, 659, 796, 833, 834, 851, 856, 860], "gradiomet": [1, 22, 32, 34, 35, 46, 59, 70, 72, 75, 78, 80, 85, 91, 98, 101, 106, 107, 108, 109, 111, 115, 117, 118, 141, 144, 145, 149, 161, 165, 166, 167, 168, 179, 182, 183, 187, 190, 197, 198, 199, 201, 203, 204, 205, 207, 208, 213, 214, 215, 216, 219, 221, 224, 226, 227, 228, 238, 254, 257, 259, 262, 263, 264, 265, 269, 270, 271, 273, 276, 277, 278, 295, 296, 352, 353, 354, 355, 356, 357, 366, 367, 368, 407, 414, 428, 450, 451, 470, 472, 473, 475, 476, 511, 533, 552, 553, 554, 555, 565, 566, 567, 568, 569, 570, 571, 572, 574, 583, 594, 681, 695, 697, 698, 699, 759, 765, 766, 772, 773, 774, 776, 778, 780, 781, 782, 785, 794, 795, 797, 802, 803, 804, 830, 850, 854, 857, 860, 875], "forc": [1, 4, 145, 160, 165, 177, 190, 199, 254, 262, 263, 264, 265, 306, 317, 362, 372, 374, 375, 376, 377, 379, 380, 382, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 475, 476, 499, 522, 609, 695, 697, 698, 699, 742, 832, 834, 851, 875], "n_grad": [1, 190, 205, 254, 353, 354, 355, 567, 568], "n_eeg": [1, 145, 190, 205, 254, 353, 354, 355, 567, 568], "axial": [1, 33, 47, 80, 82, 90, 107, 109, 129, 134, 141, 145, 159, 171, 179, 182, 190, 197, 204, 205, 224, 260, 277, 278, 742, 760, 770, 857], "100": [1, 2, 5, 10, 11, 13, 16, 19, 22, 29, 30, 31, 33, 34, 35, 38, 39, 40, 41, 44, 45, 48, 50, 51, 53, 54, 55, 57, 58, 59, 60, 73, 74, 77, 79, 81, 84, 85, 88, 90, 93, 94, 99, 101, 102, 106, 107, 109, 110, 112, 113, 114, 117, 118, 121, 123, 125, 133, 135, 136, 139, 140, 142, 143, 144, 145, 148, 150, 155, 157, 168, 169, 171, 175, 176, 177, 178, 179, 180, 182, 183, 189, 190, 193, 194, 199, 200, 201, 203, 205, 207, 210, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 242, 254, 262, 263, 264, 265, 272, 358, 428, 447, 472, 473, 475, 476, 498, 566, 574, 583, 661, 681, 697, 699, 724, 727, 732, 742, 772, 790, 795, 815, 851, 856, 860, 875], "pca": [1, 5, 11, 13, 15, 16, 17, 18, 20, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 67, 68, 70, 71, 72, 73, 75, 77, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 105, 106, 107, 108, 109, 114, 115, 116, 117, 118, 119, 121, 122, 125, 127, 129, 130, 131, 139, 140, 141, 145, 148, 149, 150, 151, 155, 156, 157, 159, 161, 165, 166, 167, 168, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 213, 214, 215, 216, 220, 221, 226, 227, 228, 229, 232, 234, 262, 264, 265, 267, 270, 276, 278, 295, 296, 352, 366, 370, 421, 470, 473, 475, 528, 529, 538, 539, 552, 555, 610, 786, 850, 861, 875], "01": [1, 6, 8, 11, 12, 13, 19, 21, 24, 25, 32, 33, 34, 35, 46, 56, 59, 66, 70, 72, 75, 77, 81, 82, 88, 89, 90, 91, 101, 106, 107, 109, 110, 111, 118, 119, 121, 122, 125, 128, 129, 136, 138, 140, 141, 145, 149, 150, 153, 157, 158, 163, 165, 166, 167, 168, 169, 171, 173, 179, 180, 182, 184, 186, 190, 192, 193, 194, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 213, 214, 215, 216, 221, 224, 225, 226, 228, 229, 231, 232, 233, 234, 238, 239, 241, 242, 253, 254, 256, 262, 263, 339, 341, 345, 377, 399, 400, 415, 475, 476, 486, 569, 574, 577, 581, 588, 592, 690, 851], "02": [1, 2, 5, 6, 11, 13, 19, 20, 33, 34, 35, 56, 63, 66, 80, 82, 83, 90, 101, 106, 107, 109, 112, 118, 121, 124, 128, 129, 135, 141, 145, 147, 149, 156, 159, 163, 169, 171, 173, 179, 182, 193, 194, 200, 204, 205, 206, 207, 209, 210, 215, 224, 225, 226, 228, 229, 231, 234, 239, 242, 253, 254, 262, 263, 319, 470, 473, 475, 476, 486, 711, 721, 722, 724, 725, 727], "creat": [1, 2, 4, 5, 8, 9, 11, 15, 16, 18, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 63, 65, 67, 68, 69, 70, 72, 74, 78, 81, 84, 86, 90, 91, 93, 101, 102, 105, 106, 107, 108, 110, 111, 112, 115, 118, 119, 121, 123, 125, 126, 130, 132, 133, 134, 135, 140, 141, 144, 145, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 194, 197, 198, 199, 200, 201, 203, 204, 213, 216, 221, 222, 223, 225, 227, 229, 232, 234, 237, 238, 256, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 281, 286, 295, 296, 300, 305, 306, 307, 310, 324, 352, 353, 354, 358, 363, 369, 370, 407, 414, 420, 424, 429, 431, 442, 443, 448, 475, 476, 487, 492, 498, 511, 512, 513, 518, 519, 521, 544, 554, 555, 557, 558, 560, 564, 567, 568, 571, 572, 575, 580, 607, 609, 633, 634, 635, 637, 640, 644, 645, 649, 672, 675, 681, 690, 695, 696, 697, 698, 699, 708, 720, 722, 723, 725, 726, 730, 742, 745, 747, 750, 755, 758, 759, 765, 766, 768, 770, 773, 774, 777, 778, 779, 780, 781, 785, 787, 790, 793, 794, 795, 796, 797, 798, 800, 802, 804, 805, 813, 814, 825, 830, 832, 838, 842, 851, 855, 860, 863, 865, 875], "an": [1, 4, 5, 7, 11, 12, 15, 18, 19, 21, 26, 27, 28, 29, 30, 31, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 54, 55, 56, 58, 59, 60, 61, 63, 67, 68, 70, 72, 73, 77, 80, 81, 82, 86, 88, 90, 91, 92, 93, 99, 102, 105, 106, 107, 108, 109, 110, 112, 113, 117, 118, 119, 120, 125, 126, 127, 128, 130, 133, 134, 135, 136, 139, 140, 143, 145, 148, 149, 150, 151, 152, 154, 155, 157, 159, 161, 162, 163, 164, 165, 166, 169, 170, 174, 175, 176, 177, 178, 180, 182, 185, 186, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 204, 205, 207, 208, 209, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 228, 229, 232, 233, 234, 237, 238, 240, 241, 242, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 286, 287, 289, 291, 292, 293, 294, 295, 296, 298, 300, 301, 302, 310, 312, 314, 315, 316, 319, 322, 323, 326, 328, 337, 345, 346, 347, 352, 356, 358, 359, 361, 363, 366, 367, 369, 370, 382, 385, 386, 390, 406, 407, 413, 414, 415, 419, 422, 424, 425, 426, 429, 431, 432, 434, 436, 441, 442, 443, 446, 447, 448, 449, 450, 454, 455, 457, 462, 466, 470, 472, 473, 474, 475, 476, 477, 480, 482, 484, 485, 490, 491, 492, 493, 495, 499, 501, 502, 507, 508, 510, 511, 514, 517, 518, 519, 521, 522, 524, 528, 529, 531, 532, 533, 535, 536, 537, 540, 542, 544, 546, 548, 551, 552, 554, 555, 556, 557, 558, 559, 563, 565, 567, 568, 569, 571, 572, 574, 576, 581, 582, 583, 584, 590, 593, 596, 601, 602, 603, 604, 605, 608, 610, 612, 613, 615, 623, 625, 629, 630, 632, 634, 635, 637, 640, 643, 644, 645, 648, 651, 655, 660, 661, 667, 670, 672, 675, 676, 681, 682, 683, 684, 685, 686, 687, 689, 690, 691, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 708, 714, 715, 725, 726, 729, 730, 732, 734, 740, 742, 743, 751, 755, 757, 758, 759, 763, 764, 766, 768, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 785, 786, 787, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 803, 804, 805, 808, 810, 812, 815, 821, 822, 823, 830, 832, 833, 834, 838, 839, 840, 841, 846, 851, 852, 853, 854, 856, 857, 858, 860, 861, 863, 875], "oper": [1, 5, 11, 15, 18, 22, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 67, 68, 70, 72, 82, 86, 88, 90, 91, 93, 102, 105, 106, 107, 108, 119, 122, 130, 133, 139, 140, 141, 144, 145, 148, 150, 151, 154, 155, 161, 162, 163, 164, 165, 166, 168, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 187, 190, 194, 198, 199, 200, 201, 203, 204, 205, 208, 213, 220, 221, 226, 227, 229, 232, 234, 242, 255, 256, 259, 262, 263, 264, 265, 266, 267, 268, 272, 273, 275, 276, 280, 282, 283, 295, 296, 298, 300, 310, 314, 315, 326, 332, 345, 351, 370, 371, 378, 385, 408, 413, 416, 423, 428, 429, 432, 445, 446, 447, 448, 452, 453, 454, 470, 471, 472, 473, 475, 476, 477, 483, 490, 508, 517, 518, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 548, 553, 555, 558, 560, 577, 581, 597, 600, 602, 610, 615, 625, 636, 637, 647, 648, 649, 656, 658, 659, 660, 661, 674, 682, 683, 684, 685, 686, 689, 692, 695, 696, 722, 723, 724, 725, 726, 727, 729, 758, 799, 807, 810, 811, 822, 830, 832, 834, 840, 842, 851, 854, 860, 861, 873, 875], "subspac": [1, 11, 15, 18, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 67, 68, 70, 72, 86, 88, 90, 91, 92, 93, 102, 105, 106, 107, 108, 119, 130, 139, 140, 141, 144, 145, 148, 150, 151, 161, 165, 171, 175, 176, 177, 178, 179, 180, 181, 182, 190, 198, 199, 201, 203, 204, 205, 208, 220, 229, 232, 234, 254, 570, 583, 830], "dimens": [1, 11, 15, 18, 19, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 67, 68, 70, 72, 86, 88, 90, 91, 92, 93, 102, 105, 106, 107, 108, 119, 125, 130, 139, 140, 141, 144, 145, 148, 150, 151, 159, 161, 165, 171, 175, 176, 177, 178, 179, 180, 181, 182, 190, 193, 194, 198, 199, 201, 203, 204, 205, 207, 220, 221, 224, 226, 227, 228, 229, 232, 233, 234, 238, 239, 242, 259, 262, 263, 264, 265, 269, 270, 271, 272, 273, 275, 276, 277, 278, 285, 311, 358, 407, 410, 413, 414, 417, 418, 420, 422, 446, 447, 470, 472, 473, 475, 476, 528, 529, 531, 532, 538, 539, 554, 555, 569, 675, 676, 680, 682, 683, 685, 686, 695, 697, 698, 699, 713, 714, 724, 732, 742, 751, 759, 774, 781, 785, 794, 795, 797, 802, 804, 830, 850, 857, 860, 875], "fran\u00e7oi": [1, 70, 77, 107, 182, 183, 190, 198, 242, 555, 564, 857], "tadel": [1, 107, 182, 183, 190, 242], "sylvain": [1, 107, 182, 183, 190, 242], "baillet": [1, 107, 182, 183, 190, 242], "john": [1, 18, 19, 51, 67, 81, 107, 124, 177, 179, 182, 183, 190, 242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 384, 385, 411, 413, 425, 470, 475, 476, 522, 533, 555, 570, 587, 652, 657, 695, 698, 851, 857, 875], "c": [1, 4, 10, 11, 12, 19, 22, 44, 51, 69, 73, 94, 107, 110, 113, 119, 124, 133, 136, 160, 170, 175, 179, 182, 183, 187, 190, 193, 194, 204, 210, 226, 227, 228, 229, 239, 242, 254, 255, 268, 273, 274, 275, 298, 333, 352, 358, 384, 399, 400, 413, 414, 448, 451, 470, 475, 476, 512, 518, 530, 555, 563, 592, 610, 655, 660, 724, 727, 742, 832, 833, 834, 838, 839, 841, 846, 849, 850, 851, 857, 858, 860, 863, 864, 875], "mosher": [1, 51, 107, 179, 182, 183, 190, 242, 298, 857], "dimitrio": [1, 10, 107, 182, 183, 190, 242, 851], "pantazi": [1, 10, 107, 182, 183, 190, 242, 851], "richard": [1, 51, 107, 182, 183, 190, 207, 238, 242, 385, 555, 563, 677, 851, 857, 862, 875], "leahi": [1, 51, 107, 182, 183, 190, 242, 298, 857], "user": [1, 45, 74, 92, 107, 133, 141, 155, 164, 166, 170, 171, 182, 183, 188, 189, 190, 199, 200, 213, 242, 255, 257, 262, 263, 264, 265, 266, 267, 269, 270, 273, 275, 276, 277, 278, 374, 375, 376, 377, 379, 380, 382, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 428, 436, 467, 474, 475, 476, 492, 555, 574, 590, 641, 693, 694, 695, 698, 759, 772, 779, 789, 795, 804, 832, 834, 836, 838, 839, 841, 845, 850, 851, 853, 854, 856, 858, 859, 875], "friendli": [1, 107, 182, 183, 190, 242], "applic": [1, 15, 69, 72, 86, 107, 148, 161, 169, 177, 182, 183, 190, 194, 200, 203, 204, 205, 208, 239, 242, 257, 262, 263, 264, 265, 409, 414, 418, 431, 443, 445, 446, 459, 475, 476, 499, 514, 515, 556, 583, 606, 609, 697, 699, 742, 774, 795, 815, 834, 837, 841, 846, 854, 857, 875], "analysi": [1, 3, 6, 8, 13, 15, 17, 20, 42, 43, 44, 69, 73, 81, 86, 94, 95, 99, 107, 125, 133, 139, 141, 143, 144, 152, 153, 154, 159, 160, 166, 167, 170, 171, 172, 173, 177, 182, 183, 187, 189, 190, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 213, 214, 216, 221, 224, 225, 226, 228, 229, 237, 241, 242, 262, 263, 264, 265, 267, 269, 270, 272, 273, 274, 276, 277, 278, 295, 296, 310, 312, 326, 351, 352, 358, 361, 370, 400, 407, 415, 421, 431, 436, 448, 464, 470, 475, 476, 485, 521, 522, 536, 546, 552, 555, 556, 563, 569, 580, 581, 610, 640, 644, 648, 655, 676, 677, 680, 682, 695, 697, 698, 699, 707, 709, 711, 713, 721, 722, 723, 724, 725, 726, 727, 742, 766, 775, 804, 814, 830, 833, 835, 837, 841, 846, 849, 850, 851, 856, 857, 858, 863, 865, 872, 873, 875], "intellig": [1, 107, 182, 183, 190, 193, 242, 413, 447], "neurosci": [1, 4, 10, 16, 19, 43, 69, 73, 107, 111, 150, 182, 183, 190, 193, 194, 200, 229, 242, 274, 358, 408, 413, 423, 555, 560, 563, 655, 682, 683, 685, 686, 711, 721, 722, 724, 725, 727, 849, 851, 856], "2011": [1, 15, 21, 32, 34, 59, 86, 107, 150, 168, 182, 183, 188, 190, 200, 221, 224, 242, 295, 415, 473, 522, 556, 688, 689, 857], "13": [1, 9, 10, 11, 12, 13, 16, 19, 20, 21, 26, 28, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 58, 59, 73, 75, 78, 79, 81, 82, 91, 92, 94, 95, 98, 101, 102, 105, 106, 107, 108, 110, 111, 112, 115, 118, 119, 122, 130, 132, 135, 141, 143, 144, 145, 148, 149, 151, 157, 161, 163, 165, 168, 170, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 193, 194, 199, 200, 202, 205, 207, 209, 213, 219, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 238, 239, 242, 257, 260, 261, 262, 263, 264, 265, 268, 269, 270, 273, 275, 276, 277, 278, 280, 333, 357, 377, 399, 418, 428, 442, 443, 445, 446, 448, 475, 476, 555, 571, 572, 583, 610, 626, 629, 658, 661, 695, 698, 725, 726, 776, 787, 798, 828, 830, 849, 850, 857], "doi": [1, 4, 8, 10, 12, 13, 15, 16, 18, 19, 21, 33, 35, 40, 42, 43, 44, 46, 51, 54, 55, 58, 59, 65, 69, 70, 73, 74, 77, 81, 82, 86, 92, 99, 107, 110, 111, 115, 117, 119, 124, 127, 133, 136, 140, 143, 150, 154, 156, 161, 175, 177, 179, 182, 183, 190, 193, 194, 198, 200, 202, 203, 204, 205, 206, 208, 210, 221, 224, 225, 229, 237, 242, 262, 263, 264, 265, 268, 273, 274, 288, 295, 296, 298, 352, 358, 377, 384, 385, 389, 390, 399, 400, 407, 408, 411, 413, 414, 415, 423, 425, 431, 470, 472, 473, 475, 476, 522, 523, 533, 537, 554, 555, 556, 560, 563, 564, 566, 569, 570, 583, 587, 590, 591, 598, 640, 648, 652, 655, 657, 660, 679, 681, 682, 683, 684, 685, 686, 688, 689, 697, 699, 707, 709, 711, 713, 714, 721, 722, 724, 725, 727, 759, 849, 850, 851, 854, 857], "10": [1, 4, 5, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 28, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 54, 55, 58, 59, 60, 63, 65, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 86, 88, 89, 91, 92, 93, 99, 101, 102, 106, 107, 108, 110, 111, 112, 113, 115, 117, 118, 119, 124, 125, 126, 127, 128, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 150, 154, 155, 156, 157, 158, 159, 161, 165, 166, 167, 168, 169, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 213, 214, 215, 216, 219, 220, 221, 223, 224, 225, 226, 228, 229, 232, 233, 234, 237, 238, 239, 242, 256, 260, 261, 262, 263, 264, 265, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 280, 288, 295, 296, 298, 307, 310, 322, 328, 333, 338, 342, 345, 348, 349, 350, 352, 358, 363, 377, 384, 385, 389, 390, 399, 400, 407, 408, 409, 411, 413, 414, 415, 418, 423, 425, 428, 431, 442, 443, 445, 446, 451, 470, 472, 473, 475, 476, 499, 512, 513, 522, 523, 533, 537, 542, 554, 555, 556, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 574, 575, 576, 579, 580, 583, 587, 590, 591, 598, 609, 631, 640, 648, 652, 655, 657, 659, 660, 661, 676, 678, 679, 681, 682, 683, 684, 685, 686, 688, 689, 695, 697, 698, 699, 707, 709, 711, 713, 714, 721, 722, 723, 724, 725, 726, 727, 732, 742, 747, 757, 759, 772, 774, 781, 783, 784, 789, 790, 795, 800, 805, 833, 834, 837, 840, 849, 850, 851, 854, 857, 860, 863], "1155": [1, 107, 182, 183, 190, 242], "879716": [1, 107, 182, 183, 190, 242], "total": [1, 2, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 189, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 356, 371, 424, 475, 476, 557, 600, 690, 697, 699, 774, 800, 805, 857, 860, 875], "run": [1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 254, 262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 280, 301, 319, 345, 352, 353, 355, 357, 372, 377, 409, 410, 413, 417, 418, 420, 423, 424, 445, 446, 447, 450, 463, 465, 475, 476, 508, 514, 517, 518, 528, 529, 538, 539, 555, 560, 567, 568, 569, 574, 575, 578, 581, 584, 600, 635, 643, 646, 647, 648, 649, 658, 659, 660, 661, 682, 683, 684, 685, 686, 694, 697, 699, 700, 701, 702, 703, 704, 705, 713, 714, 722, 723, 724, 725, 726, 727, 742, 765, 772, 774, 777, 781, 784, 785, 789, 795, 796, 832, 833, 837, 838, 839, 840, 842, 851, 856, 857, 858, 861, 875], "script": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 272, 475, 476, 795, 834, 835, 837, 839, 840, 841, 851, 854, 855, 857, 860, 863, 865, 875], "minut": [1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 262, 263, 274, 280, 430, 475, 476, 555, 647, 648, 789, 795, 838], "9": [1, 2, 4, 5, 6, 7, 8, 9, 11, 13, 16, 19, 20, 21, 22, 24, 26, 28, 29, 32, 33, 34, 35, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 59, 61, 64, 66, 67, 68, 69, 70, 72, 73, 75, 77, 78, 79, 81, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 122, 125, 126, 128, 130, 133, 134, 136, 138, 139, 140, 141, 143, 144, 145, 147, 149, 150, 153, 155, 157, 158, 161, 163, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 241, 242, 260, 262, 263, 264, 265, 269, 274, 275, 277, 278, 295, 296, 298, 310, 319, 333, 351, 352, 358, 359, 377, 400, 450, 460, 475, 476, 495, 511, 519, 530, 538, 554, 555, 563, 581, 598, 609, 637, 640, 677, 694, 695, 697, 698, 699, 707, 717, 726, 727, 728, 742, 743, 745, 759, 769, 770, 775, 794, 799, 832, 833, 839, 840, 850, 851, 854, 857, 860], "238": [1, 6, 46, 83, 84, 168, 207, 225, 228, 229], "second": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 242, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 276, 277, 278, 282, 283, 285, 294, 295, 296, 320, 321, 339, 341, 357, 407, 413, 414, 419, 431, 433, 436, 441, 442, 444, 448, 449, 473, 474, 475, 476, 495, 498, 510, 515, 516, 525, 528, 554, 555, 557, 558, 559, 560, 563, 565, 567, 568, 571, 574, 575, 576, 577, 578, 583, 591, 597, 601, 610, 613, 645, 661, 681, 682, 683, 685, 686, 687, 689, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 723, 726, 742, 750, 766, 773, 774, 775, 778, 781, 785, 786, 787, 789, 794, 795, 796, 797, 800, 802, 805, 820, 830, 834, 840, 850, 851, 854, 857, 860, 875], "estim": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 187, 188, 189, 190, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 219, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 242, 243, 254, 257, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 282, 283, 287, 288, 289, 290, 292, 293, 295, 296, 310, 318, 326, 339, 341, 345, 352, 356, 357, 358, 363, 364, 365, 366, 367, 368, 370, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 428, 441, 442, 444, 446, 447, 448, 450, 451, 454, 470, 471, 472, 473, 475, 476, 480, 508, 510, 511, 517, 519, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 542, 555, 556, 560, 564, 565, 571, 575, 578, 581, 583, 595, 597, 598, 613, 615, 618, 623, 624, 625, 635, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 660, 662, 676, 680, 681, 687, 688, 690, 691, 697, 699, 700, 701, 702, 703, 704, 705, 714, 722, 723, 725, 726, 742, 758, 759, 765, 766, 767, 774, 782, 789, 796, 799, 800, 801, 804, 805, 806, 830, 835, 841, 843, 851, 854, 860, 863, 865, 873, 875], "usag": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 254, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 416, 420, 475, 476, 583, 682, 683, 685, 686, 695, 697, 698, 699, 701, 704, 720, 722, 723, 724, 725, 726, 727, 830, 853, 854, 857, 860, 875], "491": [1, 6, 229], "mb": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 262, 263, 272, 475, 476, 772, 795, 840], "python": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 155, 156, 157, 158, 161, 164, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 193, 194, 195, 197, 199, 201, 202, 205, 206, 207, 209, 210, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 242, 253, 260, 261, 262, 263, 264, 265, 267, 269, 270, 272, 273, 275, 276, 277, 278, 295, 296, 312, 315, 321, 326, 327, 330, 336, 351, 363, 370, 373, 374, 375, 376, 377, 379, 380, 382, 383, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 426, 432, 436, 440, 448, 455, 456, 457, 459, 466, 475, 476, 490, 499, 513, 521, 522, 536, 549, 555, 571, 574, 603, 632, 634, 639, 641, 642, 694, 695, 697, 698, 722, 723, 725, 726, 737, 738, 766, 772, 775, 789, 795, 803, 823, 825, 830, 833, 841, 845, 850, 851, 855, 856, 857, 858, 861, 862, 873, 875], "brainstorm_data": [1, 6], "py": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 832, 834, 854, 875], "jupyt": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 807, 854, 856, 858, 875], "notebook": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 807, 813, 838, 854, 858, 863, 875], "ipynb": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239], "galleri": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 834], "gener": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 92, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 193, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 214, 215, 216, 219, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 253, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 289, 290, 293, 306, 319, 324, 325, 326, 345, 351, 352, 377, 407, 409, 410, 413, 414, 417, 418, 424, 431, 436, 441, 443, 445, 446, 448, 465, 471, 472, 475, 476, 480, 481, 492, 495, 508, 511, 518, 521, 522, 524, 526, 529, 533, 536, 552, 553, 554, 555, 556, 558, 567, 571, 572, 575, 577, 578, 581, 583, 600, 604, 610, 613, 615, 617, 618, 620, 621, 643, 644, 645, 647, 648, 649, 658, 659, 660, 661, 662, 675, 679, 680, 682, 683, 684, 685, 686, 691, 695, 697, 698, 699, 707, 708, 728, 739, 742, 743, 745, 755, 758, 762, 766, 773, 781, 785, 786, 796, 797, 800, 801, 810, 825, 830, 840, 841, 842, 846, 849, 850, 851, 852, 853, 855, 856, 858, 859, 860, 862, 863, 875], "sphinx": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 738, 834], "thi": [2, 4, 5, 7, 9, 10, 13, 14, 16, 18, 19, 21, 22, 26, 31, 32, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 50, 54, 55, 57, 58, 59, 60, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 85, 86, 88, 91, 92, 93, 94, 95, 97, 99, 101, 102, 107, 110, 111, 112, 113, 114, 115, 116, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 286, 287, 289, 290, 293, 295, 296, 300, 301, 303, 304, 305, 306, 307, 310, 311, 314, 315, 316, 317, 318, 319, 322, 323, 324, 328, 329, 330, 335, 339, 340, 343, 345, 349, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 365, 366, 367, 368, 369, 372, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 386, 387, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 456, 457, 459, 460, 463, 465, 466, 468, 469, 470, 472, 473, 474, 475, 476, 477, 481, 482, 483, 484, 486, 490, 491, 492, 494, 497, 498, 501, 503, 505, 506, 508, 510, 515, 516, 518, 521, 522, 523, 524, 525, 526, 528, 529, 531, 532, 533, 539, 541, 542, 546, 550, 552, 554, 555, 556, 557, 558, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 580, 581, 582, 583, 584, 587, 590, 591, 597, 600, 601, 603, 606, 607, 608, 610, 612, 613, 617, 618, 623, 626, 632, 634, 637, 638, 640, 642, 643, 644, 647, 648, 649, 656, 658, 659, 660, 661, 662, 665, 666, 669, 672, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 694, 695, 696, 697, 698, 699, 702, 711, 713, 721, 723, 725, 726, 730, 732, 736, 737, 739, 740, 742, 744, 745, 747, 751, 752, 755, 757, 758, 759, 760, 763, 764, 768, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 785, 786, 787, 788, 789, 793, 794, 795, 796, 797, 798, 799, 800, 802, 803, 804, 805, 807, 808, 811, 812, 815, 823, 825, 830, 832, 833, 834, 837, 838, 839, 840, 841, 842, 850, 851, 852, 854, 856, 857, 858, 860, 861, 863, 865, 875], "look": [2, 4, 7, 8, 19, 21, 27, 32, 33, 42, 55, 58, 60, 67, 69, 70, 81, 82, 91, 106, 109, 110, 111, 118, 119, 120, 125, 131, 133, 134, 140, 143, 144, 149, 150, 155, 157, 159, 160, 161, 165, 167, 171, 174, 176, 177, 178, 179, 181, 182, 187, 188, 190, 197, 200, 201, 202, 204, 205, 206, 208, 209, 210, 213, 221, 224, 229, 238, 239, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 298, 301, 307, 374, 375, 376, 377, 379, 380, 382, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 448, 455, 457, 475, 476, 504, 555, 557, 601, 695, 742, 758, 761, 788, 798, 800, 805, 806, 815, 832, 833, 834, 855, 856, 857, 858, 860, 875], "high": [2, 4, 7, 10, 12, 22, 38, 40, 59, 72, 73, 80, 81, 82, 86, 92, 97, 117, 133, 140, 141, 142, 150, 155, 156, 159, 166, 187, 189, 190, 194, 197, 201, 203, 204, 205, 208, 209, 210, 226, 227, 228, 229, 233, 239, 242, 262, 263, 264, 265, 275, 280, 352, 353, 354, 355, 357, 389, 409, 418, 442, 443, 445, 466, 475, 476, 499, 522, 555, 560, 563, 567, 568, 571, 572, 575, 576, 578, 579, 583, 587, 648, 681, 742, 830, 841, 859, 875], "frequenc": [2, 5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 33, 34, 36, 42, 56, 67, 70, 71, 72, 75, 79, 80, 81, 82, 86, 88, 91, 92, 97, 101, 102, 104, 105, 106, 107, 108, 110, 113, 119, 121, 124, 125, 131, 136, 139, 140, 141, 142, 143, 145, 148, 150, 155, 166, 167, 168, 171, 179, 182, 190, 193, 194, 198, 199, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 219, 221, 224, 228, 232, 234, 241, 242, 254, 259, 260, 262, 263, 264, 265, 266, 267, 269, 270, 272, 273, 276, 277, 278, 281, 285, 286, 287, 288, 289, 290, 295, 310, 326, 339, 340, 347, 352, 361, 370, 389, 407, 409, 412, 413, 415, 418, 419, 420, 428, 431, 433, 435, 436, 442, 443, 445, 446, 447, 448, 471, 473, 475, 476, 485, 490, 521, 522, 526, 528, 529, 533, 538, 539, 552, 555, 560, 563, 567, 568, 571, 572, 574, 575, 576, 578, 579, 583, 587, 601, 604, 613, 615, 662, 674, 681, 682, 683, 685, 686, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 737, 742, 746, 765, 768, 769, 770, 774, 775, 783, 787, 790, 796, 801, 802, 804, 830, 854, 860, 861, 865, 875], "respons": [2, 4, 8, 10, 16, 17, 19, 20, 27, 35, 46, 49, 51, 59, 65, 76, 83, 86, 92, 94, 95, 105, 111, 115, 118, 119, 120, 126, 128, 134, 141, 142, 144, 148, 149, 161, 167, 179, 182, 184, 190, 194, 197, 200, 205, 228, 229, 232, 234, 239, 242, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 352, 370, 389, 413, 419, 421, 431, 433, 436, 443, 446, 475, 476, 552, 556, 598, 610, 695, 697, 698, 699, 708, 773, 780, 782, 783, 790, 830, 850, 851, 856, 857, 860, 875], "jussi": [2, 61, 242, 389, 583, 875], "nurminen": [2, 61, 242, 389, 583, 875], "jnu": [2, 61], "iki": [2, 61], "fi": [2, 10, 61, 84, 190, 474], "o": [2, 19, 44, 61, 70, 74, 81, 113, 123, 139, 158, 160, 168, 170, 171, 184, 193, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 210, 213, 214, 215, 216, 242, 254, 259, 262, 263, 264, 265, 267, 352, 369, 377, 385, 407, 414, 455, 475, 476, 554, 555, 564, 639, 695, 697, 699, 759, 774, 781, 797, 802, 804, 834, 846, 851, 854, 865, 875], "hf_sef": [2, 851, 865, 875], "fname_evok": [2, 11, 30, 38, 39, 41, 44, 57, 58, 60, 122, 125, 178, 180, 220], "path": [2, 19, 33, 43, 44, 45, 61, 74, 99, 113, 117, 118, 121, 123, 133, 134, 135, 139, 143, 154, 155, 156, 157, 158, 165, 169, 170, 171, 174, 180, 181, 184, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 213, 214, 215, 216, 220, 225, 254, 260, 262, 263, 264, 265, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 301, 302, 305, 306, 307, 310, 319, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 358, 363, 364, 365, 374, 375, 376, 377, 379, 380, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 426, 428, 441, 455, 456, 457, 459, 463, 465, 466, 467, 468, 469, 475, 476, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 510, 512, 514, 518, 541, 542, 555, 565, 566, 574, 580, 583, 595, 596, 600, 606, 607, 608, 609, 611, 612, 613, 614, 617, 618, 620, 623, 624, 627, 628, 629, 643, 644, 658, 661, 663, 664, 672, 690, 691, 693, 694, 697, 699, 716, 734, 741, 742, 758, 760, 770, 772, 782, 789, 795, 800, 805, 806, 815, 824, 825, 829, 830, 832, 834, 837, 839, 840, 845, 875], "join": [2, 10, 19, 44, 61, 74, 133, 134, 139, 158, 169, 170, 183, 184, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 213, 214, 215, 216, 262, 263, 264, 265, 475, 476], "subject_b": 2, "hf_sef_15min": 2, "av": [2, 11, 30, 31, 35, 38, 39, 40, 41, 44, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 64, 67, 77, 84, 85, 88, 90, 93, 114, 117, 118, 122, 125, 148, 149, 171, 175, 177, 178, 180, 220, 254, 262, 263, 264, 265, 272, 475, 476, 545, 613, 622, 698, 821, 851], "fif": [2, 5, 7, 10, 11, 13, 14, 15, 16, 18, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 62, 64, 66, 67, 68, 70, 71, 72, 73, 75, 77, 78, 79, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 111, 113, 114, 115, 116, 117, 118, 119, 121, 122, 125, 127, 129, 130, 131, 133, 134, 135, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 171, 175, 176, 177, 178, 179, 180, 181, 182, 188, 189, 190, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 213, 214, 215, 216, 220, 221, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 249, 256, 259, 260, 261, 262, 263, 264, 265, 267, 272, 275, 302, 310, 332, 363, 364, 365, 428, 437, 438, 439, 440, 457, 467, 475, 476, 495, 499, 514, 518, 536, 540, 555, 565, 574, 580, 583, 595, 601, 603, 604, 605, 606, 610, 613, 615, 621, 625, 628, 632, 635, 660, 663, 690, 730, 742, 758, 816, 819, 820, 821, 822, 826, 827, 829, 834, 841, 846, 850, 851, 857, 860, 863, 875], "interest": [2, 4, 9, 16, 21, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 63, 77, 80, 84, 85, 88, 93, 94, 95, 98, 99, 102, 105, 110, 111, 112, 114, 117, 118, 125, 126, 134, 136, 139, 141, 142, 143, 148, 149, 154, 161, 169, 171, 175, 177, 178, 179, 180, 189, 193, 194, 197, 200, 201, 204, 209, 210, 214, 220, 221, 224, 225, 226, 227, 228, 238, 239, 257, 262, 263, 264, 265, 267, 287, 289, 322, 412, 415, 431, 433, 451, 459, 475, 476, 508, 528, 529, 539, 554, 555, 598, 607, 609, 644, 695, 697, 699, 700, 701, 702, 703, 704, 705, 713, 714, 722, 723, 725, 726, 742, 796, 802, 830, 834, 850, 854, 857, 875], "t": [2, 4, 5, 9, 15, 19, 21, 27, 28, 29, 30, 31, 32, 35, 38, 39, 40, 41, 42, 44, 45, 48, 50, 51, 53, 54, 55, 57, 58, 59, 60, 63, 65, 69, 77, 79, 81, 82, 84, 85, 91, 92, 93, 94, 96, 99, 100, 106, 112, 113, 114, 115, 117, 118, 125, 133, 139, 140, 142, 143, 144, 145, 148, 150, 155, 156, 157, 158, 159, 161, 164, 165, 167, 169, 170, 171, 175, 176, 177, 178, 179, 180, 182, 183, 187, 190, 193, 194, 198, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 213, 215, 220, 221, 224, 225, 226, 227, 228, 229, 234, 235, 236, 237, 238, 239, 242, 254, 257, 258, 260, 261, 262, 263, 264, 265, 267, 269, 270, 272, 273, 275, 276, 277, 278, 285, 295, 296, 339, 342, 348, 357, 358, 369, 370, 374, 375, 376, 377, 379, 380, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 413, 428, 430, 442, 448, 451, 470, 473, 475, 476, 486, 487, 521, 522, 530, 536, 542, 544, 546, 552, 555, 558, 566, 567, 571, 572, 574, 576, 581, 583, 584, 592, 600, 603, 607, 609, 610, 613, 614, 617, 620, 623, 625, 642, 644, 660, 661, 667, 673, 675, 679, 680, 681, 682, 684, 685, 687, 688, 689, 695, 696, 697, 698, 699, 711, 715, 718, 721, 722, 723, 725, 726, 732, 742, 777, 787, 830, 833, 834, 835, 840, 842, 850, 851, 856, 857, 858, 860, 875], "250": [2, 4, 21, 46, 79, 94, 115, 121, 135, 136, 140, 142, 150, 155, 165, 168, 180, 197, 199, 200, 201, 205, 207, 224, 228, 229, 237, 242, 648, 702, 839, 875], "ctf": [2, 27, 30, 31, 35, 36, 38, 39, 40, 41, 44, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 77, 84, 85, 99, 114, 117, 118, 125, 139, 142, 148, 164, 169, 171, 175, 177, 178, 180, 185, 186, 191, 192, 224, 225, 256, 259, 260, 262, 263, 264, 265, 266, 267, 273, 300, 307, 336, 343, 351, 353, 357, 359, 361, 362, 448, 450, 475, 476, 488, 512, 513, 518, 519, 521, 522, 531, 532, 533, 534, 537, 552, 553, 568, 583, 604, 613, 615, 621, 628, 643, 695, 697, 698, 699, 742, 758, 851, 857, 860, 875], "matric": [2, 10, 30, 31, 34, 35, 38, 39, 40, 41, 44, 47, 48, 50, 51, 54, 55, 57, 58, 59, 60, 77, 84, 85, 99, 101, 114, 117, 118, 125, 139, 142, 145, 148, 155, 162, 164, 165, 171, 175, 177, 178, 180, 187, 194, 224, 225, 242, 288, 295, 352, 407, 415, 475, 476, 566, 574, 583, 595, 646, 647, 648, 660, 681, 696, 706, 733, 735, 768, 850, 857, 860, 872, 875], "nave": [2, 5, 28, 29, 30, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 51, 54, 55, 57, 58, 59, 60, 67, 77, 84, 85, 88, 90, 92, 102, 105, 106, 107, 108, 112, 114, 117, 118, 125, 148, 165, 171, 175, 176, 177, 178, 180, 181, 190, 194, 219, 220, 221, 232, 234, 255, 261, 264, 265, 267, 351, 464, 523, 524, 525, 526, 528, 529, 535, 538, 539, 659, 695, 860, 875], "2790": 2, "aspect": [2, 16, 22, 30, 31, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 69, 77, 84, 85, 105, 114, 117, 118, 125, 141, 148, 171, 175, 177, 178, 180, 201, 204, 226, 227, 228, 229, 745, 860, 875], "specifi": [2, 4, 5, 9, 19, 31, 38, 41, 43, 47, 63, 86, 92, 93, 99, 101, 107, 112, 118, 125, 126, 134, 139, 140, 141, 148, 149, 150, 154, 157, 165, 166, 167, 168, 169, 170, 171, 177, 183, 184, 187, 194, 197, 198, 200, 201, 202, 203, 205, 206, 208, 209, 210, 213, 214, 215, 216, 225, 226, 229, 232, 238, 254, 256, 257, 259, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 286, 288, 295, 296, 300, 307, 312, 322, 328, 352, 353, 354, 355, 356, 357, 358, 366, 367, 368, 369, 374, 375, 376, 377, 379, 380, 381, 384, 387, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 414, 418, 419, 423, 424, 428, 431, 433, 442, 443, 445, 446, 448, 450, 451, 459, 463, 466, 470, 472, 473, 474, 475, 476, 477, 485, 490, 491, 499, 503, 514, 517, 521, 523, 531, 532, 533, 544, 554, 555, 558, 560, 565, 566, 568, 569, 573, 574, 583, 598, 601, 605, 607, 609, 614, 617, 623, 632, 635, 637, 640, 644, 645, 660, 672, 675, 681, 682, 683, 685, 686, 693, 695, 697, 698, 699, 730, 742, 745, 757, 758, 759, 761, 766, 773, 774, 776, 780, 781, 782, 785, 787, 788, 789, 791, 794, 797, 800, 801, 802, 804, 805, 806, 807, 811, 825, 830, 834, 852, 854, 857, 860, 875], "pleas": [2, 4, 5, 73, 75, 81, 99, 107, 121, 133, 134, 135, 136, 145, 165, 171, 183, 184, 188, 194, 197, 202, 203, 209, 210, 225, 234, 254, 262, 263, 287, 289, 330, 368, 385, 434, 446, 448, 475, 476, 486, 555, 574, 584, 615, 772, 789, 795, 822, 830, 832, 834, 838, 840, 846, 849, 850, 851, 853, 855, 857, 858, 875], "consid": [2, 4, 5, 80, 91, 99, 102, 106, 107, 110, 136, 140, 143, 151, 155, 158, 160, 161, 165, 183, 184, 194, 197, 198, 199, 200, 202, 203, 208, 209, 210, 224, 225, 226, 229, 232, 234, 239, 257, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 276, 277, 278, 285, 295, 296, 307, 317, 335, 352, 356, 357, 367, 368, 407, 414, 415, 428, 437, 438, 439, 440, 442, 448, 455, 472, 473, 475, 476, 483, 490, 492, 497, 550, 555, 557, 558, 563, 565, 566, 569, 571, 573, 574, 577, 581, 583, 588, 607, 609, 613, 656, 665, 666, 667, 669, 670, 682, 683, 685, 686, 695, 698, 700, 701, 702, 703, 704, 705, 706, 742, 755, 764, 772, 775, 776, 788, 795, 830, 832, 853, 856, 875], "self": [2, 4, 5, 99, 107, 171, 183, 184, 194, 197, 202, 209, 210, 225, 234, 256, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 273, 276, 277, 278, 286, 300, 363, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 474, 475, 476, 521, 554, 555, 556, 695, 697, 698, 699, 730, 743, 834, 852, 854, 875], "highpass": [2, 12, 70, 72, 75, 79, 80, 81, 88, 91, 97, 125, 140, 145, 150, 165, 166, 167, 168, 197, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 219, 221, 239, 254, 262, 263, 264, 265, 267, 442, 475, 476, 697, 699, 795, 796, 860, 875], "version": [2, 19, 34, 69, 82, 112, 144, 145, 149, 154, 160, 165, 170, 187, 188, 189, 193, 194, 199, 200, 216, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 282, 283, 286, 291, 295, 296, 298, 302, 303, 304, 305, 306, 307, 310, 311, 314, 315, 316, 318, 319, 320, 321, 326, 328, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 363, 366, 367, 368, 382, 383, 385, 386, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 418, 419, 423, 426, 428, 431, 432, 434, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 450, 451, 454, 455, 457, 460, 464, 466, 469, 470, 472, 473, 474, 475, 476, 483, 484, 486, 487, 488, 490, 491, 492, 495, 498, 500, 503, 505, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 522, 523, 524, 525, 528, 529, 530, 531, 532, 533, 535, 537, 538, 539, 540, 541, 542, 543, 546, 547, 548, 554, 555, 556, 557, 558, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 582, 583, 584, 591, 593, 597, 598, 603, 605, 607, 609, 610, 613, 614, 618, 626, 628, 629, 631, 632, 634, 637, 640, 643, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 664, 676, 677, 678, 687, 688, 689, 690, 694, 695, 696, 697, 698, 699, 707, 709, 712, 713, 714, 717, 722, 723, 725, 726, 727, 728, 731, 732, 739, 742, 743, 745, 751, 752, 758, 759, 760, 761, 763, 765, 766, 767, 769, 770, 771, 772, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 804, 805, 806, 807, 808, 811, 816, 819, 821, 825, 826, 828, 833, 834, 837, 838, 839, 840, 849, 851, 854, 856, 857, 860, 863], "evoked_hp": 2, "l_freq": [2, 21, 81, 112, 143, 145, 150, 190, 200, 201, 203, 205, 239, 254, 262, 263, 264, 265, 409, 418, 443, 445, 475, 476, 555, 563, 567, 568, 571, 572, 575, 576, 578, 579, 587, 861], "300": [2, 4, 5, 21, 34, 46, 51, 73, 79, 80, 90, 114, 134, 139, 148, 150, 168, 182, 190, 201, 203, 207, 210, 229, 237, 695, 860, 875], "h_freq": [2, 21, 81, 112, 143, 145, 150, 190, 200, 201, 203, 205, 208, 239, 254, 262, 263, 264, 265, 409, 418, 443, 445, 475, 476, 555, 563, 567, 568, 571, 572, 574, 575, 576, 578, 579, 587, 861], "3e": [2, 8, 9, 32, 35, 45, 48, 49, 50, 51, 54, 55, 58, 92, 107, 151, 175, 177, 178, 179, 180, 194, 567, 568, 759], "edg": [2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 32, 34, 42, 59, 69, 71, 72, 75, 80, 81, 82, 86, 97, 108, 111, 112, 113, 118, 119, 131, 135, 140, 141, 143, 145, 150, 160, 171, 190, 194, 197, 199, 200, 201, 202, 203, 205, 208, 209, 210, 215, 216, 220, 224, 229, 239, 259, 262, 263, 264, 265, 271, 272, 280, 316, 407, 409, 413, 414, 436, 443, 445, 447, 473, 475, 476, 554, 555, 557, 558, 569, 574, 583, 587, 695, 697, 699, 711, 721, 725, 746, 755, 759, 760, 774, 781, 785, 794, 795, 797, 802, 804, 854, 875], "75": [2, 4, 5, 8, 12, 13, 16, 19, 21, 24, 34, 35, 41, 44, 69, 71, 75, 78, 79, 81, 101, 110, 112, 113, 125, 133, 134, 142, 143, 145, 157, 168, 170, 171, 179, 183, 190, 193, 194, 197, 199, 202, 203, 205, 206, 207, 215, 224, 225, 228, 229, 475, 476, 555, 798, 851, 857, 875], "cutoff": [2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 34, 42, 71, 72, 75, 80, 81, 82, 86, 97, 111, 112, 113, 119, 131, 135, 140, 143, 145, 150, 171, 190, 194, 197, 199, 201, 202, 203, 205, 208, 209, 210, 229, 262, 263, 264, 265, 409, 418, 443, 445, 475, 476, 555, 563, 574, 587], "262": [2, 12, 21, 150, 168, 209, 224, 229, 242], "133": [2, 35, 61, 65, 133, 148, 153, 155, 168, 206, 228], "044": [2, 139, 141, 148, 168, 221], "306": [2, 22, 26, 31, 32, 33, 34, 35, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 61, 67, 75, 81, 82, 88, 90, 91, 92, 93, 107, 110, 129, 145, 157, 168, 171, 176, 177, 178, 179, 182, 193, 194, 207, 208, 220, 221, 229, 555, 851], "condit": [2, 10, 11, 16, 17, 20, 27, 30, 31, 35, 38, 39, 40, 41, 44, 45, 51, 58, 59, 60, 61, 77, 84, 85, 86, 92, 94, 97, 108, 110, 117, 118, 120, 122, 128, 139, 140, 141, 142, 143, 144, 148, 149, 152, 164, 165, 167, 175, 176, 177, 178, 179, 180, 183, 184, 190, 194, 200, 209, 214, 219, 224, 225, 226, 229, 230, 231, 232, 233, 234, 237, 242, 255, 262, 263, 264, 265, 267, 351, 352, 410, 417, 423, 429, 475, 520, 545, 552, 556, 566, 574, 583, 598, 610, 612, 613, 614, 676, 681, 682, 683, 685, 695, 697, 698, 699, 717, 725, 766, 780, 830, 834, 850, 851, 857, 861, 875], "kind": [2, 5, 7, 11, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 64, 67, 81, 88, 90, 91, 92, 93, 102, 105, 106, 107, 108, 122, 125, 129, 134, 135, 141, 148, 150, 155, 159, 165, 168, 169, 171, 174, 176, 177, 178, 179, 180, 183, 189, 190, 194, 201, 204, 220, 221, 232, 233, 234, 261, 262, 263, 264, 265, 267, 269, 270, 271, 273, 274, 275, 276, 277, 278, 295, 296, 303, 304, 310, 311, 326, 336, 371, 386, 426, 427, 442, 469, 475, 476, 507, 543, 556, 613, 690, 695, 697, 698, 699, 711, 721, 742, 761, 763, 792, 798, 800, 805, 806, 834, 841, 854, 857, 860, 875], "timepoint": [2, 19, 59, 99, 118, 140, 148, 150, 178, 180, 183, 213, 257, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 285, 346, 517, 571, 613, 614], "901": [2, 229], "number": [2, 4, 5, 9, 10, 11, 31, 34, 35, 39, 40, 42, 44, 46, 49, 52, 59, 71, 73, 75, 80, 81, 86, 88, 90, 91, 98, 101, 105, 107, 111, 112, 119, 125, 133, 134, 139, 141, 142, 143, 144, 145, 148, 149, 150, 159, 160, 161, 164, 165, 167, 169, 171, 174, 176, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 194, 197, 198, 199, 200, 202, 203, 204, 208, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 242, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 295, 296, 297, 298, 322, 325, 333, 340, 346, 352, 353, 354, 355, 356, 357, 358, 360, 363, 366, 367, 368, 377, 406, 407, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 423, 424, 428, 430, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 463, 464, 465, 470, 472, 473, 474, 475, 476, 477, 486, 499, 506, 508, 514, 517, 518, 522, 523, 524, 525, 526, 528, 529, 531, 532, 533, 535, 537, 538, 539, 554, 555, 556, 560, 564, 565, 566, 567, 568, 569, 570, 574, 575, 576, 578, 580, 581, 582, 588, 589, 600, 610, 614, 635, 643, 644, 645, 646, 647, 648, 649, 653, 654, 655, 658, 659, 660, 661, 669, 670, 671, 672, 674, 675, 676, 678, 680, 682, 683, 684, 685, 686, 687, 690, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 707, 709, 711, 713, 714, 721, 722, 723, 724, 725, 726, 727, 732, 740, 741, 742, 750, 759, 765, 766, 768, 770, 771, 772, 773, 774, 775, 776, 777, 778, 781, 782, 783, 785, 786, 788, 789, 794, 795, 796, 797, 800, 801, 802, 803, 804, 805, 808, 815, 830, 834, 849, 851, 854, 858, 860, 875], "rang": [2, 4, 5, 9, 10, 11, 13, 14, 15, 16, 18, 19, 28, 29, 32, 33, 34, 42, 45, 46, 49, 59, 61, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 80, 81, 82, 86, 90, 91, 92, 94, 95, 97, 98, 101, 102, 105, 107, 108, 109, 110, 111, 112, 113, 115, 116, 118, 119, 121, 125, 127, 130, 131, 133, 134, 135, 136, 139, 140, 141, 142, 143, 145, 148, 150, 151, 155, 157, 158, 159, 161, 165, 166, 167, 168, 170, 171, 175, 176, 178, 179, 180, 181, 182, 183, 184, 189, 190, 194, 197, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 234, 237, 238, 239, 254, 255, 259, 262, 263, 264, 265, 267, 271, 272, 295, 319, 370, 377, 391, 399, 400, 407, 410, 414, 416, 417, 440, 466, 472, 475, 476, 483, 554, 555, 560, 569, 574, 695, 696, 697, 698, 699, 711, 721, 759, 772, 773, 774, 778, 781, 785, 794, 795, 796, 797, 802, 804, 830, 850, 856, 857, 860, 875], "05": [2, 4, 5, 6, 8, 9, 10, 19, 20, 34, 35, 42, 46, 49, 51, 56, 59, 60, 70, 77, 82, 85, 90, 93, 94, 95, 98, 100, 101, 106, 107, 110, 114, 117, 118, 122, 128, 140, 143, 149, 150, 163, 169, 173, 176, 178, 179, 180, 182, 184, 190, 193, 197, 198, 201, 205, 207, 209, 212, 213, 218, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 242, 295, 296, 319, 328, 446, 450, 475, 476, 537, 564, 655, 673, 678, 679, 682, 683, 685, 686, 687, 695, 709, 711, 721, 725, 746, 801], "25": [2, 4, 5, 11, 16, 18, 19, 28, 34, 35, 41, 42, 43, 44, 45, 47, 49, 50, 53, 56, 64, 67, 69, 71, 73, 79, 80, 81, 83, 94, 101, 102, 104, 106, 107, 110, 111, 112, 114, 117, 122, 128, 133, 134, 135, 136, 142, 144, 145, 150, 158, 159, 168, 169, 170, 171, 174, 177, 179, 180, 182, 184, 186, 190, 193, 194, 197, 199, 200, 202, 203, 204, 205, 207, 208, 215, 221, 224, 225, 226, 228, 229, 232, 234, 237, 238, 242, 256, 262, 263, 264, 265, 269, 270, 273, 274, 275, 276, 277, 278, 358, 399, 407, 409, 418, 443, 445, 475, 476, 587, 655, 684, 694, 742, 746, 766, 778, 795, 798, 800, 805, 833, 850, 857], "off": [2, 4, 10, 72, 75, 91, 112, 114, 125, 133, 134, 136, 140, 142, 148, 150, 151, 155, 158, 159, 165, 166, 167, 168, 190, 193, 197, 198, 199, 201, 202, 203, 204, 205, 206, 208, 213, 214, 215, 216, 219, 220, 221, 242, 254, 257, 262, 263, 264, 265, 275, 295, 296, 409, 418, 443, 445, 475, 476, 554, 567, 568, 569, 576, 579, 583, 587, 598, 723, 726, 834, 850, 851, 857, 860, 875], "compar": [2, 4, 10, 19, 21, 22, 26, 27, 28, 36, 38, 39, 56, 72, 76, 81, 83, 87, 89, 101, 111, 112, 120, 128, 133, 140, 142, 143, 144, 145, 157, 159, 161, 165, 166, 171, 175, 179, 182, 183, 190, 194, 200, 202, 204, 205, 206, 226, 227, 228, 232, 233, 239, 257, 259, 262, 263, 264, 265, 266, 267, 268, 273, 275, 356, 357, 362, 383, 448, 475, 476, 480, 508, 511, 515, 521, 522, 533, 534, 537, 553, 555, 583, 604, 606, 610, 613, 615, 618, 645, 649, 650, 651, 652, 653, 654, 655, 657, 660, 666, 742, 750, 772, 780, 789, 795, 834, 842, 854, 863, 875], "unfilt": [2, 165, 171, 200, 203], "singl": [2, 3, 6, 16, 18, 27, 33, 34, 36, 45, 56, 69, 73, 81, 82, 85, 92, 99, 101, 103, 104, 111, 115, 118, 120, 128, 139, 140, 141, 143, 144, 148, 149, 150, 157, 164, 165, 167, 168, 169, 171, 175, 177, 179, 182, 183, 187, 188, 189, 194, 197, 198, 200, 203, 204, 205, 206, 208, 209, 210, 213, 214, 219, 221, 224, 229, 230, 231, 234, 238, 239, 242, 254, 256, 257, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 289, 290, 293, 295, 296, 302, 310, 312, 316, 317, 322, 351, 352, 357, 382, 407, 408, 414, 420, 423, 429, 433, 436, 448, 466, 475, 476, 491, 494, 496, 509, 512, 515, 517, 519, 521, 522, 524, 526, 528, 529, 536, 552, 554, 555, 560, 563, 569, 598, 606, 610, 617, 623, 630, 640, 644, 661, 675, 676, 678, 679, 680, 682, 683, 690, 695, 696, 697, 698, 699, 711, 721, 722, 723, 725, 726, 732, 742, 758, 759, 760, 766, 770, 773, 774, 775, 776, 778, 781, 782, 785, 792, 793, 794, 796, 797, 798, 802, 804, 818, 834, 843, 850, 851, 854, 857, 860, 861, 863, 875], "meg0443": 2, "ch_name": [2, 4, 7, 15, 18, 19, 31, 63, 69, 71, 73, 84, 98, 110, 112, 113, 118, 123, 134, 135, 139, 145, 148, 150, 158, 165, 167, 168, 171, 183, 189, 190, 198, 201, 203, 205, 208, 209, 210, 213, 219, 221, 226, 227, 228, 229, 238, 254, 256, 257, 259, 261, 262, 263, 264, 265, 266, 267, 295, 296, 310, 312, 316, 319, 322, 327, 335, 366, 367, 370, 474, 475, 476, 546, 549, 555, 567, 568, 571, 572, 574, 575, 576, 594, 637, 649, 695, 696, 697, 698, 699, 700, 701, 702, 763, 772, 773, 795, 860, 875], "index": [2, 4, 19, 21, 31, 47, 61, 69, 71, 74, 88, 131, 135, 142, 148, 149, 150, 159, 165, 168, 169, 171, 174, 179, 182, 183, 187, 190, 193, 197, 199, 202, 203, 204, 205, 207, 208, 209, 214, 215, 220, 225, 226, 237, 238, 242, 255, 256, 260, 261, 262, 263, 264, 265, 269, 270, 272, 273, 275, 276, 277, 278, 282, 283, 294, 295, 296, 309, 319, 347, 361, 467, 474, 475, 476, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 515, 525, 545, 555, 571, 572, 575, 576, 578, 579, 587, 613, 614, 655, 695, 696, 697, 698, 699, 742, 755, 760, 766, 770, 775, 785, 787, 789, 815, 830, 851, 857, 875], "edi": 2, "regular": [2, 5, 28, 29, 30, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 54, 55, 57, 58, 59, 60, 77, 81, 88, 92, 97, 102, 105, 106, 107, 108, 119, 165, 168, 177, 178, 179, 180, 181, 190, 194, 198, 205, 208, 219, 220, 221, 224, 232, 234, 264, 265, 268, 274, 295, 296, 352, 356, 357, 366, 367, 407, 414, 415, 419, 428, 436, 450, 451, 470, 472, 473, 483, 486, 490, 497, 522, 523, 524, 525, 526, 528, 529, 530, 533, 535, 538, 539, 549, 556, 564, 566, 574, 583, 618, 672, 675, 682, 683, 685, 686, 689, 781, 782, 799, 850, 856, 865, 875], "viz": [2, 4, 5, 7, 12, 19, 24, 27, 31, 34, 35, 38, 39, 40, 41, 42, 46, 47, 51, 52, 57, 59, 69, 78, 79, 84, 86, 90, 91, 99, 107, 112, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 128, 130, 131, 133, 134, 135, 136, 140, 141, 142, 143, 149, 150, 154, 155, 156, 157, 158, 159, 165, 169, 176, 177, 179, 180, 181, 182, 183, 184, 189, 193, 198, 200, 201, 203, 204, 205, 206, 207, 208, 209, 214, 224, 229, 239, 260, 262, 263, 264, 265, 267, 269, 270, 272, 273, 276, 277, 278, 307, 316, 327, 475, 476, 555, 605, 613, 623, 628, 695, 832, 834, 850, 852, 854, 857, 861, 865, 874, 875], "plot_compare_evok": [2, 4, 99, 125, 140, 141, 142, 143, 149, 150, 165, 209, 229, 262, 263, 773, 861, 865, 875], "366": [2, 6, 11, 13, 14, 15, 16, 18, 22, 31, 35, 40, 47, 48, 49, 50, 51, 54, 55, 58, 59, 64, 67, 79, 86, 88, 90, 91, 92, 93, 110, 119, 129, 131, 143, 148, 168, 171, 177, 178, 194, 208, 220, 221, 224, 229], "hf_sef_data": [2, 6], "some": [3, 4, 5, 10, 16, 21, 27, 40, 54, 55, 61, 65, 69, 72, 74, 93, 96, 101, 103, 107, 111, 112, 118, 125, 133, 134, 135, 136, 139, 140, 141, 143, 144, 148, 149, 150, 151, 155, 157, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 179, 182, 183, 188, 189, 190, 194, 195, 197, 198, 199, 201, 202, 203, 204, 205, 206, 208, 210, 211, 213, 214, 215, 216, 219, 220, 221, 224, 228, 229, 230, 237, 239, 254, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 275, 276, 277, 278, 306, 310, 314, 318, 352, 369, 382, 421, 430, 441, 460, 466, 475, 476, 483, 490, 550, 554, 555, 557, 565, 573, 583, 591, 597, 607, 609, 636, 640, 643, 677, 683, 695, 697, 698, 699, 758, 760, 777, 779, 795, 830, 832, 833, 834, 837, 838, 841, 846, 849, 850, 851, 852, 854, 855, 856, 857, 858, 861, 863, 875], "demo": [3, 27, 830, 875], "common": [3, 17, 20, 27, 32, 33, 34, 43, 44, 74, 113, 134, 148, 150, 154, 157, 159, 161, 164, 171, 188, 200, 202, 203, 204, 205, 208, 209, 213, 214, 221, 233, 239, 242, 262, 263, 264, 265, 267, 275, 310, 315, 326, 352, 361, 370, 407, 432, 436, 457, 463, 475, 476, 490, 552, 555, 570, 626, 630, 640, 695, 828, 830, 834, 851, 854, 857, 858, 861, 863, 875], "public": [3, 27, 110, 114, 118, 120, 128, 133, 143, 200, 257, 264, 267, 273, 446, 474, 475, 613, 623, 742, 761, 766, 834, 850, 856, 863, 875], "brainstorm": [3, 6, 27, 79, 80, 82, 107, 117, 164, 185, 186, 191, 192, 242, 256, 259, 260, 262, 264, 265, 267, 273, 300, 307, 351, 352, 353, 354, 357, 359, 361, 427, 448, 450, 475, 488, 512, 513, 518, 519, 521, 522, 533, 552, 568, 577, 583, 615, 621, 628, 643, 742, 758, 770, 782, 810, 857, 865, 873, 875], "raw": [3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 27, 28, 32, 33, 34, 36, 41, 42, 45, 46, 49, 56, 61, 63, 65, 67, 68, 70, 71, 72, 73, 75, 77, 78, 80, 81, 82, 86, 87, 89, 90, 93, 94, 95, 97, 98, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 119, 121, 125, 126, 127, 130, 131, 133, 134, 135, 140, 141, 143, 144, 145, 148, 150, 155, 157, 158, 161, 164, 165, 166, 168, 169, 170, 172, 173, 179, 181, 182, 183, 184, 187, 188, 189, 190, 194, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 217, 218, 220, 221, 226, 227, 228, 229, 232, 234, 237, 238, 239, 242, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 281, 282, 283, 294, 295, 296, 310, 312, 315, 339, 341, 343, 344, 345, 346, 351, 352, 354, 355, 356, 357, 360, 361, 368, 378, 389, 390, 398, 402, 412, 415, 432, 436, 440, 442, 445, 448, 449, 466, 474, 476, 477, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 511, 514, 515, 516, 518, 521, 522, 523, 524, 525, 526, 528, 529, 533, 536, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 590, 591, 597, 598, 604, 608, 610, 612, 615, 617, 618, 637, 640, 645, 646, 647, 648, 649, 660, 661, 681, 695, 697, 698, 699, 708, 713, 740, 742, 772, 775, 776, 785, 786, 787, 789, 795, 796, 812, 830, 832, 834, 850, 851, 852, 860, 861, 865, 875], "median": [3, 5, 6, 27, 69, 126, 149, 156, 194, 203, 225, 237, 238, 259, 262, 263, 264, 265, 267, 271, 312, 354, 407, 414, 416, 448, 475, 476, 488, 552, 554, 555, 569, 577, 583, 674, 695, 697, 698, 699, 714, 759, 766, 773, 774, 781, 785, 794, 797, 802, 804, 875], "nerv": [3, 5, 6, 27, 262, 264, 265, 267, 354, 448, 488, 552, 577], "hf": [3, 6, 27, 94, 125, 190, 264, 389, 766], "sef": [3, 6, 27, 125, 264, 389, 766, 850], "trial": [3, 6, 13, 16, 18, 27, 28, 33, 68, 69, 71, 82, 99, 102, 105, 111, 112, 115, 120, 128, 139, 140, 141, 142, 143, 148, 150, 151, 164, 165, 167, 179, 182, 190, 193, 194, 199, 200, 203, 219, 221, 224, 229, 230, 231, 232, 234, 242, 262, 263, 264, 265, 267, 289, 290, 293, 316, 322, 351, 407, 420, 423, 429, 430, 431, 433, 436, 448, 475, 491, 494, 524, 526, 552, 555, 563, 610, 630, 675, 676, 678, 679, 680, 682, 683, 695, 698, 722, 723, 725, 726, 766, 772, 775, 830, 851, 875], "linear": [3, 5, 6, 8, 9, 13, 17, 19, 20, 26, 27, 32, 41, 45, 50, 54, 55, 60, 97, 99, 105, 107, 108, 110, 118, 133, 134, 135, 140, 157, 158, 165, 175, 176, 180, 181, 193, 194, 200, 202, 203, 204, 242, 257, 259, 262, 263, 264, 265, 267, 269, 270, 271, 273, 275, 276, 277, 278, 339, 351, 407, 411, 413, 414, 419, 422, 425, 443, 445, 446, 475, 476, 513, 525, 527, 534, 537, 554, 555, 569, 577, 581, 610, 619, 646, 647, 648, 660, 680, 681, 690, 695, 697, 699, 731, 732, 742, 759, 761, 766, 774, 775, 781, 783, 785, 790, 794, 796, 797, 800, 802, 804, 805, 806, 830, 841, 843, 850, 851, 854, 875], "regress": [3, 6, 10, 11, 12, 15, 18, 19, 27, 31, 42, 76, 83, 96, 100, 146, 147, 164, 194, 211, 212, 224, 242, 262, 263, 264, 265, 267, 351, 413, 419, 448, 475, 520, 523, 552, 554, 572, 593, 598, 606, 679, 680, 681, 766, 775, 778, 797, 851, 863, 875], "limo": [3, 6, 27, 242, 263, 264, 265, 351, 680, 766, 775, 865, 875], "optic": [3, 6, 27, 74, 164, 187, 189, 211, 212, 260, 262, 264, 265, 267, 273, 300, 352, 362, 368, 436, 448, 450, 484, 496, 521, 522, 533, 549, 552, 554, 585, 586, 590, 602, 615, 699, 736, 742, 758, 810, 830, 851, 875], "pump": [3, 6, 27, 164, 187, 211, 212, 260, 262, 264, 265, 267, 273, 300, 352, 362, 448, 450, 496, 521, 522, 533, 549, 552, 554, 602, 615, 699, 736, 742, 758, 810, 830, 851, 875], "magnetomet": [3, 6, 22, 27, 32, 72, 75, 78, 79, 80, 85, 91, 107, 117, 118, 141, 144, 145, 149, 150, 161, 164, 165, 166, 167, 168, 179, 182, 183, 187, 190, 197, 198, 199, 201, 203, 204, 205, 206, 208, 211, 212, 213, 214, 215, 216, 219, 224, 254, 257, 259, 260, 262, 263, 264, 265, 267, 269, 270, 271, 273, 276, 277, 278, 295, 296, 300, 318, 352, 353, 354, 355, 356, 357, 362, 366, 367, 368, 407, 414, 428, 448, 450, 451, 470, 472, 473, 475, 476, 496, 511, 521, 522, 533, 549, 552, 553, 554, 555, 565, 566, 567, 568, 569, 570, 571, 572, 574, 583, 594, 602, 615, 681, 695, 697, 698, 699, 736, 742, 758, 759, 765, 772, 773, 774, 776, 778, 781, 782, 785, 794, 795, 797, 802, 803, 804, 810, 830, 850, 851, 854, 857, 875], "opm": [3, 6, 27, 103, 104, 164, 211, 212, 242, 259, 260, 262, 264, 265, 267, 273, 300, 352, 357, 362, 448, 450, 496, 513, 518, 521, 522, 528, 533, 549, 552, 554, 602, 615, 643, 699, 736, 742, 758, 810, 830, 857, 865, 875], "dspm": [3, 6, 11, 27, 29, 31, 36, 37, 38, 39, 40, 41, 42, 44, 55, 56, 59, 60, 102, 103, 104, 105, 106, 107, 164, 165, 174, 177, 178, 180, 181, 185, 186, 190, 194, 220, 221, 232, 234, 259, 262, 264, 265, 266, 267, 268, 269, 270, 273, 275, 276, 277, 278, 288, 292, 295, 296, 351, 352, 356, 448, 472, 473, 475, 488, 509, 514, 518, 521, 522, 523, 524, 525, 526, 527, 528, 529, 533, 534, 535, 536, 538, 539, 552, 555, 572, 610, 613, 615, 617, 704, 742, 767, 775, 830, 850, 851, 860, 875], "spm": [3, 6, 27, 121, 194, 351, 352, 402, 448, 488, 514, 518, 522, 533, 552, 555, 572, 775, 863, 873, 875], "face": [3, 4, 6, 10, 27, 68, 121, 139, 141, 143, 148, 150, 160, 165, 171, 174, 194, 197, 242, 262, 263, 304, 351, 352, 448, 488, 514, 518, 522, 533, 552, 555, 572, 626, 629, 695, 755, 775, 803, 823, 828, 860, 863, 875], "explor": [4, 27, 103, 104, 107, 157, 180, 194, 198, 200, 202, 205, 216, 220, 238, 239, 262, 265, 277, 278, 285, 448, 674, 806, 831, 851, 852, 854], "structur": [4, 8, 9, 10, 27, 41, 43, 59, 62, 63, 69, 81, 92, 93, 110, 112, 121, 133, 134, 136, 141, 145, 146, 147, 150, 152, 153, 154, 158, 164, 165, 166, 169, 170, 172, 173, 180, 184, 185, 186, 188, 189, 193, 203, 214, 217, 218, 222, 223, 224, 225, 239, 242, 256, 262, 263, 264, 265, 266, 267, 269, 270, 272, 273, 275, 276, 277, 278, 308, 309, 310, 318, 351, 369, 370, 385, 389, 390, 398, 402, 448, 464, 472, 473, 475, 476, 480, 494, 495, 535, 546, 549, 551, 552, 566, 580, 583, 606, 607, 608, 609, 610, 612, 613, 623, 655, 665, 666, 667, 668, 669, 670, 671, 675, 695, 697, 698, 699, 732, 742, 798, 821, 830, 834, 835, 838, 841, 846, 848, 850, 851, 852, 863, 875], "contain": [4, 16, 18, 27, 31, 38, 41, 43, 53, 78, 86, 92, 99, 106, 110, 114, 125, 126, 133, 136, 139, 142, 143, 145, 148, 150, 154, 157, 161, 164, 165, 167, 168, 169, 170, 171, 174, 180, 182, 187, 188, 189, 190, 200, 202, 203, 204, 205, 208, 209, 210, 213, 214, 219, 221, 224, 237, 238, 239, 249, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 282, 283, 287, 295, 296, 297, 301, 305, 306, 307, 310, 311, 312, 313, 316, 317, 318, 324, 333, 336, 347, 352, 353, 354, 355, 356, 357, 358, 363, 364, 365, 366, 367, 368, 382, 386, 388, 389, 390, 407, 410, 411, 413, 414, 415, 416, 417, 419, 420, 421, 426, 428, 431, 434, 435, 436, 441, 448, 449, 450, 451, 455, 456, 457, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 475, 476, 482, 484, 485, 486, 487, 489, 491, 492, 493, 494, 495, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 512, 514, 516, 517, 533, 541, 544, 545, 550, 554, 555, 556, 558, 560, 569, 570, 574, 580, 582, 583, 587, 589, 595, 596, 600, 601, 602, 603, 604, 605, 607, 608, 609, 610, 612, 613, 614, 618, 621, 626, 627, 629, 635, 637, 639, 640, 643, 644, 650, 651, 652, 653, 654, 655, 656, 657, 658, 661, 663, 664, 672, 674, 680, 682, 683, 685, 686, 687, 690, 691, 695, 696, 697, 698, 699, 707, 710, 718, 722, 723, 725, 726, 734, 742, 758, 759, 760, 761, 766, 769, 770, 772, 773, 774, 775, 776, 778, 779, 781, 782, 783, 785, 791, 794, 797, 798, 799, 800, 801, 802, 804, 805, 806, 815, 820, 823, 825, 826, 828, 830, 833, 834, 850, 851, 852, 854, 857, 860, 861, 875], "replic": [4, 16, 228, 232, 233, 234, 268, 672, 851, 854, 855, 875], "extend": [4, 75, 140, 143, 150, 165, 179, 198, 203, 205, 208, 210, 229, 242, 256, 259, 260, 262, 263, 264, 265, 271, 277, 352, 407, 414, 475, 476, 508, 516, 554, 555, 558, 566, 569, 574, 581, 583, 662, 695, 697, 699, 732, 759, 770, 774, 781, 785, 794, 797, 802, 804, 838, 841, 850, 863, 875], "main": [4, 49, 92, 99, 142, 155, 167, 170, 206, 210, 215, 228, 234, 262, 263, 324, 389, 466, 488, 676, 678, 772, 832, 834, 842, 851, 857, 858, 875], "tool": [4, 27, 54, 55, 69, 78, 87, 133, 139, 150, 154, 157, 160, 189, 197, 198, 200, 203, 205, 209, 225, 234, 239, 242, 249, 269, 270, 273, 276, 277, 278, 475, 476, 512, 537, 832, 837, 838, 839, 840, 842, 846, 850, 854, 855, 856, 857, 858, 862, 863, 865, 873, 875], "integr": [4, 154, 159, 199, 203, 224, 234, 242, 537, 555, 583, 655, 834, 838, 846, 857, 860, 875], "meeg": [4, 239], "matlab": [4, 19, 193, 242, 301, 413, 494, 592, 608, 612, 840, 841, 851, 858, 859, 863, 873, 875], "toolbox": [4, 19, 69, 150, 154, 193, 242, 301, 413, 446, 563, 841, 851], "origin": [4, 5, 8, 9, 11, 12, 13, 16, 18, 21, 22, 24, 26, 32, 33, 34, 38, 41, 42, 45, 46, 49, 50, 69, 70, 71, 74, 77, 78, 79, 85, 91, 92, 94, 95, 98, 101, 105, 108, 110, 111, 112, 115, 116, 119, 126, 133, 134, 135, 136, 139, 140, 141, 143, 144, 145, 148, 150, 151, 155, 157, 158, 159, 160, 161, 165, 166, 168, 169, 171, 175, 176, 177, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 213, 215, 221, 226, 227, 228, 229, 232, 234, 237, 238, 254, 255, 256, 257, 259, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 275, 276, 277, 278, 280, 282, 283, 295, 296, 310, 358, 366, 407, 414, 421, 422, 423, 428, 431, 441, 469, 474, 475, 476, 483, 486, 490, 494, 508, 514, 523, 554, 555, 556, 565, 566, 569, 574, 583, 590, 598, 608, 612, 615, 620, 633, 635, 637, 644, 646, 647, 648, 655, 660, 680, 687, 695, 697, 698, 699, 738, 742, 758, 759, 766, 772, 774, 776, 778, 781, 782, 785, 792, 794, 795, 796, 797, 798, 801, 802, 804, 822, 830, 834, 842, 850, 851, 857, 860, 875], "interfac": [4, 8, 15, 45, 86, 133, 154, 157, 165, 188, 194, 198, 200, 203, 204, 216, 242, 264, 265, 372, 377, 466, 467, 556, 742, 781, 837, 841, 846, 851, 860, 875], "eeglab": [4, 69, 126, 167, 200, 203, 242, 259, 262, 263, 264, 265, 271, 310, 328, 407, 414, 437, 440, 475, 476, 491, 554, 555, 563, 569, 596, 601, 607, 695, 697, 699, 759, 766, 774, 776, 778, 781, 782, 785, 792, 794, 796, 797, 798, 802, 804, 857, 875], "In": [4, 5, 10, 15, 16, 19, 21, 32, 40, 42, 43, 44, 45, 46, 59, 69, 73, 77, 80, 81, 85, 86, 88, 92, 99, 101, 110, 112, 113, 114, 116, 124, 125, 130, 133, 134, 136, 139, 141, 143, 148, 149, 150, 151, 154, 155, 157, 159, 160, 161, 165, 166, 167, 169, 170, 171, 174, 175, 177, 180, 187, 189, 190, 193, 194, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 221, 224, 225, 226, 234, 237, 238, 239, 242, 254, 256, 257, 259, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 276, 277, 278, 286, 295, 296, 300, 301, 306, 308, 318, 325, 327, 339, 352, 356, 357, 366, 367, 368, 369, 407, 409, 413, 414, 423, 424, 428, 431, 440, 442, 450, 451, 470, 472, 473, 475, 476, 483, 521, 522, 523, 524, 525, 526, 530, 533, 550, 554, 555, 556, 557, 569, 570, 571, 572, 577, 580, 581, 589, 591, 598, 600, 623, 640, 660, 663, 681, 690, 695, 697, 698, 699, 703, 704, 705, 706, 708, 711, 721, 722, 723, 724, 725, 726, 727, 730, 739, 742, 755, 766, 772, 773, 774, 775, 776, 778, 779, 781, 782, 785, 786, 793, 794, 795, 796, 797, 800, 802, 803, 806, 830, 832, 834, 835, 839, 840, 842, 845, 850, 851, 854, 856, 857, 860, 861, 875], "summari": [4, 10, 171, 199, 203, 216, 269, 270, 273, 276, 277, 278, 531, 532, 687, 834, 860], "fetch": [4, 136, 247, 377, 381, 382, 383, 384, 385, 386, 391, 399, 400, 834, 851, 875], "subject": [4, 5, 7, 8, 9, 10, 11, 19, 22, 24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 58, 59, 60, 67, 70, 71, 78, 79, 81, 87, 88, 89, 93, 102, 107, 110, 111, 113, 114, 116, 122, 123, 124, 125, 129, 132, 133, 134, 135, 136, 139, 142, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 167, 168, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 188, 189, 190, 194, 197, 198, 199, 202, 203, 204, 205, 206, 208, 209, 211, 212, 213, 214, 220, 221, 224, 225, 226, 228, 229, 232, 233, 234, 235, 238, 239, 242, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 295, 296, 301, 305, 306, 307, 310, 339, 340, 341, 342, 347, 349, 350, 358, 363, 364, 365, 369, 377, 381, 383, 384, 385, 386, 391, 399, 400, 426, 441, 457, 459, 461, 463, 465, 466, 467, 468, 469, 475, 476, 477, 480, 508, 510, 512, 514, 518, 521, 522, 533, 541, 542, 555, 559, 569, 580, 583, 600, 604, 610, 615, 617, 618, 620, 623, 627, 632, 633, 634, 635, 643, 644, 645, 647, 648, 649, 658, 660, 661, 672, 676, 678, 687, 690, 691, 732, 734, 741, 742, 758, 760, 765, 770, 771, 784, 798, 800, 805, 806, 815, 824, 825, 830, 840, 848, 850, 852, 854, 857, 863, 875], "If": [4, 27, 28, 31, 43, 44, 68, 69, 80, 97, 99, 113, 115, 118, 125, 133, 134, 136, 139, 141, 143, 145, 148, 149, 150, 155, 158, 159, 160, 164, 167, 168, 169, 170, 171, 174, 180, 181, 187, 188, 189, 194, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 213, 214, 215, 216, 219, 224, 225, 226, 232, 237, 239, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 300, 301, 302, 303, 304, 305, 306, 307, 310, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 327, 328, 330, 333, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 428, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 544, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 586, 587, 590, 591, 592, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 620, 621, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 711, 712, 713, 714, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 737, 741, 742, 747, 750, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 810, 811, 812, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 832, 833, 834, 837, 838, 839, 840, 841, 842, 845, 850, 851, 854, 855, 856, 857, 858, 860, 861, 875], "disk": [4, 29, 78, 106, 108, 141, 142, 148, 149, 157, 165, 169, 171, 176, 179, 183, 198, 204, 207, 208, 213, 214, 215, 221, 254, 256, 257, 258, 262, 263, 264, 265, 267, 268, 280, 311, 382, 426, 448, 474, 475, 476, 557, 606, 613, 615, 617, 623, 644, 697, 699, 716, 742, 772, 776, 780, 782, 795, 822, 824, 840, 850, 854, 857, 860, 875], "fetcher": [4, 136, 851, 863, 875], "automat": [4, 69, 77, 78, 81, 92, 99, 139, 140, 141, 143, 144, 148, 149, 150, 154, 155, 165, 167, 168, 169, 171, 181, 188, 189, 190, 197, 198, 199, 200, 201, 203, 204, 205, 208, 213, 215, 216, 219, 229, 242, 254, 256, 257, 259, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 280, 310, 316, 338, 358, 374, 375, 376, 377, 379, 380, 387, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 410, 417, 420, 428, 431, 439, 455, 456, 463, 465, 475, 476, 481, 488, 492, 495, 499, 518, 554, 555, 557, 565, 566, 567, 569, 574, 575, 578, 581, 583, 598, 609, 620, 631, 634, 639, 640, 644, 655, 682, 683, 685, 686, 695, 698, 738, 742, 760, 761, 765, 766, 772, 775, 778, 779, 780, 781, 788, 789, 795, 800, 805, 806, 833, 834, 840, 841, 850, 851, 857, 863, 875], "remot": [4, 247, 383, 808, 832, 834, 840, 863], "repositori": [4, 169, 835, 841, 856], "dure": [4, 19, 33, 38, 43, 45, 69, 79, 81, 92, 98, 101, 114, 119, 125, 133, 135, 140, 143, 148, 154, 156, 159, 165, 166, 167, 170, 171, 179, 181, 190, 194, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 213, 214, 215, 216, 239, 242, 254, 260, 262, 263, 264, 265, 266, 267, 269, 272, 273, 275, 277, 278, 279, 295, 296, 302, 339, 341, 345, 352, 356, 357, 359, 364, 366, 367, 368, 407, 413, 414, 424, 430, 431, 442, 450, 451, 467, 470, 472, 473, 475, 476, 477, 488, 503, 514, 518, 533, 541, 555, 574, 580, 583, 598, 637, 640, 645, 660, 663, 669, 670, 671, 690, 695, 697, 698, 699, 701, 704, 724, 727, 731, 740, 742, 758, 761, 772, 779, 782, 786, 789, 795, 800, 806, 830, 833, 839, 842, 850, 851, 852, 856, 857, 860, 875], "inform": [4, 5, 9, 11, 21, 22, 26, 28, 29, 31, 34, 35, 38, 39, 40, 42, 43, 44, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 61, 63, 67, 78, 82, 88, 90, 91, 92, 93, 99, 102, 105, 106, 108, 122, 129, 132, 133, 134, 139, 140, 141, 142, 143, 145, 148, 149, 150, 155, 157, 158, 159, 161, 164, 165, 167, 169, 171, 174, 176, 178, 179, 180, 181, 187, 188, 189, 190, 193, 194, 201, 202, 203, 204, 205, 206, 208, 211, 212, 213, 215, 219, 220, 221, 224, 226, 229, 232, 234, 238, 239, 242, 247, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 280, 282, 283, 295, 296, 297, 303, 304, 308, 309, 316, 317, 318, 322, 324, 325, 327, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 352, 356, 358, 366, 367, 368, 370, 407, 409, 414, 415, 416, 426, 427, 431, 437, 438, 439, 440, 442, 443, 445, 446, 448, 451, 458, 459, 465, 467, 470, 473, 474, 475, 476, 477, 480, 486, 494, 506, 511, 514, 517, 518, 519, 523, 533, 551, 552, 554, 555, 565, 566, 574, 580, 581, 583, 588, 589, 594, 596, 599, 608, 610, 611, 612, 630, 631, 637, 642, 643, 659, 660, 663, 682, 686, 692, 694, 695, 696, 697, 698, 699, 711, 722, 723, 724, 725, 726, 727, 732, 737, 738, 742, 755, 758, 762, 766, 767, 768, 770, 773, 777, 783, 784, 790, 794, 798, 804, 821, 830, 832, 833, 834, 837, 838, 841, 846, 851, 852, 855, 856, 858, 875], "e": [4, 7, 8, 12, 28, 41, 42, 44, 46, 47, 54, 68, 69, 70, 78, 82, 99, 110, 112, 118, 133, 136, 139, 140, 142, 143, 145, 149, 150, 152, 154, 156, 159, 160, 161, 164, 165, 167, 168, 169, 177, 179, 184, 187, 188, 189, 193, 194, 197, 198, 199, 200, 201, 203, 204, 206, 207, 208, 213, 214, 219, 220, 221, 224, 225, 226, 229, 232, 234, 238, 239, 242, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 285, 286, 295, 296, 297, 300, 301, 304, 306, 308, 310, 311, 316, 325, 327, 336, 338, 349, 352, 356, 357, 363, 366, 367, 368, 377, 382, 383, 385, 390, 399, 400, 407, 409, 410, 413, 414, 416, 417, 418, 421, 422, 423, 426, 427, 428, 431, 434, 436, 439, 440, 441, 443, 445, 446, 448, 449, 450, 451, 457, 463, 466, 469, 470, 472, 473, 474, 475, 476, 477, 487, 488, 490, 492, 508, 510, 512, 515, 516, 517, 518, 521, 522, 528, 529, 530, 531, 532, 533, 534, 537, 538, 539, 541, 554, 555, 557, 558, 563, 564, 565, 566, 569, 570, 571, 572, 574, 576, 577, 580, 583, 589, 590, 591, 598, 603, 610, 613, 614, 617, 618, 623, 630, 631, 632, 633, 634, 635, 641, 644, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 663, 666, 680, 681, 682, 683, 684, 685, 686, 687, 690, 691, 694, 695, 697, 698, 699, 703, 704, 705, 706, 707, 708, 711, 721, 725, 726, 730, 732, 742, 747, 755, 758, 759, 760, 765, 766, 770, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 785, 786, 788, 789, 793, 794, 795, 796, 797, 800, 802, 804, 805, 808, 815, 820, 823, 830, 832, 833, 834, 835, 838, 840, 846, 850, 851, 854, 856, 857, 860, 861, 863, 875], "rate": [4, 68, 95, 99, 101, 179, 188, 189, 193, 200, 201, 203, 228, 238, 242, 257, 260, 261, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 370, 412, 442, 446, 448, 475, 476, 483, 490, 497, 576, 581, 597, 648, 660, 673, 679, 681, 684, 695, 697, 698, 699, 713, 772, 774, 783, 795, 854, 875], "per": [4, 31, 47, 88, 92, 99, 105, 108, 118, 124, 129, 141, 143, 149, 150, 157, 165, 168, 179, 199, 203, 205, 216, 224, 229, 234, 238, 254, 262, 263, 264, 265, 267, 269, 270, 271, 273, 274, 275, 276, 277, 278, 280, 312, 319, 358, 372, 384, 399, 407, 414, 417, 420, 428, 431, 440, 441, 475, 476, 531, 532, 537, 538, 539, 556, 559, 600, 640, 647, 676, 678, 691, 695, 697, 699, 701, 704, 711, 713, 721, 722, 723, 725, 726, 732, 742, 772, 773, 774, 781, 803, 834, 840, 856, 857, 863, 875], "name": [4, 5, 7, 8, 9, 10, 18, 22, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 51, 54, 55, 58, 59, 67, 69, 81, 88, 90, 91, 92, 93, 98, 99, 101, 107, 110, 124, 129, 130, 133, 134, 136, 140, 141, 142, 143, 144, 148, 149, 158, 159, 160, 165, 167, 168, 169, 170, 171, 176, 177, 178, 179, 189, 190, 194, 198, 199, 200, 203, 204, 206, 208, 209, 210, 216, 219, 220, 221, 224, 225, 237, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 301, 305, 306, 307, 308, 310, 311, 316, 319, 320, 321, 322, 323, 325, 326, 327, 332, 334, 335, 336, 338, 349, 357, 358, 361, 363, 364, 365, 366, 367, 370, 378, 382, 385, 388, 407, 409, 410, 411, 413, 414, 415, 416, 417, 419, 420, 421, 423, 425, 426, 428, 431, 434, 437, 438, 439, 440, 448, 449, 457, 459, 460, 461, 463, 465, 466, 467, 468, 469, 474, 475, 476, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 507, 508, 510, 514, 515, 536, 540, 544, 545, 546, 552, 553, 554, 555, 556, 557, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 580, 584, 589, 591, 594, 595, 598, 600, 601, 603, 604, 605, 607, 608, 609, 610, 612, 614, 615, 616, 617, 618, 620, 621, 623, 625, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 640, 643, 644, 646, 647, 648, 649, 660, 663, 672, 676, 680, 681, 687, 690, 691, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 711, 715, 717, 721, 723, 726, 728, 730, 739, 741, 742, 747, 758, 759, 760, 761, 763, 766, 770, 771, 772, 773, 774, 776, 778, 779, 780, 781, 785, 786, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 804, 805, 806, 815, 819, 820, 821, 822, 825, 826, 827, 828, 829, 830, 832, 833, 838, 839, 840, 842, 851, 852, 857, 861, 865, 875], "etc": [4, 27, 31, 36, 47, 76, 142, 154, 159, 165, 166, 167, 170, 171, 174, 187, 188, 189, 197, 198, 199, 203, 208, 213, 216, 219, 224, 232, 239, 255, 260, 262, 263, 264, 265, 267, 268, 269, 273, 277, 332, 436, 448, 449, 475, 476, 483, 494, 498, 517, 527, 552, 555, 583, 608, 612, 637, 642, 669, 670, 671, 672, 682, 683, 685, 686, 695, 697, 698, 699, 742, 766, 770, 773, 800, 830, 834, 838, 839, 852, 854, 856, 857, 860, 861, 863, 875], "mat": [4, 19, 193, 242, 267, 494, 608, 612, 857, 875], "store": [4, 16, 29, 30, 69, 88, 91, 92, 93, 102, 107, 113, 114, 133, 134, 139, 140, 141, 142, 143, 148, 149, 150, 154, 155, 157, 159, 161, 167, 168, 169, 171, 174, 181, 188, 189, 190, 198, 199, 204, 205, 208, 209, 213, 215, 216, 220, 221, 239, 254, 255, 256, 260, 262, 263, 264, 265, 267, 272, 273, 274, 276, 280, 322, 343, 361, 377, 382, 389, 390, 399, 400, 409, 411, 422, 431, 436, 440, 445, 466, 474, 475, 476, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 515, 533, 542, 544, 555, 563, 569, 582, 601, 607, 608, 612, 615, 638, 647, 648, 660, 675, 695, 696, 698, 700, 701, 702, 703, 704, 705, 706, 715, 743, 750, 762, 795, 821, 822, 830, 834, 850, 851, 852, 854, 857, 860, 875], "fit": [4, 7, 8, 10, 11, 12, 13, 15, 16, 18, 21, 24, 40, 41, 45, 50, 59, 69, 70, 72, 73, 75, 77, 78, 79, 81, 86, 99, 109, 114, 121, 136, 140, 150, 151, 155, 157, 164, 165, 169, 171, 176, 178, 182, 183, 184, 185, 186, 188, 194, 198, 201, 202, 205, 206, 207, 208, 210, 228, 242, 248, 254, 259, 260, 261, 262, 263, 264, 265, 266, 267, 271, 272, 277, 298, 303, 304, 310, 339, 340, 341, 342, 345, 349, 350, 351, 363, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 426, 428, 436, 446, 450, 475, 476, 487, 514, 517, 522, 552, 554, 555, 556, 559, 562, 564, 565, 566, 569, 574, 575, 583, 613, 644, 659, 680, 695, 697, 698, 699, 708, 742, 759, 766, 770, 774, 776, 778, 781, 782, 785, 786, 787, 789, 792, 794, 796, 797, 798, 802, 804, 834, 846, 851, 854, 857, 861, 864, 875], "inferenti": [4, 224], "evalu": [4, 31, 44, 54, 55, 161, 187, 194, 208, 210, 224, 242, 274, 358, 424, 433, 472, 473, 506, 537, 564, 574, 655, 851, 854, 856, 857], "signific": [4, 71, 98, 99, 110, 150, 164, 171, 187, 197, 199, 200, 202, 203, 205, 224, 226, 227, 228, 229, 230, 231, 239, 242, 259, 262, 263, 264, 265, 267, 316, 322, 351, 407, 413, 414, 446, 475, 476, 530, 554, 555, 606, 682, 683, 685, 686, 687, 695, 697, 699, 759, 774, 778, 781, 797, 802, 804, 850, 857, 860, 863], "jose": [4, 875], "garcia": 4, "alani": [4, 875], "jcg": 4, "gmail": [4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 32, 33, 34, 38, 39, 42, 43, 44, 45, 46, 50, 51, 57, 58, 60, 65, 68, 71, 72, 73, 75, 77, 78, 79, 80, 82, 86, 88, 91, 92, 93, 97, 99, 101, 107, 110, 111, 112, 116, 118, 119, 121, 123, 124, 125, 126, 127, 130, 131, 133, 134, 135, 136, 140, 156, 158, 160, 178, 179, 181, 182, 183, 190, 193, 207, 221, 224, 228, 229, 232, 233, 234, 238, 239], "com": [4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 32, 33, 34, 38, 39, 42, 43, 44, 45, 46, 50, 51, 57, 58, 60, 65, 68, 71, 72, 73, 75, 77, 78, 79, 80, 82, 86, 88, 91, 92, 93, 99, 101, 107, 110, 111, 112, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 130, 131, 133, 134, 135, 136, 140, 156, 158, 160, 178, 179, 181, 182, 183, 190, 193, 207, 220, 221, 224, 228, 229, 232, 233, 234, 238, 239, 242, 262, 263, 264, 265, 273, 384, 475, 476, 483, 832, 834, 842, 854], "matplotlib": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 28, 29, 37, 38, 39, 41, 45, 47, 53, 58, 67, 68, 69, 70, 71, 72, 80, 84, 88, 90, 91, 94, 95, 97, 102, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 118, 125, 129, 130, 131, 133, 135, 136, 143, 144, 145, 150, 159, 169, 170, 171, 175, 176, 179, 180, 182, 183, 193, 194, 198, 200, 201, 203, 204, 205, 206, 208, 209, 210, 213, 216, 221, 224, 225, 226, 227, 228, 229, 234, 238, 239, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 272, 273, 276, 277, 278, 310, 311, 407, 414, 475, 476, 554, 555, 569, 617, 694, 695, 696, 697, 699, 711, 721, 742, 743, 745, 755, 757, 759, 760, 762, 764, 765, 766, 767, 768, 769, 770, 771, 772, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 787, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 811, 812, 814, 832, 833, 834, 852, 875], "pyplot": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 28, 29, 37, 38, 39, 41, 45, 47, 53, 58, 67, 68, 69, 70, 71, 72, 80, 84, 88, 90, 91, 94, 95, 97, 102, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 118, 125, 129, 130, 131, 133, 135, 136, 143, 144, 145, 150, 159, 169, 171, 175, 176, 179, 180, 182, 183, 193, 194, 200, 201, 204, 205, 208, 209, 210, 213, 221, 224, 225, 226, 227, 228, 229, 234, 238, 239, 261, 262, 263, 264, 265, 695, 711, 721, 745, 766, 776, 778, 803, 875], "plt": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 28, 29, 37, 38, 39, 41, 45, 47, 53, 58, 67, 68, 69, 70, 71, 72, 80, 84, 88, 90, 91, 94, 95, 97, 102, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 118, 125, 129, 130, 131, 133, 135, 136, 143, 144, 145, 150, 159, 169, 171, 175, 176, 179, 180, 182, 183, 193, 194, 200, 201, 204, 205, 208, 209, 210, 213, 221, 224, 225, 226, 227, 228, 229, 234, 238, 239, 264, 265, 319, 711, 721, 780], "stat": [4, 94, 95, 97, 98, 99, 110, 111, 140, 193, 224, 225, 226, 227, 228, 229, 232, 233, 234, 239, 262, 263, 316, 327, 555, 563, 771, 852, 865, 872, 875], "linear_regress": [4, 99, 140, 224, 865, 875], "plot_ev": [4, 7, 136, 165, 209, 214, 262, 263, 772, 865, 875], "combine_evok": [4, 7, 97, 140, 143, 148, 150, 165, 175, 190, 209, 225, 227, 861, 865, 875], "subj": [4, 159, 203], "experi": [4, 19, 45, 65, 69, 126, 150, 164, 165, 167, 168, 179, 190, 198, 199, 205, 208, 209, 210, 213, 214, 242, 267, 830, 834, 851, 853, 857, 875], "particip": [4, 70, 72, 74, 75, 79, 80, 81, 88, 91, 125, 140, 143, 145, 150, 165, 166, 167, 168, 171, 197, 198, 199, 201, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 219, 221, 239, 830, 851, 856, 863], "perform": [4, 8, 10, 19, 31, 45, 54, 74, 80, 82, 98, 99, 101, 110, 117, 136, 139, 142, 143, 145, 148, 150, 154, 155, 156, 165, 166, 167, 168, 177, 187, 188, 194, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 213, 224, 226, 228, 232, 234, 255, 257, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 285, 288, 295, 296, 351, 352, 353, 355, 357, 358, 372, 407, 410, 413, 414, 417, 419, 420, 423, 424, 428, 442, 443, 448, 450, 463, 464, 465, 466, 470, 472, 473, 475, 476, 482, 483, 490, 514, 515, 517, 518, 522, 523, 524, 525, 526, 528, 529, 533, 538, 539, 554, 555, 557, 560, 567, 568, 569, 571, 572, 574, 575, 581, 583, 598, 610, 643, 646, 647, 648, 660, 672, 677, 681, 682, 683, 684, 685, 686, 688, 695, 697, 698, 699, 700, 701, 702, 703, 704, 705, 713, 714, 722, 723, 724, 725, 726, 732, 758, 759, 766, 772, 773, 774, 777, 781, 785, 787, 789, 794, 795, 796, 797, 802, 804, 808, 830, 832, 840, 841, 842, 850, 851, 857, 860, 875], "two": [4, 5, 12, 16, 19, 22, 32, 37, 42, 45, 47, 54, 55, 65, 68, 69, 71, 73, 74, 79, 82, 86, 88, 110, 113, 115, 130, 131, 133, 134, 136, 140, 141, 143, 145, 149, 150, 154, 155, 157, 159, 165, 167, 168, 169, 170, 171, 174, 177, 179, 189, 190, 194, 197, 199, 200, 201, 202, 203, 204, 205, 206, 209, 213, 214, 215, 216, 221, 224, 226, 228, 232, 234, 237, 239, 242, 256, 262, 263, 264, 265, 268, 269, 270, 273, 274, 276, 277, 278, 295, 296, 310, 318, 352, 356, 357, 366, 367, 368, 399, 407, 409, 414, 418, 422, 430, 431, 441, 443, 445, 446, 447, 450, 451, 470, 472, 473, 475, 476, 498, 510, 528, 533, 550, 555, 558, 565, 569, 574, 581, 582, 597, 598, 637, 640, 648, 672, 676, 677, 678, 680, 682, 683, 684, 685, 686, 690, 695, 697, 698, 699, 713, 714, 724, 732, 742, 747, 750, 772, 773, 774, 782, 789, 795, 800, 830, 834, 840, 851, 854, 856, 857, 860, 875], "altern": [4, 112, 125, 160, 161, 168, 171, 190, 197, 199, 200, 203, 216, 224, 238, 239, 253, 255, 256, 259, 262, 263, 264, 265, 271, 352, 407, 414, 475, 476, 499, 517, 554, 555, 569, 605, 609, 684, 695, 697, 699, 742, 759, 774, 781, 785, 794, 797, 802, 804, 832, 834, 840, 851, 854, 860, 862, 875], "choic": [4, 112, 154, 159, 169, 170, 183, 200, 205, 214, 226, 275, 447, 457, 533, 688, 832, 838, 851, 857], "task": [4, 10, 32, 33, 34, 46, 69, 110, 111, 135, 136, 142, 143, 154, 155, 164, 168, 174, 194, 198, 203, 238, 242, 377, 410, 417, 711, 721, 722, 725, 851, 857, 858, 861, 863, 875], "discrimin": [4, 9, 18, 81, 194, 239, 242, 407, 411, 414, 555, 851], "between": [4, 8, 10, 16, 19, 22, 26, 27, 36, 38, 40, 45, 47, 59, 60, 68, 80, 81, 86, 94, 97, 98, 101, 106, 111, 112, 125, 126, 131, 132, 133, 135, 136, 139, 140, 143, 145, 148, 149, 150, 155, 156, 157, 159, 160, 161, 164, 165, 168, 169, 170, 171, 175, 177, 187, 188, 189, 190, 193, 194, 198, 199, 200, 202, 203, 204, 206, 207, 208, 209, 210, 213, 214, 215, 221, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 239, 242, 254, 255, 256, 257, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 285, 306, 310, 316, 318, 319, 339, 351, 352, 358, 359, 361, 362, 363, 407, 408, 413, 419, 423, 426, 428, 430, 431, 433, 441, 448, 451, 452, 470, 472, 473, 475, 476, 498, 515, 516, 528, 530, 533, 537, 538, 539, 552, 555, 557, 558, 560, 563, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 578, 581, 582, 583, 587, 589, 610, 613, 614, 637, 645, 646, 647, 648, 650, 652, 655, 656, 659, 660, 663, 665, 666, 667, 669, 670, 674, 675, 682, 683, 685, 686, 687, 690, 695, 696, 698, 700, 702, 703, 705, 710, 711, 714, 718, 719, 721, 722, 723, 725, 726, 732, 742, 747, 758, 760, 761, 763, 766, 768, 772, 775, 776, 778, 779, 781, 795, 796, 799, 800, 802, 805, 806, 808, 821, 830, 832, 834, 840, 842, 850, 851, 854, 856, 857, 860, 863, 875], "stimuli": [4, 19, 68, 114, 126, 140, 143, 145, 148, 150, 165, 179, 190, 193, 202, 242, 413, 558, 830, 851], "The": [4, 5, 7, 8, 9, 11, 14, 15, 16, 18, 19, 21, 27, 31, 34, 38, 41, 43, 44, 45, 46, 47, 48, 49, 52, 58, 59, 60, 63, 65, 68, 73, 74, 77, 78, 79, 80, 81, 82, 86, 92, 93, 99, 101, 102, 105, 107, 108, 110, 111, 112, 113, 114, 118, 124, 125, 126, 132, 133, 134, 135, 136, 140, 141, 142, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 170, 171, 172, 173, 176, 180, 182, 183, 185, 186, 187, 188, 189, 190, 193, 194, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 238, 239, 240, 241, 242, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 293, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 377, 378, 381, 382, 383, 384, 385, 386, 388, 390, 391, 398, 399, 400, 402, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 485, 486, 487, 488, 490, 492, 494, 495, 496, 497, 498, 499, 501, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 630, 631, 632, 634, 635, 636, 637, 639, 640, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 674, 675, 676, 677, 678, 680, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 747, 748, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 824, 825, 826, 827, 829, 830, 832, 834, 837, 838, 840, 846, 852, 853, 854, 855, 858, 859, 861, 863, 875], "same": [4, 18, 19, 28, 44, 45, 54, 55, 58, 69, 73, 74, 81, 88, 97, 101, 107, 111, 112, 125, 133, 134, 139, 140, 141, 143, 148, 149, 150, 155, 159, 160, 161, 167, 168, 169, 170, 174, 175, 177, 182, 187, 189, 190, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 214, 215, 216, 219, 224, 225, 226, 228, 229, 232, 233, 234, 237, 254, 256, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 282, 283, 285, 295, 298, 307, 312, 315, 326, 351, 352, 356, 357, 358, 368, 370, 386, 407, 414, 415, 420, 428, 431, 432, 441, 442, 457, 460, 464, 465, 470, 474, 475, 476, 482, 483, 490, 491, 501, 504, 541, 555, 556, 557, 566, 571, 572, 573, 574, 583, 584, 597, 601, 607, 608, 623, 641, 642, 645, 646, 647, 648, 655, 660, 661, 677, 681, 682, 683, 685, 686, 690, 695, 697, 698, 699, 713, 714, 720, 722, 723, 724, 725, 726, 727, 732, 742, 747, 758, 759, 766, 772, 773, 774, 776, 778, 781, 783, 794, 795, 800, 801, 803, 828, 834, 839, 846, 851, 854, 857, 858, 861, 875], "whole": [4, 28, 54, 55, 69, 161, 198, 224, 242, 269, 270, 273, 276, 277, 278, 441, 510, 583, 600, 644, 661, 696, 742, 768, 802, 834, 842, 851, 875], "vari": [4, 19, 22, 46, 47, 59, 140, 154, 189, 193, 200, 203, 204, 207, 208, 210, 221, 224, 262, 263, 267, 269, 270, 273, 276, 277, 278, 339, 340, 341, 342, 343, 344, 430, 441, 647, 686, 765, 851, 857, 860, 863, 875], "level": [4, 8, 9, 27, 36, 44, 56, 96, 99, 100, 120, 128, 133, 140, 141, 143, 149, 150, 154, 159, 164, 165, 167, 169, 170, 179, 180, 187, 193, 197, 199, 200, 203, 204, 210, 221, 224, 226, 227, 228, 229, 230, 232, 233, 234, 239, 242, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 301, 302, 303, 304, 305, 306, 307, 310, 312, 314, 315, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 379, 380, 381, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 412, 413, 414, 417, 418, 420, 423, 424, 426, 428, 432, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 450, 451, 452, 457, 458, 462, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 510, 511, 512, 513, 514, 515, 517, 518, 519, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 548, 551, 552, 554, 555, 557, 558, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 578, 579, 580, 581, 583, 584, 586, 587, 590, 591, 592, 595, 596, 597, 598, 602, 603, 604, 605, 606, 607, 609, 610, 611, 613, 614, 615, 617, 618, 619, 620, 621, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 640, 642, 643, 644, 646, 647, 648, 649, 659, 660, 663, 665, 666, 667, 668, 669, 670, 671, 674, 676, 678, 682, 683, 684, 685, 686, 690, 691, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 713, 714, 717, 718, 722, 723, 725, 726, 727, 728, 731, 732, 737, 740, 741, 742, 750, 758, 759, 767, 770, 774, 775, 776, 777, 778, 781, 782, 785, 786, 787, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 811, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 832, 834, 841, 851, 852, 857, 859, 872, 875], "nois": [4, 5, 7, 11, 18, 21, 27, 28, 29, 30, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 62, 66, 69, 73, 80, 82, 86, 88, 91, 92, 93, 102, 105, 106, 107, 108, 112, 118, 120, 122, 128, 143, 145, 148, 150, 151, 161, 165, 171, 175, 177, 178, 179, 180, 181, 182, 183, 184, 188, 190, 193, 194, 198, 200, 202, 206, 208, 213, 216, 221, 224, 232, 234, 242, 254, 259, 262, 263, 264, 265, 267, 269, 270, 272, 273, 276, 277, 278, 295, 296, 298, 345, 351, 352, 353, 354, 355, 356, 357, 366, 367, 368, 407, 414, 415, 430, 450, 451, 470, 472, 473, 475, 476, 480, 511, 522, 528, 529, 533, 535, 538, 539, 555, 556, 583, 591, 592, 604, 610, 647, 648, 649, 659, 697, 699, 723, 726, 767, 772, 776, 780, 782, 795, 796, 819, 830, 854, 860, 875], "less": [4, 5, 10, 18, 24, 26, 40, 41, 44, 45, 46, 49, 50, 69, 77, 85, 112, 117, 122, 133, 139, 140, 142, 149, 150, 155, 157, 158, 170, 171, 175, 180, 182, 183, 184, 187, 197, 198, 200, 201, 203, 205, 206, 208, 209, 213, 220, 224, 226, 239, 361, 448, 472, 473, 474, 475, 476, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 515, 522, 555, 563, 580, 581, 588, 682, 683, 684, 685, 686, 690, 742, 834, 841, 851, 854, 856, 857, 875], "discern": [4, 851], "observ": [4, 74, 99, 136, 143, 150, 155, 203, 205, 209, 224, 226, 228, 229, 232, 234, 239, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 446, 475, 476, 555, 676, 681, 682, 683, 684, 685, 686, 695, 697, 698, 699, 700, 701, 702, 795, 830, 850, 851], "fig": [4, 5, 10, 11, 12, 13, 15, 18, 19, 21, 22, 24, 39, 41, 42, 45, 47, 52, 58, 67, 68, 69, 70, 71, 72, 78, 79, 80, 85, 91, 94, 97, 101, 102, 107, 110, 111, 112, 113, 114, 116, 118, 121, 122, 123, 125, 133, 134, 135, 136, 140, 143, 145, 149, 150, 155, 156, 157, 158, 159, 165, 169, 171, 175, 176, 177, 179, 180, 181, 182, 184, 190, 193, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 215, 221, 224, 225, 227, 228, 229, 238, 239, 259, 260, 261, 262, 263, 264, 265, 271, 272, 275, 277, 278, 310, 311, 407, 414, 475, 476, 554, 555, 695, 696, 697, 699, 745, 755, 758, 759, 760, 762, 763, 764, 765, 766, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 802, 803, 806, 812, 875], "similar": [4, 16, 17, 18, 19, 20, 27, 33, 58, 60, 69, 86, 101, 107, 110, 112, 129, 135, 136, 139, 140, 141, 142, 143, 149, 159, 169, 194, 197, 198, 200, 202, 203, 204, 205, 206, 209, 213, 220, 224, 226, 229, 237, 242, 255, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 295, 352, 361, 408, 423, 441, 448, 475, 476, 506, 552, 555, 569, 574, 650, 695, 698, 699, 732, 742, 757, 776, 798, 832, 834, 839, 840, 841, 851, 852, 856, 857, 863, 875], "approach": [4, 10, 19, 21, 44, 45, 46, 59, 72, 74, 101, 125, 140, 142, 143, 148, 149, 150, 155, 159, 162, 163, 164, 165, 166, 171, 179, 193, 194, 197, 198, 200, 201, 202, 203, 206, 208, 210, 221, 224, 225, 228, 230, 239, 242, 267, 363, 385, 480, 513, 555, 571, 581, 590, 634, 758, 810, 830, 834, 842, 850, 851, 852, 856, 857, 875], "across": [4, 16, 17, 18, 19, 20, 26, 27, 28, 32, 33, 47, 54, 55, 58, 60, 78, 81, 82, 101, 107, 111, 112, 133, 134, 136, 139, 140, 141, 142, 144, 148, 149, 152, 154, 161, 164, 165, 167, 171, 179, 194, 197, 198, 200, 202, 203, 204, 205, 206, 208, 210, 216, 219, 220, 224, 232, 233, 234, 238, 242, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 274, 276, 277, 278, 315, 357, 358, 407, 410, 414, 416, 417, 419, 420, 421, 432, 441, 475, 476, 531, 532, 537, 552, 555, 557, 560, 569, 610, 620, 640, 660, 686, 690, 695, 696, 697, 698, 699, 706, 713, 722, 723, 725, 726, 757, 761, 766, 773, 774, 776, 777, 781, 794, 796, 800, 803, 806, 830, 834, 850, 851, 854, 857, 863, 875], "signal": [4, 8, 9, 10, 13, 15, 16, 19, 21, 27, 28, 42, 45, 51, 58, 59, 63, 69, 70, 72, 73, 74, 76, 80, 83, 86, 98, 101, 109, 111, 112, 119, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 150, 151, 161, 164, 165, 171, 174, 177, 179, 183, 188, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 206, 211, 212, 213, 214, 216, 221, 222, 223, 224, 229, 240, 242, 254, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 276, 277, 278, 298, 339, 340, 341, 342, 345, 346, 349, 352, 353, 354, 355, 357, 362, 368, 377, 399, 400, 407, 409, 411, 412, 413, 414, 415, 418, 419, 428, 431, 440, 441, 442, 443, 445, 446, 447, 448, 475, 476, 490, 495, 521, 522, 523, 536, 552, 553, 554, 555, 556, 557, 564, 566, 567, 568, 570, 571, 572, 574, 576, 582, 583, 604, 613, 615, 618, 637, 640, 659, 661, 662, 681, 682, 695, 697, 698, 699, 700, 701, 702, 710, 711, 713, 714, 718, 720, 721, 724, 727, 742, 766, 772, 774, 776, 781, 782, 784, 785, 786, 787, 789, 795, 796, 830, 850, 851, 854, 875], "continuum": [4, 851, 875], "span": [4, 80, 117, 135, 139, 140, 148, 149, 150, 164, 165, 167, 177, 190, 197, 201, 211, 212, 213, 215, 216, 237, 239, 256, 262, 263, 264, 265, 267, 357, 475, 476, 552, 555, 557, 558, 571, 572, 575, 576, 610, 687, 695, 697, 699, 713, 757, 759, 796, 802, 850, 851, 852, 857, 863, 875], "85": [4, 19, 35, 37, 47, 77, 88, 101, 107, 110, 112, 139, 144, 145, 159, 168, 175, 181, 193, 201, 207, 224, 225, 228, 229, 875], "increas": [4, 11, 32, 55, 69, 110, 150, 171, 200, 203, 204, 209, 210, 221, 226, 229, 239, 260, 261, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 448, 475, 476, 486, 555, 574, 591, 682, 683, 685, 686, 695, 698, 711, 721, 722, 723, 724, 725, 726, 727, 742, 746, 772, 789, 795, 851, 857, 875], "step": [4, 8, 11, 15, 18, 24, 41, 46, 59, 63, 67, 92, 97, 101, 107, 110, 118, 125, 133, 139, 141, 150, 151, 157, 160, 165, 166, 167, 169, 171, 189, 190, 194, 197, 198, 199, 200, 203, 205, 206, 208, 210, 213, 224, 225, 239, 242, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 287, 289, 339, 340, 341, 345, 407, 413, 422, 425, 448, 449, 465, 466, 473, 475, 476, 492, 550, 555, 565, 569, 574, 581, 645, 662, 682, 683, 685, 686, 687, 710, 718, 732, 742, 758, 766, 795, 806, 834, 835, 840, 842, 848, 850, 851, 856, 857, 861, 863, 875], "other": [4, 43, 61, 69, 81, 82, 110, 125, 140, 142, 144, 149, 150, 154, 155, 159, 165, 167, 168, 169, 171, 174, 176, 179, 180, 187, 188, 190, 194, 197, 198, 201, 202, 203, 204, 205, 206, 207, 213, 215, 216, 220, 221, 224, 228, 237, 239, 254, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 281, 310, 322, 323, 351, 358, 363, 413, 415, 424, 426, 428, 430, 431, 436, 440, 452, 456, 457, 470, 472, 473, 475, 476, 487, 522, 533, 544, 554, 555, 574, 583, 597, 601, 603, 614, 617, 623, 626, 632, 634, 644, 655, 660, 666, 681, 695, 696, 697, 698, 699, 742, 755, 763, 770, 772, 774, 785, 789, 795, 800, 815, 823, 828, 830, 839, 840, 841, 842, 846, 850, 851, 852, 854, 856, 860, 863, 875], "word": [4, 99, 142, 150, 154, 167, 174, 194, 200, 204, 205, 208, 224, 225, 239, 242, 390, 413, 724, 727, 742, 755, 830, 834, 851, 857, 863], "g": [4, 8, 28, 31, 37, 41, 42, 44, 67, 68, 69, 78, 79, 82, 94, 99, 110, 112, 113, 118, 124, 125, 133, 136, 139, 140, 142, 149, 150, 154, 159, 160, 161, 165, 167, 168, 169, 179, 187, 188, 189, 193, 194, 197, 199, 200, 201, 202, 203, 204, 206, 213, 214, 219, 220, 224, 225, 229, 232, 234, 238, 239, 242, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 295, 296, 297, 301, 308, 310, 311, 316, 325, 327, 336, 338, 349, 352, 356, 357, 363, 366, 367, 368, 377, 382, 385, 390, 399, 400, 407, 409, 410, 413, 414, 416, 417, 418, 421, 422, 423, 426, 427, 428, 431, 436, 439, 440, 441, 443, 445, 446, 448, 449, 450, 451, 457, 463, 466, 469, 470, 472, 473, 474, 475, 476, 477, 488, 510, 512, 516, 517, 518, 522, 528, 529, 530, 533, 537, 538, 539, 541, 554, 555, 557, 558, 565, 566, 569, 570, 571, 572, 574, 577, 580, 583, 589, 590, 591, 598, 603, 610, 617, 618, 623, 630, 631, 632, 633, 634, 635, 641, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 663, 666, 680, 681, 682, 683, 684, 685, 686, 690, 691, 695, 697, 698, 699, 703, 704, 705, 706, 708, 724, 726, 727, 742, 747, 755, 758, 759, 760, 765, 766, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 785, 786, 788, 789, 793, 794, 795, 796, 797, 800, 802, 804, 805, 808, 815, 820, 823, 830, 832, 834, 835, 838, 840, 846, 850, 851, 854, 856, 857, 860, 861, 863, 875], "easi": [4, 131, 161, 165, 181, 187, 190, 198, 203, 206, 213, 215, 239, 272, 359, 413, 830, 832, 834, 840, 851, 852, 854, 857], "identifi": [4, 12, 13, 27, 32, 33, 34, 76, 83, 133, 136, 145, 150, 168, 190, 194, 197, 203, 205, 221, 224, 242, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 310, 326, 333, 370, 410, 417, 459, 475, 476, 477, 481, 555, 559, 563, 569, 582, 592, 742, 751, 762, 800, 804, 805, 834, 850, 851, 854, 857, 860, 875], "while": [4, 10, 26, 45, 73, 75, 81, 85, 105, 125, 133, 136, 140, 141, 142, 143, 149, 150, 157, 159, 165, 171, 177, 178, 187, 197, 198, 203, 205, 206, 208, 215, 221, 224, 228, 232, 239, 242, 260, 261, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 295, 296, 352, 356, 357, 366, 367, 368, 407, 413, 414, 415, 424, 441, 450, 451, 470, 472, 473, 475, 476, 503, 525, 533, 555, 556, 567, 568, 571, 572, 575, 695, 698, 722, 723, 725, 726, 766, 772, 776, 780, 782, 789, 795, 798, 808, 830, 832, 834, 837, 851, 856, 857, 863, 875], "low": [4, 5, 11, 19, 45, 47, 59, 69, 73, 79, 80, 81, 82, 92, 108, 112, 133, 140, 142, 150, 165, 166, 179, 182, 187, 190, 194, 198, 201, 203, 208, 209, 210, 224, 226, 228, 233, 242, 254, 257, 260, 261, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 303, 352, 357, 409, 415, 418, 420, 442, 443, 445, 475, 476, 483, 486, 499, 522, 555, 560, 563, 567, 568, 571, 572, 574, 575, 576, 578, 579, 587, 648, 652, 657, 688, 689, 695, 698, 723, 726, 742, 772, 795, 830, 850, 851, 854, 856, 857, 875], "hard": [4, 112, 133, 141, 203, 221, 361, 474, 475, 476, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 515, 834, 851, 852, 854, 875], "extens": [4, 12, 43, 44, 135, 139, 150, 157, 159, 169, 188, 189, 194, 214, 215, 254, 262, 263, 264, 265, 295, 296, 328, 329, 335, 414, 437, 438, 440, 475, 476, 482, 489, 492, 501, 583, 601, 610, 614, 696, 715, 742, 820, 837, 838, 850, 851, 857, 863, 875], "veri": [4, 10, 44, 45, 50, 60, 63, 68, 69, 78, 81, 112, 131, 133, 140, 143, 150, 156, 159, 167, 171, 180, 198, 200, 201, 202, 203, 204, 205, 208, 221, 224, 233, 239, 295, 318, 431, 475, 681, 830, 834, 837, 852, 857], "ll": [4, 7, 10, 19, 26, 34, 54, 59, 69, 112, 113, 114, 115, 118, 125, 133, 134, 135, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 155, 157, 159, 161, 165, 166, 167, 169, 170, 171, 178, 179, 180, 189, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 213, 214, 215, 216, 219, 221, 225, 228, 234, 237, 238, 834, 842, 854], "begin": [4, 19, 72, 91, 133, 150, 155, 165, 167, 168, 170, 171, 174, 187, 190, 193, 197, 199, 200, 201, 202, 203, 204, 205, 210, 215, 219, 239, 256, 257, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 281, 285, 357, 436, 449, 475, 476, 501, 515, 528, 538, 539, 555, 558, 571, 572, 574, 575, 578, 583, 613, 614, 662, 695, 698, 699, 708, 775, 786, 787, 789, 796, 802, 828, 834, 839, 857, 860, 875], "littl": [4, 159, 170, 187, 200, 201, 203, 204, 221, 239, 837, 857], "you": [4, 24, 27, 28, 32, 41, 43, 47, 50, 59, 60, 77, 80, 81, 86, 101, 107, 111, 112, 113, 114, 115, 117, 118, 119, 125, 131, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 157, 158, 159, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 176, 177, 179, 180, 181, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 213, 214, 215, 216, 219, 221, 224, 226, 227, 229, 232, 234, 237, 238, 239, 242, 254, 255, 256, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 281, 287, 289, 295, 296, 311, 316, 326, 327, 328, 351, 352, 356, 357, 360, 361, 366, 367, 368, 373, 385, 407, 413, 414, 424, 431, 434, 440, 442, 448, 450, 451, 459, 466, 470, 472, 473, 475, 476, 477, 487, 491, 498, 520, 522, 533, 554, 555, 571, 574, 576, 584, 601, 607, 644, 659, 675, 690, 695, 697, 698, 699, 740, 743, 745, 758, 759, 763, 765, 772, 773, 777, 782, 785, 787, 788, 789, 795, 800, 812, 830, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 845, 849, 850, 851, 852, 853, 854, 855, 857, 858, 860, 861, 875], "first": [4, 5, 7, 10, 11, 16, 19, 21, 28, 29, 32, 38, 39, 41, 42, 43, 44, 45, 47, 63, 69, 70, 78, 81, 82, 85, 86, 88, 92, 93, 101, 102, 106, 107, 110, 111, 112, 113, 118, 125, 129, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 144, 145, 148, 149, 150, 155, 156, 158, 159, 160, 161, 165, 166, 167, 168, 170, 171, 174, 175, 176, 178, 179, 180, 181, 182, 183, 187, 189, 190, 193, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 220, 221, 224, 225, 226, 228, 229, 232, 233, 234, 237, 238, 239, 242, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 281, 282, 283, 286, 294, 295, 296, 300, 315, 320, 321, 352, 360, 361, 366, 372, 382, 407, 413, 414, 422, 430, 431, 432, 435, 436, 438, 439, 441, 445, 446, 447, 448, 449, 455, 457, 465, 474, 475, 476, 495, 498, 499, 510, 516, 517, 521, 525, 531, 532, 550, 554, 555, 556, 558, 560, 563, 565, 569, 592, 597, 609, 610, 613, 617, 628, 640, 645, 647, 648, 651, 653, 654, 669, 670, 671, 676, 680, 681, 682, 683, 685, 686, 687, 689, 695, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 730, 732, 742, 747, 750, 758, 766, 770, 772, 773, 774, 775, 778, 779, 781, 785, 786, 787, 789, 794, 795, 796, 797, 800, 802, 804, 805, 820, 821, 830, 832, 833, 842, 850, 851, 854, 857, 860, 861, 875], "limo_epoch": 4, "column": [4, 10, 31, 92, 93, 99, 110, 139, 140, 142, 144, 150, 165, 171, 174, 187, 190, 194, 205, 208, 209, 213, 224, 225, 256, 257, 259, 262, 263, 264, 265, 267, 269, 270, 271, 273, 276, 277, 278, 297, 325, 366, 407, 414, 431, 435, 436, 448, 449, 465, 475, 476, 516, 534, 537, 550, 554, 555, 556, 601, 608, 609, 610, 617, 680, 681, 695, 697, 698, 699, 742, 774, 775, 781, 782, 785, 793, 794, 797, 802, 820, 830, 857, 860, 875], "1055": 4, "process": [4, 7, 27, 28, 32, 34, 45, 51, 59, 67, 68, 78, 82, 86, 99, 120, 133, 134, 141, 142, 143, 148, 150, 151, 154, 155, 159, 160, 161, 165, 171, 176, 181, 183, 187, 198, 199, 200, 201, 203, 204, 205, 206, 208, 210, 213, 215, 224, 225, 226, 234, 239, 242, 254, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 272, 273, 276, 277, 278, 285, 287, 289, 295, 296, 298, 352, 356, 357, 360, 366, 367, 368, 382, 390, 407, 409, 414, 415, 420, 424, 430, 431, 446, 450, 451, 470, 472, 473, 475, 476, 477, 486, 495, 528, 533, 555, 556, 565, 574, 583, 584, 591, 598, 600, 613, 644, 648, 668, 671, 682, 683, 685, 686, 695, 697, 698, 699, 722, 772, 776, 782, 795, 796, 832, 841, 842, 846, 849, 850, 851, 854, 856, 857, 860, 861, 863, 864, 865, 875], "epochsarrai": [4, 187, 219, 257, 262, 265, 359, 476, 608, 865, 875], "readi": [4, 5, 11, 13, 14, 15, 16, 18, 19, 27, 28, 29, 32, 33, 34, 42, 45, 46, 49, 61, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 81, 82, 86, 90, 91, 94, 95, 97, 98, 101, 102, 105, 107, 108, 109, 111, 112, 113, 115, 116, 119, 120, 121, 122, 127, 128, 130, 131, 133, 134, 140, 143, 145, 149, 150, 151, 155, 157, 158, 160, 161, 165, 166, 167, 168, 170, 171, 176, 179, 181, 182, 189, 194, 197, 201, 202, 203, 204, 205, 206, 207, 208, 213, 216, 219, 220, 221, 226, 227, 228, 229, 232, 234, 238, 264, 267, 273, 475, 584, 613, 623, 742, 761, 766, 834, 851], "goodb": [4, 8, 10, 12, 22, 28, 37, 38, 44, 95, 108, 109, 125, 126, 133, 136, 200, 203, 204, 209, 214, 216, 221, 224, 225, 228, 232, 233, 234, 239, 242, 254, 257, 262, 263, 264, 265, 269, 270, 272, 273, 274, 276, 277, 278, 285, 352, 358, 377, 399, 400, 428, 442, 444, 475, 476, 538, 539, 571, 572, 613, 614, 648, 676, 678, 681, 689, 695, 698, 708, 722, 723, 725, 726, 742, 766, 772, 795, 802, 834, 851, 854, 857, 875], "531": [4, 193, 229], "visualis": [4, 27, 29, 30, 48, 49, 50, 54, 55, 76, 83, 99, 164, 175, 209, 230, 231, 256, 262, 264, 265, 267, 316, 322, 351, 476, 503, 586, 590, 606, 686], "distribut": [4, 19, 22, 26, 46, 48, 54, 55, 59, 60, 71, 114, 144, 149, 154, 161, 164, 165, 176, 185, 186, 190, 203, 205, 224, 226, 229, 232, 233, 238, 239, 242, 259, 260, 262, 263, 264, 265, 266, 267, 271, 273, 362, 472, 475, 476, 521, 522, 533, 563, 590, 604, 613, 615, 628, 643, 647, 677, 680, 682, 683, 685, 686, 697, 699, 742, 751, 758, 770, 803, 810, 830, 839, 840, 841, 850, 851, 854, 856, 857, 875], "appear": [4, 92, 99, 133, 139, 143, 157, 167, 171, 179, 182, 190, 197, 200, 201, 206, 215, 254, 262, 263, 264, 265, 272, 428, 475, 476, 486, 510, 760, 798, 830, 834, 851, 857, 860, 875], "clearli": [4, 21, 125, 133, 143, 151, 165, 190, 201, 203, 205, 207], "group": [4, 27, 69, 107, 110, 120, 128, 133, 136, 139, 141, 142, 144, 150, 154, 159, 160, 166, 171, 177, 200, 216, 221, 224, 225, 228, 229, 233, 234, 242, 254, 262, 263, 264, 265, 267, 272, 295, 296, 312, 322, 424, 433, 434, 436, 467, 475, 476, 491, 555, 569, 644, 660, 677, 683, 686, 747, 772, 773, 778, 795, 798, 830, 834, 841, 857, 865, 875], "order": [4, 16, 18, 19, 27, 31, 34, 38, 47, 68, 69, 73, 80, 82, 86, 90, 92, 105, 109, 110, 112, 115, 119, 121, 126, 135, 142, 143, 144, 148, 155, 159, 160, 161, 164, 165, 168, 171, 176, 187, 189, 193, 197, 198, 199, 202, 203, 204, 205, 207, 208, 213, 216, 221, 229, 234, 242, 254, 255, 257, 259, 262, 263, 264, 265, 266, 267, 268, 271, 272, 286, 300, 315, 322, 339, 341, 345, 352, 359, 361, 365, 407, 409, 413, 414, 418, 428, 432, 436, 442, 443, 444, 445, 446, 451, 460, 475, 476, 482, 483, 490, 521, 528, 529, 531, 532, 546, 547, 548, 554, 555, 563, 565, 566, 567, 568, 574, 583, 597, 629, 640, 672, 677, 691, 695, 696, 697, 698, 699, 707, 708, 712, 728, 730, 732, 739, 747, 759, 772, 773, 774, 778, 781, 783, 785, 789, 790, 794, 795, 797, 798, 802, 803, 804, 832, 834, 850, 854, 857, 860, 875], "suptitl": [4, 18, 22, 37, 42, 45, 69, 72, 78, 85, 88, 101, 107, 110, 114, 118, 131, 133, 140, 143, 145, 150, 159, 175, 190, 193, 198, 200, 201, 203, 204, 205, 206, 208, 209, 224, 875], "As": [4, 38, 43, 69, 86, 92, 110, 133, 135, 139, 142, 144, 148, 149, 150, 156, 159, 165, 166, 167, 168, 169, 171, 174, 179, 187, 190, 193, 194, 197, 198, 199, 200, 202, 203, 205, 206, 208, 213, 214, 215, 216, 219, 226, 228, 234, 237, 239, 244, 415, 436, 492, 503, 569, 681, 690, 742, 766, 850, 856, 857, 860, 863, 875], "seen": [4, 12, 27, 73, 139, 142, 143, 145, 149, 150, 155, 168, 169, 194, 197, 201, 204, 205, 209, 210, 213, 216, 295, 414, 647, 648, 723, 726, 834, 857, 858, 860], "abov": [4, 21, 42, 43, 45, 49, 60, 69, 73, 74, 80, 86, 112, 114, 133, 139, 141, 143, 149, 150, 155, 159, 160, 165, 166, 167, 169, 170, 171, 174, 187, 189, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 214, 216, 219, 221, 228, 229, 239, 242, 256, 259, 262, 263, 264, 265, 267, 275, 351, 407, 409, 414, 418, 431, 437, 438, 440, 443, 445, 475, 476, 477, 483, 503, 554, 555, 557, 574, 582, 592, 682, 683, 685, 686, 695, 697, 699, 723, 726, 732, 742, 766, 773, 774, 781, 785, 787, 797, 798, 802, 804, 830, 833, 834, 839, 850, 854, 857, 858, 861], "These": [4, 27, 45, 54, 55, 60, 69, 92, 133, 136, 137, 143, 144, 146, 150, 152, 154, 157, 159, 161, 162, 164, 165, 166, 169, 171, 172, 177, 179, 185, 187, 188, 189, 191, 193, 194, 195, 199, 200, 203, 207, 209, 211, 216, 217, 221, 222, 224, 225, 230, 235, 239, 240, 253, 262, 263, 264, 265, 267, 279, 303, 304, 323, 352, 356, 357, 358, 426, 475, 476, 519, 555, 565, 574, 583, 614, 652, 657, 681, 695, 697, 698, 699, 830, 834, 841, 850, 851, 854, 856, 857, 858, 860, 863, 875], "easili": [4, 43, 44, 99, 139, 143, 148, 159, 167, 169, 187, 189, 197, 200, 203, 205, 206, 213, 214, 215, 216, 232, 239, 434, 475, 476, 574, 681, 834, 841, 850, 857, 875], "access": [4, 52, 99, 130, 133, 157, 165, 167, 168, 174, 204, 213, 215, 216, 237, 242, 255, 257, 262, 263, 266, 275, 475, 476, 607, 609, 697, 698, 699, 724, 727, 834, 840, 852, 856, 860, 875], "call": [4, 8, 9, 18, 31, 43, 44, 69, 81, 85, 86, 92, 110, 115, 126, 133, 139, 141, 143, 144, 145, 148, 149, 150, 154, 155, 157, 158, 159, 160, 165, 167, 169, 170, 171, 174, 177, 181, 189, 194, 197, 198, 200, 201, 203, 204, 208, 210, 213, 214, 215, 216, 224, 226, 228, 229, 234, 238, 239, 254, 260, 261, 262, 263, 264, 265, 268, 269, 270, 272, 273, 274, 276, 277, 278, 280, 306, 310, 352, 353, 355, 357, 358, 363, 410, 413, 417, 420, 423, 424, 428, 440, 442, 450, 463, 465, 475, 476, 483, 490, 503, 514, 517, 518, 522, 523, 524, 525, 526, 528, 529, 538, 539, 555, 560, 565, 566, 567, 568, 571, 573, 574, 583, 598, 634, 643, 646, 647, 648, 660, 665, 669, 682, 683, 684, 685, 686, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 711, 713, 714, 721, 722, 723, 724, 725, 726, 739, 740, 742, 759, 766, 772, 773, 774, 777, 780, 781, 796, 804, 830, 832, 833, 834, 838, 842, 852, 854, 856, 857, 860, 861, 865, 875], "shown": [4, 32, 52, 69, 78, 81, 92, 99, 116, 118, 125, 133, 135, 141, 148, 149, 150, 155, 157, 161, 165, 171, 179, 181, 200, 204, 209, 213, 214, 216, 229, 259, 260, 261, 262, 263, 264, 265, 269, 270, 271, 273, 276, 277, 278, 310, 407, 414, 466, 475, 476, 506, 533, 554, 555, 569, 695, 697, 698, 699, 742, 758, 759, 760, 766, 767, 769, 770, 772, 774, 776, 778, 779, 780, 781, 783, 785, 792, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 812, 857, 858, 860, 875], "below": [4, 10, 19, 43, 47, 74, 110, 112, 125, 133, 139, 150, 154, 160, 165, 167, 169, 171, 189, 193, 200, 201, 203, 204, 205, 206, 208, 209, 210, 215, 224, 229, 232, 234, 237, 239, 242, 257, 259, 260, 261, 262, 263, 264, 265, 269, 270, 273, 274, 275, 276, 277, 278, 304, 310, 358, 409, 418, 426, 434, 443, 445, 466, 475, 476, 492, 522, 555, 557, 563, 565, 647, 681, 682, 683, 685, 686, 695, 698, 742, 761, 773, 778, 782, 785, 787, 800, 805, 806, 830, 834, 840, 850, 854, 856, 857, 861, 865, 875], "also": [4, 10, 19, 21, 27, 28, 29, 30, 32, 38, 39, 41, 42, 43, 45, 47, 60, 62, 68, 69, 70, 77, 78, 79, 81, 82, 92, 93, 99, 102, 105, 107, 110, 112, 114, 115, 118, 124, 125, 133, 134, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 154, 155, 156, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 179, 180, 181, 182, 183, 187, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 214, 215, 216, 219, 221, 224, 225, 226, 228, 229, 232, 234, 237, 238, 239, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 295, 296, 302, 303, 304, 308, 310, 312, 320, 321, 325, 327, 328, 338, 345, 352, 357, 358, 364, 366, 369, 377, 384, 407, 409, 414, 419, 423, 426, 428, 431, 442, 443, 445, 446, 447, 448, 450, 457, 460, 467, 470, 472, 473, 475, 476, 483, 487, 495, 499, 514, 517, 518, 528, 529, 530, 533, 552, 554, 555, 557, 558, 564, 565, 567, 569, 570, 571, 572, 575, 576, 577, 578, 580, 589, 591, 597, 598, 605, 613, 630, 631, 634, 640, 643, 644, 651, 660, 663, 681, 682, 687, 690, 695, 697, 698, 699, 703, 704, 705, 706, 708, 723, 726, 732, 740, 742, 758, 759, 765, 766, 767, 770, 772, 773, 774, 776, 778, 779, 781, 782, 784, 785, 786, 792, 793, 794, 795, 796, 797, 798, 800, 802, 804, 806, 808, 815, 830, 832, 834, 837, 838, 839, 840, 841, 842, 849, 850, 851, 852, 854, 855, 856, 857, 858, 859, 860, 863, 865, 875], "conveni": [4, 11, 45, 69, 74, 133, 136, 141, 150, 157, 160, 165, 168, 170, 171, 180, 194, 197, 200, 204, 205, 214, 219, 224, 225, 226, 229, 232, 233, 234, 238, 242, 262, 263, 264, 265, 266, 272, 474, 475, 476, 481, 506, 528, 555, 563, 571, 572, 637, 640, 642, 685, 686, 695, 697, 698, 699, 755, 832, 834, 838, 850, 851, 857, 875], "head": [4, 5, 10, 22, 26, 41, 43, 45, 50, 69, 70, 77, 78, 99, 107, 110, 113, 116, 118, 123, 125, 133, 134, 135, 142, 144, 149, 150, 156, 158, 162, 163, 164, 165, 168, 169, 171, 174, 175, 176, 177, 179, 180, 182, 183, 184, 187, 189, 190, 197, 198, 203, 205, 206, 208, 210, 211, 212, 213, 225, 239, 242, 259, 260, 262, 263, 264, 265, 266, 267, 271, 272, 275, 300, 302, 303, 304, 305, 306, 307, 310, 313, 314, 322, 323, 326, 328, 333, 339, 340, 341, 342, 343, 345, 347, 348, 349, 350, 352, 358, 359, 361, 362, 363, 364, 370, 383, 386, 407, 414, 426, 428, 450, 457, 458, 466, 467, 468, 469, 475, 476, 480, 482, 486, 487, 488, 494, 499, 501, 505, 507, 512, 513, 514, 517, 518, 519, 554, 555, 559, 562, 564, 565, 566, 569, 574, 580, 583, 584, 603, 608, 609, 612, 615, 626, 636, 643, 644, 646, 647, 648, 652, 657, 660, 663, 690, 695, 697, 699, 729, 730, 742, 758, 759, 760, 765, 766, 770, 774, 776, 777, 778, 779, 781, 782, 784, 785, 792, 794, 796, 797, 798, 802, 804, 810, 821, 822, 823, 828, 830, 834, 851, 860, 863, 864, 865, 875], "491210": 4, "235572": 4, "043707": 4, "642398": 4, "659978": 4, "now": [4, 19, 24, 26, 32, 41, 45, 50, 69, 71, 73, 82, 85, 86, 107, 109, 110, 111, 118, 125, 132, 133, 134, 135, 136, 139, 140, 143, 144, 145, 150, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 171, 175, 177, 178, 179, 181, 182, 193, 197, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 215, 221, 226, 228, 229, 232, 233, 234, 238, 239, 260, 262, 263, 264, 265, 318, 460, 475, 476, 640, 743, 763, 770, 834, 857, 860, 875], "let": [4, 10, 18, 21, 26, 32, 47, 55, 69, 70, 72, 85, 107, 111, 119, 125, 133, 134, 135, 139, 140, 141, 143, 145, 149, 150, 151, 155, 157, 158, 159, 161, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 187, 188, 194, 197, 198, 199, 200, 201, 202, 203, 205, 207, 208, 210, 213, 221, 224, 228, 229, 232, 233, 234, 238, 239, 508, 711, 721, 743, 834, 837, 875], "closer": [4, 24, 41, 107, 140, 157, 208, 224, 259, 262, 263, 264, 265, 271, 407, 414, 475, 476, 554, 555, 569, 644, 695, 697, 699, 759, 774, 781, 785, 794, 797, 802, 804], "want": [4, 41, 50, 81, 92, 110, 113, 118, 125, 133, 134, 135, 139, 140, 141, 142, 143, 144, 148, 149, 150, 157, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 177, 179, 188, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 213, 214, 215, 219, 220, 224, 226, 228, 229, 232, 233, 239, 254, 255, 262, 263, 264, 265, 269, 273, 277, 316, 373, 431, 436, 475, 476, 555, 571, 765, 795, 800, 812, 833, 834, 837, 841, 842, 854, 855, 856, 857, 860, 861], "includ": [4, 7, 28, 37, 41, 68, 69, 80, 84, 94, 95, 97, 101, 102, 105, 108, 111, 112, 121, 130, 133, 134, 136, 139, 141, 142, 143, 145, 148, 150, 151, 154, 158, 159, 161, 165, 166, 167, 168, 169, 171, 175, 179, 181, 184, 187, 188, 189, 194, 197, 198, 199, 200, 202, 203, 204, 205, 206, 208, 209, 213, 215, 216, 219, 224, 226, 227, 228, 234, 242, 248, 253, 255, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 294, 296, 308, 311, 312, 316, 325, 327, 352, 357, 358, 365, 366, 409, 414, 423, 428, 431, 435, 436, 445, 446, 448, 460, 461, 474, 475, 476, 483, 486, 488, 490, 491, 492, 497, 501, 516, 518, 523, 525, 533, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 562, 563, 565, 566, 570, 571, 572, 574, 577, 580, 582, 583, 589, 591, 594, 598, 607, 609, 610, 613, 614, 615, 624, 663, 680, 681, 690, 694, 695, 697, 698, 699, 703, 704, 705, 706, 708, 712, 724, 726, 727, 732, 738, 742, 766, 772, 773, 774, 775, 776, 778, 779, 786, 787, 791, 795, 796, 802, 820, 830, 832, 834, 836, 837, 838, 839, 840, 841, 842, 846, 850, 851, 852, 853, 854, 856, 857, 858, 859, 860, 861, 863, 875], "tabl": [4, 41, 121, 133, 142, 143, 170, 171, 184, 188, 200, 213, 214, 237, 262, 263, 264, 265, 267, 269, 270, 272, 273, 275, 276, 277, 278, 459, 460, 475, 476, 533, 644, 742, 761, 766, 773, 800, 805, 806, 807, 811, 825, 830, 857, 860, 861, 875], "epochs_summari": 4, "describ": [4, 13, 16, 73, 97, 111, 115, 148, 150, 155, 157, 161, 164, 165, 167, 168, 169, 170, 171, 187, 193, 197, 199, 204, 205, 206, 208, 209, 214, 215, 221, 222, 225, 230, 239, 242, 264, 265, 295, 351, 352, 358, 407, 415, 428, 431, 439, 475, 476, 554, 555, 556, 583, 619, 645, 665, 666, 667, 668, 669, 670, 671, 709, 711, 714, 721, 725, 782, 788, 830, 832, 850, 854, 856, 857, 860, 863, 875], "round": [4, 37, 107, 139, 144, 148, 159, 167, 171, 193, 200, 201, 203, 204, 210, 213, 221, 239, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 436, 475, 476, 695, 698, 875], "count": [4, 22, 69, 71, 139, 170, 209, 215, 224, 228, 232, 234, 257, 262, 263, 264, 265, 295, 296, 352, 356, 357, 366, 367, 368, 407, 414, 430, 450, 451, 470, 472, 473, 515, 533, 565, 606, 682, 683, 685, 686, 782, 875], "uniqu": [4, 10, 18, 99, 142, 149, 150, 165, 167, 214, 224, 229, 260, 261, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 319, 436, 465, 475, 476, 517, 555, 607, 668, 671, 695, 697, 698, 699, 723, 726, 766, 776, 857, 860, 875], "nan": [4, 68, 69, 133, 143, 208, 226, 227, 228, 229, 239, 475, 476, 503, 561, 574, 875], "top": [4, 72, 110, 113, 118, 125, 135, 139, 150, 157, 159, 160, 171, 175, 180, 198, 201, 203, 204, 205, 206, 209, 213, 215, 216, 224, 254, 262, 263, 264, 265, 270, 276, 278, 742, 743, 760, 772, 776, 805, 830, 834, 857, 860, 875], "freq": [4, 9, 21, 32, 33, 34, 67, 102, 105, 107, 110, 112, 131, 136, 165, 193, 197, 200, 201, 210, 226, 227, 228, 229, 237, 238, 239, 241, 254, 339, 341, 420, 446, 475, 476, 539, 675, 695, 696, 697, 698, 699, 709, 711, 713, 714, 719, 721, 722, 723, 724, 725, 726, 765, 783, 790, 863, 875], "std": [4, 16, 150, 190, 221, 234, 237, 238, 239, 262, 263, 264, 265, 312, 407, 414, 475, 476, 511, 695, 766, 773, 776, 779, 796], "min": [4, 9, 21, 22, 94, 95, 110, 112, 114, 135, 136, 140, 145, 156, 171, 193, 197, 203, 205, 213, 224, 225, 226, 227, 228, 229, 232, 233, 234, 259, 262, 263, 264, 265, 269, 270, 271, 273, 276, 277, 278, 319, 407, 409, 414, 418, 440, 443, 445, 475, 476, 554, 555, 567, 575, 576, 578, 587, 591, 592, 695, 697, 699, 759, 773, 774, 781, 785, 794, 795, 796, 797, 800, 802, 803, 804, 805, 815], "619": [4, 229], "852": [4, 194, 229], "084": 4, "875": [4, 142, 181, 194, 207, 857], "max": [4, 5, 8, 9, 19, 21, 22, 31, 32, 33, 34, 35, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 60, 79, 82, 88, 91, 92, 94, 98, 107, 110, 113, 114, 119, 133, 135, 140, 143, 149, 151, 156, 159, 161, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 193, 194, 201, 208, 213, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 253, 259, 262, 263, 264, 265, 269, 270, 271, 273, 276, 277, 278, 295, 296, 319, 356, 407, 409, 414, 418, 440, 441, 443, 445, 475, 476, 506, 531, 532, 537, 554, 555, 576, 587, 592, 682, 683, 684, 685, 686, 688, 695, 697, 699, 711, 721, 742, 750, 759, 773, 774, 777, 781, 785, 794, 796, 797, 800, 802, 803, 804, 805, 815, 862, 875], "642": [4, 19, 59, 229, 242, 473], "provid": [4, 5, 18, 19, 27, 43, 44, 65, 78, 88, 91, 92, 93, 101, 136, 139, 141, 145, 148, 149, 150, 154, 155, 159, 160, 164, 165, 166, 167, 168, 169, 170, 171, 174, 183, 184, 187, 188, 189, 194, 197, 198, 199, 200, 202, 203, 204, 205, 206, 208, 213, 214, 215, 216, 219, 221, 225, 226, 229, 242, 243, 254, 256, 257, 259, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 283, 286, 295, 296, 300, 301, 308, 311, 319, 322, 327, 351, 353, 354, 355, 356, 357, 358, 363, 366, 369, 382, 383, 386, 407, 409, 414, 423, 428, 431, 434, 445, 446, 448, 450, 460, 466, 474, 475, 476, 494, 495, 505, 506, 508, 517, 521, 542, 554, 555, 557, 558, 565, 570, 571, 572, 574, 577, 583, 589, 591, 598, 608, 612, 623, 634, 644, 645, 660, 663, 680, 681, 683, 685, 686, 689, 695, 696, 697, 698, 699, 703, 704, 705, 706, 708, 722, 723, 724, 725, 726, 727, 730, 731, 732, 739, 742, 758, 759, 761, 766, 768, 772, 773, 774, 776, 777, 778, 779, 781, 784, 785, 789, 791, 794, 795, 796, 797, 800, 802, 804, 805, 806, 830, 832, 834, 835, 837, 838, 840, 841, 846, 849, 850, 851, 852, 854, 856, 857, 858, 860, 863, 865, 875], "command": [4, 121, 133, 150, 154, 157, 159, 170, 184, 188, 262, 263, 267, 358, 466, 475, 476, 512, 555, 636, 772, 789, 795, 832, 833, 837, 838, 839, 840, 841, 842, 846, 850, 852, 865, 875], "ran": [4, 229, 267], "befor": [4, 5, 21, 24, 26, 41, 44, 45, 50, 61, 67, 69, 80, 84, 86, 88, 92, 117, 125, 133, 135, 136, 139, 140, 141, 142, 143, 144, 148, 150, 155, 156, 157, 159, 160, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 179, 180, 182, 183, 184, 187, 190, 194, 197, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 221, 237, 239, 254, 255, 257, 259, 262, 263, 264, 265, 267, 269, 270, 272, 273, 274, 276, 277, 278, 295, 312, 339, 357, 360, 367, 368, 407, 413, 414, 416, 419, 431, 437, 438, 439, 440, 441, 442, 448, 449, 451, 475, 476, 515, 528, 529, 531, 532, 538, 539, 554, 555, 558, 567, 568, 571, 572, 574, 575, 598, 606, 613, 618, 651, 652, 653, 654, 655, 657, 659, 681, 682, 683, 685, 686, 690, 696, 697, 699, 759, 768, 773, 774, 776, 778, 780, 781, 786, 787, 788, 793, 796, 812, 825, 832, 842, 850, 851, 854, 856, 857, 860, 875], "There": [4, 73, 81, 118, 125, 140, 143, 150, 155, 157, 158, 165, 169, 170, 171, 176, 179, 189, 197, 199, 200, 201, 203, 204, 208, 210, 213, 215, 224, 237, 262, 399, 431, 555, 590, 644, 834, 838, 841, 851, 854, 855, 857, 859, 860], "subdivid": [4, 159, 160, 254, 269, 273, 277, 381, 643, 800, 875], "particular": [4, 27, 124, 133, 139, 140, 154, 165, 167, 171, 174, 193, 194, 200, 203, 204, 213, 226, 234, 254, 256, 262, 263, 272, 301, 424, 451, 475, 476, 483, 618, 675, 682, 683, 685, 686, 772, 795, 832, 854, 856, 857, 858, 863], "addit": [4, 34, 42, 45, 60, 61, 69, 74, 80, 110, 112, 133, 134, 139, 141, 144, 149, 151, 155, 159, 160, 161, 165, 169, 187, 188, 189, 190, 193, 194, 199, 200, 203, 204, 205, 206, 208, 213, 215, 216, 219, 229, 239, 254, 259, 262, 263, 264, 265, 269, 270, 273, 274, 275, 276, 277, 278, 333, 351, 352, 357, 382, 407, 408, 409, 412, 414, 415, 418, 428, 431, 438, 440, 445, 475, 476, 481, 522, 523, 524, 525, 526, 528, 529, 535, 538, 539, 552, 553, 554, 555, 556, 567, 568, 584, 613, 639, 649, 681, 682, 683, 685, 686, 694, 695, 697, 698, 699, 714, 722, 723, 725, 726, 742, 755, 759, 772, 774, 776, 781, 787, 793, 795, 797, 800, 802, 804, 805, 834, 837, 838, 840, 841, 850, 851, 853, 854, 857, 860, 861, 863, 875], "valu": [4, 5, 7, 8, 9, 10, 16, 19, 21, 22, 24, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 58, 59, 68, 70, 88, 91, 92, 94, 99, 101, 102, 107, 110, 112, 118, 119, 125, 129, 130, 133, 134, 135, 136, 139, 140, 141, 142, 143, 145, 148, 149, 150, 151, 155, 159, 161, 165, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 199, 200, 201, 203, 204, 205, 208, 209, 210, 213, 215, 219, 220, 221, 224, 225, 226, 228, 229, 232, 233, 234, 237, 238, 242, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 280, 281, 285, 286, 295, 296, 298, 300, 304, 307, 308, 312, 319, 323, 325, 327, 328, 346, 347, 352, 353, 355, 356, 357, 358, 363, 366, 367, 368, 372, 382, 399, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 426, 428, 429, 431, 435, 436, 440, 441, 445, 446, 447, 448, 449, 450, 451, 452, 455, 460, 463, 465, 466, 467, 470, 472, 473, 475, 476, 477, 483, 485, 490, 497, 499, 503, 508, 510, 511, 512, 514, 515, 517, 518, 519, 521, 522, 526, 528, 529, 530, 531, 532, 533, 536, 538, 539, 543, 554, 555, 556, 557, 558, 560, 561, 564, 567, 568, 569, 570, 571, 572, 574, 576, 577, 580, 581, 589, 591, 592, 594, 598, 600, 606, 610, 613, 617, 626, 633, 637, 639, 640, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 668, 671, 673, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 689, 690, 691, 693, 695, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 713, 714, 722, 723, 724, 725, 726, 730, 731, 732, 742, 745, 751, 758, 759, 761, 764, 766, 767, 770, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 785, 786, 793, 794, 795, 796, 797, 800, 802, 803, 804, 805, 806, 807, 812, 815, 828, 830, 834, 850, 851, 854, 857, 860, 875], "z": [4, 5, 11, 16, 18, 24, 41, 45, 50, 126, 150, 155, 157, 158, 159, 168, 169, 174, 175, 179, 180, 182, 183, 184, 188, 200, 204, 206, 242, 259, 262, 263, 264, 265, 266, 270, 271, 276, 278, 303, 304, 310, 322, 333, 342, 343, 407, 414, 426, 475, 476, 487, 522, 554, 555, 560, 564, 569, 574, 615, 647, 648, 695, 697, 699, 732, 733, 735, 742, 759, 766, 772, 774, 776, 778, 781, 782, 784, 785, 789, 792, 794, 795, 796, 797, 798, 802, 804, 810, 811, 822, 830, 840, 857, 875], "score": [4, 7, 8, 9, 10, 11, 13, 15, 16, 18, 19, 73, 81, 136, 171, 193, 194, 203, 208, 272, 407, 410, 411, 413, 414, 417, 424, 555, 560, 569, 574, 651, 682, 683, 685, 686, 788, 811, 851, 854, 875], "thei": [4, 5, 26, 41, 45, 47, 50, 69, 70, 73, 80, 81, 92, 105, 112, 117, 133, 139, 140, 141, 143, 148, 150, 151, 157, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 175, 179, 180, 181, 187, 189, 190, 194, 197, 198, 199, 200, 201, 203, 204, 205, 208, 209, 210, 213, 214, 215, 216, 229, 232, 242, 255, 257, 262, 263, 264, 265, 267, 272, 295, 305, 307, 322, 323, 332, 352, 359, 361, 428, 430, 436, 440, 442, 449, 475, 476, 483, 490, 495, 497, 499, 515, 531, 532, 544, 555, 566, 573, 574, 583, 598, 606, 607, 609, 640, 698, 737, 742, 759, 775, 776, 779, 825, 830, 832, 834, 837, 841, 850, 852, 856, 857, 875], "have": [4, 10, 19, 30, 31, 34, 35, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 69, 70, 73, 77, 78, 81, 82, 84, 85, 88, 92, 93, 99, 101, 102, 110, 113, 114, 115, 117, 118, 125, 129, 132, 133, 134, 136, 139, 141, 142, 143, 144, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 177, 178, 180, 181, 182, 187, 188, 189, 190, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 228, 229, 232, 234, 237, 239, 253, 254, 255, 257, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 289, 290, 293, 295, 296, 304, 312, 315, 318, 328, 351, 352, 356, 357, 358, 363, 366, 367, 368, 399, 407, 410, 411, 413, 414, 415, 416, 417, 419, 420, 421, 426, 427, 428, 431, 432, 441, 442, 447, 450, 451, 457, 465, 467, 470, 472, 473, 474, 475, 476, 483, 486, 487, 490, 492, 495, 498, 514, 516, 524, 526, 529, 533, 541, 550, 554, 555, 556, 565, 566, 569, 571, 572, 573, 574, 576, 583, 601, 603, 613, 632, 634, 637, 640, 645, 646, 647, 648, 649, 660, 665, 669, 677, 681, 695, 696, 697, 698, 699, 714, 715, 722, 723, 732, 742, 746, 747, 759, 765, 766, 772, 773, 774, 776, 779, 781, 782, 785, 794, 796, 797, 802, 803, 804, 808, 812, 823, 825, 830, 832, 835, 839, 840, 842, 846, 851, 852, 855, 856, 857, 860, 861, 863, 875], "standard": [4, 8, 28, 34, 41, 44, 46, 69, 73, 81, 92, 107, 119, 133, 134, 140, 148, 149, 150, 154, 158, 159, 168, 169, 170, 181, 190, 193, 194, 198, 200, 203, 206, 213, 219, 225, 234, 238, 242, 254, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 275, 276, 277, 278, 285, 310, 312, 321, 326, 328, 385, 407, 414, 416, 427, 440, 441, 456, 460, 463, 475, 476, 483, 487, 490, 499, 503, 522, 538, 539, 549, 554, 555, 574, 609, 616, 640, 644, 677, 680, 695, 697, 698, 699, 707, 708, 742, 759, 760, 766, 767, 773, 774, 776, 781, 782, 785, 787, 794, 797, 800, 802, 803, 804, 806, 830, 832, 850, 851, 852, 854, 857, 860, 863, 865, 875], "deviat": [4, 54, 55, 88, 95, 98, 119, 149, 150, 177, 194, 203, 207, 224, 226, 238, 259, 262, 263, 264, 265, 285, 312, 407, 537, 538, 539, 555, 574, 657, 677, 695, 697, 698, 699, 766, 767, 773, 776, 782, 785, 787, 802, 803, 830, 857, 875], "how": [4, 5, 9, 10, 13, 18, 19, 22, 26, 27, 31, 33, 43, 44, 45, 47, 58, 62, 64, 66, 67, 68, 69, 70, 74, 77, 88, 92, 93, 96, 97, 103, 111, 114, 115, 118, 120, 122, 123, 125, 127, 128, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 154, 155, 156, 157, 158, 160, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 179, 180, 181, 182, 187, 189, 193, 194, 199, 200, 201, 202, 203, 204, 206, 207, 209, 213, 214, 216, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 234, 237, 238, 239, 242, 255, 257, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 273, 275, 276, 277, 278, 295, 296, 306, 310, 311, 336, 340, 346, 358, 363, 364, 365, 370, 407, 413, 414, 419, 434, 449, 451, 465, 466, 470, 472, 473, 475, 476, 480, 488, 495, 496, 499, 506, 522, 531, 532, 533, 554, 555, 558, 566, 574, 583, 584, 625, 626, 627, 628, 636, 640, 643, 644, 682, 683, 685, 686, 693, 695, 696, 697, 698, 699, 714, 742, 743, 750, 758, 759, 760, 763, 766, 768, 772, 773, 774, 777, 781, 785, 786, 787, 788, 794, 795, 797, 800, 801, 802, 804, 805, 810, 812, 830, 832, 834, 835, 842, 850, 851, 856, 857, 858, 860, 861, 863, 875], "onli": [4, 8, 10, 11, 12, 19, 21, 22, 31, 34, 39, 41, 44, 45, 47, 49, 50, 55, 63, 69, 73, 77, 80, 81, 86, 88, 91, 92, 93, 94, 95, 101, 105, 107, 110, 112, 113, 114, 115, 118, 125, 129, 131, 135, 136, 139, 140, 141, 142, 148, 149, 150, 156, 157, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 177, 179, 182, 187, 188, 189, 190, 194, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 213, 214, 215, 216, 219, 220, 221, 224, 226, 227, 228, 229, 232, 233, 234, 238, 239, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 301, 302, 303, 304, 305, 306, 307, 310, 311, 312, 314, 315, 316, 317, 319, 320, 321, 323, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 424, 426, 428, 431, 432, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 450, 451, 452, 455, 457, 458, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 517, 518, 519, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 548, 551, 552, 553, 554, 555, 557, 558, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 586, 587, 590, 591, 592, 595, 596, 597, 598, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 613, 614, 615, 617, 618, 619, 620, 621, 623, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 640, 642, 643, 644, 646, 647, 648, 649, 658, 659, 660, 661, 663, 665, 666, 667, 668, 669, 670, 671, 672, 681, 682, 683, 684, 685, 686, 690, 691, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 713, 714, 717, 718, 722, 723, 724, 725, 726, 727, 728, 731, 732, 737, 741, 742, 750, 758, 759, 760, 761, 763, 766, 767, 770, 772, 774, 775, 776, 777, 778, 780, 781, 782, 783, 784, 785, 786, 787, 789, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 811, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 832, 834, 841, 850, 851, 854, 855, 856, 857, 858, 860, 875], "500": [4, 10, 11, 13, 22, 69, 78, 79, 84, 86, 114, 134, 140, 142, 144, 180, 183, 189, 193, 194, 200, 203, 207, 209, 210, 221, 224, 229, 555], "ts_arg": [4, 99, 126, 194, 209, 225, 262, 263, 264, 265, 555, 773, 779, 787, 875], "xlim": [4, 19, 37, 39, 95, 125, 159, 180, 193, 200, 201, 209, 210, 221, 224, 234, 239, 264, 265, 776, 778], "plot_joint": [4, 70, 99, 149, 150, 165, 179, 181, 194, 197, 203, 205, 209, 225, 238, 264, 265, 695, 861, 875], "15": [4, 5, 9, 11, 12, 13, 19, 21, 22, 25, 28, 29, 32, 33, 34, 35, 42, 43, 45, 47, 50, 51, 67, 68, 69, 70, 72, 74, 75, 78, 79, 81, 90, 91, 92, 101, 106, 107, 112, 125, 133, 135, 136, 140, 141, 142, 144, 148, 150, 153, 154, 156, 161, 165, 167, 168, 169, 170, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 193, 199, 201, 202, 203, 205, 206, 207, 208, 209, 212, 213, 218, 219, 221, 224, 225, 226, 228, 229, 232, 234, 236, 237, 242, 260, 262, 263, 264, 265, 269, 270, 271, 272, 273, 275, 276, 277, 278, 282, 316, 366, 409, 418, 443, 445, 446, 447, 472, 475, 476, 503, 555, 558, 567, 568, 628, 659, 679, 684, 694, 697, 699, 714, 724, 725, 727, 746, 757, 758, 772, 780, 800, 805, 830, 837, 850, 851, 857], "titl": [4, 8, 9, 15, 16, 19, 22, 30, 35, 39, 42, 43, 44, 46, 47, 48, 49, 50, 54, 55, 59, 68, 69, 70, 75, 80, 84, 88, 92, 99, 101, 105, 106, 107, 108, 112, 118, 121, 123, 125, 130, 133, 136, 140, 141, 143, 145, 150, 151, 159, 171, 174, 175, 176, 178, 179, 193, 194, 198, 200, 201, 203, 204, 205, 206, 208, 210, 221, 224, 225, 226, 229, 234, 238, 239, 242, 260, 262, 263, 264, 265, 269, 272, 273, 277, 475, 476, 554, 555, 695, 697, 699, 742, 762, 765, 766, 770, 771, 772, 773, 774, 776, 778, 779, 780, 783, 785, 786, 788, 789, 790, 795, 797, 798, 800, 803, 809, 834, 849, 875], "differ": [4, 9, 16, 21, 22, 27, 28, 33, 37, 39, 44, 45, 47, 54, 55, 63, 67, 69, 76, 78, 79, 83, 92, 94, 97, 99, 101, 105, 108, 109, 110, 112, 118, 120, 121, 125, 128, 132, 133, 134, 136, 139, 141, 142, 143, 146, 148, 149, 150, 151, 155, 157, 159, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 179, 180, 182, 183, 184, 187, 188, 189, 190, 194, 197, 200, 201, 202, 203, 204, 205, 206, 208, 210, 213, 214, 215, 219, 224, 225, 226, 227, 229, 232, 233, 234, 238, 242, 256, 257, 262, 263, 264, 265, 266, 269, 270, 273, 276, 277, 278, 279, 295, 296, 297, 301, 318, 339, 352, 356, 357, 359, 361, 362, 366, 367, 368, 386, 399, 407, 414, 416, 428, 430, 431, 441, 448, 450, 451, 465, 466, 470, 472, 473, 475, 476, 483, 490, 497, 508, 515, 528, 530, 531, 532, 533, 542, 555, 557, 565, 566, 571, 574, 581, 583, 597, 600, 606, 607, 610, 614, 637, 646, 647, 648, 649, 655, 658, 659, 660, 661, 677, 682, 683, 684, 685, 686, 695, 696, 697, 698, 699, 742, 747, 758, 768, 772, 776, 780, 781, 782, 787, 789, 795, 800, 806, 821, 830, 832, 834, 838, 839, 842, 850, 851, 852, 854, 857, 860, 863, 875], "wave": [4, 46, 93, 112, 136, 143, 150, 165, 200, 205, 225, 237, 242, 262, 263, 264, 265, 399, 400, 475, 476, 505, 567, 571, 575, 697, 699, 707, 713, 851], "contrast": [4, 7, 86, 94, 97, 148, 150, 165, 169, 206, 221, 224, 225, 232, 237, 238, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 695, 698, 851, 861, 863, 875], "although": [4, 21, 65, 99, 139, 142, 148, 160, 171, 199, 200, 202, 204, 213, 260, 440, 475, 476, 677, 841, 857, 875], "shouldn": [4, 150, 242, 273, 276, 542], "expect": [4, 32, 38, 92, 112, 119, 143, 155, 158, 160, 161, 164, 165, 166, 171, 179, 189, 194, 200, 203, 204, 205, 209, 213, 214, 219, 221, 224, 228, 229, 234, 239, 262, 263, 264, 265, 328, 330, 335, 356, 475, 476, 482, 491, 494, 501, 533, 555, 583, 607, 608, 612, 623, 634, 742, 772, 782, 789, 795, 830, 832, 834, 853, 854, 856, 857, 858, 875], "great": [4, 118, 143, 150, 239, 852, 863], "among": [4, 10, 27, 36, 56, 171, 200, 224, 273, 275, 362, 532, 534, 536, 555, 574, 615, 618, 675, 742, 747, 846, 856, 875], "minu": [4, 140, 143, 226, 239, 555, 637, 680, 857, 860], "difference_wav": 4, "weight": [4, 5, 7, 11, 15, 18, 19, 21, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 54, 55, 58, 59, 60, 72, 73, 88, 92, 97, 102, 105, 106, 107, 108, 121, 136, 140, 143, 148, 150, 156, 165, 167, 175, 176, 177, 178, 179, 180, 181, 184, 187, 190, 193, 194, 198, 200, 201, 202, 204, 205, 206, 209, 220, 221, 224, 225, 227, 232, 233, 234, 242, 254, 267, 268, 273, 284, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 351, 363, 411, 412, 413, 425, 428, 451, 452, 470, 472, 473, 486, 522, 528, 529, 533, 554, 555, 581, 651, 652, 657, 658, 661, 682, 683, 685, 686, 690, 702, 705, 713, 774, 797, 830, 850, 851, 860, 861, 875], "clear": [4, 73, 111, 115, 139, 156, 198, 202, 204, 208, 210, 221, 224, 259, 262, 263, 267, 271, 286, 300, 475, 476, 521, 730, 742, 773, 834, 863, 875], "pattern": [4, 11, 17, 19, 20, 21, 27, 46, 78, 81, 110, 111, 141, 142, 160, 165, 166, 171, 193, 197, 200, 203, 204, 205, 209, 239, 242, 262, 263, 264, 265, 267, 272, 310, 326, 361, 370, 407, 411, 413, 414, 415, 422, 425, 431, 436, 457, 490, 492, 552, 556, 610, 623, 633, 634, 648, 695, 697, 698, 834, 850, 851, 857, 860, 875], "when": [4, 21, 27, 28, 31, 44, 45, 46, 47, 60, 69, 73, 74, 79, 80, 81, 82, 88, 92, 93, 101, 105, 113, 124, 125, 133, 139, 141, 142, 143, 144, 145, 148, 149, 150, 156, 157, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 177, 179, 181, 183, 187, 188, 189, 190, 194, 197, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 213, 214, 215, 216, 219, 220, 224, 226, 229, 237, 238, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 285, 295, 296, 307, 310, 314, 315, 337, 345, 346, 347, 351, 352, 356, 357, 358, 359, 361, 363, 366, 367, 368, 369, 372, 407, 414, 415, 418, 424, 426, 428, 432, 434, 436, 439, 441, 442, 443, 446, 448, 450, 451, 454, 457, 466, 470, 472, 473, 475, 476, 483, 488, 490, 491, 492, 495, 497, 499, 503, 522, 523, 524, 525, 526, 528, 529, 533, 538, 539, 541, 544, 554, 555, 557, 560, 565, 566, 569, 571, 574, 575, 577, 578, 583, 584, 598, 601, 603, 607, 609, 611, 613, 626, 632, 634, 635, 640, 644, 645, 656, 659, 682, 683, 684, 685, 686, 690, 694, 695, 696, 697, 698, 699, 701, 702, 704, 707, 713, 732, 739, 742, 750, 751, 759, 766, 770, 772, 774, 775, 776, 778, 779, 781, 782, 784, 785, 787, 789, 792, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 808, 815, 821, 823, 830, 832, 837, 838, 839, 840, 849, 850, 852, 854, 855, 856, 857, 858, 860, 861, 875], "howev": [4, 16, 21, 45, 69, 73, 74, 139, 141, 145, 148, 161, 166, 168, 169, 170, 171, 188, 189, 190, 193, 194, 198, 200, 202, 203, 204, 205, 206, 210, 213, 214, 224, 226, 228, 229, 232, 234, 239, 262, 263, 267, 295, 310, 352, 399, 428, 490, 492, 505, 522, 684, 834, 854, 856, 857, 860, 863, 875], "could": [4, 28, 29, 30, 38, 39, 41, 43, 68, 82, 102, 139, 143, 150, 159, 160, 165, 168, 170, 171, 174, 178, 179, 180, 190, 197, 199, 203, 204, 205, 206, 208, 213, 214, 215, 219, 224, 225, 232, 234, 239, 262, 263, 264, 265, 268, 273, 295, 377, 399, 400, 406, 428, 430, 434, 450, 475, 476, 477, 483, 555, 558, 572, 575, 576, 597, 745, 750, 816, 834, 854, 856, 863, 875], "narrow": [4, 197, 201, 239, 272, 875], "our": [4, 5, 19, 26, 27, 32, 42, 44, 62, 69, 73, 78, 82, 91, 101, 107, 110, 112, 113, 118, 119, 125, 133, 134, 135, 136, 139, 140, 141, 143, 144, 145, 149, 150, 155, 159, 165, 167, 170, 171, 174, 179, 180, 182, 183, 194, 197, 198, 200, 201, 203, 204, 205, 206, 208, 209, 210, 213, 214, 219, 221, 224, 226, 228, 229, 232, 233, 234, 237, 238, 239, 275, 447, 448, 530, 711, 721, 738, 833, 834, 836, 837, 838, 839, 850, 853, 854, 856, 857, 858, 862, 863, 875], "search": [4, 150, 155, 194, 242, 272, 275, 295, 410, 417, 434, 455, 558, 563, 569, 711, 721, 722, 725, 758, 834, 839, 840, 854], "bit": [4, 5, 7, 107, 125, 140, 143, 159, 170, 179, 188, 200, 202, 207, 210, 224, 232, 234, 239, 262, 263, 267, 339, 475, 476, 483, 490, 496, 694, 832, 840, 851, 857, 860, 875], "sinc": [4, 19, 32, 43, 44, 69, 92, 113, 117, 133, 134, 139, 140, 141, 143, 150, 159, 165, 166, 168, 170, 171, 174, 177, 187, 188, 190, 198, 199, 200, 201, 202, 203, 204, 205, 206, 213, 214, 215, 219, 224, 227, 232, 234, 239, 256, 257, 262, 263, 264, 265, 268, 272, 273, 276, 288, 310, 352, 356, 357, 428, 437, 438, 439, 440, 451, 463, 475, 476, 518, 542, 555, 566, 571, 574, 583, 682, 683, 684, 685, 686, 759, 786, 834, 850, 854, 857, 860, 875], "paradigm": [4, 7, 143, 161, 165, 197, 200, 775, 851, 875], "might": [4, 5, 19, 21, 69, 118, 125, 140, 143, 150, 155, 160, 161, 166, 167, 175, 194, 200, 203, 206, 224, 229, 232, 239, 269, 273, 277, 330, 431, 541, 555, 591, 682, 800, 832, 833, 834, 850, 853, 854, 857, 875], "best": [4, 5, 10, 16, 72, 81, 119, 133, 134, 141, 148, 161, 165, 175, 176, 177, 179, 193, 199, 203, 208, 221, 268, 352, 357, 415, 475, 476, 569, 651, 653, 654, 743, 834, 840, 842, 852, 853, 854, 856, 857, 860], "electrod": [4, 27, 76, 77, 83, 116, 118, 120, 128, 134, 137, 138, 140, 142, 149, 158, 160, 164, 165, 169, 185, 186, 190, 193, 197, 200, 202, 206, 208, 213, 224, 242, 259, 262, 263, 264, 265, 266, 267, 271, 273, 279, 310, 311, 314, 324, 326, 328, 329, 330, 331, 332, 333, 336, 352, 364, 365, 370, 407, 414, 448, 459, 466, 467, 475, 476, 481, 483, 485, 490, 495, 497, 518, 521, 522, 533, 554, 555, 563, 569, 580, 582, 611, 640, 695, 697, 698, 699, 731, 732, 734, 742, 743, 758, 759, 762, 764, 766, 774, 776, 778, 781, 782, 785, 792, 794, 796, 797, 798, 802, 804, 807, 810, 812, 815, 830, 850, 851, 860, 863, 875], "over": [4, 5, 8, 9, 12, 21, 27, 28, 45, 46, 58, 59, 69, 78, 79, 101, 102, 105, 107, 110, 111, 113, 120, 128, 134, 135, 136, 148, 149, 150, 158, 160, 161, 165, 168, 171, 174, 175, 190, 198, 200, 203, 205, 208, 210, 215, 216, 221, 224, 225, 228, 229, 237, 239, 242, 254, 256, 261, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 289, 290, 293, 305, 319, 340, 352, 358, 407, 414, 416, 418, 446, 449, 475, 476, 509, 524, 526, 529, 555, 559, 584, 597, 610, 644, 645, 670, 682, 691, 695, 697, 698, 699, 706, 714, 727, 742, 755, 772, 773, 774, 784, 789, 830, 834, 841, 851, 852, 854, 856, 857, 863, 875], "occipit": [4, 47, 49, 168, 202, 239, 630, 857], "lobe": [4, 47, 134, 135, 179], "ani": [4, 5, 18, 24, 27, 41, 45, 50, 74, 81, 108, 110, 115, 118, 124, 125, 133, 134, 136, 139, 140, 141, 142, 148, 150, 155, 157, 159, 160, 161, 164, 165, 166, 168, 169, 170, 171, 175, 180, 182, 183, 184, 188, 189, 194, 197, 198, 199, 200, 202, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 224, 229, 239, 242, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 272, 273, 275, 276, 277, 278, 285, 287, 289, 303, 304, 310, 317, 322, 324, 359, 363, 383, 413, 426, 429, 430, 431, 434, 441, 459, 464, 475, 476, 491, 544, 546, 547, 548, 552, 553, 555, 556, 557, 558, 571, 574, 575, 583, 590, 601, 607, 615, 623, 633, 636, 637, 640, 645, 656, 660, 681, 690, 695, 696, 697, 698, 699, 712, 742, 743, 745, 767, 772, 773, 775, 784, 787, 795, 796, 806, 812, 815, 822, 825, 830, 832, 834, 837, 851, 852, 854, 856, 857, 863, 875], "easier": [4, 133, 139, 141, 143, 149, 150, 155, 171, 190, 194, 198, 200, 203, 204, 205, 206, 256, 369, 832, 834, 875], "spot": [4, 198, 201, 228, 272, 875], "area": [4, 5, 54, 69, 92, 114, 133, 134, 177, 190, 194, 198, 203, 215, 220, 224, 228, 239, 262, 263, 264, 265, 268, 475, 476, 656, 695, 764, 766, 776, 778, 796, 815, 834, 857, 860, 875], "dictionari": [4, 10, 27, 36, 56, 59, 92, 113, 125, 135, 139, 140, 141, 143, 144, 148, 149, 150, 165, 166, 168, 187, 203, 205, 208, 213, 214, 219, 242, 254, 256, 257, 259, 262, 263, 264, 265, 266, 267, 271, 272, 273, 275, 286, 295, 296, 297, 300, 308, 310, 322, 323, 338, 352, 356, 357, 363, 366, 367, 368, 370, 407, 409, 414, 418, 431, 434, 436, 439, 442, 443, 445, 446, 448, 450, 451, 467, 470, 471, 472, 473, 474, 475, 476, 507, 517, 521, 533, 555, 565, 567, 568, 569, 571, 574, 603, 610, 615, 626, 628, 631, 637, 644, 681, 695, 730, 732, 742, 765, 766, 772, 773, 775, 782, 785, 787, 795, 801, 841, 875], "concentr": [4, 189, 204, 209, 220, 412, 528, 529, 585, 590, 702, 705, 713, 774, 875], "b11": 4, "ylim": [4, 7, 9, 19, 35, 39, 40, 46, 51, 59, 97, 110, 112, 125, 150, 159, 193, 200, 202, 209, 210, 224, 234, 239, 264, 265, 766, 776, 780, 875], "do": [4, 5, 15, 16, 18, 24, 26, 27, 31, 34, 40, 41, 45, 47, 50, 51, 54, 55, 58, 59, 60, 65, 69, 73, 81, 107, 110, 112, 113, 118, 125, 133, 135, 136, 139, 140, 143, 148, 149, 150, 155, 156, 157, 158, 159, 160, 161, 165, 167, 170, 171, 174, 175, 176, 179, 181, 182, 183, 184, 187, 188, 190, 193, 194, 198, 200, 201, 203, 204, 205, 206, 207, 208, 210, 213, 215, 219, 220, 221, 224, 229, 232, 233, 234, 238, 239, 242, 254, 255, 256, 257, 259, 262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 281, 285, 301, 305, 307, 317, 324, 352, 356, 363, 366, 367, 377, 382, 399, 400, 418, 419, 420, 426, 428, 436, 441, 442, 448, 457, 465, 472, 473, 475, 476, 483, 490, 518, 522, 523, 524, 525, 526, 528, 529, 538, 539, 546, 547, 548, 552, 553, 555, 556, 557, 558, 566, 571, 572, 574, 583, 600, 603, 610, 613, 614, 632, 634, 636, 682, 683, 685, 686, 690, 695, 697, 698, 699, 712, 732, 767, 771, 783, 802, 820, 823, 825, 832, 834, 837, 839, 840, 842, 845, 850, 851, 856, 857, 860, 861, 863, 875], "pretti": [4, 140, 143, 200, 203, 205, 854], "small": [4, 5, 11, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 69, 74, 88, 91, 92, 102, 105, 106, 107, 108, 119, 125, 126, 134, 140, 141, 151, 161, 165, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 190, 194, 200, 201, 203, 205, 215, 220, 221, 224, 226, 232, 234, 254, 259, 260, 262, 263, 264, 265, 268, 271, 318, 352, 407, 414, 475, 476, 491, 554, 555, 557, 601, 607, 682, 683, 685, 686, 688, 695, 697, 699, 770, 774, 781, 785, 794, 797, 802, 830, 834, 851, 854, 857, 860, 875], "determin": [4, 22, 80, 126, 133, 140, 144, 150, 160, 165, 168, 170, 177, 189, 200, 202, 208, 213, 214, 215, 224, 227, 229, 256, 259, 260, 262, 263, 264, 265, 267, 270, 271, 276, 278, 281, 295, 296, 303, 310, 312, 339, 346, 352, 356, 357, 366, 367, 368, 382, 407, 413, 414, 424, 446, 450, 451, 470, 472, 473, 475, 476, 487, 510, 514, 533, 555, 581, 583, 588, 589, 611, 630, 687, 723, 726, 742, 770, 773, 778, 780, 781, 782, 783, 792, 799, 805, 815, 816, 854, 857, 860, 875], "whether": [4, 13, 80, 140, 143, 144, 145, 170, 177, 179, 194, 198, 203, 204, 208, 239, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 285, 295, 296, 310, 319, 320, 321, 324, 352, 357, 362, 382, 389, 407, 414, 429, 440, 448, 466, 467, 474, 475, 476, 486, 515, 522, 523, 524, 525, 526, 529, 531, 532, 533, 537, 538, 539, 554, 555, 556, 564, 569, 571, 572, 574, 575, 576, 581, 584, 598, 637, 640, 659, 660, 682, 683, 685, 686, 695, 696, 697, 698, 699, 701, 704, 707, 742, 751, 759, 763, 766, 768, 770, 771, 772, 773, 774, 776, 780, 781, 785, 787, 789, 792, 794, 795, 796, 797, 798, 800, 802, 803, 804, 805, 808, 812, 815, 834, 840, 854, 857, 860, 875], "stronger": [4, 140, 190, 226, 234, 264, 265, 776], "along": [4, 19, 46, 113, 117, 135, 139, 141, 159, 165, 167, 169, 177, 193, 194, 197, 198, 202, 203, 206, 207, 213, 215, 216, 221, 232, 259, 260, 262, 263, 264, 265, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 280, 285, 407, 410, 414, 417, 418, 420, 447, 465, 466, 472, 475, 476, 554, 555, 600, 674, 675, 682, 683, 685, 686, 689, 695, 697, 698, 699, 742, 758, 759, 766, 772, 773, 774, 777, 781, 785, 794, 797, 798, 800, 802, 803, 804, 805, 830, 832, 833, 834, 851, 857, 875], "phase_coh": 4, "get": [4, 5, 7, 15, 18, 19, 21, 22, 26, 27, 28, 34, 38, 39, 41, 47, 48, 50, 52, 60, 62, 63, 65, 66, 68, 69, 71, 78, 79, 81, 82, 92, 93, 94, 95, 101, 107, 111, 112, 114, 118, 121, 122, 125, 133, 134, 135, 139, 140, 141, 142, 143, 145, 148, 149, 150, 154, 155, 156, 157, 159, 161, 164, 165, 166, 168, 169, 172, 173, 174, 179, 180, 182, 183, 184, 197, 198, 199, 200, 201, 203, 205, 213, 215, 216, 224, 226, 228, 229, 234, 237, 238, 242, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 286, 300, 304, 308, 309, 310, 320, 321, 339, 340, 356, 363, 367, 368, 371, 374, 375, 376, 377, 379, 380, 387, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 410, 411, 413, 414, 415, 416, 417, 419, 420, 421, 424, 427, 431, 436, 442, 448, 456, 459, 462, 466, 475, 476, 481, 504, 512, 521, 531, 532, 544, 555, 556, 562, 564, 572, 613, 644, 645, 664, 666, 674, 687, 690, 695, 696, 697, 698, 699, 730, 742, 743, 766, 773, 775, 788, 830, 832, 833, 834, 836, 838, 839, 840, 845, 851, 852, 856, 857, 858, 860, 861, 863, 875], "sort": [4, 7, 15, 21, 27, 47, 92, 119, 120, 128, 136, 142, 159, 169, 224, 262, 263, 264, 265, 267, 272, 322, 352, 357, 415, 433, 436, 460, 491, 555, 618, 696, 698, 773, 776, 778, 825, 842, 875], "label": [4, 8, 9, 10, 11, 12, 15, 16, 18, 21, 22, 27, 28, 29, 36, 37, 44, 45, 56, 67, 69, 88, 90, 92, 93, 94, 95, 99, 103, 104, 108, 109, 110, 111, 114, 118, 124, 125, 133, 134, 136, 139, 141, 142, 143, 148, 150, 154, 159, 165, 167, 171, 175, 179, 180, 190, 194, 199, 203, 205, 208, 213, 214, 215, 225, 234, 238, 239, 242, 258, 259, 260, 262, 263, 264, 265, 267, 269, 270, 271, 273, 274, 275, 276, 277, 278, 295, 296, 358, 362, 381, 384, 407, 408, 409, 412, 414, 415, 416, 418, 424, 440, 441, 448, 453, 459, 460, 461, 465, 475, 476, 483, 486, 490, 509, 510, 521, 522, 523, 524, 525, 526, 528, 529, 531, 532, 534, 536, 538, 539, 541, 552, 554, 555, 556, 569, 600, 613, 615, 616, 617, 618, 623, 633, 634, 644, 645, 653, 658, 661, 662, 672, 691, 695, 697, 698, 699, 711, 721, 742, 747, 760, 761, 764, 766, 772, 773, 774, 775, 776, 778, 781, 785, 788, 789, 794, 795, 797, 800, 801, 802, 803, 804, 805, 824, 825, 830, 834, 863, 865, 875], "2f": [4, 59, 156, 269, 270, 273, 276, 277, 278, 555, 742, 785, 800, 805], "format": [4, 27, 34, 43, 44, 62, 66, 69, 112, 125, 134, 136, 139, 142, 148, 149, 150, 159, 164, 165, 167, 169, 170, 171, 175, 181, 187, 190, 201, 203, 204, 205, 206, 209, 213, 214, 215, 217, 224, 225, 226, 229, 254, 256, 259, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 310, 328, 329, 333, 335, 348, 349, 350, 370, 407, 414, 436, 437, 438, 439, 440, 467, 474, 475, 476, 478, 481, 483, 487, 492, 496, 544, 550, 554, 555, 569, 571, 601, 605, 610, 616, 626, 641, 642, 646, 647, 648, 660, 675, 682, 683, 685, 686, 695, 696, 697, 698, 699, 713, 716, 737, 742, 757, 759, 774, 781, 785, 794, 797, 800, 802, 804, 805, 815, 820, 828, 830, 834, 841, 846, 850, 851, 854, 860, 863, 875], "90": [4, 5, 11, 19, 24, 35, 41, 42, 47, 78, 79, 88, 92, 101, 102, 106, 107, 112, 121, 134, 135, 136, 142, 150, 155, 156, 157, 159, 168, 169, 170, 178, 183, 189, 199, 201, 206, 207, 209, 224, 225, 226, 228, 229, 232, 233, 234, 239, 242, 264, 265, 295, 296, 352, 356, 357, 366, 367, 368, 407, 412, 414, 450, 451, 470, 472, 473, 519, 528, 529, 533, 555, 644, 651, 653, 654, 655, 676, 702, 705, 713, 747, 774, 782, 851, 852, 857], "each": [4, 9, 10, 11, 15, 16, 19, 24, 28, 32, 33, 38, 41, 44, 45, 69, 78, 81, 91, 92, 93, 99, 101, 105, 106, 107, 110, 111, 113, 115, 118, 125, 126, 131, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 154, 155, 157, 159, 160, 161, 165, 166, 167, 168, 171, 174, 175, 176, 177, 179, 180, 182, 184, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 214, 215, 216, 219, 221, 224, 226, 228, 229, 232, 233, 234, 237, 239, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 284, 287, 288, 295, 296, 301, 308, 312, 315, 319, 340, 342, 343, 347, 348, 351, 352, 353, 354, 355, 356, 357, 358, 360, 363, 365, 368, 382, 399, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 423, 424, 430, 431, 432, 441, 445, 446, 447, 448, 449, 450, 451, 459, 465, 470, 472, 473, 474, 475, 476, 477, 479, 490, 498, 506, 507, 510, 512, 514, 515, 522, 526, 528, 529, 531, 532, 545, 554, 555, 556, 558, 560, 563, 569, 571, 573, 574, 582, 583, 587, 603, 607, 613, 626, 629, 637, 643, 644, 650, 651, 652, 653, 654, 655, 656, 657, 660, 661, 662, 664, 666, 675, 677, 678, 680, 682, 683, 684, 685, 686, 687, 690, 691, 694, 695, 696, 697, 698, 699, 700, 701, 702, 714, 725, 726, 732, 742, 743, 746, 750, 758, 759, 760, 762, 763, 764, 766, 767, 768, 769, 770, 773, 774, 776, 778, 779, 780, 781, 782, 785, 793, 794, 795, 796, 797, 801, 802, 803, 804, 807, 811, 812, 815, 821, 823, 828, 830, 832, 833, 834, 840, 850, 851, 852, 854, 857, 860, 875], "zip": [4, 9, 10, 22, 27, 47, 79, 88, 105, 111, 112, 118, 125, 136, 139, 149, 159, 164, 179, 193, 198, 200, 201, 203, 204, 206, 224, 225, 226, 227, 228, 229, 234, 238, 383, 498, 834, 842], "c22": 4, "figur": [4, 5, 8, 16, 19, 22, 27, 28, 37, 38, 45, 49, 54, 55, 90, 101, 107, 109, 113, 114, 116, 120, 121, 123, 128, 134, 135, 140, 141, 143, 144, 149, 155, 157, 159, 165, 169, 175, 177, 178, 179, 182, 183, 190, 193, 194, 200, 202, 203, 205, 208, 209, 216, 221, 224, 226, 229, 234, 238, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 310, 311, 324, 407, 414, 466, 467, 475, 476, 554, 555, 569, 613, 623, 695, 696, 697, 698, 699, 722, 723, 725, 726, 742, 744, 745, 748, 751, 755, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 809, 810, 812, 832, 833, 834, 852, 854, 875], "ax": [4, 10, 11, 12, 13, 15, 19, 21, 22, 37, 39, 41, 45, 47, 58, 67, 68, 69, 70, 71, 72, 79, 80, 84, 88, 91, 94, 97, 102, 110, 111, 112, 113, 114, 118, 125, 131, 133, 134, 135, 136, 143, 144, 145, 149, 150, 155, 159, 160, 169, 171, 175, 176, 179, 180, 182, 193, 194, 197, 200, 201, 204, 205, 208, 209, 210, 216, 221, 224, 225, 226, 227, 228, 229, 237, 238, 239, 259, 260, 262, 263, 264, 265, 271, 311, 319, 324, 407, 414, 466, 475, 476, 554, 555, 695, 697, 699, 711, 721, 743, 745, 755, 758, 759, 761, 764, 765, 766, 770, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 787, 788, 790, 791, 794, 796, 797, 798, 799, 802, 804, 857, 875], "subplot": [4, 10, 11, 12, 13, 15, 19, 21, 22, 39, 41, 45, 47, 58, 67, 68, 69, 70, 71, 72, 80, 84, 88, 91, 94, 97, 102, 105, 110, 111, 112, 113, 114, 118, 125, 133, 135, 136, 141, 143, 145, 150, 159, 169, 171, 175, 176, 179, 180, 182, 193, 194, 200, 205, 208, 209, 210, 216, 221, 224, 225, 226, 227, 228, 229, 238, 239, 259, 262, 263, 264, 265, 271, 407, 414, 475, 476, 554, 555, 695, 697, 699, 711, 721, 742, 764, 765, 774, 775, 780, 781, 785, 790, 794, 797, 802, 804, 807, 875], "figsiz": [4, 12, 15, 19, 22, 45, 47, 69, 72, 94, 110, 111, 112, 113, 118, 125, 133, 135, 143, 159, 175, 182, 193, 200, 205, 208, 209, 221, 224, 225, 227, 228, 229, 238, 239, 555, 787, 788], "8": [4, 5, 6, 7, 8, 9, 11, 13, 15, 19, 20, 21, 22, 26, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 58, 59, 61, 63, 64, 66, 67, 69, 70, 72, 74, 78, 79, 81, 83, 86, 88, 89, 92, 94, 99, 100, 101, 104, 106, 107, 110, 111, 112, 114, 118, 119, 121, 122, 124, 125, 128, 133, 134, 135, 136, 139, 141, 142, 143, 144, 145, 147, 149, 150, 151, 155, 157, 159, 161, 163, 165, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 189, 190, 192, 193, 194, 197, 199, 200, 203, 205, 206, 207, 208, 209, 210, 212, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 238, 239, 241, 242, 262, 263, 264, 265, 272, 275, 295, 296, 312, 377, 406, 407, 428, 451, 470, 472, 473, 475, 476, 483, 490, 491, 499, 533, 538, 555, 556, 563, 566, 571, 574, 583, 601, 607, 609, 694, 697, 699, 723, 726, 742, 765, 771, 773, 774, 778, 798, 832, 833, 834, 850, 851, 857, 860], "20": [4, 5, 9, 11, 12, 14, 15, 19, 20, 22, 28, 33, 34, 35, 37, 45, 46, 47, 48, 54, 55, 59, 60, 61, 69, 73, 75, 79, 80, 86, 88, 98, 101, 102, 105, 106, 107, 111, 112, 113, 114, 119, 125, 126, 131, 136, 139, 141, 142, 149, 150, 151, 156, 158, 165, 168, 169, 170, 171, 175, 176, 178, 180, 182, 183, 184, 190, 193, 194, 197, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 212, 213, 216, 219, 221, 224, 225, 226, 228, 229, 233, 234, 237, 239, 242, 243, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 295, 296, 306, 310, 315, 322, 328, 339, 340, 341, 342, 343, 345, 358, 363, 406, 407, 414, 432, 442, 450, 470, 472, 473, 475, 476, 483, 511, 515, 522, 523, 524, 525, 529, 533, 537, 538, 539, 547, 554, 555, 564, 569, 574, 581, 605, 610, 640, 643, 644, 659, 661, 683, 684, 695, 696, 697, 698, 699, 712, 746, 758, 759, 760, 766, 771, 772, 774, 776, 777, 778, 780, 781, 782, 785, 792, 794, 795, 796, 797, 798, 800, 802, 804, 805, 833, 850, 851, 854, 857], "cmap": [4, 9, 10, 13, 15, 16, 19, 22, 41, 69, 98, 99, 105, 107, 110, 112, 113, 114, 118, 133, 135, 142, 159, 181, 193, 194, 208, 224, 226, 227, 228, 229, 238, 259, 262, 263, 264, 265, 271, 407, 414, 475, 476, 554, 555, 569, 695, 696, 697, 699, 757, 759, 766, 768, 773, 774, 778, 781, 784, 785, 794, 797, 802, 803, 804], "magma": 4, "consider": [4, 79, 97, 150, 199, 200, 203, 210, 220, 229, 242, 272, 681, 841, 857, 863, 875], "chosen": [4, 45, 136, 144, 150, 197, 200, 202, 203, 205, 237, 256, 259, 262, 263, 264, 265, 270, 271, 275, 276, 278, 356, 407, 409, 414, 418, 420, 443, 445, 446, 465, 475, 476, 508, 530, 554, 555, 569, 581, 600, 647, 648, 682, 683, 685, 686, 695, 696, 697, 698, 699, 742, 758, 759, 768, 772, 774, 778, 781, 785, 788, 794, 795, 796, 797, 798, 802, 804, 857], "test": [4, 8, 10, 13, 15, 16, 19, 26, 27, 88, 93, 96, 100, 110, 121, 126, 134, 139, 150, 164, 167, 170, 171, 187, 193, 194, 207, 208, 213, 225, 226, 227, 230, 231, 234, 235, 236, 239, 242, 262, 263, 264, 265, 267, 273, 274, 275, 287, 289, 295, 316, 358, 382, 410, 411, 424, 428, 430, 446, 475, 476, 484, 503, 506, 521, 522, 530, 536, 546, 552, 555, 574, 583, 610, 623, 625, 667, 673, 675, 677, 679, 682, 683, 684, 685, 686, 687, 688, 689, 695, 697, 698, 699, 725, 742, 750, 763, 766, 774, 781, 788, 802, 832, 835, 838, 839, 854, 857, 863, 875], "interpol": [4, 15, 24, 27, 32, 60, 69, 76, 83, 85, 88, 91, 92, 93, 117, 133, 134, 135, 150, 176, 180, 187, 194, 203, 208, 221, 224, 237, 259, 262, 263, 264, 265, 271, 275, 277, 278, 407, 414, 441, 464, 475, 476, 554, 555, 569, 573, 577, 582, 613, 644, 646, 647, 648, 660, 695, 697, 699, 731, 742, 759, 774, 781, 785, 794, 797, 802, 804, 841, 875], "miss": [4, 44, 68, 82, 133, 134, 150, 157, 158, 179, 182, 187, 189, 200, 206, 239, 262, 263, 264, 265, 267, 275, 314, 337, 383, 399, 413, 475, 476, 483, 490, 495, 546, 583, 681, 775, 776, 830, 834, 838, 839, 841, 842, 860, 863, 875], "drop": [4, 8, 9, 11, 12, 16, 18, 21, 32, 33, 34, 42, 46, 49, 70, 71, 94, 95, 98, 101, 105, 108, 110, 111, 112, 115, 119, 126, 134, 135, 136, 140, 141, 143, 144, 145, 150, 151, 161, 165, 166, 171, 176, 179, 181, 182, 184, 190, 197, 198, 199, 202, 203, 205, 206, 209, 215, 220, 221, 226, 227, 228, 229, 232, 234, 238, 256, 257, 259, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 312, 315, 432, 433, 440, 464, 475, 476, 488, 555, 567, 568, 571, 584, 607, 609, 637, 695, 696, 697, 698, 699, 771, 772, 785, 787, 834, 837, 857, 875], "furthermor": [4, 154, 174, 177, 188, 202, 850, 857, 860], "mark": [4, 8, 11, 49, 73, 77, 81, 90, 91, 109, 118, 124, 125, 134, 136, 141, 143, 149, 150, 165, 168, 169, 171, 177, 188, 189, 190, 199, 200, 203, 204, 206, 207, 208, 209, 213, 215, 216, 229, 242, 255, 257, 262, 263, 264, 265, 312, 368, 377, 384, 399, 400, 464, 466, 474, 475, 476, 554, 555, 560, 563, 569, 573, 574, 582, 583, 591, 598, 607, 609, 637, 695, 697, 698, 699, 738, 762, 772, 774, 781, 786, 788, 795, 796, 802, 830, 834, 851, 852, 875], "exg": 4, "prefix": [4, 73, 154, 169, 174, 254, 259, 262, 263, 264, 265, 271, 353, 354, 407, 414, 467, 475, 476, 483, 490, 491, 554, 555, 569, 607, 695, 697, 699, 759, 781, 785, 794, 797, 802, 830], "interpolate_bad": [4, 69, 77, 198, 262, 263, 264, 265, 464, 475, 476, 857, 875], "reset_bad": [4, 77, 198, 262, 263, 264, 265, 475, 476, 857], "drop_channel": [4, 42, 69, 135, 139, 148, 213, 229, 262, 263, 264, 265, 475, 476, 695, 697, 698, 699, 861, 875], "exg1": 4, "exg2": 4, "exg3": 4, "exg4": 4, "radiu": [4, 5, 24, 26, 41, 45, 50, 69, 70, 77, 78, 91, 92, 107, 133, 150, 155, 157, 158, 169, 175, 180, 181, 182, 183, 184, 198, 205, 206, 208, 220, 259, 262, 263, 264, 265, 271, 300, 303, 310, 324, 326, 328, 407, 414, 427, 465, 475, 476, 508, 519, 537, 554, 555, 564, 569, 644, 647, 690, 695, 697, 699, 759, 766, 774, 776, 778, 781, 782, 785, 792, 794, 796, 797, 798, 802, 804, 857, 875], "95": [4, 5, 7, 19, 34, 47, 50, 69, 74, 78, 79, 88, 94, 107, 110, 111, 112, 119, 133, 135, 141, 142, 144, 145, 150, 155, 157, 159, 168, 178, 183, 193, 194, 199, 207, 208, 209, 224, 225, 228, 229, 242, 262, 263, 264, 265, 555, 569, 655, 674, 695, 766, 782, 787, 803, 857], "113": [4, 20, 35, 110, 157, 168, 186, 193, 214, 228, 229, 242], "524face": 4, "To": [4, 5, 11, 18, 19, 22, 33, 44, 45, 86, 88, 92, 93, 111, 114, 125, 131, 133, 136, 139, 141, 143, 145, 148, 149, 150, 155, 157, 158, 159, 160, 165, 167, 168, 169, 170, 171, 174, 177, 179, 183, 187, 189, 190, 193, 194, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 215, 216, 219, 221, 224, 226, 228, 229, 233, 234, 238, 254, 256, 257, 262, 263, 264, 265, 268, 272, 277, 278, 295, 296, 352, 356, 357, 413, 420, 431, 437, 438, 439, 440, 442, 448, 475, 476, 483, 488, 504, 508, 512, 518, 555, 571, 574, 576, 580, 581, 583, 598, 600, 615, 641, 644, 647, 648, 649, 655, 658, 659, 661, 682, 683, 684, 685, 686, 688, 701, 704, 720, 722, 723, 724, 725, 726, 727, 740, 742, 759, 772, 785, 787, 789, 795, 806, 807, 822, 832, 833, 834, 837, 838, 839, 840, 842, 849, 850, 851, 852, 854, 856, 857, 861, 875], "predict": [4, 10, 12, 13, 15, 16, 17, 20, 27, 42, 99, 136, 140, 175, 193, 194, 242, 267, 295, 310, 326, 370, 410, 411, 413, 417, 419, 424, 447, 476, 523, 530, 804, 851, 875], "brain": [4, 5, 7, 8, 10, 11, 15, 19, 21, 22, 24, 26, 27, 28, 29, 31, 32, 33, 35, 38, 40, 41, 42, 43, 44, 46, 54, 58, 59, 60, 69, 80, 86, 92, 102, 107, 113, 120, 124, 128, 133, 134, 145, 150, 154, 155, 157, 159, 161, 169, 174, 175, 176, 177, 178, 180, 181, 183, 187, 188, 189, 190, 194, 197, 202, 203, 205, 206, 221, 224, 232, 233, 234, 239, 242, 253, 254, 260, 262, 263, 264, 265, 267, 269, 270, 273, 274, 275, 276, 277, 278, 288, 295, 296, 301, 329, 358, 369, 377, 407, 413, 415, 441, 446, 459, 473, 475, 476, 485, 495, 510, 514, 519, 521, 522, 536, 542, 552, 553, 556, 560, 570, 580, 582, 605, 613, 623, 628, 633, 644, 660, 684, 695, 697, 698, 699, 751, 753, 756, 758, 760, 761, 764, 770, 800, 801, 805, 806, 810, 812, 815, 830, 832, 834, 835, 840, 841, 850, 851, 854, 857, 862, 863, 865, 875], "purpos": [4, 8, 11, 12, 21, 111, 139, 140, 148, 155, 167, 179, 188, 197, 198, 199, 200, 203, 204, 206, 228, 232, 234, 239, 242, 262, 263, 374, 375, 376, 377, 379, 380, 382, 387, 390, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 418, 420, 475, 476, 758, 772, 795, 830, 841, 850, 851, 856, 859, 860, 861], "intercept": [4, 99, 680], "predictor_var": 4, "where": [4, 10, 13, 31, 45, 67, 69, 73, 79, 80, 81, 88, 92, 93, 99, 110, 133, 136, 139, 140, 141, 143, 148, 150, 154, 159, 164, 165, 166, 167, 168, 169, 171, 174, 181, 182, 183, 187, 189, 190, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 213, 215, 219, 220, 221, 224, 226, 228, 229, 232, 233, 234, 239, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 269, 270, 271, 272, 273, 275, 276, 277, 278, 317, 319, 320, 321, 333, 351, 369, 374, 375, 376, 377, 379, 380, 382, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 414, 420, 422, 441, 443, 446, 448, 467, 475, 476, 508, 530, 554, 555, 557, 564, 569, 571, 572, 573, 583, 645, 651, 652, 653, 654, 655, 657, 659, 660, 675, 676, 681, 682, 683, 685, 686, 695, 697, 698, 699, 723, 726, 742, 747, 759, 760, 763, 764, 765, 772, 773, 774, 781, 785, 794, 795, 796, 797, 802, 804, 808, 830, 834, 835, 837, 838, 839, 840, 850, 851, 854, 856, 857, 860, 875], "func": [4, 208, 269, 270, 273, 276, 277, 278, 483, 490, 497, 834, 875], "reg": [4, 8, 9, 12, 21, 34, 49, 133, 179, 221, 295, 296, 407, 414, 415, 556, 857, 875], "design_matrix": [4, 140, 680], "25728": 4, "target": [4, 17, 20, 27, 49, 76, 83, 99, 126, 140, 160, 194, 201, 203, 224, 225, 239, 262, 264, 265, 267, 406, 407, 408, 409, 410, 411, 412, 414, 415, 417, 418, 419, 420, 424, 433, 475, 488, 516, 552, 555, 556, 610, 834, 875], "regressor": [4, 68, 99, 194, 224, 680], "within": [4, 5, 16, 24, 38, 41, 45, 47, 50, 61, 68, 92, 106, 107, 110, 118, 119, 125, 126, 134, 139, 140, 143, 150, 154, 155, 157, 159, 160, 164, 165, 167, 171, 174, 175, 177, 180, 182, 183, 184, 197, 200, 203, 204, 206, 208, 215, 220, 224, 235, 239, 242, 255, 259, 262, 263, 264, 265, 269, 270, 271, 273, 276, 277, 278, 280, 305, 312, 370, 382, 407, 412, 414, 431, 433, 436, 441, 459, 465, 475, 476, 528, 529, 538, 554, 555, 569, 682, 683, 685, 686, 690, 695, 697, 699, 702, 705, 713, 724, 727, 739, 759, 773, 774, 781, 782, 785, 794, 797, 801, 802, 804, 830, 832, 834, 839, 840, 845, 854, 856, 857, 863, 875], "object": [4, 9, 10, 18, 19, 27, 30, 31, 32, 33, 34, 36, 47, 54, 55, 56, 60, 63, 77, 92, 97, 99, 101, 102, 107, 110, 111, 112, 125, 130, 133, 140, 143, 145, 150, 154, 156, 159, 160, 161, 164, 165, 166, 169, 171, 174, 180, 181, 187, 188, 189, 190, 194, 197, 198, 199, 201, 203, 204, 205, 206, 208, 209, 214, 217, 218, 221, 225, 232, 238, 239, 242, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 281, 282, 283, 286, 288, 289, 290, 293, 295, 296, 297, 300, 301, 303, 304, 308, 309, 310, 312, 315, 316, 317, 318, 319, 322, 324, 325, 338, 340, 342, 347, 351, 352, 355, 356, 357, 358, 359, 363, 366, 367, 368, 370, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 419, 420, 421, 423, 424, 425, 426, 432, 436, 441, 448, 449, 451, 453, 458, 467, 470, 472, 473, 474, 475, 476, 477, 480, 481, 482, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 508, 511, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 529, 531, 532, 533, 537, 544, 551, 552, 554, 555, 556, 557, 558, 566, 569, 570, 571, 578, 580, 582, 588, 589, 596, 601, 605, 606, 608, 612, 613, 614, 617, 623, 630, 631, 644, 645, 659, 660, 663, 672, 680, 681, 687, 691, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 712, 715, 716, 717, 722, 723, 724, 725, 726, 727, 728, 730, 741, 742, 743, 748, 751, 753, 755, 756, 758, 759, 762, 763, 766, 767, 768, 769, 772, 773, 774, 775, 776, 777, 778, 779, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 794, 795, 796, 797, 798, 799, 802, 804, 809, 810, 815, 821, 824, 830, 834, 850, 852, 857, 859, 861, 865, 873, 875], "multipl": [4, 16, 40, 44, 45, 51, 91, 94, 95, 99, 101, 110, 118, 139, 143, 148, 149, 158, 159, 165, 171, 174, 189, 193, 198, 200, 201, 203, 204, 206, 213, 214, 215, 225, 229, 232, 233, 234, 239, 242, 256, 260, 261, 262, 263, 264, 265, 269, 270, 272, 273, 275, 276, 277, 278, 298, 315, 352, 358, 382, 409, 418, 420, 430, 432, 434, 443, 444, 445, 448, 451, 457, 472, 473, 475, 476, 488, 498, 517, 531, 532, 537, 542, 555, 572, 576, 583, 587, 605, 613, 637, 640, 644, 673, 679, 683, 684, 695, 696, 698, 707, 710, 717, 718, 723, 726, 742, 756, 766, 773, 776, 779, 782, 785, 787, 789, 795, 800, 801, 803, 805, 830, 834, 851, 857, 863, 865, 872, 875], "list": [4, 9, 10, 11, 16, 28, 41, 43, 47, 68, 82, 92, 101, 102, 109, 110, 111, 113, 114, 115, 125, 130, 136, 139, 143, 144, 148, 149, 150, 160, 165, 167, 168, 169, 170, 171, 174, 176, 182, 184, 187, 190, 198, 199, 200, 203, 204, 205, 208, 209, 213, 215, 216, 219, 220, 221, 224, 225, 228, 229, 233, 234, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 284, 285, 287, 288, 289, 290, 293, 295, 296, 298, 301, 303, 304, 308, 310, 311, 312, 315, 316, 317, 319, 320, 321, 322, 324, 325, 327, 335, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 363, 365, 366, 367, 368, 370, 377, 382, 388, 390, 399, 400, 407, 409, 413, 414, 417, 419, 422, 423, 424, 426, 428, 429, 430, 431, 432, 434, 438, 439, 441, 442, 445, 446, 448, 449, 453, 455, 457, 459, 460, 461, 462, 463, 464, 465, 470, 471, 472, 473, 474, 475, 476, 479, 483, 485, 487, 490, 491, 492, 497, 498, 499, 501, 506, 510, 512, 513, 514, 517, 520, 524, 526, 529, 531, 532, 541, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 563, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 580, 582, 583, 584, 589, 591, 594, 598, 600, 603, 605, 607, 609, 610, 613, 614, 615, 618, 621, 628, 630, 636, 637, 640, 644, 645, 658, 661, 662, 663, 664, 672, 675, 676, 678, 680, 681, 682, 683, 685, 686, 687, 690, 691, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 711, 712, 717, 720, 721, 726, 728, 729, 739, 741, 742, 743, 746, 747, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 791, 792, 793, 794, 796, 797, 798, 800, 801, 802, 804, 805, 806, 818, 821, 825, 826, 830, 834, 837, 841, 842, 845, 849, 850, 854, 856, 857, 858, 860, 863, 875], "field": [4, 5, 7, 17, 20, 22, 26, 27, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 68, 77, 78, 79, 88, 92, 107, 111, 115, 117, 119, 122, 126, 129, 141, 143, 148, 155, 157, 158, 161, 164, 165, 168, 175, 176, 177, 178, 181, 182, 187, 188, 190, 194, 195, 196, 197, 198, 202, 203, 204, 205, 206, 207, 208, 210, 213, 215, 216, 219, 221, 229, 242, 248, 255, 259, 262, 263, 264, 265, 267, 295, 296, 310, 317, 326, 370, 413, 419, 439, 447, 450, 475, 476, 477, 487, 494, 514, 522, 523, 569, 583, 591, 608, 612, 615, 640, 681, 724, 727, 742, 759, 766, 773, 776, 777, 779, 781, 782, 784, 803, 804, 812, 830, 835, 850, 851, 854, 863, 875], "getattr": [4, 711, 721], "_field": [4, 140], "beta": [4, 12, 19, 32, 33, 34, 92, 99, 108, 110, 111, 113, 136, 140, 224, 238, 262, 263, 264, 265, 475, 476, 598, 680, 697, 699, 774], "stderr": [4, 140, 680], "t_val": [4, 140, 225, 680], "p_val": [4, 99, 140, 226, 227, 676, 680, 875], "mlog10_p_val": [4, 140, 680, 875], "just": [4, 5, 28, 32, 33, 41, 42, 44, 48, 50, 59, 69, 73, 80, 81, 99, 101, 107, 111, 112, 113, 118, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 150, 155, 157, 159, 160, 161, 164, 165, 167, 168, 169, 170, 171, 176, 178, 179, 180, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 213, 214, 215, 216, 221, 225, 226, 229, 232, 233, 234, 238, 239, 259, 262, 263, 264, 265, 269, 270, 271, 273, 275, 276, 277, 278, 310, 407, 414, 441, 442, 475, 476, 491, 530, 554, 555, 565, 569, 582, 607, 695, 697, 699, 738, 759, 766, 772, 774, 776, 778, 781, 782, 785, 789, 792, 794, 795, 796, 797, 798, 802, 804, 812, 832, 834, 842, 852, 857, 860, 875], "would": [4, 5, 19, 43, 44, 69, 139, 142, 143, 149, 150, 154, 155, 159, 160, 171, 174, 180, 189, 190, 194, 197, 199, 200, 201, 202, 203, 204, 205, 208, 219, 224, 225, 226, 229, 232, 234, 239, 262, 263, 264, 265, 269, 270, 273, 275, 276, 277, 278, 288, 295, 296, 352, 356, 357, 366, 367, 368, 377, 382, 399, 400, 407, 414, 428, 429, 430, 442, 450, 451, 457, 470, 472, 473, 475, 476, 490, 512, 520, 533, 555, 566, 583, 632, 695, 698, 742, 776, 781, 782, 795, 830, 840, 856, 857, 863, 875], "higher": [4, 26, 38, 44, 54, 68, 73, 92, 140, 150, 183, 194, 197, 199, 201, 203, 208, 220, 226, 229, 239, 272, 583, 711, 721, 832, 834, 838, 839, 857, 875], "better": [4, 9, 19, 43, 60, 69, 92, 141, 145, 150, 182, 183, 193, 200, 202, 203, 208, 224, 242, 264, 265, 269, 270, 273, 276, 277, 278, 406, 569, 580, 583, 709, 711, 721, 725, 742, 800, 805, 832, 834, 857, 875], "visibl": [4, 47, 125, 171, 190, 200, 201, 207, 215, 216, 239, 262, 263, 264, 265, 475, 476, 555, 636, 695, 742, 772, 778, 789, 795, 830, 875], "neg": [4, 19, 22, 39, 70, 110, 112, 143, 149, 150, 161, 187, 190, 201, 203, 210, 224, 232, 239, 259, 260, 261, 262, 263, 264, 265, 269, 270, 271, 272, 273, 276, 277, 278, 284, 304, 407, 413, 414, 419, 426, 435, 449, 475, 476, 499, 554, 555, 576, 581, 653, 654, 679, 695, 697, 698, 699, 761, 766, 772, 774, 781, 785, 794, 795, 797, 800, 802, 806, 851, 854, 857, 860, 875], "around": [4, 49, 69, 74, 81, 92, 110, 140, 141, 143, 145, 150, 164, 165, 170, 171, 179, 182, 190, 197, 198, 199, 200, 201, 202, 203, 204, 205, 209, 213, 219, 239, 262, 263, 264, 265, 272, 356, 407, 414, 426, 431, 433, 475, 476, 508, 555, 567, 568, 571, 572, 600, 657, 695, 697, 698, 699, 766, 772, 778, 781, 782, 789, 795, 830, 832, 840], "200": [4, 9, 12, 47, 59, 74, 79, 88, 90, 93, 97, 107, 109, 112, 125, 129, 134, 135, 141, 144, 145, 150, 157, 168, 171, 178, 180, 182, 190, 193, 194, 199, 201, 204, 205, 219, 227, 228, 229, 234, 238, 242, 339, 341, 345, 446, 475, 476, 528, 529, 555, 581, 841, 850, 857, 860, 863, 875], "follow": [4, 24, 27, 32, 33, 34, 41, 42, 68, 69, 78, 92, 101, 105, 107, 111, 114, 126, 133, 134, 136, 140, 143, 150, 154, 157, 159, 160, 161, 167, 169, 171, 177, 179, 187, 188, 189, 194, 199, 200, 201, 202, 206, 208, 210, 213, 214, 215, 219, 221, 224, 226, 228, 232, 234, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 285, 286, 295, 296, 300, 301, 352, 363, 367, 382, 399, 407, 431, 433, 434, 445, 446, 447, 451, 474, 475, 476, 477, 481, 483, 490, 518, 521, 538, 539, 555, 571, 574, 583, 584, 613, 623, 641, 676, 678, 680, 695, 697, 698, 699, 711, 721, 722, 725, 726, 730, 732, 738, 742, 755, 766, 774, 779, 802, 830, 832, 833, 836, 838, 839, 840, 850, 851, 853, 854, 857, 860, 861, 875], "onset": [4, 8, 33, 34, 115, 134, 135, 136, 139, 143, 145, 165, 167, 190, 199, 200, 202, 215, 239, 255, 256, 262, 263, 352, 436, 448, 475, 476, 558, 601, 700, 701, 702, 830, 875], "23": [4, 5, 6, 8, 11, 13, 19, 20, 28, 34, 35, 38, 40, 45, 47, 56, 64, 65, 73, 79, 80, 101, 104, 106, 107, 110, 111, 112, 121, 124, 128, 136, 143, 144, 147, 150, 157, 168, 170, 182, 183, 184, 190, 193, 194, 203, 207, 221, 223, 224, 225, 226, 228, 229, 232, 233, 234, 237, 242, 256, 260, 261, 262, 263, 264, 265, 267, 269, 270, 272, 273, 275, 276, 277, 278, 295, 344, 356, 366, 367, 377, 384, 385, 399, 400, 431, 466, 475, 476, 483, 515, 555, 566, 603, 613, 694, 695, 697, 698, 699, 742, 771, 776, 786, 821, 851, 857], "correspond": [4, 16, 31, 48, 50, 61, 71, 75, 86, 90, 92, 101, 110, 118, 133, 136, 142, 143, 150, 154, 155, 157, 159, 167, 169, 171, 174, 179, 180, 181, 187, 190, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 213, 214, 215, 216, 226, 228, 229, 234, 239, 255, 257, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 287, 295, 296, 298, 302, 310, 320, 321, 323, 333, 352, 356, 357, 360, 366, 367, 368, 377, 382, 399, 400, 407, 408, 410, 411, 413, 414, 417, 419, 423, 431, 436, 450, 451, 452, 460, 470, 472, 473, 475, 476, 483, 485, 487, 490, 494, 497, 499, 504, 508, 512, 514, 517, 519, 520, 531, 532, 533, 554, 555, 556, 569, 571, 574, 575, 608, 609, 612, 623, 636, 640, 644, 647, 660, 675, 676, 679, 680, 681, 682, 683, 685, 686, 687, 695, 696, 697, 698, 699, 707, 708, 714, 732, 733, 735, 742, 745, 753, 755, 759, 760, 761, 766, 772, 773, 774, 776, 778, 780, 781, 782, 785, 794, 795, 797, 800, 802, 804, 805, 806, 815, 830, 834, 840, 851, 854, 857, 860, 875], "unit": [4, 8, 14, 19, 21, 32, 81, 98, 101, 125, 134, 135, 140, 155, 159, 167, 168, 179, 188, 189, 198, 203, 205, 208, 213, 221, 226, 227, 229, 237, 238, 242, 257, 259, 260, 261, 262, 263, 264, 265, 267, 271, 273, 295, 296, 303, 311, 328, 333, 335, 337, 357, 363, 370, 407, 409, 414, 416, 418, 428, 443, 445, 446, 451, 474, 475, 476, 483, 485, 490, 491, 499, 555, 566, 571, 574, 583, 607, 645, 687, 695, 697, 699, 733, 735, 742, 766, 773, 774, 776, 778, 781, 782, 794, 796, 802, 803, 810, 830, 834, 860, 875], "scale": [4, 5, 10, 16, 19, 22, 27, 28, 29, 30, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 54, 55, 57, 58, 59, 60, 65, 69, 73, 76, 83, 88, 92, 98, 99, 101, 102, 105, 106, 107, 108, 112, 113, 114, 117, 125, 131, 135, 136, 140, 141, 148, 150, 155, 156, 159, 165, 176, 177, 178, 179, 180, 181, 182, 189, 190, 193, 194, 200, 202, 203, 205, 206, 216, 220, 221, 232, 234, 238, 239, 242, 254, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 276, 277, 278, 295, 296, 326, 336, 351, 352, 356, 357, 363, 366, 367, 368, 407, 414, 416, 428, 430, 441, 450, 451, 466, 469, 470, 472, 473, 475, 476, 485, 528, 529, 533, 535, 538, 539, 546, 554, 555, 565, 566, 574, 583, 613, 632, 633, 634, 635, 647, 648, 659, 662, 695, 697, 698, 699, 707, 732, 742, 755, 757, 759, 766, 770, 772, 773, 774, 776, 778, 780, 781, 782, 783, 785, 790, 794, 795, 796, 797, 801, 802, 803, 805, 830, 848, 875], "keep": [4, 11, 12, 27, 31, 60, 86, 102, 108, 109, 110, 136, 141, 144, 148, 150, 159, 160, 161, 164, 165, 168, 180, 198, 199, 200, 201, 202, 203, 213, 214, 215, 219, 226, 254, 259, 262, 263, 264, 265, 289, 290, 293, 296, 368, 413, 431, 475, 476, 486, 524, 526, 529, 555, 584, 696, 707, 834, 842, 852, 856, 875], "avoid": [4, 8, 9, 28, 40, 59, 69, 86, 112, 136, 139, 150, 160, 165, 166, 168, 171, 182, 188, 190, 197, 200, 201, 205, 213, 215, 224, 237, 242, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 273, 276, 277, 278, 352, 424, 436, 475, 476, 483, 490, 497, 535, 555, 617, 623, 655, 658, 661, 677, 688, 689, 695, 698, 742, 800, 805, 832, 838, 852, 854, 856, 857, 875], "convers": [4, 155, 167, 188, 190, 198, 200, 201, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 475, 476, 499, 592, 682, 683, 685, 686, 695, 698, 857, 860, 875], "micro": [4, 262, 263, 264, 265, 475, 476], "volt": [4, 140, 203, 205, 219, 262, 263, 264, 265, 440, 475, 476, 857, 875], "topomap_arg": [4, 69, 99, 194, 209, 225, 264, 265, 555, 695, 762, 779, 787, 875], "set_ylabel": [4, 12, 13, 21, 22, 45, 69, 94, 102, 110, 111, 113, 131, 143, 171, 182, 194, 200, 204, 227, 228, 229, 239], "systemat": [4, 140, 161, 200, 242, 410, 573, 854, 875], "larg": [4, 10, 28, 69, 74, 78, 81, 82, 112, 118, 135, 141, 149, 150, 166, 171, 177, 194, 197, 198, 200, 201, 202, 204, 205, 206, 209, 210, 216, 224, 229, 232, 239, 242, 262, 263, 268, 295, 352, 356, 357, 361, 416, 446, 474, 475, 476, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 515, 535, 555, 557, 682, 683, 685, 686, 742, 760, 807, 838, 852, 875], "consist": [4, 10, 43, 69, 75, 110, 121, 156, 157, 160, 167, 169, 174, 182, 188, 189, 190, 194, 198, 199, 200, 202, 203, 207, 224, 226, 227, 242, 254, 262, 263, 264, 265, 275, 279, 319, 475, 476, 555, 563, 569, 573, 647, 648, 680, 695, 697, 698, 699, 700, 701, 702, 830, 850, 851, 856, 857, 863, 875], "guillaum": [4, 15, 86, 150, 156, 194, 200, 224, 242, 556, 688, 689, 851, 862, 875], "rousselet": [4, 150, 200, 242, 851], "2016": [4, 19, 46, 81, 111, 124, 193, 200, 242, 384, 385, 413, 472, 473, 555, 851], "7488": [4, 19, 242], "1556": [4, 242], "carl": [4, 124, 242, 384, 851], "gaspar": [4, 242, 851], "cyril": [4, 242, 851], "r": [4, 8, 10, 12, 19, 21, 28, 37, 39, 41, 43, 49, 69, 79, 80, 94, 95, 97, 113, 125, 135, 136, 140, 144, 155, 159, 165, 175, 179, 180, 182, 183, 184, 193, 194, 198, 200, 202, 203, 205, 209, 210, 214, 220, 224, 228, 229, 234, 239, 242, 254, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 273, 274, 276, 277, 278, 298, 358, 377, 407, 413, 414, 442, 475, 476, 507, 522, 530, 554, 555, 564, 567, 569, 571, 575, 655, 679, 682, 683, 688, 689, 695, 697, 698, 699, 724, 727, 742, 759, 760, 766, 770, 774, 781, 785, 790, 794, 797, 802, 804, 830, 832, 834, 851, 857, 860, 875], "pernet": [4, 242, 851], "jess": [4, 242, 851], "husk": [4, 242, 851], "patrick": [4, 242, 851, 857], "j": [4, 8, 12, 13, 18, 19, 21, 31, 35, 42, 44, 59, 65, 69, 70, 73, 74, 81, 92, 97, 99, 111, 119, 124, 136, 143, 150, 154, 159, 161, 171, 177, 179, 193, 194, 200, 202, 203, 204, 205, 210, 224, 225, 229, 237, 242, 254, 262, 263, 264, 265, 268, 272, 273, 274, 295, 298, 352, 358, 377, 385, 390, 400, 407, 411, 413, 414, 415, 425, 470, 473, 475, 476, 522, 523, 530, 533, 537, 554, 555, 563, 564, 569, 581, 587, 590, 652, 655, 657, 681, 682, 683, 685, 686, 688, 689, 697, 699, 707, 709, 711, 713, 721, 724, 725, 727, 849, 851, 854, 857, 875], "bennett": [4, 242, 851], "allison": [4, 242, 851], "sekul": [4, 242, 851], "healthi": [4, 242, 399, 400, 851, 863], "ag": [4, 111, 136, 188, 242, 262, 263, 264, 265, 385, 400, 475, 476, 477, 660, 851, 865, 875], "scalp": [4, 19, 27, 69, 70, 74, 77, 120, 128, 133, 141, 143, 148, 150, 154, 155, 157, 165, 169, 182, 183, 184, 189, 197, 198, 203, 205, 206, 208, 209, 210, 216, 219, 237, 242, 254, 262, 263, 264, 265, 267, 306, 426, 466, 475, 476, 519, 555, 564, 587, 628, 640, 697, 699, 742, 758, 774, 796, 810, 830, 835, 838, 841, 850, 851, 854, 857, 860, 875], "sensit": [4, 5, 7, 23, 25, 27, 80, 120, 128, 150, 157, 177, 201, 205, 210, 228, 234, 242, 262, 263, 264, 265, 266, 267, 272, 273, 275, 362, 451, 475, 476, 552, 555, 615, 621, 636, 663, 682, 683, 685, 686, 742, 786, 851, 856, 875], "frontier": [4, 10, 19, 133, 150, 193, 200, 242, 413, 560, 849, 851], "psychologi": [4, 10, 150, 200, 242, 677, 851], "19": [4, 9, 11, 13, 19, 28, 33, 34, 35, 41, 42, 45, 47, 49, 56, 58, 64, 70, 72, 75, 79, 81, 88, 91, 92, 101, 104, 106, 107, 112, 125, 136, 139, 140, 145, 150, 156, 157, 165, 166, 167, 168, 170, 177, 178, 179, 180, 181, 182, 183, 184, 186, 190, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 212, 213, 214, 215, 216, 221, 224, 225, 226, 228, 229, 231, 232, 233, 234, 236, 239, 241, 242, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 273, 275, 276, 277, 278, 302, 304, 307, 326, 426, 470, 475, 476, 514, 518, 548, 554, 555, 640, 690, 694, 695, 698, 714, 758, 761, 766, 767, 770, 772, 789, 795, 806, 816, 832, 833, 851, 857], "14": [4, 5, 8, 9, 11, 16, 19, 22, 24, 25, 28, 32, 33, 34, 35, 43, 45, 46, 47, 48, 49, 54, 55, 56, 58, 65, 78, 79, 81, 83, 88, 89, 91, 92, 101, 105, 106, 107, 110, 112, 118, 119, 121, 136, 140, 144, 147, 149, 151, 156, 157, 161, 167, 168, 170, 171, 174, 176, 177, 178, 179, 182, 184, 189, 190, 192, 193, 194, 198, 200, 205, 207, 208, 212, 219, 221, 224, 225, 226, 228, 229, 231, 232, 233, 234, 239, 242, 253, 260, 262, 263, 264, 265, 275, 304, 357, 377, 408, 409, 413, 418, 423, 442, 443, 445, 475, 476, 492, 503, 555, 571, 572, 587, 695, 713, 714, 722, 723, 742, 770, 772, 783, 790, 798, 851, 857], "2010": [4, 92, 115, 154, 200, 242, 295, 352, 407, 724, 727, 851, 875], "3389": [4, 10, 19, 133, 150, 193, 200, 242, 413, 560, 849, 851], "fpsyg": [4, 150, 200, 242, 851], "00019": [4, 242, 851], "parametr": [4, 68, 92, 111, 164, 165, 229, 230, 231, 242, 262, 264, 265, 267, 316, 351, 448, 475, 522, 552, 555, 610, 630, 674, 675, 682, 683, 685, 686, 688, 689, 698, 725, 766, 787, 830, 872, 875], "studi": [4, 33, 69, 119, 143, 150, 160, 177, 179, 200, 202, 208, 221, 226, 228, 229, 242, 288, 295, 399, 400, 431, 830, 850, 857, 875], "bmc": [4, 16, 194, 242, 408, 423], "98": [4, 13, 15, 19, 33, 35, 42, 44, 47, 79, 110, 112, 115, 121, 136, 158, 168, 176, 179, 190, 193, 194, 207, 221, 224, 225, 226, 227, 228, 229, 234, 242, 288, 295, 340, 342, 583, 682, 683, 685, 686], "2008": [4, 10, 35, 44, 150, 169, 179, 203, 221, 224, 225, 242, 274, 295, 296, 336, 358, 407, 428, 446, 470, 537, 555, 655, 682, 683, 685, 686], "1186": [4, 16, 194, 207, 242, 408, 423], "1471": [4, 16, 194, 242, 408, 423], "2202": [4, 16, 194, 242, 408, 423], "24": [4, 6, 10, 11, 13, 19, 21, 26, 28, 34, 35, 45, 46, 47, 52, 56, 64, 66, 79, 101, 104, 106, 107, 110, 112, 113, 116, 121, 128, 129, 143, 163, 168, 170, 173, 180, 182, 188, 190, 193, 194, 196, 207, 208, 220, 221, 223, 224, 225, 226, 228, 229, 232, 233, 234, 239, 242, 244, 256, 260, 262, 263, 264, 265, 267, 268, 272, 275, 295, 341, 347, 359, 361, 386, 415, 437, 438, 439, 440, 450, 472, 475, 476, 483, 490, 498, 503, 515, 522, 555, 558, 690, 694, 695, 697, 698, 699, 731, 732, 739, 742, 752, 760, 765, 772, 789, 795, 796, 804, 807, 811, 821, 850, 857], "972": [4, 6, 194, 229], "542": [4, 6, 142, 147], "limo_data": [4, 6], "dataset": [5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 185, 186, 189, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 240, 241, 242, 254, 256, 259, 260, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 295, 296, 300, 307, 310, 326, 343, 351, 352, 353, 354, 356, 357, 359, 361, 366, 367, 368, 407, 410, 414, 417, 424, 427, 436, 438, 439, 448, 450, 451, 464, 470, 472, 473, 475, 476, 485, 486, 488, 512, 513, 514, 518, 519, 521, 522, 525, 528, 529, 533, 538, 539, 552, 555, 568, 572, 577, 583, 591, 612, 613, 614, 615, 621, 628, 643, 680, 682, 683, 685, 686, 695, 697, 698, 717, 728, 742, 758, 766, 770, 775, 782, 804, 810, 821, 834, 852, 857, 858, 863, 865, 875], "electr": [5, 165, 179, 197, 205, 206, 242, 295, 296, 555, 563, 762, 830, 835, 850, 860], "stimul": [5, 32, 45, 150, 179, 234, 262, 263, 264, 265, 357, 475, 476, 552, 553, 558, 577, 645, 695, 697, 698, 699, 742, 758, 851, 857, 875], "deliv": 5, "left": [5, 10, 11, 13, 15, 23, 25, 27, 30, 31, 35, 38, 39, 40, 41, 43, 44, 45, 47, 48, 50, 52, 54, 55, 57, 58, 59, 60, 61, 70, 72, 77, 78, 81, 84, 85, 92, 110, 114, 117, 118, 122, 125, 126, 130, 132, 133, 134, 139, 140, 141, 142, 143, 144, 148, 149, 150, 151, 154, 155, 157, 159, 165, 167, 171, 174, 177, 179, 180, 181, 190, 193, 194, 202, 203, 204, 205, 206, 208, 214, 215, 216, 220, 221, 225, 228, 232, 233, 234, 237, 255, 256, 258, 259, 262, 263, 264, 265, 267, 268, 269, 270, 271, 273, 275, 276, 277, 278, 310, 312, 322, 323, 333, 334, 358, 377, 382, 407, 414, 429, 431, 434, 441, 465, 473, 475, 476, 498, 508, 520, 554, 555, 630, 635, 643, 644, 647, 658, 695, 697, 698, 699, 742, 758, 766, 772, 773, 774, 776, 778, 780, 781, 782, 785, 793, 794, 795, 796, 797, 802, 806, 810, 830, 851, 857, 860, 875], "wrist": 5, "somatosensori": [5, 32, 34, 46, 111, 238, 242, 389, 875], "nine": [5, 141], "quspin": 5, "serf": 5, "place": [5, 7, 26, 125, 133, 139, 148, 149, 150, 155, 160, 164, 165, 168, 172, 173, 177, 200, 202, 203, 204, 206, 208, 210, 213, 219, 232, 256, 259, 261, 262, 263, 264, 265, 266, 267, 271, 274, 279, 280, 285, 310, 315, 318, 338, 345, 361, 362, 378, 381, 382, 384, 407, 414, 429, 431, 432, 445, 446, 475, 476, 477, 486, 533, 542, 547, 554, 555, 567, 568, 569, 572, 576, 577, 580, 631, 637, 640, 645, 646, 647, 648, 660, 692, 695, 696, 697, 698, 699, 712, 729, 745, 759, 763, 774, 781, 785, 794, 797, 802, 804, 830, 834, 851, 855, 857, 858, 860, 861, 875], "side": [5, 19, 32, 45, 69, 140, 155, 165, 202, 206, 232, 239, 259, 260, 262, 263, 264, 265, 269, 271, 273, 277, 407, 414, 475, 476, 554, 555, 569, 574, 583, 680, 682, 683, 685, 686, 695, 696, 697, 699, 742, 759, 768, 770, 772, 774, 781, 785, 788, 794, 797, 800, 802, 804, 852, 857, 875], "somatomotor": 5, "custom": [5, 27, 36, 56, 107, 118, 120, 124, 128, 133, 139, 141, 144, 148, 149, 150, 166, 200, 201, 202, 203, 205, 206, 219, 229, 239, 254, 259, 262, 263, 264, 265, 266, 267, 269, 270, 272, 273, 276, 277, 278, 319, 323, 325, 382, 475, 476, 552, 555, 604, 613, 615, 675, 699, 736, 742, 755, 760, 761, 772, 779, 789, 795, 800, 801, 805, 806, 830, 834, 850, 851, 852, 854, 875], "opm_sampl": [5, 107], "subjects_dir": [5, 7, 11, 22, 24, 26, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 54, 55, 58, 59, 60, 67, 79, 88, 92, 93, 102, 107, 113, 114, 116, 122, 123, 124, 125, 129, 132, 133, 134, 135, 149, 154, 155, 156, 157, 158, 159, 160, 165, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 189, 190, 194, 209, 220, 221, 232, 233, 234, 254, 260, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 301, 305, 306, 307, 310, 358, 363, 364, 365, 369, 381, 383, 384, 385, 386, 426, 457, 459, 461, 463, 465, 466, 467, 468, 469, 508, 512, 514, 541, 542, 580, 600, 618, 620, 627, 632, 633, 634, 635, 643, 644, 658, 661, 672, 690, 691, 734, 741, 742, 758, 760, 770, 800, 805, 806, 815, 825, 840, 850, 857, 875], "raw_fnam": [5, 7, 8, 9, 11, 13, 14, 15, 16, 18, 26, 32, 33, 34, 42, 45, 46, 49, 68, 69, 71, 72, 73, 75, 80, 81, 86, 91, 94, 95, 97, 98, 105, 106, 108, 109, 111, 115, 117, 119, 130, 131, 140, 151, 155, 157, 158, 161, 176, 179, 182, 184, 194, 202, 221, 226, 227, 228, 229, 232, 234, 238, 851, 857], "opm_sef_raw": 5, "bem_fnam": [5, 45, 67, 107], "bem": [5, 7, 23, 26, 27, 40, 41, 43, 44, 45, 50, 67, 107, 123, 133, 134, 135, 149, 154, 155, 158, 159, 162, 163, 164, 175, 179, 180, 181, 182, 183, 184, 189, 190, 206, 232, 233, 234, 252, 260, 272, 275, 363, 383, 406, 426, 450, 457, 512, 513, 514, 517, 518, 580, 602, 603, 626, 632, 634, 635, 644, 660, 758, 760, 817, 818, 823, 828, 830, 840, 851, 860, 865, 875], "5120": [5, 7, 26, 41, 45, 50, 67, 107, 149, 157, 158, 175, 180, 181, 254, 406, 512, 518, 660, 850], "sol": [5, 7, 22, 26, 41, 45, 50, 67, 107, 157, 158, 175, 180, 181, 254, 266, 518, 660, 850, 860], "fwd_fname": [5, 22, 31, 35, 40, 46, 51, 59, 67, 88, 90, 91, 92, 93, 179, 190, 221], "fwd": [5, 11, 22, 26, 31, 32, 33, 34, 35, 40, 42, 43, 45, 46, 47, 48, 49, 51, 54, 55, 58, 59, 67, 88, 90, 91, 92, 93, 107, 129, 157, 158, 171, 174, 175, 176, 177, 178, 179, 181, 190, 194, 220, 221, 254, 266, 273, 282, 283, 284, 362, 441, 453, 454, 517, 518, 615, 636, 659, 660, 742, 758, 822, 850, 857], "coil_def_fnam": 5, "coil_def": [5, 107, 851, 857, 860], "dat": [5, 107, 208, 330, 489, 504, 566, 574, 583, 594, 599, 851, 857, 875], "read_raw_fif": [5, 10, 11, 13, 14, 15, 16, 18, 28, 29, 32, 33, 34, 42, 45, 46, 49, 61, 67, 68, 70, 71, 72, 73, 75, 78, 81, 82, 86, 90, 91, 94, 95, 97, 98, 101, 102, 105, 106, 107, 108, 109, 111, 113, 115, 116, 119, 121, 125, 127, 130, 131, 139, 140, 141, 144, 145, 148, 150, 151, 155, 161, 165, 166, 167, 168, 169, 176, 179, 181, 182, 187, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 213, 214, 215, 216, 220, 226, 227, 228, 229, 232, 234, 237, 238, 256, 481, 857, 861, 865, 875], "h_trans_bandwidth": [5, 21, 111, 112, 190, 200, 209, 262, 263, 264, 265, 409, 418, 443, 445, 475, 476, 587, 875], "notch_width": [5, 446, 475, 476], "threshold": [5, 30, 34, 38, 73, 80, 94, 110, 118, 144, 150, 164, 165, 171, 181, 183, 187, 190, 198, 199, 203, 205, 208, 226, 227, 228, 229, 230, 231, 232, 233, 234, 242, 254, 257, 262, 263, 264, 265, 267, 306, 316, 322, 351, 356, 446, 475, 476, 499, 537, 555, 557, 560, 567, 569, 571, 572, 574, 575, 576, 578, 588, 606, 651, 652, 653, 654, 655, 656, 657, 678, 679, 682, 683, 685, 686, 687, 698, 742, 766, 771, 772, 788, 815, 850, 857, 863, 875], "larger": [5, 49, 59, 69, 149, 178, 194, 197, 200, 202, 208, 216, 226, 239, 262, 263, 272, 277, 278, 451, 475, 476, 557, 576, 592, 690, 723, 724, 726, 727, 772, 795, 803, 806, 856, 857, 875], "squid": [5, 107, 210, 242, 830, 851, 857], "2e": [5, 8, 9, 21, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 69, 73, 88, 91, 92, 107, 117, 119, 151, 161, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 220, 221, 567, 568], "trigger": [5, 10, 91, 101, 107, 143, 165, 167, 170, 176, 181, 184, 187, 188, 189, 190, 199, 204, 209, 210, 224, 254, 255, 352, 357, 448, 449, 475, 476, 483, 490, 492, 497, 499, 572, 576, 610, 660, 830, 834, 850, 857, 860, 875], "257": [5, 113, 168, 169, 207, 224, 229, 851], "sti101": [5, 167, 255, 448, 449], "mask": [5, 28, 31, 80, 94, 98, 99, 110, 118, 141, 184, 200, 204, 220, 224, 225, 226, 227, 228, 229, 255, 259, 262, 263, 264, 265, 271, 407, 413, 414, 448, 475, 476, 483, 554, 555, 569, 610, 682, 683, 685, 686, 695, 697, 699, 759, 774, 778, 781, 785, 794, 797, 802, 804, 854, 875], "mask_typ": [5, 184, 255, 448, 483, 610, 875], "verbos": [5, 10, 11, 13, 14, 15, 34, 38, 40, 41, 42, 44, 49, 51, 58, 69, 74, 77, 78, 82, 86, 91, 92, 97, 102, 106, 107, 119, 121, 122, 124, 132, 133, 134, 135, 139, 141, 144, 145, 148, 149, 151, 156, 157, 158, 161, 169, 170, 171, 176, 178, 179, 180, 181, 182, 183, 189, 194, 198, 199, 200, 203, 206, 207, 208, 209, 210, 214, 215, 224, 225, 226, 232, 237, 239, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 301, 302, 303, 304, 305, 306, 307, 310, 312, 314, 315, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 379, 380, 381, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 409, 410, 412, 413, 417, 418, 420, 423, 424, 426, 428, 432, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 450, 451, 452, 457, 458, 462, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 510, 511, 512, 513, 514, 515, 517, 518, 519, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 548, 551, 555, 557, 558, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 578, 579, 580, 581, 583, 584, 586, 587, 590, 591, 592, 595, 596, 597, 598, 602, 603, 604, 605, 606, 607, 609, 610, 611, 613, 614, 615, 617, 618, 619, 620, 621, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 640, 642, 643, 644, 646, 647, 648, 649, 659, 660, 663, 665, 666, 667, 668, 669, 670, 671, 682, 683, 684, 685, 686, 690, 691, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 713, 714, 717, 718, 722, 723, 725, 726, 727, 728, 731, 732, 737, 738, 741, 742, 750, 758, 767, 770, 774, 775, 776, 777, 782, 785, 786, 787, 792, 793, 795, 796, 798, 799, 800, 801, 805, 806, 807, 811, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 832, 834, 865, 875], "error": [5, 10, 13, 38, 42, 54, 55, 88, 91, 107, 112, 132, 134, 135, 139, 143, 148, 151, 156, 161, 170, 171, 180, 182, 184, 187, 193, 194, 199, 200, 203, 206, 210, 224, 225, 228, 242, 257, 262, 263, 264, 265, 267, 268, 269, 270, 273, 276, 277, 278, 282, 283, 314, 337, 346, 347, 352, 356, 359, 361, 363, 366, 367, 399, 426, 441, 442, 454, 455, 457, 475, 476, 491, 495, 537, 546, 555, 566, 574, 582, 583, 601, 603, 607, 632, 634, 642, 652, 655, 657, 673, 679, 680, 684, 695, 697, 698, 699, 739, 740, 742, 773, 775, 786, 821, 823, 833, 834, 839, 840, 845, 850, 851, 854, 857, 860, 875], "suppress": [5, 13, 27, 38, 49, 76, 82, 83, 135, 144, 149, 150, 170, 179, 183, 187, 197, 198, 200, 201, 202, 205, 210, 242, 254, 259, 262, 263, 264, 265, 266, 267, 268, 273, 339, 341, 345, 362, 443, 445, 446, 475, 476, 552, 553, 570, 604, 615, 618, 641, 659, 661, 779, 830, 851, 857, 875], "warn": [5, 10, 13, 38, 132, 134, 135, 139, 150, 161, 170, 171, 180, 183, 190, 201, 203, 204, 214, 215, 226, 237, 254, 256, 257, 262, 263, 264, 265, 267, 269, 270, 272, 273, 274, 276, 277, 278, 282, 283, 314, 337, 340, 346, 347, 352, 356, 358, 359, 361, 363, 366, 367, 399, 426, 434, 441, 454, 457, 475, 476, 495, 555, 566, 574, 583, 584, 603, 613, 632, 634, 637, 641, 642, 695, 697, 698, 699, 738, 740, 742, 775, 786, 821, 823, 840, 842, 865, 875], "about": [5, 13, 19, 27, 34, 43, 44, 69, 73, 92, 99, 112, 139, 140, 142, 143, 145, 148, 150, 154, 159, 161, 165, 167, 168, 171, 174, 177, 183, 187, 188, 189, 190, 193, 194, 198, 200, 201, 203, 204, 208, 209, 213, 214, 215, 220, 221, 224, 226, 254, 255, 257, 259, 261, 262, 263, 264, 265, 267, 271, 272, 273, 275, 280, 282, 283, 295, 296, 297, 303, 304, 308, 309, 316, 317, 318, 322, 324, 325, 338, 340, 342, 347, 356, 365, 366, 367, 368, 370, 407, 409, 414, 415, 416, 426, 431, 448, 451, 458, 467, 474, 475, 476, 477, 480, 506, 511, 518, 519, 523, 533, 551, 552, 555, 566, 580, 588, 589, 610, 630, 631, 659, 660, 663, 681, 695, 696, 697, 698, 699, 722, 723, 725, 726, 742, 755, 758, 762, 767, 768, 777, 784, 794, 798, 830, 834, 838, 850, 851, 853, 854, 856, 858, 860, 863, 875], "decim": [5, 7, 11, 12, 13, 18, 19, 24, 33, 34, 41, 42, 101, 107, 110, 157, 160, 161, 165, 171, 180, 182, 194, 201, 203, 208, 225, 226, 227, 228, 229, 238, 254, 257, 260, 261, 262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 306, 406, 420, 428, 448, 475, 476, 499, 515, 538, 539, 555, 571, 572, 606, 609, 664, 681, 695, 698, 701, 704, 720, 722, 723, 724, 725, 726, 727, 742, 760, 772, 795, 850, 857, 860, 875], "caus": [5, 13, 44, 69, 141, 150, 160, 197, 198, 199, 200, 201, 204, 208, 210, 215, 259, 262, 263, 264, 265, 272, 466, 475, 476, 503, 555, 739, 776, 781, 835, 850, 875], "alias": [5, 13, 161, 180, 201, 257, 260, 261, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 420, 475, 476, 571, 572, 695, 698, 720, 722, 723, 725, 726, 772, 795, 808, 854, 875], "ideal": [5, 69, 106, 131, 134, 143, 150, 169, 200, 202, 205, 206, 225, 239, 310, 783, 790, 830, 834, 854, 857], "instead": [5, 43, 73, 102, 112, 118, 133, 135, 141, 142, 145, 148, 149, 150, 155, 157, 159, 160, 165, 167, 168, 169, 170, 171, 194, 198, 199, 200, 201, 203, 204, 208, 210, 213, 214, 216, 221, 224, 232, 233, 234, 237, 238, 254, 257, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 273, 274, 276, 277, 278, 287, 288, 289, 290, 293, 295, 305, 307, 310, 351, 352, 357, 436, 437, 438, 439, 440, 441, 448, 455, 458, 463, 474, 475, 476, 524, 526, 529, 555, 556, 557, 590, 629, 640, 644, 659, 695, 698, 711, 721, 722, 723, 724, 725, 726, 727, 742, 744, 766, 772, 776, 782, 789, 795, 804, 812, 832, 833, 834, 838, 839, 842, 850, 851, 852, 857, 875], "proj": [5, 8, 9, 11, 13, 14, 15, 18, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 70, 77, 84, 85, 86, 90, 107, 109, 114, 115, 117, 118, 119, 122, 125, 129, 139, 141, 144, 148, 149, 150, 161, 165, 168, 171, 175, 176, 177, 178, 179, 180, 181, 182, 190, 194, 197, 201, 204, 205, 206, 209, 213, 216, 219, 254, 257, 259, 262, 263, 264, 265, 267, 271, 272, 295, 296, 339, 340, 352, 353, 354, 355, 356, 368, 474, 475, 476, 515, 554, 555, 567, 568, 571, 598, 606, 613, 621, 636, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 767, 774, 776, 778, 780, 781, 793, 794, 795, 796, 826, 830, 850, 875], "cov": [5, 11, 21, 31, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 64, 67, 82, 88, 90, 91, 92, 93, 119, 151, 171, 175, 177, 178, 180, 181, 182, 183, 184, 190, 193, 194, 220, 221, 254, 259, 272, 273, 352, 357, 450, 511, 523, 545, 555, 604, 622, 649, 659, 740, 767, 819, 834, 850, 851, 854, 865, 875], "compute_covari": [5, 7, 34, 42, 46, 49, 82, 91, 119, 151, 161, 176, 179, 181, 182, 184, 194, 220, 259, 357, 368, 407, 414, 415, 556, 604, 740, 850, 854, 865, 875], "del": [5, 18, 33, 41, 42, 46, 47, 48, 49, 50, 54, 55, 107, 111, 133, 135, 139, 141, 144, 148, 165, 171, 176, 178, 179, 180, 182, 183, 190, 194, 200, 203], "open": [5, 11, 13, 14, 15, 16, 18, 28, 29, 32, 33, 34, 42, 45, 46, 49, 61, 67, 68, 69, 70, 71, 72, 73, 75, 78, 81, 82, 86, 90, 91, 94, 95, 97, 98, 101, 102, 105, 107, 108, 109, 111, 113, 115, 116, 119, 121, 125, 127, 130, 131, 133, 134, 140, 141, 143, 145, 149, 150, 151, 154, 155, 160, 161, 164, 165, 166, 167, 168, 171, 176, 179, 181, 182, 194, 197, 198, 199, 201, 202, 203, 204, 205, 207, 208, 213, 216, 220, 221, 226, 227, 228, 229, 232, 234, 238, 239, 242, 261, 262, 263, 264, 265, 272, 275, 377, 475, 476, 555, 563, 660, 780, 785, 795, 803, 830, 831, 833, 838, 840, 841, 851, 853, 854, 856, 860, 875], "isotrak": [5, 42, 99, 107, 121, 127, 142, 161, 171, 205, 207, 225, 254, 335, 857], "700999": 5, "700": [5, 79, 113, 126, 133, 207, 229, 711, 721, 742], "999": [5, 19, 34, 75, 78, 82, 90, 94, 107, 109, 121, 127, 129, 141, 143, 158, 167, 171, 182, 203, 204, 206, 207, 208, 229, 567, 571, 575, 578], "lowpass": [5, 11, 70, 72, 75, 79, 80, 81, 82, 88, 91, 125, 140, 145, 150, 165, 166, 167, 168, 190, 197, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 219, 221, 254, 260, 261, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 442, 475, 476, 695, 697, 698, 699, 772, 795, 796, 860, 875], "331": [5, 34, 82, 112, 168, 194, 200, 207, 208, 224], "48": [5, 11, 12, 13, 19, 21, 28, 35, 45, 46, 47, 79, 92, 101, 106, 107, 110, 112, 144, 150, 156, 167, 168, 170, 179, 186, 193, 194, 207, 210, 215, 224, 225, 226, 228, 229, 232, 234, 242, 875], "6601": 5, "initi": [5, 16, 19, 21, 41, 43, 44, 69, 91, 94, 107, 110, 143, 148, 150, 155, 167, 179, 184, 190, 203, 210, 213, 219, 224, 225, 226, 227, 228, 229, 232, 233, 234, 239, 253, 254, 260, 262, 263, 268, 269, 270, 272, 273, 274, 276, 277, 278, 370, 372, 470, 475, 476, 482, 502, 508, 555, 581, 590, 592, 600, 647, 648, 649, 658, 659, 661, 674, 682, 683, 684, 685, 686, 698, 732, 742, 770, 772, 786, 789, 795, 800, 805, 806, 834, 839, 841, 856, 857, 860, 875], "256": [5, 12, 21, 69, 107, 113, 122, 133, 155, 159, 168, 169, 170, 171, 182, 221, 228, 229, 275, 439, 694, 714, 757, 832, 857], "initial_ev": [5, 88, 91, 107, 184, 210, 221, 448, 875], "detect": [5, 8, 9, 12, 22, 27, 67, 69, 71, 73, 76, 80, 81, 91, 107, 110, 125, 136, 145, 150, 156, 158, 161, 164, 167, 171, 184, 189, 190, 194, 198, 200, 201, 202, 203, 204, 205, 208, 210, 211, 212, 214, 239, 242, 254, 255, 262, 263, 264, 265, 267, 272, 316, 339, 341, 345, 446, 475, 476, 481, 503, 552, 555, 557, 559, 560, 561, 563, 567, 568, 570, 571, 572, 574, 575, 576, 578, 583, 681, 695, 724, 727, 742, 772, 788, 789, 795, 841, 854, 857, 864, 875], "201": [5, 45, 125, 135, 168, 175, 180, 182, 207, 224, 228, 229, 234, 860], "rank": [5, 7, 8, 9, 12, 15, 21, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 82, 86, 88, 91, 92, 102, 105, 106, 107, 108, 111, 119, 151, 161, 165, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 198, 202, 203, 204, 220, 221, 232, 234, 259, 264, 265, 295, 296, 352, 356, 357, 366, 367, 368, 407, 414, 415, 450, 451, 470, 472, 473, 527, 533, 555, 767, 782, 830, 854, 875], "toler": [5, 8, 9, 21, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 88, 91, 92, 107, 119, 151, 161, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 200, 203, 204, 220, 221, 356, 470, 472, 473, 555, 592, 857, 875], "1e": [5, 8, 9, 32, 33, 34, 40, 45, 46, 49, 59, 65, 69, 70, 73, 80, 91, 92, 112, 118, 119, 136, 157, 161, 178, 179, 182, 184, 194, 199, 200, 220, 221, 224, 262, 263, 272, 470, 475, 476, 522, 554, 564, 581, 661, 688, 695, 772, 795, 797, 802, 830, 875], "16": [5, 8, 9, 11, 12, 13, 19, 20, 21, 22, 28, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 58, 59, 60, 70, 77, 78, 79, 83, 88, 91, 92, 94, 98, 101, 106, 107, 112, 119, 121, 143, 151, 155, 159, 161, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 200, 201, 203, 205, 206, 207, 208, 209, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 239, 242, 255, 257, 261, 262, 263, 264, 265, 272, 275, 352, 407, 414, 448, 466, 475, 476, 483, 522, 524, 525, 528, 529, 535, 538, 555, 563, 571, 591, 675, 695, 697, 698, 699, 758, 772, 776, 778, 780, 781, 782, 784, 795, 857, 860], "ep": [5, 8, 9, 21, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 88, 91, 92, 107, 119, 151, 161, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 220, 221, 522], "dim": [5, 8, 9, 21, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 88, 91, 92, 107, 119, 151, 159, 161, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 220, 221, 237, 259, 528, 529, 538, 539, 556, 698, 860], "singular": [5, 8, 9, 21, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 88, 91, 92, 107, 119, 151, 161, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 204, 220, 221, 259, 269, 270, 273, 276, 277, 278, 356, 441, 530, 767, 857, 860], "reduc": [5, 8, 9, 12, 15, 16, 21, 27, 34, 40, 42, 46, 49, 55, 59, 70, 76, 82, 83, 86, 102, 105, 106, 107, 108, 112, 118, 119, 145, 148, 150, 156, 157, 161, 166, 171, 176, 179, 181, 182, 184, 190, 193, 194, 201, 202, 203, 204, 205, 206, 208, 210, 213, 220, 226, 227, 229, 232, 233, 234, 238, 242, 259, 262, 263, 264, 265, 266, 269, 270, 273, 276, 277, 278, 295, 296, 352, 356, 357, 366, 367, 368, 384, 407, 408, 414, 420, 423, 424, 430, 442, 448, 450, 451, 470, 472, 473, 475, 476, 525, 528, 529, 533, 538, 539, 554, 555, 581, 591, 638, 682, 683, 685, 686, 701, 704, 720, 722, 723, 724, 725, 726, 727, 776, 781, 782, 830, 834, 854, 857, 860, 875], "covari": [5, 8, 9, 11, 12, 15, 19, 21, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 62, 66, 67, 79, 86, 88, 90, 91, 92, 101, 102, 105, 106, 107, 108, 111, 120, 122, 128, 148, 151, 162, 163, 164, 165, 175, 177, 178, 180, 181, 182, 183, 184, 190, 194, 198, 199, 203, 221, 232, 234, 242, 254, 262, 263, 264, 265, 266, 267, 272, 273, 292, 295, 296, 298, 315, 351, 352, 353, 355, 356, 357, 366, 367, 368, 407, 413, 414, 415, 432, 448, 450, 451, 470, 472, 473, 475, 476, 480, 511, 521, 522, 523, 524, 525, 526, 528, 529, 533, 535, 538, 539, 547, 555, 556, 604, 610, 615, 649, 659, 681, 696, 706, 742, 767, 772, 776, 780, 782, 795, 819, 830, 851, 860, 865, 875], "empir": [5, 8, 9, 15, 27, 31, 36, 46, 49, 56, 86, 91, 119, 161, 176, 179, 181, 182, 184, 194, 208, 220, 242, 259, 264, 265, 266, 267, 273, 295, 296, 352, 356, 357, 366, 367, 368, 407, 414, 415, 450, 451, 470, 471, 472, 473, 533, 556, 604, 613, 615, 769, 770, 782, 801, 875], "10251": 5, "examin": [5, 34, 47, 73, 127, 135, 141, 144, 145, 150, 159, 165, 176, 177, 203, 213, 215, 834, 854], "align": [5, 7, 9, 28, 78, 134, 150, 154, 156, 157, 162, 163, 164, 167, 171, 181, 182, 183, 189, 213, 224, 256, 260, 262, 263, 267, 269, 270, 273, 274, 275, 276, 277, 278, 300, 306, 310, 363, 365, 386, 426, 441, 466, 467, 475, 519, 555, 625, 626, 628, 644, 731, 732, 742, 758, 770, 772, 810, 815, 830, 857, 875], "forward": [5, 7, 12, 22, 26, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 67, 71, 78, 88, 90, 91, 92, 93, 129, 134, 145, 154, 155, 159, 160, 163, 165, 169, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 187, 190, 194, 197, 198, 199, 200, 202, 203, 205, 206, 220, 221, 242, 254, 262, 263, 264, 265, 267, 270, 272, 273, 275, 276, 278, 282, 283, 284, 295, 296, 297, 298, 300, 305, 307, 310, 314, 315, 326, 332, 358, 362, 370, 385, 407, 409, 414, 418, 432, 434, 435, 443, 445, 446, 466, 470, 471, 472, 473, 475, 476, 480, 490, 512, 513, 517, 518, 519, 531, 532, 533, 534, 537, 548, 553, 602, 615, 625, 636, 640, 643, 644, 646, 647, 648, 659, 660, 695, 736, 742, 758, 760, 779, 783, 808, 810, 822, 830, 835, 846, 851, 856, 860, 863, 865, 875], "mri": [5, 24, 26, 30, 35, 40, 41, 43, 44, 45, 50, 59, 91, 92, 107, 113, 122, 123, 133, 134, 135, 149, 156, 157, 160, 162, 163, 164, 165, 169, 175, 177, 180, 182, 183, 184, 185, 186, 187, 188, 189, 206, 213, 221, 242, 259, 260, 262, 264, 265, 266, 267, 272, 273, 274, 275, 277, 278, 300, 301, 302, 305, 306, 307, 310, 314, 323, 326, 328, 332, 352, 358, 363, 364, 365, 369, 370, 383, 385, 386, 426, 441, 448, 450, 458, 459, 460, 466, 467, 468, 469, 475, 476, 490, 505, 507, 514, 517, 518, 521, 522, 533, 580, 602, 625, 627, 632, 633, 634, 635, 644, 663, 690, 729, 730, 732, 734, 742, 753, 758, 760, 770, 806, 810, 823, 830, 835, 838, 841, 850, 854, 860, 863, 865, 875], "ident": [5, 45, 69, 97, 107, 123, 134, 149, 155, 157, 159, 165, 182, 183, 184, 193, 203, 206, 208, 210, 260, 267, 274, 275, 302, 370, 386, 431, 507, 514, 517, 518, 528, 530, 574, 581, 583, 605, 660, 690, 730, 758, 830, 850, 851, 852, 857, 860, 875], "matrix": [5, 9, 10, 11, 15, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 62, 66, 67, 77, 79, 85, 88, 90, 91, 92, 93, 94, 95, 102, 103, 104, 105, 106, 107, 108, 117, 119, 122, 129, 132, 133, 136, 140, 149, 150, 151, 155, 156, 157, 158, 159, 162, 163, 164, 165, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 190, 193, 194, 198, 203, 204, 205, 220, 221, 225, 226, 227, 228, 229, 233, 234, 242, 254, 259, 260, 262, 264, 265, 267, 272, 274, 275, 292, 295, 296, 297, 302, 310, 313, 314, 316, 327, 352, 357, 358, 366, 367, 368, 413, 428, 448, 451, 475, 476, 480, 514, 518, 522, 528, 529, 530, 531, 532, 533, 534, 537, 538, 539, 547, 552, 555, 556, 562, 563, 581, 584, 604, 608, 610, 644, 649, 660, 665, 666, 667, 668, 669, 670, 671, 675, 680, 681, 682, 683, 685, 686, 690, 696, 703, 704, 705, 712, 730, 758, 762, 763, 767, 768, 785, 786, 789, 819, 830, 851, 875], "co": [5, 22, 67, 156, 200, 208, 219, 242, 339, 433, 830, 851, 857], "registr": [5, 43, 44, 132, 133, 156, 179, 242, 274, 358, 731, 732, 815, 840, 851, 857, 875], "equat": [5, 134, 155, 193, 194, 204, 242, 428, 566, 724, 727, 857, 863], "mi": [5, 851], "defin": [5, 8, 9, 10, 12, 18, 19, 21, 27, 31, 33, 43, 44, 60, 61, 75, 76, 83, 92, 93, 102, 105, 109, 112, 118, 126, 133, 135, 139, 140, 141, 143, 150, 154, 157, 159, 161, 162, 164, 166, 167, 169, 171, 174, 177, 179, 181, 189, 190, 193, 194, 200, 204, 209, 221, 227, 228, 229, 232, 234, 238, 239, 242, 254, 255, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 282, 283, 288, 295, 296, 310, 315, 318, 332, 333, 352, 358, 362, 382, 388, 407, 413, 414, 432, 433, 436, 442, 462, 465, 475, 476, 481, 487, 507, 508, 509, 517, 522, 523, 524, 525, 526, 529, 533, 538, 539, 541, 552, 554, 555, 556, 558, 559, 569, 581, 600, 605, 610, 644, 647, 648, 649, 652, 655, 657, 658, 659, 660, 661, 668, 671, 682, 683, 684, 685, 686, 690, 691, 695, 696, 697, 698, 699, 701, 703, 704, 705, 706, 709, 711, 721, 722, 723, 725, 726, 742, 747, 759, 763, 766, 773, 774, 776, 778, 781, 782, 785, 792, 794, 796, 797, 798, 802, 804, 805, 830, 834, 840, 850, 851, 856, 857, 860, 875], "base": [5, 7, 9, 11, 16, 21, 22, 27, 28, 32, 34, 35, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 54, 55, 58, 59, 61, 67, 69, 76, 81, 83, 88, 90, 92, 94, 97, 98, 101, 105, 107, 108, 110, 111, 112, 115, 117, 119, 130, 133, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 157, 159, 160, 161, 164, 165, 168, 169, 171, 175, 176, 177, 178, 179, 180, 181, 188, 190, 194, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 220, 221, 222, 224, 225, 226, 227, 228, 229, 232, 234, 237, 238, 239, 242, 251, 256, 257, 259, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 310, 312, 316, 317, 322, 327, 330, 339, 340, 341, 342, 345, 351, 352, 353, 354, 357, 358, 362, 372, 400, 407, 409, 410, 413, 414, 415, 417, 418, 420, 421, 424, 428, 430, 433, 436, 438, 440, 442, 443, 445, 446, 448, 451, 458, 464, 466, 474, 475, 476, 481, 492, 508, 514, 515, 518, 520, 523, 537, 552, 554, 555, 557, 558, 562, 563, 564, 565, 566, 569, 571, 572, 574, 575, 583, 596, 597, 598, 610, 615, 617, 634, 643, 647, 648, 655, 668, 671, 680, 681, 682, 683, 684, 685, 686, 690, 691, 695, 697, 698, 699, 701, 704, 707, 714, 722, 723, 725, 726, 728, 738, 742, 751, 753, 759, 761, 766, 771, 772, 774, 780, 781, 782, 783, 785, 787, 788, 789, 794, 795, 797, 799, 800, 802, 804, 805, 806, 822, 830, 832, 833, 834, 835, 837, 838, 843, 846, 850, 851, 854, 860, 863, 866, 870, 875], "lpa": [5, 133, 135, 155, 159, 304, 310, 323, 334, 343, 363, 365, 426, 482, 830, 851, 875], "nasion": [5, 155, 156, 159, 169, 304, 310, 323, 333, 334, 343, 363, 365, 426, 648, 830, 851, 857, 860, 875], "rpa": [5, 133, 135, 155, 159, 304, 310, 323, 334, 343, 363, 365, 426, 482, 830, 851, 875], "fine": [5, 180, 187, 208, 239, 267, 428, 565, 566, 574, 583, 594, 599, 875], "analys": [5, 11, 27, 31, 41, 68, 96, 100, 114, 134, 142, 145, 149, 150, 157, 159, 194, 198, 204, 205, 213, 225, 239, 242, 264, 265, 475, 476, 606, 679, 680, 766, 778, 841, 851, 857, 863, 875], "read_bem_solut": [5, 45, 107, 158, 513, 817, 865], "tran": [5, 7, 26, 41, 50, 51, 52, 67, 79, 107, 113, 114, 116, 122, 123, 133, 134, 135, 149, 156, 157, 158, 159, 171, 175, 177, 180, 181, 182, 189, 190, 206, 209, 254, 260, 272, 275, 298, 302, 310, 363, 364, 383, 386, 426, 428, 450, 458, 466, 467, 514, 517, 518, 562, 580, 583, 628, 660, 663, 690, 729, 730, 742, 758, 770, 829, 830, 850, 851, 857, 875], "solut": [5, 7, 11, 22, 23, 26, 27, 31, 32, 33, 34, 36, 38, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 67, 69, 70, 88, 90, 91, 92, 93, 103, 104, 105, 106, 107, 108, 122, 129, 155, 156, 158, 161, 164, 165, 169, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 190, 194, 198, 205, 220, 221, 232, 234, 242, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 282, 283, 284, 295, 296, 297, 307, 358, 362, 368, 441, 451, 452, 470, 471, 472, 473, 475, 476, 509, 513, 517, 518, 519, 521, 522, 523, 524, 525, 526, 529, 530, 533, 536, 537, 547, 548, 552, 553, 555, 595, 602, 604, 610, 613, 615, 617, 618, 625, 640, 643, 644, 646, 647, 648, 659, 660, 742, 758, 769, 770, 785, 787, 789, 800, 801, 805, 817, 822, 830, 832, 834, 835, 841, 846, 860, 865, 875], "must": [5, 18, 32, 43, 44, 47, 60, 81, 125, 126, 134, 143, 145, 155, 166, 168, 170, 171, 180, 183, 187, 189, 197, 198, 203, 205, 208, 215, 219, 224, 226, 228, 229, 232, 234, 239, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 280, 281, 284, 289, 295, 296, 312, 313, 316, 319, 323, 327, 339, 341, 345, 352, 356, 357, 358, 363, 366, 367, 368, 382, 388, 391, 406, 407, 413, 414, 415, 419, 422, 423, 424, 426, 431, 436, 439, 441, 448, 450, 451, 467, 470, 472, 473, 474, 475, 476, 483, 490, 495, 497, 507, 510, 515, 516, 517, 531, 532, 533, 554, 555, 557, 566, 568, 569, 570, 571, 574, 580, 583, 606, 637, 640, 644, 645, 656, 660, 661, 663, 665, 666, 669, 677, 680, 681, 682, 683, 685, 686, 690, 695, 697, 698, 699, 710, 714, 718, 725, 742, 745, 747, 758, 759, 761, 765, 766, 770, 772, 773, 774, 776, 778, 780, 781, 782, 783, 785, 789, 790, 794, 795, 796, 797, 798, 800, 803, 804, 805, 806, 838, 850, 851, 854, 856, 857, 860], "temporari": [5, 150, 171, 254, 267, 638, 750], "definit": [5, 26, 41, 45, 50, 107, 133, 157, 158, 159, 160, 161, 175, 180, 181, 182, 183, 184, 200, 206, 226, 242, 254, 267, 272, 295, 296, 318, 320, 327, 450, 475, 583, 629, 736, 742, 830, 850, 856, 858, 875], "use_coil_def": [5, 107, 865], "make_forward_solut": [5, 7, 26, 41, 50, 107, 157, 158, 181, 190, 206, 266, 615, 736, 850, 857, 865, 875], "src": [5, 7, 22, 24, 26, 28, 30, 31, 35, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 52, 54, 55, 59, 60, 67, 88, 90, 91, 92, 93, 107, 134, 135, 155, 157, 158, 159, 177, 179, 180, 181, 190, 206, 220, 232, 233, 234, 254, 266, 268, 269, 270, 273, 275, 276, 277, 278, 280, 296, 358, 441, 461, 471, 509, 510, 518, 531, 532, 535, 537, 542, 625, 635, 643, 644, 645, 652, 655, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 690, 691, 742, 758, 760, 800, 801, 805, 806, 827, 850, 860, 875], "mindist": [5, 24, 41, 45, 50, 155, 157, 158, 175, 180, 182, 183, 184, 206, 518, 644, 660], "read_forward_solut": [5, 22, 31, 32, 33, 34, 35, 40, 42, 43, 46, 47, 48, 49, 51, 54, 55, 58, 59, 67, 88, 90, 91, 92, 93, 129, 157, 176, 177, 178, 179, 190, 194, 220, 221, 266, 822, 865, 875], "orient": [5, 11, 22, 26, 28, 29, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 67, 78, 88, 90, 91, 92, 93, 102, 105, 106, 107, 108, 114, 122, 129, 133, 155, 157, 158, 159, 164, 165, 171, 174, 175, 176, 179, 180, 181, 182, 185, 186, 187, 190, 194, 206, 208, 220, 221, 224, 232, 234, 242, 259, 260, 261, 264, 266, 267, 269, 270, 273, 276, 277, 278, 282, 283, 295, 296, 297, 362, 427, 441, 450, 451, 452, 466, 470, 472, 473, 494, 517, 518, 521, 522, 523, 524, 525, 526, 528, 529, 531, 532, 533, 534, 537, 538, 539, 594, 604, 605, 608, 612, 613, 615, 628, 643, 647, 659, 660, 742, 751, 758, 760, 761, 770, 810, 822, 850, 859, 860, 863, 875], "later": [5, 11, 19, 32, 38, 43, 47, 68, 99, 107, 125, 133, 135, 139, 140, 141, 143, 148, 150, 161, 171, 174, 176, 179, 180, 188, 190, 197, 198, 199, 200, 203, 204, 205, 206, 210, 213, 214, 215, 216, 219, 232, 233, 239, 242, 257, 262, 263, 264, 265, 270, 272, 274, 276, 279, 358, 449, 475, 476, 555, 607, 609, 695, 697, 698, 699, 742, 805, 834, 839, 840, 851, 852, 857, 860, 875], "convert_forward_solut": [5, 22, 47, 48, 49, 54, 55, 67, 157, 177, 220, 518, 615, 822, 857, 865, 875], "force_fix": [5, 47, 48, 49, 54, 55, 67, 157, 220, 362, 533, 875], "plot_align": [5, 24, 52, 79, 107, 113, 116, 121, 122, 123, 134, 135, 155, 156, 157, 158, 169, 177, 181, 182, 183, 184, 262, 263, 264, 265, 307, 475, 476, 760, 798, 807, 812, 850, 854, 857, 865, 875], "surfac": [5, 11, 22, 24, 26, 27, 31, 34, 35, 36, 40, 42, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 58, 59, 60, 67, 70, 79, 88, 90, 92, 107, 113, 114, 116, 118, 122, 123, 132, 133, 134, 135, 149, 154, 155, 156, 158, 162, 163, 164, 165, 171, 174, 175, 176, 177, 178, 179, 182, 183, 184, 187, 189, 190, 194, 197, 206, 208, 215, 220, 221, 224, 232, 233, 234, 242, 260, 264, 265, 266, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 280, 282, 283, 295, 296, 302, 305, 306, 307, 333, 358, 362, 363, 383, 386, 406, 426, 441, 452, 457, 458, 463, 465, 466, 469, 470, 472, 473, 508, 510, 512, 513, 514, 518, 522, 523, 524, 525, 526, 529, 531, 532, 533, 538, 539, 541, 542, 564, 565, 580, 600, 603, 615, 618, 623, 624, 625, 626, 629, 632, 634, 643, 644, 658, 659, 660, 661, 664, 666, 667, 670, 672, 690, 691, 723, 726, 729, 742, 758, 760, 770, 777, 800, 801, 805, 815, 818, 822, 823, 828, 830, 832, 835, 838, 840, 841, 851, 854, 863, 865, 875], "pial": [5, 113, 122, 134, 135, 154, 180, 260, 275, 541, 618, 690, 742, 758, 770, 875], "set_3d_view": [5, 24, 52, 79, 107, 113, 116, 122, 123, 135, 155, 156, 157, 158, 159, 169, 177, 182, 865, 875], "azimuth": [5, 24, 79, 107, 113, 114, 116, 122, 123, 133, 134, 135, 155, 156, 157, 159, 169, 177, 180, 182, 189, 209, 221, 742, 810, 875], "elev": [5, 24, 79, 107, 113, 114, 116, 122, 123, 133, 134, 135, 155, 156, 157, 159, 169, 180, 182, 189, 197, 204, 209, 221, 742, 810, 875], "distanc": [5, 11, 22, 24, 28, 29, 31, 35, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 67, 78, 88, 90, 91, 92, 93, 102, 105, 106, 107, 108, 114, 122, 126, 129, 133, 134, 135, 142, 155, 156, 157, 158, 159, 160, 165, 169, 171, 175, 176, 177, 178, 180, 182, 189, 190, 194, 200, 207, 209, 220, 221, 232, 234, 254, 259, 262, 263, 264, 265, 267, 268, 271, 272, 273, 275, 280, 302, 342, 363, 407, 410, 411, 414, 417, 426, 428, 450, 459, 465, 466, 475, 476, 508, 518, 537, 554, 555, 559, 563, 566, 569, 574, 583, 588, 589, 635, 643, 644, 652, 655, 658, 660, 661, 663, 665, 666, 667, 669, 670, 682, 683, 685, 686, 690, 695, 697, 699, 742, 759, 762, 774, 781, 785, 794, 797, 802, 804, 810, 830, 857, 860, 875], "focalpoint": [5, 24, 52, 107, 114, 122, 133, 155, 156, 157, 158, 159, 177, 221, 742, 810, 875], "04": [5, 19, 20, 24, 25, 31, 35, 41, 42, 49, 50, 56, 69, 70, 72, 82, 83, 88, 91, 93, 98, 100, 101, 119, 121, 122, 125, 128, 136, 138, 140, 157, 161, 163, 176, 179, 182, 184, 198, 199, 207, 209, 224, 225, 226, 228, 229, 234, 241, 242, 385, 428, 514, 519, 555, 583, 652, 657, 837, 857], "load": [5, 7, 11, 13, 14, 24, 26, 28, 29, 30, 32, 33, 37, 38, 39, 41, 42, 43, 44, 45, 46, 49, 50, 67, 70, 74, 78, 79, 80, 90, 91, 92, 94, 95, 97, 98, 99, 101, 102, 105, 107, 108, 110, 111, 115, 117, 118, 119, 121, 123, 125, 126, 133, 134, 141, 142, 144, 149, 150, 151, 155, 157, 159, 160, 161, 164, 166, 167, 168, 169, 170, 171, 175, 176, 179, 180, 181, 182, 183, 187, 188, 190, 191, 194, 197, 198, 199, 201, 202, 203, 205, 206, 207, 208, 209, 214, 215, 216, 217, 224, 225, 226, 227, 228, 232, 233, 234, 237, 239, 254, 257, 258, 262, 263, 264, 265, 272, 311, 316, 320, 327, 357, 359, 372, 457, 458, 475, 476, 482, 494, 495, 502, 514, 517, 518, 533, 544, 555, 557, 567, 596, 606, 608, 612, 613, 615, 617, 623, 624, 626, 660, 693, 716, 717, 758, 772, 776, 780, 782, 789, 795, 822, 830, 851, 852, 860, 875], "three": [5, 31, 45, 92, 101, 107, 118, 141, 144, 150, 155, 157, 158, 160, 167, 177, 181, 187, 188, 197, 198, 203, 204, 205, 213, 215, 216, 219, 224, 237, 239, 254, 256, 259, 260, 262, 263, 264, 265, 270, 271, 276, 278, 295, 296, 305, 306, 307, 322, 407, 414, 465, 470, 475, 476, 512, 531, 532, 554, 555, 565, 569, 594, 626, 629, 644, 647, 676, 678, 695, 697, 699, 732, 742, 759, 770, 772, 774, 781, 783, 785, 793, 794, 795, 797, 802, 804, 823, 828, 834, 851, 854, 857, 860, 875], "layer": [5, 45, 107, 157, 158, 181, 182, 183, 184, 198, 242, 305, 383, 512, 519, 644, 652, 657, 758, 850, 857, 875], "model": [5, 7, 11, 12, 13, 18, 22, 26, 31, 32, 36, 41, 42, 50, 56, 72, 99, 103, 104, 107, 111, 114, 119, 134, 140, 150, 154, 155, 158, 159, 160, 161, 163, 169, 170, 171, 174, 175, 181, 182, 183, 184, 189, 190, 194, 202, 203, 221, 228, 242, 248, 259, 260, 262, 264, 265, 266, 267, 270, 272, 273, 275, 276, 277, 278, 295, 296, 300, 302, 305, 307, 339, 352, 358, 362, 369, 407, 411, 413, 414, 417, 419, 424, 425, 448, 450, 466, 470, 475, 480, 512, 513, 517, 518, 519, 521, 522, 523, 524, 533, 552, 554, 564, 580, 593, 602, 604, 605, 615, 621, 630, 636, 643, 644, 652, 657, 681, 708, 736, 742, 758, 760, 782, 797, 810, 817, 822, 830, 835, 838, 840, 841, 851, 854, 860, 865, 875], "colloc": [5, 26, 41, 45, 50, 107, 157, 158, 175, 181, 513, 875], "patch": [5, 11, 22, 28, 29, 31, 34, 35, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 67, 88, 90, 91, 92, 93, 102, 105, 106, 107, 108, 122, 125, 129, 155, 157, 159, 165, 171, 176, 177, 178, 180, 181, 190, 194, 220, 221, 232, 234, 254, 259, 262, 263, 264, 265, 270, 271, 275, 276, 278, 280, 282, 283, 362, 407, 414, 475, 476, 522, 523, 524, 525, 526, 529, 533, 538, 539, 554, 555, 569, 603, 625, 643, 659, 660, 695, 697, 699, 759, 774, 781, 785, 794, 797, 802, 804, 860, 875], "statist": [5, 10, 11, 22, 28, 29, 31, 35, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 67, 85, 86, 88, 90, 91, 92, 93, 94, 95, 99, 101, 102, 105, 106, 108, 111, 122, 129, 148, 150, 154, 155, 157, 159, 161, 165, 171, 176, 177, 178, 180, 181, 190, 194, 200, 203, 204, 220, 221, 231, 242, 254, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 282, 283, 295, 296, 316, 320, 322, 327, 351, 352, 358, 362, 448, 475, 476, 522, 523, 524, 525, 526, 529, 533, 538, 539, 552, 555, 603, 606, 610, 625, 630, 655, 659, 660, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 689, 695, 697, 698, 699, 725, 774, 778, 781, 802, 830, 841, 852, 854, 865, 875], "3523": [5, 22, 31, 32, 33, 34, 35, 40, 42, 43, 46, 47, 48, 49, 51, 54, 55, 58, 59, 67, 88, 90, 91, 92, 93, 129, 171, 176, 177, 178, 179, 190, 194, 220, 221], "8196": [5, 181, 190], "free": [5, 22, 26, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 67, 79, 88, 90, 91, 92, 93, 107, 129, 139, 150, 157, 158, 165, 171, 175, 176, 177, 179, 181, 190, 194, 206, 208, 220, 221, 225, 229, 242, 260, 262, 263, 266, 295, 296, 297, 371, 450, 451, 452, 470, 472, 473, 522, 523, 524, 525, 526, 529, 533, 537, 538, 539, 564, 615, 636, 640, 682, 683, 685, 686, 822, 834, 838, 840, 841, 850, 856, 857, 863, 875], "frame": [5, 11, 22, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 67, 78, 88, 90, 91, 92, 93, 102, 105, 106, 108, 110, 122, 129, 133, 134, 135, 139, 150, 158, 162, 163, 164, 165, 169, 171, 176, 177, 178, 179, 180, 181, 182, 183, 189, 190, 194, 208, 210, 220, 221, 232, 234, 254, 260, 262, 263, 264, 265, 266, 267, 275, 300, 301, 310, 314, 323, 328, 365, 386, 426, 466, 469, 475, 476, 479, 486, 505, 507, 514, 519, 566, 574, 583, 625, 626, 628, 642, 644, 718, 730, 737, 739, 742, 758, 770, 810, 830, 851, 856, 857, 860, 875], "normal": [5, 11, 15, 16, 18, 22, 24, 26, 28, 29, 30, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 54, 55, 58, 59, 60, 67, 69, 88, 90, 92, 102, 105, 106, 107, 108, 111, 112, 113, 114, 135, 136, 141, 142, 154, 155, 156, 157, 159, 160, 168, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 194, 204, 205, 208, 219, 220, 221, 232, 234, 238, 239, 242, 253, 255, 259, 260, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 275, 276, 277, 278, 282, 283, 295, 296, 311, 319, 356, 362, 407, 409, 412, 414, 441, 450, 470, 472, 473, 475, 476, 494, 522, 523, 524, 525, 526, 528, 529, 531, 532, 533, 538, 539, 554, 555, 565, 580, 608, 612, 644, 648, 659, 660, 677, 695, 697, 699, 707, 711, 713, 721, 743, 759, 774, 781, 785, 793, 794, 797, 802, 804, 830, 834, 840, 856, 860, 875], "emploi": [5, 11, 22, 26, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 54, 55, 58, 59, 67, 88, 90, 92, 107, 157, 158, 175, 176, 177, 178, 181, 187, 188, 190, 194, 221, 239, 554, 676, 850, 851, 856, 857, 860], "rotat": [5, 10, 15, 19, 22, 34, 35, 40, 41, 42, 44, 46, 47, 48, 49, 54, 55, 58, 59, 67, 78, 88, 90, 92, 107, 133, 155, 157, 171, 176, 177, 178, 179, 181, 190, 193, 194, 200, 202, 221, 254, 264, 265, 267, 295, 296, 348, 363, 366, 428, 466, 559, 565, 583, 732, 733, 735, 742, 758, 777, 832, 840, 857, 875], "convert": [5, 22, 27, 34, 35, 40, 41, 42, 46, 47, 48, 49, 54, 55, 58, 59, 67, 74, 88, 90, 92, 107, 110, 120, 128, 133, 135, 136, 139, 140, 141, 142, 143, 148, 149, 150, 155, 157, 159, 160, 168, 170, 176, 177, 178, 181, 187, 188, 189, 190, 194, 199, 200, 204, 213, 215, 220, 221, 225, 229, 232, 233, 234, 238, 256, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 273, 276, 277, 278, 281, 288, 301, 310, 311, 336, 348, 362, 364, 409, 413, 418, 419, 422, 436, 443, 445, 446, 463, 468, 469, 471, 475, 476, 486, 495, 499, 510, 517, 585, 586, 695, 697, 698, 699, 711, 721, 733, 735, 741, 743, 746, 758, 810, 812, 834, 835, 838, 841, 851, 857, 875], "helmet": [5, 7, 27, 45, 78, 79, 107, 114, 120, 121, 128, 136, 149, 155, 157, 169, 171, 182, 183, 184, 187, 264, 265, 267, 458, 514, 521, 536, 613, 742, 751, 758, 777, 810, 857, 875], "unknown": [5, 46, 70, 72, 75, 81, 88, 91, 107, 125, 140, 145, 150, 166, 167, 168, 180, 197, 198, 199, 201, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 219, 221, 267, 323, 328, 470, 475, 476, 483, 490, 505, 507, 730, 795, 816, 825, 857, 860, 875], "deriv": [5, 32, 33, 34, 46, 70, 107, 121, 124, 139, 143, 148, 155, 167, 198, 224, 225, 237, 242, 267, 363, 555, 590, 615, 822, 857, 860, 875], "subset": [5, 45, 110, 139, 141, 143, 145, 150, 157, 159, 171, 174, 205, 206, 210, 215, 224, 237, 257, 262, 263, 264, 265, 268, 272, 282, 283, 295, 296, 352, 356, 357, 366, 367, 368, 399, 407, 410, 414, 417, 431, 445, 450, 451, 464, 470, 472, 473, 475, 476, 533, 555, 668, 671, 695, 696, 697, 698, 699, 742, 772, 782, 795, 856, 857, 863, 875], "dip_opm": 5, "_": [5, 8, 9, 19, 37, 38, 45, 50, 60, 110, 133, 136, 145, 150, 159, 160, 171, 177, 179, 190, 193, 200, 203, 205, 210, 213, 220, 224, 225, 228, 229, 238, 239, 301, 555, 566, 598, 711, 721, 834, 857, 875], "fit_dipol": [5, 45, 82, 175, 180, 182, 183, 184, 260, 261, 298, 605, 857, 865, 875], "040": [5, 79, 94, 100, 111, 119, 139, 148, 161, 168, 207, 221, 242, 264, 265, 352, 854], "080": [5, 38, 79, 184, 207, 225], "idx": [5, 31, 35, 40, 47, 59, 63, 82, 112, 131, 149, 180, 190, 197, 201, 205, 220, 232, 256, 260, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 309, 474, 475, 476, 531, 532, 698, 770, 875], "argmax": [5, 35, 38, 40, 48, 50, 58, 59, 117, 175, 180, 193], "gof": [5, 40, 114, 168, 175, 177, 182, 183, 184, 260, 262, 263, 264, 265, 298, 309, 340, 342, 343, 344, 475, 476, 552, 695, 697, 698, 699, 770, 875], "1f": [5, 30, 40, 47, 75, 98, 107, 112, 155, 175, 182, 183, 190, 194, 200, 220, 224, 259, 262, 263, 264, 265, 271, 407, 414, 475, 476, 697, 699, 774, 781, 794], "1000": [5, 40, 48, 69, 79, 82, 94, 111, 112, 126, 133, 145, 155, 156, 158, 159, 175, 180, 181, 182, 183, 190, 200, 201, 205, 213, 219, 225, 229, 232, 233, 234, 436, 442, 444, 448, 475, 476, 555, 617, 682, 683, 685, 686, 711, 721, 742, 830, 875], "n20m": 5, "plot_loc": [5, 175, 180, 260, 875], "orthoview": [5, 35, 40, 59, 133, 159, 175, 260, 770, 875], "conductormodel": [5, 45, 107, 157, 182, 183, 184, 259, 262, 263, 264, 265, 271, 302, 310, 407, 414, 450, 475, 476, 512, 513, 519, 554, 555, 569, 602, 644, 695, 697, 699, 758, 759, 766, 774, 776, 778, 781, 782, 785, 792, 794, 796, 797, 798, 802, 804, 817, 830, 865], "solver": [5, 10, 11, 13, 15, 18, 27, 36, 40, 45, 46, 56, 59, 174, 194, 259, 260, 264, 266, 267, 273, 450, 451, 472, 513, 537, 604, 613, 615, 681, 801, 838, 843, 863, 875], "instanc": [5, 15, 26, 31, 43, 44, 45, 50, 73, 81, 86, 107, 112, 157, 158, 165, 168, 170, 171, 175, 177, 181, 182, 184, 187, 188, 190, 202, 203, 204, 206, 208, 213, 237, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 310, 311, 312, 314, 315, 317, 323, 326, 328, 329, 331, 332, 333, 334, 335, 336, 339, 341, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 366, 367, 368, 370, 374, 375, 376, 378, 379, 380, 382, 387, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 428, 429, 430, 431, 432, 436, 437, 438, 439, 440, 441, 442, 448, 450, 451, 452, 453, 454, 461, 464, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 510, 511, 513, 514, 515, 516, 517, 518, 519, 522, 523, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 542, 544, 547, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 595, 596, 597, 598, 600, 601, 602, 605, 606, 607, 608, 609, 612, 615, 617, 624, 627, 636, 637, 640, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 680, 681, 682, 683, 684, 685, 686, 687, 690, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 712, 715, 716, 731, 732, 734, 739, 742, 743, 744, 745, 751, 755, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 808, 812, 815, 817, 821, 825, 827, 834, 852, 875], "36": [5, 19, 21, 28, 34, 35, 41, 42, 45, 47, 79, 81, 101, 106, 110, 112, 143, 165, 168, 170, 173, 178, 180, 186, 193, 194, 205, 207, 224, 225, 226, 228, 229, 232, 233, 234, 239, 242, 262, 263, 264, 265, 399, 475, 476, 592, 694, 875], "rad": [5, 45, 175, 180, 182, 183, 184, 644, 830], "77": [5, 11, 19, 35, 79, 80, 106, 107, 110, 112, 136, 155, 156, 167, 168, 180, 190, 194, 205, 206, 207, 215, 224, 225, 228, 229, 232, 237, 333, 875], "guess": [5, 45, 121, 175, 180, 182, 183, 184, 203, 207, 254, 466, 486, 755, 875], "grid": [5, 24, 40, 41, 45, 50, 111, 113, 121, 125, 134, 154, 155, 157, 175, 177, 179, 180, 182, 183, 184, 193, 194, 206, 207, 210, 224, 226, 254, 272, 274, 275, 325, 472, 555, 580, 644, 696, 768, 785, 788, 850, 851, 857, 875], "n_sampl": [5, 45, 53, 64, 95, 136, 182, 183, 184, 194, 219, 224, 407, 408, 409, 410, 411, 412, 414, 415, 417, 418, 419, 420, 421, 422, 424, 449, 556, 581, 645, 674, 681, 684, 834], "10250": 5, "65975931e": 5, "41596252e": 5, "50067005e": 5, "18042429e": 5, "93613735e": 5, "88258373e": 5, "73325418e": 5, "23906800e": 5, "47917983e": 5, "14619592e": 5, "36697422e": 5, "53163548e": 5, "08794660e": 5, "00286749e": 5, "18143308e": 5, "22829671e": 5, "93976860e": 5, "28130683e": 5, "86574659e": 5, "28436459e": 5, "91104392e": 5, "54318851e": 5, "60478446e": 5, "18114621e": 5, "42024459e": 5, "20931076e": 5, "52605668e": 5, "29661483e": 5, "53868159e": 5, "40025250e": 5, "28102479e": 5, "49204692e": 5, "41942628e": 5, "29095862e": 5, "00102289e": 5, "19639173e": 5, "09222979e": 5, "25564394e": 5, "49616938e": 5, "35015052e": 5, "94284541e": 5, "29140004e": 5, "85113742e": 5, "46141046e": 5, "97190359e": 5, "ra": [5, 24, 26, 41, 43, 45, 50, 107, 133, 134, 155, 157, 158, 160, 175, 179, 180, 182, 183, 184, 206, 260, 269, 270, 273, 275, 276, 277, 278, 310, 323, 363, 441, 469, 507, 615, 730, 734, 742, 815, 822, 830, 851, 857, 875], "000000": [5, 24, 26, 41, 45, 50, 107, 142, 143, 155, 157, 158, 175, 179, 180, 181, 182, 183, 184, 206, 227, 229, 233, 234, 239], "999800": [5, 107], "015800": [5, 107], "009200": [5, 107], "018100": [5, 107], "930500": [5, 107], "365900": [5, 107], "002800": [5, 107], "366000": [5, 107], "930600": [5, 107], "40": [5, 9, 10, 12, 13, 19, 21, 28, 33, 35, 40, 45, 46, 47, 58, 59, 67, 72, 74, 78, 79, 82, 88, 98, 101, 102, 106, 107, 112, 119, 122, 133, 135, 136, 139, 140, 143, 144, 147, 150, 154, 155, 157, 159, 165, 168, 170, 180, 182, 183, 190, 193, 194, 199, 200, 202, 203, 207, 208, 209, 213, 224, 225, 226, 228, 229, 232, 233, 234, 238, 242, 262, 263, 272, 428, 442, 475, 476, 484, 555, 567, 574, 575, 578, 647, 746, 772, 790, 795, 809, 851, 857, 875], "105": [5, 24, 26, 31, 35, 41, 45, 50, 56, 92, 107, 112, 136, 141, 155, 157, 168, 175, 180, 182, 183, 184, 204, 206, 224, 228, 229, 860], "decompos": [5, 8, 45, 175, 180, 182, 183, 184, 203, 407, 411, 414, 555, 556, 725, 857, 875], "eigenvalu": [5, 21, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 88, 91, 92, 102, 105, 106, 107, 108, 119, 151, 161, 165, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 220, 221, 232, 234, 259, 407, 707, 857, 860], "without": [5, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 69, 74, 88, 91, 92, 102, 105, 107, 111, 118, 119, 125, 133, 143, 148, 149, 150, 151, 158, 160, 161, 164, 169, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 198, 199, 200, 202, 203, 204, 205, 206, 208, 215, 220, 221, 224, 239, 254, 257, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 289, 290, 293, 295, 296, 323, 324, 352, 356, 357, 366, 367, 368, 369, 407, 414, 437, 438, 439, 440, 448, 450, 451, 470, 472, 473, 475, 476, 483, 490, 494, 495, 515, 524, 526, 529, 533, 548, 574, 590, 606, 608, 612, 613, 630, 689, 696, 732, 742, 782, 800, 805, 812, 832, 834, 838, 842, 850, 852, 854, 856, 857, 875], "whiten": [5, 7, 14, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 54, 55, 57, 58, 59, 60, 88, 91, 92, 102, 103, 104, 105, 106, 107, 108, 111, 120, 128, 148, 152, 153, 161, 164, 165, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 203, 220, 221, 232, 234, 242, 254, 259, 262, 263, 264, 265, 267, 272, 295, 296, 352, 356, 357, 366, 367, 368, 407, 414, 448, 450, 451, 470, 472, 473, 475, 476, 530, 533, 552, 555, 556, 581, 610, 621, 708, 772, 776, 780, 782, 795, 799, 830, 854, 875], "omit": [5, 12, 21, 24, 26, 28, 29, 30, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 54, 55, 57, 58, 59, 60, 77, 79, 85, 88, 91, 92, 102, 105, 106, 107, 108, 117, 119, 122, 149, 151, 155, 157, 161, 165, 167, 168, 170, 171, 175, 176, 177, 178, 180, 181, 182, 183, 184, 190, 194, 198, 206, 208, 220, 221, 232, 234, 256, 262, 263, 264, 265, 272, 413, 475, 476, 510, 555, 575, 576, 584, 601, 613, 652, 657, 699, 732, 758, 760, 776, 781, 787, 796, 834, 860, 875], "inner": [5, 26, 31, 41, 43, 45, 50, 107, 127, 154, 157, 159, 160, 175, 180, 181, 190, 242, 254, 262, 263, 266, 302, 305, 450, 466, 518, 583, 644, 660, 742, 830, 835, 838, 841, 850, 851, 854, 857, 860, 875], "skull": [5, 26, 41, 43, 45, 50, 107, 111, 133, 154, 155, 157, 159, 160, 169, 175, 180, 181, 190, 242, 254, 266, 275, 302, 305, 450, 518, 519, 580, 644, 652, 657, 660, 742, 758, 830, 835, 838, 841, 850, 851, 854, 857, 860, 875], "cm": [5, 9, 15, 24, 41, 45, 50, 88, 114, 121, 135, 141, 144, 155, 157, 165, 169, 175, 180, 182, 183, 184, 188, 199, 205, 206, 207, 208, 209, 226, 238, 254, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 333, 335, 337, 475, 476, 483, 511, 574, 773, 776, 778, 803, 830, 875], "35": [5, 11, 12, 13, 19, 21, 28, 34, 35, 45, 47, 54, 56, 79, 101, 106, 107, 110, 112, 135, 142, 144, 145, 148, 157, 159, 168, 170, 183, 184, 193, 194, 204, 205, 207, 209, 212, 224, 225, 226, 228, 229, 232, 233, 234, 238, 242, 254, 472, 522, 567, 568, 575, 578, 746, 857], "insid": [5, 16, 24, 26, 41, 45, 50, 107, 139, 148, 155, 157, 158, 160, 175, 180, 181, 182, 183, 184, 201, 206, 208, 213, 228, 234, 268, 272, 273, 276, 277, 278, 290, 336, 390, 431, 459, 466, 475, 476, 504, 526, 742, 795, 815, 834, 850, 854, 857, 875], "sphere": [5, 24, 26, 35, 41, 43, 45, 48, 50, 59, 70, 82, 91, 92, 107, 118, 121, 123, 134, 155, 157, 158, 159, 175, 177, 180, 181, 182, 183, 184, 188, 198, 206, 207, 208, 242, 254, 259, 260, 262, 263, 264, 265, 268, 271, 273, 295, 296, 300, 303, 304, 310, 358, 406, 407, 414, 450, 475, 476, 487, 514, 517, 518, 519, 554, 555, 564, 569, 644, 658, 661, 695, 697, 699, 742, 758, 759, 766, 770, 774, 776, 778, 781, 782, 785, 792, 794, 796, 797, 798, 801, 802, 804, 812, 830, 875], "102": [5, 11, 13, 14, 15, 16, 18, 22, 26, 28, 29, 30, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 64, 67, 68, 70, 71, 72, 75, 77, 78, 81, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 118, 119, 121, 122, 125, 127, 129, 130, 131, 136, 139, 140, 141, 145, 148, 149, 150, 151, 155, 156, 157, 159, 161, 165, 166, 167, 168, 169, 171, 175, 176, 177, 178, 179, 180, 181, 182, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 213, 214, 215, 216, 220, 221, 224, 226, 227, 228, 229, 232, 234, 254, 860], "extent": [5, 13, 16, 24, 41, 45, 47, 50, 55, 69, 88, 93, 105, 139, 155, 157, 175, 180, 182, 183, 184, 194, 205, 206, 226, 227, 228, 229, 232, 233, 234, 242, 262, 263, 430, 465, 508, 537, 655, 685, 686, 856, 857, 875], "73": [5, 15, 19, 21, 33, 34, 35, 40, 45, 50, 78, 79, 82, 83, 94, 105, 106, 110, 112, 119, 126, 144, 148, 168, 175, 181, 193, 194, 207, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 242, 262, 263, 264, 265, 475, 476, 697, 699, 714], "y": [5, 9, 10, 11, 12, 13, 16, 18, 19, 24, 41, 45, 47, 50, 69, 70, 78, 80, 88, 110, 112, 113, 118, 135, 144, 150, 155, 157, 159, 160, 169, 171, 174, 175, 179, 180, 182, 183, 184, 193, 194, 197, 200, 201, 204, 206, 213, 214, 215, 216, 224, 234, 239, 256, 259, 260, 262, 263, 264, 265, 267, 270, 271, 276, 278, 286, 300, 303, 304, 310, 311, 333, 342, 343, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 426, 447, 475, 476, 487, 521, 522, 554, 555, 556, 564, 569, 615, 648, 681, 695, 697, 699, 730, 732, 733, 735, 742, 743, 746, 759, 766, 770, 773, 774, 775, 776, 778, 780, 781, 782, 783, 784, 785, 790, 792, 794, 796, 797, 798, 802, 803, 804, 810, 822, 830, 832, 857, 875], "42": [5, 8, 9, 11, 13, 14, 15, 16, 18, 19, 28, 29, 35, 42, 45, 47, 49, 67, 68, 70, 71, 72, 75, 78, 79, 81, 86, 88, 89, 90, 91, 93, 94, 95, 97, 98, 101, 102, 105, 106, 107, 108, 109, 112, 115, 116, 119, 121, 125, 130, 131, 136, 138, 140, 145, 147, 150, 151, 155, 161, 163, 165, 166, 167, 168, 171, 174, 175, 176, 179, 180, 181, 183, 193, 194, 197, 200, 201, 202, 203, 204, 205, 206, 207, 213, 216, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 242, 267, 522, 537, 655], "108": [5, 16, 35, 79, 80, 111, 112, 119, 133, 161, 168, 190, 218, 224, 229, 242, 264, 265, 352, 782, 854], "80": [5, 9, 13, 16, 19, 30, 31, 33, 35, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 69, 77, 78, 79, 84, 85, 88, 92, 106, 110, 112, 113, 114, 116, 117, 118, 123, 125, 136, 148, 150, 155, 157, 167, 168, 170, 171, 175, 177, 178, 180, 182, 183, 184, 190, 194, 205, 207, 208, 209, 224, 225, 226, 228, 229, 233, 234, 242, 406, 555, 647, 783, 790, 840, 875], "1080": [5, 10, 193, 242, 413], "543": [5, 40, 229, 239, 241], "after": [5, 8, 11, 16, 22, 24, 26, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 61, 67, 79, 86, 88, 90, 92, 99, 101, 107, 125, 129, 133, 135, 136, 139, 140, 141, 143, 144, 145, 148, 149, 150, 154, 155, 157, 160, 165, 166, 167, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 190, 194, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 215, 220, 221, 224, 226, 227, 232, 237, 239, 254, 255, 256, 262, 263, 264, 265, 267, 269, 270, 272, 273, 275, 276, 277, 278, 285, 295, 296, 339, 352, 356, 357, 359, 361, 366, 367, 368, 382, 407, 409, 413, 414, 418, 420, 421, 425, 431, 448, 449, 450, 451, 470, 472, 473, 475, 476, 533, 554, 555, 558, 566, 567, 568, 571, 572, 574, 575, 576, 578, 581, 584, 613, 615, 637, 656, 695, 720, 722, 723, 725, 726, 731, 742, 758, 766, 772, 776, 778, 780, 781, 782, 785, 786, 789, 793, 795, 806, 822, 830, 834, 842, 850, 851, 854, 856, 857, 860, 863, 875], "infeas": [5, 24, 41, 45, 50, 155, 157, 175, 180, 182, 183, 184, 206], "least": [5, 41, 45, 69, 82, 112, 140, 157, 158, 175, 180, 199, 200, 201, 203, 204, 208, 224, 229, 242, 262, 263, 264, 265, 272, 409, 418, 422, 424, 443, 445, 446, 464, 475, 476, 555, 557, 558, 573, 574, 583, 680, 742, 772, 795, 840, 850, 854, 856, 857, 875], "awai": [5, 41, 45, 133, 140, 143, 157, 158, 175, 180, 182, 187, 199, 204, 206, 210, 363, 487, 555, 580, 648, 690, 723, 726, 742, 815, 837, 857, 860, 875], "few": [5, 21, 26, 41, 44, 45, 50, 69, 92, 99, 107, 134, 143, 144, 148, 154, 155, 156, 157, 158, 160, 161, 166, 170, 171, 175, 180, 181, 197, 198, 199, 200, 202, 203, 205, 206, 207, 213, 216, 225, 229, 234, 237, 239, 267, 428, 565, 566, 574, 583, 830, 834, 842, 852, 854, 857, 859, 875], "interior": [5, 26, 41, 45, 50, 107, 157, 158, 175, 180, 181, 208], "statu": [5, 26, 41, 45, 50, 107, 157, 158, 175, 180, 181, 187, 262, 263, 264, 265, 267, 339, 361, 363, 475, 476, 483, 490, 497, 552, 695, 697, 698, 699, 742, 830, 834, 857, 860, 875], "70": [5, 9, 12, 13, 15, 19, 21, 34, 41, 45, 46, 47, 58, 59, 79, 86, 88, 101, 102, 106, 107, 110, 112, 114, 133, 135, 136, 139, 142, 143, 155, 157, 158, 165, 168, 169, 182, 183, 194, 200, 203, 207, 209, 224, 225, 228, 229, 232, 237, 239, 242, 262, 263, 264, 265, 333, 473, 475, 476, 555, 697, 699, 711, 714, 721, 722, 725, 875], "outsid": [5, 16, 24, 26, 41, 45, 50, 107, 133, 134, 139, 143, 155, 157, 158, 160, 175, 180, 181, 182, 183, 184, 198, 200, 205, 206, 208, 213, 215, 256, 259, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 276, 277, 278, 290, 386, 407, 414, 449, 475, 476, 508, 526, 554, 555, 569, 571, 695, 697, 699, 731, 739, 742, 759, 760, 774, 781, 785, 794, 797, 800, 802, 804, 805, 856, 857, 858, 860, 875], "exterior": [5, 26, 41, 45, 50, 107, 157, 158, 175, 180, 181, 208], "284": [5, 168, 224, 229, 242, 407, 875], "473": [5, 112, 194, 224, 229, 275], "qhull": [5, 26, 41, 45, 50, 107, 157, 158, 175, 180, 181, 875], "189": [5, 32, 33, 34, 46, 97, 111, 168, 194, 224, 228, 229, 238, 242, 857], "solid": [5, 26, 41, 45, 50, 107, 149, 157, 158, 160, 175, 180, 181, 205, 766, 793, 857], "angl": [5, 26, 41, 45, 50, 107, 116, 129, 157, 158, 160, 168, 169, 171, 175, 180, 181, 182, 254, 267, 301, 305, 581, 636, 742, 747, 810, 857, 875], "244": [5, 56, 58, 98, 168, 229, 233], "complet": [5, 7, 9, 26, 32, 33, 34, 41, 45, 50, 107, 133, 143, 149, 154, 157, 158, 160, 168, 175, 179, 180, 181, 198, 200, 203, 206, 221, 224, 242, 254, 262, 263, 275, 301, 506, 555, 582, 596, 692, 738, 742, 750, 757, 834, 841, 850, 851, 852, 854, 857, 859, 860, 875], "134": [5, 69, 168, 170, 228, 229, 242, 275, 520, 563], "limit": [5, 31, 34, 40, 41, 42, 45, 50, 58, 59, 88, 92, 107, 111, 112, 125, 134, 136, 140, 141, 157, 164, 165, 167, 175, 176, 178, 180, 181, 188, 190, 194, 198, 200, 203, 208, 213, 221, 229, 239, 242, 256, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 273, 276, 277, 278, 280, 407, 414, 433, 440, 451, 472, 475, 476, 494, 554, 555, 559, 574, 583, 608, 612, 617, 623, 673, 679, 681, 695, 697, 698, 699, 757, 759, 761, 766, 773, 774, 776, 778, 780, 781, 783, 785, 790, 794, 797, 800, 802, 804, 805, 806, 824, 832, 834, 856, 857, 858, 860, 863, 875], "214": [5, 12, 20, 168, 224, 228, 229], "through": [5, 9, 19, 27, 37, 45, 76, 83, 111, 133, 139, 140, 141, 143, 144, 148, 154, 155, 159, 164, 165, 167, 171, 175, 179, 180, 182, 183, 184, 193, 198, 200, 203, 204, 205, 208, 210, 213, 215, 216, 221, 232, 239, 242, 255, 260, 262, 263, 264, 265, 295, 322, 370, 448, 457, 466, 475, 507, 554, 555, 645, 707, 742, 764, 766, 770, 773, 775, 779, 787, 830, 832, 834, 841, 852, 856, 857, 863, 875], "0642": [5, 168], "3779": [5, 19], "18": [5, 9, 11, 13, 19, 20, 28, 31, 34, 35, 40, 45, 47, 50, 59, 64, 70, 79, 80, 81, 83, 88, 91, 93, 101, 106, 107, 108, 112, 121, 125, 128, 136, 139, 144, 159, 166, 167, 168, 170, 175, 176, 178, 179, 180, 182, 183, 190, 194, 197, 198, 201, 204, 205, 206, 207, 208, 212, 213, 214, 215, 216, 221, 224, 225, 226, 228, 229, 232, 234, 242, 262, 263, 264, 265, 275, 277, 278, 282, 283, 291, 296, 305, 307, 352, 353, 354, 355, 356, 357, 366, 367, 368, 383, 391, 399, 413, 419, 436, 451, 454, 455, 466, 470, 472, 473, 475, 476, 495, 508, 510, 516, 541, 546, 548, 555, 567, 568, 575, 643, 646, 647, 649, 660, 662, 694, 695, 698, 759, 772, 781, 783, 795, 801, 804, 806, 832, 837, 857], "7678": 5, "6600": 5, "0647": 5, "99": [5, 13, 15, 19, 26, 35, 47, 49, 68, 69, 79, 80, 88, 91, 101, 102, 106, 107, 110, 112, 118, 119, 136, 150, 151, 156, 159, 161, 168, 171, 176, 178, 179, 180, 183, 190, 194, 205, 207, 215, 220, 221, 224, 225, 227, 228, 229, 242, 262, 263, 272, 475, 476, 772, 795, 857, 875], "leakag": [5, 27, 36, 45, 56, 273, 275, 362, 532, 534, 536, 615, 618, 723, 726, 742, 747], "constrain": [5, 107, 165, 174, 177, 178, 179, 204, 242, 257, 262, 263, 291, 292, 293, 294, 295, 296, 358, 571, 830, 835, 841, 854, 857, 860, 875], "idea": [5, 7, 21, 27, 111, 154, 170, 174, 176, 200, 202, 203, 204, 205, 232, 234, 239, 242, 262, 263, 306, 430, 853, 854, 857, 858, 863], "inverse_oper": [5, 7, 11, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 47, 48, 54, 59, 88, 102, 105, 106, 107, 108, 171, 176, 232, 234, 272, 522, 523, 524, 525, 526, 528, 529, 534, 538, 539], "minimum_norm": [5, 7, 11, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 58, 59, 60, 88, 92, 102, 105, 106, 107, 108, 122, 165, 176, 177, 178, 180, 181, 190, 194, 204, 220, 221, 232, 234, 830, 843, 850, 857, 865, 875], "make_inverse_oper": [5, 7, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 88, 92, 107, 176, 177, 178, 181, 190, 194, 221, 536, 850, 857, 865, 875], "loos": [5, 7, 31, 34, 35, 40, 41, 42, 46, 48, 54, 55, 59, 60, 88, 92, 107, 143, 176, 178, 181, 190, 194, 221, 451, 452, 470, 472, 473, 522, 523, 524, 525, 526, 528, 529, 533, 537, 538, 539, 850, 857, 860, 875], "depth": [5, 7, 11, 22, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 52, 54, 55, 57, 58, 59, 60, 88, 92, 102, 105, 106, 107, 108, 122, 165, 171, 176, 177, 178, 180, 181, 190, 194, 216, 220, 221, 232, 234, 242, 260, 295, 296, 451, 470, 472, 473, 533, 652, 657, 663, 860, 863, 875], "snr": [5, 7, 10, 11, 19, 21, 27, 28, 29, 30, 36, 38, 39, 41, 48, 54, 55, 56, 60, 86, 88, 102, 107, 165, 176, 178, 180, 183, 190, 200, 220, 221, 232, 234, 259, 264, 266, 267, 273, 341, 451, 521, 522, 530, 533, 535, 536, 604, 613, 615, 659, 742, 765, 799, 850, 857, 863, 875], "lambda2": [5, 7, 11, 28, 29, 30, 38, 39, 40, 41, 45, 47, 48, 50, 54, 55, 58, 59, 60, 70, 88, 92, 102, 106, 107, 155, 165, 176, 178, 180, 182, 183, 184, 190, 206, 220, 232, 234, 522, 523, 524, 525, 526, 528, 529, 534, 535, 538, 539, 564, 850], "stc": [5, 7, 11, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 56, 58, 59, 60, 67, 90, 91, 92, 93, 102, 106, 107, 108, 114, 125, 132, 134, 135, 157, 164, 165, 171, 175, 176, 177, 178, 179, 181, 185, 186, 194, 221, 233, 260, 264, 269, 270, 272, 273, 274, 275, 276, 277, 278, 282, 283, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 358, 441, 450, 454, 460, 470, 471, 472, 473, 510, 517, 521, 522, 523, 524, 525, 526, 529, 531, 532, 536, 538, 613, 623, 636, 645, 659, 660, 661, 662, 687, 690, 691, 742, 800, 801, 805, 806, 830, 850, 870, 875], "apply_invers": [5, 7, 28, 30, 38, 39, 40, 41, 44, 45, 58, 59, 60, 88, 92, 165, 176, 177, 178, 180, 181, 190, 194, 204, 220, 221, 232, 234, 523, 524, 525, 526, 528, 529, 535, 538, 539, 830, 850, 857, 865, 875], "pick_ori": [5, 7, 11, 28, 29, 32, 33, 34, 38, 39, 41, 49, 60, 88, 106, 176, 177, 179, 180, 221, 295, 296, 470, 472, 473, 522, 523, 524, 525, 526, 528, 529, 538, 539, 875], "hemi": [5, 7, 11, 26, 32, 33, 34, 38, 41, 43, 47, 48, 49, 50, 58, 60, 92, 102, 107, 114, 125, 129, 132, 135, 154, 159, 165, 174, 176, 177, 178, 179, 180, 190, 194, 220, 221, 232, 233, 234, 268, 269, 270, 273, 276, 277, 278, 280, 465, 600, 618, 741, 742, 800, 805, 825, 875], "rh": [5, 24, 26, 34, 37, 38, 41, 43, 47, 59, 67, 88, 90, 92, 93, 105, 107, 114, 129, 135, 154, 157, 158, 159, 174, 176, 220, 221, 258, 268, 269, 270, 273, 276, 277, 278, 463, 508, 600, 618, 623, 742, 800, 805, 825, 857], "view": [5, 7, 11, 26, 28, 29, 31, 32, 33, 35, 40, 43, 47, 50, 53, 58, 59, 68, 92, 93, 98, 102, 105, 106, 107, 111, 113, 116, 125, 134, 135, 139, 141, 149, 150, 151, 157, 158, 159, 165, 168, 169, 171, 174, 176, 179, 180, 188, 189, 190, 194, 203, 205, 215, 216, 220, 221, 229, 232, 233, 234, 242, 259, 260, 262, 263, 264, 265, 267, 269, 270, 271, 273, 276, 277, 278, 286, 300, 307, 475, 476, 521, 630, 730, 742, 770, 772, 795, 800, 803, 805, 810, 812, 830, 850, 854, 856, 857, 863, 875], "lat": [5, 11, 26, 58, 92, 102, 125, 135, 150, 159, 165, 194, 220, 234, 742], "initial_tim": [5, 7, 11, 32, 41, 43, 58, 59, 60, 92, 102, 125, 132, 165, 174, 176, 177, 178, 179, 180, 181, 190, 194, 220, 269, 270, 273, 276, 277, 278, 742, 800, 805, 806], "clim": [5, 7, 10, 22, 26, 42, 43, 47, 49, 54, 55, 58, 59, 102, 107, 125, 129, 134, 135, 145, 174, 176, 178, 179, 180, 209, 220, 232, 233, 234, 264, 265, 269, 270, 273, 276, 277, 278, 742, 761, 778, 800, 805, 806, 875], "percent": [5, 26, 42, 105, 107, 110, 178, 226, 229, 269, 270, 273, 276, 277, 278, 285, 538, 539, 555, 651, 652, 653, 654, 655, 657, 695, 698, 761, 787, 800, 802, 805, 806, 875], "lim": [5, 7, 22, 26, 42, 43, 49, 54, 55, 58, 59, 102, 107, 125, 129, 134, 135, 174, 176, 178, 179, 180, 233, 234, 269, 270, 273, 276, 277, 278, 761, 800, 805, 806], "400": [5, 7, 13, 40, 44, 74, 79, 90, 109, 125, 129, 140, 141, 143, 145, 150, 155, 159, 170, 171, 175, 177, 180, 204, 205, 207, 209, 224, 226, 229, 466], "background": [5, 21, 43, 114, 124, 125, 133, 141, 150, 159, 164, 165, 171, 203, 205, 209, 211, 212, 213, 215, 216, 242, 260, 262, 263, 264, 265, 267, 269, 270, 271, 273, 276, 277, 278, 353, 354, 355, 407, 442, 443, 445, 475, 476, 495, 522, 560, 567, 568, 621, 640, 695, 697, 699, 711, 742, 745, 751, 758, 770, 776, 780, 783, 790, 795, 800, 801, 803, 805, 806, 814, 815, 826, 850, 856, 875], "w": [5, 21, 32, 33, 39, 45, 60, 61, 72, 81, 101, 125, 130, 136, 141, 151, 155, 159, 160, 177, 181, 193, 194, 200, 209, 221, 224, 237, 242, 259, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 295, 296, 307, 319, 366, 407, 414, 475, 476, 522, 530, 533, 554, 555, 581, 623, 652, 657, 677, 695, 697, 698, 699, 711, 720, 721, 724, 727, 759, 774, 780, 781, 795, 797, 802, 803, 804, 857, 875], "invers": [5, 7, 11, 19, 21, 32, 33, 34, 38, 43, 44, 45, 46, 48, 50, 51, 54, 55, 56, 58, 59, 60, 86, 88, 103, 104, 105, 106, 107, 108, 122, 148, 154, 155, 158, 159, 161, 169, 171, 174, 175, 177, 178, 179, 180, 181, 187, 190, 194, 198, 204, 206, 220, 221, 232, 234, 242, 254, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 295, 296, 351, 358, 364, 365, 368, 413, 421, 425, 441, 470, 471, 472, 475, 476, 509, 518, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 533, 534, 535, 536, 537, 538, 539, 540, 552, 555, 556, 604, 610, 613, 615, 617, 618, 625, 643, 644, 710, 742, 758, 769, 770, 799, 801, 810, 830, 835, 841, 860, 863, 865, 875], "adjust": [5, 24, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 50, 51, 54, 55, 58, 59, 88, 92, 107, 114, 118, 125, 148, 155, 157, 160, 169, 171, 176, 177, 178, 179, 181, 187, 190, 194, 206, 208, 215, 216, 221, 226, 254, 259, 262, 263, 264, 265, 271, 284, 340, 342, 407, 414, 467, 475, 476, 477, 486, 554, 555, 565, 576, 584, 673, 679, 684, 688, 689, 695, 697, 699, 714, 755, 765, 772, 773, 774, 778, 780, 781, 785, 794, 795, 797, 802, 803, 832, 838, 850, 854, 857, 863, 875], "svd": [5, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 88, 92, 107, 176, 177, 178, 181, 190, 194, 204, 221, 259, 270, 276, 278, 339, 530, 531, 532, 767, 850, 857, 875], "lead": [5, 22, 26, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 68, 69, 86, 88, 92, 107, 143, 150, 161, 166, 176, 177, 178, 181, 190, 193, 194, 198, 200, 208, 210, 221, 256, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 352, 441, 470, 472, 473, 475, 476, 522, 523, 524, 525, 526, 584, 615, 640, 682, 683, 685, 686, 695, 830, 832, 852, 857, 875], "largest": [5, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 88, 92, 107, 134, 150, 176, 177, 178, 181, 187, 190, 194, 221, 224, 407, 451, 499, 531, 532, 555], "38802": 5, "factor": [5, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 45, 48, 50, 54, 55, 58, 59, 60, 88, 92, 102, 105, 106, 107, 108, 134, 156, 176, 177, 178, 180, 181, 190, 194, 200, 201, 208, 210, 220, 221, 226, 227, 228, 232, 234, 238, 254, 257, 260, 261, 262, 263, 264, 265, 267, 269, 270, 272, 273, 276, 277, 278, 297, 352, 356, 363, 368, 415, 416, 419, 420, 428, 447, 475, 476, 485, 525, 535, 538, 539, 565, 566, 571, 572, 574, 581, 583, 585, 632, 634, 635, 647, 648, 676, 678, 695, 698, 701, 704, 707, 720, 722, 723, 724, 725, 726, 727, 732, 742, 755, 772, 780, 793, 795, 801, 803, 805, 830, 857, 860, 875], "trace": [5, 31, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 73, 78, 88, 91, 92, 107, 143, 148, 150, 165, 171, 176, 177, 178, 181, 190, 194, 198, 205, 207, 208, 213, 216, 221, 254, 260, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 407, 475, 476, 555, 739, 742, 769, 772, 776, 784, 786, 793, 795, 800, 805, 857, 875], "35945e": 5, "nchan": [5, 34, 40, 41, 42, 45, 48, 50, 52, 54, 55, 57, 58, 59, 88, 92, 107, 165, 166, 168, 176, 177, 178, 181, 190, 194, 213, 219, 221, 266, 267, 860, 875], "nzero": [5, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 88, 92, 107, 176, 177, 178, 181, 190, 194, 221], "invert": [5, 21, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 54, 55, 57, 58, 59, 60, 88, 92, 102, 105, 106, 107, 108, 134, 155, 157, 160, 165, 176, 177, 178, 179, 180, 181, 190, 194, 200, 220, 221, 232, 234, 239, 281, 291, 294, 413, 416, 421, 470, 472, 473, 681, 718, 851, 860], "vector": [5, 15, 18, 19, 27, 34, 36, 41, 56, 107, 109, 129, 161, 174, 176, 177, 187, 193, 202, 203, 204, 205, 207, 208, 221, 242, 254, 257, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 276, 277, 278, 288, 295, 296, 339, 341, 345, 353, 354, 355, 358, 408, 411, 413, 418, 423, 425, 441, 445, 446, 447, 470, 472, 473, 475, 476, 509, 515, 521, 522, 524, 525, 526, 531, 532, 536, 554, 555, 566, 567, 568, 570, 574, 580, 583, 592, 598, 606, 613, 621, 623, 630, 636, 695, 696, 697, 698, 699, 742, 774, 776, 778, 780, 781, 784, 793, 796, 800, 803, 805, 806, 826, 830, 854, 857, 860, 865, 875], "eigenlead": [5, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 54, 55, 58, 59, 60, 88, 92, 102, 105, 106, 107, 108, 165, 176, 177, 178, 180, 181, 190, 194, 220, 221, 232, 234, 857], "residu": [5, 28, 30, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 54, 55, 58, 59, 60, 69, 74, 88, 92, 165, 176, 177, 178, 180, 181, 182, 183, 190, 194, 203, 207, 220, 221, 232, 234, 298, 450, 470, 472, 473, 522, 765, 875], "explain": [5, 18, 28, 30, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 51, 54, 55, 58, 59, 60, 88, 92, 136, 158, 159, 165, 176, 177, 178, 180, 181, 182, 190, 194, 203, 220, 221, 232, 234, 271, 298, 407, 414, 470, 472, 473, 531, 532, 555, 786, 834, 838, 857, 875], "97": [5, 11, 15, 19, 34, 41, 44, 47, 70, 79, 81, 101, 106, 107, 110, 112, 115, 133, 136, 155, 159, 165, 168, 190, 193, 194, 203, 206, 207, 208, 224, 225, 228, 229, 232, 242, 428, 519, 564, 566, 583, 676, 850, 857, 875], "varianc": [5, 8, 14, 16, 28, 30, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 51, 54, 55, 58, 59, 60, 69, 88, 92, 112, 165, 176, 177, 178, 179, 180, 181, 182, 190, 194, 198, 203, 210, 220, 221, 232, 234, 242, 271, 273, 291, 292, 293, 294, 295, 296, 416, 452, 470, 472, 473, 531, 532, 533, 555, 563, 677, 688, 689, 723, 726, 765, 786, 787, 830, 857, 875], "control": [5, 11, 19, 22, 26, 32, 33, 34, 38, 41, 42, 47, 48, 50, 60, 92, 107, 112, 118, 125, 132, 139, 148, 149, 155, 165, 167, 170, 171, 177, 178, 180, 181, 187, 190, 194, 199, 200, 201, 203, 204, 205, 208, 209, 215, 220, 221, 224, 232, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 301, 302, 303, 304, 305, 306, 307, 310, 312, 314, 315, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 379, 380, 381, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 412, 413, 414, 415, 417, 418, 420, 423, 424, 426, 428, 432, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 450, 451, 452, 457, 458, 462, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 510, 511, 512, 513, 514, 515, 517, 518, 519, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 548, 551, 555, 557, 558, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 578, 579, 580, 581, 583, 584, 586, 587, 590, 591, 592, 595, 596, 597, 598, 602, 603, 604, 605, 606, 607, 609, 610, 611, 613, 614, 615, 617, 618, 619, 620, 621, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 640, 643, 644, 646, 647, 648, 649, 659, 660, 663, 665, 666, 667, 668, 669, 670, 671, 682, 683, 684, 685, 686, 690, 691, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 711, 713, 714, 717, 718, 721, 722, 723, 725, 726, 727, 728, 731, 732, 737, 741, 742, 750, 756, 758, 761, 767, 768, 770, 773, 774, 775, 776, 777, 782, 785, 786, 787, 788, 792, 793, 795, 796, 798, 799, 800, 801, 805, 806, 807, 808, 811, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 840, 851, 854, 856, 857, 875], "24807258e": 5, "11": [5, 9, 10, 11, 13, 16, 18, 19, 20, 28, 33, 34, 35, 45, 47, 49, 64, 69, 72, 73, 78, 79, 81, 94, 98, 99, 101, 106, 107, 108, 110, 112, 114, 118, 119, 121, 125, 128, 136, 144, 156, 160, 161, 163, 165, 167, 168, 169, 170, 173, 174, 175, 178, 179, 180, 181, 182, 184, 186, 190, 193, 194, 197, 200, 202, 203, 207, 208, 209, 212, 213, 219, 220, 224, 225, 226, 228, 229, 231, 232, 233, 234, 239, 242, 253, 262, 263, 272, 275, 333, 377, 428, 464, 475, 476, 486, 488, 491, 492, 514, 533, 555, 581, 583, 587, 607, 652, 655, 657, 681, 695, 772, 795, 833, 840, 850, 857], "55793898e": 5, "13115753e": 5, "399": [5, 6, 13, 79, 136, 177, 181, 186, 229], "870": [5, 79, 194, 242, 679], "opm_data": [5, 6], "975": [6, 35, 72, 207], "execut": [6, 20, 25, 32, 56, 66, 83, 89, 100, 104, 128, 131, 133, 135, 138, 147, 153, 154, 163, 170, 171, 173, 186, 192, 196, 197, 212, 218, 223, 231, 236, 241, 260, 262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 280, 352, 353, 355, 357, 372, 377, 410, 417, 420, 423, 424, 450, 463, 465, 466, 467, 475, 476, 514, 517, 518, 528, 529, 538, 539, 555, 560, 567, 568, 643, 646, 647, 648, 660, 682, 683, 684, 685, 686, 694, 697, 699, 700, 701, 702, 703, 704, 705, 713, 714, 722, 723, 724, 725, 726, 770, 772, 774, 777, 789, 795, 796, 798, 832, 833, 834, 837, 838, 857, 875], "auto_examples_dataset": 6, "869": [6, 9, 194, 207], "09": [6, 8, 9, 20, 42, 43, 44, 45, 49, 72, 74, 79, 80, 83, 89, 101, 114, 118, 119, 121, 128, 157, 158, 159, 161, 174, 176, 179, 184, 207, 218, 225, 226, 228, 229, 242, 268, 273, 519, 590, 676, 724, 727], "spm_faces_dataset_sgskip": [6, 7], "pipelin": [7, 8, 9, 10, 11, 12, 13, 15, 18, 107, 133, 136, 160, 164, 165, 171, 172, 193, 194, 198, 199, 203, 407, 409, 410, 411, 413, 414, 415, 416, 417, 419, 420, 421, 460, 556, 732, 841, 851, 852, 854, 875], "reconstruct": [7, 16, 53, 133, 157, 158, 161, 162, 163, 164, 181, 185, 186, 190, 193, 197, 198, 203, 208, 234, 242, 259, 260, 262, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 291, 292, 293, 294, 296, 301, 305, 306, 307, 310, 352, 358, 363, 364, 365, 386, 389, 415, 448, 459, 463, 465, 466, 467, 468, 469, 472, 508, 512, 514, 541, 555, 556, 565, 566, 574, 580, 583, 591, 600, 615, 618, 625, 627, 643, 644, 658, 661, 672, 690, 691, 734, 742, 753, 758, 760, 770, 776, 781, 800, 805, 806, 815, 825, 851, 854, 857, 863, 875], "scrambl": [7, 194, 851], "doe": [7, 28, 31, 55, 58, 59, 69, 70, 74, 78, 82, 110, 115, 125, 139, 140, 148, 150, 157, 159, 160, 161, 167, 177, 180, 181, 187, 188, 189, 198, 200, 201, 202, 203, 204, 206, 208, 209, 219, 221, 226, 228, 229, 232, 239, 242, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 269, 270, 271, 273, 274, 276, 277, 278, 286, 295, 296, 300, 317, 330, 356, 359, 366, 367, 383, 437, 438, 439, 440, 441, 465, 475, 476, 494, 498, 521, 541, 544, 557, 569, 571, 577, 608, 612, 637, 642, 645, 695, 697, 698, 699, 730, 732, 737, 745, 780, 803, 834, 839, 850, 854, 856, 857, 860, 875], "quit": [7, 21, 125, 143, 149, 150, 161, 200, 201, 203, 208, 209, 213, 224, 225, 233, 555, 834, 852, 854], "so": [7, 10, 28, 31, 32, 38, 40, 44, 47, 63, 69, 70, 74, 81, 91, 92, 93, 101, 102, 107, 112, 113, 125, 133, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 154, 155, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 179, 180, 181, 182, 183, 189, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 228, 229, 232, 233, 234, 238, 239, 254, 262, 263, 264, 265, 267, 269, 270, 272, 273, 274, 275, 276, 277, 278, 287, 288, 289, 296, 310, 332, 358, 365, 382, 386, 407, 410, 411, 413, 414, 415, 416, 417, 419, 420, 421, 438, 439, 441, 442, 446, 475, 476, 498, 522, 528, 541, 555, 556, 557, 565, 566, 575, 583, 584, 601, 613, 635, 642, 643, 682, 683, 685, 686, 732, 737, 742, 743, 751, 752, 776, 785, 787, 789, 795, 821, 830, 832, 834, 837, 839, 840, 841, 842, 850, 852, 854, 856, 857, 860, 875], "even": [7, 69, 73, 110, 126, 141, 143, 154, 159, 165, 166, 167, 170, 171, 182, 189, 190, 197, 198, 200, 202, 203, 204, 205, 206, 210, 213, 215, 224, 239, 254, 262, 263, 264, 265, 306, 322, 374, 375, 376, 377, 379, 380, 382, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 475, 476, 503, 555, 707, 803, 834, 842, 851, 857, 875], "fast": [7, 21, 44, 126, 150, 154, 190, 237, 239, 242, 262, 263, 264, 265, 361, 415, 424, 474, 475, 476, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 514, 515, 555, 592, 697, 699, 714, 832, 854, 857, 875], "machin": [7, 18, 92, 93, 180, 194, 198, 199, 242, 248, 267, 280, 352, 566, 574, 583, 852, 875], "sever": [7, 69, 74, 79, 80, 112, 125, 144, 149, 150, 152, 154, 157, 158, 164, 165, 167, 168, 170, 171, 179, 180, 187, 188, 189, 190, 197, 199, 204, 205, 210, 213, 215, 216, 224, 232, 234, 257, 262, 263, 399, 442, 475, 476, 591, 698, 723, 726, 834, 837, 838, 839, 841, 846, 850, 851, 854, 855, 857, 860, 875], "alexandr": [7, 9, 10, 11, 12, 13, 15, 18, 28, 29, 30, 38, 39, 40, 42, 46, 47, 48, 50, 52, 53, 59, 64, 86, 90, 94, 95, 98, 105, 106, 108, 109, 111, 115, 119, 123, 129, 130, 133, 136, 158, 161, 179, 184, 194, 203, 226, 227, 228, 232, 233, 234, 238, 242, 264, 265, 352, 407, 472, 473, 523, 555, 849, 854, 856, 862, 875], "gramfort": [7, 9, 10, 11, 13, 18, 28, 29, 30, 38, 39, 40, 42, 46, 47, 48, 50, 52, 53, 59, 64, 90, 94, 95, 98, 105, 106, 108, 109, 111, 115, 119, 123, 129, 130, 133, 136, 158, 161, 179, 184, 194, 203, 226, 227, 228, 232, 233, 234, 238, 242, 264, 265, 352, 472, 473, 523, 555, 782, 849, 854, 856, 862, 875], "inria": [7, 9, 10, 11, 13, 18, 28, 29, 30, 38, 39, 40, 42, 46, 47, 48, 50, 52, 53, 59, 64, 90, 94, 95, 98, 105, 106, 108, 109, 115, 119, 123, 129, 130, 136, 158, 184, 226, 227, 228, 232, 233, 234, 238], "deni": [7, 11, 13, 16, 21, 26, 33, 42, 68, 77, 99, 107, 111, 112, 118, 119, 124, 130, 131, 150, 161, 194, 228, 229, 234, 242, 264, 265, 352, 523, 849, 854, 862, 875], "engemann": [7, 11, 13, 16, 21, 26, 33, 42, 68, 77, 99, 107, 111, 112, 118, 119, 124, 130, 131, 161, 194, 228, 229, 234, 242, 264, 265, 352, 523, 782, 849, 854, 862, 875], "spm_face": [7, 121, 213, 851, 865], "ica": [7, 17, 20, 27, 73, 76, 82, 83, 86, 161, 164, 165, 197, 198, 199, 202, 205, 211, 212, 215, 242, 262, 263, 264, 265, 267, 272, 310, 325, 326, 370, 411, 421, 448, 475, 476, 490, 549, 552, 569, 571, 572, 578, 579, 581, 595, 596, 610, 772, 785, 786, 787, 788, 789, 795, 814, 841, 854, 861, 864, 865, 875], "create_eog_epoch": [7, 171, 197, 199, 202, 203, 205, 568, 576, 852, 865, 875], "spm_path": 7, "spm_ctf_meg_example_fac": 7, "d_3d": 7, "downsampl": [7, 19, 107, 133, 135, 144, 165, 193, 199, 201, 227, 254, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 406, 447, 448, 475, 476, 512, 574, 681, 695, 698, 801, 854, 875], "heavili": [7, 107, 156, 194, 287, 289, 732, 860], "advis": [7, 69, 188, 200, 254, 850, 857, 875], "real": [7, 32, 50, 90, 91, 150, 154, 155, 157, 159, 160, 200, 203, 204, 205, 206, 215, 219, 221, 226, 242, 295, 450, 475, 476, 517, 592, 698, 711, 721, 722, 723, 742, 841, 846, 863, 875], "jitter": [7, 167, 201, 475, 476, 854], "resampl": [7, 19, 21, 44, 74, 79, 80, 107, 133, 135, 139, 145, 148, 150, 164, 190, 193, 197, 200, 203, 205, 211, 212, 221, 232, 233, 234, 238, 260, 261, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 428, 442, 443, 445, 446, 448, 475, 476, 483, 490, 497, 552, 597, 695, 698, 742, 772, 783, 800, 805, 814, 832, 852, 857, 864, 865, 872, 875], "npad": [7, 19, 74, 79, 80, 190, 193, 232, 233, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 447, 475, 476, 854], "auto": [7, 10, 15, 16, 19, 22, 31, 69, 73, 74, 75, 79, 80, 81, 88, 105, 111, 118, 119, 123, 146, 147, 155, 161, 164, 190, 193, 200, 203, 206, 208, 226, 227, 228, 229, 232, 233, 254, 259, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 303, 304, 310, 326, 339, 341, 345, 351, 352, 356, 357, 358, 363, 407, 409, 413, 414, 418, 419, 426, 428, 431, 436, 437, 438, 440, 441, 443, 445, 446, 447, 452, 470, 472, 473, 475, 476, 481, 483, 485, 487, 490, 491, 497, 501, 514, 519, 533, 552, 554, 555, 556, 564, 565, 566, 567, 569, 574, 575, 578, 583, 587, 601, 607, 626, 640, 695, 697, 698, 699, 742, 758, 759, 761, 766, 772, 774, 776, 778, 779, 781, 782, 785, 787, 789, 792, 794, 795, 796, 797, 798, 800, 802, 804, 805, 806, 828, 850, 851, 854, 875], "sfreq": [7, 8, 9, 14, 19, 21, 31, 63, 65, 67, 68, 69, 88, 90, 91, 92, 93, 107, 109, 112, 123, 125, 126, 135, 136, 143, 165, 167, 168, 171, 189, 190, 193, 199, 200, 201, 209, 210, 213, 214, 215, 219, 221, 239, 256, 257, 262, 263, 264, 265, 267, 269, 270, 272, 273, 276, 277, 278, 281, 370, 409, 412, 413, 418, 419, 420, 431, 433, 435, 442, 443, 445, 475, 476, 587, 601, 687, 700, 701, 702, 711, 713, 714, 719, 721, 722, 723, 724, 775, 783, 860, 875], "5e": [7, 8, 9, 13, 21, 31, 32, 34, 35, 40, 41, 45, 49, 59, 75, 107, 122, 140, 171, 182, 184, 194, 206, 213, 221, 262, 263, 272, 450, 475, 476, 772, 795], "major": [7, 318, 475, 834, 854, 856, 860, 863, 875], "n_compon": [7, 8, 9, 12, 15, 73, 75, 81, 86, 115, 165, 171, 194, 203, 407, 414, 415, 421, 555, 556, 569, 875], "max_it": [7, 73, 75, 81, 165, 203, 522, 555, 581, 660, 702, 713, 875], "random_st": [7, 8, 9, 10, 15, 40, 75, 81, 88, 90, 91, 92, 111, 115, 136, 165, 203, 220, 221, 472, 508, 555, 581, 600, 647, 648, 649, 658, 659, 661, 674, 875], "correl": [7, 12, 18, 22, 26, 44, 73, 101, 145, 161, 194, 202, 203, 208, 224, 225, 228, 242, 254, 267, 274, 340, 352, 358, 413, 414, 419, 555, 569, 583, 679, 684, 851, 854, 857, 875], "indic": [7, 13, 16, 22, 31, 47, 48, 68, 69, 79, 98, 139, 140, 141, 143, 144, 145, 148, 150, 154, 155, 159, 167, 168, 169, 174, 177, 187, 190, 193, 197, 198, 199, 201, 203, 204, 207, 208, 210, 213, 215, 216, 219, 221, 226, 229, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 308, 310, 311, 312, 325, 327, 333, 352, 357, 366, 399, 407, 409, 413, 414, 415, 423, 428, 431, 436, 445, 446, 449, 475, 476, 483, 485, 487, 490, 491, 492, 497, 501, 531, 532, 546, 549, 551, 552, 554, 555, 556, 557, 558, 563, 565, 569, 570, 571, 572, 577, 580, 581, 582, 588, 589, 591, 592, 598, 607, 613, 614, 617, 626, 629, 635, 640, 663, 664, 668, 671, 675, 681, 682, 683, 685, 686, 687, 690, 695, 696, 697, 698, 699, 703, 704, 705, 706, 708, 725, 726, 742, 755, 758, 759, 760, 762, 766, 772, 773, 774, 776, 778, 779, 781, 785, 786, 787, 789, 791, 793, 794, 796, 797, 802, 804, 823, 828, 830, 839, 856, 857, 860, 875], "eog_epoch": [7, 171, 197, 202, 572], "mrt31": 7, "2908": [7, 19], "eog_ind": [7, 203, 555], "eog_scor": [7, 171, 203, 272], "find_bads_eog": [7, 171, 203, 272, 555, 875], "plot_scor": [7, 73, 81, 203, 555, 875], "plot_compon": [7, 75, 203, 555, 861, 875], "topograph": [7, 8, 16, 18, 19, 27, 120, 128, 131, 150, 194, 242, 264, 265, 267, 271, 272, 407, 414, 488, 551, 552, 555, 613, 695, 759, 766, 776, 781, 787, 794, 802, 804, 875], "compon": [7, 8, 12, 14, 15, 21, 27, 29, 30, 31, 34, 41, 42, 44, 45, 47, 59, 69, 73, 75, 76, 77, 78, 83, 85, 86, 92, 117, 122, 136, 149, 150, 161, 165, 171, 176, 177, 178, 180, 181, 183, 190, 194, 197, 198, 199, 200, 201, 202, 204, 205, 208, 209, 215, 221, 232, 234, 242, 264, 265, 266, 268, 272, 295, 296, 310, 326, 352, 356, 357, 366, 367, 368, 377, 399, 400, 407, 410, 411, 413, 414, 415, 416, 417, 419, 420, 421, 428, 446, 447, 450, 451, 452, 470, 472, 473, 475, 476, 490, 525, 528, 529, 531, 532, 533, 534, 539, 555, 556, 563, 565, 566, 569, 574, 581, 583, 698, 782, 785, 786, 787, 788, 789, 795, 841, 850, 851, 854, 857, 860, 861, 875], "saw": [7, 139, 141, 166, 167, 170, 197, 198, 199, 205, 213, 228], "2nd": [7, 150, 193, 197, 226, 229, 239, 242, 569, 637, 875], "ecg": [7, 70, 72, 75, 79, 80, 81, 88, 90, 91, 92, 107, 109, 125, 129, 139, 140, 141, 145, 148, 150, 166, 167, 168, 171, 188, 190, 198, 199, 201, 202, 204, 206, 208, 209, 210, 213, 214, 215, 216, 219, 221, 262, 263, 264, 265, 272, 309, 357, 370, 440, 475, 476, 486, 487, 490, 501, 552, 555, 567, 571, 572, 575, 578, 647, 648, 681, 695, 697, 698, 699, 772, 788, 793, 795, 830, 857, 860, 875], "too": [7, 27, 68, 76, 83, 125, 139, 141, 143, 149, 150, 156, 157, 160, 164, 171, 177, 180, 197, 198, 199, 200, 201, 202, 205, 207, 209, 215, 224, 226, 228, 239, 262, 263, 264, 265, 267, 310, 326, 340, 370, 428, 475, 476, 481, 491, 558, 563, 565, 566, 574, 582, 583, 601, 607, 742, 762, 804, 834, 854, 875], "dipolar": [7, 450, 555, 786], "plot_overlai": [7, 81, 133, 203, 555, 875], "inspect": [7, 21, 28, 69, 81, 125, 140, 150, 155, 161, 190, 197, 208, 209, 254, 262, 263, 264, 265, 305, 307, 316, 330, 475, 476, 583, 591, 647, 648, 772, 776, 795, 846, 854], "clean": [7, 72, 73, 74, 82, 140, 143, 158, 165, 166, 171, 188, 198, 200, 202, 203, 204, 205, 209, 229, 239, 257, 262, 272, 475, 476, 488, 515, 555, 591, 606, 681, 786, 834, 854, 875], "default": [7, 21, 31, 43, 44, 73, 86, 101, 110, 112, 118, 125, 133, 134, 136, 139, 141, 144, 145, 148, 149, 150, 155, 157, 161, 165, 166, 167, 168, 169, 170, 171, 177, 178, 187, 188, 190, 198, 199, 201, 203, 204, 205, 206, 208, 213, 214, 215, 216, 219, 224, 228, 229, 234, 237, 238, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 314, 315, 317, 319, 320, 321, 322, 324, 325, 326, 327, 328, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 431, 432, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 457, 458, 459, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 586, 587, 588, 589, 590, 591, 592, 595, 596, 597, 598, 600, 602, 603, 604, 605, 606, 607, 609, 610, 611, 613, 614, 615, 617, 618, 619, 620, 621, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 676, 680, 681, 682, 683, 684, 685, 686, 687, 688, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 711, 712, 713, 714, 717, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 737, 739, 741, 742, 745, 750, 751, 755, 756, 758, 759, 760, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 811, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 832, 833, 834, 838, 839, 850, 851, 854, 860, 875], "k": [7, 8, 9, 10, 11, 13, 14, 18, 19, 22, 28, 31, 38, 39, 41, 59, 65, 68, 69, 81, 95, 98, 102, 141, 142, 157, 159, 175, 180, 187, 193, 194, 200, 204, 214, 216, 228, 229, 237, 238, 239, 242, 259, 260, 262, 263, 264, 265, 268, 271, 273, 281, 286, 295, 298, 300, 407, 414, 470, 472, 473, 475, 476, 521, 522, 554, 555, 574, 615, 655, 676, 682, 683, 684, 686, 695, 697, 699, 711, 721, 730, 755, 759, 774, 780, 781, 784, 795, 797, 802, 803, 804, 830, 832, 834, 857, 860, 875], "append": [7, 8, 10, 16, 43, 44, 45, 47, 61, 67, 74, 78, 111, 136, 149, 171, 182, 193, 198, 203, 205, 209, 213, 224, 228, 229, 234, 256, 262, 263, 264, 265, 268, 475, 476, 555, 569, 574, 583, 641, 672, 695, 696, 697, 698, 699, 715, 834, 875], "covarari": 7, "noise_cov": [7, 11, 31, 34, 40, 41, 42, 45, 48, 49, 50, 51, 54, 55, 58, 59, 92, 107, 119, 151, 161, 171, 176, 177, 179, 181, 190, 203, 259, 262, 263, 264, 265, 272, 296, 298, 366, 367, 451, 470, 472, 473, 475, 476, 533, 555, 772, 776, 780, 782, 795, 860, 875], "shrunk": [7, 31, 34, 40, 41, 42, 45, 59, 119, 151, 161, 176, 182, 352], "visual": [7, 8, 13, 14, 15, 16, 32, 33, 35, 36, 41, 42, 45, 56, 57, 59, 60, 61, 68, 70, 72, 78, 85, 92, 99, 102, 103, 104, 111, 113, 114, 117, 118, 126, 128, 130, 132, 133, 134, 136, 140, 142, 144, 146, 147, 150, 151, 152, 153, 154, 159, 161, 164, 165, 167, 171, 174, 177, 178, 182, 185, 186, 190, 194, 197, 199, 200, 201, 206, 208, 211, 212, 213, 214, 215, 216, 225, 226, 228, 238, 239, 242, 254, 257, 260, 262, 263, 264, 265, 267, 269, 270, 272, 273, 275, 276, 277, 278, 305, 306, 307, 311, 339, 340, 341, 342, 347, 349, 350, 358, 361, 362, 413, 434, 436, 448, 450, 460, 475, 476, 490, 510, 514, 521, 522, 532, 534, 536, 550, 555, 559, 583, 591, 607, 609, 610, 613, 615, 618, 621, 623, 636, 644, 647, 648, 682, 687, 697, 698, 711, 721, 722, 724, 725, 726, 727, 742, 747, 759, 765, 766, 772, 773, 775, 776, 777, 780, 783, 784, 785, 786, 787, 788, 789, 792, 793, 795, 809, 813, 814, 830, 831, 832, 835, 837, 838, 841, 846, 852, 854, 857, 858, 860, 865, 875], "dig": [7, 107, 116, 123, 135, 155, 156, 157, 158, 159, 165, 168, 169, 182, 183, 213, 219, 267, 304, 310, 340, 426, 482, 519, 758, 875], "montag": [7, 8, 19, 69, 81, 113, 123, 133, 134, 135, 150, 158, 188, 189, 203, 219, 239, 262, 263, 264, 265, 267, 310, 313, 314, 316, 321, 323, 326, 328, 329, 330, 331, 332, 333, 334, 335, 363, 440, 459, 475, 476, 487, 584, 792, 804, 812, 815, 830, 851, 857, 875], "It": [7, 10, 13, 31, 39, 47, 55, 60, 69, 70, 73, 88, 92, 93, 101, 112, 114, 115, 119, 139, 141, 143, 144, 148, 149, 150, 155, 156, 157, 158, 159, 165, 168, 169, 170, 171, 174, 176, 179, 187, 188, 189, 194, 198, 199, 201, 202, 203, 204, 206, 207, 208, 213, 214, 216, 219, 224, 226, 227, 229, 232, 234, 238, 239, 254, 255, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 276, 277, 278, 280, 285, 295, 296, 301, 310, 328, 339, 352, 357, 363, 407, 415, 416, 442, 450, 470, 472, 473, 475, 476, 483, 490, 494, 504, 514, 517, 522, 528, 529, 533, 538, 539, 555, 559, 565, 574, 583, 584, 591, 597, 604, 608, 612, 617, 621, 623, 661, 667, 670, 684, 689, 695, 698, 711, 718, 721, 732, 742, 780, 785, 805, 819, 822, 826, 830, 832, 834, 837, 838, 839, 841, 846, 850, 851, 854, 856, 857, 860, 863, 875], "spm_dig_montag": 7, "trans_fnam": [7, 67, 79, 155, 177, 190], "spm_ctf_meg_example_faces1_3d_raw": 7, "map": [7, 8, 10, 16, 19, 23, 24, 25, 26, 27, 36, 40, 41, 43, 56, 58, 70, 75, 77, 85, 92, 103, 104, 105, 107, 113, 117, 120, 122, 126, 128, 132, 133, 134, 135, 142, 143, 144, 145, 150, 155, 157, 159, 164, 165, 167, 174, 177, 180, 181, 193, 194, 197, 198, 199, 200, 203, 204, 205, 209, 213, 220, 222, 223, 224, 229, 232, 233, 234, 242, 256, 259, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 281, 286, 288, 295, 308, 310, 322, 338, 358, 361, 362, 368, 407, 410, 411, 413, 414, 415, 416, 417, 419, 420, 421, 428, 431, 434, 436, 448, 452, 460, 470, 471, 472, 473, 474, 475, 476, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 511, 514, 515, 521, 522, 533, 546, 551, 552, 555, 556, 564, 569, 604, 610, 613, 615, 616, 620, 621, 630, 631, 636, 644, 649, 655, 660, 663, 676, 678, 679, 682, 684, 688, 689, 695, 696, 697, 698, 699, 704, 726, 742, 759, 761, 766, 769, 770, 772, 776, 777, 781, 787, 794, 795, 800, 801, 802, 803, 804, 805, 806, 812, 830, 832, 834, 850, 860, 863, 875], "make_field_map": [7, 122, 149, 264, 265, 777, 865, 875], "plot_field": [7, 122, 149, 264, 265, 875], "170": [7, 79, 82, 121, 136, 168, 182, 183, 184, 190, 200, 203, 224, 228, 229, 242], "daat": 7, "plot_whit": [7, 91, 119, 151, 161, 176, 262, 263, 264, 265, 475, 476, 772, 776, 795, 854, 875], "oct": [7, 11, 22, 24, 28, 29, 31, 35, 38, 39, 40, 41, 42, 43, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 67, 88, 90, 91, 92, 93, 102, 105, 106, 107, 108, 122, 129, 155, 157, 158, 159, 165, 171, 176, 177, 178, 180, 181, 190, 194, 220, 221, 232, 234, 254, 269, 273, 275, 277, 406, 643, 800, 875], "spm_": 7, "s_dspm_invers": 7, "comment": [7, 46, 61, 113, 125, 148, 149, 151, 170, 171, 188, 206, 219, 238, 255, 261, 262, 263, 264, 265, 268, 272, 333, 465, 612, 617, 695, 698, 728, 766, 780, 828, 830, 832, 834, 857, 875], "3d": [7, 27, 31, 35, 38, 40, 52, 59, 60, 94, 95, 120, 125, 128, 133, 134, 135, 141, 150, 155, 157, 159, 160, 174, 175, 184, 189, 194, 204, 208, 224, 227, 229, 254, 260, 262, 263, 264, 265, 267, 269, 270, 272, 273, 276, 277, 278, 288, 310, 311, 323, 336, 364, 415, 445, 446, 475, 476, 495, 505, 514, 566, 574, 583, 676, 682, 683, 742, 743, 744, 749, 751, 752, 753, 758, 763, 770, 777, 792, 798, 800, 801, 805, 807, 808, 810, 812, 813, 830, 833, 834, 838, 846, 851, 852, 855, 875], "both": [7, 19, 31, 32, 33, 38, 40, 41, 45, 47, 51, 58, 59, 68, 69, 70, 73, 85, 88, 92, 97, 107, 112, 130, 133, 139, 140, 148, 149, 150, 161, 165, 167, 168, 169, 170, 171, 174, 176, 177, 179, 180, 181, 182, 188, 189, 190, 194, 197, 199, 200, 201, 202, 203, 204, 205, 208, 209, 213, 221, 226, 228, 232, 233, 234, 237, 238, 239, 242, 257, 258, 261, 262, 263, 264, 265, 269, 270, 272, 273, 275, 276, 277, 278, 285, 295, 296, 304, 313, 352, 356, 357, 358, 366, 367, 368, 407, 414, 426, 431, 448, 450, 451, 470, 472, 473, 475, 476, 514, 533, 555, 558, 565, 569, 571, 597, 600, 613, 614, 618, 623, 644, 645, 649, 658, 676, 678, 682, 683, 685, 686, 695, 697, 698, 739, 742, 755, 765, 766, 773, 778, 779, 782, 785, 800, 805, 825, 830, 834, 840, 854, 855, 856, 857, 860, 875], "ven": [7, 50], "save_imag": [7, 232, 234, 742], "dspm_map": 7, "png": [7, 47, 113, 171, 232, 234, 254, 272, 875], "classifi": [8, 9, 10, 11, 13, 17, 20, 27, 194, 208, 262, 264, 265, 267, 411, 422, 424, 425, 555, 574, 610, 653, 654, 875], "featur": [8, 11, 15, 18, 19, 27, 96, 100, 141, 149, 171, 193, 194, 205, 208, 216, 224, 229, 239, 242, 264, 265, 269, 270, 272, 273, 276, 277, 278, 407, 410, 413, 414, 416, 417, 419, 422, 440, 475, 476, 555, 574, 583, 606, 679, 680, 766, 776, 778, 800, 805, 807, 811, 834, 841, 842, 851, 853, 854, 855, 856, 857, 875], "extract": [8, 9, 18, 21, 24, 27, 36, 38, 41, 56, 61, 72, 73, 78, 81, 98, 110, 111, 121, 125, 126, 134, 135, 140, 141, 143, 148, 150, 157, 158, 164, 165, 168, 170, 180, 187, 189, 190, 194, 197, 201, 203, 204, 205, 211, 212, 214, 219, 225, 226, 227, 234, 242, 254, 255, 262, 264, 267, 268, 269, 270, 273, 275, 276, 277, 278, 305, 339, 340, 341, 342, 343, 344, 347, 349, 350, 360, 368, 382, 407, 411, 414, 415, 431, 441, 448, 475, 478, 483, 490, 494, 510, 521, 522, 536, 555, 559, 583, 608, 612, 613, 617, 623, 667, 670, 741, 765, 784, 830, 834, 850, 851, 857, 860, 875], "en": [8, 19, 194, 242, 253, 862, 875], "wikipedia": [8, 194, 224, 242], "org": [8, 15, 32, 33, 69, 70, 81, 86, 111, 112, 113, 114, 118, 125, 133, 134, 135, 194, 226, 228, 229, 232, 238, 242, 269, 273, 277, 298, 377, 399, 400, 415, 446, 556, 641, 679, 724, 727, 738, 800, 834, 854, 875], "wiki": [8, 154, 194, 269, 273, 277, 555, 738, 800, 830, 850], "common_spatial_pattern": [8, 194], "eegbci": [8, 9, 110, 158, 203, 865, 875], "document": [8, 15, 32, 63, 86, 125, 134, 135, 142, 148, 150, 159, 165, 167, 168, 169, 171, 176, 180, 188, 200, 201, 203, 205, 208, 213, 215, 216, 219, 238, 242, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 301, 302, 303, 304, 305, 306, 307, 310, 312, 314, 315, 327, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 379, 380, 381, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 409, 410, 412, 413, 417, 418, 420, 423, 424, 426, 428, 432, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 450, 451, 452, 457, 458, 462, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 510, 511, 512, 513, 514, 515, 517, 518, 519, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 548, 551, 555, 556, 557, 558, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 578, 579, 580, 581, 583, 584, 586, 587, 590, 591, 592, 595, 596, 597, 598, 602, 603, 604, 605, 606, 607, 609, 610, 611, 613, 614, 615, 617, 618, 619, 620, 621, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 640, 643, 644, 646, 647, 648, 649, 652, 657, 659, 660, 663, 665, 666, 667, 668, 669, 670, 671, 682, 683, 684, 685, 686, 690, 691, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 713, 714, 717, 718, 722, 723, 724, 725, 726, 727, 728, 731, 732, 737, 741, 742, 750, 751, 758, 767, 770, 774, 775, 776, 777, 780, 782, 785, 786, 787, 792, 793, 795, 796, 798, 799, 800, 801, 805, 806, 807, 811, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 838, 839, 841, 849, 850, 851, 853, 854, 857, 875], "physionet": [8, 136, 203, 242, 377, 399, 400, 851, 863, 875], "martin": [8, 10, 35, 47, 102, 242, 407, 849, 851, 857, 875], "billing": [8, 875], "tugraz": 8, "sklearn": [8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 115, 136, 170, 193, 194, 203, 224, 352, 357, 408, 410, 413, 416, 417, 421, 424, 694, 738, 833, 834, 875], "discriminant_analysi": [8, 9], "lineardiscriminantanalysi": [8, 9], "model_select": [8, 9, 10, 12, 15, 16, 19, 352, 357, 424, 875], "shufflesplit": 8, "cross_val_scor": [8, 9], "events_from_annot": [8, 9, 110, 126, 134, 135, 136, 143, 167, 209, 239, 256, 281, 483, 490, 865, 875], "make_standard_montag": [8, 19, 69, 81, 123, 158, 169, 189, 239, 262, 263, 264, 265, 267, 321, 328, 475, 476, 487, 498, 865, 875], "concatenate_raw": [8, 9, 10, 79, 110, 190, 262, 263, 264, 265, 359, 360, 475, 476, 574, 583, 851, 865, 875], "read_raw_edf": [8, 9, 81, 110, 136, 158, 188, 203, 481, 483, 497, 851, 857, 861, 865, 875], "classif": [8, 9, 10, 11, 12, 15, 51, 137, 138, 145, 161, 164, 194, 242, 256, 262, 267, 298, 399, 408, 436, 475, 490, 601, 697, 775, 851, 875], "start": [8, 22, 29, 33, 34, 40, 61, 65, 69, 80, 91, 94, 125, 133, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 155, 156, 157, 159, 160, 164, 165, 166, 167, 169, 172, 173, 176, 177, 187, 194, 198, 199, 201, 202, 203, 204, 206, 208, 209, 213, 214, 215, 216, 219, 221, 224, 225, 226, 237, 238, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 276, 277, 278, 281, 282, 283, 294, 333, 339, 340, 341, 342, 352, 355, 357, 407, 413, 414, 419, 431, 447, 448, 449, 465, 466, 474, 475, 476, 481, 483, 490, 500, 503, 516, 525, 544, 555, 558, 562, 567, 568, 571, 572, 574, 575, 576, 577, 578, 597, 613, 660, 672, 682, 683, 685, 686, 695, 696, 698, 700, 701, 702, 703, 704, 705, 706, 730, 742, 747, 766, 768, 775, 781, 786, 788, 789, 795, 815, 830, 832, 834, 836, 837, 838, 839, 842, 845, 850, 853, 854, 857, 858, 860, 861, 875], "cue": [8, 134], "feet": [8, 9, 110, 377], "standard_1005": [8, 69, 81, 158, 169, 203], "set_montag": [8, 15, 19, 69, 81, 123, 126, 133, 134, 135, 150, 158, 169, 181, 188, 189, 203, 219, 239, 262, 263, 264, 265, 267, 440, 475, 476, 487, 498, 857, 875], "skip_by_annot": [8, 9, 262, 263, 264, 265, 475, 476, 574, 583, 875], "t1": [8, 9, 30, 44, 50, 110, 155, 156, 157, 158, 159, 160, 175, 254, 275, 277, 278, 301, 305, 306, 307, 318, 386, 467, 475, 580, 644, 760, 806, 830, 851, 857, 875], "t2": [8, 9, 110, 318, 475, 875], "train": [8, 10, 11, 13, 15, 16, 19, 86, 136, 193, 194, 407, 408, 409, 410, 411, 412, 414, 415, 417, 418, 419, 420, 424, 555, 556, 785, 834, 850, 851, 875], "epochs_train": [8, 136], "except": [8, 9, 69, 81, 110, 139, 142, 158, 170, 174, 175, 203, 208, 213, 262, 263, 264, 265, 282, 283, 326, 346, 347, 352, 399, 448, 475, 476, 477, 544, 556, 574, 623, 686, 690, 732, 834, 857, 860, 875], "ignor": [8, 9, 10, 41, 47, 68, 69, 79, 81, 107, 110, 134, 139, 145, 150, 158, 161, 165, 171, 180, 183, 190, 197, 198, 199, 205, 224, 254, 257, 259, 260, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 276, 277, 278, 280, 281, 282, 283, 295, 296, 314, 322, 337, 346, 347, 352, 356, 358, 359, 361, 363, 366, 367, 372, 374, 375, 376, 379, 380, 382, 387, 390, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 407, 414, 416, 426, 434, 436, 441, 443, 448, 454, 457, 464, 470, 472, 473, 475, 476, 477, 486, 488, 492, 495, 503, 533, 550, 554, 555, 558, 566, 574, 583, 603, 607, 609, 610, 618, 632, 634, 637, 643, 644, 660, 682, 684, 695, 697, 698, 699, 739, 759, 770, 771, 772, 774, 775, 778, 781, 785, 786, 794, 795, 796, 797, 802, 804, 821, 823, 825, 830, 834, 875], "_io": [8, 9, 69, 81, 110, 158, 203], "fileio": [8, 9, 69, 81, 110, 158, 203], "eegbci_checksum": [8, 9, 69, 81, 110, 158, 203], "txt": [8, 9, 44, 69, 81, 110, 133, 134, 158, 179, 182, 203, 214, 215, 256, 328, 337, 382, 478, 482, 601, 610, 820, 832, 834, 854, 875], "rb": [8, 9, 69, 81, 110, 158, 203], "closefd": [8, 9, 69, 81, 110, 158, 203], "traceback": [8, 9, 69, 81, 110, 158, 203, 833], "most": [8, 9, 19, 28, 45, 47, 69, 72, 80, 81, 102, 106, 107, 110, 112, 118, 125, 133, 134, 139, 143, 148, 149, 150, 151, 154, 155, 158, 164, 166, 168, 170, 171, 180, 187, 197, 200, 202, 203, 204, 205, 207, 208, 209, 210, 213, 224, 228, 237, 254, 262, 263, 264, 265, 267, 268, 273, 276, 310, 328, 353, 354, 355, 374, 375, 376, 379, 380, 382, 386, 387, 390, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 436, 442, 447, 450, 470, 508, 514, 542, 555, 565, 581, 583, 600, 647, 648, 649, 658, 659, 660, 661, 682, 683, 684, 685, 686, 732, 737, 742, 760, 781, 830, 833, 834, 838, 839, 840, 852, 854, 856, 857, 858, 861, 865, 875], "recent": [8, 9, 69, 81, 110, 158, 170, 200, 203, 407, 833, 834, 850, 875], "last": [8, 9, 15, 69, 80, 81, 102, 110, 125, 136, 139, 143, 145, 150, 158, 159, 165, 182, 187, 194, 198, 199, 200, 201, 203, 204, 213, 216, 224, 225, 232, 239, 257, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 276, 277, 278, 285, 286, 300, 318, 340, 352, 360, 410, 417, 418, 420, 431, 445, 446, 447, 448, 474, 475, 476, 499, 516, 521, 550, 555, 558, 676, 681, 682, 683, 685, 686, 695, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 713, 724, 730, 742, 774, 779, 781, 786, 789, 796, 802, 830, 833, 851, 856, 857, 875], "decor": [8, 9, 69, 81, 110, 158, 203, 738, 740], "gen": [8, 9, 69, 81, 110, 158, 203, 755], "567": [8, 9, 13, 19, 69, 81, 110, 158, 203, 229, 242], "resourcewarn": [8, 9, 69, 81, 110, 158, 203], "unclos": [8, 9, 69, 81, 110, 158, 203], "bufferedread": [8, 9, 69, 81, 110, 158, 203], "edf": [8, 9, 81, 110, 136, 158, 203, 440, 475, 476, 483, 490, 497, 601, 851, 857, 861, 875], "eegmmidb": [8, 9, 81, 110, 158, 203, 377, 875], "s001": [8, 9, 81, 110, 158, 203], "s001r06": [8, 9, 110, 158], "19999": [8, 110, 158, 203], "124": [8, 13, 35, 110, 158, 168, 203, 207, 224, 229, 233, 236, 242, 385], "994": [8, 9, 69, 81, 110, 150, 153, 158, 203, 229], "s001r10": [8, 9, 110], "s001r14": [8, 9, 110], "bandpass": [8, 9, 12, 13, 14, 15, 16, 18, 21, 34, 42, 71, 75, 80, 86, 111, 113, 119, 131, 135, 140, 143, 145, 171, 194, 197, 199, 202, 203, 205, 209, 210, 229, 239, 262, 263, 264, 265, 409, 415, 418, 442, 443, 445, 475, 476, 587, 697, 699, 795, 796, 875], "265": [8, 9, 79, 80, 168, 190, 207, 224, 229, 242, 652, 657], "656": [8, 9, 229], "64": [8, 9, 12, 13, 19, 21, 26, 32, 33, 34, 35, 41, 45, 46, 47, 50, 58, 59, 79, 80, 81, 99, 101, 106, 110, 112, 136, 142, 157, 158, 168, 169, 170, 171, 175, 177, 180, 183, 184, 190, 194, 203, 207, 221, 224, 225, 228, 229, 242, 259, 262, 263, 264, 265, 268, 271, 273, 407, 414, 473, 475, 476, 496, 528, 529, 538, 539, 554, 555, 695, 697, 699, 759, 774, 781, 785, 794, 797, 802, 804, 840, 851, 857, 861], "annot": [8, 9, 27, 38, 41, 44, 47, 67, 74, 76, 81, 83, 88, 92, 93, 110, 111, 124, 125, 126, 133, 134, 135, 143, 145, 150, 159, 164, 165, 172, 174, 180, 188, 189, 190, 193, 197, 203, 206, 216, 217, 218, 220, 257, 262, 263, 264, 265, 267, 281, 342, 343, 357, 361, 384, 436, 474, 475, 476, 477, 483, 488, 490, 495, 503, 515, 555, 557, 558, 559, 560, 561, 562, 571, 572, 574, 575, 576, 583, 584, 601, 610, 618, 634, 637, 699, 742, 758, 784, 787, 795, 796, 810, 811, 825, 830, 851, 852, 857, 865, 875], "descript": [8, 9, 110, 126, 134, 135, 136, 139, 141, 143, 150, 167, 168, 169, 187, 189, 190, 199, 209, 213, 214, 215, 219, 224, 256, 262, 263, 264, 265, 267, 271, 281, 320, 321, 353, 354, 357, 436, 475, 476, 477, 515, 555, 558, 571, 572, 575, 607, 695, 698, 699, 787, 796, 830, 834, 851, 860, 875], "801": [8, 143, 229, 238], "discrim": 8, "mont": [8, 242], "carlo": [8, 242, 875], "cross": [8, 9, 10, 11, 12, 15, 16, 19, 27, 32, 33, 34, 36, 44, 56, 77, 85, 103, 104, 117, 119, 120, 128, 136, 161, 165, 176, 193, 194, 198, 203, 205, 208, 220, 221, 228, 242, 259, 262, 264, 266, 267, 273, 274, 286, 288, 295, 296, 297, 352, 357, 358, 362, 368, 407, 410, 413, 419, 423, 424, 428, 448, 475, 521, 531, 532, 533, 534, 537, 552, 555, 565, 571, 574, 575, 583, 604, 610, 613, 615, 623, 696, 700, 701, 702, 703, 704, 705, 706, 712, 742, 768, 786, 830, 846, 851, 854, 863, 875], "epochs_data": [8, 409, 412, 416, 875], "get_data": [8, 9, 10, 12, 13, 14, 16, 18, 21, 69, 71, 74, 82, 94, 95, 98, 112, 113, 125, 131, 136, 139, 140, 145, 148, 165, 166, 194, 201, 204, 225, 229, 237, 238, 239, 262, 263, 264, 265, 475, 476, 696, 697, 699, 857, 875], "epochs_data_train": 8, "cv": [8, 9, 10, 11, 12, 15, 16, 19, 194, 352, 357, 423, 424, 875], "test_siz": 8, "cv_split": 8, "split": [8, 10, 11, 15, 16, 19, 58, 86, 92, 125, 144, 158, 165, 193, 194, 205, 220, 225, 234, 242, 262, 263, 264, 265, 268, 269, 270, 273, 276, 277, 278, 352, 357, 424, 466, 474, 475, 476, 495, 498, 528, 529, 583, 672, 681, 696, 724, 727, 742, 768, 800, 805, 860, 875], "assembl": [8, 9, 228, 533, 687, 852, 875], "lda": [8, 9], "log": [8, 9, 12, 21, 33, 81, 119, 127, 141, 161, 176, 198, 200, 203, 205, 209, 216, 226, 238, 239, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 301, 302, 303, 304, 305, 306, 307, 310, 312, 314, 315, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 379, 380, 381, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 412, 413, 414, 417, 418, 420, 423, 424, 426, 428, 432, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 450, 451, 452, 457, 458, 462, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 510, 511, 512, 513, 514, 515, 517, 518, 519, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 548, 551, 555, 557, 558, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 578, 579, 580, 581, 583, 584, 586, 587, 590, 591, 592, 595, 596, 597, 598, 602, 603, 604, 605, 606, 607, 609, 610, 611, 613, 614, 615, 617, 618, 619, 620, 621, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 640, 641, 642, 643, 644, 646, 647, 648, 649, 659, 660, 663, 665, 666, 667, 668, 669, 670, 671, 682, 683, 684, 685, 686, 690, 691, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 713, 714, 717, 718, 722, 723, 725, 726, 727, 728, 731, 732, 737, 740, 741, 742, 750, 758, 767, 770, 771, 774, 775, 776, 777, 782, 783, 785, 786, 787, 790, 792, 793, 795, 796, 798, 799, 800, 801, 802, 805, 806, 807, 811, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 854, 865, 875], "norm_trac": [8, 9, 194, 407, 875], "scikit": [8, 9, 16, 18, 19, 115, 194, 203, 411, 413, 415, 416, 417, 418, 420, 421, 422, 425, 555, 852, 875], "learn": [8, 9, 16, 18, 19, 21, 69, 115, 142, 160, 161, 165, 194, 196, 198, 199, 203, 242, 248, 352, 411, 413, 415, 416, 417, 418, 420, 421, 422, 424, 425, 555, 581, 834, 841, 851, 852, 854, 875], "clf": [8, 9, 10, 11, 12, 13, 15, 18, 194, 422, 875], "class_bal": 8, "accuraci": [8, 10, 15, 33, 79, 133, 136, 242, 259, 262, 263, 264, 265, 271, 367, 368, 407, 413, 414, 419, 428, 450, 475, 476, 533, 554, 555, 569, 652, 657, 695, 697, 699, 723, 726, 732, 759, 774, 781, 785, 794, 797, 802, 804, 815, 860, 875], "chanc": [8, 9, 10, 11, 194, 856, 875], "fit_transform": [8, 9, 10, 14, 18, 194, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 556], "plot_pattern": [8, 12, 194, 407, 414, 875], "ch_type": [8, 14, 22, 26, 42, 63, 78, 80, 85, 98, 110, 112, 118, 122, 123, 129, 140, 141, 144, 148, 149, 150, 165, 169, 175, 176, 189, 203, 208, 209, 216, 219, 229, 237, 238, 259, 262, 263, 264, 265, 316, 317, 370, 407, 414, 475, 476, 501, 514, 554, 555, 560, 569, 574, 636, 640, 695, 697, 698, 699, 773, 774, 781, 785, 797, 798, 802, 804, 875], "au": [8, 259, 262, 263, 264, 265, 271, 370, 407, 414, 475, 476, 695, 697, 699, 774, 781, 794, 802], "7e": [8, 9, 32, 35, 48, 49, 54, 55, 58, 69, 92, 119, 149, 151, 161, 171, 177, 178, 181, 182, 184, 190, 194, 198, 220], "8e": [8, 9, 32, 35, 49, 73, 107, 119, 161, 171, 176, 179, 182, 184, 190, 194], "0001": [8, 9, 32, 77, 85, 117, 122, 149, 178, 198, 472, 473], "00012": [8, 9], "6e": [8, 9, 34, 42, 46, 117, 119, 151, 171, 176, 182, 184, 194], "00011": [8, 9], "933333": 8, "533333": 8, "00025": 8, "00026": 8, "9e": [8, 9, 42, 49, 85, 91, 122, 149, 151, 161, 176, 179, 181, 182, 183, 184, 194, 220], "w_length": 8, "int": [8, 11, 19, 31, 67, 71, 88, 91, 93, 107, 112, 125, 142, 148, 159, 168, 170, 190, 193, 200, 201, 210, 213, 219, 221, 234, 239, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 301, 302, 303, 304, 305, 306, 307, 309, 310, 312, 314, 315, 325, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 379, 380, 381, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 423, 424, 426, 428, 429, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 457, 458, 460, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 546, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 586, 587, 590, 591, 592, 595, 596, 597, 598, 600, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 613, 614, 615, 617, 618, 619, 620, 621, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 640, 642, 643, 644, 645, 646, 647, 648, 649, 658, 659, 660, 661, 663, 665, 666, 667, 668, 669, 670, 671, 672, 674, 675, 678, 681, 682, 683, 684, 685, 686, 687, 690, 691, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 713, 714, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 737, 741, 742, 750, 751, 755, 758, 759, 760, 766, 767, 768, 770, 771, 772, 773, 774, 775, 776, 777, 780, 781, 782, 785, 786, 787, 788, 789, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 811, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 875], "w_step": 8, "w_start": 8, "shape": [8, 16, 19, 22, 31, 41, 47, 50, 53, 63, 65, 69, 95, 112, 113, 118, 133, 135, 136, 139, 145, 148, 156, 157, 159, 169, 174, 180, 187, 193, 194, 200, 213, 219, 224, 225, 226, 228, 229, 232, 233, 234, 237, 238, 239, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 285, 295, 296, 297, 302, 303, 304, 310, 311, 312, 316, 319, 323, 327, 337, 342, 346, 347, 348, 349, 350, 361, 363, 366, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 431, 435, 436, 441, 443, 445, 448, 449, 450, 451, 452, 465, 466, 468, 469, 470, 472, 475, 476, 478, 486, 499, 510, 512, 514, 516, 520, 530, 531, 532, 534, 537, 538, 550, 554, 555, 556, 558, 559, 560, 562, 563, 564, 565, 566, 569, 574, 577, 581, 583, 588, 589, 597, 598, 607, 609, 610, 626, 629, 632, 633, 634, 635, 644, 645, 650, 651, 652, 653, 654, 655, 656, 657, 662, 663, 672, 674, 675, 676, 680, 681, 682, 683, 684, 685, 686, 693, 695, 696, 697, 698, 699, 700, 701, 702, 707, 710, 711, 713, 714, 718, 720, 721, 722, 723, 724, 725, 726, 730, 731, 732, 733, 735, 741, 742, 745, 746, 747, 757, 758, 759, 761, 762, 763, 766, 772, 773, 774, 775, 776, 778, 781, 782, 784, 785, 787, 788, 792, 794, 796, 797, 798, 800, 802, 803, 804, 805, 806, 810, 812, 815, 820, 823, 828, 830, 841, 850, 857, 875], "scores_window": 8, "train_idx": 8, "test_idx": 8, "y_train": [8, 136, 193], "y_test": [8, 136, 193], "x_train": [8, 193], "x_test": [8, 193], "slide": [8, 12, 21, 133, 155, 239, 272, 722, 723, 725, 726], "score_this_window": 8, "n": [8, 10, 43, 45, 69, 81, 91, 97, 107, 112, 136, 140, 143, 148, 150, 156, 159, 169, 171, 174, 187, 200, 203, 204, 205, 206, 213, 219, 221, 224, 226, 228, 229, 239, 242, 254, 256, 257, 260, 261, 262, 263, 264, 265, 268, 269, 270, 273, 274, 276, 277, 278, 280, 310, 319, 338, 348, 349, 350, 353, 354, 355, 358, 377, 399, 400, 422, 428, 431, 442, 444, 465, 475, 476, 495, 537, 554, 555, 559, 562, 571, 572, 574, 583, 631, 655, 668, 669, 670, 671, 675, 680, 695, 698, 707, 708, 711, 721, 722, 723, 725, 726, 742, 745, 746, 761, 776, 783, 800, 805, 806, 812, 830, 842, 851, 854, 857, 861, 875], "w_time": [8, 9], "axvlin": [8, 10, 11, 13, 19, 45, 110, 125, 143, 159, 194, 208], "linestyl": [8, 9, 11, 21, 95, 109, 110, 111, 125, 149, 194, 200, 204, 209, 229, 711, 721, 766, 790, 875], "color": [8, 9, 10, 11, 12, 13, 19, 21, 22, 38, 39, 45, 47, 48, 49, 50, 54, 55, 59, 69, 79, 80, 94, 95, 99, 102, 110, 111, 112, 113, 114, 118, 125, 130, 131, 133, 134, 135, 136, 140, 141, 143, 148, 149, 150, 155, 159, 165, 167, 169, 171, 174, 175, 176, 177, 180, 182, 184, 193, 194, 197, 198, 200, 201, 204, 208, 209, 214, 215, 216, 221, 229, 234, 237, 238, 239, 258, 259, 260, 262, 263, 264, 265, 268, 269, 270, 271, 273, 275, 276, 277, 278, 366, 407, 414, 459, 460, 465, 466, 475, 476, 554, 555, 616, 617, 695, 697, 699, 711, 721, 742, 751, 755, 757, 758, 759, 761, 764, 766, 769, 770, 771, 772, 773, 774, 775, 776, 778, 780, 781, 783, 784, 785, 790, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 808, 824, 825, 830, 875], "axhlin": [8, 9, 10, 11, 13, 19, 21, 79, 80, 110, 111, 143, 159, 194, 239, 555, 788], "xlabel": [8, 9, 15, 16, 19, 22, 28, 29, 37, 39, 41, 53, 58, 67, 71, 80, 88, 91, 95, 105, 106, 108, 112, 125, 136, 150, 159, 176, 179, 180, 193, 200, 209, 210, 221, 224, 226, 234, 238, 239, 711, 721, 875], "ylabel": [8, 9, 15, 16, 19, 22, 28, 29, 37, 39, 41, 53, 58, 67, 68, 71, 80, 88, 91, 95, 105, 106, 108, 125, 136, 150, 159, 176, 179, 180, 193, 200, 205, 209, 210, 221, 224, 226, 234, 238, 239, 711, 721], "legend": [8, 9, 10, 11, 12, 16, 19, 21, 22, 28, 37, 38, 39, 41, 45, 67, 69, 94, 95, 108, 109, 125, 136, 143, 144, 149, 161, 165, 171, 179, 193, 194, 209, 213, 214, 234, 238, 239, 262, 263, 264, 265, 711, 721, 742, 755, 765, 766, 772, 775, 780, 875], "loc": [8, 10, 16, 37, 39, 69, 110, 121, 125, 135, 139, 142, 143, 144, 168, 175, 179, 182, 209, 238, 267, 328, 594, 711, 721, 765, 812, 857, 860], "zoltan": [8, 194, 242, 407], "kole": [8, 194, 242, 407], "quantit": [8, 161, 194, 242, 555, 854, 856], "abnorm": [8, 194, 242], "clinic": [8, 69, 70, 77, 110, 150, 194, 198, 202, 203, 242, 522, 554, 555, 563, 564, 569, 583, 598, 724, 727, 851, 857], "electroencephalographi": [8, 58, 70, 77, 110, 150, 194, 198, 202, 242, 273, 554, 564, 598, 857], "neurophysiologi": [8, 69, 70, 77, 110, 150, 194, 198, 202, 203, 242, 554, 555, 563, 564, 569, 598, 724, 727, 857], "79": [8, 13, 15, 16, 19, 35, 41, 45, 47, 79, 101, 106, 110, 112, 117, 156, 157, 168, 175, 180, 183, 193, 194, 207, 224, 225, 228, 229, 242, 399, 427], "440": [8, 79, 194, 224, 229, 242], "447": [8, 41, 183, 186, 194, 224, 242], "1991": [8, 194, 242, 407], "1016": [8, 12, 13, 18, 19, 21, 35, 42, 44, 59, 69, 70, 73, 74, 77, 92, 99, 110, 111, 117, 119, 124, 143, 150, 154, 161, 179, 194, 198, 200, 202, 203, 210, 224, 225, 229, 242, 264, 265, 268, 273, 274, 295, 352, 358, 385, 411, 413, 414, 415, 425, 470, 473, 522, 523, 533, 537, 554, 555, 563, 564, 569, 587, 590, 598, 652, 655, 657, 682, 683, 685, 686, 688, 689, 709, 711, 721, 724, 725, 727, 759, 849, 851, 854, 857], "0013": [8, 70, 77, 110, 150, 194, 198, 202, 242, 554, 564, 598, 857], "4694": [8, 70, 77, 110, 150, 194, 198, 202, 242, 554, 564, 598, 857], "91": [8, 13, 19, 26, 35, 41, 45, 47, 50, 70, 77, 78, 106, 107, 110, 112, 115, 150, 155, 157, 168, 175, 180, 181, 193, 194, 198, 205, 206, 207, 208, 209, 224, 225, 228, 229, 242, 333], "90163": [8, 194, 242], "gerwin": [8, 203, 242, 377, 851], "schalk": [8, 203, 242, 377, 851], "denni": [8, 203, 242, 377, 851], "mcfarland": [8, 203, 242, 377, 851], "thilo": [8, 203, 242, 377, 851], "hinterberg": [8, 203, 242, 377, 851], "niel": [8, 203, 242, 377, 851], "birbaum": [8, 203, 242, 377, 851], "jonathan": [8, 99, 203, 225, 242, 377, 390, 851, 875], "wolpaw": [8, 203, 242, 377, 851], "bci2000": [8, 203, 242, 377, 851], "bci": [8, 15, 86, 110, 158, 194, 203, 242, 377, 556, 851, 863, 875], "ieee": [8, 15, 40, 46, 51, 70, 81, 82, 86, 115, 136, 143, 161, 179, 194, 203, 237, 242, 262, 263, 264, 265, 295, 296, 298, 352, 377, 400, 407, 431, 472, 473, 475, 476, 555, 556, 564, 591, 697, 699, 714, 724, 727, 850, 851, 854, 857], "transact": [8, 15, 51, 70, 82, 86, 115, 136, 161, 179, 194, 203, 237, 242, 262, 263, 264, 265, 295, 296, 352, 377, 400, 407, 472, 475, 476, 522, 555, 556, 564, 591, 697, 699, 714, 850, 851, 854, 857], "biomed": [8, 15, 70, 82, 86, 115, 136, 179, 188, 194, 203, 221, 242, 253, 295, 296, 377, 400, 407, 555, 556, 564, 591, 850, 851, 857, 862], "engin": [8, 15, 70, 81, 82, 86, 115, 179, 194, 203, 204, 205, 221, 242, 295, 296, 377, 400, 407, 522, 555, 556, 564, 591, 834, 840, 850, 851, 857], "1034": [8, 203, 242, 377, 648, 851], "1043": [8, 168, 203, 242, 377, 851], "2004": [8, 69, 203, 242, 352, 377, 563, 655, 851, 857], "1109": [8, 15, 40, 46, 51, 70, 81, 82, 86, 115, 136, 143, 161, 179, 194, 203, 237, 242, 262, 263, 264, 265, 295, 296, 298, 352, 377, 400, 407, 431, 472, 473, 475, 476, 555, 556, 564, 591, 697, 699, 714, 850, 851, 854, 857], "tbme": [8, 15, 70, 82, 86, 115, 194, 203, 242, 377, 407, 555, 556, 564, 591, 850, 851], "827072": [8, 203, 242, 377, 851], "ari": [8, 136, 203, 242, 377, 399, 400, 841, 851, 875], "l": [8, 19, 44, 49, 97, 124, 125, 133, 136, 143, 159, 171, 187, 193, 203, 206, 208, 210, 229, 232, 238, 239, 242, 253, 254, 274, 358, 377, 399, 400, 413, 522, 555, 563, 655, 724, 727, 760, 766, 787, 840, 849, 851, 857, 862, 875], "goldberg": [8, 136, 203, 242, 377, 399, 400, 851], "lui": [8, 136, 203, 242, 377, 399, 400, 851], "amar": [8, 136, 203, 242, 377, 399, 400, 851], "leon": [8, 136, 203, 242, 377, 399, 400, 851], "glass": [8, 31, 35, 40, 44, 59, 60, 136, 180, 203, 242, 270, 276, 277, 278, 377, 399, 400, 801, 805, 806, 851], "jeffrei": [8, 136, 203, 242, 377, 399, 400, 522, 851], "hausdorff": [8, 136, 203, 242, 377, 399, 400, 851], "plamen": [8, 136, 203, 242, 377, 399, 400, 851], "ivanov": [8, 136, 203, 242, 377, 399, 400, 851], "roger": [8, 10, 136, 203, 242, 377, 399, 400, 851], "joseph": [8, 136, 203, 242, 377, 399, 400, 851], "mietu": [8, 136, 203, 242, 377, 399, 400, 851], "georg": [8, 136, 203, 210, 242, 377, 399, 400, 851, 875], "moodi": [8, 136, 203, 242, 377, 399, 400, 851], "chung": [8, 136, 203, 242, 377, 399, 400, 851], "kang": [8, 136, 203, 242, 377, 399, 400, 851], "peng": [8, 136, 203, 242, 377, 399, 400, 851], "h": [8, 94, 99, 110, 125, 133, 136, 200, 202, 203, 215, 242, 254, 256, 262, 263, 319, 377, 399, 400, 443, 446, 554, 598, 655, 677, 693, 708, 772, 783, 849, 850, 851, 857, 875], "eugen": [8, 136, 203, 242, 377, 399, 400, 851], "stanlei": [8, 136, 203, 242, 377, 399, 400, 851], "physiobank": [8, 136, 203, 242, 377, 399, 400, 851], "physiotoolkit": [8, 136, 203, 242, 377, 399, 400, 851], "research": [8, 69, 136, 140, 143, 150, 154, 167, 197, 203, 221, 239, 242, 253, 377, 399, 400, 523, 587, 677, 842, 849, 851, 853, 862], "resourc": [8, 121, 136, 143, 201, 203, 242, 377, 399, 400, 833, 851, 858, 863], "complex": [8, 32, 37, 112, 133, 134, 136, 203, 224, 242, 262, 263, 264, 265, 288, 377, 399, 400, 420, 475, 476, 526, 647, 698, 713, 722, 723, 725, 830, 834, 851, 860, 875], "circul": [8, 136, 203, 242, 377, 399, 400, 851], "2000": [8, 10, 136, 199, 200, 202, 203, 205, 213, 242, 262, 263, 264, 265, 377, 399, 400, 407, 436, 475, 476, 477, 522, 554, 674, 850, 851, 857], "1161": [8, 136, 203, 242, 377, 399, 400, 851], "cir": [8, 136, 203, 242, 377, 399, 400, 851], "101": [8, 69, 112, 136, 157, 168, 189, 203, 205, 207, 224, 242, 377, 399, 400, 415, 851, 860], "e215": [8, 136, 203, 242, 377, 399, 400, 851], "704": [8, 20, 143], "decoding_csp_eeg": [8, 20], "decomposit": [9, 11, 14, 17, 20, 27, 28, 29, 30, 32, 38, 39, 44, 47, 52, 57, 60, 73, 75, 101, 102, 105, 106, 108, 110, 111, 122, 165, 171, 180, 194, 197, 203, 204, 220, 224, 226, 227, 229, 232, 234, 238, 239, 242, 262, 264, 265, 267, 269, 270, 273, 276, 277, 278, 407, 414, 415, 420, 421, 441, 488, 516, 536, 555, 569, 581, 701, 704, 714, 720, 722, 723, 725, 726, 850, 857, 860, 875], "iter": [9, 19, 27, 35, 36, 43, 44, 56, 59, 81, 88, 91, 92, 93, 102, 110, 132, 133, 136, 156, 168, 171, 178, 179, 193, 203, 215, 221, 228, 232, 233, 234, 242, 256, 257, 259, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 274, 286, 289, 290, 293, 300, 345, 352, 358, 363, 410, 417, 424, 448, 470, 471, 472, 473, 474, 475, 476, 507, 521, 522, 524, 526, 529, 555, 558, 565, 569, 581, 615, 645, 660, 680, 681, 682, 683, 685, 686, 695, 697, 698, 699, 702, 713, 730, 732, 742, 755, 801, 857, 875], "roll": [9, 107, 122, 742, 810], "laura": [9, 194, 242, 875], "gwilliam": [9, 194, 242, 875], "nyu": [9, 37, 99, 118, 132, 170, 224, 875], "jean": [9, 10, 11, 12, 13, 14, 16, 18, 70, 77, 184, 194, 198, 203, 242, 555, 564, 655, 850, 857, 875], "remi": [9, 10, 11, 12, 13, 14, 16, 18, 875], "king": [9, 10, 11, 12, 13, 14, 16, 18, 194, 242, 875], "jeanremi": [9, 10, 11, 12, 13, 14, 16, 18], "alex": [9, 32, 38, 69, 70, 81, 112, 113, 114, 118, 133, 134, 135, 184, 228, 229, 862, 875], "barach": [9, 12, 15, 86, 194, 242, 407, 875], "create_info": [9, 14, 15, 19, 63, 65, 69, 112, 123, 158, 187, 189, 219, 263, 265, 267, 407, 414, 476, 614, 865, 875], "time_frequ": [9, 21, 32, 33, 34, 90, 101, 109, 110, 112, 165, 200, 221, 226, 227, 228, 229, 237, 238, 412, 415, 420, 464, 865, 873, 875], "averagetfr": [9, 110, 112, 261, 264, 265, 315, 432, 464, 698, 717, 725, 726, 727, 728, 802, 865, 875], "stratifiedkfold": [9, 10, 15, 16, 424, 875], "make_pipelin": [9, 10, 11, 12, 13, 15, 18, 136, 194, 422], "labelencod": 9, "motor": [9, 17, 20, 27, 32, 74, 81, 107, 110, 143, 180, 194, 209, 262, 267, 310, 326, 361, 377, 407, 414, 436, 490, 552, 875], "imageri": [9, 17, 20, 27, 110, 194, 262, 267, 310, 326, 361, 377, 407, 436, 490, 552, 875], "n_split": [9, 10, 12, 15, 16, 19, 424], "speed": [9, 10, 11, 19, 32, 33, 41, 42, 44, 50, 73, 80, 81, 82, 92, 101, 107, 111, 133, 134, 140, 144, 150, 157, 160, 161, 164, 171, 178, 179, 182, 193, 194, 197, 203, 205, 207, 210, 225, 226, 232, 234, 262, 263, 269, 270, 273, 274, 276, 277, 278, 412, 413, 419, 463, 475, 476, 528, 529, 555, 638, 713, 742, 772, 774, 795, 800, 805, 832, 834, 854, 858, 863, 875], "shuffl": [9, 10, 12, 15, 229, 875], "n_cycl": [9, 32, 105, 108, 110, 112, 165, 200, 226, 227, 228, 229, 238, 420, 538, 539, 701, 704, 709, 711, 721, 722, 723, 725, 726], "mani": [9, 44, 69, 73, 110, 118, 119, 125, 139, 141, 145, 148, 149, 150, 151, 154, 157, 159, 160, 161, 165, 166, 170, 171, 176, 189, 193, 197, 198, 199, 200, 201, 203, 204, 205, 219, 221, 224, 237, 239, 253, 254, 255, 262, 263, 267, 272, 274, 277, 278, 295, 346, 352, 431, 436, 449, 466, 555, 644, 680, 690, 695, 696, 742, 758, 768, 785, 787, 788, 830, 832, 834, 837, 838, 850, 852, 854, 857, 859, 861, 863, 875], "cycl": [9, 105, 112, 183, 200, 238, 239, 262, 263, 339, 420, 475, 476, 538, 539, 555, 701, 704, 709, 711, 721, 722, 723, 725, 726, 766, 772, 775, 787, 795, 834, 875], "min_freq": 9, "max_freq": 9, "n_freq": [9, 112, 193, 228, 238, 412, 420, 675, 685, 686, 695, 696, 697, 698, 711, 713, 714, 720, 721, 722, 723, 725, 726], "bin": [9, 22, 27, 69, 96, 100, 118, 121, 141, 143, 170, 200, 208, 210, 226, 232, 237, 239, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 288, 295, 415, 475, 476, 482, 496, 574, 606, 675, 679, 680, 682, 683, 685, 686, 694, 696, 697, 699, 766, 774, 778, 833, 834, 837, 838, 839, 840, 845, 857, 875], "tupl": [9, 113, 149, 169, 170, 171, 193, 203, 213, 215, 228, 229, 256, 257, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 285, 286, 300, 311, 320, 321, 358, 382, 407, 414, 422, 440, 441, 444, 447, 474, 475, 476, 483, 485, 486, 487, 490, 491, 492, 497, 501, 510, 512, 521, 538, 539, 554, 555, 558, 563, 569, 571, 572, 582, 607, 613, 614, 646, 647, 648, 660, 672, 680, 682, 683, 685, 686, 687, 695, 697, 698, 699, 707, 714, 730, 732, 742, 743, 751, 756, 759, 761, 762, 764, 766, 770, 771, 773, 774, 776, 778, 780, 781, 783, 785, 788, 790, 794, 796, 797, 800, 801, 802, 804, 805, 806, 810, 875], "linspac": [9, 19, 32, 40, 42, 67, 69, 111, 115, 135, 140, 149, 171, 176, 193, 197, 204, 205, 219, 220, 239], "freq_rang": [9, 239], "infer": [9, 10, 43, 44, 111, 155, 164, 169, 200, 214, 215, 225, 229, 230, 231, 242, 262, 263, 264, 265, 268, 269, 270, 273, 276, 277, 278, 295, 296, 316, 320, 327, 352, 356, 357, 361, 366, 367, 368, 407, 414, 437, 438, 440, 450, 451, 467, 470, 472, 473, 475, 476, 483, 485, 490, 533, 555, 626, 673, 675, 676, 677, 678, 679, 680, 682, 683, 684, 685, 686, 688, 695, 697, 699, 755, 780, 781, 782, 789, 795, 804, 828, 830, 841, 857, 875], "gap": [9, 125, 242, 472, 473, 475, 476, 795, 857, 875], "window_spac": 9, "centered_w_tim": 9, "n_window": [9, 574], "len": [9, 10, 15, 16, 18, 19, 28, 32, 39, 41, 42, 43, 45, 47, 52, 63, 67, 69, 71, 73, 88, 91, 98, 112, 115, 136, 139, 142, 143, 155, 158, 167, 175, 177, 182, 184, 190, 193, 197, 198, 199, 200, 201, 203, 205, 206, 208, 209, 210, 214, 220, 221, 224, 225, 226, 228, 229, 239, 256, 257, 259, 260, 262, 263, 264, 265, 267, 271, 273, 274, 275, 286, 300, 351, 358, 409, 417, 442, 445, 475, 476, 521, 644, 675, 697, 698, 711, 721, 730, 742, 747, 773, 795, 803, 804, 875], "instanti": [9, 143, 171, 194, 203, 257, 259, 260, 261, 262, 263, 267, 271, 272, 274, 310, 476, 697, 699, 744, 755, 875], "encod": [9, 19, 125, 142, 143, 149, 165, 167, 171, 187, 193, 194, 207, 208, 209, 242, 248, 267, 344, 413, 483, 490, 497, 498, 499, 607, 828, 830, 857, 863, 875], "le": 9, "59999": [9, 183], "374": [9, 79, 168, 207, 213, 224, 229], "loop": [9, 32, 42, 60, 107, 118, 134, 136, 148, 176, 180, 198, 229, 234, 239, 242, 400, 428, 566, 574, 583, 742, 851, 857, 875], "init": [9, 372, 834, 839], "freq_scor": 9, "fmin": [9, 32, 101, 102, 106, 111, 112, 114, 131, 136, 237, 238, 239, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 412, 475, 476, 528, 529, 695, 696, 697, 698, 699, 700, 702, 703, 705, 713, 714, 724, 727, 742, 761, 796, 800, 802, 805, 806, 875], "fmax": [9, 32, 73, 101, 102, 106, 111, 112, 114, 131, 136, 165, 197, 201, 210, 237, 238, 239, 262, 263, 264, 265, 412, 475, 476, 528, 529, 695, 696, 697, 698, 699, 700, 702, 703, 705, 713, 714, 724, 727, 742, 757, 796, 802, 875], "enumer": [9, 10, 15, 19, 28, 39, 40, 47, 70, 92, 94, 102, 105, 110, 112, 133, 134, 135, 145, 148, 149, 150, 158, 193, 200, 203, 205, 209, 220, 229, 234, 239], "being": [9, 45, 112, 114, 125, 135, 159, 165, 170, 171, 198, 200, 205, 206, 208, 213, 221, 224, 226, 229, 259, 262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 360, 363, 441, 451, 465, 475, 476, 510, 555, 574, 576, 618, 695, 697, 699, 742, 760, 773, 776, 778, 779, 796, 801, 806, 834, 856, 857, 875], "w_size": 9, "isol": [9, 45, 112, 199, 203, 205, 875], "raw_filt": [9, 112, 140, 201, 203], "pad": [9, 15, 112, 125, 224, 229, 239, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 319, 442, 445, 446, 447, 475, 476, 714, 875], "drop_bad": [9, 16, 141, 150, 190, 199, 262, 263, 312, 464, 555, 697, 698, 857, 875], "fold": [9, 10, 12, 15, 16, 26, 136, 268, 273, 424, 658, 661], "roc_auc": [9, 11, 13, 194, 410, 417], "axi": [9, 10, 12, 14, 15, 16, 19, 21, 22, 28, 31, 35, 45, 58, 60, 67, 69, 71, 82, 88, 94, 98, 102, 105, 107, 108, 110, 111, 112, 113, 114, 115, 117, 125, 131, 133, 136, 139, 140, 141, 143, 149, 150, 155, 159, 165, 171, 180, 182, 184, 190, 193, 194, 198, 200, 210, 213, 216, 219, 224, 227, 229, 232, 234, 238, 239, 254, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 273, 276, 277, 278, 285, 312, 319, 363, 407, 414, 420, 427, 447, 466, 475, 476, 486, 554, 555, 569, 648, 672, 674, 682, 683, 685, 686, 689, 695, 697, 699, 724, 727, 742, 755, 758, 759, 766, 773, 774, 775, 776, 777, 778, 779, 781, 782, 783, 785, 787, 789, 790, 794, 795, 796, 797, 802, 803, 804, 840, 857, 875], "701": [9, 134, 193], "205": [9, 168, 183, 228], "281": [9, 19, 168, 207, 224, 229], "629": [9, 229], "17": [9, 10, 11, 12, 13, 19, 26, 28, 32, 34, 35, 41, 43, 45, 47, 50, 56, 58, 60, 61, 70, 79, 82, 88, 101, 106, 107, 112, 113, 121, 144, 150, 155, 156, 157, 159, 168, 170, 171, 175, 176, 179, 180, 181, 182, 183, 184, 187, 190, 193, 194, 206, 207, 208, 212, 219, 224, 225, 226, 228, 229, 232, 233, 234, 237, 241, 242, 262, 263, 264, 265, 269, 272, 273, 274, 275, 277, 278, 286, 295, 352, 354, 357, 358, 368, 407, 414, 416, 474, 475, 476, 522, 528, 529, 583, 648, 660, 683, 695, 711, 721, 722, 725, 759, 800, 806, 851, 857], "165": [9, 145, 168, 200, 203, 209, 224, 229, 242], "031": [9, 126, 139, 148, 168, 183, 221], "581": [9, 13, 207, 229], "139": [9, 168, 207, 221, 229, 275, 875], "549": [9, 13, 206, 229, 242], "22": [9, 11, 13, 14, 15, 16, 19, 21, 28, 32, 34, 35, 39, 40, 44, 45, 47, 56, 59, 69, 79, 82, 83, 86, 88, 101, 106, 107, 108, 110, 112, 114, 128, 131, 132, 149, 154, 168, 170, 175, 179, 182, 187, 190, 193, 194, 196, 203, 206, 207, 221, 224, 225, 226, 228, 229, 232, 233, 234, 237, 242, 262, 263, 264, 265, 274, 275, 310, 333, 337, 338, 358, 400, 446, 475, 476, 495, 510, 515, 555, 558, 597, 614, 631, 640, 690, 714, 758, 786, 796, 833, 857], "121": [9, 139, 144, 165, 168, 169, 224, 229, 262, 263, 430], "756": [9, 207], "523": [9, 207, 229], "bar": [9, 133, 142, 149, 170, 182, 215, 216, 239, 259, 262, 263, 264, 265, 271, 272, 407, 410, 414, 417, 475, 476, 554, 555, 695, 697, 699, 742, 766, 771, 772, 773, 774, 778, 781, 785, 789, 794, 795, 797, 802, 811, 857, 875], "width": [9, 112, 125, 133, 159, 171, 197, 200, 201, 216, 224, 239, 260, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 311, 319, 324, 409, 418, 443, 445, 446, 466, 475, 476, 587, 695, 709, 711, 721, 724, 725, 727, 742, 751, 770, 771, 798, 800, 801, 805, 830, 854, 857, 875], "edgecolor": [9, 10, 238], "black": [9, 21, 45, 47, 48, 50, 110, 141, 150, 159, 189, 205, 209, 259, 260, 262, 263, 264, 265, 269, 270, 271, 273, 276, 277, 278, 407, 414, 475, 476, 554, 555, 569, 695, 697, 699, 742, 755, 758, 759, 770, 774, 776, 780, 781, 785, 793, 794, 796, 797, 800, 802, 803, 804, 805, 875], "xtick": [9, 15, 19, 88, 125, 193, 200, 210, 224], "tf_score": 9, "center": [9, 37, 45, 67, 69, 78, 88, 93, 110, 118, 119, 133, 150, 155, 157, 159, 169, 184, 197, 199, 200, 201, 205, 224, 239, 253, 254, 264, 265, 268, 273, 303, 416, 486, 508, 519, 555, 564, 644, 647, 652, 658, 661, 695, 732, 742, 746, 782, 793, 801, 851, 857, 862, 875], "w_tmin": 9, "w_tmax": 9, "av_tfr": 9, "newaxi": [9, 15, 28, 98, 115, 229, 232, 233, 234, 742], "white": [9, 24, 26, 41, 52, 107, 110, 114, 119, 124, 125, 131, 133, 134, 141, 155, 157, 158, 159, 175, 177, 189, 208, 220, 224, 229, 254, 260, 262, 263, 264, 265, 268, 269, 270, 273, 275, 276, 277, 278, 366, 465, 475, 476, 508, 541, 542, 600, 618, 643, 695, 697, 699, 742, 758, 760, 770, 780, 782, 800, 803, 805, 830, 850, 875], "vmin": [9, 13, 19, 86, 105, 110, 112, 114, 115, 135, 140, 159, 175, 193, 194, 208, 209, 224, 226, 227, 238, 259, 262, 263, 264, 265, 271, 407, 414, 475, 476, 554, 555, 695, 697, 699, 742, 759, 773, 774, 781, 785, 794, 797, 802, 803, 804, 875], "red": [9, 54, 59, 69, 78, 79, 81, 98, 110, 130, 131, 141, 143, 149, 155, 159, 169, 177, 180, 189, 193, 197, 198, 201, 205, 208, 209, 216, 229, 232, 238, 239, 258, 259, 260, 262, 263, 264, 265, 268, 271, 407, 414, 475, 476, 554, 555, 569, 617, 695, 697, 699, 742, 757, 759, 766, 767, 770, 773, 774, 776, 781, 785, 794, 797, 802, 804, 830, 834, 875], "249": [9, 20, 42, 46, 150, 168, 194, 207, 229, 242], "decoding_csp_timefreq": [9, 20], "supervis": [10, 18, 86, 136, 407, 424], "class": [10, 16, 19, 60, 68, 86, 92, 93, 112, 113, 136, 139, 141, 148, 150, 156, 164, 165, 167, 170, 171, 174, 193, 199, 200, 203, 213, 216, 219, 229, 240, 241, 251, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 286, 300, 310, 311, 363, 391, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 448, 474, 475, 476, 506, 521, 554, 555, 556, 645, 675, 695, 696, 697, 698, 699, 713, 714, 730, 731, 732, 737, 738, 739, 742, 743, 744, 753, 815, 830, 834, 842, 843, 850, 852, 857, 858, 860, 865, 866, 875], "rel": [10, 24, 32, 33, 34, 42, 61, 74, 84, 107, 110, 111, 125, 133, 136, 139, 141, 143, 155, 165, 167, 169, 188, 197, 200, 201, 205, 208, 209, 210, 215, 238, 239, 254, 255, 257, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 307, 356, 363, 413, 428, 431, 443, 475, 476, 519, 555, 581, 597, 633, 635, 651, 688, 695, 698, 700, 701, 702, 714, 742, 755, 760, 775, 780, 789, 793, 795, 803, 815, 830, 834, 850, 857, 860, 875], "character": [10, 13, 194, 242, 555, 657, 788, 857], "confus": [10, 15, 136, 143, 655, 834], "serv": [10, 167, 214, 229, 259, 262, 263, 264, 265, 271, 279, 407, 414, 475, 476, 554, 555, 569, 695, 697, 698, 699, 740, 758, 759, 774, 781, 785, 794, 797, 802, 804, 834, 856, 857], "proxi": [10, 203, 207], "mental": [10, 13, 194, 242], "rsa": [10, 841, 851, 875], "imag": [10, 16, 27, 30, 32, 33, 35, 40, 44, 46, 55, 59, 69, 86, 110, 118, 120, 122, 125, 126, 128, 133, 135, 142, 145, 148, 154, 155, 158, 159, 165, 169, 175, 179, 181, 189, 190, 197, 200, 203, 204, 205, 206, 221, 224, 225, 227, 228, 229, 238, 239, 242, 253, 259, 262, 263, 264, 265, 267, 271, 272, 274, 275, 277, 278, 287, 288, 289, 290, 295, 296, 301, 305, 310, 311, 319, 336, 351, 358, 364, 385, 407, 414, 467, 470, 472, 473, 475, 476, 484, 495, 522, 554, 555, 569, 610, 644, 650, 651, 652, 653, 654, 655, 656, 657, 695, 697, 699, 711, 721, 731, 732, 742, 743, 745, 758, 759, 760, 773, 774, 778, 780, 781, 785, 787, 794, 797, 802, 803, 804, 806, 810, 812, 815, 830, 835, 840, 841, 851, 860, 862, 875], "92": [10, 19, 34, 35, 44, 79, 101, 110, 112, 142, 161, 168, 179, 193, 194, 199, 207, 224, 225, 226, 228, 229, 234, 519, 857], "human": [10, 19, 33, 58, 92, 111, 124, 143, 150, 154, 177, 179, 193, 221, 242, 262, 263, 264, 265, 273, 288, 295, 371, 384, 409, 413, 418, 443, 445, 446, 475, 476, 560, 684, 711, 721, 722, 725, 830, 831, 841, 850, 851, 863], "anim": [10, 135, 264, 265, 851, 875], "inanim": [10, 851], "bodi": [10, 205, 206, 732, 851], "part": [10, 117, 125, 133, 139, 141, 143, 150, 154, 157, 159, 160, 161, 170, 181, 197, 200, 201, 205, 210, 213, 221, 242, 253, 262, 264, 265, 267, 268, 277, 278, 295, 296, 352, 356, 357, 366, 367, 368, 407, 414, 436, 450, 451, 470, 472, 473, 475, 477, 495, 528, 529, 533, 623, 672, 682, 683, 685, 686, 695, 698, 742, 759, 778, 782, 830, 834, 835, 856, 857, 858, 860, 863, 875], "6gb": 10, "build": [10, 12, 21, 32, 45, 154, 171, 174, 190, 197, 198, 200, 224, 232, 233, 234, 832, 838, 840, 856, 863, 875], "jaakko": [10, 190, 875], "leppakanga": [10, 190, 875], "jaeilepp": [10, 190], "student": [10, 190, 834], "jyu": [10, 190], "panda": [10, 14, 99, 110, 139, 142, 146, 147, 148, 150, 164, 170, 189, 190, 208, 213, 225, 237, 256, 257, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 431, 475, 476, 610, 681, 694, 695, 697, 698, 699, 833, 834, 857, 875], "read_csv": [10, 189, 190], "standardscal": [10, 11, 13, 18, 194, 416], "linear_model": [10, 11, 12, 13, 15, 18, 194, 863], "logisticregress": [10, 11, 13, 15, 194, 411, 422], "metric": [10, 15, 27, 36, 56, 88, 115, 136, 194, 210, 259, 264, 266, 267, 273, 362, 410, 413, 417, 521, 533, 534, 537, 553, 555, 604, 613, 615, 742, 788, 856, 865, 870, 875], "roc_auc_scor": [10, 410, 417, 865], "manifold": [10, 115, 117, 759], "md": [10, 242, 648], "visual_92_categori": [10, 851, 865, 875], "stimulu": [10, 13, 33, 34, 49, 68, 70, 72, 79, 80, 88, 91, 105, 118, 139, 141, 142, 143, 145, 148, 161, 165, 166, 167, 168, 179, 182, 187, 190, 193, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 213, 214, 215, 216, 221, 228, 234, 239, 254, 256, 262, 263, 264, 265, 267, 312, 344, 352, 413, 431, 436, 475, 476, 552, 558, 660, 695, 697, 698, 699, 830, 851, 857, 875], "fname": [10, 12, 21, 53, 65, 77, 84, 85, 110, 117, 118, 126, 129, 159, 169, 203, 254, 256, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 272, 273, 274, 275, 276, 277, 278, 286, 299, 310, 311, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 349, 350, 437, 438, 439, 440, 475, 476, 478, 479, 480, 481, 484, 489, 493, 494, 495, 498, 502, 503, 504, 505, 506, 507, 536, 540, 544, 545, 554, 555, 593, 594, 595, 596, 599, 601, 602, 603, 604, 605, 606, 608, 611, 612, 613, 614, 615, 616, 619, 621, 622, 623, 624, 625, 626, 628, 630, 641, 695, 696, 697, 698, 699, 715, 716, 717, 728, 730, 736, 816, 817, 818, 819, 821, 822, 823, 826, 827, 828, 829, 861, 875], "visual_stimuli": 10, "csv": [10, 121, 190, 215, 256, 328, 334, 498, 601, 875], "cond": [10, 40, 46, 59, 61, 97, 99, 149, 229, 234, 255], "restrict": [10, 28, 29, 102, 124, 141, 150, 157, 160, 165, 177, 201, 202, 205, 206, 213, 220, 224, 227, 228, 239, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 276, 277, 278, 282, 283, 295, 296, 453, 454, 475, 476, 522, 523, 524, 525, 526, 528, 529, 538, 539, 547, 548, 551, 552, 553, 658, 695, 697, 698, 699, 706, 712, 861, 875], "max_trigg": 10, "row": [10, 72, 99, 110, 125, 140, 141, 142, 143, 144, 149, 165, 168, 171, 174, 190, 194, 209, 213, 224, 225, 257, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 297, 356, 366, 407, 413, 414, 431, 475, 476, 498, 534, 537, 555, 556, 574, 680, 681, 695, 696, 697, 698, 699, 742, 768, 773, 781, 785, 788, 857, 860, 875], "cond_tag": 10, "els": [10, 15, 28, 31, 40, 47, 92, 94, 112, 150, 159, 174, 190, 200, 205, 213, 224, 239, 259, 260, 262, 263, 264, 265, 267, 271, 286, 300, 407, 414, 475, 476, 514, 521, 555, 556, 644, 650, 651, 652, 653, 654, 655, 656, 657, 678, 697, 699, 722, 723, 730, 770, 774, 795, 833, 834, 858, 875], "str": [10, 30, 39, 41, 99, 126, 142, 144, 149, 170, 182, 193, 225, 239, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 517, 518, 519, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 586, 587, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 663, 665, 666, 667, 668, 669, 670, 671, 672, 674, 676, 678, 681, 682, 683, 684, 685, 686, 687, 688, 690, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 712, 713, 714, 715, 717, 718, 722, 723, 725, 726, 727, 728, 730, 731, 732, 734, 736, 737, 738, 739, 741, 742, 745, 747, 750, 752, 754, 757, 758, 759, 760, 761, 762, 763, 766, 767, 768, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 809, 811, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 834, 875], "bodypart": 10, "natur": [10, 19, 124, 171, 193, 228, 242, 384, 413, 447, 587, 851, 857, 860, 875], "n_run": 10, "sample_subject_": 10, "_tsss_mc": 10, "on_split_miss": [10, 475, 495, 875], "filenam": [10, 43, 44, 70, 72, 75, 79, 80, 81, 91, 125, 134, 139, 140, 145, 150, 155, 156, 166, 167, 171, 197, 198, 199, 201, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 221, 254, 256, 257, 259, 262, 263, 264, 265, 268, 272, 275, 286, 299, 307, 310, 349, 350, 437, 438, 440, 450, 460, 466, 474, 475, 476, 479, 494, 495, 500, 504, 506, 517, 518, 594, 599, 601, 606, 608, 610, 612, 613, 616, 617, 618, 619, 622, 624, 626, 630, 634, 641, 644, 660, 696, 715, 736, 742, 750, 795, 816, 817, 818, 820, 823, 824, 825, 828, 840, 875], "min_dur": [10, 210, 448, 557], "002": [10, 13, 32, 33, 119, 126, 139, 140, 141, 144, 148, 165, 168, 187, 193, 194, 199, 200, 202, 205, 213, 216, 221, 242, 448], "specif": [10, 19, 27, 43, 44, 45, 69, 103, 104, 110, 118, 125, 134, 136, 140, 142, 143, 149, 150, 154, 159, 160, 169, 170, 171, 174, 188, 189, 190, 197, 198, 200, 201, 203, 205, 206, 208, 210, 213, 216, 221, 224, 225, 226, 229, 237, 238, 239, 242, 256, 258, 259, 262, 263, 264, 265, 267, 268, 269, 270, 271, 273, 276, 277, 278, 285, 295, 310, 407, 414, 431, 436, 438, 442, 448, 475, 476, 477, 490, 508, 531, 532, 552, 553, 554, 555, 561, 566, 569, 574, 583, 617, 623, 644, 674, 681, 695, 696, 697, 698, 699, 711, 721, 725, 742, 761, 766, 773, 774, 781, 785, 794, 795, 797, 800, 802, 803, 805, 806, 824, 830, 834, 838, 841, 849, 851, 856, 857, 858, 860, 863, 864, 875], "appel": 10, "dissimilar": 10, "rdm": 10, "cichi": [10, 242, 851], "et": [10, 16, 19, 21, 193, 200, 202, 239, 253, 262, 263, 563, 857, 862, 875], "al": [10, 16, 19, 21, 193, 200, 202, 239, 262, 263, 563, 857, 875], "multiclass": [10, 242, 407, 424, 875], "multinomi": 10, "logist": [10, 11, 15, 18, 194], "paper": [10, 16, 200, 204, 242, 295, 470, 522, 555, 655, 849, 857], "pairwis": [10, 47, 69, 115, 242, 563], "binari": [10, 97, 159, 194, 214, 260, 408, 424, 448, 491, 492, 496, 499, 605, 675, 681, 693, 820, 832, 839, 840, 857, 860, 875], "roc": [10, 656], "auc": [10, 194, 656], "final": [10, 16, 19, 42, 68, 69, 81, 82, 110, 111, 112, 125, 133, 136, 139, 140, 143, 145, 149, 150, 155, 159, 161, 165, 170, 178, 180, 181, 189, 193, 198, 199, 203, 204, 205, 208, 209, 224, 226, 228, 229, 232, 234, 239, 262, 263, 264, 265, 316, 327, 413, 450, 475, 476, 645, 812, 834, 850, 854, 856, 875], "sake": [10, 125, 199, 228, 861], "did": [10, 11, 28, 29, 30, 38, 39, 44, 47, 52, 57, 60, 81, 102, 105, 106, 108, 122, 159, 160, 161, 165, 169, 171, 174, 175, 180, 200, 203, 205, 206, 219, 220, 232, 234, 267, 275, 852, 860, 875], "instant": [10, 13, 42, 118, 176, 182, 194, 260, 264, 265, 285, 351, 450, 669, 670, 671, 695, 700, 701, 702, 703, 704, 705, 706, 777, 779, 781], "50m": 10, "300m": 10, "focu": [10, 12, 81, 125, 143, 199, 200, 840, 875], "liblinear": [10, 11, 13, 15, 18, 194], "multi_class": [10, 15], "y_pred": [10, 12, 19, 136, 410, 411, 413, 417, 875], "probabilist": [10, 242, 352, 410, 411, 417, 857, 863], "necessari": [10, 21, 31, 72, 92, 125, 134, 145, 150, 154, 155, 157, 159, 160, 165, 168, 170, 179, 197, 199, 200, 201, 202, 203, 204, 205, 213, 214, 219, 224, 255, 262, 263, 264, 265, 266, 269, 270, 273, 274, 276, 277, 278, 295, 296, 314, 316, 323, 356, 372, 407, 414, 416, 431, 442, 450, 474, 475, 476, 483, 490, 494, 522, 583, 591, 601, 608, 612, 640, 659, 695, 697, 698, 699, 742, 781, 800, 805, 830, 834, 850, 851, 855, 856, 857, 860, 875], "predict_proba": [10, 410, 411, 417], "ii": [10, 15, 19, 39, 91, 97, 105, 117, 134, 158, 182, 184, 189, 193, 210, 224, 234, 242, 269, 270, 273, 276, 277, 278, 318, 410, 417, 484, 555, 644, 681, 759, 875], "train_class": 10, "jj": 10, "im": [10, 13, 15, 22, 69, 113, 135, 194, 745, 804, 812, 875], "matshow": [10, 13], "rdbu_r": [10, 13, 16, 19, 22, 105, 112, 193, 194, 226, 227, 259, 262, 263, 264, 265, 271, 407, 414, 475, 476, 554, 555, 569, 695, 697, 699, 759, 773, 774, 778, 781, 785, 794, 797, 802, 803, 804, 834], "set_ytick": 10, "set_yticklabel": [10, 110], "set_xtick": [10, 239], "set_xticklabel": [10, 239], "colorbar": [10, 13, 15, 22, 69, 70, 105, 110, 112, 113, 114, 118, 125, 135, 141, 145, 149, 175, 181, 194, 205, 209, 216, 224, 225, 226, 228, 229, 259, 262, 263, 264, 265, 269, 270, 271, 273, 276, 277, 278, 407, 414, 475, 476, 554, 555, 569, 695, 696, 697, 699, 742, 756, 759, 761, 766, 767, 768, 773, 774, 778, 779, 781, 785, 794, 797, 800, 802, 803, 804, 805, 806, 875], "tight_layout": [10, 12, 15, 19, 39, 41, 58, 69, 71, 84, 112, 113, 118, 133, 143, 175, 180, 182, 193, 200, 205, 208, 209, 221, 224, 228, 229, 238, 875], "relat": [10, 12, 19, 27, 32, 33, 34, 69, 76, 99, 103, 104, 110, 115, 126, 130, 135, 143, 145, 152, 153, 154, 157, 159, 161, 164, 165, 171, 172, 177, 187, 188, 193, 194, 197, 199, 200, 202, 203, 204, 207, 208, 209, 215, 225, 232, 238, 239, 242, 262, 263, 264, 265, 267, 272, 285, 312, 327, 351, 390, 413, 414, 431, 443, 448, 464, 475, 476, 546, 555, 563, 610, 640, 644, 674, 695, 742, 755, 763, 766, 773, 788, 789, 795, 803, 814, 830, 832, 834, 837, 849, 851, 852, 854, 855, 856, 857, 858, 863, 875], "histor": [10, 149, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 333, 475, 476, 695, 698, 857, 863], "summar": [10, 45, 111, 150, 201, 203, 213, 262, 263, 269, 270, 273, 276, 277, 278, 766, 773, 850, 856, 861, 875], "dimension": [10, 149, 174, 194, 198, 204, 205, 213, 229, 232, 233, 234, 242, 264, 265, 269, 270, 273, 276, 277, 278, 352, 415, 420, 422, 555, 675, 695, 742, 776, 830, 857, 875], "reduct": [10, 17, 20, 27, 112, 190, 201, 209, 210, 242, 262, 263, 264, 265, 267, 366, 370, 406, 415, 421, 475, 552, 555, 556, 583, 591, 610, 723, 726, 875], "multi": [10, 16, 27, 36, 46, 56, 81, 102, 124, 169, 188, 194, 200, 232, 233, 234, 242, 259, 260, 262, 263, 264, 265, 266, 267, 271, 277, 300, 384, 407, 408, 412, 414, 423, 446, 448, 450, 473, 475, 476, 517, 521, 522, 524, 528, 529, 533, 554, 555, 569, 602, 604, 605, 630, 695, 697, 699, 713, 718, 759, 774, 781, 785, 794, 797, 802, 804, 808, 841, 857, 860, 875], "cluster": [10, 27, 96, 100, 110, 164, 225, 230, 231, 235, 236, 239, 242, 262, 264, 265, 267, 273, 274, 275, 316, 351, 358, 430, 448, 475, 521, 522, 536, 552, 610, 623, 625, 630, 667, 675, 676, 678, 682, 683, 685, 686, 687, 698, 725, 742, 801, 872, 875], "togeth": [10, 43, 69, 73, 140, 148, 150, 165, 171, 174, 187, 197, 203, 205, 208, 209, 213, 219, 229, 262, 263, 264, 265, 272, 281, 295, 296, 352, 356, 357, 366, 367, 368, 407, 414, 429, 450, 451, 470, 472, 473, 475, 476, 499, 533, 555, 582, 609, 626, 629, 682, 683, 685, 686, 713, 782, 823, 828, 830, 834, 875], "precomput": [10, 155, 180, 190, 262, 263, 358, 475, 476, 555, 643, 772, 789, 795, 875], "colormap": [10, 24, 58, 107, 110, 111, 114, 125, 133, 135, 141, 159, 205, 239, 259, 262, 263, 264, 265, 269, 270, 271, 273, 276, 277, 278, 407, 414, 475, 476, 554, 555, 569, 687, 695, 696, 697, 699, 742, 757, 759, 761, 766, 768, 773, 774, 778, 781, 784, 785, 794, 797, 800, 802, 803, 804, 805, 806, 825, 834, 875], "rainbow": 10, "sel": [10, 31, 225, 546, 549, 551, 552, 630, 696], "this_nam": 10, "scatter": [10, 45, 113, 224, 760, 875], "facecolor": [10, 47, 133, 150, 224], "scatterpoint": 10, "ncol": [10, 15, 72, 110, 118, 125, 136, 145, 150, 175, 182, 209, 264, 265, 407, 414, 555, 781, 785, 860, 875], "shepard": [10, 242], "multidimension": [10, 224, 242, 410, 417, 424], "tree": [10, 242, 860], "scienc": [10, 13, 33, 40, 99, 111, 179, 194, 221, 225, 239, 242, 253, 288, 295, 390, 472, 522, 555, 851, 857, 862], "210": [10, 13, 35, 79, 85, 122, 149, 168, 194, 224, 228, 229, 242], "4468": [10, 242], "390": [10, 12, 21, 79, 207, 224, 229, 242], "398": [10, 79, 138, 186, 229, 242], "1980": [10, 150, 242], "1126": [10, 19, 207, 242], "aarr": [10, 242], "laakso": [10, 242], "garrison": [10, 242], "cottrel": [10, 242], "content": [10, 27, 103, 157, 165, 168, 171, 200, 201, 204, 209, 216, 238, 242, 262, 263, 266, 272, 383, 384, 439, 506, 750, 766, 773, 830, 834, 839, 875], "assess": [10, 13, 136, 155, 161, 169, 197, 242, 522, 533, 555, 652, 657, 854, 857], "neural": [10, 18, 19, 22, 27, 33, 62, 66, 69, 70, 81, 115, 136, 150, 177, 179, 194, 197, 200, 203, 206, 210, 221, 239, 240, 242, 267, 288, 295, 296, 370, 407, 411, 413, 414, 470, 476, 555, 564, 581, 830, 835, 851, 875], "philosoph": [10, 242, 522, 857], "76": [10, 13, 15, 16, 18, 19, 34, 35, 46, 47, 73, 78, 79, 83, 97, 100, 101, 106, 107, 110, 112, 117, 158, 168, 175, 190, 193, 194, 207, 224, 225, 226, 228, 229, 232, 233, 234, 242, 676, 759], "09515080050002726": [10, 242], "nikolau": [10, 242], "kriegeskort": [10, 242], "mariek": [10, 242], "mur": [10, 242], "peter": [10, 179, 237, 242, 262, 263, 264, 265, 475, 476, 522, 555, 697, 699, 714, 724, 727, 857, 875], "bandettini": [10, 242], "connect": [10, 38, 47, 69, 159, 165, 221, 224, 242, 268, 287, 289, 295, 296, 372, 587, 675, 682, 683, 685, 686, 691, 762, 840, 841, 846, 865, 875], "branch": [10, 242, 834], "neuro": [10, 84, 242, 875], "06": [10, 19, 20, 26, 35, 41, 44, 45, 46, 50, 52, 56, 59, 70, 74, 82, 92, 98, 101, 104, 136, 154, 157, 173, 175, 178, 179, 180, 182, 186, 193, 200, 205, 207, 212, 225, 226, 229, 234, 242, 274, 358, 415, 470, 564, 830, 833], "radoslaw": [10, 242, 851], "aud": [10, 28, 29, 37, 39, 49, 90, 97, 102, 105, 106, 149, 229, 242, 262, 766, 851], "oliva": [10, 242, 851], "resolv": [10, 179, 203, 208, 242, 706, 838, 851, 875], "recognit": [10, 46, 99, 150, 200, 242, 724, 727, 851], "455": [10, 224, 229, 242, 275, 851], "462": [10, 13, 207, 229, 242, 275, 851], "2014": [10, 12, 13, 18, 19, 40, 70, 111, 119, 150, 161, 194, 200, 242, 264, 265, 352, 411, 413, 414, 415, 425, 472, 564, 587, 677, 724, 727, 849, 851, 854], "1038": [10, 124, 193, 207, 242, 384, 413, 851], "nn": [10, 177, 242, 275, 644, 851, 860, 875], "3635": [10, 19, 242, 851], "decoding_rsa_sgskip": [10, 20], "cortic": [11, 24, 26, 27, 31, 32, 41, 43, 58, 76, 78, 83, 88, 92, 107, 111, 120, 128, 154, 157, 162, 164, 165, 171, 174, 177, 179, 185, 190, 198, 221, 224, 233, 242, 254, 259, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 280, 282, 283, 295, 296, 358, 362, 385, 441, 452, 470, 472, 473, 475, 508, 522, 523, 524, 525, 526, 529, 533, 538, 539, 552, 553, 570, 600, 603, 604, 615, 618, 625, 652, 655, 657, 658, 659, 660, 661, 691, 742, 753, 801, 830, 832, 835, 838, 841, 851, 860, 863, 875], "univari": [11, 164, 194, 224, 225, 230, 231, 242, 262, 267, 475, 552, 610, 676, 678, 679, 683, 698, 725, 872, 875], "confin": [11, 47, 157, 228, 288, 857], "potenti": [11, 15, 47, 69, 70, 72, 77, 86, 99, 115, 125, 126, 140, 143, 152, 153, 164, 167, 171, 194, 198, 200, 202, 206, 224, 225, 228, 239, 242, 262, 263, 264, 265, 267, 268, 273, 307, 312, 351, 358, 366, 390, 446, 463, 464, 475, 476, 477, 546, 556, 563, 564, 610, 640, 658, 661, 681, 688, 757, 766, 773, 803, 814, 850, 851, 854, 856, 857, 875], "relev": [11, 12, 26, 99, 110, 124, 150, 168, 179, 194, 200, 201, 202, 209, 242, 275, 369, 414, 555, 571, 694, 785, 787, 834, 849, 850, 854, 857, 860], "eric": [11, 19, 22, 26, 34, 39, 50, 57, 65, 71, 78, 82, 91, 92, 107, 116, 118, 121, 124, 125, 127, 133, 134, 135, 154, 156, 158, 178, 179, 181, 182, 183, 190, 193, 194, 207, 224, 228, 229, 232, 233, 234, 242, 268, 273, 385, 522, 591, 660, 682, 683, 685, 686, 849, 851, 862, 875], "larson": [11, 19, 22, 26, 34, 39, 50, 57, 65, 71, 78, 82, 91, 92, 107, 116, 118, 121, 124, 125, 127, 133, 134, 135, 158, 178, 179, 181, 182, 183, 190, 193, 194, 207, 224, 228, 232, 233, 234, 242, 262, 263, 264, 265, 268, 273, 385, 475, 476, 591, 660, 849, 851, 862, 875], "feature_select": 11, "selectkbest": 11, "f_classif": 11, "apply_inverse_epoch": [11, 28, 45, 269, 270, 273, 276, 277, 278, 522, 523, 525, 526, 865, 875], "read_inverse_oper": [11, 28, 29, 30, 38, 39, 44, 47, 52, 57, 60, 102, 105, 106, 108, 122, 165, 180, 220, 232, 234, 540, 865], "cross_val_multiscor": [11, 194, 865, 875], "linearmodel": [11, 18, 194, 865, 875], "slidingestim": [11, 194, 424, 865, 875], "get_coef": [11, 18, 194, 865, 875], "meg_path": [11, 13, 14, 15, 16, 22, 28, 30, 31, 35, 37, 39, 40, 42, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 67, 68, 70, 71, 75, 77, 84, 85, 86, 90, 91, 92, 94, 95, 97, 98, 101, 102, 105, 106, 108, 109, 115, 116, 119, 129, 130, 131, 177, 178, 179, 180, 194, 221, 226, 227, 228, 229, 232, 233, 234], "fname_fwd": [11, 32, 33, 34, 41, 42, 43, 47, 48, 49, 54, 58, 176, 178, 220], "sample_audvi": [11, 22, 28, 29, 30, 31, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 64, 67, 77, 84, 85, 88, 90, 91, 92, 93, 102, 105, 106, 108, 114, 117, 118, 122, 125, 129, 132, 148, 149, 165, 171, 174, 175, 176, 177, 178, 179, 180, 194, 220, 221, 232, 233, 234, 254, 262, 263, 264, 265, 475, 476], "sample_audvis_filt": [11, 13, 14, 15, 16, 18, 28, 42, 49, 68, 71, 72, 75, 86, 94, 95, 97, 98, 115, 119, 130, 131, 140, 144, 150, 151, 165, 168, 171, 176, 179, 194, 199, 203, 229, 232, 234, 857], "40_raw": [11, 13, 14, 15, 16, 18, 28, 42, 49, 68, 71, 72, 75, 86, 94, 95, 97, 98, 115, 119, 130, 131, 140, 144, 150, 151, 165, 168, 171, 176, 179, 194, 199, 203, 229, 232, 234, 857], "event_fnam": [11, 14, 15, 16, 18, 68, 86, 94, 95, 98, 115, 119, 130, 227, 228, 229, 232, 234], "ev": [11, 13, 14, 15, 16, 18, 28, 68, 86, 92, 94, 95, 98, 101, 102, 115, 119, 130, 139, 144, 150, 171, 199, 214, 227, 228, 229, 232, 234, 254, 610, 611, 820, 854, 875], "fname_cov": [11, 41, 48, 49, 50, 54, 55, 58, 64, 92, 175, 178, 180], "fname_inv": [11, 28, 29, 30, 38, 39, 44, 47, 57, 60, 102, 105, 106, 108, 122, 180, 220, 232, 234], "inv": [11, 28, 29, 30, 38, 39, 44, 45, 47, 52, 57, 60, 92, 102, 105, 106, 108, 122, 133, 155, 157, 159, 165, 171, 176, 177, 178, 180, 181, 190, 194, 220, 221, 232, 234, 254, 441, 527, 530, 533, 535, 536, 540, 799, 834, 850, 857, 875], "aud_r": [11, 14, 15, 42, 228], "vis_r": [11, 14, 15, 42, 86, 228], "contra": 11, "setup": [11, 15, 16, 18, 24, 43, 44, 45, 68, 69, 71, 86, 94, 95, 98, 105, 106, 108, 115, 130, 133, 154, 226, 227, 232, 234, 238, 255, 275, 322, 372, 448, 833, 834, 835, 836, 838, 840, 851, 855, 860, 875], "read_ev": [11, 13, 14, 15, 16, 18, 28, 68, 86, 92, 94, 95, 98, 101, 102, 115, 119, 130, 139, 144, 150, 199, 214, 227, 228, 229, 232, 234, 263, 448, 607, 820, 830, 865, 875], "modifi": [11, 61, 68, 115, 133, 139, 148, 149, 150, 160, 164, 167, 168, 171, 172, 173, 181, 194, 198, 204, 206, 209, 215, 219, 224, 228, 237, 242, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 273, 274, 275, 276, 277, 278, 279, 285, 310, 316, 338, 359, 361, 362, 363, 381, 407, 409, 411, 412, 414, 415, 416, 418, 419, 421, 422, 429, 466, 470, 475, 476, 483, 490, 505, 522, 535, 547, 551, 554, 555, 577, 580, 582, 583, 584, 585, 586, 598, 631, 637, 640, 646, 647, 648, 649, 677, 688, 689, 695, 696, 697, 698, 699, 712, 714, 738, 742, 745, 758, 763, 777, 779, 795, 809, 810, 815, 842, 850, 851, 857, 860, 875], "your": [11, 31, 47, 68, 69, 92, 93, 115, 119, 125, 133, 134, 139, 140, 141, 148, 150, 154, 156, 157, 158, 160, 161, 165, 166, 167, 171, 176, 180, 181, 189, 190, 193, 194, 197, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 213, 214, 215, 224, 237, 238, 239, 254, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 279, 295, 296, 307, 316, 327, 330, 333, 336, 352, 356, 357, 366, 367, 368, 385, 407, 414, 431, 448, 450, 451, 470, 472, 473, 475, 476, 486, 491, 533, 541, 554, 555, 558, 565, 571, 583, 601, 607, 681, 695, 697, 698, 699, 742, 772, 779, 782, 788, 789, 795, 800, 812, 832, 837, 838, 839, 840, 841, 842, 849, 850, 851, 852, 853, 854, 855, 857, 860, 875], "2443": [11, 42, 72, 75, 86, 90, 91, 105, 106, 108, 109, 115, 119, 145, 165, 166, 167, 168, 176, 179, 194, 197, 198, 199, 204, 205, 208, 213, 214, 215, 216, 221, 226, 227, 228, 232, 234], "grad": [11, 16, 22, 28, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 61, 75, 77, 84, 85, 91, 92, 94, 95, 97, 98, 101, 102, 105, 107, 108, 109, 111, 112, 114, 115, 117, 118, 119, 121, 122, 125, 129, 130, 139, 141, 144, 149, 151, 155, 156, 157, 161, 165, 168, 169, 171, 175, 176, 177, 178, 179, 180, 182, 194, 198, 199, 205, 207, 208, 213, 219, 220, 221, 226, 227, 228, 232, 234, 237, 238, 254, 257, 259, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 295, 296, 309, 316, 317, 336, 352, 356, 357, 366, 367, 368, 370, 407, 414, 416, 450, 451, 470, 472, 473, 475, 476, 511, 518, 533, 552, 553, 554, 555, 560, 565, 567, 568, 569, 571, 572, 574, 636, 681, 695, 697, 698, 699, 765, 766, 772, 773, 774, 776, 778, 780, 781, 782, 785, 795, 797, 798, 802, 803, 804, 830, 850, 857, 860, 875], "4000e": [11, 16, 28, 42, 45, 46, 75, 94, 95, 98, 101, 102, 105, 108, 111, 115, 119, 130, 151, 165, 176, 179, 194, 205, 226, 227, 228, 232, 234, 238, 257, 262, 263, 357, 555, 571, 572, 681, 850], "150e": [11, 16, 28, 42, 45, 94, 95, 98, 102, 105, 108, 115, 140, 141, 151, 165, 176, 179, 194, 205, 226, 227, 228, 229, 232, 234, 262, 263, 272, 475, 476, 772, 795, 850, 857], "v1": [11, 13, 14, 15, 16, 18, 26, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 67, 68, 70, 71, 72, 75, 77, 81, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 105, 106, 108, 109, 114, 115, 116, 117, 118, 119, 121, 122, 125, 127, 130, 131, 139, 140, 141, 145, 148, 149, 150, 151, 155, 156, 157, 159, 161, 165, 166, 167, 168, 170, 171, 175, 176, 177, 178, 179, 180, 181, 188, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 213, 214, 215, 216, 220, 221, 226, 227, 228, 229, 232, 234, 694], "idl": [11, 13, 14, 15, 16, 18, 26, 28, 29, 42, 45, 49, 61, 67, 68, 70, 71, 72, 75, 81, 82, 86, 90, 91, 92, 94, 95, 97, 98, 101, 102, 105, 108, 109, 115, 116, 119, 121, 125, 127, 129, 130, 131, 140, 141, 145, 150, 151, 155, 156, 157, 159, 161, 165, 166, 167, 168, 171, 176, 179, 181, 182, 190, 194, 197, 201, 202, 203, 204, 205, 207, 208, 213, 216, 220, 221, 226, 227, 228, 229, 232, 234], "v2": [11, 13, 14, 15, 16, 18, 26, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 67, 68, 70, 71, 72, 75, 77, 81, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 105, 106, 108, 109, 114, 115, 116, 117, 118, 119, 121, 122, 125, 127, 130, 131, 139, 140, 141, 145, 148, 149, 150, 151, 155, 156, 157, 159, 161, 165, 166, 167, 168, 171, 175, 176, 177, 178, 179, 180, 181, 188, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 213, 214, 215, 216, 220, 221, 226, 227, 228, 229, 232, 234, 242, 384, 583, 875], "v3": [11, 13, 14, 15, 16, 18, 26, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 67, 68, 70, 71, 72, 75, 77, 81, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 105, 106, 108, 109, 114, 115, 116, 117, 118, 119, 121, 122, 125, 127, 130, 131, 139, 140, 141, 145, 148, 149, 150, 151, 155, 156, 157, 159, 161, 165, 166, 167, 168, 171, 175, 176, 177, 178, 179, 180, 181, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 213, 214, 215, 216, 220, 221, 226, 227, 228, 229, 232, 234], "refer": [11, 14, 22, 27, 28, 29, 30, 31, 38, 39, 41, 45, 47, 48, 49, 50, 52, 57, 60, 61, 64, 67, 68, 71, 72, 75, 76, 79, 80, 83, 84, 85, 88, 90, 91, 93, 94, 95, 97, 98, 102, 105, 106, 108, 114, 118, 122, 125, 130, 131, 144, 148, 149, 151, 155, 157, 158, 164, 165, 166, 168, 169, 171, 174, 176, 178, 180, 181, 187, 199, 207, 211, 212, 213, 220, 232, 234, 238, 239, 242, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 288, 295, 296, 298, 300, 333, 352, 357, 358, 366, 377, 381, 384, 385, 388, 389, 390, 399, 400, 407, 408, 411, 413, 414, 415, 417, 423, 425, 428, 431, 433, 446, 470, 472, 473, 475, 476, 486, 518, 519, 522, 523, 533, 537, 552, 553, 554, 555, 556, 560, 563, 564, 566, 567, 568, 569, 570, 574, 581, 583, 584, 587, 590, 591, 598, 635, 637, 640, 644, 648, 652, 655, 657, 660, 677, 679, 681, 682, 683, 684, 685, 686, 688, 689, 695, 697, 698, 699, 703, 704, 705, 706, 707, 709, 711, 713, 714, 721, 722, 724, 725, 727, 742, 744, 758, 759, 774, 781, 782, 785, 786, 789, 794, 796, 797, 802, 804, 814, 830, 838, 849, 856, 858, 860, 875], "6450": [11, 13, 14, 15, 16, 18, 19, 28, 42, 49, 68, 71, 72, 75, 86, 94, 95, 97, 98, 115, 119, 130, 131, 140, 150, 151, 165, 168, 171, 176, 179, 194, 203, 229, 232, 234], "48149": [11, 13, 14, 15, 16, 18, 28, 42, 49, 68, 71, 72, 75, 86, 94, 95, 97, 98, 115, 119, 130, 131, 140, 150, 151, 165, 168, 171, 176, 179, 194, 203, 229, 232, 234], "956": [11, 13, 14, 15, 16, 18, 28, 29, 42, 45, 49, 67, 68, 70, 71, 72, 75, 78, 81, 86, 90, 91, 94, 95, 97, 98, 101, 102, 105, 108, 109, 115, 116, 119, 121, 125, 130, 131, 140, 142, 145, 150, 151, 155, 161, 165, 166, 167, 168, 171, 176, 179, 181, 194, 197, 201, 202, 203, 204, 205, 206, 213, 216, 220, 221, 226, 227, 228, 229, 232, 234], "320": [11, 13, 14, 15, 16, 18, 28, 29, 42, 45, 49, 67, 68, 70, 71, 72, 75, 79, 81, 86, 90, 91, 94, 95, 97, 98, 100, 101, 102, 105, 106, 108, 109, 110, 115, 116, 119, 121, 125, 130, 131, 133, 139, 140, 145, 148, 150, 151, 155, 161, 165, 166, 167, 168, 170, 171, 176, 179, 181, 194, 197, 198, 201, 202, 203, 204, 205, 207, 213, 216, 220, 221, 224, 226, 227, 228, 229, 232, 234, 406], "665": [11, 13, 14, 15, 16, 18, 28, 42, 49, 68, 71, 72, 75, 86, 88, 92, 93, 94, 95, 97, 98, 115, 119, 130, 131, 140, 150, 151, 165, 168, 171, 176, 179, 194, 203, 229, 232, 234], "41699": [11, 13, 14, 15, 16, 18, 42, 71, 72, 86, 97, 119, 131, 140, 151, 165, 194, 229], "277": [11, 13, 14, 15, 16, 18, 42, 70, 71, 72, 86, 97, 119, 131, 140, 151, 165, 166, 168, 181, 194, 199, 202, 207, 213, 224, 229], "709": [11, 13, 14, 15, 16, 18, 42, 71, 72, 86, 97, 119, 131, 140, 151, 165, 194, 229], "199": [11, 30, 31, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 56, 57, 58, 59, 60, 77, 84, 85, 114, 117, 118, 125, 148, 168, 171, 175, 177, 178, 180, 182, 190, 194, 207, 208, 219, 224, 229, 234, 242, 709, 711, 721, 725], "325": [11, 72, 110, 168, 194, 224, 229], "143": [11, 49, 72, 168, 199, 207, 208, 229, 242, 275], "19979521315838786": [11, 28, 61, 68, 70, 71, 78, 91, 92, 94, 95, 98, 101, 102, 105, 108, 115, 130, 141, 144, 148, 149, 151, 165, 171, 176, 179, 181, 198, 199, 202, 220, 227, 228, 232, 234], "151": [11, 21, 118, 126, 128, 150, 168, 171, 203, 224, 228, 229, 234, 275], "prior": [11, 12, 18, 27, 28, 29, 30, 34, 36, 38, 39, 40, 44, 47, 52, 56, 57, 58, 60, 88, 102, 105, 106, 108, 111, 122, 141, 148, 150, 161, 165, 171, 177, 178, 179, 180, 194, 203, 206, 208, 210, 216, 220, 229, 232, 234, 259, 260, 264, 266, 267, 273, 295, 296, 451, 452, 470, 471, 472, 473, 475, 476, 492, 521, 522, 533, 555, 565, 574, 583, 604, 613, 615, 742, 769, 770, 795, 801, 857, 860, 863, 875], "061": [11, 16, 28, 32, 33, 45, 46, 61, 70, 71, 72, 91, 92, 94, 98, 105, 111, 115, 139, 144, 150, 151, 165, 166, 167, 168, 171, 176, 179, 197, 198, 199, 202, 203, 204, 205, 208, 213, 214, 215, 216, 224, 225, 226, 227, 228, 229, 232, 234, 238, 242, 682, 683, 685, 686], "read_cov": [11, 31, 35, 40, 41, 45, 48, 49, 50, 51, 54, 55, 58, 59, 64, 67, 90, 92, 161, 177, 178, 259, 819, 854, 865], "305": [11, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 75, 77, 80, 85, 86, 92, 102, 105, 106, 107, 108, 119, 122, 139, 145, 149, 151, 161, 165, 168, 171, 175, 176, 177, 178, 179, 180, 206, 207, 220, 224, 229, 232, 234, 242, 262, 263, 264, 265, 475, 476, 640], "22494": [11, 22, 28, 29, 35, 38, 39, 52, 57, 60, 102, 105, 106, 108, 122, 165, 171, 180, 232, 234], "diagon": [11, 28, 29, 30, 38, 39, 44, 47, 52, 57, 60, 69, 102, 105, 106, 108, 122, 165, 171, 179, 180, 194, 220, 221, 232, 234, 242, 259, 295, 296, 352, 368, 511, 522, 530, 857, 860, 875], "retriev": [11, 194, 203, 207, 238, 326, 327, 347, 425, 483, 490, 613, 875], "lh_data": [11, 114, 174, 234, 273, 276], "hemispher": [11, 24, 27, 40, 43, 47, 52, 120, 124, 125, 128, 140, 150, 154, 157, 174, 177, 182, 232, 233, 234, 258, 268, 269, 270, 273, 274, 275, 276, 277, 278, 358, 384, 465, 508, 600, 618, 620, 623, 643, 658, 666, 691, 741, 742, 800, 805, 825, 860, 875], "prepar": [11, 12, 19, 21, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 54, 55, 57, 58, 59, 60, 77, 85, 88, 92, 102, 105, 106, 107, 108, 117, 122, 133, 149, 165, 176, 177, 178, 180, 181, 190, 194, 198, 205, 220, 221, 226, 232, 305, 316, 327, 366, 367, 522, 523, 524, 525, 526, 528, 529, 535, 538, 539, 584, 834, 860, 875], "seri": [11, 16, 27, 28, 29, 31, 36, 41, 56, 70, 79, 88, 91, 92, 93, 109, 136, 160, 167, 174, 179, 180, 187, 203, 204, 216, 221, 234, 239, 242, 260, 261, 262, 263, 264, 265, 268, 269, 270, 273, 275, 276, 277, 278, 295, 296, 352, 410, 417, 420, 441, 475, 476, 521, 522, 525, 536, 555, 560, 564, 613, 617, 681, 682, 683, 695, 696, 698, 700, 701, 702, 711, 720, 721, 755, 766, 806, 830, 832, 834, 857, 875], "time_decod": [11, 194], "31": [11, 19, 28, 32, 34, 35, 41, 43, 45, 47, 74, 79, 80, 81, 83, 101, 104, 106, 107, 110, 112, 138, 150, 153, 158, 168, 175, 177, 179, 182, 184, 186, 190, 193, 194, 203, 207, 209, 224, 225, 226, 228, 229, 232, 234, 237, 242, 262, 263, 275, 333, 533, 652, 657, 857, 875], "73it": [11, 19, 33, 34, 101, 193, 194, 207, 224, 225, 228, 229, 233], "79it": [11, 13, 19, 33, 34, 101, 106, 107, 110, 179, 194, 207, 224, 225, 226, 228, 229], "92it": [11, 13, 19, 101, 110, 193, 207, 224, 225, 228, 229], "03it": [11, 19, 34, 94, 101, 107, 110, 193, 194, 207, 224, 225, 228, 229, 233], "60it": [11, 13, 19, 34, 44, 101, 106, 110, 193, 194, 207, 224, 225, 228, 229, 234], "99it": [11, 13, 19, 106, 110, 193, 194, 207, 224, 225, 227, 228, 229, 232], "21": [11, 13, 19, 28, 34, 35, 41, 44, 45, 46, 47, 64, 69, 79, 101, 102, 106, 107, 110, 112, 125, 128, 139, 144, 147, 149, 151, 153, 159, 161, 163, 167, 168, 170, 171, 173, 182, 187, 190, 193, 194, 207, 213, 224, 225, 226, 228, 229, 232, 234, 239, 242, 259, 260, 262, 263, 264, 265, 269, 270, 271, 272, 273, 275, 276, 277, 278, 283, 295, 296, 356, 358, 400, 407, 414, 441, 446, 460, 475, 476, 510, 515, 535, 554, 555, 563, 565, 566, 569, 571, 572, 574, 583, 618, 626, 640, 644, 687, 694, 695, 697, 699, 759, 760, 770, 774, 775, 776, 777, 781, 782, 783, 785, 787, 794, 795, 797, 799, 800, 802, 804, 808, 825, 828, 832, 833, 851, 857], "09it": [11, 13, 19, 101, 106, 110, 179, 193, 194, 207, 224, 225, 228, 229, 233], "85it": [11, 13, 19, 101, 106, 110, 194, 207, 224, 225, 228, 229, 233], "29": [11, 13, 19, 21, 24, 28, 34, 35, 41, 45, 47, 50, 56, 75, 79, 83, 101, 106, 107, 111, 112, 121, 136, 142, 153, 155, 156, 157, 168, 170, 182, 183, 184, 193, 194, 201, 205, 207, 208, 209, 224, 225, 226, 228, 229, 232, 233, 234, 238, 242, 275, 875], "77it": [11, 19, 34, 101, 106, 107, 110, 194, 207, 226, 229], "32": [11, 12, 13, 19, 21, 28, 34, 35, 41, 42, 45, 47, 49, 68, 70, 71, 72, 73, 79, 80, 92, 97, 101, 105, 106, 107, 108, 110, 112, 118, 127, 134, 139, 140, 141, 145, 147, 148, 150, 151, 157, 161, 165, 167, 168, 169, 170, 171, 175, 176, 179, 181, 182, 183, 184, 186, 193, 194, 198, 199, 201, 202, 203, 205, 206, 207, 209, 212, 214, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 239, 242, 255, 262, 263, 386, 406, 448, 475, 476, 496, 522, 570, 840, 851, 857, 860, 861, 875], "57it": [11, 19, 33, 34, 101, 110, 121, 179, 193, 194, 207, 224, 225, 226, 228, 229, 232, 234], "28it": [11, 19, 34, 101, 107, 110, 193, 194, 207, 224, 226, 228, 229], "39": [11, 12, 13, 19, 21, 28, 35, 45, 47, 79, 94, 101, 102, 106, 107, 112, 139, 156, 157, 158, 168, 179, 183, 184, 190, 194, 198, 199, 207, 208, 212, 224, 225, 226, 228, 229, 232, 233, 234, 242, 275, 399, 850], "13it": [11, 19, 101, 106, 110, 194, 207, 224, 226, 228, 229, 234], "34it": [11, 19, 33, 101, 102, 110, 193, 194, 207, 224, 225, 229, 233], "86it": [11, 13, 19, 33, 101, 179, 207, 221, 224, 225, 228, 229, 233, 234], "52": [11, 19, 28, 35, 45, 47, 79, 80, 97, 101, 106, 107, 110, 112, 133, 144, 150, 153, 167, 168, 170, 173, 190, 193, 194, 200, 205, 207, 212, 224, 225, 228, 229, 232, 234, 242, 399, 681, 724, 727, 875], "82it": [11, 13, 19, 34, 101, 107, 110, 179, 193, 194, 207, 224, 225, 226, 228, 229], "32it": [11, 13, 19, 34, 101, 106, 110, 121, 193, 194, 207, 224, 226, 229], "78it": [11, 19, 101, 107, 110, 193, 194, 207, 221, 224, 228, 229, 232], "61": [11, 13, 19, 30, 35, 38, 45, 47, 51, 56, 57, 67, 70, 79, 81, 83, 88, 91, 101, 106, 107, 110, 112, 114, 121, 125, 135, 145, 148, 165, 166, 167, 168, 169, 171, 175, 177, 178, 183, 184, 193, 194, 197, 198, 201, 204, 205, 206, 207, 208, 213, 214, 215, 216, 224, 225, 226, 228, 229, 232, 233, 234, 242, 352], "84it": [11, 13, 19, 33, 34, 101, 106, 110, 193, 207, 224, 226, 228, 229], "65": [11, 12, 19, 21, 34, 35, 45, 47, 79, 82, 101, 106, 107, 110, 112, 133, 135, 142, 144, 155, 168, 169, 176, 177, 183, 193, 194, 199, 206, 207, 224, 225, 226, 227, 228, 229, 233, 234, 242, 591, 875], "30it": [11, 13, 19, 101, 106, 110, 193, 194, 224, 228, 229, 232, 233], "68": [11, 13, 19, 34, 35, 41, 45, 47, 79, 80, 88, 99, 101, 106, 107, 112, 124, 139, 142, 144, 157, 168, 171, 175, 180, 183, 190, 194, 207, 224, 225, 228, 229, 232, 242, 264, 265, 295, 296, 333, 352, 356, 357, 366, 367, 368, 399, 407, 414, 450, 451, 470, 472, 473, 533, 694, 782], "72it": [11, 13, 19, 33, 34, 101, 107, 110, 193, 194, 224, 225, 228, 229, 232], "71": [11, 12, 13, 19, 21, 35, 45, 79, 101, 106, 107, 110, 112, 168, 175, 180, 181, 183, 193, 194, 207, 224, 225, 226, 228, 229, 232, 234], "87it": [11, 19, 34, 101, 107, 110, 193, 194, 207, 224, 225, 226, 229], "74": [11, 13, 15, 19, 26, 35, 41, 45, 50, 78, 79, 80, 101, 106, 107, 110, 112, 133, 157, 167, 168, 169, 175, 180, 183, 190, 193, 194, 200, 205, 207, 221, 224, 225, 228, 229, 234, 676], "29it": [11, 13, 19, 34, 94, 106, 110, 194, 207, 224, 229, 232, 233, 234], "68it": [11, 13, 19, 101, 107, 179, 194, 207, 224, 225, 226, 228, 229, 233, 234], "81": [11, 13, 15, 16, 19, 34, 35, 79, 94, 101, 105, 106, 107, 110, 112, 141, 155, 168, 179, 183, 193, 194, 206, 207, 209, 224, 225, 228, 229, 232, 237, 242, 652, 657, 709, 711, 721, 725, 875], "89it": [11, 13, 19, 34, 106, 107, 110, 179, 193, 194, 207, 224, 228, 229], "87": [11, 18, 19, 33, 35, 47, 78, 91, 92, 106, 107, 110, 112, 121, 122, 168, 194, 205, 207, 208, 224, 225, 228, 229, 232, 242, 411, 413, 425, 857], "27": [11, 12, 13, 19, 21, 24, 28, 32, 33, 34, 35, 39, 41, 43, 45, 46, 47, 50, 56, 79, 80, 100, 101, 106, 107, 112, 144, 149, 157, 159, 168, 170, 177, 179, 182, 184, 190, 194, 207, 224, 225, 226, 228, 229, 232, 233, 234, 242, 566, 832], "66it": [11, 13, 19, 34, 101, 110, 179, 193, 194, 207, 224, 228, 229, 232, 234], "90it": [11, 13, 19, 34, 101, 106, 107, 193, 194, 207, 224, 225, 228, 229], "94": [11, 13, 19, 35, 47, 79, 101, 105, 106, 107, 110, 112, 136, 168, 169, 179, 182, 190, 193, 194, 205, 207, 210, 224, 225, 226, 227, 228, 229, 233, 234, 242, 857], "27it": [11, 19, 33, 34, 101, 110, 179, 194, 224, 225, 228, 229], "59it": [11, 19, 33, 34, 101, 106, 107, 110, 193, 194, 207, 224, 229, 234], "64it": [11, 19, 33, 34, 101, 102, 106, 107, 193, 194, 207, 224, 228, 229], "22it": [11, 13, 19, 34, 107, 110, 193, 194, 207, 224, 225, 228, 229, 233], "93it": [11, 13, 19, 33, 34, 101, 106, 110, 193, 194, 207, 225, 228, 229, 233], "81it": [11, 19, 34, 101, 106, 110, 193, 194, 224, 225, 228, 229], "95it": [11, 13, 34, 101, 193, 194, 207, 224, 225, 228, 229], "47it": [11, 19, 33, 101, 106, 107, 110, 193, 194, 207, 226, 228, 229, 234], "96it": [11, 13, 19, 101, 102, 110, 194, 207, 224, 225, 226, 228, 229, 232], "91it": [11, 13, 19, 34, 101, 107, 110, 193, 194, 224, 226, 228, 229, 232], "62it": [11, 19, 34, 44, 106, 193, 194, 207, 224, 225, 228, 229, 233], "18it": [11, 13, 19, 33, 34, 101, 110, 193, 194, 207, 224, 225, 226, 227, 228, 229], "44it": [11, 13, 19, 33, 101, 106, 193, 194, 224, 226, 228, 229, 234], "38it": [11, 13, 19, 33, 34, 101, 106, 107, 193, 194, 207, 224, 225, 226, 228, 229], "70it": [11, 13, 19, 34, 101, 110, 193, 194, 207, 224, 228, 229, 234], "12it": [11, 19, 33, 34, 107, 110, 193, 194, 207, 224, 228, 229], "51it": [11, 19, 102, 106, 107, 110, 193, 194, 224, 225, 228, 229, 234], "54it": [11, 19, 34, 44, 101, 106, 110, 193, 194, 207, 224, 228, 229, 232], "94it": [11, 13, 19, 34, 94, 207, 224, 226, 228, 229, 234], "31it": [11, 19, 33, 101, 102, 106, 107, 110, 194, 207, 224, 225, 228, 229, 232, 234], "65it": [11, 19, 101, 106, 110, 194, 207, 224, 225, 226, 228, 229, 234], "74it": [11, 13, 19, 101, 106, 193, 194, 207, 224, 225, 229, 234], "10it": [11, 13, 19, 101, 107, 110, 193, 194, 207, 224, 225, 226, 228, 229], "43it": [11, 19, 94, 101, 106, 110, 179, 193, 194, 207, 224, 225, 228, 229], "49it": [11, 13, 19, 33, 101, 106, 107, 110, 193, 207, 224, 225, 228, 229, 234], "07it": [11, 19, 33, 34, 106, 110, 193, 194, 207, 224, 225, 226, 228, 229, 232], "52it": [11, 19, 33, 101, 193, 207, 224, 225, 226, 228, 229, 234], "76it": [11, 13, 19, 34, 101, 106, 110, 193, 207, 224, 226, 229], "71it": [11, 19, 33, 101, 110, 207, 224, 225, 229], "20it": [11, 13, 19, 34, 101, 102, 106, 107, 110, 193, 194, 207, 224, 225, 226, 228, 229, 234], "75it": [11, 19, 110, 193, 194, 207, 228, 229, 233], "88it": [11, 13, 19, 34, 101, 102, 107, 110, 193, 194, 207, 224, 225, 226, 228, 229, 232, 233], "39it": [11, 13, 19, 34, 101, 110, 193, 194, 207, 224, 226, 228, 229], "53it": [11, 19, 33, 44, 101, 107, 110, 193, 194, 207, 224, 225, 228, 229, 234], "83it": [11, 19, 101, 106, 110, 193, 194, 207, 224, 225, 229, 232], "23it": [11, 13, 19, 33, 34, 101, 106, 107, 110, 193, 224, 225, 226, 227, 228, 229], "02it": [11, 13, 19, 34, 110, 193, 194, 207, 224, 225, 226, 228, 229, 233], "16it": [11, 19, 101, 106, 110, 179, 193, 194, 207, 224, 225, 226, 228, 229], "48it": [11, 13, 19, 33, 101, 106, 110, 194, 224, 226, 229, 233, 234], "41it": [11, 13, 19, 101, 107, 193, 194, 207, 224, 228, 229, 234], "50it": [11, 13, 19, 34, 101, 106, 110, 194, 207, 224, 225, 228, 229, 233, 234], "33it": [11, 19, 34, 101, 106, 110, 193, 194, 207, 224, 225, 228, 229, 234], "45it": [11, 19, 33, 101, 107, 110, 193, 194, 207, 224, 229, 233], "42it": [11, 13, 19, 34, 101, 110, 179, 193, 194, 207, 224, 225, 229, 233, 234], "24it": [11, 13, 19, 33, 34, 94, 101, 106, 107, 193, 194, 224, 225, 226, 228, 229], "08it": [11, 19, 101, 106, 107, 110, 193, 194, 207, 224, 228, 229], "56it": [11, 13, 34, 110, 193, 194, 207, 224, 225, 228, 229, 233, 234], "00it": [11, 13, 19, 34, 101, 106, 193, 194, 207, 224, 226, 229, 233], "67it": [11, 13, 19, 33, 34, 101, 110, 179, 193, 194, 207, 224, 226, 229, 232], "80it": [11, 13, 19, 33, 34, 101, 106, 107, 110, 207, 224, 228, 229, 233], "63it": [11, 19, 101, 106, 107, 194, 207, 224, 226, 229, 233, 234], "01it": [11, 19, 34, 101, 106, 107, 110, 179, 193, 194, 207, 224, 225, 226, 228, 229, 233, 234], "61it": [11, 13, 19, 34, 101, 107, 110, 193, 207, 224, 225, 228, 229, 232, 233, 234], "17it": [11, 13, 19, 106, 110, 193, 194, 207, 228, 229, 232], "55it": [11, 19, 33, 101, 106, 107, 110, 194, 207, 224, 225, 226, 227, 228, 229, 232, 233, 234], "investig": [11, 21, 143, 150, 190, 200, 234, 264, 265, 555, 782, 851], "patterns_": [11, 15, 18, 19, 21, 194, 407, 411, 413, 414, 415, 425, 556, 875], "inverse_transform": [11, 18, 194, 415, 416, 421, 422, 425, 556], "lookup": [11, 41, 133, 255, 262, 263, 264, 265, 267, 275, 459, 460, 475, 476, 644, 742, 830], "vertic": [11, 22, 24, 28, 38, 39, 41, 43, 48, 52, 53, 67, 114, 125, 132, 133, 135, 139, 141, 154, 157, 158, 159, 160, 174, 177, 180, 190, 198, 201, 206, 207, 213, 216, 221, 224, 225, 232, 233, 234, 258, 262, 263, 264, 265, 268, 269, 270, 273, 274, 275, 276, 277, 278, 282, 283, 295, 296, 356, 358, 441, 454, 463, 465, 466, 475, 476, 508, 510, 531, 532, 617, 645, 658, 660, 661, 663, 664, 665, 666, 667, 669, 670, 671, 682, 683, 685, 686, 687, 690, 691, 741, 742, 756, 761, 766, 772, 780, 795, 800, 805, 825, 830, 857, 860, 875], "lh_vertno": [11, 114, 174, 273, 276, 658], "empti": [11, 15, 27, 120, 128, 139, 141, 149, 160, 161, 165, 168, 170, 171, 183, 184, 190, 199, 203, 204, 206, 208, 213, 219, 234, 256, 259, 262, 263, 264, 265, 267, 271, 273, 286, 300, 308, 317, 324, 346, 347, 352, 357, 374, 375, 376, 379, 380, 382, 387, 390, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 434, 455, 475, 476, 483, 487, 490, 491, 497, 501, 521, 546, 547, 548, 552, 553, 555, 556, 558, 565, 566, 574, 583, 584, 607, 615, 626, 636, 640, 676, 682, 691, 695, 697, 698, 699, 712, 730, 742, 751, 758, 766, 767, 772, 773, 779, 781, 789, 795, 796, 830, 834, 850, 857, 860, 875], "stc_feat": 11, "sourceestim": [11, 22, 26, 31, 35, 37, 40, 46, 59, 60, 92, 154, 157, 164, 165, 180, 185, 186, 220, 221, 232, 233, 234, 261, 264, 265, 268, 269, 270, 272, 274, 275, 276, 277, 278, 282, 283, 287, 288, 289, 290, 291, 292, 293, 294, 358, 441, 454, 470, 471, 472, 473, 510, 522, 523, 524, 525, 526, 528, 531, 532, 537, 538, 617, 623, 636, 645, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 680, 687, 690, 691, 742, 756, 800, 801, 830, 852, 854, 865, 875], "ab": [11, 19, 35, 38, 40, 47, 59, 60, 67, 95, 117, 118, 125, 134, 150, 178, 182, 190, 193, 200, 224, 226, 227, 232, 233, 234, 239, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 557, 711, 721, 777, 857, 875], "tstep": [11, 22, 31, 46, 59, 88, 92, 93, 180, 221, 232, 233, 234, 269, 270, 273, 276, 277, 278, 357, 473, 510, 555, 645, 662, 681, 687, 710, 718, 875], "transpar": [11, 58, 99, 133, 171, 180, 198, 239, 254, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 695, 742, 761, 778, 795, 800, 805, 806, 807, 808, 856, 875], "03": [11, 13, 19, 24, 33, 34, 35, 49, 56, 59, 70, 72, 74, 75, 81, 82, 83, 88, 91, 92, 100, 101, 104, 106, 107, 118, 119, 125, 140, 145, 149, 150, 157, 161, 165, 166, 167, 168, 169, 173, 179, 181, 182, 183, 193, 194, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 228, 229, 233, 234, 242, 256, 260, 352, 555, 682, 683, 685, 686, 770], "26it": [11, 13, 19, 33, 34, 101, 106, 107, 110, 179, 193, 194, 207, 224, 228, 229, 234], "36it": [11, 13, 19, 33, 34, 101, 110, 193, 194, 207, 225, 228, 229, 233, 234], "25it": [11, 19, 34, 94, 101, 107, 110, 179, 193, 207, 224, 225, 228, 229, 234], "21it": [11, 13, 19, 34, 101, 106, 110, 193, 194, 207, 224, 228, 229, 234], "50724321": 11, "37721471": 11, "59502306": 11, "894": [11, 20], "311": [11, 89, 90, 110, 168, 229, 241], "decoding_spatio_temporal_sourc": [11, 20], "comodul": [12, 414], "allow": [12, 19, 40, 43, 44, 46, 60, 92, 102, 110, 113, 114, 118, 133, 136, 139, 140, 141, 142, 143, 145, 149, 150, 156, 157, 159, 165, 168, 169, 171, 177, 188, 194, 200, 205, 213, 214, 216, 224, 225, 226, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 269, 270, 273, 275, 276, 277, 278, 289, 290, 293, 306, 310, 333, 338, 345, 352, 369, 407, 413, 414, 415, 440, 448, 465, 474, 475, 476, 478, 490, 491, 495, 524, 526, 529, 531, 532, 533, 537, 555, 556, 560, 574, 581, 601, 607, 613, 631, 644, 660, 662, 681, 695, 697, 698, 699, 722, 723, 725, 726, 736, 740, 763, 772, 774, 785, 787, 795, 830, 832, 834, 852, 856, 857, 860, 863, 875], "composit": [12, 187, 194, 269, 270, 273, 276, 277, 278, 742, 800, 805, 857], "orthogon": [12, 112, 155, 159, 177, 194, 204, 205, 208, 295, 296, 555, 723, 726, 857, 860, 863, 875], "spatial": [12, 14, 15, 17, 18, 20, 27, 31, 32, 33, 34, 36, 47, 56, 69, 70, 78, 81, 82, 88, 111, 117, 119, 150, 151, 154, 155, 161, 174, 197, 198, 200, 204, 205, 210, 216, 219, 221, 224, 226, 229, 232, 233, 234, 238, 239, 242, 259, 262, 263, 264, 265, 266, 267, 268, 271, 273, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 310, 326, 352, 358, 361, 362, 370, 407, 408, 414, 415, 421, 423, 425, 436, 475, 476, 487, 488, 490, 516, 521, 533, 534, 537, 552, 553, 554, 555, 556, 569, 582, 583, 604, 610, 613, 615, 649, 652, 657, 665, 666, 667, 668, 672, 682, 683, 685, 686, 695, 697, 699, 714, 732, 742, 759, 774, 776, 781, 782, 785, 794, 797, 802, 804, 830, 850, 851, 854, 857, 875], "maxim": [12, 60, 86, 141, 159, 175, 176, 179, 182, 194, 200, 202, 242, 270, 276, 277, 278, 295, 296, 415, 555, 581, 665, 666, 667, 669, 670, 681, 806, 857, 875], "csp": [12, 17, 20, 27, 194, 262, 267, 310, 326, 361, 370, 411, 414, 436, 490, 552, 556, 695, 851, 865, 875], "variabl": [12, 16, 31, 43, 99, 101, 110, 115, 140, 142, 149, 154, 167, 169, 194, 197, 200, 202, 204, 213, 215, 228, 229, 234, 242, 255, 260, 262, 263, 268, 269, 270, 272, 273, 276, 277, 278, 301, 305, 306, 307, 310, 358, 363, 364, 365, 369, 372, 374, 375, 376, 377, 379, 380, 383, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 414, 424, 426, 436, 448, 449, 455, 457, 459, 463, 465, 466, 467, 468, 469, 475, 476, 494, 508, 512, 514, 541, 554, 555, 574, 580, 598, 600, 608, 612, 618, 627, 632, 633, 634, 635, 642, 643, 644, 658, 661, 672, 682, 683, 684, 685, 686, 690, 691, 734, 742, 758, 760, 770, 772, 789, 795, 800, 805, 806, 808, 815, 825, 830, 832, 839, 840, 850, 854, 857, 861, 875], "fluctuat": [12, 140, 141, 150, 197, 199, 205, 206, 210, 221, 264, 265, 782, 830], "electromyogram": [12, 875], "cortico": 12, "muscular": [12, 197, 203], "coher": [12, 32, 33, 101, 105, 179, 221, 242, 287, 288, 289, 290, 295, 695, 696, 722, 723, 724, 725, 726, 727, 768, 830, 841, 851], "fieldtrip": [12, 155, 190, 200, 206, 224, 226, 232, 320, 327, 494, 608, 612, 722, 723, 725, 726, 857, 863, 875], "fieldtrip_cmc": [12, 21], "ridg": [12, 19, 193, 413, 419], "kfold": [12, 16, 19, 352, 357, 424, 875], "cross_val_predict": [12, 875], "subjectcmc": [12, 21], "emg": [12, 81, 136, 168, 188, 194, 213, 219, 242, 262, 263, 264, 265, 272, 309, 370, 414, 440, 475, 476, 487, 490, 501, 552, 555, 695, 697, 698, 699, 772, 795, 851, 857, 860, 875], "pick_channel": [12, 45, 69, 71, 84, 98, 113, 125, 139, 140, 148, 150, 168, 169, 213, 221, 226, 227, 228, 259, 262, 263, 264, 265, 266, 475, 476, 549, 695, 696, 697, 698, 699, 865, 875], "emglft": 12, "ref_meg": [12, 21, 73, 117, 121, 168, 210, 262, 263, 264, 265, 272, 309, 370, 475, 476, 552, 553, 695, 697, 698, 699, 772, 795, 875], "make_fixed_length_ev": [12, 21, 165, 167, 214, 219, 357, 528, 830, 865, 875], "durat": [12, 21, 49, 65, 69, 70, 72, 73, 74, 75, 79, 80, 81, 88, 91, 92, 121, 125, 136, 139, 140, 143, 145, 148, 149, 150, 165, 166, 167, 190, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 221, 232, 233, 234, 254, 256, 262, 263, 264, 265, 272, 273, 281, 339, 341, 355, 357, 407, 409, 413, 414, 418, 419, 436, 443, 445, 446, 448, 475, 476, 492, 515, 516, 555, 557, 558, 560, 574, 583, 591, 645, 647, 687, 709, 772, 781, 789, 795, 830, 834, 875], "meg_epoch": [12, 18], "detrend": [12, 108, 134, 209, 257, 262, 264, 265, 515, 606, 875], "emg_epoch": 12, "var": [12, 47, 69, 170, 205, 372, 455, 688], "oa": [12, 21, 82, 182, 352], "validaton": 12, "first_samp": [12, 69, 74, 136, 165, 167, 183, 213, 214, 215, 256, 257, 262, 263, 267, 272, 281, 360, 435, 436, 448, 474, 475, 476, 495, 516, 550, 555, 584, 609, 610, 645, 660, 775, 789, 795, 820, 830, 860, 875], "set_xlabel": [12, 13, 19, 21, 22, 45, 69, 94, 102, 111, 131, 143, 145, 171, 182, 194, 204, 227, 228, 229], "set_titl": [12, 13, 22, 45, 69, 70, 94, 97, 110, 112, 118, 125, 133, 135, 143, 193, 194, 208, 209, 227, 228, 229, 238, 239], "78": [12, 13, 19, 21, 34, 35, 47, 51, 78, 79, 101, 110, 112, 121, 156, 157, 165, 168, 175, 178, 184, 193, 194, 207, 213, 224, 225, 226, 228, 229, 234, 242, 298, 399, 857], "62": [12, 16, 19, 21, 28, 34, 35, 45, 47, 56, 69, 79, 101, 106, 110, 112, 135, 168, 179, 193, 194, 207, 224, 225, 228, 229, 232, 242], "258": [12, 21, 121, 157, 165, 168, 207, 229], "114": [12, 21, 35, 79, 150, 168, 178, 180, 875], "12000": [12, 21], "911610": [12, 21], "191": [12, 21, 168, 224, 228, 229], "180000": 12, "150": [12, 35, 42, 45, 59, 72, 73, 75, 79, 80, 92, 118, 121, 140, 141, 145, 150, 157, 159, 165, 168, 179, 190, 194, 199, 203, 205, 224, 229, 231, 254, 275, 713, 875], "793": [12, 143, 179, 186, 207, 229], "661": [12, 19, 98, 100, 200, 225], "1057": [12, 193], "881": [12, 194, 229, 275], "183": [12, 168, 224], "1801": 12, "contribut": [12, 19, 45, 67, 148, 150, 179, 226, 229, 253, 262, 263, 436, 570, 651, 832, 838, 851, 853, 856, 875], "sven": [12, 18, 19, 194, 242, 411, 413, 414, 415, 425], "d\u00e4hne": [12, 18, 19, 194, 242, 411, 413, 414, 425], "frank": [12, 18, 19, 74, 194, 203, 242, 411, 413, 414, 425, 555, 590], "meineck": [12, 18, 19, 194, 242, 411, 413, 414, 425], "stefan": [12, 18, 19, 33, 111, 125, 194, 203, 226, 229, 232, 238, 242, 411, 413, 414, 415, 425, 569, 862, 875], "hauf": [12, 18, 19, 194, 242, 411, 413, 414, 415, 425], "johann": [12, 194, 242, 414, 875], "h\u00f6hne": [12, 194, 242, 414], "michael": [12, 19, 99, 193, 194, 202, 203, 242, 352, 407, 413, 414, 554, 555, 587, 598, 709, 711, 721, 725, 851, 857, 875], "tangermann": [12, 194, 203, 242, 414], "klau": [12, 194, 203, 242, 407, 414, 555], "robert": [12, 74, 179, 193, 194, 203, 210, 229, 242, 407, 413, 414, 682, 683, 685, 686, 851, 862, 875], "m\u00fcller": [12, 73, 194, 203, 242, 407, 414, 555], "vadim": [12, 21, 194, 242, 414, 415], "nikulin": [12, 21, 194, 242, 414, 415], "novel": [12, 21, 194, 242, 330, 414, 415, 863], "framework": [12, 35, 194, 242, 414, 470, 846, 857], "amplitud": [12, 19, 35, 37, 39, 40, 45, 47, 53, 59, 79, 80, 91, 92, 93, 114, 121, 125, 130, 134, 139, 140, 143, 144, 161, 165, 171, 174, 179, 182, 183, 189, 193, 194, 197, 198, 200, 203, 204, 205, 207, 209, 210, 221, 242, 254, 257, 260, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 288, 296, 339, 340, 341, 345, 357, 414, 450, 472, 473, 475, 476, 517, 526, 537, 555, 557, 571, 572, 605, 647, 648, 652, 656, 657, 681, 682, 697, 698, 699, 711, 721, 742, 769, 770, 783, 796, 830, 841, 854, 857, 860, 875], "neuron": [12, 21, 136, 143, 193, 194, 197, 242, 295, 400, 413, 414, 415, 522, 830, 851, 857], "oscil": [12, 21, 67, 92, 111, 112, 194, 197, 201, 221, 242, 414, 415, 648, 709, 711, 721, 725], "behavior": [12, 143, 168, 187, 194, 197, 199, 200, 205, 242, 255, 262, 263, 272, 414, 448, 516, 520, 522, 583, 610, 644, 812, 834, 853, 854, 856, 863], "111": [12, 32, 35, 46, 111, 125, 144, 168, 194, 207, 224, 228, 229, 242, 414], "122": [12, 16, 159, 166, 168, 169, 173, 175, 194, 203, 224, 228, 242, 333, 408, 414, 423, 857, 875], "2013": [12, 16, 18, 19, 43, 59, 79, 80, 127, 143, 168, 194, 242, 268, 273, 274, 280, 358, 408, 411, 413, 414, 423, 425, 431, 473, 560, 587, 652, 657, 849], "07": [12, 20, 35, 46, 56, 59, 66, 79, 82, 83, 100, 101, 104, 106, 128, 132, 159, 169, 175, 178, 182, 183, 184, 190, 194, 207, 218, 226, 229, 234, 242, 319, 414, 655, 857], "079": [12, 135, 194, 242, 414], "273": [12, 35, 46, 165, 168, 183, 207, 229, 875], "decoding_spoc_cmc": [12, 20], "illustr": [13, 27, 28, 67, 68, 88, 92, 93, 123, 132, 137, 141, 145, 149, 150, 164, 165, 170, 187, 197, 198, 199, 201, 203, 205, 209, 213, 224, 228, 234, 238, 475, 476, 830, 850, 857], "discriminatori": 13, "given": [13, 16, 19, 26, 31, 69, 78, 92, 93, 110, 118, 119, 136, 142, 143, 148, 149, 150, 157, 159, 161, 164, 165, 168, 169, 170, 174, 177, 179, 185, 186, 187, 193, 194, 199, 200, 203, 204, 205, 208, 213, 214, 216, 224, 226, 228, 229, 237, 239, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 276, 277, 278, 286, 295, 296, 300, 308, 310, 314, 315, 316, 325, 327, 328, 352, 357, 363, 364, 365, 366, 374, 375, 376, 377, 379, 380, 382, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 409, 411, 414, 415, 417, 422, 423, 427, 428, 432, 442, 443, 446, 448, 450, 452, 463, 470, 472, 473, 474, 475, 476, 515, 518, 519, 521, 522, 523, 524, 525, 526, 528, 529, 530, 533, 538, 539, 554, 555, 556, 557, 558, 560, 566, 569, 570, 571, 572, 574, 577, 580, 583, 589, 591, 597, 598, 603, 606, 640, 644, 649, 659, 662, 663, 675, 677, 681, 682, 683, 685, 686, 688, 690, 693, 695, 696, 697, 698, 699, 703, 704, 705, 706, 707, 708, 711, 713, 715, 719, 721, 726, 730, 731, 734, 742, 746, 748, 758, 759, 760, 766, 770, 772, 773, 774, 776, 777, 778, 779, 781, 786, 789, 793, 795, 796, 797, 798, 800, 802, 804, 805, 809, 810, 830, 832, 834, 851, 854, 856, 857, 860, 875], "subsequ": [13, 68, 82, 110, 111, 139, 141, 144, 156, 160, 165, 194, 198, 201, 203, 213, 232, 242, 262, 263, 475, 476, 555, 558, 565, 574, 687, 830, 837, 850, 854, 857, 875], "accur": [13, 26, 41, 44, 45, 50, 107, 133, 134, 157, 158, 175, 181, 187, 194, 202, 203, 205, 208, 255, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 450, 475, 476, 514, 555, 732, 781, 808, 815, 850, 875], "generalizingestim": [13, 194, 424, 865, 875], "events_fnam": 13, "auditori": [13, 15, 30, 31, 37, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 57, 58, 60, 61, 65, 70, 77, 78, 84, 85, 92, 110, 114, 117, 118, 122, 125, 130, 139, 140, 141, 142, 144, 145, 148, 149, 150, 151, 164, 165, 167, 171, 174, 175, 177, 178, 179, 180, 181, 191, 192, 193, 194, 200, 205, 210, 214, 220, 228, 232, 234, 237, 239, 242, 255, 256, 257, 259, 262, 263, 264, 265, 267, 268, 273, 307, 351, 353, 357, 359, 361, 413, 434, 448, 475, 488, 512, 513, 518, 520, 521, 522, 533, 568, 587, 607, 609, 615, 621, 628, 643, 698, 742, 875], "050": [13, 65, 66, 79, 139, 141, 148, 168, 179, 198, 206, 207, 221, 242], "faster": [13, 18, 44, 118, 139, 182, 194, 203, 239, 242, 254, 262, 263, 264, 265, 268, 269, 270, 273, 276, 277, 278, 358, 361, 447, 463, 474, 475, 476, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 515, 555, 557, 682, 683, 685, 686, 832, 837, 838, 840, 863, 875], "constructor": [13, 86, 139, 141, 150, 164, 165, 171, 199, 201, 204, 215, 219, 222, 257, 269, 270, 273, 276, 277, 278, 474, 556, 571, 800, 805, 834, 854, 875], "497": [13, 14, 15, 19, 75, 86, 97, 119, 131, 177, 203, 229, 242, 275], "310": [13, 14, 15, 20, 35, 75, 79, 86, 97, 107, 110, 119, 131, 168, 203, 207, 229], "lbfg": [13, 18, 194], "time_gen": [13, 194], "experiment": [13, 16, 45, 69, 70, 72, 75, 79, 80, 81, 88, 91, 125, 139, 140, 145, 148, 149, 150, 152, 164, 166, 167, 168, 179, 194, 197, 198, 199, 201, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 219, 221, 224, 242, 262, 263, 264, 265, 267, 408, 423, 475, 476, 477, 522, 574, 583, 584, 647, 648, 655, 695, 698, 830, 850, 857, 861, 875], "59": [13, 15, 19, 28, 30, 31, 34, 35, 38, 39, 40, 41, 44, 45, 48, 49, 54, 55, 58, 59, 60, 68, 70, 75, 77, 79, 81, 88, 90, 91, 92, 101, 106, 109, 110, 112, 114, 116, 119, 125, 129, 140, 141, 144, 149, 150, 151, 155, 157, 161, 168, 171, 175, 177, 181, 183, 194, 197, 198, 203, 204, 205, 207, 220, 224, 225, 226, 228, 229, 233, 234, 237, 242, 275, 428, 566, 574, 583, 688, 689], "37": [13, 19, 28, 34, 35, 45, 47, 79, 101, 106, 110, 112, 144, 156, 168, 170, 176, 181, 186, 194, 207, 209, 212, 218, 224, 225, 226, 228, 229, 233, 234, 237, 333, 399, 448, 566, 694, 875], "54": [13, 19, 28, 34, 35, 45, 47, 79, 94, 101, 106, 110, 112, 143, 150, 157, 168, 186, 193, 194, 207, 208, 210, 224, 225, 228, 229, 242, 275, 875], "72": [13, 15, 19, 28, 35, 45, 47, 70, 77, 78, 79, 94, 98, 101, 102, 110, 112, 115, 121, 136, 139, 148, 155, 161, 168, 176, 179, 181, 182, 183, 184, 193, 194, 198, 207, 208, 224, 225, 226, 227, 228, 229, 232, 242, 555, 564, 857, 875], "19it": [13, 19, 94, 101, 106, 110, 193, 194, 207, 224, 225, 226, 228, 229], "1225": [13, 207], "350": [13, 79, 114, 115, 133, 140, 155, 159, 163, 168, 207, 224], "382": [13, 79, 83, 207, 229, 242, 655], "383": [13, 50, 79, 194, 224, 229], "421": [13, 70, 104, 105, 108, 141, 161, 175, 181, 202, 220, 227, 228, 229], "88": [13, 19, 26, 35, 41, 45, 47, 50, 78, 79, 80, 101, 107, 110, 112, 118, 157, 168, 175, 179, 180, 181, 190, 193, 194, 207, 209, 224, 225, 226, 228, 229, 233, 234, 242, 352], "435": [13, 229], "69it": [13, 19, 101, 106, 110, 193, 194, 207, 224, 226, 228, 229, 233, 234], "106": [13, 16, 35, 71, 94, 95, 98, 119, 140, 144, 151, 165, 168, 171, 176, 179, 199, 203, 224, 229, 860], "451": [13, 207, 212, 224, 229, 236, 275], "142": [13, 19, 42, 81, 127, 161, 168, 171, 205, 224, 228, 275, 875], "472": [13, 194, 207, 224, 229, 242, 407], "160": [13, 79, 80, 82, 121, 168, 169, 170, 180, 187, 221, 223, 228, 229, 242, 336, 533, 567, 575, 578, 652, 657], "479": [13, 46, 56], "178": [13, 124, 168, 182, 183, 184, 194, 199, 207, 224, 228, 229, 242, 384], "485": [13, 194, 224, 275], "197": [13, 168, 194, 206, 212, 229, 851], "493": [13, 229, 231], "216": [13, 167, 168, 169, 173, 215, 218, 228], "235": [13, 56, 57, 157, 168, 180, 207, 224, 228], "506": [13, 89, 207, 224, 229], "97it": [13, 19, 34, 101, 106, 107, 110, 179, 194, 207, 224, 225, 228, 229, 233, 234], "254": [13, 43, 56, 168, 228, 229], "511": [13, 207, 229], "274": [13, 46, 79, 80, 121, 165, 168, 173, 190, 224, 229], "518": [13, 229], "293": [13, 35, 110, 168, 182, 207, 229, 242], "522": [13, 207], "314": [13, 168, 207, 229], "530": [13, 73, 79, 206, 229, 242], "333": [13, 35, 74, 110, 153, 168, 229], "533": [13, 223, 229], "352": [13, 68, 79, 104, 109, 168, 170, 193, 224, 229], "535": [13, 194], "368": [13, 79, 168, 170, 207, 229, 232], "388": [13, 79, 229, 242], "408": [13, 35, 79, 184, 224, 229], "539": 13, "427": [13, 19, 117, 128, 140, 147, 229], "540": [13, 79, 193, 207, 221, 229, 242, 295, 296], "98it": [13, 19, 34, 101, 106, 121, 193, 194, 207, 224, 225, 226, 228, 229, 233], "448": [13, 124, 170, 224, 229, 275, 875], "546": [13, 142, 229], "38": [13, 19, 28, 34, 35, 45, 47, 70, 72, 79, 80, 89, 91, 94, 101, 106, 112, 125, 139, 140, 141, 143, 157, 168, 179, 183, 190, 199, 205, 207, 224, 225, 226, 228, 229, 233, 234, 566], "468": [13, 202, 229, 242, 554, 598], "58it": [13, 19, 33, 34, 101, 102, 110, 193, 194, 224, 228, 229, 234], "488": [13, 50, 207], "552": [13, 35, 229], "508": [13, 134, 150, 225, 229], "554": [13, 229], "528": [13, 35, 142, 229], "557": [13, 193, 194, 207, 221, 223, 229, 242, 399], "561": 13, "570": [13, 19, 35, 79, 128, 130, 229], "564": [13, 47, 229, 242, 399], "590": [13, 68, 79, 229], "566": [13, 68, 89, 91, 194, 229], "610": [13, 45, 79, 135, 138, 207], "630": [13, 79, 186, 207, 229], "569": [13, 148, 229], "649": 13, "669": [13, 113, 173, 207, 229], "56": [13, 15, 19, 32, 35, 45, 47, 74, 78, 79, 80, 86, 101, 106, 110, 112, 128, 136, 150, 159, 168, 170, 171, 175, 179, 190, 194, 207, 209, 224, 225, 228, 229, 242, 256, 407, 556, 682, 683, 685, 686], "688": [13, 32, 194, 229], "708": [13, 229], "571": [13, 24, 25], "728": [13, 143], "572": [13, 229], "747": [13, 229], "767": [13, 99, 100, 194, 229, 242, 850], "787": 13, "573": [13, 207, 229], "807": [13, 30, 41, 56, 229], "574": [13, 128, 132], "827": [13, 207, 229], "575": [13, 199, 212, 229], "848": [13, 207, 229], "578": [13, 150, 193, 229], "868": [13, 194, 203, 229, 242, 569], "888": [13, 194, 229], "579": [13, 28, 56, 68], "37it": [13, 19, 33, 34, 101, 107, 194, 207, 224, 225, 228, 229, 234], "909": [13, 61, 66, 229], "930": [13, 55, 56, 79, 207, 229], "583": [13, 78, 83, 154, 163, 229, 242, 415], "950": [13, 79, 207, 239], "584": [13, 229], "971": [13, 229], "586": [13, 229], "991": [13, 194, 207, 229], "83": [13, 19, 35, 40, 47, 79, 101, 106, 112, 168, 170, 193, 194, 199, 202, 207, 208, 224, 225, 228, 229, 242, 333, 554, 598, 682, 683, 685, 686], "1011": [13, 34, 168, 221], "587": [13, 194, 207], "1031": [13, 34, 168, 207, 221, 833], "1051": [13, 115, 207, 242], "1072": [13, 207], "588": [13, 35, 229], "89": [13, 19, 34, 35, 47, 70, 77, 78, 79, 80, 101, 106, 110, 112, 135, 168, 183, 190, 193, 194, 198, 207, 224, 225, 228, 229, 242, 564, 857], "1093": [13, 194, 242, 399], "1113": [13, 168, 194], "15it": [13, 19, 33, 34, 101, 194, 207, 224, 228, 229], "93": [13, 19, 33, 35, 40, 47, 78, 101, 106, 110, 112, 168, 193, 194, 207, 224, 225, 228, 229, 242, 587], "1134": 13, "591": [13, 207], "1154": 13, "96": [13, 15, 18, 19, 44, 47, 80, 101, 105, 106, 110, 111, 112, 133, 161, 168, 170, 179, 183, 194, 204, 205, 207, 224, 225, 226, 227, 228, 229, 233, 234, 242, 264, 265, 411, 413, 425, 782, 854], "1174": 13, "1195": 13, "593": [13, 207, 229], "04it": [13, 19, 34, 101, 110, 193, 194, 207, 224, 229], "1216": 13, "594": 13, "vmax": [13, 19, 69, 86, 105, 110, 112, 114, 115, 122, 135, 140, 159, 175, 193, 194, 208, 209, 224, 226, 227, 238, 259, 262, 263, 264, 265, 271, 407, 414, 475, 476, 554, 555, 695, 697, 699, 742, 759, 773, 774, 777, 781, 785, 794, 797, 802, 803, 804, 875], "xaxi": [13, 125], "set_ticks_posit": 13, "bottom": [13, 69, 72, 73, 110, 118, 125, 139, 145, 160, 190, 215, 216, 224, 229, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 755, 772, 782, 800, 805, 830, 875], "r\u00e9mi": [13, 194, 242], "stanisla": [13, 16, 136, 194, 242, 408, 423, 875], "dehaen": [13, 16, 194, 242, 408, 423], "dynam": [13, 21, 27, 32, 33, 69, 92, 103, 104, 110, 165, 179, 194, 200, 202, 203, 210, 221, 242, 262, 265, 268, 273, 285, 287, 288, 289, 290, 295, 415, 446, 448, 475, 476, 522, 555, 556, 563, 674, 795, 830, 841, 851, 857, 860, 875], "represent": [13, 17, 20, 27, 43, 44, 92, 101, 110, 113, 139, 148, 159, 165, 167, 168, 169, 171, 174, 189, 194, 203, 213, 214, 232, 233, 234, 237, 238, 242, 262, 263, 264, 265, 272, 274, 358, 361, 442, 448, 475, 476, 506, 552, 555, 695, 697, 699, 722, 723, 725, 726, 727, 750, 786, 830, 841, 851, 860, 875], "tempor": [13, 16, 19, 27, 46, 59, 76, 83, 103, 104, 111, 112, 134, 135, 136, 139, 141, 145, 150, 164, 179, 183, 195, 196, 199, 200, 201, 202, 205, 208, 215, 224, 226, 227, 228, 229, 235, 236, 242, 257, 262, 264, 265, 267, 273, 274, 275, 352, 358, 413, 419, 427, 430, 433, 447, 448, 450, 471, 472, 473, 475, 476, 515, 519, 521, 522, 536, 538, 539, 552, 555, 557, 570, 583, 590, 591, 606, 610, 621, 623, 625, 630, 650, 651, 652, 653, 654, 655, 656, 657, 667, 669, 670, 671, 675, 676, 678, 685, 686, 687, 708, 711, 721, 722, 723, 724, 725, 726, 727, 742, 851, 852, 857, 875], "trend": [13, 65, 111, 140, 194, 242], "cognit": [13, 42, 43, 194, 200, 242, 253, 274, 358, 523, 862], "203": [13, 35, 40, 42, 49, 50, 58, 59, 78, 85, 90, 91, 92, 97, 109, 114, 117, 119, 121, 122, 129, 141, 149, 151, 155, 156, 157, 161, 168, 169, 171, 176, 177, 178, 179, 194, 198, 204, 205, 207, 208, 221, 228, 229, 242], "tic": [13, 194, 242], "129": [13, 14, 15, 16, 35, 61, 71, 86, 119, 126, 168, 169, 224, 228, 229, 237, 242], "decoding_time_generalization_condit": [13, 20], "Then": [14, 19, 45, 80, 107, 111, 113, 133, 134, 135, 139, 155, 160, 180, 189, 190, 205, 229, 239, 264, 265, 315, 432, 569, 690, 778, 834, 838, 845, 854, 857], "virtual": [14, 69, 97, 150, 203, 206, 262, 263, 264, 265, 312, 428, 475, 476, 582, 637, 640, 830, 832, 842, 875], "output": [14, 19, 32, 35, 40, 44, 46, 47, 59, 111, 112, 120, 125, 133, 134, 139, 142, 148, 150, 154, 160, 162, 163, 164, 167, 170, 171, 187, 193, 194, 200, 201, 203, 204, 205, 213, 214, 216, 219, 224, 226, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 301, 302, 303, 304, 305, 306, 307, 310, 312, 314, 315, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 379, 380, 381, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 409, 410, 412, 413, 417, 418, 419, 420, 423, 424, 426, 428, 432, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 450, 451, 452, 457, 458, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 517, 518, 519, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 548, 550, 551, 555, 557, 558, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 578, 579, 580, 581, 583, 584, 586, 587, 590, 591, 592, 595, 596, 597, 598, 600, 602, 603, 604, 605, 606, 607, 609, 610, 611, 613, 614, 615, 617, 618, 619, 620, 621, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 640, 641, 643, 644, 646, 647, 648, 649, 658, 659, 660, 661, 663, 665, 666, 667, 668, 669, 670, 671, 682, 683, 684, 685, 686, 687, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 713, 714, 717, 718, 722, 723, 725, 726, 727, 728, 731, 732, 737, 741, 742, 746, 750, 758, 760, 767, 770, 774, 775, 776, 777, 782, 783, 785, 786, 787, 792, 793, 795, 796, 798, 799, 800, 801, 805, 806, 807, 810, 811, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 833, 834, 838, 839, 842, 854, 857, 858, 860, 875], "asish": [14, 875], "asishrocks95": 14, "decod": [14, 16, 19, 20, 21, 151, 164, 165, 167, 193, 195, 196, 242, 259, 262, 264, 265, 267, 273, 310, 326, 352, 361, 370, 436, 448, 475, 483, 488, 490, 499, 516, 521, 522, 524, 533, 536, 552, 556, 604, 610, 615, 695, 742, 851, 865, 875], "unsupervisedspatialfilt": [14, 865, 875], "fastica": [14, 75, 203, 555], "aud_l": [14, 15, 18, 42, 176, 228, 262, 263, 772, 775], "vis_l": [14, 15, 18, 42, 228], "ie": [14, 53, 108, 259, 269, 273, 277, 600, 711, 721, 742, 767, 800, 801], "pca_data": 14, "evokedarrai": [14, 15, 16, 18, 21, 82, 98, 107, 182, 187, 194, 219, 229, 263, 264, 476, 528, 529, 612, 614, 830, 865, 875], "window_titl": [14, 190, 264, 265, 776], "ica_data": 14, "ev1": [14, 875], "437": [14, 20, 56, 82, 182, 224, 229], "decoding_unsupervised_spatial_filt": [14, 20], "erp": [15, 97, 99, 115, 126, 152, 153, 164, 171, 194, 197, 198, 200, 203, 205, 206, 242, 262, 264, 265, 267, 312, 351, 464, 475, 546, 555, 556, 610, 640, 681, 766, 785, 787, 814, 841, 861, 863, 875], "concaten": [15, 69, 73, 79, 110, 136, 150, 167, 187, 190, 202, 204, 213, 239, 262, 263, 264, 265, 359, 360, 361, 407, 416, 472, 475, 476, 558, 573, 574, 583, 660, 784, 875], "rescal": [15, 63, 111, 112, 366, 367, 368, 572, 695, 698, 802, 865, 875], "fed": 15, "classification_report": [15, 136], "confusion_matrix": [15, 136], "minmaxscal": 15, "n_filter": 15, "penalti": [15, 40, 46, 242, 472, 473, 863], "l1": [15, 40, 472, 473], "pred": 15, "report": [15, 136, 164, 172, 173, 208, 210, 225, 239, 242, 262, 263, 264, 267, 287, 289, 431, 448, 475, 476, 481, 544, 555, 572, 574, 588, 613, 694, 711, 721, 725, 772, 789, 795, 832, 834, 850, 853, 854, 855, 857, 863, 865, 875], "target_nam": [15, 136], "cm_normal": 15, "astyp": [15, 71, 133, 144, 159, 190, 193, 201, 213], "float": [15, 19, 31, 40, 65, 91, 113, 142, 143, 144, 148, 159, 168, 187, 193, 203, 213, 215, 224, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 288, 295, 296, 302, 303, 310, 319, 324, 326, 328, 339, 340, 341, 342, 345, 351, 352, 355, 356, 357, 358, 363, 368, 370, 407, 409, 411, 412, 413, 414, 415, 418, 419, 420, 424, 428, 431, 433, 435, 436, 442, 443, 445, 446, 447, 448, 450, 451, 452, 459, 465, 466, 470, 472, 473, 474, 475, 476, 485, 486, 499, 508, 510, 511, 515, 516, 518, 519, 522, 523, 524, 525, 526, 528, 529, 533, 534, 535, 537, 538, 539, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 583, 585, 587, 588, 589, 591, 592, 601, 626, 632, 633, 634, 635, 644, 645, 650, 651, 652, 653, 654, 655, 656, 657, 660, 662, 665, 666, 667, 669, 670, 673, 674, 677, 678, 679, 681, 682, 683, 685, 686, 687, 688, 689, 690, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 711, 713, 714, 719, 721, 722, 723, 724, 725, 726, 727, 731, 732, 742, 746, 747, 755, 759, 761, 762, 766, 770, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 785, 786, 787, 788, 789, 790, 792, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 810, 815, 828, 860, 875], "sum": [15, 28, 31, 41, 47, 60, 71, 80, 107, 111, 112, 115, 136, 143, 148, 160, 161, 167, 174, 182, 183, 200, 224, 225, 229, 239, 262, 263, 264, 265, 268, 269, 270, 273, 276, 277, 278, 284, 351, 356, 475, 476, 537, 555, 560, 647, 682, 683, 685, 686, 690, 696, 697, 699, 774, 854, 857, 860, 875], "imshow": [15, 16, 22, 69, 105, 113, 114, 125, 133, 135, 145, 159, 171, 194, 224, 226, 227, 228, 229, 262, 263, 264, 265, 319, 695, 743, 745, 780, 803, 812], "nearest": [15, 26, 78, 114, 118, 135, 139, 144, 159, 167, 181, 213, 224, 259, 262, 263, 264, 265, 268, 269, 270, 271, 273, 275, 276, 277, 278, 280, 358, 363, 407, 414, 475, 476, 554, 555, 569, 690, 695, 696, 697, 698, 699, 731, 742, 759, 760, 766, 774, 781, 785, 794, 797, 802, 804, 857, 860, 875], "blue": [15, 54, 55, 78, 81, 110, 130, 134, 141, 150, 155, 171, 174, 176, 177, 180, 189, 205, 232, 233, 239, 260, 742, 757, 758, 766, 770, 830], "tick_mark": 15, "ytick": [15, 125, 193, 200, 224], "precis": [15, 47, 69, 88, 133, 136, 156, 183, 200, 201, 208, 213, 221, 256, 262, 263, 268, 295, 296, 448, 475, 476, 496, 583, 651, 653, 672, 722, 723, 725, 726, 850, 854, 860, 875], "recal": [15, 88, 136, 148, 149, 155, 214, 651, 652, 654, 657], "f1": [15, 69, 88, 136, 651], "support": [15, 34, 61, 121, 133, 134, 135, 136, 139, 141, 148, 149, 150, 165, 169, 171, 180, 181, 184, 188, 189, 216, 237, 238, 239, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 269, 270, 272, 273, 275, 276, 277, 278, 295, 296, 302, 310, 316, 318, 338, 352, 357, 358, 366, 367, 368, 370, 388, 407, 414, 415, 423, 428, 437, 438, 440, 441, 445, 446, 447, 467, 474, 475, 476, 481, 486, 495, 498, 499, 500, 501, 505, 510, 514, 517, 518, 555, 566, 574, 583, 605, 608, 609, 623, 630, 631, 640, 643, 644, 660, 676, 678, 687, 690, 695, 697, 698, 699, 742, 758, 760, 763, 766, 770, 771, 772, 776, 781, 789, 795, 796, 800, 805, 806, 807, 808, 811, 830, 832, 834, 837, 839, 840, 841, 846, 852, 854, 861, 875], "288": [15, 35, 70, 71, 130, 140, 144, 159, 168, 170, 224, 229, 234, 242, 564], "macro": [15, 136], "avg": [15, 136, 143, 224, 254, 722, 723], "attribut": [15, 30, 31, 35, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 70, 77, 81, 84, 85, 114, 117, 118, 125, 139, 140, 142, 148, 149, 150, 165, 167, 168, 169, 171, 174, 175, 177, 178, 180, 181, 182, 199, 203, 204, 208, 209, 216, 219, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 300, 351, 363, 407, 408, 410, 411, 413, 414, 415, 417, 422, 425, 464, 465, 474, 475, 476, 482, 484, 485, 486, 487, 488, 491, 492, 493, 496, 498, 499, 500, 501, 502, 503, 504, 505, 514, 554, 555, 556, 607, 613, 617, 623, 645, 680, 695, 696, 697, 698, 699, 730, 742, 744, 766, 775, 788, 824, 830, 834, 852, 875], "nrow": [15, 45, 72, 118, 125, 145, 150, 175, 182, 209, 225, 264, 265, 407, 414, 555, 781, 785, 860, 875], "fitted_xdawn": 15, "get_channel_typ": [15, 139, 168, 262, 263, 264, 265, 267, 475, 476, 555, 695, 697, 698, 699, 875], "get_montag": [15, 113, 133, 134, 135, 262, 263, 264, 265, 267, 475, 476, 875], "cur_class": 15, "cur_pattern": 15, "pattern_evok": 15, "time_format": [15, 21, 98, 107, 110, 144, 175, 215, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 555, 695, 698, 781, 789, 795, 875], "show_nam": [15, 98, 118, 150, 169, 181, 225, 259, 262, 263, 264, 265, 271, 310, 407, 414, 475, 476, 554, 555, 569, 695, 697, 699, 759, 778, 781, 785, 792, 794, 797, 798, 802, 875], "h_pad": [15, 224], "w_pad": [15, 224], "bertrand": [15, 70, 77, 86, 194, 198, 242, 556, 564, 711, 721, 722, 725, 857, 875], "rivet": [15, 86, 194, 242, 556], "antoin": [15, 86, 194, 242, 556, 875], "souloumiac": [15, 86, 194, 242, 556], "virgini": [15, 86, 194, 242, 556], "attina": [15, 86, 194, 242, 556], "gibert": [15, 86, 194, 242, 556], "algorithm": [15, 27, 31, 69, 73, 76, 81, 82, 83, 86, 111, 124, 133, 151, 155, 156, 161, 165, 194, 198, 200, 203, 208, 224, 229, 232, 233, 234, 242, 267, 268, 272, 307, 352, 406, 407, 421, 428, 472, 475, 522, 541, 555, 556, 558, 563, 565, 566, 571, 574, 576, 581, 583, 590, 591, 592, 655, 672, 677, 732, 841, 846, 850, 851, 852, 863, 875], "enhanc": [15, 86, 193, 194, 225, 229, 242, 413, 555, 556, 574, 682, 683, 685, 686, 834, 853, 860, 863], "2035": [15, 86, 179, 194, 242, 556], "2043": [15, 86, 168, 194, 242, 556], "2009": [15, 35, 58, 86, 115, 170, 194, 203, 224, 225, 242, 273, 470, 556, 569, 682, 683, 685, 686, 850, 860, 875], "2012869": [15, 86, 194, 242, 556], "hubert": [15, 86, 242, 556, 875], "cecotti": [15, 86, 242, 556], "emmanuel": [15, 86, 200, 242, 556], "mabi": [15, 86, 242, 556], "j\u00e9r\u00e9mie": [15, 86, 242, 556], "mattout": [15, 86, 242, 556], "theoret": [15, 86, 193, 194, 200, 219, 242, 407, 556, 830], "effici": [15, 42, 44, 86, 190, 200, 224, 242, 257, 262, 263, 264, 265, 419, 475, 476, 555, 556, 557, 655, 697, 699, 725, 726, 852, 875], "p300": [15, 86, 190, 194, 200, 242, 556, 724, 727], "proceed": [15, 33, 40, 46, 86, 165, 179, 202, 203, 221, 242, 288, 295, 473, 556, 724, 727, 850, 857], "eusipco": [15, 86, 242, 556, 724, 727], "1382": [15, 86, 242, 556], "1386": [15, 86, 242, 556], "barcelona": [15, 86, 242, 556], "url": [15, 86, 111, 150, 194, 242, 352, 377, 382, 384, 388, 399, 400, 470, 522, 556, 677, 724, 727, 834, 857, 875], "ieeexplor": [15, 86, 242, 556, 724, 727], "7073970": [15, 86, 242, 556], "313": [15, 20, 35, 168, 207, 224, 229, 875], "decoding_xdawn_eeg": [15, 20], "cours": [16, 27, 32, 36, 38, 39, 41, 50, 56, 69, 73, 81, 88, 90, 93, 99, 111, 114, 134, 135, 141, 142, 150, 164, 165, 171, 174, 175, 176, 179, 185, 186, 194, 197, 200, 204, 205, 221, 229, 234, 242, 260, 261, 262, 263, 264, 265, 268, 269, 270, 273, 275, 276, 277, 278, 287, 289, 291, 294, 358, 408, 423, 441, 450, 460, 470, 472, 473, 475, 476, 510, 517, 521, 522, 536, 552, 613, 617, 623, 645, 659, 661, 662, 681, 695, 697, 698, 699, 741, 742, 766, 793, 800, 805, 830, 857, 860, 875], "techniqu": [16, 17, 20, 27, 59, 69, 72, 73, 74, 148, 150, 164, 165, 194, 197, 200, 202, 203, 205, 206, 208, 209, 210, 211, 221, 224, 242, 262, 263, 264, 265, 267, 370, 409, 418, 421, 443, 445, 446, 466, 475, 476, 552, 555, 610, 640, 830, 851, 857, 858, 863], "By": [16, 45, 69, 78, 81, 101, 102, 110, 133, 134, 141, 144, 148, 149, 150, 157, 165, 167, 168, 169, 170, 171, 177, 187, 188, 198, 200, 203, 204, 205, 206, 208, 213, 214, 216, 237, 254, 262, 263, 264, 265, 267, 268, 269, 270, 273, 276, 277, 278, 307, 324, 431, 448, 475, 476, 555, 558, 637, 660, 672, 688, 695, 696, 697, 698, 699, 768, 772, 780, 788, 795, 805, 857, 863, 875], "onto": [16, 18, 40, 72, 135, 141, 154, 165, 169, 174, 179, 193, 198, 204, 205, 208, 220, 268, 270, 276, 278, 415, 580, 644, 672, 742, 758, 793, 812, 851, 857, 875], "surrog": [16, 156, 182, 205, 363, 423, 469, 875], "expos": [16, 131, 193, 228, 839, 875], "exhibit": [16, 239, 264, 265, 269, 270, 273, 276, 277, 278, 857], "evolut": [16, 111, 555, 789], "compute_em": [16, 865, 875], "audl": [16, 71], "visl": [16, 71], "wai": [16, 21, 27, 34, 43, 44, 73, 112, 113, 125, 133, 139, 140, 141, 143, 148, 149, 150, 155, 159, 160, 165, 167, 168, 169, 170, 171, 176, 179, 189, 193, 198, 199, 200, 201, 203, 204, 205, 208, 210, 214, 215, 216, 219, 221, 224, 226, 227, 232, 234, 239, 242, 256, 257, 260, 261, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 352, 431, 441, 475, 476, 490, 515, 555, 557, 571, 577, 584, 606, 613, 644, 676, 677, 678, 684, 690, 695, 698, 709, 711, 721, 725, 742, 830, 832, 834, 837, 840, 850, 851, 852, 853, 856, 858, 875], "n_epoch": [16, 112, 139, 145, 148, 165, 193, 194, 219, 229, 238, 257, 262, 263, 312, 407, 408, 409, 412, 413, 414, 415, 416, 418, 419, 421, 422, 445, 446, 556, 563, 697, 698, 700, 701, 702, 722, 723, 724, 766, 772, 773, 875], "n_time": [16, 19, 31, 63, 65, 69, 74, 81, 112, 139, 145, 148, 158, 165, 189, 190, 193, 194, 203, 206, 213, 219, 221, 224, 228, 229, 232, 233, 234, 257, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 312, 346, 407, 408, 409, 412, 413, 414, 415, 416, 418, 420, 421, 423, 441, 443, 445, 446, 474, 475, 476, 495, 530, 556, 581, 645, 650, 651, 652, 653, 654, 655, 656, 657, 662, 669, 670, 671, 675, 681, 685, 686, 695, 697, 698, 699, 700, 701, 702, 713, 714, 718, 720, 722, 723, 724, 742, 766, 773, 774, 781, 802, 875], "993": [16, 18, 111, 229], "613": [16, 18], "145": [16, 18, 45, 72, 74, 80, 148, 157, 168, 194, 207, 220, 229], "x_transform": 16, "leav": [16, 136, 143, 171, 190, 197, 202, 213, 591, 832, 840, 842, 875], "recommend": [16, 41, 43, 44, 45, 69, 112, 133, 154, 157, 160, 171, 187, 189, 200, 201, 203, 204, 206, 208, 242, 257, 262, 263, 264, 265, 269, 273, 277, 280, 305, 307, 316, 328, 345, 352, 357, 358, 370, 406, 409, 415, 451, 470, 475, 476, 494, 505, 515, 522, 528, 535, 555, 560, 571, 583, 590, 606, 608, 612, 637, 643, 644, 681, 685, 686, 751, 758, 800, 832, 834, 838, 839, 840, 853, 854, 857, 875], "stratifi": [16, 424], "tend": [16, 161, 177, 200, 202, 203, 224, 565, 854, 857], "overfit": [16, 86, 193], "cannot": [16, 59, 160, 168, 171, 187, 189, 200, 201, 204, 206, 215, 234, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 288, 339, 341, 429, 475, 476, 522, 555, 574, 615, 644, 695, 742, 778, 800, 805, 822, 832, 834, 856, 875], "x_scale": 16, "futur": [16, 69, 170, 203, 216, 280, 413, 419, 447, 574, 834, 838, 852, 854, 856, 875], "filters_": [16, 18, 407, 408, 411, 414, 415, 425, 556, 875], "individu": [16, 26, 32, 37, 42, 43, 44, 99, 133, 139, 141, 143, 154, 158, 165, 169, 171, 174, 198, 204, 205, 209, 215, 216, 224, 238, 239, 242, 257, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 295, 296, 326, 347, 407, 448, 475, 476, 523, 531, 532, 571, 591, 613, 673, 679, 687, 724, 727, 760, 772, 776, 780, 793, 795, 821, 834, 850, 851, 856, 857, 875], "argsort": [16, 31, 115, 126, 142, 180], "reorder": [16, 47, 115, 262, 263, 264, 265, 475, 476, 486, 695, 697, 698, 699, 773, 803, 875], "kei": [16, 92, 93, 125, 133, 136, 139, 140, 141, 148, 149, 151, 165, 168, 169, 170, 180, 188, 204, 205, 213, 214, 216, 219, 255, 256, 257, 259, 260, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 281, 286, 295, 296, 300, 322, 323, 352, 356, 357, 363, 366, 367, 368, 382, 388, 399, 407, 414, 416, 423, 431, 434, 436, 450, 451, 452, 455, 467, 470, 472, 473, 475, 476, 507, 511, 521, 522, 533, 545, 554, 555, 557, 569, 571, 572, 574, 594, 607, 609, 626, 639, 646, 647, 648, 660, 664, 680, 681, 682, 683, 685, 686, 695, 697, 698, 699, 730, 732, 742, 759, 764, 765, 766, 770, 772, 773, 774, 775, 776, 778, 780, 781, 782, 785, 794, 795, 797, 798, 800, 802, 804, 805, 806, 828, 834, 840, 851, 863, 875], "ems_av": 16, "u": [16, 19, 21, 47, 69, 102, 110, 113, 114, 136, 140, 143, 145, 148, 150, 159, 165, 170, 171, 179, 180, 182, 187, 188, 193, 199, 200, 203, 204, 205, 213, 214, 219, 224, 242, 253, 254, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 441, 475, 476, 530, 834, 837, 842, 853, 856, 857, 860, 875], "schurger": [16, 194, 242, 408, 423], "thu": [16, 18, 43, 47, 55, 69, 101, 112, 139, 140, 148, 151, 169, 170, 174, 179, 181, 187, 194, 200, 203, 205, 206, 208, 224, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 345, 409, 418, 430, 441, 443, 445, 475, 476, 522, 530, 533, 557, 723, 726, 830, 834, 850, 851, 854, 857, 875], "equalize_event_count": [16, 148, 150, 165, 228, 229, 234, 262, 263, 698, 875], "103": [16, 35, 50, 110, 112, 119, 168, 207, 224, 860], "112": [16, 69, 113, 133, 163, 168, 170, 218, 224, 229, 242, 563, 860], "aaron": [16, 194, 242, 408, 423], "sebastien": [16, 194, 242, 408, 423, 875], "marti": [16, 194, 242, 408, 423, 875], "reveal": [16, 99, 111, 143, 169, 190, 194, 200, 239, 242, 408, 423, 724, 727], "898": [16, 20, 150, 229], "ems_filt": [16, 20], "continu": [17, 19, 20, 21, 27, 96, 100, 139, 141, 144, 147, 150, 160, 167, 187, 194, 195, 196, 197, 199, 200, 203, 204, 208, 211, 214, 218, 219, 224, 237, 242, 254, 256, 262, 263, 264, 265, 267, 343, 351, 355, 357, 361, 390, 398, 402, 407, 413, 414, 415, 419, 447, 448, 475, 476, 488, 494, 495, 505, 515, 516, 552, 554, 555, 558, 567, 575, 576, 601, 606, 679, 680, 681, 695, 697, 698, 699, 720, 766, 778, 785, 787, 830, 834, 850, 851, 856, 860, 863, 875], "spoc": [17, 20, 27, 242, 262, 267, 407, 415, 488, 516, 556, 865, 875], "xdawn": [17, 20, 27, 76, 83, 242, 259, 262, 264, 265, 267, 357, 370, 407, 411, 414, 422, 475, 552, 610, 773, 865, 875], "em": [17, 20, 27, 194, 262, 264, 265, 267, 423, 475, 552, 610, 865, 875], "recept": [17, 20, 27, 164, 195, 196, 242, 248, 267, 310, 326, 370, 413, 419, 447, 476, 804, 851], "spectro": [17, 20, 27, 112, 164, 195, 196, 262, 264, 265, 267, 413, 415, 419, 447, 488, 516, 714], "ssd": [17, 20, 27, 262, 264, 265, 267, 488, 516, 714, 865, 875], "mvpa": [18, 164, 195, 196, 259, 262, 264, 265, 267, 273, 352, 407, 408, 409, 410, 411, 412, 414, 416, 417, 422, 424, 425, 448, 522, 533, 556, 615, 742, 875], "neurophysiolog": [18, 19, 831], "interpret": [18, 19, 101, 141, 150, 158, 187, 194, 200, 201, 215, 226, 228, 229, 234, 242, 257, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 276, 277, 278, 280, 301, 308, 311, 325, 327, 352, 353, 355, 357, 366, 409, 410, 411, 413, 417, 420, 423, 424, 425, 428, 445, 446, 450, 463, 465, 466, 475, 476, 483, 490, 497, 499, 514, 517, 518, 522, 528, 529, 538, 539, 554, 555, 557, 560, 567, 568, 570, 571, 572, 574, 577, 580, 589, 591, 598, 643, 646, 647, 648, 651, 660, 663, 681, 682, 683, 684, 685, 686, 690, 695, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 713, 714, 722, 723, 724, 725, 726, 742, 766, 772, 773, 774, 776, 777, 778, 779, 786, 791, 793, 796, 834, 837, 838, 845, 857, 875], "romain": [18, 875], "trachel": [18, 875], "trachelr": 18, "sample_path": [18, 122, 133, 134, 135], "meg_data": [18, 139], "reshap": [18, 136, 193, 224, 225, 228, 232, 234, 413, 422], "scaler": [18, 865, 875], "coef": [18, 19, 193, 194, 425], "revers": [18, 19, 71, 142, 145, 171, 187, 197, 199, 200, 202, 203, 205, 213, 259, 264, 265, 269, 270, 273, 275, 276, 277, 278, 776, 778, 780, 781, 800, 805, 875], "sequenti": [18, 139, 149, 219, 260, 261, 262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 280, 333, 352, 353, 355, 357, 410, 417, 420, 423, 424, 450, 463, 465, 475, 476, 514, 517, 518, 528, 529, 538, 539, 560, 567, 568, 643, 646, 647, 648, 660, 682, 683, 684, 685, 686, 695, 697, 698, 699, 700, 701, 702, 703, 704, 705, 713, 714, 722, 723, 724, 725, 726, 732, 742, 761, 766, 774, 777, 796, 800, 805, 806, 830], "kai": [18, 19, 143, 242, 411, 413, 425, 431], "g\u00f6rgen": [18, 19, 242, 411, 413, 425], "dylan": [18, 19, 81, 242, 411, 413, 425, 555], "hayn": [18, 19, 242, 411, 413, 425], "benjamin": [18, 19, 242, 407, 411, 413, 425], "blankertz": [18, 19, 242, 407, 411, 413, 425], "felix": [18, 19, 110, 242, 411, 413, 425, 875], "bie\u00dfmann": [18, 19, 242, 411, 413, 425], "On": [18, 19, 69, 70, 165, 167, 198, 200, 203, 204, 239, 242, 254, 280, 411, 413, 425, 436, 456, 555, 564, 832, 834, 839, 840, 842, 852, 857, 875], "multivari": [18, 19, 88, 92, 136, 161, 193, 194, 242, 352, 411, 413, 425, 649, 851, 854, 875], "110": [18, 19, 21, 35, 41, 79, 80, 110, 133, 157, 168, 229, 242, 411, 413, 425, 560], "067": [18, 19, 242, 411, 413, 425], "195": [18, 20, 45, 83, 165, 168, 175, 180, 194, 224, 229, 242], "1033": [18, 20, 168, 194], "linear_model_pattern": [18, 20], "reproduc": [19, 45, 69, 91, 150, 193, 214, 295, 508, 555, 581, 600, 647, 648, 649, 658, 659, 661, 682, 683, 684, 685, 686, 834, 875], "lalor": [19, 193, 242, 413, 851], "mtrf": [19, 193, 242, 413, 865, 875], "receptivefield": [19, 193, 419, 865, 875], "speech": [19, 193, 242, 413, 587, 724, 727, 851], "envelop": [19, 80, 111, 112, 113, 135, 145, 194, 262, 263, 264, 265, 414, 475, 476, 560, 851, 875], "128": [19, 20, 24, 41, 50, 83, 86, 118, 128, 157, 159, 167, 168, 169, 170, 175, 221, 228, 229, 262, 263, 406, 760, 851, 875], "try": [19, 31, 69, 73, 81, 139, 140, 142, 150, 155, 157, 160, 161, 166, 170, 175, 179, 200, 201, 202, 203, 204, 205, 213, 220, 221, 239, 272, 280, 424, 444, 457, 483, 490, 555, 569, 758, 816, 832, 833, 834, 839, 852, 854, 855, 875], "known": [19, 44, 86, 110, 112, 143, 150, 155, 159, 164, 179, 222, 223, 224, 259, 262, 263, 264, 265, 266, 267, 268, 273, 352, 362, 442, 448, 475, 476, 483, 490, 505, 521, 522, 536, 591, 615, 618, 651, 659, 662, 677, 742, 830, 846, 851, 857, 875], "literatur": [19, 143, 239, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 695, 698, 830], "simpli": [19, 43, 134, 142, 143, 145, 148, 169, 170, 187, 198, 199, 203, 205, 208, 214, 215, 224, 238, 239, 257, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 295, 296, 475, 476, 571, 572, 695, 698, 832, 834, 837, 842, 851, 857, 875], "chri": [19, 112, 135, 193, 194, 242, 875], "holdgraf": [19, 112, 113, 135, 193, 194, 242, 413, 875], "choldgraf": [19, 112, 113, 135, 193], "nicola": [19, 47, 242, 655, 875], "barascud": [19, 875], "sphinx_gallery_thumbnail_numb": [19, 118, 194], "scipi": [19, 31, 95, 109, 155, 170, 171, 193, 200, 204, 221, 224, 225, 226, 229, 232, 233, 239, 254, 259, 262, 263, 264, 265, 269, 270, 271, 273, 274, 275, 276, 277, 278, 280, 316, 327, 356, 358, 407, 409, 414, 418, 442, 443, 445, 446, 447, 450, 475, 476, 554, 555, 563, 569, 643, 675, 677, 682, 683, 685, 686, 688, 689, 694, 695, 697, 698, 699, 711, 714, 721, 742, 759, 774, 781, 785, 794, 796, 797, 802, 804, 833, 834, 854, 856, 859, 872, 875], "loadmat": [19, 193], "collect": [19, 69, 125, 150, 156, 167, 171, 182, 183, 189, 190, 198, 208, 239, 242, 255, 259, 262, 263, 264, 265, 319, 407, 414, 434, 475, 476, 554, 555, 680, 695, 697, 699, 756, 766, 774, 781, 785, 797, 802, 804, 830, 834, 849, 850, 857, 860, 875], "listen": [19, 851, 856, 863], "know": [19, 40, 125, 141, 143, 155, 159, 168, 171, 188, 198, 200, 203, 204, 205, 215, 228, 264, 265, 295, 296, 352, 356, 357, 366, 367, 368, 407, 414, 450, 451, 470, 472, 473, 530, 533, 636, 782, 834, 837, 840, 841, 852, 854, 857, 875], "primarili": [19, 69, 169, 197, 200, 409, 475, 476, 597, 764, 830, 841], "speech_data": [19, 193], "down": [19, 21, 69, 110, 133, 150, 160, 193, 194, 200, 204, 215, 216, 226, 228, 259, 260, 262, 263, 264, 265, 271, 272, 407, 414, 447, 475, 476, 554, 555, 581, 682, 683, 685, 686, 695, 697, 699, 742, 770, 772, 773, 774, 778, 781, 785, 794, 795, 797, 802, 832, 834, 856, 875], "biosemi128": [19, 169], "rawarrai": [19, 63, 65, 69, 74, 81, 112, 158, 187, 189, 203, 206, 219, 263, 265, 494, 830, 865, 875], "ln": [19, 90, 711, 721, 725, 840, 857], "800": [19, 33, 43, 44, 51, 56, 79, 124, 125, 132, 134, 143, 154, 155, 159, 165, 174, 176, 200, 207, 229, 232, 269, 270, 273, 276, 277, 278, 466, 742, 800, 805], "alpha": [19, 21, 28, 35, 39, 40, 44, 46, 49, 50, 59, 69, 94, 95, 108, 110, 111, 114, 133, 134, 136, 145, 150, 171, 176, 180, 189, 193, 204, 210, 224, 226, 229, 234, 238, 239, 258, 262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 352, 413, 419, 465, 470, 472, 473, 475, 476, 538, 617, 673, 679, 682, 683, 685, 686, 695, 697, 699, 742, 758, 761, 774, 778, 790, 796, 800, 805, 875], "ln1": 19, "lw": [19, 39, 133, 143, 171, 180, 193, 208, 210, 221, 711, 721, 875], "frameon": [19, 125], "float64": [19, 63, 65, 69, 74, 81, 90, 92, 112, 158, 166, 189, 203, 206, 219, 474, 675, 857], "7677": 19, "7676": 19, "119": [19, 80, 83, 89, 121, 133, 134, 159, 168, 194, 224, 875], "938": [19, 207, 229], "construct": [19, 42, 68, 101, 139, 143, 161, 167, 177, 179, 182, 183, 187, 190, 194, 200, 203, 204, 205, 208, 221, 224, 238, 239, 262, 263, 264, 265, 269, 273, 275, 277, 278, 282, 283, 295, 311, 358, 431, 442, 443, 445, 446, 475, 476, 492, 569, 607, 640, 644, 645, 681, 690, 701, 704, 755, 761, 795, 800, 806, 830, 850, 857, 875], "relationship": [19, 22, 142, 159, 202, 224, 413, 419, 451, 711, 721, 722, 723, 725, 726, 830, 851, 856, 857], "rf": [19, 193, 413], "feature_nam": [19, 193, 413, 875], "corrcoef": [19, 22, 47, 413], "extra": [19, 79, 80, 144, 159, 165, 168, 169, 190, 205, 213, 220, 259, 262, 263, 264, 265, 271, 303, 304, 310, 333, 335, 407, 408, 414, 426, 475, 476, 554, 555, 569, 695, 697, 699, 738, 759, 766, 774, 776, 778, 781, 782, 785, 792, 794, 796, 797, 798, 802, 804, 830, 838, 842, 875], "inclus": [19, 121, 139, 142, 184, 254, 262, 263, 272, 275, 377, 399, 400, 452, 470, 472, 473, 486, 533, 550, 555, 574, 687, 696, 698, 875], "n_delai": [19, 413], "held": [19, 78, 170, 193, 856], "coef_": [19, 193, 411, 413, 554], "n_output": [19, 413, 419], "n_featur": [19, 193, 194, 407, 408, 409, 411, 412, 413, 414, 415, 418, 419, 422, 556, 581, 675], "delays_": [19, 193, 413], "mean_coef": 19, "mean_scor": 19, "ix_ch": 19, "40it": [19, 33, 101, 107, 193, 207, 224, 225, 228, 229, 233, 234], "sometim": [19, 27, 60, 81, 110, 113, 115, 125, 126, 133, 139, 143, 155, 160, 167, 168, 188, 189, 198, 200, 201, 203, 205, 206, 224, 259, 262, 263, 264, 265, 267, 271, 407, 414, 475, 476, 491, 554, 555, 569, 601, 607, 695, 697, 699, 759, 766, 774, 781, 785, 794, 797, 802, 804, 830, 834, 842, 850, 854, 857, 875], "well": [19, 22, 32, 37, 47, 69, 77, 114, 118, 133, 135, 136, 139, 142, 143, 149, 151, 159, 161, 164, 165, 168, 171, 174, 181, 183, 187, 188, 190, 193, 197, 198, 200, 202, 203, 204, 205, 206, 208, 211, 213, 219, 221, 229, 237, 239, 242, 262, 263, 264, 265, 272, 273, 318, 340, 352, 366, 407, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 423, 431, 446, 447, 475, 476, 555, 556, 583, 590, 695, 711, 713, 721, 724, 725, 726, 727, 772, 774, 788, 830, 832, 834, 840, 846, 851, 852, 854, 856, 857, 859, 863, 875], "recreat": [19, 125, 139, 200, 765], "time_plot": 19, "180": [19, 24, 35, 79, 90, 109, 155, 160, 163, 168, 177, 190, 197, 199, 201, 203, 207, 224, 228, 269, 270, 273, 276, 277, 278, 441, 747, 875], "highlight": [19, 21, 88, 93, 112, 118, 149, 150, 171, 174, 175, 201, 203, 208, 215, 259, 260, 262, 263, 264, 265, 272, 407, 414, 475, 476, 554, 695, 697, 699, 759, 770, 774, 776, 781, 797, 802, 804, 834, 875], "max_coef": 19, "pcolormesh": [19, 112, 193, 875], "shade": [19, 193, 204, 751, 766, 807, 808, 875], "gouraud": [19, 193], "ncoeffici": 19, "setp": [19, 193, 201], "get_xticklabel": [19, 193], "2c": [19, 857], "ix_plot": 19, "argmin": [19, 118, 143, 239], "vlim": [19, 69, 78, 98, 107, 140, 141, 202, 205, 209, 229, 239, 259, 262, 263, 264, 265, 271, 407, 414, 475, 476, 554, 555, 695, 697, 699, 759, 774, 781, 785, 794, 797, 802, 804, 875], "nfor": 19, "anoth": [19, 31, 45, 69, 85, 93, 124, 140, 142, 143, 144, 148, 150, 154, 155, 160, 166, 170, 179, 187, 199, 200, 203, 204, 208, 214, 215, 216, 224, 229, 262, 263, 264, 265, 268, 269, 270, 272, 273, 274, 276, 277, 278, 280, 312, 352, 353, 355, 357, 358, 410, 417, 420, 423, 424, 433, 450, 463, 465, 475, 476, 503, 514, 517, 518, 528, 529, 538, 539, 541, 560, 567, 568, 643, 646, 647, 648, 660, 666, 682, 683, 684, 685, 686, 697, 699, 700, 701, 702, 703, 704, 705, 713, 714, 722, 723, 724, 725, 726, 731, 732, 763, 774, 777, 795, 796, 815, 830, 832, 834, 842, 851, 856, 857, 860, 875], "case": [19, 44, 58, 69, 72, 88, 92, 93, 101, 112, 118, 121, 125, 139, 142, 143, 148, 154, 160, 161, 164, 167, 168, 170, 171, 179, 180, 184, 187, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 213, 214, 215, 224, 225, 226, 232, 234, 237, 239, 242, 256, 257, 259, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 286, 295, 296, 300, 306, 316, 327, 351, 352, 356, 357, 366, 367, 368, 369, 407, 414, 424, 431, 436, 447, 450, 451, 458, 465, 470, 472, 473, 475, 476, 483, 490, 497, 505, 510, 515, 521, 522, 523, 524, 525, 526, 533, 544, 550, 558, 569, 581, 600, 606, 623, 637, 640, 655, 660, 681, 682, 695, 697, 698, 699, 707, 713, 723, 726, 730, 742, 760, 766, 773, 775, 778, 779, 782, 800, 830, 834, 842, 854, 856, 857, 875], "aim": [19, 136, 157, 176, 220, 221, 301, 353, 354, 355], "exploit": [19, 86, 875], "context": [19, 42, 114, 170, 171, 174, 194, 200, 224, 262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 280, 352, 353, 355, 357, 407, 410, 417, 420, 423, 424, 450, 463, 465, 475, 476, 514, 517, 518, 523, 528, 529, 538, 539, 544, 555, 560, 567, 568, 643, 646, 647, 648, 660, 682, 683, 684, 685, 686, 697, 699, 700, 701, 702, 703, 704, 705, 713, 714, 722, 723, 724, 725, 726, 736, 737, 772, 774, 777, 789, 795, 796, 813, 814, 840, 856, 875], "treat": [19, 21, 150, 171, 194, 205, 206, 224, 228, 262, 263, 266, 272, 486, 488, 546, 548, 682, 683, 685, 686, 698, 766, 784, 875], "independ": [19, 69, 73, 81, 107, 110, 150, 157, 161, 165, 178, 179, 180, 194, 197, 199, 200, 202, 203, 204, 208, 215, 224, 242, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 356, 410, 417, 422, 475, 476, 555, 556, 563, 569, 574, 581, 583, 677, 679, 682, 683, 685, 686, 689, 722, 723, 725, 726, 785, 787, 789, 841, 850, 851, 854, 857, 875], "therefor": [19, 69, 92, 133, 135, 141, 145, 150, 157, 161, 168, 169, 188, 194, 198, 199, 200, 202, 203, 206, 208, 224, 239, 262, 263, 272, 316, 318, 431, 475, 491, 494, 555, 601, 607, 608, 612, 834, 838, 850, 856, 857], "qualiti": [19, 119, 156, 165, 171, 199, 200, 203, 205, 216, 239, 242, 257, 262, 263, 264, 265, 475, 476, 514, 555, 571, 587, 786, 834, 850, 856, 857, 863, 875], "expens": [19, 164, 165, 171, 591, 858, 863, 875], "especi": [19, 55, 69, 110, 118, 125, 142, 148, 161, 165, 168, 197, 198, 200, 202, 203, 207, 213, 239, 264, 265, 273, 475, 476, 555, 575, 591, 682, 683, 685, 686, 782, 830, 834, 837, 850, 854, 857, 875], "lag": [19, 27, 76, 83, 193, 221, 242, 262, 264, 265, 267, 413, 419, 433, 475, 552, 610, 875], "footcit": [19, 381, 834], "crosseetal2016": 19, "earlier": [19, 144, 166, 170, 190, 197, 200, 213, 264, 265, 295, 296, 352, 356, 357, 366, 367, 368, 407, 414, 449, 450, 451, 470, 472, 473, 533, 782, 838, 875], "wherea": [19, 79, 133, 135, 142, 155, 157, 167, 174, 194, 200, 201, 202, 208, 224, 256, 262, 263, 281, 295, 296, 475, 476, 483, 772, 795, 801, 830, 857, 861, 875], "chang": [19, 31, 44, 45, 112, 125, 133, 135, 141, 144, 148, 150, 155, 157, 160, 166, 169, 170, 171, 174, 175, 177, 183, 187, 188, 190, 193, 198, 203, 204, 205, 209, 210, 214, 215, 216, 220, 224, 227, 232, 234, 239, 242, 254, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 295, 296, 302, 305, 307, 310, 318, 333, 338, 339, 341, 345, 358, 360, 383, 407, 414, 428, 436, 441, 442, 444, 446, 448, 450, 451, 460, 466, 470, 472, 473, 475, 476, 495, 498, 499, 510, 514, 517, 518, 533, 543, 544, 554, 555, 557, 569, 574, 580, 581, 583, 605, 613, 631, 640, 642, 643, 644, 660, 687, 690, 695, 697, 698, 699, 737, 742, 752, 758, 759, 760, 766, 767, 770, 771, 772, 773, 774, 776, 778, 781, 782, 783, 785, 787, 789, 792, 794, 795, 796, 797, 798, 800, 802, 804, 805, 806, 807, 812, 821, 835, 840, 842, 850, 853, 854, 857, 860, 861], "affect": [19, 49, 70, 79, 140, 141, 148, 150, 166, 189, 197, 198, 200, 201, 203, 204, 206, 208, 239, 242, 255, 257, 262, 263, 264, 265, 269, 272, 273, 277, 363, 399, 448, 449, 475, 476, 495, 571, 613, 647, 648, 723, 726, 795, 800, 834, 850, 857, 875], "obvious": [19, 157, 208, 239], "cf": [19, 144, 154, 711, 721, 725], "next": [19, 54, 55, 58, 112, 114, 119, 134, 135, 140, 144, 149, 150, 155, 156, 160, 165, 170, 174, 176, 178, 187, 189, 197, 199, 203, 205, 209, 213, 214, 215, 224, 238, 239, 259, 262, 263, 264, 265, 271, 352, 406, 407, 414, 475, 476, 554, 555, 569, 695, 697, 698, 699, 724, 727, 759, 760, 781, 785, 794, 797, 802, 832, 834, 842, 857, 860, 875], "section": [19, 73, 114, 135, 136, 139, 141, 143, 148, 149, 150, 155, 164, 165, 166, 170, 171, 174, 187, 188, 189, 197, 199, 200, 201, 203, 206, 208, 213, 214, 239, 257, 259, 260, 261, 262, 263, 264, 265, 271, 272, 274, 295, 296, 310, 388, 407, 414, 428, 434, 442, 444, 475, 476, 492, 503, 554, 555, 569, 574, 584, 695, 697, 699, 759, 774, 781, 785, 794, 797, 802, 804, 834, 838, 850, 856, 857, 858, 860, 875], "haufeetal2014": 19, "sr": 19, "1e4": 19, "mean_pattern": 19, "max_pattern": 19, "8384": [19, 875], "799": [19, 143], "1267": [19, 194], "1667": 19, "207": [19, 35, 112, 157, 168, 171, 194, 228, 229, 242], "2074": 19, "2461": 19, "354": [19, 45, 79, 110, 168, 175, 180, 194, 224, 229], "2751": 19, "2980": 19, "498": [19, 88, 229], "3149": 19, "3274": 19, "640": [19, 79, 182, 207, 229], "3405": 19, "712": [19, 229], "3510": 19, "784": [19, 229], "3602": 19, "46it": [19, 33, 34, 101, 110, 193, 194, 225, 226, 229, 232, 233], "857": [19, 194, 229], "3686": 19, "929": [19, 97, 100, 194], "3756": 19, "1001": [19, 860], "3817": 19, "1074": 19, "3875": 19, "1147": 19, "3926": 19, "1206": [19, 194], "3903": 19, "1275": [19, 41], "3930": 19, "1333": [19, 98, 168, 232, 234], "3904": 19, "1395": 19, "3899": 19, "35it": [19, 33, 34, 106, 107, 193, 194, 207, 224, 225, 226, 228, 229], "1467": [19, 242, 352], "3937": 19, "1534": 19, "3952": 19, "1607": 19, "3992": 19, "1681": 19, "4032": 19, "1754": 19, "4064": 19, "1827": [19, 224], "4094": 19, "1900": 19, "4122": 19, "1973": 19, "4148": 19, "2045": [19, 41], "4168": 19, "2117": 19, "4187": 19, "2191": 19, "4210": 19, "2252": 19, "4185": 19, "2321": [19, 34, 168, 221], "4191": 19, "2381": 19, "4164": 19, "2446": 19, "4156": 19, "2517": 19, "4172": 19, "2590": 19, "4193": 19, "2663": 19, "4211": 19, "2736": 19, "4230": 19, "34": [19, 25, 26, 28, 34, 35, 41, 45, 47, 55, 56, 67, 70, 79, 101, 106, 107, 110, 112, 114, 144, 168, 170, 180, 184, 193, 194, 200, 207, 208, 220, 224, 225, 226, 228, 229, 231, 233, 234, 242, 564, 676], "2810": 19, "4250": 19, "2884": 19, "4271": 19, "06it": [19, 34, 106, 110, 193, 194, 207, 224, 225, 228, 229], "2958": 19, "4287": [19, 35], "3032": 19, "4304": 19, "3105": 19, "4316": 19, "3176": 19, "4319": 19, "3243": 19, "4312": 19, "3312": 19, "4311": 19, "3376": 19, "4291": 19, "3448": 19, "4302": 19, "3521": 19, "4315": 19, "3592": 19, "4320": 19, "3663": 19, "4323": 19, "3736": 19, "4332": 19, "3795": 19, "4296": 19, "3864": 19, "3933": 19, "4295": 19, "4002": [19, 35, 857], "4074": 19, "4145": 19, "4309": 19, "4215": 19, "4310": 19, "4283": 19, "4305": 19, "4355": 19, "4314": 19, "4425": 19, "4497": 19, "4324": 19, "4569": 19, "4333": 19, "4642": 19, "4342": 19, "4714": 19, "4350": [19, 184], "57": [19, 34, 35, 40, 45, 79, 101, 106, 110, 112, 115, 122, 124, 135, 136, 149, 150, 156, 168, 179, 182, 183, 190, 193, 194, 205, 207, 215, 224, 225, 226, 228, 229, 234, 237, 242, 262, 263, 264, 265, 333, 472, 475, 476, 697, 699, 707, 713, 875], "4786": 19, "4356": 19, "4858": 19, "4362": 19, "4931": 19, "4370": 19, "5005": 19, "4380": 19, "5074": 19, "4375": 19, "5146": 19, "4379": 19, "5218": 19, "4383": 19, "5288": 19, "5353": [19, 333], "5417": 19, "4343": 19, "5480": 19, "5543": 19, "4297": 19, "67": [19, 33, 35, 47, 57, 79, 80, 94, 101, 105, 106, 110, 112, 114, 136, 148, 157, 168, 171, 175, 177, 180, 190, 193, 194, 207, 224, 225, 226, 228, 229, 233, 234, 242, 522, 875], "5608": 19, "5667": 19, "4252": 19, "5733": 19, "4243": 19, "5795": 19, "4223": 19, "5858": 19, "4206": 19, "5923": 19, "4196": 19, "5985": 19, "4180": 19, "6050": 19, "6115": 19, "4166": 19, "6178": 19, "4152": 19, "6243": 19, "6310": 19, "4144": 19, "6376": 19, "4142": 19, "6441": 19, "4136": 19, "6503": 19, "6564": 19, "4105": [19, 203, 242], "6638": 19, "4131": 19, "6708": 19, "6766": 19, "4115": 19, "6822": 19, "4083": 19, "6877": 19, "4048": 19, "14it": [19, 34, 101, 107, 110, 193, 207, 224, 225, 228, 229, 232], "6932": 19, "4016": 19, "6986": 19, "3984": 19, "7040": 19, "3951": 19, "7104": 19, "7158": 19, "3922": 19, "7214": 19, "7289": 19, "3936": 19, "7363": 19, "3968": 19, "7438": 19, "4004": [19, 857], "7510": 19, "4028": 19, "7582": 19, "4051": 19, "7656": 19, "4079": 19, "7731": 19, "4108": 19, "7805": 19, "4132": 19, "7878": 19, "7950": 19, "4167": 19, "8023": 19, "4186": 19, "8097": 19, "4207": 19, "8168": 19, "4217": 19, "8243": 19, "4238": 19, "8320": [19, 875], "4264": [19, 333], "1602": 19, "144": [19, 45, 80, 168, 170, 194, 202, 209, 224, 228, 229, 275, 875], "2431": [19, 34, 168, 221], "217": [19, 167, 168, 224, 229], "2907": 19, "285": [19, 168, 207, 229], "3163": [19, 32], "3355": 19, "3530": 19, "3645": 19, "3755": 19, "3840": [19, 182], "714": [19, 70, 166, 181, 202, 229], "3909": 19, "785": 19, "3962": 19, "860": [19, 50, 79, 194, 207, 229], "928": [19, 207, 229], "4052": 19, "996": [19, 229], "4066": 19, "1065": 19, "4087": 19, "1137": [19, 40, 242, 472], "4118": 19, "1203": [19, 207], "4116": 19, "1278": 19, "4160": 19, "1350": [19, 35], "4182": 19, "1403": 19, "1469": [19, 200, 242], "1531": [19, 34, 165, 168, 221, 254], "4096": [19, 21, 181, 266], "1599": [19, 207], "4103": 19, "1665": 19, "1731": [19, 32, 34, 35, 168, 221], "4102": 19, "1791": 19, "4073": 19, "1856": [19, 225], "4070": 19, "1925": 19, "4085": 19, "05it": [19, 101, 110, 193, 194, 207, 224, 225, 228, 229, 234], "1992": 19, "4090": 19, "2038": 19, "4015": 19, "2082": 19, "3935": 19, "2147": 19, "3943": 19, "2220": 19, "3979": 19, "2291": 19, "2361": 19, "4024": 19, "2434": 19, "4053": 19, "2509": 19, "4086": 19, "2583": 19, "4114": 19, "2656": 19, "4137": 19, "2708": 19, "4084": 19, "2758": 19, "2808": 19, "3974": 19, "2858": 19, "3881": 19, "2959": 19, "3843": 19, "3026": 19, "3859": 19, "3095": 19, "3883": 19, "3162": 19, "3898": 19, "3230": 19, "3916": 19, "3300": 19, "3939": 19, "3371": 19, "3965": [19, 201], "3435": 19, "3502": 19, "3975": 19, "3569": 19, "3982": 19, "3638": 19, "3995": 19, "3705": 19, "3777": 19, "3848": 19, "4049": [19, 203, 242, 555], "3908": 19, "4030": 19, "3964": [19, 94], "4001": [19, 94, 857], "4011": 19, "4075": 19, "3944": 19, "4202": 19, "3941": 19, "4260": 19, "4330": 19, "4399": 19, "3961": 19, "4467": 19, "4533": 19, "3981": 19, "4600": 19, "3990": 19, "4665": 19, "4724": 19, "3973": 19, "4784": 19, "4847": 19, "3958": 19, "4911": 19, "3960": 19, "4971": 19, "3946": 19, "5031": 19, "5098": 19, "5164": 19, "3954": 19, "5234": 19, "5299": 19, "5357": 19, "3953": 19, "5415": 19, "11it": [19, 34, 101, 106, 107, 193, 194, 207, 224, 226, 229, 233, 234], "5463": 19, "3886": 19, "5511": 19, "3839": 19, "5559": 19, "3794": 19, "5670": 19, "3759": 19, "5732": 19, "3764": 19, "5803": 19, "3797": 19, "5863": 19, "3793": 19, "5912": 19, "3754": 19, "5961": 19, "3716": 19, "6028": 19, "3738": 19, "6099": 19, "3771": 19, "6171": 19, "3806": 19, "6242": 19, "3836": 19, "6312": 19, "3862": 19, "6383": 19, "3889": 19, "6519": 19, "6590": 19, "6658": 19, "3959": 19, "6728": 19, "3978": 19, "6797": 19, "3994": 19, "6866": 19, "4008": [19, 94], "6921": 19, "3977": [19, 94], "6976": 19, "3948": 19, "7030": 19, "3918": 19, "7071": 19, "7114": 19, "3786": 19, "7182": 19, "3807": 19, "7244": 19, "3808": 19, "7307": 19, "3813": 19, "7369": 19, "7427": 19, "3802": 19, "7560": 19, "3835": [19, 94], "7627": 19, "3851": 19, "7684": 19, "7745": 19, "3832": 19, "7815": 19, "3857": 19, "7887": 19, "3888": 19, "7947": 19, "3880": 19, "7996": 19, "3837": 19, "8058": 19, "8117": 19, "3827": 19, "8193": [19, 181], "3871": 19, "8266": 19, "8336": 19, "3927": 19, "1792": [19, 182], "140": [19, 34, 79, 80, 110, 121, 155, 168, 204, 205, 207, 224, 228, 229, 242, 560, 857], "2541": [19, 34, 168, 199, 221], "211": [19, 35, 41, 59, 144, 168, 207, 228, 229], "2991": 19, "276": [19, 143, 168, 229], "3199": 19, "341": [19, 71, 83, 110, 168, 207, 229, 520], "3340": 19, "402": [19, 35, 79, 143, 229, 860], "3406": 19, "474": [19, 122, 128, 157, 207, 229, 275], "3555": 19, "538": [19, 143, 229], "3609": 19, "598": [19, 229], "3619": 19, "3649": 19, "724": [19, 229], "3677": 19, "792": [19, 143, 194, 229], "3732": [19, 43, 174], "859": [19, 142, 194, 229], "3775": 19, "3872": 19, "1068": 19, "3907": 19, "3884": 19, "1176": 19, "3824": 19, "1226": 19, "3769": 19, "1277": 19, "3725": 19, "1326": 19, "3676": 19, "1375": 19, "3629": 19, "1425": 19, "3591": 19, "1475": 19, "1524": 19, "3519": 19, "1573": [19, 207], "3487": 19, "1623": [19, 168], "3462": 19, "1672": 19, "1722": [19, 168], "3413": 19, "1773": 19, "3397": 19, "1824": [19, 193], "3383": 19, "1874": 19, "3365": 19, "1923": [19, 168], "3345": 19, "1971": 19, "3324": 19, "2023": [19, 168], "3316": 19, "2072": 19, "3299": 19, "2121": [19, 32, 34, 168, 193, 221], "3283": 19, "2172": 19, "2222": [19, 168], "3262": 19, "2273": 19, "3255": 19, "2322": [19, 168], "3244": 19, "2372": 19, "3235": 19, "2423": [19, 98, 168], "2467": 19, "3202": 19, "2516": 19, "3192": 19, "2566": 19, "3187": [19, 193], "2616": 19, "3181": 19, "2664": 19, "3169": 19, "2713": 19, "2765": 19, "3168": 19, "2815": 19, "3164": 19, "2864": 19, "3158": 19, "2915": 19, "2964": 19, "3151": 19, "3013": [19, 857], "3145": [19, 193], "3063": 19, "3141": 19, "3114": 19, "3155": 19, "3219": 19, "3152": 19, "3267": 19, "3143": 19, "3138": 19, "3364": 19, "3129": 19, "3417": 19, "3137": 19, "3469": 19, "3140": 19, "3518": 19, "3134": 19, "3566": 19, "3125": 19, "3614": 19, "3119": 19, "3664": 19, "3117": 19, "3714": 19, "3765": 19, "3118": 19, "3816": 19, "3120": 19, "3865": 19, "3116": 19, "4040": [19, 203, 242, 555], "3188": 19, "4104": 19, "3227": 19, "4162": 19, "3245": 19, "4232": 19, "3353": 19, "4360": 19, "3367": 19, "4411": [19, 59], "4462": 19, "4523": 19, "3366": 19, "4589": 19, "3403": 19, "4647": 19, "3414": 19, "4715": 19, "3454": 19, "3503": 19, "4849": 19, "4907": 19, "3525": 19, "4967": 19, "3536": 19, "5038": 19, "3581": 19, "5110": 19, "3626": 19, "5183": 19, "3672": 19, "5254": 19, "3710": 19, "5325": 19, "3744": [19, 333], "5390": 19, "3758": 19, "5459": 19, "3785": 19, "5524": 19, "3798": 19, "5597": 19, "5664": 19, "3850": 19, "5722": 19, "5779": 19, "3822": 19, "5830": 19, "3788": 19, "5898": 19, "3809": 19, "5972": 19, "6031": 19, "3838": 19, "6087": 19, "3820": 19, "6141": 19, "6195": 19, "3774": 19, "6267": 19, "6341": 19, "6407": 19, "6465": 19, "3847": 19, "6523": 19, "6592": 19, "3856": 19, "6642": 19, "3819": 19, "6706": 19, "6759": 19, "3800": 19, "6819": 19, "6871": 19, "3768": [19, 242, 522, 857], "6920": 19, "3733": 19, "6985": 19, "3748": 19, "7058": 19, "3787": 19, "7131": 19, "3823": 19, "7178": 19, "7223": 19, "3728": 19, "7268": 19, "3682": 19, "7313": 19, "7358": 19, "3593": 19, "7402": 19, "3551": 19, "7447": 19, "7492": 19, "3474": 19, "7563": 19, "7636": 19, "3572": 19, "7708": 19, "3617": 19, "7782": 19, "3665": 19, "7856": 19, "3711": 19, "7930": 19, "8004": 19, "8077": 19, "3834": 19, "8151": 19, "8227": 19, "3913": 19, "8305": 19, "3570": 19, "sens": [19, 60, 69, 141, 159, 200, 205, 210, 239, 264, 265, 295, 296, 352, 356, 357, 366, 367, 368, 407, 414, 450, 451, 470, 472, 473, 533, 764, 782, 830, 834, 856, 857], "actual": [19, 23, 27, 41, 43, 60, 63, 79, 113, 126, 133, 143, 150, 157, 159, 161, 167, 169, 171, 174, 181, 182, 183, 184, 188, 189, 193, 198, 199, 200, 201, 215, 224, 226, 229, 232, 233, 234, 239, 255, 272, 441, 535, 555, 830, 834, 851, 857, 875], "valid_samples_": [19, 413], "grei": [19, 111, 141, 239, 264, 265, 695, 778, 875], "attempt": [19, 74, 193, 197, 226, 262, 263, 264, 265, 270, 276, 278, 372, 475, 476, 482, 492, 555, 626, 640, 805, 828, 830, 856, 875], "reflect": [19, 32, 60, 69, 118, 134, 140, 148, 150, 159, 160, 176, 180, 197, 202, 203, 205, 213, 262, 263, 264, 265, 295, 296, 352, 356, 357, 366, 367, 368, 407, 414, 445, 446, 447, 450, 451, 470, 472, 473, 475, 476, 533, 613, 675, 781, 782, 795, 830, 834, 850, 857, 875], "toward": [19, 43, 46, 54, 55, 69, 101, 159, 179, 199, 228, 239, 242, 449, 451, 537, 558, 857, 875], "directli": [19, 34, 43, 92, 93, 142, 143, 148, 169, 170, 171, 187, 189, 194, 198, 201, 202, 203, 204, 205, 215, 232, 238, 239, 254, 257, 259, 260, 261, 262, 263, 264, 265, 267, 269, 271, 273, 274, 277, 278, 310, 311, 316, 320, 357, 368, 407, 414, 443, 472, 475, 476, 477, 478, 483, 495, 554, 555, 569, 571, 613, 640, 695, 697, 699, 744, 759, 761, 772, 774, 781, 785, 794, 797, 800, 802, 804, 806, 852, 857, 865, 875], "obtain": [19, 38, 42, 43, 60, 88, 92, 93, 133, 136, 145, 150, 154, 156, 157, 169, 171, 174, 176, 177, 183, 184, 200, 202, 208, 213, 214, 221, 224, 226, 229, 238, 260, 262, 263, 264, 265, 266, 269, 273, 277, 278, 296, 307, 340, 342, 352, 354, 358, 370, 413, 415, 457, 458, 469, 472, 473, 475, 476, 483, 490, 494, 508, 522, 530, 541, 555, 559, 566, 581, 600, 608, 612, 618, 644, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 665, 669, 682, 683, 684, 685, 686, 696, 723, 726, 742, 761, 777, 800, 801, 806, 830, 850, 851, 855, 856, 857, 875], "via": [19, 133, 134, 135, 141, 143, 144, 148, 149, 156, 167, 168, 169, 170, 171, 174, 179, 197, 198, 199, 203, 204, 213, 216, 224, 225, 228, 232, 234, 237, 238, 242, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 272, 274, 275, 277, 278, 281, 295, 296, 307, 316, 320, 326, 327, 372, 409, 418, 441, 443, 445, 446, 459, 466, 475, 476, 488, 555, 676, 682, 683, 685, 686, 694, 697, 698, 699, 744, 758, 762, 763, 772, 776, 777, 781, 789, 795, 821, 830, 832, 834, 836, 837, 842, 854, 875], "procedur": [19, 111, 143, 160, 161, 187, 202, 203, 208, 224, 226, 227, 228, 234, 239, 242, 255, 257, 262, 263, 264, 265, 345, 352, 357, 415, 475, 476, 555, 556, 569, 571, 581, 591, 613, 682, 830, 851, 854, 857, 860, 875], "straightforward": [19, 101, 188, 200, 221, 857, 875], "sign": [19, 28, 38, 39, 47, 150, 203, 224, 227, 232, 264, 265, 269, 270, 273, 276, 277, 278, 333, 441, 449, 470, 472, 473, 509, 522, 523, 524, 525, 526, 581, 682, 683, 685, 686, 834, 857, 875], "strength": [19, 22, 35, 92, 150, 174, 203, 270, 276, 278, 569, 857], "direct": [19, 60, 78, 121, 133, 149, 155, 159, 160, 167, 177, 179, 184, 198, 204, 205, 207, 239, 242, 254, 260, 262, 263, 269, 270, 272, 273, 276, 277, 278, 288, 295, 296, 429, 441, 449, 475, 476, 486, 522, 565, 647, 697, 699, 742, 772, 784, 795, 805, 815, 830, 834, 840, 854, 856, 857, 875], "125": [19, 24, 35, 125, 136, 142, 155, 159, 168, 169, 200, 228, 229, 336], "nbetween": 19, "giovanni": [19, 193, 242, 413, 851], "di": [19, 40, 142, 193, 242, 413, 851], "liberto": [19, 193, 242, 413, 851], "adam": [19, 134, 135, 193, 242, 413, 851, 862, 875], "bednar": [19, 193, 242, 413, 851], "edmund": [19, 193, 242, 413, 851], "fnhum": [19, 150, 193, 242, 413, 560, 851], "00604": [19, 193, 242, 413, 851], "334": [19, 20, 107, 110, 168], "receptive_field_mtrf": [19, 20], "204": [20, 22, 34, 39, 56, 72, 75, 91, 111, 129, 145, 157, 165, 166, 167, 168, 171, 182, 183, 194, 197, 198, 199, 204, 205, 208, 213, 214, 215, 216, 221, 229, 238, 875], "auto_examples_decod": 20, "272": [20, 46, 117, 168, 170, 194, 207, 234, 236, 242, 652, 657], "ssd_spatial_filt": [20, 21], "713": [20, 21, 150, 229], "retain": [21, 110, 148, 177, 198, 199, 213, 224, 257, 262, 263, 272, 275, 431, 555, 682, 683, 685, 686, 785, 832, 863, 875], "oscillatori": [21, 111, 221, 238, 242, 295, 296, 711, 721, 722, 725], "propos": [21, 239, 569, 574, 834], "surround": [21, 80, 99, 133, 239, 415, 560, 592, 690, 815, 834], "victoria": [21, 875], "peterson": [21, 875], "victoriapeterson09": 21, "freqs_sig": 21, "freqs_nois": 21, "sort_by_spectral_ratio": [21, 415], "filt_params_sign": [21, 415], "l_trans_bandwidth": [21, 111, 112, 200, 209, 262, 263, 264, 265, 409, 418, 443, 445, 475, 476, 587, 875], "filt_params_nois": [21, 415], "72000": [21, 80, 190], "196608": 21, "262144": 21, "327680": 21, "393216": 21, "458752": 21, "67108864": 21, "67174400": 21, "134742016": 21, "136314880": 21, "268435456": 21, "825": [21, 81, 112, 194, 229, 242, 555], "ratio": [21, 58, 86, 125, 143, 165, 194, 200, 203, 205, 221, 226, 227, 228, 229, 242, 269, 270, 273, 276, 277, 278, 285, 415, 537, 538, 539, 555, 556, 636, 653, 654, 695, 698, 745, 802, 850, 857, 875], "accord": [21, 155, 168, 169, 193, 213, 255, 262, 263, 264, 265, 413, 436, 475, 476, 483, 486, 490, 492, 550, 584, 601, 640, 645, 851, 857, 860, 875], "either": [21, 32, 43, 141, 148, 149, 150, 165, 166, 167, 169, 171, 189, 197, 201, 206, 208, 214, 215, 220, 224, 239, 254, 257, 259, 262, 263, 264, 265, 266, 269, 270, 271, 273, 275, 276, 277, 278, 286, 300, 319, 352, 407, 414, 415, 424, 434, 442, 465, 468, 475, 476, 505, 506, 508, 514, 520, 521, 554, 555, 557, 566, 569, 574, 583, 613, 623, 640, 642, 646, 647, 648, 660, 680, 681, 695, 696, 697, 699, 707, 717, 722, 723, 725, 726, 730, 742, 758, 759, 763, 766, 773, 774, 781, 785, 786, 794, 795, 796, 797, 800, 802, 804, 805, 806, 810, 834, 840, 850, 851, 854, 860, 875], "multipli": [21, 187, 200, 224, 267, 269, 270, 273, 276, 277, 278, 297, 415, 441, 522, 528, 695, 857, 860], "eq": [21, 415, 711, 721, 725, 857], "c_n": [21, 857], "reli": [21, 168, 199, 239, 310, 834, 850, 854, 857, 860, 863, 875], "suggest": [21, 26, 140, 143, 161, 199, 200, 201, 202, 203, 205, 262, 263, 287, 289, 742, 833, 838, 839, 854, 856], "pariet": [21, 49, 630, 742], "ssd_sourc": [21, 415], "psd": [21, 27, 67, 73, 90, 103, 104, 109, 131, 136, 165, 171, 194, 197, 201, 210, 216, 237, 238, 259, 262, 263, 264, 265, 267, 268, 272, 273, 357, 412, 448, 475, 476, 513, 518, 521, 528, 529, 533, 536, 552, 602, 617, 643, 697, 699, 702, 705, 713, 714, 736, 742, 758, 774, 796, 810, 851, 875], "psd_array_welch": [21, 237, 262, 263, 264, 265, 415, 475, 476, 697, 699, 865, 875], "n_fft": [21, 106, 107, 112, 131, 210, 237, 239, 262, 263, 264, 265, 415, 475, 476, 528, 696, 697, 699, 700, 702, 703, 705, 714, 724, 727, 796, 875], "spec_ratio": [21, 415], "alreadi": [21, 30, 31, 34, 35, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 69, 70, 73, 77, 84, 85, 92, 93, 113, 114, 117, 118, 125, 133, 134, 141, 143, 144, 148, 149, 150, 157, 158, 159, 161, 165, 168, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 187, 188, 197, 199, 200, 203, 204, 205, 208, 213, 219, 239, 254, 262, 263, 264, 265, 269, 270, 272, 273, 274, 276, 277, 278, 295, 296, 305, 307, 326, 352, 356, 357, 365, 366, 367, 368, 369, 377, 399, 400, 407, 414, 441, 442, 450, 451, 470, 472, 473, 475, 476, 516, 533, 566, 567, 571, 613, 633, 634, 696, 715, 763, 766, 782, 825, 834, 835, 836, 851, 854, 857, 858, 863, 875], "sorter": 21, "get_spectral_ratio": [21, 415], "spectral": [21, 27, 32, 33, 34, 67, 70, 103, 104, 110, 111, 112, 115, 131, 136, 141, 165, 171, 194, 199, 207, 221, 238, 242, 259, 262, 263, 264, 265, 267, 268, 273, 287, 288, 289, 295, 357, 412, 415, 448, 451, 475, 476, 513, 518, 521, 528, 529, 533, 536, 552, 555, 602, 610, 617, 643, 683, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 707, 712, 713, 714, 722, 723, 725, 726, 736, 742, 758, 768, 774, 796, 810, 851, 863, 875], "orang": [21, 150, 155, 189, 209, 229, 234, 799], "frac": [21, 148, 200, 201, 208, 224, 273, 530, 655, 708, 711, 721, 722, 723, 725, 726, 857], "p_f": 21, "p_": [21, 857], "sf": [21, 224], "384": [21, 35, 79, 143, 170, 193, 229], "spectrum": [21, 73, 81, 101, 102, 106, 110, 131, 136, 142, 164, 165, 171, 197, 201, 203, 205, 210, 216, 221, 238, 239, 240, 241, 242, 262, 263, 264, 265, 448, 475, 476, 555, 697, 713, 714, 716, 737, 785, 787, 796, 830, 860, 863, 865, 875], "lowest": [21, 239, 257, 262, 263, 264, 265, 268, 339, 571, 672, 695, 696, 698, 766, 776], "below50": 21, "bandfilt": 21, "loglog": 21, "fill_between": [21, 111, 150, 234, 238, 239], "10000": [21, 82, 109, 133, 436, 470, 581, 660, 684], "green": [21, 48, 49, 50, 79, 114, 150, 155, 180, 189, 205, 239, 264, 265, 742, 763, 776, 793, 799, 875], "enjoi": [21, 239], "situat": [21, 202, 206, 221, 272, 317, 434, 555, 834, 838, 856, 875], "chunk": [21, 78, 82, 136, 139, 145, 183, 208, 355, 357, 436, 475, 476, 555, 574, 645, 850, 875], "overlap": [21, 69, 82, 97, 107, 139, 145, 150, 165, 167, 190, 199, 208, 214, 215, 237, 242, 256, 262, 263, 264, 265, 324, 357, 409, 418, 431, 443, 445, 446, 465, 475, 476, 515, 516, 528, 541, 556, 571, 572, 662, 681, 714, 742, 772, 796, 830, 875], "ssd_epoch": 21, "pattern_epoch": 21, "1251": 21, "1661": 21, "guido": [21, 242, 415], "nolt": [21, 242, 415], "gabriel": [21, 40, 202, 242, 415, 472, 554, 598], "curio": [21, 242, 415], "reliabl": [21, 101, 168, 201, 242, 415, 555], "basi": [21, 145, 161, 194, 242, 415, 428, 566, 574, 583, 854, 857, 875], "spatio": [21, 46, 59, 164, 183, 193, 194, 224, 225, 235, 236, 242, 262, 264, 265, 267, 273, 274, 275, 358, 413, 415, 430, 471, 472, 475, 521, 522, 536, 552, 583, 610, 623, 625, 650, 651, 652, 653, 654, 655, 656, 657, 667, 669, 670, 671, 675, 676, 678, 685, 686, 687, 742, 857, 875], "1528": [21, 242, 415], "1535": [21, 242, 415], "057": [21, 139, 141, 148, 168, 221, 242, 415], "produc": [22, 38, 80, 81, 115, 117, 126, 143, 160, 171, 178, 182, 189, 200, 202, 208, 224, 239, 242, 254, 257, 260, 262, 268, 272, 274, 275, 277, 278, 301, 302, 325, 328, 349, 353, 354, 355, 357, 364, 384, 465, 467, 475, 476, 508, 514, 515, 518, 528, 541, 555, 558, 564, 567, 568, 574, 580, 581, 600, 606, 610, 630, 644, 646, 647, 648, 649, 658, 659, 660, 661, 663, 682, 683, 684, 685, 686, 690, 742, 758, 759, 795, 824, 850, 856, 857, 860, 875], "abl": [22, 88, 133, 134, 136, 143, 158, 160, 164, 171, 202, 203, 208, 221, 232, 272, 446, 475, 476, 555, 785, 832, 834, 851, 854, 857, 863, 875], "region": [22, 38, 41, 47, 49, 92, 93, 126, 134, 136, 149, 154, 180, 189, 200, 201, 224, 225, 238, 239, 260, 262, 263, 264, 265, 275, 322, 409, 418, 443, 445, 446, 459, 460, 461, 465, 475, 476, 508, 600, 644, 655, 742, 772, 795, 798, 830, 850, 863, 875], "source_spac": [22, 275, 865, 875], "compute_distance_to_sensor": [22, 865, 875], "source_estim": [22, 27, 36, 56, 268, 273, 617, 623, 741], "surf_ori": [22, 47, 48, 49, 54, 55, 67, 157, 177, 220, 266, 362, 533, 875], "leadfield": [22, 41, 157, 162, 164, 171, 295, 296, 297, 875], "7498": [22, 31, 35, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 58, 59, 60, 67, 88, 90, 91, 92, 93, 129, 171, 174, 176, 177, 178, 180, 194, 220, 221], "combin": [22, 24, 29, 30, 31, 34, 35, 37, 40, 41, 42, 44, 47, 48, 49, 51, 54, 55, 58, 59, 67, 85, 88, 90, 91, 92, 93, 99, 110, 124, 126, 129, 130, 136, 139, 140, 141, 144, 149, 150, 154, 165, 167, 169, 174, 176, 177, 178, 179, 180, 181, 187, 189, 190, 193, 194, 197, 205, 206, 208, 209, 213, 215, 221, 224, 226, 229, 232, 234, 242, 254, 257, 262, 263, 264, 265, 268, 269, 270, 273, 275, 276, 277, 278, 288, 295, 296, 303, 304, 312, 352, 353, 354, 355, 360, 368, 384, 407, 412, 414, 426, 429, 466, 475, 476, 491, 516, 517, 522, 525, 528, 529, 531, 532, 555, 567, 568, 607, 617, 623, 630, 666, 695, 697, 698, 699, 702, 705, 713, 742, 758, 766, 773, 774, 781, 784, 802, 834, 857, 860, 863, 875], "local": [22, 26, 27, 33, 34, 35, 36, 40, 41, 42, 46, 47, 48, 49, 51, 54, 55, 56, 58, 59, 67, 69, 82, 88, 90, 92, 107, 111, 114, 118, 133, 149, 150, 151, 154, 157, 165, 170, 174, 178, 179, 183, 186, 190, 194, 205, 209, 221, 242, 259, 260, 261, 262, 263, 264, 265, 266, 267, 271, 273, 277, 295, 296, 298, 310, 314, 328, 340, 342, 351, 352, 356, 357, 362, 366, 367, 368, 370, 374, 375, 376, 377, 379, 380, 382, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 414, 428, 448, 450, 451, 464, 470, 472, 473, 475, 476, 482, 517, 518, 521, 522, 523, 533, 537, 554, 555, 563, 569, 575, 604, 613, 615, 628, 637, 640, 643, 652, 655, 657, 659, 694, 695, 697, 699, 734, 742, 751, 758, 759, 767, 770, 774, 779, 781, 782, 785, 794, 797, 801, 802, 804, 810, 815, 830, 832, 835, 840, 841, 843, 854, 857, 863, 875], "grad_map": 22, "sensitivity_map": [22, 26, 129, 157, 865], "mag_map": [22, 26], "eeg_map": 22, "gain": [22, 24, 31, 41, 65, 88, 91, 92, 93, 107, 157, 179, 200, 221, 295, 296, 442, 451, 783, 790, 857, 875], "picks_meg": 22, "picks_eeg": 22, "sharex": [22, 45, 72, 88, 111, 193, 205, 239], "dipol": [22, 26, 27, 28, 31, 34, 35, 36, 39, 40, 41, 42, 46, 51, 56, 59, 60, 67, 81, 82, 90, 91, 92, 107, 117, 151, 154, 157, 164, 165, 168, 176, 178, 179, 181, 182, 183, 184, 185, 186, 190, 202, 219, 221, 242, 259, 261, 262, 263, 264, 265, 266, 267, 270, 273, 276, 277, 278, 295, 296, 297, 298, 300, 309, 340, 351, 362, 370, 386, 428, 448, 450, 452, 470, 471, 472, 473, 475, 476, 517, 521, 522, 524, 533, 542, 552, 602, 604, 605, 613, 615, 628, 630, 643, 647, 648, 652, 655, 657, 659, 661, 695, 697, 698, 699, 742, 751, 758, 759, 769, 770, 801, 805, 810, 830, 841, 843, 846, 850, 857, 860, 865, 875], "fontsiz": [22, 37, 110, 118, 125, 143, 175, 208, 801], "fig_2": [22, 171], "hist": [22, 69, 129, 143, 209], "ravel": [22, 109, 111, 115, 129, 193, 200, 225], "brain_sen": 22, "add_text": [22, 43, 47, 48, 49, 50, 54, 55, 174, 176, 178, 742], "font_siz": [22, 43, 47, 48, 49, 50, 54, 55, 174, 176, 178, 742], "02108201": 22, "32186553": 22, "minimum": [22, 31, 57, 69, 77, 81, 135, 139, 148, 150, 161, 165, 167, 176, 178, 179, 199, 200, 205, 220, 232, 242, 257, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 291, 292, 293, 294, 295, 296, 339, 341, 342, 357, 440, 443, 445, 446, 448, 450, 451, 475, 476, 518, 522, 523, 524, 525, 526, 528, 529, 533, 535, 537, 538, 539, 557, 558, 563, 571, 572, 574, 652, 655, 657, 660, 688, 695, 700, 701, 702, 703, 704, 705, 706, 724, 727, 742, 766, 780, 796, 799, 830, 841, 843, 850, 860, 875], "euclidean": [22, 268, 273, 275, 537, 655, 658, 661, 663, 666], "maxdep": 22, "vertno": [22, 43, 48, 49, 50, 157, 174, 177, 220, 232, 233, 234, 273, 275, 276, 860], "depths_map": 22, "brain_dep": 22, "like": [22, 26, 27, 31, 32, 34, 35, 36, 40, 41, 42, 47, 56, 59, 60, 69, 80, 81, 99, 107, 110, 125, 133, 134, 135, 139, 140, 141, 142, 143, 148, 149, 150, 154, 155, 159, 160, 161, 165, 166, 167, 168, 170, 171, 174, 176, 180, 181, 187, 188, 189, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 213, 214, 215, 216, 219, 224, 228, 239, 254, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 281, 286, 300, 301, 302, 305, 306, 307, 310, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 341, 345, 351, 352, 358, 363, 364, 365, 382, 386, 407, 414, 430, 431, 436, 442, 448, 450, 459, 463, 465, 466, 467, 468, 469, 475, 476, 477, 479, 481, 492, 495, 498, 507, 508, 510, 512, 514, 517, 518, 521, 522, 524, 533, 541, 545, 554, 555, 560, 569, 572, 576, 580, 581, 583, 591, 597, 598, 600, 602, 604, 605, 606, 613, 618, 626, 627, 628, 630, 643, 644, 647, 648, 649, 658, 659, 660, 661, 664, 672, 676, 678, 681, 682, 683, 684, 685, 686, 690, 691, 694, 695, 697, 698, 699, 711, 716, 721, 730, 731, 734, 739, 742, 758, 759, 760, 766, 770, 772, 774, 776, 778, 780, 781, 782, 785, 789, 792, 794, 795, 796, 797, 798, 800, 802, 804, 805, 806, 815, 825, 828, 829, 830, 832, 833, 834, 835, 837, 838, 839, 840, 841, 842, 850, 852, 854, 856, 857, 860, 875], "corr": [22, 254], "gradiomt": 22, "815476": 22, "sensitivii": 22, "highest": [22, 133, 175, 203, 257, 260, 262, 263, 264, 265, 268, 451, 475, 476, 571, 672, 695, 696, 698, 770, 782, 857], "close": [22, 60, 69, 95, 105, 109, 115, 118, 125, 133, 139, 141, 143, 148, 150, 157, 159, 171, 190, 198, 199, 202, 203, 205, 206, 209, 216, 221, 224, 229, 260, 262, 263, 264, 265, 268, 340, 356, 377, 430, 450, 466, 467, 475, 476, 555, 572, 576, 666, 690, 697, 699, 742, 748, 749, 770, 772, 789, 795, 798, 834, 838, 846, 854, 857, 860, 875], "decreas": [22, 55, 110, 200, 221, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 407, 428, 475, 476, 555, 691, 695, 698, 722, 723, 725, 726, 742, 857, 875], "rapidli": 22, "inreas": 22, "confirm": [22, 47, 69, 170, 189, 199, 203, 834, 857], "534": [22, 25, 229], "forward_sensitivity_map": [22, 25], "coregistr": [23, 27, 79, 155, 159, 160, 162, 163, 164, 180, 260, 267, 272, 275, 302, 306, 364, 369, 385, 426, 467, 480, 514, 518, 580, 634, 663, 690, 742, 758, 810, 848, 850, 863, 865, 875], "displai": [23, 24, 25, 27, 44, 47, 75, 110, 114, 123, 139, 142, 150, 155, 157, 159, 161, 165, 203, 206, 213, 216, 225, 229, 254, 255, 259, 262, 263, 264, 265, 266, 268, 269, 270, 273, 275, 276, 277, 278, 310, 362, 475, 476, 514, 552, 554, 555, 615, 636, 663, 695, 697, 699, 742, 743, 757, 758, 766, 771, 772, 773, 775, 776, 777, 778, 780, 781, 782, 783, 786, 787, 792, 795, 796, 797, 798, 800, 801, 803, 805, 806, 830, 832, 833, 837, 840, 846, 854, 857, 860, 863, 875], "cerebellum": [23, 25, 27, 41, 275, 643, 644, 758, 810], "volum": [23, 25, 27, 31, 36, 44, 56, 59, 70, 133, 134, 135, 154, 155, 157, 159, 165, 171, 175, 179, 208, 242, 254, 259, 260, 264, 266, 267, 269, 270, 273, 274, 275, 276, 277, 278, 301, 307, 310, 358, 441, 452, 460, 461, 470, 472, 473, 510, 518, 521, 522, 532, 533, 534, 536, 604, 613, 623, 626, 635, 643, 644, 667, 670, 687, 690, 731, 732, 742, 758, 800, 805, 806, 810, 815, 828, 830, 849, 850, 857, 863, 875], "morph": [23, 25, 27, 36, 40, 56, 132, 133, 135, 154, 159, 176, 180, 232, 233, 234, 254, 264, 266, 267, 268, 269, 273, 274, 275, 276, 277, 278, 358, 463, 480, 518, 521, 522, 536, 541, 542, 551, 552, 613, 615, 620, 623, 624, 625, 636, 644, 731, 732, 742, 800, 806, 815, 830, 850, 851, 860, 875], "its": [24, 69, 74, 92, 124, 134, 136, 139, 140, 142, 144, 149, 155, 157, 159, 165, 167, 168, 169, 170, 171, 174, 179, 182, 188, 189, 194, 197, 198, 200, 201, 203, 204, 205, 206, 208, 213, 214, 216, 224, 229, 237, 239, 242, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 310, 407, 410, 414, 421, 422, 441, 448, 472, 473, 474, 475, 476, 483, 490, 554, 555, 569, 651, 661, 681, 682, 683, 685, 686, 695, 697, 698, 699, 711, 714, 721, 732, 759, 766, 770, 773, 774, 781, 785, 793, 794, 795, 797, 800, 802, 804, 805, 830, 832, 833, 834, 838, 840, 850, 852, 854, 856, 857, 875], "freesurf": [24, 32, 33, 34, 38, 41, 43, 44, 47, 114, 134, 135, 155, 157, 160, 162, 163, 164, 171, 174, 181, 190, 242, 258, 260, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 301, 305, 306, 307, 310, 358, 363, 364, 365, 369, 381, 383, 384, 386, 389, 406, 426, 441, 459, 460, 461, 463, 465, 466, 467, 468, 469, 480, 508, 510, 512, 514, 541, 580, 600, 616, 617, 618, 619, 625, 626, 627, 628, 643, 644, 658, 661, 672, 690, 691, 693, 734, 741, 742, 753, 758, 760, 770, 800, 805, 806, 810, 815, 824, 825, 828, 830, 838, 840, 841, 846, 851, 854, 875], "alan": [24, 242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 695, 698, 875], "leggitt": [24, 875], "ucsf": 24, "setup_source_spac": [24, 41, 107, 154, 157, 159, 177, 190, 275, 625, 644, 665, 669, 850, 857, 865, 875], "setup_volume_source_spac": [24, 41, 50, 155, 157, 159, 206, 269, 270, 273, 275, 276, 277, 278, 441, 510, 625, 643, 857, 865, 875], "aseg_fnam": 24, "aseg": [24, 41, 134, 175, 180, 260, 269, 270, 273, 276, 277, 278, 441, 459, 460, 510, 644, 742, 830, 875], "mgz": [24, 30, 41, 44, 50, 133, 155, 157, 159, 160, 175, 179, 180, 181, 254, 269, 270, 273, 275, 276, 277, 278, 301, 305, 306, 307, 386, 441, 460, 510, 644, 760, 806, 830, 854, 857, 875], "surf": [24, 26, 41, 79, 107, 116, 134, 154, 155, 156, 157, 158, 159, 160, 171, 175, 180, 220, 224, 254, 260, 268, 273, 275, 277, 278, 305, 457, 458, 508, 513, 542, 603, 626, 658, 661, 692, 729, 742, 760, 770, 818, 850, 851, 857], "add_dist": [24, 41, 107, 157, 254, 643, 665, 669, 857, 875], "lh_surf": 24, "cortex": [24, 26, 31, 37, 41, 43, 52, 53, 54, 55, 58, 60, 92, 107, 114, 124, 133, 134, 144, 150, 157, 165, 177, 180, 189, 193, 203, 209, 221, 242, 269, 270, 273, 275, 276, 277, 278, 384, 413, 587, 600, 661, 742, 800, 805, 830, 850, 851, 857, 860, 875], "volume_label": [24, 41, 269, 270, 273, 275, 276, 277, 278, 441, 510, 644, 875], "lh_cereb": 24, "sphere_unit": [24, 157, 644, 875], "octahedron": [24, 41, 107, 155, 157, 159, 254, 269, 273, 277, 643, 800], "subdivis": [24, 41, 107, 157], "octahedr": [24, 41, 107, 157, 406], "vertex": [24, 26, 41, 48, 49, 50, 81, 88, 107, 155, 156, 157, 159, 160, 174, 176, 179, 180, 220, 221, 224, 234, 268, 269, 270, 273, 274, 275, 276, 277, 278, 280, 295, 296, 441, 463, 465, 508, 531, 532, 541, 555, 617, 618, 629, 630, 635, 661, 662, 663, 668, 671, 672, 687, 690, 691, 692, 741, 742, 857, 860, 875], "lh": [24, 26, 28, 29, 37, 38, 39, 41, 43, 47, 48, 49, 54, 55, 60, 67, 88, 90, 92, 93, 102, 106, 107, 114, 124, 125, 132, 134, 154, 155, 156, 157, 158, 159, 160, 171, 174, 175, 177, 178, 181, 182, 190, 220, 221, 233, 234, 254, 258, 268, 269, 270, 273, 276, 277, 278, 463, 508, 600, 618, 623, 633, 742, 800, 805, 825, 857], "triangl": [24, 26, 41, 52, 107, 155, 156, 157, 159, 160, 174, 177, 220, 268, 275, 406, 629, 664, 668, 671, 692, 857, 860], "neighbor": [24, 26, 41, 107, 141, 155, 156, 157, 160, 198, 220, 224, 226, 239, 320, 327, 339, 449, 498, 580, 665, 666, 667, 669, 670, 675, 682, 683, 685, 686, 692, 856, 857, 875], "geometri": [24, 41, 60, 69, 107, 157, 160, 182, 183, 208, 242, 254, 386, 407, 451, 626, 742, 830, 850, 875], "triangul": [24, 41, 52, 107, 157, 174, 225, 226, 254, 275, 316, 626, 629, 823, 828, 857, 860, 875], "4098": [24, 43, 158, 159, 181, 850], "155407": [24, 26, 41, 43, 52, 157, 159], "156866": [24, 26, 41, 43, 52, 157, 159], "132651": 24, "57769": 24, "50733": 24, "401": [24, 56, 59, 79, 207, 224, 229], "voxel": [24, 41, 44, 50, 133, 155, 157, 159, 206, 224, 242, 272, 275, 277, 278, 358, 688, 689, 732, 742, 760, 806, 815, 857, 875], "neighborhood": [24, 41, 50, 155, 157, 206, 275], "005000": [24, 157], "001000": [24, 41, 50, 157], "556177": 24, "16777216": 24, "nonzero": [24, 209, 857], "coord_fram": [24, 107, 116, 121, 122, 123, 134, 135, 155, 156, 157, 158, 168, 169, 177, 181, 182, 183, 189, 208, 260, 266, 267, 275, 310, 323, 328, 428, 479, 507, 565, 566, 574, 583, 742, 758, 770, 860], "export": [24, 30, 41, 110, 113, 133, 139, 146, 147, 148, 154, 164, 167, 171, 188, 189, 217, 256, 262, 263, 264, 265, 269, 270, 273, 275, 276, 277, 278, 335, 337, 475, 476, 490, 610, 695, 697, 698, 699, 832, 834, 840, 845, 861, 865, 875], "nifti": [24, 30, 41, 154, 275, 277, 278, 875], "nii_fnam": [24, 41], "mne_sample_lh": 24, "nii": [24, 30, 41, 154, 254], "export_volum": [24, 41, 275, 875], "mri_resolut": [24, 30, 41, 44, 274, 275, 277, 278, 441, 875], "And": [24, 42, 54, 69, 107, 133, 159, 178, 180, 189, 194, 200, 205, 209, 275, 520, 530, 685, 686, 834, 850, 857], "freeview": [24, 133, 181, 854, 857, 875], "util": [24, 91, 145, 179, 188, 224, 262, 263, 437, 440, 475, 476, 737, 832, 834, 840, 844, 857, 865, 869, 875], "run_subprocess": 24, "mri_fnam": 24, "lut": [24, 460, 616, 742, 830], "opac": [24, 31, 35, 40, 46, 59, 90, 133, 155, 254, 272, 466, 697, 699, 742, 801, 807, 875], "jet": 24, "colorscal": 24, "slice": [24, 35, 40, 59, 133, 139, 142, 155, 157, 159, 171, 180, 193, 215, 228, 254, 256, 257, 260, 261, 262, 263, 264, 265, 267, 272, 277, 278, 308, 311, 325, 327, 357, 366, 409, 410, 413, 417, 420, 423, 428, 445, 446, 475, 476, 554, 555, 557, 570, 571, 572, 574, 577, 580, 589, 591, 598, 663, 681, 682, 683, 685, 686, 690, 695, 697, 698, 699, 701, 703, 704, 705, 706, 708, 720, 722, 723, 725, 726, 760, 766, 770, 772, 773, 776, 778, 779, 785, 786, 787, 789, 791, 793, 796, 806, 857, 860, 863, 875], "157": [24, 121, 136, 150, 160, 163, 168, 169, 187, 194, 209, 224, 228, 229, 242, 336, 655, 875], "316": [24, 25, 110, 125, 128, 143, 168, 193, 224, 229, 242, 413], "left_cerebellum_volume_sourc": [24, 25], "155": [25, 35, 139, 147, 168, 228, 229, 239, 875], "auto_examples_forward": 25, "source_space_morph": [25, 26], "051": [25, 26, 59, 139, 141, 148, 168, 198, 221, 242, 473], "582": [25, 26, 229, 242], "oppos": [26, 60, 221, 345, 416, 830, 834, 860, 875], "evenli": [26, 206, 208, 264, 265, 357, 583, 779, 857], "caution": [26, 27, 141, 156, 168, 262, 263, 264, 265, 409, 475, 476, 477, 698, 751], "fname_tran": [26, 41, 50, 52, 122, 175, 180, 850], "sample_audvis_raw": [26, 29, 41, 45, 50, 52, 67, 70, 81, 90, 91, 92, 101, 102, 105, 106, 108, 109, 114, 116, 121, 122, 125, 139, 141, 145, 148, 149, 155, 157, 159, 161, 165, 166, 167, 169, 171, 175, 177, 180, 181, 197, 198, 201, 202, 204, 205, 206, 208, 213, 214, 215, 216, 220, 221, 226, 227, 228, 237, 254, 834], "fname_bem": [26, 41, 50, 158, 175, 180, 181], "fname_src_f": 26, "fsaverag": [26, 40, 43, 44, 123, 124, 133, 134, 135, 155, 156, 159, 170, 180, 189, 209, 232, 233, 234, 242, 260, 268, 269, 273, 274, 277, 278, 302, 310, 326, 358, 363, 364, 365, 369, 381, 383, 384, 463, 467, 514, 518, 541, 580, 632, 633, 663, 687, 690, 691, 742, 758, 800, 806, 815, 850, 875], "ico": [26, 40, 43, 135, 157, 158, 160, 190, 232, 233, 234, 254, 269, 273, 277, 280, 406, 512, 643, 667, 670, 800, 850, 860, 875], "read_info": [26, 64, 88, 90, 92, 93, 156, 157, 159, 168, 865], "pick_info": [26, 117, 134, 166, 168, 221, 865, 875], "src_f": [26, 44, 179], "read_source_spac": [26, 40, 43, 44, 134, 135, 155, 158, 159, 179, 232, 233, 234, 275, 827, 865], "src_morph": 26, "morph_source_spac": [26, 273, 276, 865, 875], "subject_to": [26, 40, 43, 44, 133, 232, 234, 254, 268, 274, 277, 278, 358, 541, 542, 620, 632, 633, 634, 635, 806, 815, 850], "return": [26, 31, 34, 67, 68, 74, 82, 90, 91, 92, 97, 101, 106, 107, 108, 111, 112, 113, 115, 119, 136, 139, 140, 143, 145, 148, 149, 150, 159, 160, 165, 166, 167, 168, 170, 177, 187, 203, 204, 205, 206, 208, 213, 215, 221, 224, 225, 228, 234, 237, 238, 239, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 374, 375, 376, 377, 379, 380, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 598, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 636, 637, 640, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 740, 741, 742, 743, 744, 745, 746, 747, 750, 751, 752, 753, 754, 755, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 811, 812, 815, 816, 827, 828, 829, 852, 856, 857, 860, 875], "mag_map_f": 26, "to_original_src": [26, 273, 276, 875], "track": [26, 111, 141, 148, 165, 168, 190, 198, 201, 214, 215, 219, 555, 852, 863, 875], "sulcal": [26, 159, 742], "gyral": [26, 159, 742], "outlier": [26, 69, 156, 426, 555, 788], "mai": [26, 69, 73, 75, 81, 101, 133, 139, 140, 142, 143, 145, 148, 149, 150, 155, 157, 160, 165, 167, 169, 171, 187, 188, 189, 193, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 208, 209, 213, 214, 215, 216, 221, 226, 229, 232, 242, 257, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 272, 273, 276, 277, 278, 297, 316, 327, 328, 333, 351, 363, 406, 407, 409, 414, 416, 420, 426, 431, 437, 438, 439, 440, 441, 446, 457, 459, 466, 475, 476, 483, 490, 491, 495, 517, 522, 542, 554, 555, 557, 569, 571, 572, 574, 576, 583, 584, 601, 603, 605, 607, 613, 632, 634, 677, 681, 682, 683, 685, 686, 688, 690, 695, 697, 698, 699, 720, 722, 723, 724, 725, 726, 727, 742, 758, 759, 765, 772, 774, 776, 777, 779, 781, 785, 789, 794, 795, 797, 802, 804, 823, 832, 834, 835, 837, 838, 840, 841, 842, 849, 850, 852, 854, 856, 857, 860, 863, 875], "occur": [26, 44, 47, 69, 74, 88, 92, 93, 133, 139, 142, 143, 150, 160, 167, 199, 200, 205, 213, 226, 227, 255, 257, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 280, 295, 296, 352, 356, 357, 366, 367, 368, 407, 414, 430, 431, 433, 449, 450, 451, 470, 472, 473, 475, 476, 503, 533, 571, 572, 645, 695, 698, 772, 782, 795, 834, 835, 840, 850, 856, 857, 875], "kwarg": [26, 58, 107, 110, 114, 121, 140, 178, 179, 193, 200, 220, 238, 262, 263, 264, 265, 267, 272, 275, 410, 417, 475, 476, 481, 544, 695, 742, 743, 764, 779, 798, 801, 834], "smooth": [26, 38, 43, 59, 70, 81, 112, 132, 133, 134, 141, 150, 155, 165, 180, 193, 205, 224, 225, 232, 233, 234, 242, 262, 263, 264, 265, 268, 269, 270, 273, 274, 276, 277, 278, 358, 475, 476, 555, 564, 682, 683, 685, 686, 691, 711, 713, 721, 722, 723, 725, 726, 742, 751, 773, 800, 803, 805, 807, 808, 811, 853, 875], "smoothing_step": [26, 41, 42, 43, 55, 59, 60, 102, 107, 114, 129, 135, 174, 176, 178, 180, 220, 232, 269, 270, 273, 276, 277, 278, 742, 800, 805], "almost": [26, 112, 139, 167, 834, 857], "equidist": [26, 272], "unevenli": [26, 517], "achiev": [26, 43, 44, 110, 125, 141, 143, 145, 159, 160, 179, 200, 209, 215, 221, 264, 265, 352, 361, 508, 530, 555, 581, 600, 647, 648, 649, 658, 659, 661, 682, 683, 684, 685, 686, 782, 854, 857, 861, 863, 875], "closest": [26, 143, 156, 157, 213, 239, 257, 262, 263, 264, 265, 268, 275, 475, 476, 691, 697, 699, 742, 760, 774, 857, 875], "approxim": [26, 133, 169, 203, 213, 224, 242, 254, 259, 262, 263, 264, 265, 269, 270, 271, 273, 276, 277, 278, 310, 407, 414, 428, 443, 444, 446, 458, 475, 476, 554, 555, 566, 569, 574, 583, 643, 695, 697, 699, 707, 759, 766, 767, 774, 776, 778, 781, 782, 785, 792, 794, 796, 797, 798, 802, 804, 830, 857, 875], "brain_subject": 26, "time_label": [26, 33, 34, 59, 60, 107, 122, 129, 221, 232, 233, 234, 264, 265, 269, 270, 273, 276, 277, 278, 742, 777, 800, 805], "brain_f": 26, "remap": [26, 27, 76, 83, 264, 265, 613, 875], "destin": [26, 43, 44, 78, 154, 159, 256, 259, 260, 262, 263, 264, 265, 269, 270, 272, 273, 274, 275, 276, 277, 278, 286, 306, 307, 310, 358, 369, 406, 428, 437, 438, 439, 440, 475, 476, 507, 540, 542, 554, 555, 574, 583, 632, 633, 635, 695, 696, 697, 698, 699, 728, 729, 784, 817, 818, 819, 820, 821, 822, 823, 826, 827, 828, 829, 860, 875], "sourcespac": [26, 41, 43, 45, 50, 107, 157, 158, 159, 175, 206, 266, 268, 269, 270, 273, 276, 277, 278, 280, 358, 441, 461, 471, 509, 510, 518, 531, 532, 537, 542, 625, 643, 644, 645, 652, 655, 657, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 687, 690, 691, 742, 758, 760, 800, 805, 806, 827, 830, 857, 865, 875], "n_vertic": [26, 41, 43, 53, 107, 157, 158, 159, 258, 268, 269, 270, 273, 276, 277, 278, 451, 537, 626, 629, 663, 682, 683, 685, 686, 693, 741, 742, 823, 828], "n_use": [26, 41, 43, 45, 50, 107, 157, 158, 159, 175, 206], "10242": [26, 43, 158, 232, 233, 234, 268, 280, 463, 687, 850], "coord": [26, 41, 43, 45, 50, 107, 123, 157, 158, 159, 160, 175, 206, 340, 450, 742, 743, 812, 828], "conductor": [26, 41, 45, 50, 107, 155, 157, 158, 175, 181, 302, 450, 519, 644, 758, 830, 857, 875], "20484": [26, 135, 158, 160, 232, 233, 254, 512], "999310": [26, 41, 50, 157, 175, 180, 181], "009985": [26, 41, 50, 157, 175, 180, 181], "035787": [26, 41, 50, 157, 175, 180, 181], "012759": [26, 41, 50, 157, 175, 180, 181], "812405": [26, 41, 50, 157, 175, 180], "582954": [26, 41, 50, 157, 175, 180], "034894": [26, 41, 50, 157, 175, 180, 181], "583008": [26, 41, 50, 157, 175, 180], "811716": [26, 41, 50, 157, 175, 180, 181], "991420": [26, 41, 45, 50, 157, 175, 180], "039936": [26, 41, 45, 50, 157, 175, 180], "124467": [26, 41, 45, 50, 157, 175, 180], "060661": [26, 41, 45, 50, 157, 175, 180], "984012": [26, 41, 45, 50, 157, 175, 180], "167456": [26, 41, 45, 50, 157, 175, 180], "115790": [26, 41, 45, 50, 157, 175, 180], "173570": [26, 41, 45, 50, 157, 175, 180], "977991": [26, 41, 45, 50, 157, 175, 180], "homogen": [26, 41, 50, 107, 157, 175, 206, 857, 860, 875], "2154": 26, "8088": 26, "8079": 26, "10233": [26, 875], "4780": 26, "2113": [26, 168, 193], "8129": 26, "8125": 26, "10237": 26, "4943": 26, "20470": 26, "00205101": 26, "08784125": 26, "17433707": 26, "work": [27, 31, 67, 69, 74, 77, 81, 85, 131, 133, 136, 137, 138, 139, 143, 146, 147, 148, 149, 150, 154, 155, 159, 160, 165, 166, 167, 168, 172, 173, 174, 176, 177, 180, 183, 187, 189, 191, 192, 194, 197, 199, 201, 202, 203, 204, 205, 208, 209, 213, 215, 216, 218, 221, 226, 229, 232, 234, 237, 238, 239, 242, 249, 253, 256, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 307, 310, 311, 314, 316, 321, 324, 326, 330, 336, 345, 351, 353, 357, 358, 359, 361, 364, 368, 379, 382, 385, 407, 408, 410, 411, 413, 414, 415, 416, 417, 419, 420, 421, 430, 434, 436, 441, 442, 447, 448, 459, 467, 470, 472, 473, 475, 476, 481, 485, 488, 510, 512, 513, 516, 518, 520, 521, 522, 523, 524, 525, 526, 528, 529, 533, 539, 546, 550, 551, 552, 554, 555, 556, 568, 583, 597, 606, 610, 615, 621, 625, 626, 627, 628, 643, 644, 672, 690, 695, 697, 698, 699, 742, 743, 745, 758, 764, 766, 772, 774, 775, 780, 781, 785, 789, 794, 795, 797, 802, 808, 810, 812, 815, 820, 830, 833, 834, 835, 839, 840, 841, 851, 852, 856, 857, 858, 860, 863, 875], "variou": [27, 62, 99, 118, 119, 134, 140, 149, 154, 164, 168, 169, 176, 177, 185, 186, 187, 188, 191, 197, 200, 201, 203, 205, 211, 213, 215, 221, 224, 225, 259, 264, 267, 273, 328, 521, 522, 533, 555, 583, 604, 613, 615, 742, 764, 850, 854, 856, 857, 858, 860, 864, 875], "often": [27, 69, 73, 74, 81, 133, 139, 141, 149, 165, 167, 168, 174, 177, 179, 187, 189, 194, 198, 200, 201, 204, 206, 208, 214, 215, 226, 239, 264, 265, 269, 270, 273, 276, 277, 278, 295, 296, 352, 356, 357, 366, 367, 368, 407, 414, 450, 451, 470, 472, 473, 533, 584, 742, 782, 800, 805, 830, 834, 838, 839, 850, 854, 856, 857, 858, 875], "lack": [27, 69, 189, 259, 271, 286, 300, 521, 584, 730, 858], "narr": [27, 164, 830, 858], "explan": [27, 72, 141, 154, 164, 228, 697, 858, 862], "discov": [27, 852, 858, 875], "ve": [27, 113, 139, 148, 150, 155, 159, 170, 197, 199, 203, 205, 213, 214, 216, 239, 812, 834, 852, 854, 858], "flag": [27, 133, 164, 166, 254, 262, 263, 267, 269, 270, 273, 276, 277, 278, 307, 475, 476, 512, 761, 795, 800, 805, 806, 834, 850, 854, 875], "tutorial_script": [27, 164], "them": [27, 47, 50, 69, 73, 113, 125, 132, 133, 134, 136, 139, 140, 141, 143, 144, 148, 149, 150, 155, 159, 160, 164, 165, 167, 169, 170, 171, 190, 197, 198, 199, 200, 202, 203, 204, 205, 207, 208, 209, 213, 214, 215, 221, 224, 225, 232, 234, 239, 254, 256, 262, 263, 264, 265, 268, 289, 290, 293, 357, 360, 365, 410, 411, 425, 486, 487, 516, 517, 524, 526, 529, 550, 554, 555, 573, 584, 591, 605, 610, 649, 659, 672, 699, 737, 788, 830, 832, 834, 842, 850, 851, 852, 856, 857, 860, 863, 875], "shortcut": [27, 216, 732, 742, 875], "intention": [27, 207], "record": [27, 62, 65, 69, 73, 81, 82, 107, 133, 136, 139, 143, 145, 150, 155, 161, 165, 167, 168, 169, 171, 174, 183, 185, 187, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 213, 214, 215, 219, 221, 224, 239, 242, 256, 257, 262, 263, 264, 265, 267, 272, 279, 318, 345, 352, 357, 361, 399, 430, 439, 475, 476, 484, 488, 495, 498, 503, 504, 516, 555, 557, 558, 559, 563, 565, 566, 574, 583, 584, 591, 597, 613, 640, 681, 695, 697, 698, 699, 775, 789, 795, 830, 841, 846, 850, 851, 852, 854, 857, 860, 863, 875], "past": [27, 150, 200, 419, 645, 838, 854, 856, 860], "recip": [27, 62, 834], "write": [27, 29, 41, 62, 66, 106, 108, 139, 159, 160, 169, 170, 171, 176, 188, 201, 213, 234, 237, 254, 256, 259, 260, 264, 265, 267, 268, 269, 270, 272, 275, 276, 278, 286, 305, 350, 448, 480, 507, 540, 554, 599, 604, 694, 728, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 834, 837, 838, 850, 852, 854, 857, 863, 875], "manipul": [27, 62, 139, 148, 164, 217, 361, 474, 475, 476, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 515, 851, 857, 864, 875], "ensembl": [27, 62, 66, 136, 267, 370, 476], "neo": [27, 62, 66, 187, 267, 370, 476, 875], "xdf": [27, 62, 66, 267, 370, 476], "anatomi": [27, 87, 89, 155, 174, 259, 262, 264, 265, 266, 267, 268, 273, 275, 306, 476, 480, 521, 522, 533, 604, 610, 615, 618, 645, 647, 648, 649, 660, 742, 830, 851, 875], "css": [27, 76, 83, 171, 242, 259, 265, 266, 267, 268, 272, 273, 362, 475, 552, 553, 570, 604, 615, 618, 659, 661, 875], "bridg": [27, 76, 83, 242, 267, 310, 326, 370, 476, 481, 563, 582, 762, 804, 875], "much": [27, 44, 55, 73, 76, 81, 83, 133, 136, 139, 140, 141, 143, 148, 160, 164, 165, 169, 182, 190, 194, 200, 202, 203, 204, 205, 206, 207, 210, 213, 221, 239, 242, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 310, 326, 370, 431, 442, 446, 447, 475, 476, 481, 563, 582, 636, 762, 804, 834, 837, 838, 857, 863, 875], "gel": [27, 76, 83, 267, 310, 326, 370, 476, 481, 563, 582, 762, 804, 875], "densiti": [27, 32, 33, 34, 67, 74, 76, 77, 83, 103, 104, 117, 131, 133, 136, 141, 159, 160, 165, 171, 189, 194, 198, 199, 207, 221, 238, 242, 259, 262, 263, 264, 265, 267, 268, 273, 288, 295, 324, 357, 368, 412, 448, 475, 476, 513, 518, 521, 528, 529, 533, 536, 552, 555, 563, 564, 585, 586, 590, 602, 610, 617, 643, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 712, 713, 714, 736, 742, 758, 768, 774, 796, 810, 830, 851, 857, 860, 875], "csd": [27, 32, 33, 34, 76, 83, 103, 104, 168, 221, 262, 263, 264, 265, 267, 288, 295, 309, 324, 328, 368, 448, 475, 476, 552, 564, 610, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 712, 715, 768, 830, 875], "nir": [27, 76, 83, 209, 256, 267, 476, 503, 831, 841, 857, 864, 865, 875], "maxwel": [27, 76, 82, 83, 164, 165, 183, 197, 211, 212, 262, 264, 265, 267, 295, 296, 340, 342, 345, 346, 349, 352, 356, 357, 366, 367, 368, 407, 414, 428, 448, 450, 451, 470, 472, 473, 475, 476, 533, 566, 574, 583, 584, 782, 784, 875], "movement": [27, 73, 74, 76, 81, 83, 110, 136, 164, 197, 203, 204, 205, 211, 212, 215, 216, 242, 254, 256, 262, 264, 265, 267, 339, 340, 341, 342, 343, 345, 347, 349, 350, 361, 428, 448, 466, 475, 488, 559, 562, 574, 583, 648, 660, 758, 765, 777, 784, 810, 830, 851, 875], "reestim": [27, 76, 83, 256, 267, 342, 343, 361, 488, 559, 562, 565, 758, 784, 810, 875], "dev_head_t": [27, 76, 78, 83, 155, 165, 168, 213, 256, 267, 313, 342, 343, 361, 370, 488, 559, 562, 566, 574, 583, 646, 647, 648, 660, 758, 784, 810, 860, 875], "muscl": [27, 76, 83, 143, 203, 242, 256, 310, 326, 488, 490, 555, 560, 875], "denois": [27, 76, 83, 194, 259, 262, 264, 265, 267, 352, 357, 415, 427, 448, 450, 475, 519, 552, 556, 566, 591, 610, 773, 875], "oversampl": [27, 76, 83, 242, 262, 264, 265, 352, 427, 448, 450, 475, 519, 591], "shift": [27, 74, 76, 83, 133, 139, 165, 193, 197, 200, 201, 206, 216, 242, 257, 260, 261, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 413, 435, 475, 476, 483, 490, 546, 555, 557, 580, 590, 613, 695, 698, 707, 742, 783, 795, 806, 875], "2d": [27, 31, 35, 40, 59, 94, 95, 117, 120, 128, 150, 171, 189, 194, 198, 201, 203, 204, 205, 206, 224, 229, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 310, 311, 316, 319, 327, 336, 364, 415, 418, 422, 424, 445, 446, 475, 476, 487, 495, 505, 510, 555, 680, 682, 683, 742, 743, 754, 758, 759, 763, 780, 801, 803, 804, 810, 811, 812, 814, 830, 838, 851, 875], "arrowmap": [27, 120, 128, 264, 267, 488, 551, 552, 613, 759, 875], "layout": [27, 47, 98, 113, 120, 128, 130, 131, 141, 149, 150, 158, 188, 210, 226, 262, 263, 264, 265, 267, 271, 317, 319, 321, 324, 325, 326, 336, 370, 475, 476, 482, 486, 488, 498, 499, 519, 695, 697, 699, 743, 747, 755, 758, 766, 780, 791, 794, 803, 809, 810, 830, 857, 865, 875], "parcel": [27, 38, 41, 67, 88, 92, 93, 120, 128, 134, 154, 175, 180, 220, 242, 268, 381, 383, 384, 459, 600, 618, 742, 753, 825, 830, 875], "roi": [27, 38, 120, 128, 150, 154, 198, 225, 242, 260, 262, 264, 265, 267, 322, 433, 436, 491, 522, 742, 778, 830, 857, 860, 875], "rt": [27, 120, 128, 167, 262, 267, 322, 433, 436, 491], "room": [27, 120, 125, 128, 141, 150, 161, 171, 183, 190, 201, 203, 204, 206, 208, 209, 210, 214, 242, 273, 352, 357, 475, 565, 566, 574, 583, 584, 765, 830, 850, 857, 875], "lock": [27, 103, 104, 139, 155, 161, 167, 202, 205, 228, 239, 242, 257, 262, 267, 268, 431, 448, 475, 521, 536, 539, 552, 555, 617, 789, 854], "vectorview": [27, 61, 103, 104, 117, 169, 182, 255, 259, 264, 265, 267, 273, 311, 317, 318, 332, 336, 357, 386, 427, 428, 475, 513, 518, 528, 533, 566, 574, 583, 602, 643, 736, 742, 758, 810, 830, 846, 851, 857], "induc": [27, 103, 104, 105, 161, 165, 226, 227, 228, 239, 242, 262, 263, 267, 273, 448, 475, 521, 536, 538, 539, 552, 695, 698, 711, 721, 722, 725, 854, 875], "erd": [27, 103, 104, 238, 242, 259, 262, 263, 264, 265, 271, 361, 407, 414, 436, 475, 476, 490, 554, 555, 682, 695, 697, 698, 699, 726, 759, 774, 781, 785, 794, 797, 802, 804, 851, 875], "multitap": [27, 73, 81, 101, 103, 104, 107, 136, 141, 142, 165, 171, 194, 203, 229, 237, 238, 242, 262, 263, 264, 265, 267, 285, 370, 420, 446, 475, 476, 528, 695, 697, 698, 699, 702, 705, 722, 723, 724, 725, 726, 727, 746, 863, 875], "morlet": [27, 32, 101, 103, 104, 111, 165, 200, 228, 229, 242, 262, 267, 285, 370, 420, 476, 695, 698, 701, 704, 709, 720, 722, 725, 726, 727, 746, 865, 873, 875], "stockwel": [27, 103, 104, 229, 242, 262, 267, 285, 370, 476, 695, 698, 722, 724, 725, 726, 727, 746, 875], "hilbert": [27, 80, 103, 104, 111, 166, 229, 262, 263, 264, 265, 267, 285, 370, 475, 476, 695, 698, 722, 725, 726, 727, 746, 875], "permut": [27, 96, 100, 110, 164, 224, 225, 226, 227, 230, 231, 234, 235, 236, 242, 262, 264, 265, 267, 273, 274, 275, 316, 358, 430, 475, 521, 522, 536, 546, 552, 610, 623, 625, 667, 675, 682, 683, 684, 685, 686, 687, 698, 725, 742, 763, 766, 863, 875], "1d": [27, 96, 100, 115, 208, 262, 267, 281, 285, 472, 473, 475, 510, 552, 566, 574, 583, 592, 610, 682, 683, 685, 686, 746, 783], "fdr": [27, 96, 99, 100, 262, 267, 475, 552, 610, 673, 679, 875], "rer": [27, 96, 100, 262, 264, 265, 267, 351, 448, 475, 552, 681], "p": [27, 47, 51, 58, 94, 95, 96, 98, 99, 100, 110, 133, 155, 159, 171, 187, 200, 221, 224, 225, 226, 228, 229, 232, 233, 234, 239, 242, 254, 260, 261, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 351, 446, 448, 470, 475, 476, 533, 552, 555, 566, 652, 655, 657, 673, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 689, 695, 698, 760, 773, 834, 850, 854, 857, 875], "sloreta": [27, 28, 30, 31, 36, 38, 39, 41, 48, 50, 56, 59, 88, 102, 164, 165, 174, 177, 178, 180, 185, 186, 220, 232, 234, 242, 259, 262, 264, 265, 267, 268, 269, 270, 273, 276, 277, 278, 352, 448, 475, 521, 522, 523, 524, 525, 526, 528, 529, 533, 534, 535, 536, 538, 539, 615, 617, 742, 767, 830, 875], "timecours": [27, 33, 36, 42, 56, 259, 260, 262, 264, 265, 266, 267, 273, 277, 286, 290, 295, 300, 448, 450, 475, 517, 521, 522, 524, 533, 602, 604, 605, 615, 630, 696, 698, 706, 725, 742], "dic": [27, 31, 36, 56, 101, 164, 179, 222, 223, 242, 259, 262, 266, 267, 273, 286, 287, 288, 289, 290, 292, 295, 296, 352, 356, 448, 475, 476, 481, 511, 521, 522, 523, 533, 546, 551, 552, 615, 630, 649, 660, 696, 698, 704, 706, 725, 742, 767, 830, 841, 851, 875], "beamform": [27, 36, 51, 56, 101, 164, 165, 185, 186, 221, 242, 259, 262, 264, 265, 266, 267, 273, 274, 275, 277, 278, 352, 356, 358, 362, 368, 448, 450, 475, 523, 531, 533, 552, 604, 615, 625, 696, 698, 704, 706, 725, 742, 767, 830, 843, 851, 865, 875], "er": [27, 32, 33, 36, 56, 110, 238, 242, 259, 262, 263, 266, 267, 273, 288, 292, 295, 296, 352, 356, 448, 475, 523, 533, 552, 615, 681, 704, 742, 767, 773, 851, 875], "lcmv": [27, 31, 36, 56, 164, 174, 185, 186, 259, 262, 264, 265, 266, 267, 273, 274, 275, 277, 278, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 352, 356, 358, 362, 368, 448, 451, 475, 523, 531, 533, 552, 604, 615, 625, 704, 742, 767, 830, 875], "spars": [27, 36, 44, 46, 56, 117, 174, 224, 229, 232, 234, 242, 254, 259, 260, 264, 266, 267, 273, 274, 275, 306, 316, 327, 358, 368, 370, 451, 470, 471, 472, 473, 521, 522, 533, 604, 613, 615, 625, 661, 675, 681, 682, 683, 685, 686, 742, 769, 770, 801, 834, 841, 843, 857, 860, 875], "gamma": [27, 36, 56, 110, 111, 115, 242, 259, 262, 263, 264, 265, 266, 267, 273, 368, 470, 471, 475, 476, 530, 604, 613, 615, 697, 699, 711, 721, 722, 725, 769, 770, 774, 801, 857, 860, 875], "bayesian": [27, 36, 56, 242, 259, 264, 266, 267, 273, 352, 368, 470, 471, 604, 613, 615, 769, 770, 801, 841, 857], "mix": [27, 36, 56, 59, 101, 194, 203, 239, 242, 259, 260, 264, 266, 267, 269, 270, 273, 274, 275, 276, 277, 278, 295, 296, 358, 441, 452, 470, 471, 472, 473, 510, 518, 521, 522, 533, 555, 581, 604, 613, 615, 618, 623, 625, 643, 644, 650, 651, 652, 653, 654, 655, 656, 657, 687, 690, 742, 769, 770, 785, 800, 801, 805, 863, 875], "norm": [27, 31, 36, 47, 48, 49, 50, 56, 57, 59, 77, 82, 114, 148, 155, 161, 165, 176, 178, 184, 205, 220, 221, 242, 259, 260, 262, 263, 264, 265, 266, 267, 273, 274, 275, 358, 451, 470, 471, 472, 473, 475, 476, 521, 522, 523, 524, 525, 526, 528, 529, 531, 532, 533, 535, 537, 538, 539, 604, 613, 615, 625, 652, 655, 657, 707, 769, 770, 799, 801, 830, 841, 843, 850, 860, 875], "mxne": [27, 31, 36, 56, 174, 259, 260, 262, 264, 265, 266, 267, 273, 274, 275, 352, 358, 448, 471, 472, 473, 521, 522, 533, 604, 613, 615, 625, 742, 769, 770, 801, 830, 875], "irmxn": [27, 36, 56, 259, 260, 264, 266, 267, 273, 274, 275, 358, 471, 472, 521, 522, 533, 604, 613, 615, 625, 769, 770, 801], "volumetr": [27, 36, 50, 56, 134, 157, 159, 174, 176, 180, 264, 269, 270, 273, 274, 275, 276, 277, 278, 358, 510, 521, 522, 536, 613, 624, 625, 742, 800, 805, 806, 808, 815, 830, 863, 875], "xfit": [27, 36, 56, 259, 260, 262, 264, 265, 266, 267, 277, 300, 448, 450, 475, 517, 521, 522, 524, 533, 602, 604, 605, 630, 875], "reweight": [27, 36, 40, 56, 242, 259, 262, 264, 265, 266, 273, 352, 448, 471, 472, 473, 615, 801], "tf": [27, 31, 36, 56, 59, 200, 259, 262, 264, 265, 266, 273, 352, 448, 471, 473, 615, 801, 875], "multiscal": [27, 36, 56, 259, 262, 264, 265, 266, 273, 352, 448, 471, 473, 615, 801], "circular": [27, 36, 56, 150, 220, 273, 275, 362, 465, 532, 534, 536, 615, 618, 742, 747, 841, 857, 875], "graph": [27, 36, 56, 115, 242, 273, 275, 362, 532, 534, 536, 615, 618, 665, 666, 667, 668, 669, 670, 671, 742, 747, 875], "spread": [27, 36, 42, 54, 55, 56, 70, 79, 81, 82, 111, 164, 167, 200, 205, 206, 208, 222, 223, 242, 259, 262, 264, 265, 266, 267, 268, 273, 275, 277, 352, 362, 448, 475, 518, 521, 522, 523, 531, 532, 533, 534, 536, 537, 563, 583, 604, 613, 615, 618, 644, 657, 659, 662, 742, 834, 857, 875], "psf": [27, 36, 54, 55, 56, 259, 264, 266, 267, 273, 275, 277, 362, 518, 521, 531, 532, 533, 534, 537, 604, 613, 615, 644, 742, 875], "talk": [27, 36, 56, 159, 200, 208, 226, 259, 262, 264, 266, 267, 273, 286, 296, 297, 352, 362, 368, 428, 448, 521, 531, 532, 533, 534, 537, 552, 565, 574, 583, 604, 613, 615, 742, 830, 856, 875], "rap": [27, 36, 56, 242, 259, 264, 266, 298, 604, 613, 615, 769, 770, 875], "music": [27, 36, 56, 203, 242, 259, 264, 266, 298, 604, 613, 615, 769, 770, 875], "resolut": [27, 30, 36, 44, 47, 48, 50, 56, 112, 118, 133, 145, 155, 156, 157, 175, 210, 226, 227, 242, 255, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 297, 358, 362, 407, 414, 441, 463, 466, 475, 476, 521, 522, 531, 532, 533, 534, 537, 553, 554, 555, 604, 613, 615, 695, 697, 699, 711, 721, 722, 723, 724, 725, 726, 727, 742, 759, 774, 781, 785, 794, 797, 800, 802, 804, 805, 830, 841, 850, 856, 857, 875], "auto_examples_python": 27, "auto_examples_jupyt": 27, "fname_raw": [28, 29, 61, 101, 102, 125, 156, 181, 207], "fname_ev": [28, 92, 101, 102], "label_nam": [28, 29, 47, 90, 92, 102, 105, 180, 220, 460], "fname_label": [28, 29, 102, 105, 106], "assumpt": [28, 107, 119, 139, 140, 143, 151, 161, 200, 204, 208, 224, 264, 265, 591, 677, 782, 854, 857, 875], "read_label": [28, 29, 37, 39, 90, 102, 105, 106, 273, 276, 645, 865], "add": [28, 37, 43, 44, 69, 73, 88, 92, 93, 99, 112, 118, 124, 125, 133, 135, 139, 140, 142, 143, 150, 160, 167, 170, 171, 174, 175, 180, 188, 190, 193, 197, 198, 199, 201, 203, 204, 206, 213, 215, 220, 221, 224, 229, 239, 254, 256, 258, 259, 262, 263, 264, 265, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 310, 369, 407, 409, 414, 418, 431, 443, 445, 446, 466, 475, 476, 554, 555, 565, 567, 568, 569, 603, 625, 634, 637, 642, 643, 645, 646, 647, 648, 649, 659, 692, 695, 697, 698, 699, 737, 742, 745, 759, 762, 763, 772, 774, 779, 781, 785, 794, 797, 802, 804, 811, 830, 832, 834, 837, 840, 841, 860, 875], "053": [28, 49, 68, 72, 90, 91, 102, 105, 106, 108, 109, 115, 150, 161, 165, 166, 167, 168, 176, 197, 198, 199, 204, 205, 206, 208, 213, 214, 215, 216, 221, 226, 227], "sqrt": [28, 115, 182, 183, 220, 221, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 560, 581, 711, 721, 725, 796, 857], "mean_stc": 28, "flip": [28, 38, 39, 113, 160, 203, 224, 254, 269, 270, 273, 276, 277, 278, 301, 441, 509, 682, 812, 857, 875], "cancel": [28, 79, 179, 200, 208, 269, 270, 273, 276, 277, 278, 428, 441, 555, 583, 786, 850, 857, 860], "label_sign_flip": [28, 865, 875], "label_mean": 28, "label_mean_flip": 28, "stc_evok": 28, "sub": [28, 32, 33, 34, 41, 46, 65, 69, 81, 111, 145, 154, 169, 210, 238, 239, 262, 263, 264, 265, 267, 434, 475, 476, 581, 644, 696, 742, 768, 846, 854, 857, 875], "stc_evoked_label": 28, "in_label": [28, 37, 38, 39, 273, 276, 277, 278, 875], "care": [28, 34, 140, 149, 150, 159, 200, 203, 204, 213, 215, 368, 473, 681, 857, 875], "polar": [28, 47, 141, 205, 764], "label_mean_evok": 28, "1711": [28, 34, 45, 105, 119, 130, 141, 144, 145, 151, 165, 168, 176, 179, 199, 221, 229, 232, 234], "benefit": [28, 45, 46, 55, 59, 70, 124, 171, 189, 242, 537, 564, 655, 850, 856], "1e3": [28, 29, 38, 39, 41, 68, 71, 95, 111, 136, 148, 150, 155, 156, 176, 184, 220, 226, 227, 228, 234], "h0": [28, 94, 98, 224, 225, 226, 227, 228, 232, 233, 234, 682, 683, 684, 685, 686], "h1": [28, 94, 110, 224, 225, 226, 227, 228, 229, 232, 233, 234], "linewidth": [28, 39, 95, 110, 111, 135, 149, 159, 204, 224, 259, 262, 263, 264, 265, 407, 414, 475, 476, 554, 695, 697, 699, 742, 759, 766, 774, 781, 797, 798, 801, 802, 804], "h2": 28, "unflip": 28, "pool": [28, 139, 148, 150, 165, 214, 295, 296, 470, 472, 473, 522, 523, 524, 525, 526, 528, 529, 539, 863], "stc_trial": 28, "_nolegend_": 28, "compute_mne_inverse_epochs_in_label": [28, 56], "apply_inverse_raw": [29, 522, 523, 524, 526, 865, 875], "smaller": [29, 41, 74, 102, 125, 141, 148, 157, 200, 205, 208, 224, 225, 239, 257, 262, 263, 269, 270, 273, 276, 277, 278, 473, 557, 571, 574, 581, 682, 683, 685, 686, 710, 718, 742, 800, 805, 850, 857, 875], "time_as_index": [29, 40, 82, 139, 148, 174, 213, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 695, 698, 875], "mne_": [29, 30, 860], "s_raw_inverse_": 29, "overwrit": [29, 41, 102, 106, 108, 139, 160, 171, 190, 215, 254, 256, 259, 260, 262, 263, 264, 265, 269, 270, 272, 273, 274, 275, 276, 277, 278, 286, 305, 306, 307, 310, 437, 438, 439, 440, 475, 476, 507, 540, 554, 555, 564, 633, 634, 637, 641, 695, 696, 697, 698, 699, 728, 817, 818, 819, 820, 821, 822, 823, 825, 826, 827, 828, 829, 875], "25800": [29, 45, 67, 70, 78, 81, 90, 91, 101, 102, 105, 108, 109, 116, 121, 125, 145, 155, 161, 166, 167, 171, 181, 197, 201, 202, 204, 205, 206, 213, 216, 220, 221, 226, 227, 228], "192599": [29, 45, 67, 70, 81, 90, 91, 101, 102, 105, 108, 109, 116, 121, 125, 145, 155, 161, 166, 167, 171, 181, 197, 201, 202, 204, 205, 213, 216, 220, 221, 226, 227, 228], "670": [29, 45, 67, 70, 79, 81, 90, 91, 101, 102, 105, 108, 109, 116, 121, 125, 145, 155, 161, 165, 166, 167, 171, 181, 197, 201, 202, 204, 205, 207, 213, 216, 220, 221, 226, 227, 228], "360": [29, 40, 48, 49, 54, 55, 56, 58, 59, 79, 80, 91, 92, 110, 119, 151, 161, 168, 171, 177, 190, 207, 224, 229, 238], "compute_mne_inverse_raw_in_label": [29, 56], "nilearn": [30, 41, 44, 133, 170, 175, 180, 181, 277, 278, 694, 806], "plot_stat_map": 30, "index_img": 30, "read_evok": [30, 31, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 77, 84, 85, 114, 117, 118, 122, 125, 148, 149, 171, 175, 177, 178, 180, 262, 263, 264, 265, 272, 475, 476, 821, 854, 865, 875], "vol": [30, 44, 50, 134, 159, 175, 179, 180, 260, 262, 263, 264, 265, 275, 298, 428, 623, 650, 651, 652, 653, 654, 655, 656, 657, 782], "4d": [30, 121, 164, 185, 186, 187, 259, 260, 262, 263, 264, 265, 267, 300, 352, 448, 450, 475, 476, 486, 519, 552, 553, 682, 683, 695, 697, 698, 699, 758, 770, 857, 860, 875], "img": [30, 114, 159, 181, 224, 277, 278], "as_volum": [30, 277, 278, 875], "nib": [30, 44, 133, 155], "s_invers": 30, "gz": [30, 139, 154, 171, 204, 254, 261, 262, 263, 264, 265, 275, 310, 382, 475, 476, 495, 536, 540, 555, 595, 601, 604, 606, 613, 615, 621, 625, 660, 816, 819, 821, 822, 826, 827, 840, 875], "t1_fname": [30, 159, 175], "499": [30, 31, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 77, 84, 85, 114, 117, 118, 125, 141, 142, 148, 167, 171, 175, 177, 178, 180, 224, 227, 228, 229], "11271": [30, 44, 180, 875], "336": [30, 56, 110, 168, 170, 207, 875], "compute_mne_inverse_volum": [30, 56], "plug": [31, 834, 857], "facil": [31, 255], "implement": [31, 69, 133, 165, 168, 178, 194, 201, 203, 208, 221, 239, 255, 259, 267, 271, 286, 287, 289, 300, 330, 352, 358, 407, 414, 415, 420, 424, 447, 470, 472, 473, 475, 476, 518, 521, 522, 523, 524, 525, 526, 528, 529, 539, 555, 556, 563, 569, 574, 598, 620, 679, 720, 722, 730, 795, 834, 841, 849, 858, 863, 873, 875], "wmne": [31, 472, 473], "eloreta": [31, 164, 165, 174, 177, 178, 185, 186, 232, 234, 259, 262, 264, 265, 267, 273, 295, 296, 352, 448, 470, 472, 473, 521, 522, 523, 524, 525, 526, 528, 529, 533, 535, 538, 539, 615, 742, 767, 830, 875], "educ": [31, 856], "shall": [31, 143, 199, 264, 265, 431, 555, 663, 777, 834, 856, 863], "develop": [31, 69, 133, 170, 203, 208, 253, 254, 330, 574, 694, 751, 837, 838, 840, 841, 851, 854, 856, 860, 875], "meant": [31, 88, 93, 107, 170, 224, 271, 287, 289, 339, 409, 419, 510, 642, 736, 737, 745, 875], "practic": [31, 70, 97, 112, 150, 159, 167, 199, 200, 206, 208, 239, 242, 268, 295, 555, 564, 617, 623, 681, 830, 834, 856, 857], "apply_solv": 31, "linalg": [31, 82, 133, 155, 159, 184, 204, 356, 681, 854, 875], "plot_sparse_source_estim": [31, 35, 40, 46, 59, 90, 807, 865, 875], "ave_fnam": [31, 40, 59, 67, 90], "cov_fnam": [31, 35, 40, 45, 51, 59, 67, 90, 171, 221, 272], "handl": [31, 40, 46, 59, 125, 139, 143, 145, 150, 154, 159, 164, 165, 167, 169, 171, 172, 205, 208, 211, 212, 257, 262, 263, 264, 265, 267, 340, 434, 448, 475, 476, 549, 552, 555, 583, 640, 743, 751, 759, 762, 764, 775, 786, 790, 814, 834, 860, 875], "365": [31, 40, 41, 45, 59, 79, 168, 193, 205, 229, 242, 268, 273, 352], "auxiliari": [31, 141, 369], "def": [31, 34, 67, 75, 82, 90, 91, 92, 107, 111, 115, 131, 133, 136, 149, 150, 155, 159, 200, 201, 204, 221, 224, 228, 234, 239, 834], "ones": [31, 81, 86, 109, 140, 169, 177, 182, 184, 187, 204, 205, 224, 239, 255, 268, 383, 442, 468, 469, 475, 476, 514, 557, 574, 617, 623, 630, 680, 834, 854, 857, 860, 875], "account": [31, 78, 107, 121, 133, 140, 141, 155, 157, 161, 179, 184, 198, 199, 205, 206, 208, 213, 214, 224, 229, 239, 256, 259, 264, 265, 295, 296, 352, 356, 357, 366, 367, 368, 407, 414, 450, 451, 470, 472, 473, 533, 555, 558, 581, 782, 834, 854, 857, 860, 875], "constraint": [31, 60, 157, 165, 177, 193, 206, 242, 262, 263, 285, 297, 450, 533, 773, 860, 875], "weigth": 31, "formul": [31, 711, 721, 722, 725, 857], "problem": [31, 40, 59, 69, 86, 94, 95, 112, 136, 143, 160, 165, 174, 175, 187, 188, 194, 198, 202, 203, 205, 206, 213, 224, 225, 229, 232, 233, 234, 239, 242, 472, 491, 555, 574, 601, 607, 682, 683, 685, 686, 688, 689, 808, 833, 834, 839, 854, 855, 857, 863, 875], "bia": [31, 40, 69, 82, 140, 150, 183, 200, 232, 234, 238, 242, 259, 264, 265, 295, 296, 358, 420, 470, 472, 473, 533, 581, 714, 776, 781, 857, 875], "callabl": [31, 149, 259, 262, 263, 264, 265, 269, 270, 271, 273, 276, 277, 278, 281, 310, 312, 338, 363, 407, 410, 414, 417, 424, 436, 475, 476, 525, 554, 555, 569, 631, 661, 662, 674, 681, 682, 683, 685, 686, 695, 697, 698, 699, 740, 742, 755, 759, 766, 773, 774, 776, 781, 785, 794, 797, 800, 802, 803, 804, 805, 875], "boolean": [31, 99, 140, 142, 168, 170, 204, 205, 213, 215, 259, 262, 263, 264, 265, 271, 273, 407, 414, 475, 476, 554, 555, 682, 683, 685, 686, 695, 697, 699, 773, 774, 778, 781, 785, 794, 797, 802, 834, 861, 875], "what": [31, 59, 70, 81, 88, 92, 93, 115, 125, 126, 133, 135, 139, 140, 141, 142, 143, 155, 159, 168, 170, 174, 179, 180, 181, 189, 198, 200, 209, 213, 214, 215, 221, 224, 226, 229, 237, 239, 257, 260, 261, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 352, 356, 363, 366, 367, 382, 399, 426, 431, 436, 440, 457, 474, 475, 476, 491, 541, 588, 601, 603, 607, 632, 634, 645, 695, 698, 723, 726, 765, 800, 805, 823, 830, 834, 837, 839, 840, 842, 860, 863, 865], "tangenti": [31, 295, 296, 452, 470, 472, 473, 533, 857, 860], "discret": [31, 45, 102, 157, 175, 194, 206, 237, 242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 275, 276, 277, 278, 414, 452, 470, 472, 473, 475, 476, 517, 533, 644, 695, 697, 698, 699, 707, 713, 856, 875], "coeffici": [31, 99, 107, 140, 145, 157, 193, 200, 202, 411, 413, 419, 425, 442, 443, 444, 472, 473, 554, 565, 566, 574, 583, 594, 598, 649, 658, 659, 680, 681, 697, 699, 708, 710, 713, 718, 783, 875], "privat": [31, 834, 875], "inverse_spars": [31, 35, 40, 46, 59, 174, 843, 865, 875], "mxne_invers": 31, "_prepare_gain": 31, "is_fixed_ori": [31, 875], "_reapply_source_weight": 31, "_make_sparse_stc": 31, "all_ch_nam": 31, "gain_info": 31, "source_weight": 31, "weights_min": [31, 40, 59, 472, 473, 875], "dot": [31, 77, 85, 110, 117, 122, 125, 143, 149, 159, 174, 177, 181, 184, 189, 193, 198, 205, 209, 232, 234, 260, 264, 265, 269, 273, 277, 681, 770, 776, 834, 857, 875], "n_orient": [31, 269, 270, 273, 276, 277, 278, 441, 537], "active_set": 31, "l2": [31, 40, 54, 55, 242, 472, 473, 537, 655, 707, 843, 860], "penal": 31, "strongest": [31, 35, 40, 47, 59, 150], "n_dipol": [31, 51, 67, 90, 91, 157, 260, 269, 270, 273, 276, 277, 278, 298, 427, 531, 532, 534, 661], "depend": [31, 69, 80, 99, 124, 134, 135, 136, 140, 148, 150, 154, 156, 157, 161, 169, 170, 171, 189, 193, 199, 200, 202, 204, 205, 208, 215, 221, 224, 225, 226, 234, 239, 242, 256, 262, 263, 264, 265, 269, 270, 273, 275, 276, 277, 278, 297, 316, 327, 340, 341, 400, 413, 419, 433, 441, 451, 475, 476, 483, 490, 492, 555, 565, 574, 591, 597, 676, 682, 683, 685, 686, 688, 690, 691, 694, 695, 697, 698, 699, 717, 742, 751, 763, 765, 766, 772, 773, 776, 789, 795, 815, 832, 833, 834, 837, 840, 841, 842, 849, 850, 851, 854, 857], "n_active_dipol": 31, "bool": [31, 118, 170, 229, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 301, 302, 303, 304, 305, 306, 307, 310, 311, 312, 314, 315, 318, 319, 320, 321, 324, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 428, 429, 432, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 450, 451, 452, 455, 457, 458, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 578, 579, 580, 581, 583, 584, 586, 587, 588, 590, 591, 592, 595, 596, 597, 598, 602, 603, 604, 605, 606, 607, 609, 610, 611, 613, 614, 615, 617, 618, 619, 620, 621, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 673, 676, 679, 682, 683, 684, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 711, 712, 713, 714, 717, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 737, 741, 742, 747, 750, 751, 755, 756, 758, 759, 760, 761, 763, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 810, 811, 812, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 854], "entri": [31, 107, 133, 139, 141, 143, 149, 150, 165, 169, 170, 194, 198, 213, 256, 259, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 284, 312, 339, 340, 341, 342, 343, 344, 407, 414, 417, 429, 439, 442, 473, 474, 475, 476, 522, 530, 554, 555, 569, 641, 644, 646, 647, 648, 660, 675, 695, 697, 698, 699, 742, 759, 760, 772, 773, 774, 778, 781, 785, 794, 795, 797, 800, 801, 802, 804, 805, 834, 837, 857, 860, 875], "x_full": 31, "solv": [31, 59, 160, 174, 407, 491, 555, 601, 607, 681, 857, 863], "ey": [31, 73, 123, 133, 134, 136, 157, 171, 182, 197, 199, 202, 204, 205, 377, 491, 572, 576, 607], "dtype": [31, 90, 92, 112, 118, 143, 155, 166, 219, 221, 229, 262, 263, 264, 265, 413, 474, 475, 476, 857], "bgcolor": [31, 35, 40, 46, 59, 90, 155, 159, 177, 475, 476, 751, 761, 795, 801], "115": [31, 35, 56, 61, 82, 92, 168, 182, 224, 228, 229, 242, 563], "custom_inverse_solv": [31, 56], "synchron": [32, 33, 34, 110, 145, 209, 238, 242, 255, 295, 477, 483, 490, 834, 851, 875], "marijn": [32, 33, 45, 60, 72, 101, 160, 221, 242, 295, 296, 862, 875], "van": [32, 33, 43, 45, 60, 72, 101, 124, 160, 179, 200, 221, 242, 274, 295, 296, 358, 384, 563, 857, 862, 875], "vliet": [32, 33, 45, 60, 72, 101, 160, 221, 242, 295, 296, 862, 875], "vanvliet": [32, 33, 45, 60, 72, 101, 160, 221], "rockhil": [32, 69, 70, 81, 112, 113, 114, 118, 133, 134, 135, 228, 229, 242, 862, 875], "aprockhil": [32, 69, 70, 81, 112, 113, 114, 118, 133, 134, 135, 228, 229], "mailbox": [32, 33, 69, 70, 81, 111, 112, 113, 114, 118, 125, 133, 134, 135, 226, 228, 229, 232, 238], "tfr_morlet": [32, 112, 165, 226, 227, 228, 229, 238, 420, 720, 722, 723, 724, 726, 727, 865, 875], "csd_tfr": [32, 865, 875], "make_d": [32, 33, 34, 221, 287, 288, 289, 290, 830, 865, 875], "apply_dics_tfr_epoch": [32, 287, 288, 289, 865, 875], "organ": [32, 70, 228, 229, 242, 564, 685, 686, 851, 856, 860], "_task": [32, 33, 34, 46, 111, 238], "_meg": [32, 33, 34, 46, 111, 171, 238, 254, 475, 476, 495, 496, 875], "5000e": 32, "mostli": [32, 107, 140, 174, 177, 187, 199, 202, 374, 375, 376, 379, 380, 382, 387, 390, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 452, 470, 472, 473, 475, 476, 533, 742, 830], "wavelet": [32, 101, 111, 165, 200, 228, 242, 420, 539, 695, 698, 701, 704, 709, 711, 720, 721, 722, 723, 725, 726, 830, 875], "tfr": [32, 110, 200, 226, 227, 238, 420, 522, 523, 524, 525, 695, 698, 701, 704, 706, 717, 722, 723, 725, 726, 727, 728, 802, 830, 863, 865, 873, 875], "wish": [32, 143, 170, 189, 206, 225, 226, 232, 361, 475, 476, 574, 743, 745, 834, 842, 856], "epochs_tfr": [32, 290, 526, 706], "return_itc": [32, 110, 112, 165, 226, 227, 228, 229, 238, 724, 725, 726, 727], "buffer": [32, 112, 188, 254, 267, 474, 475, 476, 491, 574, 583, 601, 607, 860, 875], "01_task": [32, 33, 34, 46, 111, 169, 238, 239], "somato_meg": [32, 33, 34, 46, 111, 238], "237600": [32, 33, 34, 46, 111, 238], "506999": [32, 33, 34, 46, 111, 238], "791": [32, 33, 34, 46, 111, 121, 128, 180, 229, 238], "1688": [32, 33, 34, 46, 111, 238], "266": [32, 33, 34, 46, 111, 168, 200, 207, 229, 238, 242], "9989760657919393": 32, "1052": [32, 33, 34, 194], "0121": [32, 34, 144, 165, 168, 213, 221], "0211": [32, 34, 165, 168, 221], "1331": [32, 34, 144, 168, 199, 207, 221], "2211": [32, 34, 168, 221], "2241": [32, 34, 158, 168, 221], "2521": [32, 34, 139, 148, 168, 221], "1641": [32, 34, 168, 221], "1831": [32, 34, 168, 221], "1921": [32, 34, 168, 221], "1941": [32, 34, 168, 221], "1611": [32, 34, 118, 168, 221], "0441": [32, 34, 168, 221], "1631": [32, 34, 118, 168, 221], "0231": [32, 34, 118, 165, 168, 221], "1411": [32, 34, 144, 145, 168, 199, 205, 221], "0341": [32, 34, 168, 221], "1621": [32, 34, 118, 168, 221], "1811": [32, 34, 118, 149, 168, 193, 213, 221], "1521": [32, 34, 165, 168, 221], "1721": [32, 34, 168, 221], "1911": [32, 34, 168, 221], "1931": [32, 34, 168, 221], "2111": [32, 34, 168, 221], "2021": [32, 34, 143, 168, 179, 189, 210, 221, 242, 385, 503, 851, 856], "1341": [32, 34, 168, 207, 221], "0221": [32, 34, 165, 168, 221], "0241": [32, 34, 168, 221], "2041": [32, 34, 168, 221], "0731": [32, 34, 168, 221], "1141": [32, 34, 168, 221], "1131": [32, 34, 168, 221], "0131": [32, 34, 144, 165, 168, 221], "period": [32, 79, 119, 139, 140, 143, 144, 148, 149, 171, 179, 197, 199, 200, 201, 203, 210, 239, 257, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 352, 555, 558, 559, 560, 571, 613, 614, 707, 738, 776, 830, 834, 856, 875], "baseline_csd": 32, "scalar": [32, 140, 159, 179, 221, 262, 263, 264, 265, 269, 270, 271, 273, 276, 277, 278, 288, 295, 296, 297, 407, 414, 475, 476, 555, 681, 697, 699, 742, 774, 781, 785, 794, 800, 805, 875], "beamfom": 32, "noise_csd": [32, 33, 295], "reduce_rank": [32, 33, 34, 49, 295, 296, 875], "real_filt": [32, 33, 34, 221, 295, 875], "epochs_stc": 32, "return_gener": [32, 102, 289, 290, 293, 441, 524, 526, 529], "nsourc": [32, 52, 266, 860], "epoch_stc": 32, "conj": [32, 112, 295, 296], "apply_baselin": [32, 110, 125, 140, 148, 171, 177, 197, 202, 203, 205, 226, 227, 228, 229, 238, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 695, 698, 875], "8155": [32, 33, 34, 46], "sti": [32, 33, 42, 46, 68, 71, 72, 78, 88, 91, 92, 93, 105, 106, 108, 111, 139, 141, 148, 151, 165, 167, 168, 176, 187, 194, 198, 202, 203, 205, 214, 221, 226, 237, 238, 255, 448, 449, 475, 476, 492, 830, 875], "006": [32, 33, 119, 126, 139, 141, 144, 148, 157, 165, 168, 202, 205, 221, 242, 254, 268, 273, 512, 850], "014": [32, 33, 42, 46, 61, 68, 71, 72, 78, 88, 91, 92, 93, 105, 106, 108, 111, 126, 139, 141, 148, 151, 165, 167, 168, 176, 187, 194, 198, 202, 203, 205, 214, 221, 226, 237, 238, 255, 448, 449, 475, 476, 492, 875], "003": [32, 33, 71, 104, 112, 119, 126, 139, 140, 141, 144, 148, 165, 166, 168, 171, 199, 200, 202, 203, 205, 213, 221, 242], "015": [32, 33, 126, 139, 141, 148, 168, 202, 203, 221, 232, 242, 260, 569, 655, 770], "005": [32, 33, 119, 126, 139, 141, 148, 156, 158, 161, 165, 168, 202, 221, 234, 260, 342, 557, 770], "001": [32, 33, 70, 78, 81, 82, 119, 126, 139, 140, 141, 143, 144, 148, 149, 150, 159, 165, 167, 168, 171, 187, 193, 197, 199, 200, 201, 202, 205, 210, 213, 221, 224, 225, 226, 228, 229, 232, 233, 238, 242, 530, 564, 645, 682, 683, 685, 686, 851, 857], "074": 32, "gyri": [32, 92, 154, 157, 220, 242], "border": [32, 38, 59, 102, 114, 124, 154, 180, 259, 262, 263, 264, 265, 271, 407, 414, 433, 475, 476, 554, 555, 569, 695, 697, 699, 742, 774, 780, 781, 785, 794, 797, 802, 803, 804, 875], "central": [32, 126, 140], "sulcu": 32, "primari": [32, 92, 148, 856, 857], "s1": [32, 498], "m1": [32, 169, 206, 224, 239, 262, 263, 264, 265, 475, 476, 640, 875], "4500": 32, "dorsal": [32, 742], "brain_kwarg": [32, 41, 114, 133, 179, 180, 269, 270, 273, 276, 277, 278, 800, 805], "add_data_kwarg": [32, 134, 180, 269, 270, 273, 276, 277, 278, 800, 805], "fmid": [32, 269, 270, 273, 276, 277, 278, 742, 761, 800, 805, 806, 875], "scale_factor": [32, 35, 48, 49, 50, 59, 176, 270, 276, 278, 310, 742, 792, 801, 805], "colorbar_kwarg": [32, 134, 180, 742], "label_font_s": [32, 134, 180], "movi": [32, 60, 134, 135, 176, 180, 742, 875], "websit": [32, 134, 135, 150, 176, 180, 188, 205, 399, 400, 569, 834, 837, 856], "save_movi": [32, 60, 134, 135, 176, 180, 742, 875], "time_view": [32, 60, 107, 125, 134, 135, 176, 180, 190, 269, 270, 273, 276, 277, 278, 742, 800, 805, 875], "onc": [32, 34, 43, 44, 60, 69, 92, 118, 125, 131, 134, 141, 142, 143, 144, 149, 150, 165, 167, 168, 169, 171, 176, 180, 197, 198, 200, 202, 203, 204, 205, 213, 215, 255, 256, 262, 263, 264, 265, 274, 280, 372, 443, 445, 446, 475, 476, 573, 581, 723, 726, 763, 795, 834, 850, 856, 857, 875], "33913449": 32, "817": [32, 156, 163, 184, 186, 229], "80202112": 32, "68479992": 32, "058": [32, 56, 139, 141, 148, 168, 216, 221], "1384": [32, 56, 207], "dics_epoch": [32, 56, 875], "roman": [33, 242, 849, 875], "goj": [33, 242, 849, 875], "appelhoff": [33, 111, 125, 226, 229, 232, 238, 862, 875], "csd_morlet": [33, 34, 101, 221, 696, 700, 701, 702, 703, 705, 865, 875], "apply_dics_csd": [33, 34, 221, 287, 289, 290, 295, 865, 875], "shorter": [33, 112, 200, 208, 239, 269, 270, 273, 276, 277, 278, 431, 436, 475, 476, 560, 584, 590, 711, 721, 722, 723, 725, 726, 795, 875], "498464098687909": [33, 34], "logspac": [33, 34, 193, 238, 352], "log10": [33, 34, 98, 131, 200, 210, 221, 224, 238, 239, 695], "loss": [33, 69, 199, 204, 262, 263, 264, 265, 410, 417, 437, 438, 439, 440, 475, 476, 677, 857], "csd_baselin": [33, 34], "csd_er": [33, 34], "block": [33, 34, 59, 63, 101, 131, 133, 141, 142, 171, 190, 199, 221, 260, 262, 263, 264, 265, 272, 448, 466, 467, 472, 475, 476, 544, 555, 581, 614, 682, 683, 685, 686, 697, 699, 742, 770, 772, 789, 795, 796, 798, 832, 839, 857, 860, 875], "rather": [33, 34, 60, 139, 140, 145, 148, 155, 165, 166, 167, 169, 170, 177, 187, 194, 199, 205, 206, 210, 213, 224, 228, 232, 237, 262, 263, 266, 269, 270, 273, 276, 277, 278, 414, 475, 476, 520, 528, 529, 539, 546, 548, 582, 687, 690, 742, 760, 795, 830, 832, 834, 850, 851, 856, 857, 875], "entir": [33, 73, 102, 143, 150, 175, 183, 199, 200, 202, 208, 210, 214, 224, 239, 257, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 285, 408, 423, 522, 523, 524, 525, 526, 555, 571, 613, 645, 695, 834, 875], "baseline_source_pow": 33, "beta_source_pow": 33, "messag": [33, 170, 237, 254, 269, 270, 273, 276, 277, 278, 363, 441, 491, 601, 607, 641, 642, 737, 738, 739, 742, 832, 834, 840, 845, 854, 860, 875], "40188307": 33, "5102619": 33, "34636424": 33, "joachim": [33, 179, 221, 242, 288, 295], "gro\u00df": [33, 179, 221, 242, 288, 295], "jan": [33, 179, 221, 242, 288, 295, 296, 850, 875], "kujala": [33, 179, 221, 242, 288, 295, 296], "matti": [33, 40, 54, 55, 58, 59, 124, 161, 177, 179, 208, 221, 242, 273, 288, 295, 472, 473, 522, 533, 537, 566, 570, 583, 652, 657, 841, 849, 854, 857, 875], "h\u00e4m\u00e4l\u00e4inen": [33, 40, 58, 59, 124, 177, 179, 221, 242, 273, 288, 295, 428, 472, 473, 522, 533, 537, 570, 652, 655, 657, 841, 875], "lar": [33, 179, 221, 242, 288, 295], "timmermann": [33, 179, 221, 242, 288, 295], "alfon": [33, 179, 221, 242, 288, 295], "schnitzler": [33, 179, 221, 242, 288, 295], "riitta": [33, 111, 177, 179, 221, 242, 288, 295, 296], "salmelin": [33, 111, 179, 221, 242, 288, 295, 296], "nation": [33, 179, 221, 242, 253, 288, 295, 862], "academi": [33, 179, 221, 242, 288, 295], "694": [33, 73, 83, 179, 221, 242, 288, 295], "699": [33, 139, 150, 179, 221, 229, 242, 288, 295], "2001": [33, 41, 69, 179, 193, 206, 221, 242, 262, 263, 264, 265, 288, 295, 413, 475, 476, 563, 640, 679], "1073": [33, 179, 221, 242, 288, 295], "pna": [33, 179, 221, 242, 288, 295], "345": [33, 56, 110, 168, 193, 207, 224, 229], "208": [33, 56, 168, 170, 187, 207, 224, 242], "dics_source_pow": [33, 56, 875], "luke": [34, 38, 42, 74, 79, 80, 107, 862, 875], "bloi": [34, 38, 42, 79, 80, 107, 862, 875], "make_lcmv": [34, 49, 179, 287, 289, 291, 292, 293, 294, 295, 297, 830, 865, 875], "apply_lcmv_cov": [34, 179, 291, 293, 294, 865, 875], "apply_inverse_cov": [34, 42, 522, 524, 525, 526, 865, 875], "90092": 34, "maxfilt": [34, 187, 208, 267, 348, 349, 350, 428, 475, 476, 528, 529, 538, 539, 565, 566, 574, 583, 646, 647, 648, 660, 860, 875], "conserv": [34, 69, 145, 224, 563, 644, 742, 875], "advanc": [34, 72, 125, 160, 161, 202, 215, 242, 259, 262, 263, 264, 265, 271, 352, 370, 407, 414, 466, 470, 475, 476, 554, 555, 569, 660, 695, 697, 699, 751, 759, 774, 781, 785, 794, 797, 802, 804, 833, 836, 838, 854, 855, 857, 859, 863, 875], "correctli": [34, 43, 44, 149, 189, 202, 234, 262, 263, 264, 265, 330, 440, 475, 476, 757, 776, 832, 833, 840, 850, 851, 857, 860, 875], "preserv": [34, 154, 155, 159, 165, 166, 193, 198, 203, 213, 224, 228, 257, 262, 263, 264, 265, 406, 437, 438, 439, 440, 475, 476, 571, 580, 695, 697, 698, 699, 857, 875], "compute_rank": [34, 259, 415, 767, 865, 875], "tol": [34, 40, 46, 59, 73, 171, 356, 450, 470, 472, 473, 875], "tol_kind": [34, 356, 875], "active_win": 34, "baseline_win": 34, "baseline_cov": 34, "active_cov": 34, "common_cov": 34, "plot_cov": [34, 42, 176, 865, 875], "3737": 34, "_gen_dic": 34, "stc_base": [34, 42], "stc_act": 34, "_gen_lcmv": 34, "_gen_mn": 34, "stc_dic": 34, "stc_lcmv": 34, "stc_dspm": [34, 40, 59], "0811": [34, 168, 199, 221], "0521": [34, 168, 199, 221], "2531": [34, 168, 199, 221], "0711": [34, 168, 221], "2131": [34, 168, 193, 199, 221, 224, 242, 688, 689], "1821": [34, 168, 221], "2231": [34, 168, 221], "1321": [34, 168, 199, 221], "2031": [34, 168, 221], "2621": [34, 168, 199, 221], "0611": [34, 168, 221], "0721": [34, 168, 221], "1041": [34, 168, 221], "1841": [34, 168, 221], "0931": [34, 168, 221], "1111": [34, 140, 150, 168, 200, 221, 229, 242, 352, 681, 682, 683, 685, 686, 834], "0631": [34, 168, 221], "2411": [34, 118, 168, 221], "0331": [34, 165, 168, 221], "0321": [34, 165, 168, 221], "2631": [34, 168, 199, 221], "1741": [34, 168, 199, 221, 242], "0311": [34, 165, 168, 221], "2611": [34, 168, 199, 221], "0421": [34, 168, 221], "1421": [34, 144, 145, 168, 199, 205, 221], "0431": [34, 168, 221], "1541": [34, 168, 199, 207, 221], "2141": [34, 168, 199, 221, 224, 242, 688, 689], "2221": [34, 168, 221], "0511": [34, 145, 168, 221], "0941": [34, 168, 221], "2311": [34, 168, 221], "1511": [34, 165, 168, 221], "0821": [34, 168, 221], "2421": [34, 118, 168, 199, 221], "0741": [34, 168, 221], "0531": [34, 168, 221], "2341": [34, 168, 221], "1221": [34, 168, 199, 207, 221], "1121": [34, 168, 221], "0621": [34, 168, 221], "0911": [34, 168, 199, 221], "0641": [34, 168, 221], "0111": [34, 144, 165, 168, 175, 199, 205, 213, 221, 630], "0411": [34, 168, 221], "0141": [34, 168, 199, 221], "1211": [34, 168, 194, 221], "1231": [34, 168, 221], "0541": [34, 168, 221], "2441": [34, 168, 193, 221], "1431": [34, 168, 199, 221], "0921": [34, 168, 221], "1021": [34, 168, 170, 194, 221, 242, 262, 263, 264, 265, 475, 476], "2641": [34, 168, 221], "2511": [34, 168, 221], "2331": [34, 168, 221, 549], "1311": [34, 133, 134, 168, 207, 221], "1441": [34, 144, 168, 190, 199, 207, 221], "1241": [34, 168, 221], "planar": [34, 40, 42, 50, 58, 59, 70, 82, 90, 92, 107, 109, 117, 129, 141, 145, 171, 176, 177, 178, 182, 187, 194, 197, 204, 205, 208, 221, 224, 759, 857, 860, 875], "7615": [34, 124, 242, 384], "004172": 34, "17919e": 34, "08": [34, 40, 42, 45, 50, 58, 59, 72, 82, 83, 92, 101, 105, 107, 110, 128, 150, 159, 165, 175, 176, 177, 178, 179, 182, 183, 193, 194, 200, 205, 207, 213, 220, 221, 224, 225, 226, 227, 228, 229, 242, 694], "exp": [34, 40, 42, 50, 58, 59, 88, 90, 92, 107, 176, 177, 178, 181, 190, 194, 205, 221, 224, 295, 296, 451, 470, 472, 473, 533], "37508": 34, "81894e": 34, "brain_dic": 34, "5205929": 34, "6585548": 34, "71744034": 34, "brain_lcmv": 34, "37202028": 34, "44229054": 34, "93188606": 34, "brain_dspm": 34, "71161502": 34, "88782419": 34, "99242158": 34, "259": [34, 56, 83, 168, 207, 229, 242, 857], "361": [34, 35, 56, 79, 110, 168, 194, 224, 229, 233], "evoked_ers_source_pow": [34, 56], "detail": [35, 44, 45, 78, 117, 139, 141, 148, 149, 150, 154, 155, 157, 165, 166, 167, 168, 169, 170, 171, 174, 176, 179, 187, 188, 189, 193, 194, 198, 199, 201, 203, 204, 205, 208, 213, 214, 215, 216, 234, 237, 242, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 301, 302, 303, 304, 305, 306, 307, 310, 312, 314, 315, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 379, 380, 381, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 412, 413, 414, 415, 417, 418, 420, 423, 424, 426, 428, 432, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 450, 451, 452, 457, 458, 462, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 517, 518, 519, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 548, 551, 554, 555, 557, 558, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 578, 579, 580, 581, 583, 584, 586, 587, 590, 591, 592, 595, 596, 597, 598, 600, 602, 603, 604, 605, 606, 607, 609, 610, 611, 613, 614, 615, 617, 618, 619, 620, 621, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 640, 643, 644, 646, 647, 648, 649, 658, 659, 660, 661, 663, 665, 666, 667, 668, 669, 670, 671, 682, 683, 684, 685, 686, 688, 690, 691, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 713, 714, 717, 718, 722, 723, 725, 726, 727, 728, 731, 732, 737, 741, 742, 750, 757, 758, 759, 766, 767, 770, 773, 774, 775, 776, 777, 780, 781, 782, 784, 785, 786, 787, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 811, 813, 814, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 834, 850, 851, 853, 854, 858, 863, 875], "luessi": [35, 47, 102, 242, 849, 875], "mluessi": [35, 47, 102], "nmr": [35, 43, 47, 102, 112, 154, 213, 269, 273, 277, 365, 800, 857], "mgh": [35, 43, 47, 58, 102, 112, 154, 169, 213, 269, 273, 277, 326, 365, 644, 800, 845, 851, 857, 863, 875], "harvard": [35, 43, 47, 58, 102, 112, 154, 253, 269, 273, 277, 365, 800, 857, 862], "daniel": [35, 40, 46, 58, 59, 90, 125, 207, 242, 273, 472, 473, 849, 862, 875], "strohmeier": [35, 40, 46, 59, 90, 242, 472, 473, 849, 875], "tu": [35, 40, 46, 59, 90], "ilmenau": [35, 40, 46, 59, 90, 253, 862], "de": [35, 40, 46, 59, 90, 97, 110, 193, 194, 239, 242, 253, 413, 555, 569, 850, 862, 875], "gamma_map": [35, 865, 875], "make_stc_from_dipol": [35, 40, 46, 59, 865, 875], "plot_dipole_loc": [35, 40, 51, 59, 177, 182, 184, 865, 875], "plot_dipole_amplitud": [35, 40, 51, 59, 865], "evoked_fnam": [35, 51, 88, 93, 262, 263, 264, 265, 475, 476], "50e": [35, 90, 150, 202], "300e": 35, "xyz_same_gamma": [35, 470, 875], "return_residu": [35, 40, 46, 51, 59, 176, 298, 470, 472, 473, 522, 875], "return_as_dipol": [35, 40, 46, 59, 470, 472, 473, 875], "303": [35, 86, 168, 220, 229, 233], "364": [35, 40, 48, 49, 54, 55, 58, 59, 67, 79, 90, 92, 110, 119, 161, 165, 168, 177, 207, 229, 237], "converg": [35, 40, 46, 59, 171, 178, 203, 470, 522, 555, 702, 713, 857, 875], "054e": 35, "22233": 35, "856e": 35, "20712": 35, "375e": 35, "17166": 35, "061e": 35, "12996": 35, "273e": 35, "10107": 35, "574e": 35, "8307": 35, "319e": 35, "7209": 35, "369e": 35, "6342": 35, "631e": 35, "5694": 35, "047e": 35, "5142": 35, "579e": 35, "4692": 35, "199e": 35, "889e": 35, "634e": 35, "3696": 35, "422e": 35, "3429": 35, "246e": 35, "3153": 35, "099e": 35, "2952": [35, 161], "748e": 35, "2745": 35, "703e": 35, "2559": 35, "817e": 35, "2394": 35, "063e": 35, "2229": 35, "417e": 35, "2067": 35, "883e": 35, "1944": 35, "711e": 35, "1836": 35, "551e": 35, "400e": 35, "1617": 35, "266e": 35, "1509": 35, "166e": 35, "1440": 35, "066e": 35, "964e": 35, "1245": 35, "861e": 35, "1200": [35, 220], "754e": 35, "1128": 35, "643e": 35, "1077": [35, 58, 242, 273, 537, 655], "529e": 35, "1017": [35, 207, 242], "410e": 35, "288e": 35, "924": 35, "163e": 35, "873": [35, 194, 229], "036e": 35, "837": [35, 41, 229], "906e": 35, "798": [35, 143, 229], "776e": 35, "744": [35, 194, 229], "644e": 35, "705": [35, 131, 197, 207, 212, 229], "513e": 35, "687": [35, 54, 56, 61, 207, 229], "382e": 35, "660": [35, 79, 229], "253e": 35, "627": [35, 194, 207], "125e": 35, "600": [35, 40, 58, 59, 70, 73, 79, 81, 88, 91, 124, 125, 132, 154, 155, 159, 166, 167, 177, 178, 179, 183, 190, 197, 198, 201, 204, 205, 206, 207, 208, 210, 213, 214, 215, 216, 221, 229, 242, 473, 742, 875], "000e": 35, "877e": 35, "758e": 35, "642e": 35, "495": [35, 80, 219, 224, 229], "421e": 35, "486": [35, 142, 229], "316e": 35, "465": [35, 201, 207, 224, 229], "215e": 35, "441": [35, 229, 242, 555, 581], "119e": 35, "417": [35, 117, 194, 229, 242, 555, 581, 759], "026e": 35, "937e": 35, "853e": 35, "387": [35, 79, 194, 207, 224, 242, 295], "772e": 35, "378": [35, 79, 207, 224, 229], "695e": 35, "348": [35, 110, 161, 168, 193, 200, 229, 875], "622e": 35, "339": [35, 110, 168, 224, 229], "552e": 35, "486e": 35, "330": [35, 50, 79, 80, 110, 168, 182, 207, 229, 875], "423e": 35, "312": [35, 110, 168, 207, 224], "306e": 35, "252e": 35, "297": [35, 101, 104, 168, 194, 207, 224, 229], "201e": 35, "152e": 35, "106e": 35, "261": [35, 168, 207, 224, 229], "062e": 35, "020e": 35, "807e": 35, "234": [35, 168, 189, 192, 224, 229], "431e": 35, "222": [35, 46, 168, 190, 207, 228, 229, 234], "074e": 35, "219": [35, 41, 168, 207, 875], "735e": 35, "412e": 35, "105e": 35, "813e": 35, "198": [35, 37, 56, 102, 104, 168, 183, 226, 228, 231, 234], "535e": 35, "192": [35, 168, 170, 194, 229], "271e": 35, "186": [35, 45, 143, 168, 175, 180, 224, 228, 229], "018e": 35, "778e": 35, "174": [35, 124, 168, 193, 194, 224, 229, 242, 275], "549e": 35, "168": [35, 45, 127, 168, 175, 180, 194, 224, 229, 234], "121e": 35, "159": [35, 112, 148, 168, 207, 228, 229], "922e": 35, "156": [35, 45, 168, 175, 180, 194, 224, 229, 275], "731e": 35, "138": [35, 99, 100, 165, 168, 170, 207, 224, 228, 229, 242, 275, 560, 875], "895e": 35, "132": [35, 46, 66, 150, 168, 224], "749e": 35, "608e": 35, "126": [35, 168, 194, 207, 224, 229], "344e": 35, "123": [35, 45, 121, 168, 203, 205, 228, 229, 343], "220e": 35, "104": [35, 61, 147, 168, 194, 224, 228, 229, 242, 655, 860, 875], "100e": [35, 65, 144, 150, 199, 221], "117": [35, 61, 144, 168, 194, 196, 207, 224, 229, 242, 724, 727, 875], "985e": 35, "875e": 35, "107": [35, 61, 111, 113, 133, 139, 168, 189, 192, 194, 196, 207, 224, 228, 229, 242, 860, 875], "769e": 35, "666e": 35, "473e": 35, "208e": 35, "126e": 35, "688e": 35, "500e": 35, "441e": 35, "384e": 35, "329e": 35, "127": [35, 168, 186, 228, 229], "275e": 35, "137": [35, 133, 168, 224, 229, 275], "154": [35, 136, 167, 168, 207, 224, 228, 229], "247e": 35, "649e": 35, "177": [35, 144, 168, 194, 224, 229, 242, 682, 683, 685, 686], "116e": 35, "179": [35, 74, 168, 194, 224, 229, 242, 590, 857], "523e": 35, "307e": 35, "227": [35, 72, 83, 150, 168, 228, 229, 242, 385, 851], "214e": 35, "041e": 35, "730e": 35, "124e": 35, "160e": 35, "783e": 35, "340": [35, 51, 79, 80, 110, 121, 168, 190, 207, 229, 242, 298, 875], "168e": 35, "343": [35, 110, 142, 168, 169, 193, 207, 224, 229, 875], "949e": 35, "886e": 35, "420": [35, 79, 207, 229], "855e": 35, "reach": [35, 40, 46, 59, 171, 239, 255, 262, 263, 264, 265, 475, 476, 651, 695, 697, 699, 702, 713, 723, 726, 739, 774, 781, 802, 875], "dip": [35, 40, 59, 82, 114, 175, 180, 182, 183, 184, 209, 239, 260, 450, 605, 875], "mri_head_t": [35, 40, 51, 59, 180, 266, 267, 468, 469, 860], "fig_nam": [35, 40, 46, 59, 801], "david": [35, 42, 117, 124, 127, 133, 193, 200, 237, 242, 262, 263, 264, 265, 352, 384, 413, 470, 475, 476, 523, 697, 699, 707, 713, 724, 727, 759, 857, 875], "wipf": [35, 242, 470], "srikantan": [35, 221, 242, 295, 296, 470], "nagarajan": [35, 221, 242, 295, 296, 470], "unifi": [35, 136, 179, 200, 242, 470, 655, 875], "947": [35, 119, 128, 242, 470], "966": [35, 42, 127, 161, 171, 205, 229, 242, 470], "059": [35, 139, 141, 148, 168, 198, 213, 221, 242, 470], "954": [35, 56, 203, 207, 229], "gamma_map_invers": [35, 56], "form": [37, 140, 142, 159, 167, 174, 177, 197, 200, 202, 203, 204, 208, 224, 226, 229, 232, 259, 262, 263, 264, 265, 267, 269, 270, 271, 273, 276, 277, 278, 333, 407, 410, 411, 413, 414, 415, 416, 417, 419, 420, 421, 442, 470, 472, 473, 475, 476, 508, 517, 522, 524, 525, 526, 554, 555, 556, 564, 569, 583, 626, 629, 644, 645, 646, 647, 648, 660, 682, 683, 685, 686, 695, 697, 698, 699, 707, 759, 774, 776, 781, 785, 794, 797, 802, 804, 823, 828, 834, 853, 854, 856, 857, 860, 875], "merg": [37, 140, 214, 215, 257, 262, 264, 265, 351, 449, 520, 637, 644, 834, 856, 875], "christian": [37, 118, 124, 132, 143, 242, 384, 385, 407, 431, 655, 849, 851, 875], "brodbeck": [37, 118, 132, 242, 849, 875], "christianbrodbeck": [37, 118, 132], "read_source_estim": [37, 43, 53, 114, 125, 132, 174, 180, 233, 865, 875], "aud_lh": 37, "aud_rh": 37, "stc_lh": [37, 47], "stc_rh": [37, 47], "stc_bh": 37, "calcul": [37, 38, 58, 79, 99, 110, 126, 143, 149, 150, 157, 161, 165, 169, 175, 179, 187, 193, 199, 200, 203, 205, 210, 213, 224, 225, 229, 238, 257, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 295, 296, 302, 316, 352, 356, 357, 366, 367, 368, 407, 414, 415, 442, 450, 451, 464, 470, 472, 473, 475, 476, 512, 517, 518, 519, 533, 555, 562, 567, 568, 571, 574, 583, 587, 603, 613, 625, 660, 674, 682, 683, 685, 686, 688, 689, 696, 707, 714, 782, 787, 796, 830, 854, 860, 875], "mass": [37, 164, 224, 225, 230, 231, 262, 267, 268, 273, 475, 552, 610, 644, 652, 658, 661, 676, 678, 679, 683, 698, 725, 732, 872, 875], "mni": [37, 133, 134, 135, 158, 175, 180, 181, 189, 260, 277, 278, 310, 326, 365, 468, 627, 734, 741, 742, 806, 857, 875], "vtx": 37, "t_lh": 37, "center_of_mass": [37, 220, 268, 273, 658, 661, 875], "mni_lh": 37, "vertex_to_mni": [37, 268, 273, 865], "t_rh": 37, "mni_rh": 37, "275": [37, 46, 121, 165, 168, 169, 190, 224, 242, 336, 407, 851, 857], "625": [37, 142, 175, 186, 229], "hl": 37, "hr": 37, "hb": 37, "figlegend": 37, "label_activation_from_stc": [37, 56], "typic": [38, 44, 60, 69, 81, 133, 142, 144, 148, 150, 155, 159, 166, 167, 169, 187, 190, 194, 197, 198, 200, 202, 203, 204, 205, 206, 208, 210, 215, 224, 239, 256, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 276, 277, 278, 295, 296, 310, 311, 329, 340, 342, 352, 356, 357, 358, 360, 414, 425, 450, 460, 463, 475, 476, 535, 554, 555, 557, 565, 569, 584, 594, 597, 607, 644, 666, 680, 681, 682, 683, 685, 686, 695, 698, 742, 780, 789, 793, 795, 830, 833, 834, 840, 851, 852, 854, 856, 857, 875], "anatom": [38, 44, 69, 92, 133, 134, 155, 159, 175, 180, 242, 260, 277, 278, 363, 459, 742, 760, 764, 806, 830, 857, 875], "yield": [38, 139, 141, 144, 148, 150, 154, 160, 170, 179, 201, 203, 213, 214, 239, 257, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 316, 424, 428, 555, 558, 565, 566, 574, 583, 647, 648, 687, 722, 723, 725, 726, 742, 830, 852, 854, 857, 875], "peak": [38, 54, 55, 60, 69, 71, 73, 80, 88, 92, 93, 125, 130, 144, 148, 149, 165, 171, 174, 176, 177, 179, 182, 183, 184, 190, 197, 199, 202, 203, 205, 207, 209, 224, 239, 254, 257, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 357, 537, 555, 557, 560, 567, 568, 571, 572, 574, 575, 576, 578, 579, 592, 652, 681, 695, 772, 777, 779, 780, 781, 815, 850, 857, 875], "banksst": [38, 41, 47], "aparc_label_nam": 38, "stc_mean": 38, "grow": [38, 88, 93, 239, 465, 508, 600, 841, 856], "halt": [38, 133, 141, 260, 262, 263, 264, 265, 466, 467, 475, 476, 555, 697, 699, 770, 772, 789, 795, 798, 840, 875], "read_labels_from_annot": [38, 41, 47, 67, 88, 92, 93, 124, 220, 541, 617, 825, 865, 875], "parc": [38, 41, 47, 618, 825], "aparc": [38, 41, 47, 67, 88, 92, 93, 124, 134, 154, 175, 180, 220, 260, 269, 270, 273, 276, 277, 278, 381, 441, 459, 510, 618, 633, 742, 830, 875], "regexp": [38, 88, 92, 93, 198, 203, 205, 210, 436, 549, 618, 875], "stc_mean_label": 38, "func_label": 38, "stc_to_label": [38, 865, 875], "maximum": [38, 47, 48, 50, 58, 81, 113, 117, 150, 175, 176, 180, 181, 199, 200, 203, 213, 242, 257, 262, 263, 264, 265, 269, 270, 273, 275, 276, 277, 278, 295, 296, 324, 340, 363, 440, 441, 444, 465, 470, 472, 473, 475, 476, 508, 516, 522, 531, 532, 537, 555, 557, 571, 581, 582, 660, 682, 683, 685, 686, 691, 695, 700, 701, 702, 703, 704, 705, 706, 707, 709, 711, 713, 721, 724, 725, 727, 742, 766, 771, 777, 780, 800, 805, 806, 815, 830, 857, 875], "anat_label": 38, "stc_anat_label": 38, "pca_anat": 38, "extract_label_time_cours": [38, 39, 41, 180, 269, 270, 273, 276, 277, 278, 510, 865, 875], "pca_flip": [38, 39, 269, 270, 273, 276, 277, 278, 441], "stc_func_label": 38, "pca_func": 38, "show_view": [38, 48, 107, 114, 133, 134, 159, 180, 189, 209, 221, 234, 269, 270, 273, 276, 277, 278, 742, 800, 805, 875], "add_label": [38, 59, 102, 114, 124, 742], "73227205": 38, "80078852": 38, "62750681": 38, "373": [38, 56, 79, 168], "label_from_stc": [38, 56], "strategi": [39, 194, 197, 203, 205, 206, 242, 351, 363, 412, 424, 472, 655, 713, 774, 854], "simpl": [39, 46, 126, 143, 144, 150, 159, 160, 165, 180, 193, 194, 200, 204, 221, 224, 239, 242, 254, 322, 351, 407, 410, 411, 413, 414, 415, 416, 417, 419, 420, 421, 492, 556, 711, 721, 790, 834, 851, 857, 875], "patheffect": [39, 159], "path_effect": [39, 159], "label_fnam": 39, "stc_label": 39, "mean_flip": [39, 269, 270, 273, 276, 277, 278, 441, 875], "tc": 39, "pe": 39, "stroke": [39, 159], "foreground": [39, 141, 159, 269, 270, 273, 276, 277, 278, 742, 800, 805, 875], "possibl": [39, 43, 45, 112, 133, 136, 139, 141, 142, 144, 148, 149, 150, 155, 159, 160, 167, 168, 169, 170, 171, 177, 179, 187, 189, 194, 197, 198, 199, 200, 201, 203, 204, 206, 207, 208, 210, 213, 214, 215, 216, 221, 224, 228, 229, 237, 239, 256, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 322, 324, 352, 407, 410, 411, 413, 414, 415, 416, 417, 419, 420, 421, 424, 430, 448, 458, 466, 475, 476, 483, 499, 555, 556, 590, 591, 609, 610, 640, 677, 682, 684, 695, 696, 699, 729, 758, 768, 776, 777, 780, 785, 788, 789, 796, 832, 839, 851, 852, 854, 856, 857, 860, 861, 875], "vectorsourceestim": [39, 60, 174, 269, 270, 273, 274, 277, 278, 290, 291, 470, 472, 473, 522, 523, 524, 525, 526, 531, 532, 623, 805, 806, 830, 865, 875], "stc_vec": [39, 41, 179], "stc_vec_label": 39, "ee6677": [39, 159, 711, 721], "228833": 39, "4477aa": [39, 711, 721], "xyz": [39, 155, 159, 177, 269, 270, 273, 276, 277, 278, 310, 328, 441, 470, 499, 812, 875], "zorder": [39, 159, 264, 265, 711, 721, 776, 779, 875], "940": [39, 56, 79, 83, 229], "label_source_activ": [39, 56], "ir": 40, "l0": [40, 472], "sparser": [40, 269, 273, 277, 800], "convex": [40, 46, 59, 242, 259, 262, 263, 264, 265, 271, 407, 414, 475, 476, 554, 555, 569, 695, 697, 699, 759, 774, 781, 785, 794, 797, 802, 804, 875], "mixed_norm": [40, 174, 473, 865, 875], "sure": [40, 43, 45, 69, 107, 111, 133, 134, 139, 140, 143, 150, 155, 160, 161, 165, 169, 170, 171, 175, 188, 198, 201, 202, 203, 205, 208, 213, 228, 232, 233, 234, 254, 264, 265, 438, 439, 472, 487, 539, 554, 565, 690, 711, 721, 722, 723, 725, 779, 821, 832, 833, 834, 842, 875], "criterion": [40, 522, 875], "n_mxne_it": [40, 472], "use_cp": [40, 90, 157, 220, 270, 276, 278, 282, 283, 362, 522, 523, 524, 525, 526, 529, 533, 538, 539, 659, 660, 857, 875], "maxit": [40, 59, 470, 472, 473], "3000": [40, 49, 111, 136, 141, 144, 145, 199, 205, 210, 254, 472, 473], "active_set_s": [40, 472], "debia": [40, 59, 472, 473], "slower": [40, 44, 46, 200, 257, 262, 361, 406, 474, 475, 476, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 515, 525, 591, 834, 863], "sure_alpha_grid": [40, 472], "083": [40, 122], "tidx": [40, 180], "7262": [40, 58, 59, 92, 177, 194, 221], "020866": [40, 58, 194], "58122e": [40, 58, 59, 92, 177, 194, 221], "element": [40, 58, 88, 167, 171, 177, 178, 181, 190, 194, 200, 204, 205, 213, 215, 224, 226, 242, 256, 259, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 320, 321, 407, 414, 419, 428, 429, 441, 442, 462, 475, 476, 510, 511, 512, 554, 569, 583, 644, 675, 683, 695, 697, 699, 747, 759, 761, 766, 774, 781, 794, 797, 800, 802, 804, 805, 806, 830, 834, 840, 855, 856, 860, 875], "21995": 40, "82623e": 40, "warm": 40, "33333333333333": 40, "66666666666667": 40, "66666666666666": 40, "666666666666664": 40, "60279": 40, "603691813114": 40, "59855": 40, "33381940738": 40, "60434": 40, "87086639602": 40, "60386": 40, "806544140134": 40, "60336": 40, "58240427435": 40, "60303": 40, "83155030615": 40, "60157": 40, "013430584055": 40, "59974": 40, "67524684279": 40, "59597": 40, "86913013583": 40, "59084": 40, "52687739991": 40, "compute_source_morph": [40, 43, 44, 132, 157, 159, 179, 180, 232, 233, 234, 269, 273, 274, 277, 278, 620, 800, 806, 850, 865, 875], "subject_from": [40, 43, 44, 133, 179, 268, 274, 358, 541, 542, 620, 632, 633, 634, 635, 815, 850], "stc_fsaverag": [40, 43, 44, 850], "src_fsaverage_fnam": 40, "src_fsaverag": 40, "matthieu": [40, 59, 242, 472, 473], "kowalski": [40, 59, 242, 472, 473], "acceler": [40, 242, 472, 840, 854, 857, 875], "gradient": [40, 117, 242, 257, 262, 263, 264, 265, 267, 472, 474, 475, 476, 518, 555, 695, 697, 698, 699, 759, 875], "physic": [40, 155, 159, 169, 175, 177, 188, 208, 242, 264, 265, 267, 428, 440, 472, 475, 476, 522, 566, 574, 583, 776, 830, 857, 860], "medicin": [40, 81, 175, 208, 242, 472, 555, 583, 857], "biologi": [40, 81, 175, 208, 242, 472, 555, 583, 857], "1937": [40, 242, 472], "1961": [40, 242, 472], "2012": [40, 59, 150, 168, 200, 224, 242, 268, 273, 280, 352, 472, 473, 688, 689, 863], "1088": [40, 175, 193, 206, 208, 242, 262, 263, 264, 265, 413, 472, 475, 476, 583, 640, 857], "0031": [40, 175, 208, 242, 472, 583, 857], "9155": [40, 175, 208, 242, 472, 583, 857], "jen": [40, 46, 59, 242, 472, 473, 875], "haueisen": [40, 46, 59, 242, 472, 473], "improv": [40, 69, 143, 193, 194, 202, 205, 242, 262, 263, 264, 265, 303, 339, 341, 345, 367, 368, 409, 418, 443, 445, 446, 447, 475, 476, 533, 556, 591, 594, 652, 657, 723, 726, 834, 850, 852, 853, 854, 875], "prni": [40, 46, 242, 473], "t\u00fcbingen": [40, 242], "6858545": [40, 242], "charl": [40, 44, 242, 274, 358, 472], "alban": [40, 242, 472], "deledal": [40, 242, 472], "samuel": [40, 92, 93, 242, 472, 875], "vaiter": [40, 242, 472], "jalal": [40, 242, 472], "fadili": [40, 242, 472], "peyr\u00e9": [40, 242, 472], "stein": [40, 242, 472], "unbias": [40, 242, 472], "risk": [40, 180, 200, 203, 228, 242, 262, 263, 264, 265, 472, 475, 476, 574, 742], "sugar": [40, 242, 472], "siam": [40, 242, 472], "journal": [40, 43, 69, 70, 73, 117, 133, 156, 194, 200, 208, 229, 237, 242, 262, 263, 264, 265, 274, 352, 358, 428, 472, 475, 476, 555, 563, 564, 566, 583, 655, 682, 683, 685, 686, 697, 699, 707, 711, 713, 721, 722, 724, 725, 727, 759, 849], "2448": [40, 242, 472], "2487": [40, 242, 472], "140968045": [40, 242, 472], "242": [40, 56, 59, 104, 168, 229, 875], "392": [40, 56, 79, 194], "mixed_norm_invers": [40, 56], "annalisa": [41, 875], "pascarella": [41, 875], "iac": 41, "cnr": 41, "dir": [41, 170, 254, 742, 857, 860], "data_dir": [41, 57, 132, 143], "bem_dir": [41, 45, 107, 158, 160, 181], "fname_mixed_src": 41, "fname_aseg": [41, 180], "fname_model": 41, "_audvi": 41, "_audvis_raw": [41, 156], "substructur": 41, "labels_vol": 41, "amygdala": 41, "thalamu": 41, "proper": [41, 69, 224, 239, 263, 264, 265, 268, 295, 296, 352, 356, 357, 363, 366, 367, 368, 370, 407, 414, 450, 451, 470, 472, 473, 476, 533, 753, 782, 834, 851, 863, 875], "stem": [41, 71, 273, 274, 277, 482, 501], "oct6": [41, 107, 157, 254, 269, 273, 277, 635, 643, 800, 850], "oct5": [41, 107, 850], "1026": [41, 107, 850], "bound": [41, 133, 157, 259, 262, 263, 264, 265, 269, 270, 271, 273, 276, 277, 278, 407, 414, 451, 475, 476, 554, 555, 644, 695, 696, 697, 699, 713, 731, 757, 759, 761, 766, 774, 781, 785, 794, 795, 796, 797, 800, 802, 804, 805, 806, 857, 860, 875], "10mm": 41, "someth": [41, 125, 148, 160, 170, 171, 190, 200, 205, 206, 213, 269, 270, 273, 276, 277, 278, 742, 743, 800, 805, 830, 833, 834, 837, 838, 839, 841, 875], "vol_src": [41, 134, 157], "add_interpol": [41, 50, 157, 644], "usual": [41, 50, 69, 81, 110, 112, 139, 142, 144, 148, 149, 150, 154, 155, 159, 160, 165, 166, 167, 169, 171, 179, 182, 187, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 213, 214, 215, 216, 232, 234, 237, 238, 254, 260, 261, 262, 263, 264, 265, 266, 267, 275, 301, 323, 328, 333, 335, 337, 458, 475, 476, 660, 682, 683, 685, 686, 830, 834, 835, 837, 840, 842, 854, 857, 860], "nuse": [41, 267, 275, 860], "2562": [41, 107, 149, 157, 850], "node": [41, 47, 157, 669, 670, 671, 747, 860, 875], "4590": 41, "2961": 41, "346": [41, 110, 143, 168, 207, 214, 218, 229], "2615": 41, "1340": 41, "1589": 41, "1372": 41, "283": [41, 70, 110, 168, 207, 242, 564], "1306": [41, 207], "010000": [41, 155], "2169": 41, "write_source_spac": [41, 625, 850, 865, 875], "again": [41, 133, 140, 141, 143, 149, 150, 154, 155, 160, 171, 194, 197, 198, 200, 202, 203, 204, 205, 213, 224, 229, 239, 262, 263, 264, 265, 272, 475, 476, 555, 591, 793, 821, 833, 856, 857, 875], "plot_img": 41, "nipy_spectr": 41, "exist": [41, 44, 97, 99, 125, 139, 142, 148, 149, 155, 160, 169, 170, 171, 175, 179, 199, 200, 201, 204, 205, 206, 215, 219, 224, 226, 254, 256, 259, 260, 262, 263, 264, 265, 266, 267, 269, 270, 272, 273, 274, 275, 276, 277, 278, 286, 305, 306, 307, 310, 369, 374, 375, 376, 377, 379, 380, 382, 383, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 429, 433, 437, 438, 439, 440, 442, 459, 475, 476, 477, 490, 507, 540, 542, 544, 554, 555, 558, 565, 584, 603, 613, 633, 634, 637, 640, 641, 642, 645, 647, 648, 665, 666, 669, 695, 696, 697, 698, 699, 728, 731, 742, 765, 781, 796, 817, 818, 819, 820, 821, 822, 823, 825, 826, 827, 828, 829, 834, 842, 850, 851, 854, 856, 861, 863, 875], "5mm": [41, 82, 134, 427, 742], "innerskul": 41, "815": [41, 42, 56, 207, 229], "454": [41, 143, 193, 194, 224, 229, 275], "6003": 41, "inv_method": [41, 88], "a2009": [41, 92, 154, 175, 269, 270, 273, 276, 277, 278, 441, 510, 618], "39266": 41, "01344e": 41, "coron": [41, 134, 157, 159, 179, 260, 742, 760, 770], "silhouett": [41, 179, 180, 269, 270, 273, 276, 277, 278, 742, 800, 805, 875], "43101017": 41, "98225664": 41, "7504814": 41, "45409596": 41, "02821048": 41, "97219252": 41, "vox": [41, 133, 159, 179, 180, 181], "21567156": 41, "47889133": 41, "39837939": 41, "labels_parc": 41, "label_t": 41, "allow_empti": [41, 269, 270, 273, 276, 277, 278, 441], "nam": [41, 91, 92, 93, 182, 183, 221, 661, 875], "038": [41, 56, 139, 148, 168, 221], "393": [41, 79, 229], "mixed_source_space_invers": [41, 56], "computation": [42, 171, 200, 203, 204, 591, 857, 863], "sabbagh": [42, 242, 523, 875], "pierr": [42, 75, 203, 242, 523, 555, 875], "ablin": [42, 75, 203, 242, 523, 555, 875], "ga\u00ebl": [42, 242, 523], "varoquaux": [42, 242, 523], "state": [42, 88, 91, 107, 124, 139, 161, 165, 167, 174, 197, 198, 205, 206, 214, 224, 239, 242, 255, 257, 262, 263, 347, 431, 472, 491, 508, 515, 523, 555, 581, 600, 601, 606, 607, 647, 648, 649, 658, 659, 661, 682, 683, 684, 685, 686, 695, 697, 698, 742, 785, 830, 832, 834, 842, 856, 857, 860, 863, 875], "2020": [42, 73, 143, 156, 242, 385, 523, 555, 694, 851], "116893": [42, 242, 523], "alexand": [42, 133, 210, 242, 851, 875], "captur": [42, 46, 136, 143, 165, 171, 182, 183, 194, 202, 203, 204, 205, 206, 267, 272, 451, 554, 567, 568, 571, 597, 598, 830, 875], "environ": [42, 43, 44, 154, 171, 174, 260, 268, 269, 270, 272, 273, 275, 276, 277, 278, 301, 305, 306, 307, 310, 358, 363, 364, 365, 369, 374, 375, 376, 377, 379, 380, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 426, 455, 457, 459, 463, 465, 466, 467, 468, 469, 508, 512, 514, 541, 542, 580, 600, 618, 620, 627, 632, 633, 634, 635, 639, 642, 643, 644, 658, 661, 672, 690, 691, 734, 741, 742, 758, 760, 770, 800, 805, 806, 808, 815, 825, 832, 833, 837, 838, 839, 840, 842, 850, 854, 857, 875], "raw_empty_room_fnam": [42, 161], "ernoise_raw": [42, 127, 161, 171, 205], "raw_empty_room": [42, 161], "compute_raw_covari": [42, 86, 107, 161, 183, 190, 199, 259, 352, 604, 740, 850, 865, 875], "19800": [42, 127, 161, 171, 205], "85867": [42, 127, 161, 171, 205], "965": [42, 127, 161, 171, 203, 205, 229], "18000": 42, "658": [42, 194], "319": [42, 49, 71, 72, 97, 110, 140, 151, 165, 168, 176, 179, 194, 199, 207, 229, 242, 555], "environment": [42, 165, 197, 201, 204, 206, 208, 213, 215, 216, 850], "rest": [42, 69, 72, 107, 124, 133, 136, 139, 161, 165, 167, 168, 214, 242, 262, 263, 264, 265, 273, 370, 389, 475, 476, 640, 648, 830, 834, 856, 858, 863, 875], "base_cov": 42, "data_cov": [42, 179, 292, 296], "fig_noise_cov": 42, "show_svd": [42, 64, 259, 767], "fig_base_cov": 42, "fig_data_cov": 42, "1680": 42, "_cov": 42, "_kw": 42, "7265": [42, 176, 178], "037795": [42, 176], "52065e": [42, 176, 178], "40775": 42, "63307e": 42, "stc_data": [42, 92, 662], "11847053": 42, "45687517": 42, "03282162": 42, "194": [42, 56, 168, 228, 229, 242, 857, 875], "mne_cov_pow": [42, 56], "pre": [43, 49, 133, 139, 140, 161, 165, 179, 199, 200, 203, 213, 262, 263, 264, 265, 352, 475, 476, 555, 637, 640, 834, 835, 839, 846, 875], "spheric": [43, 70, 77, 150, 155, 169, 182, 183, 184, 198, 205, 208, 242, 259, 262, 263, 264, 265, 268, 271, 273, 274, 310, 326, 328, 358, 407, 414, 428, 475, 476, 519, 554, 555, 564, 565, 566, 569, 574, 583, 644, 658, 661, 672, 676, 695, 697, 699, 742, 759, 766, 774, 776, 778, 781, 782, 785, 792, 794, 796, 797, 798, 802, 804, 857, 875], "surfer": [43, 154, 269, 273, 277, 365, 742, 800, 857], "fswiki": [43, 154, 269, 273, 277, 365, 800, 857], "surfaceregandtempl": 43, "depict": [43, 264, 265, 270, 276, 278, 782, 805, 857], "success": [43, 143, 254, 262, 263, 269, 270, 273, 274, 276, 277, 278, 358, 473, 531, 532, 581, 645, 682, 683, 685, 686, 697, 698, 710, 718, 732, 763, 834], "inflat": [43, 48, 49, 54, 55, 59, 60, 124, 150, 174, 190, 242, 269, 273, 277, 406, 742, 758, 800, 840, 857, 875], "overlaid": [43, 44, 133, 135, 171, 254, 644, 857, 875], "tommi": [43, 44, 875], "clausner": [43, 44, 875], "sample_dir": [43, 44, 114, 157, 171, 174], "fname_src": [43, 134, 158, 181], "fname_fsaverage_src": 43, "fname_stc": [43, 125, 174, 180], "repres": [43, 69, 73, 79, 113, 117, 139, 140, 141, 142, 143, 148, 150, 155, 157, 160, 161, 165, 167, 168, 169, 174, 188, 193, 200, 203, 216, 242, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 272, 273, 275, 276, 277, 278, 295, 296, 352, 356, 357, 366, 367, 368, 407, 414, 441, 450, 451, 470, 472, 473, 475, 476, 491, 496, 499, 508, 521, 533, 555, 569, 607, 609, 683, 695, 698, 742, 759, 782, 785, 787, 789, 800, 801, 805, 830, 834, 850, 854, 857, 860, 875], "itself": [43, 69, 142, 150, 159, 171, 187, 200, 203, 204, 205, 215, 224, 256, 262, 263, 268, 273, 276, 305, 440, 475, 476, 542, 742, 832, 834, 854, 857, 860], "proxim": [43, 134, 266, 690, 875], "src_orig": [43, 273, 276], "3766": 43, "src_to": [43, 44, 179, 358, 875], "argument": [43, 44, 118, 150, 154, 160, 161, 168, 169, 171, 179, 187, 188, 189, 190, 199, 200, 201, 204, 208, 213, 224, 228, 234, 238, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 301, 302, 303, 304, 305, 306, 307, 310, 312, 314, 315, 317, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 409, 410, 412, 413, 417, 418, 420, 423, 424, 426, 428, 432, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 450, 451, 452, 457, 458, 462, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 510, 511, 512, 513, 514, 515, 517, 518, 519, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 548, 550, 551, 555, 557, 558, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 578, 579, 580, 581, 583, 584, 586, 587, 590, 591, 592, 595, 596, 597, 598, 602, 603, 604, 605, 606, 607, 609, 610, 611, 613, 614, 615, 617, 618, 619, 620, 621, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 640, 643, 644, 646, 647, 648, 649, 659, 660, 663, 665, 666, 667, 668, 669, 670, 671, 677, 682, 683, 684, 685, 686, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 713, 714, 717, 718, 722, 723, 725, 726, 727, 728, 731, 732, 737, 738, 739, 740, 741, 742, 743, 750, 757, 758, 762, 764, 767, 770, 773, 774, 775, 776, 777, 779, 782, 785, 786, 787, 792, 793, 794, 795, 796, 798, 799, 800, 801, 803, 805, 806, 807, 811, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 850, 860, 863, 875], "special": [43, 159, 168, 204, 213, 239, 368, 483, 490, 838, 856, 857, 863, 875], "alwai": [43, 72, 142, 143, 148, 150, 159, 166, 167, 168, 174, 189, 197, 199, 200, 201, 202, 203, 204, 205, 206, 213, 219, 224, 239, 260, 262, 263, 267, 269, 270, 272, 273, 275, 276, 277, 278, 316, 431, 441, 506, 555, 574, 613, 615, 682, 696, 750, 760, 770, 771, 801, 803, 812, 822, 830, 834, 857, 860, 861, 875], "10239": 43, "10240": 43, "10241": 43, "give": [43, 44, 59, 69, 73, 93, 141, 151, 160, 167, 170, 179, 181, 194, 198, 200, 201, 204, 224, 254, 259, 262, 263, 264, 265, 271, 275, 310, 407, 408, 409, 414, 418, 423, 424, 428, 443, 445, 446, 450, 472, 473, 475, 476, 491, 554, 555, 569, 574, 583, 601, 607, 681, 682, 683, 685, 686, 695, 697, 699, 707, 742, 759, 766, 774, 776, 778, 781, 782, 785, 792, 794, 796, 797, 798, 802, 804, 830, 832, 834, 840, 850, 854, 856, 857, 860, 875], "surfer_kwarg": [43, 174, 176], "brain_inf": 43, "under": [43, 44, 60, 125, 142, 143, 161, 188, 194, 197, 200, 204, 220, 224, 226, 232, 262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 280, 310, 322, 352, 353, 355, 357, 374, 375, 376, 377, 379, 380, 387, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 410, 417, 420, 423, 424, 450, 463, 465, 475, 476, 487, 494, 514, 517, 518, 528, 529, 538, 539, 560, 567, 568, 569, 591, 608, 612, 643, 646, 647, 648, 656, 660, 680, 682, 683, 684, 685, 686, 697, 699, 700, 701, 702, 703, 704, 705, 713, 714, 722, 723, 724, 725, 726, 774, 777, 796, 834, 850, 856, 857, 863, 875], "h5": [43, 44, 171, 179, 221, 269, 270, 272, 273, 274, 276, 277, 278, 286, 554, 593, 695, 696, 698, 715, 717, 728, 817, 818, 875], "respect": [43, 44, 47, 55, 67, 70, 88, 130, 139, 143, 150, 155, 158, 167, 168, 171, 174, 187, 194, 198, 200, 203, 204, 206, 207, 213, 214, 229, 257, 259, 262, 263, 264, 265, 267, 271, 272, 273, 277, 278, 295, 296, 297, 333, 352, 356, 357, 363, 366, 367, 368, 407, 409, 414, 418, 431, 443, 445, 450, 451, 470, 472, 473, 475, 476, 481, 499, 508, 511, 519, 533, 554, 555, 556, 557, 559, 569, 571, 601, 609, 644, 652, 655, 657, 663, 683, 695, 697, 699, 714, 722, 723, 725, 726, 742, 758, 759, 763, 766, 772, 774, 776, 781, 782, 785, 786, 789, 794, 795, 797, 802, 804, 806, 834, 837, 840, 850, 854, 857, 860, 875], "my": [43, 44, 171, 181, 219], "read_source_morph": [43, 44, 274, 865], "further": [43, 140, 150, 156, 165, 167, 177, 187, 194, 199, 203, 205, 208, 213, 224, 229, 234, 239, 262, 263, 287, 289, 318, 363, 555, 559, 682, 683, 685, 686, 698, 757, 773, 846, 852, 856, 857, 875], "assign": [43, 45, 99, 101, 118, 135, 139, 142, 143, 150, 160, 167, 169, 174, 177, 187, 188, 205, 208, 214, 219, 256, 262, 267, 272, 275, 465, 467, 483, 487, 490, 492, 497, 499, 508, 517, 555, 571, 572, 575, 576, 578, 579, 605, 639, 764, 825, 850, 857, 860, 875], "chain": [43, 166, 194, 198, 213, 413, 852, 857], "handi": [43, 189, 203], "liner": 43, "shortest": [43, 155, 200, 262, 263, 264, 265, 409, 418, 443, 445, 446, 475, 476, 560], "dougla": [43, 242, 274, 358], "greve": [43, 242, 274, 358], "lise": [43, 242, 274, 358], "der": [43, 242, 274, 358, 857, 875], "haegen": [43, 242, 274, 358], "qing": [43, 242, 274, 358], "cai": [43, 242, 274, 358], "steven": [43, 58, 124, 143, 150, 200, 242, 273, 274, 358, 407, 533, 652, 657, 851, 875], "stufflebeam": [43, 58, 124, 242, 273, 274, 358, 533, 537, 652, 655, 657], "mert": [43, 242, 274, 358], "sabuncu": [43, 242, 274, 358], "bruce": [43, 92, 154, 242, 274, 358, 522, 857], "fischl": [43, 92, 154, 242, 274, 358, 522, 857], "marc": [43, 242, 274, 358], "brysbaert": [43, 242, 274, 358], "languag": [43, 150, 171, 200, 228, 234, 242, 259, 262, 263, 264, 265, 271, 272, 274, 358, 407, 414, 475, 476, 554, 555, 695, 697, 699, 774, 781, 785, 794, 797, 802, 838, 859, 875], "asymmetri": [43, 242, 274, 358], "1477": [43, 207, 242, 274, 358], "1492": [43, 242, 274, 358, 850], "1162": [43, 242, 274, 358, 555], "jocn_a_00405": [43, 242, 274, 358], "morph_surface_stc": [43, 56], "affin": [44, 133, 155, 179, 181, 274, 358, 365, 619, 627, 731, 732, 815, 830, 857, 875], "nonlinear": [44, 242, 681], "symmetr": [44, 133, 200, 242, 262, 263, 264, 265, 269, 270, 273, 274, 276, 277, 278, 358, 443, 445, 446, 475, 476, 682, 683, 685, 686, 696, 707, 731, 732, 742, 761, 800, 805, 806, 815, 875], "diffeomorph": [44, 133, 242, 274, 358, 731, 732, 815, 875], "sdr": [44, 133, 179, 274, 358, 731, 732, 815, 875], "afterward": [44, 148, 262, 263, 264, 265, 475, 476, 640, 659, 875], "nibabel": [44, 133, 155, 159, 170, 181, 275, 467, 468, 469, 694, 742, 815, 833, 857, 875], "fetch_fsaverag": [44, 123, 133, 134, 158, 179, 189, 851, 865, 875], "plot_glass_brain": [44, 133, 181], "sample_dir_raw": [44, 174], "fname_t1_fsaverag": 44, "ensur": [44, 45, 81, 110, 143, 148, 158, 160, 161, 179, 200, 201, 204, 206, 208, 209, 221, 259, 262, 263, 264, 265, 267, 268, 269, 270, 273, 276, 277, 278, 318, 339, 352, 441, 442, 475, 476, 477, 547, 558, 583, 584, 695, 696, 697, 698, 699, 712, 737, 832, 834, 856, 857, 875], "fname_src_fsaverag": 44, "root": [44, 80, 133, 134, 135, 148, 149, 150, 158, 171, 179, 189, 221, 259, 264, 265, 269, 270, 273, 276, 277, 278, 295, 296, 377, 382, 399, 767, 776, 834, 857, 875], "zoom": [44, 69, 133, 150, 159, 179, 203, 205, 274, 358, 732, 875], "reslic": [44, 133, 179, 358, 732], "isotrop": [44, 857], "niter_affin": [44, 179, 274, 358, 875], "niter_sdr": [44, 179, 274, 358, 875], "999999888241291": 44, "translat": [44, 133, 155, 159, 179, 188, 208, 232, 254, 262, 263, 264, 265, 348, 363, 407, 414, 428, 486, 555, 559, 583, 695, 732, 742, 758, 773, 778, 781, 786, 789, 860, 875], "optim": [44, 59, 80, 133, 141, 156, 159, 161, 178, 179, 199, 200, 203, 208, 224, 232, 233, 234, 242, 264, 265, 268, 352, 407, 450, 472, 475, 476, 555, 565, 583, 672, 724, 727, 732, 830, 854, 875], "r\u00b2": [44, 133, 179], "rigid": [44, 133, 179, 732], "compute_vol_morph_mat": [44, 274, 358, 875], "equival": [44, 134, 140, 149, 155, 157, 159, 161, 164, 170, 185, 186, 188, 200, 203, 206, 220, 224, 237, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 276, 277, 278, 295, 296, 310, 351, 407, 413, 414, 447, 450, 451, 470, 472, 473, 475, 476, 517, 522, 533, 554, 555, 558, 560, 569, 574, 613, 642, 659, 682, 695, 697, 699, 711, 721, 725, 726, 732, 742, 758, 759, 766, 774, 776, 778, 781, 782, 785, 792, 794, 796, 797, 798, 800, 802, 804, 805, 830, 834, 850, 854, 857, 860, 861, 875], "reus": [44, 73, 136, 264, 265, 695, 778, 857], "exce": [44, 224, 257, 262, 263, 264, 265, 339, 341, 407, 414, 475, 476, 557, 560, 571, 682, 781, 795, 875], "thousand": [44, 99, 204, 225, 242, 358, 390, 851, 875], "nifti1": [44, 274, 277, 278], "img_fsaverag": 44, "t1_fsaverag": 44, "plot_anat": [44, 175], "draw_cross": 44, "overlai": [44, 154, 159, 171, 179, 203, 269, 270, 273, 276, 277, 278, 555, 742, 786, 800, 805, 875], "add_overlai": [44, 742], "brian": [44, 193, 242, 274, 358, 413, 857], "avant": [44, 242, 274, 358], "epstein": [44, 242, 274, 358], "murrai": [44, 150, 242, 274, 358], "grossman": [44, 242, 274, 358], "jame": [44, 200, 242, 274, 358], "gee": [44, 242, 274, 358], "autom": [44, 81, 111, 119, 133, 143, 155, 161, 162, 163, 164, 165, 197, 198, 199, 202, 203, 208, 242, 254, 264, 265, 267, 274, 352, 358, 363, 385, 480, 634, 758, 782, 810, 842, 854, 857, 863, 875], "elderli": [44, 242, 274, 358], "neurodegen": [44, 242, 274, 358], "medic": [44, 59, 204, 205, 242, 253, 274, 358, 472, 473, 522, 857, 862], "media": [44, 242, 274, 358], "2007": [44, 179, 229, 242, 274, 358, 470, 555, 682, 683, 685, 686, 724, 727], "450": [44, 56, 74, 79, 140, 159, 229, 275, 875], "morph_volume_stc": [44, 56], "megin": [45, 155, 583, 875], "program": [45, 150, 160, 171, 254, 260, 262, 263, 264, 265, 267, 272, 305, 466, 467, 475, 476, 555, 697, 699, 770, 772, 789, 795, 798, 834, 838, 839, 840, 841, 857, 859, 860], "offer": [45, 180, 194, 200, 206, 221, 224, 225, 255, 256, 742, 832, 834, 861, 863, 875], "guid": [45, 154, 267, 832, 838, 853, 856, 858, 875], "ecd": [45, 164, 185, 186, 260, 261, 264, 265, 266, 267, 277, 351, 450, 517, 613, 659, 830, 875], "manual": [45, 81, 118, 125, 133, 136, 141, 148, 150, 155, 156, 159, 160, 161, 171, 181, 187, 189, 197, 198, 199, 201, 204, 208, 242, 255, 258, 267, 268, 316, 326, 352, 372, 428, 442, 555, 565, 566, 574, 583, 584, 636, 765, 840, 851, 854, 857, 860, 875], "advantag": [45, 111, 136, 149, 150, 166, 167, 200, 202, 203, 206, 210, 224, 239, 832, 842], "graphic": [45, 133, 154, 188, 262, 263, 272, 467, 475, 476, 555, 772, 789, 795, 834, 838, 840, 841, 851, 875], "read_dipol": [45, 114, 260, 261, 450, 865, 875], "everyth": [45, 102, 110, 125, 133, 134, 158, 159, 168, 177, 181, 190, 200, 213, 264, 265, 780, 832, 834, 836, 851, 852, 854], "read_vectorview_select": [45, 221, 226, 865, 875], "audvi": [45, 851], "evoked_left": [45, 209], "evoked_right": [45, 209], "09989760657919393": [45, 61], "80m": 45, "picks_left": 45, "evoked_fit_left": 45, "cov_fit_left": 45, "picks_right": 45, "evoked_fit_right": 45, "cov_fit_right": 45, "sss": [45, 161, 164, 197, 207, 211, 212, 262, 263, 264, 265, 267, 339, 340, 341, 342, 345, 346, 349, 368, 428, 475, 476, 495, 555, 566, 574, 583, 613, 772, 776, 784, 795, 854, 857, 875], "normalize_proj": [45, 267, 875], "dip_left": 45, "dip_right": 45, "153": [45, 168, 224, 228, 229, 399], "38720": [45, 181], "58607874e": 45, "29495097e": 45, "04486582e": 45, "78988420e": 45, "81501987e": 45, "79536167e": 45, "22800262e": 45, "50545865e": 45, "24472969e": 45, "41763741e": 45, "51116585e": 45, "49899073e": 45, "11191910e": 45, "30776654e": 45, "58725785e": 45, "82015291e": 45, "83338121e": 45, "85132759e": 45, "76790821e": 45, "26581206e": 45, "61643686e": 45, "900": [45, 79, 175, 180], "396": [45, 79, 175, 180, 229, 242, 295], "9828": [45, 875], "152": [45, 168, 189, 224, 228, 229, 275], "69262885e": 45, "19272571e": 45, "91546253e": 45, "01298483e": 45, "64516797e": 45, "19806525e": 45, "33734643e": 45, "87121666e": 45, "27849772e": 45, "17670368e": 45, "61094719e": 45, "47048282e": 45, "57358697e": 45, "03235995e": 45, "14274862e": 45, "19294391e": 45, "09342253e": 45, "00283865e": 45, "12915739e": 45, "54166863e": 45, "75855684e": 45, "149": [45, 104, 108, 128, 131, 168, 180, 207, 228, 229, 275], "9340": [45, 875], "prevent": [45, 69, 118, 198, 208, 254, 508, 560, 583, 660, 815, 875], "lambda": [45, 98, 110, 144, 194, 209, 220, 239, 259, 262, 263, 264, 265, 271, 312, 407, 414, 475, 476, 530, 554, 555, 569, 661, 695, 697, 699, 759, 766, 773, 781, 785, 794, 797, 802, 857, 860], "fulli": [45, 73, 171, 199, 201, 224, 228, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 318, 475, 476, 477, 676, 742, 761, 800, 805, 806, 832, 875], "make_forward_dipol": [45, 175, 865, 875], "stc_left": 45, "stc_right": 45, "sharei": [45, 72, 111, 112, 193, 205, 239], "supylabel": 45, "meter": [45, 79, 91, 92, 150, 155, 156, 159, 169, 175, 181, 205, 219, 254, 259, 260, 262, 263, 264, 265, 267, 268, 271, 280, 310, 326, 335, 363, 407, 414, 428, 475, 476, 491, 499, 514, 554, 555, 559, 564, 565, 566, 569, 574, 583, 588, 589, 607, 617, 644, 690, 695, 697, 699, 759, 766, 770, 774, 776, 778, 781, 782, 785, 792, 794, 796, 797, 798, 802, 804, 857, 875], "kb": [45, 50, 136, 142, 175, 180, 206, 219], "161": [45, 168, 203, 224, 228, 229, 231], "7006": 45, "97034e": 45, "stcs_left": 45, "stcs_right": 45, "90m": 45, "amplitudes_left": 45, "amplitudes_right": 45, "vstack": [45, 113, 135, 140, 183, 221], "ampltud": 45, "n_left": 45, "mean_left": 45, "mean_right": 45, "transition_point": 45, "c0": [45, 150, 204], "c1": [45, 69, 110, 150, 204], "text": [45, 67, 125, 133, 134, 141, 150, 159, 176, 182, 187, 188, 190, 200, 201, 204, 205, 214, 215, 224, 239, 254, 262, 263, 275, 330, 475, 476, 610, 660, 742, 820, 834, 838, 850, 857, 875], "736": [45, 56, 207, 213, 218, 229], "multi_dipole_model": [45, 56], "promot": [46, 59], "focal": [46, 59, 81, 179, 555, 742, 810, 875], "assum": [46, 59, 63, 91, 92, 113, 121, 134, 140, 143, 150, 157, 159, 164, 171, 181, 187, 188, 199, 200, 203, 210, 215, 224, 226, 228, 239, 254, 256, 259, 260, 262, 263, 264, 265, 268, 271, 275, 295, 296, 301, 302, 305, 310, 323, 335, 352, 356, 357, 363, 366, 367, 368, 370, 407, 414, 426, 434, 442, 448, 449, 450, 451, 457, 470, 472, 473, 475, 476, 482, 483, 490, 504, 514, 518, 525, 533, 554, 555, 569, 603, 610, 629, 632, 634, 644, 660, 682, 683, 685, 686, 689, 690, 695, 697, 698, 699, 731, 742, 758, 759, 766, 774, 776, 778, 781, 782, 783, 784, 785, 792, 794, 796, 797, 798, 802, 804, 823, 830, 834, 839, 842, 857, 860, 861, 875], "stationar": [46, 59, 446, 475, 476], "properti": [46, 59, 73, 99, 112, 125, 142, 160, 171, 188, 193, 198, 203, 204, 213, 216, 255, 256, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 272, 273, 276, 277, 278, 300, 363, 406, 475, 476, 541, 555, 571, 572, 584, 645, 660, 677, 695, 696, 697, 698, 699, 730, 742, 744, 761, 770, 772, 776, 782, 783, 785, 787, 795, 800, 805, 806, 810, 861, 875], "bias": [46, 69, 150, 165, 179, 198, 200, 205, 228, 242, 451, 875], "short": [46, 59, 65, 80, 101, 110, 112, 125, 135, 136, 139, 159, 167, 171, 197, 200, 204, 205, 207, 209, 215, 225, 237, 239, 242, 262, 263, 264, 265, 475, 476, 492, 588, 591, 697, 699, 700, 703, 710, 711, 714, 718, 721, 830, 834, 857, 858, 875], "transient": [46, 80, 197, 208, 239, 560], "mathurin": [46, 242, 875], "massia": [46, 242, 875], "yousra": [46, 51, 91, 124, 242, 472, 473, 875], "bekhti": [46, 51, 91, 124, 242, 472, 473, 875], "tf_mixed_norm": [46, 59, 472, 865, 875], "350e": [46, 111, 238], "49948803289596966": 46, "301": [46, 56, 112, 168, 190, 194, 207, 224, 237, 860], "16610": 46, "multidict": 46, "l1_ratio": [46, 59, 473, 875], "wsize": [46, 59, 473, 710, 718, 719], "n_tfmxne_it": [46, 473], "dgap": [46, 59], "89e": 46, "p_obj": [46, 59], "289": [46, 148, 168, 193, 228, 229, 242, 413, 555], "000835": 46, "d_obj": [46, 59], "190": [46, 59, 74, 79, 114, 168, 183, 194, 207, 229, 242, 682, 683, 685, 686], "083203": 46, "n_activ": [46, 59, 208, 346], "247": [46, 83, 168, 207, 210, 224, 228, 229, 242, 851], "27e": 46, "253": [46, 168, 242], "327890": 46, "582652": 46, "53e": 46, "707285": 46, "246": [46, 133, 168, 179, 200, 212, 224, 229, 242], "182101": 46, "18e": 46, "589468": 46, "408712": 46, "82e": 46, "243688": 46, "248": [46, 50, 72, 121, 168, 209, 224, 228, 229], "420556": 46, "67e": [46, 59], "094971": 46, "57e": 46, "991067": 46, "49e": [46, 59], "936498": 46, "442467": 46, "08e": 46, "906871": 46, "829870": 46, "70e": 46, "887205": 46, "017223": 46, "24e": 46, "872107": 46, "148583": 46, "11e": 46, "762424": 46, "94e": 46, "854012": 46, "259629": 46, "659": [46, 167, 229], "867870": 46, "46e": 46, "043596": 46, "270": [46, 79, 168, 190, 207, 229, 875], "587841": 46, "87e": 46, "722230": 46, "856399": 46, "29e": 46, "678013": 46, "849283": 46, "335": [46, 107, 110, 168, 207, 224, 229, 242, 857], "966495": 46, "73e": 46, "239": [46, 67, 79, 80, 157, 168, 190, 193, 201, 210, 224], "215341": 46, "236": [46, 168, 207, 228, 229], "481796": 46, "17e": 46, "095509": 46, "178504": 46, "77e": 46, "068507": 46, "591286": 46, "298": [46, 74, 168, 207, 229], "546285": 46, "06e": 46, "223": [46, 168, 229], "133013": 46, "826666": 46, "295": [46, 110, 168, 224, 229], "194637": 46, "debias": [46, 59], "551": [46, 112, 229], "d0": [46, 59], "235933e": 46, "000000e": [46, 59], "irtf": 46, "2015": [46, 70, 97, 99, 111, 119, 161, 200, 203, 225, 239, 242, 264, 265, 352, 385, 390, 564, 681, 724, 727, 782, 851, 854, 863], "intern": [46, 69, 70, 81, 125, 131, 135, 159, 167, 169, 182, 189, 198, 205, 208, 226, 242, 262, 263, 264, 265, 310, 352, 357, 363, 386, 407, 428, 475, 476, 490, 495, 552, 555, 563, 564, 565, 566, 574, 583, 613, 681, 682, 695, 696, 697, 698, 699, 742, 788, 834, 875], "workshop": [46, 242, 407], "roland": [46, 242, 473], "badeau": [46, 242, 473], "trento": [46, 242, 473], "7552337": [46, 242, 473], "multidict_reweighted_tfmxn": [46, 56], "plane": [47, 133, 155, 169, 204, 226, 229, 238, 427, 648, 723, 726, 760, 830, 857], "olaf": [47, 48, 49, 50, 54, 55, 99, 242, 537, 652, 657, 875], "hauk": [47, 48, 49, 50, 54, 55, 99, 242, 537, 652, 657, 875], "mrc": [47, 48, 49, 50, 54, 55, 857], "cbu": [47, 48, 49, 50, 54, 55, 857], "cam": [47, 48, 49, 50, 54, 55, 857], "ac": [47, 48, 49, 50, 54, 55, 133, 189, 197, 201, 242, 352, 368, 830, 857], "uk": [47, 48, 49, 50, 54, 55, 242, 352, 857], "rougier": 47, "borrow": [47, 228, 234], "hi": [47, 254], "make_inverse_resolution_matrix": [47, 48, 50, 54, 55, 865, 875], "get_point_spread": [47, 48, 50, 865, 875], "circular_layout": [47, 865], "plot_connectivity_circl": [47, 764], "rm_mne": [47, 54], "n_label": [47, 220, 269, 270, 273, 276, 277, 278, 441, 510, 662], "label_color": [47, 460], "lh_label": [47, 742], "endswith": [47, 169], "label_ypo": 47, "ypo": 47, "yp": 47, "rh_label": [47, 742], "summaris": [47, 210], "five": [47, 141, 149, 170, 182, 207, 216, 242, 339, 475, 476, 555, 742, 787, 857], "princip": [47, 203, 204, 242, 268, 352, 555, 672, 857, 875], "probabl": [47, 69, 164, 187, 197, 198, 199, 200, 203, 204, 224, 226, 229, 239, 411, 417, 436, 475, 476, 487, 742, 799, 832, 834, 839, 840, 841, 857], "n_comp": [47, 531, 532], "stcs_psf_mne": 47, "pca_vars_mn": 47, "return_pca_var": [47, 531, 532], "n_vert": 47, "printopt": 47, "caudalanteriorcingul": 47, "caudalmiddlefront": [47, 88, 93, 134], "cuneu": [47, 742], "entorhin": 47, "frontalpol": 47, "fusiform": 47, "inferiorpariet": [47, 220], "inferiortempor": 47, "insula": 47, "isthmuscingul": 47, "lateraloccipit": 47, "lateralorbitofront": 47, "lingual": 47, "medialorbitofront": 47, "middletempor": 47, "paracentr": 47, "parahippocamp": [47, 67], "parsoperculari": 47, "parsorbitali": 47, "parstriangulari": 47, "pericalcarin": 47, "postcentr": [47, 67], "posteriorcingul": 47, "precentr": [47, 134], "precuneu": 47, "rostralanteriorcingul": 47, "rostralmiddlefront": [47, 220], "superiorfront": [47, 134], "superiorpariet": 47, "superiortempor": 47, "supramargin": 47, "temporalpol": 47, "transversetempor": [47, 220], "overal": [47, 125, 205, 226, 232, 233, 473, 856, 875], "bigger": [47, 79, 125, 233, 475, 476], "leaker": 47, "psfs_mat": 47, "pearson": [47, 200, 203, 242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 555, 695, 698], "arbitrari": [47, 113, 159, 164, 165, 166, 170, 200, 219, 222, 226, 229, 259, 260, 261, 262, 263, 264, 265, 269, 270, 271, 273, 276, 277, 278, 407, 414, 475, 476, 492, 555, 572, 576, 682, 683, 685, 686, 695, 697, 698, 699, 774, 781, 788, 794, 802, 856, 857, 875], "absolut": [47, 60, 80, 84, 121, 127, 134, 150, 178, 188, 224, 257, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 356, 407, 475, 476, 478, 531, 532, 537, 555, 571, 595, 644, 656, 688, 695, 698, 760, 766, 786, 806, 830, 834, 840, 875], "leakage_mn": 47, "node_ord": [47, 747], "mirror": [47, 69, 169, 262, 263, 264, 265, 269, 273, 277, 278, 445, 446, 447, 475, 476, 757, 761, 800, 806, 863, 875], "node_angl": [47, 747], "start_po": [47, 747], "group_boundari": [47, 747], "subplot_kw": 47, "n_line": 47, "node_color": 47, "neighbour": [47, 259, 262, 263, 264, 265, 271, 407, 414, 475, 476, 554, 555, 569, 695, 697, 699, 774, 781, 785, 794, 797, 802, 804, 875], "deeper": [47, 54, 55, 179, 857], "versu": [47, 140, 150, 165, 214, 221, 297, 842], "fname_fig": 47, "plot_label_leakag": 47, "savefig": [47, 113], "inde": [47, 69, 140, 167, 174, 204, 205, 239, 832], "max_val": 47, "brain_lh": 47, "caudal": [47, 88, 93, 742], "pos_lim": [47, 54, 55, 179, 220, 232, 269, 270, 273, 276, 277, 278, 761, 800, 805, 806], "brain_rh": 47, "806": [47, 56, 194, 229], "psf_ctf_label_leakag": [47, 56], "get_cross_talk": [48, 49, 865, 875], "fname_evo": [48, 49, 50, 54, 55, 64], "regularis": [48, 54, 55, 534], "rm_lor": 48, "stc_psf": 48, "stc_ctf": 48, "31738": [48, 54, 55], "68644e": [48, 54, 55], "vertno_lh": 48, "verttru": [48, 49], "maxima": [48, 144, 264, 265, 592, 779, 781, 875], "vert_max_psf": 48, "vert_max_ctf": 48, "brain_psf": 48, "ventral": [48, 742], "add_foci": [48, 49, 50, 159, 174, 176, 221, 742, 875], "coords_as_vert": [48, 49, 50, 174, 176, 221, 742], "22842778": 48, "2956258": 48, "85246681": 48, "brain_ctf": 48, "10932369": 48, "16149934": 48, "93351158": 48, "716": [48, 56, 229], "438": [48, 49, 54, 55, 224, 229], "psf_ctf_vertic": [48, 56], "make_lcmv_resolution_matrix": [49, 865, 875], "vi": [49, 149, 229, 262, 766], "cov_pr": 49, "post": [49, 118, 133, 179, 200, 205, 208, 830, 834, 840, 841, 853, 854, 856], "cov_post": 49, "4433": 49, "filters_pr": 49, "weight_norm": [49, 179, 221, 295, 296, 875], "filters_post": 49, "rm_pre": 49, "stc_pre": 49, "rm_post": 49, "stc_post": 49, "brain_pr": 49, "ndata": 49, "brain_post": 49, "935": [49, 56, 229], "psf_ctf_vertices_lcmv": [49, 56], "coars": 50, "don": [50, 93, 113, 115, 118, 133, 140, 143, 144, 145, 156, 157, 158, 161, 167, 170, 198, 201, 203, 204, 205, 213, 226, 227, 228, 229, 234, 239, 254, 257, 262, 263, 369, 486, 487, 544, 584, 600, 607, 609, 644, 682, 685, 834, 835, 840, 842, 854, 856, 858, 875], "src_vol": 50, "forward_vol": 50, "3375": 50, "1045": [50, 207], "895": [50, 193, 229], "015000": [50, 206], "304": [50, 107, 122, 149, 168, 170, 183, 225, 875], "158": [50, 168, 224], "403": [50, 79, 224, 229], "492": [50, 224, 229], "inverse_operator_vol": 50, "rm_lor_vol": 50, "sources_vol": 50, "stc_psf_vol": 50, "140193": 50, "7904e": 50, "66519": 50, "31885e": 50, "1209": 50, "verttrue_vol": 50, "max_vert_idx": 50, "unravel_index": [50, 180, 226], "vert_max_ctf_vol": 50, "brain_psf_vol": 50, "plot_3d": [50, 134, 179, 277, 278, 875], "volume_opt": [50, 269, 270, 273, 276, 277, 278, 742, 800, 805], "32501698": 50, "38884743": 50, "87974682": 50, "562": [50, 56, 104, 106, 136, 229], "psf_volum": [50, 56], "recurs": [51, 159, 200, 242, 254, 269, 273, 277, 298, 643, 800], "rap_mus": [51, 56, 450, 865, 875], "n100": [51, 165, 190, 200, 205], "1834": 51, "ori": [51, 175, 179, 182, 184, 221, 260, 295, 296, 427, 450], "2470324143277338": 51, "7764326014559829": 51, "5797649538112025": 51, "5304": 51, "5154591814700811": 51, "5345116895021849": 51, "6697753996853825": 51, "332": [51, 110, 168, 190, 242, 298], "1999": [51, 110, 239, 242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 298, 352, 475, 476, 555, 581, 695, 698, 857], "740118": [51, 242, 298], "634": [51, 56, 148, 153, 229, 242, 555], "inv_fnam": 52, "fmri": [52, 194, 242, 472, 473, 522, 830, 851, 857, 860], "fmri_prior": 52, "rr": [52, 159, 160, 174, 177, 275, 340, 342, 343, 344, 626, 629, 644, 664, 823, 860], "use_tri": [52, 159, 275, 860], "8192": [52, 181, 184, 406], "072": [52, 56], "read_invers": [52, 56], "nb": [53, 475, 476], "838": [53, 56, 194], "read_stc": [53, 56], "localis": [54, 55, 184, 224, 225, 242, 537, 682, 683, 685, 686], "mimic": [54, 55, 408, 431, 522], "resolution_metr": [54, 55, 56, 865, 875], "ple": [54, 55, 537], "sd": [54, 55, 133, 239, 657, 697, 699], "ple_mne_psf": 54, "peak_err": [54, 55, 537], "sd_mne_psf": 54, "sd_ext": [54, 55, 537], "rm_dspm": 54, "ple_dspm_psf": 54, "sd_dspm_psf": 54, "brain_ple_mn": 54, "brain_ple_dspm": 54, "subtract": [54, 55, 65, 69, 72, 105, 111, 118, 132, 140, 150, 175, 200, 206, 208, 224, 226, 254, 257, 258, 262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 285, 295, 296, 351, 352, 356, 357, 366, 367, 368, 407, 414, 415, 450, 451, 470, 472, 473, 475, 476, 477, 533, 538, 539, 555, 556, 571, 583, 613, 614, 637, 640, 682, 685, 695, 698, 782, 802, 830, 857, 860, 875], "diff_pl": [54, 55], "brain_ple_diff": [54, 55], "superfici": [54, 179, 857], "brain_sd_mn": 54, "brain_sd_dspm": 54, "diff_sd": [54, 55], "brain_sd_diff": [54, 55], "wors": [54, 170, 583, 850], "distinguish": [54, 71, 150, 171, 194, 197, 198, 199, 202, 203, 205, 213, 359, 830, 875], "stenroo": [54, 55, 242, 537, 652, 657], "matthia": [54, 55, 242, 537, 875], "treder": [54, 55, 242, 537], "kit": [54, 55, 169, 170, 183, 224, 242, 267, 336, 344, 428, 499, 518, 537, 566, 574, 583, 609, 857, 865, 866, 875], "biorxiv": [54, 55, 221, 242, 295, 296, 537], "2019": [54, 55, 65, 74, 140, 206, 209, 224, 229, 242, 537, 570, 590, 682, 683, 685, 686, 709, 711, 721, 724, 725, 727, 833, 840], "1101": [54, 55, 112, 221, 242, 295, 296, 537], "672956": [54, 55, 242, 537], "resolution_matrix": 55, "spatial_resolut": 55, "fname_fwd_emeg": 55, "forward_emeg": 55, "forward_meg": 55, "pick_types_forward": [55, 67, 90, 282, 283, 865], "inv_emeg": 55, "inv_meg": 55, "63485": 55, "05542e": 55, "rm_emeg": 55, "ple_psf_emeg": 55, "sd_psf_emeg": 55, "rm_meg": 55, "ple_psf_meg": 55, "sd_psf_meg": 55, "brain_ple_emeg": 55, "emeg": [55, 863], "brain_ple_meg": 55, "bring": [55, 69, 155, 180, 203, 215, 267, 277, 278, 428, 566, 574, 583, 806, 857, 860], "brain_sd_emeg": 55, "brain_sd_meg": 55, "resolution_metrics_eegmeg": [55, 56], "862": [56, 171, 194, 229], "auto_examples_invers": 56, "vector_mne_solut": [56, 60], "407": [56, 60, 79, 229], "609": [56, 150, 229, 242], "563": [56, 229], "time_frequency_mixed_norm_invers": [56, 59], "source_space_snr": [56, 58], "648": [56, 58, 148, 229], "snr_estim": [56, 57], "plot_snr_estim": [57, 865, 875], "padma": [58, 242, 570, 875], "sundaram": [58, 242, 570, 875], "tottochan": 58, "kaisu": [58, 875], "lankinen": [58, 875], "klankinen": 58, "inv_op": [58, 220], "snr_stc": [58, 273], "estimate_snr": [58, 273, 865, 875], "maxidx": 58, "med": [58, 92, 135, 165, 194, 220], "viridi": [58, 99, 125, 135, 142, 224, 696, 784], "70263": [58, 177], "18949e": [58, 177], "evoked_eeg": [58, 148, 205], "inv_op_eeg": 58, "stc_eeg": 58, "snr_stc_eeg": 58, "7499": [58, 88], "118742": [58, 88], "155292": [58, 88], "81981": 58, "0644e": 58, "goldenholz": [58, 242, 273], "seppo": [58, 242, 273, 533, 652, 657], "ahlfor": [58, 242, 273, 428, 533, 652, 657], "dahlia": [58, 242, 273], "sharon": [58, 242, 273], "mamiko": [58, 242, 273], "ishitobi": [58, 242, 273], "lucia": [58, 124, 242, 273], "vaina": [58, 124, 242, 273], "magnetoencephalographi": [58, 156, 177, 242, 273, 655, 724, 727, 857], "1086": [58, 207, 242, 273], "1002": [58, 82, 177, 194, 237, 242, 262, 263, 264, 265, 273, 475, 476, 591, 648, 684, 697, 699, 707, 713, 850], "hbm": [58, 177, 242, 273, 684, 850], "20571": [58, 242, 273], "built": [59, 139, 149, 150, 156, 158, 164, 165, 166, 174, 180, 201, 203, 209, 213, 217, 218, 224, 260, 262, 263, 264, 265, 267, 302, 326, 327, 364, 436, 458, 459, 467, 475, 476, 514, 518, 580, 630, 663, 690, 699, 742, 758, 834, 840, 846, 854, 855, 875], "fourier": [59, 101, 200, 237, 239, 242, 262, 263, 264, 265, 475, 476, 697, 699, 700, 703, 707, 710, 711, 713, 714, 718, 721, 722, 723, 725, 726], "stft": [59, 473, 710, 719, 830, 865, 875], "henc": [59, 112, 141, 149, 155, 161, 174, 189, 202, 205, 213, 224, 237, 239, 260, 261, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 475, 476, 695, 698, 755, 830, 841, 854], "trap": 59, "minima": [59, 592], "pick_channels_evok": 59, "slightli": [59, 69, 125, 159, 179, 183, 200, 205, 208, 209, 228, 262, 263, 264, 265, 268, 357, 475, 476, 525, 533, 672, 742, 779, 850, 851, 857, 875], "eventu": [59, 135, 316, 327, 573, 834, 850], "020865": [59, 92, 177, 221], "96729": 59, "38524e": 59, "985": [59, 229], "descent": [59, 242, 472, 875], "845726": 59, "4408": [59, 183, 190], "353441": 59, "4410": 59, "859492": 59, "292946": 59, "51e": 59, "670058": 59, "519426": 59, "61e": 59, "669663": 59, "668049": 59, "546629e": 59, "049948803289596964": [59, 93, 178, 180], "2996928197375818": [59, 139, 148, 150, 226], "10e": [59, 67, 88, 93], "15e": 59, "20e": [59, 262, 263, 272, 475, 476, 772, 795], "medial": [59, 234, 682, 683, 742], "yellow": [59, 205, 264, 265, 757, 776, 793], "scalar_thresh": [59, 742], "stationari": [59, 78, 203, 205, 242, 345, 473, 850], "410": [59, 70, 79, 127, 197, 201, 205, 242, 473], "422": [59, 207, 224, 229, 242, 473], "sparsiti": [59, 242, 473, 655], "g\u00e1bor": [59, 242, 473], "sz\u00e9keli": [59, 242, 473], "horst": [59, 242, 473], "hahn": [59, 242, 473], "editor": [59, 190, 242, 330, 470, 473, 555, 724, 727, 834, 838, 852], "6801": [59, 242, 473], "page": [59, 133, 171, 200, 216, 242, 262, 263, 327, 384, 473, 475, 476, 555, 711, 721, 722, 724, 725, 727, 742, 772, 795, 832, 834, 835, 838, 840, 841, 846, 849, 850, 853, 854, 855, 856, 857, 858, 875], "611": [59, 207, 242, 352, 473], "springer": [59, 221, 242, 295, 296, 384, 473, 555], "berlin": [59, 221, 242, 295, 296, 473], "heidelberg": [59, 221, 242, 295, 296, 473], "1007": [59, 150, 204, 205, 206, 221, 242, 295, 296, 407, 473, 522, 555, 570, 660, 857], "978": [59, 111, 150, 200, 203, 207, 221, 242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 295, 296, 352, 473, 475, 476, 555, 677, 695, 698], "22092": [59, 242, 473], "0_49": [59, 242, 473], "magnitud": [60, 63, 69, 110, 134, 141, 144, 148, 149, 165, 167, 177, 179, 197, 198, 200, 214, 221, 232, 233, 270, 276, 278, 352, 407, 428, 451, 530, 560, 566, 574, 583, 592, 687, 783, 805, 832, 854, 875], "accomplish": [60, 133, 134, 148, 160, 170, 832, 840, 850, 851, 857], "plot_vector_source_estim": [60, 807, 865, 875], "hood": [60, 125, 142, 188, 197, 200, 204, 875], "plot_source_estim": [60, 742, 807, 865, 875], "instruct": [60, 114, 160, 188, 209, 466, 832, 833, 834, 835, 836, 838, 839, 840, 841, 845, 848, 854, 860, 875], "impos": [60, 193, 199, 875], "underli": [60, 159, 165, 200, 204, 224, 225, 237, 242, 256, 260, 261, 262, 263, 264, 265, 268, 269, 270, 273, 276, 277, 278, 407, 475, 476, 481, 576, 695, 698, 732, 875], "getter": [60, 176, 875], "peak_tim": [60, 174], "get_peak": [60, 125, 148, 150, 174, 176, 177, 179, 264, 265, 269, 270, 273, 276, 277, 278, 875], "time_dil": [60, 134, 135, 176, 180, 742], "framer": [60, 134, 135, 176, 180, 742], "95048065": 60, "56941314": 60, "72451438": 60, "stc_max": 60, "cosin": [60, 88, 200, 219, 650, 857], "source_nn": [60, 266, 295, 296, 860], "brain_max": 60, "975978731472672": 60, "90575168": 60, "52414196": 60, "71336747": 60, "brain_norm": 60, "83607509": 60, "44726242": 60, "57923594": 60, "lot": [60, 69, 125, 151, 157, 159, 165, 168, 198, 200, 202, 203, 204, 209, 213, 215, 357, 363, 426, 457, 603, 632, 634, 823, 834], "fname_inv_fix": 60, "inv_fix": 60, "stc_fix": 60, "brain_fix": [60, 177], "00351751": 60, "62842071": 60, "43519503": 60, "pars": [61, 139, 150, 164, 170, 172, 173, 189, 199, 214, 255, 256, 267, 281, 436, 448, 455, 475, 483, 490, 491, 497, 545, 610, 830, 875], "elekta": [61, 82, 155, 164, 185, 186, 208, 255, 259, 260, 262, 263, 264, 265, 267, 272, 300, 352, 427, 448, 450, 475, 476, 519, 758, 770, 772, 782, 795, 810, 846, 851, 857, 860, 875], "triux": [61, 182, 255, 262, 263, 264, 265, 386, 475, 476, 552, 695, 697, 698, 699, 851, 857], "dacq": [61, 255, 851], "acquisit": [61, 155, 159, 167, 187, 188, 189, 190, 205, 213, 242, 255, 256, 262, 263, 264, 265, 267, 281, 448, 475, 476, 477, 574, 583, 597, 660, 830, 846, 850, 857, 860, 875], "accordingli": [61, 133, 149, 157, 177, 188, 213, 257, 262, 263, 264, 265, 415, 466, 475, 476, 483, 490, 495, 584, 857, 875], "multimod": [61, 136, 242, 861, 865, 875], "multimodal_raw": 61, "grad_ssp_upright": 61, "mag_ssp_upright": 61, "v4": [61, 207, 208], "v5": [61, 207, 208], "183600": 61, "576599": 61, "960": [61, 79, 99, 142, 194, 225, 229, 851], "categori": [61, 110, 144, 255, 333, 614, 739, 857, 858, 875], "acqpars": [61, 255, 475, 875], "acqparserfif": [61, 267, 475, 865, 875], "get_condit": [61, 255], "plot_topo": [61, 149, 151, 165, 216, 237, 238, 262, 263, 264, 265, 319, 475, 476, 695, 697, 699, 875], "background_color": [61, 130, 264, 265, 780, 875], "cat": [61, 110], "flat": [61, 81, 109, 139, 140, 149, 180, 198, 199, 200, 204, 205, 206, 208, 255, 257, 262, 263, 269, 273, 277, 355, 357, 555, 557, 567, 568, 571, 572, 574, 681, 800, 830, 850, 875], "fiff": [61, 113, 155, 159, 262, 263, 266, 272, 275, 475, 476, 479, 492, 506, 507, 555, 567, 568, 729, 750, 818, 823, 851, 875], "fname_out": [61, 750], "write_evok": [61, 148, 264, 265, 438, 613, 854, 865, 875], "118": [61, 168, 207, 224, 228, 229, 242, 555, 875], "0812": [61, 168], "0123": [61, 144, 165, 168, 213], "0942": [61, 168], "2232": [61, 168, 333], "newcat": 61, "longer": [61, 112, 144, 161, 166, 167, 171, 190, 198, 199, 200, 201, 203, 224, 239, 262, 263, 264, 265, 267, 339, 431, 442, 446, 448, 475, 476, 557, 583, 698, 722, 723, 725, 726, 742, 752, 772, 775, 834, 840, 854, 857, 875], "ref": [61, 121, 150, 254, 742, 758, 834, 875], "reqev": [61, 255], "requir": [61, 107, 133, 134, 135, 139, 141, 143, 149, 155, 157, 160, 161, 165, 167, 169, 171, 181, 188, 189, 190, 194, 197, 200, 201, 203, 206, 208, 210, 213, 219, 221, 224, 225, 228, 232, 254, 255, 259, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 280, 295, 296, 301, 306, 310, 352, 353, 354, 355, 357, 358, 361, 382, 406, 407, 409, 410, 414, 416, 417, 420, 423, 424, 445, 446, 448, 450, 463, 465, 468, 469, 474, 475, 476, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 510, 514, 515, 517, 518, 525, 528, 529, 538, 539, 554, 555, 557, 560, 567, 568, 569, 577, 584, 592, 601, 638, 643, 646, 647, 648, 660, 682, 683, 684, 685, 686, 691, 695, 697, 699, 700, 701, 702, 703, 704, 705, 713, 714, 722, 723, 724, 725, 726, 736, 742, 759, 765, 772, 774, 777, 781, 785, 789, 794, 795, 796, 797, 800, 802, 804, 805, 811, 830, 832, 835, 838, 839, 850, 851, 856, 857, 863, 875], "reqwithin": [61, 255], "reqwhen": [61, 255], "freeli": 61, "elekta_epoch": [61, 66], "scratch": [63, 139, 148, 164, 187, 189, 190, 213, 222, 223, 239, 263, 264, 265, 267, 370, 476], "exampleio": 63, "fake": [63, 69, 158, 181], "won": [63, 150, 204, 205, 215, 228, 242, 262, 263, 264, 265, 358, 475, 476, 555, 613, 695, 697, 698, 699, 732], "consult": [63, 200, 204, 583, 834, 839, 840, 850, 854, 856, 857], "reader": [63, 165, 174, 187, 204, 213, 328, 474, 481, 483, 484, 485, 487, 490, 493, 495, 497, 498, 499, 501, 502, 503, 504, 505, 607, 609, 611, 857, 861, 875], "fakedata": 63, "nof": 63, "lazi": 63, "analogsign": 63, "multichannel": [63, 69, 110, 150, 194, 208, 242, 428, 563, 566, 583], "sampling_r": 63, "misc": [63, 65, 78, 79, 80, 113, 133, 134, 136, 148, 168, 177, 181, 182, 184, 187, 188, 190, 213, 219, 262, 263, 264, 265, 272, 309, 325, 344, 370, 440, 475, 476, 483, 485, 487, 490, 492, 497, 501, 552, 695, 697, 698, 699, 766, 772, 776, 778, 780, 795, 851, 865, 875], "show_scrollbar": [63, 74, 150, 203, 209, 219, 262, 263, 475, 476, 555, 772, 789, 795, 875], "100000": [63, 444], "99999": [63, 436], "854": [63, 66, 194, 229], "read_neo_format": [63, 66], "ev_info": 64, "15972": 64, "27235589e": 64, "79818505e": 64, "12852747e": 64, "85348042e": 64, "02846360e": 64, "26727393e": 64, "33468523e": 64, "80261790e": 64, "33583009e": 64, "93161055e": 64, "35199238e": 64, "79073915e": 64, "09498615e": 64, "16924072e": 64, "93873875e": 64, "40677185e": 64, "27444183e": 64, "08634620e": 64, "59818134e": 64, "51070563e": 64, "53708918e": 64, "968": [64, 66, 207, 229], "read_noise_covariance_matrix": [64, 66], "analyz": [65, 70, 139, 164, 167, 179, 194, 197, 198, 200, 201, 208, 214, 215, 224, 242, 262, 263, 433, 558, 564, 678, 831, 834, 850, 857, 875], "pabr": 65, "maddox": [65, 242, 875], "lab": [65, 67, 853, 863], "clemen": [65, 110, 862, 875], "brunner": [65, 110, 862, 875], "pyxdf": [65, 188], "p001_se": 65, "s004_task": 65, "default_run": 65, "001_eeg_a2": 65, "stream": [65, 188, 198, 201, 875], "header": [65, 111, 121, 155, 159, 181, 188, 190, 264, 265, 295, 296, 337, 352, 356, 357, 366, 367, 368, 407, 414, 450, 451, 470, 472, 473, 474, 482, 485, 487, 501, 503, 504, 533, 782, 875], "load_xdf": 65, "time_seri": 65, "assert": [65, 107, 139, 143, 148, 155, 170, 190, 214, 221, 224, 226, 856, 875], "four": [65, 69, 140, 143, 150, 165, 184, 200, 224, 234, 242, 259, 262, 263, 264, 265, 271, 407, 414, 475, 476, 554, 555, 569, 695, 697, 699, 742, 759, 774, 781, 785, 794, 797, 802, 804, 850, 857, 858], "plu": [65, 165, 167, 171, 176, 181, 200, 203, 205, 207, 228, 267, 714, 841, 852, 857, 860, 875], "rerefer": 65, "bipolar": [65, 190, 202, 203, 224, 262, 263, 264, 265, 475, 476, 637, 640, 875], "subselect": [65, 114, 142, 148, 149, 150, 165, 213, 226, 229, 237, 239, 260, 261, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 367, 475, 476, 695, 696, 697, 698, 772, 854, 875], "uv": [65, 262, 263, 264, 265, 475, 476, 875], "preamp": 65, "nominal_sr": 65, "2320128": 65, "2320127": 65, "232": [65, 143, 168, 207, 224, 229], "013": [65, 126, 139, 140, 148, 150, 168, 221], "melissa": [65, 242], "polonenko": [65, 242], "ross": [65, 242, 875], "brainstem": [65, 242], "hear": [65, 242, 587], "2331216519871395": [65, 242], "1177": [65, 99, 193, 225, 242, 390, 851], "read_xdf": [65, 66], "781": [66, 207, 229], "auto_examples_io": 66, "facilit": [67, 110, 134, 135, 166, 189, 194, 225, 262, 263, 264, 265, 475, 476, 695, 697, 698, 699, 850, 857, 860, 875], "subcort": [67, 242, 570, 875], "simul": [67, 69, 78, 89, 103, 104, 139, 148, 160, 175, 187, 189, 199, 200, 213, 219, 229, 232, 233, 234, 239, 242, 259, 262, 263, 264, 265, 266, 267, 268, 273, 275, 285, 352, 370, 448, 475, 476, 480, 508, 511, 517, 521, 522, 533, 552, 553, 587, 604, 610, 615, 617, 618, 621, 695, 697, 698, 699, 708, 722, 725, 726, 727, 742, 746, 801, 851, 865, 875], "samuelsson": [67, 242, 570, 875], "johnsam": 67, "mit": [67, 70, 150, 242, 470, 564, 845, 851, 857], "simulate_sparse_stc": [67, 90, 91, 659, 660, 662, 865, 875], "simulate_evok": [67, 90, 175, 220, 517, 660, 661, 662, 865, 875], "all_label": 67, "select_label": 67, "hiplab": 67, "postcenlab": 67, "cortical_waveform": 67, "waveform": [67, 97, 200, 202, 205, 209, 242, 270, 276, 278, 645, 647, 661, 662, 681, 801, 841], "pi": [67, 88, 91, 92, 93, 112, 200, 205, 219, 220, 221, 530, 592, 661, 711, 719, 721, 725, 857], "subcortical_waveform": 67, "data_fun": [67, 90, 91, 92, 661], "isin": [67, 110, 143], "evoked_subcort": [67, 570], "cortical_signal_suppress": [67, 865, 875], "n_proj": [67, 570], "fft": [67, 106, 131, 200, 237, 239, 262, 263, 264, 265, 415, 419, 420, 475, 476, 528, 538, 539, 696, 700, 701, 702, 703, 704, 705, 707, 714, 720, 722, 723, 724, 725, 726, 727, 796, 875], "rfft": 67, "psd_proc": 67, "transax": 67, "footbibliographi": [67, 834], "650": [67, 79, 80, 83, 145, 210], "put": [68, 114, 121, 125, 140, 143, 154, 155, 160, 169, 171, 181, 182, 184, 193, 200, 203, 213, 219, 220, 221, 224, 264, 265, 268, 382, 742, 776, 834, 839, 875], "earli": [68, 69, 140, 171, 198, 200, 239, 242, 257, 262, 263, 264, 265, 475, 476, 515, 606], "button": [68, 70, 92, 119, 126, 133, 139, 141, 143, 151, 155, 160, 165, 167, 190, 197, 199, 204, 214, 215, 216, 259, 262, 263, 264, 265, 271, 272, 407, 414, 433, 475, 476, 554, 555, 695, 697, 699, 772, 773, 774, 776, 778, 781, 785, 794, 795, 796, 797, 802, 834, 851, 875], "press": [68, 70, 111, 119, 126, 133, 139, 141, 143, 150, 151, 155, 160, 165, 167, 171, 190, 197, 199, 214, 215, 216, 242, 262, 263, 352, 433, 446, 470, 475, 476, 555, 564, 772, 787, 789, 795, 851, 875], "millisecond": [68, 80, 110, 139, 144, 148, 167, 213, 232, 233, 234, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 433, 475, 476, 695, 698, 742, 800, 805, 875], "late": [68, 161, 854], "quickli": [68, 164, 165, 193, 203, 204, 215, 858, 875], "slowli": 68, "define_target_ev": [68, 83, 126, 865], "quick": [68, 72, 91, 133, 182, 197, 238, 520, 834], "reference_id": [68, 126, 433], "smilei": [68, 70, 92, 151, 165, 167, 214, 851], "target_id": [68, 126, 433], "new_id": [68, 126, 433, 520], "hit": [68, 239, 259, 262, 263, 264, 265, 271, 407, 414, 475, 476, 554, 555, 695, 697, 699, 773, 774, 778, 781, 785, 794, 797, 802, 875], "fill_na": [68, 433], "fill": [68, 220, 268, 273, 275, 276, 358, 433, 463, 475, 476, 577, 662, 691, 742, 875], "events_": 68, "besid": [68, 199, 204], "tmin_": 68, "tmax_": 68, "8522": [68, 875], "10649": 68, "12859": 68, "14830": 68, "16850": 68, "18826": 68, "21224": 68, "23200": 68, "25272": 68, "27243": 68, "29525": 68, "31530": 68, "33481": 68, "35611": 68, "38007": 68, "08643728": 68, "532": [68, 206, 207], "78723509": 68, "97154325": 68, "359": [68, 79, 110, 168, 207, 229], "63138369": 68, "446": [68, 69, 83, 194, 207, 229, 242, 849], "20930939": 68, "40611816": 68, "512": [68, 71, 227, 229, 231, 272, 275, 406], "80771377": 68, "ft": [68, 141, 144, 165, 199, 205, 238, 254, 259, 262, 263, 264, 265, 269, 270, 271, 273, 276, 277, 278, 407, 414, 475, 476, 511, 554, 555, 569, 574, 695, 697, 699, 759, 773, 774, 776, 778, 781, 785, 794, 797, 802, 803, 804, 830, 857], "541": [68, 83, 207, 226, 229, 242, 428], "conduct": [69, 70, 99, 150, 157, 190, 224, 225, 226, 228, 242, 254, 512, 519, 652, 657, 830, 834, 850, 853, 857, 860, 875], "undesir": [69, 202, 555, 875], "otherwis": [69, 81, 118, 143, 150, 161, 171, 187, 199, 200, 229, 232, 234, 256, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 286, 295, 296, 300, 310, 322, 335, 352, 356, 357, 358, 366, 367, 368, 382, 400, 407, 414, 442, 445, 446, 450, 451, 465, 470, 472, 473, 475, 476, 485, 520, 521, 522, 528, 533, 554, 555, 569, 601, 610, 632, 633, 635, 641, 644, 661, 680, 681, 695, 697, 698, 699, 707, 719, 730, 732, 742, 758, 759, 766, 770, 772, 773, 774, 776, 777, 778, 779, 780, 781, 782, 785, 792, 794, 795, 796, 797, 798, 800, 801, 802, 804, 805, 820, 832, 834, 857, 875], "introduct": [69, 88, 93, 150, 229, 237, 239, 242, 272, 859], "smear": [69, 78, 79, 141, 200, 239, 582, 722, 723, 725, 726, 875], "unfortun": [69, 161, 842, 854], "brigd": 69, "far": [69, 81, 125, 139, 140, 143, 156, 170, 177, 199, 200, 201, 204, 206, 213, 214, 224, 363, 487, 558, 682, 683, 685, 686, 723, 726, 766, 857, 860], "address": [69, 94, 95, 165, 200, 224, 225, 232, 233, 234, 242, 267, 682, 683, 685, 686, 834, 840], "Or": [69, 118, 170, 197, 207, 569, 834], "quantifi": [69, 209, 239, 273], "introduc": [69, 74, 139, 140, 148, 150, 164, 165, 172, 174, 197, 199, 200, 201, 203, 204, 205, 213, 232, 234, 257, 262, 263, 264, 265, 318, 475, 476, 555, 772, 776, 795, 854, 857, 863, 875], "outcom": 69, "awar": [69, 101, 139, 143, 166, 167, 215, 226, 232, 262, 263, 264, 265, 475, 476, 779, 875], "mitig": [69, 179, 200, 201, 208, 857], "confound": [69, 150, 555], "psychophysiologi": [69, 70, 97, 140, 150, 200, 229, 242, 564, 681, 682, 683, 685, 686], "cpmc": 69, "columbia": 69, "softwar": [69, 133, 157, 164, 183, 188, 189, 206, 242, 255, 267, 318, 440, 466, 475, 476, 484, 503, 583, 626, 808, 828, 830, 832, 834, 835, 840, 842, 850, 851, 854, 855, 856, 859, 863, 865, 875], "ebridg": 69, "html": [69, 142, 168, 242, 254, 272, 569, 641, 858, 875], "linearsegmentedcolormap": [69, 757], "nearli": [69, 834], "exactli": [69, 125, 139, 143, 174, 183, 194, 213, 239, 557, 681, 760, 804, 875], "suffici": [69, 198, 200, 208, 226, 262, 263, 264, 265, 267, 280, 352, 475, 476, 514, 772, 795, 832, 834, 840, 850, 854, 857, 875], "portion": [69, 177, 197, 199, 213, 238, 262, 263, 319, 475, 476, 555, 772, 789, 795, 834, 854, 856], "plenti": 69, "settl": [69, 295], "ed_data": 69, "raw_data": 69, "read_raw": [69, 133, 134, 143, 171, 221, 254, 865, 875], "compute_bridged_electrod": [69, 582, 762, 865, 875], "1959919512423807e": 69, "665886892347821": 69, "oz": [69, 126, 158, 169, 239, 259, 262, 263, 264, 265, 271, 310, 407, 414, 475, 476, 554, 555, 569, 644, 695, 697, 699, 759, 766, 774, 776, 778, 781, 782, 785, 792, 794, 796, 797, 798, 802, 804, 875], "iz": 69, "4367320903573773": 69, "fcz": [69, 143, 239], "fc2": [69, 126], "fc4": [69, 143], "fc6": [69, 126], "f2": 69, "f4": [69, 126, 143, 158, 169, 206], "4835197413857302e": 69, "587817798758312": 69, "fc3": [69, 143, 498], "fc1": [69, 126, 474], "cp3": [69, 498], "cp1": [69, 126], "af7": 69, "af3": 69, "af4": 69, "af8": 69, "f5": [69, 498], "f3": [69, 126, 143, 158, 206, 498], "fz": [69, 126, 143, 158, 219, 225, 440, 475, 476, 490], "ft8": 69, "t8": [69, 126, 158, 169, 259, 262, 263, 264, 265, 271, 310, 407, 414, 475, 476, 554, 555, 569, 695, 697, 699, 759, 766, 774, 776, 778, 781, 782, 785, 792, 794, 796, 797, 798, 802, 804, 875], "tp8": 69, "p8": [69, 126, 158], "p7": [69, 126, 158, 498], "p5": [69, 498], "p3": [69, 126, 143, 158, 498], "p1": [69, 110, 209], "p4": [69, 126, 143, 158], "p6": 69, "po3": [69, 126, 239], "o1": [69, 126, 158, 219, 239], "po4": [69, 126, 239], "po8": [69, 126, 239, 875], "746002687400983": 69, "cz": [69, 110, 126, 143, 158, 169, 188, 190, 204, 206, 219, 225, 262, 263, 264, 265, 475, 476, 640, 875], "c2": [69, 110, 204], "c4": [69, 110, 126, 143, 158], "cp2": [69, 126], "cp4": 69, "pz": [69, 126, 142, 158, 190, 219, 225], "p2": [69, 110], "590631749463316": 69, "f6": 69, "understand": [69, 143, 159, 189, 200, 239, 711, 721, 725, 834, 857, 858, 863], "physiologi": 69, "clip": [69, 171, 216, 254, 259, 262, 263, 264, 265, 271, 407, 414, 475, 476, 554, 555, 569, 695, 697, 699, 759, 774, 781, 785, 794, 795, 797, 802, 804, 875], "bridged_idx": [69, 563, 582, 762], "ed_matrix": [69, 563, 762], "ax1": [69, 84, 88, 97, 136, 182, 193], "ax2": [69, 84, 88, 94, 97, 136, 182, 193, 226, 227], "triangular": [69, 159, 160, 268, 626, 682, 683, 685, 686, 801, 828, 850, 857, 860], "ed_plot": 69, "triu_idx": 69, "triu_indic": 69, "idx0": 69, "idx1": 69, "nanmedian": 69, "im1": 69, "cax1": 69, "set_label": [69, 145, 194, 224], "mu": [69, 200, 224, 563, 875], "im2": 69, "cax2": 69, "histogram": [69, 157, 262, 263, 772], "previou": [69, 133, 139, 143, 150, 160, 169, 170, 171, 180, 199, 200, 204, 206, 216, 264, 265, 295, 296, 352, 356, 357, 366, 367, 368, 407, 413, 414, 450, 451, 470, 472, 473, 533, 565, 574, 583, 742, 760, 782, 845, 860, 875], "pair": [69, 101, 118, 136, 143, 167, 187, 188, 189, 194, 208, 209, 224, 232, 239, 254, 259, 262, 263, 264, 265, 267, 269, 270, 271, 273, 275, 276, 277, 278, 281, 286, 300, 407, 414, 475, 476, 498, 521, 554, 555, 563, 582, 594, 626, 682, 684, 685, 695, 696, 697, 699, 730, 742, 758, 762, 763, 766, 774, 780, 781, 785, 797, 800, 802, 804, 805, 828, 834, 875], "isnan": 69, "arrang": [69, 125, 150, 164, 169, 216, 242, 747], "light": [69, 136, 141, 170, 189, 198, 262, 263, 264, 265, 410, 417, 475, 476, 555, 742, 772, 776, 789, 795, 830, 875], "horizont": [69, 79, 134, 139, 140, 141, 179, 190, 197, 208, 224, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 555, 742, 761, 776, 788, 789, 795, 800, 805, 875], "stand": [69, 154, 168, 174, 656, 834, 846], "insert": [69, 150, 168, 213, 259, 267, 271, 286, 300, 433, 449, 521, 730, 747], "syring": 69, "tip": [69, 203, 242, 352, 838, 839, 855, 861], "plot_bridged_electrod": [69, 865, 875], "saniti": [69, 118, 143, 181, 200, 443, 660, 863, 875], "implausibli": [69, 200, 224, 688], "interestingli": [69, 857], "though": [69, 73, 110, 150, 155, 159, 167, 171, 178, 182, 189, 197, 200, 201, 203, 204, 205, 210, 224, 267, 745, 765, 830, 851, 857, 875], "adjac": [69, 141, 145, 198, 225, 233, 234, 316, 327, 419, 448, 557, 560, 665, 666, 667, 668, 669, 670, 671, 675, 682, 683, 685, 686, 763, 863, 872, 875], "distinct": [69, 70, 194, 242, 259, 262, 263, 264, 265, 407, 414, 475, 476, 554, 695, 697, 699, 759, 774, 781, 797, 802, 804], "unlik": [69, 139, 140, 148, 149, 155, 159, 169, 180, 197, 200, 202, 213, 261, 262, 263, 264, 265, 270, 276, 278, 359, 386, 415, 584, 699, 805, 832, 850, 857, 875], "add_channel": [69, 73, 262, 263, 264, 265, 475, 476, 555, 695, 697, 698, 699, 875], "ch1": 69, "ch2": 69, "9760": [69, 81], "9759": [69, 81], "lesser": [69, 475, 476, 795, 875], "trough": [69, 143], "monoton": [69, 99, 486, 746, 815], "discrep": [69, 857], "driven": [69, 194, 224, 368, 414, 470], "blink": [69, 71, 81, 91, 92, 143, 171, 197, 199, 202, 203, 205, 206, 213, 215, 239, 242, 256, 262, 263, 554, 569, 647, 648, 875], "flatten": [69, 117, 204, 224, 228, 234, 242, 759, 875], "axvspan": [69, 94, 150], "subplots_adjust": [69, 70, 72, 105, 107, 110, 118, 125, 145, 150, 159, 198, 201, 203, 204, 205, 206, 209, 214, 224, 226, 227, 229, 765], "725": [69, 207], "wspace": [69, 72, 125, 224], "compel": 69, "evid": [69, 111, 200, 201, 242, 555, 724, 727], "judici": [69, 834], "electrolyt": [69, 242, 563], "tri": [69, 159, 160, 167, 174, 177, 262, 263, 268, 269, 273, 275, 277, 316, 363, 430, 462, 626, 629, 644, 664, 668, 671, 800, 823, 852, 857, 860, 875], "those": [69, 73, 77, 97, 125, 141, 143, 150, 156, 160, 164, 165, 167, 168, 169, 170, 171, 174, 179, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 213, 214, 215, 219, 220, 224, 254, 257, 262, 263, 264, 265, 267, 275, 295, 308, 310, 322, 325, 327, 353, 354, 355, 357, 366, 409, 413, 423, 428, 430, 431, 436, 440, 459, 475, 476, 486, 503, 533, 541, 554, 555, 557, 558, 570, 571, 572, 577, 580, 589, 591, 598, 644, 647, 648, 663, 681, 690, 695, 697, 698, 699, 703, 704, 705, 706, 708, 722, 723, 725, 726, 766, 772, 773, 776, 778, 779, 786, 793, 796, 834, 850, 856, 857, 859, 875], "still": [69, 73, 77, 113, 118, 141, 142, 143, 159, 170, 187, 188, 197, 198, 200, 201, 202, 204, 206, 208, 210, 213, 216, 224, 232, 262, 267, 275, 318, 363, 426, 457, 475, 555, 583, 603, 632, 634, 677, 698, 751, 765, 766, 807, 823, 832, 834, 840, 852, 863, 875], "biolog": [69, 197, 204, 205, 242, 522, 850, 857], "interpolate_bridged_electrod": [69, 865, 875], "midwai": [69, 582], "aid": [69, 242, 582, 875], "recov": [69, 133, 165, 363, 875], "impli": [69, 161, 220, 239, 267, 328, 362, 490, 854], "unbridg": 69, "ch0": 69, "bridged_idx_simul": 69, "data_orig": 69, "rng": [69, 90, 91, 92, 112, 193, 200, 224, 508, 555, 581, 600, 647, 648, 649, 658, 659, 661, 682, 683, 684, 685, 686], "random": [69, 82, 88, 90, 91, 92, 112, 158, 189, 190, 193, 197, 200, 203, 221, 224, 225, 232, 233, 234, 472, 508, 555, 581, 600, 647, 648, 649, 658, 659, 661, 682, 683, 684, 685, 686, 875], "default_rng": 69, "seed": [69, 88, 93, 110, 112, 203, 220, 221, 225, 232, 233, 234, 465, 508, 555, 581, 600, 647, 648, 649, 658, 659, 661, 674, 682, 683, 684, 685, 686, 875], "raw_sim": [69, 91, 92], "bridged_data": 69, "tile": [69, 112], "back": [69, 73, 81, 86, 114, 139, 142, 157, 160, 161, 165, 170, 171, 179, 180, 198, 200, 203, 204, 205, 206, 237, 255, 262, 263, 264, 265, 272, 363, 366, 422, 448, 475, 476, 555, 776, 834, 854, 875], "raw_virtu": 69, "data_virtu": 69, "raw_comp": 69, "data_comp": 69, "With": [69, 112, 119, 161, 170, 171, 187, 190, 204, 205, 210, 215, 221, 262, 263, 264, 265, 280, 449, 475, 476, 499, 555, 633, 742, 790, 830, 834, 837, 842, 846, 854, 856, 857], "comp": [69, 168, 267, 875], "1086289630998356e": 69, "139834556312537e": 69, "brought": [69, 155], "impend": 69, "help": [69, 71, 118, 133, 139, 143, 144, 145, 150, 158, 160, 161, 165, 168, 171, 180, 187, 189, 194, 197, 198, 199, 201, 202, 203, 205, 216, 228, 254, 260, 261, 262, 263, 264, 265, 268, 269, 270, 273, 276, 277, 278, 434, 436, 442, 466, 475, 476, 483, 490, 491, 497, 506, 555, 601, 607, 640, 644, 658, 661, 687, 694, 695, 698, 711, 721, 725, 739, 742, 750, 772, 786, 800, 834, 839, 840, 850, 852, 856, 857, 858, 860, 863, 875], "quest": 69, "technician": [69, 850, 851], "noisi": [69, 90, 141, 149, 198, 200, 205, 208, 224, 232, 234, 239, 267, 574, 575, 578, 647, 648, 659, 850, 875], "bid": [69, 133, 135, 242, 262, 263, 310, 475, 476, 841, 851, 863, 875], "tsv": [69, 328, 875], "kohm": 69, "passiv": [69, 197], "accept": [69, 92, 139, 168, 170, 171, 187, 198, 199, 200, 203, 204, 205, 213, 257, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 312, 342, 357, 374, 375, 376, 382, 384, 475, 476, 499, 557, 571, 572, 680, 682, 683, 685, 686, 697, 699, 742, 766, 773, 774, 780, 828, 834, 853, 875], "from_list": 69, "impedance_cmap": 69, "cn": [69, 804], "cax": [69, 110, 114, 125, 145, 229], "omega": [69, 107], "hopefulli": [69, 197, 239, 447], "convinc": [69, 150], "tenk": [69, 70, 242, 563, 564], "kayser": [69, 70, 242, 563, 564], "electroencephalogram": [69, 242, 563], "offici": [69, 70, 189, 242, 499, 555, 563, 564, 609, 834, 842, 856, 859, 875], "feder": [69, 242, 555, 563], "545": [69, 229, 242, 563], "550": [69, 79, 161, 221, 242, 428, 563], "march": [69, 242, 563, 860, 875], "s1388": [69, 110, 242, 563], "2457": [69, 110, 242, 563], "00553": [69, 242, 563], "arnaud": [69, 242, 555, 563], "delorm": [69, 242, 555, 563], "scott": [69, 110, 143, 242, 431, 470, 555, 563, 850, 875], "makeig": [69, 110, 143, 242, 431, 470, 555, 563, 850], "jneumeth": [69, 73, 200, 229, 242, 555, 563, 655, 682, 683, 685, 686], "2003": [69, 193, 239, 242, 413, 563, 850], "009": [69, 72, 119, 126, 139, 148, 168, 221, 242, 563], "eeg_bridg": [69, 83], "laplacian": [70, 193, 242, 419, 564, 640, 875], "sharper": [70, 200], "impact": [70, 136, 177, 198, 239, 407, 875], "166799": [70, 166, 181, 202], "date": [70, 72, 75, 79, 80, 81, 88, 91, 125, 140, 145, 150, 166, 167, 168, 188, 197, 198, 199, 201, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 219, 221, 254, 256, 262, 263, 264, 265, 267, 475, 476, 477, 487, 490, 584, 832, 834, 875], "decemb": [70, 72, 75, 79, 80, 81, 88, 91, 125, 140, 145, 150, 166, 167, 168, 197, 198, 199, 201, 203, 204, 205, 206, 208, 213, 214, 215, 216, 221], "2002": [70, 72, 75, 81, 88, 91, 110, 125, 140, 145, 150, 165, 166, 167, 168, 197, 198, 199, 200, 201, 203, 204, 205, 206, 208, 213, 214, 215, 216, 221, 242, 256, 522, 677, 679, 684, 857], "gmt": [70, 72, 75, 79, 80, 81, 88, 91, 125, 140, 145, 150, 166, 167, 168, 197, 198, 199, 201, 203, 204, 205, 206, 208, 209, 213, 214, 215, 216, 221], "146": [70, 72, 75, 81, 88, 91, 125, 139, 140, 145, 147, 150, 165, 166, 167, 168, 194, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 212, 213, 214, 215, 216, 221, 224, 228, 229, 242], "172": [70, 81, 91, 125, 166, 167, 168, 194, 197, 198, 200, 201, 204, 205, 206, 208, 213, 214, 215, 216, 224, 228, 229, 242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 655, 660, 695, 698], "hh": [70, 72, 75, 79, 80, 81, 88, 91, 125, 140, 145, 150, 166, 167, 197, 198, 199, 201, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 221], "ss": [70, 72, 75, 79, 80, 81, 88, 91, 125, 140, 145, 150, 166, 167, 197, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 221, 857], "raw_csd": 70, "compute_current_source_dens": [70, 640, 865, 875], "evoked_csd": 70, "stiff": [70, 564], "spline": [70, 77, 198, 242, 262, 263, 264, 265, 475, 476, 564, 857, 875], "flexibl": [70, 142, 171, 188, 210, 742, 875], "hspace": [70, 72, 125, 224], "set_size_inch": [70, 202], "this_evoked_csd": 70, "contour": [70, 99, 118, 157, 171, 254, 259, 262, 263, 264, 265, 271, 407, 414, 475, 476, 554, 555, 569, 580, 695, 697, 699, 759, 760, 774, 777, 778, 781, 785, 794, 797, 802, 804, 875], "n\u03bb\u00b2": 70, "perrin": [70, 77, 198, 242, 564, 857], "pernier": [70, 77, 198, 242, 564, 711, 721, 722, 725, 857], "bme": [70, 242, 564], "1987": [70, 175, 200, 242, 564], "326089": [70, 242, 564], "jacqu": [70, 77, 198, 242, 564, 711, 721, 722, 725, 857], "olivi": [70, 77, 198, 242, 352, 555, 564, 711, 721, 722, 725, 857], "fran\u0107oi": [70, 77, 198, 242, 564, 857], "echalli": [70, 77, 198, 242, 564, 857], "184": [70, 74, 77, 168, 194, 198, 224, 228, 229, 242, 564, 590, 857], "187": [70, 74, 77, 168, 194, 198, 207, 224, 228, 229, 242, 555, 564, 857], "1989": [70, 77, 198, 242, 564, 857], "90180": [70, 77, 198, 242, 564, 857], "mike": [70, 242, 564], "cohen": [70, 117, 127, 242, 564, 709, 711, 721, 725, 759, 875], "theori": [70, 164, 177, 208, 242, 564, 583], "j\u00fcrgen": [70, 203, 242, 555, 564], "craig": [70, 242, 564], "methodologi": [70, 99, 242, 352, 564], "electrophysiologi": [70, 133, 242, 564], "171": [70, 74, 124, 168, 194, 200, 207, 224, 242, 384, 533, 564, 590, 652, 657, 875], "173": [70, 144, 157, 168, 207, 224, 228, 242, 275, 564], "ijpsycho": [70, 242, 564], "025": [70, 74, 83, 126, 135, 139, 145, 148, 168, 190, 197, 200, 221, 224, 242, 590], "260": [70, 79, 168, 207, 229, 592, 851], "eeg_csd": [70, 83], "eog_event_id": 71, "eog_ev": [71, 199, 256, 568, 576, 579], "find_eog_ev": [71, 197, 199, 215, 256, 568, 572, 852, 865, 875], "add_ev": [71, 171, 272, 475, 476, 875], "audr": 71, "visr": 71, "pick_ch": 71, "375": [71, 79, 92, 168, 197, 199, 205, 207, 229], "dc": [71, 165, 167, 171, 189, 197, 199, 200, 201, 202, 203, 205, 210, 214, 257, 262, 264, 265, 267, 339, 475, 476, 555, 557, 583, 795, 830, 860, 875], "offset": [71, 91, 135, 160, 167, 171, 190, 197, 199, 200, 202, 203, 204, 205, 210, 213, 214, 215, 256, 257, 260, 261, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 359, 436, 448, 475, 476, 558, 597, 610, 675, 695, 698, 742, 830, 860, 875], "saccad": [71, 171, 190, 197, 199, 202, 203, 205, 554], "firwin2": [71, 145, 171, 190, 197, 199, 200, 202, 203, 205, 262, 263, 264, 265, 409, 418, 443, 445, 446, 475, 476, 875], "hann": [71, 82, 106, 107, 145, 171, 197, 199, 200, 202, 203, 205, 262, 263, 264, 265, 418, 443, 445, 446, 475, 476, 528, 529, 646, 647, 648, 660, 875], "1502": [71, 171, 199, 203], "eog_artifact_histogram": [71, 83], "basic": [72, 81, 110, 149, 150, 157, 160, 161, 164, 165, 170, 171, 172, 175, 191, 197, 202, 203, 204, 205, 208, 213, 216, 217, 221, 240, 241, 242, 254, 262, 267, 271, 310, 326, 370, 386, 436, 442, 485, 552, 697, 804, 851, 857, 875], "thorough": [72, 164, 198, 858], "modul": [72, 133, 139, 141, 142, 144, 145, 148, 149, 150, 160, 165, 166, 167, 168, 169, 170, 171, 188, 189, 197, 198, 199, 201, 202, 203, 204, 205, 206, 208, 213, 214, 215, 216, 219, 237, 239, 254, 345, 486, 549, 694, 739, 742, 833, 834, 841, 846, 854, 857, 863, 864, 865, 866, 867, 870, 873, 875], "eogregress": [72, 202, 210, 593, 797, 865, 875], "elimin": [72, 168, 202, 204, 208, 224, 232, 234, 353, 354, 355, 407, 577, 854, 857, 875], "slow": [72, 126, 136, 140, 143, 149, 200, 202, 209, 242, 262, 263, 399, 400, 412, 528, 529, 581, 713, 732, 774, 834, 851], "drift": [72, 140, 200, 202, 209, 210, 555, 597, 875], "1653": [72, 73], "376": [72, 79, 91, 92, 93, 107, 148, 165, 166, 168, 178, 186, 213, 229], "offpca": [72, 75, 91, 166, 167, 168, 197, 198, 199, 201, 203, 204, 205, 208, 213, 214, 215, 216, 221], "offaverag": [72, 91, 168, 199, 203], "raw_clean": [72, 82, 202, 591], "evoked_befor": 72, "evoked_aft": 72, "epochs_aft": 72, "spatial_color": [72, 92, 97, 127, 136, 143, 149, 150, 205, 216, 262, 263, 264, 265, 475, 476, 697, 699, 776, 779, 796, 875], "905": [72, 229], "eog_regress": [72, 83], "intermitt": 73, "extern": [73, 150, 179, 187, 208, 242, 262, 263, 264, 265, 339, 341, 345, 428, 437, 438, 439, 440, 475, 476, 555, 565, 566, 574, 583, 850, 851, 857, 875], "magnet": [73, 79, 117, 127, 133, 149, 155, 175, 187, 201, 202, 210, 229, 242, 340, 522, 555, 759, 830, 835, 850, 851], "fail": [73, 205, 356, 363, 426, 428, 457, 491, 492, 565, 566, 574, 583, 601, 603, 607, 632, 634, 823, 834, 856, 875], "succe": [73, 160, 170, 840], "choos": [73, 80, 112, 113, 134, 140, 145, 150, 159, 161, 179, 180, 188, 193, 197, 200, 202, 203, 208, 226, 239, 255, 262, 263, 269, 270, 273, 275, 276, 277, 278, 317, 448, 522, 530, 554, 560, 567, 575, 578, 583, 610, 658, 661, 681, 742, 758, 761, 800, 805, 806, 832, 834, 854, 856, 875], "made": [73, 114, 154, 171, 197, 200, 224, 262, 263, 268, 270, 275, 276, 278, 312, 326, 483, 597, 660, 773, 775, 805, 832, 834, 851, 856, 875], "whose": [73, 93, 143, 167, 169, 187, 194, 221, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 295, 296, 352, 356, 357, 366, 367, 368, 407, 414, 436, 441, 450, 451, 470, 472, 473, 475, 476, 515, 533, 555, 560, 569, 571, 572, 575, 648, 698, 699, 766, 769, 782, 787, 796, 797, 856, 857, 860, 875], "particularli": [73, 160, 189, 202, 224, 262, 263, 264, 265, 434, 475, 476, 555, 574, 837, 857], "heavi": [73, 232, 234, 854, 875], "jeff": [73, 242, 555, 875], "hanna": [73, 242, 555, 875], "refmeg_nois": [73, 851, 865, 875], "sample_reference_meg_nois": 73, "refmeg": 73, "165353": 73, "30000": [73, 406], "select_pick": 73, "plot_kwarg": [73, 156, 202, 210], "480": [73, 79, 116, 128, 170, 190, 224, 229], "raw_tog": 73, "ica_kwarg": 73, "picard": [73, 75, 81, 203, 555, 841, 875], "fit_param": [73, 75, 171, 407, 408, 409, 410, 411, 412, 414, 415, 417, 418, 424, 555, 556, 875], "all_pick": 73, "ica_tog": 73, "allow_ref_meg": [73, 555], "bad_comp": 73, "find_bads_ref": [73, 555, 875], "plot_properti": [73, 81, 165, 203, 555, 861, 875], "147": [73, 168, 194, 228, 229], "patient": [73, 75, 81, 135, 165, 171, 203, 875], "took": [73, 75, 81, 165, 171, 203, 555], "dpss": [73, 81, 101, 102, 136, 141, 142, 165, 171, 203, 237, 238, 262, 263, 264, 265, 420, 475, 476, 697, 699, 707, 713, 723, 726, 875], "raw_sep": 73, "ref_pick": 73, "ica_ref": 73, "ica_sep": 73, "think": [73, 143, 171, 194, 200, 224, 830, 853], "ekg": [73, 135], "cardiac": [73, 209], "ref_comp": 73, "get_sourc": [73, 555, 875], "ref_": 73, "recognis": 73, "rename_channel": [73, 110, 126, 139, 148, 150, 158, 184, 209, 213, 262, 263, 264, 265, 310, 475, 476, 486, 498, 865, 875], "cora": [73, 242, 555, 875], "kim": [73, 242, 555, 875], "nadia": [73, 242, 555], "voggel": [73, 242, 555], "magnetoencephalograph": [73, 242, 555], "108592": [73, 242, 555], "find_ref_artifact": [73, 83], "fnir": [74, 164, 168, 169, 191, 192, 211, 212, 242, 262, 263, 264, 265, 267, 310, 326, 328, 351, 368, 370, 436, 475, 476, 484, 498, 503, 505, 552, 585, 586, 587, 589, 590, 695, 697, 698, 699, 742, 758, 766, 775, 780, 830, 841, 857, 875], "mail": [74, 224, 845], "robertluk": 74, "net": [74, 169, 193, 242, 413, 677, 857, 875], "optical_dens": [74, 209, 865, 875], "temporal_derivative_distribution_repair": [74, 865, 875], "exact": [74, 101, 133, 201, 224, 232, 239, 242, 262, 263, 264, 265, 288, 424, 475, 476, 522, 682, 684, 685, 696, 700, 702, 703, 705, 830, 838, 857, 875], "fnirs_data_fold": [74, 209], "fnirs_motor": [74, 209, 851, 865, 875], "fnirs_cw_amplitude_dir": [74, 209], "raw_intens": [74, 209], "read_raw_nirx": [74, 189, 209, 481, 857, 865, 875], "raw_od": [74, 209], "new_annot": [74, 215], "317": [74, 110, 168, 229], "set_annot": [74, 79, 80, 136, 167, 190, 199, 215, 256, 262, 263, 475, 476, 557, 584, 875], "23238": [74, 209], "2974": [74, 209], "464": [74, 143, 170, 209, 275], "spike": [74, 81, 255, 590, 850], "person": [74, 150, 209, 267, 834, 850, 856], "optod": [74, 189, 209, 505, 587, 742, 758, 851, 875], "corrupted_data": 74, "750": [74, 79, 142, 229, 851], "corrupted_od": 74, "245": [74, 168, 184, 199, 228, 242, 857], "8924": 74, "8923": 74, "suppli": [74, 99, 151, 171, 179, 205, 219, 224, 260, 261, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 358, 382, 431, 441, 442, 475, 476, 555, 569, 589, 590, 637, 695, 698, 765, 766, 785, 875], "corrected_tddr": 74, "said": [74, 174], "fishburn": [74, 242, 590], "ruth": [74, 242, 590], "ludlum": [74, 242, 590], "chandan": [74, 242, 590], "vaidya": [74, 242, 590], "andrei": [74, 242, 590], "medvedev": [74, 242, 590], "tddr": [74, 242, 590, 875], "motion": [74, 242, 559, 590, 875], "2018": [74, 82, 124, 136, 194, 203, 221, 242, 295, 296, 555, 590, 591], "037": [74, 83, 139, 148, 168, 213, 221], "fnirs_artifact_remov": [74, 83], "pierreablin": 75, "9009": [75, 171, 203], "run_ica": [75, 875], "t0": [75, 98, 184, 239, 255, 700, 701, 702], "fit_tim": 75, "infomax": [75, 203, 242, 555, 861, 865, 875], "094": [75, 83], "ica_comparison": [75, 83], "replac": [77, 86, 99, 140, 142, 150, 158, 171, 187, 189, 199, 204, 205, 208, 213, 215, 242, 259, 262, 263, 264, 265, 271, 272, 407, 414, 429, 442, 475, 476, 487, 503, 520, 554, 555, 569, 695, 697, 699, 759, 781, 785, 794, 797, 802, 834, 838, 840, 842, 845, 857, 875], "evoked_interp": 77, "product": [77, 85, 117, 122, 149, 169, 187, 188, 193, 198, 205, 242, 267, 329, 420, 675, 723, 724, 726, 727, 751, 856, 857, 875], "truncat": [77, 85, 117, 122, 149, 198, 205, 214, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 430, 436, 475, 476, 488, 695, 698, 766, 875], "evoked_interp_mn": 77, "\u03b1": [77, 141, 205, 216], "0e": [77, 193, 205], "657": [77, 83, 229], "interpolate_bad_channel": [77, 83], "bilater": [78, 205, 643, 875], "repeat": [78, 91, 99, 111, 133, 139, 160, 164, 166, 204, 205, 213, 214, 224, 230, 231, 235, 236, 256, 262, 263, 264, 265, 267, 273, 275, 358, 431, 475, 521, 522, 536, 552, 555, 569, 592, 610, 625, 667, 676, 678, 679, 683, 686, 687, 698, 725, 742, 780, 834, 842, 854, 875], "maxwell_filt": [78, 183, 207, 208, 428, 565, 574, 584, 784, 854, 865, 875], "head_po": [78, 79, 207, 208, 428, 574, 583, 646, 647, 648, 660, 875], "chpi": [78, 79, 121, 168, 182, 207, 208, 254, 262, 263, 264, 265, 267, 272, 309, 428, 475, 476, 552, 559, 562, 583, 646, 647, 648, 660, 695, 697, 698, 699, 765, 772, 795, 830, 857, 863, 864, 865, 875], "read_head_po": [78, 207, 208, 340, 342, 348, 350, 428, 574, 583, 646, 647, 648, 660, 865], "simulated_quat": 78, "simulated_movement_raw": 78, "raw_stat": 78, "simulated_stationary_raw": 78, "34208": 78, "955": [78, 81, 142, 227, 229], "backward": [78, 200, 254, 262, 263, 264, 265, 368, 407, 409, 413, 414, 418, 435, 443, 445, 446, 475, 476, 528, 697, 699, 742, 774, 783, 807, 857, 875], "plot_head_posit": [78, 79, 207, 208, 865, 875], "quiver": [78, 260, 742, 770, 784], "306m": [78, 107, 114, 121, 122, 149, 155, 157, 169, 171, 182], "topo_kwarg": [78, 140], "evoked_stat": 78, "naiv": [78, 228], "therebi": [78, 174, 202, 204, 723, 726, 857], "third": [78, 92, 93, 150, 168, 171, 187, 205, 209, 215, 256, 257, 262, 435, 436, 448, 449, 475, 476, 516, 550, 555, 609, 610, 685, 686, 699, 775, 820, 834, 857], "restor": [78, 199, 206, 264, 265, 407, 411, 555, 556, 595, 742, 821, 875], "raw_sss": [78, 171, 208, 254, 475, 476, 495, 583], "evoked_raw_mc": 78, "harmon": [78, 91, 182, 183, 190, 197, 201, 207, 208, 239, 857], "fourth": [78, 200, 215, 465, 857], "cleanli": [78, 168], "evoked_evo_mc": 78, "average_mov": [78, 208, 583, 865, 875], "movement_compens": [78, 83], "contamin": [79, 200, 203, 242, 555], "similarli": [79, 97, 110, 142, 148, 170, 194, 200, 206, 209, 256, 555, 766, 852, 857], "suffer": [79, 850], "adonai": [79, 80, 875], "nune": [79, 80, 242, 655, 875], "bst_auditori": [79, 80, 190, 865], "annotate_mov": [79, 207, 865, 875], "compute_average_dev_head_t": [79, 559, 865, 875], "data_path_meg": 79, "raw_fname1": [79, 190], "s01_aef_20131218_01": [79, 80, 190], "raw_fname2": [79, 190], "s01_aef_20131218_02": [79, 190], "mismatch": [79, 159, 160, 190, 352, 441, 530, 799, 875], "on_mismatch": [79, 190, 352, 359, 361, 821, 875], "264": [79, 80, 110, 150, 168, 190, 207, 224, 242], "s01_20131218_01": [79, 80, 190], "2400": [79, 80, 183, 190], "864000": [79, 80, 190], "263": [79, 80, 168, 190, 207, 208, 229], "eab": [79, 80], "s01": [79, 80], "lt": [79, 113], "br": 79, "gt": 79, "chpi_loc": [79, 207, 340, 342, 343, 344], "extract_chpi_locs_ctf": [79, 340, 342, 865, 875], "compute_head_po": [79, 207, 208, 340, 343, 583, 865, 875], "original_head_dev_t": 79, "invert_transform": [79, 134], "average_head_dev_t": 79, "val": [79, 99], "val_ori": 79, "010": [79, 92, 126, 139, 148, 154, 168, 221, 242], "020": [79, 126, 139, 148, 168, 221], "090": [79, 207], "130": [79, 80, 81, 157, 168, 169, 207, 229, 242, 336, 875], "220": [79, 136, 168, 207, 228, 229], "280": [79, 113, 128, 168, 169, 207, 229, 238, 336, 875], "290": [79, 143, 168, 183, 193, 229, 242, 655], "370": [79, 110, 168, 224, 229, 242, 268, 273], "380": [79, 144, 147, 207, 224, 229], "430": [79, 107, 207, 229], "460": [79, 183, 207, 229, 242, 849], "470": [79, 207, 229], "490": [79, 207, 224, 229], "510": [79, 143, 207, 224, 239], "520": [79, 201, 212, 229], "560": [79, 176, 206, 219, 223, 229], "580": [79, 207, 229], "620": [79, 229], "680": [79, 190], "690": 79, "710": [79, 207, 229, 242, 563], "720": [79, 193, 207, 229, 242, 563], "730": [79, 229], "740": [79, 207], "760": [79, 207, 229], "770": [79, 193], "780": [79, 128, 129, 194, 229], "790": [79, 207, 229], "810": [79, 207, 229], "820": [79, 104], "830": [79, 229], "840": [79, 194, 229], "850": [79, 207, 875], "880": [79, 179, 207, 229, 242, 295, 296], "890": [79, 207, 229, 242, 275], "910": 79, "920": [79, 99, 142, 225, 229], "970": [79, 229], "980": [79, 159, 163, 203, 207, 229], "990": [79, 174, 186, 207, 229], "351": [79, 110, 168, 207, 229], "353": [79, 110, 168], "355": [79, 110, 124, 128, 168, 176, 186, 193, 224, 229], "356": [79, 110, 168, 193, 194, 224, 229], "357": [79, 110, 168, 200, 229], "358": [79, 110, 168], "369": [79, 110, 168, 229, 242, 522, 655, 857], "182": [79, 168, 190, 199, 207, 224, 228, 229, 234, 236], "362": [79, 110, 168, 202, 212, 220, 225, 229], "363": [79, 110, 168, 224, 229], "367": [79, 168, 198, 229], "371": [79, 104, 110, 168, 229], "372": [79, 168, 207, 224, 229], "377": [79, 181, 193, 224, 229], "379": 79, "381": [79, 89, 92], "385": [79, 229], "386": [79, 107, 229], "389": [79, 193, 224], "391": [79, 94, 207, 229], "394": [79, 136, 207, 224, 229, 677], "395": [79, 224], "397": [79, 133, 138, 224, 229], "404": [79, 207], "405": [79, 207, 224, 229], "406": 79, "409": [79, 117, 207, 229, 242, 759], "mean_distance_limit": [79, 559], "0015": 79, "annotation_mov": 79, "hpi_disp": [79, 559], "disp": 79, "0015m": 79, "0038m": 79, "new_dev_head_t": 79, "show_ax": [79, 121, 123, 134, 155, 156, 158, 181, 182, 311, 758, 791, 875], "outer_skin": [79, 107, 116, 134, 155, 157, 158, 160, 171, 758, 850, 851, 857], "ctf_275": [79, 121, 183], "676": [79, 83, 194, 229], "movement_detect": [79, 83], "contract": [80, 856], "clench": [80, 203], "jaw": [80, 203], "swallow": [80, 197, 203], "twitch": 80, "cranial": 80, "notic": [80, 82, 139, 140, 142, 144, 148, 149, 150, 155, 159, 161, 165, 166, 169, 174, 190, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 213, 215, 216, 219, 220, 574, 834], "annotate_muscle_zscor": [80, 865, 875], "taken": [80, 92, 136, 141, 198, 202, 204, 205, 229, 232, 239, 255, 256, 264, 265, 267, 268, 272, 273, 295, 296, 352, 356, 357, 366, 367, 368, 407, 414, 450, 451, 470, 472, 473, 474, 475, 476, 533, 581, 601, 696, 707, 782, 795, 851, 856, 875], "analyt": [80, 111, 242, 262, 263, 264, 265, 475, 476, 875], "divid": [80, 99, 125, 141, 142, 143, 146, 147, 161, 164, 208, 224, 226, 229, 262, 263, 264, 265, 268, 269, 270, 273, 276, 277, 278, 285, 473, 475, 476, 515, 538, 539, 560, 563, 567, 583, 617, 672, 682, 685, 695, 697, 698, 699, 710, 718, 774, 798, 802, 830, 854, 858, 875], "squar": [80, 111, 126, 139, 148, 149, 150, 161, 167, 168, 177, 188, 200, 213, 219, 221, 224, 226, 237, 242, 259, 262, 263, 264, 265, 269, 270, 271, 273, 276, 277, 278, 295, 296, 325, 407, 414, 451, 475, 476, 530, 537, 554, 555, 569, 675, 680, 682, 683, 685, 686, 695, 696, 697, 699, 742, 759, 767, 768, 774, 776, 781, 783, 785, 788, 794, 797, 800, 802, 804, 805, 830, 854, 857, 860, 875], "hundr": [80, 203, 204, 465, 832], "bad_muscl": [80, 560], "min_length_good": [80, 560], "fraction": [80, 111, 143, 174, 197, 203, 224, 324, 528, 537, 555, 573, 690, 786, 856, 875], "notch": [80, 190, 201, 210, 345, 446, 475, 476], "1981": 80, "603": [80, 229], "scores_muscl": [80, 560], "threshold_muscl": 80, "annot_muscl": 80, "filter_freq": [80, 560], "zscore": [80, 285, 538, 539, 555, 695, 698, 802], "164": [80, 131, 168, 200, 228, 229, 242, 682, 683, 685, 686], "196": [80, 168, 207, 228, 229], "muscle_detect": [80, 83], "gross": [81, 242, 407], "widespread": [81, 203], "recover": 81, "ubiquit": 81, "postur": [81, 203], "mainten": [81, 205, 834, 875], "appropri": [81, 145, 148, 161, 165, 181, 182, 189, 199, 203, 205, 208, 219, 224, 226, 228, 239, 242, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 316, 322, 358, 385, 386, 475, 476, 519, 533, 681, 742, 766, 795, 800, 805, 832, 834, 849, 854, 857, 860, 875], "wouldn": [81, 875], "pronounc": [81, 200, 854], "simultan": [81, 136, 141, 194, 201, 203, 216, 415, 465, 498, 517, 597, 605, 684, 851, 857, 863, 875], "18019": 81, "1983": [81, 202, 242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 554, 598, 695, 698], "18020": 81, "exclus": [81, 169, 198, 203, 492, 550, 555, 786, 788, 789, 875], "mdash": [81, 203], "plot_sourc": [81, 203, 262, 263, 475, 476, 555, 772, 789, 795, 875], "85861": 81, "103880": 81, "criteria": [81, 139, 165, 199, 204, 205, 209, 255, 262, 263, 272, 550, 555, 875], "slope": [81, 187, 200, 254, 255, 267, 339, 340, 499, 555, 875], "peripher": [81, 555], "pole": [81, 159], "foci": [81, 742, 875], "blob": [81, 232, 233], "worth": [81, 99, 148, 225, 242, 390, 483, 490, 834, 851, 852, 854], "fire": 81, "fuzzi": 81, "textbook": [81, 204, 242, 677], "temporali": 81, "ear": [81, 165, 169, 179, 851], "muscle_idx": [81, 555], "log_scal": [81, 555, 787], "blink_idx": 81, "heartbeat_idx": 81, "muscle_idx_auto": 81, "find_bads_muscl": [81, 555, 875], "426": [81, 177, 186, 216, 229, 237], "s001r01": 81, "529": [81, 194, 229], "s002": [81, 203], "s002r01": 81, "dhani": [81, 242, 555], "dharmaprani": [81, 242, 555], "hoang": [81, 242, 555], "nguyen": [81, 242, 555], "trent": [81, 242, 555], "lewi": [81, 242, 555, 857], "delosangel": [81, 242, 555], "willoughbi": [81, 242, 555], "kenneth": [81, 143, 242, 431, 555], "pope": [81, 242, 555], "38th": [81, 242, 555], "annual": [81, 205, 242, 555, 859], "confer": [81, 143, 242, 431, 555, 859], "societi": [81, 189, 242, 352, 522, 555, 724, 727, 857], "embc": [81, 203, 242, 555], "828": [81, 194, 242, 555], "orlando": [81, 242, 555], "fl": [81, 242, 555], "usa": [81, 197, 242, 555], "7590828": [81, 242, 555], "698": [81, 83, 193, 229], "muscle_ica": [81, 83], "otp": [82, 83, 591], "flux": [82, 208, 210, 262, 263, 264, 265, 475, 476, 552, 695, 697, 698, 699, 857], "jump": [82, 110, 143, 197, 208, 682, 683, 685, 686, 875], "bst_phantom_elekta": [82, 182], "phantom": [82, 164, 185, 186, 242, 259, 260, 262, 264, 265, 267, 300, 352, 357, 386, 427, 448, 450, 475, 486, 488, 519, 583, 758, 770, 782, 810, 851, 857, 875], "rid": [82, 228], "1522": [82, 168], "dipole_numb": 82, "kojak_all_200nam_pp_no_chpi_no_ms_raw": [82, 182], "47000": [82, 182], "437999": [82, 182], "alongsid": [82, 144, 148, 154, 198, 203, 204, 206, 214, 793, 830, 841], "oversampled_temporal_project": [82, 865, 875], "lump": [82, 583], "compute_bia": 82, "sti201": [82, 182, 267], "make_sphere_model": [82, 123, 155, 182, 183, 184, 206, 512, 857, 865, 875], "r0": [82, 123, 155, 182, 183, 184, 519], "head_radiu": [82, 123, 155, 182, 183, 184, 519, 875], "036": [82, 139, 148, 168, 182, 221, 242, 655], "actual_po": [82, 182, 184], "get_phantom_dipol": [82, 182, 386, 865, 875], "1fmm": 82, "worst": [82, 119, 352, 357, 651, 653, 654, 875], "bias_clean": 82, "9mm": 82, "2mm": [82, 857], "4mm": 82, "samu": [82, 161, 208, 242, 566, 583, 591, 660, 854, 875], "taulu": [82, 161, 208, 242, 428, 566, 583, 591, 660, 854, 875], "1013": [82, 168, 193, 242, 591], "2017": [82, 133, 150, 203, 242, 389, 555, 591, 655, 660], "2734641": [82, 242, 591], "169": [82, 83, 97, 168, 224, 228, 229, 242, 681], "auto_examples_preprocess": 83, "virtual_evok": [83, 85], "617": [83, 85, 229], "xdawn_denois": [83, 86], "shift_evok": [83, 84], "hut": 84, "2332": [84, 168, 549], "ax3": [84, 88, 97, 182, 193], "magnomet": 85, "virt_evok": 85, "as_typ": [85, 262, 263, 264, 265, 875], "plot_epochs_imag": [86, 115, 555, 785, 787, 865, 875], "signal_cov": [86, 556], "xd": 86, "1388": 86, "41640": 86, "epochs_denois": 86, "brief": [88, 93, 165, 197, 216, 224, 834], "simplest": [88, 93, 167, 194, 210, 224, 857], "kostiantyn": [88, 92, 93, 242, 655, 875], "maksymenko": [88, 92, 93, 242, 655, 875], "functool": [88, 224, 269, 270, 273, 276, 277, 278, 834], "partial": [88, 148, 150, 165, 199, 213, 214, 224, 242, 262, 263, 269, 270, 273, 276, 277, 278, 316, 585, 724, 727, 742, 766, 807, 811, 851, 863, 875], "region_localization_error": [88, 865], "f1_score": [88, 865], "precision_scor": [88, 865], "recall_scor": [88, 865], "cosine_scor": [88, 865], "peak_position_error": [88, 865], "spatial_deviation_error": [88, 865], "determinist": [88, 203, 875], "middl": [88, 93, 110, 133, 159, 165, 200, 204, 219, 260, 267, 269, 270, 273, 276, 277, 278, 443, 761, 770, 800, 805, 806, 834, 857, 875], "frontal": [88, 93, 165, 197, 203, 205, 213, 221, 303, 630, 742], "selected_label": [88, 93], "term": [88, 101, 124, 133, 165, 167, 193, 200, 204, 224, 228, 234, 239, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 328, 339, 374, 375, 376, 384, 475, 476, 530, 542, 564, 655, 695, 698, 710, 718, 830, 834, 851, 856, 857, 858, 863, 875], "label_region": 88, "select_sourc": [88, 93, 865, 875], "1915": 88, "One": [88, 94, 95, 98, 140, 142, 148, 149, 150, 154, 156, 165, 170, 177, 190, 200, 202, 203, 210, 213, 224, 242, 262, 263, 264, 265, 272, 310, 312, 434, 440, 475, 476, 555, 677, 684, 760, 772, 773, 789, 795, 834, 850, 857, 859, 860, 875], "label_dipol": 88, "source_time_seri": [88, 92, 93], "sin": [88, 90, 91, 92, 93, 112, 200, 219, 220, 221, 339, 592, 661], "n_event": [88, 93, 257, 262, 263, 267, 272, 281, 361, 435, 436, 448, 475, 476, 492, 516, 550, 558, 577, 597, 607, 609, 610, 645, 681, 698, 772, 775, 820, 830], "sourcesimul": [88, 92, 93, 660, 865, 875], "source_simulator_region": 88, "add_data": [88, 92, 93, 114, 269, 270, 273, 276, 277, 278, 645, 742, 800, 805], "source_simulator_dipol": 88, "gaussian": [88, 92, 112, 119, 151, 160, 161, 200, 203, 220, 224, 262, 263, 264, 265, 470, 581, 649, 711, 721, 724, 725, 727, 773, 782, 803, 850, 854, 857], "raw_region": 88, "simulate_raw": [88, 91, 92, 93, 221, 647, 648, 659, 661, 662, 865, 875], "make_ad_hoc_cov": [88, 91, 93, 221, 259, 296, 865, 875], "add_nois": [88, 91, 92, 93, 221, 647, 648, 660, 865, 875], "iir_filt": [88, 90, 91, 93, 221, 649, 659], "raw_dipol": 88, "cos2": [88, 91, 92, 93, 221, 646, 647, 648, 660], "evoked_region": 88, "evoked_dipol": 88, "stc_true_region": 88, "get_stc": [88, 92, 645], "start_sampl": [88, 213, 645], "stop_sampl": [88, 213, 645], "stc_true_dipol": 88, "stc_est_region": 88, "stc_est_dipol": 88, "0004": 88, "2931": 88, "34986e": 88, "scorer": [88, 413, 424, 875], "rle": [88, 655], "region_result": 88, "thx": 88, "per_sampl": [88, 650, 651, 652, 653, 654, 655, 656, 657], "ax4": 88, "col": [88, 110, 742, 875], "constrained_layout": [88, 210, 711, 721], "super": [88, 239], "ticklabel_format": 88, "style": [88, 125, 133, 149, 150, 170, 187, 209, 254, 257, 259, 262, 263, 264, 265, 272, 277, 278, 295, 407, 413, 414, 466, 475, 476, 499, 554, 555, 695, 697, 698, 699, 742, 758, 759, 766, 773, 774, 777, 779, 780, 781, 789, 790, 795, 797, 802, 803, 804, 806, 875], "sci": [88, 209, 587], "scilimit": 88, "tweak": [88, 112, 125, 239, 832, 852, 854], "dipole_result": 88, "653": [88, 89, 229], "plot_stc_metr": [88, 89], "auto_examples_simul": 89, "simulated_raw_data_using_subject_anatomi": [89, 92], "678": [89, 229], "simulate_raw_data": [89, 91], "source_simul": [89, 92, 93], "simulate_evoked_data": [89, 90], "846": [89, 90, 157, 181, 229], "fit_iir_model_raw": [90, 109, 865, 875], "templat": [90, 91, 123, 133, 134, 154, 156, 162, 163, 164, 169, 175, 229, 242, 266, 267, 275, 282, 300, 310, 314, 315, 316, 326, 327, 328, 332, 363, 370, 385, 432, 476, 490, 518, 569, 602, 625, 644, 758, 810, 815, 830, 848, 875], "read_proj": [90, 109, 129, 141, 190, 204, 262, 263, 264, 265, 272, 475, 476, 826, 865], "sample_audvis_ecg": [90, 109, 129, 141, 171, 204, 254], "randomst": [90, 91, 92, 112, 158, 193, 200, 221, 224, 508, 555, 581, 600, 647, 648, 649, 658, 659, 661, 682, 683, 684, 685, 686, 875], "randn": [90, 112, 158, 193, 200, 221, 224, 232, 233, 234], "high_resolut": [90, 801], "wronkiewicz": [91, 875], "wronk": 91, "add_ecg": [91, 92, 648, 660, 865, 875], "add_eog": [91, 92, 647, 660, 865, 875], "epoch_dur": [91, 563], "stagger": 91, "sinusoid": [91, 92, 112, 182, 183, 200, 207, 219, 221, 339, 446, 475, 476, 661, 830], "10hz": 91, "global": [91, 111, 119, 126, 141, 143, 148, 149, 154, 161, 165, 182, 205, 242, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 431, 740, 766, 773, 776, 779, 781, 782, 800, 805, 830, 834, 854, 875], "n_samp": [91, 213, 221, 875], "25e": 91, "1e9": [91, 183, 221], "plt_show": [91, 179, 224], "input": [91, 92, 112, 154, 171, 187, 193, 194, 200, 205, 208, 213, 224, 228, 229, 234, 254, 262, 263, 264, 265, 268, 269, 270, 273, 276, 277, 278, 281, 312, 328, 353, 354, 355, 359, 407, 408, 410, 411, 413, 414, 415, 417, 419, 424, 431, 436, 442, 464, 466, 467, 472, 475, 476, 499, 501, 555, 556, 564, 565, 567, 568, 571, 572, 574, 575, 596, 610, 661, 672, 674, 681, 682, 683, 685, 686, 693, 695, 713, 714, 742, 743, 745, 746, 758, 766, 773, 777, 781, 789, 800, 803, 805, 815, 850, 856, 857, 860, 875], "millimet": [91, 92, 155, 159, 181, 333, 337, 450, 465, 491, 508, 607, 857, 875], "calc": 91, "orphan": [91, 210], "ivana": [92, 875], "kojcic": [92, 875], "deslauri": [92, 93, 875], "gauthier": [92, 93, 875], "sam": [92, 93, 875], "doesn": [92, 139, 155, 169, 170, 203, 205, 206, 208, 213, 226, 229, 239, 374, 375, 376, 377, 379, 380, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 544, 555, 558, 572, 576, 583, 603, 642, 696, 698, 715, 787, 834, 842, 850, 854, 875], "fname_info": 92, "g_temp_sup": 92, "g_t_transv": 92, "s_calcarin": 92, "vice": [92, 132, 159, 200, 273, 857], "versa": [92, 132, 159, 200, 273, 857], "moreov": [92, 136, 204, 205, 224], "contralater": [92, 150, 206], "ipsilater": [92, 150, 175], "activation_list": 92, "region_nam": 92, "latenc": [92, 142, 143, 144, 148, 229, 242, 264, 265, 269, 270, 273, 276, 277, 278, 431, 682, 683, 685, 686, 777, 875], "sigma": [92, 115, 126, 136, 141, 194, 224, 262, 263, 519, 688, 689, 711, 721, 732, 773, 803, 857, 860], "gf": 92, "rand": [92, 221], "100m": 92, "30m": 92, "15m": 92, "region_id": 92, "events_tmp": 92, "label_tmp": 92, "amplitude_tmp": 92, "latency_tmp": 92, "wf_tmp": 92, "evoked_aud_left": 92, "evoked_vis_right": 92, "mere": [92, 171, 203, 613, 856], "stc_aud": 92, "stc_vi": 92, "stc_diff": 92, "49264": [92, 177], "64e": [92, 177], "3254294": 92, "92023613": 92, "51105546": 92, "christoph": [92, 113, 150, 154, 193, 242, 352, 413, 679, 875], "destrieux": [92, 154, 242], "ander": [92, 154, 177, 242, 522, 857], "dale": [92, 154, 177, 242, 522, 857], "halgren": [92, 154, 242, 522], "sulci": [92, 154, 220, 242], "nomenclatur": [92, 154, 213, 242], "679": [92, 192, 207, 229], "sine": [93, 219, 254, 710, 718], "everi": [93, 101, 111, 125, 133, 140, 143, 150, 167, 171, 174, 194, 201, 202, 203, 216, 239, 257, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 346, 456, 464, 472, 473, 475, 476, 508, 555, 557, 571, 572, 581, 600, 647, 648, 649, 658, 659, 661, 682, 683, 684, 685, 686, 695, 698, 834, 854, 855], "significantli": [94, 95, 98, 224, 227, 232, 233, 239, 269, 270, 273, 276, 277, 278, 682, 683, 685, 686, 856], "permutation_cluster_test": [94, 224, 227, 228, 686, 865, 875], "1332": [94, 95, 144, 165, 168, 226, 227, 228], "epochs1": [94, 232, 430], "condition1": [94, 232], "epochs2": [94, 232, 430], "condition2": [94, 232], "t_ob": [94, 225, 226, 232, 682, 684, 685, 875], "cluster_p_valu": [94, 226, 227, 228, 232, 233, 234], "n_permut": [94, 98, 110, 224, 225, 226, 227, 228, 229, 233, 234, 682, 683, 684, 685, 686], "tail": [94, 110, 150, 224, 226, 227, 228, 229, 232, 239, 260, 682, 683, 684, 685, 686, 770, 801, 875], "out_typ": [94, 110, 224, 226, 227, 228, 682, 683, 685, 686, 875], "stat_fun": [94, 110, 111, 224, 225, 226, 227, 228, 229, 232, 233, 234, 674, 682, 683, 685, 686], "000227": 94, "167093": 94, "3464": 94, "3656": 94, "537": [94, 229], "673": [94, 118, 128, 193, 229], "813": [94, 119, 167, 173, 194, 229], "951": [94, 161, 163, 179, 186], "4018": 94, "erf": [94, 115, 126, 190, 197, 200, 229, 242, 555, 785, 787, 841, 875], "i_c": 94, "cluster_stats_evok": [94, 100], "discoveri": [95, 228, 242, 679], "bonferroni_correct": [95, 224, 865, 875], "fdr_correct": [95, 99, 224, 228, 865], "pval": [95, 228, 673, 679, 682, 683, 685, 686], "ttest_1samp": [95, 224, 688], "n_test": [95, 684], "threshold_uncorrect": 95, "ppf": [95, 209, 224, 226, 229, 232, 233, 585, 682, 683, 685, 686], "reject_bonferroni": 95, "pval_bonferroni": 95, "threshold_bonferroni": 95, "reject_fdr": 95, "pval_fdr": 95, "indep": [95, 679], "threshold_fdr": 95, "xmin": 95, "xmax": 95, "hline": [95, 140, 264, 265, 776], "uncorrect": [95, 224], "bonferroni": [95, 446, 475, 476, 673, 684, 875], "923": [95, 100, 207], "fdr_stats_evok": [95, 100], "generalis": 97, "tradit": [97, 142, 206, 210, 722, 723, 725, 726, 766], "predictor": [97, 140, 224, 554, 598, 681], "inapplic": 97, "rerp": [97, 242, 681], "smith": [97, 124, 224, 225, 242, 384, 681, 682, 683, 685, 686], "kuta": [97, 242, 681], "jona": [97, 99, 126, 194, 229, 242, 682, 683, 685, 686, 875], "sassenhagen": [97, 99, 126, 194, 229, 242, 682, 683, 685, 686, 875], "linear_regression_raw": [97, 100, 865, 875], "rerf": 97, "param": [97, 111, 407, 408, 410, 411, 413, 414, 415, 416, 417, 419, 420, 421, 544, 556, 622, 875], "permutation_t_test": [98, 224, 865], "temporal_mask": 98, "logical_and": [98, 112], "50000": 98, "p_valu": [98, 224, 229, 446, 475, 476, 684], "significant_sensor": 98, "significant_sensors_nam": 98, "49999": 98, "0243": [98, 141, 168], "1323": [98, 168, 207], "1613": [98, 168], "1643": [98, 168], "2522": [98, 168], "2622": [98, 168], "2632": [98, 168], "2642": [98, 168], "2643": [98, 168], "stats_pick": 98, "cbar_fmt": [98, 107, 259, 262, 263, 264, 265, 271, 407, 414, 475, 476, 554, 555, 695, 697, 699, 774, 781, 785, 794, 797, 802, 875], "sensor_permutation_test": [98, 100], "psycholinguist": [99, 224], "st\u00e9phane": [99, 225, 242, 390, 851], "dufau": [99, 225, 242, 390, 851], "grainger": [99, 225, 242, 390, 851], "katherin": [99, 225, 242, 390, 724, 727, 851], "midglei": [99, 225, 242, 390, 851], "phillip": [99, 140, 225, 242, 385, 390, 851, 875], "holcomb": [99, 225, 242, 390, 851], "pictur": [99, 225, 242, 272, 390, 851], "snapshot": [99, 171, 225, 242, 390, 812, 834, 851, 875], "megastudi": [99, 225, 242, 390, 851], "psycholog": [99, 225, 242, 390, 851], "1887": [99, 225, 242, 390, 851], "1897": [99, 225, 242, 390, 851], "0956797615603934": [99, 225, 242, 390, 851], "matt": [99, 242, 875], "davi": [99, 242], "ford": [99, 242], "friedmann": [99, 242], "pulverm\u00fcl": [99, 242], "william": [99, 193, 242, 413], "marslen": [99, 242], "wilson": [99, 242], "1383": [99, 242], "1400": [99, 242], "2006": [99, 177, 193, 208, 242, 262, 263, 533, 583, 652, 657, 724, 727], "2005": [99, 161, 208, 242, 428, 533, 566, 583, 652, 655, 657, 854], "048": [99, 139, 141, 148, 168, 182, 216, 221, 225, 242, 709, 711, 721, 725], "tal": [99, 118, 124, 242, 483, 490, 875], "linzen": [99, 118, 875], "pd": [99, 110, 135, 142, 150, 189, 190, 208], "kiloword": [99, 142, 213, 225, 865], "kword_metadata": [99, 142, 225], "epo": [99, 139, 142, 171, 225, 254, 262, 263, 606, 875], "read_epoch": [99, 139, 142, 225, 854, 857, 865, 875], "visualcomplex": [99, 142], "film": [99, 142, 225, 863], "783710": [99, 142], "cent": [99, 142], "141553": [99, 142], "shot": [99, 142], "600033": [99, 142], "cold": [99, 142], "657457": [99, 142], "945661": [99, 142], "characterist": [99, 150, 200, 201, 242, 262, 263, 399, 430, 442, 574, 830], "concret": [99, 142, 143], "imagin": [99, 110, 204], "df": [99, 110, 139, 144, 190, 213, 224, 225, 226, 232, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 538, 682, 685, 695, 697, 698, 699], "cut": [99, 110, 111, 179, 204, 239, 254, 262, 263, 264, 265, 409, 418, 443, 445, 475, 476, 567, 568, 576, 579, 583, 587, 842, 860, 875], "split_legend": [99, 229, 766], "percentil": [99, 133, 134, 135, 145, 262, 263, 269, 270, 272, 273, 276, 277, 278, 475, 476, 731, 761, 766, 772, 795, 800, 805, 806, 875], "gfp": [99, 111, 126, 141, 143, 149, 161, 165, 190, 229, 262, 263, 264, 265, 530, 766, 773, 776, 782, 799, 830, 854, 875], "7424": 99, "plot_evoked_imag": [99, 865, 875], "null": [99, 281, 433, 677, 875], "hypothesi": [99, 171, 225, 673, 677, 679, 684, 863], "colour": [99, 175, 875], "palett": [99, 110, 144], "dark": [99, 133, 171, 262, 263, 475, 476, 555, 742, 772, 789, 795, 875], "reject_h0": 99, "fdr_pval": 99, "plot_imag": [99, 126, 141, 142, 145, 149, 165, 197, 199, 209, 225, 262, 263, 264, 265, 875], "sensor_regress": [99, 100], "auto_examples_stat": 100, "csd_fourier": [101, 696, 700, 701, 702, 704, 705, 865, 875], "csd_multitap": [101, 696, 700, 701, 702, 703, 704, 713, 865, 875], "core": [101, 143, 165, 167, 170, 188, 219, 242, 262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 280, 352, 353, 355, 357, 410, 417, 420, 423, 424, 450, 463, 465, 475, 476, 514, 517, 518, 528, 529, 538, 539, 560, 567, 568, 583, 635, 643, 646, 647, 648, 660, 682, 683, 684, 685, 686, 694, 697, 699, 700, 701, 702, 703, 704, 705, 713, 714, 722, 723, 724, 725, 726, 774, 777, 796, 832, 833, 834, 841, 856, 875], "clariti": [101, 861], "722": [101, 193, 229, 242, 711, 721, 722, 725], "adapt": [101, 111, 165, 189, 206, 221, 224, 242, 262, 263, 264, 265, 295, 296, 412, 446, 447, 475, 476, 528, 529, 555, 583, 697, 699, 702, 705, 711, 713, 721, 738, 774, 834, 840, 851, 856, 875], "csd_fft": 101, "csd_mt": 101, "convolv": [101, 109, 200, 224, 239, 413, 420], "600hz": 101, "enough": [101, 157, 179, 201, 202, 203, 205, 208, 213, 224, 239, 259, 262, 263, 264, 265, 271, 303, 304, 310, 407, 414, 426, 475, 476, 554, 555, 569, 690, 695, 697, 698, 699, 751, 759, 766, 772, 774, 776, 778, 781, 782, 785, 789, 792, 794, 795, 796, 797, 798, 802, 804, 838, 856, 857, 875], "10th": 101, "greatli": 101, "minim": [101, 140, 168, 200, 219, 239, 262, 263, 358, 415, 430, 565, 681, 723, 726, 742, 832, 854, 857], "csd_wav": 101, "crossspectraldens": [101, 288, 295, 315, 432, 700, 701, 702, 703, 704, 705, 706, 712, 715, 768, 865, 875], "trick": [101, 198, 239, 242, 684, 838, 875], "comma": [101, 254, 834, 875], "plot_dict": [101, 238], "compute_csd": [101, 104], "taper": [102, 112, 262, 263, 264, 265, 412, 420, 446, 475, 476, 528, 529, 697, 699, 702, 705, 707, 711, 713, 721, 723, 725, 726, 774, 875], "prolat": [102, 237, 242, 262, 263, 264, 265, 475, 476, 697, 699, 707, 713], "spheroid": [102, 237, 242, 262, 263, 264, 265, 475, 476, 697, 699, 707, 713], "sequenc": [102, 136, 242, 254, 262, 263, 264, 265, 475, 476, 672, 697, 699, 707, 742, 774, 851, 857], "compute_source_psd_epoch": [102, 104, 528, 865, 875], "n_epochs_us": 102, "psd_avg": 102, "set_xlim": [102, 111, 150, 204], "auto_examples_time_frequ": 104, "source_power_spectrum_opm": [104, 107], "595": [104, 107, 194, 229, 242], "326": [104, 107, 110, 168, 194, 207], "time_frequency_erd": [104, 110, 875], "148": [104, 110, 168, 194, 224, 228, 229], "time_frequency_global_field_pow": [104, 111], "908": [104, 111, 207, 229], "time_frequency_simul": [104, 112], "source_label_time_frequ": [104, 105], "987": [104, 105, 229], "source_space_time_frequ": [104, 108], "607": [104, 229], "source_power_spectrum": [104, 106], "temporal_whiten": [104, 109], "former": [105, 141, 228, 352, 555, 856, 875], "latter": [105, 141, 150, 167, 407, 410, 411, 413, 414, 415, 416, 417, 419, 420, 421, 556, 857], "source_induced_pow": [105, 865, 875], "epochs_induc": 105, "subtract_evok": [105, 111, 202, 262, 263, 598, 875], "this_epoch": 105, "inter": [105, 133, 242, 259, 262, 263, 264, 265, 271, 280, 407, 414, 431, 475, 476, 554, 555, 569, 647, 695, 697, 699, 722, 723, 725, 726, 759, 774, 781, 785, 794, 797, 802, 804], "itc": [105, 722, 723, 724, 725, 726, 727], "baseline_mod": [105, 538, 539], "compute_source_psd": [106, 107, 529, 865, 875], "100hz": 106, "2048": [106, 109, 112, 131, 262, 263, 264, 265, 406, 475, 476, 528, 796], "psd_dspm": 106, "neuromag": [107, 155, 157, 159, 165, 167, 182, 184, 198, 205, 208, 213, 214, 215, 254, 255, 260, 262, 263, 264, 265, 267, 272, 318, 427, 448, 475, 476, 486, 492, 499, 505, 583, 605, 630, 697, 699, 772, 775, 780, 795, 830, 846, 851, 857, 860, 875], "welch": [107, 221, 237, 238, 239, 242, 262, 263, 264, 265, 475, 476, 697, 699, 714, 796, 875], "next_fast_len": 107, "src_fname": [107, 232, 233, 234], "vv_fname": 107, "squid_resting_st": 107, "vv_erm_fnam": 107, "squid_empty_room": 107, "vv_trans_fnam": 107, "opm_fnam": 107, "opm_resting_state_raw": 107, "opm_erm_fnam": 107, "opm_empty_room_raw": 107, "opm_tran": 107, "opm_coil_def_fnam": 107, "vv": 107, "simplifi": [107, 178, 200, 242, 254, 262, 263, 264, 265, 475, 476, 854, 855, 875], "housekeep": [107, 210], "raw_erm": [107, 127, 183, 190, 850], "new_sfreq": 107, "nyquist": [107, 200, 201, 875], "meg2233": 107, "meg1842": 107, "hold": [107, 190, 221, 224, 262, 263, 264, 265, 428, 475, 476, 574, 583, 693, 776, 796, 798, 830, 857, 863], "61999": 107, "60999": 107, "dist": [107, 155, 156, 209, 220, 254, 268, 275, 280, 363, 426, 459, 589, 665, 666, 667, 669, 670, 860], "make_bem_solut": [107, 157, 190, 363, 426, 457, 512, 518, 519, 602, 603, 632, 634, 823, 850, 857, 865, 875], "169022": 107, "169992": 107, "202": [107, 168, 224, 225, 228, 229, 231, 860, 875], "2052": 107, "995623": 107, "029776": 107, "088592": 107, "062622": 107, "916188": 107, "395825": 107, "069381": 107, "399641": 107, "914042": 107, "993107": 107, "074371": 107, "090590": 107, "079171": 107, "995577": 107, "050589": 107, "086427": 107, "057412": 107, "994603": 107, "691": [107, 229], "692": [107, 143, 229, 239], "424": [107, 207, 224, 229], "percentag": [107, 203, 262, 263, 557, 651, 652, 653, 654, 655, 657, 731, 771, 875], "freq_band": [107, 136], "topo": [107, 113, 141, 149, 209, 238, 262, 263, 745, 755, 766, 803, 863, 875], "stc_psd": [107, 528], "sensor_psd": [107, 528], "return_sensor": [107, 528, 529], "topo_norm": 107, "keepdim": [107, 136], "stc_norm": 107, "3660": 107, "1969": [107, 193], "014611": 107, "18765e": 107, "291": [107, 168, 224, 229], "34378": 107, "07671e": 107, "3720": 107, "1698": 107, "007069": 107, "0841e": 107, "46031": 107, "26253e": 107, "coverag": 107, "worthwhil": [107, 150, 203], "plot_band": 107, "inferno": [107, 135, 224], "cau": 107, "show_trac": [107, 125, 134, 269, 270, 273, 276, 277, 278, 742, 800, 805, 875], "fig_alpha": 107, "brain_alpha": [107, 270, 276, 278, 805], "7045685": 107, "96394224": 107, "07428314": 107, "profil": [107, 170, 210, 694, 832, 834], "beneath": 107, "fig_beta": 107, "brain_beta": 107, "18935281": 107, "33488802": 107, "88328023": 107, "fig_beta_opm": 107, "brain_beta_opm": 107, "28867831": 107, "68102302": 107, "87342874": 107, "source_band_induced_pow": [108, 865, 875], "use_fft": [108, 110, 238, 420, 538, 539, 701, 704, 720, 722, 723, 725, 726], "induced_power_": 108, "608": [108, 176], "proj_fnam": [109, 190], "20000": 109, "innov": 109, "d_": 109, "lfilter": 109, "regener": [109, 262, 263, 875], "r_": [109, 652, 657, 857], "dummi": [109, 123, 219, 234], "nfft": [109, 221], "written": [110, 170, 171, 174, 207, 215, 258, 301, 305, 439, 440, 474, 475, 476, 617, 623, 820, 825, 828, 841, 850, 863, 875], "desynchron": [110, 238, 242, 851], "conceptu": [110, 150, 200, 203, 242], "ersp": [110, 875], "perturb": 110, "goal": [110, 133, 136, 834, 852, 856, 863], "c3": [110, 126, 143, 158, 498], "35hz": 110, "customari": [110, 857], "klotzsch": [110, 875], "cb": 110, "mpg": 110, "twoslopenorm": 110, "seaborn": [110, 144, 208], "sn": [110, 144, 208], "tfr_multitap": [110, 112, 238, 420, 722, 723, 724, 725, 727, 865, 875], "permutation_cluster_1samp_test": [110, 224, 226, 685, 865, 875], "pcluster_test": 110, "strip": [110, 242], "961": [110, 159, 227, 229], "suitabl": [110, 145, 158, 160, 226, 228, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 304, 351, 370, 406, 431, 462, 475, 476, 498, 512, 682, 695, 697, 698, 699, 830, 850, 851, 857, 863], "cnorm": [110, 259, 262, 263, 264, 265, 271, 407, 414, 475, 476, 554, 555, 695, 697, 699, 759, 774, 781, 785, 794, 797, 802, 804, 875], "asymmetr": [110, 757], "thing": [110, 140, 143, 144, 150, 159, 170, 171, 180, 187, 198, 200, 213, 221, 229, 232, 234, 310, 475, 476, 834, 854, 875], "rdbu": 110, "equal": [110, 139, 146, 147, 148, 150, 164, 167, 171, 174, 175, 179, 197, 200, 215, 216, 232, 234, 257, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 284, 295, 296, 315, 351, 352, 356, 357, 366, 367, 368, 407, 414, 420, 430, 432, 450, 451, 464, 470, 472, 473, 475, 476, 492, 515, 522, 533, 538, 539, 554, 555, 567, 572, 581, 588, 589, 614, 651, 676, 677, 682, 683, 685, 686, 687, 689, 690, 695, 697, 698, 699, 714, 759, 760, 766, 770, 773, 774, 775, 776, 778, 781, 782, 797, 798, 802, 804, 830, 856, 857, 861, 875], "promin": [110, 142, 197, 209, 239, 353, 354, 355], "extrem": [110, 141, 239, 264, 265, 295, 296, 319, 352, 356, 357, 366, 367, 368, 407, 414, 415, 450, 451, 470, 472, 473, 533, 682, 683, 685, 686, 782], "vcenter": 110, "step_down_p": [110, 682, 683, 685, 686], "buffer_s": [110, 224, 228, 229, 232, 233, 234, 525, 682, 683, 685, 686], "tfr_ev": 110, "gridspec_kw": [110, 125, 175, 209], "width_ratio": [110, 175, 209], "stack": [110, 140, 221, 232, 642, 737, 739, 838, 839, 842], "mask_styl": [110, 264, 265, 695, 778], "set_yscal": 110, "724718": 110, "552076": 110, "183231": 110, "309": [110, 168, 224, 229, 242, 587, 724, 727], "344": [110, 143, 168, 193], "347": [110, 168, 193, 229, 875], "528367": 110, "706422": 110, "337": [110, 168, 207, 224], "321": [110, 168, 200, 207, 229], "327": [110, 168, 207, 229], "581589": 110, "346448": 110, "324": [110, 168, 224], "315": [110, 168, 875], "349": [110, 168, 193, 224, 229, 242, 857], "713872": 110, "754759": 110, "360704": 110, "338": [110, 168, 229], "318": [110, 168, 229], "328": [110, 111, 119, 161, 168, 224, 242, 264, 265, 352, 782, 854], "992503": 110, "416450": 110, "342": [110, 111, 119, 161, 168, 207, 224, 242, 264, 265, 352, 782, 854], "044340": 110, "070444": 110, "323": [110, 168, 207, 208, 229], "epochstfr": [110, 112, 290, 526, 695, 706, 717, 725, 726, 728, 865, 875], "datafram": [110, 139, 146, 147, 148, 150, 164, 189, 190, 208, 213, 225, 237, 256, 257, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 431, 475, 476, 610, 681, 695, 697, 698, 699, 857, 875], "to_data_fram": [110, 135, 139, 144, 148, 213, 225, 256, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 695, 697, 698, 699, 857, 875], "0000": [110, 834], "473093": 110, "474571": 110, "764021": 110, "9875": 110, "491659": 110, "480088": 110, "762445": 110, "9750": [110, 875], "500872": 110, "469376": 110, "749421": 110, "9625": 110, "500605": 110, "449373": 110, "728686": 110, "9500": 110, "515911": 110, "443439": 110, "719536": 110, "lineplot": [110, 144], "confid": [110, 111, 141, 144, 150, 165, 175, 205, 260, 267, 555, 674, 697, 699, 766, 787, 855, 875], "long_format": [110, 144, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 695, 697, 698, 699, 875], "freq_bound": 110, "delta": [110, 136, 200, 262, 263, 264, 265, 472, 475, 476, 538, 697, 699, 774], "theta": [110, 111, 136, 262, 263, 264, 265, 475, 476, 697, 699, 774], "freq_bands_of_interest": 110, "remove_unused_categori": 110, "reorder_categori": 110, "facetgrid": 110, "margin_titl": 110, "n_boot": 110, "axline_kw": 110, "dash": [110, 139, 149, 171, 201, 204, 208, 209, 216, 259, 262, 263, 264, 265, 475, 476, 697, 699, 766, 767, 793, 796, 875], "set_axis_label": 110, "col_templ": 110, "col_nam": [110, 267, 860], "row_templ": 110, "row_nam": [110, 266, 860], "add_legend": [110, 742], "df_mean": 110, "queri": [110, 139, 144, 148, 164, 217, 225, 237, 257, 262, 263, 434, 698], "groupbi": [110, 144, 150, 225], "reset_index": [110, 144], "col_ord": 110, "violinplot": [110, 144], "deep": [110, 136, 144, 157, 180, 200, 242, 262, 263, 264, 265, 286, 407, 408, 410, 411, 413, 414, 415, 416, 417, 419, 420, 421, 475, 476, 552, 553, 556, 695, 697, 698, 699, 739, 742, 758, 857, 875], "hue_ord": 110, "gert": [110, 242], "pfurtschel": [110, 242], "fernando": [110, 242, 850], "lope": [110, 242, 850], "da": [110, 242, 850], "silva": [110, 242, 850], "principl": [110, 201, 224, 229, 242, 852, 857], "1842": [110, 168, 242], "1857": [110, 242], "00141": [110, 242], "bernhard": [110, 242, 470], "graimann": [110, 242], "jane": [110, 242], "huggin": [110, 242], "simon": [110, 242, 875], "levin": [110, 242], "ecog": [110, 113, 133, 134, 137, 138, 164, 168, 213, 219, 224, 242, 262, 263, 264, 265, 267, 273, 275, 309, 310, 319, 368, 370, 379, 436, 440, 475, 476, 490, 552, 553, 580, 625, 640, 690, 695, 697, 698, 699, 742, 758, 798, 810, 812, 830, 831, 841, 857, 875], "00697": [110, 242], "exposur": [110, 203, 242, 834], "tone": [110, 165, 242, 851], "1993": [110, 177, 242], "90110": [110, 242], "rectifi": 111, "magniud": 111, "uncertainti": [111, 237, 242, 262, 263, 264, 265, 475, 476, 697, 699, 707, 713, 841], "importantli": [111, 112, 199, 850], "hari": [111, 112, 124, 177, 242, 875], "neuromagnet": [111, 203, 242, 555], "1997": [111, 179, 204, 205, 242, 295, 296, 648, 711, 721, 722, 725, 857], "s0166": [111, 242], "2236": [111, 242], "10065": [111, 242], "bradlei": [111, 242], "efron": [111, 242], "trevor": [111, 242], "hasti": [111, 242], "institut": [111, 242, 724, 727], "mathemat": [111, 150, 175, 198, 200, 208, 224, 242, 503, 522, 682, 724, 727, 834, 850, 857, 875], "monograph": [111, 242], "cambridg": [111, 150, 242, 352], "univers": [111, 242, 253, 352, 446, 851, 856, 862, 875], "york": [111, 200, 242, 253, 446, 862, 875], "isbn": [111, 150, 200, 221, 242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 295, 296, 352, 475, 476, 677, 695, 698], "14989": [111, 242], "web": [111, 145, 203, 239, 242, 272, 543, 750, 863, 875], "stanford": [111, 242], "casi": [111, 242], "bootstrap_confidence_interv": [111, 865], "iter_freq": 111, "frequency_map": 111, "job": [111, 201, 203, 254, 262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 280, 352, 353, 355, 357, 409, 410, 412, 413, 417, 418, 419, 420, 423, 424, 445, 446, 447, 450, 463, 465, 475, 476, 514, 517, 518, 528, 529, 538, 539, 560, 567, 568, 635, 643, 646, 647, 648, 660, 682, 683, 684, 685, 686, 697, 699, 700, 701, 702, 703, 704, 705, 713, 714, 722, 723, 724, 725, 726, 727, 774, 777, 796, 875], "skip": [111, 133, 143, 148, 164, 165, 169, 171, 189, 200, 239, 254, 340, 495, 528, 571, 633, 834, 850, 860, 875], "option": [111, 123, 133, 134, 139, 141, 149, 150, 155, 160, 161, 164, 165, 166, 167, 170, 171, 172, 177, 187, 194, 197, 200, 203, 208, 209, 213, 215, 216, 219, 224, 225, 228, 234, 237, 239, 259, 260, 262, 263, 264, 265, 269, 270, 271, 272, 273, 275, 276, 277, 278, 282, 283, 301, 307, 310, 352, 362, 366, 369, 382, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 428, 438, 439, 440, 445, 446, 447, 449, 451, 470, 472, 473, 475, 476, 488, 490, 496, 514, 518, 522, 523, 524, 525, 526, 528, 529, 533, 535, 537, 538, 539, 547, 552, 554, 555, 556, 565, 566, 567, 568, 569, 574, 583, 603, 613, 615, 625, 660, 665, 669, 680, 682, 683, 685, 686, 689, 690, 695, 697, 698, 699, 732, 742, 758, 759, 760, 766, 770, 772, 774, 776, 778, 781, 782, 785, 789, 792, 794, 795, 796, 797, 798, 800, 802, 804, 805, 806, 808, 840, 842, 856, 857, 860, 872, 875], "apply_hilbert": [111, 112, 113, 135, 166, 262, 263, 264, 265, 475, 476, 875], "269399": 111, "897": 111, "077": 111, "307": [111, 168, 207, 224], "1202": 111, "emerg": 111, "bootstrap": [111, 141, 171, 674, 697, 699, 766, 875], "domin": [111, 202, 208, 239, 269, 270, 273, 276, 277, 278, 441, 555], "helper": [111, 133, 224, 310, 328, 864], "winter_r": 111, "freq_nam": 111, "ci_low": 111, "ci_up": 111, "dhz": 111, "xy": [111, 113, 135, 180, 319, 427, 743, 812, 857], "horizontalalign": [111, 133, 200, 204], "xycoord": 111, "821": [111, 229], "trade": [112, 200, 723, 726], "bharadwaj": [112, 124, 242, 875], "berkelei": [112, 113, 253, 862], "tfr_stockwel": [112, 238, 722, 723, 724, 725, 726, 865, 875], "tfr_array_morlet": [112, 723, 724, 725, 726, 727, 865, 875], "centers_to_edg": [112, 865, 875], "sim0001": 112, "sim0002": 112, "1024": [112, 133, 682, 683, 685, 686], "burst": [112, 182, 197, 851], "ramp": [112, 200], "logical_or": 112, "on_tim": 112, "han": [112, 577, 647, 648, 722, 723, 725, 726, 875], "sin50hz": 112, "4000": [112, 165, 205, 254, 498], "41160": 112, "41159": 112, "time_bandwidth": [112, 420, 723, 726], "sim": [112, 530, 857], "nmore": 112, "1025": [112, 143], "balanc": [112, 199, 200, 224, 228, 651, 676, 875], "strictli": [112, 150, 160, 167, 168, 177, 200, 202, 288, 742, 875], "regard": [112, 206, 221, 229, 238, 857, 875], "recoverd": 112, "lossless": 112, "disregard": 112, "numer": [112, 155, 161, 200, 203, 213, 224, 229, 268, 275, 351, 373, 442, 467, 475, 476, 555, 672, 682, 683, 685, 686, 708, 854, 856, 857, 863, 875], "all_n_cycl": 112, "isinst": [112, 139, 257, 474], "exagger": 112, "wise": [112, 161, 197, 201, 264, 265, 416, 684, 830, 875], "epochs_hilb": 112, "tfr_data": 112, "413": [112, 177, 194, 224, 242], "3301": 112, "255": [112, 125, 159, 168, 224, 228, 229, 239, 269, 270, 273, 276, 277, 278, 742, 761, 800, 805, 806], "avgpow": 112, "avg_pow": [112, 722, 723], "mesh": [112, 155, 159, 160, 174, 268, 270, 276, 278, 306, 307, 358, 406, 462, 463, 626, 742, 801, 805, 828, 840, 875], "electrocorticographi": [113, 133, 135, 242, 262, 263, 264, 265, 475, 476, 552, 553, 695, 697, 698, 699, 851, 857, 875], "scatterplot": 113, "pyvista": [113, 133, 170, 180, 260, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 694, 742, 744, 752, 756, 758, 770, 798, 800, 801, 805, 807, 812, 832, 833, 852, 863, 875], "clickableimag": [113, 865], "own": [113, 125, 150, 176, 182, 205, 216, 226, 229, 262, 263, 264, 265, 269, 272, 273, 277, 319, 473, 475, 476, 583, 742, 773, 800, 834, 837, 838, 854, 856, 860], "dirnam": [113, 123, 158, 170], "pathlib": [113, 121, 143, 156, 169, 171, 272, 374, 375, 376, 379, 380, 382, 387, 390, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 518, 611, 830, 875], "noqa": [113, 115, 169, 204, 224], "f401": 113, "snapshot_brain_montag": [113, 135, 807, 865, 875], "misc_path": [113, 133, 134, 181], "ecog_data_fnam": 113, "sample_ecog_ieeg": [113, 133], "click": [113, 131, 133, 141, 149, 150, 155, 160, 180, 190, 198, 203, 215, 216, 238, 259, 262, 263, 264, 265, 271, 277, 278, 407, 414, 475, 476, 554, 555, 695, 697, 699, 743, 755, 763, 772, 773, 774, 776, 778, 780, 781, 785, 789, 794, 795, 796, 797, 798, 802, 803, 804, 806, 832, 834, 840, 852, 863, 875], "layout_path": 113, "__file__": [113, 121, 169, 170, 171], "layout_nam": 113, "custom_layout": 113, "lout": [113, 169, 311, 324, 325, 336, 875], "coreg": [113, 133, 134, 156, 157, 158, 159, 310, 466, 469, 758, 850, 857, 865, 875], "estimate_head_mri_t": [113, 133, 134, 865, 875], "sample_ecog": [113, 133], "apply_tran": [113, 133, 134, 155, 159, 181, 310, 875], "conjunct": [113, 224, 257, 262, 409, 863], "xy_pt": [113, 135], "beta_pow": 113, "fig2": [113, 150, 169], "coolwarm": 113, "cbar": [113, 125, 145, 194, 224, 761], "set_axis_off": [113, 135, 171], "bbox_inch": [113, 875], "tight": [113, 150, 160, 193, 264, 265, 718, 776, 778, 875], "mous": [113, 190, 215, 259, 260, 262, 263, 264, 265, 271, 407, 414, 466, 475, 476, 554, 555, 695, 697, 699, 743, 756, 758, 770, 772, 773, 774, 776, 777, 778, 781, 785, 794, 796, 797, 802, 852, 875], "imread": [113, 171], "plot_click": [113, 743], "to_layout": [113, 743], "got": [113, 143, 170, 198, 203, 221, 837, 875], "read_layout": [113, 169, 311, 865, 875], "3d_to_2d": [113, 128], "scalarmapp": 114, "low_contrast": [114, 124, 133, 134, 180, 189, 269, 270, 273, 276, 277, 278, 742, 800, 805], "rh_data": [114, 174, 273, 276], "rh_vertno": [114, 174, 273, 276, 658], "recon": [114, 134, 154, 159, 307, 364, 541, 815, 875], "brodmann": 114, "ba44": 114, "add_head": [114, 155, 189, 742, 875], "seghead": [114, 155, 156, 157, 160, 171, 175, 181, 182, 254, 260, 742, 758, 770], "read_tran": [114, 116, 155, 159, 177, 190, 275, 458, 660, 829, 865, 875], "add_sensor": [114, 133, 135, 189, 209, 742, 875], "role": [114, 164, 169, 176, 185, 186, 259, 260, 264, 266, 267, 273, 362, 521, 522, 533, 604, 613, 615, 628, 643, 742, 751, 758, 770, 810, 834, 856], "sample_audvis_set1": 114, "ylorrd": 114, "add_dipol": [114, 742, 875], "1e8": 114, "static": [114, 133, 179, 208, 213, 242, 254, 261, 384, 731, 732, 832, 860, 875], "add_ax": [114, 125, 145], "833": [114, 128, 207], "embed": [115, 155, 171, 199, 200, 272, 834, 841, 875], "simplic": [115, 176, 194, 200, 224, 228, 854, 875], "instal": [115, 133, 134, 135, 145, 154, 160, 170, 180, 254, 262, 263, 264, 265, 280, 301, 305, 336, 381, 384, 406, 409, 413, 418, 445, 446, 447, 475, 476, 698, 834, 842, 854, 855, 858, 875], "order_func": 115, "spectral_embed": 115, "rbf_kernel": 115, "this_data": 115, "good_pick": 115, "bad_pick": [115, 210], "plt_time": 115, "overlay_tim": [115, 126, 262, 263, 773, 875], "renaud": [115, 242], "keriven": [115, 242], "maureen": [115, 242], "clerc": [115, 242], "1061": [115, 242], "2037139": [115, 242], "487": [115, 128, 150, 166, 173, 229], "channel_epochs_imag": [115, 128], "135": [116, 123, 150, 157, 168, 194, 204, 205, 206, 242, 275, 857], "eeg_on_scalp": [116, 128], "upon": [117, 143, 156, 169, 171, 262, 263, 272, 413, 475, 476, 743, 759, 812, 834, 840, 856, 875], "hosaka": [117, 242, 759, 875], "flow": [117, 177, 242, 759, 875], "underneath": [117, 759, 875], "poor": [117, 197, 200, 209, 759, 875], "man": [117, 150, 171, 242, 759], "hidehiro": [117, 242, 759], "electrocardiologi": [117, 242, 759], "1976": [117, 242, 759], "s0022": [117, 242, 759], "0736": [117, 242, 759], "80041": [117, 242, 759], "sheraz": [117, 124, 127, 242, 570, 873, 875], "khan": [117, 124, 127, 242, 570, 873, 875], "khansheraz": 117, "plot_arrowmap": [117, 149, 865, 875], "evoked_mag": 117, "evoked_grad": 117, "topoplot": [117, 143, 169, 203, 239, 759, 762, 875], "max_time_idx": 117, "latitud": [117, 759], "longitud": [117, 159, 759], "radial": [117, 157, 528, 529, 539, 636, 759], "cartesian": [117, 174, 177, 759, 857, 860], "info_from": [117, 759, 875], "info_to": [117, 759], "raw_ctf": 117, "raw_ctf_info": 117, "evoked_arrowmap": [117, 128], "engeman": 118, "miko\u0142aj": [118, 862, 875], "magnuski": [118, 862, 875], "mmagnuski": [118, 875], "swp": [118, 253, 862], "pl": 118, "20m": 118, "regularli": [118, 165, 167], "multilin": [118, 875], "all_tim": 118, "rm": [118, 149, 150, 187, 221, 259, 262, 263, 264, 265, 273, 407, 414, 475, 476, 530, 554, 555, 695, 776, 780, 781, 785, 797, 804, 857, 875], "drawn": [118, 149, 216, 224, 259, 262, 263, 264, 265, 270, 271, 276, 278, 407, 414, 475, 476, 554, 555, 569, 647, 648, 695, 697, 699, 759, 760, 765, 766, 774, 775, 778, 780, 781, 785, 794, 796, 797, 798, 802, 804, 805, 875], "spectral_r": 118, "circl": [118, 133, 160, 169, 220, 259, 262, 263, 264, 265, 271, 310, 407, 414, 475, 476, 554, 555, 569, 695, 697, 699, 747, 759, 764, 766, 774, 776, 778, 781, 782, 785, 792, 794, 796, 797, 798, 802, 804, 830, 834, 875], "extrapol": [118, 149, 209, 259, 262, 263, 264, 265, 271, 407, 414, 475, 476, 554, 555, 569, 695, 697, 699, 759, 774, 781, 785, 794, 797, 802, 804, 875], "box": [118, 133, 160, 188, 259, 262, 263, 264, 265, 271, 311, 319, 336, 407, 414, 475, 476, 554, 555, 569, 695, 697, 699, 738, 759, 774, 776, 778, 780, 781, 785, 794, 797, 802, 804, 840, 875], "stretch": [118, 199, 742], "beyond": [118, 143, 165, 189, 234, 259, 262, 263, 264, 265, 271, 407, 414, 475, 476, 508, 554, 555, 569, 690, 695, 697, 699, 738, 759, 774, 781, 785, 794, 795, 797, 802, 804], "axes_row": 118, "extr": 118, "margin": [118, 125, 698, 765, 766], "exceed": [118, 183, 205, 208, 226, 262, 555, 581, 698], "mask_param": [118, 229, 259, 262, 263, 264, 265, 407, 414, 475, 476, 554, 695, 697, 699, 759, 774, 781, 797, 802, 804], "markers": [118, 229, 259, 262, 263, 264, 265, 407, 414, 475, 476, 554, 695, 697, 699, 759, 774, 781, 797, 802, 804], "markerfacecolor": [118, 259, 262, 263, 264, 265, 407, 414, 475, 476, 554, 695, 697, 699, 759, 774, 781, 797, 802, 804], "_time": 118, "significant_channel": 118, "_channel": 118, "in1d": 118, "_ch": 118, "perhap": [118, 200, 205, 213, 224], "imped": [118, 200, 242, 875], "image_interp": [118, 259, 262, 263, 264, 265, 271, 407, 414, 475, 476, 554, 555, 569, 695, 697, 699, 759, 774, 781, 785, 794, 797, 802, 804, 875], "cubic": [118, 259, 262, 263, 264, 265, 271, 407, 414, 475, 476, 554, 555, 569, 695, 697, 699, 742, 759, 774, 781, 785, 794, 797, 802, 804, 875], "smoothest": 118, "voronoi": [118, 259, 262, 263, 264, 265, 271, 407, 414, 475, 476, 554, 555, 569, 695, 697, 699, 759, 774, 781, 785, 794, 797, 802, 804, 875], "debug": [118, 161, 170, 254, 374, 375, 376, 379, 380, 387, 390, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 642, 694, 737, 740, 834, 854], "unalt": [118, 359], "properli": [118, 133, 135, 154, 155, 160, 167, 182, 188, 198, 204, 205, 213, 214, 232, 234, 242, 254, 257, 260, 261, 262, 263, 264, 265, 267, 269, 270, 273, 276, 277, 278, 301, 305, 345, 358, 409, 413, 418, 445, 446, 447, 475, 476, 571, 572, 640, 660, 695, 698, 738, 782, 808, 832, 834, 837, 839, 850, 875], "animate_topomap": [118, 264, 265, 875], "frame_r": [118, 264, 265], "blit": [118, 264, 265], "evoked_topomap": [118, 128], "excel": [119, 149, 159, 200, 221], "diagnost": [119, 164, 171, 203, 208, 211], "rare": [119, 272, 856, 875], "80e": [119, 209, 857], "uncom": 119, "fewer": [119, 143, 150, 160, 169, 171, 197, 200, 214, 224, 234, 262, 263, 264, 265, 272, 409, 413, 418, 419, 443, 445, 446, 475, 476, 576, 580, 723, 726, 742, 778, 875], "007": [119, 126, 139, 140, 141, 144, 148, 165, 168, 199, 205, 221, 225, 242, 280, 587], "008": [119, 126, 139, 144, 148, 150, 165, 168, 208, 221, 225, 231, 242, 583], "method_param": [119, 178, 352, 357, 522, 523, 524, 525, 526, 528, 529, 535, 538, 539], "diagonal_fix": [119, 161, 352, 875], "return_estim": [119, 161, 352, 357, 854], "likelihood": [119, 150, 161, 176, 242, 259, 264, 265, 352, 357, 555, 782, 854, 857], "loglik": [119, 259], "1891": 119, "unseen": [119, 161, 176, 352, 854], "descend": [119, 161, 176, 875], "1629": 119, "666": 119, "1659": 119, "1802": [119, 179, 198, 224, 242], "6663146376516": 119, "8130475750986": 119, "10315358209": 119, "evoked_whiten": [119, 128], "read_raw_artemis123": [121, 187, 481, 857, 865, 875], "read_raw_bti": [121, 184, 187, 857, 865, 875], "read_raw_kit": [121, 170, 187, 481, 857, 865, 875], "set_3d_titl": [121, 123, 149, 865, 875], "root_path": 121, "parent": [121, 149, 160, 169, 170, 171, 875], "spm_ctf_meg_example_faces1_3d": 121, "241": [121, 168, 194, 201, 207, 228, 229, 446, 475, 476], "324474": 121, "bti_path": 121, "test_pdf_linux": 121, "test_config_linux": 121, "test_hs_linux": 121, "magn": [121, 187, 857], "3600wh": 121, "pdf": [121, 184, 193, 242, 254, 384, 470, 486, 858], "critic": [121, 150, 159, 170, 177, 184, 200, 208, 224, 226, 229, 583, 642, 740, 851, 861], "mne_create_comp_data": [121, 184, 254, 486], "print_tabl": [121, 184], "routin": [121, 184, 201, 450, 555, 583, 863, 874, 875], "magnes_3600wh": [121, 184], "kit_path": 121, "sqd": [121, 170, 254, 478, 499, 609, 857], "artemis_data_2017": 121, "10h": 121, "38m": 121, "59s_phantom_1k_hpi_1": 121, "artemis123_mneloc": 121, "166": [121, 149, 168, 194, 200, 224, 228, 229, 234, 242], "1863": 121, "hpifit": [121, 207, 254], "ok": [121, 187, 207, 258, 268], "997": [121, 200, 207, 208, 229, 242], "cardin": [121, 165, 168, 213, 219, 303, 304, 333, 426, 830, 860, 875], "meg_sensor": [121, 128, 875], "create_3d_figur": [122, 155, 159, 177, 744, 865], "mne_helmet": [122, 128], "ship": [123, 169, 224, 262, 263, 264, 265, 267, 320, 321, 326, 327, 459, 475, 476, 846, 857, 875], "joan": [123, 136, 158, 875], "massich": [123, 136, 158, 875], "mailsik": [123, 136, 158], "op": [123, 133, 158, 183, 184, 207, 262, 263, 264, 265, 475, 476], "get_builtin_montag": [123, 169, 262, 263, 264, 265, 267, 326, 459, 475, 476, 865, 875], "against": [123, 139, 140, 148, 203, 213, 242, 652, 657, 834, 875], "current_montag": 123, "fiduci": [123, 133, 135, 155, 158, 159, 169, 187, 188, 310, 313, 314, 323, 333, 334, 363, 364, 365, 383, 479, 482, 499, 507, 609, 634, 758, 830, 850, 857, 860, 875], "mri_fiduci": [123, 155, 158, 182, 758, 875], "montage_sgskip": [123, 128], "hcp": [124, 242, 384, 841, 863, 875], "mmp1": [124, 242, 384, 875], "mmp": [124, 384], "Of": [124, 141, 197, 204, 205, 221, 588, 589], "acknowledg": [124, 200], "wu": 124, "minn": 124, "publicli": [124, 165, 399, 400, 851, 856], "get_brain_class": [124, 154, 865], "fetch_hcp_mmp_parcel": [124, 180, 865, 875], "fetch_aparc_sub_parcel": [124, 865], "hcpmmp1": 124, "add_annot": [124, 154, 180, 742], "aud_label": 124, "l_a1_roi": 124, "hcpmmp1_combin": [124, 180, 384], "aparc_sub": 124, "matthew": [124, 179, 242, 384], "glasser": [124, 242, 384], "timothi": [124, 242, 384, 875], "coalson": [124, 242, 384], "emma": [124, 242, 384, 555], "robinson": [124, 179, 242, 384], "hacker": [124, 242, 384], "harwel": [124, 242, 384], "essa": [124, 242, 384], "yacoub": [124, 242, 384], "kamil": [124, 242, 384], "ugurbil": [124, 242, 384], "jesper": [124, 242, 384, 875], "andersson": [124, 242, 384], "beckmann": [124, 242, 384], "jenkinson": [124, 242, 384], "stephen": [124, 179, 193, 224, 225, 242, 384, 413, 555, 682, 683, 685, 686, 724, 727, 875], "essen": [124, 242, 384], "modal": [124, 188, 228, 234, 242, 384], "cerebr": [124, 242, 384], "536": [124, 194, 229, 242, 384], "nature18933": [124, 242, 384], "javeria": [124, 242], "hashmi": [124, 242], "fahimeh": [124, 242, 875], "mamashli": [124, 242, 875], "konstantino": [124, 242], "michmizo": [124, 242], "manfr": [124, 242, 875], "kitzbichl": [124, 242, 875], "santosh": [124, 242], "ganesan": [124, 242], "keri": [124, 242], "lee": [124, 133, 242, 268, 273, 555, 581, 875], "garel": [124, 242], "susan": [124, 242, 648], "whitfield": [124, 242], "gabri": [124, 242], "randi": [124, 242, 522], "gollub": [124, 242], "jian": [124, 242], "kong": [124, 242], "kunjan": [124, 242], "rana": [124, 242], "kenet": [124, 242], "matur": [124, 242], "trajectori": [124, 242], "network": [124, 193, 242, 295, 413, 555, 845], "mediat": [124, 242, 724, 727], "018": [124, 126, 139, 148, 168, 221, 242, 570], "mccloi": [125, 207, 862, 875], "dan": [125, 207, 875], "mpl_toolkit": [125, 169, 204, 224, 229, 766], "axes_grid1": [125, 229, 766], "make_axes_locat": [125, 229], "imagegrid": 125, "inset_loc": [125, 766], "suppos": [125, 167, 204, 755, 857], "max_t": 125, "17909658": 125, "18448887": 125, "83197989": 125, "screenshot": [125, 171, 742, 812, 875], "pixel": [125, 141, 171, 224, 259, 260, 262, 263, 264, 265, 269, 270, 271, 272, 273, 276, 277, 278, 407, 414, 466, 475, 476, 554, 555, 695, 697, 699, 742, 758, 759, 770, 774, 781, 785, 794, 797, 800, 802, 804, 805, 830, 875], "integ": [125, 139, 141, 142, 144, 148, 149, 150, 159, 165, 167, 168, 170, 174, 188, 201, 203, 213, 214, 219, 229, 254, 257, 259, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 281, 295, 296, 308, 311, 312, 319, 322, 325, 327, 352, 356, 357, 366, 367, 368, 407, 409, 414, 423, 424, 428, 429, 436, 445, 446, 449, 450, 451, 465, 470, 472, 473, 475, 476, 507, 531, 532, 533, 554, 555, 557, 569, 570, 571, 572, 577, 580, 589, 591, 598, 607, 609, 613, 643, 645, 663, 681, 690, 695, 697, 698, 699, 703, 704, 705, 706, 708, 726, 729, 759, 766, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 785, 786, 787, 789, 791, 793, 794, 795, 796, 797, 802, 804, 830, 857, 860, 875], "nonwhite_pix": 125, "nonwhite_row": 125, "nonwhite_col": 125, "cropped_screenshot": 125, "nrows_ncol": 125, "axes_pad": 125, "updat": [125, 145, 169, 171, 178, 188, 198, 200, 205, 208, 210, 213, 216, 239, 254, 259, 262, 263, 264, 265, 267, 271, 286, 300, 363, 367, 369, 374, 375, 376, 377, 379, 380, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 410, 411, 413, 414, 415, 416, 417, 419, 420, 421, 442, 459, 470, 475, 476, 495, 521, 556, 635, 639, 730, 742, 832, 834, 851, 856, 860, 875], "rcparam": [125, 136, 200, 875], "labels": 125, "titles": 125, "medium": [125, 155, 182, 254, 306, 863, 875], "height": [125, 254, 267, 269, 270, 273, 276, 277, 278, 307, 311, 319, 324, 466, 742, 751, 800, 805, 830, 875], "gridspec": [125, 264, 265, 781], "keyword": [125, 148, 154, 168, 171, 190, 200, 208, 238, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 301, 302, 303, 304, 305, 306, 307, 310, 312, 314, 315, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 379, 380, 381, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 409, 410, 412, 413, 417, 418, 420, 423, 424, 426, 428, 432, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 450, 451, 452, 457, 458, 462, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 510, 511, 512, 513, 514, 515, 517, 518, 519, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 548, 551, 555, 557, 558, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 578, 579, 580, 581, 583, 584, 586, 587, 590, 591, 592, 595, 596, 597, 598, 602, 603, 604, 605, 606, 607, 609, 610, 611, 613, 614, 615, 617, 618, 619, 620, 621, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 640, 643, 644, 646, 647, 648, 649, 659, 660, 663, 665, 666, 667, 668, 669, 670, 671, 681, 682, 683, 684, 685, 686, 690, 691, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 713, 714, 717, 718, 722, 723, 725, 726, 727, 728, 731, 732, 737, 740, 741, 742, 743, 750, 758, 759, 764, 767, 770, 774, 775, 776, 777, 782, 785, 786, 787, 792, 793, 795, 796, 798, 799, 800, 801, 805, 806, 807, 811, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 834, 850, 875], "subplot2grid": [125, 193], "inch": [125, 259, 262, 263, 264, 265, 271, 407, 414, 475, 476, 554, 555, 695, 697, 699, 774, 781, 785, 794, 797, 802, 804], "height_ratio": 125, "rowspan": 125, "775": [125, 194, 207], "bot": 125, "evoked_idx": 125, "brain_idx": 125, "peak_lin": 125, "66ccee": [125, 159, 711, 721], "columnspac": 125, "labelspac": 125, "fancybox": 125, "handlelength": 125, "n_ave": 125, "spine": [125, 180, 755, 766], "set_axisbelow": 125, "tick": [125, 239, 259, 262, 263, 264, 265, 271, 407, 414, 475, 476, 554, 555, 569, 695, 697, 699, 759, 766, 774, 778, 781, 785, 794, 797, 802, 803, 804, 875], "225": [125, 143, 168, 229, 242, 851], "append_ax": [125, 229], "plot_brain_colorbar": [125, 865, 875], "get_posit": [125, 135, 310, 875], "ymax": [125, 201, 229, 234], "transfigur": 125, "fontweight": [125, 143, 208], "bold": [125, 143, 150, 198, 201, 204, 205, 206, 208, 209, 224], "va": [125, 159], "panel": [125, 133, 150, 155, 161, 169, 179, 239, 254, 264, 265, 466, 555, 742, 782, 786, 854], "outlin": [125, 159, 171, 175, 200, 239, 259, 260, 262, 263, 264, 265, 271, 310, 407, 414, 475, 476, 554, 555, 569, 598, 695, 697, 699, 759, 766, 770, 774, 776, 778, 779, 781, 782, 785, 792, 794, 796, 797, 798, 802, 804, 875], "familiar": [125, 143, 197, 836, 851], "to_plot": 125, "return_tim": [125, 213, 475, 476], "\u00b5v": [125, 141, 143, 144, 148, 150, 165, 199, 205, 225, 254, 259, 262, 263, 264, 265, 269, 270, 271, 272, 273, 276, 277, 278, 407, 414, 475, 476, 511, 554, 555, 569, 695, 697, 699, 759, 772, 773, 774, 776, 778, 781, 785, 794, 795, 797, 802, 803, 804, 830, 857, 875], "1e6": [125, 140, 148, 150, 259, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 352, 356, 357, 407, 414, 416, 475, 476, 773, 776, 778, 780, 781, 803], "inset_ax": [125, 766], "plot_sensor": [125, 141, 150, 169, 181, 189, 216, 262, 263, 264, 265, 475, 476, 865, 875], "server": [125, 145, 165, 171, 201, 203, 213, 808, 838], "axin": 125, "edit": [125, 150, 168, 170, 198, 200, 203, 215, 242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 677, 695, 698, 763, 811, 834, 838, 854, 875], "stai": [125, 143, 200, 201, 219, 221, 262, 263, 264, 265, 475, 476, 477, 644, 830, 834], "intact": [125, 197, 213], "That": [125, 141, 143, 160, 161, 200, 229, 264, 265, 295, 296, 352, 356, 357, 366, 367, 368, 407, 414, 450, 451, 470, 472, 473, 533, 782, 857], "nice": [125, 143, 149, 168, 170, 213, 224, 239, 834, 857, 875], "But": [125, 142, 143, 171, 183, 200, 208, 219, 224, 232, 239, 555, 852], "big": [125, 187, 203, 416, 684, 852, 875], "tast": 125, "luckili": 125, "facet": [125, 159], "set_": 125, "get_children": 125, "line2d": 125, "0x7f568d8066e0": 125, "0x7f568d8061d0": 125, "0x7f568f9dd570": 125, "0x7f568f9dc3d0": 125, "pathcollect": 125, "0x7f56951b1f00": 125, "0x7f56951b3760": 125, "0x7f56951b3b80": 125, "0x7f56951b11b0": 125, "0x7f56951b1930": 125, "0x7f56951b2fe0": 125, "yaxi": [125, 205], "0x7f56951b0f70": 125, "rectangl": [125, 215, 695, 759], "0x7f568faa1360": 125, "certainli": 125, "artistlist": 125, "sensor_dot": 125, "shrink": [125, 133, 198, 224, 225, 580, 854], "set_siz": 125, "publication_figur": [125, 128], "notat": [126, 204, 228, 234, 857], "odd": [126, 200, 322, 406, 857], "make_1020_channel_select": [126, 225, 865, 875], "test_raw": [126, 167, 254], "read_raw_eeglab": [126, 167, 188, 481, 838, 857, 861, 865, 875], "fpz": [126, 169, 203, 259, 262, 263, 264, 265, 271, 310, 407, 414, 475, 476, 554, 555, 569, 695, 697, 699, 759, 766, 774, 776, 778, 781, 782, 785, 792, 794, 796, 797, 798, 802, 804, 875], "eog1": 126, "eog2": 126, "fc5": [126, 498], "t7": [126, 158, 169, 259, 262, 263, 264, 265, 271, 310, 407, 414, 475, 476, 498, 554, 555, 569, 695, 697, 699, 759, 766, 774, 776, 778, 781, 782, 785, 792, 794, 796, 797, 798, 802, 804, 875], "011": [126, 139, 148, 168, 200, 216, 218, 221, 242], "012": [126, 139, 148, 168, 216, 221], "cp5": [126, 498], "017": [126, 139, 148, 168, 213, 221], "cp6": 126, "019": [126, 139, 148, 168, 206, 221, 242], "021": [126, 139, 140, 148, 165, 168, 221], "022": [126, 139, 148, 168, 183, 221], "023": [126, 139, 141, 148, 168, 221, 242], "024": [126, 139, 148, 168, 221, 229, 242, 682, 683, 685, 686], "po7": [126, 239], "026": [126, 139, 148, 168, 221, 242], "poz": [126, 239], "027": [126, 139, 148, 168, 221, 224, 242, 295, 555, 688, 689, 849], "028": [126, 139, 148, 168, 221, 242, 563, 724, 727], "029": [126, 139, 148, 168, 221, 242], "o2": [126, 158, 219, 239], "standard_1020": [126, 150, 158, 169, 219, 498], "fdt": [126, 167, 491, 607], "msec": [126, 150, 695], "new_ev": [126, 214, 433, 435, 520], "203125": 126, "midlin": [126, 133, 168, 169, 216, 225, 322], "12z": [126, 225], "group_bi": [126, 141, 225, 254, 262, 263, 264, 265, 475, 476, 772, 773, 778, 795, 875], "vline": [126, 264, 265, 766, 780, 875], "roi_erpimage_by_rt": [126, 128], "66067": 127, "109": [127, 136, 168, 203, 207, 213, 224, 228, 229, 377, 851], "xscale": [127, 205, 262, 263, 264, 265, 475, 476, 697, 699, 796, 875], "wall": [127, 200, 201, 242, 682, 683], "shield": [127, 201, 210, 242, 262, 263, 264, 265, 267, 475, 476, 552, 583, 695, 697, 698, 699, 857], "review": [127, 150, 177, 202, 203, 242, 554, 560, 834, 856], "scientif": [127, 242, 838, 839, 859], "instrument": [127, 177, 197, 203, 242], "056101": [127, 242], "1063": [127, 194, 208, 242, 566, 583], "4802845": [127, 242], "752": [127, 128, 229], "sensor_noise_level": [127, 128], "039": [128, 139, 141, 148, 168, 221], "auto_examples_visu": 128, "topo_custom": [128, 131], "163": [128, 168, 194, 229, 275], "ssp_projs_sensitivity_map": [128, 129], "xhemi": [128, 132, 274, 358, 620], "topo_compare_condit": [128, 130], "167": [128, 168, 194, 224, 228, 229], "ecg_fnam": 129, "ssp_ecg_map": 129, "arg": [129, 228, 234, 254, 267, 275, 677, 834], "plot_evoked_topo": [130, 149, 209, 865, 875], "audio": [130, 174, 190, 194, 237, 242, 262, 263, 264, 265, 414, 475, 476, 697, 698, 699, 714], "nleft": 130, "iter_topographi": [131, 865, 875], "20hz": 131, "return_freq": [131, 136, 237, 238, 239, 697, 699, 875], "my_callback": 131, "ch_idx": [131, 207, 226, 238], "fig_facecolor": [131, 141, 237, 262, 263, 264, 265, 475, 476, 695, 697, 699, 755, 803], "axis_facecolor": [131, 237, 262, 263, 264, 265, 475, 476, 697, 699, 755], "axis_spinecolor": [131, 755], "on_pick": [131, 755], "gcf": 131, "stc_path": [132, 171], "fsaverage_sym": [132, 358], "left_right": [132, 358], "stc_xhemi": 132, "70314401": 132, "48867635": 132, "29876034": 132, "involv": [133, 134, 135, 155, 157, 159, 197, 200, 201, 204, 215, 365, 557, 856, 857], "implant": [133, 242, 587], "reson": [133, 242, 857], "tomographi": [133, 242, 522, 830, 857], "greater": [133, 143, 165, 198, 203, 224, 227, 262, 263, 274, 356, 448, 555, 580, 684, 698, 724, 727, 815, 875], "intens": [133, 142, 159, 180, 181, 189, 203, 264, 265, 269, 270, 273, 276, 277, 278, 280, 531, 532, 742, 777, 800, 805, 815, 830, 875], "dipi": [133, 170, 274, 694, 731, 732, 815, 833], "pip": [133, 134, 135, 145, 160, 832, 834, 836, 839, 842], "conda": [133, 134, 135, 160, 832, 833, 834, 836, 839, 842, 875], "cite": [133, 136, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 385, 446, 475, 476, 695, 698, 834, 851], "seeg": [133, 135, 137, 138, 164, 168, 213, 219, 262, 263, 264, 265, 267, 275, 277, 309, 310, 314, 364, 368, 370, 436, 440, 459, 475, 476, 481, 490, 551, 552, 553, 555, 625, 627, 640, 690, 695, 697, 698, 699, 742, 758, 764, 798, 830, 831, 841, 857, 875], "gui": [133, 156, 157, 159, 262, 263, 269, 270, 273, 276, 277, 278, 306, 475, 476, 555, 758, 772, 789, 795, 800, 805, 832, 834, 838, 840, 841, 848, 850, 852, 854, 865, 875], "set_3d_backend": [133, 813, 832, 865, 875], "pyvistaqt": [133, 170, 269, 273, 277, 694, 752, 800, 807, 813, 832, 833, 875], "anterior": [133, 159, 268, 322, 672, 830, 857, 875], "commissur": [133, 135, 310], "posterior": [133, 135, 155, 159, 268, 310, 322, 470, 672, 830, 875], "aka": [133, 162, 164, 189], "sample_seeg_t1": 133, "cursor": [133, 743, 875], "long": [133, 136, 139, 140, 145, 197, 200, 201, 203, 207, 214, 215, 219, 225, 232, 233, 260, 262, 263, 264, 265, 269, 270, 273, 274, 276, 277, 278, 352, 358, 475, 476, 525, 558, 563, 583, 695, 697, 698, 699, 742, 834, 837, 838, 850, 856, 863, 875], "menu": [133, 171, 215, 837, 840, 858], "prefer": [133, 141, 150, 169, 170, 188, 189, 200, 203, 204, 257, 262, 263, 264, 265, 358, 414, 436, 455, 475, 476, 555, 639, 697, 699, 796, 832, 834, 838, 840, 841, 853, 856, 857, 860], "pull": [133, 150, 204, 812, 830, 841, 856], "popup": 133, "Be": [133, 160, 213, 215, 264, 265, 779], "tkreg": 133, "until": [133, 141, 198, 199, 206, 209, 257, 260, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 466, 467, 474, 475, 476, 555, 558, 697, 699, 739, 742, 770, 772, 789, 795, 798, 834, 857], "crosshair": 133, "meet": [133, 200, 856], "pc": [133, 203], "transect": 133, "sample_seeg": [133, 134], "viewer": [133, 269, 270, 273, 276, 277, 278, 742, 800, 805, 830, 863, 875], "set_posit": [133, 264, 265, 781], "xytext": [133, 180], "arrowprop": [133, 180, 193], "headwidth": 133, "consum": [133, 201, 272, 565, 688, 875], "deform": [133, 159, 169, 242], "hour": [133, 154, 475, 476, 555, 789, 795], "plan": [133, 197, 198, 201, 206, 431, 832, 838, 856], "proce": [133, 150, 257, 262, 399, 555, 558, 565, 751, 854], "my_data_directori": 133, "subjid": 133, "defac": 133, "cw256": 133, "scan": [133, 154, 165, 175, 179, 182, 208, 267, 386, 580, 815, 835, 838, 841, 846, 860, 863], "anonym": [133, 155, 262, 263, 264, 265, 475, 476, 477, 854, 875], "orig_defac": 133, "publish": [133, 204, 242, 555, 852], "mne_bid": [133, 135, 170], "write_anat": 133, "hardli": [133, 857], "misalign": [133, 145, 177, 486, 875], "stereotact": [133, 262, 263, 264, 265, 475, 476, 552, 553, 695, 697, 698, 699, 857, 875], "anteriolater": 133, "thresh": [133, 572, 576, 592, 682, 683, 685, 686, 742, 815], "apply_orient": 133, "asarrai": [133, 159, 228], "dataobj": [133, 155, 159, 181], "axcodes2ornt": 133, "aff2axcod": [133, 159], "float32": 133, "quantil": [133, 416], "squeez": [133, 140, 228, 229, 234], "grai": [133, 143, 155, 159, 171, 198, 208, 214, 226, 227, 228, 229, 234, 268, 465, 555, 600, 742, 757, 758, 766, 785], "gist_heat": 133, "invert_yaxi": 133, "ct_orig": 133, "sample_seeg_ct": 133, "world": [133, 155, 159, 171, 181, 200, 215, 226, 274, 450], "ct_resampl": 133, "moving_affin": 133, "static_affin": 133, "unalign": 133, "shear": [133, 732], "reg_affin": [133, 731, 732, 815], "compute_volume_registr": [133, 731, 865, 875], "4x4": [133, 275, 498, 646, 647, 648, 660], "99270756": 133, "03243313": 133, "11610254": 133, "094156": 133, "04374389": 133, "99439665": 133, "09623816": 133, "58320673": 133, "11233068": 133, "10061512": 133, "98856381": 133, "45551601": 133, "cval": [133, 731, 875], "ct_align": 133, "apply_volume_registr": [133, 865, 875], "failur": [133, 834, 875], "heat": 133, "navig": [133, 160, 213, 262, 263, 272, 277, 278, 475, 476, 772, 795, 806, 832, 838, 858], "toolbar": [133, 160, 807], "lta": [133, 619, 875], "realli": [133, 174], "rerun": 133, "manual_reg_affine_vox": 133, "read_lta": [133, 865, 875], "sample_seeg_ct_aligned_manu": 133, "manual_reg_affin": 133, "starting_affin": [133, 732, 875], "hyperintens": [133, 815], "hypointens": [133, 815], "brighter": [133, 234], "subcutan": 133, "fat": 133, "ct_data": 133, "get_fdata": 133, "t1_data": 133, "bright": 133, "175": [133, 141, 149, 168, 193, 194, 224, 228, 229, 242, 555], "halfwai": [133, 760], "talairach": [133, 134, 159, 179, 180, 277, 278, 364, 365, 627, 806, 854, 857, 875], "get_mni_fiduci": [133, 159, 310, 364, 758, 865, 875], "subj_tran": 133, "nearbi": [133, 134, 135, 193, 197, 205, 208, 220, 242, 259, 262, 263, 264, 265, 271, 407, 414, 475, 476, 554, 555, 569, 583, 690, 695, 697, 699, 759, 774, 781, 785, 794, 797, 802, 804, 815], "video": [133, 155, 160, 859, 875], "associ": [133, 136, 143, 167, 171, 190, 197, 204, 205, 207, 224, 226, 242, 256, 257, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 415, 458, 475, 476, 517, 607, 609, 645, 677, 682, 687, 695, 698, 764, 772, 773, 775, 776, 778, 793, 794, 832, 834, 857, 860, 875], "sidebar": 133, "scroll": [133, 141, 165, 215, 216, 260, 262, 263, 475, 476, 555, 770, 772, 789, 795, 811, 875], "arrow": [133, 155, 159, 160, 177, 182, 197, 201, 204, 216, 259, 260, 262, 263, 264, 265, 270, 271, 276, 277, 278, 407, 414, 475, 476, 554, 555, 695, 697, 699, 742, 759, 770, 772, 773, 774, 778, 781, 784, 785, 794, 795, 797, 802, 805, 806, 857, 875], "snap": [133, 160, 875], "sample_seeg_ieeg": [133, 134], "locate_ieeg": [133, 865, 875], "1310640": [133, 134], "1370605": [133, 134], "411": [133, 134, 224, 229, 242, 352], "1371": [133, 134, 156, 194, 237, 242, 262, 263, 264, 265, 475, 476, 697, 699, 707, 713], "t1_ecog": 133, "ct_orig_ecog": 133, "sample_ecog_ct": 133, "99982382": 133, "00414586": 133, "01830679": 133, "15413965": 133, "00549597": 133, "99721885": 133, "07432601": 133, "54316131": 133, "01794773": 133, "07441352": 133, "99706595": 133, "84162514": 133, "ct_aligned_ecog": 133, "raw_ecog": 133, "previous": [133, 148, 169, 202, 203, 254, 288, 295, 296, 633, 742, 875], "subj_trans_ecog": 133, "3024": [133, 318, 475, 857], "dura": [133, 854], "pressur": [133, 580], "craniotomi": [133, 580], "watershed_bem": [133, 157, 580, 841, 854, 857, 875], "flash_bem": [133, 157, 580, 841, 857, 875], "modif": [133, 189, 234, 328, 370, 841, 875], "view_kwarg": [133, 156, 159], "ieeg": [133, 135, 863, 864, 865, 875], "project_sensors_onto_brain": [133, 865, 875], "cvs_avg35_inmni152": 133, "subject_brain": 133, "template_brain": 133, "regist": [133, 254, 305, 731, 732, 815, 830, 856, 857], "sdr_morph": [133, 274, 731, 732, 815], "subject_brain_sdr": 133, "appl": [133, 837], "had": [133, 141, 150, 166, 167, 174, 180, 199, 200, 201, 204, 205, 216, 237, 239, 262, 263, 400, 430, 574, 613, 698, 857, 875], "montage_warp": [133, 815], "elec_imag": 133, "warped_elec_imag": 133, "warp_montage_volum": [133, 865, 875], "subjects_dir_from": [133, 815], "subjects_dir_to": [133, 815], "dark2": 133, "degrad": 133, "inaccur": [133, 161, 213, 259, 262, 263, 264, 265, 271, 352, 407, 414, 475, 476, 554, 555, 569, 695, 697, 699, 759, 774, 781, 785, 794, 797, 802, 804, 850, 857], "add_estimated_fiduci": [133, 310, 875], "template_tran": 133, "compute_native_head_t": [133, 134, 158, 181, 310, 865, 875], "recomput": [133, 203, 206, 229, 448, 555, 581, 635, 875], "behind": [133, 155, 170, 193, 198, 203, 466, 761, 852], "scene": [133, 155, 159, 170, 193, 242, 254, 264, 265, 269, 270, 273, 276, 277, 278, 413, 466, 742, 748, 749, 751, 758, 777, 800, 805, 809, 810, 812, 832, 852, 875], "brittani": [133, 242], "stedelin": [133, 242], "alessandra": [133, 242], "mantovani": [133, 242], "ahm": [133, 242], "raslan": [133, 242], "nicol": [133, 242, 679, 875], "swann": [133, 242], "3897": [133, 242], "2022": [133, 168, 170, 179, 210, 242, 243, 851], "21105": [133, 242], "joss": [133, 242], "03897": [133, 242], "liberti": [133, 135, 242, 875], "hamilton": [133, 135, 242, 875], "morgan": [133, 200, 242], "edward": [133, 242], "semi": [133, 203, 242, 569, 875], "neuroinformat": [133, 242], "octob": [133, 242, 655], "fninf": [133, 242], "00062": [133, 242], "1193": [133, 138, 242], "10_ieeg_loc": [133, 138], "stereoelectroencephalographi": [134, 851], "xfm": [134, 277, 278, 365, 627, 806, 857, 875], "li": [134, 135, 159, 171, 206, 242, 857, 862, 875], "adam2392": [134, 135], "fixat": 134, "isi": [134, 190], "mni_tal": [134, 135, 310, 323], "this_subject_dir": 134, "head_mri_t": 134, "mri_mni_t": [134, 627], "read_talxfm": [134, 159, 865], "taliarach": 134, "fro": [134, 451, 730], "rostral": [134, 742], "warp": [134, 155, 158, 242, 815, 851, 875], "intracrani": [134, 137, 138, 164, 242, 267, 310, 314, 364, 365, 459, 467, 475, 476, 481, 580, 731, 732, 742, 807, 815, 850, 851, 863, 864, 875], "contact": [134, 137, 138, 164, 197, 267, 310, 314, 330, 364, 365, 467, 475, 481, 580, 731, 732, 742, 807, 815, 834, 851, 875], "combine_transform": 134, "atla": [134, 180, 242, 254, 260, 269, 270, 273, 275, 276, 277, 278, 307, 441, 510, 644, 830, 851, 854, 857, 863, 875], "get_montage_volume_label": [134, 742, 865, 875], "lami": [134, 467], "lttr": 134, "isdigit": 134, "lpm": 134, "lsma": 134, "elec": [134, 225], "plot_channel_labels_circl": [134, 865, 875], "lpit": 134, "lstg": 134, "lpcn": 134, "rahp": 134, "rphp": 134, "lent": 134, "lbri": 134, "ltpo": 134, "lofc": 134, "lpli": 134, "lacn": 134, "lphg": 134, "ctx": 134, "putamen": 134, "add_volume_label": [134, 180, 742, 875], "heatmap": [134, 208], "lfp": 134, "stc_near_sensor": [134, 135, 865, 875], "Its": [134, 207, 857], "view_layout": [134, 179, 269, 270, 273, 276, 277, 278, 742, 800, 805], "sagitt": [134, 159, 179, 260, 742, 760, 770], "m4": 134, "sai": [134, 135, 200, 201, 204, 206, 213, 219, 226, 229, 738, 834, 840, 850, 860], "081": [134, 138], "20_seeg": [134, 138], "epilepsi": [135, 875], "seizur": [135, 875], "complementari": [135, 199, 863], "libertyhamilton": 135, "bidspath": 135, "read_raw_bid": 135, "bids_root": 135, "epilepsy_ecog": [135, 865, 875], "bids_path": 135, "pt1": 135, "session": [135, 139, 141, 148, 149, 165, 170, 171, 198, 208, 210, 215, 262, 263, 372, 373, 475, 476, 555, 772, 789, 795, 803, 832, 850, 854, 858, 875], "presurgeri": 135, "ictal": 135, "datatyp": [135, 875], "vhdr": [135, 169, 239, 440, 475, 476, 601, 851, 857, 875], "trans_bandwidth": [135, 200, 443, 446, 475, 476], "add_mni_fiduci": [135, 310, 875], "epoch_length": 135, "269079": 135, "269": [135, 168, 229], "2201": 135, "ad1": 135, "att1": 135, "ast1": 135, "g16": 135, "slt1": 135, "sensor_color": [135, 758], "gamma_power_t": 135, "gamma_info": 135, "445": [135, 229], "gamma_power_at_15": 135, "rgba": [135, 268, 269, 270, 273, 276, 277, 278, 742, 757, 761, 800, 805, 806, 875], "get_cmap": 135, "tolist": 135, "funcanim": [135, 264, 265], "gamma_pow": 135, "x_line": 135, "epileptiform": 135, "progress": [135, 150, 164, 199, 242, 410, 417, 834, 875], "posteriorli": 135, "becom": [135, 140, 181, 199, 200, 202, 203, 208, 210, 232, 233, 234, 262, 263, 264, 265, 597, 763, 778, 834, 842, 856, 857, 875], "xyz_pt": 135, "vmid": 135, "intra": [135, 666], "4932": 135, "30_ecog": [135, 138], "toi": [136, 224, 863], "answer": [136, 205, 229, 239, 834, 854], "question": [136, 140, 208, 239, 834, 837, 853, 855], "alic": 136, "tackl": 136, "chambon": [136, 242, 875], "stan": 136, "sleep_physionet": [136, 851, 865, 875], "fetch_data": [136, 851, 865, 875], "randomforestclassifi": 136, "accuracy_scor": 136, "functiontransform": 136, "ground": [136, 165, 205, 555, 793, 863], "truth": [136, 205, 555, 793], "expert": [136, 161, 834, 854, 856], "alice_fil": 136, "bob_fil": 136, "raw_train": 136, "marker": [136, 150, 167, 176, 187, 188, 193, 199, 204, 254, 259, 262, 263, 264, 265, 268, 269, 270, 271, 272, 273, 276, 277, 278, 280, 352, 353, 355, 357, 407, 410, 414, 417, 420, 423, 424, 450, 463, 465, 475, 476, 478, 499, 514, 517, 518, 528, 529, 538, 539, 554, 555, 560, 567, 568, 569, 609, 643, 646, 647, 648, 660, 682, 683, 684, 685, 686, 695, 697, 699, 700, 701, 702, 703, 704, 705, 713, 714, 722, 723, 724, 725, 726, 759, 774, 777, 781, 785, 794, 795, 796, 797, 801, 802, 804, 851, 875], "temp": [136, 267], "rectal": 136, "annot_train": 136, "read_annot": [136, 215, 742, 865, 875], "emit_warn": [136, 256, 475, 476, 584], "resp": [136, 168, 213, 262, 263, 264, 265, 272, 309, 475, 476, 490, 552, 695, 697, 698, 699, 772, 795, 857, 875], "physionet_sleep": 136, "sc4001e0": 136, "wake": 136, "rem": [136, 167], "abbrevi": [136, 174, 204, 742, 857, 875], "rapid": [136, 143, 193, 200, 242, 413], "awak": 136, "night": [136, 399, 851], "imbal": [136, 228, 565, 566, 574, 583, 594], "trim": [136, 262, 263], "occurr": [136, 143, 197, 431, 433], "annotation_desc_2_event_id": 136, "redefin": 136, "events_train": 136, "chunk_dur": [136, 167, 436, 875], "stage_color": 136, "prop_cycl": 136, "by_kei": 136, "841": [136, 229], "188": [136, 168, 183, 224, 229], "raw_test": 136, "annot_test": 136, "events_test": 136, "epochs_test": 136, "sc4011e0": 136, "1103": [136, 177, 207, 242], "signatur": [136, 198, 228, 410, 417, 424, 834, 852, 875], "ci": [136, 145, 200, 209, 224, 237, 555, 674, 697, 699, 766, 787, 834, 875], "\u00b5v\u00b2": 136, "eeg_power_band": 136, "compat": [136, 143, 170, 175, 255, 262, 263, 264, 265, 318, 360, 368, 382, 390, 413, 415, 418, 420, 421, 422, 447, 466, 475, 476, 528, 555, 697, 699, 772, 774, 795, 796, 807, 832, 840, 842, 854, 857, 860, 875], "psds_band": 136, "boilerpl": 136, "sckit": 136, "manner": [136, 150, 177, 224, 225, 257, 262, 875], "thank": [136, 139, 834, 863], "pipe": [136, 834, 851], "n_estim": [136, 410, 417], "acc": 136, "6745240253853128": 136, "ye": [136, 207, 208, 224, 264, 475, 495, 613, 854, 875], "databas": [136, 242, 385, 399, 400], "mathieu": [136, 242, 875], "galtier": [136, 242], "pierrick": [136, 242], "arnal": [136, 242], "gill": [136, 242], "wainrib": [136, 242], "architectur": [136, 242, 875], "rehabilit": [136, 242], "758": [136, 229, 242], "769": [136, 229, 242], "tnsre": [136, 242], "2813138": [136, 242], "kemp": [136, 242, 399, 400, 851], "zwinderman": [136, 242, 399, 400, 851], "tuk": [136, 242, 400, 851], "kamphuisen": [136, 242, 399, 400, 851], "obery\u00e9": [136, 242, 400, 851], "feedback": [136, 242, 400, 851, 875], "microcontinu": [136, 242, 400, 851], "1185": [136, 242, 400, 851], "1194": [136, 242, 400, 851], "867928": [136, 242, 400, 851], "829": [136, 138, 194, 229], "60_sleep": [136, 138], "sleep": [137, 138, 164, 167, 242, 256, 262, 267, 399, 400, 436, 475, 490, 601, 697, 775, 830, 854, 875], "stage": [137, 138, 143, 154, 155, 164, 171, 190, 198, 200, 203, 204, 209, 215, 242, 256, 257, 262, 263, 264, 265, 267, 274, 358, 399, 436, 475, 476, 490, 515, 569, 601, 606, 697, 732, 775, 830, 834, 841, 850, 851, 865, 875], "polysomnographi": [137, 138, 164, 256, 262, 267, 399, 400, 436, 475, 490, 601, 697, 775, 851, 875], "psg": [137, 138, 164, 256, 262, 267, 399, 436, 475, 490, 601, 697, 775, 851, 875], "907": [138, 229], "auto_tutorials_clin": 138, "507": [138, 194, 229], "cover": [139, 146, 148, 150, 152, 154, 161, 162, 164, 165, 167, 170, 171, 172, 185, 191, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 211, 213, 216, 217, 224, 235, 239, 240, 268, 272, 583, 591, 600, 679, 825, 834, 857, 858, 875], "possibli": [139, 148, 165, 171, 200, 226, 227, 264, 265, 274, 295, 296, 308, 352, 356, 357, 366, 367, 368, 382, 407, 414, 450, 451, 470, 472, 473, 533, 555, 573, 574, 677, 742, 782, 850, 875], "del_proj": [139, 148, 197, 204, 205, 206, 262, 263, 264, 265, 475, 476, 875], "plot_projs_topomap": [139, 141, 148, 205, 216, 262, 263, 264, 265, 475, 476, 793, 865, 875], "plot_psd_topomap": [139, 141, 237, 238, 262, 263, 264, 265, 475, 476, 875], "sample_data_fold": [139, 141, 144, 145, 154, 165, 166, 167, 168, 169, 197, 198, 199, 201, 203, 204, 205, 206, 208, 213, 214, 215, 216, 237], "sample_data_raw_fil": [139, 141, 144, 145, 165, 166, 167, 168, 197, 198, 199, 201, 203, 204, 205, 206, 208, 213, 214, 215, 216, 237], "sample_data_events_fil": [139, 144, 214], "events_from_fil": [139, 214], "bare": [139, 165], "299693": [139, 150], "699283": 139, "quot": [139, 193, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 695, 698, 834, 857], "didn": [139, 143, 262, 442, 698, 875], "string": [139, 142, 143, 144, 148, 149, 167, 168, 170, 171, 199, 213, 214, 215, 237, 255, 256, 257, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 281, 308, 310, 319, 325, 327, 338, 351, 352, 356, 357, 361, 366, 371, 374, 375, 376, 379, 380, 382, 387, 388, 390, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 407, 409, 410, 414, 417, 423, 424, 428, 431, 436, 441, 442, 455, 457, 459, 467, 474, 475, 476, 477, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 510, 515, 518, 522, 528, 529, 552, 553, 554, 555, 557, 558, 569, 570, 571, 572, 574, 576, 577, 580, 583, 589, 591, 598, 607, 609, 613, 631, 651, 652, 653, 654, 655, 657, 660, 663, 672, 676, 678, 681, 690, 691, 695, 696, 697, 698, 699, 703, 704, 705, 706, 708, 726, 730, 731, 732, 742, 750, 758, 759, 766, 772, 773, 774, 776, 778, 779, 780, 781, 782, 785, 786, 793, 794, 795, 796, 797, 800, 802, 804, 805, 806, 832, 833, 834, 849, 854, 860, 875], "event_dict": [139, 141, 144, 148, 150, 165, 167, 209, 214, 219, 237], "buttonpress": [139, 148, 150, 165, 167, 171, 214], "mention": [139, 143, 150, 165, 167, 168, 169, 174, 200, 204, 205, 206, 213, 229, 351, 834], "haven": [139, 215, 834, 858, 875], "turn": [139, 148, 149, 151, 174, 190, 198, 203, 204, 205, 206, 239, 255, 257, 262, 448, 512, 644, 743, 763, 851, 856, 857, 875], "accommod": [139, 875], "request": [139, 160, 165, 170, 171, 203, 205, 208, 213, 214, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 406, 475, 476, 555, 567, 568, 603, 640, 676, 678, 696, 697, 699, 751, 774, 783, 785, 800, 805, 830, 840, 841, 854, 855, 856, 860, 875], "drop_log": [139, 141, 199, 257, 262, 263, 272, 567, 568, 698, 771, 875], "too_short": [139, 150, 262, 698], "forget": [139, 156, 157, 167, 834], "brows": [139, 171, 180, 198, 215, 260, 262, 263, 475, 476, 555, 770, 772, 789, 795, 846, 852, 875], "scrollbar": [139, 262, 263, 475, 476, 555, 772, 789, 795, 875], "focus": [139, 140, 180, 215, 262, 263, 475, 476, 555, 652, 657, 772, 789, 795, 834, 838, 841, 859], "screen": [139, 242, 254, 262, 263, 475, 476, 772, 795, 808, 875], "bracket": [139, 148, 150, 168, 188, 213, 219, 237, 875], "catch": [139, 141, 165, 180, 228, 234, 834], "charact": [139, 165, 168, 198, 213, 214, 322, 491, 506, 601, 607, 651, 652, 653, 654, 655, 657, 750, 834, 875], "tag": [139, 143, 150, 164, 240, 241, 242, 254, 262, 263, 267, 272, 310, 326, 431, 436, 485, 506, 552, 697, 698, 750, 804, 830, 834, 851, 863, 875], "complain": 139, "ask": [139, 143, 159, 834, 849, 851, 855, 856], "keyerror": [139, 259, 262, 263, 267, 271, 286, 300, 521, 698, 730], "rais": [139, 143, 206, 257, 259, 262, 263, 264, 265, 267, 268, 271, 272, 273, 276, 282, 283, 286, 300, 314, 337, 340, 346, 347, 352, 356, 359, 361, 363, 366, 367, 399, 426, 434, 448, 454, 455, 457, 475, 476, 495, 521, 544, 546, 555, 582, 603, 614, 632, 634, 637, 641, 645, 682, 683, 685, 686, 695, 697, 698, 699, 730, 775, 786, 821, 823, 834, 856, 875], "reorder_channel": [139, 148, 213, 262, 263, 264, 265, 475, 476, 695, 697, 698, 699, 875], "exploratori": [139, 148, 166, 204, 213, 225, 852], "epochs_eeg": 139, "new_ord": [139, 148], "epochs_subset": 139, "032": [139, 148, 168, 221, 225, 242], "033": [139, 148, 168, 221], "034": [139, 148, 168, 221], "035": [139, 148, 168, 221], "041": [139, 141, 148, 168, 221], "042": [139, 148, 168, 221, 857], "043": [139, 148, 168, 221], "045": [139, 141, 148, 168, 221], "046": [139, 141, 148, 168, 221, 242, 655, 857], "047": [139, 141, 148, 168, 221], "049": [139, 141, 148, 168, 221], "052": [139, 141, 148, 161, 168, 184, 198, 221, 242, 724, 727], "054": [139, 141, 148, 168, 206, 221, 242, 533, 652, 657], "055": [139, 141, 148, 168, 206, 221, 242, 385], "056": [139, 141, 148, 168, 221, 232, 236], "unchang": [139, 148, 204, 262, 263, 264, 265, 475, 476, 584, 635], "blinkchannel": 139, "20auditori": 139, "20buttonpress": 139, "4face": [139, 150], "4visual": 139, "19visual": 139, "shorter_epoch": 139, "include_tmax": [139, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 695, 698, 875], "obj": [139, 160, 626, 828, 875], "0998976": 139, "expand": [139, 143, 159, 199, 204, 262, 263, 264, 265, 268, 273, 276, 352, 437, 440, 465, 475, 476, 697, 699, 774, 854, 875], "later_epoch": 139, "tshift": [139, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 435, 475, 476, 695, 698], "amount": [139, 140, 161, 166, 177, 198, 205, 206, 220, 239, 259, 260, 261, 262, 263, 264, 265, 269, 270, 271, 272, 273, 276, 277, 278, 361, 371, 407, 414, 447, 474, 475, 476, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 515, 530, 554, 555, 592, 608, 695, 697, 698, 699, 711, 721, 725, 772, 774, 781, 785, 794, 795, 797, 800, 802, 805, 854, 857, 875], "00166496": 139, "00332992": 139, "99833504": 139, "99667008": 139, "enforc": [139, 815, 875], "eog_data": 139, "channel_4_6_8": 139, "arr": [139, 213, 239, 674], "repeatedli": [139, 203, 205, 475, 476, 840, 875], "hierarch": [139, 142, 143, 237, 242, 431, 470, 520, 830, 875], "multiindex": [139, 262, 263, 695, 697, 698, 699], "aggreg": [139, 142, 144, 238, 262, 263, 264, 265, 312, 431, 475, 476, 695, 697, 699, 773, 774, 875], "endpoint": [139, 142, 167, 219, 257, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 285, 571, 613, 614], "sort_index": 139, "inplac": [139, 144, 256, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 315, 432, 442, 475, 476, 551, 597, 649, 834], "read_epochs_eeglab": [139, 188, 857, 861, 865, 875], "read_epochs_kit": [139, 187, 857, 865, 875], "audiovisu": [139, 165, 213], "epochs_from_fil": 139, "convent": [139, 159, 169, 171, 187, 189, 204, 205, 214, 242, 254, 267, 301, 322, 332, 492, 591, 614, 630, 711, 720, 721, 742, 857, 860, 875], "basenam": [139, 214], "_epo": 139, "issu": [139, 140, 143, 150, 160, 193, 200, 201, 204, 214, 215, 262, 263, 268, 273, 287, 289, 418, 475, 476, 555, 590, 658, 661, 772, 789, 795, 830, 832, 834, 853, 855, 856, 863, 875], "adher": [139, 142, 356, 439], "epochsfif": [139, 142], "anyth": [139, 187, 203, 383, 742, 834], "baseepoch": [139, 555, 834, 865, 875], "ndarrai": [139, 213, 221, 239, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 281, 295, 296, 303, 319, 342, 348, 361, 363, 366, 406, 407, 408, 411, 414, 419, 423, 427, 433, 435, 443, 444, 445, 447, 450, 451, 452, 474, 475, 476, 478, 510, 530, 554, 555, 556, 563, 566, 567, 568, 569, 574, 578, 579, 581, 598, 619, 644, 645, 660, 674, 675, 676, 680, 681, 682, 683, 685, 686, 695, 696, 697, 698, 699, 708, 711, 713, 714, 721, 724, 731, 732, 742, 743, 746, 756, 759, 761, 774, 778, 780, 781, 783, 784, 797, 800, 801, 802, 804, 805, 806, 815, 823, 873, 875], "10_epochs_overview": [139, 147], "aldai": [140, 242, 875], "reason": [140, 148, 149, 161, 165, 170, 171, 183, 198, 199, 200, 201, 202, 204, 205, 206, 213, 215, 224, 233, 234, 242, 260, 261, 262, 263, 264, 265, 269, 270, 272, 273, 276, 277, 278, 296, 352, 368, 419, 475, 476, 555, 567, 575, 578, 583, 682, 683, 685, 686, 688, 695, 698, 771, 808, 834, 850, 854, 856, 857, 875], "safer": [140, 269, 270, 273, 276, 277, 278, 487], "distort": [140, 188, 200, 216, 239, 487, 732], "spuriou": [140, 145, 161, 448, 854], "carina": [140, 875], "forster": [140, 875], "email": [140, 834, 840], "carinaforster0611": 140, "merge_ev": [140, 214, 352, 865, 875], "baseline_tmin": 140, "baseline_tmax": 140, "4957": [140, 150, 333], "trad_aud": 140, "trad_vi": 140, "heterogen": [140, 199, 875], "aud_predictor": 140, "vis_predictor": 140, "trickier": 140, "seaprat": 140, "baseline_predictor": 140, "singleton": [140, 742, 875], "\u03bcv": 140, "microvolt": [140, 187, 485, 857], "unstabl": [140, 161, 202, 352, 854, 875], "transpos": [140, 213, 224, 225, 229, 232, 233, 234, 860, 875], "reg_model": 140, "6254": 140, "lm": [140, 563], "namedtupl": [140, 680], "dict_kei": [140, 168, 204], "1998": [140, 148, 242, 857], "49949": [140, 148], "tell": [140, 149, 154, 161, 165, 170, 199, 203, 205, 213, 226, 228, 234, 275, 834, 837, 838, 853, 857], "strongli": [140, 171, 197, 198, 206, 475, 476, 505, 832, 834, 850, 854, 857], "\u03b2": [140, 141, 216], "constant": [140, 155, 159, 169, 194, 197, 200, 239, 257, 262, 263, 264, 265, 267, 368, 475, 476, 479, 507, 731, 830, 851, 857, 875], "effect_of_baselin": 140, "unsurprisingli": 140, "farther": [140, 854], "weaker": [140, 262, 263, 264, 265, 443, 445, 446, 475, 476, 857], "pure": [140, 273, 834], "influenc": [140, 200, 202, 203, 242, 856], "reg_aud": 140, "reg_vi": 140, "show_sensor": [140, 143, 165, 766, 875], "truncate_yaxi": [140, 229, 766, 875], "subtl": 140, "apart": [140, 149, 167, 219], "diff_tradit": 140, "diff_regress": 140, "themselv": [140, 264, 265, 295, 296, 352, 356, 357, 366, 367, 368, 407, 414, 450, 451, 470, 472, 473, 533, 782, 856], "ought": 140, "persist": [140, 141, 197, 201, 854, 875], "interaction_effect": 140, "seem": [140, 143, 150, 161, 190, 200, 203, 205, 239, 555, 834], "randomli": [140, 165, 224, 508, 581, 600, 661], "glm": [140, 242, 841], "lift": [140, 177, 194, 232, 234, 242], "psyp": [140, 150, 200, 229, 242, 681, 682, 683, 685, 686], "13451": [140, 242], "15_baseline_regress": [140, 147], "imagemap": 141, "discontinu": [141, 145, 146, 147, 150, 164, 167, 200, 203, 213, 214, 219, 237, 262, 448, 475, 606, 607, 609, 610, 697, 699, 830], "176": [141, 168, 170, 207, 224, 228, 229, 242, 555], "enabl": [141, 171, 216, 239, 254, 255, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 370, 466, 475, 476, 569, 590, 642, 682, 683, 685, 686, 697, 698, 737, 742, 751, 755, 758, 777, 795, 800, 805, 808, 832, 840, 850, 856, 857, 875], "unappli": [141, 149, 204, 206, 262, 263, 264, 265, 437, 438, 439, 440, 475, 476, 875], "purg": 141, "catch_trials_and_buttonpress": 141, "pick_ev": [141, 214, 865], "event_color": [141, 214, 262, 263, 475, 476, 772, 795, 875], "butterfli": [141, 148, 150, 151, 171, 198, 204, 208, 216, 262, 263, 264, 265, 272, 475, 476, 555, 772, 776, 779, 786, 795, 811, 861, 875], "ecg_proj_fil": [141, 204], "ecg_proj": [141, 145, 204, 205], "41auditori": 141, "40button": 141, "8face": 141, "8visual": 141, "40visual": 141, "inherit": [141, 237, 352, 875], "joint": [141, 181, 205, 242, 262, 263, 264, 265, 271, 407, 414, 475, 476, 640, 697, 699, 774, 781, 794, 863, 875], "epochsspectrum": [141, 164, 240, 241, 262, 263, 264, 265, 448, 475, 699, 713, 714, 737, 865, 875], "\u03b4": [141, 216], "\u03b8": [141, 216], "\u03b3": [141, 216], "api": [141, 168, 194, 216, 224, 237, 408, 543, 742, 751, 755, 842, 846, 858], "jointli": [141, 161, 203, 205, 262, 263, 264, 265, 271, 295, 296, 353, 354, 355, 407, 414, 475, 476, 555, 567, 568, 697, 699, 774, 781, 793, 794, 854, 875], "untransform": 141, "docstr": [141, 150, 179, 200, 201, 208, 213, 216, 237, 263, 281, 295, 296, 470, 472, 473, 533, 697, 738, 740, 757, 875], "plot_topo_imag": [141, 262, 263, 875], "accompani": [141, 660, 856], "scalebar": [141, 875], "highli": [141, 187, 205, 220, 228, 494, 608, 612, 681, 838], "customiz": [141, 264, 265, 695, 779], "respond": [141, 143, 193, 856], "opposit": [141, 167, 510, 857], "0242": [141, 168], "pop": [141, 149, 198, 259, 262, 263, 267, 271, 286, 300, 521, 730, 803, 832, 875], "At": [141, 190, 202, 203, 209, 318, 475, 834, 840, 850, 875], "fullscreen": [141, 466, 875], "unusu": [141, 183, 198, 202], "reject_criteria": [141, 144, 150, 165, 199, 209], "3000e": [141, 144, 199], "find_layout": [141, 169, 865, 875], "font_color": [141, 262, 263, 695, 803], "reinforc": 141, "disguis": 141, "mayb": [141, 261, 262, 263, 264, 265, 475, 476, 552, 695, 697, 698, 699], "286": [141, 147, 168, 207, 229], "20_visualize_epoch": [141, 147], "who": [142, 254, 267, 555, 834, 838, 851, 856, 875], "lexic": [142, 851], "decis": [142, 190, 200, 239, 257, 262, 411, 515, 606, 851], "kiloword_data_fold": 142, "kiloword_data_fil": 142, "capabl": [142, 154, 165, 167, 373, 742, 807, 811, 813, 814, 832, 834, 838, 841, 851, 875], "surviv": [142, 267], "reload": 142, "attach": [142, 168, 198, 213, 225, 237, 431, 830], "numberoflett": [142, 225], "english": [142, 851], "lexicon": 142, "wordfrequ": 142, "render": [142, 155, 159, 171, 254, 262, 263, 269, 270, 272, 273, 276, 277, 278, 466, 475, 476, 555, 695, 742, 751, 772, 789, 795, 800, 801, 805, 808, 810, 834, 840, 857, 858, 875], "orthographicdist": 142, "bigramfrequ": 142, "consonantvowelproport": 142, "450000": 142, "189490": 142, "900000": 142, "700704": 142, "600000": 142, "858537": 142, "484": [142, 202, 229, 242, 554, 598], "700000": 142, "454540": 142, "1095": 142, "539076": 142, "686": 142, "drudgeri": 142, "473684": 142, "556303": 142, "732357": 142, "991226": 142, "545879": 142, "957": [142, 229], "billiard": 142, "500000": [142, 143, 193], "672098": 142, "838597": 142, "958": [142, 225], "698970": 142, "615": [142, 193, 229], "088112": 142, "959": [142, 227, 229], "solenoid": 142, "111111": 142, "301030": 142, "443": [142, 207, 224, 229, 242], "544507": 142, "iloc": [142, 144], "iat": 142, "nindex": 142, "arbitrarili": [142, 157, 229, 857], "highcomplex": 142, "startswith": [142, 875], "district": 142, "disarrai": 142, "disast": 142, "diseas": 142, "discord": 142, "dispos": 142, "267": [142, 167, 168, 194, 229, 242, 849], "lasso": [142, 242, 262, 263, 264, 265, 475, 476, 772, 795, 798, 875], "tentacl": 142, "banjo": 142, "corsag": 142, "fall": [142, 150, 167, 170, 208, 215, 255, 272, 363, 400, 431, 448, 557, 830, 857, 875], "rich": [142, 832, 838], "typhoon": 142, "bungalow": 142, "colossu": 142, "linguist": 142, "dozen": [142, 198, 203, 205, 852], "share": [142, 189, 200, 215, 256, 295, 597, 682, 683, 685, 686, 834, 852, 857, 860, 863, 875], "letter": [142, 169, 187, 225, 242, 742, 875], "n_letter": 142, "sort_ord": 142, "obviou": [142, 170, 198, 203, 216, 232], "reaction": [142, 224, 262, 263, 773, 875], "new_metadata": 142, "foo": [142, 149, 170, 262, 263, 382, 698, 834], "30_epochs_metadata": [142, 147], "eriksen": 143, "flanker": [143, 851], "introductori": [143, 149, 161, 167, 168, 197, 213, 214, 224, 854], "straight": [143, 262, 263, 264, 265, 475, 476, 798], "creation": [143, 148, 154, 167, 199, 215, 254, 256, 259, 262, 263, 272, 275, 306, 406, 567, 568, 857, 875], "ourselv": [143, 174, 202, 203, 205], "incorrect": [143, 175, 199, 200, 210, 242, 832, 857, 875], "sophist": [143, 188, 449], "erp_cor": [143, 851, 865], "infil": 143, "core_subject": 143, "001_task": [143, 210], "flankers_eeg": 143, "all_ev": 143, "all_event_id": 143, "935935": 143, "913": [143, 207, 229], "33793": 143, "target_left": 143, "target_right": 143, "incompat": [143, 617, 623, 832, 875], "decid": [143, 209, 239, 257, 262, 263, 447, 515, 606, 771, 856], "1500": 143, "invalid": [143, 226, 875], "metadata_tmin": 143, "metadata_tmax": 143, "why": [143, 150, 157, 159, 199, 200, 204, 213, 221, 224, 228, 242, 724, 727, 856], "event_nam": [143, 229, 431, 434], "551758": 143, "997070": 143, "434570": 143, "797": [143, 229], "343750": 143, "917969": 143, "425781": 143, "416016": 143, "392578": 143, "990234": 143, "402344": 143, "802": [143, 201, 212, 229], "eleg": 143, "row_ev": [143, 431], "pertain": 143, "sync": [143, 256, 267, 436, 492, 597], "508789": 143, "00000": 143, "503906": 143, "449219": 143, "542969": 143, "496094": 143, "794": [143, 194, 207, 229], "437500": 143, "465820": 143, "796": [143, 194, 229], "547852": 143, "46582": 143, "descriptor": [143, 165, 237, 242, 431, 475, 476, 830], "hed": [143, 150, 237, 242, 431, 830], "inspir": [143, 431, 446, 732, 834, 873], "keep_first": [143, 431], "regardless": [143, 150, 170, 189, 202, 205, 448, 793, 830], "first_respons": [143, 431], "notna": 143, "411133": 143, "454102": 143, "443359": 143, "466797": 143, "400391": 143, "499023": 143, "584961": 143, "226": [143, 168, 183, 228, 229, 875], "421875": 143, "450195": 143, "399414": 143, "316406": 143, "416992": 143, "386719": 143, "410156": 143, "467773": 143, "416": [143, 170, 229], "377930": 143, "483398": 143, "457031": 143, "456": [143, 275], "566406": 143, "395508": 143, "354492": 143, "516": [143, 157, 229], "326172": 143, "432617": 143, "322266": 143, "482422": 143, "606": [143, 229], "484375": 143, "652": 143, "371094": 143, "342773": 143, "307617": 143, "706": [143, 194, 229], "442383": 143, "376953": 143, "first_stimulu": 143, "perfect": [143, 157, 200, 208], "stimulus_sid": 143, "response_correct": 143, "correct_response_count": 143, "rememb": [143, 149, 160, 170, 175, 198, 203, 204, 213, 229, 857], "epochs_tmin": 143, "epochs_tmax": 143, "strong": [143, 182, 198, 203, 228, 555, 652, 657, 850], "099609375": 143, "513": 143, "f8": [143, 158], "fp2": [143, 158, 219, 333, 443, 446, 572, 576], "fp1": [143, 158, 206, 219, 333, 443, 446, 483, 490, 572, 576], "lastli": [143, 171, 207, 209, 238, 239, 834], "vis_erp": 143, "vis_erp_slow": 143, "40_autogenerate_metadata": [143, 147], "userwarn": [143, 175], "asid": [143, 171, 197, 234], "fact": [143, 148, 150, 180, 181, 197, 203, 204, 208, 214, 413, 419, 555, 613, 830, 850, 857], "noisier": [143, 190], "deal": [143, 161, 170, 179, 200, 203, 204, 206, 214, 224, 228, 232, 234, 264, 265, 269, 270, 273, 276, 277, 278, 295, 296, 451, 555, 566, 574, 583, 597, 863, 875], "keep_last": [143, 431], "last_": [143, 431], "last_stimulu": 143, "last_respons": 143, "431641": 143, "795": [143, 229], "576172": 143, "puls": [143, 145, 165, 167, 197, 203, 205, 214, 575, 578, 857], "f7": [143, 158, 333, 498], "c5": [143, 498], "cpz": 143, "isna": 143, "bummer": 143, "impress": 143, "resp_erp_correct": 143, "resp_erp_incorrect": 143, "deflect": [143, 197, 204, 205, 875], "immedi": [143, 155, 167, 198, 203, 206, 239, 255, 424, 475, 476, 558, 606, 667, 670, 751, 795, 830, 834, 856, 857, 875], "doubt": 143, "resp_erp_diff": 143, "bolder": 143, "set_linewidth": 143, "trough_time_idx": 143, "trough_tim": 143, "emili": [143, 200, 242, 851, 875], "kappenman": [143, 200, 242, 851], "jaclyn": [143, 242, 851], "farren": [143, 242, 851], "wendi": [143, 193, 242, 413, 851], "zhang": [143, 242, 851, 857, 875], "andrew": [143, 179, 242, 555, 684, 851, 875], "stewart": [143, 242, 851], "luck": [143, 150, 200, 242, 851], "117465": [143, 242, 851], "nima": [143, 242, 431], "bigd": [143, 242, 431], "shamlo": [143, 242, 431], "kreutz": [143, 242, 431], "delgado": [143, 242, 431], "robbin": [143, 242, 431], "makoto": [143, 242, 431], "miyakoshi": [143, 242, 431], "marissa": [143, 242, 431], "westerfield": [143, 242, 431], "tarik": [143, 242, 431], "bel": [143, 242, 431], "bahar": [143, 242, 431], "koth": [143, 242, 431], "jessica": [143, 242, 431], "hsi": [143, 242, 431], "globalsip": [143, 242, 431], "6736796": [143, 242, 431], "workflow": [144, 154, 199, 851, 853, 875], "200e": [144, 150, 199], "0113": [144, 165, 168, 213], "0112": [144, 165, 168, 213], "0122": [144, 165, 168, 213, 238], "0132": [144, 168], "199795": 144, "320252": 144, "567619": 144, "248584": 144, "609895": 144, "700540": 144, "352746": 144, "908667": 144, "193135": 144, "049675": 144, "702938": 144, "168267": 144, "480975": 144, "182237": 144, "225684": 144, "072452": 144, "186476": 144, "283711": 144, "006895": 144, "912317": 144, "130290": 144, "157198": 144, "842466": 144, "986073": 144, "179816": 144, "040471": 144, "643716": 144, "835772": 144, "517952": 144, "214631": 144, "043144": 144, "672744": 144, "173156": 144, "688943": 144, "974112": 144, "561683": 144, "450115": 144, "778315": 144, "795987": 144, "277138": 144, "timedelta": [144, 215, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 695, 698], "132025e": 144, "156762e": 144, "324858e": 144, "060990e": 144, "870054e": 144, "835275e": 144, "790867e": 144, "049675e": 144, "702938e": 144, "416827e": 144, "748098e": 144, "018224e": 144, "212257e": 144, "072452e": 144, "283711e": 144, "300690e": 144, "691232e": 144, "213029e": 144, "515720e": 144, "178425e": 144, "986073e": 144, "304047e": 144, "643716e": 144, "783577e": 144, "851795e": 144, "521463e": 144, "204314e": 144, "672744e": 144, "568894e": 144, "974112e": 144, "556168e": 144, "450115e": 144, "377831e": 144, "117960e": 144, "727714e": 144, "0133": [144, 168], "dai": [144, 205, 254, 262, 263, 264, 265, 267, 475, 476, 477], "800204787": 144, "379736": 144, "123525": 144, "806864627": 144, "734826": 144, "339465": 144, "813524468": 144, "996158": 144, "627037": 144, "820184308": 144, "748030": 144, "024973": 144, "826844149": 144, "123811": 144, "917677": 144, "pivot": [144, 260, 770, 801], "long_df": [144, 225], "coupl": [144, 209, 213, 234, 410, 587, 841, 859, 875], "1342": [144, 168, 232, 234], "categorydtyp": 144, "nicer": [144, 204, 875], "hue": 144, "peak_lat": 144, "regex": [144, 875], "2123": [144, 168], "idxmax": 144, "melt": 144, "id_var": 144, "var_nam": 144, "value_nam": 144, "satur": [144, 503], "116": [144, 147, 168, 194, 224, 228, 229], "50_epochs_to_data_fram": [144, 147], "equidistantli": 145, "consecut": [145, 167, 232, 269, 270, 273, 276, 277, 278, 448, 515, 557, 558, 875], "briefli": [145, 150, 200, 216, 224], "hous": 145, "compute_proj_ecg": [145, 204, 205, 571, 575, 850, 865, 875], "envelope_correl": [145, 875], "manag": [145, 165, 170, 171, 262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 280, 352, 353, 355, 357, 410, 417, 420, 423, 424, 450, 463, 465, 475, 476, 514, 517, 518, 528, 529, 538, 539, 544, 555, 560, 567, 568, 643, 646, 647, 648, 660, 682, 683, 684, 685, 686, 697, 699, 700, 701, 702, 703, 704, 705, 713, 714, 722, 723, 724, 725, 726, 736, 737, 772, 774, 777, 789, 795, 796, 832, 834, 839, 841, 856, 863, 875], "chan": [145, 253, 675], "221": [145, 168, 207, 224, 229], "heart": [145, 197, 202, 242, 724, 727, 875], "beat": [145, 209, 567, 575, 578, 647], "onpca": 145, "onecg": 145, "make_fixed_length_epoch": [145, 257, 865, 875], "unsuit": [145, 875], "event_related_plot": 145, "1142": [145, 168], "n_sensor": [145, 238, 269, 273, 277, 758], "alpha_data": 145, "1530": 145, "epochconnect": 145, "corr_matrix": 145, "first_30": 145, "last_30": 145, "corr_matric": 145, "color_lim": 145, "mpbl": 145, "693": [145, 147, 206, 229, 242, 262, 263, 264, 265, 475, 476, 640], "60_make_fixed_length_epoch": [145, 147], "918": [147, 229], "auto_tutorials_epoch": 147, "raw_fil": [148, 150], "happen": [148, 150, 155, 159, 160, 166, 167, 170, 194, 199, 201, 203, 224, 255, 262, 263, 315, 430, 432, 830, 834, 851, 854, 856, 860, 875], "discuss": [148, 150, 155, 164, 165, 167, 172, 179, 190, 194, 197, 200, 201, 213, 216, 224, 229, 239, 242, 698, 833, 834, 851, 853, 854, 856, 857, 875], "transfer": [148, 194, 198, 200, 584, 830, 850], "maintain": [148, 198, 224, 262, 263, 264, 265, 475, 476, 477, 546, 834, 853, 856, 857, 875], "proven": [148, 875], "never": [148, 262, 263, 316, 573, 760, 834, 857, 875], "72160572e": 148, "57859354e": 148, "98040833e": 148, "75128428e": 148, "15309907e": 148, "83186429e": 148, "bewar": [148, 159, 857], "evoked_subset": 148, "repair": [148, 164, 165, 197, 198, 199, 204, 208, 211, 212, 216, 242, 262, 264, 265, 267, 355, 448, 475, 490, 549, 552, 554, 555, 567, 568, 569, 571, 572, 590, 591, 793, 794, 814, 850, 875], "evk_fil": [148, 149], "evokeds_list": [148, 149], "right_vi": 148, "remedi": 148, "left_right_aud": 148, "6992832460543575": [148, 150], "fairli": [148, 165, 197, 199, 200, 201, 203, 205, 206], "left_aud": 148, "right_aud": 148, "proport": [148, 224, 269, 270, 271, 273, 276, 277, 278, 351, 363, 473, 555, 563, 800, 805, 857, 875], "grand_averag": [148, 150, 865, 875], "intend": [148, 170, 208, 214, 255, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 431, 475, 476, 555, 584, 590, 841], "standard_error": [148, 262, 263, 264, 265, 613, 875], "iter_evok": [148, 150, 262, 263, 875], "ix": [148, 150], "return_amplitud": [148, 150, 264, 265], "10_evoked_overview": [148, 153], "life": [149, 856], "evk": [149, 150], "superimpos": [149, 171, 197, 216, 555, 743, 786], "timeseri": [149, 221, 262, 263, 264, 265, 475, 476, 662, 696], "resembl": [149, 161, 174, 522, 578, 579], "wing": 149, "behav": [149, 200, 213, 266, 267, 436, 875], "time_ranges_of_interest": 149, "drag": [149, 150, 160, 215, 259, 262, 263, 264, 265, 271, 407, 414, 475, 476, 554, 555, 695, 697, 699, 773, 774, 778, 781, 785, 794, 796, 797, 802, 804, 832, 852], "averaging_dur": 149, "augment": [149, 860], "custom_func": 149, "0x7f5695366560": 149, "substr": [149, 618, 630, 875], "action": [149, 170, 834, 860, 863], "ambigu": [149, 270, 276, 278, 875], "temp_list": 149, "_comment": 149, "_evk": 149, "overhead": [149, 642, 737, 875], "trans_fil": 149, "00097": 149, "meg_surf": [149, 514], "_map": 149, "271": [149, 153, 165, 168, 207, 224, 229], "20_visualize_evok": [149, 153], "materi": [150, 161, 830, 834, 854], "link": [150, 188, 242, 269, 273, 277, 442, 756, 800, 834, 840, 854, 857, 863, 875], "events_fil": [150, 199], "discard": [150, 198, 203, 204, 205, 208, 234, 582, 583, 610, 875], "last_samp": [150, 267, 360, 474, 475, 476, 830, 875], "13514": 150, "mislabel": 150, "renam": [150, 188, 209, 213, 256, 262, 263, 264, 265, 310, 338, 475, 476, 483, 490, 631, 742, 752, 807, 834, 842, 875], "lowercas": 150, "channel_renaming_dict": [150, 213], "schemat": 150, "diagram": [150, 203, 830], "addition": [150, 170, 189, 197, 204, 215, 237, 253, 270, 276, 278, 316, 327, 641, 723, 726, 805, 834, 849, 859], "realist": [150, 242, 850, 857], "dedic": [150, 197, 203, 205, 213, 475, 476, 795, 834, 838, 856, 864, 875], "use_browser_backend": [150, 198, 201, 203, 204, 205, 206, 262, 263, 475, 476, 555, 772, 789, 795, 865, 875], "xx": [150, 198, 201, 204, 205, 206, 256, 834], "qt": [150, 170, 171, 198, 201, 203, 204, 205, 206, 262, 263, 475, 476, 555, 742, 772, 789, 795, 811, 814, 832, 854, 875], "scheme": [150, 187, 219, 228, 259, 262, 263, 264, 265, 271, 407, 414, 423, 475, 476, 554, 555, 569, 637, 640, 676, 695, 697, 699, 759, 772, 774, 781, 785, 794, 797, 798, 802, 804, 834, 857, 875], "eeg53": 150, "eog61": 150, "chose": 150, "consol": [150, 838, 875], "duplic": [150, 160, 257, 262, 263, 264, 265, 268, 272, 310, 338, 475, 476, 631, 875], "eeg03": 150, "eeg01": 150, "eeg02": 150, "eeg04": 150, "eeg06": 150, "eeg07": 150, "eeg25": 150, "25auditori": 150, "27buttonpress": 150, "5visual": 150, "28visual": 150, "barplot": [150, 203], "lose": [150, 188, 215, 854], "plot_drop_log": [150, 199, 209, 262, 263, 865, 875], "break": [150, 164, 211, 212, 215, 256, 262, 264, 267, 357, 475, 552, 555, 558, 571, 572, 575, 576, 610, 828, 834, 850, 875], "l_aud": [150, 234], "l_vi": [150, 234], "fig1": [150, 169], "speak": [150, 166, 167, 202, 842], "agreement": [150, 856], "warrant": 150, "popul": [150, 154, 164, 219, 222, 227, 242, 263, 265, 370, 407, 439, 476, 584, 677, 738, 830, 875], "leverag": [150, 856], "verifi": [150, 181, 239, 839, 840, 857], "plain": [150, 202, 239, 330, 820], "ddof": [150, 161, 854], "lime": 150, "revisit": [150, 242, 407], "eeg17": 150, "eeg18": 150, "eeg26": 150, "eeg23": 150, "eeg24": 150, "eeg34": 150, "eeg35": 150, "left_ix": 150, "right_ix": 150, "roi_dict": 150, "left_roi": [150, 262, 263, 264, 265, 773, 778], "right_roi": [150, 262, 263, 264, 265, 773, 778], "roi_evok": 150, "combine_channel": [150, 865, 875], "aud_minus_vi": 150, "29969": 150, "69928": 150, "weak": [150, 203], "chapter": 150, "erplab": [150, 242], "consequ": [150, 161, 168, 208, 353, 354, 355, 436, 447, 492, 542, 854, 857, 875], "voltag": [150, 165, 167, 187, 188, 206, 214, 499, 830, 875], "p100": 150, "submit": [150, 225, 694, 834, 856], "amp": [150, 177, 182, 184, 254, 875], "throughout": [150, 170, 209, 555, 851], "remaind": 150, "print_peak_measur": 150, "3f": [150, 208, 225, 229, 239, 262, 263, 264, 265, 475, 476, 697, 699, 774, 781], "good_tmin": 150, "good_tmax": 150, "eeg55": 150, "priori": [150, 239, 857], "believ": [150, 239, 834, 857], "eeg59": 150, "fist": 150, "l_vis_roi": 150, "ch_roi": 150, "lat_roi": 150, "amp_roi": 150, "FOR": 150, "ONE": [150, 156, 194, 242], "suscept": [150, 201, 574], "challeng": [150, 210, 242, 851, 854, 863], "meth": [150, 171, 834, 875], "guarante": [150, 187, 198, 203, 206, 208, 224, 262, 263, 264, 265, 437, 438, 439, 440, 475, 476, 505, 875], "rise": [150, 491, 601, 607, 830], "crucial": [150, 155, 197, 232], "095": [150, 169, 259, 262, 263, 264, 265, 271, 310, 328, 407, 414, 475, 476, 554, 555, 569, 695, 697, 699, 759, 766, 774, 776, 778, 781, 782, 785, 792, 794, 796, 797, 798, 802, 804, 875], "bad_tmin": 150, "bad_tmax": 150, "bad_lat_roi": 150, "bad_amp_roi": 150, "unclear": [150, 834], "truli": [150, 200, 682], "pink": [150, 155, 758, 830], "star": 150, "yourself": [150, 155, 168, 197, 201, 213, 254, 264, 265, 486, 781, 834], "c6": 150, "act": [150, 168, 201, 202, 204, 208, 262, 263, 264, 265, 275, 295, 296, 345, 470, 472, 473, 475, 476, 533, 583, 640, 698, 830, 852, 854, 856, 875], "eeg54": 150, "eeg57": 150, "l_vis_mean_roi": 150, "mean_amp_roi": 150, "mean_amp_roi_df": 150, "mean_amp": 150, "numeric_onli": 150, "279764": 150, "685840": 150, "reiter": 150, "hypothes": [150, 224, 225, 863], "l_vis_crop": 150, "mean_amp_al": 150, "mean_amp_all_df": 150, "option_context": 150, "max_column": 150, "689513": 150, "078492": 150, "381191": 150, "609264": 150, "eeg05": 150, "113717": 150, "eeg56": 150, "064174": 150, "259681": 150, "eeg58": 150, "156472": 150, "802306": 150, "eeg60": 150, "878811": 150, "dietrich": [150, 242, 522, 857], "lehmann": [150, 242, 522, 857], "wolfgang": [150, 242, 724, 727], "skrandi": [150, 242], "identif": [150, 203, 242, 569], "checkerboard": [150, 165, 239, 242, 851], "621": [150, 229, 242], "90419": [150, 242], "neurobiologi": [150, 242], "1984": [150, 242], "0301": [150, 242], "0082": [150, 242], "90003": [150, 242], "micah": [150, 242], "brunet": [150, 242], "michel": [150, 184, 242, 385, 555, 655], "s10548": [150, 206, 242, 570, 660], "0054": [150, 242], "ma": [150, 242, 875], "52585": [150, 242], "mitpress": [150, 242], "book": [150, 242, 446, 834], "javier": [150, 242], "lopez": [150, 242], "calderon": [150, 242], "00213": [150, 242], "preclud": [150, 200, 208, 242, 583], "00131": [150, 200, 242], "rufin": [150, 200, 242], "vanrullen": [150, 200, 242], "fallaci": [150, 200, 242], "00365": [150, 200, 242], "nichola": [150, 210, 242, 851], "gaspelin": [150, 242], "12639": [150, 242], "30_eeg_erp": [150, 153], "perspect": [151, 204, 742], "satisfi": [151, 160, 224, 295, 296, 677, 697, 699, 857], "434": [151, 153, 224, 229], "40_whiten": [151, 153], "repetit": [152, 164, 660], "auto_tutorials_evok": 153, "outer": [154, 157, 159, 160, 182, 254, 305, 555, 583, 742, 788, 830, 835, 838, 841, 850, 851, 854, 857, 860], "tissu": [154, 157, 830], "boundari": [154, 157, 171, 181, 190, 216, 259, 262, 263, 264, 265, 268, 271, 272, 361, 407, 414, 465, 475, 476, 554, 555, 574, 600, 660, 674, 695, 697, 699, 742, 747, 759, 760, 774, 781, 785, 794, 796, 797, 802, 804, 830, 840, 860, 875], "analog": [154, 187, 189, 194, 204, 208, 262, 263, 264, 265, 442, 475, 476, 483, 490, 497, 552, 695, 697, 698, 699, 830, 860, 875], "freesurfer_hom": [154, 369, 840], "setupfreesurf": 154, "sh": [154, 837, 840], "folder": [154, 155, 157, 160, 169, 187, 213, 272, 275, 301, 305, 336, 374, 375, 376, 377, 379, 380, 382, 387, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 455, 456, 461, 491, 503, 607, 639, 758, 760, 834, 837, 840, 875], "my_subject": 154, "my_nifti": 154, "subfold": [154, 382], "beforehand": [154, 262, 263, 772, 810], "set_config": [154, 170, 262, 263, 372, 382, 455, 475, 476, 555, 740, 772, 789, 795, 832, 834, 850, 865, 875], "overview": [154, 155, 164, 169, 172, 173, 179, 199, 203, 205, 211, 212, 224, 238, 247, 262, 263, 264, 265, 267, 273, 351, 448, 475, 476, 521, 522, 536, 552, 555, 571, 572, 575, 576, 695, 725, 766, 772, 775, 789, 795, 811, 830, 854], "buckner40not": 154, "standalon": [154, 836, 867, 875], "10_background_freesurf": [154, 163], "landmark": [155, 219, 333, 363, 830, 850, 857, 860, 875], "t1w": [155, 310], "nifti1imag": [155, 181, 274, 277, 278, 305], "xyzt_unit": 155, "uint8": 155, "t1_mgh": 155, "mghimag": [155, 857], "draw": [155, 169, 175, 176, 200, 226, 259, 262, 263, 264, 265, 271, 407, 414, 475, 476, 554, 555, 569, 578, 695, 697, 699, 759, 765, 766, 773, 774, 776, 781, 785, 788, 794, 797, 798, 802, 804, 857, 860, 875], "ight": 155, "nterior": 155, "longest": 155, "uperior": 155, "camera": [155, 159, 264, 265, 466, 742, 756, 758, 777, 810, 875], "dens": [155, 156, 157, 159, 181, 182, 189, 242, 254, 275, 306, 563, 742, 758, 875], "dig_mri_dist": [155, 363, 865, 875], "na": [155, 239, 482, 830], "preauricular": [155, 310, 334, 830, 857], "manufactur": [155, 169, 187, 188, 189, 830, 857, 863, 875], "faq": [155, 188, 200, 206, 307, 368, 483, 583, 855], "intersect": [155, 159, 160, 183, 583, 600, 850, 875], "purpl": [155, 157, 234], "perpendicular": [155, 177, 857], "goe": [155, 159, 200, 215, 857], "upward": [155, 159, 203, 207, 742, 766], "compani": [155, 242, 677, 856], "acquir": [155, 198, 282, 283, 305, 498, 846, 851, 856, 857, 860, 875], "emit": [155, 207, 256, 262, 263, 264, 265, 267, 269, 270, 272, 273, 276, 277, 278, 282, 283, 314, 337, 346, 347, 352, 356, 359, 361, 363, 366, 367, 426, 441, 454, 457, 475, 476, 495, 555, 584, 603, 632, 634, 695, 697, 698, 699, 739, 775, 786, 821, 823, 830, 875], "coregist": [155, 305, 466], "front": [155, 264, 265, 304, 426, 742, 776, 830, 857], "magenta": 155, "1mm": 155, "anisotrop": [155, 242, 857], "incorrectli": [155, 467, 854, 875], "identity_tran": 155, "mri_voxel": [155, 323, 507, 730], "corner": [155, 190, 200, 201, 204, 216, 254, 262, 263, 264, 265, 267, 475, 476, 755, 766, 772, 780, 795, 860, 875], "inferior": [155, 159, 830], "seghead_rr": 155, "seghead_tri": 155, "read_surfac": [155, 159, 160, 268, 629, 644, 828, 850, 865, 875], "mri_to_head": 155, "scalp_pts_in_head_coord": 155, "head_to_meg": 155, "scalp_pts_in_meg_coord": 155, "vox_to_mri": 155, "get_vox2ras_tkr": [155, 159, 181], "mri_to_vox": 155, "scalp_points_in_vox": 155, "nose": [155, 206, 304], "roughli": [155, 352, 574, 832, 875], "blur": [155, 857], "fiffv_point_cardin": [155, 159, 267, 860], "fiffv_point_nas": [155, 159, 267, 860], "fiffv_coord_head": [155, 266, 267, 860], "nasion_mri": [155, 159], "nasion_vox": [155, 159], "toggl": [155, 165, 171, 190, 198, 203, 216, 262, 263, 475, 476, 555, 742, 772, 787, 789, 795, 811, 875], "radio": [155, 863], "icon": [155, 171], "fid": [155, 694], "icp": [155, 875], "finetun": 155, "inner_skul": [155, 157, 158, 160, 171, 182, 275, 632, 758, 850, 851], "outer_skul": [155, 157, 158, 160, 169, 171, 275, 758, 850, 851], "equiv": [155, 182, 183, 184, 206], "rv": [155, 182, 183, 184, 206, 851], "00349057": [155, 206], "mu1": [155, 182, 183, 184, 206], "944702": [155, 206], "lambda1": [155, 182, 183, 184, 206], "137194": [155, 206], "mu2": [155, 182, 183, 184, 206], "667435": [155, 206], "683781": [155, 206], "mu3": [155, 182, 183, 184, 206], "26548": [155, 206], "lambda3": [155, 182, 183, 184, 206], "0106058": [155, 206], "6156": 155, "2300": 155, "1904": 155, "20_source_align": [155, 163], "hsp": [156, 187, 254, 310, 323, 335, 363, 499, 609, 857, 875], "preprat": 156, "jon": [156, 242, 875], "houck": [156, 242, 875], "faveli": [156, 862, 875], "skin": [156, 157, 160, 254, 262, 263, 264, 265, 305, 363, 475, 476, 552, 695, 697, 698, 699, 830, 851, 854, 857, 875], "fit_fiduci": [156, 363], "fit_icp": [156, 363], "n_iter": [156, 363, 581], "nasion_weight": [156, 363], "omit_head_shape_point": [156, 363], "compute_dig_mri_dist": [156, 363], "write_tran": [156, 628, 865], "abil": [156, 177, 179, 194, 653, 654, 723, 726, 852, 856, 863, 875], "set_scale_mod": [156, 363], "fetch_infant_templ": [156, 158, 851, 865, 875], "scale_mri": [156, 363, 635, 865, 875], "clau": [156, 242], "plo": [156, 194, 242], "e0232100": [156, 242], "pone": [156, 194, 242], "0232100": [156, 242], "25_automated_coreg": [156, 163], "concept": [157, 175, 224, 242, 830, 858, 861], "make_watershed_bem": [157, 190, 830, 854, 865, 875], "make_flash_bem": [157, 301, 830, 865, 875], "plot_bem": [157, 159, 307, 758, 854, 857, 865, 875], "plot_bem_kwarg": 157, "brain_surfac": [157, 760], "mrilab": [157, 860], "isn": [157, 165, 221, 239, 258, 262, 377, 399, 400, 617, 620, 623, 698, 834, 854], "candid": [157, 198, 830, 856], "oct4": 157, "90mm": 157, "57798": 157, "24365": 157, "20377": 157, "32480": 157, "22941": 157, "2787": 157, "9357": 157, "20154": 157, "10797": 157, "12738": 157, "13473": 157, "10203": 157, "2362": [157, 203, 242, 555], "10376": 157, "midpoint": [157, 189, 264, 265, 760, 857, 875], "make_bem_model": [157, 160, 190, 275, 363, 426, 457, 513, 519, 603, 632, 634, 823, 850, 865, 875], "4th": [157, 197, 262, 263, 264, 265, 409, 418, 442, 443, 445, 446, 475, 476, 567, 568], "icosahedron": [157, 159, 160, 254, 269, 273, 277, 643, 800], "n_tri": [157, 159, 268, 823], "topologi": [157, 200, 542, 875], "commonli": [157, 167, 169, 174, 200, 239, 267, 465, 555, 830, 875], "gone": 157, "adequ": [157, 205, 267], "1422": [157, 168, 207], "fwd_fix": 157, "explicitli": [157, 171, 187, 194, 199, 201, 202, 203, 232, 257, 262, 263, 264, 265, 267, 272, 295, 296, 301, 308, 311, 327, 352, 356, 357, 366, 367, 368, 407, 409, 414, 423, 428, 445, 446, 450, 451, 470, 472, 473, 475, 476, 508, 533, 554, 555, 557, 570, 571, 572, 577, 581, 589, 591, 598, 600, 640, 647, 648, 649, 658, 659, 661, 663, 681, 682, 683, 684, 685, 686, 695, 697, 698, 699, 703, 704, 705, 706, 708, 726, 766, 772, 773, 776, 778, 779, 782, 791, 796, 832, 834, 850, 856, 863, 875], "src_hemi": 157, "apply_forward": [157, 283, 865, 875], "write_forward_solut": [157, 615, 865, 875], "justifi": [157, 446, 475, 476, 875], "claim": 157, "212": [157, 163, 168, 200, 216, 218, 228, 229, 242], "30_forward": [157, 163], "centimet": 158, "fs_dir": [158, 383], "live": [158, 200, 834, 875], "1005": 158, "new_nam": 158, "rstrip": 158, "fp": [158, 443, 653], "999994": 158, "003552": 158, "000202": 158, "003558": 158, "998389": 158, "056626": 158, "000001": [158, 225, 228], "998395": 158, "2433": [158, 168, 193], "7809": 158, "4190": 158, "8001": 158, "4213": 158, "6mo": [158, 385], "ants6": 158, "0months3t": 158, "come": [158, 174, 180, 187, 188, 200, 201, 203, 205, 215, 225, 239, 268, 273, 369, 498, 516, 610, 830, 832, 834, 838, 839, 851, 857, 875], "fname_1020": 158, "mon": [158, 498], "read_dig_fif": [158, 310, 323, 326, 329, 330, 331, 333, 334, 335, 857, 865, 875], "03d": [158, 492], "99975431": 158, "01839625": 158, "01236795": 158, "00087239": 158, "0143472": 158, "96230429": 158, "27159646": 158, "01252444": 158, "01689809": 158, "27135229": 158, "96233177": 158, "03137219": 158, "48640": 158, "48214": 158, "429": [158, 163, 229], "639": [158, 165, 171, 194, 229], "35_eeg_no_mri": [158, 163], "readabl": [159, 262, 263, 264, 265, 371, 409, 418, 443, 445, 446, 475, 476, 815, 834], "superior": [159, 270, 276, 278, 618, 742, 830, 857], "wide": [159, 165, 213, 834, 856], "unfamiliar": [159, 838], "unsign": [159, 269, 270, 273, 276, 277, 278, 875], "triplet": [159, 267, 451, 522, 645], "geograph": 159, "earth": 159, "north": 159, "prime": [159, 169], "meridian": 159, "degre": [159, 161, 204, 224, 226, 229, 232, 254, 259, 264, 265, 267, 301, 305, 486, 581, 648, 682, 683, 685, 686, 695, 742, 747, 778, 810, 830, 840, 854, 857, 875], "nonetheless": [159, 200], "scanner": [159, 275, 469, 851, 857], "nativ": [159, 181, 187, 188, 262, 263, 264, 265, 314, 323, 328, 437, 438, 439, 440, 475, 476, 492, 499, 609, 742, 744, 851, 854, 863, 875], "mind": [159, 161, 174, 200, 253, 834], "si": [159, 189, 224, 238, 262, 263, 264, 265, 296, 451, 475, 476, 776, 778], "xyz_ra": 159, "00000000e": 159, "15484021e": 159, "91852465e": 159, "22726395e": 159, "56816911e": 159, "57160827e": 159, "18960930e": 159, "49011647e": 159, "40284092e": 159, "00712036e": 159, "726": [159, 229], "ras_coords_mm": 159, "inv_affin": 159, "i_": [159, 187], "j_": 159, "k_": 159, "imshow_mri": 159, "ori_slic": 159, "saggit": 159, "ori_nam": 159, "set_path_effect": 159, "reorient": 159, "rightward": 159, "x_order": 159, "lip": 159, "y_order": 159, "torig": 159, "vox2ras_tkr": [159, 181], "conform": [159, 189, 256, 857, 875], "matter": [159, 169, 262, 263, 264, 265, 268, 465, 475, 476, 508, 555, 600, 695, 697, 698, 699, 776, 850, 856, 875], "freeurfer": 159, "whenev": [159, 200, 834, 852], "everywher": 159, "xyz_mri": 159, "digpoint": [159, 363, 875], "nasion_head": 159, "nasion_dig_mri": 159, "nasion_dig_vox": 159, "convention": 159, "rr_mm": 159, "313728": 159, "80481719970703": 159, "rr_vox": 159, "tricontour": 159, "renderer_kwarg": 159, "curv": [159, 194, 262, 263, 264, 265, 267, 475, 476, 656, 693, 697, 699, 857, 860], "read_curvatur": [159, 865], "y_shift": 159, "z_shift": 159, "this_rr": 159, "this_tri": 159, "copper_r": 159, "quiver3d": [159, 204, 875], "1050": 159, "wirefram": 159, "cyan": [159, 475, 476, 795], "line_width": 159, "cull": 159, "render_lines_as_tub": 159, "uniformli": [159, 190, 205, 472], "uniform": [159, 363, 428, 522, 647, 662, 685, 686, 830, 875], "subsampl": [159, 257, 260, 261, 262, 263, 264, 265, 269, 270, 273, 275, 276, 277, 278, 475, 476, 512, 571, 572, 643, 681, 695, 698, 707, 742, 850, 875], "rr_sph": 159, "mri_mni_tran": 159, "xyz_mni": 159, "02248488": 159, "00844919": 159, "03621711": 159, "00111715": 159, "07107091": 159, "91486582": 159, "40609791": 159, "02300193": 159, "00875602": 159, "43369992": 159, "02811882": 159, "03356932": 159, "land": [159, 219], "50_background_freesurfer_mn": [159, 163], "aris": [160, 197, 574], "ezemikulan": 160, "blender_freesurf": 160, "ezequiel": [160, 875], "mikulan": [160, 875], "manorama": [160, 875], "kadwani": [160, 875], "shutil": 160, "flash": [160, 275, 301, 305, 580, 758, 875], "surf_dir": 160, "problemat": [160, 188, 200, 203, 204, 208, 224, 262, 263, 272, 306, 328], "skill": [160, 834], "conv": 160, "conv_dir": 160, "makedir": 160, "exist_ok": 160, "read_metadata": [160, 626], "write_surfac": [160, 626, 629, 865, 875], "wavefront": [160, 626, 828, 875], "vert": [160, 177, 221, 239, 275], "preset": [160, 269, 270, 273, 276, 277, 278, 742, 800, 805], "beginn": [160, 836, 859], "teach": [160, 176, 242, 875], "_fix": 160, "inner_skull_fix": 160, "backup": 160, "mistak": [160, 834, 854], "inner_skull_orig": 160, "volume_info": [160, 626, 828], "vol_info": 160, "faulti": 160, "write_head_bem": [160, 865, 875], "head_dir": 160, "read_bem_surfac": [160, 512, 513, 602, 865, 875], "make_scalp_surfac": [160, 841, 865, 875], "shrinkwrap": 160, "\u2460": 160, "\u2461": 160, "\u2462": 160, "\u2464": 160, "tab": [160, 254, 466, 543, 750, 834, 852], "\u2465": 160, "\u2467": 160, "noth": [160, 183, 184, 199, 259, 262, 263, 264, 265, 271, 274, 352, 363, 407, 414, 418, 420, 475, 476, 554, 555, 569, 637, 695, 697, 699, 745, 755, 759, 774, 781, 785, 794, 797, 802, 804, 851, 860, 875], "\u2468": 160, "extrus": 160, "extrud": 160, "rough": [160, 854], "ahead": [160, 834], "kernel": [160, 189, 193, 224, 239, 242, 269, 270, 273, 276, 277, 278, 413, 648, 832, 838, 840, 854, 875], "mri_convert": [160, 857], "fwhm": [160, 711, 721, 725, 865, 875], "t1_smoothed_3": 160, "delet": [160, 170, 198, 199, 209, 256, 259, 262, 263, 264, 265, 271, 361, 407, 414, 475, 476, 554, 555, 569, 639, 695, 697, 699, 759, 781, 785, 794, 797, 802, 834, 842, 857, 875], "cleaner": [160, 200], "encount": [160, 164, 188, 200, 441, 832, 840, 854], "runtimeerror": 160, "20516": 160, "isomorph": 160, "defect": [160, 254, 306, 363, 426, 457, 603, 632, 634, 823, 854, 875], "733": [160, 229], "1014": [160, 207], "2068": 160, "7732": 160, "8435": [160, 875], "8489": 160, "10181": 160, "11120": [160, 875], "11121": 160, "11122": [160, 875], "11304": 160, "11788": 160, "disrupt": 160, "999668": 160, "wrong": [160, 833, 875], "easiest": [160, 197, 199, 201, 219, 834, 837], "unedit": 160, "gpl": 160, "water": 160, "clean_from_arrai": 160, "80_fix_bem_in_blend": [160, 163], "bb": [161, 436], "pp": [161, 262, 263, 298, 428, 677], "desc": [161, 204, 271], "66000": 161, "write_cov": [161, 604, 865, 875], "noise_cov_baselin": 161, "noise_cov_reg": 161, "1769": [161, 193], "1785": 161, "423": [161, 194, 229], "1797": 161, "freedom": [161, 204, 224, 226, 229, 232, 259, 264, 265, 466, 682, 683, 685, 686, 758, 777, 854, 875], "violat": [161, 834, 854], "hack": [161, 239], "evoked_meg": 161, "empty_room": 161, "improp": [161, 875], "overestim": [161, 202], "juha": [161, 208, 242, 583, 854], "simola": [161, 208, 242, 583, 854], "kajola": [161, 208, 242, 428, 566, 583, 854, 857], "3359": [161, 242, 854], "3372": [161, 242, 854], "tsp": [161, 203, 242, 352, 555, 854], "853302": [161, 242, 854], "90_compute_covari": [161, 163], "501": [163, 167, 201, 207, 229], "auto_tutorials_forward": 163, "638": [163, 229], "emphasi": [164, 264, 265, 776, 858], "topic": [164, 165, 188, 197, 200, 202, 242, 295, 849, 858, 859], "knowledg": [164, 239, 850, 856], "unexplain": 164, "experienc": [164, 557, 856], "troubl": [164, 875], "configur": [164, 167, 172, 173, 189, 205, 213, 229, 262, 263, 267, 355, 382, 455, 456, 466, 475, 476, 499, 533, 543, 555, 567, 568, 639, 642, 694, 737, 742, 772, 789, 795, 808, 809, 810, 832, 839, 851, 853, 854, 857, 860, 863, 865, 875], "infrar": [164, 189, 211, 212, 242, 262, 263, 264, 265, 267, 351, 436, 475, 476, 503, 552, 585, 586, 587, 589, 695, 697, 698, 699, 742, 766, 775, 780, 841, 851, 857, 875], "spectroscopi": [164, 189, 211, 212, 242, 262, 263, 264, 265, 267, 351, 436, 475, 476, 503, 552, 585, 586, 587, 589, 695, 697, 698, 699, 742, 766, 775, 780, 841, 851, 857, 875], "ssvep": [164, 169, 240, 241, 262, 267, 310, 326, 436, 485, 552, 697, 804, 865, 875], "vssr": [164, 240, 241, 262, 267, 310, 326, 436, 485, 552, 697, 804, 851], "bti": [164, 185, 186, 224, 259, 260, 262, 264, 265, 267, 300, 352, 448, 450, 486, 519, 758, 770, 857, 875], "twowai": [164, 230, 231, 262, 267, 475, 552, 610, 676, 678, 679, 683, 698, 725, 875], "anova": [164, 194, 224, 227, 230, 231, 235, 236, 262, 264, 265, 267, 273, 275, 358, 475, 521, 522, 536, 552, 610, 625, 667, 676, 677, 678, 679, 683, 686, 687, 698, 725, 742, 875], "spatiotempor": [164, 226, 230, 231, 242, 262, 264, 265, 267, 316, 475, 552, 583, 610, 675, 682, 686, 687, 698, 725, 763, 766, 875], "strf": [164, 195, 196, 413, 419, 447], "submodul": [164, 165, 197, 203, 205, 213, 219, 222, 834, 875], "corrupt": [164, 197, 198, 222, 223, 259, 262, 265, 266, 267, 268, 273, 352, 362, 448, 475, 521, 522, 536, 615, 618, 659, 662, 742, 854, 875], "auto_tutorials_python": 164, "auto_tutorials_jupyt": 164, "varieti": [165, 187, 189, 197, 213, 857], "smoothli": [165, 199, 213, 259, 262, 263, 264, 265, 271, 407, 414, 475, 476, 554, 555, 695, 697, 699, 774, 781, 785, 794, 797, 802], "substitut": [165, 369, 832, 856, 857], "glimps": [165, 213], "41700": 165, "custom_ref_appli": [165, 168, 213, 219, 267, 875], "file_id": [165, 168, 213, 262, 263, 264, 265, 267, 475, 476, 477, 860, 875], "hpi_mea": [165, 168, 213, 267, 875], "hpi_result": [165, 168, 213, 267, 875], "meas_dat": [165, 167, 168, 199, 213, 215, 219, 256, 262, 263, 264, 265, 267, 474, 475, 476, 477, 555, 584, 789, 795, 875], "utc": [165, 168, 213, 215, 262, 263, 264, 265, 267, 475, 476, 875], "meas_id": [165, 168, 213, 262, 263, 264, 265, 267, 475, 476, 477, 860, 875], "breviti": 165, "walk": [165, 203, 205], "orig_raw": 165, "chan_idx": 165, "sent": [165, 167, 189, 190, 203, 214], "deliveri": 165, "squarewav": 165, "unambigu": [165, 167], "older": [165, 167, 169, 318, 427, 475, 860, 875], "summat": [165, 167, 200, 687], "6994": 165, "7086": 165, "7192": 165, "7304": 165, "7413": 165, "ordinari": [165, 167, 198, 204, 224, 572, 576, 680, 856], "autoreject": [165, 198, 199, 841], "aren": [165, 206, 451], "fewest": 165, "conds_we_care_about": 165, "aud_epoch": 165, "vis_epoch": 165, "136": [165, 168, 170, 182, 186, 207, 224, 228, 229, 275], "richer": 165, "aud_evok": 165, "vis_evok": 165, "classic": [165, 239, 269, 270, 273, 276, 277, 278, 724, 727, 742, 800, 805], "p200": [165, 190], "dorso": 165, "evoked_diff": [165, 209], "underdetermin": 165, "akin": 165, "inverse_operator_fil": 165, "inv_oper": 165, "\u03bb\u00b2": 165, "61922423e": 165, "06837855e": 165, "49139511e": 165, "559": [165, 173, 207, 229], "10_overview": [165, 173], "obligatorili": 166, "unexpect": [166, 194, 242, 262, 263, 264, 265, 316, 352, 503, 854], "apply_funct": [166, 262, 263, 264, 265, 475, 476, 875], "unprocess": [166, 860], "original_raw": 166, "complex128": [166, 262, 263, 264, 265, 475, 476], "certain": [166, 167, 190, 197, 201, 203, 208, 238, 260, 264, 265, 382, 433, 462, 475, 476, 533, 555, 573, 584, 682, 683, 776, 808, 832, 834, 856, 857, 875], "rereferenc": [166, 239], "unaffect": [166, 201, 413], "rereferenced_raw": 166, "ref_data": [166, 640], "fig_orig": 166, "fig_reref": 166, "unless": [166, 262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 280, 352, 353, 355, 357, 407, 410, 414, 417, 420, 423, 424, 426, 431, 450, 452, 463, 465, 470, 472, 473, 475, 476, 485, 514, 517, 518, 528, 529, 533, 538, 539, 554, 555, 560, 567, 568, 583, 643, 646, 647, 648, 660, 682, 683, 684, 685, 686, 695, 697, 698, 699, 700, 701, 702, 703, 704, 705, 713, 714, 722, 723, 724, 725, 726, 732, 766, 772, 773, 774, 777, 781, 785, 789, 795, 796, 797, 834, 856, 857, 875], "15_inplac": [166, 173], "broadli": 167, "ram": [167, 197, 199, 213, 214, 215, 216, 262, 263, 475, 476, 555, 772, 789, 795, 875], "36037": [167, 197, 201, 204, 205, 206, 208, 214, 215, 216], "necessarili": [167, 169, 188, 197, 199, 202, 255, 262, 263, 295, 711, 721, 725, 751, 857], "instantan": [167, 221], "receiv": [167, 189, 428, 492, 656, 832, 857, 875], "rectangular": [167, 200, 224, 269, 270, 273, 276, 277, 278, 800, 805], "ttl": [167, 597], "upcom": 167, "newer": [167, 169, 203, 832, 837, 840, 842, 875], "27977": 167, "28345": 167, "28771": 167, "29219": 167, "29652": 167, "preced": [167, 262, 263, 358, 467, 742, 772, 830, 834, 875], "config": [167, 170, 187, 254, 255, 262, 263, 372, 374, 375, 376, 377, 379, 380, 382, 383, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 448, 449, 455, 456, 466, 475, 476, 486, 545, 555, 622, 632, 635, 639, 742, 751, 772, 789, 795, 834, 875], "mne_stim_channel": [167, 170, 255, 448, 449, 475, 476], "mne_stim_channel_1": [167, 255, 448, 449], "saver": [167, 199, 201, 852, 854], "testing_data_fold": 167, "eeglab_raw_fil": 167, "eeglab_raw": 167, "began": 167, "000068": 167, "602": [167, 201, 229, 860], "unmodifi": [167, 206, 503], "custom_map": 167, "annotations_from_ev": [167, 256, 436, 865, 875], "orig_tim": [167, 199, 215, 256, 281, 875], "annot_from_ev": 167, "event_desc": [167, 281], "rem_annot": 167, "rem_ev": 167, "rem_event_dict": 167, "modulo": 167, "onlin": [167, 198, 203, 216, 255, 846, 859, 875], "20_events_from_raw": [167, 173], "alon": [168, 846], "gantri": [168, 267, 875], "blank": [168, 213, 695, 840, 875], "subject_info": [168, 262, 263, 264, 265, 267, 475, 476, 477, 875], "device_info": [168, 262, 263, 264, 265, 267, 439, 475, 476, 477, 875], "helium_info": [168, 262, 263, 264, 265, 267, 475, 476, 477, 875], "hpi_subsystem": [168, 267], "proc_histori": [168, 262, 263, 264, 265, 267, 475, 476, 477], "proj_id": [168, 213, 262, 263, 264, 265, 267, 475, 476, 477], "proj_nam": [168, 213, 262, 263, 264, 265, 267, 475, 476, 477], "utc_offset": [168, 262, 263, 264, 265, 267, 475, 476, 477, 875], "line_freq": [168, 239, 267], "gantry_angl": [168, 267], "ctf_head_t": [168, 267, 860], "dev_ctf_t": [168, 267, 860], "acq_par": [168, 213, 255, 267], "acq_stim": [168, 267], "xplotter_layout": [168, 267], "kit_system_id": [168, 267], "0143": 168, "0142": 168, "0213": 168, "0212": [168, 333], "0222": 168, "0223": 168, "0232": 168, "0233": 168, "0313": 168, "0312": 168, "0322": 168, "0323": 168, "0333": 168, "0332": 168, "0343": 168, "0342": 168, "0413": 168, "0412": 168, "0422": 168, "0423": 168, "0432": 168, "0433": 168, "0443": 168, "0442": 168, "0513": 168, "0512": 168, "0523": [168, 242, 660], "0522": 168, "0532": 168, "0533": 168, "0542": 168, "0543": 168, "0613": 168, "0612": 168, "0622": 168, "0623": 168, "0633": 168, "0632": 168, "0643": 168, "0713": 168, "0712": 168, "0723": 168, "0722": 168, "0733": 168, "0732": 168, "0743": 168, "0742": 168, "0813": 168, "0822": 168, "0823": 168, "0913": 168, "0912": 168, "0923": 168, "0922": 168, "0932": 168, "0933": 168, "0943": 168, "1012": 168, "1023": 168, "1022": 168, "1032": 168, "1042": [168, 207, 333], "1112": 168, "1123": [168, 207], "1122": [168, 201], "1133": 168, "1132": 168, "1143": [168, 207], "1213": 168, "1212": [168, 194], "1223": 168, "1222": 168, "1232": 168, "1233": 168, "1243": 168, "1242": [168, 194], "1312": 168, "1313": 168, "1322": 168, "1343": [168, 207], "1412": 168, "1413": 168, "1423": [168, 207], "1433": 168, "1432": 168, "1442": 168, "1443": [168, 207], "1512": [168, 242, 470], "1513": 168, "1523": [168, 242, 711, 721, 722, 724, 725, 727], "1533": [168, 207], "1532": 168, "1543": 168, "1542": 168, "1612": 168, "1622": 168, "1632": 168, "1633": 168, "1642": 168, "1713": 168, "1712": 168, "1723": 168, "1732": 168, "1733": 168, "1743": 168, "1742": 168, "1813": 168, "1812": [168, 224], "1822": 168, "1823": 168, "1832": 168, "1833": 168, "1843": 168, "1912": 168, "1913": 168, "1922": 168, "1932": 168, "1933": 168, "1943": 168, "1942": 168, "2032": 168, "2033": 168, "2042": 168, "2112": 168, "2122": 168, "2133": 168, "2132": 168, "2143": [168, 242, 724, 727], "2142": 168, "2212": 168, "2213": 168, "2223": 168, "2233": 168, "2242": [168, 213], "2243": 168, "2312": 168, "2313": [168, 208], "2323": 168, "2333": [168, 549], "2343": 168, "2342": 168, "2412": 168, "2413": 168, "2422": 168, "2432": 168, "2442": 168, "2512": 168, "2513": 168, "2523": 168, "2533": 168, "2532": 168, "2543": 168, "2542": 168, "2612": 168, "2613": [168, 193], "2623": 168, "2633": 168, "bear": [168, 834, 854, 875], "scanno": [168, 267, 860], "logno": [168, 267, 860], "cal": [168, 267, 318, 474, 860], "coil_typ": [168, 267, 851], "unit_mul": [168, 267, 860], "131": [168, 207, 224, 228, 229, 333], "141": [168, 207, 229, 275], "162": [168, 194, 207, 224, 228, 229, 242, 275], "185": [168, 194, 199, 207, 224, 228, 275], "193": [168, 194, 228, 875], "206": [168, 173, 224, 228, 229], "209": [168, 183, 200, 207, 224, 228, 229, 242], "215": [168, 173, 207, 229, 242, 570], "218": [168, 200, 228, 229, 242], "224": [168, 170, 187, 198, 212, 224, 228], "228": [168, 207, 224, 229, 242, 570], "229": [168, 207, 224, 228, 229], "231": [168, 228, 229], "233": [168, 228], "237": [168, 194, 224, 229], "251": [168, 207, 210, 224, 475, 476], "268": [168, 184, 190, 194, 224], "278": [168, 207, 224, 229], "279": [168, 201, 229, 242, 555, 724, 727], "282": [168, 207, 224, 229], "287": [168, 229], "292": [168, 207, 224], "294": [168, 207], "296": [168, 194, 207, 224, 229], "308": [168, 229], "322": [168, 207, 229], "329": [168, 229], "oxyhemoglobin": [168, 262, 263, 264, 265, 475, 476, 552, 695, 697, 698, 699, 830, 857], "deoxyhemoglobin": [168, 189, 262, 263, 264, 265, 475, 476, 552, 695, 697, 698, 699, 830, 857], "hbo": [168, 189, 209, 213, 219, 262, 263, 264, 265, 309, 368, 370, 475, 476, 552, 695, 697, 698, 699, 830, 857], "hbr": [168, 189, 209, 213, 219, 262, 263, 264, 265, 309, 368, 370, 475, 476, 552, 695, 697, 698, 699, 830, 857], "express": [168, 198, 424, 436, 483, 490, 497, 530, 549, 574, 601, 618, 709, 856, 857, 860, 875], "pick_channels_regexp": [168, 198, 203, 205, 210, 546, 865], "unawar": 168, "accident": [168, 215, 660, 875], "channel_typ": [168, 203, 262, 263, 264, 265, 267, 475, 476, 555, 695, 697, 698, 699, 865], "emb": 168, "comprehens": [168, 194, 213, 224, 226, 407, 834, 856], "channel_indices_by_typ": [168, 865], "ch_idx_by_typ": 168, "exci": [168, 213, 262, 263, 264, 265, 309, 475, 476, 552, 695, 697, 698, 699, 857], "ia": [168, 213, 262, 263, 264, 265, 267, 309, 475, 476, 552, 695, 697, 698, 699, 857, 875], "syst": [168, 213, 262, 263, 264, 265, 309, 475, 476, 552, 695, 697, 698, 699, 857], "bio": [168, 219, 262, 263, 264, 265, 309, 370, 440, 475, 476, 490, 552, 695, 697, 698, 699, 857], "temperatur": [168, 262, 263, 264, 265, 309, 475, 476, 552, 695, 697, 698, 699, 830, 851, 857, 875], "gsr": [168, 262, 263, 264, 265, 309, 475, 476, 552, 695, 697, 698, 699, 857, 875], "fnirs_cw_amplitud": [168, 189, 209, 262, 263, 264, 265, 368, 475, 476, 830], "fnirs_fd_ac_amplitud": [168, 189, 262, 263, 264, 265, 368, 475, 476, 830], "fnirs_fd_phas": [168, 189, 262, 263, 264, 265, 368, 475, 476, 830], "fnirs_od": [168, 262, 263, 264, 265, 368, 475, 476, 830], "eeg_indic": 168, "ipython": [168, 262, 263, 475, 476, 555, 772, 789, 795, 832, 845, 854, 856, 858], "30_info": [168, 173], "mplot3d": [169, 204, 224], "axes3d": [169, 204, 224, 260, 262, 263, 264, 265, 475, 476, 770, 798, 875], "plai": [169, 203, 221, 239, 723, 726, 856, 857], "eeg_posit": 169, "builtin_montag": 169, "montage_nam": 169, "montage_descript": 169, "standard_alphabet": 169, "a1": [169, 206], "b2": 169, "standard_postfix": 169, "postfix": 169, "intermedi": [169, 198, 268, 287, 289, 681, 742, 857], "standard_prefix": 169, "standard_prim": 169, "biosemi16": [169, 224], "biosemi": [169, 224, 336, 483, 857], "cap": [169, 194, 224, 830, 851, 875], "biosemi32": [169, 224], "biosemi64": [169, 224], "biosemi160": 169, "biosemi256": 169, "easycap": [169, 224, 239, 875], "m10": [169, 875], "egi_256": 169, "geodes": [169, 465, 508, 665, 666, 667, 669, 670, 875], "gsn": [169, 439], "hydrocel": [169, 439], "64_1": 169, "65_1": 169, "mgh60": [169, 875], "mgh70": [169, 875], "brainvis": [169, 328, 329, 436, 440, 475, 476, 485, 601, 851, 857, 875], "artini": [169, 189, 326, 875], "octamon": [169, 189, 875], "detector": [169, 189, 209, 213, 498, 588, 589, 742, 758, 857, 875], "brite23": [169, 875], "brainproduct": 169, "rnp": 169, "ba": [169, 442, 857, 875], "easycap_montag": 169, "digmontag": [169, 181, 262, 263, 264, 265, 267, 313, 314, 323, 326, 328, 329, 330, 331, 332, 333, 334, 335, 363, 459, 475, 476, 487, 792, 812, 815, 830, 865, 875], "headshap": [169, 254, 303, 310, 323, 335, 875], "gca": 169, "view_init": [169, 204, 224], "azim": [169, 204], "ssvep_fold": 169, "ssvep_data_raw_path": 169, "se": [169, 199, 210, 239, 857], "02_se": [169, 239], "ssvep_eeg": [169, 239], "ssvep_raw": 169, "read_raw_brainvis": [169, 188, 239, 481, 857, 865, 875], "circumfer": 169, "t4": 169, "t3": [169, 318, 475, 875], "075": 169, "sample_data_raw_path": 169, "sample_raw": 169, "ax2d": 169, "add_subplot": [169, 224], "ax3d": 169, "irregular": [169, 854, 875], "fastrak": 169, "predefin": [169, 830], "layout_dir": 169, "iterdir": 169, "IN": 169, "ctf151": [169, 224, 336], "lai": [169, 504, 857, 875], "ctf275": [169, 224, 336], "eeg1005": [169, 336], "egi256": [169, 336], "geodesicheadweb": [169, 336], "AS": [169, 336], "umd": [169, 224, 336], "neuromag_122": [169, 336], "grad_norm": [169, 336], "magneswh3600": [169, 336, 486], "biosemi_layout": 169, "make_eeg_layout": [169, 319, 325, 865], "layout_from_raw": 169, "make_meg_layout": 169, "snugli": 169, "40_sensor_loc": [169, 173], "suit": [170, 846], "get_config": [170, 382, 639, 865, 875], "unnam": 170, "mne_use_cuda": [170, 372, 832], "json": [170, 456], "unset": [170, 262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 280, 352, 353, 355, 357, 410, 417, 420, 423, 424, 450, 463, 465, 475, 476, 514, 517, 518, 528, 529, 538, 539, 560, 567, 568, 643, 646, 647, 648, 660, 682, 683, 684, 685, 686, 697, 699, 700, 701, 702, 703, 704, 705, 713, 714, 722, 723, 724, 725, 726, 774, 777, 796, 832, 875], "typeerror": [170, 175, 766, 875], "err": [170, 202, 342], "nonetyp": 170, "unsur": [170, 201, 834], "fallback": [170, 262, 263, 475, 476, 772, 795, 856, 875], "missing_config_kei": 170, "mne_browse_raw_s": 170, "979166666666666": 170, "mne_datasets_brainstorm_path": 170, "mne_datasets_eegbci_path": [170, 377, 382], "mne_datasets_epilepsy_ecog_path": [170, 379], "mne_datasets_erp_core_path": [170, 380], "mne_datasets_fieldtrip_cmc_path": 170, "mne_datasets_fnirs_motor_path": [170, 387], "mne_datasets_hf_sef_path": [170, 389], "mne_datasets_kiloword_path": [170, 390], "mne_datasets_limo_path": [170, 391], "mne_datasets_misc_path": [170, 392], "mne_datasets_mtrf_path": [170, 393], "mne_datasets_multimodal_path": [170, 394], "mne_datasets_opm_path": 170, "mne_datasets_phantom_4dbti_path": [170, 396], "mne_datasets_refmeg_noise_path": [170, 397], "mne_datasets_sample_path": [170, 382, 398], "mne_datasets_somato_path": [170, 401], "mne_datasets_spm_face_path": 170, "mne_datasets_ssvep_path": [170, 403], "mne_datasets_testing_path": 170, "mne_datasets_ucl_opm_auditory_path": [170, 404], "mne_logging_level": [170, 642], "mne_3d_option_multi_sampl": [170, 832, 875], "mne_3d_option_them": [170, 742, 875], "mne_browser_them": [170, 262, 263, 475, 476, 555, 772, 789, 795, 875], "mne_browser_precomput": [170, 262, 263, 475, 476, 555, 772, 789, 795], "mne_browser_backend": [170, 262, 263, 475, 476, 555, 772, 789, 795, 875], "mne_browser_overview_mod": [170, 262, 263, 475, 476, 555, 772, 789, 795], "hidden": [170, 171, 262, 263, 475, 476, 555, 742, 772, 789, 795, 875], "recogn": [170, 205, 490, 856, 875], "mne_3d_option_antialia": [170, 808, 832, 875], "mne_3d_option_depth_peel": [170, 808], "mne_3d_option_smooth_shad": [170, 751, 808], "mne_browser_use_opengl": [170, 262, 263, 475, 476, 555, 772, 789, 795, 875], "mne_cache_dir": 170, "mne_coreg_advanced_rend": 170, "mne_coreg_copy_annot": 170, "mne_coreg_fullscreen": [170, 466], "mne_coreg_guess_mri_subject": 170, "mne_coreg_head_high_r": [170, 466], "mne_coreg_head_opac": [170, 466], "mne_coreg_head_insid": 170, "mne_coreg_interact": 170, "mne_coreg_mark_insid": 170, "mne_coreg_prepare_bem": 170, "mne_coreg_orient_to_surfac": 170, "mne_coreg_scale_label": 170, "mne_coreg_scale_by_dist": 170, "mne_coreg_scene_scal": 170, "mne_coreg_window_height": 170, "mne_coreg_window_width": [170, 466], "mne_coreg_subjects_dir": 170, "mne_cuda_devic": [170, 875], "mne_cuda_ignore_precis": 170, "mne_datasets_megsim_path": 170, "mne_datasets_spm_face_datasets_test": 170, "mne_datasets_visual_92_categories_path": [170, 405], "mne_force_seri": 170, "mne_kit2fiff_stim_channel": 170, "mne_kit2fiff_stim_channel_cod": 170, "mne_kit2fiff_stim_channel_slop": 170, "mne_kit2fiff_stim_channel_threshold": 170, "mne_memmap_min_s": 170, "mne_repr_html": [170, 875], "mne_skip_ftp_test": 170, "mne_skip_network_test": 170, "mne_skip_testing_dataset_test": 170, "mne_tqdm": [170, 875], "mne_use_numba": 170, "misspel": 170, "mnee_use_cuudaa": 170, "intro": [170, 171, 239], "50_configure_mn": [170, 173], "runtimewarn": [170, 739], "unrecogn": [170, 262, 263, 264, 265, 267, 475, 476, 875], "concern": [170, 202, 224, 494, 574, 608, 612], "userprofil": [170, 456], "linux": [170, 694, 833, 834, 835, 837, 839, 840, 842, 875], "maco": [170, 834, 835, 837, 838, 839, 875], "get_config_path": [170, 865, 875], "home_dir": [170, 455, 456, 639], "use_env": [170, 455], "set_env": [170, 639, 875], "python_env": [170, 203], "minimal_cmd": 170, "usr": [170, 694, 840, 845], "sbin": 170, "statement": [170, 171, 224, 641, 840], "fresh": 170, "me": [170, 690], "worrisom": 170, "set_log_level": [170, 641, 740, 865], "temporarili": [170, 204, 205, 262, 263, 264, 265, 373, 409, 445, 475, 476, 555, 772, 789, 795], "kit_data_path": 170, "abspath": 170, "use_log_level": [170, 237, 865], "432": [170, 207, 229], "496": [170, 207, 229, 275], "meg160": 170, "v2r004": 170, "160ch": 170, "jan24": 170, "eq1160c": 170, "dewar": 170, "fll": 170, "board": 170, "adc": [170, 188], "alloc": [170, 682, 683, 685, 686], "shorthand": 170, "whatev": [170, 206, 475, 476, 698, 834], "hasn": [170, 567, 875], "sys_info": [170, 272, 832, 833, 854, 865, 875], "stdout": [170, 641, 694, 875], "platform": [170, 262, 263, 264, 265, 475, 476, 694, 697, 699, 795, 833, 837, 842, 846, 863], "aw": [170, 253, 694], "x86_64": [170, 694, 833, 840], "glibc2": [170, 694, 833], "nov": [170, 298], "gcc": [170, 694, 833], "cpu": [170, 262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 280, 352, 353, 355, 357, 410, 417, 419, 420, 423, 424, 450, 463, 465, 475, 476, 514, 517, 518, 528, 529, 538, 539, 555, 560, 567, 568, 583, 643, 646, 647, 648, 660, 682, 683, 684, 685, 686, 694, 697, 699, 700, 701, 702, 703, 704, 705, 713, 714, 722, 723, 724, 725, 726, 772, 774, 777, 789, 795, 796, 832, 833], "gb": [170, 694, 832, 833, 840], "dev0": [170, 694, 833], "openbla": [170, 694, 833, 854], "thread": [170, 234, 262, 263, 475, 476, 555, 772, 789, 795, 857], "agg": 170, "numba": [170, 694, 833, 875], "openmeeg": [170, 513, 518, 875], "cupi": [170, 262, 263, 264, 265, 409, 413, 418, 445, 446, 447, 475, 476, 694, 832, 833, 875], "opengl": [170, 254, 262, 263, 466, 475, 476, 555, 694, 772, 789, 795, 832, 840, 846], "mesa": [170, 466, 694, 808, 875], "llvmpipe": [170, 694, 832], "llvm": [170, 694, 832], "ipyvtklink": [170, 863], "vtk": [170, 406, 694, 742, 757, 832, 833, 875], "qtpy": [170, 694, 833], "pyqt6": 170, "ipympl": 170, "pyqtgraph": [170, 262, 263, 475, 476, 555, 694, 772, 789, 795, 875], "pooch": [170, 382, 694, 875], "mne_nir": 170, "mne_featur": 170, "mne_qt_brows": [170, 262, 263, 475, 476, 555, 772, 789, 795, 875], "mne_icalabel": 170, "835": [170, 173, 194, 229], "shell": [171, 182, 208, 242, 254, 512, 519, 833, 834, 839, 840, 841, 854, 857], "deploi": [171, 854], "browser": [171, 190, 213, 254, 262, 263, 272, 475, 476, 543, 555, 750, 754, 772, 789, 795, 811, 814, 834, 875], "tempfil": 171, "ndimag": 171, "raw_tsss": [171, 254, 475, 476, 495], "_eeg": [171, 254, 475, 476, 875], "_ieeg": [171, 254, 475, 476, 875], "underscor": [171, 199, 203, 213, 555], "parse_fold": [171, 272, 875], "add_raw": [171, 272, 875], "slider": [171, 264, 265, 272, 781, 832, 875], "scrub": 171, "report_raw": 171, "jqueri": 171, "bundl": [171, 837, 839, 875], "tableexport": 171, "highlightj": 171, "atom": 171, "meaning": [171, 214, 271, 637, 834], "events_path": 171, "report_ev": 171, "add_epoch": [171, 272, 875], "fly": [171, 226, 262, 263, 475, 476, 728, 740, 772, 795, 875], "make_metadata": [171, 865, 875], "report_epoch": 171, "add_evok": [171, 272], "n_time_point": [171, 272], "evoked_path": 171, "cov_path": 171, "evokeds_subset": 171, "report_evok": 171, "add_covari": [171, 272], "report_cov": 171, "ecg_proj_path": 171, "eog_proj_path": 171, "sample_audvis_eog": [171, 854], "report_proj": 171, "998": [171, 183, 190, 207, 208, 229, 568, 572, 576, 579], "add_ica": [171, 272, 875], "inst": [171, 203, 254, 256, 260, 261, 262, 263, 264, 265, 267, 269, 270, 272, 273, 276, 277, 278, 279, 310, 312, 356, 407, 408, 410, 411, 413, 414, 415, 416, 417, 419, 420, 421, 466, 475, 476, 554, 555, 556, 563, 564, 573, 577, 582, 598, 637, 640, 649, 680, 695, 697, 698, 699, 725, 726, 727, 785, 786, 787, 789, 796, 875], "ecg_evok": [171, 203, 205, 272], "eog_evok": [171, 202, 203, 205, 272], "artifactu": [171, 197, 200, 203, 242, 555], "find_bads_ecg": [171, 203, 272, 555, 875], "ecg_scor": [171, 203, 272], "liber": 171, "eog_compon": 171, "report_ica": 171, "add_bem": [171, 272, 875], "th": [171, 262, 555, 652, 655, 657, 698, 854, 857], "report_mri_and_bem": 171, "add_tran": [171, 272, 875], "opaqu": [171, 272, 466, 875], "trans_path": 171, "report_coregistr": 171, "add_forward": [171, 272, 742, 875], "fwd_path": 171, "report_forward_sol": 171, "add_inverse_oper": [171, 272], "inverse_op_path": 171, "report_inverse_op": 171, "add_stc": [171, 272, 875], "report_inverse_sol": 171, "01632618": 171, "06303297": 171, "63565434": 171, "add_cod": [171, 272], "syntax": [171, 272, 834, 857], "snippet": [171, 232, 272, 854], "liter": [171, 272, 857], "mne_init_py_path": 171, "__init__": [171, 544], "mne_init_py_cont": 171, "read_text": 171, "utf": [171, 491, 601, 607, 875], "report_cod": 171, "add_figur": [171, 272, 875], "caption": [171, 272, 875], "num": [171, 238], "sky": 171, "image_format": [171, 254, 272, 875], "report_custom_figur": 171, "fig_1": 171, "ax_1": 171, "ax_2": 171, "report_custom_figure_sect": 171, "intuit": [171, 194, 239, 408, 423, 653, 654], "logo": [171, 875], "mne_logo_path": 171, "mne_icon": 171, "fig_arrai": 171, "rotation_angl": 171, "fig_array_rot": 171, "mneqtbrows": [171, 262, 263, 475, 476, 555, 772, 789, 795], "fun": [171, 262, 263, 264, 265, 475, 476], "768": [171, 182, 229], "9176882624364033": 171, "photo": 171, "sketch": 171, "add_imag": [171, 272, 875], "jpeg": [171, 272], "gif": [171, 272, 742, 875], "svg": [171, 254, 272, 875], "report_custom_imag": 171, "add_": 171, "dropdown": [171, 875], "hide": [171, 215, 237, 875], "checkbox": [171, 875], "report_tag": 171, "hdf5": [171, 269, 270, 272, 276, 278, 286, 299, 544, 554, 593, 623, 695, 696, 697, 698, 699, 715, 716, 717, 728, 817, 818, 838, 854, 875], "report_parti": 171, "amend": [171, 330], "report_from_disk": 171, "open_report": [171, 272, 865, 875], "report_fin": 171, "invok": [171, 254, 755, 840, 875], "barebon": [171, 254], "render_bem": [171, 272, 875], "raw_butterfli": [171, 272], "report_parse_folder_bas": 171, "raw_psd": [171, 272, 875], "refin": [171, 274, 318, 358], "report_parse_folder_raw_psd_proj": 171, "mri_decim": [171, 254, 272], "report_parse_folder_mri_bem": 171, "temporarydirectori": 171, "n_time_points_evok": [171, 272], "report_parse_folder_evok": 171, "tmp": 171, "tmpb6oxvppm": 171, "info_fnam": [171, 272], "report_parse_folder_cov": 171, "add_html": [171, 272, 875], "remind": [171, 555, 834], "my_html": 171, "ol": [171, 680, 863, 875], "manifest": [171, 201, 202, 203, 205, 830], "n1": 171, "report_add_html": 171, "073": [171, 173, 242, 415], "70_report": [171, 173], "892": [173, 229], "auto_tutorials_intro": 173, "volsourceestim": [174, 179, 180, 269, 270, 273, 274, 276, 278, 287, 289, 290, 291, 292, 293, 294, 510, 517, 522, 523, 524, 525, 526, 528, 538, 623, 636, 830, 865, 875], "mixedsourceestim": [174, 270, 273, 276, 277, 278, 623, 830, 865, 875], "carri": [174, 197, 203, 239, 483, 676], "belong": [174, 267, 268, 272, 617, 672, 741, 742, 860], "shape_lh": 174, "is_equ": 174, "suspect": 174, "nth": [174, 203, 257, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 571, 572, 695, 698], "peak_vertex": 174, "vert_as_index": [174, 179, 269, 270, 273, 276, 277, 278], "peak_vertex_surf": 174, "peak_valu": 174, "logic": [174, 226, 229, 262, 263, 264, 265, 267, 466, 475, 476, 477, 555, 574, 860, 875], "lh_coordin": 174, "rh_coordin": 174, "10_stc_class": [174, 186], "gist": [175, 188, 262, 263, 264, 265, 475, 476, 854], "load_mni152_templ": 175, "fname_av": 175, "fname_surf_lh": 175, "n100m": 175, "evoked_ful": 175, "posixpath": [175, 180], "7283": 175, "6941": 175, "5323": 175, "2659": 175, "0605": 175, "7276": 175, "4483": 175, "mni_po": 175, "to_mni": [175, 260, 875], "mri_po": 175, "to_mri": [175, 260, 875], "best_dip_idx": 175, "to_volume_label": [175, 260, 875], "fig_t1": 175, "cut_coord": 175, "fig_templ": 175, "pred_evok": 175, "inf": [175, 190, 197, 220, 262, 263, 264, 265, 280, 412, 472, 473, 475, 476, 506, 568, 695, 697, 699, 700, 702, 703, 705, 713, 714, 750, 796, 802, 875], "best_idx": 175, "best_tim": 175, "conf": [175, 260, 834], "plot_param": 175, "0f": [175, 264, 265, 777], "20_dipole_fit": [175, 186], "dip_fix": 175, "7509": 175, "6603": 175, "jukka": [175, 177, 242, 875], "sarva": [175, 242], "electromagnet": [175, 177, 197, 205, 208, 221, 242, 295, 296, 428, 522, 566, 583, 830, 857], "biomagnet": [175, 242], "200m": 176, "500m": 176, "fig_cov": [176, 259, 767], "fig_spectra": 176, "1705": [176, 179], "1468": 176, "1574": [176, 207], "write_inverse_oper": [176, 536, 865, 875], "6837": 176, "16026e": 176, "set_color": [176, 182], "98df81": [176, 182], "vertno_max": 176, "time_max": [176, 177], "30_mne_dspm_loreta": [176, 186], "left_auditori": 177, "dip_po": 177, "dip_ori": 177, "dip_len": 177, "dip_tim": 177, "rgb": [177, 269, 270, 273, 276, 277, 278, 460, 465, 742, 758, 761, 800, 805, 806], "actual_amp": [177, 182, 184], "actual_gof": [177, 182, 184], "outward": [177, 260, 270, 276, 278, 363, 770, 854], "moment": [177, 179, 267, 270, 276, 278, 316, 340, 342, 343, 344, 428, 565, 566, 574, 583, 805], "06165525": 177, "70033915": 177, "34794621": 177, "inward": [177, 854], "curvatur": [177, 269, 270, 273, 276, 277, 278, 693, 742, 800, 805, 860, 875], "collaps": [177, 272, 429], "brain_mag": 177, "overlay_alpha": [177, 270, 276, 278, 805], "2188": 177, "44205e": 177, "79973942": 177, "38378769": 177, "8347911": 177, "somewhat": [177, 197], "strai": 177, "unrestrict": 177, "brain_loos": 177, "03844879": 177, "68532258": 177, "12541436": 177, "risto": [177, 204, 205, 242, 522, 857], "ilmoniemi": [177, 204, 205, 242, 522, 857], "knuutila": [177, 242], "olli": [177, 242], "lounasmaa": [177, 242], "noninvas": [177, 242], "modern": [177, 187, 242, 383, 832, 857, 859, 875], "revmodphi": [177, 242], "fa": [177, 242, 533, 652, 657], "hsuan": [177, 242, 533, 652, 657], "lin": [177, 193, 242, 413, 533, 652, 657], "belliveau": [177, 242, 522, 533, 652, 657], "20155": [177, 242], "35_dipole_orient": [177, 186], "variant": [178, 188, 460, 566, 832, 875], "1498464098687909": [178, 180], "037797": 178, "65922": 178, "72259e": 178, "28047949e": 178, "72734061e": 178, "97200565e": 178, "56295843": 178, "27742998": 178, "00597191": 178, "65359441": 178, "22223215": 178, "63030546": 178, "eigen": [178, 268, 672], "34003429e": 178, "79067976e": 178, "93243713e": 178, "61893": 178, "8713e": 178, "81398589e": 178, "00293217e": 178, "59049572e": 178, "79225614": 178, "45181117": 178, "88420763": 178, "65906465": 178, "114468": 178, "42240231": 178, "41240751e": 178, "15338772e": 178, "80101709e": 178, "664": [178, 186, 207], "40_mne_fixed_fre": [178, 186], "britta": [179, 242, 862, 875], "westner": [179, 242, 862, 875], "wstnr": 179, "apply_lcmv": [179, 287, 289, 292, 293, 294, 865, 875], "linearli": [179, 204, 208, 242, 291, 292, 293, 294, 295, 296, 830, 854], "ingredi": 179, "valuabl": [179, 857], "gaug": 179, "incorpor": [179, 224, 229, 318, 431, 440, 475, 476, 560, 834, 857, 863, 875], "stabl": [179, 200, 202, 242, 257, 295, 296, 339, 446, 474, 475, 476, 543, 555, 565, 751, 834, 840, 854], "rule": [179, 197, 201, 242, 555, 857], "thumb": [179, 197, 201, 555, 851], "advic": [179, 834], "defici": [179, 366, 555, 857, 875], "misrepres": 179, "3757": [179, 180], "inher": [179, 188, 229, 424], "somehow": [179, 181, 203], "nai": [179, 295, 296, 875], "switch": [179, 182, 183, 200, 207, 221, 242, 254, 268, 273, 347, 475, 476, 832, 834, 840, 860, 875], "invari": [179, 295, 296], "filters_vec": 179, "apply_lcmv_raw": [179, 291, 292, 293, 865, 875], "apply_lcmv_epoch": [179, 269, 270, 273, 276, 277, 278, 291, 292, 294, 865, 875], "087": 179, "stat_map": [179, 277, 278, 806], "5184": 179, "glass_brain": [179, 180, 277, 278, 806, 875], "022485": [179, 180], "008449": [179, 180], "036217": [179, 180], "071071": [179, 180], "914866": [179, 180], "406098": [179, 180], "008756": [179, 180], "433700": [179, 180], "028119": [179, 180], "plotter": [179, 262, 263, 555, 742, 744, 772, 789, 852, 875], "peak_vox": 179, "ori_label": 179, "sourcemorph": [179, 277, 278, 358, 624, 806, 838, 865, 875], "fname_fs_src": 179, "stc_f": [179, 180], "085": 179, "17352": 179, "barri": [179, 200, 202, 203, 242, 295, 296, 554, 569], "veen": [179, 242, 295, 296], "wim": [179, 242, 295, 296], "drongelen": [179, 242, 295, 296], "mosh": [179, 242, 295, 296], "yuchtman": [179, 242, 295, 296], "akifumi": [179, 242, 295, 296], "suzuki": [179, 242, 295, 296], "867": [179, 193, 194, 196, 242, 295, 296], "623056": [179, 242, 295, 296], "brook": [179, 242, 849, 875], "jiri": [179, 242], "vrba": [179, 242], "clair": [179, 242, 875], "stevenson": [179, 242], "gareth": [179, 210, 242, 851], "barn": [179, 210, 242, 851], "arjan": [179, 242], "hillebrand": [179, 242], "morri": [179, 242], "optimis": [179, 242], "1788": [179, 242], "sarang": [179, 242, 863], "dalal": [179, 242, 863], "vladimir": [179, 224, 242, 688, 689], "litvak": [179, 224, 242, 688, 689], "oostenveld": [179, 229, 242, 682, 683, 685, 686, 875], "mathij": [179, 242], "schoffelen": [179, 242], "118789": [179, 242], "50_beamformer_lcmv": [179, 186], "flatmap": [180, 269, 273, 277, 742, 800, 875], "mpl_fig": 180, "94880328959697": 180, "84640986879091": 180, "649601096532322": 180, "5653": 180, "67635542": 180, "11717401": 180, "19136023": 180, "atlas": [180, 644, 875], "get_volume_labels_from_aseg": [180, 865, 875], "label_tc": [180, 269, 270, 273, 276, 277, 278, 441], "lidx": 180, "arrowstyl": [180, 193], "set_vis": 180, "grain": [180, 875], "loci": 180, "stc_back": 180, "labels_to_stc": [180, 865, 875], "6210": 180, "69834054": 180, "98871778": 180, "62206532": 180, "70708526": 180, "36619556": 180, "64056812": 180, "6864": 180, "976": [180, 186], "631": [180, 182, 186, 229], "60_visualize_stc": [180, 186], "read_custom_montag": [181, 189, 262, 263, 264, 265, 267, 326, 475, 476, 865, 875], "reconstrct": 181, "elc": [181, 328, 875], "synthes": [181, 187, 301, 305, 499, 575, 875], "fname_t1_electrod": 181, "sample_eeg_mri": 181, "t1_electrod": 181, "fname_mon": 181, "sample_mri_montag": 181, "ras_mni_t": [181, 734], "read_ras_mni_t": [181, 865], "mni_affin": 181, "img_mni": 181, "hot_black_bon": 181, "black_bg": 181, "resampling_interpol": 181, "pos_vox": 181, "fname_t1": 181, "vox2mri_t": 181, "pos_mri": [181, 260], "tkmedit": [181, 840, 857], "dig_montag": 181, "head_siz": [181, 326, 328], "99930957": 181, "00998471": 181, "03578661": 181, "00316747": 181, "01275917": 181, "81240435": 181, "58295487": 181, "00685511": 181, "03489383": 181, "58300899": 181, "81171605": 181, "02888406": 181, "812404": 181, "582955": 181, "583009": 181, "3252": 181, "3250": 181, "1844": 181, "3223": 181, "4097": [181, 200], "1807": 181, "040598": 181, "157084": 181, "86184": 181, "24877e": 181, "17591891": 181, "939572": 181, "86348066": 181, "70_eeg_mri_coord": [181, 186], "fetch_phantom": [182, 427, 865, 875], "planor": 182, "meg1933": 182, "meg2421": 182, "645": [182, 229], "7936": 182, "bmax": [182, 254], "ring": [182, 200, 442, 444, 875], "otaniemi": [182, 386, 427, 851, 875], "phantom_otaniemi": 182, "00365867": [182, 183, 184], "944092": [182, 183, 184], "138723": [182, 183, 184], "665896": [182, 183, 184], "684544": [182, 183, 184], "132233": [182, 183, 184], "0128974": [182, 183, 184], "plot_evoked_whit": [182, 264, 265, 776, 865, 875], "t_peak": 182, "32640": 182, "32639": 182, "55367811e": 182, "90213143e": 182, "55347147e": 182, "28605719e": 182, "96728167e": 182, "86739464e": 182, "38610872e": 182, "82304534e": 182, "48308374e": 182, "31818228e": 182, "16854987e": 182, "00130181e": 182, "01608756e": 182, "05724640e": 182, "66791928e": 182, "36603176e": 182, "50599819e": 182, "82644670e": 182, "99846050e": 182, "93593540e": 182, "60183041e": 182, "976295": 182, "211976": 182, "043756": 182, "206488": 182, "972764": 182, "105326": 182, "064891": 182, "093794": 182, "993475": 182, "729": [182, 183, 184, 229], "actual_ori": 182, "rad2deg": 182, "arcco": 182, "dip_tru": [182, 184], "80_brainstorm_phantom_elekta": [182, 186], "phantomctf": 183, "bst_phantom_ctf": 183, "phantom_200ua_20150709_01": 183, "dip_freq": 183, "phantom_20ua_20150603_03": 183, "erm_path": 183, "emptyroom_20150709_01": 183, "24000": 183, "23999": 183, "hdac006": 183, "zeros_lik": [183, 193], "ones_lik": [183, 226, 227], "tsss": [183, 264, 267, 475, 495, 583, 591, 613, 875], "apply_gradient_compens": [183, 187, 475, 476, 857, 875], "un": [183, 201, 204, 208, 216, 475, 476, 531, 532, 795, 857], "mf_kwarg": 183, "st_durat": [183, 208, 574, 583], "021666666666666667": 183, "458": [183, 229], "catch_warn": 183, "simplefilt": 183, "60000": 183, "99596855e": 183, "57828787e": 183, "09548814e": 183, "44821628e": 183, "22550465e": 183, "07831245e": 183, "16519699e": 183, "85599860e": 183, "24819011e": 183, "19149506e": 183, "49201625e": 183, "90435099e": 183, "37114004e": 183, "52368814e": 183, "95491435e": 183, "09260032e": 183, "84849095e": 183, "02461913e": 183, "40860739e": 183, "15627312e": 183, "58591259e": 183, "999939": 183, "002039": 183, "010868": 183, "001115": 183, "959234": 183, "282612": 183, "011001": 183, "282607": 183, "959173": 183, "expected_po": 183, "array_str": 183, "85_brainstorm_phantom_ctf": [183, 186], "4dbti": 184, "badier": [184, 242, 655], "marseil": [184, 851], "franc": 184, "phantom_4dbti": [184, 851, 865, 875], "rfhp1": 184, "0hz": 184, "a173": 184, "a213": 184, "a232": 184, "not_and": [184, 255, 448, 610, 875], "hs_file": [184, 187, 486], "13599": 184, "20053968578577042": 184, "6576": 184, "6575": 184, "50691838e": 184, "61763336e": 184, "91409625e": 184, "91576159e": 184, "16898444e": 184, "75585208e": 184, "47442194e": 184, "45272203e": 184, "55529894e": 184, "46448717e": 184, "88484744e": 184, "05130802e": 184, "14443569e": 184, "70955369e": 184, "39503671e": 184, "16681391e": 184, "65491197e": 184, "24338008e": 184, "53281664e": 184, "47448228e": 184, "78257781e": 184, "975564": 184, "033891": 184, "217085": 184, "044586": 184, "998011": 184, "044560": 184, "215143": 184, "053150": 184, "975135": 184, "43530566e": 184, "00499851e": 184, "47056513e": 184, "49717001e": 184, "01651220e": 184, "39837298e": 184, "09320996e": 184, "53068976e": 184, "44272962e": 184, "07218608e": 184, "57916869e": 184, "24522939e": 184, "45459681e": 184, "19250060e": 184, "30544307e": 184, "26518629e": 184, "97497347e": 184, "82472005e": 184, "37787240e": 184, "96791371e": 184, "70423989e": 184, "975554": 184, "034041": 184, "217109": 184, "044503": 184, "998063": 184, "043482": 184, "215208": 184, "052081": 184, "975178": 184, "58999814e": 184, "84421337e": 184, "28166457e": 184, "67818745e": 184, "17428979e": 184, "76211498e": 184, "09542089e": 184, "22401648e": 184, "04141267e": 184, "15865669e": 184, "76599754e": 184, "17446488e": 184, "49708010e": 184, "60822410e": 184, "73060305e": 184, "05814038e": 184, "01071067e": 184, "20173942e": 184, "25861185e": 184, "85502070e": 184, "47521229e": 184, "975577": 184, "033678": 184, "217061": 184, "044611": 184, "997960": 184, "045666": 184, "215080": 184, "054233": 184, "975089": 184, "40101009e": 184, "10513936e": 184, "52303974e": 184, "27457778e": 184, "38233857e": 184, "06793751e": 184, "00477278e": 184, "15792686e": 184, "30206685e": 184, "40306943e": 184, "32057779e": 184, "22353020e": 184, "11884928e": 184, "17314181e": 184, "64256593e": 184, "23243102e": 184, "97110034e": 184, "94566869e": 184, "63267153e": 184, "08360546e": 184, "98210291e": 184, "975557": 184, "033946": 184, "217110": 184, "044391": 184, "998071": 184, "043409": 184, "215218": 184, "051986": 184, "975181": 184, "44409481": 184, "37628851": 184, "1860296": 184, "17616473": 184, "90_phantom_4dbti": [184, 186], "893": [186, 207, 229], "auto_tutorials_invers": 186, "maxshield": [187, 254, 264, 267, 475, 495, 583, 613, 860, 875], "allow_maxshield": [187, 207, 208, 264, 475, 495, 613], "ucl": [187, 210, 242, 352, 875], "read_raw_fil": [187, 210, 481, 857, 865, 875], "mandatori": [187, 295, 296, 318, 475, 555, 857], "rfdc": [187, 254], "realiz": [187, 200], "carefulli": [187, 198, 200, 851], "read_dig_polhemus_isotrak": [187, 310, 323, 326, 329, 330, 331, 332, 333, 334, 337, 857, 865, 875], "technic": [187, 237, 242, 262, 263, 264, 265, 475, 476, 522, 697, 699, 707, 713, 850, 856, 857], "disturb": [187, 850, 857], "mainli": [187, 239, 834, 857], "nicknam": 187, "n_1": 187, "n_2": 187, "n_3": 187, "x_1": [187, 857], "x_2": [187, 857], "x_3": 187, "denot": [187, 194, 215, 270, 276, 278, 581, 652, 655, 657, 676, 678, 696, 830, 857], "x_": [187, 194, 857], "m_": 187, "bmatrix": [187, 857], "c_": [187, 224, 857], "standardize_nam": [187, 499, 609, 875], "nx3": [187, 462], "mrk": [187, 254, 478, 499, 609, 875], "elp": [187, 254, 328, 335, 499, 609, 611, 857, 875], "onward": [187, 645], "miscellan": [187, 213, 262, 263, 264, 265, 475, 476, 552, 695, 697, 698, 699, 857, 860], "eight": [187, 857, 875], "endian": [187, 875], "stimthresh": [187, 254, 499], "sum_": [187, 200, 655, 857], "t_p": 187, "d_p": 187, "bigg": 187, "leq": [187, 224], "read_raw_fieldtrip": [187, 481, 857, 865, 875], "read_epochs_fieldtrip": [187, 857, 865, 875], "read_evoked_fieldtrip": [187, 857, 865, 875], "intent": [187, 852], "original_data": 187, "read_raw_fiff": 187, "original_info": 187, "data_from_ft": 187, "evoked_data": [187, 226], "untest": 187, "cnt": [187, 436, 487, 601, 857, 875], "egi": [187, 328, 331, 492, 857, 875], "calibr": [187, 208, 267, 428, 565, 566, 574, 583, 594, 599, 860, 875], "eximia": [187, 493, 857, 875], "3rd": [187, 197, 269, 270, 273, 276, 277, 278, 681], "parti": 187, "librari": [187, 744, 832, 834, 840, 841, 846, 852, 854, 875], "abund": 187, "electrophysiolog": [187, 200, 242, 830], "10_reading_meg_data": [187, 192], "meta": [188, 262, 263, 264, 265, 475, 476, 477, 863], "ini": 188, "host": [188, 856, 875], "pybv": [188, 440, 475, 476], "mnelab": [188, 841], "pyedflib": 188, "read_raw_bdf": [188, 481, 490, 497, 857, 865, 875], "amplifi": [188, 202, 206, 503, 846, 875], "mastoid": [188, 206, 262, 263, 264, 265, 475, 476, 640], "byte": [188, 262, 263, 475, 476, 506, 750, 860, 875], "read_raw_gdf": [188, 481, 483, 490, 857, 865, 875], "overcom": 188, "releas": [188, 834, 842, 854, 856, 875], "gender": [188, 242, 399], "read_raw_cnt": [188, 481, 857, 865, 875], "danger": [188, 267], "x_coord": 188, "y_coord": 188, "electloc": 188, "encourag": [188, 221, 845, 856, 875], "read_raw_egi": [188, 481, 857, 865, 875], "netstat": [188, 492, 875], "read_raw_nicolet": [188, 481, 857, 865, 875], "nexstim": 188, "read_raw_eximia": [188, 481, 857, 865], "read_raw_persyst": [188, 857, 865, 875], "nk": 188, "read_raw_nihon": [188, 865, 875], "11d": 188, "cmt": 188, "cn2": 188, "difficult": [188, 199, 229, 555, 857], "histori": [188, 267, 439, 830, 860, 875], "successfulli": [188, 214, 834, 860], "neither": [188, 464, 475, 476, 842], "nor": [188, 206, 464, 475, 476, 842, 856], "20_reading_eeg_data": [188, 192], "emitt": 189, "transmitt": 189, "oxyhaemoglobin": [189, 209], "Near": 189, "commun": [189, 193, 194, 221, 242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 413, 475, 476, 695, 698, 724, 727, 834, 838, 853, 863], "effort": [189, 483, 834, 855, 863], "sfnir": 189, "gowerlab": [189, 875], "cortivis": 189, "read_raw_snirf": [189, 865, 875], "provis": 189, "haemoglobin": [189, 585, 875], "optode_fram": [189, 505], "vendor": [189, 857], "icbm": 189, "2009b": 189, "nirstar": [189, 503], "aurora": [189, 503, 875], "nirscout": [189, 503], "nirsport": [189, 503, 875], "read_raw_hitachi": [189, 865, 875], "read_raw_boxi": [189, 481, 857, 865, 875], "iss": [189, 484, 875], "paren": 189, "unmodul": 189, "unpars": 189, "organis": 189, "digaux": 189, "port": [189, 840, 846], "discourag": [189, 262, 263, 264, 265, 475, 476, 697, 699, 774, 854, 875], "standardis": [189, 875], "to_csv": [189, 213], "_d": 189, "wavelength": [189, 197], "s1_d1": [189, 209], "s2_d1": 189, "s3_d1": 189, "s4_d1": 189, "s5_d2": 189, "s6_d2": 189, "s7_d2": 189, "s8_d2": 189, "assist": [189, 248, 832, 840, 857], "ficidu": 189, "30_reading_fnirs_data": [189, 192], "site": [190, 202, 203, 208, 242, 267, 318, 475, 566, 574, 583, 834], "beep": 190, "deviant": [190, 200], "finger": [190, 851], "bug": [190, 255, 448, 466, 694, 742, 834, 853, 855, 856], "tracker": [190, 834, 854], "consumpt": [190, 264, 265, 424, 776, 875], "use_precomput": 190, "erm_fnam": 190, "s01_noise_20131218_01": 190, "demand": [190, 213, 424, 428, 474, 606, 857, 875], "n_times_run1": 190, "4800": 190, "unus": [190, 267, 275, 574, 875], "heog": [190, 487], "veog": [190, 487, 875], "favorit": [190, 834], "annotations_df": 190, "csv_fname": 190, "events_bad_0": 190, "concat": [190, 407], "saccades_ev": 190, "7625": 190, "142459": 190, "216954": 190, "345135": 190, "357687": 190, "409101": 190, "461110": 190, "479866": 190, "764914": 190, "798174": 190, "846880": 190, "858863": 190, "9256": 190, "14287": 190, "116432": 190, "134489": 190, "464527": 190, "494136": 190, "749288": 190, "788623": 190, "21179": 190, "72993": 190, "134527": 190, "196555": 190, "249894": 190, "343357": 190, "400771": 190, "450256": 190, "593101": 190, "733942": 190, "765939": 190, "789476": 190, "792852": 190, "833208": 190, "859869": 190, "862888": 190, "saccade_epoch": 190, "reject_by_annot": [190, 209, 215, 262, 357, 475, 476, 515, 555, 571, 572, 575, 576, 699, 787, 796, 875], "projs_saccad": 190, "compute_proj_epoch": [190, 204, 205, 354, 355, 865, 875], "n_mag": [190, 205, 254, 353, 354, 355, 567, 568], "desc_prefix": [190, 353, 354], "projs_eog": 190, "compute_proj_eog": [190, 204, 205, 572, 576, 850, 865, 875], "1201": [190, 298], "spectra": [190, 237, 242, 259, 262, 263, 264, 265, 412, 475, 476, 528, 529, 682, 697, 699, 702, 705, 713, 714, 767, 774, 796, 830], "doubl": [190, 200, 203, 239, 262, 263, 264, 265, 409, 418, 440, 443, 445, 446, 474, 475, 476, 496, 583, 834, 840, 857, 860, 875], "filter_length": [190, 200, 201, 205, 254, 262, 263, 264, 265, 409, 418, 443, 445, 446, 475, 476, 567, 568, 575, 576, 875], "sound": [190, 193, 194, 203, 242, 414, 724, 727], "uadc001": 190, "sound_data": 190, "min_diff": 190, "\u03bc": [190, 208, 416], "\u03c3": [190, 208, 416, 519], "mlo52": 190, "mrt51": 190, "mlo42": 190, "mlo43": 190, "epochs_standard": 190, "concatenate_epoch": [190, 865, 875], "epochs_devi": 190, "mlp52": 190, "evoked_std": 190, "evoked_dev": 190, "p50": 190, "paint": [190, 262, 263, 264, 265, 475, 476, 776, 796], "mmn": [190, 863], "emphasis": 190, "evoked_differ": 190, "ico4": [190, 635, 850], "8033": 190, "015871": 190, "10585e": 190, "09843": 190, "11765e": 190, "stc_standard": 190, "80289064": 190, "69025561": 190, "89954824": 190, "stc_deviant": 190, "12814542": 190, "29154719": 190, "6203076": 190, "stc_differ": 190, "96162575": 190, "78319301": 190, "94351171": 190, "489": [190, 192, 224, 229, 239], "60_ctf_bst_auditori": [190, 192], "723": [192, 207, 229], "auto_tutorials_io": 192, "timedelayingridg": [193, 413, 865, 875], "multivariate_norm": 193, "1337": 193, "path_audio": 193, "spectrogram": [193, 229, 239, 830, 863, 875], "n_decim": 193, "explicit": [193, 261, 356, 366, 367, 834, 860, 875], "delays_samp": 193, "delays_sec": 193, "5000": [193, 226], "meshgrid": [193, 204, 229], "swap": [193, 228, 234, 629, 857, 875], "swapax": [193, 228, 234], "gabor": 193, "means_high": 193, "means_low": 193, "2500": [193, 875], "gauss_high": 193, "gauss_low": 193, "autoscal": 193, "artifici": [193, 242, 492, 555, 851], "convolut": [193, 200, 239, 420, 538, 539, 701, 704, 720, 722, 723, 725, 726, 841, 875], "n_second": 193, "x_del": 193, "ix_delai": 193, "ndim": [193, 239], "elif": 193, "rollaxi": 193, "weights_sim": 193, "iep": 193, "noise_amp": 193, "x_plt": 193, "hstack": [193, 204], "y_plt": 193, "autocorrel": [193, 413, 419], "ix_best_alpha": 193, "best_mod": 193, "best_pr": 193, "iax": 193, "time_pr": 193, "3450": 193, "1414": 193, "2502": 193, "2859": 193, "3228": 193, "505": 193, "21754": 193, "21856": 193, "1053": 193, "21888": 193, "1404": [193, 207], "21892": 193, "1748": 193, "21805": 193, "2097": 193, "21799": 193, "2451": 193, "21839": 193, "2783": 193, "21669": 193, "21792": 193, "21829": 193, "21748": 193, "702": [193, 205, 212, 229], "21904": 193, "21912": 193, "1406": 193, "21950": 193, "1759": [193, 208, 242, 583], "21967": 193, "2115": 193, "22019": 193, "2470": 193, "22039": 193, "2827": 193, "22073": 193, "22125": 193, "22110": 193, "21527": 193, "695": [193, 207, 229], "21687": 193, "1044": 193, "21720": 193, "1397": 193, "21809": 193, "1746": 193, "21801": 193, "2098": 193, "21833": 193, "21767": 193, "2789": 193, "21762": 193, "3135": 193, "21738": 193, "21734": 193, "21423": 193, "20985": 193, "21060": 193, "1238": 193, "19155": 193, "1430": [193, 237, 242, 262, 263, 264, 265, 475, 476, 697, 699, 707, 713], "17571": 193, "1762": 193, "18165": 193, "2095": 193, "18601": 193, "18972": 193, "2628": 193, "18049": 193, "2820": 193, "17290": 193, "3144": 193, "17629": 193, "18135": 193, "10920": 193, "11063": 193, "11231": 193, "717": [193, 215, 218], "11184": 193, "11166": 193, "1189": 193, "12519": 193, "1499": 193, "13646": 193, "14509": 193, "2128": [193, 242, 724, 727], "15215": 193, "2396": 193, "15405": 193, "2707": 193, "15868": 193, "3022": [193, 318, 475, 857], "16282": 193, "3342": 193, "16655": 193, "16073": 193, "10845": 193, "10817": 193, "521": [193, 229, 242, 352], "10834": 193, "10883": 193, "871": [193, 194, 229], "10863": 193, "1208": 193, "12774": 193, "1549": 193, "14184": 193, "1890": 193, "15236": 193, "2234": 193, "16077": 193, "2580": 193, "16762": 193, "2925": 193, "17315": 193, "3268": 193, "17762": 193, "17173": 193, "i_alpha": 193, "ddot": 193, "tikhonov": 193, "trf": [193, 228], "insensit": [193, 262, 263, 436, 483, 490, 497, 558, 698, 875], "whilst": [193, 210], "mse": 193, "scores_lap": 193, "models_lap": 193, "reg_typ": [193, 419], "ix_best_alpha_lap": 193, "21489": 193, "674": [193, 229], "21031": 193, "1018": 193, "21190": 193, "1363": 193, "21282": 193, "1640": [193, 243], "20401": 193, "20425": 193, "2306": 193, "20528": 193, "20321": 193, "2962": 193, "20522": 193, "3261": 193, "20292": 193, "19977": 193, "18114": 193, "17369": 193, "872": [193, 194], "18167": 193, "18388": 193, "1457": 193, "18192": 193, "1767": 193, "18404": 193, "2089": 193, "18687": 193, "2380": 193, "18606": 193, "2719": 193, "18950": 193, "3057": 193, "19217": 193, "3368": 193, "19238": 193, "19078": 193, "22229": 193, "715": [193, 229], "22321": 193, "1079": 193, "22452": 193, "1445": 193, "22552": 193, "1805": 193, "22535": 193, "2164": 193, "22511": 193, "2529": 193, "22556": 193, "2887": 193, "22528": 193, "3240": 193, "22458": 193, "22496": 193, "22788": 193, "22524": 193, "1446": 193, "1804": 193, "22509": 193, "21897": 193, "2479": 193, "22050": 193, "2845": 193, "22166": 193, "3213": 193, "22274": 193, "22282": 193, "21963": 193, "22472": 193, "22649": 193, "1456": 193, "22740": 193, "22787": 193, "2189": 193, "22789": 193, "2556": 193, "22809": 193, "2927": 193, "22856": 193, "3294": 193, "22866": 193, "12481": 193, "12121": 193, "12005": 193, "11989": 193, "984": 193, "12295": 193, "1364": [193, 207], "14443": 193, "1752": 193, "16060": 193, "2120": 193, "17087": 193, "2485": 193, "17860": 193, "2851": 193, "18482": 193, "3222": 193, "19024": 193, "18522": 193, "23958": 193, "751": 193, "23428": 193, "1118": 193, "23235": 193, "1444": 193, "22459": 193, "1768": [193, 208, 242, 583], "21968": 193, "21983": 193, "2498": 193, "22241": 193, "2839": 193, "22102": 193, "3173": 193, "21932": 193, "22020": 193, "rf_lap": 193, "fr\u00e9d\u00e9ric": [193, 242, 413], "theunissen": [193, 242, 413], "nandini": [193, 242, 413], "singh": [193, 242, 413, 875], "ann": [193, 215, 242, 413, 875], "hsu": [193, 242, 413], "vinj": [193, 242, 413], "jack": [193, 242, 413, 875], "gallant": [193, 242, 413], "ben": [193, 242, 413, 875], "willmor": [193, 242, 413], "darragh": [193, 242, 413], "smyth": [193, 242, 413], "cell": [193, 197, 242, 413, 860, 875], "553": [193, 242, 413], "577": [193, 207, 229, 242, 413], "0954": [193, 242, 413], "898x_14_3_309": [193, 242, 413], "heer": [193, 242, 413], "paslei": [193, 242, 413], "jochem": [193, 242, 413], "rieger": [193, 242, 413], "nathan": [193, 242, 413], "crone": [193, 242, 413], "knight": [193, 242, 413], "tune": [193, 205, 242, 413], "ncomms13654": [193, 242, 413], "30_strf": [193, 196], "visit": [194, 242, 846], "insight": [194, 857], "eas": 194, "camel": 194, "n_meg_channel": 194, "standand": 194, "interquartil": 194, "robustscal": [194, 416], "n_frequenc": [194, 295, 696], "popular": [194, 830, 838], "win": [194, 239], "grasp": 194, "competit": 194, "kaggl": 194, "week": [194, 856], "clf_csp": 194, "ssnr": [194, 556], "rewrit": [194, 875], "plot_filt": [194, 200, 201, 407, 414, 790, 865, 875], "boil": [194, 832], "evoked_time_gen": 194, "joint_kwarg": 194, "diag": [194, 675, 860], "1296": [194, 207, 242], "737": [194, 224, 229, 231], "808": [194, 229], "844": 194, "863": [194, 229], "874": [194, 207, 229], "879": [194, 229], "884": [194, 207, 229, 242], "886": [194, 229], "885": 194, "889": [194, 229, 275], "624": [194, 229], "866": [194, 207], "654": [194, 207, 229], "682": [194, 225, 229], "864": [194, 207, 275], "711": [194, 206, 229, 242, 262, 263, 264, 265, 475, 476, 640], "766": [194, 229], "823": [194, 207, 229], "855": 194, "882": [194, 208, 212, 229], "856": 194, "912": [194, 229], "858": [194, 207, 229], "942": [194, 207, 229], "1030": 194, "1060": [194, 242], "1090": [194, 242, 724, 727], "861": 194, "1120": 194, "1150": 194, "1180": 194, "865": [194, 229], "1240": 194, "1271": 194, "826": [194, 229], "847": [194, 229], "442": [194, 229], "616": [194, 229], "646": [194, 207], "824": [194, 207, 229, 238, 241], "914": [194, 229], "943": [194, 229, 237, 241], "973": [194, 207], "1003": 194, "1124": 194, "1152": [194, 242], "1182": [194, 207], "703": [194, 207, 229], "743": [194, 229], "782": [194, 229], "777": [194, 229], "831": [194, 229], "504": [194, 224, 229], "845": [194, 229], "597": [194, 229, 242, 415], "851": [194, 229], "853": [194, 207, 229], "718": [194, 229], "748": [194, 229], "779": [194, 229], "899": [194, 207, 239], "877": [194, 203, 229, 242, 569], "1082": 194, "878": [194, 242, 679], "1144": 194, "1175": 194, "1236": 194, "883": [194, 229], "887": [194, 207, 229], "lanczo": 194, "1353": 194, "91709": 194, "26373e": 194, "98776221": 194, "41838256": 194, "06628582": 194, "methodolog": [194, 242], "uncov": [194, 242], "hal": [194, 242], "01848442": [194, 242], "archiv": [194, 242, 382, 834, 840, 842, 854, 863], "ouvert": [194, 242], "lionel": [194, 242], "naccach": [194, 242], "subtend": [194, 242, 857], "e85791": [194, 242], "0085791": [194, 242], "50_decod": [194, 196], "974": [196, 207, 229], "auto_tutorials_machin": 196, "vibrat": 197, "door": [197, 199], "slam": [197, 199], "phone": 197, "geomagnet": 197, "unshield": 197, "headphon": 197, "malfunct": [197, 198, 850], "qr": [197, 254, 567, 575, 578, 875], "sensori": 197, "genesi": 197, "ssp_projector": 197, "readili": [197, 201, 863], "mag_channel": 197, "remove_dc": [197, 201, 475, 476, 795, 875], "get_xdata": [197, 201], "get_ydata": [197, 201], "searchsort": [197, 201], "dx": [197, 201], "dy": [197, 201], "head_width": [197, 201], "length_includes_head": [197, 201], "find_ecg_ev": [197, 199, 205, 215, 567, 571, 865, 875], "create_ecg_epoch": [197, 199, 203, 205, 567, 575, 865, 875], "ecg_epoch": [197, 203, 571], "6007": [197, 202], "streak": 197, "avg_ecg_epoch": 197, "blocki": 197, "efficaci": 197, "pro": [197, 200, 834], "con": [197, 200], "433": [197, 212, 229], "10_preprocessing_overview": [197, 212], "deepcopi": 198, "usabl": [198, 422, 565, 591, 875], "wildcard": 198, "original_bad": 198, "bad_chan": 198, "paus": [198, 264, 265, 742, 875], "codebas": [198, 834, 849, 858, 863], "good_eeg": 198, "all_eeg": 198, "setdiff1d": 198, "excess": [198, 200, 475, 476, 795, 875], "protocol": [198, 850], "sheet": [198, 850], "offlin": [198, 842], "raw2": [198, 215], "invest": [198, 856], "presenc": [198, 209, 221, 239, 242, 267, 388, 431, 834, 850, 875], "unrealist": [198, 850], "dramat": 198, "robust": [198, 202, 203, 238, 242, 262, 263, 407, 555, 652, 657, 875], "uninform": 198, "deweight": 198, "fair": [198, 206], "eeg_data": [198, 213], "eeg_data_interp": 198, "interp": [198, 646, 647, 648, 660, 875], "00000022": 198, "bad_color": [198, 475, 476, 795], "grad_data": 198, "grad_data_interp": 198, "00000009": 198, "propag": [198, 201, 256, 835], "15_handling_bad_channel": [198, 212], "fake_keypress": [199, 215], "keyboard": [199, 216, 742, 851, 875], "push": [199, 200, 834, 875], "enter": [199, 205, 215, 216, 833, 834, 837], "bad_cough": 199, "wrapper": [199, 266, 438, 442, 481, 685, 686, 875], "bad_blink": 199, "blink_annot": 199, "eeg_pick": 199, "albeit": 199, "annotate_break": [199, 865, 875], "first_tim": [199, 474, 475, 476, 495, 584, 875], "block_1": 199, "block_2": 199, "block_annot": 199, "break_annot": [199, 558], "min_break_dur": [199, 558], "t_start_after_previ": [199, 558], "t_stop_before_next": [199, 558], "bad_break": [199, 558], "events_subset": 199, "flat_criteria": 199, "stringent": 199, "reject_tmin": [199, 257, 262, 263, 571, 875], "reject_tmax": [199, 257, 262, 263, 571, 875], "disappear": [199, 239, 875], "subsum": 199, "stronger_reject_criteria": 199, "2000e": 199, "20_rejecting_bad_data": [199, 212], "park": [200, 242], "burru": [200, 242], "ifeachor": [200, 242], "jervi": [200, 242], "widmann": [200, 242], "somedai": 200, "conclud": [200, 228], "lightli": [200, 834], "cautious": 200, "hope": [200, 201, 203, 239], "math": [200, 204, 854], "b_0": 200, "b_1": [200, 857], "b_2": 200, "ldot": 200, "b_m": [200, 857], "a_1": 200, "a_2": 200, "a_n": 200, "mb_kz": 200, "na_kz": 200, "b_k": [200, 273, 857], "denomin": [200, 229, 295, 296, 649, 659, 683, 686, 708, 875], "a_k": 200, "autoregress": 200, "broken": [200, 267, 447, 834, 875], "finit": [200, 220, 229, 242, 451, 850, 857, 875], "impuls": [200, 854], "infinit": [200, 857, 875], "qquad": 200, "foral": [200, 857], "steeper": [200, 201], "accumul": [200, 262, 263], "despit": [200, 228], "throughput": 200, "sharp": [200, 224, 875], "steep": 200, "broader": [200, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 695, 698], "fundament": 200, "fftfreq": 200, "plot_ideal_filt": [200, 783, 865, 875], "f_p": [200, 857], "flim": [200, 201, 783, 790], "dlim": [200, 783], "f_": 200, "nyq": [200, 443, 446], "third_height": 200, "hypothet": [200, 555], "na\u00efv": 200, "brick": [200, 201], "correspondingli": [200, 262, 263, 857], "tighter": [200, 875], "fortun": [200, 204, 857], "remez": 200, "firl": 200, "ifft": 200, "relax": [200, 234, 875], "shallow": [200, 271], "gradual": 200, "shorten": [200, 216, 239, 766, 838, 857, 875], "benefici": [200, 274], "wherebi": 200, "came": [200, 840], "minimum_phas": 200, "falloff": 200, "h_min": 200, "uncompens": 200, "imaginari": [200, 242, 722, 723, 875], "dur": 200, "morlet_freq": 200, "tlim": 200, "ttick": 200, "blip": 200, "n_onset": 200, "x_orig": 200, "transition_band": 200, "create_filt": [200, 201, 262, 263, 264, 265, 445, 446, 475, 476, 783, 865, 875], "x_v16": 200, "twice": [200, 262, 263, 264, 265, 443, 445, 446, 475, 476, 795], "filter_dur": 200, "x_v14": 200, "x_v13": 200, "h_eff": 200, "10001": [200, 875], "design_mne_c_filt": 200, "x_mne_c": 200, "hpw": 200, "lpw": 200, "x_min": [200, 311], "cost": [200, 269, 270, 273, 276, 277, 278, 413, 419, 555, 682, 683, 685, 686, 742, 800, 805, 857], "plot_sign": 200, "yscale": [200, 695, 875], "yticklabel": 200, "get_yticklabel": 200, "iirfilt": [200, 442], "iirdesign": [200, 442], "butterworth": [200, 262, 263, 264, 265, 409, 418, 442, 443, 445, 446, 475, 476, 567, 568, 875], "worsen": 200, "filtfilt": [200, 262, 263, 264, 265, 409, 418, 443, 445, 446, 475, 476, 795], "btype": [200, 442], "ftype": [200, 269, 270, 273, 276, 277, 278, 442], "butter": [200, 442], "x_shallow": 200, "sosfiltfilt": 200, "sosfilt": 200, "zpk2so": 200, "polynomi": [200, 262, 263, 264, 265, 475, 476, 514, 857, 875], "iir_param": [200, 205, 262, 263, 264, 265, 409, 418, 442, 443, 445, 446, 475, 476, 567, 568, 875], "filt": [200, 443], "x_steep": 200, "chebychev": [200, 442], "cheby1": [200, 442], "rp": [200, 442], "chebyshev": [200, 442, 875], "substanti": [200, 208, 262, 263, 268, 370, 463, 856, 857, 863], "adjust_ax": 200, "errant": 200, "misappl": 200, "deleteri": 200, "schr\u00f6ger": [200, 242], "uncontrol": 200, "acunzo": [200, 242], "misinterpret": 200, "tanner": [200, 242], "semant": 200, "syntact": 200, "n400": 200, "p600": 200, "5\u00b5v": 200, "sic": 200, "poststimulu": 200, "octav": 200, "energi": [200, 253, 854, 875], "understood": [200, 742], "cos_t": 200, "sig": [200, 228, 233, 234], "iir_lp_30": 200, "iir_hp_p1": 200, "iir_lp_2": 200, "iir_hp_2": 200, "x_lp_30": 200, "padlen": [200, 442], "x_hp_p1": 200, "x_lp_2": 200, "x_hp_2": 200, "x_f": 200, "lp": 200, "_2": [200, 857], "hp": [200, 208, 254], "nbsp": 200, "evolv": 200, "maess": [200, 242, 875], "rebut": 200, "old": [200, 213, 215, 237, 242, 256, 259, 262, 263, 264, 265, 273, 276, 310, 318, 338, 399, 475, 476, 499, 520, 587, 609, 630, 631, 642, 742, 807, 811, 834, 842, 875], "baseline_plot": 200, "all_ax": 200, "ri": [200, 224, 242, 724, 727], "iir_hp": 200, "x_hp": 200, "leak": [200, 220, 856, 857], "n_pre": 200, "sig_pr": 200, "filter_data": [200, 262, 263, 264, 265, 418, 442, 443, 446, 475, 476, 865, 875], "adopt": [200, 832, 834], "reciproc": [200, 262, 263, 264, 265, 339, 409, 418, 428, 443, 445, 446, 475, 476, 566, 574, 583], "decent": 200, "blackman": [200, 262, 263, 264, 265, 418, 443, 445, 446, 475, 476], "fir_window": [200, 262, 263, 264, 265, 409, 418, 443, 445, 446, 475, 476], "fir_desgin": 200, "8197": 200, "outdat": 200, "construct_iir_filt": [200, 262, 263, 264, 265, 409, 418, 443, 445, 446, 475, 476, 567, 568, 865, 875], "transition_bandwidth": 200, "fir_coef": 200, "0545": 200, "0017": 200, "wider": [200, 201], "thoma": [200, 224, 225, 242, 533, 652, 657, 679, 682, 683, 684, 685, 686, 875], "sidnei": [200, 242], "wilei": [200, 242], "471": [200, 242], "82896": [200, 242], "andrea": [200, 242, 295, 875], "erich": [200, 242], "burkhard": [200, 242, 875], "00233": [200, 242], "graham": [200, 242], "mackenzi": [200, 242], "rossum": [200, 242], "darren": [200, 242], "kara": [200, 242], "inappropri": [200, 242, 269, 270, 273, 276, 277, 278], "conclus": [200, 226, 242], "1009": [200, 242], "12437": [200, 242], "8986": [200, 242], "01009": [200, 242], "commentari": [200, 242], "artefact": [200, 210, 242], "norton": [200, 242], "ermf": [200, 242], "25_background_filt": [200, 212], "mathrm": [201, 208, 224, 711, 721, 723, 725, 726], "raw_highpass": 201, "19821": 201, "9911": [201, 875], "filter_param": 201, "add_arrow": 201, "meg_pick": 201, "raw_notch": 201, "raw_notch_fit": 201, "spectrum_fit": [201, 446, 475, 476, 875], "notabl": [201, 238, 875], "raw_downsampl": 201, "pitfal": 201, "safe": [201, 213, 242, 262, 263, 318, 374, 375, 376, 379, 380, 382, 387, 390, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 475, 840, 842], "614990234375": [201, 213], "current_sfreq": 201, "desired_sfreq": 201, "obtained_sfreq": 201, "lowpass_freq": 201, "19813025304873463": 201, "80214146205357": 201, "synch": 201, "30_filtering_resampl": [201, 212], "gratton": [202, 242, 554, 598], "croft": [202, 242, 554], "articl": [202, 849], "6607": 202, "bleed": [202, 280, 815], "250m": 202, "model_plain": 202, "picks_artifact": [202, 210, 554, 598], "epochs_clean_plain": 202, "redo": 202, "partli": 202, "variat": [202, 221, 407, 850, 875], "prone": 202, "allevi": [202, 857], "epochs_sub": 202, "model_sub": 202, "epochs_clean_sub": 202, "piec": [202, 215, 262, 263, 475, 476, 857], "ongo": [202, 558, 850, 863], "alik": 202, "model_evok": 202, "epochs_clean_evok": 202, "eog_evoked_clean": 202, "raw_kwarg": 202, "cole": [202, 242, 554, 598], "emanuel": [202, 242, 554, 598, 648, 875], "donchin": [202, 242, 554, 598], "ocular": [202, 203, 205, 242, 554, 598], "90135": [202, 242, 554, 598], "s0987": [202, 242, 554], "7053": [202, 242, 554], "00055": [202, 242, 554], "35_artifact_correction_regress": [202, 212], "corrmap": [203, 865, 875], "guidanc": [203, 205, 856], "blind": [203, 242, 555, 581], "microphon": 203, "unmix": [203, 555, 556, 581, 786, 789, 875], "analogi": 203, "unwant": [203, 205, 209, 316, 875], "ic": [203, 272, 555, 569, 785, 787, 789, 875], "n_pca_compon": [203, 555, 786, 875], "smallest": [203, 229, 339, 407, 555, 854, 857], "runica": [203, 555], "mixing_matrix_": [203, 555], "unmixing_matrix_": [203, 555], "tesla": [203, 205, 219, 857], "artifact_pick": [203, 205], "harder": [203, 834], "filt_raw": 203, "huge": [203, 274, 277, 278, 681], "9010": 203, "get_explained_variance_ratio": [203, 555, 875], "explained_var_ratio": 203, "9358001342790973": 203, "7717091491114122": 203, "ratio_perc": 203, "trackpad": [203, 264, 265, 466, 758, 777], "15459": 203, "ica000": [203, 875], "ica001": [203, 272, 555, 785, 787, 789], "anywai": [203, 214, 834, 840, 875], "read_ica": [203, 555, 865], "reconst_raw": 203, "tediou": 203, "reset": [203, 259, 262, 263, 264, 265, 271, 363, 407, 414, 475, 476, 554, 555, 695, 697, 698, 699, 742, 773, 774, 778, 781, 785, 794, 797, 802, 810, 860, 875], "eog_indic": 203, "prefront": 203, "ctp": [203, 555, 875], "ecg_indic": 203, "caught": 203, "ica014": 203, "refit": [203, 875], "new_ica": 203, "neck": [203, 306], "trail": [203, 555, 583, 738], "s001r03": 203, "s002r03": 203, "19679": 203, "s003": 203, "s003r03": 203, "lib": [203, 832, 840], "python3": [203, 833, 875], "_fastica": 203, "convergencewarn": 203, "s004": 203, "s004r03": 203, "6250": 203, "6249": 203, "6150": 203, "6149": 203, "ica002": 203, "labels_": [203, 555, 569, 788], "get_compon": [203, 555, 875], "subject_index": 203, "component_index": 203, "template_eog_compon": 203, "33638605": 203, "32708878": 203, "32846765": 203, "32807248": 203, "35916344": 203, "37615216": 203, "42464993": 203, "21789139": 203, "22387812": 203, "22237922": 203, "21342143": 203, "2425263": 203, "26757238": 203, "27806995": 203, "15470616": 203, "1693302": 203, "17711037": 203, "17373137": 203, "19651749": 203, "21091786": 203, "22459439": 203, "68783519": 203, "46717407": 203, "64182737": 203, "34165002": 203, "28991817": 203, "76938995": 203, "0057612": 203, "54311043": 203, "54567127": 203, "63806031": 203, "57058636": 203, "52637437": 203, "51788659": 203, "55774431": 203, "56188149": 203, "69340923": 203, "73333856": 203, "2829121": 203, "39253171": 203, "16120286": 203, "25431324": 203, "06352167": 203, "1647002": 203, "11930156": 203, "1811579": 203, "10112171": 203, "12638332": 203, "13623739": 203, "1301851": 203, "14380943": 203, "15329772": 203, "1715539": 203, "16560352": 203, "13293812": 203, "08175318": 203, "10173655": 203, "10764581": 203, "12707317": 203, "09785876": 203, "07433338": 203, "08470678": 203, "07373196": 203, "03379354": 203, "ecg_ind": 203, "francoi": [203, 242, 555], "cardoso": [203, 242, 555], "precondit": [203, 208, 242, 555, 584, 875], "hessian": [203, 242, 555], "2844203": [203, 242, 555], "iren": [203, 242], "winkler": [203, 242], "deben": [203, 242, 569], "4101": [203, 242], "milan": [203, 242, 875], "7319296": [203, 242], "dammer": [203, 242, 555, 875], "schiek": [203, 242, 555], "boer": [203, 242, 555], "carmen": [203, 242, 385, 555], "silex": [203, 242, 555], "mikhail": [203, 242, 555], "zvyagintsev": [203, 242, 555], "uw": [203, 242, 555], "pietrzyk": [203, 242, 555], "mathiak": [203, 242, 555], "2353": [203, 242, 555], "926677": [203, 242, 555], "filipa": [203, 242, 569], "campo": [203, 242, 569], "viola": [203, 242, 569, 875], "jeremi": [203, 242, 569], "thorn": [203, 242, 569], "edmond": [203, 242, 569], "till": [203, 242, 569], "schneider": [203, 242, 569], "tom": [203, 242, 569, 875], "eichel": [203, 242, 569], "clinph": [203, 242, 555, 563, 569, 724, 727], "696": [203, 212, 229], "40_artifact_correction_ica": [203, 212], "setup_3d_ax": 204, "set_zlabel": 204, "set_ylim": [204, 239], "set_zlim": 204, "geometr": [204, 269, 270, 273, 276, 277, 278, 441, 807, 850, 857], "shadow": [204, 636], "cast": [204, 255, 448, 746, 875], "sun": 204, "xy_projection_matrix": 204, "projected_point": 204, "projected_vector": 204, "arrow_coord": 204, "arrow_length_ratio": 204, "symbol": [204, 855, 857, 875], "expans": [204, 208, 262, 263, 264, 265, 428, 475, 476, 514, 565, 566, 574, 583, 857], "unpack": [204, 229, 755, 840], "lucki": 204, "bother": [204, 213], "trigger_effect": 204, "internet": [204, 856], "algebra": [204, 854, 875], "full_matric": 204, "trigger_projection_matrix": 204, "plot_trisurf": 204, "interchang": [204, 295, 830], "ten": [204, 239, 465, 838, 851], "hyperplan": [204, 410, 417], "synonym": [204, 860], "incident": [204, 264, 265, 466, 758, 777], "phrase": 204, "first_projector": 204, "explained_var": [204, 271, 875], "inact": [204, 208, 262, 263, 264, 265, 475, 476, 856], "compute_proj_raw": [204, 205, 353, 354, 857, 865, 875], "ortho": [204, 555], "write_proj": [204, 621, 865, 875], "forgo": 204, "offecg": 204, "remove_exist": [204, 205, 262, 263, 264, 265, 475, 476, 742], "perman": [204, 832, 850, 875], "mags_ecg": 204, "_projector": 204, "cheaper": 204, "consequenti": 204, "mikko": [204, 205, 242, 857], "uusitalo": [204, 205, 242, 857], "bf02534144": [204, 205, 242, 857], "45_projectors_background": [204, 212], "equip": [205, 857], "system_proj": 205, "empty_room_fil": 205, "empty_room_raw": 205, "empty_room_proj": 205, "distant": [205, 854], "_proj": [205, 875], "no_proj": [205, 567, 568], "picks_trac": [205, 793], "plot_projs_joint": [205, 865, 875], "ecg_l_freq": [205, 254, 567], "ecg_h_freq": [205, 254, 567], "filter_method": [205, 567, 568], "presum": 205, "clutter": 205, "eog_proj": 205, "okai": 205, "eog_projs_bad": 205, "perfectli": [205, 239, 718, 857], "get_titl": [205, 209], "get_ylabel": 205, "set_tick_param": 205, "labelbottom": 205, "50_artifact_correction_ssp": [205, 212], "earlob": 206, "collarbon": 206, "disadvantag": [206, 224], "add_reference_channel": [206, 262, 263, 264, 265, 475, 476, 695, 697, 698, 699, 865, 875], "ref_channel": [206, 262, 263, 264, 265, 279, 475, 476, 640, 695, 697, 698, 699], "m2": [206, 262, 263, 264, 265, 475, 476, 640, 860], "set_bipolar_refer": [206, 262, 263, 264, 265, 475, 476, 640, 865, 875], "anod": [206, 637, 875], "cathod": [206, 637, 875], "alter": [206, 208, 213, 256, 584, 875], "raw_new_ref": 206, "raw_avg_ref": 206, "wasn": [206, 875], "infin": [206, 242, 262, 263, 264, 265, 475, 476, 640, 875], "raw_rest": 206, "_raw": 206, "2197": 206, "655": [206, 229], "00413199": 206, "0159844": 206, "05174612": 206, "eeg_bipolar": [206, 637], "transvers": [206, 260], "raw_bip_ref": 206, "36038": [206, 213], "61837": 206, "valueerror": [206, 273, 276, 441, 614, 637, 645, 766], "yao": [206, 242, 262, 263, 264, 265, 475, 476, 640, 655], "0967": [206, 242, 262, 263, 264, 265, 475, 476, 640], "3334": [206, 242, 262, 263, 264, 265, 475, 476, 640], "dezhong": [206, 242], "yun": [206, 242], "qin": [206, 242], "shiang": [206, 242], "hu": [206, 242], "dong": [206, 242, 875], "maria": [206, 242], "bringa": [206, 242], "vega": [206, 242], "pedro": [206, 242], "vald": [206, 242], "\u00e9": [206, 242], "sosa": [206, 242], "00707": [206, 242], "55_setting_eeg_refer": [206, 212], "h\u00f6chenberg": [207, 238, 862, 875], "hoechenberg": [207, 238], "test_move_anon_raw": [207, 208], "v6": [207, 208], "v7": [207, 208, 875], "10800": [207, 208, 875], "31199": [207, 208], "20399": 207, "get_chpi_info": [207, 865, 875], "chpi_freq": 207, "chpi_cod": 207, "chpi_amplitud": [207, 339, 340], "compute_chpi_amplitud": [207, 340, 341, 865, 875], "1696": 207, "482": [207, 224], "502": [207, 224, 229, 520, 860], "628": [207, 229], "436": [207, 242], "685": [207, 229], "742": [207, 229], "761": 207, "576": [207, 229], "819": [207, 229], "839": [207, 229, 857], "663": [207, 229], "671": [207, 229], "953": 207, "983": [207, 229], "719": [207, 229], "1029": 207, "727": [207, 229], "1056": 207, "731": [207, 229], "1070": 207, "1084": 207, "1163": 207, "811": [207, 218, 229], "843": [207, 229], "1239": 207, "1254": [207, 242, 385], "1269": 207, "1285": 207, "1303": 207, "964": [207, 229], "1459": 207, "1497": 207, "989": [207, 229], "1514": 207, "1553": 207, "1008": 207, "1020": 207, "1595": 207, "1614": 207, "1634": 207, "1046": 207, "1651": 207, "1666": 207, "1039": 207, "1682": 207, "1037": [207, 242, 679], "1028": [207, 242, 648], "compute_chpi_loc": [207, 208, 339, 341, 342, 865, 875], "4385": 207, "463": [207, 275], "477": [207, 229], "494": [207, 229], "568": 207, "418": [207, 224, 229, 875], "739": [207, 209, 212, 229], "771": [207, 229], "789": [207, 229], "805": [207, 229], "948": 207, "1040": 207, "1062": 207, "1167": 207, "1265": 207, "1286": 207, "1301": 207, "1315": 207, "1319": 207, "1325": 207, "1381": 207, "1517": 207, "1565": [207, 242], "1580": [207, 262, 263], "1586": 207, "1590": 207, "1594": 207, "1609": 207, "1648": 207, "1652": 207, "1691": 207, "write_head_po": [207, 340, 342, 348, 349, 865], "compute_chpi_snr": [207, 339, 765, 865, 875], "plot_chpi_snr": [207, 865, 875], "snr_dict": [207, 765], "778": [207, 212], "59_head_posit": [207, 212], "find_bad_channels_maxwel": [208, 583, 865, 875], "obliqu": 208, "filter_chpi": [208, 583, 865, 875], "crosstalk": 208, "fine_cal_fil": 208, "sss_cal_mgh": 208, "crosstalk_fil": 208, "ct_sparse_mgh": 208, "raw_check": 208, "auto_noisy_ch": 208, "auto_flat_ch": 208, "auto_scor": 208, "cross_talk": [208, 565, 574, 583], "return_scor": [208, 574], "ex": [208, 834, 838, 839], "ei": 208, "ch_subset": 208, "scores_noisi": [208, 574], "limits_noisi": [208, 574], "bin_label": 208, "data_to_plot": 208, "cbar_kw": 208, "nanmin": 208, "rect": 208, "nanmax": [208, 227], "appar": [208, 850], "fashion": [208, 368, 875], "min_count": [208, 574], "qualifi": 208, "int_ord": [208, 428, 566, 574, 583], "ext_ord": [208, 339, 341, 345, 428, 565, 566, 574, 583], "thick": [208, 857], "mathtt": [208, 711, 721, 722, 723, 725, 726], "st": [208, 254], "_durat": 208, "penultim": 208, "st_correl": [208, 574, 583, 591], "st_onli": [208, 574, 583, 875], "doublecheck": 208, "get_active_chpi": [208, 865, 875], "chpi_fif_fil": 208, "head_pos_fil": 208, "headpo": [208, 254, 349], "patent": [208, 583, 591], "legal": [208, 766, 856], "commerci": [208, 583], "124905": [208, 242, 428, 566, 583], "1935742": [208, 242, 566, 583], "60_maxwell_filtering_sss": [208, 212], "deoxyhaemoglobin": [209, 875], "itertool": 209, "compress": [209, 257, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 382, 475, 476, 571, 572, 695, 698, 840, 875], "novemb": [209, 242, 652, 657], "cw": [209, 368, 830], "set_dur": [209, 256, 875], "mid": [209, 224], "source_detector_dist": [209, 865, 875], "photodetect": 209, "scalp_coupling_index": [209, 865, 875], "beer": 209, "lambert": 209, "law": [209, 856, 875], "raw_haemo": 209, "beer_lambert_law": [209, 865, 875], "haemodynam": 209, "predominantli": 209, "1291": 209, "992": [209, 229], "s4_d4": 209, "s8_d8": 209, "s3_d3": 209, "s7_d6": 209, "s7_d7": 209, "s6_d8": 209, "oxi": [209, 875], "morphologi": 209, "evoked_dict": 209, "color_dict": 209, "aa3377": [209, 711, 721], "styles_dict": 209, "chroma": 209, "drive": [209, 361, 474, 475, 476, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 515], "tidi": 209, "leg_lin": 209, "get_c": 209, "70_fnirs_process": [209, 212], "technologi": [210, 242, 253, 862], "placement": [210, 264, 265, 779, 830, 875], "opm_data_fold": 210, "ucl_opm_auditori": [210, 851, 865], "opm_fil": 210, "001_se": 210, "aef_run": 210, "001_meg": 210, "720000": 210, "6000": [210, 581], "pt": [210, 479, 507], "amp_scal": 210, "1e12": [210, 367], "data_d": 210, "time_d": 210, "set_kwarg": 210, "ambient": 210, "knowldg": 210, "evironment": 210, "psd_kwarg": 210, "psd_pre": 210, "9901": [210, 875], "psd_post": 210, "remnant": 210, "motiv": [210, 239], "minimis": 210, "interfec": 210, "39601": 210, "19801": 210, "seymour": [210, 242, 851, 875], "stephani": [210, 242, 851], "mellor": [210, 242, 851], "neill": [210, 242, 851, 875], "tim": [210, 242, 851], "tiernei": [210, 242, 851], "eleanor": [210, 242, 851], "maguir": [210, 242, 851], "opportun": [210, 242, 851], "118834": [210, 242, 851], "februari": [210, 242, 298, 851], "677": [210, 212, 229], "481": [210, 212, 229], "80_opm_process": [210, 212], "auto_tutorials_preprocess": 212, "166800": 213, "read_raw_": [213, 474, 857, 875], "famili": [213, 684], "seriou": [213, 856], "parenthes": [213, 857], "estimate_rank": [213, 875], "n_time_samp": 213, "time_sec": 213, "n_chan": [213, 675, 722, 723, 804], "000167471573526": 213, "megacq": 213, "acqch001": 213, "110113": 213, "acqch002": 213, "110112": 213, "acqch003": 213, "110111": 213, "acqch004": 213, "110122": 213, "frequent": [213, 832, 834, 852, 855, 875], "12012": 213, "18018": 213, "24024": 213, "underlyingli": [213, 852], "n_timepoint": [213, 680], "pose": [213, 834], "undo": [213, 613, 875], "eeg_and_eog": 213, "raw_temp": 213, "channel_nam": [213, 492, 614, 875], "eog_and_frontal_eeg": 213, "frivol": 213, "eeg_059": 213, "eeg_060": 213, "blink_detector": 213, "makeshift": 213, "eeg_001": 213, "raw_select": 213, "1503": 213, "unspecifi": [213, 219, 766], "500770084699155": 213, "5001290587975622": 213, "raw_selection1": 213, "raw_selection2": 213, "raw_selection3": 213, "5041000049184614": 213, "sampling_freq": [213, 219], "start_stop_second": 213, "channel_index": [213, 755], "85742192e": 213, "64355481e": 213, "89306644e": 213, "99872648": 213, "00039144": 213, "0020564": 213, "9933487": 213, "99501366": 213, "99667862": 213, "data_arrai": 213, "times_arrai": 213, "meg_0712": 213, "meg_1022": 213, "two_meg_chan": 213, "y_offset": 213, "safest": [213, 850], "eeg_channel_indic": 213, "planar1": [213, 259, 262, 263, 264, 265, 407, 414, 475, 476, 552, 553, 554, 555, 569, 695, 697, 698, 699, 774, 781, 785, 797, 802, 804], "planar2": [213, 259, 262, 263, 264, 265, 407, 414, 475, 476, 552, 553, 554, 555, 569, 695, 697, 698, 699, 774, 781, 785, 797, 802, 804], "first_channel_data": [213, 857], "eeg_and_eog_data": 213, "two_meg_chans_data": 213, "my_data": 213, "npy": [213, 214], "afford": 213, "scaling_tim": 213, "start_end_sec": 213, "to_hdf": 213, "999750": 213, "952283e": 213, "001415": 213, "069226e": 213, "003080": 213, "080921e": 213, "004745": 213, "010755e": 213, "006410": 213, "10_raw_overview": [213, 218], "write_ev": [214, 448, 610, 865, 875], "lst": [214, 610, 820], "array_equ": 214, "_eve": 214, "my_experi": 214, "told": 214, "events_no_button": 214, "merged_ev": 214, "ultim": [214, 834], "send": [214, 739], "cumbersom": 214, "20_event_arrai": [214, 218], "datetim": [215, 256, 262, 263, 264, 265, 267, 281, 475, 476, 875], "compris": [215, 219, 262, 263, 683, 697, 698, 699, 857, 863], "posix": [215, 256], "timestamp": [215, 256, 269, 270, 273, 276, 277, 278, 475, 476, 492, 601, 875], "my_annot": 215, "aaa": 215, "bbb": 215, "ccc": 215, "microsecond": [215, 256, 262, 263, 264, 265, 267, 475, 476, 860], "time_of_first_sampl": 215, "95597083": 215, "iso": 215, "8601": 215, "new_orig_tim": 215, "strftime": 215, "later_annot": 215, "ddd": 215, "eee": 215, "fff": 215, "720100": 215, "darker": 215, "spinbox": 215, "safeguard": [215, 267, 875], "interactive_annot": 215, "bad_": [215, 875], "ordereddict": 215, "95597082905339": [215, 256], "tzinfo": 215, "timezon": [215, 262, 263, 264, 265, 475, 476], "descr": 215, "70597082905339": 215, "45597082905339": 215, "20597082905339": 215, "WILL": 215, "NOT": 215, "annot_from_fil": 215, "30_annotate_raw": [215, 218], "versatil": 216, "lengthen": 216, "unmark": 216, "newli": [216, 763], "hover": 216, "thumbnail": 216, "plot_psd_topo": [216, 237, 262, 263, 264, 265, 475, 476], "40_visualize_raw": [216, 218], "auto_tutorials_raw": 218, "synthet": [219, 492, 571, 575, 857, 875], "hertz": [219, 221, 267, 696, 700, 701, 702, 703, 704, 705], "eog001": 219, "meg001": 219, "meg002": 219, "meg003": 219, "meg004": 219, "meg005": 219, "meg006": 219, "meg007": 219, "meg008": 219, "seven": [219, 857, 875], "molar": [219, 857], "amper": [219, 857], "simulated_raw": 219, "show_scalebar": [219, 262, 263, 475, 476, 772, 795, 875], "995": 219, "simulated_epoch": 219, "column_stack": 219, "condition_a": 219, "condition_b": 219, "evoked_arrai": 219, "10_array_obj": [219, 223], "simulate_stc": [220, 659, 660, 661, 865, 875], "dt": [220, 428, 707], "17545": 220, "hemi_to_ind": 220, "elig": [220, 856], "surf_vertic": 220, "restrict_vert": 220, "intersect1d": 220, "restrict_vertic": [220, 268, 273], "cent_idx": 220, "elsewher": 220, "distances_to_outsid": [220, 268, 875], "compute_area": [220, 268, 875], "stc_gen": 220, "value_fun": [220, 662], "brain_gen": 220, "evoked_gen": 220, "stc_inv": 220, "brain_inv": 220, "45968308": 220, "57021267": 220, "69354621": 220, "evoked_snr": 220, "415": [220, 223, 224], "623": [220, 229], "70_point_spread": [220, 223], "unit_impuls": 221, "coh_signal_gen": 221, "t_rand": 221, "dev": [221, 543, 641], "base_freq": 221, "cumsum": 221, "signal1": 221, "signal2": 221, "am": [221, 260, 263, 265, 370, 476, 860, 875], "nperseg": 221, "coh": [221, 696, 768], "noverlap": 221, "146374": 221, "33830": 221, "stc_signal": 221, "stc_nois": 221, "pretend": [221, 224], "s_rm": 221, "59828": 221, "89697e": 221, "40489756": 221, "65479053": 221, "61269642": 221, "dampen": [221, 636, 711, 721, 725], "consensu": [221, 856], "csd_signal": 221, "filters_approach1": 221, "filters_approach2": 221, "filters_1": 221, "power_approach1": 221, "power_approach2": 221, "plot_approach": 221, "brain1": 221, "42918831e": 221, "04345299e": 221, "40589757e": 221, "brain2": 221, "mia": [221, 242, 295, 296], "liljestr\u00f6m": [221, 242, 295, 296], "susanna": [221, 242, 295, 296, 875], "aro": [221, 242, 295, 296, 875], "245530": [221, 242, 295, 296], "kensuk": [221, 242, 295, 296], "sekihara": [221, 242, 295, 296], "79369": [221, 242, 295, 296], "79370": [221, 242, 295, 296], "80_dic": [221, 223], "auto_tutorials_simul": 223, "622": [223, 229, 242, 352], "ttest_1samp_no_p": [224, 682, 685, 689, 865, 875], "phenomena": 224, "n_subject": [224, 232, 234, 678], "signal_mean": 224, "signal_sd": 224, "noise_sd": 224, "gaussian_sd": 224, "n_src": [224, 270, 275], "h_0": 224, "colon": [224, 254, 382, 860], "h_1": 224, "neq": [224, 857], "geq": 224, "cdot": [224, 655, 857], "1600": 224, "mcc": 224, "plot_t_p": 224, "p_lim": 224, "t_lim": 224, "mgrid": 224, "plot_surfac": [224, 875], "rstride": 224, "cstride": 224, "ztick": 224, "mappabl": 224, "set_tick": 224, "set_ticklabel": 224, "get_xaxi": 224, "set_label_coord": 224, "set_weight": 224, "use_p": 224, "log_": 224, "t_": [224, 857], "exchang": [224, 875], "verid": 224, "n_": [224, 857], "samp": 224, "gymnast": 224, "declar": [224, 856], "p_type_i": 224, "combat": 224, "familywis": 224, "fwer": 224, "benjamini": [224, 679], "hochberg": [224, 679], "strict": [224, 450, 838], "indistinguish": 224, "mathbf": [224, 566], "perm_": 224, "aforement": 224, "rethink": 224, "thought": [224, 676, 830], "refram": 224, "drawback": 224, "touch": [224, 319], "feature_extract": 224, "grid_to_graph": 224, "e402": 224, "mini_adjac": 224, "toarrai": 224, "find_ch_adjac": [224, 225, 226, 229, 327, 675, 682, 683, 685, 686, 763, 865, 875], "combine_adjac": [224, 226, 229, 232, 316, 327, 682, 683, 685, 686, 865, 875], "get_builtin_ch_adjac": [224, 316, 327, 763, 865], "builtin_ch_adj": 224, "adj_nam": 224, "adj_descript": 224, "bti148": 224, "bti248": 224, "bti248grad": 224, "ctf64": 224, "easycap128ch": 224, "easycap32ch": 224, "easycap64ch": 224, "easycapm1": [224, 875], "easycapm11": 224, "m11": 224, "easycapm14": 224, "m14": 224, "easycapm15": 224, "m15": 224, "ecog256": 224, "256channel": 224, "ecog256bipolar": 224, "eeg1010_neighb": 224, "elec1005": 224, "elec1010": 224, "elec1020": 224, "itab153": 224, "itab": 224, "itab28": 224, "language29ch": 224, "mpi": 224, "mpi_59_channel": 224, "neuromag122cmb": 224, "neuromag122": [224, 875], "neuromag306cmb": 224, "neuromag306": 224, "neuromag306mag": [224, 229], "neuromag306planar": [224, 226], "yokogawa160": 224, "yokogawa440": 224, "read_ch_adjac": [224, 316, 320, 675, 763, 865, 875], "n_space": 224, "t_thresh": [224, 226], "t_clust": 224, "viewabl": 224, "p_clust": 224, "cl": 224, "195527": 224, "120434": 224, "1362": 224, "1435": 224, "1664": 224, "1758": 224, "1853": 224, "1855": 224, "stat_fun_hat": 224, "t_hat": 224, "p_hat": 224, "043603": 224, "127369": 224, "5046": 224, "5199": 224, "5246": 224, "5216": 224, "riemann": 224, "threshold_tfc": 224, "t_tfce": 224, "p_tfce": 224, "h_power": [224, 225], "e_pow": [224, 225], "428": 224, "431": [224, 229], "444": [224, 229, 234], "457": [224, 229], "461": [224, 229], "469": 224, "475": [224, 229, 275], "478": [224, 229], "509": [224, 225, 229], "t_tfce_hat": 224, "p_tfce_hat": 224, "419": [224, 229], "425": [224, 229], "467": [224, 229], "jag": 224, "peaki": 224, "broad": [224, 239], "tighten": 224, "broaden": 224, "exhaust": [224, 295], "unbalanc": 224, "statsmodel": [224, 863, 872], "anova_lm": 224, "wrap": [224, 266, 528, 875], "q": [224, 254, 655, 682, 683, 685, 686, 857], "f_onewai": [224, 676, 678, 683, 686, 865], "f_mway_rm": [224, 228, 234, 678, 865, 875], "f_threshold_mway_rm": [224, 228, 234, 676, 865], "unpair": 224, "spatio_temporal_cluster_test": [224, 225, 229, 233, 234, 865, 875], "spatio_temporal_cluster_1samp_test": [224, 232, 682, 865, 875], "gerard": [224, 242, 688, 689], "ridgwai": [224, 242, 688, 689], "flandin": [224, 242, 688, 689], "karl": [224, 242, 253, 688, 689, 862], "friston": [224, 242, 688, 689], "Will": [224, 242, 254, 266, 309, 443, 474, 555, 688, 689, 694, 707, 714, 738, 816, 839], "penni": [224, 242, 688, 689], "haircut": [224, 242, 688, 689], "nichol": [224, 225, 242, 679, 682, 683, 684, 685, 686], "10_background_stat": [224, 231], "confirmatori": 225, "tfce": [225, 682, 683, 685, 686, 863, 875], "ttest_ind": [225, 689], "unsaf": [225, 698], "median_valu": 225, "long_word": 225, "short_word": 225, "time_window": [225, 695], "ntarget": 225, "short_df": 225, "format_dict": 225, "096": 225, "453939": 225, "222424": 225, "518939": 225, "371515": 225, "064": [225, 242, 344, 537, 655], "811667": 225, "250152": 225, "039697": 225, "318030": 225, "163030": 225, "425152": 225, "684": [225, 229], "absent": [225, 363, 860, 875], "amongst": [225, 239], "temor": 225, "cluster_pv": [225, 682, 683, 685, 686], "significant_point": 225, "delaunai": [225, 226, 316, 875], "917298": 225, "20_erp_stat": [225, 231], "whom": [226, 229, 834], "downstream": [226, 227], "nonparametr": [226, 227, 229, 242, 682, 683, 684, 685, 686], "spectrotempor": [226, 227, 722, 723, 725, 726], "tfr_epoch": 226, "logratio": [226, 238, 285, 538, 539, 695, 698, 802], "epochs_pow": [226, 228, 229], "lattic": [226, 229, 675, 682, 683, 685, 686], "sensor_adjac": 226, "use_idx": 226, "n_ch": 226, "unrol": 226, "degrees_of_freedom": 226, "455144": 226, "265125": 226, "caveat": [226, 229, 242, 555, 857], "anywher": [226, 875], "t_obs_plot": 226, "f_idx": 226, "t_idx": [226, 475, 476], "nanargmax": 226, "40_cluster_1samp_time_freq": [226, 231], "epochs_condition_1": 227, "epochs_condition_2": 227, "comptuat": 227, "tfr_epochs_1": 227, "tfr_epochs_2": 227, "epochs_power_1": 227, "epochs_power_2": 227, "f_ob": [227, 228, 229, 233, 234, 683, 686], "566824": 227, "934": [227, 229], "evoked_power_1": 227, "evoked_power_2": 227, "evoked_power_contrast": 227, "f_obs_plot": [227, 228, 229], "max_f": 227, "evoked_condition_1": 227, "evoked_condition_2": 227, "evoked_contrast": 227, "50_cluster_between_time_freq": [227, 231], "interplai": 228, "perceptu": 228, "56aud_r": 228, "60vis_l": 228, "64vis_r": 228, "forgiv": 228, "zero_mean": [228, 539, 711, 721, 722, 723, 725], "this_tfr": [228, 229], "this_pow": 228, "n_condit": [228, 229, 234, 683, 686], "n_replic": 228, "factor_level": [228, 234, 676, 678], "formula": [228, 234, 295, 296, 352, 651, 655, 708, 709, 857, 875], "a1b1": [228, 676], "a1b2": [228, 676], "a2b1": [228, 676], "b2b2": 228, "fval": 228, "effect_label": 228, "autumn": [228, 229], "overrid": [228, 272, 367, 369, 475, 476, 492, 632, 633, 634, 635, 740, 766, 838, 840, 856], "necessit": [228, 234, 875], "return_pv": [228, 234, 676], "pthresh": [228, 234], "f_thresh": [228, 229, 234], "419588": 228, "good_clust": [228, 232], "f_imag": [228, 229], "f_obs_plot2": 228, "70_cluster_rmanova_time_freq": [228, 231], "differenti": [229, 242, 262, 263, 264, 265, 431, 475, 476, 724, 727, 863], "plot_ch_adjac": [229, 316, 327, 865, 875], "_csr": 229, "csr_matrix": [229, 274, 275, 316, 327, 620], "bind": [229, 234], "stackexchang": 229, "73993": 229, "alpha_cluster_form": 229, "n_observ": [229, 680, 682, 683, 685, 686, 766], "dfn": [229, 683, 686], "dfd": [229, 683, 686], "cluster_stat": 229, "004107": 229, "094418": 229, "414": 229, "449": [229, 275], "459": 229, "503": 229, "515": [229, 875], "526": 229, "548": 229, "565": 229, "589": 229, "592": 229, "612": 229, "626": [229, 242, 555], "637": 229, "651": 229, "662": 229, "668": 229, "689": 229, "697": 229, "738": 229, "741": 229, "746": 229, "749": 229, "754": [229, 242, 850], "757": 229, "763": 229, "774": 229, "786": 229, "803": 229, "818": 229, "832": 229, "834": 229, "876": [229, 275], "896": 229, "904": [229, 275], "915": 229, "917": 229, "922": 229, "925": 229, "933": 229, "941": 229, "944": 229, "946": 229, "949": 229, "952": 229, "963": 229, "969": 229, "977": 229, "988": 229, "p_accept": 229, "good_cluster_ind": [229, 233, 234], "crimson": [229, 742], "steelblu": [229, 475, 476, 795], "i_clu": 229, "clu_idx": 229, "time_ind": 229, "space_ind": 229, "ch_ind": 229, "f_map": 229, "sig_tim": 229, "ax_topo": 229, "f_evok": 229, "ax_colorbar": 229, "ax_sign": 229, "ymin": [229, 234], "get_ylim": 229, "fill_betweenx": [229, 234], "tfr_adjac": 229, "tfr_threshold": 229, "333033": 229, "412": 229, "452": [229, 275], "453": [229, 275], "476": [229, 242, 407], "483": 229, "514": 229, "517": 229, "519": [229, 239], "527": 229, "544": 229, "555": 229, "556": 229, "596": 229, "599": 229, "605": 229, "614": 229, "632": 229, "635": 229, "643": 229, "667": 229, "675": 229, "681": 229, "683": 229, "732": 229, "734": [229, 242, 711, 721, 722, 725], "735": 229, "753": 229, "755": 229, "759": 229, "762": 229, "764": 229, "772": 229, "773": 229, "776": 229, "783": 229, "788": 229, "804": 229, "809": 229, "812": 229, "814": 229, "816": 229, "822": 229, "836": 229, "842": 229, "849": 229, "891": 229, "903": 229, "911": 229, "916": [229, 239], "919": 229, "921": 229, "927": 229, "931": 229, "932": 229, "936": 229, "937": 229, "939": 229, "945": [229, 264, 265, 695, 780], "979": 229, "981": 229, "982": 229, "986": 229, "difficulti": [229, 400, 832, 854], "freq_ind": 229, "ax_spec": 229, "f_obs_plot_sig": 229, "ax_colorbar2": 229, "mari": [229, 242, 682, 683, 685, 686, 875], "dejan": [229, 242, 682, 683, 685, 686], "draschkow": [229, 242, 682, 683, 685, 686], "e13335": [229, 242, 682, 683, 685, 686], "13335": [229, 242, 682, 683, 685, 686], "75_cluster_ftest_spatiotempor": [229, 231], "auto_tutorials_stat": [231, 236], "equalize_epoch_count": [232, 865], "summarize_clusters_stc": [232, 233, 234, 865, 875], "1000e": [232, 234], "sample_vertic": [232, 234], "evoked1": [232, 861], "evoked2": [232, 861], "n_vertices_sampl": [232, 234], "morph_data": [232, 875], "fsave_vertic": [232, 233, 234], "morph_mat": [232, 234, 274], "n_vertices_fsav": [232, 233, 234], "govern": 232, "member": [232, 680, 856, 860, 863], "max_step": [232, 682, 683, 685, 686], "spatial_src_adjac": [232, 233, 234, 865, 875], "p_threshold": [232, 233], "t_threshold": 232, "clu": [232, 233, 234, 687], "563537": 232, "791547": 232, "permutationt": 232, "good_clusters_idx": 232, "stc_all_cluster_vi": [232, 233, 234], "20_cluster_1samp_spatiotempor": [232, 236], "stc_fname": 233, "n_subjects1": 233, "n_subjects2": 233, "x1": [233, 680, 683], "x2": [233, 680, 683], "subjects_k": 233, "f_threshold": [233, 678], "632172": 233, "30_cluster_ftest_spatiotempor": [233, 236], "engemannn": 234, "r_aud": 234, "r_vi": 234, "tini": [234, 296], "1782": 234, "851281": 234, "inds_t": 234, "inds_v": 234, "cluster_ind": 234, "eve_id": 234, "mean_tc": 234, "std_tc": 234, "60_cluster_rmanova_spatiotempor": [234, 236], "v\u00b2": 237, "\u00b2": [237, 238], "t\u00b2": [237, 239], "overridden": [237, 473, 875], "esp": 237, "method_kw": [237, 262, 263, 264, 265, 475, 476, 697, 699], "psd_array_multitap": [237, 262, 263, 264, 265, 412, 475, 476, 697, 699, 723, 726, 865, 875], "irrelev": [237, 254, 834, 857], "epo_spectrum": 237, "npsd": 237, "__getitem__": [237, 255, 256, 257, 259, 260, 262, 263, 267, 271, 275, 286, 300, 475, 476, 521, 696, 697, 698, 699, 730, 875], "evk_spectrum": 237, "61863537e": 237, "13487136e": 237, "88010499e": 237, "89065956e": 237, "24056397e": 237, "91160668e": 237, "56762015e": 237, "65842303e": 237, "39426775e": 237, "38758770e": 237, "03771739e": 237, "98519756e": 237, "agg_fun": [237, 262, 263, 264, 265, 475, 476, 697, 699, 774], "psd_welch": [237, 875], "psd_multitap": [237, 875], "area_mod": [237, 262, 263, 264, 265, 475, 476, 796], "kept": [237, 257, 262, 268, 368, 431, 470, 472, 473, 515, 522, 523, 524, 525, 526, 528, 529, 539, 555, 556, 566, 606, 786, 834, 875], "periodogram": [237, 242, 262, 263, 264, 265, 475, 476, 697, 699, 714], "electroacoust": [237, 242, 262, 263, 264, 265, 475, 476, 697, 699, 714], "1967": [237, 242, 262, 263, 264, 265, 475, 476, 697, 699, 714], "tau": [237, 242, 262, 263, 264, 265, 475, 476, 697, 699, 714], "1161901": [237, 242, 262, 263, 264, 265, 475, 476, 697, 699, 714], "slepian": [237, 242, 262, 263, 264, 265, 475, 476, 697, 699, 707, 713], "bell": [237, 242, 262, 263, 264, 265, 475, 476, 555, 581, 697, 699, 707, 713], "1978": [237, 242, 262, 263, 264, 265, 475, 476, 697, 699, 707, 713], "1538": [237, 242, 262, 263, 264, 265, 475, 476, 697, 699, 707, 713], "7305": [237, 242, 262, 263, 264, 265, 475, 476, 697, 699, 707, 713], "tb02104": [237, 242, 262, 263, 264, 265, 475, 476, 697, 699, 707, 713], "10_spectrum_class": [237, 241], "72074": 238, "mean_spectrum": 238, "psds_mean": [238, 239], "psds_std": [238, 239], "arithmet": [238, 555, 714, 875], "psds_welch_mean": 238, "freqs_mean": 238, "psds_welch_median": 238, "freqs_median": 238, "epo_idx": 238, "unaggreg": [238, 714, 875], "n_segment": [238, 714], "welch_unagg": 238, "topomap_kw": 238, "fmin_fmax": 238, "timefreq": [238, 695], "20_sensors_time_frequ": [238, 241], "fpv": 239, "steadi": 239, "assr": 239, "norcia": 239, "picton": 239, "wet": [239, 851], "dominik": [239, 875], "welk": [239, 875], "evgenii": [239, 875], "kalenkovich": [239, 875], "ttest_rel": 239, "bids_fnam": 239, "12hz": 239, "15hz": 239, "decai": 239, "stabil": [239, 442, 555, 566, 875], "bach": 239, "meigen": 239, "boxcar": [239, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 447, 475, 476, 854, 875], "n_overlap": [239, 262, 263, 264, 265, 475, 476, 697, 699, 714, 796], "n_per_seg": [239, 262, 263, 264, 265, 475, 476, 697, 699, 714, 875], "snr_spectrum": 239, "noise_n_neighbor_freq": 239, "noise_skip_neighbor_freq": 239, "n_trial": [239, 423], "n_frequency_bin": 239, "increment": [239, 472, 555], "ON": 239, "averaging_kernel": 239, "mean_nois": 239, "apply_along_axi": 239, "psd_": 239, "edge_width": 239, "pad_width": 239, "constant_valu": 239, "drastic": [239, 274, 875], "reappear": 239, "grand": [239, 464, 857, 875], "floor": [239, 420, 581, 723, 726], "ceil": [239, 718], "psds_plot": 239, "snr_mean": 239, "snr_std": 239, "stim_freq": 239, "i_bin_12hz": 239, "1st": [239, 637], "i_bin_24hz": 239, "i_bin_36hz": 239, "i_bin_15hz": 239, "i_bin_30hz": 239, "i_bin_45hz": 239, "i_trial_12hz": 239, "i_trial_15hz": 239, "roi_vi": 239, "po9": 239, "po10": 239, "o9": 239, "o10": 239, "picks_roi_vi": 239, "hotel": 239, "snrs_target": 239, "69365541718619": 239, "wait": [239, 257, 262, 834, 842, 875], "snrs_12hz": 239, "snrs_12hz_chaverag": 239, "tstat_roi_vs_scalp": 239, "985902": 239, "693655": 239, "000067": 239, "Such": [239, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 295, 296, 475, 476, 636, 695, 698, 830, 856, 857], "somewher": [239, 475, 476, 795, 839, 858], "unintend": 239, "preregist": 239, "peopl": [239, 834, 845, 856, 875], "detour": 239, "snrs_roi": 239, "freq_plot": 239, "color_plot": 239, "darkblu": [239, 475, 476, 795], "darkgreen": 239, "mediumblu": 239, "seagreen": 239, "xpos_plot": 239, "stim_12hz_tmp": 239, "stim_15hz_tmp": 239, "snr_tmp": 239, "yerr": 239, "stim_12hz_snrs_": 239, "ihz": 239, "stim_15hz_snrs_": 239, "strike": 239, "tstat_12hz_trial_stim": 239, "stim_12hz_snrs_12hz": 239, "stim_12hz_snrs_15hz": 239, "tstat_12hz_trial_1st_harmon": 239, "stim_12hz_snrs_24hz": 239, "stim_12hz_snrs_30hz": 239, "tstat_12hz_trial_2nd_harmon": 239, "stim_12hz_snrs_36hz": 239, "stim_12hz_snrs_45hz": 239, "tstat_15hz_trial_stim": 239, "stim_15hz_snrs_12hz": 239, "stim_15hz_snrs_15hz": 239, "tstat_15hz_trial_1st_harmon": 239, "stim_15hz_snrs_24hz": 239, "stim_15hz_snrs_30hz": 239, "tstat_15hz_trial_2nd_harmon": 239, "stim_15hz_snrs_36hz": 239, "stim_15hz_snrs_45hz": 239, "000037": 239, "000014": 239, "000297": 239, "000024": 239, "006525": 239, "tour": [239, 875], "overli": 239, "stim_bandwidth": 239, "window_length": 239, "window_snr": 239, "i_win": 239, "this_spectrum": 239, "windowed_psd": 239, "windowed_freq": 239, "stimfreq": 239, "bin_width": 239, "skip_neighbor_freq": 239, "n_neighbor_freq": 239, "windowed_snr": 239, "boxplot": 239, "stochast": [239, 242, 555], "window_start": 239, "greyscal": 239, "optimist": 239, "serious": [239, 857], "50_ssvep": [239, 241], "auto_tutorials_tim": 241, "alphabet": [242, 834, 875], "fiorenzo": [242, 555], "artoni": [242, 555], "magazin": [242, 407], "962275": 242, "stephan": [242, 407], "bonnet": [242, 407], "marco": [242, 407], "congedo": [242, 407], "jutten": [242, 407], "riemannian": [242, 407], "multimedia": [242, 407], "mmsp": [242, 407], "5662067": [242, 407], "barber": [242, 352], "51814": [242, 352], "www": [242, 352, 446, 483, 569, 834, 854], "staff": [242, 352, 840], "brml": [242, 352], "becker": [242, 655], "albera": [242, 655], "comon": [242, 655], "gribonv": [242, 655], "fleureau": [242, 655], "guillotel": [242, 655], "merlet": [242, 655], "sissi": [242, 655], "august": [242, 655], "anthoni": [242, 555], "terrenc": [242, 555], "sejnowski": [242, 555, 581], "deconvolut": [242, 555, 581], "1129": [242, 555, 581], "1159": [242, 555, 581], "1995": [242, 399, 555, 581, 857], "neco": [242, 555], "anna": [242, 648, 875], "rita": [242, 648], "bentivoglio": [242, 648], "bressman": [242, 648], "cassetta": [242, 648], "donatella": [242, 648], "carretta": [242, 648], "pietro": [242, 648], "tonali": [242, 648], "alberto": [242, 648], "albanes": [242, 648], "disord": [242, 648], "870120629": [242, 648], "berg": [242, 857], "scherg": [242, 857], "1994": [242, 522, 857], "90113": [242, 857], "quentin": [242, 875], "anderson": [242, 875], "arindam": 242, "banerje": 242, "kenji": 242, "fukumizu": 242, "24th": 242, "1288": 242, "pmlr": 242, "apr": 242, "mlr": 242, "v130": 242, "bertrand21a": 242, "ryota": [242, 407], "tomioka": [242, 407], "lemm": [242, 407], "motoaki": [242, 407], "kawanab": [242, 407], "msp": [242, 407], "4408441": [242, 407], "fred": 242, "bookstein": 242, "thin": 242, "plate": 242, "585": 242, "24792": 242, "oleg": 242, "burdakov": 242, "bori": 242, "merkulov": 242, "lith": 242, "\u00f6": 242, "ping": 242, "yilun": [242, 352], "chen": [242, 352], "ami": [242, 352], "wiesel": [242, 352], "yonina": [242, 352], "eldar": [242, 352], "alfr": [242, 352, 850], "hero": [242, 352], "shrinkag": [242, 352, 407, 414, 415, 556, 875], "mmse": [242, 352], "5016": [242, 352], "5029": [242, 352], "2053029": [242, 352], "contributor": [242, 838, 841, 853, 854, 856, 863, 875], "readthedoc": 242, "ronald": [242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 695, 698], "crochier": [242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 695, 698], "lawrenc": [242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 563, 695, 698], "rabin": [242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 695, 698], "multir": [242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 695, 698], "englewood": [242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 695, 698], "cliff": [242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 695, 698], "nj": [242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 695, 698], "605162": [242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 695, 698], "adrian": [242, 268, 273], "guggisberg": 242, "erik": [242, 875], "findlai": 242, "ryan": [242, 875], "canolti": 242, "mitchel": 242, "berger": 242, "barbaro": 242, "heidi": 242, "kirsch": 242, "1686": 242, "1700": 242, "sereno": [242, 857], "1006": [242, 679, 857], "nimg": [242, 679, 857], "0395": [242, 857], "arthur": [242, 522, 724, 727], "liu": [242, 522], "buckner": [242, 522], "lewin": [242, 522], "s0896": [242, 522], "6273": [242, 522], "81138": [242, 522], "jocn": 242, "darva": 242, "ermer": 242, "20171": 242, "salat": [242, 857], "andr\u00e9": [242, 857], "kouw": [242, 857], "niko": [242, 857], "makri": [242, 857], "florent": [242, 857], "s\u00e9gonn": [242, 857], "quinn": [242, 857, 875], "s69": [242, 857], "s84": [242, 857], "0396": 242, "tootel": 242, "intersubject": 242, "sici": 242, "1097": 242, "0193": 242, "hbm10": 242, "genoves": [242, 679], "lazar": [242, 407, 679], "supplementari": [242, 384], "neuroanatom": [242, 384], "esm": [242, 384], "art": [242, 384, 863], "3a10": [242, 384], "2fnature18933": [242, 384], "mediaobject": [242, 384], "41586_2016_bfnature18933_moesm330_esm": [242, 384], "s\u00f3nia": [242, 850], "gon\u00e7alv": [242, 850], "casper": [242, 850], "munck": [242, 850], "jeroen": [242, 850, 875], "verbunt": [242, 850], "fetsj": [242, 850], "bijma": [242, 850], "rob": [242, 850, 875], "heethaar": [242, 850], "vivo": [242, 850], "resist": [242, 850], "eit": [242, 850], "812164": [242, 850], "teon": [242, 849, 875], "lauri": [242, 849], "parkkonen": [242, 849], "\u00e4": [242, 415, 849], "inen": [242, 849], "fnin": [242, 849], "00267": [242, 849], "greischar": [242, 563], "cori": [242, 563], "burghi": [242, 563], "carien": [242, 563], "reekum": [242, 563], "daren": [242, 563], "jackson": [242, 563], "diego": [242, 563], "pizzag": [242, 563], "corrina": [242, 563], "mueller": [242, 563], "davidson": [242, 563], "electroencephalograph": [242, 563], "hne": [242, 415], "gari": [242, 677], "heiman": [242, 677], "houghton": [242, 677], "mifflin": [242, 677], "boston": [242, 253, 677, 862], "618": [242, 677], "17028": [242, 677], "joerg": [242, 295], "hipp": [242, 295], "hawellek": 242, "maurizio": 242, "corbetta": 242, "marku": [242, 295], "siegel": [242, 295], "engel": [242, 295], "spontan": [242, 850], "3101": 242, "percept": [242, 295, 830, 851, 875], "aapo": [242, 555], "hyv\u00e4rinen": [242, 555], "761722": [242, 555], "toga": 242, "mazziotta": 242, "academ": 242, "san": 242, "b978": 242, "012693019": 242, "50012": 242, "bf02512476": [242, 522], "tkk": 242, "a559": 242, "helsinki": 242, "16463": 242, "kevin": [242, 724, 727], "jone": [242, 724, 727], "bernic": [242, 724, 727], "porjesz": [242, 724, 727], "chorlian": [242, 724, 727], "madhavi": [242, 724, 727], "rangaswami": [242, 724, 727], "chella": [242, 724, 727], "kamarajan": [242, 724, 727], "ajayan": [242, 724, 727], "padmanabhapillai": [242, 724, 727], "stimu": [242, 724, 727], "henri": [242, 724, 727], "begleit": [242, 724, 727], "deficit": [242, 724, 727], "diagnos": [242, 724, 727, 875], "alcohol": [242, 724, 727], "jorg": 242, "jovicich": 242, "silvest": 242, "czanner": 242, "elizabeth": 242, "halei": 242, "andr": [242, 875], "kennedi": 242, "franz": 242, "schmitt": 242, "gregori": 242, "brown": [242, 537, 655], "macfal": 242, "antti": [242, 875], "ahonen": 242, "lain": 242, "claudia": [242, 857], "tesch": [242, 857], "3315": 242, "3320": 242, "281163": 242, "zhou": [242, 407], "1990": [242, 407], "bf01129656": [242, 407], "philipp": 242, "lachaux": 242, "eugenio": 242, "rodriguez": [242, 875], "martineri": 242, "francisco": 242, "varela": 242, "synchroni": 242, "hbm4": 242, "attent": [242, 268, 273, 860], "ledoit": [242, 352], "wolf": [242, 352], "s0047": [242, 352], "259x": [242, 352], "00096": [242, 352], "te": [242, 555, 875], "girolami": [242, 555, 581], "subgaussian": [242, 555, 581, 875], "supergaussian": [242, 555, 581], "089976699300016719": [242, 555], "seok": [242, 850], "lew": [242, 850], "carsten": [242, 850], "wolter": [242, 850], "anwand": [242, 850], "macleod": [242, 850], "compart": [242, 254, 519, 830, 850, 860], "2862": [242, 850], "2878": [242, 850], "20714": [242, 850], "witzel": [242, 533, 652, 657], "8945": 242, "8950": 242, "10024": [242, 875], "lowri": [242, 677], "vassarstat": [242, 677], "bernard": [242, 655], "giusiano": [242, 655], "roehri": [242, 655], "b\u00e9nar": [242, 655], "kathryn": [242, 384], "mill": [242, 384], "6084": [242, 384], "m9": [242, 384], "figshar": [242, 384], "3498446": [242, 384], "molin": [242, 537, 655], "quantif": [242, 428, 537, 655, 841], "1069": [242, 537, 655], "paul": [242, 857, 875], "748978": [242, 857], "ali": [242, 724, 727], "moukadem": [242, 724, 727], "zi": [242, 724, 727], "bouguila": [242, 724, 727], "djaffar": [242, 724, 727], "ould": [242, 724, 727], "abdeslam": [242, 724, 727], "alain": [242, 724, 727], "dieterlen": [242, 724, 727], "lisbon": [242, 724, 727], "6952743": [242, 724, 727], "mourtazaev": [242, 399], "suresh": [242, 560], "muthukumaraswami": [242, 560], "00138": [242, 560], "ndiay": 242, "fercoq": 242, "salmon": 242, "sugiyama": 242, "luxburg": 242, "guyon": 242, "garnett": 242, "curran": 242, "inc": [242, 834, 839], "nip": [242, 470], "cc": [242, 470, 856], "6405": 242, "holm": [242, 684], "primer": [242, 684], "1058": [242, 684], "ou": 242, "bai": 242, "wheaton": 242, "sherri": 242, "vorbach": 242, "hallett": 242, "2292": 242, "2307": 242, "zieh": 242, "aloi": 242, "schl\u00f6gl": 242, "kr\u00e4mer": 242, "brismar": 242, "robustli": 242, "physrevlett": 242, "234101": 242, "hilla": [242, 389], "paananen": [242, 389], "jyrki": [242, 389], "m\u00e4kel\u00e4": [242, 389], "5281": [242, 389], "zenodo": [242, 389, 849], "889234": [242, 389], "reilli": [242, 385, 851, 875], "mayada": [242, 385, 851], "elsabbagh": [242, 385, 851], "infant": [242, 385, 875], "117682": [242, 385, 851], "thom": [242, 850], "oostendorp": [242, 850], "delbek": [242, 850], "dick": [242, 850], "stegeman": [242, 850], "vitro": [242, 850], "1487": [242, 850], "880100": [242, 850], "oppenheim": [242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 695, 698], "schafer": [242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 695, 698], "buck": [242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 695, 698], "prentic": [242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 695, 698], "hall": [242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 695, 698], "saddl": [242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 695, 698], "river": [242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 695, 698], "754920": [242, 260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 695, 698], "roberto": [242, 522, 857], "pascual": [242, 522, 857], "marqui": [242, 522, 857], "martha": [242, 522, 857], "koukkou": [242, 522, 857], "kieko": [242, 522, 857], "kochi": [242, 522, 857], "bernd": [242, 522, 857], "saletu": [242, 522, 857], "hideaki": [242, 522, 857], "tanaka": [242, 522, 857], "koichi": [242, 522, 857], "hirata": [242, 522, 857], "lesli": [242, 522, 857], "prichep": [242, 522, 857], "rolando": [242, 522, 857], "biscai": [242, 522, 857], "lirio": [242, 522, 857], "toshihiko": [242, 522, 857], "kinoshita": [242, 522, 857], "royal": [242, 352, 522, 857], "1952": [242, 522, 857], "3784": [242, 522, 857], "1098": [242, 522, 857], "rsta": [242, 522, 857], "0081": [242, 522, 857], "donald": 242, "perciv": 242, "walden": 242, "35532": 242, "cbo9780511622762": 242, "dinh": [242, 875], "tuan": 242, "pham": 242, "hermitian": 242, "1136": 242, "s089547980035689x": 242, "luca": [242, 587], "pollonini": [242, 587], "cristen": [242, 587], "homer": [242, 587], "abaya": [242, 587], "heather": [242, 587], "bortfeld": [242, 587], "beauchamp": [242, 269, 273, 277, 587, 800], "oghalai": [242, 587], "cochlear": [242, 587], "ernesto": 242, "pereda": 242, "ricardo": 242, "bru": 242, "\u00f1": 242, "maest": 242, "\u00fa": 242, "dog": 242, "056011": 242, "2552": 242, "aacfe4": 242, "sanchez": [242, 385], "meek": [242, 385], "wanz": [242, 385], "xie": [242, 385], "1259": [242, 385], "hat": [242, 530, 566, 655, 688, 689, 857, 875], "noam": [242, 570], "pele": [242, 570], "00694": [242, 570], "abraham": [242, 262, 263, 264, 265, 475, 476], "savitzki": [242, 262, 263, 264, 265, 475, 476], "marcel": [242, 262, 263, 264, 265, 475, 476], "golai": [242, 262, 263, 264, 265, 475, 476, 875], "chemistri": [242, 262, 263, 264, 265, 475, 476], "1627": [242, 262, 263, 264, 265, 475, 476], "1639": [242, 262, 263, 264, 265, 475, 476], "1964": [242, 262, 263, 264, 265, 475, 476], "ac60214a047": [242, 262, 263, 264, 265, 475, 476], "nathaniel": [242, 681], "marta": [242, 681], "12320": [242, 681], "corn": 242, "stam": 242, "daffertshof": 242, "diminish": 242, "1178": 242, "20346": 242, "086": [242, 652, 657], "luigi": [242, 724, 727], "rodino": [242, 724, 727], "bert": [242, 724, 727], "schulz": [242, 724, 727, 875], "wong": [242, 724, 727, 875], "pseudo": [242, 295, 296, 312, 724, 727], "american": [242, 724, 727], "fic": [242, 724, 727], "2218": [242, 472], "2228": [242, 472], "tmi": [242, 472], "2553445": [242, 472], "evelina": 242, "busa": 242, "glessner": 242, "hybrid": 242, "1075": 242, "catherin": [242, 711, 721, 722, 725], "tallon": [242, 711, 721, 722, 725], "baudri": [242, 711, 721, 722, 725], "claud": [242, 711, 721, 722, 725], "delpuech": [242, 711, 721, 722, 725], "jneurosci": [242, 711, 721, 722, 724, 725, 727], "00722": [242, 711, 721, 722, 725], "minna": [242, 857], "huotilainen": [242, 857], "oili": [242, 857], "salonen": [242, 857], "00064": [242, 857], "bishop": [242, 352], "9868": [242, 352], "00196": [242, 352], "vinck": 242, "wingerden": 242, "franscesco": 242, "battaglia": 242, "cyriel": 242, "pennartz": 242, "1548": 242, "womelsdorf": 242, "pascal": 242, "fri": 242, "rhythmic": 242, "wehner": [242, 428], "modi": [242, 428], "children": [242, 253, 428, 860, 862], "wheat": [242, 724, 727], "pier": [242, 724, 727], "cornelissen": [242, 724, 727], "frost": [242, 724, 727], "hansen": [242, 724, 727], "phonologi": [242, 724, 727], "5229": [242, 724, 727], "5233": [242, 724, 727], "4448": [242, 724, 727], "whitham": [242, 555], "sean": [242, 555], "fitzgibbon": [242, 555], "clark": [242, 555, 875], "loveless": [242, 555], "marita": [242, 555], "broberg": [242, 555], "angu": [242, 555], "wallac": [242, 555], "lilli": [242, 555], "hardi": [242, 555], "rik": [242, 555], "fronsko": [242, 555], "alyson": [242, 555], "pulbrook": [242, 555], "paralysi": [242, 555], "1877": [242, 555], "1888": [242, 555], "rei": [242, 470], "ram\u00edrez": [242, 470], "jason": [242, 470], "palmer": [242, 470], "bhaskar": [242, 470], "rao": [242, 470], "neuroelectromagnet": [242, 470], "sch\u00f6lkopf": [242, 470], "platt": [242, 470], "hoffman": [242, 470], "1505": [242, 470], "3089": [242, 470], "jun": [242, 655], "juliu": [242, 655, 875], "dewald": [242, 655], "april": [242, 655], "zhi": [242, 857, 875], "multilay": [242, 857], "moritz": [242, 407, 875], "wentrup": [242, 407], "buss": [242, 407], "921154": [242, 407], "jair": [242, 555, 875], "montoya": [242, 555, 875], "mart\u00ednez": [242, 555], "petr": [242, 555], "tichavsk\u00fd": [242, 555], "massoud": [242, 555], "babai": [242, 555], "zadeh": [242, 555], "nad\u00e8g": [242, 555], "thirion": [242, 555], "moreau": [242, 555], "latent": [242, 555, 789], "10169": [242, 555], "lectur": [242, 555, 859], "cham": [242, 555], "53547": [242, 555], "0_27": [242, 555], "pharmacologi": [242, 522, 857], "pubm": [242, 522, 857], "ncbi": [242, 522, 857], "nlm": [242, 522, 857], "nih": [242, 522, 857], "gov": [242, 522, 857], "12575463": [242, 522, 857], "encyclopedia": 242, "php": 242, "international_system_of_unit": 242, "oldid": 242, "982683558": 242, "googl": [243, 253, 807, 863, 875], "scholar": 243, "dec": [243, 740, 833], "1370": 243, "health": 253, "r01": 253, "eb009048": 253, "eb006385": 253, "hd040712": 253, "ns044319": 253, "ns037462": 253, "ns104585": 253, "p41": 253, "eb015896": 253, "rr014075": 253, "foundat": [253, 856], "0958669": 253, "1042134": 253, "european": [253, 857], "council": 253, "ystg": 253, "263584": 253, "676943": 253, "depart": 253, "fg02": 253, "99er62764": 253, "agenc": 253, "national": 253, "la": [253, 851, 862, 875], "recherch": [253, 862], "neuc": 253, "0002": 253, "idex": 253, "pari": [253, 875], "saclai": 253, "0003": 253, "summer": [253, 863, 875], "year": [253, 267, 399, 849, 856, 863], "amazon": 253, "grant": [253, 264, 265, 295, 296, 352, 356, 357, 366, 367, 368, 407, 414, 450, 451, 470, 472, 473, 533, 782, 834, 856, 875], "zuckerberg": 253, "eoss2": [253, 863], "eoss4": 253, "employe": [253, 856], "duti": [253, 856], "aalto": [253, 851, 862], "yliopiston": [253, 862], "perustieteiden": [253, 862], "korkeakoulu": [253, 862], "athinoula": [253, 851, 862], "martino": [253, 851, 862], "hospit": [253, 851, 862], "philadelphia": [253, 862], "donder": [253, 862], "behaviour": [253, 256, 503, 505, 862], "radboud": [253, 862], "school": [253, 862], "informatiqu": [253, 862], "automatiqu": [253, 862], "franzen": [253, 862], "universit\u00e4t": [253, 862], "graz": [253, 862], "macquari": [253, 851, 862], "massachusett": [253, 862], "planck": [253, 862], "f\u00fcr": [253, 862], "bildungsforschung": [253, 862], "uniwersytet": [253, 862], "humanistycznospo\u0142eczni": [253, 862], "washington": [253, 862], "aarhu": [253, 862], "universitet": [253, 862], "commissariat": [253, 862], "\u00e0": [253, 862], "\u00e9nergi": [253, 862], "atomiqu": [253, 862], "aux": [253, 862], "forschungszentrum": [253, 862], "j\u00fclich": [253, 862], "du": [253, 862], "cerveau": [253, 862], "moell": [253, 862], "\u00e9pini\u00e8r": [253, 862], "sant\u00e9": [253, 862], "m\u00e9dical": [253, 862], "technisch": [253, 862], "t\u00e9l\u00e9com": [253, 862], "exit": [254, 268, 466, 544, 834], "outfil": 254, "anon": 254, "keep_hi": [254, 262, 263, 264, 265, 475, 476, 477, 875], "n_dai": 254, "daysback": [254, 262, 263, 264, 265, 475, 476, 477], "anonymize_info": [254, 262, 263, 264, 265, 475, 476, 865, 875], "resav": 254, "projoff": [254, 875], "navigaton": 254, "show_opt": [254, 475, 476, 795], "dialog": [254, 262, 263, 264, 265, 475, 476, 795, 798, 840], "allowmaxshield": 254, "filtord": [254, 475, 476, 795, 875], "iir": [254, 262, 263, 264, 265, 409, 418, 442, 443, 445, 446, 475, 476, 567, 568, 587, 649, 659, 708, 783, 795, 864, 875], "clamp": [254, 475, 476, 742, 795], "filterchpi": [254, 875], "head_shap": 254, "out_fnam": 254, "rotation_x": [254, 486], "compensatori": 254, "deg": 254, "ecg_ch": [254, 486], "eog_ch": [254, 486, 875], "e31": [254, 486], "e63": [254, 486], "my_raw": 254, "quiet": [254, 262, 263, 698], "mne_process_raw": [254, 860], "in_raw": 254, "clean_raw": 254, "file_a": 254, "file_b": 254, "test_raw_sss": 254, "filters": 254, "tap": [254, 567, 568, 575, 576, 851], "rej": 254, "rej_grad": 254, "rej_mag": 254, "rej_eeg": 254, "rej_eog": 254, "bad_fnam": 254, "raw_event_fnam": 254, "tstart": [254, 269, 270, 273, 276, 277, 278, 567, 568, 575, 576, 578, 875], "qrsthr": 254, "qrs_threshold": [254, 567, 575, 578], "eog_l_freq": [254, 568], "eog_h_freq": [254, 568], "head_opac": [254, 466], "trackbal": [254, 264, 265, 466, 742, 758, 777], "terrain": [254, 264, 265, 466, 742, 758, 777, 875], "flash30": [254, 301, 857, 875], "noflash30": [254, 857], "flash5": [254, 301, 305, 857, 875], "multiecho": [254, 301, 305], "echo": [254, 301, 833, 839, 840, 857], "noconvert": 254, "deprec": [254, 794, 865, 875], "unwarp": [254, 301, 857], "grad_unwarp": [254, 301, 857], "symlink": [254, 305, 307, 875], "flash_path": 254, "parameter_map": [254, 305, 857], "mef05": 254, "mef30": 254, "mef05_": [254, 301, 875], "mef30_": [254, 301, 875], "spin": [254, 305], "termin": [254, 832, 833, 834, 837, 838, 840, 845, 854, 865, 875], "kt2fiff": 254, "mkheadsurf": [254, 306], "topolog": [254, 306, 363, 406, 426, 457, 603, 632, 634, 823, 850, 875], "suffix": [254, 272, 475, 476, 488, 875], "_sss": 254, "origin_out": 254, "autobad": 254, "maxst": 254, "buflen": 254, "st_buflen": 254, "st_corr": 254, "mv_tran": 254, "in_fnam": 254, "movecomp": 254, "mv_hp": 254, "ascii": [254, 491, 601, 607, 629, 875], "hpistep": 254, "mv_hpistep": 254, "hpisubt": 254, "mv_hpisubt": 254, "nohpicon": 254, "linefreq": 254, "nooverwrit": 254, "mx_arg": 254, "sof": 254, "bmin": 254, "bash": [254, 833, 834, 839, 840, 845], "TO": 254, "1280": [254, 406, 512], "brainc": 254, "skullc": 254, "scalpc": 254, "homog": [254, 512, 850], "7mm": 254, "joblib": [254, 262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 280, 352, 353, 355, 357, 410, 417, 420, 423, 424, 450, 463, 465, 475, 476, 514, 517, 518, 528, 529, 538, 539, 560, 567, 568, 638, 643, 646, 647, 648, 660, 682, 683, 684, 685, 686, 697, 699, 700, 701, 702, 703, 704, 705, 713, 714, 722, 723, 724, 725, 726, 774, 777, 796, 863, 875], "cp": [254, 840, 857, 875], "mri_watersh": [254, 307, 854, 857], "gcaatla": [254, 307, 854], "brain_atla": [254, 307], "preflood": [254, 307, 854], "brainmask": [254, 307, 854, 875], "fname2": 254, "parser": [255, 436, 875], "reaverag": 255, "category_nam": 255, "acq_dict": 255, "subav": 255, "subaverag": [255, 860], "__len__": [255, 256, 258, 259, 260, 262, 263, 267, 268, 271, 272, 286, 300, 475, 476, 521, 696, 697, 698, 730], "n_cat": 255, "uint_cast": [255, 448], "delayed_lookup": 255, "acqp": 255, "mne_stim_channel_2": [255, 448, 449], "uint16": [255, 448], "sti014": [255, 448, 875], "sti016": [255, 448], "32768": [255, 406, 448], "mne_fix_stim14": [255, 448], "slight": [255, 875], "asynchroni": 255, "conds_data": 255, "n_epochs_out": 255, "n_annot": 256, "iso8601": 256, "delimit": 256, "bad_flux": 256, "bad_nois": 256, "meg0111": [256, 257, 262, 263, 264, 265, 267, 308, 325, 327, 357, 366, 409, 423, 428, 475, 476, 554, 555, 557, 570, 571, 572, 577, 580, 589, 591, 598, 630, 663, 681, 690, 695, 697, 698, 699, 703, 704, 705, 706, 708, 726, 766, 772, 773, 776, 778, 779, 786, 793, 796], "meg2563": 256, "meg1443": 256, "n_blink": 256, "yy": [256, 487], "______________": 256, "_________": 256, "anot": 256, "___________________": 256, "o_________": 256, "________________________": 256, "o______________": 256, "crash": [256, 875], "o________________________": 256, "bad_acq_skip": [256, 262, 263, 264, 265, 475, 476, 495, 574, 583, 875], "__add__": [256, 258, 259, 268, 269, 270, 273, 275, 276, 277, 278, 310, 695], "concatenc": 256, "__iter__": [256, 259, 262, 263, 267, 271, 286, 300, 521, 645, 697, 698, 730], "array_lik": [256, 257, 259, 260, 262, 263, 264, 265, 267, 271, 272, 281, 308, 310, 325, 327, 357, 366, 407, 409, 414, 417, 420, 422, 423, 424, 428, 434, 473, 475, 476, 486, 499, 514, 519, 554, 555, 556, 557, 560, 564, 565, 566, 569, 570, 571, 572, 574, 577, 580, 583, 589, 591, 597, 598, 609, 633, 634, 649, 663, 673, 674, 677, 679, 680, 681, 689, 690, 695, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 711, 721, 725, 726, 742, 747, 758, 759, 766, 772, 773, 774, 776, 778, 779, 781, 782, 783, 784, 785, 786, 787, 788, 790, 792, 793, 794, 796, 797, 798, 802, 804], "use_orig_tim": [256, 875], "676071": 256, "shortstimulu": 256, "longstimulu": 256, "tabular": [256, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 695, 697, 698, 699], "on_miss": [257, 262, 263, 264, 265, 267, 282, 283, 314, 346, 347, 399, 434, 454, 475, 476, 695, 697, 698, 699, 775, 875], "preload_at_end": 257, "event_rep": [257, 262, 875], "raw_sfreq": [257, 263], "abstract": [257, 863], "meg2623": [257, 262, 263, 264, 265, 267, 308, 325, 327, 357, 366, 409, 423, 428, 475, 476, 554, 555, 557, 570, 571, 572, 577, 580, 589, 591, 598, 663, 681, 690, 695, 697, 698, 699, 703, 704, 705, 706, 708, 726, 766, 772, 773, 776, 778, 779, 786, 793, 796], "ptp": [257, 262, 263, 555, 557, 571], "40e": [257, 262, 263, 357, 555, 571, 572, 681], "zeroth": [257, 262, 875], "unproject": [257, 262, 515, 606], "postpon": [257, 262, 515, 606], "silent": [257, 262, 399, 584, 852, 875], "irrespect": [257, 262, 363, 426, 457, 603, 632, 634, 823, 857], "coincid": [257, 262], "my_epoch": 257, "compensation_grad": [257, 262, 263, 264, 265, 267, 474, 475, 476, 555, 695, 697, 698, 699], "__sub__": [258, 268, 269, 270, 273, 276, 277, 278, 695], "nfree": [259, 260, 860, 875], "eig": [259, 860], "eigvec": [259, 860], "eigenvector": [259, 857, 860], "__contains__": [259, 262, 263, 264, 265, 267, 271, 286, 300, 475, 476, 521, 555, 695, 697, 698, 699, 730], "as_diag": 259, "diagnois": 259, "fromkei": [259, 267, 271, 286, 300, 521, 730], "fig_svd": [259, 767], "1e13": [259, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 352, 356, 357, 407, 414, 416, 475, 476, 773, 776, 778, 780, 781, 803], "1e15": [259, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 352, 356, 357, 407, 414, 416, 475, 476, 773, 776, 778, 780, 781, 803], "pluss": [259, 262, 263, 264, 265, 271, 407, 414, 475, 476, 554, 555, 569, 695, 697, 699, 759, 774, 781, 785, 794, 797, 802, 804], "markeredgecolor": [259, 262, 263, 264, 265, 407, 414, 475, 476, 554, 695, 697, 699, 759, 774, 781, 797, 802, 804], "mask_po": [259, 262, 263, 264, 265, 271, 407, 414, 475, 476, 554, 555, 569, 695, 697, 699, 759, 774, 781, 785, 794, 797, 802, 804], "cloughtocher2dinterpol": [259, 262, 263, 264, 265, 271, 407, 414, 475, 476, 554, 555, 569, 695, 697, 699, 759, 774, 781, 785, 794, 797, 802, 804], "linearndinterpol": [259, 262, 263, 264, 265, 271, 407, 414, 475, 476, 554, 555, 569, 695, 697, 699, 759, 774, 781, 785, 794, 797, 802, 804], "encompass": [259, 262, 263, 264, 265, 271, 407, 414, 475, 476, 554, 555, 569, 695, 697, 699, 759, 774, 781, 785, 794, 797, 802, 804], "polygon": [259, 262, 263, 264, 265, 271, 407, 414, 475, 476, 554, 555, 569, 695, 697, 699, 759, 774, 781, 785, 794, 797, 802, 804, 808, 875], "hull": [259, 262, 263, 264, 265, 271, 407, 414, 475, 476, 554, 555, 569, 695, 697, 699, 759, 774, 781, 785, 794, 797, 802, 804, 875], "doc": [259, 262, 263, 264, 265, 271, 407, 414, 475, 476, 554, 555, 641, 695, 697, 699, 711, 721, 759, 774, 781, 785, 794, 797, 802, 804, 834, 854, 863, 875], "rightmost": [259, 262, 263, 264, 265, 271, 407, 414, 475, 476, 554, 555, 695, 697, 699, 774, 781, 785, 794, 797, 802], "mini": [259, 262, 263, 264, 265, 271, 407, 414, 475, 476, 554, 555, 695, 697, 699, 774, 781, 785, 794, 797, 802], "unrepresent": [259, 267, 271, 286, 300, 521, 730], "popitem": [259, 267, 271, 286, 300, 521, 730], "lifo": [259, 267, 271, 286, 300, 521, 730], "setdefault": [259, 267, 271, 286, 300, 521, 730], "khi2": 260, "mne_dipole_fit": [260, 875], "longitudin": 260, "qlong": 260, "qtran": 260, "\u03c7": 260, "dipolefix": [260, 450, 605, 865], "plot_amplitud": 260, "show_al": [260, 770], "highlight_color": [260, 770], "head_sourc": [260, 514, 770, 875], "glyph": [260, 270, 276, 278, 742, 758, 770, 801, 805, 807, 875], "cube": [260, 770, 875], "mri_rot": [260, 770], "figure3d": [260, 264, 265, 269, 270, 272, 273, 275, 276, 277, 278, 751, 758, 770, 777, 800, 801, 805, 812, 834, 852, 865], "600x600": [260, 758, 770], "get_head_surf": [260, 514, 770, 865, 875], "bdip": [260, 605, 875], "use_round": [260, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 436, 475, 476, 695, 698], "pos_mni": 260, "n_po": [260, 340, 342, 468, 469, 784], "subdirectori": [260, 459, 742], "aspect_kind": 261, "combine_event_id": [262, 865], "id_numb": 262, "event_id_1": 262, "event_id_2": 262, "new_id_numb": 262, "programmat": 262, "lost": [262, 263, 264, 265, 437, 438, 439, 440, 475, 476, 832], "no_data": [262, 698], "equalized_count": [262, 698], "membership": [262, 263, 264, 265, 475, 476, 555, 695, 697, 698, 699, 875], "audio_left": [262, 263, 698], "name_1": [262, 263, 698], "name_2": [262, 263, 698], "likewis": [262, 263, 698, 856, 857], "eval": [262, 263, 698], "col_a": [262, 263, 698], "col_b": [262, 263, 698], "add_annotations_to_metadata": [262, 263], "annot_onset": [262, 263], "annot_dur": [262, 263], "annot_descript": [262, 263], "add_list": [262, 263, 264, 265, 475, 476, 695, 697, 698, 699], "force_update_info": [262, 263, 264, 265, 475, 476, 695, 697, 698, 699], "overwritten": [262, 263, 264, 265, 383, 475, 476, 477, 569, 584, 695, 697, 698, 699, 875], "memmap": [262, 263, 264, 265, 475, 476, 638, 695, 697, 698, 699, 875], "resiz": [262, 263, 264, 265, 475, 476, 695, 697, 698, 699, 781, 875], "januari": [262, 263, 264, 265, 475, 476, 477, 860], "1\u02e2\u1d57": [262, 263, 264, 265, 475, 476, 477], "his_id": [262, 263, 264, 265, 267, 475, 476, 477], "birthdai": [262, 263, 264, 265, 267, 475, 476, 477, 875], "revert": [262, 263, 615, 822, 875], "channel_wis": [262, 263, 264, 265, 475, 476, 875], "parallel_backend": [262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 280, 352, 353, 355, 357, 410, 417, 420, 423, 424, 450, 463, 465, 475, 476, 514, 517, 518, 528, 529, 538, 539, 560, 567, 568, 643, 646, 647, 648, 660, 682, 683, 684, 685, 686, 697, 699, 700, 701, 702, 703, 704, 705, 713, 714, 722, 723, 724, 725, 726, 774, 777, 796, 875], "workload": [262, 263, 264, 265, 475, 476], "x_a": [262, 263, 264, 265, 475, 476], "2u": [262, 263, 264, 265, 475, 476], "enevlop": [262, 263, 264, 265, 475, 476], "hint": [262, 263, 264, 265, 475, 476, 773], "projs_a": [262, 263, 264, 265, 475, 476], "proj_a": [262, 263, 264, 265, 475, 476], "projs_b": [262, 263, 264, 265, 475, 476], "proj_b": [262, 263, 264, 265, 475, 476], "_v": [262, 263, 264, 265, 875], "emphas": [262, 263, 264, 265], "legendr": [262, 263, 264, 265, 475, 476, 514, 564, 857], "by_event_typ": [262, 263, 875], "trim_mean": [262, 263], "low_bia": [262, 263, 264, 265, 412, 475, 476, 528, 529, 697, 699, 702, 705, 707, 713, 774], "undrop": [262, 263], "timeout": [262, 263], "forev": [262, 263, 875], "lenient": [262, 263], "drop_log_stat": [262, 263], "perc": [262, 263], "mintim": [262, 263, 430], "seek": [262, 263, 415, 430], "nonspati": [262, 263], "fmt": [262, 263, 264, 265, 437, 438, 440, 475, 476, 857, 875], "eeglabio": [262, 263, 437, 440, 475, 476, 875], "cart_to_eeglab": [262, 263, 437, 440, 475, 476], "5500m": [262, 263, 264, 265, 409, 418, 443, 445, 446, 475, 476], "cuda": [262, 263, 264, 265, 409, 413, 418, 419, 445, 446, 447, 475, 476, 838, 844, 854, 865, 875], "constrict": [262, 263, 264, 265, 443, 445, 446, 475, 476], "reflect_limit": [262, 263, 264, 265, 445, 446, 447, 475, 476], "savgol_filt": [262, 263, 264, 265, 475, 476], "get_annotations_per_epoch": [262, 263], "epoch_annot": [262, 263], "only_data_ch": [262, 263, 264, 265, 267, 475, 476, 555, 695, 697, 698, 699], "alia": [262, 263, 264, 265, 275, 475, 476, 590, 740, 758, 795, 834, 875], "unitless": [262, 263, 264, 265, 475, 476, 857], "return_event_id": [262, 263, 610, 697, 698, 875], "respiratori": [262, 263, 264, 265, 475, 476, 552, 695, 697, 698, 699, 875], "excit": [262, 263, 264, 265, 267, 475, 476, 552, 695, 697, 698, 699, 857], "galvan": [262, 263, 264, 265, 475, 476, 552, 695, 697, 698, 699, 857, 875], "epoch_color": [262, 263, 772], "use_opengl": [262, 263, 475, 476, 555, 772, 789, 795, 875], "theme": [262, 263, 475, 476, 555, 742, 772, 789, 795, 875], "overview_mod": [262, 263, 475, 476, 555, 772, 789, 795, 875], "5th": [262, 263, 264, 265, 272, 475, 476, 772, 795], "1e2": [262, 263, 272, 475, 476, 772, 795], "20\u00b5v": [262, 263, 272, 475, 476, 772, 795], "ital": [262, 263, 264, 265, 475, 476, 772, 776, 780, 795, 860], "zen": [262, 263, 475, 476, 555, 772, 789, 795, 875], "selector": [262, 263, 264, 265, 475, 476, 772, 795, 798, 860, 875], "processor": [262, 263, 382, 475, 476, 555, 772, 789, 795], "pyopengl": [262, 263, 475, 476, 555, 772, 789, 795], "stylesheet": [262, 263, 475, 476, 555, 742, 772, 789, 795], "qdarkstyl": [262, 263, 475, 476, 555, 742, 772, 789, 795], "darkdetect": [262, 263, 475, 476, 555, 742, 772, 789, 795], "mpl": [262, 263, 269, 270, 273, 276, 277, 278, 475, 476, 742, 772, 795, 800, 805], "tkagg": [262, 263, 475, 476, 772, 795], "f11": [262, 263, 475, 476, 772, 795], "set_browser_backend": [262, 263, 475, 476, 555, 772, 789, 795, 814, 865, 875], "magic": [262, 263, 475, 476, 555, 772, 789, 795, 832, 854], "qt5": [262, 263, 475, 476, 555, 772, 789, 795, 838], "n_max_plot": [262, 263, 771], "good_epoch": [262, 263, 773], "area_alpha": [262, 263, 264, 265, 475, 476, 796], "line_alpha": [262, 263, 264, 265, 475, 476, 796], "asd": [262, 263, 264, 265, 475, 476, 796], "idiom": [262, 263, 264, 265, 475, 476, 796, 834], "decibel": [262, 263, 264, 265, 273, 475, 476, 528, 697, 699, 774], "log\u2081\u2080": [262, 263, 264, 265, 475, 476, 680, 697, 699, 774], "ch_group": [262, 263, 264, 265, 475, 476, 798], "to_spher": [262, 263, 264, 265, 475, 476, 798, 875], "n_ch_group": [262, 263, 264, 265, 475, 476, 798], "n_pick": [262, 263, 264, 265, 475, 476, 598, 798], "plot_raw": [262, 263, 264, 265, 475, 476, 798, 811, 865, 875], "downward": [262, 263, 264, 265, 475, 476, 798], "plot_layout": [262, 263, 264, 265, 475, 476, 798, 865, 875], "layout_scal": [262, 263, 264, 265, 695, 755, 780, 803], "fig_background": [262, 263, 264, 265, 695, 780, 803], "canva": [262, 263, 264, 265, 695, 755, 780, 803, 857], "allow_dupl": [262, 263, 264, 265, 310, 338, 475, 476, 631, 875], "eeg061": [262, 263, 264, 265, 310, 338, 475, 476, 631], "eeg161": [262, 263, 264, 265, 310, 338, 475, 476, 631], "anti": [262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 808, 875], "reset_drop_log_select": [262, 263, 875], "meaningless": [262, 263], "split_siz": [262, 263, 475, 476], "2gb": [262, 263, 475, 476, 875], "split_nam": [262, 263, 475, 476, 875], "100mb": [262, 263, 475, 476], "partit": [262, 263, 357, 475, 476, 683, 857, 875], "schema": [262, 263, 475, 476], "fname_split": [262, 263, 475, 476], "github": [262, 263, 264, 265, 475, 476, 832, 842, 846, 853, 854, 855, 856], "bbac101d50176611136b": [262, 263, 264, 265, 475, 476], "setter": [262, 263, 475, 476], "set_meas_d": [262, 263, 264, 265, 475, 476, 875], "match_cas": [262, 263, 264, 265, 267, 475, 476, 875], "match_alia": [262, 263, 264, 265, 267, 475, 476, 875], "channel_loc_alias": [262, 263, 264, 265, 267, 475, 476], "make_dig_montag": [262, 263, 264, 265, 267, 310, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 475, 476, 498, 857, 865, 875], "std_err": [262, 263], "mechan": [262, 263, 856], "1591": [262, 263], "juli": [262, 263], "rangeindex": [262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 695, 697, 698, 699], "float64index": [262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 695, 697, 698, 699], "int64index": [262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 695, 697, 698, 699], "timedeltaindex": [262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 475, 476, 695, 698], "elicit": [264, 475, 495, 613, 851], "__neg__": [264, 265, 269, 270, 273, 276, 277, 278], "negat": [264, 265, 269, 270, 273, 276, 277, 278], "evoked_neg": [264, 265], "prepend": [264, 265], "resum": [264, 265, 856], "mff": [264, 265, 331, 438, 439, 492, 614, 857, 875], "export_evokeds_mff": [264, 265, 438, 865, 875], "merge_grad": [264, 265, 780, 875], "unsort": [264, 265, 776], "weakest": [264, 265, 776, 875], "obscur": [264, 265, 776], "multiax": [264, 265, 776], "t_start": [264, 265, 776], "t_end": [264, 265, 776], "surf_map": [264, 265, 514, 777], "n_contour": [264, 265, 777], "turntabl": [264, 265, 466, 742, 758, 777], "unintent": [264, 265, 466, 758, 777], "mask_cmap": [264, 265, 695, 778], "mask_alpha": [264, 265, 695, 778], "do_mask": [264, 265, 778], "illeg": [264, 265, 779], "01d": [264, 265, 407, 414, 781], "amplif": [264, 265, 295, 296, 352, 356, 357, 366, 367, 368, 407, 414, 450, 451, 470, 472, 473, 533, 782], "improperli": [264, 265, 295, 296, 352, 356, 357, 366, 367, 368, 407, 414, 450, 451, 467, 470, 472, 473, 533, 782, 875], "logger": [264, 265, 737, 739, 782], "_ave": [264, 265], "source_ori": [266, 860], "fiffv_mne_fixed_ori": [266, 860], "fiffv_mne_free_ori": [266, 860], "n_ori": 266, "source_rr": [266, 860], "n_sourc": [266, 295, 296, 407, 414, 452, 470, 472, 473], "nest": [267, 407, 410, 411, 413, 414, 415, 416, 417, 419, 420, 421, 556, 739, 834], "fiffv_coil_meg": 267, "fiffv_eeg_ch": 267, "3x3": [267, 498, 522], "fiff_unit_t_m": 267, "fiff_unitm_non": 267, "ctfkind": [267, 860], "colcal": 267, "rowcal": 267, "save_calibr": [267, 860], "serial": 267, "fiffv_point_eeg": [267, 860], "fiffc_vers": 267, "machid": [267, 860], "mac": 267, "usec": [267, 860], "he_level_raw": 267, "helium": 267, "helium_level": 267, "orig_file_guid": 267, "mea": 267, "creator": 267, "ncoil": 267, "hpi_coil": 267, "corr_coeff": 267, "coil_freq": 267, "dig_point": 267, "good_limit": 267, "dist_limit": [267, 275, 280, 342, 860, 875], "coord_tran": 267, "event_channel": 267, "mri_id": 267, "block_id": 267, "max_info": 267, "sss_info": 267, "max_st": 267, "sss_ctc": 267, "sss_cal": 267, "smartshield": [267, 875], "last_nam": 267, "first_nam": 267, "middle_nam": 267, "month": 267, "sex": [267, 875], "male": [267, 399], "femal": [267, 399], "handed": 267, "ambidextr": 267, "kilogram": 267, "command_lin": [267, 275], "tilt": [267, 486, 742, 857, 875], "subsystem": [267, 834], "meas_fil": 267, "mri_fil": 267, "roundtrip": [267, 875], "shh": 267, "working_dir": [267, 275], "xplotter": 267, "__setitem__": 267, "conflict": [268, 832, 834, 838, 875], "accuru": [268, 273], "m\u00b2": [268, 830], "versionad": [268, 698, 758], "outside_vertic": 268, "lie": [268, 857], "get_tri": 268, "label_tri": 268, "get_vertices_us": 268, "label_vert": 268, "n_label_vertic": 268, "icosahedr": [268, 358, 406, 462, 463], "morph_label": [268, 618, 865, 875], "div1": [268, 672], "div2": [268, 672], "split_label": [268, 865, 875], "mris_divide_parcel": [268, 672], "n_part": [268, 672], "fring": 268, "sens_data": [269, 270, 273, 276, 277, 278], "volvectorsourceestim": [269, 270, 273, 274, 277, 865, 875], "__div__": [269, 270, 273, 276, 277, 278], "__mul__": [269, 270, 273, 276, 277, 278, 695], "tstop": [269, 270, 273, 276, 277, 278], "bihemilabel": [269, 270, 273, 276, 277, 278, 441, 509, 510, 865], "pane": [269, 273, 277, 742, 800, 840], "n_color": [269, 270, 273, 276, 277, 278, 761, 800, 805, 806], "hot": [269, 270, 273, 276, 277, 278, 800, 805], "diverg": [269, 270, 273, 276, 277, 278, 742, 761, 800, 805, 806, 834], "binar": [269, 270, 273, 276, 277, 278, 651, 653, 654, 742, 800, 805], "colorschem": [269, 270, 273, 276, 277, 278, 800, 805], "bone": [269, 270, 273, 276, 277, 278, 742, 800, 805], "high_contrast": [269, 270, 273, 276, 277, 278, 742, 800, 805], "resort": [269, 273, 277, 800, 854], "devot": [269, 270, 273, 276, 277, 278, 800, 805], "occupi": [269, 270, 273, 276, 277, 278, 465, 644, 800, 805], "blend": [269, 270, 273, 276, 277, 278, 742, 761, 800, 805], "mip": [269, 270, 273, 276, 277, 278, 742, 800, 805], "surface_alpha": [269, 270, 273, 276, 277, 278, 742, 800, 805], "enclos": [269, 270, 273, 276, 277, 278, 742, 800, 805, 857, 875], "silhouette_alpha": [269, 270, 273, 276, 277, 278, 742, 800, 805], "silhouette_linewidth": [269, 270, 273, 276, 277, 278, 742, 800, 805], "time_label_s": [269, 270, 273, 276, 277, 278, 742, 800, 805], "freesurferoccipitalflattenedpatch": [269, 273, 277, 800], "openwetwar": [269, 273, 277, 800], "transform_data": [269, 270, 273, 276, 277, 278], "tmin_idx": [269, 270, 273, 276, 277, 278], "tmax_idx": [269, 270, 273, 276, 277, 278], "indicic": [269, 270, 273, 276, 277, 278], "data_t": [269, 270, 273, 276, 277, 278], "direction": [270, 276, 278], "vector_alpha": [270, 276, 278, 742, 805], "sane": [270, 276, 278, 805], "fiffv_proj_item_field": [271, 860], "compute_proj_": 271, "webp": [272, 875], "fidel": 272, "lang": [272, 875], "n_file": 272, "clearer": [272, 875], "add_custom_css": [272, 875], "add_custom_j": [272, 875], "javascript": [272, 875], "topomap_kwarg": [272, 793], "drop_log_ignor": [272, 875], "declutt": 272, "inverseoper": [272, 522, 523, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 538, 539, 799, 865, 875], "inverse_op": 272, "altogeth": 272, "stc_plot_kwarg": 272, "add_sys_info": 272, "sysinfo": 272, "sort_cont": [272, 875], "on_error": 272, "n_time_points_stc": 272, "remove_al": 272, "removed_index": 272, "open_brows": 272, "nanoamper": 273, "log_10": 273, "sum_k": [273, 857], "s_k": [273, 857], "subject_orig": [273, 276], "vertices_to": [274, 358], "pre_affin": 274, "src_data": 274, "vol_morph_mat": 274, "affinemap": 274, "diffeomorphicmap": [274, 731, 732, 815], "stc_from": 274, "mri_spac": [274, 875], "nifti2": [274, 277, 278], "stc_to": 274, "nifti2imag": 274, "src_from": [274, 542], "monolith": 275, "fiffv_mne_surf_left_hemi": [275, 860], "fiffv_mne_surf_right_hemi": [275, 860], "fiffv_mne_surf_unknown": 275, "fiffv_coord_mri": [275, 860], "inus": [275, 860], "subject_his_id": [275, 358], "ntri": [275, 860], "nuse_tri": [275, 860], "pinfo": 275, "155295": 275, "155323": 275, "155330": 275, "patch_ind": 275, "n_src_remain": 275, "essenti": [275, 383, 850, 857, 860], "115407": 275, "nearest_dist": [275, 860], "mri_width": 275, "mri_height": 275, "mri_depth": 275, "neighbor_vert": 275, "mri_ras_t": 275, "fiffv_mne_coord_ra": 275, "src_mri_t": [275, 875], "vox_mri_t": 275, "fiffv_mne_coord_mri_voxel": 275, "mri_volume_nam": 275, "seg_nam": 275, "include_surfac": 275, "include_discret": 275, "dest": [275, 277, 278, 729], "use_lut": [275, 875], "mne_analyz": [275, 660, 757, 840, 851, 863, 875], "subvolum": [277, 278, 875], "upsampl": [277, 278, 441, 447], "trilinear": [277, 278, 441], "ensnur": [277, 278, 441], "bg_img": [277, 278, 806, 875], "initial_po": [277, 278, 806], "nutmeg": [277, 278, 806], "spatialimag": [277, 278, 301, 467, 731, 732, 806, 815], "src_sampl": [277, 278, 806], "stc_vol_sampl": [277, 278, 806], "vl": [277, 623], "save_as_volum": [277, 278, 875], "pick_channels_forward": [282, 283, 865], "evoked_templ": 282, "apply_forward_raw": [282, 865, 875], "zlogratio": [285, 538, 539, 695, 698, 802], "data_sc": 285, "apply_dics_epoch": [287, 288, 290, 865, 875], "meaningfulli": 288, "quadrant": 288, "apply_d": [288, 289, 290, 865, 875], "borgiotti": [295, 296], "kaplan": [295, 296], "\u03b8i": [295, 296], "arguabl": [295, 296], "max_pow": [295, 296], "expon": [295, 296, 451, 470, 472, 473, 533], "compute_depth_prior": [295, 296, 452, 470, 472, 473, 533, 865, 875], "n_weight": 295, "src_type": [295, 296], "is_free_ori": [295, 296], "supplement": 295, "is_ssp": 296, "vec_stc": 296, "rework": [296, 875], "resmat": [297, 531, 532, 534, 537], "n_dipoles_lcmv": 297, "n_dipoles_fwd": 297, "1996": 298, "1207": 298, "acssc": 298, "599135": 298, "mef": [301, 857], "mef05_001": 301, "mef30_001": 301, "flash5_img": [301, 305], "dig_kind": [303, 304, 426, 875], "origin_head": 303, "origin_devic": 303, "exclude_front": [304, 426], "n_pt": 304, "convert_flash_mri": [305, 857, 865, 875], "no_decim": 306, "watersh": [307, 851, 875], "autorecon1": [307, 854, 875], "idx_by_typ": 308, "read_dig_captrak": [310, 323, 326, 330, 331, 332, 333, 334, 335, 857, 865, 875], "read_dig_dat": [310, 326, 329, 331, 332, 333, 334, 335, 487, 857, 865, 875], "read_dig_egi": [310, 323, 326, 329, 330, 332, 333, 334, 335, 857, 865, 875], "read_dig_hpt": [310, 326, 329, 330, 331, 332, 334, 857, 865, 875], "read_dig_localit": [310, 323, 329, 330, 331, 332, 333, 335, 865, 875], "acpc": 310, "ch_po": [310, 323], "remove_fiduci": [310, 875], "circumst": [310, 436, 875], "x_max": 311, "y_min": 311, "y_max": 311, "my_layout": 311, "keep_stim": 312, "combined_inst": 312, "native_head_t": 314, "equalized_inst": [315, 432], "ch_adjac": [316, 327], "use_c": 318, "sq20483n": [318, 475], "3023": [318, 475, 857], "sq20483": [318, 475], "sq20950n": [318, 475], "upgrad": [318, 475, 875], "ch_indic": 319, "bg_imag": 319, "reserv": [319, 834, 856, 875], "make_grid_layout": [319, 324, 865], "neighbor_nam": 320, "builtin": [320, 321, 742, 834, 875], "heurist": 322, "capit": [322, 875], "periauricular": [323, 857], "n_point": [323, 337, 363, 426, 478, 499, 609], "n_hpi": 323, "compute_dev_head_t": [323, 865, 875], "fs_tal": [323, 507, 730], "ctf_head": [323, 507, 730], "ctf_meg": [323, 507, 730], "viewport": [324, 475, 476, 795], "generate_2d_layout": [324, 325, 743, 865], "n_col": [325, 555, 696, 698, 768, 788, 875], "95mm": 326, "eloc": 328, "sfp": [328, 875], "besa": [328, 611, 875], "bvef": [328, 875], "095m": 328, "weakli": 328, "eg": [328, 875], "captrak": [329, 875], "xml": [329, 331, 439, 614, 857, 875], "bvct": [329, 857, 875], "compumed": [330, 487, 857], "eeg001": 332, "eeg002": 332, "hpt": [333, 857], "filepath": [333, 335, 693, 742], "digitz": 333, "pound": [333, 857], "auricular": [333, 857, 860], "signifi": [333, 555], "6729": 333, "3873": 333, "3671": 333, "6782": 333, "5228": 333, "3127": 333, "3976": 333, "2363": 333, "4493": 333, "8450": 333, "3601": 333, "6828": 333, "8518": 333, "0697": 333, "0829": 333, "6297": 333, "1376": 333, "7352": 333, "7756": 333, "8676": 333, "0439": 333, "9297": 333, "6852": 333, "4881": 333, "2969": 333, "4939": 333, "localit": [334, 875], "read_polhemus_fastscan": [335, 865, 875], "on_header_miss": [337, 875], "fastscan": [337, 857], "t_step_min": [339, 340, 341], "t_window": [339, 341, 345, 565], "interf": [339, 341, 345], "_setup_hpi_amplitude_fit": 339, "disambigu": 339, "t_step_max": 340, "too_clos": 340, "adjust_dig": [340, 342], "\u03b4t": 340, "veloc": [340, 559], "chpi_snr": 341, "snr_mag": 341, "power_mag": 341, "resid_mag": 341, "snr_grad": 341, "power_grad": 341, "resid_grad": 341, "gof_limit": 342, "quat": [342, 348, 733, 735], "q1": [342, 475, 476, 733, 735], "q2": [342, 733, 735], "q3": [342, 475, 476, 733, 735], "monitor": [343, 857, 860], "hlc001": 343, "hlc002": 343, "hlc003": 343, "rawkit": [344, 499], "include_lin": 345, "t_step": 345, "allow_line_onli": [345, 875], "hpi_freq": 347, "n_coil": 347, "hpi_pick": 347, "hpi_on": 347, "head_pos_to_trans_rot_t": [349, 350, 646, 647, 648, 660, 865], "all_evok": 351, "keep_sample_mean": 352, "ledoit_wolf": [352, 875], "factor_analysi": 352, "store_precis": 352, "assume_cent": 352, "shrikag": 352, "iter_n_compon": 352, "emprici": 352, "redund": [352, 857, 875], "on_rank_mismatch": [356, 366, 367], "orth": [356, 875], "implicitli": [356, 419, 583, 850, 857], "resultingmorph": 358, "vertices_from": 358, "vert_rh": 358, "vert_lh": 358, "mris_left_right_regist": 358, "epochs_list": [359, 430], "add_offset": 359, "events_list": [361, 875], "event_list": [361, 875], "on_defect": [363, 426, 457, 603, 632, 634, 823, 875], "read_fiduci": [363, 865, 875], "canon": [363, 482, 742, 758, 849, 875], "quantiti": [363, 581, 856, 857], "radian": [363, 559], "lpa_weight": 363, "rpa_weight": 363, "hsp_weight": 363, "eeg_weight": 363, "hpi_weight": 363, "callback": [363, 742, 755, 875], "set_fid_match": 363, "set_grow_hair": 363, "hair": 363, "set_rot": 363, "rot": [363, 733, 735], "set_scal": 363, "sca": 363, "scale_mod": 363, "set_transl": 363, "tra": 363, "fids_mri": 365, "coordinatesystem": [365, 857], "return_rank": 366, "return_color": [366, 460], "prepare_noise_cov": [366, 865, 875], "n_nonzero": 366, "1e11": 367, "1e5": 367, "fd": [368, 830], "reg_cov": 368, "fs_home": 369, "create_raw": 370, "ignore_config": 372, "env": [372, 455, 832, 834, 838, 842], "device_id": 373, "force_upd": [374, 375, 376, 377, 379, 380, 382, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405], "update_path": [374, 375, 376, 377, 379, 380, 382, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405], "mne_datasets_brainstorm_data_path": [374, 375, 376], "prompt": [374, 375, 376, 377, 379, 380, 382, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 833, 837, 839, 845, 854], "base_url": [377, 399, 400], "getenv": 377, "foot": 377, "khanetal2018": 381, "dataset_param": 382, "check_vers": 382, "return_vers": 382, "auth": 382, "token": 382, "archive_nam": [382, 388], "folder_nam": [382, 388], "hash": [382, 388, 875], "config_kei": 382, "unzip": [382, 834], "untar": [382, 832], "decompress": 382, "authent": [382, 834], "usernam": [382, 834], "password": [382, 834], "httpdownload": 382, "012345": 382, "has_dataset": [382, 865, 875], "uncompress": 382, "cryptograph": 382, "sha256": 382, "19uheid": 382, "md5": 382, "upodh2io": 382, "dataset_nam": [382, 388, 875], "tar": [382, 832, 840], "12b75d1cb7df9dfb4ad73ed82f61094f": 382, "osf": 382, "86qa2": 382, "webpag": 384, "2wk": 385, "1mo": 385, "2mo": 385, "3mo": 385, "5mo": 385, "9mo": 385, "12mo": 385, "15mo": 385, "18mo": 385, "2yr": 385, "ants4": 385, "5month3t": 385, "subject_dir": 386, "fetch_dataset": [388, 865, 875], "\u00ecnt": 391, "mne_datasets_opml_path": 395, "edfx": [399, 400], "cassett": 399, "physionet_sleep_path": [399, 400], "temazepam": [399, 851, 865, 875], "telemetri": 400, "mild": 400, "asleep": 400, "mne_datasets_spm_data_path": 402, "n_triangl": 406, "quadric": 406, "30001": 406, "20480": 406, "cov_est": 407, "transform_into": [407, 414, 875], "average_pow": [407, 414], "cov_method_param": [407, 414, 415], "component_ord": [407, 875], "mutual_info": [407, 875], "csp_space": [407, 414], "mutual": [407, 492, 732], "simplif": 407, "mean_": [407, 414], "std_": [407, 414], "x_new": [407, 408, 409, 412, 414, 415, 418, 556], "n_features_new": [407, 408, 409, 412, 414, 415, 418, 556], "get_param": [407, 408, 410, 411, 413, 414, 415, 416, 417, 419, 420, 421, 556], "subobject": [407, 410, 411, 413, 414, 415, 416, 417, 419, 420, 421, 556], "name_format": [407, 414], "n_pattern": [407, 414], "set_param": [407, 408, 410, 411, 413, 414, 415, 416, 417, 419, 420, 421, 556], "__": [407, 410, 411, 413, 414, 415, 416, 417, 419, 420, 421, 556], "classes_": [408, 410], "n_class": [408, 410, 411, 417, 423], "rtepoch": [409, 875], "temporalfilt": [409, 865, 875], "mne_realtim": [409, 867, 875], "base_estim": [410, 417, 875], "score_func": [410, 417, 555], "decision_funct": [410, 411, 417], "nd_featur": [410, 417], "n_slice": 410, "n_features_1": [410, 417], "n_features_2": [410, 417], "n_task": [410, 417], "clone": [410, 417, 832, 834, 842, 875], "n_target": [410, 411, 417, 424], "xt": [410, 417, 420], "283185307179586": 412, "nitim": [412, 707, 713, 774, 875], "n_signal": [412, 718, 720], "fit_intercept": [413, 419], "r2": 413, "edge_correct": [413, 419], "baseestim": [413, 421, 424], "return_filt": 415, "flank": 415, "spectal": 415, "sprectal": 415, "sorter_spec": 415, "x_ssd": 415, "with_mean": 416, "with_std": 416, "estimators_": 417, "filterestim": [418, 865, 875], "unsupervis": 421, "spatialfilt": 422, "_xdawntransform": 422, "features_shape_": 422, "objective_funct": 423, "leaveoneout": 423, "surrogate_tri": 423, "mean_spatial_filt": 423, "pre_dispatch": 424, "n_dimensional_featur": 424, "dispatch": 424, "explos": 424, "spawn": [424, 875], "lightweight": [424, 832], "n_score": 424, "attr": [425, 834], "get_fitting_dig": [426, 865], "extrema": [427, 592, 815], "orig_sfreq": 428, "weight_al": 428, "ignore_ref": [428, 518, 566, 574, 583], "return_map": 428, "mag_scal": [428, 566, 574, 583], "multipolar": [428, 565, 566, 574, 583], "fit_sphere_to_headshap": [428, 565, 566, 574, 583, 865, 875], "magenetomet": [428, 566, 574, 583], "pickup": [428, 566, 574, 583, 857], "0168": [428, 566, 574, 583], "sp": 428, "old_event_id": 429, "new_event_id": 429, "safeti": [429, 842], "collat": 431, "absenc": 431, "ancillari": 431, "union": [431, 448, 555, 584], "myevent": 431, "last_myev": 431, "first_": 431, "event_typ": 431, "respet": 431, "slash": [434, 830, 875], "n_new_ev": 435, "aa": 436, "dd": [436, 487, 875], "ee": 436, "gg": 436, "syncstatu": 436, "99998": 436, "neuroscan": [436, 857, 875], "mffpy": [439, 875], "xml_file": 439, "physical_rang": [440, 475, 476], "add_ch_typ": [440, 475, 476], "vmrk": [440, 475, 476, 601, 851, 875], "edflib": [440, 475, 476, 875], "f_pass": 442, "f_stop": 442, "return_copi": 442, "ellipt": 442, "gpass": 442, "gstop": 442, "weren": 442, "triag": [442, 694], "439": 442, "fs1": 443, "fs2": [443, 446], "fstop": 443, "max_tri": 444, "mt_bandwidth": [446, 475, 476], "centr": [446, 475, 476, 537], "xf": 446, "chronux": 446, "partha": 446, "mitra": 446, "hemant": 446, "bokil": 446, "oxford": [446, 834], "upfirdn": 447, "shortest_ev": 448, "find_stim_step": [448, 865, 875], "00000101": 448, "0000111": 448, "0100101": 448, "0000101": 448, "0000010": 448, "pad_start": 449, "pad_stop": 449, "whichev": [449, 451, 760], "v_from": 449, "v_to": 449, "min_dist": 450, "rhoend": 450, "fmin_cobyla": 450, "limit_depth_ch": [451, 875], "combine_xyz": 451, "gk": 451, "frobeniu": 451, "depth_prior": 451, "compute_orient_prior": [451, 865], "matirx": 451, "orient_prior": 452, "fwd_out": [453, 454], "restrict_forward_to_stc": [453, 865, 875], "restrict_forward_to_label": [454, 865, 875], "raise_error": 455, "config_path": 456, "mnemn": 456, "mgz_fname": 460, "atlas_id": [460, 616], "read_freesurfer_lut": [460, 865, 875], "labels_aseg": 461, "spatio_temporal_tris_adjac": [462, 865, 875], "all_inst": 464, "grown": 465, "territori": 465, "invad": 465, "broadcast": 465, "guess_mri_subject": 466, "head_high_r": 466, "scrollabl": 466, "orient_to_surfac": 466, "scale_by_dist": 466, "mark_insid": 466, "advanced_rend": 466, "head_insid": 466, "launch": [466, 543, 832, 834, 838, 840, 875], "movabl": 466, "splitter": 466, "qt4": 466, "unnecessari": [466, 483, 490, 497, 850, 852], "wx": 466, "occlud": 466, "coregistrationui": 466, "aligned_ct": 467, "ct": [467, 732, 815, 875], "intracranialelectrodeloc": 467, "unscal": [469, 875], "update_mod": 470, "bay": 470, "mackai": 470, "time_pca": 472, "dgap_freq": [472, 473, 875], "cd": [472, 834, 840, 854, 857, 875], "bcd": [472, 875], "dualiti": [472, 473, 875], "alpha_max": [472, 473], "epsilon": [472, 522], "alpha_spac": [473, 875], "alpha_tim": [473, 875], "raw_extra": 474, "orig_format": [474, 475, 476, 875], "buffer_size_sec": [474, 475, 476, 875], "orig_unit": 474, "unsplit": 474, "orig_nchan": 474, "nv": 474, "my_raw_object": 474, "subclass": 474, "_read_segment_fil": 474, "mult": 474, "time_slic": [475, 476], "rawfif": [475, 476], "crop_by_annot": [475, 476, 875], "data_fram": [475, 476], "quartil": [475, 476], "fix_mag_coil_typ": [475, 865, 875], "mne_fix_mag_coil_typ": 475, "load_bad_channel": [475, 476, 875], "bad_fil": [475, 476], "mne_mark_bad_channel": [475, 476], "europ": [475, 476], "lightgrai": [475, 476, 771, 795], "show_first_samp": [475, 476, 555, 789, 795], "eventloop": [475, 476, 795], "prj": [475, 476, 795], "secondari": [475, 476, 795], "stim_pick": [475, 476, 875], "supersampl": [475, 476], "optimum": [475, 476], "drop_small_buff": [475, 476], "gzip": [475, 476, 875], "projecton": [475, 476], "datetimeindex": [475, 476], "pickl": 478, "mrk_point": 478, "fiffv_coord_": [479, 507], "input_fnam": [482, 483, 487, 490, 491, 492, 497, 499, 501, 607, 609], "pos_fnam": 482, "add_head_tran": 482, "artemis123": [482, 857, 875], "infer_typ": [483, 490, 875], "utf8": [483, 490, 875], "bdf": [483, 490, 497, 857, 875], "rawedf": [483, 490, 875], "gdf": [483, 490, 497, 857, 875], "batteri": 483, "trigger_sign": 483, "htm": 483, "cms_bit": 483, "cms_high": 483, "boxi": [484, 857, 875], "rawboxi": 484, "vhdr_fname": 485, "heogl": 485, "heogr": 485, "veogb": 485, "vision": [485, 856, 875], "rawbrainvis": [485, 875], "pdf_fname": 486, "config_fnam": 486, "head_shape_fnam": 486, "sort_by_ch_nam": 486, "e64": 486, "rawbti": 486, "data_format": 487, "date_format": 487, "int16": 487, "int32": [487, 860], "numsampl": 487, "rawcnt": 487, "system_clock": 488, "clean_nam": [488, 875], "rawctf": 488, "curri": [489, 601, 875], "dap": [489, 601], "rs3": 489, "cdt": [489, 601, 875], "dpa": [489, 601], "cef": [489, 601], "rawcurri": 489, "export_raw": [490, 865, 875], "storag": [490, 638], "sao2": 490, "subsecond": 490, "uint16_codec": [491, 601, 607, 875], "montage_unit": [491, 607, 875], "codec": [491, 601, 607, 742], "latin1": [491, 601, 607], "raweeglab": [491, 875], "trev": 492, "e1": [492, 614], "e2": [492, 614], "e3": [492, 614], "rawegi": 492, "nxe": [493, 857], "raweximia": 493, "data_nam": [494, 608, 612], "ft_datatype_raw": 494, "binfil": 496, "fil": [496, 851, 857, 875], "opmeg": 496, "rawfil": 496, "rawgdf": 497, "hitachi": [498, 875], "probe": [498, 875], "rawhitachi": 498, "3x5": 498, "etg": 498, "7000": 498, "d1": 498, "s2": 498, "d2": 498, "s3": 498, "d3": 498, "s4": 498, "d4": 498, "s5": 498, "d5": 498, "s6": 498, "d6": 498, "s7": 498, "d7": 498, "s8": 498, "ft7": 498, "tp7": 498, "laid": 498, "d8": 498, "s9": 498, "d9": 498, "s10": 498, "3x11": 498, "d10": 498, "s11": 498, "d11": 498, "s12": 498, "d12": 498, "s13": 498, "d13": 498, "s14": 498, "d14": 498, "s16": 498, "d16": 498, "s17": 498, "d17": 498, "s18": 498, "stim_cod": 499, "allow_unknown_format": [499, 609], "ricoh": [499, 609, 875], "laboratori": [499, 609], "neuroelectr": 500, "nedf": [500, 875], "rawnedf": 500, "nicolet": [501, 857, 875], "nihon": 502, "kohden": 502, "rawnihon": 502, "nirx": [503, 857, 875], "nosatflag": 503, "rawnirx": 503, "wlx": 503, "nosatflags_wlx": 503, "persyst": [504, 857, 875], "rawpersyst": 504, "snirf": [505, 875], "jnir": 505, "rawsnirf": 505, "indent": [506, 750], "read_limit": [506, 750], "max_str": [506, 750], "mne_show_fiff": 506, "mri_tal": [507, 730], "grow_outsid": 508, "hoc": [511, 841, 875], "standard_devi": 511, "write_bem_surfac": [512, 513, 602, 603, 850, 865, 875], "write_bem_solut": [513, 602, 603, 850, 865, 875], "relative_radii": 519, "radii": [519, 647], "csf": [519, 857], "replace_ev": [520, 875], "n_events_in": 520, "n_events_out": 520, "1111111111111111": [522, 523, 528, 529, 534, 538, 539], "prepare_inverse_oper": [522, 523, 524, 525, 526, 528, 529, 538, 539, 865, 875], "apply_inverse_tfr_epoch": [522, 523, 524, 525, 865, 875], "force_equ": [522, 875], "time_func": 525, "approx": [525, 857], "inv_split": [528, 529], "snr_est": 530, "unregular": 530, "tild": [530, 857, 875], "lambda_k": [530, 857], "gamma_k": [530, 857], "biggest": 530, "chi": 530, "normalis": [531, 532], "willb": [531, 532], "n_orient_inv": [531, 532, 534], "n_orient_fwd": [531, 532, 534], "pca_var": [531, 532], "mantl": [533, 857], "cog_err": 537, "graviti": 537, "cog": 537, "maxrad_ext": 537, "peak_amp": 537, "sum_amp": 537, "surf_nam": [541, 618], "mne_docs_kind": 543, "mne_docs_vers": 543, "grad_reject": 545, "mag_reject": 545, "eeg_reject": 545, "eog_reject": 545, "explanatori": [554, 598], "info_": 554, "intercept_": 554, "cumul": 555, "999999": [555, 875], "n_components_": [555, 875], "n_iter_": [555, 875], "pseudoinvers": [555, 566, 857, 875], "instabl": 555, "migrat": [555, 875], "debat": 555, "zca": 555, "tol_fastica": 555, "tol_picard": 555, "current_fit": 555, "unfit": 555, "pre_whitener_": 555, "pca_components_": 555, "pca_mean_": 555, "pca_explained_variance_": 555, "scrap": 555, "n_samples_": 555, "on_baselin": [555, 786, 875], "ummix": [555, 556], "reappli": [555, 786, 822, 875], "anymor": [555, 842, 875], "supra": [555, 557], "ecg_idx": 555, "kuiper": 555, "eog_idx": 555, "paralyz": 555, "threefold": 555, "farthest": 555, "msucl": 555, "ref_ica": 555, "ref_idx": 555, "baseraw": [555, 563, 865, 875], "unclean": 555, "pvaf": 555, "usecas": [555, 789], "plot_std": [555, 785, 787], "image_arg": [555, 695, 785, 787], "psd_arg": [555, 785, 787], "plot_ica_compon": [555, 865, 875], "topomap_axi": [555, 787], "image_axi": [555, 787], "erp_axi": [555, 787], "spectrum_axi": [555, 787], "variance_axi": [555, 787], "logarithm": [555, 787], "ass": [555, 788], "n_ica_compon": [555, 788], "sublabel": [555, 788], "score_sourc": [555, 875], "pearsonr": 555, "skew": 555, "correct_overlap": 556, "overlapp_correct": 556, "evokeds_": 556, "event_id_": 556, "correct_overlap_": 556, "n_event_typ": 556, "bad_perc": 557, "bad_peak": 557, "bad_flat": 557, "uncommon": 557, "sole": [558, 851, 856], "rotation_velocity_limit": 559, "translation_velocity_limit": 559, "use_dev_head_tran": [559, 875], "lm_cutoff": 563, "epoch_threshold": 563, "bw_method": 563, "intrins": 563, "hjorth": 563, "gaussian_kd": 563, "n_legendre_term": 564, "lap": [564, 640], "inst_csd": 564, "n_imbal": 565, "multipol": [565, 583], "bad_condit": [566, 574, 583], "extended_proj": [566, 574, 583], "ill": [566, 574, 583], "esss": [566, 574, 583, 863, 875], "n_meg": [566, 574], "n_moment": 566, "n_good_meg": 566, "reg_moment": 566, "n_use_in": 566, "dagger": 566, "phi": 566, "phi_in": 566, "data_meg_good": 566, "raw_ev": [567, 568], "avg_ref": [567, 568], "return_drop_log": [567, 568, 875], "ecg_ev": [567, 575, 578], "0005": [568, 854], "e0g": 568, "feed": [569, 857], "corrmapplugin1": 569, "categoris": 569, "preexist": 569, "dry": 569, "template_fig": 569, "labelled_": 569, "mag_pick": 570, "grad_pick": 570, "keep_ecg": [571, 875], "r_peak_events_arrai": 571, "doctest": 571, "interp_thresh": 573, "insts_bad": 573, "formerli": [573, 875], "noisy_ch": 574, "flat_ch": 574, "Their": [574, 834], "scores_flat": 574, "limits_flat": 574, "annotate_amplitud": [574, 583, 865, 875], "st_fix": [574, 583], "d_k": 574, "mu_d": 574, "sigma_d": [574, 857], "textrm": 574, "return_ecg": 575, "ch_ecg": [575, 578], "average_puls": [575, 578], "ecg_sourc": 578, "eog_sourc": 579, "n_neighbor": 580, "l_rate": 581, "w_chang": 581, "anneal_deg": 581, "anneal_step": 581, "n_subgauss": 581, "kurt_siz": 581, "ext_block": 581, "blowup": [581, 660], "blowup_fac": 581, "n_small_angl": 581, "use_bia": 581, "return_n_it": [581, 875], "kurtosi": 581, "unmixing_matrix": 581, "return_max_it": 581, "bad_limit": 582, "ovwrlap": 583, "forth": 583, "relicens": 583, "permiss": 583, "certifi": 583, "seamless": 583, "vet": [583, 863], "abramowitz": 583, "stegun": 583, "us2006031038": 583, "us6876196": 583, "wo2005067789": 583, "wo2005078467": 583, "wo2006114473": 583, "lawyer": 583, "raw_er": 584, "from_raw": 584, "inject": 584, "raw_er_prepar": 584, "compil": 584, "pathlength": [585, 875], "hemoglobin": [590, 875], "wherev": 590, "realtim": [591, 865, 875], "provision": 591, "x0": [592, 680], "peak_loc": 592, "peak_mag": 592, "nathanael": 592, "yoder": 592, "ncyoder": 592, "purdu": 592, "36900026": 592, "76007351": 592, "imb_cal": 594, "t_raw": 597, "t_other": 597, "realign": [597, 830, 875], "first_ev": 597, "n_picks_ref": 598, "epochs_no_av": 598, "epochs_clean": 598, "n_parcel": 600, "amrk": 601, "ahdr": [601, 875], "patch_stat": [603, 625], "s_id": 603, "eventtyp": 607, "trialinfo_column": 608, "trialinfo": [608, 875], "mne_browse_raw": [610, 860], "avr": [611, 875], "mul": [611, 875], "sidecar": 611, "timelock": 612, "write_labels_to_annot": [617, 618, 824, 865, 875], "annot_fnam": [618, 825], "ascend": [618, 783, 790, 854, 875], "mne_make_morph_map": [620, 860], "morph_map": 620, "left_map": 620, "right_map": 620, "asterisk": 623, "source_morph": 624, "return_dict": 626, "file_format": [626, 828], "voxels": [626, 828], "xra": [626, 828], "yra": [626, 828], "zra": [626, 828], "cra": [626, 828], "n_face": [626, 629, 828], "read_tri": [626, 828, 865], "return_al": 628, "fname_in": 629, "clockwis": [629, 747], "counterclockwis": [629, 860], "spcecifi": 630, "bem_nam": 632, "subjects_from": [632, 635], "ba3a": 633, "cfg": 633, "skip_fiduci": 634, "ioerror": 634, "scale_bem": [634, 865, 875], "scale_label": [634, 865], "scale_source_spac": [634, 865], "src_name": 635, "my_source_spac": 635, "mne_sensitivity_map": 636, "ch_info": [637, 875], "drop_ref": [637, 875], "on_bad": 637, "unreferenc": 637, "cache_dir": 638, "output_format": 641, "howto": 641, "asctim": 641, "levelnam": 641, "notifi": [641, 834], "return_old_level": 642, "add_fram": [642, 737], "old_level": 642, "single_volum": [644, 875], "ox": 644, "oi": 644, "iii": 644, "get_stim_channel": 645, "stim_data": 645, "add_chpi": [647, 648, 660, 865, 875], "inhomogen": 648, "poisson": 648, "stc_true": [650, 651, 652, 653, 654, 655, 656, 657], "stc_est": [650, 651, 652, 653, 654, 655, 656, 657], "ppe": 652, "dfrac": [652, 657], "sum_i": [652, 657], "s_i": [652, 657], "r_i": [652, 657, 857], "tp": [653, 654], "fn": 654, "2q": 655, "min_": [655, 857], "r_k": 655, "r_l": 655, "mathbb": 655, "dle": 655, "ed": [655, 875], "terminologi": 655, "actual_snr": 659, "sti001": 660, "allow_overlap": 662, "coo_matrix": [665, 666, 667, 668, 669, 670, 671, 675], "additit": 666, "remap_vertic": [668, 671], "reassign": [668, 671], "2n": [669, 670, 671, 857], "pval_correct": [673, 679], "n_bootstrap": 674, "spmatrix": [675, 682, 683, 685, 686], "n_ob": 675, "chan_adj": 675, "5600x5600": 675, "27076": 675, "compliant": [676, 863], "slowest": 676, "a2b2": 676, "greenhous": 676, "geisser": 676, "f_val": 676, "homoscedast": 677, "kruskal": 677, "walli": 677, "pvalu": 678, "yekuti": 679, "negcorr": 679, "n_regressor": 680, "choleski": [681, 857, 875], "n_cond": 681, "bx": 681, "enorm": 681, "overload": 681, "subepoch": 681, "n_predictor": 681, "time_window_length": 681, "t_power": [682, 683, 685, 686], "check_disjoint": [682, 683, 685, 686], "subarrai": 682, "kth": 682, "unconnect": [682, 683, 685, 686], "disjoint": [682, 683, 685, 686], "set_cache_dir": [682, 683, 685, 686, 865], "rv_continu": [682, 683, 685, 686], "untract": 684, "spatial_exclud": [685, 686], "p_thresh": 687, "equal_var": 689, "ball": 690, "volu": 690, "do_neighbor_vert": 692, "do_neighbor_tri": 692, "show_path": 694, "sy": [694, 838, 875], "1067": 694, "feb": 694, "bla": [694, 833], "lapack": [694, 833], "qt5agg": 694, "pyside6": [694, 833], "power_baselin": 695, "frequency_window": 695, "read_tfr": [695, 698, 728, 865, 875], "write_tfr": [695, 698, 717, 865], "csd_array_fouri": [696, 701, 702, 703, 704, 705, 865, 875], "csd_array_multitap": [696, 700, 701, 703, 704, 705, 865, 875], "csd_array_morlet": [696, 700, 702, 703, 704, 705, 865, 875], "as_cov": 696, "pack": 696, "pick_frequ": 696, "read_csd": [696, 865, 875], "getitem_epochspectrum_return": 697, "ci_alpha": [697, 699], "read_spectrum": [697, 699, 865], "latex": [697, 699], "pertin": 698, "12676": 698, "getitem_spectrum_return": 699, "sixth": 699, "subscript": 699, "freq_indic": 699, "half_nbw": 707, "kmax": 707, "sym": [707, 875], "nw": 707, "half_bw": 707, "bw": 707, "f0": 707, "tridiagon": 707, "jw": 708, "jnw": 708, "tx": 710, "n_step": [710, 718, 742], "_cycl": [711, 721, 722, 723, 725, 726], "morlet2": [711, 721], "sp_morlet": [711, 721], "this_fwhm": [711, 721], "wavelet_sp": [711, 721], "half_max": [711, 721], "n_taper": [713, 723], "get_window": [714, 796], "istft": [718, 719, 865, 875], "stftfreq": [718, 865], "epoch_data": [722, 723], "avg_power_itc": [722, 723], "power_": [722, 723], "tfr_array_multitap": [722, 724, 725, 726, 727, 865, 875], "tfr_array_stockwel": [722, 723, 725, 726, 727, 865, 875], "interrel": [722, 723, 725, 726, 841], "strive": [723, 726, 856], "finer": [723, 726, 875], "undermin": [723, 726], "intertri": [724, 727], "st_power": 724, "from_str": 730, "to_str": 730, "reg_img": 731, "niter": [732, 875], "mr": [732, 857, 863, 875], "affine_registr": 732, "rot_to_quat": [733, 865], "quat_to_rot": [735, 865], "contextlib": 736, "contextmanag": 736, "my_fnam": 736, "moin": 738, "pythondecoratorlibrari": 738, "sentenc": 738, "futurewarn": [738, 834, 875], "ignore_namespac": 739, "namespac": [739, 834, 865, 875], "travers": 739, "_funct": 740, "filler": 740, "5880": 740, "offscreen": 742, "subject_id": [742, 875], "buggi": 742, "soon": [742, 851, 856, 857], "add_skul": 742, "remove_data": 742, "remove_dipol": [742, 875], "remove_forward": [742, 875], "remove_head": 742, "remove_label": 742, "remove_annot": 742, "remove_sensor": 742, "remove_skul": 742, "remove_text": 742, "remove_volume_label": 742, "timeview": 742, "get_picked_point": 742, "geo": 742, "ctab": 742, "lh_ctab": 742, "rh_ctab": 742, "rbga": 742, "icefir": 742, "rocket": 742, "nvtx": 742, "thrown": [742, 875], "font": [742, 801], "add_scalar_bar": 742, "title_font_s": 742, "hex": [742, 766], "map_surfac": [742, 875], "n_coord": 742, "stereotax": 742, "coord_as_vert": 742, "1cm": 742, "subdir": 742, "reset_camera": [742, 810], "justif": 742, "update_text": 742, "fill_hole_s": [742, 875], "hole": [742, 875], "dilat": 742, "apply_auto_sc": 742, "clear_glyph": 742, "cleanup": [742, 863], "widget": [742, 744, 875], "get_view": [742, 875], "zenith": [742, 810], "plot_time_cours": 742, "vertex_id": 742, "plot_time_lin": 742, "reset_view": 742, "restore_user_sc": 742, "bitrat": 742, "imageio": 742, "mov": 742, "interp1d": 742, "slinear": 742, "quadrat": 742, "n_frame": 742, "separate_canva": 742, "set_data_smooth": 742, "set_playback_spe": 742, "playback": 742, "set_tim": [742, 875], "set_time_interpol": 742, "set_time_point": 742, "time_idx": 742, "setup_time_view": 742, "rear": [742, 830], "time_interpol": 742, "toggle_interfac": 742, "toggle_playback": 742, "update_lut": 742, "imdata": 743, "onclick": 743, "backend_bas": 743, "bg": [743, 745], "set_ratio": 745, "ax_im": 745, "node_nam": 747, "start_between": 747, "group_sep": 747, "n_node_nam": 747, "fname_1": 750, "fname_2": 750, "show_fiff": [750, 865, 875], "smooth_shad": [751, 808], "_render": 751, "undocu": 751, "backend_us": [752, 754], "ch_dx": 755, "teal": 757, "onselect": [759, 804], "rectangleselector": [759, 804], "show_indic": 760, "show_orient": [760, 875], "colorbarbas": 761, "polarax": 764, "type_snr": 765, "type_pow": 765, "type_resid": 765, "truncate_xaxi": [766, 875], "invert_i": 766, "unweight": 766, "inset": [766, 875], "n_evok": 766, "hexadecim": 766, "equal_spac": 775, "1f77b4": 783, "fscale": [783, 790], "alim": [783, 790], "pointsiz": 798, "bet": 798, "bluish": 799, "brain_color": [801, 875], "fig_numb": 801, "cone": 801, "axesimag": 804, "contourset": 804, "fieldlin": 804, "mixedvectorsourceestim": [805, 865, 875], "backend_nam": [807, 811, 813, 814], "old_backend_nam": [807, 811], "plot_evoked_field": [807, 865, 875], "link_brain": [807, 865, 875], "inlin": [807, 832, 838], "jupyterlab": 807, "colab": 807, "antialia": [808, 832], "depth_peel": 808, "multi_sampl": 808, "plot_epoch": [811, 834, 865, 875], "plot_ica_sourc": [811, 865, 875], "hide_sensor": 812, "dn": 812, "base_imag": 815, "max_peak_dist": 815, "voxels_max": 815, "use_min": 815, "subject_dir_from": 815, "image_from": 815, "image_to": 815, "hsv": 825, "table_nam": 825, "colort": 825, "create_stamp": 828, "vocabulari": [830, 858], "textual": [830, 875], "spindl": 830, "acronym": [830, 858], "definion": 830, "mv": [830, 875], "\u00b5m": 830, "od": 830, "dealt": 830, "synapt": 830, "intracellular": 830, "pyramid": [830, 857], "perpendicularli": 830, "erron": [830, 875], "peculiar": 830, "encapsul": [830, 857], "hcpmmp": [830, 875], "gave": 830, "cartoon": 830, "pependicular": 830, "laser": 830, "ga": 830, "rubidium": 830, "superconduct": 830, "quantum": 830, "scaleogram": 830, "uncorrel": 830, "nb_conda_kernel": 832, "anaconda": [832, 834, 838, 839, 845, 875], "forum": [832, 833, 834, 837, 840, 841, 851, 853, 854, 855], "osmesa": 832, "xvfb": 832, "forg": [832, 834, 838, 842], "latest": [832, 834, 842, 854, 875], "git": [832, 841], "miniconda": [832, 834], "miniforg": 832, "pythonpath": 832, "pythonhom": 832, "curl": [832, 834], "githubusercont": [832, 834], "unabl": [832, 856, 875], "nvidia": [832, 854], "proprietari": [832, 856], "driver": 832, "init_cuda": [832, 865], "pytest": [832, 834], "test_filt": 832, "multithread": [832, 854], "swr": 832, "cento": 832, "spyder": [832, 834, 837, 838, 854], "mesa_gl_version_overrid": 832, "rend": 832, "msaa": 832, "antialias": [832, 875], "set_3d_opt": [832, 865, 875], "incomplet": [832, 863, 875], "prebuilt": 832, "xzvf": 832, "mesa_18": 832, "6_centos_lib": 832, "tgz": 832, "libgl_drivers_path": 832, "pwd": 832, "ld_library_path": 832, "went": [832, 833], "glxinfo": 832, "grep": [832, 834, 842], "uninstal": [832, 842], "cach": [832, 842], "gcp": 833, "travi": [833, 875], "virtualenv": 833, "8dfaa4a": 833, "f614064": 833, "qtagg": 833, "post1": 833, "modulenotfounderror": 833, "bashrc": [833, 839, 840], "zprofil": [833, 839], "zsh": [833, 839, 840], "troubleshoot": [833, 853, 855], "sustain": [834, 856], "volunt": 834, "welcom": 834, "anyon": [834, 856], "abid": 834, "fastest": [834, 840], "feel": [834, 841, 856, 875], "upstream": 834, "desktop": 834, "appreci": 834, "sudo": [834, 835, 840], "apt": [834, 835], "dmg": [834, 840], "atlassian": 834, "macport": [834, 840], "homebrew": [834, 840], "yourdomain": 834, "sooner": 834, "commit": [834, 856, 863, 875], "emac": 834, "vim": 834, "nano": 834, "subl": 834, "makefil": 834, "newest": 834, "guil": 834, "w32": 834, "ezwinport": 834, "path_to_git": 834, "mingw64": 834, "mnedev": 834, "path_to_anaconda": 834, "team": [834, 856], "yml": 834, "github_usernam": 834, "insert_your_actual_github_username_her": 834, "install_loc": 834, "opt": [834, 838, 839, 840], "site_packag": 834, "requirements_test": 834, "requirements_doc": 834, "graphviz": 834, "graphviz_dot": 834, "conda_prefix": 834, "optipng": 834, "linter": 834, "restructuredtext": 834, "autobuild": 834, "doc8": 834, "url_of_remote_repo": 834, "nickname_of_remot": 834, "repo": [834, 856], "undoubtedli": 834, "checkout": 834, "colleagu": 834, "unstag": 834, "some_fil": 834, "some_new_fil": 834, "entireti": 834, "some_other_fil": 834, "bypass": [834, 875], "enh": 834, "some_testing_fil": 834, "new_tutorial_fil": 834, "stuck": 834, "secur": [834, 840], "secret": 834, "client": [834, 875], "test_evok": 834, "python_refer": 834, "rst": 834, "my_funct": 834, "my_new_funct": 834, "old_param": 834, "new_param": 834, "my_other_funct": 834, "depr_messag": 834, "changeset": 834, "minor": [834, 860, 863, 875], "typo": [834, 853, 875], "subsect": 834, "bugfix": [834, 842], "happi": 834, "credit": 834, "gh": [834, 875], "newcontrib": 834, "firstnam": 834, "lastnam": 834, "_your": 834, "test_topo": 834, "pep": 834, "pep8": 834, "pyflak": 834, "flake8": 834, "flake": 834, "ins": 834, "camelcas": [834, 865], "snake_cas": 834, "nsampl": 834, "complic": [834, 875], "sphinxcontrib": 834, "bibtex": [834, 849], "citat": [834, 875], "bibliograph": 834, "bib": 834, "singleauthor2019": 834, "authoroneauthortwo2020": 834, "firstauthoretal2021a": 834, "firstauthoretal2021b": 834, "param_nam": 834, "test_docstring_paramet": 834, "docstyl": 834, "glossari": [834, 858], "mod": 834, "intersphinx": 834, "inventori": 834, "sphobjinv": 834, "dump": 834, "ext": 834, "backtick": [834, 854], "pdb": 834, "debugg": [834, 875], "test_io_evok": 834, "imit": 834, "html_dev": 834, "noplot": 834, "regex_to_select_my_tutori": 834, "unrel": 834, "browse_raw": [834, 875], "mortem": 834, "pm": 834, "everyon": 834, "scientist": [834, 838, 853], "spare": 834, "streamlin": 834, "collabor": [834, 841, 856], "fruit": 834, "road": 834, "someon": 834, "occasion": [834, 851], "cosmet": 834, "backport": [834, 875], "whats_new": 834, "draft": 834, "wip": 834, "mrg": 834, "sty": 834, "azp": 834, "azur": 834, "exemplifi": 834, "ecosystem": [835, 838, 841], "tcsh": [835, 839, 840], "ubuntu": [835, 837, 840, 863], "bionic": 837, "beaver": 837, "1_0": 837, "intel": [837, 854], "catalina": [837, 839, 875], "silicon": 837, "studio": [837, 838], "python_1": 837, "0_1": 837, "mamba": 838, "prioriti": 838, "h5io": [838, 854], "h5py": [838, 854], "pymatread": [838, 875], "vscode": 838, "microsoft": 838, "anaconda3": [838, 839], "pyqt5": 838, "pyqt": [838, 875], "pycharm": [838, 854], "paid": 838, "profession": 838, "cmd": 839, "bash_profil": 839, "__conda_setup": 839, "overflow": [839, 875], "leopard": 840, "powerpc": 840, "runtim": 840, "mne_convert_mne_data": 840, "mne_epochs2mat": [840, 860], "mne_raw2mat": 840, "mne_simu": 840, "xcode": 840, "xquartz": 840, "x11": 840, "libxt": 840, "dylib": 840, "bak": 840, "flat_namespac": 840, "netpbm": 840, "brew": 840, "app": 840, "nightli": [840, 875], "path_to_desired_install_loc": 840, "zxvf": 840, "path_to_archive_fil": 840, "pkg": 840, "untrust": 840, "privaci": [840, 856], "mne_root": [840, 857, 860, 875], "matlab_root": 840, "r2018b": 840, "undefin": 840, "mne_setup_sh": 840, "csh": 840, "mne_setup": [840, 860], "path_to_mn": 840, "path_to_matlab": 840, "emul": 840, "zshrc": 840, "cshrc": 840, "tcshrc": 840, "setenv": [840, 845], "mne_opengl_test": 840, "redraw": 840, "spent": 840, "revolut": 840, "interrupt": 840, "glx": 840, "nondirect": 840, "IT": 840, "vnc": 840, "card": [840, 875], "libxp": 840, "libxp6": 840, "debian": [840, 863, 875], "dpkg": 840, "libxp6_1": 840, "1ubuntu1_amd64": 840, "deb": 840, "libgfortran": 840, "libfortran": 840, "gnu": 840, "maxdepth": 840, "interoper": 841, "reimplement": 841, "cpp": [841, 875], "connectom": [841, 863], "compli": [841, 875], "alphacsc": 841, "pactool": 841, "microst": 841, "conpi": 841, "eelbrain": 841, "posthoc": 841, "prep": 841, "pyprep": 841, "sesam": 841, "sesameeg": 841, "invertmeeg": 841, "unix": [841, 875], "name_of_environ": 842, "fool": 842, "proof": 842, "old_mn": 842, "dep": 842, "hm": [845, 851], "pubsw": 845, "subscrib": 845, "modular": 846, "qt3d": 846, "babymeg": 846, "tmsi": 846, "refa": 846, "brainamp": 846, "ant": 846, "eegosport": 846, "gusbamp": 846, "gramfortetal2013a": 849, "gramfortetal2014": 849, "bibliographi": 849, "meg2443": 850, "vanish": 850, "advers": 850, "preliminari": 850, "stamp": 850, "mm2": 850, "ico5": 850, "tessel": [850, 860], "prerequisit": 850, "bulletproof": 850, "feasibl": 850, "sep": 850, "bem_sol": 850, "reestablish": 850, "corregistr": 850, "charg": 850, "photograph": 850, "uninterest": 850, "epilept": 850, "infrequ": 850, "hesit": [851, 854], "siemen": [851, 857], "sonata": 851, "mprage": [851, 854, 857], "interspers": 851, "lv": 851, "audvis_raw": 851, "auvi": 851, "agre": 851, "bst_rest": [851, 865], "khz": 851, "dicom": [851, 860, 875], "richli": 851, "timon": [851, 875], "9999": 851, "msr": 851, "retrospect": 851, "satisfactori": 851, "chin": 851, "respir": [851, 857, 860], "hypnogram": 851, "rechtschaffen": 851, "kale": 851, "erlangen": 851, "germani": 851, "shaft": [851, 863], "pend": 851, "craft": 851, "lrp": 851, "ern": 851, "neuroscientist": 852, "keystrok": 852, "peak_find": [852, 865, 875], "appnop": 854, "nope": 854, "nsappsleepdis": 854, "tempt": 854, "benfrederickson": 854, "dont": 854, "stackoverflow": 854, "21752259": 854, "write_": 854, "resid": 854, "plot_find_ecg_artifact": 854, "ordinarili": 854, "mkl": 854, "openmp": 854, "omp_num_thread": 854, "openblas_num_thread": 854, "num_cpu": 854, "implic": 854, "simplist": 854, "gpu": [854, 875], "epochs_path": 854, "protrud": 854, "shrunken": 854, "mri_norm": 854, "xopt": 854, "gentl": 854, "listserv": 854, "recon_al": 854, "autorecon2": 854, "autorecon3": 854, "formal": 856, "extraordinari": 856, "clarifi": [856, 875], "profit": 856, "entiti": [856, 860], "openli": 856, "affili": 856, "discours": 856, "behalf": 856, "barrier": 856, "leadership": 856, "neutral": 856, "tradition": [856, 857], "reward": 856, "benevol": 856, "dictat": 856, "defer": 856, "vote": 856, "deadlock": 856, "fork": 856, "disagre": 856, "deleg": 856, "appoint": 856, "successor": 856, "faith": 856, "director": 856, "ceo": [856, 875], "everydai": 856, "peer": 856, "privileg": 856, "servic": [856, 875], "scope": 856, "strateg": 856, "polici": [856, 875], "nomin": 856, "willing": 856, "capac": 856, "infrastructur": [856, 875], "outreach": 856, "deliber": 856, "divers": 856, "viewpoint": 856, "talent": 856, "grace": 856, "retir": 856, "eject": 856, "deem": 856, "harm": 856, "financi": 856, "employ": 856, "disclos": 856, "recus": 856, "themself": 856, "sparingli": 856, "apach": 856, "veto": 856, "rational": 856, "opinion": 856, "anticip": [856, 875], "suffic": 856, "usurp": 856, "countri": 856, "gift": 856, "partnership": 856, "approv": 856, "commenc": 856, "laps": 856, "pursu": 856, "monei": 856, "donor": 856, "umbrella": 856, "trademark": 856, "invit": 856, "waiv": 856, "copyright": 856, "mole": 857, "sensibl": 857, "femtotesla": 857, "typecast": 857, "unread": [857, 875], "electrocardiographi": 857, "electromyographi": 857, "celsiu": 857, "channels_3_and_4": 857, "boldsymbol": 857, "c_0": 857, "g_": 857, "infti": 857, "r_j": 857, "t_d": 857, "underbrac": 857, "b_": 857, "b_n": 857, "dotso": 857, "uc_n": 857, "constitut": 857, "orthonorm": 857, "c_e": 857, "complement": 857, "perp": 857, "uu": 857, "segonn": 857, "_brain_surfac": 857, "_inner_skull_surfac": 857, "_outer_skull_surfac": 857, "_outer_skin_surfac": 857, "availablili": 857, "fov": 857, "dcm2niix": 857, "mne_organize_dicom": 857, "flash05": 857, "fat32": 857, "mri_ms_fitparm": 857, "mri_synthes": 857, "fsl_rigid_regist": 857, "flash5_reg": 857, "cor": 857, "mri_make_bem_surfac": 857, "tringul": 857, "t_x": 857, "ti": 857, "mm3": 857, "mnitalairach": 857, "mni305": 857, "y_2": 857, "z_2": 857, "y_1": 857, "z_1": 857, "x_0": 857, "y_0": 857, "z_0": 857, "x_k": 857, "y_k": 857, "z_k": 857, "jk": 857, "9688": [857, 875], "0485": 857, "9189": 857, "t_1": 857, "s_1": 857, "s_n": 857, "t_2": 857, "filessepar": 857, "t_3": 857, "mghformat": 857, "t_4": 857, "hardcod": 857, "idiosyncrasi": 857, "conceiv": 857, "s_p": 857, "50mm": 857, "r_0": 857, "e_x": 857, "e_i": 857, "e_z": 857, "r_c": 857, "r_d": 857, "0d": 857, "n_k": 857, "w_": 857, "kp": 857, "sixteen": 857, "tm": [857, 860, 875], "centerpoint": 857, "mne_list_coil_def": 857, "3012": 857, "8mm": 857, "wh": 857, "3600": 857, "4003": 857, "4005": 857, "5001": 857, "5002": 857, "5003": 857, "5004": 857, "6001": 857, "diamet": 857, "nx": 857, "ny": 857, "nz": [857, 875], "r_1": 857, "dotsc": 857, "r_m": 857, "mu_1": 857, "mu_m": 857, "int_": 857, "v_": 857, "ly": 857, "average_forward_solut": [857, 865], "ensu": 857, "posteriori": 857, "viabl": 857, "3p": 857, "unconstrain": 857, "mx": 857, "smoother": [857, 875], "arriv": 857, "bigl": 857, "bigr": 857, "u_c": 857, "lambda_c": 857, "grg": 857, "possess": 857, "varepsilon_k": 857, "sigma_k": 857, "rout": 857, "superscript": 857, "v_k": 857, "w_k": 857, "propto": 857, "dimensionless": 857, "tendenc": 857, "divis": [857, 875], "2_k": 857, "g_i": 857, "u_": 857, "lambda_": 857, "_i": 857, "noiseless": 857, "misfit": 857, "pi_k": 857, "recolor": 857, "eigenfield": 857, "n_d": 857, "a_d": 857, "postsynapt": 857, "microscop": 857, "rigidli": 857, "floc": 857, "thereaft": 857, "vloc": 857, "favor": [857, 875], "1p": 857, "2p": 857, "l_": 857, "eff": 857, "w_i": 857, "x_i": 857, "c_y": 857, "l_i": 857, "w_1": 857, "w_2": 857, "l_1": 857, "l_2": 857, "supposedli": 857, "x_j": 857, "t_j": 857, "biject": 857, "smudg": 857, "n_j": 857, "prod_": 857, "kindli": 858, "function_nam": 858, "w3school": 859, "carpentri": 859, "lesson": 859, "fiff_": 860, "startup": 860, "mne_ex": 860, "fiff_setup_read_raw": 860, "fiff_read_raw_seg": 860, "fiff_find_evok": 860, "fiff_read_bad_channel": 860, "fiff_read_ctf_comp": 860, "fiff_read_evok": 860, "fiff_read_evoked_al": 860, "fiff_read_meas_info": 860, "fiff_read_mri": 860, "fiff_read_proj": 860, "fiff_read_raw_segment_tim": 860, "fiff_pick_channel": 860, "fiff_pick_channels_evok": 860, "fiff_pick_info": 860, "fiff_pick_typ": 860, "fiff_pick_types_evok": 860, "fiff_invert_transform": 860, "fiff_reset_ch_po": 860, "fiff_transform_eeg_ch": 860, "fiff_transform_meg_ch": 860, "fiff_define_const": 860, "fiff_dir_tree_find": 860, "fiff_list_dir_tre": 860, "fiff_make_dir_tre": 860, "fiff_open": 860, "fiff_read_named_matrix": 860, "fiff_read_tag": 860, "fiff_read_tag_info": 860, "fiff_split_name_list": 860, "fiff_end_block": 860, "fiff_end_fil": 860, "fiff_start_block": 860, "fiff_start_fil": 860, "fiff_write_ch_info": 860, "fiff_write_coord_tran": 860, "fiff_write_ctf_comp": 860, "fiff_write_dig_point": 860, "fiff_write_complex": 860, "fiff_write_complex_matrix": 860, "fiff_write_doubl": 860, "fiff_write_double_complex": 860, "fiff_write_double_complex_matrix": 860, "fiff_write_double_matrix": 860, "fiff_write_evok": 860, "repons": 860, "fiff_write_float": 860, "fiff_write_float_matrix": 860, "fiff_write_id": 860, "fiff_write_int": 860, "fiff_write_int_matrix": 860, "fiff_write_name_list": 860, "fiff_write_named_matrix": 860, "fiff_write_proj": 860, "fiff_write_short": 860, "fiff_write_str": 860, "fiff_finish_writing_raw": 860, "fiff_start_writing_raw": 860, "fiff_write_dig_fil": 860, "fiff_write_raw_buff": 860, "mne_add_coil_def": 860, "mne_load_coil_def": 860, "mne_compensate_to": 860, "mne_get_current_comp": 860, "mne_make_compens": 860, "mne_make_projector_info": 860, "mne_make_projector": 860, "mne_set_current_comp": 860, "mne_pick_channels_cov": 860, "mne_pick_channels_forward": 860, "mne_read_bem_surfac": 860, "mne_read_cov": 860, "mne_read_epoch": 860, "mne_read_ev": 860, "mne_read_forward_solut": 860, "mne_read_inverse_oper": 860, "mne_read_morph_map": 860, "mne_read_noise_cov": 860, "mne_read_source_spac": 860, "mne_write_cov": 860, "mne_write_cov_fil": 860, "mne_write_ev": 860, "mne_write_inverse_sol_stc": 860, "mne_write_inverse_sol_w": 860, "mne_read_stc_fil": 860, "mne_read_stc_file1": 860, "mne_read_w_fil": 860, "mne_read_w_file1": 860, "mne_write_stc_fil": 860, "mne_write_stc_file1": 860, "mne_write_w_fil": 860, "mne_write_w_file1": 860, "mne_read_label_fil": 860, "mne_write_label_fil": 860, "mne_label_time_cours": 860, "mne_read_curvatur": 860, "mne_read_surfac": 860, "mne_reduce_surfac": 860, "reducepatch": 860, "mne_write_surfac": 860, "mne_block_diag": 860, "mne_combine_xyz": 860, "mne_file_nam": 860, "mne_find_channel": 860, "mne_find_source_space_hemi": 860, "mne_fread3": 860, "mne_fwrite3": 860, "mne_make_combined_event_fil": 860, "mne_omit_first_lin": 860, "mne_setup_toolbox": 860, "mne_transform_coordin": 860, "mne_collect_transform": 860, "mne_transpose_named_matrix": 860, "mne_transform_source_space_to": 860, "mne_ex_average_epoch": 860, "mne_ex_cancel_nois": 860, "mne_ex_compute_invers": 860, "mne_ex_data_set": 860, "mne_ex_evoked_grad_amp": 860, "mne_ex_read_epoch": 860, "mne_ex_read_evok": 860, "mne_ex_read_raw": 860, "mne_ex_read_write_raw": 860, "mne_copy_processing_histori": 860, "revis": 860, "coil_geometry_inform": 860, "fiffb_meas_info": 860, "mne_compute_raw_invers": 860, "fiffv_meg_ch": 860, "fiffv_ref_meg_ch": 860, "fiffv_eef_ch": 860, "fiffv_mcg_ch": 860, "mcg": 860, "fiffv_stim_ch": 860, "fiffv_eog_ch": 860, "fiffv_emg_ch": 860, "fiffv_ecg_ch": 860, "fiffv_misc_ch": 860, "fiffv_resp_ch": 860, "fiffv_coord_unknown": 860, "fiffv_coord_devic": 860, "fiffv_coord_isotrak": 860, "fiffv_coord_hpi": 860, "fiffv_coord_mri_slic": 860, "fiffv_coord_mri_displai": 860, "fiffv_coord_dicom_devic": 860, "fiffv_coord_imaging_devic": 860, "fiffv_mne_coord_tufts_eeg": 860, "tuft": 860, "fiffv_mne_coord_ctf_devic": 860, "fiffv_mne_coord_ctf_head": 860, "1004": 860, "fiffv_aspect_averag": 860, "fiffv_aspect_std_err": 860, "fiffv_aspect_singl": 860, "fiffv_aspect_subaverag": 860, "fiffv_aspect_altaverag": 860, "fiffv_aspect_sampl": 860, "fiffv_aspect_power_dens": 860, "fiffv_aspect_dipole_wav": 860, "fiffv_bem_surf_id_unknown": 860, "fiffv_bem_surf_id_brain": 860, "fiffv_bem_surf_id_skul": 860, "fiffv_bem_surf_id_head": 860, "fiffv_point_hpi": 860, "fiffv_point_ecg": 860, "fiffv_point_extra": 860, "fiffv_point_lpa": 860, "fiffv_point_rpa": 860, "fiffv_mne_meg": 860, "fiffv_mne_eeg": 860, "fiffv_mne_meg_eeg": 860, "fiffv_mne_unknown_cov": 860, "fiffv_mne_noise_cov": 860, "fiffv_mne_sensor_cov": 860, "fiffv_mne_source_cov": 860, "fiffv_mne_fmri_prior_cov": 860, "fiffv_mne_signal_cov": 860, "fiffv_mne_depth_prior_cov": 860, "fiffv_mne_orient_prior_cov": 860, "fiffv_proj_item_non": 860, "fiffv_proj_item_dip_fix": 860, "fiffv_proj_item_dip_rot": 860, "fiffv_proj_item_homog_grad": 860, "fiffv_proj_item_homog_field": 860, "fiffv_proj_item_eeg_avref": 860, "uint32": 860, "parent_id": 860, "nent": 860, "nchild": 860, "1970": [860, 875], "fiffv_coord": 860, "fiffv_mne_coord": 860, "fiff_point": 860, "num_point": 860, "char": [860, 875], "fv": 860, "struct": 860, "fiff_eeg_ch": 860, "coil_tran": 860, "eeg_loc": 860, "six": 860, "10unit_mul": 860, "fiffv_proj_item": 860, "fiffv_mne_proj_item": 860, "decalibr": 860, "row_cal": 860, "col_cal": 860, "tri_area": 860, "tri_cent": 860, "centroid": 860, "tri_nn": 860, "mne_add_patch_info": 860, "sol_grad": 860, "sing": 860, "eigen_lead": 860, "eigen_field": 860, "source_cov": 860, "cond1": 861, "cond2": 861, "addpath": 861, "pop_fileio": 861, "pop_eegfiltnew": 861, "pop_averef": 861, "pop_select": 861, "pop_runica": 861, "pop_binica": 861, "pop_compprop": 861, "comp_num": 861, "winhandl": 861, "comphead": 861, "pop_selectcomp": 861, "list_of_components_to_exclud": 861, "pop_epoch": 861, "eeg_epoch": 861, "pop_timtopo": 861, "pop_compareerp": 861, "eeg_epochs1": 861, "eeg_epochs2": 861, "pop_saveset": 861, "lfreq": 861, "hfreq": 861, "filtered_raw": 861, "bdfl": 862, "nutmegtrip": 863, "youtub": [863, 875], "cluster_based_statist": 863, "patsi": 863, "dmatric": 863, "4859": 863, "2852": 863, "3585": 863, "openneuro": 863, "6687": 863, "adult": 863, "dcm": 863, "kymata": 863, "watch": 863, "bnci": 863, "horizon": 863, "pde": 863, "swig": 863, "ambit": 863, "useless": 863, "recruit": 863, "8221": 863, "rudimentari": 863, "crossspectrum": 863, "multitaperspectrum": 863, "6290": 863, "7671": 863, "8026": 863, "8724": 863, "9045": 863, "pr": 863, "6609": 863, "6629": 863, "6672": 863, "6673": 863, "8397": 863, "8892": 863, "mnefun": 863, "ptfce": 863, "mayavi": [863, 875], "7162": 863, "cloud": 863, "dask": 863, "czi": 863, "7751": 863, "docker": 863, "underscore_cas": 865, "themat": 865, "read_raw_curri": [865, 875], "read_raw_nedf": [865, 875], "read_mrk": 865, "get_meg_helmet_surf": 865, "get_volume_labels_from_src": [865, 875], "parse_config": 865, "read_evoked_besa": [865, 875], "read_evokeds_mff": [865, 875], "read_morph_map": [865, 875], "read_reject_paramet": 865, "write_label": 865, "export_epoch": [865, 875], "export_evok": [865, 875], "add_background_imag": 865, "compare_fiff": 865, "mne_analyze_colormap": 865, "plot_csd": 865, "plot_epochs_psd_topomap": [865, 875], "plot_evok": [865, 875], "plot_evoked_topomap": [865, 875], "plot_evoked_joint": [865, 875], "plot_ica_properti": [865, 875], "plot_ica_scor": [865, 875], "plot_ica_overlai": [865, 875], "plot_montag": [865, 875], "plot_raw_psd": [865, 875], "plot_regression_weight": [865, 875], "plot_volume_source_estim": [865, 875], "plot_tfr_topomap": [865, 875], "plot_topo_image_epoch": [865, 875], "get_3d_backend": [865, 875], "use_3d_backend": [865, 875], "close_3d_figur": 865, "close_all_3d_figur": 865, "get_browser_backend": [865, 875], "equalize_channel": [865, 875], "annotate_nan": [865, 875], "compute_fine_calibr": [865, 875], "compute_maxwell_basi": [865, 875], "ica_find_ecg_ev": 865, "ica_find_eog_ev": 865, "equalize_bad": [865, 875], "maxwell_filter_prepare_emptyroom": [865, 875], "read_eog_regress": 865, "realign_raw": [865, 875], "regress_artifact": [865, 875], "read_ica_eeglab": [865, 875], "read_fine_calibr": 865, "write_fine_calibr": 865, "short_channel": [865, 875], "estimate_ringing_sampl": 865, "extract_chpi_locs_kit": [865, 875], "concatenate_ev": 865, "match_event_nam": [865, 875], "shift_time_ev": [865, 875], "pick_channels_cov": 865, "compute_whiten": [865, 875], "write_fiduci": 865, "create_default_subject": [865, 875], "head_to_mni": 865, "head_to_mri": [865, 875], "add_source_space_dist": [865, 875], "decimate_surfac": [865, 875], "complete_surface_info": 865, "distance_to_bem": [865, 875], "compute_rank_invers": 865, "read_beamform": [865, 875], "grade_to_tri": 865, "grade_to_vertic": 865, "grow_label": [865, 875], "random_parcel": 865, "transform_surface_to": [865, 875], "get_decimated_surfac": [865, 875], "pick_channels_csd": 865, "dpss_window": [865, 875], "cwt": 865, "ttest_ind_no_p": [865, 875], "spatial_dist_adjac": [865, 875], "spatial_tris_adjac": [865, 875], "spatial_inter_hemi_adjac": [865, 875], "spatio_temporal_src_adjac": [865, 875], "spatio_temporal_dist_adjac": [865, 875], "select_source_in_label": 865, "psdestim": 865, "timefrequ": [865, 875], "open_doc": [865, 875], "set_log_fil": 865, "get_cuda_memori": 865, "set_cuda_devic": [865, 875], "11366": 875, "11397": 875, "11401": 875, "11407": 875, "11388": 875, "sanit": 875, "11399": 875, "splash": 875, "11398": 875, "11402": 875, "11333": 875, "tooma": 875, "anij\u00e4rv": 875, "11237": 875, "scheltienn": 875, "11236": 875, "11241": 875, "jevri": 875, "repr": 875, "11357": 875, "11359": 875, "11096": 875, "11353": 875, "11283": 875, "11329": 875, "11375": 875, "hennei": 875, "11310": 875, "santeri": 875, "ruuskanen": 875, "11289": 875, "mauricio": 875, "cesped": 875, "tenorio": 875, "11235": 875, "hasegan": 875, "11245": 875, "gerster": 875, "dinara": 875, "issagaliyeva": 875, "jennif": 875, "behnk": 875, "hakimeh": 875, "aslsardroud": 875, "pavel": 875, "navratil": 875, "ear_left": 875, "ear_right": 875, "11255": 875, "11263": 875, "torr": 875, "ortiz": 875, "11351": 875, "enzo": 875, "altamiranda": 875, "reject_": 875, "11244": 875, "11303": 875, "11290": 875, "wrongli": 875, "11248": 875, "11258": 875, "erkka": 875, "heinila": 875, "outli": 875, "11298": 875, "11345": 875, "11311": 875, "11300": 875, "11340": 875, "11318": 875, "11346": 875, "11344": 875, "errantli": 875, "11347": 875, "11293": 875, "11322": 875, "11369": 875, "11361": 875, "nowadai": 875, "interp_from": 875, "interp_kind": 875, "11371": 875, "brayet": 875, "luka": 875, "hecker": 875, "omer": 875, "shubi": 875, "merk": 875, "11073": 875, "10656": 875, "10784": 875, "11011": 875, "11006": 875, "6233": 875, "10986": 875, "11048": 875, "8639": 875, "11083": 875, "11051": 875, "11020": 875, "11075": 875, "valerii": 875, "chirkov": 875, "electroderm": 875, "11090": 875, "11108": 875, "19080": 875, "11099": 875, "11077": 875, "11094": 875, "11095": 875, "11186": 875, "eduard": 875, "ort": 875, "11116": 875, "11147": 875, "11150": 875, "11185": 875, "11154": 875, "11141": 875, "11232": 875, "11159": 875, "11196": 875, "gemein": 875, "unlabel": 875, "11074": 875, "sebastiaan": 875, "mathot": 875, "11072": 875, "chetan": 875, "gohil": 875, "11004": 875, "carlstr\u00f6m": 875, "schad": 875, "11190": 875, "wetzel": 875, "11019": 875, "sena": 875, "11049": 875, "11084": 875, "11145": 875, "11182": 875, "11040": 875, "marian": 875, "dovgialo": 875, "11171": 875, "11181": 875, "11193": 875, "11102": 875, "11081": 875, "11191": 875, "6870": 875, "simeon": 875, "11197": 875, "11212": 875, "11203": 875, "11201": 875, "h\u00fcseyin": 875, "orkun": 875, "elma": 875, "deprecationwarn": 875, "11123": 875, "11050": 875, "show_toolbar": 875, "10184": 875, "skirt": 875, "add_channels_epoch": 875, "11180": 875, "11046": 875, "welzel": 875, "luzpaz": 875, "10974": 875, "ilia": 875, "machaira": 875, "10942": 875, "tziona": 875, "nessaiv": 875, "10922": 875, "mingjian": 875, "he": 875, "10736": 875, "jordan": 875, "drew": 875, "10632": 875, "courtemanch": 875, "10515": 875, "alessandro": 875, "tonin": 875, "10555": 875, "powel": 875, "10627": 875, "evan": 875, "hathawai": 875, "icalabel": 875, "10615": 875, "10501": 875, "10460": 875, "10544": 875, "10720": 875, "10464": 875, "10699": 875, "10534": 875, "10568": 875, "10567": 875, "10533": 875, "10557": 875, "10591": 875, "10571": 875, "10587": 875, "10125": 875, "benerradi": 875, "10606": 875, "10610": 875, "10614": 875, "10611": 875, "10633": 875, "10661": 875, "10668": 875, "10681": 875, "timeformat": 875, "yyyi": 875, "_convert_tim": 875, "10674": 875, "kern": 875, "10694": 875, "10572": 875, "10373": 875, "10734": 875, "michiru": 875, "kaneda": 875, "10284": 875, "10749": 875, "10788": 875, "10892": 875, "10940": 875, "vref": 875, "10823": 875, "huberti": 875, "10979": 875, "_project_onto_surfac": 875, "return_nn": 875, "10930": 875, "10927": 875, "reza": 875, "nasri": 875, "hypnodyn": 875, "zmax": 875, "10754": 875, "frederik": 875, "weber": 875, "10718": 875, "t1t2": 875, "10639": 875, "toivonen": 875, "10217": 875, "wang": 875, "10517": 875, "10470": 875, "dold": 875, "10485": 875, "10487": 875, "10500": 875, "10491": 875, "10662": 875, "10866": 875, "10957": 875, "10513": 875, "10493": 875, "10504": 875, "10705": 875, "10521": 875, "10547": 875, "10543": 875, "10912": 875, "10560": 875, "10619": 875, "10618": 875, "shoorangiz": 875, "10638": 875, "10664": 875, "honor": 875, "10686": 875, "10685": 875, "10688": 875, "8754": 875, "10703": 875, "10730": 875, "10753": 875, "10765": 875, "po6": 875, "blender": 875, "10778": 875, "10802": 875, "10471": 875, "10851": 875, "10898": 875, "10990": 875, "10968": 875, "10936": 875, "10963": 875, "10978": 875, "10531": 875, "bilinear": 875, "set_interpol": 875, "10617": 875, "10715": 875, "10950": 875, "10925": 875, "10945": 875, "adelin": 875, "fecker": 875, "ciok": 875, "archit": 875, "singhal": 875, "ashlei": 875, "beaslei": 875, "dominiqu": 875, "makowski": 875, "hamid": 875, "maymandi": 875, "naveen": 875, "srinivasan": 875, "sondr": 875, "foslien": 875, "10396": 875, "10089": 875, "senwen": 875, "deng": 875, "10076": 875, "zerfowski": 875, "10054": 875, "etienn": 875, "montalivet": 875, "10174": 875, "veillett": 875, "10307": 875, "10281": 875, "9952": 875, "10379": 875, "9922": 875, "9978": 875, "9994": 875, "9929": 875, "concis": 875, "__repr__": 875, "10042": 875, "sosulski": 875, "10056": 875, "10077": 875, "10102": 875, "10058": 875, "10109": 875, "10115": 875, "10119": 875, "10114": 875, "10116": 875, "dpi": 875, "10126": 875, "10129": 875, "10135": 875, "10142": 875, "10166": 875, "10175": 875, "10182": 875, "10186": 875, "10185": 875, "9969": 875, "10019": 875, "10200": 875, "10255": 875, "10202": 875, "9972": 875, "10206": 875, "10220": 875, "10230": 875, "10249": 875, "10243": 875, "10212": 875, "ui": 875, "10222": 875, "10183": 875, "10247": 875, "10297": 875, "10299": 875, "10330": 875, "10384": 875, "10417": 875, "10418": 875, "10408": 875, "subsurfac": 875, "10421": 875, "joshua": 875, "teve": 875, "latin": 875, "10429": 875, "eberlein": 875, "10431": 875, "rawmff": 875, "10304": 875, "10361": 875, "shift_jist": 875, "10356": 875, "10093": 875, "adina": 875, "wagner": 875, "loadtxt": 875, "10189": 875, "federico": 875, "zamberlan": 875, "nikolai": 875, "chapochnikov": 875, "9957": 875, "led": 875, "inconsist": 875, "9966": 875, "9998": 875, "9968": 875, "alphanumer": 875, "10002": 875, "9975": 875, "9980": 875, "9990": 875, "suboptim": 875, "9991": 875, "10004": 875, "9970": 875, "10021": 875, "10040": 875, "10358": 875, "10047": 875, "10399": 875, "10073": 875, "10087": 875, "annotate_": 875, "meas_tim": 875, "10067": 875, "10118": 875, "10074": 875, "10082": 875, "10112": 875, "trip": 875, "10177": 875, "10127": 875, "10132": 875, "10095": 875, "10176": 875, "stout": 875, "10210": 875, "10235": 875, "10267": 875, "german": 875, "de_d": 875, "french": 875, "fr_fr": 875, "italian": 875, "it_it": 875, "10277": 875, "10292": 875, "10309": 875, "10265": 875, "10415": 875, "initial_valu": 875, "10289": 875, "10324": 875, "10342": 875, "10347": 875, "10313": 875, "10400": 875, "10335": 875, "mislead": 875, "10393": 875, "10392": 875, "10401": 875, "9960": 875, "10039": 875, "10348": 875, "annotate_flat": 875, "10143": 875, "max_ori_out": 875, "10366": 875, "10323": 875, "jinja2": 875, "tempita": 875, "10211": 875, "julia": 875, "guiomar": 875, "niso": 875, "gal\u00e1n": 875, "steve": 875, "matindi": 875, "hartmann": 875, "julien": 875, "derollepot": 875, "xiaokai": 875, "xia": 875, "bannier": 875, "darin": 875, "erat": 875, "sleiter": 875, "gate": 875, "evgeni": 875, "goldstein": 875, "riessariu": 875, "stargardski": 875, "9801": 875, "9575": 875, "nirsport2": 875, "9348": 875, "9401": 875, "9376": 875, "9430": 875, "9481": 875, "9637": 875, "9872": 875, "9782": 875, "9858": 875, "9640": 875, "6888": 875, "9892": 875, "9725": 875, "ckdtree": 875, "9568": 875, "9643": 875, "9369": 875, "9427": 875, "9391": 875, "9396": 875, "9424": 875, "9403": 875, "9463": 875, "9431": 875, "9443": 875, "9406": 875, "9438": 875, "datablock": 875, "acquist": 875, "9437": 875, "raimondo": 875, "9445": 875, "9419": 875, "9458": 875, "9444": 875, "9503": 875, "9484": 875, "9697": 875, "9468": 875, "9514": 875, "erica": 875, "9541": 875, "9519": 875, "9525": 875, "9529": 875, "9558": 875, "9555": 875, "9553": 875, "insens": 875, "9544": 875, "9556": 875, "9578": 875, "9570": 875, "9545": 875, "9540": 875, "9601": 875, "9605": 875, "abort": 875, "9614": 875, "9516": 875, "9618": 875, "9658": 875, "9585": 875, "9682": 875, "9684": 875, "9789": 875, "9694": 875, "9586": 875, "9742": 875, "9796": 875, "9763": 875, "9784": 875, "9810": 875, "revamp": 875, "9754": 875, "9847": 875, "9860": 875, "9861": 875, "9862": 875, "9863": 875, "9871": 875, "9881": 875, "9891": 875, "9795": 875, "9800": 875, "9613": 875, "9845": 875, "9851": 875, "9869": 875, "9859": 875, "9687": 875, "9708": 875, "9706": 875, "9378": 875, "9381": 875, "9712": 875, "9719": 875, "chronolog": 875, "9765": 875, "9849": 875, "9897": 875, "9920": 875, "9384": 875, "9404": 875, "9435": 875, "9531": 875, "9447": 875, "assertionerror": 875, "9612": 875, "9831": 875, "protect": 875, "9522": 875, "9485": 875, "9513": 875, "9489": 875, "9524": 875, "9603": 875, "9528": 875, "imposs": 875, "9893": 875, "9535": 875, "9564": 875, "9565": 875, "9629": 875, "9771": 875, "9607": 875, "9663": 875, "9630": 875, "9580": 875, "identitii": 875, "9758": 875, "dollar": 875, "9695": 875, "9746": 875, "9799": 875, "9804": 875, "9777": 875, "9780": 875, "9933": 875, "9864": 875, "9873": 875, "9940": 875, "9867": 875, "9904": 875, "pysurf": 875, "kit2fiff": 875, "mne_kit_gui": 875, "9505": 875, "9596": 875, "prox": 875, "outperform": 875, "9608": 875, "9493": 875, "9685": 875, "has_": 875, "_data": 875, "9781": 875, "add_figs_to_sect": 875, "add_slider_to_sect": 875, "add_images_to_sect": 875, "add_bem_to_sect": 875, "add_htmls_to_sect": 875, "sort_sect": 875, "9815": 875, "center_cmap": 875, "9843": 875, "detect_artifact": 875, "9909": 875, "fede": 875, "gansheng": 875, "tan": 875, "banvil": 875, "josh": 875, "koen": 875, "sumalyo": 875, "datta": 875, "pade": 875, "koehler": 875, "rotem": 875, "falach": 875, "sanderson": 875, "enrico": 875, "varano": 875, "judi": 875, "zhu": 875, "matteo": 875, "anelli": 875, "apoorva": 875, "karek": 875, "silvia": 875, "cotroneo": 875, "maggi": 875, "9192": 875, "9285": 875, "9278": 875, "9124": 875, "9203": 875, "9174": 875, "refactor": 875, "9088": 875, "9156": 875, "9043": 875, "9096": 875, "8867": 875, "8739": 875, "9169": 875, "yokogawa": 875, "8813": 875, "8799": 875, "ipyvtk_simpl": 875, "8503": 875, "8346": 875, "8896": 875, "8723": 875, "8738": 875, "8789": 875, "9268": 875, "8790": 875, "8697": 875, "8801": 875, "8829": 875, "8744": 875, "8762": 875, "9037": 875, "8793": 875, "9262": 875, "keypress": 875, "8806": 875, "starstim": 875, "enobio": 875, "8734": 875, "tristan": 875, "stenner": 875, "8760": 875, "8783": 875, "8822": 875, "8771": 875, "8805": 875, "8794": 875, "auto_clos": 875, "8730": 875, "8841": 875, "yu": 875, "luo": 875, "8858": 875, "checker": 875, "pylanc": 875, "8862": 875, "8874": 875, "interobail": 875, "8868": 875, "qt_mac_wants_lay": 875, "8959": 875, "8879": 875, "8834": 875, "9023": 875, "9015": 875, "9087": 875, "9113": 875, "9118": 875, "9103": 875, "9175": 875, "9149": 875, "9166": 875, "bierer": 875, "9210": 875, "9136": 875, "9241": 875, "9261": 875, "9269": 875, "9270": 875, "9141": 875, "9347": 875, "misbehav": 875, "8013": 875, "9207": 875, "9187": 875, "9151": 875, "9162": 875, "9152": 875, "x_label": 875, "9115": 875, "9062": 875, "8989": 875, "spectral_connect": 875, "8839": 875, "8844": 875, "8311": 875, "macosx": 875, "8688": 875, "8983": 875, "superset": 875, "8675": 875, "8713": 875, "8689": 875, "8954": 875, "8884": 875, "num_sampl": 875, "duration_in_sec": 875, "8712": 875, "8780": 875, "8804": 875, "8842": 875, "8857": 875, "9315": 875, "8956": 875, "9284": 875, "9317": 875, "8845": 875, "8811": 875, "bailei": 875, "8736": 875, "8831": 875, "8728": 875, "8731": 875, "8996": 875, "8752": 875, "8759": 875, "8775": 875, "8800": 875, "8817": 875, "8821": 875, "8856": 875, "8965": 875, "8985": 875, "8891": 875, "8963": 875, "9109": 875, "9178": 875, "9252": 875, "9027": 875, "9236": 875, "9246": 875, "9305": 875, "9277": 875, "9099": 875, "plot_sensors_connect": 875, "cbar_label": 875, "9248": 875, "read_select": 875, "8870": 875, "tf_dic": 875, "9122": 875, "9033": 875, "ana": 875, "radanov": 875, "magalvan": 875, "mista": 875, "christina": 875, "zhao": 875, "giorgio": 875, "marinato": 875, "jori": 875, "den": 875, "bossch": 875, "gensollen": 875, "treguer": 875, "austin": 875, "hurst": 875, "aniket": 875, "pradhan": 875, "hongjiang": 875, "kuziek": 875, "qianliang": 875, "tod": 875, "flak": 875, "8354": 875, "7070": 875, "imgag": 875, "7717": 875, "kyle": 875, "mathewson": 875, "8275": 875, "8445": 875, "keith": 875, "doell": 875, "8553": 875, "8351": 875, "8190": 875, "8539": 875, "8379": 875, "8366": 875, "8642": 875, "8447": 875, "8323": 875, "8449": 875, "8402": 875, "8460": 875, "8532": 875, "8482": 875, "8608": 875, "8502": 875, "tqdm": 875, "8515": 875, "8622": 875, "8381": 875, "8584": 875, "8442": 875, "8534": 875, "8624": 875, "8519": 875, "8452": 875, "8415": 875, "8395": 875, "8658": 875, "cascad": 875, "8633": 875, "8580": 875, "8400": 875, "test_egi": 875, "mandatorili": 875, "8474": 875, "8339": 875, "8558": 875, "s390x": 875, "8618": 875, "8594": 875, "8610": 875, "8377": 875, "8285": 875, "8344": 875, "8318": 875, "8637": 875, "8306": 875, "8448": 875, "8283": 875, "name_split": 875, "01_meg": 875, "name_meg": 875, "8464": 875, "8326": 875, "8343": 875, "8425": 875, "8317": 875, "8663": 875, "8303": 875, "8484": 875, "8349": 875, "max_pca_compon": 875, "max_pca_components_": 875, "8321": 875, "8341": 875, "everyhwer": 875, "8368": 875, "8393": 875, "8416": 875, "8434": 875, "8486": 875, "8491": 875, "8492": 875, "8545": 875, "8590": 875, "tukei": 875, "8542": 875, "8520": 875, "8589": 875, "8564": 875, "8605": 875, "8374": 875, "8357": 875, "8356": 875, "8389": 875, "justu": 875, "schwabed": 875, "mad": 875, "jensen": 875, "mikolaj": 875, "rahul": 875, "nadkarni": 875, "lau": 875, "m\u00f8ller": 875, "andersen": 875, "sedivi": 875, "donckt": 875, "svea": 875, "meyer": 875, "lx37": 875, "rai": 875, "n_iter_sdr": 875, "immut": 875, "fxaa": 875, "_split": 875, "_part": 875, "read_raw_xxx": 875, "simpler": 875, "permit": 875, "outermost": 875, "setup_forward_model": 875, "unicod": 875, "conjug": 875, "throw": 875, "spatio_temporal_src_connect": 875, "find_ch_connect": 875, "read_ch_connect": 875, "spatial_dist_connect": 875, "spatial_inter_hemi_connect": 875, "spatial_src_connect": 875, "spatial_tris_connect": 875, "spatio_temporal_dist_connect": 875, "spatio_temporal_tris_connect": 875, "normalize_fwd": 875, "stc_mix": 875, "read_dig_captrack": 875, "spell": 875, "captrack": 875, "mark_flat": 875, "alejandro": 875, "weinstein": 875, "anton": 875, "nikola": 875, "waniek": 875, "harmelen": 875, "sara": 875, "sommariva": 875, "chapochn": 875, "mshader": 875, "sophi": 875, "herbst": 875, "victor": 875, "ferat": 875, "mohammad": 875, "daneshzand": 875, "reppling": 875, "plv": 875, "dmitrii": 875, "altukhov": 875, "epochs_color": 875, "prepare_bem_model": 875, "unavail": 875, "compromis": 875, "roc_auc_ovo": 875, "roc_auc_ovo_weight": 875, "sebastian": 875, "old_tim": 875, "subprocess": 875, "htp": 875, "insuffici": 875, "demetr": 875, "kosta": 875, "gridsearchcv": 875, "chun": 875, "hui": 875, "henrich": 875, "kolkhorst": 875, "fu": 875, "geoff": 875, "brookshir": 875, "eegmi_url": 875, "ramiro": 875, "gatti": 875, "get_channel_type_const": 875, "bump": 875, "tandem": 875, "point_spread_funct": 875, "cross_talk_funct": 875, "ariel": 875, "rokem": 875, "jos\u00e9": 875, "garc\u00eda": 875, "moham": 875, "sherif": 875, "nataliia": 875, "kozhemiako": 875, "legrand": 875, "f\u00e9rat": 875, "theodor": 875, "papadopoulo": 875, "markerfil": 875, "dirk": 875, "g\u00fctlin": 875, "10x": 875, "jit": 875, "ryb\u00e1\u0159": 875, "abram": 875, "hindl": 875, "eberhard": 875, "eich": 875, "radman": 875, "hidpi": 875, "pycord": 875, "read_montag": 875, "read_dig_montag": 875, "set_dig": 875, "update_ch_nam": 875, "raise_if_subset": 875, "_smsh_": 875, "_smartshield": 875, "max_tick": 875, "show_legend": 875, "biosig": 875, "nathali": 875, "gayraud": 875, "crist\u00f3bal": 875, "mo\u00ebnn": 875, "loccoz": 875, "mixin": 875, "lslclient": 875, "lsl": 875, "chala": 875, "mocklslstream": 875, "roujanski": 875, "fault": 875, "kovrig": 875, "n_pad": 875, "bruno": 875, "nicenboim": 875, "32bit": 875, "edge_": 875, "v0": 875, "retina": 875, "larri": 875, "eisenman": 875, "mishandl": 875, "haslach": 875, "clean_eog_ecg": 875, "jeythekei": 875, "_criterion": 875, "katarina": 875, "slama": 875, "synthesi": 875, "find_edf_ev": 875, "patch_info": 875, "castano": 875, "finder": 875, "rasmu": 875, "zetter": 875, "orgin": 875, "gsoc": 875, "molfes": 875, "sphx_glr_auto_examples_datasets_plot_opm_rest_data": 875, "gutstein": 875, "trig_shift_by_typ": 875, "read_annotations_brainvis": 875, "get_blas_func": 875, "_compute_covariance_auto": 875, "onewai": 875, "marcin": 875, "koculak": 875, "buildup": 875, "incom": 875, "bethard": 875, "dateutil": 875, "jasper": 875, "bosch": 875, "_current": 875, "unit_noise_gain": 875, "buildqa": 875, "read_annotations_eeglab": 875, "annotmap": 875, "runtimeexcept": 875, "morph_precomput": 875, "compute_morph_matrix": 875, "morph_data_precomput": 875, "pycuda": 875, "warn_explicit": 875, "save_stc_as_volum": 875, "stop_receive_thread": 875, "johan": 875, "meer": 875, "kambiz": 875, "tavabi": 875, "lorenz": 875, "esch": 875, "manu": 875, "sutela": 875, "perri": 875, "sergei": 875, "antopolskii": 875, "teekuninga": 875, "jochmann": 875, "dupr\u00e9": 875, "workaround": 875, "trainsform": 875, "dubarri": 875, "tf_mxne_optim": 875, "mxne_optim": 875, "multidictionari": 875, "image_mask": 875, "csd_epoch": 875, "csd_arrai": 875, "oleh": 875, "kozynet": 875, "lcmv_epoch": 875, "lcmv_raw": 875, "braboszcz": 875, "desislava": 875, "petkova": 875, "krzemi\u0144ski": 875, "hornberg": 875, "juergen": 875, "katrin": 875, "leinweb": 875, "yaroslav": 875, "halchenko": 875, "baptist": 875, "schiratti": 875, "utilis": 875, "dgap_l21l1": 875, "ramonapariciog": 875, "get_pos2d": 875, "\u03c7\u00b2": 875, "writabl": 875, "plot_roi_erpimage_by_rt": 875, "ansi": 875, "codepag": 875, "okba": 875, "bekhelifi": 875, "boggess": 875, "duemos": 875, "nielsen": 875, "luk\u00e1\u0161": 875, "hejtm\u00e1nek": 875, "_virtual": 875, "treatment": 875, "megsim": 875, "mrn": 875, "reformat": 875, "timedecod": 875, "generalizationacrosstim": 875, "plot_gat_tim": 875, "plot_gat_matrix": 875, "read_events_eeglab": 875, "plot_tran": 875, "tf_lcmv": 875, "scale_tim": 875, "scalings_tim": 875, "akshay0724": 875, "rudiuk": 875, "dykstra": 875, "laetitia": 875, "grabot": 875, "proulx": 875, "apariciogarcia": 875, "robin": 875, "tibor": 875, "schirrmeist": 875, "rodrigo": 875, "h\u00fcbner": 875, "toddler": 875, "fasttrack": 875, "brovelli": 875, "_plot_topo_onpick": 875, "nikla": 875, "wilm": 875, "rantala": 875, "_bad_drop": 875, "_filenam": 875, "pasler": 875, "predict_mod": 875, "chanloc": 875, "dgap_l21": 875, "band_pass_filt": 875, "band_stop_filt": 875, "low_pass_filt": 875, "high_pass_filt": 875, "eeg_sensor": 875, "typecheck": 875, "leonardo": 875, "barbosa": 875, "superflu": 875, "hermann": 875, "sonntag": 875, "jakub": 875, "kaczmarzyk": 875, "lorenzo": 875, "alfin": 875, "visconti": 875, "nick": 875, "foti": 875, "pop_prop": 875, "maryland": 875, "preview": 875, "raimundo": 875, "hid": 875, "martinez": 875, "pablo": 875, "aria": 875, "duma": 875, "fieldtripcli": 875, "get_data_as_epoch": 875, "unitsposit": 875, "mullin": 875, "bva": 875, "strictest": 875, "hojlund": 875, "niediek": 875, "add_eeg_ref": 875, "csd_compute_epoch": 875, "ev2": 875, "\u00b5": 875, "aru": 875, "unsupport": 875, "config_opt": 875, "epochsvector": 875, "favour": 875, "cwt_morlet": 875, "single_trial_pow": 875, "committ": 875, "camilo": 875, "lamu": 875, "f\u00e9lix": 875, "kraus": 875, "shlomo": 875, "poil": 875, "show_info": 875, "compute_raw_psd": 875, "compute_epochs_psd": 875, "614990234": 875, "00064103": 875, "99897607": 875, "train_tim": 875, "ecg_criterion": 875, "eog_criterion": 875, "natali": 875, "klein": 875, "coordinan": 875, "ware": 875, "score_mod": 875, "stimserv": 875, "ip": 875, "mesh_color": 875, "multitaper_psd": 875, "vertor": 875, "renorm": 875, "drop_bad_epoch": 875, "drop_epoch": 875, "do_forward_solut": 875, "kaichogami": 875, "cl\u00e9ment": 875, "moutard": 875, "martinbab": 875, "sagun": 875, "pai": 875, "sourav": 875, "kambyses": 875, "pbnsilva": 875, "sviter": 875, "zuxfoucault": 875, "nenonen": 875, "add_eeg_average_proj": 875, "n_samp_tot": 875, "emilyps14": 875, "lennyvarghes": 875, "freeview_bem_surfac": 875, "desanti": 875, "_setup_vmin_vmax": 875, "concatenatechannel": 875, "redesign": 875, "rewrot": 875, "plot_image_epoch": 875, "preload_data": 875, "santi": 875, "roan": 875, "laplant": 875, "wakeman": 875, "add_sect": 875, "marmaduk": 875, "woodman": 875, "whiten_evok": 875, "oddbal": 875, "label_1": 875, "label_2": 875, "savitski": 875, "_baseraw": 875, "prof": 875, "decoupl": 875, "read_hsp": 875, "read_elp": 875, "write_hsp": 875, "write_mrk": 875, "label_time_cours": 875, "as_data_fram": 875, "pick_types_evok": 875, "textbox": 875, "iir_filter_raw": 875, "ingoo": 875, "kj": 875, "basil": 875, "pinsard": 875, "hafeza": 875, "anevar": 875, "manoj": 875, "kumar": 875, "tucker": 875, "ward": 875, "radic": 875, "tack": 875, "equalize_channnel": 875, "s\u00e9bastien": 875, "connector": 875, "cathi": 875, "nangini": 875, "succintli": 875, "breuer": 875, "aesthet": 875, "qunxi": 875, "drop_pick": 875, "labels_from_parc": 875, "parc_from_label": 875, "setno": 875, "plot_": 875, "praveen": 875, "sripad": 875, "tanai": 875, "saket": 875, "choudhari": 875, "brad": 875, "buran": 875, "stimclient": 875, "rtclient": 875, "mockrtclient": 875, "trelli": 875, "ki2fiff": 875, "pick_norm": 875, "write_stc": 875, "olivetti": 875, "kornblith": 875, "smarter": 875, "sources_as_epoch": 875, "psi": 875, "mne_compute_proj_eog": 875, "applicationon": 875, "proj_act": 875, "keep_comp": 875, "dest_comp": 875, "speedup": 875, "clike": 875, "l21": 875, "bessel": 875, "time_to_index": 875, "mne_compute_proj_ecg": 875, "mne_maxfilt": 875, "loui": 875, "thibault": 875, "ellen": 875, "ruzich": 875}, "objects": {"": [[865, 0, 0, "-", "mne"]], "mne": [[255, 1, 1, "", "AcqParserFIF"], [256, 1, 1, "", "Annotations"], [257, 1, 1, "", "BaseEpochs"], [258, 1, 1, "", "BiHemiLabel"], [259, 1, 1, "", "Covariance"], [260, 1, 1, "", "Dipole"], [261, 1, 1, "", "DipoleFixed"], [262, 1, 1, "", "Epochs"], [263, 1, 1, "", "EpochsArray"], [264, 1, 1, "", "Evoked"], [265, 1, 1, "", "EvokedArray"], [266, 1, 1, "", "Forward"], [267, 1, 1, "", "Info"], [268, 1, 1, "", "Label"], [269, 1, 1, "", "MixedSourceEstimate"], [270, 1, 1, "", "MixedVectorSourceEstimate"], [271, 1, 1, "", "Projection"], [272, 1, 1, "", "Report"], [273, 1, 1, "", "SourceEstimate"], [274, 1, 1, "", "SourceMorph"], [275, 1, 1, "", "SourceSpaces"], [276, 1, 1, "", "VectorSourceEstimate"], [277, 1, 1, "", "VolSourceEstimate"], [278, 1, 1, "", "VolVectorSourceEstimate"], [279, 4, 1, "", "add_reference_channels"], [280, 4, 1, "", "add_source_space_distances"], [281, 4, 1, "", "annotations_from_events"], [282, 4, 1, "", "apply_forward"], [283, 4, 1, "", "apply_forward_raw"], [284, 4, 1, "", "average_forward_solutions"], [869, 0, 0, "-", "baseline"], [843, 0, 0, "-", "beamformer"], [252, 0, 0, "-", "bem"], [308, 4, 1, "", "channel_indices_by_type"], [309, 4, 1, "", "channel_type"], [864, 0, 0, "-", "channels"], [864, 0, 0, "-", "chpi"], [351, 4, 1, "", "combine_evoked"], [352, 4, 1, "", "compute_covariance"], [353, 4, 1, "", "compute_proj_epochs"], [354, 4, 1, "", "compute_proj_evoked"], [355, 4, 1, "", "compute_proj_raw"], [356, 4, 1, "", "compute_rank"], [357, 4, 1, "", "compute_raw_covariance"], [358, 4, 1, "", "compute_source_morph"], [359, 4, 1, "", "concatenate_epochs"], [360, 4, 1, "", "concatenate_events"], [361, 4, 1, "", "concatenate_raws"], [362, 4, 1, "", "convert_forward_solution"], [369, 4, 1, "", "create_default_subject"], [370, 4, 1, "", "create_info"], [844, 0, 0, "-", "cuda"], [247, 0, 0, "-", "datasets"], [406, 4, 1, "", "decimate_surface"], [248, 0, 0, "-", "decoding"], [426, 4, 1, "", "dig_mri_distances"], [843, 0, 0, "-", "dipole"], [249, 0, 0, "-", "epochs"], [432, 4, 1, "", "equalize_channels"], [249, 0, 0, "-", "event"], [436, 4, 1, "", "events_from_annotations"], [250, 0, 0, "-", "export"], [441, 4, 1, "", "extract_label_time_course"], [864, 0, 0, "-", "filter"], [448, 4, 1, "", "find_events"], [449, 4, 1, "", "find_stim_steps"], [450, 4, 1, "", "fit_dipole"], [455, 4, 1, "", "get_config"], [456, 4, 1, "", "get_config_path"], [457, 4, 1, "", "get_head_surf"], [458, 4, 1, "", "get_meg_helmet_surf"], [459, 4, 1, "", "get_montage_volume_labels"], [460, 4, 1, "", "get_volume_labels_from_aseg"], [461, 4, 1, "", "get_volume_labels_from_src"], [462, 4, 1, "", "grade_to_tris"], [463, 4, 1, "", "grade_to_vertices"], [464, 4, 1, "", "grand_average"], [465, 4, 1, "", "grow_labels"], [468, 4, 1, "", "head_to_mni"], [469, 4, 1, "", "head_to_mri"], [843, 0, 0, "-", "inverse_sparse"], [866, 0, 0, "-", "io"], [509, 4, 1, "", "label_sign_flip"], [510, 4, 1, "", "labels_to_stc"], [511, 4, 1, "", "make_ad_hoc_cov"], [512, 4, 1, "", "make_bem_model"], [513, 4, 1, "", "make_bem_solution"], [514, 4, 1, "", "make_field_map"], [515, 4, 1, "", "make_fixed_length_epochs"], [516, 4, 1, "", "make_fixed_length_events"], [517, 4, 1, "", "make_forward_dipole"], [518, 4, 1, "", "make_forward_solution"], [519, 4, 1, "", "make_sphere_model"], [520, 4, 1, "", "merge_events"], [843, 0, 0, "-", "minimum_norm"], [541, 4, 1, "", "morph_labels"], [542, 4, 1, "", "morph_source_spaces"], [543, 4, 1, "", "open_docs"], [544, 4, 1, "", "open_report"], [545, 4, 1, "", "parse_config"], [546, 4, 1, "", "pick_channels"], [547, 4, 1, "", "pick_channels_cov"], [548, 4, 1, "", "pick_channels_forward"], [549, 4, 1, "", "pick_channels_regexp"], [550, 4, 1, "", "pick_events"], [551, 4, 1, "", "pick_info"], [552, 4, 1, "", "pick_types"], [553, 4, 1, "", "pick_types_forward"], [864, 0, 0, "-", "preprocessing"], [600, 4, 1, "", "random_parcellation"], [601, 4, 1, "", "read_annotations"], [602, 4, 1, "", "read_bem_solution"], [603, 4, 1, "", "read_bem_surfaces"], [604, 4, 1, "", "read_cov"], [605, 4, 1, "", "read_dipole"], [606, 4, 1, "", "read_epochs"], [607, 4, 1, "", "read_epochs_eeglab"], [608, 4, 1, "", "read_epochs_fieldtrip"], [609, 4, 1, "", "read_epochs_kit"], [610, 4, 1, "", "read_events"], [611, 4, 1, "", "read_evoked_besa"], [612, 4, 1, "", "read_evoked_fieldtrip"], [613, 4, 1, "", "read_evokeds"], [614, 4, 1, "", "read_evokeds_mff"], [615, 4, 1, "", "read_forward_solution"], [616, 4, 1, "", "read_freesurfer_lut"], [617, 4, 1, "", "read_label"], [618, 4, 1, "", "read_labels_from_annot"], [619, 4, 1, "", "read_lta"], [620, 4, 1, "", "read_morph_map"], [621, 4, 1, "", "read_proj"], [622, 4, 1, "", "read_reject_parameters"], [623, 4, 1, "", "read_source_estimate"], [624, 4, 1, "", "read_source_morph"], [625, 4, 1, "", "read_source_spaces"], [626, 4, 1, "", "read_surface"], [627, 4, 1, "", "read_talxfm"], [628, 4, 1, "", "read_trans"], [629, 4, 1, "", "read_tri"], [630, 4, 1, "", "read_vectorview_selection"], [631, 4, 1, "", "rename_channels"], [632, 4, 1, "", "scale_bem"], [633, 4, 1, "", "scale_labels"], [634, 4, 1, "", "scale_mri"], [635, 4, 1, "", "scale_source_space"], [636, 4, 1, "", "sensitivity_map"], [637, 4, 1, "", "set_bipolar_reference"], [638, 4, 1, "", "set_cache_dir"], [639, 4, 1, "", "set_config"], [640, 4, 1, "", "set_eeg_reference"], [641, 4, 1, "", "set_log_file"], [642, 4, 1, "", "set_log_level"], [643, 4, 1, "", "setup_source_space"], [644, 4, 1, "", "setup_volume_source_space"], [870, 0, 0, "-", "simulation"], [665, 4, 1, "", "spatial_dist_adjacency"], [666, 4, 1, "", "spatial_inter_hemi_adjacency"], [667, 4, 1, "", "spatial_src_adjacency"], [668, 4, 1, "", "spatial_tris_adjacency"], [669, 4, 1, "", "spatio_temporal_dist_adjacency"], [670, 4, 1, "", "spatio_temporal_src_adjacency"], [671, 4, 1, "", "spatio_temporal_tris_adjacency"], [672, 4, 1, "", "split_label"], [872, 0, 0, "-", "stats"], [690, 4, 1, "", "stc_near_sensors"], [691, 4, 1, "", "stc_to_label"], [694, 4, 1, "", "sys_info"], [873, 0, 0, "-", "time_frequency"], [729, 4, 1, "", "transform_surface_to"], [864, 0, 0, "-", "transforms"], [736, 4, 1, "", "use_coil_def"], [737, 1, 1, "", "use_log_level"], [844, 0, 0, "-", "utils"], [740, 4, 1, "", "verbose"], [741, 4, 1, "", "vertex_to_mni"], [874, 0, 0, "-", "viz"], [815, 4, 1, "", "warp_montage_volume"], [816, 4, 1, "", "what"], [817, 4, 1, "", "write_bem_solution"], [818, 4, 1, "", "write_bem_surfaces"], [819, 4, 1, "", "write_cov"], [820, 4, 1, "", "write_events"], [821, 4, 1, "", "write_evokeds"], [822, 4, 1, "", "write_forward_solution"], [823, 4, 1, "", "write_head_bem"], [824, 4, 1, "", "write_label"], [825, 4, 1, "", "write_labels_to_annot"], [826, 4, 1, "", "write_proj"], [827, 4, 1, "", "write_source_spaces"], [828, 4, 1, "", "write_surface"], [829, 4, 1, "", "write_trans"]], "mne.AcqParserFIF": [[255, 2, 1, "", "__getitem__"], [255, 2, 1, "", "__len__"], [255, 3, 1, "", "categories"], [255, 3, 1, "", "events"], [255, 2, 1, "", "get_condition"]], "mne.Annotations": [[256, 2, 1, "", "__add__"], [256, 2, 1, "", "__getitem__"], [256, 2, 1, "", "__iter__"], [256, 2, 1, "", "__len__"], [256, 2, 1, "", "append"], [256, 2, 1, "", "copy"], [256, 2, 1, "", "crop"], [256, 2, 1, "", "delete"], [256, 3, 1, "", "orig_time"], [256, 2, 1, "", "rename"], [256, 2, 1, "", "save"], [256, 2, 1, "", "set_durations"], [256, 2, 1, "", "to_data_frame"]], "mne.BiHemiLabel": [[258, 2, 1, "", "__add__"], [258, 2, 1, "", "__len__"], [258, 2, 1, "", "__sub__"]], "mne.Covariance": [[259, 2, 1, "", "__add__"], [259, 2, 1, "", "__contains__"], [259, 2, 1, "", "__getitem__"], [259, 2, 1, "", "__iter__"], [259, 2, 1, "", "__len__"], [259, 2, 1, "", "as_diag"], [259, 3, 1, "", "ch_names"], [259, 2, 1, "", "clear"], [259, 2, 1, "", "copy"], [259, 3, 1, "", "data"], [259, 2, 1, "", "fromkeys"], [259, 2, 1, "", "get"], [259, 2, 1, "", "items"], [259, 2, 1, "", "keys"], [259, 3, 1, "", "nfree"], [259, 2, 1, "", "pick_channels"], [259, 2, 1, "", "plot"], [259, 2, 1, "", "plot_topomap"], [259, 2, 1, "", "pop"], [259, 2, 1, "", "popitem"], [259, 2, 1, "", "save"], [259, 2, 1, "", "setdefault"], [259, 2, 1, "", "update"], [259, 2, 1, "", "values"]], "mne.Dipole": [[260, 2, 1, "", "__getitem__"], [260, 2, 1, "", "__len__"], [260, 2, 1, "", "copy"], [260, 2, 1, "", "crop"], [260, 2, 1, "", "decimate"], [260, 2, 1, "", "plot_amplitudes"], [260, 2, 1, "", "plot_locations"], [260, 2, 1, "", "save"], [260, 2, 1, "", "shift_time"], [260, 2, 1, "", "time_as_index"], [260, 3, 1, "", "times"], [260, 3, 1, "", "tmax"], [260, 3, 1, "", "tmin"], [260, 2, 1, "", "to_mni"], [260, 2, 1, "", "to_mri"], [260, 2, 1, "", "to_volume_labels"]], "mne.DipoleFixed": [[261, 3, 1, "", "ch_names"], [261, 2, 1, "", "copy"], [261, 2, 1, "", "crop"], [261, 2, 1, "", "decimate"], [261, 2, 1, "", "plot"], [261, 2, 1, "", "save"], [261, 2, 1, "", "shift_time"], [261, 2, 1, "", "time_as_index"], [261, 3, 1, "", "times"], [261, 3, 1, "", "tmax"], [261, 3, 1, "", "tmin"]], "mne.Epochs": [[262, 2, 1, "", "__contains__"], [262, 2, 1, "", "__getitem__"], [262, 2, 1, "", "__iter__"], [262, 2, 1, "", "__len__"], [262, 2, 1, "", "add_annotations_to_metadata"], [262, 2, 1, "", "add_channels"], [262, 2, 1, "", "add_proj"], [262, 2, 1, "", "add_reference_channels"], [262, 2, 1, "", "anonymize"], [262, 2, 1, "", "apply_baseline"], [262, 2, 1, "", "apply_function"], [262, 2, 1, "", "apply_hilbert"], [262, 2, 1, "", "apply_proj"], [262, 2, 1, "", "as_type"], [262, 2, 1, "", "average"], [262, 3, 1, "", "ch_names"], [262, 3, 1, "", "compensation_grade"], [262, 2, 1, "", "compute_psd"], [262, 2, 1, "", "copy"], [262, 2, 1, "", "crop"], [262, 2, 1, "", "decimate"], [262, 2, 1, "", "del_proj"], [262, 2, 1, "", "drop"], [262, 2, 1, "", "drop_bad"], [262, 2, 1, "", "drop_channels"], [262, 2, 1, "", "drop_log_stats"], [262, 2, 1, "", "equalize_event_counts"], [262, 2, 1, "", "export"], [262, 3, 1, "", "filename"], [262, 2, 1, "", "filter"], [262, 2, 1, "", "get_annotations_per_epoch"], [262, 2, 1, "", "get_channel_types"], [262, 2, 1, "", "get_data"], [262, 2, 1, "", "get_montage"], [262, 2, 1, "", "interpolate_bads"], [262, 2, 1, "", "iter_evoked"], [262, 2, 1, "", "load_data"], [262, 3, 1, "", "metadata"], [262, 2, 1, "", "next"], [262, 2, 1, "", "pick"], [262, 2, 1, "", "pick_channels"], [262, 2, 1, "", "pick_types"], [262, 2, 1, "", "plot"], [262, 2, 1, "", "plot_drop_log"], [262, 2, 1, "", "plot_image"], [262, 2, 1, "", "plot_projs_topomap"], [262, 2, 1, "", "plot_psd"], [262, 2, 1, "", "plot_psd_topo"], [262, 2, 1, "", "plot_psd_topomap"], [262, 2, 1, "", "plot_sensors"], [262, 2, 1, "", "plot_topo_image"], [262, 3, 1, "", "proj"], [262, 2, 1, "", "rename_channels"], [262, 2, 1, "", "reorder_channels"], [262, 2, 1, "", "resample"], [262, 2, 1, "", "reset_drop_log_selection"], [262, 2, 1, "", "save"], [262, 2, 1, "", "savgol_filter"], [262, 2, 1, "", "set_annotations"], [262, 2, 1, "", "set_channel_types"], [262, 2, 1, "", "set_eeg_reference"], [262, 2, 1, "", "set_meas_date"], [262, 2, 1, "", "set_montage"], [262, 2, 1, "", "shift_time"], [262, 2, 1, "", "standard_error"], [262, 2, 1, "", "subtract_evoked"], [262, 2, 1, "", "time_as_index"], [262, 3, 1, "", "times"], [262, 3, 1, "", "tmax"], [262, 3, 1, "", "tmin"], [262, 2, 1, "", "to_data_frame"]], "mne.EpochsArray": [[263, 2, 1, "", "__contains__"], [263, 2, 1, "", "__getitem__"], [263, 2, 1, "", "__iter__"], [263, 2, 1, "", "__len__"], [263, 2, 1, "", "add_annotations_to_metadata"], [263, 2, 1, "", "add_channels"], [263, 2, 1, "", "add_proj"], [263, 2, 1, "", "add_reference_channels"], [263, 2, 1, "", "anonymize"], [263, 2, 1, "", "apply_baseline"], [263, 2, 1, "", "apply_function"], [263, 2, 1, "", "apply_hilbert"], [263, 2, 1, "", "apply_proj"], [263, 2, 1, "", "as_type"], [263, 2, 1, "", "average"], [263, 3, 1, "", "ch_names"], [263, 3, 1, "", "compensation_grade"], [263, 2, 1, "", "compute_psd"], [263, 2, 1, "", "copy"], [263, 2, 1, "", "crop"], [263, 2, 1, "", "decimate"], [263, 2, 1, "", "del_proj"], [263, 2, 1, "", "drop"], [263, 2, 1, "", "drop_bad"], [263, 2, 1, "", "drop_channels"], [263, 2, 1, "", "drop_log_stats"], [263, 2, 1, "", "equalize_event_counts"], [263, 2, 1, "", "export"], [263, 3, 1, "", "filename"], [263, 2, 1, "", "filter"], [263, 2, 1, "", "get_annotations_per_epoch"], [263, 2, 1, "", "get_channel_types"], [263, 2, 1, "", "get_data"], [263, 2, 1, "", "get_montage"], [263, 2, 1, "", "interpolate_bads"], [263, 2, 1, "", "iter_evoked"], [263, 2, 1, "", "load_data"], [263, 3, 1, "", "metadata"], [263, 2, 1, "", "next"], [263, 2, 1, "", "pick"], [263, 2, 1, "", "pick_channels"], [263, 2, 1, "", "pick_types"], [263, 2, 1, "", "plot"], [263, 2, 1, "", "plot_drop_log"], [263, 2, 1, "", "plot_image"], [263, 2, 1, "", "plot_projs_topomap"], [263, 2, 1, "", "plot_psd"], [263, 2, 1, "", "plot_psd_topo"], [263, 2, 1, "", "plot_psd_topomap"], [263, 2, 1, "", "plot_sensors"], [263, 2, 1, "", "plot_topo_image"], [263, 3, 1, "", "proj"], [263, 2, 1, "", "rename_channels"], [263, 2, 1, "", "reorder_channels"], [263, 2, 1, "", "resample"], [263, 2, 1, "", "reset_drop_log_selection"], [263, 2, 1, "", "save"], [263, 2, 1, "", "savgol_filter"], [263, 2, 1, "", "set_annotations"], [263, 2, 1, "", "set_channel_types"], [263, 2, 1, "", "set_eeg_reference"], [263, 2, 1, "", "set_meas_date"], [263, 2, 1, "", "set_montage"], [263, 2, 1, "", "shift_time"], [263, 2, 1, "", "standard_error"], [263, 2, 1, "", "subtract_evoked"], [263, 2, 1, "", "time_as_index"], [263, 3, 1, "", "times"], [263, 3, 1, "", "tmax"], [263, 3, 1, "", "tmin"], [263, 2, 1, "", "to_data_frame"]], "mne.Evoked": [[264, 2, 1, "", "__contains__"], [264, 2, 1, "", "__neg__"], [264, 2, 1, "", "add_channels"], [264, 2, 1, "", "add_proj"], [264, 2, 1, "", "add_reference_channels"], [264, 2, 1, "", "animate_topomap"], [264, 2, 1, "", "anonymize"], [264, 2, 1, "", "apply_baseline"], [264, 2, 1, "", "apply_function"], [264, 2, 1, "", "apply_hilbert"], [264, 2, 1, "", "apply_proj"], [264, 2, 1, "", "as_type"], [264, 3, 1, "", "ch_names"], [264, 3, 1, "", "compensation_grade"], [264, 2, 1, "", "compute_psd"], [264, 2, 1, "", "copy"], [264, 2, 1, "", "crop"], [264, 3, 1, "", "data"], [264, 2, 1, "", "decimate"], [264, 2, 1, "", "del_proj"], [264, 2, 1, "", "detrend"], [264, 2, 1, "", "drop_channels"], [264, 2, 1, "", "export"], [264, 2, 1, "", "filter"], [264, 2, 1, "", "get_channel_types"], [264, 2, 1, "", "get_data"], [264, 2, 1, "", "get_montage"], [264, 2, 1, "", "get_peak"], [264, 2, 1, "", "interpolate_bads"], [264, 3, 1, "", "kind"], [264, 2, 1, "", "pick"], [264, 2, 1, "", "pick_channels"], [264, 2, 1, "", "pick_types"], [264, 2, 1, "", "plot"], [264, 2, 1, "", "plot_field"], [264, 2, 1, "", "plot_image"], [264, 2, 1, "", "plot_joint"], [264, 2, 1, "", "plot_projs_topomap"], [264, 2, 1, "", "plot_psd"], [264, 2, 1, "", "plot_psd_topo"], [264, 2, 1, "", "plot_psd_topomap"], [264, 2, 1, "", "plot_sensors"], [264, 2, 1, "", "plot_topo"], [264, 2, 1, "", "plot_topomap"], [264, 2, 1, "", "plot_white"], [264, 3, 1, "", "proj"], [264, 2, 1, "", "rename_channels"], [264, 2, 1, "", "reorder_channels"], [264, 2, 1, "", "resample"], [264, 2, 1, "", "save"], [264, 2, 1, "", "savgol_filter"], [264, 2, 1, "", "set_channel_types"], [264, 2, 1, "", "set_eeg_reference"], [264, 2, 1, "", "set_meas_date"], [264, 2, 1, "", "set_montage"], [264, 2, 1, "", "shift_time"], [264, 2, 1, "", "time_as_index"], [264, 3, 1, "", "times"], [264, 3, 1, "", "tmax"], [264, 3, 1, "", "tmin"], [264, 2, 1, "", "to_data_frame"]], "mne.EvokedArray": [[265, 2, 1, "", "__contains__"], [265, 2, 1, "", "__neg__"], [265, 2, 1, "", "add_channels"], [265, 2, 1, "", "add_proj"], [265, 2, 1, "", "add_reference_channels"], [265, 2, 1, "", "animate_topomap"], [265, 2, 1, "", "anonymize"], [265, 2, 1, "", "apply_baseline"], [265, 2, 1, "", "apply_function"], [265, 2, 1, "", "apply_hilbert"], [265, 2, 1, "", "apply_proj"], [265, 2, 1, "", "as_type"], [265, 3, 1, "", "ch_names"], [265, 3, 1, "", "compensation_grade"], [265, 2, 1, "", "compute_psd"], [265, 2, 1, "", "copy"], [265, 2, 1, "", "crop"], [265, 3, 1, "", "data"], [265, 2, 1, "", "decimate"], [265, 2, 1, "", "del_proj"], [265, 2, 1, "", "detrend"], [265, 2, 1, "", "drop_channels"], [265, 2, 1, "", "export"], [265, 2, 1, "", "filter"], [265, 2, 1, "", "get_channel_types"], [265, 2, 1, "", "get_data"], [265, 2, 1, "", "get_montage"], [265, 2, 1, "", "get_peak"], [265, 2, 1, "", "interpolate_bads"], [265, 3, 1, "", "kind"], [265, 2, 1, "", "pick"], [265, 2, 1, "", "pick_channels"], [265, 2, 1, "", "pick_types"], [265, 2, 1, "", "plot"], [265, 2, 1, "", "plot_field"], [265, 2, 1, "", "plot_image"], [265, 2, 1, "", "plot_joint"], [265, 2, 1, "", "plot_projs_topomap"], [265, 2, 1, "", "plot_psd"], [265, 2, 1, "", "plot_psd_topo"], [265, 2, 1, "", "plot_psd_topomap"], [265, 2, 1, "", "plot_sensors"], [265, 2, 1, "", "plot_topo"], [265, 2, 1, "", "plot_topomap"], [265, 2, 1, "", "plot_white"], [265, 3, 1, "", "proj"], [265, 2, 1, "", "rename_channels"], [265, 2, 1, "", "reorder_channels"], [265, 2, 1, "", "resample"], [265, 2, 1, "", "save"], [265, 2, 1, "", "savgol_filter"], [265, 2, 1, "", "set_channel_types"], [265, 2, 1, "", "set_eeg_reference"], [265, 2, 1, "", "set_meas_date"], [265, 2, 1, "", "set_montage"], [265, 2, 1, "", "shift_time"], [265, 2, 1, "", "time_as_index"], [265, 3, 1, "", "times"], [265, 3, 1, "", "tmax"], [265, 3, 1, "", "tmin"], [265, 2, 1, "", "to_data_frame"]], "mne.Forward": [[266, 2, 1, "", "copy"], [266, 2, 1, "", "pick_channels"]], "mne.Info": [[267, 2, 1, "", "__contains__"], [267, 2, 1, "", "__getitem__"], [267, 2, 1, "", "__iter__"], [267, 2, 1, "", "__len__"], [267, 2, 1, "", "clear"], [267, 3, 1, "", "compensation_grade"], [267, 2, 1, "", "copy"], [267, 2, 1, "", "fromkeys"], [267, 2, 1, "", "get"], [267, 2, 1, "", "get_channel_types"], [267, 2, 1, "", "get_montage"], [267, 2, 1, "", "items"], [267, 2, 1, "", "keys"], [267, 2, 1, "", "normalize_proj"], [267, 2, 1, "", "pop"], [267, 2, 1, "", "popitem"], [267, 2, 1, "", "save"], [267, 2, 1, "", "set_montage"], [267, 2, 1, "", "setdefault"], [267, 2, 1, "", "update"], [267, 2, 1, "", "values"]], "mne.Label": [[268, 2, 1, "", "__add__"], [268, 2, 1, "", "__len__"], [268, 2, 1, "", "__sub__"], [268, 2, 1, "", "center_of_mass"], [268, 2, 1, "", "compute_area"], [268, 2, 1, "", "copy"], [268, 2, 1, "", "distances_to_outside"], [268, 2, 1, "", "fill"], [268, 2, 1, "", "get_tris"], [268, 2, 1, "", "get_vertices_used"], [268, 2, 1, "", "morph"], [268, 2, 1, "", "restrict"], [268, 2, 1, "", "save"], [268, 2, 1, "", "smooth"], [268, 2, 1, "", "split"]], "mne.MixedSourceEstimate": [[269, 2, 1, "", "__add__"], [269, 2, 1, "", "__div__"], [269, 2, 1, "", "__mul__"], [269, 2, 1, "", "__neg__"], [269, 2, 1, "", "__sub__"], [269, 2, 1, "", "apply_baseline"], [269, 2, 1, "", "bin"], [269, 2, 1, "", "copy"], [269, 2, 1, "", "crop"], [269, 3, 1, "", "data"], [269, 2, 1, "", "decimate"], [269, 2, 1, "", "extract_label_time_course"], [269, 2, 1, "", "get_peak"], [269, 2, 1, "", "mean"], [269, 2, 1, "", "plot"], [269, 2, 1, "", "resample"], [269, 2, 1, "", "save"], [269, 3, 1, "", "sfreq"], [269, 3, 1, "", "shape"], [269, 2, 1, "", "shift_time"], [269, 2, 1, "", "sqrt"], [269, 2, 1, "", "sum"], [269, 2, 1, "", "surface"], [269, 2, 1, "", "time_as_index"], [269, 3, 1, "", "times"], [269, 3, 1, "", "tmax"], [269, 3, 1, "", "tmin"], [269, 2, 1, "", "to_data_frame"], [269, 2, 1, "", "transform"], [269, 2, 1, "", "transform_data"], [269, 3, 1, "", "tstep"], [269, 2, 1, "", "volume"]], "mne.MixedVectorSourceEstimate": [[270, 2, 1, "", "__add__"], [270, 2, 1, "", "__div__"], [270, 2, 1, "", "__mul__"], [270, 2, 1, "", "__neg__"], [270, 2, 1, "", "__sub__"], [270, 2, 1, "", "apply_baseline"], [270, 2, 1, "", "bin"], [270, 2, 1, "", "copy"], [270, 2, 1, "", "crop"], [270, 3, 1, "", "data"], [270, 2, 1, "", "decimate"], [270, 2, 1, "", "extract_label_time_course"], [270, 2, 1, "", "get_peak"], [270, 2, 1, "", "magnitude"], [270, 2, 1, "", "mean"], [270, 2, 1, "", "plot"], [270, 2, 1, "", "project"], [270, 2, 1, "", "resample"], [270, 2, 1, "", "save"], [270, 3, 1, "", "sfreq"], [270, 3, 1, "", "shape"], [270, 2, 1, "", "shift_time"], [270, 2, 1, "", "sqrt"], [270, 2, 1, "", "sum"], [270, 2, 1, "", "surface"], [270, 2, 1, "", "time_as_index"], [270, 3, 1, "", "times"], [270, 3, 1, "", "tmax"], [270, 3, 1, "", "tmin"], [270, 2, 1, "", "to_data_frame"], [270, 2, 1, "", "transform"], [270, 2, 1, "", "transform_data"], [270, 3, 1, "", "tstep"], [270, 2, 1, "", "volume"]], "mne.Projection": [[271, 2, 1, "", "__contains__"], [271, 2, 1, "", "__getitem__"], [271, 2, 1, "", "__iter__"], [271, 2, 1, "", "__len__"], [271, 2, 1, "", "clear"], [271, 2, 1, "", "copy"], [271, 2, 1, "", "fromkeys"], [271, 2, 1, "", "get"], [271, 2, 1, "", "items"], [271, 2, 1, "", "keys"], [271, 2, 1, "", "plot_topomap"], [271, 2, 1, "", "pop"], [271, 2, 1, "", "popitem"], [271, 2, 1, "", "setdefault"], [271, 2, 1, "", "update"], [271, 2, 1, "", "values"]], "mne.Report": [[272, 2, 1, "", "__len__"], [272, 2, 1, "", "add_bem"], [272, 2, 1, "", "add_code"], [272, 2, 1, "", "add_covariance"], [272, 2, 1, "", "add_custom_css"], [272, 2, 1, "", "add_custom_js"], [272, 2, 1, "", "add_epochs"], [272, 2, 1, "", "add_events"], [272, 2, 1, "", "add_evokeds"], [272, 2, 1, "", "add_figure"], [272, 2, 1, "", "add_forward"], [272, 2, 1, "", "add_html"], [272, 2, 1, "", "add_ica"], [272, 2, 1, "", "add_image"], [272, 2, 1, "", "add_inverse_operator"], [272, 2, 1, "", "add_projs"], [272, 2, 1, "", "add_raw"], [272, 2, 1, "", "add_stc"], [272, 2, 1, "", "add_sys_info"], [272, 2, 1, "", "add_trans"], [272, 3, 1, "", "html"], [272, 2, 1, "", "parse_folder"], [272, 2, 1, "", "remove"], [272, 2, 1, "", "save"], [272, 3, 1, "", "tags"]], "mne.SourceEstimate": [[273, 2, 1, "", "__add__"], [273, 2, 1, "", "__div__"], [273, 2, 1, "", "__mul__"], [273, 2, 1, "", "__neg__"], [273, 2, 1, "", "__sub__"], [273, 2, 1, "", "apply_baseline"], [273, 2, 1, "", "bin"], [273, 2, 1, "", "center_of_mass"], [273, 2, 1, "", "copy"], [273, 2, 1, "", "crop"], [273, 3, 1, "", "data"], [273, 2, 1, "", "decimate"], [273, 2, 1, "", "estimate_snr"], [273, 2, 1, "", "expand"], [273, 2, 1, "", "extract_label_time_course"], [273, 2, 1, "", "get_peak"], [273, 2, 1, "", "in_label"], [273, 3, 1, "", "lh_data"], [273, 3, 1, "", "lh_vertno"], [273, 2, 1, "", "mean"], [273, 2, 1, "", "plot"], [273, 2, 1, "", "resample"], [273, 3, 1, "", "rh_data"], [273, 3, 1, "", "rh_vertno"], [273, 2, 1, "", "save"], [273, 3, 1, "", "sfreq"], [273, 3, 1, "", "shape"], [273, 2, 1, "", "shift_time"], [273, 2, 1, "", "sqrt"], [273, 2, 1, "", "sum"], [273, 2, 1, "", "time_as_index"], [273, 3, 1, "", "times"], [273, 3, 1, "", "tmax"], [273, 3, 1, "", "tmin"], [273, 2, 1, "", "to_data_frame"], [273, 2, 1, "", "to_original_src"], [273, 2, 1, "", "transform"], [273, 2, 1, "", "transform_data"], [273, 3, 1, "", "tstep"]], "mne.SourceMorph": [[274, 2, 1, "", "apply"], [274, 2, 1, "", "compute_vol_morph_mat"], [274, 2, 1, "", "save"]], "mne.SourceSpaces": [[275, 2, 1, "", "__add__"], [275, 2, 1, "", "__getitem__"], [275, 2, 1, "", "copy"], [275, 2, 1, "", "export_volume"], [275, 2, 1, "", "plot"], [275, 2, 1, "", "save"]], "mne.VectorSourceEstimate": [[276, 2, 1, "", "__add__"], [276, 2, 1, "", "__div__"], [276, 2, 1, "", "__mul__"], [276, 2, 1, "", "__neg__"], [276, 2, 1, "", "__sub__"], [276, 2, 1, "", "apply_baseline"], [276, 2, 1, "", "bin"], [276, 2, 1, "", "copy"], [276, 2, 1, "", "crop"], [276, 3, 1, "", "data"], [276, 2, 1, "", "decimate"], [276, 2, 1, "", "expand"], [276, 2, 1, "", "extract_label_time_course"], [276, 2, 1, "", "get_peak"], [276, 2, 1, "", "in_label"], [276, 3, 1, "", "lh_data"], [276, 3, 1, "", "lh_vertno"], [276, 2, 1, "", "magnitude"], [276, 2, 1, "", "mean"], [276, 2, 1, "", "plot"], [276, 2, 1, "", "project"], [276, 2, 1, "", "resample"], [276, 3, 1, "", "rh_data"], [276, 3, 1, "", "rh_vertno"], [276, 2, 1, "", "save"], [276, 3, 1, "", "sfreq"], [276, 3, 1, "", "shape"], [276, 2, 1, "", "shift_time"], [276, 2, 1, "", "sqrt"], [276, 2, 1, "", "sum"], [276, 2, 1, "", "time_as_index"], [276, 3, 1, "", "times"], [276, 3, 1, "", "tmax"], [276, 3, 1, "", "tmin"], [276, 2, 1, "", "to_data_frame"], [276, 2, 1, "", "to_original_src"], [276, 2, 1, "", "transform"], [276, 2, 1, "", "transform_data"], [276, 3, 1, "", "tstep"]], "mne.VolSourceEstimate": [[277, 2, 1, "", "__add__"], [277, 2, 1, "", "__div__"], [277, 2, 1, "", "__mul__"], [277, 2, 1, "", "__neg__"], [277, 2, 1, "", "__sub__"], [277, 2, 1, "", "apply_baseline"], [277, 2, 1, "", "as_volume"], [277, 2, 1, "", "bin"], [277, 2, 1, "", "copy"], [277, 2, 1, "", "crop"], [277, 3, 1, "", "data"], [277, 2, 1, "", "decimate"], [277, 2, 1, "", "extract_label_time_course"], [277, 2, 1, "", "get_peak"], [277, 2, 1, "", "in_label"], [277, 2, 1, "", "mean"], [277, 2, 1, "", "plot"], [277, 2, 1, "", "plot_3d"], [277, 2, 1, "", "resample"], [277, 2, 1, "", "save"], [277, 2, 1, "", "save_as_volume"], [277, 3, 1, "", "sfreq"], [277, 3, 1, "", "shape"], [277, 2, 1, "", "shift_time"], [277, 2, 1, "", "sqrt"], [277, 2, 1, "", "sum"], [277, 2, 1, "", "time_as_index"], [277, 3, 1, "", "times"], [277, 3, 1, "", "tmax"], [277, 3, 1, "", "tmin"], [277, 2, 1, "", "to_data_frame"], [277, 2, 1, "", "transform"], [277, 2, 1, "", "transform_data"], [277, 3, 1, "", "tstep"]], "mne.VolVectorSourceEstimate": [[278, 2, 1, "", "__add__"], [278, 2, 1, "", "__div__"], [278, 2, 1, "", "__mul__"], [278, 2, 1, "", "__neg__"], [278, 2, 1, "", "__sub__"], [278, 2, 1, "", "apply_baseline"], [278, 2, 1, "", "as_volume"], [278, 2, 1, "", "bin"], [278, 2, 1, "", "copy"], [278, 2, 1, "", "crop"], [278, 3, 1, "", "data"], [278, 2, 1, "", "decimate"], [278, 2, 1, "", "extract_label_time_course"], [278, 2, 1, "", "get_peak"], [278, 2, 1, "", "in_label"], [278, 2, 1, "", "magnitude"], [278, 2, 1, "", "mean"], [278, 2, 1, "", "plot"], [278, 2, 1, "", "plot_3d"], [278, 2, 1, "", "project"], [278, 2, 1, "", "resample"], [278, 2, 1, "", "save"], [278, 2, 1, "", "save_as_volume"], [278, 3, 1, "", "sfreq"], [278, 3, 1, "", "shape"], [278, 2, 1, "", "shift_time"], [278, 2, 1, "", "sqrt"], [278, 2, 1, "", "sum"], [278, 2, 1, "", "time_as_index"], [278, 3, 1, "", "times"], [278, 3, 1, "", "tmax"], [278, 3, 1, "", "tmin"], [278, 2, 1, "", "to_data_frame"], [278, 2, 1, "", "transform"], [278, 2, 1, "", "transform_data"], [278, 3, 1, "", "tstep"]], "mne.baseline": [[285, 4, 1, "", "rescale"]], "mne.beamformer": [[286, 1, 1, "", "Beamformer"], [287, 4, 1, "", "apply_dics"], [288, 4, 1, "", "apply_dics_csd"], [289, 4, 1, "", "apply_dics_epochs"], [290, 4, 1, "", "apply_dics_tfr_epochs"], [291, 4, 1, "", "apply_lcmv"], [292, 4, 1, "", "apply_lcmv_cov"], [293, 4, 1, "", "apply_lcmv_epochs"], [294, 4, 1, "", "apply_lcmv_raw"], [295, 4, 1, "", "make_dics"], [296, 4, 1, "", "make_lcmv"], [297, 4, 1, "", "make_lcmv_resolution_matrix"], [298, 4, 1, "", "rap_music"], [299, 4, 1, "", "read_beamformer"]], "mne.beamformer.Beamformer": [[286, 2, 1, "", "__contains__"], [286, 2, 1, "", "__getitem__"], [286, 2, 1, "", "__iter__"], [286, 2, 1, "", "__len__"], [286, 2, 1, "", "clear"], [286, 2, 1, "", "copy"], [286, 2, 1, "", "fromkeys"], [286, 2, 1, "", "get"], [286, 2, 1, "", "items"], [286, 2, 1, "", "keys"], [286, 2, 1, "", "pop"], [286, 2, 1, "", "popitem"], [286, 2, 1, "", "save"], [286, 2, 1, "", "setdefault"], [286, 2, 1, "", "update"], [286, 2, 1, "", "values"]], "mne.bem": [[300, 1, 1, "", "ConductorModel"], [301, 4, 1, "", "convert_flash_mris"], [302, 4, 1, "", "distance_to_bem"], [303, 4, 1, "", "fit_sphere_to_headshape"], [304, 4, 1, "", "get_fitting_dig"], [305, 4, 1, "", "make_flash_bem"], [306, 4, 1, "", "make_scalp_surfaces"], [307, 4, 1, "", "make_watershed_bem"]], "mne.bem.ConductorModel": [[300, 2, 1, "", "__contains__"], [300, 2, 1, "", "__getitem__"], [300, 2, 1, "", "__iter__"], [300, 2, 1, "", "__len__"], [300, 2, 1, "", "clear"], [300, 2, 1, "", "copy"], [300, 2, 1, "", "fromkeys"], [300, 2, 1, "", "get"], [300, 2, 1, "", "items"], [300, 2, 1, "", "keys"], [300, 2, 1, "", "pop"], [300, 2, 1, "", "popitem"], [300, 3, 1, "", "radius"], [300, 2, 1, "", "setdefault"], [300, 2, 1, "", "update"], [300, 2, 1, "", "values"]], "mne.channels": [[310, 1, 1, "", "DigMontage"], [311, 1, 1, "", "Layout"], [312, 4, 1, "", "combine_channels"], [313, 4, 1, "", "compute_dev_head_t"], [314, 4, 1, "", "compute_native_head_t"], [315, 4, 1, "", "equalize_channels"], [316, 4, 1, "", "find_ch_adjacency"], [317, 4, 1, "", "find_layout"], [318, 4, 1, "", "fix_mag_coil_types"], [319, 4, 1, "", "generate_2d_layout"], [320, 4, 1, "", "get_builtin_ch_adjacencies"], [321, 4, 1, "", "get_builtin_montages"], [322, 4, 1, "", "make_1020_channel_selections"], [323, 4, 1, "", "make_dig_montage"], [324, 4, 1, "", "make_eeg_layout"], [325, 4, 1, "", "make_grid_layout"], [326, 4, 1, "", "make_standard_montage"], [327, 4, 1, "", "read_ch_adjacency"], [328, 4, 1, "", "read_custom_montage"], [329, 4, 1, "", "read_dig_captrak"], [330, 4, 1, "", "read_dig_dat"], [331, 4, 1, "", "read_dig_egi"], [332, 4, 1, "", "read_dig_fif"], [333, 4, 1, "", "read_dig_hpts"], [334, 4, 1, "", "read_dig_localite"], [335, 4, 1, "", "read_dig_polhemus_isotrak"], [336, 4, 1, "", "read_layout"], [337, 4, 1, "", "read_polhemus_fastscan"], [338, 4, 1, "", "rename_channels"]], "mne.channels.DigMontage": [[310, 2, 1, "", "__add__"], [310, 2, 1, "", "add_estimated_fiducials"], [310, 2, 1, "", "add_mni_fiducials"], [310, 2, 1, "", "apply_trans"], [310, 2, 1, "", "copy"], [310, 2, 1, "", "get_positions"], [310, 2, 1, "", "plot"], [310, 2, 1, "", "remove_fiducials"], [310, 2, 1, "", "rename_channels"], [310, 2, 1, "", "save"]], "mne.channels.Layout": [[311, 2, 1, "", "plot"], [311, 2, 1, "", "save"]], "mne.chpi": [[339, 4, 1, "", "compute_chpi_amplitudes"], [340, 4, 1, "", "compute_chpi_locs"], [341, 4, 1, "", "compute_chpi_snr"], [342, 4, 1, "", "compute_head_pos"], [343, 4, 1, "", "extract_chpi_locs_ctf"], [344, 4, 1, "", "extract_chpi_locs_kit"], [345, 4, 1, "", "filter_chpi"], [346, 4, 1, "", "get_active_chpi"], [347, 4, 1, "", "get_chpi_info"], [348, 4, 1, "", "head_pos_to_trans_rot_t"], [349, 4, 1, "", "read_head_pos"], [350, 4, 1, "", "write_head_pos"]], "mne.coreg": [[363, 1, 1, "", "Coregistration"], [364, 4, 1, "", "estimate_head_mri_t"], [365, 4, 1, "", "get_mni_fiducials"]], "mne.coreg.Coregistration": [[363, 2, 1, "", "compute_dig_mri_distances"], [363, 2, 1, "", "fit_fiducials"], [363, 2, 1, "", "fit_icp"], [363, 2, 1, "", "omit_head_shape_points"], [363, 2, 1, "", "reset"], [363, 3, 1, "", "scale"], [363, 2, 1, "", "set_fid_match"], [363, 2, 1, "", "set_grow_hair"], [363, 2, 1, "", "set_rotation"], [363, 2, 1, "", "set_scale"], [363, 2, 1, "", "set_scale_mode"], [363, 2, 1, "", "set_translation"], [363, 3, 1, "", "trans"]], "mne.cov": [[366, 4, 1, "", "compute_whitener"], [367, 4, 1, "", "prepare_noise_cov"], [368, 4, 1, "", "regularize"]], "mne.cuda": [[371, 4, 1, "", "get_cuda_memory"], [372, 4, 1, "", "init_cuda"], [373, 4, 1, "", "set_cuda_device"]], "mne.datasets.brainstorm.bst_auditory": [[374, 4, 1, "", "data_path"]], "mne.datasets.brainstorm.bst_raw": [[375, 4, 1, "", "data_path"]], "mne.datasets.brainstorm.bst_resting": [[376, 4, 1, "", "data_path"]], "mne.datasets.eegbci": [[377, 4, 1, "", "load_data"], [378, 4, 1, "", "standardize"]], "mne.datasets.epilepsy_ecog": [[379, 4, 1, "", "data_path"]], "mne.datasets.erp_core": [[380, 4, 1, "", "data_path"]], "mne.datasets": [[381, 4, 1, "", "fetch_aparc_sub_parcellation"], [382, 4, 1, "", "fetch_dataset"], [383, 4, 1, "", "fetch_fsaverage"], [384, 4, 1, "", "fetch_hcp_mmp_parcellation"], [385, 4, 1, "", "fetch_infant_template"], [386, 4, 1, "", "fetch_phantom"], [388, 4, 1, "", "has_dataset"]], "mne.datasets.fnirs_motor": [[387, 4, 1, "", "data_path"]], "mne.datasets.hf_sef": [[389, 4, 1, "", "data_path"]], "mne.datasets.kiloword": [[390, 4, 1, "", "data_path"]], "mne.datasets.limo": [[391, 4, 1, "", "load_data"]], "mne.datasets.misc": [[392, 4, 1, "", "data_path"]], "mne.datasets.mtrf": [[393, 4, 1, "", "data_path"]], "mne.datasets.multimodal": [[394, 4, 1, "", "data_path"]], "mne.datasets.opm": [[395, 4, 1, "", "data_path"]], "mne.datasets.phantom_4dbti": [[396, 4, 1, "", "data_path"]], "mne.datasets.refmeg_noise": [[397, 4, 1, "", "data_path"]], "mne.datasets.sample": [[398, 4, 1, "", "data_path"]], "mne.datasets.sleep_physionet.age": [[399, 4, 1, "", "fetch_data"]], "mne.datasets.sleep_physionet.temazepam": [[400, 4, 1, "", "fetch_data"]], "mne.datasets.somato": [[401, 4, 1, "", "data_path"]], "mne.datasets.spm_face": [[402, 4, 1, "", "data_path"]], "mne.datasets.ssvep": [[403, 4, 1, "", "data_path"]], "mne.datasets.ucl_opm_auditory": [[404, 4, 1, "", "data_path"]], "mne.datasets.visual_92_categories": [[405, 4, 1, "", "data_path"]], "mne.decoding": [[407, 1, 1, "", "CSP"], [408, 1, 1, "", "EMS"], [409, 1, 1, "", "FilterEstimator"], [410, 1, 1, "", "GeneralizingEstimator"], [411, 1, 1, "", "LinearModel"], [412, 1, 1, "", "PSDEstimator"], [413, 1, 1, "", "ReceptiveField"], [414, 1, 1, "", "SPoC"], [415, 1, 1, "", "SSD"], [416, 1, 1, "", "Scaler"], [417, 1, 1, "", "SlidingEstimator"], [418, 1, 1, "", "TemporalFilter"], [419, 1, 1, "", "TimeDelayingRidge"], [420, 1, 1, "", "TimeFrequency"], [421, 1, 1, "", "UnsupervisedSpatialFilter"], [422, 1, 1, "", "Vectorizer"], [423, 4, 1, "", "compute_ems"], [424, 4, 1, "", "cross_val_multiscore"], [425, 4, 1, "", "get_coef"]], "mne.decoding.CSP": [[407, 2, 1, "", "fit"], [407, 2, 1, "", "fit_transform"], [407, 2, 1, "", "get_params"], [407, 2, 1, "", "plot_filters"], [407, 2, 1, "", "plot_patterns"], [407, 2, 1, "", "set_params"], [407, 2, 1, "", "transform"]], "mne.decoding.EMS": [[408, 2, 1, "", "fit"], [408, 2, 1, "", "fit_transform"], [408, 2, 1, "", "get_params"], [408, 2, 1, "", "set_params"], [408, 2, 1, "", "transform"]], "mne.decoding.FilterEstimator": [[409, 2, 1, "", "fit"], [409, 2, 1, "", "fit_transform"], [409, 2, 1, "", "transform"]], "mne.decoding.GeneralizingEstimator": [[410, 2, 1, "", "decision_function"], [410, 2, 1, "", "fit"], [410, 2, 1, "", "fit_transform"], [410, 2, 1, "", "get_params"], [410, 2, 1, "", "predict"], [410, 2, 1, "", "predict_proba"], [410, 2, 1, "", "score"], [410, 2, 1, "", "set_params"], [410, 2, 1, "", "transform"]], "mne.decoding.LinearModel": [[411, 2, 1, "", "decision_function"], [411, 2, 1, "", "fit"], [411, 2, 1, "", "fit_transform"], [411, 2, 1, "", "get_params"], [411, 2, 1, "", "predict"], [411, 2, 1, "", "predict_proba"], [411, 2, 1, "", "score"], [411, 2, 1, "", "set_params"], [411, 2, 1, "", "transform"]], "mne.decoding.PSDEstimator": [[412, 2, 1, "", "fit"], [412, 2, 1, "", "fit_transform"], [412, 2, 1, "", "transform"]], "mne.decoding.ReceptiveField": [[413, 2, 1, "", "fit"], [413, 2, 1, "", "get_params"], [413, 2, 1, "", "predict"], [413, 2, 1, "", "score"], [413, 2, 1, "", "set_params"]], "mne.decoding.SPoC": [[414, 2, 1, "", "fit"], [414, 2, 1, "", "fit_transform"], [414, 2, 1, "", "get_params"], [414, 2, 1, "", "plot_filters"], [414, 2, 1, "", "plot_patterns"], [414, 2, 1, "", "set_params"], [414, 2, 1, "", "transform"]], "mne.decoding.SSD": [[415, 2, 1, "", "apply"], [415, 2, 1, "", "fit"], [415, 2, 1, "", "fit_transform"], [415, 2, 1, "", "get_params"], [415, 2, 1, "", "get_spectral_ratio"], [415, 2, 1, "", "inverse_transform"], [415, 2, 1, "", "set_params"], [415, 2, 1, "", "transform"]], "mne.decoding.Scaler": [[416, 2, 1, "", "fit"], [416, 2, 1, "", "fit_transform"], [416, 2, 1, "", "get_params"], [416, 2, 1, "", "inverse_transform"], [416, 2, 1, "", "set_params"], [416, 2, 1, "", "transform"]], "mne.decoding.SlidingEstimator": [[417, 2, 1, "", "decision_function"], [417, 2, 1, "", "fit"], [417, 2, 1, "", "fit_transform"], [417, 2, 1, "", "get_params"], [417, 2, 1, "", "predict"], [417, 2, 1, "", "predict_proba"], [417, 2, 1, "", "score"], [417, 2, 1, "", "set_params"], [417, 2, 1, "", "transform"]], "mne.decoding.TemporalFilter": [[418, 2, 1, "", "fit"], [418, 2, 1, "", "fit_transform"], [418, 2, 1, "", "transform"]], "mne.decoding.TimeDelayingRidge": [[419, 2, 1, "", "fit"], [419, 2, 1, "", "get_params"], [419, 2, 1, "", "predict"], [419, 2, 1, "", "set_params"]], "mne.decoding.TimeFrequency": [[420, 2, 1, "", "fit"], [420, 2, 1, "", "fit_transform"], [420, 2, 1, "", "get_params"], [420, 2, 1, "", "set_params"], [420, 2, 1, "", "transform"]], "mne.decoding.UnsupervisedSpatialFilter": [[421, 2, 1, "", "fit"], [421, 2, 1, "", "fit_transform"], [421, 2, 1, "", "get_params"], [421, 2, 1, "", "inverse_transform"], [421, 2, 1, "", "set_params"], [421, 2, 1, "", "transform"]], "mne.decoding.Vectorizer": [[422, 2, 1, "", "fit"], [422, 2, 1, "", "fit_transform"], [422, 2, 1, "", "inverse_transform"], [422, 2, 1, "", "transform"]], "mne.dipole": [[427, 4, 1, "", "get_phantom_dipoles"]], "mne.epochs": [[428, 4, 1, "", "average_movements"], [429, 4, 1, "", "combine_event_ids"], [430, 4, 1, "", "equalize_epoch_counts"], [431, 4, 1, "", "make_metadata"]], "mne.event": [[433, 4, 1, "", "define_target_events"], [434, 4, 1, "", "match_event_names"], [435, 4, 1, "", "shift_time_events"]], "mne.export": [[437, 4, 1, "", "export_epochs"], [438, 4, 1, "", "export_evokeds"], [439, 4, 1, "", "export_evokeds_mff"], [440, 4, 1, "", "export_raw"]], "mne.filter": [[442, 4, 1, "", "construct_iir_filter"], [443, 4, 1, "", "create_filter"], [444, 4, 1, "", "estimate_ringing_samples"], [445, 4, 1, "", "filter_data"], [446, 4, 1, "", "notch_filter"], [447, 4, 1, "", "resample"]], "mne.forward": [[451, 4, 1, "", "compute_depth_prior"], [452, 4, 1, "", "compute_orient_prior"], [453, 4, 1, "", "restrict_forward_to_label"], [454, 4, 1, "", "restrict_forward_to_stc"]], "mne.gui": [[466, 4, 1, "", "coregistration"], [467, 4, 1, "", "locate_ieeg"]], "mne.inverse_sparse": [[470, 4, 1, "", "gamma_map"], [471, 4, 1, "", "make_stc_from_dipoles"], [472, 4, 1, "", "mixed_norm"], [473, 4, 1, "", "tf_mixed_norm"]], "mne.io": [[474, 1, 1, "", "BaseRaw"], [475, 1, 1, "", "Raw"], [476, 1, 1, "", "RawArray"], [477, 4, 1, "", "anonymize_info"], [866, 0, 0, "-", "kit"], [479, 4, 1, "", "read_fiducials"], [480, 4, 1, "", "read_info"], [481, 4, 1, "", "read_raw"], [482, 4, 1, "", "read_raw_artemis123"], [483, 4, 1, "", "read_raw_bdf"], [484, 4, 1, "", "read_raw_boxy"], [485, 4, 1, "", "read_raw_brainvision"], [486, 4, 1, "", "read_raw_bti"], [487, 4, 1, "", "read_raw_cnt"], [488, 4, 1, "", "read_raw_ctf"], [489, 4, 1, "", "read_raw_curry"], [490, 4, 1, "", "read_raw_edf"], [491, 4, 1, "", "read_raw_eeglab"], [492, 4, 1, "", "read_raw_egi"], [493, 4, 1, "", "read_raw_eximia"], [494, 4, 1, "", "read_raw_fieldtrip"], [495, 4, 1, "", "read_raw_fif"], [496, 4, 1, "", "read_raw_fil"], [497, 4, 1, "", "read_raw_gdf"], [498, 4, 1, "", "read_raw_hitachi"], [499, 4, 1, "", "read_raw_kit"], [500, 4, 1, "", "read_raw_nedf"], [501, 4, 1, "", "read_raw_nicolet"], [502, 4, 1, "", "read_raw_nihon"], [503, 4, 1, "", "read_raw_nirx"], [504, 4, 1, "", "read_raw_persyst"], [505, 4, 1, "", "read_raw_snirf"], [506, 4, 1, "", "show_fiff"], [507, 4, 1, "", "write_fiducials"]], "mne.io.Raw": [[475, 2, 1, "", "__contains__"], [475, 2, 1, "", "__getitem__"], [475, 2, 1, "", "__len__"], [475, 3, 1, "", "acqparser"], [475, 2, 1, "", "add_channels"], [475, 2, 1, "", "add_events"], [475, 2, 1, "", "add_proj"], [475, 2, 1, "", "add_reference_channels"], [475, 3, 1, "", "annotations"], [475, 2, 1, "", "anonymize"], [475, 2, 1, "", "append"], [475, 2, 1, "", "apply_function"], [475, 2, 1, "", "apply_gradient_compensation"], [475, 2, 1, "", "apply_hilbert"], [475, 2, 1, "", "apply_proj"], [475, 3, 1, "", "ch_names"], [475, 2, 1, "", "close"], [475, 3, 1, "", "compensation_grade"], [475, 2, 1, "", "compute_psd"], [475, 2, 1, "", "copy"], [475, 2, 1, "", "crop"], [475, 2, 1, "", "crop_by_annotations"], [475, 2, 1, "", "decimate"], [475, 2, 1, "", "del_proj"], [475, 2, 1, "", "describe"], [475, 2, 1, "", "drop_channels"], [475, 2, 1, "", "export"], [475, 3, 1, "", "filenames"], [475, 2, 1, "", "filter"], [475, 3, 1, "", "first_samp"], [475, 3, 1, "", "first_time"], [475, 2, 1, "", "fix_mag_coil_types"], [475, 2, 1, "", "get_channel_types"], [475, 2, 1, "", "get_data"], [475, 2, 1, "", "get_montage"], [475, 2, 1, "", "interpolate_bads"], [475, 3, 1, "", "last_samp"], [475, 2, 1, "", "load_bad_channels"], [475, 2, 1, "", "load_data"], [475, 3, 1, "", "n_times"], [475, 2, 1, "", "notch_filter"], [475, 2, 1, "", "pick"], [475, 2, 1, "", "pick_channels"], [475, 2, 1, "", "pick_types"], [475, 2, 1, "", "plot"], [475, 2, 1, "", "plot_projs_topomap"], [475, 2, 1, "", "plot_psd"], [475, 2, 1, "", "plot_psd_topo"], [475, 2, 1, "", "plot_psd_topomap"], [475, 2, 1, "", "plot_sensors"], [475, 3, 1, "", "proj"], [475, 2, 1, "", "rename_channels"], [475, 2, 1, "", "reorder_channels"], [475, 2, 1, "", "resample"], [475, 2, 1, "", "save"], [475, 2, 1, "", "savgol_filter"], [475, 2, 1, "", "set_annotations"], [475, 2, 1, "", "set_channel_types"], [475, 2, 1, "", "set_eeg_reference"], [475, 2, 1, "", "set_meas_date"], [475, 2, 1, "", "set_montage"], [475, 2, 1, "", "shift_time"], [475, 2, 1, "", "time_as_index"], [475, 3, 1, "", "times"], [475, 3, 1, "", "tmax"], [475, 3, 1, "", "tmin"], [475, 2, 1, "", "to_data_frame"]], "mne.io.RawArray": [[476, 2, 1, "", "__contains__"], [476, 2, 1, "", "__getitem__"], [476, 2, 1, "", "__len__"], [476, 2, 1, "", "add_channels"], [476, 2, 1, "", "add_events"], [476, 2, 1, "", "add_proj"], [476, 2, 1, "", "add_reference_channels"], [476, 3, 1, "", "annotations"], [476, 2, 1, "", "anonymize"], [476, 2, 1, "", "append"], [476, 2, 1, "", "apply_function"], [476, 2, 1, "", "apply_gradient_compensation"], [476, 2, 1, "", "apply_hilbert"], [476, 2, 1, "", "apply_proj"], [476, 3, 1, "", "ch_names"], [476, 2, 1, "", "close"], [476, 3, 1, "", "compensation_grade"], [476, 2, 1, "", "compute_psd"], [476, 2, 1, "", "copy"], [476, 2, 1, "", "crop"], [476, 2, 1, "", "crop_by_annotations"], [476, 2, 1, "", "decimate"], [476, 2, 1, "", "del_proj"], [476, 2, 1, "", "describe"], [476, 2, 1, "", "drop_channels"], [476, 2, 1, "", "export"], [476, 3, 1, "", "filenames"], [476, 2, 1, "", "filter"], [476, 3, 1, "", "first_samp"], [476, 3, 1, "", "first_time"], [476, 2, 1, "", "get_channel_types"], [476, 2, 1, "", "get_data"], [476, 2, 1, "", "get_montage"], [476, 2, 1, "", "interpolate_bads"], [476, 3, 1, "", "last_samp"], [476, 2, 1, "", "load_bad_channels"], [476, 2, 1, "", "load_data"], [476, 3, 1, "", "n_times"], [476, 2, 1, "", "notch_filter"], [476, 2, 1, "", "pick"], [476, 2, 1, "", "pick_channels"], [476, 2, 1, "", "pick_types"], [476, 2, 1, "", "plot"], [476, 2, 1, "", "plot_projs_topomap"], [476, 2, 1, "", "plot_psd"], [476, 2, 1, "", "plot_psd_topo"], [476, 2, 1, "", "plot_psd_topomap"], [476, 2, 1, "", "plot_sensors"], [476, 3, 1, "", "proj"], [476, 2, 1, "", "rename_channels"], [476, 2, 1, "", "reorder_channels"], [476, 2, 1, "", "resample"], [476, 2, 1, "", "save"], [476, 2, 1, "", "savgol_filter"], [476, 2, 1, "", "set_annotations"], [476, 2, 1, "", "set_channel_types"], [476, 2, 1, "", "set_eeg_reference"], [476, 2, 1, "", "set_meas_date"], [476, 2, 1, "", "set_montage"], [476, 2, 1, "", "shift_time"], [476, 2, 1, "", "time_as_index"], [476, 3, 1, "", "times"], [476, 3, 1, "", "tmax"], [476, 3, 1, "", "tmin"], [476, 2, 1, "", "to_data_frame"]], "mne.io.kit": [[478, 4, 1, "", "read_mrk"]], "mne.label": [[508, 4, 1, "", "select_sources"]], "mne.minimum_norm": [[521, 1, 1, "", "InverseOperator"], [522, 4, 1, "", "apply_inverse"], [523, 4, 1, "", "apply_inverse_cov"], [524, 4, 1, "", "apply_inverse_epochs"], [525, 4, 1, "", "apply_inverse_raw"], [526, 4, 1, "", "apply_inverse_tfr_epochs"], [527, 4, 1, "", "compute_rank_inverse"], [528, 4, 1, "", "compute_source_psd"], [529, 4, 1, "", "compute_source_psd_epochs"], [530, 4, 1, "", "estimate_snr"], [531, 4, 1, "", "get_cross_talk"], [532, 4, 1, "", "get_point_spread"], [533, 4, 1, "", "make_inverse_operator"], [534, 4, 1, "", "make_inverse_resolution_matrix"], [535, 4, 1, "", "prepare_inverse_operator"], [536, 4, 1, "", "read_inverse_operator"], [537, 4, 1, "", "resolution_metrics"], [538, 4, 1, "", "source_band_induced_power"], [539, 4, 1, "", "source_induced_power"], [540, 4, 1, "", "write_inverse_operator"]], "mne.minimum_norm.InverseOperator": [[521, 2, 1, "", "__contains__"], [521, 2, 1, "", "__getitem__"], [521, 2, 1, "", "__iter__"], [521, 2, 1, "", "__len__"], [521, 2, 1, "", "clear"], [521, 2, 1, "", "copy"], [521, 2, 1, "", "fromkeys"], [521, 2, 1, "", "get"], [521, 2, 1, "", "items"], [521, 2, 1, "", "keys"], [521, 2, 1, "", "pop"], [521, 2, 1, "", "popitem"], [521, 2, 1, "", "setdefault"], [521, 2, 1, "", "update"], [521, 2, 1, "", "values"]], "mne.preprocessing": [[554, 1, 1, "", "EOGRegression"], [555, 1, 1, "", "ICA"], [556, 1, 1, "", "Xdawn"], [557, 4, 1, "", "annotate_amplitude"], [558, 4, 1, "", "annotate_break"], [559, 4, 1, "", "annotate_movement"], [560, 4, 1, "", "annotate_muscle_zscore"], [561, 4, 1, "", "annotate_nan"], [562, 4, 1, "", "compute_average_dev_head_t"], [563, 4, 1, "", "compute_bridged_electrodes"], [564, 4, 1, "", "compute_current_source_density"], [565, 4, 1, "", "compute_fine_calibration"], [566, 4, 1, "", "compute_maxwell_basis"], [567, 4, 1, "", "compute_proj_ecg"], [568, 4, 1, "", "compute_proj_eog"], [569, 4, 1, "", "corrmap"], [570, 4, 1, "", "cortical_signal_suppression"], [571, 4, 1, "", "create_ecg_epochs"], [572, 4, 1, "", "create_eog_epochs"], [573, 4, 1, "", "equalize_bads"], [574, 4, 1, "", "find_bad_channels_maxwell"], [575, 4, 1, "", "find_ecg_events"], [576, 4, 1, "", "find_eog_events"], [577, 4, 1, "", "fix_stim_artifact"], [578, 4, 1, "", "ica_find_ecg_events"], [579, 4, 1, "", "ica_find_eog_events"], [864, 0, 0, "-", "ieeg"], [581, 4, 1, "", "infomax"], [582, 4, 1, "", "interpolate_bridged_electrodes"], [583, 4, 1, "", "maxwell_filter"], [584, 4, 1, "", "maxwell_filter_prepare_emptyroom"], [864, 0, 0, "-", "nirs"], [591, 4, 1, "", "oversampled_temporal_projection"], [592, 4, 1, "", "peak_finder"], [593, 4, 1, "", "read_eog_regression"], [594, 4, 1, "", "read_fine_calibration"], [595, 4, 1, "", "read_ica"], [596, 4, 1, "", "read_ica_eeglab"], [597, 4, 1, "", "realign_raw"], [598, 4, 1, "", "regress_artifact"], [599, 4, 1, "", "write_fine_calibration"]], "mne.preprocessing.EOGRegression": [[554, 2, 1, "", "apply"], [554, 2, 1, "", "fit"], [554, 2, 1, "", "plot"], [554, 2, 1, "", "save"]], "mne.preprocessing.ICA": [[555, 2, 1, "", "__contains__"], [555, 2, 1, "", "apply"], [555, 3, 1, "", "compensation_grade"], [555, 2, 1, "", "copy"], [555, 2, 1, "", "find_bads_ecg"], [555, 2, 1, "", "find_bads_eog"], [555, 2, 1, "", "find_bads_muscle"], [555, 2, 1, "", "find_bads_ref"], [555, 2, 1, "", "fit"], [555, 2, 1, "", "get_channel_types"], [555, 2, 1, "", "get_components"], [555, 2, 1, "", "get_explained_variance_ratio"], [555, 2, 1, "", "get_sources"], [555, 2, 1, "", "plot_components"], [555, 2, 1, "", "plot_overlay"], [555, 2, 1, "", "plot_properties"], [555, 2, 1, "", "plot_scores"], [555, 2, 1, "", "plot_sources"], [555, 2, 1, "", "save"], [555, 2, 1, "", "score_sources"]], "mne.preprocessing.Xdawn": [[556, 2, 1, "", "apply"], [556, 2, 1, "", "fit"], [556, 2, 1, "", "fit_transform"], [556, 2, 1, "", "get_params"], [556, 2, 1, "", "inverse_transform"], [556, 2, 1, "", "set_params"], [556, 2, 1, "", "transform"]], "mne.preprocessing.ieeg": [[580, 4, 1, "", "project_sensors_onto_brain"]], "mne.preprocessing.nirs": [[585, 4, 1, "", "beer_lambert_law"], [586, 4, 1, "", "optical_density"], [587, 4, 1, "", "scalp_coupling_index"], [588, 4, 1, "", "short_channels"], [589, 4, 1, "", "source_detector_distances"], [590, 4, 1, "", "temporal_derivative_distribution_repair"]], "mne.simulation": [[645, 1, 1, "", "SourceSimulator"], [646, 4, 1, "", "add_chpi"], [647, 4, 1, "", "add_ecg"], [648, 4, 1, "", "add_eog"], [649, 4, 1, "", "add_noise"], [870, 0, 0, "-", "metrics"], [658, 4, 1, "", "select_source_in_label"], [659, 4, 1, "", "simulate_evoked"], [660, 4, 1, "", "simulate_raw"], [661, 4, 1, "", "simulate_sparse_stc"], [662, 4, 1, "", "simulate_stc"]], "mne.simulation.SourceSimulator": [[645, 2, 1, "", "__iter__"], [645, 2, 1, "", "add_data"], [645, 3, 1, "", "duration"], [645, 2, 1, "", "get_stc"], [645, 2, 1, "", "get_stim_channel"], [645, 3, 1, "", "n_times"]], "mne.simulation.metrics": [[650, 4, 1, "", "cosine_score"], [651, 4, 1, "", "f1_score"], [652, 4, 1, "", "peak_position_error"], [653, 4, 1, "", "precision_score"], [654, 4, 1, "", "recall_score"], [655, 4, 1, "", "region_localization_error"], [656, 4, 1, "", "roc_auc_score"], [657, 4, 1, "", "spatial_deviation_error"]], "mne.source_space": [[663, 4, 1, "", "compute_distance_to_sensors"], [664, 4, 1, "", "get_decimated_surfaces"]], "mne.stats": [[673, 4, 1, "", "bonferroni_correction"], [674, 4, 1, "", "bootstrap_confidence_interval"], [675, 4, 1, "", "combine_adjacency"], [676, 4, 1, "", "f_mway_rm"], [677, 4, 1, "", "f_oneway"], [678, 4, 1, "", "f_threshold_mway_rm"], [679, 4, 1, "", "fdr_correction"], [680, 4, 1, "", "linear_regression"], [681, 4, 1, "", "linear_regression_raw"], [682, 4, 1, "", "permutation_cluster_1samp_test"], [683, 4, 1, "", "permutation_cluster_test"], [684, 4, 1, "", "permutation_t_test"], [685, 4, 1, "", "spatio_temporal_cluster_1samp_test"], [686, 4, 1, "", "spatio_temporal_cluster_test"], [687, 4, 1, "", "summarize_clusters_stc"], [688, 4, 1, "", "ttest_1samp_no_p"], [689, 4, 1, "", "ttest_ind_no_p"]], "mne.surface": [[692, 4, 1, "", "complete_surface_info"], [693, 4, 1, "", "read_curvature"]], "mne.time_frequency": [[695, 1, 1, "", "AverageTFR"], [696, 1, 1, "", "CrossSpectralDensity"], [697, 1, 1, "", "EpochsSpectrum"], [698, 1, 1, "", "EpochsTFR"], [699, 1, 1, "", "Spectrum"], [700, 4, 1, "", "csd_array_fourier"], [701, 4, 1, "", "csd_array_morlet"], [702, 4, 1, "", "csd_array_multitaper"], [703, 4, 1, "", "csd_fourier"], [704, 4, 1, "", "csd_morlet"], [705, 4, 1, "", "csd_multitaper"], [706, 4, 1, "", "csd_tfr"], [707, 4, 1, "", "dpss_windows"], [708, 4, 1, "", "fit_iir_model_raw"], [709, 4, 1, "", "fwhm"], [710, 4, 1, "", "istft"], [711, 4, 1, "", "morlet"], [712, 4, 1, "", "pick_channels_csd"], [713, 4, 1, "", "psd_array_multitaper"], [714, 4, 1, "", "psd_array_welch"], [715, 4, 1, "", "read_csd"], [716, 4, 1, "", "read_spectrum"], [717, 4, 1, "", "read_tfrs"], [718, 4, 1, "", "stft"], [719, 4, 1, "", "stftfreq"], [873, 0, 0, "-", "tfr"], [722, 4, 1, "", "tfr_array_morlet"], [723, 4, 1, "", "tfr_array_multitaper"], [724, 4, 1, "", "tfr_array_stockwell"], [725, 4, 1, "", "tfr_morlet"], [726, 4, 1, "", "tfr_multitaper"], [727, 4, 1, "", "tfr_stockwell"], [728, 4, 1, "", "write_tfrs"]], "mne.time_frequency.AverageTFR": [[695, 2, 1, "", "__add__"], [695, 2, 1, "", "__contains__"], [695, 2, 1, "", "__mul__"], [695, 2, 1, "", "__sub__"], [695, 2, 1, "", "add_channels"], [695, 2, 1, "", "add_reference_channels"], [695, 2, 1, "", "apply_baseline"], [695, 3, 1, "", "ch_names"], [695, 3, 1, "", "compensation_grade"], [695, 2, 1, "", "copy"], [695, 2, 1, "", "crop"], [695, 2, 1, "", "decimate"], [695, 2, 1, "", "drop_channels"], [695, 2, 1, "", "get_channel_types"], [695, 2, 1, "", "pick"], [695, 2, 1, "", "pick_channels"], [695, 2, 1, "", "pick_types"], [695, 2, 1, "", "plot"], [695, 2, 1, "", "plot_joint"], [695, 2, 1, "", "plot_topo"], [695, 2, 1, "", "plot_topomap"], [695, 2, 1, "", "reorder_channels"], [695, 2, 1, "", "save"], [695, 2, 1, "", "shift_time"], [695, 2, 1, "", "time_as_index"], [695, 3, 1, "", "times"], [695, 3, 1, "", "tmax"], [695, 3, 1, "", "tmin"], [695, 2, 1, "", "to_data_frame"]], "mne.time_frequency.CrossSpectralDensity": [[696, 2, 1, "", "__getitem__"], [696, 2, 1, "", "__len__"], [696, 2, 1, "", "copy"], [696, 2, 1, "", "get_data"], [696, 2, 1, "", "mean"], [696, 3, 1, "", "n_channels"], [696, 2, 1, "", "pick_channels"], [696, 2, 1, "", "pick_frequency"], [696, 2, 1, "", "plot"], [696, 2, 1, "", "save"], [696, 2, 1, "", "sum"]], "mne.time_frequency.EpochsSpectrum": [[697, 2, 1, "", "__contains__"], [697, 2, 1, "", "__getitem__"], [697, 2, 1, "", "__iter__"], [697, 2, 1, "", "__len__"], [697, 2, 1, "", "add_channels"], [697, 2, 1, "", "add_reference_channels"], [697, 2, 1, "", "average"], [697, 3, 1, "", "compensation_grade"], [697, 2, 1, "", "copy"], [697, 2, 1, "", "drop_channels"], [697, 2, 1, "", "get_channel_types"], [697, 2, 1, "", "get_data"], [697, 3, 1, "", "metadata"], [697, 2, 1, "", "next"], [697, 2, 1, "", "pick"], [697, 2, 1, "", "pick_channels"], [697, 2, 1, "", "pick_types"], [697, 2, 1, "", "plot"], [697, 2, 1, "", "plot_topo"], [697, 2, 1, "", "plot_topomap"], [697, 2, 1, "", "reorder_channels"], [697, 2, 1, "", "save"], [697, 2, 1, "", "to_data_frame"], [697, 2, 1, "", "units"]], "mne.time_frequency.EpochsTFR": [[698, 2, 1, "", "__contains__"], [698, 2, 1, "", "__getitem__"], [698, 2, 1, "", "__iter__"], [698, 2, 1, "", "__len__"], [698, 2, 1, "", "add_channels"], [698, 2, 1, "", "add_reference_channels"], [698, 2, 1, "", "apply_baseline"], [698, 2, 1, "", "average"], [698, 3, 1, "", "ch_names"], [698, 3, 1, "", "compensation_grade"], [698, 2, 1, "", "copy"], [698, 2, 1, "", "crop"], [698, 2, 1, "", "decimate"], [698, 2, 1, "", "drop_channels"], [698, 2, 1, "", "get_channel_types"], [698, 3, 1, "", "metadata"], [698, 2, 1, "", "next"], [698, 2, 1, "", "pick"], [698, 2, 1, "", "pick_channels"], [698, 2, 1, "", "pick_types"], [698, 2, 1, "", "reorder_channels"], [698, 2, 1, "", "save"], [698, 2, 1, "", "shift_time"], [698, 2, 1, "", "time_as_index"], [698, 3, 1, "", "times"], [698, 3, 1, "", "tmax"], [698, 3, 1, "", "tmin"], [698, 2, 1, "", "to_data_frame"]], "mne.time_frequency.Spectrum": [[699, 2, 1, "", "__contains__"], [699, 2, 1, "", "__getitem__"], [699, 2, 1, "", "add_channels"], [699, 2, 1, "", "add_reference_channels"], [699, 3, 1, "", "compensation_grade"], [699, 2, 1, "", "copy"], [699, 2, 1, "", "drop_channels"], [699, 2, 1, "", "get_channel_types"], [699, 2, 1, "", "get_data"], [699, 2, 1, "", "pick"], [699, 2, 1, "", "pick_channels"], [699, 2, 1, "", "pick_types"], [699, 2, 1, "", "plot"], [699, 2, 1, "", "plot_topo"], [699, 2, 1, "", "plot_topomap"], [699, 2, 1, "", "reorder_channels"], [699, 2, 1, "", "save"], [699, 2, 1, "", "to_data_frame"], [699, 2, 1, "", "units"]], "mne.time_frequency.tfr": [[720, 4, 1, "", "cwt"], [721, 4, 1, "", "morlet"]], "mne.transforms": [[730, 1, 1, "", "Transform"], [731, 4, 1, "", "apply_volume_registration"], [732, 4, 1, "", "compute_volume_registration"], [733, 4, 1, "", "quat_to_rot"], [734, 4, 1, "", "read_ras_mni_t"], [735, 4, 1, "", "rot_to_quat"]], "mne.transforms.Transform": [[730, 2, 1, "", "__contains__"], [730, 2, 1, "", "__getitem__"], [730, 2, 1, "", "__iter__"], [730, 2, 1, "", "__len__"], [730, 2, 1, "", "clear"], [730, 2, 1, "", "copy"], [730, 3, 1, "", "from_str"], [730, 2, 1, "", "fromkeys"], [730, 2, 1, "", "get"], [730, 2, 1, "", "items"], [730, 2, 1, "", "keys"], [730, 2, 1, "", "pop"], [730, 2, 1, "", "popitem"], [730, 2, 1, "", "save"], [730, 2, 1, "", "setdefault"], [730, 3, 1, "", "to_str"], [730, 2, 1, "", "update"], [730, 2, 1, "", "values"]], "mne.utils": [[738, 1, 1, "", "deprecated"], [739, 4, 1, "", "warn"]], "mne.viz": [[742, 1, 1, "", "Brain"], [743, 1, 1, "", "ClickableImage"], [744, 1, 1, "", "Figure3D"], [745, 4, 1, "", "add_background_image"], [746, 4, 1, "", "centers_to_edges"], [747, 4, 1, "", "circular_layout"], [748, 4, 1, "", "close_3d_figure"], [749, 4, 1, "", "close_all_3d_figures"], [750, 4, 1, "", "compare_fiff"], [751, 4, 1, "", "create_3d_figure"], [752, 4, 1, "", "get_3d_backend"], [753, 4, 1, "", "get_brain_class"], [754, 4, 1, "", "get_browser_backend"], [755, 4, 1, "", "iter_topography"], [756, 4, 1, "", "link_brains"], [757, 4, 1, "", "mne_analyze_colormap"], [758, 4, 1, "", "plot_alignment"], [759, 4, 1, "", "plot_arrowmap"], [760, 4, 1, "", "plot_bem"], [761, 4, 1, "", "plot_brain_colorbar"], [762, 4, 1, "", "plot_bridged_electrodes"], [763, 4, 1, "", "plot_ch_adjacency"], [764, 4, 1, "", "plot_channel_labels_circle"], [765, 4, 1, "", "plot_chpi_snr"], [766, 4, 1, "", "plot_compare_evokeds"], [767, 4, 1, "", "plot_cov"], [768, 4, 1, "", "plot_csd"], [769, 4, 1, "", "plot_dipole_amplitudes"], [770, 4, 1, "", "plot_dipole_locations"], [771, 4, 1, "", "plot_drop_log"], [772, 4, 1, "", "plot_epochs"], [773, 4, 1, "", "plot_epochs_image"], [774, 4, 1, "", "plot_epochs_psd_topomap"], [775, 4, 1, "", "plot_events"], [776, 4, 1, "", "plot_evoked"], [777, 4, 1, "", "plot_evoked_field"], [778, 4, 1, "", "plot_evoked_image"], [779, 4, 1, "", "plot_evoked_joint"], [780, 4, 1, "", "plot_evoked_topo"], [781, 4, 1, "", "plot_evoked_topomap"], [782, 4, 1, "", "plot_evoked_white"], [783, 4, 1, "", "plot_filter"], [784, 4, 1, "", "plot_head_positions"], [785, 4, 1, "", "plot_ica_components"], [786, 4, 1, "", "plot_ica_overlay"], [787, 4, 1, "", "plot_ica_properties"], [788, 4, 1, "", "plot_ica_scores"], [789, 4, 1, "", "plot_ica_sources"], [790, 4, 1, "", "plot_ideal_filter"], [791, 4, 1, "", "plot_layout"], [792, 4, 1, "", "plot_montage"], [793, 4, 1, "", "plot_projs_joint"], [794, 4, 1, "", "plot_projs_topomap"], [795, 4, 1, "", "plot_raw"], [796, 4, 1, "", "plot_raw_psd"], [797, 4, 1, "", "plot_regression_weights"], [798, 4, 1, "", "plot_sensors"], [799, 4, 1, "", "plot_snr_estimate"], [800, 4, 1, "", "plot_source_estimates"], [801, 4, 1, "", "plot_sparse_source_estimates"], [802, 4, 1, "", "plot_tfr_topomap"], [803, 4, 1, "", "plot_topo_image_epochs"], [804, 4, 1, "", "plot_topomap"], [805, 4, 1, "", "plot_vector_source_estimates"], [806, 4, 1, "", "plot_volume_source_estimates"], [807, 4, 1, "", "set_3d_backend"], [808, 4, 1, "", "set_3d_options"], [809, 4, 1, "", "set_3d_title"], [810, 4, 1, "", "set_3d_view"], [811, 4, 1, "", "set_browser_backend"], [812, 4, 1, "", "snapshot_brain_montage"], [813, 4, 1, "", "use_3d_backend"], [814, 4, 1, "", "use_browser_backend"]], "mne.viz.Brain": [[742, 2, 1, "", "add_annotation"], [742, 2, 1, "", "add_data"], [742, 2, 1, "", "add_dipole"], [742, 2, 1, "", "add_foci"], [742, 2, 1, "", "add_forward"], [742, 2, 1, "", "add_head"], [742, 2, 1, "", "add_label"], [742, 2, 1, "", "add_sensors"], [742, 2, 1, "", "add_skull"], [742, 2, 1, "", "add_text"], [742, 2, 1, "", "add_volume_labels"], [742, 2, 1, "", "apply_auto_scaling"], [742, 2, 1, "", "clear_glyphs"], [742, 2, 1, "", "close"], [742, 3, 1, "", "data"], [742, 2, 1, "", "get_picked_points"], [742, 2, 1, "", "get_view"], [742, 2, 1, "", "help"], [742, 3, 1, "", "interaction"], [742, 2, 1, "", "plot_time_course"], [742, 2, 1, "", "plot_time_line"], [742, 2, 1, "", "remove_annotations"], [742, 2, 1, "", "remove_data"], [742, 2, 1, "", "remove_dipole"], [742, 2, 1, "", "remove_forward"], [742, 2, 1, "", "remove_head"], [742, 2, 1, "", "remove_labels"], [742, 2, 1, "", "remove_sensors"], [742, 2, 1, "", "remove_skull"], [742, 2, 1, "", "remove_text"], [742, 2, 1, "", "remove_volume_labels"], [742, 2, 1, "", "reset"], [742, 2, 1, "", "reset_view"], [742, 2, 1, "", "restore_user_scaling"], [742, 2, 1, "", "save_image"], [742, 2, 1, "", "save_movie"], [742, 2, 1, "", "screenshot"], [742, 2, 1, "", "set_data_smoothing"], [742, 2, 1, "", "set_playback_speed"], [742, 2, 1, "", "set_time"], [742, 2, 1, "", "set_time_interpolation"], [742, 2, 1, "", "set_time_point"], [742, 2, 1, "", "setup_time_viewer"], [742, 2, 1, "", "show"], [742, 2, 1, "", "show_view"], [742, 3, 1, "", "time_interpolation"], [742, 2, 1, "", "toggle_interface"], [742, 2, 1, "", "toggle_playback"], [742, 2, 1, "", "update_lut"]], "mne.viz.ClickableImage": [[743, 2, 1, "", "onclick"], [743, 2, 1, "", "plot_clicks"], [743, 2, 1, "", "to_layout"]], "mne.viz.Figure3D": [[744, 3, 1, "", "plotter"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"]}, "titleterms": {"connect": [0, 27, 145, 244, 834], "analysi": [0, 4, 10, 14, 27, 36, 136, 145, 150, 164, 165, 215, 230, 235, 238, 239, 240, 852, 854, 861], "exampl": [0, 3, 27, 96, 103, 145, 155, 174, 194, 203, 204, 205, 254, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 281, 285, 286, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 305, 307, 308, 309, 310, 311, 312, 314, 316, 320, 321, 322, 324, 326, 327, 328, 332, 335, 336, 339, 340, 341, 342, 343, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 368, 370, 379, 385, 390, 398, 399, 402, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 433, 436, 441, 442, 443, 445, 447, 448, 450, 455, 456, 459, 460, 464, 466, 467, 470, 471, 472, 473, 475, 476, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 542, 544, 546, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 562, 563, 564, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 580, 582, 583, 585, 586, 587, 589, 590, 591, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 612, 613, 615, 617, 618, 621, 623, 624, 625, 626, 627, 628, 630, 634, 636, 637, 639, 640, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654, 655, 657, 659, 660, 661, 662, 663, 667, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 690, 691, 693, 694, 695, 696, 697, 698, 699, 703, 704, 705, 706, 708, 711, 713, 714, 722, 725, 726, 727, 731, 732, 734, 736, 737, 741, 742, 743, 746, 747, 751, 753, 755, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 769, 770, 773, 775, 778, 780, 782, 783, 784, 790, 793, 794, 799, 800, 801, 804, 805, 807, 809, 810, 812, 814, 815, 819, 820, 821, 822, 823, 826, 828, 851, 860, 863], "brainstorm": [1, 182, 183, 190, 374, 375, 376, 851], "raw": [1, 7, 29, 69, 79, 88, 91, 92, 136, 139, 151, 167, 171, 176, 202, 209, 210, 213, 214, 215, 216, 219, 254, 475, 854, 857, 866], "median": [1, 851], "nerv": [1, 851], "dataset": [1, 2, 3, 4, 7, 27, 69, 81, 182, 183, 184, 190, 213, 239, 247, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 851, 854], "refer": [1, 4, 8, 10, 12, 13, 15, 16, 18, 19, 21, 33, 35, 40, 42, 43, 44, 46, 51, 54, 55, 58, 59, 65, 69, 70, 73, 74, 77, 81, 82, 86, 92, 99, 107, 110, 111, 115, 117, 119, 124, 127, 133, 136, 140, 143, 150, 154, 156, 161, 175, 177, 179, 182, 183, 188, 190, 193, 194, 198, 200, 202, 203, 204, 205, 206, 208, 210, 221, 224, 225, 229, 237, 834, 850, 851, 854, 857, 865], "hf": 2, "sef": [2, 851], "open": [3, 27, 254, 834, 863], "singl": [4, 28, 102, 126, 226, 227, 228], "trial": [4, 126, 209, 214, 226, 227, 228, 238, 239], "linear": [4, 18, 254, 857], "regress": [4, 72, 97, 99, 140, 202, 210], "limo": [4, 391, 851], "about": [4, 169, 170, 197, 857], "data": [4, 5, 7, 8, 11, 13, 15, 18, 19, 21, 27, 29, 30, 41, 42, 49, 51, 57, 63, 65, 70, 72, 74, 78, 79, 84, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 107, 112, 113, 114, 117, 118, 119, 127, 134, 135, 136, 139, 140, 141, 145, 146, 148, 149, 151, 158, 164, 165, 166, 167, 168, 171, 174, 176, 177, 179, 187, 188, 189, 190, 191, 193, 199, 201, 202, 209, 210, 213, 214, 215, 216, 217, 219, 220, 221, 225, 228, 229, 230, 232, 233, 234, 237, 239, 246, 254, 660, 850, 851, 854, 857, 860, 866, 869, 871], "load": [4, 19, 47, 72, 113, 114, 135, 136, 139, 140, 148, 158, 165, 174, 177, 189, 193, 204, 213, 220, 857], "visual": [4, 19, 27, 47, 48, 49, 50, 54, 55, 110, 115, 120, 135, 139, 141, 143, 148, 149, 155, 157, 169, 176, 179, 180, 181, 193, 202, 203, 204, 205, 207, 224, 229, 232, 233, 234, 237, 834, 851, 863, 874], "event": [4, 68, 111, 136, 143, 150, 165, 167, 171, 214, 249, 433, 434, 435], "condit": [4, 13, 130, 150, 227, 228], "erp": [4, 140, 143, 150, 851], "effect": [4, 16, 193, 194, 202, 204, 224, 239, 857], "stimulu": [4, 19], "phase": [4, 105], "coher": [4, 238], "prepar": [4, 5, 143, 202, 234], "defin": [4, 68, 88, 155, 224, 226], "predictor": 4, "variabl": [4, 170, 834], "design": [4, 136, 194, 200, 852], "matrix": [4, 41, 64, 69, 101, 161, 224, 232, 850, 854, 857, 860], "extract": [4, 37, 39, 92, 136, 139, 207, 209, 213, 239], "coeffici": [4, 19], "plot": [4, 18, 34, 41, 42, 43, 44, 47, 48, 50, 60, 68, 69, 79, 80, 82, 114, 116, 117, 118, 121, 122, 123, 124, 125, 126, 131, 135, 140, 141, 149, 151, 161, 169, 209, 214, 216, 220, 226, 227, 238, 239, 832, 854], "model": [4, 19, 23, 27, 45, 109, 156, 157, 162, 164, 165, 176, 179, 193, 195, 206, 252, 254, 850, 856, 857, 863], "result": [4, 43, 44, 54, 239], "optic": [5, 209, 210], "pump": [5, 210], "magnetomet": [5, 210], "opm": [5, 107, 187, 210, 395, 851, 863], "local": [5, 31, 164, 175, 176, 177, 181, 185, 834, 850], "perform": [5, 72, 88, 135, 193], "dipol": [5, 45, 88, 114, 175, 177, 180, 260, 427], "fit": [5, 19, 156, 175, 180, 193, 203], "minimum": [5, 857], "norm": [5, 40, 857], "comput": [6, 16, 20, 21, 25, 28, 29, 30, 32, 33, 34, 35, 39, 40, 41, 42, 45, 46, 47, 49, 51, 54, 55, 56, 58, 59, 66, 69, 83, 88, 89, 92, 100, 101, 102, 104, 105, 106, 107, 108, 110, 128, 135, 138, 147, 153, 157, 158, 161, 163, 169, 173, 176, 178, 179, 186, 192, 196, 200, 202, 203, 204, 207, 212, 218, 223, 226, 227, 229, 231, 232, 233, 234, 236, 241, 245, 254, 850, 857, 863], "time": [6, 9, 13, 20, 25, 27, 32, 37, 39, 46, 56, 59, 66, 68, 69, 71, 83, 84, 89, 92, 100, 103, 104, 112, 128, 135, 138, 139, 141, 143, 144, 147, 153, 163, 164, 165, 173, 180, 186, 192, 194, 196, 203, 212, 213, 218, 223, 226, 227, 229, 231, 236, 238, 239, 240, 241, 834, 863, 873], "from": [7, 8, 15, 19, 37, 38, 43, 44, 61, 88, 102, 127, 136, 139, 141, 143, 148, 167, 168, 187, 188, 189, 202, 205, 209, 213, 214, 215, 216, 219, 220, 246, 254, 861], "dspm": [7, 28, 30, 34, 54, 92, 108, 176, 857], "spm": [7, 851], "face": [7, 851], "motor": [8, 851], "imageri": [8, 851], "decod": [8, 9, 11, 12, 13, 15, 17, 18, 27, 194, 248, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425], "eeg": [8, 15, 22, 55, 58, 65, 69, 70, 77, 116, 123, 150, 158, 165, 181, 187, 188, 206, 225, 239, 850, 857, 863], "us": [8, 9, 14, 18, 26, 32, 33, 34, 35, 39, 47, 57, 63, 70, 82, 92, 136, 142, 145, 148, 154, 155, 156, 159, 160, 170, 179, 193, 203, 206, 208, 228, 254, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 281, 285, 286, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 305, 307, 308, 309, 310, 311, 312, 314, 316, 320, 321, 322, 324, 326, 327, 328, 332, 335, 336, 339, 340, 341, 342, 343, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 368, 370, 379, 385, 390, 398, 399, 402, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 433, 436, 441, 442, 443, 445, 447, 448, 450, 455, 456, 459, 460, 464, 466, 467, 470, 471, 472, 473, 475, 476, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 542, 544, 546, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 562, 563, 564, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 580, 582, 583, 585, 586, 587, 589, 590, 591, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 612, 613, 615, 617, 618, 621, 623, 624, 625, 626, 627, 628, 630, 634, 636, 637, 639, 640, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654, 655, 657, 659, 660, 661, 662, 663, 667, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 690, 691, 693, 694, 695, 696, 697, 698, 699, 703, 704, 705, 706, 708, 711, 713, 714, 722, 725, 726, 727, 731, 732, 734, 736, 737, 741, 742, 743, 746, 747, 751, 753, 755, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 769, 770, 773, 775, 778, 780, 782, 783, 784, 790, 793, 794, 799, 800, 801, 804, 805, 807, 809, 810, 812, 814, 815, 819, 820, 821, 822, 823, 826, 828, 832, 834, 847, 850, 854, 857, 860], "common": [8, 9, 133, 194, 232, 234, 237], "spatial": [8, 9, 16, 21, 54, 55, 179, 194, 220], "pattern": [8, 9, 18, 194], "csp": [8, 9, 407], "frequenc": [9, 27, 32, 46, 59, 103, 111, 112, 135, 164, 165, 189, 197, 200, 207, 226, 227, 229, 237, 238, 239, 240, 851, 863, 873], "space": [9, 11, 13, 18, 24, 26, 30, 41, 54, 58, 99, 102, 105, 108, 145, 157, 158, 162, 164, 177, 194, 204, 205, 208, 214, 220, 232, 234, 254, 850, 857, 860, 869, 871], "represent": [10, 112, 209, 228, 857], "similar": [10, 148], "sourc": [11, 24, 26, 27, 30, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 44, 45, 47, 54, 58, 70, 88, 92, 93, 102, 105, 106, 107, 108, 114, 155, 157, 158, 162, 164, 171, 175, 176, 177, 179, 180, 181, 185, 194, 206, 220, 232, 233, 234, 235, 254, 850, 857, 863, 871], "continu": [12, 79, 97, 99, 145, 146, 164, 165, 189, 193, 207, 213, 215, 216, 217, 857], "target": [12, 68], "spoc": [12, 194, 414], "sensor": [13, 18, 22, 82, 94, 95, 98, 99, 114, 116, 121, 123, 131, 135, 141, 164, 169, 189, 194, 205, 209, 210, 216, 220, 229, 230, 238, 857, 869], "gener": [13, 24, 38, 90, 91, 93, 143, 188, 194, 199, 210, 220, 242, 834, 854, 857], "across": [13, 69, 80, 150, 209], "evok": [14, 30, 34, 41, 51, 68, 84, 88, 90, 92, 117, 118, 119, 125, 130, 148, 149, 150, 151, 152, 164, 165, 171, 176, 202, 210, 219, 264, 850], "respons": [14, 68, 130, 143, 150, 152, 164, 165, 176, 193, 202, 209, 210, 862], "ica": [14, 75, 81, 171, 203, 555, 850], "pca": [14, 47, 254], "reduct": [14, 203, 204, 205], "techniqu": 14, "xdawn": [15, 86, 194, 556], "match": [16, 194, 203], "filter": [16, 18, 21, 49, 78, 112, 150, 179, 194, 200, 201, 203, 208, 210, 442, 443, 444, 445, 446, 447, 857], "em": [16, 408], "machin": [17, 27, 164, 195], "learn": [17, 27, 136, 164, 195], "encod": [17, 27, 660], "mvpa": [17, 27, 194], "classifi": 18, "logisticregress": 18, "recept": [19, 193], "field": [19, 149, 150, 193, 857, 860], "estim": [19, 34, 38, 41, 42, 43, 44, 57, 88, 152, 164, 165, 180, 181, 193, 207, 220, 235, 244, 850, 857], "predict": [19, 857], "public": [19, 125], "creat": [19, 88, 92, 113, 114, 136, 139, 143, 148, 187, 193, 202, 205, 206, 215, 219, 220, 228, 246, 254, 834, 850, 857], "investig": 19, "reconstruct": [19, 88, 92, 154, 159, 179, 205, 850], "spectro": [21, 193], "decomposit": 21, "ssd": [21, 415], "epoch": [21, 28, 42, 92, 102, 112, 115, 136, 139, 141, 142, 143, 144, 145, 146, 148, 150, 151, 164, 165, 171, 199, 202, 203, 209, 219, 229, 232, 234, 262, 428, 429, 430, 431, 850, 857], "displai": 22, "sensit": [22, 129], "map": [22, 35, 110, 118, 129, 141, 148, 149, 214, 221, 857], "meg": [22, 55, 73, 77, 85, 121, 131, 165, 187, 210, 220, 851, 857, 863], "forward": [23, 27, 47, 107, 157, 158, 162, 164, 171, 179, 252, 266, 451, 452, 453, 454, 850, 854, 857], "left": [24, 209], "cerebellum": 24, "volum": [24, 30, 41, 50, 180], "morph": [26, 43, 44, 179, 857], "galleri": 27, "input": [27, 62], "output": [27, 62, 159, 179], "simul": [27, 87, 88, 90, 91, 92, 93, 112, 164, 193, 203, 220, 221, 222, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 870], "preprocess": [27, 76, 107, 135, 140, 164, 165, 209, 210, 211, 215, 239, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 850, 864], "statist": [27, 96, 164, 224, 225, 226, 227, 229, 230, 232, 233, 234, 235, 239, 857, 863, 872], "invers": [27, 28, 29, 30, 31, 35, 36, 39, 40, 41, 42, 47, 52, 57, 92, 102, 164, 165, 176, 185, 843, 849, 850, 854, 857], "problem": [27, 36, 200], "mne": [28, 30, 41, 42, 54, 60, 75, 114, 122, 154, 159, 160, 165, 170, 171, 176, 178, 187, 198, 200, 203, 204, 208, 213, 219, 224, 243, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 831, 834, 836, 837, 838, 840, 841, 842, 846, 849, 853, 854, 857, 860, 868], "solut": [28, 29, 30, 35, 39, 40, 41, 47, 60, 102, 157, 171, 176, 178, 200, 203, 254, 843, 850, 854, 857], "sloreta": [29, 176, 857], "custom": [31, 125, 131, 171, 189], "solver": 31, "level": [32, 94, 127, 860], "timecours": [32, 45, 125], "dic": [32, 33, 34, 221], "beamform": [32, 33, 34, 49, 179, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299], "power": [33, 34, 42, 102, 105, 106, 107, 108, 135, 141, 150, 194, 197, 201, 221, 226, 227, 228, 238, 239], "er": 34, "lcmv": [34, 49, 179], "covari": [34, 42, 49, 64, 119, 161, 171, 176, 179, 220, 245, 259, 850, 854, 857], "some": [34, 200, 860], "spars": [35, 40, 59], "gamma": [35, 135], "empir": 35, "bayesian": 35, "method": [35, 74, 210, 213, 216, 224], "cours": [37, 92, 180], "source_estim": 37, "object": [37, 44, 136, 139, 141, 142, 144, 148, 149, 167, 168, 213, 215, 216, 219, 237, 246, 851, 854], "function": [38, 47, 48, 49, 50, 136, 209, 224, 234, 834, 838, 854, 860], "label": [38, 39, 41, 47, 102, 105, 106, 220, 268, 508, 860], "seri": [39, 69, 141], "activ": [39, 88, 92, 125, 126, 164, 179, 195, 209], "view": [39, 41, 80, 114, 142, 209, 226, 227, 254], "vector": [39, 43, 60, 171, 179, 180, 194, 422], "mix": [40, 41], "mxne": [40, 46, 59], "irmxn": 40, "set": [41, 43, 144, 150, 156, 170, 188, 206, 226, 228, 229, 232, 233, 234, 254, 834, 850, 851], "up": [41, 43, 156, 160, 254, 834, 850], "our": [41, 181], "fwd": [41, 860], "surfac": [41, 43, 157, 159, 160, 169, 180, 181, 209, 254, 692, 693, 850, 857, 860], "process": [41, 166, 179, 834, 848], "project": [42, 82, 113, 129, 169, 171, 194, 204, 254, 271, 856, 857, 860], "empti": [42, 127, 205], "room": [42, 127, 205], "appli": [42, 43, 44, 74, 136, 143, 179, 187, 189, 200, 202, 204, 239, 254], "oper": [42, 47, 52, 92, 112, 157, 158, 160, 215, 850, 852, 857], "sourcemorph": [43, 44, 274], "sourceestim": [43, 171, 174, 273], "read": [43, 44, 47, 52, 53, 64, 65, 136, 164, 167, 169, 188, 191, 214, 215, 229, 232, 234, 854, 860, 866], "write": [43, 44, 64, 214, 215, 860], "disk": [43, 44, 139], "volumetr": [44, 179, 857], "get": [44, 61, 158, 160, 170, 171, 181, 239, 841, 854, 855, 859], "volsourceestim": [44, 277], "convert": [44, 113, 144, 167, 209, 254], "nifti": 44, "an": [45, 52, 53, 57, 69, 115, 141, 142, 144, 156, 158, 160, 167, 168, 171, 179, 181, 203, 206, 210, 239, 850], "xfit": 45, "like": [45, 169], "multi": 45, "iter": [46, 139], "reweight": 46, "tf": 46, "multiscal": 46, "dictionari": 46, "leakag": 47, "among": [47, 148], "circular": 47, "graph": 47, "organis": 47, "cortic": [47, 67, 124, 135, 159, 232, 234, 850, 857], "parcel": [47, 124], "point": [47, 48, 50, 156, 220, 857], "spread": [47, 48, 50, 220], "summari": [47, 69, 166, 174, 197, 198, 200, 213, 875], "all": [47, 133, 179, 198, 228, 232, 234, 834, 838, 842, 854], "evalu": [47, 209], "base": [47, 68, 136, 140, 199, 254, 852, 857], "psf": [47, 48, 50], "correl": 47, "save": [47, 139, 148, 171, 204, 213], "figur": [47, 125, 171], "option": [47, 118, 254, 834, 854], "individu": [47, 860], "cross": [48, 49, 101, 132, 834], "talk": [48, 49], "ctf": [48, 121, 183, 187, 190], "differ": [49, 75, 88, 130, 140, 164, 191, 193, 239], "matric": [49, 161, 179], "resolut": [49, 54, 55, 160, 254], "two": [49, 220], "rap": 51, "music": 51, "stc": [53, 88, 174, 180, 860], "file": [53, 61, 169, 171, 188, 214, 215, 251, 254, 850, 854, 857, 860], "metric": [54, 55, 69, 650, 651, 652, 653, 654, 655, 656, 657], "compar": [55, 69, 75, 88, 130, 149, 150, 193, 209, 210, 224, 254], "eegmeg": 55, "snr": [57, 58, 207, 239], "prior": 59, "full": [60, 229], "valu": [60, 144, 239], "averag": [61, 112, 148, 150, 206, 857], "info": [61, 168, 213, 219, 254, 267, 860], "fif": [61, 187, 254, 854], "how": [63, 113, 159, 161, 198, 205, 215, 849, 854], "neural": [63, 164, 193, 195, 209], "ensembl": 63, "neo": 63, "format": [63, 144, 188, 189, 857], "nois": [64, 119, 127, 176, 197, 201, 204, 205, 220, 239, 850, 851, 857], "xdf": [65, 188], "signal": [67, 149, 166, 167, 204, 205, 207, 208, 209, 210, 220, 239, 857, 860], "suppress": [67, 850], "css": 67, "remov": [67, 72, 81, 203, 204, 209, 232, 234], "lag": 68, "identifi": 69, "electrod": [69, 113, 133, 135, 181, 188, 857], "bridg": 69, "too": 69, "much": 69, "gel": 69, "electr": 69, "distanc": 69, "examin": [69, 140, 210], "distribut": [69, 74, 177, 832, 863], "topomap": [69, 118], "voltag": 69, "subject": [69, 92, 207, 254, 851], "eegbci": [69, 81, 377, 378, 851], "The": [69, 139, 143, 148, 166, 167, 168, 169, 174, 177, 179, 199, 213, 237, 850, 851, 856, 857, 860], "relationship": [69, 174], "between": [69, 167, 227], "imped": 69, "transform": [70, 112, 136, 155, 159, 194, 232, 234, 730, 731, 732, 733, 734, 735, 857, 860], "current": [70, 114, 175, 253, 857, 862, 875], "densiti": [70, 101, 102, 106, 107, 209, 216, 239], "csd": [70, 101], "show": [71, 127, 254], "eog": [71, 72, 197, 202, 203, 205, 254], "artifact": [71, 72, 73, 74, 79, 80, 197, 201, 202, 203, 205, 254, 850], "reduc": 72, "through": 72, "import": [72, 74, 125, 187, 188, 189, 254, 834], "packag": [72, 842, 857], "befor": [72, 202, 834], "after": [72, 832], "comparison": [72, 132, 224, 228], "find": [73, 220, 229, 232], "channel": [73, 77, 85, 115, 139, 144, 148, 150, 166, 167, 168, 169, 187, 198, 199, 203, 206, 209, 213, 229, 232, 234, 239, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 660, 850, 851, 857, 860], "visualis": [74, 225], "nir": [74, 585, 586, 587, 588, 589, 590], "correct": [74, 95, 140, 143, 224], "add": [74, 114], "artifici": 74, "tempor": [74, 82, 109, 193, 194, 232, 233, 234], "deriv": 74, "repair": [74, 201, 202, 203, 205, 857], "algorithm": [75, 254, 849, 857], "interpol": [77, 118, 198, 857], "bad": [77, 155, 156, 160, 198, 199, 232, 234, 850, 857], "maxwel": [78, 208, 857], "movement": [78, 79, 207, 208], "compens": [78, 187, 208, 857, 860], "annot": [79, 80, 136, 167, 199, 209, 215, 256, 850], "reestim": 79, "dev_head_t": 79, "head": [79, 114, 155, 157, 159, 160, 181, 188, 207, 254, 850, 857], "posit": [79, 113, 114, 207], "respect": 79, "mean": [79, 150], "record": [79, 80, 164, 188, 191, 205], "muscl": [80, 81], "z": 80, "score": [80, 88], "compon": [81, 143, 179, 203], "let": 81, "": [81, 112, 159, 875], "now": 81, "replic": 81, "thi": [81, 193], "denois": [82, 86, 210], "oversampl": 82, "shift": 84, "scale": [84, 144, 151, 857], "remap": 85, "type": [85, 139, 150, 168, 193, 200, 213, 239, 254, 834, 857], "main": 88, "paramet": [88, 166, 199, 226, 228, 229, 232, 233, 234], "true": 88, "correspond": [88, 850], "amplitud": [88, 150, 199], "threshold": [88, 224, 225], "For": [88, 860], "region": [88, 114, 150], "anatomi": 92, "responss": 92, "permut": [94, 98, 228, 229, 232, 233], "f": [94, 97, 229], "test": [94, 95, 98, 136, 224, 228, 229, 232, 233, 833, 834, 840], "1d": 94, "cluster": [94, 224, 226, 227, 228, 229, 232, 233, 234, 863], "fdr": [95, 224, 228], "t": [95, 98, 232, 854], "rer": 97, "p": 97, "analys": [99, 850], "featur": [99, 135, 136], "bin": [99, 187, 854], "spectral": [101, 102, 106, 107, 216, 237, 239], "psd": [102, 106, 107, 239], "lock": [105, 143], "vectorview": [107, 187, 213], "align": [107, 133, 155, 159, 254, 660, 850], "alpha": 107, "beta": 107, "induc": 108, "whiten": [109, 119, 151, 857, 860], "ar": [109, 148, 170, 197, 204, 854, 860], "erd": 110, "explor": [111, 135], "relat": [111, 150, 841, 860], "dynam": 111, "specif": 111, "band": 111, "multitap": 112, "v": [112, 194, 213, 837], "morlet": [112, 711, 721], "stockwel": 112, "hilbert": 112, "calcul": [112, 239, 850, 857], "tfr": [112, 228, 720, 721], "wavelet": 112, "narrow": 112, "bandpass": 112, "without": [112, 155], "over": [112, 115, 139, 194, 209], "arrai": [112, 167, 214, 246, 857], "3d": [113, 149, 169, 179, 832, 854, 857, 863], "2d": [113, 169, 179, 863], "imag": [113, 114, 115, 141, 149, 171, 209, 254, 849, 857, 863], "snapshot": 113, "manual": [113, 169, 203], "viz": [114, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814], "brain": [114, 122, 125, 135, 179, 209, 742], "inform": [114, 168, 170, 177, 200, 209, 254, 850, 857, 860], "modifi": [114, 142, 166, 213, 834], "highlight": 114, "includ": [114, 214, 254], "screenshot": 114, "export": [114, 144, 160, 213, 250, 437, 438, 439, 440], "scalp": [116, 140, 149], "topograph": [117, 118, 149, 151, 209], "arrowmap": 117, "basic": [118, 135, 139, 143, 148, 200, 239, 834, 860], "plot_topomap": [118, 804], "addit": 118, "more": [118, 125, 209, 860], "advanc": [118, 832], "usag": 118, "anim": 118, "layout": [121, 123, 169, 228, 311], "system": [121, 123, 164, 170, 187, 189, 191, 254, 840, 857], "neuromag": [121, 187], "bti": [121, 184, 187, 254, 851], "kit": [121, 187, 254, 478], "artemis123": [121, 187], "helmet": 122, "make": [125, 167, 214, 834, 856], "readi": 125, "montag": [125, 169], "inset": 125, "group": [126, 143, 850], "roi": [126, 239], "sort": 126, "rt": 126, "ssp": [129, 204, 205, 254, 850, 857], "topographi": [131, 140, 149, 239], "hemispher": [132, 254, 850], "locat": [133, 141, 150, 169, 181, 188, 189, 209, 216, 857], "intracrani": 133, "contact": 133, "t1": 133, "acpc": 133, "freesurf": [133, 154, 159, 254, 835, 850, 857, 860], "recon": 133, "ct": 133, "mr": 133, "mark": [133, 198, 850], "each": [133, 220], "warp": 133, "atla": 133, "work": [134, 135, 142, 164, 169, 171, 190, 198, 214, 217, 832, 854], "seeg": [134, 851, 863], "ecog": [135, 851, 863], "templat": [135, 158, 203, 851], "evolut": 135, "sleep": [136, 851], "stage": 136, "classif": 136, "polysomnographi": 136, "psg": 136, "hypnogram": 136, "30": 136, "found": [136, 854], "same": 136, "step": [136, 154, 837, 854], "bob": 136, "engin": 136, "scikit": 136, "python": [136, 154, 159, 160, 165, 170, 171, 198, 200, 203, 204, 208, 213, 219, 243, 254, 831, 832, 834, 836, 837, 838, 839, 842, 849, 852, 853, 854, 859, 863, 865], "multiclass": 136, "workflow": [136, 834, 850], "further": 136, "exercis": [136, 157, 194, 220, 229, 238, 239], "clinic": [137, 164, 863], "applic": [137, 164], "structur": [139, 148, 167, 168, 174, 187, 213, 219, 857, 860], "discontinu": 139, "subselect": [139, 214], "select": [139, 142, 148, 203, 209, 213, 232, 860], "index": [139, 144, 213, 239], "drop": [139, 148, 168, 213], "reorder": [139, 148, 213], "chang": [139, 206, 213, 834, 875], "name": [139, 150, 187, 213, 834, 860], "domain": [139, 189, 203, 213, 237], "other": [139, 148, 200, 253, 832, 834, 838, 849, 857, 861], "form": [139, 239], "baselin": [140, 200, 220, 285], "tradit": 140, "regressor": 140, "wave": [140, 189], "interact": [140, 141, 215, 216, 852], "term": 140, "pipelin": [141, 863], "script": [141, 171, 852], "projector": [141, 204, 205, 206, 216], "spectrum": [141, 237, 699], "metadata": [142, 143], "restrict": 142, "datafram": [142, 144], "queri": [142, 168, 213], "ad": [142, 143, 171, 204], "auto": 143, "make_metadata": [143, 431], "specifi": [143, 189], "keep": 143, "onli": [143, 838, 842], "first": [143, 154, 834, 837, 863], "new": [143, 834, 875], "column": [143, 167], "describ": [143, 834], "stimul": [143, 239], "side": 143, "knowledg": 143, "ern": 143, "panda": 144, "wide": 144, "versu": [144, 228, 852], "long": [144, 213], "divid": 145, "equal": [145, 214], "characterist": 145, "fix": [145, 160, 177, 178], "length": [145, 200], "case": 145, "segment": [146, 164], "subset": [148, 168, 239], "memori": [148, 187, 857], "core": [148, 838, 851, 854], "combin": [148, 214], "trace": 149, "butterfli": 149, "arrow": 149, "joint": [149, 238], "subplot": 149, "potenti": [150, 861], "global": 150, "gfp": 150, "interest": [150, 229, 856], "grand": 150, "latenc": 150, "measur": [150, 228, 234, 254], "peak": 150, "mri": [154, 155, 158, 159, 171, 179, 181, 254, 848, 851, 857], "anatom": [154, 850], "fsaverag": [154, 158, 179, 851], "coordin": [155, 159, 189, 254, 850, 857, 860], "frame": [155, 159, 850], "understand": 155, "definit": [155, 229, 857, 860], "A": [155, 854], "good": 155, "defac": 155, "tran": [155, 860], "gui": [155, 254, 466, 467], "autom": 156, "approach": [156, 254], "coregistr": [156, 157, 171, 254, 363, 466], "initi": 156, "fiduci": 156, "refin": 156, "icp": 156, "omit": 156, "final": 156, "bem": [157, 160, 171, 254, 300, 301, 302, 303, 304, 305, 306, 307, 850, 854, 857], "adult": 158, "setup": [158, 221, 228, 229, 832, 837, 845], "infant": [158, 851], "surrog": 158, "under": [159, 854], "hood": 159, "ra": [159, 181], "spheric": 159, "decim": [159, 854], "mni": [159, 179], "affin": 159, "blender": 160, "edit": [160, 171], "low": [160, 197, 200], "high": [160, 200, 254, 851, 860], "tip": 160, "what": [160, 167, 197, 203, 204, 205, 254, 816, 841, 854, 875], "you": 160, "still": [160, 854], "error": 160, "clean": [160, 254], "dens": 160, "smooth": [160, 857], "topolog": 160, "deal": 160, "topologi": [160, 857], "pymeshfix": 160, "should": [161, 841, 854], "i": [161, 167, 169, 203, 204, 205, 251, 832, 838, 840, 841, 854, 857], "regular": [161, 176, 193, 368, 854, 857], "tutori": [164, 172, 182, 183, 184, 863], "introductori": [164, 172], "overview": [165, 197, 834, 841, 850, 851, 858, 860], "detect": [165, 197, 199, 209], "experiment": 165, "place": [166, 169, 852], "pick": 166, "copi": 166, "pars": 167, "stim": [167, 660], "middl": 167, "embed": 167, "multipl": [167, 224, 228, 854], "per": [167, 850], "obtain": 168, "built": [169, 216], "eeglab": [169, 188, 838, 861], "sphere": [169, 857], "keyword": 169, "avail": 169, "mani": 169, "control": 169, "digit": [169, 857], "render": [169, 179, 832], "configur": [170, 834, 840, 844], "where": 170, "store": 170, "environ": [170, 834], "log": [170, 188, 844], "your": [170, 833, 834], "start": [171, 859], "report": [171, 200, 254, 272, 868], "inverseoper": [171, 521], "code": [171, 237, 834, 837, 851], "e": 171, "g": 171, "tag": [171, 239, 860], "entir": 171, "folder": [171, 254], "html": 171, "descript": [171, 857], "text": 171, "inspect": [174, 238, 857], "sourcespac": [174, 275], "src": 174, "equival": 175, "ecd": 175, "eloreta": [176, 857], "role": 177, "orient": [177, 178, 857], "loos": 177, "limit": 177, "them": 177, "discard": 177, "variou": 178, "free": [178, 224], "introduct": 179, "handl": [179, 198], "depth": [179, 857], "bia": [179, 205], "On": [179, 860], "slice": 179, "orthoview": 179, "glass": 179, "maximum": [179, 224], "voxel": [179, 181], "three": 179, "given": 181, "prerequisit": 181, "coord": 181, "elekta": [182, 187], "phantom": [182, 183, 184], "4d": [184, 254, 851], "neuroimag": [184, 187, 851], "devic": [187, 188, 189, 857], "megin": 187, "triux": 187, "fil": 187, "4": [187, 875], "d": 187, "dir": 187, "polhemu": 187, "softwar": [187, 200, 841, 849, 857, 860, 861], "gradient": [187, 857, 860], "ricoh": 187, "con": 187, "sqd": 187, "fieldtrip": [187, 229], "mat": 187, "arbitrari": [187, 234], "brainvis": 188, "vhdr": 188, "vmrk": 188, "european": 188, "edf": 188, "biosemi": 188, "bdf": 188, "gdf": 188, "neuroscan": 188, "cnt": 188, "egi": 188, "simpl": [188, 854], "binari": 188, "mff": 188, "fdt": 188, "nicolet": 188, "eximia": 188, "nxe": 188, "persyst": 188, "lai": 188, "dat": 188, "nihon": 188, "kohden": 188, "21e": 188, "pnt": 188, "xdfz": 188, "shape": 188, "fnir": [189, 209, 851], "standard": [189, 209, 224, 378, 834], "snirf": 189, "nirx": 189, "directori": [189, 851, 857, 860], "hdr": 189, "hitachi": 189, "csv": 189, "boxi": 189, "txt": 189, "legaci": [189, 237], "tsv": 189, "auditori": [190, 851], "strf": 193, "audio": 193, "recov": 193, "philosophi": [194, 852], "class": [194, 237, 832, 840, 847, 863], "scaler": [194, 416], "psdestim": [194, 412], "filterestim": [194, 409], "comodul": 194, "do": [197, 854], "drift": [197, 201, 203], "line": [197, 201, 254, 834, 860], "heartbeat": 197, "ecg": [197, 203, 205, 254], "ocular": 197, "block": 198, "execut": 198, "when": [198, 204, 834], "look": [198, 203, 854], "why": [198, 854, 857], "reject": [199, 850], "span": 199, "break": 199, "reject_by_annot": 199, "programmat": [199, 215], "background": [200, 201, 204, 206, 208, 220], "statement": 200, "fir": 200, "iir": 200, "pitfal": [200, 861], "pass": 200, "default": [200, 857], "c": [200, 840], "cutoff": 200, "order": 200, "transit": 200, "bandwidth": 200, "roll": 200, "off": [200, 832], "passband": 200, "rippl": 200, "stopband": 200, "attenu": 200, "delai": 200, "direct": 200, "resampl": [201, 224, 447, 854], "slow": [201, 203, 854], "best": [201, 204], "practic": [201, 204], "origin": [202, 220], "subtract": 202, "dimension": 203, "ignor": 203, "terminologi": 204, "environment": 205, "affect": [205, 215], "choos": 205, "number": [205, 213, 857], "via": [205, 210, 838, 857, 863], "infinit": 206, "rest": [206, 851], "bipolar": 206, "hpi": 207, "separ": [208, 239], "sss": 208, "spatiotempor": [208, 229], "tsss": 208, "caveat": 208, "infrar": 209, "spectroscopi": 209, "provid": [209, 224], "meaning": 209, "appropri": 209, "intens": 209, "qualiti": 209, "haemoglobin": 209, "heart": 209, "rate": [209, 224], "consist": [209, 219, 834], "tap": 209, "right": 209, "hand": 209, "nuisanc": 210, "attribut": 213, "sampl": [213, 226, 228, 233, 398, 851], "len": 213, "get_data": 213, "wai": 213, "exclud": 214, "id": [214, 838, 860], "descriptor": 214, "togeth": 214, "brows": [216, 254], "scratch": 219, "unit": [219, 857], "corrupt": 220, "known": 220, "period": 220, "sinusoid": 220, "distant": 220, "center": [220, 845], "vertic": 220, "infer": 224, "hypothesi": 224, "null": 224, "parametr": [224, 226, 227], "hat": 224, "varianc": 224, "adjust": 224, "non": [224, 226, 227], "bonferroni": 224, "fals": 224, "discoveri": 224, "size": 224, "adjac": [224, 226, 229, 232], "enhanc": [224, 875], "tfce": 224, "signific": [225, 232], "1": [226, 875], "mass": 228, "univari": 228, "twowai": 228, "repeat": [228, 234], "anova": [228, 234], "account": 228, "neighbor": 229, "spatio": [232, 233, 234], "one": [232, 234], "2": [233, 875], "contrast": 234, "epochsspectrum": [237, 697], "migrat": [237, 861], "quick": 237, "action": 237, "inter": 238, "itc": 238, "ssvep": [239, 403, 851], "vssr": 239, "ratio": 239, "spectra": 239, "12": [239, 875], "hz": 239, "indic": 239, "check": [239, 254, 857], "15": [239, 875], "debrief": 239, "bonu": 239, "durat": 239, "resolv": 239, "bibliographi": 242, "paper": 243, "cite": [243, 849, 854], "o": [251, 838, 857], "fund": [253, 856], "support": [253, 838, 857, 863], "institut": [253, 856, 862], "partner": [253, 856, 862], "former": [253, 862], "command": [254, 834, 854], "tool": [254, 834, 841], "anonym": 254, "browse_raw": 254, "bti2fiff": 254, "magneswh3600": 254, "note": [254, 860], "clean_eog_ecg": 254, "ie": 254, "compare_fiff": [254, 750], "fiff": [254, 860], "compute_proj_ecg": [254, 567], "compute_proj_eog": [254, 568], "coreg": [254, 363, 364, 365], "flash_bem": 254, "3": [254, 875], "layer": 254, "flash": [254, 857], "freeview_bem_surfac": 254, "freeview": 254, "kit2fiff": 254, "nyu": 254, "make_scalp_surfac": [254, 306], "maxfilt": 254, "prepare_bem_model": 254, "colloc": 254, "setup_forward_model": 254, "setup_source_spac": [254, 643], "bilater": 254, "subsampl": 254, "show_fiff": [254, 506], "content": [254, 851, 863], "show_info": 254, "surf2bem": 254, "sys_info": [254, 694], "watershed_bem": 254, "watersh": [254, 854, 857], "acqparserfif": 255, "baseepoch": 257, "bihemilabel": 258, "dipolefix": 261, "epochsarrai": 263, "evokedarrai": 265, "mixedsourceestim": 269, "mixedvectorsourceestim": 270, "vectorsourceestim": 276, "volvectorsourceestim": 278, "add_reference_channel": 279, "add_source_space_dist": 280, "annotations_from_ev": 281, "apply_forward": 282, "apply_forward_raw": 283, "average_forward_solut": 284, "rescal": 285, "apply_d": 287, "apply_dics_csd": 288, "apply_dics_epoch": 289, "apply_dics_tfr_epoch": 290, "apply_lcmv": 291, "apply_lcmv_cov": 292, "apply_lcmv_epoch": 293, "apply_lcmv_raw": 294, "make_d": 295, "make_lcmv": 296, "make_lcmv_resolution_matrix": 297, "rap_mus": 298, "read_beamform": 299, "conductormodel": 300, "convert_flash_mri": 301, "distance_to_bem": 302, "fit_sphere_to_headshap": 303, "get_fitting_dig": 304, "make_flash_bem": 305, "make_watershed_bem": 307, "channel_indices_by_typ": 308, "channel_typ": 309, "digmontag": 310, "combine_channel": 312, "compute_dev_head_t": 313, "compute_native_head_t": 314, "equalize_channel": [315, 432], "find_ch_adjac": 316, "find_layout": 317, "fix_mag_coil_typ": 318, "generate_2d_layout": 319, "get_builtin_ch_adjac": 320, "get_builtin_montag": 321, "make_1020_channel_select": 322, "make_dig_montag": 323, "make_eeg_layout": 324, "make_grid_layout": 325, "make_standard_montag": 326, "read_ch_adjac": 327, "read_custom_montag": 328, "read_dig_captrak": 329, "read_dig_dat": 330, "read_dig_egi": 331, "read_dig_fif": 332, "read_dig_hpt": 333, "read_dig_localit": 334, "read_dig_polhemus_isotrak": 335, "read_layout": 336, "read_polhemus_fastscan": 337, "rename_channel": [338, 631], "chpi": [339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350], "compute_chpi_amplitud": 339, "compute_chpi_loc": 340, "compute_chpi_snr": 341, "compute_head_po": 342, "extract_chpi_locs_ctf": 343, "extract_chpi_locs_kit": 344, "filter_chpi": 345, "get_active_chpi": 346, "get_chpi_info": 347, "head_pos_to_trans_rot_t": 348, "read_head_po": 349, "write_head_po": 350, "combine_evok": 351, "compute_covari": 352, "compute_proj_epoch": 353, "compute_proj_evok": 354, "compute_proj_raw": 355, "compute_rank": 356, "compute_raw_covari": 357, "compute_source_morph": 358, "concatenate_epoch": 359, "concatenate_ev": 360, "concatenate_raw": 361, "convert_forward_solut": 362, "estimate_head_mri_t": 364, "get_mni_fiduci": 365, "cov": [366, 367, 368, 860], "compute_whiten": 366, "prepare_noise_cov": 367, "create_default_subject": 369, "create_info": 370, "cuda": [371, 372, 373, 832], "get_cuda_memori": 371, "init_cuda": 372, "set_cuda_devic": 373, "bst_auditori": 374, "data_path": [374, 375, 376, 379, 380, 387, 389, 390, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405], "bst_raw": 375, "bst_rest": 376, "load_data": [377, 391], "epilepsy_ecog": 379, "erp_cor": 380, "fetch_aparc_sub_parcel": 381, "fetch_dataset": 382, "fetch_fsaverag": 383, "fetch_hcp_mmp_parcel": 384, "fetch_infant_templ": 385, "fetch_phantom": 386, "fnirs_motor": 387, "has_dataset": 388, "hf_sef": 389, "kiloword": [390, 851], "misc": 392, "mtrf": [393, 851], "multimod": [394, 851], "phantom_4dbti": 396, "refmeg_nois": 397, "sleep_physionet": [399, 400], "ag": 399, "fetch_data": [399, 400], "temazepam": 400, "somato": 401, "spm_face": 402, "ucl_opm_auditori": 404, "visual_92_categori": 405, "decimate_surfac": 406, "generalizingestim": 410, "linearmodel": 411, "receptivefield": 413, "slidingestim": 417, "temporalfilt": 418, "timedelayingridg": 419, "timefrequ": 420, "unsupervisedspatialfilt": 421, "compute_em": 423, "cross_val_multiscor": 424, "get_coef": 425, "dig_mri_dist": 426, "get_phantom_dipol": 427, "average_mov": 428, "combine_event_id": 429, "equalize_epoch_count": 430, "define_target_ev": 433, "match_event_nam": 434, "shift_time_ev": 435, "events_from_annot": 436, "export_epoch": 437, "export_evok": 438, "export_evokeds_mff": 439, "export_raw": 440, "extract_label_time_cours": 441, "construct_iir_filt": 442, "create_filt": 443, "estimate_ringing_sampl": 444, "filter_data": 445, "notch_filt": 446, "find_ev": 448, "find_stim_step": 449, "fit_dipol": 450, "compute_depth_prior": 451, "compute_orient_prior": 452, "restrict_forward_to_label": 453, "restrict_forward_to_stc": 454, "get_config": 455, "get_config_path": 456, "get_head_surf": 457, "get_meg_helmet_surf": 458, "get_montage_volume_label": 459, "get_volume_labels_from_aseg": 460, "get_volume_labels_from_src": 461, "grade_to_tri": 462, "grade_to_vertic": 463, "grand_averag": 464, "grow_label": 465, "locate_ieeg": 467, "head_to_mni": 468, "head_to_mri": 469, "inverse_spars": [470, 471, 472, 473], "gamma_map": 470, "make_stc_from_dipol": 471, "mixed_norm": 472, "tf_mixed_norm": 473, "io": [474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507], "baseraw": 474, "rawarrai": 476, "anonymize_info": 477, "read_mrk": 478, "read_fiduci": 479, "read_info": 480, "read_raw": 481, "read_raw_artemis123": 482, "read_raw_bdf": 483, "read_raw_boxi": 484, "read_raw_brainvis": 485, "read_raw_bti": 486, "read_raw_cnt": 487, "read_raw_ctf": 488, "read_raw_curri": 489, "read_raw_edf": 490, "read_raw_eeglab": 491, "read_raw_egi": 492, "read_raw_eximia": 493, "read_raw_fieldtrip": 494, "read_raw_fif": 495, "read_raw_fil": 496, "read_raw_gdf": 497, "read_raw_hitachi": 498, "read_raw_kit": 499, "read_raw_nedf": 500, "read_raw_nicolet": 501, "read_raw_nihon": 502, "read_raw_nirx": 503, "read_raw_persyst": 504, "read_raw_snirf": 505, "write_fiduci": 507, "select_sourc": 508, "label_sign_flip": 509, "labels_to_stc": 510, "make_ad_hoc_cov": 511, "make_bem_model": 512, "make_bem_solut": 513, "make_field_map": 514, "make_fixed_length_epoch": 515, "make_fixed_length_ev": 516, "make_forward_dipol": 517, "make_forward_solut": 518, "make_sphere_model": 519, "merge_ev": 520, "minimum_norm": [521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540], "apply_invers": 522, "apply_inverse_cov": 523, "apply_inverse_epoch": 524, "apply_inverse_raw": 525, "apply_inverse_tfr_epoch": 526, "compute_rank_invers": 527, "compute_source_psd": 528, "compute_source_psd_epoch": 529, "estimate_snr": 530, "get_cross_talk": 531, "get_point_spread": 532, "make_inverse_oper": 533, "make_inverse_resolution_matrix": 534, "prepare_inverse_oper": 535, "read_inverse_oper": 536, "resolution_metr": 537, "source_band_induced_pow": 538, "source_induced_pow": 539, "write_inverse_oper": 540, "morph_label": 541, "morph_source_spac": 542, "open_doc": 543, "open_report": 544, "parse_config": 545, "pick_channel": 546, "pick_channels_cov": 547, "pick_channels_forward": 548, "pick_channels_regexp": 549, "pick_ev": 550, "pick_info": 551, "pick_typ": 552, "pick_types_forward": 553, "eogregress": 554, "annotate_amplitud": 557, "annotate_break": 558, "annotate_mov": 559, "annotate_muscle_zscor": 560, "annotate_nan": 561, "compute_average_dev_head_t": 562, "compute_bridged_electrod": 563, "compute_current_source_dens": 564, "compute_fine_calibr": 565, "compute_maxwell_basi": 566, "corrmap": 569, "cortical_signal_suppress": 570, "create_ecg_epoch": 571, "create_eog_epoch": 572, "equalize_bad": 573, "find_bad_channels_maxwel": 574, "find_ecg_ev": 575, "find_eog_ev": 576, "fix_stim_artifact": 577, "ica_find_ecg_ev": 578, "ica_find_eog_ev": 579, "ieeg": 580, "project_sensors_onto_brain": 580, "infomax": 581, "interpolate_bridged_electrod": 582, "maxwell_filt": 583, "maxwell_filter_prepare_emptyroom": 584, "beer_lambert_law": 585, "optical_dens": 586, "scalp_coupling_index": 587, "short_channel": 588, "source_detector_dist": 589, "temporal_derivative_distribution_repair": 590, "oversampled_temporal_project": 591, "peak_find": 592, "read_eog_regress": 593, "read_fine_calibr": 594, "read_ica": 595, "read_ica_eeglab": 596, "realign_raw": 597, "regress_artifact": 598, "write_fine_calibr": 599, "random_parcel": 600, "read_annot": 601, "read_bem_solut": 602, "read_bem_surfac": 603, "read_cov": 604, "read_dipol": 605, "read_epoch": 606, "read_epochs_eeglab": 607, "read_epochs_fieldtrip": 608, "read_epochs_kit": 609, "read_ev": 610, "read_evoked_besa": 611, "read_evoked_fieldtrip": 612, "read_evok": 613, "read_evokeds_mff": 614, "read_forward_solut": 615, "read_freesurfer_lut": 616, "read_label": 617, "read_labels_from_annot": 618, "read_lta": 619, "read_morph_map": 620, "read_proj": 621, "read_reject_paramet": 622, "read_source_estim": 623, "read_source_morph": 624, "read_source_spac": 625, "read_surfac": 626, "read_talxfm": 627, "read_tran": 628, "read_tri": 629, "read_vectorview_select": 630, "scale_bem": 632, "scale_label": 633, "scale_mri": 634, "scale_source_spac": 635, "sensitivity_map": 636, "set_bipolar_refer": 637, "set_cache_dir": 638, "set_config": 639, "set_eeg_refer": 640, "set_log_fil": 641, "set_log_level": 642, "setup_volume_source_spac": 644, "sourcesimul": 645, "add_chpi": 646, "add_ecg": 647, "add_eog": 648, "add_nois": 649, "cosine_scor": 650, "f1_score": 651, "peak_position_error": 652, "precision_scor": 653, "recall_scor": 654, "region_localization_error": 655, "roc_auc_scor": 656, "spatial_deviation_error": 657, "select_source_in_label": 658, "simulate_evok": 659, "simulate_raw": 660, "simulate_sparse_stc": 661, "simulate_stc": 662, "source_spac": [663, 664], "compute_distance_to_sensor": 663, "get_decimated_surfac": 664, "spatial_dist_adjac": 665, "spatial_inter_hemi_adjac": 666, "spatial_src_adjac": 667, "spatial_tris_adjac": 668, "spatio_temporal_dist_adjac": 669, "spatio_temporal_src_adjac": 670, "spatio_temporal_tris_adjac": 671, "split_label": 672, "stat": [673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689], "bonferroni_correct": 673, "bootstrap_confidence_interv": 674, "combine_adjac": 675, "f_mway_rm": 676, "f_onewai": 677, "f_threshold_mway_rm": 678, "fdr_correct": 679, "linear_regress": 680, "linear_regression_raw": 681, "permutation_cluster_1samp_test": 682, "permutation_cluster_test": 683, "permutation_t_test": 684, "spatio_temporal_cluster_1samp_test": 685, "spatio_temporal_cluster_test": 686, "summarize_clusters_stc": 687, "ttest_1samp_no_p": 688, "ttest_ind_no_p": 689, "stc_near_sensor": 690, "stc_to_label": 691, "complete_surface_info": 692, "read_curvatur": 693, "time_frequ": [695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728], "averagetfr": 695, "crossspectraldens": 696, "epochstfr": 698, "csd_array_fouri": 700, "csd_array_morlet": 701, "csd_array_multitap": 702, "csd_fourier": 703, "csd_morlet": 704, "csd_multitap": 705, "csd_tfr": 706, "dpss_window": 707, "fit_iir_model_raw": 708, "fwhm": 709, "istft": 710, "pick_channels_csd": 712, "psd_array_multitap": 713, "psd_array_welch": 714, "read_csd": 715, "read_spectrum": 716, "read_tfr": 717, "stft": 718, "stftfreq": 719, "cwt": 720, "tfr_array_morlet": 722, "tfr_array_multitap": 723, "tfr_array_stockwel": 724, "tfr_morlet": 725, "tfr_multitap": 726, "tfr_stockwel": 727, "write_tfr": 728, "transform_surface_to": 729, "apply_volume_registr": 731, "compute_volume_registr": 732, "quat_to_rot": 733, "read_ras_mni_t": 734, "rot_to_quat": 735, "use_coil_def": 736, "use_log_level": 737, "util": [738, 739, 860], "deprec": [738, 834], "warn": [739, 834], "verbos": 740, "vertex_to_mni": 741, "clickableimag": 743, "figure3d": 744, "add_background_imag": 745, "centers_to_edg": 746, "circular_layout": 747, "close_3d_figur": 748, "close_all_3d_figur": 749, "create_3d_figur": 751, "get_3d_backend": 752, "get_brain_class": 753, "get_browser_backend": 754, "iter_topographi": 755, "link_brain": 756, "mne_analyze_colormap": 757, "plot_align": 758, "plot_arrowmap": 759, "plot_bem": 760, "plot_brain_colorbar": 761, "plot_bridged_electrod": 762, "plot_ch_adjac": 763, "plot_channel_labels_circl": 764, "plot_chpi_snr": 765, "plot_compare_evok": 766, "plot_cov": 767, "plot_csd": 768, "plot_dipole_amplitud": 769, "plot_dipole_loc": 770, "plot_drop_log": 771, "plot_epoch": 772, "plot_epochs_imag": 773, "plot_epochs_psd_topomap": 774, "plot_ev": 775, "plot_evok": 776, "plot_evoked_field": 777, "plot_evoked_imag": 778, "plot_evoked_joint": 779, "plot_evoked_topo": 780, "plot_evoked_topomap": 781, "plot_evoked_whit": 782, "plot_filt": 783, "plot_head_posit": 784, "plot_ica_compon": 785, "plot_ica_overlai": 786, "plot_ica_properti": 787, "plot_ica_scor": 788, "plot_ica_sourc": 789, "plot_ideal_filt": 790, "plot_layout": 791, "plot_montag": 792, "plot_projs_joint": 793, "plot_projs_topomap": 794, "plot_raw": 795, "plot_raw_psd": 796, "plot_regression_weight": 797, "plot_sensor": 798, "plot_snr_estim": 799, "plot_source_estim": 800, "plot_sparse_source_estim": 801, "plot_tfr_topomap": 802, "plot_topo_image_epoch": 803, "plot_vector_source_estim": 805, "plot_volume_source_estim": 806, "set_3d_backend": 807, "set_3d_opt": 808, "set_3d_titl": 809, "set_3d_view": 810, "set_browser_backend": 811, "snapshot_brain_montag": 812, "use_3d_backend": 813, "use_browser_backend": 814, "warp_montage_volum": 815, "write_bem_solut": 817, "write_bem_surfac": 818, "write_cov": 819, "write_ev": 820, "write_evok": 821, "write_forward_solut": 822, "write_head_bem": 823, "write_label": 824, "write_labels_to_annot": 825, "write_proj": 826, "write_source_spac": 827, "write_surfac": 828, "write_tran": 829, "glossari": 830, "homepag": 831, "jupyt": 832, "notebook": 832, "jupyterlab": 832, "fa": [832, 840], "brand": [832, 840], "window": [832, 854], "instal": [832, 833, 835, 836, 837, 838, 839, 840, 841], "headless": 832, "linux": 832, "server": 832, "develop": [832, 834, 842, 853], "version": [832, 842, 875], "gpu": 832, "acceler": 832, "screen": 832, "mesa": 832, "troubleshoot": [832, 840], "troubl": 832, "upgrad": [832, 842], "maco": [832, 840, 854], "contribut": 834, "guid": 834, "git": 834, "gnu": 834, "fork": 834, "repositori": 834, "virtual": 834, "github": 834, "ssh": 834, "convent": 834, "requir": [834, 840], "must": 834, "have": [834, 850, 854], "coverag": 834, "document": [834, 856, 858, 860, 862, 863], "avoid": 834, "api": [834, 852, 863, 865, 875], "possibl": 834, "decor": 834, "changelog": [834, 875], "contributor": 834, "recur": 834, "pull": 834, "request": 834, "pr": 834, "fast": 834, "thorough": 834, "style": 834, "adher": 834, "guidelin": [834, 862], "we": 834, "mostli": [834, 852], "follow": 834, "numpi": [834, 857], "docstr": 834, "everywher": 834, "guidanc": 834, "organ": [834, 852, 857], "return": 834, "run": [834, 854], "suit": [834, 841], "build": 834, "pip": 838, "conda": 838, "depend": [838, 875], "minim": 838, "scenario": 838, "appl": 840, "download": [840, 854], "help": [841, 854, 855], "updat": [842, 863], "martino": 845, "cpp": 846, "most": 847, "typic": 850, "m": [850, 854], "recommend": 850, "subdivis": 850, "icosahedron": 850, "octahedron": 850, "creation": 850, "approxim": 850, "area": 850, "been": 850, "assum": 850, "1000": 850, "cm2": 850, "mesh": [850, 854, 857], "triangul": 850, "boundari": [850, 857], "element": [850, 857], "trigger": 851, "ucl": 851, "state": 851, "somatosensori": 851, "92": 851, "categori": 851, "polysomnograph": 851, "databas": [851, 863], "miscellan": 851, "integr": [852, 863], "scientif": 852, "stack": 852, "submodul": 852, "unifi": 852, "In": [852, 863], "frequent": 854, "ask": 854, "question": 854, "faq": 854, "issu": 854, "can": 854, "pyvista": 854, "extrem": 854, "even": 854, "sure": 854, "x": 854, "my": 854, "y": 854, "think": 854, "bug": [854, 875], "danger": 854, "pickl": 854, "later": 854, "onc": 854, "again": 854, "cpu": 854, "though": 854, "didn": 854, "tell": 854, "mysteri": 854, "take": 854, "forev": 854, "incorrect": 854, "govern": 856, "bdfl": 856, "steer": [856, 862], "council": [856, 862], "membership": 856, "conflict": 856, "privat": 856, "commun": [856, 862], "decis": 856, "histori": [856, 862], "acknowledg": 856, "licens": 856, "implement": 857, "detail": [857, 860], "intern": 857, "float": 857, "precis": 857, "effici": [857, 863], "preload": 857, "explicitli": 857, "access": [857, 863], "concept": 857, "subspac": 857, "tessel": 857, "discret": 857, "geometri": [857, 860], "coil": [857, 860], "magnet": 857, "normal": 857, "accur": 857, "accuraci": 857, "purpos": 857, "patch": 857, "constraint": 857, "weight": 857, "matlab": 860, "routin": 860, "w": 860, "demonstr": 860, "toolbox": 860, "constant": 860, "taginfo": 860, "dig": 860, "coildef": 860, "see": 860, "ch": 860, "proj": 860, "comp": 860, "mea": 860, "surf": 860, "inv": 860, "reginv": 860, "noisenorm": 860, "fill": 860, "mne_prepare_inverse_oper": 860, "benevol": 862, "dictat": 862, "life": 862, "particip": 862, "lead": 862, "roadmap": 863, "page": 863, "openmeeg": 863, "improv": 863, "bind": 863, "progress": 863, "divers": 863, "equiti": 863, "inclus": 863, "dei": 863, "deep": 863, "better": 863, "db": 863, "pediatr": 863, "complet": 863, "overhaul": 863, "realtim": 867, "dev0": 875, "0": 875, "2022": 875, "21": 875, "author": 875, "10": 875, "11": 875, "08": 875, "03": 875, "behavior": 875, "24": 875, "2021": 875, "23": 875, "04": 875, "27": 875, "22": 875, "2020": 875, "17": 875, "09": 875, "20": 875, "19": 875, "2019": 875, "18": 875, "05": 875, "2018": 875, "16": 875, "01": 875, "2017": 875, "14": 875, "13": 875, "2016": 875, "2015": 875, "26": 875, "9": 875, "8": 875, "2014": 875, "06": 875, "25": 875, "7": 875, "2013": 875, "6": 875, "5": 875, "2012": 875, "2011": 875}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinxcontrib.bibtex": 9, "sphinx": 57}, "alltitles": {"Connectivity Analysis Examples": [[0, "connectivity-analysis-examples"], [27, "connectivity-analysis-examples"]], "Brainstorm raw (median nerve) dataset": [[1, "brainstorm-raw-median-nerve-dataset"]], "References": [[1, "references"], [4, "references"], [8, "references"], [10, "references"], [12, "references"], [13, "references"], [15, "references"], [16, "references"], [18, "references"], [19, "references"], [21, "references"], [33, "references"], [35, "references"], [40, "references"], [42, "references"], [43, "references"], [44, "references"], [46, "references"], [51, "references"], [54, "references"], [55, "references"], [58, "references"], [59, "references"], [65, "references"], [69, "references"], [70, "references"], [73, "references"], [74, "references"], [77, "references"], [81, "references"], [82, "references"], [86, "references"], [92, "references"], [99, "references"], [107, "references"], [110, "references"], [111, "references"], [115, "references"], [117, "references"], [119, "references"], [124, "references"], [127, "references"], [133, "references"], [136, "references"], [140, "references"], [143, "references"], [150, "references"], [154, "references"], [156, "references"], [161, "references"], [175, "references"], [177, "references"], [179, "references"], [182, "references"], [183, "references"], [190, "references"], [193, "references"], [194, "references"], [198, "references"], [200, "references"], [202, "references"], [203, "references"], [204, "references"], [205, "references"], [206, "references"], [208, "references"], [210, "references"], [221, "references"], [224, "references"], [225, "references"], [229, "references"], [237, "references"], [850, "references"], [851, "references"], [854, "references"], [857, "references"]], "HF-SEF dataset": [[2, "hf-sef-dataset"]], "Examples on open datasets": [[3, "examples-on-open-datasets"], [27, "examples-on-open-datasets"]], "Single trial linear regression analysis with the LIMO dataset": [[4, "single-trial-linear-regression-analysis-with-the-limo-dataset"]], "About the data": [[4, "about-the-data"]], "Load the data": [[4, "load-the-data"], [136, "load-the-data"], [140, "load-the-data"], [158, "load-the-data"]], "Visualize events": [[4, "visualize-events"]], "Visualize condition ERPs": [[4, "visualize-condition-erps"]], "Visualize effect of stimulus phase-coherence": [[4, "visualize-effect-of-stimulus-phase-coherence"]], "Prepare data for linear regression analysis": [[4, "prepare-data-for-linear-regression-analysis"]], "Define predictor variables and design matrix": [[4, "define-predictor-variables-and-design-matrix"]], "Extract regression coefficients": [[4, "extract-regression-coefficients"]], "Plot model results": [[4, "plot-model-results"]], "Optically pumped magnetometer (OPM) data": [[5, "optically-pumped-magnetometer-opm-data"]], "Prepare data for localization": [[5, "prepare-data-for-localization"]], "Perform dipole fitting": [[5, "perform-dipole-fitting"]], "Perform minimum-norm localization": [[5, "perform-minimum-norm-localization"]], "Computation times": [[6, "computation-times"], [20, "computation-times"], [25, "computation-times"], [56, "computation-times"], [66, "computation-times"], [83, "computation-times"], [89, "computation-times"], [100, "computation-times"], [104, "computation-times"], [128, "computation-times"], [138, "computation-times"], [147, "computation-times"], [153, "computation-times"], [163, "computation-times"], [173, "computation-times"], [186, "computation-times"], [192, "computation-times"], [196, "computation-times"], [212, "computation-times"], [218, "computation-times"], [223, "computation-times"], [231, "computation-times"], [236, "computation-times"], [241, "computation-times"]], "From raw data to dSPM on SPM Faces dataset": [[7, "from-raw-data-to-dspm-on-spm-faces-dataset"]], "Motor imagery decoding from EEG data using the Common Spatial Pattern (CSP)": [[8, "motor-imagery-decoding-from-eeg-data-using-the-common-spatial-pattern-csp"]], "Decoding in time-frequency space using Common Spatial Patterns (CSP)": [[9, "decoding-in-time-frequency-space-using-common-spatial-patterns-csp"]], "Representational Similarity Analysis": [[10, "representational-similarity-analysis"]], "Decoding source space data": [[11, "decoding-source-space-data"]], "Continuous Target Decoding with SPoC": [[12, "continuous-target-decoding-with-spoc"]], "Decoding sensor space data with generalization across time and conditions": [[13, "decoding-sensor-space-data-with-generalization-across-time-and-conditions"]], "Analysis of evoked response using ICA and PCA reduction techniques": [[14, "analysis-of-evoked-response-using-ica-and-pca-reduction-techniques"]], "XDAWN Decoding From EEG data": [[15, "xdawn-decoding-from-eeg-data"]], "Compute effect-matched-spatial filtering (EMS)": [[16, "compute-effect-matched-spatial-filtering-ems"]], "Machine Learning (Decoding, Encoding, and MVPA)": [[17, "machine-learning-decoding-encoding-and-mvpa"], [27, "machine-learning-decoding-encoding-and-mvpa"]], "Linear classifier on sensor data with plot patterns and filters": [[18, "linear-classifier-on-sensor-data-with-plot-patterns-and-filters"]], "Decoding in sensor space using a LogisticRegression classifier": [[18, "decoding-in-sensor-space-using-a-logisticregression-classifier"]], "Receptive Field Estimation and Prediction": [[19, "receptive-field-estimation-and-prediction"]], "Load the data from the publication": [[19, "load-the-data-from-the-publication"]], "Create and fit a receptive field model": [[19, "create-and-fit-a-receptive-field-model"]], "Investigate model coefficients": [[19, "investigate-model-coefficients"], [19, "id5"]], "Create and fit a stimulus reconstruction model": [[19, "create-and-fit-a-stimulus-reconstruction-model"]], "Visualize stimulus reconstruction": [[19, "visualize-stimulus-reconstruction"]], "Compute Spectro-Spatial Decomposition (SSD) spatial filters": [[21, "compute-spectro-spatial-decomposition-ssd-spatial-filters"]], "Epoched data": [[21, "epoched-data"]], "Display sensitivity maps for EEG and MEG sensors": [[22, "display-sensitivity-maps-for-eeg-and-meg-sensors"]], "Forward modeling": [[23, "forward-modeling"], [27, "forward-modeling"]], "Generate a left cerebellum volume source space": [[24, "generate-a-left-cerebellum-volume-source-space"]], "Use source space morphing": [[26, "use-source-space-morphing"]], "Examples Gallery": [[27, "examples-gallery"]], "Input/Output": [[27, "input-output"], [62, "input-output"]], "Data Simulation": [[27, "data-simulation"], [87, "data-simulation"]], "Preprocessing": [[27, "preprocessing"], [76, "preprocessing"], [107, "preprocessing"], [140, "preprocessing"], [164, "preprocessing"], [165, "preprocessing"], [211, "preprocessing"], [850, "preprocessing"], [864, "preprocessing"]], "Visualization": [[27, "visualization"], [55, "visualization"], [120, "visualization"], [176, "visualization"], [834, "visualization"], [874, "visualization"]], "Time-Frequency Examples": [[27, "time-frequency-examples"], [103, "time-frequency-examples"]], "Statistics Examples": [[27, "statistics-examples"], [96, "statistics-examples"]], "Inverse problem and source analysis": [[27, "inverse-problem-and-source-analysis"], [36, "inverse-problem-and-source-analysis"]], "Compute MNE-dSPM inverse solution on single epochs": [[28, "compute-mne-dspm-inverse-solution-on-single-epochs"]], "Compute sLORETA inverse solution on raw data": [[29, "compute-sloreta-inverse-solution-on-raw-data"]], "Compute MNE-dSPM inverse solution on evoked data in volume source space": [[30, "compute-mne-dspm-inverse-solution-on-evoked-data-in-volume-source-space"]], "Source localization with a custom inverse solver": [[31, "source-localization-with-a-custom-inverse-solver"]], "Compute source level time-frequency timecourses using a DICS beamformer": [[32, "compute-source-level-time-frequency-timecourses-using-a-dics-beamformer"]], "Compute source power using DICS beamformer": [[33, "compute-source-power-using-dics-beamformer"]], "Compute evoked ERS source power using DICS, LCMV beamformer, and dSPM": [[34, "compute-evoked-ers-source-power-using-dics-lcmv-beamformer-and-dspm"]], "Compute covariances": [[34, "compute-covariances"]], "Compute some source estimates": [[34, "compute-some-source-estimates"]], "Plot source estimates": [[34, "plot-source-estimates"]], "Compute a sparse inverse solution using the Gamma-MAP empirical Bayesian method": [[35, "compute-a-sparse-inverse-solution-using-the-gamma-map-empirical-bayesian-method"]], "Extracting time course from source_estimate object": [[37, "extracting-time-course-from-source-estimate-object"]], "Generate a functional label from source estimates": [[38, "generate-a-functional-label-from-source-estimates"]], "Extracting the time series of activations in a label": [[39, "extracting-the-time-series-of-activations-in-a-label"]], "Compute inverse solution": [[39, "compute-inverse-solution"], [41, "compute-inverse-solution"], [176, "compute-inverse-solution"]], "View source activations": [[39, "view-source-activations"]], "Using vector solutions": [[39, "using-vector-solutions"]], "Compute sparse inverse solution with mixed norm: MxNE and irMxNE": [[40, "compute-sparse-inverse-solution-with-mixed-norm-mxne-and-irmxne"]], "Compute MNE inverse solution on evoked data with a mixed source space": [[41, "compute-mne-inverse-solution-on-evoked-data-with-a-mixed-source-space"]], "Set up our source space": [[41, "set-up-our-source-space"]], "View the source space": [[41, "view-the-source-space"]], "Compute the fwd matrix": [[41, "compute-the-fwd-matrix"]], "Plot the mixed source estimate": [[41, "plot-the-mixed-source-estimate"]], "Plot the surface": [[41, "plot-the-surface"]], "Plot the volume": [[41, "plot-the-volume"]], "Process labels": [[41, "process-labels"]], "Compute source power estimate by projecting the covariance with MNE": [[42, "compute-source-power-estimate-by-projecting-the-covariance-with-mne"]], "Compute empty-room covariance": [[42, "compute-empty-room-covariance"]], "Epoch the data": [[42, "epoch-the-data"]], "Compute and plot covariances": [[42, "compute-and-plot-covariances"]], "Apply inverse operator to covariance": [[42, "apply-inverse-operator-to-covariance"]], "Morph surface source estimate": [[43, "morph-surface-source-estimate"]], "Setting up SourceMorph for SourceEstimate": [[43, "setting-up-sourcemorph-for-sourceestimate"]], "Apply morph to (Vector) SourceEstimate": [[43, "apply-morph-to-vector-sourceestimate"]], "Plot results": [[43, "plot-results"], [44, "plot-results"]], "Reading and writing SourceMorph from and to disk": [[43, "reading-and-writing-sourcemorph-from-and-to-disk"], [44, "reading-and-writing-sourcemorph-from-and-to-disk"]], "Morph volumetric source estimate": [[44, "morph-volumetric-source-estimate"]], "Get a SourceMorph object for VolSourceEstimate": [[44, "get-a-sourcemorph-object-for-volsourceestimate"]], "Apply morph to VolSourceEstimate": [[44, "apply-morph-to-volsourceestimate"]], "Convert morphed VolSourceEstimate into NIfTI": [[44, "convert-morphed-volsourceestimate-into-nifti"]], "Computing source timecourses with an XFit-like multi-dipole model": [[45, "computing-source-timecourses-with-an-xfit-like-multi-dipole-model"]], "Compute iterative reweighted TF-MxNE with multiscale time-frequency dictionary": [[46, "compute-iterative-reweighted-tf-mxne-with-multiscale-time-frequency-dictionary"]], "Visualize source leakage among labels using a circular graph": [[47, "visualize-source-leakage-among-labels-using-a-circular-graph"]], "Load forward solution and inverse operator": [[47, "load-forward-solution-and-inverse-operator"]], "Read and organise labels for cortical parcellation": [[47, "read-and-organise-labels-for-cortical-parcellation"]], "Compute point-spread function summaries (PCA) for all labels": [[47, "compute-point-spread-function-summaries-pca-for-all-labels"]], "Evaluate leakage based on label-to-label PSF correlations": [[47, "evaluate-leakage-based-on-label-to-label-psf-correlations"]], "Save the figure (optional)": [[47, "save-the-figure-optional"]], "Plot PSFs for individual labels": [[47, "plot-psfs-for-individual-labels"]], "Plot point-spread functions (PSFs) and cross-talk functions (CTFs)": [[48, "plot-point-spread-functions-psfs-and-cross-talk-functions-ctfs"]], "Visualize": [[48, "visualize"], [49, "visualize"], [50, "visualize"]], "Compute cross-talk functions for LCMV beamformers": [[49, "compute-cross-talk-functions-for-lcmv-beamformers"]], "Compute LCMV filters with different data covariance matrices": [[49, "compute-lcmv-filters-with-different-data-covariance-matrices"]], "Compute resolution matrices for the two LCMV beamformers": [[49, "compute-resolution-matrices-for-the-two-lcmv-beamformers"]], "Plot point-spread functions (PSFs) for a volume": [[50, "plot-point-spread-functions-psfs-for-a-volume"]], "Compute Rap-Music on evoked data": [[51, "compute-rap-music-on-evoked-data"]], "Reading an inverse operator": [[52, "reading-an-inverse-operator"]], "Reading an STC file": [[53, "reading-an-stc-file"]], "Compute spatial resolution metrics in source space": [[54, "compute-spatial-resolution-metrics-in-source-space"]], "MNE": [[54, "mne"]], "dSPM": [[54, "dspm"], [857, "dspm"]], "Visualize results": [[54, "visualize-results"]], "Compute spatial resolution metrics to compare MEG with EEG+MEG": [[55, "compute-spatial-resolution-metrics-to-compare-meg-with-eeg-meg"]], "EEGMEG": [[55, "eegmeg"]], "MEG": [[55, "meg"]], "Estimate data SNR using an inverse": [[57, "estimate-data-snr-using-an-inverse"]], "Computing source space SNR": [[58, "computing-source-space-snr"]], "EEG": [[58, "eeg"]], "Compute MxNE with time-frequency sparse prior": [[59, "compute-mxne-with-time-frequency-sparse-prior"]], "Plotting the full vector-valued MNE solution": [[60, "plotting-the-full-vector-valued-mne-solution"]], "Getting averaging info from .fif files": [[61, "getting-averaging-info-from-fif-files"]], "How to use data in neural ensemble (NEO) format": [[63, "how-to-use-data-in-neural-ensemble-neo-format"]], "Reading/Writing a noise covariance matrix": [[64, "reading-writing-a-noise-covariance-matrix"]], "Reading XDF EEG data": [[65, "reading-xdf-eeg-data"]], "Cortical Signal Suppression (CSS) for removal of cortical signals": [[67, "cortical-signal-suppression-css-for-removal-of-cortical-signals"]], "Define target events based on time lag, plot evoked response": [[68, "define-target-events-based-on-time-lag-plot-evoked-response"]], "Identify EEG Electrodes Bridged by too much Gel": [[69, "ex-eeg-bridging"]], "Compute Electrical Distance Metric": [[69, "compute-electrical-distance-metric"]], "Examine an Electrical Distance Matrix": [[69, "examine-an-electrical-distance-matrix"]], "Examine the Distribution of Electrical Distances": [[69, "examine-the-distribution-of-electrical-distances"]], "Plot Electrical Distances on a Topomap": [[69, "plot-electrical-distances-on-a-topomap"]], "Plot the Raw Voltage Time Series for Bridged Electrodes": [[69, "plot-the-raw-voltage-time-series-for-bridged-electrodes"]], "Compare Bridging Across Subjects in the EEGBCI Dataset": [[69, "compare-bridging-across-subjects-in-the-eegbci-dataset"]], "The Relationship Between Bridging and Impedances": [[69, "the-relationship-between-bridging-and-impedances"]], "Summary": [[69, "summary"], [166, "summary"], [174, "summary"], [197, "summary"], [198, "summary"], [200, "summary"]], "Transform EEG data using current source density (CSD)": [[70, "transform-eeg-data-using-current-source-density-csd"]], "Show EOG artifact timing": [[71, "show-eog-artifact-timing"]], "Reduce EOG artifacts through regression": [[72, "reduce-eog-artifacts-through-regression"]], "Import packages and load data": [[72, "import-packages-and-load-data"]], "Perform regression and remove EOG": [[72, "perform-regression-and-remove-eog"]], "Before/after comparison": [[72, "before-after-comparison"]], "Find MEG reference channel artifacts": [[73, "find-meg-reference-channel-artifacts"]], "Visualise NIRS artifact correction methods": [[74, "visualise-nirs-artifact-correction-methods"]], "Import data": [[74, "import-data"]], "Add artificial artifacts to data": [[74, "add-artificial-artifacts-to-data"]], "Apply temporal derivative distribution repair": [[74, "apply-temporal-derivative-distribution-repair"]], "Compare the different ICA algorithms in MNE": [[75, "compare-the-different-ica-algorithms-in-mne"]], "Interpolate bad channels for MEG/EEG channels": [[77, "interpolate-bad-channels-for-meg-eeg-channels"]], "Maxwell filter data with movement compensation": [[78, "maxwell-filter-data-with-movement-compensation"]], "Annotate movement artifacts and reestimate dev_head_t": [[79, "annotate-movement-artifacts-and-reestimate-dev-head-t"]], "Plot continuous head position with respect to the mean recording position": [[79, "plot-continuous-head-position-with-respect-to-the-mean-recording-position"]], "Plot raw data with annotated movement": [[79, "plot-raw-data-with-annotated-movement"]], "Annotate muscle artifacts": [[80, "annotate-muscle-artifacts"]], "Plot muscle z-scores across recording": [[80, "plot-muscle-z-scores-across-recording"]], "View the annotations": [[80, "view-the-annotations"]], "Removing muscle ICA components": [[81, "removing-muscle-ica-components"]], "Let\u2019s now replicate this on the EEGBCI dataset": [[81, "let-s-now-replicate-this-on-the-eegbci-dataset"]], "Plot sensor denoising using oversampled temporal projection": [[82, "plot-sensor-denoising-using-oversampled-temporal-projection"]], "Shifting time-scale in evoked data": [[84, "shifting-time-scale-in-evoked-data"]], "Remap MEG channel types": [[85, "remap-meg-channel-types"]], "XDAWN Denoising": [[86, "xdawn-denoising"]], "Compare simulated and estimated source activity": [[88, "compare-simulated-and-estimated-source-activity"]], "Define main parameters of sources": [[88, "define-main-parameters-of-sources"]], "Create simulated source activity": [[88, "create-simulated-source-activity"], [92, "create-simulated-source-activity"]], "Simulate raw data": [[88, "simulate-raw-data"], [92, "simulate-raw-data"]], "Compute evoked from raw data": [[88, "compute-evoked-from-raw-data"]], "Create true stcs corresponding to evoked": [[88, "create-true-stcs-corresponding-to-evoked"]], "Reconstruct simulated sources": [[88, "reconstruct-simulated-sources"]], "Compute performance scores for different source amplitude thresholds": [[88, "compute-performance-scores-for-different-source-amplitude-thresholds"]], "For region": [[88, "for-region"]], "For Dipoles": [[88, "for-dipoles"]], "Generate simulated evoked data": [[90, "generate-simulated-evoked-data"]], "Generate simulated raw data": [[91, "generate-simulated-raw-data"]], "Simulate raw data using subject anatomy": [[92, "simulate-raw-data-using-subject-anatomy"]], "Extract epochs and compute evoked responsses": [[92, "extract-epochs-and-compute-evoked-responsses"]], "Reconstruct simulated source time courses using dSPM inverse operator": [[92, "reconstruct-simulated-source-time-courses-using-dspm-inverse-operator"]], "Generate simulated source data": [[93, "generate-simulated-source-data"]], "Permutation F-test on sensor data with 1D cluster level": [[94, "permutation-f-test-on-sensor-data-with-1d-cluster-level"]], "FDR correction on T-test on sensor data": [[95, "fdr-correction-on-t-test-on-sensor-data"]], "Regression on continuous data (rER[P/F])": [[97, "regression-on-continuous-data-rer-p-f"]], "Permutation T-test on sensor data": [[98, "permutation-t-test-on-sensor-data"]], "Analysing continuous features with binning and regression in sensor space": [[99, "analysing-continuous-features-with-binning-and-regression-in-sensor-space"]], "Compute a cross-spectral density (CSD) matrix": [[101, "compute-a-cross-spectral-density-csd-matrix"]], "Compute Power Spectral Density of inverse solution from single epochs": [[102, "compute-power-spectral-density-of-inverse-solution-from-single-epochs"]], "Compute source space PSD in label": [[102, "compute-source-space-psd-in-label"]], "Compute power and phase lock in label of the source space": [[105, "compute-power-and-phase-lock-in-label-of-the-source-space"]], "Compute source power spectral density (PSD) in a label": [[106, "compute-source-power-spectral-density-psd-in-a-label"]], "Compute source power spectral density (PSD) of VectorView and OPM data": [[107, "compute-source-power-spectral-density-psd-of-vectorview-and-opm-data"]], "Alignment and forward": [[107, "alignment-and-forward"]], "Alpha": [[107, "alpha"]], "Beta": [[107, "beta"]], "Compute induced power in the source space with dSPM": [[108, "compute-induced-power-in-the-source-space-with-dspm"]], "Temporal whitening with AR model": [[109, "temporal-whitening-with-ar-model"]], "Compute and visualize ERDS maps": [[110, "compute-and-visualize-erds-maps"]], "Explore event-related dynamics for specific frequency bands": [[111, "explore-event-related-dynamics-for-specific-frequency-bands"]], "Time-frequency on simulated data (Multitaper vs. Morlet vs. Stockwell vs. Hilbert)": [[112, "time-frequency-on-simulated-data-multitaper-vs-morlet-vs-stockwell-vs-hilbert"]], "Simulate data": [[112, "simulate-data"]], "Calculate a time-frequency representation (TFR)": [[112, "calculate-a-time-frequency-representation-tfr"]], "Multitaper transform": [[112, "multitaper-transform"]], "Stockwell (S) transform": [[112, "stockwell-s-transform"]], "Morlet Wavelets": [[112, "morlet-wavelets"]], "Narrow-bandpass Filter and Hilbert Transform": [[112, "narrow-bandpass-filter-and-hilbert-transform"]], "Calculating a TFR without averaging over epochs": [[112, "calculating-a-tfr-without-averaging-over-epochs"]], "Operating on arrays": [[112, "operating-on-arrays"]], "How to convert 3D electrode positions to a 2D image": [[113, "how-to-convert-3d-electrode-positions-to-a-2d-image"]], "Load data": [[113, "load-data"], [114, "load-data"], [177, "load-data"]], "Project 3D electrodes to a 2D snapshot": [[113, "project-3d-electrodes-to-a-2d-snapshot"]], "Manually creating 2D electrode positions": [[113, "manually-creating-2d-electrode-positions"]], "Plotting with mne.viz.Brain": [[114, "plotting-with-mne-viz-brain"]], "Add source information": [[114, "add-source-information"]], "Modify the view of the brain": [[114, "modify-the-view-of-the-brain"]], "Highlight a region on the brain": [[114, "highlight-a-region-on-the-brain"]], "Include the head in the image": [[114, "include-the-head-in-the-image"]], "Add sensors positions": [[114, "add-sensors-positions"]], "Add current dipoles": [[114, "add-current-dipoles"]], "Create a screenshot for exporting the brain image": [[114, "create-a-screenshot-for-exporting-the-brain-image"]], "Visualize channel over epochs as an image": [[115, "visualize-channel-over-epochs-as-an-image"]], "Plotting EEG sensors on the scalp": [[116, "plotting-eeg-sensors-on-the-scalp"]], "Plotting topographic arrowmaps of evoked data": [[117, "plotting-topographic-arrowmaps-of-evoked-data"]], "Plotting topographic maps of evoked data": [[118, "plotting-topographic-maps-of-evoked-data"]], "Basic plot_topomap() options": [[118, "basic-plot-topomap-options"]], "Additional plot_topomap() options": [[118, "additional-plot-topomap-options"]], "More advanced usage": [[118, "more-advanced-usage"]], "Interpolating topomaps": [[118, "interpolating-topomaps"]], "Animating the topomap": [[118, "animating-the-topomap"]], "Whitening evoked data with a noise covariance": [[119, "whitening-evoked-data-with-a-noise-covariance"]], "Plotting sensor layouts of MEG systems": [[121, "plotting-sensor-layouts-of-meg-systems"]], "Neuromag": [[121, "neuromag"]], "CTF": [[121, "ctf"]], "BTi": [[121, "bti"]], "KIT": [[121, "kit"]], "Artemis123": [[121, "artemis123"]], "Plot the MNE brain and helmet": [[122, "plot-the-mne-brain-and-helmet"]], "Plotting sensor layouts of EEG systems": [[123, "plotting-sensor-layouts-of-eeg-systems"]], "Plot a cortical parcellation": [[124, "plot-a-cortical-parcellation"]], "Make figures more publication ready": [[125, "make-figures-more-publication-ready"]], "Imports": [[125, "imports"]], "Evoked plot with brain activation": [[125, "evoked-plot-with-brain-activation"]], "Custom timecourse with montage inset": [[125, "custom-timecourse-with-montage-inset"]], "Plot single trial activity, grouped by ROI and sorted by RT": [[126, "plot-single-trial-activity-grouped-by-roi-and-sorted-by-rt"]], "Show noise levels from empty room data": [[127, "show-noise-levels-from-empty-room-data"]], "Sensitivity map of SSP projections": [[129, "sensitivity-map-of-ssp-projections"]], "Compare evoked responses for different conditions": [[130, "compare-evoked-responses-for-different-conditions"]], "Plot custom topographies for MEG sensors": [[131, "plot-custom-topographies-for-meg-sensors"]], "Cross-hemisphere comparison": [[132, "cross-hemisphere-comparison"]], "Locating intracranial electrode contacts": [[133, "locating-intracranial-electrode-contacts"]], "Aligning the T1 to ACPC": [[133, "aligning-the-t1-to-acpc"]], "Freesurfer recon-all": [[133, "freesurfer-recon-all"]], "Aligning the CT to the MR": [[133, "aligning-the-ct-to-the-mr"]], "Marking the Location of Each Electrode Contact": [[133, "marking-the-location-of-each-electrode-contact"]], "Warping to a Common Atlas": [[133, "warping-to-a-common-atlas"]], "Working with sEEG data": [[134, "working-with-seeg-data"]], "Working with ECoG data": [[135, "working-with-ecog-data"]], "Load in data and perform basic preprocessing": [[135, "load-in-data-and-perform-basic-preprocessing"]], "Explore the electrodes on a template brain": [[135, "explore-the-electrodes-on-a-template-brain"]], "Compute frequency features of the data": [[135, "compute-frequency-features-of-the-data"]], "Plot Gamma Power on cortical sensors": [[135, "plot-gamma-power-on-cortical-sensors"]], "Visualize the time-evolution of the gamma power on the brain": [[135, "visualize-the-time-evolution-of-the-gamma-power-on-the-brain"]], "Sleep stage classification from polysomnography (PSG) data": [[136, "sleep-stage-classification-from-polysomnography-psg-data"]], "Read the PSG data and Hypnograms to create a raw object": [[136, "read-the-psg-data-and-hypnograms-to-create-a-raw-object"]], "Extract 30s events from annotations": [[136, "extract-30s-events-from-annotations"]], "Create Epochs from the data based on the events found in the annotations": [[136, "create-epochs-from-the-data-based-on-the-events-found-in-the-annotations"]], "Applying the same steps to the test data from Bob": [[136, "applying-the-same-steps-to-the-test-data-from-bob"]], "Feature Engineering": [[136, "feature-engineering"]], "Design a scikit-learn transformer from a Python function": [[136, "design-a-scikit-learn-transformer-from-a-python-function"]], "Multiclass classification workflow using scikit-learn": [[136, "multiclass-classification-workflow-using-scikit-learn"]], "Further analysis of the data": [[136, "further-analysis-of-the-data"]], "Exercise": [[136, "exercise"], [157, "exercise"], [194, "exercise"], [238, "exercise"]], "Clinical applications": [[137, "clinical-applications"], [164, "clinical-applications"]], "The Epochs data structure: discontinuous data": [[139, "the-epochs-data-structure-discontinuous-data"]], "Creating Epoched data from a Raw object": [[139, "creating-epoched-data-from-a-raw-object"]], "Basic visualization of Epochs objects": [[139, "basic-visualization-of-epochs-objects"]], "Subselecting epochs": [[139, "subselecting-epochs"]], "Selecting epochs by index": [[139, "selecting-epochs-by-index"]], "Selecting, dropping, and reordering channels": [[139, "selecting-dropping-and-reordering-channels"], [148, "selecting-dropping-and-reordering-channels"], [213, "selecting-dropping-and-reordering-channels"]], "Changing channel name and type": [[139, "changing-channel-name-and-type"], [213, "changing-channel-name-and-type"]], "Selection in the time domain": [[139, "selection-in-the-time-domain"], [213, "selection-in-the-time-domain"]], "Extracting data in other forms": [[139, "extracting-data-in-other-forms"]], "Loading and saving Epochs objects to disk": [[139, "loading-and-saving-epochs-objects-to-disk"]], "Iterating over Epochs": [[139, "iterating-over-epochs"]], "Regression-based baseline correction": [[140, "regression-based-baseline-correction"]], "Traditional baselining": [[140, "traditional-baselining"]], "Regression-based baselining": [[140, "regression-based-baselining"]], "Plot the baseline regressor": [[140, "plot-the-baseline-regressor"]], "Plot the ERPs": [[140, "plot-the-erps"]], "Plot the scalp topographies and difference waves": [[140, "plot-the-scalp-topographies-and-difference-waves"]], "Examine the interaction term": [[140, "examine-the-interaction-term"]], "Visualizing epoched data": [[141, "visualizing-epoched-data"]], "Plotting Epochs as time series": [[141, "plotting-epochs-as-time-series"]], "Interactivity in pipelines and scripts": [[141, null]], "Plotting projectors from an Epochs object": [[141, "plotting-projectors-from-an-epochs-object"]], "Plotting sensor locations": [[141, "plotting-sensor-locations"]], "Plotting the power spectrum of Epochs": [[141, "plotting-the-power-spectrum-of-epochs"]], "Plotting Epochs as an image map": [[141, "plotting-epochs-as-an-image-map"]], "Working with Epoch metadata": [[142, "working-with-epoch-metadata"]], "Viewing Epochs metadata": [[142, "viewing-epochs-metadata"]], "Restrictions on metadata DataFrames": [[142, null]], "Modifying the metadata": [[142, "modifying-the-metadata"]], "Selecting epochs using metadata queries": [[142, "selecting-epochs-using-metadata-queries"]], "Adding metadata to an Epochs object": [[142, "adding-metadata-to-an-epochs-object"]], "Auto-generating Epochs metadata": [[143, "auto-generating-epochs-metadata"]], "Preparation": [[143, "preparation"]], "Creating metadata from events": [[143, "creating-metadata-from-events"]], "The basics of make_metadata": [[143, "the-basics-of-make-metadata"]], "Specifying time-locked events": [[143, "specifying-time-locked-events"]], "Keeping only the first events of a group": [[143, "keeping-only-the-first-events-of-a-group"]], "Adding new columns to describe stimulation side and response correctness": [[143, "adding-new-columns-to-describe-stimulation-side-and-response-correctness"]], "Creating Epochs with metadata, and visualizing ERPs": [[143, "creating-epochs-with-metadata-and-visualizing-erps"]], "Applying the knowledge: visualizing the ERN component": [[143, "applying-the-knowledge-visualizing-the-ern-component"]], "Exporting Epochs to Pandas DataFrames": [[144, "exporting-epochs-to-pandas-dataframes"]], "Converting an Epochs object to a DataFrame": [[144, "converting-an-epochs-object-to-a-dataframe"]], "Scaling time and channel values": [[144, "scaling-time-and-channel-values"]], "Setting the index": [[144, "setting-the-index"]], "Wide- versus long-format DataFrames": [[144, "wide-versus-long-format-dataframes"]], "Divide continuous data into equally-spaced epochs": [[145, "divide-continuous-data-into-equally-spaced-epochs"]], "Characteristics of Fixed Length Epochs": [[145, "characteristics-of-fixed-length-epochs"]], "Example Use Case for Fixed Length Epochs: Connectivity Analysis": [[145, "example-use-case-for-fixed-length-epochs-connectivity-analysis"]], "Segmenting continuous data into epochs": [[146, "segmenting-continuous-data-into-epochs"], [164, "segmenting-continuous-data-into-epochs"]], "The Evoked data structure: evoked/averaged data": [[148, "the-evoked-data-structure-evoked-averaged-data"]], "Creating Evoked objects from Epochs": [[148, "creating-evoked-objects-from-epochs"]], "Basic visualization of Evoked objects": [[148, "basic-visualization-of-evoked-objects"]], "Subsetting Evoked data": [[148, "subsetting-evoked-data"]], "Evokeds are not memory-mapped": [[148, null]], "Similarities among the core data structures": [[148, "similarities-among-the-core-data-structures"]], "Loading and saving Evoked data": [[148, "loading-and-saving-evoked-data"]], "Combining Evoked objects": [[148, "combining-evoked-objects"]], "Other uses of Evoked objects": [[148, "other-uses-of-evoked-objects"]], "Visualizing Evoked data": [[149, "visualizing-evoked-data"]], "Plotting signal traces": [[149, "plotting-signal-traces"]], "Butterfly plots": [[149, null]], "Plotting scalp topographies": [[149, "plotting-scalp-topographies"]], "Arrow maps": [[149, "arrow-maps"]], "Joint plots": [[149, "joint-plots"]], "Comparing Evoked objects": [[149, "comparing-evoked-objects"]], "Image plots": [[149, "image-plots"]], "Topographical subplots": [[149, "topographical-subplots"]], "3D Field Maps": [[149, "d-field-maps"]], "EEG analysis - Event-Related Potentials (ERPs)": [[150, "eeg-analysis-event-related-potentials-erps"]], "Channel names and types": [[150, "channel-names-and-types"]], "Channel locations": [[150, "channel-locations"]], "Setting the EEG reference": [[150, "setting-the-eeg-reference"], [206, "setting-the-eeg-reference"]], "Filtering": [[150, "filtering"]], "Evoked responses: epoching and averaging": [[150, "evoked-responses-epoching-and-averaging"]], "Global field power (GFP)": [[150, "global-field-power-gfp"]], "Averaging across channels with regions of interest": [[150, "averaging-across-channels-with-regions-of-interest"]], "Comparing conditions": [[150, "comparing-conditions"]], "Grand averages": [[150, "grand-averages"]], "Amplitude and latency measures": [[150, "amplitude-and-latency-measures"]], "Peak latency and amplitude": [[150, "peak-latency-and-amplitude"]], "Mean Amplitude": [[150, "mean-amplitude"]], "Plotting whitened data": [[151, "plotting-whitened-data"]], "Raw data with whitening": [[151, "raw-data-with-whitening"]], "Epochs with whitening": [[151, "epochs-with-whitening"]], "Evoked data with whitening": [[151, "evoked-data-with-whitening"]], "Evoked data with scaled whitening": [[151, "evoked-data-with-scaled-whitening"]], "Topographic plot with whitening": [[151, "topographic-plot-with-whitening"]], "Estimating evoked responses": [[152, "estimating-evoked-responses"], [164, "estimating-evoked-responses"], [165, "estimating-evoked-responses"]], "FreeSurfer MRI reconstruction": [[154, "freesurfer-mri-reconstruction"]], "First steps": [[154, "first-steps"], [837, "first-steps"]], "Anatomical reconstruction": [[154, "anatomical-reconstruction"]], "Use with MNE-Python": [[154, "use-with-mne-python"]], "\u2018fsaverage\u2019": [[154, "fsaverage"]], "Source alignment and coordinate frames": [[155, "source-alignment-and-coordinate-frames"]], "Understanding coordinate frames": [[155, "understanding-coordinate-frames"]], "Coordinate frame definitions": [[155, "coordinate-frame-definitions"]], "A bad example": [[155, "a-bad-example"]], "A good example": [[155, "a-good-example"]], "Visualizing the transformations": [[155, "visualizing-the-transformations"]], "Example: MRI defacing": [[155, "example-mri-defacing"]], "Defining the head\u2194MRI trans using the GUI": [[155, "defining-the-headmri-trans-using-the-gui"]], "Alignment without MRI": [[155, "alignment-without-mri"]], "Using an automated approach to coregistration": [[156, "using-an-automated-approach-to-coregistration"]], "Set up the coregistration model": [[156, "set-up-the-coregistration-model"]], "Initial fit with fiducials": [[156, "initial-fit-with-fiducials"]], "Refining with ICP": [[156, "refining-with-icp"]], "Omitting bad points": [[156, "omitting-bad-points"]], "Final coregistration fit": [[156, "final-coregistration-fit"]], "Head model and forward computation": [[157, "head-model-and-forward-computation"]], "Computing the forward operator": [[157, "computing-the-forward-operator"]], "Compute and visualize BEM surfaces": [[157, "compute-and-visualize-bem-surfaces"]], "Visualizing the coregistration": [[157, "visualizing-the-coregistration"]], "Compute Source Space": [[157, "compute-source-space"]], "Compute forward solution": [[157, "compute-forward-solution"]], "EEG forward operator with a template MRI": [[158, "eeg-forward-operator-with-a-template-mri"]], "Adult template MRI (fsaverage)": [[158, "adult-template-mri-fsaverage"]], "Setup source space and compute forward": [[158, "setup-source-space-and-compute-forward"]], "Infant MRI surrogates": [[158, "infant-mri-surrogates"]], "Get an infant MRI template": [[158, "get-an-infant-mri-template"]], "How MNE uses FreeSurfer\u2019s outputs": [[159, "how-mne-uses-freesurfer-s-outputs"]], "MRI coordinate frames": [[159, "mri-coordinate-frames"]], "Under the hood": [[159, null]], "\u201cMRI coordinates\u201d in MNE-Python: FreeSurfer surface RAS": [[159, "mri-coordinates-in-mne-python-freesurfer-surface-ras"]], "Head coordinate frame": [[159, null]], "Using FreeSurfer\u2019s surface reconstructions": [[159, "using-freesurfer-s-surface-reconstructions"]], "Cortical alignment (spherical)": [[159, "cortical-alignment-spherical"]], "Surface decimation": [[159, "surface-decimation"]], "FreeSurfer\u2019s MNI affine transformation": [[159, "freesurfer-s-mni-affine-transformation"]], "Fixing BEM and head surfaces": [[160, "fixing-bem-and-head-surfaces"]], "Exporting surfaces to Blender": [[160, "exporting-surfaces-to-blender"]], "Editing in Blender": [[160, "editing-in-blender"]], "Using the fixed surfaces in MNE-Python": [[160, "using-the-fixed-surfaces-in-mne-python"]], "Editing the head surfaces": [[160, "editing-the-head-surfaces"]], "Low-resolution head": [[160, "low-resolution-head"]], "High-resolution head": [[160, "high-resolution-head"]], "Blender editing tips": [[160, "blender-editing-tips"]], "What if you still get an error?": [[160, "what-if-you-still-get-an-error"]], "Blender operations": [[160, "blender-operations"]], "Cleaning up a bad dense head surface by smoothing": [[160, "cleaning-up-a-bad-dense-head-surface-by-smoothing"]], "Topological errors": [[160, "topological-errors"]], "Dealing with topology in blender": [[160, "dealing-with-topology-in-blender"]], "Dealing with topology using pymeshfix": [[160, "dealing-with-topology-using-pymeshfix"]], "Computing a covariance matrix": [[161, "computing-a-covariance-matrix"]], "Plot the covariance matrices": [[161, "plot-the-covariance-matrices"]], "How should I regularize the covariance matrix?": [[161, "how-should-i-regularize-the-covariance-matrix"], [854, "how-should-i-regularize-the-covariance-matrix"]], "Forward models and source spaces": [[162, "forward-models-and-source-spaces"], [164, "forward-models-and-source-spaces"]], "Tutorials": [[164, "tutorials"]], "Introductory tutorials": [[164, "introductory-tutorials"], [172, "introductory-tutorials"]], "Reading data for different recording systems": [[164, "reading-data-for-different-recording-systems"], [191, "reading-data-for-different-recording-systems"]], "Working with continuous data": [[164, "working-with-continuous-data"], [217, "working-with-continuous-data"]], "Time-frequency analysis": [[164, "time-frequency-analysis"], [165, "time-frequency-analysis"], [240, "time-frequency-analysis"]], "Source localization and inverses": [[164, "source-localization-and-inverses"], [185, "source-localization-and-inverses"]], "Statistical analysis of sensor data": [[164, "statistical-analysis-of-sensor-data"], [230, "statistical-analysis-of-sensor-data"]], "Statistical analysis of source estimates": [[164, "statistical-analysis-of-source-estimates"], [235, "statistical-analysis-of-source-estimates"]], "Machine learning models of neural activity": [[164, "machine-learning-models-of-neural-activity"], [195, "machine-learning-models-of-neural-activity"]], "Simulation": [[164, "simulation"], [222, "simulation"], [870, "simulation"]], "Overview of MEG/EEG analysis with MNE-Python": [[165, "overview-of-meg-eeg-analysis-with-mne-python"]], "Loading data": [[165, "loading-data"]], "Detecting experimental events": [[165, "detecting-experimental-events"]], "Epoching continuous data": [[165, "epoching-continuous-data"]], "Inverse modeling": [[165, "inverse-modeling"]], "Modifying data in-place": [[166, "modifying-data-in-place"]], "Signal processing": [[166, "signal-processing"]], "Channel picking": [[166, "channel-picking"]], "The copy parameter": [[166, "the-copy-parameter"]], "Parsing events from raw data": [[167, "parsing-events-from-raw-data"]], "The Events and Annotations data structures": [[167, "the-events-and-annotations-data-structures"]], "What is a STIM channel?": [[167, "what-is-a-stim-channel"]], "Converting a STIM channel signal to an Events array": [[167, "converting-a-stim-channel-signal-to-an-events-array"]], "The middle column of the Events array": [[167, null]], "Reading embedded events as Annotations": [[167, "reading-embedded-events-as-annotations"]], "Converting between Events arrays and Annotations objects": [[167, "converting-between-events-arrays-and-annotations-objects"]], "Making multiple events per annotation": [[167, "making-multiple-events-per-annotation"]], "The Info data structure": [[168, "the-info-data-structure"]], "Querying the Info object": [[168, "querying-the-info-object"]], "Obtaining subsets of channels": [[168, "obtaining-subsets-of-channels"]], "Obtaining channel type information": [[168, "obtaining-channel-type-information"]], "Dropping channels from an Info object": [[168, "dropping-channels-from-an-info-object"]], "Working with sensor locations": [[169, "working-with-sensor-locations"]], "About montages and layouts": [[169, "about-montages-and-layouts"]], "Working with built-in montages": [[169, "working-with-built-in-montages"]], "Computing sensor locations": [[169, null]], "Plotting 2D sensor locations like EEGLAB": [[169, "plotting-2d-sensor-locations-like-eeglab"]], "The sphere keyword is available in many places!": [[169, null]], "Manually controlling 2D channel projection": [[169, "manually-controlling-2d-channel-projection"]], "Reading sensor digitization files": [[169, "reading-sensor-digitization-files"]], "Visualizing sensors in 3D surface renderings": [[169, "visualizing-sensors-in-3d-surface-renderings"]], "Working with layout files": [[169, "working-with-layout-files"]], "Configuring MNE-Python": [[170, "configuring-mne-python"]], "Getting and setting configuration variables": [[170, "getting-and-setting-configuration-variables"]], "Where configurations are stored": [[170, "where-configurations-are-stored"]], "Using environment variables": [[170, "using-environment-variables"]], "Logging": [[170, "logging"]], "Getting information about your system": [[170, "getting-information-about-your-system"]], "Getting started with mne.Report": [[171, "getting-started-with-mne-report"]], "Adding Raw data": [[171, "adding-raw-data"]], "Adding events": [[171, "adding-events"]], "Adding Epochs": [[171, "adding-epochs"]], "Adding Evoked": [[171, "adding-evoked"]], "Adding Covariance": [[171, "adding-covariance"]], "Adding Projection vectors": [[171, "adding-projection-vectors"]], "Adding ICA": [[171, "adding-ica"]], "Adding MRI with BEM": [[171, "adding-mri-with-bem"]], "Adding coregistration": [[171, "adding-coregistration"]], "Adding a Forward solution": [[171, "adding-a-forward-solution"]], "Adding an InverseOperator": [[171, "adding-an-inverseoperator"]], "Adding a SourceEstimate": [[171, "adding-a-sourceestimate"]], "Adding source code (e.g., a Python script)": [[171, "adding-source-code-e-g-a-python-script"]], "Adding custom figures": [[171, "adding-custom-figures"]], "Adding image files": [[171, "adding-image-files"]], "Working with tags": [[171, "working-with-tags"]], "Editing a saved report": [[171, "editing-a-saved-report"]], "Adding an entire folder of files": [[171, "adding-an-entire-folder-of-files"]], "Adding custom HTML (e.g., a description text)": [[171, "adding-custom-html-e-g-a-description-text"]], "The SourceEstimate data structure": [[174, "the-sourceestimate-data-structure"]], "Load and inspect example data": [[174, "load-and-inspect-example-data"]], "SourceEstimate (stc)": [[174, "sourceestimate-stc"]], "Relationship to SourceSpaces (src)": [[174, "relationship-to-sourcespaces-src"]], "Source localization with equivalent current dipole (ECD) fit": [[175, "source-localization-with-equivalent-current-dipole-ecd-fit"]], "Source localization with MNE, dSPM, sLORETA, and eLORETA": [[176, "source-localization-with-mne-dspm-sloreta-and-eloreta"]], "Compute regularized noise covariance": [[176, "compute-regularized-noise-covariance"]], "Compute the evoked response": [[176, "compute-the-evoked-response"]], "Inverse modeling: MNE/dSPM on evoked and raw data": [[176, "inverse-modeling-mne-dspm-on-evoked-and-raw-data"]], "The role of dipole orientations in distributed source localization": [[177, "the-role-of-dipole-orientations-in-distributed-source-localization"]], "The source space": [[177, "the-source-space"]], "Fixed dipole orientations": [[177, "fixed-dipole-orientations"]], "Loose dipole orientations": [[177, "loose-dipole-orientations"]], "Limiting orientations, but not fixing them": [[177, "limiting-orientations-but-not-fixing-them"]], "Discarding dipole orientation information": [[177, "discarding-dipole-orientation-information"]], "Computing various MNE solutions": [[178, "computing-various-mne-solutions"]], "Fixed orientation": [[178, "fixed-orientation"]], "Free orientation": [[178, "free-orientation"]], "Source reconstruction using an LCMV beamformer": [[179, "source-reconstruction-using-an-lcmv-beamformer"]], "Introduction to beamformers": [[179, "introduction-to-beamformers"]], "Data processing": [[179, "data-processing"]], "Computing the covariance matrices": [[179, "computing-the-covariance-matrices"]], "The forward model": [[179, "the-forward-model"]], "Handling depth bias": [[179, "handling-depth-bias"]], "Compute the spatial filter": [[179, "compute-the-spatial-filter"]], "Apply the spatial filter": [[179, "apply-the-spatial-filter"]], "Visualize the reconstructed source activity": [[179, "visualize-the-reconstructed-source-activity"]], "On MRI slices (orthoview; 2D)": [[179, "on-mri-slices-orthoview-2d"]], "On MNI glass brain (orthoview; 2D)": [[179, "on-mni-glass-brain-orthoview-2d"]], "Volumetric rendering (3D) with vectors": [[179, "volumetric-rendering-3d-with-vectors"]], "Visualize the activity of the maximum voxel with all three components": [[179, "visualize-the-activity-of-the-maximum-voxel-with-all-three-components"]], "Morph the output to fsaverage": [[179, "morph-the-output-to-fsaverage"]], "Visualize source time courses (stcs)": [[180, "visualize-source-time-courses-stcs"]], "Surface Source Estimates": [[180, "surface-source-estimates"]], "Volume Source Estimates": [[180, "volume-source-estimates"]], "Vector Source Estimates": [[180, "vector-source-estimates"]], "Dipole fits": [[180, "dipole-fits"]], "EEG source localization given electrode locations on an MRI": [[181, "eeg-source-localization-given-electrode-locations-on-an-mri"]], "Prerequisites": [[181, "prerequisites"]], "Visualizing the MRI": [[181, "visualizing-the-mri"]], "Getting our MRI voxel EEG locations to head (and MRI surface RAS) coords": [[181, "getting-our-mri-voxel-eeg-locations-to-head-and-mri-surface-ras-coords"]], "Getting a source estimate": [[181, "getting-a-source-estimate"]], "Brainstorm Elekta phantom dataset tutorial": [[182, "brainstorm-elekta-phantom-dataset-tutorial"]], "Brainstorm CTF phantom dataset tutorial": [[183, "brainstorm-ctf-phantom-dataset-tutorial"]], "4D Neuroimaging/BTi phantom dataset tutorial": [[184, "d-neuroimaging-bti-phantom-dataset-tutorial"]], "Importing data from MEG devices": [[187, "importing-data-from-meg-devices"]], "MEGIN/Elekta Neuromag VectorView and TRIUX (.fif)": [[187, "megin-elekta-neuromag-vectorview-and-triux-fif"]], "FIL OPM (.bin)": [[187, "fil-opm-bin"]], "Artemis123 (.bin)": [[187, "artemis123-bin"]], "4-D Neuroimaging / BTI data (dir)": [[187, "d-neuroimaging-bti-data-dir"]], "CTF data (dir)": [[187, "ctf-data-dir"]], "CTF Polhemus data": [[187, "ctf-polhemus-data"]], "Applying software gradient compensation": [[187, "applying-software-gradient-compensation"]], "Ricoh/KIT MEG system data (.con/.sqd)": [[187, "ricoh-kit-meg-system-data-con-sqd"]], "Channel naming": [[187, null]], "FieldTrip MEG/EEG data (.mat)": [[187, "fieldtrip-meg-eeg-data-mat"]], "Creating MNE data structures from arbitrary data (from memory)": [[187, "creating-mne-data-structures-from-arbitrary-data-from-memory"]], "Importing data from EEG devices": [[188, "importing-data-from-eeg-devices"]], "BrainVision (.vhdr, .vmrk, .eeg)": [[188, "brainvision-vhdr-vmrk-eeg"]], "European data format (.edf)": [[188, "european-data-format-edf"]], "BioSemi data format (.bdf)": [[188, "biosemi-data-format-bdf"]], "General data format (.gdf)": [[188, "general-data-format-gdf"]], "Neuroscan CNT (.cnt)": [[188, "neuroscan-cnt-cnt"]], "EGI simple binary (.egi)": [[188, "egi-simple-binary-egi"]], "EGI MFF (.mff)": [[188, "egi-mff-mff"]], "EEGLAB files (.set, .fdt)": [[188, "eeglab-files-set-fdt"]], "Nicolet (.data)": [[188, "nicolet-data"]], "eXimia EEG data (.nxe)": [[188, "eximia-eeg-data-nxe"]], "Persyst EEG data (.lay, .dat)": [[188, "persyst-eeg-data-lay-dat"]], "Nihon Kohden EEG data (.eeg, .21e, .pnt, .log)": [[188, "nihon-kohden-eeg-data-eeg-21e-pnt-log"]], "XDF data (.xdf, .xdfz)": [[188, "xdf-data-xdf-xdfz"]], "Setting EEG references": [[188, "setting-eeg-references"]], "Reading electrode locations and head shapes for EEG recordings": [[188, "reading-electrode-locations-and-head-shapes-for-eeg-recordings"]], "Importing data from fNIRS devices": [[189, "importing-data-from-fnirs-devices"]], "Standardized data": [[189, "standardized-data"]], "SNIRF (.snirf)": [[189, "snirf-snirf"]], "Specifying the coordinate system": [[189, "specifying-the-coordinate-system"]], "Continuous Wave Devices": [[189, "continuous-wave-devices"]], "NIRx (directory or hdr)": [[189, "nirx-directory-or-hdr"]], "Hitachi (.csv)": [[189, "hitachi-csv"]], "Frequency Domain Devices": [[189, "frequency-domain-devices"]], "BOXY (.txt)": [[189, "boxy-txt"]], "Custom Data Import": [[189, "custom-data-import"]], "Loading legacy data in CSV or TSV format": [[189, "loading-legacy-data-in-csv-or-tsv-format"]], "Applying standard sensor locations to imported data": [[189, "applying-standard-sensor-locations-to-imported-data"]], "Working with CTF data: the Brainstorm auditory dataset": [[190, "working-with-ctf-data-the-brainstorm-auditory-dataset"]], "Spectro-temporal receptive field (STRF) estimation on continuous data": [[193, "spectro-temporal-receptive-field-strf-estimation-on-continuous-data"]], "Load audio data": [[193, "load-audio-data"]], "Create a receptive field": [[193, "create-a-receptive-field"]], "Simulate a neural response": [[193, "simulate-a-neural-response"]], "Fit a model to recover this receptive field": [[193, "fit-a-model-to-recover-this-receptive-field"]], "Visualize the effects of regularization": [[193, "visualize-the-effects-of-regularization"]], "Using different regularization types": [[193, "using-different-regularization-types"]], "Compare model performance": [[193, "compare-model-performance"]], "Decoding (MVPA)": [[194, "decoding-mvpa"]], "Design philosophy": [[194, "design-philosophy"], [852, "design-philosophy"]], "Transformation classes": [[194, "transformation-classes"]], "Scaler": [[194, "scaler"]], "Vectorizer": [[194, "vectorizer"]], "PSDEstimator": [[194, "psdestimator"]], "FilterEstimator": [[194, "filterestimator"]], "Spatial filters": [[194, "spatial-filters"]], "Common spatial pattern": [[194, "common-spatial-pattern"]], "Examples": [[194, null], [194, null], [194, null], [194, null], [194, null], [254, "examples"], [254, "id4"], [254, "id7"], [254, "id10"], [254, "id13"], [254, "id16"], [254, "id19"], [254, "id22"], [254, "id25"], [254, "id29"], [254, "id32"], [254, "id35"], [254, "id38"], [254, "id41"], [254, "id44"], [254, "id47"], [254, "id50"], [254, "id53"], [254, "id56"], [254, "id59"], [254, "id62"], [254, "id65"], [254, "id68"], [851, null], [851, null], [851, null], [851, null], [851, null], [851, null], [851, null], [851, null], [851, null], [851, null], [851, null], [851, null], [851, null], [851, null], [851, null], [851, null], [851, null], [851, null], [851, null], [851, null], [851, null], [851, null]], "Source power comodulation (SPoC)": [[194, "source-power-comodulation-spoc"]], "xDAWN": [[194, "xdawn"]], "Effect-matched spatial filtering": [[194, "effect-matched-spatial-filtering"]], "Patterns vs. filters": [[194, "patterns-vs-filters"]], "Decoding over time": [[194, "decoding-over-time"]], "Temporal decoding": [[194, "temporal-decoding"]], "Temporal generalization": [[194, "temporal-generalization"]], "Projecting sensor-space patterns to source space": [[194, "projecting-sensor-space-patterns-to-source-space"]], "Source-space decoding": [[194, "source-space-decoding"]], "Overview of artifact detection": [[197, "overview-of-artifact-detection"]], "What are artifacts?": [[197, "what-are-artifacts"]], "What to do about artifacts": [[197, "what-to-do-about-artifacts"]], "Artifact detection": [[197, "artifact-detection"]], "Low-frequency drifts": [[197, "low-frequency-drifts"]], "Power line noise": [[197, "power-line-noise"], [201, "power-line-noise"]], "Heartbeat artifacts (ECG)": [[197, "heartbeat-artifacts-ecg"]], "Ocular artifacts (EOG)": [[197, "ocular-artifacts-eog"]], "Handling bad channels": [[198, "handling-bad-channels"]], "Marking bad channels": [[198, "marking-bad-channels"], [850, "marking-bad-channels"]], "Blocking execution": [[198, null]], "When to look for bad channels": [[198, "when-to-look-for-bad-channels"]], "Why mark bad channels at all?": [[198, "why-mark-bad-channels-at-all"]], "Interpolating bad channels": [[198, "interpolating-bad-channels"]], "How interpolation works": [[198, "how-interpolation-works"]], "Interpolation in MNE-Python": [[198, "interpolation-in-mne-python"]], "Rejecting bad data spans and breaks": [[199, "rejecting-bad-data-spans-and-breaks"]], "Annotating bad spans of data": [[199, "annotating-bad-spans-of-data"]], "The reject_by_annotation parameter": [[199, "the-reject-by-annotation-parameter"]], "Generating annotations programmatically": [[199, "generating-annotations-programmatically"]], "Detecting and annotating breaks": [[199, "detecting-and-annotating-breaks"]], "Rejecting Epochs based on channel amplitude": [[199, "rejecting-epochs-based-on-channel-amplitude"]], "Background information on filtering": [[200, "background-information-on-filtering"]], "Problem statement": [[200, "problem-statement"]], "Filtering basics": [[200, "filtering-basics"]], "FIR Filters": [[200, "fir-filters"]], "Designing FIR filters": [[200, "designing-fir-filters"]], "Applying FIR filters": [[200, "applying-fir-filters"]], "IIR filters": [[200, "iir-filters"]], "Designing IIR filters": [[200, "designing-iir-filters"]], "Applying IIR filters": [[200, "applying-iir-filters"]], "Some pitfalls of filtering": [[200, "some-pitfalls-of-filtering"]], "Low-pass problems": [[200, "low-pass-problems"]], "High-pass problems": [[200, "high-pass-problems"]], "Baseline problems (or solutions?)": [[200, "baseline-problems-or-solutions"]], "Filtering defaults": [[200, "filtering-defaults"]], "Defaults in MNE-Python": [[200, "defaults-in-mne-python"]], "Defaults in MNE-C": [[200, "defaults-in-mne-c"]], "Defaults in other software": [[200, "defaults-in-other-software"]], "Reporting Filters": [[200, "reporting-filters"]], "Filter type": [[200, "filter-type"]], "Cutoff frequency": [[200, "cutoff-frequency"]], "Filter length (order) and transition bandwidth (roll-off)": [[200, "filter-length-order-and-transition-bandwidth-roll-off"]], "Passband ripple and stopband attenuation": [[200, "passband-ripple-and-stopband-attenuation"]], "Filter delay and direction of computation": [[200, "filter-delay-and-direction-of-computation"]], "Filtering and resampling data": [[201, "filtering-and-resampling-data"]], "Background on filtering": [[201, "background-on-filtering"]], "Repairing artifacts by filtering": [[201, "repairing-artifacts-by-filtering"]], "Slow drifts": [[201, "slow-drifts"]], "Resampling": [[201, "resampling"]], "Best practices": [[201, "best-practices"], [204, "best-practices"]], "Repairing artifacts with regression": [[202, "repairing-artifacts-with-regression"]], "Prepare the data": [[202, "prepare-the-data"]], "Visualize the original data": [[202, "visualize-the-original-data"]], "Compute and apply EOG regression": [[202, "compute-and-apply-eog-regression"]], "Subtract the evoked response from the epoch data before regression": [[202, "subtract-the-evoked-response-from-the-epoch-data-before-regression"]], "Create EOG evoked before regression": [[202, "create-eog-evoked-before-regression"]], "Visualize the effect on raw data": [[202, "visualize-the-effect-on-raw-data"]], "Repairing artifacts with ICA": [[203, "repairing-artifacts-with-ica"]], "What is ICA?": [[203, "what-is-ica"]], "ICA in MNE-Python": [[203, "ica-in-mne-python"]], "ICA and dimensionality reduction": [[203, null]], "Example: EOG and ECG artifact repair": [[203, "example-eog-and-ecg-artifact-repair"], [205, "example-eog-and-ecg-artifact-repair"]], "Visualizing the artifacts": [[203, "visualizing-the-artifacts"], [205, "visualizing-the-artifacts"]], "Filtering to remove slow drifts": [[203, "filtering-to-remove-slow-drifts"]], "Fitting ICA": [[203, "fitting-ica"]], "Ignoring the time domain": [[203, null]], "Looking at the ICA solution": [[203, "looking-at-the-ica-solution"]], "Selecting ICA components manually": [[203, "selecting-ica-components-manually"]], "Using an EOG channel to select ICA components": [[203, "using-an-eog-channel-to-select-ica-components"]], "Using a simulated channel to select ICA components": [[203, "using-a-simulated-channel-to-select-ica-components"]], "Selecting ICA components using template matching": [[203, "selecting-ica-components-using-template-matching"]], "Compute ICA components on Epochs": [[203, "compute-ica-components-on-epochs"]], "Background on projectors and projections": [[204, "background-on-projectors-and-projections"]], "What is a projection?": [[204, "what-is-a-projection"]], "Example: projection as noise reduction": [[204, "example-projection-as-noise-reduction"]], "Terminology": [[204, null]], "Signal-space projection (SSP)": [[204, "signal-space-projection-ssp"]], "Projectors in MNE-Python": [[204, "projectors-in-mne-python"]], "Computing projectors": [[204, "computing-projectors"]], "Visualizing the effect of projectors": [[204, "visualizing-the-effect-of-projectors"]], "Loading and saving projectors": [[204, "loading-and-saving-projectors"]], "Adding and removing projectors": [[204, "adding-and-removing-projectors"]], "When are projectors \u201capplied\u201d?": [[204, "when-are-projectors-applied"]], "Repairing artifacts with SSP": [[205, "repairing-artifacts-with-ssp"]], "What is SSP?": [[205, "what-is-ssp"]], "Example: Environmental noise reduction from empty-room recordings": [[205, "example-environmental-noise-reduction-from-empty-room-recordings"]], "Visualizing the empty-room noise": [[205, "visualizing-the-empty-room-noise"]], "Creating the empty-room projectors": [[205, "creating-the-empty-room-projectors"]], "Visualizing how projectors affect the signal": [[205, "visualizing-how-projectors-affect-the-signal"]], "Repairing ECG artifacts with SSP": [[205, "repairing-ecg-artifacts-with-ssp"]], "Repairing EOG artifacts with SSP": [[205, "repairing-eog-artifacts-with-ssp"]], "Choosing the number of projectors": [[205, "choosing-the-number-of-projectors"]], "Visualizing SSP sensor-space bias via signal reconstruction": [[205, "visualizing-ssp-sensor-space-bias-via-signal-reconstruction"]], "SSP reconstruction": [[205, null]], "Background": [[206, "background"]], "Setting or changing the reference channel": [[206, "setting-or-changing-the-reference-channel"]], "Setting average reference": [[206, "setting-average-reference"]], "Creating the average reference as a projector": [[206, "creating-the-average-reference-as-a-projector"]], "Using an infinite reference (REST)": [[206, "using-an-infinite-reference-rest"]], "Using a bipolar reference": [[206, "using-a-bipolar-reference"]], "EEG reference and source modeling": [[206, "eeg-reference-and-source-modeling"]], "Extracting and visualizing subject head movement": [[207, "extracting-and-visualizing-subject-head-movement"]], "HPI frequencies": [[207, "hpi-frequencies"]], "Estimating continuous head position": [[207, "estimating-continuous-head-position"]], "Visualizing continuous head position": [[207, "visualizing-continuous-head-position"]], "Computing SNR of the HPI signal": [[207, "computing-snr-of-the-hpi-signal"]], "Signal-space separation (SSS) and Maxwell filtering": [[208, "signal-space-separation-sss-and-maxwell-filtering"]], "Background on SSS and Maxwell filtering": [[208, "background-on-sss-and-maxwell-filtering"]], "Using SSS and Maxwell filtering in MNE-Python": [[208, "using-sss-and-maxwell-filtering-in-mne-python"]], "Spatiotemporal SSS (tSSS)": [[208, "spatiotemporal-sss-tsss"]], "Movement compensation": [[208, "movement-compensation"]], "Caveats to using SSS / Maxwell filtering": [[208, "caveats-to-using-sss-maxwell-filtering"]], "Preprocessing functional near-infrared spectroscopy (fNIRS) data": [[209, "preprocessing-functional-near-infrared-spectroscopy-fnirs-data"]], "Providing more meaningful annotation information": [[209, "providing-more-meaningful-annotation-information"]], "Viewing location of sensors over brain surface": [[209, "viewing-location-of-sensors-over-brain-surface"]], "Selecting channels appropriate for detecting neural responses": [[209, "selecting-channels-appropriate-for-detecting-neural-responses"]], "Converting from raw intensity to optical density": [[209, "converting-from-raw-intensity-to-optical-density"]], "Evaluating the quality of the data": [[209, "evaluating-the-quality-of-the-data"]], "Converting from optical density to haemoglobin": [[209, "converting-from-optical-density-to-haemoglobin"]], "Removing heart rate from signal": [[209, "removing-heart-rate-from-signal"]], "Extract epochs": [[209, "extract-epochs"]], "View consistency of responses across trials": [[209, "view-consistency-of-responses-across-trials"]], "View consistency of responses across channels": [[209, "view-consistency-of-responses-across-channels"]], "Plot standard fNIRS response image": [[209, "plot-standard-fnirs-response-image"]], "View topographic representation of activity": [[209, "view-topographic-representation-of-activity"]], "Compare tapping of left and right hands": [[209, "compare-tapping-of-left-and-right-hands"]], "Preprocessing optically pumped magnetometer (OPM) MEG data": [[210, "preprocessing-optically-pumped-magnetometer-opm-meg-data"]], "Examining raw data": [[210, "examining-raw-data"]], "Denoising: Regressing via reference sensors": [[210, "denoising-regressing-via-reference-sensors"]], "Comparing denoising methods": [[210, "comparing-denoising-methods"]], "Filtering nuisance signals": [[210, "filtering-nuisance-signals"]], "Generating an evoked response": [[210, "generating-an-evoked-response"]], "The Raw data structure: continuous data": [[213, "the-raw-data-structure-continuous-data"]], "Loading continuous data": [[213, "loading-continuous-data"]], "Datasets in MNE-Python": [[213, null]], "Querying the Raw object": [[213, "querying-the-raw-object"]], "Attributes vs. Methods": [[213, null]], "The Raw.info attribute": [[213, "the-raw-info-attribute"]], "Time, sample number, and sample index": [[213, "time-sample-number-and-sample-index"]], "Sample numbering in VectorView data": [[213, null]], "Modifying Raw objects": [[213, "modifying-raw-objects"]], "len(raw)": [[213, null]], "Long channel names": [[213, null]], "Extracting data from Raw objects": [[213, "extracting-data-from-raw-objects"]], "Extracting data by index": [[213, "extracting-data-by-index"]], "Extracting channels by name": [[213, "extracting-channels-by-name"]], "Extracting channels by type": [[213, "extracting-channels-by-type"]], "The Raw.get_data() method": [[213, "the-raw-get-data-method"]], "Summary of ways to extract data from Raw objects": [[213, "summary-of-ways-to-extract-data-from-raw-objects"]], "Exporting and saving Raw objects": [[213, "exporting-and-saving-raw-objects"]], "Working with events": [[214, "working-with-events"]], "Reading and writing events from/to a file": [[214, "reading-and-writing-events-from-to-a-file"]], "Subselecting and combining events": [[214, "subselecting-and-combining-events"]], "Including/excluding events": [[214, null]], "Mapping Event IDs to trial descriptors": [[214, "mapping-event-ids-to-trial-descriptors"]], "Plotting events": [[214, "plotting-events"]], "Plotting events and raw data together": [[214, "plotting-events-and-raw-data-together"]], "Making equally-spaced Events arrays": [[214, "making-equally-spaced-events-arrays"]], "Annotating continuous data": [[215, "annotating-continuous-data"]], "Creating annotations programmatically": [[215, "creating-annotations-programmatically"]], "Annotating Raw objects interactively": [[215, "annotating-raw-objects-interactively"]], "How annotations affect preprocessing and analysis": [[215, "how-annotations-affect-preprocessing-and-analysis"]], "Operations on Annotations objects": [[215, "operations-on-annotations-objects"]], "Reading and writing Annotations to/from a file": [[215, "reading-and-writing-annotations-to-from-a-file"]], "Built-in plotting methods for Raw objects": [[216, "built-in-plotting-methods-for-raw-objects"]], "Interactive data browsing with Raw.plot()": [[216, "interactive-data-browsing-with-raw-plot"]], "Plotting spectral density of continuous data": [[216, "plotting-spectral-density-of-continuous-data"]], "Plotting sensor locations from Raw objects": [[216, "plotting-sensor-locations-from-raw-objects"]], "Plotting projectors from Raw objects": [[216, "plotting-projectors-from-raw-objects"]], "Creating MNE-Python data structures from scratch": [[219, "creating-mne-python-data-structures-from-scratch"]], "Creating Info objects": [[219, "creating-info-objects"]], "Info objects": [[219, null]], "Info consistency": [[219, null]], "Creating Raw objects": [[219, "creating-raw-objects"]], "Units": [[219, null]], "Creating Epochs objects": [[219, "creating-epochs-objects"]], "Creating Evoked Objects": [[219, "creating-evoked-objects"]], "Corrupt known signal with point spread": [[220, "corrupt-known-signal-with-point-spread"]], "Load the MEG data": [[220, "load-the-meg-data"]], "Estimate the background noise covariance from the baseline period": [[220, "estimate-the-background-noise-covariance-from-the-baseline-period"]], "Generate sinusoids in two spatially distant labels": [[220, "generate-sinusoids-in-two-spatially-distant-labels"]], "Find the center vertices in source space of each label": [[220, "find-the-center-vertices-in-source-space-of-each-label"]], "Create source-space data with known signals": [[220, "create-source-space-data-with-known-signals"]], "Plot original signals": [[220, "plot-original-signals"]], "Simulate sensor-space signals": [[220, "simulate-sensor-space-signals"]], "Plot the point-spread of corrupted signal": [[220, "plot-the-point-spread-of-corrupted-signal"]], "Exercises": [[220, "exercises"], [229, "exercises"]], "DICS for power mapping": [[221, "dics-for-power-mapping"]], "Setup": [[221, "setup"]], "Data simulation": [[221, "data-simulation"]], "Power mapping": [[221, "power-mapping"]], "Statistical inference": [[224, "statistical-inference"]], "Hypothesis testing": [[224, "hypothesis-testing"]], "Null hypothesis": [[224, "null-hypothesis"]], "Parametric tests": [[224, "parametric-tests"]], "\u201cHat\u201d variance adjustment": [[224, "hat-variance-adjustment"], [224, "id3"]], "Non-parametric tests": [[224, "non-parametric-tests"]], "Multiple comparisons": [[224, "multiple-comparisons"]], "Bonferroni correction": [[224, "bonferroni-correction"]], "False discovery rate (FDR) correction": [[224, "false-discovery-rate-fdr-correction"]], "Non-parametric resampling test with a maximum statistic": [[224, "non-parametric-resampling-test-with-a-maximum-statistic"]], "Clustering": [[224, "clustering"]], "Effect size": [[224, null]], "Defining the adjacency matrix": [[224, "defining-the-adjacency-matrix"]], "Standard clustering": [[224, "standard-clustering"]], "Threshold-free cluster enhancement (TFCE)": [[224, "threshold-free-cluster-enhancement-tfce"]], "Visualize and compare methods": [[224, "visualize-and-compare-methods"]], "Statistical functions in MNE": [[224, "statistical-functions-in-mne"]], "Parametric methods provided by MNE": [[224, "parametric-methods-provided-by-mne"]], "Non-parametric methods": [[224, "non-parametric-methods"]], "Visualising statistical significance thresholds on EEG data": [[225, "visualising-statistical-significance-thresholds-on-eeg-data"]], "Non-parametric 1 sample cluster statistic on single trial power": [[226, "non-parametric-1-sample-cluster-statistic-on-single-trial-power"]], "Set parameters": [[226, "set-parameters"], [228, "set-parameters"], [229, "set-parameters"], [232, "set-parameters"], [233, "set-parameters"], [234, "set-parameters"]], "Define adjacency for statistics": [[226, "define-adjacency-for-statistics"]], "Compute statistic": [[226, "compute-statistic"], [227, "compute-statistic"], [232, "compute-statistic"], [233, "compute-statistic"]], "View time-frequency plots": [[226, "view-time-frequency-plots"], [227, "view-time-frequency-plots"]], "Non-parametric between conditions cluster statistic on single trial power": [[227, "non-parametric-between-conditions-cluster-statistic-on-single-trial-power"]], "Mass-univariate twoway repeated measures ANOVA on single trial power": [[228, "mass-univariate-twoway-repeated-measures-anova-on-single-trial-power"]], "Create TFR representations for all conditions": [[228, "create-tfr-representations-for-all-conditions"]], "Setup repeated measures ANOVA": [[228, "setup-repeated-measures-anova"]], "Sample data layout": [[228, "id1"]], "Account for multiple comparisons using FDR versus permutation clustering test": [[228, "account-for-multiple-comparisons-using-fdr-versus-permutation-clustering-test"]], "Spatiotemporal permutation F-test on full sensor data": [[229, "spatiotemporal-permutation-f-test-on-full-sensor-data"]], "Read epochs for the channel of interest": [[229, "read-epochs-for-the-channel-of-interest"]], "Find the FieldTrip neighbor definition to setup sensor adjacency": [[229, "find-the-fieldtrip-neighbor-definition-to-setup-sensor-adjacency"]], "Compute permutation statistic": [[229, "compute-permutation-statistic"]], "Visualize clusters": [[229, "visualize-clusters"]], "Permutation statistic for time-frequencies": [[229, "permutation-statistic-for-time-frequencies"]], "Permutation t-test on source data with spatio-temporal clustering": [[232, "permutation-t-test-on-source-data-with-spatio-temporal-clustering"]], "Read epochs for all channels, removing a bad one": [[232, "read-epochs-for-all-channels-removing-a-bad-one"], [234, "read-epochs-for-all-channels-removing-a-bad-one"]], "Transform to source space": [[232, "transform-to-source-space"], [234, "transform-to-source-space"]], "Transform to common cortical space": [[232, "transform-to-common-cortical-space"], [234, "transform-to-common-cortical-space"]], "Find adjacency matrix": [[232, "find-adjacency-matrix"]], "Selecting \u201csignificant\u201d clusters": [[232, "selecting-significant-clusters"]], "Visualize the clusters": [[232, "visualize-the-clusters"], [233, "visualize-the-clusters"], [234, "visualize-the-clusters"]], "2 samples permutation test on source data with spatio-temporal clustering": [[233, "samples-permutation-test-on-source-data-with-spatio-temporal-clustering"]], "Repeated measures ANOVA on source data with spatio-temporal clustering": [[234, "repeated-measures-anova-on-source-data-with-spatio-temporal-clustering"]], "Prepare function for arbitrary contrast": [[234, "prepare-function-for-arbitrary-contrast"]], "Compute clustering statistic": [[234, "compute-clustering-statistic"]], "The Spectrum and EpochsSpectrum classes: frequency-domain data": [[237, "the-spectrum-and-epochsspectrum-classes-frequency-domain-data"]], "Visualizing Spectrum objects": [[237, "visualizing-spectrum-objects"]], "Migrating legacy code": [[237, "migrating-legacy-code"]], "Quick reference for common Spectral class actions": [[237, "id4"]], "Frequency and time-frequency sensor analysis": [[238, "frequency-and-time-frequency-sensor-analysis"]], "Frequency analysis": [[238, "frequency-analysis"], [239, "frequency-analysis"]], "Time-frequency analysis: power and inter-trial coherence": [[238, "time-frequency-analysis-power-and-inter-trial-coherence"]], "Inspect power": [[238, "inspect-power"]], "Joint Plot": [[238, "joint-plot"]], "Inspect ITC": [[238, "inspect-itc"]], "Frequency-tagging: Basic analysis of an SSVEP/vSSR dataset": [[239, "frequency-tagging-basic-analysis-of-an-ssvep-vssr-dataset"]], "Data preprocessing": [[239, "data-preprocessing"]], "Calculate power spectral density (PSD)": [[239, "calculate-power-spectral-density-psd"]], "Calculate signal to noise ratio (SNR)": [[239, "calculate-signal-to-noise-ratio-snr"]], "Plot PSD and SNR spectra": [[239, "plot-psd-and-snr-spectra"]], "Extract SNR values at the stimulation frequency": [[239, "extract-snr-values-at-the-stimulation-frequency"]], "Get index for the stimulation frequency (12 Hz)": [[239, "get-index-for-the-stimulation-frequency-12-hz"]], "Get indices for the different trial types": [[239, "get-indices-for-the-different-trial-types"]], "Get indices of EEG channels forming the ROI": [[239, "get-indices-of-eeg-channels-forming-the-roi"]], "Apply the subset, and check the result": [[239, "apply-the-subset-and-check-the-result"]], "Topography of the vSSR": [[239, "topography-of-the-vssr"]], "Statistical separation of 12 Hz and 15 Hz vSSR": [[239, "statistical-separation-of-12-hz-and-15-hz-vssr"]], "Debriefing": [[239, "debriefing"]], "Bonus exercises": [[239, "bonus-exercises"]], "Effect of trial duration on SNR": [[239, "effect-of-trial-duration-on-snr"]], "Time resolved SNR": [[239, "time-resolved-snr"]], "General bibliography": [[242, "general-bibliography"]], "Papers citing MNE-Python": [[243, "papers-citing-mne-python"]], "Connectivity Estimation": [[244, "connectivity-estimation"]], "Covariance computation": [[245, "covariance-computation"]], "Creating data objects from arrays": [[246, "creating-data-objects-from-arrays"]], "Datasets": [[247, "datasets"]], "Decoding": [[248, "decoding"]], "Events": [[249, "events"]], "Exporting": [[250, "exporting"]], "File I/O": [[251, "file-i-o"]], "Forward Modeling": [[252, "forward-modeling"]], "Funding and other support": [[253, "funding-and-other-support"]], "Institutional partners": [[253, "institutional-partners"]], "Current partners": [[253, "current-partners"], [862, "current-partners"]], "Former partners": [[253, "former-partners"], [862, "former-partners"]], "Command line tools using Python": [[254, "command-line-tools-using-python"]], "mne anonymize": [[254, "mne-anonymize"]], "Anonymize raw fif file.": [[254, "anonymize-raw-fif-file"]], "Options": [[254, "options"], [254, "id3"], [254, "id6"], [254, "id9"], [254, "id12"], [254, "id15"], [254, "id18"], [254, "id21"], [254, "id24"], [254, "id28"], [254, "id31"], [254, "id34"], [254, "id37"], [254, "id40"], [254, "id43"], [254, "id46"], [254, "id49"], [254, "id52"], [254, "id55"], [254, "id58"], [254, "id61"], [254, "id64"], [254, "id67"]], "mne browse_raw": [[254, "mne-browse-raw"]], "Browse raw data.": [[254, "browse-raw-data"]], "mne bti2fiff": [[254, "mne-bti2fiff"]], "Import BTi / 4D MagnesWH3600 data to fif file.": [[254, "import-bti-4d-magneswh3600-data-to-fif-file"]], "Notes": [[254, "notes"], [254, "id26"]], "mne clean_eog_ecg": [[254, "mne-clean-eog-ecg"]], "Clean a raw file from EOG and ECG artifacts with PCA (ie SSP).": [[254, "clean-a-raw-file-from-eog-and-ecg-artifacts-with-pca-ie-ssp"]], "mne compare_fiff": [[254, "mne-compare-fiff"]], "Compare FIFF files.": [[254, "compare-fiff-files"]], "mne compute_proj_ecg": [[254, "mne-compute-proj-ecg"]], "Compute SSP/PCA projections for ECG artifacts.": [[254, "compute-ssp-pca-projections-for-ecg-artifacts"]], "mne compute_proj_eog": [[254, "mne-compute-proj-eog"]], "Compute SSP/PCA projections for EOG artifacts.": [[254, "compute-ssp-pca-projections-for-eog-artifacts"]], "mne coreg": [[254, "mne-coreg"]], "Open the coregistration GUI.": [[254, "open-the-coregistration-gui"]], "mne flash_bem": [[254, "mne-flash-bem"]], "Create 3-layer BEM model from Flash MRI images.": [[254, "create-3-layer-bem-model-from-flash-mri-images"]], "mne freeview_bem_surfaces": [[254, "mne-freeview-bem-surfaces"]], "View the 3-Layers BEM model using Freeview.": [[254, "view-the-3-layers-bem-model-using-freeview"]], "mne kit2fiff": [[254, "mne-kit2fiff"]], "Import KIT / NYU data to fif file.": [[254, "import-kit-nyu-data-to-fif-file"]], "mne make_scalp_surfaces": [[254, "mne-make-scalp-surfaces"]], "Create high-resolution head surfaces for coordinate alignment.": [[254, "create-high-resolution-head-surfaces-for-coordinate-alignment"]], "mne maxfilter": [[254, "mne-maxfilter"]], "Apply MaxFilter.": [[254, "apply-maxfilter"]], "mne prepare_bem_model": [[254, "mne-prepare-bem-model"]], "Create a BEM solution using the linear collocation approach.": [[254, "create-a-bem-solution-using-the-linear-collocation-approach"]], "mne report": [[254, "mne-report"]], "Create mne report for a folder.": [[254, "create-mne-report-for-a-folder"]], "mne setup_forward_model": [[254, "mne-setup-forward-model"]], "Create a BEM model for a subject.": [[254, "create-a-bem-model-for-a-subject"]], "mne setup_source_space": [[254, "mne-setup-source-space"]], "Set up bilateral hemisphere surface-based source space with subsampling.": [[254, "set-up-bilateral-hemisphere-surface-based-source-space-with-subsampling"]], "mne show_fiff": [[254, "mne-show-fiff"]], "Show the contents of a FIFF file.": [[254, "show-the-contents-of-a-fiff-file"]], "mne show_info": [[254, "mne-show-info"]], "Show measurement info from .fif file.": [[254, "show-measurement-info-from-fif-file"]], "mne surf2bem": [[254, "mne-surf2bem"]], "Convert surface to BEM FIF file.": [[254, "convert-surface-to-bem-fif-file"]], "mne sys_info": [[254, "mne-sys-info"]], "Show system information.": [[254, "show-system-information"]], "mne watershed_bem": [[254, "mne-watershed-bem"]], "Create BEM surfaces using the watershed algorithm included with FreeSurfer.": [[254, "create-bem-surfaces-using-the-watershed-algorithm-included-with-freesurfer"]], "mne what": [[254, "mne-what"]], "Check type of FIF file.": [[254, "check-type-of-fif-file"]], "mne.AcqParserFIF": [[255, "mne-acqparserfif"]], "mne.Annotations": [[256, "mne-annotations"]], "Examples using mne.Annotations": [[256, "examples-using-mne-annotations"]], "mne.BaseEpochs": [[257, "mne-baseepochs"]], "mne.BiHemiLabel": [[258, "mne-bihemilabel"]], "mne.Covariance": [[259, "mne-covariance"]], "Examples using mne.Covariance": [[259, "examples-using-mne-covariance"]], "mne.Dipole": [[260, "mne-dipole"]], "Examples using mne.Dipole": [[260, "examples-using-mne-dipole"]], "mne.DipoleFixed": [[261, "mne-dipolefixed"]], "Examples using mne.DipoleFixed": [[261, "examples-using-mne-dipolefixed"]], "mne.Epochs": [[262, "mne-epochs"]], "Examples using mne.Epochs": [[262, "examples-using-mne-epochs"]], "mne.EpochsArray": [[263, "mne-epochsarray"]], "Examples using mne.EpochsArray": [[263, "examples-using-mne-epochsarray"]], "mne.Evoked": [[264, "mne-evoked"]], "Examples using mne.Evoked": [[264, "examples-using-mne-evoked"]], "mne.EvokedArray": [[265, "mne-evokedarray"]], "Examples using mne.EvokedArray": [[265, "examples-using-mne-evokedarray"]], "mne.Forward": [[266, "mne-forward"]], "Examples using mne.Forward": [[266, "examples-using-mne-forward"]], "mne.Info": [[267, "mne-info"]], "Examples using mne.Info": [[267, "examples-using-mne-info"]], "mne.Label": [[268, "mne-label"]], "Examples using mne.Label": [[268, "examples-using-mne-label"]], "mne.MixedSourceEstimate": [[269, "mne-mixedsourceestimate"]], "Examples using mne.MixedSourceEstimate": [[269, "examples-using-mne-mixedsourceestimate"]], "mne.MixedVectorSourceEstimate": [[270, "mne-mixedvectorsourceestimate"]], "Examples using mne.MixedVectorSourceEstimate": [[270, "examples-using-mne-mixedvectorsourceestimate"]], "mne.Projection": [[271, "mne-projection"]], "Examples using mne.Projection": [[271, "examples-using-mne-projection"]], "mne.Report": [[272, "mne-report"]], "Examples using mne.Report": [[272, "examples-using-mne-report"]], "mne.SourceEstimate": [[273, "mne-sourceestimate"]], "Examples using mne.SourceEstimate": [[273, "examples-using-mne-sourceestimate"]], "mne.SourceMorph": [[274, "mne-sourcemorph"]], "Examples using mne.SourceMorph": [[274, "examples-using-mne-sourcemorph"]], "mne.SourceSpaces": [[275, "mne-sourcespaces"]], "Examples using mne.SourceSpaces": [[275, "examples-using-mne-sourcespaces"]], "mne.VectorSourceEstimate": [[276, "mne-vectorsourceestimate"]], "Examples using mne.VectorSourceEstimate": [[276, "examples-using-mne-vectorsourceestimate"]], "mne.VolSourceEstimate": [[277, "mne-volsourceestimate"]], "Examples using mne.VolSourceEstimate": [[277, "examples-using-mne-volsourceestimate"]], "mne.VolVectorSourceEstimate": [[278, "mne-volvectorsourceestimate"]], "mne.add_reference_channels": [[279, "mne-add-reference-channels"]], "Examples using mne.add_reference_channels": [[279, "examples-using-mne-add-reference-channels"]], "mne.add_source_space_distances": [[280, "mne-add-source-space-distances"]], "mne.annotations_from_events": [[281, "mne-annotations-from-events"]], "Examples using mne.annotations_from_events": [[281, "examples-using-mne-annotations-from-events"]], "mne.apply_forward": [[282, "mne-apply-forward"]], "mne.apply_forward_raw": [[283, "mne-apply-forward-raw"]], "mne.average_forward_solutions": [[284, "mne-average-forward-solutions"]], "mne.baseline.rescale": [[285, "mne-baseline-rescale"]], "Examples using mne.baseline.rescale": [[285, "examples-using-mne-baseline-rescale"]], "mne.beamformer.Beamformer": [[286, "mne-beamformer-beamformer"]], "Examples using mne.beamformer.Beamformer": [[286, "examples-using-mne-beamformer-beamformer"]], "mne.beamformer.apply_dics": [[287, "mne-beamformer-apply-dics"]], "mne.beamformer.apply_dics_csd": [[288, "mne-beamformer-apply-dics-csd"]], "Examples using mne.beamformer.apply_dics_csd": [[288, "examples-using-mne-beamformer-apply-dics-csd"]], "mne.beamformer.apply_dics_epochs": [[289, "mne-beamformer-apply-dics-epochs"]], "mne.beamformer.apply_dics_tfr_epochs": [[290, "mne-beamformer-apply-dics-tfr-epochs"]], "Examples using mne.beamformer.apply_dics_tfr_epochs": [[290, "examples-using-mne-beamformer-apply-dics-tfr-epochs"]], "mne.beamformer.apply_lcmv": [[291, "mne-beamformer-apply-lcmv"]], "Examples using mne.beamformer.apply_lcmv": [[291, "examples-using-mne-beamformer-apply-lcmv"]], "mne.beamformer.apply_lcmv_cov": [[292, "mne-beamformer-apply-lcmv-cov"]], "Examples using mne.beamformer.apply_lcmv_cov": [[292, "examples-using-mne-beamformer-apply-lcmv-cov"]], "mne.beamformer.apply_lcmv_epochs": [[293, "mne-beamformer-apply-lcmv-epochs"]], "Examples using mne.beamformer.apply_lcmv_epochs": [[293, "examples-using-mne-beamformer-apply-lcmv-epochs"]], "mne.beamformer.apply_lcmv_raw": [[294, "mne-beamformer-apply-lcmv-raw"]], "Examples using mne.beamformer.apply_lcmv_raw": [[294, "examples-using-mne-beamformer-apply-lcmv-raw"]], "mne.beamformer.make_dics": [[295, "mne-beamformer-make-dics"]], "Examples using mne.beamformer.make_dics": [[295, "examples-using-mne-beamformer-make-dics"]], "mne.beamformer.make_lcmv": [[296, "mne-beamformer-make-lcmv"]], "Examples using mne.beamformer.make_lcmv": [[296, "examples-using-mne-beamformer-make-lcmv"]], "mne.beamformer.make_lcmv_resolution_matrix": [[297, "mne-beamformer-make-lcmv-resolution-matrix"]], "Examples using mne.beamformer.make_lcmv_resolution_matrix": [[297, "examples-using-mne-beamformer-make-lcmv-resolution-matrix"]], "mne.beamformer.rap_music": [[298, "mne-beamformer-rap-music"]], "Examples using mne.beamformer.rap_music": [[298, "examples-using-mne-beamformer-rap-music"]], "mne.beamformer.read_beamformer": [[299, "mne-beamformer-read-beamformer"]], "mne.bem.ConductorModel": [[300, "mne-bem-conductormodel"]], "Examples using mne.bem.ConductorModel": [[300, "examples-using-mne-bem-conductormodel"]], "mne.bem.convert_flash_mris": [[301, "mne-bem-convert-flash-mris"]], "mne.bem.distance_to_bem": [[302, "mne-bem-distance-to-bem"]], "mne.bem.fit_sphere_to_headshape": [[303, "mne-bem-fit-sphere-to-headshape"]], "mne.bem.get_fitting_dig": [[304, "mne-bem-get-fitting-dig"]], "mne.bem.make_flash_bem": [[305, "mne-bem-make-flash-bem"]], "Examples using mne.bem.make_flash_bem": [[305, "examples-using-mne-bem-make-flash-bem"]], "mne.bem.make_scalp_surfaces": [[306, "mne-bem-make-scalp-surfaces"]], "mne.bem.make_watershed_bem": [[307, "mne-bem-make-watershed-bem"]], "Examples using mne.bem.make_watershed_bem": [[307, "examples-using-mne-bem-make-watershed-bem"]], "mne.channel_indices_by_type": [[308, "mne-channel-indices-by-type"]], "Examples using mne.channel_indices_by_type": [[308, "examples-using-mne-channel-indices-by-type"]], "mne.channel_type": [[309, "mne-channel-type"]], "Examples using mne.channel_type": [[309, "examples-using-mne-channel-type"]], "mne.channels.DigMontage": [[310, "mne-channels-digmontage"]], "Examples using mne.channels.DigMontage": [[310, "examples-using-mne-channels-digmontage"]], "mne.channels.Layout": [[311, "mne-channels-layout"]], "Examples using mne.channels.Layout": [[311, "examples-using-mne-channels-layout"]], "mne.channels.combine_channels": [[312, "mne-channels-combine-channels"]], "Examples using mne.channels.combine_channels": [[312, "examples-using-mne-channels-combine-channels"]], "mne.channels.compute_dev_head_t": [[313, "mne-channels-compute-dev-head-t"]], "mne.channels.compute_native_head_t": [[314, "mne-channels-compute-native-head-t"]], "Examples using mne.channels.compute_native_head_t": [[314, "examples-using-mne-channels-compute-native-head-t"]], "mne.channels.equalize_channels": [[315, "mne-channels-equalize-channels"]], "mne.channels.find_ch_adjacency": [[316, "mne-channels-find-ch-adjacency"]], "Examples using mne.channels.find_ch_adjacency": [[316, "examples-using-mne-channels-find-ch-adjacency"]], "mne.channels.find_layout": [[317, "mne-channels-find-layout"]], "mne.channels.fix_mag_coil_types": [[318, "mne-channels-fix-mag-coil-types"]], "mne.channels.generate_2d_layout": [[319, "mne-channels-generate-2d-layout"]], "mne.channels.get_builtin_ch_adjacencies": [[320, "mne-channels-get-builtin-ch-adjacencies"]], "Examples using mne.channels.get_builtin_ch_adjacencies": [[320, "examples-using-mne-channels-get-builtin-ch-adjacencies"]], "mne.channels.get_builtin_montages": [[321, "mne-channels-get-builtin-montages"]], "Examples using mne.channels.get_builtin_montages": [[321, "examples-using-mne-channels-get-builtin-montages"]], "mne.channels.make_1020_channel_selections": [[322, "mne-channels-make-1020-channel-selections"]], "Examples using mne.channels.make_1020_channel_selections": [[322, "examples-using-mne-channels-make-1020-channel-selections"]], "mne.channels.make_dig_montage": [[323, "mne-channels-make-dig-montage"]], "mne.channels.make_eeg_layout": [[324, "mne-channels-make-eeg-layout"]], "Examples using mne.channels.make_eeg_layout": [[324, "examples-using-mne-channels-make-eeg-layout"]], "mne.channels.make_grid_layout": [[325, "mne-channels-make-grid-layout"]], "mne.channels.make_standard_montage": [[326, "mne-channels-make-standard-montage"]], "Examples using mne.channels.make_standard_montage": [[326, "examples-using-mne-channels-make-standard-montage"]], "mne.channels.read_ch_adjacency": [[327, "mne-channels-read-ch-adjacency"]], "Examples using mne.channels.read_ch_adjacency": [[327, "examples-using-mne-channels-read-ch-adjacency"]], "mne.channels.read_custom_montage": [[328, "mne-channels-read-custom-montage"]], "Examples using mne.channels.read_custom_montage": [[328, "examples-using-mne-channels-read-custom-montage"]], "mne.channels.read_dig_captrak": [[329, "mne-channels-read-dig-captrak"]], "mne.channels.read_dig_dat": [[330, "mne-channels-read-dig-dat"]], "mne.channels.read_dig_egi": [[331, "mne-channels-read-dig-egi"]], "mne.channels.read_dig_fif": [[332, "mne-channels-read-dig-fif"]], "Examples using mne.channels.read_dig_fif": [[332, "examples-using-mne-channels-read-dig-fif"]], "mne.channels.read_dig_hpts": [[333, "mne-channels-read-dig-hpts"]], "mne.channels.read_dig_localite": [[334, "mne-channels-read-dig-localite"]], "mne.channels.read_dig_polhemus_isotrak": [[335, "mne-channels-read-dig-polhemus-isotrak"]], "Examples using mne.channels.read_dig_polhemus_isotrak": [[335, "examples-using-mne-channels-read-dig-polhemus-isotrak"]], "mne.channels.read_layout": [[336, "mne-channels-read-layout"]], "Examples using mne.channels.read_layout": [[336, "examples-using-mne-channels-read-layout"]], "mne.channels.read_polhemus_fastscan": [[337, "mne-channels-read-polhemus-fastscan"]], "mne.channels.rename_channels": [[338, "mne-channels-rename-channels"]], "mne.chpi.compute_chpi_amplitudes": [[339, "mne-chpi-compute-chpi-amplitudes"]], "Examples using mne.chpi.compute_chpi_amplitudes": [[339, "examples-using-mne-chpi-compute-chpi-amplitudes"]], "mne.chpi.compute_chpi_locs": [[340, "mne-chpi-compute-chpi-locs"]], "Examples using mne.chpi.compute_chpi_locs": [[340, "examples-using-mne-chpi-compute-chpi-locs"]], "mne.chpi.compute_chpi_snr": [[341, "mne-chpi-compute-chpi-snr"]], "Examples using mne.chpi.compute_chpi_snr": [[341, "examples-using-mne-chpi-compute-chpi-snr"]], "mne.chpi.compute_head_pos": [[342, "mne-chpi-compute-head-pos"]], "Examples using mne.chpi.compute_head_pos": [[342, "examples-using-mne-chpi-compute-head-pos"]], "mne.chpi.extract_chpi_locs_ctf": [[343, "mne-chpi-extract-chpi-locs-ctf"]], "Examples using mne.chpi.extract_chpi_locs_ctf": [[343, "examples-using-mne-chpi-extract-chpi-locs-ctf"]], "mne.chpi.extract_chpi_locs_kit": [[344, "mne-chpi-extract-chpi-locs-kit"]], "mne.chpi.filter_chpi": [[345, "mne-chpi-filter-chpi"]], "Examples using mne.chpi.filter_chpi": [[345, "examples-using-mne-chpi-filter-chpi"]], "mne.chpi.get_active_chpi": [[346, "mne-chpi-get-active-chpi"]], "Examples using mne.chpi.get_active_chpi": [[346, "examples-using-mne-chpi-get-active-chpi"]], "mne.chpi.get_chpi_info": [[347, "mne-chpi-get-chpi-info"]], "Examples using mne.chpi.get_chpi_info": [[347, "examples-using-mne-chpi-get-chpi-info"]], "mne.chpi.head_pos_to_trans_rot_t": [[348, "mne-chpi-head-pos-to-trans-rot-t"]], "mne.chpi.read_head_pos": [[349, "mne-chpi-read-head-pos"]], "Examples using mne.chpi.read_head_pos": [[349, "examples-using-mne-chpi-read-head-pos"]], "mne.chpi.write_head_pos": [[350, "mne-chpi-write-head-pos"]], "Examples using mne.chpi.write_head_pos": [[350, "examples-using-mne-chpi-write-head-pos"]], "mne.combine_evoked": [[351, "mne-combine-evoked"]], "Examples using mne.combine_evoked": [[351, "examples-using-mne-combine-evoked"]], "mne.compute_covariance": [[352, "mne-compute-covariance"]], "Examples using mne.compute_covariance": [[352, "examples-using-mne-compute-covariance"]], "mne.compute_proj_epochs": [[353, "mne-compute-proj-epochs"]], "Examples using mne.compute_proj_epochs": [[353, "examples-using-mne-compute-proj-epochs"]], "mne.compute_proj_evoked": [[354, "mne-compute-proj-evoked"]], "Examples using mne.compute_proj_evoked": [[354, "examples-using-mne-compute-proj-evoked"]], "mne.compute_proj_raw": [[355, "mne-compute-proj-raw"]], "Examples using mne.compute_proj_raw": [[355, "examples-using-mne-compute-proj-raw"]], "mne.compute_rank": [[356, "mne-compute-rank"]], "Examples using mne.compute_rank": [[356, "examples-using-mne-compute-rank"]], "mne.compute_raw_covariance": [[357, "mne-compute-raw-covariance"]], "Examples using mne.compute_raw_covariance": [[357, "examples-using-mne-compute-raw-covariance"]], "mne.compute_source_morph": [[358, "mne-compute-source-morph"]], "Examples using mne.compute_source_morph": [[358, "examples-using-mne-compute-source-morph"]], "mne.concatenate_epochs": [[359, "mne-concatenate-epochs"]], "Examples using mne.concatenate_epochs": [[359, "examples-using-mne-concatenate-epochs"]], "mne.concatenate_events": [[360, "mne-concatenate-events"]], "mne.concatenate_raws": [[361, "mne-concatenate-raws"]], "Examples using mne.concatenate_raws": [[361, "examples-using-mne-concatenate-raws"]], "mne.convert_forward_solution": [[362, "mne-convert-forward-solution"]], "Examples using mne.convert_forward_solution": [[362, "examples-using-mne-convert-forward-solution"]], "mne.coreg.Coregistration": [[363, "mne-coreg-coregistration"]], "Examples using mne.coreg.Coregistration": [[363, "examples-using-mne-coreg-coregistration"]], "mne.coreg.estimate_head_mri_t": [[364, "mne-coreg-estimate-head-mri-t"]], "Examples using mne.coreg.estimate_head_mri_t": [[364, "examples-using-mne-coreg-estimate-head-mri-t"]], "mne.coreg.get_mni_fiducials": [[365, "mne-coreg-get-mni-fiducials"]], "Examples using mne.coreg.get_mni_fiducials": [[365, "examples-using-mne-coreg-get-mni-fiducials"]], "mne.cov.compute_whitener": [[366, "mne-cov-compute-whitener"]], "mne.cov.prepare_noise_cov": [[367, "mne-cov-prepare-noise-cov"]], "mne.cov.regularize": [[368, "mne-cov-regularize"]], "Examples using mne.cov.regularize": [[368, "examples-using-mne-cov-regularize"]], "mne.create_default_subject": [[369, "mne-create-default-subject"]], "mne.create_info": [[370, "mne-create-info"]], "Examples using mne.create_info": [[370, "examples-using-mne-create-info"]], "mne.cuda.get_cuda_memory": [[371, "mne-cuda-get-cuda-memory"]], "mne.cuda.init_cuda": [[372, "mne-cuda-init-cuda"]], "mne.cuda.set_cuda_device": [[373, "mne-cuda-set-cuda-device"]], "mne.datasets.brainstorm.bst_auditory.data_path": [[374, "mne-datasets-brainstorm-bst-auditory-data-path"]], "mne.datasets.brainstorm.bst_raw.data_path": [[375, "mne-datasets-brainstorm-bst-raw-data-path"]], "mne.datasets.brainstorm.bst_resting.data_path": [[376, "mne-datasets-brainstorm-bst-resting-data-path"]], "mne.datasets.eegbci.load_data": [[377, "mne-datasets-eegbci-load-data"]], "mne.datasets.eegbci.standardize": [[378, "mne-datasets-eegbci-standardize"]], "mne.datasets.epilepsy_ecog.data_path": [[379, "mne-datasets-epilepsy-ecog-data-path"]], "Examples using mne.datasets.epilepsy_ecog.data_path": [[379, "examples-using-mne-datasets-epilepsy-ecog-data-path"]], "mne.datasets.erp_core.data_path": [[380, "mne-datasets-erp-core-data-path"]], "mne.datasets.fetch_aparc_sub_parcellation": [[381, "mne-datasets-fetch-aparc-sub-parcellation"]], "mne.datasets.fetch_dataset": [[382, "mne-datasets-fetch-dataset"]], "mne.datasets.fetch_fsaverage": [[383, "mne-datasets-fetch-fsaverage"]], "mne.datasets.fetch_hcp_mmp_parcellation": [[384, "mne-datasets-fetch-hcp-mmp-parcellation"]], "mne.datasets.fetch_infant_template": [[385, "mne-datasets-fetch-infant-template"]], "Examples using mne.datasets.fetch_infant_template": [[385, "examples-using-mne-datasets-fetch-infant-template"]], "mne.datasets.fetch_phantom": [[386, "mne-datasets-fetch-phantom"]], "mne.datasets.fnirs_motor.data_path": [[387, "mne-datasets-fnirs-motor-data-path"]], "mne.datasets.has_dataset": [[388, "mne-datasets-has-dataset"]], "mne.datasets.hf_sef.data_path": [[389, "mne-datasets-hf-sef-data-path"]], "mne.datasets.kiloword.data_path": [[390, "mne-datasets-kiloword-data-path"]], "Examples using mne.datasets.kiloword.data_path": [[390, "examples-using-mne-datasets-kiloword-data-path"]], "mne.datasets.limo.load_data": [[391, "mne-datasets-limo-load-data"]], "mne.datasets.misc.data_path": [[392, "mne-datasets-misc-data-path"]], "mne.datasets.mtrf.data_path": [[393, "mne-datasets-mtrf-data-path"]], "mne.datasets.multimodal.data_path": [[394, "mne-datasets-multimodal-data-path"]], "mne.datasets.opm.data_path": [[395, "mne-datasets-opm-data-path"]], "mne.datasets.phantom_4dbti.data_path": [[396, "mne-datasets-phantom-4dbti-data-path"]], "mne.datasets.refmeg_noise.data_path": [[397, "mne-datasets-refmeg-noise-data-path"]], "mne.datasets.sample.data_path": [[398, "mne-datasets-sample-data-path"]], "Examples using mne.datasets.sample.data_path": [[398, "examples-using-mne-datasets-sample-data-path"]], "mne.datasets.sleep_physionet.age.fetch_data": [[399, "mne-datasets-sleep-physionet-age-fetch-data"]], "Examples using mne.datasets.sleep_physionet.age.fetch_data": [[399, "examples-using-mne-datasets-sleep-physionet-age-fetch-data"]], "mne.datasets.sleep_physionet.temazepam.fetch_data": [[400, "mne-datasets-sleep-physionet-temazepam-fetch-data"]], "mne.datasets.somato.data_path": [[401, "mne-datasets-somato-data-path"]], "mne.datasets.spm_face.data_path": [[402, "mne-datasets-spm-face-data-path"]], "Examples using mne.datasets.spm_face.data_path": [[402, "examples-using-mne-datasets-spm-face-data-path"]], "mne.datasets.ssvep.data_path": [[403, "mne-datasets-ssvep-data-path"]], "mne.datasets.ucl_opm_auditory.data_path": [[404, "mne-datasets-ucl-opm-auditory-data-path"]], "mne.datasets.visual_92_categories.data_path": [[405, "mne-datasets-visual-92-categories-data-path"]], "mne.decimate_surface": [[406, "mne-decimate-surface"]], "mne.decoding.CSP": [[407, "mne-decoding-csp"]], "Examples using mne.decoding.CSP": [[407, "examples-using-mne-decoding-csp"]], "mne.decoding.EMS": [[408, "mne-decoding-ems"]], "Examples using mne.decoding.EMS": [[408, "examples-using-mne-decoding-ems"]], "mne.decoding.FilterEstimator": [[409, "mne-decoding-filterestimator"]], "Examples using mne.decoding.FilterEstimator": [[409, "examples-using-mne-decoding-filterestimator"]], "mne.decoding.GeneralizingEstimator": [[410, "mne-decoding-generalizingestimator"]], "Examples using mne.decoding.GeneralizingEstimator": [[410, "examples-using-mne-decoding-generalizingestimator"]], "mne.decoding.LinearModel": [[411, "mne-decoding-linearmodel"]], "Examples using mne.decoding.LinearModel": [[411, "examples-using-mne-decoding-linearmodel"]], "mne.decoding.PSDEstimator": [[412, "mne-decoding-psdestimator"]], "Examples using mne.decoding.PSDEstimator": [[412, "examples-using-mne-decoding-psdestimator"]], "mne.decoding.ReceptiveField": [[413, "mne-decoding-receptivefield"]], "Examples using mne.decoding.ReceptiveField": [[413, "examples-using-mne-decoding-receptivefield"]], "mne.decoding.SPoC": [[414, "mne-decoding-spoc"]], "Examples using mne.decoding.SPoC": [[414, "examples-using-mne-decoding-spoc"]], "mne.decoding.SSD": [[415, "mne-decoding-ssd"]], "Examples using mne.decoding.SSD": [[415, "examples-using-mne-decoding-ssd"]], "mne.decoding.Scaler": [[416, "mne-decoding-scaler"]], "Examples using mne.decoding.Scaler": [[416, "examples-using-mne-decoding-scaler"]], "mne.decoding.SlidingEstimator": [[417, "mne-decoding-slidingestimator"]], "Examples using mne.decoding.SlidingEstimator": [[417, "examples-using-mne-decoding-slidingestimator"]], "mne.decoding.TemporalFilter": [[418, "mne-decoding-temporalfilter"]], "mne.decoding.TimeDelayingRidge": [[419, "mne-decoding-timedelayingridge"]], "Examples using mne.decoding.TimeDelayingRidge": [[419, "examples-using-mne-decoding-timedelayingridge"]], "mne.decoding.TimeFrequency": [[420, "mne-decoding-timefrequency"]], "mne.decoding.UnsupervisedSpatialFilter": [[421, "mne-decoding-unsupervisedspatialfilter"]], "Examples using mne.decoding.UnsupervisedSpatialFilter": [[421, "examples-using-mne-decoding-unsupervisedspatialfilter"]], "mne.decoding.Vectorizer": [[422, "mne-decoding-vectorizer"]], "Examples using mne.decoding.Vectorizer": [[422, "examples-using-mne-decoding-vectorizer"]], "mne.decoding.compute_ems": [[423, "mne-decoding-compute-ems"]], "Examples using mne.decoding.compute_ems": [[423, "examples-using-mne-decoding-compute-ems"]], "mne.decoding.cross_val_multiscore": [[424, "mne-decoding-cross-val-multiscore"]], "Examples using mne.decoding.cross_val_multiscore": [[424, "examples-using-mne-decoding-cross-val-multiscore"]], "mne.decoding.get_coef": [[425, "mne-decoding-get-coef"]], "Examples using mne.decoding.get_coef": [[425, "examples-using-mne-decoding-get-coef"]], "mne.dig_mri_distances": [[426, "mne-dig-mri-distances"]], "Examples using mne.dig_mri_distances": [[426, "examples-using-mne-dig-mri-distances"]], "mne.dipole.get_phantom_dipoles": [[427, "mne-dipole-get-phantom-dipoles"]], "Examples using mne.dipole.get_phantom_dipoles": [[427, "examples-using-mne-dipole-get-phantom-dipoles"]], "mne.epochs.average_movements": [[428, "mne-epochs-average-movements"]], "Examples using mne.epochs.average_movements": [[428, "examples-using-mne-epochs-average-movements"]], "mne.epochs.combine_event_ids": [[429, "mne-epochs-combine-event-ids"]], "mne.epochs.equalize_epoch_counts": [[430, "mne-epochs-equalize-epoch-counts"]], "Examples using mne.epochs.equalize_epoch_counts": [[430, "examples-using-mne-epochs-equalize-epoch-counts"]], "mne.epochs.make_metadata": [[431, "mne-epochs-make-metadata"]], "Examples using mne.epochs.make_metadata": [[431, "examples-using-mne-epochs-make-metadata"]], "mne.equalize_channels": [[432, "mne-equalize-channels"]], "mne.event.define_target_events": [[433, "mne-event-define-target-events"]], "Examples using mne.event.define_target_events": [[433, "examples-using-mne-event-define-target-events"]], "mne.event.match_event_names": [[434, "mne-event-match-event-names"]], "mne.event.shift_time_events": [[435, "mne-event-shift-time-events"]], "mne.events_from_annotations": [[436, "mne-events-from-annotations"]], "Examples using mne.events_from_annotations": [[436, "examples-using-mne-events-from-annotations"]], "mne.export.export_epochs": [[437, "mne-export-export-epochs"]], "mne.export.export_evokeds": [[438, "mne-export-export-evokeds"]], "mne.export.export_evokeds_mff": [[439, "mne-export-export-evokeds-mff"]], "mne.export.export_raw": [[440, "mne-export-export-raw"]], "mne.extract_label_time_course": [[441, "mne-extract-label-time-course"]], "Examples using mne.extract_label_time_course": [[441, "examples-using-mne-extract-label-time-course"]], "mne.filter.construct_iir_filter": [[442, "mne-filter-construct-iir-filter"]], "Examples using mne.filter.construct_iir_filter": [[442, "examples-using-mne-filter-construct-iir-filter"]], "mne.filter.create_filter": [[443, "mne-filter-create-filter"]], "Examples using mne.filter.create_filter": [[443, "examples-using-mne-filter-create-filter"]], "mne.filter.estimate_ringing_samples": [[444, "mne-filter-estimate-ringing-samples"]], "mne.filter.filter_data": [[445, "mne-filter-filter-data"]], "Examples using mne.filter.filter_data": [[445, "examples-using-mne-filter-filter-data"]], "mne.filter.notch_filter": [[446, "mne-filter-notch-filter"]], "mne.filter.resample": [[447, "mne-filter-resample"]], "Examples using mne.filter.resample": [[447, "examples-using-mne-filter-resample"]], "mne.find_events": [[448, "mne-find-events"]], "Examples using mne.find_events": [[448, "examples-using-mne-find-events"]], "mne.find_stim_steps": [[449, "mne-find-stim-steps"]], "mne.fit_dipole": [[450, "mne-fit-dipole"]], "Examples using mne.fit_dipole": [[450, "examples-using-mne-fit-dipole"]], "mne.forward.compute_depth_prior": [[451, "mne-forward-compute-depth-prior"]], "mne.forward.compute_orient_prior": [[452, "mne-forward-compute-orient-prior"]], "mne.forward.restrict_forward_to_label": [[453, "mne-forward-restrict-forward-to-label"]], "mne.forward.restrict_forward_to_stc": [[454, "mne-forward-restrict-forward-to-stc"]], "mne.get_config": [[455, "mne-get-config"]], "Examples using mne.get_config": [[455, "examples-using-mne-get-config"]], "mne.get_config_path": [[456, "mne-get-config-path"]], "Examples using mne.get_config_path": [[456, "examples-using-mne-get-config-path"]], "mne.get_head_surf": [[457, "mne-get-head-surf"]], "mne.get_meg_helmet_surf": [[458, "mne-get-meg-helmet-surf"]], "mne.get_montage_volume_labels": [[459, "mne-get-montage-volume-labels"]], "Examples using mne.get_montage_volume_labels": [[459, "examples-using-mne-get-montage-volume-labels"]], "mne.get_volume_labels_from_aseg": [[460, "mne-get-volume-labels-from-aseg"]], "Examples using mne.get_volume_labels_from_aseg": [[460, "examples-using-mne-get-volume-labels-from-aseg"]], "mne.get_volume_labels_from_src": [[461, "mne-get-volume-labels-from-src"]], "mne.grade_to_tris": [[462, "mne-grade-to-tris"]], "mne.grade_to_vertices": [[463, "mne-grade-to-vertices"]], "mne.grand_average": [[464, "mne-grand-average"]], "Examples using mne.grand_average": [[464, "examples-using-mne-grand-average"]], "mne.grow_labels": [[465, "mne-grow-labels"]], "mne.gui.coregistration": [[466, "mne-gui-coregistration"]], "Examples using mne.gui.coregistration": [[466, "examples-using-mne-gui-coregistration"]], "mne.gui.locate_ieeg": [[467, "mne-gui-locate-ieeg"]], "Examples using mne.gui.locate_ieeg": [[467, "examples-using-mne-gui-locate-ieeg"]], "mne.head_to_mni": [[468, "mne-head-to-mni"]], "mne.head_to_mri": [[469, "mne-head-to-mri"]], "mne.inverse_sparse.gamma_map": [[470, "mne-inverse-sparse-gamma-map"]], "Examples using mne.inverse_sparse.gamma_map": [[470, "examples-using-mne-inverse-sparse-gamma-map"]], "mne.inverse_sparse.make_stc_from_dipoles": [[471, "mne-inverse-sparse-make-stc-from-dipoles"]], "Examples using mne.inverse_sparse.make_stc_from_dipoles": [[471, "examples-using-mne-inverse-sparse-make-stc-from-dipoles"]], "mne.inverse_sparse.mixed_norm": [[472, "mne-inverse-sparse-mixed-norm"]], "Examples using mne.inverse_sparse.mixed_norm": [[472, "examples-using-mne-inverse-sparse-mixed-norm"]], "mne.inverse_sparse.tf_mixed_norm": [[473, "mne-inverse-sparse-tf-mixed-norm"]], "Examples using mne.inverse_sparse.tf_mixed_norm": [[473, "examples-using-mne-inverse-sparse-tf-mixed-norm"]], "mne.io.BaseRaw": [[474, "mne-io-baseraw"]], "mne.io.Raw": [[475, "mne-io-raw"]], "Examples using mne.io.Raw": [[475, "examples-using-mne-io-raw"]], "mne.io.RawArray": [[476, "mne-io-rawarray"]], "Examples using mne.io.RawArray": [[476, "examples-using-mne-io-rawarray"]], "mne.io.anonymize_info": [[477, "mne-io-anonymize-info"]], "mne.io.kit.read_mrk": [[478, "mne-io-kit-read-mrk"]], "mne.io.read_fiducials": [[479, "mne-io-read-fiducials"]], "mne.io.read_info": [[480, "mne-io-read-info"]], "Examples using mne.io.read_info": [[480, "examples-using-mne-io-read-info"]], "mne.io.read_raw": [[481, "mne-io-read-raw"]], "Examples using mne.io.read_raw": [[481, "examples-using-mne-io-read-raw"]], "mne.io.read_raw_artemis123": [[482, "mne-io-read-raw-artemis123"]], "Examples using mne.io.read_raw_artemis123": [[482, "examples-using-mne-io-read-raw-artemis123"]], "mne.io.read_raw_bdf": [[483, "mne-io-read-raw-bdf"]], "Examples using mne.io.read_raw_bdf": [[483, "examples-using-mne-io-read-raw-bdf"]], "mne.io.read_raw_boxy": [[484, "mne-io-read-raw-boxy"]], "Examples using mne.io.read_raw_boxy": [[484, "examples-using-mne-io-read-raw-boxy"]], "mne.io.read_raw_brainvision": [[485, "mne-io-read-raw-brainvision"]], "Examples using mne.io.read_raw_brainvision": [[485, "examples-using-mne-io-read-raw-brainvision"]], "mne.io.read_raw_bti": [[486, "mne-io-read-raw-bti"]], "Examples using mne.io.read_raw_bti": [[486, "examples-using-mne-io-read-raw-bti"]], "mne.io.read_raw_cnt": [[487, "mne-io-read-raw-cnt"]], "Examples using mne.io.read_raw_cnt": [[487, "examples-using-mne-io-read-raw-cnt"]], "mne.io.read_raw_ctf": [[488, "mne-io-read-raw-ctf"]], "Examples using mne.io.read_raw_ctf": [[488, "examples-using-mne-io-read-raw-ctf"]], "mne.io.read_raw_curry": [[489, "mne-io-read-raw-curry"]], "mne.io.read_raw_edf": [[490, "mne-io-read-raw-edf"]], "Examples using mne.io.read_raw_edf": [[490, "examples-using-mne-io-read-raw-edf"]], "mne.io.read_raw_eeglab": [[491, "mne-io-read-raw-eeglab"]], "Examples using mne.io.read_raw_eeglab": [[491, "examples-using-mne-io-read-raw-eeglab"]], "mne.io.read_raw_egi": [[492, "mne-io-read-raw-egi"]], "Examples using mne.io.read_raw_egi": [[492, "examples-using-mne-io-read-raw-egi"]], "mne.io.read_raw_eximia": [[493, "mne-io-read-raw-eximia"]], "Examples using mne.io.read_raw_eximia": [[493, "examples-using-mne-io-read-raw-eximia"]], "mne.io.read_raw_fieldtrip": [[494, "mne-io-read-raw-fieldtrip"]], "Examples using mne.io.read_raw_fieldtrip": [[494, "examples-using-mne-io-read-raw-fieldtrip"]], "mne.io.read_raw_fif": [[495, "mne-io-read-raw-fif"]], "Examples using mne.io.read_raw_fif": [[495, "examples-using-mne-io-read-raw-fif"]], "mne.io.read_raw_fil": [[496, "mne-io-read-raw-fil"]], "Examples using mne.io.read_raw_fil": [[496, "examples-using-mne-io-read-raw-fil"]], "mne.io.read_raw_gdf": [[497, "mne-io-read-raw-gdf"]], "Examples using mne.io.read_raw_gdf": [[497, "examples-using-mne-io-read-raw-gdf"]], "mne.io.read_raw_hitachi": [[498, "mne-io-read-raw-hitachi"]], "Examples using mne.io.read_raw_hitachi": [[498, "examples-using-mne-io-read-raw-hitachi"]], "mne.io.read_raw_kit": [[499, "mne-io-read-raw-kit"]], "Examples using mne.io.read_raw_kit": [[499, "examples-using-mne-io-read-raw-kit"]], "mne.io.read_raw_nedf": [[500, "mne-io-read-raw-nedf"]], "mne.io.read_raw_nicolet": [[501, "mne-io-read-raw-nicolet"]], "Examples using mne.io.read_raw_nicolet": [[501, "examples-using-mne-io-read-raw-nicolet"]], "mne.io.read_raw_nihon": [[502, "mne-io-read-raw-nihon"]], "Examples using mne.io.read_raw_nihon": [[502, "examples-using-mne-io-read-raw-nihon"]], "mne.io.read_raw_nirx": [[503, "mne-io-read-raw-nirx"]], "Examples using mne.io.read_raw_nirx": [[503, "examples-using-mne-io-read-raw-nirx"]], "mne.io.read_raw_persyst": [[504, "mne-io-read-raw-persyst"]], "Examples using mne.io.read_raw_persyst": [[504, "examples-using-mne-io-read-raw-persyst"]], "mne.io.read_raw_snirf": [[505, "mne-io-read-raw-snirf"]], "Examples using mne.io.read_raw_snirf": [[505, "examples-using-mne-io-read-raw-snirf"]], "mne.io.show_fiff": [[506, "mne-io-show-fiff"]], "mne.io.write_fiducials": [[507, "mne-io-write-fiducials"]], "mne.label.select_sources": [[508, "mne-label-select-sources"]], "Examples using mne.label.select_sources": [[508, "examples-using-mne-label-select-sources"]], "mne.label_sign_flip": [[509, "mne-label-sign-flip"]], "Examples using mne.label_sign_flip": [[509, "examples-using-mne-label-sign-flip"]], "mne.labels_to_stc": [[510, "mne-labels-to-stc"]], "Examples using mne.labels_to_stc": [[510, "examples-using-mne-labels-to-stc"]], "mne.make_ad_hoc_cov": [[511, "mne-make-ad-hoc-cov"]], "Examples using mne.make_ad_hoc_cov": [[511, "examples-using-mne-make-ad-hoc-cov"]], "mne.make_bem_model": [[512, "mne-make-bem-model"]], "Examples using mne.make_bem_model": [[512, "examples-using-mne-make-bem-model"]], "mne.make_bem_solution": [[513, "mne-make-bem-solution"]], "Examples using mne.make_bem_solution": [[513, "examples-using-mne-make-bem-solution"]], "mne.make_field_map": [[514, "mne-make-field-map"]], "Examples using mne.make_field_map": [[514, "examples-using-mne-make-field-map"]], "mne.make_fixed_length_epochs": [[515, "mne-make-fixed-length-epochs"]], "Examples using mne.make_fixed_length_epochs": [[515, "examples-using-mne-make-fixed-length-epochs"]], "mne.make_fixed_length_events": [[516, "mne-make-fixed-length-events"]], "Examples using mne.make_fixed_length_events": [[516, "examples-using-mne-make-fixed-length-events"]], "mne.make_forward_dipole": [[517, "mne-make-forward-dipole"]], "Examples using mne.make_forward_dipole": [[517, "examples-using-mne-make-forward-dipole"]], "mne.make_forward_solution": [[518, "mne-make-forward-solution"]], "Examples using mne.make_forward_solution": [[518, "examples-using-mne-make-forward-solution"]], "mne.make_sphere_model": [[519, "mne-make-sphere-model"]], "Examples using mne.make_sphere_model": [[519, "examples-using-mne-make-sphere-model"]], "mne.merge_events": [[520, "mne-merge-events"]], "Examples using mne.merge_events": [[520, "examples-using-mne-merge-events"]], "mne.minimum_norm.InverseOperator": [[521, "mne-minimum-norm-inverseoperator"]], "Examples using mne.minimum_norm.InverseOperator": [[521, "examples-using-mne-minimum-norm-inverseoperator"]], "mne.minimum_norm.apply_inverse": [[522, "mne-minimum-norm-apply-inverse"]], "Examples using mne.minimum_norm.apply_inverse": [[522, "examples-using-mne-minimum-norm-apply-inverse"]], "mne.minimum_norm.apply_inverse_cov": [[523, "mne-minimum-norm-apply-inverse-cov"]], "Examples using mne.minimum_norm.apply_inverse_cov": [[523, "examples-using-mne-minimum-norm-apply-inverse-cov"]], "mne.minimum_norm.apply_inverse_epochs": [[524, "mne-minimum-norm-apply-inverse-epochs"]], "Examples using mne.minimum_norm.apply_inverse_epochs": [[524, "examples-using-mne-minimum-norm-apply-inverse-epochs"]], "mne.minimum_norm.apply_inverse_raw": [[525, "mne-minimum-norm-apply-inverse-raw"]], "Examples using mne.minimum_norm.apply_inverse_raw": [[525, "examples-using-mne-minimum-norm-apply-inverse-raw"]], "mne.minimum_norm.apply_inverse_tfr_epochs": [[526, "mne-minimum-norm-apply-inverse-tfr-epochs"]], "mne.minimum_norm.compute_rank_inverse": [[527, "mne-minimum-norm-compute-rank-inverse"]], "mne.minimum_norm.compute_source_psd": [[528, "mne-minimum-norm-compute-source-psd"]], "Examples using mne.minimum_norm.compute_source_psd": [[528, "examples-using-mne-minimum-norm-compute-source-psd"]], "mne.minimum_norm.compute_source_psd_epochs": [[529, "mne-minimum-norm-compute-source-psd-epochs"]], "Examples using mne.minimum_norm.compute_source_psd_epochs": [[529, "examples-using-mne-minimum-norm-compute-source-psd-epochs"]], "mne.minimum_norm.estimate_snr": [[530, "mne-minimum-norm-estimate-snr"]], "mne.minimum_norm.get_cross_talk": [[531, "mne-minimum-norm-get-cross-talk"]], "Examples using mne.minimum_norm.get_cross_talk": [[531, "examples-using-mne-minimum-norm-get-cross-talk"]], "mne.minimum_norm.get_point_spread": [[532, "mne-minimum-norm-get-point-spread"]], "Examples using mne.minimum_norm.get_point_spread": [[532, "examples-using-mne-minimum-norm-get-point-spread"]], "mne.minimum_norm.make_inverse_operator": [[533, "mne-minimum-norm-make-inverse-operator"]], "Examples using mne.minimum_norm.make_inverse_operator": [[533, "examples-using-mne-minimum-norm-make-inverse-operator"]], "mne.minimum_norm.make_inverse_resolution_matrix": [[534, "mne-minimum-norm-make-inverse-resolution-matrix"]], "Examples using mne.minimum_norm.make_inverse_resolution_matrix": [[534, "examples-using-mne-minimum-norm-make-inverse-resolution-matrix"]], "mne.minimum_norm.prepare_inverse_operator": [[535, "mne-minimum-norm-prepare-inverse-operator"]], "mne.minimum_norm.read_inverse_operator": [[536, "mne-minimum-norm-read-inverse-operator"]], "Examples using mne.minimum_norm.read_inverse_operator": [[536, "examples-using-mne-minimum-norm-read-inverse-operator"]], "mne.minimum_norm.resolution_metrics": [[537, "mne-minimum-norm-resolution-metrics"]], "Examples using mne.minimum_norm.resolution_metrics": [[537, "examples-using-mne-minimum-norm-resolution-metrics"]], "mne.minimum_norm.source_band_induced_power": [[538, "mne-minimum-norm-source-band-induced-power"]], "Examples using mne.minimum_norm.source_band_induced_power": [[538, "examples-using-mne-minimum-norm-source-band-induced-power"]], "mne.minimum_norm.source_induced_power": [[539, "mne-minimum-norm-source-induced-power"]], "Examples using mne.minimum_norm.source_induced_power": [[539, "examples-using-mne-minimum-norm-source-induced-power"]], "mne.minimum_norm.write_inverse_operator": [[540, "mne-minimum-norm-write-inverse-operator"]], "mne.morph_labels": [[541, "mne-morph-labels"]], "mne.morph_source_spaces": [[542, "mne-morph-source-spaces"]], "Examples using mne.morph_source_spaces": [[542, "examples-using-mne-morph-source-spaces"]], "mne.open_docs": [[543, "mne-open-docs"]], "mne.open_report": [[544, "mne-open-report"]], "Examples using mne.open_report": [[544, "examples-using-mne-open-report"]], "mne.parse_config": [[545, "mne-parse-config"]], "mne.pick_channels": [[546, "mne-pick-channels"]], "Examples using mne.pick_channels": [[546, "examples-using-mne-pick-channels"]], "mne.pick_channels_cov": [[547, "mne-pick-channels-cov"]], "mne.pick_channels_forward": [[548, "mne-pick-channels-forward"]], "mne.pick_channels_regexp": [[549, "mne-pick-channels-regexp"]], "Examples using mne.pick_channels_regexp": [[549, "examples-using-mne-pick-channels-regexp"]], "mne.pick_events": [[550, "mne-pick-events"]], "Examples using mne.pick_events": [[550, "examples-using-mne-pick-events"]], "mne.pick_info": [[551, "mne-pick-info"]], "Examples using mne.pick_info": [[551, "examples-using-mne-pick-info"]], "mne.pick_types": [[552, "mne-pick-types"]], "Examples using mne.pick_types": [[552, "examples-using-mne-pick-types"]], "mne.pick_types_forward": [[553, "mne-pick-types-forward"]], "Examples using mne.pick_types_forward": [[553, "examples-using-mne-pick-types-forward"]], "mne.preprocessing.EOGRegression": [[554, "mne-preprocessing-eogregression"]], "Examples using mne.preprocessing.EOGRegression": [[554, "examples-using-mne-preprocessing-eogregression"]], "mne.preprocessing.ICA": [[555, "mne-preprocessing-ica"]], "Examples using mne.preprocessing.ICA": [[555, "examples-using-mne-preprocessing-ica"]], "mne.preprocessing.Xdawn": [[556, "mne-preprocessing-xdawn"]], "Examples using mne.preprocessing.Xdawn": [[556, "examples-using-mne-preprocessing-xdawn"]], "mne.preprocessing.annotate_amplitude": [[557, "mne-preprocessing-annotate-amplitude"]], "mne.preprocessing.annotate_break": [[558, "mne-preprocessing-annotate-break"]], "Examples using mne.preprocessing.annotate_break": [[558, "examples-using-mne-preprocessing-annotate-break"]], "mne.preprocessing.annotate_movement": [[559, "mne-preprocessing-annotate-movement"]], "Examples using mne.preprocessing.annotate_movement": [[559, "examples-using-mne-preprocessing-annotate-movement"]], "mne.preprocessing.annotate_muscle_zscore": [[560, "mne-preprocessing-annotate-muscle-zscore"]], "Examples using mne.preprocessing.annotate_muscle_zscore": [[560, "examples-using-mne-preprocessing-annotate-muscle-zscore"]], "mne.preprocessing.annotate_nan": [[561, "mne-preprocessing-annotate-nan"]], "mne.preprocessing.compute_average_dev_head_t": [[562, "mne-preprocessing-compute-average-dev-head-t"]], "Examples using mne.preprocessing.compute_average_dev_head_t": [[562, "examples-using-mne-preprocessing-compute-average-dev-head-t"]], "mne.preprocessing.compute_bridged_electrodes": [[563, "mne-preprocessing-compute-bridged-electrodes"]], "Examples using mne.preprocessing.compute_bridged_electrodes": [[563, "examples-using-mne-preprocessing-compute-bridged-electrodes"]], "mne.preprocessing.compute_current_source_density": [[564, "mne-preprocessing-compute-current-source-density"]], "Examples using mne.preprocessing.compute_current_source_density": [[564, "examples-using-mne-preprocessing-compute-current-source-density"]], "mne.preprocessing.compute_fine_calibration": [[565, "mne-preprocessing-compute-fine-calibration"]], "mne.preprocessing.compute_maxwell_basis": [[566, "mne-preprocessing-compute-maxwell-basis"]], "mne.preprocessing.compute_proj_ecg": [[567, "mne-preprocessing-compute-proj-ecg"]], "Examples using mne.preprocessing.compute_proj_ecg": [[567, "examples-using-mne-preprocessing-compute-proj-ecg"]], "mne.preprocessing.compute_proj_eog": [[568, "mne-preprocessing-compute-proj-eog"]], "Examples using mne.preprocessing.compute_proj_eog": [[568, "examples-using-mne-preprocessing-compute-proj-eog"]], "mne.preprocessing.corrmap": [[569, "mne-preprocessing-corrmap"]], "Examples using mne.preprocessing.corrmap": [[569, "examples-using-mne-preprocessing-corrmap"]], "mne.preprocessing.cortical_signal_suppression": [[570, "mne-preprocessing-cortical-signal-suppression"]], "Examples using mne.preprocessing.cortical_signal_suppression": [[570, "examples-using-mne-preprocessing-cortical-signal-suppression"]], "mne.preprocessing.create_ecg_epochs": [[571, "mne-preprocessing-create-ecg-epochs"]], "Examples using mne.preprocessing.create_ecg_epochs": [[571, "examples-using-mne-preprocessing-create-ecg-epochs"]], "mne.preprocessing.create_eog_epochs": [[572, "mne-preprocessing-create-eog-epochs"]], "Examples using mne.preprocessing.create_eog_epochs": [[572, "examples-using-mne-preprocessing-create-eog-epochs"]], "mne.preprocessing.equalize_bads": [[573, "mne-preprocessing-equalize-bads"]], "mne.preprocessing.find_bad_channels_maxwell": [[574, "mne-preprocessing-find-bad-channels-maxwell"]], "Examples using mne.preprocessing.find_bad_channels_maxwell": [[574, "examples-using-mne-preprocessing-find-bad-channels-maxwell"]], "mne.preprocessing.find_ecg_events": [[575, "mne-preprocessing-find-ecg-events"]], "Examples using mne.preprocessing.find_ecg_events": [[575, "examples-using-mne-preprocessing-find-ecg-events"]], "mne.preprocessing.find_eog_events": [[576, "mne-preprocessing-find-eog-events"]], "Examples using mne.preprocessing.find_eog_events": [[576, "examples-using-mne-preprocessing-find-eog-events"]], "mne.preprocessing.fix_stim_artifact": [[577, "mne-preprocessing-fix-stim-artifact"]], "Examples using mne.preprocessing.fix_stim_artifact": [[577, "examples-using-mne-preprocessing-fix-stim-artifact"]], "mne.preprocessing.ica_find_ecg_events": [[578, "mne-preprocessing-ica-find-ecg-events"]], "mne.preprocessing.ica_find_eog_events": [[579, "mne-preprocessing-ica-find-eog-events"]], "mne.preprocessing.ieeg.project_sensors_onto_brain": [[580, "mne-preprocessing-ieeg-project-sensors-onto-brain"]], "Examples using mne.preprocessing.ieeg.project_sensors_onto_brain": [[580, "examples-using-mne-preprocessing-ieeg-project-sensors-onto-brain"]], "mne.preprocessing.infomax": [[581, "mne-preprocessing-infomax"]], "mne.preprocessing.interpolate_bridged_electrodes": [[582, "mne-preprocessing-interpolate-bridged-electrodes"]], "Examples using mne.preprocessing.interpolate_bridged_electrodes": [[582, "examples-using-mne-preprocessing-interpolate-bridged-electrodes"]], "mne.preprocessing.maxwell_filter": [[583, "mne-preprocessing-maxwell-filter"]], "Examples using mne.preprocessing.maxwell_filter": [[583, "examples-using-mne-preprocessing-maxwell-filter"]], "mne.preprocessing.maxwell_filter_prepare_emptyroom": [[584, "mne-preprocessing-maxwell-filter-prepare-emptyroom"]], "mne.preprocessing.nirs.beer_lambert_law": [[585, "mne-preprocessing-nirs-beer-lambert-law"]], "Examples using mne.preprocessing.nirs.beer_lambert_law": [[585, "examples-using-mne-preprocessing-nirs-beer-lambert-law"]], "mne.preprocessing.nirs.optical_density": [[586, "mne-preprocessing-nirs-optical-density"]], "Examples using mne.preprocessing.nirs.optical_density": [[586, "examples-using-mne-preprocessing-nirs-optical-density"]], "mne.preprocessing.nirs.scalp_coupling_index": [[587, "mne-preprocessing-nirs-scalp-coupling-index"]], "Examples using mne.preprocessing.nirs.scalp_coupling_index": [[587, "examples-using-mne-preprocessing-nirs-scalp-coupling-index"]], "mne.preprocessing.nirs.short_channels": [[588, "mne-preprocessing-nirs-short-channels"]], "mne.preprocessing.nirs.source_detector_distances": [[589, "mne-preprocessing-nirs-source-detector-distances"]], "Examples using mne.preprocessing.nirs.source_detector_distances": [[589, "examples-using-mne-preprocessing-nirs-source-detector-distances"]], "mne.preprocessing.nirs.temporal_derivative_distribution_repair": [[590, "mne-preprocessing-nirs-temporal-derivative-distribution-repair"]], "Examples using mne.preprocessing.nirs.temporal_derivative_distribution_repair": [[590, "examples-using-mne-preprocessing-nirs-temporal-derivative-distribution-repair"]], "mne.preprocessing.oversampled_temporal_projection": [[591, "mne-preprocessing-oversampled-temporal-projection"]], "Examples using mne.preprocessing.oversampled_temporal_projection": [[591, "examples-using-mne-preprocessing-oversampled-temporal-projection"]], "mne.preprocessing.peak_finder": [[592, "mne-preprocessing-peak-finder"]], "mne.preprocessing.read_eog_regression": [[593, "mne-preprocessing-read-eog-regression"]], "mne.preprocessing.read_fine_calibration": [[594, "mne-preprocessing-read-fine-calibration"]], "mne.preprocessing.read_ica": [[595, "mne-preprocessing-read-ica"]], "mne.preprocessing.read_ica_eeglab": [[596, "mne-preprocessing-read-ica-eeglab"]], "mne.preprocessing.realign_raw": [[597, "mne-preprocessing-realign-raw"]], "mne.preprocessing.regress_artifact": [[598, "mne-preprocessing-regress-artifact"]], "mne.preprocessing.write_fine_calibration": [[599, "mne-preprocessing-write-fine-calibration"]], "mne.random_parcellation": [[600, "mne-random-parcellation"]], "mne.read_annotations": [[601, "mne-read-annotations"]], "Examples using mne.read_annotations": [[601, "examples-using-mne-read-annotations"]], "mne.read_bem_solution": [[602, "mne-read-bem-solution"]], "Examples using mne.read_bem_solution": [[602, "examples-using-mne-read-bem-solution"]], "mne.read_bem_surfaces": [[603, "mne-read-bem-surfaces"]], "Examples using mne.read_bem_surfaces": [[603, "examples-using-mne-read-bem-surfaces"]], "mne.read_cov": [[604, "mne-read-cov"]], "Examples using mne.read_cov": [[604, "examples-using-mne-read-cov"]], "mne.read_dipole": [[605, "mne-read-dipole"]], "Examples using mne.read_dipole": [[605, "examples-using-mne-read-dipole"]], "mne.read_epochs": [[606, "mne-read-epochs"]], "Examples using mne.read_epochs": [[606, "examples-using-mne-read-epochs"]], "mne.read_epochs_eeglab": [[607, "mne-read-epochs-eeglab"]], "Examples using mne.read_epochs_eeglab": [[607, "examples-using-mne-read-epochs-eeglab"]], "mne.read_epochs_fieldtrip": [[608, "mne-read-epochs-fieldtrip"]], "Examples using mne.read_epochs_fieldtrip": [[608, "examples-using-mne-read-epochs-fieldtrip"]], "mne.read_epochs_kit": [[609, "mne-read-epochs-kit"]], "Examples using mne.read_epochs_kit": [[609, "examples-using-mne-read-epochs-kit"]], "mne.read_events": [[610, "mne-read-events"]], "Examples using mne.read_events": [[610, "examples-using-mne-read-events"]], "mne.read_evoked_besa": [[611, "mne-read-evoked-besa"]], "mne.read_evoked_fieldtrip": [[612, "mne-read-evoked-fieldtrip"]], "Examples using mne.read_evoked_fieldtrip": [[612, "examples-using-mne-read-evoked-fieldtrip"]], "mne.read_evokeds": [[613, "mne-read-evokeds"]], "Examples using mne.read_evokeds": [[613, "examples-using-mne-read-evokeds"]], "mne.read_evokeds_mff": [[614, "mne-read-evokeds-mff"]], "mne.read_forward_solution": [[615, "mne-read-forward-solution"]], "Examples using mne.read_forward_solution": [[615, "examples-using-mne-read-forward-solution"]], "mne.read_freesurfer_lut": [[616, "mne-read-freesurfer-lut"]], "mne.read_label": [[617, "mne-read-label"]], "Examples using mne.read_label": [[617, "examples-using-mne-read-label"]], "mne.read_labels_from_annot": [[618, "mne-read-labels-from-annot"]], "Examples using mne.read_labels_from_annot": [[618, "examples-using-mne-read-labels-from-annot"]], "mne.read_lta": [[619, "mne-read-lta"]], "mne.read_morph_map": [[620, "mne-read-morph-map"]], "mne.read_proj": [[621, "mne-read-proj"]], "Examples using mne.read_proj": [[621, "examples-using-mne-read-proj"]], "mne.read_reject_parameters": [[622, "mne-read-reject-parameters"]], "mne.read_source_estimate": [[623, "mne-read-source-estimate"]], "Examples using mne.read_source_estimate": [[623, "examples-using-mne-read-source-estimate"]], "mne.read_source_morph": [[624, "mne-read-source-morph"]], "Examples using mne.read_source_morph": [[624, "examples-using-mne-read-source-morph"]], "mne.read_source_spaces": [[625, "mne-read-source-spaces"]], "Examples using mne.read_source_spaces": [[625, "examples-using-mne-read-source-spaces"]], "mne.read_surface": [[626, "mne-read-surface"]], "Examples using mne.read_surface": [[626, "examples-using-mne-read-surface"]], "mne.read_talxfm": [[627, "mne-read-talxfm"]], "Examples using mne.read_talxfm": [[627, "examples-using-mne-read-talxfm"]], "mne.read_trans": [[628, "mne-read-trans"]], "Examples using mne.read_trans": [[628, "examples-using-mne-read-trans"]], "mne.read_tri": [[629, "mne-read-tri"]], "mne.read_vectorview_selection": [[630, "mne-read-vectorview-selection"]], "Examples using mne.read_vectorview_selection": [[630, "examples-using-mne-read-vectorview-selection"]], "mne.rename_channels": [[631, "mne-rename-channels"]], "mne.scale_bem": [[632, "mne-scale-bem"]], "mne.scale_labels": [[633, "mne-scale-labels"]], "mne.scale_mri": [[634, "mne-scale-mri"]], "Examples using mne.scale_mri": [[634, "examples-using-mne-scale-mri"]], "mne.scale_source_space": [[635, "mne-scale-source-space"]], "mne.sensitivity_map": [[636, "mne-sensitivity-map"]], "Examples using mne.sensitivity_map": [[636, "examples-using-mne-sensitivity-map"]], "mne.set_bipolar_reference": [[637, "mne-set-bipolar-reference"]], "Examples using mne.set_bipolar_reference": [[637, "examples-using-mne-set-bipolar-reference"]], "mne.set_cache_dir": [[638, "mne-set-cache-dir"]], "mne.set_config": [[639, "mne-set-config"]], "Examples using mne.set_config": [[639, "examples-using-mne-set-config"]], "mne.set_eeg_reference": [[640, "mne-set-eeg-reference"]], "Examples using mne.set_eeg_reference": [[640, "examples-using-mne-set-eeg-reference"]], "mne.set_log_file": [[641, "mne-set-log-file"]], "mne.set_log_level": [[642, "mne-set-log-level"]], "Examples using mne.set_log_level": [[642, "examples-using-mne-set-log-level"]], "mne.setup_source_space": [[643, "mne-setup-source-space"]], "Examples using mne.setup_source_space": [[643, "examples-using-mne-setup-source-space"]], "mne.setup_volume_source_space": [[644, "mne-setup-volume-source-space"]], "Examples using mne.setup_volume_source_space": [[644, "examples-using-mne-setup-volume-source-space"]], "mne.simulation.SourceSimulator": [[645, "mne-simulation-sourcesimulator"]], "Examples using mne.simulation.SourceSimulator": [[645, "examples-using-mne-simulation-sourcesimulator"]], "mne.simulation.add_chpi": [[646, "mne-simulation-add-chpi"]], "mne.simulation.add_ecg": [[647, "mne-simulation-add-ecg"]], "Examples using mne.simulation.add_ecg": [[647, "examples-using-mne-simulation-add-ecg"]], "mne.simulation.add_eog": [[648, "mne-simulation-add-eog"]], "Examples using mne.simulation.add_eog": [[648, "examples-using-mne-simulation-add-eog"]], "mne.simulation.add_noise": [[649, "mne-simulation-add-noise"]], "Examples using mne.simulation.add_noise": [[649, "examples-using-mne-simulation-add-noise"]], "mne.simulation.metrics.cosine_score": [[650, "mne-simulation-metrics-cosine-score"]], "Examples using mne.simulation.metrics.cosine_score": [[650, "examples-using-mne-simulation-metrics-cosine-score"]], "mne.simulation.metrics.f1_score": [[651, "mne-simulation-metrics-f1-score"]], "Examples using mne.simulation.metrics.f1_score": [[651, "examples-using-mne-simulation-metrics-f1-score"]], "mne.simulation.metrics.peak_position_error": [[652, "mne-simulation-metrics-peak-position-error"]], "Examples using mne.simulation.metrics.peak_position_error": [[652, "examples-using-mne-simulation-metrics-peak-position-error"]], "mne.simulation.metrics.precision_score": [[653, "mne-simulation-metrics-precision-score"]], "Examples using mne.simulation.metrics.precision_score": [[653, "examples-using-mne-simulation-metrics-precision-score"]], "mne.simulation.metrics.recall_score": [[654, "mne-simulation-metrics-recall-score"]], "Examples using mne.simulation.metrics.recall_score": [[654, "examples-using-mne-simulation-metrics-recall-score"]], "mne.simulation.metrics.region_localization_error": [[655, "mne-simulation-metrics-region-localization-error"]], "Examples using mne.simulation.metrics.region_localization_error": [[655, "examples-using-mne-simulation-metrics-region-localization-error"]], "mne.simulation.metrics.roc_auc_score": [[656, "mne-simulation-metrics-roc-auc-score"]], "mne.simulation.metrics.spatial_deviation_error": [[657, "mne-simulation-metrics-spatial-deviation-error"]], "Examples using mne.simulation.metrics.spatial_deviation_error": [[657, "examples-using-mne-simulation-metrics-spatial-deviation-error"]], "mne.simulation.select_source_in_label": [[658, "mne-simulation-select-source-in-label"]], "mne.simulation.simulate_evoked": [[659, "mne-simulation-simulate-evoked"]], "Examples using mne.simulation.simulate_evoked": [[659, "examples-using-mne-simulation-simulate-evoked"]], "mne.simulation.simulate_raw": [[660, "mne-simulation-simulate-raw"]], "Data alignment and stim channel encoding": [[660, "id3"]], "Examples using mne.simulation.simulate_raw": [[660, "examples-using-mne-simulation-simulate-raw"]], "mne.simulation.simulate_sparse_stc": [[661, "mne-simulation-simulate-sparse-stc"]], "Examples using mne.simulation.simulate_sparse_stc": [[661, "examples-using-mne-simulation-simulate-sparse-stc"]], "mne.simulation.simulate_stc": [[662, "mne-simulation-simulate-stc"]], "Examples using mne.simulation.simulate_stc": [[662, "examples-using-mne-simulation-simulate-stc"]], "mne.source_space.compute_distance_to_sensors": [[663, "mne-source-space-compute-distance-to-sensors"]], "Examples using mne.source_space.compute_distance_to_sensors": [[663, "examples-using-mne-source-space-compute-distance-to-sensors"]], "mne.source_space.get_decimated_surfaces": [[664, "mne-source-space-get-decimated-surfaces"]], "mne.spatial_dist_adjacency": [[665, "mne-spatial-dist-adjacency"]], "mne.spatial_inter_hemi_adjacency": [[666, "mne-spatial-inter-hemi-adjacency"]], "mne.spatial_src_adjacency": [[667, "mne-spatial-src-adjacency"]], "Examples using mne.spatial_src_adjacency": [[667, "examples-using-mne-spatial-src-adjacency"]], "mne.spatial_tris_adjacency": [[668, "mne-spatial-tris-adjacency"]], "mne.spatio_temporal_dist_adjacency": [[669, "mne-spatio-temporal-dist-adjacency"]], "mne.spatio_temporal_src_adjacency": [[670, "mne-spatio-temporal-src-adjacency"]], "mne.spatio_temporal_tris_adjacency": [[671, "mne-spatio-temporal-tris-adjacency"]], "mne.split_label": [[672, "mne-split-label"]], "mne.stats.bonferroni_correction": [[673, "mne-stats-bonferroni-correction"]], "Examples using mne.stats.bonferroni_correction": [[673, "examples-using-mne-stats-bonferroni-correction"]], "mne.stats.bootstrap_confidence_interval": [[674, "mne-stats-bootstrap-confidence-interval"]], "Examples using mne.stats.bootstrap_confidence_interval": [[674, "examples-using-mne-stats-bootstrap-confidence-interval"]], "mne.stats.combine_adjacency": [[675, "mne-stats-combine-adjacency"]], "Examples using mne.stats.combine_adjacency": [[675, "examples-using-mne-stats-combine-adjacency"]], "mne.stats.f_mway_rm": [[676, "mne-stats-f-mway-rm"]], "Examples using mne.stats.f_mway_rm": [[676, "examples-using-mne-stats-f-mway-rm"]], "mne.stats.f_oneway": [[677, "mne-stats-f-oneway"]], "Examples using mne.stats.f_oneway": [[677, "examples-using-mne-stats-f-oneway"]], "mne.stats.f_threshold_mway_rm": [[678, "mne-stats-f-threshold-mway-rm"]], "Examples using mne.stats.f_threshold_mway_rm": [[678, "examples-using-mne-stats-f-threshold-mway-rm"]], "mne.stats.fdr_correction": [[679, "mne-stats-fdr-correction"]], "Examples using mne.stats.fdr_correction": [[679, "examples-using-mne-stats-fdr-correction"]], "mne.stats.linear_regression": [[680, "mne-stats-linear-regression"]], "Examples using mne.stats.linear_regression": [[680, "examples-using-mne-stats-linear-regression"]], "mne.stats.linear_regression_raw": [[681, "mne-stats-linear-regression-raw"]], "Examples using mne.stats.linear_regression_raw": [[681, "examples-using-mne-stats-linear-regression-raw"]], "mne.stats.permutation_cluster_1samp_test": [[682, "mne-stats-permutation-cluster-1samp-test"]], "Examples using mne.stats.permutation_cluster_1samp_test": [[682, "examples-using-mne-stats-permutation-cluster-1samp-test"]], "mne.stats.permutation_cluster_test": [[683, "mne-stats-permutation-cluster-test"]], "Examples using mne.stats.permutation_cluster_test": [[683, "examples-using-mne-stats-permutation-cluster-test"]], "mne.stats.permutation_t_test": [[684, "mne-stats-permutation-t-test"]], "Examples using mne.stats.permutation_t_test": [[684, "examples-using-mne-stats-permutation-t-test"]], "mne.stats.spatio_temporal_cluster_1samp_test": [[685, "mne-stats-spatio-temporal-cluster-1samp-test"]], "Examples using mne.stats.spatio_temporal_cluster_1samp_test": [[685, "examples-using-mne-stats-spatio-temporal-cluster-1samp-test"]], "mne.stats.spatio_temporal_cluster_test": [[686, "mne-stats-spatio-temporal-cluster-test"]], "Examples using mne.stats.spatio_temporal_cluster_test": [[686, "examples-using-mne-stats-spatio-temporal-cluster-test"]], "mne.stats.summarize_clusters_stc": [[687, "mne-stats-summarize-clusters-stc"]], "Examples using mne.stats.summarize_clusters_stc": [[687, "examples-using-mne-stats-summarize-clusters-stc"]], "mne.stats.ttest_1samp_no_p": [[688, "mne-stats-ttest-1samp-no-p"]], "Examples using mne.stats.ttest_1samp_no_p": [[688, "examples-using-mne-stats-ttest-1samp-no-p"]], "mne.stats.ttest_ind_no_p": [[689, "mne-stats-ttest-ind-no-p"]], "mne.stc_near_sensors": [[690, "mne-stc-near-sensors"]], "Examples using mne.stc_near_sensors": [[690, "examples-using-mne-stc-near-sensors"]], "mne.stc_to_label": [[691, "mne-stc-to-label"]], "Examples using mne.stc_to_label": [[691, "examples-using-mne-stc-to-label"]], "mne.surface.complete_surface_info": [[692, "mne-surface-complete-surface-info"]], "mne.surface.read_curvature": [[693, "mne-surface-read-curvature"]], "Examples using mne.surface.read_curvature": [[693, "examples-using-mne-surface-read-curvature"]], "mne.sys_info": [[694, "mne-sys-info"]], "Examples using mne.sys_info": [[694, "examples-using-mne-sys-info"]], "mne.time_frequency.AverageTFR": [[695, "mne-time-frequency-averagetfr"]], "Examples using mne.time_frequency.AverageTFR": [[695, "examples-using-mne-time-frequency-averagetfr"]], "mne.time_frequency.CrossSpectralDensity": [[696, "mne-time-frequency-crossspectraldensity"]], "Examples using mne.time_frequency.CrossSpectralDensity": [[696, "examples-using-mne-time-frequency-crossspectraldensity"]], "mne.time_frequency.EpochsSpectrum": [[697, "mne-time-frequency-epochsspectrum"]], "Examples using mne.time_frequency.EpochsSpectrum": [[697, "examples-using-mne-time-frequency-epochsspectrum"]], "mne.time_frequency.EpochsTFR": [[698, "mne-time-frequency-epochstfr"]], "Examples using mne.time_frequency.EpochsTFR": [[698, "examples-using-mne-time-frequency-epochstfr"]], "mne.time_frequency.Spectrum": [[699, "mne-time-frequency-spectrum"]], "Examples using mne.time_frequency.Spectrum": [[699, "examples-using-mne-time-frequency-spectrum"]], "mne.time_frequency.csd_array_fourier": [[700, "mne-time-frequency-csd-array-fourier"]], "mne.time_frequency.csd_array_morlet": [[701, "mne-time-frequency-csd-array-morlet"]], "mne.time_frequency.csd_array_multitaper": [[702, "mne-time-frequency-csd-array-multitaper"]], "mne.time_frequency.csd_fourier": [[703, "mne-time-frequency-csd-fourier"]], "Examples using mne.time_frequency.csd_fourier": [[703, "examples-using-mne-time-frequency-csd-fourier"]], "mne.time_frequency.csd_morlet": [[704, "mne-time-frequency-csd-morlet"]], "Examples using mne.time_frequency.csd_morlet": [[704, "examples-using-mne-time-frequency-csd-morlet"]], "mne.time_frequency.csd_multitaper": [[705, "mne-time-frequency-csd-multitaper"]], "Examples using mne.time_frequency.csd_multitaper": [[705, "examples-using-mne-time-frequency-csd-multitaper"]], "mne.time_frequency.csd_tfr": [[706, "mne-time-frequency-csd-tfr"]], "Examples using mne.time_frequency.csd_tfr": [[706, "examples-using-mne-time-frequency-csd-tfr"]], "mne.time_frequency.dpss_windows": [[707, "mne-time-frequency-dpss-windows"]], "mne.time_frequency.fit_iir_model_raw": [[708, "mne-time-frequency-fit-iir-model-raw"]], "Examples using mne.time_frequency.fit_iir_model_raw": [[708, "examples-using-mne-time-frequency-fit-iir-model-raw"]], "mne.time_frequency.fwhm": [[709, "mne-time-frequency-fwhm"]], "mne.time_frequency.istft": [[710, "mne-time-frequency-istft"]], "mne.time_frequency.morlet": [[711, "mne-time-frequency-morlet"]], "Examples using mne.time_frequency.morlet": [[711, "examples-using-mne-time-frequency-morlet"]], "mne.time_frequency.pick_channels_csd": [[712, "mne-time-frequency-pick-channels-csd"]], "mne.time_frequency.psd_array_multitaper": [[713, "mne-time-frequency-psd-array-multitaper"]], "Examples using mne.time_frequency.psd_array_multitaper": [[713, "examples-using-mne-time-frequency-psd-array-multitaper"]], "mne.time_frequency.psd_array_welch": [[714, "mne-time-frequency-psd-array-welch"]], "Examples using mne.time_frequency.psd_array_welch": [[714, "examples-using-mne-time-frequency-psd-array-welch"]], "mne.time_frequency.read_csd": [[715, "mne-time-frequency-read-csd"]], "mne.time_frequency.read_spectrum": [[716, "mne-time-frequency-read-spectrum"]], "mne.time_frequency.read_tfrs": [[717, "mne-time-frequency-read-tfrs"]], "mne.time_frequency.stft": [[718, "mne-time-frequency-stft"]], "mne.time_frequency.stftfreq": [[719, "mne-time-frequency-stftfreq"]], "mne.time_frequency.tfr.cwt": [[720, "mne-time-frequency-tfr-cwt"]], "mne.time_frequency.tfr.morlet": [[721, "mne-time-frequency-tfr-morlet"]], "mne.time_frequency.tfr_array_morlet": [[722, "mne-time-frequency-tfr-array-morlet"]], "Examples using mne.time_frequency.tfr_array_morlet": [[722, "examples-using-mne-time-frequency-tfr-array-morlet"]], "mne.time_frequency.tfr_array_multitaper": [[723, "mne-time-frequency-tfr-array-multitaper"]], "mne.time_frequency.tfr_array_stockwell": [[724, "mne-time-frequency-tfr-array-stockwell"]], "mne.time_frequency.tfr_morlet": [[725, "mne-time-frequency-tfr-morlet"]], "Examples using mne.time_frequency.tfr_morlet": [[725, "examples-using-mne-time-frequency-tfr-morlet"]], "mne.time_frequency.tfr_multitaper": [[726, "mne-time-frequency-tfr-multitaper"]], "Examples using mne.time_frequency.tfr_multitaper": [[726, "examples-using-mne-time-frequency-tfr-multitaper"]], "mne.time_frequency.tfr_stockwell": [[727, "mne-time-frequency-tfr-stockwell"]], "Examples using mne.time_frequency.tfr_stockwell": [[727, "examples-using-mne-time-frequency-tfr-stockwell"]], "mne.time_frequency.write_tfrs": [[728, "mne-time-frequency-write-tfrs"]], "mne.transform_surface_to": [[729, "mne-transform-surface-to"]], "mne.transforms.Transform": [[730, "mne-transforms-transform"]], "mne.transforms.apply_volume_registration": [[731, "mne-transforms-apply-volume-registration"]], "Examples using mne.transforms.apply_volume_registration": [[731, "examples-using-mne-transforms-apply-volume-registration"]], "mne.transforms.compute_volume_registration": [[732, "mne-transforms-compute-volume-registration"]], "Examples using mne.transforms.compute_volume_registration": [[732, "examples-using-mne-transforms-compute-volume-registration"]], "mne.transforms.quat_to_rot": [[733, "mne-transforms-quat-to-rot"]], "mne.transforms.read_ras_mni_t": [[734, "mne-transforms-read-ras-mni-t"]], "Examples using mne.transforms.read_ras_mni_t": [[734, "examples-using-mne-transforms-read-ras-mni-t"]], "mne.transforms.rot_to_quat": [[735, "mne-transforms-rot-to-quat"]], "mne.use_coil_def": [[736, "mne-use-coil-def"]], "Examples using mne.use_coil_def": [[736, "examples-using-mne-use-coil-def"]], "mne.use_log_level": [[737, "mne-use-log-level"]], "Examples using mne.use_log_level": [[737, "examples-using-mne-use-log-level"]], "mne.utils.deprecated": [[738, "mne-utils-deprecated"]], "mne.utils.warn": [[739, "mne-utils-warn"]], "mne.verbose": [[740, "mne-verbose"]], "mne.vertex_to_mni": [[741, "mne-vertex-to-mni"]], "Examples using mne.vertex_to_mni": [[741, "examples-using-mne-vertex-to-mni"]], "mne.viz.Brain": [[742, "mne-viz-brain"]], "Examples using mne.viz.Brain": [[742, "examples-using-mne-viz-brain"]], "mne.viz.ClickableImage": [[743, "mne-viz-clickableimage"]], "Examples using mne.viz.ClickableImage": [[743, "examples-using-mne-viz-clickableimage"]], "mne.viz.Figure3D": [[744, "mne-viz-figure3d"]], "mne.viz.add_background_image": [[745, "mne-viz-add-background-image"]], "mne.viz.centers_to_edges": [[746, "mne-viz-centers-to-edges"]], "Examples using mne.viz.centers_to_edges": [[746, "examples-using-mne-viz-centers-to-edges"]], "mne.viz.circular_layout": [[747, "mne-viz-circular-layout"]], "Examples using mne.viz.circular_layout": [[747, "examples-using-mne-viz-circular-layout"]], "mne.viz.close_3d_figure": [[748, "mne-viz-close-3d-figure"]], "mne.viz.close_all_3d_figures": [[749, "mne-viz-close-all-3d-figures"]], "mne.viz.compare_fiff": [[750, "mne-viz-compare-fiff"]], "mne.viz.create_3d_figure": [[751, "mne-viz-create-3d-figure"]], "Examples using mne.viz.create_3d_figure": [[751, "examples-using-mne-viz-create-3d-figure"]], "mne.viz.get_3d_backend": [[752, "mne-viz-get-3d-backend"]], "mne.viz.get_brain_class": [[753, "mne-viz-get-brain-class"]], "Examples using mne.viz.get_brain_class": [[753, "examples-using-mne-viz-get-brain-class"]], "mne.viz.get_browser_backend": [[754, "mne-viz-get-browser-backend"]], "mne.viz.iter_topography": [[755, "mne-viz-iter-topography"]], "Examples using mne.viz.iter_topography": [[755, "examples-using-mne-viz-iter-topography"]], "mne.viz.link_brains": [[756, "mne-viz-link-brains"]], "mne.viz.mne_analyze_colormap": [[757, "mne-viz-mne-analyze-colormap"]], "mne.viz.plot_alignment": [[758, "mne-viz-plot-alignment"]], "Examples using mne.viz.plot_alignment": [[758, "examples-using-mne-viz-plot-alignment"]], "mne.viz.plot_arrowmap": [[759, "mne-viz-plot-arrowmap"]], "Examples using mne.viz.plot_arrowmap": [[759, "examples-using-mne-viz-plot-arrowmap"]], "mne.viz.plot_bem": [[760, "mne-viz-plot-bem"]], "Examples using mne.viz.plot_bem": [[760, "examples-using-mne-viz-plot-bem"]], "mne.viz.plot_brain_colorbar": [[761, "mne-viz-plot-brain-colorbar"]], "Examples using mne.viz.plot_brain_colorbar": [[761, "examples-using-mne-viz-plot-brain-colorbar"]], "mne.viz.plot_bridged_electrodes": [[762, "mne-viz-plot-bridged-electrodes"]], "Examples using mne.viz.plot_bridged_electrodes": [[762, "examples-using-mne-viz-plot-bridged-electrodes"]], "mne.viz.plot_ch_adjacency": [[763, "mne-viz-plot-ch-adjacency"]], "Examples using mne.viz.plot_ch_adjacency": [[763, "examples-using-mne-viz-plot-ch-adjacency"]], "mne.viz.plot_channel_labels_circle": [[764, "mne-viz-plot-channel-labels-circle"]], "Examples using mne.viz.plot_channel_labels_circle": [[764, "examples-using-mne-viz-plot-channel-labels-circle"]], "mne.viz.plot_chpi_snr": [[765, "mne-viz-plot-chpi-snr"]], "Examples using mne.viz.plot_chpi_snr": [[765, "examples-using-mne-viz-plot-chpi-snr"]], "mne.viz.plot_compare_evokeds": [[766, "mne-viz-plot-compare-evokeds"]], "Examples using mne.viz.plot_compare_evokeds": [[766, "examples-using-mne-viz-plot-compare-evokeds"]], "mne.viz.plot_cov": [[767, "mne-viz-plot-cov"]], "Examples using mne.viz.plot_cov": [[767, "examples-using-mne-viz-plot-cov"]], "mne.viz.plot_csd": [[768, "mne-viz-plot-csd"]], "mne.viz.plot_dipole_amplitudes": [[769, "mne-viz-plot-dipole-amplitudes"]], "Examples using mne.viz.plot_dipole_amplitudes": [[769, "examples-using-mne-viz-plot-dipole-amplitudes"]], "mne.viz.plot_dipole_locations": [[770, "mne-viz-plot-dipole-locations"]], "Examples using mne.viz.plot_dipole_locations": [[770, "examples-using-mne-viz-plot-dipole-locations"]], "mne.viz.plot_drop_log": [[771, "mne-viz-plot-drop-log"]], "mne.viz.plot_epochs": [[772, "mne-viz-plot-epochs"]], "mne.viz.plot_epochs_image": [[773, "mne-viz-plot-epochs-image"]], "Examples using mne.viz.plot_epochs_image": [[773, "examples-using-mne-viz-plot-epochs-image"]], "mne.viz.plot_epochs_psd_topomap": [[774, "mne-viz-plot-epochs-psd-topomap"]], "mne.viz.plot_events": [[775, "mne-viz-plot-events"]], "Examples using mne.viz.plot_events": [[775, "examples-using-mne-viz-plot-events"]], "mne.viz.plot_evoked": [[776, "mne-viz-plot-evoked"]], "mne.viz.plot_evoked_field": [[777, "mne-viz-plot-evoked-field"]], "mne.viz.plot_evoked_image": [[778, "mne-viz-plot-evoked-image"]], "Examples using mne.viz.plot_evoked_image": [[778, "examples-using-mne-viz-plot-evoked-image"]], "mne.viz.plot_evoked_joint": [[779, "mne-viz-plot-evoked-joint"]], "mne.viz.plot_evoked_topo": [[780, "mne-viz-plot-evoked-topo"]], "Examples using mne.viz.plot_evoked_topo": [[780, "examples-using-mne-viz-plot-evoked-topo"]], "mne.viz.plot_evoked_topomap": [[781, "mne-viz-plot-evoked-topomap"]], "mne.viz.plot_evoked_white": [[782, "mne-viz-plot-evoked-white"]], "Examples using mne.viz.plot_evoked_white": [[782, "examples-using-mne-viz-plot-evoked-white"]], "mne.viz.plot_filter": [[783, "mne-viz-plot-filter"]], "Examples using mne.viz.plot_filter": [[783, "examples-using-mne-viz-plot-filter"]], "mne.viz.plot_head_positions": [[784, "mne-viz-plot-head-positions"]], "Examples using mne.viz.plot_head_positions": [[784, "examples-using-mne-viz-plot-head-positions"]], "mne.viz.plot_ica_components": [[785, "mne-viz-plot-ica-components"]], "mne.viz.plot_ica_overlay": [[786, "mne-viz-plot-ica-overlay"]], "mne.viz.plot_ica_properties": [[787, "mne-viz-plot-ica-properties"]], "mne.viz.plot_ica_scores": [[788, "mne-viz-plot-ica-scores"]], "mne.viz.plot_ica_sources": [[789, "mne-viz-plot-ica-sources"]], "mne.viz.plot_ideal_filter": [[790, "mne-viz-plot-ideal-filter"]], "Examples using mne.viz.plot_ideal_filter": [[790, "examples-using-mne-viz-plot-ideal-filter"]], "mne.viz.plot_layout": [[791, "mne-viz-plot-layout"]], "mne.viz.plot_montage": [[792, "mne-viz-plot-montage"]], "mne.viz.plot_projs_joint": [[793, "mne-viz-plot-projs-joint"]], "Examples using mne.viz.plot_projs_joint": [[793, "examples-using-mne-viz-plot-projs-joint"]], "mne.viz.plot_projs_topomap": [[794, "mne-viz-plot-projs-topomap"]], "Examples using mne.viz.plot_projs_topomap": [[794, "examples-using-mne-viz-plot-projs-topomap"]], "mne.viz.plot_raw": [[795, "mne-viz-plot-raw"]], "mne.viz.plot_raw_psd": [[796, "mne-viz-plot-raw-psd"]], "mne.viz.plot_regression_weights": [[797, "mne-viz-plot-regression-weights"]], "mne.viz.plot_sensors": [[798, "mne-viz-plot-sensors"]], "mne.viz.plot_snr_estimate": [[799, "mne-viz-plot-snr-estimate"]], "Examples using mne.viz.plot_snr_estimate": [[799, "examples-using-mne-viz-plot-snr-estimate"]], "mne.viz.plot_source_estimates": [[800, "mne-viz-plot-source-estimates"]], "Examples using mne.viz.plot_source_estimates": [[800, "examples-using-mne-viz-plot-source-estimates"]], "mne.viz.plot_sparse_source_estimates": [[801, "mne-viz-plot-sparse-source-estimates"]], "Examples using mne.viz.plot_sparse_source_estimates": [[801, "examples-using-mne-viz-plot-sparse-source-estimates"]], "mne.viz.plot_tfr_topomap": [[802, "mne-viz-plot-tfr-topomap"]], "mne.viz.plot_topo_image_epochs": [[803, "mne-viz-plot-topo-image-epochs"]], "mne.viz.plot_topomap": [[804, "mne-viz-plot-topomap"]], "Examples using mne.viz.plot_topomap": [[804, "examples-using-mne-viz-plot-topomap"]], "mne.viz.plot_vector_source_estimates": [[805, "mne-viz-plot-vector-source-estimates"]], "Examples using mne.viz.plot_vector_source_estimates": [[805, "examples-using-mne-viz-plot-vector-source-estimates"]], "mne.viz.plot_volume_source_estimates": [[806, "mne-viz-plot-volume-source-estimates"]], "mne.viz.set_3d_backend": [[807, "mne-viz-set-3d-backend"]], "Examples using mne.viz.set_3d_backend": [[807, "examples-using-mne-viz-set-3d-backend"]], "mne.viz.set_3d_options": [[808, "mne-viz-set-3d-options"]], "mne.viz.set_3d_title": [[809, "mne-viz-set-3d-title"]], "Examples using mne.viz.set_3d_title": [[809, "examples-using-mne-viz-set-3d-title"]], "mne.viz.set_3d_view": [[810, "mne-viz-set-3d-view"]], "Examples using mne.viz.set_3d_view": [[810, "examples-using-mne-viz-set-3d-view"]], "mne.viz.set_browser_backend": [[811, "mne-viz-set-browser-backend"]], "mne.viz.snapshot_brain_montage": [[812, "mne-viz-snapshot-brain-montage"]], "Examples using mne.viz.snapshot_brain_montage": [[812, "examples-using-mne-viz-snapshot-brain-montage"]], "mne.viz.use_3d_backend": [[813, "mne-viz-use-3d-backend"]], "mne.viz.use_browser_backend": [[814, "mne-viz-use-browser-backend"]], "Examples using mne.viz.use_browser_backend": [[814, "examples-using-mne-viz-use-browser-backend"]], "mne.warp_montage_volume": [[815, "mne-warp-montage-volume"]], "Examples using mne.warp_montage_volume": [[815, "examples-using-mne-warp-montage-volume"]], "mne.what": [[816, "mne-what"]], "mne.write_bem_solution": [[817, "mne-write-bem-solution"]], "mne.write_bem_surfaces": [[818, "mne-write-bem-surfaces"]], "mne.write_cov": [[819, "mne-write-cov"]], "Examples using mne.write_cov": [[819, "examples-using-mne-write-cov"]], "mne.write_events": [[820, "mne-write-events"]], "Examples using mne.write_events": [[820, "examples-using-mne-write-events"]], "mne.write_evokeds": [[821, "mne-write-evokeds"]], "Examples using mne.write_evokeds": [[821, "examples-using-mne-write-evokeds"]], "mne.write_forward_solution": [[822, "mne-write-forward-solution"]], "Examples using mne.write_forward_solution": [[822, "examples-using-mne-write-forward-solution"]], "mne.write_head_bem": [[823, "mne-write-head-bem"]], "Examples using mne.write_head_bem": [[823, "examples-using-mne-write-head-bem"]], "mne.write_label": [[824, "mne-write-label"]], "mne.write_labels_to_annot": [[825, "mne-write-labels-to-annot"]], "mne.write_proj": [[826, "mne-write-proj"]], "Examples using mne.write_proj": [[826, "examples-using-mne-write-proj"]], "mne.write_source_spaces": [[827, "mne-write-source-spaces"]], "mne.write_surface": [[828, "mne-write-surface"]], "Examples using mne.write_surface": [[828, "examples-using-mne-write-surface"]], "mne.write_trans": [[829, "mne-write-trans"]], "Glossary": [[830, "glossary"]], "MNE-Python Homepage": [[831, "mne-python-homepage"]], "Advanced setup": [[832, "advanced-setup"]], "Working with Jupyter Notebooks and JupyterLab": [[832, "working-with-jupyter-notebooks-and-jupyterlab"]], "<i class=\"fa-brands fa-windows\"></i> Windows": [[832, null]], "Installing to a headless Linux server": [[832, "installing-to-a-headless-linux-server"]], "Using the development version": [[832, "using-the-development-version"]], "Other Python distributions": [[832, "other-python-distributions"]], "GPU acceleration with CUDA": [[832, "gpu-acceleration-with-cuda"]], "Off-screen rendering with MESA": [[832, "off-screen-rendering-with-mesa"]], "Troubleshooting 3D plots": [[832, "troubleshooting-3d-plots"]], "3D plotting trouble after upgrade on macOS": [[832, "d-plotting-trouble-after-upgrade-on-macos"]], "Testing your installation": [[833, "testing-your-installation"]], "Contributing guide": [[834, "contributing-guide"]], "Overview of contribution process": [[834, "overview-of-contribution-process"]], "Setting up your local development environment": [[834, "setting-up-your-local-development-environment"]], "Configuring git": [[834, "configuring-git"]], "GNU Make": [[834, "gnu-make"]], "Forking the MNE-Python repository": [[834, "forking-the-mne-python-repository"]], "Creating the virtual environment": [[834, "creating-the-virtual-environment"]], "Basic git commands": [[834, "basic-git-commands"]], "Connecting to GitHub with SSH (optional)": [[834, "connecting-to-github-with-ssh-optional"]], "MNE-Python coding conventions": [[834, "mne-python-coding-conventions"]], "General requirements": [[834, "general-requirements"]], "All new functionality must have test coverage": [[834, "all-new-functionality-must-have-test-coverage"]], "All new functionality must be documented": [[834, "all-new-functionality-must-be-documented"]], "Avoid API changes when possible": [[834, "avoid-api-changes-when-possible"]], "Deprecate with a decorator or a warning": [[834, "deprecate-with-a-decorator-or-a-warning"]], "Describe your changes in the changelog": [[834, "describe-your-changes-in-the-changelog"]], "First-time contributors": [[834, "first-time-contributors"]], "Recurring contributors": [[834, "recurring-contributors"]], "Test locally before opening pull requests (PRs)": [[834, "test-locally-before-opening-pull-requests-prs"]], "Make tests fast and thorough": [[834, "make-tests-fast-and-thorough"]], "Code style": [[834, "code-style"]], "Adhere to standard Python style guidelines": [[834, "adhere-to-standard-python-style-guidelines"]], "Use consistent variable naming": [[834, "use-consistent-variable-naming"]], "We (mostly) follow NumPy style for docstrings": [[834, "we-mostly-follow-numpy-style-for-docstrings"]], "Cross-reference everywhere": [[834, "cross-reference-everywhere"]], "Other style guidance": [[834, "other-style-guidance"]], "Code organization": [[834, "code-organization"]], "Importing": [[834, "importing"]], "Return types": [[834, "return-types"]], "Running the test suite": [[834, "running-the-test-suite"]], "Building the documentation": [[834, "building-the-documentation"]], "Modifying command-line tools": [[834, "modifying-command-line-tools"]], "GitHub workflow": [[834, "github-workflow"]], "Installing FreeSurfer": [[835, "installing-freesurfer"]], "Installing MNE-Python": [[836, "installing-mne-python"]], "MNE-Python installers": [[837, "mne-python-installers"]], "VS Code Setup": [[837, "vs-code-setup"]], "Install via pip or conda": [[838, "install-via-pip-or-conda"]], "Installing MNE-Python with all dependencies": [[838, "installing-mne-python-with-all-dependencies"]], "Installing a minimal MNE-Python with core functionality only": [[838, "installing-a-minimal-mne-python-with-core-functionality-only"]], "Installing a minimal MNE-Python with EEGLAB I/O support": [[838, "installing-a-minimal-mne-python-with-eeglab-i-o-support"]], "Installing MNE-Python for other scenarios": [[838, "installing-mne-python-for-other-scenarios"]], "Python IDEs": [[838, "python-ides"]], "Installing Python": [[839, "installing-python"]], "Installing MNE-C": [[840, "installing-mne-c"]], "System requirements": [[840, "system-requirements"]], "<i class=\"fa-brands fa-apple\"></i> macOS": [[840, null]], "Downloading and Installing MNE-C": [[840, "downloading-and-installing-mne-c"]], "Configuring MNE-C": [[840, "configuring-mne-c"]], "Testing MNE-C installation": [[840, "testing-mne-c-installation"]], "Troubleshooting MNE-C installation": [[840, "troubleshooting-mne-c-installation"]], "Overview of the MNE tools suite": [[841, "overview-of-the-mne-tools-suite"]], "Related software": [[841, "related-software"]], "What should I install?": [[841, "what-should-i-install"]], "Getting help": [[841, "getting-help"], [855, "getting-help"]], "Updating MNE-Python": [[842, "updating-mne-python"]], "Upgrading MNE-Python only": [[842, "upgrading-mne-python-only"]], "Upgrading all packages": [[842, "upgrading-all-packages"]], "Upgrading to the development version": [[842, "upgrading-to-the-development-version"]], "Inverse Solutions": [[843, "inverse-solutions"]], "Logging and Configuration": [[844, "logging-and-configuration"]], "Martinos Center setup": [[845, "martinos-center-setup"]], "MNE with CPP": [[846, "mne-with-cpp"]], "Most-used classes": [[847, "most-used-classes"]], "MRI Processing": [[848, "mri-processing"]], "How to cite MNE-Python": [[849, "how-to-cite-mne-python"]], "Citing the software": [[849, "citing-the-software"]], "Citing the inverse imaging algorithms": [[849, "citing-the-inverse-imaging-algorithms"]], "Citing other algorithms": [[849, "citing-other-algorithms"]], "The typical M/EEG workflow": [[850, "the-typical-m-eeg-workflow"]], "Overview": [[850, "overview"], [860, "overview"]], "Artifact suppression": [[850, "artifact-suppression"]], "SSP": [[850, "ssp"]], "ICA": [[850, "ica"]], "Epoching and evoked data": [[850, "epoching-and-evoked-data"]], "Rejection using annotations": [[850, "rejection-using-annotations"]], "Source localization": [[850, "source-localization"]], "Anatomical information": [[850, "anatomical-information"]], "Cortical surface reconstruction with FreeSurfer": [[850, "cortical-surface-reconstruction-with-freesurfer"]], "Setting up the source space": [[850, "setting-up-the-source-space"]], "Recommended subdivisions of an icosahedron and an octahedron for\n       the creation of source spaces. The approximate source spacing and\n       corresponding surface area have been calculated assuming a\n       1000-cm2 surface area per hemisphere.": [[850, "id9"]], "Creating the BEM model meshes": [[850, "creating-the-bem-model-meshes"]], "Setting up the head surface triangulation files": [[850, "setting-up-the-head-surface-triangulation-files"]], "Setting up the boundary-element model": [[850, "setting-up-the-boundary-element-model"]], "Aligning coordinate frames": [[850, "aligning-coordinate-frames"]], "Computing the forward solution": [[850, "computing-the-forward-solution"], [857, "computing-the-forward-solution"]], "Computing the noise-covariance matrix": [[850, "computing-the-noise-covariance-matrix"]], "Calculating the inverse operator": [[850, "calculating-the-inverse-operator"]], "Creating source estimates": [[850, "creating-source-estimates"]], "Group analyses": [[850, "group-analyses"]], "Datasets Overview": [[851, "datasets-overview"]], "Sample": [[851, "sample"]], "Trigger codes for the sample data set.": [[851, "id20"]], "Contents of the data set": [[851, "contents-of-the-data-set"]], "Contents of the MEG/sample directory.": [[851, "id21"]], "Overview of the contents of the subjects/sample directory.": [[851, "id22"]], "UCL OPM Auditory": [[851, "ucl-opm-auditory"]], "Brainstorm": [[851, "brainstorm"]], "Auditory": [[851, "auditory"]], "Resting state": [[851, "resting-state"]], "Median nerve": [[851, "median-nerve"]], "SPM faces": [[851, "spm-faces"]], "EEGBCI motor imagery": [[851, "eegbci-motor-imagery"]], "Somatosensory": [[851, "somatosensory"]], "Multimodal": [[851, "multimodal"]], "fNIRS motor": [[851, "fnirs-motor"]], "High frequency SEF": [[851, "high-frequency-sef"]], "Visual 92 object categories": [[851, "visual-92-object-categories"]], "mTRF Dataset": [[851, "mtrf-dataset"]], "Kiloword dataset": [[851, "kiloword-dataset"]], "4D Neuroimaging / BTi dataset": [[851, "d-neuroimaging-bti-dataset"]], "OPM": [[851, "opm"]], "The Sleep PolySomnoGraphic Database": [[851, "the-sleep-polysomnographic-database"]], "Reference channel noise MEG data set": [[851, "reference-channel-noise-meg-data-set"]], "Miscellaneous Datasets": [[851, "miscellaneous-datasets"]], "fsaverage": [[851, "fsaverage"]], "Infant template MRIs": [[851, "infant-template-mris"]], "ECoG Dataset": [[851, "ecog-dataset"]], "sEEG Dataset": [[851, "seeg-dataset"]], "LIMO Dataset": [[851, "limo-dataset"]], "ERP CORE Dataset": [[851, "erp-core-dataset"]], "SSVEP": [[851, "ssvep"]], "Interactive versus scripted analysis": [[852, "interactive-versus-scripted-analysis"]], "Integration with the scientific python stack": [[852, "integration-with-the-scientific-python-stack"]], "Submodule-based organization": [[852, "submodule-based-organization"]], "(Mostly) unified API": [[852, "mostly-unified-api"]], "In-place operation": [[852, "in-place-operation"]], "MNE-Python Development": [[853, "mne-python-development"]], "Frequently Asked Questions (FAQ)": [[854, "frequently-asked-questions-faq"]], "General MNE-Python issues": [[854, "general-mne-python-issues"]], "Help! I can\u2019t get Python and MNE-Python working!": [[854, "help-i-can-t-get-python-and-mne-python-working"]], "I still can\u2019t get it to work!": [[854, "i-still-can-t-get-it-to-work"]], "I can\u2019t get PyVista/3D plotting to work under Windows": [[854, "i-can-t-get-pyvista-3d-plotting-to-work-under-windows"]], "Python runs on macOS extremely slow even on simple commands!": [[854, "python-runs-on-macos-extremely-slow-even-on-simple-commands"]], "How do I cite MNE?": [[854, "how-do-i-cite-mne"]], "I\u2019m not sure how to do X analysis step with my Y data\u2026": [[854, "i-m-not-sure-how-to-do-x-analysis-step-with-my-y-data"]], "I think I found a bug, what do I do?": [[854, "i-think-i-found-a-bug-what-do-i-do"]], "Why is it dangerous to \u201cpickle\u201d my MNE-Python objects and data for later use?": [[854, "why-is-it-dangerous-to-pickle-my-mne-python-objects-and-data-for-later-use"]], "I downloaded a dataset once, but MNE-Python is asking to download it again. Why?": [[854, "i-downloaded-a-dataset-once-but-mne-python-is-asking-to-download-it-again-why"]], "A function uses multiple CPU cores even though I didn\u2019t tell it to. Why?": [[854, "a-function-uses-multiple-cpu-cores-even-though-i-didn-t-tell-it-to-why"]], "I have a mystery FIF file, how do I read it?": [[854, "i-have-a-mystery-fif-file-how-do-i-read-it"]], "Resampling and decimating data": [[854, "resampling-and-decimating-data"]], "What are all these options for resampling, decimating, and binning data?": [[854, "what-are-all-these-options-for-resampling-decimating-and-binning-data"]], "Resampling raw data is taking forever! What do I do?": [[854, "resampling-raw-data-is-taking-forever-what-do-i-do"]], "Forward and Inverse Solution": [[854, "forward-and-inverse-solution"]], "My watershed BEM meshes look incorrect": [[854, "my-watershed-bem-meshes-look-incorrect"]], "Project Governance": [[856, "project-governance"]], "The Project": [[856, "the-project"]], "Governance model": [[856, "governance-model"]], "BDFL": [[856, "bdfl"]], "Steering Council": [[856, "steering-council"], [862, "steering-council"]], "Council membership": [[856, "council-membership"]], "Conflict of interest": [[856, "conflict-of-interest"]], "Private communications of the Council": [[856, "private-communications-of-the-council"]], "Council decision making": [[856, "council-decision-making"]], "Institutional Partners and funding": [[856, "institutional-partners-and-funding"]], "Document history": [[856, "document-history"], [862, "document-history"]], "Acknowledgements": [[856, "acknowledgements"]], "License": [[856, "license"]], "Algorithms and other implementation details": [[857, "algorithms-and-other-implementation-details"]], "Internal representation (units)": [[857, "internal-representation-units"]], "Floating-point precision": [[857, "floating-point-precision"]], "Supported channel types": [[857, "supported-channel-types"]], "Supported data formats": [[857, "supported-data-formats"]], "Supported formats for digitized 3D locations": [[857, "supported-formats-for-digitized-3d-locations"]], "Memory-efficient I/O": [[857, "memory-efficient-i-o"]], "Preloading continuous (raw) data": [[857, "preloading-continuous-raw-data"]], "Preloading epoched data": [[857, "preloading-epoched-data"]], "Loading data explicitly": [[857, "loading-data-explicitly"]], "Accessing data as NumPy arrays": [[857, "accessing-data-as-numpy-arrays"]], "Bad channel repair via interpolation": [[857, "bad-channel-repair-via-interpolation"]], "Maxwell filtering": [[857, "maxwell-filtering"]], "Signal-Space Projection (SSP)": [[857, "signal-space-projection-ssp"]], "General concepts": [[857, "general-concepts"]], "Estimation of the noise subspace": [[857, "estimation-of-the-noise-subspace"]], "EEG average electrode reference": [[857, "eeg-average-electrode-reference"]], "The Boundary Element Model (BEM)": [[857, "the-boundary-element-model-bem"]], "Using the watershed algorithm": [[857, "using-the-watershed-algorithm"]], "Using FLASH images": [[857, "using-flash-images"]], "Organizing MRI data into directories": [[857, "organizing-mri-data-into-directories"]], "Creating the surface tessellations": [[857, "creating-the-surface-tessellations"]], "Inspecting the meshes": [[857, "inspecting-the-meshes"]], "The forward solution": [[857, "the-forward-solution"]], "MEG/EEG and MRI coordinate systems": [[857, "meg-eeg-and-mri-coordinate-systems"]], "Coordinate transformations in FreeSurfer and MNE software packages.": [[857, "id18"]], "The head and device coordinate systems": [[857, "the-head-and-device-coordinate-systems"]], "Creating a surface-based source space": [[857, "creating-a-surface-based-source-space"]], "Creating a volumetric or discrete source space": [[857, "creating-a-volumetric-or-discrete-source-space"]], "Creating the BEM meshes": [[857, "creating-the-bem-meshes"]], "Topology checks": [[857, "topology-checks"]], "Computing the BEM geometry data": [[857, "computing-the-bem-geometry-data"]], "Coil geometry information": [[857, "coil-geometry-information"]], "The sensor coordinate system": [[857, "the-sensor-coordinate-system"]], "Calculation of the magnetic field": [[857, "calculation-of-the-magnetic-field"]], "Implemented coil geometries": [[857, "implemented-coil-geometries"]], "Normal coil descriptions.": [[857, "id20"]], "Accurate coil descriptions": [[857, "id21"]], "The coil definition file": [[857, "the-coil-definition-file"]], "Coil representation accuracies.": [[857, "id22"]], "Purpose": [[857, "purpose"]], "Implementation of software gradient compensation": [[857, "implementation-of-software-gradient-compensation"]], "The EEG sphere model definition file": [[857, "the-eeg-sphere-model-definition-file"]], "Structure of the default EEG model": [[857, "id23"]], "EEG forward solution in the sphere model": [[857, "eeg-forward-solution-in-the-sphere-model"]], "Averaging forward solutions": [[857, "averaging-forward-solutions"]], "The minimum-norm current estimates": [[857, "the-minimum-norm-current-estimates"]], "The linear inverse operator": [[857, "the-linear-inverse-operator"]], "Regularization": [[857, "regularization"]], "Whitening and scaling": [[857, "whitening-and-scaling"]], "Regularization of the noise-covariance matrix": [[857, "regularization-of-the-noise-covariance-matrix"]], "Computation of the solution": [[857, "computation-of-the-solution"]], "Noise normalization": [[857, "noise-normalization"]], "sLORETA": [[857, "sloreta"]], "eLORETA": [[857, "eloreta"]], "Predicted data": [[857, "predicted-data"]], "Cortical patch statistics": [[857, "cortical-patch-statistics"]], "Orientation constraints": [[857, "orientation-constraints"]], "Depth weighting": [[857, "depth-weighting"]], "Effective number of averages": [[857, "effective-number-of-averages"]], "Morphing and averaging source estimates": [[857, "morphing-and-averaging-source-estimates"]], "Why morphing?": [[857, "why-morphing"]], "The morphing maps": [[857, "the-morphing-maps"]], "About smoothing": [[857, "about-smoothing"]], "Documentation overview": [[858, "documentation-overview"]], "Getting started with Python": [[859, "getting-started-with-python"]], "MNE-MATLAB documentation": [[860, "mne-matlab-documentation"]], "High-level reading routines.": [[860, "id2"]], "Channel selection utilities.": [[860, "id3"]], "Coordinate transformation utilities.": [[860, "id4"]], "Basic reading routines.": [[860, "id5"]], "Writing routines.": [[860, "id6"]], "High-level data writing routines.": [[860, "id7"]], "Coil definition utilities.": [[860, "id8"]], "Routines for software gradient compensation and signal-space projection.": [[860, "id9"]], "High-level routines for reading MNE data files.": [[860, "id10"]], "High-level routines for writing MNE data files.": [[860, "id11"]], "Routines related to stc, w, and label files.": [[860, "id12"]], "Routines for reading FreeSurfer surfaces.": [[860, "id13"]], "Utility functions.": [[860, "id14"]], "Examples demonstrating the use of the toolbox.": [[860, "id15"]], "Some data structures": [[860, "some-data-structures"]], "FIFF constants.": [[860, "id16"]], "The tag structure.": [[860, "id17"]], "The taginfo structure.": [[860, "id18"]], "The directory structure.": [[860, "id19"]], "The id structure.": [[860, "id20"]], "The named matrix structure.": [[860, "id21"]], "The trans structure.": [[860, "id22"]], "The dig structure.": [[860, "id23"]], "The coildef structure. For more detailed information, see Coil geometry information.": [[860, "id24"]], "The ch structure.": [[860, "id25"]], "The proj structure.": [[860, "id26"]], "The comp structure.": [[860, "id27"]], "The meas info structure.": [[860, "id28"]], "The surf structure.": [[860, "id29"]], "The cov structure.": [[860, "id30"]], "The fwd structure.": [[860, "id31"]], "The inv structure. Note: The fields proj, whitener, reginv, and noisenorm are filled in by the routine mne_prepare_inverse_operator.": [[860, "id32"]], "On-line documentation for individual routines": [[860, "on-line-documentation-for-individual-routines"]], "Migrating from other analysis software": [[861, "migrating-from-other-analysis-software"]], "EEGLAB": [[861, "eeglab"]], "Potential pitfalls": [[861, "potential-pitfalls"]], "Current steering council and institutional partners": [[862, "current-steering-council-and-institutional-partners"]], "Benevolent Dictator for Life": [[862, "benevolent-dictator-for-life"]], "Community Participation Guidelines Response Leads": [[862, "community-participation-guidelines-response-leads"]], "Institutional Partners": [[862, "institutional-partners"]], "Roadmap": [[863, "roadmap"]], "Page contents": [[863, "page-contents"]], "Open": [[863, "open"]], "Time-frequency visualization": [[863, "time-frequency-visualization"]], "Clustering statistics API": [[863, "clustering-statistics-api"]], "Access to open EEG/MEG databases": [[863, "access-to-open-eeg-meg-databases"]], "Integrate OpenMEEG via improved Python bindings": [[863, "integrate-openmeeg-via-improved-python-bindings"]], "In progress": [[863, "in-progress"]], "Diversity, Equity, and Inclusion (DEI)": [[863, "diversity-equity-and-inclusion-dei"]], "First-class OPM support": [[863, "first-class-opm-support"]], "Deep source modeling": [[863, "deep-source-modeling"]], "Better sEEG/ECoG/DBS support": [[863, "better-seeg-ecog-dbs-support"]], "Time-frequency classes": [[863, "time-frequency-classes"]], "Pediatric and clinical MEG pipelines": [[863, "pediatric-and-clinical-meg-pipelines"]], "Statistics efficiency": [[863, "statistics-efficiency"]], "3D visualization": [[863, "d-visualization"]], "Documentation updates": [[863, "documentation-updates"]], "Completed": [[863, "completed"]], "Distributed computing support": [[863, "distributed-computing-support"]], "2D visualization": [[863, "id3"]], "Tutorial / example overhaul": [[863, "tutorial-example-overhaul"]], "Cluster computing images": [[863, "cluster-computing-images"]], "Python API Reference": [[865, "python-api-reference"]], "Reading raw data": [[866, "reading-raw-data"]], "Realtime": [[867, "realtime"]], "MNE-Report": [[868, "mne-report"]], "Sensor Space Data": [[869, "sensor-space-data"]], "Source Space Data": [[871, "source-space-data"]], "Statistics": [[872, "statistics"]], "Time-Frequency": [[873, "time-frequency"]], "What\u2019s new": [[875, "what-s-new"]], "Current (1.4.dev0)": [[875, "current-1-4-dev0"]], "Enhancements": [[875, "enhancements"], [875, "id2"], [875, "id5"], [875, "id9"], [875, "id12"], [875, "id16"], [875, "id20"], [875, "id24"], [875, "id28"]], "Bugs": [[875, "bugs"], [875, "id3"], [875, "id6"], [875, "id10"], [875, "id13"], [875, "id17"], [875, "id21"], [875, "id25"], [875, "id29"]], "API changes": [[875, "api-changes"], [875, "id4"], [875, "id7"], [875, "id14"], [875, "id18"], [875, "id22"], [875, "id26"], [875, "id30"]], "Version 1.3.0 (2022-12-21)": [[875, "version-1-3-0-2022-12-21"]], "Authors": [[875, "authors"], [875, "id8"], [875, "id11"], [875, "id15"], [875, "id19"], [875, "id23"], [875, "id27"], [875, "id31"], [875, "id32"], [875, "id42"], [875, "id46"], [875, "id50"], [875, "id54"], [875, "id58"], [875, "id62"], [875, "id66"], [875, "id70"], [875, "id74"], [875, "id78"], [875, "id81"], [875, "id84"], [875, "id87"], [875, "id89"], [875, "id91"], [875, "id93"], [875, "id94"]], "Version 1.2.0 (2022-10-11)": [[875, "version-1-2-0-2022-10-11"]], "Version 1.1.0 (2022-08-03)": [[875, "version-1-1-0-2022-08-03"]], "API and behavior changes": [[875, "api-and-behavior-changes"]], "Version 1.0.0 (2022-03-21)": [[875, "version-1-0-0-2022-03-21"]], "Dependencies": [[875, "dependencies"]], "Version 0.24.0 (2021-11-03)": [[875, "version-0-24-0-2021-11-03"]], "Version 0.23.0 (2021-04-27)": [[875, "version-0-23-0-2021-04-27"]], "Version 0.22.0 (2020-12-17)": [[875, "version-0-22-0-2020-12-17"]], "Version 0.21 (2020-09-21)": [[875, "version-0-21-2020-09-21"]], "Version 0.20 (2020-03-27)": [[875, "version-0-20-2020-03-27"]], "Changelog": [[875, "changelog"], [875, "id33"], [875, "id36"], [875, "id39"], [875, "id43"], [875, "id47"], [875, "id51"], [875, "id55"], [875, "id59"], [875, "id63"], [875, "id67"], [875, "id71"], [875, "id75"], [875, "id79"], [875, "id82"], [875, "id85"], [875, "id88"], [875, "id90"], [875, "id92"]], "Bug": [[875, "bug"], [875, "id34"], [875, "id37"], [875, "id40"], [875, "id44"]], "API": [[875, "api"], [875, "id35"], [875, "id38"], [875, "id41"], [875, "id45"], [875, "id49"], [875, "id53"], [875, "id57"], [875, "id61"], [875, "id65"], [875, "id69"], [875, "id73"], [875, "id77"], [875, "id80"], [875, "id83"], [875, "id86"]], "Version 0.19 (2019-09-24)": [[875, "version-0-19-2019-09-24"]], "Version 0.18 (2019-05-19)": [[875, "version-0-18-2019-05-19"]], "Version 0.17 (2018-11-19)": [[875, "version-0-17-2018-11-19"]], "Version 0.16 (2018-05-01)": [[875, "version-0-16-2018-05-01"]], "Version 0.15 (2017-10-20)": [[875, "version-0-15-2017-10-20"]], "BUG": [[875, "id48"], [875, "id52"], [875, "id56"], [875, "id60"], [875, "id64"], [875, "id68"], [875, "id72"], [875, "id76"]], "Version 0.14 (2017-03-24)": [[875, "version-0-14-2017-03-24"]], "Version 0.13 (2016-09-27)": [[875, "version-0-13-2016-09-27"]], "Version 0.12 (2016-05-10)": [[875, "version-0-12-2016-05-10"]], "Version 0.11 (2015-12-24)": [[875, "version-0-11-2015-12-24"]], "Version 0.10 (2015-10-26)": [[875, "version-0-10-2015-10-26"]], "Version 0.9 (2015-05-22)": [[875, "version-0-9-2015-05-22"]], "Version 0.8 (2014-06-25)": [[875, "version-0-8-2014-06-25"]], "Version 0.7 (2013-11-26)": [[875, "version-0-7-2013-11-26"]], "Version 0.6 (2013-06-15)": [[875, "version-0-6-2013-06-15"]], "Version 0.5 (2012-12-27)": [[875, "version-0-5-2012-12-27"]], "Version 0.4 (2012-08-24)": [[875, "version-0-4-2012-08-24"]], "Version 0.3 (2012-03-23)": [[875, "version-0-3-2012-03-23"]], "Version 0.2 (2011-11-08)": [[875, "version-0-2-2011-11-08"]], "API changes summary": [[875, "api-changes-summary"]], "Version 0.1 (2011-09-23)": [[875, "version-0-1-2011-09-23"]]}, "indexentries": {"mne.datasets": [[247, "module-mne.datasets"]], "module": [[247, "module-mne.datasets"], [248, "module-mne.decoding"], [249, "module-mne.epochs"], [249, "module-mne.event"], [250, "module-mne.export"], [252, "module-mne.bem"], [843, "module-mne.beamformer"], [843, "module-mne.dipole"], [843, "module-mne.inverse_sparse"], [843, "module-mne.minimum_norm"], [844, "module-mne.cuda"], [844, "module-mne.utils"], [864, "module-mne.channels"], [864, "module-mne.chpi"], [864, "module-mne.filter"], [864, "module-mne.preprocessing"], [864, "module-mne.preprocessing.ieeg"], [864, "module-mne.preprocessing.nirs"], [864, "module-mne.transforms"], [865, "module-mne"], [866, "module-mne.io"], [866, "module-mne.io.kit"], [869, "module-mne.baseline"], [870, "module-mne.simulation"], [870, "module-mne.simulation.metrics"], [872, "module-mne.stats"], [873, "module-mne.time_frequency"], [873, "module-mne.time_frequency.tfr"], [874, "module-mne.viz"]], "mne.decoding": [[248, "module-mne.decoding"]], "mne.epochs": [[249, "module-mne.epochs"]], "mne.event": [[249, "module-mne.event"]], "mne.export": [[250, "module-mne.export"]], "mne.bem": [[252, "module-mne.bem"]], "acqparserfif (class in mne)": [[255, "mne.AcqParserFIF"]], "__getitem__() (mne.acqparserfif method)": [[255, "mne.AcqParserFIF.__getitem__"]], "__len__() (mne.acqparserfif method)": [[255, "mne.AcqParserFIF.__len__"]], "categories (mne.acqparserfif property)": [[255, "mne.AcqParserFIF.categories"]], "events (mne.acqparserfif property)": [[255, "mne.AcqParserFIF.events"]], "get_condition() (mne.acqparserfif method)": [[255, "mne.AcqParserFIF.get_condition"]], "annotations (class in mne)": [[256, "mne.Annotations"]], "__add__() (mne.annotations method)": [[256, "mne.Annotations.__add__"]], "__getitem__() (mne.annotations method)": [[256, "mne.Annotations.__getitem__"]], "__iter__() (mne.annotations method)": [[256, "mne.Annotations.__iter__"]], "__len__() (mne.annotations method)": [[256, "mne.Annotations.__len__"]], "append() (mne.annotations method)": [[256, "mne.Annotations.append"]], "copy() (mne.annotations method)": [[256, "mne.Annotations.copy"]], "crop() (mne.annotations method)": [[256, "mne.Annotations.crop"]], "delete() (mne.annotations method)": [[256, "mne.Annotations.delete"]], "orig_time (mne.annotations property)": [[256, "mne.Annotations.orig_time"]], "rename() (mne.annotations method)": [[256, "mne.Annotations.rename"]], "save() (mne.annotations method)": [[256, "mne.Annotations.save"]], "set_durations() (mne.annotations method)": [[256, "mne.Annotations.set_durations"]], "to_data_frame() (mne.annotations method)": [[256, "mne.Annotations.to_data_frame"]], "baseepochs (class in mne)": [[257, "mne.BaseEpochs"]], "bihemilabel (class in mne)": [[258, "mne.BiHemiLabel"]], "__add__() (mne.bihemilabel method)": [[258, "mne.BiHemiLabel.__add__"]], "__len__() (mne.bihemilabel method)": [[258, "mne.BiHemiLabel.__len__"]], "__sub__() (mne.bihemilabel method)": [[258, "mne.BiHemiLabel.__sub__"]], "covariance (class in mne)": [[259, "mne.Covariance"]], "__add__() (mne.covariance method)": [[259, "mne.Covariance.__add__"]], "__contains__() (mne.covariance method)": [[259, "mne.Covariance.__contains__"]], "__getitem__() (mne.covariance method)": [[259, "mne.Covariance.__getitem__"]], "__iter__() (mne.covariance method)": [[259, "mne.Covariance.__iter__"]], "__len__() (mne.covariance method)": [[259, "mne.Covariance.__len__"]], "as_diag() (mne.covariance method)": [[259, "mne.Covariance.as_diag"]], "ch_names (mne.covariance property)": [[259, "mne.Covariance.ch_names"]], "clear() (mne.covariance method)": [[259, "mne.Covariance.clear"]], "copy() (mne.covariance method)": [[259, "mne.Covariance.copy"]], "data (mne.covariance property)": [[259, "mne.Covariance.data"]], "fromkeys() (mne.covariance method)": [[259, "mne.Covariance.fromkeys"]], "get() (mne.covariance method)": [[259, "mne.Covariance.get"]], "items() (mne.covariance method)": [[259, "mne.Covariance.items"]], "keys() (mne.covariance method)": [[259, "mne.Covariance.keys"]], "nfree (mne.covariance property)": [[259, "mne.Covariance.nfree"]], "pick_channels() (mne.covariance method)": [[259, "mne.Covariance.pick_channels"]], "plot() (mne.covariance method)": [[259, "mne.Covariance.plot"]], "plot_topomap() (mne.covariance method)": [[259, "mne.Covariance.plot_topomap"]], "pop() (mne.covariance method)": [[259, "mne.Covariance.pop"]], "popitem() (mne.covariance method)": [[259, "mne.Covariance.popitem"]], "save() (mne.covariance method)": [[259, "mne.Covariance.save"]], "setdefault() (mne.covariance method)": [[259, "mne.Covariance.setdefault"]], "update() (mne.covariance method)": [[259, "mne.Covariance.update"]], "values() (mne.covariance method)": [[259, "mne.Covariance.values"]], "dipole (class in mne)": [[260, "mne.Dipole"]], "__getitem__() (mne.dipole method)": [[260, "mne.Dipole.__getitem__"]], "__len__() (mne.dipole method)": [[260, "mne.Dipole.__len__"]], "copy() (mne.dipole method)": [[260, "mne.Dipole.copy"]], "crop() (mne.dipole method)": [[260, "mne.Dipole.crop"]], "decimate() (mne.dipole method)": [[260, "mne.Dipole.decimate"]], "plot_amplitudes() (mne.dipole method)": [[260, "mne.Dipole.plot_amplitudes"]], "plot_locations() (mne.dipole method)": [[260, "mne.Dipole.plot_locations"]], "save() (mne.dipole method)": [[260, "mne.Dipole.save"]], "shift_time() (mne.dipole method)": [[260, "mne.Dipole.shift_time"]], "time_as_index() (mne.dipole method)": [[260, "mne.Dipole.time_as_index"]], "times (mne.dipole property)": [[260, "mne.Dipole.times"]], "tmax (mne.dipole property)": [[260, "mne.Dipole.tmax"]], "tmin (mne.dipole property)": [[260, "mne.Dipole.tmin"]], "to_mni() (mne.dipole method)": [[260, "mne.Dipole.to_mni"]], "to_mri() (mne.dipole method)": [[260, "mne.Dipole.to_mri"]], "to_volume_labels() (mne.dipole method)": [[260, "mne.Dipole.to_volume_labels"]], "dipolefixed (class in mne)": [[261, "mne.DipoleFixed"]], "ch_names (mne.dipolefixed property)": [[261, "mne.DipoleFixed.ch_names"]], "copy() (mne.dipolefixed method)": [[261, "mne.DipoleFixed.copy"]], "crop() (mne.dipolefixed method)": [[261, "mne.DipoleFixed.crop"]], "decimate() (mne.dipolefixed method)": [[261, "mne.DipoleFixed.decimate"]], "plot() (mne.dipolefixed method)": [[261, "mne.DipoleFixed.plot"]], "save() (mne.dipolefixed method)": [[261, "mne.DipoleFixed.save"]], "shift_time() (mne.dipolefixed method)": [[261, "mne.DipoleFixed.shift_time"]], "time_as_index() (mne.dipolefixed method)": [[261, "mne.DipoleFixed.time_as_index"]], "times (mne.dipolefixed property)": [[261, "mne.DipoleFixed.times"]], "tmax (mne.dipolefixed property)": [[261, "mne.DipoleFixed.tmax"]], "tmin (mne.dipolefixed property)": [[261, "mne.DipoleFixed.tmin"]], "epochs (class in mne)": [[262, "mne.Epochs"]], "__contains__() (mne.epochs method)": [[262, "mne.Epochs.__contains__"]], "__getitem__() (mne.epochs method)": [[262, "mne.Epochs.__getitem__"]], "__iter__() (mne.epochs method)": [[262, "mne.Epochs.__iter__"]], "__len__() (mne.epochs method)": [[262, "mne.Epochs.__len__"]], "add_annotations_to_metadata() (mne.epochs method)": [[262, "mne.Epochs.add_annotations_to_metadata"]], "add_channels() (mne.epochs method)": [[262, "mne.Epochs.add_channels"]], "add_proj() (mne.epochs method)": [[262, "mne.Epochs.add_proj"]], "add_reference_channels() (mne.epochs method)": [[262, "mne.Epochs.add_reference_channels"]], "anonymize() (mne.epochs method)": [[262, "mne.Epochs.anonymize"]], "apply_baseline() (mne.epochs method)": [[262, "mne.Epochs.apply_baseline"]], "apply_function() (mne.epochs method)": [[262, "mne.Epochs.apply_function"]], "apply_hilbert() (mne.epochs method)": [[262, "mne.Epochs.apply_hilbert"]], "apply_proj() (mne.epochs method)": [[262, "mne.Epochs.apply_proj"]], "as_type() (mne.epochs method)": [[262, "mne.Epochs.as_type"]], "average() (mne.epochs method)": [[262, "mne.Epochs.average"]], "ch_names (mne.epochs property)": [[262, "mne.Epochs.ch_names"]], "compensation_grade (mne.epochs property)": [[262, "mne.Epochs.compensation_grade"]], "compute_psd() (mne.epochs method)": [[262, "mne.Epochs.compute_psd"]], "copy() (mne.epochs method)": [[262, "mne.Epochs.copy"]], "crop() (mne.epochs method)": [[262, "mne.Epochs.crop"]], "decimate() (mne.epochs method)": [[262, "mne.Epochs.decimate"]], "del_proj() (mne.epochs method)": [[262, "mne.Epochs.del_proj"]], "drop() (mne.epochs method)": [[262, "mne.Epochs.drop"]], "drop_bad() (mne.epochs method)": [[262, "mne.Epochs.drop_bad"]], "drop_channels() (mne.epochs method)": [[262, "mne.Epochs.drop_channels"]], "drop_log_stats() (mne.epochs method)": [[262, "mne.Epochs.drop_log_stats"]], "equalize_event_counts() (mne.epochs method)": [[262, "mne.Epochs.equalize_event_counts"]], "export() (mne.epochs method)": [[262, "mne.Epochs.export"]], "filename (mne.epochs property)": [[262, "mne.Epochs.filename"]], "filter() (mne.epochs method)": [[262, "mne.Epochs.filter"]], "get_annotations_per_epoch() (mne.epochs method)": [[262, "mne.Epochs.get_annotations_per_epoch"]], "get_channel_types() (mne.epochs method)": [[262, "mne.Epochs.get_channel_types"]], "get_data() (mne.epochs method)": [[262, "mne.Epochs.get_data"]], "get_montage() (mne.epochs method)": [[262, "mne.Epochs.get_montage"]], "interpolate_bads() (mne.epochs method)": [[262, "mne.Epochs.interpolate_bads"]], "iter_evoked() (mne.epochs method)": [[262, "mne.Epochs.iter_evoked"]], "load_data() (mne.epochs method)": [[262, "mne.Epochs.load_data"]], "metadata (mne.epochs property)": [[262, "mne.Epochs.metadata"]], "next() (mne.epochs method)": [[262, "mne.Epochs.next"]], "pick() (mne.epochs method)": [[262, "mne.Epochs.pick"]], "pick_channels() (mne.epochs method)": [[262, "mne.Epochs.pick_channels"]], "pick_types() (mne.epochs method)": [[262, "mne.Epochs.pick_types"]], "plot() (mne.epochs method)": [[262, "mne.Epochs.plot"]], "plot_drop_log() (mne.epochs method)": [[262, "mne.Epochs.plot_drop_log"]], "plot_image() (mne.epochs method)": [[262, "mne.Epochs.plot_image"]], "plot_projs_topomap() (mne.epochs method)": [[262, "mne.Epochs.plot_projs_topomap"]], "plot_psd() (mne.epochs method)": [[262, "mne.Epochs.plot_psd"]], "plot_psd_topo() (mne.epochs method)": [[262, "mne.Epochs.plot_psd_topo"]], "plot_psd_topomap() (mne.epochs method)": [[262, "mne.Epochs.plot_psd_topomap"]], "plot_sensors() (mne.epochs method)": [[262, "mne.Epochs.plot_sensors"]], "plot_topo_image() (mne.epochs method)": [[262, "mne.Epochs.plot_topo_image"]], "proj (mne.epochs property)": [[262, "mne.Epochs.proj"]], "rename_channels() (mne.epochs method)": [[262, "mne.Epochs.rename_channels"]], "reorder_channels() (mne.epochs method)": [[262, "mne.Epochs.reorder_channels"]], "resample() (mne.epochs method)": [[262, "mne.Epochs.resample"]], "reset_drop_log_selection() (mne.epochs method)": [[262, "mne.Epochs.reset_drop_log_selection"]], "save() (mne.epochs method)": [[262, "mne.Epochs.save"]], "savgol_filter() (mne.epochs method)": [[262, "mne.Epochs.savgol_filter"]], "set_annotations() (mne.epochs method)": [[262, "mne.Epochs.set_annotations"]], "set_channel_types() (mne.epochs method)": [[262, "mne.Epochs.set_channel_types"]], "set_eeg_reference() (mne.epochs method)": [[262, "mne.Epochs.set_eeg_reference"]], "set_meas_date() (mne.epochs method)": [[262, "mne.Epochs.set_meas_date"]], "set_montage() (mne.epochs method)": [[262, "mne.Epochs.set_montage"]], "shift_time() (mne.epochs method)": [[262, "mne.Epochs.shift_time"]], "standard_error() (mne.epochs method)": [[262, "mne.Epochs.standard_error"]], "subtract_evoked() (mne.epochs method)": [[262, "mne.Epochs.subtract_evoked"]], "time_as_index() (mne.epochs method)": [[262, "mne.Epochs.time_as_index"]], "times (mne.epochs property)": [[262, "mne.Epochs.times"]], "tmax (mne.epochs property)": [[262, "mne.Epochs.tmax"]], "tmin (mne.epochs property)": [[262, "mne.Epochs.tmin"]], "to_data_frame() (mne.epochs method)": [[262, "mne.Epochs.to_data_frame"]], "epochsarray (class in mne)": [[263, "mne.EpochsArray"]], "__contains__() (mne.epochsarray method)": [[263, "mne.EpochsArray.__contains__"]], "__getitem__() (mne.epochsarray method)": [[263, "mne.EpochsArray.__getitem__"]], "__iter__() (mne.epochsarray method)": [[263, "mne.EpochsArray.__iter__"]], "__len__() (mne.epochsarray method)": [[263, "mne.EpochsArray.__len__"]], "add_annotations_to_metadata() (mne.epochsarray method)": [[263, "mne.EpochsArray.add_annotations_to_metadata"]], "add_channels() (mne.epochsarray method)": [[263, "mne.EpochsArray.add_channels"]], "add_proj() (mne.epochsarray method)": [[263, "mne.EpochsArray.add_proj"]], "add_reference_channels() (mne.epochsarray method)": [[263, "mne.EpochsArray.add_reference_channels"]], "anonymize() (mne.epochsarray method)": [[263, "mne.EpochsArray.anonymize"]], "apply_baseline() (mne.epochsarray method)": [[263, "mne.EpochsArray.apply_baseline"]], "apply_function() (mne.epochsarray method)": [[263, "mne.EpochsArray.apply_function"]], "apply_hilbert() (mne.epochsarray method)": [[263, "mne.EpochsArray.apply_hilbert"]], "apply_proj() (mne.epochsarray method)": [[263, "mne.EpochsArray.apply_proj"]], "as_type() (mne.epochsarray method)": [[263, "mne.EpochsArray.as_type"]], "average() (mne.epochsarray method)": [[263, "mne.EpochsArray.average"]], "ch_names (mne.epochsarray property)": [[263, "mne.EpochsArray.ch_names"]], "compensation_grade (mne.epochsarray property)": [[263, "mne.EpochsArray.compensation_grade"]], "compute_psd() (mne.epochsarray method)": [[263, "mne.EpochsArray.compute_psd"]], "copy() (mne.epochsarray method)": [[263, "mne.EpochsArray.copy"]], "crop() (mne.epochsarray method)": [[263, "mne.EpochsArray.crop"]], "decimate() (mne.epochsarray method)": [[263, "mne.EpochsArray.decimate"]], "del_proj() (mne.epochsarray method)": [[263, "mne.EpochsArray.del_proj"]], "drop() (mne.epochsarray method)": [[263, "mne.EpochsArray.drop"]], "drop_bad() (mne.epochsarray method)": [[263, "mne.EpochsArray.drop_bad"]], "drop_channels() (mne.epochsarray method)": [[263, "mne.EpochsArray.drop_channels"]], "drop_log_stats() (mne.epochsarray method)": [[263, "mne.EpochsArray.drop_log_stats"]], "equalize_event_counts() (mne.epochsarray method)": [[263, "mne.EpochsArray.equalize_event_counts"]], "export() (mne.epochsarray method)": [[263, "mne.EpochsArray.export"]], "filename (mne.epochsarray property)": [[263, "mne.EpochsArray.filename"]], "filter() (mne.epochsarray method)": [[263, "mne.EpochsArray.filter"]], "get_annotations_per_epoch() (mne.epochsarray method)": [[263, "mne.EpochsArray.get_annotations_per_epoch"]], "get_channel_types() (mne.epochsarray method)": [[263, "mne.EpochsArray.get_channel_types"]], "get_data() (mne.epochsarray method)": [[263, "mne.EpochsArray.get_data"]], "get_montage() (mne.epochsarray method)": [[263, "mne.EpochsArray.get_montage"]], "interpolate_bads() (mne.epochsarray method)": [[263, "mne.EpochsArray.interpolate_bads"]], "iter_evoked() (mne.epochsarray method)": [[263, "mne.EpochsArray.iter_evoked"]], "load_data() (mne.epochsarray method)": [[263, "mne.EpochsArray.load_data"]], "metadata (mne.epochsarray property)": [[263, "mne.EpochsArray.metadata"]], "next() (mne.epochsarray method)": [[263, "mne.EpochsArray.next"]], "pick() (mne.epochsarray method)": [[263, "mne.EpochsArray.pick"]], "pick_channels() (mne.epochsarray method)": [[263, "mne.EpochsArray.pick_channels"]], "pick_types() (mne.epochsarray method)": [[263, "mne.EpochsArray.pick_types"]], "plot() (mne.epochsarray method)": [[263, "mne.EpochsArray.plot"]], "plot_drop_log() (mne.epochsarray method)": [[263, "mne.EpochsArray.plot_drop_log"]], "plot_image() (mne.epochsarray method)": [[263, "mne.EpochsArray.plot_image"]], "plot_projs_topomap() (mne.epochsarray method)": [[263, "mne.EpochsArray.plot_projs_topomap"]], "plot_psd() (mne.epochsarray method)": [[263, "mne.EpochsArray.plot_psd"]], "plot_psd_topo() (mne.epochsarray method)": [[263, "mne.EpochsArray.plot_psd_topo"]], "plot_psd_topomap() (mne.epochsarray method)": [[263, "mne.EpochsArray.plot_psd_topomap"]], "plot_sensors() (mne.epochsarray method)": [[263, "mne.EpochsArray.plot_sensors"]], "plot_topo_image() (mne.epochsarray method)": [[263, "mne.EpochsArray.plot_topo_image"]], "proj (mne.epochsarray property)": [[263, "mne.EpochsArray.proj"]], "rename_channels() (mne.epochsarray method)": [[263, "mne.EpochsArray.rename_channels"]], "reorder_channels() (mne.epochsarray method)": [[263, "mne.EpochsArray.reorder_channels"]], "resample() (mne.epochsarray method)": [[263, "mne.EpochsArray.resample"]], "reset_drop_log_selection() (mne.epochsarray method)": [[263, "mne.EpochsArray.reset_drop_log_selection"]], "save() (mne.epochsarray method)": [[263, "mne.EpochsArray.save"]], "savgol_filter() (mne.epochsarray method)": [[263, "mne.EpochsArray.savgol_filter"]], "set_annotations() (mne.epochsarray method)": [[263, "mne.EpochsArray.set_annotations"]], "set_channel_types() (mne.epochsarray method)": [[263, "mne.EpochsArray.set_channel_types"]], "set_eeg_reference() (mne.epochsarray method)": [[263, "mne.EpochsArray.set_eeg_reference"]], "set_meas_date() (mne.epochsarray method)": [[263, "mne.EpochsArray.set_meas_date"]], "set_montage() (mne.epochsarray method)": [[263, "mne.EpochsArray.set_montage"]], "shift_time() (mne.epochsarray method)": [[263, "mne.EpochsArray.shift_time"]], "standard_error() (mne.epochsarray method)": [[263, "mne.EpochsArray.standard_error"]], "subtract_evoked() (mne.epochsarray method)": [[263, "mne.EpochsArray.subtract_evoked"]], "time_as_index() (mne.epochsarray method)": [[263, "mne.EpochsArray.time_as_index"]], "times (mne.epochsarray property)": [[263, "mne.EpochsArray.times"]], "tmax (mne.epochsarray property)": [[263, "mne.EpochsArray.tmax"]], "tmin (mne.epochsarray property)": [[263, "mne.EpochsArray.tmin"]], "to_data_frame() (mne.epochsarray method)": [[263, "mne.EpochsArray.to_data_frame"]], "evoked (class in mne)": [[264, "mne.Evoked"]], "__contains__() (mne.evoked method)": [[264, "mne.Evoked.__contains__"]], "__neg__() (mne.evoked method)": [[264, "mne.Evoked.__neg__"]], "add_channels() (mne.evoked method)": [[264, "mne.Evoked.add_channels"]], "add_proj() (mne.evoked method)": [[264, "mne.Evoked.add_proj"]], "add_reference_channels() (mne.evoked method)": [[264, "mne.Evoked.add_reference_channels"]], "animate_topomap() (mne.evoked method)": [[264, "mne.Evoked.animate_topomap"]], "anonymize() (mne.evoked method)": [[264, "mne.Evoked.anonymize"]], "apply_baseline() (mne.evoked method)": [[264, "mne.Evoked.apply_baseline"]], "apply_function() (mne.evoked method)": [[264, "mne.Evoked.apply_function"]], "apply_hilbert() (mne.evoked method)": [[264, "mne.Evoked.apply_hilbert"]], "apply_proj() (mne.evoked method)": [[264, "mne.Evoked.apply_proj"]], "as_type() (mne.evoked method)": [[264, "mne.Evoked.as_type"]], "ch_names (mne.evoked property)": [[264, "mne.Evoked.ch_names"]], "compensation_grade (mne.evoked property)": [[264, "mne.Evoked.compensation_grade"]], "compute_psd() (mne.evoked method)": [[264, "mne.Evoked.compute_psd"]], "copy() (mne.evoked method)": [[264, "mne.Evoked.copy"]], "crop() (mne.evoked method)": [[264, "mne.Evoked.crop"]], "data (mne.evoked property)": [[264, "mne.Evoked.data"]], "decimate() (mne.evoked method)": [[264, "mne.Evoked.decimate"]], "del_proj() (mne.evoked method)": [[264, "mne.Evoked.del_proj"]], "detrend() (mne.evoked method)": [[264, "mne.Evoked.detrend"]], "drop_channels() (mne.evoked method)": [[264, "mne.Evoked.drop_channels"]], "export() (mne.evoked method)": [[264, "mne.Evoked.export"]], "filter() (mne.evoked method)": [[264, "mne.Evoked.filter"]], "get_channel_types() (mne.evoked method)": [[264, "mne.Evoked.get_channel_types"]], "get_data() (mne.evoked method)": [[264, "mne.Evoked.get_data"]], "get_montage() (mne.evoked method)": [[264, "mne.Evoked.get_montage"]], "get_peak() (mne.evoked method)": [[264, "mne.Evoked.get_peak"]], "interpolate_bads() (mne.evoked method)": [[264, "mne.Evoked.interpolate_bads"]], "kind (mne.evoked property)": [[264, "mne.Evoked.kind"]], "pick() (mne.evoked method)": [[264, "mne.Evoked.pick"]], "pick_channels() (mne.evoked method)": [[264, "mne.Evoked.pick_channels"]], "pick_types() (mne.evoked method)": [[264, "mne.Evoked.pick_types"]], "plot() (mne.evoked method)": [[264, "mne.Evoked.plot"]], "plot_field() (mne.evoked method)": [[264, "mne.Evoked.plot_field"]], "plot_image() (mne.evoked method)": [[264, "mne.Evoked.plot_image"]], "plot_joint() (mne.evoked method)": [[264, "mne.Evoked.plot_joint"]], "plot_projs_topomap() (mne.evoked method)": [[264, "mne.Evoked.plot_projs_topomap"]], "plot_psd() (mne.evoked method)": [[264, "mne.Evoked.plot_psd"]], "plot_psd_topo() (mne.evoked method)": [[264, "mne.Evoked.plot_psd_topo"]], "plot_psd_topomap() (mne.evoked method)": [[264, "mne.Evoked.plot_psd_topomap"]], "plot_sensors() (mne.evoked method)": [[264, "mne.Evoked.plot_sensors"]], "plot_topo() (mne.evoked method)": [[264, "mne.Evoked.plot_topo"]], "plot_topomap() (mne.evoked method)": [[264, "mne.Evoked.plot_topomap"]], "plot_white() (mne.evoked method)": [[264, "mne.Evoked.plot_white"]], "proj (mne.evoked property)": [[264, "mne.Evoked.proj"]], "rename_channels() (mne.evoked method)": [[264, "mne.Evoked.rename_channels"]], "reorder_channels() (mne.evoked method)": [[264, "mne.Evoked.reorder_channels"]], "resample() (mne.evoked method)": [[264, "mne.Evoked.resample"]], "save() (mne.evoked method)": [[264, "mne.Evoked.save"]], "savgol_filter() (mne.evoked method)": [[264, "mne.Evoked.savgol_filter"]], "set_channel_types() (mne.evoked method)": [[264, "mne.Evoked.set_channel_types"]], "set_eeg_reference() (mne.evoked method)": [[264, "mne.Evoked.set_eeg_reference"]], "set_meas_date() (mne.evoked method)": [[264, "mne.Evoked.set_meas_date"]], "set_montage() (mne.evoked method)": [[264, "mne.Evoked.set_montage"]], "shift_time() (mne.evoked method)": [[264, "mne.Evoked.shift_time"]], "time_as_index() (mne.evoked method)": [[264, "mne.Evoked.time_as_index"]], "times (mne.evoked property)": [[264, "mne.Evoked.times"]], "tmax (mne.evoked property)": [[264, "mne.Evoked.tmax"]], "tmin (mne.evoked property)": [[264, "mne.Evoked.tmin"]], "to_data_frame() (mne.evoked method)": [[264, "mne.Evoked.to_data_frame"]], "evokedarray (class in mne)": [[265, "mne.EvokedArray"]], "__contains__() (mne.evokedarray method)": [[265, "mne.EvokedArray.__contains__"]], "__neg__() (mne.evokedarray method)": [[265, "mne.EvokedArray.__neg__"]], "add_channels() (mne.evokedarray method)": [[265, "mne.EvokedArray.add_channels"]], "add_proj() (mne.evokedarray method)": [[265, "mne.EvokedArray.add_proj"]], "add_reference_channels() (mne.evokedarray method)": [[265, "mne.EvokedArray.add_reference_channels"]], "animate_topomap() (mne.evokedarray method)": [[265, "mne.EvokedArray.animate_topomap"]], "anonymize() (mne.evokedarray method)": [[265, "mne.EvokedArray.anonymize"]], "apply_baseline() (mne.evokedarray method)": [[265, "mne.EvokedArray.apply_baseline"]], "apply_function() (mne.evokedarray method)": [[265, "mne.EvokedArray.apply_function"]], "apply_hilbert() (mne.evokedarray method)": [[265, "mne.EvokedArray.apply_hilbert"]], "apply_proj() (mne.evokedarray method)": [[265, "mne.EvokedArray.apply_proj"]], "as_type() (mne.evokedarray method)": [[265, "mne.EvokedArray.as_type"]], "ch_names (mne.evokedarray property)": [[265, "mne.EvokedArray.ch_names"]], "compensation_grade (mne.evokedarray property)": [[265, "mne.EvokedArray.compensation_grade"]], "compute_psd() (mne.evokedarray method)": [[265, "mne.EvokedArray.compute_psd"]], "copy() (mne.evokedarray method)": [[265, "mne.EvokedArray.copy"]], "crop() (mne.evokedarray method)": [[265, "mne.EvokedArray.crop"]], "data (mne.evokedarray property)": [[265, "mne.EvokedArray.data"]], "decimate() (mne.evokedarray method)": [[265, "mne.EvokedArray.decimate"]], "del_proj() (mne.evokedarray method)": [[265, "mne.EvokedArray.del_proj"]], "detrend() (mne.evokedarray method)": [[265, "mne.EvokedArray.detrend"]], "drop_channels() (mne.evokedarray method)": [[265, "mne.EvokedArray.drop_channels"]], "export() (mne.evokedarray method)": [[265, "mne.EvokedArray.export"]], "filter() (mne.evokedarray method)": [[265, "mne.EvokedArray.filter"]], "get_channel_types() (mne.evokedarray method)": [[265, "mne.EvokedArray.get_channel_types"]], "get_data() (mne.evokedarray method)": [[265, "mne.EvokedArray.get_data"]], "get_montage() (mne.evokedarray method)": [[265, "mne.EvokedArray.get_montage"]], "get_peak() (mne.evokedarray method)": [[265, "mne.EvokedArray.get_peak"]], "interpolate_bads() (mne.evokedarray method)": [[265, "mne.EvokedArray.interpolate_bads"]], "kind (mne.evokedarray property)": [[265, "mne.EvokedArray.kind"]], "pick() (mne.evokedarray method)": [[265, "mne.EvokedArray.pick"]], "pick_channels() (mne.evokedarray method)": [[265, "mne.EvokedArray.pick_channels"]], "pick_types() (mne.evokedarray method)": [[265, "mne.EvokedArray.pick_types"]], "plot() (mne.evokedarray method)": [[265, "mne.EvokedArray.plot"]], "plot_field() (mne.evokedarray method)": [[265, "mne.EvokedArray.plot_field"]], "plot_image() (mne.evokedarray method)": [[265, "mne.EvokedArray.plot_image"]], "plot_joint() (mne.evokedarray method)": [[265, "mne.EvokedArray.plot_joint"]], "plot_projs_topomap() (mne.evokedarray method)": [[265, "mne.EvokedArray.plot_projs_topomap"]], "plot_psd() (mne.evokedarray method)": [[265, "mne.EvokedArray.plot_psd"]], "plot_psd_topo() (mne.evokedarray method)": [[265, "mne.EvokedArray.plot_psd_topo"]], "plot_psd_topomap() (mne.evokedarray method)": [[265, "mne.EvokedArray.plot_psd_topomap"]], "plot_sensors() (mne.evokedarray method)": [[265, "mne.EvokedArray.plot_sensors"]], "plot_topo() (mne.evokedarray method)": [[265, "mne.EvokedArray.plot_topo"]], "plot_topomap() (mne.evokedarray method)": [[265, "mne.EvokedArray.plot_topomap"]], "plot_white() (mne.evokedarray method)": [[265, "mne.EvokedArray.plot_white"]], "proj (mne.evokedarray property)": [[265, "mne.EvokedArray.proj"]], "rename_channels() (mne.evokedarray method)": [[265, "mne.EvokedArray.rename_channels"]], "reorder_channels() (mne.evokedarray method)": [[265, "mne.EvokedArray.reorder_channels"]], "resample() (mne.evokedarray method)": [[265, "mne.EvokedArray.resample"]], "save() (mne.evokedarray method)": [[265, "mne.EvokedArray.save"]], "savgol_filter() (mne.evokedarray method)": [[265, "mne.EvokedArray.savgol_filter"]], "set_channel_types() (mne.evokedarray method)": [[265, "mne.EvokedArray.set_channel_types"]], "set_eeg_reference() (mne.evokedarray method)": [[265, "mne.EvokedArray.set_eeg_reference"]], "set_meas_date() (mne.evokedarray method)": [[265, "mne.EvokedArray.set_meas_date"]], "set_montage() (mne.evokedarray method)": [[265, "mne.EvokedArray.set_montage"]], "shift_time() (mne.evokedarray method)": [[265, "mne.EvokedArray.shift_time"]], "time_as_index() (mne.evokedarray method)": [[265, "mne.EvokedArray.time_as_index"]], "times (mne.evokedarray property)": [[265, "mne.EvokedArray.times"]], "tmax (mne.evokedarray property)": [[265, "mne.EvokedArray.tmax"]], "tmin (mne.evokedarray property)": [[265, "mne.EvokedArray.tmin"]], "to_data_frame() (mne.evokedarray method)": [[265, "mne.EvokedArray.to_data_frame"]], "forward (class in mne)": [[266, "mne.Forward"]], "copy() (mne.forward method)": [[266, "mne.Forward.copy"]], "pick_channels() (mne.forward method)": [[266, "mne.Forward.pick_channels"]], "info (class in mne)": [[267, "mne.Info"]], "__contains__() (mne.info method)": [[267, "mne.Info.__contains__"]], "__getitem__() (mne.info method)": [[267, "mne.Info.__getitem__"]], "__iter__() (mne.info method)": [[267, "mne.Info.__iter__"]], "__len__() (mne.info method)": [[267, "mne.Info.__len__"]], "clear() (mne.info method)": [[267, "mne.Info.clear"]], "compensation_grade (mne.info property)": [[267, "mne.Info.compensation_grade"]], "copy() (mne.info method)": [[267, "mne.Info.copy"]], "fromkeys() (mne.info method)": [[267, "mne.Info.fromkeys"]], "get() (mne.info method)": [[267, "mne.Info.get"]], "get_channel_types() (mne.info method)": [[267, "mne.Info.get_channel_types"]], "get_montage() (mne.info method)": [[267, "mne.Info.get_montage"]], "items() (mne.info method)": [[267, "mne.Info.items"]], "keys() (mne.info method)": [[267, "mne.Info.keys"]], "normalize_proj() (mne.info method)": [[267, "mne.Info.normalize_proj"]], "pop() (mne.info method)": [[267, "mne.Info.pop"]], "popitem() (mne.info method)": [[267, "mne.Info.popitem"]], "save() (mne.info method)": [[267, "mne.Info.save"]], "set_montage() (mne.info method)": [[267, "mne.Info.set_montage"]], "setdefault() (mne.info method)": [[267, "mne.Info.setdefault"]], "update() (mne.info method)": [[267, "mne.Info.update"]], "values() (mne.info method)": [[267, "mne.Info.values"]], "label (class in mne)": [[268, "mne.Label"]], "__add__() (mne.label method)": [[268, "mne.Label.__add__"]], "__len__() (mne.label method)": [[268, "mne.Label.__len__"]], "__sub__() (mne.label method)": [[268, "mne.Label.__sub__"]], "center_of_mass() (mne.label method)": [[268, "mne.Label.center_of_mass"]], "compute_area() (mne.label method)": [[268, "mne.Label.compute_area"]], "copy() (mne.label method)": [[268, "mne.Label.copy"]], "distances_to_outside() (mne.label method)": [[268, "mne.Label.distances_to_outside"]], "fill() (mne.label method)": [[268, "mne.Label.fill"]], "get_tris() (mne.label method)": [[268, "mne.Label.get_tris"]], "get_vertices_used() (mne.label method)": [[268, "mne.Label.get_vertices_used"]], "morph() (mne.label method)": [[268, "mne.Label.morph"]], "restrict() (mne.label method)": [[268, "mne.Label.restrict"]], "save() (mne.label method)": [[268, "mne.Label.save"]], "smooth() (mne.label method)": [[268, "mne.Label.smooth"]], "split() (mne.label method)": [[268, "mne.Label.split"]], "mixedsourceestimate (class in mne)": [[269, "mne.MixedSourceEstimate"]], "__add__() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.__add__"]], "__div__() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.__div__"]], "__mul__() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.__mul__"]], "__neg__() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.__neg__"]], "__sub__() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.__sub__"]], "apply_baseline() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.apply_baseline"]], "bin() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.bin"]], "copy() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.copy"]], "crop() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.crop"]], "data (mne.mixedsourceestimate property)": [[269, "mne.MixedSourceEstimate.data"]], "decimate() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.decimate"]], "extract_label_time_course() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.extract_label_time_course"]], "get_peak() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.get_peak"]], "mean() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.mean"]], "plot() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.plot"]], "resample() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.resample"]], "save() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.save"]], "sfreq (mne.mixedsourceestimate property)": [[269, "mne.MixedSourceEstimate.sfreq"]], "shape (mne.mixedsourceestimate property)": [[269, "mne.MixedSourceEstimate.shape"]], "shift_time() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.shift_time"]], "sqrt() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.sqrt"]], "sum() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.sum"]], "surface() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.surface"]], "time_as_index() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.time_as_index"]], "times (mne.mixedsourceestimate property)": [[269, "mne.MixedSourceEstimate.times"]], "tmax (mne.mixedsourceestimate property)": [[269, "mne.MixedSourceEstimate.tmax"]], "tmin (mne.mixedsourceestimate property)": [[269, "mne.MixedSourceEstimate.tmin"]], "to_data_frame() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.to_data_frame"]], "transform() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.transform"]], "transform_data() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.transform_data"]], "tstep (mne.mixedsourceestimate property)": [[269, "mne.MixedSourceEstimate.tstep"]], "volume() (mne.mixedsourceestimate method)": [[269, "mne.MixedSourceEstimate.volume"]], "mixedvectorsourceestimate (class in mne)": [[270, "mne.MixedVectorSourceEstimate"]], "__add__() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.__add__"]], "__div__() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.__div__"]], "__mul__() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.__mul__"]], "__neg__() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.__neg__"]], "__sub__() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.__sub__"]], "apply_baseline() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.apply_baseline"]], "bin() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.bin"]], "copy() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.copy"]], "crop() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.crop"]], "data (mne.mixedvectorsourceestimate property)": [[270, "mne.MixedVectorSourceEstimate.data"]], "decimate() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.decimate"]], "extract_label_time_course() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.extract_label_time_course"]], "get_peak() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.get_peak"]], "magnitude() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.magnitude"]], "mean() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.mean"]], "plot() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.plot"]], "project() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.project"]], "resample() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.resample"]], "save() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.save"]], "sfreq (mne.mixedvectorsourceestimate property)": [[270, "mne.MixedVectorSourceEstimate.sfreq"]], "shape (mne.mixedvectorsourceestimate property)": [[270, "mne.MixedVectorSourceEstimate.shape"]], "shift_time() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.shift_time"]], "sqrt() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.sqrt"]], "sum() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.sum"]], "surface() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.surface"]], "time_as_index() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.time_as_index"]], "times (mne.mixedvectorsourceestimate property)": [[270, "mne.MixedVectorSourceEstimate.times"]], "tmax (mne.mixedvectorsourceestimate property)": [[270, "mne.MixedVectorSourceEstimate.tmax"]], "tmin (mne.mixedvectorsourceestimate property)": [[270, "mne.MixedVectorSourceEstimate.tmin"]], "to_data_frame() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.to_data_frame"]], "transform() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.transform"]], "transform_data() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.transform_data"]], "tstep (mne.mixedvectorsourceestimate property)": [[270, "mne.MixedVectorSourceEstimate.tstep"]], "volume() (mne.mixedvectorsourceestimate method)": [[270, "mne.MixedVectorSourceEstimate.volume"]], "projection (class in mne)": [[271, "mne.Projection"]], "__contains__() (mne.projection method)": [[271, "mne.Projection.__contains__"]], "__getitem__() (mne.projection method)": [[271, "mne.Projection.__getitem__"]], "__iter__() (mne.projection method)": [[271, "mne.Projection.__iter__"]], "__len__() (mne.projection method)": [[271, "mne.Projection.__len__"]], "clear() (mne.projection method)": [[271, "mne.Projection.clear"]], "copy() (mne.projection method)": [[271, "mne.Projection.copy"]], "fromkeys() (mne.projection method)": [[271, "mne.Projection.fromkeys"]], "get() (mne.projection method)": [[271, "mne.Projection.get"]], "items() (mne.projection method)": [[271, "mne.Projection.items"]], "keys() (mne.projection method)": [[271, "mne.Projection.keys"]], "plot_topomap() (mne.projection method)": [[271, "mne.Projection.plot_topomap"]], "pop() (mne.projection method)": [[271, "mne.Projection.pop"]], "popitem() (mne.projection method)": [[271, "mne.Projection.popitem"]], "setdefault() (mne.projection method)": [[271, "mne.Projection.setdefault"]], "update() (mne.projection method)": [[271, "mne.Projection.update"]], "values() (mne.projection method)": [[271, "mne.Projection.values"]], "report (class in mne)": [[272, "mne.Report"]], "__len__() (mne.report method)": [[272, "mne.Report.__len__"]], "add_bem() (mne.report method)": [[272, "mne.Report.add_bem"]], "add_code() (mne.report method)": [[272, "mne.Report.add_code"]], "add_covariance() (mne.report method)": [[272, "mne.Report.add_covariance"]], "add_custom_css() (mne.report method)": [[272, "mne.Report.add_custom_css"]], "add_custom_js() (mne.report method)": [[272, "mne.Report.add_custom_js"]], "add_epochs() (mne.report method)": [[272, "mne.Report.add_epochs"]], "add_events() (mne.report method)": [[272, "mne.Report.add_events"]], "add_evokeds() (mne.report method)": [[272, "mne.Report.add_evokeds"]], "add_figure() (mne.report method)": [[272, "mne.Report.add_figure"]], "add_forward() (mne.report method)": [[272, "mne.Report.add_forward"]], "add_html() (mne.report method)": [[272, "mne.Report.add_html"]], "add_ica() (mne.report method)": [[272, "mne.Report.add_ica"]], "add_image() (mne.report method)": [[272, "mne.Report.add_image"]], "add_inverse_operator() (mne.report method)": [[272, "mne.Report.add_inverse_operator"]], "add_projs() (mne.report method)": [[272, "mne.Report.add_projs"]], "add_raw() (mne.report method)": [[272, "mne.Report.add_raw"]], "add_stc() (mne.report method)": [[272, "mne.Report.add_stc"]], "add_sys_info() (mne.report method)": [[272, "mne.Report.add_sys_info"]], "add_trans() (mne.report method)": [[272, "mne.Report.add_trans"]], "html (mne.report property)": [[272, "mne.Report.html"]], "parse_folder() (mne.report method)": [[272, "mne.Report.parse_folder"]], "remove() (mne.report method)": [[272, "mne.Report.remove"]], "save() (mne.report method)": [[272, "mne.Report.save"]], "tags (mne.report property)": [[272, "mne.Report.tags"]], "sourceestimate (class in mne)": [[273, "mne.SourceEstimate"]], "__add__() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.__add__"]], "__div__() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.__div__"]], "__mul__() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.__mul__"]], "__neg__() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.__neg__"]], "__sub__() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.__sub__"]], "apply_baseline() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.apply_baseline"]], "bin() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.bin"]], "center_of_mass() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.center_of_mass"]], "copy() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.copy"]], "crop() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.crop"]], "data (mne.sourceestimate property)": [[273, "mne.SourceEstimate.data"]], "decimate() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.decimate"]], "estimate_snr() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.estimate_snr"]], "expand() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.expand"]], "extract_label_time_course() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.extract_label_time_course"]], "get_peak() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.get_peak"]], "in_label() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.in_label"]], "lh_data (mne.sourceestimate property)": [[273, "mne.SourceEstimate.lh_data"]], "lh_vertno (mne.sourceestimate property)": [[273, "mne.SourceEstimate.lh_vertno"]], "mean() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.mean"]], "plot() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.plot"]], "resample() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.resample"]], "rh_data (mne.sourceestimate property)": [[273, "mne.SourceEstimate.rh_data"]], "rh_vertno (mne.sourceestimate property)": [[273, "mne.SourceEstimate.rh_vertno"]], "save() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.save"]], "sfreq (mne.sourceestimate property)": [[273, "mne.SourceEstimate.sfreq"]], "shape (mne.sourceestimate property)": [[273, "mne.SourceEstimate.shape"]], "shift_time() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.shift_time"]], "sqrt() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.sqrt"]], "sum() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.sum"]], "time_as_index() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.time_as_index"]], "times (mne.sourceestimate property)": [[273, "mne.SourceEstimate.times"]], "tmax (mne.sourceestimate property)": [[273, "mne.SourceEstimate.tmax"]], "tmin (mne.sourceestimate property)": [[273, "mne.SourceEstimate.tmin"]], "to_data_frame() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.to_data_frame"]], "to_original_src() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.to_original_src"]], "transform() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.transform"]], "transform_data() (mne.sourceestimate method)": [[273, "mne.SourceEstimate.transform_data"]], "tstep (mne.sourceestimate property)": [[273, "mne.SourceEstimate.tstep"]], "sourcemorph (class in mne)": [[274, "mne.SourceMorph"]], "apply() (mne.sourcemorph method)": [[274, "mne.SourceMorph.apply"]], "compute_vol_morph_mat() (mne.sourcemorph method)": [[274, "mne.SourceMorph.compute_vol_morph_mat"]], "save() (mne.sourcemorph method)": [[274, "mne.SourceMorph.save"]], "sourcespaces (class in mne)": [[275, "mne.SourceSpaces"]], "__add__() (mne.sourcespaces method)": [[275, "mne.SourceSpaces.__add__"]], "__getitem__() (mne.sourcespaces method)": [[275, "mne.SourceSpaces.__getitem__"]], "copy() (mne.sourcespaces method)": [[275, "mne.SourceSpaces.copy"]], "export_volume() (mne.sourcespaces method)": [[275, "mne.SourceSpaces.export_volume"]], "plot() (mne.sourcespaces method)": [[275, "mne.SourceSpaces.plot"]], "save() (mne.sourcespaces method)": [[275, "mne.SourceSpaces.save"]], "vectorsourceestimate (class in mne)": [[276, "mne.VectorSourceEstimate"]], "__add__() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.__add__"]], "__div__() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.__div__"]], "__mul__() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.__mul__"]], "__neg__() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.__neg__"]], "__sub__() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.__sub__"]], "apply_baseline() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.apply_baseline"]], "bin() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.bin"]], "copy() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.copy"]], "crop() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.crop"]], "data (mne.vectorsourceestimate property)": [[276, "mne.VectorSourceEstimate.data"]], "decimate() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.decimate"]], "expand() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.expand"]], "extract_label_time_course() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.extract_label_time_course"]], "get_peak() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.get_peak"]], "in_label() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.in_label"]], "lh_data (mne.vectorsourceestimate property)": [[276, "mne.VectorSourceEstimate.lh_data"]], "lh_vertno (mne.vectorsourceestimate property)": [[276, "mne.VectorSourceEstimate.lh_vertno"]], "magnitude() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.magnitude"]], "mean() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.mean"]], "plot() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.plot"]], "project() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.project"]], "resample() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.resample"]], "rh_data (mne.vectorsourceestimate property)": [[276, "mne.VectorSourceEstimate.rh_data"]], "rh_vertno (mne.vectorsourceestimate property)": [[276, "mne.VectorSourceEstimate.rh_vertno"]], "save() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.save"]], "sfreq (mne.vectorsourceestimate property)": [[276, "mne.VectorSourceEstimate.sfreq"]], "shape (mne.vectorsourceestimate property)": [[276, "mne.VectorSourceEstimate.shape"]], "shift_time() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.shift_time"]], "sqrt() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.sqrt"]], "sum() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.sum"]], "time_as_index() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.time_as_index"]], "times (mne.vectorsourceestimate property)": [[276, "mne.VectorSourceEstimate.times"]], "tmax (mne.vectorsourceestimate property)": [[276, "mne.VectorSourceEstimate.tmax"]], "tmin (mne.vectorsourceestimate property)": [[276, "mne.VectorSourceEstimate.tmin"]], "to_data_frame() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.to_data_frame"]], "to_original_src() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.to_original_src"]], "transform() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.transform"]], "transform_data() (mne.vectorsourceestimate method)": [[276, "mne.VectorSourceEstimate.transform_data"]], "tstep (mne.vectorsourceestimate property)": [[276, "mne.VectorSourceEstimate.tstep"]], "volsourceestimate (class in mne)": [[277, "mne.VolSourceEstimate"]], "__add__() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.__add__"]], "__div__() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.__div__"]], "__mul__() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.__mul__"]], "__neg__() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.__neg__"]], "__sub__() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.__sub__"]], "apply_baseline() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.apply_baseline"]], "as_volume() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.as_volume"]], "bin() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.bin"]], "copy() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.copy"]], "crop() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.crop"]], "data (mne.volsourceestimate property)": [[277, "mne.VolSourceEstimate.data"]], "decimate() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.decimate"]], "extract_label_time_course() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.extract_label_time_course"]], "get_peak() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.get_peak"]], "in_label() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.in_label"]], "mean() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.mean"]], "plot() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.plot"]], "plot_3d() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.plot_3d"]], "resample() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.resample"]], "save() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.save"]], "save_as_volume() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.save_as_volume"]], "sfreq (mne.volsourceestimate property)": [[277, "mne.VolSourceEstimate.sfreq"]], "shape (mne.volsourceestimate property)": [[277, "mne.VolSourceEstimate.shape"]], "shift_time() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.shift_time"]], "sqrt() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.sqrt"]], "sum() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.sum"]], "time_as_index() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.time_as_index"]], "times (mne.volsourceestimate property)": [[277, "mne.VolSourceEstimate.times"]], "tmax (mne.volsourceestimate property)": [[277, "mne.VolSourceEstimate.tmax"]], "tmin (mne.volsourceestimate property)": [[277, "mne.VolSourceEstimate.tmin"]], "to_data_frame() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.to_data_frame"]], "transform() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.transform"]], "transform_data() (mne.volsourceestimate method)": [[277, "mne.VolSourceEstimate.transform_data"]], "tstep (mne.volsourceestimate property)": [[277, "mne.VolSourceEstimate.tstep"]], "volvectorsourceestimate (class in mne)": [[278, "mne.VolVectorSourceEstimate"]], "__add__() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.__add__"]], "__div__() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.__div__"]], "__mul__() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.__mul__"]], "__neg__() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.__neg__"]], "__sub__() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.__sub__"]], "apply_baseline() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.apply_baseline"]], "as_volume() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.as_volume"]], "bin() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.bin"]], "copy() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.copy"]], "crop() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.crop"]], "data (mne.volvectorsourceestimate property)": [[278, "mne.VolVectorSourceEstimate.data"]], "decimate() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.decimate"]], "extract_label_time_course() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.extract_label_time_course"]], "get_peak() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.get_peak"]], "in_label() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.in_label"]], "magnitude() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.magnitude"]], "mean() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.mean"]], "plot() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.plot"]], "plot_3d() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.plot_3d"]], "project() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.project"]], "resample() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.resample"]], "save() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.save"]], "save_as_volume() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.save_as_volume"]], "sfreq (mne.volvectorsourceestimate property)": [[278, "mne.VolVectorSourceEstimate.sfreq"]], "shape (mne.volvectorsourceestimate property)": [[278, "mne.VolVectorSourceEstimate.shape"]], "shift_time() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.shift_time"]], "sqrt() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.sqrt"]], "sum() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.sum"]], "time_as_index() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.time_as_index"]], "times (mne.volvectorsourceestimate property)": [[278, "mne.VolVectorSourceEstimate.times"]], "tmax (mne.volvectorsourceestimate property)": [[278, "mne.VolVectorSourceEstimate.tmax"]], "tmin (mne.volvectorsourceestimate property)": [[278, "mne.VolVectorSourceEstimate.tmin"]], "to_data_frame() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.to_data_frame"]], "transform() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.transform"]], "transform_data() (mne.volvectorsourceestimate method)": [[278, "mne.VolVectorSourceEstimate.transform_data"]], "tstep (mne.volvectorsourceestimate property)": [[278, "mne.VolVectorSourceEstimate.tstep"]], "add_reference_channels() (in module mne)": [[279, "mne.add_reference_channels"]], "add_source_space_distances() (in module mne)": [[280, "mne.add_source_space_distances"]], "annotations_from_events() (in module mne)": [[281, "mne.annotations_from_events"]], "apply_forward() (in module mne)": [[282, "mne.apply_forward"]], "apply_forward_raw() (in module mne)": [[283, "mne.apply_forward_raw"]], "average_forward_solutions() (in module mne)": [[284, "mne.average_forward_solutions"]], "rescale() (in module mne.baseline)": [[285, "mne.baseline.rescale"]], "beamformer (class in mne.beamformer)": [[286, "mne.beamformer.Beamformer"]], "__contains__() (mne.beamformer.beamformer method)": [[286, "mne.beamformer.Beamformer.__contains__"]], "__getitem__() (mne.beamformer.beamformer method)": [[286, "mne.beamformer.Beamformer.__getitem__"]], "__iter__() (mne.beamformer.beamformer method)": [[286, "mne.beamformer.Beamformer.__iter__"]], "__len__() (mne.beamformer.beamformer method)": [[286, "mne.beamformer.Beamformer.__len__"]], "clear() (mne.beamformer.beamformer method)": [[286, "mne.beamformer.Beamformer.clear"]], "copy() (mne.beamformer.beamformer method)": [[286, "mne.beamformer.Beamformer.copy"]], "fromkeys() (mne.beamformer.beamformer method)": [[286, "mne.beamformer.Beamformer.fromkeys"]], "get() (mne.beamformer.beamformer method)": [[286, "mne.beamformer.Beamformer.get"]], "items() (mne.beamformer.beamformer method)": [[286, "mne.beamformer.Beamformer.items"]], "keys() (mne.beamformer.beamformer method)": [[286, "mne.beamformer.Beamformer.keys"]], "pop() (mne.beamformer.beamformer method)": [[286, "mne.beamformer.Beamformer.pop"]], "popitem() (mne.beamformer.beamformer method)": [[286, "mne.beamformer.Beamformer.popitem"]], "save() (mne.beamformer.beamformer method)": [[286, "mne.beamformer.Beamformer.save"]], "setdefault() (mne.beamformer.beamformer method)": [[286, "mne.beamformer.Beamformer.setdefault"]], "update() (mne.beamformer.beamformer method)": [[286, "mne.beamformer.Beamformer.update"]], "values() (mne.beamformer.beamformer method)": [[286, "mne.beamformer.Beamformer.values"]], "apply_dics() (in module mne.beamformer)": [[287, "mne.beamformer.apply_dics"]], "apply_dics_csd() (in module mne.beamformer)": [[288, "mne.beamformer.apply_dics_csd"]], "apply_dics_epochs() (in module mne.beamformer)": [[289, "mne.beamformer.apply_dics_epochs"]], "apply_dics_tfr_epochs() (in module mne.beamformer)": [[290, "mne.beamformer.apply_dics_tfr_epochs"]], "apply_lcmv() (in module mne.beamformer)": [[291, "mne.beamformer.apply_lcmv"]], "apply_lcmv_cov() (in module mne.beamformer)": [[292, "mne.beamformer.apply_lcmv_cov"]], "apply_lcmv_epochs() (in module mne.beamformer)": [[293, "mne.beamformer.apply_lcmv_epochs"]], "apply_lcmv_raw() (in module mne.beamformer)": [[294, "mne.beamformer.apply_lcmv_raw"]], "make_dics() (in module mne.beamformer)": [[295, "mne.beamformer.make_dics"]], "make_lcmv() (in module mne.beamformer)": [[296, "mne.beamformer.make_lcmv"]], "make_lcmv_resolution_matrix() (in module mne.beamformer)": [[297, "mne.beamformer.make_lcmv_resolution_matrix"]], "rap_music() (in module mne.beamformer)": [[298, "mne.beamformer.rap_music"]], "read_beamformer() (in module mne.beamformer)": [[299, "mne.beamformer.read_beamformer"]], "conductormodel (class in mne.bem)": [[300, "mne.bem.ConductorModel"]], "__contains__() (mne.bem.conductormodel method)": [[300, "mne.bem.ConductorModel.__contains__"]], "__getitem__() (mne.bem.conductormodel method)": [[300, "mne.bem.ConductorModel.__getitem__"]], "__iter__() (mne.bem.conductormodel method)": [[300, "mne.bem.ConductorModel.__iter__"]], "__len__() (mne.bem.conductormodel method)": [[300, "mne.bem.ConductorModel.__len__"]], "clear() (mne.bem.conductormodel method)": [[300, "mne.bem.ConductorModel.clear"]], "copy() (mne.bem.conductormodel method)": [[300, "mne.bem.ConductorModel.copy"]], "fromkeys() (mne.bem.conductormodel method)": [[300, "mne.bem.ConductorModel.fromkeys"]], "get() (mne.bem.conductormodel method)": [[300, "mne.bem.ConductorModel.get"]], "items() (mne.bem.conductormodel method)": [[300, "mne.bem.ConductorModel.items"]], "keys() (mne.bem.conductormodel method)": [[300, "mne.bem.ConductorModel.keys"]], "pop() (mne.bem.conductormodel method)": [[300, "mne.bem.ConductorModel.pop"]], "popitem() (mne.bem.conductormodel method)": [[300, "mne.bem.ConductorModel.popitem"]], "radius (mne.bem.conductormodel property)": [[300, "mne.bem.ConductorModel.radius"]], "setdefault() (mne.bem.conductormodel method)": [[300, "mne.bem.ConductorModel.setdefault"]], "update() (mne.bem.conductormodel method)": [[300, "mne.bem.ConductorModel.update"]], "values() (mne.bem.conductormodel method)": [[300, "mne.bem.ConductorModel.values"]], "convert_flash_mris() (in module mne.bem)": [[301, "mne.bem.convert_flash_mris"]], "distance_to_bem() (in module mne.bem)": [[302, "mne.bem.distance_to_bem"]], "fit_sphere_to_headshape() (in module mne.bem)": [[303, "mne.bem.fit_sphere_to_headshape"]], "get_fitting_dig() (in module mne.bem)": [[304, "mne.bem.get_fitting_dig"]], "make_flash_bem() (in module mne.bem)": [[305, "mne.bem.make_flash_bem"]], "make_scalp_surfaces() (in module mne.bem)": [[306, "mne.bem.make_scalp_surfaces"]], "make_watershed_bem() (in module mne.bem)": [[307, "mne.bem.make_watershed_bem"]], "channel_indices_by_type() (in module mne)": [[308, "mne.channel_indices_by_type"]], "channel_type() (in module mne)": [[309, "mne.channel_type"]], "digmontage (class in mne.channels)": [[310, "mne.channels.DigMontage"]], "__add__() (mne.channels.digmontage method)": [[310, "mne.channels.DigMontage.__add__"]], "add_estimated_fiducials() (mne.channels.digmontage method)": [[310, "mne.channels.DigMontage.add_estimated_fiducials"]], "add_mni_fiducials() (mne.channels.digmontage method)": [[310, "mne.channels.DigMontage.add_mni_fiducials"]], "apply_trans() (mne.channels.digmontage method)": [[310, "mne.channels.DigMontage.apply_trans"]], "copy() (mne.channels.digmontage method)": [[310, "mne.channels.DigMontage.copy"]], "get_positions() (mne.channels.digmontage method)": [[310, "mne.channels.DigMontage.get_positions"]], "plot() (mne.channels.digmontage method)": [[310, "mne.channels.DigMontage.plot"]], "remove_fiducials() (mne.channels.digmontage method)": [[310, "mne.channels.DigMontage.remove_fiducials"]], "rename_channels() (mne.channels.digmontage method)": [[310, "mne.channels.DigMontage.rename_channels"]], "save() (mne.channels.digmontage method)": [[310, "mne.channels.DigMontage.save"]], "layout (class in mne.channels)": [[311, "mne.channels.Layout"]], "plot() (mne.channels.layout method)": [[311, "mne.channels.Layout.plot"]], "save() (mne.channels.layout method)": [[311, "mne.channels.Layout.save"]], "combine_channels() (in module mne.channels)": [[312, "mne.channels.combine_channels"]], "compute_dev_head_t() (in module mne.channels)": [[313, "mne.channels.compute_dev_head_t"]], "compute_native_head_t() (in module mne.channels)": [[314, "mne.channels.compute_native_head_t"]], "equalize_channels() (in module mne.channels)": [[315, "mne.channels.equalize_channels"]], "find_ch_adjacency() (in module mne.channels)": [[316, "mne.channels.find_ch_adjacency"]], "find_layout() (in module mne.channels)": [[317, "mne.channels.find_layout"]], "fix_mag_coil_types() (in module mne.channels)": [[318, "mne.channels.fix_mag_coil_types"]], "generate_2d_layout() (in module mne.channels)": [[319, "mne.channels.generate_2d_layout"]], "get_builtin_ch_adjacencies() (in module mne.channels)": [[320, "mne.channels.get_builtin_ch_adjacencies"]], "get_builtin_montages() (in module mne.channels)": [[321, "mne.channels.get_builtin_montages"]], "make_1020_channel_selections() (in module mne.channels)": [[322, "mne.channels.make_1020_channel_selections"]], "make_dig_montage() (in module mne.channels)": [[323, "mne.channels.make_dig_montage"]], "make_eeg_layout() (in module mne.channels)": [[324, "mne.channels.make_eeg_layout"]], "make_grid_layout() (in module mne.channels)": [[325, "mne.channels.make_grid_layout"]], "make_standard_montage() (in module mne.channels)": [[326, "mne.channels.make_standard_montage"]], "read_ch_adjacency() (in module mne.channels)": [[327, "mne.channels.read_ch_adjacency"]], "read_custom_montage() (in module mne.channels)": [[328, "mne.channels.read_custom_montage"]], "read_dig_captrak() (in module mne.channels)": [[329, "mne.channels.read_dig_captrak"]], "read_dig_dat() (in module mne.channels)": [[330, "mne.channels.read_dig_dat"]], "read_dig_egi() (in module mne.channels)": [[331, "mne.channels.read_dig_egi"]], "read_dig_fif() (in module mne.channels)": [[332, "mne.channels.read_dig_fif"]], "read_dig_hpts() (in module mne.channels)": [[333, "mne.channels.read_dig_hpts"]], "read_dig_localite() (in module mne.channels)": [[334, "mne.channels.read_dig_localite"]], "read_dig_polhemus_isotrak() (in module mne.channels)": [[335, "mne.channels.read_dig_polhemus_isotrak"]], "read_layout() (in module mne.channels)": [[336, "mne.channels.read_layout"]], "read_polhemus_fastscan() (in module mne.channels)": [[337, "mne.channels.read_polhemus_fastscan"]], "rename_channels() (in module mne.channels)": [[338, "mne.channels.rename_channels"]], "compute_chpi_amplitudes() (in module mne.chpi)": [[339, "mne.chpi.compute_chpi_amplitudes"]], "compute_chpi_locs() (in module mne.chpi)": [[340, "mne.chpi.compute_chpi_locs"]], "compute_chpi_snr() (in module mne.chpi)": [[341, "mne.chpi.compute_chpi_snr"]], "compute_head_pos() (in module mne.chpi)": [[342, "mne.chpi.compute_head_pos"]], "extract_chpi_locs_ctf() (in module mne.chpi)": [[343, "mne.chpi.extract_chpi_locs_ctf"]], "extract_chpi_locs_kit() (in module mne.chpi)": [[344, "mne.chpi.extract_chpi_locs_kit"]], "filter_chpi() (in module mne.chpi)": [[345, "mne.chpi.filter_chpi"]], "get_active_chpi() (in module mne.chpi)": [[346, "mne.chpi.get_active_chpi"]], "get_chpi_info() (in module mne.chpi)": [[347, "mne.chpi.get_chpi_info"]], "head_pos_to_trans_rot_t() (in module mne.chpi)": [[348, "mne.chpi.head_pos_to_trans_rot_t"]], "read_head_pos() (in module mne.chpi)": [[349, "mne.chpi.read_head_pos"]], "write_head_pos() (in module mne.chpi)": [[350, "mne.chpi.write_head_pos"]], "combine_evoked() (in module mne)": [[351, "mne.combine_evoked"]], "compute_covariance() (in module mne)": [[352, "mne.compute_covariance"]], "compute_proj_epochs() (in module mne)": [[353, "mne.compute_proj_epochs"]], "compute_proj_evoked() (in module mne)": [[354, "mne.compute_proj_evoked"]], "compute_proj_raw() (in module mne)": [[355, "mne.compute_proj_raw"]], "compute_rank() (in module mne)": [[356, "mne.compute_rank"]], "compute_raw_covariance() (in module mne)": [[357, "mne.compute_raw_covariance"]], "compute_source_morph() (in module mne)": [[358, "mne.compute_source_morph"]], "concatenate_epochs() (in module mne)": [[359, "mne.concatenate_epochs"]], "concatenate_events() (in module mne)": [[360, "mne.concatenate_events"]], "concatenate_raws() (in module mne)": [[361, "mne.concatenate_raws"]], "convert_forward_solution() (in module mne)": [[362, "mne.convert_forward_solution"]], "coregistration (class in mne.coreg)": [[363, "mne.coreg.Coregistration"]], "compute_dig_mri_distances() (mne.coreg.coregistration method)": [[363, "mne.coreg.Coregistration.compute_dig_mri_distances"]], "fit_fiducials() (mne.coreg.coregistration method)": [[363, "mne.coreg.Coregistration.fit_fiducials"]], "fit_icp() (mne.coreg.coregistration method)": [[363, "mne.coreg.Coregistration.fit_icp"]], "omit_head_shape_points() (mne.coreg.coregistration method)": [[363, "mne.coreg.Coregistration.omit_head_shape_points"]], "reset() (mne.coreg.coregistration method)": [[363, "mne.coreg.Coregistration.reset"]], "scale (mne.coreg.coregistration property)": [[363, "mne.coreg.Coregistration.scale"]], "set_fid_match() (mne.coreg.coregistration method)": [[363, "mne.coreg.Coregistration.set_fid_match"]], "set_grow_hair() (mne.coreg.coregistration method)": [[363, "mne.coreg.Coregistration.set_grow_hair"]], "set_rotation() (mne.coreg.coregistration method)": [[363, "mne.coreg.Coregistration.set_rotation"]], "set_scale() (mne.coreg.coregistration method)": [[363, "mne.coreg.Coregistration.set_scale"]], "set_scale_mode() (mne.coreg.coregistration method)": [[363, "mne.coreg.Coregistration.set_scale_mode"]], "set_translation() (mne.coreg.coregistration method)": [[363, "mne.coreg.Coregistration.set_translation"]], "trans (mne.coreg.coregistration property)": [[363, "mne.coreg.Coregistration.trans"]], "estimate_head_mri_t() (in module mne.coreg)": [[364, "mne.coreg.estimate_head_mri_t"]], "get_mni_fiducials() (in module mne.coreg)": [[365, "mne.coreg.get_mni_fiducials"]], "compute_whitener() (in module mne.cov)": [[366, "mne.cov.compute_whitener"]], "prepare_noise_cov() (in module mne.cov)": [[367, "mne.cov.prepare_noise_cov"]], "regularize() (in module mne.cov)": [[368, "mne.cov.regularize"]], "create_default_subject() (in module mne)": [[369, "mne.create_default_subject"]], "create_info() (in module mne)": [[370, "mne.create_info"]], "get_cuda_memory() (in module mne.cuda)": [[371, "mne.cuda.get_cuda_memory"]], "init_cuda() (in module mne.cuda)": [[372, "mne.cuda.init_cuda"]], "set_cuda_device() (in module mne.cuda)": [[373, "mne.cuda.set_cuda_device"]], "data_path() (in module mne.datasets.brainstorm.bst_auditory)": [[374, "mne.datasets.brainstorm.bst_auditory.data_path"]], "data_path() (in module mne.datasets.brainstorm.bst_raw)": [[375, "mne.datasets.brainstorm.bst_raw.data_path"]], "data_path() (in module mne.datasets.brainstorm.bst_resting)": [[376, "mne.datasets.brainstorm.bst_resting.data_path"]], "load_data() (in module mne.datasets.eegbci)": [[377, "mne.datasets.eegbci.load_data"]], "standardize() (in module mne.datasets.eegbci)": [[378, "mne.datasets.eegbci.standardize"]], "data_path() (in module mne.datasets.epilepsy_ecog)": [[379, "mne.datasets.epilepsy_ecog.data_path"]], "data_path() (in module mne.datasets.erp_core)": [[380, "mne.datasets.erp_core.data_path"]], "fetch_aparc_sub_parcellation() (in module mne.datasets)": [[381, "mne.datasets.fetch_aparc_sub_parcellation"]], "fetch_dataset() (in module mne.datasets)": [[382, "mne.datasets.fetch_dataset"]], "fetch_fsaverage() (in module mne.datasets)": [[383, "mne.datasets.fetch_fsaverage"]], "fetch_hcp_mmp_parcellation() (in module mne.datasets)": [[384, "mne.datasets.fetch_hcp_mmp_parcellation"]], "fetch_infant_template() (in module mne.datasets)": [[385, "mne.datasets.fetch_infant_template"]], "fetch_phantom() (in module mne.datasets)": [[386, "mne.datasets.fetch_phantom"]], "data_path() (in module mne.datasets.fnirs_motor)": [[387, "mne.datasets.fnirs_motor.data_path"]], "has_dataset() (in module mne.datasets)": [[388, "mne.datasets.has_dataset"]], "data_path() (in module mne.datasets.hf_sef)": [[389, "mne.datasets.hf_sef.data_path"]], "data_path() (in module mne.datasets.kiloword)": [[390, "mne.datasets.kiloword.data_path"]], "load_data() (in module mne.datasets.limo)": [[391, "mne.datasets.limo.load_data"]], "data_path() (in module mne.datasets.misc)": [[392, "mne.datasets.misc.data_path"]], "data_path() (in module mne.datasets.mtrf)": [[393, "mne.datasets.mtrf.data_path"]], "data_path() (in module mne.datasets.multimodal)": [[394, "mne.datasets.multimodal.data_path"]], "data_path() (in module mne.datasets.opm)": [[395, "mne.datasets.opm.data_path"]], "data_path() (in module mne.datasets.phantom_4dbti)": [[396, "mne.datasets.phantom_4dbti.data_path"]], "data_path() (in module mne.datasets.refmeg_noise)": [[397, "mne.datasets.refmeg_noise.data_path"]], "data_path() (in module mne.datasets.sample)": [[398, "mne.datasets.sample.data_path"]], "fetch_data() (in module mne.datasets.sleep_physionet.age)": [[399, "mne.datasets.sleep_physionet.age.fetch_data"]], "fetch_data() (in module mne.datasets.sleep_physionet.temazepam)": [[400, "mne.datasets.sleep_physionet.temazepam.fetch_data"]], "data_path() (in module mne.datasets.somato)": [[401, "mne.datasets.somato.data_path"]], "data_path() (in module mne.datasets.spm_face)": [[402, "mne.datasets.spm_face.data_path"]], "data_path() (in module mne.datasets.ssvep)": [[403, "mne.datasets.ssvep.data_path"]], "data_path() (in module mne.datasets.ucl_opm_auditory)": [[404, "mne.datasets.ucl_opm_auditory.data_path"]], "data_path() (in module mne.datasets.visual_92_categories)": [[405, "mne.datasets.visual_92_categories.data_path"]], "decimate_surface() (in module mne)": [[406, "mne.decimate_surface"]], "csp (class in mne.decoding)": [[407, "mne.decoding.CSP"]], "fit() (mne.decoding.csp method)": [[407, "mne.decoding.CSP.fit"]], "fit_transform() (mne.decoding.csp method)": [[407, "mne.decoding.CSP.fit_transform"]], "get_params() (mne.decoding.csp method)": [[407, "mne.decoding.CSP.get_params"]], "plot_filters() (mne.decoding.csp method)": [[407, "mne.decoding.CSP.plot_filters"]], "plot_patterns() (mne.decoding.csp method)": [[407, "mne.decoding.CSP.plot_patterns"]], "set_params() (mne.decoding.csp method)": [[407, "mne.decoding.CSP.set_params"]], "transform() (mne.decoding.csp method)": [[407, "mne.decoding.CSP.transform"]], "ems (class in mne.decoding)": [[408, "mne.decoding.EMS"]], "fit() (mne.decoding.ems method)": [[408, "mne.decoding.EMS.fit"]], "fit_transform() (mne.decoding.ems method)": [[408, "mne.decoding.EMS.fit_transform"]], "get_params() (mne.decoding.ems method)": [[408, "mne.decoding.EMS.get_params"]], "set_params() (mne.decoding.ems method)": [[408, "mne.decoding.EMS.set_params"]], "transform() (mne.decoding.ems method)": [[408, "mne.decoding.EMS.transform"]], "filterestimator (class in mne.decoding)": [[409, "mne.decoding.FilterEstimator"]], "fit() (mne.decoding.filterestimator method)": [[409, "mne.decoding.FilterEstimator.fit"]], "fit_transform() (mne.decoding.filterestimator method)": [[409, "mne.decoding.FilterEstimator.fit_transform"]], "transform() (mne.decoding.filterestimator method)": [[409, "mne.decoding.FilterEstimator.transform"]], "generalizingestimator (class in mne.decoding)": [[410, "mne.decoding.GeneralizingEstimator"]], "decision_function() (mne.decoding.generalizingestimator method)": [[410, "mne.decoding.GeneralizingEstimator.decision_function"]], "fit() (mne.decoding.generalizingestimator method)": [[410, "mne.decoding.GeneralizingEstimator.fit"]], "fit_transform() (mne.decoding.generalizingestimator method)": [[410, "mne.decoding.GeneralizingEstimator.fit_transform"]], "get_params() (mne.decoding.generalizingestimator method)": [[410, "mne.decoding.GeneralizingEstimator.get_params"]], "predict() (mne.decoding.generalizingestimator method)": [[410, "mne.decoding.GeneralizingEstimator.predict"]], "predict_proba() (mne.decoding.generalizingestimator method)": [[410, "mne.decoding.GeneralizingEstimator.predict_proba"]], "score() (mne.decoding.generalizingestimator method)": [[410, "mne.decoding.GeneralizingEstimator.score"]], "set_params() (mne.decoding.generalizingestimator method)": [[410, "mne.decoding.GeneralizingEstimator.set_params"]], "transform() (mne.decoding.generalizingestimator method)": [[410, "mne.decoding.GeneralizingEstimator.transform"]], "linearmodel (class in mne.decoding)": [[411, "mne.decoding.LinearModel"]], "decision_function() (mne.decoding.linearmodel method)": [[411, "mne.decoding.LinearModel.decision_function"]], "fit() (mne.decoding.linearmodel method)": [[411, "mne.decoding.LinearModel.fit"]], "fit_transform() (mne.decoding.linearmodel method)": [[411, "mne.decoding.LinearModel.fit_transform"]], "get_params() (mne.decoding.linearmodel method)": [[411, "mne.decoding.LinearModel.get_params"]], "predict() (mne.decoding.linearmodel method)": [[411, "mne.decoding.LinearModel.predict"]], "predict_proba() (mne.decoding.linearmodel method)": [[411, "mne.decoding.LinearModel.predict_proba"]], "score() (mne.decoding.linearmodel method)": [[411, "mne.decoding.LinearModel.score"]], "set_params() (mne.decoding.linearmodel method)": [[411, "mne.decoding.LinearModel.set_params"]], "transform() (mne.decoding.linearmodel method)": [[411, "mne.decoding.LinearModel.transform"]], "psdestimator (class in mne.decoding)": [[412, "mne.decoding.PSDEstimator"]], "fit() (mne.decoding.psdestimator method)": [[412, "mne.decoding.PSDEstimator.fit"]], "fit_transform() (mne.decoding.psdestimator method)": [[412, "mne.decoding.PSDEstimator.fit_transform"]], "transform() (mne.decoding.psdestimator method)": [[412, "mne.decoding.PSDEstimator.transform"]], "receptivefield (class in mne.decoding)": [[413, "mne.decoding.ReceptiveField"]], "fit() (mne.decoding.receptivefield method)": [[413, "mne.decoding.ReceptiveField.fit"]], "get_params() (mne.decoding.receptivefield method)": [[413, "mne.decoding.ReceptiveField.get_params"]], "predict() (mne.decoding.receptivefield method)": [[413, "mne.decoding.ReceptiveField.predict"]], "score() (mne.decoding.receptivefield method)": [[413, "mne.decoding.ReceptiveField.score"]], "set_params() (mne.decoding.receptivefield method)": [[413, "mne.decoding.ReceptiveField.set_params"]], "spoc (class in mne.decoding)": [[414, "mne.decoding.SPoC"]], "fit() (mne.decoding.spoc method)": [[414, "mne.decoding.SPoC.fit"]], "fit_transform() (mne.decoding.spoc method)": [[414, "mne.decoding.SPoC.fit_transform"]], "get_params() (mne.decoding.spoc method)": [[414, "mne.decoding.SPoC.get_params"]], "plot_filters() (mne.decoding.spoc method)": [[414, "mne.decoding.SPoC.plot_filters"]], "plot_patterns() (mne.decoding.spoc method)": [[414, "mne.decoding.SPoC.plot_patterns"]], "set_params() (mne.decoding.spoc method)": [[414, "mne.decoding.SPoC.set_params"]], "transform() (mne.decoding.spoc method)": [[414, "mne.decoding.SPoC.transform"]], "ssd (class in mne.decoding)": [[415, "mne.decoding.SSD"]], "apply() (mne.decoding.ssd method)": [[415, "mne.decoding.SSD.apply"]], "fit() (mne.decoding.ssd method)": [[415, "mne.decoding.SSD.fit"]], "fit_transform() (mne.decoding.ssd method)": [[415, "mne.decoding.SSD.fit_transform"]], "get_params() (mne.decoding.ssd method)": [[415, "mne.decoding.SSD.get_params"]], "get_spectral_ratio() (mne.decoding.ssd method)": [[415, "mne.decoding.SSD.get_spectral_ratio"]], "inverse_transform() (mne.decoding.ssd method)": [[415, "mne.decoding.SSD.inverse_transform"]], "set_params() (mne.decoding.ssd method)": [[415, "mne.decoding.SSD.set_params"]], "transform() (mne.decoding.ssd method)": [[415, "mne.decoding.SSD.transform"]], "scaler (class in mne.decoding)": [[416, "mne.decoding.Scaler"]], "fit() (mne.decoding.scaler method)": [[416, "mne.decoding.Scaler.fit"]], "fit_transform() (mne.decoding.scaler method)": [[416, "mne.decoding.Scaler.fit_transform"]], "get_params() (mne.decoding.scaler method)": [[416, "mne.decoding.Scaler.get_params"]], "inverse_transform() (mne.decoding.scaler method)": [[416, "mne.decoding.Scaler.inverse_transform"]], "set_params() (mne.decoding.scaler method)": [[416, "mne.decoding.Scaler.set_params"]], "transform() (mne.decoding.scaler method)": [[416, "mne.decoding.Scaler.transform"]], "slidingestimator (class in mne.decoding)": [[417, "mne.decoding.SlidingEstimator"]], "decision_function() (mne.decoding.slidingestimator method)": [[417, "mne.decoding.SlidingEstimator.decision_function"]], "fit() (mne.decoding.slidingestimator method)": [[417, "mne.decoding.SlidingEstimator.fit"]], "fit_transform() (mne.decoding.slidingestimator method)": [[417, "mne.decoding.SlidingEstimator.fit_transform"]], "get_params() (mne.decoding.slidingestimator method)": [[417, "mne.decoding.SlidingEstimator.get_params"]], "predict() (mne.decoding.slidingestimator method)": [[417, "mne.decoding.SlidingEstimator.predict"]], "predict_proba() (mne.decoding.slidingestimator method)": [[417, "mne.decoding.SlidingEstimator.predict_proba"]], "score() (mne.decoding.slidingestimator method)": [[417, "mne.decoding.SlidingEstimator.score"]], "set_params() (mne.decoding.slidingestimator method)": [[417, "mne.decoding.SlidingEstimator.set_params"]], "transform() (mne.decoding.slidingestimator method)": [[417, "mne.decoding.SlidingEstimator.transform"]], "temporalfilter (class in mne.decoding)": [[418, "mne.decoding.TemporalFilter"]], "fit() (mne.decoding.temporalfilter method)": [[418, "mne.decoding.TemporalFilter.fit"]], "fit_transform() (mne.decoding.temporalfilter method)": [[418, "mne.decoding.TemporalFilter.fit_transform"]], "transform() (mne.decoding.temporalfilter method)": [[418, "mne.decoding.TemporalFilter.transform"]], "timedelayingridge (class in mne.decoding)": [[419, "mne.decoding.TimeDelayingRidge"]], "fit() (mne.decoding.timedelayingridge method)": [[419, "mne.decoding.TimeDelayingRidge.fit"]], "get_params() (mne.decoding.timedelayingridge method)": [[419, "mne.decoding.TimeDelayingRidge.get_params"]], "predict() (mne.decoding.timedelayingridge method)": [[419, "mne.decoding.TimeDelayingRidge.predict"]], "set_params() (mne.decoding.timedelayingridge method)": [[419, "mne.decoding.TimeDelayingRidge.set_params"]], "timefrequency (class in mne.decoding)": [[420, "mne.decoding.TimeFrequency"]], "fit() (mne.decoding.timefrequency method)": [[420, "mne.decoding.TimeFrequency.fit"]], "fit_transform() (mne.decoding.timefrequency method)": [[420, "mne.decoding.TimeFrequency.fit_transform"]], "get_params() (mne.decoding.timefrequency method)": [[420, "mne.decoding.TimeFrequency.get_params"]], "set_params() (mne.decoding.timefrequency method)": [[420, "mne.decoding.TimeFrequency.set_params"]], "transform() (mne.decoding.timefrequency method)": [[420, "mne.decoding.TimeFrequency.transform"]], "unsupervisedspatialfilter (class in mne.decoding)": [[421, "mne.decoding.UnsupervisedSpatialFilter"]], "fit() (mne.decoding.unsupervisedspatialfilter method)": [[421, "mne.decoding.UnsupervisedSpatialFilter.fit"]], "fit_transform() (mne.decoding.unsupervisedspatialfilter method)": [[421, "mne.decoding.UnsupervisedSpatialFilter.fit_transform"]], "get_params() (mne.decoding.unsupervisedspatialfilter method)": [[421, "mne.decoding.UnsupervisedSpatialFilter.get_params"]], "inverse_transform() (mne.decoding.unsupervisedspatialfilter method)": [[421, "mne.decoding.UnsupervisedSpatialFilter.inverse_transform"]], "set_params() (mne.decoding.unsupervisedspatialfilter method)": [[421, "mne.decoding.UnsupervisedSpatialFilter.set_params"]], "transform() (mne.decoding.unsupervisedspatialfilter method)": [[421, "mne.decoding.UnsupervisedSpatialFilter.transform"]], "vectorizer (class in mne.decoding)": [[422, "mne.decoding.Vectorizer"]], "fit() (mne.decoding.vectorizer method)": [[422, "mne.decoding.Vectorizer.fit"]], "fit_transform() (mne.decoding.vectorizer method)": [[422, "mne.decoding.Vectorizer.fit_transform"]], "inverse_transform() (mne.decoding.vectorizer method)": [[422, "mne.decoding.Vectorizer.inverse_transform"]], "transform() (mne.decoding.vectorizer method)": [[422, "mne.decoding.Vectorizer.transform"]], "compute_ems() (in module mne.decoding)": [[423, "mne.decoding.compute_ems"]], "cross_val_multiscore() (in module mne.decoding)": [[424, "mne.decoding.cross_val_multiscore"]], "get_coef() (in module mne.decoding)": [[425, "mne.decoding.get_coef"]], "dig_mri_distances() (in module mne)": [[426, "mne.dig_mri_distances"]], "get_phantom_dipoles() (in module mne.dipole)": [[427, "mne.dipole.get_phantom_dipoles"]], "average_movements() (in module mne.epochs)": [[428, "mne.epochs.average_movements"]], "combine_event_ids() (in module mne.epochs)": [[429, "mne.epochs.combine_event_ids"]], "equalize_epoch_counts() (in module mne.epochs)": [[430, "mne.epochs.equalize_epoch_counts"]], "make_metadata() (in module mne.epochs)": [[431, "mne.epochs.make_metadata"]], "equalize_channels() (in module mne)": [[432, "mne.equalize_channels"]], "define_target_events() (in module mne.event)": [[433, "mne.event.define_target_events"]], "match_event_names() (in module mne.event)": [[434, "mne.event.match_event_names"]], "shift_time_events() (in module mne.event)": [[435, "mne.event.shift_time_events"]], "events_from_annotations() (in module mne)": [[436, "mne.events_from_annotations"]], "export_epochs() (in module mne.export)": [[437, "mne.export.export_epochs"]], "export_evokeds() (in module mne.export)": [[438, "mne.export.export_evokeds"]], "export_evokeds_mff() (in module mne.export)": [[439, "mne.export.export_evokeds_mff"]], "export_raw() (in module mne.export)": [[440, "mne.export.export_raw"]], "extract_label_time_course() (in module mne)": [[441, "mne.extract_label_time_course"]], "construct_iir_filter() (in module mne.filter)": [[442, "mne.filter.construct_iir_filter"]], "create_filter() (in module mne.filter)": [[443, "mne.filter.create_filter"]], "estimate_ringing_samples() (in module mne.filter)": [[444, "mne.filter.estimate_ringing_samples"]], "filter_data() (in module mne.filter)": [[445, "mne.filter.filter_data"]], "notch_filter() (in module mne.filter)": [[446, "mne.filter.notch_filter"]], "resample() (in module mne.filter)": [[447, "mne.filter.resample"]], "find_events() (in module mne)": [[448, "mne.find_events"]], "find_stim_steps() (in module mne)": [[449, "mne.find_stim_steps"]], "fit_dipole() (in module mne)": [[450, "mne.fit_dipole"]], "compute_depth_prior() (in module mne.forward)": [[451, "mne.forward.compute_depth_prior"]], "compute_orient_prior() (in module mne.forward)": [[452, "mne.forward.compute_orient_prior"]], "restrict_forward_to_label() (in module mne.forward)": [[453, "mne.forward.restrict_forward_to_label"]], "restrict_forward_to_stc() (in module mne.forward)": [[454, "mne.forward.restrict_forward_to_stc"]], "get_config() (in module mne)": [[455, "mne.get_config"]], "get_config_path() (in module mne)": [[456, "mne.get_config_path"]], "get_head_surf() (in module mne)": [[457, "mne.get_head_surf"]], "get_meg_helmet_surf() (in module mne)": [[458, "mne.get_meg_helmet_surf"]], "get_montage_volume_labels() (in module mne)": [[459, "mne.get_montage_volume_labels"]], "get_volume_labels_from_aseg() (in module mne)": [[460, "mne.get_volume_labels_from_aseg"]], "get_volume_labels_from_src() (in module mne)": [[461, "mne.get_volume_labels_from_src"]], "grade_to_tris() (in module mne)": [[462, "mne.grade_to_tris"]], "grade_to_vertices() (in module mne)": [[463, "mne.grade_to_vertices"]], "grand_average() (in module mne)": [[464, "mne.grand_average"]], "grow_labels() (in module mne)": [[465, "mne.grow_labels"]], "coregistration() (in module mne.gui)": [[466, "mne.gui.coregistration"]], "locate_ieeg() (in module mne.gui)": [[467, "mne.gui.locate_ieeg"]], "head_to_mni() (in module mne)": [[468, "mne.head_to_mni"]], "head_to_mri() (in module mne)": [[469, "mne.head_to_mri"]], "gamma_map() (in module mne.inverse_sparse)": [[470, "mne.inverse_sparse.gamma_map"]], "make_stc_from_dipoles() (in module mne.inverse_sparse)": [[471, "mne.inverse_sparse.make_stc_from_dipoles"]], "mixed_norm() (in module mne.inverse_sparse)": [[472, "mne.inverse_sparse.mixed_norm"]], "tf_mixed_norm() (in module mne.inverse_sparse)": [[473, "mne.inverse_sparse.tf_mixed_norm"]], "baseraw (class in mne.io)": [[474, "mne.io.BaseRaw"]], "raw (class in mne.io)": [[475, "mne.io.Raw"]], "__contains__() (mne.io.raw method)": [[475, "mne.io.Raw.__contains__"]], "__getitem__() (mne.io.raw method)": [[475, "mne.io.Raw.__getitem__"]], "__len__() (mne.io.raw method)": [[475, "mne.io.Raw.__len__"]], "acqparser (mne.io.raw property)": [[475, "mne.io.Raw.acqparser"]], "add_channels() (mne.io.raw method)": [[475, "mne.io.Raw.add_channels"]], "add_events() (mne.io.raw method)": [[475, "mne.io.Raw.add_events"]], "add_proj() (mne.io.raw method)": [[475, "mne.io.Raw.add_proj"]], "add_reference_channels() (mne.io.raw method)": [[475, "mne.io.Raw.add_reference_channels"]], "annotations (mne.io.raw property)": [[475, "mne.io.Raw.annotations"]], "anonymize() (mne.io.raw method)": [[475, "mne.io.Raw.anonymize"]], "append() (mne.io.raw method)": [[475, "mne.io.Raw.append"]], "apply_function() (mne.io.raw method)": [[475, "mne.io.Raw.apply_function"]], "apply_gradient_compensation() (mne.io.raw method)": [[475, "mne.io.Raw.apply_gradient_compensation"]], "apply_hilbert() (mne.io.raw method)": [[475, "mne.io.Raw.apply_hilbert"]], "apply_proj() (mne.io.raw method)": [[475, "mne.io.Raw.apply_proj"]], "ch_names (mne.io.raw property)": [[475, "mne.io.Raw.ch_names"]], "close() (mne.io.raw method)": [[475, "mne.io.Raw.close"]], "compensation_grade (mne.io.raw property)": [[475, "mne.io.Raw.compensation_grade"]], "compute_psd() (mne.io.raw method)": [[475, "mne.io.Raw.compute_psd"]], "copy() (mne.io.raw method)": [[475, "mne.io.Raw.copy"]], "crop() (mne.io.raw method)": [[475, "mne.io.Raw.crop"]], "crop_by_annotations() (mne.io.raw method)": [[475, "mne.io.Raw.crop_by_annotations"]], "decimate() (mne.io.raw method)": [[475, "mne.io.Raw.decimate"]], "del_proj() (mne.io.raw method)": [[475, "mne.io.Raw.del_proj"]], "describe() (mne.io.raw method)": [[475, "mne.io.Raw.describe"]], "drop_channels() (mne.io.raw method)": [[475, "mne.io.Raw.drop_channels"]], "export() (mne.io.raw method)": [[475, "mne.io.Raw.export"]], "filenames (mne.io.raw property)": [[475, "mne.io.Raw.filenames"]], "filter() (mne.io.raw method)": [[475, "mne.io.Raw.filter"]], "first_samp (mne.io.raw property)": [[475, "mne.io.Raw.first_samp"]], "first_time (mne.io.raw property)": [[475, "mne.io.Raw.first_time"]], "fix_mag_coil_types() (mne.io.raw method)": [[475, "mne.io.Raw.fix_mag_coil_types"]], "get_channel_types() (mne.io.raw method)": [[475, "mne.io.Raw.get_channel_types"]], "get_data() (mne.io.raw method)": [[475, "mne.io.Raw.get_data"]], "get_montage() (mne.io.raw method)": [[475, "mne.io.Raw.get_montage"]], "interpolate_bads() (mne.io.raw method)": [[475, "mne.io.Raw.interpolate_bads"]], "last_samp (mne.io.raw property)": [[475, "mne.io.Raw.last_samp"]], "load_bad_channels() (mne.io.raw method)": [[475, "mne.io.Raw.load_bad_channels"]], "load_data() (mne.io.raw method)": [[475, "mne.io.Raw.load_data"]], "n_times (mne.io.raw property)": [[475, "mne.io.Raw.n_times"]], "notch_filter() (mne.io.raw method)": [[475, "mne.io.Raw.notch_filter"]], "pick() (mne.io.raw method)": [[475, "mne.io.Raw.pick"]], "pick_channels() (mne.io.raw method)": [[475, "mne.io.Raw.pick_channels"]], "pick_types() (mne.io.raw method)": [[475, "mne.io.Raw.pick_types"]], "plot() (mne.io.raw method)": [[475, "mne.io.Raw.plot"]], "plot_projs_topomap() (mne.io.raw method)": [[475, "mne.io.Raw.plot_projs_topomap"]], "plot_psd() (mne.io.raw method)": [[475, "mne.io.Raw.plot_psd"]], "plot_psd_topo() (mne.io.raw method)": [[475, "mne.io.Raw.plot_psd_topo"]], "plot_psd_topomap() (mne.io.raw method)": [[475, "mne.io.Raw.plot_psd_topomap"]], "plot_sensors() (mne.io.raw method)": [[475, "mne.io.Raw.plot_sensors"]], "proj (mne.io.raw property)": [[475, "mne.io.Raw.proj"]], "rename_channels() (mne.io.raw method)": [[475, "mne.io.Raw.rename_channels"]], "reorder_channels() (mne.io.raw method)": [[475, "mne.io.Raw.reorder_channels"]], "resample() (mne.io.raw method)": [[475, "mne.io.Raw.resample"]], "save() (mne.io.raw method)": [[475, "mne.io.Raw.save"]], "savgol_filter() (mne.io.raw method)": [[475, "mne.io.Raw.savgol_filter"]], "set_annotations() (mne.io.raw method)": [[475, "mne.io.Raw.set_annotations"]], "set_channel_types() (mne.io.raw method)": [[475, "mne.io.Raw.set_channel_types"]], "set_eeg_reference() (mne.io.raw method)": [[475, "mne.io.Raw.set_eeg_reference"]], "set_meas_date() (mne.io.raw method)": [[475, "mne.io.Raw.set_meas_date"]], "set_montage() (mne.io.raw method)": [[475, "mne.io.Raw.set_montage"]], "shift_time() (mne.io.raw method)": [[475, "mne.io.Raw.shift_time"]], "time_as_index() (mne.io.raw method)": [[475, "mne.io.Raw.time_as_index"]], "times (mne.io.raw property)": [[475, "mne.io.Raw.times"]], "tmax (mne.io.raw property)": [[475, "mne.io.Raw.tmax"]], "tmin (mne.io.raw property)": [[475, "mne.io.Raw.tmin"]], "to_data_frame() (mne.io.raw method)": [[475, "mne.io.Raw.to_data_frame"]], "rawarray (class in mne.io)": [[476, "mne.io.RawArray"]], "__contains__() (mne.io.rawarray method)": [[476, "mne.io.RawArray.__contains__"]], "__getitem__() (mne.io.rawarray method)": [[476, "mne.io.RawArray.__getitem__"]], "__len__() (mne.io.rawarray method)": [[476, "mne.io.RawArray.__len__"]], "add_channels() (mne.io.rawarray method)": [[476, "mne.io.RawArray.add_channels"]], "add_events() (mne.io.rawarray method)": [[476, "mne.io.RawArray.add_events"]], "add_proj() (mne.io.rawarray method)": [[476, "mne.io.RawArray.add_proj"]], "add_reference_channels() (mne.io.rawarray method)": [[476, "mne.io.RawArray.add_reference_channels"]], "annotations (mne.io.rawarray property)": [[476, "mne.io.RawArray.annotations"]], "anonymize() (mne.io.rawarray method)": [[476, "mne.io.RawArray.anonymize"]], "append() (mne.io.rawarray method)": [[476, "mne.io.RawArray.append"]], "apply_function() (mne.io.rawarray method)": [[476, "mne.io.RawArray.apply_function"]], "apply_gradient_compensation() (mne.io.rawarray method)": [[476, "mne.io.RawArray.apply_gradient_compensation"]], "apply_hilbert() (mne.io.rawarray method)": [[476, "mne.io.RawArray.apply_hilbert"]], "apply_proj() (mne.io.rawarray method)": [[476, "mne.io.RawArray.apply_proj"]], "ch_names (mne.io.rawarray property)": [[476, "mne.io.RawArray.ch_names"]], "close() (mne.io.rawarray method)": [[476, "mne.io.RawArray.close"]], "compensation_grade (mne.io.rawarray property)": [[476, "mne.io.RawArray.compensation_grade"]], "compute_psd() (mne.io.rawarray method)": [[476, "mne.io.RawArray.compute_psd"]], "copy() (mne.io.rawarray method)": [[476, "mne.io.RawArray.copy"]], "crop() (mne.io.rawarray method)": [[476, "mne.io.RawArray.crop"]], "crop_by_annotations() (mne.io.rawarray method)": [[476, "mne.io.RawArray.crop_by_annotations"]], "decimate() (mne.io.rawarray method)": [[476, "mne.io.RawArray.decimate"]], "del_proj() (mne.io.rawarray method)": [[476, "mne.io.RawArray.del_proj"]], "describe() (mne.io.rawarray method)": [[476, "mne.io.RawArray.describe"]], "drop_channels() (mne.io.rawarray method)": [[476, "mne.io.RawArray.drop_channels"]], "export() (mne.io.rawarray method)": [[476, "mne.io.RawArray.export"]], "filenames (mne.io.rawarray property)": [[476, "mne.io.RawArray.filenames"]], "filter() (mne.io.rawarray method)": [[476, "mne.io.RawArray.filter"]], "first_samp (mne.io.rawarray property)": [[476, "mne.io.RawArray.first_samp"]], "first_time (mne.io.rawarray property)": [[476, "mne.io.RawArray.first_time"]], "get_channel_types() (mne.io.rawarray method)": [[476, "mne.io.RawArray.get_channel_types"]], "get_data() (mne.io.rawarray method)": [[476, "mne.io.RawArray.get_data"]], "get_montage() (mne.io.rawarray method)": [[476, "mne.io.RawArray.get_montage"]], "interpolate_bads() (mne.io.rawarray method)": [[476, "mne.io.RawArray.interpolate_bads"]], "last_samp (mne.io.rawarray property)": [[476, "mne.io.RawArray.last_samp"]], "load_bad_channels() (mne.io.rawarray method)": [[476, "mne.io.RawArray.load_bad_channels"]], "load_data() (mne.io.rawarray method)": [[476, "mne.io.RawArray.load_data"]], "n_times (mne.io.rawarray property)": [[476, "mne.io.RawArray.n_times"]], "notch_filter() (mne.io.rawarray method)": [[476, "mne.io.RawArray.notch_filter"]], "pick() (mne.io.rawarray method)": [[476, "mne.io.RawArray.pick"]], "pick_channels() (mne.io.rawarray method)": [[476, "mne.io.RawArray.pick_channels"]], "pick_types() (mne.io.rawarray method)": [[476, "mne.io.RawArray.pick_types"]], "plot() (mne.io.rawarray method)": [[476, "mne.io.RawArray.plot"]], "plot_projs_topomap() (mne.io.rawarray method)": [[476, "mne.io.RawArray.plot_projs_topomap"]], "plot_psd() (mne.io.rawarray method)": [[476, "mne.io.RawArray.plot_psd"]], "plot_psd_topo() (mne.io.rawarray method)": [[476, "mne.io.RawArray.plot_psd_topo"]], "plot_psd_topomap() (mne.io.rawarray method)": [[476, "mne.io.RawArray.plot_psd_topomap"]], "plot_sensors() (mne.io.rawarray method)": [[476, "mne.io.RawArray.plot_sensors"]], "proj (mne.io.rawarray property)": [[476, "mne.io.RawArray.proj"]], "rename_channels() (mne.io.rawarray method)": [[476, "mne.io.RawArray.rename_channels"]], "reorder_channels() (mne.io.rawarray method)": [[476, "mne.io.RawArray.reorder_channels"]], "resample() (mne.io.rawarray method)": [[476, "mne.io.RawArray.resample"]], "save() (mne.io.rawarray method)": [[476, "mne.io.RawArray.save"]], "savgol_filter() (mne.io.rawarray method)": [[476, "mne.io.RawArray.savgol_filter"]], "set_annotations() (mne.io.rawarray method)": [[476, "mne.io.RawArray.set_annotations"]], "set_channel_types() (mne.io.rawarray method)": [[476, "mne.io.RawArray.set_channel_types"]], "set_eeg_reference() (mne.io.rawarray method)": [[476, "mne.io.RawArray.set_eeg_reference"]], "set_meas_date() (mne.io.rawarray method)": [[476, "mne.io.RawArray.set_meas_date"]], "set_montage() (mne.io.rawarray method)": [[476, "mne.io.RawArray.set_montage"]], "shift_time() (mne.io.rawarray method)": [[476, "mne.io.RawArray.shift_time"]], "time_as_index() (mne.io.rawarray method)": [[476, "mne.io.RawArray.time_as_index"]], "times (mne.io.rawarray property)": [[476, "mne.io.RawArray.times"]], "tmax (mne.io.rawarray property)": [[476, "mne.io.RawArray.tmax"]], "tmin (mne.io.rawarray property)": [[476, "mne.io.RawArray.tmin"]], "to_data_frame() (mne.io.rawarray method)": [[476, "mne.io.RawArray.to_data_frame"]], "anonymize_info() (in module mne.io)": [[477, "mne.io.anonymize_info"]], "read_mrk() (in module mne.io.kit)": [[478, "mne.io.kit.read_mrk"]], "read_fiducials() (in module mne.io)": [[479, "mne.io.read_fiducials"]], "read_info() (in module mne.io)": [[480, "mne.io.read_info"]], "read_raw() (in module mne.io)": [[481, "mne.io.read_raw"]], "read_raw_artemis123() (in module mne.io)": [[482, "mne.io.read_raw_artemis123"]], "read_raw_bdf() (in module mne.io)": [[483, "mne.io.read_raw_bdf"]], "read_raw_boxy() (in module mne.io)": [[484, "mne.io.read_raw_boxy"]], "read_raw_brainvision() (in module mne.io)": [[485, "mne.io.read_raw_brainvision"]], "read_raw_bti() (in module mne.io)": [[486, "mne.io.read_raw_bti"]], "read_raw_cnt() (in module mne.io)": [[487, "mne.io.read_raw_cnt"]], "read_raw_ctf() (in module mne.io)": [[488, "mne.io.read_raw_ctf"]], "read_raw_curry() (in module mne.io)": [[489, "mne.io.read_raw_curry"]], "read_raw_edf() (in module mne.io)": [[490, "mne.io.read_raw_edf"]], "read_raw_eeglab() (in module mne.io)": [[491, "mne.io.read_raw_eeglab"]], "read_raw_egi() (in module mne.io)": [[492, "mne.io.read_raw_egi"]], "read_raw_eximia() (in module mne.io)": [[493, "mne.io.read_raw_eximia"]], "read_raw_fieldtrip() (in module mne.io)": [[494, "mne.io.read_raw_fieldtrip"]], "read_raw_fif() (in module mne.io)": [[495, "mne.io.read_raw_fif"]], "read_raw_fil() (in module mne.io)": [[496, "mne.io.read_raw_fil"]], "read_raw_gdf() (in module mne.io)": [[497, "mne.io.read_raw_gdf"]], "read_raw_hitachi() (in module mne.io)": [[498, "mne.io.read_raw_hitachi"]], "read_raw_kit() (in module mne.io)": [[499, "mne.io.read_raw_kit"]], "read_raw_nedf() (in module mne.io)": [[500, "mne.io.read_raw_nedf"]], "read_raw_nicolet() (in module mne.io)": [[501, "mne.io.read_raw_nicolet"]], "read_raw_nihon() (in module mne.io)": [[502, "mne.io.read_raw_nihon"]], "read_raw_nirx() (in module mne.io)": [[503, "mne.io.read_raw_nirx"]], "read_raw_persyst() (in module mne.io)": [[504, "mne.io.read_raw_persyst"]], "read_raw_snirf() (in module mne.io)": [[505, "mne.io.read_raw_snirf"]], "show_fiff() (in module mne.io)": [[506, "mne.io.show_fiff"]], "write_fiducials() (in module mne.io)": [[507, "mne.io.write_fiducials"]], "select_sources() (in module mne.label)": [[508, "mne.label.select_sources"]], "label_sign_flip() (in module mne)": [[509, "mne.label_sign_flip"]], "labels_to_stc() (in module mne)": [[510, "mne.labels_to_stc"]], "make_ad_hoc_cov() (in module mne)": [[511, "mne.make_ad_hoc_cov"]], "make_bem_model() (in module mne)": [[512, "mne.make_bem_model"]], "make_bem_solution() (in module mne)": [[513, "mne.make_bem_solution"]], "make_field_map() (in module mne)": [[514, "mne.make_field_map"]], "make_fixed_length_epochs() (in module mne)": [[515, "mne.make_fixed_length_epochs"]], "make_fixed_length_events() (in module mne)": [[516, "mne.make_fixed_length_events"]], "make_forward_dipole() (in module mne)": [[517, "mne.make_forward_dipole"]], "make_forward_solution() (in module mne)": [[518, "mne.make_forward_solution"]], "make_sphere_model() (in module mne)": [[519, "mne.make_sphere_model"]], "merge_events() (in module mne)": [[520, "mne.merge_events"]], "inverseoperator (class in mne.minimum_norm)": [[521, "mne.minimum_norm.InverseOperator"]], "__contains__() (mne.minimum_norm.inverseoperator method)": [[521, "mne.minimum_norm.InverseOperator.__contains__"]], "__getitem__() (mne.minimum_norm.inverseoperator method)": [[521, "mne.minimum_norm.InverseOperator.__getitem__"]], "__iter__() (mne.minimum_norm.inverseoperator method)": [[521, "mne.minimum_norm.InverseOperator.__iter__"]], "__len__() (mne.minimum_norm.inverseoperator method)": [[521, "mne.minimum_norm.InverseOperator.__len__"]], "clear() (mne.minimum_norm.inverseoperator method)": [[521, "mne.minimum_norm.InverseOperator.clear"]], "copy() (mne.minimum_norm.inverseoperator method)": [[521, "mne.minimum_norm.InverseOperator.copy"]], "fromkeys() (mne.minimum_norm.inverseoperator method)": [[521, "mne.minimum_norm.InverseOperator.fromkeys"]], "get() (mne.minimum_norm.inverseoperator method)": [[521, "mne.minimum_norm.InverseOperator.get"]], "items() (mne.minimum_norm.inverseoperator method)": [[521, "mne.minimum_norm.InverseOperator.items"]], "keys() (mne.minimum_norm.inverseoperator method)": [[521, "mne.minimum_norm.InverseOperator.keys"]], "pop() (mne.minimum_norm.inverseoperator method)": [[521, "mne.minimum_norm.InverseOperator.pop"]], "popitem() (mne.minimum_norm.inverseoperator method)": [[521, "mne.minimum_norm.InverseOperator.popitem"]], "setdefault() (mne.minimum_norm.inverseoperator method)": [[521, "mne.minimum_norm.InverseOperator.setdefault"]], "update() (mne.minimum_norm.inverseoperator method)": [[521, "mne.minimum_norm.InverseOperator.update"]], "values() (mne.minimum_norm.inverseoperator method)": [[521, "mne.minimum_norm.InverseOperator.values"]], "apply_inverse() (in module mne.minimum_norm)": [[522, "mne.minimum_norm.apply_inverse"]], "apply_inverse_cov() (in module mne.minimum_norm)": [[523, "mne.minimum_norm.apply_inverse_cov"]], "apply_inverse_epochs() (in module mne.minimum_norm)": [[524, "mne.minimum_norm.apply_inverse_epochs"]], "apply_inverse_raw() (in module mne.minimum_norm)": [[525, "mne.minimum_norm.apply_inverse_raw"]], "apply_inverse_tfr_epochs() (in module mne.minimum_norm)": [[526, "mne.minimum_norm.apply_inverse_tfr_epochs"]], "compute_rank_inverse() (in module mne.minimum_norm)": [[527, "mne.minimum_norm.compute_rank_inverse"]], "compute_source_psd() (in module mne.minimum_norm)": [[528, "mne.minimum_norm.compute_source_psd"]], "compute_source_psd_epochs() (in module mne.minimum_norm)": [[529, "mne.minimum_norm.compute_source_psd_epochs"]], "estimate_snr() (in module mne.minimum_norm)": [[530, "mne.minimum_norm.estimate_snr"]], "get_cross_talk() (in module mne.minimum_norm)": [[531, "mne.minimum_norm.get_cross_talk"]], "get_point_spread() (in module mne.minimum_norm)": [[532, "mne.minimum_norm.get_point_spread"]], "make_inverse_operator() (in module mne.minimum_norm)": [[533, "mne.minimum_norm.make_inverse_operator"]], "make_inverse_resolution_matrix() (in module mne.minimum_norm)": [[534, "mne.minimum_norm.make_inverse_resolution_matrix"]], "prepare_inverse_operator() (in module mne.minimum_norm)": [[535, "mne.minimum_norm.prepare_inverse_operator"]], "read_inverse_operator() (in module mne.minimum_norm)": [[536, "mne.minimum_norm.read_inverse_operator"]], "resolution_metrics() (in module mne.minimum_norm)": [[537, "mne.minimum_norm.resolution_metrics"]], "source_band_induced_power() (in module mne.minimum_norm)": [[538, "mne.minimum_norm.source_band_induced_power"]], "source_induced_power() (in module mne.minimum_norm)": [[539, "mne.minimum_norm.source_induced_power"]], "write_inverse_operator() (in module mne.minimum_norm)": [[540, "mne.minimum_norm.write_inverse_operator"]], "morph_labels() (in module mne)": [[541, "mne.morph_labels"]], "morph_source_spaces() (in module mne)": [[542, "mne.morph_source_spaces"]], "open_docs() (in module mne)": [[543, "mne.open_docs"]], "open_report() (in module mne)": [[544, "mne.open_report"]], "parse_config() (in module mne)": [[545, "mne.parse_config"]], "pick_channels() (in module mne)": [[546, "mne.pick_channels"]], "pick_channels_cov() (in module mne)": [[547, "mne.pick_channels_cov"]], "pick_channels_forward() (in module mne)": [[548, "mne.pick_channels_forward"]], "pick_channels_regexp() (in module mne)": [[549, "mne.pick_channels_regexp"]], "pick_events() (in module mne)": [[550, "mne.pick_events"]], "pick_info() (in module mne)": [[551, "mne.pick_info"]], "pick_types() (in module mne)": [[552, "mne.pick_types"]], "pick_types_forward() (in module mne)": [[553, "mne.pick_types_forward"]], "eogregression (class in mne.preprocessing)": [[554, "mne.preprocessing.EOGRegression"]], "apply() (mne.preprocessing.eogregression method)": [[554, "mne.preprocessing.EOGRegression.apply"]], "fit() (mne.preprocessing.eogregression method)": [[554, "mne.preprocessing.EOGRegression.fit"]], "plot() (mne.preprocessing.eogregression method)": [[554, "mne.preprocessing.EOGRegression.plot"]], "save() (mne.preprocessing.eogregression method)": [[554, "mne.preprocessing.EOGRegression.save"]], "ica (class in mne.preprocessing)": [[555, "mne.preprocessing.ICA"]], "__contains__() (mne.preprocessing.ica method)": [[555, "mne.preprocessing.ICA.__contains__"]], "apply() (mne.preprocessing.ica method)": [[555, "mne.preprocessing.ICA.apply"]], "compensation_grade (mne.preprocessing.ica property)": [[555, "mne.preprocessing.ICA.compensation_grade"]], "copy() (mne.preprocessing.ica method)": [[555, "mne.preprocessing.ICA.copy"]], "find_bads_ecg() (mne.preprocessing.ica method)": [[555, "mne.preprocessing.ICA.find_bads_ecg"]], "find_bads_eog() (mne.preprocessing.ica method)": [[555, "mne.preprocessing.ICA.find_bads_eog"]], "find_bads_muscle() (mne.preprocessing.ica method)": [[555, "mne.preprocessing.ICA.find_bads_muscle"]], "find_bads_ref() (mne.preprocessing.ica method)": [[555, "mne.preprocessing.ICA.find_bads_ref"]], "fit() (mne.preprocessing.ica method)": [[555, "mne.preprocessing.ICA.fit"]], "get_channel_types() (mne.preprocessing.ica method)": [[555, "mne.preprocessing.ICA.get_channel_types"]], "get_components() (mne.preprocessing.ica method)": [[555, "mne.preprocessing.ICA.get_components"]], "get_explained_variance_ratio() (mne.preprocessing.ica method)": [[555, "mne.preprocessing.ICA.get_explained_variance_ratio"]], "get_sources() (mne.preprocessing.ica method)": [[555, "mne.preprocessing.ICA.get_sources"]], "plot_components() (mne.preprocessing.ica method)": [[555, "mne.preprocessing.ICA.plot_components"]], "plot_overlay() (mne.preprocessing.ica method)": [[555, "mne.preprocessing.ICA.plot_overlay"]], "plot_properties() (mne.preprocessing.ica method)": [[555, "mne.preprocessing.ICA.plot_properties"]], "plot_scores() (mne.preprocessing.ica method)": [[555, "mne.preprocessing.ICA.plot_scores"]], "plot_sources() (mne.preprocessing.ica method)": [[555, "mne.preprocessing.ICA.plot_sources"]], "save() (mne.preprocessing.ica method)": [[555, "mne.preprocessing.ICA.save"]], "score_sources() (mne.preprocessing.ica method)": [[555, "mne.preprocessing.ICA.score_sources"]], "xdawn (class in mne.preprocessing)": [[556, "mne.preprocessing.Xdawn"]], "apply() (mne.preprocessing.xdawn method)": [[556, "mne.preprocessing.Xdawn.apply"]], "fit() (mne.preprocessing.xdawn method)": [[556, "mne.preprocessing.Xdawn.fit"]], "fit_transform() (mne.preprocessing.xdawn method)": [[556, "mne.preprocessing.Xdawn.fit_transform"]], "get_params() (mne.preprocessing.xdawn method)": [[556, "mne.preprocessing.Xdawn.get_params"]], "inverse_transform() (mne.preprocessing.xdawn method)": [[556, "mne.preprocessing.Xdawn.inverse_transform"]], "set_params() (mne.preprocessing.xdawn method)": [[556, "mne.preprocessing.Xdawn.set_params"]], "transform() (mne.preprocessing.xdawn method)": [[556, "mne.preprocessing.Xdawn.transform"]], "annotate_amplitude() (in module mne.preprocessing)": [[557, "mne.preprocessing.annotate_amplitude"]], "annotate_break() (in module mne.preprocessing)": [[558, "mne.preprocessing.annotate_break"]], "annotate_movement() (in module mne.preprocessing)": [[559, "mne.preprocessing.annotate_movement"]], "annotate_muscle_zscore() (in module mne.preprocessing)": [[560, "mne.preprocessing.annotate_muscle_zscore"]], "annotate_nan() (in module mne.preprocessing)": [[561, "mne.preprocessing.annotate_nan"]], "compute_average_dev_head_t() (in module mne.preprocessing)": [[562, "mne.preprocessing.compute_average_dev_head_t"]], "compute_bridged_electrodes() (in module mne.preprocessing)": [[563, "mne.preprocessing.compute_bridged_electrodes"]], "compute_current_source_density() (in module mne.preprocessing)": [[564, "mne.preprocessing.compute_current_source_density"]], "compute_fine_calibration() (in module mne.preprocessing)": [[565, "mne.preprocessing.compute_fine_calibration"]], "compute_maxwell_basis() (in module mne.preprocessing)": [[566, "mne.preprocessing.compute_maxwell_basis"]], "compute_proj_ecg() (in module mne.preprocessing)": [[567, "mne.preprocessing.compute_proj_ecg"]], "compute_proj_eog() (in module mne.preprocessing)": [[568, "mne.preprocessing.compute_proj_eog"]], "corrmap() (in module mne.preprocessing)": [[569, "mne.preprocessing.corrmap"]], "cortical_signal_suppression() (in module mne.preprocessing)": [[570, "mne.preprocessing.cortical_signal_suppression"]], "create_ecg_epochs() (in module mne.preprocessing)": [[571, "mne.preprocessing.create_ecg_epochs"]], "create_eog_epochs() (in module mne.preprocessing)": [[572, "mne.preprocessing.create_eog_epochs"]], "equalize_bads() (in module mne.preprocessing)": [[573, "mne.preprocessing.equalize_bads"]], "find_bad_channels_maxwell() (in module mne.preprocessing)": [[574, "mne.preprocessing.find_bad_channels_maxwell"]], "find_ecg_events() (in module mne.preprocessing)": [[575, "mne.preprocessing.find_ecg_events"]], "find_eog_events() (in module mne.preprocessing)": [[576, "mne.preprocessing.find_eog_events"]], "fix_stim_artifact() (in module mne.preprocessing)": [[577, "mne.preprocessing.fix_stim_artifact"]], "ica_find_ecg_events() (in module mne.preprocessing)": [[578, "mne.preprocessing.ica_find_ecg_events"]], "ica_find_eog_events() (in module mne.preprocessing)": [[579, "mne.preprocessing.ica_find_eog_events"]], "project_sensors_onto_brain() (in module mne.preprocessing.ieeg)": [[580, "mne.preprocessing.ieeg.project_sensors_onto_brain"]], "infomax() (in module mne.preprocessing)": [[581, "mne.preprocessing.infomax"]], "interpolate_bridged_electrodes() (in module mne.preprocessing)": [[582, "mne.preprocessing.interpolate_bridged_electrodes"]], "maxwell_filter() (in module mne.preprocessing)": [[583, "mne.preprocessing.maxwell_filter"]], "maxwell_filter_prepare_emptyroom() (in module mne.preprocessing)": [[584, "mne.preprocessing.maxwell_filter_prepare_emptyroom"]], "beer_lambert_law() (in module mne.preprocessing.nirs)": [[585, "mne.preprocessing.nirs.beer_lambert_law"]], "optical_density() (in module mne.preprocessing.nirs)": [[586, "mne.preprocessing.nirs.optical_density"]], "scalp_coupling_index() (in module mne.preprocessing.nirs)": [[587, "mne.preprocessing.nirs.scalp_coupling_index"]], "short_channels() (in module mne.preprocessing.nirs)": [[588, "mne.preprocessing.nirs.short_channels"]], "source_detector_distances() (in module mne.preprocessing.nirs)": [[589, "mne.preprocessing.nirs.source_detector_distances"]], "temporal_derivative_distribution_repair() (in module mne.preprocessing.nirs)": [[590, "mne.preprocessing.nirs.temporal_derivative_distribution_repair"]], "oversampled_temporal_projection() (in module mne.preprocessing)": [[591, "mne.preprocessing.oversampled_temporal_projection"]], "peak_finder() (in module mne.preprocessing)": [[592, "mne.preprocessing.peak_finder"]], "read_eog_regression() (in module mne.preprocessing)": [[593, "mne.preprocessing.read_eog_regression"]], "read_fine_calibration() (in module mne.preprocessing)": [[594, "mne.preprocessing.read_fine_calibration"]], "read_ica() (in module mne.preprocessing)": [[595, "mne.preprocessing.read_ica"]], "read_ica_eeglab() (in module mne.preprocessing)": [[596, "mne.preprocessing.read_ica_eeglab"]], "realign_raw() (in module mne.preprocessing)": [[597, "mne.preprocessing.realign_raw"]], "regress_artifact() (in module mne.preprocessing)": [[598, "mne.preprocessing.regress_artifact"]], "write_fine_calibration() (in module mne.preprocessing)": [[599, "mne.preprocessing.write_fine_calibration"]], "random_parcellation() (in module mne)": [[600, "mne.random_parcellation"]], "read_annotations() (in module mne)": [[601, "mne.read_annotations"]], "read_bem_solution() (in module mne)": [[602, "mne.read_bem_solution"]], "read_bem_surfaces() (in module mne)": [[603, "mne.read_bem_surfaces"]], "read_cov() (in module mne)": [[604, "mne.read_cov"]], "read_dipole() (in module mne)": [[605, "mne.read_dipole"]], "read_epochs() (in module mne)": [[606, "mne.read_epochs"]], "read_epochs_eeglab() (in module mne)": [[607, "mne.read_epochs_eeglab"]], "read_epochs_fieldtrip() (in module mne)": [[608, "mne.read_epochs_fieldtrip"]], "read_epochs_kit() (in module mne)": [[609, "mne.read_epochs_kit"]], "read_events() (in module mne)": [[610, "mne.read_events"]], "read_evoked_besa() (in module mne)": [[611, "mne.read_evoked_besa"]], "read_evoked_fieldtrip() (in module mne)": [[612, "mne.read_evoked_fieldtrip"]], "read_evokeds() (in module mne)": [[613, "mne.read_evokeds"]], "read_evokeds_mff() (in module mne)": [[614, "mne.read_evokeds_mff"]], "read_forward_solution() (in module mne)": [[615, "mne.read_forward_solution"]], "read_freesurfer_lut() (in module mne)": [[616, "mne.read_freesurfer_lut"]], "read_label() (in module mne)": [[617, "mne.read_label"]], "read_labels_from_annot() (in module mne)": [[618, "mne.read_labels_from_annot"]], "read_lta() (in module mne)": [[619, "mne.read_lta"]], "read_morph_map() (in module mne)": [[620, "mne.read_morph_map"]], "read_proj() (in module mne)": [[621, "mne.read_proj"]], "read_reject_parameters() (in module mne)": [[622, "mne.read_reject_parameters"]], "read_source_estimate() (in module mne)": [[623, "mne.read_source_estimate"]], "read_source_morph() (in module mne)": [[624, "mne.read_source_morph"]], "read_source_spaces() (in module mne)": [[625, "mne.read_source_spaces"]], "read_surface() (in module mne)": [[626, "mne.read_surface"]], "read_talxfm() (in module mne)": [[627, "mne.read_talxfm"]], "read_trans() (in module mne)": [[628, "mne.read_trans"]], "read_tri() (in module mne)": [[629, "mne.read_tri"]], "read_vectorview_selection() (in module mne)": [[630, "mne.read_vectorview_selection"]], "rename_channels() (in module mne)": [[631, "mne.rename_channels"]], "scale_bem() (in module mne)": [[632, "mne.scale_bem"]], "scale_labels() (in module mne)": [[633, "mne.scale_labels"]], "scale_mri() (in module mne)": [[634, "mne.scale_mri"]], "scale_source_space() (in module mne)": [[635, "mne.scale_source_space"]], "sensitivity_map() (in module mne)": [[636, "mne.sensitivity_map"]], "set_bipolar_reference() (in module mne)": [[637, "mne.set_bipolar_reference"]], "set_cache_dir() (in module mne)": [[638, "mne.set_cache_dir"]], "set_config() (in module mne)": [[639, "mne.set_config"]], "set_eeg_reference() (in module mne)": [[640, "mne.set_eeg_reference"]], "set_log_file() (in module mne)": [[641, "mne.set_log_file"]], "set_log_level() (in module mne)": [[642, "mne.set_log_level"]], "setup_source_space() (in module mne)": [[643, "mne.setup_source_space"]], "setup_volume_source_space() (in module mne)": [[644, "mne.setup_volume_source_space"]], "sourcesimulator (class in mne.simulation)": [[645, "mne.simulation.SourceSimulator"]], "__iter__() (mne.simulation.sourcesimulator method)": [[645, "mne.simulation.SourceSimulator.__iter__"]], "add_data() (mne.simulation.sourcesimulator method)": [[645, "mne.simulation.SourceSimulator.add_data"]], "duration (mne.simulation.sourcesimulator property)": [[645, "mne.simulation.SourceSimulator.duration"]], "get_stc() (mne.simulation.sourcesimulator method)": [[645, "mne.simulation.SourceSimulator.get_stc"]], "get_stim_channel() (mne.simulation.sourcesimulator method)": [[645, "mne.simulation.SourceSimulator.get_stim_channel"]], "n_times (mne.simulation.sourcesimulator property)": [[645, "mne.simulation.SourceSimulator.n_times"]], "add_chpi() (in module mne.simulation)": [[646, "mne.simulation.add_chpi"]], "add_ecg() (in module mne.simulation)": [[647, "mne.simulation.add_ecg"]], "add_eog() (in module mne.simulation)": [[648, "mne.simulation.add_eog"]], "add_noise() (in module mne.simulation)": [[649, "mne.simulation.add_noise"]], "cosine_score() (in module mne.simulation.metrics)": [[650, "mne.simulation.metrics.cosine_score"]], "f1_score() (in module mne.simulation.metrics)": [[651, "mne.simulation.metrics.f1_score"]], "peak_position_error() (in module mne.simulation.metrics)": [[652, "mne.simulation.metrics.peak_position_error"]], "precision_score() (in module mne.simulation.metrics)": [[653, "mne.simulation.metrics.precision_score"]], "recall_score() (in module mne.simulation.metrics)": [[654, "mne.simulation.metrics.recall_score"]], "region_localization_error() (in module mne.simulation.metrics)": [[655, "mne.simulation.metrics.region_localization_error"]], "roc_auc_score() (in module mne.simulation.metrics)": [[656, "mne.simulation.metrics.roc_auc_score"]], "spatial_deviation_error() (in module mne.simulation.metrics)": [[657, "mne.simulation.metrics.spatial_deviation_error"]], "select_source_in_label() (in module mne.simulation)": [[658, "mne.simulation.select_source_in_label"]], "simulate_evoked() (in module mne.simulation)": [[659, "mne.simulation.simulate_evoked"]], "simulate_raw() (in module mne.simulation)": [[660, "mne.simulation.simulate_raw"]], "simulate_sparse_stc() (in module mne.simulation)": [[661, "mne.simulation.simulate_sparse_stc"]], "simulate_stc() (in module mne.simulation)": [[662, "mne.simulation.simulate_stc"]], "compute_distance_to_sensors() (in module mne.source_space)": [[663, "mne.source_space.compute_distance_to_sensors"]], "get_decimated_surfaces() (in module mne.source_space)": [[664, "mne.source_space.get_decimated_surfaces"]], "spatial_dist_adjacency() (in module mne)": [[665, "mne.spatial_dist_adjacency"]], "spatial_inter_hemi_adjacency() (in module mne)": [[666, "mne.spatial_inter_hemi_adjacency"]], "spatial_src_adjacency() (in module mne)": [[667, "mne.spatial_src_adjacency"]], "spatial_tris_adjacency() (in module mne)": [[668, "mne.spatial_tris_adjacency"]], "spatio_temporal_dist_adjacency() (in module mne)": [[669, "mne.spatio_temporal_dist_adjacency"]], "spatio_temporal_src_adjacency() (in module mne)": [[670, "mne.spatio_temporal_src_adjacency"]], "spatio_temporal_tris_adjacency() (in module mne)": [[671, "mne.spatio_temporal_tris_adjacency"]], "split_label() (in module mne)": [[672, "mne.split_label"]], "bonferroni_correction() (in module mne.stats)": [[673, "mne.stats.bonferroni_correction"]], "bootstrap_confidence_interval() (in module mne.stats)": [[674, "mne.stats.bootstrap_confidence_interval"]], "combine_adjacency() (in module mne.stats)": [[675, "mne.stats.combine_adjacency"]], "f_mway_rm() (in module mne.stats)": [[676, "mne.stats.f_mway_rm"]], "f_oneway() (in module mne.stats)": [[677, "mne.stats.f_oneway"]], "f_threshold_mway_rm() (in module mne.stats)": [[678, "mne.stats.f_threshold_mway_rm"]], "fdr_correction() (in module mne.stats)": [[679, "mne.stats.fdr_correction"]], "linear_regression() (in module mne.stats)": [[680, "mne.stats.linear_regression"]], "linear_regression_raw() (in module mne.stats)": [[681, "mne.stats.linear_regression_raw"]], "permutation_cluster_1samp_test() (in module mne.stats)": [[682, "mne.stats.permutation_cluster_1samp_test"]], "permutation_cluster_test() (in module mne.stats)": [[683, "mne.stats.permutation_cluster_test"]], "permutation_t_test() (in module mne.stats)": [[684, "mne.stats.permutation_t_test"]], "spatio_temporal_cluster_1samp_test() (in module mne.stats)": [[685, "mne.stats.spatio_temporal_cluster_1samp_test"]], "spatio_temporal_cluster_test() (in module mne.stats)": [[686, "mne.stats.spatio_temporal_cluster_test"]], "summarize_clusters_stc() (in module mne.stats)": [[687, "mne.stats.summarize_clusters_stc"]], "ttest_1samp_no_p() (in module mne.stats)": [[688, "mne.stats.ttest_1samp_no_p"]], "ttest_ind_no_p() (in module mne.stats)": [[689, "mne.stats.ttest_ind_no_p"]], "stc_near_sensors() (in module mne)": [[690, "mne.stc_near_sensors"]], "stc_to_label() (in module mne)": [[691, "mne.stc_to_label"]], "complete_surface_info() (in module mne.surface)": [[692, "mne.surface.complete_surface_info"]], "read_curvature() (in module mne.surface)": [[693, "mne.surface.read_curvature"]], "sys_info() (in module mne)": [[694, "mne.sys_info"]], "averagetfr (class in mne.time_frequency)": [[695, "mne.time_frequency.AverageTFR"]], "__add__() (mne.time_frequency.averagetfr method)": [[695, "mne.time_frequency.AverageTFR.__add__"]], "__contains__() (mne.time_frequency.averagetfr method)": [[695, "mne.time_frequency.AverageTFR.__contains__"]], "__mul__() (mne.time_frequency.averagetfr method)": [[695, "mne.time_frequency.AverageTFR.__mul__"]], "__sub__() (mne.time_frequency.averagetfr method)": [[695, "mne.time_frequency.AverageTFR.__sub__"]], "add_channels() (mne.time_frequency.averagetfr method)": [[695, "mne.time_frequency.AverageTFR.add_channels"]], "add_reference_channels() (mne.time_frequency.averagetfr method)": [[695, "mne.time_frequency.AverageTFR.add_reference_channels"]], "apply_baseline() (mne.time_frequency.averagetfr method)": [[695, "mne.time_frequency.AverageTFR.apply_baseline"]], "ch_names (mne.time_frequency.averagetfr property)": [[695, "mne.time_frequency.AverageTFR.ch_names"]], "compensation_grade (mne.time_frequency.averagetfr property)": [[695, "mne.time_frequency.AverageTFR.compensation_grade"]], "copy() (mne.time_frequency.averagetfr method)": [[695, "mne.time_frequency.AverageTFR.copy"]], "crop() (mne.time_frequency.averagetfr method)": [[695, "mne.time_frequency.AverageTFR.crop"]], "decimate() (mne.time_frequency.averagetfr method)": [[695, "mne.time_frequency.AverageTFR.decimate"]], "drop_channels() (mne.time_frequency.averagetfr method)": [[695, "mne.time_frequency.AverageTFR.drop_channels"]], "get_channel_types() (mne.time_frequency.averagetfr method)": [[695, "mne.time_frequency.AverageTFR.get_channel_types"]], "pick() (mne.time_frequency.averagetfr method)": [[695, "mne.time_frequency.AverageTFR.pick"]], "pick_channels() (mne.time_frequency.averagetfr method)": [[695, "mne.time_frequency.AverageTFR.pick_channels"]], "pick_types() (mne.time_frequency.averagetfr method)": [[695, "mne.time_frequency.AverageTFR.pick_types"]], "plot() (mne.time_frequency.averagetfr method)": [[695, "mne.time_frequency.AverageTFR.plot"]], "plot_joint() (mne.time_frequency.averagetfr method)": [[695, "mne.time_frequency.AverageTFR.plot_joint"]], "plot_topo() (mne.time_frequency.averagetfr method)": [[695, "mne.time_frequency.AverageTFR.plot_topo"]], "plot_topomap() (mne.time_frequency.averagetfr method)": [[695, "mne.time_frequency.AverageTFR.plot_topomap"]], "reorder_channels() (mne.time_frequency.averagetfr method)": [[695, "mne.time_frequency.AverageTFR.reorder_channels"]], "save() (mne.time_frequency.averagetfr method)": [[695, "mne.time_frequency.AverageTFR.save"]], "shift_time() (mne.time_frequency.averagetfr method)": [[695, "mne.time_frequency.AverageTFR.shift_time"]], "time_as_index() (mne.time_frequency.averagetfr method)": [[695, "mne.time_frequency.AverageTFR.time_as_index"]], "times (mne.time_frequency.averagetfr property)": [[695, "mne.time_frequency.AverageTFR.times"]], "tmax (mne.time_frequency.averagetfr property)": [[695, "mne.time_frequency.AverageTFR.tmax"]], "tmin (mne.time_frequency.averagetfr property)": [[695, "mne.time_frequency.AverageTFR.tmin"]], "to_data_frame() (mne.time_frequency.averagetfr method)": [[695, "mne.time_frequency.AverageTFR.to_data_frame"]], "crossspectraldensity (class in mne.time_frequency)": [[696, "mne.time_frequency.CrossSpectralDensity"]], "__getitem__() (mne.time_frequency.crossspectraldensity method)": [[696, "mne.time_frequency.CrossSpectralDensity.__getitem__"]], "__len__() (mne.time_frequency.crossspectraldensity method)": [[696, "mne.time_frequency.CrossSpectralDensity.__len__"]], "copy() (mne.time_frequency.crossspectraldensity method)": [[696, "mne.time_frequency.CrossSpectralDensity.copy"]], "get_data() (mne.time_frequency.crossspectraldensity method)": [[696, "mne.time_frequency.CrossSpectralDensity.get_data"]], "mean() (mne.time_frequency.crossspectraldensity method)": [[696, "mne.time_frequency.CrossSpectralDensity.mean"]], "n_channels (mne.time_frequency.crossspectraldensity property)": [[696, "mne.time_frequency.CrossSpectralDensity.n_channels"]], "pick_channels() (mne.time_frequency.crossspectraldensity method)": [[696, "mne.time_frequency.CrossSpectralDensity.pick_channels"]], "pick_frequency() (mne.time_frequency.crossspectraldensity method)": [[696, "mne.time_frequency.CrossSpectralDensity.pick_frequency"]], "plot() (mne.time_frequency.crossspectraldensity method)": [[696, "mne.time_frequency.CrossSpectralDensity.plot"]], "save() (mne.time_frequency.crossspectraldensity method)": [[696, "mne.time_frequency.CrossSpectralDensity.save"]], "sum() (mne.time_frequency.crossspectraldensity method)": [[696, "mne.time_frequency.CrossSpectralDensity.sum"]], "epochsspectrum (class in mne.time_frequency)": [[697, "mne.time_frequency.EpochsSpectrum"]], "__contains__() (mne.time_frequency.epochsspectrum method)": [[697, "mne.time_frequency.EpochsSpectrum.__contains__"]], "__getitem__() (mne.time_frequency.epochsspectrum method)": [[697, "mne.time_frequency.EpochsSpectrum.__getitem__"]], "__iter__() (mne.time_frequency.epochsspectrum method)": [[697, "mne.time_frequency.EpochsSpectrum.__iter__"]], "__len__() (mne.time_frequency.epochsspectrum method)": [[697, "mne.time_frequency.EpochsSpectrum.__len__"]], "add_channels() (mne.time_frequency.epochsspectrum method)": [[697, "mne.time_frequency.EpochsSpectrum.add_channels"]], "add_reference_channels() (mne.time_frequency.epochsspectrum method)": [[697, "mne.time_frequency.EpochsSpectrum.add_reference_channels"]], "average() (mne.time_frequency.epochsspectrum method)": [[697, "mne.time_frequency.EpochsSpectrum.average"]], "compensation_grade (mne.time_frequency.epochsspectrum property)": [[697, "mne.time_frequency.EpochsSpectrum.compensation_grade"]], "copy() (mne.time_frequency.epochsspectrum method)": [[697, "mne.time_frequency.EpochsSpectrum.copy"]], "drop_channels() (mne.time_frequency.epochsspectrum method)": [[697, "mne.time_frequency.EpochsSpectrum.drop_channels"]], "get_channel_types() (mne.time_frequency.epochsspectrum method)": [[697, "mne.time_frequency.EpochsSpectrum.get_channel_types"]], "get_data() (mne.time_frequency.epochsspectrum method)": [[697, "mne.time_frequency.EpochsSpectrum.get_data"]], "metadata (mne.time_frequency.epochsspectrum property)": [[697, "mne.time_frequency.EpochsSpectrum.metadata"]], "next() (mne.time_frequency.epochsspectrum method)": [[697, "mne.time_frequency.EpochsSpectrum.next"]], "pick() (mne.time_frequency.epochsspectrum method)": [[697, "mne.time_frequency.EpochsSpectrum.pick"]], "pick_channels() (mne.time_frequency.epochsspectrum method)": [[697, "mne.time_frequency.EpochsSpectrum.pick_channels"]], "pick_types() (mne.time_frequency.epochsspectrum method)": [[697, "mne.time_frequency.EpochsSpectrum.pick_types"]], "plot() (mne.time_frequency.epochsspectrum method)": [[697, "mne.time_frequency.EpochsSpectrum.plot"]], "plot_topo() (mne.time_frequency.epochsspectrum method)": [[697, "mne.time_frequency.EpochsSpectrum.plot_topo"]], "plot_topomap() (mne.time_frequency.epochsspectrum method)": [[697, "mne.time_frequency.EpochsSpectrum.plot_topomap"]], "reorder_channels() (mne.time_frequency.epochsspectrum method)": [[697, "mne.time_frequency.EpochsSpectrum.reorder_channels"]], "save() (mne.time_frequency.epochsspectrum method)": [[697, "mne.time_frequency.EpochsSpectrum.save"]], "to_data_frame() (mne.time_frequency.epochsspectrum method)": [[697, "mne.time_frequency.EpochsSpectrum.to_data_frame"]], "units() (mne.time_frequency.epochsspectrum method)": [[697, "mne.time_frequency.EpochsSpectrum.units"]], "epochstfr (class in mne.time_frequency)": [[698, "mne.time_frequency.EpochsTFR"]], "__contains__() (mne.time_frequency.epochstfr method)": [[698, "mne.time_frequency.EpochsTFR.__contains__"]], "__getitem__() (mne.time_frequency.epochstfr method)": [[698, "mne.time_frequency.EpochsTFR.__getitem__"]], "__iter__() (mne.time_frequency.epochstfr method)": [[698, "mne.time_frequency.EpochsTFR.__iter__"]], "__len__() (mne.time_frequency.epochstfr method)": [[698, "mne.time_frequency.EpochsTFR.__len__"]], "add_channels() (mne.time_frequency.epochstfr method)": [[698, "mne.time_frequency.EpochsTFR.add_channels"]], "add_reference_channels() (mne.time_frequency.epochstfr method)": [[698, "mne.time_frequency.EpochsTFR.add_reference_channels"]], "apply_baseline() (mne.time_frequency.epochstfr method)": [[698, "mne.time_frequency.EpochsTFR.apply_baseline"]], "average() (mne.time_frequency.epochstfr method)": [[698, "mne.time_frequency.EpochsTFR.average"]], "ch_names (mne.time_frequency.epochstfr property)": [[698, "mne.time_frequency.EpochsTFR.ch_names"]], "compensation_grade (mne.time_frequency.epochstfr property)": [[698, "mne.time_frequency.EpochsTFR.compensation_grade"]], "copy() (mne.time_frequency.epochstfr method)": [[698, "mne.time_frequency.EpochsTFR.copy"]], "crop() (mne.time_frequency.epochstfr method)": [[698, "mne.time_frequency.EpochsTFR.crop"]], "decimate() (mne.time_frequency.epochstfr method)": [[698, "mne.time_frequency.EpochsTFR.decimate"]], "drop_channels() (mne.time_frequency.epochstfr method)": [[698, "mne.time_frequency.EpochsTFR.drop_channels"]], "get_channel_types() (mne.time_frequency.epochstfr method)": [[698, "mne.time_frequency.EpochsTFR.get_channel_types"]], "metadata (mne.time_frequency.epochstfr property)": [[698, "mne.time_frequency.EpochsTFR.metadata"]], "next() (mne.time_frequency.epochstfr method)": [[698, "mne.time_frequency.EpochsTFR.next"]], "pick() (mne.time_frequency.epochstfr method)": [[698, "mne.time_frequency.EpochsTFR.pick"]], "pick_channels() (mne.time_frequency.epochstfr method)": [[698, "mne.time_frequency.EpochsTFR.pick_channels"]], "pick_types() (mne.time_frequency.epochstfr method)": [[698, "mne.time_frequency.EpochsTFR.pick_types"]], "reorder_channels() (mne.time_frequency.epochstfr method)": [[698, "mne.time_frequency.EpochsTFR.reorder_channels"]], "save() (mne.time_frequency.epochstfr method)": [[698, "mne.time_frequency.EpochsTFR.save"]], "shift_time() (mne.time_frequency.epochstfr method)": [[698, "mne.time_frequency.EpochsTFR.shift_time"]], "time_as_index() (mne.time_frequency.epochstfr method)": [[698, "mne.time_frequency.EpochsTFR.time_as_index"]], "times (mne.time_frequency.epochstfr property)": [[698, "mne.time_frequency.EpochsTFR.times"]], "tmax (mne.time_frequency.epochstfr property)": [[698, "mne.time_frequency.EpochsTFR.tmax"]], "tmin (mne.time_frequency.epochstfr property)": [[698, "mne.time_frequency.EpochsTFR.tmin"]], "to_data_frame() (mne.time_frequency.epochstfr method)": [[698, "mne.time_frequency.EpochsTFR.to_data_frame"]], "spectrum (class in mne.time_frequency)": [[699, "mne.time_frequency.Spectrum"]], "__contains__() (mne.time_frequency.spectrum method)": [[699, "mne.time_frequency.Spectrum.__contains__"]], "__getitem__() (mne.time_frequency.spectrum method)": [[699, "mne.time_frequency.Spectrum.__getitem__"]], "add_channels() (mne.time_frequency.spectrum method)": [[699, "mne.time_frequency.Spectrum.add_channels"]], "add_reference_channels() (mne.time_frequency.spectrum method)": [[699, "mne.time_frequency.Spectrum.add_reference_channels"]], "compensation_grade (mne.time_frequency.spectrum property)": [[699, "mne.time_frequency.Spectrum.compensation_grade"]], "copy() (mne.time_frequency.spectrum method)": [[699, "mne.time_frequency.Spectrum.copy"]], "drop_channels() (mne.time_frequency.spectrum method)": [[699, "mne.time_frequency.Spectrum.drop_channels"]], "get_channel_types() (mne.time_frequency.spectrum method)": [[699, "mne.time_frequency.Spectrum.get_channel_types"]], "get_data() (mne.time_frequency.spectrum method)": [[699, "mne.time_frequency.Spectrum.get_data"]], "pick() (mne.time_frequency.spectrum method)": [[699, "mne.time_frequency.Spectrum.pick"]], "pick_channels() (mne.time_frequency.spectrum method)": [[699, "mne.time_frequency.Spectrum.pick_channels"]], "pick_types() (mne.time_frequency.spectrum method)": [[699, "mne.time_frequency.Spectrum.pick_types"]], "plot() (mne.time_frequency.spectrum method)": [[699, "mne.time_frequency.Spectrum.plot"]], "plot_topo() (mne.time_frequency.spectrum method)": [[699, "mne.time_frequency.Spectrum.plot_topo"]], "plot_topomap() (mne.time_frequency.spectrum method)": [[699, "mne.time_frequency.Spectrum.plot_topomap"]], "reorder_channels() (mne.time_frequency.spectrum method)": [[699, "mne.time_frequency.Spectrum.reorder_channels"]], "save() (mne.time_frequency.spectrum method)": [[699, "mne.time_frequency.Spectrum.save"]], "to_data_frame() (mne.time_frequency.spectrum method)": [[699, "mne.time_frequency.Spectrum.to_data_frame"]], "units() (mne.time_frequency.spectrum method)": [[699, "mne.time_frequency.Spectrum.units"]], "csd_array_fourier() (in module mne.time_frequency)": [[700, "mne.time_frequency.csd_array_fourier"]], "csd_array_morlet() (in module mne.time_frequency)": [[701, "mne.time_frequency.csd_array_morlet"]], "csd_array_multitaper() (in module mne.time_frequency)": [[702, "mne.time_frequency.csd_array_multitaper"]], "csd_fourier() (in module mne.time_frequency)": [[703, "mne.time_frequency.csd_fourier"]], "csd_morlet() (in module mne.time_frequency)": [[704, "mne.time_frequency.csd_morlet"]], "csd_multitaper() (in module mne.time_frequency)": [[705, "mne.time_frequency.csd_multitaper"]], "csd_tfr() (in module mne.time_frequency)": [[706, "mne.time_frequency.csd_tfr"]], "dpss_windows() (in module mne.time_frequency)": [[707, "mne.time_frequency.dpss_windows"]], "fit_iir_model_raw() (in module mne.time_frequency)": [[708, "mne.time_frequency.fit_iir_model_raw"]], "fwhm() (in module mne.time_frequency)": [[709, "mne.time_frequency.fwhm"]], "istft() (in module mne.time_frequency)": [[710, "mne.time_frequency.istft"]], "morlet() (in module mne.time_frequency)": [[711, "mne.time_frequency.morlet"]], "pick_channels_csd() (in module mne.time_frequency)": [[712, "mne.time_frequency.pick_channels_csd"]], "psd_array_multitaper() (in module mne.time_frequency)": [[713, "mne.time_frequency.psd_array_multitaper"]], "psd_array_welch() (in module mne.time_frequency)": [[714, "mne.time_frequency.psd_array_welch"]], "read_csd() (in module mne.time_frequency)": [[715, "mne.time_frequency.read_csd"]], "read_spectrum() (in module mne.time_frequency)": [[716, "mne.time_frequency.read_spectrum"]], "read_tfrs() (in module mne.time_frequency)": [[717, "mne.time_frequency.read_tfrs"]], "stft() (in module mne.time_frequency)": [[718, "mne.time_frequency.stft"]], "stftfreq() (in module mne.time_frequency)": [[719, "mne.time_frequency.stftfreq"]], "cwt() (in module mne.time_frequency.tfr)": [[720, "mne.time_frequency.tfr.cwt"]], "morlet() (in module mne.time_frequency.tfr)": [[721, "mne.time_frequency.tfr.morlet"]], "tfr_array_morlet() (in module mne.time_frequency)": [[722, "mne.time_frequency.tfr_array_morlet"]], "tfr_array_multitaper() (in module mne.time_frequency)": [[723, "mne.time_frequency.tfr_array_multitaper"]], "tfr_array_stockwell() (in module mne.time_frequency)": [[724, "mne.time_frequency.tfr_array_stockwell"]], "tfr_morlet() (in module mne.time_frequency)": [[725, "mne.time_frequency.tfr_morlet"]], "tfr_multitaper() (in module mne.time_frequency)": [[726, "mne.time_frequency.tfr_multitaper"]], "tfr_stockwell() (in module mne.time_frequency)": [[727, "mne.time_frequency.tfr_stockwell"]], "write_tfrs() (in module mne.time_frequency)": [[728, "mne.time_frequency.write_tfrs"]], "transform_surface_to() (in module mne)": [[729, "mne.transform_surface_to"]], "transform (class in mne.transforms)": [[730, "mne.transforms.Transform"]], "__contains__() (mne.transforms.transform method)": [[730, "mne.transforms.Transform.__contains__"]], "__getitem__() (mne.transforms.transform method)": [[730, "mne.transforms.Transform.__getitem__"]], "__iter__() (mne.transforms.transform method)": [[730, "mne.transforms.Transform.__iter__"]], "__len__() (mne.transforms.transform method)": [[730, "mne.transforms.Transform.__len__"]], "clear() (mne.transforms.transform method)": [[730, "mne.transforms.Transform.clear"]], "copy() (mne.transforms.transform method)": [[730, "mne.transforms.Transform.copy"]], "from_str (mne.transforms.transform property)": [[730, "mne.transforms.Transform.from_str"]], "fromkeys() (mne.transforms.transform method)": [[730, "mne.transforms.Transform.fromkeys"]], "get() (mne.transforms.transform method)": [[730, "mne.transforms.Transform.get"]], "items() (mne.transforms.transform method)": [[730, "mne.transforms.Transform.items"]], "keys() (mne.transforms.transform method)": [[730, "mne.transforms.Transform.keys"]], "pop() (mne.transforms.transform method)": [[730, "mne.transforms.Transform.pop"]], "popitem() (mne.transforms.transform method)": [[730, "mne.transforms.Transform.popitem"]], "save() (mne.transforms.transform method)": [[730, "mne.transforms.Transform.save"]], "setdefault() (mne.transforms.transform method)": [[730, "mne.transforms.Transform.setdefault"]], "to_str (mne.transforms.transform property)": [[730, "mne.transforms.Transform.to_str"]], "update() (mne.transforms.transform method)": [[730, "mne.transforms.Transform.update"]], "values() (mne.transforms.transform method)": [[730, "mne.transforms.Transform.values"]], "apply_volume_registration() (in module mne.transforms)": [[731, "mne.transforms.apply_volume_registration"]], "compute_volume_registration() (in module mne.transforms)": [[732, "mne.transforms.compute_volume_registration"]], "quat_to_rot() (in module mne.transforms)": [[733, "mne.transforms.quat_to_rot"]], "read_ras_mni_t() (in module mne.transforms)": [[734, "mne.transforms.read_ras_mni_t"]], "rot_to_quat() (in module mne.transforms)": [[735, "mne.transforms.rot_to_quat"]], "use_coil_def() (in module mne)": [[736, "mne.use_coil_def"]], "use_log_level (class in mne)": [[737, "mne.use_log_level"]], "deprecated (class in mne.utils)": [[738, "mne.utils.deprecated"]], "warn() (in module mne.utils)": [[739, "mne.utils.warn"]], "verbose() (in module mne)": [[740, "mne.verbose"]], "vertex_to_mni() (in module mne)": [[741, "mne.vertex_to_mni"]], "brain (class in mne.viz)": [[742, "mne.viz.Brain"]], "add_annotation() (mne.viz.brain method)": [[742, "mne.viz.Brain.add_annotation"]], "add_data() (mne.viz.brain method)": [[742, "mne.viz.Brain.add_data"]], "add_dipole() (mne.viz.brain method)": [[742, "mne.viz.Brain.add_dipole"]], "add_foci() (mne.viz.brain method)": [[742, "mne.viz.Brain.add_foci"]], "add_forward() (mne.viz.brain method)": [[742, "mne.viz.Brain.add_forward"]], "add_head() (mne.viz.brain method)": [[742, "mne.viz.Brain.add_head"]], "add_label() (mne.viz.brain method)": [[742, "mne.viz.Brain.add_label"]], "add_sensors() (mne.viz.brain method)": [[742, "mne.viz.Brain.add_sensors"]], "add_skull() (mne.viz.brain method)": [[742, "mne.viz.Brain.add_skull"]], "add_text() (mne.viz.brain method)": [[742, "mne.viz.Brain.add_text"]], "add_volume_labels() (mne.viz.brain method)": [[742, "mne.viz.Brain.add_volume_labels"]], "apply_auto_scaling() (mne.viz.brain method)": [[742, "mne.viz.Brain.apply_auto_scaling"]], "clear_glyphs() (mne.viz.brain method)": [[742, "mne.viz.Brain.clear_glyphs"]], "close() (mne.viz.brain method)": [[742, "mne.viz.Brain.close"]], "data (mne.viz.brain property)": [[742, "mne.viz.Brain.data"]], "get_picked_points() (mne.viz.brain method)": [[742, "mne.viz.Brain.get_picked_points"]], "get_view() (mne.viz.brain method)": [[742, "mne.viz.Brain.get_view"]], "help() (mne.viz.brain method)": [[742, "mne.viz.Brain.help"]], "interaction (mne.viz.brain property)": [[742, "mne.viz.Brain.interaction"]], "plot_time_course() (mne.viz.brain method)": [[742, "mne.viz.Brain.plot_time_course"]], "plot_time_line() (mne.viz.brain method)": [[742, "mne.viz.Brain.plot_time_line"]], "remove_annotations() (mne.viz.brain method)": [[742, "mne.viz.Brain.remove_annotations"]], "remove_data() (mne.viz.brain method)": [[742, "mne.viz.Brain.remove_data"]], "remove_dipole() (mne.viz.brain method)": [[742, "mne.viz.Brain.remove_dipole"]], "remove_forward() (mne.viz.brain method)": [[742, "mne.viz.Brain.remove_forward"]], "remove_head() (mne.viz.brain method)": [[742, "mne.viz.Brain.remove_head"]], "remove_labels() (mne.viz.brain method)": [[742, "mne.viz.Brain.remove_labels"]], "remove_sensors() (mne.viz.brain method)": [[742, "mne.viz.Brain.remove_sensors"]], "remove_skull() (mne.viz.brain method)": [[742, "mne.viz.Brain.remove_skull"]], "remove_text() (mne.viz.brain method)": [[742, "mne.viz.Brain.remove_text"]], "remove_volume_labels() (mne.viz.brain method)": [[742, "mne.viz.Brain.remove_volume_labels"]], "reset() (mne.viz.brain method)": [[742, "mne.viz.Brain.reset"]], "reset_view() (mne.viz.brain method)": [[742, "mne.viz.Brain.reset_view"]], "restore_user_scaling() (mne.viz.brain method)": [[742, "mne.viz.Brain.restore_user_scaling"]], "save_image() (mne.viz.brain method)": [[742, "mne.viz.Brain.save_image"]], "save_movie() (mne.viz.brain method)": [[742, "mne.viz.Brain.save_movie"]], "screenshot() (mne.viz.brain method)": [[742, "mne.viz.Brain.screenshot"]], "set_data_smoothing() (mne.viz.brain method)": [[742, "mne.viz.Brain.set_data_smoothing"]], "set_playback_speed() (mne.viz.brain method)": [[742, "mne.viz.Brain.set_playback_speed"]], "set_time() (mne.viz.brain method)": [[742, "mne.viz.Brain.set_time"]], "set_time_interpolation() (mne.viz.brain method)": [[742, "mne.viz.Brain.set_time_interpolation"]], "set_time_point() (mne.viz.brain method)": [[742, "mne.viz.Brain.set_time_point"]], "setup_time_viewer() (mne.viz.brain method)": [[742, "mne.viz.Brain.setup_time_viewer"]], "show() (mne.viz.brain method)": [[742, "mne.viz.Brain.show"]], "show_view() (mne.viz.brain method)": [[742, "mne.viz.Brain.show_view"]], "time_interpolation (mne.viz.brain property)": [[742, "mne.viz.Brain.time_interpolation"]], "toggle_interface() (mne.viz.brain method)": [[742, "mne.viz.Brain.toggle_interface"]], "toggle_playback() (mne.viz.brain method)": [[742, "mne.viz.Brain.toggle_playback"]], "update_lut() (mne.viz.brain method)": [[742, "mne.viz.Brain.update_lut"]], "clickableimage (class in mne.viz)": [[743, "mne.viz.ClickableImage"]], "onclick() (mne.viz.clickableimage method)": [[743, "mne.viz.ClickableImage.onclick"]], "plot_clicks() (mne.viz.clickableimage method)": [[743, "mne.viz.ClickableImage.plot_clicks"]], "to_layout() (mne.viz.clickableimage method)": [[743, "mne.viz.ClickableImage.to_layout"]], "figure3d (class in mne.viz)": [[744, "mne.viz.Figure3D"]], "plotter (mne.viz.figure3d property)": [[744, "mne.viz.Figure3D.plotter"]], "add_background_image() (in module mne.viz)": [[745, "mne.viz.add_background_image"]], "centers_to_edges() (in module mne.viz)": [[746, "mne.viz.centers_to_edges"]], "circular_layout() (in module mne.viz)": [[747, "mne.viz.circular_layout"]], "close_3d_figure() (in module mne.viz)": [[748, "mne.viz.close_3d_figure"]], "close_all_3d_figures() (in module mne.viz)": [[749, "mne.viz.close_all_3d_figures"]], "compare_fiff() (in module mne.viz)": [[750, "mne.viz.compare_fiff"]], "create_3d_figure() (in module mne.viz)": [[751, "mne.viz.create_3d_figure"]], "get_3d_backend() (in module mne.viz)": [[752, "mne.viz.get_3d_backend"]], "get_brain_class() (in module mne.viz)": [[753, "mne.viz.get_brain_class"]], "get_browser_backend() (in module mne.viz)": [[754, "mne.viz.get_browser_backend"]], "iter_topography() (in module mne.viz)": [[755, "mne.viz.iter_topography"]], "link_brains() (in module mne.viz)": [[756, "mne.viz.link_brains"]], "mne_analyze_colormap() (in module mne.viz)": [[757, "mne.viz.mne_analyze_colormap"]], "plot_alignment() (in module mne.viz)": [[758, "mne.viz.plot_alignment"]], "plot_arrowmap() (in module mne.viz)": [[759, "mne.viz.plot_arrowmap"]], "plot_bem() (in module mne.viz)": [[760, "mne.viz.plot_bem"]], "plot_brain_colorbar() (in module mne.viz)": [[761, "mne.viz.plot_brain_colorbar"]], "plot_bridged_electrodes() (in module mne.viz)": [[762, "mne.viz.plot_bridged_electrodes"]], "plot_ch_adjacency() (in module mne.viz)": [[763, "mne.viz.plot_ch_adjacency"]], "plot_channel_labels_circle() (in module mne.viz)": [[764, "mne.viz.plot_channel_labels_circle"]], "plot_chpi_snr() (in module mne.viz)": [[765, "mne.viz.plot_chpi_snr"]], "plot_compare_evokeds() (in module mne.viz)": [[766, "mne.viz.plot_compare_evokeds"]], "plot_cov() (in module mne.viz)": [[767, "mne.viz.plot_cov"]], "plot_csd() (in module mne.viz)": [[768, "mne.viz.plot_csd"]], "plot_dipole_amplitudes() (in module mne.viz)": [[769, "mne.viz.plot_dipole_amplitudes"]], "plot_dipole_locations() (in module mne.viz)": [[770, "mne.viz.plot_dipole_locations"]], "plot_drop_log() (in module mne.viz)": [[771, "mne.viz.plot_drop_log"]], "plot_epochs() (in module mne.viz)": [[772, "mne.viz.plot_epochs"]], "plot_epochs_image() (in module mne.viz)": [[773, "mne.viz.plot_epochs_image"]], "plot_epochs_psd_topomap() (in module mne.viz)": [[774, "mne.viz.plot_epochs_psd_topomap"]], "plot_events() (in module mne.viz)": [[775, "mne.viz.plot_events"]], "plot_evoked() (in module mne.viz)": [[776, "mne.viz.plot_evoked"]], "plot_evoked_field() (in module mne.viz)": [[777, "mne.viz.plot_evoked_field"]], "plot_evoked_image() (in module mne.viz)": [[778, "mne.viz.plot_evoked_image"]], "plot_evoked_joint() (in module mne.viz)": [[779, "mne.viz.plot_evoked_joint"]], "plot_evoked_topo() (in module mne.viz)": [[780, "mne.viz.plot_evoked_topo"]], "plot_evoked_topomap() (in module mne.viz)": [[781, "mne.viz.plot_evoked_topomap"]], "plot_evoked_white() (in module mne.viz)": [[782, "mne.viz.plot_evoked_white"]], "plot_filter() (in module mne.viz)": [[783, "mne.viz.plot_filter"]], "plot_head_positions() (in module mne.viz)": [[784, "mne.viz.plot_head_positions"]], "plot_ica_components() (in module mne.viz)": [[785, "mne.viz.plot_ica_components"]], "plot_ica_overlay() (in module mne.viz)": [[786, "mne.viz.plot_ica_overlay"]], "plot_ica_properties() (in module mne.viz)": [[787, "mne.viz.plot_ica_properties"]], "plot_ica_scores() (in module mne.viz)": [[788, "mne.viz.plot_ica_scores"]], "plot_ica_sources() (in module mne.viz)": [[789, "mne.viz.plot_ica_sources"]], "plot_ideal_filter() (in module mne.viz)": [[790, "mne.viz.plot_ideal_filter"]], "plot_layout() (in module mne.viz)": [[791, "mne.viz.plot_layout"]], "plot_montage() (in module mne.viz)": [[792, "mne.viz.plot_montage"]], "plot_projs_joint() (in module mne.viz)": [[793, "mne.viz.plot_projs_joint"]], "plot_projs_topomap() (in module mne.viz)": [[794, "mne.viz.plot_projs_topomap"]], "plot_raw() (in module mne.viz)": [[795, "mne.viz.plot_raw"]], "plot_raw_psd() (in module mne.viz)": [[796, "mne.viz.plot_raw_psd"]], "plot_regression_weights() (in module mne.viz)": [[797, "mne.viz.plot_regression_weights"]], "plot_sensors() (in module mne.viz)": [[798, "mne.viz.plot_sensors"]], "plot_snr_estimate() (in module mne.viz)": [[799, "mne.viz.plot_snr_estimate"]], "plot_source_estimates() (in module mne.viz)": [[800, "mne.viz.plot_source_estimates"]], "plot_sparse_source_estimates() (in module mne.viz)": [[801, "mne.viz.plot_sparse_source_estimates"]], "plot_tfr_topomap() (in module mne.viz)": [[802, "mne.viz.plot_tfr_topomap"]], "plot_topo_image_epochs() (in module mne.viz)": [[803, "mne.viz.plot_topo_image_epochs"]], "plot_topomap() (in module mne.viz)": [[804, "mne.viz.plot_topomap"]], "plot_vector_source_estimates() (in module mne.viz)": [[805, "mne.viz.plot_vector_source_estimates"]], "plot_volume_source_estimates() (in module mne.viz)": [[806, "mne.viz.plot_volume_source_estimates"]], "set_3d_backend() (in module mne.viz)": [[807, "mne.viz.set_3d_backend"]], "set_3d_options() (in module mne.viz)": [[808, "mne.viz.set_3d_options"]], "set_3d_title() (in module mne.viz)": [[809, "mne.viz.set_3d_title"]], "set_3d_view() (in module mne.viz)": [[810, "mne.viz.set_3d_view"]], "set_browser_backend() (in module mne.viz)": [[811, "mne.viz.set_browser_backend"]], "snapshot_brain_montage() (in module mne.viz)": [[812, "mne.viz.snapshot_brain_montage"]], "use_3d_backend() (in module mne.viz)": [[813, "mne.viz.use_3d_backend"]], "use_browser_backend() (in module mne.viz)": [[814, "mne.viz.use_browser_backend"]], "warp_montage_volume() (in module mne)": [[815, "mne.warp_montage_volume"]], "what() (in module mne)": [[816, "mne.what"]], "write_bem_solution() (in module mne)": [[817, "mne.write_bem_solution"]], "write_bem_surfaces() (in module mne)": [[818, "mne.write_bem_surfaces"]], "write_cov() (in module mne)": [[819, "mne.write_cov"]], "write_events() (in module mne)": [[820, "mne.write_events"]], "write_evokeds() (in module mne)": [[821, "mne.write_evokeds"]], "write_forward_solution() (in module mne)": [[822, "mne.write_forward_solution"]], "write_head_bem() (in module mne)": [[823, "mne.write_head_bem"]], "write_label() (in module mne)": [[824, "mne.write_label"]], "write_labels_to_annot() (in module mne)": [[825, "mne.write_labels_to_annot"]], "write_proj() (in module mne)": [[826, "mne.write_proj"]], "write_source_spaces() (in module mne)": [[827, "mne.write_source_spaces"]], "write_surface() (in module mne)": [[828, "mne.write_surface"]], "write_trans() (in module mne)": [[829, "mne.write_trans"]], "bem": [[830, "term-BEM"]], "dc": [[830, "term-DC"]], "dics": [[830, "term-DICS"]], "ecd": [[830, "term-ECD"]], "freesurfer lut": [[830, "term-FreeSurfer-LUT"]], "gfp": [[830, "term-GFP"]], "hed": [[830, "term-HED"]], "hpi": [[830, "term-HPI"]], "lcmv": [[830, "term-LCMV"]], "lcmv beamformer": [[830, "term-LCMV-beamformer"]], "lut": [[830, "term-LUT"]], "mne": [[830, "term-MNE"], [865, "module-mne"]], "opm": [[830, "term-OPM"]], "ras": [[830, "term-RAS"]], "roi": [[830, "term-ROI"]], "squid": [[830, "term-SQUID"]], "ssp": [[830, "term-SSP"]], "stc": [[830, "term-STC"]], "anatomical landmark": [[830, "term-anatomical-landmark"]], "annotations": [[830, "term-annotations"]], "beamformer": [[830, "term-beamformer"]], "boundary element method": [[830, "term-boundary-element-method"]], "boundary element model": [[830, "term-boundary-element-model"]], "chpi": [[830, "term-cHPI"]], "channels": [[830, "term-channels"]], "dspm": [[830, "term-dSPM"]], "data channels": [[830, "term-data-channels"]], "digitization": [[830, "term-digitization"]], "dipole": [[830, "term-dipole"]], "direct current": [[830, "term-direct-current"]], "dynamic imaging of coherent sources": [[830, "term-dynamic-imaging-of-coherent-sources"]], "dynamic statistical parametric mapping": [[830, "term-dynamic-statistical-parametric-mapping"]], "eloreta": [[830, "term-eLORETA"]], "epochs": [[830, "term-epochs"]], "equivalent current dipole": [[830, "term-equivalent-current-dipole"]], "events": [[830, "term-events"]], "evoked": [[830, "term-evoked"]], "fiducial": [[830, "term-fiducial"]], "fiducial point": [[830, "term-fiducial-point"]], "first_samp": [[830, "term-first_samp"]], "forward": [[830, "term-forward"]], "forward solution": [[830, "term-forward-solution"]], "global field power": [[830, "term-global-field-power"]], "head position indicator": [[830, "term-head-position-indicator"]], "hierarchical event descriptors": [[830, "term-hierarchical-event-descriptors"]], "info": [[830, "term-info"]], "inverse": [[830, "term-inverse"]], "inverse operator": [[830, "term-inverse-operator"]], "label": [[830, "term-label"]], "last_samp": [[830, "term-last_samp"]], "layout": [[830, "term-layout"]], "maximum intensity projection": [[830, "term-maximum-intensity-projection"]], "measurement info": [[830, "term-measurement-info"]], "minimum-norm estimate": [[830, "term-minimum-norm-estimate"]], "minimum-norm estimation": [[830, "term-minimum-norm-estimation"]], "montage": [[830, "term-montage"]], "morphing": [[830, "term-morphing"]], "noise covariance": [[830, "term-noise-covariance"]], "optically pumped magnetometer": [[830, "term-optically-pumped-magnetometer"]], "path-like": [[830, "term-path-like"]], "pick": [[830, "term-pick"]], "projector": [[830, "term-projector"]], "raw": [[830, "term-raw"]], "region of interest": [[830, "term-region-of-interest"]], "sloreta": [[830, "term-sLORETA"]], "selection": [[830, "term-selection"]], "source estimate": [[830, "term-source-estimate"]], "source space": [[830, "term-source-space"]], "source time course": [[830, "term-source-time-course"]], "stim channel": [[830, "term-stim-channel"]], "superconducting quantum interference device": [[830, "term-superconducting-quantum-interference-device"]], "template montage": [[830, "term-template-montage"]], "tfr": [[830, "term-tfr"]], "trans": [[830, "term-trans"]], "trigger channel": [[830, "term-trigger-channel"]], "whitening": [[830, "term-whitening"]], "mne.beamformer": [[843, "module-mne.beamformer"]], "mne.dipole": [[843, "module-mne.dipole"]], "mne.inverse_sparse": [[843, "module-mne.inverse_sparse"]], "mne.minimum_norm": [[843, "module-mne.minimum_norm"]], "mne.cuda": [[844, "module-mne.cuda"]], "mne.utils": [[844, "module-mne.utils"]], "mne.channels": [[864, "module-mne.channels"]], "mne.chpi": [[864, "module-mne.chpi"]], "mne.filter": [[864, "module-mne.filter"]], "mne.preprocessing": [[864, "module-mne.preprocessing"]], "mne.preprocessing.ieeg": [[864, "module-mne.preprocessing.ieeg"]], "mne.preprocessing.nirs": [[864, "module-mne.preprocessing.nirs"]], "mne.transforms": [[864, "module-mne.transforms"]], "mne.io": [[866, "module-mne.io"]], "mne.io.kit": [[866, "module-mne.io.kit"]], "mne.baseline": [[869, "module-mne.baseline"]], "mne.simulation": [[870, "module-mne.simulation"]], "mne.simulation.metrics": [[870, "module-mne.simulation.metrics"]], "mne.stats": [[872, "module-mne.stats"]], "mne.time_frequency": [[873, "module-mne.time_frequency"]], "mne.time_frequency.tfr": [[873, "module-mne.time_frequency.tfr"]], "mne.viz": [[874, "module-mne.viz"]]}})