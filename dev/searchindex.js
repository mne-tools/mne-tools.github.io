Search.setIndex({"docnames": ["auto_examples/connectivity/index", "auto_examples/datasets/brainstorm_data", "auto_examples/datasets/hf_sef_data", "auto_examples/datasets/index", "auto_examples/datasets/limo_data", "auto_examples/datasets/opm_data", "auto_examples/datasets/sg_execution_times", "auto_examples/datasets/spm_faces_dataset_sgskip", "auto_examples/decoding/decoding_csp_eeg", "auto_examples/decoding/decoding_csp_timefreq", "auto_examples/decoding/decoding_rsa_sgskip", "auto_examples/decoding/decoding_spatio_temporal_source", "auto_examples/decoding/decoding_spoc_CMC", "auto_examples/decoding/decoding_time_generalization_conditions", "auto_examples/decoding/decoding_unsupervised_spatial_filter", "auto_examples/decoding/decoding_xdawn_eeg", "auto_examples/decoding/ems_filtering", "auto_examples/decoding/index", "auto_examples/decoding/linear_model_patterns", "auto_examples/decoding/receptive_field_mtrf", "auto_examples/decoding/sg_execution_times", "auto_examples/decoding/ssd_spatial_filters", "auto_examples/forward/forward_sensitivity_maps", "auto_examples/forward/index", "auto_examples/forward/left_cerebellum_volume_source", "auto_examples/forward/sg_execution_times", "auto_examples/forward/source_space_morphing", "auto_examples/index", "auto_examples/inverse/compute_mne_inverse_epochs_in_label", "auto_examples/inverse/compute_mne_inverse_raw_in_label", "auto_examples/inverse/compute_mne_inverse_volume", "auto_examples/inverse/custom_inverse_solver", "auto_examples/inverse/dics_epochs", "auto_examples/inverse/dics_source_power", "auto_examples/inverse/evoked_ers_source_power", "auto_examples/inverse/gamma_map_inverse", "auto_examples/inverse/index", "auto_examples/inverse/label_activation_from_stc", "auto_examples/inverse/label_from_stc", "auto_examples/inverse/label_source_activations", "auto_examples/inverse/mixed_norm_inverse", "auto_examples/inverse/mixed_source_space_inverse", "auto_examples/inverse/mne_cov_power", "auto_examples/inverse/morph_surface_stc", "auto_examples/inverse/morph_volume_stc", "auto_examples/inverse/multi_dipole_model", "auto_examples/inverse/multidict_reweighted_tfmxne", "auto_examples/inverse/psf_ctf_label_leakage", "auto_examples/inverse/psf_ctf_vertices", "auto_examples/inverse/psf_ctf_vertices_lcmv", "auto_examples/inverse/psf_volume", "auto_examples/inverse/rap_music", "auto_examples/inverse/read_inverse", "auto_examples/inverse/read_stc", "auto_examples/inverse/resolution_metrics", "auto_examples/inverse/resolution_metrics_eegmeg", "auto_examples/inverse/sg_execution_times", "auto_examples/inverse/snr_estimate", "auto_examples/inverse/source_space_snr", "auto_examples/inverse/time_frequency_mixed_norm_inverse", "auto_examples/inverse/vector_mne_solution", "auto_examples/io/elekta_epochs", "auto_examples/io/index", "auto_examples/io/read_neo_format", "auto_examples/io/read_noise_covariance_matrix", "auto_examples/io/read_xdf", "auto_examples/io/sg_execution_times", "auto_examples/preprocessing/css", "auto_examples/preprocessing/define_target_events", "auto_examples/preprocessing/eeg_bridging", "auto_examples/preprocessing/eeg_csd", "auto_examples/preprocessing/eog_artifact_histogram", "auto_examples/preprocessing/eog_regression", "auto_examples/preprocessing/find_ref_artifacts", "auto_examples/preprocessing/fnirs_artifact_removal", "auto_examples/preprocessing/ica_comparison", "auto_examples/preprocessing/index", "auto_examples/preprocessing/interpolate_bad_channels", "auto_examples/preprocessing/locate_ieeg_micro", "auto_examples/preprocessing/movement_compensation", "auto_examples/preprocessing/movement_detection", "auto_examples/preprocessing/muscle_detection", "auto_examples/preprocessing/muscle_ica", "auto_examples/preprocessing/otp", "auto_examples/preprocessing/sg_execution_times", "auto_examples/preprocessing/shift_evoked", "auto_examples/preprocessing/virtual_evoked", "auto_examples/preprocessing/xdawn_denoising", "auto_examples/simulation/index", "auto_examples/simulation/plot_stc_metrics", "auto_examples/simulation/sg_execution_times", "auto_examples/simulation/simulate_evoked_data", "auto_examples/simulation/simulate_raw_data", "auto_examples/simulation/simulated_raw_data_using_subject_anatomy", "auto_examples/simulation/source_simulator", "auto_examples/stats/cluster_stats_evoked", "auto_examples/stats/fdr_stats_evoked", "auto_examples/stats/index", "auto_examples/stats/linear_regression_raw", "auto_examples/stats/sensor_permutation_test", "auto_examples/stats/sensor_regression", "auto_examples/stats/sg_execution_times", "auto_examples/time_frequency/compute_csd", "auto_examples/time_frequency/compute_source_psd_epochs", "auto_examples/time_frequency/index", "auto_examples/time_frequency/sg_execution_times", "auto_examples/time_frequency/source_label_time_frequency", "auto_examples/time_frequency/source_power_spectrum", "auto_examples/time_frequency/source_power_spectrum_opm", "auto_examples/time_frequency/source_space_time_frequency", "auto_examples/time_frequency/temporal_whitening", "auto_examples/time_frequency/time_frequency_erds", "auto_examples/time_frequency/time_frequency_global_field_power", "auto_examples/time_frequency/time_frequency_simulated", "auto_examples/visualization/3d_to_2d", "auto_examples/visualization/brain", "auto_examples/visualization/channel_epochs_image", "auto_examples/visualization/eeg_on_scalp", "auto_examples/visualization/evoked_arrowmap", "auto_examples/visualization/evoked_topomap", "auto_examples/visualization/evoked_whitening", "auto_examples/visualization/index", "auto_examples/visualization/meg_sensors", "auto_examples/visualization/mne_helmet", "auto_examples/visualization/montage_sgskip", "auto_examples/visualization/parcellation", "auto_examples/visualization/publication_figure", "auto_examples/visualization/roi_erpimage_by_rt", "auto_examples/visualization/sensor_noise_level", "auto_examples/visualization/sg_execution_times", "auto_examples/visualization/ssp_projs_sensitivity_map", "auto_examples/visualization/topo_compare_conditions", "auto_examples/visualization/topo_customized", "auto_examples/visualization/xhemi", "auto_tutorials/clinical/10_ieeg_localize", "auto_tutorials/clinical/20_seeg", "auto_tutorials/clinical/30_ecog", "auto_tutorials/clinical/60_sleep", "auto_tutorials/clinical/index", "auto_tutorials/clinical/sg_execution_times", "auto_tutorials/epochs/10_epochs_overview", "auto_tutorials/epochs/15_baseline_regression", "auto_tutorials/epochs/20_visualize_epochs", "auto_tutorials/epochs/30_epochs_metadata", "auto_tutorials/epochs/40_autogenerate_metadata", "auto_tutorials/epochs/50_epochs_to_data_frame", "auto_tutorials/epochs/60_make_fixed_length_epochs", "auto_tutorials/epochs/index", "auto_tutorials/epochs/sg_execution_times", "auto_tutorials/evoked/10_evoked_overview", "auto_tutorials/evoked/20_visualize_evoked", "auto_tutorials/evoked/30_eeg_erp", "auto_tutorials/evoked/40_whitened", "auto_tutorials/evoked/index", "auto_tutorials/evoked/sg_execution_times", "auto_tutorials/forward/10_background_freesurfer", "auto_tutorials/forward/20_source_alignment", "auto_tutorials/forward/25_automated_coreg", "auto_tutorials/forward/30_forward", "auto_tutorials/forward/35_eeg_no_mri", "auto_tutorials/forward/50_background_freesurfer_mne", "auto_tutorials/forward/80_fix_bem_in_blender", "auto_tutorials/forward/90_compute_covariance", "auto_tutorials/forward/index", "auto_tutorials/forward/sg_execution_times", "auto_tutorials/index", "auto_tutorials/intro/10_overview", "auto_tutorials/intro/15_inplace", "auto_tutorials/intro/20_events_from_raw", "auto_tutorials/intro/30_info", "auto_tutorials/intro/40_sensor_locations", "auto_tutorials/intro/50_configure_mne", "auto_tutorials/intro/70_report", "auto_tutorials/intro/index", "auto_tutorials/intro/sg_execution_times", "auto_tutorials/inverse/10_stc_class", "auto_tutorials/inverse/20_dipole_fit", "auto_tutorials/inverse/30_mne_dspm_loreta", "auto_tutorials/inverse/35_dipole_orientations", "auto_tutorials/inverse/40_mne_fixed_free", "auto_tutorials/inverse/50_beamformer_lcmv", "auto_tutorials/inverse/60_visualize_stc", "auto_tutorials/inverse/70_eeg_mri_coords", "auto_tutorials/inverse/80_brainstorm_phantom_elekta", "auto_tutorials/inverse/85_brainstorm_phantom_ctf", "auto_tutorials/inverse/90_phantom_4DBTi", "auto_tutorials/inverse/index", "auto_tutorials/inverse/sg_execution_times", "auto_tutorials/io/10_reading_meg_data", "auto_tutorials/io/20_reading_eeg_data", "auto_tutorials/io/30_reading_fnirs_data", "auto_tutorials/io/60_ctf_bst_auditory", "auto_tutorials/io/index", "auto_tutorials/io/sg_execution_times", "auto_tutorials/machine-learning/30_strf", "auto_tutorials/machine-learning/50_decoding", "auto_tutorials/machine-learning/index", "auto_tutorials/machine-learning/sg_execution_times", "auto_tutorials/preprocessing/10_preprocessing_overview", "auto_tutorials/preprocessing/15_handling_bad_channels", "auto_tutorials/preprocessing/20_rejecting_bad_data", "auto_tutorials/preprocessing/25_background_filtering", "auto_tutorials/preprocessing/30_filtering_resampling", "auto_tutorials/preprocessing/35_artifact_correction_regression", "auto_tutorials/preprocessing/40_artifact_correction_ica", "auto_tutorials/preprocessing/45_projectors_background", "auto_tutorials/preprocessing/50_artifact_correction_ssp", "auto_tutorials/preprocessing/55_setting_eeg_reference", "auto_tutorials/preprocessing/59_head_positions", "auto_tutorials/preprocessing/60_maxwell_filtering_sss", "auto_tutorials/preprocessing/70_fnirs_processing", "auto_tutorials/preprocessing/80_opm_processing", "auto_tutorials/preprocessing/index", "auto_tutorials/preprocessing/sg_execution_times", "auto_tutorials/raw/10_raw_overview", "auto_tutorials/raw/20_event_arrays", "auto_tutorials/raw/30_annotate_raw", "auto_tutorials/raw/40_visualize_raw", "auto_tutorials/raw/index", "auto_tutorials/raw/sg_execution_times", "auto_tutorials/simulation/10_array_objs", "auto_tutorials/simulation/70_point_spread", "auto_tutorials/simulation/80_dics", "auto_tutorials/simulation/index", "auto_tutorials/simulation/sg_execution_times", "auto_tutorials/stats-sensor-space/10_background_stats", "auto_tutorials/stats-sensor-space/20_erp_stats", "auto_tutorials/stats-sensor-space/40_cluster_1samp_time_freq", "auto_tutorials/stats-sensor-space/50_cluster_between_time_freq", "auto_tutorials/stats-sensor-space/70_cluster_rmANOVA_time_freq", "auto_tutorials/stats-sensor-space/75_cluster_ftest_spatiotemporal", "auto_tutorials/stats-sensor-space/index", "auto_tutorials/stats-sensor-space/sg_execution_times", "auto_tutorials/stats-source-space/20_cluster_1samp_spatiotemporal", "auto_tutorials/stats-source-space/30_cluster_ftest_spatiotemporal", "auto_tutorials/stats-source-space/60_cluster_rmANOVA_spatiotemporal", "auto_tutorials/stats-source-space/index", "auto_tutorials/stats-source-space/sg_execution_times", "auto_tutorials/time-freq/10_spectrum_class", "auto_tutorials/time-freq/20_sensors_time_frequency", "auto_tutorials/time-freq/50_ssvep", "auto_tutorials/time-freq/index", "auto_tutorials/time-freq/sg_execution_times", "bibliography", "cited", "connectivity", "covariance", "creating_from_arrays", "datasets", "decoding", "events", "export", "file_io", "forward", "funding", "generated/commands", "generated/mne.AcqParserFIF", "generated/mne.Annotations", "generated/mne.BaseEpochs", "generated/mne.BiHemiLabel", "generated/mne.Covariance", "generated/mne.Dipole", "generated/mne.DipoleFixed", "generated/mne.Epochs", "generated/mne.EpochsArray", "generated/mne.Evoked", "generated/mne.EvokedArray", "generated/mne.Forward", "generated/mne.Info", "generated/mne.Label", "generated/mne.MixedSourceEstimate", "generated/mne.MixedVectorSourceEstimate", "generated/mne.Projection", "generated/mne.Report", "generated/mne.SourceEstimate", "generated/mne.SourceMorph", "generated/mne.SourceSpaces", "generated/mne.VectorSourceEstimate", "generated/mne.VolSourceEstimate", "generated/mne.VolVectorSourceEstimate", "generated/mne.add_reference_channels", "generated/mne.add_source_space_distances", "generated/mne.annotations_from_events", "generated/mne.apply_forward", "generated/mne.apply_forward_raw", "generated/mne.average_forward_solutions", "generated/mne.baseline.rescale", "generated/mne.beamformer.Beamformer", "generated/mne.beamformer.apply_dics", "generated/mne.beamformer.apply_dics_csd", "generated/mne.beamformer.apply_dics_epochs", "generated/mne.beamformer.apply_dics_tfr_epochs", "generated/mne.beamformer.apply_lcmv", "generated/mne.beamformer.apply_lcmv_cov", "generated/mne.beamformer.apply_lcmv_epochs", "generated/mne.beamformer.apply_lcmv_raw", "generated/mne.beamformer.make_dics", "generated/mne.beamformer.make_lcmv", "generated/mne.beamformer.make_lcmv_resolution_matrix", "generated/mne.beamformer.rap_music", "generated/mne.beamformer.read_beamformer", "generated/mne.bem.ConductorModel", "generated/mne.bem.convert_flash_mris", "generated/mne.bem.distance_to_bem", "generated/mne.bem.fit_sphere_to_headshape", "generated/mne.bem.get_fitting_dig", "generated/mne.bem.make_flash_bem", "generated/mne.bem.make_scalp_surfaces", "generated/mne.bem.make_watershed_bem", "generated/mne.channel_indices_by_type", "generated/mne.channel_type", "generated/mne.channels.DigMontage", "generated/mne.channels.Layout", "generated/mne.channels.combine_channels", "generated/mne.channels.compute_dev_head_t", "generated/mne.channels.compute_native_head_t", "generated/mne.channels.equalize_channels", "generated/mne.channels.find_ch_adjacency", "generated/mne.channels.find_layout", "generated/mne.channels.fix_mag_coil_types", "generated/mne.channels.generate_2d_layout", "generated/mne.channels.get_builtin_ch_adjacencies", "generated/mne.channels.get_builtin_montages", "generated/mne.channels.make_1020_channel_selections", "generated/mne.channels.make_dig_montage", "generated/mne.channels.make_eeg_layout", "generated/mne.channels.make_grid_layout", "generated/mne.channels.make_standard_montage", "generated/mne.channels.read_ch_adjacency", "generated/mne.channels.read_custom_montage", "generated/mne.channels.read_dig_captrak", "generated/mne.channels.read_dig_dat", "generated/mne.channels.read_dig_egi", "generated/mne.channels.read_dig_fif", "generated/mne.channels.read_dig_hpts", "generated/mne.channels.read_dig_localite", "generated/mne.channels.read_dig_polhemus_isotrak", "generated/mne.channels.read_layout", "generated/mne.channels.read_polhemus_fastscan", "generated/mne.channels.rename_channels", "generated/mne.chpi.compute_chpi_amplitudes", "generated/mne.chpi.compute_chpi_locs", "generated/mne.chpi.compute_chpi_snr", "generated/mne.chpi.compute_head_pos", "generated/mne.chpi.extract_chpi_locs_ctf", "generated/mne.chpi.extract_chpi_locs_kit", "generated/mne.chpi.filter_chpi", "generated/mne.chpi.get_active_chpi", "generated/mne.chpi.get_chpi_info", "generated/mne.chpi.head_pos_to_trans_rot_t", "generated/mne.chpi.read_head_pos", "generated/mne.chpi.write_head_pos", "generated/mne.combine_evoked", "generated/mne.compute_covariance", "generated/mne.compute_proj_epochs", "generated/mne.compute_proj_evoked", "generated/mne.compute_proj_raw", "generated/mne.compute_rank", "generated/mne.compute_raw_covariance", "generated/mne.compute_source_morph", "generated/mne.concatenate_epochs", "generated/mne.concatenate_events", "generated/mne.concatenate_raws", "generated/mne.convert_forward_solution", "generated/mne.coreg.Coregistration", "generated/mne.coreg.estimate_head_mri_t", "generated/mne.coreg.get_mni_fiducials", "generated/mne.count_events", "generated/mne.cov.compute_whitener", "generated/mne.cov.prepare_noise_cov", "generated/mne.cov.regularize", "generated/mne.create_default_subject", "generated/mne.create_info", "generated/mne.cuda.get_cuda_memory", "generated/mne.cuda.init_cuda", "generated/mne.cuda.set_cuda_device", "generated/mne.datasets.brainstorm.bst_auditory.data_path", "generated/mne.datasets.brainstorm.bst_raw.data_path", "generated/mne.datasets.brainstorm.bst_resting.data_path", "generated/mne.datasets.eegbci.load_data", "generated/mne.datasets.eegbci.standardize", "generated/mne.datasets.epilepsy_ecog.data_path", "generated/mne.datasets.erp_core.data_path", "generated/mne.datasets.fetch_aparc_sub_parcellation", "generated/mne.datasets.fetch_dataset", "generated/mne.datasets.fetch_fsaverage", "generated/mne.datasets.fetch_hcp_mmp_parcellation", "generated/mne.datasets.fetch_infant_template", "generated/mne.datasets.fetch_phantom", "generated/mne.datasets.fnirs_motor.data_path", "generated/mne.datasets.has_dataset", "generated/mne.datasets.hf_sef.data_path", "generated/mne.datasets.kiloword.data_path", "generated/mne.datasets.limo.load_data", "generated/mne.datasets.misc.data_path", "generated/mne.datasets.mtrf.data_path", "generated/mne.datasets.multimodal.data_path", "generated/mne.datasets.opm.data_path", "generated/mne.datasets.phantom_4dbti.data_path", "generated/mne.datasets.refmeg_noise.data_path", "generated/mne.datasets.sample.data_path", "generated/mne.datasets.sleep_physionet.age.fetch_data", "generated/mne.datasets.sleep_physionet.temazepam.fetch_data", "generated/mne.datasets.somato.data_path", "generated/mne.datasets.spm_face.data_path", "generated/mne.datasets.ssvep.data_path", "generated/mne.datasets.ucl_opm_auditory.data_path", "generated/mne.datasets.visual_92_categories.data_path", "generated/mne.decimate_surface", "generated/mne.decoding.CSP", "generated/mne.decoding.EMS", "generated/mne.decoding.FilterEstimator", "generated/mne.decoding.GeneralizingEstimator", "generated/mne.decoding.LinearModel", "generated/mne.decoding.PSDEstimator", "generated/mne.decoding.ReceptiveField", "generated/mne.decoding.SPoC", "generated/mne.decoding.SSD", "generated/mne.decoding.Scaler", "generated/mne.decoding.SlidingEstimator", "generated/mne.decoding.TemporalFilter", "generated/mne.decoding.TimeDelayingRidge", "generated/mne.decoding.TimeFrequency", "generated/mne.decoding.UnsupervisedSpatialFilter", "generated/mne.decoding.Vectorizer", "generated/mne.decoding.compute_ems", "generated/mne.decoding.cross_val_multiscore", "generated/mne.decoding.get_coef", "generated/mne.dig_mri_distances", "generated/mne.dipole.get_phantom_dipoles", "generated/mne.epochs.average_movements", "generated/mne.epochs.combine_event_ids", "generated/mne.epochs.equalize_epoch_counts", "generated/mne.epochs.make_metadata", "generated/mne.equalize_channels", "generated/mne.event.define_target_events", "generated/mne.event.match_event_names", "generated/mne.event.shift_time_events", "generated/mne.events_from_annotations", "generated/mne.export.export_epochs", "generated/mne.export.export_evokeds", "generated/mne.export.export_evokeds_mff", "generated/mne.export.export_raw", "generated/mne.extract_label_time_course", "generated/mne.filter.construct_iir_filter", "generated/mne.filter.create_filter", "generated/mne.filter.estimate_ringing_samples", "generated/mne.filter.filter_data", "generated/mne.filter.notch_filter", "generated/mne.filter.resample", "generated/mne.find_events", "generated/mne.find_stim_steps", "generated/mne.fit_dipole", "generated/mne.forward.compute_depth_prior", "generated/mne.forward.compute_orient_prior", "generated/mne.forward.restrict_forward_to_label", "generated/mne.forward.restrict_forward_to_stc", "generated/mne.get_config", "generated/mne.get_config_path", "generated/mne.get_head_surf", "generated/mne.get_meg_helmet_surf", "generated/mne.get_montage_volume_labels", "generated/mne.get_volume_labels_from_aseg", "generated/mne.get_volume_labels_from_src", "generated/mne.grade_to_tris", "generated/mne.grade_to_vertices", "generated/mne.grand_average", "generated/mne.grow_labels", "generated/mne.gui.coregistration", "generated/mne.gui.locate_ieeg", "generated/mne.head_to_mni", "generated/mne.head_to_mri", "generated/mne.inverse_sparse.gamma_map", "generated/mne.inverse_sparse.make_stc_from_dipoles", "generated/mne.inverse_sparse.mixed_norm", "generated/mne.inverse_sparse.tf_mixed_norm", "generated/mne.io.BaseRaw", "generated/mne.io.Raw", "generated/mne.io.RawArray", "generated/mne.io.anonymize_info", "generated/mne.io.kit.read_mrk", "generated/mne.io.read_fiducials", "generated/mne.io.read_info", "generated/mne.io.read_raw", "generated/mne.io.read_raw_artemis123", "generated/mne.io.read_raw_bdf", "generated/mne.io.read_raw_boxy", "generated/mne.io.read_raw_brainvision", "generated/mne.io.read_raw_bti", "generated/mne.io.read_raw_cnt", "generated/mne.io.read_raw_ctf", "generated/mne.io.read_raw_curry", "generated/mne.io.read_raw_edf", "generated/mne.io.read_raw_eeglab", "generated/mne.io.read_raw_egi", "generated/mne.io.read_raw_eximia", "generated/mne.io.read_raw_fieldtrip", "generated/mne.io.read_raw_fif", "generated/mne.io.read_raw_fil", "generated/mne.io.read_raw_gdf", "generated/mne.io.read_raw_hitachi", "generated/mne.io.read_raw_kit", "generated/mne.io.read_raw_nedf", "generated/mne.io.read_raw_nicolet", "generated/mne.io.read_raw_nihon", "generated/mne.io.read_raw_nirx", "generated/mne.io.read_raw_persyst", "generated/mne.io.read_raw_snirf", "generated/mne.io.show_fiff", "generated/mne.io.write_fiducials", "generated/mne.label.select_sources", "generated/mne.label_sign_flip", "generated/mne.labels_to_stc", "generated/mne.make_ad_hoc_cov", "generated/mne.make_bem_model", "generated/mne.make_bem_solution", "generated/mne.make_field_map", "generated/mne.make_fixed_length_epochs", "generated/mne.make_fixed_length_events", "generated/mne.make_forward_dipole", "generated/mne.make_forward_solution", "generated/mne.make_sphere_model", "generated/mne.merge_events", "generated/mne.minimum_norm.InverseOperator", "generated/mne.minimum_norm.apply_inverse", "generated/mne.minimum_norm.apply_inverse_cov", "generated/mne.minimum_norm.apply_inverse_epochs", "generated/mne.minimum_norm.apply_inverse_raw", "generated/mne.minimum_norm.apply_inverse_tfr_epochs", "generated/mne.minimum_norm.compute_rank_inverse", "generated/mne.minimum_norm.compute_source_psd", "generated/mne.minimum_norm.compute_source_psd_epochs", "generated/mne.minimum_norm.estimate_snr", "generated/mne.minimum_norm.get_cross_talk", "generated/mne.minimum_norm.get_point_spread", "generated/mne.minimum_norm.make_inverse_operator", "generated/mne.minimum_norm.make_inverse_resolution_matrix", "generated/mne.minimum_norm.prepare_inverse_operator", "generated/mne.minimum_norm.read_inverse_operator", "generated/mne.minimum_norm.resolution_metrics", "generated/mne.minimum_norm.source_band_induced_power", "generated/mne.minimum_norm.source_induced_power", "generated/mne.minimum_norm.write_inverse_operator", "generated/mne.morph_labels", "generated/mne.morph_source_spaces", "generated/mne.open_docs", "generated/mne.open_report", "generated/mne.parse_config", "generated/mne.pick_channels", "generated/mne.pick_channels_cov", "generated/mne.pick_channels_forward", "generated/mne.pick_channels_regexp", "generated/mne.pick_events", "generated/mne.pick_info", "generated/mne.pick_types", "generated/mne.pick_types_forward", "generated/mne.preprocessing.EOGRegression", "generated/mne.preprocessing.ICA", "generated/mne.preprocessing.Xdawn", "generated/mne.preprocessing.annotate_amplitude", "generated/mne.preprocessing.annotate_break", "generated/mne.preprocessing.annotate_movement", "generated/mne.preprocessing.annotate_muscle_zscore", "generated/mne.preprocessing.annotate_nan", "generated/mne.preprocessing.compute_average_dev_head_t", "generated/mne.preprocessing.compute_bridged_electrodes", "generated/mne.preprocessing.compute_current_source_density", "generated/mne.preprocessing.compute_fine_calibration", "generated/mne.preprocessing.compute_maxwell_basis", "generated/mne.preprocessing.compute_proj_ecg", "generated/mne.preprocessing.compute_proj_eog", "generated/mne.preprocessing.corrmap", "generated/mne.preprocessing.cortical_signal_suppression", "generated/mne.preprocessing.create_ecg_epochs", "generated/mne.preprocessing.create_eog_epochs", "generated/mne.preprocessing.equalize_bads", "generated/mne.preprocessing.find_bad_channels_maxwell", "generated/mne.preprocessing.find_ecg_events", "generated/mne.preprocessing.find_eog_events", "generated/mne.preprocessing.fix_stim_artifact", "generated/mne.preprocessing.ica_find_ecg_events", "generated/mne.preprocessing.ica_find_eog_events", "generated/mne.preprocessing.ieeg.project_sensors_onto_brain", "generated/mne.preprocessing.infomax", "generated/mne.preprocessing.interpolate_bridged_electrodes", "generated/mne.preprocessing.maxwell_filter", "generated/mne.preprocessing.maxwell_filter_prepare_emptyroom", "generated/mne.preprocessing.nirs.beer_lambert_law", "generated/mne.preprocessing.nirs.optical_density", "generated/mne.preprocessing.nirs.scalp_coupling_index", "generated/mne.preprocessing.nirs.short_channels", "generated/mne.preprocessing.nirs.source_detector_distances", "generated/mne.preprocessing.nirs.temporal_derivative_distribution_repair", "generated/mne.preprocessing.oversampled_temporal_projection", "generated/mne.preprocessing.peak_finder", "generated/mne.preprocessing.read_eog_regression", "generated/mne.preprocessing.read_fine_calibration", "generated/mne.preprocessing.read_ica", "generated/mne.preprocessing.read_ica_eeglab", "generated/mne.preprocessing.realign_raw", "generated/mne.preprocessing.regress_artifact", "generated/mne.preprocessing.write_fine_calibration", "generated/mne.random_parcellation", "generated/mne.read_annotations", "generated/mne.read_bem_solution", "generated/mne.read_bem_surfaces", "generated/mne.read_cov", "generated/mne.read_dipole", "generated/mne.read_epochs", "generated/mne.read_epochs_eeglab", "generated/mne.read_epochs_fieldtrip", "generated/mne.read_epochs_kit", "generated/mne.read_events", "generated/mne.read_evoked_besa", "generated/mne.read_evoked_fieldtrip", "generated/mne.read_evokeds", "generated/mne.read_evokeds_mff", "generated/mne.read_forward_solution", "generated/mne.read_freesurfer_lut", "generated/mne.read_label", "generated/mne.read_labels_from_annot", "generated/mne.read_lta", "generated/mne.read_morph_map", "generated/mne.read_proj", "generated/mne.read_reject_parameters", "generated/mne.read_source_estimate", "generated/mne.read_source_morph", "generated/mne.read_source_spaces", "generated/mne.read_surface", "generated/mne.read_talxfm", "generated/mne.read_trans", "generated/mne.read_tri", "generated/mne.read_vectorview_selection", "generated/mne.rename_channels", "generated/mne.scale_bem", "generated/mne.scale_labels", "generated/mne.scale_mri", "generated/mne.scale_source_space", "generated/mne.sensitivity_map", "generated/mne.set_bipolar_reference", "generated/mne.set_cache_dir", "generated/mne.set_config", "generated/mne.set_eeg_reference", "generated/mne.set_log_file", "generated/mne.set_log_level", "generated/mne.setup_source_space", "generated/mne.setup_volume_source_space", "generated/mne.simulation.SourceSimulator", "generated/mne.simulation.add_chpi", "generated/mne.simulation.add_ecg", "generated/mne.simulation.add_eog", "generated/mne.simulation.add_noise", "generated/mne.simulation.metrics.cosine_score", "generated/mne.simulation.metrics.f1_score", "generated/mne.simulation.metrics.peak_position_error", "generated/mne.simulation.metrics.precision_score", "generated/mne.simulation.metrics.recall_score", "generated/mne.simulation.metrics.region_localization_error", "generated/mne.simulation.metrics.roc_auc_score", "generated/mne.simulation.metrics.spatial_deviation_error", "generated/mne.simulation.select_source_in_label", "generated/mne.simulation.simulate_evoked", "generated/mne.simulation.simulate_raw", "generated/mne.simulation.simulate_sparse_stc", "generated/mne.simulation.simulate_stc", "generated/mne.source_space.compute_distance_to_sensors", "generated/mne.source_space.get_decimated_surfaces", "generated/mne.spatial_dist_adjacency", "generated/mne.spatial_inter_hemi_adjacency", "generated/mne.spatial_src_adjacency", "generated/mne.spatial_tris_adjacency", "generated/mne.spatio_temporal_dist_adjacency", "generated/mne.spatio_temporal_src_adjacency", "generated/mne.spatio_temporal_tris_adjacency", "generated/mne.split_label", "generated/mne.stats.bonferroni_correction", "generated/mne.stats.bootstrap_confidence_interval", "generated/mne.stats.combine_adjacency", "generated/mne.stats.f_mway_rm", "generated/mne.stats.f_oneway", "generated/mne.stats.f_threshold_mway_rm", "generated/mne.stats.fdr_correction", "generated/mne.stats.linear_regression", "generated/mne.stats.linear_regression_raw", "generated/mne.stats.permutation_cluster_1samp_test", "generated/mne.stats.permutation_cluster_test", "generated/mne.stats.permutation_t_test", "generated/mne.stats.spatio_temporal_cluster_1samp_test", "generated/mne.stats.spatio_temporal_cluster_test", "generated/mne.stats.summarize_clusters_stc", "generated/mne.stats.ttest_1samp_no_p", "generated/mne.stats.ttest_ind_no_p", "generated/mne.stc_near_sensors", "generated/mne.stc_to_label", "generated/mne.surface.complete_surface_info", "generated/mne.surface.read_curvature", "generated/mne.sys_info", "generated/mne.time_frequency.AverageTFR", "generated/mne.time_frequency.CrossSpectralDensity", "generated/mne.time_frequency.EpochsSpectrum", "generated/mne.time_frequency.EpochsTFR", "generated/mne.time_frequency.Spectrum", "generated/mne.time_frequency.csd_array_fourier", "generated/mne.time_frequency.csd_array_morlet", "generated/mne.time_frequency.csd_array_multitaper", "generated/mne.time_frequency.csd_fourier", "generated/mne.time_frequency.csd_morlet", "generated/mne.time_frequency.csd_multitaper", "generated/mne.time_frequency.csd_tfr", "generated/mne.time_frequency.dpss_windows", "generated/mne.time_frequency.fit_iir_model_raw", "generated/mne.time_frequency.fwhm", "generated/mne.time_frequency.istft", "generated/mne.time_frequency.morlet", "generated/mne.time_frequency.pick_channels_csd", "generated/mne.time_frequency.psd_array_multitaper", "generated/mne.time_frequency.psd_array_welch", "generated/mne.time_frequency.read_csd", "generated/mne.time_frequency.read_spectrum", "generated/mne.time_frequency.read_tfrs", "generated/mne.time_frequency.stft", "generated/mne.time_frequency.stftfreq", "generated/mne.time_frequency.tfr.cwt", "generated/mne.time_frequency.tfr.morlet", "generated/mne.time_frequency.tfr_array_morlet", "generated/mne.time_frequency.tfr_array_multitaper", "generated/mne.time_frequency.tfr_array_stockwell", "generated/mne.time_frequency.tfr_morlet", "generated/mne.time_frequency.tfr_multitaper", "generated/mne.time_frequency.tfr_stockwell", "generated/mne.time_frequency.write_tfrs", "generated/mne.transform_surface_to", "generated/mne.transforms.Transform", "generated/mne.transforms.apply_volume_registration", "generated/mne.transforms.apply_volume_registration_points", "generated/mne.transforms.compute_volume_registration", "generated/mne.transforms.quat_to_rot", "generated/mne.transforms.read_ras_mni_t", "generated/mne.transforms.rot_to_quat", "generated/mne.use_coil_def", "generated/mne.use_log_level", "generated/mne.utils.deprecated", "generated/mne.utils.warn", "generated/mne.verbose", "generated/mne.vertex_to_mni", "generated/mne.viz.Brain", "generated/mne.viz.ClickableImage", "generated/mne.viz.Figure3D", "generated/mne.viz.add_background_image", "generated/mne.viz.centers_to_edges", "generated/mne.viz.circular_layout", "generated/mne.viz.close_3d_figure", "generated/mne.viz.close_all_3d_figures", "generated/mne.viz.compare_fiff", "generated/mne.viz.create_3d_figure", "generated/mne.viz.get_3d_backend", "generated/mne.viz.get_brain_class", "generated/mne.viz.get_browser_backend", "generated/mne.viz.iter_topography", "generated/mne.viz.link_brains", "generated/mne.viz.mne_analyze_colormap", "generated/mne.viz.plot_alignment", "generated/mne.viz.plot_arrowmap", "generated/mne.viz.plot_bem", "generated/mne.viz.plot_brain_colorbar", "generated/mne.viz.plot_bridged_electrodes", "generated/mne.viz.plot_ch_adjacency", "generated/mne.viz.plot_channel_labels_circle", "generated/mne.viz.plot_chpi_snr", "generated/mne.viz.plot_compare_evokeds", "generated/mne.viz.plot_cov", "generated/mne.viz.plot_csd", "generated/mne.viz.plot_dipole_amplitudes", "generated/mne.viz.plot_dipole_locations", "generated/mne.viz.plot_drop_log", "generated/mne.viz.plot_epochs", "generated/mne.viz.plot_epochs_image", "generated/mne.viz.plot_epochs_psd_topomap", "generated/mne.viz.plot_events", "generated/mne.viz.plot_evoked", "generated/mne.viz.plot_evoked_field", "generated/mne.viz.plot_evoked_image", "generated/mne.viz.plot_evoked_joint", "generated/mne.viz.plot_evoked_topo", "generated/mne.viz.plot_evoked_topomap", "generated/mne.viz.plot_evoked_white", "generated/mne.viz.plot_filter", "generated/mne.viz.plot_head_positions", "generated/mne.viz.plot_ica_components", "generated/mne.viz.plot_ica_overlay", "generated/mne.viz.plot_ica_properties", "generated/mne.viz.plot_ica_scores", "generated/mne.viz.plot_ica_sources", "generated/mne.viz.plot_ideal_filter", "generated/mne.viz.plot_layout", "generated/mne.viz.plot_montage", "generated/mne.viz.plot_projs_joint", "generated/mne.viz.plot_projs_topomap", "generated/mne.viz.plot_raw", "generated/mne.viz.plot_raw_psd", "generated/mne.viz.plot_regression_weights", "generated/mne.viz.plot_sensors", "generated/mne.viz.plot_snr_estimate", "generated/mne.viz.plot_source_estimates", "generated/mne.viz.plot_sparse_source_estimates", "generated/mne.viz.plot_tfr_topomap", "generated/mne.viz.plot_topo_image_epochs", "generated/mne.viz.plot_topomap", "generated/mne.viz.plot_vector_source_estimates", "generated/mne.viz.plot_volume_source_estimates", "generated/mne.viz.set_3d_backend", "generated/mne.viz.set_3d_options", "generated/mne.viz.set_3d_title", "generated/mne.viz.set_3d_view", "generated/mne.viz.set_browser_backend", "generated/mne.viz.snapshot_brain_montage", "generated/mne.viz.use_3d_backend", "generated/mne.viz.use_browser_backend", "generated/mne.warp_montage_volume", "generated/mne.what", "generated/mne.write_bem_solution", "generated/mne.write_bem_surfaces", "generated/mne.write_cov", "generated/mne.write_events", "generated/mne.write_evokeds", "generated/mne.write_forward_solution", "generated/mne.write_head_bem", "generated/mne.write_label", "generated/mne.write_labels_to_annot", "generated/mne.write_proj", "generated/mne.write_source_spaces", "generated/mne.write_surface", "generated/mne.write_trans", "glossary", "index", "install/advanced", "install/check_installation", "install/contributing", "install/freesurfer", "install/index", "install/installers", "install/manual_install", "install/manual_install_python", "install/mne_c", "install/mne_tools_suite", "install/updating", "inverse", "logging", "martinos", "mne_cpp", "most_used_classes", "mri", "overview/cite", "overview/cookbook", "overview/datasets_index", "overview/design_philosophy", "overview/development", "overview/faq", "overview/get_help", "overview/governance", "overview/implementation", "overview/index", "overview/learn_python", "overview/matlab", "overview/migrating", "overview/people", "overview/roadmap", "preprocessing", "python_reference", "reading_raw_data", "realtime", "report", "sensor_space", "simulation", "source_space", "statistics", "time_frequency", "visualization", "whats_new"], "filenames": ["auto_examples/connectivity/index.rst", "auto_examples/datasets/brainstorm_data.rst", "auto_examples/datasets/hf_sef_data.rst", "auto_examples/datasets/index.rst", "auto_examples/datasets/limo_data.rst", "auto_examples/datasets/opm_data.rst", "auto_examples/datasets/sg_execution_times.rst", "auto_examples/datasets/spm_faces_dataset_sgskip.rst", "auto_examples/decoding/decoding_csp_eeg.rst", "auto_examples/decoding/decoding_csp_timefreq.rst", "auto_examples/decoding/decoding_rsa_sgskip.rst", "auto_examples/decoding/decoding_spatio_temporal_source.rst", "auto_examples/decoding/decoding_spoc_CMC.rst", "auto_examples/decoding/decoding_time_generalization_conditions.rst", "auto_examples/decoding/decoding_unsupervised_spatial_filter.rst", "auto_examples/decoding/decoding_xdawn_eeg.rst", "auto_examples/decoding/ems_filtering.rst", "auto_examples/decoding/index.rst", "auto_examples/decoding/linear_model_patterns.rst", "auto_examples/decoding/receptive_field_mtrf.rst", "auto_examples/decoding/sg_execution_times.rst", "auto_examples/decoding/ssd_spatial_filters.rst", "auto_examples/forward/forward_sensitivity_maps.rst", "auto_examples/forward/index.rst", "auto_examples/forward/left_cerebellum_volume_source.rst", "auto_examples/forward/sg_execution_times.rst", "auto_examples/forward/source_space_morphing.rst", "auto_examples/index.rst", "auto_examples/inverse/compute_mne_inverse_epochs_in_label.rst", "auto_examples/inverse/compute_mne_inverse_raw_in_label.rst", "auto_examples/inverse/compute_mne_inverse_volume.rst", "auto_examples/inverse/custom_inverse_solver.rst", "auto_examples/inverse/dics_epochs.rst", "auto_examples/inverse/dics_source_power.rst", "auto_examples/inverse/evoked_ers_source_power.rst", "auto_examples/inverse/gamma_map_inverse.rst", "auto_examples/inverse/index.rst", "auto_examples/inverse/label_activation_from_stc.rst", "auto_examples/inverse/label_from_stc.rst", "auto_examples/inverse/label_source_activations.rst", "auto_examples/inverse/mixed_norm_inverse.rst", "auto_examples/inverse/mixed_source_space_inverse.rst", "auto_examples/inverse/mne_cov_power.rst", "auto_examples/inverse/morph_surface_stc.rst", "auto_examples/inverse/morph_volume_stc.rst", "auto_examples/inverse/multi_dipole_model.rst", "auto_examples/inverse/multidict_reweighted_tfmxne.rst", "auto_examples/inverse/psf_ctf_label_leakage.rst", "auto_examples/inverse/psf_ctf_vertices.rst", "auto_examples/inverse/psf_ctf_vertices_lcmv.rst", "auto_examples/inverse/psf_volume.rst", "auto_examples/inverse/rap_music.rst", "auto_examples/inverse/read_inverse.rst", "auto_examples/inverse/read_stc.rst", "auto_examples/inverse/resolution_metrics.rst", "auto_examples/inverse/resolution_metrics_eegmeg.rst", "auto_examples/inverse/sg_execution_times.rst", "auto_examples/inverse/snr_estimate.rst", "auto_examples/inverse/source_space_snr.rst", "auto_examples/inverse/time_frequency_mixed_norm_inverse.rst", "auto_examples/inverse/vector_mne_solution.rst", "auto_examples/io/elekta_epochs.rst", "auto_examples/io/index.rst", "auto_examples/io/read_neo_format.rst", "auto_examples/io/read_noise_covariance_matrix.rst", "auto_examples/io/read_xdf.rst", "auto_examples/io/sg_execution_times.rst", "auto_examples/preprocessing/css.rst", "auto_examples/preprocessing/define_target_events.rst", "auto_examples/preprocessing/eeg_bridging.rst", "auto_examples/preprocessing/eeg_csd.rst", "auto_examples/preprocessing/eog_artifact_histogram.rst", "auto_examples/preprocessing/eog_regression.rst", "auto_examples/preprocessing/find_ref_artifacts.rst", "auto_examples/preprocessing/fnirs_artifact_removal.rst", "auto_examples/preprocessing/ica_comparison.rst", "auto_examples/preprocessing/index.rst", "auto_examples/preprocessing/interpolate_bad_channels.rst", "auto_examples/preprocessing/locate_ieeg_micro.rst", "auto_examples/preprocessing/movement_compensation.rst", "auto_examples/preprocessing/movement_detection.rst", "auto_examples/preprocessing/muscle_detection.rst", "auto_examples/preprocessing/muscle_ica.rst", "auto_examples/preprocessing/otp.rst", "auto_examples/preprocessing/sg_execution_times.rst", "auto_examples/preprocessing/shift_evoked.rst", "auto_examples/preprocessing/virtual_evoked.rst", "auto_examples/preprocessing/xdawn_denoising.rst", "auto_examples/simulation/index.rst", "auto_examples/simulation/plot_stc_metrics.rst", "auto_examples/simulation/sg_execution_times.rst", "auto_examples/simulation/simulate_evoked_data.rst", "auto_examples/simulation/simulate_raw_data.rst", "auto_examples/simulation/simulated_raw_data_using_subject_anatomy.rst", "auto_examples/simulation/source_simulator.rst", "auto_examples/stats/cluster_stats_evoked.rst", "auto_examples/stats/fdr_stats_evoked.rst", "auto_examples/stats/index.rst", "auto_examples/stats/linear_regression_raw.rst", "auto_examples/stats/sensor_permutation_test.rst", "auto_examples/stats/sensor_regression.rst", "auto_examples/stats/sg_execution_times.rst", "auto_examples/time_frequency/compute_csd.rst", "auto_examples/time_frequency/compute_source_psd_epochs.rst", "auto_examples/time_frequency/index.rst", "auto_examples/time_frequency/sg_execution_times.rst", "auto_examples/time_frequency/source_label_time_frequency.rst", "auto_examples/time_frequency/source_power_spectrum.rst", "auto_examples/time_frequency/source_power_spectrum_opm.rst", "auto_examples/time_frequency/source_space_time_frequency.rst", "auto_examples/time_frequency/temporal_whitening.rst", "auto_examples/time_frequency/time_frequency_erds.rst", "auto_examples/time_frequency/time_frequency_global_field_power.rst", "auto_examples/time_frequency/time_frequency_simulated.rst", "auto_examples/visualization/3d_to_2d.rst", "auto_examples/visualization/brain.rst", "auto_examples/visualization/channel_epochs_image.rst", "auto_examples/visualization/eeg_on_scalp.rst", "auto_examples/visualization/evoked_arrowmap.rst", "auto_examples/visualization/evoked_topomap.rst", "auto_examples/visualization/evoked_whitening.rst", "auto_examples/visualization/index.rst", "auto_examples/visualization/meg_sensors.rst", "auto_examples/visualization/mne_helmet.rst", "auto_examples/visualization/montage_sgskip.rst", "auto_examples/visualization/parcellation.rst", "auto_examples/visualization/publication_figure.rst", "auto_examples/visualization/roi_erpimage_by_rt.rst", "auto_examples/visualization/sensor_noise_level.rst", "auto_examples/visualization/sg_execution_times.rst", "auto_examples/visualization/ssp_projs_sensitivity_map.rst", "auto_examples/visualization/topo_compare_conditions.rst", "auto_examples/visualization/topo_customized.rst", "auto_examples/visualization/xhemi.rst", "auto_tutorials/clinical/10_ieeg_localize.rst", "auto_tutorials/clinical/20_seeg.rst", "auto_tutorials/clinical/30_ecog.rst", "auto_tutorials/clinical/60_sleep.rst", "auto_tutorials/clinical/index.rst", "auto_tutorials/clinical/sg_execution_times.rst", "auto_tutorials/epochs/10_epochs_overview.rst", "auto_tutorials/epochs/15_baseline_regression.rst", "auto_tutorials/epochs/20_visualize_epochs.rst", "auto_tutorials/epochs/30_epochs_metadata.rst", "auto_tutorials/epochs/40_autogenerate_metadata.rst", "auto_tutorials/epochs/50_epochs_to_data_frame.rst", "auto_tutorials/epochs/60_make_fixed_length_epochs.rst", "auto_tutorials/epochs/index.rst", "auto_tutorials/epochs/sg_execution_times.rst", "auto_tutorials/evoked/10_evoked_overview.rst", "auto_tutorials/evoked/20_visualize_evoked.rst", "auto_tutorials/evoked/30_eeg_erp.rst", "auto_tutorials/evoked/40_whitened.rst", "auto_tutorials/evoked/index.rst", "auto_tutorials/evoked/sg_execution_times.rst", "auto_tutorials/forward/10_background_freesurfer.rst", "auto_tutorials/forward/20_source_alignment.rst", "auto_tutorials/forward/25_automated_coreg.rst", "auto_tutorials/forward/30_forward.rst", "auto_tutorials/forward/35_eeg_no_mri.rst", "auto_tutorials/forward/50_background_freesurfer_mne.rst", "auto_tutorials/forward/80_fix_bem_in_blender.rst", "auto_tutorials/forward/90_compute_covariance.rst", "auto_tutorials/forward/index.rst", "auto_tutorials/forward/sg_execution_times.rst", "auto_tutorials/index.rst", "auto_tutorials/intro/10_overview.rst", "auto_tutorials/intro/15_inplace.rst", "auto_tutorials/intro/20_events_from_raw.rst", "auto_tutorials/intro/30_info.rst", "auto_tutorials/intro/40_sensor_locations.rst", "auto_tutorials/intro/50_configure_mne.rst", "auto_tutorials/intro/70_report.rst", "auto_tutorials/intro/index.rst", "auto_tutorials/intro/sg_execution_times.rst", "auto_tutorials/inverse/10_stc_class.rst", "auto_tutorials/inverse/20_dipole_fit.rst", "auto_tutorials/inverse/30_mne_dspm_loreta.rst", "auto_tutorials/inverse/35_dipole_orientations.rst", "auto_tutorials/inverse/40_mne_fixed_free.rst", "auto_tutorials/inverse/50_beamformer_lcmv.rst", "auto_tutorials/inverse/60_visualize_stc.rst", "auto_tutorials/inverse/70_eeg_mri_coords.rst", "auto_tutorials/inverse/80_brainstorm_phantom_elekta.rst", "auto_tutorials/inverse/85_brainstorm_phantom_ctf.rst", "auto_tutorials/inverse/90_phantom_4DBTi.rst", "auto_tutorials/inverse/index.rst", "auto_tutorials/inverse/sg_execution_times.rst", "auto_tutorials/io/10_reading_meg_data.rst", "auto_tutorials/io/20_reading_eeg_data.rst", "auto_tutorials/io/30_reading_fnirs_data.rst", "auto_tutorials/io/60_ctf_bst_auditory.rst", "auto_tutorials/io/index.rst", "auto_tutorials/io/sg_execution_times.rst", "auto_tutorials/machine-learning/30_strf.rst", "auto_tutorials/machine-learning/50_decoding.rst", "auto_tutorials/machine-learning/index.rst", "auto_tutorials/machine-learning/sg_execution_times.rst", "auto_tutorials/preprocessing/10_preprocessing_overview.rst", "auto_tutorials/preprocessing/15_handling_bad_channels.rst", "auto_tutorials/preprocessing/20_rejecting_bad_data.rst", "auto_tutorials/preprocessing/25_background_filtering.rst", "auto_tutorials/preprocessing/30_filtering_resampling.rst", "auto_tutorials/preprocessing/35_artifact_correction_regression.rst", "auto_tutorials/preprocessing/40_artifact_correction_ica.rst", "auto_tutorials/preprocessing/45_projectors_background.rst", "auto_tutorials/preprocessing/50_artifact_correction_ssp.rst", "auto_tutorials/preprocessing/55_setting_eeg_reference.rst", "auto_tutorials/preprocessing/59_head_positions.rst", "auto_tutorials/preprocessing/60_maxwell_filtering_sss.rst", "auto_tutorials/preprocessing/70_fnirs_processing.rst", "auto_tutorials/preprocessing/80_opm_processing.rst", "auto_tutorials/preprocessing/index.rst", "auto_tutorials/preprocessing/sg_execution_times.rst", "auto_tutorials/raw/10_raw_overview.rst", "auto_tutorials/raw/20_event_arrays.rst", "auto_tutorials/raw/30_annotate_raw.rst", "auto_tutorials/raw/40_visualize_raw.rst", "auto_tutorials/raw/index.rst", "auto_tutorials/raw/sg_execution_times.rst", "auto_tutorials/simulation/10_array_objs.rst", "auto_tutorials/simulation/70_point_spread.rst", "auto_tutorials/simulation/80_dics.rst", "auto_tutorials/simulation/index.rst", "auto_tutorials/simulation/sg_execution_times.rst", "auto_tutorials/stats-sensor-space/10_background_stats.rst", "auto_tutorials/stats-sensor-space/20_erp_stats.rst", "auto_tutorials/stats-sensor-space/40_cluster_1samp_time_freq.rst", "auto_tutorials/stats-sensor-space/50_cluster_between_time_freq.rst", "auto_tutorials/stats-sensor-space/70_cluster_rmANOVA_time_freq.rst", "auto_tutorials/stats-sensor-space/75_cluster_ftest_spatiotemporal.rst", "auto_tutorials/stats-sensor-space/index.rst", "auto_tutorials/stats-sensor-space/sg_execution_times.rst", "auto_tutorials/stats-source-space/20_cluster_1samp_spatiotemporal.rst", "auto_tutorials/stats-source-space/30_cluster_ftest_spatiotemporal.rst", "auto_tutorials/stats-source-space/60_cluster_rmANOVA_spatiotemporal.rst", "auto_tutorials/stats-source-space/index.rst", "auto_tutorials/stats-source-space/sg_execution_times.rst", "auto_tutorials/time-freq/10_spectrum_class.rst", "auto_tutorials/time-freq/20_sensors_time_frequency.rst", "auto_tutorials/time-freq/50_ssvep.rst", "auto_tutorials/time-freq/index.rst", "auto_tutorials/time-freq/sg_execution_times.rst", "bibliography.rst", "cited.rst", "connectivity.rst", "covariance.rst", "creating_from_arrays.rst", "datasets.rst", "decoding.rst", "events.rst", "export.rst", "file_io.rst", "forward.rst", "funding.rst", "generated/commands.rst", "generated/mne.AcqParserFIF.rst", "generated/mne.Annotations.rst", "generated/mne.BaseEpochs.rst", "generated/mne.BiHemiLabel.rst", "generated/mne.Covariance.rst", "generated/mne.Dipole.rst", "generated/mne.DipoleFixed.rst", "generated/mne.Epochs.rst", "generated/mne.EpochsArray.rst", "generated/mne.Evoked.rst", "generated/mne.EvokedArray.rst", "generated/mne.Forward.rst", "generated/mne.Info.rst", "generated/mne.Label.rst", "generated/mne.MixedSourceEstimate.rst", "generated/mne.MixedVectorSourceEstimate.rst", "generated/mne.Projection.rst", "generated/mne.Report.rst", "generated/mne.SourceEstimate.rst", "generated/mne.SourceMorph.rst", "generated/mne.SourceSpaces.rst", "generated/mne.VectorSourceEstimate.rst", "generated/mne.VolSourceEstimate.rst", "generated/mne.VolVectorSourceEstimate.rst", "generated/mne.add_reference_channels.rst", "generated/mne.add_source_space_distances.rst", "generated/mne.annotations_from_events.rst", "generated/mne.apply_forward.rst", "generated/mne.apply_forward_raw.rst", "generated/mne.average_forward_solutions.rst", "generated/mne.baseline.rescale.rst", "generated/mne.beamformer.Beamformer.rst", "generated/mne.beamformer.apply_dics.rst", "generated/mne.beamformer.apply_dics_csd.rst", "generated/mne.beamformer.apply_dics_epochs.rst", "generated/mne.beamformer.apply_dics_tfr_epochs.rst", "generated/mne.beamformer.apply_lcmv.rst", "generated/mne.beamformer.apply_lcmv_cov.rst", "generated/mne.beamformer.apply_lcmv_epochs.rst", "generated/mne.beamformer.apply_lcmv_raw.rst", "generated/mne.beamformer.make_dics.rst", "generated/mne.beamformer.make_lcmv.rst", "generated/mne.beamformer.make_lcmv_resolution_matrix.rst", "generated/mne.beamformer.rap_music.rst", "generated/mne.beamformer.read_beamformer.rst", "generated/mne.bem.ConductorModel.rst", "generated/mne.bem.convert_flash_mris.rst", "generated/mne.bem.distance_to_bem.rst", "generated/mne.bem.fit_sphere_to_headshape.rst", "generated/mne.bem.get_fitting_dig.rst", "generated/mne.bem.make_flash_bem.rst", "generated/mne.bem.make_scalp_surfaces.rst", "generated/mne.bem.make_watershed_bem.rst", "generated/mne.channel_indices_by_type.rst", "generated/mne.channel_type.rst", "generated/mne.channels.DigMontage.rst", "generated/mne.channels.Layout.rst", "generated/mne.channels.combine_channels.rst", "generated/mne.channels.compute_dev_head_t.rst", "generated/mne.channels.compute_native_head_t.rst", "generated/mne.channels.equalize_channels.rst", "generated/mne.channels.find_ch_adjacency.rst", "generated/mne.channels.find_layout.rst", "generated/mne.channels.fix_mag_coil_types.rst", "generated/mne.channels.generate_2d_layout.rst", "generated/mne.channels.get_builtin_ch_adjacencies.rst", "generated/mne.channels.get_builtin_montages.rst", "generated/mne.channels.make_1020_channel_selections.rst", "generated/mne.channels.make_dig_montage.rst", "generated/mne.channels.make_eeg_layout.rst", "generated/mne.channels.make_grid_layout.rst", "generated/mne.channels.make_standard_montage.rst", "generated/mne.channels.read_ch_adjacency.rst", "generated/mne.channels.read_custom_montage.rst", "generated/mne.channels.read_dig_captrak.rst", "generated/mne.channels.read_dig_dat.rst", "generated/mne.channels.read_dig_egi.rst", "generated/mne.channels.read_dig_fif.rst", "generated/mne.channels.read_dig_hpts.rst", "generated/mne.channels.read_dig_localite.rst", "generated/mne.channels.read_dig_polhemus_isotrak.rst", "generated/mne.channels.read_layout.rst", "generated/mne.channels.read_polhemus_fastscan.rst", "generated/mne.channels.rename_channels.rst", "generated/mne.chpi.compute_chpi_amplitudes.rst", "generated/mne.chpi.compute_chpi_locs.rst", "generated/mne.chpi.compute_chpi_snr.rst", "generated/mne.chpi.compute_head_pos.rst", "generated/mne.chpi.extract_chpi_locs_ctf.rst", "generated/mne.chpi.extract_chpi_locs_kit.rst", "generated/mne.chpi.filter_chpi.rst", "generated/mne.chpi.get_active_chpi.rst", "generated/mne.chpi.get_chpi_info.rst", "generated/mne.chpi.head_pos_to_trans_rot_t.rst", "generated/mne.chpi.read_head_pos.rst", "generated/mne.chpi.write_head_pos.rst", "generated/mne.combine_evoked.rst", "generated/mne.compute_covariance.rst", "generated/mne.compute_proj_epochs.rst", "generated/mne.compute_proj_evoked.rst", "generated/mne.compute_proj_raw.rst", "generated/mne.compute_rank.rst", "generated/mne.compute_raw_covariance.rst", "generated/mne.compute_source_morph.rst", "generated/mne.concatenate_epochs.rst", "generated/mne.concatenate_events.rst", "generated/mne.concatenate_raws.rst", "generated/mne.convert_forward_solution.rst", "generated/mne.coreg.Coregistration.rst", "generated/mne.coreg.estimate_head_mri_t.rst", "generated/mne.coreg.get_mni_fiducials.rst", "generated/mne.count_events.rst", "generated/mne.cov.compute_whitener.rst", "generated/mne.cov.prepare_noise_cov.rst", "generated/mne.cov.regularize.rst", "generated/mne.create_default_subject.rst", "generated/mne.create_info.rst", "generated/mne.cuda.get_cuda_memory.rst", "generated/mne.cuda.init_cuda.rst", "generated/mne.cuda.set_cuda_device.rst", "generated/mne.datasets.brainstorm.bst_auditory.data_path.rst", "generated/mne.datasets.brainstorm.bst_raw.data_path.rst", "generated/mne.datasets.brainstorm.bst_resting.data_path.rst", "generated/mne.datasets.eegbci.load_data.rst", "generated/mne.datasets.eegbci.standardize.rst", "generated/mne.datasets.epilepsy_ecog.data_path.rst", "generated/mne.datasets.erp_core.data_path.rst", "generated/mne.datasets.fetch_aparc_sub_parcellation.rst", "generated/mne.datasets.fetch_dataset.rst", "generated/mne.datasets.fetch_fsaverage.rst", "generated/mne.datasets.fetch_hcp_mmp_parcellation.rst", "generated/mne.datasets.fetch_infant_template.rst", "generated/mne.datasets.fetch_phantom.rst", "generated/mne.datasets.fnirs_motor.data_path.rst", "generated/mne.datasets.has_dataset.rst", "generated/mne.datasets.hf_sef.data_path.rst", "generated/mne.datasets.kiloword.data_path.rst", "generated/mne.datasets.limo.load_data.rst", "generated/mne.datasets.misc.data_path.rst", "generated/mne.datasets.mtrf.data_path.rst", "generated/mne.datasets.multimodal.data_path.rst", "generated/mne.datasets.opm.data_path.rst", "generated/mne.datasets.phantom_4dbti.data_path.rst", "generated/mne.datasets.refmeg_noise.data_path.rst", "generated/mne.datasets.sample.data_path.rst", "generated/mne.datasets.sleep_physionet.age.fetch_data.rst", "generated/mne.datasets.sleep_physionet.temazepam.fetch_data.rst", "generated/mne.datasets.somato.data_path.rst", "generated/mne.datasets.spm_face.data_path.rst", "generated/mne.datasets.ssvep.data_path.rst", "generated/mne.datasets.ucl_opm_auditory.data_path.rst", "generated/mne.datasets.visual_92_categories.data_path.rst", "generated/mne.decimate_surface.rst", "generated/mne.decoding.CSP.rst", "generated/mne.decoding.EMS.rst", "generated/mne.decoding.FilterEstimator.rst", "generated/mne.decoding.GeneralizingEstimator.rst", "generated/mne.decoding.LinearModel.rst", "generated/mne.decoding.PSDEstimator.rst", "generated/mne.decoding.ReceptiveField.rst", "generated/mne.decoding.SPoC.rst", "generated/mne.decoding.SSD.rst", "generated/mne.decoding.Scaler.rst", "generated/mne.decoding.SlidingEstimator.rst", "generated/mne.decoding.TemporalFilter.rst", "generated/mne.decoding.TimeDelayingRidge.rst", "generated/mne.decoding.TimeFrequency.rst", "generated/mne.decoding.UnsupervisedSpatialFilter.rst", "generated/mne.decoding.Vectorizer.rst", "generated/mne.decoding.compute_ems.rst", "generated/mne.decoding.cross_val_multiscore.rst", "generated/mne.decoding.get_coef.rst", "generated/mne.dig_mri_distances.rst", "generated/mne.dipole.get_phantom_dipoles.rst", "generated/mne.epochs.average_movements.rst", "generated/mne.epochs.combine_event_ids.rst", "generated/mne.epochs.equalize_epoch_counts.rst", "generated/mne.epochs.make_metadata.rst", "generated/mne.equalize_channels.rst", "generated/mne.event.define_target_events.rst", "generated/mne.event.match_event_names.rst", "generated/mne.event.shift_time_events.rst", "generated/mne.events_from_annotations.rst", "generated/mne.export.export_epochs.rst", "generated/mne.export.export_evokeds.rst", "generated/mne.export.export_evokeds_mff.rst", "generated/mne.export.export_raw.rst", "generated/mne.extract_label_time_course.rst", "generated/mne.filter.construct_iir_filter.rst", "generated/mne.filter.create_filter.rst", "generated/mne.filter.estimate_ringing_samples.rst", "generated/mne.filter.filter_data.rst", "generated/mne.filter.notch_filter.rst", "generated/mne.filter.resample.rst", "generated/mne.find_events.rst", "generated/mne.find_stim_steps.rst", "generated/mne.fit_dipole.rst", "generated/mne.forward.compute_depth_prior.rst", "generated/mne.forward.compute_orient_prior.rst", "generated/mne.forward.restrict_forward_to_label.rst", "generated/mne.forward.restrict_forward_to_stc.rst", "generated/mne.get_config.rst", "generated/mne.get_config_path.rst", "generated/mne.get_head_surf.rst", "generated/mne.get_meg_helmet_surf.rst", "generated/mne.get_montage_volume_labels.rst", "generated/mne.get_volume_labels_from_aseg.rst", "generated/mne.get_volume_labels_from_src.rst", "generated/mne.grade_to_tris.rst", "generated/mne.grade_to_vertices.rst", "generated/mne.grand_average.rst", "generated/mne.grow_labels.rst", "generated/mne.gui.coregistration.rst", "generated/mne.gui.locate_ieeg.rst", "generated/mne.head_to_mni.rst", "generated/mne.head_to_mri.rst", "generated/mne.inverse_sparse.gamma_map.rst", "generated/mne.inverse_sparse.make_stc_from_dipoles.rst", "generated/mne.inverse_sparse.mixed_norm.rst", "generated/mne.inverse_sparse.tf_mixed_norm.rst", "generated/mne.io.BaseRaw.rst", "generated/mne.io.Raw.rst", "generated/mne.io.RawArray.rst", "generated/mne.io.anonymize_info.rst", "generated/mne.io.kit.read_mrk.rst", "generated/mne.io.read_fiducials.rst", "generated/mne.io.read_info.rst", "generated/mne.io.read_raw.rst", "generated/mne.io.read_raw_artemis123.rst", "generated/mne.io.read_raw_bdf.rst", "generated/mne.io.read_raw_boxy.rst", "generated/mne.io.read_raw_brainvision.rst", "generated/mne.io.read_raw_bti.rst", "generated/mne.io.read_raw_cnt.rst", "generated/mne.io.read_raw_ctf.rst", "generated/mne.io.read_raw_curry.rst", "generated/mne.io.read_raw_edf.rst", "generated/mne.io.read_raw_eeglab.rst", "generated/mne.io.read_raw_egi.rst", "generated/mne.io.read_raw_eximia.rst", "generated/mne.io.read_raw_fieldtrip.rst", "generated/mne.io.read_raw_fif.rst", "generated/mne.io.read_raw_fil.rst", "generated/mne.io.read_raw_gdf.rst", "generated/mne.io.read_raw_hitachi.rst", "generated/mne.io.read_raw_kit.rst", "generated/mne.io.read_raw_nedf.rst", "generated/mne.io.read_raw_nicolet.rst", "generated/mne.io.read_raw_nihon.rst", "generated/mne.io.read_raw_nirx.rst", "generated/mne.io.read_raw_persyst.rst", "generated/mne.io.read_raw_snirf.rst", "generated/mne.io.show_fiff.rst", "generated/mne.io.write_fiducials.rst", "generated/mne.label.select_sources.rst", "generated/mne.label_sign_flip.rst", "generated/mne.labels_to_stc.rst", "generated/mne.make_ad_hoc_cov.rst", "generated/mne.make_bem_model.rst", "generated/mne.make_bem_solution.rst", "generated/mne.make_field_map.rst", "generated/mne.make_fixed_length_epochs.rst", "generated/mne.make_fixed_length_events.rst", "generated/mne.make_forward_dipole.rst", "generated/mne.make_forward_solution.rst", "generated/mne.make_sphere_model.rst", "generated/mne.merge_events.rst", "generated/mne.minimum_norm.InverseOperator.rst", "generated/mne.minimum_norm.apply_inverse.rst", "generated/mne.minimum_norm.apply_inverse_cov.rst", "generated/mne.minimum_norm.apply_inverse_epochs.rst", "generated/mne.minimum_norm.apply_inverse_raw.rst", "generated/mne.minimum_norm.apply_inverse_tfr_epochs.rst", "generated/mne.minimum_norm.compute_rank_inverse.rst", "generated/mne.minimum_norm.compute_source_psd.rst", "generated/mne.minimum_norm.compute_source_psd_epochs.rst", "generated/mne.minimum_norm.estimate_snr.rst", "generated/mne.minimum_norm.get_cross_talk.rst", "generated/mne.minimum_norm.get_point_spread.rst", "generated/mne.minimum_norm.make_inverse_operator.rst", "generated/mne.minimum_norm.make_inverse_resolution_matrix.rst", "generated/mne.minimum_norm.prepare_inverse_operator.rst", "generated/mne.minimum_norm.read_inverse_operator.rst", "generated/mne.minimum_norm.resolution_metrics.rst", "generated/mne.minimum_norm.source_band_induced_power.rst", "generated/mne.minimum_norm.source_induced_power.rst", "generated/mne.minimum_norm.write_inverse_operator.rst", "generated/mne.morph_labels.rst", "generated/mne.morph_source_spaces.rst", "generated/mne.open_docs.rst", "generated/mne.open_report.rst", "generated/mne.parse_config.rst", "generated/mne.pick_channels.rst", "generated/mne.pick_channels_cov.rst", "generated/mne.pick_channels_forward.rst", "generated/mne.pick_channels_regexp.rst", "generated/mne.pick_events.rst", "generated/mne.pick_info.rst", "generated/mne.pick_types.rst", "generated/mne.pick_types_forward.rst", "generated/mne.preprocessing.EOGRegression.rst", "generated/mne.preprocessing.ICA.rst", "generated/mne.preprocessing.Xdawn.rst", "generated/mne.preprocessing.annotate_amplitude.rst", "generated/mne.preprocessing.annotate_break.rst", "generated/mne.preprocessing.annotate_movement.rst", "generated/mne.preprocessing.annotate_muscle_zscore.rst", "generated/mne.preprocessing.annotate_nan.rst", "generated/mne.preprocessing.compute_average_dev_head_t.rst", "generated/mne.preprocessing.compute_bridged_electrodes.rst", "generated/mne.preprocessing.compute_current_source_density.rst", "generated/mne.preprocessing.compute_fine_calibration.rst", "generated/mne.preprocessing.compute_maxwell_basis.rst", "generated/mne.preprocessing.compute_proj_ecg.rst", "generated/mne.preprocessing.compute_proj_eog.rst", "generated/mne.preprocessing.corrmap.rst", "generated/mne.preprocessing.cortical_signal_suppression.rst", "generated/mne.preprocessing.create_ecg_epochs.rst", "generated/mne.preprocessing.create_eog_epochs.rst", "generated/mne.preprocessing.equalize_bads.rst", "generated/mne.preprocessing.find_bad_channels_maxwell.rst", "generated/mne.preprocessing.find_ecg_events.rst", "generated/mne.preprocessing.find_eog_events.rst", "generated/mne.preprocessing.fix_stim_artifact.rst", "generated/mne.preprocessing.ica_find_ecg_events.rst", "generated/mne.preprocessing.ica_find_eog_events.rst", "generated/mne.preprocessing.ieeg.project_sensors_onto_brain.rst", "generated/mne.preprocessing.infomax.rst", "generated/mne.preprocessing.interpolate_bridged_electrodes.rst", "generated/mne.preprocessing.maxwell_filter.rst", "generated/mne.preprocessing.maxwell_filter_prepare_emptyroom.rst", "generated/mne.preprocessing.nirs.beer_lambert_law.rst", "generated/mne.preprocessing.nirs.optical_density.rst", "generated/mne.preprocessing.nirs.scalp_coupling_index.rst", "generated/mne.preprocessing.nirs.short_channels.rst", "generated/mne.preprocessing.nirs.source_detector_distances.rst", "generated/mne.preprocessing.nirs.temporal_derivative_distribution_repair.rst", "generated/mne.preprocessing.oversampled_temporal_projection.rst", "generated/mne.preprocessing.peak_finder.rst", "generated/mne.preprocessing.read_eog_regression.rst", "generated/mne.preprocessing.read_fine_calibration.rst", "generated/mne.preprocessing.read_ica.rst", "generated/mne.preprocessing.read_ica_eeglab.rst", "generated/mne.preprocessing.realign_raw.rst", "generated/mne.preprocessing.regress_artifact.rst", "generated/mne.preprocessing.write_fine_calibration.rst", "generated/mne.random_parcellation.rst", "generated/mne.read_annotations.rst", "generated/mne.read_bem_solution.rst", "generated/mne.read_bem_surfaces.rst", "generated/mne.read_cov.rst", "generated/mne.read_dipole.rst", "generated/mne.read_epochs.rst", "generated/mne.read_epochs_eeglab.rst", "generated/mne.read_epochs_fieldtrip.rst", "generated/mne.read_epochs_kit.rst", "generated/mne.read_events.rst", "generated/mne.read_evoked_besa.rst", "generated/mne.read_evoked_fieldtrip.rst", "generated/mne.read_evokeds.rst", "generated/mne.read_evokeds_mff.rst", "generated/mne.read_forward_solution.rst", "generated/mne.read_freesurfer_lut.rst", "generated/mne.read_label.rst", "generated/mne.read_labels_from_annot.rst", "generated/mne.read_lta.rst", "generated/mne.read_morph_map.rst", "generated/mne.read_proj.rst", "generated/mne.read_reject_parameters.rst", "generated/mne.read_source_estimate.rst", "generated/mne.read_source_morph.rst", "generated/mne.read_source_spaces.rst", "generated/mne.read_surface.rst", "generated/mne.read_talxfm.rst", "generated/mne.read_trans.rst", "generated/mne.read_tri.rst", "generated/mne.read_vectorview_selection.rst", "generated/mne.rename_channels.rst", "generated/mne.scale_bem.rst", "generated/mne.scale_labels.rst", "generated/mne.scale_mri.rst", "generated/mne.scale_source_space.rst", "generated/mne.sensitivity_map.rst", "generated/mne.set_bipolar_reference.rst", "generated/mne.set_cache_dir.rst", "generated/mne.set_config.rst", "generated/mne.set_eeg_reference.rst", "generated/mne.set_log_file.rst", "generated/mne.set_log_level.rst", "generated/mne.setup_source_space.rst", "generated/mne.setup_volume_source_space.rst", "generated/mne.simulation.SourceSimulator.rst", "generated/mne.simulation.add_chpi.rst", "generated/mne.simulation.add_ecg.rst", "generated/mne.simulation.add_eog.rst", "generated/mne.simulation.add_noise.rst", "generated/mne.simulation.metrics.cosine_score.rst", "generated/mne.simulation.metrics.f1_score.rst", "generated/mne.simulation.metrics.peak_position_error.rst", "generated/mne.simulation.metrics.precision_score.rst", "generated/mne.simulation.metrics.recall_score.rst", "generated/mne.simulation.metrics.region_localization_error.rst", "generated/mne.simulation.metrics.roc_auc_score.rst", "generated/mne.simulation.metrics.spatial_deviation_error.rst", "generated/mne.simulation.select_source_in_label.rst", "generated/mne.simulation.simulate_evoked.rst", "generated/mne.simulation.simulate_raw.rst", "generated/mne.simulation.simulate_sparse_stc.rst", "generated/mne.simulation.simulate_stc.rst", "generated/mne.source_space.compute_distance_to_sensors.rst", "generated/mne.source_space.get_decimated_surfaces.rst", "generated/mne.spatial_dist_adjacency.rst", "generated/mne.spatial_inter_hemi_adjacency.rst", "generated/mne.spatial_src_adjacency.rst", "generated/mne.spatial_tris_adjacency.rst", "generated/mne.spatio_temporal_dist_adjacency.rst", "generated/mne.spatio_temporal_src_adjacency.rst", "generated/mne.spatio_temporal_tris_adjacency.rst", "generated/mne.split_label.rst", "generated/mne.stats.bonferroni_correction.rst", "generated/mne.stats.bootstrap_confidence_interval.rst", "generated/mne.stats.combine_adjacency.rst", "generated/mne.stats.f_mway_rm.rst", "generated/mne.stats.f_oneway.rst", "generated/mne.stats.f_threshold_mway_rm.rst", "generated/mne.stats.fdr_correction.rst", "generated/mne.stats.linear_regression.rst", "generated/mne.stats.linear_regression_raw.rst", "generated/mne.stats.permutation_cluster_1samp_test.rst", "generated/mne.stats.permutation_cluster_test.rst", "generated/mne.stats.permutation_t_test.rst", "generated/mne.stats.spatio_temporal_cluster_1samp_test.rst", "generated/mne.stats.spatio_temporal_cluster_test.rst", "generated/mne.stats.summarize_clusters_stc.rst", "generated/mne.stats.ttest_1samp_no_p.rst", "generated/mne.stats.ttest_ind_no_p.rst", "generated/mne.stc_near_sensors.rst", "generated/mne.stc_to_label.rst", "generated/mne.surface.complete_surface_info.rst", "generated/mne.surface.read_curvature.rst", "generated/mne.sys_info.rst", "generated/mne.time_frequency.AverageTFR.rst", "generated/mne.time_frequency.CrossSpectralDensity.rst", "generated/mne.time_frequency.EpochsSpectrum.rst", "generated/mne.time_frequency.EpochsTFR.rst", "generated/mne.time_frequency.Spectrum.rst", "generated/mne.time_frequency.csd_array_fourier.rst", "generated/mne.time_frequency.csd_array_morlet.rst", "generated/mne.time_frequency.csd_array_multitaper.rst", "generated/mne.time_frequency.csd_fourier.rst", "generated/mne.time_frequency.csd_morlet.rst", "generated/mne.time_frequency.csd_multitaper.rst", "generated/mne.time_frequency.csd_tfr.rst", "generated/mne.time_frequency.dpss_windows.rst", "generated/mne.time_frequency.fit_iir_model_raw.rst", "generated/mne.time_frequency.fwhm.rst", "generated/mne.time_frequency.istft.rst", "generated/mne.time_frequency.morlet.rst", "generated/mne.time_frequency.pick_channels_csd.rst", "generated/mne.time_frequency.psd_array_multitaper.rst", "generated/mne.time_frequency.psd_array_welch.rst", "generated/mne.time_frequency.read_csd.rst", "generated/mne.time_frequency.read_spectrum.rst", "generated/mne.time_frequency.read_tfrs.rst", "generated/mne.time_frequency.stft.rst", "generated/mne.time_frequency.stftfreq.rst", "generated/mne.time_frequency.tfr.cwt.rst", "generated/mne.time_frequency.tfr.morlet.rst", "generated/mne.time_frequency.tfr_array_morlet.rst", "generated/mne.time_frequency.tfr_array_multitaper.rst", "generated/mne.time_frequency.tfr_array_stockwell.rst", "generated/mne.time_frequency.tfr_morlet.rst", "generated/mne.time_frequency.tfr_multitaper.rst", "generated/mne.time_frequency.tfr_stockwell.rst", "generated/mne.time_frequency.write_tfrs.rst", "generated/mne.transform_surface_to.rst", "generated/mne.transforms.Transform.rst", "generated/mne.transforms.apply_volume_registration.rst", "generated/mne.transforms.apply_volume_registration_points.rst", "generated/mne.transforms.compute_volume_registration.rst", "generated/mne.transforms.quat_to_rot.rst", "generated/mne.transforms.read_ras_mni_t.rst", "generated/mne.transforms.rot_to_quat.rst", "generated/mne.use_coil_def.rst", "generated/mne.use_log_level.rst", "generated/mne.utils.deprecated.rst", "generated/mne.utils.warn.rst", "generated/mne.verbose.rst", "generated/mne.vertex_to_mni.rst", "generated/mne.viz.Brain.rst", "generated/mne.viz.ClickableImage.rst", "generated/mne.viz.Figure3D.rst", "generated/mne.viz.add_background_image.rst", "generated/mne.viz.centers_to_edges.rst", "generated/mne.viz.circular_layout.rst", "generated/mne.viz.close_3d_figure.rst", "generated/mne.viz.close_all_3d_figures.rst", "generated/mne.viz.compare_fiff.rst", "generated/mne.viz.create_3d_figure.rst", "generated/mne.viz.get_3d_backend.rst", "generated/mne.viz.get_brain_class.rst", "generated/mne.viz.get_browser_backend.rst", "generated/mne.viz.iter_topography.rst", "generated/mne.viz.link_brains.rst", "generated/mne.viz.mne_analyze_colormap.rst", "generated/mne.viz.plot_alignment.rst", "generated/mne.viz.plot_arrowmap.rst", "generated/mne.viz.plot_bem.rst", "generated/mne.viz.plot_brain_colorbar.rst", "generated/mne.viz.plot_bridged_electrodes.rst", "generated/mne.viz.plot_ch_adjacency.rst", "generated/mne.viz.plot_channel_labels_circle.rst", "generated/mne.viz.plot_chpi_snr.rst", "generated/mne.viz.plot_compare_evokeds.rst", "generated/mne.viz.plot_cov.rst", "generated/mne.viz.plot_csd.rst", "generated/mne.viz.plot_dipole_amplitudes.rst", "generated/mne.viz.plot_dipole_locations.rst", "generated/mne.viz.plot_drop_log.rst", "generated/mne.viz.plot_epochs.rst", "generated/mne.viz.plot_epochs_image.rst", "generated/mne.viz.plot_epochs_psd_topomap.rst", "generated/mne.viz.plot_events.rst", "generated/mne.viz.plot_evoked.rst", "generated/mne.viz.plot_evoked_field.rst", "generated/mne.viz.plot_evoked_image.rst", "generated/mne.viz.plot_evoked_joint.rst", "generated/mne.viz.plot_evoked_topo.rst", "generated/mne.viz.plot_evoked_topomap.rst", "generated/mne.viz.plot_evoked_white.rst", "generated/mne.viz.plot_filter.rst", "generated/mne.viz.plot_head_positions.rst", "generated/mne.viz.plot_ica_components.rst", "generated/mne.viz.plot_ica_overlay.rst", "generated/mne.viz.plot_ica_properties.rst", "generated/mne.viz.plot_ica_scores.rst", "generated/mne.viz.plot_ica_sources.rst", "generated/mne.viz.plot_ideal_filter.rst", "generated/mne.viz.plot_layout.rst", "generated/mne.viz.plot_montage.rst", "generated/mne.viz.plot_projs_joint.rst", "generated/mne.viz.plot_projs_topomap.rst", "generated/mne.viz.plot_raw.rst", "generated/mne.viz.plot_raw_psd.rst", "generated/mne.viz.plot_regression_weights.rst", "generated/mne.viz.plot_sensors.rst", "generated/mne.viz.plot_snr_estimate.rst", "generated/mne.viz.plot_source_estimates.rst", "generated/mne.viz.plot_sparse_source_estimates.rst", "generated/mne.viz.plot_tfr_topomap.rst", "generated/mne.viz.plot_topo_image_epochs.rst", "generated/mne.viz.plot_topomap.rst", "generated/mne.viz.plot_vector_source_estimates.rst", "generated/mne.viz.plot_volume_source_estimates.rst", "generated/mne.viz.set_3d_backend.rst", "generated/mne.viz.set_3d_options.rst", "generated/mne.viz.set_3d_title.rst", "generated/mne.viz.set_3d_view.rst", "generated/mne.viz.set_browser_backend.rst", "generated/mne.viz.snapshot_brain_montage.rst", "generated/mne.viz.use_3d_backend.rst", "generated/mne.viz.use_browser_backend.rst", "generated/mne.warp_montage_volume.rst", "generated/mne.what.rst", "generated/mne.write_bem_solution.rst", "generated/mne.write_bem_surfaces.rst", "generated/mne.write_cov.rst", "generated/mne.write_events.rst", "generated/mne.write_evokeds.rst", "generated/mne.write_forward_solution.rst", "generated/mne.write_head_bem.rst", "generated/mne.write_label.rst", "generated/mne.write_labels_to_annot.rst", "generated/mne.write_proj.rst", "generated/mne.write_source_spaces.rst", "generated/mne.write_surface.rst", "generated/mne.write_trans.rst", "glossary.rst", "index.rst", "install/advanced.rst", "install/check_installation.rst", "install/contributing.rst", "install/freesurfer.rst", "install/index.rst", "install/installers.rst", "install/manual_install.rst", "install/manual_install_python.rst", "install/mne_c.rst", "install/mne_tools_suite.rst", "install/updating.rst", "inverse.rst", "logging.rst", "martinos.rst", "mne_cpp.rst", "most_used_classes.rst", "mri.rst", "overview/cite.rst", "overview/cookbook.rst", "overview/datasets_index.rst", "overview/design_philosophy.rst", "overview/development.rst", "overview/faq.rst", "overview/get_help.rst", "overview/governance.rst", "overview/implementation.rst", "overview/index.rst", "overview/learn_python.rst", "overview/matlab.rst", "overview/migrating.rst", "overview/people.rst", "overview/roadmap.rst", "preprocessing.rst", "python_reference.rst", "reading_raw_data.rst", "realtime.rst", "report.rst", "sensor_space.rst", "simulation.rst", "source_space.rst", "statistics.rst", "time_frequency.rst", "visualization.rst", "whats_new.rst"], "titles": ["Connectivity Analysis Examples", "Brainstorm raw (median nerve) dataset", "HF-SEF dataset", "Examples on open datasets", "Single trial linear regression analysis with the LIMO dataset", "Optically pumped magnetometer (OPM) data", "Computation times", "From raw data to dSPM on SPM Faces dataset", "Motor imagery decoding from EEG data using the Common Spatial Pattern (CSP)", "Decoding in time-frequency space using Common Spatial Patterns (CSP)", "Representational Similarity Analysis", "Decoding source space data", "Continuous Target Decoding with SPoC", "Decoding sensor space data with generalization across time and conditions", "Analysis of evoked response using ICA and PCA reduction techniques", "XDAWN Decoding From EEG data", "Compute effect-matched-spatial filtering (EMS)", "Machine Learning (Decoding, Encoding, and MVPA)", "Linear classifier on sensor data with plot patterns and filters", "Receptive Field Estimation and Prediction", "Computation times", "Compute Spectro-Spatial Decomposition (SSD) spatial filters", "Display sensitivity maps for EEG and MEG sensors", "Forward modeling", "Generate a left cerebellum volume source space", "Computation times", "Use source space morphing", "Examples Gallery", "Compute MNE-dSPM inverse solution on single epochs", "Compute sLORETA inverse solution on raw data", "Compute MNE-dSPM inverse solution on evoked data in volume source space", "Source localization with a custom inverse solver", "Compute source level time-frequency timecourses using a DICS beamformer", "Compute source power using DICS beamformer", "Compute evoked ERS source power using DICS, LCMV beamformer, and dSPM", "Compute a sparse inverse solution using the Gamma-MAP empirical Bayesian method", "Inverse problem and source analysis", "Extracting time course from source_estimate object", "Generate a functional label from source estimates", "Extracting the time series of activations in a label", "Compute sparse inverse solution with mixed norm: MxNE and irMxNE", "Compute MNE inverse solution on evoked data with a mixed source space", "Compute source power estimate by projecting the covariance with MNE", "Morph surface source estimate", "Morph volumetric source estimate", "Computing source timecourses with an XFit-like multi-dipole model", "Compute iterative reweighted TF-MxNE with multiscale time-frequency dictionary", "Visualize source leakage among labels using a circular graph", "Plot point-spread functions (PSFs) and cross-talk functions (CTFs)", "Compute cross-talk functions for LCMV beamformers", "Plot point-spread functions (PSFs) for a volume", "Compute Rap-Music on evoked data", "Reading an inverse operator", "Reading an STC file", "Compute spatial resolution metrics in source space", "Compute spatial resolution metrics to compare MEG with EEG+MEG", "Computation times", "Estimate data SNR using an inverse", "Computing source space SNR", "Compute MxNE with time-frequency sparse prior", "Plotting the full vector-valued MNE solution", "Getting averaging info from .fif files", "Input/Output", "How to use data in neural ensemble (NEO) format", "Reading/Writing a noise covariance matrix", "Reading XDF EEG data", "Computation times", "Cortical Signal Suppression (CSS) for removal of cortical signals", "Define target events based on time lag, plot evoked response", "Identify EEG Electrodes Bridged by too much Gel", "Transform EEG data using current source density (CSD)", "Show EOG artifact timing", "Reduce EOG artifacts through regression", "Find MEG reference channel artifacts", "Visualise NIRS artifact correction methods", "Compare the different ICA algorithms in MNE", "Preprocessing", "Interpolate bad channels for MEG/EEG channels", "Locating micro-scale intracranial electrode contacts", "Maxwell filter data with movement compensation", "Annotate movement artifacts and reestimate dev_head_t", "Annotate muscle artifacts", "Removing muscle ICA components", "Plot sensor denoising using oversampled temporal projection", "Computation times", "Shifting time-scale in evoked data", "Remap MEG channel types", "XDAWN Denoising", "Data Simulation", "Compare simulated and estimated source activity", "Computation times", "Generate simulated evoked data", "Generate simulated raw data", "Simulate raw data using subject anatomy", "Generate simulated source data", "Permutation F-test on sensor data with 1D cluster level", "FDR correction on T-test on sensor data", "Statistics Examples", "Regression on continuous data (rER[P/F])", "Permutation T-test on sensor data", "Analysing continuous features with binning and regression in sensor space", "Computation times", "Compute a cross-spectral density (CSD) matrix", "Compute Power Spectral Density of inverse solution from single epochs", "Time-Frequency Examples", "Computation times", "Compute power and phase lock in label of the source space", "Compute source power spectral density (PSD) in a label", "Compute source power spectral density (PSD) of VectorView and OPM data", "Compute induced power in the source space with dSPM", "Temporal whitening with AR model", "Compute and visualize ERDS maps", "Explore event-related dynamics for specific frequency bands", "Time-frequency on simulated data (Multitaper vs. Morlet vs. Stockwell vs. Hilbert)", "How to convert 3D electrode positions to a 2D image", "Plotting with <code class=\"docutils literal notranslate\"><span class=\"pre\">mne.viz.Brain</span></code>", "Visualize channel over epochs as an image", "Plotting EEG sensors on the scalp", "Plotting topographic arrowmaps of evoked data", "Plotting topographic maps of evoked data", "Whitening evoked data with a noise covariance", "Visualization", "Plotting sensor layouts of MEG systems", "Plot the MNE brain and helmet", "Plotting sensor layouts of EEG systems", "Plot a cortical parcellation", "Make figures more publication ready", "Plot single trial activity, grouped by ROI and sorted by RT", "Show noise levels from empty room data", "Computation times", "Sensitivity map of SSP projections", "Compare evoked responses for different conditions", "Plot custom topographies for MEG sensors", "Cross-hemisphere comparison", "Locating intracranial electrode contacts", "Working with sEEG data", "Working with ECoG data", "Sleep stage classification from polysomnography (PSG) data", "Clinical applications", "Computation times", "The Epochs data structure: discontinuous data", "Regression-based baseline correction", "Visualizing epoched data", "Working with Epoch metadata", "Auto-generating Epochs metadata", "Exporting Epochs to Pandas DataFrames", "Divide continuous data into equally-spaced epochs", "Segmenting continuous data into epochs", "Computation times", "The Evoked data structure: evoked/averaged data", "Visualizing Evoked data", "EEG analysis - Event-Related Potentials (ERPs)", "Plotting whitened data", "Estimating evoked responses", "Computation times", "FreeSurfer MRI reconstruction", "Source alignment and coordinate frames", "Using an automated approach to coregistration", "Head model and forward computation", "EEG forward operator with a template MRI", "How MNE uses FreeSurfer\u2019s outputs", "Fixing BEM and head surfaces", "Computing a covariance matrix", "Forward models and source spaces", "Computation times", "Tutorials", "Overview of MEG/EEG analysis with MNE-Python", "Modifying data in-place", "Parsing events from raw data", "The Info data structure", "Working with sensor locations", "Configuring MNE-Python", "Getting started with mne.Report", "Introductory tutorials", "Computation times", "The SourceEstimate data structure", "Source localization with equivalent current dipole (ECD) fit", "Source localization with MNE, dSPM, sLORETA, and eLORETA", "The role of dipole orientations in distributed source localization", "Computing various MNE solutions", "Source reconstruction using an LCMV beamformer", "Visualize source time courses (stcs)", "EEG source localization given electrode locations on an MRI", "Brainstorm Elekta phantom dataset tutorial", "Brainstorm CTF phantom dataset tutorial", "4D Neuroimaging/BTi phantom dataset tutorial", "Source localization and inverses", "Computation times", "Importing data from MEG devices", "Importing data from EEG devices", "Importing data from fNIRS devices", "Working with CTF data: the Brainstorm auditory dataset", "Reading data for different recording systems", "Computation times", "Spectro-temporal receptive field (STRF) estimation on continuous data", "Decoding (MVPA)", "Machine learning models of neural activity", "Computation times", "Overview of artifact detection", "Handling bad channels", "Rejecting bad data spans and breaks", "Background information on filtering", "Filtering and resampling data", "Repairing artifacts with regression", "Repairing artifacts with ICA", "Background on projectors and projections", "Repairing artifacts with SSP", "Setting the EEG reference", "Extracting and visualizing subject head movement", "Signal-space separation (SSS) and Maxwell filtering", "Preprocessing functional near-infrared spectroscopy (fNIRS) data", "Preprocessing optically pumped magnetometer (OPM) MEG data", "Preprocessing", "Computation times", "The Raw data structure: continuous data", "Working with events", "Annotating continuous data", "Built-in plotting methods for Raw objects", "Working with continuous data", "Computation times", "Creating MNE-Python data structures from scratch", "Corrupt known signal with point spread", "DICS for power mapping", "Simulation", "Computation times", "Statistical inference", "Visualising statistical significance thresholds on EEG data", "Non-parametric 1 sample cluster statistic on single trial power", "Non-parametric between conditions cluster statistic on single trial power", "Mass-univariate twoway repeated measures ANOVA on single trial power", "Spatiotemporal permutation F-test on full sensor data", "Statistical analysis of sensor data", "Computation times", "Permutation t-test on source data with spatio-temporal clustering", "2 samples permutation test on source data with spatio-temporal clustering", "Repeated measures ANOVA on source data with spatio-temporal clustering", "Statistical analysis of source estimates", "Computation times", "The Spectrum and EpochsSpectrum classes: frequency-domain data", "Frequency and time-frequency sensor analysis", "Frequency-tagging: Basic analysis of an SSVEP/vSSR dataset", "Time-frequency analysis", "Computation times", "General bibliography", "Papers citing MNE-Python", "Connectivity Estimation", "Covariance computation", "Creating data objects from arrays", "Datasets", "Decoding", "Events", "Exporting", "File I/O", "Forward Modeling", "Funding and other support", "Command line tools using Python", "mne.AcqParserFIF", "mne.Annotations", "mne.BaseEpochs", "mne.BiHemiLabel", "mne.Covariance", "mne.Dipole", "mne.DipoleFixed", "mne.Epochs", "mne.EpochsArray", "mne.Evoked", "mne.EvokedArray", "mne.Forward", "mne.Info", "mne.Label", "mne.MixedSourceEstimate", "mne.MixedVectorSourceEstimate", "mne.Projection", "mne.Report", "mne.SourceEstimate", "mne.SourceMorph", "mne.SourceSpaces", "mne.VectorSourceEstimate", "mne.VolSourceEstimate", "mne.VolVectorSourceEstimate", "mne.add_reference_channels", "mne.add_source_space_distances", "mne.annotations_from_events", "mne.apply_forward", "mne.apply_forward_raw", "mne.average_forward_solutions", "mne.baseline.rescale", "mne.beamformer.Beamformer", "mne.beamformer.apply_dics", "mne.beamformer.apply_dics_csd", "mne.beamformer.apply_dics_epochs", "mne.beamformer.apply_dics_tfr_epochs", "mne.beamformer.apply_lcmv", "mne.beamformer.apply_lcmv_cov", "mne.beamformer.apply_lcmv_epochs", "mne.beamformer.apply_lcmv_raw", "mne.beamformer.make_dics", "mne.beamformer.make_lcmv", "mne.beamformer.make_lcmv_resolution_matrix", "mne.beamformer.rap_music", "mne.beamformer.read_beamformer", "mne.bem.ConductorModel", "mne.bem.convert_flash_mris", "mne.bem.distance_to_bem", "mne.bem.fit_sphere_to_headshape", "mne.bem.get_fitting_dig", "mne.bem.make_flash_bem", "mne.bem.make_scalp_surfaces", "mne.bem.make_watershed_bem", "mne.channel_indices_by_type", "mne.channel_type", "mne.channels.DigMontage", "mne.channels.Layout", "mne.channels.combine_channels", "mne.channels.compute_dev_head_t", "mne.channels.compute_native_head_t", "mne.channels.equalize_channels", "mne.channels.find_ch_adjacency", "mne.channels.find_layout", "mne.channels.fix_mag_coil_types", "mne.channels.generate_2d_layout", "mne.channels.get_builtin_ch_adjacencies", "mne.channels.get_builtin_montages", "mne.channels.make_1020_channel_selections", "mne.channels.make_dig_montage", "mne.channels.make_eeg_layout", "mne.channels.make_grid_layout", "mne.channels.make_standard_montage", "mne.channels.read_ch_adjacency", "mne.channels.read_custom_montage", "mne.channels.read_dig_captrak", "mne.channels.read_dig_dat", "mne.channels.read_dig_egi", "mne.channels.read_dig_fif", "mne.channels.read_dig_hpts", "mne.channels.read_dig_localite", "mne.channels.read_dig_polhemus_isotrak", "mne.channels.read_layout", "mne.channels.read_polhemus_fastscan", "mne.channels.rename_channels", "mne.chpi.compute_chpi_amplitudes", "mne.chpi.compute_chpi_locs", "mne.chpi.compute_chpi_snr", "mne.chpi.compute_head_pos", "mne.chpi.extract_chpi_locs_ctf", "mne.chpi.extract_chpi_locs_kit", "mne.chpi.filter_chpi", "mne.chpi.get_active_chpi", "mne.chpi.get_chpi_info", "mne.chpi.head_pos_to_trans_rot_t", "mne.chpi.read_head_pos", "mne.chpi.write_head_pos", "mne.combine_evoked", "mne.compute_covariance", "mne.compute_proj_epochs", "mne.compute_proj_evoked", "mne.compute_proj_raw", "mne.compute_rank", "mne.compute_raw_covariance", "mne.compute_source_morph", "mne.concatenate_epochs", "mne.concatenate_events", "mne.concatenate_raws", "mne.convert_forward_solution", "mne.coreg.Coregistration", "mne.coreg.estimate_head_mri_t", "mne.coreg.get_mni_fiducials", "mne.count_events", "mne.cov.compute_whitener", "mne.cov.prepare_noise_cov", "mne.cov.regularize", "mne.create_default_subject", "mne.create_info", "mne.cuda.get_cuda_memory", "mne.cuda.init_cuda", "mne.cuda.set_cuda_device", "mne.datasets.brainstorm.bst_auditory.data_path", "mne.datasets.brainstorm.bst_raw.data_path", "mne.datasets.brainstorm.bst_resting.data_path", "mne.datasets.eegbci.load_data", "mne.datasets.eegbci.standardize", "mne.datasets.epilepsy_ecog.data_path", "mne.datasets.erp_core.data_path", "mne.datasets.fetch_aparc_sub_parcellation", "mne.datasets.fetch_dataset", "mne.datasets.fetch_fsaverage", "mne.datasets.fetch_hcp_mmp_parcellation", "mne.datasets.fetch_infant_template", "mne.datasets.fetch_phantom", "mne.datasets.fnirs_motor.data_path", "mne.datasets.has_dataset", "mne.datasets.hf_sef.data_path", "mne.datasets.kiloword.data_path", "mne.datasets.limo.load_data", "mne.datasets.misc.data_path", "mne.datasets.mtrf.data_path", "mne.datasets.multimodal.data_path", "mne.datasets.opm.data_path", "mne.datasets.phantom_4dbti.data_path", "mne.datasets.refmeg_noise.data_path", "mne.datasets.sample.data_path", "mne.datasets.sleep_physionet.age.fetch_data", "mne.datasets.sleep_physionet.temazepam.fetch_data", "mne.datasets.somato.data_path", "mne.datasets.spm_face.data_path", "mne.datasets.ssvep.data_path", "mne.datasets.ucl_opm_auditory.data_path", "mne.datasets.visual_92_categories.data_path", "mne.decimate_surface", "mne.decoding.CSP", "mne.decoding.EMS", "mne.decoding.FilterEstimator", "mne.decoding.GeneralizingEstimator", "mne.decoding.LinearModel", "mne.decoding.PSDEstimator", "mne.decoding.ReceptiveField", "mne.decoding.SPoC", "mne.decoding.SSD", "mne.decoding.Scaler", "mne.decoding.SlidingEstimator", "mne.decoding.TemporalFilter", "mne.decoding.TimeDelayingRidge", "mne.decoding.TimeFrequency", "mne.decoding.UnsupervisedSpatialFilter", "mne.decoding.Vectorizer", "mne.decoding.compute_ems", "mne.decoding.cross_val_multiscore", "mne.decoding.get_coef", "mne.dig_mri_distances", "mne.dipole.get_phantom_dipoles", "mne.epochs.average_movements", "mne.epochs.combine_event_ids", "mne.epochs.equalize_epoch_counts", "mne.epochs.make_metadata", "mne.equalize_channels", "mne.event.define_target_events", "mne.event.match_event_names", "mne.event.shift_time_events", "mne.events_from_annotations", "mne.export.export_epochs", "mne.export.export_evokeds", "mne.export.export_evokeds_mff", "mne.export.export_raw", "mne.extract_label_time_course", "mne.filter.construct_iir_filter", "mne.filter.create_filter", "mne.filter.estimate_ringing_samples", "mne.filter.filter_data", "mne.filter.notch_filter", "mne.filter.resample", "mne.find_events", "mne.find_stim_steps", "mne.fit_dipole", "mne.forward.compute_depth_prior", "mne.forward.compute_orient_prior", "mne.forward.restrict_forward_to_label", "mne.forward.restrict_forward_to_stc", "mne.get_config", "mne.get_config_path", "mne.get_head_surf", "mne.get_meg_helmet_surf", "mne.get_montage_volume_labels", "mne.get_volume_labels_from_aseg", "mne.get_volume_labels_from_src", "mne.grade_to_tris", "mne.grade_to_vertices", "mne.grand_average", "mne.grow_labels", "mne.gui.coregistration", "mne.gui.locate_ieeg", "mne.head_to_mni", "mne.head_to_mri", "mne.inverse_sparse.gamma_map", "mne.inverse_sparse.make_stc_from_dipoles", "mne.inverse_sparse.mixed_norm", "mne.inverse_sparse.tf_mixed_norm", "mne.io.BaseRaw", "mne.io.Raw", "mne.io.RawArray", "mne.io.anonymize_info", "mne.io.kit.read_mrk", "mne.io.read_fiducials", "mne.io.read_info", "mne.io.read_raw", "mne.io.read_raw_artemis123", "mne.io.read_raw_bdf", "mne.io.read_raw_boxy", "mne.io.read_raw_brainvision", "mne.io.read_raw_bti", "mne.io.read_raw_cnt", "mne.io.read_raw_ctf", "mne.io.read_raw_curry", "mne.io.read_raw_edf", "mne.io.read_raw_eeglab", "mne.io.read_raw_egi", "mne.io.read_raw_eximia", "mne.io.read_raw_fieldtrip", "mne.io.read_raw_fif", "mne.io.read_raw_fil", "mne.io.read_raw_gdf", "mne.io.read_raw_hitachi", "mne.io.read_raw_kit", "mne.io.read_raw_nedf", "mne.io.read_raw_nicolet", "mne.io.read_raw_nihon", "mne.io.read_raw_nirx", "mne.io.read_raw_persyst", "mne.io.read_raw_snirf", "mne.io.show_fiff", "mne.io.write_fiducials", "mne.label.select_sources", "mne.label_sign_flip", "mne.labels_to_stc", "mne.make_ad_hoc_cov", "mne.make_bem_model", "mne.make_bem_solution", "mne.make_field_map", "mne.make_fixed_length_epochs", "mne.make_fixed_length_events", "mne.make_forward_dipole", "mne.make_forward_solution", "mne.make_sphere_model", "mne.merge_events", "mne.minimum_norm.InverseOperator", "mne.minimum_norm.apply_inverse", "mne.minimum_norm.apply_inverse_cov", "mne.minimum_norm.apply_inverse_epochs", "mne.minimum_norm.apply_inverse_raw", "mne.minimum_norm.apply_inverse_tfr_epochs", "mne.minimum_norm.compute_rank_inverse", "mne.minimum_norm.compute_source_psd", "mne.minimum_norm.compute_source_psd_epochs", "mne.minimum_norm.estimate_snr", "mne.minimum_norm.get_cross_talk", "mne.minimum_norm.get_point_spread", "mne.minimum_norm.make_inverse_operator", "mne.minimum_norm.make_inverse_resolution_matrix", "mne.minimum_norm.prepare_inverse_operator", "mne.minimum_norm.read_inverse_operator", "mne.minimum_norm.resolution_metrics", "mne.minimum_norm.source_band_induced_power", "mne.minimum_norm.source_induced_power", "mne.minimum_norm.write_inverse_operator", "mne.morph_labels", "mne.morph_source_spaces", "mne.open_docs", "mne.open_report", "mne.parse_config", "mne.pick_channels", "mne.pick_channels_cov", "mne.pick_channels_forward", "mne.pick_channels_regexp", "mne.pick_events", "mne.pick_info", "mne.pick_types", "mne.pick_types_forward", "mne.preprocessing.EOGRegression", "mne.preprocessing.ICA", "mne.preprocessing.Xdawn", "mne.preprocessing.annotate_amplitude", "mne.preprocessing.annotate_break", "mne.preprocessing.annotate_movement", "mne.preprocessing.annotate_muscle_zscore", "mne.preprocessing.annotate_nan", "mne.preprocessing.compute_average_dev_head_t", "mne.preprocessing.compute_bridged_electrodes", "mne.preprocessing.compute_current_source_density", "mne.preprocessing.compute_fine_calibration", "mne.preprocessing.compute_maxwell_basis", "mne.preprocessing.compute_proj_ecg", "mne.preprocessing.compute_proj_eog", "mne.preprocessing.corrmap", "mne.preprocessing.cortical_signal_suppression", "mne.preprocessing.create_ecg_epochs", "mne.preprocessing.create_eog_epochs", "mne.preprocessing.equalize_bads", "mne.preprocessing.find_bad_channels_maxwell", "mne.preprocessing.find_ecg_events", "mne.preprocessing.find_eog_events", "mne.preprocessing.fix_stim_artifact", "mne.preprocessing.ica_find_ecg_events", "mne.preprocessing.ica_find_eog_events", "mne.preprocessing.ieeg.project_sensors_onto_brain", "mne.preprocessing.infomax", "mne.preprocessing.interpolate_bridged_electrodes", "mne.preprocessing.maxwell_filter", "mne.preprocessing.maxwell_filter_prepare_emptyroom", "mne.preprocessing.nirs.beer_lambert_law", "mne.preprocessing.nirs.optical_density", "mne.preprocessing.nirs.scalp_coupling_index", "mne.preprocessing.nirs.short_channels", "mne.preprocessing.nirs.source_detector_distances", "mne.preprocessing.nirs.temporal_derivative_distribution_repair", "mne.preprocessing.oversampled_temporal_projection", "mne.preprocessing.peak_finder", "mne.preprocessing.read_eog_regression", "mne.preprocessing.read_fine_calibration", "mne.preprocessing.read_ica", "mne.preprocessing.read_ica_eeglab", "mne.preprocessing.realign_raw", "mne.preprocessing.regress_artifact", "mne.preprocessing.write_fine_calibration", "mne.random_parcellation", "mne.read_annotations", "mne.read_bem_solution", "mne.read_bem_surfaces", "mne.read_cov", "mne.read_dipole", "mne.read_epochs", "mne.read_epochs_eeglab", "mne.read_epochs_fieldtrip", "mne.read_epochs_kit", "mne.read_events", "mne.read_evoked_besa", "mne.read_evoked_fieldtrip", "mne.read_evokeds", "mne.read_evokeds_mff", "mne.read_forward_solution", "mne.read_freesurfer_lut", "mne.read_label", "mne.read_labels_from_annot", "mne.read_lta", "mne.read_morph_map", "mne.read_proj", "mne.read_reject_parameters", "mne.read_source_estimate", "mne.read_source_morph", "mne.read_source_spaces", "mne.read_surface", "mne.read_talxfm", "mne.read_trans", "mne.read_tri", "mne.read_vectorview_selection", "mne.rename_channels", "mne.scale_bem", "mne.scale_labels", "mne.scale_mri", "mne.scale_source_space", "mne.sensitivity_map", "mne.set_bipolar_reference", "mne.set_cache_dir", "mne.set_config", "mne.set_eeg_reference", "mne.set_log_file", "mne.set_log_level", "mne.setup_source_space", "mne.setup_volume_source_space", "mne.simulation.SourceSimulator", "mne.simulation.add_chpi", "mne.simulation.add_ecg", "mne.simulation.add_eog", "mne.simulation.add_noise", "mne.simulation.metrics.cosine_score", "mne.simulation.metrics.f1_score", "mne.simulation.metrics.peak_position_error", "mne.simulation.metrics.precision_score", "mne.simulation.metrics.recall_score", "mne.simulation.metrics.region_localization_error", "mne.simulation.metrics.roc_auc_score", "mne.simulation.metrics.spatial_deviation_error", "mne.simulation.select_source_in_label", "mne.simulation.simulate_evoked", "mne.simulation.simulate_raw", "mne.simulation.simulate_sparse_stc", "mne.simulation.simulate_stc", "mne.source_space.compute_distance_to_sensors", "mne.source_space.get_decimated_surfaces", "mne.spatial_dist_adjacency", "mne.spatial_inter_hemi_adjacency", "mne.spatial_src_adjacency", "mne.spatial_tris_adjacency", "mne.spatio_temporal_dist_adjacency", "mne.spatio_temporal_src_adjacency", "mne.spatio_temporal_tris_adjacency", "mne.split_label", "mne.stats.bonferroni_correction", "mne.stats.bootstrap_confidence_interval", "mne.stats.combine_adjacency", "mne.stats.f_mway_rm", "mne.stats.f_oneway", "mne.stats.f_threshold_mway_rm", "mne.stats.fdr_correction", "mne.stats.linear_regression", "mne.stats.linear_regression_raw", "mne.stats.permutation_cluster_1samp_test", "mne.stats.permutation_cluster_test", "mne.stats.permutation_t_test", "mne.stats.spatio_temporal_cluster_1samp_test", "mne.stats.spatio_temporal_cluster_test", "mne.stats.summarize_clusters_stc", "mne.stats.ttest_1samp_no_p", "mne.stats.ttest_ind_no_p", "mne.stc_near_sensors", "mne.stc_to_label", "mne.surface.complete_surface_info", "mne.surface.read_curvature", "mne.sys_info", "mne.time_frequency.AverageTFR", "mne.time_frequency.CrossSpectralDensity", "mne.time_frequency.EpochsSpectrum", "mne.time_frequency.EpochsTFR", "mne.time_frequency.Spectrum", "mne.time_frequency.csd_array_fourier", "mne.time_frequency.csd_array_morlet", "mne.time_frequency.csd_array_multitaper", "mne.time_frequency.csd_fourier", "mne.time_frequency.csd_morlet", "mne.time_frequency.csd_multitaper", "mne.time_frequency.csd_tfr", "mne.time_frequency.dpss_windows", "mne.time_frequency.fit_iir_model_raw", "mne.time_frequency.fwhm", "mne.time_frequency.istft", "mne.time_frequency.morlet", "mne.time_frequency.pick_channels_csd", "mne.time_frequency.psd_array_multitaper", "mne.time_frequency.psd_array_welch", "mne.time_frequency.read_csd", "mne.time_frequency.read_spectrum", "mne.time_frequency.read_tfrs", "mne.time_frequency.stft", "mne.time_frequency.stftfreq", "mne.time_frequency.tfr.cwt", "mne.time_frequency.tfr.morlet", "mne.time_frequency.tfr_array_morlet", "mne.time_frequency.tfr_array_multitaper", "mne.time_frequency.tfr_array_stockwell", "mne.time_frequency.tfr_morlet", "mne.time_frequency.tfr_multitaper", "mne.time_frequency.tfr_stockwell", "mne.time_frequency.write_tfrs", "mne.transform_surface_to", "mne.transforms.Transform", "mne.transforms.apply_volume_registration", "mne.transforms.apply_volume_registration_points", "mne.transforms.compute_volume_registration", "mne.transforms.quat_to_rot", "mne.transforms.read_ras_mni_t", "mne.transforms.rot_to_quat", "mne.use_coil_def", "mne.use_log_level", "mne.utils.deprecated", "mne.utils.warn", "mne.verbose", "mne.vertex_to_mni", "mne.viz.Brain", "mne.viz.ClickableImage", "mne.viz.Figure3D", "mne.viz.add_background_image", "mne.viz.centers_to_edges", "mne.viz.circular_layout", "mne.viz.close_3d_figure", "mne.viz.close_all_3d_figures", "mne.viz.compare_fiff", "mne.viz.create_3d_figure", "mne.viz.get_3d_backend", "mne.viz.get_brain_class", "mne.viz.get_browser_backend", "mne.viz.iter_topography", "mne.viz.link_brains", "mne.viz.mne_analyze_colormap", "mne.viz.plot_alignment", "mne.viz.plot_arrowmap", "mne.viz.plot_bem", "mne.viz.plot_brain_colorbar", "mne.viz.plot_bridged_electrodes", "mne.viz.plot_ch_adjacency", "mne.viz.plot_channel_labels_circle", "mne.viz.plot_chpi_snr", "mne.viz.plot_compare_evokeds", "mne.viz.plot_cov", "mne.viz.plot_csd", "mne.viz.plot_dipole_amplitudes", "mne.viz.plot_dipole_locations", "mne.viz.plot_drop_log", "mne.viz.plot_epochs", "mne.viz.plot_epochs_image", "mne.viz.plot_epochs_psd_topomap", "mne.viz.plot_events", "mne.viz.plot_evoked", "mne.viz.plot_evoked_field", "mne.viz.plot_evoked_image", "mne.viz.plot_evoked_joint", "mne.viz.plot_evoked_topo", "mne.viz.plot_evoked_topomap", "mne.viz.plot_evoked_white", "mne.viz.plot_filter", "mne.viz.plot_head_positions", "mne.viz.plot_ica_components", "mne.viz.plot_ica_overlay", "mne.viz.plot_ica_properties", "mne.viz.plot_ica_scores", "mne.viz.plot_ica_sources", "mne.viz.plot_ideal_filter", "mne.viz.plot_layout", "mne.viz.plot_montage", "mne.viz.plot_projs_joint", "mne.viz.plot_projs_topomap", "mne.viz.plot_raw", "mne.viz.plot_raw_psd", "mne.viz.plot_regression_weights", "mne.viz.plot_sensors", "mne.viz.plot_snr_estimate", "mne.viz.plot_source_estimates", "mne.viz.plot_sparse_source_estimates", "mne.viz.plot_tfr_topomap", "mne.viz.plot_topo_image_epochs", "mne.viz.plot_topomap", "mne.viz.plot_vector_source_estimates", "mne.viz.plot_volume_source_estimates", "mne.viz.set_3d_backend", "mne.viz.set_3d_options", "mne.viz.set_3d_title", "mne.viz.set_3d_view", "mne.viz.set_browser_backend", "mne.viz.snapshot_brain_montage", "mne.viz.use_3d_backend", "mne.viz.use_browser_backend", "mne.warp_montage_volume", "mne.what", "mne.write_bem_solution", "mne.write_bem_surfaces", "mne.write_cov", "mne.write_events", "mne.write_evokeds", "mne.write_forward_solution", "mne.write_head_bem", "mne.write_label", "mne.write_labels_to_annot", "mne.write_proj", "mne.write_source_spaces", "mne.write_surface", "mne.write_trans", "Glossary", "MNE", "Advanced setup", "Testing your installation", "Contributing guide", "Installing FreeSurfer", "Installing MNE-Python", "MNE-Python installers", "Install via <code class=\"code docutils literal notranslate\"><span class=\"pre\">pip</span></code> or <code class=\"code docutils literal notranslate\"><span class=\"pre\">conda</span></code>", "Installing Python", "Installing MNE-C", "Overview of the MNE tools suite", "Updating MNE-Python", "Inverse Solutions", "Logging and Configuration", "Martinos Center setup", "MNE with CPP", "Most-used classes", "MRI Processing", "How to cite MNE-Python", "The typical M/EEG workflow", "Datasets Overview", "Design philosophy", "MNE-Python Development", "Frequently Asked Questions (FAQ)", "Getting help", "Project Governance", "Algorithms and other implementation details", "Documentation overview", "Getting started with Python", "MNE-MATLAB documentation", "Migrating from other analysis software", "Current steering council and institutional partners", "Roadmap", "Preprocessing", "Python API Reference", "Reading raw data", "Realtime", "MNE-Report", "Sensor Space Data", "Simulation", "Source Space Data", "Statistics", "Time-Frequency", "Visualization", "What\u2019s new"], "terms": {"3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877], "8": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877], "demonstr": [0, 5, 19, 27, 33, 41, 43, 44, 45, 63, 69, 70, 72, 79, 83, 98, 102, 113, 116, 145, 146, 151, 152, 161, 168, 170, 171, 172, 190, 194, 198, 200, 201, 203, 204, 207, 209, 214, 221, 222, 225, 233, 238, 573, 845, 854, 857, 860, 861, 878], "sensor": [0, 4, 5, 11, 15, 16, 17, 20, 23, 25, 27, 28, 32, 34, 41, 42, 45, 49, 67, 69, 70, 76, 77, 79, 84, 87, 89, 91, 93, 94, 97, 101, 102, 108, 118, 119, 121, 123, 126, 129, 131, 134, 135, 144, 146, 150, 151, 156, 157, 158, 159, 162, 166, 168, 169, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 185, 186, 188, 191, 198, 199, 201, 203, 204, 205, 207, 208, 209, 214, 222, 225, 226, 227, 232, 238, 241, 242, 243, 256, 258, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 283, 284, 296, 297, 298, 304, 305, 309, 310, 311, 312, 317, 318, 319, 320, 322, 323, 325, 326, 327, 328, 337, 339, 341, 343, 348, 353, 354, 355, 356, 357, 363, 368, 369, 370, 372, 409, 410, 411, 412, 413, 416, 417, 418, 419, 424, 425, 427, 428, 429, 450, 452, 453, 460, 469, 476, 477, 478, 479, 482, 484, 487, 488, 490, 501, 513, 519, 520, 521, 525, 527, 530, 531, 535, 548, 553, 554, 556, 557, 558, 562, 568, 571, 582, 585, 590, 591, 593, 596, 608, 611, 612, 617, 630, 632, 633, 638, 649, 650, 661, 662, 665, 675, 677, 681, 682, 684, 685, 686, 687, 688, 692, 697, 698, 699, 700, 701, 727, 728, 729, 734, 745, 758, 761, 762, 765, 766, 768, 769, 770, 771, 775, 777, 779, 780, 781, 783, 784, 785, 787, 788, 794, 795, 797, 798, 800, 801, 805, 806, 807, 812, 813, 815, 818, 833, 838, 844, 853, 854, 855, 857, 863, 866, 867, 868, 878], "sourc": [0, 1, 2, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 28, 29, 35, 37, 40, 46, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 95, 96, 98, 99, 100, 102, 104, 105, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 157, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 175, 179, 183, 184, 185, 187, 188, 189, 190, 191, 194, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 214, 215, 216, 217, 220, 222, 225, 226, 227, 228, 229, 230, 237, 238, 239, 240, 243, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 841, 843, 844, 846, 849, 854, 857, 858, 859, 863, 868, 878], "space": [0, 5, 10, 17, 20, 22, 23, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 59, 60, 67, 73, 82, 87, 89, 91, 92, 93, 94, 97, 101, 104, 105, 107, 108, 112, 114, 118, 119, 123, 126, 130, 133, 134, 135, 136, 140, 147, 148, 151, 155, 156, 160, 162, 166, 168, 170, 172, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 191, 194, 198, 204, 207, 212, 213, 214, 217, 220, 222, 225, 226, 230, 232, 234, 237, 238, 239, 243, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 283, 284, 296, 297, 311, 315, 324, 329, 341, 343, 346, 347, 350, 354, 355, 356, 358, 359, 362, 363, 366, 368, 372, 409, 412, 413, 416, 417, 419, 423, 426, 427, 430, 438, 443, 450, 454, 463, 465, 467, 471, 472, 473, 474, 475, 477, 478, 480, 482, 485, 492, 501, 511, 512, 517, 519, 520, 523, 524, 525, 526, 527, 528, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 544, 553, 554, 556, 557, 567, 568, 569, 570, 576, 585, 606, 608, 612, 615, 617, 619, 620, 627, 629, 632, 634, 636, 637, 638, 645, 646, 647, 654, 657, 659, 660, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 673, 681, 682, 684, 685, 687, 688, 689, 692, 693, 697, 699, 701, 709, 731, 745, 761, 763, 769, 775, 776, 777, 778, 781, 782, 784, 787, 788, 792, 797, 798, 800, 803, 804, 805, 808, 809, 813, 818, 830, 833, 843, 854, 857, 866, 868, 878], "function": [0, 4, 8, 16, 19, 27, 31, 36, 44, 45, 54, 55, 56, 57, 59, 75, 91, 93, 94, 100, 102, 111, 112, 113, 114, 115, 132, 134, 135, 136, 140, 141, 144, 146, 149, 150, 151, 152, 155, 156, 157, 158, 160, 161, 165, 166, 167, 168, 169, 170, 171, 172, 178, 180, 182, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 220, 221, 222, 227, 229, 230, 238, 239, 240, 243, 245, 248, 249, 255, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 287, 288, 290, 296, 297, 298, 302, 304, 306, 311, 316, 317, 319, 320, 328, 329, 331, 339, 340, 341, 346, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 370, 372, 374, 385, 388, 409, 412, 413, 414, 415, 416, 418, 419, 426, 428, 430, 433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 448, 449, 450, 452, 466, 467, 470, 471, 475, 476, 477, 478, 483, 485, 486, 488, 489, 492, 494, 496, 497, 499, 501, 505, 507, 508, 510, 512, 520, 523, 524, 527, 530, 531, 532, 533, 534, 535, 536, 538, 539, 546, 552, 554, 556, 557, 559, 560, 561, 566, 567, 568, 569, 570, 571, 573, 574, 576, 579, 583, 585, 586, 587, 588, 589, 591, 592, 599, 602, 603, 606, 609, 610, 611, 612, 613, 614, 615, 617, 620, 625, 633, 636, 639, 642, 646, 647, 649, 650, 651, 660, 661, 663, 664, 681, 683, 684, 685, 686, 687, 688, 692, 693, 696, 697, 698, 699, 700, 701, 704, 707, 709, 715, 716, 725, 727, 728, 735, 739, 740, 741, 742, 743, 745, 755, 758, 760, 761, 762, 769, 771, 775, 777, 778, 783, 784, 785, 788, 791, 796, 797, 799, 800, 801, 803, 805, 807, 808, 809, 810, 814, 833, 835, 844, 845, 846, 852, 853, 854, 855, 860, 861, 864, 866, 867, 868, 870, 872, 875, 876, 878], "ha": [0, 1, 5, 9, 10, 27, 32, 42, 45, 49, 54, 69, 70, 73, 77, 82, 83, 92, 93, 102, 108, 113, 125, 126, 134, 136, 140, 142, 144, 145, 146, 149, 150, 151, 155, 156, 157, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 180, 181, 182, 183, 185, 188, 189, 190, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 214, 215, 217, 220, 222, 225, 226, 230, 238, 240, 245, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 283, 284, 287, 288, 289, 290, 296, 297, 301, 302, 307, 353, 357, 358, 359, 368, 369, 370, 376, 377, 378, 381, 382, 384, 388, 389, 390, 392, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 409, 415, 416, 430, 445, 447, 448, 450, 452, 453, 456, 472, 474, 475, 477, 478, 479, 485, 486, 497, 505, 521, 523, 524, 525, 527, 535, 556, 557, 558, 560, 571, 582, 585, 592, 615, 616, 634, 637, 678, 679, 684, 685, 687, 688, 697, 698, 699, 700, 701, 704, 713, 715, 723, 724, 725, 727, 728, 732, 755, 769, 777, 779, 781, 782, 783, 784, 785, 788, 790, 792, 797, 798, 799, 800, 801, 803, 805, 807, 833, 835, 837, 841, 843, 844, 845, 853, 854, 855, 856, 857, 858, 859, 860, 863, 866, 870, 878], "move": [0, 27, 60, 74, 79, 80, 115, 134, 140, 145, 156, 161, 177, 201, 204, 205, 208, 233, 240, 245, 255, 260, 263, 264, 265, 266, 272, 278, 279, 364, 409, 416, 444, 477, 478, 556, 557, 561, 697, 699, 701, 733, 734, 735, 776, 777, 781, 784, 788, 797, 800, 805, 809, 857, 859, 860, 870, 878], "mne_connect": [0, 27, 47, 146, 245, 767], "packag": [0, 27, 146, 160, 166, 171, 189, 195, 199, 200, 201, 204, 222, 225, 245, 255, 257, 263, 264, 265, 266, 269, 270, 271, 273, 274, 277, 278, 279, 281, 353, 354, 356, 358, 371, 372, 412, 419, 422, 425, 426, 452, 465, 467, 477, 478, 515, 516, 519, 520, 530, 531, 540, 541, 562, 569, 570, 645, 648, 649, 650, 662, 684, 685, 686, 687, 688, 697, 699, 700, 701, 702, 703, 704, 705, 706, 707, 715, 716, 724, 725, 726, 727, 728, 777, 780, 799, 833, 834, 835, 837, 838, 840, 841, 842, 843, 844, 848, 852, 854, 855, 866, 878], "can": [0, 4, 5, 7, 12, 13, 15, 16, 19, 21, 22, 24, 26, 27, 31, 32, 40, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 69, 70, 73, 74, 77, 78, 79, 81, 82, 83, 87, 93, 94, 98, 100, 102, 108, 111, 112, 113, 114, 115, 118, 119, 120, 125, 126, 128, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 180, 181, 182, 183, 184, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 220, 222, 225, 226, 227, 228, 230, 233, 234, 235, 238, 239, 240, 243, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 286, 289, 296, 297, 302, 303, 304, 305, 308, 309, 311, 313, 315, 316, 319, 320, 321, 322, 326, 327, 328, 329, 331, 334, 338, 339, 340, 341, 347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 364, 365, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 381, 382, 384, 387, 388, 389, 390, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 415, 416, 417, 419, 420, 421, 422, 424, 425, 426, 428, 430, 433, 434, 435, 436, 438, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 456, 459, 460, 461, 462, 465, 467, 468, 469, 471, 472, 474, 475, 477, 478, 485, 489, 492, 493, 496, 497, 499, 501, 505, 507, 508, 510, 512, 515, 516, 517, 519, 520, 522, 524, 530, 531, 533, 534, 535, 537, 541, 543, 544, 545, 546, 554, 555, 556, 557, 559, 560, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 584, 585, 586, 589, 591, 592, 593, 599, 600, 603, 605, 608, 609, 610, 611, 614, 615, 616, 618, 620, 622, 628, 632, 633, 634, 636, 637, 639, 642, 644, 645, 646, 653, 660, 661, 662, 663, 665, 667, 669, 671, 672, 676, 677, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 696, 697, 698, 699, 700, 701, 705, 706, 707, 708, 710, 713, 720, 723, 725, 727, 728, 731, 733, 734, 735, 740, 742, 743, 745, 746, 750, 753, 758, 761, 762, 763, 764, 765, 766, 767, 768, 769, 773, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 795, 796, 797, 798, 799, 800, 801, 803, 805, 807, 808, 809, 811, 818, 820, 821, 824, 826, 831, 833, 835, 836, 837, 841, 842, 843, 844, 845, 849, 852, 853, 854, 855, 859, 860, 861, 863, 866, 867, 868, 878], "found": [0, 1, 2, 4, 5, 8, 9, 11, 12, 16, 18, 21, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 67, 68, 69, 70, 71, 72, 73, 77, 79, 80, 81, 82, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 111, 112, 113, 115, 116, 118, 119, 120, 123, 126, 127, 128, 131, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 158, 159, 161, 162, 166, 168, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 195, 198, 199, 200, 201, 202, 203, 204, 206, 209, 210, 211, 215, 217, 220, 221, 222, 225, 226, 227, 228, 229, 230, 233, 234, 235, 239, 255, 256, 258, 260, 263, 264, 265, 266, 268, 272, 287, 301, 317, 318, 328, 347, 348, 364, 376, 377, 378, 379, 381, 382, 389, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 428, 436, 450, 451, 457, 458, 459, 468, 477, 478, 484, 503, 523, 557, 560, 569, 573, 574, 577, 578, 580, 581, 594, 605, 628, 634, 636, 641, 642, 646, 684, 732, 745, 755, 757, 761, 775, 792, 798, 826, 833, 836, 837, 842, 854, 858, 860, 866, 868, 878], "go": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 220, 221, 222, 225, 226, 227, 228, 229, 230, 233, 234, 235, 238, 239, 240, 276, 356, 459, 477, 478, 557, 646, 837, 848, 857, 858, 859, 860], "end": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 220, 221, 222, 225, 226, 227, 228, 229, 230, 233, 234, 235, 238, 239, 240, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 281, 286, 287, 311, 316, 323, 339, 340, 342, 353, 356, 358, 409, 415, 416, 421, 427, 432, 433, 434, 449, 450, 477, 478, 490, 497, 498, 503, 518, 530, 538, 540, 541, 542, 556, 557, 560, 573, 574, 579, 595, 597, 599, 606, 608, 615, 616, 617, 623, 627, 631, 633, 653, 654, 655, 656, 657, 659, 662, 674, 697, 698, 700, 702, 703, 704, 705, 706, 707, 708, 710, 719, 730, 732, 745, 775, 784, 789, 792, 798, 805, 819, 820, 821, 822, 824, 825, 829, 830, 831, 832, 833, 835, 837, 857, 859, 860, 863, 878], "download": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 220, 221, 222, 225, 226, 227, 228, 229, 230, 233, 234, 235, 238, 239, 240, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 389, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 835, 837, 838, 839, 840, 844, 845, 854, 878], "full": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 220, 221, 222, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 238, 239, 240, 263, 264, 265, 266, 268, 270, 271, 274, 276, 277, 279, 296, 297, 299, 317, 318, 353, 357, 358, 359, 368, 369, 370, 409, 414, 416, 417, 422, 439, 442, 452, 453, 472, 474, 475, 477, 478, 523, 524, 535, 538, 554, 557, 612, 615, 677, 683, 684, 686, 688, 700, 711, 713, 715, 722, 723, 725, 727, 728, 735, 745, 761, 763, 766, 769, 775, 777, 785, 792, 798, 803, 808, 810, 811, 814, 835, 837, 843, 849, 853, 854, 859, 878], "exampl": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 149, 150, 151, 152, 155, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 194, 198, 199, 200, 201, 202, 203, 207, 208, 209, 210, 211, 214, 215, 216, 217, 220, 221, 222, 225, 226, 227, 228, 229, 230, 233, 234, 235, 238, 239, 240, 243, 258, 279, 334, 361, 367, 368, 369, 379, 384, 402, 408, 431, 436, 453, 476, 545, 567, 575, 594, 634, 643, 723, 725, 743, 775, 777, 784, 788, 790, 798, 800, 805, 809, 833, 835, 837, 840, 844, 853, 855, 857, 858, 860, 861, 878], "code": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 220, 221, 222, 225, 226, 227, 228, 229, 230, 233, 234, 235, 239, 240, 243, 254, 258, 263, 264, 265, 266, 273, 282, 348, 436, 438, 448, 450, 453, 476, 477, 478, 485, 494, 501, 525, 585, 594, 610, 683, 699, 701, 726, 729, 745, 777, 779, 799, 833, 841, 853, 856, 857, 859, 860, 861, 864, 866, 873, 876, 878], "here": [1, 4, 5, 7, 9, 10, 11, 12, 15, 18, 19, 21, 28, 31, 33, 34, 38, 41, 42, 43, 45, 65, 69, 70, 73, 74, 78, 81, 82, 83, 89, 93, 94, 99, 100, 103, 108, 110, 111, 113, 115, 116, 119, 120, 126, 132, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 156, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 177, 179, 180, 181, 182, 183, 184, 185, 188, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 220, 222, 225, 226, 227, 229, 230, 233, 234, 235, 239, 240, 269, 273, 274, 276, 278, 279, 333, 359, 384, 390, 415, 426, 433, 449, 476, 510, 520, 522, 532, 557, 573, 583, 586, 600, 602, 615, 646, 649, 650, 651, 660, 661, 663, 684, 685, 686, 687, 688, 692, 778, 809, 835, 837, 844, 845, 854, 857, 860, 861, 862, 864, 878], "we": [1, 4, 5, 7, 9, 10, 11, 13, 16, 18, 19, 21, 22, 26, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 54, 58, 59, 65, 67, 68, 69, 70, 72, 73, 74, 78, 82, 83, 86, 87, 89, 93, 94, 100, 102, 108, 110, 111, 112, 113, 114, 115, 116, 119, 120, 125, 126, 128, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 220, 221, 222, 225, 226, 227, 228, 229, 230, 233, 234, 235, 238, 239, 240, 243, 260, 263, 264, 265, 266, 270, 273, 274, 276, 278, 281, 306, 329, 417, 419, 439, 440, 441, 442, 449, 459, 477, 478, 479, 507, 532, 557, 573, 584, 592, 657, 700, 745, 746, 761, 770, 785, 803, 835, 841, 842, 845, 848, 852, 853, 854, 855, 857, 859, 860, 864, 866, 878], "comput": [1, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 17, 19, 22, 23, 24, 26, 27, 31, 36, 38, 43, 44, 48, 50, 52, 57, 60, 67, 70, 71, 75, 77, 78, 80, 86, 87, 91, 92, 94, 95, 96, 97, 99, 104, 112, 113, 114, 118, 119, 120, 122, 123, 130, 133, 134, 135, 141, 142, 145, 146, 149, 150, 151, 152, 155, 156, 157, 160, 163, 165, 166, 167, 168, 172, 175, 176, 178, 181, 182, 183, 184, 185, 186, 189, 191, 194, 195, 199, 200, 202, 206, 207, 209, 211, 214, 217, 220, 221, 222, 225, 226, 229, 238, 239, 240, 243, 256, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 281, 283, 284, 287, 288, 289, 290, 291, 293, 296, 297, 298, 299, 301, 303, 306, 308, 314, 315, 317, 319, 324, 328, 340, 341, 342, 343, 352, 353, 354, 355, 356, 357, 358, 359, 362, 363, 364, 368, 369, 370, 379, 409, 410, 413, 414, 415, 416, 417, 421, 425, 428, 438, 443, 448, 450, 452, 453, 454, 459, 465, 467, 468, 472, 473, 474, 475, 477, 478, 482, 484, 489, 490, 492, 511, 514, 515, 516, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 554, 555, 557, 558, 561, 564, 565, 567, 568, 569, 570, 573, 576, 582, 583, 602, 604, 605, 606, 607, 612, 615, 616, 617, 619, 620, 627, 629, 632, 634, 636, 638, 640, 642, 645, 646, 647, 652, 653, 654, 655, 656, 657, 658, 659, 662, 665, 667, 668, 669, 670, 671, 672, 673, 678, 679, 680, 683, 684, 685, 687, 688, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 715, 716, 721, 722, 723, 724, 725, 726, 727, 728, 729, 733, 734, 739, 745, 761, 762, 763, 769, 770, 772, 773, 775, 776, 777, 784, 785, 792, 797, 798, 804, 813, 822, 825, 826, 833, 837, 838, 840, 843, 844, 849, 854, 857, 863, 868, 873, 875, 878], "evok": [1, 2, 4, 5, 7, 8, 15, 16, 17, 18, 20, 27, 28, 31, 35, 36, 38, 39, 40, 42, 44, 45, 46, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 67, 70, 72, 76, 77, 79, 83, 84, 86, 87, 88, 90, 92, 94, 95, 96, 98, 99, 100, 106, 112, 115, 116, 121, 123, 129, 135, 136, 141, 143, 144, 154, 162, 167, 169, 170, 176, 178, 179, 180, 181, 182, 183, 184, 185, 188, 191, 195, 198, 199, 200, 201, 202, 204, 205, 206, 209, 221, 222, 226, 227, 228, 229, 230, 233, 235, 238, 240, 243, 255, 258, 260, 261, 262, 263, 264, 266, 267, 268, 270, 271, 273, 274, 276, 277, 278, 279, 280, 283, 284, 288, 289, 292, 293, 296, 297, 299, 313, 316, 352, 353, 355, 357, 372, 391, 414, 423, 430, 434, 435, 440, 441, 443, 450, 452, 466, 468, 472, 474, 475, 477, 478, 482, 490, 516, 517, 520, 523, 524, 525, 526, 527, 528, 532, 535, 538, 548, 553, 554, 555, 556, 557, 558, 565, 566, 569, 570, 572, 575, 579, 584, 585, 600, 606, 608, 612, 613, 614, 615, 616, 617, 619, 620, 623, 639, 642, 645, 646, 651, 661, 663, 683, 692, 697, 699, 700, 701, 706, 710, 715, 725, 727, 728, 729, 745, 762, 769, 770, 772, 773, 775, 776, 779, 780, 781, 782, 783, 784, 785, 789, 792, 796, 798, 799, 802, 804, 807, 812, 824, 833, 837, 854, 855, 857, 860, 863, 864, 868, 878], "from": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 145, 146, 147, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 204, 205, 207, 208, 209, 211, 222, 223, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 238, 239, 240, 243, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 284, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 306, 308, 311, 312, 314, 317, 320, 323, 324, 325, 327, 329, 330, 331, 332, 333, 336, 337, 338, 341, 344, 345, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 368, 369, 370, 371, 372, 379, 384, 392, 393, 401, 402, 409, 413, 415, 416, 417, 418, 424, 427, 431, 432, 433, 435, 438, 439, 440, 441, 442, 443, 448, 450, 451, 452, 453, 454, 457, 459, 461, 462, 466, 467, 468, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 530, 531, 532, 533, 534, 535, 537, 538, 539, 543, 544, 548, 549, 550, 554, 555, 556, 557, 558, 559, 560, 561, 564, 566, 567, 568, 571, 572, 573, 574, 576, 577, 579, 580, 581, 582, 583, 584, 585, 586, 594, 595, 596, 597, 600, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 616, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 637, 639, 642, 646, 647, 648, 649, 650, 651, 657, 660, 661, 662, 663, 664, 666, 667, 669, 670, 671, 672, 673, 674, 676, 677, 679, 683, 684, 685, 686, 687, 688, 689, 692, 693, 695, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 723, 725, 726, 728, 729, 732, 733, 734, 735, 737, 740, 741, 744, 745, 753, 758, 761, 762, 769, 773, 774, 775, 777, 778, 779, 781, 782, 783, 784, 785, 786, 788, 789, 790, 792, 793, 795, 796, 797, 798, 799, 800, 801, 802, 805, 807, 813, 815, 818, 824, 825, 828, 831, 833, 835, 837, 840, 841, 842, 843, 844, 845, 849, 853, 854, 855, 857, 859, 860, 862, 863, 866, 868, 876, 878], "tutori": [1, 27, 32, 62, 69, 72, 83, 108, 123, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 180, 181, 182, 186, 187, 190, 191, 192, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 227, 230, 231, 233, 235, 236, 238, 240, 241, 243, 260, 261, 263, 264, 265, 266, 268, 296, 301, 353, 358, 409, 429, 444, 447, 450, 452, 477, 478, 488, 490, 521, 545, 585, 724, 725, 727, 728, 761, 773, 785, 813, 833, 837, 854, 857, 860, 861, 862, 878], "For": [1, 4, 15, 19, 43, 44, 47, 50, 55, 63, 68, 69, 79, 94, 100, 102, 108, 112, 114, 119, 120, 122, 126, 133, 134, 135, 136, 140, 143, 144, 145, 146, 149, 150, 151, 155, 156, 158, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 203, 204, 205, 206, 207, 209, 211, 214, 215, 217, 220, 225, 227, 229, 230, 233, 235, 238, 239, 240, 255, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 282, 296, 297, 313, 324, 334, 353, 357, 358, 359, 366, 368, 369, 370, 379, 384, 401, 402, 408, 409, 411, 412, 415, 416, 417, 419, 421, 422, 426, 430, 431, 432, 433, 435, 438, 439, 440, 442, 444, 445, 447, 448, 450, 451, 452, 453, 466, 467, 468, 471, 472, 474, 475, 476, 477, 478, 483, 485, 492, 497, 500, 501, 522, 530, 535, 539, 544, 556, 557, 558, 559, 568, 572, 575, 576, 585, 589, 596, 603, 612, 628, 632, 634, 639, 642, 644, 646, 677, 682, 683, 684, 685, 687, 688, 692, 697, 698, 699, 700, 701, 715, 717, 724, 725, 727, 728, 735, 745, 760, 761, 763, 769, 770, 775, 776, 777, 779, 781, 784, 785, 786, 788, 789, 790, 792, 798, 800, 801, 805, 807, 809, 833, 835, 837, 839, 843, 848, 849, 853, 854, 855, 856, 857, 860, 864, 878], "comparison": [1, 27, 31, 38, 82, 95, 96, 100, 111, 121, 129, 134, 151, 155, 157, 167, 176, 183, 184, 191, 201, 206, 210, 230, 233, 234, 235, 239, 240, 243, 274, 275, 359, 557, 560, 586, 625, 681, 685, 686, 845, 853, 860, 875, 878], "see": [1, 4, 7, 8, 10, 19, 21, 22, 26, 27, 32, 34, 35, 39, 43, 44, 62, 63, 69, 70, 72, 74, 79, 81, 82, 83, 100, 112, 114, 118, 119, 120, 126, 128, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 146, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 180, 181, 182, 183, 184, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 214, 215, 216, 217, 220, 221, 222, 225, 227, 228, 230, 233, 238, 240, 248, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 302, 303, 304, 305, 306, 307, 308, 311, 313, 315, 316, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 414, 415, 416, 417, 419, 420, 422, 425, 426, 428, 430, 434, 436, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 459, 460, 464, 465, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 519, 520, 521, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 550, 551, 553, 556, 557, 558, 559, 560, 562, 563, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 580, 581, 582, 583, 585, 586, 588, 589, 592, 593, 594, 597, 598, 599, 600, 602, 604, 605, 606, 607, 608, 609, 611, 612, 613, 615, 616, 617, 619, 620, 621, 622, 623, 627, 628, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 642, 643, 645, 646, 648, 649, 650, 651, 660, 661, 662, 663, 665, 667, 668, 669, 670, 671, 672, 673, 683, 684, 685, 686, 687, 688, 690, 691, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 713, 715, 716, 719, 720, 723, 724, 725, 726, 727, 728, 729, 730, 732, 733, 734, 735, 740, 744, 745, 750, 753, 760, 761, 762, 769, 770, 773, 775, 776, 777, 778, 779, 780, 781, 783, 784, 785, 787, 788, 789, 790, 792, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 807, 808, 809, 810, 814, 816, 817, 818, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 835, 836, 837, 841, 842, 843, 844, 853, 854, 855, 857, 859, 860, 861, 864, 865, 866, 868, 875, 878], "1": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 190, 191, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 220, 221, 222, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 289, 296, 297, 298, 303, 306, 307, 308, 311, 313, 315, 317, 320, 321, 322, 334, 337, 340, 341, 342, 346, 347, 352, 353, 354, 356, 358, 359, 364, 367, 370, 379, 385, 386, 387, 391, 392, 393, 401, 402, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 436, 438, 439, 440, 441, 442, 444, 445, 447, 448, 449, 450, 452, 453, 454, 459, 465, 467, 468, 471, 472, 474, 475, 476, 477, 478, 485, 487, 492, 493, 494, 500, 501, 502, 509, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 539, 540, 541, 542, 551, 554, 556, 557, 558, 559, 562, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 589, 592, 593, 594, 595, 600, 607, 609, 611, 619, 632, 634, 636, 638, 642, 644, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 664, 666, 671, 672, 673, 676, 677, 678, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 710, 711, 712, 713, 715, 716, 720, 722, 723, 724, 725, 726, 727, 728, 729, 733, 734, 735, 740, 745, 749, 754, 758, 761, 762, 766, 769, 773, 774, 775, 776, 777, 779, 780, 781, 784, 785, 786, 788, 789, 790, 792, 793, 795, 796, 797, 798, 799, 800, 801, 803, 804, 805, 806, 807, 808, 811, 818, 822, 824, 829, 833, 835, 836, 837, 840, 842, 843, 845, 852, 853, 854, 857, 859, 860, 863, 866], "http": [1, 8, 15, 43, 69, 87, 112, 151, 155, 160, 184, 195, 230, 243, 263, 264, 265, 266, 270, 274, 278, 299, 353, 366, 379, 384, 386, 401, 402, 417, 472, 477, 478, 485, 524, 558, 643, 679, 681, 726, 729, 741, 803, 835, 837, 845, 857, 860, 878], "neuroimag": [1, 10, 12, 18, 19, 21, 35, 42, 46, 59, 74, 93, 100, 112, 120, 125, 144, 155, 162, 165, 180, 184, 186, 187, 195, 211, 225, 226, 243, 260, 261, 263, 264, 265, 266, 268, 269, 274, 301, 353, 387, 413, 415, 416, 417, 427, 430, 450, 452, 472, 475, 488, 521, 525, 535, 539, 557, 592, 654, 657, 659, 681, 684, 685, 686, 687, 688, 690, 691, 711, 713, 723, 727, 761, 773, 785, 833, 844, 852, 855, 857, 860, 861, 866], "usc": [1, 184], "edu": [1, 9, 24, 35, 37, 43, 47, 58, 67, 69, 100, 103, 112, 113, 114, 119, 133, 151, 155, 184, 243, 270, 274, 278, 366, 594, 803, 860], "mediannervectf": 1, "author": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 141, 157, 159, 161, 179, 180, 182, 183, 184, 185, 191, 194, 201, 208, 222, 225, 227, 228, 229, 230, 233, 234, 235, 239, 240, 243, 592, 837, 852, 859], "mainak": [1, 46, 77, 85, 86, 191, 243, 475, 852, 865, 878], "ja": [1, 46, 77, 85, 86, 191, 243, 475, 852, 865, 878], "telecom": [1, 77, 86, 191], "paristech": [1, 77, 86, 191, 254, 865], "fr": [1, 7, 9, 10, 11, 13, 18, 19, 28, 29, 30, 38, 39, 40, 42, 46, 47, 48, 50, 52, 53, 59, 64, 77, 86, 91, 95, 96, 99, 106, 107, 109, 110, 116, 120, 124, 130, 131, 137, 159, 185, 191, 195, 227, 228, 229, 233, 234, 235, 239, 243, 878], "licens": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 141, 157, 159, 161, 179, 180, 182, 183, 184, 185, 191, 194, 208, 222, 225, 227, 228, 229, 230, 233, 234, 235, 239, 240, 376, 377, 378, 384, 386, 854, 878], "bsd": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 141, 157, 159, 161, 179, 180, 182, 183, 184, 185, 191, 194, 208, 222, 225, 227, 228, 229, 230, 233, 234, 235, 239, 240, 585, 859], "claus": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 141, 157, 159, 161, 179, 180, 182, 183, 184, 185, 191, 194, 208, 222, 225, 227, 228, 229, 230, 233, 234, 235, 239, 240], "import": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 73, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 220, 221, 222, 225, 226, 227, 228, 229, 230, 233, 234, 235, 238, 239, 240, 243, 263, 264, 265, 266, 268, 311, 327, 329, 336, 372, 379, 401, 402, 449, 477, 478, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 557, 594, 609, 610, 611, 614, 628, 642, 662, 677, 679, 697, 699, 700, 701, 713, 723, 740, 743, 745, 793, 831, 835, 836, 841, 844, 845, 848, 853, 854, 855, 857, 859, 860, 864, 866, 878], "numpi": [1, 4, 5, 8, 9, 10, 11, 14, 15, 16, 19, 22, 28, 31, 32, 33, 34, 35, 38, 40, 42, 45, 47, 50, 58, 59, 60, 63, 67, 69, 70, 71, 73, 78, 81, 83, 89, 91, 92, 93, 94, 96, 99, 106, 110, 111, 112, 113, 114, 116, 118, 119, 124, 126, 132, 134, 135, 136, 137, 140, 141, 143, 146, 149, 150, 151, 156, 157, 158, 159, 160, 166, 168, 170, 171, 172, 176, 177, 178, 181, 182, 183, 184, 185, 190, 191, 194, 195, 198, 199, 201, 202, 203, 204, 205, 206, 209, 210, 211, 214, 215, 220, 221, 222, 225, 226, 227, 228, 229, 230, 233, 234, 235, 238, 239, 240, 257, 260, 263, 264, 265, 266, 270, 271, 272, 273, 274, 277, 278, 279, 409, 415, 416, 417, 447, 448, 449, 474, 475, 476, 477, 478, 510, 557, 571, 583, 594, 602, 649, 650, 651, 660, 661, 663, 677, 682, 684, 685, 686, 687, 688, 697, 698, 699, 700, 701, 702, 704, 705, 707, 713, 723, 724, 725, 726, 727, 728, 729, 745, 777, 779, 784, 797, 833, 836, 855, 859, 862, 878], "np": [1, 4, 5, 8, 9, 10, 11, 14, 15, 16, 19, 22, 28, 31, 32, 33, 34, 35, 38, 40, 42, 43, 45, 47, 50, 58, 59, 60, 67, 69, 70, 71, 73, 78, 81, 83, 89, 91, 92, 93, 94, 96, 99, 106, 110, 111, 112, 113, 114, 116, 118, 119, 124, 126, 132, 134, 135, 136, 137, 141, 143, 146, 150, 151, 156, 157, 158, 159, 160, 166, 168, 170, 172, 176, 177, 178, 181, 182, 183, 184, 185, 190, 191, 194, 195, 198, 199, 201, 202, 203, 205, 206, 209, 210, 211, 214, 215, 220, 221, 222, 225, 226, 227, 228, 229, 230, 233, 234, 235, 238, 239, 240, 257, 263, 264, 265, 266, 269, 270, 271, 274, 276, 277, 278, 279, 281, 313, 353, 367, 443, 444, 448, 465, 477, 478, 494, 508, 557, 571, 576, 583, 594, 663, 677, 689, 697, 699, 700, 701, 713, 715, 723, 724, 725, 727, 728, 745, 753, 759, 764, 769, 776, 799, 803, 805, 808, 809, 837, 860, 863, 876, 878], "mne": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 156, 157, 158, 159, 162, 163, 164, 165, 167, 168, 169, 170, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 198, 200, 202, 203, 206, 207, 208, 210, 211, 215, 216, 217, 218, 221, 222, 223, 224, 226, 227, 228, 229, 230, 233, 234, 235, 238, 239, 240, 243, 248, 249, 250, 251, 253, 254, 833, 835, 836, 838, 842, 846, 847, 848, 853, 854, 855, 858, 859, 861, 864, 865, 866, 867, 868, 869, 872, 873, 875, 876, 877, 878], "bst_raw": [1, 118, 854, 868], "io": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 26, 28, 29, 32, 33, 34, 42, 45, 46, 49, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 122, 126, 127, 128, 131, 132, 134, 135, 137, 140, 141, 142, 144, 145, 146, 149, 151, 152, 156, 157, 158, 159, 160, 162, 166, 167, 168, 169, 170, 171, 172, 177, 180, 182, 183, 184, 185, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 220, 221, 222, 227, 228, 229, 230, 233, 235, 238, 239, 240, 243, 250, 255, 256, 257, 261, 262, 263, 264, 265, 266, 268, 270, 271, 273, 274, 277, 278, 279, 282, 295, 364, 384, 414, 442, 444, 447, 520, 557, 565, 569, 570, 576, 585, 697, 699, 700, 701, 715, 745, 790, 835, 837, 841, 853, 854, 855, 857, 860, 864, 868, 869, 878], "read_raw_ctf": [1, 7, 12, 21, 80, 81, 118, 122, 184, 188, 191, 483, 860, 868, 878], "print": [1, 2, 4, 5, 7, 8, 10, 11, 13, 14, 15, 16, 18, 19, 22, 24, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 68, 69, 70, 71, 72, 73, 75, 77, 79, 82, 83, 85, 86, 87, 91, 92, 93, 94, 95, 96, 99, 100, 102, 103, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 122, 126, 127, 130, 131, 132, 135, 136, 137, 140, 141, 142, 143, 144, 146, 149, 150, 151, 156, 157, 158, 159, 160, 166, 167, 168, 169, 170, 171, 175, 176, 179, 181, 182, 183, 184, 185, 191, 195, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 214, 215, 216, 220, 221, 222, 225, 226, 228, 229, 230, 233, 234, 235, 238, 239, 240, 243, 255, 263, 264, 265, 266, 272, 353, 392, 444, 450, 477, 478, 508, 643, 644, 696, 699, 700, 740, 753, 769, 780, 782, 785, 841, 843, 854, 857, 878], "__doc__": [1, 2, 4, 7, 8, 10, 11, 13, 14, 15, 16, 18, 22, 24, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 68, 69, 70, 71, 72, 73, 75, 77, 79, 83, 85, 86, 87, 91, 92, 93, 94, 95, 96, 99, 102, 103, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 119, 120, 122, 127, 130, 131, 132, 136, 175, 179, 183, 184, 191, 228, 229, 234, 235], "tmin": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 28, 31, 32, 33, 34, 35, 38, 40, 42, 45, 46, 49, 51, 59, 60, 68, 70, 71, 72, 82, 83, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 102, 103, 106, 107, 109, 110, 111, 112, 113, 116, 120, 127, 131, 132, 136, 137, 140, 141, 142, 144, 145, 149, 151, 162, 166, 172, 177, 180, 181, 183, 184, 185, 191, 194, 195, 199, 200, 204, 208, 210, 211, 214, 220, 221, 222, 226, 227, 228, 229, 230, 233, 235, 238, 239, 240, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 340, 342, 353, 354, 355, 358, 415, 421, 433, 435, 476, 477, 478, 512, 530, 547, 569, 570, 573, 574, 579, 664, 683, 689, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 745, 777, 799, 805, 853, 860, 864, 878], "tmax": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 28, 31, 32, 33, 34, 35, 38, 40, 42, 45, 46, 49, 51, 59, 60, 68, 70, 71, 72, 82, 83, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 102, 103, 106, 107, 109, 110, 111, 112, 113, 116, 120, 127, 128, 131, 132, 136, 137, 140, 141, 142, 144, 145, 146, 149, 151, 152, 162, 166, 167, 168, 172, 177, 180, 181, 182, 183, 184, 185, 191, 194, 195, 198, 199, 200, 204, 205, 207, 208, 209, 210, 211, 214, 215, 216, 217, 220, 221, 222, 226, 227, 228, 229, 230, 233, 235, 238, 239, 240, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 340, 342, 353, 354, 355, 358, 415, 421, 433, 435, 476, 477, 478, 530, 547, 569, 570, 573, 574, 579, 683, 686, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 745, 777, 786, 799, 805, 853, 857, 860, 864, 878], "event_id": [1, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 28, 32, 33, 34, 42, 45, 46, 49, 68, 70, 71, 72, 87, 93, 95, 96, 98, 99, 102, 103, 106, 109, 111, 112, 116, 120, 127, 131, 135, 136, 137, 140, 141, 142, 144, 149, 151, 152, 162, 166, 168, 172, 177, 180, 183, 184, 185, 191, 195, 203, 204, 206, 210, 215, 220, 221, 222, 227, 228, 229, 230, 233, 235, 238, 239, 240, 255, 256, 257, 258, 263, 264, 273, 282, 354, 425, 431, 433, 436, 438, 477, 478, 494, 522, 558, 569, 570, 573, 574, 577, 578, 579, 580, 581, 609, 611, 612, 683, 699, 700, 775, 778, 798, 853, 860, 864, 878], "0": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 225, 226, 227, 228, 229, 230, 233, 234, 235, 238, 239, 240, 243, 245, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 287, 292, 296, 297, 299, 303, 304, 305, 306, 308, 311, 312, 313, 316, 317, 320, 325, 327, 329, 334, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 364, 367, 368, 369, 370, 379, 385, 386, 387, 388, 401, 402, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 428, 429, 430, 433, 434, 436, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 459, 462, 465, 466, 467, 468, 472, 474, 475, 476, 477, 478, 485, 486, 487, 488, 489, 490, 492, 493, 494, 497, 500, 505, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 530, 531, 532, 535, 536, 537, 539, 540, 541, 542, 543, 544, 548, 549, 550, 551, 556, 557, 558, 559, 560, 562, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579, 580, 583, 585, 587, 589, 590, 593, 594, 599, 605, 607, 609, 610, 611, 612, 615, 616, 619, 620, 628, 630, 631, 633, 634, 636, 639, 642, 644, 645, 646, 647, 648, 649, 650, 651, 653, 655, 656, 660, 661, 662, 663, 664, 666, 675, 676, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 707, 709, 710, 713, 714, 715, 716, 719, 721, 723, 724, 725, 726, 727, 728, 729, 730, 733, 734, 735, 740, 742, 745, 746, 748, 749, 750, 754, 755, 761, 762, 763, 764, 768, 769, 770, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 814, 818, 819, 822, 824, 828, 829, 831, 833, 835, 836, 837, 840, 843, 853, 854, 857, 859, 860, 863], "2": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 168, 169, 170, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 220, 221, 222, 225, 226, 227, 228, 229, 230, 233, 235, 236, 237, 238, 239, 240, 243, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 286, 287, 289, 296, 297, 299, 301, 313, 315, 320, 334, 340, 342, 346, 347, 353, 354, 355, 356, 358, 359, 367, 379, 386, 387, 401, 402, 409, 411, 412, 415, 416, 417, 419, 420, 421, 425, 426, 428, 430, 431, 432, 438, 442, 444, 445, 447, 448, 450, 454, 461, 464, 471, 472, 474, 475, 477, 478, 485, 492, 500, 505, 513, 515, 520, 522, 523, 524, 530, 532, 533, 534, 535, 537, 539, 540, 541, 551, 556, 557, 558, 562, 565, 566, 567, 569, 570, 571, 573, 574, 576, 582, 583, 584, 585, 589, 595, 600, 602, 615, 616, 619, 622, 625, 627, 638, 642, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 669, 671, 672, 673, 674, 676, 678, 679, 680, 683, 684, 685, 686, 687, 688, 689, 697, 698, 699, 700, 701, 709, 710, 712, 713, 715, 716, 720, 723, 724, 725, 726, 727, 728, 729, 732, 735, 745, 746, 749, 750, 762, 769, 776, 777, 779, 781, 784, 785, 786, 787, 788, 789, 790, 797, 799, 800, 801, 803, 804, 805, 807, 808, 815, 835, 836, 837, 842, 843, 845, 852, 853, 854, 855, 857, 860, 863], "take": [1, 4, 5, 7, 10, 16, 19, 26, 31, 38, 41, 43, 44, 45, 47, 50, 69, 70, 73, 75, 79, 82, 93, 95, 96, 100, 108, 109, 112, 114, 118, 122, 126, 130, 132, 134, 135, 137, 140, 141, 142, 144, 145, 149, 150, 152, 155, 158, 159, 160, 162, 166, 167, 168, 169, 171, 172, 176, 179, 181, 182, 183, 185, 189, 194, 195, 200, 201, 204, 205, 206, 207, 209, 214, 220, 222, 225, 233, 234, 235, 239, 240, 255, 257, 260, 263, 264, 265, 266, 270, 271, 272, 273, 274, 275, 277, 278, 279, 281, 282, 286, 296, 297, 308, 311, 329, 339, 341, 353, 357, 358, 359, 366, 368, 369, 370, 409, 416, 433, 438, 442, 450, 452, 453, 466, 468, 472, 474, 475, 477, 478, 503, 524, 525, 526, 527, 528, 530, 531, 535, 540, 541, 557, 560, 562, 565, 633, 639, 645, 647, 658, 663, 683, 692, 697, 699, 700, 701, 742, 745, 746, 762, 769, 775, 777, 779, 784, 785, 788, 797, 805, 815, 833, 837, 840, 841, 845, 859, 860, 861, 863, 878], "right": [1, 5, 8, 10, 11, 13, 15, 39, 40, 41, 43, 45, 47, 51, 52, 57, 61, 69, 70, 72, 78, 79, 82, 93, 108, 111, 112, 113, 115, 119, 126, 127, 131, 133, 134, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 158, 160, 161, 166, 168, 172, 175, 176, 178, 179, 180, 181, 191, 194, 200, 201, 203, 204, 205, 206, 209, 214, 215, 216, 217, 221, 222, 227, 229, 230, 233, 234, 235, 238, 239, 259, 260, 263, 264, 265, 266, 268, 269, 270, 271, 272, 274, 277, 278, 279, 311, 313, 323, 324, 334, 335, 359, 379, 409, 416, 431, 433, 436, 443, 467, 475, 477, 478, 500, 510, 522, 556, 557, 632, 660, 697, 699, 700, 701, 713, 723, 745, 758, 768, 769, 775, 776, 777, 781, 783, 784, 788, 796, 797, 798, 800, 805, 809, 833, 835, 837, 840, 854, 857, 859, 860, 863, 878], "hand": [1, 5, 8, 9, 111, 156, 160, 199, 204, 205, 206, 240, 268, 379, 557, 860, 878], "somato": [1, 32, 33, 34, 46, 61, 112, 239, 854, 868, 878], "reject": [1, 5, 7, 11, 13, 16, 27, 28, 32, 42, 45, 46, 61, 68, 75, 76, 82, 95, 96, 98, 99, 100, 102, 103, 106, 109, 112, 113, 116, 120, 131, 140, 141, 142, 144, 145, 146, 151, 152, 165, 166, 172, 177, 180, 189, 191, 195, 199, 204, 205, 206, 209, 210, 212, 213, 216, 225, 227, 228, 229, 230, 233, 235, 239, 243, 255, 256, 257, 258, 263, 264, 265, 268, 273, 356, 358, 477, 478, 517, 554, 557, 559, 560, 569, 570, 573, 574, 577, 578, 585, 608, 612, 624, 675, 681, 683, 775, 788, 789, 790, 791, 860, 878], "dict": [1, 4, 5, 7, 8, 9, 10, 11, 13, 14, 16, 18, 21, 22, 26, 28, 32, 35, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 54, 55, 58, 59, 61, 65, 68, 69, 73, 75, 77, 79, 85, 87, 92, 93, 95, 96, 98, 99, 100, 102, 103, 106, 108, 109, 111, 112, 113, 114, 115, 116, 119, 120, 122, 126, 127, 130, 131, 134, 135, 136, 137, 140, 141, 142, 143, 145, 150, 151, 152, 157, 158, 159, 160, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 184, 191, 194, 195, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 214, 220, 221, 222, 225, 226, 227, 228, 229, 230, 233, 234, 235, 239, 240, 256, 257, 258, 260, 261, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 285, 287, 296, 297, 301, 303, 309, 311, 313, 323, 324, 339, 340, 341, 342, 343, 344, 345, 353, 356, 357, 358, 364, 365, 366, 367, 368, 369, 370, 384, 390, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 431, 433, 436, 438, 441, 443, 444, 445, 447, 448, 452, 453, 454, 455, 457, 459, 460, 461, 462, 469, 472, 474, 475, 476, 477, 478, 481, 485, 492, 496, 500, 509, 512, 513, 514, 515, 516, 519, 520, 523, 524, 525, 526, 527, 528, 530, 531, 535, 537, 540, 541, 542, 547, 549, 550, 553, 555, 556, 557, 558, 559, 567, 569, 570, 571, 573, 574, 576, 582, 596, 601, 605, 609, 610, 611, 612, 614, 618, 624, 628, 630, 633, 639, 646, 648, 649, 650, 660, 662, 665, 666, 682, 683, 684, 685, 687, 688, 692, 694, 697, 699, 700, 701, 713, 723, 731, 732, 734, 735, 745, 746, 761, 762, 764, 765, 767, 768, 769, 773, 775, 776, 777, 778, 779, 781, 782, 783, 784, 785, 786, 788, 790, 796, 797, 798, 800, 803, 804, 805, 806, 807, 808, 809, 815, 821, 831, 832, 837, 853, 860, 864, 878], "mag": [1, 5, 7, 8, 9, 12, 13, 21, 22, 26, 28, 31, 32, 33, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 68, 73, 75, 79, 80, 81, 86, 92, 93, 103, 106, 108, 115, 118, 119, 120, 122, 123, 131, 140, 142, 145, 146, 150, 152, 156, 157, 158, 162, 166, 169, 170, 172, 176, 177, 178, 179, 180, 181, 183, 184, 185, 191, 195, 198, 200, 202, 204, 205, 206, 208, 209, 214, 220, 221, 230, 233, 235, 238, 255, 258, 260, 263, 264, 265, 266, 270, 271, 273, 274, 277, 278, 279, 296, 297, 310, 317, 318, 337, 353, 357, 358, 368, 369, 370, 372, 409, 416, 418, 452, 453, 472, 474, 475, 477, 478, 513, 535, 554, 555, 556, 557, 562, 567, 569, 570, 571, 573, 574, 576, 638, 683, 697, 699, 700, 701, 768, 769, 775, 776, 777, 779, 781, 783, 784, 785, 788, 798, 800, 801, 805, 806, 807, 833, 853, 860, 878], "4e": [1, 9, 28, 31, 42, 45, 68, 77, 81, 103, 106, 120, 131, 152, 162, 177, 180, 185, 191, 195, 204, 221, 222, 230, 258, 263, 264, 273, 358, 477, 478, 557, 573, 574, 683, 775, 798, 853], "12": [1, 7, 9, 11, 12, 13, 18, 19, 21, 24, 28, 32, 33, 34, 35, 42, 43, 44, 45, 46, 47, 49, 56, 59, 64, 68, 69, 71, 75, 79, 80, 82, 84, 86, 95, 100, 102, 103, 105, 106, 107, 108, 111, 112, 113, 120, 126, 131, 134, 137, 143, 145, 146, 148, 151, 152, 154, 161, 162, 164, 166, 168, 169, 171, 172, 175, 177, 179, 180, 183, 190, 191, 193, 194, 195, 198, 200, 201, 202, 203, 204, 206, 208, 209, 211, 213, 214, 216, 220, 222, 225, 226, 227, 228, 229, 230, 232, 234, 235, 239, 243, 257, 258, 261, 262, 263, 264, 265, 266, 268, 270, 271, 273, 274, 275, 276, 277, 278, 279, 296, 304, 308, 312, 334, 346, 350, 351, 353, 358, 359, 379, 392, 415, 431, 450, 452, 475, 477, 478, 489, 519, 522, 524, 557, 568, 569, 570, 573, 574, 583, 585, 650, 683, 697, 699, 700, 701, 725, 728, 763, 775, 777, 782, 794, 798, 801, 853, 854, 857, 860, 863], "eog": [1, 4, 8, 9, 11, 12, 14, 15, 16, 27, 28, 32, 33, 42, 45, 46, 61, 68, 70, 73, 75, 76, 80, 81, 82, 84, 87, 89, 92, 93, 95, 96, 99, 103, 106, 107, 108, 109, 112, 116, 126, 127, 137, 140, 141, 145, 146, 149, 151, 152, 166, 167, 168, 169, 172, 177, 180, 189, 191, 195, 199, 200, 202, 205, 207, 209, 210, 211, 214, 215, 216, 217, 220, 222, 227, 228, 229, 230, 233, 235, 239, 258, 263, 264, 265, 266, 268, 273, 310, 358, 372, 442, 450, 477, 478, 485, 487, 488, 489, 492, 493, 494, 499, 503, 548, 554, 556, 557, 570, 573, 574, 578, 581, 595, 600, 609, 649, 650, 683, 697, 699, 700, 701, 775, 776, 791, 796, 798, 833, 853, 854, 855, 860, 863, 864, 878], "250e": [1, 32, 144, 166, 191, 203, 206, 258, 263, 264, 358, 557, 573, 574, 683], "6": [1, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 67, 69, 70, 72, 74, 75, 77, 79, 80, 81, 82, 83, 84, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 118, 119, 120, 123, 126, 129, 130, 132, 134, 136, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 156, 157, 158, 159, 160, 162, 166, 168, 169, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 191, 194, 195, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 213, 214, 216, 219, 220, 221, 222, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 239, 240, 243, 255, 258, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 281, 299, 313, 334, 358, 379, 385, 409, 411, 414, 416, 444, 445, 447, 448, 477, 478, 524, 556, 557, 566, 571, 572, 573, 574, 583, 587, 638, 650, 684, 685, 687, 688, 697, 699, 700, 701, 713, 723, 724, 725, 727, 728, 760, 761, 762, 775, 776, 777, 781, 784, 788, 790, 797, 798, 800, 804, 805, 807, 835, 836, 843, 853, 854, 860, 863], "data_path": [1, 2, 5, 7, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 112, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 160, 161, 162, 166, 167, 168, 169, 170, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 194, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 221, 222, 226, 227, 228, 229, 230, 233, 234, 235, 238, 239, 240, 263, 264, 265, 266, 273, 384, 477, 478, 837, 854, 860, 868, 878], "raw_path": [1, 172, 184], "meg": [1, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 64, 67, 68, 70, 71, 72, 75, 76, 79, 80, 81, 82, 83, 84, 85, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 102, 103, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 123, 126, 128, 129, 130, 131, 133, 135, 136, 140, 141, 142, 145, 146, 149, 150, 151, 152, 156, 157, 158, 159, 160, 162, 165, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 191, 192, 193, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 222, 227, 228, 229, 230, 233, 234, 235, 238, 239, 243, 255, 258, 260, 263, 264, 265, 266, 267, 268, 272, 274, 276, 283, 284, 296, 297, 299, 309, 314, 317, 318, 319, 324, 326, 328, 336, 340, 352, 353, 354, 355, 356, 357, 358, 363, 368, 369, 370, 372, 391, 409, 411, 416, 417, 425, 430, 450, 452, 453, 460, 466, 472, 474, 475, 477, 478, 480, 484, 488, 490, 496, 497, 498, 501, 507, 509, 516, 520, 523, 524, 525, 535, 536, 538, 539, 551, 554, 555, 556, 557, 559, 562, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 579, 582, 585, 586, 591, 593, 600, 606, 610, 611, 614, 615, 617, 632, 638, 649, 650, 654, 657, 659, 662, 665, 683, 684, 685, 687, 688, 692, 697, 699, 700, 701, 705, 706, 707, 708, 710, 727, 728, 731, 732, 745, 758, 761, 762, 768, 769, 775, 776, 777, 778, 779, 780, 781, 782, 784, 785, 787, 788, 789, 796, 797, 799, 800, 805, 807, 812, 833, 834, 837, 844, 849, 852, 853, 857, 863, 864, 868, 878], "subj001_somatosensory_20111109_01_aux": [1, 118], "f": [1, 5, 8, 9, 10, 18, 19, 21, 22, 27, 28, 29, 32, 33, 39, 40, 41, 46, 47, 60, 63, 69, 70, 78, 82, 85, 89, 91, 93, 97, 101, 103, 106, 108, 110, 111, 112, 113, 114, 118, 125, 126, 134, 135, 141, 144, 149, 150, 151, 157, 158, 159, 160, 165, 167, 170, 172, 176, 182, 191, 194, 195, 198, 199, 201, 204, 206, 208, 209, 210, 216, 220, 221, 222, 225, 227, 228, 229, 231, 232, 233, 234, 235, 238, 239, 240, 243, 255, 257, 260, 263, 264, 265, 266, 268, 272, 287, 296, 301, 317, 337, 352, 386, 448, 450, 477, 478, 523, 554, 566, 612, 653, 677, 678, 679, 680, 683, 685, 688, 700, 713, 723, 727, 732, 766, 769, 776, 833, 843, 845, 853, 854, 860, 878], "d": [1, 4, 7, 11, 12, 15, 19, 21, 22, 26, 34, 39, 41, 46, 50, 52, 57, 59, 65, 71, 79, 80, 81, 83, 92, 93, 99, 100, 108, 110, 112, 117, 118, 119, 122, 125, 126, 128, 134, 135, 136, 141, 157, 158, 159, 160, 171, 179, 180, 182, 183, 184, 185, 191, 194, 201, 207, 208, 216, 222, 225, 229, 233, 234, 235, 238, 240, 243, 255, 257, 260, 263, 264, 265, 266, 268, 272, 287, 296, 297, 301, 320, 353, 386, 417, 472, 477, 478, 490, 494, 523, 524, 616, 642, 690, 691, 699, 701, 716, 732, 746, 785, 798, 845, 854, 855, 860, 866, 878], "crop": [1, 5, 8, 9, 10, 12, 21, 30, 31, 32, 33, 34, 35, 38, 40, 42, 44, 45, 46, 51, 59, 73, 75, 80, 81, 82, 83, 108, 111, 115, 126, 137, 140, 141, 142, 146, 149, 151, 167, 168, 172, 176, 179, 180, 181, 183, 184, 185, 198, 199, 202, 204, 205, 206, 207, 208, 209, 211, 214, 215, 216, 217, 222, 226, 227, 233, 235, 238, 239, 257, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 567, 586, 599, 697, 700, 855, 878], "half": [1, 69, 201, 202, 235, 262, 263, 264, 265, 266, 268, 270, 271, 273, 274, 277, 278, 279, 340, 411, 445, 447, 448, 477, 478, 575, 684, 685, 687, 688, 692, 709, 711, 713, 723, 725, 727, 728, 745, 769, 775, 777, 798, 803, 808, 837, 860, 878], "length": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 71, 72, 75, 81, 82, 83, 87, 98, 110, 111, 112, 113, 114, 120, 132, 136, 141, 143, 144, 149, 151, 172, 175, 191, 195, 198, 200, 202, 203, 204, 205, 206, 209, 210, 211, 214, 217, 220, 226, 230, 238, 255, 258, 260, 261, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 277, 278, 279, 286, 312, 358, 392, 409, 411, 414, 415, 416, 417, 420, 421, 424, 445, 447, 448, 467, 475, 476, 477, 478, 527, 539, 541, 556, 557, 559, 565, 573, 574, 585, 592, 615, 616, 637, 647, 663, 677, 678, 682, 683, 697, 699, 700, 701, 702, 703, 704, 705, 707, 709, 712, 715, 716, 720, 724, 725, 726, 727, 728, 729, 735, 745, 760, 761, 762, 769, 776, 777, 779, 781, 784, 786, 788, 797, 800, 803, 804, 805, 806, 807, 808, 833, 853, 854, 860, 878], "save": [1, 5, 7, 9, 11, 29, 30, 32, 34, 41, 43, 44, 60, 61, 69, 73, 78, 107, 108, 109, 112, 114, 134, 135, 136, 142, 143, 150, 151, 156, 157, 158, 160, 161, 162, 168, 170, 177, 180, 181, 183, 188, 190, 191, 199, 200, 202, 204, 206, 207, 209, 215, 216, 217, 222, 229, 233, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 281, 287, 311, 312, 337, 379, 384, 413, 439, 440, 441, 442, 468, 476, 477, 478, 494, 496, 501, 530, 531, 546, 556, 557, 598, 610, 611, 614, 615, 619, 622, 625, 636, 687, 688, 697, 698, 699, 700, 701, 717, 718, 730, 732, 745, 820, 824, 825, 827, 835, 837, 841, 855, 857, 860, 863, 864, 878], "memori": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 220, 221, 222, 225, 226, 227, 228, 229, 230, 233, 234, 235, 238, 239, 240, 255, 258, 263, 264, 265, 266, 281, 290, 291, 294, 329, 358, 360, 362, 373, 411, 418, 421, 422, 426, 447, 476, 477, 478, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 517, 526, 527, 528, 530, 531, 537, 559, 585, 640, 646, 684, 685, 687, 688, 703, 706, 722, 724, 725, 726, 727, 728, 729, 745, 779, 835, 836, 843, 855, 864, 866, 878], "120": [1, 5, 7, 24, 33, 35, 38, 42, 45, 59, 78, 80, 81, 90, 107, 132, 134, 135, 142, 151, 160, 169, 176, 181, 191, 198, 200, 202, 204, 208, 211, 230, 239, 243, 255, 263, 264, 432, 477, 478, 567, 571, 775, 798], "load_data": [1, 4, 8, 9, 12, 21, 34, 42, 69, 70, 73, 74, 75, 80, 81, 82, 83, 98, 108, 111, 112, 114, 136, 146, 151, 159, 166, 168, 172, 182, 191, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 214, 215, 216, 217, 239, 263, 264, 265, 266, 477, 478, 854, 860, 868, 878], "plot": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 45, 46, 49, 51, 53, 54, 55, 56, 58, 59, 61, 63, 64, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 79, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 120, 121, 128, 129, 130, 131, 133, 134, 135, 137, 140, 143, 144, 145, 146, 149, 151, 153, 154, 156, 158, 159, 160, 165, 166, 167, 168, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 214, 216, 218, 219, 220, 222, 225, 226, 230, 233, 234, 235, 238, 255, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 311, 312, 320, 322, 323, 327, 337, 353, 363, 372, 409, 413, 416, 424, 427, 429, 435, 438, 450, 452, 469, 477, 478, 484, 488, 490, 493, 501, 516, 520, 521, 523, 524, 533, 534, 535, 536, 538, 553, 554, 556, 557, 571, 593, 606, 607, 612, 615, 617, 620, 625, 630, 637, 646, 683, 697, 698, 699, 700, 701, 713, 723, 745, 746, 747, 748, 750, 754, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 815, 833, 836, 837, 841, 853, 854, 855, 858, 860, 861, 864, 866, 867, 878], "set": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 44, 45, 46, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 75, 77, 79, 81, 82, 83, 85, 86, 87, 89, 92, 93, 94, 95, 96, 98, 99, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 125, 126, 127, 131, 132, 134, 135, 136, 137, 140, 141, 142, 143, 144, 146, 149, 150, 152, 155, 156, 158, 159, 160, 161, 162, 165, 166, 168, 170, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 216, 220, 221, 222, 225, 228, 239, 240, 256, 257, 258, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 286, 287, 296, 297, 299, 301, 302, 316, 324, 329, 340, 353, 354, 356, 358, 359, 360, 364, 368, 374, 375, 376, 377, 378, 379, 381, 382, 384, 386, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 432, 433, 434, 437, 438, 439, 442, 443, 444, 448, 450, 452, 465, 466, 467, 468, 474, 477, 478, 479, 485, 492, 493, 496, 499, 501, 510, 512, 514, 516, 518, 519, 520, 521, 522, 523, 526, 527, 528, 530, 531, 535, 540, 541, 543, 544, 545, 548, 550, 556, 557, 558, 559, 560, 562, 569, 570, 571, 573, 574, 576, 586, 598, 603, 609, 610, 614, 615, 616, 619, 622, 625, 639, 640, 641, 642, 643, 644, 645, 646, 648, 649, 650, 662, 674, 675, 679, 681, 683, 684, 685, 686, 687, 688, 692, 697, 699, 700, 701, 702, 703, 704, 705, 706, 707, 713, 715, 716, 723, 724, 725, 726, 727, 728, 732, 735, 736, 738, 743, 744, 745, 748, 762, 764, 769, 772, 773, 775, 777, 780, 781, 782, 783, 784, 788, 790, 791, 792, 797, 798, 799, 800, 801, 803, 805, 807, 808, 809, 810, 811, 814, 817, 833, 835, 836, 841, 842, 844, 855, 857, 859, 860, 863, 864, 867, 878], "channel": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 65, 67, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 91, 92, 93, 94, 95, 96, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 129, 130, 131, 132, 134, 135, 136, 137, 141, 142, 144, 146, 150, 152, 156, 157, 158, 159, 162, 165, 166, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 190, 191, 194, 195, 198, 202, 203, 205, 206, 208, 209, 211, 212, 213, 215, 216, 217, 220, 221, 222, 225, 226, 227, 228, 229, 238, 239, 243, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 277, 278, 279, 280, 283, 284, 296, 297, 307, 309, 310, 340, 342, 344, 345, 348, 352, 353, 354, 355, 356, 357, 358, 368, 369, 370, 372, 380, 409, 411, 416, 417, 418, 420, 422, 425, 430, 434, 439, 441, 442, 447, 448, 450, 451, 452, 453, 461, 466, 469, 472, 474, 475, 476, 477, 478, 485, 487, 488, 489, 490, 492, 493, 494, 496, 499, 500, 501, 503, 513, 516, 520, 525, 535, 548, 549, 550, 551, 553, 554, 555, 556, 557, 559, 562, 563, 565, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 584, 585, 586, 589, 590, 591, 593, 596, 599, 600, 609, 610, 611, 612, 614, 615, 616, 617, 632, 633, 638, 639, 642, 647, 649, 650, 651, 665, 677, 683, 684, 685, 687, 688, 692, 697, 698, 699, 700, 701, 705, 706, 707, 708, 710, 714, 720, 724, 727, 728, 729, 745, 758, 761, 762, 765, 766, 767, 769, 770, 771, 774, 775, 776, 777, 779, 781, 782, 783, 784, 785, 788, 789, 790, 791, 792, 794, 795, 796, 797, 798, 799, 800, 801, 805, 806, 807, 815, 817, 818, 833, 835, 837, 841, 844, 845, 855, 857, 859, 864, 867, 868, 878], "set_channel_typ": [1, 127, 140, 149, 151, 191, 214, 263, 264, 265, 266, 442, 477, 478, 878], "eeg058": 1, "set_eeg_refer": [1, 29, 70, 92, 93, 151, 159, 162, 167, 182, 189, 203, 205, 207, 221, 240, 263, 264, 265, 266, 477, 478, 556, 639, 661, 864, 868, 878], "averag": [1, 2, 4, 5, 7, 10, 11, 13, 14, 15, 16, 18, 19, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 62, 64, 66, 67, 68, 70, 71, 72, 75, 77, 79, 80, 81, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 103, 106, 107, 109, 111, 112, 115, 116, 118, 119, 120, 123, 126, 128, 131, 132, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 150, 152, 153, 154, 158, 159, 162, 165, 166, 169, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 191, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 217, 220, 221, 222, 225, 226, 227, 228, 229, 230, 233, 235, 238, 239, 240, 243, 255, 256, 260, 262, 263, 264, 265, 266, 268, 270, 271, 272, 274, 277, 278, 279, 285, 352, 353, 355, 371, 387, 409, 416, 423, 428, 430, 443, 450, 466, 477, 478, 501, 511, 512, 525, 526, 527, 528, 530, 531, 537, 540, 541, 556, 557, 561, 562, 564, 569, 570, 571, 573, 576, 577, 580, 582, 611, 615, 616, 639, 642, 653, 661, 697, 698, 699, 700, 701, 715, 716, 724, 725, 726, 727, 728, 729, 745, 769, 777, 779, 780, 784, 788, 789, 796, 797, 799, 800, 805, 807, 824, 833, 853, 854, 857, 863, 864, 866, 878], "project": [1, 4, 5, 8, 11, 12, 13, 14, 15, 16, 18, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 67, 68, 70, 71, 72, 73, 75, 76, 77, 79, 82, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 198, 199, 200, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 225, 226, 227, 228, 229, 230, 233, 235, 239, 240, 243, 258, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 277, 278, 279, 283, 284, 296, 297, 299, 340, 342, 346, 353, 354, 355, 356, 358, 368, 370, 386, 417, 429, 450, 452, 453, 476, 477, 478, 497, 517, 519, 521, 523, 524, 525, 535, 556, 557, 568, 569, 570, 572, 576, 582, 585, 593, 600, 608, 617, 623, 638, 639, 642, 661, 674, 692, 698, 699, 701, 702, 703, 704, 705, 706, 707, 708, 745, 761, 762, 767, 770, 777, 779, 781, 783, 784, 788, 796, 797, 798, 799, 801, 803, 808, 814, 815, 817, 829, 833, 837, 842, 844, 849, 853, 854, 856, 866, 867, 868, 878], "true": [1, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 82, 83, 85, 86, 87, 91, 92, 93, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 124, 125, 126, 128, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 149, 150, 151, 152, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 216, 217, 221, 222, 225, 227, 228, 229, 230, 233, 235, 238, 239, 240, 243, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 284, 286, 287, 296, 297, 299, 301, 302, 305, 306, 307, 308, 311, 312, 313, 316, 319, 320, 321, 322, 324, 337, 339, 340, 341, 342, 343, 346, 353, 357, 358, 359, 360, 362, 363, 368, 369, 370, 374, 376, 377, 378, 379, 381, 382, 384, 386, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 427, 428, 430, 431, 434, 438, 439, 440, 441, 442, 443, 444, 447, 448, 450, 452, 453, 454, 457, 462, 466, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 479, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 517, 518, 520, 522, 523, 524, 525, 526, 527, 528, 530, 531, 533, 534, 535, 537, 539, 540, 541, 542, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 566, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 582, 583, 585, 600, 608, 611, 612, 615, 620, 628, 630, 633, 636, 639, 641, 642, 644, 645, 646, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 667, 671, 674, 675, 678, 679, 681, 684, 685, 687, 688, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 703, 704, 706, 707, 709, 713, 714, 715, 722, 723, 724, 725, 726, 727, 728, 729, 730, 732, 740, 743, 745, 750, 753, 754, 758, 759, 761, 762, 763, 764, 766, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 813, 815, 820, 821, 822, 823, 824, 825, 826, 828, 829, 830, 831, 832, 835, 837, 853, 854, 857, 860, 878], "show": [1, 4, 7, 8, 10, 12, 13, 14, 15, 16, 19, 22, 26, 27, 28, 29, 31, 32, 35, 37, 38, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 58, 59, 60, 63, 67, 68, 70, 72, 73, 76, 77, 78, 84, 96, 98, 100, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 125, 126, 129, 130, 131, 132, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 150, 151, 152, 155, 156, 157, 159, 160, 166, 168, 169, 170, 172, 176, 178, 179, 180, 181, 182, 190, 191, 198, 200, 201, 202, 203, 204, 205, 206, 208, 210, 214, 216, 217, 220, 225, 226, 227, 228, 229, 230, 233, 234, 235, 238, 239, 240, 260, 261, 262, 263, 264, 265, 266, 268, 271, 272, 276, 277, 278, 279, 306, 308, 311, 312, 409, 416, 450, 468, 469, 477, 478, 508, 548, 554, 556, 557, 571, 576, 578, 696, 697, 698, 699, 701, 713, 723, 745, 753, 754, 761, 762, 763, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 810, 814, 833, 835, 837, 842, 845, 853, 860, 866, 878], "power": [1, 12, 21, 27, 32, 36, 38, 56, 60, 67, 70, 81, 82, 104, 105, 111, 112, 113, 114, 120, 127, 132, 137, 145, 146, 149, 150, 162, 165, 166, 172, 180, 183, 191, 194, 200, 201, 205, 208, 211, 217, 220, 223, 224, 226, 230, 231, 232, 238, 243, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 277, 278, 279, 287, 288, 289, 290, 293, 296, 297, 317, 352, 353, 357, 358, 409, 411, 414, 416, 417, 420, 422, 443, 445, 447, 448, 449, 450, 477, 478, 483, 513, 515, 520, 523, 524, 525, 530, 531, 535, 538, 540, 541, 548, 553, 554, 557, 604, 612, 617, 619, 632, 645, 651, 662, 677, 678, 679, 680, 681, 684, 685, 686, 687, 688, 697, 698, 699, 700, 701, 706, 715, 716, 724, 725, 726, 727, 728, 729, 739, 745, 761, 768, 769, 770, 776, 777, 779, 782, 784, 785, 790, 796, 799, 805, 813, 833, 837, 854, 857, 859, 863, 878], "line": [1, 69, 80, 81, 100, 108, 119, 120, 122, 126, 136, 137, 140, 141, 144, 151, 155, 156, 158, 160, 162, 169, 171, 172, 177, 183, 190, 191, 201, 203, 206, 207, 208, 209, 210, 214, 217, 227, 228, 239, 240, 243, 260, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 334, 340, 346, 409, 416, 468, 477, 478, 508, 514, 556, 557, 571, 592, 600, 612, 619, 628, 631, 697, 699, 701, 745, 753, 758, 761, 762, 769, 770, 775, 776, 777, 779, 781, 783, 784, 785, 787, 788, 791, 792, 793, 796, 797, 798, 799, 800, 802, 803, 804, 805, 807, 808, 826, 831, 835, 836, 840, 842, 844, 849, 853, 854, 855, 857, 860, 868, 878], "interfer": [1, 122, 136, 198, 199, 202, 207, 208, 209, 211, 216, 243, 255, 585, 833, 854, 857], "remov": [1, 7, 16, 18, 21, 27, 28, 31, 32, 35, 42, 51, 58, 59, 68, 69, 70, 71, 73, 74, 75, 76, 80, 81, 84, 89, 92, 98, 102, 108, 111, 112, 118, 126, 131, 134, 136, 140, 141, 142, 143, 146, 149, 150, 151, 157, 158, 160, 161, 162, 166, 167, 168, 170, 172, 176, 177, 180, 181, 182, 183, 184, 191, 195, 198, 199, 200, 201, 202, 203, 206, 207, 209, 211, 214, 216, 217, 222, 227, 228, 229, 230, 238, 240, 243, 255, 257, 260, 263, 264, 265, 266, 267, 268, 269, 272, 273, 274, 287, 301, 311, 327, 337, 346, 353, 362, 363, 415, 417, 421, 432, 448, 452, 461, 474, 475, 477, 478, 479, 492, 497, 523, 554, 555, 556, 557, 558, 572, 576, 592, 593, 600, 606, 615, 617, 620, 639, 642, 661, 663, 697, 699, 700, 701, 732, 745, 766, 782, 798, 814, 815, 833, 837, 845, 854, 859, 860, 863, 864, 866, 878], "compute_psd": [1, 70, 73, 108, 128, 132, 137, 140, 142, 143, 166, 167, 183, 191, 198, 200, 202, 206, 208, 210, 211, 217, 238, 239, 240, 263, 264, 265, 266, 414, 477, 478, 557, 699, 701, 715, 777, 788, 790, 799, 878], "60": [1, 5, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 28, 29, 30, 31, 33, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 64, 67, 68, 69, 71, 72, 73, 75, 77, 80, 81, 82, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 102, 103, 106, 107, 108, 109, 110, 111, 113, 115, 116, 118, 119, 120, 122, 123, 126, 130, 131, 132, 134, 136, 137, 140, 141, 143, 144, 149, 150, 151, 152, 159, 166, 167, 168, 169, 170, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 215, 216, 217, 221, 222, 225, 226, 228, 229, 230, 233, 235, 238, 255, 448, 477, 478, 583, 786, 854, 878], "fals": [1, 4, 5, 8, 9, 11, 12, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 30, 31, 32, 40, 41, 42, 44, 47, 48, 49, 50, 51, 54, 55, 58, 63, 64, 67, 68, 69, 70, 71, 73, 74, 75, 77, 80, 81, 82, 83, 85, 87, 89, 93, 95, 96, 98, 99, 100, 103, 106, 107, 108, 109, 111, 113, 114, 117, 118, 119, 122, 123, 125, 126, 128, 133, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 155, 156, 158, 160, 162, 166, 167, 168, 169, 170, 171, 172, 176, 178, 180, 181, 182, 183, 185, 188, 191, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 211, 214, 215, 216, 217, 220, 221, 222, 226, 227, 228, 229, 230, 235, 238, 239, 240, 243, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 287, 290, 291, 294, 296, 297, 299, 301, 302, 306, 307, 308, 311, 312, 313, 316, 319, 321, 322, 325, 339, 341, 343, 346, 353, 358, 359, 360, 362, 363, 368, 371, 374, 376, 377, 378, 379, 381, 382, 384, 386, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 414, 415, 416, 417, 423, 427, 428, 430, 434, 439, 440, 441, 442, 443, 444, 450, 453, 457, 462, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 479, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 517, 520, 522, 523, 524, 525, 526, 527, 528, 530, 531, 533, 534, 535, 537, 540, 541, 542, 548, 549, 550, 552, 553, 554, 555, 556, 557, 562, 569, 570, 571, 573, 574, 576, 577, 578, 582, 583, 585, 586, 589, 605, 608, 611, 612, 615, 622, 627, 628, 630, 631, 633, 635, 636, 639, 642, 643, 644, 646, 652, 653, 654, 655, 656, 657, 658, 659, 664, 670, 673, 674, 675, 678, 681, 684, 685, 687, 688, 693, 694, 696, 697, 698, 699, 700, 701, 704, 707, 709, 713, 714, 715, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 740, 743, 745, 754, 758, 759, 761, 762, 763, 766, 769, 770, 773, 775, 776, 777, 779, 781, 783, 784, 786, 788, 790, 792, 794, 797, 798, 799, 800, 801, 803, 804, 805, 807, 808, 811, 818, 820, 821, 822, 823, 824, 825, 826, 828, 829, 830, 831, 832, 835, 860, 863, 878], "notch_filt": [1, 5, 81, 136, 167, 191, 202, 209, 211, 263, 264, 265, 266, 447, 477, 478, 868, 878], "arang": [1, 4, 8, 9, 15, 19, 43, 45, 67, 81, 89, 91, 93, 94, 106, 111, 113, 119, 126, 166, 191, 194, 195, 201, 210, 211, 220, 222, 225, 227, 228, 229, 230, 234, 235, 240, 269, 276, 448, 465, 477, 478, 494, 594, 689, 713, 723, 724, 725, 727, 728], "181": [1, 13, 35, 102, 105, 125, 169, 191, 225, 230, 243, 662, 683], "fir_design": [1, 7, 8, 9, 11, 13, 14, 15, 16, 18, 75, 87, 98, 120, 132, 191, 201, 204, 240, 263, 264, 265, 266, 411, 420, 445, 447, 448, 477, 478, 878], "firwin": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 75, 81, 82, 83, 87, 98, 112, 113, 114, 120, 132, 136, 141, 144, 146, 151, 191, 195, 201, 202, 203, 204, 209, 210, 211, 230, 240, 263, 264, 265, 266, 411, 420, 445, 447, 448, 477, 478, 878], "event": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 27, 28, 32, 33, 34, 42, 45, 46, 49, 61, 69, 70, 71, 72, 73, 76, 79, 80, 81, 82, 83, 84, 87, 89, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 116, 120, 127, 131, 135, 136, 140, 141, 142, 143, 145, 146, 149, 152, 153, 154, 162, 165, 169, 173, 174, 177, 180, 182, 183, 184, 185, 188, 189, 191, 195, 198, 199, 200, 201, 202, 203, 204, 206, 208, 210, 211, 214, 217, 218, 219, 220, 221, 222, 226, 227, 228, 229, 230, 233, 235, 238, 239, 240, 243, 255, 256, 257, 258, 263, 264, 265, 266, 268, 273, 282, 286, 313, 352, 353, 360, 361, 362, 367, 392, 410, 425, 430, 432, 433, 438, 450, 451, 466, 477, 478, 485, 492, 493, 494, 499, 501, 518, 522, 547, 548, 552, 554, 557, 558, 559, 560, 565, 569, 570, 573, 574, 577, 578, 579, 580, 581, 599, 609, 610, 611, 612, 642, 647, 676, 683, 697, 699, 700, 745, 746, 769, 775, 776, 778, 792, 798, 806, 814, 817, 823, 833, 853, 854, 857, 860, 863, 864, 868, 878], "find_ev": [1, 5, 7, 10, 32, 33, 34, 42, 45, 46, 49, 70, 71, 72, 79, 83, 89, 92, 94, 98, 106, 107, 109, 112, 140, 141, 142, 149, 152, 162, 166, 168, 172, 177, 180, 182, 183, 185, 191, 195, 199, 202, 203, 204, 206, 211, 215, 221, 222, 227, 238, 239, 268, 435, 451, 485, 492, 499, 518, 552, 599, 612, 833, 853, 860, 864, 868, 878], "stim_channel": [1, 5, 7, 42, 46, 79, 106, 107, 109, 112, 137, 140, 142, 149, 152, 166, 168, 177, 191, 199, 204, 206, 215, 227, 238, 239, 256, 345, 450, 451, 477, 478, 485, 492, 499, 579, 878], "uppt001": [1, 7, 191], "pick": [1, 2, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 67, 68, 69, 71, 72, 73, 75, 77, 80, 81, 82, 85, 87, 89, 91, 93, 95, 96, 98, 99, 102, 103, 106, 107, 108, 109, 110, 111, 114, 116, 118, 119, 120, 126, 130, 131, 132, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 157, 158, 160, 162, 166, 169, 170, 172, 177, 178, 179, 180, 181, 182, 184, 191, 195, 198, 199, 200, 202, 203, 204, 206, 207, 209, 210, 211, 214, 217, 220, 221, 222, 227, 228, 229, 230, 233, 235, 238, 239, 258, 260, 263, 264, 265, 266, 267, 268, 270, 271, 273, 274, 277, 278, 279, 286, 296, 297, 309, 312, 313, 316, 323, 326, 328, 358, 368, 411, 417, 425, 430, 434, 447, 448, 477, 478, 548, 549, 550, 551, 554, 555, 556, 557, 559, 572, 573, 574, 579, 582, 591, 593, 600, 665, 683, 692, 697, 698, 699, 700, 701, 705, 706, 707, 708, 710, 714, 727, 728, 745, 759, 763, 767, 769, 775, 776, 779, 781, 782, 788, 789, 790, 792, 794, 796, 799, 801, 803, 808, 833, 837, 853, 860, 863, 864, 878], "pick_typ": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 26, 28, 31, 34, 35, 40, 45, 46, 49, 51, 58, 59, 67, 68, 70, 71, 73, 82, 87, 89, 91, 95, 96, 98, 99, 102, 103, 106, 107, 109, 110, 112, 118, 126, 132, 136, 140, 141, 149, 150, 166, 168, 169, 170, 172, 176, 181, 182, 195, 198, 199, 200, 202, 203, 204, 205, 206, 210, 211, 214, 222, 227, 228, 229, 230, 233, 235, 239, 240, 263, 264, 265, 266, 477, 478, 548, 697, 699, 700, 701, 837, 860, 864, 868, 878], "info": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 73, 74, 78, 79, 80, 81, 82, 83, 85, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 102, 103, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 122, 123, 124, 126, 127, 132, 134, 135, 136, 137, 140, 142, 144, 146, 149, 150, 151, 155, 156, 157, 158, 159, 160, 162, 165, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 191, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 215, 216, 217, 221, 222, 226, 227, 228, 229, 230, 233, 235, 238, 239, 240, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 272, 273, 274, 276, 281, 283, 284, 296, 297, 298, 304, 305, 309, 310, 312, 316, 317, 318, 319, 323, 325, 326, 328, 339, 341, 343, 348, 353, 357, 358, 364, 368, 369, 370, 372, 409, 411, 416, 417, 418, 420, 425, 428, 430, 434, 439, 440, 441, 442, 445, 447, 448, 452, 453, 460, 461, 469, 472, 474, 475, 476, 477, 478, 479, 482, 484, 496, 513, 516, 519, 520, 521, 523, 525, 535, 548, 551, 553, 554, 555, 556, 557, 559, 561, 568, 572, 573, 574, 576, 579, 582, 585, 589, 590, 591, 593, 600, 603, 610, 614, 632, 633, 638, 639, 642, 644, 648, 649, 650, 651, 661, 662, 665, 683, 697, 698, 699, 700, 701, 705, 706, 707, 708, 710, 728, 734, 740, 743, 745, 758, 761, 762, 765, 766, 769, 770, 771, 775, 776, 779, 780, 781, 782, 785, 787, 792, 794, 797, 798, 799, 801, 807, 815, 824, 833, 835, 837, 840, 842, 853, 854, 855, 857, 860, 866, 868, 878], "eeg": [1, 4, 5, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 59, 60, 62, 63, 64, 66, 67, 68, 71, 72, 75, 76, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 115, 116, 118, 119, 120, 121, 122, 123, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 193, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 227, 228, 229, 230, 231, 232, 233, 235, 238, 239, 243, 255, 258, 260, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 296, 297, 299, 301, 304, 305, 309, 310, 311, 313, 315, 317, 318, 322, 323, 325, 326, 327, 328, 329, 330, 333, 334, 336, 352, 353, 354, 355, 356, 357, 358, 362, 363, 364, 368, 369, 370, 372, 387, 401, 402, 409, 411, 413, 416, 417, 418, 424, 425, 428, 430, 433, 438, 441, 442, 450, 452, 453, 466, 468, 472, 474, 475, 477, 478, 483, 485, 487, 488, 489, 492, 493, 494, 495, 499, 501, 503, 504, 506, 513, 516, 520, 521, 523, 524, 525, 535, 536, 538, 539, 548, 554, 555, 556, 557, 558, 559, 562, 565, 566, 569, 570, 571, 572, 573, 574, 578, 579, 582, 584, 591, 593, 600, 604, 606, 608, 609, 611, 612, 615, 616, 617, 627, 630, 638, 639, 642, 646, 650, 657, 662, 665, 683, 684, 685, 687, 688, 692, 697, 699, 700, 701, 705, 706, 707, 708, 710, 727, 728, 737, 745, 761, 762, 765, 769, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 788, 789, 795, 796, 797, 798, 799, 800, 801, 805, 806, 807, 812, 813, 817, 833, 834, 844, 849, 852, 854, 857, 863, 864, 867, 868, 878], "stim": [1, 8, 9, 11, 14, 15, 16, 28, 42, 45, 46, 65, 68, 70, 71, 87, 89, 98, 99, 103, 106, 107, 109, 140, 141, 142, 149, 151, 166, 169, 172, 182, 188, 191, 195, 202, 203, 204, 214, 215, 222, 227, 228, 229, 239, 240, 255, 256, 263, 264, 265, 266, 268, 273, 310, 348, 372, 442, 450, 451, 477, 478, 485, 492, 499, 501, 554, 557, 579, 612, 647, 697, 699, 700, 701, 775, 798, 833, 860, 863, 864, 878], "exclud": [1, 5, 7, 8, 9, 11, 13, 14, 15, 16, 24, 26, 28, 31, 34, 35, 40, 41, 43, 45, 49, 50, 51, 58, 59, 64, 67, 68, 69, 70, 73, 77, 82, 85, 87, 91, 95, 96, 99, 103, 106, 107, 108, 109, 110, 111, 132, 142, 144, 150, 156, 157, 158, 166, 169, 172, 176, 177, 181, 182, 183, 184, 185, 191, 195, 198, 199, 200, 202, 204, 205, 207, 217, 222, 227, 228, 229, 233, 235, 240, 255, 260, 261, 262, 263, 264, 265, 266, 270, 271, 273, 274, 276, 277, 278, 279, 304, 305, 318, 325, 358, 364, 368, 370, 417, 428, 477, 478, 485, 492, 494, 499, 521, 548, 549, 550, 552, 554, 555, 556, 557, 558, 569, 570, 571, 576, 585, 600, 612, 617, 638, 642, 646, 684, 685, 687, 688, 697, 699, 700, 701, 705, 706, 707, 708, 714, 770, 779, 781, 782, 783, 789, 791, 792, 799, 853, 863, 864, 878], "bad": [1, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 27, 28, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 49, 51, 58, 59, 64, 67, 68, 69, 70, 71, 72, 73, 75, 76, 79, 80, 81, 82, 84, 87, 89, 91, 92, 95, 96, 99, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 116, 120, 126, 127, 135, 136, 137, 140, 141, 142, 144, 145, 146, 149, 150, 151, 152, 162, 165, 166, 167, 168, 169, 170, 172, 176, 177, 180, 181, 182, 183, 184, 185, 191, 195, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 227, 228, 229, 230, 239, 240, 255, 257, 258, 260, 263, 264, 265, 266, 268, 297, 309, 312, 313, 318, 325, 328, 358, 362, 368, 369, 370, 411, 425, 430, 438, 447, 448, 450, 466, 477, 478, 517, 535, 549, 550, 551, 554, 555, 556, 557, 559, 560, 561, 564, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 585, 586, 591, 593, 600, 612, 615, 638, 639, 642, 665, 683, 697, 699, 700, 701, 705, 706, 707, 708, 710, 728, 769, 770, 775, 776, 779, 781, 782, 783, 790, 794, 798, 799, 817, 833, 844, 855, 857, 863, 878], "epoch": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 27, 32, 33, 34, 36, 45, 46, 49, 56, 59, 61, 68, 69, 70, 71, 72, 77, 79, 82, 83, 87, 89, 91, 92, 94, 95, 96, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 120, 121, 127, 129, 131, 135, 136, 141, 148, 150, 162, 167, 168, 169, 170, 177, 179, 180, 181, 182, 183, 184, 185, 188, 191, 194, 195, 198, 199, 202, 205, 206, 209, 211, 215, 216, 221, 222, 226, 227, 228, 229, 238, 239, 240, 250, 255, 256, 257, 258, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 274, 277, 278, 279, 280, 290, 291, 294, 312, 313, 316, 352, 353, 354, 356, 357, 358, 360, 393, 409, 411, 414, 415, 416, 417, 418, 421, 422, 423, 424, 425, 434, 435, 438, 439, 450, 468, 474, 477, 478, 483, 511, 516, 517, 522, 523, 524, 525, 526, 527, 528, 530, 531, 538, 540, 541, 552, 554, 556, 557, 558, 559, 565, 566, 569, 570, 573, 574, 575, 579, 584, 585, 600, 608, 609, 610, 611, 612, 619, 623, 639, 642, 651, 661, 682, 683, 697, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 715, 724, 725, 726, 727, 728, 729, 745, 769, 774, 775, 776, 777, 788, 789, 790, 792, 796, 798, 799, 806, 833, 837, 854, 855, 857, 863, 864, 866, 868, 878], "baselin": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 68, 70, 71, 72, 73, 74, 77, 79, 82, 83, 85, 86, 87, 89, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 111, 112, 113, 115, 116, 118, 119, 120, 123, 126, 127, 131, 135, 136, 137, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 160, 162, 165, 166, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 195, 198, 199, 200, 202, 203, 204, 206, 210, 211, 220, 222, 226, 227, 228, 229, 230, 233, 235, 239, 240, 243, 255, 258, 263, 264, 265, 266, 270, 271, 273, 274, 277, 278, 279, 352, 353, 358, 379, 450, 477, 478, 517, 522, 540, 541, 557, 573, 574, 592, 608, 615, 616, 682, 697, 700, 769, 785, 789, 802, 805, 824, 833, 853, 857, 860, 863, 868, 872, 878], "none": [1, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 68, 69, 70, 72, 75, 77, 80, 81, 82, 83, 85, 86, 87, 89, 92, 93, 95, 96, 98, 99, 102, 103, 106, 108, 109, 111, 112, 113, 116, 118, 119, 120, 123, 126, 131, 134, 135, 136, 137, 141, 142, 143, 144, 145, 149, 150, 151, 152, 158, 159, 160, 161, 162, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 191, 194, 195, 201, 202, 203, 204, 206, 207, 209, 210, 211, 216, 220, 221, 222, 225, 226, 227, 228, 229, 230, 233, 234, 235, 239, 240, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 315, 316, 317, 318, 320, 324, 325, 326, 327, 328, 329, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 457, 458, 459, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 550, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 588, 589, 591, 592, 593, 594, 597, 598, 599, 600, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 676, 682, 683, 684, 685, 686, 687, 688, 689, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 715, 716, 719, 720, 721, 723, 724, 725, 726, 727, 728, 729, 730, 732, 733, 734, 735, 737, 740, 744, 745, 748, 750, 753, 754, 755, 757, 758, 761, 762, 763, 764, 765, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 813, 814, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 837, 853, 859, 860, 878], "preload": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 32, 33, 34, 42, 49, 69, 70, 71, 72, 80, 81, 82, 83, 87, 98, 102, 106, 109, 111, 112, 113, 116, 120, 128, 132, 140, 141, 142, 144, 145, 146, 149, 151, 152, 159, 166, 167, 170, 172, 180, 182, 183, 184, 185, 188, 191, 195, 198, 200, 203, 204, 205, 206, 210, 214, 221, 222, 227, 228, 229, 230, 233, 235, 238, 239, 240, 255, 263, 264, 265, 266, 273, 346, 362, 476, 477, 478, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 517, 569, 570, 573, 574, 608, 610, 614, 639, 642, 697, 699, 700, 701, 775, 798, 853, 854, 878], "physiolog": [1, 8, 42, 137, 202, 204, 207, 243, 263, 264, 265, 266, 379, 401, 402, 477, 478, 642, 854, 878], "artifact": [1, 7, 27, 32, 42, 69, 76, 82, 83, 84, 108, 109, 142, 144, 146, 149, 165, 166, 172, 183, 191, 200, 201, 205, 207, 209, 210, 212, 213, 216, 217, 243, 257, 258, 261, 262, 263, 264, 265, 266, 268, 270, 271, 273, 274, 277, 278, 279, 343, 344, 354, 355, 356, 357, 358, 362, 411, 415, 422, 450, 475, 477, 478, 490, 492, 505, 548, 551, 554, 556, 557, 561, 562, 564, 569, 570, 571, 573, 574, 577, 578, 579, 581, 585, 588, 592, 600, 649, 650, 697, 700, 701, 722, 724, 725, 727, 728, 761, 787, 789, 796, 797, 798, 813, 817, 854, 857, 860, 866, 867, 878], "eyeblink": [1, 570, 574], "heartbeat": [1, 82, 142, 146, 200, 204, 205, 206, 207, 209, 216, 569, 573, 577, 580], "usssp": [1, 11, 15, 18, 27, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 67, 68, 70, 72, 83, 87, 89, 91, 92, 93, 94, 103, 106, 107, 108, 109, 120, 121, 129, 131, 140, 141, 142, 145, 146, 149, 151, 152, 162, 165, 166, 172, 176, 177, 178, 179, 180, 181, 182, 183, 191, 198, 199, 200, 202, 203, 204, 207, 209, 212, 213, 214, 217, 221, 230, 233, 235, 258, 260, 263, 264, 265, 266, 267, 268, 272, 273, 274, 354, 355, 356, 450, 477, 478, 517, 551, 554, 556, 569, 570, 573, 574, 600, 608, 617, 623, 638, 699, 701, 777, 779, 781, 783, 784, 796, 797, 799, 817, 833, 857, 863, 866, 867, 878], "add_proj": [1, 2, 4, 5, 42, 91, 100, 108, 110, 140, 142, 146, 149, 162, 172, 184, 185, 191, 195, 198, 203, 205, 206, 210, 211, 214, 226, 263, 264, 265, 266, 273, 477, 478, 661], "compute_proj_evok": [1, 205, 354, 356, 868], "copi": [1, 2, 4, 5, 8, 9, 10, 12, 18, 19, 22, 27, 38, 45, 46, 47, 48, 49, 54, 58, 61, 69, 72, 73, 77, 83, 106, 108, 113, 118, 126, 134, 136, 140, 141, 144, 149, 150, 151, 155, 161, 162, 166, 168, 169, 172, 176, 178, 185, 198, 199, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 214, 216, 222, 226, 229, 255, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 276, 277, 278, 279, 280, 286, 287, 301, 306, 308, 311, 316, 363, 369, 371, 376, 377, 378, 379, 381, 382, 384, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 418, 431, 434, 447, 448, 477, 478, 523, 537, 549, 550, 553, 556, 557, 566, 569, 570, 575, 579, 582, 586, 600, 609, 636, 639, 642, 694, 697, 698, 699, 700, 701, 703, 705, 706, 707, 708, 709, 714, 731, 732, 837, 845, 855, 857, 860, 863, 864, 878], "apply_proj": [1, 70, 93, 142, 146, 149, 159, 167, 182, 205, 206, 207, 263, 264, 265, 266, 439, 440, 441, 442, 477, 478, 642, 798, 878], "fix": [1, 5, 22, 31, 40, 41, 45, 47, 48, 49, 54, 55, 58, 60, 79, 89, 99, 134, 140, 142, 158, 163, 164, 165, 168, 170, 176, 180, 195, 210, 211, 221, 243, 256, 261, 262, 265, 266, 267, 274, 296, 297, 307, 319, 353, 360, 363, 422, 450, 452, 454, 468, 472, 474, 475, 477, 514, 518, 520, 524, 525, 526, 527, 528, 535, 536, 539, 540, 541, 557, 561, 565, 583, 605, 617, 628, 638, 703, 706, 713, 723, 724, 725, 727, 728, 761, 780, 825, 826, 831, 835, 837, 842, 856, 857, 860, 863, 878], "preprocess": [1, 4, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 67, 69, 70, 71, 72, 73, 74, 75, 79, 80, 81, 82, 83, 87, 98, 111, 134, 137, 144, 146, 172, 184, 188, 191, 194, 195, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 213, 217, 257, 263, 264, 265, 266, 268, 273, 352, 409, 413, 416, 418, 430, 438, 450, 477, 478, 496, 498, 505, 551, 554, 610, 701, 745, 765, 769, 775, 778, 783, 787, 788, 789, 790, 791, 792, 798, 833, 844, 854, 855, 857, 860, 864, 866, 868, 878], "fix_stim_artifact": [1, 868, 878], "correct": [1, 4, 8, 9, 11, 12, 16, 18, 21, 27, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 68, 70, 71, 72, 73, 76, 77, 79, 82, 84, 85, 86, 87, 89, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 115, 116, 118, 119, 120, 126, 127, 130, 131, 135, 136, 137, 140, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 156, 159, 160, 161, 162, 165, 166, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 220, 221, 222, 226, 227, 228, 229, 230, 233, 234, 235, 239, 240, 243, 255, 257, 258, 260, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 277, 278, 279, 286, 308, 319, 352, 353, 358, 364, 409, 415, 416, 421, 428, 430, 448, 450, 459, 477, 478, 483, 485, 489, 492, 505, 506, 522, 525, 540, 541, 554, 556, 557, 558, 567, 568, 573, 574, 576, 585, 588, 592, 599, 605, 612, 615, 616, 634, 636, 652, 653, 654, 655, 656, 657, 658, 659, 675, 678, 681, 682, 683, 684, 685, 686, 697, 699, 700, 701, 709, 716, 769, 776, 777, 783, 784, 788, 789, 797, 799, 800, 802, 805, 824, 826, 833, 835, 837, 842, 853, 856, 857, 860, 872, 875, 878], "delai": [1, 4, 19, 191, 194, 205, 206, 210, 243, 256, 258, 263, 264, 265, 266, 415, 421, 426, 445, 447, 448, 477, 478, 517, 608, 786, 854, 878], "due": [1, 5, 40, 43, 47, 80, 134, 168, 189, 190, 198, 200, 201, 205, 209, 210, 211, 214, 217, 221, 240, 259, 263, 264, 265, 266, 267, 269, 401, 408, 415, 426, 430, 443, 474, 475, 477, 478, 567, 568, 576, 582, 585, 599, 619, 625, 700, 745, 827, 833, 853, 857, 860, 878], "hardwar": [1, 166, 190, 200, 207, 256, 263, 264, 268, 374, 401, 477, 478, 557, 775, 792, 798, 833, 843, 860, 863, 878], "i": [1, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 21, 22, 26, 27, 28, 31, 32, 34, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 54, 59, 60, 63, 65, 68, 69, 70, 71, 72, 73, 74, 77, 78, 80, 81, 82, 86, 87, 89, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 108, 109, 111, 112, 113, 114, 115, 116, 118, 119, 122, 125, 126, 127, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 169, 171, 172, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 207, 208, 209, 210, 211, 214, 215, 216, 217, 220, 221, 222, 225, 226, 227, 229, 230, 233, 234, 235, 238, 239, 240, 243, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 295, 296, 297, 299, 301, 303, 305, 306, 307, 311, 313, 316, 317, 319, 321, 322, 323, 324, 326, 328, 329, 330, 336, 338, 340, 341, 342, 346, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 366, 368, 369, 370, 371, 372, 374, 376, 377, 378, 379, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 465, 466, 467, 468, 469, 472, 474, 475, 476, 477, 478, 479, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 514, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 539, 540, 541, 543, 544, 546, 547, 548, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 585, 586, 589, 590, 592, 593, 594, 599, 600, 602, 603, 605, 608, 609, 610, 611, 612, 613, 614, 615, 616, 619, 620, 622, 625, 628, 631, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 710, 713, 715, 716, 720, 722, 723, 724, 725, 726, 727, 728, 729, 730, 732, 735, 739, 740, 741, 743, 744, 745, 746, 748, 750, 753, 754, 755, 757, 758, 761, 762, 763, 766, 768, 769, 770, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 818, 823, 824, 826, 828, 831, 833, 836, 837, 838, 840, 842, 845, 848, 849, 851, 853, 854, 855, 856, 858, 859, 861, 862, 863, 864, 865, 866, 868, 878], "4": [1, 2, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 77, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 124, 126, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 156, 157, 158, 159, 160, 161, 162, 164, 166, 168, 169, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 191, 193, 194, 195, 197, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 238, 239, 240, 243, 255, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 277, 278, 279, 296, 297, 304, 305, 311, 312, 313, 334, 337, 353, 379, 387, 409, 415, 416, 417, 422, 428, 432, 433, 444, 450, 452, 467, 474, 475, 477, 478, 514, 524, 531, 556, 557, 562, 564, 566, 569, 571, 578, 584, 594, 600, 619, 638, 642, 646, 650, 657, 677, 678, 681, 685, 697, 699, 700, 701, 713, 716, 720, 723, 724, 725, 726, 727, 728, 729, 732, 733, 734, 735, 745, 748, 760, 761, 762, 764, 769, 775, 776, 777, 779, 781, 784, 785, 788, 795, 797, 798, 799, 800, 801, 803, 805, 807, 808, 809, 818, 833, 835, 836, 842, 843, 853, 854, 857, 860, 863], "m": [1, 2, 4, 5, 8, 16, 18, 19, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 39, 40, 41, 44, 45, 46, 48, 50, 51, 53, 54, 55, 57, 58, 59, 60, 68, 70, 71, 72, 77, 85, 86, 95, 96, 97, 98, 99, 100, 102, 104, 108, 109, 112, 113, 115, 118, 119, 122, 125, 126, 134, 135, 137, 140, 141, 143, 144, 145, 149, 150, 151, 156, 157, 158, 159, 161, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 194, 199, 200, 201, 204, 206, 208, 209, 211, 215, 216, 222, 225, 226, 227, 228, 229, 230, 233, 234, 235, 238, 239, 243, 255, 257, 258, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 274, 277, 278, 279, 299, 303, 304, 324, 329, 334, 336, 338, 340, 342, 343, 344, 346, 353, 358, 364, 372, 379, 386, 401, 402, 409, 411, 413, 415, 416, 417, 420, 430, 433, 445, 447, 448, 452, 470, 471, 474, 475, 477, 478, 480, 493, 513, 521, 524, 532, 535, 539, 556, 557, 559, 565, 566, 568, 571, 573, 574, 576, 583, 585, 590, 593, 609, 646, 650, 654, 657, 659, 662, 667, 668, 669, 671, 672, 678, 683, 684, 685, 687, 688, 692, 697, 699, 700, 701, 713, 723, 726, 729, 745, 748, 762, 769, 777, 779, 780, 781, 784, 785, 788, 797, 798, 800, 803, 805, 807, 808, 809, 813, 815, 833, 837, 844, 852, 854, 860, 863, 864, 878], "shift_tim": [1, 85, 140, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 697, 700, 878], "004": [1, 10, 32, 33, 44, 120, 127, 140, 142, 145, 149, 166, 169, 176, 203, 222, 243, 275, 359, 521, 745], "result": [1, 8, 9, 26, 29, 30, 45, 46, 55, 58, 60, 69, 79, 82, 89, 98, 100, 102, 106, 113, 125, 126, 133, 134, 136, 137, 144, 146, 149, 151, 155, 156, 157, 159, 160, 162, 166, 167, 170, 172, 176, 178, 188, 194, 195, 198, 201, 203, 204, 205, 206, 208, 214, 215, 217, 220, 222, 225, 226, 229, 230, 233, 234, 235, 243, 255, 257, 258, 263, 264, 265, 266, 268, 270, 271, 274, 275, 277, 278, 279, 288, 290, 297, 313, 316, 317, 352, 353, 358, 360, 362, 386, 388, 408, 410, 411, 425, 434, 443, 449, 467, 472, 474, 475, 477, 478, 494, 510, 517, 521, 524, 526, 527, 528, 530, 535, 536, 543, 557, 562, 568, 573, 574, 576, 583, 585, 602, 608, 616, 639, 649, 650, 651, 660, 661, 663, 682, 683, 684, 685, 686, 687, 688, 689, 697, 699, 700, 701, 745, 753, 769, 775, 776, 798, 837, 842, 853, 854, 857, 860, 863, 878], "time_unit": [1, 11, 14, 35, 40, 42, 43, 51, 59, 61, 68, 70, 85, 91, 92, 98, 99, 100, 120, 150, 151, 152, 162, 175, 177, 178, 183, 184, 185, 191, 195, 221, 226, 227, 228, 262, 265, 266, 270, 271, 274, 277, 278, 279, 769, 779, 781, 784, 785, 803, 808, 878], "": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 24, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 55, 58, 59, 61, 63, 68, 69, 70, 71, 72, 73, 74, 75, 79, 80, 81, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 111, 112, 114, 115, 116, 118, 119, 120, 122, 124, 125, 126, 127, 128, 131, 132, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 220, 221, 222, 225, 226, 227, 228, 229, 230, 233, 234, 235, 238, 239, 240, 243, 254, 255, 257, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 287, 289, 296, 297, 301, 302, 303, 320, 327, 352, 353, 356, 357, 359, 365, 366, 383, 384, 386, 401, 402, 409, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 430, 433, 439, 440, 441, 442, 443, 445, 447, 448, 449, 468, 471, 474, 475, 477, 478, 482, 485, 492, 494, 499, 500, 508, 512, 516, 519, 521, 523, 524, 535, 539, 540, 541, 556, 557, 558, 559, 568, 574, 575, 578, 579, 584, 585, 589, 592, 615, 616, 625, 627, 628, 629, 630, 634, 635, 637, 639, 642, 643, 645, 646, 647, 654, 657, 659, 674, 683, 684, 685, 686, 687, 688, 692, 693, 695, 697, 698, 699, 700, 701, 709, 713, 715, 716, 721, 723, 725, 726, 728, 729, 732, 737, 744, 745, 753, 754, 762, 763, 769, 771, 773, 775, 776, 779, 781, 782, 784, 785, 786, 788, 792, 798, 800, 801, 803, 805, 806, 807, 808, 809, 813, 827, 828, 833, 835, 837, 841, 843, 849, 852, 853, 854, 855, 857, 859, 860, 862, 863, 864, 865, 866], "topomap": [1, 19, 42, 72, 82, 86, 118, 142, 151, 170, 203, 206, 230, 239, 260, 263, 264, 265, 266, 272, 273, 311, 409, 416, 477, 478, 556, 557, 571, 697, 699, 701, 762, 775, 777, 779, 782, 784, 788, 795, 796, 797, 798, 799, 800, 801, 805, 807, 833, 878], "plot_topomap": [1, 15, 16, 18, 19, 21, 42, 69, 70, 79, 86, 99, 108, 141, 142, 144, 150, 151, 166, 170, 176, 177, 191, 198, 206, 210, 217, 230, 238, 239, 240, 260, 263, 264, 265, 266, 272, 477, 478, 557, 697, 699, 701, 765, 777, 782, 790, 868, 878], "time": [1, 2, 4, 5, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 63, 64, 65, 67, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 89, 91, 92, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 141, 143, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 188, 190, 191, 194, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 215, 216, 217, 220, 221, 222, 225, 226, 229, 233, 234, 235, 238, 243, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 295, 296, 340, 341, 342, 343, 344, 345, 346, 347, 349, 352, 353, 356, 358, 359, 360, 362, 372, 401, 409, 410, 411, 412, 415, 416, 418, 419, 420, 421, 422, 423, 425, 432, 433, 435, 437, 438, 443, 445, 447, 448, 450, 451, 452, 462, 467, 472, 473, 474, 475, 476, 477, 478, 490, 492, 497, 505, 510, 512, 518, 519, 523, 524, 525, 527, 528, 530, 531, 532, 535, 536, 538, 540, 541, 548, 552, 554, 556, 557, 559, 560, 561, 562, 565, 566, 567, 569, 570, 571, 573, 574, 575, 576, 578, 579, 583, 593, 599, 602, 606, 607, 611, 612, 615, 616, 617, 619, 625, 645, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 671, 672, 673, 677, 682, 683, 684, 685, 686, 687, 688, 689, 690, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 711, 713, 716, 722, 723, 724, 725, 726, 727, 728, 729, 744, 745, 749, 759, 762, 768, 769, 772, 773, 775, 776, 777, 778, 779, 780, 781, 782, 784, 785, 786, 787, 788, 789, 792, 796, 797, 798, 799, 800, 803, 804, 805, 806, 807, 808, 809, 823, 833, 835, 836, 841, 843, 844, 849, 853, 854, 855, 857, 859, 860, 863, 864, 868, 878], "arraidirectori": [1, 12, 21, 33, 34, 80, 81, 93, 94, 115, 118, 122, 155, 156, 161, 166, 171, 172, 184, 191, 255, 261, 268, 269, 270, 273, 274, 277, 278, 279, 302, 306, 307, 308, 311, 359, 364, 365, 366, 371, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 428, 459, 461, 465, 467, 468, 469, 470, 471, 484, 490, 503, 506, 510, 514, 516, 543, 582, 602, 616, 620, 622, 629, 635, 636, 637, 640, 645, 646, 660, 663, 674, 692, 693, 737, 745, 761, 763, 773, 803, 809, 818, 828, 837, 840, 843, 853, 857, 878], "home": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 130, 131, 132, 134, 135, 137, 140, 141, 143, 144, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 162, 166, 167, 168, 169, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 195, 198, 202, 203, 204, 205, 206, 208, 209, 210, 214, 217, 221, 222, 226, 227, 228, 229, 230, 233, 235, 239, 263, 264, 371, 379, 477, 478, 775, 798, 836, 842, 878], "circleci": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 130, 131, 132, 134, 135, 137, 140, 141, 143, 144, 146, 149, 150, 151, 152, 156, 157, 158, 159, 162, 166, 167, 168, 169, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 195, 198, 202, 203, 204, 205, 206, 208, 209, 210, 214, 217, 221, 222, 226, 227, 228, 229, 230, 233, 235, 239, 837], "mne_data": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 130, 131, 132, 134, 135, 137, 141, 143, 144, 146, 149, 150, 151, 152, 156, 157, 158, 159, 162, 166, 167, 168, 169, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 195, 198, 202, 203, 204, 205, 206, 208, 209, 210, 214, 217, 221, 222, 226, 227, 228, 229, 230, 233, 235, 239, 376, 377, 378, 379, 381, 382, 384, 385, 389, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 837, 857, 878], "data": [1, 2, 3, 6, 9, 10, 12, 14, 16, 17, 20, 22, 24, 26, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 71, 73, 75, 76, 77, 78, 81, 82, 83, 84, 86, 87, 90, 97, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 116, 117, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 138, 139, 143, 144, 145, 148, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 170, 171, 173, 174, 176, 179, 181, 182, 183, 184, 185, 186, 187, 193, 195, 196, 197, 198, 199, 201, 204, 205, 206, 207, 208, 209, 212, 213, 219, 223, 224, 225, 227, 228, 232, 236, 237, 239, 241, 242, 243, 250, 254, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 301, 302, 308, 309, 310, 311, 312, 313, 315, 317, 319, 323, 325, 326, 327, 328, 329, 334, 336, 337, 338, 340, 342, 344, 345, 346, 347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 365, 368, 369, 370, 372, 376, 377, 378, 379, 380, 381, 382, 384, 385, 387, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 432, 433, 435, 436, 437, 438, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 461, 466, 468, 472, 474, 475, 476, 477, 478, 479, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 513, 514, 515, 516, 517, 518, 519, 520, 523, 524, 525, 526, 527, 530, 531, 532, 535, 538, 539, 540, 541, 548, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 600, 603, 604, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 623, 625, 627, 629, 630, 639, 642, 645, 646, 647, 648, 649, 650, 651, 653, 655, 656, 657, 661, 663, 665, 669, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 692, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 715, 716, 724, 725, 726, 727, 728, 729, 733, 739, 740, 745, 749, 753, 758, 760, 761, 762, 763, 764, 766, 767, 769, 770, 772, 773, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 796, 797, 798, 799, 800, 802, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 815, 817, 824, 831, 832, 833, 834, 837, 838, 844, 849, 852, 855, 858, 859, 864, 865, 866, 868, 873, 878], "res4": [1, 12, 21, 80, 81, 118, 122, 184, 191], "read": [1, 2, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 70, 71, 72, 73, 74, 75, 77, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 135, 136, 140, 141, 142, 143, 144, 146, 149, 151, 152, 156, 157, 158, 159, 160, 161, 162, 166, 167, 169, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 217, 220, 221, 222, 226, 227, 228, 229, 234, 239, 255, 256, 257, 258, 260, 263, 264, 265, 266, 268, 274, 276, 296, 297, 300, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 350, 353, 357, 358, 368, 369, 370, 372, 409, 416, 417, 441, 450, 451, 452, 453, 457, 459, 462, 468, 472, 474, 475, 476, 477, 478, 481, 482, 483, 484, 485, 489, 490, 491, 492, 493, 494, 496, 497, 499, 501, 502, 503, 507, 508, 523, 535, 537, 538, 546, 559, 579, 595, 596, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 630, 631, 632, 634, 635, 637, 644, 650, 698, 717, 719, 737, 753, 761, 785, 813, 824, 825, 833, 837, 840, 845, 853, 855, 860, 861, 864, 866, 868, 878], "hc": [1, 12, 21, 80, 81, 118, 122, 184, 191], "separ": [1, 10, 12, 16, 21, 32, 33, 45, 47, 69, 73, 80, 81, 82, 93, 118, 122, 135, 140, 141, 142, 145, 146, 149, 150, 151, 155, 156, 160, 161, 162, 165, 168, 175, 184, 189, 191, 195, 198, 201, 203, 204, 205, 206, 208, 212, 213, 214, 215, 216, 233, 235, 238, 243, 245, 255, 257, 258, 263, 264, 265, 266, 268, 272, 273, 296, 297, 323, 341, 343, 344, 346, 347, 350, 354, 355, 356, 361, 370, 384, 391, 409, 416, 430, 442, 472, 477, 478, 493, 500, 516, 518, 557, 567, 568, 569, 570, 573, 576, 583, 585, 599, 609, 616, 646, 652, 653, 654, 655, 656, 657, 658, 659, 684, 685, 687, 688, 699, 700, 701, 702, 703, 704, 727, 728, 735, 745, 750, 768, 769, 775, 776, 777, 784, 785, 787, 792, 797, 798, 799, 833, 835, 837, 841, 853, 854, 855, 857, 860, 863, 866, 878], "posit": [1, 4, 12, 19, 21, 24, 27, 38, 39, 41, 45, 69, 74, 77, 78, 79, 81, 82, 89, 92, 93, 94, 100, 111, 118, 121, 122, 126, 129, 134, 135, 136, 150, 151, 156, 158, 159, 160, 170, 175, 176, 178, 183, 184, 185, 188, 190, 191, 198, 199, 203, 205, 209, 211, 222, 225, 229, 233, 240, 243, 255, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 277, 278, 279, 289, 303, 305, 311, 312, 313, 324, 327, 329, 331, 334, 337, 341, 343, 344, 349, 350, 351, 353, 365, 380, 388, 409, 412, 415, 416, 419, 421, 428, 429, 430, 437, 451, 452, 461, 468, 477, 478, 490, 493, 497, 500, 501, 507, 519, 556, 557, 561, 562, 564, 571, 576, 578, 583, 585, 607, 609, 646, 648, 649, 650, 654, 655, 656, 657, 658, 659, 660, 662, 665, 666, 681, 697, 699, 700, 701, 712, 720, 721, 745, 746, 750, 758, 761, 762, 764, 769, 775, 776, 777, 780, 782, 783, 784, 787, 788, 794, 797, 798, 800, 801, 803, 805, 806, 807, 809, 813, 815, 833, 837, 853, 854, 860, 863, 867, 878], "file": [1, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 40, 41, 42, 43, 44, 45, 46, 49, 56, 59, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 75, 78, 79, 80, 81, 82, 83, 84, 87, 90, 91, 92, 93, 95, 96, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 117, 118, 119, 120, 122, 126, 127, 128, 129, 131, 132, 134, 135, 137, 139, 140, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 156, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 171, 174, 177, 180, 181, 182, 183, 184, 185, 187, 188, 190, 191, 193, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 217, 219, 221, 222, 224, 227, 228, 229, 230, 232, 233, 235, 237, 239, 242, 250, 257, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 287, 300, 302, 303, 306, 307, 308, 311, 312, 317, 319, 320, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 341, 343, 356, 361, 362, 364, 365, 366, 371, 379, 383, 384, 385, 386, 392, 401, 402, 428, 430, 438, 439, 440, 441, 442, 450, 451, 457, 458, 459, 461, 462, 466, 468, 469, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 516, 517, 519, 520, 530, 537, 538, 542, 546, 547, 556, 557, 567, 568, 569, 570, 576, 582, 585, 595, 596, 597, 598, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 640, 641, 643, 646, 648, 649, 650, 662, 665, 674, 692, 695, 696, 697, 698, 699, 700, 701, 717, 718, 719, 730, 732, 734, 739, 745, 753, 761, 763, 798, 809, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 835, 836, 837, 842, 843, 844, 849, 854, 864, 868, 878], "present": [1, 4, 10, 12, 13, 16, 21, 31, 40, 43, 44, 68, 81, 115, 118, 122, 125, 133, 140, 142, 144, 149, 150, 158, 166, 168, 169, 170, 180, 188, 189, 191, 198, 199, 203, 205, 206, 207, 209, 215, 217, 225, 229, 233, 234, 235, 243, 255, 256, 258, 260, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 282, 283, 284, 287, 296, 297, 301, 306, 311, 317, 319, 328, 333, 342, 346, 353, 357, 358, 359, 367, 368, 369, 370, 390, 409, 416, 428, 430, 433, 438, 450, 451, 452, 453, 457, 472, 474, 475, 477, 478, 485, 488, 492, 499, 516, 523, 535, 554, 556, 557, 559, 560, 567, 568, 571, 573, 577, 585, 593, 612, 613, 661, 666, 682, 697, 699, 700, 701, 715, 732, 745, 761, 762, 768, 769, 775, 777, 779, 781, 784, 785, 788, 795, 797, 798, 799, 800, 801, 804, 805, 807, 833, 843, 853, 854, 860, 863, 878], "quaternion": [1, 12, 21, 80, 81, 118, 122, 184, 191, 349, 350, 351, 561, 564, 736, 738, 787, 878], "match": [1, 4, 8, 9, 11, 12, 17, 18, 20, 21, 27, 28, 31, 32, 33, 34, 40, 41, 45, 46, 47, 49, 51, 58, 59, 61, 68, 70, 71, 72, 73, 79, 80, 81, 82, 87, 89, 92, 93, 94, 95, 96, 99, 100, 102, 103, 106, 107, 108, 109, 111, 112, 113, 116, 118, 120, 122, 127, 131, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 151, 152, 157, 161, 162, 166, 169, 172, 177, 180, 182, 183, 184, 185, 191, 194, 198, 199, 200, 202, 203, 206, 210, 211, 214, 215, 216, 220, 221, 222, 226, 227, 228, 229, 230, 233, 235, 239, 256, 258, 260, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 277, 278, 279, 316, 328, 353, 357, 364, 368, 369, 409, 410, 415, 416, 417, 419, 425, 430, 433, 434, 436, 438, 440, 441, 443, 459, 476, 477, 478, 485, 492, 499, 543, 546, 549, 554, 556, 557, 566, 567, 571, 576, 586, 599, 609, 611, 612, 632, 635, 647, 662, 683, 688, 692, 697, 698, 699, 700, 701, 713, 714, 723, 735, 769, 775, 776, 777, 781, 784, 785, 788, 791, 797, 798, 799, 800, 824, 837, 841, 860, 878], "desir": [1, 5, 11, 12, 21, 22, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 67, 69, 80, 81, 89, 91, 92, 93, 94, 100, 103, 106, 107, 109, 111, 118, 122, 123, 126, 130, 142, 146, 151, 157, 161, 166, 168, 170, 172, 177, 178, 179, 180, 181, 184, 188, 189, 191, 194, 195, 199, 200, 201, 202, 205, 215, 221, 222, 233, 235, 256, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 359, 408, 433, 444, 477, 478, 518, 535, 556, 579, 594, 642, 697, 699, 700, 701, 731, 745, 808, 843, 853, 855, 857, 863, 878], "v": [1, 4, 8, 9, 12, 13, 21, 24, 27, 28, 32, 43, 54, 55, 63, 65, 69, 74, 80, 81, 104, 105, 118, 122, 126, 131, 137, 141, 171, 172, 178, 184, 191, 194, 198, 201, 205, 226, 229, 230, 235, 238, 243, 255, 258, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 274, 277, 278, 279, 282, 286, 287, 297, 301, 319, 343, 358, 372, 379, 415, 416, 417, 430, 477, 478, 523, 532, 557, 565, 568, 573, 574, 576, 585, 592, 683, 697, 699, 700, 701, 709, 715, 724, 727, 728, 729, 732, 749, 833, 837, 841, 853, 860, 863, 878], "transform": [1, 5, 7, 8, 11, 12, 14, 16, 19, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 67, 73, 76, 78, 80, 81, 82, 84, 87, 89, 91, 92, 93, 94, 102, 103, 106, 107, 108, 109, 111, 112, 114, 118, 122, 123, 124, 126, 130, 134, 135, 145, 150, 155, 157, 158, 159, 166, 167, 169, 170, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 191, 204, 207, 214, 221, 222, 238, 240, 243, 255, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 303, 311, 314, 315, 325, 353, 359, 360, 362, 364, 365, 366, 372, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 422, 423, 424, 427, 428, 430, 450, 452, 460, 468, 469, 470, 471, 477, 478, 484, 507, 516, 519, 520, 530, 531, 540, 541, 557, 558, 561, 564, 566, 568, 576, 582, 585, 586, 617, 621, 629, 630, 637, 642, 662, 665, 682, 692, 694, 699, 701, 703, 706, 712, 713, 716, 720, 721, 722, 723, 724, 725, 726, 729, 731, 745, 761, 762, 809, 815, 824, 825, 832, 833, 844, 853, 854, 857, 867, 868, 878], "84": [1, 11, 13, 19, 34, 35, 41, 47, 58, 78, 80, 107, 108, 111, 113, 118, 128, 134, 136, 151, 169, 195, 199, 208, 225, 226, 227, 229, 230, 233, 234, 235, 243, 486, 589], "69": [1, 13, 15, 19, 35, 40, 47, 49, 78, 80, 81, 95, 102, 107, 111, 113, 118, 137, 140, 143, 169, 176, 180, 184, 185, 191, 194, 195, 203, 208, 225, 226, 227, 229, 230, 233, 235, 243, 263, 264, 296, 401], "49": [1, 5, 13, 19, 20, 28, 30, 31, 34, 35, 38, 39, 40, 41, 44, 45, 47, 48, 50, 51, 54, 55, 57, 58, 59, 60, 77, 80, 85, 86, 102, 107, 111, 112, 113, 115, 118, 119, 122, 126, 149, 150, 154, 169, 172, 176, 178, 179, 180, 181, 184, 185, 187, 191, 194, 195, 208, 209, 210, 216, 222, 225, 226, 227, 229, 230, 234, 235, 243, 743, 836, 878], "00": [1, 2, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 24, 25, 26, 33, 34, 41, 42, 44, 45, 46, 50, 56, 59, 66, 69, 70, 71, 72, 75, 80, 81, 82, 83, 84, 87, 89, 90, 92, 95, 98, 100, 101, 102, 103, 105, 107, 108, 111, 112, 113, 114, 118, 120, 122, 126, 129, 132, 136, 139, 141, 143, 144, 146, 148, 151, 154, 156, 157, 158, 159, 160, 164, 167, 168, 169, 172, 174, 176, 180, 181, 182, 183, 184, 185, 187, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 222, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 242, 243, 524, 556, 565], "mm": [1, 4, 5, 12, 21, 24, 26, 41, 44, 45, 50, 69, 70, 72, 75, 77, 79, 80, 81, 82, 89, 92, 93, 94, 108, 118, 122, 126, 134, 136, 141, 146, 151, 156, 157, 158, 159, 160, 161, 167, 168, 176, 178, 180, 181, 182, 183, 184, 185, 191, 198, 199, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 221, 222, 255, 261, 268, 270, 271, 274, 277, 278, 279, 304, 334, 336, 338, 359, 364, 428, 452, 461, 467, 470, 471, 489, 493, 510, 520, 609, 645, 646, 735, 737, 744, 745, 803, 808, 813, 853, 860, 878], "orig": [1, 12, 21, 80, 81, 118, 122, 160, 184, 191, 199, 537, 549, 550, 555], "44": [1, 13, 19, 28, 35, 41, 45, 46, 47, 80, 102, 103, 107, 111, 112, 113, 115, 118, 158, 168, 169, 176, 180, 181, 184, 191, 193, 194, 195, 201, 208, 209, 225, 226, 227, 229, 230, 234, 235, 243, 296, 297, 430, 472, 684, 685, 687, 688, 878], "30": [1, 5, 7, 8, 9, 11, 12, 13, 14, 19, 24, 28, 33, 34, 35, 41, 42, 45, 46, 47, 50, 58, 69, 72, 73, 75, 78, 80, 81, 82, 89, 90, 91, 92, 93, 96, 100, 102, 103, 106, 107, 108, 111, 112, 113, 114, 118, 122, 126, 134, 136, 144, 146, 156, 157, 158, 160, 164, 166, 169, 171, 172, 183, 184, 194, 195, 198, 200, 201, 203, 204, 206, 207, 208, 210, 214, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 238, 240, 243, 255, 263, 264, 265, 266, 274, 276, 302, 306, 334, 353, 477, 478, 508, 556, 560, 565, 576, 650, 661, 662, 699, 701, 713, 723, 724, 726, 727, 729, 749, 753, 777, 835, 853, 854, 860, 863, 878], "51": [1, 5, 8, 13, 19, 28, 34, 35, 41, 45, 47, 56, 69, 70, 79, 80, 81, 102, 103, 107, 108, 111, 113, 118, 126, 137, 152, 156, 158, 169, 171, 172, 174, 184, 185, 191, 195, 200, 204, 207, 208, 209, 214, 225, 226, 227, 229, 230, 232, 234, 235, 243, 273, 379, 585, 854, 878], "45": [1, 5, 8, 9, 11, 15, 16, 19, 20, 28, 35, 45, 50, 80, 83, 102, 107, 108, 111, 112, 113, 118, 120, 122, 134, 139, 141, 143, 144, 145, 149, 156, 157, 158, 168, 169, 176, 180, 181, 183, 187, 191, 194, 195, 201, 203, 204, 206, 207, 208, 209, 216, 225, 226, 227, 229, 230, 233, 234, 235, 240, 257, 263, 264, 265, 266, 296, 297, 334, 353, 357, 358, 368, 369, 370, 409, 416, 444, 452, 453, 472, 474, 475, 477, 478, 535, 557, 678, 699, 701, 749, 777, 785, 860, 878], "252": [1, 35, 118, 122, 169, 208, 225, 230], "43": [1, 13, 19, 26, 28, 34, 35, 41, 43, 45, 46, 47, 48, 50, 54, 55, 80, 81, 102, 106, 107, 111, 113, 118, 122, 137, 139, 145, 157, 158, 169, 176, 177, 181, 182, 187, 194, 195, 208, 225, 226, 227, 228, 229, 230, 234, 235, 243, 263, 264, 334, 699, 700], "diff": [1, 9, 12, 21, 69, 80, 81, 118, 122, 133, 176, 183, 184, 191, 214, 233, 753, 845], "000": [1, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 34, 42, 59, 63, 65, 69, 70, 71, 72, 73, 74, 75, 79, 80, 81, 82, 83, 87, 89, 92, 93, 94, 98, 108, 111, 112, 113, 114, 118, 120, 122, 127, 128, 129, 132, 134, 136, 140, 141, 142, 143, 144, 146, 149, 151, 152, 159, 166, 167, 168, 172, 179, 181, 182, 183, 184, 185, 190, 191, 193, 195, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 215, 216, 217, 220, 222, 226, 228, 229, 230, 239, 501, 611], "46": [1, 12, 13, 19, 21, 28, 33, 34, 35, 40, 45, 47, 51, 55, 71, 80, 102, 107, 111, 113, 118, 122, 149, 150, 154, 169, 195, 200, 201, 203, 208, 216, 225, 226, 227, 229, 230, 235, 237, 243, 860, 878], "28": [1, 11, 18, 19, 26, 28, 34, 35, 41, 45, 46, 47, 50, 56, 78, 80, 102, 107, 108, 111, 113, 118, 119, 129, 140, 158, 159, 164, 169, 171, 176, 181, 182, 183, 184, 185, 187, 194, 195, 200, 202, 208, 225, 226, 227, 229, 230, 233, 234, 235, 239, 242, 243, 334, 878], "53": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 28, 32, 33, 34, 35, 40, 41, 42, 45, 46, 47, 72, 75, 80, 81, 82, 83, 87, 93, 98, 102, 107, 111, 112, 113, 114, 118, 120, 122, 132, 136, 141, 144, 145, 146, 151, 155, 156, 162, 164, 169, 184, 191, 194, 195, 201, 202, 203, 204, 208, 209, 210, 211, 213, 216, 225, 226, 227, 229, 230, 235, 243, 678, 857], "58": [1, 11, 13, 19, 35, 40, 45, 47, 48, 49, 54, 55, 57, 58, 59, 77, 80, 89, 92, 93, 102, 107, 108, 111, 113, 115, 118, 120, 126, 136, 137, 149, 151, 152, 162, 169, 172, 178, 182, 191, 194, 195, 198, 204, 206, 208, 214, 225, 226, 229, 230, 243, 353, 860, 878], "243": [1, 80, 118, 169, 191, 208, 230], "47": [1, 10, 16, 19, 28, 33, 35, 45, 51, 78, 80, 83, 102, 107, 111, 113, 118, 137, 146, 148, 159, 168, 169, 181, 183, 195, 208, 216, 225, 226, 227, 229, 230, 234, 235, 243, 299, 334, 402, 853, 854, 860], "86": [1, 5, 12, 13, 15, 19, 26, 34, 35, 40, 41, 47, 50, 80, 102, 107, 111, 113, 118, 137, 140, 151, 156, 157, 158, 168, 169, 172, 176, 181, 182, 184, 194, 195, 202, 204, 206, 207, 208, 211, 215, 225, 226, 227, 229, 230, 235, 243, 416, 711, 713, 723, 727, 852], "41": [1, 13, 19, 28, 34, 35, 44, 45, 47, 80, 81, 95, 102, 107, 113, 118, 168, 169, 183, 184, 191, 195, 204, 206, 207, 208, 214, 225, 226, 227, 229, 230, 233, 234, 235, 240, 243, 275, 359, 401, 409, 878], "63": [1, 13, 19, 35, 45, 47, 69, 78, 80, 81, 94, 100, 102, 107, 111, 113, 116, 118, 137, 143, 169, 184, 185, 191, 194, 195, 208, 225, 226, 227, 229, 230, 232, 233, 234, 235, 878], "55": [1, 11, 13, 19, 21, 28, 30, 31, 32, 35, 38, 39, 40, 41, 44, 45, 46, 48, 50, 54, 55, 57, 58, 60, 77, 78, 80, 85, 86, 100, 102, 107, 108, 111, 113, 115, 118, 119, 123, 126, 143, 148, 149, 151, 160, 169, 171, 172, 177, 178, 180, 181, 195, 203, 204, 206, 208, 210, 216, 225, 226, 227, 229, 230, 233, 234, 235, 243, 409, 417, 524, 556, 557, 600, 835, 878], "82": [1, 19, 35, 46, 80, 102, 111, 113, 118, 145, 169, 180, 181, 184, 191, 194, 195, 208, 225, 226, 227, 229, 230, 234, 235, 239, 401, 444], "230": [1, 13, 80, 87, 118, 169, 225, 229, 230], "26": [1, 5, 11, 13, 16, 19, 28, 32, 34, 35, 44, 45, 47, 56, 64, 75, 78, 80, 81, 84, 92, 100, 102, 107, 108, 113, 118, 125, 136, 137, 145, 158, 169, 171, 183, 184, 185, 191, 195, 208, 211, 213, 221, 224, 225, 226, 227, 229, 230, 233, 235, 243, 275, 276, 359, 392, 524, 854], "coordin": [1, 5, 11, 12, 21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 67, 70, 78, 80, 81, 89, 91, 92, 93, 94, 103, 106, 107, 108, 109, 114, 118, 122, 123, 126, 130, 134, 135, 136, 150, 158, 159, 163, 164, 165, 166, 170, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 191, 195, 207, 209, 211, 221, 222, 233, 235, 243, 260, 261, 263, 264, 265, 266, 267, 268, 269, 272, 276, 278, 279, 301, 303, 304, 305, 311, 314, 315, 320, 324, 327, 329, 330, 332, 334, 338, 363, 364, 366, 388, 409, 416, 428, 430, 452, 460, 468, 470, 471, 474, 477, 478, 481, 484, 488, 489, 501, 507, 509, 516, 521, 556, 557, 568, 571, 576, 585, 617, 627, 628, 630, 631, 646, 650, 674, 677, 697, 699, 701, 731, 732, 744, 745, 746, 761, 762, 763, 769, 773, 777, 779, 781, 783, 784, 785, 787, 788, 795, 797, 799, 800, 801, 805, 807, 813, 815, 825, 826, 831, 833, 854, 878], "establish": [1, 12, 21, 80, 81, 118, 122, 184, 188, 191, 201, 230, 243, 684, 685, 687, 688], "digit": [1, 70, 72, 75, 80, 81, 82, 89, 92, 117, 118, 122, 126, 134, 141, 146, 151, 156, 157, 159, 160, 167, 168, 169, 182, 185, 188, 189, 191, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 220, 222, 243, 255, 256, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 274, 277, 278, 279, 304, 305, 311, 324, 325, 327, 329, 332, 333, 336, 338, 340, 341, 343, 364, 409, 416, 428, 430, 450, 468, 477, 478, 481, 484, 490, 501, 509, 516, 521, 556, 557, 566, 567, 568, 571, 576, 585, 611, 612, 646, 697, 699, 700, 701, 745, 761, 762, 769, 777, 779, 781, 784, 785, 788, 795, 797, 799, 800, 801, 805, 807, 815, 833, 853, 854, 863, 878], "point": [1, 5, 8, 9, 11, 12, 16, 18, 21, 22, 26, 27, 32, 33, 34, 36, 38, 41, 42, 44, 45, 46, 49, 54, 55, 56, 58, 60, 70, 71, 72, 75, 78, 80, 81, 82, 89, 92, 93, 95, 96, 99, 100, 102, 106, 108, 109, 111, 112, 113, 114, 116, 118, 119, 120, 122, 126, 127, 133, 134, 135, 136, 137, 140, 141, 142, 144, 145, 146, 149, 150, 151, 152, 156, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 191, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 239, 240, 243, 255, 256, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 296, 297, 304, 305, 311, 314, 315, 320, 324, 329, 333, 334, 335, 336, 338, 341, 347, 349, 353, 358, 359, 363, 364, 366, 408, 409, 410, 411, 415, 416, 418, 425, 428, 430, 443, 445, 447, 450, 468, 471, 472, 476, 477, 478, 480, 481, 484, 490, 496, 501, 509, 519, 520, 521, 523, 524, 533, 534, 535, 536, 538, 539, 556, 557, 559, 567, 568, 571, 576, 585, 606, 610, 611, 614, 615, 617, 620, 625, 628, 631, 642, 645, 646, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 664, 671, 673, 682, 683, 684, 685, 687, 688, 689, 697, 698, 699, 700, 701, 715, 716, 745, 746, 749, 750, 761, 762, 763, 764, 769, 773, 777, 779, 780, 781, 782, 784, 785, 788, 789, 792, 795, 797, 799, 800, 801, 803, 804, 805, 807, 808, 809, 813, 826, 831, 833, 837, 853, 855, 857, 859, 863, 866, 878], "subj00111092011": [1, 118], "po": [1, 19, 41, 47, 50, 78, 79, 80, 81, 83, 92, 114, 118, 136, 151, 156, 176, 183, 184, 185, 191, 207, 209, 261, 265, 266, 269, 270, 271, 274, 277, 278, 279, 303, 312, 337, 350, 351, 429, 452, 470, 471, 490, 561, 564, 619, 646, 787, 807, 863, 878], "polhemu": [1, 12, 21, 80, 81, 118, 122, 156, 170, 184, 191, 268, 311, 336, 338, 490, 501, 860, 863, 878], "hpi": [1, 12, 21, 80, 81, 118, 122, 156, 166, 169, 170, 184, 188, 191, 198, 209, 214, 255, 263, 264, 265, 266, 268, 304, 305, 311, 314, 324, 334, 336, 340, 341, 342, 345, 346, 347, 364, 428, 429, 477, 478, 484, 501, 554, 561, 697, 699, 700, 701, 768, 833, 860, 863, 867, 878], "coil": [1, 5, 12, 21, 26, 41, 45, 50, 80, 81, 108, 118, 122, 123, 150, 156, 158, 159, 176, 181, 182, 183, 184, 185, 188, 191, 198, 207, 208, 209, 255, 263, 264, 265, 266, 268, 319, 334, 340, 341, 343, 344, 345, 347, 348, 429, 452, 477, 478, 484, 501, 554, 567, 568, 585, 596, 611, 639, 697, 699, 700, 701, 739, 768, 833, 867, 878], "ad": [1, 4, 5, 11, 12, 21, 22, 27, 28, 29, 31, 35, 38, 39, 40, 41, 42, 43, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 67, 69, 70, 80, 81, 89, 91, 92, 93, 94, 100, 103, 106, 107, 109, 118, 119, 122, 123, 126, 130, 134, 140, 141, 142, 146, 151, 156, 158, 159, 160, 161, 162, 166, 170, 175, 177, 178, 179, 181, 182, 184, 191, 195, 200, 204, 206, 207, 209, 216, 217, 220, 221, 222, 225, 226, 233, 235, 255, 257, 260, 261, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 311, 337, 340, 342, 346, 359, 360, 370, 409, 416, 430, 453, 476, 477, 478, 500, 513, 518, 519, 520, 522, 556, 557, 559, 571, 573, 607, 642, 646, 647, 651, 661, 689, 692, 697, 699, 700, 701, 741, 745, 748, 750, 762, 763, 769, 773, 774, 777, 779, 781, 784, 785, 788, 792, 795, 797, 799, 800, 801, 803, 805, 807, 808, 837, 854, 860, 863, 866, 878], "devic": [1, 5, 12, 21, 26, 41, 45, 50, 70, 79, 80, 81, 108, 118, 122, 150, 156, 158, 165, 166, 169, 170, 176, 181, 183, 184, 185, 191, 192, 193, 205, 207, 211, 214, 255, 264, 265, 266, 268, 304, 311, 314, 327, 329, 336, 360, 362, 372, 375, 430, 441, 468, 477, 478, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 561, 564, 585, 586, 599, 609, 610, 611, 614, 642, 745, 761, 780, 824, 833, 849, 853, 854, 863, 878], "locat": [1, 4, 5, 12, 21, 26, 27, 31, 35, 40, 41, 45, 47, 48, 49, 50, 55, 59, 60, 67, 76, 79, 80, 81, 84, 89, 92, 93, 94, 99, 108, 114, 117, 118, 122, 123, 135, 136, 137, 138, 139, 141, 149, 150, 155, 156, 158, 159, 160, 161, 163, 165, 166, 171, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 191, 199, 205, 207, 208, 209, 211, 214, 220, 221, 222, 225, 226, 227, 229, 230, 235, 240, 243, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 276, 277, 278, 279, 296, 297, 305, 306, 307, 311, 312, 315, 317, 320, 322, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 337, 341, 343, 344, 345, 353, 365, 366, 376, 377, 378, 379, 381, 382, 384, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 416, 429, 430, 439, 442, 450, 460, 465, 469, 477, 478, 483, 487, 489, 496, 501, 507, 510, 520, 523, 524, 533, 534, 535, 539, 543, 548, 554, 556, 557, 561, 571, 578, 581, 582, 585, 596, 610, 611, 614, 619, 620, 636, 637, 639, 646, 649, 650, 660, 663, 684, 685, 687, 688, 689, 697, 699, 701, 733, 734, 735, 737, 745, 761, 762, 766, 769, 773, 777, 779, 783, 784, 787, 788, 797, 798, 799, 800, 801, 805, 807, 810, 813, 815, 818, 833, 838, 843, 853, 854, 857, 863, 866, 867, 878], "measur": [1, 4, 5, 12, 21, 26, 41, 45, 50, 70, 72, 75, 79, 80, 81, 82, 89, 92, 102, 108, 118, 122, 126, 141, 144, 145, 146, 156, 158, 159, 162, 165, 166, 167, 168, 169, 170, 172, 176, 182, 184, 188, 189, 190, 191, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 220, 222, 225, 230, 231, 232, 236, 237, 239, 240, 243, 256, 258, 260, 262, 263, 264, 265, 266, 267, 268, 272, 274, 276, 283, 284, 296, 297, 298, 304, 305, 309, 310, 317, 318, 319, 323, 325, 326, 339, 341, 343, 345, 348, 353, 357, 358, 359, 364, 368, 369, 370, 372, 409, 411, 413, 416, 417, 418, 428, 440, 441, 442, 452, 453, 460, 469, 472, 474, 475, 476, 477, 478, 479, 482, 490, 492, 505, 513, 516, 519, 520, 521, 523, 524, 525, 532, 533, 534, 535, 538, 553, 554, 557, 568, 582, 585, 586, 589, 590, 591, 612, 627, 632, 633, 642, 653, 654, 661, 662, 665, 669, 678, 679, 680, 681, 685, 688, 689, 697, 698, 699, 700, 701, 727, 734, 745, 758, 761, 762, 765, 770, 771, 785, 787, 796, 797, 801, 824, 833, 845, 853, 854, 860, 863, 866, 878], "compos": [1, 12, 21, 26, 41, 45, 50, 80, 81, 108, 118, 122, 137, 158, 176, 184, 188, 191, 195, 853, 863], "find": [1, 5, 7, 11, 12, 19, 21, 27, 28, 29, 30, 38, 39, 44, 47, 48, 49, 50, 52, 57, 58, 60, 67, 68, 76, 78, 80, 81, 82, 84, 103, 106, 107, 109, 118, 122, 123, 126, 127, 134, 136, 140, 141, 145, 150, 151, 155, 156, 157, 161, 166, 170, 172, 175, 176, 180, 181, 184, 191, 195, 198, 200, 201, 204, 209, 216, 222, 225, 226, 227, 235, 240, 243, 261, 265, 266, 268, 269, 270, 271, 274, 277, 278, 279, 317, 354, 355, 356, 364, 443, 448, 450, 451, 477, 478, 496, 524, 554, 557, 560, 563, 569, 570, 571, 572, 573, 574, 576, 577, 578, 580, 581, 594, 610, 614, 635, 656, 660, 663, 674, 745, 782, 784, 818, 833, 835, 837, 840, 841, 842, 843, 854, 857, 860, 861, 863, 878], "sampl": [1, 2, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 64, 65, 67, 68, 70, 71, 72, 75, 77, 78, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 102, 103, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 128, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 215, 216, 217, 220, 221, 222, 225, 228, 230, 231, 232, 233, 235, 236, 237, 238, 239, 243, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 268, 270, 271, 273, 274, 275, 276, 277, 278, 279, 282, 283, 284, 295, 317, 353, 359, 361, 372, 384, 411, 412, 413, 414, 415, 419, 420, 421, 422, 423, 424, 426, 430, 433, 435, 437, 438, 444, 445, 446, 447, 448, 450, 451, 475, 476, 477, 478, 485, 492, 499, 518, 520, 527, 533, 534, 552, 554, 557, 559, 562, 573, 574, 593, 599, 603, 610, 611, 612, 625, 627, 632, 647, 652, 653, 654, 655, 656, 657, 658, 659, 662, 663, 664, 669, 677, 679, 683, 684, 685, 686, 687, 688, 689, 690, 691, 697, 698, 700, 702, 703, 704, 705, 706, 707, 708, 712, 713, 715, 716, 720, 721, 723, 724, 725, 726, 727, 743, 745, 775, 777, 778, 786, 798, 803, 808, 809, 811, 823, 833, 837, 853, 857, 858, 860, 861, 863, 868, 878], "meg4": [1, 12, 21, 80, 81, 118, 122, 184, 191], "system": [1, 5, 8, 10, 12, 19, 21, 27, 62, 69, 73, 79, 80, 81, 108, 115, 118, 121, 123, 128, 129, 136, 137, 150, 151, 155, 156, 158, 159, 160, 166, 168, 169, 170, 172, 178, 183, 184, 185, 189, 191, 194, 198, 199, 204, 205, 206, 207, 209, 211, 214, 215, 216, 225, 238, 243, 261, 262, 263, 264, 265, 266, 268, 270, 271, 273, 274, 276, 277, 278, 279, 283, 284, 299, 311, 314, 319, 322, 327, 329, 330, 332, 333, 334, 336, 338, 363, 364, 366, 372, 379, 415, 429, 444, 446, 458, 470, 471, 472, 477, 478, 484, 485, 486, 488, 489, 490, 501, 510, 521, 554, 557, 559, 583, 585, 602, 632, 649, 650, 651, 660, 661, 663, 683, 684, 685, 686, 687, 688, 696, 697, 699, 700, 701, 709, 715, 731, 761, 762, 775, 778, 783, 786, 792, 798, 806, 812, 813, 826, 833, 835, 836, 837, 838, 840, 841, 842, 849, 853, 854, 856, 863, 866, 878], "clock": [1, 12, 21, 80, 81, 118, 122, 184, 191, 477, 478, 490, 557, 599, 792, 798, 854, 878], "avail": [1, 2, 5, 7, 8, 12, 19, 21, 22, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 67, 70, 72, 75, 77, 80, 81, 82, 85, 86, 89, 91, 92, 93, 94, 100, 108, 115, 118, 119, 122, 126, 130, 134, 136, 140, 141, 142, 143, 144, 146, 149, 150, 151, 155, 156, 159, 162, 165, 166, 167, 168, 169, 172, 173, 176, 177, 178, 179, 180, 181, 184, 188, 189, 191, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 214, 215, 216, 217, 220, 221, 222, 226, 238, 255, 260, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 277, 278, 279, 302, 304, 305, 311, 331, 337, 371, 373, 379, 401, 402, 408, 409, 415, 416, 421, 428, 435, 457, 474, 477, 478, 516, 533, 534, 548, 549, 550, 556, 557, 571, 615, 622, 662, 693, 697, 698, 699, 701, 714, 727, 745, 762, 769, 775, 777, 779, 781, 784, 785, 788, 792, 795, 797, 798, 799, 800, 801, 803, 805, 807, 808, 816, 817, 833, 835, 837, 838, 843, 844, 845, 848, 851, 854, 857, 860, 861, 862, 863, 866, 878], "check": [1, 5, 12, 21, 26, 41, 43, 45, 50, 61, 69, 80, 81, 108, 118, 119, 120, 122, 124, 135, 137, 140, 142, 143, 144, 157, 158, 159, 161, 166, 168, 170, 171, 172, 175, 176, 181, 182, 184, 191, 199, 201, 204, 205, 214, 215, 217, 225, 226, 239, 258, 260, 263, 264, 265, 266, 268, 270, 271, 274, 277, 278, 279, 317, 319, 384, 390, 428, 442, 445, 476, 477, 478, 485, 488, 532, 546, 557, 565, 567, 684, 685, 687, 688, 697, 699, 700, 701, 731, 745, 761, 779, 781, 782, 783, 784, 815, 835, 836, 837, 845, 853, 854, 857, 866, 878], "which": [1, 4, 5, 12, 16, 18, 19, 21, 26, 31, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 58, 60, 69, 73, 78, 79, 80, 81, 82, 87, 93, 100, 102, 108, 111, 113, 114, 115, 118, 119, 122, 126, 127, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 146, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 178, 180, 182, 184, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 220, 222, 225, 226, 227, 228, 229, 230, 233, 234, 235, 239, 240, 243, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 284, 289, 296, 297, 304, 305, 311, 313, 320, 327, 329, 330, 331, 332, 333, 339, 340, 342, 346, 348, 352, 353, 358, 359, 362, 366, 371, 372, 379, 384, 401, 409, 411, 416, 417, 420, 426, 428, 430, 433, 435, 438, 439, 440, 442, 443, 445, 447, 448, 449, 450, 451, 452, 453, 460, 467, 468, 469, 474, 475, 476, 477, 478, 479, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 510, 511, 512, 516, 517, 519, 524, 525, 533, 534, 537, 538, 542, 546, 556, 557, 558, 559, 565, 567, 568, 571, 573, 574, 575, 576, 582, 583, 585, 590, 599, 602, 608, 610, 614, 615, 616, 617, 619, 620, 622, 627, 628, 631, 632, 633, 634, 636, 637, 639, 640, 642, 646, 647, 651, 654, 657, 659, 660, 663, 665, 666, 674, 676, 677, 683, 689, 692, 693, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 716, 719, 724, 725, 727, 728, 730, 732, 735, 745, 746, 748, 750, 751, 760, 761, 763, 766, 768, 769, 771, 773, 775, 776, 777, 779, 780, 783, 784, 788, 790, 792, 797, 798, 799, 803, 805, 808, 812, 813, 815, 824, 825, 826, 828, 830, 831, 832, 833, 835, 837, 838, 840, 842, 845, 849, 851, 852, 853, 854, 855, 857, 859, 860, 863, 864, 866, 876, 878], "ar": [1, 4, 5, 11, 12, 14, 15, 16, 18, 19, 21, 24, 26, 27, 31, 32, 33, 34, 38, 41, 43, 45, 46, 47, 50, 59, 69, 73, 74, 75, 78, 80, 81, 82, 83, 86, 87, 93, 98, 100, 102, 103, 104, 105, 106, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 126, 127, 131, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 194, 195, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 220, 221, 222, 225, 226, 227, 228, 229, 230, 233, 234, 235, 238, 239, 240, 243, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 281, 283, 284, 287, 288, 290, 296, 297, 299, 301, 302, 304, 305, 306, 307, 309, 311, 312, 313, 315, 316, 319, 321, 322, 323, 324, 327, 328, 329, 331, 333, 334, 337, 340, 341, 342, 346, 352, 353, 357, 358, 359, 360, 362, 364, 368, 369, 370, 372, 384, 385, 392, 401, 409, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 430, 433, 434, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 459, 461, 462, 466, 467, 468, 469, 472, 474, 475, 476, 477, 478, 479, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 497, 499, 501, 502, 503, 504, 505, 506, 507, 510, 513, 516, 517, 519, 521, 522, 523, 532, 533, 534, 535, 536, 539, 541, 546, 548, 549, 550, 552, 553, 554, 556, 557, 558, 559, 560, 562, 564, 565, 567, 571, 572, 573, 574, 576, 577, 579, 584, 585, 586, 589, 590, 591, 593, 594, 596, 600, 602, 603, 605, 608, 609, 610, 611, 612, 615, 617, 620, 623, 625, 632, 634, 635, 636, 637, 638, 639, 642, 644, 646, 647, 649, 650, 653, 654, 657, 659, 660, 662, 663, 665, 668, 669, 671, 672, 673, 678, 679, 682, 683, 684, 685, 686, 687, 688, 689, 693, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 713, 714, 715, 716, 721, 723, 724, 725, 726, 727, 728, 730, 732, 735, 740, 745, 746, 750, 760, 761, 762, 763, 766, 769, 770, 771, 772, 773, 775, 776, 777, 778, 779, 781, 782, 783, 784, 785, 788, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 804, 805, 806, 807, 808, 809, 815, 818, 823, 825, 826, 827, 828, 833, 835, 837, 838, 840, 841, 842, 843, 844, 845, 849, 852, 853, 854, 855, 856, 858, 859, 860, 861, 862, 864, 865, 866, 868, 878], "valid": [1, 8, 9, 10, 11, 12, 15, 16, 21, 73, 80, 81, 110, 118, 120, 122, 137, 162, 171, 177, 184, 190, 191, 195, 201, 210, 225, 240, 258, 260, 263, 264, 265, 266, 268, 270, 271, 272, 274, 277, 278, 279, 324, 337, 353, 358, 401, 409, 415, 416, 425, 426, 430, 441, 443, 450, 457, 461, 477, 478, 533, 534, 556, 557, 559, 571, 573, 574, 628, 642, 679, 684, 685, 687, 688, 697, 699, 700, 701, 722, 732, 745, 748, 761, 762, 769, 776, 777, 778, 779, 781, 783, 784, 788, 797, 800, 803, 805, 806, 807, 808, 831, 837, 843, 844, 853, 857, 860, 878], "240": [1, 35, 42, 46, 74, 80, 108, 118, 169, 171, 181, 198, 202, 208, 211, 229, 230, 239], "x": [1, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 67, 68, 70, 71, 72, 75, 77, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 126, 128, 130, 131, 132, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 156, 157, 158, 160, 162, 166, 167, 168, 169, 170, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 191, 194, 195, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 217, 221, 222, 225, 226, 227, 228, 229, 230, 233, 234, 235, 238, 240, 243, 255, 260, 263, 264, 265, 266, 268, 270, 271, 272, 274, 276, 277, 278, 279, 287, 301, 311, 312, 334, 343, 344, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 447, 448, 449, 477, 478, 488, 489, 523, 524, 532, 556, 557, 558, 566, 571, 594, 617, 649, 670, 673, 678, 682, 683, 684, 685, 686, 687, 688, 690, 697, 699, 701, 702, 703, 704, 709, 711, 712, 713, 715, 716, 720, 722, 723, 727, 732, 735, 736, 738, 745, 746, 749, 762, 764, 766, 769, 777, 779, 781, 783, 784, 785, 786, 787, 788, 793, 795, 797, 799, 800, 801, 803, 805, 807, 808, 809, 811, 813, 825, 833, 837, 843, 854, 860, 863, 878], "1800": [1, 118], "432000": [1, 118], "302": [1, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 74, 82, 92, 93, 103, 106, 107, 109, 111, 118, 120, 152, 162, 166, 169, 172, 176, 177, 178, 179, 180, 181, 221, 225, 230, 233, 235, 863], "ch": [1, 2, 8, 12, 21, 67, 80, 81, 111, 114, 118, 119, 122, 136, 137, 141, 149, 151, 166, 169, 170, 184, 191, 204, 214, 220, 222, 243, 255, 268, 318, 319, 379, 401, 402, 477, 478, 815, 833, 854, 878], "current": [1, 12, 21, 22, 27, 29, 30, 31, 34, 41, 42, 44, 59, 76, 77, 80, 81, 84, 93, 118, 122, 140, 149, 161, 162, 165, 166, 171, 177, 178, 179, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 199, 201, 209, 211, 216, 222, 233, 235, 243, 255, 256, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 277, 278, 279, 283, 284, 296, 297, 317, 319, 325, 352, 359, 364, 371, 372, 375, 415, 430, 433, 442, 447, 449, 450, 452, 472, 476, 477, 478, 483, 488, 492, 519, 520, 524, 527, 557, 566, 568, 569, 570, 576, 585, 615, 622, 642, 661, 678, 680, 697, 699, 700, 701, 722, 745, 752, 754, 755, 756, 757, 758, 762, 766, 769, 775, 798, 807, 808, 815, 833, 837, 840, 843, 845, 853, 854, 857, 859, 863, 866], "compens": [1, 2, 12, 21, 27, 30, 31, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 76, 77, 80, 81, 84, 85, 86, 100, 115, 118, 119, 122, 126, 140, 143, 149, 172, 176, 178, 179, 181, 184, 185, 191, 201, 208, 225, 226, 243, 255, 258, 263, 264, 265, 266, 268, 350, 364, 430, 432, 445, 447, 448, 450, 476, 477, 478, 490, 497, 520, 554, 557, 568, 576, 582, 585, 615, 662, 697, 699, 700, 701, 786, 787, 878], "grade": [1, 12, 21, 24, 41, 69, 80, 81, 100, 108, 118, 122, 158, 161, 184, 188, 191, 233, 235, 258, 263, 264, 265, 266, 268, 269, 464, 465, 476, 477, 478, 557, 697, 699, 700, 701, 878], "144000": [1, 80], "sec": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 28, 29, 32, 33, 34, 42, 45, 46, 49, 59, 61, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 87, 91, 92, 95, 96, 98, 99, 102, 103, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 120, 122, 126, 128, 131, 132, 134, 135, 136, 141, 144, 146, 149, 151, 152, 156, 159, 162, 166, 167, 168, 169, 172, 177, 179, 180, 181, 182, 183, 184, 185, 190, 195, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 220, 221, 222, 227, 228, 229, 230, 233, 235, 239, 268, 863, 878], "type": [1, 2, 5, 15, 16, 22, 27, 29, 30, 31, 34, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 63, 70, 74, 76, 77, 78, 80, 81, 82, 84, 85, 89, 92, 93, 94, 102, 108, 112, 113, 114, 115, 117, 118, 119, 122, 123, 126, 127, 130, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 149, 150, 156, 157, 158, 159, 162, 166, 167, 168, 170, 171, 172, 176, 178, 179, 180, 181, 182, 183, 185, 188, 190, 195, 198, 199, 200, 203, 204, 205, 206, 207, 208, 210, 215, 217, 220, 221, 222, 225, 229, 230, 238, 239, 256, 258, 260, 261, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 296, 297, 307, 309, 310, 312, 313, 316, 317, 318, 319, 320, 326, 328, 334, 342, 353, 354, 355, 356, 357, 358, 367, 368, 369, 370, 372, 379, 384, 401, 402, 409, 411, 416, 418, 425, 430, 433, 434, 441, 442, 444, 447, 448, 449, 450, 452, 453, 454, 459, 466, 472, 474, 475, 476, 477, 478, 485, 492, 496, 503, 507, 508, 516, 535, 547, 554, 555, 556, 557, 558, 559, 562, 566, 568, 571, 572, 573, 574, 576, 578, 579, 582, 585, 591, 593, 600, 610, 612, 614, 615, 638, 639, 642, 648, 649, 650, 662, 665, 668, 677, 683, 684, 685, 687, 688, 692, 697, 698, 699, 700, 701, 705, 706, 707, 708, 710, 728, 731, 745, 760, 764, 768, 769, 770, 771, 773, 775, 776, 777, 779, 780, 781, 782, 783, 784, 785, 786, 788, 789, 790, 796, 797, 798, 799, 800, 801, 803, 805, 806, 807, 808, 809, 811, 819, 833, 835, 836, 842, 843, 844, 848, 853, 855, 857, 861, 863, 864, 878], "select": [1, 5, 7, 11, 15, 21, 24, 28, 29, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 50, 51, 54, 55, 58, 59, 70, 73, 75, 81, 82, 87, 89, 92, 93, 94, 98, 102, 108, 111, 112, 118, 119, 120, 127, 134, 137, 141, 142, 144, 150, 151, 158, 159, 161, 162, 166, 167, 169, 170, 172, 175, 177, 178, 179, 180, 181, 182, 189, 191, 195, 199, 200, 201, 203, 206, 207, 209, 215, 216, 217, 221, 222, 226, 230, 234, 235, 238, 239, 240, 243, 255, 257, 258, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 273, 274, 277, 278, 279, 318, 323, 353, 364, 411, 417, 440, 447, 468, 474, 477, 478, 483, 510, 549, 550, 552, 553, 554, 555, 557, 558, 562, 571, 573, 574, 580, 581, 594, 620, 632, 639, 642, 660, 663, 683, 697, 698, 699, 700, 701, 708, 714, 762, 769, 775, 779, 781, 783, 784, 785, 788, 790, 792, 798, 801, 803, 807, 810, 814, 833, 837, 840, 853, 857, 860, 864, 878], "re": [1, 4, 29, 45, 70, 92, 93, 100, 102, 112, 113, 119, 126, 134, 140, 141, 144, 151, 156, 158, 159, 160, 161, 162, 166, 167, 169, 170, 171, 172, 182, 189, 199, 200, 201, 203, 204, 205, 206, 207, 214, 216, 221, 227, 229, 235, 240, 243, 255, 257, 260, 263, 264, 265, 266, 268, 272, 280, 312, 316, 409, 416, 434, 477, 478, 501, 549, 550, 553, 555, 556, 557, 566, 611, 639, 642, 646, 697, 699, 700, 701, 708, 714, 731, 762, 777, 784, 788, 797, 800, 802, 805, 807, 837, 841, 842, 845, 855, 857, 858, 860, 866, 878], "referenc": [1, 29, 70, 92, 93, 140, 150, 151, 159, 162, 167, 182, 189, 199, 203, 207, 221, 225, 257, 263, 264, 265, 266, 280, 477, 478, 639, 642, 697, 699, 700, 701, 779, 833, 837, 860, 864, 867, 878], "item": [1, 4, 8, 11, 12, 13, 14, 15, 16, 18, 21, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 67, 68, 69, 70, 71, 72, 73, 75, 77, 79, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 122, 123, 126, 127, 128, 130, 131, 132, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 151, 152, 156, 157, 158, 159, 160, 162, 166, 167, 168, 169, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 217, 220, 221, 222, 226, 227, 228, 229, 230, 233, 235, 239, 256, 260, 261, 263, 264, 268, 272, 276, 282, 287, 301, 477, 478, 523, 699, 700, 701, 732, 745, 843, 863, 878], "deactiv": [1, 29, 42, 51, 67, 70, 91, 92, 93, 110, 142, 146, 159, 162, 182, 191, 205, 206, 207, 221, 766, 835], "wa": [1, 5, 7, 13, 18, 21, 33, 60, 65, 70, 78, 93, 114, 134, 140, 144, 149, 151, 158, 159, 160, 166, 167, 168, 170, 171, 181, 182, 183, 189, 191, 194, 195, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 216, 217, 220, 228, 229, 230, 240, 256, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 283, 284, 296, 297, 331, 346, 388, 408, 409, 416, 431, 433, 474, 477, 478, 494, 496, 505, 510, 520, 530, 531, 533, 534, 539, 540, 541, 556, 557, 558, 569, 570, 571, 574, 576, 577, 578, 585, 592, 610, 614, 635, 646, 649, 650, 682, 692, 697, 698, 699, 700, 701, 713, 717, 723, 745, 761, 762, 777, 779, 784, 788, 797, 800, 805, 807, 810, 814, 833, 836, 837, 842, 843, 844, 854, 859, 860, 863, 866, 878], "been": [1, 9, 10, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 69, 70, 73, 77, 79, 83, 85, 86, 93, 115, 118, 119, 126, 134, 140, 142, 145, 149, 150, 151, 159, 160, 162, 166, 167, 169, 171, 172, 175, 176, 178, 179, 181, 182, 183, 188, 191, 194, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 214, 215, 216, 217, 238, 245, 254, 255, 258, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 274, 275, 276, 277, 278, 279, 288, 289, 290, 296, 297, 302, 353, 357, 358, 368, 369, 370, 376, 377, 378, 381, 382, 384, 389, 392, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 409, 416, 430, 452, 453, 472, 474, 475, 477, 478, 479, 485, 486, 497, 505, 525, 535, 556, 557, 558, 569, 585, 592, 615, 697, 698, 699, 700, 701, 713, 723, 725, 727, 728, 755, 769, 775, 779, 781, 783, 785, 799, 837, 845, 849, 854, 857, 859, 860, 863, 866, 878], "appli": [1, 4, 5, 7, 8, 9, 10, 11, 12, 15, 16, 18, 21, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 77, 78, 79, 81, 82, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 99, 100, 102, 103, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 118, 119, 120, 126, 127, 131, 133, 134, 135, 136, 140, 141, 142, 143, 145, 146, 149, 150, 151, 152, 156, 158, 159, 160, 161, 162, 166, 167, 169, 170, 172, 176, 177, 178, 179, 181, 182, 183, 184, 185, 189, 191, 195, 198, 199, 200, 202, 204, 206, 207, 209, 210, 211, 217, 220, 221, 222, 225, 226, 227, 228, 229, 230, 233, 234, 235, 239, 243, 256, 258, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 311, 337, 352, 357, 366, 368, 370, 409, 411, 412, 416, 417, 418, 420, 422, 430, 439, 440, 441, 442, 443, 445, 447, 448, 450, 453, 467, 474, 475, 477, 478, 514, 517, 524, 525, 526, 527, 528, 533, 534, 536, 539, 540, 541, 556, 557, 558, 559, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 585, 592, 600, 608, 612, 615, 616, 617, 637, 642, 653, 654, 655, 656, 657, 659, 664, 678, 679, 684, 685, 686, 697, 698, 699, 700, 701, 709, 713, 723, 726, 727, 729, 733, 734, 735, 745, 769, 770, 775, 776, 777, 779, 781, 783, 784, 788, 789, 790, 792, 798, 799, 803, 805, 806, 808, 815, 818, 825, 828, 833, 837, 853, 855, 857, 860, 861, 863, 866, 878], "yet": [1, 70, 78, 93, 134, 159, 182, 189, 205, 207, 240, 263, 376, 377, 378, 381, 382, 384, 389, 392, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 417, 422, 546, 571, 745, 837], "method": [1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 27, 28, 29, 30, 31, 34, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 59, 69, 70, 71, 72, 73, 75, 76, 77, 81, 82, 83, 84, 87, 92, 93, 94, 96, 98, 100, 102, 103, 106, 107, 108, 109, 112, 113, 114, 115, 120, 126, 132, 136, 140, 141, 142, 143, 144, 146, 149, 150, 151, 152, 159, 160, 162, 165, 166, 167, 168, 169, 170, 172, 175, 177, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 212, 216, 218, 219, 220, 221, 222, 226, 230, 233, 235, 238, 239, 240, 243, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 283, 284, 287, 296, 297, 298, 299, 301, 304, 305, 309, 310, 311, 312, 313, 317, 318, 319, 320, 323, 325, 326, 339, 341, 343, 346, 348, 353, 357, 358, 359, 364, 368, 369, 370, 372, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 428, 430, 432, 444, 445, 447, 448, 449, 453, 460, 469, 472, 473, 474, 475, 476, 477, 478, 479, 482, 484, 486, 487, 488, 489, 490, 493, 494, 495, 498, 500, 501, 502, 503, 504, 505, 506, 507, 510, 513, 520, 521, 523, 524, 525, 526, 527, 528, 530, 531, 535, 536, 537, 539, 540, 541, 553, 554, 556, 557, 558, 565, 568, 569, 570, 572, 582, 583, 585, 588, 589, 590, 591, 592, 600, 602, 606, 609, 615, 617, 632, 633, 642, 647, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 675, 678, 679, 681, 684, 685, 686, 687, 688, 690, 697, 698, 699, 700, 701, 704, 707, 709, 715, 716, 724, 725, 727, 728, 732, 734, 740, 741, 743, 745, 746, 758, 761, 765, 770, 771, 772, 773, 776, 784, 787, 789, 797, 801, 804, 833, 835, 837, 852, 853, 855, 857, 860, 861, 863, 864, 875, 878], "5": [1, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 162, 164, 166, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 243, 255, 257, 258, 263, 264, 265, 266, 269, 270, 271, 274, 277, 278, 279, 281, 296, 297, 299, 302, 306, 313, 325, 334, 337, 353, 359, 367, 379, 384, 408, 409, 415, 426, 429, 430, 432, 450, 451, 452, 465, 474, 477, 478, 501, 513, 514, 524, 530, 535, 539, 540, 541, 556, 557, 559, 560, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 580, 583, 585, 589, 593, 594, 611, 619, 638, 646, 650, 683, 699, 701, 709, 713, 715, 723, 724, 725, 727, 728, 735, 745, 760, 764, 776, 777, 781, 782, 788, 790, 793, 798, 803, 808, 818, 835, 836, 837, 843, 853, 854, 857, 859, 860, 863, 866], "becaus": [1, 4, 5, 11, 16, 18, 21, 26, 34, 41, 43, 44, 45, 50, 60, 69, 73, 80, 81, 82, 100, 113, 114, 118, 134, 140, 142, 143, 144, 146, 149, 150, 151, 158, 160, 161, 162, 166, 167, 168, 170, 171, 176, 180, 181, 182, 183, 184, 189, 190, 191, 194, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 216, 220, 225, 226, 227, 230, 233, 240, 263, 264, 265, 266, 346, 357, 430, 452, 567, 576, 584, 684, 685, 687, 688, 700, 754, 775, 806, 833, 837, 841, 845, 853, 855, 857, 859, 860, 864, 878], "all": [1, 4, 5, 10, 13, 14, 18, 19, 21, 27, 28, 31, 33, 35, 40, 45, 59, 61, 63, 69, 72, 78, 80, 81, 82, 89, 94, 96, 98, 102, 106, 110, 111, 112, 113, 115, 116, 118, 119, 120, 124, 126, 135, 140, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 168, 169, 170, 171, 172, 176, 179, 181, 182, 183, 184, 185, 188, 189, 190, 191, 195, 198, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 214, 215, 216, 217, 220, 221, 222, 225, 226, 227, 230, 234, 238, 239, 240, 255, 256, 257, 258, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 290, 291, 294, 296, 297, 299, 301, 306, 307, 308, 309, 311, 312, 313, 316, 321, 322, 323, 326, 327, 328, 337, 347, 348, 352, 353, 357, 358, 359, 360, 364, 365, 367, 368, 369, 370, 372, 385, 409, 411, 412, 416, 418, 425, 426, 430, 433, 434, 436, 438, 439, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 457, 459, 465, 466, 467, 468, 472, 474, 475, 477, 478, 479, 483, 485, 489, 492, 499, 501, 504, 508, 512, 523, 524, 526, 528, 531, 533, 534, 535, 536, 540, 541, 543, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 567, 571, 572, 573, 574, 575, 576, 579, 582, 585, 591, 593, 600, 605, 608, 609, 611, 612, 615, 616, 617, 620, 630, 635, 636, 642, 645, 647, 656, 662, 665, 674, 677, 678, 679, 680, 682, 683, 684, 685, 686, 687, 688, 689, 692, 697, 698, 699, 700, 701, 705, 706, 707, 708, 710, 713, 714, 715, 719, 723, 724, 725, 727, 728, 732, 735, 743, 745, 752, 753, 761, 762, 763, 769, 773, 775, 776, 777, 779, 780, 781, 782, 784, 785, 786, 788, 789, 792, 794, 795, 796, 797, 798, 799, 800, 801, 803, 805, 806, 807, 808, 809, 818, 833, 840, 844, 848, 852, 853, 854, 855, 859, 860, 863, 864, 866, 878], "were": [1, 4, 5, 10, 18, 21, 38, 80, 81, 118, 126, 134, 137, 140, 141, 142, 143, 144, 149, 150, 151, 161, 167, 168, 171, 172, 181, 182, 183, 184, 188, 190, 191, 199, 200, 201, 204, 205, 206, 207, 209, 210, 214, 215, 216, 217, 220, 225, 227, 229, 230, 263, 264, 265, 266, 268, 271, 273, 274, 277, 279, 280, 296, 297, 319, 347, 348, 359, 362, 401, 402, 433, 435, 477, 478, 500, 557, 567, 568, 576, 585, 692, 697, 698, 699, 700, 701, 789, 791, 798, 833, 837, 844, 854, 857, 859, 863, 878], "effect": [1, 7, 17, 19, 20, 21, 26, 27, 39, 57, 59, 69, 70, 73, 82, 83, 98, 102, 108, 111, 112, 119, 120, 128, 132, 141, 145, 149, 151, 160, 162, 166, 167, 168, 172, 183, 191, 198, 200, 201, 202, 206, 207, 208, 209, 210, 211, 217, 220, 221, 222, 226, 227, 229, 230, 235, 238, 239, 243, 263, 264, 265, 266, 268, 269, 270, 273, 274, 278, 296, 297, 319, 353, 357, 358, 368, 369, 370, 401, 402, 409, 410, 416, 425, 430, 432, 433, 448, 452, 453, 472, 474, 475, 477, 478, 493, 494, 524, 527, 535, 554, 557, 560, 565, 612, 678, 680, 683, 684, 685, 687, 688, 699, 701, 704, 715, 775, 779, 785, 788, 790, 792, 798, 799, 801, 803, 833, 843, 844, 857, 878], "window": [1, 2, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 59, 70, 71, 72, 73, 75, 81, 82, 83, 87, 92, 98, 99, 102, 103, 107, 108, 112, 113, 114, 120, 122, 128, 132, 136, 137, 141, 142, 143, 144, 146, 151, 166, 171, 172, 180, 183, 191, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 216, 217, 220, 226, 230, 238, 239, 240, 255, 258, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 289, 340, 342, 346, 409, 410, 414, 416, 420, 422, 425, 433, 435, 444, 445, 447, 448, 449, 458, 468, 469, 475, 477, 478, 530, 531, 557, 559, 567, 576, 579, 583, 585, 593, 649, 650, 683, 697, 698, 699, 701, 704, 707, 709, 712, 715, 716, 720, 721, 724, 725, 726, 727, 728, 729, 745, 775, 776, 777, 784, 792, 798, 799, 803, 808, 837, 840, 841, 842, 843, 878], "size": [1, 5, 8, 9, 10, 21, 22, 32, 35, 41, 43, 44, 45, 46, 53, 58, 64, 69, 70, 73, 82, 99, 107, 108, 113, 119, 125, 126, 128, 132, 133, 134, 135, 136, 142, 144, 146, 150, 151, 155, 156, 158, 160, 166, 172, 175, 177, 178, 179, 180, 181, 183, 184, 185, 189, 190, 198, 199, 201, 202, 205, 206, 207, 208, 210, 211, 214, 217, 220, 221, 222, 227, 230, 233, 238, 239, 240, 243, 260, 261, 263, 264, 265, 266, 270, 271, 272, 273, 274, 277, 278, 279, 311, 319, 327, 329, 359, 409, 411, 416, 420, 421, 444, 445, 447, 448, 449, 474, 476, 477, 478, 517, 530, 556, 557, 571, 576, 583, 663, 679, 683, 684, 685, 687, 688, 697, 699, 701, 721, 735, 745, 754, 758, 773, 775, 777, 783, 784, 788, 790, 791, 792, 795, 797, 798, 800, 801, 803, 804, 805, 806, 807, 808, 812, 818, 860, 863, 878], "707": [1, 195, 208, 230], "need": [1, 4, 5, 11, 28, 29, 30, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 54, 55, 58, 59, 60, 68, 69, 73, 74, 78, 85, 89, 93, 94, 102, 103, 106, 107, 108, 109, 111, 113, 116, 118, 126, 134, 135, 136, 140, 141, 142, 143, 144, 145, 149, 150, 151, 156, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 172, 175, 177, 178, 179, 180, 181, 182, 188, 190, 191, 194, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 214, 215, 216, 217, 220, 221, 222, 225, 226, 227, 228, 229, 230, 233, 234, 235, 238, 240, 243, 263, 264, 265, 266, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 282, 296, 317, 328, 371, 374, 384, 410, 411, 419, 425, 433, 442, 447, 467, 476, 477, 478, 485, 492, 500, 516, 521, 544, 557, 592, 646, 684, 685, 687, 688, 697, 699, 700, 701, 745, 751, 762, 768, 783, 788, 798, 835, 837, 838, 840, 841, 842, 843, 844, 845, 853, 854, 859, 860, 861, 863, 866, 878], "more": [1, 4, 18, 19, 27, 28, 34, 42, 43, 44, 49, 54, 58, 69, 70, 72, 74, 80, 81, 82, 83, 85, 93, 103, 106, 109, 112, 113, 120, 121, 129, 133, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 155, 156, 158, 160, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 177, 178, 180, 181, 184, 185, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 214, 215, 216, 217, 222, 225, 226, 227, 228, 230, 233, 235, 239, 240, 248, 257, 258, 260, 261, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 277, 278, 279, 288, 296, 297, 304, 305, 328, 353, 357, 359, 364, 366, 370, 401, 402, 408, 409, 411, 413, 414, 416, 417, 421, 426, 428, 439, 440, 442, 443, 444, 445, 447, 448, 450, 451, 459, 468, 477, 478, 485, 494, 501, 512, 516, 519, 524, 530, 531, 532, 556, 557, 559, 565, 567, 576, 582, 585, 594, 605, 607, 611, 612, 615, 625, 634, 636, 637, 639, 642, 649, 674, 678, 679, 684, 685, 686, 687, 688, 697, 699, 700, 701, 704, 707, 715, 724, 725, 726, 727, 728, 729, 742, 745, 761, 762, 763, 764, 769, 773, 777, 780, 781, 783, 784, 788, 797, 800, 803, 805, 807, 808, 816, 817, 826, 833, 834, 835, 837, 841, 842, 843, 844, 853, 854, 855, 857, 859, 860, 861, 862, 866, 875, 878], "than": [1, 5, 13, 18, 24, 26, 33, 34, 41, 42, 44, 45, 46, 50, 54, 58, 59, 60, 68, 69, 77, 78, 82, 85, 86, 93, 113, 118, 123, 126, 134, 135, 136, 140, 141, 142, 143, 144, 146, 149, 150, 151, 156, 158, 161, 166, 167, 168, 169, 170, 171, 172, 176, 180, 181, 183, 184, 185, 188, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 214, 215, 216, 225, 228, 238, 240, 258, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 288, 304, 305, 352, 357, 364, 409, 411, 414, 416, 420, 426, 428, 438, 443, 445, 447, 448, 450, 453, 465, 474, 475, 477, 478, 494, 501, 512, 522, 530, 531, 541, 546, 548, 550, 556, 557, 559, 565, 567, 571, 573, 583, 584, 586, 590, 593, 611, 616, 637, 646, 678, 684, 685, 686, 687, 688, 689, 692, 697, 699, 700, 701, 704, 707, 712, 715, 720, 726, 729, 745, 762, 763, 775, 777, 778, 781, 784, 788, 797, 798, 800, 803, 805, 807, 808, 818, 835, 837, 842, 843, 844, 859, 860, 878], "one": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 24, 31, 32, 33, 34, 40, 41, 42, 43, 45, 46, 48, 49, 50, 58, 59, 65, 67, 69, 72, 73, 75, 78, 81, 82, 83, 85, 86, 87, 89, 93, 95, 96, 98, 102, 108, 110, 112, 113, 114, 116, 120, 126, 130, 132, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 166, 167, 168, 169, 172, 176, 177, 178, 179, 180, 181, 182, 184, 188, 189, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 214, 215, 216, 217, 220, 222, 225, 227, 228, 229, 230, 234, 239, 240, 255, 256, 258, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 285, 288, 296, 297, 310, 311, 313, 317, 318, 320, 352, 354, 355, 357, 359, 360, 364, 379, 387, 390, 392, 401, 402, 408, 409, 415, 416, 419, 422, 424, 428, 431, 432, 433, 440, 441, 443, 444, 450, 459, 466, 467, 468, 475, 476, 477, 478, 481, 485, 494, 509, 510, 512, 514, 519, 533, 534, 540, 541, 543, 546, 557, 558, 559, 560, 573, 577, 580, 581, 593, 596, 605, 607, 615, 616, 622, 634, 636, 642, 646, 649, 663, 668, 678, 679, 684, 685, 686, 687, 688, 690, 693, 697, 698, 699, 700, 701, 703, 706, 713, 723, 724, 725, 727, 728, 730, 733, 734, 735, 745, 758, 761, 763, 764, 769, 776, 777, 779, 780, 781, 782, 784, 785, 786, 788, 790, 803, 804, 806, 807, 808, 809, 818, 824, 826, 833, 835, 836, 837, 840, 841, 845, 853, 854, 855, 857, 859, 860, 863, 878], "make": [1, 4, 9, 10, 13, 18, 19, 21, 27, 28, 31, 32, 34, 38, 42, 45, 48, 50, 54, 55, 59, 61, 69, 74, 85, 89, 92, 93, 102, 108, 110, 111, 112, 113, 121, 123, 129, 132, 134, 135, 136, 140, 141, 142, 143, 144, 150, 151, 156, 158, 160, 161, 162, 166, 167, 169, 170, 171, 172, 176, 177, 178, 179, 180, 182, 183, 184, 185, 188, 189, 191, 194, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 214, 216, 220, 225, 227, 228, 229, 233, 234, 235, 240, 255, 262, 263, 264, 265, 266, 268, 270, 271, 274, 276, 277, 278, 279, 296, 297, 324, 336, 353, 357, 358, 359, 364, 368, 369, 370, 371, 409, 412, 413, 416, 418, 419, 428, 432, 433, 444, 445, 447, 448, 452, 453, 459, 466, 468, 472, 474, 475, 477, 478, 518, 535, 541, 550, 556, 557, 567, 582, 584, 593, 603, 605, 615, 625, 634, 636, 649, 661, 692, 694, 698, 713, 723, 724, 725, 727, 732, 740, 741, 745, 763, 764, 767, 768, 769, 771, 782, 785, 791, 798, 803, 808, 809, 826, 833, 835, 836, 844, 845, 853, 854, 855, 857, 858, 860, 863, 866, 878], "topographi": [1, 13, 21, 27, 69, 70, 73, 85, 113, 119, 121, 129, 131, 142, 144, 151, 166, 170, 172, 176, 191, 204, 206, 207, 217, 228, 230, 238, 243, 263, 264, 265, 266, 268, 272, 273, 312, 409, 416, 477, 478, 554, 557, 572, 662, 697, 699, 701, 758, 777, 782, 783, 784, 788, 790, 794, 799, 801, 805, 806, 833, 878], "disabl": [1, 85, 113, 142, 149, 150, 151, 172, 198, 199, 202, 217, 228, 255, 260, 263, 264, 265, 266, 272, 273, 307, 364, 409, 415, 416, 421, 477, 478, 556, 557, 576, 585, 640, 644, 697, 699, 701, 740, 745, 762, 777, 779, 783, 784, 788, 797, 798, 800, 805, 807, 811, 835, 878], "interact": [1, 27, 33, 45, 47, 85, 113, 114, 119, 126, 134, 140, 149, 150, 151, 165, 166, 168, 172, 180, 181, 191, 199, 200, 204, 205, 206, 210, 214, 222, 225, 228, 229, 235, 239, 240, 243, 255, 260, 263, 264, 265, 266, 270, 271, 272, 273, 274, 277, 278, 279, 289, 296, 409, 416, 468, 477, 478, 524, 556, 557, 593, 678, 680, 697, 699, 701, 745, 747, 761, 762, 766, 776, 777, 779, 780, 781, 783, 784, 788, 790, 792, 797, 798, 799, 800, 801, 803, 805, 806, 807, 808, 835, 837, 859, 860, 861, 866, 878], "filter": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 17, 19, 20, 27, 32, 33, 34, 42, 45, 59, 67, 71, 72, 75, 76, 81, 82, 83, 84, 87, 91, 98, 108, 111, 112, 114, 120, 132, 136, 140, 141, 144, 145, 146, 149, 162, 165, 166, 167, 169, 172, 176, 181, 183, 184, 185, 191, 194, 198, 200, 203, 206, 210, 212, 213, 214, 216, 217, 222, 230, 240, 243, 255, 258, 261, 262, 263, 264, 265, 266, 268, 270, 271, 273, 274, 277, 278, 279, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 341, 343, 346, 347, 350, 353, 357, 358, 368, 369, 370, 374, 409, 410, 411, 413, 416, 417, 420, 423, 424, 425, 427, 430, 438, 450, 452, 453, 472, 474, 475, 477, 478, 490, 518, 535, 554, 557, 558, 562, 568, 569, 570, 573, 574, 576, 577, 578, 585, 586, 589, 612, 651, 661, 697, 699, 700, 701, 709, 710, 713, 716, 785, 786, 787, 793, 798, 799, 817, 833, 835, 837, 853, 855, 857, 864, 867, 868, 878], "contigu": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 34, 42, 72, 75, 81, 82, 83, 87, 98, 112, 113, 114, 120, 132, 136, 141, 144, 146, 151, 195, 202, 203, 204, 206, 209, 210, 211, 229, 230, 269], "segment": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 23, 24, 27, 33, 34, 38, 42, 63, 69, 72, 75, 80, 81, 82, 83, 87, 98, 108, 112, 113, 114, 120, 132, 134, 135, 136, 137, 141, 144, 145, 146, 151, 162, 168, 172, 184, 191, 195, 200, 202, 203, 204, 205, 206, 208, 209, 210, 211, 216, 230, 239, 243, 255, 257, 261, 263, 264, 265, 266, 273, 276, 302, 353, 358, 438, 461, 462, 463, 476, 477, 478, 505, 517, 525, 527, 557, 559, 560, 561, 562, 563, 564, 567, 573, 574, 576, 577, 583, 585, 697, 716, 743, 745, 779, 781, 788, 790, 833, 853, 854, 860, 863, 878], "up": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 23, 24, 26, 27, 28, 33, 34, 42, 44, 45, 50, 68, 71, 72, 75, 78, 79, 81, 82, 83, 87, 89, 92, 93, 94, 98, 102, 103, 108, 110, 111, 112, 113, 114, 116, 120, 122, 131, 132, 134, 136, 140, 141, 144, 145, 146, 150, 151, 155, 156, 158, 159, 160, 162, 165, 166, 172, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 214, 216, 217, 221, 222, 226, 227, 230, 233, 235, 240, 260, 261, 263, 264, 265, 266, 270, 271, 272, 273, 274, 275, 277, 278, 279, 409, 414, 415, 416, 421, 449, 477, 478, 530, 531, 556, 557, 559, 576, 640, 645, 646, 683, 692, 697, 699, 701, 715, 743, 745, 764, 773, 775, 776, 777, 781, 784, 788, 791, 797, 798, 800, 803, 805, 808, 809, 815, 833, 835, 841, 857, 860, 861, 863, 866, 878], "band": [1, 5, 8, 9, 12, 13, 14, 15, 16, 18, 21, 27, 32, 33, 34, 42, 71, 75, 81, 87, 93, 104, 105, 106, 108, 109, 111, 113, 114, 120, 125, 132, 136, 137, 141, 142, 144, 145, 146, 167, 172, 195, 198, 200, 201, 202, 203, 204, 206, 210, 211, 217, 229, 230, 238, 239, 240, 243, 263, 264, 265, 266, 286, 411, 417, 420, 444, 445, 447, 448, 450, 477, 478, 540, 562, 589, 676, 699, 701, 713, 723, 724, 727, 769, 777, 793, 833, 854, 857, 878], "stop": [1, 5, 29, 67, 81, 92, 95, 126, 136, 167, 172, 200, 201, 202, 209, 211, 214, 215, 216, 255, 256, 263, 264, 265, 266, 283, 284, 295, 356, 411, 420, 444, 445, 447, 448, 476, 477, 478, 518, 527, 530, 557, 576, 583, 599, 789, 792, 837, 859, 878], "fir": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 71, 72, 75, 81, 82, 83, 87, 98, 112, 113, 114, 120, 132, 136, 141, 144, 146, 151, 172, 191, 195, 198, 200, 202, 203, 204, 206, 209, 210, 211, 230, 255, 263, 264, 265, 266, 411, 420, 445, 447, 448, 477, 478, 569, 570, 589, 710, 786, 798, 835, 857, 867, 878], "paramet": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 24, 31, 34, 40, 41, 42, 43, 44, 48, 54, 55, 59, 61, 68, 70, 71, 72, 74, 75, 81, 82, 83, 87, 95, 96, 98, 99, 100, 106, 107, 108, 109, 111, 112, 113, 114, 116, 118, 119, 120, 122, 127, 131, 132, 136, 137, 140, 141, 142, 144, 145, 146, 149, 150, 151, 156, 158, 159, 161, 162, 166, 168, 169, 170, 171, 172, 175, 178, 180, 188, 191, 194, 195, 198, 199, 201, 202, 203, 204, 205, 206, 209, 210, 211, 214, 215, 216, 217, 220, 221, 222, 225, 228, 238, 239, 240, 243, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 753, 754, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 837, 853, 855, 857, 860, 864, 878], "design": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 60, 71, 72, 75, 81, 82, 83, 87, 98, 112, 113, 114, 120, 132, 136, 141, 144, 146, 151, 160, 161, 172, 180, 188, 190, 191, 198, 200, 202, 203, 204, 206, 207, 209, 210, 211, 222, 225, 230, 243, 256, 263, 264, 265, 266, 341, 385, 388, 411, 420, 444, 445, 447, 448, 477, 478, 485, 487, 489, 492, 493, 494, 499, 503, 556, 558, 585, 592, 599, 609, 678, 682, 709, 720, 798, 816, 817, 842, 854, 857, 859, 866, 878], "pass": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 32, 34, 42, 43, 59, 71, 72, 75, 81, 82, 83, 87, 98, 112, 113, 114, 120, 132, 134, 136, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 155, 156, 158, 166, 167, 168, 169, 170, 171, 172, 180, 183, 189, 191, 195, 198, 199, 200, 202, 203, 204, 205, 206, 209, 210, 211, 214, 215, 216, 217, 220, 222, 225, 227, 229, 230, 233, 234, 235, 238, 239, 243, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 302, 303, 304, 305, 306, 307, 308, 311, 313, 315, 316, 317, 321, 322, 323, 328, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 422, 425, 426, 428, 430, 433, 434, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 459, 460, 464, 465, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 519, 520, 521, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 550, 553, 556, 557, 558, 559, 560, 562, 563, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 588, 589, 592, 593, 594, 597, 598, 599, 600, 602, 604, 605, 606, 607, 608, 609, 611, 612, 613, 615, 616, 617, 619, 620, 621, 622, 623, 627, 628, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 642, 644, 645, 646, 648, 649, 650, 651, 660, 661, 662, 663, 665, 667, 668, 669, 670, 671, 672, 673, 677, 684, 685, 686, 687, 688, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 715, 716, 719, 720, 724, 725, 727, 728, 729, 730, 733, 734, 735, 740, 744, 745, 746, 753, 758, 761, 762, 765, 767, 769, 770, 771, 773, 775, 776, 777, 778, 779, 780, 782, 783, 784, 785, 788, 789, 790, 793, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 814, 818, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 835, 837, 841, 842, 853, 855, 857, 860, 878], "zero": [1, 2, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 24, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 63, 69, 71, 72, 73, 75, 81, 82, 83, 87, 89, 92, 93, 94, 98, 108, 111, 112, 113, 114, 119, 120, 132, 136, 140, 141, 142, 144, 146, 149, 151, 152, 158, 160, 162, 166, 168, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 220, 221, 222, 225, 229, 230, 240, 256, 257, 258, 261, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 277, 278, 279, 280, 282, 296, 297, 353, 357, 359, 368, 411, 415, 420, 421, 422, 443, 445, 447, 448, 449, 450, 472, 477, 478, 479, 490, 530, 541, 557, 558, 577, 599, 612, 648, 649, 650, 658, 662, 677, 684, 685, 687, 688, 692, 693, 697, 699, 700, 701, 713, 716, 723, 724, 725, 726, 727, 729, 745, 760, 764, 774, 775, 798, 803, 808, 809, 833, 837, 853, 860, 863, 878], "phase": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 27, 34, 42, 71, 72, 75, 81, 82, 83, 87, 98, 104, 105, 112, 113, 114, 120, 132, 136, 141, 144, 146, 151, 167, 172, 190, 191, 195, 198, 200, 201, 202, 203, 204, 206, 209, 210, 211, 222, 230, 240, 243, 263, 264, 265, 266, 268, 269, 270, 271, 274, 277, 278, 279, 289, 340, 370, 411, 420, 422, 443, 445, 447, 448, 450, 477, 478, 523, 528, 538, 541, 554, 557, 619, 724, 725, 735, 786, 833, 844, 854, 878], "non": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 24, 34, 40, 41, 42, 46, 50, 59, 69, 71, 72, 75, 81, 82, 83, 87, 92, 98, 108, 112, 113, 114, 120, 132, 136, 141, 142, 143, 144, 146, 150, 151, 158, 165, 166, 169, 171, 172, 175, 180, 181, 185, 189, 190, 191, 195, 198, 200, 201, 202, 203, 204, 206, 207, 209, 210, 211, 214, 220, 230, 231, 232, 243, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 277, 278, 279, 285, 296, 297, 317, 352, 353, 357, 359, 409, 415, 416, 417, 421, 438, 445, 447, 448, 450, 475, 477, 478, 493, 530, 537, 543, 554, 556, 557, 558, 571, 585, 586, 603, 609, 612, 632, 658, 676, 677, 684, 685, 687, 688, 692, 693, 697, 699, 700, 701, 727, 735, 745, 762, 773, 776, 777, 784, 788, 797, 800, 804, 805, 807, 833, 835, 837, 846, 853, 857, 859, 860, 875, 878], "causal": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 71, 72, 75, 81, 82, 83, 87, 98, 112, 113, 114, 120, 132, 136, 141, 144, 146, 151, 172, 191, 195, 198, 200, 201, 202, 203, 204, 206, 209, 210, 211, 230, 263, 264, 265, 266, 415, 445, 447, 448, 477, 478], "bandstop": [1, 5, 81, 136, 202, 211, 477, 478, 798], "domain": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 46, 71, 72, 75, 81, 82, 83, 87, 98, 102, 112, 113, 114, 120, 132, 134, 136, 141, 144, 146, 151, 165, 166, 172, 191, 195, 198, 200, 201, 202, 203, 206, 209, 210, 211, 217, 230, 240, 241, 242, 243, 255, 263, 264, 265, 266, 411, 420, 421, 445, 447, 448, 449, 450, 477, 478, 540, 541, 646, 699, 701, 715, 716, 733, 740, 859, 878], "ham": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 75, 81, 82, 83, 87, 98, 112, 113, 114, 120, 132, 136, 141, 144, 146, 151, 191, 195, 201, 202, 203, 204, 206, 209, 210, 211, 230, 263, 264, 265, 266, 411, 420, 445, 447, 448, 477, 478, 716, 799, 878], "0194": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 75, 81, 82, 83, 87, 98, 112, 113, 114, 120, 132, 136, 141, 144, 146, 151, 191, 195, 201, 202, 203, 204, 209, 210, 211, 230], "passband": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 71, 72, 75, 81, 82, 83, 87, 98, 112, 113, 114, 120, 132, 136, 141, 144, 146, 151, 172, 191, 195, 198, 200, 202, 203, 204, 206, 209, 210, 211, 230, 853], "rippl": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 75, 81, 82, 83, 87, 98, 112, 113, 114, 120, 132, 136, 141, 144, 146, 151, 191, 195, 202, 203, 204, 209, 210, 211, 230], "db": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 71, 72, 75, 81, 82, 83, 87, 98, 107, 108, 112, 113, 114, 120, 128, 132, 136, 137, 141, 142, 144, 146, 151, 169, 172, 191, 195, 198, 200, 201, 202, 203, 204, 206, 209, 210, 211, 214, 217, 220, 222, 230, 238, 239, 240, 263, 264, 265, 266, 268, 310, 311, 370, 372, 442, 445, 477, 478, 492, 503, 530, 554, 555, 557, 642, 692, 697, 699, 700, 701, 745, 761, 777, 786, 790, 793, 799, 801, 833, 860, 878], "stopband": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 75, 81, 82, 83, 87, 98, 112, 113, 114, 120, 132, 136, 141, 144, 146, 151, 191, 195, 202, 203, 204, 209, 210, 211, 230], "attenu": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 75, 81, 82, 83, 87, 98, 112, 113, 114, 120, 132, 136, 141, 144, 146, 151, 162, 191, 195, 202, 203, 204, 209, 210, 211, 230, 263, 264, 265, 266, 411, 420, 445, 447, 448, 477, 478, 860, 878], "lower": [1, 2, 5, 8, 9, 10, 12, 13, 14, 15, 16, 18, 21, 22, 34, 37, 40, 42, 49, 54, 55, 61, 69, 71, 72, 75, 81, 82, 87, 98, 106, 111, 112, 113, 114, 119, 120, 126, 132, 134, 136, 141, 142, 144, 146, 151, 156, 160, 172, 180, 181, 184, 195, 198, 200, 201, 202, 203, 204, 205, 206, 210, 211, 217, 227, 228, 229, 230, 233, 235, 240, 258, 260, 263, 264, 265, 266, 270, 271, 272, 274, 277, 278, 279, 409, 411, 414, 416, 435, 445, 447, 477, 478, 517, 530, 531, 556, 557, 562, 567, 571, 589, 608, 676, 683, 684, 686, 687, 697, 698, 699, 701, 715, 716, 762, 764, 769, 776, 777, 783, 784, 788, 797, 798, 799, 800, 803, 805, 807, 808, 809, 833, 835, 878], "transit": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 71, 72, 75, 81, 82, 83, 87, 98, 112, 113, 114, 120, 132, 136, 141, 144, 146, 151, 172, 191, 195, 198, 200, 202, 203, 204, 206, 209, 210, 211, 230, 256, 263, 264, 265, 266, 411, 420, 445, 447, 448, 477, 478, 559, 589, 811, 860, 878], "bandwidth": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 71, 72, 75, 81, 82, 83, 87, 98, 103, 112, 113, 114, 120, 132, 136, 141, 144, 146, 151, 172, 191, 195, 198, 200, 202, 203, 204, 206, 209, 210, 211, 230, 240, 263, 264, 265, 266, 414, 422, 448, 477, 478, 530, 531, 699, 701, 704, 707, 709, 715, 725, 728, 777, 878], "50": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 28, 34, 35, 41, 42, 45, 46, 47, 65, 71, 75, 80, 81, 82, 83, 87, 89, 94, 98, 102, 103, 107, 108, 111, 112, 113, 114, 119, 120, 132, 135, 136, 137, 143, 144, 146, 149, 151, 158, 160, 166, 168, 169, 170, 171, 172, 178, 180, 184, 185, 189, 191, 194, 195, 198, 200, 201, 202, 203, 204, 206, 208, 211, 214, 215, 216, 222, 225, 226, 227, 229, 230, 233, 234, 235, 240, 243, 255, 334, 444, 477, 478, 539, 566, 654, 659, 677, 685, 745, 793, 853, 860, 878], "hz": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 32, 33, 34, 42, 67, 70, 71, 72, 75, 80, 81, 82, 83, 87, 89, 92, 93, 94, 98, 103, 106, 107, 108, 112, 113, 114, 120, 122, 126, 132, 136, 137, 141, 142, 144, 146, 151, 166, 167, 168, 169, 172, 180, 183, 184, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 220, 222, 227, 228, 229, 230, 238, 239, 243, 255, 263, 264, 265, 266, 411, 414, 420, 444, 445, 447, 448, 450, 477, 478, 530, 531, 557, 562, 565, 569, 570, 576, 578, 581, 585, 589, 663, 683, 697, 699, 700, 701, 704, 707, 713, 715, 721, 723, 724, 725, 727, 728, 775, 777, 786, 793, 798, 799, 854, 863, 864], "upper": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 34, 39, 42, 61, 69, 71, 75, 81, 83, 87, 112, 113, 114, 119, 120, 126, 132, 134, 136, 141, 142, 144, 146, 159, 166, 172, 191, 195, 198, 200, 201, 202, 203, 204, 206, 209, 210, 211, 230, 239, 240, 243, 260, 261, 262, 263, 264, 265, 266, 270, 271, 272, 274, 277, 278, 279, 281, 409, 411, 414, 416, 435, 445, 447, 453, 477, 478, 530, 531, 556, 557, 562, 589, 676, 683, 684, 685, 686, 687, 688, 697, 698, 699, 700, 701, 713, 715, 716, 723, 762, 764, 769, 777, 783, 784, 788, 797, 799, 800, 803, 805, 807, 808, 809, 878], "7921": 1, "601": [1, 5, 13, 140, 149, 195, 198, 203, 205, 213, 214, 221, 230], "parallel": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 31, 32, 33, 34, 41, 42, 45, 50, 65, 71, 72, 75, 77, 81, 82, 83, 86, 87, 89, 94, 98, 99, 106, 108, 109, 111, 112, 113, 114, 118, 120, 123, 132, 136, 141, 144, 146, 150, 151, 158, 159, 166, 172, 176, 181, 182, 183, 184, 185, 191, 195, 198, 199, 200, 202, 203, 204, 206, 207, 209, 210, 211, 220, 222, 227, 228, 229, 230, 239, 243, 255, 263, 264, 265, 266, 269, 270, 271, 273, 274, 277, 278, 279, 281, 353, 354, 356, 358, 411, 412, 414, 415, 419, 420, 422, 425, 426, 447, 448, 449, 452, 454, 465, 467, 472, 474, 475, 477, 478, 516, 519, 520, 530, 531, 535, 540, 541, 562, 569, 570, 593, 637, 640, 645, 648, 649, 650, 662, 684, 685, 686, 687, 688, 699, 701, 702, 703, 704, 705, 706, 707, 715, 716, 724, 725, 726, 727, 728, 729, 777, 780, 799, 845, 857, 860, 866, 878], "n_job": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 71, 72, 75, 77, 81, 82, 83, 86, 87, 89, 94, 95, 98, 99, 102, 106, 108, 109, 111, 112, 113, 114, 118, 120, 123, 132, 136, 141, 144, 146, 150, 151, 158, 159, 166, 172, 176, 181, 182, 183, 184, 185, 191, 195, 198, 199, 200, 202, 203, 204, 206, 207, 209, 210, 211, 220, 222, 225, 227, 228, 229, 230, 233, 234, 235, 239, 255, 263, 264, 265, 266, 269, 270, 271, 273, 274, 277, 278, 279, 281, 353, 354, 356, 358, 411, 412, 414, 415, 419, 420, 421, 422, 425, 426, 447, 448, 449, 452, 465, 467, 477, 478, 516, 519, 520, 530, 531, 540, 541, 562, 569, 570, 637, 645, 648, 649, 650, 662, 684, 685, 686, 687, 688, 699, 701, 702, 703, 704, 705, 706, 707, 715, 716, 724, 725, 726, 727, 728, 729, 777, 780, 799, 835, 857, 878], "backend": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 71, 72, 75, 77, 78, 81, 82, 83, 86, 87, 89, 94, 98, 99, 106, 108, 109, 111, 112, 113, 114, 118, 120, 123, 132, 134, 136, 141, 144, 146, 150, 151, 156, 158, 159, 160, 166, 171, 172, 176, 181, 182, 183, 184, 185, 191, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 211, 220, 222, 227, 228, 229, 230, 239, 263, 264, 270, 271, 274, 277, 278, 279, 468, 477, 478, 557, 745, 752, 754, 755, 756, 757, 775, 792, 798, 803, 808, 810, 814, 815, 816, 817, 835, 836, 841, 857, 866, 878], "sequentialbackend": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 71, 72, 75, 77, 81, 82, 83, 86, 87, 89, 94, 98, 99, 106, 108, 109, 111, 112, 113, 114, 118, 120, 123, 132, 136, 141, 144, 146, 150, 151, 158, 159, 166, 172, 176, 181, 182, 183, 184, 185, 191, 195, 198, 199, 200, 202, 203, 204, 206, 207, 209, 210, 211, 220, 222, 227, 228, 229, 230, 239], "concurr": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 71, 72, 75, 77, 81, 82, 83, 86, 87, 89, 94, 98, 99, 106, 108, 109, 111, 112, 113, 114, 118, 120, 123, 132, 136, 141, 144, 146, 150, 151, 158, 159, 166, 172, 176, 181, 182, 183, 184, 185, 191, 195, 198, 199, 200, 202, 203, 204, 206, 207, 209, 210, 211, 220, 222, 227, 228, 229, 230, 239], "worker": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 71, 72, 75, 77, 81, 82, 83, 86, 87, 89, 94, 98, 99, 106, 108, 109, 111, 112, 113, 114, 118, 120, 123, 132, 136, 141, 144, 146, 150, 151, 158, 159, 166, 172, 176, 181, 182, 183, 184, 185, 191, 195, 198, 199, 200, 202, 203, 204, 206, 207, 209, 210, 211, 220, 222, 227, 228, 229, 230, 239, 866], "done": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 67, 69, 71, 72, 75, 77, 78, 79, 81, 82, 83, 86, 87, 89, 91, 92, 93, 94, 98, 99, 100, 102, 103, 106, 107, 108, 109, 111, 112, 113, 114, 118, 120, 123, 130, 132, 133, 134, 135, 136, 140, 141, 143, 144, 146, 150, 151, 155, 156, 158, 159, 160, 161, 162, 166, 167, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 214, 220, 221, 222, 225, 226, 227, 228, 229, 230, 233, 234, 235, 239, 240, 256, 261, 262, 263, 264, 265, 266, 268, 270, 271, 274, 277, 278, 279, 296, 297, 319, 358, 422, 472, 474, 475, 477, 478, 524, 526, 527, 528, 557, 569, 570, 572, 574, 683, 697, 698, 700, 722, 724, 725, 727, 728, 743, 745, 748, 761, 769, 799, 833, 837, 842, 843, 853, 857, 859, 860, 866, 878], "out": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 67, 69, 71, 72, 73, 75, 77, 79, 81, 82, 83, 86, 87, 89, 91, 93, 94, 98, 99, 106, 108, 109, 111, 112, 113, 114, 118, 119, 120, 122, 123, 126, 130, 132, 134, 136, 137, 140, 141, 143, 144, 146, 150, 151, 156, 158, 159, 160, 166, 167, 170, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 217, 220, 222, 225, 227, 228, 229, 230, 239, 240, 255, 260, 263, 264, 265, 266, 268, 272, 287, 301, 337, 354, 355, 356, 409, 411, 416, 420, 445, 447, 477, 478, 485, 500, 523, 531, 556, 557, 558, 571, 593, 599, 601, 689, 697, 699, 701, 724, 725, 732, 762, 769, 777, 781, 784, 788, 789, 797, 800, 805, 807, 835, 836, 837, 843, 854, 855, 857, 860, 863, 864, 878], "elaps": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 71, 72, 75, 77, 81, 82, 83, 86, 87, 89, 94, 98, 99, 106, 108, 109, 111, 112, 113, 114, 118, 120, 123, 132, 136, 141, 144, 146, 150, 151, 158, 159, 166, 172, 176, 181, 182, 183, 184, 185, 191, 195, 198, 199, 200, 202, 203, 204, 206, 207, 209, 210, 211, 220, 222, 227, 228, 229, 230, 239], "remain": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 67, 71, 72, 74, 75, 77, 81, 82, 83, 86, 87, 89, 91, 93, 94, 98, 99, 106, 108, 109, 111, 112, 113, 114, 118, 120, 123, 130, 132, 136, 137, 141, 144, 146, 150, 151, 156, 158, 159, 166, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 211, 220, 222, 227, 228, 229, 230, 239, 263, 264, 265, 266, 268, 270, 271, 274, 277, 278, 279, 296, 297, 353, 357, 358, 368, 369, 370, 409, 416, 432, 452, 453, 472, 474, 475, 477, 478, 479, 535, 557, 638, 685, 697, 699, 700, 724, 725, 727, 728, 785, 845, 853, 863, 866, 878], "299": [1, 5, 13, 34, 111, 140, 169, 184, 208, 225, 238], "9": [1, 2, 4, 5, 7, 8, 9, 11, 13, 19, 20, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 61, 64, 66, 67, 68, 69, 70, 72, 75, 77, 79, 80, 82, 84, 85, 86, 89, 91, 92, 93, 94, 95, 96, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 118, 119, 123, 126, 127, 129, 131, 134, 135, 137, 140, 141, 142, 144, 145, 146, 148, 149, 150, 151, 154, 156, 158, 159, 162, 164, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 191, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 238, 239, 240, 242, 243, 261, 263, 264, 265, 266, 270, 275, 276, 278, 279, 296, 297, 299, 311, 320, 334, 352, 353, 359, 360, 379, 402, 452, 462, 477, 478, 497, 513, 521, 532, 540, 556, 557, 565, 583, 600, 611, 639, 642, 679, 697, 699, 700, 701, 709, 719, 728, 729, 730, 745, 746, 748, 762, 772, 773, 778, 797, 802, 835, 836, 842, 843, 853, 854, 857, 860, 863], "finish": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 71, 72, 75, 77, 81, 82, 83, 86, 87, 89, 94, 98, 99, 106, 108, 109, 111, 112, 113, 114, 118, 120, 123, 132, 134, 136, 141, 144, 146, 150, 151, 158, 159, 166, 172, 176, 181, 182, 183, 184, 185, 191, 195, 198, 199, 200, 202, 203, 204, 206, 207, 209, 210, 211, 216, 220, 222, 227, 228, 229, 230, 239, 855, 878], "66": [1, 12, 13, 16, 19, 21, 35, 40, 41, 45, 78, 80, 102, 105, 107, 111, 113, 144, 146, 158, 169, 176, 181, 184, 191, 204, 208, 225, 226, 229, 230, 243, 265, 266, 296, 297, 353, 357, 358, 368, 369, 370, 409, 416, 452, 453, 472, 474, 475, 535, 557, 785, 878], "id": [1, 5, 12, 21, 32, 33, 34, 42, 45, 46, 49, 68, 70, 71, 72, 79, 80, 81, 89, 92, 93, 94, 98, 106, 107, 109, 111, 112, 140, 141, 142, 146, 149, 152, 162, 166, 168, 169, 171, 172, 177, 180, 182, 183, 185, 191, 195, 199, 202, 203, 204, 206, 211, 220, 221, 222, 227, 239, 255, 258, 263, 264, 265, 268, 270, 271, 274, 276, 277, 278, 279, 282, 296, 297, 312, 353, 367, 375, 425, 431, 433, 435, 437, 438, 450, 462, 477, 478, 517, 518, 522, 552, 558, 569, 570, 579, 602, 609, 611, 612, 618, 646, 699, 700, 745, 778, 798, 803, 808, 823, 837, 857, 860, 878], "Not": [1, 8, 9, 11, 12, 16, 18, 21, 28, 32, 33, 34, 45, 46, 49, 61, 68, 70, 71, 72, 73, 75, 79, 80, 81, 82, 87, 89, 92, 93, 94, 95, 96, 99, 102, 103, 106, 107, 108, 109, 111, 112, 113, 116, 120, 126, 127, 131, 135, 136, 137, 140, 141, 142, 143, 145, 146, 149, 151, 152, 166, 167, 168, 169, 172, 177, 180, 182, 183, 184, 185, 191, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 211, 214, 215, 216, 217, 220, 221, 222, 227, 228, 229, 230, 233, 235, 239, 265, 266, 271, 277, 278, 279, 417, 420, 444, 453, 558, 697, 745, 781, 809, 836, 860, 866], "metadata": [1, 4, 8, 9, 11, 12, 16, 18, 21, 28, 32, 33, 34, 45, 46, 49, 61, 68, 70, 71, 72, 73, 79, 82, 87, 89, 92, 93, 94, 95, 96, 99, 100, 102, 103, 106, 107, 108, 109, 111, 112, 113, 116, 120, 127, 131, 135, 136, 137, 140, 141, 142, 145, 146, 147, 148, 149, 151, 152, 161, 165, 166, 172, 177, 180, 182, 183, 184, 185, 188, 189, 190, 191, 198, 199, 200, 202, 203, 204, 206, 210, 211, 214, 220, 221, 222, 226, 227, 228, 229, 230, 233, 235, 238, 239, 258, 263, 264, 265, 266, 267, 268, 352, 433, 438, 477, 478, 483, 608, 628, 697, 699, 700, 701, 769, 833, 854, 878], "33": [1, 8, 12, 13, 19, 21, 28, 33, 34, 35, 39, 40, 41, 45, 47, 75, 78, 80, 102, 107, 111, 113, 114, 122, 137, 141, 144, 151, 169, 170, 183, 195, 201, 202, 204, 208, 210, 213, 225, 226, 227, 229, 230, 232, 234, 235, 263, 264, 265, 266, 334, 450, 477, 478, 521, 799, 860, 878], "interv": [1, 10, 11, 28, 32, 33, 34, 38, 45, 46, 49, 61, 68, 69, 70, 71, 79, 82, 89, 92, 93, 94, 95, 96, 99, 102, 103, 106, 109, 111, 112, 116, 126, 127, 131, 140, 142, 144, 145, 149, 150, 151, 152, 166, 172, 176, 177, 178, 180, 182, 183, 184, 185, 191, 199, 200, 202, 203, 206, 209, 210, 221, 222, 227, 228, 229, 233, 235, 239, 255, 257, 258, 261, 262, 263, 264, 265, 266, 269, 270, 271, 273, 274, 277, 278, 279, 286, 345, 358, 433, 530, 540, 541, 557, 573, 574, 579, 615, 616, 647, 649, 674, 676, 697, 699, 700, 701, 710, 769, 790, 805, 854, 864, 878], "mode": [1, 5, 11, 22, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 44, 45, 46, 47, 49, 51, 57, 58, 59, 60, 61, 68, 70, 71, 72, 77, 79, 85, 86, 92, 93, 94, 95, 96, 99, 102, 103, 106, 109, 111, 112, 113, 116, 118, 119, 126, 127, 130, 131, 136, 140, 141, 142, 144, 145, 149, 151, 152, 158, 161, 166, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 191, 195, 198, 199, 200, 201, 202, 203, 204, 206, 208, 209, 210, 211, 216, 217, 221, 227, 228, 229, 230, 233, 235, 239, 240, 243, 255, 260, 261, 263, 264, 265, 266, 270, 271, 272, 273, 274, 277, 278, 279, 286, 296, 297, 340, 353, 357, 358, 359, 363, 364, 368, 369, 370, 408, 409, 415, 416, 443, 447, 448, 449, 468, 472, 477, 478, 516, 533, 534, 556, 557, 579, 585, 638, 660, 663, 692, 697, 698, 699, 700, 701, 722, 745, 771, 773, 775, 776, 777, 781, 784, 787, 788, 792, 797, 798, 799, 800, 803, 804, 805, 808, 809, 814, 837, 845, 866, 878], "mean": [1, 4, 8, 9, 10, 11, 14, 16, 19, 21, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 51, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 77, 79, 83, 85, 86, 92, 93, 94, 95, 96, 99, 100, 102, 103, 106, 109, 111, 112, 113, 116, 118, 119, 126, 127, 131, 137, 140, 141, 142, 143, 144, 145, 149, 150, 152, 156, 157, 158, 160, 166, 170, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 195, 198, 199, 200, 201, 202, 203, 204, 206, 207, 209, 210, 211, 214, 220, 221, 222, 225, 226, 227, 228, 229, 230, 233, 235, 238, 239, 240, 257, 258, 260, 263, 264, 265, 266, 267, 270, 271, 272, 273, 274, 276, 277, 278, 279, 286, 289, 296, 297, 313, 317, 353, 358, 409, 415, 416, 418, 421, 430, 442, 443, 451, 468, 472, 474, 475, 477, 478, 479, 485, 492, 499, 510, 516, 524, 530, 533, 534, 535, 540, 541, 556, 557, 561, 564, 567, 568, 571, 573, 576, 578, 583, 585, 594, 602, 615, 616, 642, 649, 650, 651, 660, 661, 663, 676, 679, 684, 685, 686, 687, 688, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 713, 716, 723, 724, 725, 727, 728, 745, 769, 771, 775, 776, 777, 779, 784, 788, 797, 798, 799, 800, 803, 805, 807, 837, 842, 857, 859, 860, 863, 878], "activ": [1, 4, 5, 8, 11, 12, 16, 18, 19, 21, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 67, 68, 69, 70, 71, 72, 73, 75, 77, 79, 81, 82, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 111, 112, 113, 115, 116, 118, 119, 120, 121, 123, 129, 131, 133, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 158, 159, 162, 166, 167, 168, 172, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 189, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 214, 215, 217, 220, 221, 222, 225, 226, 227, 228, 229, 230, 233, 234, 235, 239, 243, 256, 258, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 296, 297, 323, 347, 435, 438, 443, 450, 452, 456, 472, 474, 475, 476, 477, 478, 482, 493, 497, 510, 513, 523, 524, 525, 526, 527, 528, 535, 538, 554, 562, 572, 589, 615, 617, 619, 620, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 662, 669, 672, 689, 692, 697, 699, 700, 701, 713, 723, 724, 727, 754, 764, 766, 773, 804, 809, 833, 835, 836, 837, 838, 840, 841, 844, 845, 853, 854, 857, 859, 860, 863, 866, 878], "projector": [1, 2, 4, 5, 8, 9, 16, 18, 21, 28, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 67, 68, 70, 72, 75, 82, 89, 91, 92, 93, 98, 100, 102, 108, 118, 120, 126, 131, 140, 141, 146, 149, 150, 151, 152, 162, 165, 166, 167, 168, 169, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 195, 198, 199, 202, 203, 204, 210, 211, 212, 213, 214, 221, 222, 226, 227, 228, 229, 230, 233, 235, 255, 263, 264, 265, 266, 268, 272, 273, 296, 297, 353, 354, 355, 356, 357, 358, 368, 369, 370, 409, 416, 439, 440, 441, 442, 452, 453, 472, 474, 475, 477, 478, 497, 524, 535, 557, 569, 570, 585, 615, 623, 642, 698, 702, 703, 704, 705, 706, 707, 708, 775, 785, 792, 796, 797, 798, 817, 829, 833, 853, 855, 857, 860, 878], "n_channel": [1, 16, 18, 19, 28, 31, 35, 42, 51, 58, 59, 63, 65, 68, 69, 70, 73, 74, 75, 80, 82, 83, 89, 98, 102, 113, 118, 126, 131, 140, 141, 142, 143, 149, 150, 151, 159, 162, 166, 167, 168, 172, 176, 177, 180, 181, 182, 190, 195, 198, 199, 202, 203, 204, 205, 206, 207, 210, 214, 217, 220, 222, 227, 228, 229, 230, 233, 235, 240, 255, 258, 260, 262, 263, 264, 265, 266, 267, 268, 296, 297, 312, 313, 317, 328, 368, 409, 410, 411, 414, 415, 416, 417, 418, 420, 422, 423, 425, 447, 448, 477, 478, 556, 557, 558, 562, 565, 665, 682, 683, 697, 698, 699, 700, 701, 702, 703, 704, 724, 725, 726, 762, 765, 769, 775, 776, 777, 784, 798, 800, 805, 807, 815, 833, 878], "No": [1, 2, 4, 5, 8, 9, 12, 16, 18, 21, 34, 41, 46, 48, 50, 54, 55, 73, 79, 82, 87, 89, 100, 107, 108, 111, 112, 113, 115, 116, 120, 126, 127, 135, 136, 137, 140, 141, 142, 143, 146, 149, 151, 156, 166, 171, 172, 178, 184, 185, 190, 191, 195, 198, 201, 203, 204, 206, 209, 210, 211, 220, 222, 225, 226, 230, 239, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 385, 410, 425, 472, 474, 475, 477, 478, 524, 526, 527, 528, 661, 799, 836, 837, 854, 859, 863], "gradiomet": [1, 22, 32, 34, 35, 46, 59, 70, 72, 75, 79, 81, 86, 92, 99, 102, 107, 108, 109, 110, 112, 116, 118, 119, 142, 145, 146, 150, 162, 166, 167, 168, 169, 180, 183, 184, 188, 191, 198, 199, 200, 202, 204, 205, 206, 208, 209, 214, 215, 216, 217, 220, 222, 225, 227, 228, 229, 239, 255, 258, 260, 263, 264, 265, 266, 270, 271, 272, 274, 277, 278, 279, 296, 297, 353, 354, 355, 356, 357, 358, 368, 369, 370, 409, 416, 430, 452, 453, 472, 474, 475, 477, 478, 513, 535, 554, 555, 556, 557, 567, 568, 569, 570, 571, 572, 573, 574, 576, 585, 596, 683, 697, 699, 700, 701, 762, 768, 769, 775, 776, 777, 779, 781, 783, 784, 785, 788, 797, 798, 800, 805, 806, 807, 833, 853, 857, 860, 863, 878], "forc": [1, 4, 146, 161, 166, 178, 191, 200, 255, 263, 264, 265, 266, 307, 318, 363, 374, 376, 377, 378, 379, 381, 382, 384, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 477, 478, 501, 524, 611, 697, 699, 700, 701, 745, 835, 837, 854, 878], "n_grad": [1, 191, 206, 255, 354, 355, 356, 569, 570], "n_eeg": [1, 146, 191, 206, 255, 354, 355, 356, 569, 570], "axial": [1, 33, 47, 81, 83, 91, 108, 110, 130, 135, 142, 146, 160, 172, 180, 183, 191, 198, 205, 206, 225, 261, 278, 279, 745, 763, 773, 860], "100": [1, 2, 5, 10, 11, 13, 16, 19, 22, 29, 30, 31, 33, 34, 35, 38, 39, 40, 41, 44, 45, 48, 50, 51, 53, 54, 55, 57, 58, 59, 60, 73, 74, 77, 78, 80, 82, 85, 86, 89, 91, 94, 95, 100, 102, 103, 107, 108, 110, 111, 113, 114, 115, 118, 119, 122, 124, 126, 134, 135, 136, 137, 140, 141, 143, 144, 145, 146, 149, 151, 156, 158, 169, 170, 172, 176, 177, 178, 179, 180, 181, 183, 184, 190, 191, 194, 195, 200, 201, 202, 204, 206, 208, 211, 220, 221, 222, 225, 226, 227, 228, 229, 230, 233, 234, 235, 243, 255, 263, 264, 265, 266, 273, 359, 430, 449, 474, 475, 477, 478, 500, 568, 576, 585, 663, 683, 699, 701, 726, 729, 735, 745, 775, 793, 798, 818, 854, 859, 863, 878], "pca": [1, 5, 11, 13, 15, 16, 17, 18, 20, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 67, 68, 70, 71, 72, 73, 75, 77, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 102, 103, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 122, 123, 126, 128, 130, 131, 132, 140, 141, 142, 146, 149, 150, 151, 152, 156, 157, 158, 160, 162, 166, 167, 168, 169, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 214, 215, 216, 217, 221, 222, 227, 228, 229, 230, 233, 235, 263, 265, 266, 268, 271, 277, 279, 296, 297, 353, 368, 372, 423, 472, 475, 477, 530, 531, 540, 541, 554, 557, 612, 789, 853, 864, 878], "01": [1, 6, 8, 11, 12, 13, 19, 20, 21, 24, 32, 33, 34, 35, 46, 56, 59, 70, 72, 75, 77, 82, 83, 84, 89, 90, 91, 92, 102, 107, 108, 110, 111, 112, 119, 120, 122, 123, 126, 129, 130, 137, 139, 141, 142, 146, 150, 151, 158, 159, 164, 166, 167, 168, 169, 170, 172, 174, 180, 181, 183, 185, 187, 191, 194, 195, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 214, 215, 216, 217, 222, 224, 225, 226, 227, 229, 230, 232, 233, 234, 235, 239, 240, 242, 243, 254, 255, 257, 263, 264, 340, 342, 346, 379, 401, 402, 417, 477, 478, 488, 571, 576, 579, 583, 590, 594, 692, 854], "02": [1, 2, 5, 11, 13, 19, 33, 34, 35, 56, 63, 66, 81, 83, 84, 91, 102, 107, 108, 110, 113, 119, 122, 125, 129, 130, 136, 139, 142, 146, 148, 150, 154, 157, 160, 164, 170, 172, 174, 180, 183, 195, 201, 205, 206, 207, 208, 210, 211, 216, 225, 226, 227, 229, 230, 232, 234, 235, 240, 243, 254, 255, 263, 264, 320, 472, 475, 477, 478, 488, 713, 723, 724, 726, 727, 729], "creat": [1, 2, 4, 5, 8, 9, 11, 15, 16, 18, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 63, 65, 67, 68, 69, 70, 72, 74, 79, 82, 85, 87, 91, 92, 94, 102, 103, 106, 107, 108, 109, 111, 112, 113, 116, 119, 120, 122, 124, 126, 127, 131, 133, 134, 135, 136, 141, 142, 145, 146, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 195, 198, 199, 200, 201, 202, 204, 205, 214, 217, 222, 223, 224, 226, 228, 230, 233, 235, 238, 239, 257, 258, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 282, 287, 296, 297, 301, 306, 307, 308, 311, 325, 353, 354, 355, 359, 364, 371, 372, 409, 416, 422, 426, 431, 433, 444, 445, 450, 477, 478, 489, 494, 500, 513, 514, 515, 520, 521, 523, 546, 556, 557, 559, 560, 562, 566, 569, 570, 573, 574, 577, 582, 609, 611, 635, 636, 637, 639, 642, 646, 647, 651, 674, 677, 683, 692, 697, 698, 699, 700, 701, 710, 716, 722, 724, 725, 727, 728, 732, 745, 748, 750, 753, 758, 761, 762, 768, 769, 771, 773, 776, 777, 780, 781, 782, 783, 784, 788, 790, 793, 795, 796, 797, 798, 799, 800, 801, 803, 805, 807, 808, 816, 817, 828, 833, 835, 841, 845, 854, 858, 863, 866, 868, 878], "an": [1, 4, 5, 7, 11, 12, 15, 18, 19, 21, 26, 27, 28, 29, 30, 31, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 54, 55, 56, 58, 59, 60, 61, 63, 67, 68, 70, 72, 73, 77, 78, 81, 82, 83, 87, 89, 91, 92, 93, 94, 100, 103, 106, 107, 108, 109, 110, 111, 113, 114, 118, 119, 120, 121, 126, 127, 128, 129, 131, 134, 135, 136, 137, 140, 141, 144, 146, 149, 150, 151, 152, 153, 155, 156, 158, 160, 162, 163, 164, 165, 166, 167, 170, 171, 175, 176, 177, 178, 179, 181, 183, 186, 187, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 214, 215, 216, 217, 220, 221, 222, 225, 226, 227, 229, 230, 233, 234, 235, 238, 239, 241, 242, 243, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 287, 288, 290, 292, 293, 294, 295, 296, 297, 299, 301, 302, 303, 311, 313, 315, 316, 317, 320, 323, 324, 327, 329, 338, 346, 347, 348, 353, 357, 359, 360, 362, 364, 368, 369, 371, 372, 384, 387, 388, 392, 408, 409, 415, 416, 417, 421, 424, 426, 427, 428, 431, 433, 434, 436, 438, 443, 444, 445, 448, 449, 450, 451, 452, 456, 457, 459, 464, 468, 472, 474, 475, 476, 477, 478, 479, 482, 484, 486, 487, 492, 493, 494, 495, 497, 501, 503, 504, 509, 510, 512, 513, 516, 519, 520, 521, 523, 524, 526, 530, 531, 533, 534, 535, 537, 538, 539, 542, 544, 546, 548, 550, 553, 554, 556, 557, 558, 559, 560, 561, 565, 567, 569, 570, 571, 573, 574, 576, 578, 583, 584, 585, 586, 592, 595, 598, 603, 604, 605, 606, 607, 610, 612, 614, 615, 617, 625, 627, 631, 632, 634, 636, 637, 639, 642, 645, 646, 647, 650, 653, 657, 662, 663, 669, 672, 674, 677, 678, 683, 684, 685, 686, 687, 688, 689, 691, 692, 693, 697, 698, 699, 700, 701, 702, 703, 704, 705, 710, 716, 717, 727, 728, 731, 732, 735, 737, 743, 745, 746, 754, 758, 760, 761, 762, 766, 767, 769, 771, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 788, 789, 790, 792, 793, 795, 796, 797, 798, 799, 800, 801, 802, 803, 805, 806, 807, 808, 811, 813, 815, 818, 824, 825, 826, 833, 835, 836, 837, 841, 842, 843, 844, 849, 854, 855, 856, 857, 859, 860, 861, 863, 864, 866, 878], "oper": [1, 5, 11, 15, 18, 22, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 67, 68, 70, 72, 83, 87, 89, 91, 92, 94, 103, 106, 107, 108, 109, 120, 123, 131, 134, 140, 141, 142, 145, 146, 149, 151, 152, 155, 156, 162, 163, 164, 165, 166, 167, 169, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 188, 191, 195, 199, 200, 201, 202, 204, 205, 206, 209, 214, 221, 222, 227, 228, 230, 233, 235, 243, 256, 257, 260, 263, 264, 265, 266, 267, 268, 269, 273, 274, 276, 277, 281, 283, 284, 296, 297, 299, 301, 311, 315, 316, 327, 333, 346, 352, 372, 373, 380, 387, 410, 415, 418, 425, 430, 431, 434, 447, 448, 449, 450, 454, 455, 456, 472, 473, 474, 475, 477, 478, 479, 485, 492, 510, 519, 520, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 550, 555, 557, 560, 562, 579, 583, 599, 602, 604, 612, 617, 627, 638, 639, 649, 650, 651, 658, 660, 661, 662, 663, 676, 684, 685, 686, 687, 688, 691, 694, 697, 698, 724, 725, 726, 727, 728, 729, 731, 761, 802, 810, 813, 814, 825, 833, 835, 837, 843, 845, 854, 857, 863, 864, 876, 878], "subspac": [1, 11, 15, 18, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 67, 68, 70, 72, 87, 89, 91, 92, 93, 94, 103, 106, 107, 108, 109, 120, 131, 140, 141, 142, 145, 146, 149, 151, 152, 162, 166, 172, 176, 177, 178, 179, 180, 181, 182, 183, 191, 199, 200, 202, 204, 205, 206, 209, 221, 230, 233, 235, 255, 572, 585, 833], "dimens": [1, 11, 15, 18, 19, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 67, 68, 70, 72, 87, 89, 91, 92, 93, 94, 103, 106, 107, 108, 109, 120, 126, 131, 140, 141, 142, 145, 146, 149, 151, 152, 160, 162, 166, 172, 176, 177, 178, 179, 180, 181, 182, 183, 191, 194, 195, 199, 200, 202, 204, 205, 206, 208, 221, 222, 225, 227, 228, 229, 230, 233, 234, 235, 239, 240, 243, 260, 263, 264, 265, 266, 270, 271, 272, 273, 274, 276, 277, 278, 279, 286, 312, 359, 409, 412, 415, 416, 419, 420, 422, 424, 448, 449, 472, 474, 475, 477, 478, 530, 531, 533, 534, 540, 541, 556, 557, 571, 677, 678, 682, 684, 685, 687, 688, 697, 699, 700, 701, 715, 716, 726, 735, 745, 754, 762, 777, 784, 788, 797, 798, 800, 805, 807, 833, 853, 860, 863, 878], "fran\u00e7oi": [1, 70, 77, 108, 183, 184, 191, 199, 243, 557, 566, 860], "tadel": [1, 108, 183, 184, 191, 243], "sylvain": [1, 108, 183, 184, 191, 243], "baillet": [1, 108, 183, 184, 191, 243], "john": [1, 18, 19, 51, 67, 82, 108, 125, 178, 180, 183, 184, 191, 243, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 386, 387, 413, 415, 427, 472, 477, 478, 524, 535, 557, 572, 589, 654, 659, 697, 700, 854, 860, 878], "c": [1, 4, 10, 11, 12, 19, 22, 44, 51, 69, 73, 95, 108, 111, 114, 120, 125, 134, 137, 161, 171, 176, 180, 183, 184, 188, 191, 194, 195, 205, 211, 227, 228, 229, 230, 240, 243, 255, 256, 269, 274, 275, 276, 299, 334, 337, 353, 359, 386, 401, 402, 415, 416, 450, 453, 472, 477, 478, 514, 520, 532, 557, 565, 594, 612, 657, 662, 726, 729, 745, 835, 836, 837, 841, 842, 844, 849, 852, 853, 854, 860, 861, 863, 866, 867, 878], "mosher": [1, 51, 108, 180, 183, 184, 191, 243, 299, 860], "dimitrio": [1, 10, 108, 183, 184, 191, 243, 854], "pantazi": [1, 10, 108, 183, 184, 191, 243, 854], "richard": [1, 51, 108, 183, 184, 191, 208, 239, 243, 387, 557, 565, 679, 854, 860, 865, 878], "leahi": [1, 51, 108, 183, 184, 191, 243, 299, 860], "user": [1, 45, 74, 78, 93, 108, 134, 142, 156, 165, 167, 171, 172, 183, 184, 189, 190, 191, 200, 201, 214, 243, 256, 258, 263, 264, 265, 266, 267, 268, 270, 271, 274, 276, 277, 278, 279, 376, 377, 378, 379, 381, 382, 384, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 430, 438, 469, 476, 477, 478, 494, 557, 576, 592, 643, 695, 696, 697, 700, 762, 775, 782, 792, 798, 807, 835, 837, 839, 841, 842, 844, 848, 853, 854, 856, 857, 859, 861, 862, 878], "friendli": [1, 108, 183, 184, 191, 243], "applic": [1, 15, 69, 72, 87, 108, 149, 162, 170, 178, 183, 184, 191, 195, 201, 204, 205, 206, 209, 240, 243, 258, 263, 264, 265, 266, 411, 416, 420, 433, 445, 447, 448, 461, 477, 478, 501, 516, 517, 558, 585, 608, 611, 699, 701, 745, 777, 798, 818, 837, 840, 844, 849, 857, 860, 878], "analysi": [1, 3, 6, 8, 13, 15, 17, 20, 42, 43, 44, 69, 73, 82, 87, 95, 96, 100, 108, 126, 134, 140, 142, 144, 145, 153, 154, 155, 160, 161, 167, 168, 171, 172, 173, 174, 178, 183, 184, 188, 190, 191, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 214, 215, 217, 222, 225, 226, 227, 229, 230, 238, 242, 243, 263, 264, 265, 266, 268, 270, 271, 273, 274, 275, 277, 278, 279, 296, 297, 311, 313, 327, 352, 353, 359, 362, 372, 402, 409, 417, 423, 433, 438, 450, 466, 472, 477, 478, 487, 523, 524, 538, 548, 554, 557, 558, 565, 571, 582, 583, 612, 642, 646, 650, 657, 678, 679, 682, 684, 697, 699, 700, 701, 709, 711, 713, 715, 723, 724, 725, 726, 727, 728, 729, 745, 769, 778, 807, 817, 833, 836, 838, 840, 844, 849, 852, 853, 854, 859, 860, 861, 866, 868, 875, 876, 878], "intellig": [1, 108, 183, 184, 191, 194, 243, 415, 449], "neurosci": [1, 4, 10, 16, 19, 43, 69, 73, 108, 112, 151, 183, 184, 191, 194, 195, 201, 230, 243, 275, 359, 410, 415, 425, 557, 562, 565, 657, 684, 685, 687, 688, 713, 723, 724, 726, 727, 729, 852, 854, 859], "2011": [1, 15, 21, 32, 34, 59, 87, 108, 151, 169, 183, 184, 189, 191, 201, 222, 225, 243, 296, 417, 475, 524, 558, 690, 691, 860], "13": [1, 9, 10, 11, 12, 13, 16, 19, 21, 26, 28, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 73, 75, 78, 79, 80, 82, 83, 84, 92, 93, 95, 96, 99, 102, 103, 106, 107, 108, 109, 111, 112, 113, 116, 119, 120, 123, 129, 131, 132, 133, 136, 142, 144, 145, 146, 149, 150, 152, 158, 162, 166, 169, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 191, 194, 195, 200, 201, 203, 206, 208, 209, 210, 214, 220, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 237, 239, 240, 243, 258, 261, 262, 263, 264, 265, 266, 269, 270, 271, 274, 276, 277, 278, 279, 281, 334, 358, 379, 401, 420, 430, 444, 445, 447, 448, 450, 477, 478, 557, 573, 574, 585, 612, 628, 631, 660, 663, 697, 700, 727, 728, 779, 790, 801, 831, 833, 842, 852, 853, 860], "doi": [1, 4, 8, 10, 12, 13, 15, 16, 18, 19, 21, 33, 35, 40, 42, 43, 44, 46, 51, 54, 55, 58, 59, 65, 69, 70, 73, 74, 77, 82, 83, 87, 93, 100, 108, 111, 112, 116, 118, 120, 125, 128, 134, 137, 141, 144, 151, 155, 157, 162, 176, 178, 180, 183, 184, 191, 194, 195, 199, 201, 203, 204, 205, 206, 207, 209, 211, 222, 225, 226, 230, 238, 243, 263, 264, 265, 266, 269, 274, 275, 289, 296, 297, 299, 353, 359, 379, 386, 387, 391, 392, 401, 402, 409, 410, 413, 415, 416, 417, 425, 427, 433, 472, 474, 475, 477, 478, 524, 525, 535, 539, 556, 557, 558, 562, 565, 566, 568, 571, 572, 585, 589, 592, 593, 600, 642, 650, 654, 657, 659, 662, 681, 683, 684, 685, 686, 687, 688, 690, 691, 699, 701, 709, 711, 713, 715, 716, 723, 724, 726, 727, 729, 762, 852, 853, 854, 857, 860], "10": [1, 4, 5, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 21, 22, 28, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 54, 55, 56, 58, 59, 60, 63, 65, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 87, 89, 90, 92, 93, 94, 100, 102, 103, 107, 108, 109, 111, 112, 113, 114, 116, 118, 119, 120, 125, 126, 127, 128, 129, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 151, 155, 156, 157, 158, 159, 160, 162, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 225, 226, 227, 229, 230, 232, 233, 234, 235, 238, 239, 240, 242, 243, 257, 261, 262, 263, 264, 265, 266, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 281, 289, 296, 297, 299, 308, 311, 323, 329, 334, 339, 343, 346, 349, 350, 351, 353, 359, 364, 379, 386, 387, 391, 392, 401, 402, 409, 410, 411, 413, 415, 416, 417, 420, 425, 427, 430, 433, 444, 445, 447, 448, 453, 472, 474, 475, 477, 478, 501, 514, 515, 524, 525, 535, 539, 544, 556, 557, 558, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 576, 577, 578, 581, 582, 585, 589, 592, 593, 600, 611, 633, 642, 650, 654, 657, 659, 661, 662, 663, 678, 680, 681, 683, 684, 685, 686, 687, 688, 690, 691, 697, 699, 700, 701, 709, 711, 713, 715, 716, 723, 724, 725, 726, 727, 728, 729, 735, 745, 750, 760, 762, 775, 777, 784, 786, 787, 792, 793, 798, 803, 808, 836, 837, 840, 843, 852, 853, 854, 857, 860, 863, 866], "1155": [1, 108, 183, 184, 191, 195, 243], "879716": [1, 108, 183, 184, 191, 243], "total": [1, 2, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 357, 373, 426, 477, 478, 559, 602, 692, 699, 701, 777, 803, 808, 860, 863, 878], "run": [1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 220, 221, 222, 225, 226, 227, 228, 229, 230, 233, 234, 235, 238, 239, 240, 255, 263, 264, 265, 266, 269, 270, 271, 273, 274, 277, 278, 279, 281, 302, 320, 346, 353, 354, 356, 358, 374, 379, 411, 412, 415, 419, 420, 422, 425, 426, 447, 448, 449, 452, 465, 467, 477, 478, 510, 516, 519, 520, 530, 531, 540, 541, 557, 562, 569, 570, 571, 576, 577, 580, 583, 586, 602, 637, 645, 648, 649, 650, 651, 660, 661, 662, 663, 684, 685, 686, 687, 688, 699, 701, 702, 703, 704, 705, 706, 707, 715, 716, 724, 725, 726, 727, 728, 729, 745, 768, 775, 777, 780, 784, 787, 788, 792, 798, 799, 835, 836, 840, 841, 842, 843, 845, 854, 859, 860, 861, 864, 878], "script": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 220, 221, 222, 225, 226, 227, 228, 229, 230, 233, 234, 235, 238, 239, 240, 273, 477, 478, 798, 837, 838, 840, 842, 843, 844, 854, 857, 858, 860, 863, 866, 868, 878], "minut": [1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 220, 221, 222, 225, 226, 227, 228, 229, 230, 233, 234, 235, 238, 239, 240, 263, 264, 275, 281, 432, 477, 478, 557, 649, 650, 792, 798, 841], "118": [1, 6, 61, 169, 195, 208, 225, 230, 243, 557, 878], "second": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 220, 221, 222, 225, 226, 227, 228, 229, 230, 233, 234, 235, 238, 239, 240, 243, 255, 257, 258, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 277, 278, 279, 283, 284, 286, 295, 296, 297, 321, 322, 340, 342, 358, 409, 415, 416, 421, 433, 435, 438, 443, 444, 446, 450, 451, 475, 476, 477, 478, 497, 500, 512, 517, 518, 527, 530, 556, 557, 559, 560, 561, 562, 565, 567, 569, 570, 573, 576, 577, 578, 579, 580, 585, 593, 599, 603, 612, 615, 647, 663, 683, 684, 685, 687, 688, 689, 691, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 725, 728, 745, 753, 769, 776, 777, 778, 781, 784, 788, 789, 790, 792, 797, 798, 799, 800, 803, 805, 808, 823, 833, 837, 843, 853, 854, 857, 860, 863, 878], "estim": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 183, 184, 185, 186, 188, 189, 190, 191, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 214, 215, 216, 217, 220, 222, 225, 226, 227, 228, 229, 230, 233, 234, 235, 238, 239, 240, 243, 244, 255, 258, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 283, 284, 288, 289, 290, 291, 293, 294, 296, 297, 311, 319, 327, 340, 342, 346, 353, 357, 358, 359, 364, 365, 366, 368, 369, 370, 372, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 430, 443, 444, 446, 448, 449, 450, 452, 453, 456, 472, 473, 474, 475, 477, 478, 482, 510, 512, 513, 519, 521, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 538, 539, 540, 541, 544, 557, 558, 562, 566, 567, 573, 577, 580, 583, 585, 597, 599, 600, 615, 617, 620, 625, 626, 627, 637, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 664, 678, 682, 683, 689, 690, 692, 693, 699, 701, 702, 703, 704, 705, 706, 707, 716, 724, 725, 727, 728, 745, 761, 762, 768, 769, 770, 777, 785, 792, 799, 802, 803, 804, 807, 808, 809, 833, 838, 844, 846, 854, 857, 863, 866, 868, 876, 878], "usag": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 220, 221, 222, 225, 226, 227, 228, 229, 230, 233, 234, 235, 238, 239, 240, 255, 263, 264, 265, 266, 268, 270, 271, 274, 277, 278, 279, 418, 422, 477, 478, 585, 684, 685, 687, 688, 697, 699, 700, 701, 703, 706, 722, 724, 725, 726, 727, 728, 729, 833, 856, 857, 860, 863, 878], "491": [1, 6, 13, 230], "mb": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 263, 264, 273, 477, 478, 775, 798, 843], "python": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 156, 157, 158, 159, 162, 165, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 194, 195, 196, 198, 200, 202, 203, 206, 207, 208, 210, 211, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 238, 239, 240, 243, 254, 261, 262, 263, 264, 265, 266, 268, 270, 271, 273, 274, 276, 277, 278, 279, 296, 297, 313, 316, 322, 327, 328, 331, 337, 352, 364, 372, 375, 376, 377, 378, 379, 381, 382, 384, 385, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 428, 434, 438, 442, 450, 457, 458, 459, 461, 468, 477, 478, 492, 501, 515, 523, 524, 538, 551, 557, 573, 576, 605, 634, 636, 641, 643, 644, 696, 697, 699, 700, 701, 716, 724, 725, 727, 728, 740, 741, 769, 775, 778, 792, 798, 806, 826, 828, 833, 836, 844, 848, 853, 854, 858, 859, 860, 861, 864, 865, 876, 878], "brainstorm_data": [1, 6], "py": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 835, 837, 857, 878], "jupyt": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 220, 221, 222, 225, 226, 227, 228, 229, 230, 233, 234, 235, 238, 239, 240, 810, 857, 859, 861, 878], "notebook": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 220, 221, 222, 225, 226, 227, 228, 229, 230, 233, 234, 235, 238, 239, 240, 810, 816, 841, 857, 861, 866, 878], "ipynb": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 220, 221, 222, 225, 226, 227, 228, 229, 230, 233, 234, 235, 238, 239, 240], "galleri": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 220, 221, 222, 225, 226, 227, 228, 229, 230, 233, 234, 235, 238, 239, 240, 837], "gener": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 93, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 191, 194, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 215, 216, 217, 220, 222, 225, 226, 227, 228, 229, 230, 233, 234, 235, 238, 239, 240, 254, 255, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 290, 291, 294, 307, 320, 325, 326, 327, 346, 352, 353, 379, 409, 411, 412, 415, 416, 419, 420, 426, 433, 438, 443, 445, 447, 448, 450, 467, 473, 474, 477, 478, 482, 483, 494, 497, 501, 510, 513, 520, 523, 524, 526, 528, 531, 535, 538, 554, 555, 556, 557, 558, 560, 569, 573, 574, 577, 579, 580, 583, 585, 602, 606, 612, 615, 617, 619, 620, 622, 623, 645, 646, 647, 649, 650, 651, 660, 661, 662, 663, 664, 677, 681, 682, 684, 685, 686, 687, 688, 693, 697, 699, 700, 701, 709, 710, 730, 742, 745, 746, 748, 758, 761, 765, 769, 776, 784, 788, 789, 799, 800, 803, 804, 813, 828, 833, 843, 844, 845, 849, 852, 853, 854, 855, 856, 858, 859, 861, 862, 863, 865, 866, 878], "sphinx": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 220, 221, 222, 225, 226, 227, 228, 229, 230, 233, 234, 235, 238, 239, 240, 741, 837, 878], "thi": [2, 4, 5, 7, 9, 10, 13, 14, 16, 18, 19, 21, 22, 26, 31, 32, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 50, 54, 55, 57, 58, 59, 60, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 83, 86, 87, 89, 92, 93, 94, 95, 96, 98, 100, 102, 103, 108, 111, 112, 113, 114, 115, 116, 117, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 220, 221, 222, 225, 226, 227, 228, 229, 230, 233, 234, 235, 238, 239, 240, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 287, 288, 290, 291, 294, 296, 297, 301, 302, 304, 305, 306, 307, 308, 311, 312, 315, 316, 317, 318, 319, 320, 323, 324, 325, 329, 330, 331, 336, 340, 341, 344, 346, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 364, 366, 368, 369, 370, 371, 374, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 388, 389, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 458, 459, 461, 462, 465, 467, 468, 470, 471, 472, 474, 475, 476, 477, 478, 479, 483, 484, 485, 486, 488, 492, 493, 494, 496, 499, 500, 503, 505, 507, 508, 510, 512, 517, 518, 520, 523, 524, 525, 526, 527, 528, 530, 531, 533, 534, 535, 541, 543, 544, 548, 552, 554, 556, 557, 558, 559, 560, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 582, 583, 584, 585, 586, 589, 592, 593, 599, 602, 603, 605, 608, 609, 610, 612, 614, 615, 619, 620, 625, 628, 634, 636, 639, 640, 642, 644, 645, 646, 649, 650, 651, 658, 660, 661, 662, 663, 664, 667, 668, 671, 674, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 696, 697, 698, 699, 700, 701, 704, 713, 715, 723, 725, 727, 728, 732, 735, 739, 740, 742, 743, 745, 747, 748, 750, 754, 755, 758, 760, 761, 762, 763, 766, 767, 771, 775, 776, 777, 778, 779, 781, 782, 783, 784, 785, 786, 788, 789, 790, 791, 792, 796, 797, 798, 799, 800, 801, 802, 803, 805, 806, 807, 808, 810, 811, 814, 815, 818, 826, 828, 833, 835, 836, 837, 840, 841, 842, 843, 844, 845, 853, 854, 855, 857, 859, 860, 861, 863, 864, 866, 868, 878], "look": [2, 4, 7, 8, 19, 21, 27, 32, 33, 42, 55, 58, 60, 67, 69, 70, 82, 83, 92, 107, 110, 111, 112, 119, 120, 121, 126, 132, 134, 135, 141, 144, 145, 150, 151, 156, 158, 160, 161, 162, 166, 168, 172, 175, 177, 178, 179, 180, 182, 183, 188, 189, 191, 198, 201, 202, 203, 205, 206, 207, 209, 210, 211, 214, 222, 225, 230, 239, 240, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 299, 302, 308, 376, 377, 378, 379, 381, 382, 384, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 450, 457, 459, 477, 478, 506, 557, 559, 603, 697, 745, 761, 764, 791, 801, 803, 808, 809, 818, 835, 836, 837, 858, 859, 860, 861, 863, 878], "high": [2, 4, 7, 10, 12, 22, 38, 40, 59, 72, 73, 78, 81, 82, 83, 87, 93, 98, 118, 134, 141, 142, 143, 151, 156, 157, 160, 167, 188, 190, 191, 195, 198, 202, 204, 205, 206, 209, 210, 211, 227, 228, 229, 230, 234, 240, 243, 263, 264, 265, 266, 276, 281, 353, 354, 355, 356, 358, 391, 411, 420, 444, 445, 447, 468, 477, 478, 501, 524, 557, 562, 565, 569, 570, 573, 574, 577, 578, 580, 581, 585, 589, 650, 683, 745, 833, 844, 862, 878], "frequenc": [2, 5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 33, 34, 36, 42, 56, 67, 70, 71, 72, 75, 80, 81, 82, 83, 87, 89, 92, 93, 98, 102, 103, 105, 106, 107, 108, 109, 111, 114, 120, 122, 125, 126, 132, 137, 140, 141, 142, 143, 144, 146, 149, 151, 156, 167, 168, 169, 172, 180, 183, 191, 194, 195, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 211, 214, 215, 216, 217, 220, 222, 225, 229, 233, 235, 242, 243, 255, 260, 261, 263, 264, 265, 266, 267, 268, 270, 271, 273, 274, 277, 278, 279, 282, 286, 287, 288, 289, 290, 291, 296, 311, 327, 340, 341, 348, 353, 362, 372, 391, 409, 411, 414, 415, 417, 420, 421, 422, 430, 433, 435, 437, 438, 444, 445, 447, 448, 449, 450, 473, 475, 477, 478, 487, 492, 523, 524, 528, 530, 531, 535, 540, 541, 554, 557, 562, 565, 569, 570, 573, 574, 576, 577, 578, 580, 581, 585, 589, 603, 606, 615, 617, 664, 676, 683, 684, 685, 687, 688, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 715, 716, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 740, 745, 749, 768, 771, 772, 773, 777, 778, 786, 790, 793, 799, 804, 805, 807, 833, 857, 863, 864, 868, 878], "respons": [2, 4, 8, 10, 16, 17, 19, 20, 27, 35, 46, 49, 51, 59, 65, 76, 84, 87, 93, 95, 96, 106, 112, 116, 119, 120, 121, 127, 129, 135, 142, 143, 145, 149, 150, 162, 168, 180, 183, 185, 191, 195, 198, 201, 206, 229, 230, 233, 235, 240, 243, 263, 264, 265, 266, 268, 270, 271, 274, 277, 278, 279, 353, 372, 391, 415, 421, 423, 433, 435, 438, 445, 448, 477, 478, 554, 558, 600, 612, 697, 699, 700, 701, 710, 776, 783, 785, 786, 793, 833, 853, 854, 859, 860, 863, 878], "jussi": [2, 61, 243, 391, 585, 878], "nurminen": [2, 61, 243, 391, 585, 878], "jnu": [2, 61], "iki": [2, 61], "fi": [2, 10, 61, 85, 191, 476], "o": [2, 19, 44, 61, 70, 74, 82, 114, 124, 140, 159, 161, 169, 171, 172, 185, 194, 198, 199, 200, 202, 204, 205, 206, 207, 208, 209, 211, 214, 215, 216, 217, 243, 255, 260, 263, 264, 265, 266, 268, 353, 371, 379, 387, 409, 416, 457, 477, 478, 556, 557, 566, 641, 697, 699, 701, 762, 777, 784, 800, 805, 807, 837, 849, 854, 857, 868, 878], "hf_sef": [2, 854, 868, 878], "fname_evok": [2, 11, 30, 38, 39, 41, 44, 57, 58, 60, 123, 126, 179, 181, 221], "path": [2, 19, 33, 43, 44, 45, 61, 74, 78, 100, 114, 118, 119, 122, 124, 134, 135, 136, 140, 144, 155, 156, 157, 158, 159, 166, 170, 171, 172, 175, 181, 182, 185, 198, 199, 200, 202, 204, 205, 206, 207, 208, 209, 214, 215, 216, 217, 221, 226, 255, 257, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 287, 300, 302, 303, 306, 307, 308, 311, 312, 320, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 350, 351, 359, 364, 365, 366, 371, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 428, 430, 443, 452, 457, 458, 459, 461, 462, 465, 467, 468, 469, 470, 471, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 514, 516, 520, 538, 542, 543, 544, 546, 547, 556, 557, 567, 568, 576, 582, 585, 595, 596, 597, 598, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 635, 636, 643, 645, 646, 648, 649, 650, 660, 662, 663, 665, 666, 674, 692, 693, 695, 696, 697, 698, 699, 700, 701, 717, 718, 719, 730, 732, 734, 737, 739, 744, 745, 753, 761, 763, 773, 775, 785, 792, 798, 803, 808, 809, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 835, 837, 840, 842, 843, 848, 878], "join": [2, 10, 19, 44, 61, 74, 134, 135, 140, 159, 170, 171, 184, 185, 198, 199, 200, 202, 204, 205, 206, 207, 208, 209, 214, 215, 216, 217, 263, 264, 265, 266, 477, 478], "subject_b": 2, "hf_sef_15min": 2, "av": [2, 11, 30, 31, 35, 38, 39, 40, 41, 44, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 64, 67, 77, 85, 86, 89, 91, 94, 115, 118, 119, 123, 126, 149, 150, 172, 176, 178, 179, 181, 221, 255, 263, 264, 265, 266, 273, 477, 478, 547, 615, 624, 700, 824, 854], "fif": [2, 5, 7, 10, 11, 13, 14, 15, 16, 18, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 62, 64, 66, 67, 68, 70, 71, 72, 73, 75, 77, 78, 79, 80, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 112, 114, 115, 116, 117, 118, 119, 120, 122, 123, 126, 128, 130, 131, 132, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 172, 176, 177, 178, 179, 180, 181, 182, 183, 189, 190, 191, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 214, 215, 216, 217, 221, 222, 226, 227, 228, 229, 230, 233, 234, 235, 238, 239, 250, 257, 260, 261, 262, 263, 264, 265, 266, 268, 273, 276, 303, 311, 333, 364, 365, 366, 430, 439, 440, 441, 442, 459, 469, 477, 478, 497, 501, 516, 520, 538, 542, 557, 567, 576, 582, 585, 597, 603, 605, 606, 607, 608, 612, 615, 617, 623, 627, 630, 634, 637, 662, 665, 692, 732, 734, 745, 761, 819, 821, 822, 823, 824, 825, 826, 829, 830, 832, 837, 844, 849, 853, 854, 860, 863, 866, 878], "interest": [2, 4, 9, 16, 21, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 63, 77, 81, 85, 86, 89, 94, 95, 96, 99, 100, 103, 106, 111, 112, 113, 115, 118, 119, 126, 127, 135, 137, 140, 142, 143, 144, 149, 150, 155, 160, 162, 170, 172, 176, 178, 179, 180, 181, 190, 194, 195, 198, 201, 202, 205, 210, 211, 215, 221, 222, 225, 226, 227, 228, 229, 239, 240, 258, 263, 264, 265, 266, 268, 288, 290, 323, 414, 417, 433, 435, 453, 461, 477, 478, 510, 530, 531, 541, 556, 557, 600, 609, 611, 646, 697, 699, 701, 702, 703, 704, 705, 706, 707, 715, 716, 724, 725, 727, 728, 745, 799, 805, 833, 837, 853, 857, 860, 878], "t": [2, 4, 5, 9, 15, 19, 21, 27, 28, 29, 30, 31, 32, 35, 38, 39, 40, 41, 42, 44, 45, 48, 50, 51, 53, 54, 55, 57, 58, 59, 60, 63, 65, 69, 77, 78, 80, 82, 83, 85, 86, 92, 93, 94, 95, 97, 100, 101, 107, 113, 114, 115, 116, 118, 119, 126, 134, 140, 141, 143, 144, 145, 146, 149, 151, 156, 157, 158, 159, 160, 162, 165, 166, 168, 170, 171, 172, 176, 177, 178, 179, 180, 181, 183, 184, 188, 191, 194, 195, 199, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 214, 216, 221, 222, 225, 226, 227, 228, 229, 230, 235, 236, 237, 238, 239, 240, 243, 255, 258, 259, 261, 262, 263, 264, 265, 266, 268, 270, 271, 273, 274, 276, 277, 278, 279, 286, 296, 297, 340, 343, 349, 358, 359, 371, 372, 376, 377, 378, 379, 381, 382, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 415, 430, 432, 444, 450, 453, 472, 475, 477, 478, 488, 489, 523, 524, 532, 538, 544, 546, 548, 554, 557, 560, 568, 569, 573, 574, 576, 578, 583, 585, 586, 594, 602, 605, 609, 611, 612, 615, 616, 619, 622, 625, 627, 644, 646, 662, 663, 669, 675, 677, 681, 682, 683, 684, 686, 687, 689, 690, 691, 697, 698, 699, 700, 701, 713, 717, 720, 723, 724, 725, 727, 728, 735, 745, 780, 790, 833, 836, 837, 838, 843, 845, 853, 854, 859, 860, 861, 863, 878], "250": [2, 4, 21, 46, 80, 116, 122, 136, 137, 141, 143, 151, 156, 166, 169, 181, 198, 200, 201, 202, 206, 208, 230, 238, 243, 650, 704, 842, 878], "ctf": [2, 27, 30, 31, 35, 36, 38, 39, 40, 41, 44, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 77, 85, 86, 100, 115, 118, 119, 126, 140, 143, 149, 165, 170, 172, 176, 178, 179, 181, 186, 187, 192, 193, 225, 226, 257, 260, 261, 263, 264, 265, 266, 267, 268, 274, 301, 308, 337, 344, 352, 354, 358, 360, 362, 363, 450, 452, 477, 478, 490, 514, 515, 520, 521, 523, 524, 533, 534, 535, 536, 539, 554, 555, 570, 585, 606, 615, 617, 623, 630, 645, 697, 699, 700, 701, 745, 761, 854, 860, 863, 878], "matric": [2, 10, 30, 31, 34, 35, 38, 39, 40, 41, 44, 47, 48, 50, 51, 54, 55, 57, 58, 59, 60, 77, 85, 86, 100, 102, 115, 118, 119, 126, 140, 143, 146, 149, 156, 163, 165, 166, 172, 176, 178, 179, 181, 188, 195, 225, 226, 243, 289, 296, 353, 409, 417, 477, 478, 568, 576, 585, 597, 648, 649, 650, 662, 683, 698, 708, 736, 738, 771, 853, 860, 863, 875, 878], "nave": [2, 5, 28, 29, 30, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 51, 54, 55, 57, 58, 59, 60, 67, 77, 85, 86, 89, 91, 93, 103, 106, 107, 108, 109, 113, 115, 118, 119, 126, 149, 166, 172, 176, 177, 178, 179, 181, 182, 191, 195, 220, 221, 222, 233, 235, 256, 262, 265, 266, 268, 352, 466, 525, 526, 527, 528, 530, 531, 537, 540, 541, 661, 697, 863, 878], "2790": 2, "aspect": [2, 16, 22, 30, 31, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 69, 77, 85, 86, 106, 115, 118, 119, 126, 142, 149, 172, 176, 178, 179, 181, 202, 205, 227, 228, 229, 230, 748, 863, 878], "specifi": [2, 4, 5, 9, 19, 31, 38, 41, 43, 47, 63, 87, 93, 94, 100, 102, 108, 113, 119, 126, 127, 135, 140, 141, 142, 149, 150, 151, 155, 158, 166, 167, 168, 169, 170, 171, 172, 178, 184, 185, 188, 195, 198, 199, 201, 202, 203, 204, 206, 207, 209, 210, 211, 214, 215, 216, 217, 226, 227, 230, 233, 239, 255, 257, 258, 260, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 277, 278, 279, 280, 287, 289, 296, 297, 301, 308, 313, 323, 329, 353, 354, 355, 356, 357, 358, 359, 368, 369, 370, 371, 376, 377, 378, 379, 381, 382, 383, 386, 389, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 416, 420, 421, 425, 426, 430, 433, 435, 444, 445, 447, 448, 450, 452, 453, 461, 465, 468, 472, 474, 475, 476, 477, 478, 479, 487, 492, 493, 501, 505, 516, 519, 523, 525, 533, 534, 535, 546, 556, 557, 560, 562, 567, 568, 570, 571, 575, 576, 585, 600, 603, 607, 609, 611, 616, 619, 625, 634, 637, 639, 642, 646, 647, 662, 674, 677, 683, 684, 685, 687, 688, 695, 697, 699, 700, 701, 732, 745, 748, 760, 761, 762, 764, 769, 776, 777, 779, 783, 784, 785, 788, 790, 791, 792, 794, 797, 800, 803, 804, 805, 807, 808, 809, 810, 814, 828, 833, 837, 855, 857, 860, 863, 878], "pleas": [2, 4, 5, 73, 75, 82, 100, 108, 122, 134, 135, 136, 137, 146, 166, 172, 184, 185, 189, 195, 198, 203, 204, 210, 211, 226, 235, 255, 263, 264, 288, 290, 331, 337, 370, 387, 436, 448, 450, 477, 478, 488, 557, 576, 586, 617, 775, 792, 798, 825, 833, 835, 837, 841, 843, 849, 852, 853, 854, 856, 858, 860, 861, 878], "consid": [2, 4, 5, 81, 92, 100, 103, 107, 108, 111, 137, 141, 144, 152, 156, 159, 161, 162, 166, 184, 185, 195, 198, 199, 200, 201, 203, 204, 209, 210, 211, 225, 226, 227, 230, 233, 235, 240, 258, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 277, 278, 279, 286, 296, 297, 308, 318, 336, 353, 357, 358, 369, 370, 409, 416, 417, 430, 439, 440, 441, 442, 444, 450, 457, 474, 475, 477, 478, 485, 492, 494, 499, 552, 557, 559, 560, 565, 567, 568, 571, 573, 575, 576, 579, 583, 585, 590, 609, 611, 615, 658, 667, 668, 669, 671, 672, 684, 685, 687, 688, 697, 700, 702, 703, 704, 705, 706, 707, 708, 745, 758, 767, 775, 778, 779, 791, 798, 833, 835, 856, 859, 878], "self": [2, 4, 5, 100, 108, 171, 172, 184, 185, 195, 198, 203, 210, 211, 226, 235, 257, 260, 261, 263, 264, 265, 266, 268, 269, 270, 271, 272, 274, 277, 278, 279, 287, 301, 364, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 476, 477, 478, 523, 556, 557, 558, 697, 699, 700, 701, 732, 746, 837, 855, 857, 878], "highpass": [2, 12, 70, 72, 75, 80, 81, 82, 89, 92, 98, 126, 141, 146, 151, 166, 167, 168, 169, 198, 199, 200, 201, 202, 204, 205, 206, 207, 209, 210, 211, 214, 215, 216, 217, 220, 222, 240, 255, 263, 264, 265, 266, 268, 444, 477, 478, 699, 701, 798, 799, 863, 878], "version": [2, 19, 34, 69, 83, 113, 145, 146, 150, 155, 161, 166, 171, 188, 189, 190, 194, 195, 200, 201, 217, 255, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 283, 284, 287, 292, 296, 297, 299, 303, 304, 305, 306, 307, 308, 311, 312, 315, 316, 317, 319, 320, 321, 322, 327, 329, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 364, 368, 369, 370, 384, 385, 387, 388, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 420, 421, 425, 428, 430, 433, 434, 436, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 456, 457, 459, 462, 466, 468, 471, 472, 474, 475, 476, 477, 478, 485, 486, 488, 489, 490, 492, 493, 494, 497, 500, 502, 505, 507, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524, 525, 526, 527, 530, 531, 532, 533, 534, 535, 537, 539, 540, 541, 542, 543, 544, 545, 548, 549, 550, 556, 557, 558, 559, 560, 565, 566, 567, 568, 569, 570, 571, 573, 574, 576, 577, 584, 585, 586, 593, 595, 599, 600, 605, 607, 609, 611, 612, 615, 616, 620, 628, 630, 631, 633, 634, 636, 639, 642, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 678, 679, 680, 689, 690, 691, 692, 696, 697, 698, 699, 700, 701, 709, 711, 714, 715, 716, 719, 724, 725, 727, 728, 729, 730, 733, 734, 735, 742, 745, 746, 748, 754, 755, 761, 762, 763, 764, 766, 768, 769, 770, 772, 773, 774, 775, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 805, 807, 808, 809, 810, 811, 814, 819, 822, 824, 828, 829, 831, 836, 837, 840, 841, 842, 843, 852, 854, 857, 859, 860, 863, 866], "evoked_hp": 2, "l_freq": [2, 21, 82, 113, 144, 146, 151, 191, 201, 202, 204, 206, 240, 255, 263, 264, 265, 266, 411, 420, 445, 447, 477, 478, 557, 565, 569, 570, 573, 574, 577, 578, 580, 581, 589, 864], "300": [2, 4, 5, 21, 34, 46, 51, 73, 80, 81, 91, 111, 115, 135, 140, 149, 151, 169, 183, 191, 202, 204, 208, 211, 230, 238, 697, 863, 878], "h_freq": [2, 21, 82, 113, 144, 146, 151, 191, 201, 202, 204, 206, 209, 240, 255, 263, 264, 265, 266, 411, 420, 445, 447, 477, 478, 557, 565, 569, 570, 573, 574, 576, 577, 578, 580, 581, 589, 864], "3e": [2, 8, 9, 21, 32, 35, 45, 48, 49, 50, 51, 54, 55, 58, 93, 108, 152, 176, 178, 179, 180, 181, 195, 569, 570, 762], "edg": [2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 32, 34, 42, 59, 69, 71, 72, 75, 81, 82, 83, 87, 98, 109, 112, 113, 114, 119, 120, 132, 136, 141, 142, 144, 146, 151, 161, 172, 191, 195, 198, 200, 201, 202, 203, 204, 206, 209, 210, 211, 216, 217, 221, 225, 230, 240, 260, 263, 264, 265, 266, 272, 273, 281, 317, 409, 411, 415, 416, 438, 445, 447, 449, 475, 477, 478, 556, 557, 559, 560, 571, 576, 585, 589, 697, 699, 701, 713, 723, 727, 749, 758, 762, 763, 777, 784, 788, 797, 798, 800, 805, 807, 857, 878], "75": [2, 4, 5, 8, 12, 13, 16, 19, 21, 24, 34, 35, 41, 44, 69, 71, 75, 79, 80, 82, 102, 111, 113, 114, 126, 134, 135, 143, 144, 146, 158, 169, 171, 172, 180, 184, 191, 194, 195, 198, 200, 203, 204, 206, 207, 208, 216, 225, 226, 229, 230, 477, 478, 557, 801, 854, 860, 878], "cutoff": [2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 34, 42, 71, 72, 75, 81, 82, 83, 87, 98, 112, 113, 114, 120, 132, 136, 141, 144, 146, 151, 172, 191, 195, 198, 200, 202, 203, 204, 206, 209, 210, 211, 230, 263, 264, 265, 266, 411, 420, 445, 447, 477, 478, 557, 565, 576, 589], "262": [2, 12, 13, 21, 111, 129, 151, 169, 210, 225, 230, 243], "133": [2, 35, 61, 65, 78, 83, 134, 156, 169, 190, 193, 195, 207, 208, 225, 230], "044": [2, 140, 142, 149, 161, 164, 169, 222], "306": [2, 22, 26, 31, 32, 33, 34, 35, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 61, 67, 75, 82, 83, 89, 91, 92, 93, 94, 108, 130, 137, 139, 146, 158, 169, 172, 177, 178, 179, 180, 183, 195, 208, 209, 221, 222, 225, 230, 239, 242, 557, 854], "condit": [2, 10, 11, 16, 17, 20, 27, 30, 31, 35, 38, 39, 40, 41, 44, 45, 51, 58, 59, 60, 61, 77, 85, 86, 87, 93, 95, 98, 109, 111, 118, 119, 121, 123, 129, 140, 141, 142, 143, 144, 145, 149, 150, 153, 165, 166, 168, 176, 177, 178, 179, 180, 181, 184, 185, 191, 195, 201, 210, 215, 220, 225, 226, 227, 230, 231, 232, 233, 234, 235, 238, 243, 256, 263, 264, 265, 266, 268, 352, 353, 412, 419, 425, 431, 477, 522, 547, 554, 558, 568, 576, 585, 600, 612, 614, 615, 616, 678, 683, 684, 685, 687, 697, 699, 700, 701, 719, 727, 769, 783, 833, 837, 853, 854, 860, 864, 878], "kind": [2, 5, 7, 11, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 64, 67, 82, 89, 91, 92, 93, 94, 103, 106, 107, 108, 109, 123, 126, 130, 135, 136, 142, 149, 151, 156, 160, 166, 169, 170, 172, 175, 177, 178, 179, 180, 181, 184, 190, 191, 195, 202, 205, 221, 222, 233, 234, 235, 262, 263, 264, 265, 266, 268, 270, 271, 272, 274, 275, 276, 277, 278, 279, 296, 297, 304, 305, 311, 312, 327, 337, 373, 388, 428, 429, 444, 471, 477, 478, 509, 545, 558, 615, 692, 697, 699, 700, 701, 713, 723, 745, 764, 766, 795, 801, 803, 808, 809, 837, 844, 857, 860, 863, 878], "timepoint": [2, 19, 59, 100, 119, 141, 149, 151, 179, 181, 184, 214, 258, 263, 264, 265, 266, 270, 271, 273, 274, 277, 278, 279, 286, 347, 519, 573, 615, 616], "901": [2, 230], "number": [2, 4, 5, 9, 10, 11, 31, 34, 35, 39, 40, 42, 44, 46, 49, 52, 59, 71, 73, 75, 81, 82, 87, 89, 91, 92, 99, 102, 106, 108, 112, 113, 120, 126, 134, 135, 140, 142, 143, 144, 145, 146, 149, 150, 151, 160, 161, 162, 165, 166, 168, 170, 172, 175, 177, 179, 180, 181, 182, 183, 184, 185, 188, 190, 191, 195, 198, 199, 200, 201, 203, 204, 205, 209, 215, 216, 217, 220, 221, 222, 225, 226, 227, 228, 229, 230, 233, 234, 235, 238, 239, 240, 243, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 296, 297, 298, 299, 323, 326, 334, 341, 347, 353, 354, 355, 356, 357, 358, 359, 361, 364, 368, 369, 370, 379, 408, 409, 411, 412, 414, 415, 416, 417, 419, 420, 421, 422, 425, 426, 430, 432, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 465, 466, 467, 472, 474, 475, 476, 477, 478, 479, 488, 501, 508, 510, 516, 519, 520, 524, 525, 526, 527, 528, 530, 531, 533, 534, 535, 537, 539, 540, 541, 556, 557, 558, 562, 566, 567, 568, 569, 570, 571, 572, 576, 577, 578, 580, 582, 583, 584, 590, 591, 602, 612, 616, 637, 645, 646, 647, 648, 649, 650, 651, 655, 656, 657, 660, 661, 662, 663, 671, 672, 673, 674, 676, 677, 678, 680, 682, 684, 685, 686, 687, 688, 689, 692, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 711, 713, 715, 716, 723, 724, 725, 726, 727, 728, 729, 735, 743, 744, 745, 753, 762, 768, 769, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 784, 785, 786, 788, 789, 791, 792, 797, 798, 799, 800, 803, 804, 805, 806, 807, 808, 811, 818, 833, 837, 852, 854, 857, 861, 863, 878], "rang": [2, 4, 5, 9, 10, 11, 13, 14, 15, 16, 18, 19, 28, 29, 32, 33, 34, 42, 45, 46, 49, 59, 61, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 81, 82, 83, 87, 91, 92, 93, 95, 96, 98, 99, 102, 103, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 122, 126, 128, 131, 132, 134, 135, 136, 137, 140, 141, 142, 143, 144, 146, 149, 151, 152, 156, 158, 159, 160, 162, 166, 167, 168, 169, 171, 172, 176, 177, 179, 180, 181, 182, 183, 184, 185, 190, 191, 195, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 216, 217, 220, 221, 222, 225, 226, 227, 228, 229, 230, 233, 235, 238, 239, 240, 255, 256, 260, 263, 264, 265, 266, 268, 272, 273, 296, 320, 372, 379, 393, 401, 402, 409, 412, 416, 418, 419, 442, 468, 474, 477, 478, 485, 556, 557, 562, 571, 576, 697, 698, 699, 700, 701, 713, 723, 762, 775, 776, 777, 781, 784, 788, 797, 798, 799, 800, 805, 807, 833, 853, 859, 860, 863, 878], "05": [2, 4, 5, 8, 9, 10, 19, 20, 34, 35, 42, 46, 49, 51, 56, 59, 60, 66, 70, 77, 83, 84, 86, 91, 94, 95, 96, 99, 101, 102, 107, 111, 115, 118, 119, 123, 129, 141, 144, 150, 151, 164, 170, 174, 177, 179, 180, 181, 183, 185, 191, 198, 199, 202, 206, 208, 210, 214, 219, 221, 222, 225, 226, 227, 228, 229, 230, 233, 234, 235, 243, 296, 297, 320, 329, 448, 452, 477, 478, 539, 566, 657, 675, 680, 681, 684, 685, 687, 688, 689, 697, 711, 713, 723, 727, 749, 804], "25": [2, 4, 5, 6, 11, 16, 18, 19, 28, 34, 35, 41, 43, 45, 47, 49, 50, 53, 56, 64, 67, 69, 71, 80, 81, 82, 102, 103, 105, 107, 108, 112, 113, 115, 123, 129, 130, 134, 135, 136, 137, 143, 145, 146, 151, 159, 169, 170, 171, 172, 174, 175, 178, 180, 181, 183, 191, 194, 195, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 213, 216, 222, 225, 226, 227, 229, 230, 233, 234, 235, 238, 239, 243, 257, 263, 264, 265, 266, 270, 271, 274, 275, 276, 277, 278, 279, 359, 401, 409, 411, 420, 445, 447, 477, 478, 589, 657, 686, 745, 749, 769, 781, 798, 801, 803, 808, 836, 853, 860], "off": [2, 4, 10, 72, 75, 92, 113, 115, 126, 134, 135, 137, 141, 143, 149, 151, 152, 156, 159, 160, 166, 167, 168, 169, 191, 194, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 214, 215, 216, 217, 220, 221, 222, 243, 255, 258, 263, 264, 265, 266, 276, 296, 297, 411, 420, 445, 447, 477, 478, 556, 569, 570, 571, 578, 581, 585, 589, 600, 725, 728, 837, 853, 854, 860, 863, 878], "compar": [2, 4, 10, 19, 21, 22, 26, 27, 28, 36, 38, 39, 56, 72, 76, 82, 84, 88, 90, 102, 112, 113, 121, 129, 134, 141, 143, 144, 145, 146, 158, 160, 162, 166, 167, 172, 176, 180, 183, 184, 191, 195, 201, 203, 205, 206, 207, 227, 228, 229, 233, 234, 240, 258, 260, 263, 264, 265, 266, 267, 268, 269, 274, 276, 357, 358, 363, 385, 450, 477, 478, 482, 510, 513, 517, 523, 524, 535, 536, 539, 555, 557, 585, 606, 608, 612, 615, 617, 620, 647, 651, 652, 653, 654, 655, 656, 657, 659, 662, 668, 745, 753, 775, 783, 792, 798, 837, 845, 857, 866, 878], "unfilt": [2, 166, 172, 201, 204], "singl": [2, 3, 6, 16, 18, 27, 33, 34, 36, 45, 56, 69, 73, 82, 83, 86, 93, 100, 102, 104, 105, 112, 116, 119, 121, 129, 140, 141, 142, 144, 145, 149, 150, 151, 158, 165, 166, 168, 169, 170, 172, 176, 178, 180, 183, 184, 188, 189, 190, 195, 198, 199, 201, 204, 205, 206, 207, 209, 210, 211, 214, 215, 220, 222, 225, 230, 231, 232, 235, 239, 240, 243, 255, 257, 258, 260, 261, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 290, 291, 294, 296, 297, 303, 311, 313, 317, 318, 323, 352, 353, 358, 384, 409, 410, 416, 422, 425, 431, 435, 438, 450, 468, 477, 478, 493, 496, 498, 511, 514, 517, 519, 521, 523, 524, 526, 528, 530, 531, 538, 554, 556, 557, 562, 565, 571, 600, 608, 612, 619, 625, 632, 642, 646, 663, 677, 678, 680, 681, 682, 684, 685, 692, 697, 698, 699, 700, 701, 713, 723, 724, 725, 727, 728, 735, 745, 761, 762, 763, 769, 773, 776, 777, 778, 779, 781, 784, 785, 788, 795, 796, 797, 799, 800, 801, 805, 807, 821, 837, 846, 853, 854, 857, 860, 863, 864, 866, 878], "meg0443": 2, "ch_name": [2, 4, 7, 15, 18, 19, 31, 63, 69, 71, 73, 85, 99, 111, 113, 114, 119, 124, 135, 136, 140, 146, 149, 151, 159, 166, 168, 169, 172, 184, 190, 191, 199, 202, 204, 206, 209, 210, 211, 214, 220, 222, 227, 228, 229, 230, 239, 255, 257, 258, 260, 262, 263, 264, 265, 266, 267, 268, 296, 297, 311, 313, 317, 320, 323, 328, 336, 368, 369, 372, 476, 477, 478, 548, 551, 557, 569, 570, 573, 574, 576, 577, 578, 596, 639, 651, 697, 698, 699, 700, 701, 702, 703, 704, 766, 775, 776, 798, 863, 878], "index": [2, 4, 19, 21, 31, 47, 61, 69, 71, 74, 89, 132, 136, 143, 149, 150, 151, 160, 166, 169, 170, 172, 175, 180, 183, 184, 188, 191, 194, 198, 200, 203, 204, 205, 206, 208, 209, 210, 215, 216, 221, 226, 227, 238, 239, 243, 256, 257, 261, 262, 263, 264, 265, 266, 270, 271, 273, 274, 276, 277, 278, 279, 283, 284, 295, 296, 297, 310, 320, 348, 362, 469, 476, 477, 478, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 517, 527, 547, 557, 573, 574, 577, 578, 580, 581, 589, 615, 616, 657, 697, 698, 699, 700, 701, 745, 758, 763, 769, 773, 778, 788, 790, 792, 818, 833, 854, 860, 878], "edi": 2, "regular": [2, 5, 28, 29, 30, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 54, 55, 57, 58, 59, 60, 77, 82, 89, 93, 98, 103, 106, 107, 108, 109, 120, 166, 169, 178, 179, 180, 181, 182, 191, 195, 199, 206, 209, 220, 221, 222, 225, 233, 235, 265, 266, 269, 275, 296, 297, 353, 357, 358, 368, 369, 409, 416, 417, 421, 430, 438, 452, 453, 472, 474, 475, 485, 488, 492, 499, 524, 525, 526, 527, 528, 530, 531, 532, 535, 537, 540, 541, 551, 558, 566, 568, 576, 585, 620, 674, 677, 684, 685, 687, 688, 691, 784, 785, 802, 853, 859, 868, 878], "viz": [2, 4, 5, 7, 12, 19, 24, 27, 31, 34, 35, 38, 39, 40, 41, 42, 46, 47, 51, 52, 57, 59, 69, 78, 79, 80, 85, 87, 91, 92, 100, 108, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 129, 131, 132, 134, 135, 136, 137, 141, 142, 143, 144, 150, 151, 155, 156, 157, 158, 159, 160, 166, 170, 177, 178, 180, 181, 182, 183, 184, 185, 190, 194, 199, 201, 202, 204, 205, 206, 207, 208, 209, 210, 215, 225, 230, 240, 261, 263, 264, 265, 266, 268, 270, 271, 273, 274, 277, 278, 279, 308, 317, 328, 477, 478, 557, 607, 615, 625, 630, 697, 835, 837, 853, 855, 857, 860, 864, 868, 877, 878], "plot_compare_evok": [2, 4, 100, 126, 141, 142, 143, 144, 150, 151, 166, 210, 230, 263, 264, 776, 864, 868, 878], "111": [2, 6, 12, 32, 35, 46, 112, 126, 145, 169, 195, 208, 243, 416], "hf_sef_data": [2, 6], "some": [3, 4, 5, 10, 16, 21, 27, 40, 54, 55, 61, 65, 69, 72, 74, 94, 97, 102, 104, 108, 112, 113, 119, 126, 134, 135, 136, 137, 140, 141, 142, 144, 145, 149, 150, 151, 152, 156, 158, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 180, 183, 184, 189, 190, 191, 195, 196, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 211, 212, 214, 215, 216, 217, 220, 221, 222, 225, 229, 230, 231, 238, 240, 255, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 276, 277, 278, 279, 307, 311, 315, 319, 353, 371, 384, 423, 432, 443, 462, 468, 477, 478, 485, 492, 552, 556, 557, 559, 567, 575, 585, 593, 599, 609, 611, 638, 642, 645, 679, 685, 697, 699, 700, 701, 761, 763, 780, 782, 798, 833, 835, 836, 837, 840, 841, 844, 849, 852, 853, 854, 855, 857, 858, 859, 860, 861, 864, 866, 878], "demo": [3, 27, 833, 878], "common": [3, 17, 20, 27, 32, 33, 34, 43, 44, 74, 114, 135, 149, 151, 155, 158, 160, 162, 165, 172, 189, 201, 203, 204, 205, 206, 209, 210, 214, 215, 222, 234, 240, 243, 263, 264, 265, 266, 268, 276, 311, 316, 327, 353, 362, 372, 409, 434, 438, 459, 465, 477, 478, 492, 554, 557, 572, 628, 632, 642, 697, 831, 833, 837, 854, 857, 860, 861, 864, 866, 878], "public": [3, 27, 111, 115, 119, 121, 129, 134, 144, 201, 258, 265, 268, 274, 448, 476, 477, 615, 625, 745, 764, 769, 837, 853, 859, 866, 878], "brainstorm": [3, 6, 27, 80, 81, 83, 108, 118, 165, 186, 187, 192, 193, 243, 257, 260, 261, 263, 265, 266, 268, 274, 301, 308, 352, 353, 354, 355, 358, 360, 362, 429, 450, 452, 477, 490, 514, 515, 520, 521, 523, 524, 535, 554, 570, 579, 585, 617, 623, 630, 645, 745, 761, 773, 785, 813, 860, 868, 876, 878], "raw": [3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 27, 28, 32, 33, 34, 36, 41, 42, 45, 46, 49, 56, 61, 63, 65, 67, 68, 70, 71, 72, 73, 75, 77, 78, 79, 81, 82, 83, 87, 88, 90, 91, 94, 95, 96, 98, 99, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 120, 122, 126, 127, 128, 131, 132, 134, 135, 136, 141, 142, 144, 145, 146, 149, 151, 156, 158, 159, 162, 165, 166, 167, 169, 170, 171, 173, 174, 180, 182, 183, 184, 185, 188, 189, 190, 191, 195, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 218, 219, 221, 222, 227, 228, 229, 230, 233, 235, 238, 239, 240, 243, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 276, 277, 278, 279, 280, 282, 283, 284, 295, 296, 297, 311, 313, 316, 340, 342, 344, 345, 346, 347, 352, 353, 355, 356, 357, 358, 361, 362, 370, 380, 391, 392, 400, 404, 414, 417, 434, 438, 442, 444, 447, 450, 451, 468, 476, 478, 479, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 513, 516, 517, 518, 520, 523, 524, 525, 526, 527, 528, 530, 531, 535, 538, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 592, 593, 599, 600, 606, 610, 612, 614, 617, 619, 620, 639, 642, 647, 648, 649, 650, 651, 662, 663, 683, 697, 699, 700, 701, 710, 715, 743, 745, 775, 778, 779, 788, 789, 790, 792, 798, 799, 815, 833, 835, 837, 853, 854, 855, 863, 864, 868, 878], "median": [3, 5, 6, 27, 69, 127, 150, 157, 195, 204, 226, 238, 239, 260, 263, 264, 265, 266, 268, 272, 313, 355, 409, 416, 418, 450, 477, 478, 490, 554, 556, 557, 571, 579, 585, 676, 697, 699, 700, 701, 716, 762, 769, 776, 777, 784, 788, 797, 800, 805, 807, 878], "nerv": [3, 5, 6, 27, 263, 265, 266, 268, 355, 450, 490, 554, 579], "hf": [3, 6, 27, 95, 126, 191, 265, 391, 769], "sef": [3, 6, 27, 126, 265, 391, 769, 853], "trial": [3, 6, 13, 16, 18, 27, 28, 33, 68, 69, 71, 83, 100, 103, 106, 112, 113, 116, 121, 129, 140, 141, 142, 143, 144, 149, 151, 152, 165, 166, 168, 180, 183, 191, 194, 195, 200, 201, 204, 220, 222, 225, 230, 231, 232, 233, 235, 243, 263, 264, 265, 266, 268, 290, 291, 294, 317, 323, 352, 409, 422, 425, 431, 432, 433, 435, 438, 450, 477, 493, 496, 526, 528, 554, 557, 565, 612, 632, 677, 678, 680, 681, 682, 684, 685, 697, 700, 724, 725, 727, 728, 769, 775, 778, 833, 854, 878], "linear": [3, 5, 6, 8, 9, 13, 17, 19, 20, 26, 27, 32, 41, 45, 50, 54, 55, 60, 98, 100, 106, 108, 109, 111, 119, 134, 135, 136, 141, 158, 159, 166, 176, 177, 181, 182, 194, 195, 201, 203, 204, 205, 243, 258, 260, 263, 264, 265, 266, 268, 270, 271, 272, 274, 276, 277, 278, 279, 340, 352, 409, 413, 415, 416, 421, 424, 427, 445, 447, 448, 477, 478, 515, 527, 529, 536, 539, 556, 557, 571, 579, 583, 612, 621, 648, 649, 650, 662, 682, 683, 692, 697, 699, 701, 733, 735, 745, 762, 764, 769, 777, 778, 784, 786, 788, 793, 797, 799, 800, 803, 805, 807, 808, 809, 833, 844, 846, 853, 854, 857, 878], "regress": [3, 6, 10, 11, 12, 15, 18, 19, 27, 31, 42, 76, 84, 97, 101, 147, 148, 165, 195, 212, 213, 225, 243, 263, 264, 265, 266, 268, 352, 415, 421, 450, 477, 522, 525, 554, 556, 574, 595, 600, 608, 681, 682, 683, 769, 778, 781, 800, 854, 866, 878], "limo": [3, 6, 27, 243, 264, 265, 266, 352, 682, 769, 778, 868, 878], "optic": [3, 6, 27, 74, 165, 188, 190, 212, 213, 261, 263, 265, 266, 268, 274, 301, 353, 363, 370, 438, 450, 452, 486, 498, 523, 524, 535, 551, 554, 556, 587, 588, 592, 604, 617, 701, 739, 745, 761, 813, 833, 854, 878], "pump": [3, 6, 27, 165, 188, 212, 213, 261, 263, 265, 266, 268, 274, 301, 353, 363, 450, 452, 498, 523, 524, 535, 551, 554, 556, 604, 617, 701, 739, 745, 761, 813, 833, 854, 878], "magnetomet": [3, 6, 22, 27, 32, 72, 75, 79, 80, 81, 86, 92, 108, 118, 119, 142, 145, 146, 150, 151, 162, 165, 166, 167, 168, 169, 180, 183, 184, 188, 191, 198, 199, 200, 202, 204, 205, 206, 207, 209, 212, 213, 214, 215, 216, 217, 220, 225, 255, 258, 260, 261, 263, 264, 265, 266, 268, 270, 271, 272, 274, 277, 278, 279, 296, 297, 301, 319, 353, 354, 355, 356, 357, 358, 363, 368, 369, 370, 409, 416, 430, 450, 452, 453, 472, 474, 475, 477, 478, 498, 513, 523, 524, 535, 551, 554, 555, 556, 557, 567, 568, 569, 570, 571, 572, 573, 574, 576, 585, 596, 604, 617, 683, 697, 699, 700, 701, 739, 745, 761, 762, 768, 775, 776, 777, 779, 781, 784, 785, 788, 797, 798, 800, 805, 806, 807, 813, 833, 853, 854, 857, 860, 878], "opm": [3, 6, 27, 104, 105, 165, 212, 213, 243, 260, 261, 263, 265, 266, 268, 274, 301, 353, 358, 363, 450, 452, 498, 515, 520, 523, 524, 530, 535, 551, 554, 556, 604, 617, 645, 701, 739, 745, 761, 813, 833, 860, 868, 878], "dspm": [3, 6, 11, 27, 29, 31, 36, 37, 38, 39, 40, 41, 42, 44, 55, 56, 59, 60, 103, 104, 105, 106, 107, 108, 165, 166, 175, 178, 179, 181, 182, 186, 187, 191, 195, 221, 222, 233, 235, 260, 263, 265, 266, 267, 268, 269, 270, 271, 274, 276, 277, 278, 279, 289, 293, 296, 297, 352, 353, 357, 450, 474, 475, 477, 490, 511, 516, 520, 523, 524, 525, 526, 527, 528, 529, 530, 531, 535, 536, 537, 538, 540, 541, 554, 557, 574, 612, 615, 617, 619, 706, 745, 770, 778, 833, 853, 854, 863, 878], "spm": [3, 6, 27, 122, 195, 352, 353, 404, 450, 490, 516, 520, 524, 535, 554, 557, 574, 778, 866, 876, 878], "face": [3, 4, 6, 10, 27, 68, 122, 140, 142, 144, 149, 151, 161, 166, 172, 175, 195, 198, 243, 263, 264, 305, 352, 353, 450, 490, 516, 520, 524, 535, 554, 557, 574, 628, 631, 697, 758, 778, 806, 826, 831, 863, 866, 878], "explor": [4, 27, 104, 105, 108, 158, 181, 195, 199, 201, 203, 206, 217, 220, 221, 239, 240, 263, 266, 278, 279, 286, 450, 676, 809, 834, 854, 855, 857], "structur": [4, 8, 9, 10, 27, 41, 43, 59, 62, 63, 69, 82, 93, 94, 111, 113, 122, 134, 135, 137, 142, 146, 147, 148, 151, 153, 154, 155, 159, 165, 166, 167, 170, 171, 173, 174, 181, 185, 186, 187, 189, 190, 194, 204, 215, 218, 219, 223, 224, 225, 226, 240, 243, 257, 263, 264, 265, 266, 267, 268, 270, 271, 273, 274, 276, 277, 278, 279, 309, 310, 311, 319, 352, 371, 372, 387, 391, 392, 400, 404, 450, 466, 474, 475, 477, 478, 482, 496, 497, 537, 548, 551, 553, 554, 568, 582, 585, 608, 609, 610, 611, 612, 614, 615, 625, 657, 667, 668, 669, 670, 671, 672, 673, 677, 697, 699, 700, 701, 716, 735, 745, 801, 824, 833, 837, 838, 841, 844, 849, 851, 853, 854, 855, 866, 878], "contain": [4, 16, 18, 27, 31, 38, 41, 43, 53, 78, 79, 87, 93, 100, 107, 111, 115, 126, 127, 134, 137, 140, 143, 144, 146, 149, 151, 155, 158, 162, 165, 166, 168, 169, 170, 171, 172, 175, 181, 183, 188, 189, 190, 191, 201, 203, 204, 205, 206, 209, 210, 211, 214, 215, 220, 222, 225, 238, 239, 240, 250, 255, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 283, 284, 288, 296, 297, 298, 302, 306, 307, 308, 311, 312, 313, 314, 317, 318, 319, 325, 334, 337, 348, 353, 354, 355, 356, 357, 358, 359, 364, 365, 366, 367, 368, 369, 370, 384, 388, 390, 391, 392, 409, 412, 413, 415, 416, 417, 418, 419, 421, 422, 423, 428, 430, 433, 436, 437, 438, 443, 450, 451, 452, 453, 457, 458, 459, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 477, 478, 484, 486, 487, 488, 489, 491, 493, 494, 495, 496, 497, 500, 501, 502, 503, 504, 505, 506, 507, 510, 511, 514, 516, 518, 519, 535, 543, 546, 547, 552, 556, 557, 558, 560, 562, 571, 572, 576, 582, 584, 585, 589, 591, 597, 598, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 620, 623, 626, 628, 629, 631, 637, 639, 641, 642, 645, 646, 652, 653, 654, 655, 656, 657, 658, 659, 660, 663, 665, 666, 674, 676, 682, 684, 685, 687, 688, 689, 692, 693, 697, 698, 699, 700, 701, 709, 712, 720, 724, 725, 727, 728, 737, 745, 761, 762, 763, 764, 769, 772, 773, 775, 776, 777, 778, 779, 781, 782, 784, 785, 786, 788, 794, 797, 800, 801, 802, 803, 804, 805, 807, 808, 809, 818, 823, 826, 828, 829, 831, 833, 836, 837, 853, 854, 855, 857, 860, 863, 864, 878], "replic": [4, 16, 229, 233, 234, 235, 269, 674, 854, 857, 858, 878], "extend": [4, 75, 141, 144, 151, 166, 180, 199, 204, 206, 209, 211, 230, 243, 257, 260, 261, 263, 264, 265, 266, 272, 278, 353, 409, 416, 477, 478, 510, 518, 556, 557, 560, 568, 571, 576, 583, 585, 664, 697, 699, 701, 735, 762, 773, 777, 784, 788, 797, 800, 805, 807, 841, 844, 853, 866, 878], "main": [4, 49, 93, 100, 143, 156, 168, 171, 207, 211, 216, 229, 235, 263, 264, 325, 391, 468, 490, 678, 680, 775, 835, 837, 845, 854, 860, 861, 878], "tool": [4, 27, 54, 55, 69, 79, 88, 134, 140, 151, 155, 158, 161, 190, 198, 199, 201, 204, 206, 210, 226, 235, 240, 243, 250, 270, 271, 274, 277, 278, 279, 477, 478, 514, 539, 835, 840, 841, 842, 843, 845, 849, 853, 857, 858, 859, 860, 861, 865, 866, 868, 876, 878], "integr": [4, 155, 160, 200, 204, 225, 235, 243, 539, 557, 585, 657, 837, 841, 849, 860, 863, 878], "meeg": [4, 240], "matlab": [4, 19, 194, 243, 302, 415, 496, 594, 610, 614, 843, 844, 854, 861, 862, 866, 876, 878], "toolbox": [4, 19, 69, 151, 155, 194, 243, 302, 415, 448, 565, 844, 854], "origin": [4, 5, 8, 9, 11, 12, 13, 16, 18, 21, 22, 24, 26, 32, 33, 34, 38, 41, 42, 45, 46, 49, 50, 69, 70, 71, 74, 77, 79, 80, 86, 92, 93, 95, 96, 99, 102, 106, 109, 111, 112, 113, 116, 117, 120, 127, 134, 135, 136, 137, 140, 141, 142, 144, 145, 146, 149, 151, 152, 156, 158, 159, 160, 161, 162, 166, 167, 169, 170, 172, 176, 177, 178, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 204, 205, 206, 207, 209, 210, 214, 216, 222, 227, 228, 229, 230, 233, 235, 238, 239, 255, 256, 257, 258, 260, 263, 264, 265, 266, 267, 268, 270, 271, 272, 274, 276, 277, 278, 279, 281, 283, 284, 296, 297, 311, 359, 368, 409, 416, 423, 424, 425, 430, 433, 443, 471, 476, 477, 478, 485, 488, 492, 496, 510, 516, 525, 556, 557, 558, 567, 568, 571, 576, 585, 592, 600, 610, 614, 617, 622, 635, 637, 639, 646, 648, 649, 650, 657, 662, 682, 689, 697, 699, 700, 701, 741, 745, 761, 762, 769, 775, 777, 779, 781, 784, 785, 788, 795, 797, 798, 799, 800, 801, 804, 805, 807, 825, 833, 837, 845, 853, 854, 860, 863, 878], "interfac": [4, 8, 15, 45, 78, 87, 134, 155, 158, 166, 189, 195, 199, 201, 204, 205, 217, 243, 265, 266, 374, 379, 468, 469, 558, 745, 784, 840, 844, 849, 854, 863, 878], "eeglab": [4, 69, 127, 168, 201, 204, 243, 260, 263, 264, 265, 266, 272, 311, 329, 409, 416, 439, 442, 477, 478, 493, 556, 557, 565, 571, 598, 603, 609, 697, 699, 701, 762, 769, 777, 779, 781, 784, 785, 788, 795, 797, 799, 800, 801, 805, 807, 860, 878], "In": [4, 5, 10, 15, 16, 19, 21, 32, 40, 42, 43, 44, 45, 46, 59, 69, 73, 77, 81, 82, 86, 87, 89, 93, 100, 102, 111, 113, 114, 115, 117, 125, 126, 131, 134, 135, 137, 140, 142, 144, 149, 150, 151, 152, 155, 156, 158, 160, 161, 162, 166, 167, 168, 170, 171, 172, 175, 176, 178, 181, 188, 190, 191, 194, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 214, 215, 216, 220, 222, 225, 226, 227, 235, 238, 239, 240, 243, 255, 257, 258, 260, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 277, 278, 279, 287, 296, 297, 301, 302, 307, 309, 319, 326, 328, 340, 353, 357, 358, 368, 369, 370, 371, 409, 411, 415, 416, 425, 426, 430, 433, 442, 444, 452, 453, 472, 474, 475, 477, 478, 485, 523, 524, 525, 526, 527, 528, 532, 535, 552, 556, 557, 558, 559, 571, 572, 573, 574, 579, 582, 583, 591, 593, 600, 602, 625, 642, 662, 665, 683, 692, 697, 699, 700, 701, 705, 706, 707, 708, 710, 713, 723, 724, 725, 726, 727, 728, 729, 732, 742, 745, 758, 769, 775, 776, 777, 778, 779, 781, 782, 784, 785, 788, 789, 796, 797, 798, 799, 800, 803, 805, 806, 809, 833, 835, 837, 838, 842, 843, 845, 848, 853, 854, 857, 859, 860, 863, 864, 878], "summari": [4, 10, 172, 200, 204, 217, 270, 271, 274, 277, 278, 279, 533, 534, 689, 837, 863], "fetch": [4, 137, 248, 379, 383, 384, 385, 386, 387, 388, 393, 401, 402, 837, 854, 878], "subject": [4, 5, 7, 8, 9, 10, 11, 19, 22, 24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 58, 59, 60, 67, 70, 71, 78, 79, 80, 82, 88, 89, 90, 94, 103, 108, 111, 112, 114, 115, 117, 123, 124, 125, 126, 130, 133, 134, 135, 136, 137, 140, 143, 150, 151, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 168, 169, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 191, 195, 198, 199, 200, 203, 204, 205, 206, 207, 209, 210, 212, 213, 214, 215, 221, 222, 225, 226, 227, 229, 230, 233, 234, 235, 236, 239, 240, 243, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 296, 297, 302, 306, 307, 308, 311, 340, 341, 342, 343, 348, 350, 351, 359, 364, 365, 366, 371, 379, 383, 385, 386, 387, 388, 393, 401, 402, 428, 443, 459, 461, 463, 465, 467, 468, 469, 470, 471, 477, 478, 479, 482, 510, 512, 514, 516, 520, 523, 524, 535, 543, 544, 557, 561, 571, 582, 585, 602, 606, 612, 617, 619, 620, 622, 625, 629, 634, 635, 636, 637, 645, 646, 647, 649, 650, 651, 660, 662, 663, 674, 678, 680, 689, 692, 693, 735, 737, 744, 745, 761, 763, 768, 773, 774, 787, 801, 803, 808, 809, 818, 827, 828, 833, 843, 851, 853, 855, 857, 860, 866, 878], "If": [4, 27, 28, 31, 43, 44, 68, 69, 81, 98, 100, 114, 116, 119, 126, 134, 135, 137, 140, 142, 144, 146, 149, 150, 151, 156, 159, 160, 161, 165, 168, 169, 170, 171, 172, 175, 181, 182, 188, 189, 190, 195, 199, 200, 201, 202, 204, 205, 206, 207, 209, 210, 214, 215, 216, 217, 220, 225, 226, 227, 233, 238, 240, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 306, 307, 308, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 328, 329, 331, 334, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 430, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 588, 589, 592, 593, 594, 597, 598, 599, 600, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 621, 622, 623, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 678, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 719, 720, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 737, 740, 744, 745, 750, 753, 754, 755, 757, 758, 759, 760, 761, 762, 763, 764, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 813, 814, 815, 818, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 835, 836, 837, 840, 841, 842, 843, 844, 845, 848, 853, 854, 857, 858, 859, 860, 861, 863, 864, 878], "disk": [4, 29, 79, 107, 109, 142, 143, 149, 150, 158, 166, 170, 172, 177, 180, 184, 199, 205, 208, 209, 214, 215, 216, 222, 255, 257, 258, 259, 263, 264, 265, 266, 268, 269, 281, 312, 384, 428, 450, 476, 477, 478, 559, 608, 615, 617, 619, 625, 646, 699, 701, 718, 745, 775, 779, 783, 785, 798, 825, 827, 843, 853, 857, 860, 863, 878], "fetcher": [4, 137, 854, 866, 878], "automat": [4, 69, 77, 79, 82, 93, 100, 140, 141, 142, 144, 145, 149, 150, 151, 155, 156, 166, 168, 169, 170, 172, 182, 189, 190, 191, 198, 199, 200, 201, 202, 204, 205, 206, 209, 214, 216, 217, 220, 230, 243, 255, 257, 258, 260, 263, 264, 265, 266, 268, 270, 271, 274, 277, 278, 279, 281, 311, 317, 339, 359, 376, 377, 378, 379, 381, 382, 389, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 412, 419, 422, 430, 433, 441, 457, 458, 465, 467, 477, 478, 483, 490, 494, 497, 501, 520, 556, 557, 559, 567, 568, 569, 571, 576, 577, 580, 583, 585, 600, 611, 622, 633, 636, 641, 642, 646, 657, 684, 685, 687, 688, 697, 700, 741, 745, 763, 764, 768, 769, 775, 778, 781, 782, 783, 784, 791, 792, 798, 803, 808, 809, 836, 837, 843, 844, 853, 854, 860, 866, 878], "remot": [4, 248, 385, 811, 835, 837, 843, 866], "repositori": [4, 170, 838, 844, 859], "dure": [4, 19, 33, 38, 43, 45, 69, 80, 82, 93, 99, 102, 115, 120, 126, 134, 136, 141, 144, 149, 155, 157, 160, 166, 167, 168, 171, 172, 180, 182, 191, 195, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 214, 215, 216, 217, 240, 243, 255, 261, 263, 264, 265, 266, 267, 268, 270, 273, 274, 276, 278, 279, 280, 296, 297, 303, 340, 342, 346, 353, 357, 358, 360, 365, 368, 369, 370, 409, 415, 416, 426, 432, 433, 444, 452, 453, 469, 472, 474, 475, 477, 478, 479, 490, 505, 516, 520, 535, 543, 557, 576, 582, 585, 600, 639, 642, 647, 662, 665, 671, 672, 673, 692, 697, 699, 700, 701, 703, 706, 726, 729, 733, 734, 743, 745, 761, 764, 775, 782, 785, 789, 792, 798, 803, 809, 833, 836, 842, 845, 853, 854, 855, 859, 860, 863, 878], "inform": [4, 5, 9, 11, 21, 22, 26, 28, 29, 31, 34, 35, 38, 39, 40, 42, 43, 44, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 61, 63, 67, 79, 83, 89, 91, 92, 93, 94, 100, 103, 106, 107, 109, 123, 130, 133, 134, 135, 140, 141, 142, 143, 144, 146, 149, 150, 151, 156, 158, 159, 160, 162, 165, 166, 168, 170, 172, 175, 177, 179, 180, 181, 182, 188, 189, 190, 191, 194, 195, 202, 203, 204, 205, 206, 207, 209, 212, 213, 214, 216, 220, 221, 222, 225, 227, 230, 233, 235, 239, 240, 243, 248, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 281, 283, 284, 296, 297, 298, 304, 305, 309, 310, 317, 318, 319, 323, 325, 326, 328, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 353, 357, 359, 368, 369, 370, 372, 409, 411, 416, 417, 418, 428, 429, 433, 439, 440, 441, 442, 444, 445, 447, 448, 450, 453, 460, 461, 467, 469, 472, 475, 476, 477, 478, 479, 482, 488, 496, 508, 513, 516, 519, 520, 521, 525, 535, 553, 554, 556, 557, 567, 568, 576, 582, 583, 585, 590, 591, 596, 598, 601, 610, 612, 613, 614, 632, 633, 639, 644, 645, 661, 662, 665, 684, 688, 694, 696, 697, 698, 699, 700, 701, 713, 724, 725, 726, 727, 728, 729, 734, 735, 740, 741, 745, 758, 761, 765, 769, 770, 771, 773, 776, 780, 786, 787, 793, 797, 801, 807, 824, 833, 835, 836, 837, 840, 841, 844, 849, 854, 855, 858, 859, 861, 878], "e": [4, 7, 8, 12, 28, 41, 42, 44, 46, 47, 54, 68, 69, 70, 79, 83, 100, 111, 113, 119, 134, 137, 140, 141, 143, 144, 146, 150, 151, 153, 155, 157, 160, 161, 162, 165, 166, 168, 169, 170, 178, 180, 185, 188, 189, 190, 194, 195, 198, 199, 200, 201, 202, 204, 205, 207, 208, 209, 214, 215, 220, 221, 222, 225, 226, 227, 230, 233, 235, 239, 240, 243, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 286, 287, 296, 297, 298, 301, 302, 305, 307, 309, 311, 312, 317, 326, 328, 337, 339, 350, 353, 357, 358, 364, 368, 369, 370, 379, 384, 385, 387, 392, 401, 402, 409, 411, 412, 415, 416, 418, 419, 420, 423, 424, 425, 428, 429, 430, 433, 436, 438, 441, 442, 443, 445, 447, 448, 450, 451, 452, 453, 459, 465, 468, 471, 472, 474, 475, 476, 477, 478, 479, 489, 490, 492, 494, 510, 512, 514, 517, 518, 519, 520, 523, 524, 530, 531, 532, 533, 534, 535, 536, 539, 540, 541, 543, 556, 557, 559, 560, 565, 566, 567, 568, 571, 572, 573, 574, 576, 578, 579, 582, 585, 591, 592, 593, 600, 605, 612, 615, 616, 619, 620, 625, 632, 633, 634, 635, 636, 637, 643, 646, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 665, 668, 682, 683, 684, 685, 686, 687, 688, 689, 692, 693, 696, 697, 699, 700, 701, 705, 706, 707, 708, 709, 710, 713, 723, 727, 728, 732, 735, 745, 750, 758, 761, 762, 763, 768, 769, 773, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 788, 789, 791, 792, 796, 797, 798, 799, 800, 803, 805, 807, 808, 811, 818, 823, 826, 833, 835, 836, 837, 838, 841, 843, 849, 853, 854, 857, 859, 860, 863, 864, 866, 878], "rate": [4, 68, 96, 100, 102, 180, 189, 190, 194, 201, 202, 204, 229, 239, 243, 258, 261, 262, 263, 264, 265, 266, 268, 270, 271, 274, 277, 278, 279, 372, 414, 444, 448, 450, 477, 478, 485, 492, 499, 578, 583, 599, 650, 662, 675, 681, 683, 686, 697, 699, 700, 701, 715, 775, 777, 786, 798, 857, 878], "per": [4, 31, 47, 89, 93, 100, 106, 109, 119, 125, 130, 142, 144, 150, 151, 158, 166, 169, 180, 200, 204, 206, 217, 225, 230, 235, 239, 255, 263, 264, 265, 266, 268, 270, 271, 272, 274, 275, 276, 277, 278, 279, 281, 313, 320, 359, 374, 386, 401, 409, 416, 419, 422, 430, 433, 442, 443, 477, 478, 533, 534, 539, 540, 541, 558, 561, 602, 642, 649, 678, 680, 693, 697, 699, 701, 703, 706, 713, 715, 716, 723, 724, 725, 727, 728, 735, 745, 775, 776, 777, 784, 806, 837, 843, 859, 860, 866, 878], "name": [4, 5, 7, 8, 10, 18, 22, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 51, 54, 55, 58, 59, 67, 69, 78, 82, 89, 91, 92, 93, 94, 99, 100, 102, 108, 111, 125, 130, 131, 134, 135, 137, 141, 142, 143, 144, 145, 149, 150, 159, 160, 161, 166, 168, 169, 170, 171, 172, 177, 178, 179, 180, 190, 191, 195, 199, 200, 201, 204, 205, 207, 209, 210, 211, 217, 220, 221, 222, 225, 226, 238, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 302, 306, 307, 308, 309, 311, 312, 317, 320, 321, 322, 323, 324, 326, 327, 328, 333, 335, 336, 337, 339, 350, 358, 359, 362, 364, 365, 366, 368, 369, 372, 380, 384, 387, 390, 409, 411, 412, 413, 415, 416, 417, 418, 419, 421, 422, 423, 425, 427, 428, 430, 433, 436, 439, 440, 441, 442, 450, 451, 459, 461, 462, 463, 465, 467, 468, 469, 470, 471, 476, 477, 478, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 509, 510, 512, 516, 517, 538, 542, 546, 547, 548, 554, 555, 556, 557, 558, 559, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 582, 586, 591, 593, 596, 597, 600, 602, 603, 605, 607, 609, 610, 611, 612, 614, 616, 617, 618, 619, 620, 622, 623, 625, 627, 628, 629, 630, 632, 633, 634, 635, 636, 637, 639, 642, 645, 646, 651, 665, 674, 678, 682, 683, 689, 692, 693, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 713, 717, 719, 723, 725, 728, 730, 732, 742, 744, 745, 750, 761, 762, 763, 764, 766, 769, 773, 774, 775, 776, 777, 779, 781, 782, 783, 784, 788, 789, 795, 796, 797, 798, 799, 800, 801, 803, 804, 805, 807, 808, 809, 818, 822, 823, 824, 825, 828, 829, 830, 831, 832, 833, 835, 836, 841, 842, 843, 845, 854, 855, 860, 864, 868, 878], "etc": [4, 27, 31, 36, 47, 76, 143, 155, 160, 166, 167, 168, 171, 172, 175, 188, 189, 190, 198, 199, 200, 204, 209, 214, 217, 220, 225, 233, 240, 256, 261, 263, 264, 265, 266, 268, 269, 270, 274, 278, 333, 438, 450, 451, 477, 478, 485, 496, 500, 519, 529, 554, 557, 585, 610, 614, 639, 644, 671, 672, 673, 674, 684, 685, 687, 688, 697, 699, 700, 701, 745, 769, 773, 776, 803, 833, 837, 841, 842, 855, 857, 859, 860, 863, 864, 866, 878], "mat": [4, 19, 194, 243, 268, 496, 610, 614, 860, 878], "store": [4, 16, 29, 30, 69, 89, 92, 93, 94, 103, 108, 114, 115, 134, 135, 140, 141, 142, 143, 144, 149, 150, 151, 155, 156, 158, 160, 162, 168, 169, 170, 172, 175, 182, 189, 190, 191, 199, 200, 205, 206, 209, 210, 214, 216, 217, 221, 222, 240, 255, 256, 257, 261, 263, 264, 265, 266, 268, 273, 274, 275, 277, 281, 323, 344, 362, 379, 384, 391, 392, 401, 402, 411, 413, 424, 433, 438, 442, 447, 468, 476, 477, 478, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 517, 535, 544, 546, 557, 565, 571, 584, 603, 609, 610, 614, 617, 640, 649, 650, 662, 677, 697, 698, 700, 702, 703, 704, 705, 706, 707, 708, 717, 746, 753, 765, 798, 824, 825, 833, 837, 853, 854, 855, 857, 860, 863, 878], "fit": [4, 7, 8, 10, 11, 12, 13, 15, 16, 18, 21, 24, 40, 41, 45, 50, 59, 69, 70, 72, 73, 75, 77, 79, 80, 82, 87, 100, 110, 115, 122, 137, 141, 151, 152, 156, 158, 165, 166, 170, 172, 177, 179, 183, 184, 185, 186, 187, 189, 195, 199, 202, 203, 206, 207, 208, 209, 211, 229, 243, 249, 255, 260, 261, 262, 263, 264, 265, 266, 267, 268, 272, 273, 278, 299, 304, 305, 311, 340, 341, 342, 343, 346, 350, 351, 352, 364, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 428, 430, 438, 448, 452, 477, 478, 489, 516, 519, 524, 554, 556, 557, 558, 561, 564, 566, 567, 568, 571, 576, 577, 585, 615, 646, 661, 682, 697, 699, 700, 701, 710, 745, 762, 769, 773, 777, 779, 781, 784, 785, 788, 789, 790, 792, 795, 797, 799, 800, 801, 805, 807, 837, 849, 854, 857, 860, 864, 867, 878], "inferenti": [4, 225], "evalu": [4, 31, 44, 54, 55, 162, 188, 195, 209, 211, 225, 243, 275, 359, 426, 435, 474, 475, 508, 539, 566, 576, 657, 854, 857, 859, 860], "signific": [4, 71, 99, 100, 111, 151, 165, 172, 188, 198, 200, 201, 203, 204, 206, 225, 227, 228, 229, 230, 231, 232, 240, 243, 260, 263, 264, 265, 266, 268, 317, 323, 352, 409, 415, 416, 448, 477, 478, 532, 556, 557, 608, 684, 685, 687, 688, 689, 697, 699, 701, 762, 777, 781, 784, 800, 805, 807, 853, 860, 863, 866], "jose": [4, 878], "garcia": 4, "alani": [4, 878], "jcg": 4, "gmail": [4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 32, 33, 34, 38, 39, 42, 43, 44, 45, 46, 50, 51, 57, 58, 60, 65, 68, 71, 72, 73, 75, 77, 79, 80, 81, 83, 87, 89, 92, 93, 94, 98, 100, 102, 108, 111, 112, 113, 117, 119, 120, 122, 124, 125, 126, 127, 128, 131, 132, 134, 135, 136, 137, 141, 157, 159, 161, 179, 180, 182, 183, 184, 191, 194, 208, 222, 225, 229, 230, 233, 234, 235, 239, 240], "com": [4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 32, 33, 34, 38, 39, 42, 43, 44, 45, 46, 50, 51, 57, 58, 60, 65, 68, 71, 72, 73, 75, 77, 79, 80, 81, 83, 87, 89, 92, 93, 94, 100, 102, 108, 111, 112, 113, 117, 118, 119, 120, 122, 124, 125, 126, 127, 128, 131, 132, 134, 135, 136, 137, 141, 157, 159, 160, 161, 179, 180, 182, 183, 184, 191, 194, 208, 221, 222, 225, 229, 230, 233, 234, 235, 239, 240, 243, 263, 264, 265, 266, 274, 386, 477, 478, 485, 835, 837, 845, 857], "matplotlib": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 28, 29, 37, 38, 39, 41, 45, 47, 53, 58, 67, 68, 69, 70, 71, 72, 81, 85, 89, 91, 92, 95, 96, 98, 103, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 119, 126, 130, 131, 132, 134, 136, 137, 144, 145, 146, 151, 160, 170, 171, 172, 176, 177, 180, 181, 183, 184, 194, 195, 199, 201, 202, 204, 205, 206, 207, 209, 210, 211, 214, 217, 222, 225, 226, 227, 228, 229, 230, 235, 239, 240, 260, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 274, 277, 278, 279, 311, 312, 409, 416, 477, 478, 556, 557, 571, 619, 697, 698, 699, 701, 713, 723, 745, 746, 748, 758, 760, 762, 763, 765, 767, 768, 769, 770, 771, 772, 773, 774, 775, 777, 778, 779, 781, 782, 783, 784, 785, 786, 787, 788, 790, 792, 793, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 814, 815, 817, 835, 836, 837, 855, 878], "pyplot": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 28, 29, 37, 38, 39, 41, 45, 47, 53, 58, 67, 68, 69, 70, 71, 72, 81, 85, 89, 91, 92, 95, 96, 98, 103, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 119, 126, 130, 131, 132, 134, 136, 137, 144, 145, 146, 151, 160, 170, 172, 176, 177, 180, 181, 183, 184, 194, 195, 201, 202, 205, 206, 209, 210, 211, 214, 222, 225, 226, 227, 228, 229, 230, 235, 239, 240, 262, 263, 264, 265, 266, 697, 713, 723, 748, 769, 779, 781, 806, 878], "plt": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 28, 29, 37, 38, 39, 41, 45, 47, 53, 58, 67, 68, 69, 70, 71, 72, 81, 85, 89, 91, 92, 95, 96, 98, 103, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 119, 126, 130, 131, 132, 134, 136, 137, 144, 145, 146, 151, 160, 170, 172, 176, 177, 180, 181, 183, 184, 194, 195, 201, 202, 205, 206, 209, 210, 211, 214, 222, 225, 226, 227, 228, 229, 230, 235, 239, 240, 265, 266, 320, 713, 723, 783], "stat": [4, 95, 96, 98, 99, 100, 111, 112, 141, 194, 225, 226, 227, 228, 229, 230, 233, 234, 235, 240, 263, 264, 317, 328, 557, 565, 774, 855, 868, 875, 878], "linear_regress": [4, 100, 141, 225, 868, 878], "plot_ev": [4, 7, 137, 166, 210, 215, 263, 264, 775, 868, 878], "combine_evok": [4, 7, 98, 141, 144, 149, 151, 166, 176, 191, 210, 226, 228, 864, 868, 878], "subj": [4, 160, 204], "experi": [4, 19, 45, 65, 69, 127, 151, 165, 166, 168, 169, 180, 191, 199, 200, 206, 209, 210, 211, 214, 215, 243, 268, 833, 837, 854, 856, 860, 878], "particip": [4, 70, 72, 74, 75, 80, 81, 82, 89, 92, 126, 141, 144, 146, 151, 166, 167, 168, 169, 172, 198, 199, 200, 202, 204, 205, 206, 207, 209, 210, 211, 214, 215, 216, 217, 220, 222, 240, 833, 854, 859, 866], "perform": [4, 8, 10, 13, 19, 31, 45, 54, 74, 81, 83, 99, 100, 102, 111, 118, 137, 140, 143, 144, 146, 149, 151, 155, 156, 157, 166, 167, 168, 169, 178, 188, 189, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 214, 225, 227, 229, 233, 235, 256, 258, 260, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 281, 286, 289, 296, 297, 352, 353, 354, 356, 358, 359, 374, 409, 412, 415, 416, 419, 421, 422, 425, 426, 430, 444, 445, 450, 452, 465, 466, 467, 468, 472, 474, 475, 477, 478, 484, 485, 492, 516, 517, 519, 520, 524, 525, 526, 527, 528, 530, 531, 535, 540, 541, 556, 557, 559, 562, 569, 570, 571, 573, 574, 576, 577, 583, 585, 600, 612, 645, 648, 649, 650, 662, 674, 679, 683, 684, 685, 686, 687, 688, 690, 697, 699, 700, 701, 702, 703, 704, 705, 706, 707, 715, 716, 724, 725, 726, 727, 728, 735, 761, 762, 769, 775, 776, 777, 780, 784, 788, 790, 792, 797, 798, 799, 800, 805, 807, 811, 833, 835, 843, 844, 845, 853, 854, 860, 863, 878], "two": [4, 5, 12, 16, 19, 22, 32, 37, 42, 45, 47, 54, 55, 65, 68, 69, 71, 73, 74, 80, 83, 87, 89, 111, 114, 116, 131, 132, 134, 135, 137, 141, 142, 144, 146, 150, 151, 155, 156, 158, 160, 166, 168, 169, 170, 171, 172, 175, 178, 180, 190, 191, 195, 198, 200, 201, 202, 203, 204, 205, 206, 207, 210, 214, 215, 216, 217, 222, 225, 227, 229, 233, 235, 238, 240, 243, 257, 263, 264, 265, 266, 269, 270, 271, 274, 275, 277, 278, 279, 296, 297, 311, 319, 353, 357, 358, 368, 369, 370, 401, 409, 411, 416, 420, 424, 432, 433, 443, 445, 447, 448, 449, 452, 453, 472, 474, 475, 477, 478, 500, 512, 530, 535, 552, 557, 560, 567, 571, 576, 583, 584, 599, 600, 639, 642, 650, 674, 678, 679, 680, 682, 684, 685, 686, 687, 688, 692, 697, 699, 700, 701, 715, 716, 726, 735, 745, 750, 753, 775, 776, 777, 785, 792, 798, 803, 833, 837, 843, 854, 857, 859, 860, 863, 878], "altern": [4, 113, 126, 161, 162, 169, 172, 191, 198, 200, 201, 204, 217, 225, 239, 240, 254, 256, 257, 260, 263, 264, 265, 266, 272, 353, 409, 416, 477, 478, 501, 519, 556, 557, 571, 607, 611, 686, 697, 699, 701, 745, 762, 777, 784, 788, 797, 800, 805, 807, 835, 837, 843, 854, 857, 863, 865, 878], "choic": [4, 113, 155, 160, 170, 171, 184, 201, 206, 215, 227, 276, 449, 459, 535, 690, 835, 841, 854, 860], "task": [4, 10, 32, 33, 34, 46, 69, 111, 112, 136, 137, 143, 144, 155, 156, 165, 169, 175, 195, 199, 204, 239, 243, 379, 412, 419, 713, 723, 724, 727, 854, 860, 861, 864, 866, 878], "discrimin": [4, 9, 18, 82, 195, 240, 243, 409, 413, 416, 557, 854], "between": [4, 8, 10, 16, 19, 22, 26, 27, 36, 38, 40, 45, 47, 59, 60, 68, 81, 82, 87, 95, 98, 99, 102, 107, 112, 113, 126, 127, 132, 133, 134, 136, 137, 140, 141, 144, 146, 149, 150, 151, 156, 157, 158, 160, 161, 162, 165, 166, 169, 170, 171, 172, 176, 178, 188, 189, 190, 191, 194, 195, 199, 200, 201, 203, 204, 205, 207, 208, 209, 210, 211, 214, 215, 216, 222, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 240, 243, 255, 256, 257, 258, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 276, 277, 278, 279, 286, 307, 311, 317, 319, 320, 340, 352, 353, 359, 360, 362, 363, 364, 409, 410, 415, 421, 425, 428, 430, 432, 433, 435, 443, 450, 453, 454, 472, 474, 475, 477, 478, 500, 517, 518, 530, 532, 535, 539, 540, 541, 554, 557, 559, 560, 562, 565, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 580, 583, 584, 585, 589, 591, 612, 615, 616, 639, 647, 648, 649, 650, 652, 654, 657, 658, 661, 662, 665, 667, 668, 669, 671, 672, 676, 677, 684, 685, 687, 688, 689, 692, 697, 698, 700, 702, 704, 705, 707, 712, 713, 716, 720, 721, 723, 724, 725, 727, 728, 735, 745, 750, 761, 763, 764, 766, 769, 771, 775, 778, 779, 781, 782, 784, 798, 799, 802, 803, 805, 808, 809, 811, 824, 833, 835, 837, 843, 845, 853, 854, 857, 859, 860, 863, 866, 878], "stimuli": [4, 19, 68, 115, 127, 141, 144, 146, 149, 151, 166, 180, 191, 194, 203, 243, 415, 560, 833, 854], "The": [4, 5, 7, 8, 9, 11, 14, 15, 16, 18, 19, 21, 27, 31, 34, 38, 41, 43, 44, 45, 46, 47, 48, 49, 52, 58, 59, 60, 63, 65, 68, 73, 74, 77, 78, 79, 80, 81, 82, 83, 87, 93, 94, 100, 102, 103, 106, 108, 109, 111, 112, 113, 114, 115, 119, 125, 126, 127, 133, 134, 135, 136, 137, 141, 142, 143, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 171, 172, 173, 174, 177, 181, 183, 184, 186, 187, 188, 189, 190, 191, 194, 195, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 228, 229, 230, 233, 234, 235, 239, 240, 241, 242, 243, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 294, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 379, 380, 383, 384, 385, 386, 387, 388, 390, 392, 393, 400, 401, 402, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 487, 488, 489, 490, 492, 494, 496, 497, 498, 499, 500, 501, 503, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 632, 633, 634, 636, 637, 638, 639, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 676, 677, 678, 679, 680, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 732, 733, 734, 735, 736, 737, 738, 739, 740, 742, 743, 744, 745, 746, 747, 748, 750, 751, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 827, 828, 829, 830, 832, 833, 835, 837, 840, 841, 843, 849, 855, 856, 857, 858, 861, 862, 864, 866, 878], "same": [4, 18, 19, 28, 44, 45, 54, 55, 58, 69, 73, 74, 78, 82, 89, 98, 102, 108, 112, 113, 126, 134, 135, 140, 141, 142, 144, 149, 150, 151, 156, 160, 161, 162, 168, 169, 170, 171, 175, 176, 178, 183, 188, 190, 191, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 215, 216, 217, 220, 225, 226, 227, 229, 230, 233, 234, 235, 238, 255, 257, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 283, 284, 286, 296, 299, 308, 313, 316, 327, 352, 353, 357, 358, 359, 370, 372, 388, 409, 416, 417, 422, 430, 433, 434, 443, 444, 459, 462, 466, 467, 472, 476, 477, 478, 484, 485, 492, 493, 503, 506, 543, 557, 558, 559, 568, 573, 574, 575, 576, 585, 586, 599, 603, 609, 610, 625, 643, 644, 647, 648, 649, 650, 657, 662, 663, 679, 683, 684, 685, 687, 688, 692, 697, 699, 700, 701, 715, 716, 722, 724, 725, 726, 727, 728, 729, 735, 745, 750, 761, 762, 769, 775, 776, 777, 779, 781, 784, 786, 797, 798, 801, 803, 804, 806, 831, 837, 842, 849, 854, 857, 860, 861, 864, 878], "whole": [4, 28, 54, 55, 69, 162, 199, 225, 243, 270, 271, 274, 277, 278, 279, 443, 512, 585, 602, 646, 663, 698, 745, 771, 805, 837, 845, 854, 878], "vari": [4, 19, 22, 46, 47, 59, 141, 155, 190, 194, 201, 204, 205, 208, 209, 211, 222, 225, 263, 264, 268, 270, 271, 274, 277, 278, 279, 340, 341, 342, 343, 344, 345, 432, 443, 649, 688, 768, 854, 860, 863, 866, 878], "level": [4, 8, 9, 27, 36, 44, 56, 97, 100, 101, 121, 129, 134, 141, 142, 144, 150, 151, 155, 160, 165, 166, 168, 170, 171, 180, 181, 188, 194, 198, 200, 201, 204, 205, 211, 222, 225, 227, 228, 229, 230, 231, 233, 234, 235, 240, 243, 255, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 302, 303, 304, 305, 306, 307, 308, 311, 313, 315, 316, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 381, 382, 383, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 414, 415, 416, 419, 420, 422, 425, 426, 428, 430, 434, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 459, 460, 464, 465, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 512, 513, 514, 515, 516, 517, 519, 520, 521, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 550, 553, 554, 556, 557, 559, 560, 562, 563, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 580, 581, 582, 583, 585, 586, 588, 589, 592, 593, 594, 597, 598, 599, 600, 604, 605, 606, 607, 608, 609, 611, 612, 613, 615, 616, 617, 619, 620, 621, 622, 623, 627, 628, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 642, 644, 645, 646, 648, 649, 650, 651, 661, 662, 665, 667, 668, 669, 670, 671, 672, 673, 676, 678, 680, 684, 685, 686, 687, 688, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 715, 716, 719, 720, 724, 725, 727, 728, 729, 730, 733, 734, 735, 740, 743, 744, 745, 753, 761, 762, 770, 773, 777, 778, 779, 780, 781, 784, 785, 788, 789, 790, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 807, 808, 809, 810, 814, 818, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 835, 837, 844, 854, 855, 860, 862, 875, 878], "nois": [4, 5, 7, 11, 18, 21, 27, 28, 29, 30, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 62, 66, 69, 73, 81, 83, 87, 89, 92, 93, 94, 103, 106, 107, 108, 109, 113, 119, 121, 123, 129, 144, 146, 149, 151, 152, 162, 166, 172, 176, 178, 179, 180, 181, 182, 183, 184, 185, 189, 191, 194, 195, 199, 201, 203, 207, 209, 214, 217, 222, 225, 233, 235, 243, 255, 260, 263, 264, 265, 266, 268, 270, 271, 273, 274, 277, 278, 279, 296, 297, 299, 346, 352, 353, 354, 355, 356, 357, 358, 368, 369, 370, 409, 416, 417, 432, 452, 453, 472, 474, 475, 477, 478, 482, 513, 524, 530, 531, 535, 537, 540, 541, 557, 558, 585, 593, 594, 606, 612, 649, 650, 651, 661, 699, 701, 725, 728, 770, 775, 779, 783, 785, 798, 799, 822, 833, 857, 863, 878], "less": [4, 5, 10, 18, 24, 26, 40, 41, 44, 45, 46, 49, 50, 69, 77, 86, 113, 118, 123, 134, 140, 141, 143, 150, 151, 156, 158, 159, 171, 172, 176, 181, 183, 184, 185, 188, 198, 199, 201, 202, 204, 206, 207, 209, 210, 214, 221, 225, 227, 240, 362, 450, 474, 475, 476, 477, 478, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 517, 524, 557, 565, 582, 583, 590, 684, 685, 686, 687, 688, 692, 745, 837, 844, 854, 857, 859, 860, 878], "discern": [4, 854], "observ": [4, 74, 100, 137, 144, 151, 156, 204, 206, 210, 225, 227, 229, 230, 233, 235, 240, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 448, 477, 478, 557, 678, 683, 684, 685, 686, 687, 688, 697, 699, 700, 701, 702, 703, 704, 798, 833, 853, 854], "fig": [4, 5, 10, 11, 12, 13, 15, 18, 19, 21, 22, 24, 39, 41, 42, 45, 47, 52, 58, 67, 68, 69, 70, 71, 72, 79, 80, 81, 86, 92, 95, 98, 102, 103, 108, 111, 112, 113, 114, 115, 117, 119, 122, 123, 124, 126, 134, 135, 136, 137, 141, 144, 146, 150, 151, 156, 157, 158, 159, 160, 166, 170, 172, 176, 177, 178, 180, 181, 182, 183, 185, 191, 194, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 215, 216, 222, 225, 226, 228, 229, 230, 239, 240, 260, 261, 262, 263, 264, 265, 266, 272, 273, 276, 278, 279, 311, 312, 409, 416, 477, 478, 556, 557, 697, 698, 699, 701, 748, 758, 761, 762, 763, 765, 766, 767, 768, 769, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 805, 806, 809, 815, 878], "similar": [4, 16, 17, 18, 19, 20, 27, 33, 58, 60, 69, 87, 102, 108, 111, 113, 130, 136, 137, 140, 141, 142, 143, 144, 150, 160, 170, 195, 198, 199, 201, 203, 204, 205, 206, 207, 210, 214, 221, 225, 227, 230, 238, 243, 256, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 296, 353, 362, 410, 425, 443, 450, 477, 478, 508, 554, 557, 571, 576, 652, 697, 700, 701, 735, 745, 760, 779, 801, 835, 837, 842, 843, 844, 854, 855, 859, 860, 866, 878], "approach": [4, 10, 19, 21, 44, 45, 46, 59, 72, 74, 102, 126, 141, 143, 144, 149, 150, 151, 156, 160, 163, 164, 165, 166, 167, 172, 180, 194, 195, 198, 199, 201, 202, 203, 204, 207, 209, 211, 222, 225, 226, 229, 231, 240, 243, 268, 364, 387, 482, 515, 557, 573, 583, 592, 636, 761, 813, 833, 837, 845, 853, 854, 855, 859, 860, 878], "across": [4, 16, 17, 18, 19, 20, 26, 27, 28, 32, 33, 47, 54, 55, 58, 60, 79, 82, 83, 102, 108, 112, 113, 134, 135, 137, 140, 141, 142, 143, 145, 149, 150, 153, 155, 162, 165, 166, 168, 172, 180, 195, 198, 199, 201, 203, 204, 205, 206, 207, 209, 211, 217, 220, 221, 225, 233, 234, 235, 239, 243, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 275, 277, 278, 279, 316, 358, 359, 409, 412, 416, 418, 419, 421, 422, 423, 434, 443, 477, 478, 533, 534, 539, 554, 557, 559, 562, 571, 612, 622, 642, 662, 688, 692, 697, 698, 699, 700, 701, 708, 715, 724, 725, 727, 728, 760, 764, 769, 776, 777, 779, 780, 784, 797, 799, 803, 806, 809, 833, 837, 853, 854, 857, 860, 866, 878], "signal": [4, 8, 9, 10, 13, 15, 16, 19, 21, 27, 28, 42, 45, 51, 58, 59, 63, 69, 70, 72, 73, 74, 76, 81, 84, 87, 99, 102, 110, 112, 113, 120, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 151, 152, 162, 165, 166, 172, 175, 178, 180, 184, 189, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 207, 212, 213, 214, 215, 217, 222, 223, 224, 225, 230, 241, 243, 255, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 277, 278, 279, 299, 340, 341, 342, 343, 346, 347, 350, 353, 354, 355, 356, 358, 363, 370, 379, 401, 402, 409, 411, 413, 414, 415, 416, 417, 420, 421, 430, 433, 442, 443, 444, 445, 447, 448, 449, 450, 477, 478, 492, 497, 523, 524, 525, 538, 554, 555, 556, 557, 558, 559, 566, 568, 569, 570, 572, 573, 574, 576, 578, 584, 585, 606, 615, 617, 620, 639, 642, 661, 663, 664, 683, 684, 697, 699, 700, 701, 702, 703, 704, 712, 713, 715, 716, 720, 722, 723, 726, 729, 745, 769, 775, 777, 779, 784, 785, 787, 788, 789, 790, 792, 798, 799, 833, 853, 854, 857, 878], "continuum": [4, 854, 878], "span": [4, 81, 118, 136, 140, 141, 149, 150, 151, 165, 166, 168, 178, 191, 198, 202, 212, 213, 214, 216, 217, 238, 240, 257, 263, 264, 265, 266, 268, 358, 477, 478, 554, 557, 559, 560, 573, 574, 577, 578, 612, 689, 697, 699, 701, 715, 760, 762, 799, 805, 853, 854, 855, 860, 866, 878], "85": [4, 13, 19, 35, 37, 47, 77, 78, 89, 102, 108, 111, 113, 137, 140, 145, 146, 160, 169, 176, 182, 194, 195, 202, 208, 225, 226, 229, 230, 878], "increas": [4, 11, 32, 55, 69, 111, 151, 172, 201, 204, 205, 210, 211, 222, 227, 230, 240, 261, 262, 263, 264, 265, 266, 270, 271, 273, 274, 277, 278, 279, 450, 477, 478, 488, 557, 576, 593, 684, 685, 687, 688, 697, 700, 713, 723, 724, 725, 726, 727, 728, 729, 745, 749, 775, 792, 798, 854, 860, 878], "step": [4, 8, 11, 15, 18, 24, 41, 46, 59, 63, 67, 93, 98, 102, 108, 111, 119, 126, 134, 140, 142, 151, 152, 158, 161, 166, 167, 168, 170, 172, 190, 191, 195, 198, 199, 200, 201, 204, 206, 207, 209, 211, 214, 225, 226, 240, 243, 263, 264, 265, 266, 268, 270, 271, 274, 277, 278, 279, 288, 290, 340, 341, 342, 346, 409, 415, 424, 427, 450, 451, 467, 468, 475, 477, 478, 494, 552, 557, 567, 571, 576, 583, 647, 664, 684, 685, 687, 688, 689, 712, 720, 735, 745, 761, 769, 798, 809, 837, 838, 843, 845, 851, 853, 854, 859, 860, 864, 866, 878], "other": [4, 43, 61, 69, 82, 83, 111, 126, 141, 143, 145, 150, 151, 155, 156, 160, 166, 168, 169, 170, 172, 175, 177, 180, 181, 188, 189, 191, 195, 198, 199, 202, 203, 204, 205, 206, 207, 208, 214, 216, 217, 221, 222, 225, 229, 238, 240, 255, 257, 258, 259, 260, 261, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 276, 277, 278, 279, 282, 311, 323, 324, 352, 359, 364, 415, 417, 426, 428, 430, 432, 433, 438, 442, 454, 458, 459, 472, 474, 475, 477, 478, 489, 524, 535, 546, 556, 557, 576, 585, 599, 603, 605, 616, 619, 625, 628, 634, 636, 646, 657, 662, 668, 683, 697, 698, 699, 700, 701, 745, 758, 766, 773, 775, 777, 788, 792, 798, 803, 818, 826, 831, 833, 842, 843, 844, 845, 849, 853, 854, 855, 857, 859, 863, 866, 878], "word": [4, 100, 143, 151, 155, 168, 175, 195, 201, 205, 206, 209, 225, 226, 240, 243, 392, 415, 726, 729, 745, 758, 833, 837, 854, 860, 866], "g": [4, 8, 28, 31, 37, 41, 42, 44, 67, 68, 69, 79, 80, 83, 95, 100, 111, 113, 114, 119, 125, 126, 134, 137, 140, 141, 143, 150, 151, 155, 160, 161, 162, 166, 168, 169, 170, 180, 188, 189, 190, 194, 195, 198, 200, 201, 202, 203, 204, 205, 207, 214, 215, 220, 221, 225, 226, 230, 233, 235, 239, 240, 243, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 296, 297, 298, 302, 309, 311, 312, 317, 326, 328, 337, 339, 350, 353, 357, 358, 364, 368, 369, 370, 379, 384, 387, 392, 401, 402, 409, 411, 412, 415, 416, 418, 419, 420, 423, 424, 425, 428, 429, 430, 433, 438, 441, 442, 443, 445, 447, 448, 450, 451, 452, 453, 459, 465, 468, 471, 472, 474, 475, 476, 477, 478, 479, 490, 512, 514, 518, 519, 520, 524, 530, 531, 532, 535, 539, 540, 541, 543, 556, 557, 559, 560, 567, 568, 571, 572, 573, 574, 576, 579, 582, 585, 591, 592, 593, 600, 605, 612, 619, 620, 625, 632, 633, 634, 635, 636, 637, 643, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 665, 668, 682, 683, 684, 685, 686, 687, 688, 692, 693, 697, 699, 700, 701, 705, 706, 707, 708, 710, 726, 728, 729, 745, 750, 758, 761, 762, 763, 768, 769, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 788, 789, 791, 792, 796, 797, 798, 799, 800, 803, 805, 807, 808, 811, 818, 823, 826, 833, 835, 837, 838, 841, 843, 849, 853, 854, 857, 859, 860, 863, 864, 866, 878], "easi": [4, 132, 162, 166, 182, 188, 191, 199, 204, 207, 214, 216, 240, 273, 360, 415, 833, 835, 837, 843, 854, 855, 857, 860], "identifi": [4, 12, 13, 27, 32, 33, 34, 76, 78, 84, 134, 137, 146, 151, 169, 191, 195, 198, 204, 206, 222, 225, 243, 263, 264, 265, 266, 268, 270, 271, 274, 277, 278, 279, 311, 327, 334, 372, 412, 419, 461, 477, 478, 479, 483, 557, 561, 565, 571, 584, 594, 745, 754, 765, 803, 807, 808, 837, 853, 854, 857, 860, 863, 878], "while": [4, 10, 26, 45, 73, 75, 82, 86, 106, 126, 134, 137, 141, 142, 143, 144, 150, 151, 158, 160, 166, 172, 178, 179, 188, 198, 199, 204, 206, 207, 209, 216, 222, 225, 229, 233, 240, 243, 261, 262, 263, 264, 265, 266, 270, 271, 273, 274, 277, 278, 279, 296, 297, 353, 357, 358, 368, 369, 370, 409, 415, 416, 417, 426, 443, 452, 453, 472, 474, 475, 477, 478, 505, 527, 535, 557, 558, 569, 570, 573, 574, 577, 697, 700, 724, 725, 727, 728, 769, 775, 779, 783, 785, 792, 798, 801, 811, 833, 835, 837, 840, 854, 859, 860, 866, 878], "low": [4, 5, 11, 19, 45, 47, 59, 69, 73, 78, 80, 81, 82, 83, 93, 109, 113, 134, 141, 143, 151, 166, 167, 180, 183, 188, 191, 195, 199, 202, 204, 209, 210, 211, 225, 227, 229, 234, 243, 255, 258, 261, 262, 263, 264, 265, 266, 268, 270, 271, 274, 277, 278, 279, 304, 353, 358, 411, 417, 420, 422, 444, 445, 447, 477, 478, 485, 488, 501, 524, 557, 562, 565, 569, 570, 573, 574, 576, 577, 578, 580, 581, 589, 650, 654, 659, 690, 691, 697, 700, 725, 728, 745, 775, 798, 833, 853, 854, 857, 859, 860, 878], "hard": [4, 113, 134, 142, 204, 222, 362, 476, 477, 478, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 517, 837, 854, 855, 857, 878], "extens": [4, 12, 43, 44, 136, 140, 151, 158, 160, 170, 189, 190, 195, 215, 216, 255, 263, 264, 265, 266, 296, 297, 329, 330, 336, 416, 439, 440, 442, 477, 478, 484, 491, 494, 503, 585, 603, 612, 616, 698, 717, 745, 823, 840, 841, 853, 854, 860, 866, 878], "veri": [4, 10, 44, 45, 50, 60, 63, 68, 69, 78, 79, 82, 113, 132, 134, 141, 144, 151, 157, 160, 168, 172, 181, 199, 201, 202, 203, 204, 205, 206, 209, 222, 225, 234, 240, 296, 319, 433, 477, 683, 833, 837, 840, 855, 860], "ll": [4, 7, 10, 19, 26, 34, 54, 59, 69, 78, 113, 114, 115, 116, 119, 126, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 156, 158, 160, 162, 166, 167, 168, 170, 171, 172, 179, 180, 181, 190, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 215, 216, 217, 220, 222, 226, 229, 235, 238, 239, 837, 845, 857], "begin": [4, 19, 72, 92, 134, 151, 156, 166, 168, 169, 171, 172, 175, 188, 191, 194, 198, 200, 201, 202, 203, 204, 205, 206, 211, 216, 220, 240, 257, 258, 263, 264, 265, 266, 270, 271, 273, 274, 277, 278, 279, 282, 286, 358, 438, 451, 477, 478, 503, 517, 530, 540, 541, 557, 560, 573, 574, 576, 577, 580, 585, 615, 616, 664, 697, 700, 701, 710, 778, 789, 790, 792, 799, 805, 831, 837, 842, 860, 863, 878], "littl": [4, 160, 171, 188, 201, 202, 204, 205, 222, 240, 840, 860], "you": [4, 24, 27, 28, 32, 41, 43, 47, 50, 59, 60, 77, 78, 81, 82, 87, 102, 108, 112, 113, 114, 115, 116, 118, 119, 120, 126, 132, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 158, 159, 160, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 177, 178, 180, 181, 182, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 204, 205, 206, 207, 209, 210, 214, 215, 216, 217, 220, 222, 225, 227, 228, 230, 233, 235, 238, 239, 240, 243, 255, 256, 257, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 276, 277, 278, 279, 280, 282, 288, 290, 296, 297, 312, 317, 327, 328, 329, 352, 353, 357, 358, 361, 362, 368, 369, 370, 375, 387, 409, 415, 416, 426, 433, 436, 442, 444, 450, 452, 453, 461, 468, 472, 474, 475, 477, 478, 479, 489, 493, 500, 522, 524, 535, 556, 557, 573, 576, 578, 586, 603, 609, 646, 661, 677, 692, 697, 699, 700, 701, 743, 746, 748, 761, 762, 766, 768, 775, 776, 780, 785, 788, 790, 791, 792, 798, 803, 815, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 848, 852, 853, 854, 855, 856, 857, 858, 860, 861, 863, 864, 878], "first": [4, 5, 7, 10, 11, 16, 19, 21, 28, 29, 32, 38, 39, 41, 42, 43, 44, 45, 47, 63, 69, 70, 79, 82, 83, 86, 87, 89, 93, 94, 102, 103, 107, 108, 111, 112, 113, 114, 119, 126, 130, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 145, 146, 149, 150, 151, 156, 157, 159, 160, 161, 162, 166, 167, 168, 169, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 184, 188, 190, 191, 194, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 221, 222, 225, 226, 227, 229, 230, 233, 234, 235, 238, 239, 240, 243, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 282, 283, 284, 287, 295, 296, 297, 301, 316, 321, 322, 353, 361, 362, 368, 374, 384, 409, 415, 416, 424, 432, 433, 434, 437, 438, 440, 441, 443, 447, 448, 449, 450, 451, 457, 459, 467, 476, 477, 478, 497, 500, 501, 512, 518, 519, 523, 527, 533, 534, 552, 556, 557, 558, 560, 562, 565, 567, 571, 594, 599, 611, 612, 615, 619, 630, 642, 647, 649, 650, 653, 655, 656, 671, 672, 673, 678, 682, 683, 684, 685, 687, 688, 689, 691, 697, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 732, 735, 745, 750, 753, 761, 769, 773, 775, 776, 777, 778, 781, 782, 784, 788, 789, 790, 792, 797, 798, 799, 800, 803, 805, 807, 808, 823, 824, 833, 835, 836, 845, 853, 854, 857, 860, 863, 864, 878], "limo_epoch": 4, "column": [4, 10, 31, 93, 94, 100, 111, 140, 141, 143, 145, 151, 166, 172, 175, 188, 191, 195, 206, 209, 210, 214, 225, 226, 257, 258, 260, 263, 264, 265, 266, 268, 270, 271, 272, 274, 277, 278, 279, 298, 326, 368, 409, 416, 433, 437, 438, 450, 451, 467, 477, 478, 518, 536, 539, 552, 556, 557, 558, 603, 610, 611, 612, 619, 682, 683, 697, 699, 700, 701, 745, 777, 778, 784, 785, 788, 796, 797, 800, 805, 823, 833, 860, 863, 878], "1055": [4, 13], "note": [4, 13, 16, 18, 21, 26, 47, 69, 73, 78, 82, 103, 108, 111, 113, 128, 134, 135, 136, 140, 141, 142, 143, 145, 149, 151, 156, 158, 160, 162, 166, 167, 168, 169, 170, 171, 172, 180, 181, 182, 189, 190, 194, 198, 199, 200, 201, 202, 203, 204, 206, 208, 209, 211, 214, 215, 216, 220, 221, 229, 230, 233, 234, 235, 240, 243, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 287, 292, 296, 297, 299, 302, 303, 304, 305, 306, 308, 309, 311, 312, 313, 316, 317, 318, 319, 320, 321, 323, 327, 328, 329, 331, 333, 334, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 357, 358, 359, 360, 363, 364, 366, 368, 371, 372, 379, 384, 385, 386, 387, 388, 390, 401, 402, 408, 409, 411, 412, 413, 415, 416, 417, 418, 419, 421, 425, 426, 428, 429, 430, 431, 432, 433, 434, 436, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 459, 460, 462, 465, 466, 467, 468, 470, 471, 476, 477, 478, 479, 485, 489, 490, 492, 493, 494, 497, 499, 500, 501, 503, 505, 506, 510, 512, 513, 514, 515, 517, 519, 520, 521, 522, 524, 525, 526, 527, 528, 530, 531, 532, 535, 537, 539, 540, 541, 543, 544, 556, 557, 558, 559, 560, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 579, 582, 585, 586, 591, 592, 593, 594, 595, 599, 600, 603, 605, 607, 608, 609, 611, 612, 615, 616, 617, 619, 620, 622, 625, 631, 633, 634, 636, 637, 639, 642, 644, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 674, 677, 678, 679, 680, 683, 684, 685, 686, 687, 688, 690, 692, 697, 698, 699, 700, 701, 705, 706, 707, 708, 709, 710, 711, 713, 715, 716, 719, 723, 724, 725, 727, 728, 729, 730, 732, 733, 734, 735, 739, 740, 743, 745, 746, 748, 760, 761, 762, 763, 764, 766, 768, 769, 770, 772, 773, 775, 776, 777, 778, 779, 781, 782, 784, 785, 786, 788, 790, 791, 792, 793, 794, 796, 797, 798, 799, 800, 801, 802, 803, 805, 806, 807, 808, 809, 810, 811, 814, 815, 819, 823, 824, 825, 826, 827, 828, 833, 835, 837, 838, 844, 853, 857, 859, 860, 862, 878], "process": [4, 7, 27, 28, 32, 34, 45, 51, 59, 67, 68, 79, 83, 87, 100, 121, 134, 135, 142, 143, 144, 149, 151, 152, 155, 156, 160, 161, 162, 166, 172, 177, 182, 184, 188, 199, 200, 201, 202, 204, 205, 206, 207, 209, 211, 214, 216, 220, 225, 226, 227, 235, 240, 243, 255, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 273, 274, 277, 278, 279, 286, 288, 290, 296, 297, 299, 353, 357, 358, 361, 368, 369, 370, 384, 392, 409, 411, 416, 417, 422, 426, 432, 433, 448, 452, 453, 472, 474, 475, 477, 478, 479, 488, 497, 530, 535, 557, 558, 567, 576, 585, 586, 593, 600, 602, 615, 646, 650, 670, 673, 684, 685, 687, 688, 697, 699, 700, 701, 724, 775, 779, 785, 798, 799, 835, 844, 845, 849, 852, 853, 854, 857, 859, 860, 863, 864, 866, 867, 868, 878], "epochsarrai": [4, 188, 220, 258, 263, 266, 360, 478, 610, 868, 878], "readi": [4, 5, 11, 13, 14, 15, 16, 18, 19, 27, 28, 29, 32, 33, 34, 42, 45, 46, 49, 61, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 82, 83, 87, 91, 92, 95, 96, 98, 99, 102, 103, 106, 108, 109, 110, 112, 113, 114, 116, 117, 120, 121, 122, 123, 128, 129, 131, 132, 134, 135, 141, 144, 146, 150, 151, 152, 156, 158, 159, 161, 162, 166, 167, 168, 169, 171, 172, 177, 180, 182, 183, 190, 195, 198, 202, 203, 204, 205, 206, 207, 208, 209, 214, 217, 220, 221, 222, 227, 228, 229, 230, 233, 235, 239, 265, 268, 274, 477, 586, 615, 625, 745, 764, 769, 837, 854], "good": [4, 5, 21, 31, 49, 69, 70, 72, 75, 80, 81, 82, 89, 92, 116, 122, 126, 137, 140, 141, 143, 146, 151, 157, 166, 167, 168, 169, 171, 177, 184, 191, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 220, 222, 227, 233, 235, 240, 243, 258, 261, 263, 264, 265, 266, 268, 296, 297, 299, 326, 343, 353, 357, 358, 368, 369, 370, 409, 411, 416, 417, 422, 425, 452, 453, 466, 468, 472, 474, 475, 477, 478, 517, 535, 548, 551, 554, 556, 557, 559, 562, 564, 567, 571, 572, 575, 576, 593, 600, 608, 619, 625, 665, 683, 692, 697, 699, 700, 701, 705, 706, 707, 708, 710, 725, 727, 728, 773, 775, 776, 779, 785, 799, 806, 836, 837, 844, 848, 854, 857, 858, 859, 860, 861, 878], "299944": 4, "499907": 4, "213": [4, 35, 114, 129, 169, 222, 225, 230, 237], "7": [4, 5, 8, 9, 10, 11, 12, 13, 16, 19, 20, 21, 26, 28, 30, 32, 33, 34, 35, 39, 40, 41, 42, 44, 45, 46, 47, 49, 55, 56, 59, 60, 61, 64, 67, 69, 70, 72, 73, 75, 79, 80, 81, 82, 84, 90, 93, 96, 102, 103, 106, 107, 108, 109, 111, 112, 113, 114, 119, 123, 126, 127, 130, 134, 136, 137, 140, 142, 143, 144, 145, 146, 149, 151, 156, 158, 159, 160, 166, 169, 170, 171, 172, 176, 179, 180, 181, 182, 183, 184, 185, 187, 191, 194, 195, 198, 200, 201, 202, 204, 206, 207, 208, 209, 210, 214, 215, 216, 220, 221, 225, 226, 227, 228, 229, 230, 233, 234, 235, 238, 239, 240, 243, 254, 261, 262, 263, 264, 265, 266, 270, 271, 274, 276, 277, 278, 279, 313, 334, 353, 379, 387, 401, 408, 420, 422, 450, 469, 474, 477, 478, 557, 562, 576, 583, 585, 589, 603, 637, 638, 663, 677, 678, 679, 697, 700, 701, 703, 706, 713, 723, 724, 725, 727, 728, 745, 776, 781, 790, 803, 804, 808, 835, 836, 843, 852, 854, 860, 863], "A": [4, 8, 9, 11, 16, 19, 21, 26, 31, 35, 42, 43, 44, 69, 74, 77, 82, 100, 102, 112, 119, 120, 125, 126, 127, 131, 132, 135, 137, 142, 143, 151, 155, 157, 160, 161, 162, 166, 168, 169, 171, 172, 175, 180, 188, 189, 195, 198, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 214, 216, 217, 222, 225, 226, 227, 229, 233, 234, 235, 238, 243, 254, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 287, 289, 296, 303, 309, 311, 314, 315, 316, 319, 320, 323, 339, 353, 356, 359, 364, 365, 367, 369, 379, 386, 387, 390, 392, 401, 402, 411, 413, 417, 426, 431, 433, 434, 445, 446, 447, 448, 452, 460, 461, 462, 466, 469, 472, 477, 478, 479, 484, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 510, 511, 518, 524, 525, 531, 539, 547, 549, 550, 552, 555, 556, 557, 558, 565, 571, 575, 576, 583, 586, 592, 594, 600, 602, 605, 612, 633, 639, 642, 646, 649, 650, 651, 657, 660, 661, 663, 674, 677, 678, 680, 681, 683, 684, 685, 686, 687, 688, 689, 692, 697, 698, 699, 700, 701, 702, 703, 704, 711, 713, 716, 723, 724, 725, 726, 727, 728, 729, 732, 735, 745, 748, 758, 760, 761, 763, 765, 768, 769, 771, 775, 781, 782, 783, 785, 786, 798, 799, 801, 803, 806, 807, 808, 833, 835, 852, 853, 854, 855, 859, 860, 863, 865, 866, 876, 878], "524": [4, 230], "b": [4, 8, 10, 12, 22, 28, 37, 38, 44, 96, 109, 110, 126, 127, 134, 137, 201, 204, 205, 210, 215, 217, 222, 225, 226, 229, 233, 234, 235, 240, 243, 255, 258, 263, 264, 265, 266, 270, 271, 273, 274, 275, 277, 278, 279, 286, 353, 359, 379, 401, 402, 430, 444, 446, 477, 478, 540, 541, 573, 574, 615, 616, 650, 678, 680, 683, 691, 697, 700, 710, 724, 725, 727, 728, 745, 769, 775, 798, 805, 837, 854, 857, 860, 878], "531": [4, 135, 139], "visualis": [4, 27, 29, 30, 48, 49, 50, 54, 55, 76, 84, 100, 165, 176, 210, 231, 232, 257, 263, 265, 266, 268, 317, 323, 352, 478, 505, 588, 592, 608, 688], "distribut": [4, 19, 22, 26, 46, 48, 54, 55, 59, 60, 71, 115, 145, 150, 155, 162, 165, 166, 177, 186, 187, 191, 204, 206, 225, 227, 230, 233, 234, 239, 240, 243, 260, 261, 263, 264, 265, 266, 267, 268, 272, 274, 363, 474, 477, 478, 523, 524, 535, 565, 592, 606, 615, 617, 630, 645, 649, 679, 682, 684, 685, 687, 688, 699, 701, 745, 754, 761, 773, 806, 813, 833, 842, 843, 844, 853, 854, 857, 859, 860, 878], "should": [4, 5, 16, 19, 40, 41, 63, 69, 81, 87, 89, 119, 120, 132, 134, 135, 136, 140, 141, 142, 144, 151, 156, 157, 158, 160, 161, 165, 167, 172, 180, 182, 184, 190, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 214, 215, 216, 217, 220, 229, 230, 238, 240, 243, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 302, 303, 304, 305, 306, 307, 308, 311, 313, 315, 316, 327, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 381, 382, 383, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 414, 415, 416, 419, 420, 421, 422, 425, 426, 428, 430, 434, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 459, 460, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 512, 513, 514, 515, 516, 517, 519, 520, 521, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 550, 553, 556, 557, 559, 560, 562, 563, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 580, 581, 582, 583, 585, 586, 588, 589, 592, 593, 594, 595, 597, 598, 599, 600, 603, 604, 605, 606, 607, 608, 609, 611, 612, 613, 615, 616, 617, 619, 620, 621, 622, 623, 625, 627, 628, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 642, 645, 646, 647, 648, 649, 650, 651, 653, 654, 655, 656, 657, 659, 661, 662, 663, 665, 667, 668, 669, 670, 671, 672, 673, 674, 679, 684, 685, 686, 687, 688, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 715, 716, 719, 720, 724, 725, 727, 728, 729, 730, 732, 733, 734, 735, 740, 741, 744, 745, 747, 749, 753, 761, 762, 763, 764, 768, 769, 770, 772, 773, 775, 776, 777, 778, 779, 780, 781, 784, 785, 788, 789, 790, 791, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 814, 815, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 835, 836, 837, 840, 841, 842, 843, 848, 853, 854, 859, 860, 863, 866, 878], "appear": [4, 93, 100, 134, 140, 144, 158, 168, 172, 180, 183, 191, 198, 201, 202, 207, 216, 255, 263, 264, 265, 266, 273, 430, 477, 478, 488, 512, 763, 801, 833, 837, 854, 860, 863, 878], "clearli": [4, 21, 126, 134, 144, 152, 166, 191, 202, 204, 206, 208], "group": [4, 27, 69, 108, 111, 121, 129, 134, 137, 140, 142, 143, 145, 151, 155, 160, 161, 167, 172, 178, 201, 217, 222, 225, 226, 229, 230, 234, 235, 243, 255, 263, 264, 265, 266, 268, 273, 296, 297, 313, 323, 426, 435, 436, 438, 469, 477, 478, 493, 557, 571, 646, 662, 679, 685, 688, 750, 775, 776, 781, 798, 801, 833, 837, 844, 860, 868, 878], "order": [4, 16, 18, 19, 27, 31, 34, 38, 47, 68, 69, 73, 81, 83, 87, 91, 93, 106, 110, 111, 113, 116, 120, 122, 127, 136, 143, 144, 145, 149, 156, 160, 161, 162, 165, 166, 169, 172, 177, 188, 190, 194, 198, 199, 200, 203, 204, 205, 206, 208, 209, 214, 217, 222, 230, 235, 243, 255, 256, 258, 260, 263, 264, 265, 266, 267, 268, 269, 272, 273, 287, 301, 316, 323, 340, 342, 346, 353, 360, 362, 366, 409, 411, 415, 416, 420, 430, 434, 438, 444, 445, 446, 447, 448, 453, 462, 477, 478, 484, 485, 492, 523, 530, 531, 533, 534, 548, 549, 550, 556, 557, 565, 567, 568, 569, 570, 576, 585, 599, 631, 642, 674, 679, 693, 697, 698, 699, 700, 701, 709, 710, 714, 730, 732, 735, 742, 750, 762, 775, 776, 777, 781, 784, 786, 788, 792, 793, 797, 798, 800, 801, 805, 806, 807, 835, 837, 853, 857, 860, 863, 878], "suptitl": [4, 18, 22, 37, 42, 45, 69, 72, 79, 86, 89, 102, 108, 111, 115, 119, 132, 134, 141, 144, 146, 151, 160, 176, 191, 194, 199, 201, 202, 204, 205, 206, 207, 209, 210, 225, 878], "As": [4, 38, 43, 69, 87, 93, 111, 134, 136, 140, 143, 145, 149, 150, 151, 157, 160, 166, 167, 168, 169, 170, 172, 175, 180, 188, 191, 194, 195, 198, 199, 200, 201, 203, 204, 206, 207, 209, 214, 215, 216, 217, 220, 227, 229, 235, 238, 240, 245, 417, 438, 494, 505, 571, 683, 692, 745, 769, 853, 859, 860, 863, 866, 878], "seen": [4, 12, 27, 73, 140, 143, 144, 146, 150, 151, 156, 169, 170, 195, 198, 202, 205, 206, 210, 211, 214, 217, 296, 416, 649, 650, 725, 728, 837, 860, 861, 863], "abov": [4, 21, 42, 43, 45, 49, 60, 69, 73, 74, 81, 87, 113, 115, 134, 140, 142, 144, 150, 151, 156, 160, 161, 166, 167, 168, 170, 171, 172, 175, 188, 190, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 214, 215, 217, 220, 222, 229, 230, 240, 243, 257, 260, 263, 264, 265, 266, 268, 276, 352, 409, 411, 416, 420, 433, 439, 440, 442, 445, 447, 477, 478, 479, 485, 505, 556, 557, 559, 576, 584, 594, 684, 685, 687, 688, 697, 699, 701, 725, 728, 735, 745, 769, 776, 777, 784, 788, 790, 800, 801, 805, 807, 833, 836, 837, 842, 853, 857, 860, 861, 864], "These": [4, 27, 45, 54, 55, 60, 69, 93, 134, 137, 138, 144, 145, 147, 151, 153, 155, 158, 160, 162, 163, 165, 166, 167, 170, 172, 173, 178, 180, 186, 188, 189, 190, 192, 194, 195, 196, 200, 201, 204, 208, 210, 212, 217, 218, 222, 223, 225, 226, 231, 236, 240, 241, 254, 263, 264, 265, 266, 268, 280, 304, 305, 324, 353, 357, 358, 359, 428, 477, 478, 521, 557, 567, 576, 585, 616, 654, 659, 683, 697, 699, 700, 701, 833, 837, 844, 853, 854, 857, 859, 860, 861, 863, 866, 878], "easili": [4, 43, 44, 100, 140, 144, 149, 160, 168, 170, 188, 190, 198, 201, 204, 206, 207, 214, 215, 216, 217, 233, 240, 436, 477, 478, 576, 683, 837, 844, 853, 860, 878], "access": [4, 52, 100, 131, 134, 158, 166, 168, 169, 175, 205, 214, 216, 217, 238, 243, 256, 258, 263, 264, 267, 276, 477, 478, 609, 611, 699, 700, 701, 726, 729, 837, 843, 855, 859, 863, 878], "call": [4, 18, 31, 43, 44, 86, 87, 93, 116, 127, 134, 140, 142, 144, 145, 146, 149, 150, 151, 155, 156, 158, 160, 161, 166, 168, 170, 171, 172, 175, 178, 182, 190, 195, 198, 199, 201, 202, 204, 205, 209, 211, 214, 215, 216, 217, 225, 227, 229, 230, 235, 239, 240, 255, 261, 262, 263, 264, 265, 266, 269, 270, 271, 273, 274, 275, 277, 278, 279, 281, 307, 311, 353, 354, 356, 358, 359, 364, 412, 415, 419, 422, 425, 426, 430, 442, 444, 452, 465, 467, 477, 478, 485, 492, 505, 516, 519, 520, 524, 525, 526, 527, 528, 530, 531, 540, 541, 557, 562, 567, 568, 569, 570, 573, 575, 576, 585, 600, 636, 645, 648, 649, 650, 662, 667, 671, 684, 685, 686, 687, 688, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 713, 715, 716, 723, 724, 725, 726, 727, 728, 742, 743, 745, 762, 769, 775, 776, 777, 780, 783, 784, 799, 807, 833, 835, 836, 837, 841, 845, 855, 857, 859, 860, 863, 864, 868, 878], "shown": [4, 32, 52, 69, 79, 82, 93, 100, 117, 119, 126, 134, 136, 142, 149, 150, 151, 156, 158, 162, 166, 172, 180, 182, 201, 205, 210, 214, 215, 217, 230, 260, 261, 262, 263, 264, 265, 266, 270, 271, 272, 274, 277, 278, 279, 311, 409, 416, 468, 477, 478, 508, 535, 556, 557, 571, 697, 699, 700, 701, 745, 761, 762, 763, 769, 770, 772, 773, 775, 777, 779, 781, 782, 783, 784, 786, 788, 795, 797, 798, 799, 800, 801, 803, 804, 805, 806, 807, 808, 815, 860, 861, 863, 878], "below": [4, 10, 19, 43, 47, 74, 111, 113, 126, 134, 140, 151, 155, 160, 161, 166, 168, 170, 172, 190, 194, 201, 202, 204, 205, 206, 207, 209, 210, 211, 216, 225, 230, 233, 235, 238, 240, 243, 258, 260, 261, 262, 263, 264, 265, 266, 270, 271, 274, 275, 276, 277, 278, 279, 305, 311, 359, 411, 420, 428, 436, 445, 447, 468, 477, 478, 494, 524, 557, 559, 565, 567, 649, 683, 684, 685, 687, 688, 697, 700, 745, 764, 776, 781, 785, 788, 790, 803, 808, 809, 833, 837, 843, 853, 857, 859, 860, 864, 868, 878], "also": [4, 10, 19, 21, 27, 28, 29, 30, 32, 38, 39, 41, 42, 43, 45, 47, 60, 62, 68, 69, 70, 77, 78, 79, 80, 82, 83, 93, 94, 100, 103, 106, 108, 111, 113, 115, 116, 119, 125, 126, 134, 135, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 155, 156, 157, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 180, 181, 182, 183, 184, 188, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 215, 216, 217, 220, 222, 225, 226, 227, 229, 230, 233, 235, 238, 239, 240, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 296, 297, 303, 304, 305, 309, 311, 313, 321, 322, 326, 328, 329, 339, 346, 353, 358, 359, 365, 368, 371, 379, 386, 409, 411, 416, 421, 425, 428, 430, 433, 444, 445, 447, 448, 449, 450, 452, 459, 462, 469, 472, 474, 475, 477, 478, 485, 489, 497, 501, 516, 519, 520, 530, 531, 532, 535, 554, 556, 557, 559, 560, 566, 567, 569, 571, 572, 573, 574, 577, 578, 579, 580, 582, 591, 593, 599, 600, 607, 615, 632, 633, 636, 642, 645, 646, 653, 662, 665, 683, 684, 689, 692, 697, 699, 700, 701, 705, 706, 707, 708, 710, 725, 728, 734, 735, 743, 745, 761, 762, 768, 769, 770, 773, 775, 776, 777, 779, 781, 782, 784, 785, 787, 788, 789, 795, 796, 797, 798, 799, 800, 801, 803, 805, 807, 809, 811, 818, 833, 835, 837, 840, 841, 842, 843, 844, 845, 852, 853, 854, 855, 857, 858, 859, 860, 861, 862, 863, 866, 868, 878], "conveni": [4, 11, 45, 69, 74, 134, 137, 142, 151, 158, 161, 166, 169, 171, 172, 181, 195, 198, 201, 205, 206, 215, 220, 225, 226, 227, 230, 233, 234, 235, 239, 243, 263, 264, 265, 266, 267, 273, 476, 477, 478, 483, 508, 530, 557, 565, 573, 574, 639, 642, 644, 687, 688, 697, 699, 700, 701, 758, 835, 837, 841, 853, 854, 860, 878], "head": [4, 5, 10, 22, 26, 41, 43, 45, 50, 69, 70, 77, 78, 79, 100, 108, 111, 114, 117, 119, 124, 126, 134, 135, 136, 143, 145, 150, 151, 157, 159, 163, 164, 165, 166, 169, 170, 172, 175, 176, 177, 178, 180, 181, 183, 184, 185, 188, 190, 191, 198, 199, 204, 206, 207, 209, 211, 212, 213, 214, 226, 240, 243, 260, 261, 263, 264, 265, 266, 267, 268, 272, 273, 276, 301, 303, 304, 305, 306, 307, 308, 311, 314, 315, 323, 324, 327, 329, 334, 340, 341, 342, 343, 344, 346, 348, 349, 350, 351, 353, 359, 360, 362, 363, 364, 365, 372, 385, 388, 409, 416, 428, 430, 452, 459, 460, 468, 469, 470, 471, 477, 478, 482, 484, 488, 489, 490, 496, 501, 503, 507, 509, 514, 515, 516, 519, 520, 521, 556, 557, 561, 564, 566, 567, 568, 571, 576, 582, 585, 586, 605, 610, 611, 614, 617, 628, 638, 645, 646, 648, 649, 650, 654, 659, 662, 665, 692, 697, 699, 701, 731, 732, 734, 745, 761, 762, 763, 768, 769, 773, 777, 779, 780, 781, 782, 784, 785, 787, 788, 795, 797, 799, 800, 801, 805, 807, 813, 824, 825, 826, 831, 833, 837, 854, 863, 866, 867, 868, 878], "491210": 4, "235572": 4, "043707": 4, "642398": 4, "659978": 4, "now": [4, 19, 24, 26, 32, 41, 45, 50, 69, 71, 73, 83, 86, 87, 108, 110, 111, 112, 119, 126, 133, 134, 135, 136, 137, 140, 141, 144, 145, 146, 151, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 172, 176, 178, 179, 180, 182, 183, 194, 198, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 214, 216, 222, 227, 229, 230, 233, 234, 235, 239, 240, 261, 263, 264, 265, 266, 319, 462, 477, 478, 642, 746, 766, 773, 837, 860, 863, 878], "let": [4, 10, 18, 21, 26, 32, 47, 55, 69, 70, 72, 86, 108, 112, 120, 126, 134, 135, 136, 140, 141, 142, 144, 146, 150, 151, 152, 156, 158, 159, 160, 162, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 189, 195, 198, 199, 200, 201, 202, 203, 204, 206, 208, 209, 211, 214, 222, 225, 229, 230, 233, 234, 235, 239, 240, 510, 713, 723, 746, 837, 840, 878], "closer": [4, 24, 41, 108, 141, 158, 209, 225, 260, 263, 264, 265, 266, 272, 409, 416, 477, 478, 556, 557, 571, 646, 697, 699, 701, 762, 777, 784, 788, 797, 800, 805, 807], "want": [4, 41, 50, 78, 82, 93, 111, 114, 119, 126, 134, 135, 136, 140, 141, 142, 143, 144, 145, 149, 150, 151, 158, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 178, 180, 189, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 214, 215, 216, 220, 221, 225, 227, 229, 230, 233, 234, 240, 255, 256, 263, 264, 265, 266, 270, 274, 278, 317, 375, 433, 438, 477, 478, 557, 573, 768, 798, 803, 815, 836, 837, 840, 844, 845, 857, 858, 859, 860, 863, 864], "includ": [4, 7, 28, 37, 41, 68, 69, 81, 85, 95, 96, 98, 102, 103, 106, 109, 112, 113, 122, 131, 134, 135, 137, 140, 142, 143, 144, 146, 149, 151, 152, 155, 159, 160, 162, 166, 167, 168, 169, 170, 172, 176, 180, 182, 185, 188, 189, 190, 195, 198, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 214, 216, 217, 220, 225, 227, 228, 229, 235, 243, 249, 254, 256, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 295, 297, 309, 312, 313, 317, 326, 328, 353, 358, 359, 366, 368, 411, 416, 425, 430, 433, 437, 438, 447, 448, 450, 462, 463, 476, 477, 478, 485, 488, 490, 492, 493, 494, 499, 503, 518, 520, 525, 527, 535, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 564, 565, 567, 568, 572, 573, 574, 576, 579, 582, 584, 585, 591, 593, 596, 600, 609, 611, 612, 615, 616, 617, 665, 682, 683, 692, 696, 697, 699, 700, 701, 705, 706, 707, 708, 710, 714, 726, 728, 729, 735, 741, 745, 769, 775, 776, 777, 778, 779, 781, 782, 789, 790, 794, 798, 799, 805, 823, 833, 835, 837, 839, 840, 841, 842, 843, 844, 845, 849, 853, 854, 855, 856, 857, 859, 860, 861, 862, 863, 864, 866, 878], "tabl": [4, 41, 122, 134, 143, 144, 171, 172, 185, 189, 201, 214, 215, 238, 263, 264, 265, 266, 268, 270, 271, 273, 274, 276, 277, 278, 279, 461, 462, 477, 478, 535, 646, 745, 764, 769, 776, 803, 808, 809, 810, 814, 828, 833, 860, 863, 864, 878], "epochs_summari": 4, "describ": [4, 13, 16, 73, 98, 112, 116, 149, 151, 156, 158, 162, 165, 166, 168, 169, 170, 171, 172, 188, 194, 198, 200, 205, 206, 207, 209, 210, 215, 216, 222, 223, 226, 231, 240, 243, 265, 266, 296, 352, 353, 359, 409, 417, 430, 433, 441, 477, 478, 556, 557, 558, 585, 621, 647, 667, 668, 669, 670, 671, 672, 673, 711, 713, 716, 723, 727, 785, 791, 833, 835, 853, 857, 859, 860, 863, 866, 878], "round": [4, 37, 108, 140, 145, 149, 160, 168, 172, 194, 201, 202, 204, 205, 211, 214, 222, 240, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 438, 477, 478, 697, 700, 878], "count": [4, 22, 69, 71, 140, 171, 210, 216, 225, 229, 233, 235, 258, 263, 264, 265, 266, 296, 297, 353, 357, 358, 367, 368, 369, 370, 409, 416, 432, 452, 453, 472, 474, 475, 517, 535, 567, 608, 684, 685, 687, 688, 785, 878], "uniqu": [4, 10, 18, 100, 143, 150, 151, 166, 168, 215, 225, 230, 261, 262, 263, 264, 265, 266, 268, 270, 271, 274, 277, 278, 279, 320, 438, 467, 477, 478, 519, 557, 609, 670, 673, 697, 699, 700, 701, 725, 728, 769, 779, 860, 863, 878], "nan": [4, 68, 69, 134, 144, 209, 227, 228, 229, 230, 240, 477, 478, 505, 563, 576, 878], "top": [4, 72, 111, 114, 119, 126, 136, 140, 151, 158, 160, 161, 172, 176, 181, 199, 202, 204, 205, 206, 207, 210, 214, 216, 217, 225, 255, 263, 264, 265, 266, 271, 277, 279, 745, 746, 763, 775, 779, 808, 833, 837, 860, 863, 878], "freq": [4, 9, 21, 32, 33, 34, 67, 103, 106, 108, 111, 113, 132, 137, 166, 194, 198, 201, 202, 211, 220, 227, 228, 229, 230, 238, 239, 240, 242, 255, 340, 342, 422, 448, 477, 478, 541, 677, 697, 698, 699, 700, 701, 711, 713, 715, 716, 721, 723, 724, 725, 726, 727, 728, 768, 786, 793, 866, 878], "std": [4, 16, 151, 191, 222, 235, 238, 239, 240, 263, 264, 265, 266, 313, 409, 416, 477, 478, 513, 697, 769, 776, 779, 782, 799], "min": [4, 9, 21, 22, 95, 96, 111, 113, 115, 136, 137, 141, 146, 157, 172, 194, 198, 204, 206, 214, 225, 226, 227, 228, 229, 230, 233, 234, 235, 260, 263, 264, 265, 266, 270, 271, 272, 274, 277, 278, 279, 320, 409, 411, 416, 420, 442, 445, 447, 477, 478, 556, 557, 569, 577, 578, 580, 589, 593, 594, 697, 699, 701, 762, 776, 777, 784, 788, 797, 798, 799, 800, 803, 805, 806, 807, 808, 818], "619": [4, 195, 230], "852": 4, "084": 4, "875": [4, 143, 182, 860], "max": [4, 5, 8, 9, 19, 21, 22, 31, 32, 33, 34, 35, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 60, 80, 83, 89, 92, 93, 95, 99, 108, 111, 114, 115, 120, 134, 136, 141, 144, 150, 152, 157, 160, 162, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 194, 195, 202, 209, 214, 221, 222, 225, 226, 227, 228, 229, 230, 233, 234, 235, 254, 260, 263, 264, 265, 266, 270, 271, 272, 274, 277, 278, 279, 296, 297, 320, 357, 409, 411, 416, 420, 442, 443, 445, 447, 477, 478, 508, 533, 534, 539, 556, 557, 578, 589, 594, 684, 685, 686, 687, 688, 690, 697, 699, 701, 713, 723, 745, 753, 762, 776, 777, 780, 784, 788, 797, 799, 800, 803, 805, 806, 807, 808, 818, 865, 878], "642": [4, 59, 181, 187, 230, 243, 475], "provid": [4, 5, 18, 19, 27, 43, 44, 65, 79, 89, 92, 93, 94, 102, 137, 140, 142, 146, 149, 150, 151, 155, 156, 160, 161, 165, 166, 167, 168, 169, 170, 171, 172, 175, 184, 185, 188, 189, 190, 195, 198, 199, 200, 201, 203, 204, 205, 206, 207, 209, 214, 215, 216, 217, 220, 222, 226, 227, 230, 243, 244, 255, 257, 258, 260, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 284, 287, 296, 297, 301, 302, 309, 312, 320, 323, 328, 352, 354, 355, 356, 357, 358, 359, 364, 368, 371, 384, 385, 388, 409, 411, 416, 425, 430, 433, 436, 447, 448, 450, 452, 462, 468, 469, 476, 477, 478, 496, 497, 507, 508, 510, 519, 523, 544, 556, 557, 559, 560, 567, 572, 573, 574, 576, 579, 585, 591, 593, 600, 610, 614, 625, 636, 646, 647, 662, 665, 682, 683, 685, 687, 688, 691, 697, 698, 699, 700, 701, 705, 706, 707, 708, 710, 724, 725, 726, 727, 728, 729, 732, 733, 735, 742, 745, 761, 762, 764, 769, 771, 775, 776, 777, 779, 780, 781, 782, 784, 787, 788, 792, 794, 797, 798, 799, 800, 803, 805, 807, 808, 809, 833, 835, 837, 838, 840, 841, 843, 844, 849, 852, 853, 854, 855, 857, 859, 860, 861, 863, 866, 868, 878], "command": [4, 122, 134, 151, 155, 158, 160, 171, 185, 189, 263, 264, 268, 359, 468, 477, 478, 514, 557, 638, 775, 792, 798, 835, 836, 840, 841, 842, 843, 844, 845, 849, 853, 855, 868, 878], "ran": [4, 230, 268], "befor": [4, 5, 21, 24, 26, 41, 44, 45, 50, 61, 67, 69, 81, 85, 87, 89, 93, 118, 126, 134, 136, 137, 140, 141, 142, 143, 144, 145, 149, 151, 156, 157, 158, 160, 161, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 180, 181, 183, 184, 185, 188, 191, 195, 198, 199, 200, 201, 202, 204, 205, 206, 207, 209, 210, 211, 214, 215, 216, 217, 222, 238, 240, 255, 256, 258, 260, 263, 264, 265, 266, 268, 270, 271, 273, 274, 275, 277, 278, 279, 296, 313, 340, 358, 361, 369, 370, 409, 415, 416, 418, 421, 433, 439, 440, 441, 442, 443, 444, 450, 451, 453, 477, 478, 517, 530, 531, 533, 534, 540, 541, 556, 557, 560, 569, 570, 573, 574, 576, 577, 600, 608, 615, 620, 653, 654, 655, 656, 657, 659, 661, 683, 684, 685, 687, 688, 692, 698, 699, 701, 762, 771, 776, 777, 779, 781, 783, 784, 789, 790, 791, 796, 799, 815, 828, 835, 845, 853, 854, 857, 859, 860, 863, 878], "There": [4, 73, 82, 119, 126, 141, 144, 151, 156, 158, 159, 166, 170, 171, 172, 177, 180, 190, 198, 200, 201, 202, 204, 205, 209, 211, 214, 216, 225, 238, 263, 401, 433, 557, 592, 646, 837, 841, 844, 854, 857, 858, 860, 862, 863], "subdivid": [4, 160, 161, 255, 270, 274, 278, 383, 645, 803, 878], "particular": [4, 27, 125, 134, 140, 141, 155, 166, 168, 172, 175, 194, 195, 201, 204, 205, 214, 227, 235, 255, 257, 263, 264, 273, 302, 426, 453, 477, 478, 485, 620, 677, 684, 685, 687, 688, 775, 798, 835, 857, 859, 860, 861, 866], "addit": [4, 34, 42, 45, 60, 61, 69, 74, 81, 111, 113, 134, 135, 140, 142, 145, 150, 152, 156, 160, 161, 162, 166, 170, 188, 189, 190, 191, 194, 195, 200, 201, 204, 205, 206, 207, 209, 214, 216, 217, 220, 230, 240, 255, 260, 263, 264, 265, 266, 270, 271, 274, 275, 276, 277, 278, 279, 334, 352, 353, 358, 384, 409, 410, 411, 414, 416, 417, 420, 430, 433, 440, 442, 447, 477, 478, 483, 524, 525, 526, 527, 528, 530, 531, 537, 540, 541, 554, 555, 556, 557, 558, 569, 570, 586, 615, 641, 651, 683, 684, 685, 687, 688, 696, 697, 699, 700, 701, 716, 724, 725, 727, 728, 745, 758, 762, 775, 777, 779, 784, 790, 796, 798, 800, 803, 805, 807, 808, 837, 840, 841, 843, 844, 853, 854, 856, 857, 860, 863, 864, 866, 878], "valu": [4, 5, 7, 8, 9, 10, 16, 19, 21, 22, 24, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 58, 59, 68, 70, 89, 92, 93, 95, 100, 102, 103, 108, 111, 113, 119, 120, 126, 130, 131, 134, 135, 136, 137, 140, 141, 142, 143, 144, 146, 149, 150, 151, 152, 156, 160, 162, 166, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 194, 195, 200, 201, 202, 204, 205, 206, 209, 210, 211, 214, 216, 220, 221, 222, 225, 226, 227, 229, 230, 233, 234, 235, 238, 239, 243, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 281, 282, 286, 287, 296, 297, 299, 301, 305, 308, 309, 313, 320, 324, 326, 328, 329, 347, 348, 353, 354, 356, 357, 358, 359, 364, 367, 368, 369, 370, 374, 384, 401, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 428, 430, 431, 433, 437, 438, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 457, 462, 465, 467, 468, 469, 472, 474, 475, 477, 478, 479, 485, 487, 492, 499, 501, 505, 510, 512, 513, 514, 516, 517, 519, 520, 521, 523, 524, 528, 530, 531, 532, 533, 534, 535, 538, 540, 541, 545, 556, 557, 558, 559, 560, 562, 563, 566, 569, 570, 571, 572, 573, 574, 576, 578, 579, 582, 583, 591, 593, 594, 596, 600, 602, 608, 612, 615, 619, 628, 635, 639, 641, 642, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 670, 673, 675, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 690, 691, 692, 693, 695, 697, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 715, 716, 724, 725, 726, 727, 728, 732, 733, 735, 745, 748, 754, 761, 762, 764, 767, 769, 770, 773, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 788, 789, 796, 797, 798, 799, 800, 803, 805, 806, 807, 808, 809, 810, 815, 818, 831, 833, 837, 853, 854, 857, 860, 863, 878], "z": [4, 5, 11, 16, 18, 24, 41, 45, 50, 127, 151, 156, 158, 159, 160, 169, 170, 175, 176, 180, 181, 183, 184, 185, 189, 201, 205, 207, 243, 260, 263, 264, 265, 266, 267, 271, 272, 277, 279, 304, 305, 311, 323, 334, 343, 344, 409, 416, 428, 477, 478, 489, 524, 556, 557, 562, 566, 571, 576, 617, 649, 650, 697, 699, 701, 735, 736, 738, 745, 762, 769, 775, 777, 779, 781, 784, 785, 787, 788, 792, 795, 797, 798, 799, 800, 801, 805, 807, 813, 814, 825, 833, 843, 860, 878], "score": [4, 7, 8, 9, 10, 11, 13, 15, 16, 18, 19, 73, 82, 137, 172, 194, 195, 204, 209, 273, 409, 412, 413, 415, 416, 419, 426, 557, 562, 571, 576, 653, 684, 685, 687, 688, 791, 814, 854, 857, 878], "thei": [4, 5, 26, 41, 45, 47, 50, 69, 70, 73, 78, 81, 82, 93, 106, 113, 118, 134, 140, 141, 142, 144, 149, 151, 152, 158, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 176, 180, 181, 182, 188, 190, 191, 195, 198, 199, 200, 201, 202, 204, 205, 206, 209, 210, 211, 214, 215, 216, 217, 230, 233, 243, 256, 258, 263, 264, 265, 266, 268, 273, 296, 306, 308, 323, 324, 333, 353, 360, 362, 430, 432, 438, 442, 444, 451, 477, 478, 485, 492, 497, 499, 501, 517, 533, 534, 546, 557, 568, 575, 576, 585, 600, 608, 609, 611, 642, 700, 740, 745, 762, 778, 779, 782, 828, 833, 835, 837, 840, 844, 853, 855, 859, 860, 878], "have": [4, 10, 19, 30, 31, 34, 35, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 69, 70, 73, 77, 79, 82, 83, 85, 86, 89, 93, 94, 100, 102, 103, 111, 114, 115, 116, 118, 119, 126, 130, 133, 134, 135, 137, 140, 142, 143, 144, 145, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 178, 179, 181, 182, 183, 188, 189, 190, 191, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 214, 215, 216, 217, 220, 221, 222, 225, 226, 229, 230, 233, 235, 238, 240, 254, 255, 256, 258, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 282, 290, 291, 294, 296, 297, 305, 313, 316, 319, 329, 352, 353, 357, 358, 359, 364, 368, 369, 370, 401, 409, 412, 413, 415, 416, 417, 418, 419, 421, 422, 423, 428, 429, 430, 433, 434, 443, 444, 449, 452, 453, 459, 467, 469, 472, 474, 475, 476, 477, 478, 485, 488, 489, 492, 494, 497, 500, 516, 518, 526, 528, 531, 535, 543, 552, 556, 557, 558, 567, 568, 571, 573, 574, 575, 576, 578, 585, 603, 605, 615, 634, 636, 639, 642, 647, 648, 649, 650, 651, 662, 667, 671, 679, 683, 697, 698, 699, 700, 701, 716, 717, 724, 725, 735, 745, 749, 750, 762, 768, 769, 775, 776, 777, 779, 782, 784, 785, 788, 797, 799, 800, 805, 806, 807, 811, 815, 826, 828, 833, 835, 838, 842, 843, 845, 849, 854, 855, 858, 859, 860, 863, 864, 866, 878], "standard": [4, 8, 28, 34, 41, 44, 46, 69, 73, 82, 93, 108, 120, 134, 135, 141, 149, 150, 151, 155, 159, 160, 169, 170, 171, 182, 191, 194, 195, 199, 201, 204, 207, 214, 220, 226, 235, 239, 243, 255, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 276, 277, 278, 279, 286, 311, 313, 322, 327, 329, 387, 409, 416, 418, 429, 442, 443, 458, 462, 465, 477, 478, 485, 489, 492, 501, 505, 524, 540, 541, 551, 556, 557, 576, 611, 618, 642, 646, 679, 682, 697, 699, 700, 701, 709, 710, 745, 762, 763, 769, 770, 776, 777, 779, 784, 785, 788, 790, 797, 800, 803, 805, 806, 807, 809, 833, 835, 853, 854, 855, 857, 860, 863, 866, 868, 878], "deviat": [4, 54, 55, 89, 96, 99, 120, 150, 151, 178, 195, 204, 208, 225, 227, 239, 260, 263, 264, 265, 266, 286, 313, 409, 539, 540, 541, 557, 576, 659, 679, 697, 699, 700, 701, 769, 770, 776, 779, 785, 788, 790, 805, 806, 833, 860, 878], "how": [4, 5, 9, 10, 13, 18, 19, 22, 26, 27, 31, 33, 43, 44, 45, 47, 58, 62, 64, 66, 67, 68, 69, 70, 74, 77, 78, 89, 93, 94, 97, 98, 104, 112, 115, 116, 119, 121, 123, 124, 126, 128, 129, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 155, 156, 157, 158, 159, 161, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 180, 181, 182, 183, 188, 190, 194, 195, 200, 201, 202, 203, 204, 205, 207, 208, 210, 214, 215, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 235, 238, 239, 240, 243, 256, 258, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 274, 276, 277, 278, 279, 296, 297, 307, 311, 312, 337, 341, 347, 359, 364, 365, 366, 372, 409, 415, 416, 421, 436, 451, 453, 467, 468, 472, 474, 475, 477, 478, 482, 490, 497, 498, 501, 508, 524, 533, 534, 535, 556, 557, 560, 568, 576, 585, 586, 627, 628, 629, 630, 638, 642, 645, 646, 684, 685, 687, 688, 695, 697, 698, 699, 700, 701, 716, 745, 746, 753, 761, 762, 763, 766, 769, 771, 775, 776, 777, 780, 784, 788, 789, 790, 791, 797, 798, 800, 803, 804, 805, 807, 808, 813, 815, 833, 835, 837, 838, 845, 853, 854, 859, 860, 861, 863, 864, 866, 878], "onli": [4, 8, 10, 11, 12, 19, 21, 22, 31, 34, 39, 41, 44, 45, 47, 49, 50, 55, 63, 69, 73, 77, 78, 81, 82, 87, 89, 92, 93, 94, 95, 96, 102, 106, 108, 111, 113, 114, 115, 116, 119, 126, 130, 132, 136, 137, 140, 141, 142, 143, 149, 150, 151, 157, 158, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 178, 180, 183, 188, 189, 190, 191, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 214, 215, 216, 217, 220, 221, 222, 225, 227, 228, 229, 230, 233, 234, 235, 239, 240, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 302, 303, 304, 305, 306, 307, 308, 311, 312, 313, 315, 316, 317, 318, 320, 321, 322, 324, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426, 428, 430, 433, 434, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 457, 459, 460, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 519, 520, 521, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 550, 553, 554, 555, 556, 557, 559, 560, 562, 563, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 588, 589, 592, 593, 594, 597, 598, 599, 600, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 615, 616, 617, 619, 620, 621, 622, 623, 625, 627, 628, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 642, 644, 645, 646, 648, 649, 650, 651, 660, 661, 662, 663, 665, 667, 668, 669, 670, 671, 672, 673, 674, 683, 684, 685, 686, 687, 688, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 715, 716, 719, 720, 724, 725, 726, 727, 728, 729, 730, 733, 734, 735, 740, 744, 745, 753, 761, 762, 763, 764, 766, 769, 770, 773, 775, 777, 778, 779, 780, 781, 783, 784, 785, 786, 787, 788, 789, 790, 792, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 814, 818, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 835, 837, 844, 853, 854, 857, 858, 859, 860, 861, 863, 878], "500": [4, 10, 11, 22, 69, 79, 80, 85, 87, 115, 135, 141, 143, 145, 181, 184, 190, 194, 195, 201, 204, 208, 210, 211, 222, 225, 230, 557], "ts_arg": [4, 100, 127, 195, 210, 226, 263, 264, 265, 266, 557, 776, 782, 790, 878], "xlim": [4, 19, 37, 39, 96, 126, 160, 181, 194, 201, 202, 210, 211, 222, 225, 235, 240, 265, 266, 779, 781], "plot_joint": [4, 70, 100, 150, 151, 166, 180, 182, 195, 198, 204, 206, 210, 226, 239, 265, 266, 697, 864, 878], "15": [4, 5, 9, 11, 12, 13, 19, 21, 28, 29, 32, 33, 34, 35, 42, 43, 45, 47, 50, 51, 67, 68, 69, 70, 72, 74, 75, 79, 80, 82, 84, 91, 92, 93, 102, 107, 108, 113, 126, 134, 135, 136, 137, 141, 142, 143, 145, 151, 155, 157, 162, 166, 168, 169, 170, 171, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 194, 195, 200, 202, 203, 204, 206, 207, 208, 209, 210, 214, 219, 220, 225, 226, 227, 229, 230, 233, 234, 235, 238, 243, 261, 263, 264, 265, 266, 270, 271, 272, 273, 274, 276, 277, 278, 279, 283, 317, 368, 411, 420, 445, 447, 448, 449, 474, 477, 478, 505, 557, 560, 569, 570, 630, 661, 681, 686, 699, 701, 716, 726, 727, 729, 749, 760, 761, 775, 783, 803, 808, 833, 840, 853, 854, 860], "titl": [4, 8, 9, 15, 16, 19, 22, 30, 35, 39, 42, 43, 44, 46, 47, 48, 49, 50, 54, 55, 59, 68, 69, 70, 75, 81, 85, 89, 93, 100, 102, 106, 107, 108, 109, 113, 119, 122, 124, 126, 131, 134, 137, 141, 142, 144, 146, 151, 152, 160, 172, 175, 176, 177, 179, 180, 194, 195, 199, 201, 202, 204, 205, 206, 207, 209, 211, 222, 225, 226, 227, 230, 235, 239, 240, 243, 261, 263, 264, 265, 266, 270, 273, 274, 278, 477, 478, 556, 557, 697, 699, 701, 745, 765, 768, 769, 773, 774, 775, 776, 777, 779, 781, 782, 783, 786, 788, 789, 791, 792, 793, 798, 800, 801, 803, 806, 812, 837, 852, 878], "differ": [4, 9, 16, 21, 22, 27, 28, 33, 37, 39, 44, 45, 47, 54, 55, 63, 67, 69, 76, 79, 80, 84, 93, 95, 98, 100, 102, 106, 109, 110, 111, 113, 119, 121, 122, 126, 129, 133, 134, 135, 137, 140, 142, 143, 144, 147, 149, 150, 151, 152, 156, 158, 160, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 180, 181, 183, 184, 185, 188, 189, 190, 191, 195, 198, 201, 202, 203, 204, 205, 206, 207, 209, 211, 214, 215, 216, 220, 225, 226, 227, 228, 230, 233, 234, 235, 239, 243, 257, 258, 263, 264, 265, 266, 267, 270, 271, 274, 277, 278, 279, 280, 296, 297, 298, 302, 319, 340, 353, 357, 358, 360, 362, 363, 368, 369, 370, 388, 401, 409, 416, 418, 430, 432, 433, 443, 450, 452, 453, 467, 468, 472, 474, 475, 477, 478, 485, 492, 499, 510, 517, 530, 532, 533, 534, 535, 544, 557, 559, 567, 568, 573, 576, 583, 585, 599, 602, 608, 609, 612, 616, 639, 648, 649, 650, 651, 657, 660, 661, 662, 663, 679, 684, 685, 686, 687, 688, 697, 698, 699, 700, 701, 745, 750, 761, 771, 775, 779, 783, 784, 785, 790, 792, 798, 801, 803, 809, 824, 833, 835, 837, 841, 842, 845, 853, 854, 855, 857, 860, 863, 866, 878], "wave": [4, 46, 94, 113, 137, 144, 151, 166, 201, 206, 226, 238, 243, 263, 264, 265, 266, 401, 402, 477, 478, 507, 569, 573, 577, 699, 701, 709, 715, 854], "contrast": [4, 7, 78, 87, 95, 98, 149, 151, 166, 170, 207, 222, 225, 226, 233, 238, 239, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 697, 700, 854, 864, 866, 878], "although": [4, 21, 65, 100, 140, 143, 149, 161, 172, 200, 201, 203, 205, 214, 261, 442, 477, 478, 679, 844, 860, 878], "shouldn": [4, 151, 243, 274, 277, 544], "expect": [4, 32, 38, 93, 113, 120, 144, 156, 159, 161, 162, 165, 166, 167, 172, 180, 190, 195, 201, 204, 205, 206, 210, 214, 215, 220, 222, 225, 229, 230, 235, 240, 263, 264, 265, 266, 329, 331, 336, 357, 477, 478, 484, 493, 496, 503, 535, 557, 585, 609, 610, 614, 625, 636, 745, 775, 785, 792, 798, 833, 835, 837, 856, 857, 859, 860, 861, 878], "great": [4, 119, 144, 151, 240, 855, 866], "among": [4, 10, 27, 36, 56, 172, 201, 225, 274, 276, 363, 534, 536, 538, 557, 576, 617, 620, 677, 745, 750, 849, 859, 878], "minu": [4, 141, 144, 227, 240, 557, 639, 682, 860, 863], "difference_wav": 4, "weight": [4, 5, 7, 11, 15, 18, 19, 21, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 54, 55, 58, 59, 60, 72, 73, 89, 93, 98, 103, 106, 107, 108, 109, 122, 137, 141, 144, 149, 151, 157, 166, 168, 176, 177, 178, 179, 180, 181, 182, 185, 188, 191, 194, 195, 199, 201, 202, 203, 205, 206, 207, 210, 221, 222, 225, 226, 228, 233, 234, 235, 243, 255, 268, 269, 274, 285, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 352, 364, 413, 414, 415, 427, 430, 453, 454, 472, 474, 475, 488, 524, 530, 531, 535, 556, 557, 583, 653, 654, 659, 660, 663, 684, 685, 687, 688, 692, 704, 707, 715, 777, 800, 833, 853, 854, 863, 864, 878], "clear": [4, 73, 112, 116, 140, 157, 199, 203, 205, 209, 211, 222, 225, 260, 263, 264, 268, 272, 287, 301, 477, 478, 523, 732, 745, 776, 837, 866, 878], "pattern": [4, 11, 17, 19, 20, 21, 27, 46, 79, 82, 111, 112, 142, 143, 161, 166, 167, 172, 194, 198, 201, 204, 205, 206, 210, 240, 243, 263, 264, 265, 266, 268, 273, 311, 327, 362, 372, 409, 413, 415, 416, 417, 424, 427, 433, 438, 459, 492, 494, 554, 558, 612, 625, 635, 636, 650, 697, 699, 700, 837, 853, 854, 860, 863, 878], "when": [4, 21, 27, 28, 31, 44, 45, 46, 47, 60, 69, 73, 74, 78, 80, 81, 82, 83, 89, 93, 94, 102, 106, 114, 125, 126, 134, 140, 142, 143, 144, 145, 146, 149, 150, 151, 157, 158, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 178, 180, 182, 184, 188, 189, 190, 191, 195, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 220, 221, 225, 227, 230, 238, 239, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 284, 286, 296, 297, 308, 311, 315, 316, 338, 346, 347, 348, 352, 353, 357, 358, 359, 360, 362, 364, 368, 369, 370, 371, 374, 409, 416, 417, 420, 426, 428, 430, 434, 436, 438, 441, 443, 444, 445, 448, 450, 452, 453, 456, 459, 468, 472, 474, 475, 477, 478, 485, 490, 492, 493, 494, 497, 499, 501, 505, 524, 525, 526, 527, 528, 530, 531, 535, 540, 541, 543, 546, 556, 557, 559, 562, 567, 568, 571, 573, 576, 577, 579, 580, 585, 586, 600, 603, 605, 609, 611, 613, 615, 628, 634, 636, 637, 642, 646, 647, 658, 661, 684, 685, 686, 687, 688, 692, 696, 697, 698, 699, 700, 701, 703, 704, 706, 709, 715, 735, 742, 745, 753, 754, 762, 769, 773, 775, 777, 778, 779, 781, 782, 784, 785, 787, 788, 790, 792, 795, 797, 798, 799, 800, 801, 803, 804, 805, 806, 807, 808, 811, 818, 824, 826, 833, 835, 840, 841, 842, 843, 852, 853, 855, 857, 858, 859, 860, 861, 863, 864, 878], "howev": [4, 16, 21, 45, 69, 73, 74, 140, 142, 146, 149, 162, 167, 169, 170, 171, 172, 189, 190, 191, 194, 195, 199, 201, 203, 204, 205, 206, 207, 211, 214, 215, 225, 227, 229, 230, 233, 235, 240, 263, 264, 268, 296, 311, 353, 401, 430, 492, 494, 507, 524, 686, 837, 857, 859, 860, 863, 866, 878], "could": [4, 28, 29, 30, 38, 39, 41, 43, 68, 78, 83, 103, 140, 144, 151, 160, 161, 166, 169, 171, 172, 175, 179, 180, 181, 191, 198, 200, 204, 205, 206, 207, 209, 214, 215, 216, 220, 225, 226, 233, 235, 240, 263, 264, 265, 266, 269, 274, 296, 379, 401, 402, 408, 430, 432, 436, 452, 477, 478, 479, 485, 557, 560, 574, 577, 578, 599, 748, 753, 819, 837, 857, 859, 866, 878], "narrow": [4, 198, 202, 240, 273, 878], "our": [4, 5, 19, 26, 27, 32, 42, 44, 62, 69, 73, 79, 83, 92, 102, 108, 111, 113, 114, 119, 120, 126, 134, 135, 136, 137, 140, 141, 142, 144, 145, 146, 150, 151, 156, 160, 166, 168, 171, 172, 175, 180, 181, 183, 184, 195, 198, 199, 201, 202, 204, 205, 206, 207, 209, 210, 211, 214, 215, 220, 222, 225, 227, 229, 230, 233, 234, 235, 238, 239, 240, 276, 449, 450, 532, 713, 723, 741, 836, 837, 839, 840, 841, 842, 853, 856, 857, 859, 860, 861, 865, 866, 878], "search": [4, 151, 156, 195, 243, 273, 276, 296, 412, 419, 436, 457, 560, 565, 571, 713, 723, 724, 727, 761, 837, 842, 843, 857], "bit": [4, 5, 7, 78, 108, 126, 141, 144, 160, 171, 180, 189, 201, 203, 208, 211, 225, 233, 235, 240, 263, 264, 268, 340, 477, 478, 485, 492, 498, 835, 843, 854, 860, 863, 878], "sinc": [4, 19, 32, 43, 44, 69, 78, 93, 114, 118, 134, 135, 140, 141, 142, 144, 151, 160, 166, 167, 169, 171, 172, 175, 178, 188, 189, 191, 199, 200, 201, 202, 203, 204, 205, 206, 207, 214, 215, 216, 220, 225, 228, 233, 235, 240, 257, 258, 263, 264, 265, 266, 269, 273, 274, 277, 289, 311, 337, 353, 357, 358, 430, 439, 440, 441, 442, 453, 465, 477, 478, 520, 544, 557, 568, 573, 576, 585, 684, 685, 686, 687, 688, 762, 789, 837, 853, 857, 860, 863, 878], "paradigm": [4, 7, 144, 162, 166, 198, 201, 778, 854, 878], "might": [4, 5, 19, 21, 69, 119, 126, 141, 144, 151, 156, 161, 162, 167, 168, 176, 195, 201, 204, 207, 225, 230, 233, 240, 270, 274, 278, 331, 433, 543, 557, 593, 684, 803, 835, 836, 837, 853, 856, 857, 860, 878], "best": [4, 5, 10, 16, 72, 78, 82, 120, 134, 135, 142, 149, 162, 166, 176, 177, 178, 180, 194, 200, 204, 209, 222, 269, 353, 358, 417, 477, 478, 571, 653, 655, 656, 746, 837, 843, 845, 855, 856, 857, 859, 860, 863], "electrod": [4, 27, 76, 77, 84, 117, 119, 121, 129, 135, 138, 139, 141, 143, 150, 159, 161, 165, 166, 170, 186, 187, 191, 194, 198, 201, 203, 207, 209, 214, 225, 243, 260, 263, 264, 265, 266, 267, 268, 272, 274, 280, 311, 312, 315, 324, 325, 327, 329, 330, 331, 332, 333, 334, 337, 353, 365, 366, 372, 409, 416, 450, 461, 468, 469, 477, 478, 483, 485, 487, 492, 497, 499, 520, 523, 524, 535, 556, 557, 565, 571, 582, 584, 613, 642, 697, 699, 700, 701, 733, 734, 735, 737, 745, 746, 761, 762, 765, 767, 769, 777, 779, 781, 784, 785, 788, 795, 797, 799, 800, 801, 805, 807, 810, 813, 815, 818, 833, 853, 854, 863, 866, 878], "over": [4, 5, 8, 9, 12, 21, 27, 28, 45, 46, 58, 59, 69, 79, 80, 102, 103, 106, 108, 111, 112, 114, 121, 129, 135, 136, 137, 149, 150, 151, 159, 161, 162, 166, 169, 172, 175, 176, 191, 199, 201, 204, 206, 209, 211, 216, 217, 222, 225, 226, 229, 230, 238, 240, 243, 255, 257, 262, 263, 264, 265, 266, 268, 270, 271, 274, 277, 278, 279, 290, 291, 294, 306, 320, 341, 353, 359, 409, 416, 418, 420, 448, 451, 477, 478, 511, 526, 528, 531, 557, 561, 586, 599, 612, 646, 647, 672, 684, 693, 697, 699, 700, 701, 708, 716, 729, 745, 758, 775, 776, 777, 787, 792, 833, 837, 844, 854, 855, 857, 859, 860, 866, 878], "occipit": [4, 47, 49, 169, 203, 240, 632, 860], "lobe": [4, 47, 135, 136, 180], "ani": [4, 5, 18, 24, 27, 41, 45, 50, 74, 82, 109, 111, 116, 119, 125, 126, 134, 135, 137, 140, 141, 142, 143, 149, 151, 156, 158, 160, 161, 162, 165, 166, 167, 169, 170, 171, 172, 176, 181, 183, 184, 185, 189, 190, 195, 198, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 214, 215, 216, 217, 225, 230, 240, 243, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 269, 270, 271, 273, 274, 276, 277, 278, 279, 286, 288, 290, 304, 305, 311, 318, 323, 325, 360, 364, 385, 415, 428, 431, 432, 433, 436, 443, 461, 466, 477, 478, 493, 546, 548, 549, 550, 554, 555, 557, 558, 559, 560, 573, 576, 577, 585, 592, 603, 609, 617, 625, 635, 638, 639, 642, 647, 658, 662, 683, 692, 697, 698, 699, 700, 701, 714, 745, 746, 748, 770, 775, 776, 778, 787, 790, 798, 799, 809, 815, 818, 825, 828, 833, 835, 837, 840, 854, 855, 857, 859, 860, 866, 878], "easier": [4, 134, 140, 142, 144, 150, 151, 156, 172, 191, 195, 199, 201, 204, 205, 206, 207, 257, 371, 835, 837, 878], "spot": [4, 199, 202, 229, 273, 878], "area": [4, 5, 54, 69, 78, 93, 115, 134, 135, 178, 191, 195, 199, 204, 216, 221, 225, 229, 240, 263, 264, 265, 266, 269, 477, 478, 658, 697, 767, 769, 779, 781, 799, 818, 837, 860, 863, 878], "dictionari": [4, 10, 27, 36, 56, 59, 93, 114, 126, 136, 140, 141, 142, 144, 145, 149, 150, 151, 166, 167, 169, 188, 204, 206, 209, 214, 215, 220, 243, 255, 257, 258, 260, 263, 264, 265, 266, 267, 268, 272, 273, 274, 276, 287, 296, 297, 298, 301, 309, 311, 323, 324, 339, 353, 357, 358, 364, 367, 368, 369, 370, 372, 409, 411, 416, 420, 433, 436, 438, 441, 444, 445, 447, 448, 450, 452, 453, 469, 472, 473, 474, 475, 476, 477, 478, 509, 519, 523, 535, 557, 567, 569, 570, 571, 573, 576, 605, 612, 617, 628, 630, 633, 639, 646, 683, 697, 732, 735, 745, 768, 769, 775, 776, 778, 785, 788, 790, 798, 804, 844, 878], "concentr": [4, 190, 205, 210, 221, 414, 530, 531, 587, 592, 704, 707, 715, 777, 878], "b11": 4, "ylim": [4, 7, 9, 19, 35, 39, 40, 46, 51, 59, 98, 111, 113, 126, 151, 160, 194, 201, 203, 210, 211, 225, 235, 240, 265, 266, 769, 779, 783, 878], "do": [4, 5, 15, 16, 18, 24, 26, 27, 31, 34, 40, 41, 45, 47, 50, 51, 54, 55, 58, 59, 60, 65, 69, 73, 78, 82, 108, 111, 113, 114, 119, 126, 134, 136, 137, 140, 141, 144, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 166, 168, 171, 172, 175, 176, 177, 180, 182, 183, 184, 185, 188, 189, 191, 194, 195, 199, 201, 202, 204, 205, 206, 207, 208, 209, 211, 214, 216, 220, 221, 222, 225, 230, 233, 234, 235, 239, 240, 243, 255, 256, 257, 258, 260, 263, 264, 265, 266, 269, 270, 271, 273, 274, 277, 278, 279, 282, 286, 302, 306, 308, 318, 325, 353, 357, 364, 368, 369, 379, 384, 401, 402, 420, 421, 422, 428, 430, 438, 443, 444, 450, 459, 467, 474, 475, 477, 478, 485, 492, 520, 524, 525, 526, 527, 528, 530, 531, 540, 541, 548, 549, 550, 554, 555, 557, 558, 559, 560, 568, 573, 574, 576, 585, 602, 605, 612, 615, 616, 634, 636, 638, 684, 685, 687, 688, 692, 697, 699, 700, 701, 714, 735, 770, 774, 786, 805, 823, 826, 828, 835, 837, 840, 842, 843, 845, 848, 853, 854, 859, 860, 863, 864, 866, 878], "pretti": [4, 141, 144, 201, 204, 206, 857], "small": [4, 5, 11, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 69, 74, 78, 89, 92, 93, 103, 106, 107, 108, 109, 120, 126, 127, 135, 141, 142, 152, 162, 166, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 191, 195, 201, 202, 204, 206, 216, 221, 222, 225, 227, 233, 235, 255, 260, 261, 263, 264, 265, 266, 269, 272, 319, 353, 409, 416, 477, 478, 493, 556, 557, 559, 603, 609, 684, 685, 687, 688, 690, 697, 699, 701, 773, 777, 784, 788, 797, 800, 805, 833, 837, 854, 857, 860, 863, 878], "determin": [4, 22, 78, 81, 127, 134, 141, 145, 151, 161, 166, 169, 171, 178, 190, 201, 203, 209, 214, 215, 216, 225, 228, 230, 257, 260, 261, 263, 264, 265, 266, 268, 271, 272, 277, 279, 282, 296, 297, 304, 311, 313, 340, 347, 353, 357, 358, 368, 369, 370, 384, 409, 415, 416, 417, 426, 448, 452, 453, 472, 474, 475, 477, 478, 489, 512, 516, 535, 557, 583, 585, 590, 591, 613, 632, 689, 725, 728, 745, 773, 776, 781, 783, 784, 785, 786, 795, 802, 808, 818, 819, 857, 860, 863, 878], "whether": [4, 13, 81, 141, 144, 145, 146, 171, 178, 180, 195, 199, 204, 205, 209, 240, 255, 256, 257, 258, 260, 261, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 284, 286, 296, 297, 311, 320, 321, 322, 325, 353, 358, 363, 384, 391, 409, 416, 431, 442, 450, 468, 469, 476, 477, 478, 488, 517, 524, 525, 526, 527, 528, 531, 533, 534, 535, 539, 540, 541, 556, 557, 558, 566, 571, 573, 574, 576, 577, 578, 583, 586, 600, 639, 642, 661, 662, 684, 685, 687, 688, 697, 698, 699, 700, 701, 703, 706, 709, 745, 754, 762, 766, 769, 771, 773, 774, 775, 776, 777, 779, 783, 784, 788, 790, 792, 795, 797, 798, 799, 800, 801, 803, 805, 806, 807, 808, 811, 815, 818, 837, 843, 857, 860, 863, 878], "stronger": [4, 141, 191, 227, 235, 265, 266, 779], "along": [4, 19, 46, 114, 118, 136, 140, 142, 160, 166, 168, 170, 178, 194, 195, 198, 199, 203, 204, 207, 208, 214, 216, 217, 222, 233, 260, 261, 263, 264, 265, 266, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 281, 286, 409, 412, 416, 419, 420, 422, 449, 467, 468, 474, 477, 478, 556, 557, 602, 676, 677, 684, 685, 687, 688, 691, 697, 699, 700, 701, 745, 761, 762, 769, 775, 776, 777, 780, 784, 788, 797, 800, 801, 803, 805, 806, 807, 808, 833, 835, 836, 837, 854, 860, 878], "phase_coh": 4, "get": [4, 5, 7, 15, 18, 19, 21, 22, 26, 27, 28, 34, 38, 39, 41, 47, 48, 50, 52, 60, 62, 63, 65, 66, 68, 69, 71, 79, 80, 82, 83, 93, 94, 95, 96, 102, 108, 112, 113, 115, 119, 122, 123, 126, 134, 135, 136, 140, 141, 142, 143, 144, 146, 149, 150, 151, 155, 156, 157, 158, 160, 162, 165, 166, 167, 169, 170, 173, 174, 175, 180, 181, 183, 184, 185, 198, 199, 200, 201, 202, 204, 206, 214, 216, 217, 225, 227, 229, 230, 235, 238, 239, 243, 255, 256, 257, 258, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 287, 301, 305, 309, 310, 311, 321, 322, 340, 341, 357, 364, 369, 370, 373, 376, 377, 378, 379, 381, 382, 389, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 412, 413, 415, 416, 417, 418, 419, 421, 422, 423, 426, 429, 433, 438, 444, 450, 458, 461, 464, 468, 477, 478, 483, 506, 514, 523, 533, 534, 546, 557, 558, 564, 566, 574, 615, 646, 647, 666, 668, 676, 689, 692, 697, 698, 699, 700, 701, 732, 745, 746, 769, 776, 778, 791, 833, 835, 836, 837, 839, 841, 842, 843, 848, 854, 855, 859, 860, 861, 863, 864, 866, 878], "sort": [4, 7, 15, 21, 27, 47, 93, 120, 121, 129, 137, 143, 160, 170, 225, 263, 264, 265, 266, 268, 273, 323, 353, 358, 417, 435, 438, 462, 493, 557, 620, 698, 700, 776, 779, 781, 828, 845, 878], "label": [4, 8, 9, 10, 11, 12, 13, 15, 16, 18, 21, 22, 27, 28, 29, 36, 37, 44, 45, 56, 67, 69, 89, 91, 93, 94, 95, 96, 100, 104, 105, 109, 110, 111, 112, 115, 119, 125, 126, 134, 135, 137, 140, 142, 143, 144, 149, 151, 155, 160, 166, 168, 172, 176, 180, 181, 191, 195, 200, 204, 206, 209, 214, 215, 216, 226, 235, 239, 240, 243, 259, 260, 261, 263, 264, 265, 266, 268, 270, 271, 272, 274, 275, 276, 277, 278, 279, 296, 297, 359, 363, 383, 386, 409, 410, 411, 414, 416, 417, 418, 420, 426, 442, 443, 450, 455, 461, 462, 463, 467, 477, 478, 485, 488, 492, 511, 512, 523, 524, 525, 526, 527, 528, 530, 531, 533, 534, 536, 538, 540, 541, 543, 554, 556, 557, 558, 571, 602, 615, 617, 618, 619, 620, 625, 635, 636, 646, 647, 655, 660, 663, 664, 674, 693, 697, 699, 700, 701, 713, 723, 745, 750, 763, 764, 767, 769, 775, 776, 777, 778, 779, 781, 784, 788, 791, 792, 797, 798, 800, 803, 804, 805, 806, 807, 808, 827, 828, 833, 837, 866, 868, 878], "2f": [4, 59, 157, 270, 271, 274, 277, 278, 279, 557, 745, 788, 803, 808], "format": [4, 27, 34, 43, 44, 62, 66, 69, 113, 126, 135, 137, 140, 143, 149, 150, 151, 160, 165, 166, 168, 170, 171, 172, 176, 182, 188, 191, 202, 204, 205, 206, 207, 210, 214, 215, 216, 218, 225, 226, 227, 230, 255, 257, 260, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 311, 329, 330, 334, 336, 349, 350, 351, 372, 409, 416, 438, 439, 440, 441, 442, 469, 476, 477, 478, 480, 483, 485, 489, 494, 498, 546, 552, 556, 557, 571, 573, 603, 607, 612, 618, 628, 643, 644, 648, 649, 650, 662, 677, 684, 685, 687, 688, 697, 698, 699, 700, 701, 715, 716, 718, 740, 745, 760, 762, 777, 784, 788, 797, 800, 803, 805, 807, 808, 818, 823, 831, 833, 837, 844, 849, 853, 854, 857, 863, 866, 878], "90": [4, 5, 11, 19, 24, 35, 41, 42, 47, 79, 80, 89, 93, 102, 107, 108, 111, 113, 122, 135, 136, 143, 151, 156, 157, 158, 160, 169, 170, 171, 179, 184, 190, 194, 195, 200, 202, 207, 208, 210, 225, 226, 227, 228, 229, 230, 233, 234, 235, 240, 243, 265, 266, 296, 297, 353, 357, 358, 368, 369, 370, 409, 414, 416, 452, 453, 472, 474, 475, 521, 530, 531, 535, 557, 646, 653, 655, 656, 657, 678, 704, 707, 715, 750, 777, 785, 854, 855, 860], "each": [4, 9, 10, 11, 15, 16, 19, 24, 28, 32, 33, 38, 41, 44, 45, 69, 79, 82, 92, 93, 94, 100, 102, 106, 107, 108, 111, 112, 114, 116, 119, 126, 127, 132, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 155, 156, 158, 160, 161, 162, 166, 167, 168, 169, 172, 175, 176, 177, 178, 180, 181, 183, 185, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 215, 216, 217, 220, 222, 225, 227, 229, 230, 233, 234, 235, 238, 240, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 285, 288, 289, 296, 297, 302, 309, 313, 316, 320, 341, 343, 344, 348, 349, 352, 353, 354, 355, 356, 357, 358, 359, 361, 364, 366, 370, 384, 401, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 425, 426, 432, 433, 434, 443, 447, 448, 449, 450, 451, 452, 453, 461, 467, 472, 474, 475, 476, 477, 478, 479, 481, 492, 500, 508, 509, 512, 514, 516, 517, 524, 528, 530, 531, 533, 534, 547, 556, 557, 558, 560, 562, 565, 571, 573, 575, 576, 584, 585, 589, 605, 609, 615, 628, 631, 639, 645, 646, 652, 653, 654, 655, 656, 657, 658, 659, 662, 663, 664, 666, 668, 677, 679, 680, 682, 684, 685, 686, 687, 688, 689, 692, 693, 696, 697, 698, 699, 700, 701, 702, 703, 704, 716, 727, 728, 735, 745, 746, 749, 753, 761, 762, 763, 765, 766, 767, 769, 770, 771, 772, 773, 776, 777, 779, 781, 782, 783, 784, 785, 788, 796, 797, 798, 799, 800, 804, 805, 806, 807, 810, 814, 815, 818, 824, 826, 831, 833, 835, 836, 837, 843, 853, 854, 855, 857, 860, 863, 878], "zip": [4, 9, 10, 22, 27, 47, 80, 89, 106, 112, 113, 119, 126, 137, 140, 150, 160, 165, 180, 194, 199, 201, 202, 204, 205, 207, 225, 226, 227, 228, 229, 230, 235, 239, 385, 500, 837, 845], "c22": 4, "figur": [4, 5, 8, 16, 19, 22, 27, 28, 37, 38, 45, 49, 54, 55, 91, 102, 108, 110, 114, 115, 117, 121, 122, 124, 129, 135, 136, 141, 142, 145, 150, 156, 158, 160, 166, 170, 176, 178, 179, 180, 183, 184, 191, 194, 195, 201, 203, 204, 206, 209, 210, 217, 222, 225, 227, 230, 235, 239, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 311, 312, 325, 409, 416, 468, 469, 477, 478, 556, 557, 571, 615, 625, 697, 698, 699, 700, 701, 724, 725, 727, 728, 745, 747, 748, 751, 754, 758, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 812, 813, 815, 835, 836, 837, 855, 857, 878], "ax": [4, 10, 11, 12, 13, 15, 19, 21, 22, 37, 39, 41, 45, 47, 58, 67, 68, 69, 70, 71, 72, 80, 81, 85, 89, 92, 95, 98, 103, 111, 112, 113, 114, 115, 119, 126, 132, 134, 135, 136, 137, 144, 145, 146, 150, 151, 156, 160, 161, 170, 172, 176, 177, 180, 181, 183, 194, 195, 198, 201, 202, 205, 206, 209, 210, 211, 217, 222, 225, 226, 227, 228, 229, 230, 238, 239, 240, 260, 261, 263, 264, 265, 266, 272, 311, 312, 320, 325, 409, 416, 468, 477, 478, 556, 557, 697, 699, 701, 713, 723, 746, 748, 758, 761, 762, 764, 767, 768, 769, 773, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 790, 791, 793, 794, 795, 797, 799, 800, 801, 802, 805, 807, 860, 878], "subplot": [4, 10, 11, 12, 13, 15, 19, 21, 22, 39, 41, 45, 47, 58, 67, 68, 69, 70, 71, 72, 81, 85, 89, 92, 95, 98, 103, 106, 111, 112, 113, 114, 115, 119, 126, 134, 136, 137, 142, 144, 146, 151, 160, 170, 172, 176, 177, 180, 181, 183, 194, 195, 201, 206, 209, 210, 211, 217, 222, 225, 226, 227, 228, 229, 230, 239, 240, 260, 263, 264, 265, 266, 272, 409, 416, 477, 478, 556, 557, 697, 699, 701, 713, 723, 745, 767, 768, 777, 778, 783, 784, 788, 793, 797, 800, 805, 807, 810, 878], "figsiz": [4, 12, 15, 19, 22, 45, 47, 69, 72, 95, 111, 112, 113, 114, 119, 126, 134, 136, 144, 160, 176, 183, 194, 201, 206, 209, 210, 222, 225, 226, 228, 229, 230, 239, 240, 557, 790, 791], "20": [4, 5, 9, 11, 12, 13, 14, 15, 19, 22, 28, 33, 34, 35, 37, 45, 46, 47, 48, 54, 55, 56, 59, 60, 61, 69, 73, 75, 80, 81, 87, 89, 99, 102, 103, 105, 106, 107, 108, 111, 112, 113, 114, 115, 120, 126, 127, 129, 132, 137, 140, 142, 143, 150, 151, 152, 157, 159, 166, 169, 170, 171, 172, 176, 177, 179, 181, 183, 184, 185, 187, 191, 194, 195, 198, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 214, 217, 220, 222, 225, 226, 227, 229, 230, 233, 234, 235, 238, 240, 243, 244, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 296, 297, 307, 311, 316, 323, 329, 340, 341, 342, 343, 344, 346, 359, 364, 408, 409, 416, 434, 444, 452, 472, 474, 475, 477, 478, 485, 513, 517, 524, 525, 526, 527, 531, 535, 539, 540, 541, 549, 556, 557, 566, 571, 576, 583, 607, 612, 642, 645, 646, 661, 663, 685, 686, 697, 698, 699, 700, 701, 714, 749, 761, 762, 763, 769, 774, 775, 777, 779, 780, 781, 783, 784, 785, 788, 795, 797, 798, 799, 800, 801, 803, 805, 807, 808, 836, 853, 854, 857, 860], "cmap": [4, 9, 10, 13, 15, 16, 19, 22, 41, 69, 99, 100, 106, 108, 111, 113, 114, 115, 119, 134, 136, 143, 160, 182, 194, 195, 209, 225, 227, 228, 229, 230, 239, 260, 263, 264, 265, 266, 272, 409, 416, 477, 478, 556, 557, 571, 697, 698, 699, 701, 760, 762, 769, 771, 776, 777, 781, 784, 787, 788, 797, 800, 805, 806, 807], "magma": 4, "consider": [4, 80, 98, 151, 200, 201, 204, 211, 221, 230, 243, 273, 683, 844, 860, 866, 878], "chosen": [4, 45, 137, 145, 151, 198, 201, 203, 204, 206, 238, 257, 260, 263, 264, 265, 266, 271, 272, 276, 277, 279, 357, 409, 411, 416, 420, 422, 445, 447, 448, 467, 477, 478, 510, 532, 556, 557, 571, 583, 602, 649, 650, 684, 685, 687, 688, 697, 698, 699, 700, 701, 745, 761, 762, 771, 775, 777, 781, 784, 788, 791, 797, 798, 799, 800, 801, 805, 807, 860], "test": [4, 8, 10, 13, 15, 16, 19, 26, 27, 89, 94, 97, 101, 111, 122, 127, 135, 140, 151, 165, 168, 171, 172, 188, 194, 195, 208, 209, 214, 226, 227, 228, 231, 232, 235, 236, 237, 240, 243, 263, 264, 265, 266, 268, 274, 275, 276, 288, 290, 296, 317, 359, 384, 412, 413, 426, 430, 432, 448, 477, 478, 486, 505, 508, 523, 524, 532, 538, 548, 554, 557, 576, 585, 612, 625, 627, 669, 675, 677, 679, 681, 684, 685, 686, 687, 688, 689, 690, 691, 697, 699, 700, 701, 727, 745, 753, 766, 769, 777, 784, 791, 805, 835, 838, 841, 842, 857, 860, 866, 878], "interpol": [4, 15, 24, 27, 32, 60, 69, 76, 84, 86, 89, 92, 93, 94, 118, 134, 135, 136, 151, 177, 181, 188, 195, 204, 209, 222, 225, 238, 260, 263, 264, 265, 266, 272, 276, 278, 279, 409, 416, 443, 466, 477, 478, 556, 557, 571, 575, 579, 584, 615, 646, 648, 649, 650, 662, 697, 699, 701, 733, 745, 762, 777, 784, 788, 797, 800, 805, 807, 844, 878], "miss": [4, 44, 68, 83, 134, 135, 151, 158, 159, 180, 183, 188, 190, 201, 207, 240, 263, 264, 265, 266, 268, 276, 315, 338, 385, 401, 415, 477, 478, 485, 492, 497, 548, 585, 683, 778, 779, 833, 837, 841, 842, 844, 845, 863, 866, 878], "drop": [4, 8, 9, 11, 12, 16, 18, 21, 32, 33, 34, 42, 46, 49, 70, 71, 95, 96, 99, 102, 106, 109, 111, 112, 113, 116, 120, 127, 135, 136, 137, 141, 142, 144, 145, 146, 151, 152, 162, 166, 167, 172, 177, 180, 182, 183, 185, 191, 198, 199, 200, 203, 204, 206, 207, 210, 216, 221, 222, 227, 228, 229, 230, 233, 235, 239, 257, 258, 260, 263, 264, 265, 266, 270, 271, 273, 274, 277, 278, 279, 313, 316, 434, 435, 442, 466, 477, 478, 490, 557, 569, 570, 573, 586, 609, 611, 639, 697, 698, 699, 700, 701, 774, 775, 788, 790, 837, 840, 860, 878], "furthermor": [4, 155, 175, 178, 189, 203, 853, 860, 863], "mark": [4, 8, 11, 49, 73, 77, 78, 82, 91, 92, 110, 119, 125, 126, 135, 137, 142, 144, 150, 151, 166, 169, 170, 172, 178, 189, 190, 191, 200, 201, 204, 205, 207, 208, 209, 210, 214, 216, 217, 230, 243, 256, 258, 263, 264, 265, 266, 313, 370, 379, 386, 401, 402, 466, 468, 476, 477, 478, 556, 557, 562, 565, 571, 575, 576, 584, 585, 593, 600, 609, 611, 639, 697, 699, 700, 701, 741, 765, 775, 777, 784, 789, 791, 798, 799, 805, 833, 837, 854, 855, 878], "exg": 4, "prefix": [4, 73, 155, 170, 175, 255, 260, 263, 264, 265, 266, 272, 354, 355, 409, 416, 469, 477, 478, 485, 492, 493, 556, 557, 571, 609, 697, 699, 701, 762, 784, 788, 797, 800, 805, 833], "interpolate_bad": [4, 69, 77, 199, 263, 264, 265, 266, 466, 477, 478, 860, 878], "reset_bad": [4, 77, 199, 263, 264, 265, 266, 477, 478, 860], "drop_channel": [4, 42, 69, 136, 140, 149, 214, 230, 263, 264, 265, 266, 477, 478, 697, 699, 700, 701, 864, 878], "exg1": 4, "exg2": 4, "exg3": 4, "exg4": 4, "radiu": [4, 5, 24, 26, 41, 45, 50, 69, 70, 77, 79, 92, 93, 108, 134, 151, 156, 158, 159, 170, 176, 181, 182, 183, 184, 185, 199, 206, 207, 209, 221, 260, 263, 264, 265, 266, 272, 301, 304, 311, 325, 327, 329, 409, 416, 429, 467, 477, 478, 510, 521, 539, 556, 557, 566, 571, 646, 649, 692, 697, 699, 701, 762, 769, 777, 779, 781, 784, 785, 788, 795, 797, 799, 800, 801, 805, 807, 860, 878], "95": [4, 5, 7, 13, 19, 34, 47, 50, 69, 74, 78, 79, 80, 89, 108, 111, 112, 113, 120, 134, 136, 142, 143, 145, 146, 151, 156, 158, 160, 169, 171, 179, 184, 194, 195, 200, 208, 209, 210, 225, 226, 229, 230, 243, 263, 264, 265, 266, 557, 571, 657, 676, 697, 769, 785, 790, 806, 860], "113": [4, 20, 35, 56, 111, 169, 174, 208, 215, 219, 229, 230, 243], "524face": 4, "To": [4, 5, 11, 18, 19, 22, 33, 44, 45, 87, 89, 93, 94, 112, 115, 126, 132, 134, 137, 140, 142, 144, 146, 149, 150, 151, 156, 158, 159, 160, 161, 166, 168, 169, 170, 171, 172, 175, 178, 180, 184, 188, 190, 191, 194, 195, 199, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 214, 216, 217, 220, 222, 225, 227, 229, 230, 234, 235, 239, 255, 257, 258, 263, 264, 265, 266, 269, 273, 278, 279, 296, 297, 353, 357, 358, 415, 422, 433, 439, 440, 441, 442, 444, 450, 477, 478, 485, 490, 506, 510, 514, 520, 557, 573, 576, 578, 582, 583, 585, 600, 602, 617, 643, 646, 649, 650, 651, 657, 660, 661, 663, 684, 685, 686, 687, 688, 690, 703, 706, 722, 724, 725, 726, 727, 728, 729, 743, 745, 762, 775, 788, 790, 792, 798, 809, 810, 825, 835, 836, 837, 840, 841, 842, 843, 845, 852, 853, 854, 855, 857, 859, 860, 864, 878], "predict": [4, 10, 12, 13, 15, 16, 17, 20, 27, 42, 100, 137, 141, 176, 194, 195, 243, 268, 296, 311, 327, 372, 412, 413, 415, 419, 421, 426, 449, 478, 525, 532, 807, 854, 878], "brain": [4, 5, 7, 8, 10, 11, 15, 19, 21, 22, 24, 26, 27, 28, 29, 31, 32, 33, 35, 38, 40, 41, 42, 43, 44, 46, 54, 58, 59, 60, 69, 78, 81, 87, 93, 103, 108, 114, 121, 125, 129, 134, 135, 146, 151, 155, 156, 158, 162, 170, 175, 176, 177, 178, 179, 181, 182, 184, 188, 189, 190, 191, 195, 198, 203, 204, 206, 207, 222, 225, 233, 234, 235, 240, 243, 254, 255, 261, 263, 264, 265, 266, 268, 270, 271, 274, 275, 276, 277, 278, 279, 289, 296, 297, 302, 330, 359, 371, 379, 409, 415, 417, 443, 448, 461, 475, 477, 478, 487, 497, 512, 516, 521, 523, 524, 538, 544, 554, 555, 558, 562, 572, 582, 584, 607, 615, 625, 630, 635, 646, 662, 686, 697, 699, 700, 701, 754, 756, 759, 761, 763, 764, 767, 773, 803, 804, 808, 809, 813, 815, 818, 833, 835, 837, 838, 843, 844, 853, 854, 857, 860, 865, 866, 868, 878], "purpos": [4, 8, 11, 12, 21, 112, 140, 141, 149, 156, 168, 180, 189, 198, 199, 200, 201, 204, 205, 207, 229, 233, 235, 240, 243, 263, 264, 376, 377, 378, 379, 381, 382, 384, 389, 392, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 420, 422, 477, 478, 761, 775, 798, 833, 844, 853, 854, 859, 862, 863, 864], "intercept": [4, 100, 682], "predictor_var": 4, "where": [4, 10, 13, 31, 45, 67, 69, 73, 78, 80, 81, 82, 89, 93, 94, 100, 111, 134, 137, 140, 141, 142, 144, 149, 151, 155, 160, 165, 166, 167, 168, 169, 170, 172, 175, 182, 183, 184, 188, 190, 191, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 214, 216, 220, 221, 222, 225, 227, 229, 230, 233, 234, 235, 240, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 270, 271, 272, 273, 274, 276, 277, 278, 279, 318, 320, 321, 322, 334, 352, 371, 376, 377, 378, 379, 381, 382, 384, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 416, 422, 424, 443, 445, 448, 450, 469, 477, 478, 510, 532, 556, 557, 559, 566, 571, 573, 574, 575, 585, 647, 653, 654, 655, 656, 657, 659, 661, 662, 677, 678, 683, 684, 685, 687, 688, 697, 699, 700, 701, 725, 728, 745, 750, 762, 763, 766, 767, 768, 775, 776, 777, 784, 788, 797, 798, 799, 800, 805, 807, 811, 833, 837, 838, 840, 841, 842, 843, 853, 854, 857, 859, 860, 863, 878], "func": [4, 209, 270, 271, 274, 277, 278, 279, 485, 492, 499, 837, 878], "reg": [4, 8, 9, 12, 21, 34, 49, 134, 180, 222, 296, 297, 409, 416, 417, 558, 860, 878], "design_matrix": [4, 141, 682], "25728": 4, "target": [4, 17, 20, 27, 49, 76, 84, 100, 127, 141, 161, 195, 202, 204, 225, 226, 240, 263, 265, 266, 268, 408, 409, 410, 411, 412, 413, 414, 416, 417, 419, 420, 421, 422, 426, 435, 477, 490, 518, 554, 557, 558, 612, 837, 878], "regressor": [4, 68, 100, 195, 225, 682], "within": [4, 5, 16, 24, 38, 41, 45, 47, 50, 61, 68, 93, 107, 108, 111, 119, 120, 126, 127, 135, 140, 141, 144, 151, 155, 156, 158, 160, 161, 165, 166, 168, 172, 175, 176, 178, 181, 183, 184, 185, 198, 201, 204, 205, 207, 209, 216, 221, 225, 236, 240, 243, 256, 260, 263, 264, 265, 266, 270, 271, 272, 274, 277, 278, 279, 281, 306, 313, 372, 384, 409, 414, 416, 433, 435, 438, 443, 461, 467, 477, 478, 530, 531, 540, 556, 557, 571, 684, 685, 687, 688, 692, 697, 699, 701, 704, 707, 715, 726, 729, 742, 762, 776, 777, 784, 785, 788, 797, 800, 804, 805, 807, 833, 835, 837, 842, 843, 848, 857, 859, 860, 866, 878], "object": [4, 9, 10, 18, 19, 27, 30, 31, 32, 33, 34, 36, 47, 54, 55, 56, 60, 63, 77, 93, 98, 100, 102, 103, 108, 111, 112, 113, 126, 131, 134, 141, 144, 146, 151, 155, 157, 160, 161, 162, 165, 166, 167, 170, 171, 172, 175, 181, 182, 188, 189, 190, 191, 195, 198, 199, 200, 202, 204, 205, 206, 207, 209, 210, 215, 218, 219, 222, 226, 233, 239, 240, 243, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 282, 283, 284, 287, 289, 290, 291, 294, 296, 297, 298, 301, 302, 304, 305, 309, 310, 311, 313, 316, 317, 318, 319, 320, 323, 325, 326, 339, 341, 343, 348, 352, 353, 356, 357, 358, 359, 360, 364, 368, 369, 370, 372, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 421, 422, 423, 425, 426, 427, 428, 434, 438, 443, 450, 451, 453, 455, 460, 469, 472, 474, 475, 476, 477, 478, 479, 482, 483, 484, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 510, 513, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 531, 533, 534, 535, 539, 546, 553, 554, 556, 557, 558, 559, 560, 568, 571, 572, 573, 580, 582, 584, 590, 591, 598, 603, 607, 608, 610, 614, 615, 616, 619, 625, 632, 633, 646, 647, 661, 662, 665, 674, 682, 683, 689, 693, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 714, 717, 718, 719, 724, 725, 726, 727, 728, 729, 730, 732, 734, 744, 745, 746, 751, 754, 756, 758, 759, 761, 762, 765, 766, 769, 770, 771, 772, 775, 776, 777, 778, 779, 780, 781, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 795, 797, 798, 799, 800, 801, 802, 805, 807, 812, 813, 818, 824, 827, 833, 837, 853, 855, 860, 862, 864, 868, 876, 878], "multipl": [4, 16, 40, 44, 45, 51, 92, 95, 96, 100, 102, 111, 119, 140, 144, 149, 150, 159, 160, 166, 172, 175, 190, 194, 199, 201, 202, 204, 205, 207, 214, 215, 216, 226, 230, 233, 234, 235, 240, 243, 257, 261, 262, 263, 264, 265, 266, 270, 271, 273, 274, 276, 277, 278, 279, 299, 316, 353, 359, 384, 411, 420, 422, 432, 434, 436, 445, 446, 447, 450, 453, 459, 474, 475, 477, 478, 490, 500, 519, 533, 534, 539, 544, 557, 574, 578, 585, 589, 607, 615, 639, 642, 646, 675, 681, 685, 686, 697, 698, 700, 709, 712, 719, 720, 725, 728, 745, 759, 769, 776, 779, 782, 785, 788, 790, 792, 798, 803, 804, 806, 808, 833, 837, 854, 860, 866, 868, 875, 878], "list": [4, 9, 10, 11, 16, 28, 41, 43, 47, 68, 83, 93, 102, 103, 110, 111, 112, 114, 115, 116, 126, 131, 137, 140, 144, 145, 149, 150, 151, 161, 166, 168, 169, 170, 171, 172, 175, 177, 183, 185, 188, 191, 199, 200, 201, 204, 205, 206, 209, 210, 214, 216, 217, 220, 221, 222, 225, 226, 229, 230, 234, 235, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 285, 286, 288, 289, 290, 291, 294, 296, 297, 299, 302, 304, 305, 309, 311, 312, 313, 316, 317, 318, 320, 321, 322, 323, 325, 326, 328, 336, 337, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 364, 366, 368, 369, 370, 372, 379, 384, 390, 392, 401, 402, 409, 411, 415, 416, 419, 421, 424, 425, 426, 428, 430, 431, 432, 433, 434, 436, 440, 441, 443, 444, 447, 448, 450, 451, 455, 457, 459, 461, 462, 463, 464, 465, 466, 467, 472, 473, 474, 475, 476, 477, 478, 481, 485, 487, 489, 492, 493, 494, 499, 500, 501, 503, 508, 512, 514, 515, 516, 519, 522, 526, 528, 531, 533, 534, 543, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 578, 579, 582, 584, 585, 586, 591, 593, 596, 600, 602, 605, 607, 609, 611, 612, 615, 616, 617, 620, 623, 630, 632, 638, 639, 642, 646, 647, 660, 663, 664, 665, 666, 674, 677, 678, 680, 682, 683, 684, 685, 687, 688, 689, 692, 693, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 713, 714, 719, 722, 723, 728, 730, 731, 742, 744, 745, 746, 749, 750, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 799, 800, 801, 803, 804, 805, 807, 808, 809, 821, 824, 828, 829, 833, 837, 840, 844, 845, 848, 852, 853, 857, 859, 860, 861, 863, 866, 878], "field": [4, 5, 7, 17, 20, 22, 26, 27, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 68, 77, 79, 80, 89, 93, 108, 112, 116, 118, 120, 123, 127, 130, 142, 144, 149, 156, 158, 159, 162, 165, 166, 169, 176, 177, 178, 179, 182, 183, 188, 189, 191, 195, 196, 197, 198, 199, 203, 204, 205, 206, 207, 208, 209, 211, 214, 216, 217, 220, 222, 230, 243, 249, 256, 260, 263, 264, 265, 266, 268, 296, 297, 311, 318, 327, 372, 415, 421, 441, 449, 452, 477, 478, 479, 489, 496, 516, 524, 525, 571, 585, 593, 610, 614, 617, 642, 683, 726, 729, 745, 762, 769, 776, 779, 780, 782, 784, 785, 787, 806, 807, 815, 833, 838, 853, 854, 857, 866, 878], "getattr": [4, 713, 723], "_field": [4, 141], "beta": [4, 12, 19, 32, 33, 34, 93, 100, 109, 111, 112, 114, 137, 141, 225, 239, 263, 264, 265, 266, 477, 478, 600, 682, 699, 701, 777], "stderr": [4, 141, 682], "t_val": [4, 141, 226, 682], "p_val": [4, 100, 141, 227, 228, 678, 682, 878], "mlog10_p_val": [4, 141, 682, 878], "just": [4, 5, 28, 32, 33, 41, 42, 44, 48, 50, 59, 69, 73, 81, 82, 100, 102, 108, 112, 113, 114, 119, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 151, 156, 158, 160, 161, 162, 165, 166, 168, 169, 170, 171, 172, 177, 179, 180, 181, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 215, 216, 217, 222, 226, 227, 230, 233, 234, 235, 239, 240, 260, 263, 264, 265, 266, 270, 271, 272, 274, 276, 277, 278, 279, 311, 409, 416, 443, 444, 477, 478, 493, 532, 556, 557, 567, 571, 584, 609, 697, 699, 701, 741, 762, 769, 775, 777, 779, 781, 784, 785, 788, 792, 795, 797, 798, 799, 800, 801, 805, 807, 815, 835, 837, 845, 855, 860, 863, 878], "would": [4, 5, 19, 43, 44, 69, 78, 140, 143, 144, 150, 151, 155, 156, 160, 161, 172, 175, 181, 190, 191, 195, 198, 200, 201, 202, 203, 204, 205, 206, 209, 220, 225, 226, 227, 230, 233, 235, 240, 263, 264, 265, 266, 270, 271, 274, 276, 277, 278, 279, 289, 296, 297, 353, 357, 358, 368, 369, 370, 379, 384, 401, 402, 409, 416, 430, 431, 432, 444, 452, 453, 459, 472, 474, 475, 477, 478, 492, 514, 522, 535, 557, 568, 585, 634, 697, 700, 745, 779, 784, 785, 798, 833, 843, 859, 860, 866, 878], "higher": [4, 26, 38, 44, 54, 68, 73, 78, 93, 141, 151, 184, 195, 198, 200, 202, 204, 209, 221, 227, 230, 240, 273, 585, 713, 723, 835, 837, 841, 842, 860, 878], "better": [4, 9, 19, 43, 60, 69, 78, 93, 142, 146, 151, 183, 184, 194, 201, 203, 204, 209, 225, 243, 265, 266, 270, 271, 274, 277, 278, 279, 408, 571, 582, 585, 711, 713, 723, 727, 745, 803, 808, 835, 837, 860, 878], "visibl": [4, 47, 78, 126, 172, 191, 201, 202, 208, 216, 217, 240, 263, 264, 265, 266, 477, 478, 557, 638, 697, 745, 775, 781, 792, 798, 833, 878], "neg": [4, 19, 22, 39, 70, 111, 113, 144, 150, 151, 162, 188, 191, 202, 204, 211, 225, 233, 240, 260, 261, 262, 263, 264, 265, 266, 270, 271, 272, 273, 274, 277, 278, 279, 285, 305, 409, 415, 416, 421, 428, 437, 451, 477, 478, 501, 556, 557, 578, 583, 655, 656, 681, 697, 699, 700, 701, 764, 769, 775, 777, 784, 788, 797, 798, 800, 803, 805, 809, 854, 857, 860, 863, 878], "around": [4, 49, 69, 74, 82, 93, 111, 141, 142, 144, 146, 151, 165, 166, 171, 172, 180, 183, 191, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 214, 220, 240, 263, 264, 265, 266, 273, 357, 409, 416, 428, 433, 435, 477, 478, 510, 557, 569, 570, 573, 574, 602, 659, 697, 699, 700, 701, 769, 775, 781, 784, 785, 792, 798, 833, 835, 843], "200": [4, 9, 12, 13, 47, 59, 74, 80, 89, 91, 94, 98, 108, 110, 113, 126, 130, 135, 136, 142, 145, 146, 151, 158, 169, 172, 179, 181, 183, 191, 195, 200, 202, 205, 206, 220, 225, 228, 229, 230, 235, 239, 243, 340, 342, 346, 448, 477, 478, 530, 531, 557, 583, 844, 853, 860, 863, 866, 878], "follow": [4, 24, 27, 32, 33, 34, 41, 42, 68, 69, 79, 93, 102, 106, 108, 112, 115, 127, 134, 135, 137, 141, 144, 151, 155, 158, 160, 161, 162, 168, 170, 172, 178, 180, 188, 189, 190, 195, 200, 201, 202, 203, 207, 209, 211, 214, 215, 216, 220, 222, 225, 227, 229, 233, 235, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 286, 287, 296, 297, 301, 302, 353, 364, 369, 384, 401, 409, 433, 435, 436, 447, 448, 449, 453, 476, 477, 478, 479, 483, 485, 492, 520, 523, 540, 541, 557, 573, 576, 585, 586, 615, 625, 643, 678, 680, 682, 697, 699, 700, 701, 713, 723, 724, 727, 728, 732, 735, 741, 745, 758, 769, 777, 782, 805, 833, 835, 836, 839, 841, 842, 843, 853, 854, 856, 857, 860, 863, 864, 878], "onset": [4, 8, 33, 34, 116, 135, 136, 137, 140, 144, 146, 166, 168, 191, 200, 201, 203, 216, 240, 256, 257, 263, 264, 353, 438, 450, 477, 478, 560, 603, 702, 703, 704, 833, 878], "23": [4, 8, 11, 13, 19, 28, 34, 35, 38, 45, 47, 56, 59, 64, 65, 69, 73, 80, 81, 84, 102, 107, 108, 111, 113, 118, 122, 125, 129, 133, 137, 144, 145, 148, 151, 152, 154, 158, 169, 171, 183, 184, 185, 191, 194, 195, 197, 204, 208, 225, 226, 227, 229, 230, 233, 234, 235, 238, 240, 242, 243, 257, 261, 262, 263, 264, 265, 266, 268, 270, 271, 273, 274, 276, 277, 278, 279, 296, 345, 357, 368, 369, 379, 386, 387, 401, 402, 433, 468, 477, 478, 485, 517, 557, 568, 605, 615, 697, 699, 700, 701, 745, 774, 779, 789, 824, 854, 860], "correspond": [4, 16, 31, 48, 50, 61, 71, 75, 87, 91, 93, 102, 111, 119, 134, 137, 143, 144, 151, 155, 156, 158, 160, 168, 170, 172, 175, 180, 181, 182, 188, 191, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 214, 215, 216, 217, 227, 229, 230, 235, 240, 256, 258, 260, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 288, 296, 297, 299, 303, 311, 321, 322, 324, 334, 353, 357, 358, 361, 368, 369, 370, 379, 384, 401, 402, 409, 410, 412, 413, 415, 416, 419, 421, 425, 433, 438, 452, 453, 454, 462, 472, 474, 475, 477, 478, 485, 487, 489, 492, 496, 499, 501, 506, 510, 514, 516, 519, 521, 522, 533, 534, 535, 556, 557, 558, 571, 573, 576, 577, 610, 611, 614, 625, 638, 642, 646, 649, 662, 677, 678, 681, 682, 683, 684, 685, 687, 688, 689, 697, 698, 699, 700, 701, 709, 710, 716, 735, 736, 738, 745, 748, 756, 758, 762, 763, 764, 769, 775, 776, 777, 779, 781, 783, 784, 785, 788, 797, 798, 800, 803, 805, 807, 808, 809, 818, 833, 837, 843, 854, 857, 860, 863, 878], "unit": [4, 8, 14, 19, 21, 32, 82, 99, 102, 126, 135, 136, 141, 156, 160, 168, 169, 180, 189, 190, 199, 204, 206, 209, 214, 222, 227, 228, 230, 238, 239, 243, 258, 260, 261, 262, 263, 264, 265, 266, 268, 272, 274, 296, 297, 304, 312, 329, 334, 336, 338, 358, 364, 372, 409, 411, 416, 418, 420, 430, 445, 447, 448, 453, 476, 477, 478, 485, 487, 492, 493, 501, 557, 568, 573, 576, 585, 609, 647, 689, 697, 699, 701, 736, 738, 745, 769, 776, 777, 779, 781, 784, 785, 797, 799, 805, 806, 813, 833, 837, 863, 878], "scale": [4, 5, 10, 16, 19, 22, 27, 28, 29, 30, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 54, 55, 57, 58, 59, 60, 65, 69, 73, 76, 84, 89, 93, 99, 100, 102, 103, 106, 107, 108, 109, 113, 114, 115, 118, 126, 132, 136, 137, 141, 142, 149, 151, 156, 157, 160, 166, 177, 178, 179, 180, 181, 182, 183, 190, 191, 194, 195, 201, 203, 204, 206, 207, 217, 221, 222, 233, 235, 239, 240, 243, 255, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 277, 278, 279, 296, 297, 311, 315, 324, 327, 337, 352, 353, 357, 358, 364, 368, 369, 370, 409, 416, 418, 430, 432, 443, 452, 453, 468, 469, 471, 472, 474, 475, 477, 478, 483, 487, 530, 531, 535, 537, 540, 541, 548, 556, 557, 567, 568, 576, 585, 615, 634, 635, 636, 637, 649, 650, 661, 664, 697, 699, 700, 701, 709, 734, 735, 745, 758, 760, 762, 769, 773, 775, 776, 777, 779, 781, 783, 784, 785, 786, 788, 793, 797, 798, 799, 800, 804, 805, 806, 808, 810, 833, 851, 878], "keep": [4, 11, 12, 27, 31, 60, 87, 103, 109, 110, 111, 137, 142, 145, 149, 151, 160, 161, 162, 165, 166, 169, 181, 199, 200, 201, 202, 203, 204, 214, 215, 216, 220, 227, 255, 260, 263, 264, 265, 266, 290, 291, 294, 297, 370, 415, 433, 477, 478, 488, 526, 528, 531, 557, 586, 698, 709, 837, 845, 855, 859, 878], "avoid": [4, 8, 9, 28, 40, 59, 69, 87, 113, 137, 140, 151, 161, 166, 167, 169, 172, 183, 189, 191, 198, 201, 202, 206, 214, 216, 225, 238, 243, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 274, 277, 278, 279, 353, 426, 438, 477, 478, 485, 492, 499, 537, 557, 619, 625, 657, 660, 663, 679, 690, 691, 697, 700, 745, 803, 808, 835, 841, 855, 857, 859, 860, 878], "convers": [4, 156, 168, 189, 191, 199, 201, 202, 263, 264, 265, 266, 268, 270, 271, 274, 277, 278, 279, 477, 478, 501, 594, 684, 685, 687, 688, 697, 700, 860, 863, 878], "micro": [4, 27, 76, 84, 263, 264, 265, 266, 268, 311, 315, 324, 469, 477, 478, 483, 734, 745, 810, 878], "volt": [4, 141, 204, 206, 220, 263, 264, 265, 266, 442, 477, 478, 860, 878], "topomap_arg": [4, 69, 100, 195, 210, 226, 265, 266, 557, 697, 765, 782, 790, 878], "set_ylabel": [4, 12, 13, 21, 22, 45, 69, 95, 103, 111, 112, 114, 132, 144, 172, 183, 195, 201, 205, 228, 229, 230, 240], "systemat": [4, 141, 162, 201, 243, 412, 575, 857, 878], "larg": [4, 10, 28, 69, 74, 79, 82, 83, 113, 119, 136, 142, 150, 151, 167, 172, 178, 195, 198, 199, 201, 202, 203, 205, 206, 207, 210, 211, 217, 225, 230, 233, 240, 243, 263, 264, 269, 296, 353, 357, 358, 362, 418, 448, 476, 477, 478, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 517, 537, 557, 559, 684, 685, 687, 688, 745, 763, 810, 841, 855, 878], "consist": [4, 10, 43, 69, 75, 111, 122, 157, 158, 161, 168, 170, 175, 183, 189, 190, 191, 195, 199, 200, 201, 203, 204, 208, 225, 227, 228, 243, 255, 263, 264, 265, 266, 276, 280, 320, 367, 477, 478, 557, 565, 571, 575, 649, 650, 682, 697, 699, 700, 701, 702, 703, 704, 833, 853, 854, 859, 860, 866, 878], "guillaum": [4, 15, 87, 151, 157, 195, 201, 225, 243, 558, 690, 691, 854, 865, 878], "rousselet": [4, 151, 201, 243, 854], "2016": [4, 19, 46, 82, 112, 125, 194, 201, 243, 386, 387, 415, 474, 475, 557, 854], "7488": [4, 243], "1556": [4, 243], "carl": [4, 125, 243, 386, 854], "gaspar": [4, 243, 854], "cyril": [4, 243, 854], "r": [4, 8, 10, 12, 19, 21, 28, 37, 39, 41, 43, 49, 69, 80, 81, 95, 96, 98, 114, 126, 136, 137, 141, 145, 156, 160, 166, 176, 180, 181, 183, 184, 185, 194, 195, 199, 201, 203, 204, 206, 210, 211, 215, 221, 225, 229, 230, 235, 240, 243, 255, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 274, 275, 277, 278, 279, 299, 359, 379, 409, 415, 416, 444, 477, 478, 509, 524, 532, 556, 557, 566, 569, 571, 573, 577, 657, 681, 684, 685, 690, 691, 697, 699, 700, 701, 726, 729, 745, 762, 763, 769, 773, 777, 784, 788, 793, 797, 800, 805, 807, 833, 835, 837, 854, 860, 863, 878], "pernet": [4, 243, 854], "jess": [4, 243, 854], "husk": [4, 243, 854], "patrick": [4, 243, 854, 860], "j": [4, 8, 12, 13, 18, 19, 21, 31, 35, 42, 44, 59, 65, 69, 70, 73, 74, 82, 93, 98, 100, 112, 120, 125, 137, 144, 151, 155, 160, 162, 172, 178, 180, 194, 195, 201, 203, 204, 205, 206, 211, 225, 226, 230, 238, 243, 255, 263, 264, 265, 266, 269, 273, 274, 275, 296, 299, 353, 359, 379, 387, 392, 402, 409, 413, 415, 416, 417, 427, 472, 475, 477, 478, 524, 525, 532, 535, 539, 556, 557, 565, 566, 571, 583, 589, 592, 654, 657, 659, 683, 684, 685, 687, 688, 690, 691, 699, 701, 709, 711, 713, 715, 723, 726, 727, 729, 852, 854, 857, 860, 878], "bennett": [4, 243, 854], "allison": [4, 243, 854], "sekul": [4, 243, 854], "healthi": [4, 243, 401, 402, 854, 866], "ag": [4, 112, 137, 189, 243, 263, 264, 265, 266, 387, 402, 477, 478, 479, 662, 854, 868, 878], "scalp": [4, 19, 27, 69, 70, 74, 77, 121, 129, 134, 142, 144, 149, 151, 155, 156, 158, 166, 170, 183, 184, 185, 190, 198, 199, 204, 206, 207, 209, 210, 211, 217, 220, 238, 243, 255, 263, 264, 265, 266, 268, 307, 428, 468, 477, 478, 521, 557, 566, 589, 630, 642, 699, 701, 745, 761, 777, 799, 813, 833, 838, 841, 844, 853, 854, 857, 860, 863, 878], "sensit": [4, 5, 7, 23, 25, 27, 81, 121, 129, 151, 158, 178, 202, 206, 211, 229, 235, 243, 263, 264, 265, 266, 267, 268, 273, 274, 276, 363, 453, 477, 478, 554, 557, 617, 623, 638, 665, 684, 685, 687, 688, 745, 789, 854, 859, 878], "frontier": [4, 10, 19, 134, 151, 194, 201, 243, 415, 562, 852, 854], "psychologi": [4, 10, 151, 201, 243, 679, 854], "19": [4, 9, 11, 13, 19, 28, 34, 35, 41, 42, 45, 47, 58, 64, 70, 72, 75, 80, 82, 84, 89, 92, 93, 102, 107, 108, 111, 113, 126, 140, 141, 146, 151, 157, 158, 166, 167, 168, 169, 171, 172, 174, 178, 179, 180, 181, 182, 183, 184, 185, 187, 191, 194, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 214, 215, 216, 217, 222, 225, 226, 227, 229, 230, 233, 234, 235, 238, 242, 243, 257, 258, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 274, 276, 277, 278, 279, 303, 305, 308, 327, 428, 472, 477, 478, 516, 520, 550, 556, 557, 642, 692, 697, 700, 716, 761, 764, 769, 770, 773, 775, 792, 798, 809, 819, 835, 836, 854, 860], "14": [4, 5, 8, 9, 11, 13, 16, 19, 21, 22, 25, 28, 32, 33, 34, 35, 43, 45, 46, 47, 48, 49, 54, 55, 58, 61, 65, 66, 79, 80, 82, 92, 93, 102, 106, 107, 108, 111, 113, 119, 120, 122, 140, 145, 148, 150, 152, 157, 158, 162, 168, 169, 171, 172, 175, 177, 178, 179, 180, 183, 185, 191, 194, 195, 201, 206, 208, 209, 220, 222, 225, 226, 227, 229, 230, 232, 233, 234, 235, 237, 240, 243, 254, 261, 263, 264, 265, 266, 276, 305, 358, 379, 410, 411, 415, 420, 425, 444, 445, 447, 477, 478, 494, 505, 557, 573, 574, 589, 697, 715, 716, 724, 725, 745, 773, 775, 786, 793, 801, 854, 860], "2010": [4, 93, 116, 155, 201, 243, 296, 353, 409, 726, 729, 854, 878], "3389": [4, 10, 19, 134, 151, 194, 201, 243, 415, 562, 852, 854], "fpsyg": [4, 151, 201, 243, 854], "00019": [4, 243, 854], "parametr": [4, 68, 93, 112, 165, 166, 230, 231, 232, 243, 263, 265, 266, 268, 317, 352, 450, 477, 524, 554, 557, 612, 632, 676, 677, 684, 685, 687, 688, 690, 691, 700, 727, 769, 790, 833, 875, 878], "studi": [4, 33, 69, 120, 144, 151, 161, 178, 180, 201, 203, 209, 222, 227, 229, 230, 243, 289, 296, 401, 402, 433, 833, 853, 860, 878], "bmc": [4, 16, 195, 243, 410, 425], "98": [4, 13, 15, 19, 33, 35, 42, 44, 47, 80, 111, 113, 116, 122, 137, 159, 169, 177, 180, 191, 194, 195, 208, 222, 225, 226, 227, 229, 230, 234, 235, 243, 289, 296, 341, 343, 585, 684, 685, 687, 688], "2008": [4, 10, 35, 44, 151, 170, 180, 204, 222, 225, 226, 243, 275, 296, 297, 337, 359, 409, 430, 448, 472, 539, 557, 657, 684, 685, 687, 688], "1186": [4, 16, 195, 208, 243, 410, 425], "1471": [4, 16, 195, 243, 410, 425], "2202": [4, 16, 195, 243, 410, 425], "29": [4, 6, 11, 13, 19, 21, 24, 28, 34, 35, 41, 42, 45, 47, 50, 56, 78, 80, 102, 105, 107, 108, 112, 113, 122, 137, 143, 156, 157, 158, 169, 171, 174, 175, 183, 184, 185, 194, 195, 202, 206, 208, 209, 210, 225, 226, 227, 229, 230, 233, 234, 235, 239, 243, 276, 878], "195": [4, 6, 45, 84, 166, 169, 176, 181, 229, 243], "552": [4, 6, 13, 35, 56, 230], "limo_data": [4, 6], "dataset": [5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 172, 175, 176, 177, 178, 179, 180, 181, 182, 186, 187, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 215, 216, 217, 220, 221, 222, 225, 226, 227, 228, 229, 230, 233, 234, 235, 238, 239, 241, 242, 243, 255, 257, 260, 261, 263, 264, 265, 266, 268, 270, 271, 274, 277, 278, 279, 296, 297, 301, 308, 311, 327, 344, 352, 353, 354, 355, 357, 358, 360, 362, 368, 369, 370, 409, 412, 416, 419, 426, 429, 438, 440, 441, 450, 452, 453, 466, 472, 474, 475, 477, 478, 487, 488, 490, 514, 515, 516, 520, 521, 523, 524, 527, 530, 531, 535, 540, 541, 554, 557, 570, 574, 579, 585, 593, 614, 615, 616, 617, 623, 630, 645, 682, 684, 685, 687, 688, 697, 699, 700, 719, 730, 745, 761, 769, 773, 778, 785, 807, 813, 824, 837, 855, 860, 861, 866, 868, 878], "electr": [5, 166, 180, 198, 206, 207, 243, 296, 297, 557, 565, 765, 833, 838, 853, 863], "stimul": [5, 32, 45, 151, 180, 235, 263, 264, 265, 266, 358, 477, 478, 554, 555, 560, 579, 647, 697, 699, 700, 701, 745, 761, 854, 860, 878], "deliv": 5, "left": [5, 10, 11, 13, 15, 23, 25, 27, 30, 31, 35, 38, 39, 40, 41, 43, 44, 45, 47, 48, 50, 52, 54, 55, 57, 58, 59, 60, 61, 70, 72, 77, 78, 79, 82, 85, 86, 93, 111, 115, 118, 119, 123, 126, 127, 131, 133, 134, 135, 140, 141, 142, 143, 144, 145, 149, 150, 151, 152, 155, 156, 158, 160, 166, 168, 172, 175, 178, 180, 181, 182, 191, 194, 195, 203, 204, 205, 206, 207, 209, 215, 216, 217, 221, 222, 226, 229, 233, 234, 235, 238, 256, 257, 259, 260, 263, 264, 265, 266, 268, 269, 270, 271, 272, 274, 276, 277, 278, 279, 311, 313, 323, 324, 334, 335, 359, 379, 384, 409, 416, 431, 433, 436, 443, 467, 475, 477, 478, 500, 510, 522, 556, 557, 632, 637, 645, 646, 649, 660, 697, 699, 700, 701, 745, 761, 769, 775, 776, 777, 779, 781, 783, 784, 785, 788, 796, 797, 798, 799, 800, 805, 809, 813, 833, 854, 860, 863, 878], "wrist": 5, "somatosensori": [5, 32, 34, 46, 112, 239, 243, 391, 878], "nine": [5, 142], "quspin": 5, "serf": 5, "place": [5, 7, 26, 126, 134, 140, 149, 150, 151, 156, 161, 165, 166, 169, 173, 174, 178, 201, 203, 204, 205, 207, 209, 211, 214, 220, 233, 257, 260, 262, 263, 264, 265, 266, 267, 268, 272, 275, 280, 281, 286, 311, 316, 319, 339, 346, 362, 363, 380, 383, 384, 386, 409, 416, 431, 433, 434, 447, 448, 477, 478, 479, 488, 535, 544, 549, 556, 557, 569, 570, 571, 574, 578, 579, 582, 633, 639, 642, 647, 648, 649, 650, 662, 694, 697, 698, 699, 700, 701, 714, 731, 748, 762, 766, 777, 784, 788, 797, 800, 805, 807, 833, 837, 854, 858, 860, 861, 863, 864, 878], "side": [5, 19, 32, 45, 69, 141, 156, 166, 203, 207, 233, 240, 260, 261, 263, 264, 265, 266, 270, 272, 274, 278, 409, 416, 477, 478, 556, 557, 571, 576, 585, 682, 684, 685, 687, 688, 697, 698, 699, 701, 745, 762, 771, 773, 775, 777, 784, 788, 791, 797, 800, 803, 805, 807, 855, 860, 878], "somatomotor": 5, "custom": [5, 27, 36, 56, 108, 119, 121, 125, 129, 134, 140, 142, 145, 149, 150, 151, 167, 201, 202, 203, 204, 206, 207, 220, 230, 240, 255, 260, 263, 264, 265, 266, 267, 268, 270, 271, 273, 274, 277, 278, 279, 320, 324, 326, 384, 477, 478, 554, 557, 606, 615, 617, 677, 701, 739, 745, 758, 763, 764, 775, 782, 792, 798, 803, 804, 808, 809, 833, 837, 853, 854, 855, 857, 878], "opm_sampl": [5, 108], "subjects_dir": [5, 7, 11, 22, 24, 26, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 54, 55, 58, 59, 60, 67, 78, 80, 89, 93, 94, 103, 108, 114, 115, 117, 123, 124, 125, 126, 130, 133, 134, 135, 136, 150, 155, 156, 157, 158, 159, 160, 161, 166, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 190, 191, 195, 210, 221, 222, 233, 234, 235, 255, 261, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 302, 306, 307, 308, 311, 359, 364, 365, 366, 371, 383, 385, 386, 387, 388, 428, 459, 461, 463, 465, 467, 468, 469, 470, 471, 510, 514, 516, 543, 544, 582, 602, 620, 622, 629, 634, 635, 636, 637, 645, 646, 660, 663, 674, 692, 693, 737, 744, 745, 761, 763, 773, 803, 808, 809, 818, 828, 843, 853, 860, 878], "raw_fnam": [5, 7, 8, 9, 11, 13, 14, 15, 16, 18, 26, 32, 33, 34, 42, 45, 46, 49, 68, 69, 71, 72, 73, 75, 81, 82, 87, 92, 95, 96, 98, 99, 106, 107, 109, 110, 112, 116, 118, 120, 131, 132, 141, 152, 156, 158, 159, 162, 177, 180, 183, 185, 195, 203, 222, 227, 228, 229, 230, 233, 235, 239, 854, 860], "opm_sef_raw": 5, "bem_fnam": [5, 45, 67, 108], "bem": [5, 7, 23, 26, 27, 40, 41, 43, 44, 45, 50, 67, 108, 124, 134, 135, 136, 150, 155, 156, 159, 160, 163, 164, 165, 176, 180, 181, 182, 183, 184, 185, 190, 191, 207, 233, 234, 235, 253, 261, 273, 276, 364, 385, 408, 428, 452, 459, 514, 515, 516, 519, 520, 582, 604, 605, 628, 634, 636, 637, 646, 662, 761, 763, 820, 821, 826, 831, 833, 843, 854, 863, 868, 878], "5120": [5, 7, 26, 41, 45, 50, 67, 108, 150, 158, 159, 176, 181, 182, 255, 408, 514, 520, 662, 853], "sol": [5, 7, 22, 26, 41, 45, 50, 67, 108, 158, 159, 176, 181, 182, 255, 267, 520, 662, 853, 863], "fwd_fname": [5, 22, 31, 35, 40, 46, 51, 59, 67, 89, 91, 92, 93, 94, 180, 191, 222], "fwd": [5, 11, 22, 26, 31, 32, 33, 34, 35, 40, 42, 43, 45, 46, 47, 48, 49, 51, 54, 55, 58, 59, 67, 89, 91, 92, 93, 94, 108, 130, 158, 159, 172, 175, 176, 177, 178, 179, 180, 182, 191, 195, 221, 222, 255, 267, 274, 283, 284, 285, 363, 443, 455, 456, 519, 520, 617, 638, 661, 662, 745, 761, 825, 853, 860], "coil_def_fnam": 5, "coil_def": [5, 108, 854, 860, 863], "dat": [5, 108, 209, 331, 491, 506, 568, 576, 585, 596, 601, 854, 860, 878], "read_raw_fif": [5, 10, 11, 13, 14, 15, 16, 18, 28, 29, 32, 33, 34, 42, 45, 46, 49, 61, 67, 68, 70, 71, 72, 73, 75, 79, 82, 83, 87, 91, 92, 95, 96, 98, 99, 102, 103, 106, 107, 108, 109, 110, 112, 114, 116, 117, 120, 122, 126, 128, 131, 132, 140, 141, 142, 145, 146, 149, 151, 152, 156, 162, 166, 167, 168, 169, 170, 177, 180, 182, 183, 188, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 214, 215, 216, 217, 221, 227, 228, 229, 230, 233, 235, 238, 239, 257, 483, 860, 864, 868, 878], "h_trans_bandwidth": [5, 21, 112, 113, 191, 201, 210, 263, 264, 265, 266, 411, 420, 445, 447, 477, 478, 589, 878], "notch_width": [5, 448, 477, 478], "threshold": [5, 30, 34, 38, 73, 81, 95, 111, 119, 145, 151, 165, 166, 172, 182, 184, 188, 191, 199, 200, 204, 206, 209, 227, 228, 229, 230, 231, 232, 233, 234, 235, 243, 255, 258, 263, 264, 265, 266, 268, 307, 317, 323, 352, 357, 448, 477, 478, 501, 539, 557, 559, 562, 569, 571, 573, 574, 576, 577, 578, 580, 590, 608, 653, 654, 655, 656, 657, 658, 659, 680, 681, 684, 685, 687, 688, 689, 700, 745, 769, 774, 775, 791, 818, 853, 860, 866, 878], "larger": [5, 49, 59, 69, 150, 179, 195, 198, 201, 203, 209, 217, 227, 240, 263, 264, 273, 278, 279, 453, 477, 478, 559, 578, 594, 692, 725, 726, 728, 729, 775, 798, 806, 809, 859, 860, 878], "squid": [5, 108, 211, 243, 833, 854, 860], "2e": [5, 8, 9, 21, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 69, 73, 89, 92, 93, 108, 118, 120, 152, 162, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 195, 221, 222, 569, 570], "trigger": [5, 10, 92, 102, 108, 144, 166, 168, 171, 177, 182, 185, 188, 189, 190, 191, 200, 205, 210, 211, 225, 255, 256, 353, 358, 450, 451, 477, 478, 485, 492, 494, 499, 501, 574, 578, 612, 662, 833, 837, 853, 860, 863, 878], "257": [5, 114, 169, 170, 230, 854], "sti101": [5, 168, 256, 450, 451], "mask": [5, 28, 31, 81, 95, 99, 100, 111, 119, 142, 185, 201, 205, 221, 225, 226, 227, 228, 229, 230, 256, 260, 263, 264, 265, 266, 272, 409, 415, 416, 450, 477, 478, 485, 556, 557, 571, 612, 684, 685, 687, 688, 697, 699, 701, 762, 777, 781, 784, 788, 797, 800, 805, 807, 857, 878], "mask_typ": [5, 185, 256, 450, 485, 612, 878], "verbos": [5, 10, 11, 13, 14, 15, 34, 38, 40, 41, 42, 44, 49, 51, 58, 69, 74, 77, 79, 83, 87, 92, 93, 98, 103, 107, 108, 120, 122, 123, 125, 133, 134, 135, 136, 140, 142, 145, 146, 149, 150, 152, 157, 158, 159, 162, 170, 171, 172, 177, 179, 180, 181, 182, 183, 184, 190, 195, 199, 200, 201, 204, 207, 208, 209, 210, 211, 215, 216, 220, 225, 226, 227, 233, 238, 240, 255, 257, 258, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 302, 303, 304, 305, 306, 307, 308, 311, 313, 315, 316, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 381, 382, 383, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 411, 412, 414, 415, 419, 420, 422, 425, 426, 428, 430, 434, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 459, 460, 464, 465, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 512, 513, 514, 515, 516, 517, 519, 520, 521, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 550, 553, 557, 559, 560, 562, 563, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 580, 581, 582, 583, 585, 586, 588, 589, 592, 593, 594, 597, 598, 599, 600, 604, 605, 606, 607, 608, 609, 611, 612, 613, 615, 616, 617, 619, 620, 621, 622, 623, 627, 628, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 642, 644, 645, 646, 648, 649, 650, 651, 661, 662, 665, 667, 668, 669, 670, 671, 672, 673, 684, 685, 686, 687, 688, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 715, 716, 719, 720, 724, 725, 727, 728, 729, 730, 733, 734, 735, 740, 741, 744, 745, 753, 761, 770, 773, 777, 778, 779, 780, 785, 788, 789, 790, 795, 796, 798, 799, 801, 802, 803, 804, 808, 809, 810, 814, 818, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 835, 837, 868, 878], "error": [5, 10, 13, 38, 42, 54, 55, 78, 89, 92, 108, 113, 133, 135, 136, 140, 144, 149, 152, 157, 162, 171, 172, 181, 183, 185, 188, 194, 195, 200, 201, 204, 207, 211, 225, 226, 229, 243, 258, 263, 264, 265, 266, 268, 269, 270, 271, 274, 277, 278, 279, 283, 284, 315, 338, 347, 348, 353, 357, 360, 362, 364, 368, 369, 401, 428, 443, 444, 456, 457, 459, 477, 478, 493, 497, 539, 548, 557, 568, 576, 584, 585, 603, 605, 609, 634, 636, 644, 654, 657, 659, 675, 681, 682, 686, 697, 699, 700, 701, 742, 743, 745, 776, 778, 789, 824, 826, 836, 837, 842, 843, 848, 853, 854, 857, 860, 863, 878], "suppress": [5, 13, 27, 38, 49, 76, 83, 84, 136, 145, 150, 151, 171, 180, 184, 188, 198, 199, 201, 202, 203, 206, 211, 243, 255, 260, 263, 264, 265, 266, 267, 268, 269, 274, 340, 342, 346, 363, 445, 447, 448, 477, 478, 554, 555, 572, 606, 617, 620, 643, 661, 663, 782, 833, 854, 860, 878], "warn": [5, 10, 13, 38, 133, 135, 136, 140, 151, 162, 171, 172, 181, 184, 191, 202, 204, 205, 215, 216, 227, 238, 255, 257, 258, 263, 264, 265, 266, 268, 270, 271, 273, 274, 277, 278, 279, 283, 284, 315, 338, 341, 347, 348, 353, 357, 359, 360, 362, 364, 368, 369, 401, 428, 436, 443, 456, 459, 477, 478, 497, 557, 568, 576, 585, 586, 605, 615, 634, 636, 639, 643, 644, 697, 699, 700, 701, 741, 743, 745, 778, 789, 824, 826, 843, 845, 868, 878], "about": [5, 13, 19, 27, 34, 43, 44, 69, 73, 93, 100, 113, 140, 141, 143, 144, 146, 149, 151, 155, 160, 162, 166, 168, 169, 172, 175, 178, 184, 188, 189, 190, 191, 194, 195, 199, 201, 202, 204, 205, 209, 210, 214, 215, 216, 221, 222, 225, 227, 255, 256, 258, 260, 262, 263, 264, 265, 266, 268, 272, 273, 274, 276, 281, 283, 284, 296, 297, 298, 304, 305, 309, 310, 317, 318, 319, 323, 325, 326, 339, 341, 343, 348, 357, 366, 368, 369, 370, 372, 409, 411, 416, 417, 418, 428, 433, 450, 453, 460, 469, 476, 477, 478, 479, 482, 508, 513, 520, 521, 525, 535, 553, 554, 557, 568, 582, 590, 591, 612, 632, 633, 661, 662, 665, 683, 697, 698, 699, 700, 701, 724, 725, 727, 728, 734, 745, 758, 761, 765, 770, 771, 780, 787, 797, 801, 833, 837, 841, 853, 854, 856, 857, 859, 861, 863, 866, 878], "decim": [5, 7, 11, 12, 13, 18, 19, 24, 33, 34, 41, 42, 102, 108, 111, 158, 161, 162, 166, 172, 181, 183, 195, 202, 204, 209, 226, 227, 228, 229, 230, 239, 255, 258, 261, 262, 263, 264, 265, 266, 269, 270, 271, 273, 274, 277, 278, 279, 307, 408, 422, 430, 450, 477, 478, 501, 517, 540, 541, 557, 573, 574, 608, 611, 666, 683, 697, 700, 703, 706, 722, 724, 725, 726, 727, 728, 729, 745, 763, 775, 798, 853, 860, 863, 878], "caus": [5, 13, 44, 69, 142, 151, 161, 198, 199, 200, 201, 202, 205, 209, 211, 216, 260, 263, 264, 265, 266, 273, 468, 477, 478, 505, 557, 742, 779, 784, 838, 853, 878], "alias": [5, 13, 162, 181, 202, 258, 261, 262, 263, 264, 265, 266, 268, 270, 271, 274, 277, 278, 279, 422, 477, 478, 573, 574, 697, 700, 722, 724, 725, 727, 728, 775, 798, 811, 857, 878], "ideal": [5, 69, 107, 132, 135, 144, 151, 170, 201, 203, 206, 207, 226, 240, 311, 786, 793, 833, 837, 857, 860], "instead": [5, 43, 73, 103, 113, 119, 134, 136, 142, 143, 146, 149, 150, 151, 156, 158, 160, 161, 166, 168, 169, 170, 171, 172, 195, 199, 200, 201, 202, 204, 205, 209, 211, 214, 215, 217, 222, 225, 233, 234, 235, 238, 239, 255, 258, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 275, 277, 278, 279, 288, 289, 290, 291, 294, 296, 306, 308, 311, 337, 352, 353, 358, 438, 439, 440, 441, 442, 443, 450, 457, 460, 465, 476, 477, 478, 526, 528, 531, 557, 558, 559, 592, 631, 642, 646, 661, 697, 700, 713, 723, 724, 725, 726, 727, 728, 729, 745, 747, 769, 775, 779, 785, 792, 798, 807, 815, 835, 836, 837, 841, 842, 845, 853, 854, 855, 860, 878], "proj": [5, 8, 9, 11, 13, 14, 15, 18, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 70, 77, 85, 86, 87, 91, 108, 110, 115, 116, 118, 119, 120, 123, 126, 130, 140, 142, 145, 149, 150, 151, 162, 166, 169, 172, 176, 177, 178, 179, 180, 181, 182, 183, 191, 195, 198, 202, 205, 206, 207, 210, 214, 217, 220, 255, 258, 260, 263, 264, 265, 266, 268, 272, 273, 296, 297, 340, 341, 353, 354, 355, 356, 357, 370, 476, 477, 478, 517, 556, 557, 569, 570, 573, 600, 608, 615, 623, 638, 698, 699, 701, 702, 703, 704, 705, 706, 707, 708, 770, 777, 779, 781, 783, 784, 796, 797, 798, 799, 829, 833, 853, 878], "cov": [5, 11, 21, 31, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 64, 67, 83, 89, 91, 92, 93, 94, 120, 152, 172, 176, 178, 179, 181, 182, 183, 184, 185, 191, 194, 195, 221, 222, 255, 260, 273, 274, 353, 358, 452, 513, 525, 547, 557, 606, 624, 651, 661, 743, 770, 822, 837, 853, 854, 857, 868, 878], "compute_covari": [5, 7, 34, 42, 46, 49, 83, 92, 120, 152, 162, 177, 180, 182, 183, 185, 195, 221, 260, 358, 370, 409, 416, 417, 558, 606, 743, 853, 857, 868, 878], "del": [5, 18, 33, 41, 42, 46, 47, 48, 49, 50, 54, 55, 108, 112, 134, 136, 140, 142, 145, 149, 166, 172, 177, 179, 180, 181, 183, 184, 191, 195, 201, 204], "open": [5, 11, 13, 14, 15, 16, 18, 28, 29, 32, 33, 34, 42, 45, 46, 49, 61, 67, 68, 69, 70, 71, 72, 73, 75, 78, 79, 82, 83, 87, 91, 92, 95, 96, 98, 99, 102, 103, 106, 108, 109, 110, 112, 114, 116, 117, 120, 122, 126, 128, 131, 132, 134, 135, 141, 142, 144, 146, 150, 151, 152, 155, 156, 161, 162, 165, 166, 167, 168, 169, 172, 177, 180, 182, 183, 195, 198, 199, 200, 202, 203, 204, 205, 206, 208, 209, 214, 217, 221, 222, 227, 228, 229, 230, 233, 235, 239, 240, 243, 262, 263, 264, 265, 266, 273, 276, 379, 477, 478, 557, 565, 662, 783, 788, 798, 806, 833, 834, 836, 841, 843, 844, 854, 856, 857, 859, 863, 878], "isotrak": [5, 42, 100, 108, 122, 128, 143, 162, 172, 206, 208, 226, 255, 336, 860], "700999": 5, "700": [5, 80, 114, 127, 134, 195, 208, 230, 713, 723, 745], "999": [5, 34, 75, 79, 83, 91, 95, 108, 110, 122, 128, 130, 142, 144, 159, 168, 172, 183, 197, 204, 205, 207, 208, 209, 230, 569, 573, 577, 580], "lowpass": [5, 11, 70, 72, 75, 80, 81, 82, 83, 89, 92, 126, 141, 146, 151, 166, 167, 168, 169, 191, 198, 199, 200, 201, 202, 204, 205, 206, 207, 209, 210, 211, 214, 215, 216, 217, 220, 222, 255, 261, 262, 263, 264, 265, 266, 268, 270, 271, 274, 277, 278, 279, 444, 477, 478, 697, 699, 700, 701, 775, 798, 799, 863, 878], "331": [5, 34, 41, 56, 83, 113, 169, 201, 208, 209, 230], "48": [5, 11, 12, 13, 19, 21, 28, 35, 45, 46, 47, 80, 93, 102, 103, 107, 108, 111, 113, 137, 145, 151, 157, 168, 169, 171, 194, 197, 206, 208, 211, 213, 216, 225, 226, 227, 229, 230, 234, 235, 243, 878], "6601": 5, "initi": [5, 16, 19, 21, 41, 43, 44, 69, 92, 95, 108, 111, 144, 149, 151, 156, 168, 180, 185, 191, 204, 211, 214, 220, 225, 226, 227, 228, 229, 230, 233, 234, 235, 240, 254, 255, 261, 263, 264, 269, 270, 271, 273, 274, 275, 277, 278, 279, 372, 374, 472, 477, 478, 484, 504, 510, 557, 583, 592, 594, 602, 649, 650, 651, 660, 661, 663, 676, 684, 685, 686, 687, 688, 700, 735, 745, 773, 775, 789, 792, 798, 803, 808, 809, 837, 842, 844, 859, 860, 863, 878], "256": [5, 12, 21, 43, 56, 69, 108, 114, 123, 134, 156, 160, 169, 170, 171, 172, 183, 222, 229, 230, 276, 441, 716, 760, 835, 860], "initial_ev": [5, 89, 92, 108, 185, 211, 222, 450, 878], "detect": [5, 8, 9, 12, 22, 27, 67, 69, 71, 73, 76, 81, 82, 92, 108, 111, 126, 137, 146, 151, 157, 159, 162, 165, 168, 172, 185, 190, 191, 195, 199, 201, 202, 203, 204, 205, 206, 209, 211, 212, 213, 215, 240, 243, 255, 256, 263, 264, 265, 266, 268, 273, 317, 340, 342, 346, 448, 477, 478, 483, 505, 554, 557, 559, 561, 562, 563, 565, 569, 570, 572, 573, 574, 576, 577, 578, 580, 585, 683, 697, 726, 729, 745, 775, 791, 792, 798, 844, 857, 860, 867, 878], "201": [5, 45, 72, 84, 126, 136, 169, 176, 181, 183, 208, 229, 230, 235, 863], "rank": [5, 7, 8, 9, 12, 15, 21, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 83, 87, 89, 92, 93, 103, 106, 107, 108, 109, 112, 120, 152, 162, 166, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 195, 199, 203, 204, 205, 221, 222, 233, 235, 260, 265, 266, 296, 297, 353, 357, 358, 368, 369, 370, 409, 416, 417, 452, 453, 472, 474, 475, 529, 535, 557, 770, 785, 833, 857, 878], "toler": [5, 8, 9, 21, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 89, 92, 93, 108, 120, 152, 162, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 195, 201, 204, 205, 221, 222, 357, 472, 474, 475, 557, 594, 860, 878], "1e": [5, 8, 9, 32, 33, 34, 40, 45, 46, 49, 59, 65, 69, 70, 73, 81, 92, 93, 113, 119, 120, 137, 158, 162, 179, 180, 183, 185, 195, 200, 201, 221, 222, 225, 263, 264, 273, 472, 477, 478, 524, 556, 566, 583, 663, 690, 697, 775, 798, 800, 805, 833, 878], "16": [5, 8, 9, 11, 12, 13, 19, 20, 21, 22, 28, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 58, 59, 60, 70, 78, 79, 80, 89, 92, 93, 95, 99, 102, 107, 108, 113, 120, 122, 141, 144, 145, 148, 149, 152, 154, 156, 160, 162, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 194, 195, 198, 199, 201, 202, 204, 205, 206, 207, 208, 209, 210, 213, 220, 221, 222, 225, 226, 227, 228, 229, 230, 233, 234, 235, 240, 243, 256, 258, 262, 263, 264, 265, 266, 273, 276, 353, 409, 416, 450, 468, 477, 478, 485, 524, 526, 527, 530, 531, 537, 540, 557, 565, 573, 593, 677, 697, 699, 700, 701, 761, 775, 779, 781, 783, 784, 785, 787, 798, 860, 863], "ep": [5, 8, 9, 21, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 89, 92, 93, 108, 120, 152, 162, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 195, 221, 222, 524], "dim": [5, 8, 9, 21, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 89, 92, 93, 108, 120, 152, 160, 162, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 195, 220, 221, 222, 238, 260, 530, 531, 540, 541, 558, 700, 863], "singular": [5, 8, 9, 21, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 89, 92, 93, 108, 120, 152, 162, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 195, 205, 221, 222, 260, 270, 271, 274, 277, 278, 279, 357, 443, 532, 770, 860, 863], "reduc": [5, 8, 9, 12, 15, 16, 21, 27, 34, 40, 42, 46, 49, 55, 59, 70, 76, 83, 84, 87, 103, 106, 107, 108, 109, 113, 119, 120, 146, 149, 151, 157, 158, 162, 167, 172, 177, 180, 182, 183, 185, 191, 194, 195, 202, 203, 204, 205, 206, 207, 209, 211, 214, 221, 227, 228, 230, 233, 234, 235, 239, 243, 260, 263, 264, 265, 266, 267, 270, 271, 274, 277, 278, 279, 296, 297, 353, 357, 358, 368, 369, 370, 386, 409, 410, 416, 422, 425, 426, 432, 444, 450, 452, 453, 472, 474, 475, 477, 478, 527, 530, 531, 535, 540, 541, 556, 557, 583, 593, 640, 684, 685, 687, 688, 703, 706, 722, 724, 725, 726, 727, 728, 729, 779, 784, 785, 833, 837, 857, 860, 863, 878], "covari": [5, 8, 9, 11, 12, 15, 19, 21, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 62, 66, 67, 80, 87, 89, 91, 92, 93, 102, 103, 106, 107, 108, 109, 112, 121, 123, 129, 149, 152, 163, 164, 165, 166, 176, 178, 179, 181, 182, 183, 184, 185, 191, 195, 199, 200, 204, 222, 233, 235, 243, 255, 263, 264, 265, 266, 267, 268, 273, 274, 293, 296, 297, 299, 316, 352, 353, 354, 356, 357, 358, 368, 369, 370, 409, 415, 416, 417, 434, 450, 452, 453, 472, 474, 475, 477, 478, 482, 513, 523, 524, 525, 526, 527, 528, 530, 531, 535, 537, 540, 541, 549, 557, 558, 606, 612, 617, 651, 661, 683, 698, 708, 745, 770, 775, 779, 783, 785, 798, 822, 833, 854, 863, 868, 878], "empir": [5, 8, 9, 15, 27, 31, 36, 46, 49, 56, 87, 92, 120, 162, 177, 180, 182, 183, 185, 195, 209, 221, 243, 260, 265, 266, 267, 268, 274, 296, 297, 353, 357, 358, 368, 369, 370, 409, 416, 417, 452, 453, 472, 473, 474, 475, 535, 558, 606, 615, 617, 772, 773, 785, 804, 878], "10251": 5, "examin": [5, 34, 47, 73, 128, 136, 142, 145, 146, 151, 160, 166, 177, 178, 204, 214, 216, 837, 857], "align": [5, 7, 9, 28, 78, 79, 135, 151, 155, 157, 158, 163, 164, 165, 168, 172, 182, 183, 184, 190, 214, 225, 257, 261, 263, 264, 268, 270, 271, 274, 275, 276, 277, 278, 279, 301, 307, 311, 364, 366, 388, 428, 443, 468, 469, 477, 521, 557, 627, 628, 630, 646, 733, 734, 735, 745, 761, 773, 775, 813, 818, 833, 860, 878], "forward": [5, 7, 12, 22, 26, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 67, 71, 79, 89, 91, 92, 93, 94, 130, 135, 146, 155, 156, 160, 161, 164, 166, 170, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 188, 191, 195, 198, 199, 200, 201, 203, 204, 206, 207, 221, 222, 243, 255, 263, 264, 265, 266, 268, 271, 273, 274, 276, 277, 279, 283, 284, 285, 296, 297, 298, 299, 301, 306, 308, 311, 315, 316, 327, 333, 359, 363, 372, 387, 409, 411, 416, 420, 434, 436, 437, 445, 447, 448, 468, 472, 473, 474, 475, 477, 478, 482, 492, 514, 515, 519, 520, 521, 533, 534, 535, 536, 539, 550, 555, 604, 617, 627, 638, 642, 645, 646, 648, 649, 650, 661, 662, 697, 739, 745, 761, 763, 782, 786, 811, 813, 825, 833, 838, 849, 854, 859, 863, 866, 868, 878], "mri": [5, 24, 26, 30, 35, 40, 41, 43, 44, 45, 50, 59, 78, 92, 93, 108, 114, 123, 124, 134, 135, 136, 150, 157, 158, 161, 163, 164, 165, 166, 170, 176, 178, 181, 183, 184, 185, 186, 187, 188, 189, 190, 207, 214, 222, 243, 260, 261, 263, 265, 266, 267, 268, 273, 274, 275, 276, 278, 279, 301, 302, 303, 306, 307, 308, 311, 315, 324, 327, 329, 333, 353, 359, 364, 365, 366, 371, 372, 385, 387, 388, 428, 443, 450, 452, 460, 461, 462, 468, 469, 470, 471, 477, 478, 492, 507, 509, 516, 519, 520, 523, 524, 535, 582, 604, 627, 629, 634, 635, 636, 637, 646, 665, 692, 731, 732, 734, 735, 737, 745, 756, 761, 763, 773, 809, 813, 826, 833, 838, 841, 844, 853, 857, 863, 866, 868, 878], "ident": [5, 45, 69, 78, 98, 108, 124, 135, 150, 156, 158, 160, 166, 183, 184, 185, 194, 204, 207, 209, 211, 261, 268, 275, 276, 303, 372, 388, 433, 509, 516, 519, 520, 530, 532, 576, 583, 585, 607, 662, 692, 732, 761, 833, 853, 854, 855, 860, 863, 878], "matrix": [5, 9, 10, 11, 15, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 62, 66, 67, 77, 78, 80, 86, 89, 91, 92, 93, 94, 95, 96, 103, 104, 105, 106, 107, 108, 109, 118, 120, 123, 130, 133, 134, 137, 141, 150, 151, 152, 156, 157, 158, 159, 160, 163, 164, 165, 166, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 191, 194, 195, 199, 204, 205, 206, 221, 222, 226, 227, 228, 229, 230, 234, 235, 243, 255, 260, 261, 263, 265, 266, 268, 273, 275, 276, 293, 296, 297, 298, 303, 311, 314, 315, 317, 328, 353, 358, 359, 368, 369, 370, 415, 430, 450, 453, 477, 478, 482, 516, 520, 524, 530, 531, 532, 533, 534, 535, 536, 539, 540, 541, 549, 554, 557, 558, 564, 565, 583, 586, 606, 610, 612, 646, 651, 662, 667, 668, 669, 670, 671, 672, 673, 677, 682, 683, 684, 685, 687, 688, 692, 698, 705, 706, 707, 714, 732, 761, 765, 766, 770, 771, 788, 789, 792, 822, 833, 854, 878], "co": [5, 22, 67, 157, 201, 209, 220, 243, 340, 435, 833, 854, 860], "registr": [5, 43, 44, 78, 133, 134, 157, 180, 243, 275, 359, 733, 734, 735, 818, 843, 854, 860, 878], "equat": [5, 135, 156, 194, 195, 205, 243, 430, 568, 726, 729, 860, 866], "mi": [5, 854], "defin": [5, 8, 9, 10, 12, 18, 19, 21, 27, 31, 33, 43, 44, 60, 61, 75, 76, 84, 93, 94, 103, 106, 110, 113, 119, 127, 134, 136, 140, 141, 142, 144, 151, 155, 158, 160, 162, 163, 165, 167, 168, 170, 172, 175, 178, 180, 182, 190, 191, 194, 195, 201, 205, 210, 222, 228, 229, 230, 233, 235, 239, 240, 243, 255, 256, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 283, 284, 289, 296, 297, 311, 316, 319, 333, 334, 353, 359, 363, 384, 390, 409, 415, 416, 434, 435, 438, 444, 464, 467, 477, 478, 483, 489, 509, 510, 511, 519, 524, 525, 526, 527, 528, 531, 535, 540, 541, 543, 554, 556, 557, 558, 560, 561, 571, 583, 602, 607, 612, 646, 649, 650, 651, 654, 657, 659, 660, 661, 662, 663, 670, 673, 684, 685, 686, 687, 688, 692, 693, 697, 698, 699, 700, 701, 703, 705, 706, 707, 708, 711, 713, 723, 724, 725, 727, 728, 745, 750, 762, 766, 769, 776, 777, 779, 781, 784, 785, 788, 795, 797, 799, 800, 801, 805, 807, 808, 833, 837, 843, 853, 854, 859, 860, 863, 878], "base": [5, 7, 9, 11, 16, 21, 22, 27, 28, 32, 34, 35, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 54, 55, 58, 59, 61, 67, 69, 76, 82, 84, 89, 91, 93, 95, 98, 99, 102, 106, 108, 109, 111, 112, 113, 116, 118, 120, 131, 134, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 158, 160, 161, 162, 165, 166, 169, 170, 172, 176, 177, 178, 179, 180, 181, 182, 189, 191, 195, 198, 199, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 214, 215, 216, 217, 221, 222, 223, 225, 226, 227, 228, 229, 230, 233, 235, 238, 239, 240, 243, 252, 257, 258, 260, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 311, 313, 317, 318, 323, 328, 331, 340, 341, 342, 343, 346, 352, 353, 354, 355, 358, 359, 363, 374, 402, 409, 411, 412, 415, 416, 417, 419, 420, 422, 423, 426, 430, 432, 435, 438, 440, 442, 444, 445, 447, 448, 450, 453, 460, 466, 468, 476, 477, 478, 483, 494, 510, 516, 517, 520, 522, 525, 539, 554, 556, 557, 559, 560, 564, 565, 566, 567, 568, 571, 573, 574, 576, 577, 585, 598, 599, 600, 612, 617, 619, 636, 645, 649, 650, 657, 670, 673, 682, 683, 684, 685, 686, 687, 688, 692, 693, 697, 699, 700, 701, 703, 706, 709, 716, 724, 725, 727, 728, 730, 741, 745, 754, 756, 762, 764, 769, 774, 775, 777, 783, 784, 785, 786, 788, 790, 791, 792, 797, 798, 800, 802, 803, 805, 807, 808, 809, 825, 833, 835, 836, 837, 838, 840, 841, 846, 849, 853, 854, 857, 863, 866, 869, 873, 878], "lpa": [5, 78, 134, 136, 156, 160, 305, 311, 324, 335, 344, 364, 366, 428, 484, 833, 854, 878], "nasion": [5, 78, 156, 157, 160, 170, 305, 311, 324, 334, 335, 344, 364, 366, 428, 650, 833, 854, 860, 863, 878], "rpa": [5, 78, 134, 136, 156, 160, 305, 311, 324, 335, 344, 364, 366, 428, 484, 833, 854, 878], "fine": [5, 181, 188, 209, 240, 268, 430, 567, 568, 576, 585, 596, 601, 878], "analys": [5, 11, 27, 31, 41, 68, 97, 101, 115, 135, 143, 146, 150, 151, 158, 160, 195, 199, 205, 206, 214, 226, 240, 243, 265, 266, 477, 478, 608, 681, 682, 769, 781, 844, 854, 860, 866, 878], "read_bem_solut": [5, 45, 108, 159, 515, 820, 868], "tran": [5, 7, 26, 41, 50, 51, 52, 67, 78, 80, 108, 114, 115, 117, 123, 124, 134, 135, 136, 150, 157, 158, 159, 160, 172, 176, 178, 181, 182, 183, 190, 191, 207, 210, 255, 261, 273, 276, 299, 303, 311, 364, 365, 385, 388, 428, 430, 452, 460, 468, 469, 516, 519, 520, 564, 582, 585, 630, 662, 665, 692, 731, 732, 734, 745, 761, 773, 832, 833, 853, 854, 860, 878], "solut": [5, 7, 11, 22, 23, 26, 27, 31, 32, 33, 34, 36, 38, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 67, 69, 70, 89, 91, 92, 93, 94, 104, 105, 106, 107, 108, 109, 123, 130, 156, 157, 159, 162, 165, 166, 170, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 191, 195, 199, 206, 221, 222, 233, 235, 243, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 283, 284, 285, 296, 297, 298, 308, 359, 363, 370, 443, 453, 454, 472, 473, 474, 475, 477, 478, 511, 515, 519, 520, 521, 523, 524, 525, 526, 527, 528, 531, 532, 535, 538, 539, 549, 550, 554, 555, 557, 597, 604, 606, 612, 615, 617, 619, 620, 627, 642, 645, 646, 648, 649, 650, 661, 662, 745, 761, 772, 773, 788, 790, 792, 803, 804, 808, 820, 825, 833, 835, 837, 838, 844, 849, 863, 868, 878], "must": [5, 18, 32, 43, 44, 47, 60, 82, 126, 127, 135, 144, 146, 156, 167, 169, 171, 172, 181, 184, 188, 190, 198, 199, 204, 206, 209, 216, 220, 225, 227, 229, 230, 233, 235, 240, 255, 256, 258, 260, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 281, 282, 285, 290, 296, 297, 311, 313, 314, 317, 320, 324, 328, 340, 342, 346, 353, 357, 358, 359, 364, 368, 369, 370, 384, 390, 393, 408, 409, 415, 416, 417, 421, 424, 425, 426, 428, 433, 438, 441, 443, 450, 452, 453, 469, 472, 474, 475, 476, 477, 478, 485, 492, 497, 499, 501, 509, 512, 517, 518, 519, 533, 534, 535, 556, 557, 559, 568, 570, 571, 572, 573, 576, 582, 585, 608, 611, 639, 642, 646, 647, 658, 662, 663, 665, 667, 668, 671, 679, 682, 683, 684, 685, 687, 688, 692, 697, 699, 700, 701, 712, 716, 720, 727, 745, 748, 750, 761, 762, 764, 768, 769, 773, 775, 776, 777, 779, 781, 783, 784, 785, 786, 788, 792, 793, 795, 797, 798, 799, 800, 801, 803, 806, 807, 808, 809, 841, 853, 854, 857, 859, 860, 863], "temporari": [5, 151, 172, 255, 268, 640, 753], "definit": [5, 26, 41, 45, 50, 108, 134, 158, 159, 160, 161, 162, 176, 181, 182, 183, 184, 185, 201, 207, 227, 243, 255, 268, 273, 296, 297, 319, 321, 328, 452, 477, 585, 631, 739, 745, 833, 853, 859, 861, 878], "use_coil_def": [5, 108, 868], "make_forward_solut": [5, 7, 26, 41, 50, 108, 158, 159, 182, 191, 207, 267, 617, 739, 853, 860, 868, 878], "src": [5, 7, 22, 24, 26, 28, 30, 31, 35, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 52, 54, 55, 59, 60, 67, 89, 91, 92, 93, 94, 108, 135, 136, 156, 158, 159, 160, 178, 180, 181, 182, 191, 207, 221, 233, 234, 235, 255, 267, 269, 270, 271, 274, 276, 277, 278, 279, 281, 297, 359, 443, 463, 473, 511, 512, 520, 533, 534, 537, 539, 544, 627, 637, 645, 646, 647, 654, 657, 659, 660, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 692, 693, 745, 761, 763, 803, 804, 808, 809, 830, 853, 863, 878], "mindist": [5, 24, 41, 45, 50, 156, 158, 159, 176, 181, 183, 184, 185, 207, 520, 646, 662], "read_forward_solut": [5, 22, 31, 32, 33, 34, 35, 40, 42, 43, 46, 47, 48, 49, 51, 54, 55, 58, 59, 67, 89, 91, 92, 93, 94, 130, 158, 177, 178, 179, 180, 191, 195, 221, 222, 267, 825, 868, 878], "orient": [5, 11, 22, 26, 28, 29, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 67, 79, 89, 91, 92, 93, 94, 103, 106, 107, 108, 109, 115, 123, 130, 134, 156, 158, 159, 160, 165, 166, 172, 175, 176, 177, 180, 181, 182, 183, 186, 187, 188, 191, 195, 207, 209, 221, 222, 225, 233, 235, 243, 260, 261, 262, 265, 267, 268, 270, 271, 274, 277, 278, 279, 283, 284, 296, 297, 298, 363, 429, 443, 452, 453, 454, 468, 472, 474, 475, 496, 519, 520, 523, 524, 525, 526, 527, 528, 530, 531, 533, 534, 535, 536, 539, 540, 541, 596, 606, 607, 610, 614, 615, 617, 630, 645, 649, 661, 662, 745, 754, 761, 763, 764, 773, 813, 825, 853, 862, 863, 866, 878], "later": [5, 11, 19, 32, 38, 43, 47, 68, 100, 108, 126, 134, 136, 140, 141, 142, 144, 149, 151, 162, 172, 175, 177, 180, 181, 189, 191, 198, 199, 200, 201, 204, 205, 206, 207, 211, 214, 215, 216, 217, 220, 233, 234, 240, 243, 258, 263, 264, 265, 266, 271, 273, 275, 277, 280, 359, 451, 477, 478, 557, 609, 611, 697, 699, 700, 701, 745, 808, 837, 842, 843, 854, 855, 860, 863, 878], "convert_forward_solut": [5, 22, 47, 48, 49, 54, 55, 67, 158, 178, 221, 520, 617, 825, 860, 868, 878], "force_fix": [5, 47, 48, 49, 54, 55, 67, 158, 221, 363, 535, 878], "plot_align": [5, 24, 52, 80, 108, 114, 117, 122, 123, 124, 135, 136, 156, 157, 158, 159, 170, 178, 182, 183, 184, 185, 263, 264, 265, 266, 308, 477, 478, 763, 801, 810, 815, 853, 857, 860, 868, 878], "surfac": [5, 11, 22, 24, 26, 27, 31, 34, 35, 36, 40, 42, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 58, 59, 60, 67, 70, 78, 80, 89, 91, 93, 108, 114, 115, 117, 119, 123, 124, 133, 134, 135, 136, 150, 155, 156, 157, 159, 163, 164, 165, 166, 172, 175, 176, 177, 178, 179, 180, 183, 184, 185, 188, 190, 191, 195, 198, 207, 209, 216, 221, 222, 225, 233, 234, 235, 243, 261, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 281, 283, 284, 296, 297, 303, 306, 307, 308, 334, 359, 363, 364, 385, 388, 408, 428, 443, 454, 459, 460, 465, 467, 468, 471, 472, 474, 475, 501, 510, 512, 514, 515, 516, 520, 524, 525, 526, 527, 528, 531, 533, 534, 535, 540, 541, 543, 544, 566, 567, 582, 602, 605, 617, 620, 625, 626, 627, 628, 631, 634, 636, 645, 646, 660, 661, 662, 663, 666, 668, 669, 672, 674, 692, 693, 725, 728, 731, 734, 745, 761, 763, 773, 780, 803, 804, 808, 818, 821, 825, 826, 831, 833, 835, 838, 841, 843, 844, 854, 857, 866, 868, 878], "pial": [5, 114, 123, 135, 136, 155, 160, 181, 261, 276, 543, 620, 692, 745, 761, 773, 878], "set_3d_view": [5, 24, 52, 80, 108, 114, 117, 123, 124, 136, 156, 157, 158, 159, 160, 170, 178, 183, 868, 878], "azimuth": [5, 24, 78, 80, 108, 114, 115, 117, 123, 124, 134, 135, 136, 156, 157, 158, 160, 170, 178, 181, 183, 190, 210, 222, 745, 813, 878], "elev": [5, 24, 78, 80, 108, 114, 115, 117, 123, 124, 134, 135, 136, 156, 157, 158, 160, 170, 181, 183, 190, 198, 205, 210, 222, 745, 813, 878], "distanc": [5, 11, 22, 24, 28, 29, 31, 35, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 67, 79, 89, 91, 92, 93, 94, 103, 106, 107, 108, 109, 115, 123, 127, 130, 134, 135, 136, 143, 156, 157, 158, 159, 160, 161, 166, 170, 172, 176, 177, 178, 179, 181, 183, 190, 191, 195, 201, 208, 210, 221, 222, 233, 235, 255, 260, 263, 264, 265, 266, 268, 269, 272, 273, 274, 276, 281, 303, 343, 364, 409, 412, 413, 416, 419, 428, 430, 452, 461, 467, 468, 477, 478, 510, 520, 539, 556, 557, 561, 565, 568, 571, 576, 585, 590, 591, 637, 645, 646, 654, 657, 660, 662, 663, 665, 667, 668, 669, 671, 672, 684, 685, 687, 688, 692, 697, 699, 701, 745, 762, 765, 777, 784, 788, 797, 800, 805, 807, 813, 833, 860, 863, 878], "focalpoint": [5, 24, 52, 108, 115, 123, 134, 135, 156, 157, 158, 159, 160, 178, 222, 745, 813, 878], "04": [5, 20, 24, 31, 33, 34, 35, 41, 42, 49, 50, 56, 69, 70, 72, 83, 84, 89, 92, 94, 99, 102, 120, 122, 123, 126, 129, 139, 141, 158, 162, 164, 177, 180, 183, 185, 194, 199, 200, 208, 210, 225, 226, 227, 229, 230, 235, 243, 387, 430, 516, 521, 557, 585, 654, 659, 840, 860], "load": [5, 7, 11, 13, 14, 24, 26, 28, 29, 30, 32, 33, 37, 38, 39, 41, 42, 43, 44, 45, 46, 49, 50, 67, 70, 74, 78, 79, 80, 81, 91, 92, 93, 95, 96, 98, 99, 100, 102, 103, 106, 108, 109, 111, 112, 116, 118, 119, 120, 122, 124, 126, 127, 134, 135, 142, 143, 145, 150, 151, 152, 156, 158, 160, 161, 162, 165, 167, 168, 169, 170, 171, 172, 176, 177, 180, 181, 182, 183, 184, 188, 189, 191, 192, 195, 198, 199, 200, 202, 203, 204, 206, 207, 208, 209, 210, 215, 216, 217, 218, 225, 226, 227, 228, 229, 233, 234, 235, 238, 240, 255, 258, 259, 263, 264, 265, 266, 273, 312, 317, 321, 328, 358, 360, 374, 459, 460, 477, 478, 484, 496, 497, 504, 516, 519, 520, 535, 546, 557, 559, 569, 598, 608, 610, 614, 615, 617, 619, 625, 626, 628, 662, 695, 718, 719, 761, 775, 779, 783, 785, 792, 798, 825, 833, 854, 855, 863, 878], "three": [5, 31, 45, 78, 93, 102, 108, 119, 142, 145, 151, 156, 158, 159, 161, 168, 178, 182, 188, 189, 198, 199, 204, 205, 206, 214, 216, 217, 220, 225, 238, 240, 255, 257, 260, 261, 263, 264, 265, 266, 271, 272, 277, 279, 296, 297, 306, 307, 308, 323, 409, 416, 467, 472, 477, 478, 514, 533, 534, 556, 557, 567, 571, 596, 628, 631, 646, 649, 678, 680, 697, 699, 701, 735, 745, 762, 773, 775, 777, 784, 786, 788, 796, 797, 798, 800, 805, 807, 826, 831, 837, 854, 857, 860, 863, 878], "layer": [5, 45, 108, 158, 159, 182, 183, 184, 185, 199, 243, 306, 385, 514, 521, 646, 654, 659, 761, 853, 860, 878], "model": [5, 7, 11, 12, 13, 18, 22, 26, 31, 32, 36, 41, 42, 50, 56, 72, 100, 104, 105, 108, 112, 115, 120, 135, 141, 151, 155, 156, 159, 160, 161, 162, 164, 170, 171, 172, 175, 176, 182, 183, 184, 185, 190, 191, 195, 203, 204, 222, 229, 243, 249, 260, 261, 263, 265, 266, 267, 268, 271, 273, 274, 276, 277, 278, 279, 296, 297, 301, 303, 306, 308, 340, 353, 359, 363, 371, 409, 413, 415, 416, 419, 421, 426, 427, 450, 452, 468, 472, 477, 482, 514, 515, 519, 520, 521, 523, 524, 525, 526, 535, 554, 556, 566, 582, 595, 604, 606, 607, 617, 623, 632, 638, 645, 646, 654, 659, 683, 710, 739, 745, 761, 763, 785, 800, 813, 820, 825, 833, 838, 841, 843, 844, 854, 857, 863, 868, 878], "colloc": [5, 26, 41, 45, 50, 108, 158, 159, 176, 182, 515, 878], "patch": [5, 11, 22, 28, 29, 31, 34, 35, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 67, 89, 91, 92, 93, 94, 103, 106, 107, 108, 109, 123, 126, 130, 156, 158, 160, 166, 172, 177, 178, 179, 181, 182, 191, 195, 221, 222, 233, 235, 255, 260, 263, 264, 265, 266, 271, 272, 276, 277, 279, 281, 283, 284, 363, 409, 416, 477, 478, 524, 525, 526, 527, 528, 531, 535, 540, 541, 556, 557, 571, 605, 627, 645, 661, 662, 697, 699, 701, 762, 777, 784, 788, 797, 800, 805, 807, 863, 878], "statist": [5, 10, 11, 22, 28, 29, 31, 35, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 67, 86, 87, 89, 91, 92, 93, 94, 95, 96, 100, 102, 103, 106, 107, 109, 112, 123, 130, 149, 151, 155, 156, 158, 160, 162, 166, 172, 177, 178, 179, 181, 182, 191, 195, 201, 204, 205, 221, 222, 232, 243, 255, 263, 264, 265, 266, 268, 270, 271, 274, 277, 278, 279, 283, 284, 296, 297, 317, 321, 323, 328, 352, 353, 359, 363, 450, 477, 478, 524, 525, 526, 527, 528, 531, 535, 540, 541, 554, 557, 605, 608, 612, 627, 632, 657, 661, 662, 675, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 690, 691, 697, 699, 700, 701, 727, 777, 781, 784, 805, 833, 844, 855, 857, 868, 878], "3523": [5, 22, 31, 32, 33, 34, 35, 40, 42, 43, 46, 47, 48, 49, 51, 54, 55, 58, 59, 67, 89, 91, 92, 93, 94, 130, 172, 177, 178, 179, 180, 191, 195, 221, 222], "8196": [5, 182, 191], "free": [5, 22, 26, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 67, 80, 89, 91, 92, 93, 94, 108, 130, 140, 151, 158, 159, 166, 172, 176, 177, 178, 180, 182, 191, 195, 207, 209, 221, 222, 226, 230, 243, 261, 263, 264, 267, 296, 297, 298, 373, 452, 453, 454, 472, 474, 475, 524, 525, 526, 527, 528, 531, 535, 539, 540, 541, 566, 617, 638, 642, 684, 685, 687, 688, 825, 837, 841, 843, 844, 853, 859, 860, 866, 878], "frame": [5, 11, 22, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 67, 78, 79, 89, 91, 92, 93, 94, 103, 106, 107, 109, 111, 123, 130, 134, 135, 136, 140, 151, 159, 163, 164, 165, 166, 170, 172, 177, 178, 179, 180, 181, 182, 183, 184, 190, 191, 195, 209, 211, 221, 222, 233, 235, 255, 261, 263, 264, 265, 266, 267, 268, 276, 301, 302, 311, 315, 324, 329, 366, 388, 428, 468, 471, 477, 478, 481, 488, 507, 509, 516, 521, 568, 576, 585, 627, 628, 630, 644, 646, 720, 732, 740, 742, 745, 761, 773, 813, 833, 854, 859, 860, 863, 878], "normal": [5, 11, 15, 16, 18, 22, 24, 26, 28, 29, 30, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 54, 55, 58, 59, 60, 67, 69, 89, 91, 93, 103, 106, 107, 108, 109, 112, 113, 114, 115, 136, 137, 142, 143, 155, 156, 157, 158, 160, 161, 169, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 195, 205, 206, 209, 220, 221, 222, 233, 235, 239, 240, 243, 254, 256, 260, 261, 263, 264, 265, 266, 267, 268, 270, 271, 272, 274, 276, 277, 278, 279, 283, 284, 296, 297, 312, 320, 357, 363, 409, 411, 414, 416, 443, 452, 472, 474, 475, 477, 478, 496, 524, 525, 526, 527, 528, 530, 531, 533, 534, 535, 540, 541, 556, 557, 567, 582, 610, 614, 646, 650, 661, 662, 679, 697, 699, 701, 709, 713, 715, 723, 746, 762, 777, 784, 788, 796, 797, 800, 805, 807, 833, 837, 843, 859, 863, 878], "emploi": [5, 11, 22, 26, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 54, 55, 58, 59, 67, 89, 91, 93, 108, 158, 159, 176, 177, 178, 179, 182, 188, 189, 191, 195, 222, 240, 556, 678, 853, 854, 859, 860, 863], "rotat": [5, 10, 15, 19, 22, 34, 35, 40, 41, 42, 44, 46, 47, 48, 49, 54, 55, 58, 59, 67, 79, 89, 91, 93, 108, 134, 156, 158, 172, 177, 178, 179, 180, 182, 191, 194, 195, 201, 203, 222, 255, 265, 266, 268, 296, 297, 349, 364, 368, 430, 468, 561, 567, 585, 735, 736, 738, 745, 761, 780, 835, 843, 860, 878], "convert": [5, 22, 27, 34, 35, 40, 41, 42, 46, 47, 48, 49, 54, 55, 58, 59, 67, 74, 78, 89, 91, 93, 108, 111, 121, 129, 134, 136, 137, 140, 141, 142, 143, 144, 149, 150, 151, 156, 158, 160, 161, 169, 171, 177, 178, 179, 182, 188, 189, 190, 191, 195, 200, 201, 205, 214, 216, 221, 222, 226, 230, 233, 234, 235, 239, 257, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 274, 277, 278, 279, 282, 289, 302, 311, 312, 337, 349, 363, 365, 411, 415, 420, 421, 424, 438, 445, 447, 448, 465, 470, 471, 473, 477, 478, 488, 497, 501, 512, 519, 587, 588, 697, 699, 700, 701, 713, 723, 736, 738, 744, 746, 749, 761, 813, 815, 837, 838, 841, 844, 854, 860, 878], "helmet": [5, 7, 27, 45, 79, 80, 108, 115, 121, 122, 129, 137, 150, 156, 158, 170, 172, 183, 184, 185, 188, 265, 266, 268, 460, 516, 523, 538, 615, 745, 754, 761, 780, 813, 860, 878], "unknown": [5, 46, 70, 72, 75, 82, 89, 92, 108, 126, 141, 146, 151, 167, 168, 169, 181, 198, 199, 200, 202, 204, 205, 206, 207, 209, 210, 211, 214, 215, 216, 217, 220, 222, 268, 324, 329, 472, 477, 478, 485, 492, 507, 509, 732, 798, 819, 828, 860, 863, 878], "deriv": [5, 32, 33, 34, 46, 70, 108, 122, 125, 140, 144, 149, 156, 168, 199, 225, 226, 238, 243, 268, 364, 557, 592, 617, 825, 860, 863, 878], "subset": [5, 45, 111, 140, 142, 144, 146, 151, 158, 160, 172, 175, 206, 207, 211, 216, 225, 238, 258, 263, 264, 265, 266, 269, 273, 283, 284, 296, 297, 353, 357, 358, 368, 369, 370, 401, 409, 412, 416, 419, 433, 447, 452, 453, 466, 472, 474, 475, 477, 478, 535, 557, 670, 673, 697, 698, 699, 700, 701, 745, 775, 785, 798, 859, 860, 866, 878], "dip_opm": 5, "_": [5, 8, 9, 19, 37, 38, 45, 50, 60, 111, 134, 137, 146, 151, 160, 161, 172, 178, 180, 191, 194, 201, 204, 206, 211, 214, 221, 225, 226, 229, 230, 239, 240, 302, 557, 568, 600, 713, 723, 837, 860, 878], "fit_dipol": [5, 45, 83, 176, 181, 183, 184, 185, 261, 262, 299, 607, 860, 868, 878], "040": [5, 80, 112, 120, 140, 149, 162, 169, 208, 222, 243, 265, 266, 353, 857], "080": [5, 38, 80, 83, 84, 90, 94, 185, 208, 226], "idx": [5, 31, 35, 40, 47, 59, 63, 83, 113, 132, 150, 181, 191, 198, 202, 206, 221, 233, 257, 261, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 310, 476, 477, 478, 533, 534, 700, 773, 878], "argmax": [5, 35, 38, 40, 48, 50, 58, 59, 118, 176, 181, 194], "gof": [5, 40, 115, 169, 176, 178, 183, 184, 185, 261, 263, 264, 265, 266, 299, 310, 341, 343, 344, 345, 477, 478, 554, 697, 699, 700, 701, 773, 878], "1f": [5, 30, 40, 47, 75, 99, 108, 113, 156, 176, 183, 184, 191, 195, 201, 221, 225, 260, 263, 264, 265, 266, 272, 409, 416, 477, 478, 699, 701, 777, 784, 797], "1000": [5, 40, 48, 69, 80, 83, 95, 112, 113, 127, 134, 146, 156, 157, 159, 160, 176, 181, 182, 183, 184, 191, 201, 202, 206, 208, 214, 220, 226, 230, 233, 234, 235, 438, 444, 446, 450, 477, 478, 557, 619, 684, 685, 687, 688, 713, 723, 745, 833, 878], "n20m": 5, "plot_loc": [5, 176, 181, 261, 878], "orthoview": [5, 35, 40, 59, 134, 160, 176, 261, 773, 878], "conductormodel": [5, 45, 108, 158, 183, 184, 185, 260, 263, 264, 265, 266, 272, 303, 311, 409, 416, 452, 477, 478, 514, 515, 521, 556, 557, 571, 604, 646, 697, 699, 701, 761, 762, 769, 777, 779, 781, 784, 785, 788, 795, 797, 799, 800, 801, 805, 807, 820, 833, 868], "solver": [5, 10, 11, 13, 15, 18, 27, 36, 40, 45, 46, 56, 59, 175, 195, 260, 261, 265, 267, 268, 274, 452, 453, 474, 515, 539, 606, 615, 617, 683, 804, 841, 846, 866, 878], "instanc": [5, 15, 26, 31, 43, 44, 45, 50, 73, 82, 87, 108, 113, 158, 159, 166, 169, 171, 172, 176, 178, 182, 183, 185, 188, 189, 191, 203, 204, 205, 207, 209, 214, 220, 238, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 311, 312, 313, 315, 316, 318, 324, 327, 329, 330, 332, 333, 334, 335, 336, 337, 340, 342, 344, 345, 346, 347, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 368, 369, 370, 372, 376, 377, 378, 380, 381, 382, 384, 389, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 430, 431, 432, 433, 434, 438, 439, 440, 441, 442, 443, 444, 450, 452, 453, 454, 455, 456, 463, 466, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 510, 512, 513, 515, 516, 517, 518, 519, 520, 521, 524, 525, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 544, 546, 549, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 597, 598, 599, 600, 602, 603, 604, 607, 608, 609, 610, 611, 614, 617, 619, 626, 629, 638, 639, 642, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 682, 683, 684, 685, 686, 687, 688, 689, 692, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 714, 717, 718, 733, 734, 735, 737, 742, 745, 746, 747, 748, 754, 758, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 811, 815, 818, 820, 824, 828, 830, 837, 855, 878], "36": [5, 19, 28, 34, 35, 42, 45, 47, 56, 78, 80, 82, 102, 107, 111, 113, 129, 144, 151, 154, 160, 166, 169, 171, 174, 176, 178, 181, 187, 194, 195, 208, 225, 226, 227, 229, 230, 233, 234, 235, 240, 243, 263, 264, 265, 266, 401, 477, 478, 594, 878], "rad": [5, 45, 176, 181, 183, 184, 185, 646, 833], "77": [5, 11, 13, 19, 35, 80, 81, 107, 108, 111, 113, 156, 157, 168, 169, 181, 191, 195, 206, 207, 208, 216, 225, 226, 229, 230, 238, 334, 878], "guess": [5, 45, 122, 176, 181, 183, 184, 185, 204, 208, 255, 468, 488, 758, 878], "grid": [5, 24, 40, 41, 45, 50, 112, 114, 122, 126, 135, 155, 156, 158, 176, 178, 180, 181, 183, 184, 185, 194, 195, 207, 208, 211, 225, 227, 255, 273, 275, 276, 326, 474, 557, 582, 646, 698, 771, 788, 791, 853, 854, 860, 878], "n_sampl": [5, 45, 53, 64, 96, 137, 183, 184, 185, 195, 220, 225, 409, 410, 411, 412, 413, 414, 416, 417, 419, 420, 421, 422, 423, 424, 426, 451, 558, 583, 647, 676, 683, 686, 837], "10250": 5, "65975931e": 5, "41596252e": 5, "50067005e": 5, "18042429e": 5, "93613735e": 5, "88258373e": 5, "73325418e": 5, "23906800e": 5, "47917983e": 5, "14619592e": 5, "36697422e": 5, "53163548e": 5, "08794660e": 5, "00286749e": 5, "18143308e": 5, "22829671e": 5, "93976860e": 5, "28130683e": 5, "86574659e": 5, "28436459e": 5, "91104392e": 5, "54318851e": 5, "60478446e": 5, "18114621e": 5, "42024459e": 5, "20931076e": 5, "52605668e": 5, "29661483e": 5, "53868159e": 5, "40025250e": 5, "28102479e": 5, "49204692e": 5, "41942628e": 5, "29095862e": 5, "00102289e": 5, "19639173e": 5, "09222979e": 5, "25564394e": 5, "49616938e": 5, "35015052e": 5, "94284541e": 5, "29140004e": 5, "85113742e": 5, "46141046e": 5, "97190359e": 5, "ra": [5, 24, 26, 41, 43, 45, 50, 78, 108, 134, 135, 156, 158, 159, 161, 176, 180, 181, 183, 184, 185, 207, 261, 270, 271, 274, 276, 277, 278, 279, 311, 324, 364, 443, 471, 509, 617, 732, 734, 737, 745, 818, 825, 833, 854, 860, 878], "000000": [5, 24, 26, 41, 45, 50, 108, 143, 144, 156, 158, 159, 176, 180, 181, 182, 183, 184, 185, 207, 228, 230, 234, 235, 240], "999800": [5, 108], "015800": [5, 108], "009200": [5, 108], "018100": [5, 108], "930500": [5, 108], "365900": [5, 108], "002800": [5, 108], "366000": [5, 108], "930600": [5, 108], "40": [5, 9, 10, 12, 13, 19, 21, 28, 33, 35, 40, 45, 46, 47, 58, 59, 67, 72, 74, 78, 79, 80, 83, 89, 90, 93, 99, 102, 103, 107, 108, 113, 120, 123, 134, 136, 140, 141, 144, 145, 151, 155, 156, 158, 160, 166, 169, 171, 181, 183, 184, 191, 194, 195, 200, 201, 203, 204, 208, 209, 210, 214, 219, 225, 226, 227, 229, 230, 233, 234, 235, 239, 243, 263, 264, 273, 430, 444, 477, 478, 486, 557, 569, 576, 577, 580, 649, 749, 775, 793, 798, 812, 854, 860, 878], "105": [5, 24, 26, 35, 41, 45, 50, 71, 84, 93, 108, 113, 135, 137, 142, 148, 156, 158, 169, 176, 181, 183, 184, 185, 205, 207, 225, 229, 863], "decompos": [5, 8, 45, 176, 181, 183, 184, 185, 204, 409, 413, 416, 557, 558, 727, 860, 878], "eigenvalu": [5, 21, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 89, 92, 93, 103, 106, 107, 108, 109, 120, 152, 162, 166, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 195, 221, 222, 233, 235, 260, 409, 709, 860, 863], "without": [5, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 69, 74, 78, 89, 92, 93, 103, 106, 108, 112, 119, 120, 126, 134, 144, 149, 150, 151, 152, 159, 161, 162, 165, 170, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 195, 199, 200, 201, 203, 204, 205, 206, 207, 209, 216, 221, 222, 225, 240, 255, 258, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 290, 291, 294, 296, 297, 324, 325, 353, 357, 358, 368, 369, 370, 371, 409, 416, 439, 440, 441, 442, 450, 452, 453, 472, 474, 475, 477, 478, 485, 492, 496, 497, 517, 526, 528, 531, 535, 550, 576, 592, 608, 610, 614, 615, 632, 691, 698, 735, 745, 785, 803, 808, 815, 835, 837, 841, 845, 853, 855, 857, 859, 860, 878], "whiten": [5, 7, 14, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 54, 55, 57, 58, 59, 60, 89, 92, 93, 103, 104, 105, 106, 107, 108, 109, 112, 121, 129, 149, 153, 154, 162, 165, 166, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 195, 204, 221, 222, 233, 235, 243, 255, 260, 263, 264, 265, 266, 268, 273, 296, 297, 353, 357, 358, 368, 369, 370, 409, 416, 450, 452, 453, 472, 474, 475, 477, 478, 532, 535, 554, 557, 558, 583, 612, 623, 710, 775, 779, 783, 785, 798, 802, 833, 857, 878], "omit": [5, 12, 21, 24, 26, 28, 29, 30, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 54, 55, 57, 58, 59, 60, 77, 80, 86, 89, 92, 93, 103, 106, 107, 108, 109, 118, 120, 123, 150, 152, 156, 158, 162, 166, 168, 169, 171, 172, 176, 177, 178, 179, 181, 182, 183, 184, 185, 191, 195, 199, 207, 209, 221, 222, 233, 235, 257, 263, 264, 265, 266, 273, 415, 477, 478, 512, 557, 577, 578, 586, 603, 615, 654, 659, 701, 735, 761, 763, 779, 784, 790, 799, 837, 863, 878], "inner": [5, 26, 31, 41, 43, 45, 50, 108, 128, 155, 158, 160, 161, 176, 181, 182, 191, 243, 255, 263, 264, 267, 303, 306, 452, 468, 520, 585, 646, 662, 745, 833, 838, 841, 844, 853, 854, 857, 860, 863, 878], "skull": [5, 26, 41, 43, 45, 50, 108, 112, 134, 155, 156, 158, 160, 161, 170, 176, 181, 182, 191, 243, 255, 267, 276, 303, 306, 452, 520, 521, 582, 646, 654, 659, 662, 745, 761, 833, 838, 841, 844, 853, 854, 857, 860, 863, 878], "cm": [5, 9, 15, 24, 41, 45, 50, 89, 115, 122, 142, 145, 156, 158, 166, 170, 176, 181, 183, 184, 185, 189, 200, 206, 207, 208, 209, 210, 227, 239, 255, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 334, 336, 338, 477, 478, 485, 513, 576, 776, 779, 781, 806, 833, 878], "35": [5, 11, 12, 13, 19, 21, 28, 34, 35, 45, 47, 78, 80, 102, 103, 107, 108, 111, 113, 136, 143, 145, 146, 149, 158, 160, 164, 169, 171, 184, 185, 195, 205, 206, 208, 210, 213, 225, 226, 227, 229, 230, 233, 234, 235, 239, 243, 255, 474, 524, 569, 570, 577, 580, 749, 860], "insid": [5, 16, 24, 26, 41, 45, 50, 108, 140, 149, 156, 158, 159, 160, 161, 176, 181, 182, 183, 184, 185, 202, 207, 209, 214, 229, 235, 269, 273, 274, 277, 278, 279, 291, 337, 392, 433, 461, 468, 477, 478, 506, 528, 745, 798, 818, 837, 853, 857, 860, 878], "sphere": [5, 24, 26, 35, 41, 43, 45, 48, 50, 59, 70, 83, 92, 93, 108, 119, 122, 124, 135, 156, 158, 159, 160, 176, 178, 181, 182, 183, 184, 185, 189, 199, 207, 208, 209, 243, 255, 260, 261, 263, 264, 265, 266, 269, 272, 274, 296, 297, 301, 304, 305, 311, 359, 408, 409, 416, 452, 477, 478, 489, 516, 519, 520, 521, 556, 557, 566, 571, 646, 660, 663, 697, 699, 701, 745, 761, 762, 769, 773, 777, 779, 781, 784, 785, 788, 795, 797, 799, 800, 801, 804, 805, 807, 815, 833, 878], "102": [5, 11, 13, 14, 15, 16, 18, 22, 26, 28, 29, 30, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 64, 67, 68, 70, 71, 72, 75, 77, 79, 82, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 102, 103, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 119, 120, 122, 123, 126, 128, 130, 131, 132, 140, 141, 142, 146, 149, 150, 151, 152, 156, 157, 158, 160, 162, 166, 167, 168, 169, 170, 172, 176, 177, 178, 179, 180, 181, 182, 183, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 214, 215, 216, 217, 221, 222, 225, 227, 228, 229, 230, 233, 235, 255, 863], "extent": [5, 13, 16, 24, 41, 45, 47, 50, 55, 69, 89, 94, 106, 140, 156, 158, 176, 181, 183, 184, 185, 195, 206, 207, 227, 228, 229, 230, 233, 234, 235, 243, 263, 264, 432, 467, 510, 539, 657, 687, 688, 859, 860, 878], "73": [5, 15, 19, 33, 34, 35, 40, 45, 79, 80, 95, 106, 107, 111, 113, 120, 127, 145, 149, 169, 176, 182, 194, 195, 208, 225, 226, 227, 228, 229, 230, 233, 234, 235, 238, 243, 263, 264, 265, 266, 477, 478, 699, 701, 716], "y": [5, 9, 10, 11, 12, 13, 16, 18, 19, 24, 41, 45, 47, 50, 69, 70, 79, 81, 89, 111, 113, 114, 119, 136, 145, 151, 156, 158, 160, 161, 170, 172, 175, 176, 180, 181, 183, 184, 185, 194, 195, 198, 201, 202, 205, 207, 214, 215, 216, 217, 225, 235, 240, 257, 260, 261, 263, 264, 265, 266, 268, 271, 272, 277, 279, 287, 301, 304, 305, 311, 312, 334, 343, 344, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 428, 449, 477, 478, 489, 523, 524, 556, 557, 558, 566, 571, 617, 650, 683, 697, 699, 701, 732, 735, 736, 738, 745, 746, 749, 762, 769, 773, 776, 777, 778, 779, 781, 783, 784, 785, 786, 787, 788, 793, 795, 797, 799, 800, 801, 805, 806, 807, 813, 825, 833, 835, 860, 878], "42": [5, 8, 9, 11, 13, 14, 15, 16, 18, 19, 28, 29, 35, 41, 42, 45, 47, 49, 56, 67, 68, 70, 71, 72, 75, 79, 80, 82, 87, 89, 91, 92, 95, 96, 98, 99, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 116, 117, 120, 122, 126, 131, 132, 137, 141, 146, 151, 152, 156, 162, 166, 167, 168, 169, 172, 175, 176, 177, 179, 180, 181, 182, 184, 187, 194, 195, 198, 201, 202, 203, 204, 205, 206, 207, 208, 214, 217, 221, 222, 225, 226, 227, 228, 229, 230, 233, 235, 243, 268, 524, 539, 657], "108": [5, 16, 35, 80, 81, 112, 113, 120, 134, 162, 169, 191, 208, 230, 243, 265, 266, 353, 785, 857], "80": [5, 9, 13, 16, 19, 30, 31, 33, 35, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 56, 57, 58, 59, 60, 69, 77, 79, 80, 85, 86, 89, 93, 103, 107, 111, 113, 114, 115, 117, 118, 119, 124, 126, 149, 151, 156, 158, 168, 169, 171, 172, 176, 178, 179, 181, 183, 184, 185, 191, 194, 195, 206, 208, 209, 210, 225, 226, 227, 229, 230, 234, 235, 243, 408, 557, 649, 786, 793, 843, 878], "1080": [5, 10, 194, 243, 415], "543": [5, 13, 40, 230], "after": [5, 8, 11, 16, 22, 24, 26, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 61, 67, 80, 87, 89, 91, 93, 100, 102, 108, 126, 130, 134, 136, 137, 140, 141, 142, 144, 145, 146, 149, 150, 151, 155, 156, 158, 161, 166, 167, 168, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 191, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 214, 216, 221, 222, 225, 227, 228, 233, 238, 240, 255, 256, 257, 263, 264, 265, 266, 268, 270, 271, 273, 274, 276, 277, 278, 279, 286, 296, 297, 340, 353, 357, 358, 360, 362, 368, 369, 370, 384, 409, 411, 415, 416, 420, 422, 423, 427, 433, 450, 451, 452, 453, 472, 474, 475, 477, 478, 535, 556, 557, 560, 568, 569, 570, 573, 574, 576, 577, 578, 580, 583, 586, 615, 617, 639, 658, 697, 722, 724, 725, 727, 728, 733, 745, 761, 769, 775, 779, 781, 783, 784, 785, 788, 789, 792, 796, 798, 809, 825, 833, 837, 845, 853, 854, 857, 859, 860, 863, 866, 878], "infeas": [5, 24, 41, 45, 50, 156, 158, 176, 181, 183, 184, 185, 207], "least": [5, 41, 45, 69, 83, 113, 141, 158, 159, 176, 181, 200, 201, 202, 204, 205, 209, 225, 230, 243, 263, 264, 265, 266, 273, 411, 420, 424, 426, 445, 447, 448, 466, 477, 478, 557, 559, 560, 575, 576, 585, 682, 745, 775, 798, 843, 853, 857, 859, 860, 878], "awai": [5, 41, 45, 134, 141, 144, 158, 159, 176, 181, 183, 188, 200, 205, 207, 211, 364, 489, 557, 582, 650, 692, 725, 728, 745, 818, 840, 860, 863, 878], "few": [5, 21, 26, 41, 44, 45, 50, 69, 93, 100, 108, 135, 144, 145, 149, 155, 156, 157, 158, 159, 161, 162, 167, 171, 172, 176, 181, 182, 198, 199, 200, 201, 203, 204, 206, 207, 208, 214, 217, 226, 230, 235, 238, 240, 268, 430, 567, 568, 576, 585, 833, 837, 845, 855, 857, 860, 862, 878], "interior": [5, 26, 41, 45, 50, 108, 158, 159, 176, 181, 182, 209], "statu": [5, 26, 41, 45, 50, 108, 158, 159, 176, 181, 182, 188, 263, 264, 265, 266, 268, 340, 362, 364, 477, 478, 485, 492, 499, 554, 697, 699, 700, 701, 745, 833, 837, 860, 863, 878], "70": [5, 9, 12, 15, 19, 21, 34, 41, 45, 46, 47, 58, 59, 80, 87, 89, 102, 103, 107, 108, 111, 113, 115, 134, 136, 140, 143, 144, 156, 158, 159, 166, 169, 170, 183, 184, 194, 195, 201, 204, 208, 210, 225, 226, 229, 230, 233, 238, 240, 243, 263, 264, 265, 266, 334, 475, 477, 478, 557, 699, 701, 713, 716, 723, 724, 727, 878], "outsid": [5, 16, 24, 26, 41, 45, 50, 108, 134, 135, 140, 144, 156, 158, 159, 161, 176, 181, 182, 183, 184, 185, 199, 201, 206, 207, 209, 214, 216, 257, 260, 263, 264, 265, 266, 267, 269, 270, 271, 272, 274, 277, 278, 279, 291, 388, 409, 416, 451, 477, 478, 510, 528, 556, 557, 571, 573, 697, 699, 701, 733, 742, 745, 762, 763, 777, 784, 788, 797, 800, 803, 805, 807, 808, 859, 860, 861, 863, 878], "exterior": [5, 26, 41, 45, 50, 108, 158, 159, 176, 181, 182, 209], "284": [5, 169, 195, 230, 243, 409, 878], "473": [5, 113, 195, 230, 276], "qhull": [5, 26, 41, 45, 50, 108, 158, 159, 176, 181, 182, 878], "189": [5, 32, 33, 34, 46, 98, 112, 169, 172, 174, 195, 225, 229, 230, 239, 243, 860], "solid": [5, 26, 41, 45, 50, 108, 150, 158, 159, 161, 176, 181, 182, 206, 769, 796, 860], "angl": [5, 26, 41, 45, 50, 108, 117, 130, 158, 159, 161, 169, 170, 172, 176, 181, 182, 183, 255, 268, 302, 306, 583, 638, 745, 750, 813, 860, 878], "244": [5, 13, 169, 195, 229], "complet": [5, 7, 9, 26, 32, 33, 34, 41, 45, 50, 108, 134, 144, 150, 155, 158, 159, 161, 169, 176, 180, 181, 182, 199, 201, 204, 207, 222, 225, 243, 255, 263, 264, 276, 302, 508, 557, 584, 598, 694, 741, 745, 753, 760, 837, 844, 853, 854, 855, 857, 860, 862, 863, 878], "141": [5, 98, 169, 195, 225, 230, 276], "limit": [5, 31, 34, 40, 41, 42, 45, 50, 58, 59, 89, 93, 108, 112, 113, 126, 135, 137, 141, 142, 158, 165, 166, 168, 176, 177, 179, 181, 182, 189, 191, 195, 199, 201, 204, 209, 214, 222, 230, 240, 243, 257, 259, 260, 261, 263, 264, 265, 266, 268, 269, 270, 271, 272, 274, 277, 278, 279, 281, 409, 416, 435, 442, 453, 474, 477, 478, 496, 556, 557, 561, 576, 585, 610, 614, 619, 625, 675, 681, 683, 697, 699, 700, 701, 760, 762, 764, 769, 776, 777, 779, 781, 783, 784, 786, 788, 793, 797, 800, 803, 805, 807, 808, 809, 827, 835, 837, 859, 860, 861, 863, 866, 878], "214": [5, 169, 208, 229, 230, 234], "through": [5, 9, 19, 27, 37, 45, 76, 84, 112, 134, 140, 141, 142, 144, 145, 149, 155, 156, 160, 165, 166, 168, 172, 176, 180, 181, 183, 184, 185, 194, 199, 201, 204, 205, 206, 209, 211, 214, 216, 217, 222, 233, 240, 243, 256, 261, 263, 264, 265, 266, 296, 323, 372, 450, 459, 468, 477, 509, 556, 557, 647, 709, 745, 767, 769, 773, 776, 778, 782, 790, 833, 835, 837, 844, 855, 859, 860, 866, 878], "0642": [5, 169], "3779": 5, "18": [5, 9, 11, 13, 19, 20, 28, 31, 33, 34, 35, 40, 43, 45, 47, 50, 56, 59, 64, 70, 77, 79, 80, 81, 82, 84, 89, 92, 94, 102, 107, 108, 109, 111, 113, 122, 126, 129, 140, 145, 160, 167, 168, 169, 171, 176, 177, 179, 180, 181, 183, 184, 191, 195, 198, 199, 202, 205, 206, 207, 208, 209, 214, 215, 216, 217, 222, 225, 226, 227, 229, 230, 232, 234, 235, 237, 243, 263, 264, 265, 266, 276, 278, 279, 283, 284, 292, 297, 306, 308, 353, 354, 355, 356, 357, 358, 368, 369, 370, 385, 393, 401, 415, 421, 438, 453, 456, 457, 468, 472, 474, 475, 477, 478, 497, 510, 512, 518, 543, 548, 550, 557, 569, 570, 577, 645, 648, 649, 651, 662, 664, 697, 700, 762, 775, 784, 786, 798, 804, 807, 809, 835, 840, 860], "7678": 5, "6600": 5, "0647": 5, "99": [5, 15, 19, 26, 35, 47, 49, 68, 69, 78, 80, 81, 89, 92, 102, 103, 107, 108, 111, 113, 119, 120, 137, 151, 152, 157, 160, 162, 169, 172, 177, 179, 180, 181, 184, 191, 194, 195, 206, 208, 216, 221, 222, 225, 226, 228, 229, 230, 243, 263, 264, 273, 477, 478, 775, 798, 860, 878], "leakag": [5, 27, 36, 45, 56, 274, 276, 363, 534, 536, 538, 617, 620, 725, 728, 745, 750], "constrain": [5, 108, 144, 166, 175, 178, 179, 180, 205, 243, 258, 263, 264, 292, 293, 294, 295, 296, 297, 359, 573, 833, 838, 844, 857, 860, 863, 878], "idea": [5, 7, 21, 27, 112, 155, 171, 175, 177, 201, 203, 204, 205, 206, 233, 235, 240, 243, 263, 264, 307, 432, 856, 857, 860, 861, 866], "inverse_oper": [5, 7, 11, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 47, 48, 54, 59, 89, 103, 106, 107, 108, 109, 172, 177, 233, 235, 273, 524, 525, 526, 527, 528, 530, 531, 536, 540, 541], "minimum_norm": [5, 7, 11, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 58, 59, 60, 89, 93, 103, 106, 107, 108, 109, 123, 166, 177, 178, 179, 181, 182, 191, 195, 205, 221, 222, 233, 235, 833, 846, 853, 860, 868, 878], "make_inverse_oper": [5, 7, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 89, 93, 108, 177, 178, 179, 182, 191, 195, 222, 538, 853, 860, 868, 878], "loos": [5, 7, 31, 34, 35, 40, 41, 42, 46, 48, 54, 55, 59, 60, 89, 93, 108, 144, 177, 179, 182, 191, 195, 222, 453, 454, 472, 474, 475, 524, 525, 526, 527, 528, 530, 531, 535, 539, 540, 541, 853, 860, 863, 878], "depth": [5, 7, 11, 22, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 52, 54, 55, 57, 58, 59, 60, 89, 93, 103, 106, 107, 108, 109, 123, 166, 172, 177, 178, 179, 181, 182, 191, 195, 217, 221, 222, 233, 235, 243, 261, 296, 297, 453, 472, 474, 475, 535, 654, 659, 665, 863, 866, 878], "snr": [5, 7, 10, 11, 19, 21, 27, 28, 29, 30, 36, 38, 39, 41, 48, 54, 55, 56, 60, 87, 89, 103, 108, 166, 177, 179, 181, 184, 191, 201, 221, 222, 233, 235, 260, 265, 267, 268, 274, 342, 453, 523, 524, 532, 535, 537, 538, 606, 615, 617, 661, 745, 768, 802, 853, 860, 866, 878], "lambda2": [5, 7, 11, 28, 29, 30, 38, 39, 40, 41, 45, 47, 48, 50, 54, 55, 58, 59, 60, 70, 89, 93, 103, 107, 108, 156, 166, 177, 179, 181, 183, 184, 185, 191, 207, 221, 233, 235, 524, 525, 526, 527, 528, 530, 531, 536, 537, 540, 541, 566, 853], "stc": [5, 7, 11, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 56, 58, 59, 60, 67, 91, 92, 93, 94, 103, 107, 108, 109, 115, 126, 133, 135, 136, 158, 165, 166, 172, 176, 177, 178, 179, 180, 182, 186, 187, 195, 222, 234, 261, 265, 270, 271, 273, 274, 275, 276, 277, 278, 279, 283, 284, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 359, 443, 452, 456, 462, 472, 473, 474, 475, 512, 519, 523, 524, 525, 526, 527, 528, 531, 533, 534, 538, 540, 615, 625, 638, 647, 661, 662, 663, 664, 689, 692, 693, 745, 803, 804, 808, 809, 833, 853, 873, 878], "apply_invers": [5, 7, 28, 30, 38, 39, 40, 41, 44, 45, 58, 59, 60, 89, 93, 166, 177, 178, 179, 181, 182, 191, 195, 205, 221, 222, 233, 235, 525, 526, 527, 528, 530, 531, 537, 540, 541, 833, 853, 860, 868, 878], "pick_ori": [5, 7, 11, 28, 29, 32, 33, 34, 38, 39, 41, 49, 60, 89, 107, 177, 178, 180, 181, 222, 296, 297, 472, 474, 475, 524, 525, 526, 527, 528, 530, 531, 540, 541, 878], "hemi": [5, 7, 11, 26, 32, 33, 34, 38, 41, 43, 47, 48, 49, 50, 58, 60, 93, 103, 108, 115, 126, 130, 133, 136, 155, 160, 166, 175, 177, 178, 179, 180, 181, 191, 195, 221, 222, 233, 234, 235, 269, 270, 271, 274, 277, 278, 279, 281, 467, 602, 620, 744, 745, 803, 808, 828, 878], "rh": [5, 24, 26, 34, 37, 38, 41, 43, 47, 59, 67, 89, 91, 93, 94, 106, 108, 115, 130, 136, 155, 158, 159, 160, 175, 177, 221, 222, 259, 269, 270, 271, 274, 277, 278, 279, 465, 510, 602, 620, 625, 745, 803, 808, 828, 860], "view": [5, 7, 11, 26, 28, 29, 31, 32, 33, 35, 40, 43, 47, 50, 53, 58, 59, 68, 78, 93, 94, 99, 103, 106, 107, 108, 112, 114, 117, 126, 135, 136, 140, 142, 150, 151, 152, 158, 159, 160, 166, 169, 170, 172, 175, 177, 180, 181, 189, 190, 191, 195, 204, 206, 216, 217, 221, 222, 230, 233, 234, 235, 243, 260, 261, 263, 264, 265, 266, 268, 270, 271, 272, 274, 277, 278, 279, 287, 301, 308, 477, 478, 523, 632, 732, 745, 773, 775, 798, 803, 806, 808, 813, 815, 833, 853, 857, 859, 860, 866, 878], "lat": [5, 11, 26, 58, 93, 103, 126, 136, 151, 160, 166, 195, 221, 235, 745], "initial_tim": [5, 7, 11, 32, 41, 43, 58, 59, 60, 93, 103, 126, 133, 166, 175, 177, 178, 179, 180, 181, 182, 191, 195, 221, 270, 271, 274, 277, 278, 279, 745, 803, 808, 809], "clim": [5, 7, 10, 22, 26, 42, 43, 47, 49, 54, 55, 58, 59, 103, 108, 126, 130, 135, 136, 146, 175, 177, 179, 180, 181, 210, 221, 233, 234, 235, 265, 266, 270, 271, 274, 277, 278, 279, 745, 764, 781, 803, 808, 809, 878], "percent": [5, 26, 42, 106, 108, 111, 179, 227, 230, 270, 271, 274, 277, 278, 279, 286, 540, 541, 557, 653, 654, 655, 656, 657, 659, 697, 700, 764, 790, 803, 805, 808, 809, 878], "lim": [5, 7, 22, 26, 42, 43, 49, 54, 55, 58, 59, 103, 108, 126, 130, 135, 136, 175, 177, 179, 180, 181, 234, 235, 270, 271, 274, 277, 278, 279, 764, 803, 808, 809], "400": [5, 7, 13, 40, 44, 74, 80, 91, 110, 126, 130, 135, 141, 142, 144, 146, 151, 156, 160, 171, 172, 176, 178, 181, 205, 206, 208, 210, 227, 230, 468], "background": [5, 21, 43, 115, 125, 126, 134, 135, 142, 151, 160, 165, 166, 172, 204, 206, 210, 212, 213, 214, 216, 217, 243, 261, 263, 264, 265, 266, 268, 270, 271, 272, 274, 277, 278, 279, 354, 355, 356, 409, 444, 445, 447, 477, 478, 497, 524, 562, 569, 570, 623, 642, 697, 699, 701, 713, 745, 748, 754, 761, 773, 779, 783, 786, 793, 798, 803, 804, 806, 808, 809, 817, 818, 829, 853, 859, 878], "w": [5, 21, 32, 33, 39, 45, 60, 61, 72, 82, 102, 126, 131, 137, 142, 152, 156, 160, 161, 178, 182, 194, 195, 201, 210, 222, 225, 238, 243, 260, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 296, 297, 308, 320, 368, 409, 416, 477, 478, 524, 532, 535, 556, 557, 583, 625, 654, 659, 679, 697, 699, 700, 701, 713, 722, 723, 726, 729, 762, 777, 783, 784, 798, 800, 805, 806, 807, 860, 878], "invers": [5, 7, 11, 19, 21, 32, 33, 34, 38, 43, 44, 45, 46, 48, 50, 51, 54, 55, 56, 58, 59, 60, 87, 89, 104, 105, 106, 107, 108, 109, 123, 149, 155, 156, 159, 160, 162, 170, 172, 175, 176, 178, 179, 180, 181, 182, 188, 191, 195, 199, 205, 207, 221, 222, 233, 235, 243, 255, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 296, 297, 352, 359, 365, 366, 370, 415, 423, 427, 443, 472, 473, 474, 477, 478, 511, 520, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 535, 536, 537, 538, 539, 540, 541, 542, 554, 557, 558, 606, 612, 615, 617, 619, 620, 627, 645, 646, 712, 745, 761, 772, 773, 802, 804, 813, 833, 838, 844, 863, 866, 868, 878], "adjust": [5, 24, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 50, 51, 54, 55, 58, 59, 89, 93, 108, 115, 119, 126, 149, 156, 158, 161, 170, 172, 177, 178, 179, 180, 182, 188, 191, 195, 207, 209, 216, 217, 222, 227, 255, 260, 263, 264, 265, 266, 272, 285, 341, 343, 409, 416, 469, 477, 478, 479, 488, 556, 557, 567, 578, 586, 675, 681, 686, 690, 691, 697, 699, 701, 716, 758, 768, 775, 776, 777, 781, 783, 784, 788, 797, 798, 800, 805, 806, 835, 841, 853, 857, 860, 866, 878], "svd": [5, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 89, 93, 108, 177, 178, 179, 182, 191, 195, 205, 222, 260, 271, 277, 279, 340, 532, 533, 534, 770, 853, 860, 878], "lead": [5, 22, 26, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 68, 69, 87, 89, 93, 108, 144, 151, 162, 167, 177, 178, 179, 182, 191, 194, 195, 199, 201, 209, 211, 222, 257, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 353, 443, 472, 474, 475, 477, 478, 524, 525, 526, 527, 528, 586, 617, 642, 684, 685, 687, 688, 697, 833, 835, 855, 860, 878], "largest": [5, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 89, 93, 108, 135, 151, 177, 178, 179, 182, 188, 191, 195, 222, 225, 409, 453, 501, 533, 534, 557], "38802": 5, "factor": [5, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 45, 48, 50, 54, 55, 58, 59, 60, 89, 93, 103, 106, 107, 108, 109, 135, 157, 177, 178, 179, 181, 182, 191, 195, 201, 202, 209, 211, 221, 222, 227, 228, 229, 233, 235, 239, 255, 258, 261, 262, 263, 264, 265, 266, 268, 270, 271, 273, 274, 277, 278, 279, 298, 353, 357, 364, 370, 417, 418, 421, 422, 430, 449, 477, 478, 487, 527, 537, 540, 541, 567, 568, 573, 574, 576, 583, 585, 587, 634, 636, 637, 649, 650, 678, 680, 697, 700, 703, 706, 709, 722, 724, 725, 726, 727, 728, 729, 735, 745, 758, 775, 783, 796, 798, 804, 806, 808, 833, 860, 863, 878], "trace": [5, 31, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 73, 79, 89, 92, 93, 108, 144, 149, 151, 166, 172, 177, 178, 179, 182, 191, 195, 199, 206, 208, 209, 214, 217, 222, 255, 261, 263, 264, 265, 266, 270, 271, 273, 274, 277, 278, 279, 409, 477, 478, 557, 742, 745, 772, 775, 779, 787, 789, 796, 798, 803, 808, 860, 878], "35945e": 5, "nchan": [5, 34, 40, 41, 42, 45, 48, 50, 52, 54, 55, 57, 58, 59, 89, 93, 108, 166, 167, 169, 177, 178, 179, 182, 191, 195, 214, 220, 222, 267, 268, 863, 878], "nzero": [5, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 89, 93, 108, 177, 178, 179, 182, 191, 195, 222], "invert": [5, 21, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 54, 55, 57, 58, 59, 60, 89, 93, 103, 106, 107, 108, 109, 135, 156, 158, 161, 166, 177, 178, 179, 180, 181, 182, 191, 195, 201, 221, 222, 233, 235, 240, 282, 292, 295, 415, 418, 423, 472, 474, 475, 683, 720, 854, 863], "vector": [5, 15, 18, 19, 27, 34, 36, 41, 56, 108, 110, 130, 162, 175, 177, 178, 188, 194, 203, 204, 205, 206, 208, 209, 222, 243, 255, 258, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 277, 278, 279, 289, 296, 297, 340, 342, 346, 354, 355, 356, 359, 410, 413, 415, 420, 425, 427, 443, 447, 448, 449, 472, 474, 475, 477, 478, 511, 517, 523, 524, 526, 527, 528, 533, 534, 538, 556, 557, 568, 569, 570, 572, 576, 582, 585, 594, 600, 608, 615, 623, 625, 632, 638, 697, 698, 699, 700, 701, 745, 777, 779, 781, 783, 784, 787, 796, 799, 803, 806, 808, 809, 829, 833, 857, 860, 863, 868, 878], "eigenlead": [5, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 54, 55, 58, 59, 60, 89, 93, 103, 106, 107, 108, 109, 166, 177, 178, 179, 181, 182, 191, 195, 221, 222, 233, 235, 860], "residu": [5, 28, 30, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 54, 55, 58, 59, 60, 69, 74, 89, 93, 166, 177, 178, 179, 181, 182, 183, 184, 191, 195, 204, 208, 221, 222, 233, 235, 299, 452, 472, 474, 475, 524, 768, 878], "explain": [5, 18, 28, 30, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 51, 54, 55, 58, 59, 60, 89, 93, 137, 159, 160, 166, 177, 178, 179, 181, 182, 183, 191, 195, 204, 221, 222, 233, 235, 272, 299, 409, 416, 472, 474, 475, 533, 534, 557, 789, 837, 841, 860, 878], "97": [5, 11, 13, 15, 19, 34, 41, 44, 47, 70, 78, 80, 82, 95, 102, 107, 108, 111, 113, 116, 134, 156, 160, 166, 169, 191, 194, 195, 204, 207, 208, 209, 225, 226, 229, 230, 233, 243, 430, 521, 566, 568, 585, 678, 853, 860, 878], "varianc": [5, 8, 14, 16, 28, 30, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 51, 54, 55, 58, 59, 60, 69, 89, 93, 113, 166, 177, 178, 179, 180, 181, 182, 183, 191, 195, 199, 204, 211, 221, 222, 233, 235, 243, 272, 274, 292, 293, 294, 295, 296, 297, 418, 454, 472, 474, 475, 533, 534, 535, 557, 565, 679, 690, 691, 725, 728, 768, 789, 790, 833, 860, 878], "control": [5, 11, 19, 22, 26, 32, 33, 34, 38, 41, 42, 47, 48, 50, 60, 93, 108, 113, 119, 126, 133, 140, 149, 150, 156, 166, 168, 171, 172, 178, 179, 181, 182, 188, 191, 195, 200, 201, 202, 204, 205, 206, 209, 210, 216, 221, 222, 225, 233, 257, 258, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 302, 303, 304, 305, 306, 307, 308, 311, 313, 315, 316, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 381, 382, 383, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 414, 415, 416, 417, 419, 420, 422, 425, 426, 428, 430, 434, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 459, 460, 464, 465, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 512, 513, 514, 515, 516, 517, 519, 520, 521, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 550, 553, 557, 559, 560, 562, 563, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 580, 581, 582, 583, 585, 586, 588, 589, 592, 593, 594, 597, 598, 599, 600, 604, 605, 606, 607, 608, 609, 611, 612, 613, 615, 616, 617, 619, 620, 621, 622, 623, 627, 628, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 642, 645, 646, 648, 649, 650, 651, 661, 662, 665, 667, 668, 669, 670, 671, 672, 673, 684, 685, 686, 687, 688, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 713, 715, 716, 719, 720, 723, 724, 725, 727, 728, 729, 730, 733, 734, 735, 740, 744, 745, 753, 759, 761, 764, 770, 771, 773, 776, 777, 778, 779, 780, 785, 788, 789, 790, 791, 795, 796, 798, 799, 801, 802, 803, 804, 808, 809, 810, 811, 814, 818, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 843, 854, 857, 859, 860, 878], "24807258e": 5, "11": [5, 9, 10, 11, 12, 13, 16, 19, 20, 24, 25, 28, 33, 34, 35, 45, 47, 49, 64, 69, 72, 73, 77, 78, 79, 80, 82, 84, 89, 90, 92, 95, 99, 100, 102, 107, 108, 109, 111, 113, 119, 120, 122, 126, 129, 137, 145, 157, 162, 166, 168, 169, 170, 171, 174, 176, 179, 180, 181, 182, 183, 185, 187, 191, 194, 195, 198, 200, 201, 203, 208, 209, 210, 213, 214, 220, 221, 225, 226, 227, 229, 230, 232, 233, 234, 235, 240, 243, 254, 263, 264, 273, 276, 334, 367, 379, 430, 466, 477, 478, 488, 490, 493, 494, 516, 535, 557, 583, 585, 589, 609, 654, 657, 659, 683, 697, 775, 798, 836, 843, 853, 860], "55793898e": 5, "13115753e": 5, "398": [5, 6, 10, 80, 105, 109, 195, 225, 230, 243], "876": [5, 6, 230, 276], "opm_data": [5, 6], "09": [6, 8, 9, 21, 42, 43, 44, 45, 49, 56, 72, 74, 80, 81, 102, 115, 119, 120, 122, 158, 159, 160, 162, 175, 177, 180, 185, 208, 226, 229, 230, 243, 269, 274, 521, 592, 678, 726, 729], "823": [6, 195, 208], "executauto_examples_dataset": 6, "06": [6, 10, 19, 20, 26, 35, 41, 44, 45, 46, 50, 52, 56, 59, 70, 74, 83, 84, 93, 99, 101, 102, 105, 155, 158, 174, 176, 179, 181, 183, 187, 194, 201, 206, 208, 213, 225, 226, 227, 230, 232, 235, 243, 275, 359, 417, 472, 566, 833, 836], "spm_faces_dataset_sgskip": [6, 7], "pipelin": [7, 8, 9, 10, 11, 12, 13, 15, 18, 108, 134, 137, 161, 165, 166, 172, 173, 194, 195, 199, 200, 204, 409, 411, 412, 413, 415, 416, 417, 418, 419, 421, 422, 423, 462, 558, 735, 844, 854, 855, 857, 878], "reconstruct": [7, 16, 53, 134, 158, 159, 162, 163, 164, 165, 182, 186, 187, 191, 194, 198, 199, 204, 209, 235, 243, 260, 261, 263, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 292, 293, 294, 295, 297, 302, 306, 307, 308, 311, 353, 359, 364, 365, 366, 388, 391, 417, 450, 461, 465, 467, 468, 469, 470, 471, 474, 510, 514, 516, 543, 557, 558, 567, 568, 576, 582, 585, 593, 602, 617, 620, 627, 629, 645, 646, 660, 663, 674, 692, 693, 737, 745, 756, 761, 763, 773, 779, 784, 803, 808, 809, 818, 828, 854, 857, 860, 866, 878], "scrambl": [7, 195, 854], "doe": [7, 28, 31, 55, 58, 59, 69, 70, 74, 79, 83, 111, 116, 126, 140, 141, 149, 151, 158, 160, 161, 162, 168, 178, 181, 182, 188, 189, 190, 199, 201, 202, 203, 204, 205, 207, 209, 210, 220, 222, 227, 229, 230, 233, 240, 243, 255, 256, 258, 260, 261, 262, 263, 264, 265, 266, 270, 271, 272, 274, 275, 277, 278, 279, 287, 296, 297, 301, 318, 331, 357, 360, 368, 369, 385, 439, 440, 441, 442, 443, 467, 477, 478, 496, 500, 523, 543, 546, 559, 571, 573, 579, 610, 614, 639, 644, 647, 697, 699, 700, 701, 732, 735, 740, 748, 783, 806, 837, 842, 853, 857, 859, 860, 863, 878], "quit": [7, 21, 126, 144, 150, 151, 162, 201, 202, 204, 209, 210, 214, 225, 226, 234, 557, 837, 855, 857], "so": [7, 10, 28, 31, 32, 38, 40, 44, 47, 63, 69, 70, 74, 78, 82, 92, 93, 94, 102, 103, 108, 113, 114, 126, 134, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 155, 156, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 180, 181, 182, 183, 184, 190, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 214, 215, 216, 217, 220, 221, 222, 225, 226, 227, 229, 230, 233, 234, 235, 239, 240, 255, 263, 264, 265, 266, 268, 270, 271, 273, 274, 275, 276, 277, 278, 279, 288, 289, 290, 297, 311, 333, 359, 366, 384, 388, 409, 412, 413, 415, 416, 417, 418, 419, 421, 422, 423, 440, 441, 443, 444, 448, 477, 478, 500, 524, 530, 543, 557, 558, 559, 567, 568, 577, 585, 586, 603, 615, 637, 644, 645, 684, 685, 687, 688, 735, 740, 745, 746, 754, 755, 779, 788, 790, 792, 798, 824, 833, 835, 837, 840, 842, 843, 844, 845, 853, 855, 857, 859, 860, 863, 878], "even": [7, 69, 73, 111, 127, 142, 155, 160, 166, 167, 168, 171, 172, 183, 190, 191, 198, 199, 201, 203, 204, 205, 206, 207, 211, 214, 216, 225, 240, 255, 263, 264, 265, 266, 307, 323, 376, 377, 378, 379, 381, 382, 384, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 477, 478, 505, 557, 709, 806, 837, 845, 854, 860, 878], "fast": [7, 21, 44, 127, 151, 155, 191, 238, 240, 243, 263, 264, 265, 266, 362, 417, 426, 476, 477, 478, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 516, 517, 557, 594, 699, 701, 716, 835, 857, 860, 878], "machin": [7, 18, 93, 94, 181, 195, 199, 200, 243, 249, 268, 281, 353, 568, 576, 585, 855, 878], "sever": [7, 69, 74, 80, 81, 113, 126, 145, 150, 151, 153, 155, 158, 159, 165, 166, 168, 169, 171, 172, 180, 181, 188, 189, 190, 191, 198, 200, 205, 206, 211, 214, 216, 217, 225, 233, 235, 258, 263, 264, 401, 444, 477, 478, 593, 700, 725, 728, 837, 840, 841, 842, 844, 849, 853, 854, 857, 858, 860, 863, 878], "alexandr": [7, 9, 10, 11, 12, 13, 15, 18, 28, 29, 30, 38, 39, 40, 42, 46, 47, 48, 50, 52, 53, 59, 64, 87, 91, 95, 96, 99, 106, 107, 109, 110, 112, 116, 120, 124, 130, 131, 134, 137, 159, 162, 180, 185, 195, 204, 227, 228, 229, 233, 234, 235, 239, 243, 265, 266, 353, 409, 474, 475, 525, 557, 852, 857, 859, 865, 878], "gramfort": [7, 9, 10, 11, 13, 18, 28, 29, 30, 38, 39, 40, 42, 46, 47, 48, 50, 52, 53, 59, 64, 91, 95, 96, 99, 106, 107, 109, 110, 112, 116, 120, 124, 130, 131, 134, 137, 159, 162, 180, 185, 195, 204, 227, 228, 229, 233, 234, 235, 239, 243, 265, 266, 353, 474, 475, 525, 557, 785, 852, 857, 859, 865, 878], "inria": [7, 9, 10, 11, 13, 18, 28, 29, 30, 38, 39, 40, 42, 46, 47, 48, 50, 52, 53, 59, 64, 91, 95, 96, 99, 106, 107, 109, 110, 116, 120, 124, 130, 131, 137, 159, 185, 227, 228, 229, 233, 234, 235, 239], "deni": [7, 11, 13, 16, 21, 26, 33, 42, 68, 77, 100, 108, 112, 113, 119, 120, 125, 131, 132, 151, 162, 195, 229, 230, 235, 243, 265, 266, 353, 525, 852, 857, 865, 878], "engemann": [7, 11, 13, 16, 21, 26, 33, 42, 68, 77, 100, 108, 112, 113, 119, 120, 125, 131, 132, 162, 195, 229, 230, 235, 243, 265, 266, 353, 525, 785, 852, 857, 865, 878], "spm_face": [7, 122, 214, 854, 868], "ica": [7, 17, 20, 27, 73, 76, 83, 84, 87, 162, 165, 166, 198, 199, 200, 203, 206, 212, 213, 216, 243, 263, 264, 265, 266, 268, 273, 311, 326, 327, 372, 413, 423, 450, 477, 478, 492, 551, 554, 571, 573, 574, 580, 581, 583, 597, 598, 612, 775, 788, 789, 790, 791, 792, 798, 817, 844, 857, 864, 867, 868, 878], "create_eog_epoch": [7, 172, 198, 200, 203, 204, 206, 570, 578, 855, 868, 878], "spm_path": 7, "spm_ctf_meg_example_fac": 7, "d_3d": 7, "downsampl": [7, 19, 78, 108, 134, 136, 145, 166, 194, 200, 202, 228, 255, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 408, 449, 450, 477, 478, 514, 576, 683, 697, 700, 804, 857, 878], "heavili": [7, 108, 157, 195, 288, 290, 735, 863], "advis": [7, 69, 189, 201, 255, 853, 860, 878], "real": [7, 32, 50, 91, 92, 151, 155, 156, 158, 160, 161, 201, 204, 205, 206, 207, 216, 220, 222, 227, 243, 296, 452, 477, 478, 519, 594, 700, 713, 723, 724, 725, 745, 844, 849, 866, 878], "jitter": [7, 168, 202, 477, 478, 857], "resampl": [7, 19, 21, 44, 74, 80, 81, 108, 134, 136, 140, 146, 149, 151, 165, 191, 194, 198, 201, 204, 206, 212, 213, 222, 233, 234, 235, 239, 261, 262, 263, 264, 265, 266, 268, 270, 271, 274, 277, 278, 279, 430, 444, 445, 447, 448, 450, 477, 478, 485, 492, 499, 554, 599, 697, 700, 701, 745, 775, 786, 803, 808, 817, 835, 855, 860, 867, 868, 875, 878], "npad": [7, 19, 74, 80, 81, 191, 194, 233, 234, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 449, 477, 478, 857], "auto": [7, 10, 15, 16, 19, 22, 31, 69, 73, 74, 75, 80, 81, 82, 89, 106, 112, 119, 120, 124, 147, 148, 156, 162, 165, 191, 194, 201, 204, 207, 209, 227, 228, 229, 230, 233, 234, 255, 260, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 304, 305, 311, 327, 340, 342, 346, 352, 353, 357, 358, 359, 364, 409, 411, 415, 416, 420, 421, 428, 430, 433, 438, 439, 440, 442, 443, 445, 447, 448, 449, 454, 472, 474, 475, 477, 478, 483, 485, 487, 489, 492, 493, 499, 503, 516, 521, 535, 554, 556, 557, 558, 566, 567, 568, 569, 571, 576, 577, 580, 585, 589, 603, 609, 628, 642, 697, 699, 700, 701, 745, 761, 762, 764, 769, 775, 777, 779, 781, 782, 784, 785, 788, 790, 792, 795, 797, 798, 799, 800, 801, 803, 805, 807, 808, 809, 831, 853, 854, 857, 878], "sfreq": [7, 8, 9, 14, 19, 21, 31, 63, 65, 67, 68, 69, 89, 91, 92, 93, 94, 108, 110, 113, 124, 126, 127, 136, 137, 144, 166, 168, 169, 172, 190, 191, 194, 200, 201, 202, 210, 211, 214, 215, 216, 220, 222, 240, 257, 258, 263, 264, 265, 266, 268, 270, 271, 273, 274, 277, 278, 279, 282, 372, 411, 414, 415, 420, 421, 422, 433, 435, 437, 444, 445, 447, 477, 478, 589, 603, 689, 702, 703, 704, 713, 715, 716, 721, 723, 724, 725, 726, 778, 786, 863, 878], "5e": [7, 8, 9, 13, 31, 32, 34, 35, 40, 41, 45, 49, 59, 75, 108, 123, 141, 172, 183, 185, 195, 207, 214, 222, 263, 264, 273, 452, 477, 478, 775, 798], "major": [7, 319, 477, 837, 857, 859, 863, 866, 878], "n_compon": [7, 8, 9, 12, 15, 73, 75, 82, 87, 116, 166, 172, 195, 204, 409, 416, 417, 423, 557, 558, 571, 878], "max_it": [7, 73, 75, 82, 166, 204, 524, 557, 583, 662, 704, 715, 878], "random_st": [7, 8, 9, 10, 15, 40, 75, 82, 89, 91, 92, 93, 112, 116, 137, 166, 204, 221, 222, 474, 510, 557, 583, 602, 649, 650, 651, 660, 661, 663, 676, 878], "correl": [7, 12, 18, 22, 26, 44, 73, 102, 146, 162, 195, 203, 204, 209, 225, 226, 229, 243, 255, 268, 275, 341, 353, 359, 415, 416, 421, 557, 571, 585, 681, 686, 854, 857, 860, 878], "indic": [7, 13, 16, 22, 31, 47, 48, 68, 69, 80, 99, 140, 141, 142, 144, 145, 146, 149, 151, 155, 156, 160, 168, 169, 170, 175, 178, 188, 191, 194, 198, 199, 200, 202, 204, 205, 208, 209, 211, 214, 216, 217, 220, 222, 227, 230, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 309, 311, 312, 313, 326, 328, 334, 353, 358, 368, 401, 409, 411, 415, 416, 417, 425, 430, 433, 438, 447, 448, 451, 477, 478, 485, 487, 489, 492, 493, 494, 499, 503, 533, 534, 548, 551, 553, 554, 556, 557, 558, 559, 560, 565, 567, 571, 572, 573, 574, 579, 582, 583, 584, 590, 591, 593, 594, 600, 609, 615, 616, 619, 628, 631, 637, 642, 665, 666, 670, 673, 677, 683, 684, 685, 687, 688, 689, 692, 697, 698, 699, 700, 701, 705, 706, 707, 708, 710, 727, 728, 745, 758, 761, 762, 763, 765, 769, 775, 776, 777, 779, 781, 782, 784, 788, 789, 790, 792, 794, 796, 797, 799, 800, 805, 807, 826, 831, 833, 842, 859, 860, 863, 878], "eog_epoch": [7, 172, 198, 203, 574], "mrt31": 7, "2908": 7, "eog_ind": [7, 204, 557], "eog_scor": [7, 172, 204, 273], "find_bads_eog": [7, 172, 204, 273, 557, 878], "plot_scor": [7, 73, 82, 204, 557, 878], "plot_compon": [7, 75, 204, 557, 864, 878], "topograph": [7, 8, 16, 18, 19, 27, 121, 129, 132, 151, 195, 243, 265, 266, 268, 272, 273, 409, 416, 490, 553, 554, 557, 615, 697, 762, 769, 779, 784, 790, 797, 805, 807, 878], "compon": [7, 8, 12, 14, 15, 21, 27, 29, 30, 31, 34, 41, 42, 44, 45, 47, 59, 69, 73, 75, 76, 77, 79, 84, 86, 87, 93, 118, 123, 137, 150, 151, 162, 166, 172, 177, 178, 179, 181, 182, 184, 191, 195, 198, 199, 200, 201, 202, 203, 205, 206, 209, 210, 216, 222, 233, 235, 243, 265, 266, 267, 269, 273, 296, 297, 311, 327, 353, 357, 358, 368, 369, 370, 379, 401, 402, 409, 412, 413, 415, 416, 417, 418, 419, 421, 422, 423, 430, 448, 449, 452, 453, 454, 472, 474, 475, 477, 478, 492, 527, 530, 531, 533, 534, 535, 536, 541, 557, 558, 565, 567, 568, 571, 576, 583, 585, 700, 785, 788, 789, 790, 791, 792, 798, 844, 853, 854, 857, 860, 863, 864, 878], "saw": [7, 140, 142, 167, 168, 171, 198, 199, 200, 206, 214, 229], "2nd": [7, 151, 194, 198, 227, 230, 240, 243, 571, 639, 878], "ecg": [7, 70, 72, 75, 80, 81, 82, 89, 91, 92, 93, 108, 110, 126, 130, 140, 141, 142, 146, 149, 151, 167, 168, 169, 172, 189, 191, 199, 200, 202, 203, 205, 207, 209, 210, 211, 214, 215, 216, 217, 220, 222, 263, 264, 265, 266, 273, 310, 358, 372, 442, 477, 478, 488, 489, 492, 503, 554, 557, 569, 573, 574, 577, 580, 649, 650, 683, 697, 699, 700, 701, 775, 791, 796, 798, 833, 860, 863, 878], "too": [7, 27, 68, 76, 84, 126, 140, 142, 144, 150, 151, 157, 158, 161, 165, 172, 178, 181, 198, 199, 200, 201, 202, 203, 206, 208, 210, 216, 225, 227, 229, 240, 263, 264, 265, 266, 268, 311, 327, 341, 372, 430, 477, 478, 483, 493, 560, 565, 567, 568, 576, 584, 585, 603, 609, 745, 765, 807, 837, 857, 878], "dipolar": [7, 452, 557, 789], "plot_overlai": [7, 82, 134, 204, 557, 878], "inspect": [7, 21, 28, 69, 82, 126, 141, 151, 156, 162, 191, 198, 209, 210, 255, 263, 264, 265, 266, 306, 308, 317, 331, 477, 478, 585, 593, 649, 650, 775, 779, 798, 849, 857], "clean": [7, 72, 73, 74, 83, 141, 144, 159, 166, 167, 172, 189, 199, 201, 203, 204, 205, 206, 210, 230, 240, 258, 263, 273, 477, 478, 490, 517, 557, 593, 608, 683, 789, 837, 857, 878], "default": [7, 21, 31, 43, 44, 73, 87, 102, 111, 113, 119, 126, 134, 135, 137, 140, 142, 145, 146, 149, 150, 151, 156, 158, 162, 166, 167, 168, 169, 170, 171, 172, 178, 179, 188, 189, 191, 199, 200, 202, 204, 205, 206, 207, 209, 214, 215, 216, 217, 220, 225, 229, 230, 235, 238, 239, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 315, 316, 318, 320, 321, 322, 323, 325, 326, 327, 328, 329, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 433, 434, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 459, 460, 461, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 588, 589, 590, 591, 592, 593, 594, 597, 598, 599, 600, 602, 604, 605, 606, 607, 608, 609, 611, 612, 613, 615, 616, 617, 619, 620, 621, 622, 623, 627, 628, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 678, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 737, 740, 742, 744, 745, 748, 753, 754, 758, 759, 761, 762, 763, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 814, 818, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 835, 836, 837, 841, 842, 853, 854, 857, 863, 878], "k": [7, 8, 9, 10, 11, 13, 14, 18, 19, 22, 28, 31, 38, 39, 41, 59, 65, 68, 69, 82, 96, 99, 103, 142, 143, 158, 160, 176, 181, 188, 194, 195, 201, 205, 215, 217, 229, 230, 238, 239, 240, 243, 260, 261, 263, 264, 265, 266, 269, 272, 274, 282, 287, 296, 299, 301, 409, 416, 472, 474, 475, 477, 478, 523, 524, 556, 557, 576, 617, 657, 678, 684, 685, 686, 688, 697, 699, 701, 713, 723, 732, 758, 762, 777, 783, 784, 787, 798, 800, 805, 806, 807, 833, 835, 837, 860, 863, 878], "append": [7, 8, 10, 16, 43, 44, 45, 47, 61, 67, 74, 79, 112, 137, 150, 172, 183, 194, 199, 204, 206, 210, 214, 225, 229, 230, 235, 257, 263, 264, 265, 266, 269, 477, 478, 557, 571, 576, 585, 643, 674, 697, 698, 699, 700, 701, 717, 837, 878], "covarari": 7, "noise_cov": [7, 11, 31, 34, 40, 41, 42, 45, 48, 49, 50, 51, 54, 55, 58, 59, 93, 108, 120, 152, 162, 172, 177, 178, 180, 182, 191, 204, 260, 263, 264, 265, 266, 273, 297, 299, 368, 369, 453, 472, 474, 475, 477, 478, 535, 557, 775, 779, 783, 785, 798, 863, 878], "shrunk": [7, 31, 34, 40, 41, 42, 45, 59, 120, 152, 162, 177, 183, 353], "visual": [7, 8, 13, 14, 15, 16, 32, 33, 35, 36, 41, 42, 45, 56, 57, 59, 60, 61, 68, 70, 72, 79, 86, 93, 100, 103, 104, 105, 112, 114, 115, 118, 119, 127, 129, 131, 133, 134, 135, 137, 141, 143, 145, 147, 148, 151, 152, 153, 154, 155, 160, 162, 165, 166, 168, 171, 172, 175, 178, 179, 183, 186, 187, 191, 195, 198, 200, 201, 202, 207, 209, 212, 213, 214, 215, 216, 217, 226, 227, 229, 239, 240, 243, 255, 258, 261, 263, 264, 265, 266, 268, 270, 271, 273, 274, 276, 277, 278, 279, 306, 307, 308, 312, 340, 341, 342, 343, 348, 350, 351, 359, 362, 363, 415, 436, 438, 450, 452, 462, 477, 478, 492, 512, 516, 523, 524, 534, 536, 538, 552, 557, 561, 585, 593, 609, 611, 612, 615, 617, 620, 623, 625, 638, 646, 649, 650, 684, 689, 699, 700, 713, 723, 724, 726, 727, 728, 729, 745, 750, 762, 768, 769, 775, 776, 778, 779, 780, 783, 786, 787, 788, 789, 790, 791, 792, 795, 796, 798, 812, 816, 817, 833, 834, 835, 838, 840, 841, 844, 849, 855, 857, 860, 861, 863, 868, 878], "dig": [7, 108, 117, 124, 136, 156, 157, 158, 159, 160, 166, 169, 170, 183, 184, 214, 220, 268, 305, 311, 341, 428, 484, 521, 761, 878], "montag": [7, 8, 19, 69, 78, 82, 114, 124, 134, 135, 136, 151, 159, 189, 190, 204, 220, 240, 263, 264, 265, 266, 268, 311, 314, 315, 317, 322, 324, 327, 329, 330, 331, 332, 333, 334, 335, 336, 364, 442, 461, 477, 478, 489, 586, 795, 807, 815, 818, 833, 854, 860, 878], "It": [7, 10, 13, 31, 39, 47, 55, 60, 69, 70, 73, 89, 93, 94, 102, 113, 115, 116, 120, 140, 142, 144, 145, 149, 150, 151, 156, 157, 158, 159, 160, 166, 169, 170, 171, 172, 175, 177, 180, 188, 189, 190, 195, 199, 200, 202, 203, 204, 205, 207, 208, 209, 214, 215, 217, 220, 225, 227, 228, 230, 233, 235, 239, 240, 255, 256, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 277, 278, 279, 281, 286, 296, 297, 302, 311, 329, 340, 353, 358, 364, 409, 417, 418, 444, 452, 469, 472, 474, 475, 477, 478, 485, 492, 496, 506, 516, 519, 524, 530, 531, 535, 540, 541, 557, 561, 567, 576, 585, 586, 593, 599, 606, 610, 614, 619, 623, 625, 663, 669, 672, 686, 691, 697, 700, 713, 720, 723, 735, 745, 783, 788, 808, 822, 825, 829, 833, 835, 837, 840, 841, 842, 844, 849, 853, 854, 857, 859, 860, 863, 866, 878], "spm_dig_montag": 7, "trans_fnam": [7, 67, 80, 156, 178, 191], "spm_ctf_meg_example_faces1_3d_raw": 7, "map": [7, 8, 10, 16, 19, 23, 24, 25, 26, 27, 36, 40, 41, 43, 56, 58, 70, 75, 77, 86, 93, 104, 105, 106, 108, 114, 118, 121, 123, 127, 129, 133, 134, 135, 136, 143, 144, 145, 146, 151, 156, 158, 160, 165, 166, 168, 175, 178, 181, 182, 194, 195, 198, 199, 200, 201, 204, 205, 206, 210, 214, 220, 221, 223, 224, 225, 230, 233, 234, 235, 243, 257, 260, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 282, 287, 289, 296, 309, 311, 323, 339, 359, 362, 363, 370, 409, 412, 413, 415, 416, 417, 418, 419, 421, 422, 423, 430, 433, 436, 438, 450, 454, 462, 472, 473, 474, 475, 476, 477, 478, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 513, 516, 517, 523, 524, 535, 548, 553, 554, 557, 558, 566, 571, 606, 612, 615, 617, 618, 622, 623, 632, 633, 638, 646, 651, 657, 662, 665, 678, 680, 681, 684, 686, 690, 691, 697, 698, 699, 700, 701, 706, 728, 745, 762, 764, 769, 772, 773, 775, 779, 780, 784, 790, 797, 798, 803, 804, 805, 806, 807, 808, 809, 815, 833, 835, 837, 853, 863, 866, 878], "make_field_map": [7, 123, 150, 265, 266, 780, 868, 878], "plot_field": [7, 123, 150, 265, 266, 878], "170": [7, 22, 25, 80, 83, 122, 137, 169, 183, 184, 185, 191, 201, 204, 225, 229, 230, 243], "daat": 7, "plot_whit": [7, 92, 120, 152, 162, 177, 263, 264, 265, 266, 477, 478, 775, 779, 798, 857, 878], "oct": [7, 11, 22, 24, 28, 29, 31, 35, 38, 39, 40, 41, 42, 43, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 67, 89, 91, 92, 93, 94, 103, 106, 107, 108, 109, 123, 130, 156, 158, 159, 160, 166, 172, 177, 178, 179, 181, 182, 191, 195, 221, 222, 233, 235, 255, 270, 274, 276, 278, 408, 645, 803, 878], "spm_": 7, "s_dspm_invers": 7, "comment": [7, 46, 61, 114, 126, 149, 150, 152, 171, 172, 189, 207, 220, 239, 256, 262, 263, 264, 265, 266, 269, 273, 334, 467, 614, 619, 697, 700, 730, 769, 783, 831, 833, 835, 837, 860, 878], "3d": [7, 27, 31, 35, 38, 40, 52, 59, 60, 95, 96, 121, 126, 129, 134, 135, 136, 142, 151, 156, 158, 160, 161, 175, 176, 185, 190, 195, 205, 209, 225, 228, 230, 255, 261, 263, 264, 265, 266, 268, 270, 271, 273, 274, 277, 278, 279, 289, 311, 312, 324, 337, 365, 417, 447, 448, 477, 478, 497, 507, 516, 568, 576, 585, 678, 684, 685, 745, 746, 747, 752, 754, 755, 756, 761, 766, 773, 780, 795, 801, 803, 804, 808, 810, 811, 813, 815, 816, 833, 836, 837, 841, 849, 854, 855, 858, 878], "both": [7, 19, 31, 32, 33, 38, 40, 41, 45, 47, 51, 58, 59, 68, 69, 70, 73, 86, 89, 93, 98, 108, 113, 131, 134, 140, 141, 149, 150, 151, 162, 166, 168, 169, 170, 171, 172, 175, 177, 178, 180, 181, 182, 183, 189, 190, 191, 195, 198, 200, 201, 202, 203, 204, 205, 206, 209, 210, 214, 222, 227, 229, 233, 234, 235, 238, 239, 240, 243, 258, 259, 262, 263, 264, 265, 266, 270, 271, 273, 274, 276, 277, 278, 279, 286, 296, 297, 305, 314, 353, 357, 358, 359, 368, 369, 370, 409, 416, 428, 433, 450, 452, 453, 472, 474, 475, 477, 478, 516, 535, 557, 560, 567, 571, 573, 599, 602, 615, 616, 620, 625, 646, 647, 651, 660, 678, 680, 684, 685, 687, 688, 697, 699, 700, 742, 745, 758, 768, 769, 776, 781, 782, 785, 788, 803, 808, 828, 833, 837, 843, 857, 858, 859, 860, 863, 878], "ven": [7, 50], "save_imag": [7, 233, 235, 745], "dspm_map": 7, "png": [7, 47, 114, 172, 233, 235, 255, 273, 878], "classifi": [8, 9, 10, 11, 13, 17, 20, 27, 195, 209, 263, 265, 266, 268, 413, 424, 426, 427, 557, 576, 612, 655, 656, 878], "featur": [8, 11, 15, 18, 19, 27, 97, 101, 142, 150, 171, 172, 194, 195, 206, 209, 217, 220, 225, 230, 240, 243, 265, 266, 270, 271, 273, 274, 277, 278, 279, 409, 412, 415, 416, 418, 419, 421, 424, 442, 477, 478, 557, 576, 585, 608, 681, 682, 769, 779, 781, 803, 808, 810, 814, 837, 844, 845, 854, 856, 857, 858, 859, 860, 878], "extract": [8, 9, 18, 21, 24, 27, 36, 38, 41, 56, 61, 72, 73, 79, 82, 99, 111, 112, 122, 126, 127, 135, 136, 141, 142, 144, 149, 151, 158, 159, 165, 166, 169, 171, 181, 188, 190, 191, 195, 198, 202, 204, 205, 206, 212, 213, 215, 220, 226, 227, 228, 235, 243, 255, 256, 263, 265, 268, 269, 270, 271, 274, 276, 277, 278, 279, 306, 340, 341, 342, 343, 344, 345, 348, 350, 351, 361, 370, 384, 409, 413, 416, 417, 433, 443, 450, 477, 480, 485, 492, 496, 512, 523, 524, 538, 557, 561, 585, 610, 614, 615, 619, 625, 669, 672, 744, 768, 787, 833, 837, 853, 854, 860, 863, 878], "en": [8, 19, 195, 243, 254, 865, 878], "wikipedia": [8, 195, 225, 243], "org": [8, 15, 32, 33, 69, 70, 78, 82, 87, 112, 113, 114, 115, 119, 126, 134, 135, 136, 195, 227, 229, 230, 233, 239, 243, 270, 274, 278, 299, 379, 401, 402, 417, 448, 558, 643, 681, 726, 729, 741, 803, 837, 857, 878], "wiki": [8, 155, 195, 270, 274, 278, 557, 741, 803, 833, 853], "common_spatial_pattern": [8, 195], "eegbci": [8, 9, 111, 159, 204, 868, 878], "document": [8, 15, 32, 63, 87, 126, 135, 136, 143, 149, 151, 160, 166, 168, 169, 170, 172, 177, 181, 189, 201, 202, 204, 206, 209, 214, 216, 217, 220, 239, 243, 257, 258, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 302, 303, 304, 305, 306, 307, 308, 311, 313, 315, 316, 328, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 381, 382, 383, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 411, 412, 414, 415, 419, 420, 422, 425, 426, 428, 430, 434, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 459, 460, 464, 465, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 512, 513, 514, 515, 516, 517, 519, 520, 521, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 550, 553, 557, 558, 559, 560, 562, 563, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 580, 581, 582, 583, 585, 586, 588, 589, 592, 593, 594, 597, 598, 599, 600, 604, 605, 606, 607, 608, 609, 611, 612, 613, 615, 616, 617, 619, 620, 621, 622, 623, 627, 628, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 642, 645, 646, 648, 649, 650, 651, 654, 659, 661, 662, 665, 667, 668, 669, 670, 671, 672, 673, 684, 685, 686, 687, 688, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 715, 716, 719, 720, 724, 725, 726, 727, 728, 729, 730, 733, 734, 735, 740, 744, 745, 753, 754, 761, 770, 773, 777, 778, 779, 780, 783, 785, 788, 789, 790, 795, 796, 798, 799, 801, 802, 803, 804, 808, 809, 810, 814, 818, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 841, 842, 844, 852, 853, 854, 856, 857, 860, 878], "physionet": [8, 137, 204, 243, 379, 401, 402, 854, 866, 878], "martin": [8, 10, 35, 47, 103, 243, 409, 852, 854, 860, 878], "billing": [8, 878], "tugraz": 8, "sklearn": [8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 116, 137, 171, 194, 195, 204, 225, 353, 358, 410, 412, 415, 418, 419, 423, 426, 741, 836, 837, 878], "discriminant_analysi": [8, 9], "lineardiscriminantanalysi": [8, 9], "model_select": [8, 9, 10, 12, 15, 16, 19, 353, 358, 426, 878], "shufflesplit": 8, "cross_val_scor": [8, 9], "events_from_annot": [8, 9, 111, 127, 135, 136, 137, 144, 168, 210, 240, 257, 282, 485, 492, 868, 878], "make_standard_montag": [8, 19, 69, 82, 124, 159, 170, 190, 240, 263, 264, 265, 266, 268, 322, 329, 477, 478, 489, 500, 868, 878], "concatenate_raw": [8, 9, 10, 80, 111, 191, 263, 264, 265, 266, 360, 361, 477, 478, 576, 585, 854, 868, 878], "read_raw_edf": [8, 9, 82, 111, 137, 159, 189, 204, 483, 485, 499, 854, 860, 864, 868, 878], "classif": [8, 9, 10, 11, 12, 15, 51, 138, 139, 146, 162, 165, 195, 243, 257, 263, 268, 299, 401, 410, 438, 477, 492, 603, 699, 778, 854, 878], "start": [8, 22, 29, 33, 34, 40, 61, 65, 69, 81, 92, 95, 126, 134, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 156, 157, 158, 160, 161, 165, 166, 167, 168, 170, 173, 174, 177, 178, 188, 195, 199, 200, 202, 203, 204, 205, 207, 209, 210, 214, 215, 216, 217, 220, 222, 225, 226, 227, 238, 239, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 277, 278, 279, 282, 283, 284, 295, 334, 340, 341, 342, 343, 353, 356, 358, 409, 415, 416, 421, 433, 449, 450, 451, 467, 468, 476, 477, 478, 483, 485, 492, 502, 505, 518, 527, 546, 557, 560, 564, 569, 570, 573, 574, 576, 577, 578, 579, 580, 599, 615, 662, 674, 684, 685, 687, 688, 697, 698, 700, 702, 703, 704, 705, 706, 707, 708, 732, 745, 750, 769, 771, 778, 784, 789, 791, 792, 798, 818, 833, 835, 837, 839, 840, 841, 842, 845, 848, 853, 856, 857, 860, 861, 863, 864, 878], "cue": [8, 135], "feet": [8, 9, 111, 379], "standard_1005": [8, 69, 82, 159, 170, 204], "set_montag": [8, 15, 19, 69, 78, 82, 124, 127, 134, 135, 136, 151, 159, 170, 182, 189, 190, 204, 220, 240, 263, 264, 265, 266, 268, 442, 477, 478, 489, 500, 860, 878], "skip_by_annot": [8, 9, 263, 264, 265, 266, 477, 478, 576, 585, 878], "t1": [8, 9, 30, 44, 50, 78, 111, 156, 157, 158, 159, 160, 161, 176, 255, 276, 278, 279, 302, 306, 307, 308, 319, 388, 469, 477, 582, 646, 763, 809, 833, 854, 860, 878], "t2": [8, 9, 111, 319, 477, 878], "train": [8, 10, 11, 13, 15, 16, 19, 87, 137, 194, 195, 409, 410, 411, 412, 413, 414, 416, 417, 419, 420, 421, 422, 426, 557, 558, 788, 837, 853, 854, 878], "epochs_train": [8, 137], "edf": [8, 9, 82, 111, 137, 159, 204, 442, 477, 478, 485, 492, 499, 603, 854, 860, 864, 878], "eegmmidb": [8, 9, 82, 111, 159, 204, 379, 878], "s001": [8, 9, 82, 111, 159, 204], "s001r06": [8, 9, 111, 159], "19999": [8, 111, 159, 204], "124": [8, 35, 95, 111, 159, 169, 179, 181, 187, 204, 229, 230, 243, 387], "994": [8, 9, 69, 82, 111, 159, 195, 204, 230], "s001r10": [8, 9, 111], "s001r14": [8, 9, 111], "bandpass": [8, 9, 12, 13, 14, 15, 16, 18, 21, 34, 42, 71, 75, 81, 87, 112, 114, 120, 132, 136, 141, 144, 146, 172, 195, 198, 200, 203, 204, 206, 210, 211, 230, 240, 263, 264, 265, 266, 411, 417, 420, 444, 445, 447, 477, 478, 589, 699, 701, 798, 799, 878], "265": [8, 9, 80, 81, 111, 169, 191, 230, 243, 654, 659], "656": [8, 9, 208, 230], "64": [8, 9, 12, 13, 19, 21, 26, 32, 33, 34, 35, 41, 45, 46, 47, 50, 58, 59, 80, 81, 82, 100, 102, 107, 111, 113, 137, 143, 158, 159, 169, 170, 171, 172, 176, 178, 181, 184, 185, 191, 194, 195, 204, 208, 222, 225, 226, 229, 230, 243, 260, 263, 264, 265, 266, 269, 272, 274, 409, 416, 475, 477, 478, 498, 530, 531, 540, 541, 556, 557, 697, 699, 701, 762, 777, 784, 788, 797, 800, 805, 807, 843, 854, 860, 864], "annot": [8, 9, 27, 38, 41, 44, 47, 67, 74, 76, 82, 84, 89, 93, 94, 111, 112, 125, 126, 127, 134, 135, 136, 144, 146, 151, 160, 165, 166, 173, 175, 181, 189, 190, 191, 194, 198, 204, 207, 217, 218, 219, 221, 258, 263, 264, 265, 266, 268, 282, 343, 344, 358, 362, 386, 438, 476, 477, 478, 479, 485, 490, 492, 497, 505, 517, 557, 559, 560, 561, 562, 563, 564, 573, 574, 576, 577, 578, 585, 586, 603, 612, 620, 636, 639, 701, 745, 761, 787, 790, 798, 799, 813, 814, 828, 833, 854, 855, 860, 868, 878], "descript": [8, 9, 111, 127, 135, 136, 137, 140, 142, 144, 151, 168, 169, 170, 188, 190, 191, 200, 210, 214, 215, 216, 220, 225, 257, 263, 264, 265, 266, 268, 272, 282, 321, 322, 354, 355, 358, 438, 477, 478, 479, 517, 557, 560, 573, 574, 577, 609, 697, 700, 701, 790, 799, 833, 837, 854, 863, 878], "801": [8, 144, 230, 239], "discrim": 8, "mont": [8, 243], "carlo": [8, 243, 878], "cross": [8, 9, 10, 11, 12, 15, 16, 19, 27, 32, 33, 34, 36, 44, 56, 77, 86, 104, 105, 118, 120, 121, 129, 137, 162, 166, 177, 194, 195, 199, 204, 206, 209, 221, 222, 229, 243, 260, 263, 265, 267, 268, 274, 275, 287, 289, 296, 297, 298, 353, 358, 359, 363, 370, 409, 412, 415, 421, 425, 426, 430, 450, 477, 523, 533, 534, 535, 536, 539, 554, 557, 567, 573, 576, 577, 585, 606, 612, 615, 617, 625, 698, 702, 703, 704, 705, 706, 707, 708, 714, 745, 771, 789, 833, 849, 854, 857, 866, 878], "epochs_data": [8, 411, 414, 418, 878], "get_data": [8, 9, 10, 12, 13, 14, 16, 18, 21, 69, 71, 74, 83, 95, 96, 99, 113, 114, 126, 132, 137, 140, 141, 146, 149, 166, 167, 195, 202, 205, 226, 230, 238, 239, 240, 263, 264, 265, 266, 477, 478, 698, 699, 701, 860, 878], "epochs_data_train": 8, "cv": [8, 9, 10, 11, 12, 15, 16, 19, 195, 353, 358, 425, 426, 878], "test_siz": 8, "cv_split": 8, "split": [8, 10, 11, 15, 16, 19, 58, 87, 93, 126, 145, 159, 166, 194, 195, 206, 221, 226, 235, 243, 263, 264, 265, 266, 269, 270, 271, 274, 277, 278, 279, 353, 358, 426, 468, 476, 477, 478, 497, 500, 530, 531, 585, 674, 683, 698, 726, 729, 745, 771, 803, 808, 863, 878], "assembl": [8, 9, 229, 535, 689, 855, 878], "lda": [8, 9], "log": [8, 9, 12, 21, 33, 82, 120, 128, 142, 162, 177, 199, 201, 204, 206, 210, 217, 227, 239, 240, 255, 257, 258, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 302, 303, 304, 305, 306, 307, 308, 311, 313, 315, 316, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 381, 382, 383, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 414, 415, 416, 419, 420, 422, 425, 426, 428, 430, 434, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 459, 460, 464, 465, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 512, 513, 514, 515, 516, 517, 519, 520, 521, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 550, 553, 557, 559, 560, 562, 563, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 580, 581, 582, 583, 585, 586, 588, 589, 592, 593, 594, 597, 598, 599, 600, 604, 605, 606, 607, 608, 609, 611, 612, 613, 615, 616, 617, 619, 620, 621, 622, 623, 627, 628, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 642, 643, 644, 645, 646, 648, 649, 650, 651, 661, 662, 665, 667, 668, 669, 670, 671, 672, 673, 684, 685, 686, 687, 688, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 715, 716, 719, 720, 724, 725, 727, 728, 729, 730, 733, 734, 735, 740, 743, 744, 745, 753, 761, 770, 773, 774, 777, 778, 779, 780, 785, 786, 788, 789, 790, 793, 795, 796, 798, 799, 801, 802, 803, 804, 805, 808, 809, 810, 814, 818, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 857, 868, 878], "norm_trac": [8, 9, 195, 409, 878], "scikit": [8, 9, 16, 18, 19, 116, 195, 204, 413, 415, 417, 418, 419, 420, 422, 423, 424, 427, 557, 855, 878], "learn": [8, 9, 16, 18, 19, 21, 69, 116, 143, 161, 162, 166, 195, 197, 199, 200, 204, 243, 249, 353, 413, 415, 417, 418, 419, 420, 422, 423, 424, 426, 427, 557, 583, 837, 844, 854, 855, 857, 878], "clf": [8, 9, 10, 11, 12, 13, 15, 18, 195, 424, 878], "class_bal": 8, "accuraci": [8, 10, 15, 33, 80, 134, 137, 243, 260, 263, 264, 265, 266, 272, 369, 370, 409, 415, 416, 421, 430, 452, 477, 478, 535, 556, 557, 571, 654, 659, 697, 699, 701, 725, 728, 735, 762, 777, 784, 788, 797, 800, 805, 807, 818, 863, 878], "chanc": [8, 9, 10, 11, 195, 859, 878], "fit_transform": [8, 9, 10, 14, 18, 195, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 422, 423, 424, 558], "plot_pattern": [8, 12, 195, 409, 416, 878], "ch_type": [8, 14, 22, 26, 42, 63, 79, 81, 86, 99, 111, 113, 119, 123, 124, 130, 141, 142, 145, 149, 150, 151, 166, 170, 176, 177, 190, 204, 209, 210, 217, 220, 230, 238, 239, 260, 263, 264, 265, 266, 317, 318, 372, 409, 416, 477, 478, 503, 516, 556, 557, 562, 571, 576, 638, 642, 697, 699, 700, 701, 776, 777, 784, 788, 800, 801, 805, 807, 878], "au": [8, 260, 263, 264, 265, 266, 272, 372, 409, 416, 477, 478, 697, 699, 701, 777, 784, 797, 805], "7e": [8, 9, 32, 35, 48, 49, 54, 55, 58, 69, 93, 120, 150, 152, 162, 172, 178, 179, 182, 183, 185, 191, 195, 199, 221], "8e": [8, 9, 32, 35, 49, 73, 108, 120, 162, 172, 177, 180, 183, 185, 191, 195], "0001": [8, 9, 32, 77, 86, 118, 123, 150, 179, 199, 474, 475], "00012": [8, 9], "6e": [8, 9, 34, 42, 46, 118, 120, 152, 172, 177, 183, 185, 195], "00011": [8, 9], "933333": 8, "533333": 8, "00025": 8, "00026": 8, "9e": [8, 9, 21, 42, 49, 86, 92, 123, 150, 152, 162, 177, 180, 182, 183, 184, 185, 195, 221], "w_length": 8, "int": [8, 11, 19, 31, 67, 71, 89, 92, 94, 108, 113, 126, 143, 149, 160, 169, 171, 191, 194, 201, 202, 211, 214, 220, 222, 235, 240, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 302, 303, 304, 305, 306, 307, 308, 310, 311, 313, 315, 316, 326, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 381, 382, 383, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 419, 420, 421, 422, 425, 426, 428, 430, 431, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 459, 460, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 548, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 562, 563, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 589, 592, 593, 594, 597, 598, 599, 600, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 615, 616, 617, 619, 620, 621, 622, 623, 627, 628, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 642, 644, 645, 646, 647, 648, 649, 650, 651, 660, 661, 662, 663, 665, 667, 668, 669, 670, 671, 672, 673, 674, 676, 677, 680, 683, 684, 685, 686, 687, 688, 689, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 715, 716, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 740, 744, 745, 753, 754, 758, 761, 762, 763, 769, 770, 771, 773, 774, 775, 776, 777, 778, 779, 780, 783, 784, 785, 788, 789, 790, 791, 792, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 818, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 878], "w_step": 8, "w_start": 8, "shape": [8, 16, 19, 22, 31, 41, 47, 50, 53, 63, 65, 69, 96, 113, 114, 119, 134, 136, 137, 140, 146, 149, 157, 158, 160, 170, 175, 181, 188, 194, 195, 201, 214, 220, 225, 226, 227, 229, 230, 233, 234, 235, 238, 239, 240, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 286, 296, 297, 298, 303, 304, 305, 311, 312, 313, 317, 320, 324, 328, 338, 343, 347, 348, 349, 350, 351, 362, 364, 367, 368, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 433, 437, 438, 443, 445, 447, 450, 451, 452, 453, 454, 467, 468, 470, 471, 472, 474, 477, 478, 480, 488, 501, 512, 514, 516, 518, 522, 532, 533, 534, 536, 539, 540, 552, 556, 557, 558, 560, 561, 562, 564, 565, 566, 567, 568, 571, 576, 579, 583, 585, 590, 591, 599, 600, 609, 611, 612, 628, 631, 634, 635, 636, 637, 646, 647, 652, 653, 654, 655, 656, 657, 658, 659, 664, 665, 674, 676, 677, 678, 682, 683, 684, 685, 686, 687, 688, 695, 697, 698, 699, 700, 701, 702, 703, 704, 709, 712, 713, 715, 716, 720, 722, 723, 724, 725, 726, 727, 728, 732, 733, 734, 735, 736, 738, 744, 745, 748, 749, 750, 760, 761, 762, 764, 765, 766, 769, 775, 776, 777, 778, 779, 781, 784, 785, 787, 788, 790, 791, 795, 797, 799, 800, 801, 803, 805, 806, 807, 808, 809, 813, 815, 818, 823, 826, 831, 833, 844, 853, 860, 878], "scores_window": 8, "train_idx": 8, "test_idx": 8, "y_train": [8, 137, 194], "y_test": [8, 137, 194], "x_train": [8, 194], "x_test": [8, 194], "slide": [8, 12, 21, 134, 156, 240, 273, 724, 725, 727, 728], "score_this_window": 8, "n": [8, 10, 43, 45, 69, 82, 92, 98, 108, 113, 137, 141, 144, 149, 151, 157, 160, 170, 172, 175, 188, 201, 204, 205, 206, 207, 214, 220, 222, 225, 227, 229, 230, 240, 243, 255, 257, 258, 261, 262, 263, 264, 265, 266, 269, 270, 271, 274, 275, 277, 278, 279, 281, 311, 320, 339, 349, 350, 351, 354, 355, 356, 359, 367, 379, 401, 402, 424, 430, 433, 444, 446, 467, 477, 478, 497, 539, 556, 557, 561, 564, 573, 574, 576, 585, 633, 657, 670, 671, 672, 673, 677, 682, 697, 700, 709, 710, 713, 723, 724, 725, 727, 728, 745, 748, 749, 764, 779, 786, 803, 808, 809, 815, 833, 845, 854, 857, 860, 864, 878], "w_time": [8, 9], "axvlin": [8, 10, 11, 13, 19, 45, 111, 126, 144, 160, 195, 209], "linestyl": [8, 9, 11, 21, 96, 110, 111, 112, 126, 150, 195, 201, 205, 210, 230, 713, 723, 769, 793, 878], "color": [8, 9, 10, 11, 12, 13, 19, 21, 22, 38, 39, 45, 47, 48, 49, 50, 54, 55, 59, 69, 80, 81, 95, 96, 100, 103, 111, 112, 113, 114, 115, 119, 126, 131, 132, 134, 135, 136, 137, 141, 142, 144, 149, 150, 151, 156, 160, 166, 168, 170, 172, 175, 176, 177, 178, 181, 183, 185, 194, 195, 198, 199, 201, 202, 205, 209, 210, 215, 216, 217, 222, 230, 235, 238, 239, 240, 259, 260, 261, 263, 264, 265, 266, 269, 270, 271, 272, 274, 276, 277, 278, 279, 368, 409, 416, 461, 462, 467, 468, 477, 478, 556, 557, 618, 619, 697, 699, 701, 713, 723, 745, 754, 758, 760, 761, 762, 764, 767, 769, 772, 773, 774, 775, 776, 777, 778, 779, 781, 783, 784, 786, 787, 788, 793, 797, 798, 799, 800, 801, 803, 804, 805, 806, 807, 808, 811, 827, 828, 833, 878], "axhlin": [8, 9, 10, 11, 13, 19, 21, 80, 81, 111, 112, 144, 160, 195, 240, 557, 791], "xlabel": [8, 9, 15, 16, 19, 22, 28, 29, 37, 39, 41, 53, 58, 67, 71, 81, 89, 92, 96, 106, 107, 109, 113, 126, 137, 151, 160, 177, 180, 181, 194, 201, 210, 211, 222, 225, 227, 235, 239, 240, 713, 723, 878], "ylabel": [8, 9, 15, 16, 19, 22, 28, 29, 37, 39, 41, 53, 58, 67, 68, 71, 81, 89, 92, 96, 106, 107, 109, 126, 137, 151, 160, 177, 180, 181, 194, 201, 206, 210, 211, 222, 225, 227, 235, 239, 240, 713, 723], "legend": [8, 9, 10, 11, 12, 16, 19, 21, 22, 28, 37, 38, 39, 41, 45, 67, 69, 95, 96, 109, 110, 126, 137, 144, 145, 150, 162, 166, 172, 180, 194, 195, 210, 214, 215, 235, 239, 240, 263, 264, 265, 266, 713, 723, 745, 758, 768, 769, 775, 778, 783, 878], "loc": [8, 10, 16, 37, 39, 69, 111, 122, 126, 136, 140, 143, 144, 145, 169, 176, 180, 183, 210, 239, 268, 329, 596, 713, 723, 768, 815, 860, 863], "zoltan": [8, 195, 243, 409], "kole": [8, 195, 243, 409], "quantit": [8, 162, 195, 243, 557, 857, 859], "abnorm": [8, 195, 243], "clinic": [8, 69, 70, 77, 111, 151, 195, 199, 203, 204, 243, 524, 556, 557, 565, 566, 571, 585, 600, 726, 729, 854, 860], "electroencephalographi": [8, 58, 70, 77, 111, 151, 195, 199, 203, 243, 274, 556, 566, 600, 860], "neurophysiologi": [8, 69, 70, 77, 111, 151, 195, 199, 203, 204, 243, 556, 557, 565, 566, 571, 600, 726, 729, 860], "79": [8, 15, 16, 19, 35, 41, 45, 47, 80, 102, 107, 111, 113, 118, 157, 158, 169, 176, 181, 184, 194, 195, 208, 225, 226, 229, 230, 243, 401, 429], "440": [8, 80, 195, 208, 225, 230, 243], "447": [8, 195, 225, 230, 243], "1991": [8, 195, 243, 409], "1016": [8, 12, 13, 18, 19, 21, 35, 42, 44, 59, 69, 70, 73, 74, 77, 93, 100, 111, 112, 118, 120, 125, 144, 151, 155, 162, 180, 195, 199, 201, 203, 204, 211, 225, 226, 230, 243, 265, 266, 269, 274, 275, 296, 353, 359, 387, 413, 415, 416, 417, 427, 472, 475, 524, 525, 535, 539, 556, 557, 565, 566, 571, 589, 592, 600, 654, 657, 659, 684, 685, 687, 688, 690, 691, 711, 713, 723, 726, 727, 729, 762, 852, 854, 857, 860], "0013": [8, 70, 77, 111, 151, 195, 199, 203, 243, 556, 566, 600, 860], "4694": [8, 70, 77, 111, 151, 195, 199, 203, 243, 556, 566, 600, 860], "91": [8, 13, 19, 26, 35, 41, 45, 47, 50, 70, 77, 79, 107, 108, 111, 113, 116, 151, 156, 158, 169, 176, 181, 182, 195, 199, 206, 207, 208, 209, 210, 225, 226, 228, 229, 230, 243, 334], "90163": [8, 195, 243], "gerwin": [8, 204, 243, 379, 854], "schalk": [8, 204, 243, 379, 854], "denni": [8, 204, 243, 379, 854], "mcfarland": [8, 204, 243, 379, 854], "thilo": [8, 204, 243, 379, 854], "hinterberg": [8, 204, 243, 379, 854], "niel": [8, 204, 243, 379, 854], "birbaum": [8, 204, 243, 379, 854], "jonathan": [8, 100, 204, 226, 243, 379, 392, 854, 878], "wolpaw": [8, 204, 243, 379, 854], "bci2000": [8, 204, 243, 379, 854], "bci": [8, 15, 87, 111, 159, 195, 204, 243, 379, 558, 854, 866, 878], "ieee": [8, 15, 40, 46, 51, 70, 82, 83, 87, 116, 137, 144, 162, 180, 195, 204, 238, 243, 263, 264, 265, 266, 296, 297, 299, 353, 379, 402, 409, 433, 474, 475, 477, 478, 557, 558, 566, 593, 699, 701, 716, 726, 729, 853, 854, 857, 860], "transact": [8, 15, 51, 70, 83, 87, 116, 137, 162, 180, 195, 204, 238, 243, 263, 264, 265, 266, 296, 297, 353, 379, 402, 409, 474, 477, 478, 524, 557, 558, 566, 593, 699, 701, 716, 853, 854, 857, 860], "biomed": [8, 15, 70, 83, 87, 116, 137, 180, 189, 195, 204, 222, 243, 254, 296, 297, 379, 402, 409, 557, 558, 566, 593, 853, 854, 860, 865], "engin": [8, 15, 70, 82, 83, 87, 116, 180, 195, 204, 205, 206, 222, 243, 296, 297, 379, 402, 409, 524, 557, 558, 566, 593, 837, 843, 853, 854, 860], "1034": [8, 204, 243, 379, 650, 854], "1043": [8, 169, 204, 243, 379, 854], "2004": [8, 69, 204, 243, 353, 379, 565, 657, 854, 860], "1109": [8, 15, 40, 46, 51, 70, 82, 83, 87, 116, 137, 144, 162, 180, 195, 204, 238, 243, 263, 264, 265, 266, 296, 297, 299, 353, 379, 402, 409, 433, 474, 475, 477, 478, 557, 558, 566, 593, 699, 701, 716, 853, 854, 857, 860], "tbme": [8, 15, 70, 83, 87, 116, 195, 204, 243, 379, 409, 557, 558, 566, 593, 853, 854], "827072": [8, 204, 243, 379, 854], "ari": [8, 137, 204, 243, 379, 401, 402, 844, 854, 878], "l": [8, 19, 44, 49, 98, 125, 126, 134, 137, 144, 160, 172, 188, 194, 204, 207, 209, 211, 230, 233, 239, 240, 243, 254, 255, 275, 359, 379, 401, 402, 415, 524, 557, 565, 657, 726, 729, 763, 769, 790, 843, 852, 854, 860, 865, 878], "goldberg": [8, 137, 204, 243, 379, 401, 402, 854], "lui": [8, 137, 204, 243, 379, 401, 402, 854], "amar": [8, 137, 204, 243, 379, 401, 402, 854], "leon": [8, 137, 204, 243, 379, 401, 402, 854], "glass": [8, 31, 35, 40, 44, 59, 60, 137, 181, 204, 243, 271, 277, 278, 279, 379, 401, 402, 804, 808, 809, 854], "jeffrei": [8, 137, 204, 243, 379, 401, 402, 524, 854], "hausdorff": [8, 137, 204, 243, 379, 401, 402, 854], "plamen": [8, 137, 204, 243, 379, 401, 402, 854], "ivanov": [8, 137, 204, 243, 379, 401, 402, 854], "roger": [8, 10, 137, 204, 243, 379, 401, 402, 854], "joseph": [8, 137, 204, 243, 379, 401, 402, 854], "mietu": [8, 137, 204, 243, 379, 401, 402, 854], "georg": [8, 137, 204, 211, 243, 379, 401, 402, 854, 878], "moodi": [8, 137, 204, 243, 379, 401, 402, 854], "chung": [8, 137, 204, 243, 379, 401, 402, 854], "kang": [8, 137, 204, 243, 379, 401, 402, 854], "peng": [8, 137, 204, 243, 379, 401, 402, 854], "h": [8, 95, 100, 111, 126, 134, 137, 201, 203, 204, 216, 243, 255, 257, 263, 264, 320, 379, 401, 402, 445, 448, 556, 600, 657, 679, 695, 710, 775, 786, 852, 853, 854, 860, 878], "eugen": [8, 137, 204, 243, 379, 401, 402, 854], "stanlei": [8, 137, 204, 243, 379, 401, 402, 854], "physiobank": [8, 137, 204, 243, 379, 401, 402, 854], "physiotoolkit": [8, 137, 204, 243, 379, 401, 402, 854], "new": [8, 14, 19, 27, 31, 61, 68, 80, 112, 134, 137, 140, 142, 145, 149, 151, 161, 165, 172, 175, 182, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 214, 216, 217, 220, 225, 228, 229, 230, 238, 243, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 283, 284, 286, 287, 292, 296, 297, 299, 301, 303, 304, 305, 306, 307, 308, 311, 312, 313, 315, 316, 317, 320, 321, 322, 327, 329, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 368, 369, 370, 371, 379, 385, 387, 388, 401, 402, 408, 409, 411, 413, 415, 416, 420, 421, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 456, 457, 459, 462, 466, 467, 468, 471, 472, 474, 475, 476, 477, 478, 485, 488, 489, 490, 492, 493, 494, 497, 500, 505, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 537, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 576, 577, 582, 584, 585, 586, 593, 595, 599, 600, 605, 609, 611, 612, 616, 620, 628, 630, 631, 632, 633, 634, 636, 639, 642, 646, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 674, 678, 680, 690, 691, 692, 696, 697, 698, 699, 700, 701, 709, 711, 714, 715, 716, 719, 724, 725, 727, 728, 729, 730, 732, 733, 734, 735, 742, 745, 746, 748, 753, 754, 758, 761, 762, 763, 764, 766, 768, 769, 771, 772, 773, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 805, 807, 808, 809, 811, 814, 819, 822, 823, 824, 828, 829, 831, 833, 835, 836, 839, 841, 842, 843, 845, 848, 853, 854, 857, 858, 859, 860, 861, 863, 865, 866], "research": [8, 69, 137, 141, 144, 151, 155, 168, 198, 204, 222, 240, 243, 254, 379, 401, 402, 525, 589, 679, 845, 852, 854, 856, 865], "resourc": [8, 122, 137, 144, 202, 204, 243, 379, 401, 402, 836, 854, 861, 866], "complex": [8, 32, 37, 113, 134, 135, 137, 204, 225, 243, 263, 264, 265, 266, 289, 379, 401, 402, 422, 477, 478, 528, 649, 700, 715, 716, 724, 725, 727, 833, 837, 854, 863, 878], "circul": [8, 137, 204, 243, 379, 401, 402, 854], "2000": [8, 10, 137, 200, 201, 203, 204, 206, 214, 243, 263, 264, 265, 266, 379, 401, 402, 409, 438, 477, 478, 479, 524, 556, 676, 853, 854, 860], "1161": [8, 137, 204, 243, 379, 401, 402, 854], "cir": [8, 137, 204, 243, 379, 401, 402, 854], "101": [8, 69, 113, 137, 158, 169, 190, 204, 206, 208, 225, 229, 230, 243, 379, 401, 402, 417, 854, 863], "e215": [8, 137, 204, 243, 379, 401, 402, 854], "355": [8, 13, 20, 80, 111, 169, 204, 213, 225, 230], "decoding_csp_eeg": [8, 20], "decomposit": [9, 11, 14, 17, 20, 27, 28, 29, 30, 32, 38, 39, 44, 47, 52, 57, 60, 73, 75, 102, 103, 106, 107, 109, 111, 112, 123, 166, 172, 181, 195, 198, 204, 205, 220, 221, 225, 227, 228, 230, 233, 235, 239, 240, 243, 263, 265, 266, 268, 270, 271, 274, 277, 278, 279, 409, 416, 417, 422, 423, 443, 490, 518, 538, 557, 571, 583, 703, 706, 716, 722, 724, 725, 727, 728, 853, 860, 863, 878], "iter": [9, 19, 27, 35, 36, 43, 44, 56, 59, 82, 89, 92, 93, 94, 103, 111, 133, 134, 137, 157, 169, 172, 179, 180, 194, 204, 216, 222, 229, 233, 234, 235, 243, 257, 258, 260, 263, 264, 265, 266, 267, 268, 269, 272, 273, 274, 275, 287, 290, 291, 294, 301, 346, 353, 359, 364, 412, 419, 426, 450, 472, 473, 474, 475, 476, 477, 478, 509, 523, 524, 526, 528, 531, 557, 560, 567, 571, 583, 617, 647, 662, 682, 683, 684, 685, 687, 688, 697, 699, 700, 701, 704, 715, 732, 735, 745, 758, 804, 860, 878], "roll": [9, 108, 123, 745, 813], "laura": [9, 195, 243, 878], "gwilliam": [9, 195, 243, 878], "nyu": [9, 37, 100, 119, 133, 171, 225, 878], "jean": [9, 10, 11, 12, 13, 14, 16, 18, 70, 77, 185, 195, 199, 204, 243, 557, 566, 657, 853, 860, 878], "remi": [9, 10, 11, 12, 13, 14, 16, 18, 878], "king": [9, 10, 11, 12, 13, 14, 16, 18, 195, 243, 878], "jeanremi": [9, 10, 11, 12, 13, 14, 16, 18], "alex": [9, 32, 38, 69, 70, 78, 82, 113, 114, 115, 119, 134, 135, 136, 185, 229, 230, 865, 878], "barach": [9, 12, 15, 87, 195, 243, 409, 878], "create_info": [9, 14, 15, 19, 63, 65, 69, 113, 124, 159, 188, 190, 220, 264, 266, 268, 409, 416, 478, 616, 868, 878], "time_frequ": [9, 21, 32, 33, 34, 91, 102, 110, 111, 113, 166, 201, 220, 222, 227, 228, 229, 230, 238, 239, 273, 414, 417, 422, 466, 868, 876, 878], "averagetfr": [9, 111, 113, 262, 265, 266, 316, 434, 466, 700, 719, 727, 728, 729, 730, 805, 868, 878], "stratifiedkfold": [9, 10, 15, 16, 426, 878], "make_pipelin": [9, 10, 11, 12, 13, 15, 18, 137, 195, 424], "labelencod": 9, "motor": [9, 17, 20, 27, 32, 74, 82, 108, 111, 144, 181, 195, 210, 263, 268, 311, 327, 362, 379, 409, 416, 438, 492, 554, 878], "imageri": [9, 17, 20, 27, 111, 195, 263, 268, 311, 327, 362, 379, 409, 438, 492, 554, 878], "n_split": [9, 10, 12, 15, 16, 19, 426], "speed": [9, 10, 11, 19, 32, 33, 41, 42, 44, 50, 73, 81, 82, 83, 93, 102, 108, 112, 134, 135, 141, 145, 151, 158, 161, 162, 165, 172, 179, 180, 183, 194, 195, 198, 204, 206, 208, 211, 226, 227, 233, 235, 263, 264, 270, 271, 274, 275, 277, 278, 279, 414, 415, 421, 465, 477, 478, 530, 531, 557, 640, 715, 745, 775, 777, 798, 803, 808, 835, 837, 857, 861, 866, 878], "shuffl": [9, 10, 12, 15, 230, 878], "n_cycl": [9, 32, 106, 109, 111, 113, 166, 201, 227, 228, 229, 230, 239, 422, 540, 541, 703, 706, 711, 713, 723, 724, 725, 727, 728], "mani": [9, 44, 69, 73, 111, 119, 120, 126, 140, 142, 146, 149, 150, 151, 152, 155, 158, 160, 161, 162, 166, 167, 171, 172, 177, 190, 194, 198, 199, 200, 201, 202, 204, 205, 206, 220, 222, 225, 238, 240, 254, 255, 256, 263, 264, 268, 273, 275, 296, 347, 353, 433, 438, 451, 468, 557, 646, 682, 692, 697, 698, 745, 761, 771, 788, 790, 791, 833, 835, 837, 840, 841, 853, 855, 857, 860, 862, 864, 866, 878], "cycl": [9, 106, 113, 184, 201, 239, 240, 263, 264, 340, 422, 477, 478, 540, 541, 557, 703, 706, 711, 713, 723, 724, 725, 727, 728, 769, 775, 778, 790, 798, 837, 878], "min_freq": 9, "max_freq": 9, "n_freq": [9, 113, 194, 229, 239, 414, 422, 677, 687, 688, 697, 698, 699, 700, 713, 715, 716, 722, 723, 724, 725, 727, 728], "bin": [9, 22, 27, 69, 97, 101, 119, 122, 142, 144, 171, 201, 209, 211, 227, 233, 238, 240, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 289, 296, 417, 477, 478, 484, 498, 576, 608, 677, 681, 682, 684, 685, 687, 688, 698, 699, 701, 769, 777, 781, 836, 837, 840, 841, 842, 843, 848, 860, 878], "tupl": [9, 114, 150, 170, 171, 172, 194, 204, 214, 216, 229, 230, 257, 258, 260, 261, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 286, 287, 301, 312, 321, 322, 359, 384, 409, 416, 424, 442, 443, 446, 449, 476, 477, 478, 485, 487, 488, 489, 492, 493, 494, 499, 503, 512, 514, 523, 540, 541, 556, 557, 560, 565, 571, 573, 574, 584, 609, 615, 616, 648, 649, 650, 662, 674, 682, 684, 685, 687, 688, 689, 697, 699, 700, 701, 709, 716, 732, 735, 745, 746, 754, 759, 762, 764, 765, 767, 769, 773, 774, 776, 777, 779, 781, 783, 784, 786, 788, 791, 793, 797, 799, 800, 803, 804, 805, 807, 808, 809, 813, 878], "linspac": [9, 19, 32, 40, 42, 67, 69, 112, 116, 136, 141, 150, 172, 177, 194, 198, 205, 206, 220, 221, 240], "freq_rang": [9, 240], "infer": [9, 10, 43, 44, 112, 156, 165, 170, 201, 215, 216, 226, 230, 231, 232, 243, 263, 264, 265, 266, 269, 270, 271, 274, 277, 278, 279, 296, 297, 317, 321, 328, 353, 357, 358, 362, 368, 369, 370, 409, 416, 439, 440, 442, 452, 453, 469, 472, 474, 475, 477, 478, 485, 487, 492, 535, 557, 628, 675, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 690, 697, 699, 701, 758, 783, 784, 785, 792, 798, 807, 831, 833, 844, 860, 878], "gap": [9, 126, 243, 474, 475, 477, 478, 798, 860, 878], "window_spac": 9, "centered_w_tim": 9, "n_window": [9, 576], "len": [9, 10, 15, 16, 18, 19, 28, 32, 39, 41, 42, 43, 45, 47, 52, 63, 67, 69, 71, 73, 89, 92, 99, 113, 116, 137, 140, 143, 144, 156, 159, 168, 176, 178, 183, 185, 191, 194, 198, 199, 200, 201, 202, 204, 206, 207, 209, 210, 211, 215, 221, 222, 225, 226, 227, 229, 230, 240, 257, 258, 260, 261, 263, 264, 265, 266, 268, 272, 274, 275, 276, 287, 301, 352, 359, 411, 419, 444, 447, 477, 478, 523, 646, 677, 699, 700, 713, 723, 732, 745, 750, 776, 798, 806, 807, 878], "instanti": [9, 144, 172, 195, 204, 220, 258, 260, 261, 262, 263, 264, 268, 272, 273, 275, 311, 478, 699, 701, 747, 758, 878], "encod": [9, 19, 126, 143, 144, 150, 166, 168, 172, 188, 194, 195, 208, 209, 210, 243, 249, 268, 345, 415, 485, 492, 499, 500, 501, 609, 831, 833, 860, 866, 878], "le": 9, "59999": [9, 184], "374": [9, 13, 80, 169, 214, 230], "loop": [9, 32, 42, 60, 108, 119, 135, 137, 149, 177, 181, 199, 230, 235, 240, 243, 402, 430, 568, 576, 585, 745, 854, 860, 878], "init": [9, 374, 837, 842], "freq_scor": 9, "fmin": [9, 32, 102, 103, 107, 112, 113, 115, 132, 137, 220, 238, 239, 240, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 414, 477, 478, 530, 531, 697, 698, 699, 700, 701, 702, 704, 705, 707, 715, 716, 726, 729, 745, 764, 799, 803, 805, 808, 809, 878], "fmax": [9, 32, 73, 102, 103, 107, 112, 113, 115, 132, 137, 166, 198, 202, 211, 220, 238, 239, 240, 263, 264, 265, 266, 414, 477, 478, 530, 531, 697, 698, 699, 700, 701, 702, 704, 705, 707, 715, 716, 726, 729, 745, 760, 799, 805, 878], "enumer": [9, 10, 15, 19, 28, 39, 40, 47, 70, 78, 93, 95, 103, 106, 111, 113, 134, 135, 136, 146, 149, 150, 151, 159, 194, 201, 204, 206, 210, 221, 230, 235, 240], "being": [9, 45, 78, 113, 115, 126, 136, 160, 166, 171, 172, 199, 201, 206, 207, 209, 214, 222, 225, 227, 230, 260, 263, 264, 265, 266, 269, 270, 271, 273, 274, 277, 278, 279, 361, 364, 443, 453, 467, 477, 478, 512, 557, 576, 578, 620, 697, 699, 701, 745, 763, 776, 779, 781, 782, 799, 804, 809, 837, 859, 860, 878], "w_size": 9, "isol": [9, 45, 113, 200, 204, 206, 878], "raw_filt": [9, 113, 141, 202, 204], "pad": [9, 15, 113, 126, 225, 230, 240, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 320, 444, 447, 448, 449, 477, 478, 716, 878], "drop_bad": [9, 16, 142, 151, 191, 200, 263, 264, 313, 466, 557, 699, 700, 860, 878], "fold": [9, 10, 12, 15, 16, 26, 137, 269, 274, 426, 660, 663], "roc_auc": [9, 11, 13, 195, 412, 419], "axi": [9, 10, 12, 14, 15, 16, 19, 21, 22, 28, 31, 35, 45, 58, 60, 67, 69, 71, 83, 89, 95, 99, 103, 106, 108, 109, 111, 112, 113, 114, 115, 116, 118, 126, 132, 134, 137, 140, 141, 142, 144, 150, 151, 156, 160, 166, 172, 181, 183, 185, 191, 194, 195, 199, 201, 211, 214, 217, 220, 225, 228, 230, 233, 235, 239, 240, 255, 260, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 274, 277, 278, 279, 286, 313, 320, 364, 409, 416, 422, 429, 449, 468, 477, 478, 488, 556, 557, 571, 650, 674, 676, 684, 685, 687, 688, 691, 697, 699, 701, 726, 729, 745, 758, 761, 762, 769, 776, 777, 778, 779, 780, 781, 782, 784, 785, 786, 788, 790, 792, 793, 797, 798, 799, 800, 805, 806, 807, 843, 860, 878], "701": [9, 135, 150, 154, 230], "205": [9, 169, 184, 195, 229, 230], "281": [9, 111, 169, 208, 225, 230], "629": [9, 195, 230], "17": [9, 10, 11, 12, 13, 19, 20, 26, 28, 32, 34, 35, 41, 43, 45, 47, 50, 60, 61, 70, 78, 80, 82, 83, 84, 89, 102, 107, 108, 113, 114, 122, 137, 145, 151, 156, 157, 158, 160, 169, 171, 172, 176, 177, 180, 181, 182, 183, 184, 185, 188, 191, 194, 195, 207, 208, 220, 225, 226, 227, 229, 230, 233, 234, 235, 243, 263, 264, 265, 266, 270, 273, 274, 275, 276, 278, 279, 287, 296, 353, 355, 358, 359, 370, 409, 416, 418, 476, 477, 478, 524, 530, 531, 585, 650, 662, 685, 697, 713, 723, 724, 727, 762, 803, 809, 854, 860], "165": [9, 30, 56, 146, 169, 201, 204, 208, 210, 225, 230, 243], "031": [9, 127, 140, 149, 169, 184, 222], "581": [9, 208, 230], "139": [9, 20, 169, 208, 222, 225, 230, 276, 878], "869": [9, 208, 230], "549": [9, 13, 207, 208, 230, 243], "22": [9, 11, 14, 15, 16, 19, 21, 28, 32, 34, 35, 39, 40, 44, 45, 47, 56, 80, 83, 84, 87, 89, 102, 107, 108, 109, 111, 113, 126, 132, 137, 140, 148, 150, 155, 164, 169, 171, 176, 180, 183, 188, 191, 194, 195, 198, 204, 207, 208, 213, 222, 225, 226, 227, 229, 230, 233, 234, 235, 238, 243, 263, 264, 265, 266, 275, 276, 311, 334, 338, 339, 359, 402, 448, 477, 478, 497, 512, 517, 557, 560, 599, 616, 633, 642, 692, 716, 761, 789, 799, 836, 860], "121": [9, 89, 140, 145, 166, 169, 170, 208, 225, 229, 230, 263, 264, 432], "756": [9, 48, 56, 195, 230], "523": [9, 230], "bar": [9, 134, 143, 150, 171, 183, 216, 217, 240, 260, 263, 264, 265, 266, 272, 273, 409, 412, 416, 419, 477, 478, 556, 557, 697, 699, 701, 745, 769, 774, 775, 776, 777, 781, 784, 788, 792, 797, 798, 800, 805, 814, 860, 878], "width": [9, 113, 126, 134, 160, 172, 198, 201, 202, 217, 225, 240, 261, 263, 264, 265, 266, 270, 271, 273, 274, 277, 278, 279, 312, 320, 325, 411, 420, 445, 447, 448, 468, 477, 478, 589, 697, 711, 713, 723, 726, 727, 729, 745, 754, 773, 774, 801, 803, 804, 808, 833, 857, 860, 878], "edgecolor": [9, 10, 239], "black": [9, 21, 45, 47, 48, 50, 111, 135, 142, 151, 160, 190, 206, 210, 260, 261, 263, 264, 265, 266, 270, 271, 272, 274, 277, 278, 279, 409, 416, 477, 478, 556, 557, 571, 697, 699, 701, 745, 758, 761, 762, 773, 777, 779, 783, 784, 788, 796, 797, 799, 800, 803, 805, 806, 807, 808, 878], "xtick": [9, 15, 19, 89, 126, 194, 201, 211, 225], "tf_score": 9, "center": [9, 37, 45, 67, 69, 79, 89, 94, 111, 119, 120, 134, 151, 156, 158, 160, 170, 185, 198, 200, 201, 202, 206, 225, 240, 254, 255, 265, 266, 269, 274, 304, 418, 488, 510, 521, 557, 566, 646, 649, 654, 660, 663, 697, 735, 745, 749, 785, 796, 804, 854, 860, 865, 878], "w_tmin": 9, "w_tmax": 9, "av_tfr": 9, "newaxi": [9, 15, 28, 99, 116, 230, 233, 234, 235, 745], "white": [9, 24, 26, 41, 52, 108, 111, 115, 120, 125, 126, 132, 134, 135, 142, 156, 158, 159, 160, 176, 178, 190, 209, 221, 225, 230, 255, 261, 263, 264, 265, 266, 269, 270, 271, 274, 276, 277, 278, 279, 368, 467, 477, 478, 510, 543, 544, 602, 620, 645, 697, 699, 701, 745, 761, 763, 773, 783, 785, 803, 806, 808, 833, 853, 878], "vmin": [9, 13, 19, 87, 106, 111, 113, 115, 116, 136, 141, 160, 176, 194, 195, 209, 210, 225, 227, 228, 239, 260, 263, 264, 265, 266, 272, 409, 416, 477, 478, 556, 557, 697, 699, 701, 745, 762, 776, 777, 784, 788, 797, 800, 805, 806, 807, 878], "red": [9, 54, 59, 69, 79, 80, 82, 99, 111, 131, 132, 142, 144, 150, 156, 160, 170, 178, 181, 190, 194, 198, 199, 202, 206, 209, 210, 217, 230, 233, 239, 240, 259, 260, 261, 263, 264, 265, 266, 269, 272, 409, 416, 477, 478, 556, 557, 571, 619, 697, 699, 701, 745, 760, 762, 769, 770, 773, 776, 777, 779, 784, 788, 797, 800, 805, 807, 833, 837, 878], "173": [9, 20, 70, 145, 158, 169, 195, 208, 225, 230, 243, 276, 566], "decoding_csp_timefreq": [9, 20], "supervis": [10, 18, 87, 137, 409, 426], "class": [10, 16, 19, 60, 68, 87, 93, 94, 113, 114, 137, 140, 142, 149, 151, 157, 165, 166, 168, 171, 172, 175, 194, 200, 201, 204, 214, 217, 220, 230, 241, 242, 252, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 287, 301, 311, 312, 364, 393, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 450, 476, 477, 478, 508, 523, 556, 557, 558, 647, 677, 697, 698, 699, 700, 701, 715, 716, 732, 733, 734, 735, 740, 741, 742, 745, 746, 747, 756, 818, 833, 837, 845, 846, 853, 855, 860, 861, 863, 868, 869, 878], "rel": [10, 24, 32, 33, 34, 42, 61, 74, 85, 108, 111, 112, 126, 134, 137, 140, 142, 144, 156, 166, 168, 170, 189, 198, 201, 202, 206, 209, 210, 211, 216, 239, 240, 255, 256, 258, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 308, 357, 364, 415, 430, 433, 445, 477, 478, 521, 557, 583, 599, 635, 637, 653, 690, 697, 700, 702, 703, 704, 716, 745, 758, 763, 778, 783, 792, 796, 798, 806, 818, 833, 837, 853, 860, 863, 878], "character": [10, 13, 195, 243, 557, 659, 791, 860], "confus": [10, 15, 137, 144, 657, 837], "serv": [10, 168, 215, 230, 260, 263, 264, 265, 266, 272, 280, 409, 416, 477, 478, 556, 557, 571, 697, 699, 700, 701, 743, 761, 762, 777, 784, 788, 797, 800, 805, 807, 837, 859, 860], "proxi": [10, 204, 208], "mental": [10, 13, 195, 243], "rsa": [10, 844, 854, 878], "24": [10, 11, 13, 19, 21, 26, 28, 34, 35, 45, 46, 47, 52, 64, 66, 80, 102, 107, 108, 113, 114, 117, 122, 129, 144, 162, 164, 169, 171, 181, 183, 189, 191, 195, 208, 209, 210, 213, 222, 225, 226, 227, 229, 230, 234, 235, 240, 243, 245, 257, 261, 263, 264, 265, 266, 268, 269, 273, 276, 296, 342, 348, 360, 362, 388, 417, 439, 440, 441, 442, 452, 474, 477, 478, 485, 492, 500, 505, 517, 524, 557, 560, 692, 696, 697, 699, 700, 701, 733, 735, 742, 745, 755, 763, 768, 775, 792, 798, 799, 807, 810, 814, 824, 853, 860], "imag": [10, 16, 27, 30, 32, 33, 35, 40, 44, 46, 55, 59, 69, 78, 87, 111, 119, 121, 123, 126, 127, 129, 134, 136, 143, 146, 149, 155, 156, 159, 160, 166, 170, 176, 180, 182, 190, 191, 198, 201, 204, 205, 206, 207, 222, 225, 226, 228, 229, 230, 239, 240, 243, 254, 260, 263, 264, 265, 266, 268, 272, 273, 275, 276, 278, 279, 288, 289, 290, 291, 296, 297, 302, 306, 311, 312, 320, 337, 352, 359, 365, 387, 409, 416, 469, 472, 474, 475, 477, 478, 486, 497, 524, 556, 557, 571, 612, 646, 652, 653, 654, 655, 656, 657, 658, 659, 697, 699, 701, 713, 723, 733, 734, 735, 745, 746, 748, 761, 762, 763, 776, 777, 781, 783, 784, 788, 790, 797, 800, 805, 806, 807, 809, 813, 815, 818, 833, 838, 843, 844, 854, 863, 865, 878], "92": [10, 13, 19, 34, 35, 44, 78, 80, 102, 111, 113, 143, 162, 169, 180, 194, 195, 200, 208, 225, 226, 227, 229, 230, 234, 235, 521, 860], "human": [10, 19, 33, 58, 93, 112, 125, 144, 151, 155, 178, 180, 194, 222, 243, 263, 264, 265, 266, 274, 289, 296, 373, 386, 411, 415, 420, 445, 447, 448, 477, 478, 562, 686, 713, 723, 724, 727, 833, 834, 844, 853, 854, 866], "anim": [10, 136, 265, 266, 854, 878], "inanim": [10, 854], "bodi": [10, 206, 207, 735, 854], "part": [10, 118, 126, 134, 140, 142, 144, 151, 155, 158, 160, 161, 162, 171, 182, 198, 201, 202, 206, 211, 214, 222, 243, 254, 263, 265, 266, 268, 269, 278, 279, 296, 297, 353, 357, 358, 368, 369, 370, 409, 416, 438, 452, 453, 472, 474, 475, 477, 479, 497, 530, 531, 535, 625, 674, 684, 685, 687, 688, 697, 700, 745, 762, 781, 785, 833, 837, 838, 859, 860, 861, 863, 866, 878], "6gb": 10, "build": [10, 12, 21, 32, 45, 155, 172, 175, 191, 198, 199, 201, 225, 233, 234, 235, 835, 841, 843, 859, 866, 878], "jaakko": [10, 191, 878], "leppakanga": [10, 191, 878], "jaeilepp": [10, 191], "student": [10, 191, 837], "jyu": [10, 191], "panda": [10, 14, 100, 111, 140, 143, 147, 148, 149, 151, 165, 171, 190, 191, 209, 214, 226, 238, 257, 258, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 433, 477, 478, 612, 683, 697, 699, 700, 701, 836, 837, 860, 878], "read_csv": [10, 190, 191], "standardscal": [10, 11, 13, 18, 195, 418], "linear_model": [10, 11, 12, 13, 15, 18, 195, 866], "logisticregress": [10, 11, 13, 15, 195, 413, 424], "metric": [10, 15, 27, 36, 56, 89, 116, 137, 195, 211, 260, 265, 267, 268, 274, 363, 412, 415, 419, 523, 535, 536, 539, 555, 557, 606, 615, 617, 745, 791, 859, 868, 873, 878], "roc_auc_scor": [10, 412, 419, 868], "manifold": [10, 116, 118, 762], "md": [10, 243, 650], "visual_92_categori": [10, 854, 868, 878], "stimulu": [10, 13, 33, 34, 49, 68, 70, 72, 80, 81, 89, 92, 106, 119, 140, 142, 143, 144, 146, 149, 162, 166, 167, 168, 169, 180, 183, 188, 191, 194, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 214, 215, 216, 217, 222, 229, 235, 240, 255, 257, 263, 264, 265, 266, 268, 313, 345, 353, 415, 433, 438, 477, 478, 554, 560, 662, 697, 699, 700, 701, 833, 854, 860, 878], "fname": [10, 12, 21, 53, 65, 77, 85, 86, 111, 118, 119, 127, 130, 160, 170, 204, 255, 257, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 273, 274, 275, 276, 277, 278, 279, 287, 300, 311, 312, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 350, 351, 439, 440, 441, 442, 477, 478, 480, 481, 482, 483, 486, 491, 495, 496, 497, 500, 504, 505, 506, 507, 508, 509, 538, 542, 546, 547, 556, 557, 595, 596, 597, 598, 601, 603, 604, 605, 606, 607, 608, 610, 613, 614, 615, 616, 617, 618, 621, 623, 624, 625, 626, 627, 628, 630, 632, 643, 697, 698, 699, 700, 701, 717, 718, 719, 730, 732, 739, 819, 820, 821, 822, 824, 825, 826, 829, 830, 831, 832, 864, 878], "visual_stimuli": 10, "csv": [10, 122, 191, 216, 257, 329, 335, 500, 603, 878], "cond": [10, 40, 46, 59, 61, 98, 100, 150, 230, 235, 256], "restrict": [10, 28, 29, 103, 125, 142, 151, 158, 161, 166, 178, 202, 203, 206, 207, 214, 221, 225, 228, 229, 240, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 277, 278, 279, 283, 284, 296, 297, 455, 456, 477, 478, 524, 525, 526, 527, 528, 530, 531, 540, 541, 549, 550, 553, 554, 555, 660, 697, 699, 700, 701, 708, 714, 864, 878], "max_trigg": 10, "row": [10, 72, 100, 111, 126, 141, 142, 143, 144, 145, 150, 166, 169, 172, 175, 191, 195, 210, 214, 225, 226, 258, 263, 264, 265, 266, 268, 270, 271, 274, 277, 278, 279, 298, 357, 368, 409, 415, 416, 433, 477, 478, 500, 536, 539, 557, 558, 576, 682, 683, 697, 698, 699, 700, 701, 745, 771, 776, 784, 788, 791, 860, 863, 878], "cond_tag": 10, "els": [10, 15, 28, 31, 40, 47, 93, 95, 113, 151, 160, 175, 191, 201, 206, 214, 225, 240, 260, 261, 263, 264, 265, 266, 268, 272, 287, 301, 409, 416, 477, 478, 516, 523, 557, 558, 646, 652, 653, 654, 655, 656, 657, 658, 659, 680, 699, 701, 724, 725, 732, 773, 777, 798, 836, 837, 861, 878], "str": [10, 30, 39, 41, 100, 127, 143, 145, 150, 171, 183, 194, 226, 240, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 519, 520, 521, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 548, 549, 550, 551, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 588, 589, 591, 592, 593, 594, 596, 597, 598, 599, 600, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 621, 622, 623, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 648, 649, 650, 651, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 665, 667, 668, 669, 670, 671, 672, 673, 674, 676, 678, 680, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 714, 715, 716, 719, 720, 724, 725, 727, 728, 729, 730, 732, 733, 734, 735, 737, 740, 741, 742, 744, 745, 748, 750, 753, 755, 757, 760, 761, 762, 763, 764, 765, 766, 769, 770, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 812, 814, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 837, 878], "bodypart": 10, "natur": [10, 19, 125, 172, 194, 229, 243, 386, 415, 449, 589, 854, 860, 863, 878], "n_run": 10, "sample_subject_": 10, "_tsss_mc": 10, "on_split_miss": [10, 477, 497, 878], "ignor": [10, 41, 47, 68, 78, 80, 108, 135, 140, 146, 151, 162, 166, 171, 172, 181, 184, 191, 198, 199, 200, 206, 225, 255, 258, 260, 261, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 277, 278, 279, 281, 282, 283, 284, 296, 297, 315, 323, 338, 347, 348, 353, 357, 359, 360, 362, 364, 368, 369, 374, 376, 377, 378, 381, 382, 384, 389, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 409, 416, 418, 428, 436, 438, 443, 445, 450, 456, 459, 466, 472, 474, 475, 477, 478, 479, 488, 490, 494, 497, 505, 535, 552, 556, 557, 560, 568, 576, 585, 605, 609, 611, 612, 620, 634, 636, 639, 645, 646, 662, 684, 686, 697, 699, 700, 701, 742, 762, 773, 774, 775, 777, 778, 781, 784, 788, 789, 797, 798, 799, 800, 805, 807, 824, 826, 828, 833, 837, 878], "filenam": [10, 43, 44, 70, 72, 75, 80, 81, 82, 92, 126, 135, 140, 141, 146, 151, 156, 157, 167, 168, 172, 198, 199, 200, 202, 204, 205, 206, 207, 209, 210, 211, 214, 215, 216, 217, 222, 255, 257, 258, 260, 263, 264, 265, 266, 269, 273, 276, 287, 300, 308, 311, 350, 351, 439, 440, 442, 452, 462, 468, 476, 477, 478, 481, 496, 497, 502, 506, 508, 519, 520, 596, 601, 603, 608, 610, 612, 614, 615, 618, 619, 620, 621, 624, 628, 632, 636, 643, 646, 662, 698, 717, 739, 745, 753, 798, 819, 820, 821, 823, 826, 827, 828, 831, 843, 878], "min_dur": [10, 211, 450, 559], "002": [10, 13, 32, 33, 120, 127, 140, 141, 142, 145, 149, 166, 169, 188, 194, 195, 200, 201, 203, 206, 214, 217, 222, 243, 450], "specif": [10, 19, 27, 43, 44, 45, 69, 104, 105, 111, 119, 126, 135, 137, 141, 143, 144, 150, 151, 155, 160, 161, 170, 171, 172, 175, 189, 190, 191, 198, 199, 201, 202, 204, 206, 207, 209, 211, 214, 217, 222, 225, 226, 227, 230, 238, 239, 240, 243, 257, 259, 260, 263, 264, 265, 266, 268, 269, 270, 271, 272, 274, 277, 278, 279, 286, 296, 311, 409, 416, 433, 438, 440, 444, 450, 477, 478, 479, 492, 510, 533, 534, 554, 555, 556, 557, 563, 568, 571, 576, 585, 619, 625, 646, 676, 683, 697, 698, 699, 700, 701, 713, 723, 727, 745, 764, 769, 776, 777, 784, 788, 797, 798, 800, 803, 805, 806, 808, 809, 827, 833, 837, 841, 844, 852, 854, 859, 860, 861, 863, 866, 867, 878], "appel": 10, "dissimilar": 10, "rdm": 10, "cichi": [10, 243, 854], "et": [10, 16, 19, 21, 194, 201, 203, 240, 254, 263, 264, 565, 860, 865, 878], "al": [10, 16, 19, 21, 194, 201, 203, 240, 263, 264, 565, 860, 878], "multiclass": [10, 243, 409, 426, 878], "multinomi": 10, "logist": [10, 11, 15, 18, 195], "paper": [10, 16, 201, 205, 243, 296, 472, 524, 557, 657, 852, 860], "pairwis": [10, 47, 69, 116, 243, 565], "binari": [10, 98, 160, 195, 215, 261, 410, 426, 450, 493, 494, 498, 501, 607, 677, 683, 695, 823, 835, 842, 843, 860, 863, 878], "roc": [10, 13, 658], "auc": [10, 13, 195, 658], "final": [10, 16, 19, 42, 68, 69, 78, 82, 83, 111, 112, 113, 126, 134, 137, 140, 141, 144, 146, 150, 151, 156, 160, 162, 166, 171, 179, 181, 182, 190, 194, 199, 200, 204, 205, 206, 209, 210, 225, 227, 229, 230, 233, 235, 240, 263, 264, 265, 266, 317, 328, 415, 452, 477, 478, 647, 815, 837, 853, 857, 859, 878], "sake": [10, 126, 200, 229, 864], "did": [10, 11, 28, 29, 30, 38, 39, 44, 47, 52, 57, 60, 82, 103, 106, 107, 109, 123, 160, 161, 162, 166, 170, 172, 175, 176, 181, 201, 204, 206, 207, 220, 221, 233, 235, 268, 276, 855, 863, 878], "instant": [10, 13, 42, 119, 177, 183, 195, 261, 265, 266, 286, 352, 452, 671, 672, 673, 697, 702, 703, 704, 705, 706, 707, 708, 780, 782, 784], "50m": 10, "300m": 10, "focu": [10, 12, 82, 126, 144, 200, 201, 843, 878], "liblinear": [10, 11, 13, 15, 18, 195], "multi_class": [10, 15], "y_pred": [10, 12, 19, 137, 412, 413, 415, 419, 878], "probabilist": [10, 243, 353, 412, 413, 419, 860, 866], "necessari": [10, 21, 31, 72, 93, 126, 135, 146, 151, 155, 156, 158, 160, 161, 166, 169, 171, 180, 198, 200, 201, 202, 203, 204, 205, 206, 214, 215, 220, 225, 256, 263, 264, 265, 266, 267, 270, 271, 274, 275, 277, 278, 279, 296, 297, 315, 317, 324, 357, 374, 409, 416, 418, 433, 444, 452, 476, 477, 478, 485, 492, 496, 524, 585, 593, 603, 610, 614, 642, 661, 697, 699, 700, 701, 745, 784, 803, 808, 833, 837, 853, 854, 858, 859, 860, 863, 878], "predict_proba": [10, 412, 413, 419], "ii": [10, 15, 19, 39, 92, 98, 106, 118, 135, 159, 183, 185, 190, 194, 211, 225, 235, 243, 270, 271, 274, 277, 278, 279, 319, 412, 419, 486, 557, 646, 683, 762, 878], "train_class": 10, "jj": 10, "im": [10, 13, 15, 22, 69, 114, 136, 195, 748, 807, 815, 878], "matshow": [10, 13], "rdbu_r": [10, 13, 16, 19, 22, 106, 113, 194, 195, 227, 228, 260, 263, 264, 265, 266, 272, 409, 416, 477, 478, 556, 557, 571, 697, 699, 701, 762, 776, 777, 781, 784, 788, 797, 800, 805, 806, 807, 837], "set_ytick": 10, "set_yticklabel": [10, 111], "set_xtick": [10, 240], "set_xticklabel": [10, 240], "colorbar": [10, 13, 15, 22, 69, 70, 106, 111, 113, 114, 115, 119, 126, 136, 142, 146, 150, 176, 182, 195, 206, 210, 217, 225, 226, 227, 229, 230, 260, 263, 264, 265, 266, 270, 271, 272, 274, 277, 278, 279, 409, 416, 477, 478, 556, 557, 571, 697, 698, 699, 701, 745, 759, 762, 764, 769, 770, 771, 776, 777, 781, 782, 784, 788, 797, 800, 803, 805, 806, 807, 808, 809, 878], "tight_layout": [10, 12, 15, 19, 39, 41, 58, 69, 71, 85, 113, 114, 119, 134, 176, 181, 194, 201, 206, 209, 210, 222, 225, 229, 230, 878], "relat": [10, 12, 19, 27, 32, 33, 34, 69, 76, 100, 104, 105, 111, 116, 127, 131, 136, 144, 146, 153, 154, 155, 158, 160, 162, 165, 166, 172, 173, 178, 188, 189, 194, 195, 198, 200, 201, 203, 204, 205, 208, 209, 210, 216, 226, 233, 239, 240, 243, 263, 264, 265, 266, 268, 273, 286, 313, 328, 352, 392, 415, 416, 433, 445, 450, 466, 477, 478, 548, 557, 565, 612, 642, 646, 676, 697, 745, 758, 766, 769, 776, 791, 792, 798, 806, 817, 833, 835, 837, 840, 852, 854, 855, 857, 858, 859, 860, 861, 866, 878], "histor": [10, 150, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 334, 477, 478, 697, 700, 860, 866, 878], "summar": [10, 45, 112, 151, 202, 204, 214, 263, 264, 270, 271, 274, 277, 278, 279, 769, 776, 853, 859, 864, 878], "dimension": [10, 150, 175, 195, 199, 205, 206, 214, 230, 233, 234, 235, 243, 265, 266, 270, 271, 274, 277, 278, 279, 353, 417, 422, 424, 557, 677, 697, 745, 779, 833, 860, 878], "reduct": [10, 17, 20, 27, 113, 191, 202, 210, 211, 243, 263, 264, 265, 266, 268, 368, 372, 408, 417, 423, 477, 554, 557, 558, 585, 593, 612, 725, 728, 878], "multi": [10, 16, 27, 36, 46, 56, 82, 103, 125, 170, 189, 195, 201, 233, 234, 235, 243, 260, 261, 263, 264, 265, 266, 267, 268, 272, 278, 301, 386, 409, 410, 414, 416, 425, 448, 450, 452, 475, 477, 478, 519, 523, 524, 526, 530, 531, 535, 556, 557, 571, 604, 606, 607, 632, 697, 699, 701, 715, 720, 762, 777, 784, 788, 797, 800, 805, 807, 811, 844, 860, 863, 878], "cluster": [10, 27, 97, 101, 111, 165, 226, 231, 232, 236, 237, 240, 243, 263, 265, 266, 268, 274, 275, 276, 317, 352, 359, 432, 450, 477, 523, 524, 538, 554, 612, 625, 627, 632, 669, 677, 678, 680, 684, 685, 687, 688, 689, 700, 727, 745, 804, 875, 878], "togeth": [10, 43, 69, 73, 141, 149, 151, 166, 172, 175, 188, 198, 204, 206, 209, 210, 214, 220, 230, 263, 264, 265, 266, 273, 282, 296, 297, 353, 357, 358, 368, 369, 370, 409, 416, 431, 452, 453, 472, 474, 475, 477, 478, 501, 535, 557, 584, 611, 628, 631, 684, 685, 687, 688, 715, 785, 826, 831, 833, 837, 878], "precomput": [10, 156, 181, 191, 263, 264, 359, 477, 478, 557, 645, 775, 792, 798, 878], "colormap": [10, 24, 58, 108, 111, 112, 115, 126, 134, 136, 142, 160, 206, 240, 260, 263, 264, 265, 266, 270, 271, 272, 274, 277, 278, 279, 409, 416, 477, 478, 556, 557, 571, 689, 697, 698, 699, 701, 745, 760, 762, 764, 769, 771, 776, 777, 781, 784, 787, 788, 797, 800, 803, 805, 806, 807, 808, 809, 828, 837, 878], "rainbow": 10, "sel": [10, 31, 226, 548, 551, 553, 554, 632, 698], "this_nam": 10, "scatter": [10, 45, 114, 225, 763, 878], "facecolor": [10, 47, 134, 151, 225], "scatterpoint": 10, "ncol": [10, 15, 72, 111, 119, 126, 137, 146, 151, 176, 183, 210, 265, 266, 409, 416, 557, 784, 788, 863, 878], "shepard": [10, 243], "multidimension": [10, 225, 243, 412, 419, 426], "tree": [10, 243, 863], "scienc": [10, 13, 33, 40, 100, 112, 180, 195, 222, 226, 240, 243, 254, 289, 296, 392, 474, 524, 557, 854, 860, 865], "210": [10, 13, 35, 80, 86, 123, 150, 169, 195, 219, 225, 230, 243], "4468": [10, 243], "390": [10, 12, 21, 80, 208, 230, 243], "1980": [10, 151, 243], "1126": [10, 243], "aarr": [10, 243], "laakso": [10, 243], "garrison": [10, 243], "cottrel": [10, 243], "content": [10, 27, 104, 158, 166, 169, 172, 201, 202, 205, 210, 217, 239, 243, 263, 264, 267, 273, 385, 386, 441, 508, 753, 769, 776, 833, 837, 842, 878], "assess": [10, 13, 137, 156, 162, 170, 198, 243, 524, 535, 557, 654, 659, 857, 860], "neural": [10, 18, 19, 22, 27, 33, 62, 66, 69, 70, 82, 116, 137, 151, 178, 180, 195, 198, 201, 204, 207, 211, 222, 240, 241, 243, 268, 289, 296, 297, 372, 409, 413, 415, 416, 472, 478, 557, 566, 583, 833, 838, 854, 878], "philosoph": [10, 243, 524, 860], "76": [10, 15, 16, 18, 19, 34, 35, 46, 47, 78, 79, 80, 102, 107, 108, 111, 113, 118, 159, 169, 176, 191, 195, 208, 225, 226, 227, 229, 230, 233, 234, 235, 243, 678, 762], "09515080050002726": [10, 243], "nikolau": [10, 243], "kriegeskort": [10, 243], "mariek": [10, 243], "mur": [10, 243], "peter": [10, 180, 238, 243, 263, 264, 265, 266, 477, 478, 524, 557, 699, 701, 716, 726, 729, 860, 878], "bandettini": [10, 243], "connect": [10, 38, 47, 69, 160, 166, 171, 222, 225, 243, 269, 288, 290, 296, 297, 374, 589, 677, 684, 685, 687, 688, 693, 765, 843, 844, 849, 868, 878], "branch": [10, 243, 837], "neuro": [10, 85, 243, 878], "radoslaw": [10, 243, 854], "aud": [10, 28, 29, 37, 39, 49, 91, 98, 103, 106, 107, 150, 230, 243, 263, 769, 854], "oliva": [10, 243, 854], "resolv": [10, 180, 204, 209, 243, 708, 841, 854, 878], "recognit": [10, 46, 100, 151, 201, 243, 726, 729, 854], "455": [10, 19, 230, 243, 276, 854], "462": [10, 208, 230, 243, 276, 854], "2014": [10, 12, 13, 18, 19, 40, 70, 112, 120, 151, 162, 195, 201, 243, 265, 266, 353, 413, 415, 416, 417, 427, 474, 566, 589, 679, 726, 729, 852, 854, 857], "1038": [10, 125, 194, 195, 243, 386, 415, 854], "nn": [10, 178, 243, 276, 646, 854, 863, 878], "3635": [10, 243, 854], "decoding_rsa_sgskip": [10, 20], "cortic": [11, 24, 26, 27, 31, 32, 41, 43, 58, 76, 79, 84, 89, 93, 108, 112, 121, 129, 155, 158, 163, 165, 166, 172, 175, 178, 180, 186, 191, 199, 222, 225, 234, 243, 255, 260, 266, 267, 268, 269, 270, 271, 274, 275, 276, 277, 278, 279, 281, 283, 284, 296, 297, 359, 363, 387, 443, 454, 472, 474, 475, 477, 510, 524, 525, 526, 527, 528, 531, 535, 540, 541, 554, 555, 572, 602, 605, 606, 617, 620, 627, 654, 657, 659, 660, 661, 662, 663, 693, 745, 756, 804, 833, 835, 838, 841, 844, 854, 863, 866, 878], "univari": [11, 165, 195, 225, 226, 231, 232, 243, 263, 268, 477, 554, 612, 678, 680, 681, 685, 700, 727, 875, 878], "confin": [11, 47, 158, 229, 289, 860], "potenti": [11, 15, 47, 69, 70, 72, 77, 87, 100, 116, 126, 127, 141, 144, 153, 154, 165, 168, 172, 195, 199, 201, 203, 207, 225, 226, 229, 240, 243, 263, 264, 265, 266, 268, 269, 274, 308, 313, 352, 359, 368, 392, 448, 465, 466, 477, 478, 479, 548, 558, 565, 566, 612, 642, 660, 663, 683, 690, 760, 769, 776, 806, 817, 853, 854, 857, 859, 860, 878], "relev": [11, 12, 26, 100, 111, 125, 151, 169, 180, 195, 201, 202, 203, 210, 243, 276, 371, 416, 557, 573, 696, 788, 790, 837, 852, 853, 857, 860, 863], "eric": [11, 19, 22, 26, 34, 39, 50, 57, 65, 71, 79, 83, 92, 93, 108, 117, 119, 122, 125, 126, 128, 134, 135, 136, 155, 157, 159, 179, 180, 182, 183, 184, 191, 194, 195, 208, 225, 229, 230, 233, 234, 235, 243, 269, 274, 387, 524, 593, 662, 684, 685, 687, 688, 852, 854, 865, 878], "larson": [11, 19, 22, 26, 34, 39, 50, 57, 65, 71, 79, 83, 92, 93, 108, 117, 119, 122, 125, 126, 128, 134, 135, 136, 159, 179, 180, 182, 183, 184, 191, 194, 195, 208, 225, 229, 233, 234, 235, 243, 263, 264, 265, 266, 269, 274, 387, 477, 478, 593, 662, 852, 854, 865, 878], "feature_select": 11, "selectkbest": 11, "f_classif": 11, "apply_inverse_epoch": [11, 28, 45, 270, 271, 274, 277, 278, 279, 524, 525, 527, 528, 868, 878], "read_inverse_oper": [11, 28, 29, 30, 38, 39, 44, 47, 52, 57, 60, 103, 106, 107, 109, 123, 166, 181, 221, 233, 235, 542, 868], "cross_val_multiscor": [11, 195, 868, 878], "linearmodel": [11, 18, 195, 868, 878], "slidingestim": [11, 195, 426, 868, 878], "get_coef": [11, 18, 195, 868, 878], "meg_path": [11, 13, 14, 15, 16, 22, 28, 30, 31, 35, 37, 39, 40, 42, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 67, 68, 70, 71, 75, 77, 85, 86, 87, 91, 92, 93, 95, 96, 98, 99, 102, 103, 106, 107, 109, 110, 116, 117, 120, 130, 131, 132, 178, 179, 180, 181, 195, 222, 227, 228, 229, 230, 233, 234, 235], "fname_fwd": [11, 32, 33, 34, 41, 42, 43, 47, 48, 49, 54, 58, 177, 179, 221], "sample_audvi": [11, 22, 28, 29, 30, 31, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 64, 67, 77, 85, 86, 89, 91, 92, 93, 94, 103, 106, 107, 109, 115, 118, 119, 123, 126, 130, 133, 149, 150, 166, 172, 175, 176, 177, 178, 179, 180, 181, 195, 221, 222, 233, 234, 235, 255, 263, 264, 265, 266, 477, 478], "sample_audvis_filt": [11, 13, 14, 15, 16, 18, 28, 42, 49, 68, 71, 72, 75, 87, 95, 96, 98, 99, 116, 120, 131, 132, 141, 145, 151, 152, 166, 169, 172, 177, 180, 195, 200, 204, 230, 233, 235, 860], "40_raw": [11, 13, 14, 15, 16, 18, 28, 42, 49, 68, 71, 72, 75, 87, 95, 96, 98, 99, 116, 120, 131, 132, 141, 145, 151, 152, 166, 169, 172, 177, 180, 195, 200, 204, 230, 233, 235, 860], "event_fnam": [11, 14, 15, 16, 18, 68, 87, 95, 96, 99, 116, 120, 131, 228, 229, 230, 233, 235], "ev": [11, 13, 14, 15, 16, 18, 28, 68, 87, 93, 95, 96, 99, 102, 103, 116, 120, 131, 140, 145, 151, 172, 200, 215, 228, 229, 230, 233, 235, 255, 612, 613, 823, 857, 878], "fname_cov": [11, 41, 48, 49, 50, 54, 55, 58, 64, 93, 176, 179, 181], "fname_inv": [11, 28, 29, 30, 38, 39, 44, 47, 57, 60, 103, 106, 107, 109, 123, 181, 221, 233, 235], "inv": [11, 28, 29, 30, 38, 39, 44, 45, 47, 52, 57, 60, 93, 103, 106, 107, 109, 123, 134, 156, 158, 160, 166, 172, 177, 178, 179, 181, 182, 191, 195, 221, 222, 233, 235, 255, 443, 529, 532, 535, 537, 538, 542, 802, 837, 853, 860, 878], "aud_r": [11, 14, 15, 42, 229], "vis_r": [11, 14, 15, 42, 87, 229], "contra": 11, "setup": [11, 15, 16, 18, 24, 43, 44, 45, 68, 69, 71, 87, 95, 96, 99, 106, 107, 109, 116, 131, 134, 155, 227, 228, 233, 235, 239, 256, 276, 323, 374, 450, 836, 837, 838, 839, 841, 843, 854, 858, 863, 878], "read_ev": [11, 13, 14, 15, 16, 18, 28, 68, 87, 93, 95, 96, 99, 102, 103, 116, 120, 131, 140, 145, 151, 200, 215, 228, 229, 230, 233, 235, 264, 450, 609, 823, 833, 868, 878], "modifi": [11, 61, 68, 116, 134, 140, 149, 150, 151, 161, 165, 168, 169, 172, 173, 174, 182, 195, 199, 205, 207, 210, 216, 220, 225, 229, 238, 243, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 274, 275, 276, 277, 278, 279, 280, 286, 311, 317, 339, 360, 362, 363, 364, 383, 409, 411, 413, 414, 416, 417, 418, 420, 421, 423, 424, 431, 468, 472, 477, 478, 485, 492, 507, 524, 537, 549, 553, 556, 557, 579, 582, 584, 585, 586, 587, 588, 600, 633, 639, 642, 648, 649, 650, 651, 679, 690, 691, 697, 698, 699, 700, 701, 714, 716, 741, 745, 748, 761, 766, 780, 782, 798, 812, 813, 818, 845, 853, 854, 860, 863, 878], "your": [11, 31, 47, 68, 69, 93, 94, 116, 120, 126, 134, 135, 140, 141, 142, 149, 151, 155, 157, 158, 159, 161, 162, 166, 167, 168, 172, 177, 181, 182, 190, 191, 194, 195, 198, 199, 200, 201, 202, 204, 205, 206, 207, 209, 210, 214, 215, 216, 225, 238, 239, 240, 255, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 280, 296, 297, 308, 317, 328, 331, 334, 337, 353, 357, 358, 368, 369, 370, 387, 409, 416, 433, 450, 452, 453, 472, 474, 475, 477, 478, 488, 493, 535, 543, 556, 557, 560, 567, 573, 585, 603, 609, 683, 697, 699, 700, 701, 745, 775, 782, 785, 791, 792, 798, 803, 815, 835, 840, 841, 842, 843, 844, 845, 852, 853, 854, 855, 856, 857, 858, 860, 863, 878], "2443": [11, 42, 72, 75, 87, 91, 92, 106, 107, 109, 110, 116, 120, 146, 166, 167, 168, 169, 177, 180, 195, 198, 199, 200, 205, 206, 209, 214, 215, 216, 217, 222, 227, 228, 229, 233, 235], "grad": [11, 16, 22, 28, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 61, 75, 77, 85, 86, 92, 93, 95, 96, 98, 99, 102, 103, 106, 108, 109, 110, 112, 113, 115, 116, 118, 119, 120, 122, 123, 126, 130, 131, 140, 142, 145, 150, 152, 156, 157, 158, 162, 166, 169, 170, 172, 176, 177, 178, 179, 180, 181, 183, 195, 199, 200, 206, 208, 209, 214, 220, 221, 222, 227, 228, 229, 233, 235, 238, 239, 255, 258, 260, 263, 264, 265, 266, 270, 271, 273, 274, 277, 278, 279, 296, 297, 310, 317, 318, 337, 353, 357, 358, 368, 369, 370, 372, 409, 416, 418, 452, 453, 472, 474, 475, 477, 478, 513, 520, 535, 554, 555, 556, 557, 562, 567, 569, 570, 571, 573, 574, 576, 638, 683, 697, 699, 700, 701, 768, 769, 775, 776, 777, 779, 781, 783, 784, 785, 788, 798, 800, 801, 805, 806, 807, 833, 853, 860, 863, 878], "4000e": [11, 16, 28, 42, 45, 46, 75, 95, 96, 99, 102, 103, 106, 109, 112, 116, 120, 131, 152, 166, 177, 180, 195, 206, 227, 228, 229, 233, 235, 239, 258, 263, 264, 358, 557, 573, 574, 683, 853], "150e": [11, 16, 28, 42, 45, 95, 96, 99, 103, 106, 109, 116, 141, 142, 152, 166, 177, 180, 195, 206, 227, 228, 229, 230, 233, 235, 263, 264, 273, 477, 478, 775, 798, 853, 860], "v1": [11, 13, 14, 15, 16, 18, 26, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 67, 68, 70, 71, 72, 75, 77, 82, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 102, 103, 106, 107, 109, 110, 115, 116, 117, 118, 119, 120, 122, 123, 126, 128, 131, 132, 140, 141, 142, 146, 149, 150, 151, 152, 156, 157, 158, 160, 162, 166, 167, 168, 169, 172, 176, 177, 178, 179, 180, 181, 182, 189, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 214, 215, 216, 217, 221, 222, 227, 228, 229, 230, 233, 235, 337], "idl": [11, 13, 14, 15, 16, 18, 26, 28, 29, 42, 45, 49, 61, 67, 68, 70, 71, 72, 75, 82, 83, 87, 91, 92, 93, 95, 96, 98, 99, 102, 103, 106, 109, 110, 116, 117, 120, 122, 126, 128, 130, 131, 132, 141, 142, 146, 151, 152, 156, 157, 158, 160, 162, 166, 167, 168, 169, 172, 177, 180, 182, 183, 191, 195, 198, 202, 203, 204, 205, 206, 208, 209, 214, 217, 221, 222, 227, 228, 229, 230, 233, 235], "v2": [11, 13, 14, 15, 16, 18, 26, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 67, 68, 70, 71, 72, 75, 77, 82, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 102, 103, 106, 107, 109, 110, 115, 116, 117, 118, 119, 120, 122, 123, 126, 128, 131, 132, 140, 141, 142, 146, 149, 150, 151, 152, 156, 157, 158, 160, 162, 166, 167, 168, 169, 172, 176, 177, 178, 179, 180, 181, 182, 189, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 214, 215, 216, 217, 221, 222, 227, 228, 229, 230, 233, 235, 243, 386, 585, 878], "v3": [11, 13, 14, 15, 16, 18, 26, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 67, 68, 70, 71, 72, 75, 77, 82, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 102, 103, 106, 107, 109, 110, 115, 116, 117, 118, 119, 120, 122, 123, 126, 128, 131, 132, 140, 141, 142, 146, 149, 150, 151, 152, 156, 157, 158, 160, 162, 166, 167, 168, 169, 172, 176, 177, 178, 179, 180, 181, 182, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 214, 215, 216, 217, 221, 222, 227, 228, 229, 230, 233, 235], "refer": [11, 14, 22, 27, 28, 29, 30, 31, 38, 39, 41, 45, 47, 48, 49, 50, 52, 57, 60, 61, 64, 67, 68, 71, 72, 75, 76, 78, 80, 81, 84, 85, 86, 89, 91, 92, 94, 95, 96, 98, 99, 103, 106, 107, 109, 115, 119, 123, 126, 131, 132, 145, 149, 150, 152, 156, 158, 159, 165, 166, 167, 169, 170, 172, 175, 177, 179, 181, 182, 188, 200, 208, 212, 213, 214, 221, 233, 235, 239, 240, 243, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 289, 296, 297, 299, 301, 334, 353, 358, 359, 368, 379, 383, 386, 387, 390, 391, 392, 401, 402, 409, 410, 413, 415, 416, 417, 419, 425, 427, 430, 433, 435, 448, 472, 474, 475, 477, 478, 488, 501, 520, 521, 524, 525, 535, 539, 554, 555, 556, 557, 558, 562, 565, 566, 568, 569, 570, 571, 572, 576, 583, 585, 586, 589, 592, 593, 600, 637, 639, 642, 646, 650, 654, 657, 659, 662, 679, 681, 683, 684, 685, 686, 687, 688, 690, 691, 697, 699, 700, 701, 705, 706, 707, 708, 709, 711, 713, 715, 716, 723, 724, 726, 727, 729, 745, 747, 761, 762, 777, 784, 785, 788, 789, 792, 797, 799, 800, 805, 807, 817, 833, 841, 852, 859, 861, 863, 878], "6450": [11, 13, 14, 15, 16, 18, 28, 42, 49, 68, 71, 72, 75, 87, 95, 96, 98, 99, 116, 120, 131, 132, 141, 151, 152, 166, 169, 172, 177, 180, 195, 204, 230, 233, 235], "48149": [11, 13, 14, 15, 16, 18, 28, 42, 49, 68, 71, 72, 75, 87, 95, 96, 98, 99, 116, 120, 131, 132, 141, 151, 152, 166, 169, 172, 177, 180, 195, 204, 230, 233, 235], "956": [11, 13, 14, 15, 16, 18, 28, 29, 42, 45, 49, 67, 68, 70, 71, 72, 75, 79, 82, 87, 91, 92, 95, 96, 98, 99, 102, 103, 106, 109, 110, 116, 117, 120, 122, 126, 131, 132, 141, 143, 146, 151, 152, 156, 162, 166, 167, 168, 169, 172, 177, 180, 182, 195, 198, 202, 203, 204, 205, 206, 207, 214, 217, 221, 222, 227, 228, 229, 230, 233, 235], "320": [11, 13, 14, 15, 16, 18, 28, 29, 42, 45, 49, 67, 68, 70, 71, 72, 75, 80, 82, 87, 91, 92, 95, 96, 98, 99, 102, 103, 106, 107, 109, 110, 111, 116, 117, 120, 122, 126, 131, 132, 134, 140, 141, 146, 149, 151, 152, 156, 162, 166, 167, 168, 169, 171, 172, 177, 180, 182, 195, 198, 199, 202, 203, 204, 205, 206, 208, 214, 217, 221, 222, 225, 227, 228, 229, 230, 233, 235, 408], "665": [11, 13, 14, 15, 16, 18, 28, 42, 49, 68, 71, 72, 75, 87, 89, 93, 94, 95, 96, 98, 99, 116, 120, 131, 132, 141, 151, 152, 166, 169, 172, 177, 180, 195, 204, 230, 233, 235], "41699": [11, 13, 14, 15, 16, 18, 42, 71, 72, 87, 98, 120, 132, 141, 152, 166, 195, 230], "277": [11, 13, 14, 15, 16, 18, 42, 70, 71, 72, 87, 98, 120, 132, 141, 152, 166, 167, 169, 182, 195, 200, 203, 208, 214, 225, 230], "709": [11, 13, 14, 15, 16, 18, 42, 71, 72, 87, 98, 120, 132, 141, 152, 166, 195, 230], "199": [11, 30, 31, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 77, 85, 86, 115, 118, 119, 126, 149, 169, 172, 176, 178, 179, 181, 183, 191, 208, 209, 220, 229, 230, 235, 243, 711, 713, 723, 727], "325": [11, 72, 115, 129, 169, 230], "366": [11, 13, 14, 15, 16, 18, 22, 31, 35, 40, 47, 48, 49, 50, 51, 54, 55, 58, 59, 64, 67, 80, 87, 89, 91, 92, 93, 94, 120, 130, 132, 144, 149, 169, 172, 178, 179, 195, 209, 221, 222, 225, 230], "143": [11, 19, 49, 72, 158, 169, 200, 208, 209, 230, 243, 276], "19979521315838786": [11, 28, 61, 68, 70, 71, 79, 92, 93, 95, 96, 99, 102, 103, 106, 109, 116, 131, 142, 145, 149, 150, 152, 166, 172, 177, 180, 182, 199, 200, 203, 221, 228, 229, 233, 235], "151": [11, 21, 119, 122, 151, 169, 172, 195, 204, 225, 229, 230, 235, 276], "prior": [11, 12, 18, 27, 28, 29, 30, 34, 36, 38, 39, 40, 44, 47, 52, 56, 57, 58, 60, 89, 103, 106, 107, 109, 112, 123, 142, 149, 151, 162, 166, 172, 178, 179, 180, 181, 195, 204, 207, 209, 211, 217, 221, 230, 233, 235, 260, 261, 265, 267, 268, 274, 296, 297, 453, 454, 472, 473, 474, 475, 477, 478, 494, 523, 524, 535, 557, 567, 576, 585, 606, 615, 617, 745, 772, 773, 798, 804, 860, 863, 866, 878], "061": [11, 16, 28, 32, 33, 45, 46, 61, 66, 70, 71, 72, 92, 93, 95, 99, 106, 112, 116, 140, 145, 151, 152, 166, 167, 168, 169, 172, 177, 180, 198, 199, 200, 203, 204, 205, 206, 209, 214, 215, 216, 217, 225, 226, 227, 228, 229, 230, 233, 235, 239, 243, 684, 685, 687, 688], "read_cov": [11, 31, 35, 40, 41, 45, 48, 49, 50, 51, 54, 55, 58, 59, 64, 67, 91, 93, 162, 178, 179, 260, 822, 857, 868], "305": [11, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 75, 77, 81, 86, 87, 93, 103, 106, 107, 108, 109, 111, 120, 123, 140, 146, 150, 152, 162, 166, 169, 172, 176, 177, 178, 179, 180, 181, 207, 208, 219, 221, 225, 230, 233, 235, 243, 263, 264, 265, 266, 477, 478, 642], "22494": [11, 22, 28, 29, 35, 38, 39, 52, 57, 60, 103, 106, 107, 109, 123, 166, 172, 181, 233, 235], "diagon": [11, 28, 29, 30, 38, 39, 44, 47, 52, 57, 60, 69, 103, 106, 107, 109, 123, 166, 172, 180, 181, 195, 221, 222, 233, 235, 243, 260, 296, 297, 353, 370, 513, 524, 532, 860, 863, 878], "retriev": [11, 195, 204, 208, 239, 327, 328, 348, 427, 485, 492, 615, 878], "lh_data": [11, 115, 175, 235, 274, 277], "hemispher": [11, 24, 27, 40, 43, 47, 52, 121, 125, 126, 129, 141, 151, 155, 158, 175, 178, 183, 233, 234, 235, 259, 269, 270, 271, 274, 275, 276, 277, 278, 279, 359, 386, 467, 510, 602, 620, 622, 625, 645, 660, 668, 693, 744, 745, 803, 808, 828, 863, 878], "prepar": [11, 12, 19, 21, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 54, 55, 57, 58, 59, 60, 77, 86, 89, 93, 103, 106, 107, 108, 109, 118, 123, 134, 150, 166, 177, 178, 179, 181, 182, 191, 195, 199, 206, 221, 222, 227, 233, 306, 317, 328, 368, 369, 524, 525, 526, 527, 528, 530, 531, 537, 540, 541, 586, 837, 863, 878], "seri": [11, 16, 27, 28, 29, 31, 36, 41, 56, 70, 80, 89, 92, 93, 94, 110, 137, 161, 168, 175, 180, 181, 188, 204, 205, 217, 222, 235, 240, 243, 261, 262, 263, 264, 265, 266, 269, 270, 271, 274, 276, 277, 278, 279, 296, 297, 353, 412, 419, 422, 443, 477, 478, 523, 524, 527, 538, 557, 562, 566, 615, 619, 683, 684, 685, 697, 698, 700, 702, 703, 704, 713, 722, 723, 758, 769, 809, 833, 835, 837, 860, 878], "time_decod": [11, 195], "31": [11, 13, 19, 28, 32, 34, 35, 43, 45, 47, 74, 78, 80, 81, 82, 84, 102, 103, 107, 108, 111, 113, 151, 159, 169, 180, 183, 185, 191, 194, 195, 204, 208, 210, 225, 226, 227, 229, 230, 233, 234, 235, 238, 243, 263, 264, 276, 334, 535, 654, 659, 860, 878], "74it": [11, 19, 33, 34, 102, 111, 194, 195, 208, 225, 226, 227, 229, 230], "83it": [11, 19, 33, 95, 102, 107, 108, 111, 195, 225, 227, 229, 230, 234], "75it": [11, 13, 19, 34, 103, 107, 108, 111, 194, 195, 208, 225, 226, 229, 230, 233, 234, 235], "90it": [11, 13, 19, 33, 102, 107, 111, 194, 195, 208, 225, 227, 229, 230, 235], "21": [11, 13, 19, 28, 34, 35, 41, 44, 45, 46, 47, 64, 69, 80, 90, 102, 103, 105, 107, 108, 111, 113, 129, 145, 150, 160, 168, 169, 171, 172, 183, 188, 191, 194, 195, 208, 214, 225, 226, 227, 229, 230, 234, 235, 240, 243, 260, 261, 263, 264, 265, 266, 270, 271, 272, 273, 274, 276, 277, 278, 279, 284, 296, 297, 357, 359, 402, 409, 416, 443, 448, 462, 477, 478, 512, 517, 537, 556, 557, 565, 567, 568, 571, 573, 574, 576, 585, 620, 628, 642, 646, 689, 697, 699, 701, 762, 763, 773, 777, 778, 779, 780, 784, 785, 786, 788, 790, 797, 798, 800, 802, 803, 805, 807, 811, 828, 831, 835, 836, 854, 860], "46it": [11, 19, 34, 102, 108, 111, 195, 208, 225, 226, 229, 230, 234, 235], "60it": [11, 19, 34, 102, 108, 111, 194, 195, 208, 225, 226, 229, 230], "52it": [11, 13, 19, 33, 34, 107, 111, 194, 195, 208, 225, 229, 230, 234, 235], "25it": [11, 19, 34, 102, 108, 111, 195, 208, 225, 226, 230], "85it": [11, 19, 33, 102, 103, 107, 111, 180, 195, 208, 225, 227, 230], "32": [11, 12, 13, 19, 21, 28, 34, 35, 41, 42, 45, 47, 49, 54, 56, 68, 70, 71, 72, 73, 78, 80, 81, 93, 98, 102, 106, 107, 108, 109, 111, 113, 119, 122, 128, 135, 140, 141, 142, 146, 149, 151, 152, 158, 162, 166, 168, 169, 170, 171, 172, 176, 177, 180, 182, 183, 184, 185, 194, 195, 199, 200, 202, 203, 204, 206, 207, 208, 215, 220, 221, 222, 225, 226, 227, 229, 230, 233, 234, 235, 240, 243, 256, 263, 264, 388, 408, 450, 477, 478, 498, 524, 572, 843, 854, 860, 863, 864, 878], "36it": [11, 13, 19, 102, 108, 111, 194, 195, 208, 225, 229, 230, 234], "78it": [11, 19, 33, 102, 107, 111, 195, 208, 225, 226, 229, 230, 235], "39": [11, 12, 19, 21, 28, 35, 45, 47, 80, 102, 107, 108, 111, 113, 137, 139, 140, 157, 158, 159, 169, 180, 184, 185, 191, 194, 195, 199, 200, 208, 209, 213, 225, 226, 227, 229, 230, 233, 234, 235, 243, 276, 401, 853], "14it": [11, 13, 19, 102, 107, 108, 111, 208, 225, 229, 230, 235], "89it": [11, 13, 102, 107, 108, 194, 195, 208, 225, 226, 227, 229, 230], "52": [11, 13, 19, 25, 28, 35, 45, 47, 50, 78, 80, 81, 98, 102, 103, 107, 108, 113, 134, 145, 151, 168, 169, 191, 194, 201, 208, 225, 226, 227, 229, 230, 233, 235, 243, 401, 683, 726, 729, 878], "56it": [11, 13, 19, 95, 107, 108, 111, 194, 195, 208, 225, 226, 227, 229, 230, 233], "61": [11, 13, 19, 30, 35, 45, 47, 51, 57, 70, 80, 82, 89, 92, 102, 107, 108, 111, 113, 115, 122, 126, 136, 146, 149, 166, 167, 168, 169, 170, 172, 176, 178, 179, 184, 185, 195, 198, 199, 202, 205, 206, 207, 208, 209, 214, 215, 216, 217, 225, 226, 227, 229, 230, 233, 235, 243, 353], "12it": [11, 19, 34, 102, 195, 225, 226, 227, 230, 235], "65": [11, 12, 19, 21, 34, 35, 45, 47, 78, 80, 83, 102, 107, 108, 111, 113, 134, 136, 143, 145, 156, 169, 170, 171, 177, 178, 184, 194, 195, 200, 207, 208, 225, 226, 227, 229, 230, 233, 234, 235, 243, 593, 878], "68": [11, 13, 19, 34, 35, 41, 45, 47, 78, 80, 81, 89, 100, 102, 107, 108, 111, 113, 125, 137, 140, 143, 145, 158, 169, 171, 172, 176, 181, 184, 191, 194, 195, 208, 225, 226, 229, 230, 243, 265, 266, 296, 297, 334, 353, 357, 358, 368, 369, 370, 401, 409, 416, 452, 453, 472, 474, 475, 535, 785], "58it": [11, 13, 19, 33, 34, 102, 111, 195, 208, 225, 226, 227, 229, 230, 235], "71": [11, 12, 13, 19, 21, 35, 45, 80, 102, 107, 108, 111, 113, 137, 169, 176, 181, 182, 184, 195, 208, 225, 226, 227, 229, 230, 233, 234, 235], "74": [11, 13, 15, 19, 26, 35, 41, 45, 50, 79, 80, 81, 102, 107, 108, 111, 113, 134, 137, 158, 168, 169, 170, 176, 181, 184, 191, 194, 195, 201, 206, 208, 222, 225, 226, 229, 230, 233, 235, 678], "97it": [11, 13, 19, 34, 102, 107, 108, 111, 194, 195, 208, 225, 226, 227, 230, 234], "50it": [11, 19, 34, 44, 108, 111, 195, 208, 225, 227, 229, 230, 233, 234], "81": [11, 13, 15, 16, 19, 28, 34, 35, 78, 80, 102, 106, 107, 108, 111, 113, 142, 156, 169, 180, 184, 195, 207, 208, 210, 225, 226, 229, 230, 233, 238, 243, 654, 659, 711, 713, 723, 727, 878], "87": [11, 13, 18, 19, 33, 35, 47, 79, 92, 93, 107, 108, 111, 113, 122, 123, 169, 194, 195, 206, 208, 209, 225, 226, 229, 230, 243, 413, 415, 427, 860], "27": [11, 12, 13, 19, 21, 24, 25, 26, 28, 33, 34, 35, 39, 41, 43, 44, 45, 47, 50, 56, 78, 80, 81, 95, 101, 102, 107, 108, 111, 113, 145, 150, 158, 160, 169, 171, 176, 178, 180, 183, 185, 191, 195, 208, 222, 224, 225, 226, 227, 228, 229, 230, 234, 235, 243, 568, 835], "19it": [11, 13, 19, 34, 107, 195, 208, 225, 226, 229, 230, 233, 235], "39it": [11, 13, 34, 102, 111, 194, 195, 208, 225, 226, 229, 230, 233], "94": [11, 13, 19, 35, 47, 80, 102, 106, 107, 108, 111, 113, 137, 169, 170, 180, 183, 191, 195, 206, 208, 211, 225, 226, 227, 228, 229, 230, 233, 235, 243, 860], "57it": [11, 19, 34, 107, 194, 195, 208, 222, 225, 229, 230], "84it": [11, 13, 19, 33, 34, 102, 107, 108, 111, 194, 195, 208, 225, 229, 230], "93it": [11, 19, 33, 34, 102, 108, 111, 195, 225, 226, 229, 230], "49it": [11, 13, 19, 34, 44, 108, 111, 194, 195, 208, 225, 229, 230], "04it": [11, 13, 19, 34, 102, 107, 111, 195, 208, 225, 226, 227, 229, 230, 235], "09it": [11, 13, 19, 33, 34, 102, 108, 111, 180, 195, 208, 225, 226, 227, 229, 230, 235], "15it": [11, 13, 19, 34, 102, 111, 194, 195, 208, 225, 226, 227, 229, 230, 233, 235], "43it": [11, 19, 34, 107, 111, 195, 208, 225, 227, 229, 230], "66it": [11, 19, 33, 34, 102, 108, 111, 194, 195, 208, 225, 226, 227, 229, 230, 234, 235], "87it": [11, 13, 19, 102, 107, 108, 180, 194, 195, 225, 226, 227, 229, 230], "03it": [11, 19, 102, 107, 111, 180, 194, 195, 208, 225, 226, 227, 229, 230, 235], "81it": [11, 19, 33, 34, 102, 111, 194, 195, 208, 225, 226, 229, 230, 234, 235], "64it": [11, 19, 34, 102, 107, 111, 194, 195, 208, 225, 226, 230, 233], "07it": [11, 19, 34, 102, 111, 194, 195, 208, 225, 226, 227, 229, 230, 234, 235], "41it": [11, 34, 102, 108, 111, 194, 195, 208, 225, 226, 229, 230, 234], "70it": [11, 13, 19, 33, 34, 102, 108, 111, 194, 195, 208, 225, 226, 227, 228, 229, 230], "11it": [11, 13, 19, 33, 34, 102, 107, 108, 111, 194, 195, 208, 225, 227, 230, 235], "32it": [11, 13, 19, 34, 102, 108, 111, 180, 194, 195, 208, 225, 226, 227, 229, 230], "71it": [11, 19, 33, 34, 102, 107, 108, 111, 180, 194, 195, 208, 225, 227, 229, 230, 233, 234, 235], "88it": [11, 19, 34, 102, 107, 108, 111, 194, 195, 208, 229, 230, 234], "30it": [11, 19, 34, 102, 107, 111, 195, 208, 225, 226, 227, 229, 230, 234], "98it": [11, 33, 102, 108, 111, 122, 195, 208, 225, 227, 230], "86it": [11, 19, 33, 34, 102, 111, 194, 195, 208, 225, 226, 227, 229, 230], "55it": [11, 19, 34, 102, 107, 111, 180, 208, 225, 229, 230], "13it": [11, 19, 33, 102, 111, 194, 208, 225, 226, 229, 230, 233, 234, 235], "17it": [11, 107, 111, 195, 208, 225, 226, 227, 229, 230, 235], "69it": [11, 13, 19, 33, 34, 102, 111, 195, 208, 225, 227, 229, 230, 235], "59it": [11, 13, 19, 102, 107, 111, 194, 208, 225, 226, 229, 230], "24it": [11, 19, 102, 195, 208, 225, 226, 230, 234], "51it": [11, 13, 19, 34, 102, 111, 194, 195, 222, 225, 227, 229, 230], "96it": [11, 19, 33, 102, 108, 111, 194, 195, 225, 226, 229, 230, 233, 235], "16it": [11, 13, 19, 34, 102, 111, 194, 195, 208, 225, 226, 229, 230], "33it": [11, 19, 34, 102, 111, 122, 194, 195, 208, 225, 229, 230], "77it": [11, 19, 33, 34, 102, 103, 108, 111, 180, 194, 195, 208, 225, 226, 229, 230, 234], "02it": [11, 13, 19, 34, 102, 107, 108, 194, 195, 208, 225, 226, 229, 230, 235], "63it": [11, 13, 19, 33, 34, 102, 108, 111, 194, 195, 225, 229, 230, 235], "82it": [11, 13, 19, 33, 34, 95, 102, 107, 111, 194, 208, 225, 227, 229, 230, 235], "92it": [11, 19, 102, 111, 194, 195, 208, 225, 229, 230], "00it": [11, 19, 34, 102, 107, 108, 111, 180, 195, 208, 225, 230, 235], "10it": [11, 13, 19, 33, 102, 108, 111, 194, 195, 208, 225, 226, 229, 230, 235], "05it": [11, 13, 19, 102, 107, 180, 194, 195, 208, 225, 226, 227, 230, 234, 235], "23it": [11, 19, 33, 102, 108, 111, 194, 195, 208, 225, 229, 230, 233, 234], "01it": [11, 19, 33, 102, 108, 194, 195, 208, 225, 226, 230, 235], "22it": [11, 19, 102, 103, 107, 111, 194, 195, 208, 227, 229, 230, 233], "40it": [11, 13, 19, 34, 102, 107, 111, 180, 194, 195, 208, 225, 226, 227, 229, 230], "72it": [11, 19, 33, 34, 102, 107, 108, 194, 195, 208, 225, 226, 227, 230, 234], "47it": [11, 19, 102, 103, 111, 194, 195, 208, 225, 227, 230], "94it": [11, 13, 19, 33, 34, 102, 103, 107, 108, 111, 194, 195, 228, 230, 234], "34it": [11, 13, 19, 111, 194, 195, 208, 225, 228, 229, 230, 233, 234], "06it": [11, 13, 19, 33, 102, 111, 122, 194, 195, 208, 225, 226, 229, 230, 233, 234, 235], "27it": [11, 19, 102, 107, 111, 180, 194, 195, 208, 225, 230, 233], "80it": [11, 13, 19, 33, 95, 102, 107, 108, 111, 195, 208, 225, 226, 227, 230, 235], "42it": [11, 13, 19, 33, 95, 102, 108, 111, 180, 195, 208, 225, 226, 230, 235], "65it": [11, 13, 19, 33, 108, 111, 194, 195, 208, 225, 226, 229, 230, 234], "29it": [11, 13, 19, 34, 102, 103, 107, 108, 111, 194, 195, 208, 225, 226, 228, 229, 230], "investig": [11, 21, 144, 151, 191, 201, 235, 265, 266, 557, 785, 854], "patterns_": [11, 15, 18, 19, 21, 195, 409, 413, 415, 416, 417, 427, 558, 878], "inverse_transform": [11, 18, 195, 417, 418, 423, 424, 427, 558], "lookup": [11, 41, 134, 256, 263, 264, 265, 266, 268, 276, 461, 462, 477, 478, 646, 745, 833], "vertic": [11, 22, 24, 28, 38, 39, 41, 43, 48, 52, 53, 67, 115, 126, 133, 134, 136, 140, 142, 155, 158, 159, 160, 161, 175, 178, 181, 191, 199, 202, 207, 208, 214, 217, 222, 225, 226, 233, 234, 235, 259, 263, 264, 265, 266, 269, 270, 271, 274, 275, 276, 277, 278, 279, 283, 284, 296, 297, 357, 359, 443, 456, 465, 467, 468, 477, 478, 510, 512, 533, 534, 619, 647, 660, 662, 663, 665, 666, 667, 668, 669, 671, 672, 673, 684, 685, 687, 688, 689, 692, 693, 744, 745, 759, 764, 769, 775, 783, 798, 803, 808, 828, 833, 860, 863, 878], "lh_vertno": [11, 115, 175, 274, 277, 660], "empti": [11, 15, 27, 121, 129, 140, 142, 150, 161, 162, 166, 169, 171, 172, 184, 185, 191, 200, 204, 205, 207, 209, 214, 220, 235, 257, 260, 263, 264, 265, 266, 268, 272, 274, 287, 301, 309, 318, 325, 347, 348, 353, 358, 376, 377, 378, 381, 382, 384, 389, 392, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 436, 457, 477, 478, 485, 489, 492, 493, 499, 503, 523, 548, 549, 550, 554, 555, 557, 558, 560, 567, 568, 576, 585, 586, 609, 617, 628, 638, 642, 678, 684, 693, 697, 699, 700, 701, 714, 732, 745, 754, 761, 769, 770, 775, 776, 782, 784, 792, 798, 799, 833, 837, 853, 860, 863, 878], "stc_feat": 11, "sourceestim": [11, 22, 26, 31, 35, 37, 40, 46, 59, 60, 93, 155, 158, 165, 166, 181, 186, 187, 221, 222, 233, 234, 235, 262, 265, 266, 269, 270, 271, 273, 275, 276, 277, 278, 279, 283, 284, 288, 289, 290, 291, 292, 293, 294, 295, 359, 443, 456, 472, 473, 474, 475, 512, 524, 525, 526, 527, 528, 530, 533, 534, 539, 540, 619, 625, 638, 647, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 682, 689, 692, 693, 745, 759, 803, 804, 833, 855, 857, 868, 878], "ab": [11, 19, 35, 38, 40, 47, 59, 60, 67, 96, 118, 119, 126, 135, 151, 179, 183, 191, 194, 201, 225, 227, 228, 233, 234, 235, 240, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 559, 713, 723, 780, 860, 878], "tstep": [11, 22, 31, 46, 59, 89, 93, 94, 181, 222, 233, 234, 235, 270, 271, 274, 277, 278, 279, 358, 475, 512, 557, 647, 664, 683, 689, 712, 720, 878], "transpar": [11, 58, 100, 134, 172, 181, 199, 240, 255, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 697, 745, 764, 781, 798, 803, 808, 809, 810, 811, 859, 878], "03": [11, 19, 24, 33, 34, 35, 49, 56, 59, 70, 72, 74, 75, 78, 82, 83, 84, 89, 92, 93, 101, 102, 105, 107, 108, 119, 120, 126, 129, 141, 146, 150, 151, 154, 158, 162, 166, 167, 168, 169, 170, 174, 182, 183, 184, 194, 195, 198, 199, 200, 202, 204, 205, 206, 207, 208, 209, 213, 214, 215, 216, 217, 220, 221, 222, 225, 226, 227, 229, 230, 234, 235, 243, 257, 261, 353, 557, 684, 685, 687, 688, 773], "62it": [11, 19, 34, 102, 111, 194, 195, 208, 225, 230, 233], "79it": [11, 13, 19, 33, 34, 102, 107, 111, 195, 208, 226, 230, 234, 235], "45it": [11, 19, 34, 107, 108, 111, 194, 195, 208, 225, 226, 230], "76it": [11, 19, 33, 34, 102, 107, 108, 111, 194, 195, 208, 225, 227, 230, 234, 235], "37it": [11, 19, 33, 34, 102, 111, 194, 208, 225, 227, 230], "08it": [11, 19, 34, 102, 107, 111, 194, 208, 225, 226, 227, 229, 230, 235], "54it": [11, 13, 19, 34, 102, 111, 194, 208, 225, 226, 229, 230], "50724321": 11, "37721471": 11, "59502306": 11, "937": [11, 20, 208, 220, 224, 230], "311": [11, 20, 111, 169, 194, 208, 230], "decoding_spatio_temporal_sourc": [11, 20], "comodul": [12, 416], "allow": [12, 19, 40, 43, 44, 46, 60, 93, 103, 111, 114, 115, 119, 134, 137, 140, 141, 142, 143, 144, 146, 150, 151, 157, 158, 160, 166, 169, 170, 172, 178, 189, 195, 201, 206, 214, 215, 217, 225, 226, 227, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 270, 271, 274, 276, 277, 278, 279, 290, 291, 294, 307, 311, 334, 339, 346, 353, 371, 409, 415, 416, 417, 442, 450, 467, 476, 477, 478, 480, 492, 493, 497, 526, 528, 531, 533, 534, 535, 539, 557, 558, 562, 576, 583, 603, 609, 615, 633, 646, 662, 664, 683, 697, 699, 700, 701, 724, 725, 727, 728, 739, 743, 766, 775, 777, 788, 790, 798, 801, 833, 835, 837, 855, 859, 860, 863, 866, 878], "composit": [12, 188, 195, 270, 271, 274, 277, 278, 279, 745, 803, 808, 860], "orthogon": [12, 113, 156, 160, 178, 195, 205, 206, 209, 296, 297, 557, 725, 728, 860, 863, 866, 878], "spatial": [12, 14, 15, 17, 18, 20, 27, 31, 32, 33, 34, 36, 47, 56, 69, 70, 79, 82, 83, 89, 112, 118, 120, 151, 152, 155, 156, 162, 175, 198, 199, 201, 205, 206, 211, 217, 220, 222, 225, 227, 230, 233, 234, 235, 239, 240, 243, 260, 263, 264, 265, 266, 267, 268, 269, 272, 274, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 311, 327, 353, 359, 362, 363, 372, 409, 410, 416, 417, 423, 425, 427, 438, 477, 478, 489, 490, 492, 518, 523, 535, 536, 539, 554, 555, 556, 557, 558, 571, 584, 585, 606, 612, 615, 617, 651, 654, 659, 667, 668, 669, 670, 674, 684, 685, 687, 688, 697, 699, 701, 716, 735, 745, 762, 777, 779, 784, 785, 788, 797, 800, 805, 807, 833, 853, 854, 857, 860, 878], "maxim": [12, 60, 87, 142, 160, 176, 177, 180, 183, 195, 201, 203, 243, 271, 277, 278, 279, 296, 297, 417, 557, 583, 667, 668, 669, 671, 672, 683, 809, 860, 878], "csp": [12, 17, 20, 27, 195, 263, 268, 311, 327, 362, 372, 413, 416, 438, 492, 554, 558, 697, 854, 868, 878], "variabl": [12, 16, 31, 43, 100, 102, 111, 116, 141, 143, 150, 155, 168, 170, 195, 198, 201, 203, 205, 214, 216, 229, 230, 235, 243, 256, 261, 263, 264, 269, 270, 271, 273, 274, 277, 278, 279, 302, 306, 307, 308, 311, 359, 364, 365, 366, 371, 374, 376, 377, 378, 379, 381, 382, 385, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 416, 426, 428, 438, 450, 451, 457, 459, 461, 465, 467, 468, 469, 470, 471, 477, 478, 496, 510, 514, 516, 543, 556, 557, 576, 582, 600, 602, 610, 614, 620, 629, 634, 635, 636, 637, 644, 645, 646, 660, 663, 674, 684, 685, 686, 687, 688, 692, 693, 737, 745, 761, 763, 773, 775, 792, 798, 803, 808, 809, 811, 818, 828, 833, 835, 842, 843, 853, 857, 860, 864, 878], "fluctuat": [12, 141, 142, 151, 198, 200, 206, 207, 211, 222, 265, 266, 785, 833], "electromyogram": [12, 878], "cortico": 12, "muscular": [12, 198, 204], "coher": [12, 32, 33, 102, 106, 180, 222, 243, 288, 289, 290, 291, 296, 697, 698, 724, 725, 726, 727, 728, 729, 771, 833, 844, 854], "fieldtrip": [12, 156, 191, 201, 207, 225, 227, 233, 321, 328, 496, 610, 614, 724, 725, 727, 728, 860, 866, 878], "fieldtrip_cmc": [12, 21], "ridg": [12, 19, 194, 415, 421], "kfold": [12, 16, 19, 353, 358, 426, 878], "cross_val_predict": [12, 878], "subjectcmc": [12, 21], "emg": [12, 82, 137, 169, 189, 195, 214, 220, 243, 263, 264, 265, 266, 273, 310, 372, 416, 442, 477, 478, 489, 492, 503, 554, 557, 697, 699, 700, 701, 775, 798, 854, 860, 863, 878], "pick_channel": [12, 45, 69, 71, 85, 99, 114, 126, 140, 141, 149, 151, 169, 170, 214, 222, 227, 228, 229, 260, 263, 264, 265, 266, 267, 477, 478, 551, 697, 698, 699, 700, 701, 868, 878], "emglft": 12, "ref_meg": [12, 21, 73, 118, 122, 169, 211, 263, 264, 265, 266, 273, 310, 372, 477, 478, 554, 555, 697, 699, 700, 701, 775, 798, 878], "make_fixed_length_ev": [12, 21, 166, 168, 215, 220, 358, 530, 833, 868, 878], "durat": [12, 21, 49, 65, 69, 70, 72, 73, 74, 75, 80, 81, 82, 89, 92, 93, 122, 126, 137, 140, 141, 144, 146, 149, 150, 151, 166, 167, 168, 191, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 222, 233, 234, 235, 255, 257, 263, 264, 265, 266, 273, 274, 282, 340, 342, 356, 358, 409, 411, 415, 416, 420, 421, 438, 445, 447, 448, 450, 477, 478, 494, 517, 518, 557, 559, 560, 562, 576, 585, 593, 647, 649, 689, 711, 775, 784, 792, 798, 833, 837, 878], "meg_epoch": [12, 18], "detrend": [12, 109, 135, 210, 258, 263, 265, 266, 517, 608, 878], "emg_epoch": 12, "var": [12, 47, 69, 171, 206, 374, 457, 690], "oa": [12, 21, 83, 183, 353], "validaton": 12, "first_samp": [12, 69, 74, 137, 166, 168, 184, 214, 215, 216, 257, 258, 263, 264, 268, 273, 282, 361, 437, 438, 450, 476, 477, 478, 497, 518, 552, 557, 586, 611, 612, 647, 662, 778, 792, 798, 823, 833, 863, 878], "set_xlabel": [12, 13, 19, 21, 22, 45, 69, 95, 103, 112, 132, 144, 146, 172, 183, 195, 205, 228, 229, 230], "set_titl": [12, 13, 22, 45, 69, 70, 95, 98, 111, 113, 119, 126, 134, 136, 144, 194, 195, 209, 210, 228, 229, 230, 239, 240], "78": [12, 13, 19, 21, 34, 35, 47, 51, 79, 80, 102, 111, 113, 122, 137, 157, 158, 166, 169, 176, 179, 185, 194, 195, 208, 214, 225, 226, 227, 229, 230, 235, 243, 299, 401, 860], "62": [12, 16, 19, 21, 34, 35, 45, 47, 69, 78, 80, 90, 102, 107, 111, 113, 136, 137, 169, 180, 194, 195, 208, 225, 226, 229, 230, 233, 243], "258": [12, 21, 122, 158, 166, 169, 225, 230], "114": [12, 21, 35, 38, 80, 151, 168, 169, 181, 208, 211, 213, 878], "12000": [12, 21], "911610": [12, 21], "191": [12, 13, 20, 21, 169, 195, 225, 229, 230], "180000": 12, "150": [12, 35, 42, 45, 59, 72, 73, 75, 80, 81, 93, 119, 122, 141, 142, 146, 151, 158, 160, 166, 169, 180, 191, 195, 200, 204, 206, 230, 255, 276, 715, 878], "793": [12, 144], "661": [12, 201, 226, 230], "1057": 12, "881": [12, 195, 208, 230, 276], "183": [12, 169, 225, 229, 230], "1801": 12, "contribut": [12, 19, 45, 67, 149, 151, 180, 227, 230, 254, 263, 264, 438, 572, 653, 835, 841, 854, 856, 859, 878], "sven": [12, 18, 19, 195, 243, 413, 415, 416, 417, 427], "d\u00e4hne": [12, 18, 19, 195, 243, 413, 415, 416, 427], "frank": [12, 18, 19, 74, 195, 204, 243, 413, 415, 416, 427, 557, 592], "meineck": [12, 18, 19, 195, 243, 413, 415, 416, 427], "stefan": [12, 18, 19, 33, 112, 126, 195, 204, 227, 230, 233, 239, 243, 413, 415, 416, 417, 427, 571, 865, 878], "hauf": [12, 18, 19, 195, 243, 413, 415, 416, 417, 427], "johann": [12, 195, 243, 416, 878], "h\u00f6hne": [12, 195, 243, 416], "michael": [12, 19, 100, 194, 195, 203, 204, 243, 353, 409, 415, 416, 556, 557, 589, 600, 711, 713, 723, 727, 854, 860, 878], "tangermann": [12, 195, 204, 243, 416], "klau": [12, 195, 204, 243, 409, 416, 557], "robert": [12, 74, 180, 194, 195, 204, 211, 230, 243, 409, 415, 416, 684, 685, 687, 688, 854, 865, 878], "m\u00fcller": [12, 73, 195, 204, 243, 409, 416, 557], "vadim": [12, 21, 195, 243, 416, 417], "nikulin": [12, 21, 195, 243, 416, 417], "novel": [12, 21, 195, 243, 331, 416, 417, 866], "framework": [12, 35, 195, 243, 416, 472, 849, 860], "amplitud": [12, 19, 35, 37, 39, 40, 45, 47, 53, 59, 80, 81, 92, 93, 94, 115, 122, 126, 131, 135, 140, 141, 144, 145, 162, 166, 172, 175, 180, 183, 184, 190, 194, 195, 198, 199, 201, 204, 205, 206, 208, 210, 211, 222, 243, 255, 258, 261, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 289, 297, 340, 341, 342, 346, 358, 416, 452, 474, 475, 477, 478, 519, 528, 539, 557, 559, 573, 574, 607, 649, 650, 654, 658, 659, 683, 684, 699, 700, 701, 713, 723, 745, 772, 773, 786, 799, 833, 844, 857, 860, 863, 878], "neuron": [12, 21, 137, 144, 194, 195, 198, 243, 296, 402, 415, 416, 417, 524, 833, 854, 860], "oscil": [12, 21, 67, 93, 112, 113, 195, 198, 202, 222, 243, 416, 417, 650, 711, 713, 723, 727], "behavior": [12, 144, 169, 188, 195, 198, 200, 201, 206, 243, 256, 263, 264, 273, 416, 450, 518, 522, 524, 585, 612, 646, 815, 837, 856, 857, 859, 866], "122": [12, 16, 160, 169, 170, 176, 195, 204, 225, 229, 243, 334, 410, 416, 425, 860, 878], "2013": [12, 16, 18, 19, 43, 59, 80, 81, 128, 144, 169, 195, 243, 269, 274, 275, 281, 359, 410, 413, 415, 416, 425, 427, 433, 475, 562, 589, 654, 659, 852], "07": [12, 20, 35, 46, 56, 59, 78, 80, 83, 84, 102, 105, 107, 129, 133, 160, 170, 174, 176, 179, 183, 184, 185, 191, 194, 195, 208, 219, 224, 227, 230, 243, 320, 416, 657, 860], "079": [12, 136, 195, 243, 416], "598": [12, 19, 20, 230, 232], "270": [12, 20, 46, 80, 169, 191, 225, 230, 878], "decoding_spoc_cmc": [12, 20], "illustr": [13, 27, 28, 67, 68, 89, 93, 94, 124, 133, 138, 142, 146, 150, 151, 165, 166, 171, 188, 198, 199, 200, 202, 204, 206, 210, 214, 225, 229, 235, 239, 477, 478, 833, 853, 860], "discriminatori": 13, "given": [13, 16, 19, 26, 31, 69, 79, 93, 94, 111, 119, 120, 137, 143, 144, 149, 150, 151, 158, 160, 162, 165, 166, 169, 170, 171, 175, 178, 180, 186, 187, 188, 194, 195, 200, 201, 204, 205, 206, 209, 214, 215, 217, 225, 227, 229, 230, 238, 240, 255, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 277, 278, 279, 287, 296, 297, 301, 309, 311, 315, 316, 317, 326, 328, 329, 353, 358, 364, 365, 366, 367, 368, 376, 377, 378, 379, 381, 382, 384, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 411, 413, 416, 417, 419, 424, 425, 429, 430, 434, 444, 445, 448, 450, 452, 454, 465, 472, 474, 475, 476, 477, 478, 517, 520, 521, 523, 524, 525, 526, 527, 528, 530, 531, 532, 535, 540, 541, 556, 557, 558, 559, 560, 562, 568, 571, 572, 573, 574, 576, 579, 582, 585, 591, 593, 599, 600, 605, 608, 642, 646, 651, 661, 664, 665, 677, 679, 683, 684, 685, 687, 688, 690, 692, 695, 697, 698, 699, 700, 701, 705, 706, 707, 708, 709, 710, 713, 715, 717, 721, 723, 728, 732, 733, 737, 745, 749, 751, 761, 762, 763, 769, 773, 775, 776, 777, 779, 780, 781, 782, 784, 789, 792, 796, 798, 799, 800, 801, 803, 805, 807, 808, 812, 813, 833, 835, 837, 854, 857, 859, 860, 863, 878], "subsequ": [13, 68, 83, 111, 112, 140, 142, 145, 157, 161, 166, 195, 199, 202, 204, 214, 233, 243, 263, 264, 477, 478, 557, 560, 567, 576, 689, 833, 840, 853, 857, 860, 878], "accur": [13, 26, 41, 44, 45, 50, 108, 134, 135, 158, 159, 176, 182, 188, 195, 203, 204, 206, 209, 256, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 452, 477, 478, 516, 557, 735, 784, 811, 818, 853, 878], "generalizingestim": [13, 195, 426, 868, 878], "events_fnam": 13, "auditori": [13, 15, 30, 31, 37, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 57, 58, 60, 61, 65, 70, 77, 79, 85, 86, 93, 111, 115, 118, 119, 123, 126, 131, 140, 141, 142, 143, 145, 146, 149, 150, 151, 152, 165, 166, 168, 172, 175, 176, 178, 179, 180, 181, 182, 192, 193, 194, 195, 201, 206, 211, 215, 221, 229, 233, 235, 238, 240, 243, 256, 257, 258, 260, 263, 264, 265, 266, 268, 269, 274, 308, 352, 354, 358, 360, 362, 415, 436, 450, 477, 490, 514, 515, 520, 522, 523, 524, 535, 570, 589, 609, 611, 617, 623, 630, 645, 700, 745, 878], "050": [13, 80, 140, 142, 149, 169, 180, 199, 207, 208, 222, 243], "faster": [13, 18, 44, 119, 140, 183, 195, 204, 240, 243, 255, 263, 264, 265, 266, 269, 270, 271, 274, 277, 278, 279, 359, 362, 449, 465, 476, 477, 478, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 517, 557, 559, 684, 685, 687, 688, 835, 840, 841, 843, 866, 878], "constructor": [13, 87, 140, 142, 151, 165, 166, 172, 200, 202, 205, 216, 220, 223, 258, 270, 271, 274, 277, 278, 279, 476, 558, 573, 803, 808, 837, 857, 878], "497": [13, 14, 15, 75, 87, 98, 120, 132, 178, 204, 225, 230, 243, 276], "310": [13, 14, 15, 35, 75, 80, 87, 98, 108, 111, 120, 132, 169, 204, 208, 230], "lbfg": [13, 18, 195], "time_gen": [13, 195], "experiment": [13, 16, 45, 69, 70, 72, 75, 80, 81, 82, 89, 92, 126, 140, 141, 146, 149, 150, 151, 153, 165, 167, 168, 169, 180, 195, 198, 199, 200, 202, 204, 205, 206, 207, 209, 210, 211, 214, 215, 216, 217, 220, 222, 225, 243, 263, 264, 265, 266, 268, 410, 425, 477, 478, 479, 524, 576, 585, 586, 649, 650, 657, 697, 700, 833, 853, 860, 864, 878], "44it": [13, 19, 34, 108, 111, 194, 208, 225, 226, 229, 230], "57": [13, 19, 34, 35, 40, 45, 78, 80, 102, 107, 111, 113, 116, 125, 136, 150, 151, 157, 169, 180, 183, 184, 191, 193, 195, 206, 208, 216, 225, 226, 227, 229, 230, 234, 235, 238, 243, 263, 264, 265, 266, 334, 474, 477, 478, 699, 701, 709, 715, 878], "83": [13, 19, 35, 40, 47, 80, 95, 102, 107, 111, 113, 169, 171, 195, 200, 203, 208, 209, 225, 226, 229, 230, 243, 334, 556, 600, 684, 685, 687, 688], "88": [13, 19, 26, 35, 41, 45, 47, 50, 78, 79, 80, 81, 102, 108, 111, 113, 119, 158, 169, 176, 180, 181, 182, 191, 194, 195, 208, 210, 225, 226, 227, 229, 230, 234, 235, 243, 353], "1225": 13, "404": [13, 80], "28it": [13, 19, 34, 102, 107, 108, 111, 194, 195, 225, 226, 229, 230], "469": [13, 225, 230], "510": [13, 80, 144, 208, 225, 240], "521": [13, 230, 243, 353], "106": [13, 16, 35, 67, 71, 84, 95, 96, 99, 120, 141, 145, 152, 166, 169, 172, 177, 180, 200, 204, 208, 225, 230, 863], "522": [13, 25, 26], "125": [13, 19, 24, 35, 126, 137, 143, 156, 160, 169, 170, 201, 225, 230, 337], "528": [13, 35, 143, 182, 187, 195], "38it": [13, 19, 107, 108, 111, 194, 195, 208, 225, 227, 229, 230, 233], "144": [13, 81, 169, 171, 194, 203, 210, 225, 229, 230, 276, 878], "533": [13, 15, 20, 230], "163": [13, 129, 132, 158, 169, 185, 187, 195, 229, 230, 232, 276], "537": 13, "536": [13, 125, 243, 386], "539": [13, 230], "216": [13, 105, 107, 169, 216, 219, 225, 229, 230], "532": [13, 68, 207, 230], "520": [13, 80, 230], "509": [13, 208, 226, 230], "511": [13, 19, 229, 230, 232], "280": [13, 80, 111, 169, 170, 208, 230, 337, 878], "513": [13, 144, 230], "517": [13, 208, 213, 230], "317": [13, 74, 111, 169, 230, 234, 237], "518": [13, 230], "336": [13, 111, 169, 171, 208, 225, 230, 878], "525": 13, "527": [13, 195, 208, 230], "393": [13, 40, 80, 195], "530": [13, 73, 80, 195, 207, 230, 243], "48it": [13, 19, 34, 102, 194, 208, 225, 226, 229, 230, 233], "34": [13, 19, 28, 34, 35, 41, 45, 47, 55, 56, 67, 70, 80, 102, 105, 107, 111, 113, 115, 122, 129, 142, 145, 148, 169, 171, 181, 185, 201, 208, 209, 221, 225, 226, 227, 229, 230, 233, 234, 235, 243, 566, 678], "411": [13, 78, 134, 135, 243, 353], "430": [13, 80], "37": [13, 19, 21, 28, 32, 34, 35, 45, 47, 56, 78, 80, 102, 107, 113, 115, 145, 157, 169, 171, 195, 208, 225, 226, 227, 229, 230, 233, 234, 235, 238, 334, 401, 450, 568, 878], "449": [13, 78, 84, 180, 187, 230, 232, 276], "534": [13, 208, 230], "38": [13, 19, 21, 28, 34, 35, 45, 47, 70, 72, 78, 80, 81, 92, 95, 102, 107, 111, 113, 126, 140, 141, 142, 144, 158, 169, 180, 182, 184, 187, 191, 194, 200, 206, 208, 225, 226, 227, 229, 230, 233, 234, 235, 568], "468": [13, 37, 56, 203, 208, 230, 243, 556, 600], "487": [13, 151, 167, 174], "506": [13, 178, 194, 208], "540": [13, 80, 164, 222, 230, 243, 296, 297], "544": [13, 19], "541": [13, 125, 129, 208, 227, 243, 430], "99it": [13, 19, 102, 108, 111, 194, 195, 208, 225, 226, 229, 230, 235], "563": [13, 230], "582": [13, 181, 187, 195, 243], "545": [13, 19, 69, 243, 565], "620": [13, 80], "546": [13, 143, 230], "639": [13, 19, 132, 166, 172, 208, 230], "547": 13, "31it": [13, 19, 195, 208, 225, 226, 230], "54": [13, 19, 28, 34, 35, 45, 47, 80, 102, 107, 111, 113, 144, 151, 157, 158, 164, 169, 194, 208, 209, 211, 225, 226, 229, 230, 243, 276, 878], "657": 13, "676": [13, 195, 208, 230], "695": [13, 195, 230], "73it": [13, 19, 34, 95, 102, 107, 108, 111, 194, 195, 208, 225, 226, 227, 229, 230, 233, 235], "714": [13, 70, 167, 182, 203, 230], "548": [13, 230], "733": [13, 161, 195, 230], "752": [13, 195, 230], "771": [13, 195], "790": [13, 80, 195, 208], "550": [13, 69, 80, 162, 222, 243, 430, 565], "809": [13, 230], "551": [13, 46, 113, 230], "828": [13, 82, 105, 112, 243, 557], "846": [13, 158, 182, 230], "865": [13, 230], "72": [13, 15, 19, 28, 35, 45, 47, 70, 77, 79, 80, 95, 99, 102, 103, 111, 113, 116, 122, 140, 149, 156, 162, 169, 177, 180, 182, 183, 184, 185, 195, 199, 208, 209, 225, 226, 227, 228, 229, 230, 233, 243, 557, 566, 860, 878], "884": [13, 230, 243], "903": [13, 208, 230], "922": [13, 51, 56, 230], "553": [13, 47, 194, 243, 415], "18it": [13, 19, 102, 111, 194, 195, 208, 225, 226, 229, 230, 233], "941": [13, 230], "960": [13, 61, 80, 100, 143, 226, 230, 854], "554": [13, 195, 230], "979": [13, 64, 66, 230], "998": [13, 172, 184, 191, 209, 230, 570, 574, 578, 581], "1017": [13, 35, 243], "555": [13, 208, 230], "1036": [13, 195], "556": [13, 95, 230], "1074": [13, 208], "89": [13, 19, 34, 35, 47, 70, 77, 78, 79, 80, 81, 102, 107, 111, 113, 136, 169, 184, 191, 194, 195, 199, 208, 225, 226, 229, 230, 243, 566, 860], "1093": [13, 243, 401], "557": [13, 230, 243, 401], "1112": [13, 169, 194], "1131": [13, 32, 34, 169, 208, 222], "1150": 13, "558": [13, 230], "1168": 13, "1187": 13, "26it": [13, 19, 102, 108, 111, 194, 195, 225, 226, 229, 230, 234], "1205": [13, 195], "1224": 13, "constrained_layout": [13, 89, 183, 211, 239, 713, 723], "vmax": [13, 19, 69, 87, 106, 111, 113, 115, 116, 123, 136, 141, 160, 176, 194, 195, 209, 210, 225, 227, 228, 239, 260, 263, 264, 265, 266, 272, 409, 416, 477, 478, 556, 557, 697, 699, 701, 745, 762, 776, 777, 780, 784, 788, 797, 800, 805, 806, 807, 878], "xaxi": [13, 126], "set_ticks_posit": 13, "bottom": [13, 69, 72, 73, 111, 119, 126, 140, 146, 161, 191, 216, 217, 225, 230, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 758, 775, 785, 803, 808, 833, 878], "ntest": 13, "ntrain": 13, "fontweight": [13, 126, 144, 209], "bold": [13, 126, 144, 151, 199, 202, 205, 206, 207, 209, 210, 225], "r\u00e9mi": [13, 195, 243], "stanisla": [13, 16, 137, 195, 243, 410, 425, 878], "dehaen": [13, 16, 195, 243, 410, 425], "dynam": [13, 21, 27, 32, 33, 69, 93, 104, 105, 111, 166, 180, 195, 201, 203, 204, 211, 222, 243, 263, 266, 269, 274, 286, 288, 289, 290, 291, 296, 417, 448, 450, 477, 478, 524, 557, 558, 565, 676, 798, 833, 844, 854, 860, 863, 878], "represent": [13, 17, 20, 27, 43, 44, 93, 102, 111, 114, 140, 149, 160, 166, 168, 169, 170, 172, 175, 190, 195, 204, 214, 215, 233, 234, 235, 238, 239, 243, 263, 264, 265, 266, 273, 275, 359, 362, 444, 450, 477, 478, 508, 554, 557, 697, 699, 701, 724, 725, 727, 728, 729, 753, 789, 833, 844, 854, 863, 878], "tempor": [13, 16, 19, 27, 46, 59, 76, 84, 104, 105, 112, 113, 135, 136, 137, 140, 142, 146, 151, 165, 180, 184, 196, 197, 200, 201, 202, 203, 206, 209, 216, 225, 227, 228, 229, 230, 236, 237, 243, 258, 263, 265, 266, 268, 274, 275, 276, 353, 359, 415, 421, 429, 432, 435, 449, 450, 452, 473, 474, 475, 477, 478, 517, 521, 523, 524, 538, 540, 541, 554, 557, 559, 572, 585, 592, 593, 608, 612, 623, 625, 627, 632, 652, 653, 654, 655, 656, 657, 658, 659, 669, 671, 672, 673, 677, 678, 680, 687, 688, 689, 710, 713, 723, 724, 725, 726, 727, 728, 729, 745, 854, 855, 860, 878], "trend": [13, 65, 112, 141, 195, 243], "cognit": [13, 42, 43, 195, 201, 243, 254, 275, 359, 525, 865], "203": [13, 35, 40, 42, 49, 50, 58, 59, 79, 86, 91, 92, 93, 98, 110, 115, 118, 120, 122, 123, 130, 142, 150, 152, 156, 157, 158, 162, 169, 170, 172, 176, 177, 178, 179, 180, 195, 199, 200, 205, 206, 208, 209, 213, 222, 225, 229, 243], "tic": [13, 195, 243], "128": [13, 15, 19, 20, 24, 41, 50, 71, 84, 87, 119, 129, 158, 160, 168, 169, 170, 171, 208, 220, 222, 229, 232, 263, 264, 408, 763, 854, 878], "decoding_time_generalization_condit": [13, 20], "Then": [14, 19, 45, 81, 108, 112, 114, 134, 135, 136, 140, 156, 161, 181, 190, 191, 206, 230, 240, 265, 266, 316, 434, 571, 692, 781, 837, 841, 848, 857, 860], "virtual": [14, 69, 98, 151, 204, 207, 263, 264, 265, 266, 313, 430, 477, 478, 584, 639, 642, 833, 835, 845, 878], "output": [14, 19, 32, 35, 40, 44, 46, 47, 59, 112, 113, 121, 126, 134, 135, 140, 143, 149, 151, 155, 161, 163, 164, 165, 168, 171, 172, 188, 194, 195, 201, 202, 204, 205, 206, 214, 215, 217, 220, 225, 227, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 302, 303, 304, 305, 306, 307, 308, 311, 313, 315, 316, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 381, 382, 383, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 411, 412, 414, 415, 419, 420, 421, 422, 425, 426, 428, 430, 434, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 459, 460, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 519, 520, 521, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 550, 552, 553, 557, 559, 560, 562, 563, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 580, 581, 582, 583, 585, 586, 588, 589, 592, 593, 594, 597, 598, 599, 600, 602, 604, 605, 606, 607, 608, 609, 611, 612, 613, 615, 616, 617, 619, 620, 621, 622, 623, 627, 628, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 642, 643, 645, 646, 648, 649, 650, 651, 660, 661, 662, 663, 665, 667, 668, 669, 670, 671, 672, 673, 684, 685, 686, 687, 688, 689, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 715, 716, 719, 720, 724, 725, 727, 728, 729, 730, 733, 734, 735, 740, 744, 745, 749, 753, 761, 763, 770, 773, 777, 778, 779, 780, 785, 786, 788, 789, 790, 795, 796, 798, 799, 801, 802, 803, 804, 808, 809, 810, 813, 814, 818, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 836, 837, 841, 842, 845, 857, 860, 861, 863, 878], "asish": [14, 878], "asishrocks95": 14, "decod": [14, 16, 19, 20, 21, 152, 165, 166, 168, 194, 196, 197, 243, 260, 263, 265, 266, 268, 274, 311, 327, 353, 362, 372, 438, 450, 477, 485, 490, 492, 501, 518, 523, 524, 526, 535, 538, 554, 558, 606, 612, 617, 697, 745, 854, 868, 878], "unsupervisedspatialfilt": [14, 868, 878], "fastica": [14, 75, 204, 557], "aud_l": [14, 15, 18, 42, 177, 229, 263, 264, 775, 778], "vis_l": [14, 15, 18, 42, 229], "ie": [14, 53, 109, 260, 270, 274, 278, 602, 713, 723, 745, 770, 803, 804], "pca_data": 14, "evokedarrai": [14, 15, 16, 18, 21, 83, 99, 108, 183, 188, 195, 220, 230, 264, 265, 478, 530, 531, 614, 616, 833, 868, 878], "window_titl": [14, 191, 265, 266, 779], "ica_data": 14, "ev1": [14, 878], "068": [14, 20, 55, 56, 178, 187], "129": [14, 35, 61, 120, 127, 169, 170, 208, 230, 243], "decoding_unsupervised_spatial_filt": [14, 20], "erp": [15, 98, 100, 116, 127, 153, 154, 165, 172, 195, 198, 199, 201, 204, 206, 207, 243, 263, 265, 266, 268, 313, 352, 466, 477, 548, 557, 558, 612, 642, 683, 769, 788, 790, 817, 844, 864, 866, 878], "concaten": [15, 69, 73, 80, 111, 137, 151, 168, 188, 191, 203, 205, 214, 240, 263, 264, 265, 266, 360, 361, 362, 409, 418, 474, 477, 478, 560, 575, 576, 585, 662, 787, 878], "rescal": [15, 63, 112, 113, 368, 369, 370, 574, 697, 700, 805, 868, 878], "fed": 15, "classification_report": [15, 137], "confusion_matrix": [15, 137], "minmaxscal": 15, "n_filter": 15, "penalti": [15, 40, 46, 243, 474, 475, 866], "l1": [15, 40, 474, 475], "pred": 15, "report": [15, 137, 165, 173, 174, 209, 211, 226, 240, 243, 263, 264, 265, 268, 288, 290, 433, 450, 477, 478, 483, 546, 557, 574, 576, 590, 615, 713, 723, 727, 775, 792, 798, 835, 837, 853, 856, 857, 858, 860, 866, 868, 878], "target_nam": [15, 137], "cm_normal": 15, "astyp": [15, 71, 134, 145, 160, 191, 194, 202, 214], "float": [15, 19, 31, 40, 65, 92, 114, 143, 144, 145, 149, 160, 169, 188, 194, 204, 214, 216, 225, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 289, 296, 297, 303, 304, 311, 320, 325, 327, 329, 340, 341, 342, 343, 346, 352, 353, 356, 357, 358, 359, 364, 370, 372, 409, 411, 413, 414, 415, 416, 417, 420, 421, 422, 426, 430, 433, 435, 437, 438, 444, 445, 447, 448, 449, 450, 452, 453, 454, 461, 467, 468, 472, 474, 475, 476, 477, 478, 487, 488, 501, 510, 512, 513, 517, 518, 520, 521, 524, 525, 526, 527, 528, 530, 531, 535, 536, 537, 539, 540, 541, 556, 557, 558, 559, 560, 561, 562, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 585, 587, 589, 590, 591, 593, 594, 603, 628, 634, 635, 636, 637, 646, 647, 652, 653, 654, 655, 656, 657, 658, 659, 662, 664, 667, 668, 669, 671, 672, 675, 676, 679, 680, 681, 683, 684, 685, 687, 688, 689, 690, 691, 692, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 715, 716, 721, 723, 724, 725, 726, 727, 728, 729, 733, 734, 735, 745, 749, 750, 758, 762, 764, 765, 769, 773, 774, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 788, 789, 790, 791, 792, 793, 795, 797, 798, 799, 800, 801, 803, 804, 805, 806, 807, 808, 809, 813, 818, 831, 863, 878], "sum": [15, 28, 31, 41, 47, 60, 71, 81, 108, 112, 113, 116, 137, 144, 149, 161, 162, 168, 175, 183, 184, 201, 225, 226, 230, 240, 263, 264, 265, 266, 269, 270, 271, 274, 277, 278, 279, 285, 352, 357, 477, 478, 539, 557, 562, 649, 684, 685, 687, 688, 692, 698, 699, 701, 777, 857, 860, 863, 878], "imshow": [15, 16, 22, 69, 106, 114, 115, 126, 134, 136, 146, 160, 172, 195, 225, 227, 228, 229, 230, 263, 264, 265, 266, 320, 697, 746, 748, 783, 806, 815], "nearest": [15, 26, 79, 115, 119, 136, 140, 145, 160, 168, 182, 214, 225, 260, 263, 264, 265, 266, 269, 270, 271, 272, 274, 276, 277, 278, 279, 281, 359, 364, 409, 416, 477, 478, 556, 557, 571, 692, 697, 698, 699, 700, 701, 733, 745, 762, 763, 769, 777, 784, 788, 797, 800, 805, 807, 860, 863, 878], "blue": [15, 54, 55, 79, 82, 111, 131, 135, 142, 151, 156, 172, 175, 177, 178, 181, 190, 206, 233, 234, 240, 261, 745, 760, 761, 769, 773, 833], "tick_mark": 15, "ytick": [15, 126, 194, 201, 225], "59": [15, 19, 28, 30, 31, 34, 35, 38, 39, 40, 41, 44, 45, 48, 49, 54, 55, 58, 59, 60, 68, 70, 75, 77, 78, 80, 82, 89, 91, 92, 93, 102, 107, 110, 111, 113, 115, 117, 120, 126, 129, 130, 141, 142, 145, 150, 151, 152, 156, 158, 162, 169, 172, 176, 178, 182, 184, 194, 195, 198, 199, 204, 205, 206, 208, 221, 225, 226, 227, 228, 229, 230, 234, 235, 238, 243, 276, 430, 568, 576, 585, 690, 691], "precis": [15, 47, 69, 78, 89, 134, 137, 157, 184, 201, 202, 209, 214, 222, 257, 263, 264, 269, 296, 297, 450, 477, 478, 498, 585, 653, 655, 674, 724, 725, 727, 728, 853, 857, 863, 878], "recal": [15, 89, 137, 149, 150, 156, 215, 653, 654, 656, 659], "f1": [15, 69, 89, 137, 653], "support": [15, 34, 61, 122, 134, 135, 136, 137, 140, 142, 149, 150, 151, 166, 170, 172, 181, 182, 185, 189, 190, 217, 238, 239, 240, 255, 256, 257, 258, 260, 261, 263, 264, 265, 266, 270, 271, 273, 274, 276, 277, 278, 279, 296, 297, 303, 311, 317, 319, 339, 353, 358, 359, 368, 369, 370, 372, 390, 409, 416, 417, 425, 430, 439, 440, 442, 443, 447, 448, 449, 469, 476, 477, 478, 483, 488, 497, 500, 501, 502, 503, 507, 512, 516, 519, 520, 557, 568, 576, 585, 607, 610, 611, 625, 632, 633, 642, 645, 646, 662, 678, 680, 689, 692, 697, 699, 700, 701, 745, 761, 763, 766, 769, 773, 774, 775, 779, 784, 792, 798, 799, 803, 808, 809, 810, 811, 814, 833, 835, 837, 840, 842, 843, 844, 849, 855, 857, 864, 878], "96": [15, 18, 19, 44, 47, 78, 81, 102, 106, 107, 111, 112, 113, 134, 137, 162, 169, 171, 180, 184, 194, 195, 205, 206, 208, 225, 226, 227, 228, 229, 230, 234, 235, 243, 265, 266, 413, 415, 427, 785, 857], "288": [15, 35, 70, 71, 111, 131, 141, 145, 160, 169, 171, 208, 230, 235, 243, 566], "macro": [15, 137], "avg": [15, 137, 144, 225, 255, 724, 725], "attribut": [15, 30, 31, 35, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 70, 77, 82, 85, 86, 115, 118, 119, 126, 140, 141, 143, 149, 150, 151, 166, 168, 169, 170, 171, 172, 175, 176, 178, 179, 181, 182, 183, 200, 204, 205, 209, 210, 217, 220, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 276, 277, 278, 279, 301, 352, 364, 409, 410, 412, 413, 415, 416, 417, 419, 424, 427, 466, 467, 476, 477, 478, 484, 486, 487, 488, 489, 490, 493, 494, 495, 498, 500, 501, 502, 503, 504, 505, 506, 507, 516, 556, 557, 558, 609, 615, 619, 625, 647, 682, 697, 698, 699, 700, 701, 732, 745, 747, 769, 778, 791, 827, 833, 837, 855, 878], "last": [15, 69, 81, 103, 126, 137, 140, 144, 146, 151, 160, 166, 171, 183, 188, 195, 199, 200, 201, 202, 204, 205, 214, 217, 225, 226, 233, 240, 258, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 277, 278, 279, 286, 287, 301, 319, 341, 353, 361, 412, 419, 420, 422, 433, 447, 448, 449, 450, 476, 477, 478, 501, 518, 523, 552, 557, 560, 678, 683, 684, 685, 687, 688, 697, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 715, 726, 732, 745, 777, 782, 784, 789, 792, 799, 805, 833, 836, 854, 859, 860, 878], "nrow": [15, 45, 72, 119, 126, 146, 151, 176, 183, 210, 226, 265, 266, 409, 416, 557, 784, 788, 863, 878], "fitted_xdawn": 15, "get_channel_typ": [15, 140, 169, 263, 264, 265, 266, 268, 477, 478, 557, 697, 699, 700, 701, 878], "get_montag": [15, 114, 134, 135, 136, 263, 264, 265, 266, 268, 477, 478, 878], "cur_class": 15, "cur_pattern": 15, "pattern_evok": 15, "time_format": [15, 21, 99, 108, 111, 145, 176, 216, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 557, 697, 700, 784, 792, 798, 878], "show_nam": [15, 99, 119, 151, 170, 182, 226, 260, 263, 264, 265, 266, 272, 311, 409, 416, 477, 478, 556, 557, 571, 697, 699, 701, 762, 781, 784, 788, 795, 797, 800, 801, 805, 878], "h_pad": [15, 225], "w_pad": [15, 225], "bertrand": [15, 70, 77, 87, 195, 199, 243, 558, 566, 713, 723, 724, 727, 860, 878], "rivet": [15, 87, 195, 243, 558], "antoin": [15, 87, 195, 243, 558, 878], "souloumiac": [15, 87, 195, 243, 558], "virgini": [15, 87, 195, 243, 558], "attina": [15, 87, 195, 243, 558], "gibert": [15, 87, 195, 243, 558], "algorithm": [15, 27, 31, 69, 73, 76, 82, 83, 84, 87, 112, 125, 134, 152, 156, 157, 162, 166, 195, 199, 201, 204, 209, 225, 230, 233, 234, 235, 243, 268, 269, 273, 308, 353, 408, 409, 423, 430, 474, 477, 524, 543, 557, 558, 560, 565, 567, 568, 573, 576, 578, 583, 585, 592, 593, 594, 657, 674, 679, 735, 844, 849, 853, 854, 855, 866, 878], "enhanc": [15, 87, 194, 195, 226, 230, 243, 415, 557, 558, 576, 684, 685, 687, 688, 837, 856, 863, 866], "56": [15, 19, 32, 35, 45, 47, 74, 79, 80, 81, 87, 95, 102, 107, 111, 113, 123, 129, 151, 160, 169, 171, 172, 176, 180, 187, 191, 195, 208, 210, 225, 226, 229, 230, 243, 257, 409, 558, 684, 685, 687, 688], "2035": [15, 19, 87, 180, 195, 243, 558], "2043": [15, 87, 169, 195, 243, 558], "2009": [15, 35, 58, 87, 116, 171, 195, 204, 225, 226, 243, 274, 472, 558, 571, 684, 685, 687, 688, 853, 863, 878], "2012869": [15, 87, 195, 243, 558], "hubert": [15, 87, 243, 558, 878], "cecotti": [15, 87, 243, 558], "emmanuel": [15, 87, 201, 243, 558], "mabi": [15, 87, 243, 558], "j\u00e9r\u00e9mie": [15, 87, 243, 558], "mattout": [15, 87, 243, 558], "theoret": [15, 87, 194, 195, 201, 220, 243, 409, 558, 833], "effici": [15, 42, 44, 87, 191, 201, 225, 243, 258, 263, 264, 265, 266, 421, 477, 478, 557, 558, 559, 657, 699, 701, 727, 728, 855, 878], "p300": [15, 87, 191, 195, 201, 243, 558, 726, 729], "proceed": [15, 33, 40, 46, 87, 166, 180, 203, 204, 222, 243, 289, 296, 475, 558, 726, 729, 853, 860], "eusipco": [15, 87, 243, 558, 726, 729], "1382": [15, 87, 243, 558], "1386": [15, 87, 243, 558], "barcelona": [15, 87, 243, 558], "url": [15, 87, 112, 151, 195, 243, 353, 379, 384, 386, 390, 401, 402, 472, 524, 558, 679, 726, 729, 837, 860, 878], "ieeexplor": [15, 87, 243, 558, 726, 729], "7073970": [15, 87, 243, 558], "decoding_xdawn_eeg": [15, 20], "cours": [16, 27, 32, 36, 38, 39, 41, 50, 56, 69, 73, 82, 89, 91, 94, 100, 112, 115, 135, 136, 142, 143, 151, 165, 166, 172, 175, 176, 177, 180, 186, 187, 195, 198, 201, 205, 206, 222, 230, 235, 243, 261, 262, 263, 264, 265, 266, 269, 270, 271, 274, 276, 277, 278, 279, 288, 290, 292, 295, 359, 410, 425, 443, 452, 462, 472, 474, 475, 477, 478, 512, 519, 523, 524, 538, 554, 615, 619, 625, 647, 661, 663, 664, 683, 697, 699, 700, 701, 744, 745, 769, 796, 803, 808, 833, 860, 863, 878], "techniqu": [16, 17, 20, 27, 59, 69, 72, 73, 74, 149, 151, 165, 166, 195, 198, 201, 203, 204, 206, 207, 209, 210, 211, 212, 222, 225, 243, 263, 264, 265, 266, 268, 372, 411, 420, 423, 445, 447, 448, 468, 477, 478, 554, 557, 612, 642, 833, 854, 860, 861, 866], "By": [16, 45, 69, 79, 82, 102, 103, 111, 134, 135, 142, 145, 149, 150, 151, 158, 166, 168, 169, 170, 171, 172, 178, 188, 189, 199, 201, 204, 205, 206, 207, 209, 214, 215, 217, 238, 255, 263, 264, 265, 266, 268, 269, 270, 271, 274, 277, 278, 279, 308, 325, 433, 450, 477, 478, 557, 560, 639, 662, 674, 690, 697, 698, 699, 700, 701, 771, 775, 783, 791, 798, 808, 860, 866, 878], "onto": [16, 18, 40, 72, 135, 136, 142, 155, 166, 170, 175, 180, 194, 199, 205, 206, 209, 221, 269, 271, 277, 279, 417, 582, 646, 674, 745, 761, 796, 815, 854, 860, 878], "surrog": [16, 157, 183, 206, 364, 425, 471, 878], "expos": [16, 132, 194, 229, 842, 878], "exhibit": [16, 240, 265, 266, 270, 271, 274, 277, 278, 279, 860], "evolut": [16, 112, 557, 792], "compute_em": [16, 868, 878], "audl": [16, 71], "visl": [16, 71], "wai": [16, 21, 27, 34, 43, 44, 73, 113, 114, 126, 134, 140, 141, 142, 144, 149, 150, 151, 156, 160, 161, 166, 168, 169, 170, 171, 172, 177, 180, 190, 194, 199, 200, 201, 202, 204, 205, 206, 209, 211, 215, 216, 217, 220, 222, 225, 227, 228, 233, 235, 240, 243, 257, 258, 261, 262, 263, 264, 265, 266, 270, 271, 273, 274, 277, 278, 279, 353, 433, 443, 477, 478, 492, 517, 557, 559, 573, 579, 586, 608, 615, 646, 678, 679, 680, 686, 692, 697, 700, 711, 713, 723, 727, 745, 833, 835, 837, 840, 843, 853, 854, 855, 856, 859, 861, 878], "n_epoch": [16, 113, 140, 146, 149, 166, 194, 195, 220, 230, 239, 258, 263, 264, 313, 409, 410, 411, 414, 415, 416, 417, 418, 420, 421, 423, 424, 447, 448, 558, 565, 699, 700, 702, 703, 704, 724, 725, 726, 769, 775, 776, 878], "n_time": [16, 19, 31, 63, 65, 69, 74, 82, 113, 140, 146, 149, 159, 166, 190, 191, 194, 195, 204, 207, 214, 220, 222, 225, 229, 230, 233, 234, 235, 258, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 313, 347, 409, 410, 411, 414, 415, 416, 417, 418, 420, 422, 423, 425, 443, 445, 447, 448, 476, 477, 478, 497, 532, 558, 583, 647, 652, 653, 654, 655, 656, 657, 658, 659, 664, 671, 672, 673, 677, 683, 687, 688, 697, 699, 700, 701, 702, 703, 704, 715, 716, 720, 722, 724, 725, 726, 745, 769, 776, 777, 784, 805, 878], "993": [16, 18, 112, 230], "613": [16, 18, 230], "145": [16, 18, 45, 72, 74, 81, 149, 169, 195, 221, 229, 230], "x_transform": 16, "leav": [16, 137, 144, 172, 191, 198, 203, 214, 593, 835, 843, 845, 878], "recommend": [16, 41, 43, 44, 45, 69, 113, 134, 155, 158, 161, 172, 188, 190, 201, 202, 204, 205, 207, 209, 243, 258, 263, 264, 265, 266, 270, 274, 278, 281, 306, 308, 317, 329, 346, 353, 358, 359, 372, 408, 411, 417, 453, 472, 477, 478, 496, 507, 517, 524, 530, 537, 557, 562, 573, 585, 592, 608, 610, 614, 639, 645, 646, 683, 687, 688, 754, 761, 803, 835, 837, 841, 842, 843, 856, 857, 860, 878], "stratifi": [16, 426], "tend": [16, 162, 178, 201, 203, 204, 225, 567, 857, 860], "overfit": [16, 87, 194], "cannot": [16, 59, 161, 169, 172, 188, 190, 201, 202, 205, 207, 216, 235, 265, 266, 269, 270, 271, 273, 274, 277, 278, 279, 289, 340, 342, 431, 477, 478, 524, 557, 576, 617, 646, 697, 745, 781, 803, 808, 825, 835, 837, 859, 878], "x_scale": 16, "futur": [16, 69, 171, 204, 217, 281, 415, 421, 449, 576, 837, 841, 855, 857, 859, 878], "filters_": [16, 18, 409, 410, 413, 416, 417, 427, 558, 878], "individu": [16, 26, 32, 37, 42, 43, 44, 100, 134, 140, 142, 144, 155, 159, 166, 170, 172, 175, 199, 205, 206, 210, 216, 217, 225, 239, 240, 243, 258, 263, 264, 265, 266, 270, 271, 273, 274, 277, 278, 279, 296, 297, 327, 348, 409, 450, 477, 478, 525, 533, 534, 573, 593, 615, 675, 681, 689, 726, 729, 763, 775, 779, 783, 796, 798, 824, 837, 853, 854, 859, 860, 878], "argsort": [16, 31, 116, 127, 143, 181], "reorder": [16, 47, 116, 263, 264, 265, 266, 477, 478, 488, 697, 699, 700, 701, 776, 806, 878], "kei": [16, 93, 94, 126, 134, 137, 140, 141, 142, 149, 150, 152, 166, 169, 170, 171, 181, 189, 205, 206, 214, 215, 217, 220, 256, 257, 258, 260, 261, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 282, 287, 296, 297, 301, 323, 324, 353, 357, 358, 364, 367, 368, 369, 370, 384, 390, 401, 409, 416, 418, 425, 433, 436, 438, 452, 453, 454, 457, 469, 472, 474, 475, 477, 478, 509, 513, 523, 524, 535, 547, 556, 557, 559, 571, 573, 574, 576, 596, 609, 611, 628, 641, 648, 649, 650, 662, 666, 682, 683, 684, 685, 687, 688, 697, 699, 700, 701, 732, 735, 745, 762, 767, 768, 769, 773, 775, 776, 777, 778, 779, 781, 783, 784, 785, 788, 797, 798, 800, 801, 803, 805, 807, 808, 809, 831, 837, 843, 854, 866, 878], "ems_av": 16, "u": [16, 19, 21, 47, 69, 78, 103, 111, 114, 115, 137, 141, 144, 146, 149, 151, 160, 166, 171, 172, 180, 181, 183, 188, 189, 194, 200, 201, 204, 205, 206, 214, 215, 220, 225, 243, 254, 255, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 443, 477, 478, 532, 837, 840, 845, 856, 859, 860, 863, 878], "schurger": [16, 195, 243, 410, 425], "thu": [16, 18, 43, 47, 55, 69, 102, 113, 140, 141, 149, 152, 170, 171, 175, 180, 182, 188, 195, 201, 204, 206, 207, 209, 225, 263, 264, 265, 266, 268, 270, 271, 274, 277, 278, 279, 346, 411, 420, 432, 443, 445, 447, 477, 478, 524, 532, 535, 559, 725, 728, 833, 837, 853, 854, 857, 860, 878], "equalize_event_count": [16, 149, 151, 166, 229, 230, 235, 263, 264, 700, 878], "103": [16, 35, 50, 111, 113, 120, 169, 195, 225, 229, 230, 863], "112": [16, 69, 114, 134, 169, 171, 214, 219, 225, 229, 230, 243, 565, 863], "aaron": [16, 195, 243, 410, 425], "sebastien": [16, 195, 243, 410, 425, 878], "marti": [16, 195, 243, 410, 425, 878], "reveal": [16, 100, 112, 144, 170, 191, 195, 201, 240, 243, 410, 425, 726, 729], "480": [16, 20, 73, 80, 171, 191, 230], "140": [16, 19, 34, 80, 81, 101, 111, 122, 156, 169, 205, 206, 208, 229, 230, 243, 562, 860], "ems_filt": [16, 20], "continu": [17, 19, 20, 21, 27, 97, 101, 140, 142, 145, 148, 151, 161, 168, 188, 195, 196, 197, 198, 200, 201, 204, 205, 209, 212, 215, 219, 220, 225, 238, 243, 255, 257, 263, 264, 265, 266, 268, 344, 352, 356, 358, 362, 392, 400, 404, 409, 415, 416, 417, 421, 449, 450, 477, 478, 490, 496, 497, 507, 517, 518, 554, 556, 557, 560, 569, 577, 578, 603, 608, 681, 682, 683, 697, 699, 700, 701, 722, 769, 781, 788, 790, 833, 837, 853, 854, 859, 863, 866, 878], "spoc": [17, 20, 27, 243, 263, 268, 409, 417, 490, 518, 558, 868, 878], "xdawn": [17, 20, 27, 76, 84, 243, 260, 263, 265, 266, 268, 358, 372, 409, 413, 416, 424, 477, 554, 612, 776, 868, 878], "em": [17, 20, 27, 195, 263, 265, 266, 268, 425, 477, 554, 612, 868, 878], "recept": [17, 20, 27, 165, 196, 197, 243, 249, 268, 311, 327, 372, 415, 421, 449, 478, 807, 854], "spectro": [17, 20, 27, 113, 165, 196, 197, 263, 265, 266, 268, 415, 417, 421, 449, 490, 518, 716], "ssd": [17, 20, 27, 263, 265, 266, 268, 490, 518, 716, 868, 878], "mvpa": [18, 165, 196, 197, 260, 263, 265, 266, 268, 274, 353, 409, 410, 411, 412, 413, 414, 416, 418, 419, 424, 426, 427, 450, 524, 535, 558, 617, 745, 878], "neurophysiolog": [18, 19, 834], "interpret": [18, 19, 102, 142, 151, 159, 160, 188, 195, 201, 202, 216, 227, 229, 230, 235, 243, 258, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 277, 278, 279, 281, 302, 309, 312, 326, 328, 353, 354, 356, 358, 368, 411, 412, 413, 415, 419, 422, 425, 426, 427, 430, 447, 448, 452, 465, 467, 468, 477, 478, 485, 492, 499, 501, 516, 519, 520, 524, 530, 531, 540, 541, 556, 557, 559, 562, 569, 570, 572, 573, 574, 576, 579, 582, 591, 593, 600, 645, 648, 649, 650, 653, 662, 665, 683, 684, 685, 686, 687, 688, 692, 697, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 715, 716, 724, 725, 726, 727, 728, 745, 769, 775, 776, 777, 779, 780, 781, 782, 789, 794, 796, 799, 837, 840, 841, 848, 860, 878], "romain": [18, 878], "trachel": [18, 878], "trachelr": 18, "sample_path": [18, 123, 134, 135, 136], "meg_data": [18, 140], "reshap": [18, 137, 194, 225, 226, 229, 233, 235, 415, 424], "scaler": [18, 868, 878], "coef": [18, 19, 194, 195, 427], "revers": [18, 19, 71, 143, 146, 172, 188, 198, 200, 201, 203, 204, 206, 214, 260, 265, 266, 270, 271, 274, 276, 277, 278, 279, 779, 781, 783, 784, 803, 808, 878], "sequenti": [18, 140, 150, 220, 261, 262, 263, 264, 265, 266, 269, 270, 271, 273, 274, 277, 278, 279, 281, 334, 353, 354, 356, 358, 412, 419, 422, 425, 426, 452, 465, 467, 477, 478, 516, 519, 520, 530, 531, 540, 541, 562, 569, 570, 645, 648, 649, 650, 662, 684, 685, 686, 687, 688, 697, 699, 700, 701, 702, 703, 704, 705, 706, 707, 715, 716, 724, 725, 726, 727, 728, 735, 745, 764, 769, 777, 780, 799, 803, 808, 809, 833], "kai": [18, 19, 144, 243, 413, 415, 427, 433], "g\u00f6rgen": [18, 19, 243, 413, 415, 427], "dylan": [18, 19, 82, 243, 413, 415, 427, 557], "hayn": [18, 19, 243, 413, 415, 427], "benjamin": [18, 19, 243, 409, 413, 415, 427], "blankertz": [18, 19, 243, 409, 413, 415, 427], "felix": [18, 19, 111, 243, 413, 415, 427, 878], "bie\u00dfmann": [18, 19, 243, 413, 415, 427], "On": [18, 19, 69, 70, 166, 168, 199, 201, 204, 205, 240, 243, 255, 281, 413, 415, 427, 438, 458, 557, 566, 835, 837, 842, 843, 845, 855, 860, 878], "multivari": [18, 19, 89, 93, 137, 162, 194, 195, 243, 353, 413, 415, 427, 651, 854, 857, 878], "110": [18, 19, 21, 35, 41, 80, 81, 111, 134, 158, 169, 229, 230, 243, 413, 415, 427, 562], "067": [18, 19, 243, 413, 415, 427], "042": [18, 20, 140, 149, 169, 222, 860], "1015": [18, 20], "linear_model_pattern": [18, 20], "reproduc": [19, 45, 69, 78, 92, 151, 194, 215, 296, 510, 557, 583, 602, 649, 650, 651, 660, 661, 663, 684, 685, 686, 687, 688, 837, 878], "lalor": [19, 194, 243, 415, 854], "mtrf": [19, 194, 243, 415, 868, 878], "receptivefield": [19, 194, 421, 868, 878], "speech": [19, 194, 243, 415, 589, 726, 729, 854], "envelop": [19, 81, 112, 113, 114, 136, 146, 195, 263, 264, 265, 266, 416, 477, 478, 562, 854, 878], "try": [19, 31, 69, 73, 82, 140, 141, 143, 151, 156, 158, 161, 162, 167, 171, 176, 180, 201, 202, 203, 204, 205, 206, 214, 221, 222, 240, 273, 281, 426, 446, 459, 485, 492, 557, 571, 761, 819, 835, 836, 837, 842, 855, 857, 858, 878], "known": [19, 44, 87, 111, 113, 144, 151, 156, 160, 165, 180, 223, 224, 225, 260, 263, 264, 265, 266, 267, 268, 269, 274, 353, 363, 444, 450, 477, 478, 485, 492, 507, 523, 524, 538, 593, 617, 620, 653, 661, 664, 679, 745, 833, 849, 854, 860, 878], "literatur": [19, 144, 240, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 697, 700, 833], "simpli": [19, 43, 135, 143, 144, 146, 149, 170, 171, 188, 199, 200, 204, 206, 209, 215, 216, 225, 239, 240, 258, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 296, 297, 477, 478, 573, 574, 697, 700, 835, 837, 840, 845, 854, 860, 878], "chri": [19, 113, 136, 194, 195, 243, 878], "holdgraf": [19, 113, 114, 136, 194, 195, 243, 415, 878], "choldgraf": [19, 113, 114, 136, 194], "nicola": [19, 47, 243, 657, 878], "barascud": [19, 878], "sphinx_gallery_thumbnail_numb": [19, 119, 195], "scipi": [19, 31, 96, 110, 156, 171, 172, 194, 201, 205, 222, 225, 226, 227, 230, 233, 234, 240, 255, 260, 263, 264, 265, 266, 270, 271, 272, 274, 275, 276, 277, 278, 279, 281, 317, 328, 357, 359, 409, 411, 416, 420, 444, 445, 447, 448, 449, 452, 477, 478, 556, 557, 565, 571, 645, 677, 679, 684, 685, 687, 688, 690, 691, 697, 699, 700, 701, 713, 716, 723, 745, 762, 777, 784, 788, 797, 799, 800, 805, 807, 836, 837, 857, 859, 862, 875, 878], "loadmat": [19, 194], "collect": [19, 69, 126, 151, 157, 168, 172, 183, 184, 190, 191, 199, 209, 240, 243, 256, 260, 263, 264, 265, 266, 320, 409, 416, 436, 477, 478, 556, 557, 682, 697, 699, 701, 759, 769, 777, 784, 788, 800, 805, 807, 833, 837, 852, 853, 860, 863, 878], "listen": [19, 854, 859, 866], "know": [19, 40, 126, 142, 156, 160, 169, 172, 189, 199, 201, 204, 205, 206, 216, 229, 265, 266, 296, 297, 353, 357, 358, 368, 369, 370, 409, 416, 452, 453, 472, 474, 475, 532, 535, 638, 785, 837, 840, 843, 844, 855, 857, 860, 878], "primarili": [19, 69, 170, 198, 201, 411, 477, 478, 599, 767, 833, 844], "speech_data": [19, 194], "down": [19, 21, 69, 111, 134, 151, 161, 194, 195, 201, 205, 216, 217, 227, 229, 260, 261, 263, 264, 265, 266, 272, 273, 409, 416, 449, 477, 478, 556, 557, 583, 684, 685, 687, 688, 697, 699, 701, 745, 773, 775, 776, 777, 781, 784, 788, 797, 798, 800, 805, 835, 837, 859, 878], "biosemi128": [19, 170], "rawarrai": [19, 63, 65, 69, 74, 82, 113, 159, 188, 190, 204, 207, 220, 264, 266, 496, 833, 868, 878], "ln": [19, 91, 713, 723, 727, 843, 860], "800": [19, 33, 43, 51, 80, 82, 125, 126, 133, 135, 144, 155, 156, 160, 166, 175, 177, 201, 208, 233, 270, 271, 274, 277, 278, 279, 468, 745, 803, 808], "alpha": [19, 21, 28, 35, 39, 40, 44, 46, 49, 50, 59, 69, 78, 95, 96, 109, 111, 112, 115, 134, 135, 137, 146, 151, 172, 177, 181, 190, 194, 205, 211, 225, 227, 230, 235, 239, 240, 259, 263, 264, 265, 266, 269, 270, 271, 273, 274, 277, 278, 279, 353, 415, 421, 467, 472, 474, 475, 477, 478, 540, 619, 675, 681, 684, 685, 687, 688, 697, 699, 701, 745, 761, 764, 777, 781, 793, 799, 803, 808, 878], "ln1": 19, "lw": [19, 39, 134, 144, 172, 181, 194, 209, 211, 222, 713, 723, 878], "frameon": [19, 126], "float64": [19, 63, 65, 69, 74, 82, 91, 93, 113, 159, 167, 190, 204, 207, 220, 476, 677, 860], "7677": 19, "7676": 19, "119": [19, 78, 122, 134, 135, 160, 169, 195, 225, 229, 878], "938": [19, 230], "construct": [19, 42, 68, 102, 140, 144, 162, 168, 178, 180, 183, 184, 188, 191, 195, 201, 204, 205, 206, 209, 222, 225, 239, 240, 263, 264, 265, 266, 270, 274, 276, 278, 279, 283, 284, 296, 312, 359, 433, 444, 445, 447, 448, 477, 478, 494, 571, 609, 642, 646, 647, 683, 692, 703, 706, 758, 764, 798, 803, 809, 833, 853, 860, 878], "relationship": [19, 22, 143, 160, 203, 225, 415, 421, 453, 713, 723, 724, 725, 727, 728, 833, 854, 859, 860], "rf": [19, 194, 415], "feature_nam": [19, 194, 415, 878], "corrcoef": [19, 22, 47, 415], "extra": [19, 80, 81, 145, 160, 166, 169, 170, 191, 206, 214, 221, 260, 263, 264, 265, 266, 272, 304, 305, 311, 334, 336, 409, 410, 416, 428, 477, 478, 556, 557, 571, 697, 699, 701, 741, 762, 769, 777, 779, 781, 784, 785, 788, 795, 797, 799, 800, 801, 805, 807, 833, 841, 845, 878], "inclus": [19, 122, 140, 143, 185, 255, 263, 264, 273, 276, 379, 401, 402, 454, 472, 474, 475, 488, 535, 552, 557, 576, 689, 698, 700, 878], "n_delai": [19, 415], "held": [19, 79, 171, 194, 859], "coef_": [19, 194, 413, 415, 556], "n_output": [19, 415, 421], "n_featur": [19, 194, 195, 409, 410, 411, 413, 414, 415, 416, 417, 420, 421, 424, 558, 583, 677], "delays_": [19, 194, 415], "mean_coef": 19, "mean_scor": 19, "ix_ch": 19, "sometim": [19, 27, 60, 78, 82, 111, 114, 116, 126, 127, 134, 140, 144, 156, 161, 168, 169, 189, 190, 199, 201, 202, 204, 206, 207, 225, 260, 263, 264, 265, 266, 268, 272, 409, 416, 477, 478, 493, 556, 557, 571, 603, 609, 697, 699, 701, 762, 769, 777, 784, 788, 797, 800, 805, 807, 833, 837, 845, 853, 857, 860, 878], "well": [19, 22, 32, 37, 47, 69, 77, 115, 119, 134, 136, 137, 140, 143, 144, 150, 152, 160, 162, 165, 166, 169, 172, 175, 182, 184, 188, 189, 191, 194, 198, 199, 201, 203, 204, 205, 206, 207, 209, 212, 214, 220, 222, 230, 238, 240, 243, 263, 264, 265, 266, 273, 274, 319, 341, 353, 368, 409, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 425, 433, 448, 449, 477, 478, 557, 558, 585, 592, 697, 713, 715, 723, 726, 727, 728, 729, 775, 777, 791, 833, 835, 837, 843, 849, 854, 855, 857, 859, 860, 862, 866, 878], "recreat": [19, 126, 140, 201, 768], "time_plot": 19, "180": [19, 24, 33, 35, 56, 80, 91, 110, 156, 169, 178, 191, 198, 200, 202, 204, 208, 225, 229, 270, 271, 274, 277, 278, 279, 443, 750, 878], "highlight": [19, 21, 89, 94, 113, 119, 150, 151, 172, 175, 176, 202, 204, 209, 216, 260, 261, 263, 264, 265, 266, 273, 409, 416, 477, 478, 556, 697, 699, 701, 762, 773, 777, 779, 784, 800, 805, 807, 837, 878], "max_coef": 19, "pcolormesh": [19, 113, 194, 878], "shade": [19, 194, 205, 754, 769, 810, 811, 878], "gouraud": [19, 194], "ncoeffici": 19, "setp": [19, 194, 202], "get_xticklabel": [19, 194], "2c": [19, 860], "ix_plot": 19, "argmin": [19, 119, 144, 240], "vlim": [19, 69, 79, 99, 108, 141, 142, 203, 206, 210, 230, 240, 260, 263, 264, 265, 266, 272, 409, 416, 477, 478, 556, 557, 697, 699, 701, 762, 777, 784, 788, 797, 800, 805, 807, 878], "nfor": 19, "anoth": [19, 31, 45, 69, 86, 94, 125, 141, 143, 144, 145, 149, 151, 155, 156, 161, 167, 171, 180, 188, 200, 201, 204, 205, 209, 215, 216, 217, 225, 230, 263, 264, 265, 266, 269, 270, 271, 273, 274, 275, 277, 278, 279, 281, 313, 353, 354, 356, 358, 359, 412, 419, 422, 425, 426, 435, 452, 465, 467, 477, 478, 505, 516, 519, 520, 530, 531, 540, 541, 543, 562, 569, 570, 645, 648, 649, 650, 662, 668, 684, 685, 686, 687, 688, 699, 701, 702, 703, 704, 705, 706, 707, 715, 716, 724, 725, 726, 727, 728, 733, 734, 735, 766, 777, 780, 798, 799, 818, 833, 835, 837, 845, 854, 859, 860, 863, 878], "case": [19, 44, 58, 69, 72, 78, 89, 93, 94, 102, 113, 119, 122, 126, 140, 143, 144, 149, 155, 161, 162, 165, 168, 169, 171, 172, 180, 181, 185, 188, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 214, 215, 216, 225, 226, 227, 233, 235, 238, 240, 243, 257, 258, 260, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 287, 296, 297, 301, 307, 317, 328, 352, 353, 357, 358, 368, 369, 370, 371, 409, 416, 426, 433, 438, 449, 452, 453, 460, 467, 472, 474, 475, 477, 478, 485, 492, 499, 507, 512, 517, 523, 524, 525, 526, 527, 528, 535, 546, 552, 560, 571, 583, 602, 608, 625, 639, 642, 657, 662, 683, 684, 697, 699, 700, 701, 709, 715, 725, 728, 732, 745, 763, 769, 776, 778, 781, 782, 785, 803, 833, 837, 845, 857, 859, 860, 878], "aim": [19, 137, 158, 177, 221, 222, 302, 354, 355, 356], "exploit": [19, 87, 878], "context": [19, 42, 115, 171, 172, 175, 195, 201, 225, 263, 264, 265, 266, 269, 270, 271, 273, 274, 277, 278, 279, 281, 353, 354, 356, 358, 409, 412, 419, 422, 425, 426, 452, 465, 467, 477, 478, 516, 519, 520, 525, 530, 531, 540, 541, 546, 557, 562, 569, 570, 645, 648, 649, 650, 662, 684, 685, 686, 687, 688, 699, 701, 702, 703, 704, 705, 706, 707, 715, 716, 724, 725, 726, 727, 728, 739, 740, 775, 777, 780, 792, 798, 799, 816, 817, 843, 859, 878], "treat": [19, 21, 151, 172, 195, 206, 207, 225, 229, 263, 264, 267, 273, 488, 490, 548, 550, 684, 685, 687, 688, 700, 769, 787, 878], "independ": [19, 69, 73, 82, 108, 111, 151, 158, 162, 166, 179, 180, 181, 195, 198, 200, 201, 203, 204, 205, 209, 216, 225, 243, 263, 264, 265, 266, 270, 271, 273, 274, 277, 278, 279, 357, 412, 419, 424, 477, 478, 557, 558, 565, 571, 576, 583, 585, 679, 681, 684, 685, 687, 688, 691, 724, 725, 727, 728, 788, 790, 792, 844, 853, 854, 857, 860, 878], "therefor": [19, 69, 93, 134, 136, 142, 146, 151, 158, 162, 169, 170, 189, 195, 199, 200, 201, 203, 204, 207, 209, 225, 240, 263, 264, 273, 317, 319, 433, 477, 493, 496, 557, 603, 609, 610, 614, 837, 841, 853, 859, 860], "qualiti": [19, 120, 157, 166, 172, 200, 201, 204, 206, 217, 240, 243, 258, 263, 264, 265, 266, 477, 478, 516, 557, 573, 589, 789, 837, 853, 859, 860, 866, 878], "expens": [19, 165, 166, 172, 593, 861, 866, 878], "especi": [19, 55, 69, 111, 119, 126, 143, 149, 162, 166, 169, 198, 199, 201, 203, 204, 208, 214, 240, 265, 266, 274, 477, 478, 557, 577, 593, 684, 685, 687, 688, 785, 833, 837, 840, 853, 857, 860, 878], "lag": [19, 27, 76, 84, 194, 222, 243, 263, 265, 266, 268, 415, 421, 435, 477, 554, 612, 878], "footcit": [19, 383, 837], "crosseetal2016": 19, "earlier": [19, 145, 167, 171, 191, 198, 201, 214, 265, 266, 296, 297, 353, 357, 358, 368, 369, 370, 409, 416, 451, 452, 453, 472, 474, 475, 535, 785, 841, 878], "wherea": [19, 80, 134, 136, 143, 156, 158, 168, 175, 195, 201, 202, 203, 209, 225, 257, 263, 264, 282, 296, 297, 477, 478, 485, 775, 798, 804, 833, 860, 864, 878], "chang": [19, 31, 44, 45, 113, 126, 134, 136, 142, 145, 149, 151, 156, 158, 161, 167, 170, 171, 172, 175, 176, 178, 184, 188, 189, 191, 194, 199, 204, 205, 206, 210, 211, 215, 216, 217, 221, 225, 228, 233, 235, 240, 243, 255, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 296, 297, 303, 306, 308, 311, 319, 334, 339, 340, 342, 346, 359, 361, 385, 409, 416, 430, 438, 443, 444, 446, 448, 450, 452, 453, 462, 468, 472, 474, 475, 477, 478, 497, 500, 501, 512, 516, 519, 520, 535, 545, 546, 556, 557, 559, 571, 576, 582, 583, 585, 607, 615, 633, 642, 644, 645, 646, 662, 689, 692, 697, 699, 700, 701, 740, 745, 755, 761, 762, 763, 769, 770, 773, 774, 775, 776, 777, 779, 781, 784, 785, 786, 788, 790, 792, 795, 797, 798, 799, 800, 801, 803, 805, 807, 808, 809, 810, 815, 824, 838, 843, 845, 853, 856, 857, 860, 863, 864], "affect": [19, 49, 70, 80, 141, 142, 149, 151, 167, 190, 198, 199, 201, 202, 204, 205, 207, 209, 240, 243, 256, 258, 263, 264, 265, 266, 270, 273, 274, 278, 364, 401, 450, 451, 477, 478, 497, 573, 615, 649, 650, 725, 728, 798, 803, 837, 853, 860, 878], "obvious": [19, 158, 209, 240], "cf": [19, 145, 155, 713, 723, 727], "next": [19, 54, 55, 58, 113, 115, 120, 135, 136, 141, 145, 150, 151, 156, 157, 161, 166, 171, 175, 177, 179, 188, 190, 198, 200, 204, 206, 210, 214, 215, 216, 225, 239, 240, 260, 263, 264, 265, 266, 272, 353, 408, 409, 416, 477, 478, 556, 557, 571, 697, 699, 700, 701, 726, 729, 762, 763, 784, 788, 797, 800, 805, 835, 837, 845, 860, 863, 878], "section": [19, 73, 115, 136, 137, 140, 142, 144, 149, 150, 151, 156, 165, 166, 167, 171, 172, 175, 188, 189, 190, 198, 200, 201, 202, 204, 207, 209, 214, 215, 240, 258, 260, 261, 262, 263, 264, 265, 266, 272, 273, 275, 296, 297, 311, 390, 409, 416, 430, 436, 444, 446, 477, 478, 494, 505, 556, 557, 571, 576, 586, 697, 699, 701, 762, 777, 784, 788, 797, 800, 805, 807, 837, 841, 853, 859, 860, 861, 863, 878], "haufeetal2014": 19, "sr": 19, "1e4": 19, "mean_pattern": 19, "max_pattern": 19, "8384": [19, 878], "20it": [19, 34, 95, 102, 107, 108, 111, 180, 194, 195, 208, 225, 226, 229, 230, 234, 235], "1334": 19, "2119": 19, "234": [19, 35, 169, 225, 229], "2844": [19, 194], "326": [19, 111, 169, 208, 225, 230], "3352": 19, "417": [19, 35, 118, 209, 213, 230, 243, 557, 583, 762], "3711": 19, "4014": 19, "4198": 19, "689": [19, 194, 195, 230], "4372": 19, "782": [19, 230], "4530": 19, "873": [19, 35, 230], "4650": 19, "963": [19, 230], "4744": 19, "1053": [19, 208], "4826": 19, "1145": [19, 208], "4907": 19, "1238": 19, "4983": 19, "1330": 19, "5046": 19, "1422": [19, 158, 169, 208], "5103": 19, "1515": 19, "5154": 19, "1607": 19, "5197": 19, "1701": 19, "5247": 19, "1793": 19, "5281": [19, 243, 391], "1885": 19, "5313": 19, "1975": 19, "5334": 19, "2065": 19, "5351": 19, "2156": 19, "5373": 19, "2248": 19, "5397": 19, "68it": [19, 34, 102, 103, 111, 194, 195, 208, 225, 226, 229, 230], "2341": [19, 34, 169, 222], "5423": 19, "2433": [19, 159, 169], "5440": 19, "2527": 19, "5465": 19, "2618": 19, "5478": 19, "2709": 19, "5487": 19, "53it": [19, 34, 102, 107, 108, 111, 194, 195, 208, 225, 226, 227, 230, 234, 235], "2800": 19, "5496": 19, "2892": 19, "5508": 19, "2984": 19, "5522": 19, "3077": 19, "5536": 19, "3170": 19, "5548": 19, "3262": 19, "5556": 19, "3354": 19, "5566": 19, "3449": 19, "5583": 19, "21it": [19, 102, 107, 108, 111, 194, 208, 225, 229, 230, 234], "3542": 19, "5593": 19, "3634": 19, "5600": 19, "3724": 19, "5601": 19, "3816": 19, "5607": 19, "3910": 19, "5619": 19, "4004": [19, 860], "5630": 19, "4087": 19, "5603": 19, "4179": 19, "5610": 19, "4272": 19, "5620": 19, "4364": 19, "5626": 19, "4454": 19, "5623": 19, "4546": 19, "5628": 19, "4636": 19, "5625": 19, "4728": 19, "5631": 19, "61it": [19, 34, 102, 107, 111, 194, 195, 225, 226, 229, 230], "4817": 19, "5627": 19, "4910": 19, "5636": 19, "5003": [19, 860], "5644": 19, "5096": 19, "5652": 19, "5189": 19, "5659": 19, "5282": 19, "5665": 19, "5377": 19, "5676": 19, "5469": 19, "5678": 19, "5561": 19, "5680": 19, "67": [19, 33, 35, 47, 57, 78, 80, 81, 102, 106, 107, 111, 113, 115, 149, 158, 169, 172, 176, 178, 181, 191, 195, 208, 225, 226, 227, 229, 230, 234, 235, 243, 524, 878], "5654": 19, "5685": 19, "5747": 19, "5689": 19, "5841": 19, "5696": 19, "5934": 19, "5701": 19, "6027": 19, "5704": 19, "6120": 19, "5706": 19, "6212": 19, "5707": 19, "35it": [19, 102, 194, 195, 208, 225, 226, 230, 235], "6304": 19, "6397": 19, "5710": 19, "6490": 19, "5712": 19, "6582": 19, "5714": 19, "6670": 19, "5700": 19, "6758": 19, "6846": 19, "5679": 19, "6936": 19, "5675": 19, "7025": 19, "5668": 19, "7114": 19, "7202": 19, "5651": 19, "7293": 19, "5650": 19, "7384": 19, "7475": 19, "7565": 19, "5647": 19, "7655": 19, "5645": 19, "7744": 19, "5640": 19, "93": [19, 33, 35, 40, 47, 79, 102, 107, 111, 113, 169, 195, 208, 225, 226, 229, 230, 243, 589], "7834": 19, "5639": 19, "7926": 19, "8017": 19, "8107": 19, "5642": 19, "8198": 19, "8290": 19, "5648": 19, "8379": [19, 878], "5643": 19, "5515": 19, "2461": 19, "176": [19, 142, 169, 171, 195, 225, 229, 230, 243, 557], "3422": 19, "269": [19, 136, 169, 194, 225, 230], "4011": 19, "360": [19, 40, 48, 49, 54, 55, 58, 59, 80, 81, 92, 93, 120, 152, 162, 169, 172, 178, 191, 208, 230, 239], "4356": [19, 225], "452": [19, 208, 230, 276], "4597": 19, "4772": 19, "636": [19, 195], "729": [19, 183, 184, 185, 230], "5022": 19, "822": [19, 230], "5114": 19, "914": [19, 230], "5180": 19, "1005": [19, 159], "5233": [19, 243, 726, 729], "1097": [19, 243], "5284": 19, "1189": 19, "5325": 19, "1282": 19, "5365": 19, "1374": 19, "1466": 19, "5425": 19, "91it": [19, 33, 34, 102, 111, 194, 195, 208, 225, 226, 229, 230, 235], "1557": 19, "5443": 19, "1649": [19, 208], "5464": 19, "1741": [19, 34, 169, 200, 222, 243], "5485": 19, "1833": [19, 169, 194], "5504": 19, "1924": 19, "5514": 19, "2015": [19, 46, 70, 98, 100, 112, 120, 162, 194, 201, 204, 226, 240, 243, 265, 266, 353, 387, 392, 566, 683, 726, 729, 785, 854, 857, 866], "5523": 19, "2107": 19, "2200": 19, "5553": 19, "2292": [19, 243], "5565": 19, "2384": 19, "5576": 19, "2475": 19, "5580": 19, "2565": 19, "5582": 19, "2656": 19, "5587": 19, "2748": 19, "5594": 19, "2839": 19, "2927": 19, "3016": 19, "5589": 19, "3107": 19, "3199": 19, "3287": 19, "3376": 19, "5588": 19, "3468": 19, "5597": 19, "3561": 19, "5606": 19, "3650": 19, "5604": 19, "3743": 19, "5612": 19, "3835": 19, "5618": 19, "3927": 19, "5624": 19, "4019": 19, "5629": 19, "4105": [19, 204, 243], "5614": 19, "4192": 19, "4282": 19, "4373": 19, "5605": 19, "4464": 19, "4556": 19, "4648": 19, "5617": 19, "4738": 19, "5615": 19, "4831": 19, "4921": 19, "5014": 19, "5105": 19, "5635": 19, "5286": 19, "5379": 19, "5638": 19, "67it": [19, 33, 34, 102, 107, 180, 194, 195, 208, 226, 227, 229, 230], "5637": 19, "5653": [19, 181], "5646": 19, "5745": 19, "5837": 19, "5655": 19, "5930": 19, "5661": 19, "6022": 19, "5664": 19, "6114": 19, "5667": 19, "6207": 19, "5672": 19, "6299": 19, "6392": 19, "6483": 19, "6574": 19, "6667": 19, "5681": 19, "6761": 19, "6854": 19, "5693": 19, "6947": 19, "5699": 19, "7038": 19, "5698": 19, "7131": 19, "7223": 19, "7316": 19, "5705": 19, "7407": 19, "7499": [19, 58, 89], "7590": 19, "5702": 19, "7683": 19, "7775": 19, "7867": 19, "7960": 19, "5711": 19, "8054": 19, "5716": 19, "8147": 19, "5721": 19, "8239": 19, "5720": 19, "8329": 19, "5715": 19, "5608": 19, "2428": 19, "175": [19, 134, 142, 150, 168, 169, 174, 195, 225, 230, 243, 557], "3400": 19, "268": [19, 95, 169, 185, 191, 208, 230], "3996": 19, "4354": 19, "4633": 19, "4790": 19, "4939": [19, 334], "732": [19, 195, 230], "5052": 19, "825": [19, 21, 82, 113, 183, 187, 230, 243, 557], "5143": 19, "918": [19, 77, 84], "5216": 19, "1012": [19, 169, 195, 208], "5285": 19, "1105": 19, "5335": 19, "1200": [19, 35, 221], "5392": 19, "1293": [19, 78, 84, 195], "1385": [19, 208], "5453": 19, "1478": 19, "5481": 19, "1570": 19, "5503": 19, "1664": [19, 208], "5530": 19, "1757": 19, "5551": 19, "1851": 19, "5573": 19, "1943": [19, 169], "5585": 19, "2129": 19, "2221": [19, 34, 169, 222], "5621": 19, "2314": 19, "5632": 19, "2408": 19, "2501": 19, "2595": 19, "2689": [19, 194], "2783": 19, "5690": 19, "2873": 19, "5683": 19, "2967": 19, "5692": 19, "3061": 19, "3153": [19, 35], "5703": 19, "3246": 19, "5708": 19, "3340": 19, "3431": 19, "5713": 19, "3525": 19, "5719": 19, "3617": 19, "3709": 19, "3804": 19, "5730": 19, "3898": 19, "5735": 19, "3992": 19, "5739": 19, "4085": 19, "5741": 19, "4177": 19, "4271": 19, "5746": 19, "4366": 19, "5756": 19, "4460": 19, "5759": 19, "4553": 19, "5760": 19, "4646": 19, "5762": 19, "4739": 19, "5764": 19, "4832": 19, "5763": 19, "95it": [19, 102, 107, 111, 180, 194, 195, 225, 229, 230, 234], "4928": 19, "5773": 19, "5021": 19, "5772": 19, "5115": 19, "5777": 19, "5207": 19, "5775": 19, "5301": 19, "5778": 19, "5394": 19, "5779": 19, "5771": 19, "5575": 19, "5761": 19, "5669": 19, "5766": 19, "5854": 19, "5947": 19, "6038": 19, "6132": 19, "6225": 19, "6317": 19, "6410": 19, "6503": 19, "6595": 19, "6690": 19, "5767": 19, "6783": 19, "5769": 19, "6877": 19, "6971": 19, "5774": 19, "7064": 19, "7157": 19, "7250": 19, "7343": 19, "7435": 19, "5770": 19, "7529": 19, "7622": 19, "7714": 19, "7808": 19, "5776": 19, "7902": 19, "7996": 19, "5780": 19, "8091": 19, "5785": 19, "8184": 19, "8278": 19, "5787": 19, "8372": 19, "5789": 19, "sens": [19, 60, 69, 142, 160, 201, 206, 211, 240, 265, 266, 296, 297, 353, 357, 358, 368, 369, 370, 409, 416, 452, 453, 472, 474, 475, 535, 767, 785, 833, 837, 859, 860], "actual": [19, 23, 27, 41, 43, 60, 63, 80, 114, 127, 134, 144, 151, 158, 160, 162, 168, 170, 172, 175, 182, 183, 184, 185, 189, 190, 194, 199, 200, 201, 202, 216, 225, 227, 230, 233, 234, 235, 240, 256, 273, 443, 537, 557, 833, 837, 854, 860, 878], "valid_samples_": [19, 415], "grei": [19, 112, 142, 240, 265, 266, 697, 781, 878], "attempt": [19, 74, 194, 198, 227, 263, 264, 265, 266, 271, 277, 279, 374, 477, 478, 484, 494, 557, 628, 642, 808, 831, 833, 859, 878], "reflect": [19, 32, 60, 69, 119, 135, 141, 149, 151, 160, 161, 177, 181, 198, 203, 204, 206, 214, 263, 264, 265, 266, 296, 297, 353, 357, 358, 368, 369, 370, 409, 416, 447, 448, 449, 452, 453, 472, 474, 475, 477, 478, 535, 615, 677, 784, 785, 798, 833, 837, 853, 860, 878], "most": [19, 28, 45, 47, 69, 72, 81, 82, 103, 107, 108, 113, 119, 126, 134, 135, 140, 144, 149, 150, 151, 152, 155, 156, 165, 167, 169, 171, 172, 181, 188, 198, 201, 203, 205, 206, 208, 209, 210, 211, 214, 225, 229, 238, 255, 263, 264, 265, 266, 268, 269, 274, 277, 311, 329, 354, 355, 356, 376, 377, 378, 381, 382, 384, 388, 389, 392, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 438, 444, 449, 452, 472, 510, 516, 544, 557, 567, 583, 585, 602, 649, 650, 651, 660, 661, 662, 663, 684, 685, 686, 687, 688, 735, 740, 745, 763, 784, 833, 836, 837, 841, 842, 843, 855, 857, 859, 860, 861, 864, 868, 878], "toward": [19, 43, 46, 54, 55, 69, 102, 160, 180, 200, 229, 240, 243, 451, 453, 539, 560, 860, 878], "directli": [19, 34, 43, 78, 93, 94, 143, 144, 149, 170, 171, 172, 188, 190, 195, 199, 202, 203, 204, 205, 206, 216, 233, 239, 240, 255, 258, 260, 261, 262, 263, 264, 265, 266, 268, 270, 272, 274, 275, 278, 279, 311, 312, 317, 321, 358, 370, 409, 416, 445, 474, 477, 478, 479, 480, 485, 497, 556, 557, 571, 573, 615, 642, 697, 699, 701, 747, 762, 764, 775, 777, 784, 788, 797, 800, 803, 805, 807, 809, 855, 860, 868, 878], "obtain": [19, 38, 42, 43, 60, 89, 93, 94, 134, 137, 146, 151, 155, 157, 158, 170, 172, 175, 177, 178, 184, 185, 201, 203, 209, 214, 215, 222, 225, 227, 230, 239, 261, 263, 264, 265, 266, 267, 270, 274, 278, 279, 297, 308, 341, 343, 353, 355, 359, 372, 415, 417, 459, 460, 471, 474, 475, 477, 478, 485, 492, 496, 510, 524, 532, 543, 557, 561, 568, 583, 602, 610, 614, 620, 646, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 663, 664, 667, 671, 684, 685, 686, 687, 688, 698, 725, 728, 745, 764, 780, 803, 804, 809, 833, 853, 854, 858, 859, 860, 878], "via": [19, 134, 135, 136, 140, 142, 144, 145, 149, 150, 157, 168, 169, 170, 171, 172, 175, 180, 198, 199, 200, 204, 205, 214, 217, 225, 226, 229, 233, 235, 238, 239, 243, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 273, 275, 276, 278, 279, 282, 296, 297, 308, 317, 321, 327, 328, 374, 411, 420, 443, 445, 447, 448, 461, 468, 477, 478, 490, 557, 678, 684, 685, 687, 688, 699, 700, 701, 747, 761, 765, 766, 775, 779, 780, 784, 792, 798, 824, 833, 835, 837, 839, 840, 845, 857, 878], "procedur": [19, 112, 144, 161, 162, 188, 203, 204, 209, 225, 227, 228, 229, 235, 240, 243, 256, 258, 263, 264, 265, 266, 346, 353, 358, 417, 477, 478, 557, 558, 571, 573, 583, 593, 615, 684, 833, 854, 857, 860, 863, 878], "straightforward": [19, 102, 189, 201, 222, 860, 878], "sign": [19, 28, 38, 39, 47, 151, 204, 225, 228, 233, 265, 266, 270, 271, 274, 277, 278, 279, 334, 443, 451, 472, 474, 475, 511, 524, 525, 526, 527, 528, 583, 684, 685, 687, 688, 837, 860, 878], "strength": [19, 22, 35, 93, 151, 175, 204, 271, 277, 279, 571, 860], "direct": [19, 60, 79, 122, 134, 150, 156, 160, 161, 168, 178, 180, 185, 199, 205, 206, 208, 240, 243, 255, 261, 263, 264, 270, 271, 273, 274, 277, 278, 279, 289, 296, 297, 431, 443, 451, 477, 478, 488, 524, 567, 649, 699, 701, 745, 775, 787, 798, 808, 818, 833, 837, 843, 857, 859, 860, 878], "nbetween": 19, "giovanni": [19, 194, 243, 415, 854], "di": [19, 40, 143, 194, 243, 415, 854], "liberto": [19, 194, 243, 415, 854], "adam": [19, 135, 136, 194, 243, 415, 854, 865, 878], "bednar": [19, 194, 243, 415, 854], "edmund": [19, 194, 243, 415, 854], "fnhum": [19, 151, 194, 243, 415, 562, 854], "00604": [19, 194, 243, 415, 854], "704": [19, 20, 49, 56, 144, 195, 208, 230], "receptive_field_mtrf": [19, 20], "077": [20, 112, 127, 129], "auto_examples_decod": 20, "ssd_spatial_filt": [20, 21], "08": [20, 34, 40, 42, 45, 50, 58, 59, 72, 83, 84, 90, 93, 102, 106, 108, 111, 129, 151, 160, 164, 166, 176, 177, 178, 179, 180, 183, 184, 195, 201, 206, 208, 214, 221, 222, 225, 227, 228, 229, 230, 243], "996": [20, 21, 230], "retain": [21, 111, 149, 178, 199, 200, 214, 225, 258, 263, 264, 273, 276, 433, 557, 684, 685, 687, 688, 788, 835, 866, 878], "oscillatori": [21, 112, 222, 239, 243, 296, 297, 713, 723, 724, 727], "propos": [21, 240, 571, 576, 837], "surround": [21, 81, 100, 134, 240, 417, 562, 594, 692, 818, 837], "victoria": [21, 878], "peterson": [21, 878], "victoriapeterson09": 21, "freqs_sig": 21, "freqs_nois": 21, "sort_by_spectral_ratio": [21, 417], "filt_params_sign": [21, 417], "l_trans_bandwidth": [21, 112, 113, 201, 210, 263, 264, 265, 266, 411, 420, 445, 447, 477, 478, 589, 878], "filt_params_nois": [21, 417], "72000": [21, 81, 191], "196608": 21, "262144": 21, "327680": 21, "393216": 21, "458752": 21, "67108864": 21, "67174400": 21, "134742016": 21, "136314880": 21, "268435456": 21, "086": [21, 243, 654, 659], "preserv": [21, 34, 155, 156, 160, 166, 167, 194, 199, 204, 214, 225, 229, 258, 263, 264, 265, 266, 408, 439, 440, 441, 442, 477, 478, 573, 582, 697, 699, 700, 701, 860, 878], "ratio": [21, 58, 87, 126, 144, 166, 195, 201, 204, 206, 222, 227, 228, 229, 230, 243, 270, 271, 274, 277, 278, 279, 286, 417, 539, 540, 541, 557, 558, 638, 655, 656, 697, 700, 748, 805, 853, 860, 878], "accord": [21, 156, 169, 170, 194, 214, 256, 263, 264, 265, 266, 415, 417, 438, 477, 478, 485, 488, 492, 494, 552, 586, 603, 642, 647, 854, 860, 863, 878], "either": [21, 32, 43, 142, 149, 150, 151, 166, 167, 168, 170, 172, 190, 198, 202, 207, 209, 215, 216, 221, 225, 240, 255, 258, 260, 263, 264, 265, 266, 267, 270, 271, 272, 274, 276, 277, 278, 279, 287, 301, 320, 337, 353, 409, 416, 417, 426, 436, 444, 467, 470, 477, 478, 507, 508, 510, 516, 520, 522, 523, 556, 557, 559, 568, 571, 576, 585, 615, 625, 642, 644, 648, 649, 650, 662, 682, 683, 697, 698, 699, 701, 709, 719, 724, 725, 727, 728, 732, 745, 761, 762, 766, 769, 776, 777, 784, 788, 789, 797, 798, 799, 800, 803, 805, 807, 808, 809, 813, 837, 843, 853, 854, 857, 863, 878], "multipli": [21, 188, 201, 225, 268, 270, 271, 274, 277, 278, 279, 298, 417, 443, 524, 530, 697, 860, 863], "eq": [21, 417, 713, 723, 727, 860], "c_n": [21, 860], "reli": [21, 78, 169, 200, 240, 311, 837, 853, 857, 860, 863, 866, 878], "suggest": [21, 26, 141, 144, 162, 200, 201, 202, 203, 204, 206, 263, 264, 288, 290, 745, 836, 841, 842, 857, 859, 878], "pariet": [21, 49, 632, 745], "ssd_sourc": [21, 417], "psd": [21, 27, 67, 73, 91, 104, 105, 110, 132, 137, 140, 166, 172, 195, 198, 202, 211, 217, 220, 238, 239, 260, 263, 264, 265, 266, 268, 269, 273, 274, 358, 414, 450, 477, 478, 515, 520, 523, 530, 531, 535, 538, 554, 604, 619, 645, 699, 701, 704, 707, 715, 716, 739, 745, 761, 777, 799, 813, 854, 878], "psd_array_welch": [21, 220, 238, 263, 264, 265, 266, 417, 477, 478, 699, 701, 868, 878], "n_fft": [21, 107, 108, 113, 132, 211, 220, 238, 240, 263, 264, 265, 266, 417, 477, 478, 530, 698, 699, 701, 702, 704, 705, 707, 716, 726, 729, 799, 878], "4096": [21, 182, 267], "spec_ratio": [21, 417], "alreadi": [21, 30, 31, 34, 35, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 69, 70, 73, 77, 78, 85, 86, 93, 94, 114, 115, 118, 119, 126, 134, 135, 142, 144, 145, 149, 150, 151, 158, 159, 160, 162, 166, 169, 170, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 188, 189, 198, 200, 201, 204, 205, 206, 209, 214, 220, 240, 255, 263, 264, 265, 266, 270, 271, 273, 274, 275, 277, 278, 279, 296, 297, 306, 308, 327, 353, 357, 358, 366, 368, 369, 370, 371, 379, 401, 402, 409, 416, 443, 444, 452, 453, 472, 474, 475, 477, 478, 518, 535, 568, 569, 573, 615, 635, 636, 698, 717, 766, 769, 785, 828, 837, 838, 839, 854, 857, 860, 861, 866, 878], "sorter": 21, "get_spectral_ratio": [21, 417], "spectral": [21, 27, 32, 33, 34, 67, 70, 104, 105, 111, 112, 113, 116, 132, 137, 142, 166, 172, 195, 200, 208, 220, 222, 239, 243, 260, 263, 264, 265, 266, 268, 269, 274, 288, 289, 290, 296, 358, 414, 417, 450, 453, 477, 478, 515, 520, 523, 530, 531, 535, 538, 554, 557, 604, 612, 619, 645, 685, 698, 699, 701, 702, 703, 704, 705, 706, 707, 708, 709, 714, 715, 716, 724, 725, 727, 728, 739, 745, 761, 771, 777, 799, 813, 854, 866, 878], "orang": [21, 151, 156, 190, 210, 230, 235, 802], "frac": [21, 149, 201, 202, 209, 225, 274, 532, 657, 710, 713, 723, 724, 725, 727, 728, 860], "p_f": 21, "p_": [21, 860], "sf": [21, 225], "384": [21, 31, 35, 56, 80, 144, 171, 208, 225, 230], "spectrum": [21, 73, 82, 102, 103, 107, 111, 132, 137, 140, 143, 165, 166, 172, 198, 202, 204, 206, 211, 217, 220, 222, 239, 240, 241, 242, 243, 263, 264, 265, 266, 273, 450, 477, 478, 557, 699, 715, 716, 718, 740, 788, 790, 799, 833, 863, 866, 868, 878], "lowest": [21, 240, 258, 263, 264, 265, 266, 269, 340, 573, 674, 697, 698, 700, 769, 779], "below50": 21, "bandfilt": 21, "loglog": 21, "fill_between": [21, 112, 151, 235, 239, 240], "10000": [21, 83, 110, 134, 438, 472, 583, 662, 686], "green": [21, 48, 49, 50, 80, 115, 151, 156, 181, 190, 206, 240, 265, 266, 745, 766, 779, 796, 802, 878], "enjoi": [21, 240], "situat": [21, 203, 207, 220, 222, 273, 318, 436, 557, 837, 841, 859, 878], "chunk": [21, 79, 83, 137, 140, 146, 184, 209, 356, 358, 438, 477, 478, 557, 576, 647, 853, 878], "overlap": [21, 69, 83, 98, 108, 140, 146, 151, 166, 168, 191, 200, 209, 215, 216, 238, 243, 257, 263, 264, 265, 266, 325, 358, 411, 420, 433, 445, 447, 448, 467, 477, 478, 517, 518, 530, 543, 558, 573, 574, 585, 664, 683, 716, 745, 775, 799, 833, 878], "ssd_epoch": 21, "pattern_epoch": 21, "1251": 21, "1661": 21, "guido": [21, 243, 417], "nolt": [21, 243, 417], "gabriel": [21, 40, 203, 243, 417, 474, 556, 600], "curio": [21, 243, 417], "reliabl": [21, 102, 169, 202, 243, 417, 557], "basi": [21, 146, 162, 195, 243, 417, 430, 568, 576, 585, 857, 860, 878], "spatio": [21, 46, 59, 165, 184, 194, 195, 225, 226, 236, 237, 243, 263, 265, 266, 268, 274, 275, 276, 359, 415, 417, 432, 473, 474, 477, 523, 524, 538, 554, 585, 612, 625, 627, 652, 653, 654, 655, 656, 657, 658, 659, 669, 671, 672, 673, 677, 678, 680, 687, 688, 689, 745, 860, 878], "1528": [21, 243, 417], "1535": [21, 243, 417], "057": [21, 140, 142, 149, 169, 222, 243, 417], "produc": [22, 38, 81, 82, 116, 118, 127, 144, 161, 172, 179, 183, 190, 201, 203, 209, 225, 240, 243, 255, 258, 261, 263, 269, 273, 276, 302, 303, 326, 329, 350, 354, 355, 356, 358, 365, 386, 467, 469, 477, 478, 510, 516, 517, 520, 530, 543, 557, 560, 566, 569, 570, 576, 582, 583, 602, 608, 612, 632, 646, 648, 649, 650, 651, 660, 661, 662, 663, 665, 684, 685, 686, 687, 688, 692, 734, 745, 761, 762, 798, 827, 853, 859, 860, 863, 878], "abl": [22, 78, 89, 134, 135, 137, 144, 159, 161, 165, 172, 203, 204, 209, 222, 233, 273, 448, 477, 478, 557, 788, 835, 837, 854, 857, 860, 866, 878], "region": [22, 38, 41, 47, 49, 93, 94, 127, 135, 137, 150, 155, 181, 190, 201, 202, 225, 226, 239, 240, 261, 263, 264, 265, 266, 276, 323, 411, 420, 445, 447, 448, 461, 462, 463, 467, 477, 478, 510, 602, 646, 657, 745, 775, 798, 801, 833, 853, 866, 878], "source_spac": [22, 276, 868, 878], "compute_distance_to_sensor": [22, 868, 878], "source_estim": [22, 27, 36, 56, 269, 274, 619, 625, 744], "surf_ori": [22, 47, 48, 49, 54, 55, 67, 158, 178, 221, 267, 363, 535, 878], "leadfield": [22, 41, 158, 163, 165, 172, 296, 297, 298, 878], "7498": [22, 31, 35, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 58, 59, 60, 67, 89, 91, 92, 93, 94, 130, 172, 175, 177, 178, 179, 181, 195, 221, 222], "combin": [22, 24, 29, 30, 31, 34, 35, 37, 40, 41, 42, 44, 47, 48, 49, 51, 54, 55, 58, 59, 67, 86, 89, 91, 92, 93, 94, 100, 111, 125, 127, 130, 131, 137, 140, 141, 142, 145, 150, 151, 155, 166, 168, 170, 175, 177, 178, 179, 180, 181, 182, 188, 190, 191, 194, 195, 198, 206, 207, 209, 210, 214, 216, 222, 225, 227, 230, 233, 235, 243, 255, 258, 263, 264, 265, 266, 269, 270, 271, 274, 276, 277, 278, 279, 289, 296, 297, 304, 305, 313, 353, 354, 355, 356, 361, 370, 386, 409, 414, 416, 428, 431, 468, 477, 478, 493, 518, 519, 524, 527, 530, 531, 533, 534, 557, 569, 570, 609, 619, 625, 632, 668, 697, 699, 700, 701, 704, 707, 715, 745, 761, 769, 776, 777, 784, 787, 805, 837, 860, 863, 866, 878], "local": [22, 26, 27, 33, 34, 35, 36, 40, 41, 42, 46, 47, 48, 49, 51, 54, 55, 56, 58, 59, 67, 69, 83, 89, 91, 93, 108, 112, 115, 119, 134, 150, 151, 152, 155, 158, 166, 171, 175, 179, 180, 184, 187, 191, 195, 206, 210, 222, 243, 260, 261, 262, 263, 264, 265, 266, 267, 268, 272, 274, 278, 296, 297, 299, 311, 315, 329, 341, 343, 352, 353, 357, 358, 363, 368, 369, 370, 372, 376, 377, 378, 379, 381, 382, 384, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 416, 430, 450, 452, 453, 466, 472, 474, 475, 477, 478, 484, 519, 520, 523, 524, 525, 535, 539, 556, 557, 565, 571, 577, 606, 615, 617, 630, 639, 642, 645, 654, 657, 659, 661, 697, 699, 701, 737, 745, 754, 761, 762, 770, 773, 777, 782, 784, 785, 788, 797, 800, 804, 805, 807, 813, 818, 833, 835, 838, 843, 844, 846, 857, 860, 866, 878], "grad_map": 22, "sensitivity_map": [22, 26, 130, 158, 868], "mag_map": [22, 26], "eeg_map": 22, "204": [22, 34, 72, 75, 92, 112, 130, 146, 158, 166, 167, 168, 169, 172, 183, 184, 195, 198, 199, 200, 205, 206, 208, 209, 214, 215, 216, 217, 222, 230, 239, 878], "gain": [22, 24, 31, 41, 65, 89, 92, 93, 94, 108, 158, 180, 201, 222, 296, 297, 444, 453, 786, 793, 860, 878], "picks_meg": 22, "picks_eeg": 22, "sharex": [22, 45, 72, 89, 112, 194, 206, 240], "dipol": [22, 26, 27, 28, 31, 34, 35, 36, 39, 40, 41, 42, 46, 51, 56, 59, 60, 67, 82, 83, 91, 92, 93, 108, 118, 152, 155, 158, 165, 166, 169, 177, 179, 180, 182, 183, 184, 185, 186, 187, 191, 203, 220, 222, 243, 260, 262, 263, 264, 265, 266, 267, 268, 271, 274, 277, 278, 279, 296, 297, 298, 299, 301, 310, 341, 352, 363, 372, 388, 430, 450, 452, 454, 472, 473, 474, 475, 477, 478, 519, 523, 524, 526, 535, 544, 554, 604, 606, 607, 615, 617, 630, 632, 645, 649, 650, 654, 657, 659, 661, 663, 697, 699, 700, 701, 745, 754, 761, 762, 772, 773, 804, 808, 813, 833, 844, 846, 849, 853, 860, 863, 868, 878], "fontsiz": [22, 37, 111, 119, 126, 144, 176, 209, 804], "fig_2": [22, 172], "hist": [22, 69, 130, 144, 210], "ravel": [22, 110, 112, 116, 130, 194, 201, 226], "brain_sen": 22, "add_text": [22, 43, 47, 48, 49, 50, 54, 55, 175, 177, 179, 745], "font_siz": [22, 43, 47, 48, 49, 50, 54, 55, 175, 177, 179, 745], "02108201": 22, "32186553": 22, "minimum": [22, 31, 57, 69, 77, 82, 136, 140, 149, 151, 162, 166, 168, 177, 179, 180, 200, 201, 206, 221, 233, 243, 258, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 292, 293, 294, 295, 296, 297, 340, 342, 343, 358, 442, 445, 447, 448, 450, 452, 453, 477, 478, 520, 524, 525, 526, 527, 528, 530, 531, 535, 537, 539, 540, 541, 559, 560, 565, 573, 574, 576, 654, 657, 659, 662, 690, 697, 702, 703, 704, 705, 706, 707, 708, 726, 729, 745, 769, 783, 799, 802, 833, 844, 846, 853, 863, 878], "euclidean": [22, 269, 274, 276, 539, 657, 660, 663, 665, 668], "maxdep": 22, "vertno": [22, 43, 48, 49, 50, 158, 175, 178, 221, 233, 234, 235, 274, 276, 277, 863], "depths_map": 22, "brain_dep": 22, "like": [22, 26, 27, 31, 32, 34, 35, 36, 40, 41, 42, 47, 56, 59, 60, 69, 78, 81, 82, 100, 108, 111, 126, 134, 135, 136, 140, 141, 142, 143, 144, 149, 150, 151, 155, 156, 160, 161, 162, 166, 167, 168, 169, 171, 172, 175, 177, 181, 182, 188, 189, 190, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 214, 215, 216, 217, 220, 225, 229, 240, 255, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 287, 300, 301, 302, 303, 306, 307, 308, 311, 312, 320, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 342, 346, 350, 351, 352, 353, 359, 364, 365, 366, 367, 371, 383, 384, 386, 388, 409, 416, 430, 432, 433, 438, 444, 450, 452, 459, 461, 462, 465, 467, 468, 469, 470, 471, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 514, 516, 519, 520, 523, 524, 526, 535, 538, 542, 543, 544, 546, 547, 556, 557, 562, 571, 574, 578, 582, 583, 585, 593, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 635, 636, 643, 645, 646, 648, 649, 650, 651, 660, 661, 662, 663, 666, 674, 678, 680, 683, 684, 685, 686, 687, 688, 692, 693, 695, 696, 697, 698, 699, 700, 701, 713, 717, 718, 719, 723, 730, 732, 733, 737, 739, 742, 745, 753, 761, 762, 763, 769, 773, 775, 777, 779, 781, 783, 784, 785, 788, 792, 795, 797, 798, 799, 800, 801, 803, 805, 807, 808, 809, 818, 819, 820, 821, 822, 823, 824, 825, 826, 828, 829, 830, 831, 832, 833, 835, 836, 837, 838, 840, 841, 842, 843, 844, 845, 853, 855, 857, 859, 860, 863, 878], "corr": [22, 255], "gradiomt": 22, "815476": 22, "sensitivii": 22, "highest": [22, 134, 176, 204, 258, 261, 263, 264, 265, 266, 269, 453, 477, 478, 573, 674, 697, 698, 700, 773, 785, 860], "close": [22, 60, 69, 96, 106, 110, 116, 119, 126, 134, 140, 142, 144, 149, 151, 158, 160, 171, 172, 191, 199, 200, 203, 204, 206, 207, 210, 217, 222, 225, 230, 261, 263, 264, 265, 266, 269, 341, 357, 379, 432, 452, 468, 469, 477, 478, 557, 574, 578, 668, 692, 699, 701, 745, 751, 752, 773, 775, 792, 798, 801, 837, 841, 849, 857, 860, 863, 878], "decreas": [22, 55, 111, 201, 222, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 409, 430, 477, 478, 557, 693, 697, 700, 724, 725, 727, 728, 745, 860, 878], "rapidli": 22, "inreas": 22, "confirm": [22, 47, 69, 171, 190, 200, 204, 837, 860], "134": [22, 25, 69, 169, 171, 229, 230, 243, 276, 522, 565], "forward_sensitivity_map": [22, 25], "coregistr": [23, 27, 80, 156, 160, 161, 163, 164, 165, 181, 261, 268, 273, 276, 303, 307, 365, 371, 387, 428, 469, 482, 516, 520, 582, 636, 665, 692, 734, 745, 761, 813, 851, 853, 866, 868, 878], "displai": [23, 24, 25, 27, 44, 47, 75, 111, 115, 124, 140, 143, 151, 156, 158, 160, 162, 166, 204, 207, 214, 217, 226, 230, 255, 256, 260, 263, 264, 265, 266, 267, 269, 270, 271, 274, 276, 277, 278, 279, 311, 363, 477, 478, 516, 554, 556, 557, 617, 638, 665, 697, 699, 701, 745, 746, 760, 761, 769, 774, 775, 776, 778, 779, 780, 781, 783, 784, 785, 786, 789, 790, 795, 798, 799, 800, 801, 803, 804, 806, 808, 809, 833, 835, 836, 840, 843, 849, 857, 860, 863, 866, 878], "cerebellum": [23, 25, 27, 41, 276, 645, 646, 761, 813], "volum": [23, 25, 27, 31, 36, 44, 56, 59, 70, 134, 135, 136, 155, 156, 158, 160, 166, 172, 176, 180, 209, 243, 255, 260, 261, 265, 267, 268, 270, 271, 274, 275, 276, 277, 278, 279, 302, 308, 311, 359, 443, 454, 462, 463, 472, 474, 475, 512, 520, 523, 524, 534, 535, 536, 538, 606, 615, 625, 628, 637, 645, 646, 669, 672, 689, 692, 733, 734, 735, 745, 761, 803, 808, 809, 813, 818, 831, 833, 852, 853, 860, 866, 878], "morph": [23, 25, 27, 36, 40, 56, 133, 134, 136, 155, 160, 177, 181, 233, 234, 235, 255, 265, 267, 268, 269, 270, 274, 275, 276, 277, 278, 279, 359, 465, 482, 520, 523, 524, 538, 543, 544, 553, 554, 615, 617, 622, 625, 626, 627, 638, 646, 733, 734, 735, 745, 803, 809, 818, 833, 853, 854, 863, 878], "its": [24, 69, 74, 93, 125, 135, 137, 140, 141, 143, 145, 150, 156, 158, 160, 166, 168, 169, 170, 171, 172, 175, 180, 183, 189, 190, 195, 198, 199, 201, 202, 204, 205, 206, 207, 209, 214, 215, 217, 225, 230, 238, 240, 243, 260, 261, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 277, 278, 279, 280, 311, 409, 412, 416, 423, 424, 443, 450, 474, 475, 476, 477, 478, 485, 492, 556, 557, 571, 653, 663, 683, 684, 685, 687, 688, 697, 699, 700, 701, 713, 716, 723, 735, 762, 769, 773, 776, 777, 784, 788, 796, 797, 798, 800, 803, 805, 807, 808, 833, 835, 836, 837, 841, 843, 853, 855, 857, 859, 860, 878], "freesurf": [24, 32, 33, 34, 38, 41, 43, 44, 47, 78, 115, 135, 136, 156, 158, 161, 163, 164, 165, 172, 175, 182, 191, 243, 259, 261, 268, 269, 270, 271, 273, 274, 276, 277, 278, 279, 302, 306, 307, 308, 311, 359, 364, 365, 366, 371, 383, 385, 386, 388, 391, 408, 428, 443, 461, 462, 463, 465, 467, 468, 469, 470, 471, 482, 510, 512, 514, 516, 543, 582, 602, 618, 619, 620, 621, 627, 628, 629, 630, 645, 646, 660, 663, 674, 692, 693, 695, 737, 744, 745, 756, 761, 763, 773, 803, 808, 809, 813, 818, 827, 828, 831, 833, 841, 843, 844, 849, 854, 857, 878], "alan": [24, 243, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 697, 700, 878], "leggitt": [24, 878], "ucsf": 24, "setup_source_spac": [24, 41, 108, 155, 158, 160, 178, 191, 276, 627, 646, 667, 671, 853, 860, 868, 878], "setup_volume_source_spac": [24, 41, 50, 156, 158, 160, 207, 270, 271, 274, 276, 277, 278, 279, 443, 512, 627, 645, 860, 868, 878], "aseg_fnam": 24, "aseg": [24, 41, 135, 176, 181, 261, 270, 271, 274, 277, 278, 279, 443, 461, 462, 512, 646, 745, 833, 878], "mgz": [24, 30, 41, 44, 50, 78, 134, 156, 158, 160, 161, 176, 180, 181, 182, 255, 270, 271, 274, 276, 277, 278, 279, 302, 306, 307, 308, 388, 443, 462, 512, 646, 763, 809, 833, 857, 860, 878], "surf": [24, 26, 41, 80, 108, 117, 135, 155, 156, 157, 158, 159, 160, 161, 172, 176, 181, 221, 225, 255, 261, 269, 274, 276, 278, 279, 306, 459, 460, 510, 515, 544, 605, 628, 660, 663, 694, 731, 745, 763, 773, 821, 853, 854, 860], "add_dist": [24, 41, 108, 158, 255, 645, 667, 671, 860, 878], "lh_surf": 24, "cortex": [24, 26, 31, 37, 41, 43, 52, 53, 54, 55, 58, 60, 93, 108, 115, 125, 134, 135, 145, 151, 158, 166, 178, 181, 190, 194, 204, 210, 222, 243, 270, 271, 274, 276, 277, 278, 279, 386, 415, 589, 602, 663, 745, 803, 808, 833, 853, 854, 860, 863, 878], "volume_label": [24, 41, 270, 271, 274, 276, 277, 278, 279, 443, 512, 646, 878], "lh_cereb": 24, "sphere_unit": [24, 158, 646, 878], "octahedron": [24, 41, 108, 156, 158, 160, 255, 270, 274, 278, 645, 803], "subdivis": [24, 41, 108, 158], "octahedr": [24, 41, 108, 158, 408], "vertex": [24, 26, 41, 48, 49, 50, 82, 89, 108, 156, 157, 158, 160, 161, 175, 177, 180, 181, 221, 222, 225, 235, 269, 270, 271, 274, 275, 276, 277, 278, 279, 281, 296, 297, 443, 465, 467, 510, 533, 534, 543, 557, 619, 620, 631, 632, 637, 663, 664, 665, 670, 673, 674, 689, 692, 693, 694, 744, 745, 860, 863, 878], "lh": [24, 26, 28, 29, 37, 38, 39, 41, 43, 47, 48, 49, 54, 55, 60, 67, 89, 91, 93, 94, 103, 107, 108, 115, 125, 126, 133, 135, 155, 156, 157, 158, 159, 160, 161, 172, 175, 176, 178, 179, 182, 183, 191, 221, 222, 234, 235, 255, 259, 269, 270, 271, 274, 277, 278, 279, 465, 510, 602, 620, 625, 635, 745, 803, 808, 828, 860], "triangl": [24, 26, 41, 52, 108, 156, 157, 158, 160, 161, 175, 178, 221, 269, 276, 408, 631, 666, 670, 673, 694, 860, 863], "neighbor": [24, 26, 41, 108, 142, 156, 157, 158, 161, 199, 221, 225, 227, 240, 321, 328, 340, 451, 500, 582, 667, 668, 669, 671, 672, 677, 684, 685, 687, 688, 694, 859, 860, 878], "geometri": [24, 41, 60, 69, 108, 158, 161, 183, 184, 209, 243, 255, 388, 409, 453, 628, 745, 833, 853, 878], "triangul": [24, 41, 52, 108, 158, 175, 226, 227, 255, 276, 317, 628, 631, 826, 831, 860, 863, 878], "4098": [24, 43, 159, 160, 182, 853], "155407": [24, 26, 41, 43, 52, 158, 160], "156866": [24, 26, 41, 43, 52, 158, 160], "132651": 24, "57769": 24, "50733": 24, "401": [24, 80, 84, 208, 225, 230], "voxel": [24, 41, 44, 50, 134, 156, 158, 160, 207, 225, 243, 273, 276, 278, 279, 359, 690, 691, 735, 745, 763, 809, 818, 860, 878], "neighborhood": [24, 41, 50, 156, 158, 207, 276], "005000": [24, 158], "001000": [24, 41, 50, 158], "556177": 24, "16777216": 24, "nonzero": [24, 210, 860], "coord_fram": [24, 78, 108, 117, 122, 123, 124, 135, 136, 156, 157, 158, 159, 169, 170, 178, 182, 183, 184, 190, 209, 261, 267, 268, 276, 311, 324, 329, 430, 481, 509, 567, 568, 576, 585, 745, 761, 773, 863], "export": [24, 30, 41, 111, 114, 134, 140, 147, 148, 149, 155, 165, 168, 172, 189, 190, 218, 257, 263, 264, 265, 266, 270, 271, 274, 276, 277, 278, 279, 336, 338, 477, 478, 492, 501, 612, 697, 699, 700, 701, 835, 837, 843, 848, 864, 868, 878], "nifti": [24, 30, 41, 155, 276, 278, 279, 878], "nii_fnam": [24, 41], "mne_sample_lh": 24, "nii": [24, 30, 41, 155, 255], "export_volum": [24, 41, 276, 878], "mri_resolut": [24, 30, 41, 44, 275, 276, 278, 279, 443, 878], "And": [24, 42, 54, 69, 108, 134, 160, 179, 181, 190, 195, 201, 206, 210, 276, 522, 532, 687, 688, 837, 853, 860], "freeview": [24, 78, 134, 182, 857, 860, 878], "util": [24, 92, 146, 180, 189, 225, 263, 264, 439, 442, 477, 478, 740, 835, 837, 843, 847, 860, 868, 872, 878], "run_subprocess": 24, "mri_fnam": 24, "lut": [24, 462, 618, 745, 833], "opac": [24, 31, 35, 40, 46, 59, 91, 134, 156, 255, 273, 468, 699, 701, 745, 804, 810, 878], "jet": 24, "colorscal": 24, "slice": [24, 35, 40, 59, 134, 140, 143, 156, 158, 160, 172, 181, 194, 216, 229, 255, 257, 258, 261, 262, 263, 264, 265, 266, 268, 273, 278, 279, 309, 312, 326, 328, 358, 368, 411, 412, 415, 419, 422, 425, 430, 447, 448, 477, 478, 556, 557, 559, 572, 573, 574, 576, 579, 582, 591, 593, 600, 665, 683, 684, 685, 687, 688, 692, 697, 699, 700, 701, 703, 705, 706, 707, 708, 710, 722, 724, 725, 727, 728, 763, 769, 773, 775, 776, 779, 781, 782, 788, 789, 790, 792, 794, 796, 799, 809, 860, 863, 866, 878], "157": [24, 74, 84, 122, 137, 151, 169, 170, 188, 195, 210, 225, 229, 230, 243, 337, 657, 878], "560": [24, 25, 80, 177, 207, 230], "259": [24, 25, 169, 208, 225, 230, 243, 860], "left_cerebellum_volume_sourc": [24, 25], "912": 25, "auto_examples_forward": 25, "source_space_morph": [25, 26], "182": [25, 26, 80, 169, 172, 174, 191, 208, 225, 229, 230], "oppos": [26, 60, 222, 346, 418, 833, 837, 863, 878], "evenli": [26, 207, 209, 265, 266, 358, 585, 782, 860], "caution": [26, 27, 142, 157, 169, 263, 264, 265, 266, 411, 477, 478, 479, 700, 754], "fname_tran": [26, 41, 50, 52, 123, 176, 181, 853], "sample_audvis_raw": [26, 29, 41, 45, 50, 52, 67, 70, 82, 91, 92, 93, 102, 103, 106, 107, 109, 110, 115, 117, 122, 123, 126, 140, 142, 146, 149, 150, 156, 158, 160, 162, 166, 167, 168, 170, 172, 176, 178, 181, 182, 198, 199, 202, 203, 205, 206, 207, 209, 214, 215, 216, 217, 221, 222, 227, 228, 229, 238, 255, 837], "fname_bem": [26, 41, 50, 159, 176, 181, 182], "fname_src_f": 26, "fsaverag": [26, 40, 43, 44, 124, 125, 134, 135, 136, 156, 157, 160, 171, 181, 190, 210, 233, 234, 235, 243, 261, 269, 270, 274, 275, 278, 279, 303, 311, 327, 359, 364, 365, 366, 371, 383, 385, 386, 465, 469, 516, 520, 543, 582, 634, 635, 665, 689, 692, 693, 734, 745, 761, 803, 809, 818, 853, 878], "ico": [26, 40, 43, 136, 158, 159, 161, 191, 233, 234, 235, 255, 270, 274, 278, 281, 408, 514, 645, 669, 672, 803, 853, 863, 878], "read_info": [26, 64, 89, 91, 93, 94, 157, 158, 160, 169, 868], "pick_info": [26, 118, 135, 167, 169, 222, 868, 878], "src_f": [26, 44, 180], "read_source_spac": [26, 40, 43, 44, 135, 136, 156, 159, 160, 180, 233, 234, 235, 276, 830, 868], "src_morph": 26, "morph_source_spac": [26, 274, 277, 868, 878], "subject_to": [26, 40, 43, 44, 134, 233, 235, 255, 269, 275, 278, 279, 359, 543, 544, 622, 634, 635, 636, 637, 809, 818, 853], "return": [26, 31, 34, 67, 68, 74, 83, 91, 92, 93, 98, 102, 107, 108, 109, 112, 113, 114, 116, 120, 137, 140, 141, 144, 146, 149, 150, 151, 160, 161, 166, 167, 168, 169, 171, 178, 188, 204, 205, 206, 207, 209, 214, 216, 220, 222, 225, 226, 229, 235, 238, 239, 240, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 376, 377, 378, 379, 381, 382, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 638, 639, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 738, 739, 743, 744, 745, 746, 747, 748, 749, 750, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 814, 815, 818, 819, 830, 831, 832, 855, 859, 860, 863, 878], "mag_map_f": 26, "to_original_src": [26, 274, 277, 878], "track": [26, 112, 142, 149, 166, 169, 191, 199, 202, 215, 216, 220, 557, 855, 866, 878], "sulcal": [26, 160, 745], "gyral": [26, 160, 745], "outlier": [26, 69, 157, 428, 557, 791], "mai": [26, 69, 73, 75, 82, 102, 134, 135, 140, 141, 143, 144, 146, 149, 150, 151, 156, 158, 161, 166, 168, 170, 172, 188, 189, 190, 194, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 214, 215, 216, 217, 220, 222, 227, 230, 233, 243, 258, 260, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 274, 277, 278, 279, 298, 317, 328, 329, 334, 352, 364, 408, 409, 411, 416, 418, 422, 428, 433, 439, 440, 441, 442, 443, 448, 459, 461, 468, 477, 478, 485, 492, 493, 497, 519, 524, 544, 556, 557, 559, 571, 573, 574, 576, 578, 585, 586, 603, 605, 607, 609, 615, 634, 636, 679, 683, 684, 685, 687, 688, 690, 692, 697, 699, 700, 701, 722, 724, 725, 726, 727, 728, 729, 745, 761, 762, 768, 775, 777, 779, 780, 782, 784, 788, 792, 797, 798, 800, 805, 807, 826, 835, 837, 838, 840, 841, 843, 844, 845, 852, 853, 855, 857, 859, 860, 863, 866, 878], "occur": [26, 44, 47, 69, 74, 89, 93, 94, 134, 140, 143, 144, 151, 161, 168, 200, 201, 206, 214, 227, 228, 256, 258, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 281, 296, 297, 353, 357, 358, 368, 369, 370, 409, 416, 432, 433, 435, 451, 452, 453, 472, 474, 475, 477, 478, 505, 535, 573, 574, 647, 697, 700, 775, 785, 798, 837, 838, 843, 853, 859, 860, 878], "kwarg": [26, 58, 108, 111, 115, 122, 141, 179, 180, 194, 201, 221, 239, 263, 264, 265, 266, 268, 273, 276, 412, 419, 477, 478, 483, 546, 697, 745, 746, 767, 782, 801, 804, 837], "smooth": [26, 38, 43, 59, 70, 82, 113, 133, 134, 135, 142, 151, 156, 166, 181, 194, 206, 225, 226, 233, 234, 235, 243, 263, 264, 265, 266, 269, 270, 271, 274, 275, 277, 278, 279, 359, 477, 478, 557, 566, 684, 685, 687, 688, 693, 713, 715, 723, 724, 725, 727, 728, 745, 754, 776, 803, 806, 808, 810, 811, 814, 856, 878], "smoothing_step": [26, 41, 42, 43, 55, 59, 60, 103, 108, 115, 130, 136, 175, 177, 179, 181, 221, 233, 270, 271, 274, 277, 278, 279, 745, 803, 808], "almost": [26, 113, 140, 168, 837, 860], "equidist": [26, 273], "unevenli": [26, 519], "achiev": [26, 43, 44, 111, 126, 142, 144, 146, 160, 161, 180, 201, 210, 216, 222, 265, 266, 353, 362, 510, 532, 557, 583, 602, 649, 650, 651, 660, 661, 663, 684, 685, 686, 687, 688, 785, 857, 860, 864, 866, 878], "closest": [26, 144, 157, 158, 214, 240, 258, 263, 264, 265, 266, 269, 276, 477, 478, 693, 699, 701, 745, 763, 777, 860, 878], "approxim": [26, 134, 170, 204, 214, 225, 243, 255, 260, 263, 264, 265, 266, 270, 271, 272, 274, 277, 278, 279, 311, 409, 416, 430, 445, 446, 448, 460, 477, 478, 556, 557, 568, 571, 576, 585, 645, 697, 699, 701, 709, 762, 769, 770, 777, 779, 781, 784, 785, 788, 795, 797, 799, 800, 801, 805, 807, 833, 860, 878], "brain_subject": 26, "time_label": [26, 33, 34, 59, 60, 108, 123, 130, 222, 233, 234, 235, 265, 266, 270, 271, 274, 277, 278, 279, 745, 780, 803, 808], "brain_f": 26, "remap": [26, 27, 76, 84, 265, 266, 615, 878], "destin": [26, 43, 44, 79, 155, 160, 257, 260, 261, 263, 264, 265, 266, 270, 271, 273, 274, 275, 276, 277, 278, 279, 287, 307, 308, 311, 312, 359, 371, 408, 430, 439, 440, 441, 442, 477, 478, 509, 542, 544, 556, 557, 576, 585, 634, 635, 637, 697, 698, 699, 700, 701, 730, 731, 787, 820, 821, 822, 823, 824, 825, 826, 829, 830, 831, 832, 863, 878], "sourcespac": [26, 41, 43, 45, 50, 108, 158, 159, 160, 176, 207, 267, 269, 270, 271, 274, 277, 278, 279, 281, 359, 443, 463, 473, 511, 512, 520, 533, 534, 539, 544, 627, 645, 646, 647, 654, 657, 659, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 689, 692, 693, 745, 761, 763, 803, 808, 809, 830, 833, 860, 868, 878], "n_vertic": [26, 41, 43, 53, 108, 158, 159, 160, 259, 269, 270, 271, 274, 277, 278, 279, 453, 539, 628, 631, 665, 684, 685, 687, 688, 695, 744, 745, 826, 831], "n_use": [26, 41, 43, 45, 50, 108, 158, 159, 160, 176, 207], "10242": [26, 43, 159, 233, 234, 235, 269, 281, 465, 689, 853], "coord": [26, 41, 43, 45, 50, 108, 124, 158, 159, 160, 161, 176, 207, 341, 452, 745, 746, 815, 831], "conductor": [26, 41, 45, 50, 108, 156, 158, 159, 176, 182, 303, 452, 521, 646, 761, 833, 860, 878], "20484": [26, 136, 159, 161, 233, 234, 255, 514], "999310": [26, 41, 50, 158, 176, 181, 182], "009985": [26, 41, 50, 158, 176, 181, 182], "035787": [26, 41, 50, 158, 176, 181, 182], "012759": [26, 41, 50, 158, 176, 181, 182], "812405": [26, 41, 50, 158, 176, 181], "582954": [26, 41, 50, 158, 176, 181], "034894": [26, 41, 50, 158, 176, 181, 182], "583008": [26, 41, 50, 158, 176, 181], "811716": [26, 41, 50, 158, 176, 181, 182], "991420": [26, 41, 45, 50, 158, 176, 181], "039936": [26, 41, 45, 50, 158, 176, 181], "124467": [26, 41, 45, 50, 158, 176, 181], "060661": [26, 41, 45, 50, 158, 176, 181], "984012": [26, 41, 45, 50, 158, 176, 181], "167456": [26, 41, 45, 50, 158, 176, 181], "115790": [26, 41, 45, 50, 158, 176, 181], "173570": [26, 41, 45, 50, 158, 176, 181], "977991": [26, 41, 45, 50, 158, 176, 181], "homogen": [26, 41, 50, 108, 158, 176, 207, 860, 863, 878], "2154": 26, "8088": 26, "8079": 26, "10233": [26, 878], "4426": 26, "2113": [26, 169], "8129": 26, "8125": 26, "10237": 26, "4665": 26, "20470": 26, "00205101": 26, "08784125": 26, "17433707": 26, "work": [27, 31, 67, 69, 74, 77, 82, 86, 132, 134, 137, 138, 139, 140, 144, 147, 148, 149, 150, 151, 155, 156, 160, 161, 166, 167, 168, 169, 173, 174, 175, 177, 178, 181, 184, 188, 190, 192, 193, 195, 198, 200, 202, 203, 204, 205, 206, 209, 210, 214, 216, 217, 219, 220, 222, 227, 230, 233, 235, 238, 239, 240, 243, 250, 254, 257, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 308, 311, 312, 315, 317, 322, 325, 327, 331, 337, 346, 352, 354, 358, 359, 360, 362, 365, 370, 381, 384, 387, 409, 410, 412, 413, 415, 416, 417, 418, 419, 421, 422, 423, 432, 436, 438, 443, 444, 449, 450, 461, 469, 472, 474, 475, 477, 478, 483, 487, 490, 512, 514, 515, 518, 520, 522, 523, 524, 525, 526, 527, 528, 530, 531, 535, 541, 548, 552, 553, 554, 556, 557, 558, 570, 585, 599, 608, 612, 617, 623, 627, 628, 629, 630, 645, 646, 674, 692, 697, 699, 700, 701, 745, 746, 748, 761, 767, 769, 775, 777, 778, 783, 784, 788, 792, 797, 798, 800, 805, 811, 813, 815, 818, 823, 833, 836, 837, 838, 842, 843, 844, 854, 855, 859, 860, 861, 863, 866, 878], "variou": [27, 62, 100, 119, 120, 135, 141, 150, 155, 165, 169, 170, 177, 178, 186, 187, 188, 189, 192, 198, 201, 202, 204, 206, 212, 214, 216, 222, 225, 226, 260, 265, 268, 274, 329, 523, 524, 535, 557, 585, 606, 615, 617, 745, 767, 853, 857, 859, 860, 861, 863, 867, 878], "often": [27, 69, 73, 74, 82, 134, 140, 142, 150, 166, 168, 169, 175, 178, 180, 188, 190, 195, 199, 201, 202, 205, 207, 209, 215, 216, 227, 240, 265, 266, 270, 271, 274, 277, 278, 279, 296, 297, 353, 357, 358, 368, 369, 370, 409, 416, 452, 453, 472, 474, 475, 535, 586, 745, 785, 803, 808, 833, 837, 841, 842, 853, 857, 859, 860, 861, 878], "lack": [27, 69, 190, 260, 272, 287, 301, 523, 586, 732, 861], "narr": [27, 165, 833, 861], "explan": [27, 72, 142, 155, 165, 229, 699, 861, 865, 878], "discov": [27, 855, 861, 878], "ve": [27, 114, 140, 149, 151, 156, 160, 171, 198, 200, 204, 206, 214, 215, 217, 240, 815, 837, 855, 857, 861], "flag": [27, 134, 165, 167, 255, 263, 264, 268, 270, 271, 274, 277, 278, 279, 308, 477, 478, 514, 764, 798, 803, 808, 809, 837, 853, 857, 878], "tutorial_script": [27, 165], "them": [27, 47, 50, 69, 73, 78, 114, 126, 133, 134, 135, 137, 140, 141, 142, 144, 145, 149, 150, 151, 156, 160, 161, 165, 166, 168, 170, 171, 172, 191, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 210, 214, 215, 216, 222, 225, 226, 233, 235, 240, 255, 257, 263, 264, 265, 266, 269, 290, 291, 294, 358, 361, 366, 412, 413, 427, 488, 489, 518, 519, 526, 528, 531, 552, 556, 557, 575, 586, 593, 607, 612, 651, 661, 674, 701, 740, 791, 833, 835, 837, 845, 853, 854, 855, 859, 860, 863, 866, 878], "shortcut": [27, 217, 735, 745, 878], "intention": [27, 208], "record": [27, 62, 65, 69, 73, 82, 83, 108, 134, 137, 140, 144, 146, 151, 156, 162, 166, 168, 169, 170, 172, 175, 184, 186, 188, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 211, 214, 215, 216, 220, 222, 225, 240, 243, 257, 258, 263, 264, 265, 266, 268, 273, 280, 319, 346, 353, 358, 362, 401, 432, 441, 477, 478, 486, 490, 497, 500, 505, 506, 518, 557, 559, 560, 561, 565, 567, 568, 576, 585, 586, 593, 599, 615, 642, 683, 697, 699, 700, 701, 778, 792, 798, 833, 844, 849, 853, 854, 855, 857, 860, 863, 866, 878], "past": [27, 151, 201, 421, 647, 841, 857, 859, 863], "recip": [27, 62, 837], "write": [27, 29, 41, 62, 66, 107, 109, 140, 160, 161, 170, 171, 172, 177, 189, 202, 214, 235, 238, 255, 257, 260, 261, 265, 266, 268, 269, 270, 271, 273, 276, 277, 279, 287, 306, 351, 450, 482, 509, 542, 556, 601, 606, 696, 730, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 837, 840, 841, 853, 855, 857, 860, 866, 878], "manipul": [27, 62, 140, 149, 165, 218, 362, 476, 477, 478, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 517, 854, 860, 867, 878], "ensembl": [27, 62, 66, 137, 268, 372, 478], "neo": [27, 62, 66, 188, 268, 372, 478, 878], "xdf": [27, 62, 66, 268, 372, 478], "anatomi": [27, 88, 90, 156, 175, 260, 263, 265, 266, 267, 268, 269, 274, 276, 307, 478, 482, 523, 524, 535, 606, 612, 617, 620, 647, 649, 650, 651, 662, 745, 833, 854, 878], "css": [27, 76, 84, 172, 243, 260, 266, 267, 268, 269, 273, 274, 363, 477, 554, 555, 572, 606, 617, 620, 661, 663, 878], "bridg": [27, 76, 84, 243, 268, 311, 327, 372, 478, 483, 565, 584, 765, 807, 878], "much": [27, 44, 55, 73, 76, 82, 84, 134, 137, 140, 141, 142, 144, 149, 161, 165, 166, 170, 183, 191, 195, 201, 203, 204, 205, 206, 207, 208, 211, 214, 222, 240, 243, 263, 264, 265, 266, 268, 270, 271, 274, 277, 278, 279, 311, 327, 372, 433, 444, 448, 449, 477, 478, 483, 565, 584, 638, 765, 807, 837, 840, 841, 860, 866, 878], "gel": [27, 76, 84, 268, 311, 327, 372, 478, 483, 565, 584, 765, 807, 878], "densiti": [27, 32, 33, 34, 67, 74, 76, 77, 84, 104, 105, 118, 132, 134, 137, 142, 160, 161, 166, 172, 190, 195, 199, 200, 208, 222, 239, 243, 260, 263, 264, 265, 266, 268, 269, 274, 289, 296, 325, 358, 370, 414, 450, 477, 478, 515, 520, 523, 530, 531, 535, 538, 554, 557, 565, 566, 587, 588, 592, 604, 612, 619, 645, 698, 699, 701, 702, 703, 704, 705, 706, 707, 708, 714, 715, 716, 739, 745, 761, 771, 777, 799, 813, 833, 854, 860, 863, 878], "csd": [27, 32, 33, 34, 76, 84, 104, 105, 169, 222, 263, 264, 265, 266, 268, 289, 296, 310, 325, 329, 370, 450, 477, 478, 554, 566, 612, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 714, 717, 771, 833, 878], "nir": [27, 76, 84, 171, 210, 257, 268, 478, 505, 834, 844, 860, 867, 868, 878], "intracrani": [27, 76, 84, 135, 138, 139, 165, 243, 268, 311, 315, 324, 365, 366, 461, 469, 477, 478, 483, 582, 733, 734, 735, 745, 810, 818, 853, 854, 866, 867, 878], "contact": [27, 76, 84, 135, 138, 139, 165, 198, 268, 311, 315, 324, 331, 365, 366, 469, 477, 483, 582, 733, 734, 735, 745, 810, 818, 837, 854, 878], "maxwel": [27, 76, 83, 84, 165, 166, 184, 198, 212, 213, 263, 265, 266, 268, 296, 297, 341, 343, 346, 347, 350, 353, 357, 358, 368, 369, 370, 409, 416, 430, 450, 452, 453, 472, 474, 475, 477, 478, 535, 568, 576, 585, 586, 785, 787, 878], "movement": [27, 73, 74, 76, 82, 84, 111, 137, 165, 198, 204, 205, 206, 212, 213, 216, 217, 243, 255, 257, 263, 265, 266, 268, 340, 341, 342, 343, 344, 346, 348, 350, 351, 362, 430, 450, 468, 477, 490, 561, 564, 576, 585, 650, 662, 761, 768, 780, 787, 813, 833, 854, 878], "reestim": [27, 76, 84, 257, 268, 343, 344, 362, 490, 561, 564, 567, 761, 787, 813, 878], "dev_head_t": [27, 76, 79, 84, 156, 166, 169, 214, 257, 268, 314, 343, 344, 362, 372, 490, 561, 564, 568, 576, 585, 648, 649, 650, 662, 761, 787, 813, 863, 878], "muscl": [27, 76, 84, 144, 204, 243, 257, 311, 327, 490, 492, 557, 562, 878], "denois": [27, 76, 84, 195, 260, 263, 265, 266, 268, 353, 358, 417, 429, 450, 452, 477, 521, 554, 558, 568, 593, 612, 776, 878], "oversampl": [27, 76, 84, 243, 263, 265, 266, 353, 429, 450, 452, 477, 521, 593], "shift": [27, 74, 76, 84, 134, 140, 166, 194, 198, 201, 202, 207, 217, 243, 258, 261, 262, 263, 264, 265, 266, 268, 270, 271, 274, 277, 278, 279, 415, 437, 477, 478, 485, 492, 548, 557, 559, 582, 592, 615, 697, 700, 709, 745, 786, 798, 809, 878], "2d": [27, 31, 35, 40, 59, 95, 96, 118, 121, 129, 151, 172, 190, 195, 199, 202, 204, 205, 206, 207, 225, 230, 263, 264, 265, 266, 268, 270, 271, 274, 277, 278, 279, 311, 312, 317, 320, 328, 337, 365, 417, 420, 424, 426, 447, 448, 477, 478, 489, 497, 507, 512, 557, 682, 684, 685, 745, 746, 757, 761, 762, 766, 783, 804, 806, 807, 813, 814, 815, 817, 833, 841, 854, 878], "arrowmap": [27, 121, 129, 265, 268, 490, 553, 554, 615, 762, 878], "layout": [27, 47, 99, 114, 121, 129, 131, 132, 142, 144, 150, 151, 159, 189, 211, 227, 263, 264, 265, 266, 268, 272, 318, 320, 322, 325, 326, 327, 337, 372, 477, 478, 484, 488, 490, 500, 501, 521, 697, 699, 701, 746, 750, 758, 761, 769, 783, 794, 797, 806, 812, 813, 833, 860, 868, 878], "parcel": [27, 38, 41, 67, 89, 93, 94, 121, 129, 135, 155, 176, 181, 221, 243, 269, 383, 385, 386, 461, 602, 620, 745, 756, 828, 833, 878], "roi": [27, 38, 121, 129, 151, 155, 199, 226, 243, 261, 263, 265, 266, 268, 323, 435, 438, 493, 524, 745, 781, 833, 860, 863, 878], "rt": [27, 121, 129, 168, 263, 268, 323, 435, 438, 493], "room": [27, 121, 126, 129, 142, 151, 162, 172, 184, 191, 202, 204, 205, 207, 209, 210, 211, 215, 243, 274, 353, 358, 477, 567, 568, 576, 585, 586, 768, 833, 853, 860, 878], "lock": [27, 104, 105, 140, 156, 162, 168, 203, 206, 229, 240, 243, 258, 263, 268, 269, 433, 450, 477, 523, 538, 541, 554, 557, 619, 792, 857], "vectorview": [27, 61, 104, 105, 118, 170, 183, 256, 260, 265, 266, 268, 274, 312, 318, 319, 333, 337, 358, 388, 429, 430, 477, 515, 520, 530, 535, 568, 576, 585, 604, 645, 739, 745, 761, 813, 833, 849, 854, 860], "induc": [27, 104, 105, 106, 162, 166, 227, 228, 229, 240, 243, 263, 264, 268, 274, 450, 477, 523, 538, 540, 541, 554, 697, 700, 713, 723, 724, 727, 857, 878], "erd": [27, 104, 105, 239, 243, 260, 263, 264, 265, 266, 272, 362, 409, 416, 438, 477, 478, 492, 556, 557, 684, 697, 699, 700, 701, 728, 762, 777, 784, 788, 797, 800, 805, 807, 854, 878], "multitap": [27, 73, 82, 102, 104, 105, 108, 137, 142, 143, 166, 172, 195, 204, 230, 238, 239, 243, 263, 264, 265, 266, 268, 286, 372, 422, 448, 477, 478, 530, 697, 699, 700, 701, 704, 707, 724, 725, 726, 727, 728, 729, 749, 866, 878], "morlet": [27, 32, 102, 104, 105, 112, 166, 201, 229, 230, 243, 263, 268, 286, 372, 422, 478, 697, 700, 703, 706, 711, 722, 724, 727, 728, 729, 749, 868, 876, 878], "stockwel": [27, 104, 105, 230, 243, 263, 268, 286, 372, 478, 697, 700, 724, 726, 727, 728, 729, 749, 878], "hilbert": [27, 81, 104, 105, 112, 167, 230, 263, 264, 265, 266, 268, 286, 372, 477, 478, 697, 700, 724, 727, 728, 729, 749, 878], "permut": [27, 97, 101, 111, 165, 225, 226, 227, 228, 231, 232, 235, 236, 237, 243, 263, 265, 266, 268, 274, 275, 276, 317, 359, 432, 477, 523, 524, 538, 548, 554, 612, 625, 627, 669, 677, 684, 685, 686, 687, 688, 689, 700, 727, 745, 766, 769, 866, 878], "1d": [27, 97, 101, 116, 209, 263, 268, 282, 286, 474, 475, 477, 512, 554, 568, 576, 585, 594, 612, 684, 685, 687, 688, 749, 786], "fdr": [27, 97, 100, 101, 263, 268, 477, 554, 612, 675, 681, 878], "rer": [27, 97, 101, 263, 265, 266, 268, 352, 450, 477, 554, 683], "p": [27, 47, 51, 58, 95, 96, 97, 99, 100, 101, 111, 134, 156, 160, 172, 188, 201, 222, 225, 226, 227, 229, 230, 233, 234, 235, 240, 243, 255, 261, 262, 263, 264, 265, 266, 268, 270, 271, 274, 277, 278, 279, 352, 448, 450, 472, 477, 478, 535, 554, 557, 568, 654, 657, 659, 675, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 690, 691, 697, 700, 763, 776, 837, 853, 857, 860, 878], "sloreta": [27, 28, 30, 31, 36, 38, 39, 41, 48, 50, 56, 59, 89, 103, 165, 166, 175, 178, 179, 181, 186, 187, 221, 233, 235, 243, 260, 263, 265, 266, 268, 269, 270, 271, 274, 277, 278, 279, 353, 450, 477, 523, 524, 525, 526, 527, 528, 530, 531, 535, 536, 537, 538, 540, 541, 617, 619, 745, 770, 833, 878], "timecours": [27, 33, 36, 42, 56, 260, 261, 263, 265, 266, 267, 268, 274, 278, 287, 291, 296, 301, 450, 452, 477, 519, 523, 524, 526, 535, 604, 606, 607, 617, 632, 698, 700, 708, 727, 745], "dic": [27, 31, 36, 56, 102, 165, 180, 223, 224, 243, 260, 263, 267, 268, 274, 287, 288, 289, 290, 291, 293, 296, 297, 353, 357, 450, 477, 478, 483, 513, 523, 524, 525, 535, 548, 553, 554, 617, 632, 651, 662, 698, 700, 706, 708, 727, 745, 770, 833, 844, 854, 878], "beamform": [27, 36, 51, 56, 102, 165, 166, 186, 187, 222, 243, 260, 263, 265, 266, 267, 268, 274, 275, 276, 278, 279, 353, 357, 359, 363, 370, 450, 452, 477, 525, 533, 535, 554, 606, 617, 627, 698, 700, 706, 708, 727, 745, 770, 833, 846, 854, 868, 878], "er": [27, 32, 33, 36, 56, 111, 239, 243, 260, 263, 264, 267, 268, 274, 289, 293, 296, 297, 353, 357, 450, 477, 525, 535, 554, 617, 683, 706, 745, 770, 776, 854, 878], "lcmv": [27, 31, 36, 56, 165, 175, 186, 187, 260, 263, 265, 266, 267, 268, 274, 275, 276, 278, 279, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 353, 357, 359, 363, 370, 450, 453, 477, 525, 533, 535, 554, 606, 617, 627, 706, 745, 770, 833, 878], "spars": [27, 36, 44, 46, 56, 118, 175, 225, 230, 233, 235, 243, 255, 260, 261, 265, 267, 268, 274, 275, 276, 307, 317, 328, 359, 370, 372, 453, 472, 473, 474, 475, 523, 524, 535, 606, 615, 617, 627, 663, 677, 683, 684, 685, 687, 688, 745, 772, 773, 804, 837, 844, 846, 860, 863, 878], "gamma": [27, 36, 56, 111, 112, 116, 243, 260, 263, 264, 265, 266, 267, 268, 274, 370, 472, 473, 477, 478, 532, 606, 615, 617, 699, 701, 713, 723, 724, 727, 772, 773, 777, 804, 860, 863, 878], "bayesian": [27, 36, 56, 243, 260, 265, 267, 268, 274, 353, 370, 472, 473, 606, 615, 617, 772, 773, 804, 844, 860], "mix": [27, 36, 56, 59, 102, 195, 204, 240, 243, 260, 261, 265, 267, 268, 270, 271, 274, 275, 276, 277, 278, 279, 296, 297, 359, 443, 454, 472, 473, 474, 475, 512, 520, 523, 524, 535, 557, 583, 606, 615, 617, 620, 625, 627, 645, 646, 652, 653, 654, 655, 656, 657, 658, 659, 689, 692, 745, 772, 773, 788, 803, 804, 808, 866, 878], "norm": [27, 31, 36, 47, 48, 49, 50, 56, 57, 59, 77, 83, 115, 149, 156, 162, 166, 177, 179, 185, 206, 221, 222, 243, 260, 261, 263, 264, 265, 266, 267, 268, 274, 275, 276, 359, 453, 472, 473, 474, 475, 477, 478, 523, 524, 525, 526, 527, 528, 530, 531, 533, 534, 535, 537, 539, 540, 541, 606, 615, 617, 627, 654, 657, 659, 709, 772, 773, 802, 804, 833, 844, 846, 853, 863, 878], "mxne": [27, 31, 36, 56, 175, 260, 261, 263, 265, 266, 267, 268, 274, 275, 276, 353, 359, 450, 473, 474, 475, 523, 524, 535, 606, 615, 617, 627, 745, 772, 773, 804, 833, 878], "irmxn": [27, 36, 56, 260, 261, 265, 267, 268, 274, 275, 276, 359, 473, 474, 523, 524, 535, 606, 615, 617, 627, 772, 773, 804], "volumetr": [27, 36, 50, 56, 135, 158, 160, 175, 177, 181, 265, 270, 271, 274, 275, 276, 277, 278, 279, 359, 512, 523, 524, 538, 615, 626, 627, 745, 803, 808, 809, 811, 818, 833, 866, 878], "xfit": [27, 36, 56, 260, 261, 263, 265, 266, 267, 268, 278, 301, 450, 452, 477, 519, 523, 524, 526, 535, 604, 606, 607, 632, 878], "reweight": [27, 36, 40, 56, 243, 260, 263, 265, 266, 267, 274, 353, 450, 473, 474, 475, 617, 804], "tf": [27, 31, 36, 56, 59, 201, 260, 263, 265, 266, 267, 274, 353, 450, 473, 475, 617, 804, 878], "multiscal": [27, 36, 56, 260, 263, 265, 266, 267, 274, 353, 450, 473, 475, 617, 804], "circular": [27, 36, 56, 151, 221, 274, 276, 363, 467, 534, 536, 538, 617, 620, 745, 750, 844, 860, 878], "graph": [27, 36, 56, 116, 243, 274, 276, 363, 534, 536, 538, 617, 620, 667, 668, 669, 670, 671, 672, 673, 745, 750, 878], "spread": [27, 36, 42, 54, 55, 56, 70, 80, 82, 83, 112, 165, 168, 201, 206, 207, 209, 223, 224, 243, 260, 263, 265, 266, 267, 268, 269, 274, 276, 278, 353, 363, 450, 477, 520, 523, 524, 525, 533, 534, 535, 536, 538, 539, 565, 585, 606, 615, 617, 620, 646, 659, 661, 664, 745, 837, 860, 878], "psf": [27, 36, 54, 55, 56, 260, 265, 267, 268, 274, 276, 278, 363, 520, 523, 533, 534, 535, 536, 539, 606, 615, 617, 646, 745, 878], "talk": [27, 36, 56, 160, 201, 209, 227, 260, 263, 265, 267, 268, 274, 287, 297, 298, 353, 363, 370, 430, 450, 523, 533, 534, 535, 536, 539, 554, 567, 576, 585, 606, 615, 617, 745, 833, 859, 878], "rap": [27, 36, 56, 243, 260, 265, 267, 299, 606, 615, 617, 772, 773, 878], "music": [27, 36, 56, 204, 243, 260, 265, 267, 299, 606, 615, 617, 772, 773, 878], "resolut": [27, 30, 36, 44, 47, 48, 50, 56, 78, 113, 119, 134, 146, 156, 157, 158, 176, 211, 227, 228, 243, 256, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 298, 359, 363, 409, 416, 443, 465, 468, 477, 478, 523, 524, 533, 534, 535, 536, 539, 555, 556, 557, 606, 615, 617, 697, 699, 701, 713, 723, 724, 725, 726, 727, 728, 729, 745, 762, 777, 784, 788, 797, 800, 803, 805, 807, 808, 833, 844, 853, 859, 860, 878], "auto_examples_python": 27, "auto_examples_jupyt": 27, "fname_raw": [28, 29, 61, 102, 103, 126, 157, 182, 208], "fname_ev": [28, 93, 102, 103], "label_nam": [28, 29, 47, 91, 93, 103, 106, 181, 221, 462], "fname_label": [28, 29, 103, 106, 107], "assumpt": [28, 108, 120, 140, 141, 144, 152, 162, 201, 205, 209, 225, 265, 266, 593, 679, 785, 857, 860, 878], "read_label": [28, 29, 37, 39, 91, 103, 106, 107, 274, 277, 647, 868], "add": [28, 37, 43, 44, 69, 73, 89, 93, 94, 100, 113, 119, 125, 126, 134, 136, 140, 141, 143, 144, 151, 161, 168, 171, 172, 175, 176, 181, 189, 191, 194, 198, 199, 200, 202, 204, 205, 207, 214, 216, 221, 222, 225, 230, 240, 255, 257, 259, 260, 263, 264, 265, 266, 269, 270, 271, 272, 273, 274, 277, 278, 279, 280, 281, 311, 371, 409, 411, 416, 420, 433, 445, 447, 448, 468, 477, 478, 556, 557, 567, 569, 570, 571, 605, 627, 636, 639, 644, 645, 647, 648, 649, 650, 651, 661, 694, 697, 699, 700, 701, 740, 745, 748, 762, 765, 766, 775, 777, 782, 784, 788, 797, 800, 805, 807, 814, 833, 835, 837, 840, 843, 844, 863, 878], "053": [28, 49, 68, 72, 91, 92, 103, 106, 107, 109, 110, 116, 151, 162, 166, 167, 168, 169, 177, 198, 199, 200, 205, 206, 207, 209, 214, 215, 216, 217, 222, 227, 228], "sqrt": [28, 116, 183, 184, 221, 222, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 562, 583, 713, 723, 727, 799, 860], "mean_stc": 28, "flip": [28, 38, 39, 114, 161, 204, 225, 255, 270, 271, 274, 277, 278, 279, 302, 443, 511, 684, 815, 860, 878], "cancel": [28, 80, 180, 201, 209, 270, 271, 274, 277, 278, 279, 430, 443, 557, 585, 789, 853, 860, 863], "label_sign_flip": [28, 868, 878], "label_mean": 28, "label_mean_flip": 28, "stc_evok": 28, "sub": [28, 32, 33, 34, 41, 46, 65, 69, 82, 112, 146, 155, 170, 211, 239, 240, 263, 264, 265, 266, 268, 436, 477, 478, 583, 646, 698, 745, 771, 849, 857, 860, 878], "stc_evoked_label": 28, "in_label": [28, 37, 38, 39, 274, 277, 278, 279, 878], "care": [28, 34, 141, 150, 151, 160, 201, 204, 205, 214, 216, 370, 475, 683, 860, 878], "polar": [28, 47, 142, 206, 767], "label_mean_evok": 28, "1711": [28, 34, 45, 106, 120, 131, 142, 145, 146, 152, 166, 169, 177, 180, 194, 200, 222, 230, 233, 235], "benefit": [28, 45, 46, 55, 59, 70, 125, 172, 190, 243, 539, 566, 657, 853, 859], "1e3": [28, 29, 38, 39, 41, 68, 71, 96, 112, 137, 149, 151, 156, 157, 177, 185, 221, 227, 228, 229, 235], "h0": [28, 95, 99, 225, 226, 227, 228, 229, 233, 234, 235, 684, 685, 686, 687, 688], "h1": [28, 95, 111, 225, 226, 227, 228, 229, 230, 233, 234, 235], "linewidth": [28, 39, 96, 111, 112, 136, 150, 160, 205, 225, 260, 263, 264, 265, 266, 409, 416, 477, 478, 556, 697, 699, 701, 745, 762, 769, 777, 784, 800, 801, 804, 805, 807], "h2": 28, "unflip": 28, "pool": [28, 140, 149, 151, 166, 215, 296, 297, 472, 474, 475, 524, 525, 526, 527, 528, 530, 531, 541, 866], "stc_trial": 28, "_nolegend_": 28, "585": [28, 56, 243], "compute_mne_inverse_epochs_in_label": [28, 56], "apply_inverse_raw": [29, 524, 525, 526, 528, 868, 878], "smaller": [29, 41, 74, 103, 126, 142, 149, 158, 201, 206, 209, 225, 226, 240, 258, 263, 264, 270, 271, 274, 277, 278, 279, 475, 559, 573, 576, 583, 684, 685, 687, 688, 712, 720, 745, 803, 808, 853, 860, 878], "time_as_index": [29, 40, 83, 140, 149, 175, 214, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 697, 700, 878], "mne_": [29, 30, 863], "s_raw_inverse_": 29, "overwrit": [29, 41, 103, 107, 109, 140, 161, 172, 191, 216, 255, 257, 260, 261, 263, 264, 265, 266, 270, 271, 273, 274, 275, 276, 277, 278, 279, 287, 306, 307, 308, 311, 312, 439, 440, 441, 442, 477, 478, 509, 542, 556, 557, 566, 635, 636, 639, 643, 697, 698, 699, 700, 701, 730, 820, 821, 822, 823, 824, 825, 826, 828, 829, 830, 831, 832, 878], "25800": [29, 45, 67, 70, 79, 82, 91, 92, 102, 103, 106, 109, 110, 117, 122, 126, 146, 156, 162, 167, 168, 172, 182, 198, 202, 203, 205, 206, 207, 214, 217, 221, 222, 227, 228, 229], "192599": [29, 45, 67, 70, 82, 91, 92, 102, 103, 106, 109, 110, 117, 122, 126, 146, 156, 162, 167, 168, 172, 182, 198, 202, 203, 205, 206, 214, 217, 221, 222, 227, 228, 229], "670": [29, 45, 67, 70, 80, 82, 91, 92, 102, 103, 106, 109, 110, 117, 122, 126, 146, 156, 162, 167, 168, 172, 182, 198, 202, 203, 205, 206, 208, 214, 217, 221, 222, 227, 228, 229], "592": [29, 56, 194, 208, 230], "compute_mne_inverse_raw_in_label": [29, 56], "nilearn": [30, 41, 44, 134, 171, 176, 181, 182, 278, 279, 809], "plot_stat_map": 30, "index_img": 30, "read_evok": [30, 31, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 77, 85, 86, 115, 118, 119, 123, 126, 149, 150, 172, 176, 178, 179, 181, 263, 264, 265, 266, 273, 477, 478, 824, 857, 868, 878], "vol": [30, 44, 50, 135, 160, 176, 180, 181, 261, 263, 264, 265, 266, 276, 299, 430, 625, 652, 653, 654, 655, 656, 657, 658, 659, 785], "4d": [30, 122, 165, 186, 187, 188, 260, 261, 263, 264, 265, 266, 268, 301, 353, 450, 452, 477, 478, 488, 521, 554, 555, 684, 685, 697, 699, 700, 701, 761, 773, 860, 863, 878], "img": [30, 115, 160, 182, 225, 278, 279], "as_volum": [30, 278, 279, 878], "nib": [30, 44, 78, 134, 156], "s_invers": 30, "gz": [30, 140, 155, 172, 205, 255, 262, 263, 264, 265, 266, 276, 311, 384, 477, 478, 497, 538, 542, 557, 597, 603, 606, 608, 615, 617, 623, 627, 662, 819, 822, 824, 825, 829, 830, 843, 878], "t1_fname": [30, 160, 176], "499": [30, 31, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 77, 85, 86, 115, 118, 119, 126, 142, 143, 149, 168, 172, 176, 178, 179, 181, 228, 229, 230], "11271": [30, 44, 181, 878], "446": [30, 68, 166, 174, 230, 243, 852], "compute_mne_inverse_volum": [30, 56], "plug": [31, 837, 860], "facil": [31, 256], "implement": [31, 69, 134, 166, 169, 179, 195, 202, 204, 209, 222, 240, 256, 260, 268, 272, 287, 288, 290, 301, 331, 353, 359, 409, 416, 417, 422, 426, 449, 472, 474, 475, 477, 478, 520, 523, 524, 525, 526, 527, 528, 530, 531, 541, 557, 558, 565, 571, 576, 600, 622, 681, 722, 724, 732, 798, 837, 844, 852, 861, 866, 876, 878], "wmne": [31, 474, 475], "eloreta": [31, 165, 166, 175, 178, 179, 186, 187, 233, 235, 260, 263, 265, 266, 268, 274, 296, 297, 353, 450, 472, 474, 475, 523, 524, 525, 526, 527, 528, 530, 531, 535, 537, 540, 541, 617, 745, 770, 833, 878], "educ": [31, 859], "shall": [31, 144, 200, 265, 266, 433, 557, 665, 780, 837, 859, 866], "develop": [31, 69, 134, 171, 204, 209, 254, 255, 331, 576, 696, 754, 840, 841, 843, 844, 854, 857, 859, 863, 878], "meant": [31, 89, 94, 108, 171, 225, 272, 288, 290, 340, 411, 421, 512, 644, 739, 740, 748, 878], "practic": [31, 70, 98, 113, 151, 160, 168, 200, 201, 207, 209, 240, 243, 269, 296, 557, 566, 619, 625, 683, 833, 837, 859, 860], "apply_solv": 31, "linalg": [31, 83, 134, 156, 160, 185, 205, 357, 683, 857, 878], "plot_sparse_source_estim": [31, 35, 40, 46, 59, 91, 810, 868, 878], "ave_fnam": [31, 40, 59, 67, 91], "cov_fnam": [31, 35, 40, 45, 51, 59, 67, 91, 172, 222, 273], "handl": [31, 40, 46, 59, 126, 140, 144, 146, 151, 155, 160, 165, 166, 168, 170, 172, 173, 206, 209, 212, 213, 258, 263, 264, 265, 266, 268, 341, 436, 450, 477, 478, 551, 554, 557, 585, 642, 746, 754, 762, 765, 767, 778, 789, 793, 817, 837, 863, 878], "365": [31, 40, 41, 45, 59, 80, 169, 206, 208, 230, 243, 269, 274, 353], "auxiliari": [31, 142, 371], "def": [31, 34, 67, 75, 83, 91, 92, 93, 108, 112, 116, 132, 134, 137, 150, 151, 156, 160, 201, 202, 205, 220, 222, 225, 229, 235, 240, 837], "ones": [31, 82, 87, 110, 141, 170, 178, 183, 185, 188, 205, 206, 225, 240, 256, 269, 385, 444, 470, 471, 477, 478, 516, 559, 576, 619, 625, 632, 682, 837, 857, 860, 863, 878], "account": [31, 79, 108, 122, 134, 141, 142, 156, 158, 162, 180, 185, 199, 200, 206, 207, 209, 214, 215, 225, 230, 240, 257, 260, 265, 266, 296, 297, 353, 357, 358, 368, 369, 370, 409, 416, 452, 453, 472, 474, 475, 535, 557, 560, 583, 785, 837, 857, 860, 863, 878], "constraint": [31, 60, 158, 166, 178, 194, 207, 243, 263, 264, 286, 298, 452, 535, 776, 863, 878], "weigth": 31, "formul": [31, 713, 723, 724, 727, 860], "problem": [31, 40, 59, 69, 87, 95, 96, 113, 137, 144, 161, 166, 175, 176, 188, 189, 195, 199, 203, 204, 206, 207, 214, 225, 226, 230, 233, 234, 235, 240, 243, 474, 493, 557, 576, 603, 609, 684, 685, 687, 688, 690, 691, 811, 836, 837, 842, 857, 858, 860, 866, 878], "bia": [31, 40, 69, 83, 141, 151, 184, 201, 233, 235, 239, 243, 260, 265, 266, 296, 297, 359, 422, 472, 474, 475, 535, 583, 716, 779, 784, 860, 878], "callabl": [31, 150, 260, 263, 264, 265, 266, 270, 271, 272, 274, 277, 278, 279, 282, 311, 313, 339, 364, 409, 412, 416, 419, 426, 438, 477, 478, 527, 556, 557, 571, 633, 663, 664, 676, 683, 684, 685, 687, 688, 697, 699, 700, 701, 743, 745, 758, 762, 769, 776, 777, 779, 784, 788, 797, 800, 803, 805, 806, 807, 808, 878], "boolean": [31, 100, 141, 143, 169, 171, 205, 206, 214, 216, 260, 263, 264, 265, 266, 272, 274, 409, 416, 477, 478, 556, 557, 684, 685, 687, 688, 697, 699, 701, 776, 777, 781, 784, 788, 797, 800, 805, 837, 864, 878], "what": [31, 59, 70, 82, 89, 93, 94, 116, 126, 127, 134, 136, 140, 141, 142, 143, 144, 156, 160, 169, 171, 175, 180, 181, 182, 190, 199, 201, 210, 214, 215, 216, 222, 225, 227, 230, 238, 240, 258, 261, 262, 263, 264, 265, 266, 270, 271, 273, 274, 277, 278, 279, 353, 357, 364, 368, 369, 384, 401, 428, 433, 438, 442, 459, 476, 477, 478, 493, 543, 590, 603, 605, 609, 634, 636, 647, 697, 700, 725, 728, 768, 803, 808, 826, 833, 837, 840, 842, 843, 845, 863, 866, 868], "tangenti": [31, 296, 297, 454, 472, 474, 475, 535, 860, 863], "discret": [31, 45, 103, 158, 176, 195, 207, 238, 243, 261, 262, 263, 264, 265, 266, 270, 271, 274, 276, 277, 278, 279, 416, 454, 472, 474, 475, 477, 478, 519, 535, 646, 697, 699, 700, 701, 709, 715, 859, 878], "coeffici": [31, 100, 108, 141, 146, 158, 194, 201, 203, 413, 415, 421, 427, 444, 445, 446, 474, 475, 556, 567, 568, 576, 585, 596, 600, 651, 660, 661, 682, 683, 699, 701, 710, 712, 715, 716, 720, 786, 878], "privat": [31, 837, 878], "inverse_spars": [31, 35, 40, 46, 59, 175, 846, 868, 878], "mxne_invers": 31, "_prepare_gain": 31, "is_fixed_ori": [31, 878], "_reapply_source_weight": 31, "_make_sparse_stc": 31, "all_ch_nam": 31, "gain_info": 31, "source_weight": 31, "weights_min": [31, 40, 59, 474, 475, 878], "dot": [31, 77, 86, 111, 118, 123, 126, 144, 150, 160, 175, 178, 182, 185, 190, 194, 199, 206, 210, 233, 235, 261, 265, 266, 270, 274, 278, 683, 773, 779, 837, 860, 878], "n_orient": [31, 270, 271, 274, 277, 278, 279, 443, 539], "active_set": 31, "l2": [31, 40, 54, 55, 243, 474, 475, 539, 657, 709, 846, 863], "penal": 31, "strongest": [31, 35, 40, 47, 59, 151], "n_dipol": [31, 51, 67, 91, 92, 158, 261, 270, 271, 274, 277, 278, 279, 299, 429, 533, 534, 536, 663], "depend": [31, 69, 81, 100, 125, 135, 136, 137, 141, 149, 151, 155, 157, 158, 162, 170, 171, 172, 190, 194, 200, 201, 203, 205, 206, 209, 216, 222, 225, 226, 227, 235, 240, 243, 257, 263, 264, 265, 266, 270, 271, 274, 276, 277, 278, 279, 298, 317, 328, 341, 342, 402, 415, 421, 435, 443, 453, 477, 478, 485, 492, 494, 557, 567, 576, 593, 599, 678, 684, 685, 687, 688, 690, 692, 693, 696, 697, 699, 700, 701, 719, 745, 754, 766, 768, 769, 775, 776, 779, 792, 798, 818, 835, 836, 837, 840, 843, 844, 845, 852, 853, 854, 857, 860], "n_active_dipol": 31, "bool": [31, 119, 171, 230, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 302, 303, 304, 305, 306, 307, 308, 311, 312, 313, 315, 316, 319, 320, 321, 322, 325, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 430, 431, 434, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 457, 459, 460, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 580, 581, 582, 583, 585, 586, 588, 589, 590, 592, 593, 594, 597, 598, 599, 600, 604, 605, 606, 607, 608, 609, 611, 612, 613, 615, 616, 617, 619, 620, 621, 622, 623, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 678, 681, 684, 685, 686, 687, 688, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 713, 714, 715, 716, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 740, 744, 745, 750, 753, 754, 758, 759, 761, 762, 763, 764, 766, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 813, 814, 815, 818, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 857], "entri": [31, 108, 134, 140, 142, 144, 150, 151, 166, 170, 171, 195, 199, 214, 257, 260, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 285, 313, 340, 341, 342, 343, 344, 345, 409, 416, 419, 431, 441, 444, 475, 476, 477, 478, 524, 532, 556, 557, 571, 643, 646, 648, 649, 650, 662, 677, 697, 699, 700, 701, 745, 762, 763, 775, 776, 777, 781, 784, 788, 797, 798, 800, 803, 804, 805, 807, 808, 837, 840, 860, 863, 878], "x_full": 31, "solv": [31, 59, 161, 175, 409, 493, 557, 603, 609, 683, 860, 866], "ey": [31, 73, 124, 134, 135, 137, 158, 172, 183, 198, 200, 203, 205, 206, 379, 493, 574, 578, 609], "dtype": [31, 91, 93, 113, 119, 144, 156, 167, 220, 222, 230, 263, 264, 265, 266, 415, 476, 477, 478, 860], "bgcolor": [31, 35, 40, 46, 59, 91, 156, 160, 178, 477, 478, 754, 764, 798, 804], "136": [31, 166, 169, 171, 229, 230, 238, 242, 276], "custom_inverse_solv": [31, 56], "synchron": [32, 33, 34, 111, 146, 210, 239, 243, 256, 296, 479, 485, 492, 837, 854, 878], "marijn": [32, 33, 45, 60, 72, 102, 161, 222, 243, 296, 297, 865, 878], "van": [32, 33, 43, 45, 60, 72, 102, 125, 161, 180, 201, 222, 243, 275, 296, 297, 359, 386, 565, 860, 865, 878], "vliet": [32, 33, 45, 60, 72, 102, 161, 222, 243, 296, 297, 865, 878], "vanvliet": [32, 33, 45, 60, 72, 102, 161, 222], "rockhil": [32, 69, 70, 78, 82, 113, 114, 115, 119, 134, 135, 136, 229, 230, 243, 865, 878], "aprockhil": [32, 69, 70, 78, 82, 113, 114, 115, 119, 134, 135, 136, 229, 230], "mailbox": [32, 33, 69, 70, 78, 82, 112, 113, 114, 115, 119, 126, 134, 135, 136, 227, 229, 230, 233, 239], "tfr_morlet": [32, 113, 166, 227, 228, 229, 230, 239, 422, 722, 724, 725, 726, 728, 729, 868, 878], "csd_tfr": [32, 868, 878], "make_d": [32, 33, 34, 222, 288, 289, 290, 291, 833, 868, 878], "apply_dics_tfr_epoch": [32, 288, 289, 290, 868, 878], "organ": [32, 70, 229, 230, 243, 566, 687, 688, 854, 859, 863], "_task": [32, 33, 34, 46, 112, 239], "_meg": [32, 33, 34, 46, 112, 172, 239, 255, 477, 478, 497, 498, 878], "5000e": 32, "mostli": [32, 108, 141, 175, 178, 188, 200, 203, 376, 377, 378, 381, 382, 384, 389, 392, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 454, 472, 474, 475, 477, 478, 535, 745, 833], "wavelet": [32, 102, 112, 166, 201, 229, 243, 422, 541, 697, 700, 703, 706, 711, 713, 722, 723, 724, 725, 727, 728, 833, 878], "tfr": [32, 111, 201, 227, 228, 239, 422, 524, 525, 526, 527, 697, 700, 703, 706, 708, 719, 724, 725, 727, 728, 729, 730, 805, 833, 866, 868, 876, 878], "wish": [32, 144, 171, 190, 207, 220, 226, 227, 233, 362, 477, 478, 576, 746, 748, 837, 845, 859], "epochs_tfr": [32, 291, 528, 708], "return_itc": [32, 111, 113, 166, 227, 228, 229, 230, 239, 726, 727, 728, 729], "buffer": [32, 113, 189, 255, 268, 476, 477, 478, 493, 576, 585, 603, 609, 863, 878], "01_task": [32, 33, 34, 46, 112, 170, 239, 240], "somato_meg": [32, 33, 34, 46, 112, 239], "237600": [32, 33, 34, 46, 112, 239], "506999": [32, 33, 34, 46, 112, 239], "791": [32, 33, 34, 46, 112, 181, 230, 239], "1688": [32, 33, 34, 46, 112, 239], "266": [32, 33, 34, 46, 111, 112, 169, 195, 201, 208, 225, 230, 239, 243], "9989760657919393": 32, "1052": [32, 33, 34, 208], "0121": [32, 34, 145, 166, 169, 214, 222], "0211": [32, 34, 166, 169, 222], "1331": [32, 34, 145, 169, 200, 208, 222], "2211": [32, 34, 169, 222], "2241": [32, 34, 159, 169, 222], "2521": [32, 34, 140, 149, 169, 222], "1641": [32, 34, 169, 222], "1831": [32, 34, 169, 222], "1921": [32, 34, 169, 222], "1941": [32, 34, 169, 222], "1611": [32, 34, 119, 169, 222], "0441": [32, 34, 169, 222], "1631": [32, 34, 119, 169, 208, 222], "0231": [32, 34, 119, 166, 169, 222], "1411": [32, 34, 145, 146, 169, 200, 206, 222], "0341": [32, 34, 169, 222], "1621": [32, 34, 119, 169, 222], "1811": [32, 34, 119, 150, 169, 194, 214, 222], "1521": [32, 34, 166, 169, 222], "1721": [32, 34, 169, 222], "1911": [32, 34, 169, 222], "1931": [32, 34, 169, 222], "2111": [32, 34, 169, 222], "2121": [32, 34, 169, 222], "2021": [32, 34, 144, 169, 180, 190, 194, 211, 222, 243, 387, 505, 854, 859], "1341": [32, 34, 169, 194, 208, 222], "0221": [32, 34, 166, 169, 222], "0241": [32, 34, 169, 222], "1731": [32, 34, 35, 169, 222], "2041": [32, 34, 169, 222], "0731": [32, 34, 169, 222], "1141": [32, 34, 169, 222], "0131": [32, 34, 145, 166, 169, 222], "period": [32, 80, 120, 140, 141, 144, 145, 149, 150, 172, 180, 198, 200, 201, 202, 204, 211, 240, 258, 263, 264, 265, 266, 270, 271, 273, 274, 277, 278, 279, 353, 557, 560, 561, 562, 573, 615, 616, 709, 741, 779, 833, 837, 859, 878], "baseline_csd": 32, "scalar": [32, 141, 160, 180, 222, 263, 264, 265, 266, 270, 271, 272, 274, 277, 278, 279, 289, 296, 297, 298, 409, 416, 477, 478, 557, 683, 699, 701, 745, 777, 784, 788, 797, 803, 808, 878], "beamfom": 32, "noise_csd": [32, 33, 296], "reduce_rank": [32, 33, 34, 49, 296, 297, 878], "real_filt": [32, 33, 34, 222, 296, 878], "epochs_stc": 32, "return_gener": [32, 103, 290, 291, 294, 443, 526, 528, 531], "nsourc": [32, 52, 267, 863], "epoch_stc": 32, "conj": [32, 113, 296, 297], "apply_baselin": [32, 111, 126, 141, 149, 172, 178, 198, 203, 204, 206, 227, 228, 229, 230, 239, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 697, 700, 878], "8155": [32, 33, 34, 46], "sti": [32, 33, 42, 46, 68, 71, 72, 79, 89, 92, 93, 94, 106, 107, 109, 112, 140, 142, 149, 152, 166, 168, 169, 177, 188, 195, 199, 203, 204, 206, 215, 222, 227, 238, 239, 256, 450, 451, 477, 478, 494, 833, 878], "015": [32, 33, 127, 140, 142, 149, 169, 203, 204, 222, 233, 243, 261, 571, 657, 773], "003": [32, 33, 71, 120, 127, 140, 141, 142, 145, 149, 166, 167, 169, 172, 200, 201, 203, 204, 206, 214, 222, 243], "001": [32, 33, 70, 79, 82, 83, 120, 127, 140, 141, 142, 144, 145, 149, 150, 151, 160, 166, 168, 169, 172, 188, 194, 198, 200, 201, 202, 203, 206, 211, 214, 222, 225, 226, 227, 229, 230, 233, 234, 239, 243, 532, 566, 647, 684, 685, 687, 688, 854, 860], "014": [32, 33, 42, 46, 61, 68, 71, 72, 79, 89, 92, 93, 94, 106, 107, 109, 112, 127, 129, 132, 140, 142, 149, 152, 166, 168, 169, 177, 188, 195, 199, 203, 204, 206, 215, 222, 227, 238, 239, 256, 450, 451, 477, 478, 494, 878], "005": [32, 33, 120, 127, 140, 142, 149, 157, 159, 162, 166, 169, 203, 222, 235, 239, 261, 343, 559, 773], "006": [32, 33, 120, 127, 135, 139, 140, 142, 145, 149, 158, 166, 169, 203, 206, 222, 243, 255, 269, 274, 514, 853], "074": 32, "gyri": [32, 93, 155, 158, 221, 243], "border": [32, 38, 59, 103, 115, 125, 155, 181, 260, 263, 264, 265, 266, 272, 409, 416, 435, 477, 478, 556, 557, 571, 697, 699, 701, 745, 777, 783, 784, 788, 797, 800, 805, 806, 807, 878], "central": [32, 127, 141], "sulcu": 32, "primari": [32, 93, 149, 859, 860], "s1": [32, 500], "m1": [32, 170, 207, 225, 240, 263, 264, 265, 266, 477, 478, 642, 878], "4500": 32, "dorsal": [32, 745], "brain_kwarg": [32, 41, 115, 134, 180, 181, 270, 271, 274, 277, 278, 279, 803, 808], "add_data_kwarg": [32, 135, 181, 270, 271, 274, 277, 278, 279, 803, 808], "fmid": [32, 270, 271, 274, 277, 278, 279, 745, 764, 803, 808, 809, 878], "scale_factor": [32, 35, 48, 49, 50, 59, 177, 271, 277, 279, 311, 745, 795, 804, 808], "colorbar_kwarg": [32, 135, 181, 745], "label_font_s": [32, 135, 181], "movi": [32, 60, 135, 136, 177, 181, 745, 878], "websit": [32, 135, 136, 151, 177, 181, 189, 206, 401, 402, 571, 837, 840, 859], "save_movi": [32, 60, 135, 136, 177, 181, 745, 878], "time_view": [32, 60, 108, 126, 135, 136, 177, 181, 191, 270, 271, 274, 277, 278, 279, 745, 803, 808, 878], "onc": [32, 34, 43, 44, 60, 69, 93, 119, 126, 132, 135, 142, 143, 144, 145, 150, 151, 166, 168, 169, 170, 172, 177, 181, 198, 199, 201, 203, 204, 205, 206, 214, 216, 256, 257, 263, 264, 265, 266, 275, 281, 374, 445, 447, 448, 477, 478, 575, 583, 725, 728, 766, 798, 837, 853, 859, 860, 878], "688": [32, 230], "33913449": 32, "817": [32, 195, 208, 230], "80202112": 32, "3163": 32, "68479992": 32, "298": [32, 46, 56, 74, 169, 225, 230], "1458": [32, 56], "dics_epoch": [32, 56, 878], "roman": [33, 243, 852, 878], "goj": [33, 243, 852, 878], "appelhoff": [33, 112, 126, 227, 230, 233, 239, 865, 878], "csd_morlet": [33, 34, 102, 222, 698, 702, 703, 704, 705, 707, 868, 878], "apply_dics_csd": [33, 34, 222, 288, 290, 291, 296, 868, 878], "shorter": [33, 113, 201, 209, 240, 270, 271, 274, 277, 278, 279, 433, 438, 477, 478, 562, 586, 592, 713, 723, 724, 725, 727, 728, 798, 878], "498464098687909": [33, 34], "logspac": [33, 34, 194, 239, 353], "log10": [33, 34, 99, 132, 201, 211, 222, 225, 239, 240, 697], "loss": [33, 69, 200, 205, 263, 264, 265, 266, 412, 419, 439, 440, 441, 442, 477, 478, 679, 860], "csd_baselin": [33, 34], "csd_er": [33, 34], "block": [33, 34, 59, 63, 102, 132, 134, 142, 143, 172, 191, 200, 222, 261, 263, 264, 265, 266, 273, 450, 468, 469, 474, 477, 478, 546, 557, 583, 616, 684, 685, 687, 688, 699, 701, 745, 773, 775, 792, 798, 799, 801, 835, 842, 860, 863, 878], "rather": [33, 34, 60, 140, 141, 146, 149, 156, 166, 167, 168, 170, 171, 178, 188, 195, 200, 206, 207, 211, 214, 225, 229, 233, 238, 263, 264, 267, 270, 271, 274, 277, 278, 279, 416, 477, 478, 522, 530, 531, 541, 548, 550, 584, 689, 692, 745, 763, 798, 833, 835, 837, 853, 854, 859, 860, 878], "entir": [33, 73, 103, 144, 151, 176, 184, 200, 201, 203, 209, 211, 215, 225, 240, 258, 263, 264, 265, 266, 270, 271, 273, 274, 277, 278, 279, 286, 410, 425, 524, 525, 526, 527, 528, 557, 573, 615, 647, 697, 837, 878], "baseline_source_pow": 33, "beta_source_pow": 33, "messag": [33, 171, 238, 255, 270, 271, 274, 277, 278, 279, 364, 443, 493, 603, 609, 643, 644, 740, 741, 742, 745, 835, 837, 843, 848, 857, 863, 878], "40188307": 33, "5102619": 33, "34636424": 33, "joachim": [33, 180, 222, 243, 289, 296], "gro\u00df": [33, 180, 222, 243, 289, 296], "jan": [33, 180, 222, 243, 289, 296, 297, 853, 878], "kujala": [33, 180, 222, 243, 289, 296, 297], "matti": [33, 40, 54, 55, 58, 59, 125, 162, 178, 180, 209, 222, 243, 274, 289, 296, 474, 475, 524, 535, 539, 568, 572, 585, 654, 659, 844, 852, 857, 860, 878], "h\u00e4m\u00e4l\u00e4inen": [33, 40, 58, 59, 125, 178, 180, 222, 243, 274, 289, 296, 430, 474, 475, 524, 535, 539, 572, 654, 657, 659, 844, 878], "lar": [33, 180, 222, 243, 289, 296], "timmermann": [33, 180, 222, 243, 289, 296], "alfon": [33, 180, 222, 243, 289, 296], "schnitzler": [33, 180, 222, 243, 289, 296], "riitta": [33, 112, 178, 180, 222, 243, 289, 296, 297], "salmelin": [33, 112, 180, 222, 243, 289, 296, 297], "nation": [33, 180, 222, 243, 254, 289, 296, 865], "academi": [33, 180, 222, 243, 289, 296], "694": [33, 180, 195, 222, 230, 243, 289, 296], "699": [33, 140, 151, 180, 222, 230, 243, 289, 296], "2001": [33, 41, 69, 180, 194, 207, 222, 243, 263, 264, 265, 266, 289, 296, 415, 477, 478, 565, 642, 681], "1073": [33, 180, 208, 222, 243, 289, 296], "pna": [33, 180, 222, 243, 289, 296], "432": [33, 56, 171, 198, 225, 230], "dics_source_pow": [33, 56, 878], "luke": [34, 38, 42, 74, 80, 81, 108, 865, 878], "bloi": [34, 38, 42, 80, 81, 108, 865, 878], "make_lcmv": [34, 49, 180, 288, 290, 292, 293, 294, 295, 296, 298, 833, 868, 878], "apply_lcmv_cov": [34, 180, 292, 294, 295, 868, 878], "apply_inverse_cov": [34, 42, 524, 526, 527, 528, 868, 878], "90092": 34, "maxfilt": [34, 188, 209, 268, 349, 350, 351, 430, 477, 478, 530, 531, 540, 541, 567, 568, 576, 585, 648, 649, 650, 662, 863, 878], "conserv": [34, 69, 146, 225, 565, 646, 745, 878], "advanc": [34, 72, 126, 161, 162, 203, 216, 243, 260, 263, 264, 265, 266, 272, 353, 372, 409, 416, 468, 472, 477, 478, 556, 557, 571, 662, 697, 699, 701, 754, 762, 777, 784, 788, 797, 800, 805, 807, 836, 839, 841, 857, 858, 860, 862, 866, 878], "correctli": [34, 43, 44, 150, 190, 203, 235, 263, 264, 265, 266, 331, 442, 477, 478, 760, 779, 835, 836, 843, 853, 854, 860, 863, 878], "compute_rank": [34, 260, 417, 770, 868, 878], "tol": [34, 40, 46, 59, 73, 172, 357, 452, 472, 474, 475, 878], "tol_kind": [34, 357, 878], "active_win": 34, "baseline_win": 34, "baseline_cov": 34, "active_cov": 34, "common_cov": 34, "plot_cov": [34, 42, 177, 868, 878], "3737": 34, "_gen_dic": 34, "stc_base": [34, 42], "stc_act": 34, "_gen_lcmv": 34, "_gen_mn": 34, "stc_dic": 34, "stc_lcmv": 34, "stc_dspm": [34, 40, 59], "0511": [34, 146, 169, 222], "1431": [34, 169, 200, 222], "1511": [34, 166, 169, 222], "0821": [34, 169, 222], "0921": [34, 169, 222], "1231": [34, 169, 222], "0521": [34, 169, 200, 222], "2621": [34, 169, 200, 222], "0641": [34, 169, 222], "2141": [34, 169, 200, 222, 225, 243, 690, 691], "2421": [34, 119, 169, 200, 222], "0611": [34, 169, 222], "1211": [34, 169, 222], "2641": [34, 169, 222], "1041": [34, 169, 222], "0721": [34, 169, 222], "0941": [34, 169, 222], "0311": [34, 166, 169, 222], "1221": [34, 169, 200, 222], "0421": [34, 169, 222], "2541": [34, 169, 200, 222], "0141": [34, 169, 200, 222], "1011": [34, 169, 222], "2611": [34, 169, 200, 222], "2311": [34, 169, 222], "1821": [34, 169, 222], "0711": [34, 169, 222], "1541": [34, 169, 200, 208, 222], "1021": [34, 169, 194, 195, 222, 243, 263, 264, 265, 266, 477, 478], "1841": [34, 169, 222], "1121": [34, 169, 208, 222], "2331": [34, 169, 194, 222, 551], "0621": [34, 169, 222], "1031": [34, 169, 208, 222, 836], "0811": [34, 169, 200, 222], "2431": [34, 169, 222], "2411": [34, 119, 169, 222], "1311": [34, 78, 134, 135, 169, 208, 222], "0931": [34, 169, 222], "0741": [34, 169, 222], "2531": [34, 169, 200, 222], "0321": [34, 166, 169, 222], "0531": [34, 169, 222], "1531": [34, 166, 169, 222, 255], "2131": [34, 169, 200, 222, 225, 243, 690, 691], "1321": [34, 169, 200, 222], "0411": [34, 169, 222], "0911": [34, 169, 200, 222], "1441": [34, 145, 169, 191, 200, 208, 222], "1241": [34, 169, 222], "0431": [34, 169, 222], "2631": [34, 169, 200, 222], "2441": [34, 169, 222], "2321": [34, 169, 222], "2231": [34, 169, 222], "0331": [34, 166, 169, 222], "1111": [34, 141, 151, 169, 195, 201, 222, 230, 243, 353, 683, 684, 685, 687, 688, 837], "1421": [34, 145, 146, 169, 200, 206, 222], "2511": [34, 169, 222], "0111": [34, 145, 166, 169, 176, 200, 206, 214, 222, 632], "2031": [34, 169, 222], "0541": [34, 169, 222], "0631": [34, 169, 222], "planar": [34, 40, 42, 50, 58, 59, 70, 83, 91, 93, 108, 110, 118, 130, 142, 146, 172, 177, 178, 179, 183, 188, 195, 198, 205, 206, 209, 222, 225, 762, 860, 863, 878], "7615": [34, 125, 243, 386], "004172": 34, "17919e": 34, "exp": [34, 40, 42, 50, 58, 59, 89, 91, 93, 108, 177, 178, 179, 182, 191, 195, 206, 222, 225, 296, 297, 453, 472, 474, 475, 535], "37508": 34, "81894e": 34, "brain_dic": 34, "5205929": 34, "6585548": 34, "71744034": 34, "brain_lcmv": 34, "37202028": 34, "44229054": 34, "93188606": 34, "brain_dspm": 34, "71161502": 34, "88782419": 34, "99242158": 34, "849": [34, 56], "359": [34, 56, 68, 80, 169, 225, 230], "evoked_ers_source_pow": [34, 56], "detail": [35, 44, 45, 79, 118, 140, 142, 149, 150, 151, 155, 156, 158, 166, 167, 168, 169, 170, 171, 172, 175, 177, 180, 188, 189, 190, 194, 195, 199, 200, 202, 204, 205, 206, 209, 214, 215, 216, 217, 235, 238, 243, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 302, 303, 304, 305, 306, 307, 308, 311, 313, 315, 316, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 381, 382, 383, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 414, 415, 416, 417, 419, 420, 422, 425, 426, 428, 430, 434, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 459, 460, 464, 465, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 519, 520, 521, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 550, 553, 556, 557, 559, 560, 562, 563, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 580, 581, 582, 583, 585, 586, 588, 589, 592, 593, 594, 597, 598, 599, 600, 602, 604, 605, 606, 607, 608, 609, 611, 612, 613, 615, 616, 617, 619, 620, 621, 622, 623, 627, 628, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 642, 645, 646, 648, 649, 650, 651, 660, 661, 662, 663, 665, 667, 668, 669, 670, 671, 672, 673, 684, 685, 686, 687, 688, 690, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 715, 716, 719, 720, 724, 725, 727, 728, 729, 730, 733, 734, 735, 740, 744, 745, 753, 760, 761, 762, 769, 770, 773, 776, 777, 778, 779, 780, 783, 784, 785, 787, 788, 789, 790, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 807, 808, 809, 810, 814, 816, 817, 818, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 837, 853, 854, 856, 857, 861, 866, 878], "luessi": [35, 47, 103, 243, 852, 878], "mluessi": [35, 47, 103], "nmr": [35, 43, 47, 103, 113, 155, 214, 270, 274, 278, 366, 803, 860], "mgh": [35, 43, 47, 58, 103, 113, 155, 170, 214, 270, 274, 278, 327, 366, 646, 803, 848, 854, 860, 866, 878], "harvard": [35, 43, 47, 58, 103, 113, 155, 254, 270, 274, 278, 366, 803, 860, 865], "daniel": [35, 40, 46, 58, 59, 91, 126, 208, 243, 274, 474, 475, 852, 865, 878], "strohmeier": [35, 40, 46, 59, 91, 243, 474, 475, 852, 878], "tu": [35, 40, 46, 59, 91], "ilmenau": [35, 40, 46, 59, 91, 254, 865], "de": [35, 40, 46, 59, 91, 98, 111, 194, 195, 240, 243, 254, 415, 557, 571, 853, 865, 878], "gamma_map": [35, 868, 878], "make_stc_from_dipol": [35, 40, 46, 59, 868, 878], "plot_dipole_loc": [35, 40, 51, 59, 178, 183, 185, 868, 878], "plot_dipole_amplitud": [35, 40, 51, 59, 868], "evoked_fnam": [35, 51, 89, 94, 263, 264, 265, 266, 477, 478], "50e": [35, 91, 151, 203], "300e": 35, "xyz_same_gamma": [35, 472, 878], "return_residu": [35, 40, 46, 51, 59, 177, 299, 472, 474, 475, 524, 878], "return_as_dipol": [35, 40, 46, 59, 472, 474, 475, 878], "303": [35, 87, 111, 169, 208, 221, 230, 234], "364": [35, 40, 48, 49, 54, 55, 58, 59, 67, 80, 91, 93, 120, 162, 166, 169, 178, 225, 238], "converg": [35, 40, 46, 59, 172, 179, 204, 472, 524, 557, 704, 715, 860, 878], "054e": 35, "22233": 35, "856e": 35, "20712": 35, "375e": 35, "17166": 35, "061e": 35, "12996": 35, "273e": 35, "10107": 35, "574e": 35, "8307": 35, "319e": 35, "7209": 35, "369e": 35, "6342": 35, "631e": 35, "5694": 35, "047e": 35, "5142": 35, "579e": 35, "4692": 35, "199e": 35, "4287": 35, "889e": 35, "4002": [35, 860], "634e": 35, "3696": 35, "422e": 35, "3429": 35, "246e": 35, "099e": 35, "2952": [35, 162], "748e": 35, "2745": 35, "703e": 35, "2559": 35, "817e": 35, "2394": 35, "063e": 35, "2229": 35, "417e": 35, "2067": 35, "883e": 35, "1944": 35, "711e": 35, "1836": 35, "551e": 35, "400e": 35, "1617": 35, "266e": 35, "1509": 35, "166e": 35, "1440": 35, "066e": 35, "1350": 35, "964e": 35, "1245": 35, "861e": 35, "754e": 35, "1128": 35, "643e": 35, "1077": [35, 58, 243, 274, 539, 657], "529e": 35, "410e": 35, "975": [35, 72, 191, 193, 230], "288e": 35, "924": [35, 160, 164, 195, 208], "163e": 35, "036e": 35, "837": [35, 230], "906e": 35, "798": [35, 65, 66, 144, 230], "776e": 35, "744": [35, 194, 195, 208, 230], "644e": 35, "705": [35, 230, 233, 237], "513e": 35, "687": [35, 61, 195], "382e": 35, "660": [35, 40, 56, 80, 187, 195, 230], "253e": 35, "627": [35, 230], "125e": 35, "600": [35, 40, 58, 59, 70, 73, 80, 82, 89, 92, 125, 126, 133, 155, 156, 160, 167, 168, 178, 179, 180, 184, 191, 195, 198, 199, 202, 205, 206, 207, 208, 209, 211, 214, 215, 216, 217, 222, 224, 230, 243, 475, 745, 878], "000e": 35, "588": [35, 195], "877e": 35, "570": [35, 80, 230], "758e": 35, "642e": 35, "495": [35, 81, 208, 220, 230], "421e": 35, "486": [35, 143, 225, 230], "316e": 35, "465": [35, 202, 208, 230], "215e": 35, "441": [35, 208, 230, 243, 557, 583], "119e": 35, "026e": 35, "408": [35, 56, 80, 185, 230], "937e": 35, "402": [35, 80, 144, 207, 208, 213, 863], "853e": 35, "387": [35, 80, 225, 230, 243, 296], "772e": 35, "378": [35, 80, 208, 225, 230], "695e": 35, "348": [35, 111, 162, 169, 201, 208, 225, 230, 878], "622e": 35, "339": [35, 111, 169, 170, 174, 194, 230], "552e": 35, "333": [35, 74, 169, 195, 208, 230], "486e": 35, "330": [35, 50, 70, 80, 81, 111, 169, 183, 225, 230, 878], "423e": 35, "312": [35, 111, 169, 230], "306e": 35, "252e": 35, "297": [35, 111, 169, 208, 230], "201e": 35, "152e": 35, "273": [35, 46, 129, 133, 166, 169, 184, 208, 225, 230, 878], "106e": 35, "261": [35, 169, 230], "062e": 35, "020e": 35, "807e": 35, "431e": 35, "222": [35, 46, 169, 191, 229, 230, 235], "074e": 35, "219": [35, 41, 56, 60, 169, 208, 225, 230, 878], "735e": 35, "412e": 35, "105e": 35, "207": [35, 56, 58, 113, 158, 169, 229, 230, 243], "813e": 35, "198": [35, 169, 184, 229, 235], "535e": 35, "192": [35, 169, 171, 195, 208, 225], "271e": 35, "186": [35, 39, 45, 56, 116, 129, 144, 169, 176, 181, 195, 225, 229, 230], "018e": 35, "778e": 35, "174": [35, 39, 56, 125, 169, 225, 229, 230, 243, 276], "549e": 35, "168": [35, 45, 90, 92, 128, 169, 176, 181, 225, 229, 230, 235], "121e": 35, "159": [35, 113, 149, 169, 229, 230], "922e": 35, "156": [35, 45, 169, 176, 181, 195, 197, 208, 225, 230, 276], "731e": 35, "138": [35, 45, 166, 169, 171, 195, 208, 229, 230, 243, 276, 562, 878], "895e": 35, "132": [35, 46, 66, 84, 151, 169, 225, 229], "749e": 35, "608e": 35, "126": [35, 169, 229, 230], "344e": 35, "123": [35, 45, 122, 169, 195, 204, 206, 208, 225, 230, 344], "220e": 35, "104": [35, 61, 169, 194, 197, 225, 230, 243, 657, 863, 878], "100e": [35, 65, 145, 151, 200, 222], "117": [35, 61, 100, 101, 145, 169, 195, 229, 230, 243, 726, 729, 878], "985e": 35, "875e": 35, "107": [35, 61, 112, 114, 134, 140, 169, 229, 230, 243, 863, 878], "769e": 35, "666e": 35, "473e": 35, "208e": 35, "126e": 35, "115": [35, 61, 83, 93, 105, 111, 169, 183, 187, 229, 230, 243, 565], "688e": 35, "500e": 35, "441e": 35, "384e": 35, "329e": 35, "127": [35, 169, 225, 230], "275e": 35, "137": [35, 134, 169, 225, 276], "154": [35, 137, 168, 169, 195, 225, 229, 230], "155": [35, 169, 195, 229, 230, 240, 878], "247e": 35, "649e": 35, "177": [35, 145, 169, 194, 195, 225, 230, 243, 684, 685, 687, 688], "116e": 35, "179": [35, 74, 79, 84, 169, 195, 208, 213, 225, 230, 243, 592, 860], "523e": 35, "211": [35, 41, 59, 145, 169, 217, 229, 230], "307e": 35, "227": [35, 118, 129, 151, 169, 230, 243, 387, 854], "214e": 35, "041e": 35, "293": [35, 111, 169, 183, 195, 225, 243], "730e": 35, "124e": 35, "160e": 35, "313": [35, 111, 169, 225, 230, 878], "783e": 35, "340": [35, 51, 80, 81, 111, 122, 169, 191, 194, 225, 243, 299, 878], "168e": 35, "343": [35, 105, 111, 143, 169, 170, 194, 208, 878], "949e": 35, "886e": 35, "420": [35, 80, 90, 93, 195, 208, 230], "855e": 35, "reach": [35, 40, 46, 59, 172, 240, 256, 263, 264, 265, 266, 477, 478, 653, 697, 699, 701, 704, 715, 725, 728, 742, 777, 784, 805, 878], "dip": [35, 40, 59, 83, 115, 176, 181, 183, 184, 185, 210, 240, 261, 452, 607, 878], "mri_head_t": [35, 40, 51, 59, 181, 267, 268, 470, 471, 863], "fig_nam": [35, 40, 46, 59, 804], "david": [35, 42, 118, 125, 128, 134, 194, 201, 238, 243, 263, 264, 265, 266, 353, 386, 415, 472, 477, 478, 525, 699, 701, 709, 715, 726, 729, 762, 860, 878], "wipf": [35, 243, 472], "srikantan": [35, 222, 243, 296, 297, 472], "nagarajan": [35, 222, 243, 296, 297, 472], "unifi": [35, 137, 180, 201, 243, 472, 657, 878], "947": [35, 243, 472], "966": [35, 42, 95, 128, 162, 172, 206, 230, 243, 472], "059": [35, 140, 142, 149, 169, 199, 214, 222, 243, 472], "418": [35, 56, 211, 213, 230, 878], "gamma_map_invers": [35, 56], "form": [37, 141, 143, 160, 168, 175, 178, 198, 201, 203, 204, 205, 209, 225, 227, 230, 233, 260, 263, 264, 265, 266, 268, 270, 271, 272, 274, 277, 278, 279, 334, 409, 412, 413, 415, 416, 417, 418, 419, 421, 422, 423, 444, 472, 474, 475, 477, 478, 510, 519, 524, 526, 527, 528, 556, 557, 558, 566, 571, 585, 628, 631, 646, 647, 648, 649, 650, 662, 684, 685, 687, 688, 697, 699, 700, 701, 709, 762, 777, 779, 784, 788, 797, 800, 805, 807, 826, 831, 837, 856, 857, 859, 860, 863, 878], "merg": [37, 141, 215, 216, 258, 263, 265, 266, 352, 451, 522, 639, 646, 837, 859, 878], "christian": [37, 119, 125, 133, 144, 243, 386, 387, 409, 433, 657, 852, 854, 878], "brodbeck": [37, 119, 133, 243, 852, 878], "christianbrodbeck": [37, 119, 133], "read_source_estim": [37, 43, 53, 115, 126, 133, 175, 181, 234, 868, 878], "aud_lh": 37, "aud_rh": 37, "stc_lh": [37, 47], "stc_rh": [37, 47], "stc_bh": 37, "calcul": [37, 38, 58, 80, 100, 111, 127, 144, 150, 151, 158, 162, 166, 170, 176, 180, 188, 194, 200, 201, 204, 206, 211, 214, 225, 226, 230, 239, 258, 263, 264, 265, 266, 270, 271, 273, 274, 277, 278, 279, 296, 297, 303, 317, 353, 357, 358, 368, 369, 370, 409, 416, 417, 444, 452, 453, 466, 472, 474, 475, 477, 478, 514, 519, 520, 521, 535, 557, 564, 569, 570, 573, 576, 585, 589, 605, 615, 627, 662, 676, 684, 685, 687, 688, 690, 691, 698, 709, 716, 785, 790, 799, 833, 857, 863, 878], "mass": [37, 165, 225, 226, 231, 232, 263, 268, 269, 274, 477, 554, 612, 646, 654, 660, 663, 678, 680, 681, 685, 700, 727, 735, 875, 878], "mni": [37, 134, 135, 136, 159, 176, 181, 182, 190, 261, 278, 279, 311, 327, 366, 470, 629, 737, 744, 745, 809, 860, 878], "vtx": 37, "t_lh": 37, "center_of_mass": [37, 221, 269, 274, 660, 663, 878], "mni_lh": 37, "vertex_to_mni": [37, 269, 274, 868], "t_rh": 37, "mni_rh": 37, "275": [37, 46, 111, 122, 166, 169, 170, 191, 208, 225, 243, 337, 409, 854, 860], "625": [37, 143, 208, 230], "hl": 37, "hr": 37, "hb": 37, "figlegend": 37, "label_activation_from_stc": [37, 56], "typic": [38, 44, 60, 69, 82, 134, 143, 145, 149, 151, 156, 160, 167, 168, 170, 188, 191, 195, 198, 199, 201, 203, 204, 205, 206, 207, 209, 211, 216, 225, 240, 257, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 277, 278, 279, 296, 297, 311, 312, 330, 341, 343, 353, 357, 358, 359, 361, 416, 427, 452, 462, 465, 477, 478, 537, 556, 557, 559, 567, 571, 586, 596, 599, 609, 646, 668, 682, 683, 684, 685, 687, 688, 697, 700, 745, 783, 792, 796, 798, 833, 836, 837, 843, 854, 855, 857, 859, 860, 878], "anatom": [38, 44, 69, 93, 134, 135, 156, 160, 176, 181, 243, 261, 278, 279, 364, 461, 745, 763, 767, 809, 833, 860, 878], "yield": [38, 140, 142, 145, 149, 151, 155, 161, 171, 180, 202, 204, 214, 215, 240, 258, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 317, 426, 430, 557, 560, 567, 568, 576, 585, 611, 649, 650, 689, 724, 725, 727, 728, 745, 833, 855, 857, 860, 878], "peak": [38, 54, 55, 60, 69, 71, 73, 81, 89, 93, 94, 126, 131, 145, 149, 150, 166, 172, 175, 177, 178, 180, 183, 184, 185, 191, 198, 200, 203, 204, 206, 208, 210, 225, 240, 255, 258, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 358, 539, 557, 559, 562, 569, 570, 573, 574, 576, 577, 578, 580, 581, 594, 654, 683, 697, 775, 780, 782, 783, 784, 818, 853, 860, 878], "banksst": [38, 41, 47], "aparc_label_nam": 38, "stc_mean": 38, "grow": [38, 89, 94, 240, 467, 510, 602, 844, 859], "halt": [38, 134, 142, 261, 263, 264, 265, 266, 468, 469, 477, 478, 557, 699, 701, 773, 775, 792, 798, 801, 843, 878], "read_labels_from_annot": [38, 41, 47, 67, 89, 93, 94, 125, 221, 543, 619, 828, 868, 878], "parc": [38, 41, 47, 620, 828], "aparc": [38, 41, 47, 67, 89, 93, 94, 125, 135, 155, 176, 181, 221, 261, 270, 271, 274, 277, 278, 279, 383, 443, 461, 512, 620, 635, 745, 833, 878], "regexp": [38, 89, 93, 94, 199, 204, 206, 211, 438, 551, 620, 878], "stc_mean_label": 38, "func_label": 38, "stc_to_label": [38, 868, 878], "maximum": [38, 47, 48, 50, 58, 82, 114, 118, 151, 176, 177, 181, 182, 200, 201, 204, 214, 243, 258, 263, 264, 265, 266, 270, 271, 274, 276, 277, 278, 279, 296, 297, 325, 341, 364, 417, 442, 443, 446, 467, 472, 474, 475, 477, 478, 510, 518, 524, 533, 534, 539, 557, 559, 573, 583, 584, 662, 684, 685, 687, 688, 693, 697, 702, 703, 704, 705, 706, 707, 708, 709, 711, 713, 715, 723, 726, 727, 729, 745, 769, 774, 780, 783, 803, 808, 809, 818, 833, 860, 878], "anat_label": 38, "stc_anat_label": 38, "pca_anat": 38, "extract_label_time_cours": [38, 39, 41, 181, 270, 271, 274, 277, 278, 279, 512, 868, 878], "pca_flip": [38, 39, 270, 271, 274, 277, 278, 279, 443], "stc_func_label": 38, "pca_func": 38, "show_view": [38, 48, 78, 108, 115, 134, 135, 160, 181, 190, 210, 222, 235, 270, 271, 274, 277, 278, 279, 745, 803, 808, 878], "add_label": [38, 59, 103, 115, 125, 745], "73227205": 38, "80078852": 38, "62750681": 38, "681": [38, 56, 208], "label_from_stc": [38, 56], "strategi": [39, 195, 198, 204, 206, 207, 243, 352, 364, 414, 426, 474, 657, 715, 777, 857], "simpl": [39, 46, 127, 144, 145, 151, 160, 161, 166, 181, 194, 195, 201, 205, 222, 225, 240, 243, 255, 323, 352, 409, 412, 413, 415, 416, 417, 418, 419, 421, 422, 423, 494, 558, 713, 723, 793, 837, 854, 860, 878], "patheffect": [39, 160], "path_effect": [39, 160], "label_fnam": 39, "stc_label": 39, "mean_flip": [39, 270, 271, 274, 277, 278, 279, 443, 878], "tc": 39, "pe": 39, "stroke": [39, 160], "foreground": [39, 142, 160, 270, 271, 274, 277, 278, 279, 745, 803, 808, 878], "possibl": [39, 43, 45, 113, 134, 137, 140, 142, 143, 145, 149, 150, 151, 156, 160, 161, 168, 169, 170, 171, 172, 178, 180, 188, 190, 195, 198, 199, 200, 201, 202, 204, 205, 207, 208, 209, 211, 214, 215, 216, 217, 220, 222, 225, 229, 230, 238, 240, 257, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 323, 325, 353, 409, 412, 413, 415, 416, 417, 418, 419, 421, 422, 423, 426, 432, 450, 460, 468, 477, 478, 485, 501, 557, 558, 592, 593, 611, 612, 642, 679, 684, 686, 697, 698, 701, 731, 761, 771, 779, 780, 783, 788, 791, 792, 799, 835, 842, 854, 855, 857, 859, 860, 863, 864, 878], "vectorsourceestim": [39, 60, 175, 270, 271, 274, 275, 278, 279, 291, 292, 472, 474, 475, 524, 525, 526, 527, 528, 533, 534, 625, 808, 809, 833, 868, 878], "stc_vec": [39, 41, 180], "stc_vec_label": 39, "ee6677": [39, 160, 713, 723], "228833": 39, "4477aa": [39, 713, 723], "xyz": [39, 156, 160, 178, 270, 271, 274, 277, 278, 279, 311, 329, 443, 472, 501, 815, 878], "zorder": [39, 160, 265, 266, 713, 723, 779, 782, 878], "label_source_activ": [39, 56], "ir": 40, "l0": [40, 474], "sparser": [40, 270, 274, 278, 803], "convex": [40, 46, 59, 243, 260, 263, 264, 265, 266, 272, 409, 416, 477, 478, 556, 557, 571, 697, 699, 701, 762, 777, 784, 788, 797, 800, 805, 807, 878], "mixed_norm": [40, 175, 475, 868, 878], "sure": [40, 43, 45, 69, 78, 108, 112, 134, 135, 140, 141, 144, 151, 156, 161, 162, 166, 170, 171, 172, 176, 189, 199, 202, 203, 204, 206, 209, 214, 229, 233, 234, 235, 255, 265, 266, 440, 441, 474, 489, 541, 556, 567, 692, 713, 723, 724, 725, 727, 782, 824, 835, 836, 837, 845, 878], "criterion": [40, 524, 878], "n_mxne_it": [40, 474], "use_cp": [40, 91, 158, 221, 271, 277, 279, 283, 284, 363, 524, 525, 526, 527, 528, 531, 535, 540, 541, 661, 662, 860, 878], "maxit": [40, 59, 472, 474, 475], "3000": [40, 49, 112, 137, 142, 145, 146, 200, 206, 211, 255, 474, 475], "active_set_s": [40, 474], "debia": [40, 59, 474, 475], "slower": [40, 44, 46, 201, 258, 263, 362, 408, 476, 477, 478, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 517, 527, 593, 837, 866], "sure_alpha_grid": [40, 474], "083": [40, 123], "tidx": [40, 181], "7262": [40, 58, 59, 93, 178, 195, 222], "020866": [40, 58, 195], "58122e": [40, 58, 59, 93, 178, 195, 222], "element": [40, 58, 89, 168, 172, 178, 179, 182, 191, 195, 201, 205, 206, 214, 216, 225, 227, 243, 257, 260, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 321, 322, 409, 416, 421, 430, 431, 443, 444, 464, 477, 478, 512, 513, 514, 556, 571, 585, 646, 677, 685, 697, 699, 701, 750, 762, 764, 769, 777, 784, 797, 800, 803, 805, 807, 808, 809, 833, 837, 843, 858, 859, 863, 878], "21995": 40, "82623e": 40, "warm": 40, "33333333333333": 40, "66666666666667": 40, "66666666666666": 40, "666666666666664": 40, "60279": 40, "603691813114": 40, "59855": 40, "33381940738": 40, "60434": 40, "87086639602": 40, "60386": 40, "806544140134": 40, "60336": 40, "58240427435": 40, "60303": 40, "83155030615": 40, "60157": 40, "013430584055": 40, "59974": 40, "67524684279": 40, "59597": 40, "86913013583": 40, "59084": 40, "52687739991": 40, "compute_source_morph": [40, 43, 44, 133, 158, 160, 180, 181, 233, 234, 235, 270, 274, 275, 278, 279, 622, 803, 809, 853, 868, 878], "subject_from": [40, 43, 44, 134, 180, 269, 275, 359, 543, 544, 622, 634, 635, 636, 637, 818, 853], "stc_fsaverag": [40, 43, 44, 853], "src_fsaverage_fnam": 40, "src_fsaverag": 40, "matthieu": [40, 59, 243, 474, 475], "kowalski": [40, 59, 243, 474, 475], "acceler": [40, 243, 474, 843, 857, 860, 878], "gradient": [40, 118, 243, 258, 263, 264, 265, 266, 268, 474, 476, 477, 478, 520, 557, 697, 699, 700, 701, 762, 878], "physic": [40, 156, 160, 170, 176, 178, 189, 209, 243, 265, 266, 268, 430, 442, 474, 477, 478, 524, 568, 576, 585, 779, 833, 860, 863, 878], "medicin": [40, 82, 176, 209, 243, 474, 557, 585, 860], "biologi": [40, 82, 176, 209, 243, 474, 557, 585, 860], "1937": [40, 243, 474], "1961": [40, 243, 474], "2012": [40, 59, 151, 169, 201, 225, 243, 269, 274, 281, 353, 474, 475, 690, 691, 866], "1088": [40, 176, 194, 207, 209, 243, 263, 264, 265, 266, 415, 474, 477, 478, 585, 642, 860], "0031": [40, 176, 209, 243, 474, 585, 860], "9155": [40, 176, 209, 243, 474, 585, 860], "jen": [40, 46, 59, 243, 474, 475, 878], "haueisen": [40, 46, 59, 243, 474, 475], "improv": [40, 69, 144, 194, 195, 203, 206, 243, 263, 264, 265, 266, 304, 340, 342, 346, 369, 370, 411, 420, 445, 447, 448, 449, 477, 478, 535, 558, 593, 596, 654, 659, 725, 728, 837, 853, 855, 856, 857, 878], "prni": [40, 46, 243, 475], "t\u00fcbingen": [40, 243], "6858545": [40, 243], "charl": [40, 44, 243, 275, 359, 474], "alban": [40, 243, 474], "deledal": [40, 243, 474], "samuel": [40, 93, 94, 243, 474, 878], "vaiter": [40, 243, 474], "jalal": [40, 243, 474], "fadili": [40, 243, 474], "peyr\u00e9": [40, 243, 474], "stein": [40, 243, 474], "unbias": [40, 243, 474], "risk": [40, 181, 201, 204, 229, 243, 263, 264, 265, 266, 474, 477, 478, 576, 745], "sugar": [40, 243, 474], "siam": [40, 243, 474], "journal": [40, 43, 69, 70, 73, 118, 134, 157, 195, 201, 209, 230, 238, 243, 263, 264, 265, 266, 275, 353, 359, 430, 474, 477, 478, 557, 565, 566, 568, 585, 657, 684, 685, 687, 688, 699, 701, 709, 713, 715, 723, 724, 726, 727, 729, 762, 852], "2448": [40, 243, 474], "2487": [40, 243, 474], "1137": [40, 243, 474], "140968045": [40, 243, 474], "mixed_norm_invers": [40, 56], "annalisa": [41, 878], "pascarella": [41, 878], "iac": 41, "cnr": 41, "dir": [41, 171, 255, 745, 860, 863], "data_dir": [41, 57, 133, 144], "bem_dir": [41, 45, 108, 159, 161, 182], "fname_mixed_src": 41, "fname_aseg": [41, 181], "fname_model": 41, "_audvi": 41, "_audvis_raw": [41, 157], "substructur": 41, "labels_vol": 41, "amygdala": 41, "thalamu": 41, "proper": [41, 69, 225, 240, 264, 265, 266, 269, 296, 297, 353, 357, 358, 364, 368, 369, 370, 372, 409, 416, 452, 453, 472, 474, 475, 478, 535, 756, 785, 837, 854, 866, 878], "stem": [41, 71, 274, 278, 484, 503], "oct6": [41, 108, 158, 255, 270, 274, 278, 637, 645, 803, 853], "oct5": [41, 108, 853], "1026": [41, 108, 194, 208, 853], "bound": [41, 134, 158, 260, 263, 264, 265, 266, 270, 271, 272, 274, 277, 278, 279, 409, 416, 453, 477, 478, 556, 557, 646, 697, 698, 699, 701, 715, 733, 760, 762, 764, 769, 777, 784, 788, 797, 798, 799, 800, 803, 805, 807, 808, 809, 860, 863, 878], "10mm": 41, "someth": [41, 126, 149, 161, 171, 172, 191, 201, 206, 207, 214, 270, 271, 274, 277, 278, 279, 745, 746, 803, 808, 833, 836, 837, 840, 841, 842, 844, 878], "vol_src": [41, 135, 158], "add_interpol": [41, 50, 158, 646], "usual": [41, 50, 69, 82, 111, 113, 140, 143, 145, 149, 150, 151, 155, 156, 160, 161, 166, 167, 168, 170, 172, 180, 183, 188, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 214, 215, 216, 217, 233, 235, 238, 239, 255, 261, 262, 263, 264, 265, 266, 267, 268, 276, 302, 324, 329, 334, 336, 338, 460, 477, 478, 501, 662, 684, 685, 687, 688, 833, 837, 838, 840, 843, 845, 857, 860, 863], "nuse": [41, 268, 276, 863], "2562": [41, 108, 150, 158, 853], "node": [41, 47, 158, 671, 672, 673, 750, 863, 878], "4590": 41, "2961": 41, "346": [41, 111, 144, 169], "1275": [41, 195], "2615": 41, "1340": 41, "1589": 41, "746": [41, 195], "1372": [41, 194], "283": [41, 70, 111, 169, 225, 230, 243, 566], "1306": [41, 208], "010000": [41, 156], "2169": 41, "write_source_spac": [41, 627, 853, 868, 878], "again": [41, 134, 141, 142, 144, 150, 151, 155, 156, 161, 172, 195, 198, 199, 201, 203, 204, 205, 206, 214, 225, 230, 240, 263, 264, 265, 266, 273, 477, 478, 557, 593, 796, 824, 836, 859, 860, 878], "plot_img": 41, "nipy_spectr": 41, "exist": [41, 44, 98, 100, 126, 140, 143, 149, 150, 156, 161, 170, 171, 172, 176, 180, 200, 201, 202, 205, 206, 207, 216, 220, 225, 227, 255, 257, 260, 261, 263, 264, 265, 266, 267, 268, 270, 271, 273, 274, 275, 276, 277, 278, 279, 287, 306, 307, 308, 311, 312, 371, 376, 377, 378, 379, 381, 382, 384, 385, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 431, 435, 439, 440, 441, 442, 444, 461, 477, 478, 479, 492, 509, 542, 544, 546, 556, 557, 560, 567, 586, 605, 615, 635, 636, 639, 642, 643, 644, 647, 649, 650, 667, 668, 671, 697, 698, 699, 700, 701, 730, 733, 745, 768, 784, 799, 820, 821, 822, 823, 824, 825, 826, 828, 829, 830, 831, 832, 837, 845, 853, 854, 857, 859, 864, 866, 878], "5mm": [41, 83, 135, 429, 745], "innerskul": 41, "815": [41, 208, 230], "507": [41, 44, 56, 225, 230], "807": [41, 230], "460": [41, 80, 184, 225, 243, 852], "6003": 41, "inv_method": [41, 89], "a2009": [41, 93, 135, 155, 176, 270, 271, 274, 277, 278, 279, 443, 512, 620], "39266": 41, "01344e": 41, "coron": [41, 135, 158, 160, 180, 261, 745, 763, 773], "silhouett": [41, 180, 181, 270, 271, 274, 277, 278, 279, 745, 803, 808, 878], "43101017": 41, "98225664": 41, "7504814": 41, "45409596": 41, "02821048": 41, "97219252": 41, "vox": [41, 134, 160, 180, 181, 182], "2045": 41, "21567156": 41, "47889133": 41, "39837939": 41, "labels_parc": 41, "label_t": 41, "allow_empti": [41, 270, 271, 274, 277, 278, 279, 443], "nam": [41, 92, 93, 94, 183, 184, 222, 663, 878], "371": [41, 56, 80, 169, 195, 230], "mixed_source_space_invers": [41, 56], "computation": [42, 172, 201, 204, 205, 593, 860, 866], "sabbagh": [42, 243, 525, 878], "pierr": [42, 75, 204, 243, 525, 557, 878], "ablin": [42, 75, 204, 243, 525, 557, 878], "ga\u00ebl": [42, 243, 525], "varoquaux": [42, 243, 525], "state": [42, 89, 92, 108, 125, 140, 162, 166, 168, 175, 198, 199, 206, 207, 215, 220, 225, 240, 243, 256, 258, 263, 264, 348, 433, 474, 493, 510, 517, 525, 557, 583, 602, 603, 608, 609, 649, 650, 651, 660, 661, 663, 684, 685, 686, 687, 688, 697, 699, 700, 745, 788, 833, 835, 837, 845, 859, 860, 863, 866, 878], "2020": [42, 73, 144, 157, 243, 387, 525, 557, 854], "116893": [42, 243, 525], "alexand": [42, 134, 211, 243, 854, 878], "captur": [42, 46, 137, 144, 166, 172, 183, 184, 195, 203, 204, 205, 206, 207, 268, 273, 453, 556, 569, 570, 573, 599, 600, 833, 878], "environ": [42, 43, 44, 155, 172, 175, 261, 269, 270, 271, 273, 274, 276, 277, 278, 279, 302, 306, 307, 308, 311, 359, 364, 365, 366, 371, 376, 377, 378, 379, 381, 382, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 428, 457, 459, 461, 465, 467, 468, 469, 470, 471, 510, 514, 516, 543, 544, 582, 602, 620, 622, 629, 634, 635, 636, 637, 641, 644, 645, 646, 660, 663, 674, 692, 693, 737, 744, 745, 761, 763, 773, 803, 808, 809, 811, 818, 828, 835, 836, 840, 841, 842, 843, 845, 853, 857, 860, 878], "raw_empty_room_fnam": [42, 162], "ernoise_raw": [42, 128, 162, 172, 206], "raw_empty_room": [42, 162], "compute_raw_covari": [42, 87, 108, 162, 184, 191, 200, 260, 353, 606, 743, 853, 868, 878], "19800": [42, 128, 162, 172, 206], "85867": [42, 128, 162, 172, 206], "142": [42, 82, 128, 162, 164, 169, 172, 195, 206, 208, 229, 230, 276, 878], "965": [42, 128, 162, 172, 204, 206, 230], "18000": 42, "249": [42, 46, 151, 169, 195, 208, 229, 230, 243], "658": [42, 195, 230], "319": [42, 49, 71, 72, 90, 91, 98, 111, 141, 152, 166, 169, 177, 180, 195, 200, 208, 230, 243, 557], "environment": [42, 166, 198, 202, 205, 207, 209, 214, 216, 217, 853], "rest": [42, 69, 72, 108, 125, 134, 137, 140, 162, 166, 168, 169, 215, 243, 263, 264, 265, 266, 274, 372, 391, 477, 478, 642, 650, 833, 837, 859, 861, 866, 878], "base_cov": 42, "data_cov": [42, 180, 293, 297], "fig_noise_cov": 42, "show_svd": [42, 64, 260, 770], "fig_base_cov": 42, "fig_data_cov": 42, "1680": 42, "_cov": 42, "_kw": 42, "7265": [42, 177, 179], "037795": [42, 177], "52065e": [42, 177, 179], "40775": 42, "63307e": 42, "stc_data": [42, 93, 664], "11847053": 42, "45687517": 42, "03282162": 42, "318": [42, 56, 111, 169, 194, 195, 208, 230], "149": [42, 45, 158, 169, 181, 222, 224, 229, 230, 276], "mne_cov_pow": [42, 56], "pre": [43, 49, 134, 140, 141, 162, 166, 180, 200, 201, 204, 214, 220, 263, 264, 265, 266, 353, 477, 478, 557, 639, 642, 837, 838, 842, 849, 878], "spheric": [43, 70, 77, 151, 156, 170, 183, 184, 185, 199, 206, 209, 243, 260, 263, 264, 265, 266, 269, 272, 274, 275, 311, 327, 329, 359, 409, 416, 430, 477, 478, 521, 556, 557, 566, 567, 568, 571, 576, 585, 646, 660, 663, 674, 678, 697, 699, 701, 745, 762, 769, 777, 779, 781, 784, 785, 788, 795, 797, 799, 800, 801, 805, 807, 860, 878], "surfer": [43, 155, 270, 274, 278, 366, 745, 803, 860], "fswiki": [43, 155, 270, 274, 278, 366, 803, 860], "surfaceregandtempl": 43, "depict": [43, 265, 266, 271, 277, 279, 785, 808, 860], "success": [43, 144, 255, 263, 264, 270, 271, 274, 275, 277, 278, 279, 359, 475, 533, 534, 583, 647, 684, 685, 687, 688, 699, 700, 712, 720, 735, 766, 837], "inflat": [43, 48, 49, 54, 55, 59, 60, 125, 135, 151, 175, 191, 243, 270, 274, 278, 408, 745, 761, 803, 843, 860, 878], "overlaid": [43, 44, 134, 136, 172, 255, 646, 860, 878], "tommi": [43, 44, 878], "clausner": [43, 44, 878], "sample_dir": [43, 44, 115, 158, 172, 175], "fname_src": [43, 135, 159, 182], "fname_fsaverage_src": 43, "fname_stc": [43, 126, 175, 181], "repres": [43, 69, 73, 80, 114, 118, 140, 141, 142, 143, 144, 149, 151, 156, 158, 161, 162, 166, 168, 169, 170, 175, 189, 194, 201, 204, 217, 243, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 276, 277, 278, 279, 296, 297, 353, 357, 358, 368, 369, 370, 409, 416, 443, 452, 453, 472, 474, 475, 477, 478, 493, 498, 501, 510, 523, 535, 557, 571, 609, 611, 685, 697, 700, 745, 762, 785, 788, 790, 792, 803, 804, 808, 833, 837, 853, 857, 860, 863, 878], "itself": [43, 69, 143, 151, 160, 172, 188, 201, 204, 205, 206, 216, 225, 257, 263, 264, 269, 274, 277, 306, 442, 477, 478, 544, 745, 835, 837, 857, 860, 863], "proxim": [43, 135, 267, 692, 878], "src_orig": [43, 274, 277], "3732": [43, 175], "3766": 43, "src_to": [43, 44, 180, 359, 878], "argument": [43, 44, 119, 151, 155, 161, 162, 169, 170, 172, 180, 188, 189, 190, 191, 200, 201, 202, 205, 209, 214, 225, 229, 235, 239, 255, 257, 258, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 302, 303, 304, 305, 306, 307, 308, 311, 313, 315, 316, 318, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 411, 412, 414, 415, 419, 420, 422, 425, 426, 428, 430, 434, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 459, 460, 464, 465, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 512, 513, 514, 515, 516, 517, 519, 520, 521, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 550, 552, 553, 557, 559, 560, 562, 563, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 580, 581, 582, 583, 585, 586, 588, 589, 592, 593, 594, 597, 598, 599, 600, 604, 605, 606, 607, 608, 609, 611, 612, 613, 615, 616, 617, 619, 620, 621, 622, 623, 627, 628, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 642, 645, 646, 648, 649, 650, 651, 661, 662, 665, 667, 668, 669, 670, 671, 672, 673, 679, 684, 685, 686, 687, 688, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 715, 716, 719, 720, 724, 725, 727, 728, 729, 730, 733, 734, 735, 740, 741, 742, 743, 744, 745, 746, 753, 760, 761, 765, 767, 770, 773, 776, 777, 778, 779, 780, 782, 785, 788, 789, 790, 795, 796, 797, 798, 799, 801, 802, 803, 804, 806, 808, 809, 810, 814, 818, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 853, 863, 866, 878], "special": [43, 160, 169, 205, 214, 240, 370, 485, 492, 841, 859, 860, 866, 878], "alwai": [43, 72, 143, 144, 149, 151, 160, 167, 168, 169, 175, 190, 198, 200, 201, 202, 203, 204, 205, 206, 207, 214, 220, 225, 240, 261, 263, 264, 268, 270, 271, 273, 274, 276, 277, 278, 279, 317, 433, 443, 508, 557, 576, 615, 617, 684, 698, 753, 763, 773, 774, 804, 806, 815, 825, 833, 837, 860, 863, 864, 878], "10239": 43, "10240": 43, "10241": 43, "give": [43, 44, 59, 69, 73, 94, 142, 152, 161, 168, 171, 180, 182, 195, 199, 201, 202, 205, 225, 255, 260, 263, 264, 265, 266, 272, 276, 311, 409, 410, 411, 416, 420, 425, 426, 430, 445, 447, 448, 452, 474, 475, 477, 478, 493, 556, 557, 571, 576, 585, 603, 609, 683, 684, 685, 687, 688, 697, 699, 701, 709, 745, 762, 769, 777, 779, 781, 784, 785, 788, 795, 797, 799, 800, 801, 805, 807, 833, 835, 837, 843, 853, 857, 859, 860, 863, 878], "surfer_kwarg": [43, 175, 177], "brain_inf": 43, "under": [43, 44, 60, 126, 143, 144, 162, 189, 195, 198, 201, 205, 221, 225, 227, 233, 263, 264, 265, 266, 269, 270, 271, 273, 274, 277, 278, 279, 281, 311, 323, 353, 354, 356, 358, 376, 377, 378, 379, 381, 382, 389, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 412, 419, 422, 425, 426, 452, 465, 467, 477, 478, 489, 496, 516, 519, 520, 530, 531, 540, 541, 562, 569, 570, 571, 593, 610, 614, 645, 648, 649, 650, 658, 662, 682, 684, 685, 686, 687, 688, 699, 701, 702, 703, 704, 705, 706, 707, 715, 716, 724, 725, 726, 727, 728, 777, 780, 799, 837, 853, 859, 860, 866, 878], "h5": [43, 44, 172, 180, 222, 270, 271, 273, 274, 275, 277, 278, 279, 287, 556, 595, 697, 698, 700, 717, 719, 730, 820, 821, 878], "respect": [43, 44, 47, 55, 67, 70, 89, 131, 140, 144, 151, 156, 159, 168, 169, 172, 175, 188, 195, 199, 201, 204, 205, 207, 208, 214, 215, 230, 258, 260, 263, 264, 265, 266, 268, 272, 273, 274, 278, 279, 296, 297, 298, 334, 353, 357, 358, 364, 368, 369, 370, 409, 411, 416, 420, 433, 445, 447, 452, 453, 472, 474, 475, 477, 478, 483, 501, 510, 513, 521, 535, 556, 557, 558, 559, 561, 571, 573, 603, 611, 646, 654, 657, 659, 665, 685, 697, 699, 701, 716, 724, 725, 727, 728, 745, 761, 762, 766, 769, 775, 777, 779, 784, 785, 788, 789, 792, 797, 798, 800, 805, 807, 809, 837, 840, 843, 853, 857, 860, 863, 878], "my": [43, 44, 172, 182, 220], "read_source_morph": [43, 44, 275, 868], "further": [43, 141, 151, 157, 166, 168, 178, 188, 195, 200, 204, 206, 209, 214, 225, 230, 235, 240, 263, 264, 288, 290, 319, 364, 557, 561, 684, 685, 687, 688, 700, 760, 776, 849, 855, 859, 860, 878], "assign": [43, 45, 100, 102, 119, 136, 140, 143, 144, 151, 161, 168, 170, 175, 178, 188, 189, 206, 209, 215, 220, 257, 263, 268, 273, 276, 467, 469, 485, 489, 492, 494, 499, 501, 510, 519, 557, 573, 574, 577, 578, 580, 581, 607, 641, 745, 767, 828, 853, 860, 863, 878], "chain": [43, 167, 195, 199, 214, 415, 855, 860], "handi": [43, 190, 204], "liner": 43, "shortest": [43, 156, 201, 263, 264, 265, 266, 411, 420, 445, 447, 448, 477, 478, 562], "dougla": [43, 243, 275, 359], "greve": [43, 243, 275, 359], "lise": [43, 243, 275, 359], "der": [43, 243, 275, 359, 860, 878], "haegen": [43, 243, 275, 359], "qing": [43, 243, 275, 359], "cai": [43, 243, 275, 359], "steven": [43, 58, 125, 144, 151, 201, 243, 274, 275, 359, 409, 535, 654, 659, 854, 878], "stufflebeam": [43, 58, 125, 243, 274, 275, 359, 535, 539, 654, 657, 659], "mert": [43, 243, 275, 359], "sabuncu": [43, 243, 275, 359], "bruce": [43, 93, 155, 243, 275, 359, 524, 860], "fischl": [43, 93, 155, 243, 275, 359, 524, 860], "marc": [43, 243, 275, 359], "brysbaert": [43, 243, 275, 359], "languag": [43, 151, 172, 201, 229, 235, 243, 260, 263, 264, 265, 266, 272, 273, 275, 359, 409, 416, 477, 478, 556, 557, 697, 699, 701, 777, 784, 788, 797, 800, 805, 841, 862, 878], "asymmetri": [43, 243, 275, 359], "1477": [43, 194, 243, 275, 359], "1492": [43, 243, 275, 359, 853], "1162": [43, 243, 275, 359, 557], "jocn_a_00405": [43, 243, 275, 359], "morph_surface_stc": [43, 56], "affin": [44, 134, 156, 180, 182, 275, 359, 366, 621, 629, 733, 734, 735, 818, 833, 860, 878], "nonlinear": [44, 243, 683], "symmetr": [44, 134, 201, 243, 263, 264, 265, 266, 270, 271, 274, 275, 277, 278, 279, 359, 445, 447, 448, 477, 478, 684, 685, 687, 688, 698, 709, 733, 734, 735, 745, 764, 803, 808, 809, 818, 878], "diffeomorph": [44, 134, 243, 275, 359, 733, 734, 735, 818, 878], "sdr": [44, 134, 180, 275, 359, 733, 734, 735, 818, 878], "afterward": [44, 149, 263, 264, 265, 266, 477, 478, 642, 661, 878], "nibabel": [44, 78, 134, 156, 160, 171, 182, 276, 469, 470, 471, 745, 818, 836, 860, 878], "fetch_fsaverag": [44, 124, 134, 135, 159, 180, 190, 854, 868, 878], "plot_glass_brain": [44, 134, 182], "sample_dir_raw": [44, 175], "fname_t1_fsaverag": 44, "ensur": [44, 45, 82, 111, 144, 149, 159, 161, 162, 180, 201, 202, 205, 207, 209, 210, 222, 260, 263, 264, 265, 266, 268, 269, 270, 271, 274, 277, 278, 279, 319, 340, 353, 443, 444, 477, 478, 479, 549, 560, 585, 586, 697, 698, 699, 700, 701, 714, 740, 835, 837, 859, 860, 878], "fname_src_fsaverag": 44, "root": [44, 81, 134, 135, 136, 149, 150, 151, 159, 172, 180, 190, 222, 260, 265, 266, 270, 271, 274, 277, 278, 279, 296, 297, 379, 384, 401, 770, 779, 837, 860, 878], "txt": [44, 134, 135, 159, 180, 183, 215, 216, 257, 329, 338, 384, 480, 484, 501, 603, 611, 612, 823, 835, 837, 857, 878], "zoom": [44, 69, 134, 151, 160, 180, 204, 206, 275, 359, 735, 878], "reslic": [44, 134, 180, 359, 735], "isotrop": [44, 860], "niter_affin": [44, 180, 275, 359, 878], "niter_sdr": [44, 180, 275, 359, 878], "999999888241291": 44, "translat": [44, 134, 135, 156, 160, 180, 189, 209, 233, 255, 263, 264, 265, 266, 349, 364, 409, 416, 430, 488, 557, 561, 585, 697, 735, 745, 761, 776, 781, 784, 789, 792, 863, 878], "optim": [44, 59, 81, 134, 142, 157, 160, 162, 179, 180, 200, 201, 204, 209, 225, 233, 234, 235, 243, 265, 266, 269, 353, 409, 452, 474, 477, 478, 557, 567, 585, 674, 726, 729, 735, 833, 857, 878], "r\u00b2": [44, 134, 180], "rigid": [44, 134, 180, 735], "compute_vol_morph_mat": [44, 275, 359, 878], "equival": [44, 135, 141, 150, 156, 158, 160, 162, 165, 171, 186, 187, 189, 201, 204, 207, 221, 225, 238, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 274, 277, 278, 279, 296, 297, 311, 352, 409, 415, 416, 449, 452, 453, 472, 474, 475, 477, 478, 519, 524, 535, 556, 557, 560, 562, 571, 576, 615, 644, 661, 684, 697, 699, 701, 713, 723, 727, 728, 735, 745, 761, 762, 769, 777, 779, 781, 784, 785, 788, 795, 797, 799, 800, 801, 803, 805, 807, 808, 833, 837, 853, 857, 860, 863, 864, 878], "reus": [44, 73, 137, 265, 266, 697, 781, 860], "exce": [44, 225, 258, 263, 264, 265, 266, 340, 342, 409, 416, 477, 478, 559, 562, 573, 684, 784, 798, 878], "thousand": [44, 100, 205, 226, 243, 359, 392, 854, 878], "nifti1": [44, 275, 278, 279], "img_fsaverag": 44, "t1_fsaverag": 44, "plot_anat": [44, 176], "draw_cross": 44, "overlai": [44, 155, 160, 172, 180, 204, 270, 271, 274, 277, 278, 279, 557, 745, 789, 803, 808, 878], "add_overlai": [44, 745], "brian": [44, 194, 243, 275, 359, 415, 860], "avant": [44, 243, 275, 359], "epstein": [44, 243, 275, 359], "murrai": [44, 151, 243, 275, 359], "grossman": [44, 243, 275, 359], "jame": [44, 201, 243, 275, 359], "gee": [44, 243, 275, 359], "autom": [44, 82, 112, 120, 134, 144, 156, 162, 163, 164, 165, 166, 198, 199, 200, 203, 204, 209, 243, 255, 265, 266, 268, 275, 353, 359, 364, 387, 482, 636, 761, 785, 813, 845, 857, 860, 866, 878], "elderli": [44, 243, 275, 359], "neurodegen": [44, 243, 275, 359], "medic": [44, 59, 205, 206, 243, 254, 275, 359, 474, 475, 524, 860, 865], "media": [44, 243, 275, 359], "2007": [44, 180, 230, 243, 275, 359, 472, 557, 684, 685, 687, 688, 726, 729], "848": [44, 56, 195, 208, 230], "morph_volume_stc": [44, 56], "megin": [45, 156, 585, 878], "program": [45, 151, 161, 172, 255, 261, 263, 264, 265, 266, 268, 273, 306, 468, 469, 477, 478, 557, 699, 701, 773, 775, 792, 798, 801, 837, 841, 842, 843, 844, 860, 862, 863], "offer": [45, 181, 195, 201, 207, 222, 225, 226, 256, 257, 745, 835, 837, 864, 866, 878], "guid": [45, 155, 268, 835, 841, 856, 859, 861, 878], "ecd": [45, 165, 186, 187, 261, 262, 265, 266, 267, 268, 278, 352, 452, 519, 615, 661, 833, 878], "manual": [45, 82, 119, 126, 134, 137, 142, 149, 151, 156, 157, 160, 161, 162, 172, 182, 188, 190, 198, 199, 200, 202, 205, 209, 243, 256, 259, 268, 269, 317, 327, 353, 374, 430, 444, 557, 567, 568, 576, 585, 586, 638, 768, 843, 854, 857, 860, 863, 878], "advantag": [45, 112, 137, 150, 151, 167, 168, 201, 203, 204, 207, 211, 225, 240, 835, 845], "graphic": [45, 134, 155, 189, 263, 264, 273, 469, 477, 478, 557, 775, 792, 798, 837, 841, 843, 844, 854, 878], "read_dipol": [45, 115, 261, 262, 452, 868, 878], "everyth": [45, 103, 111, 126, 134, 135, 159, 160, 169, 178, 182, 191, 201, 214, 265, 266, 783, 835, 837, 839, 854, 855, 857], "read_vectorview_select": [45, 222, 227, 868, 878], "audvi": [45, 854], "evoked_left": [45, 210], "evoked_right": [45, 210], "09989760657919393": [45, 61], "80m": 45, "picks_left": 45, "evoked_fit_left": 45, "cov_fit_left": 45, "picks_right": 45, "evoked_fit_right": 45, "cov_fit_right": 45, "sss": [45, 162, 165, 198, 208, 212, 213, 263, 264, 265, 266, 268, 340, 341, 342, 343, 346, 347, 350, 370, 430, 477, 478, 497, 557, 568, 576, 585, 615, 775, 779, 787, 798, 857, 860, 878], "normalize_proj": [45, 268, 878], "dip_left": 45, "dip_right": 45, "153": [45, 161, 164, 169, 195, 225, 229, 230, 401], "38720": [45, 182], "58607874e": 45, "29495097e": 45, "04486582e": 45, "78988420e": 45, "81501987e": 45, "79536167e": 45, "22800262e": 45, "50545865e": 45, "24472969e": 45, "41763741e": 45, "51116585e": 45, "49899073e": 45, "11191910e": 45, "30776654e": 45, "58725785e": 45, "82015291e": 45, "83338121e": 45, "85132759e": 45, "76790821e": 45, "26581206e": 45, "61643686e": 45, "900": [45, 80, 176, 179, 181, 187, 230], "396": [45, 80, 176, 181, 195, 227, 232, 243, 296], "354": [45, 80, 159, 164, 169, 176, 181, 230], "9828": [45, 878], "152": [45, 169, 190, 208, 229, 230, 239, 276], "69262885e": 45, "19272571e": 45, "91546253e": 45, "01298483e": 45, "64516797e": 45, "19806525e": 45, "33734643e": 45, "87121666e": 45, "27849772e": 45, "17670368e": 45, "61094719e": 45, "47048282e": 45, "57358697e": 45, "03235995e": 45, "14274862e": 45, "19294391e": 45, "09342253e": 45, "00283865e": 45, "12915739e": 45, "54166863e": 45, "75855684e": 45, "9340": [45, 878], "prevent": [45, 69, 119, 199, 209, 255, 510, 562, 585, 662, 818, 878], "lambda": [45, 99, 111, 145, 195, 210, 221, 240, 260, 263, 264, 265, 266, 272, 313, 409, 416, 477, 478, 532, 556, 557, 571, 663, 697, 699, 701, 762, 769, 776, 784, 788, 797, 800, 805, 860, 863], "fulli": [45, 73, 172, 200, 202, 225, 229, 263, 264, 265, 266, 270, 271, 273, 274, 277, 278, 279, 319, 477, 478, 479, 678, 745, 764, 803, 808, 809, 835, 878], "make_forward_dipol": [45, 176, 868, 878], "stc_left": 45, "stc_right": 45, "sharei": [45, 72, 112, 113, 194, 206, 240], "supylabel": 45, "meter": [45, 80, 92, 93, 151, 156, 157, 160, 170, 176, 182, 206, 220, 255, 260, 261, 263, 264, 265, 266, 268, 269, 272, 281, 311, 327, 336, 364, 409, 416, 430, 477, 478, 493, 501, 516, 556, 557, 561, 566, 567, 568, 571, 576, 585, 590, 591, 609, 619, 646, 692, 697, 699, 701, 745, 762, 769, 773, 777, 779, 781, 784, 785, 788, 795, 797, 799, 800, 801, 805, 807, 860, 878], "kb": [45, 50, 137, 143, 176, 181, 207, 220], "161": [45, 169, 204, 225, 230], "7006": 45, "97034e": 45, "stcs_left": 45, "stcs_right": 45, "90m": 45, "amplitudes_left": 45, "amplitudes_right": 45, "vstack": [45, 114, 136, 141, 184, 222], "ampltud": 45, "n_left": 45, "mean_left": 45, "mean_right": 45, "transition_point": 45, "c0": [45, 151, 205], "c1": [45, 69, 111, 151, 205], "text": [45, 67, 126, 134, 135, 142, 151, 160, 177, 183, 188, 189, 191, 201, 202, 205, 206, 215, 216, 225, 240, 255, 263, 264, 276, 331, 477, 478, 501, 612, 662, 745, 823, 837, 841, 853, 860, 878], "226": [45, 56, 144, 169, 184, 225, 229, 230, 878], "610": [45, 80, 208, 230], "multi_dipole_model": [45, 56], "promot": [46, 59], "focal": [46, 59, 82, 180, 557, 745, 813, 878], "assum": [46, 59, 63, 92, 93, 114, 122, 135, 141, 144, 151, 158, 160, 165, 172, 182, 188, 189, 200, 201, 204, 211, 216, 225, 227, 229, 240, 255, 257, 260, 261, 263, 264, 265, 266, 269, 272, 276, 296, 297, 302, 303, 306, 311, 324, 336, 353, 357, 358, 364, 368, 369, 370, 372, 409, 416, 428, 436, 444, 450, 451, 452, 453, 459, 472, 474, 475, 477, 478, 484, 485, 492, 506, 516, 520, 527, 535, 556, 557, 571, 605, 612, 631, 634, 636, 646, 662, 684, 685, 687, 688, 691, 692, 697, 699, 700, 701, 733, 745, 761, 762, 769, 777, 779, 781, 784, 785, 786, 787, 788, 795, 797, 799, 800, 801, 805, 807, 826, 833, 837, 842, 845, 860, 863, 864, 878], "stationar": [46, 59, 448, 477, 478], "properti": [46, 59, 73, 100, 113, 126, 143, 161, 172, 189, 194, 199, 204, 205, 214, 217, 256, 257, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 273, 274, 277, 278, 279, 301, 364, 408, 477, 478, 543, 557, 573, 574, 586, 647, 662, 679, 697, 698, 699, 700, 701, 732, 745, 747, 764, 773, 775, 779, 785, 786, 788, 790, 798, 803, 808, 809, 813, 864, 878], "bias": [46, 69, 151, 166, 180, 199, 201, 206, 229, 243, 453, 878], "short": [46, 59, 65, 81, 102, 111, 113, 126, 136, 137, 140, 160, 168, 172, 198, 201, 205, 206, 208, 210, 216, 226, 238, 240, 243, 263, 264, 265, 266, 477, 478, 494, 590, 593, 699, 701, 702, 705, 712, 713, 716, 720, 723, 833, 837, 860, 861, 878], "transient": [46, 81, 198, 209, 240, 562], "mathurin": [46, 243, 878], "massia": [46, 243, 878], "yousra": [46, 51, 92, 125, 243, 474, 475, 878], "bekhti": [46, 51, 92, 125, 243, 474, 475, 878], "tf_mixed_norm": [46, 59, 474, 868, 878], "350e": [46, 112, 239], "49948803289596966": 46, "301": [46, 111, 113, 169, 191, 208, 238, 240, 242, 863], "16610": 46, "multidict": 46, "l1_ratio": [46, 59, 475, 878], "wsize": [46, 59, 475, 712, 720, 721], "n_tfmxne_it": [46, 475], "dgap": [46, 59], "89e": 46, "p_obj": [46, 59], "289": [46, 99, 101, 111, 149, 169, 194, 208, 225, 229, 230, 243, 415, 557], "000835": 46, "d_obj": [46, 59], "190": [46, 59, 74, 80, 115, 169, 184, 225, 230, 243, 684, 685, 687, 688], "083203": 46, "n_activ": [46, 59, 209, 347], "247": [46, 169, 211, 225, 229, 230, 243, 854], "27e": 46, "253": [46, 169, 225, 229, 230, 243], "327890": 46, "582652": 46, "53e": 46, "707285": 46, "246": [46, 134, 169, 180, 208, 243], "182101": 46, "18e": 46, "589468": 46, "408712": 46, "82e": 46, "243688": 46, "248": [46, 72, 84, 122, 169, 208, 210, 225, 230], "420556": 46, "67e": [46, 59], "094971": 46, "57e": 46, "991067": 46, "49e": [46, 59], "936498": 46, "442467": 46, "08e": 46, "906871": 46, "829870": 46, "70e": 46, "887205": 46, "017223": 46, "24e": 46, "872107": 46, "148583": 46, "11e": 46, "762424": 46, "94e": 46, "854012": 46, "259629": 46, "659": [46, 168, 194], "867870": 46, "46e": 46, "043596": 46, "587841": 46, "87e": 46, "274": [46, 56, 58, 80, 81, 111, 122, 166, 169, 191, 208, 225, 230], "722230": 46, "272": [46, 118, 169, 171, 208, 230, 243, 654, 659], "856399": 46, "29e": 46, "678013": 46, "849283": 46, "335": [46, 108, 111, 169, 228, 230, 232, 243, 860], "966495": 46, "73e": 46, "239": [46, 67, 80, 81, 158, 169, 191, 202, 211], "215341": 46, "236": [46, 169, 183, 229], "481796": 46, "17e": 46, "095509": 46, "238": [46, 169, 208, 226, 229, 230], "178504": 46, "77e": 46, "068507": 46, "591286": 46, "546285": 46, "06e": 46, "223": [46, 126, 129, 169, 195, 225, 230], "133013": 46, "826666": 46, "295": [46, 111, 169, 208, 230], "194637": 46, "debias": [46, 59], "d0": [46, 59], "235933e": 46, "000000e": [46, 59], "irtf": 46, "intern": [46, 69, 70, 82, 126, 132, 136, 160, 168, 170, 183, 190, 199, 206, 209, 227, 243, 263, 264, 265, 266, 311, 353, 358, 364, 388, 409, 430, 477, 478, 492, 497, 554, 557, 565, 566, 567, 568, 576, 585, 615, 683, 684, 697, 698, 699, 700, 701, 745, 791, 837, 878], "workshop": [46, 243, 409], "roland": [46, 243, 475], "badeau": [46, 243, 475], "trento": [46, 243, 475], "7552337": [46, 243, 475], "385": [46, 80, 208, 225, 230], "multidict_reweighted_tfmxn": [46, 56], "plane": [47, 134, 156, 170, 205, 227, 230, 239, 429, 650, 725, 728, 763, 833, 860], "olaf": [47, 48, 49, 50, 54, 55, 100, 243, 539, 654, 659, 878], "hauk": [47, 48, 49, 50, 54, 55, 100, 243, 539, 654, 659, 878], "mrc": [47, 48, 49, 50, 54, 55, 860], "cbu": [47, 48, 49, 50, 54, 55, 860], "cam": [47, 48, 49, 50, 54, 55, 860], "ac": [47, 48, 49, 50, 54, 55, 134, 190, 198, 202, 243, 353, 370, 833, 860], "uk": [47, 48, 49, 50, 54, 55, 243, 353, 860], "rougier": 47, "borrow": [47, 229, 235], "hi": [47, 255], "make_inverse_resolution_matrix": [47, 48, 50, 54, 55, 868, 878], "get_point_spread": [47, 48, 50, 868, 878], "circular_layout": [47, 868], "plot_connectivity_circl": [47, 767], "rm_mne": [47, 54], "n_label": [47, 221, 270, 271, 274, 277, 278, 279, 443, 512, 664], "label_color": [47, 462], "lh_label": [47, 745], "endswith": [47, 170], "label_ypo": 47, "ypo": 47, "yp": 47, "rh_label": [47, 745], "summaris": [47, 211], "five": [47, 142, 150, 171, 183, 208, 217, 243, 340, 477, 478, 557, 745, 790, 860], "princip": [47, 204, 205, 243, 269, 353, 557, 674, 860, 878], "probabl": [47, 69, 165, 188, 198, 199, 200, 201, 204, 205, 225, 227, 230, 240, 413, 419, 438, 477, 478, 489, 745, 802, 835, 837, 842, 843, 844, 860], "n_comp": [47, 533, 534], "stcs_psf_mne": 47, "pca_vars_mn": 47, "return_pca_var": [47, 533, 534], "n_vert": 47, "printopt": 47, "caudalanteriorcingul": 47, "caudalmiddlefront": [47, 89, 94, 135], "cuneu": [47, 745], "entorhin": 47, "frontalpol": 47, "fusiform": 47, "inferiorpariet": [47, 221], "inferiortempor": 47, "insula": 47, "isthmuscingul": 47, "lateraloccipit": 47, "lateralorbitofront": 47, "lingual": 47, "medialorbitofront": 47, "middletempor": 47, "paracentr": 47, "parahippocamp": [47, 67], "parsoperculari": 47, "parsorbitali": 47, "parstriangulari": 47, "pericalcarin": 47, "postcentr": [47, 67], "posteriorcingul": 47, "precentr": [47, 135], "precuneu": 47, "rostralanteriorcingul": 47, "rostralmiddlefront": [47, 221], "superiorfront": [47, 135], "superiorpariet": 47, "superiortempor": 47, "supramargin": 47, "temporalpol": 47, "transversetempor": [47, 221], "overal": [47, 126, 206, 227, 233, 234, 475, 859, 878], "bigger": [47, 80, 126, 234, 477, 478], "leaker": 47, "psfs_mat": 47, "pearson": [47, 201, 204, 243, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 557, 697, 700], "arbitrari": [47, 114, 160, 165, 166, 167, 171, 201, 220, 223, 227, 230, 260, 261, 262, 263, 264, 265, 266, 270, 271, 272, 274, 277, 278, 279, 409, 416, 477, 478, 494, 557, 574, 578, 684, 685, 687, 688, 697, 699, 700, 701, 777, 784, 791, 797, 805, 859, 860, 878], "absolut": [47, 60, 81, 85, 122, 128, 135, 151, 179, 189, 225, 258, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 357, 409, 477, 478, 480, 533, 534, 539, 557, 573, 597, 646, 658, 690, 697, 700, 763, 769, 789, 809, 833, 837, 843, 878], "leakage_mn": 47, "node_ord": [47, 750], "mirror": [47, 69, 170, 263, 264, 265, 266, 270, 274, 278, 279, 447, 448, 449, 477, 478, 760, 764, 803, 809, 866, 878], "node_angl": [47, 750], "start_po": [47, 750], "group_boundari": [47, 750], "subplot_kw": 47, "n_line": 47, "node_color": 47, "neighbour": [47, 260, 263, 264, 265, 266, 272, 409, 416, 477, 478, 556, 557, 571, 697, 699, 701, 777, 784, 788, 797, 800, 805, 807, 878], "deeper": [47, 54, 55, 180, 860], "versu": [47, 141, 151, 166, 215, 222, 298, 845], "fname_fig": 47, "plot_label_leakag": 47, "savefig": [47, 114], "inde": [47, 69, 141, 168, 175, 205, 206, 240, 835], "max_val": 47, "brain_lh": 47, "caudal": [47, 89, 94, 745], "pos_lim": [47, 54, 55, 180, 221, 233, 270, 271, 274, 277, 278, 279, 764, 803, 808, 809], "brain_rh": 47, "851": [47, 56, 230], "psf_ctf_label_leakag": [47, 56], "get_cross_talk": [48, 49, 868, 878], "fname_evo": [48, 49, 50, 54, 55, 64], "regularis": [48, 54, 55, 536], "rm_lor": 48, "stc_psf": 48, "stc_ctf": 48, "31738": [48, 54, 55], "68644e": [48, 54, 55], "vertno_lh": 48, "verttru": [48, 49], "maxima": [48, 145, 265, 266, 594, 782, 784, 878], "vert_max_psf": 48, "vert_max_ctf": 48, "brain_psf": 48, "ventral": [48, 745], "add_foci": [48, 49, 50, 160, 175, 177, 222, 745, 878], "coords_as_vert": [48, 49, 50, 175, 177, 222, 745], "22842778": 48, "2956258": 48, "85246681": 48, "brain_ctf": 48, "10932369": 48, "16149934": 48, "93351158": 48, "433": [48, 56, 208, 225, 230], "psf_ctf_vertic": [48, 56], "make_lcmv_resolution_matrix": [49, 868, 878], "vi": [49, 150, 230, 263, 769], "cov_pr": 49, "post": [49, 119, 134, 180, 201, 206, 209, 833, 837, 843, 844, 856, 857, 859], "cov_post": 49, "4433": 49, "filters_pr": 49, "weight_norm": [49, 180, 222, 296, 297, 878], "filters_post": 49, "rm_pre": 49, "stc_pre": 49, "rm_post": 49, "stc_post": 49, "brain_pr": 49, "ndata": 49, "brain_post": 49, "438": [49, 54, 55], "psf_ctf_vertices_lcmv": [49, 56], "coars": 50, "don": [50, 94, 114, 116, 119, 134, 141, 144, 145, 146, 157, 158, 159, 162, 168, 171, 199, 202, 204, 205, 206, 214, 227, 228, 229, 230, 235, 240, 255, 258, 263, 264, 371, 488, 489, 546, 586, 602, 609, 611, 646, 684, 687, 837, 838, 843, 845, 857, 859, 861, 878], "src_vol": 50, "forward_vol": 50, "3375": 50, "1045": [50, 208], "895": [50, 230], "015000": [50, 207], "860": [50, 80, 208, 230], "304": [50, 108, 111, 123, 150, 169, 171, 184, 195, 226, 878], "158": [50, 169, 208, 225, 230, 233, 237], "488": [50, 225, 230], "403": [50, 80, 230], "255": [50, 113, 126, 160, 169, 225, 229, 230, 240, 270, 271, 274, 277, 278, 279, 745, 764, 803, 808, 809], "492": [50, 230], "inverse_operator_vol": 50, "rm_lor_vol": 50, "sources_vol": 50, "stc_psf_vol": 50, "383": [50, 80, 230], "140193": 50, "7904e": 50, "66519": 50, "31885e": 50, "1209": 50, "verttrue_vol": 50, "max_vert_idx": 50, "unravel_index": [50, 181, 227], "vert_max_ctf_vol": 50, "brain_psf_vol": 50, "plot_3d": [50, 135, 180, 278, 279, 878], "volume_opt": [50, 270, 271, 274, 277, 278, 279, 745, 803, 808], "32501698": 50, "38884743": 50, "87974682": 50, "237": [50, 56, 169, 208, 225, 230], "psf_volum": [50, 56], "recurs": [51, 160, 201, 243, 255, 270, 274, 278, 299, 645, 803], "rap_mus": [51, 56, 452, 868, 878], "n100": [51, 166, 191, 201, 206], "1834": [51, 194], "ori": [51, 176, 180, 183, 185, 222, 261, 296, 297, 429, 452], "2470324143277338": 51, "7764326014559829": 51, "5797649538112025": 51, "5304": 51, "5154591814700811": 51, "5345116895021849": 51, "6697753996853825": 51, "332": [51, 105, 108, 111, 169, 191, 208, 243, 299], "1999": [51, 111, 240, 243, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 299, 353, 477, 478, 557, 583, 697, 700, 860], "740118": [51, 243, 299], "inv_fnam": 52, "fmri": [52, 195, 243, 474, 475, 524, 833, 854, 860, 863], "fmri_prior": 52, "rr": [52, 160, 161, 175, 178, 276, 341, 343, 344, 345, 628, 631, 646, 666, 826, 863], "use_tri": [52, 160, 276, 863], "8192": [52, 182, 185, 408], "617": [52, 56, 134, 139], "read_invers": [52, 56], "nb": [53, 477, 478], "535": [53, 56, 230], "read_stc": [53, 56], "localis": [54, 55, 185, 225, 226, 243, 539, 684, 685, 687, 688], "mimic": [54, 55, 410, 433, 524], "resolution_metr": [54, 55, 56, 868, 878], "ple": [54, 55, 539], "sd": [54, 55, 134, 240, 659, 699, 701], "ple_mne_psf": 54, "peak_err": [54, 55, 539], "sd_mne_psf": 54, "sd_ext": [54, 55, 539], "rm_dspm": 54, "ple_dspm_psf": 54, "sd_dspm_psf": 54, "brain_ple_mn": 54, "brain_ple_dspm": 54, "subtract": [54, 55, 65, 69, 72, 106, 112, 119, 133, 141, 151, 176, 201, 207, 209, 225, 227, 255, 258, 259, 263, 264, 265, 266, 269, 270, 271, 273, 274, 277, 278, 279, 286, 296, 297, 352, 353, 357, 358, 368, 369, 370, 409, 416, 417, 452, 453, 472, 474, 475, 477, 478, 479, 535, 540, 541, 557, 558, 573, 585, 615, 616, 639, 642, 684, 687, 697, 700, 785, 805, 833, 860, 863, 878], "diff_pl": [54, 55], "brain_ple_diff": [54, 55], "superfici": [54, 180, 860], "brain_sd_mn": 54, "brain_sd_dspm": 54, "diff_sd": [54, 55], "brain_sd_diff": [54, 55], "wors": [54, 171, 585, 853], "distinguish": [54, 71, 151, 172, 195, 198, 199, 200, 203, 204, 206, 214, 360, 833, 878], "stenroo": [54, 55, 243, 539, 654, 659], "matthia": [54, 55, 243, 539, 878], "treder": [54, 55, 243, 539], "kit": [54, 55, 170, 171, 184, 225, 243, 268, 337, 345, 430, 501, 520, 539, 568, 576, 585, 611, 860, 868, 869, 878], "biorxiv": [54, 55, 222, 243, 296, 297, 539], "2019": [54, 55, 65, 74, 141, 194, 207, 210, 225, 230, 243, 539, 572, 592, 684, 685, 687, 688, 711, 713, 723, 726, 727, 729, 836, 843], "1101": [54, 55, 113, 222, 243, 296, 297, 539], "672956": [54, 55, 243, 539], "379": [54, 56, 80, 230], "resolution_matrix": 55, "spatial_resolut": 55, "fname_fwd_emeg": 55, "forward_emeg": 55, "forward_meg": 55, "pick_types_forward": [55, 67, 91, 283, 284, 868], "inv_emeg": 55, "inv_meg": 55, "63485": 55, "05542e": 55, "rm_emeg": 55, "ple_psf_emeg": 55, "sd_psf_emeg": 55, "rm_meg": 55, "ple_psf_meg": 55, "sd_psf_meg": 55, "brain_ple_emeg": 55, "emeg": [55, 866], "brain_ple_meg": 55, "bring": [55, 69, 156, 181, 204, 216, 268, 278, 279, 430, 568, 576, 585, 809, 860, 863], "brain_sd_emeg": 55, "brain_sd_meg": 55, "resolution_metrics_eegmeg": [55, 56], "840": [56, 80, 230], "auto_examples_invers": 56, "vector_mne_solut": [56, 60], "362": [56, 60, 80, 169, 194, 221, 226, 230], "609": [56, 151, 230, 243], "437": [56, 83, 137, 183, 230], "148": [56, 169, 195, 225, 230], "time_frequency_mixed_norm_invers": [56, 59], "328": [56, 59, 111, 112, 120, 162, 169, 208, 230, 243, 265, 266, 353, 785, 857], "251": [56, 59, 169, 195, 211, 229, 477, 478], "392": [56, 80, 225, 230], "source_space_snr": [56, 58], "445": [56, 136, 225], "135": [56, 117, 124, 151, 158, 169, 201, 205, 206, 207, 213, 225, 243, 276, 860], "snr_estim": [56, 57], "351": [56, 57, 80, 96, 101, 111, 169, 208, 225, 230], "plot_snr_estim": [57, 868, 878], "padma": [58, 243, 572, 878], "sundaram": [58, 243, 572, 878], "tottochan": 58, "kaisu": [58, 878], "lankinen": [58, 878], "klankinen": 58, "inv_op": [58, 221], "snr_stc": [58, 274], "estimate_snr": [58, 274, 868, 878], "maxidx": 58, "med": [58, 93, 136, 166, 195, 221], "viridi": [58, 100, 126, 136, 143, 225, 698, 787], "70263": [58, 178], "18949e": [58, 178], "evoked_eeg": [58, 149, 206], "inv_op_eeg": 58, "stc_eeg": 58, "snr_stc_eeg": 58, "118742": [58, 89], "155292": [58, 89], "81981": 58, "0644e": 58, "goldenholz": [58, 243, 274], "seppo": [58, 243, 274, 535, 654, 659], "ahlfor": [58, 243, 274, 430, 535, 654, 659], "dahlia": [58, 243, 274], "sharon": [58, 243, 274], "mamiko": [58, 243, 274], "ishitobi": [58, 243, 274], "lucia": [58, 125, 243, 274], "vaina": [58, 125, 243, 274], "magnetoencephalographi": [58, 157, 178, 243, 274, 657, 726, 729, 860], "1086": [58, 208, 243, 274], "1002": [58, 83, 178, 194, 238, 243, 263, 264, 265, 266, 274, 477, 478, 593, 650, 686, 699, 701, 709, 715, 853], "hbm": [58, 178, 243, 274, 686, 853], "20571": [58, 243, 274], "built": [59, 140, 150, 151, 157, 159, 165, 166, 167, 175, 181, 202, 204, 210, 214, 218, 219, 225, 261, 263, 264, 265, 266, 268, 303, 327, 328, 337, 365, 438, 460, 461, 469, 477, 478, 516, 520, 582, 632, 665, 692, 701, 734, 745, 761, 837, 843, 849, 857, 858, 878], "fourier": [59, 102, 201, 238, 240, 243, 263, 264, 265, 266, 477, 478, 699, 701, 702, 705, 709, 712, 713, 715, 716, 720, 723, 724, 725, 727, 728], "stft": [59, 475, 712, 721, 833, 868, 878], "henc": [59, 113, 142, 150, 156, 162, 175, 190, 203, 206, 214, 225, 238, 240, 261, 262, 263, 264, 265, 266, 270, 271, 273, 274, 277, 278, 279, 477, 478, 697, 700, 758, 833, 844, 857], "trap": 59, "minima": [59, 594], "pick_channels_evok": 59, "slightli": [59, 69, 126, 160, 180, 184, 201, 206, 209, 210, 220, 229, 263, 264, 265, 266, 269, 358, 477, 478, 527, 535, 674, 745, 782, 853, 854, 860, 878], "eventu": [59, 136, 317, 328, 575, 837, 853], "020865": [59, 93, 178, 222], "96729": 59, "38524e": 59, "985": [59, 214, 219, 230], "descent": [59, 243, 474, 878], "4411": 59, "845726": 59, "4408": [59, 184, 191], "353441": 59, "4410": 59, "859492": 59, "292946": 59, "51e": 59, "670058": 59, "519426": 59, "61e": 59, "669663": 59, "668049": 59, "546629e": 59, "049948803289596964": [59, 94, 179, 181], "2996928197375818": [59, 140, 149, 151, 227], "10e": [59, 67, 89, 94], "15e": 59, "20e": [59, 263, 264, 273, 477, 478, 775, 798], "medial": [59, 235, 684, 685, 745], "yellow": [59, 206, 265, 266, 760, 779, 796], "scalar_thresh": [59, 745], "stationari": [59, 79, 204, 206, 243, 346, 475, 853], "410": [59, 70, 80, 82, 95, 128, 194, 198, 202, 206, 217, 230, 238, 243, 475], "422": [59, 208, 225, 243, 475], "051": [59, 140, 142, 149, 169, 199, 222, 243, 475], "sparsiti": [59, 243, 475, 657], "g\u00e1bor": [59, 243, 475], "sz\u00e9keli": [59, 243, 475], "horst": [59, 243, 475], "hahn": [59, 243, 475], "editor": [59, 191, 243, 331, 472, 475, 557, 726, 729, 837, 841, 855], "6801": [59, 243, 475], "page": [59, 134, 172, 201, 217, 243, 263, 264, 328, 386, 475, 477, 478, 557, 713, 723, 724, 726, 727, 729, 745, 775, 798, 835, 837, 838, 841, 843, 844, 849, 852, 853, 856, 857, 858, 859, 860, 861, 878], "611": [59, 243, 353, 475], "springer": [59, 222, 243, 296, 297, 386, 475, 557], "berlin": [59, 222, 243, 296, 297, 475], "heidelberg": [59, 222, 243, 296, 297, 475], "1007": [59, 151, 205, 206, 207, 222, 243, 296, 297, 409, 475, 524, 557, 572, 662, 860], "978": [59, 112, 151, 201, 204, 222, 230, 243, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 296, 297, 353, 475, 477, 478, 557, 679, 697, 700], "22092": [59, 243, 475], "0_49": [59, 243, 475], "magnitud": [60, 63, 69, 111, 112, 135, 142, 145, 149, 150, 166, 168, 178, 180, 198, 199, 201, 215, 222, 233, 234, 271, 277, 279, 353, 409, 430, 453, 532, 562, 568, 576, 585, 594, 689, 786, 808, 835, 857, 878], "accomplish": [60, 134, 135, 149, 161, 171, 835, 843, 853, 854, 860], "plot_vector_source_estim": [60, 810, 868, 878], "hood": [60, 126, 143, 189, 198, 201, 205, 878], "plot_source_estim": [60, 745, 810, 868, 878], "instruct": [60, 115, 161, 189, 210, 468, 835, 836, 837, 838, 839, 841, 842, 843, 844, 848, 851, 857, 863, 878], "impos": [60, 194, 200, 878], "underli": [60, 160, 166, 201, 205, 225, 226, 238, 243, 257, 261, 262, 263, 264, 265, 266, 269, 270, 271, 274, 277, 278, 279, 409, 477, 478, 483, 578, 697, 700, 735, 878], "getter": [60, 177, 878], "peak_tim": [60, 175], "get_peak": [60, 126, 149, 151, 175, 177, 178, 180, 265, 266, 270, 271, 274, 277, 278, 279, 878], "time_dil": [60, 135, 136, 177, 181, 745], "framer": [60, 135, 136, 177, 181, 745], "95048065": 60, "56941314": 60, "72451438": 60, "stc_max": 60, "cosin": [60, 89, 201, 220, 652, 860], "source_nn": [60, 267, 296, 297, 863], "brain_max": 60, "975978731472672": 60, "90575168": 60, "52414196": 60, "71336747": 60, "brain_norm": 60, "83607509": 60, "44726242": 60, "57923594": 60, "lot": [60, 69, 126, 152, 158, 160, 166, 169, 199, 201, 203, 204, 205, 210, 214, 216, 358, 364, 428, 459, 605, 634, 636, 826, 837], "fname_inv_fix": 60, "inv_fix": 60, "stc_fix": 60, "brain_fix": [60, 178], "00351751": 60, "62842071": 60, "43519503": 60, "pars": [61, 140, 151, 165, 171, 173, 174, 190, 200, 215, 256, 257, 268, 282, 438, 450, 457, 477, 485, 492, 493, 499, 547, 612, 833, 878], "elekta": [61, 83, 156, 165, 186, 187, 209, 256, 260, 261, 263, 264, 265, 266, 268, 273, 301, 353, 429, 450, 452, 477, 478, 521, 761, 773, 775, 785, 798, 813, 849, 854, 860, 863, 878], "triux": [61, 183, 256, 263, 264, 265, 266, 388, 477, 478, 554, 697, 699, 700, 701, 854, 860], "dacq": [61, 256, 854], "acquisit": [61, 156, 160, 168, 188, 189, 190, 191, 206, 214, 243, 256, 257, 263, 264, 265, 266, 268, 282, 450, 477, 478, 479, 576, 585, 599, 662, 833, 849, 853, 860, 863, 878], "accordingli": [61, 134, 150, 158, 178, 189, 214, 258, 263, 264, 265, 266, 468, 477, 478, 485, 492, 497, 586, 860, 878], "multimod": [61, 137, 243, 864, 868, 878], "multimodal_raw": 61, "grad_ssp_upright": 61, "mag_ssp_upright": 61, "v4": [61, 208, 209], "v5": [61, 208, 209], "183600": 61, "576599": 61, "categori": [61, 111, 145, 256, 334, 616, 742, 860, 861, 878], "acqpars": [61, 256, 477, 878], "acqparserfif": [61, 268, 477, 868, 878], "get_condit": [61, 256], "plot_topo": [61, 150, 152, 166, 217, 238, 239, 263, 264, 265, 266, 320, 477, 478, 697, 699, 701, 878], "background_color": [61, 131, 265, 266, 783, 878], "cat": [61, 111], "flat": [61, 82, 110, 135, 140, 141, 150, 181, 199, 200, 201, 205, 206, 207, 209, 256, 258, 263, 264, 270, 274, 278, 356, 358, 557, 559, 569, 570, 573, 574, 576, 683, 745, 803, 833, 853, 878], "fiff": [61, 114, 156, 160, 263, 264, 267, 273, 276, 477, 478, 481, 494, 508, 509, 557, 569, 570, 731, 753, 854, 878], "fname_out": [61, 753], "write_evok": [61, 149, 265, 266, 440, 615, 857, 868, 878], "0812": [61, 169], "0123": [61, 145, 166, 169, 214], "0942": [61, 169], "2232": [61, 169, 334], "newcat": 61, "longer": [61, 113, 145, 162, 167, 168, 172, 191, 199, 200, 201, 202, 204, 225, 240, 263, 264, 265, 266, 268, 340, 433, 444, 448, 450, 477, 478, 559, 585, 700, 724, 725, 727, 728, 745, 755, 775, 778, 837, 843, 857, 860, 878], "ref": [61, 122, 151, 255, 745, 761, 837, 878], "reqev": [61, 256], "requir": [61, 78, 108, 134, 135, 136, 140, 142, 144, 150, 156, 158, 161, 162, 166, 168, 170, 172, 182, 189, 190, 191, 195, 198, 201, 202, 204, 207, 209, 211, 214, 220, 222, 225, 226, 229, 233, 255, 256, 260, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 281, 296, 297, 302, 307, 311, 353, 354, 355, 356, 358, 359, 362, 384, 408, 409, 411, 412, 416, 418, 419, 422, 425, 426, 447, 448, 450, 452, 465, 467, 470, 471, 476, 477, 478, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 512, 516, 517, 519, 520, 527, 530, 531, 540, 541, 556, 557, 559, 562, 569, 570, 571, 579, 586, 594, 603, 640, 645, 648, 649, 650, 662, 684, 685, 686, 687, 688, 693, 697, 699, 701, 702, 703, 704, 705, 706, 707, 715, 716, 724, 725, 726, 727, 728, 739, 745, 762, 768, 775, 777, 780, 784, 788, 792, 797, 798, 799, 800, 803, 805, 807, 808, 814, 833, 835, 838, 841, 842, 853, 854, 859, 860, 866, 878], "reqwithin": [61, 256], "reqwhen": [61, 256], "freeli": 61, "elekta_epoch": [61, 66], "scratch": [63, 140, 149, 165, 188, 190, 191, 214, 223, 224, 240, 264, 265, 266, 268, 372, 478, 701, 716], "exampleio": 63, "fake": [63, 69, 78, 159, 182], "won": [63, 78, 151, 205, 206, 216, 229, 243, 263, 264, 265, 266, 359, 477, 478, 557, 615, 697, 699, 700, 701, 735], "consult": [63, 201, 205, 585, 837, 842, 843, 853, 857, 859, 860], "reader": [63, 166, 175, 188, 205, 214, 329, 476, 483, 485, 486, 487, 489, 492, 495, 497, 499, 500, 501, 503, 504, 505, 506, 507, 609, 611, 613, 860, 864, 878], "fakedata": 63, "nof": 63, "lazi": 63, "analogsign": 63, "multichannel": [63, 69, 111, 151, 195, 209, 243, 430, 565, 568, 585], "sampling_r": 63, "misc": [63, 65, 78, 79, 80, 81, 114, 134, 135, 137, 149, 169, 178, 182, 183, 185, 188, 189, 191, 214, 220, 263, 264, 265, 266, 273, 310, 326, 345, 372, 442, 477, 478, 485, 487, 489, 492, 494, 499, 503, 554, 697, 699, 700, 701, 769, 775, 779, 781, 783, 798, 854, 868, 878], "show_scrollbar": [63, 74, 151, 204, 210, 220, 263, 264, 477, 478, 557, 775, 792, 798, 878], "100000": [63, 446], "99999": [63, 438], "020": [63, 66, 80, 127, 140, 149, 169, 222], "read_neo_format": [63, 66], "ev_info": 64, "15972": 64, "27235589e": 64, "79818505e": 64, "12852747e": 64, "85348042e": 64, "02846360e": 64, "26727393e": 64, "33468523e": 64, "80261790e": 64, "33583009e": 64, "93161055e": 64, "35199238e": 64, "79073915e": 64, "09498615e": 64, "16924072e": 64, "93873875e": 64, "40677185e": 64, "27444183e": 64, "08634620e": 64, "59818134e": 64, "51070563e": 64, "53708918e": 64, "read_noise_covariance_matrix": [64, 66], "analyz": [65, 70, 140, 165, 168, 180, 195, 198, 199, 201, 202, 209, 215, 216, 225, 243, 263, 264, 435, 560, 566, 680, 834, 837, 853, 860, 878], "pabr": 65, "maddox": [65, 243, 878], "lab": [65, 67, 856, 866], "clemen": [65, 111, 865, 878], "brunner": [65, 111, 865, 878], "pyxdf": [65, 189], "p001_se": 65, "s004_task": 65, "default_run": 65, "001_eeg_a2": 65, "stream": [65, 189, 199, 202, 878], "header": [65, 112, 122, 156, 160, 182, 189, 191, 265, 266, 296, 297, 338, 353, 357, 358, 368, 369, 370, 409, 416, 452, 453, 472, 474, 475, 476, 484, 487, 489, 503, 505, 506, 535, 785, 878], "load_xdf": 65, "time_seri": 65, "assert": [65, 108, 140, 144, 149, 156, 171, 191, 215, 222, 225, 227, 859, 878], "four": [65, 69, 141, 144, 151, 166, 185, 201, 225, 235, 243, 260, 263, 264, 265, 266, 272, 409, 416, 477, 478, 556, 557, 571, 697, 699, 701, 745, 762, 777, 784, 788, 797, 800, 805, 807, 853, 860, 861], "plu": [65, 166, 168, 172, 177, 182, 201, 204, 206, 208, 229, 268, 716, 844, 855, 860, 863, 878], "rerefer": 65, "bipolar": [65, 191, 203, 204, 225, 263, 264, 265, 266, 477, 478, 639, 642, 878], "subselect": [65, 115, 143, 149, 150, 151, 166, 214, 227, 230, 238, 240, 261, 262, 263, 264, 265, 266, 268, 270, 271, 274, 277, 278, 279, 369, 477, 478, 697, 698, 699, 700, 775, 857, 878], "uv": [65, 263, 264, 265, 266, 477, 478, 878], "preamp": 65, "nominal_sr": 65, "2320128": 65, "2320127": 65, "232": [65, 144, 169, 229, 230], "013": [65, 127, 140, 141, 149, 151, 169, 222], "melissa": [65, 243], "polonenko": [65, 243], "ross": [65, 243, 878], "brainstem": [65, 243], "hear": [65, 243, 589], "2331216519871395": [65, 243], "1177": [65, 100, 226, 243, 392, 854], "read_xdf": [65, 66], "858": [66, 230], "auto_examples_io": 66, "facilit": [67, 111, 135, 136, 167, 190, 195, 226, 263, 264, 265, 266, 477, 478, 697, 699, 700, 701, 853, 860, 863, 878], "subcort": [67, 243, 572, 878], "simul": [67, 69, 79, 90, 104, 105, 140, 149, 161, 176, 188, 190, 200, 201, 214, 220, 230, 233, 234, 235, 240, 243, 260, 263, 264, 265, 266, 267, 268, 269, 274, 276, 286, 353, 372, 450, 477, 478, 482, 510, 513, 519, 523, 524, 535, 554, 555, 589, 606, 612, 617, 619, 620, 623, 697, 699, 700, 701, 710, 724, 727, 728, 729, 745, 749, 804, 854, 868, 878], "samuelsson": [67, 243, 572, 878], "johnsam": 67, "mit": [67, 70, 151, 243, 472, 566, 848, 854, 860], "simulate_sparse_stc": [67, 91, 92, 661, 662, 664, 868, 878], "simulate_evok": [67, 91, 176, 221, 519, 662, 663, 664, 868, 878], "all_label": 67, "select_label": 67, "hiplab": 67, "postcenlab": 67, "cortical_waveform": 67, "waveform": [67, 98, 201, 203, 206, 210, 243, 271, 277, 279, 647, 649, 663, 664, 683, 804, 844], "pi": [67, 89, 92, 93, 94, 113, 201, 206, 220, 221, 222, 532, 594, 663, 713, 721, 723, 727, 860], "subcortical_waveform": 67, "data_fun": [67, 91, 92, 93, 663], "isin": [67, 111, 144], "evoked_subcort": [67, 572], "cortical_signal_suppress": [67, 868, 878], "n_proj": [67, 572], "fft": [67, 107, 132, 201, 238, 240, 263, 264, 265, 266, 417, 421, 422, 477, 478, 530, 540, 541, 698, 702, 703, 704, 705, 706, 707, 709, 716, 722, 724, 725, 726, 727, 728, 729, 799, 878], "rfft": 67, "psd_proc": 67, "transax": 67, "footbibliographi": [67, 837], "197": [67, 84, 137, 139, 169, 225, 229, 230, 854], "put": [68, 115, 122, 126, 141, 144, 155, 156, 161, 170, 172, 182, 183, 185, 194, 201, 204, 214, 220, 221, 222, 225, 265, 266, 269, 384, 745, 779, 837, 842, 878], "earli": [68, 69, 141, 172, 199, 201, 240, 243, 258, 263, 264, 265, 266, 477, 478, 517, 608], "button": [68, 70, 93, 120, 127, 134, 140, 142, 144, 152, 156, 161, 166, 168, 191, 198, 200, 205, 215, 216, 217, 260, 263, 264, 265, 266, 272, 273, 409, 416, 435, 477, 478, 556, 557, 697, 699, 701, 775, 776, 777, 779, 781, 784, 788, 797, 798, 799, 800, 805, 837, 854, 878], "press": [68, 70, 112, 120, 127, 134, 140, 142, 144, 151, 152, 156, 161, 166, 168, 172, 191, 198, 200, 215, 216, 217, 243, 263, 264, 353, 435, 448, 472, 477, 478, 557, 566, 775, 790, 792, 798, 854, 878], "590": [68, 80, 230], "millisecond": [68, 81, 111, 140, 145, 149, 168, 214, 233, 234, 235, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 435, 477, 478, 697, 700, 745, 803, 808, 878], "late": [68, 162, 857], "quickli": [68, 165, 166, 194, 204, 205, 216, 861, 878], "slowli": 68, "define_target_ev": [68, 84, 127, 868], "quick": [68, 72, 92, 134, 183, 198, 239, 522, 837], "reference_id": [68, 127, 435], "smilei": [68, 70, 93, 152, 166, 168, 215, 854], "target_id": [68, 127, 435], "new_id": [68, 127, 435, 522], "hit": [68, 240, 260, 263, 264, 265, 266, 272, 409, 416, 477, 478, 556, 557, 697, 699, 701, 776, 777, 781, 784, 788, 797, 800, 805, 878], "fill_na": [68, 435], "fill": [68, 221, 269, 274, 276, 277, 359, 435, 465, 477, 478, 579, 664, 693, 745, 878], "events_": 68, "besid": [68, 200, 205], "tmin_": 68, "tmax_": 68, "8522": [68, 878], "10649": 68, "12859": 68, "14830": 68, "16850": 68, "18826": 68, "21224": 68, "23200": 68, "25272": 68, "27243": 68, "29525": 68, "31530": 68, "33481": 68, "35611": 68, "38007": 68, "566": 68, "08643728": 68, "78723509": 68, "352": [68, 80, 169, 171, 194, 208, 225, 230], "97154325": 68, "63138369": 68, "20930939": 68, "579": [68, 195], "40611816": 68, "512": [68, 71, 230, 273, 276, 408], "80771377": 68, "ft": [68, 142, 145, 166, 200, 206, 239, 255, 260, 263, 264, 265, 266, 270, 271, 272, 274, 277, 278, 279, 409, 416, 477, 478, 513, 556, 557, 571, 576, 697, 699, 701, 762, 776, 777, 779, 781, 784, 788, 797, 800, 805, 806, 807, 833, 860], "096": [68, 84, 226], "conduct": [69, 70, 100, 151, 158, 191, 225, 226, 227, 229, 243, 255, 514, 521, 654, 659, 833, 837, 853, 856, 860, 863, 878], "undesir": [69, 203, 557, 878], "otherwis": [69, 82, 119, 144, 151, 162, 172, 188, 200, 201, 230, 233, 235, 257, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 287, 296, 297, 301, 311, 323, 336, 353, 357, 358, 359, 368, 369, 370, 384, 402, 409, 416, 444, 447, 448, 452, 453, 467, 472, 474, 475, 477, 478, 487, 522, 523, 524, 530, 535, 556, 557, 571, 603, 612, 634, 635, 637, 643, 646, 663, 682, 683, 697, 699, 700, 701, 709, 721, 732, 735, 745, 761, 762, 769, 773, 775, 776, 777, 779, 780, 781, 782, 783, 784, 785, 788, 795, 797, 798, 799, 800, 801, 803, 804, 805, 807, 808, 823, 835, 837, 860, 878], "introduct": [69, 89, 94, 151, 230, 238, 240, 243, 273, 862], "smear": [69, 79, 80, 142, 201, 240, 584, 724, 725, 727, 728, 878], "unfortun": [69, 162, 845, 857], "brigd": 69, "far": [69, 82, 126, 140, 141, 144, 157, 171, 178, 200, 201, 202, 205, 207, 214, 215, 225, 364, 489, 560, 684, 685, 687, 688, 725, 728, 769, 860, 863], "address": [69, 95, 96, 166, 201, 225, 226, 233, 234, 235, 243, 268, 684, 685, 687, 688, 837, 843], "Or": [69, 119, 171, 198, 208, 220, 571, 837], "quantifi": [69, 210, 240, 274], "introduc": [69, 74, 140, 141, 149, 151, 165, 166, 173, 175, 198, 200, 201, 202, 204, 205, 206, 214, 233, 235, 258, 263, 264, 265, 266, 319, 477, 478, 557, 775, 779, 798, 857, 860, 866, 878], "outcom": 69, "awar": [69, 102, 140, 144, 167, 168, 216, 227, 233, 263, 264, 265, 266, 477, 478, 782, 878], "mitig": [69, 180, 201, 202, 209, 860], "confound": [69, 151, 557], "psychophysiologi": [69, 70, 98, 141, 151, 201, 230, 243, 566, 683, 684, 685, 687, 688], "cpmc": 69, "columbia": 69, "softwar": [69, 134, 158, 165, 184, 189, 190, 207, 243, 256, 268, 319, 442, 468, 477, 478, 486, 505, 585, 628, 811, 831, 833, 835, 837, 838, 843, 845, 853, 854, 857, 858, 859, 862, 866, 868, 878], "ebridg": 69, "html": [69, 143, 169, 243, 255, 273, 571, 643, 861, 878], "linearsegmentedcolormap": [69, 760], "nearli": [69, 837], "exactli": [69, 78, 126, 140, 144, 175, 184, 195, 214, 240, 559, 683, 763, 807, 878], "suffici": [69, 199, 201, 209, 227, 263, 264, 265, 266, 268, 281, 353, 477, 478, 516, 775, 798, 835, 837, 843, 853, 857, 860, 878], "portion": [69, 178, 198, 200, 214, 239, 263, 264, 320, 477, 478, 557, 775, 792, 798, 837, 857, 859], "plenti": 69, "settl": [69, 296], "ed_data": 69, "raw_data": 69, "read_raw": [69, 78, 134, 135, 144, 172, 222, 255, 868, 878], "compute_bridged_electrod": [69, 584, 765, 868, 878], "1959919512423807e": 69, "665886892347821": 69, "oz": [69, 127, 137, 159, 170, 240, 260, 263, 264, 265, 266, 272, 311, 409, 416, 477, 478, 556, 557, 571, 646, 697, 699, 701, 762, 769, 777, 779, 781, 784, 785, 788, 795, 797, 799, 800, 801, 805, 807, 878], "iz": 69, "4367320903573773": 69, "fcz": [69, 144, 240], "fc2": [69, 127], "fc4": [69, 144], "fc6": [69, 127], "f2": 69, "f4": [69, 127, 144, 159, 170, 207], "4835197413857302e": 69, "587817798758312": 69, "fc3": [69, 144, 500], "fc1": [69, 127, 476], "cp3": [69, 500], "cp1": [69, 127], "af7": 69, "af3": 69, "af4": 69, "af8": 69, "f5": [69, 500], "f3": [69, 127, 144, 159, 207, 500], "fz": [69, 127, 144, 159, 220, 226, 442, 477, 478, 492], "ft8": 69, "t8": [69, 127, 159, 170, 260, 263, 264, 265, 266, 272, 311, 409, 416, 477, 478, 556, 557, 571, 697, 699, 701, 762, 769, 777, 779, 781, 784, 785, 788, 795, 797, 799, 800, 801, 805, 807, 878], "tp8": 69, "p8": [69, 127, 159], "p7": [69, 127, 159, 500], "p5": [69, 500], "p3": [69, 127, 144, 159, 500], "p1": [69, 111, 210], "p4": [69, 127, 144, 159], "p6": 69, "po3": [69, 127, 240], "o1": [69, 127, 159, 220, 240], "po4": [69, 127, 240], "po8": [69, 127, 240, 878], "746002687400983": 69, "cz": [69, 111, 127, 137, 144, 159, 170, 189, 191, 205, 207, 220, 226, 263, 264, 265, 266, 477, 478, 642, 878], "c2": [69, 111, 205], "c4": [69, 111, 127, 144, 159], "cp2": [69, 127], "cp4": 69, "pz": [69, 127, 137, 143, 159, 191, 220, 226], "p2": [69, 111], "590631749463316": 69, "f6": 69, "understand": [69, 135, 144, 190, 201, 240, 713, 723, 727, 837, 860, 861, 866, 878], "physiologi": 69, "clip": [69, 172, 217, 255, 260, 263, 264, 265, 266, 272, 409, 416, 477, 478, 556, 557, 571, 697, 699, 701, 762, 777, 784, 788, 797, 798, 800, 805, 807, 878], "bridged_idx": [69, 565, 584, 765], "ed_matrix": [69, 565, 765], "ax1": [69, 85, 89, 98, 137, 183, 194], "ax2": [69, 85, 89, 95, 98, 137, 183, 194, 227, 228], "triangular": [69, 160, 161, 269, 628, 684, 685, 687, 688, 804, 831, 853, 860, 863], "ed_plot": 69, "triu_idx": 69, "triu_indic": 69, "idx0": 69, "idx1": 69, "nanmedian": 69, "im1": 69, "cax1": 69, "set_label": [69, 146, 195, 225], "mu": [69, 201, 225, 565, 878], "im2": 69, "cax2": 69, "histogram": [69, 158, 263, 264, 775], "previou": [69, 134, 140, 144, 151, 161, 170, 171, 172, 181, 200, 201, 205, 207, 217, 265, 266, 296, 297, 353, 357, 358, 368, 369, 370, 409, 415, 416, 452, 453, 472, 474, 475, 535, 567, 576, 585, 745, 763, 785, 848, 863, 878], "pair": [69, 102, 119, 137, 144, 168, 188, 189, 190, 195, 209, 210, 225, 233, 240, 255, 260, 263, 264, 265, 266, 268, 270, 271, 272, 274, 276, 277, 278, 279, 282, 287, 301, 409, 416, 477, 478, 500, 523, 556, 557, 565, 584, 596, 628, 684, 686, 687, 697, 698, 699, 701, 732, 745, 761, 765, 766, 769, 777, 783, 784, 788, 800, 803, 805, 807, 808, 831, 837, 878], "isnan": 69, "arrang": [69, 126, 151, 165, 170, 217, 243, 750], "light": [69, 137, 142, 171, 190, 199, 263, 264, 265, 266, 412, 419, 477, 478, 557, 745, 775, 779, 792, 798, 833, 878], "horizont": [69, 80, 135, 137, 140, 141, 142, 180, 191, 198, 209, 225, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 557, 745, 764, 779, 791, 792, 798, 803, 808, 878], "stand": [69, 155, 169, 175, 658, 837, 849], "insert": [69, 151, 169, 214, 260, 268, 272, 287, 301, 435, 451, 523, 732, 750], "syring": 69, "tip": [69, 204, 243, 353, 841, 842, 858, 864], "plot_bridged_electrod": [69, 868, 878], "saniti": [69, 119, 144, 182, 201, 445, 662, 866, 878], "implausibli": [69, 201, 225, 690], "interestingli": [69, 860], "though": [69, 73, 111, 151, 156, 160, 168, 172, 179, 183, 190, 198, 201, 202, 204, 205, 206, 211, 225, 268, 748, 768, 833, 854, 860, 878], "adjac": [69, 142, 146, 199, 226, 234, 235, 317, 328, 421, 450, 559, 562, 667, 668, 669, 670, 671, 672, 673, 677, 684, 685, 687, 688, 766, 866, 875, 878], "distinct": [69, 70, 195, 243, 260, 263, 264, 265, 266, 409, 416, 477, 478, 556, 697, 699, 701, 762, 777, 784, 800, 805, 807], "unlik": [69, 140, 141, 149, 150, 156, 160, 170, 181, 198, 201, 203, 214, 262, 263, 264, 265, 266, 271, 277, 279, 360, 388, 417, 586, 701, 808, 835, 853, 860, 878], "add_channel": [69, 73, 263, 264, 265, 266, 477, 478, 557, 697, 699, 700, 701, 878], "ch1": 69, "ch2": 69, "9760": [69, 82], "9759": [69, 82], "lesser": [69, 477, 478, 798, 878], "trough": [69, 144], "monoton": [69, 100, 488, 749, 818], "discrep": [69, 860], "driven": [69, 195, 225, 370, 416, 472], "blink": [69, 71, 82, 92, 93, 144, 172, 198, 200, 203, 204, 206, 207, 214, 216, 240, 243, 257, 263, 264, 556, 571, 649, 650, 878], "flatten": [69, 118, 205, 225, 229, 235, 243, 762, 878], "axvspan": [69, 95, 151], "subplots_adjust": [69, 70, 72, 106, 108, 111, 119, 126, 146, 151, 160, 199, 202, 204, 205, 206, 207, 210, 215, 225, 227, 228, 230, 768], "725": [69, 195, 230], "wspace": [69, 72, 126, 225], "compel": 69, "evid": [69, 112, 201, 202, 243, 557, 726, 729], "judici": [69, 837], "electrolyt": [69, 243, 565], "tri": [69, 160, 161, 168, 175, 178, 263, 264, 269, 270, 274, 276, 278, 317, 364, 432, 464, 628, 631, 646, 666, 670, 673, 803, 826, 855, 860, 863, 878], "those": [69, 73, 77, 98, 126, 142, 144, 151, 157, 161, 165, 166, 168, 169, 170, 171, 172, 175, 180, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 214, 215, 216, 220, 221, 225, 255, 258, 263, 264, 265, 266, 268, 276, 296, 309, 311, 323, 326, 328, 354, 355, 356, 358, 367, 368, 411, 415, 425, 430, 432, 433, 438, 442, 461, 477, 478, 488, 505, 535, 543, 556, 557, 559, 560, 572, 573, 574, 579, 582, 591, 593, 600, 646, 649, 650, 665, 683, 692, 697, 699, 700, 701, 705, 706, 707, 708, 710, 724, 725, 727, 728, 769, 775, 776, 779, 781, 782, 789, 796, 799, 837, 853, 859, 860, 862, 878], "still": [69, 73, 77, 114, 119, 142, 143, 144, 160, 171, 188, 189, 198, 199, 201, 202, 203, 205, 207, 209, 211, 214, 217, 225, 233, 263, 268, 276, 319, 364, 428, 459, 477, 557, 585, 605, 634, 636, 679, 700, 754, 768, 769, 810, 826, 835, 837, 843, 855, 866, 878], "biolog": [69, 198, 205, 206, 243, 524, 853, 860], "interpolate_bridged_electrod": [69, 868, 878], "midwai": [69, 584], "aid": [69, 243, 584, 878], "recov": [69, 134, 166, 364, 878], "impli": [69, 162, 221, 240, 268, 329, 363, 492, 857], "unbridg": 69, "ch0": 69, "bridged_idx_simul": 69, "data_orig": 69, "rng": [69, 91, 92, 93, 113, 194, 201, 225, 510, 557, 583, 602, 649, 650, 651, 660, 661, 663, 684, 685, 686, 687, 688], "random": [69, 83, 89, 91, 92, 93, 113, 159, 190, 191, 194, 198, 201, 204, 222, 225, 226, 233, 234, 235, 474, 510, 557, 583, 602, 649, 650, 651, 660, 661, 663, 684, 685, 686, 687, 688, 878], "default_rng": 69, "seed": [69, 89, 94, 111, 113, 204, 221, 222, 226, 233, 234, 235, 467, 510, 557, 583, 602, 649, 650, 651, 660, 661, 663, 676, 684, 685, 686, 687, 688, 878], "raw_sim": [69, 92, 93], "bridged_data": 69, "tile": [69, 113], "back": [69, 73, 82, 87, 115, 140, 143, 158, 161, 162, 166, 171, 172, 180, 181, 199, 201, 204, 205, 206, 207, 238, 256, 263, 264, 265, 266, 273, 364, 368, 424, 450, 477, 478, 557, 779, 837, 857, 878], "raw_virtu": 69, "data_virtu": 69, "raw_comp": 69, "data_comp": 69, "With": [69, 113, 120, 162, 171, 172, 188, 191, 205, 206, 211, 216, 222, 263, 264, 265, 266, 281, 451, 477, 478, 501, 557, 635, 745, 793, 833, 837, 840, 845, 849, 857, 859, 860], "comp": [69, 169, 268, 878], "1086289630998356e": 69, "139834556312537e": 69, "brought": [69, 156], "impend": 69, "help": [69, 71, 78, 119, 134, 135, 140, 144, 145, 146, 151, 159, 160, 161, 162, 166, 169, 172, 181, 188, 190, 195, 198, 199, 200, 202, 203, 204, 206, 217, 229, 255, 261, 262, 263, 264, 265, 266, 269, 270, 271, 274, 277, 278, 279, 436, 438, 444, 468, 477, 478, 485, 492, 493, 499, 508, 557, 603, 609, 642, 646, 660, 663, 689, 697, 700, 713, 723, 727, 742, 745, 753, 775, 789, 803, 837, 842, 843, 853, 855, 859, 860, 861, 863, 866, 878], "quest": 69, "technician": [69, 853, 854], "noisi": [69, 91, 142, 150, 199, 201, 206, 209, 225, 233, 235, 240, 268, 576, 577, 580, 649, 650, 661, 853, 878], "bid": [69, 134, 136, 171, 243, 263, 264, 311, 477, 478, 844, 854, 866, 878], "tsv": [69, 329, 878], "kohm": 69, "passiv": [69, 198], "accept": [69, 93, 140, 169, 171, 172, 188, 199, 200, 201, 204, 205, 206, 214, 258, 263, 264, 265, 266, 268, 270, 271, 274, 277, 278, 279, 313, 343, 358, 376, 377, 378, 384, 386, 477, 478, 501, 559, 573, 574, 682, 684, 685, 687, 688, 699, 701, 745, 769, 776, 777, 783, 801, 831, 837, 856, 878], "from_list": 69, "impedance_cmap": 69, "cn": [69, 807], "cax": [69, 111, 115, 126, 146, 230], "omega": [69, 108], "hopefulli": [69, 198, 240, 449], "convinc": [69, 151], "tenk": [69, 70, 243, 565, 566], "kayser": [69, 70, 243, 565, 566], "electroencephalogram": [69, 243, 565], "offici": [69, 70, 190, 243, 501, 557, 565, 566, 611, 837, 845, 859, 862, 878], "feder": [69, 243, 557, 565], "march": [69, 243, 565, 863, 878], "s1388": [69, 111, 243, 565], "2457": [69, 111, 243, 565], "00553": [69, 243, 565], "arnaud": [69, 243, 557, 565], "delorm": [69, 243, 557, 565], "scott": [69, 111, 144, 243, 433, 472, 557, 565, 853, 878], "makeig": [69, 111, 144, 243, 433, 472, 557, 565, 853], "jneumeth": [69, 73, 201, 230, 243, 557, 565, 657, 684, 685, 687, 688], "2003": [69, 194, 240, 243, 415, 565, 853], "009": [69, 72, 120, 127, 140, 149, 169, 222, 243, 565], "414": [69, 84, 142, 148, 230], "eeg_bridg": [69, 84], "laplacian": [70, 194, 243, 421, 566, 642, 878], "sharper": [70, 201], "impact": [70, 137, 178, 199, 240, 409, 878], "166799": [70, 167, 182, 203], "date": [70, 72, 75, 80, 81, 82, 89, 92, 126, 141, 146, 151, 167, 168, 169, 189, 198, 199, 200, 202, 204, 205, 206, 207, 209, 210, 211, 214, 215, 216, 217, 220, 222, 255, 257, 263, 264, 265, 266, 268, 477, 478, 479, 489, 492, 586, 835, 837, 878], "decemb": [70, 72, 75, 80, 81, 82, 89, 92, 126, 141, 146, 151, 167, 168, 169, 198, 199, 200, 202, 204, 205, 206, 207, 209, 214, 215, 216, 217, 222], "2002": [70, 72, 75, 82, 89, 92, 111, 126, 141, 146, 151, 166, 167, 168, 169, 198, 199, 200, 201, 202, 204, 205, 206, 207, 209, 214, 215, 216, 217, 222, 243, 257, 524, 679, 681, 686, 860], "gmt": [70, 72, 75, 80, 81, 82, 89, 92, 126, 141, 146, 151, 167, 168, 169, 198, 199, 200, 202, 204, 205, 206, 207, 209, 210, 214, 215, 216, 217, 222], "146": [70, 72, 75, 82, 89, 92, 126, 141, 146, 151, 166, 167, 168, 169, 187, 198, 199, 200, 202, 204, 205, 206, 207, 209, 214, 215, 216, 217, 222, 225, 230, 243], "172": [70, 73, 82, 92, 126, 167, 168, 169, 195, 198, 199, 201, 202, 205, 206, 207, 208, 209, 214, 215, 216, 217, 225, 229, 243, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 657, 662, 697, 700], "hh": [70, 72, 75, 80, 81, 82, 89, 92, 126, 141, 146, 151, 167, 168, 198, 199, 200, 202, 204, 205, 206, 207, 209, 210, 211, 214, 215, 216, 217, 222], "ss": [70, 72, 75, 80, 81, 82, 89, 92, 126, 141, 146, 151, 167, 168, 198, 199, 200, 201, 202, 204, 205, 206, 207, 209, 210, 211, 214, 215, 216, 217, 222, 860], "raw_csd": 70, "compute_current_source_dens": [70, 642, 868, 878], "421": [70, 106, 109, 142, 162, 176, 182, 195, 203, 208, 221, 228, 229, 230], "evoked_csd": 70, "stiff": [70, 566], "spline": [70, 77, 199, 243, 263, 264, 265, 266, 477, 478, 566, 860, 878], "flexibl": [70, 143, 172, 189, 211, 745, 878], "hspace": [70, 72, 126, 225], "set_size_inch": [70, 203], "this_evoked_csd": 70, "contour": [70, 100, 119, 158, 172, 239, 255, 260, 263, 264, 265, 266, 272, 409, 416, 477, 478, 556, 557, 571, 582, 697, 699, 701, 762, 763, 777, 780, 781, 784, 788, 797, 800, 805, 807, 878], "n\u03bb\u00b2": 70, "perrin": [70, 77, 199, 243, 566, 860], "pernier": [70, 77, 199, 243, 566, 713, 723, 724, 727, 860], "bme": [70, 243, 566], "1987": [70, 176, 201, 243, 566], "326089": [70, 243, 566], "jacqu": [70, 77, 199, 243, 566, 713, 723, 724, 727, 860], "olivi": [70, 77, 199, 243, 353, 557, 566, 713, 723, 724, 727, 860], "fran\u0107oi": [70, 77, 199, 243, 566, 860], "echalli": [70, 77, 199, 243, 566, 860], "184": [70, 74, 77, 169, 199, 225, 230, 243, 566, 592, 860], "187": [70, 74, 77, 169, 195, 199, 208, 225, 229, 243, 557, 566, 860], "1989": [70, 77, 199, 243, 566, 860], "90180": [70, 77, 199, 243, 566, 860], "mike": [70, 243, 566], "cohen": [70, 118, 128, 243, 566, 711, 713, 723, 727, 762, 878], "theori": [70, 165, 178, 209, 243, 566, 585], "j\u00fcrgen": [70, 204, 243, 557, 566], "craig": [70, 243, 566], "methodologi": [70, 100, 243, 353, 566], "electrophysiologi": [70, 78, 134, 243, 566], "171": [70, 74, 84, 125, 169, 195, 201, 225, 230, 243, 386, 535, 566, 592, 654, 659, 878], "ijpsycho": [70, 243, 566], "515": [70, 84, 230, 878], "eeg_csd": [70, 84], "eog_event_id": 71, "eog_ev": [71, 200, 257, 570, 578, 581], "find_eog_ev": [71, 198, 200, 216, 257, 570, 574, 855, 868, 878], "add_ev": [71, 172, 273, 477, 478, 878], "audr": 71, "visr": 71, "pick_ch": 71, "375": [71, 80, 93, 169, 195, 198, 200, 206, 208, 230], "dc": [71, 166, 168, 172, 190, 198, 200, 201, 202, 203, 204, 206, 211, 215, 258, 263, 265, 266, 268, 340, 477, 478, 557, 559, 585, 798, 833, 863, 878], "offset": [71, 92, 136, 161, 168, 172, 191, 198, 200, 201, 203, 204, 205, 206, 211, 214, 215, 216, 257, 258, 261, 262, 263, 264, 265, 266, 268, 270, 271, 274, 277, 278, 279, 360, 438, 450, 477, 478, 560, 599, 612, 677, 697, 700, 745, 833, 863, 878], "saccad": [71, 172, 191, 198, 200, 203, 204, 206, 556], "firwin2": [71, 146, 172, 191, 198, 200, 201, 203, 204, 206, 263, 264, 265, 266, 411, 420, 445, 447, 448, 477, 478, 878], "hann": [71, 83, 107, 108, 146, 172, 198, 200, 201, 203, 204, 206, 263, 264, 265, 266, 420, 445, 447, 448, 477, 478, 530, 531, 648, 649, 650, 662, 878], "1502": [71, 172, 200, 204], "eog_artifact_histogram": [71, 84], "basic": [72, 82, 111, 150, 151, 158, 161, 162, 165, 166, 171, 172, 173, 176, 192, 198, 203, 204, 205, 206, 209, 214, 217, 218, 222, 241, 242, 243, 255, 263, 268, 272, 311, 327, 372, 388, 438, 444, 487, 554, 699, 807, 854, 860, 878], "thorough": [72, 165, 199, 861], "modul": [72, 134, 140, 142, 143, 145, 146, 149, 150, 151, 161, 166, 167, 168, 169, 170, 171, 172, 189, 190, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 214, 215, 216, 217, 220, 238, 240, 255, 346, 488, 551, 696, 742, 745, 836, 837, 844, 849, 857, 860, 866, 867, 868, 869, 870, 873, 876, 878], "eogregress": [72, 203, 211, 595, 800, 868, 878], "elimin": [72, 169, 203, 205, 209, 225, 233, 235, 354, 355, 356, 409, 579, 857, 860, 878], "slow": [72, 127, 137, 141, 144, 150, 201, 203, 210, 243, 263, 264, 401, 402, 414, 530, 531, 583, 715, 735, 777, 837, 854], "drift": [72, 141, 201, 203, 210, 211, 557, 599, 878], "1653": [72, 73], "376": [72, 80, 92, 93, 94, 149, 166, 167, 169, 179, 214, 230], "offpca": [72, 75, 92, 167, 168, 169, 198, 199, 200, 202, 204, 205, 206, 209, 214, 215, 216, 217, 222], "offaverag": [72, 92, 169, 200, 204], "raw_clean": [72, 83, 203, 593], "evoked_befor": 72, "evoked_aft": 72, "epochs_aft": 72, "spatial_color": [72, 93, 98, 128, 137, 144, 150, 151, 206, 217, 220, 263, 264, 265, 266, 477, 478, 699, 701, 779, 782, 799, 878], "905": [72, 230], "eog_regress": [72, 84], "intermitt": 73, "extern": [73, 151, 180, 188, 209, 243, 263, 264, 265, 266, 340, 342, 346, 430, 439, 440, 441, 442, 477, 478, 557, 567, 568, 576, 585, 853, 854, 860, 878], "magnet": [73, 78, 80, 118, 128, 134, 150, 156, 176, 188, 202, 203, 211, 230, 243, 341, 524, 557, 762, 833, 838, 853, 854], "fail": [73, 206, 357, 364, 428, 430, 459, 493, 494, 567, 568, 576, 585, 603, 605, 609, 634, 636, 826, 837, 859, 878], "succe": [73, 161, 171, 843], "choos": [73, 81, 113, 114, 135, 141, 146, 151, 160, 162, 180, 181, 189, 194, 198, 201, 203, 204, 209, 227, 240, 256, 263, 264, 270, 271, 274, 276, 277, 278, 279, 318, 450, 524, 532, 556, 562, 569, 577, 580, 585, 612, 660, 663, 683, 745, 761, 764, 803, 808, 809, 835, 837, 857, 859, 878], "made": [73, 115, 155, 172, 198, 201, 225, 263, 264, 269, 271, 276, 277, 279, 313, 327, 485, 599, 662, 776, 778, 808, 835, 837, 854, 859, 878], "whose": [73, 94, 144, 168, 170, 188, 195, 222, 263, 264, 265, 266, 270, 271, 273, 274, 277, 278, 279, 296, 297, 353, 357, 358, 368, 369, 370, 409, 416, 438, 443, 452, 453, 472, 474, 475, 477, 478, 517, 535, 557, 562, 571, 573, 574, 577, 650, 700, 701, 769, 772, 785, 790, 799, 800, 859, 860, 863, 878], "particularli": [73, 161, 190, 203, 225, 263, 264, 265, 266, 436, 477, 478, 557, 576, 840, 860], "heavi": [73, 233, 235, 857, 878], "jeff": [73, 243, 557, 878], "hanna": [73, 243, 557, 878], "refmeg_nois": [73, 854, 868, 878], "sample_reference_meg_nois": 73, "refmeg": 73, "165353": 73, "30000": [73, 408], "select_pick": 73, "plot_kwarg": [73, 157, 203, 211], "raw_tog": 73, "ica_kwarg": 73, "picard": [73, 75, 82, 204, 557, 844, 878], "fit_param": [73, 75, 172, 409, 410, 411, 412, 413, 414, 416, 417, 419, 420, 426, 557, 558, 878], "all_pick": 73, "ica_tog": 73, "allow_ref_meg": [73, 557], "bad_comp": 73, "find_bads_ref": [73, 557, 878], "plot_properti": [73, 82, 166, 204, 557, 864, 878], "147": [73, 169, 185, 195, 208, 225, 229, 230], "patient": [73, 75, 82, 136, 166, 172, 204, 878], "took": [73, 75, 82, 166, 172, 204, 557], "dpss": [73, 82, 102, 103, 137, 142, 143, 166, 172, 204, 238, 239, 263, 264, 265, 266, 422, 477, 478, 699, 701, 709, 715, 725, 728, 878], "raw_sep": 73, "ref_pick": 73, "ica_ref": 73, "ica_sep": 73, "think": [73, 144, 172, 195, 201, 225, 833, 856], "ekg": [73, 136], "cardiac": [73, 210], "ref_comp": 73, "get_sourc": [73, 557, 878], "ref_": 73, "recognis": 73, "rename_channel": [73, 111, 127, 140, 149, 151, 159, 185, 210, 214, 263, 264, 265, 266, 311, 477, 478, 488, 500, 868, 878], "cora": [73, 243, 557, 878], "kim": [73, 243, 557, 878], "nadia": [73, 243, 557], "voggel": [73, 243, 557], "magnetoencephalograph": [73, 243, 557], "108592": [73, 243, 557], "874": [73, 84, 195, 230], "find_ref_artifact": [73, 84], "fnir": [74, 165, 169, 170, 192, 193, 212, 213, 243, 263, 264, 265, 266, 268, 311, 327, 329, 352, 370, 372, 438, 477, 478, 486, 500, 505, 507, 554, 587, 588, 589, 591, 592, 697, 699, 700, 701, 745, 761, 769, 778, 783, 833, 844, 860, 878], "mail": [74, 225, 848], "robertluk": 74, "net": [74, 170, 194, 243, 415, 679, 860, 878], "optical_dens": [74, 210, 868, 878], "temporal_derivative_distribution_repair": [74, 868, 878], "exact": [74, 102, 134, 202, 225, 233, 240, 243, 263, 264, 265, 266, 289, 426, 477, 478, 524, 684, 686, 687, 698, 702, 704, 705, 707, 833, 841, 860, 878], "fnirs_data_fold": [74, 210], "fnirs_motor": [74, 210, 854, 868, 878], "fnirs_cw_amplitude_dir": [74, 210], "raw_intens": [74, 210], "read_raw_nirx": [74, 190, 210, 483, 860, 868, 878], "raw_od": [74, 210], "new_annot": [74, 216], "set_annot": [74, 80, 81, 137, 168, 191, 200, 216, 257, 263, 264, 477, 478, 559, 586, 878], "23238": [74, 210], "2974": [74, 210], "464": [74, 144, 171, 210, 225, 230, 276], "spike": [74, 82, 256, 592, 853], "person": [74, 151, 210, 268, 837, 853, 859], "optod": [74, 190, 210, 507, 589, 745, 761, 854, 878], "corrupted_data": 74, "450": [74, 80, 141, 160, 195, 225, 230, 276, 878], "750": [74, 80, 143, 195, 230, 854], "corrupted_od": 74, "245": [74, 169, 185, 200, 225, 229, 230, 243, 860], "8924": 74, "8923": 74, "suppli": [74, 100, 152, 172, 180, 206, 220, 225, 261, 262, 263, 264, 265, 266, 270, 271, 273, 274, 277, 278, 279, 359, 384, 433, 443, 444, 477, 478, 557, 571, 591, 592, 639, 697, 700, 768, 769, 788, 878], "corrected_tddr": 74, "said": [74, 175], "fishburn": [74, 243, 592], "ruth": [74, 243, 592], "ludlum": [74, 243, 592], "chandan": [74, 243, 592], "vaidya": [74, 243, 592], "andrei": [74, 243, 592], "medvedev": [74, 243, 592], "tddr": [74, 243, 592, 878], "motion": [74, 243, 561, 592, 878], "2018": [74, 83, 125, 137, 195, 204, 222, 243, 296, 297, 557, 592, 593], "025": [74, 119, 127, 129, 136, 140, 146, 149, 169, 191, 198, 201, 222, 225, 243, 592], "fnirs_artifact_remov": [74, 84], "pierreablin": 75, "9009": [75, 172, 204], "run_ica": [75, 878], "t0": [75, 99, 185, 240, 256, 702, 703, 704], "fit_tim": 75, "infomax": [75, 204, 243, 557, 864, 868, 878], "443": [75, 84, 143, 210, 213, 225, 230, 243], "ica_comparison": [75, 84], "replac": [77, 87, 100, 141, 143, 151, 159, 172, 188, 190, 200, 205, 206, 209, 214, 216, 243, 260, 263, 264, 265, 266, 272, 273, 409, 416, 431, 444, 477, 478, 489, 505, 522, 556, 557, 571, 697, 699, 701, 762, 784, 788, 797, 800, 805, 837, 841, 843, 845, 848, 860, 878], "evoked_interp": 77, "product": [77, 86, 118, 123, 150, 170, 188, 189, 194, 199, 206, 243, 268, 330, 422, 677, 725, 726, 728, 729, 754, 859, 860, 878], "truncat": [77, 86, 118, 123, 150, 199, 206, 215, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 432, 438, 477, 478, 490, 697, 700, 769, 878], "evoked_interp_mn": 77, "\u03b1": [77, 142, 206, 217], "0e": [77, 194, 206], "interpolate_bad_channel": [77, 84], "tomographi": [78, 134, 243, 524, 833, 860, 878], "ct": [78, 469, 735, 818, 878], "scan": [78, 134, 155, 166, 176, 180, 183, 209, 268, 388, 582, 818, 838, 841, 844, 849, 863, 866], "reson": [78, 134, 243, 860], "mr": [78, 469, 735, 860, 866, 878], "seeg": [78, 134, 136, 138, 139, 165, 169, 214, 220, 263, 264, 265, 266, 268, 276, 278, 310, 311, 315, 365, 370, 372, 438, 442, 461, 477, 478, 483, 492, 553, 554, 555, 557, 627, 629, 642, 692, 697, 699, 700, 701, 745, 761, 767, 801, 833, 834, 844, 860, 878], "sample_seeg_ieeg": [78, 134, 135], "1310640": [78, 134, 135], "1370605": [78, 134, 135], "1371": [78, 134, 135, 157, 195, 238, 243, 263, 264, 265, 266, 477, 478, 699, 701, 709, 715], "misc_path": [78, 114, 134, 135, 182], "gui": [78, 134, 157, 158, 160, 263, 264, 270, 271, 274, 277, 278, 279, 307, 477, 478, 557, 761, 775, 792, 798, 803, 808, 835, 837, 841, 843, 844, 851, 853, 855, 857, 868, 878], "pyvista": [78, 114, 134, 171, 181, 261, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 745, 747, 755, 759, 761, 773, 801, 803, 804, 808, 810, 815, 835, 836, 855, 866, 878], "set_3d_backend": [78, 134, 816, 835, 868, 878], "pyvistaqt": [78, 134, 171, 270, 274, 278, 755, 803, 810, 816, 835, 836, 878], "thing": [78, 111, 141, 145, 151, 160, 171, 172, 181, 188, 199, 201, 214, 222, 230, 233, 235, 311, 477, 478, 837, 857, 878], "associ": [78, 134, 137, 144, 168, 172, 191, 198, 205, 206, 208, 225, 227, 243, 257, 258, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 417, 460, 477, 478, 519, 609, 611, 647, 679, 684, 689, 697, 700, 767, 775, 776, 778, 779, 781, 796, 797, 835, 837, 860, 863, 878], "intens": [78, 134, 143, 160, 181, 182, 190, 204, 265, 266, 270, 271, 274, 277, 278, 279, 281, 533, 534, 745, 780, 803, 808, 818, 833, 878], "ct_orig": [78, 134], "sample_seeg_ct": [78, 134], "sample_seeg": [78, 134, 135], "fiduci": [78, 124, 134, 136, 156, 159, 160, 170, 188, 189, 311, 314, 315, 324, 334, 335, 364, 365, 366, 385, 481, 484, 501, 509, 611, 636, 761, 833, 853, 860, 863, 878], "tkreg": [78, 134], "scanner": [78, 160, 276, 471, 854, 860], "make_dig_montag": [78, 263, 264, 265, 266, 268, 311, 327, 329, 330, 331, 332, 333, 334, 335, 336, 338, 477, 478, 500, 860, 868, 878], "on_miss": [78, 258, 263, 264, 265, 266, 268, 283, 284, 315, 347, 348, 401, 436, 456, 477, 478, 697, 699, 700, 701, 778, 878], "haven": [78, 140, 216, 837, 861, 878], "head_ct_t": 78, "invert_transform": [78, 80, 135], "compute_native_head_t": [78, 134, 135, 159, 182, 311, 868, 878], "misnorm": 78, "launch": [78, 468, 545, 835, 837, 841, 843, 878], "viewer": [78, 134, 270, 271, 274, 277, 278, 279, 745, 803, 808, 833, 866, 878], "locate_ieeg": [78, 134, 868, 878], "programmat": [78, 263], "shaft": [78, 854, 866], "set_ra": 78, "mark_channel": 78, "lent": [78, 135], "unless": [78, 167, 263, 264, 265, 266, 269, 270, 271, 273, 274, 277, 278, 279, 281, 353, 354, 356, 358, 409, 412, 416, 419, 422, 425, 426, 428, 433, 452, 454, 465, 467, 472, 474, 475, 477, 478, 487, 516, 519, 520, 530, 531, 535, 540, 541, 556, 557, 562, 569, 570, 585, 645, 648, 649, 650, 662, 684, 685, 686, 687, 688, 697, 699, 700, 701, 702, 703, 704, 705, 706, 707, 715, 716, 724, 725, 726, 727, 728, 735, 769, 775, 776, 777, 780, 784, 788, 792, 798, 799, 800, 837, 859, 860, 878], "recon": [78, 115, 135, 155, 160, 308, 365, 543, 818, 878], "fortun": [78, 201, 205, 860], "apply_volume_registration_point": [78, 868, 878], "didn": [78, 140, 144, 263, 444, 700, 878], "enough": [78, 102, 158, 180, 202, 203, 204, 206, 209, 214, 225, 240, 260, 263, 264, 265, 266, 272, 304, 305, 311, 409, 416, 428, 477, 478, 556, 557, 571, 692, 697, 699, 700, 701, 754, 762, 769, 775, 777, 779, 781, 784, 785, 788, 792, 795, 797, 798, 799, 800, 801, 805, 807, 841, 859, 860, 878], "reg_affin": [78, 134, 733, 734, 735, 818], "99270756": [78, 134], "03243313": [78, 134], "11610254": [78, 134], "094156": [78, 134], "04374389": [78, 134], "99439665": [78, 134], "09623816": [78, 134], "58320673": [78, 134], "11233068": [78, 134], "10061512": [78, 134], "98856381": [78, 134], "45551601": [78, 134], "head_mri_t": [78, 135], "add_sensor": [78, 115, 134, 135, 136, 190, 210, 745, 878], "locate_ieeg_micro": [78, 84], "bilater": [79, 206, 645, 878], "repeat": [79, 92, 100, 112, 134, 140, 161, 165, 167, 205, 206, 214, 215, 225, 231, 232, 236, 237, 257, 263, 264, 265, 266, 268, 274, 276, 359, 433, 477, 523, 524, 538, 554, 557, 571, 594, 612, 627, 669, 678, 680, 681, 685, 688, 689, 700, 727, 745, 783, 837, 845, 857, 878], "maxwell_filt": [79, 184, 208, 209, 430, 567, 576, 586, 787, 857, 868, 878], "head_po": [79, 80, 208, 209, 430, 576, 585, 648, 649, 650, 662, 878], "chpi": [79, 80, 122, 169, 183, 208, 209, 255, 263, 264, 265, 266, 268, 273, 310, 430, 477, 478, 554, 561, 564, 585, 648, 649, 650, 662, 697, 699, 700, 701, 768, 775, 798, 833, 860, 866, 867, 868, 878], "read_head_po": [79, 208, 209, 341, 343, 349, 351, 430, 576, 585, 648, 649, 650, 662, 868], "simulated_quat": 79, "simulated_movement_raw": 79, "raw_stat": 79, "simulated_stationary_raw": 79, "34208": 79, "955": [79, 82, 143, 145, 148, 230], "backward": [79, 201, 255, 263, 264, 265, 266, 370, 409, 411, 415, 416, 420, 437, 445, 447, 448, 477, 478, 530, 699, 701, 745, 777, 786, 810, 860, 878], "plot_head_posit": [79, 80, 208, 209, 868, 878], "quiver": [79, 261, 745, 773, 787], "306m": [79, 108, 115, 122, 123, 150, 156, 158, 170, 172, 183], "topo_kwarg": [79, 141], "evoked_stat": 79, "naiv": [79, 229], "therebi": [79, 175, 203, 205, 725, 728, 860], "third": [79, 93, 94, 151, 169, 172, 188, 206, 210, 216, 257, 258, 263, 437, 438, 450, 451, 477, 478, 518, 552, 557, 611, 612, 687, 688, 701, 778, 823, 837, 860], "restor": [79, 200, 207, 265, 266, 409, 413, 557, 558, 597, 745, 824, 878], "raw_sss": [79, 172, 209, 255, 477, 478, 497, 585], "evoked_raw_mc": 79, "harmon": [79, 92, 183, 184, 191, 198, 202, 208, 209, 240, 860], "fourth": [79, 201, 216, 467, 860], "cleanli": [79, 169], "evoked_evo_mc": 79, "average_mov": [79, 209, 585, 868, 878], "movement_compens": [79, 84], "contamin": [80, 201, 204, 243, 557], "similarli": [80, 98, 111, 143, 149, 171, 195, 201, 207, 210, 257, 557, 769, 855, 860], "suffer": [80, 853], "adonai": [80, 81, 878], "nune": [80, 81, 243, 657, 878], "bst_auditori": [80, 81, 191, 868], "annotate_mov": [80, 208, 868, 878], "compute_average_dev_head_t": [80, 561, 868, 878], "data_path_meg": 80, "raw_fname1": [80, 191], "s01_aef_20131218_01": [80, 81, 191], "raw_fname2": [80, 191], "s01_aef_20131218_02": [80, 191], "mismatch": [80, 160, 161, 191, 353, 443, 532, 802, 878], "on_mismatch": [80, 191, 353, 360, 362, 824, 878], "350": [80, 111, 115, 116, 134, 141, 160, 169, 208, 230], "264": [80, 81, 151, 169, 191, 230, 243], "s01_20131218_01": [80, 81, 191], "2400": [80, 81, 184, 191], "864000": [80, 81, 191], "263": [80, 81, 111, 169, 191, 208, 209, 225, 230], "eab": [80, 81], "s01": [80, 81], "lt": [80, 114], "br": 80, "gt": 80, "chpi_loc": [80, 208, 341, 343, 344, 345], "extract_chpi_locs_ctf": [80, 341, 343, 868, 878], "compute_head_po": [80, 208, 209, 341, 344, 585, 868, 878], "original_head_dev_t": 80, "average_head_dev_t": 80, "val": [80, 100], "val_ori": 80, "010": [80, 93, 127, 140, 149, 155, 169, 222, 243], "090": [80, 208], "130": [80, 81, 82, 158, 169, 170, 225, 229, 230, 243, 337, 878], "160": [80, 81, 83, 122, 169, 170, 171, 188, 229, 230, 243, 337, 535, 569, 577, 580, 654, 659], "220": [80, 137, 169, 208, 225, 229], "260": [80, 169, 195, 208, 230, 594, 854], "290": [80, 111, 144, 169, 184, 208, 230, 243, 657], "370": [80, 108, 169, 208, 225, 230, 243, 269, 274], "380": [80, 225, 230], "470": [80, 208, 230], "490": [80, 225, 230], "580": [80, 208, 230], "630": [80, 230], "640": [80, 183, 208, 220], "650": [80, 81, 146, 211, 230], "680": [80, 195, 230], "690": [80, 95, 195, 230], "710": [80, 208, 230, 243, 565], "720": [80, 194, 195, 208, 230, 243, 565], "730": [80, 152, 154, 195], "740": [80, 195], "760": [80, 195, 208], "770": [80, 208], "780": [80, 208, 230], "810": [80, 208], "820": [80, 99, 101, 230], "830": [80, 230], "850": [80, 208, 878], "870": [80, 195, 243, 681], "880": [80, 105, 106, 180, 208, 230, 243, 296, 297], "890": [80, 208, 230, 243, 276], "910": [80, 149, 154, 230], "920": [80, 100, 143, 226], "930": [80, 208, 230], "940": [80, 230], "950": [80, 143, 148, 195, 208, 240], "970": [80, 208, 230], "980": [80, 204, 208, 230], "990": [80, 208, 230], "353": [80, 111, 169, 208], "356": [80, 111, 169, 230], "357": [80, 169, 194, 195, 201, 225, 230], "358": [80, 169], "369": [80, 169, 208, 243, 524, 657, 860], "361": [80, 169, 234], "363": [80, 169, 194, 208, 225, 230], "367": [80, 108, 169, 199, 208, 230], "368": [80, 169, 171, 194, 195, 230, 233], "372": [80, 108, 169, 194, 225, 230], "373": [80, 169, 225], "377": [80, 225, 230], "381": 80, "382": [80, 84, 208, 230, 243, 657], "386": [80, 230], "388": [80, 230, 243], "389": [80, 230], "391": [80, 208, 225, 230], "394": [80, 208, 225, 230, 679], "395": [80, 208, 230], "397": [80, 182, 187, 208, 230], "399": [80, 225, 230], "405": [80, 177, 187, 208, 225, 230], "406": [80, 225, 230], "407": [80, 230], "409": [80, 118, 225, 230, 243, 762], "mean_distance_limit": [80, 561], "0015": 80, "annotation_mov": 80, "hpi_disp": [80, 561], "disp": 80, "0015m": 80, "0038m": 80, "new_dev_head_t": 80, "show_ax": [80, 122, 124, 156, 157, 159, 182, 183, 312, 761, 794, 878], "outer_skin": [80, 108, 117, 156, 158, 159, 161, 172, 761, 853, 854, 860], "ctf_275": [80, 122, 184], "movement_detect": [80, 84], "contract": [81, 859], "clench": [81, 204], "jaw": [81, 204], "swallow": [81, 198, 204], "twitch": 81, "cranial": 81, "notic": [81, 83, 140, 141, 143, 145, 149, 150, 151, 156, 160, 162, 166, 167, 170, 175, 191, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 214, 216, 217, 220, 221, 576, 837], "annotate_muscle_zscor": [81, 868, 878], "taken": [81, 93, 137, 142, 199, 203, 205, 206, 230, 233, 240, 256, 257, 265, 266, 268, 269, 273, 274, 296, 297, 353, 357, 358, 368, 369, 370, 409, 416, 452, 453, 472, 474, 475, 476, 477, 478, 535, 583, 603, 698, 709, 785, 798, 854, 859, 878], "analyt": [81, 112, 243, 263, 264, 265, 266, 477, 478, 878], "divid": [81, 100, 126, 142, 143, 144, 147, 148, 162, 165, 209, 225, 227, 230, 263, 264, 265, 266, 269, 270, 271, 274, 277, 278, 279, 286, 475, 477, 478, 517, 540, 541, 562, 565, 569, 585, 619, 674, 684, 687, 697, 699, 700, 701, 712, 720, 777, 801, 805, 833, 857, 861, 878], "squar": [81, 112, 127, 140, 149, 150, 151, 162, 168, 169, 178, 189, 201, 214, 220, 222, 225, 227, 238, 243, 260, 263, 264, 265, 266, 270, 271, 272, 274, 277, 278, 279, 296, 297, 326, 409, 416, 453, 477, 478, 532, 539, 556, 557, 571, 677, 682, 684, 685, 687, 688, 697, 698, 699, 701, 745, 762, 770, 771, 777, 779, 784, 786, 788, 791, 797, 800, 803, 805, 807, 808, 833, 857, 860, 863, 878], "hundr": [81, 204, 205, 467, 835], "bad_muscl": [81, 562], "min_length_good": [81, 562], "fraction": [81, 112, 144, 175, 198, 204, 225, 325, 530, 539, 557, 575, 692, 789, 859, 878], "notch": [81, 191, 202, 211, 346, 448, 477, 478], "1981": 81, "603": [81, 230], "scores_muscl": [81, 562], "threshold_muscl": 81, "annot_muscl": 81, "filter_freq": [81, 562], "zscore": [81, 286, 540, 541, 557, 697, 700, 805], "164": [81, 169, 201, 208, 229, 230, 243, 684, 685, 687, 688], "647": [81, 84, 230], "196": [81, 169, 195, 225, 229, 230], "muscle_detect": [81, 84], "gross": [82, 243, 409], "widespread": [82, 204], "recover": 82, "ubiquit": 82, "postur": [82, 204], "mainten": [82, 206, 837, 878], "appropri": [82, 146, 149, 162, 166, 182, 183, 190, 200, 204, 206, 209, 220, 225, 227, 229, 240, 243, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 317, 323, 359, 387, 388, 477, 478, 521, 535, 683, 745, 769, 798, 803, 808, 835, 837, 852, 857, 860, 863, 878], "wouldn": [82, 878], "pronounc": [82, 201, 857], "simultan": [82, 137, 142, 195, 202, 204, 217, 417, 467, 500, 519, 599, 607, 686, 854, 860, 866, 878], "18019": 82, "1983": [82, 203, 243, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 556, 600, 697, 700], "18020": 82, "exclus": [82, 170, 199, 204, 494, 552, 557, 789, 791, 792, 878], "mdash": [82, 204], "plot_sourc": [82, 204, 263, 264, 477, 478, 557, 775, 792, 798, 878], "85861": 82, "103880": 82, "criteria": [82, 140, 166, 200, 205, 206, 210, 256, 263, 264, 273, 552, 557, 878], "slope": [82, 188, 201, 255, 256, 268, 340, 341, 501, 557, 878], "peripher": [82, 557], "pole": [82, 160], "foci": [82, 745, 878], "blob": [82, 233, 234], "worth": [82, 100, 149, 226, 243, 392, 485, 492, 837, 854, 855, 857], "fire": 82, "fuzzi": 82, "textbook": [82, 205, 243, 679], "temporali": 82, "ear": [82, 166, 170, 180, 854], "muscle_idx": [82, 557], "log_scal": [82, 557, 790], "blink_idx": 82, "heartbeat_idx": 82, "muscle_idx_auto": 82, "find_bads_muscl": [82, 557, 878], "s001r01": 82, "529": [82, 230], "s002": [82, 204], "s002r01": 82, "dhani": [82, 243, 557], "dharmaprani": [82, 243, 557], "hoang": [82, 243, 557], "nguyen": [82, 243, 557], "trent": [82, 243, 557], "lewi": [82, 243, 557, 860], "delosangel": [82, 243, 557], "willoughbi": [82, 243, 557], "kenneth": [82, 144, 243, 433, 557], "pope": [82, 243, 557], "38th": [82, 243, 557], "annual": [82, 206, 243, 557, 862], "confer": [82, 144, 243, 433, 557, 862], "societi": [82, 190, 243, 353, 524, 557, 726, 729, 860], "embc": [82, 204, 243, 557], "orlando": [82, 243, 557], "fl": [82, 243, 557], "usa": [82, 198, 243, 557], "7590828": [82, 243, 557], "345": [82, 84, 111, 169, 208, 225, 230], "muscle_ica": [82, 84], "otp": [83, 84, 593], "flux": [83, 209, 211, 263, 264, 265, 266, 477, 478, 554, 697, 699, 700, 701, 860], "jump": [83, 111, 144, 198, 209, 684, 685, 687, 688, 878], "bst_phantom_elekta": [83, 183], "phantom": [83, 165, 186, 187, 243, 260, 261, 263, 265, 266, 268, 301, 353, 358, 388, 429, 450, 452, 477, 488, 490, 521, 585, 761, 773, 785, 813, 854, 860, 878], "rid": [83, 229], "1522": [83, 169, 194, 208], "dipole_numb": 83, "kojak_all_200nam_pp_no_chpi_no_ms_raw": [83, 183], "47000": [83, 183], "437999": [83, 183], "alongsid": [83, 145, 149, 155, 199, 204, 205, 207, 215, 796, 833, 844], "oversampled_temporal_project": [83, 868, 878], "lump": [83, 585], "compute_bia": 83, "sti201": [83, 183, 268], "make_sphere_model": [83, 124, 156, 183, 184, 185, 207, 514, 860, 868, 878], "r0": [83, 124, 156, 183, 184, 185, 521], "head_radiu": [83, 124, 156, 183, 184, 185, 521, 878], "036": [83, 140, 149, 169, 183, 222, 243, 657], "actual_po": [83, 183, 185], "get_phantom_dipol": [83, 183, 388, 868, 878], "1fmm": 83, "worst": [83, 120, 353, 358, 653, 655, 656, 878], "bias_clean": 83, "9mm": 83, "2mm": [83, 860], "4mm": 83, "samu": [83, 162, 209, 243, 568, 585, 593, 662, 857, 878], "taulu": [83, 162, 209, 243, 430, 568, 585, 593, 662, 857, 878], "1013": [83, 169, 195, 243, 593], "2017": [83, 134, 151, 204, 243, 391, 557, 593, 657, 662], "2734641": [83, 243, 593], "664": [84, 208, 230], "auto_examples_preprocess": 84, "329": [84, 111, 169, 230], "virtual_evok": [84, 86], "215": [84, 86, 169, 243, 572], "xdawn_denois": [84, 87], "954": [84, 87, 100, 101, 204, 208, 230], "shift_evok": [84, 85], "474": [84, 85, 158, 195, 230, 276], "hut": 85, "2332": [85, 169, 551], "ax3": [85, 89, 98, 183, 194], "magnomet": 86, "virt_evok": 86, "as_typ": [86, 263, 264, 265, 266, 878], "plot_epochs_imag": [87, 116, 557, 788, 790, 868, 878], "signal_cov": [87, 558], "xd": 87, "1388": 87, "41640": 87, "epochs_denois": 87, "brief": [89, 94, 166, 198, 217, 225, 837], "simplest": [89, 94, 168, 195, 211, 225, 860], "kostiantyn": [89, 93, 94, 243, 657, 878], "maksymenko": [89, 93, 94, 243, 657, 878], "functool": [89, 225, 270, 271, 274, 277, 278, 279, 837], "partial": [89, 149, 151, 166, 200, 214, 215, 225, 243, 263, 264, 270, 271, 274, 277, 278, 279, 317, 587, 726, 729, 745, 769, 810, 814, 854, 866, 878], "region_localization_error": [89, 868], "f1_score": [89, 868], "precision_scor": [89, 868], "recall_scor": [89, 868], "cosine_scor": [89, 868], "peak_position_error": [89, 868], "spatial_deviation_error": [89, 868], "determinist": [89, 204, 878], "middl": [89, 94, 111, 134, 160, 166, 201, 205, 220, 261, 268, 270, 271, 274, 277, 278, 279, 445, 764, 773, 803, 808, 809, 837, 860, 878], "frontal": [89, 94, 166, 198, 204, 206, 214, 222, 304, 632, 745], "selected_label": [89, 94], "term": [89, 102, 125, 134, 166, 168, 194, 201, 205, 225, 229, 235, 240, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 329, 340, 376, 377, 378, 386, 477, 478, 532, 544, 566, 657, 697, 700, 712, 720, 833, 837, 854, 859, 860, 861, 866, 878], "label_region": 89, "select_sourc": [89, 94, 868, 878], "1915": 89, "One": [89, 95, 96, 99, 141, 143, 149, 150, 151, 155, 157, 166, 171, 178, 191, 201, 203, 204, 211, 214, 225, 243, 263, 264, 265, 266, 273, 311, 313, 436, 442, 477, 478, 557, 679, 686, 763, 775, 776, 792, 798, 837, 853, 860, 862, 863, 878], "label_dipol": 89, "source_time_seri": [89, 93, 94], "sin": [89, 91, 92, 93, 94, 113, 201, 220, 221, 222, 340, 594, 663], "n_event": [89, 94, 258, 263, 264, 268, 273, 282, 362, 437, 438, 450, 477, 478, 494, 518, 552, 560, 579, 599, 609, 611, 612, 647, 683, 700, 775, 778, 823, 833], "sourcesimul": [89, 93, 94, 662, 868, 878], "source_simulator_region": 89, "add_data": [89, 93, 94, 115, 270, 271, 274, 277, 278, 279, 647, 745, 803, 808], "source_simulator_dipol": 89, "gaussian": [89, 93, 113, 120, 152, 161, 162, 201, 204, 221, 225, 263, 264, 265, 266, 472, 583, 651, 713, 723, 726, 727, 729, 776, 785, 806, 853, 857, 860], "raw_region": 89, "simulate_raw": [89, 92, 93, 94, 222, 649, 650, 661, 663, 664, 868, 878], "make_ad_hoc_cov": [89, 92, 94, 222, 260, 297, 868, 878], "add_nois": [89, 92, 93, 94, 222, 649, 650, 662, 868, 878], "iir_filt": [89, 91, 92, 94, 222, 651, 661], "raw_dipol": 89, "cos2": [89, 92, 93, 94, 222, 648, 649, 650, 662], "498": [89, 230], "evoked_region": 89, "evoked_dipol": 89, "stc_true_region": 89, "get_stc": [89, 93, 647], "start_sampl": [89, 214, 647], "stop_sampl": [89, 214, 647], "stc_true_dipol": 89, "stc_est_region": 89, "stc_est_dipol": 89, "0004": 89, "2931": 89, "34986e": 89, "scorer": [89, 415, 426, 878], "rle": [89, 657], "region_result": 89, "thx": 89, "per_sampl": [89, 652, 653, 654, 655, 656, 657, 658, 659], "ax4": 89, "col": [89, 111, 745, 878], "super": [89, 240], "ticklabel_format": 89, "style": [89, 126, 134, 150, 151, 171, 188, 210, 255, 258, 260, 263, 264, 265, 266, 273, 278, 279, 296, 409, 415, 416, 468, 477, 478, 501, 556, 557, 697, 699, 700, 701, 745, 761, 762, 769, 776, 777, 780, 782, 783, 784, 792, 793, 798, 800, 805, 806, 807, 809, 878], "sci": [89, 210, 589], "scilimit": 89, "tweak": [89, 113, 126, 240, 835, 855, 857], "dipole_result": 89, "571": [89, 90, 208], "plot_stc_metr": [89, 90], "997": [90, 122, 201, 209, 230, 243], "auto_examples_simul": 90, "simulated_raw_data_using_subject_anatomi": [90, 93], "645": [90, 93, 183, 230], "simulate_raw_data": [90, 92], "source_simul": [90, 93, 94], "simulate_evoked_data": [90, 91], "758": [90, 91, 137, 195, 230, 243], "fit_iir_model_raw": [91, 110, 868, 878], "templat": [91, 92, 124, 134, 135, 155, 157, 163, 164, 165, 170, 176, 230, 243, 267, 268, 276, 283, 301, 311, 315, 316, 317, 327, 328, 329, 333, 364, 372, 387, 434, 478, 492, 520, 571, 604, 627, 646, 761, 813, 818, 833, 851, 878], "read_proj": [91, 110, 130, 142, 191, 205, 263, 264, 265, 266, 273, 477, 478, 829, 868], "sample_audvis_ecg": [91, 110, 130, 142, 172, 205, 255], "randomst": [91, 92, 93, 113, 159, 194, 201, 222, 225, 510, 557, 583, 602, 649, 650, 651, 660, 661, 663, 684, 685, 686, 687, 688, 878], "randn": [91, 113, 159, 194, 201, 222, 225, 233, 234, 235], "high_resolut": [91, 804], "wronkiewicz": [92, 878], "wronk": 92, "add_ecg": [92, 93, 650, 662, 868, 878], "add_eog": [92, 93, 649, 662, 868, 878], "epoch_dur": [92, 565], "stagger": 92, "sinusoid": [92, 93, 113, 183, 184, 201, 208, 220, 222, 340, 448, 477, 478, 663, 833], "10hz": 92, "global": [92, 112, 120, 127, 142, 144, 149, 150, 155, 162, 166, 183, 206, 243, 263, 264, 265, 266, 268, 270, 271, 274, 277, 278, 279, 433, 743, 769, 776, 779, 782, 784, 785, 803, 808, 833, 837, 857, 878], "n_samp": [92, 214, 222, 878], "25e": 92, "1e9": [92, 184, 222], "plt_show": [92, 180, 225], "input": [92, 93, 113, 155, 172, 188, 194, 195, 201, 206, 209, 214, 225, 229, 230, 235, 255, 263, 264, 265, 266, 269, 270, 271, 274, 277, 278, 279, 282, 313, 329, 354, 355, 356, 360, 367, 409, 410, 412, 413, 415, 416, 417, 419, 421, 426, 433, 438, 444, 466, 468, 469, 474, 477, 478, 501, 503, 557, 558, 566, 567, 569, 570, 573, 574, 576, 577, 598, 612, 663, 674, 676, 683, 684, 685, 687, 688, 695, 697, 715, 716, 745, 746, 748, 749, 761, 769, 776, 780, 784, 792, 803, 806, 808, 818, 853, 859, 860, 863, 878], "millimet": [92, 93, 156, 160, 182, 334, 338, 452, 467, 493, 510, 609, 860, 878], "calc": 92, "orphan": [92, 211], "ivana": [93, 878], "kojcic": [93, 878], "deslauri": [93, 94, 878], "gauthier": [93, 94, 878], "sam": [93, 94, 878], "doesn": [93, 140, 156, 170, 171, 204, 206, 207, 209, 214, 227, 230, 240, 376, 377, 378, 379, 381, 382, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 546, 557, 560, 574, 578, 585, 605, 644, 698, 700, 717, 790, 837, 845, 853, 857, 878], "fname_info": 93, "g_temp_sup": 93, "g_t_transv": 93, "s_calcarin": 93, "vice": [93, 133, 160, 201, 274, 860], "versa": [93, 133, 160, 201, 274, 860], "moreov": [93, 137, 205, 206, 225], "contralater": [93, 151, 207], "ipsilater": [93, 151, 176], "activation_list": 93, "region_nam": 93, "latenc": [93, 143, 144, 145, 149, 230, 243, 265, 266, 270, 271, 274, 277, 278, 279, 433, 684, 685, 687, 688, 780, 878], "sigma": [93, 116, 127, 137, 142, 195, 225, 263, 264, 521, 690, 691, 713, 723, 735, 776, 806, 860, 863], "gf": 93, "rand": [93, 222], "100m": 93, "30m": 93, "15m": 93, "region_id": 93, "events_tmp": 93, "label_tmp": 93, "amplitude_tmp": 93, "latency_tmp": 93, "wf_tmp": 93, "evoked_aud_left": 93, "evoked_vis_right": 93, "mere": [93, 172, 204, 615, 859], "stc_aud": 93, "stc_vi": 93, "stc_diff": 93, "49264": [93, 178], "64e": [93, 178], "3254294": 93, "92023613": 93, "51105546": 93, "christoph": [93, 114, 151, 155, 194, 243, 353, 415, 681, 878], "destrieux": [93, 155, 243], "ander": [93, 155, 178, 243, 524, 860], "dale": [93, 155, 178, 243, 524, 860], "halgren": [93, 155, 243, 524], "sulci": [93, 155, 160, 221, 243], "nomenclatur": [93, 155, 214, 243], "sine": [94, 220, 255, 712, 720], "everi": [94, 102, 112, 126, 134, 141, 144, 151, 168, 172, 175, 195, 202, 203, 204, 217, 240, 258, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 347, 458, 466, 474, 475, 477, 478, 510, 557, 559, 573, 574, 583, 602, 649, 650, 651, 660, 661, 663, 684, 685, 686, 687, 688, 697, 700, 837, 857, 858], "significantli": [95, 96, 99, 225, 228, 233, 234, 240, 270, 271, 274, 277, 278, 279, 684, 685, 687, 688, 859], "permutation_cluster_test": [95, 225, 228, 229, 688, 868, 878], "1332": [95, 96, 145, 166, 169, 227, 228, 229], "epochs1": [95, 233, 432], "condition1": [95, 233], "epochs2": [95, 233, 432], "condition2": [95, 233], "t_ob": [95, 226, 227, 233, 684, 686, 687, 878], "cluster_p_valu": [95, 227, 228, 229, 233, 234, 235], "n_permut": [95, 99, 111, 225, 226, 227, 228, 229, 230, 234, 235, 684, 685, 686, 687, 688], "tail": [95, 111, 151, 225, 227, 228, 229, 230, 233, 240, 261, 684, 685, 686, 687, 688, 773, 804, 878], "out_typ": [95, 111, 225, 227, 228, 229, 684, 685, 687, 688, 878], "stat_fun": [95, 111, 112, 225, 226, 227, 228, 229, 230, 233, 234, 235, 676, 684, 685, 687, 688], "000227": 95, "167093": 95, "3605": 95, "3933": 95, "4018": 95, "4092": 95, "4064": 95, "827": [95, 180, 187, 208, 230], "4062": 95, "4070": 95, "4052": 95, "erf": [95, 116, 127, 191, 198, 201, 230, 243, 557, 788, 790, 844, 878], "i_c": 95, "347": [95, 101, 169, 195, 230, 878], "cluster_stats_evok": [95, 101], "discoveri": [96, 229, 243, 681, 878], "bonferroni_correct": [96, 225, 868, 878], "fdr_correct": [96, 100, 225, 229, 868], "pval": [96, 229, 675, 681, 684, 685, 687, 688], "ttest_1samp": [96, 225, 690], "n_test": [96, 686], "threshold_uncorrect": 96, "ppf": [96, 210, 225, 227, 230, 233, 234, 587, 684, 685, 687, 688], "reject_bonferroni": 96, "pval_bonferroni": 96, "threshold_bonferroni": 96, "reject_fdr": 96, "pval_fdr": 96, "indep": [96, 681], "threshold_fdr": 96, "xmin": 96, "xmax": 96, "hline": [96, 141, 265, 266, 779], "uncorrect": [96, 225], "bonferroni": [96, 448, 477, 478, 675, 686, 878], "fdr_stats_evok": [96, 101], "generalis": 98, "tradit": [98, 143, 207, 211, 724, 725, 727, 728, 769], "predictor": [98, 141, 225, 556, 600, 683], "inapplic": 98, "rerp": [98, 243, 683], "smith": [98, 125, 225, 226, 243, 386, 683, 684, 685, 687, 688], "kuta": [98, 243, 683], "169": [98, 169, 176, 195, 243, 683], "jona": [98, 100, 127, 195, 230, 243, 684, 685, 687, 688, 878], "sassenhagen": [98, 100, 127, 195, 230, 243, 684, 685, 687, 688, 878], "linear_regression_raw": [98, 101, 868, 878], "rerf": 98, "param": [98, 112, 409, 410, 412, 413, 415, 416, 417, 418, 419, 421, 422, 423, 546, 558, 624, 878], "987": [98, 101, 195, 208, 224, 230], "permutation_t_test": [99, 225, 868], "temporal_mask": 99, "logical_and": [99, 113], "50000": 99, "p_valu": [99, 225, 230, 448, 477, 478, 686], "significant_sensor": 99, "significant_sensors_nam": 99, "49999": 99, "0243": [99, 142, 169], "1323": [99, 169], "1333": [99, 169, 233, 235], "1613": [99, 169], "1643": [99, 169, 194], "2423": [99, 169], "2522": [99, 169], "2622": [99, 169], "2632": [99, 169], "2642": [99, 169], "2643": [99, 169], "stats_pick": 99, "cbar_fmt": [99, 108, 260, 263, 264, 265, 266, 272, 409, 416, 477, 478, 556, 557, 697, 699, 701, 777, 784, 788, 797, 800, 805, 878], "sensor_permutation_test": [99, 101], "psycholinguist": [100, 225], "st\u00e9phane": [100, 226, 243, 392, 854], "dufau": [100, 226, 243, 392, 854], "grainger": [100, 226, 243, 392, 854], "katherin": [100, 226, 243, 392, 726, 729, 854], "midglei": [100, 226, 243, 392, 854], "phillip": [100, 141, 226, 243, 387, 392, 854, 878], "holcomb": [100, 226, 243, 392, 854], "pictur": [100, 226, 243, 273, 392, 854], "snapshot": [100, 172, 226, 243, 392, 815, 837, 854, 878], "megastudi": [100, 226, 243, 392, 854], "psycholog": [100, 226, 243, 392, 854], "1887": [100, 226, 243, 392, 854], "1897": [100, 226, 243, 392, 854], "0956797615603934": [100, 226, 243, 392, 854], "matt": [100, 243, 878], "davi": [100, 243], "ford": [100, 243], "friedmann": [100, 243], "pulverm\u00fcl": [100, 243], "william": [100, 194, 243, 415], "marslen": [100, 243], "wilson": [100, 243], "1383": [100, 243], "1400": [100, 243], "2006": [100, 178, 194, 209, 243, 263, 264, 535, 585, 654, 659, 726, 729], "2005": [100, 162, 209, 243, 430, 535, 568, 585, 654, 657, 659, 857], "048": [100, 140, 142, 149, 169, 183, 217, 222, 226, 243, 711, 713, 723, 727], "tal": [100, 119, 125, 243, 485, 492, 878], "linzen": [100, 119, 878], "pd": [100, 111, 136, 143, 151, 190, 191, 209], "kiloword": [100, 143, 214, 226, 868], "kword_metadata": [100, 143, 226], "epo": [100, 140, 143, 172, 226, 255, 263, 264, 608, 878], "read_epoch": [100, 140, 143, 226, 857, 860, 868, 878], "visualcomplex": [100, 143], "film": [100, 143, 226, 866], "783710": [100, 143], "cent": [100, 143], "141553": [100, 143], "shot": [100, 143], "600033": [100, 143], "cold": [100, 143], "657457": [100, 143], "945661": [100, 143], "characterist": [100, 151, 201, 202, 243, 263, 264, 401, 432, 444, 576, 833], "concret": [100, 143, 144], "imagin": [100, 111, 205], "df": [100, 111, 140, 145, 191, 214, 225, 226, 227, 233, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 540, 684, 687, 697, 699, 700, 701], "cut": [100, 111, 112, 180, 205, 240, 255, 263, 264, 265, 266, 411, 420, 445, 447, 477, 478, 569, 570, 578, 581, 585, 589, 845, 863, 878], "split_legend": [100, 230, 769], "percentil": [100, 134, 135, 136, 146, 263, 264, 270, 271, 273, 274, 277, 278, 279, 477, 478, 733, 764, 769, 775, 798, 803, 808, 809, 878], "gfp": [100, 112, 127, 142, 144, 150, 162, 166, 191, 230, 263, 264, 265, 266, 532, 769, 776, 779, 785, 802, 833, 857, 878], "7424": 100, "plot_evoked_imag": [100, 868, 878], "null": [100, 282, 435, 679, 878], "hypothesi": [100, 172, 226, 675, 679, 681, 686, 866], "colour": [100, 176, 878], "palett": [100, 111, 145], "dark": [100, 134, 172, 263, 264, 477, 478, 557, 745, 775, 792, 798, 878], "reject_h0": 100, "fdr_pval": 100, "plot_imag": [100, 127, 142, 143, 146, 150, 166, 198, 200, 210, 226, 263, 264, 265, 266, 878], "sensor_regress": [100, 101], "458": [101, 145, 184, 230], "auto_examples_stat": 101, "csd_fourier": [102, 698, 702, 703, 704, 706, 707, 868, 878], "csd_multitap": [102, 698, 702, 703, 704, 705, 706, 715, 868, 878], "core": [102, 144, 166, 168, 171, 189, 220, 243, 263, 264, 265, 266, 269, 270, 271, 273, 274, 277, 278, 279, 281, 353, 354, 356, 358, 412, 419, 422, 425, 426, 452, 465, 467, 477, 478, 516, 519, 520, 530, 531, 540, 541, 562, 569, 570, 585, 637, 645, 648, 649, 650, 662, 684, 685, 686, 687, 688, 699, 701, 702, 703, 704, 705, 706, 707, 715, 716, 724, 725, 726, 727, 728, 777, 780, 799, 835, 836, 837, 844, 859, 878], "clariti": [102, 864], "722": [102, 195, 230, 243, 713, 723, 724, 727], "adapt": [102, 112, 166, 190, 207, 222, 225, 243, 263, 264, 265, 266, 296, 297, 414, 448, 449, 477, 478, 530, 531, 557, 585, 699, 701, 704, 707, 713, 715, 723, 741, 777, 837, 843, 854, 859, 878], "csd_fft": 102, "csd_mt": 102, "convolv": [102, 110, 201, 225, 240, 415, 422], "600hz": 102, "10th": 102, "greatli": 102, "minim": [102, 141, 169, 201, 220, 240, 263, 264, 359, 417, 432, 567, 683, 725, 728, 745, 835, 857, 860], "csd_wav": 102, "crossspectraldens": [102, 289, 296, 316, 434, 702, 703, 704, 705, 706, 707, 708, 714, 717, 771, 868, 878], "trick": [102, 199, 240, 243, 686, 841, 878], "comma": [102, 255, 837, 878], "plot_dict": [102, 239], "781": [102, 105, 128, 129, 230], "compute_csd": [102, 105], "taper": [103, 113, 263, 264, 265, 266, 414, 422, 448, 477, 478, 530, 531, 699, 701, 704, 707, 709, 713, 715, 723, 725, 727, 728, 777, 878], "prolat": [103, 238, 243, 263, 264, 265, 266, 477, 478, 699, 701, 709, 715], "spheroid": [103, 238, 243, 263, 264, 265, 266, 477, 478, 699, 701, 709, 715], "sequenc": [103, 137, 243, 255, 263, 264, 265, 266, 477, 478, 674, 699, 701, 709, 745, 777, 854, 860], "compute_source_psd_epoch": [103, 105, 530, 868, 878], "n_epochs_us": 103, "psd_avg": 103, "set_xlim": [103, 112, 151, 205], "731": [103, 105, 195, 230], "423": [105, 162, 195, 230], "auto_examples_time_frequ": 105, "source_power_spectrum_opm": [105, 108], "797": [105, 108, 144, 230], "time_frequency_erd": [105, 111, 878], "time_frequency_global_field_pow": [105, 112], "831": [105, 112, 230], "time_frequency_simul": [105, 113], "794": [105, 113, 144, 208, 230], "source_label_time_frequ": [105, 106], "source_space_time_frequ": [105, 109], "618": [105, 109, 230, 243, 679], "source_power_spectrum": [105, 107], "temporal_whiten": [105, 110], "654": [105, 110, 195, 230], "former": [106, 142, 229, 353, 557, 859, 878], "latter": [106, 142, 151, 168, 409, 412, 413, 415, 416, 417, 418, 419, 421, 422, 423, 558, 860], "source_induced_pow": [106, 868, 878], "epochs_induc": 106, "subtract_evok": [106, 112, 203, 263, 264, 600, 878], "this_epoch": 106, "inter": [106, 134, 243, 260, 263, 264, 265, 266, 272, 281, 409, 416, 433, 477, 478, 556, 557, 571, 649, 697, 699, 701, 724, 725, 727, 728, 762, 777, 784, 788, 797, 800, 805, 807], "itc": [106, 724, 725, 726, 727, 728, 729], "baseline_mod": [106, 540, 541], "compute_source_psd": [107, 108, 531, 868, 878], "100hz": 107, "2048": [107, 110, 113, 132, 263, 264, 265, 266, 408, 477, 478, 530, 799], "psd_dspm": 107, "neuromag": [108, 156, 158, 160, 166, 168, 183, 185, 199, 206, 209, 214, 215, 216, 255, 256, 261, 263, 264, 265, 266, 268, 273, 319, 429, 450, 477, 478, 488, 494, 501, 507, 585, 607, 632, 699, 701, 775, 778, 783, 798, 833, 849, 854, 860, 863, 878], "welch": [108, 222, 238, 239, 240, 243, 263, 264, 265, 266, 477, 478, 699, 701, 716, 799, 878], "next_fast_len": 108, "src_fname": [108, 233, 234, 235], "vv_fname": 108, "squid_resting_st": 108, "vv_erm_fnam": 108, "squid_empty_room": 108, "vv_trans_fnam": 108, "opm_fnam": 108, "opm_resting_state_raw": 108, "opm_erm_fnam": 108, "opm_empty_room_raw": 108, "opm_tran": 108, "opm_coil_def_fnam": 108, "vv": 108, "simplifi": [108, 179, 201, 243, 255, 263, 264, 265, 266, 477, 478, 857, 858, 878], "housekeep": [108, 211], "raw_erm": [108, 128, 184, 191, 853], "new_sfreq": 108, "nyquist": [108, 201, 202, 878], "meg2233": 108, "meg1842": 108, "hold": [108, 191, 222, 225, 263, 264, 265, 266, 430, 477, 478, 576, 585, 695, 779, 799, 801, 833, 860, 866], "61999": 108, "60999": 108, "dist": [108, 156, 157, 210, 221, 255, 269, 276, 281, 364, 428, 461, 591, 667, 668, 669, 671, 672, 863], "make_bem_solut": [108, 158, 191, 364, 428, 459, 514, 520, 521, 604, 605, 634, 636, 826, 853, 860, 868, 878], "169022": 108, "169992": 108, "202": [108, 169, 187, 225, 226, 230, 863, 878], "2052": 108, "995623": 108, "029776": 108, "088592": 108, "062622": 108, "916188": 108, "395825": 108, "069381": 108, "399641": 108, "914042": 108, "993107": 108, "074371": 108, "090590": 108, "079171": 108, "995577": 108, "050589": 108, "086427": 108, "057412": 108, "994603": 108, "691": [108, 191, 193, 194, 230], "334": [108, 111, 169, 225, 230], "692": [108, 144, 230, 240], "percentag": [108, 204, 263, 264, 559, 653, 654, 655, 656, 657, 659, 733, 774, 878], "freq_band": [108, 137], "topo": [108, 114, 142, 150, 210, 239, 263, 264, 748, 758, 769, 806, 866, 878], "stc_psd": [108, 530], "sensor_psd": [108, 530], "return_sensor": [108, 530, 531], "topo_norm": 108, "keepdim": [108, 137], "stc_norm": 108, "3660": 108, "1969": 108, "014611": 108, "18765e": 108, "291": [108, 111, 120, 129, 169, 208, 230], "34378": 108, "07671e": 108, "3720": 108, "1698": 108, "007069": 108, "0841e": 108, "46031": 108, "26253e": 108, "coverag": 108, "worthwhil": [108, 151, 204], "plot_band": 108, "inferno": [108, 136, 225], "cau": 108, "show_trac": [108, 126, 135, 270, 271, 274, 277, 278, 279, 745, 803, 808, 878], "fig_alpha": 108, "brain_alpha": [108, 271, 277, 279, 808], "7045685": 108, "96394224": 108, "07428314": 108, "profil": [108, 171, 211, 835, 837], "beneath": 108, "fig_beta": 108, "brain_beta": 108, "18935281": 108, "33488802": 108, "88328023": 108, "fig_beta_opm": 108, "brain_beta_opm": 108, "28867831": 108, "68102302": 108, "87342874": 108, "source_band_induced_pow": [109, 868, 878], "use_fft": [109, 111, 239, 422, 540, 541, 703, 706, 722, 724, 725, 727, 728], "induced_power_": 109, "proj_fnam": [110, 191], "20000": 110, "innov": 110, "d_": 110, "lfilter": 110, "regener": [110, 263, 264, 878], "r_": [110, 654, 659, 860], "dummi": [110, 124, 220, 235], "nfft": [110, 222], "written": [111, 171, 172, 175, 208, 216, 259, 302, 306, 441, 442, 476, 477, 478, 619, 625, 823, 828, 831, 844, 853, 866, 878], "desynchron": [111, 239, 243, 854], "conceptu": [111, 151, 201, 204, 243], "ersp": [111, 878], "perturb": 111, "goal": [111, 134, 137, 837, 855, 859, 866], "c3": [111, 127, 144, 159, 500], "35hz": 111, "customari": [111, 860], "klotzsch": [111, 878], "cb": 111, "mpg": 111, "twoslopenorm": 111, "seaborn": [111, 145, 209], "sn": [111, 145, 209], "tfr_multitap": [111, 113, 239, 422, 724, 725, 726, 727, 729, 868, 878], "permutation_cluster_1samp_test": [111, 225, 227, 687, 868, 878], "pcluster_test": 111, "strip": [111, 243], "961": [111, 160, 230], "suitabl": [111, 146, 159, 161, 227, 229, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 305, 352, 372, 408, 433, 464, 477, 478, 500, 514, 684, 697, 699, 700, 701, 833, 853, 854, 860, 866], "cnorm": [111, 260, 263, 264, 265, 266, 272, 409, 416, 477, 478, 556, 557, 697, 699, 701, 762, 777, 784, 788, 797, 800, 805, 807, 878], "asymmetr": [111, 760], "rdbu": 111, "equal": [111, 140, 147, 148, 149, 151, 165, 168, 172, 175, 176, 180, 198, 201, 216, 217, 233, 235, 258, 260, 261, 262, 263, 264, 265, 266, 269, 270, 271, 273, 274, 277, 278, 279, 285, 296, 297, 316, 352, 353, 357, 358, 368, 369, 370, 409, 416, 417, 422, 432, 434, 452, 453, 466, 472, 474, 475, 477, 478, 494, 517, 524, 535, 540, 541, 556, 557, 569, 574, 583, 590, 591, 616, 653, 678, 679, 684, 685, 687, 688, 689, 691, 692, 697, 699, 700, 701, 716, 762, 763, 769, 773, 776, 777, 778, 779, 781, 784, 785, 800, 801, 805, 807, 833, 859, 860, 864, 878], "promin": [111, 143, 198, 210, 240, 354, 355, 356], "extrem": [111, 142, 240, 265, 266, 296, 297, 320, 353, 357, 358, 368, 369, 370, 409, 416, 417, 452, 453, 472, 474, 475, 535, 684, 685, 687, 688, 785], "vcenter": 111, "step_down_p": [111, 684, 685, 687, 688], "buffer_s": [111, 225, 229, 230, 233, 234, 235, 527, 684, 685, 687, 688], "tfr_ev": 111, "gridspec_kw": [111, 126, 176, 210], "width_ratio": [111, 176, 210], "stack": [111, 141, 222, 233, 644, 740, 742, 841, 842, 845], "mask_styl": [111, 265, 266, 697, 781], "set_yscal": 111, "724718": 111, "552076": 111, "183231": 111, "296": [111, 169, 222, 224, 225, 230], "314": [111, 169, 230], "294": [111, 169, 208, 230], "287": [111, 169, 230], "235": [111, 158, 169, 181, 187, 208, 225, 230], "316": [111, 144, 169, 194, 208, 225, 230, 243, 415], "528367": 111, "706422": 111, "315": [111, 169, 230, 878], "342": [111, 112, 120, 162, 169, 230, 243, 265, 266, 353, 785, 857], "324": [111, 169, 195, 225], "349": [111, 169, 243, 860], "323": [111, 169, 208, 209, 230], "581589": 111, "346448": 111, "321": [111, 158, 164, 169, 201, 208, 230], "713872": 111, "754759": 111, "360704": 111, "309": [111, 169, 225, 230, 243, 589, 726, 729], "322": [111, 169, 230], "992503": 111, "416450": 111, "044340": 111, "070444": 111, "292": [111, 169, 208, 225], "epochstfr": [111, 113, 291, 528, 697, 708, 719, 727, 728, 730, 868, 878], "datafram": [111, 140, 147, 148, 149, 151, 165, 190, 191, 209, 214, 226, 238, 257, 258, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 433, 477, 478, 612, 683, 697, 699, 700, 701, 860, 878], "to_data_fram": [111, 136, 140, 145, 149, 214, 226, 257, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 697, 699, 700, 701, 860, 878], "0000": [111, 837], "473093": 111, "474571": 111, "764021": 111, "9875": 111, "491659": 111, "480088": 111, "762445": 111, "9750": [111, 878], "500872": 111, "469376": 111, "749421": 111, "9625": 111, "500605": 111, "449373": 111, "728686": 111, "9500": 111, "515911": 111, "443439": 111, "719536": 111, "lineplot": [111, 145], "confid": [111, 112, 142, 145, 151, 166, 176, 206, 261, 268, 557, 676, 699, 701, 769, 790, 858, 878], "long_format": [111, 145, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 697, 699, 700, 701, 878], "freq_bound": 111, "delta": [111, 137, 201, 263, 264, 265, 266, 474, 477, 478, 540, 699, 701, 777], "theta": [111, 112, 137, 263, 264, 265, 266, 477, 478, 699, 701, 777], "freq_bands_of_interest": 111, "remove_unused_categori": 111, "reorder_categori": 111, "facetgrid": 111, "margin_titl": 111, "n_boot": 111, "axline_kw": 111, "dash": [111, 140, 150, 172, 202, 205, 209, 210, 217, 260, 263, 264, 265, 266, 477, 478, 699, 701, 769, 770, 796, 799, 878], "set_axis_label": 111, "col_templ": 111, "col_nam": [111, 268, 863], "row_templ": 111, "row_nam": [111, 267, 863], "add_legend": [111, 745], "df_mean": 111, "queri": [111, 140, 145, 149, 165, 218, 226, 238, 258, 263, 264, 436, 700], "groupbi": [111, 145, 151, 226], "reset_index": [111, 145], "col_ord": 111, "violinplot": [111, 145], "deep": [111, 137, 145, 158, 181, 201, 243, 263, 264, 265, 266, 287, 409, 410, 412, 413, 415, 416, 417, 418, 419, 421, 422, 423, 477, 478, 554, 555, 558, 697, 699, 700, 701, 742, 745, 761, 860, 878], "hue_ord": 111, "gert": [111, 243], "pfurtschel": [111, 243], "fernando": [111, 243, 853], "lope": [111, 243, 853], "da": [111, 243, 853], "silva": [111, 243, 853], "principl": [111, 202, 225, 230, 243, 855, 860], "1842": [111, 169, 243], "1857": [111, 194, 243], "00141": [111, 243], "bernhard": [111, 243, 472], "graimann": [111, 243], "jane": [111, 243], "huggin": [111, 243], "simon": [111, 243, 878], "levin": [111, 243], "ecog": [111, 114, 134, 135, 138, 139, 165, 169, 214, 220, 225, 243, 263, 264, 265, 266, 268, 274, 276, 310, 311, 320, 370, 372, 381, 438, 442, 477, 478, 492, 554, 555, 582, 627, 642, 692, 697, 699, 700, 701, 745, 761, 801, 813, 815, 833, 834, 844, 860, 878], "00697": [111, 243], "exposur": [111, 204, 243, 837], "tone": [111, 166, 243, 854], "1993": [111, 178, 243], "90110": [111, 243], "rectifi": 112, "uncertainti": [112, 238, 243, 263, 264, 265, 266, 477, 478, 699, 701, 709, 715, 844], "importantli": [112, 113, 200, 853], "hari": [112, 113, 125, 178, 243, 878], "neuromagnet": [112, 204, 243, 557], "1997": [112, 180, 205, 206, 243, 296, 297, 650, 713, 723, 724, 727, 860], "s0166": [112, 243], "2236": [112, 243], "10065": [112, 243], "bradlei": [112, 243], "efron": [112, 243], "trevor": [112, 243], "hasti": [112, 243], "institut": [112, 243, 726, 729], "mathemat": [112, 151, 176, 199, 201, 209, 225, 243, 505, 524, 684, 726, 729, 837, 853, 860, 878], "monograph": [112, 243], "cambridg": [112, 151, 243, 353], "univers": [112, 243, 254, 353, 448, 854, 859, 865, 878], "york": [112, 201, 243, 254, 448, 865, 878], "isbn": [112, 151, 201, 222, 243, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 296, 297, 353, 477, 478, 679, 697, 700], "14989": [112, 243], "web": [112, 146, 204, 240, 243, 273, 545, 753, 866, 878], "stanford": [112, 243], "casi": [112, 243], "bootstrap_confidence_interv": [112, 868], "iter_freq": 112, "frequency_map": 112, "job": [112, 202, 204, 255, 263, 264, 265, 266, 269, 270, 271, 273, 274, 277, 278, 279, 281, 353, 354, 356, 358, 411, 412, 414, 415, 419, 420, 421, 422, 425, 426, 447, 448, 449, 452, 465, 467, 477, 478, 516, 519, 520, 530, 531, 540, 541, 562, 569, 570, 637, 645, 648, 649, 650, 662, 684, 685, 686, 687, 688, 699, 701, 702, 703, 704, 705, 706, 707, 715, 716, 724, 725, 726, 727, 728, 729, 777, 780, 799, 878], "skip": [112, 134, 144, 149, 165, 166, 170, 172, 190, 201, 240, 255, 341, 497, 530, 573, 635, 837, 853, 863, 878], "option": [112, 124, 134, 135, 140, 142, 150, 151, 156, 161, 162, 165, 166, 167, 168, 171, 172, 173, 178, 188, 195, 198, 201, 204, 209, 210, 214, 216, 217, 220, 225, 226, 229, 235, 238, 240, 260, 261, 263, 264, 265, 266, 270, 271, 272, 273, 274, 276, 277, 278, 279, 283, 284, 302, 308, 311, 353, 363, 368, 371, 384, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 430, 440, 441, 442, 447, 448, 449, 451, 453, 472, 474, 475, 477, 478, 490, 492, 498, 516, 520, 524, 525, 526, 527, 528, 530, 531, 535, 537, 539, 540, 541, 549, 554, 556, 557, 558, 567, 568, 569, 570, 571, 576, 585, 605, 615, 617, 627, 662, 667, 671, 682, 684, 685, 687, 688, 691, 692, 697, 699, 700, 701, 735, 745, 761, 762, 763, 769, 773, 775, 777, 779, 781, 784, 785, 788, 792, 795, 797, 798, 799, 800, 801, 803, 805, 807, 808, 809, 811, 843, 845, 859, 860, 863, 875, 878], "apply_hilbert": [112, 113, 114, 136, 167, 263, 264, 265, 266, 477, 478, 878], "269399": 112, "897": [112, 195, 230], "307": [112, 169, 208, 225], "1202": 112, "emerg": 112, "bootstrap": [112, 142, 172, 676, 699, 701, 769, 878], "domin": [112, 203, 209, 240, 270, 271, 274, 277, 278, 279, 443, 557], "helper": [112, 134, 225, 311, 329, 867], "winter_r": 112, "freq_nam": 112, "ci_low": 112, "ci_up": 112, "dhz": 112, "xy": [112, 114, 136, 181, 320, 429, 746, 815, 860], "horizontalalign": [112, 134, 201, 205], "xycoord": 112, "trade": [113, 201, 725, 728], "bharadwaj": [113, 125, 243, 878], "berkelei": [113, 114, 254, 865], "tfr_stockwel": [113, 239, 724, 725, 726, 727, 728, 868, 878], "tfr_array_morlet": [113, 725, 726, 727, 728, 729, 868, 878], "centers_to_edg": [113, 868, 878], "sim0001": 113, "sim0002": 113, "1024": [113, 134, 684, 685, 687, 688], "burst": [113, 183, 198, 854], "ramp": [113, 201], "logical_or": 113, "on_tim": 113, "han": [113, 579, 649, 650, 724, 725, 727, 728, 878], "sin50hz": 113, "4000": [113, 166, 206, 255, 500], "41160": 113, "41159": 113, "time_bandwidth": [113, 422, 725, 728], "sim": [113, 532, 860], "nmore": 113, "1025": [113, 144, 194, 238], "balanc": [113, 200, 201, 225, 229, 653, 678, 878], "strictli": [113, 151, 161, 168, 169, 178, 201, 203, 289, 745, 878], "regard": [113, 207, 222, 230, 239, 860, 878], "recoverd": 113, "lossless": 113, "disregard": 113, "numer": [113, 156, 162, 171, 201, 204, 214, 225, 230, 269, 276, 352, 375, 444, 469, 477, 478, 557, 674, 684, 685, 687, 688, 710, 857, 859, 860, 866, 878], "all_n_cycl": 113, "isinst": [113, 140, 258, 476], "exagger": 113, "wise": [113, 162, 198, 202, 265, 266, 418, 686, 833, 878], "epochs_hilb": 113, "tfr_data": 113, "413": [113, 178, 225, 230, 243], "3301": 113, "avgpow": 113, "avg_pow": [113, 724, 725], "mesh": [113, 156, 160, 161, 175, 269, 271, 277, 279, 307, 308, 359, 408, 464, 465, 628, 745, 804, 808, 831, 843, 878], "electrocorticographi": [114, 134, 136, 243, 263, 264, 265, 266, 477, 478, 554, 555, 697, 699, 700, 701, 854, 860, 878], "scatterplot": 114, "clickableimag": [114, 868], "own": [114, 126, 151, 177, 183, 206, 217, 227, 230, 263, 264, 265, 266, 270, 273, 274, 278, 320, 475, 477, 478, 585, 745, 776, 803, 837, 840, 841, 857, 859, 863], "dirnam": [114, 124, 159, 171], "pathlib": [114, 122, 144, 157, 170, 172, 273, 376, 377, 378, 381, 382, 384, 389, 392, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 520, 833, 878], "noqa": [114, 116, 170, 205, 225], "f401": 114, "snapshot_brain_montag": [114, 136, 810, 868, 878], "ecog_data_fnam": 114, "sample_ecog_ieeg": [114, 134], "click": [114, 132, 134, 142, 150, 151, 156, 161, 181, 191, 199, 204, 216, 217, 239, 260, 263, 264, 265, 266, 272, 278, 279, 409, 416, 477, 478, 556, 557, 697, 699, 701, 746, 758, 766, 775, 776, 777, 779, 781, 783, 784, 788, 792, 797, 798, 799, 800, 801, 805, 806, 807, 809, 835, 837, 843, 855, 866, 878], "layout_path": 114, "__file__": [114, 122, 170, 171, 172], "layout_nam": 114, "custom_layout": 114, "lout": [114, 170, 312, 325, 326, 337, 878], "coreg": [114, 134, 135, 157, 158, 159, 160, 311, 468, 471, 761, 853, 860, 868, 878], "estimate_head_mri_t": [114, 134, 135, 868, 878], "sample_ecog": [114, 134], "apply_tran": [114, 134, 135, 156, 160, 182, 311, 878], "conjunct": [114, 225, 258, 263, 411, 866], "xy_pt": [114, 136], "beta_pow": 114, "fig2": [114, 151, 170], "coolwarm": 114, "cbar": [114, 126, 146, 195, 225, 764], "set_axis_off": [114, 136, 172], "bbox_inch": [114, 878], "tight": [114, 151, 161, 194, 265, 266, 720, 779, 781, 878], "669": [114, 230], "mous": [114, 191, 216, 260, 261, 263, 264, 265, 266, 272, 409, 416, 468, 477, 478, 556, 557, 697, 699, 701, 746, 759, 761, 773, 775, 776, 777, 779, 780, 781, 784, 788, 797, 799, 800, 805, 855, 878], "imread": [114, 172], "plot_click": [114, 746], "to_layout": [114, 746], "got": [114, 144, 171, 199, 204, 222, 840, 878], "read_layout": [114, 170, 312, 868, 878], "3d_to_2d": [114, 129], "scalarmapp": 115, "low_contrast": [115, 125, 134, 135, 181, 190, 270, 271, 274, 277, 278, 279, 745, 803, 808], "rh_data": [115, 175, 274, 277], "rh_vertno": [115, 175, 274, 277, 660], "brodmann": 115, "ba44": 115, "add_head": [115, 135, 156, 190, 745, 878], "seghead": [115, 156, 157, 158, 161, 172, 176, 182, 183, 255, 261, 745, 761, 773], "read_tran": [115, 117, 156, 160, 178, 191, 276, 460, 662, 832, 868, 878], "role": [115, 165, 170, 177, 186, 187, 260, 261, 265, 267, 268, 274, 363, 523, 524, 535, 606, 615, 617, 630, 645, 745, 754, 761, 773, 813, 837, 859], "sample_audvis_set1": 115, "ylorrd": 115, "add_dipol": [115, 745, 878], "1e8": 115, "static": [115, 134, 180, 209, 214, 243, 255, 262, 386, 733, 734, 735, 835, 863, 878], "add_ax": [115, 126, 146], "embed": [116, 156, 172, 200, 201, 273, 837, 844, 878], "simplic": [116, 177, 195, 201, 225, 229, 857, 878], "instal": [116, 134, 135, 136, 146, 155, 161, 171, 181, 255, 263, 264, 265, 266, 281, 302, 306, 337, 383, 386, 408, 411, 415, 420, 447, 448, 449, 477, 478, 700, 837, 845, 857, 858, 861, 878], "order_func": 116, "spectral_embed": 116, "rbf_kernel": 116, "this_data": 116, "good_pick": 116, "bad_pick": [116, 211], "plt_time": 116, "overlay_tim": [116, 127, 263, 264, 776, 878], "renaud": [116, 243], "keriven": [116, 243], "maureen": [116, 243], "clerc": [116, 243], "1051": [116, 208, 243], "1061": [116, 243], "2037139": [116, 243], "channel_epochs_imag": [116, 129], "616": [117, 129, 230], "eeg_on_scalp": [117, 129], "upon": [118, 144, 157, 170, 172, 263, 264, 273, 415, 477, 478, 746, 762, 815, 837, 843, 859, 878], "hosaka": [118, 243, 762, 878], "flow": [118, 178, 243, 762, 878], "underneath": [118, 762, 878], "poor": [118, 198, 201, 210, 762, 878], "man": [118, 151, 172, 243, 762], "hidehiro": [118, 243, 762], "electrocardiologi": [118, 243, 762], "1976": [118, 243, 762], "s0022": [118, 243, 762], "0736": [118, 243, 762], "80041": [118, 243, 762], "sheraz": [118, 125, 128, 243, 572, 876, 878], "khan": [118, 125, 128, 243, 572, 876, 878], "khansheraz": 118, "plot_arrowmap": [118, 150, 868, 878], "evoked_mag": 118, "evoked_grad": 118, "topoplot": [118, 144, 170, 204, 240, 762, 765, 878], "max_time_idx": 118, "latitud": [118, 762], "longitud": [118, 160, 762], "radial": [118, 158, 530, 531, 541, 638, 762], "cartesian": [118, 175, 178, 762, 860, 863], "info_from": [118, 762, 878], "info_to": [118, 762], "raw_ctf": 118, "raw_ctf_info": 118, "evoked_arrowmap": [118, 129], "engeman": 119, "miko\u0142aj": [119, 865, 878], "magnuski": [119, 865, 878], "mmagnuski": [119, 878], "swp": [119, 254, 865], "pl": 119, "20m": 119, "regularli": [119, 166, 168], "multilin": [119, 878], "all_tim": 119, "rm": [119, 150, 151, 188, 222, 260, 263, 264, 265, 266, 274, 409, 416, 477, 478, 532, 556, 557, 697, 779, 783, 784, 788, 800, 807, 860, 878], "drawn": [119, 150, 217, 225, 260, 263, 264, 265, 266, 271, 272, 277, 279, 409, 416, 477, 478, 556, 557, 571, 649, 650, 697, 699, 701, 762, 763, 768, 769, 777, 778, 781, 783, 784, 788, 797, 799, 800, 801, 805, 807, 808, 878], "spectral_r": 119, "circl": [119, 134, 161, 170, 221, 260, 263, 264, 265, 266, 272, 311, 409, 416, 477, 478, 556, 557, 571, 697, 699, 701, 750, 762, 767, 769, 777, 779, 781, 784, 785, 788, 795, 797, 799, 800, 801, 805, 807, 833, 837, 878], "extrapol": [119, 150, 210, 260, 263, 264, 265, 266, 272, 409, 416, 477, 478, 556, 557, 571, 697, 699, 701, 762, 777, 784, 788, 797, 800, 805, 807, 878], "box": [119, 134, 161, 189, 260, 263, 264, 265, 266, 272, 312, 320, 337, 409, 416, 477, 478, 556, 557, 571, 697, 699, 701, 741, 762, 777, 779, 781, 783, 784, 788, 797, 800, 805, 807, 843, 878], "stretch": [119, 200, 745], "beyond": [119, 144, 166, 190, 235, 260, 263, 264, 265, 266, 272, 409, 416, 477, 478, 510, 556, 557, 571, 692, 697, 699, 701, 741, 762, 777, 784, 788, 797, 798, 800, 805, 807], "axes_row": 119, "extr": 119, "margin": [119, 126, 700, 768, 769], "exceed": [119, 184, 206, 209, 227, 263, 557, 583, 700], "mask_param": [119, 230, 260, 263, 264, 265, 266, 409, 416, 477, 478, 556, 697, 699, 701, 762, 777, 784, 800, 805, 807], "markers": [119, 230, 260, 263, 264, 265, 266, 409, 416, 477, 478, 556, 697, 699, 701, 762, 777, 784, 800, 805, 807], "markerfacecolor": [119, 260, 263, 264, 265, 266, 409, 416, 477, 478, 556, 697, 699, 701, 762, 777, 784, 800, 805, 807], "_time": 119, "significant_channel": 119, "_channel": 119, "in1d": 119, "_ch": 119, "perhap": [119, 201, 206, 214, 225], "imped": [119, 201, 243, 878], "image_interp": [119, 260, 263, 264, 265, 266, 272, 409, 416, 477, 478, 556, 557, 571, 697, 699, 701, 762, 777, 784, 788, 797, 800, 805, 807, 878], "cubic": [119, 260, 263, 264, 265, 266, 272, 409, 416, 477, 478, 556, 557, 571, 697, 699, 701, 745, 762, 777, 784, 788, 797, 800, 805, 807, 878], "smoothest": 119, "voronoi": [119, 260, 263, 264, 265, 266, 272, 409, 416, 477, 478, 556, 557, 571, 697, 699, 701, 762, 777, 784, 788, 797, 800, 805, 807, 878], "debug": [119, 162, 171, 255, 376, 377, 378, 381, 382, 389, 392, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 644, 740, 743, 837, 857], "unalt": [119, 360], "properli": [119, 134, 136, 155, 156, 161, 168, 183, 189, 199, 205, 206, 214, 215, 233, 235, 243, 255, 258, 261, 262, 263, 264, 265, 266, 268, 270, 271, 274, 277, 278, 279, 302, 306, 346, 359, 411, 415, 420, 447, 448, 449, 477, 478, 573, 574, 642, 662, 697, 700, 741, 785, 811, 835, 837, 840, 842, 853, 878], "animate_topomap": [119, 265, 266, 878], "frame_r": [119, 265, 266], "blit": [119, 265, 266], "evoked_topomap": [119, 129], "excel": [120, 150, 160, 201, 222], "diagnost": [120, 165, 172, 204, 209, 212], "rare": [120, 273, 859, 878], "80e": [120, 210, 860], "uncom": 120, "fewer": [120, 144, 151, 161, 170, 172, 198, 201, 215, 225, 235, 263, 264, 265, 266, 273, 411, 415, 420, 421, 445, 447, 448, 477, 478, 578, 582, 725, 728, 745, 781, 878], "007": [120, 127, 140, 141, 142, 145, 149, 166, 169, 200, 206, 222, 226, 243, 281, 589], "008": [120, 127, 140, 145, 149, 151, 166, 169, 209, 222, 243, 585], "method_param": [120, 179, 353, 358, 524, 525, 526, 527, 528, 530, 531, 537, 540, 541], "diagonal_fix": [120, 162, 353, 878], "return_estim": [120, 162, 353, 358, 857], "likelihood": [120, 151, 162, 177, 243, 260, 265, 266, 353, 358, 557, 785, 857, 860], "loglik": [120, 260], "1891": 120, "unseen": [120, 162, 177, 353, 857], "descend": [120, 162, 177, 878], "1629": 120, "666": [120, 195, 230], "1659": 120, "813": [120, 230], "1802": [120, 180, 199, 243], "6663146376516": 120, "8130475750986": 120, "10315358209": 120, "evoked_whiten": [120, 129], "read_raw_artemis123": [122, 188, 483, 860, 868, 878], "read_raw_bti": [122, 185, 188, 860, 868, 878], "read_raw_kit": [122, 171, 188, 483, 860, 868, 878], "set_3d_titl": [122, 124, 150, 868, 878], "root_path": 122, "parent": [122, 150, 161, 170, 171, 172, 878], "spm_ctf_meg_example_faces1_3d": 122, "241": [122, 169, 202, 225, 230, 448, 477, 478], "324474": 122, "bti_path": 122, "test_pdf_linux": 122, "test_config_linux": 122, "test_hs_linux": 122, "magn": [122, 188, 860], "3600wh": 122, "pdf": [122, 185, 194, 243, 255, 386, 472, 488, 861], "critic": [122, 151, 160, 171, 178, 185, 201, 209, 225, 227, 230, 585, 644, 743, 854, 864], "mne_create_comp_data": [122, 185, 255, 488], "print_tabl": [122, 185], "routin": [122, 185, 202, 452, 557, 585, 866, 877, 878], "magnes_3600wh": [122, 185], "kit_path": 122, "sqd": [122, 171, 255, 480, 501, 611, 860], "artemis_data_2017": 122, "10h": 122, "38m": 122, "59s_phantom_1k_hpi_1": 122, "artemis123_mneloc": 122, "1863": 122, "hpifit": [122, 208, 255], "ok": [122, 188, 208, 259, 269], "cardin": [122, 166, 169, 214, 220, 304, 305, 334, 428, 833, 863, 878], "098": [122, 129], "meg_sensor": [122, 129, 878], "create_3d_figur": [123, 156, 160, 178, 747, 868], "747": [123, 129, 195, 230], "mne_helmet": [123, 129], "ship": [124, 170, 225, 263, 264, 265, 266, 268, 321, 322, 327, 328, 461, 477, 478, 849, 860, 878], "joan": [124, 137, 159, 878], "massich": [124, 137, 159, 878], "mailsik": [124, 137, 159], "op": [124, 134, 159, 184, 185, 208, 263, 264, 265, 266, 477, 478], "get_builtin_montag": [124, 170, 263, 264, 265, 266, 268, 327, 461, 477, 478, 868, 878], "against": [124, 140, 141, 149, 204, 214, 243, 654, 659, 837, 878], "current_montag": 124, "mri_fiduci": [124, 156, 159, 183, 761, 878], "montage_sgskip": [124, 129], "hcp": [125, 243, 386, 844, 866, 878], "mmp1": [125, 243, 386, 878], "448": [125, 171, 195, 230, 276, 878], "mmp": [125, 386], "Of": [125, 142, 198, 205, 206, 222, 590, 591], "acknowledg": [125, 201], "wu": 125, "minn": 125, "publicli": [125, 166, 401, 402, 854, 859], "get_brain_class": [125, 155, 868], "fetch_hcp_mmp_parcel": [125, 181, 868, 878], "fetch_aparc_sub_parcel": [125, 868], "hcpmmp1": 125, "add_annot": [125, 135, 155, 181, 745], "aud_label": 125, "l_a1_roi": 125, "hcpmmp1_combin": [125, 181, 386], "aparc_sub": 125, "matthew": [125, 180, 243, 386], "glasser": [125, 243, 386], "timothi": [125, 243, 386, 878], "coalson": [125, 243, 386], "emma": [125, 243, 386, 557], "robinson": [125, 180, 243, 386], "hacker": [125, 243, 386], "harwel": [125, 243, 386], "essa": [125, 243, 386], "yacoub": [125, 243, 386], "kamil": [125, 243, 386], "ugurbil": [125, 243, 386], "jesper": [125, 243, 386, 878], "andersson": [125, 243, 386], "beckmann": [125, 243, 386], "jenkinson": [125, 243, 386], "stephen": [125, 180, 194, 225, 226, 243, 386, 415, 557, 684, 685, 687, 688, 726, 729, 878], "essen": [125, 243, 386], "modal": [125, 189, 229, 235, 243, 386], "cerebr": [125, 243, 386], "178": [125, 169, 183, 184, 185, 195, 200, 225, 229, 230, 235, 237, 243, 386], "nature18933": [125, 243, 386], "javeria": [125, 243], "hashmi": [125, 243], "fahimeh": [125, 243, 878], "mamashli": [125, 243, 878], "konstantino": [125, 243], "michmizo": [125, 243], "manfr": [125, 243, 878], "kitzbichl": [125, 243, 878], "santosh": [125, 243], "ganesan": [125, 243], "keri": [125, 243], "lee": [125, 134, 243, 269, 274, 557, 583, 878], "garel": [125, 243], "susan": [125, 243, 650], "whitfield": [125, 243], "gabri": [125, 243], "randi": [125, 243, 524], "gollub": [125, 243], "jian": [125, 243], "kong": [125, 243], "kunjan": [125, 243], "rana": [125, 243], "kenet": [125, 243], "matur": [125, 243], "trajectori": [125, 243], "network": [125, 194, 243, 296, 415, 557, 848], "mediat": [125, 243, 726, 729], "018": [125, 127, 140, 149, 169, 222, 243, 572], "mccloi": [126, 208, 865, 878], "dan": [126, 208, 878], "mpl_toolkit": [126, 170, 205, 225, 230, 769], "axes_grid1": [126, 230, 769], "make_axes_locat": [126, 230], "imagegrid": 126, "inset_loc": [126, 769], "suppos": [126, 168, 205, 758, 860], "max_t": 126, "17909658": 126, "18448887": 126, "83197989": 126, "screenshot": [126, 172, 745, 815, 878], "pixel": [126, 142, 172, 225, 260, 261, 263, 264, 265, 266, 270, 271, 272, 273, 274, 277, 278, 279, 409, 416, 468, 477, 478, 556, 557, 697, 699, 701, 745, 761, 762, 773, 777, 784, 788, 797, 800, 803, 805, 807, 808, 833, 878], "integ": [126, 140, 142, 143, 145, 149, 150, 151, 160, 166, 168, 169, 171, 175, 189, 202, 204, 214, 215, 220, 230, 255, 258, 260, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 282, 296, 297, 309, 312, 313, 320, 323, 326, 328, 353, 357, 358, 368, 369, 370, 409, 411, 416, 425, 426, 430, 431, 438, 447, 448, 451, 452, 453, 467, 472, 474, 475, 477, 478, 509, 533, 534, 535, 556, 557, 559, 571, 572, 573, 574, 579, 582, 591, 593, 600, 609, 611, 615, 645, 647, 665, 683, 692, 697, 699, 700, 701, 705, 706, 707, 708, 710, 728, 731, 762, 769, 775, 776, 777, 778, 779, 781, 782, 783, 784, 785, 788, 789, 790, 792, 794, 796, 797, 798, 799, 800, 805, 807, 833, 860, 863, 878], "nonwhite_pix": 126, "nonwhite_row": 126, "nonwhite_col": 126, "cropped_screenshot": 126, "nrows_ncol": 126, "axes_pad": 126, "updat": [126, 146, 170, 172, 179, 189, 199, 201, 206, 209, 211, 214, 217, 240, 255, 260, 263, 264, 265, 266, 268, 272, 287, 301, 364, 369, 371, 376, 377, 378, 379, 381, 382, 384, 385, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 412, 413, 415, 416, 417, 418, 419, 421, 422, 423, 444, 461, 472, 477, 478, 497, 523, 558, 637, 641, 732, 745, 835, 837, 854, 859, 863, 878], "rcparam": [126, 137, 201, 878], "labels": 126, "titles": 126, "medium": [126, 156, 183, 255, 307, 866, 878], "height": [126, 255, 268, 270, 271, 274, 277, 278, 279, 308, 312, 320, 325, 468, 745, 754, 803, 808, 833, 878], "gridspec": [126, 265, 266, 784], "keyword": [126, 149, 155, 169, 172, 191, 201, 209, 239, 255, 257, 258, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 302, 303, 304, 305, 306, 307, 308, 311, 313, 315, 316, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 381, 382, 383, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 411, 412, 414, 415, 419, 420, 422, 425, 426, 428, 430, 434, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 459, 460, 464, 465, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 512, 513, 514, 515, 516, 517, 519, 520, 521, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 550, 553, 557, 559, 560, 562, 563, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 580, 581, 582, 583, 585, 586, 588, 589, 592, 593, 594, 597, 598, 599, 600, 604, 605, 606, 607, 608, 609, 611, 612, 613, 615, 616, 617, 619, 620, 621, 622, 623, 627, 628, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 642, 645, 646, 648, 649, 650, 651, 661, 662, 665, 667, 668, 669, 670, 671, 672, 673, 683, 684, 685, 686, 687, 688, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 715, 716, 719, 720, 724, 725, 727, 728, 729, 730, 733, 734, 735, 740, 743, 744, 745, 746, 753, 761, 762, 767, 770, 773, 777, 778, 779, 780, 785, 788, 789, 790, 795, 796, 798, 799, 801, 802, 803, 804, 808, 809, 810, 814, 818, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 837, 853, 878], "subplot2grid": [126, 194], "inch": [126, 260, 263, 264, 265, 266, 272, 409, 416, 477, 478, 556, 557, 697, 699, 701, 777, 784, 788, 797, 800, 805, 807], "height_ratio": 126, "rowspan": 126, "775": [126, 230], "bot": 126, "evoked_idx": 126, "brain_idx": 126, "peak_lin": 126, "66ccee": [126, 160, 713, 723], "columnspac": 126, "labelspac": 126, "fancybox": 126, "handlelength": 126, "n_ave": 126, "spine": [126, 181, 758, 769], "set_axisbelow": 126, "tick": [126, 240, 260, 263, 264, 265, 266, 272, 409, 416, 477, 478, 556, 557, 571, 697, 699, 701, 762, 769, 777, 781, 784, 788, 797, 800, 805, 806, 807, 878], "225": [126, 144, 169, 208, 230, 243, 854], "append_ax": [126, 230], "plot_brain_colorbar": [126, 868, 878], "get_posit": [126, 136, 311, 878], "ymax": [126, 202, 230, 235], "transfigur": 126, "va": [126, 160], "panel": [126, 134, 151, 156, 162, 170, 180, 240, 255, 265, 266, 468, 557, 745, 785, 789, 857], "outlin": [126, 160, 172, 176, 201, 240, 260, 261, 263, 264, 265, 266, 272, 311, 409, 416, 477, 478, 556, 557, 571, 600, 697, 699, 701, 762, 769, 773, 777, 779, 781, 782, 784, 785, 788, 795, 797, 799, 800, 801, 805, 807, 878], "familiar": [126, 144, 198, 839, 854], "to_plot": 126, "return_tim": [126, 214, 477, 478], "\u00b5v": [126, 142, 144, 145, 149, 151, 166, 200, 206, 226, 255, 260, 263, 264, 265, 266, 270, 271, 272, 273, 274, 277, 278, 279, 409, 416, 477, 478, 513, 556, 557, 571, 697, 699, 701, 762, 775, 776, 777, 779, 781, 784, 788, 797, 798, 800, 805, 806, 807, 833, 860, 878], "1e6": [126, 141, 149, 151, 260, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 353, 357, 358, 409, 416, 418, 477, 478, 776, 779, 781, 783, 784, 806], "inset_ax": [126, 769], "plot_sensor": [126, 142, 151, 170, 182, 190, 217, 263, 264, 265, 266, 477, 478, 868, 878], "server": [126, 146, 166, 172, 202, 204, 214, 811, 841], "axin": 126, "edit": [126, 151, 169, 171, 199, 201, 204, 216, 243, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 679, 697, 700, 766, 814, 837, 841, 857, 878], "stai": [126, 144, 201, 202, 220, 222, 263, 264, 265, 266, 477, 478, 479, 646, 833, 837], "intact": [126, 198, 214], "That": [126, 142, 144, 161, 162, 201, 230, 265, 266, 296, 297, 353, 357, 358, 368, 369, 370, 409, 416, 452, 453, 472, 474, 475, 535, 785, 860], "nice": [126, 144, 150, 169, 171, 214, 225, 240, 837, 860, 878], "But": [126, 143, 144, 172, 184, 201, 209, 220, 225, 233, 240, 557, 855], "big": [126, 188, 204, 418, 686, 855, 878], "tast": 126, "luckili": 126, "facet": [126, 160], "set_": 126, "get_children": 126, "line2d": 126, "0x7f9bdd7face0": 126, "0x7f9bdd7f8340": 126, "0x7f9bdd7fbb50": 126, "0x7f9bdd7fa5f0": 126, "pathcollect": 126, "0x7f9bdd7f91b0": 126, "0x7f9bf5975330": 126, "0x7f9bf5976620": 126, "0x7f9bf5975480": 126, "0x7f9bf5976ad0": 126, "0x7f9bf5974610": 126, "yaxi": [126, 206], "0x7f9bf5976aa0": 126, "rectangl": [126, 216, 697, 762], "0x7f9bdc361de0": 126, "certainli": 126, "artistlist": 126, "sensor_dot": 126, "shrink": [126, 134, 199, 225, 226, 582, 857], "set_siz": 126, "publication_figur": [126, 129], "notat": [127, 205, 229, 235, 860], "odd": [127, 201, 323, 408, 860], "make_1020_channel_select": [127, 226, 868, 878], "test_raw": [127, 168, 255], "read_raw_eeglab": [127, 168, 189, 483, 841, 860, 864, 868, 878], "fpz": [127, 137, 170, 204, 260, 263, 264, 265, 266, 272, 311, 409, 416, 477, 478, 556, 557, 571, 697, 699, 701, 762, 769, 777, 779, 781, 784, 785, 788, 795, 797, 799, 800, 801, 805, 807, 878], "eog1": 127, "eog2": 127, "fc5": [127, 500], "t7": [127, 159, 170, 260, 263, 264, 265, 266, 272, 311, 409, 416, 477, 478, 500, 556, 557, 571, 697, 699, 701, 762, 769, 777, 779, 781, 784, 785, 788, 795, 797, 799, 800, 801, 805, 807, 878], "011": [127, 140, 149, 169, 201, 222, 243], "012": [127, 140, 149, 169, 217, 222], "cp5": [127, 500], "017": [127, 140, 149, 169, 214, 222], "cp6": 127, "019": [127, 140, 149, 169, 207, 222, 243], "021": [127, 140, 141, 149, 166, 169, 222], "022": [127, 140, 149, 169, 184, 222], "023": [127, 140, 142, 149, 157, 164, 169, 199, 213, 222, 243], "024": [127, 140, 149, 169, 222, 230, 243, 684, 685, 687, 688], "po7": [127, 240], "026": [127, 140, 149, 169, 222, 243], "poz": [127, 240], "027": [127, 140, 149, 169, 222, 225, 243, 296, 557, 690, 691, 852], "028": [127, 140, 149, 169, 222, 243, 565, 726, 729], "029": [127, 140, 149, 169, 222, 243], "o2": [127, 159, 220, 240], "standard_1020": [127, 151, 159, 170, 220, 500], "fdt": [127, 168, 493, 609], "msec": [127, 151, 697], "new_ev": [127, 215, 435, 437, 522], "203125": 127, "midlin": [127, 134, 169, 170, 217, 226, 323], "12z": [127, 226], "group_bi": [127, 142, 226, 255, 263, 264, 265, 266, 477, 478, 775, 776, 781, 798, 878], "vline": [127, 265, 266, 769, 783, 878], "roi_erpimage_by_rt": [127, 129], "plot_psd": [128, 140, 142, 166, 198, 217, 238, 239, 263, 264, 265, 266, 273, 477, 478, 837, 860, 878], "66067": 128, "109": [128, 137, 169, 175, 187, 204, 208, 225, 229, 230, 379, 854], "xscale": [128, 206, 263, 264, 265, 266, 477, 478, 699, 701, 799, 878], "wall": [128, 201, 202, 243, 684, 685], "shield": [128, 202, 211, 243, 263, 264, 265, 266, 268, 477, 478, 554, 585, 697, 699, 700, 701, 860], "review": [128, 151, 178, 203, 204, 243, 556, 562, 837, 859], "scientif": [128, 243, 841, 842, 862], "instrument": [128, 178, 198, 204, 243], "056101": [128, 243], "1063": [128, 208, 209, 243, 568, 585], "4802845": [128, 243], "sensor_noise_level": [128, 129], "auto_examples_visu": 129, "topo_custom": [129, 132], "ssp_projs_sensitivity_map": [129, 130], "726": [129, 130, 160, 195, 225, 230, 232], "topo_compare_condit": [129, 131], "899": [129, 131, 230, 240], "xhemi": [129, 133, 275, 359, 622], "167": [129, 169, 195, 225, 230], "ecg_fnam": 130, "ssp_ecg_map": 130, "arg": [130, 229, 235, 255, 268, 276, 679, 837], "plot_evoked_topo": [131, 150, 210, 868, 878], "audio": [131, 175, 191, 195, 238, 243, 263, 264, 265, 266, 416, 477, 478, 699, 700, 701, 716], "nleft": 131, "iter_topographi": [132, 868, 878], "20hz": 132, "return_freq": [132, 137, 238, 239, 240, 699, 701, 878], "my_callback": 132, "ch_idx": [132, 208, 227, 239], "fig_facecolor": [132, 142, 238, 263, 264, 265, 266, 477, 478, 697, 699, 701, 758, 806], "axis_facecolor": [132, 238, 263, 264, 265, 266, 477, 478, 699, 701, 758], "axis_spinecolor": [132, 758], "on_pick": [132, 758], "gcf": 132, "stc_path": [133, 172], "fsaverage_sym": [133, 359], "left_right": [133, 359], "stc_xhemi": 133, "70314401": 133, "48867635": 133, "29876034": 133, "involv": [134, 135, 136, 156, 158, 160, 198, 201, 202, 205, 216, 366, 559, 859, 860], "implant": [134, 243, 589], "greater": [134, 144, 166, 199, 204, 225, 228, 263, 264, 275, 357, 450, 557, 582, 686, 700, 726, 729, 745, 818, 878], "dipi": [134, 171, 275, 733, 734, 735, 818, 836], "pip": [134, 135, 136, 146, 161, 835, 837, 839, 842, 845], "conda": [134, 135, 136, 161, 835, 836, 837, 839, 842, 845, 878], "cite": [134, 137, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 387, 448, 477, 478, 697, 700, 837, 854], "anterior": [134, 160, 269, 323, 674, 833, 860, 878], "commissur": [134, 136, 311], "posterior": [134, 136, 156, 160, 269, 311, 323, 472, 674, 833, 878], "aka": [134, 163, 165, 190], "sample_seeg_t1": 134, "cursor": [134, 746, 878], "long": [134, 137, 140, 141, 146, 198, 201, 202, 204, 208, 215, 216, 220, 226, 233, 234, 261, 263, 264, 265, 266, 270, 271, 274, 275, 277, 278, 279, 353, 359, 477, 478, 527, 560, 565, 585, 697, 699, 700, 701, 745, 837, 840, 841, 853, 859, 866, 878], "menu": [134, 172, 216, 840, 843, 861], "prefer": [134, 142, 151, 170, 171, 189, 190, 201, 204, 205, 258, 263, 264, 265, 266, 359, 416, 438, 457, 477, 478, 557, 641, 699, 701, 799, 835, 837, 841, 843, 844, 856, 859, 860, 863], "pull": [134, 151, 205, 815, 833, 844, 859], "popup": 134, "Be": [134, 161, 214, 216, 265, 266, 782], "until": [134, 142, 199, 200, 207, 210, 258, 261, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 468, 469, 476, 477, 478, 557, 560, 699, 701, 742, 745, 773, 775, 792, 798, 801, 837, 860], "crosshair": 134, "meet": [134, 201, 859], "pc": [134, 204], "transect": 134, "set_posit": [134, 265, 266, 784], "xytext": [134, 181], "arrowprop": [134, 181, 194], "headwidth": 134, "consum": [134, 202, 273, 567, 690, 878], "deform": [134, 160, 170, 243], "hour": [134, 155, 477, 478, 557, 792, 798], "plan": [134, 198, 199, 202, 207, 433, 835, 841, 859], "proce": [134, 151, 258, 263, 401, 557, 560, 567, 754, 857], "my_data_directori": 134, "subjid": 134, "defac": 134, "cw256": 134, "anonym": [134, 156, 263, 264, 265, 266, 477, 478, 479, 857, 878], "orig_defac": 134, "publish": [134, 205, 243, 557, 855], "mne_bid": [134, 136], "write_anat": 134, "hardli": [134, 860], "misalign": [134, 146, 178, 488, 878], "stereotact": [134, 263, 264, 265, 266, 477, 478, 554, 555, 697, 699, 700, 701, 860, 878], "anteriolater": 134, "thresh": [134, 574, 578, 594, 684, 685, 687, 688, 745, 818], "apply_orient": 134, "asarrai": [134, 160, 229], "dataobj": [134, 156, 160, 182], "axcodes2ornt": 134, "aff2axcod": [134, 160], "float32": 134, "quantil": [134, 418], "squeez": [134, 141, 229, 230, 235], "grai": [134, 144, 156, 160, 172, 199, 209, 215, 227, 228, 229, 230, 235, 269, 467, 557, 602, 745, 760, 761, 769, 788], "gist_heat": 134, "invert_yaxi": 134, "world": [134, 156, 160, 172, 182, 201, 216, 227, 275, 452], "ct_resampl": 134, "moving_affin": 134, "static_affin": 134, "unalign": [134, 878], "shear": [134, 735], "compute_volume_registr": [134, 733, 734, 868, 878], "4x4": [134, 276, 500, 648, 649, 650, 662], "cval": [134, 733, 878], "ct_align": 134, "apply_volume_registr": [134, 868, 878], "failur": [134, 837, 878], "heat": 134, "navig": [134, 161, 214, 263, 264, 273, 278, 279, 477, 478, 775, 798, 809, 835, 841, 861], "toolbar": [134, 161, 810], "lta": [134, 621, 878], "realli": [134, 175], "rerun": 134, "manual_reg_affine_vox": 134, "read_lta": [134, 868, 878], "sample_seeg_ct_aligned_manu": 134, "manual_reg_affin": 134, "starting_affin": [134, 735, 878], "hyperintens": [134, 818], "hypointens": [134, 818], "brighter": [134, 235], "subcutan": 134, "fat": 134, "ct_data": 134, "get_fdata": 134, "t1_data": 134, "bright": 134, "halfwai": [134, 763], "talairach": [134, 135, 160, 180, 181, 278, 279, 365, 366, 629, 809, 857, 860, 878], "get_mni_fiduci": [134, 160, 311, 365, 761, 868, 878], "subj_tran": 134, "nearbi": [134, 135, 136, 194, 198, 206, 209, 221, 243, 260, 263, 264, 265, 266, 272, 409, 416, 477, 478, 556, 557, 571, 585, 692, 697, 699, 701, 762, 777, 784, 788, 797, 800, 805, 807, 818], "video": [134, 135, 156, 160, 161, 862, 878], "sidebar": 134, "scroll": [134, 142, 166, 216, 217, 261, 263, 264, 477, 478, 557, 773, 775, 792, 798, 814, 878], "arrow": [134, 156, 160, 161, 178, 183, 198, 202, 205, 217, 260, 261, 263, 264, 265, 266, 271, 272, 277, 278, 279, 409, 416, 477, 478, 556, 557, 697, 699, 701, 745, 762, 773, 775, 776, 777, 781, 784, 787, 788, 797, 798, 800, 805, 808, 809, 860, 878], "snap": [134, 161, 878], "t1_ecog": 134, "ct_orig_ecog": 134, "sample_ecog_ct": 134, "99982382": 134, "00414586": 134, "01830679": 134, "15413965": 134, "00549597": 134, "99721885": 134, "07432601": 134, "54316131": 134, "01794773": 134, "07441352": 134, "99706595": 134, "84162514": 134, "ct_aligned_ecog": 134, "raw_ecog": 134, "previous": [134, 144, 149, 170, 203, 204, 255, 289, 296, 297, 635, 745, 878], "subj_trans_ecog": 134, "3024": [134, 319, 477, 860], "dura": [134, 857], "pressur": [134, 582], "craniotomi": [134, 582], "watershed_bem": [134, 158, 582, 844, 857, 860, 878], "flash_bem": [134, 158, 582, 844, 860, 878], "modif": [134, 190, 235, 329, 372, 844, 878], "view_kwarg": [134, 135, 157, 160], "ieeg": [134, 136, 866, 867, 868, 878], "project_sensors_onto_brain": [134, 868, 878], "cvs_avg35_inmni152": 134, "subject_brain": 134, "template_brain": 134, "regist": [134, 255, 306, 733, 734, 735, 818, 833, 859, 860], "sdr_morph": [134, 275, 733, 734, 735, 818], "subject_brain_sdr": 134, "appl": [134, 840], "had": [134, 142, 151, 167, 168, 175, 181, 200, 201, 202, 205, 206, 217, 238, 240, 263, 264, 402, 432, 576, 615, 700, 860, 878], "montage_warp": [134, 818], "elec_imag": 134, "warped_elec_imag": 134, "warp_montage_volum": [134, 868, 878], "subjects_dir_from": [134, 818], "subjects_dir_to": [134, 818], "dark2": 134, "degrad": 134, "inaccur": [134, 162, 214, 260, 263, 264, 265, 266, 272, 353, 409, 416, 477, 478, 556, 557, 571, 697, 699, 701, 762, 777, 784, 788, 797, 800, 805, 807, 853, 860], "add_estimated_fiduci": [134, 311, 878], "template_tran": 134, "recomput": [134, 204, 207, 230, 450, 557, 583, 637, 878], "behind": [134, 156, 171, 194, 199, 204, 468, 764, 855], "scene": [134, 156, 160, 171, 194, 243, 255, 265, 266, 270, 271, 274, 277, 278, 279, 415, 468, 745, 751, 752, 754, 761, 780, 803, 808, 812, 813, 815, 835, 855, 878], "brittani": [134, 243], "stedelin": [134, 243], "alessandra": [134, 243], "mantovani": [134, 243], "ahm": [134, 243], "raslan": [134, 243], "nicol": [134, 243, 681, 878], "swann": [134, 243], "3897": [134, 243], "2022": [134, 169, 180, 211, 243, 244, 854], "21105": [134, 243], "joss": [134, 243], "03897": [134, 243], "liberti": [134, 136, 243, 878], "hamilton": [134, 136, 243, 878], "morgan": [134, 201, 243], "edward": [134, 243], "semi": [134, 204, 243, 571, 878], "neuroinformat": [134, 243], "octob": [134, 243, 657], "fninf": [134, 243], "00062": [134, 243], "1196": [134, 139, 195], "10_ieeg_loc": [134, 139], "stereoelectroencephalographi": [135, 854], "xfm": [135, 278, 279, 366, 629, 809, 860, 878], "li": [135, 136, 160, 172, 207, 243, 860, 865, 878], "adam2392": [135, 136], "fixat": 135, "isi": [135, 191], "mni_tal": [135, 136, 311, 324], "this_subject_dir": 135, "mri_mni_t": [135, 629], "read_talxfm": [135, 160, 868], "taliarach": 135, "fro": [135, 453, 732], "rostral": [135, 745], "warp": [135, 156, 159, 243, 818, 854, 878], "combine_transform": 135, "tan": [135, 878], "dens": [135, 156, 157, 158, 160, 182, 183, 190, 243, 255, 276, 307, 565, 745, 761, 878], "atla": [135, 181, 243, 255, 261, 270, 271, 274, 276, 277, 278, 279, 308, 443, 512, 646, 833, 854, 857, 860, 866, 878], "get_montage_volume_label": [135, 745, 868, 878], "lami": [135, 469], "lttr": 135, "isdigit": 135, "lpm": 135, "lsma": 135, "elec": [135, 226], "plot_channel_labels_circl": [135, 868, 878], "rahp": 135, "lpit": 135, "rphp": 135, "lpcn": 135, "lpli": 135, "lstg": 135, "lbri": 135, "lacn": 135, "lofc": 135, "ltpo": 135, "lphg": 135, "ctx": 135, "putamen": 135, "add_volume_label": [135, 181, 745, 878], "heatmap": [135, 209], "lfp": 135, "stc_near_sensor": [135, 136, 868, 878], "Its": [135, 208, 860], "view_layout": [135, 180, 270, 271, 274, 277, 278, 279, 745, 803, 808], "sagitt": [135, 160, 180, 261, 745, 763, 773], "m4": 135, "sai": [135, 136, 201, 202, 205, 207, 214, 220, 227, 230, 741, 837, 843, 853, 863], "20_seeg": [135, 139], "epilepsi": [136, 878], "seizur": [136, 878], "complementari": [136, 200, 866], "libertyhamilton": 136, "bidspath": 136, "read_raw_bid": 136, "bids_root": 136, "epilepsy_ecog": [136, 868, 878], "bids_path": 136, "pt1": 136, "session": [136, 140, 142, 149, 150, 166, 171, 172, 199, 209, 211, 216, 263, 264, 374, 375, 477, 478, 557, 775, 792, 798, 806, 835, 853, 857, 861, 878], "presurgeri": 136, "ictal": 136, "datatyp": [136, 878], "vhdr": [136, 170, 240, 442, 477, 478, 603, 854, 860, 878], "trans_bandwidth": [136, 201, 445, 448, 477, 478], "add_mni_fiduci": [136, 311, 878], "epoch_length": 136, "269079": 136, "2201": 136, "ad1": 136, "att1": 136, "ast1": 136, "g16": 136, "slt1": 136, "sensor_color": [136, 761], "gamma_power_t": 136, "gamma_info": 136, "gamma_power_at_15": 136, "rgba": [136, 269, 270, 271, 274, 277, 278, 279, 745, 760, 764, 803, 808, 809, 878], "get_cmap": 136, "tolist": 136, "funcanim": [136, 265, 266], "gamma_pow": 136, "x_line": 136, "epileptiform": 136, "progress": [136, 151, 165, 200, 243, 412, 419, 837, 878], "posteriorli": 136, "becom": [136, 141, 182, 200, 201, 203, 204, 209, 211, 233, 234, 235, 263, 264, 265, 266, 599, 766, 781, 837, 845, 859, 860, 878], "xyz_pt": 136, "vmid": 136, "intra": [136, 668], "4932": 136, "757": [136, 139, 195, 230], "649": [136, 139, 230], "30_ecog": [136, 139], "toi": [137, 225, 866], "answer": [137, 206, 230, 240, 837, 857], "question": [137, 141, 209, 240, 837, 840, 856, 858], "alic": 137, "tackl": 137, "chambon": [137, 243, 878], "stan": 137, "sleep_physionet": [137, 854, 868, 878], "fetch_data": [137, 854, 868, 878], "randomforestclassifi": 137, "accuracy_scor": 137, "functiontransform": 137, "ground": [137, 166, 206, 557, 796, 866], "truth": [137, 206, 557, 796], "expert": [137, 162, 837, 857, 859], "alice_fil": 137, "bob_fil": 137, "raw_train": 137, "marker": [137, 151, 168, 177, 188, 189, 194, 200, 205, 255, 260, 263, 264, 265, 266, 269, 270, 271, 272, 273, 274, 277, 278, 279, 281, 353, 354, 356, 358, 409, 412, 416, 419, 422, 425, 426, 452, 465, 467, 477, 478, 480, 501, 516, 519, 520, 530, 531, 540, 541, 556, 557, 562, 569, 570, 571, 611, 645, 648, 649, 650, 662, 684, 685, 686, 687, 688, 697, 699, 701, 702, 703, 704, 705, 706, 707, 715, 716, 724, 725, 726, 727, 728, 762, 777, 780, 784, 788, 797, 798, 799, 800, 804, 805, 807, 854, 878], "infer_typ": [137, 485, 492, 878], "annot_train": 137, "read_annot": [137, 216, 745, 868, 878], "emit_warn": [137, 257, 477, 478, 586], "resp": [137, 169, 214, 263, 264, 265, 266, 273, 310, 477, 478, 492, 554, 697, 699, 700, 701, 775, 798, 860, 878], "physionet_sleep": 137, "sc4001e0": 137, "recogn": [137, 171, 206, 492, 859, 878], "renam": [137, 151, 189, 210, 214, 257, 263, 264, 265, 266, 311, 339, 477, 478, 485, 492, 633, 745, 755, 810, 837, 845, 878], "oro": 137, "nasal": 137, "subment": 137, "temp": [137, 268], "rectal": 137, "wake": 137, "rem": [137, 168], "abbrevi": [137, 175, 205, 745, 860, 878], "rapid": [137, 144, 194, 201, 243, 415], "awak": 137, "night": [137, 401, 854], "imbal": [137, 229, 567, 568, 576, 585, 596], "trim": [137, 263, 264], "occurr": [137, 144, 198, 433, 435], "annotation_desc_2_event_id": 137, "redefin": 137, "events_train": 137, "chunk_dur": [137, 168, 438, 878], "stage_color": 137, "prop_cycl": 137, "by_kei": 137, "841": [137, 230], "188": [137, 169, 184, 225, 230], "raw_test": 137, "annot_test": 137, "events_test": 137, "epochs_test": 137, "sc4011e0": 137, "1103": [137, 178, 243], "562": [137, 230], "signatur": [137, 199, 229, 412, 419, 426, 837, 855, 878], "ci": [137, 146, 201, 210, 225, 238, 557, 676, 699, 701, 769, 790, 837, 878], "\u00b5v\u00b2": 137, "eeg_power_band": 137, "compat": [137, 144, 171, 176, 256, 263, 264, 265, 266, 319, 361, 370, 384, 392, 415, 417, 420, 422, 423, 424, 449, 468, 477, 478, 530, 557, 699, 701, 775, 777, 798, 799, 810, 835, 843, 845, 857, 860, 863, 878], "psds_band": 137, "boilerpl": 137, "sckit": 137, "manner": [137, 151, 178, 225, 226, 258, 263, 878], "thank": [137, 140, 837, 866], "pipe": [137, 837, 854], "n_estim": [137, 412, 419], "acc": 137, "6854034451495921": 137, "ye": [137, 208, 209, 225, 265, 477, 497, 615, 857, 878], "databas": [137, 243, 387, 401, 402], "mathieu": [137, 243, 878], "galtier": [137, 243], "pierrick": [137, 243], "arnal": [137, 243], "gill": [137, 243], "wainrib": [137, 243], "architectur": [137, 243, 878], "rehabilit": [137, 243], "769": [137, 230, 243], "tnsre": [137, 243], "2813138": [137, 243], "kemp": [137, 243, 401, 402, 854], "zwinderman": [137, 243, 401, 402, 854], "tuk": [137, 243, 402, 854], "kamphuisen": [137, 243, 401, 402, 854], "obery\u00e9": [137, 243, 402, 854], "feedback": [137, 243, 402, 854, 878], "microcontinu": [137, 243, 402, 854], "1185": [137, 243, 402, 854], "1194": [137, 243, 402, 854], "867928": [137, 243, 402, 854], "60_sleep": [137, 139], "sleep": [138, 139, 165, 168, 243, 257, 263, 268, 401, 402, 438, 477, 492, 603, 699, 778, 833, 857, 878], "stage": [138, 139, 144, 155, 156, 165, 172, 191, 199, 201, 204, 205, 210, 216, 243, 257, 258, 263, 264, 265, 266, 268, 275, 359, 401, 438, 477, 478, 492, 517, 571, 603, 608, 699, 735, 778, 833, 837, 844, 853, 854, 868, 878], "polysomnographi": [138, 139, 165, 257, 263, 268, 401, 402, 438, 477, 492, 603, 699, 778, 854, 878], "psg": [138, 139, 165, 257, 263, 268, 401, 438, 477, 492, 603, 699, 778, 854, 878], "686": [139, 143, 230], "auto_tutorials_clin": 139, "cover": [140, 147, 149, 151, 153, 155, 162, 163, 165, 166, 168, 171, 172, 173, 186, 192, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 214, 217, 218, 225, 236, 240, 241, 269, 273, 585, 593, 602, 681, 828, 837, 860, 861, 878], "possibli": [140, 149, 166, 172, 201, 227, 228, 265, 266, 275, 296, 297, 309, 353, 357, 358, 368, 369, 370, 384, 409, 416, 452, 453, 472, 474, 475, 535, 557, 575, 576, 679, 745, 785, 853, 878], "del_proj": [140, 149, 198, 205, 206, 207, 263, 264, 265, 266, 477, 478, 878], "plot_projs_topomap": [140, 142, 149, 206, 217, 263, 264, 265, 266, 477, 478, 796, 868, 878], "legaci": [140, 142, 217, 263, 264, 265, 266, 477, 478, 777, 799, 878], "plot_psd_topomap": [140, 142, 238, 263, 264, 265, 266, 477, 478, 878], "sample_data_fold": [140, 142, 145, 146, 155, 166, 167, 168, 169, 170, 198, 199, 200, 202, 204, 205, 206, 207, 209, 214, 215, 216, 217, 238], "sample_data_raw_fil": [140, 142, 145, 146, 166, 167, 168, 169, 198, 199, 200, 202, 204, 205, 206, 207, 209, 214, 215, 216, 217, 238], "sample_data_events_fil": [140, 145, 215], "events_from_fil": [140, 215], "bare": [140, 166], "299693": [140, 151], "699283": 140, "quot": [140, 194, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 697, 700, 837, 860], "string": [140, 143, 144, 145, 149, 150, 168, 169, 171, 172, 200, 214, 215, 216, 238, 256, 257, 258, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 282, 309, 311, 320, 326, 328, 339, 352, 353, 357, 358, 362, 368, 373, 376, 377, 378, 381, 382, 384, 389, 390, 392, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 409, 411, 412, 416, 419, 425, 426, 430, 433, 438, 443, 444, 457, 459, 461, 469, 476, 477, 478, 479, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 512, 517, 524, 530, 531, 554, 555, 556, 557, 559, 560, 571, 572, 573, 574, 576, 578, 579, 582, 585, 591, 593, 600, 609, 611, 615, 633, 653, 654, 655, 656, 657, 659, 662, 665, 674, 678, 680, 683, 692, 693, 697, 698, 699, 700, 701, 705, 706, 707, 708, 710, 728, 732, 733, 735, 745, 753, 761, 762, 769, 775, 776, 777, 779, 781, 782, 783, 784, 785, 788, 789, 796, 797, 798, 799, 800, 803, 805, 807, 808, 809, 835, 836, 837, 852, 857, 863, 878], "event_dict": [140, 142, 145, 149, 151, 166, 168, 210, 215, 220, 238], "buttonpress": [140, 149, 151, 166, 168, 172, 215], "mention": [140, 144, 151, 166, 168, 169, 170, 175, 201, 205, 206, 207, 214, 230, 352, 837], "turn": [140, 149, 150, 152, 175, 191, 199, 204, 205, 206, 207, 240, 256, 258, 263, 450, 514, 646, 746, 766, 854, 859, 860, 878], "accommod": [140, 878], "request": [140, 161, 166, 171, 172, 204, 206, 209, 214, 215, 263, 264, 265, 266, 270, 271, 273, 274, 277, 278, 279, 408, 477, 478, 557, 569, 570, 605, 642, 678, 680, 698, 699, 701, 754, 777, 786, 788, 803, 808, 833, 843, 844, 857, 858, 859, 863, 878], "drop_log": [140, 142, 200, 258, 263, 264, 273, 569, 570, 700, 774, 878], "too_short": [140, 151, 263, 700], "forget": [140, 157, 158, 168, 837], "brows": [140, 172, 181, 199, 216, 261, 263, 264, 477, 478, 557, 773, 775, 792, 798, 849, 855, 878], "scrollbar": [140, 263, 264, 477, 478, 557, 775, 792, 798, 878], "focus": [140, 141, 181, 216, 263, 264, 477, 478, 557, 654, 659, 775, 792, 798, 837, 841, 844, 862], "screen": [140, 243, 255, 263, 264, 477, 478, 775, 798, 811, 878], "bracket": [140, 149, 151, 169, 189, 214, 220, 238, 878], "catch": [140, 142, 166, 181, 229, 235, 837], "charact": [140, 166, 169, 199, 214, 215, 323, 493, 508, 603, 609, 653, 654, 655, 656, 657, 659, 753, 837, 878], "tag": [140, 144, 151, 165, 241, 242, 243, 255, 263, 264, 268, 273, 311, 327, 433, 438, 487, 508, 554, 699, 700, 753, 807, 833, 837, 854, 866, 878], "complain": 140, "ask": [140, 144, 160, 837, 852, 854, 858, 859], "except": [140, 143, 171, 175, 176, 209, 214, 263, 264, 265, 266, 283, 284, 327, 347, 348, 353, 401, 450, 477, 478, 479, 546, 558, 576, 625, 688, 692, 735, 837, 860, 863, 878], "keyerror": [140, 260, 263, 264, 268, 272, 287, 301, 523, 700, 732], "rais": [140, 144, 207, 258, 260, 263, 264, 265, 266, 268, 269, 272, 273, 274, 277, 283, 284, 287, 301, 315, 338, 341, 347, 348, 353, 357, 360, 362, 364, 368, 369, 401, 428, 436, 450, 456, 457, 459, 477, 478, 497, 523, 546, 548, 557, 584, 605, 616, 634, 636, 639, 643, 647, 684, 685, 687, 688, 697, 699, 700, 701, 732, 778, 789, 824, 826, 837, 859, 878], "reorder_channel": [140, 149, 214, 263, 264, 265, 266, 477, 478, 697, 699, 700, 701, 878], "exploratori": [140, 149, 167, 205, 214, 226, 855], "epochs_eeg": 140, "new_ord": [140, 149], "epochs_subset": 140, "032": [140, 149, 169, 222, 226, 243], "033": [140, 149, 169, 222], "034": [140, 149, 169, 222], "035": [140, 149, 169, 222], "037": [140, 149, 169, 214, 222], "038": [140, 149, 169, 222], "039": [140, 142, 149, 169, 222], "041": [140, 142, 149, 169, 222], "043": [140, 149, 169, 222], "045": [140, 142, 149, 169, 222], "046": [140, 142, 149, 169, 222, 243, 657, 860], "047": [140, 142, 149, 169, 222], "049": [140, 142, 149, 169, 176, 187, 222], "052": [140, 142, 149, 162, 169, 185, 199, 222, 243, 726, 729], "054": [140, 142, 149, 169, 207, 222, 243, 535, 654, 659], "055": [140, 142, 149, 169, 207, 222, 243, 387], "056": [140, 142, 149, 169, 222], "058": [140, 142, 149, 169, 217, 222], "unchang": [140, 149, 205, 263, 264, 265, 266, 477, 478, 586, 637], "blinkchannel": 140, "20auditori": 140, "20buttonpress": 140, "4face": [140, 151], "4visual": 140, "19visual": 140, "shorter_epoch": 140, "include_tmax": [140, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 697, 700, 878], "obj": [140, 161, 628, 831, 878], "0998976": 140, "expand": [140, 144, 160, 200, 205, 263, 264, 265, 266, 269, 274, 277, 353, 439, 442, 467, 477, 478, 699, 701, 777, 857, 878], "later_epoch": 140, "tshift": [140, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 437, 477, 478, 697, 700], "amount": [140, 141, 162, 167, 178, 199, 206, 207, 221, 240, 260, 261, 262, 263, 264, 265, 266, 270, 271, 272, 273, 274, 277, 278, 279, 362, 373, 409, 416, 449, 476, 477, 478, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 517, 532, 556, 557, 594, 610, 697, 699, 700, 701, 713, 723, 727, 775, 777, 784, 788, 797, 798, 800, 803, 805, 808, 857, 860, 878], "00166496": 140, "00332992": 140, "99833504": 140, "99667008": 140, "enforc": [140, 818, 878], "eog_data": 140, "channel_4_6_8": 140, "arr": [140, 214, 240, 676], "repeatedli": [140, 204, 206, 477, 478, 843, 878], "hierarch": [140, 143, 144, 238, 243, 433, 472, 522, 833, 878], "multiindex": [140, 263, 264, 697, 699, 700, 701], "aggreg": [140, 143, 145, 239, 263, 264, 265, 266, 313, 433, 477, 478, 697, 699, 701, 776, 777, 878], "endpoint": [140, 143, 168, 220, 258, 263, 264, 265, 266, 270, 271, 273, 274, 277, 278, 279, 286, 573, 615, 616], "sort_index": 140, "inplac": [140, 145, 257, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 316, 434, 444, 477, 478, 553, 599, 651, 837], "read_epochs_eeglab": [140, 189, 860, 864, 868, 878], "read_epochs_kit": [140, 188, 860, 868, 878], "audiovisu": [140, 166, 214], "epochs_from_fil": 140, "convent": [140, 160, 170, 172, 188, 190, 205, 206, 215, 243, 255, 268, 302, 323, 333, 494, 593, 616, 632, 713, 722, 723, 745, 860, 863, 878], "basenam": [140, 215], "_epo": 140, "issu": [140, 141, 144, 151, 161, 194, 201, 202, 205, 215, 216, 263, 264, 269, 274, 288, 290, 420, 477, 478, 557, 592, 660, 663, 775, 792, 798, 833, 835, 837, 856, 858, 859, 866, 878], "adher": [140, 143, 357, 441], "epochsfif": [140, 143], "anyth": [140, 188, 204, 385, 745, 837], "baseepoch": [140, 557, 837, 868, 878], "ndarrai": [140, 214, 220, 222, 240, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 282, 296, 297, 304, 320, 343, 349, 362, 364, 367, 368, 408, 409, 410, 413, 416, 421, 425, 429, 435, 437, 445, 446, 447, 449, 452, 453, 454, 476, 477, 478, 480, 512, 532, 556, 557, 558, 565, 568, 569, 570, 571, 576, 580, 581, 583, 600, 621, 646, 647, 662, 676, 677, 678, 682, 683, 684, 685, 687, 688, 697, 698, 699, 700, 701, 710, 713, 715, 716, 723, 726, 733, 734, 735, 745, 746, 749, 759, 762, 764, 777, 781, 783, 784, 786, 787, 800, 803, 804, 805, 807, 808, 809, 818, 826, 876, 878], "755": [140, 148, 195], "10_epochs_overview": [140, 148], "aldai": [141, 243, 878], "reason": [141, 149, 150, 162, 166, 171, 172, 184, 199, 200, 201, 202, 203, 205, 206, 207, 214, 216, 225, 234, 235, 243, 261, 262, 263, 264, 265, 266, 270, 271, 273, 274, 277, 278, 279, 297, 353, 370, 421, 477, 478, 557, 569, 577, 580, 585, 684, 685, 687, 688, 690, 697, 700, 774, 811, 837, 853, 857, 859, 860, 878], "safer": [141, 270, 271, 274, 277, 278, 279, 489], "distort": [141, 189, 201, 217, 240, 489, 735], "spuriou": [141, 146, 162, 450, 857], "carina": [141, 878], "forster": [141, 878], "email": [141, 837, 843], "carinaforster0611": 141, "merge_ev": [141, 215, 353, 868, 878], "baseline_tmin": 141, "baseline_tmax": 141, "4957": [141, 151, 334], "trad_aud": 141, "trad_vi": 141, "heterogen": [141, 200, 878], "aud_predictor": 141, "vis_predictor": 141, "trickier": 141, "seaprat": 141, "baseline_predictor": 141, "singleton": [141, 745, 878], "\u03bcv": 141, "microvolt": [141, 188, 487, 860], "unstabl": [141, 162, 203, 353, 857, 878], "transpos": [141, 214, 225, 226, 230, 233, 234, 235, 863, 878], "reg_model": 141, "6254": 141, "lm": [141, 565], "namedtupl": [141, 682], "dict_kei": [141, 169, 205], "1998": [141, 149, 243, 860], "49949": [141, 149], "tell": [141, 150, 155, 162, 166, 171, 200, 204, 206, 214, 227, 229, 235, 276, 837, 840, 841, 856, 860], "strongli": [141, 172, 198, 199, 207, 477, 478, 507, 835, 837, 853, 857, 860], "\u03b2": [141, 142, 217], "constant": [141, 156, 160, 170, 195, 198, 201, 240, 258, 263, 264, 265, 266, 268, 370, 477, 478, 481, 509, 733, 833, 854, 860, 878], "effect_of_baselin": 141, "unsurprisingli": 141, "farther": [141, 857], "weaker": [141, 263, 264, 265, 266, 445, 447, 448, 477, 478, 860], "pure": [141, 274, 837], "influenc": [141, 201, 203, 204, 243, 859], "reg_aud": 141, "reg_vi": 141, "show_sensor": [141, 144, 166, 769, 878], "truncate_yaxi": [141, 230, 769, 878], "subtl": 141, "apart": [141, 150, 168, 220], "diff_tradit": 141, "diff_regress": 141, "themselv": [141, 265, 266, 296, 297, 353, 357, 358, 368, 369, 370, 409, 416, 452, 453, 472, 474, 475, 535, 785, 859], "ought": 141, "persist": [141, 142, 198, 202, 857, 878], "interaction_effect": 141, "seem": [141, 144, 151, 162, 191, 201, 204, 206, 240, 557, 837], "randomli": [141, 166, 225, 510, 583, 602, 663], "glm": [141, 243, 844], "lift": [141, 178, 195, 233, 235, 243], "psyp": [141, 151, 201, 230, 243, 683, 684, 685, 687, 688], "13451": [141, 243], "575": [141, 148, 208, 230], "15_baseline_regress": [141, 148], "imagemap": 142, "discontinu": [142, 146, 147, 148, 151, 165, 168, 201, 204, 214, 215, 220, 238, 263, 450, 477, 608, 609, 611, 612, 699, 701, 833], "enabl": [142, 172, 217, 240, 255, 256, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 372, 468, 477, 478, 571, 592, 644, 684, 685, 687, 688, 699, 700, 740, 745, 754, 758, 761, 780, 798, 803, 808, 811, 835, 843, 853, 859, 860, 878], "unappli": [142, 150, 205, 207, 263, 264, 265, 266, 439, 440, 441, 442, 477, 478, 878], "purg": 142, "catch_trials_and_buttonpress": 142, "pick_ev": [142, 215, 868], "event_color": [142, 215, 263, 264, 477, 478, 775, 798, 878], "butterfli": [142, 149, 151, 152, 172, 199, 205, 209, 217, 263, 264, 265, 266, 273, 477, 478, 557, 775, 779, 782, 789, 798, 814, 864, 878], "ecg_proj_fil": [142, 205], "ecg_proj": [142, 146, 205, 206], "41auditori": 142, "40button": 142, "8face": 142, "8visual": 142, "40visual": 142, "inherit": [142, 238, 353, 878], "joint": [142, 182, 206, 243, 263, 264, 265, 266, 272, 409, 416, 477, 478, 642, 699, 701, 777, 784, 797, 866, 878], "epochsspectrum": [142, 165, 241, 242, 263, 264, 265, 266, 450, 477, 701, 715, 716, 740, 868, 878], "\u03b4": [142, 217], "\u03b8": [142, 217], "\u03b3": [142, 217], "api": [142, 169, 195, 217, 220, 225, 238, 410, 545, 745, 754, 758, 845, 849, 861], "jointli": [142, 162, 204, 206, 263, 264, 265, 266, 272, 296, 297, 354, 355, 356, 409, 416, 477, 478, 557, 569, 570, 699, 701, 777, 784, 796, 797, 857, 878], "untransform": 142, "docstr": [142, 151, 180, 201, 202, 209, 214, 217, 238, 264, 282, 296, 297, 472, 474, 475, 535, 699, 741, 743, 760, 878], "plot_topo_imag": [142, 263, 264, 878], "accompani": [142, 662, 859], "scalebar": [142, 878], "highli": [142, 188, 206, 221, 229, 496, 610, 614, 683, 841], "customiz": [142, 265, 266, 697, 782], "respond": [142, 144, 194, 859], "opposit": [142, 168, 512, 860], "0242": [142, 169], "pop": [142, 150, 199, 260, 263, 264, 268, 272, 287, 301, 523, 732, 806, 835, 878], "At": [142, 191, 203, 204, 210, 319, 477, 837, 843, 853, 878], "fullscreen": [142, 468, 878], "unusu": [142, 184, 199, 203], "reject_criteria": [142, 145, 151, 166, 200, 210], "3000e": [142, 145, 200], "find_layout": [142, 170, 868, 878], "font_color": [142, 263, 264, 697, 806], "reinforc": 142, "disguis": 142, "mayb": [142, 262, 263, 264, 265, 266, 477, 478, 554, 697, 699, 700, 701], "20_visualize_epoch": [142, 148], "who": [143, 255, 268, 557, 837, 841, 854, 859, 878], "lexic": [143, 854], "decis": [143, 191, 201, 240, 258, 263, 413, 517, 608, 854], "kiloword_data_fold": 143, "kiloword_data_fil": 143, "capabl": [143, 155, 166, 168, 375, 745, 810, 814, 816, 817, 835, 837, 841, 844, 854, 878], "surviv": [143, 268], "reload": 143, "attach": [143, 169, 199, 214, 226, 238, 433, 833], "numberoflett": [143, 226], "english": [143, 854], "lexicon": 143, "wordfrequ": 143, "render": [143, 156, 160, 172, 255, 263, 264, 270, 271, 273, 274, 277, 278, 279, 468, 477, 478, 557, 697, 745, 754, 775, 792, 798, 803, 804, 808, 811, 813, 837, 843, 860, 861, 878], "orthographicdist": 143, "bigramfrequ": 143, "consonantvowelproport": 143, "450000": 143, "189490": 143, "900000": 143, "700704": 143, "600000": 143, "858537": 143, "484": [143, 203, 208, 243, 556, 600], "700000": 143, "454540": 143, "1095": 143, "539076": 143, "drudgeri": 143, "473684": 143, "556303": 143, "732357": 143, "991226": 143, "859": [143, 208], "545879": 143, "957": [143, 230], "billiard": 143, "500000": [143, 144, 194], "672098": 143, "838597": 143, "958": [143, 226], "698970": 143, "615": [143, 230], "088112": 143, "959": [143, 230], "solenoid": 143, "111111": 143, "301030": 143, "544507": 143, "iloc": [143, 145], "iat": 143, "nindex": 143, "arbitrarili": [143, 158, 230, 860], "highcomplex": 143, "startswith": [143, 878], "district": 143, "disarrai": 143, "disast": 143, "diseas": 143, "discord": 143, "dispos": 143, "267": [143, 168, 169, 243, 852], "lasso": [143, 243, 263, 264, 265, 266, 477, 478, 775, 798, 801, 878], "tentacl": 143, "banjo": 143, "corsag": 143, "fall": [143, 151, 168, 171, 209, 216, 256, 273, 364, 402, 433, 450, 559, 833, 860, 878], "rich": [143, 835, 841], "typhoon": 143, "bungalow": 143, "colossu": 143, "linguist": 143, "dozen": [143, 199, 204, 206, 855], "share": [143, 190, 201, 216, 257, 296, 599, 684, 685, 687, 688, 837, 855, 860, 863, 866, 878], "letter": [143, 170, 188, 226, 243, 745, 878], "n_letter": 143, "sort_ord": 143, "obviou": [143, 171, 199, 204, 217, 233], "reaction": [143, 225, 263, 264, 776, 878], "new_metadata": 143, "foo": [143, 150, 171, 263, 264, 384, 700, 837], "30_epochs_metadata": [143, 148], "eriksen": 144, "flanker": [144, 854], "introductori": [144, 150, 162, 168, 169, 198, 214, 215, 225, 857], "straight": [144, 263, 264, 265, 266, 477, 478, 801], "creation": [144, 149, 155, 168, 200, 216, 255, 257, 260, 263, 264, 273, 276, 307, 408, 569, 570, 860, 878], "ourselv": [144, 175, 203, 204, 206], "incorrect": [144, 176, 200, 201, 211, 243, 835, 860, 878], "sophist": [144, 189, 451], "erp_cor": [144, 854, 868], "infil": 144, "core_subject": 144, "001_task": [144, 211], "flankers_eeg": 144, "all_ev": 144, "all_event_id": 144, "935935": 144, "913": [144, 230], "33793": 144, "target_left": 144, "target_right": 144, "incompat": [144, 619, 625, 835, 878], "decid": [144, 210, 240, 258, 263, 264, 449, 517, 608, 774, 859], "1500": 144, "invalid": [144, 227, 878], "metadata_tmin": 144, "metadata_tmax": 144, "why": [144, 151, 158, 160, 200, 201, 205, 214, 222, 225, 229, 243, 726, 729, 859], "event_nam": [144, 230, 433, 436], "551758": 144, "997070": 144, "434570": 144, "343750": 144, "917969": 144, "425781": 144, "416016": 144, "799": [144, 230], "392578": 144, "990234": 144, "402344": 144, "802": [144, 195, 230], "eleg": 144, "row_ev": [144, 433], "pertain": 144, "sync": [144, 257, 268, 438, 494, 599], "508789": 144, "00000": 144, "503906": 144, "449219": 144, "542969": 144, "792": [144, 230], "496094": 144, "437500": 144, "465820": 144, "796": [144, 202, 213, 230], "547852": 144, "46582": 144, "descriptor": [144, 166, 238, 243, 433, 477, 478, 833], "hed": [144, 151, 238, 243, 433, 833], "inspir": [144, 433, 448, 735, 837, 876], "keep_first": [144, 433], "regardless": [144, 151, 171, 190, 203, 206, 450, 796, 833], "first_respons": [144, 433], "notna": 144, "411133": 144, "454102": 144, "443359": 144, "466797": 144, "400391": 144, "499023": 144, "584961": 144, "421875": 144, "450195": 144, "399414": 144, "316406": 144, "416992": 144, "344": [144, 162, 164, 169, 195, 208, 225, 230], "386719": 144, "410156": 144, "467773": 144, "416": [144, 171, 230], "377930": 144, "483398": 144, "454": [144, 169, 174, 225, 230, 276], "457031": 144, "456": [144, 276], "566406": 144, "395508": 144, "354492": 144, "516": [144, 158, 230], "326172": 144, "432617": 144, "538": [144, 230], "322266": 144, "482422": 144, "606": [144, 195, 215, 219, 230], "484375": 144, "652": [144, 230], "371094": 144, "342773": 144, "307617": 144, "706": [144, 195, 230], "442383": 144, "728": [144, 195], "376953": 144, "first_stimulu": 144, "perfect": [144, 158, 201, 209], "stimulus_sid": 144, "response_correct": 144, "correct_response_count": 144, "rememb": [144, 150, 161, 171, 176, 199, 204, 205, 214, 230, 860], "epochs_tmin": 144, "epochs_tmax": 144, "strong": [144, 183, 199, 204, 229, 557, 654, 659, 853], "099609375": 144, "f8": [144, 159], "fp2": [144, 159, 220, 334, 445, 448, 574, 578], "fp1": [144, 159, 207, 220, 334, 445, 448, 485, 492, 574, 578], "lastli": [144, 172, 208, 210, 239, 240, 837], "vis_erp": 144, "vis_erp_slow": 144, "asid": [144, 172, 198, 235], "fact": [144, 149, 151, 181, 182, 198, 204, 205, 209, 215, 415, 421, 557, 615, 833, 853, 860], "noisier": [144, 191], "deal": [144, 162, 171, 180, 201, 204, 205, 207, 215, 225, 229, 233, 235, 265, 266, 270, 271, 274, 277, 278, 279, 296, 297, 453, 557, 568, 576, 585, 599, 866, 878], "keep_last": [144, 433], "last_": [144, 433], "last_stimulu": 144, "last_respons": 144, "431641": 144, "795": [144, 230], "576172": 144, "puls": [144, 146, 166, 168, 198, 204, 206, 215, 577, 580, 860], "f7": [144, 159, 334, 500], "c5": [144, 500], "cpz": 144, "isna": 144, "bummer": 144, "impress": 144, "resp_erp_correct": 144, "resp_erp_incorrect": 144, "deflect": [144, 198, 205, 206, 878], "immedi": [144, 156, 168, 199, 204, 207, 240, 256, 426, 477, 478, 560, 608, 669, 672, 754, 798, 833, 837, 859, 860, 878], "doubt": 144, "resp_erp_diff": 144, "bolder": 144, "set_linewidth": 144, "trough_time_idx": 144, "trough_tim": 144, "emili": [144, 201, 243, 854, 878], "kappenman": [144, 201, 243, 854], "jaclyn": [144, 243, 854], "farren": [144, 243, 854], "wendi": [144, 194, 243, 415, 854], "zhang": [144, 243, 854, 860, 878], "andrew": [144, 180, 243, 557, 686, 854, 878], "stewart": [144, 243, 854], "luck": [144, 151, 201, 243, 854], "117465": [144, 243, 854], "nima": [144, 243, 433], "bigd": [144, 243, 433], "shamlo": [144, 243, 433], "kreutz": [144, 243, 433], "delgado": [144, 243, 433], "robbin": [144, 243, 433], "makoto": [144, 243, 433], "miyakoshi": [144, 243, 433], "marissa": [144, 243, 433], "westerfield": [144, 243, 433], "tarik": [144, 243, 433], "bel": [144, 243, 433], "bahar": [144, 243, 433], "koth": [144, 243, 433], "jessica": [144, 243, 433], "hsi": [144, 243, 433], "globalsip": [144, 243, 433], "6736796": [144, 243, 433], "992": [144, 148, 210, 230], "40_autogenerate_metadata": [144, 148], "workflow": [145, 155, 200, 854, 856, 878], "200e": [145, 151, 200], "0113": [145, 166, 169, 214], "0112": [145, 166, 169, 214], "0122": [145, 166, 169, 214, 239], "0132": [145, 169], "199795": 145, "320252": 145, "567619": 145, "248584": 145, "609895": 145, "700540": 145, "352746": 145, "908667": 145, "193135": 145, "049675": 145, "702938": 145, "168267": 145, "480975": 145, "182237": 145, "225684": 145, "072452": 145, "186476": 145, "283711": 145, "006895": 145, "912317": 145, "130290": 145, "157198": 145, "842466": 145, "986073": 145, "179816": 145, "040471": 145, "643716": 145, "835772": 145, "517952": 145, "214631": 145, "043144": 145, "672744": 145, "173156": 145, "688943": 145, "974112": 145, "561683": 145, "450115": 145, "778315": 145, "795987": 145, "277138": 145, "timedelta": [145, 216, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 697, 700], "132025e": 145, "156762e": 145, "324858e": 145, "060990e": 145, "870054e": 145, "835275e": 145, "790867e": 145, "049675e": 145, "702938e": 145, "416827e": 145, "748098e": 145, "018224e": 145, "212257e": 145, "072452e": 145, "283711e": 145, "300690e": 145, "691232e": 145, "213029e": 145, "515720e": 145, "178425e": 145, "986073e": 145, "304047e": 145, "643716e": 145, "783577e": 145, "851795e": 145, "521463e": 145, "204314e": 145, "672744e": 145, "568894e": 145, "974112e": 145, "556168e": 145, "450115e": 145, "377831e": 145, "117960e": 145, "727714e": 145, "0133": [145, 169], "dai": [145, 206, 255, 263, 264, 265, 266, 268, 477, 478, 479], "800204787": 145, "379736": 145, "123525": 145, "806864627": 145, "734826": 145, "339465": 145, "813524468": 145, "996158": 145, "627037": 145, "820184308": 145, "748030": 145, "024973": 145, "826844149": 145, "123811": 145, "917677": 145, "pivot": [145, 261, 773, 804], "long_df": [145, 226], "coupl": [145, 210, 214, 235, 412, 589, 844, 862, 878], "1342": [145, 169, 233, 235], "categorydtyp": 145, "nicer": [145, 205, 878], "hue": 145, "peak_lat": 145, "regex": [145, 878], "2123": [145, 169], "idxmax": 145, "melt": 145, "id_var": 145, "var_nam": 145, "value_nam": 145, "satur": [145, 505], "50_epochs_to_data_fram": [145, 148], "equidistantli": 146, "consecut": [146, 168, 233, 270, 271, 274, 277, 278, 279, 450, 517, 559, 560, 878], "briefli": [146, 151, 201, 217, 225], "hous": 146, "compute_proj_ecg": [146, 205, 206, 573, 577, 853, 868, 878], "envelope_correl": [146, 878], "manag": [146, 166, 171, 172, 263, 264, 265, 266, 269, 270, 271, 273, 274, 277, 278, 279, 281, 353, 354, 356, 358, 412, 419, 422, 425, 426, 452, 465, 467, 477, 478, 516, 519, 520, 530, 531, 540, 541, 546, 557, 562, 569, 570, 645, 648, 649, 650, 662, 684, 685, 686, 687, 688, 699, 701, 702, 703, 704, 705, 706, 707, 715, 716, 724, 725, 726, 727, 728, 739, 740, 775, 777, 780, 792, 798, 799, 835, 837, 842, 844, 859, 866, 878], "chan": [146, 254, 677], "221": [146, 169, 208, 230], "heart": [146, 198, 203, 243, 726, 729, 878], "beat": [146, 210, 569, 577, 580, 649], "onpca": 146, "onecg": 146, "make_fixed_length_epoch": [146, 258, 868, 878], "unsuit": [146, 878], "event_related_plot": 146, "1142": [146, 169, 195], "n_sensor": [146, 239, 270, 274, 278, 761], "alpha_data": 146, "1530": 146, "epochconnect": 146, "corr_matrix": 146, "first_30": 146, "last_30": 146, "corr_matric": 146, "color_lim": 146, "mpbl": 146, "788": [146, 148, 230], "60_make_fixed_length_epoch": [146, 148], "429": [148, 225, 230], "auto_tutorials_epoch": 148, "457": [148, 225, 230], "raw_fil": [149, 151], "happen": [149, 151, 156, 160, 161, 167, 168, 171, 195, 200, 202, 204, 225, 256, 263, 264, 316, 432, 434, 833, 837, 854, 857, 859, 863, 878], "discuss": [149, 151, 156, 165, 166, 168, 173, 180, 191, 195, 198, 201, 202, 214, 217, 225, 230, 240, 243, 700, 836, 837, 854, 856, 857, 859, 860, 878], "transfer": [149, 195, 199, 201, 586, 833, 853], "maintain": [149, 199, 225, 263, 264, 265, 266, 477, 478, 479, 548, 837, 856, 859, 860, 878], "proven": [149, 878], "never": [149, 263, 264, 317, 575, 763, 837, 860, 878], "72160572e": 149, "57859354e": 149, "98040833e": 149, "75128428e": 149, "15309907e": 149, "83186429e": 149, "bewar": [149, 160, 860], "evoked_subset": 149, "repair": [149, 165, 166, 198, 199, 200, 205, 209, 212, 213, 217, 243, 263, 265, 266, 268, 356, 450, 477, 492, 551, 554, 556, 557, 569, 570, 571, 573, 574, 592, 593, 701, 796, 797, 817, 853, 878], "evk_fil": 149, "evokeds_list": [149, 150], "right_vi": 149, "remedi": 149, "left_right_aud": 149, "6992832460543575": [149, 151], "fairli": [149, 166, 198, 200, 201, 202, 204, 206, 207], "left_aud": 149, "right_aud": 149, "proport": [149, 225, 270, 271, 272, 274, 277, 278, 279, 352, 364, 475, 557, 565, 803, 808, 860, 878], "grand_averag": [149, 151, 868, 878], "intend": [149, 171, 209, 215, 256, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 433, 477, 478, 557, 586, 592, 844], "standard_error": [149, 263, 264, 265, 266, 615, 878], "iter_evok": [149, 151, 263, 264, 878], "ix": [149, 151], "return_amplitud": [149, 151, 265, 266], "569": [149, 230], "648": [149, 194, 230], "10_evoked_overview": [149, 154], "evoked_fil": 150, "life": [150, 859], "evk": [150, 151], "superimpos": [150, 172, 198, 217, 557, 746, 789], "timeseri": [150, 222, 263, 264, 265, 266, 477, 478, 664, 698], "resembl": [150, 162, 175, 524, 580, 581], "wing": 150, "behav": [150, 201, 214, 267, 268, 438, 878], "time_ranges_of_interest": 150, "drag": [150, 151, 161, 216, 260, 263, 264, 265, 266, 272, 409, 416, 477, 478, 556, 557, 697, 699, 701, 776, 777, 781, 784, 788, 797, 799, 800, 805, 807, 835, 855], "averaging_dur": 150, "augment": [150, 863], "custom_func": 150, "0x7f9ba9eaa560": 150, "substr": [150, 620, 632, 878], "action": [150, 171, 837, 863, 866], "ambigu": [150, 271, 277, 279, 878], "temp_list": 150, "_comment": 150, "_evk": 150, "overhead": [150, 644, 740, 878], "trans_fil": 150, "00097": 150, "meg_surf": [150, 516], "_map": 150, "166": [150, 169, 201, 208, 229, 230, 235, 243], "20_visualize_evok": [150, 154], "materi": [151, 162, 833, 837, 857], "link": [151, 189, 243, 270, 274, 278, 444, 759, 803, 837, 843, 857, 860, 866, 878], "events_fil": [151, 200], "discard": [151, 199, 204, 205, 206, 209, 235, 584, 585, 612, 878], "last_samp": [151, 268, 361, 476, 477, 478, 833, 878], "13514": 151, "mislabel": 151, "lowercas": 151, "channel_renaming_dict": [151, 214], "schemat": 151, "diagram": [151, 204, 833], "addition": [151, 171, 190, 198, 205, 216, 238, 254, 271, 277, 279, 317, 328, 643, 725, 728, 808, 837, 852, 862], "realist": [151, 243, 853, 860], "dedic": [151, 198, 204, 206, 214, 477, 478, 798, 837, 841, 859, 867, 878], "use_browser_backend": [151, 199, 202, 204, 205, 206, 207, 263, 264, 477, 478, 557, 775, 792, 798, 868, 878], "xx": [151, 199, 202, 205, 206, 207, 257, 837], "qt": [151, 171, 172, 199, 202, 204, 205, 206, 207, 263, 264, 477, 478, 557, 745, 775, 792, 798, 814, 817, 835, 857, 878], "scheme": [151, 188, 220, 229, 260, 263, 264, 265, 266, 272, 409, 416, 425, 477, 478, 556, 557, 571, 639, 642, 678, 697, 699, 701, 762, 775, 777, 784, 788, 797, 800, 801, 805, 807, 837, 860, 878], "eeg53": 151, "eog61": 151, "chose": 151, "consol": [151, 841, 878], "duplic": [151, 161, 258, 263, 264, 265, 266, 269, 273, 311, 339, 477, 478, 633, 878], "eeg03": 151, "eeg01": 151, "eeg02": 151, "eeg04": 151, "eeg06": 151, "eeg07": 151, "eeg25": 151, "25auditori": 151, "27buttonpress": 151, "5visual": 151, "28visual": 151, "barplot": [151, 204], "lose": [151, 189, 216, 857], "plot_drop_log": [151, 200, 210, 263, 264, 868, 878], "break": [151, 165, 212, 213, 216, 257, 263, 265, 268, 358, 477, 554, 557, 560, 573, 574, 577, 578, 612, 831, 837, 853, 878], "l_aud": [151, 235], "l_vi": [151, 235], "fig1": [151, 170], "speak": [151, 167, 168, 203, 845], "agreement": [151, 859], "warrant": 151, "popul": [151, 155, 165, 220, 223, 228, 243, 264, 266, 372, 409, 441, 478, 586, 679, 741, 833, 878], "leverag": [151, 859], "verifi": [151, 182, 240, 842, 843, 860], "plain": [151, 203, 240, 331, 823], "ddof": [151, 162, 857], "lime": 151, "revisit": [151, 243, 409], "eeg17": 151, "eeg18": 151, "eeg26": 151, "eeg23": 151, "eeg24": 151, "eeg34": 151, "eeg35": 151, "left_ix": 151, "right_ix": 151, "roi_dict": 151, "left_roi": [151, 263, 264, 265, 266, 776, 781], "right_roi": [151, 263, 264, 265, 266, 776, 781], "roi_evok": 151, "combine_channel": [151, 868, 878], "aud_minus_vi": 151, "29969": 151, "69928": 151, "weak": [151, 204], "chapter": 151, "erplab": [151, 243], "consequ": [151, 162, 169, 209, 354, 355, 356, 438, 449, 494, 544, 857, 860, 878], "voltag": [151, 166, 168, 188, 189, 207, 215, 501, 833, 878], "p100": 151, "submit": [151, 226, 837, 859], "amp": [151, 178, 183, 185, 255, 878], "throughout": [151, 171, 210, 557, 854, 878], "remaind": 151, "print_peak_measur": 151, "3f": [151, 209, 226, 230, 240, 263, 264, 265, 266, 477, 478, 699, 701, 777, 784], "good_tmin": 151, "good_tmax": 151, "eeg55": 151, "578": [151, 230], "508": [151, 225, 226, 230], "priori": [151, 240, 860], "believ": [151, 240, 837, 860], "eeg59": 151, "fist": 151, "l_vis_roi": 151, "ch_roi": 151, "lat_roi": 151, "amp_roi": 151, "FOR": 151, "ONE": [151, 157, 195, 243], "713": [151, 184, 187, 195, 208], "suscept": [151, 202, 576], "challeng": [151, 211, 243, 854, 857, 866], "meth": [151, 172, 837, 878], "guarante": [151, 188, 199, 204, 207, 209, 225, 263, 264, 265, 266, 439, 440, 441, 442, 477, 478, 507, 878], "rise": [151, 493, 603, 609, 833], "crucial": [151, 156, 198, 233], "095": [151, 170, 260, 263, 264, 265, 266, 272, 311, 329, 409, 416, 477, 478, 556, 557, 571, 697, 699, 701, 762, 769, 777, 779, 781, 784, 785, 788, 795, 797, 799, 800, 801, 805, 807, 878], "bad_tmin": 151, "bad_tmax": 151, "bad_lat_roi": 151, "bad_amp_roi": 151, "898": [151, 195], "unclear": [151, 837], "truli": [151, 201, 684], "pink": [151, 156, 761, 833], "star": 151, "yourself": [151, 156, 169, 198, 202, 214, 255, 265, 266, 488, 784, 837], "c6": 151, "act": [151, 169, 202, 203, 205, 209, 263, 264, 265, 266, 276, 296, 297, 346, 472, 474, 475, 477, 478, 535, 585, 642, 700, 833, 855, 857, 859, 878], "eeg54": 151, "eeg57": 151, "l_vis_mean_roi": 151, "mean_amp_roi": 151, "mean_amp_roi_df": 151, "mean_amp": 151, "numeric_onli": 151, "279764": 151, "685840": 151, "reiter": 151, "hypothes": [151, 225, 226, 866], "l_vis_crop": 151, "mean_amp_al": 151, "mean_amp_all_df": 151, "option_context": 151, "max_column": 151, "689513": 151, "078492": 151, "381191": 151, "609264": 151, "eeg05": 151, "113717": 151, "eeg56": 151, "064174": 151, "259681": 151, "eeg58": 151, "156472": 151, "802306": 151, "eeg60": 151, "878811": 151, "dietrich": [151, 243, 524, 860], "lehmann": [151, 243, 524, 860], "wolfgang": [151, 243, 726, 729], "skrandi": [151, 243], "identif": [151, 204, 243, 571], "checkerboard": [151, 166, 240, 243, 854], "621": [151, 230, 243], "90419": [151, 243], "neurobiologi": [151, 243], "1984": [151, 243], "0301": [151, 243], "0082": [151, 243], "90003": [151, 243], "micah": [151, 243], "brunet": [151, 243], "michel": [151, 185, 243, 387, 557, 657], "s10548": [151, 207, 243, 572, 662], "0054": [151, 243], "ma": [151, 243, 878], "52585": [151, 243], "mitpress": [151, 243], "book": [151, 243, 448, 837], "javier": [151, 243], "lopez": [151, 243], "calderon": [151, 243], "00213": [151, 243], "preclud": [151, 201, 209, 243, 585], "00131": [151, 201, 243], "rufin": [151, 201, 243], "vanrullen": [151, 201, 243], "fallaci": [151, 201, 243], "00365": [151, 201, 243], "nichola": [151, 211, 243, 854], "gaspelin": [151, 243], "12639": [151, 243], "341": [151, 154, 169, 225, 230, 522], "30_eeg_erp": [151, 154], "perspect": [152, 205, 745], "satisfi": [152, 161, 225, 296, 297, 679, 699, 701, 860], "40_whiten": [152, 154], "repetit": [153, 165, 662], "682": [154, 226, 230], "auto_tutorials_evok": 154, "outer": [155, 158, 160, 161, 183, 255, 306, 557, 585, 745, 791, 833, 838, 841, 844, 853, 854, 857, 860, 863], "tissu": [155, 158, 833], "boundari": [155, 158, 172, 182, 191, 217, 260, 263, 264, 265, 266, 269, 272, 273, 362, 409, 416, 467, 477, 478, 556, 557, 576, 602, 662, 676, 697, 699, 701, 745, 750, 762, 763, 777, 784, 788, 797, 799, 800, 805, 807, 833, 843, 863, 878], "analog": [155, 188, 190, 195, 205, 209, 263, 264, 265, 266, 444, 477, 478, 485, 492, 499, 554, 697, 699, 700, 701, 833, 863, 878], "freesurfer_hom": [155, 371, 843], "setupfreesurf": 155, "sh": [155, 840, 843], "folder": [155, 156, 158, 161, 170, 188, 214, 273, 276, 302, 306, 337, 376, 377, 378, 379, 381, 382, 384, 389, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 457, 458, 463, 493, 505, 609, 641, 761, 763, 837, 840, 843, 878], "my_subject": 155, "my_nifti": 155, "subfold": [155, 384], "beforehand": [155, 263, 264, 775, 813], "set_config": [155, 171, 263, 264, 374, 384, 457, 477, 478, 557, 743, 775, 792, 798, 835, 837, 853, 868, 878], "overview": [155, 156, 165, 170, 173, 174, 180, 200, 204, 206, 212, 213, 225, 239, 248, 263, 264, 265, 266, 268, 274, 352, 450, 477, 478, 523, 524, 538, 554, 557, 573, 574, 577, 578, 697, 727, 769, 775, 778, 792, 798, 814, 833, 857], "buckner40not": 155, "standalon": [155, 839, 870, 878], "933": [155, 164, 230], "10_background_freesurf": [155, 164], "landmark": [156, 220, 334, 364, 833, 853, 860, 863, 878], "t1w": [156, 311], "nifti1imag": [156, 182, 275, 278, 279, 306], "xyzt_unit": 156, "uint8": 156, "t1_mgh": 156, "mghimag": [156, 860], "draw": [156, 170, 176, 177, 201, 227, 260, 263, 264, 265, 266, 272, 311, 409, 416, 477, 478, 556, 557, 571, 580, 697, 699, 701, 762, 768, 769, 776, 777, 779, 784, 788, 791, 795, 797, 800, 801, 805, 807, 860, 863, 878], "ight": 156, "nterior": 156, "longest": 156, "uperior": 156, "camera": [156, 160, 265, 266, 468, 745, 759, 761, 780, 813, 878], "dig_mri_dist": [156, 364, 868, 878], "na": [156, 240, 484, 833], "preauricular": [156, 311, 335, 833, 860], "manufactur": [156, 170, 188, 189, 190, 833, 860, 866, 878], "faq": [156, 189, 201, 207, 308, 370, 485, 585, 858], "intersect": [156, 160, 161, 184, 585, 602, 853, 878], "purpl": [156, 158, 235], "perpendicular": [156, 178, 860], "goe": [156, 160, 201, 216, 860], "upward": [156, 160, 204, 208, 745, 769], "compani": [156, 243, 679, 859], "acquir": [156, 199, 283, 284, 306, 500, 849, 854, 859, 860, 863, 878], "emit": [156, 208, 257, 263, 264, 265, 266, 268, 270, 271, 273, 274, 277, 278, 279, 283, 284, 315, 338, 347, 348, 353, 357, 360, 362, 364, 368, 369, 428, 443, 456, 459, 477, 478, 497, 557, 586, 605, 634, 636, 697, 699, 700, 701, 742, 778, 789, 824, 826, 833, 878], "coregist": [156, 306, 468], "front": [156, 265, 266, 305, 428, 745, 779, 833, 860], "magenta": 156, "1mm": 156, "anisotrop": [156, 243, 860], "incorrectli": [156, 469, 857, 878], "identity_tran": 156, "mri_voxel": [156, 324, 509, 732], "corner": [156, 191, 201, 202, 205, 217, 255, 263, 264, 265, 266, 268, 477, 478, 758, 769, 775, 783, 798, 863, 878], "inferior": [156, 160, 833], "seghead_rr": 156, "seghead_tri": 156, "read_surfac": [156, 160, 161, 269, 631, 646, 831, 853, 868, 878], "mri_to_head": 156, "scalp_pts_in_head_coord": 156, "head_to_meg": 156, "scalp_pts_in_meg_coord": 156, "vox_to_mri": 156, "get_vox2ras_tkr": [156, 160, 182], "mri_to_vox": 156, "scalp_points_in_vox": 156, "nose": [156, 207, 305], "roughli": [156, 353, 576, 835, 878], "blur": [156, 860], "fiffv_point_cardin": [156, 160, 268, 863], "fiffv_point_nas": [156, 160, 268, 863], "fiffv_coord_head": [156, 267, 268, 863], "nasion_mri": [156, 160], "nasion_vox": [156, 160], "toggl": [156, 166, 172, 191, 199, 204, 217, 263, 264, 477, 478, 557, 745, 775, 790, 792, 798, 814, 878], "radio": [156, 866], "icon": [156, 172], "fid": [156, 696], "icp": [156, 878], "finetun": 156, "inner_skul": [156, 158, 159, 161, 172, 183, 276, 634, 761, 853, 854], "outer_skul": [156, 158, 159, 161, 170, 172, 276, 761, 853, 854], "equiv": [156, 183, 184, 185, 207], "rv": [156, 183, 184, 185, 207, 854], "00349057": [156, 207], "mu1": [156, 183, 184, 185, 207], "944702": [156, 207], "lambda1": [156, 183, 184, 185, 207], "137194": [156, 207], "mu2": [156, 183, 184, 185, 207], "667435": [156, 207], "683781": [156, 207], "mu3": [156, 183, 184, 185, 207], "26548": [156, 207], "lambda3": [156, 183, 184, 185, 207], "0106058": [156, 207], "6156": 156, "2300": 156, "1904": 156, "597": [156, 164, 230, 243, 417], "20_source_align": [156, 164], "hsp": [157, 188, 255, 311, 324, 336, 364, 501, 611, 860, 878], "preprat": 157, "jon": [157, 243, 878], "houck": [157, 243, 878], "faveli": [157, 865, 878], "skin": [157, 158, 161, 255, 263, 264, 265, 266, 306, 364, 477, 478, 554, 697, 699, 700, 701, 833, 854, 857, 860, 878], "fit_fiduci": [157, 364], "fit_icp": [157, 364], "n_iter": [157, 364, 583], "nasion_weight": [157, 364], "omit_head_shape_point": [157, 364], "compute_dig_mri_dist": [157, 364], "write_tran": [157, 630, 868], "abil": [157, 178, 180, 195, 655, 656, 725, 728, 855, 859, 866, 878], "set_scale_mod": [157, 364], "fetch_infant_templ": [157, 159, 854, 868, 878], "scale_mri": [157, 364, 637, 868, 878], "clau": [157, 243], "plo": [157, 195, 243], "e0232100": [157, 243], "pone": [157, 195, 243], "0232100": [157, 243], "25_automated_coreg": [157, 164], "concept": [158, 176, 225, 243, 833, 861, 864], "make_watershed_bem": [158, 191, 833, 857, 868, 878], "make_flash_bem": [158, 302, 833, 868, 878], "plot_bem": [158, 160, 308, 761, 857, 860, 868, 878], "plot_bem_kwarg": 158, "brain_surfac": [158, 763], "mrilab": [158, 863], "isn": [158, 166, 222, 240, 259, 263, 379, 401, 402, 619, 622, 625, 700, 837, 857], "candid": [158, 199, 833, 859], "oct4": 158, "90mm": 158, "57798": 158, "24365": 158, "20377": 158, "32480": 158, "22941": 158, "2787": 158, "9357": 158, "20154": 158, "10797": 158, "12738": 158, "13168": 158, "10203": 158, "2362": [158, 204, 243, 557], "10376": 158, "midpoint": [158, 190, 265, 266, 763, 860, 878], "make_bem_model": [158, 161, 191, 276, 364, 428, 459, 515, 521, 605, 634, 636, 826, 853, 868, 878], "4th": [158, 198, 263, 264, 265, 266, 411, 420, 444, 445, 447, 448, 477, 478, 569, 570], "icosahedron": [158, 160, 161, 255, 270, 274, 278, 645, 803], "n_tri": [158, 160, 269, 826], "topologi": [158, 201, 544, 878], "commonli": [158, 168, 170, 175, 201, 240, 268, 467, 557, 833, 878], "gone": 158, "adequ": [158, 206, 268], "fwd_fix": 158, "explicitli": [158, 172, 188, 195, 200, 202, 203, 204, 233, 258, 263, 264, 265, 266, 268, 273, 296, 297, 302, 309, 312, 328, 353, 357, 358, 368, 369, 370, 409, 411, 416, 425, 430, 447, 448, 452, 453, 472, 474, 475, 477, 478, 510, 535, 556, 557, 559, 572, 573, 574, 579, 583, 591, 593, 600, 602, 642, 649, 650, 651, 660, 661, 663, 665, 683, 684, 685, 686, 687, 688, 697, 699, 700, 701, 705, 706, 707, 708, 710, 728, 769, 775, 776, 779, 781, 782, 785, 794, 799, 835, 837, 853, 859, 866, 878], "src_hemi": 158, "apply_forward": [158, 284, 868, 878], "write_forward_solut": [158, 617, 868, 878], "justifi": [158, 448, 477, 478, 878], "claim": 158, "30_forward": [158, 164], "centimet": 159, "fs_dir": [159, 385], "live": [159, 201, 837, 878], "new_nam": 159, "rstrip": 159, "fp": [159, 445, 655], "999994": 159, "003552": 159, "000202": 159, "003558": 159, "998389": 159, "056626": 159, "000001": [159, 226, 229], "998395": 159, "7809": 159, "4027": 159, "8001": 159, "4113": 159, "6mo": [159, 387], "ants6": 159, "0months3t": 159, "come": [159, 175, 181, 188, 189, 201, 202, 204, 206, 216, 226, 240, 269, 274, 371, 500, 518, 612, 833, 835, 837, 841, 842, 854, 860, 878], "fname_1020": 159, "mon": [159, 500], "read_dig_fif": [159, 311, 324, 327, 330, 331, 332, 334, 335, 336, 860, 868, 878], "03d": [159, 494], "99975431": 159, "01839625": 159, "01236795": 159, "00087239": 159, "0143472": 159, "96230429": 159, "27159646": 159, "01252444": 159, "01689809": 159, "27135229": 159, "96233177": 159, "03137219": 159, "48640": 159, "48214": 159, "653": [159, 164, 193, 230], "35_eeg_no_mri": [159, 164], "readabl": [160, 263, 264, 265, 266, 373, 411, 420, 445, 447, 448, 477, 478, 818, 837], "superior": [160, 271, 277, 279, 620, 745, 833, 860], "wide": [160, 166, 214, 837, 859], "unfamiliar": [160, 841], "unsign": [160, 270, 271, 274, 277, 278, 279, 878], "triplet": [160, 268, 453, 524, 647], "geograph": 160, "earth": 160, "north": 160, "prime": [160, 170], "meridian": 160, "degre": [160, 162, 205, 225, 227, 230, 233, 255, 260, 265, 266, 268, 302, 306, 488, 583, 650, 684, 685, 687, 688, 697, 745, 750, 781, 813, 833, 843, 857, 860, 878], "nonetheless": [160, 201], "nativ": [160, 182, 188, 189, 263, 264, 265, 266, 315, 324, 329, 439, 440, 441, 442, 477, 478, 494, 501, 611, 745, 747, 854, 857, 866, 878], "mind": [160, 162, 175, 201, 254, 837], "si": [160, 190, 225, 239, 263, 264, 265, 266, 297, 453, 477, 478, 779, 781], "xyz_ra": 160, "00000000e": 160, "15484021e": 160, "91852465e": 160, "22726395e": 160, "56816911e": 160, "57160827e": 160, "18960930e": 160, "49011647e": 160, "40284092e": 160, "00712036e": 160, "ras_coords_mm": 160, "inv_affin": 160, "i_": [160, 188], "j_": 160, "k_": 160, "imshow_mri": 160, "ori_slic": 160, "saggit": 160, "ori_nam": 160, "set_path_effect": 160, "reorient": 160, "rightward": 160, "x_order": 160, "lip": 160, "y_order": 160, "torig": 160, "vox2ras_tkr": [160, 182], "conform": [160, 190, 257, 860, 878], "matter": [160, 170, 263, 264, 265, 266, 269, 467, 477, 478, 510, 557, 602, 697, 699, 700, 701, 779, 853, 859, 878], "freeurfer": 160, "whenev": [160, 201, 837, 855], "everywher": 160, "xyz_mri": 160, "digpoint": [160, 364, 878], "nasion_head": 160, "nasion_dig_mri": 160, "nasion_dig_vox": 160, "convention": 160, "rr_mm": 160, "313728": 160, "80481719970703": 160, "rr_vox": 160, "tricontour": 160, "renderer_kwarg": 160, "curv": [160, 195, 263, 264, 265, 266, 268, 477, 478, 658, 695, 699, 701, 860, 863], "read_curvatur": [160, 868], "y_shift": 160, "z_shift": 160, "this_rr": 160, "this_tri": 160, "copper_r": 160, "quiver3d": [160, 205, 878], "1050": 160, "wirefram": 160, "cyan": [160, 477, 478, 798], "line_width": 160, "cull": 160, "render_lines_as_tub": 160, "uniformli": [160, 191, 206, 474], "uniform": [160, 364, 430, 524, 649, 664, 687, 688, 833, 878], "subsampl": [160, 258, 261, 262, 263, 264, 265, 266, 270, 271, 274, 276, 277, 278, 279, 477, 478, 514, 573, 574, 645, 683, 697, 700, 709, 745, 853, 878], "rr_sph": 160, "mri_mni_tran": 160, "xyz_mni": 160, "02248488": 160, "00844919": 160, "03621711": 160, "00111715": 160, "07107091": 160, "91486582": 160, "40609791": 160, "02300193": 160, "00875602": 160, "43369992": 160, "02811882": 160, "03356932": 160, "land": [160, 220], "difficult": [160, 189, 200, 230, 557, 860], "gist": [160, 176, 189, 263, 264, 265, 266, 477, 478, 857], "github": [160, 263, 264, 265, 266, 477, 478, 835, 845, 849, 856, 857, 858, 859], "alexrockhil": 160, "b5a1ce6c6ba363cf3f277cd321a763bf": 160, "50_background_freesurfer_mn": [160, 164], "aris": [161, 198, 576], "ezemikulan": 161, "blender_freesurf": 161, "ezequiel": [161, 878], "mikulan": [161, 878], "manorama": [161, 878], "kadwani": [161, 878], "shutil": 161, "flash": [161, 276, 302, 306, 582, 761, 878], "surf_dir": 161, "problemat": [161, 189, 201, 204, 205, 209, 225, 263, 264, 273, 307, 329], "skill": [161, 837], "conv": 161, "conv_dir": 161, "makedir": 161, "exist_ok": 161, "read_metadata": [161, 628], "write_surfac": [161, 628, 631, 868, 878], "wavefront": [161, 628, 831, 878], "vert": [161, 178, 222, 240, 276], "preset": [161, 270, 271, 274, 277, 278, 279, 745, 803, 808], "beginn": [161, 839, 862], "teach": [161, 177, 243, 878], "_fix": 161, "inner_skull_fix": 161, "backup": 161, "mistak": [161, 837, 857], "inner_skull_orig": 161, "volume_info": [161, 628, 831], "vol_info": 161, "faulti": 161, "write_head_bem": [161, 868, 878], "head_dir": 161, "read_bem_surfac": [161, 514, 515, 604, 868, 878], "make_scalp_surfac": [161, 844, 868, 878], "shrinkwrap": 161, "\u2460": 161, "\u2461": 161, "\u2462": 161, "\u2464": 161, "tab": [161, 255, 468, 545, 753, 837, 855], "\u2465": 161, "\u2467": 161, "noth": [161, 184, 185, 200, 260, 263, 264, 265, 266, 272, 275, 353, 364, 409, 416, 420, 422, 477, 478, 556, 557, 571, 639, 697, 699, 701, 748, 758, 762, 777, 784, 788, 797, 800, 805, 807, 854, 863, 878], "\u2468": 161, "extrus": 161, "extrud": 161, "rough": [161, 857], "ahead": [161, 837], "kernel": [161, 190, 194, 225, 240, 243, 270, 271, 274, 277, 278, 279, 415, 650, 835, 841, 843, 857, 878], "mri_convert": [161, 860], "fwhm": [161, 713, 723, 727, 868, 878], "t1_smoothed_3": 161, "delet": [161, 171, 199, 200, 210, 257, 260, 263, 264, 265, 266, 272, 362, 409, 416, 477, 478, 556, 557, 571, 641, 697, 699, 701, 762, 784, 788, 797, 800, 805, 837, 845, 860, 878], "cleaner": [161, 201], "encount": [161, 165, 189, 201, 443, 835, 843, 857], "runtimeerror": 161, "20516": 161, "isomorph": 161, "defect": [161, 255, 307, 364, 428, 459, 605, 634, 636, 826, 857, 878], "1014": 161, "2068": 161, "7732": 161, "8435": [161, 878], "8489": 161, "10181": 161, "11120": [161, 878], "11121": 161, "11122": [161, 878], "11304": 161, "11788": 161, "disrupt": 161, "999668": 161, "wrong": [161, 836, 878], "easiest": [161, 198, 200, 202, 220, 837, 840], "unedit": 161, "gpl": 161, "water": 161, "clean_from_arrai": 161, "80_fix_bem_in_blend": [161, 164], "bb": [162, 438], "pp": [162, 263, 264, 299, 430, 679], "desc": [162, 205, 272], "66000": 162, "write_cov": [162, 606, 868, 878], "noise_cov_baselin": 162, "noise_cov_reg": 162, "1769": 162, "1785": 162, "1797": 162, "freedom": [162, 205, 225, 227, 230, 233, 260, 265, 266, 468, 684, 685, 687, 688, 761, 780, 857, 878], "violat": [162, 837, 857], "hack": [162, 240], "evoked_meg": 162, "empty_room": 162, "improp": [162, 878], "overestim": [162, 203], "juha": [162, 209, 243, 585, 857], "simola": [162, 209, 243, 585, 857], "kajola": [162, 209, 243, 430, 568, 585, 857, 860], "3359": [162, 243, 857], "3372": [162, 243, 857], "tsp": [162, 204, 243, 353, 557, 857], "853302": [162, 243, 857], "90_compute_covari": [162, 164], "auto_tutorials_forward": 164, "emphasi": [165, 265, 266, 779, 861], "topic": [165, 166, 189, 198, 201, 203, 243, 296, 852, 861, 862], "knowledg": [165, 240, 853, 859], "unexplain": 165, "experienc": [165, 559, 859], "troubl": [165, 878], "configur": [165, 168, 173, 174, 190, 206, 214, 230, 263, 264, 268, 356, 384, 457, 458, 468, 477, 478, 501, 535, 545, 557, 569, 570, 641, 644, 696, 740, 745, 775, 792, 798, 811, 812, 813, 835, 842, 854, 856, 857, 860, 863, 866, 868, 878], "infrar": [165, 190, 212, 213, 243, 263, 264, 265, 266, 268, 352, 438, 477, 478, 505, 554, 587, 588, 589, 591, 697, 699, 700, 701, 745, 769, 778, 783, 844, 854, 860, 878], "spectroscopi": [165, 190, 212, 213, 243, 263, 264, 265, 266, 268, 352, 438, 477, 478, 505, 554, 587, 588, 589, 591, 697, 699, 700, 701, 745, 769, 778, 783, 844, 854, 860, 878], "ssvep": [165, 170, 241, 242, 263, 268, 311, 327, 438, 487, 554, 699, 807, 868, 878], "vssr": [165, 241, 242, 263, 268, 311, 327, 438, 487, 554, 699, 807, 854], "bti": [165, 186, 187, 225, 260, 261, 263, 265, 266, 268, 301, 353, 450, 452, 488, 521, 761, 773, 860, 878], "twowai": [165, 231, 232, 263, 268, 477, 554, 612, 678, 680, 681, 685, 700, 727, 878], "anova": [165, 195, 225, 228, 231, 232, 236, 237, 263, 265, 266, 268, 274, 276, 359, 477, 523, 524, 538, 554, 612, 627, 669, 678, 679, 680, 681, 685, 688, 689, 700, 727, 745, 878], "spatiotempor": [165, 227, 231, 232, 243, 263, 265, 266, 268, 317, 477, 554, 585, 612, 677, 684, 688, 689, 700, 727, 766, 769, 878], "strf": [165, 196, 197, 415, 421, 449], "submodul": [165, 166, 198, 204, 206, 214, 220, 223, 837, 878], "corrupt": [165, 198, 199, 223, 224, 260, 263, 266, 267, 268, 269, 274, 353, 363, 450, 477, 523, 524, 538, 617, 620, 661, 664, 745, 857, 878], "auto_tutorials_python": 165, "auto_tutorials_jupyt": 165, "varieti": [166, 188, 190, 198, 214, 860], "smoothli": [166, 200, 214, 260, 263, 264, 265, 266, 272, 409, 416, 477, 478, 556, 557, 697, 699, 701, 777, 784, 788, 797, 800, 805], "substitut": [166, 371, 835, 859, 860], "glimps": [166, 214], "41700": 166, "custom_ref_appli": [166, 169, 214, 220, 268, 878], "file_id": [166, 169, 214, 263, 264, 265, 266, 268, 477, 478, 479, 863, 878], "hpi_mea": [166, 169, 214, 268, 878], "hpi_result": [166, 169, 214, 268, 878], "meas_dat": [166, 168, 169, 200, 214, 216, 220, 257, 263, 264, 265, 266, 268, 476, 477, 478, 479, 557, 586, 792, 798, 878], "utc": [166, 169, 214, 216, 263, 264, 265, 266, 268, 477, 478, 878], "meas_id": [166, 169, 214, 263, 264, 265, 266, 268, 477, 478, 479, 863, 878], "breviti": 166, "walk": [166, 204, 206], "orig_raw": 166, "chan_idx": 166, "sent": [166, 168, 190, 191, 204, 215, 273], "deliveri": 166, "squarewav": 166, "unambigu": [166, 168], "older": [166, 168, 170, 319, 429, 477, 863, 878], "summat": [166, 168, 201, 689], "6994": 166, "7086": 166, "7192": 166, "7304": 166, "7413": 166, "ordinari": [166, 168, 199, 205, 225, 574, 578, 682, 859], "autoreject": [166, 199, 200, 844], "aren": [166, 207, 453], "fewest": 166, "conds_we_care_about": 166, "aud_epoch": 166, "vis_epoch": 166, "271": [166, 169, 230], "richer": 166, "aud_evok": 166, "vis_evok": 166, "classic": [166, 240, 270, 271, 274, 277, 278, 279, 726, 729, 745, 803, 808], "p200": [166, 191], "dorso": 166, "evoked_diff": [166, 210], "underdetermin": 166, "akin": 166, "inverse_operator_fil": 166, "inv_oper": 166, "\u03bb\u00b2": 166, "61922423e": 166, "06837855e": 166, "49139511e": 166, "723": [166, 174, 194, 208, 230], "10_overview": [166, 174], "obligatorili": 167, "unexpect": [167, 195, 243, 263, 264, 265, 266, 317, 353, 505, 857], "apply_funct": [167, 263, 264, 265, 266, 477, 478, 878], "unprocess": [167, 863], "original_raw": 167, "complex128": [167, 263, 264, 265, 266, 477, 478], "certain": [167, 168, 191, 198, 202, 204, 209, 220, 239, 261, 265, 266, 384, 435, 464, 477, 478, 535, 557, 575, 586, 684, 685, 779, 811, 835, 837, 859, 860, 878], "rereferenc": [167, 240], "unaffect": [167, 202, 415], "rereferenced_raw": 167, "ref_data": [167, 642], "fig_orig": 167, "fig_reref": 167, "644": [167, 174, 208], "15_inplac": [167, 174], "broadli": 168, "ram": [168, 198, 200, 214, 215, 216, 217, 263, 264, 477, 478, 557, 775, 792, 798, 878], "36037": [168, 198, 202, 205, 206, 207, 209, 215, 216, 217], "necessarili": [168, 170, 189, 198, 200, 203, 256, 263, 264, 296, 713, 723, 727, 754, 860], "instantan": [168, 222], "receiv": [168, 190, 430, 494, 658, 835, 860, 878], "rectangular": [168, 201, 225, 270, 271, 274, 277, 278, 279, 803, 808], "ttl": [168, 599], "upcom": 168, "newer": [168, 170, 204, 835, 840, 843, 845, 878], "27977": 168, "28345": 168, "28771": 168, "29219": 168, "29652": 168, "preced": [168, 263, 264, 359, 469, 745, 775, 833, 837, 878], "config": [168, 171, 188, 255, 256, 263, 264, 374, 376, 377, 378, 379, 381, 382, 384, 385, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 450, 451, 457, 458, 468, 477, 478, 488, 547, 557, 624, 634, 637, 641, 745, 754, 775, 792, 798, 837, 878], "mne_stim_channel": [168, 171, 256, 450, 451, 477, 478], "mne_stim_channel_1": [168, 256, 450, 451], "saver": [168, 200, 202, 855, 857], "testing_data_fold": 168, "eeglab_raw_fil": 168, "eeglab_raw": 168, "began": 168, "000068": 168, "217": [168, 169, 230], "602": [168, 202, 230, 863], "unmodifi": [168, 207, 505], "custom_map": 168, "annotations_from_ev": [168, 257, 438, 868, 878], "orig_tim": [168, 200, 216, 257, 282, 878], "annot_from_ev": 168, "event_desc": [168, 282], "rem_annot": 168, "rem_ev": 168, "rem_event_dict": 168, "modulo": 168, "501": [168, 195, 202, 208, 230], "onlin": [168, 199, 204, 217, 256, 849, 862, 878], "20_events_from_raw": [168, 174], "alon": [169, 849], "gantri": [169, 268, 878], "blank": [169, 214, 697, 843, 878], "subject_info": [169, 263, 264, 265, 266, 268, 477, 478, 479, 878], "device_info": [169, 263, 264, 265, 266, 268, 441, 477, 478, 479, 878], "helium_info": [169, 263, 264, 265, 266, 268, 477, 478, 479, 878], "hpi_subsystem": [169, 268], "proc_histori": [169, 263, 264, 265, 266, 268, 477, 478, 479], "proj_id": [169, 214, 263, 264, 265, 266, 268, 477, 478, 479], "proj_nam": [169, 214, 263, 264, 265, 266, 268, 477, 478, 479], "utc_offset": [169, 263, 264, 265, 266, 268, 477, 478, 479, 878], "line_freq": [169, 240, 268], "gantry_angl": [169, 268], "ctf_head_t": [169, 268, 863], "dev_ctf_t": [169, 268, 863], "acq_par": [169, 214, 256, 268], "acq_stim": [169, 268], "xplotter_layout": [169, 268], "kit_system_id": [169, 268], "0143": 169, "0142": 169, "0213": 169, "0212": [169, 334], "0222": 169, "0223": 169, "0232": 169, "0233": 169, "0313": 169, "0312": 169, "0322": 169, "0323": 169, "0333": 169, "0332": 169, "0343": 169, "0342": 169, "0413": 169, "0412": 169, "0422": 169, "0423": 169, "0432": 169, "0433": 169, "0443": 169, "0442": 169, "0513": 169, "0512": 169, "0523": [169, 243, 662], "0522": 169, "0532": 169, "0533": 169, "0542": 169, "0543": 169, "0613": 169, "0612": 169, "0622": 169, "0623": 169, "0633": 169, "0632": 169, "0643": 169, "0713": 169, "0712": 169, "0723": 169, "0722": 169, "0733": 169, "0732": 169, "0743": 169, "0742": 169, "0813": 169, "0822": 169, "0823": 169, "0913": 169, "0912": 169, "0923": 169, "0922": 169, "0932": 169, "0933": 169, "0943": 169, "1023": 169, "1022": 169, "1032": 169, "1033": [169, 194], "1042": [169, 334], "1113": 169, "1123": 169, "1122": [169, 202], "1133": [169, 195], "1132": 169, "1143": 169, "1213": 169, "1212": 169, "1223": 169, "1222": [169, 195], "1232": [169, 195, 208], "1233": 169, "1243": 169, "1242": 169, "1312": 169, "1313": 169, "1322": 169, "1343": 169, "1412": 169, "1413": 169, "1423": [169, 208], "1433": 169, "1432": 169, "1442": 169, "1443": 169, "1512": [169, 243, 472], "1513": 169, "1523": [169, 243, 713, 723, 724, 726, 727, 729], "1533": 169, "1532": 169, "1543": [169, 208], "1542": 169, "1612": 169, "1622": 169, "1623": 169, "1632": 169, "1633": 169, "1642": 169, "1713": 169, "1712": 169, "1722": 169, "1723": 169, "1732": 169, "1733": 169, "1743": 169, "1742": 169, "1813": 169, "1812": 169, "1822": 169, "1823": 169, "1832": 169, "1843": 169, "1912": 169, "1913": 169, "1923": 169, "1922": 169, "1932": 169, "1933": 169, "1942": 169, "2023": [169, 171], "2032": 169, "2033": 169, "2042": 169, "2112": 169, "2122": 169, "2133": 169, "2132": 169, "2143": [169, 243, 726, 729], "2142": 169, "2212": 169, "2213": 169, "2223": 169, "2222": 169, "2233": 169, "2242": [169, 214], "2243": 169, "2312": 169, "2313": [169, 209], "2323": 169, "2322": 169, "2333": [169, 551], "2343": 169, "2342": 169, "2412": 169, "2413": 169, "2422": 169, "2432": 169, "2442": 169, "2512": 169, "2513": 169, "2523": 169, "2533": 169, "2532": 169, "2543": 169, "2542": 169, "2612": 169, "2613": 169, "2623": 169, "2633": 169, "bear": [169, 837, 857, 878], "scanno": [169, 268, 863], "logno": [169, 268, 863], "cal": [169, 268, 319, 476, 863], "coil_typ": [169, 268, 854], "unit_mul": [169, 268, 863], "116": [169, 177, 195, 225, 230], "131": [169, 230, 334], "162": [169, 195, 229, 230, 243, 276], "185": [169, 195, 200, 225, 229, 230, 276], "193": [169, 195, 229, 878], "194": [169, 208, 225, 230, 243, 860, 878], "206": [169, 225, 229], "208": [169, 171, 188, 208, 225, 230, 243], "209": [169, 184, 201, 225, 229, 230, 243], "212": [169, 194, 201, 225, 229, 243], "218": [169, 201, 229, 243], "224": [169, 171, 188, 195, 208, 225, 229, 230], "228": [169, 229, 230, 243, 572], "229": [169, 225, 230], "231": [169, 208], "233": [169, 195, 208, 230], "242": [169, 229, 230, 878], "254": [169, 208], "276": [169, 230], "278": [169, 230], "279": [169, 194, 195, 202, 225, 230, 243, 557, 726, 729], "282": [169, 208], "285": [169, 225], "286": [169, 208, 225, 230], "308": [169, 230], "327": [169, 194, 208, 225, 230], "337": 169, "338": [169, 208, 225, 230], "oxyhemoglobin": [169, 263, 264, 265, 266, 477, 478, 554, 697, 699, 700, 701, 833, 860], "deoxyhemoglobin": [169, 190, 263, 264, 265, 266, 477, 478, 554, 697, 699, 700, 701, 833, 860], "hbo": [169, 190, 210, 214, 220, 263, 264, 265, 266, 310, 370, 372, 477, 478, 554, 697, 699, 700, 701, 833, 860], "hbr": [169, 190, 210, 214, 220, 263, 264, 265, 266, 310, 370, 372, 477, 478, 554, 697, 699, 700, 701, 833, 860], "express": [169, 199, 426, 438, 485, 492, 499, 532, 551, 576, 603, 620, 711, 859, 860, 863, 878], "pick_channels_regexp": [169, 199, 204, 206, 211, 548, 868], "unawar": 169, "accident": [169, 216, 662, 878], "channel_typ": [169, 204, 263, 264, 265, 266, 268, 477, 478, 557, 697, 699, 700, 701, 868], "emb": 169, "comprehens": [169, 195, 214, 225, 227, 409, 837, 859], "channel_indices_by_typ": [169, 868], "ch_idx_by_typ": 169, "exci": [169, 214, 263, 264, 265, 266, 310, 477, 478, 554, 697, 699, 700, 701, 860], "ia": [169, 214, 263, 264, 265, 266, 268, 310, 477, 478, 554, 697, 699, 700, 701, 860, 878], "syst": [169, 214, 263, 264, 265, 266, 310, 477, 478, 554, 697, 699, 700, 701, 860], "bio": [169, 220, 263, 264, 265, 266, 310, 372, 442, 477, 478, 492, 554, 697, 699, 700, 701, 860], "temperatur": [169, 263, 264, 265, 266, 310, 477, 478, 554, 697, 699, 700, 701, 833, 854, 860, 878], "gsr": [169, 263, 264, 265, 266, 310, 477, 478, 554, 697, 699, 700, 701, 860, 878], "fnirs_cw_amplitud": [169, 190, 210, 263, 264, 265, 266, 370, 477, 478, 833], "fnirs_fd_ac_amplitud": [169, 190, 263, 264, 265, 266, 370, 477, 478, 833], "fnirs_fd_phas": [169, 190, 263, 264, 265, 266, 370, 477, 478, 833], "fnirs_od": [169, 263, 264, 265, 266, 370, 477, 478, 833], "eeg_indic": 169, "ipython": [169, 263, 264, 477, 478, 557, 775, 792, 798, 835, 848, 857, 859, 861], "30_info": [169, 174], "mplot3d": [170, 205, 225], "axes3d": [170, 205, 225, 261, 263, 264, 265, 266, 311, 477, 478, 773, 795, 801, 878], "plai": [170, 204, 222, 240, 725, 728, 859, 860], "eeg_posit": 170, "builtin_montag": 170, "montage_nam": 170, "montage_descript": 170, "standard_alphabet": 170, "a1": [170, 207], "b2": 170, "standard_postfix": 170, "postfix": 170, "intermedi": [170, 199, 269, 288, 290, 683, 745, 860], "standard_prefix": 170, "standard_prim": 170, "biosemi16": [170, 225], "biosemi": [170, 225, 337, 485, 860], "cap": [170, 195, 225, 833, 854, 878], "biosemi32": [170, 225], "biosemi64": [170, 225], "biosemi160": 170, "biosemi256": 170, "easycap": [170, 225, 240, 878], "m10": [170, 878], "egi_256": 170, "geodes": [170, 467, 510, 667, 668, 669, 671, 672, 878], "gsn": [170, 441], "hydrocel": [170, 441], "64_1": 170, "65_1": 170, "mgh60": [170, 878], "mgh70": [170, 878], "brainvis": [170, 329, 330, 438, 442, 477, 478, 487, 603, 854, 860, 878], "artini": [170, 190, 327, 878], "octamon": [170, 190, 878], "detector": [170, 190, 210, 214, 500, 590, 591, 745, 761, 860, 878], "brite23": [170, 878], "brainproduct": 170, "rnp": 170, "ba": [170, 444, 860, 878], "easycap_montag": 170, "digmontag": [170, 182, 263, 264, 265, 266, 268, 314, 315, 324, 327, 329, 330, 331, 332, 333, 334, 335, 336, 364, 461, 477, 478, 489, 795, 815, 818, 833, 868, 878], "headshap": [170, 255, 304, 311, 324, 336, 501, 878], "gca": 170, "view_init": [170, 205, 225], "azim": [170, 205], "ssvep_fold": 170, "ssvep_data_raw_path": 170, "se": [170, 200, 211, 240, 860], "02_se": [170, 240], "ssvep_eeg": [170, 240], "ssvep_raw": 170, "read_raw_brainvis": [170, 189, 240, 483, 860, 868, 878], "circumfer": 170, "t4": 170, "t3": [170, 319, 477, 878], "075": 170, "sample_data_raw_path": 170, "sample_raw": 170, "ax2d": 170, "add_subplot": [170, 225], "ax3d": 170, "irregular": [170, 857, 878], "fastrak": 170, "predefin": [170, 833], "layout_dir": 170, "iterdir": 170, "IN": 170, "ctf151": [170, 225, 337], "lai": [170, 337, 506, 860, 878], "ctf275": [170, 225, 337], "eeg1005": [170, 337], "egi256": [170, 337], "geodesicheadweb": [170, 337], "AS": [170, 337], "umd": [170, 225, 337], "neuromag_122": [170, 337], "grad_norm": [170, 337], "magneswh3600": [170, 337, 488], "biosemi_layout": 170, "make_eeg_layout": [170, 320, 326, 868], "layout_from_raw": 170, "make_meg_layout": 170, "snugli": 170, "40_sensor_loc": [170, 174], "suit": [171, 849], "get_config": [171, 384, 641, 868, 878], "unnam": 171, "mne_use_cuda": [171, 374, 835], "json": [171, 458], "unset": [171, 263, 264, 265, 266, 269, 270, 271, 273, 274, 277, 278, 279, 281, 353, 354, 356, 358, 412, 419, 422, 425, 426, 452, 465, 467, 477, 478, 516, 519, 520, 530, 531, 540, 541, 562, 569, 570, 645, 648, 649, 650, 662, 684, 685, 686, 687, 688, 699, 701, 702, 703, 704, 705, 706, 707, 715, 716, 724, 725, 726, 727, 728, 777, 780, 799, 835, 878], "typeerror": [171, 176, 769, 878], "err": [171, 203, 343], "nonetyp": 171, "unsur": [171, 202, 837], "fallback": [171, 263, 264, 477, 478, 775, 798, 859, 878], "missing_config_kei": 171, "mne_browse_raw_s": 171, "979166666666666": 171, "mne_datasets_brainstorm_path": 171, "mne_datasets_eegbci_path": [171, 379, 384], "mne_datasets_epilepsy_ecog_path": [171, 381], "mne_datasets_erp_core_path": [171, 382], "mne_datasets_fieldtrip_cmc_path": 171, "mne_datasets_fnirs_motor_path": [171, 389], "mne_datasets_hf_sef_path": [171, 391], "mne_datasets_kiloword_path": [171, 392], "mne_datasets_limo_path": [171, 393], "mne_datasets_misc_path": [171, 394], "mne_datasets_mtrf_path": [171, 395], "mne_datasets_multimodal_path": [171, 396], "mne_datasets_opm_path": 171, "mne_datasets_phantom_4dbti_path": [171, 398], "mne_datasets_refmeg_noise_path": [171, 399], "mne_datasets_sample_path": [171, 384, 400], "mne_datasets_somato_path": [171, 403], "mne_datasets_spm_face_path": 171, "mne_datasets_ssvep_path": [171, 405], "mne_datasets_testing_path": 171, "mne_datasets_ucl_opm_auditory_path": [171, 406], "mne_logging_level": [171, 644], "mne_browser_them": [171, 263, 264, 477, 478, 557, 775, 792, 798, 878], "mne_browser_overview_mod": [171, 263, 264, 477, 478, 557, 775, 792, 798], "hidden": [171, 172, 263, 264, 477, 478, 557, 745, 775, 792, 798, 878], "mne_browser_backend": [171, 263, 264, 477, 478, 557, 775, 792, 798, 878], "mne_3d_option_multi_sampl": [171, 835, 878], "mne_3d_option_them": [171, 745, 878], "mne_browser_precomput": [171, 263, 264, 477, 478, 557, 775, 792, 798], "mne_3d_option_antialia": [171, 811, 835, 878], "mne_3d_option_depth_peel": [171, 811], "mne_3d_option_smooth_shad": [171, 754, 811], "mne_browser_use_opengl": [171, 263, 264, 477, 478, 557, 775, 792, 798, 878], "mne_cache_dir": 171, "mne_coreg_advanced_rend": 171, "mne_coreg_copy_annot": 171, "mne_coreg_fullscreen": [171, 468], "mne_coreg_guess_mri_subject": 171, "mne_coreg_head_high_r": [171, 468], "mne_coreg_head_opac": [171, 468], "mne_coreg_head_insid": 171, "mne_coreg_interact": 171, "mne_coreg_mark_insid": 171, "mne_coreg_prepare_bem": 171, "mne_coreg_orient_to_surfac": 171, "mne_coreg_scale_label": 171, "mne_coreg_scale_by_dist": 171, "mne_coreg_scene_scal": 171, "mne_coreg_window_height": 171, "mne_coreg_window_width": [171, 468], "mne_coreg_subjects_dir": 171, "mne_cuda_devic": [171, 878], "mne_cuda_ignore_precis": 171, "mne_datasets_megsim_path": 171, "mne_datasets_spm_face_datasets_test": 171, "mne_datasets_visual_92_categories_path": [171, 407], "mne_force_seri": 171, "mne_kit2fiff_stim_channel": 171, "mne_kit2fiff_stim_channel_cod": 171, "mne_kit2fiff_stim_channel_slop": 171, "mne_kit2fiff_stim_channel_threshold": 171, "mne_memmap_min_s": 171, "mne_repr_html": [171, 878], "mne_skip_ftp_test": 171, "mne_skip_network_test": 171, "mne_skip_testing_dataset_test": 171, "mne_tqdm": [171, 878], "mne_use_numba": 171, "misspel": 171, "mnee_use_cuudaa": 171, "intro": [171, 172, 240], "50_configure_mn": [171, 174], "runtimewarn": [171, 742], "unrecogn": [171, 263, 264, 265, 266, 268, 477, 478, 878], "concern": [171, 203, 225, 496, 576, 610, 614], "userprofil": [171, 458], "linux": [171, 836, 837, 838, 840, 842, 843, 845, 878], "maco": [171, 837, 838, 840, 841, 842, 878], "get_config_path": [171, 868, 878], "home_dir": [171, 457, 458, 641], "use_env": [171, 457], "set_env": [171, 641, 878], "python_env": [171, 204], "minimal_cmd": 171, "usr": [171, 843, 848], "sbin": 171, "statement": [171, 172, 225, 643, 843], "fresh": 171, "me": [171, 692], "worrisom": 171, "set_log_level": [171, 643, 743, 868], "temporarili": [171, 205, 206, 263, 264, 265, 266, 375, 411, 447, 477, 478, 557, 775, 792, 798], "kit_data_path": 171, "abspath": 171, "use_log_level": [171, 238, 868], "496": [171, 208, 230, 276], "meg160": 171, "v2r004": 171, "160ch": 171, "jan24": 171, "eq1160c": 171, "dewar": 171, "fll": 171, "board": 171, "adc": [171, 189], "alloc": [171, 684, 685, 687, 688], "shorthand": 171, "whatev": [171, 207, 477, 478, 700, 837], "recent": [171, 201, 409, 836, 837, 853, 878], "hasn": [171, 569, 878], "sys_info": [171, 273, 835, 836, 857, 868, 878], "stdout": [171, 643, 696, 878], "platform": [171, 263, 264, 265, 266, 477, 478, 699, 701, 798, 836, 840, 845, 849, 866], "1030": 171, "aw": [171, 254], "x86_64": [171, 836, 843], "glibc2": [171, 836], "mar": 171, "gcc": [171, 836], "cpu": [171, 263, 264, 265, 266, 269, 270, 271, 273, 274, 277, 278, 279, 281, 353, 354, 356, 358, 412, 419, 421, 422, 425, 426, 452, 465, 467, 477, 478, 516, 519, 520, 530, 531, 540, 541, 557, 562, 569, 570, 585, 645, 648, 649, 650, 662, 684, 685, 686, 687, 688, 699, 701, 702, 703, 704, 705, 706, 707, 715, 716, 724, 725, 726, 727, 728, 775, 777, 780, 792, 798, 799, 835, 836], "gb": [171, 835, 836, 843], "dev83": 171, "g5ca0141f6": 171, "openbla": [171, 836, 857], "thread": [171, 235, 263, 264, 477, 478, 557, 775, 792, 798, 860], "agg": 171, "pooch": [171, 384, 878], "jinja2": [171, 878], "numba": [171, 836, 878], "openmeeg": [171, 515, 520, 878], "unavail": [171, 878], "cupi": [171, 263, 264, 265, 266, 411, 415, 420, 447, 448, 449, 477, 478, 835, 836, 878], "opengl": [171, 255, 263, 264, 468, 477, 478, 557, 775, 792, 798, 835, 843, 849], "mesa": [171, 468, 811, 878], "llvmpipe": [171, 835], "llvm": [171, 835], "basecomm": 171, "__del__": 171, "0x7f9c458f00d0": 171, "traceback": [171, 836], "lib": [171, 204, 835, 843], "python3": [171, 204, 836, 878], "site": [171, 191, 203, 204, 209, 243, 268, 319, 477, 568, 576, 585, 837], "comm": 171, "base_comm": 171, "_close": 171, "attributeerror": 171, "vtk": [171, 408, 745, 760, 835, 836, 878], "qtpy": [171, 836], "pyqt6": 171, "ipympl": 171, "pyqtgraph": [171, 263, 264, 477, 478, 557, 775, 792, 798, 878], "browser": [171, 172, 191, 214, 255, 263, 264, 273, 477, 478, 545, 557, 753, 757, 775, 792, 798, 814, 817, 837, 878], "dev0": [171, 836], "ipyvtklink": [171, 866], "ecosystem": [171, 838, 841, 844], "0dev0": 171, "icalabel": [171, 878], "478": [171, 174, 208], "shell": [172, 183, 209, 243, 255, 514, 521, 836, 837, 842, 843, 844, 857, 860], "deploi": [172, 857], "tempfil": 172, "ndimag": 172, "raw_tsss": [172, 255, 477, 478, 497], "_eeg": [172, 255, 477, 478, 878], "_ieeg": [172, 255, 477, 478, 878], "underscor": [172, 200, 204, 214, 557], "parse_fold": [172, 273, 878], "add_raw": [172, 273, 878], "slider": [172, 265, 266, 273, 784, 835, 878], "scrub": 172, "report_raw": 172, "jqueri": 172, "bundl": [172, 840, 842, 878], "tableexport": 172, "highlightj": 172, "atom": 172, "meaning": [172, 215, 272, 639, 837], "events_path": 172, "report_ev": 172, "add_epoch": [172, 273, 878], "fly": [172, 227, 263, 264, 477, 478, 730, 743, 775, 798, 878], "make_metadata": [172, 868, 878], "report_epoch": 172, "add_evok": [172, 273], "n_time_point": [172, 273], "evoked_path": 172, "cov_path": 172, "evokeds_subset": 172, "report_evok": 172, "add_covari": [172, 273], "report_cov": 172, "ecg_proj_path": 172, "eog_proj_path": 172, "sample_audvis_eog": [172, 857], "report_proj": 172, "add_ica": [172, 273, 878], "inst": [172, 204, 255, 257, 261, 262, 263, 264, 265, 266, 268, 270, 271, 273, 274, 277, 278, 279, 280, 311, 313, 357, 409, 410, 412, 413, 415, 416, 417, 418, 419, 421, 422, 423, 468, 477, 478, 556, 557, 558, 565, 566, 575, 579, 584, 600, 639, 642, 651, 682, 697, 699, 700, 701, 727, 728, 729, 788, 789, 790, 792, 799, 878], "ecg_evok": [172, 204, 206, 273], "eog_evok": [172, 203, 204, 206, 273], "artifactu": [172, 198, 201, 204, 243, 557], "find_bads_ecg": [172, 204, 273, 557, 878], "ecg_scor": [172, 204, 273], "liber": 172, "eog_compon": 172, "report_ica": 172, "add_bem": [172, 273, 878], "th": [172, 263, 557, 654, 657, 659, 700, 857, 860], "report_mri_and_bem": 172, "add_tran": [172, 273, 878], "opaqu": [172, 273, 468, 878], "trans_path": 172, "report_coregistr": 172, "add_forward": [172, 273, 745, 878], "fwd_path": 172, "report_forward_sol": 172, "add_inverse_oper": [172, 273], "inverse_op_path": 172, "report_inverse_op": 172, "add_stc": [172, 273, 878], "report_inverse_sol": 172, "01632618": 172, "06303297": 172, "63565434": 172, "add_cod": [172, 273], "syntax": [172, 273, 837, 860], "snippet": [172, 233, 273, 857], "liter": [172, 273, 860], "mne_init_py_path": 172, "__init__": [172, 546], "mne_init_py_cont": 172, "read_text": 172, "utf": [172, 493, 603, 609, 878], "report_cod": 172, "add_figur": [172, 273, 878], "caption": [172, 273, 878], "num": [172, 239], "sky": 172, "image_format": [172, 255, 273, 878], "report_custom_figur": 172, "fig_1": 172, "ax_1": 172, "ax_2": 172, "report_custom_figure_sect": 172, "intuit": [172, 195, 240, 410, 425, 655, 656], "logo": [172, 878], "mne_logo_path": 172, "mne_icon": 172, "fig_arrai": 172, "rotation_angl": 172, "fig_array_rot": 172, "mneqtbrows": [172, 263, 264, 477, 478, 557, 775, 792, 798], "fun": [172, 263, 264, 265, 266, 477, 478], "768": [172, 183, 195], "862": [172, 230], "9176882624364033": 172, "photo": 172, "sketch": 172, "add_imag": [172, 273, 878], "jpeg": [172, 273], "gif": [172, 273, 745, 878], "svg": [172, 255, 273, 878], "report_custom_imag": 172, "add_": 172, "dropdown": [172, 878], "hide": [172, 216, 238, 878], "checkbox": [172, 878], "report_tag": 172, "hdf5": [172, 270, 271, 273, 277, 279, 287, 300, 546, 556, 595, 625, 697, 698, 699, 700, 701, 717, 718, 719, 730, 820, 821, 841, 857, 878], "report_parti": 172, "amend": [172, 331], "report_from_disk": 172, "open_report": [172, 273, 868, 878], "report_fin": 172, "invok": [172, 255, 758, 843, 878], "barebon": [172, 255], "render_bem": [172, 273, 878], "raw_butterfli": [172, 273], "report_parse_folder_bas": 172, "raw_psd": [172, 273, 878], "refin": [172, 275, 319, 359], "report_parse_folder_raw_psd_proj": 172, "mri_decim": [172, 255, 273], "report_parse_folder_mri_bem": 172, "temporarydirectori": 172, "n_time_points_evok": [172, 273], "report_parse_folder_evok": 172, "tmp": 172, "tmp89dqc_g7": 172, "info_fnam": [172, 273], "report_parse_folder_cov": 172, "add_html": [172, 273, 878], "remind": [172, 557, 837], "my_html": 172, "ol": [172, 682, 866, 878], "manifest": [172, 202, 203, 204, 206, 833], "n1": 172, "report_add_html": 172, "70_report": [172, 174], "724": [174, 195, 230], "auto_tutorials_intro": 174, "volsourceestim": [175, 180, 181, 270, 271, 274, 275, 277, 279, 288, 290, 291, 292, 293, 294, 295, 512, 519, 524, 525, 526, 527, 528, 530, 540, 625, 638, 833, 868, 878], "mixedsourceestim": [175, 271, 274, 277, 278, 279, 625, 833, 868, 878], "carri": [175, 198, 204, 240, 485, 678], "belong": [175, 268, 269, 273, 619, 674, 744, 745, 863], "shape_lh": 175, "is_equ": 175, "suspect": 175, "nth": [175, 204, 258, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 573, 574, 697, 700], "peak_vertex": 175, "vert_as_index": [175, 180, 270, 271, 274, 277, 278, 279], "peak_vertex_surf": 175, "peak_valu": 175, "logic": [175, 220, 227, 230, 263, 264, 265, 266, 268, 468, 477, 478, 479, 557, 576, 863, 878], "lh_coordin": 175, "rh_coordin": 175, "10_stc_class": [175, 187], "load_mni152_templ": 176, "fname_av": 176, "fname_surf_lh": 176, "n100m": 176, "evoked_ful": 176, "posixpath": [176, 181], "7283": 176, "6941": 176, "5323": 176, "2659": 176, "0605": 176, "7276": 176, "4483": 176, "mni_po": 176, "to_mni": [176, 261, 878], "mri_po": 176, "to_mri": [176, 261, 878], "best_dip_idx": 176, "to_volume_label": [176, 261, 878], "fig_t1": 176, "cut_coord": 176, "fig_templ": 176, "pred_evok": 176, "inf": [176, 191, 198, 221, 263, 264, 265, 266, 281, 414, 474, 475, 477, 478, 508, 570, 697, 699, 701, 702, 704, 705, 707, 715, 716, 753, 799, 805, 878], "best_idx": 176, "best_tim": 176, "conf": [176, 261, 837], "plot_param": 176, "0f": [176, 265, 266, 780], "20_dipole_fit": [176, 187], "userwarn": 176, "dip_fix": 176, "7509": 176, "6603": 176, "jukka": [176, 178, 243, 878], "sarva": [176, 243], "electromagnet": [176, 178, 198, 206, 209, 222, 243, 296, 297, 430, 524, 568, 585, 833, 860], "biomagnet": [176, 243], "200m": 177, "500m": 177, "fig_cov": [177, 260, 770], "fig_spectra": 177, "1705": [177, 180], "1468": 177, "1574": 177, "608": [177, 195, 230], "write_inverse_oper": [177, 538, 868, 878], "6837": 177, "16026e": 177, "set_color": [177, 183], "98df81": [177, 183], "vertno_max": 177, "time_max": [177, 178], "30_mne_dspm_loreta": [177, 187], "left_auditori": 178, "dip_po": 178, "dip_ori": 178, "dip_len": 178, "dip_tim": 178, "rgb": [178, 270, 271, 274, 277, 278, 279, 462, 467, 745, 761, 764, 803, 808, 809], "actual_amp": [178, 183, 185], "actual_gof": [178, 183, 185], "outward": [178, 261, 271, 277, 279, 364, 773, 857], "moment": [178, 180, 220, 268, 271, 277, 279, 317, 341, 343, 344, 345, 430, 567, 568, 576, 585, 808], "06165525": 178, "70033915": 178, "34794621": 178, "inward": [178, 857], "curvatur": [178, 270, 271, 274, 277, 278, 279, 695, 745, 803, 808, 863, 878], "collaps": [178, 273, 431], "brain_mag": 178, "overlay_alpha": [178, 271, 277, 279, 808], "2188": 178, "44205e": 178, "79973942": 178, "38378769": 178, "8347911": 178, "somewhat": [178, 198], "strai": 178, "unrestrict": 178, "brain_loos": 178, "03844879": 178, "68532258": 178, "12541436": 178, "risto": [178, 205, 206, 243, 524, 860], "ilmoniemi": [178, 205, 206, 243, 524, 860], "knuutila": [178, 243], "olli": [178, 243], "lounasmaa": [178, 243], "noninvas": [178, 243], "modern": [178, 188, 243, 385, 835, 860, 862, 878], "revmodphi": [178, 243], "fa": [178, 243, 535, 654, 659], "hsuan": [178, 243, 535, 654, 659], "lin": [178, 194, 243, 415, 535, 654, 659], "belliveau": [178, 243, 524, 535, 654, 659], "20155": [178, 243], "35_dipole_orient": [178, 187], "variant": [179, 189, 462, 568, 835, 878], "1498464098687909": [179, 181], "037797": 179, "65922": 179, "72259e": 179, "28047949e": 179, "72734061e": 179, "97200565e": 179, "56295843": 179, "27742998": 179, "00597191": 179, "65359441": 179, "22223215": 179, "63030546": 179, "eigen": [179, 269, 674], "34003429e": 179, "79067976e": 179, "93243713e": 179, "61893": 179, "8713e": 179, "81398589e": 179, "00293217e": 179, "59049572e": 179, "79225614": 179, "45181117": 179, "88420763": 179, "65906465": 179, "114468": 179, "42240231": 179, "41240751e": 179, "15338772e": 179, "80101709e": 179, "40_mne_fixed_fre": [179, 187], "britta": [180, 243, 865, 878], "westner": [180, 243, 865, 878], "wstnr": 180, "apply_lcmv": [180, 288, 290, 293, 294, 295, 868, 878], "linearli": [180, 205, 209, 243, 292, 293, 294, 295, 296, 297, 833, 857], "ingredi": 180, "valuabl": [180, 860], "gaug": 180, "incorpor": [180, 225, 230, 319, 433, 442, 477, 478, 562, 837, 860, 866, 878], "stabl": [180, 201, 203, 243, 258, 296, 297, 340, 448, 476, 477, 478, 545, 557, 567, 754, 837, 843, 857], "rule": [180, 198, 202, 243, 557, 860], "thumb": [180, 198, 202, 557, 854], "advic": [180, 837], "defici": [180, 368, 557, 860, 878], "misrepres": 180, "3757": [180, 181], "inher": [180, 189, 230, 426], "somehow": [180, 182, 204], "nai": [180, 296, 297, 878], "switch": [180, 183, 184, 201, 208, 222, 243, 255, 269, 274, 348, 477, 478, 835, 837, 843, 863, 878], "invari": [180, 296, 297], "filters_vec": 180, "apply_lcmv_raw": [180, 292, 293, 294, 868, 878], "apply_lcmv_epoch": [180, 270, 271, 274, 277, 278, 279, 292, 293, 295, 868, 878], "087": 180, "stat_map": [180, 278, 279, 809], "5184": 180, "glass_brain": [180, 181, 278, 279, 809, 878], "022485": [180, 181], "008449": [180, 181], "036217": [180, 181], "071071": [180, 181], "914866": [180, 181], "406098": [180, 181], "008756": [180, 181], "433700": [180, 181], "028119": [180, 181], "plotter": [180, 263, 264, 557, 745, 747, 775, 792, 855, 878], "peak_vox": 180, "ori_label": 180, "sourcemorph": [180, 278, 279, 359, 626, 809, 841, 868, 878], "fname_fs_src": 180, "stc_f": [180, 181], "085": 180, "17352": 180, "barri": [180, 201, 203, 204, 243, 296, 297, 556, 571], "veen": [180, 243, 296, 297], "wim": [180, 243, 296, 297], "drongelen": [180, 243, 296, 297], "mosh": [180, 243, 296, 297], "yuchtman": [180, 243, 296, 297], "akifumi": [180, 243, 296, 297], "suzuki": [180, 243, 296, 297], "867": [180, 243, 296, 297], "623056": [180, 243, 296, 297], "brook": [180, 243, 852, 878], "jiri": [180, 243], "vrba": [180, 243], "clair": [180, 243, 878], "stevenson": [180, 243], "gareth": [180, 211, 243, 854], "barn": [180, 211, 243, 854], "arjan": [180, 243], "hillebrand": [180, 243], "morri": [180, 243], "optimis": [180, 243], "1788": [180, 243], "sarang": [180, 243, 866], "dalal": [180, 243, 866], "vladimir": [180, 225, 243, 690, 691], "litvak": [180, 225, 243, 690, 691], "oostenveld": [180, 230, 243, 684, 685, 687, 688, 878], "mathij": [180, 243], "schoffelen": [180, 243], "118789": [180, 243], "50_beamformer_lcmv": [180, 187], "flatmap": [181, 270, 274, 278, 745, 803, 878], "mpl_fig": 181, "94880328959697": 181, "84640986879091": 181, "649601096532322": 181, "67635542": 181, "11717401": 181, "19136023": 181, "atlas": [181, 646, 878], "get_volume_labels_from_aseg": [181, 868, 878], "label_tc": [181, 270, 271, 274, 277, 278, 279, 443], "lidx": 181, "arrowstyl": [181, 194], "set_vis": 181, "grain": [181, 878], "loci": 181, "stc_back": 181, "labels_to_stc": [181, 868, 878], "6210": 181, "69834054": 181, "98871778": 181, "62206532": 181, "70708526": 181, "36619556": 181, "64056812": 181, "6864": 181, "60_visualize_stc": [181, 187], "read_custom_montag": [182, 190, 263, 264, 265, 266, 268, 327, 477, 478, 868, 878], "reconstrct": 182, "elc": [182, 329, 878], "synthes": [182, 188, 302, 306, 501, 577, 878], "fname_t1_electrod": 182, "sample_eeg_mri": 182, "t1_electrod": 182, "fname_mon": 182, "sample_mri_montag": 182, "ras_mni_t": [182, 737], "read_ras_mni_t": [182, 868], "mni_affin": 182, "img_mni": 182, "hot_black_bon": 182, "black_bg": 182, "resampling_interpol": 182, "pos_vox": 182, "fname_t1": 182, "vox2mri_t": 182, "pos_mri": [182, 261], "tkmedit": [182, 843, 860], "dig_montag": 182, "head_siz": [182, 327, 329], "99930957": 182, "00998471": 182, "03578661": 182, "00316747": 182, "01275917": 182, "81240435": 182, "58295487": 182, "00685511": 182, "03489383": 182, "58300899": 182, "81171605": 182, "02888406": 182, "812404": 182, "582955": 182, "583009": 182, "3252": 182, "3250": 182, "1755": 182, "3223": 182, "4097": [182, 201], "1679": [182, 194], "8193": 182, "040598": 182, "157084": 182, "86184": 182, "24877e": 182, "17591891": 182, "939572": 182, "86348066": 182, "70_eeg_mri_coord": [182, 187], "fetch_phantom": [183, 429, 868, 878], "planor": 183, "meg1933": 183, "meg2421": 183, "1792": 183, "3840": 183, "7936": 183, "bmax": [183, 255], "ring": [183, 201, 444, 446, 878], "otaniemi": [183, 388, 429, 854, 878], "phantom_otaniemi": 183, "00365867": [183, 184, 185], "944092": [183, 184, 185], "138723": [183, 184, 185], "665896": [183, 184, 185], "684544": [183, 184, 185], "132233": [183, 184, 185], "0128974": [183, 184, 185], "plot_evoked_whit": [183, 265, 266, 779, 868, 878], "t_peak": 183, "32640": 183, "32639": 183, "55367811e": 183, "90213143e": 183, "55347147e": 183, "28605719e": 183, "96728167e": 183, "86739464e": 183, "38610872e": 183, "82304534e": 183, "48308374e": 183, "31818228e": 183, "16854987e": 183, "00130181e": 183, "01608756e": 183, "05724640e": 183, "66791928e": 183, "36603176e": 183, "50599819e": 183, "82644670e": 183, "99846050e": 183, "93593540e": 183, "60183041e": 183, "976295": 183, "211976": 183, "043756": 183, "206488": 183, "972764": 183, "105326": 183, "064891": 183, "093794": 183, "993475": 183, "actual_ori": 183, "rad2deg": 183, "arcco": 183, "dip_tru": [183, 185], "80_brainstorm_phantom_elekta": [183, 187], "phantomctf": 184, "bst_phantom_ctf": 184, "phantom_200ua_20150709_01": 184, "dip_freq": 184, "phantom_20ua_20150603_03": 184, "erm_path": 184, "emptyroom_20150709_01": 184, "24000": 184, "23999": 184, "hdac006": 184, "zeros_lik": [184, 194], "ones_lik": [184, 227, 228], "tsss": [184, 265, 268, 477, 497, 585, 593, 615, 878], "apply_gradient_compens": [184, 188, 477, 478, 860, 878], "un": [184, 202, 205, 209, 217, 477, 478, 533, 534, 798, 860], "mf_kwarg": 184, "st_durat": [184, 209, 576, 585], "021666666666666667": 184, "catch_warn": 184, "simplefilt": 184, "60000": 184, "99596855e": 184, "57828787e": 184, "09548814e": 184, "44821628e": 184, "22550465e": 184, "07831245e": 184, "16519699e": 184, "85599860e": 184, "24819011e": 184, "19149506e": 184, "49201625e": 184, "90435099e": 184, "37114004e": 184, "52368814e": 184, "95491435e": 184, "09260032e": 184, "84849095e": 184, "02461913e": 184, "40860739e": 184, "15627312e": 184, "58591259e": 184, "999939": 184, "002039": 184, "010868": 184, "001115": 184, "959234": 184, "282612": 184, "011001": 184, "282607": 184, "959173": 184, "expected_po": 184, "array_str": 184, "576": [184, 187, 230], "85_brainstorm_phantom_ctf": [184, 187], "4dbti": 185, "badier": [185, 243, 657], "marseil": [185, 854], "franc": 185, "phantom_4dbti": [185, 854, 868, 878], "rfhp1": 185, "0hz": 185, "a173": 185, "a213": 185, "a232": 185, "4350": 185, "not_and": [185, 256, 450, 612, 878], "hs_file": [185, 188, 488], "13599": 185, "20053968578577042": 185, "6576": 185, "6575": 185, "50691838e": 185, "61763336e": 185, "91409625e": 185, "91576159e": 185, "16898444e": 185, "75585208e": 185, "47442194e": 185, "45272203e": 185, "55529894e": 185, "46448717e": 185, "88484744e": 185, "05130802e": 185, "14443569e": 185, "70955369e": 185, "39503671e": 185, "16681391e": 185, "65491197e": 185, "24338008e": 185, "53281664e": 185, "47448228e": 185, "78257781e": 185, "975564": 185, "033891": 185, "217085": 185, "044586": 185, "998011": 185, "044560": 185, "215143": 185, "053150": 185, "975135": 185, "43530566e": 185, "00499851e": 185, "47056513e": 185, "49717001e": 185, "01651220e": 185, "39837298e": 185, "09320996e": 185, "53068976e": 185, "44272962e": 185, "07218608e": 185, "57916869e": 185, "24522939e": 185, "45459681e": 185, "19250060e": 185, "30544307e": 185, "26518629e": 185, "97497347e": 185, "82472005e": 185, "37787240e": 185, "96791371e": 185, "70423989e": 185, "975554": 185, "034041": 185, "217109": 185, "044503": 185, "998063": 185, "043482": 185, "215208": 185, "052081": 185, "975178": 185, "58999814e": 185, "84421337e": 185, "28166457e": 185, "67818745e": 185, "17428979e": 185, "76211498e": 185, "09542089e": 185, "22401648e": 185, "04141267e": 185, "15865669e": 185, "76599754e": 185, "17446488e": 185, "49708010e": 185, "60822410e": 185, "73060305e": 185, "05814038e": 185, "01071067e": 185, "20173942e": 185, "25861185e": 185, "85502070e": 185, "47521229e": 185, "975577": 185, "033678": 185, "217061": 185, "044611": 185, "997960": 185, "045666": 185, "215080": 185, "054233": 185, "975089": 185, "40101009e": 185, "10513936e": 185, "52303974e": 185, "27457778e": 185, "38233857e": 185, "06793751e": 185, "00477278e": 185, "15792686e": 185, "30206685e": 185, "40306943e": 185, "32057779e": 185, "22353020e": 185, "11884928e": 185, "17314181e": 185, "64256593e": 185, "23243102e": 185, "97110034e": 185, "94566869e": 185, "63267153e": 185, "08360546e": 185, "98210291e": 185, "975557": 185, "033946": 185, "217110": 185, "044391": 185, "998071": 185, "043409": 185, "215218": 185, "051986": 185, "975181": 185, "44409481": 185, "37628851": 185, "1860296": 185, "17616473": 185, "90_phantom_4dbti": [185, 187], "auto_tutorials_invers": 187, "505": [187, 230], "maxshield": [188, 255, 265, 268, 477, 497, 585, 615, 863, 878], "allow_maxshield": [188, 208, 209, 265, 477, 497, 615], "ucl": [188, 211, 243, 353, 878], "read_raw_fil": [188, 211, 483, 860, 868, 878], "mandatori": [188, 296, 297, 319, 477, 557, 860], "rfdc": [188, 255], "realiz": [188, 201], "carefulli": [188, 199, 201, 854], "read_dig_polhemus_isotrak": [188, 311, 324, 327, 330, 331, 332, 333, 334, 335, 338, 860, 868, 878], "technic": [188, 238, 243, 263, 264, 265, 266, 477, 478, 524, 699, 701, 709, 715, 853, 859, 860], "disturb": [188, 853, 860], "mainli": [188, 240, 837, 860], "nicknam": 188, "n_1": 188, "n_2": 188, "n_3": 188, "x_1": [188, 860], "x_2": [188, 860], "x_3": 188, "denot": [188, 195, 216, 271, 277, 279, 583, 654, 657, 659, 678, 680, 698, 833, 860], "x_": [188, 195, 860], "m_": 188, "bmatrix": [188, 860], "c_": [188, 225, 860], "standardize_nam": [188, 501, 611, 878], "nx3": [188, 464], "mrk": [188, 255, 480, 501, 611, 878], "elp": [188, 255, 329, 336, 501, 611, 613, 860, 878], "onward": [188, 647], "miscellan": [188, 214, 263, 264, 265, 266, 477, 478, 554, 697, 699, 700, 701, 860, 863], "eight": [188, 860, 878], "endian": [188, 878], "stimthresh": [188, 255, 501], "sum_": [188, 201, 657, 860], "t_p": 188, "d_p": 188, "bigg": 188, "leq": [188, 225], "read_raw_fieldtrip": [188, 483, 860, 868, 878], "read_epochs_fieldtrip": [188, 860, 868, 878], "read_evoked_fieldtrip": [188, 860, 868, 878], "intent": [188, 855], "original_data": 188, "read_raw_fiff": 188, "original_info": 188, "data_from_ft": 188, "evoked_data": [188, 227], "untest": 188, "cnt": [188, 438, 489, 603, 860, 878], "egi": [188, 329, 332, 494, 860, 878], "calibr": [188, 209, 268, 430, 567, 568, 576, 585, 596, 601, 863, 878], "eximia": [188, 495, 860, 878], "3rd": [188, 198, 270, 271, 274, 277, 278, 279, 683], "parti": 188, "librari": [188, 747, 835, 837, 843, 844, 849, 855, 857, 878], "abund": 188, "electrophysiolog": [188, 201, 243, 833], "10_reading_meg_data": [188, 193], "meta": [189, 220, 263, 264, 265, 266, 477, 478, 479, 866], "ini": 189, "host": [189, 859, 878], "pybv": [189, 442, 477, 478], "mnelab": [189, 844], "pyedflib": 189, "read_raw_bdf": [189, 483, 492, 499, 860, 868, 878], "amplifi": [189, 203, 207, 505, 849, 878], "mastoid": [189, 207, 263, 264, 265, 266, 477, 478, 642], "byte": [189, 263, 264, 477, 478, 508, 753, 863, 878], "read_raw_gdf": [189, 483, 485, 492, 860, 868, 878], "overcom": 189, "releas": [189, 837, 845, 857, 859, 878], "gender": [189, 243, 401], "read_raw_cnt": [189, 483, 860, 868, 878], "danger": [189, 268], "x_coord": 189, "y_coord": 189, "electloc": 189, "encourag": [189, 222, 848, 859, 878], "read_raw_egi": [189, 483, 860, 868, 878], "netstat": [189, 494, 878], "read_raw_nicolet": [189, 483, 860, 868, 878], "nexstim": 189, "read_raw_eximia": [189, 483, 860, 868], "read_raw_persyst": [189, 860, 868, 878], "nk": 189, "read_raw_nihon": [189, 868, 878], "11d": 189, "cmt": 189, "cn2": 189, "histori": [189, 268, 441, 833, 863, 878], "successfulli": [189, 215, 837, 863], "neither": [189, 466, 477, 478, 845], "nor": [189, 207, 466, 477, 478, 845, 859], "20_reading_eeg_data": [189, 193], "emitt": 190, "transmitt": 190, "oxyhaemoglobin": [190, 210], "Near": 190, "commun": [190, 194, 195, 222, 243, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 415, 477, 478, 697, 700, 726, 729, 837, 841, 856, 866], "effort": [190, 485, 837, 858, 866], "sfnir": 190, "gowerlab": [190, 878], "cortivis": 190, "read_raw_snirf": [190, 868, 878], "provis": 190, "haemoglobin": [190, 587, 878], "optode_fram": [190, 507], "vendor": [190, 860], "icbm": 190, "2009b": 190, "nirstar": [190, 505], "aurora": [190, 505, 878], "nirscout": [190, 505], "nirsport": [190, 505, 878], "read_raw_hitachi": [190, 868, 878], "read_raw_boxi": [190, 483, 860, 868, 878], "iss": [190, 486, 878], "paren": 190, "unmodul": 190, "unpars": 190, "organis": 190, "digaux": 190, "port": [190, 843, 849], "discourag": [190, 263, 264, 265, 266, 477, 478, 699, 701, 777, 857, 878], "standardis": [190, 878], "to_csv": [190, 214], "_d": 190, "wavelength": [190, 198], "s1_d1": [190, 210], "s2_d1": 190, "s3_d1": 190, "s4_d1": 190, "s5_d2": 190, "s6_d2": 190, "s7_d2": 190, "s8_d2": 190, "assist": [190, 249, 835, 843, 860], "ficidu": 190, "678": [190, 193], "30_reading_fnirs_data": [190, 193], "beep": 191, "deviant": [191, 201], "finger": [191, 854], "bug": [191, 256, 450, 468, 696, 745, 837, 856, 858, 859], "tracker": [191, 837, 857], "consumpt": [191, 265, 266, 426, 779, 878], "use_precomput": 191, "erm_fnam": 191, "s01_noise_20131218_01": 191, "demand": [191, 214, 426, 430, 476, 608, 860, 878], "n_times_run1": 191, "4800": 191, "unus": [191, 268, 276, 576, 878], "heog": [191, 489], "veog": [191, 489, 878], "favorit": [191, 837], "annotations_df": 191, "csv_fname": 191, "events_bad_0": 191, "concat": [191, 409], "saccades_ev": 191, "7625": 191, "142459": 191, "216954": 191, "345135": 191, "357687": 191, "409101": 191, "461110": 191, "479866": 191, "764914": 191, "798174": 191, "846880": 191, "858863": 191, "9256": 191, "14287": 191, "116432": 191, "134489": 191, "464527": 191, "494136": 191, "749288": 191, "788623": 191, "21179": 191, "72993": 191, "134527": 191, "196555": 191, "249894": 191, "343357": 191, "400771": 191, "450256": 191, "593101": 191, "733942": 191, "765939": 191, "789476": 191, "792852": 191, "833208": 191, "859869": 191, "862888": 191, "saccade_epoch": 191, "reject_by_annot": [191, 210, 216, 220, 263, 358, 477, 478, 517, 557, 573, 574, 577, 578, 701, 790, 799, 878], "projs_saccad": 191, "compute_proj_epoch": [191, 205, 206, 355, 356, 868, 878], "n_mag": [191, 206, 255, 354, 355, 356, 569, 570], "desc_prefix": [191, 354, 355], "projs_eog": 191, "compute_proj_eog": [191, 205, 206, 574, 578, 853, 868, 878], "1201": [191, 299], "spectra": [191, 220, 238, 243, 260, 263, 264, 265, 266, 414, 477, 478, 530, 531, 684, 699, 701, 704, 707, 715, 716, 770, 777, 799, 833], "doubl": [191, 201, 204, 240, 263, 264, 265, 266, 411, 420, 442, 445, 447, 448, 476, 477, 478, 498, 585, 837, 843, 860, 863, 878], "filter_length": [191, 201, 202, 206, 255, 263, 264, 265, 266, 411, 420, 445, 447, 448, 477, 478, 569, 570, 577, 578, 878], "sound": [191, 194, 195, 204, 243, 416, 726, 729], "uadc001": 191, "sound_data": 191, "min_diff": 191, "\u03bc": [191, 209, 418], "\u03c3": [191, 209, 418, 521], "mlo52": 191, "mrt51": 191, "mlo42": 191, "mlo43": 191, "epochs_standard": 191, "concatenate_epoch": [191, 868, 878], "epochs_devi": 191, "mlp52": 191, "evoked_std": 191, "evoked_dev": 191, "p50": 191, "paint": [191, 263, 264, 265, 266, 477, 478, 779, 799], "mmn": [191, 866], "emphasis": 191, "evoked_differ": 191, "ico4": [191, 637, 853], "8033": 191, "015871": 191, "10585e": 191, "09843": 191, "11765e": 191, "stc_standard": 191, "80289064": 191, "69025561": 191, "89954824": 191, "stc_deviant": 191, "12814542": 191, "29154719": 191, "6203076": 191, "stc_differ": 191, "96162575": 191, "78319301": 191, "94351171": 191, "60_ctf_bst_auditori": [191, 193], "auto_tutorials_io": 193, "timedelayingridg": [194, 415, 868, 878], "multivariate_norm": 194, "1337": 194, "path_audio": 194, "spectrogram": [194, 230, 240, 833, 866, 878], "n_decim": 194, "explicit": [194, 262, 357, 368, 369, 837, 863, 878], "delays_samp": 194, "delays_sec": 194, "5000": [194, 227], "meshgrid": [194, 205, 230], "swap": [194, 229, 235, 631, 860, 878], "swapax": [194, 229, 235], "gabor": 194, "means_high": 194, "means_low": 194, "2500": [194, 878], "gauss_high": 194, "gauss_low": 194, "autoscal": 194, "artifici": [194, 243, 494, 557, 854], "convolut": [194, 201, 240, 422, 540, 541, 703, 706, 722, 724, 725, 727, 728, 844, 878], "n_second": 194, "x_del": 194, "ix_delai": 194, "ndim": [194, 240], "elif": 194, "rollaxi": 194, "weights_sim": 194, "iep": 194, "noise_amp": 194, "x_plt": 194, "hstack": [194, 205], "y_plt": 194, "autocorrel": [194, 415, 421], "ix_best_alpha": 194, "best_mod": 194, "best_pr": 194, "iax": 194, "time_pr": 194, "3450": 194, "868": [194, 204, 228, 243, 571], "1049": 194, "1235": 194, "1854": 194, "2181": 194, "2510": 194, "485": [194, 208, 276], "565": [194, 230], "3178": 194, "19398": 194, "641": [194, 195, 230], "20019": 194, "969": [194, 230], "20177": 194, "1310": 194, "20474": 194, "20533": 194, "1990": [194, 243, 409], "20738": 194, "20825": 194, "2677": 194, "20943": 194, "3015": 194, "20966": 194, "3357": 194, "21015": 194, "20940": 194, "19873": 194, "20606": 194, "20888": 194, "20956": 194, "1672": 194, "20883": 194, "20987": 194, "2358": 194, "21059": 194, "21001": 194, "2999": 194, "20779": 194, "3343": 194, "20866": 194, "20842": 194, "21405": 194, "21485": 194, "21297": 194, "1367": 194, "21315": 194, "21348": 194, "2055": 194, "21371": 194, "2402": 194, "21418": 194, "2714": 194, "21128": 194, "3003": 194, "20701": 194, "3264": 194, "20144": 194, "19755": 194, "21200": 194, "21465": 194, "21430": 194, "1369": 194, "21300": 194, "1695": [194, 208], "21095": 194, "20926": 194, "2371": 194, "21104": 194, "2707": 194, "21086": 194, "3019": 194, "20869": 194, "3364": 194, "20948": 194, "21138": 194, "684": [194, 226, 230], "21330": 194, "21327": 194, "1355": 194, "21117": 194, "20920": 194, "21005": 194, "2360": 194, "21030": 194, "2721": 194, "21251": 194, "3068": 194, "21309": 194, "3410": 194, "21316": 194, "21259": 194, "20403": 194, "675": [194, 230], "21071": 194, "21252": 194, "21423": 194, "1706": 194, "21293": 194, "21384": 194, "2398": 194, "21390": 194, "2753": 194, "21508": 194, "3102": 194, "21548": 194, "21567": 194, "i_alpha": 194, "ddot": 194, "tikhonov": 194, "trf": [194, 229], "insensit": [194, 263, 264, 438, 485, 492, 499, 560, 700, 878], "whilst": [194, 211], "mse": 194, "scores_lap": 194, "models_lap": 194, "reg_typ": [194, 421], "ix_best_alpha_lap": 194, "21942": 194, "22555": 194, "1092": 194, "22713": 194, "1455": 194, "22691": 194, "22884": 194, "2206": 194, "22957": 194, "2575": 194, "22972": 194, "2950": 194, "23036": 194, "3326": 194, "23095": 194, "23016": 194, "22300": 194, "22475": 194, "1091": [194, 208], "22723": 194, "1464": 194, "22877": 194, "22929": 194, "2204": 194, "22959": 194, "2573": 194, "22970": 194, "23049": 194, "3322": 194, "23070": 194, "23021": 194, "22967": 194, "23214": 194, "1108": 194, "23043": 194, "23033": 194, "1847": 194, "23038": 194, "2219": 194, "23068": 194, "2592": 194, "23107": 194, "2966": 194, "23144": 194, "23195": 194, "23147": 194, "22946": 194, "741": [194, 195, 230], "23105": 194, "1479": 194, "23071": 194, "1848": 194, "23060": 194, "2220": 194, "23092": 194, "2593": 194, "23126": 194, "2969": [194, 334], "23178": 194, "3344": 194, "23213": 194, "23176": 194, "23210": 194, "23115": 194, "23127": 194, "1487": [194, 243, 853], "23203": 194, "23174": 194, "2226": 194, "23151": 194, "2601": 194, "23192": 194, "2964": 194, "23111": 194, "3335": 194, "23120": 194, "23109": 194, "22646": 194, "727": [194, 195, 208, 230], "22689": 194, "1098": [194, 243, 524, 860], "22853": 194, "22854": 194, "22892": 194, "2198": 194, "22871": 194, "22955": 194, "2949": 194, "23034": 194, "3317": 194, "23028": 194, "22984": 194, "22583": 194, "22560": 194, "1084": 194, "22553": 194, "1448": 194, "22600": 194, "22611": 194, "2172": 194, "22596": 194, "2540": 194, "22658": 194, "2916": 194, "22778": 194, "3285": 194, "22815": 194, "22770": 194, "rf_lap": 194, "fr\u00e9d\u00e9ric": [194, 243, 415], "theunissen": [194, 243, 415], "nandini": [194, 243, 415], "singh": [194, 243, 415, 878], "ann": [194, 216, 243, 415, 878], "hsu": [194, 243, 415], "vinj": [194, 243, 415], "jack": [194, 243, 415, 878], "gallant": [194, 243, 415], "ben": [194, 243, 415, 878], "willmor": [194, 243, 415], "darragh": [194, 243, 415], "smyth": [194, 243, 415], "cell": [194, 198, 243, 415, 863, 878], "577": [194, 208, 230, 243, 415], "0954": [194, 243, 415], "898x_14_3_309": [194, 243, 415], "heer": [194, 243, 415], "paslei": [194, 243, 415], "jochem": [194, 243, 415], "rieger": [194, 243, 415], "nathan": [194, 243, 415], "crone": [194, 243, 415], "knight": [194, 243, 415], "tune": [194, 206, 243, 415], "ncomms13654": [194, 243, 415], "30_strf": [194, 197], "visit": [195, 243, 849], "insight": [195, 860], "eas": 195, "camel": 195, "n_meg_channel": 195, "standand": 195, "interquartil": 195, "robustscal": [195, 418], "n_frequenc": [195, 296, 698], "popular": [195, 833, 841], "win": [195, 240], "grasp": 195, "competit": 195, "kaggl": 195, "week": [195, 859], "clf_csp": 195, "ssnr": [195, 558], "rewrit": [195, 878], "plot_filt": [195, 201, 202, 409, 416, 793, 868, 878], "boil": [195, 835], "evoked_time_gen": 195, "joint_kwarg": 195, "diag": [195, 677, 863], "1296": [195, 208, 243], "677": [195, 230], "685": [195, 230], "754": [195, 221, 224, 230, 243, 853], "764": [195, 230], "745": [195, 230], "711": [195, 207, 230, 243, 263, 264, 265, 266, 477, 478, 642], "734": [195, 230, 243, 713, 723, 724, 727], "476": [195, 225, 243, 409], "737": [195, 230], "736": [195, 230], "742": [195, 230], "748": 195, "662": [195, 230], "715": [195, 230], "765": 195, "789": [195, 208, 230], "751": [195, 230], "814": [195, 230], "839": [195, 230, 860], "749": [195, 208, 230], "863": [195, 230, 235, 237], "907": [195, 230], "735": [195, 230], "935": [195, 230], "962": [195, 230], "743": [195, 230, 242], "739": [195, 208, 230], "1062": [195, 208], "1089": 195, "1115": 195, "1169": 195, "1249": 195, "753": [195, 230], "679": [195, 230], "721": 195, "526": [195, 208, 230], "632": [195, 208, 230], "763": [195, 230], "759": [195, 230], "844": [195, 208], "761": [195, 230], "762": [195, 208, 230], "944": [195, 230], "967": [195, 208], "989": [195, 208, 230], "1060": [195, 243], "1083": 195, "738": 195, "1179": 195, "1260": 195, "1287": 195, "587": [195, 208, 230], "591": [195, 230], "596": [195, 230], "595": [195, 230, 243], "697": [195, 208, 230], "712": [195, 230], "607": [195, 230], "634": [195, 230, 243, 557], "719": [195, 230], "716": [195, 230], "766": [195, 230], "784": [195, 230], "973": 195, "1048": 195, "1075": [195, 243], "1102": [195, 208], "1129": [195, 243, 557, 583], "1182": 195, "1210": [195, 208], "1236": 195, "1281": 195, "lanczo": 195, "1353": 195, "91709": 195, "26373e": 195, "98776221": 195, "41838256": 195, "06628582": 195, "methodolog": [195, 243], "uncov": [195, 243], "hal": [195, 243], "01848442": [195, 243], "archiv": [195, 243, 384, 837, 843, 845, 857, 866], "ouvert": [195, 243], "lionel": [195, 243], "naccach": [195, 243], "subtend": [195, 243, 860], "e85791": [195, 243], "0085791": [195, 243], "896": [195, 197, 230], "50_decod": [195, 197], "auto_tutorials_machin": 197, "vibrat": 198, "door": [198, 200], "slam": [198, 200], "phone": 198, "geomagnet": 198, "unshield": 198, "headphon": 198, "malfunct": [198, 199, 853], "qr": [198, 255, 569, 577, 580, 878], "sensori": 198, "genesi": 198, "ssp_projector": 198, "readili": [198, 202, 866], "mag_channel": 198, "remove_dc": [198, 202, 477, 478, 798, 878], "get_xdata": [198, 202], "get_ydata": [198, 202], "searchsort": [198, 202], "dx": [198, 202], "dy": [198, 202], "head_width": [198, 202], "length_includes_head": [198, 202], "find_ecg_ev": [198, 200, 206, 216, 569, 573, 868, 878], "create_ecg_epoch": [198, 200, 204, 206, 569, 577, 868, 878], "ecg_epoch": [198, 204, 573], "6007": [198, 203], "streak": 198, "avg_ecg_epoch": 198, "blocki": 198, "efficaci": 198, "pro": [198, 201, 837], "con": [198, 201], "842": [198, 208, 213, 230], "10_preprocessing_overview": [198, 213], "deepcopi": 199, "usabl": [199, 424, 567, 593, 878], "wildcard": 199, "original_bad": 199, "bad_chan": 199, "paus": [199, 265, 266, 745, 878], "codebas": [199, 837, 852, 861, 866], "good_eeg": 199, "all_eeg": 199, "setdiff1d": 199, "excess": [199, 201, 477, 478, 798, 878], "protocol": [199, 853], "sheet": [199, 853], "offlin": [199, 845], "raw2": [199, 216], "invest": [199, 859], "presenc": [199, 210, 222, 240, 243, 268, 390, 433, 837, 853, 878], "unrealist": [199, 853], "dramat": 199, "robust": [199, 203, 204, 239, 243, 263, 264, 409, 557, 654, 659, 878], "uninform": 199, "deweight": 199, "fair": [199, 207], "eeg_data": [199, 214], "eeg_data_interp": 199, "interp": [199, 648, 649, 650, 662, 878], "00000022": 199, "bad_color": [199, 477, 478, 798], "grad_data": 199, "grad_data_interp": 199, "00000009": 199, "propag": [199, 202, 257, 838], "15_handling_bad_channel": [199, 213], "fake_keypress": [200, 216], "keyboard": [200, 217, 745, 854, 878], "push": [200, 201, 837, 878], "enter": [200, 206, 216, 217, 836, 837, 840], "bad_cough": 200, "wrapper": [200, 267, 440, 444, 483, 687, 688, 878], "bad_blink": 200, "blink_annot": 200, "eeg_pick": 200, "albeit": 200, "annotate_break": [200, 868, 878], "first_tim": [200, 476, 477, 478, 497, 586, 878], "block_1": 200, "block_2": 200, "block_annot": 200, "break_annot": [200, 560], "min_break_dur": [200, 560], "t_start_after_previ": [200, 560], "t_stop_before_next": [200, 560], "bad_break": [200, 560], "events_subset": 200, "flat_criteria": 200, "stringent": 200, "reject_tmin": [200, 258, 263, 264, 573, 878], "reject_tmax": [200, 258, 263, 264, 573, 878], "disappear": [200, 240, 878], "subsum": 200, "stronger_reject_criteria": 200, "2000e": 200, "20_rejecting_bad_data": [200, 213], "park": [201, 243], "burru": [201, 243], "ifeachor": [201, 243], "jervi": [201, 243], "widmann": [201, 243], "somedai": 201, "conclud": [201, 229], "lightli": [201, 837], "cautious": 201, "hope": [201, 202, 204, 240], "math": [201, 205, 857], "b_0": 201, "b_1": [201, 860], "b_2": 201, "ldot": 201, "b_m": [201, 860], "a_1": 201, "a_2": 201, "a_n": 201, "mb_kz": 201, "na_kz": 201, "b_k": [201, 274, 860], "denomin": [201, 230, 296, 297, 651, 661, 685, 688, 710, 878], "a_k": 201, "autoregress": 201, "broken": [201, 268, 449, 837, 878], "finit": [201, 221, 230, 243, 453, 853, 860, 878], "impuls": [201, 857], "infinit": [201, 860, 878], "qquad": 201, "foral": [201, 860], "steeper": [201, 202], "accumul": [201, 263, 264], "despit": [201, 229], "throughput": 201, "sharp": [201, 225, 878], "steep": 201, "broader": [201, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 697, 700], "fundament": 201, "fftfreq": 201, "plot_ideal_filt": [201, 786, 868, 878], "f_p": [201, 860], "flim": [201, 202, 786, 793], "dlim": [201, 786], "f_": 201, "nyq": [201, 445, 448], "third_height": 201, "hypothet": [201, 557], "na\u00efv": 201, "brick": [201, 202], "correspondingli": [201, 263, 264, 860], "tighter": [201, 878], "remez": 201, "firl": 201, "ifft": 201, "relax": [201, 235, 878], "shallow": [201, 272], "gradual": 201, "shorten": [201, 217, 240, 769, 841, 860, 878], "benefici": [201, 275], "wherebi": 201, "came": [201, 843], "minimum_phas": 201, "falloff": 201, "h_min": 201, "uncompens": 201, "imaginari": [201, 243, 724, 725, 878], "dur": 201, "morlet_freq": 201, "tlim": 201, "ttick": 201, "blip": 201, "n_onset": 201, "x_orig": 201, "transition_band": 201, "create_filt": [201, 202, 263, 264, 265, 266, 447, 448, 477, 478, 786, 868, 878], "x_v16": 201, "twice": [201, 263, 264, 265, 266, 445, 447, 448, 477, 478, 798], "filter_dur": 201, "x_v14": 201, "x_v13": 201, "h_eff": 201, "10001": [201, 878], "design_mne_c_filt": 201, "x_mne_c": 201, "hpw": 201, "lpw": 201, "x_min": [201, 312], "cost": [201, 270, 271, 274, 277, 278, 279, 415, 421, 557, 684, 685, 687, 688, 745, 803, 808, 860], "plot_sign": 201, "yscale": [201, 697, 878], "yticklabel": 201, "get_yticklabel": 201, "iirfilt": [201, 444], "iirdesign": [201, 444], "butterworth": [201, 263, 264, 265, 266, 411, 420, 444, 445, 447, 448, 477, 478, 569, 570, 878], "worsen": 201, "filtfilt": [201, 263, 264, 265, 266, 411, 420, 445, 447, 448, 477, 478, 798], "btype": [201, 444], "ftype": [201, 270, 271, 274, 277, 278, 279, 444], "butter": [201, 444], "x_shallow": 201, "sosfiltfilt": 201, "sosfilt": 201, "zpk2so": 201, "polynomi": [201, 263, 264, 265, 266, 477, 478, 516, 860, 878], "iir_param": [201, 206, 263, 264, 265, 266, 411, 420, 444, 445, 447, 448, 477, 478, 569, 570, 878], "filt": [201, 445], "x_steep": 201, "chebychev": [201, 444], "cheby1": [201, 444], "rp": [201, 444], "chebyshev": [201, 444, 878], "substanti": [201, 209, 263, 264, 269, 372, 465, 859, 860, 866], "adjust_ax": 201, "errant": 201, "misappl": 201, "deleteri": 201, "schr\u00f6ger": [201, 243], "uncontrol": 201, "acunzo": [201, 243], "misinterpret": 201, "tanner": [201, 243], "semant": 201, "syntact": 201, "n400": 201, "p600": 201, "5\u00b5v": 201, "sic": 201, "poststimulu": 201, "octav": 201, "energi": [201, 254, 857, 878], "understood": [201, 745], "cos_t": 201, "sig": [201, 229, 234, 235], "iir_lp_30": 201, "iir_hp_p1": 201, "iir_lp_2": 201, "iir_hp_2": 201, "x_lp_30": 201, "padlen": [201, 444], "x_hp_p1": 201, "x_lp_2": 201, "x_hp_2": 201, "x_f": 201, "lp": 201, "_2": [201, 860], "hp": [201, 209, 255], "evolv": 201, "maess": [201, 243, 878], "rebut": 201, "old": [201, 214, 216, 238, 243, 257, 260, 263, 264, 265, 266, 274, 277, 311, 319, 339, 401, 477, 478, 501, 522, 589, 611, 632, 633, 644, 745, 810, 814, 837, 845, 878], "baseline_plot": 201, "all_ax": 201, "ri": [201, 225, 243, 726, 729], "iir_hp": 201, "x_hp": 201, "leak": [201, 221, 859, 860], "n_pre": 201, "sig_pr": 201, "filter_data": [201, 263, 264, 265, 266, 420, 444, 445, 448, 477, 478, 868, 878], "adopt": [201, 835, 837], "reciproc": [201, 263, 264, 265, 266, 340, 411, 420, 430, 445, 447, 448, 477, 478, 568, 576, 585], "decent": 201, "blackman": [201, 263, 264, 265, 266, 420, 445, 447, 448, 477, 478], "fir_window": [201, 263, 264, 265, 266, 411, 420, 445, 447, 448, 477, 478], "fir_desgin": 201, "8197": 201, "outdat": 201, "construct_iir_filt": [201, 263, 264, 265, 266, 411, 420, 445, 447, 448, 477, 478, 569, 570, 868, 878], "transition_bandwidth": 201, "fir_coef": 201, "0545": 201, "0017": 201, "wider": [201, 202], "thoma": [201, 225, 226, 243, 535, 654, 659, 681, 684, 685, 686, 687, 688, 878], "sidnei": [201, 243], "wilei": [201, 243], "471": [201, 243], "82896": [201, 243], "andrea": [201, 243, 296, 878], "erich": [201, 243], "burkhard": [201, 243, 878], "00233": [201, 243], "graham": [201, 243], "mackenzi": [201, 243], "rossum": [201, 243], "darren": [201, 243], "kara": [201, 243], "inappropri": [201, 243, 270, 271, 274, 277, 278, 279], "conclus": [201, 227, 243], "1009": [201, 208, 243], "12437": [201, 243], "1469": [201, 243], "8986": [201, 243], "01009": [201, 243], "commentari": [201, 243], "artefact": [201, 211, 243], "norton": [201, 243], "ermf": [201, 243], "25_background_filt": [201, 213], "mathrm": [202, 209, 225, 713, 723, 725, 727, 728], "raw_highpass": 202, "19821": 202, "9911": [202, 878], "filter_param": 202, "add_arrow": 202, "meg_pick": 202, "raw_notch": 202, "3965": 202, "raw_notch_fit": 202, "spectrum_fit": [202, 448, 477, 478, 878], "notabl": [202, 239, 878], "raw_downsampl": 202, "pitfal": 202, "safe": [202, 214, 243, 263, 264, 319, 376, 377, 378, 381, 382, 384, 389, 392, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 477, 843, 845], "614990234375": [202, 214], "current_sfreq": 202, "desired_sfreq": 202, "obtained_sfreq": 202, "lowpass_freq": 202, "19813025304873463": 202, "80214146205357": 202, "synch": 202, "567": [202, 213, 230, 243], "30_filtering_resampl": [202, 213], "gratton": [203, 243, 556, 600], "croft": [203, 243, 556], "articl": [203, 852], "6607": 203, "bleed": [203, 281, 818], "250m": 203, "model_plain": 203, "picks_artifact": [203, 211, 556, 600], "epochs_clean_plain": 203, "redo": 203, "partli": 203, "variat": [203, 222, 409, 853, 878], "prone": 203, "allevi": [203, 860], "epochs_sub": 203, "model_sub": 203, "epochs_clean_sub": 203, "piec": [203, 216, 263, 264, 477, 478, 860], "ongo": [203, 560, 853, 866], "alik": 203, "model_evok": 203, "epochs_clean_evok": 203, "eog_evoked_clean": 203, "raw_kwarg": 203, "cole": [203, 243, 556, 600], "emanuel": [203, 243, 556, 600, 650, 878], "donchin": [203, 243, 556, 600], "ocular": [203, 204, 206, 243, 556, 600], "90135": [203, 243, 556, 600], "s0987": [203, 243, 556], "7053": [203, 243, 556], "00055": [203, 243, 556], "878": [203, 213, 243, 681], "35_artifact_correction_regress": [203, 213], "corrmap": [204, 868, 878], "guidanc": [204, 206, 859], "blind": [204, 243, 557, 583], "microphon": 204, "unmix": [204, 557, 558, 583, 789, 792, 878], "analogi": 204, "unwant": [204, 206, 210, 317, 878], "ic": [204, 273, 557, 571, 788, 790, 792, 878], "n_pca_compon": [204, 557, 789, 878], "smallest": [204, 230, 340, 409, 557, 857, 860], "runica": [204, 557], "mixing_matrix_": [204, 557], "unmixing_matrix_": [204, 557], "tesla": [204, 206, 220, 860], "artifact_pick": [204, 206], "harder": [204, 837], "filt_raw": 204, "huge": [204, 683], "9010": 204, "get_explained_variance_ratio": [204, 557, 878], "explained_var_ratio": 204, "9358001342790973": 204, "7717091491114122": 204, "ratio_perc": 204, "trackpad": [204, 265, 266, 468, 761, 780], "15459": 204, "ica000": [204, 878], "ica001": [204, 273, 557, 788, 790, 792], "anywai": [204, 215, 837, 843, 878], "read_ica": [204, 557, 868], "reconst_raw": 204, "tediou": 204, "reset": [204, 260, 263, 264, 265, 266, 272, 364, 409, 416, 477, 478, 556, 557, 697, 699, 700, 701, 745, 776, 777, 781, 784, 788, 797, 800, 805, 813, 863, 878], "eog_indic": 204, "prefront": 204, "ctp": [204, 557, 878], "ecg_indic": 204, "caught": 204, "ica014": 204, "refit": [204, 878], "new_ica": 204, "neck": [204, 307], "trail": [204, 557, 585, 741], "s001r03": 204, "s002r03": 204, "19679": 204, "s003": 204, "s003r03": 204, "_fastica": 204, "convergencewarn": 204, "s004": 204, "s004r03": 204, "6250": 204, "6249": 204, "6150": 204, "6149": 204, "ica002": 204, "labels_": [204, 557, 571, 791], "get_compon": [204, 557, 878], "subject_index": 204, "component_index": 204, "template_eog_compon": 204, "33638605": 204, "32708878": 204, "32846765": 204, "32807248": 204, "35916344": 204, "37615216": 204, "42464993": 204, "21789139": 204, "22387812": 204, "22237922": 204, "21342143": 204, "2425263": 204, "26757238": 204, "27806995": 204, "15470616": 204, "1693302": 204, "17711037": 204, "17373137": 204, "19651749": 204, "21091786": 204, "22459439": 204, "68783519": 204, "46717407": 204, "64182737": 204, "34165002": 204, "28991817": 204, "76938995": 204, "0057612": 204, "54311043": 204, "54567127": 204, "63806031": 204, "57058636": 204, "52637437": 204, "51788659": 204, "55774431": 204, "56188149": 204, "69340923": 204, "73333856": 204, "2829121": 204, "39253171": 204, "16120286": 204, "25431324": 204, "06352167": 204, "1647002": 204, "11930156": 204, "1811579": 204, "10112171": 204, "12638332": 204, "13623739": 204, "1301851": 204, "14380943": 204, "15329772": 204, "1715539": 204, "16560352": 204, "13293812": 204, "08175318": 204, "10173655": 204, "10764581": 204, "12707317": 204, "09785876": 204, "07433338": 204, "08470678": 204, "07373196": 204, "03379354": 204, "ecg_ind": 204, "francoi": [204, 243, 557], "cardoso": [204, 243, 557], "precondit": [204, 209, 243, 557, 586, 878], "hessian": [204, 243, 557], "4040": [204, 243, 557], "4049": [204, 243, 557], "2844203": [204, 243, 557], "iren": [204, 243], "winkler": [204, 243], "deben": [204, 243, 571], "4101": [204, 243], "milan": [204, 243, 878], "7319296": [204, 243], "dammer": [204, 243, 557, 878], "schiek": [204, 243, 557], "boer": [204, 243, 557], "carmen": [204, 243, 387, 557], "silex": [204, 243, 557], "mikhail": [204, 243, 557], "zvyagintsev": [204, 243, 557], "uw": [204, 243, 557], "pietrzyk": [204, 243, 557], "mathiak": [204, 243, 557], "2353": [204, 243, 557], "926677": [204, 243, 557], "filipa": [204, 243, 571], "campo": [204, 243, 571], "viola": [204, 243, 571, 878], "jeremi": [204, 243, 571], "thorn": [204, 243, 571], "edmond": [204, 243, 571], "till": [204, 243, 571], "schneider": [204, 243, 571], "tom": [204, 243, 571, 878], "eichel": [204, 243, 571], "877": [204, 230, 243, 571], "clinph": [204, 243, 557, 565, 571, 726, 729], "40_artifact_correction_ica": [204, 213], "setup_3d_ax": 205, "set_zlabel": 205, "set_ylim": [205, 240], "set_zlim": 205, "geometr": [205, 270, 271, 274, 277, 278, 279, 443, 810, 853, 860], "shadow": [205, 638], "cast": [205, 256, 450, 749, 878], "sun": 205, "xy_projection_matrix": 205, "projected_point": 205, "projected_vector": 205, "arrow_coord": 205, "arrow_length_ratio": 205, "symbol": [205, 255, 696, 858, 860, 878], "expans": [205, 209, 263, 264, 265, 266, 430, 477, 478, 516, 567, 568, 576, 585, 860], "unpack": [205, 230, 758, 843], "lucki": 205, "bother": [205, 214], "trigger_effect": 205, "internet": [205, 859], "algebra": [205, 857, 878], "full_matric": 205, "trigger_projection_matrix": 205, "plot_trisurf": 205, "interchang": [205, 296, 833], "ten": [205, 240, 467, 841, 854], "hyperplan": [205, 412, 419], "synonym": [205, 863], "incident": [205, 265, 266, 468, 761, 780], "phrase": 205, "first_projector": 205, "explained_var": [205, 272, 878], "inact": [205, 209, 263, 264, 265, 266, 477, 478, 859], "compute_proj_raw": [205, 206, 354, 355, 860, 868, 878], "ortho": [205, 557], "write_proj": [205, 623, 868, 878], "forgo": 205, "offecg": 205, "remove_exist": [205, 206, 263, 264, 265, 266, 477, 478, 745], "perman": [205, 835, 853, 878], "mags_ecg": 205, "_projector": 205, "cheaper": 205, "consequenti": 205, "mikko": [205, 206, 243, 860], "uusitalo": [205, 206, 243, 860], "bf02534144": [205, 206, 243, 860], "45_projectors_background": [205, 213], "equip": [206, 860], "system_proj": 206, "empty_room_fil": 206, "empty_room_raw": 206, "empty_room_proj": 206, "distant": [206, 857], "_proj": [206, 878], "no_proj": [206, 569, 570], "picks_trac": [206, 796], "plot_projs_joint": [206, 868, 878], "ecg_l_freq": [206, 255, 569], "ecg_h_freq": [206, 255, 569], "filter_method": [206, 569, 570], "presum": 206, "clutter": 206, "eog_proj": 206, "okai": 206, "eog_projs_bad": 206, "perfectli": [206, 240, 720, 860], "get_titl": [206, 210], "get_ylabel": 206, "set_tick_param": 206, "labelbottom": 206, "064": [206, 213, 226, 243, 345, 539, 657], "50_artifact_correction_ssp": [206, 213], "earlob": 207, "collarbon": 207, "disadvantag": [207, 225], "add_reference_channel": [207, 263, 264, 265, 266, 477, 478, 697, 699, 700, 701, 868, 878], "ref_channel": [207, 263, 264, 265, 266, 280, 477, 478, 642, 697, 699, 700, 701], "m2": [207, 263, 264, 265, 266, 477, 478, 642, 863], "set_bipolar_refer": [207, 263, 264, 265, 266, 477, 478, 642, 868, 878], "anod": [207, 639, 878], "cathod": [207, 639, 878], "alter": [207, 209, 214, 257, 586, 878], "raw_new_ref": 207, "raw_avg_ref": 207, "wasn": [207, 878], "infin": [207, 243, 263, 264, 265, 266, 477, 478, 642, 878], "raw_rest": 207, "_raw": [207, 210], "2197": 207, "655": [207, 230], "00413199": 207, "0159844": 207, "05174612": 207, "eeg_bipolar": [207, 639], "transvers": [207, 261], "raw_bip_ref": 207, "36038": [207, 214], "61837": 207, "valueerror": [207, 274, 277, 443, 616, 639, 647, 769], "yao": [207, 243, 263, 264, 265, 266, 477, 478, 642, 657], "693": [207, 230, 243, 263, 264, 265, 266, 477, 478, 642], "0967": [207, 243, 263, 264, 265, 266, 477, 478, 642], "3334": [207, 243, 263, 264, 265, 266, 477, 478, 642], "dezhong": [207, 243], "yun": [207, 243], "qin": [207, 243], "shiang": [207, 243], "hu": [207, 243], "dong": [207, 243, 878], "maria": [207, 243], "bringa": [207, 243], "vega": [207, 243], "pedro": [207, 243], "vald": [207, 243], "\u00e9": [207, 243], "sosa": [207, 243], "00707": [207, 243], "55_setting_eeg_refer": [207, 213], "h\u00f6chenberg": [208, 239, 865, 878], "hoechenberg": [208, 239], "test_move_anon_raw": [208, 209], "v6": [208, 209], "v7": [208, 209, 878], "10800": [208, 209, 878], "31199": [208, 209], "20399": 208, "get_chpi_info": [208, 868, 878], "chpi_freq": 208, "chpi_cod": 208, "chpi_amplitud": [208, 340, 341], "compute_chpi_amplitud": [208, 341, 342, 868, 878], "1696": 208, "419": [208, 225], "593": [208, 230], "614": [208, 230], "635": [208, 230], "459": [208, 230], "514": 208, "829": [208, 217, 219, 230], "843": 208, "902": [208, 230], "683": 208, "945": [208, 230, 265, 266, 697, 783], "988": [208, 230], "835": [208, 230], "1106": 208, "1127": 208, "1166": 208, "885": [208, 216, 219, 228, 237], "1188": 208, "921": [208, 230], "1254": [208, 243, 387], "1276": 208, "1299": 208, "1320": 208, "1363": 208, "1040": 208, "1407": 208, "1437": 208, "1459": 208, "1480": 208, "1501": 208, "1081": 208, "1565": [208, 243], "1587": 208, "1114": 208, "1609": 208, "1124": 208, "1134": 208, "1686": [208, 243], "1130": 208, "489": [208, 230, 240], "compute_chpi_loc": [208, 209, 340, 342, 343, 868, 878], "4385": 208, "442": [208, 230], "503": [208, 225, 230], "559": [208, 230], "568": 208, "431": [208, 213, 230], "573": [208, 230], "805": [208, 230], "819": [208, 230], "833": [208, 230], "932": 208, "948": [208, 230], "1072": 208, "1171": 208, "1216": 208, "1250": 208, "1284": 208, "1286": 208, "1301": 208, "1315": 208, "1319": 208, "1325": 208, "1381": 208, "1484": 208, "1526": 208, "1573": 208, "1580": [208, 263, 264], "1586": 208, "1590": 208, "1594": 208, "1599": 208, "1652": 208, "write_head_po": [208, 341, 343, 349, 350, 868], "compute_chpi_snr": [208, 340, 768, 868, 878], "plot_chpi_snr": [208, 868, 878], "snr_dict": [208, 768], "444": [208, 225, 230, 235], "453": [208, 276], "467": [208, 225, 230], "481": [208, 230], "59_head_posit": [208, 213], "find_bad_channels_maxwel": [209, 585, 868, 878], "obliqu": 209, "filter_chpi": [209, 585, 868, 878], "crosstalk": 209, "fine_cal_fil": 209, "sss_cal_mgh": 209, "crosstalk_fil": 209, "ct_sparse_mgh": 209, "raw_check": 209, "auto_noisy_ch": 209, "auto_flat_ch": 209, "auto_scor": 209, "cross_talk": [209, 567, 576, 585], "return_scor": [209, 576], "ex": [209, 837, 841, 842], "ei": 209, "ch_subset": 209, "scores_noisi": [209, 576], "limits_noisi": [209, 576], "bin_label": 209, "data_to_plot": 209, "cbar_kw": 209, "nanmin": 209, "rect": 209, "nanmax": [209, 228], "appar": [209, 853], "fashion": [209, 370, 878], "min_count": [209, 576], "qualifi": 209, "int_ord": [209, 430, 568, 576, 585, 878], "ext_ord": [209, 340, 342, 346, 430, 567, 568, 576, 585], "thick": [209, 860], "mathtt": [209, 713, 723, 724, 725, 727, 728], "st": [209, 255], "_durat": 209, "penultim": 209, "st_correl": [209, 576, 585, 593], "st_onli": [209, 576, 585, 878], "doublecheck": 209, "get_active_chpi": [209, 868, 878], "chpi_fif_fil": 209, "head_pos_fil": 209, "headpo": [209, 255, 350], "patent": [209, 585, 593], "legal": [209, 769, 859], "commerci": [209, 585], "124905": [209, 243, 430, 568, 585], "1935742": [209, 243, 568, 585], "1759": [209, 243, 585], "1768": [209, 243, 585], "60_maxwell_filtering_sss": [209, 213], "deoxyhaemoglobin": [210, 878], "itertool": 210, "compress": [210, 258, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 384, 477, 478, 573, 574, 697, 700, 843, 878], "novemb": [210, 243, 654, 659], "cw": [210, 370, 833], "set_dur": [210, 257, 878], "mid": [210, 225], "source_detector_dist": [210, 868, 878], "photodetect": 210, "scalp_coupling_index": [210, 868, 878], "beer": 210, "lambert": 210, "law": [210, 859, 878], "raw_haemo": 210, "beer_lambert_law": [210, 868, 878], "haemodynam": 210, "predominantli": 210, "raw_haemo_unfilt": 210, "1291": 210, "s4_d4": 210, "s8_d8": 210, "s3_d3": 210, "s7_d6": 210, "s7_d7": 210, "s6_d8": 210, "oxi": [210, 878], "morphologi": 210, "evoked_dict": 210, "color_dict": 210, "aa3377": [210, 713, 723], "styles_dict": 210, "chroma": 210, "drive": [210, 362, 476, 477, 478, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 517], "tidi": 210, "leg_lin": 210, "get_c": 210, "70_fnirs_process": [210, 213], "technologi": [211, 243, 254, 865], "placement": [211, 265, 266, 782, 833, 878], "opm_data_fold": 211, "ucl_opm_auditori": [211, 854, 868], "opm_fil": 211, "001_se": 211, "aef_run": 211, "001_meg": 211, "720000": 211, "6000": [211, 583], "pt": [211, 481, 509], "amp_scal": 211, "1e12": [211, 369], "data_d": 211, "time_d": 211, "set_kwarg": 211, "ambient": 211, "knowldg": 211, "evironment": 211, "psd_kwarg": 211, "psd_pre": 211, "9901": [211, 878], "psd_post": 211, "remnant": 211, "motiv": [211, 240], "minimis": 211, "interfec": 211, "39601": 211, "19801": 211, "seymour": [211, 243, 854, 878], "stephani": [211, 243, 854], "mellor": [211, 243, 854], "neill": [211, 243, 854, 878], "tim": [211, 243, 854], "tiernei": [211, 243, 854], "eleanor": [211, 243, 854], "maguir": [211, 243, 854], "opportun": [211, 243, 854], "118834": [211, 243, 854], "februari": [211, 243, 299, 854], "80_opm_process": [211, 213], "561": 213, "auto_tutorials_preprocess": 213, "166800": 214, "read_raw_": [214, 476, 860, 878], "famili": [214, 686], "seriou": [214, 859], "parenthes": [214, 860], "estimate_rank": [214, 878], "n_time_samp": 214, "time_sec": 214, "n_chan": [214, 677, 724, 725, 807], "000167471573526": 214, "megacq": 214, "acqch001": 214, "110113": 214, "acqch002": 214, "110112": 214, "acqch003": 214, "110111": 214, "acqch004": 214, "110122": 214, "frequent": [214, 835, 837, 855, 858, 878], "12012": 214, "18018": 214, "24024": 214, "underlyingli": [214, 855], "n_timepoint": [214, 682], "pose": [214, 837], "undo": [214, 615, 878], "eeg_and_eog": 214, "raw_temp": 214, "channel_nam": [214, 494, 616, 878], "eog_and_frontal_eeg": 214, "frivol": 214, "eeg_059": 214, "eeg_060": 214, "blink_detector": 214, "makeshift": 214, "eeg_001": 214, "raw_select": 214, "1503": 214, "unspecifi": [214, 220, 769], "500770084699155": 214, "5001290587975622": 214, "raw_selection1": 214, "raw_selection2": 214, "raw_selection3": 214, "5041000049184614": 214, "sampling_freq": [214, 220], "start_stop_second": 214, "channel_index": [214, 758], "85742192e": 214, "64355481e": 214, "89306644e": 214, "99872648": 214, "00039144": 214, "0020564": 214, "9933487": 214, "99501366": 214, "99667862": 214, "data_arrai": 214, "times_arrai": 214, "meg_0712": 214, "meg_1022": 214, "two_meg_chan": 214, "y_offset": 214, "safest": [214, 853], "eeg_channel_indic": 214, "planar1": [214, 260, 263, 264, 265, 266, 409, 416, 477, 478, 554, 555, 556, 557, 571, 697, 699, 700, 701, 777, 784, 788, 800, 805, 807], "planar2": [214, 260, 263, 264, 265, 266, 409, 416, 477, 478, 554, 555, 556, 557, 571, 697, 699, 700, 701, 777, 784, 788, 800, 805, 807], "first_channel_data": [214, 860], "eeg_and_eog_data": 214, "two_meg_chans_data": 214, "my_data": 214, "npy": [214, 215], "afford": 214, "scaling_tim": 214, "start_end_sec": 214, "to_hdf": 214, "999750": 214, "952283e": 214, "001415": 214, "069226e": 214, "003080": 214, "080921e": 214, "004745": 214, "010755e": 214, "006410": 214, "10_raw_overview": [214, 219], "write_ev": [215, 450, 612, 868, 878], "lst": [215, 612, 823], "array_equ": 215, "_eve": 215, "my_experi": 215, "told": 215, "events_no_button": 215, "merged_ev": 215, "ultim": [215, 837], "send": [215, 742], "cumbersom": 215, "20_event_arrai": [215, 219], "datetim": [216, 257, 263, 264, 265, 266, 268, 282, 477, 478, 878], "compris": [216, 220, 263, 264, 685, 699, 700, 701, 860, 866], "posix": [216, 257], "timestamp": [216, 257, 270, 271, 274, 277, 278, 279, 477, 478, 494, 603, 878], "my_annot": 216, "aaa": 216, "bbb": 216, "ccc": 216, "microsecond": [216, 257, 263, 264, 265, 266, 268, 477, 478, 863], "time_of_first_sampl": 216, "95597083": 216, "iso": 216, "8601": 216, "new_orig_tim": 216, "strftime": 216, "later_annot": 216, "ddd": 216, "eee": 216, "fff": 216, "720100": 216, "darker": 216, "spinbox": 216, "safeguard": [216, 268, 878], "interactive_annot": 216, "bad_": [216, 878], "ordereddict": 216, "95597082905339": [216, 257], "tzinfo": 216, "timezon": [216, 263, 264, 265, 266, 477, 478], "descr": 216, "70597082905339": 216, "45597082905339": 216, "20597082905339": 216, "WILL": 216, "NOT": 216, "annot_from_fil": 216, "30_annotate_raw": [216, 219], "versatil": 217, "lengthen": 217, "unmark": 217, "newli": [217, 766], "hover": 217, "thumbnail": 217, "plot_psd_topo": [217, 238, 263, 264, 265, 266, 477, 478], "40_visualize_raw": [217, 219], "auto_tutorials_raw": 219, "synthet": [220, 494, 573, 577, 860, 878], "hertz": [220, 222, 268, 698, 702, 703, 704, 705, 706, 707], "eog001": 220, "meg001": 220, "meg002": 220, "meg003": 220, "meg004": 220, "meg005": 220, "meg006": 220, "meg007": 220, "meg008": 220, "seven": [220, 860, 878], "molar": [220, 860], "amper": [220, 860], "simulated_raw": 220, "show_scalebar": [220, 263, 264, 477, 478, 775, 798, 878], "995": 220, "simulated_epoch": 220, "column_stack": 220, "condition_a": 220, "condition_b": 220, "evoked_arrai": 220, "n_per_seg": [220, 240, 263, 264, 265, 266, 477, 478, 699, 701, 716, 878], "psd_ave": 220, "spectrum_from_arrai": 220, "inst_info": 220, "my_welch": 220, "inst_type_str": 220, "data_typ": 220, "10_array_obj": [220, 224], "simulate_stc": [221, 661, 662, 663, 868, 878], "dt": [221, 430, 709], "17545": 221, "hemi_to_ind": 221, "elig": [221, 859], "surf_vertic": 221, "restrict_vert": 221, "intersect1d": 221, "restrict_vertic": [221, 269, 274], "cent_idx": 221, "elsewher": 221, "distances_to_outsid": [221, 269, 878], "compute_area": [221, 269, 878], "stc_gen": 221, "value_fun": [221, 664], "brain_gen": 221, "evoked_gen": 221, "stc_inv": 221, "brain_inv": 221, "45968308": 221, "57021267": 221, "69354621": 221, "evoked_snr": 221, "70_point_spread": [221, 224], "unit_impuls": 222, "coh_signal_gen": 222, "t_rand": 222, "dev": [222, 545, 643], "base_freq": 222, "cumsum": 222, "signal1": 222, "signal2": 222, "am": [222, 261, 264, 266, 372, 478, 863, 878], "nperseg": 222, "coh": [222, 698, 771], "noverlap": 222, "146374": 222, "33830": 222, "stc_signal": 222, "stc_nois": 222, "pretend": [222, 225], "s_rm": 222, "59828": 222, "89697e": 222, "40489756": 222, "65479053": 222, "61269642": 222, "dampen": [222, 638, 713, 723, 727], "consensu": [222, 859], "csd_signal": 222, "filters_approach1": 222, "filters_approach2": 222, "filters_1": 222, "power_approach1": 222, "power_approach2": 222, "plot_approach": 222, "brain1": 222, "42918831e": 222, "04345299e": 222, "40589757e": 222, "brain2": 222, "mia": [222, 243, 296, 297], "liljestr\u00f6m": [222, 243, 296, 297], "susanna": [222, 243, 296, 297, 878], "aro": [222, 243, 296, 297, 878], "245530": [222, 243, 296, 297], "kensuk": [222, 243, 296, 297], "sekihara": [222, 243, 296, 297], "79369": [222, 243, 296, 297], "79370": [222, 243, 296, 297], "80_dic": [222, 224], "auto_tutorials_simul": 224, "ttest_1samp_no_p": [225, 684, 687, 691, 868, 878], "phenomena": 225, "n_subject": [225, 233, 235, 680], "signal_mean": 225, "signal_sd": 225, "noise_sd": 225, "gaussian_sd": 225, "n_src": [225, 271, 276], "h_0": 225, "colon": [225, 255, 384, 863], "h_1": 225, "neq": [225, 860], "geq": 225, "cdot": [225, 657, 860], "1600": 225, "mcc": 225, "plot_t_p": 225, "p_lim": 225, "t_lim": 225, "mgrid": 225, "plot_surfac": [225, 878], "rstride": 225, "cstride": 225, "ztick": 225, "mappabl": 225, "set_tick": 225, "set_ticklabel": 225, "get_xaxi": 225, "set_label_coord": 225, "set_weight": 225, "use_p": 225, "log_": 225, "t_": [225, 860], "exchang": [225, 878], "verid": 225, "n_": [225, 860], "samp": 225, "gymnast": 225, "declar": [225, 859], "p_type_i": 225, "combat": 225, "familywis": 225, "fwer": 225, "benjamini": [225, 681], "hochberg": [225, 681], "strict": [225, 452, 841], "indistinguish": 225, "mathbf": [225, 568], "perm_": 225, "aforement": 225, "rethink": 225, "thought": [225, 678, 833], "refram": 225, "drawback": 225, "touch": [225, 320], "feature_extract": 225, "grid_to_graph": 225, "e402": 225, "mini_adjac": 225, "toarrai": 225, "find_ch_adjac": [225, 226, 227, 230, 328, 677, 684, 685, 687, 688, 766, 868, 878], "combine_adjac": [225, 227, 230, 233, 317, 328, 684, 685, 687, 688, 868, 878], "get_builtin_ch_adjac": [225, 317, 328, 766, 868], "builtin_ch_adj": 225, "adj_nam": 225, "adj_descript": 225, "bti148": 225, "bti248": 225, "bti248grad": 225, "ctf64": 225, "easycap128ch": 225, "easycap32ch": 225, "easycap64ch": 225, "easycapm1": [225, 878], "easycapm11": 225, "m11": 225, "easycapm14": 225, "m14": 225, "easycapm15": 225, "m15": 225, "ecog256": 225, "256channel": 225, "ecog256bipolar": 225, "eeg1010_neighb": 225, "elec1005": 225, "elec1010": 225, "elec1020": 225, "itab153": 225, "itab": 225, "itab28": 225, "language29ch": 225, "mpi": 225, "mpi_59_channel": 225, "neuromag122cmb": 225, "neuromag122": [225, 878], "neuromag306cmb": 225, "neuromag306": 225, "neuromag306mag": [225, 230], "neuromag306planar": [225, 227], "yokogawa160": 225, "yokogawa440": 225, "read_ch_adjac": [225, 317, 321, 677, 766, 868, 878], "n_space": 225, "t_thresh": [225, 227], "t_clust": 225, "viewabl": 225, "p_clust": 225, "cl": 225, "195527": 225, "120434": 225, "1947": 225, "1978": [225, 238, 243, 263, 264, 265, 266, 477, 478, 699, 701, 709, 715], "2050": 225, "2088": 225, "2097": 225, "425": [225, 230], "2092": 225, "2064": 225, "2037": 225, "stat_fun_hat": 225, "t_hat": 225, "p_hat": 225, "043603": 225, "127369": 225, "4543": 225, "4501": 225, "4267": 225, "riemann": 225, "threshold_tfc": 225, "t_tfce": 225, "p_tfce": 225, "h_power": [225, 226], "e_pow": [225, 226], "412": [225, 230], "415": [225, 230], "436": [225, 230, 243], "472": [225, 230, 243, 409], "479": 225, "483": [225, 230], "493": 225, "t_tfce_hat": 225, "p_tfce_hat": 225, "424": [225, 230], "439": [225, 230, 444], "451": [225, 276], "463": [225, 230, 276], "482": 225, "494": [225, 230], "jag": 225, "peaki": 225, "broad": [225, 240], "tighten": 225, "broaden": 225, "exhaust": [225, 296], "unbalanc": 225, "statsmodel": [225, 866, 875], "anova_lm": 225, "wrap": [225, 267, 530, 878], "q": [225, 255, 657, 684, 685, 687, 688, 860], "f_onewai": [225, 678, 680, 685, 688, 868], "f_mway_rm": [225, 229, 235, 680, 868, 878], "f_threshold_mway_rm": [225, 229, 235, 678, 868], "unpair": 225, "spatio_temporal_cluster_test": [225, 226, 230, 234, 235, 868, 878], "spatio_temporal_cluster_1samp_test": [225, 233, 684, 868, 878], "gerard": [225, 243, 690, 691], "ridgwai": [225, 243, 690, 691], "flandin": [225, 243, 690, 691], "karl": [225, 243, 254, 690, 691, 865], "friston": [225, 243, 690, 691], "Will": [225, 243, 255, 267, 310, 445, 476, 557, 690, 691, 696, 709, 716, 741, 819, 842], "penni": [225, 243, 690, 691], "haircut": [225, 243, 690, 691], "nichol": [225, 226, 243, 681, 684, 685, 686, 687, 688], "10_background_stat": [225, 232], "confirmatori": 226, "tfce": [226, 684, 685, 687, 688, 866, 878], "ttest_ind": [226, 691], "unsaf": [226, 700], "median_valu": 226, "long_word": 226, "short_word": 226, "time_window": [226, 697], "ntarget": 226, "short_df": 226, "format_dict": 226, "453939": 226, "222424": 226, "518939": 226, "371515": 226, "811667": 226, "250152": 226, "039697": 226, "318030": 226, "163030": 226, "425152": 226, "absent": [226, 364, 863, 878], "amongst": [226, 240], "temor": 226, "cluster_pv": [226, 684, 685, 687, 688], "significant_point": 226, "delaunai": [226, 227, 317, 878], "917298": 226, "1856": 226, "883": [226, 230, 232], "20_erp_stat": [226, 232], "whom": [227, 230, 837], "downstream": [227, 228], "nonparametr": [227, 228, 230, 243, 684, 685, 686, 687, 688], "spectrotempor": [227, 228, 724, 725, 727, 728], "tfr_epoch": 227, "logratio": [227, 239, 286, 540, 541, 697, 700, 805], "epochs_pow": [227, 229, 230], "lattic": [227, 230, 677, 684, 685, 687, 688], "sensor_adjac": 227, "use_idx": 227, "n_ch": 227, "unrol": 227, "degrees_of_freedom": 227, "455144": 227, "265125": 227, "caveat": [227, 230, 243, 557, 860], "anywher": [227, 878], "t_obs_plot": 227, "f_idx": 227, "t_idx": [227, 477, 478], "nanargmax": 227, "40_cluster_1samp_time_freq": [227, 232], "epochs_condition_1": 228, "epochs_condition_2": 228, "comptuat": 228, "tfr_epochs_1": 228, "tfr_epochs_2": 228, "epochs_power_1": 228, "epochs_power_2": 228, "f_ob": [228, 229, 230, 234, 235, 685, 688], "566824": 228, "786": [228, 230], "892": [228, 230], "evoked_power_1": 228, "evoked_power_2": 228, "evoked_power_contrast": 228, "f_obs_plot": [228, 229, 230], "max_f": 228, "evoked_condition_1": 228, "evoked_condition_2": 228, "evoked_contrast": 228, "50_cluster_between_time_freq": [228, 232], "interplai": 229, "perceptu": 229, "56aud_r": 229, "60vis_l": 229, "64vis_r": 229, "forgiv": 229, "zero_mean": [229, 541, 713, 723, 724, 725, 727], "this_tfr": [229, 230], "this_pow": 229, "n_condit": [229, 230, 235, 685, 688], "n_replic": 229, "factor_level": [229, 235, 678, 680], "formula": [229, 235, 296, 297, 353, 653, 657, 710, 711, 860, 878], "a1b1": [229, 678], "a1b2": [229, 678], "a2b1": [229, 678], "b2b2": 229, "fval": 229, "effect_label": 229, "autumn": [229, 230], "overrid": [229, 273, 369, 371, 477, 478, 494, 634, 635, 636, 637, 743, 769, 841, 843, 859], "necessit": [229, 235, 878], "return_pv": [229, 235, 678], "pthresh": [229, 235], "f_thresh": [229, 230, 235], "419588": 229, "good_clust": [229, 233], "f_imag": [229, 230], "f_obs_plot2": 229, "70_cluster_rmanova_time_freq": [229, 232], "differenti": [230, 243, 263, 264, 265, 266, 433, 477, 478, 726, 729, 866], "plot_ch_adjac": [230, 317, 328, 868, 878], "_csr": 230, "csr_matrix": [230, 275, 276, 317, 328, 622], "bind": [230, 235], "stackexchang": 230, "73993": 230, "alpha_cluster_form": 230, "n_observ": [230, 682, 684, 685, 687, 688, 769], "dfn": [230, 685, 688], "dfd": [230, 685, 688], "cluster_stat": 230, "004107": 230, "094418": 230, "428": 230, "434": 230, "461": 230, "466": 230, "475": [230, 276], "477": 230, "502": [230, 522, 863], "519": [230, 240], "583": [230, 243, 417], "586": 230, "589": 230, "594": 230, "605": 230, "623": 230, "626": [230, 243, 557], "631": 230, "637": 230, "672": 230, "696": 230, "698": 230, "703": 230, "767": [230, 243, 853], "772": 230, "777": 230, "785": 230, "787": 230, "804": 230, "812": 230, "832": 230, "845": 230, "854": 230, "857": 230, "866": 230, "872": 230, "886": 230, "889": [230, 276], "891": 230, "894": 230, "908": 230, "911": 230, "916": [230, 240], "919": 230, "925": 230, "927": 230, "946": 230, "949": 230, "952": 230, "968": 230, "972": 230, "983": 230, "991": 230, "p_accept": 230, "good_cluster_ind": [230, 234, 235], "crimson": [230, 745], "steelblu": [230, 477, 478, 798], "i_clu": 230, "clu_idx": 230, "time_ind": 230, "space_ind": 230, "ch_ind": 230, "f_map": 230, "sig_tim": 230, "ax_topo": 230, "f_evok": 230, "ax_colorbar": 230, "ax_sign": 230, "ymin": [230, 235], "get_ylim": 230, "fill_betweenx": [230, 235], "tfr_adjac": 230, "tfr_threshold": 230, "333033": 230, "427": 230, "435": 230, "504": 230, "542": 230, "564": [230, 243, 401], "572": 230, "584": 230, "599": 230, "604": 230, "612": 230, "622": [230, 243, 353], "624": 230, "628": 230, "633": 230, "638": 230, "643": 230, "646": 230, "651": 230, "663": 230, "668": 230, "671": 230, "673": 230, "674": 230, "702": 230, "708": 230, "718": 230, "773": 230, "774": 230, "776": 230, "779": 230, "783": 230, "803": 230, "806": 230, "811": 230, "816": 230, "821": 230, "824": 230, "826": 230, "834": 230, "836": 230, "853": 230, "856": 230, "861": 230, "864": [230, 276], "871": 230, "879": 230, "882": 230, "887": 230, "888": 230, "904": [230, 276], "909": 230, "915": 230, "917": 230, "926": 230, "928": 230, "931": 230, "936": 230, "939": 230, "942": 230, "943": 230, "951": 230, "964": 230, "971": 230, "974": 230, "977": 230, "982": 230, "986": 230, "difficulti": [230, 402, 835, 857], "freq_ind": 230, "ax_spec": 230, "f_obs_plot_sig": 230, "ax_colorbar2": 230, "mari": [230, 243, 684, 685, 687, 688, 878], "dejan": [230, 243, 684, 685, 687, 688], "draschkow": [230, 243, 684, 685, 687, 688], "e13335": [230, 243, 684, 685, 687, 688], "13335": [230, 243, 684, 685, 687, 688], "75_cluster_ftest_spatiotempor": [230, 232], "auto_tutorials_stat": [232, 237], "equalize_epoch_count": [233, 868], "summarize_clusters_stc": [233, 234, 235, 868, 878], "1000e": [233, 235], "sample_vertic": [233, 235], "evoked1": [233, 864], "evoked2": [233, 864], "n_vertices_sampl": [233, 235], "morph_data": [233, 878], "fsave_vertic": [233, 234, 235], "morph_mat": [233, 235, 275], "n_vertices_fsav": [233, 234, 235], "govern": 233, "member": [233, 682, 859, 863, 866], "max_step": [233, 684, 685, 687, 688], "spatial_src_adjac": [233, 234, 235, 868, 878], "p_threshold": [233, 234], "t_threshold": 233, "clu": [233, 234, 235, 689], "563537": 233, "791547": 233, "permutationt": 233, "good_clusters_idx": 233, "stc_all_cluster_vi": [233, 234, 235], "20_cluster_1samp_spatiotempor": [233, 237], "stc_fname": 234, "n_subjects1": 234, "n_subjects2": 234, "x1": [234, 682, 685], "x2": [234, 682, 685], "subjects_k": 234, "f_threshold": [234, 680], "632172": 234, "30_cluster_ftest_spatiotempor": [234, 237], "engemannn": 235, "r_aud": 235, "r_vi": 235, "tini": [235, 297], "1782": 235, "851281": 235, "inds_t": 235, "inds_v": 235, "cluster_ind": 235, "eve_id": 235, "mean_tc": 235, "std_tc": 235, "60_cluster_rmanova_spatiotempor": [235, 237], "v\u00b2": 238, "\u00b2": [238, 239], "t\u00b2": [238, 240], "overridden": [238, 475, 878], "esp": 238, "method_kw": [238, 263, 264, 265, 266, 477, 478, 699, 701], "psd_array_multitap": [238, 263, 264, 265, 266, 414, 477, 478, 699, 701, 725, 728, 868, 878], "irrelev": [238, 255, 837, 860], "epo_spectrum": 238, "npsd": 238, "__getitem__": [238, 256, 257, 258, 260, 261, 263, 264, 268, 272, 276, 287, 301, 477, 478, 523, 698, 699, 700, 701, 732, 878], "evk_spectrum": 238, "61863537e": 238, "13487136e": 238, "88010499e": 238, "89065956e": 238, "24056397e": 238, "91160668e": 238, "56762015e": 238, "65842303e": 238, "39426775e": 238, "38758770e": 238, "03771739e": 238, "98519756e": 238, "agg_fun": [238, 263, 264, 265, 266, 477, 478, 699, 701, 777], "psd_welch": [238, 878], "psd_multitap": [238, 878], "area_mod": [238, 263, 264, 265, 266, 477, 478, 799], "kept": [238, 258, 263, 269, 370, 433, 472, 474, 475, 517, 524, 525, 526, 527, 528, 530, 531, 541, 557, 558, 568, 608, 789, 837, 878], "periodogram": [238, 243, 263, 264, 265, 266, 477, 478, 699, 701, 716], "electroacoust": [238, 243, 263, 264, 265, 266, 477, 478, 699, 701, 716], "1967": [238, 243, 263, 264, 265, 266, 477, 478, 699, 701, 716], "tau": [238, 243, 263, 264, 265, 266, 477, 478, 699, 701, 716], "1161901": [238, 243, 263, 264, 265, 266, 477, 478, 699, 701, 716], "slepian": [238, 243, 263, 264, 265, 266, 477, 478, 699, 701, 709, 715], "bell": [238, 243, 263, 264, 265, 266, 477, 478, 557, 583, 699, 701, 709, 715], "1430": [238, 243, 263, 264, 265, 266, 477, 478, 699, 701, 709, 715], "1538": [238, 243, 263, 264, 265, 266, 477, 478, 699, 701, 709, 715], "7305": [238, 243, 263, 264, 265, 266, 477, 478, 699, 701, 709, 715], "tb02104": [238, 243, 263, 264, 265, 266, 477, 478, 699, 701, 709, 715], "10_spectrum_class": [238, 242], "72074": 239, "mean_spectrum": 239, "psds_mean": [239, 240], "psds_std": [239, 240], "arithmet": [239, 557, 716, 878], "psds_welch_mean": 239, "freqs_mean": 239, "psds_welch_median": 239, "freqs_median": 239, "epo_idx": 239, "unaggreg": [239, 716, 878], "n_segment": [239, 716], "welch_unagg": 239, "topomap_kw": 239, "fmin_fmax": 239, "timefreq": [239, 697], "20_sensors_time_frequ": [239, 242], "fpv": 240, "steadi": 240, "assr": 240, "norcia": 240, "picton": 240, "wet": [240, 854], "dominik": [240, 878], "welk": [240, 878], "evgenii": [240, 878], "kalenkovich": [240, 878], "ttest_rel": 240, "bids_fnam": 240, "12hz": 240, "15hz": 240, "decai": 240, "stabil": [240, 444, 557, 568, 878], "bach": 240, "meigen": 240, "boxcar": [240, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 449, 477, 478, 857, 878], "n_overlap": [240, 263, 264, 265, 266, 477, 478, 699, 701, 716, 799], "snr_spectrum": 240, "noise_n_neighbor_freq": 240, "noise_skip_neighbor_freq": 240, "n_trial": [240, 425], "n_frequency_bin": 240, "increment": [240, 474, 557], "ON": 240, "averaging_kernel": 240, "mean_nois": 240, "apply_along_axi": 240, "psd_": 240, "edge_width": 240, "pad_width": 240, "constant_valu": 240, "drastic": [240, 275, 878], "reappear": 240, "grand": [240, 466, 860, 878], "floor": [240, 422, 583, 725, 728], "ceil": [240, 720], "psds_plot": 240, "snr_mean": 240, "snr_std": 240, "stim_freq": 240, "i_bin_12hz": 240, "1st": [240, 639], "i_bin_24hz": 240, "i_bin_36hz": 240, "i_bin_15hz": 240, "i_bin_30hz": 240, "i_bin_45hz": 240, "i_trial_12hz": 240, "i_trial_15hz": 240, "roi_vi": 240, "po9": 240, "po10": 240, "o9": 240, "o10": 240, "picks_roi_vi": 240, "hotel": 240, "snrs_target": 240, "69365541718619": 240, "wait": [240, 258, 263, 837, 845, 878], "snrs_12hz": 240, "snrs_12hz_chaverag": 240, "tstat_roi_vs_scalp": 240, "985902": 240, "693655": 240, "000067": 240, "Such": [240, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 296, 297, 477, 478, 638, 697, 700, 833, 859, 860], "somewher": [240, 477, 478, 798, 842, 861], "unintend": 240, "preregist": 240, "peopl": [240, 837, 848, 859, 878], "detour": 240, "snrs_roi": 240, "freq_plot": 240, "color_plot": 240, "darkblu": [240, 477, 478, 798], "darkgreen": 240, "mediumblu": 240, "seagreen": 240, "xpos_plot": 240, "stim_12hz_tmp": 240, "stim_15hz_tmp": 240, "snr_tmp": 240, "yerr": 240, "stim_12hz_snrs_": 240, "ihz": 240, "stim_15hz_snrs_": 240, "strike": 240, "tstat_12hz_trial_stim": 240, "stim_12hz_snrs_12hz": 240, "stim_12hz_snrs_15hz": 240, "tstat_12hz_trial_1st_harmon": 240, "stim_12hz_snrs_24hz": 240, "stim_12hz_snrs_30hz": 240, "tstat_12hz_trial_2nd_harmon": 240, "stim_12hz_snrs_36hz": 240, "stim_12hz_snrs_45hz": 240, "tstat_15hz_trial_stim": 240, "stim_15hz_snrs_12hz": 240, "stim_15hz_snrs_15hz": 240, "tstat_15hz_trial_1st_harmon": 240, "stim_15hz_snrs_24hz": 240, "stim_15hz_snrs_30hz": 240, "tstat_15hz_trial_2nd_harmon": 240, "stim_15hz_snrs_36hz": 240, "stim_15hz_snrs_45hz": 240, "000037": 240, "000014": 240, "000297": 240, "000024": 240, "006525": 240, "tour": [240, 878], "overli": 240, "stim_bandwidth": 240, "window_length": 240, "window_snr": 240, "i_win": 240, "this_spectrum": 240, "windowed_psd": 240, "windowed_freq": 240, "stimfreq": 240, "bin_width": 240, "skip_neighbor_freq": 240, "n_neighbor_freq": 240, "windowed_snr": 240, "boxplot": 240, "stochast": [240, 243, 557], "window_start": 240, "greyscal": 240, "optimist": 240, "serious": [240, 860], "50_ssvep": [240, 242], "auto_tutorials_tim": 242, "alphabet": [243, 837, 878], "fiorenzo": [243, 557], "artoni": [243, 557], "magazin": [243, 409], "962275": 243, "stephan": [243, 409], "bonnet": [243, 409], "marco": [243, 409], "congedo": [243, 409], "jutten": [243, 409], "riemannian": [243, 409], "multimedia": [243, 409], "mmsp": [243, 409], "5662067": [243, 409], "barber": [243, 353], "51814": [243, 353], "www": [243, 353, 448, 485, 571, 837, 857], "staff": [243, 353, 843], "brml": [243, 353], "becker": [243, 657], "albera": [243, 657], "comon": [243, 657], "gribonv": [243, 657], "fleureau": [243, 657], "guillotel": [243, 657], "merlet": [243, 657], "sissi": [243, 657], "august": [243, 657], "anthoni": [243, 557], "terrenc": [243, 557], "sejnowski": [243, 557, 583], "deconvolut": [243, 557, 583], "1159": [243, 557, 583], "1995": [243, 401, 557, 583, 860], "neco": [243, 557], "anna": [243, 650, 878], "rita": [243, 650], "bentivoglio": [243, 650], "bressman": [243, 650], "cassetta": [243, 650], "donatella": [243, 650], "carretta": [243, 650], "pietro": [243, 650], "tonali": [243, 650], "alberto": [243, 650], "albanes": [243, 650], "disord": [243, 650], "1028": [243, 650], "870120629": [243, 650], "berg": [243, 860], "scherg": [243, 860], "1994": [243, 524, 860], "90113": [243, 860], "quentin": [243, 878], "anderson": [243, 878], "arindam": 243, "banerje": 243, "kenji": 243, "fukumizu": 243, "24th": 243, "1288": 243, "pmlr": 243, "apr": 243, "mlr": 243, "v130": 243, "bertrand21a": 243, "ryota": [243, 409], "tomioka": [243, 409], "lemm": [243, 409], "motoaki": [243, 409], "kawanab": [243, 409], "msp": [243, 409], "4408441": [243, 409], "fred": 243, "bookstein": 243, "thin": 243, "plate": 243, "24792": 243, "oleg": 243, "burdakov": 243, "bori": 243, "merkulov": 243, "lith": 243, "\u00f6": 243, "ping": 243, "yilun": [243, 353], "chen": [243, 353], "ami": [243, 353], "wiesel": [243, 353], "yonina": [243, 353], "eldar": [243, 353], "alfr": [243, 353, 853], "hero": [243, 353], "shrinkag": [243, 353, 409, 416, 417, 558, 878], "mmse": [243, 353], "5016": [243, 353], "5029": [243, 353], "2053029": [243, 353], "contributor": [243, 841, 844, 856, 857, 859, 866, 878], "readthedoc": 243, "ronald": [243, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 697, 700], "crochier": [243, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 697, 700], "lawrenc": [243, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 565, 697, 700], "rabin": [243, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 697, 700], "multir": [243, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 697, 700], "englewood": [243, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 697, 700], "cliff": [243, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 697, 700], "nj": [243, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 697, 700], "605162": [243, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 697, 700], "adrian": [243, 269, 274], "guggisberg": 243, "erik": [243, 878], "findlai": 243, "ryan": [243, 878], "canolti": 243, "mitchel": 243, "berger": 243, "barbaro": 243, "heidi": 243, "kirsch": 243, "1700": 243, "sereno": [243, 860], "1006": [243, 681, 860], "nimg": [243, 681, 860], "0395": [243, 860], "arthur": [243, 524, 726, 729], "liu": [243, 524], "buckner": [243, 524], "lewin": [243, 524], "s0896": [243, 524], "6273": [243, 524], "81138": [243, 524], "jocn": 243, "darva": 243, "ermer": 243, "20171": 243, "salat": [243, 860], "andr\u00e9": [243, 860], "kouw": [243, 860], "niko": [243, 860], "makri": [243, 860], "florent": [243, 860], "s\u00e9gonn": [243, 860], "quinn": [243, 860, 878], "s69": [243, 860], "s84": [243, 860], "0396": 243, "tootel": 243, "intersubject": 243, "sici": 243, "0193": 243, "hbm10": 243, "genoves": [243, 681], "lazar": [243, 409, 681], "1037": [243, 681], "supplementari": [243, 386], "neuroanatom": [243, 386], "esm": [243, 386], "art": [243, 386, 866], "3a10": [243, 386], "2fnature18933": [243, 386], "mediaobject": [243, 386], "41586_2016_bfnature18933_moesm330_esm": [243, 386], "s\u00f3nia": [243, 853], "gon\u00e7alv": [243, 853], "casper": [243, 853], "munck": [243, 853], "jeroen": [243, 853, 878], "verbunt": [243, 853], "fetsj": [243, 853], "bijma": [243, 853], "rob": [243, 853, 878], "heethaar": [243, 853], "vivo": [243, 853], "resist": [243, 853], "eit": [243, 853], "812164": [243, 853], "teon": [243, 852, 878], "lauri": [243, 852], "parkkonen": [243, 852], "\u00e4": [243, 417, 852], "inen": [243, 852], "fnin": [243, 852], "00267": [243, 852], "greischar": [243, 565], "cori": [243, 565], "burghi": [243, 565], "carien": [243, 565], "reekum": [243, 565], "daren": [243, 565], "jackson": [243, 565], "diego": [243, 565], "pizzag": [243, 565], "corrina": [243, 565], "mueller": [243, 565], "davidson": [243, 565], "electroencephalograph": [243, 565], "hne": [243, 417], "073": [243, 417], "gari": [243, 679], "heiman": [243, 679], "houghton": [243, 679], "mifflin": [243, 679], "boston": [243, 254, 679, 865], "17028": [243, 679], "joerg": [243, 296], "hipp": [243, 296], "hawellek": 243, "maurizio": 243, "corbetta": 243, "marku": [243, 296], "siegel": [243, 296], "engel": [243, 296], "spontan": [243, 853], "3101": 243, "percept": [243, 296, 833, 854, 878], "aapo": [243, 557], "hyv\u00e4rinen": [243, 557], "761722": [243, 557], "toga": 243, "mazziotta": 243, "academ": 243, "san": 243, "b978": 243, "012693019": 243, "50012": 243, "bf02512476": [243, 524], "tkk": 243, "a559": 243, "helsinki": 243, "16463": 243, "kevin": [243, 726, 729], "jone": [243, 726, 729], "bernic": [243, 726, 729], "porjesz": [243, 726, 729], "chorlian": [243, 726, 729], "madhavi": [243, 726, 729], "rangaswami": [243, 726, 729], "chella": [243, 726, 729], "kamarajan": [243, 726, 729], "ajayan": [243, 726, 729], "padmanabhapillai": [243, 726, 729], "stimu": [243, 726, 729], "henri": [243, 726, 729], "begleit": [243, 726, 729], "deficit": [243, 726, 729], "diagnos": [243, 726, 729, 878], "alcohol": [243, 726, 729], "2128": [243, 726, 729], "jorg": 243, "jovicich": 243, "silvest": 243, "czanner": 243, "elizabeth": 243, "halei": 243, "andr": [243, 878], "kennedi": 243, "franz": 243, "schmitt": 243, "gregori": 243, "brown": [243, 539, 657], "macfal": 243, "antti": [243, 878], "ahonen": 243, "lain": 243, "claudia": [243, 860], "tesch": [243, 860], "3315": 243, "3320": 243, "281163": 243, "zhou": [243, 409], "bf01129656": [243, 409], "philipp": 243, "lachaux": 243, "eugenio": 243, "rodriguez": [243, 878], "martineri": 243, "francisco": 243, "varela": 243, "synchroni": 243, "hbm4": 243, "attent": [243, 269, 274, 863], "ledoit": [243, 353], "wolf": [243, 353], "s0047": [243, 353], "259x": [243, 353], "00096": [243, 353], "te": [243, 557, 878], "girolami": [243, 557, 583], "subgaussian": [243, 557, 583, 878], "supergaussian": [243, 557, 583], "089976699300016719": [243, 557], "seok": [243, 853], "lew": [243, 853], "carsten": [243, 853], "wolter": [243, 853], "anwand": [243, 853], "macleod": [243, 853], "compart": [243, 255, 521, 833, 853, 863], "2862": [243, 853], "2878": [243, 853], "20714": [243, 853], "witzel": [243, 535, 654, 659], "8945": 243, "8950": 243, "10024": [243, 878], "lowri": [243, 679], "vassarstat": [243, 679], "bernard": [243, 657], "giusiano": [243, 657], "roehri": [243, 657], "b\u00e9nar": [243, 657], "kathryn": [243, 386], "mill": [243, 386], "6084": [243, 386], "m9": [243, 386], "figshar": [243, 386], "3498446": [243, 386], "molin": [243, 539, 657], "quantif": [243, 430, 539, 657, 844], "1069": [243, 539, 657], "paul": [243, 860, 878], "748978": [243, 860], "ali": [243, 726, 729], "moukadem": [243, 726, 729], "zi": [243, 726, 729], "bouguila": [243, 726, 729], "djaffar": [243, 726, 729], "ould": [243, 726, 729], "abdeslam": [243, 726, 729], "alain": [243, 726, 729], "dieterlen": [243, 726, 729], "lisbon": [243, 726, 729], "6952743": [243, 726, 729], "mourtazaev": [243, 401], "suresh": [243, 562], "muthukumaraswami": [243, 562], "00138": [243, 562], "ndiay": 243, "fercoq": 243, "salmon": 243, "sugiyama": 243, "luxburg": 243, "guyon": 243, "garnett": 243, "curran": 243, "inc": [243, 837, 842], "nip": [243, 472], "cc": [243, 472, 859], "6405": 243, "holm": [243, 686], "primer": [243, 686], "1058": [243, 686], "ou": 243, "bai": 243, "wheaton": 243, "sherri": 243, "vorbach": 243, "hallett": 243, "2307": 243, "zieh": 243, "aloi": 243, "schl\u00f6gl": 243, "kr\u00e4mer": 243, "brismar": 243, "robustli": 243, "physrevlett": 243, "234101": 243, "hilla": [243, 391], "paananen": [243, 391], "jyrki": [243, 391], "m\u00e4kel\u00e4": [243, 391], "zenodo": [243, 391, 852], "889234": [243, 391], "reilli": [243, 387, 854, 878], "mayada": [243, 387, 854], "elsabbagh": [243, 387, 854], "infant": [243, 387, 878], "117682": [243, 387, 854], "thom": [243, 853], "oostendorp": [243, 853], "delbek": [243, 853], "dick": [243, 853], "stegeman": [243, 853], "vitro": [243, 853], "880100": [243, 853], "oppenheim": [243, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 697, 700], "schafer": [243, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 697, 700], "buck": [243, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 697, 700], "prentic": [243, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 697, 700], "hall": [243, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 697, 700], "saddl": [243, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 697, 700], "river": [243, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 697, 700], "754920": [243, 261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 697, 700], "roberto": [243, 524, 860], "pascual": [243, 524, 860], "marqui": [243, 524, 860], "martha": [243, 524, 860], "koukkou": [243, 524, 860], "kieko": [243, 524, 860], "kochi": [243, 524, 860], "bernd": [243, 524, 860], "saletu": [243, 524, 860], "hideaki": [243, 524, 860], "tanaka": [243, 524, 860], "koichi": [243, 524, 860], "hirata": [243, 524, 860], "lesli": [243, 524, 860], "prichep": [243, 524, 860], "rolando": [243, 524, 860], "biscai": [243, 524, 860], "lirio": [243, 524, 860], "toshihiko": [243, 524, 860], "kinoshita": [243, 524, 860], "royal": [243, 353, 524, 860], "1952": [243, 524, 860], "3768": [243, 524, 860], "3784": [243, 524, 860], "rsta": [243, 524, 860], "0081": [243, 524, 860], "donald": 243, "perciv": 243, "walden": 243, "35532": 243, "cbo9780511622762": 243, "dinh": [243, 878], "tuan": 243, "pham": 243, "hermitian": 243, "1136": 243, "1152": 243, "s089547980035689x": 243, "luca": [243, 589], "pollonini": [243, 589], "cristen": [243, 589], "homer": [243, 589], "abaya": [243, 589], "heather": [243, 589], "bortfeld": [243, 589], "beauchamp": [243, 270, 274, 278, 589, 803], "oghalai": [243, 589], "cochlear": [243, 589], "ernesto": 243, "pereda": 243, "ricardo": 243, "bru": 243, "\u00f1": 243, "maest": 243, "\u00fa": 243, "dog": 243, "056011": 243, "2552": 243, "aacfe4": 243, "sanchez": [243, 387], "meek": [243, 387], "wanz": [243, 387], "xie": [243, 387], "1259": [243, 387], "hat": [243, 532, 568, 657, 690, 691, 860, 878], "noam": [243, 572], "pele": [243, 572], "00694": [243, 572], "abraham": [243, 263, 264, 265, 266, 477, 478], "savitzki": [243, 263, 264, 265, 266, 477, 478], "marcel": [243, 263, 264, 265, 266, 477, 478], "golai": [243, 263, 264, 265, 266, 477, 478, 878], "chemistri": [243, 263, 264, 265, 266, 477, 478], "1627": [243, 263, 264, 265, 266, 477, 478], "1639": [243, 263, 264, 265, 266, 477, 478], "1964": [243, 263, 264, 265, 266, 477, 478], "ac60214a047": [243, 263, 264, 265, 266, 477, 478], "nathaniel": [243, 683], "marta": [243, 683], "12320": [243, 683], "corn": 243, "stam": 243, "daffertshof": 243, "diminish": 243, "1178": 243, "1193": 243, "20346": 243, "luigi": [243, 726, 729], "rodino": [243, 726, 729], "bert": [243, 726, 729], "schulz": [243, 726, 729, 878], "wong": [243, 726, 729, 878], "pseudo": [243, 296, 297, 313, 726, 729], "american": [243, 726, 729], "1090": [243, 726, 729], "fic": [243, 726, 729], "2218": [243, 474], "2228": [243, 474], "tmi": [243, 474], "2553445": [243, 474], "evelina": 243, "busa": 243, "glessner": 243, "hybrid": 243, "catherin": [243, 713, 723, 724, 727], "tallon": [243, 713, 723, 724, 727], "baudri": [243, 713, 723, 724, 727], "claud": [243, 713, 723, 724, 727], "delpuech": [243, 713, 723, 724, 727], "jneurosci": [243, 713, 723, 724, 726, 727, 729], "00722": [243, 713, 723, 724, 727], "minna": [243, 860], "huotilainen": [243, 860], "oili": [243, 860], "salonen": [243, 860], "00064": [243, 860], "bishop": [243, 353], "1467": [243, 353], "9868": [243, 353], "00196": [243, 353], "vinck": 243, "wingerden": 243, "franscesco": 243, "battaglia": 243, "cyriel": 243, "pennartz": 243, "1548": 243, "womelsdorf": 243, "pascal": 243, "fri": 243, "rhythmic": 243, "wehner": [243, 430], "modi": [243, 430], "children": [243, 254, 430, 863, 865], "wheat": [243, 726, 729], "pier": [243, 726, 729], "cornelissen": [243, 726, 729], "frost": [243, 726, 729], "hansen": [243, 726, 729], "phonologi": [243, 726, 729], "5229": [243, 726, 729], "4448": [243, 726, 729], "whitham": [243, 557], "sean": [243, 557], "fitzgibbon": [243, 557], "clark": [243, 557, 878], "loveless": [243, 557], "marita": [243, 557], "broberg": [243, 557], "angu": [243, 557], "wallac": [243, 557], "lilli": [243, 557], "hardi": [243, 557], "rik": [243, 557], "fronsko": [243, 557], "alyson": [243, 557], "pulbrook": [243, 557], "paralysi": [243, 557], "1877": [243, 557], "1888": [243, 557], "rei": [243, 472], "ram\u00edrez": [243, 472], "jason": [243, 472], "palmer": [243, 472], "bhaskar": [243, 472], "rao": [243, 472], "neuroelectromagnet": [243, 472], "sch\u00f6lkopf": [243, 472], "platt": [243, 472], "hoffman": [243, 472], "1505": [243, 472], "3089": [243, 472], "jun": [243, 657], "juliu": [243, 657, 878], "dewald": [243, 657], "april": [243, 657], "zhi": [243, 860, 878], "multilay": [243, 860], "moritz": [243, 409, 878], "wentrup": [243, 409], "buss": [243, 409], "921154": [243, 409], "jair": [243, 557, 878], "montoya": [243, 557, 878], "mart\u00ednez": [243, 557], "petr": [243, 557], "tichavsk\u00fd": [243, 557], "massoud": [243, 557], "babai": [243, 557], "zadeh": [243, 557], "nad\u00e8g": [243, 557], "thirion": [243, 557], "moreau": [243, 557], "latent": [243, 557, 792], "10169": [243, 557], "lectur": [243, 557, 862], "cham": [243, 557], "53547": [243, 557], "0_27": [243, 557], "pharmacologi": [243, 524, 860], "pubm": [243, 524, 860], "ncbi": [243, 524, 860], "nlm": [243, 524, 860], "nih": [243, 524, 860], "gov": [243, 524, 860], "12575463": [243, 524, 860], "encyclopedia": 243, "php": 243, "international_system_of_unit": 243, "oldid": 243, "982683558": 243, "googl": [244, 254, 810, 866, 878], "scholar": 244, "dec": [244, 743, 836], "1370": 244, "1640": 244, "health": 254, "r01": 254, "eb009048": 254, "eb006385": 254, "hd040712": 254, "ns044319": 254, "ns037462": 254, "ns104585": 254, "p41": 254, "eb015896": 254, "rr014075": 254, "foundat": [254, 859], "0958669": 254, "1042134": 254, "european": [254, 860], "council": 254, "ystg": 254, "263584": 254, "676943": 254, "depart": 254, "fg02": 254, "99er62764": 254, "agenc": 254, "national": 254, "la": [254, 854, 865, 878], "recherch": [254, 865], "neuc": 254, "0002": 254, "idex": 254, "pari": [254, 878], "saclai": 254, "0003": 254, "summer": [254, 866, 878], "year": [254, 268, 401, 852, 859, 866], "amazon": 254, "grant": [254, 265, 266, 296, 297, 353, 357, 358, 368, 369, 370, 409, 416, 452, 453, 472, 474, 475, 535, 785, 837, 859, 878], "zuckerberg": 254, "eoss2": [254, 866], "eoss4": 254, "employe": [254, 859], "duti": [254, 859], "aalto": [254, 854, 865], "yliopiston": [254, 865], "perustieteiden": [254, 865], "korkeakoulu": [254, 865], "athinoula": [254, 854, 865], "martino": [254, 854, 865], "hospit": [254, 854, 865], "philadelphia": [254, 865], "donder": [254, 865], "behaviour": [254, 257, 505, 507, 865], "radboud": [254, 865], "school": [254, 865], "informatiqu": [254, 865], "automatiqu": [254, 865], "franzen": [254, 865], "universit\u00e4t": [254, 865], "graz": [254, 865], "macquari": [254, 854, 865], "massachusett": [254, 865], "planck": [254, 865], "f\u00fcr": [254, 865], "bildungsforschung": [254, 865], "uniwersytet": [254, 865], "humanistycznospo\u0142eczni": [254, 865], "washington": [254, 865], "aarhu": [254, 865], "universitet": [254, 865], "commissariat": [254, 865], "\u00e0": [254, 865], "\u00e9nergi": [254, 865], "atomiqu": [254, 865], "aux": [254, 865], "forschungszentrum": [254, 865], "j\u00fclich": [254, 865], "du": [254, 865], "cerveau": [254, 865], "moell": [254, 865], "\u00e9pini\u00e8r": [254, 865], "sant\u00e9": [254, 865], "m\u00e9dical": [254, 865], "technisch": [254, 865], "t\u00e9l\u00e9com": [254, 865], "exit": [255, 269, 468, 546, 837], "outfil": 255, "anon": 255, "keep_hi": [255, 263, 264, 265, 266, 477, 478, 479, 878], "n_dai": 255, "daysback": [255, 263, 264, 265, 266, 477, 478, 479], "anonymize_info": [255, 263, 264, 265, 266, 477, 478, 868, 878], "resav": 255, "projoff": [255, 878], "navigaton": 255, "show_opt": [255, 477, 478, 798], "dialog": [255, 263, 264, 265, 266, 477, 478, 798, 801, 843, 878], "allowmaxshield": 255, "filtord": [255, 477, 478, 798, 878], "iir": [255, 263, 264, 265, 266, 411, 420, 444, 445, 447, 448, 477, 478, 569, 570, 589, 651, 661, 710, 786, 798, 867, 878], "clamp": [255, 477, 478, 745, 798], "filterchpi": [255, 878], "head_shap": 255, "out_fnam": 255, "rotation_x": [255, 488], "compensatori": 255, "deg": 255, "ecg_ch": [255, 488], "eog_ch": [255, 488, 878], "e31": [255, 488], "e63": [255, 488], "my_raw": 255, "quiet": [255, 263, 264, 700], "mne_process_raw": [255, 863], "in_raw": 255, "clean_raw": 255, "file_a": 255, "file_b": 255, "test_raw_sss": 255, "filters": 255, "tap": [255, 569, 570, 577, 578, 854], "rej": 255, "rej_grad": 255, "rej_mag": 255, "rej_eeg": 255, "rej_eog": 255, "bad_fnam": 255, "raw_event_fnam": 255, "tstart": [255, 270, 271, 274, 277, 278, 279, 569, 570, 577, 578, 580, 878], "qrsthr": 255, "qrs_threshold": [255, 569, 577, 580], "eog_l_freq": [255, 570], "eog_h_freq": [255, 570], "head_opac": [255, 468], "trackbal": [255, 265, 266, 468, 745, 761, 780], "terrain": [255, 265, 266, 468, 745, 761, 780, 878], "flash30": [255, 302, 860, 878], "noflash30": [255, 860], "flash5": [255, 302, 306, 860, 878], "multiecho": [255, 302, 306], "echo": [255, 302, 836, 842, 843, 860], "noconvert": 255, "deprec": [255, 337, 797, 868, 878], "unwarp": [255, 302, 860], "grad_unwarp": [255, 302, 860], "symlink": [255, 306, 308, 878], "flash_path": 255, "parameter_map": [255, 306, 860], "mef05": 255, "mef30": 255, "mef05_": [255, 302, 878], "mef30_": [255, 302, 878], "spin": [255, 306], "termin": [255, 835, 836, 837, 840, 841, 843, 848, 857, 868, 878], "kt2fiff": 255, "mkheadsurf": [255, 307], "topolog": [255, 307, 364, 408, 428, 459, 605, 634, 636, 826, 853, 878], "suffix": [255, 273, 477, 478, 490, 878], "_sss": 255, "origin_out": 255, "autobad": 255, "maxst": 255, "buflen": 255, "st_buflen": 255, "st_corr": 255, "mv_tran": 255, "in_fnam": 255, "movecomp": 255, "mv_hp": 255, "ascii": [255, 493, 603, 609, 631, 878], "hpistep": 255, "mv_hpistep": 255, "hpisubt": 255, "mv_hpisubt": 255, "nohpicon": 255, "linefreq": 255, "nooverwrit": 255, "mx_arg": 255, "sof": 255, "bmin": 255, "bash": [255, 836, 837, 842, 843, 848], "TO": 255, "1280": [255, 408, 514], "brainc": 255, "skullc": 255, "scalpc": 255, "homog": [255, 514, 853], "7mm": 255, "joblib": [255, 263, 264, 265, 266, 269, 270, 271, 273, 274, 277, 278, 279, 281, 353, 354, 356, 358, 412, 419, 422, 425, 426, 452, 465, 467, 477, 478, 516, 519, 520, 530, 531, 540, 541, 562, 569, 570, 640, 645, 648, 649, 650, 662, 684, 685, 686, 687, 688, 699, 701, 702, 703, 704, 705, 706, 707, 715, 716, 724, 725, 726, 727, 728, 777, 780, 799, 866, 878], "cp": [255, 843, 860, 878], "unicod": [255, 696, 878], "mri_watersh": [255, 308, 857, 860], "gcaatla": [255, 308, 857], "brain_atla": [255, 308], "preflood": [255, 308, 857], "brainmask": [255, 308, 857, 878], "fname2": 255, "parser": [256, 438, 878], "reaverag": 256, "category_nam": 256, "acq_dict": 256, "subav": 256, "subaverag": [256, 863], "__len__": [256, 257, 259, 260, 261, 263, 264, 268, 269, 272, 273, 287, 301, 477, 478, 523, 698, 699, 700, 732], "n_cat": 256, "uint_cast": [256, 450], "delayed_lookup": 256, "acqp": 256, "mne_stim_channel_2": [256, 450, 451], "uint16": [256, 450], "sti014": [256, 450, 878], "sti016": [256, 450], "32768": [256, 408, 450], "mne_fix_stim14": [256, 450], "slight": [256, 878], "asynchroni": 256, "conds_data": 256, "n_epochs_out": 256, "n_annot": 257, "iso8601": 257, "delimit": 257, "bad_flux": 257, "bad_nois": 257, "meg0111": [257, 258, 263, 264, 265, 266, 268, 309, 326, 328, 358, 368, 411, 425, 430, 477, 478, 556, 557, 559, 572, 573, 574, 579, 582, 591, 593, 600, 632, 665, 683, 692, 697, 699, 700, 701, 705, 706, 707, 708, 710, 728, 769, 775, 776, 779, 781, 782, 789, 796, 799], "meg2563": 257, "meg1443": 257, "n_blink": 257, "yy": [257, 489], "______________": 257, "_________": 257, "anot": 257, "___________________": 257, "o_________": 257, "________________________": 257, "o______________": 257, "crash": [257, 878], "o________________________": 257, "bad_acq_skip": [257, 263, 264, 265, 266, 477, 478, 497, 576, 585, 878], "__add__": [257, 259, 260, 269, 270, 271, 274, 276, 277, 278, 279, 311, 697], "concatenc": 257, "__iter__": [257, 260, 263, 264, 268, 272, 287, 301, 523, 647, 699, 700, 732], "array_lik": [257, 258, 260, 261, 263, 264, 265, 266, 268, 272, 273, 282, 309, 311, 326, 328, 358, 367, 368, 409, 411, 416, 419, 422, 424, 425, 426, 430, 436, 475, 477, 478, 488, 501, 516, 521, 556, 557, 558, 559, 562, 566, 567, 568, 571, 572, 573, 574, 576, 579, 582, 585, 591, 593, 599, 600, 635, 636, 651, 665, 675, 676, 679, 681, 682, 683, 691, 692, 697, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 713, 723, 727, 728, 745, 750, 761, 762, 769, 775, 776, 777, 779, 781, 782, 784, 785, 786, 787, 788, 789, 790, 791, 793, 795, 796, 797, 799, 800, 801, 805, 807], "use_orig_tim": [257, 878], "676071": 257, "shortstimulu": 257, "longstimulu": 257, "tabular": [257, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 697, 699, 700, 701], "preload_at_end": 258, "event_rep": [258, 263, 878], "raw_sfreq": [258, 264], "abstract": [258, 866], "meg2623": [258, 263, 264, 265, 266, 268, 309, 326, 328, 358, 368, 411, 425, 430, 477, 478, 556, 557, 559, 572, 573, 574, 579, 582, 591, 593, 600, 665, 683, 692, 697, 699, 700, 701, 705, 706, 707, 708, 710, 728, 769, 775, 776, 779, 781, 782, 789, 796, 799], "ptp": [258, 263, 264, 557, 559, 573], "40e": [258, 263, 264, 358, 557, 573, 574, 683], "zeroth": [258, 263, 878], "unproject": [258, 263, 517, 608], "postpon": [258, 263, 517, 608], "silent": [258, 263, 401, 586, 855, 878], "irrespect": [258, 263, 364, 428, 459, 605, 634, 636, 826, 860], "coincid": [258, 263], "my_epoch": 258, "compensation_grad": [258, 263, 264, 265, 266, 268, 476, 477, 478, 557, 697, 699, 700, 701], "__sub__": [259, 269, 270, 271, 274, 277, 278, 279, 697], "nfree": [260, 261, 863, 878], "eig": [260, 863], "eigvec": [260, 863], "eigenvector": [260, 860, 863], "__contains__": [260, 263, 264, 265, 266, 268, 272, 287, 301, 477, 478, 523, 557, 697, 699, 700, 701, 732], "as_diag": 260, "diagnois": 260, "fromkei": [260, 268, 272, 287, 301, 523, 732], "fig_svd": [260, 770], "1e13": [260, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 353, 357, 358, 409, 416, 418, 477, 478, 776, 779, 781, 783, 784, 806], "1e15": [260, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 353, 357, 358, 409, 416, 418, 477, 478, 776, 779, 781, 783, 784, 806], "pluss": [260, 263, 264, 265, 266, 272, 409, 416, 477, 478, 556, 557, 571, 697, 699, 701, 762, 777, 784, 788, 797, 800, 805, 807], "markeredgecolor": [260, 263, 264, 265, 266, 409, 416, 477, 478, 556, 697, 699, 701, 762, 777, 784, 800, 805, 807], "mask_po": [260, 263, 264, 265, 266, 272, 409, 416, 477, 478, 556, 557, 571, 697, 699, 701, 762, 777, 784, 788, 797, 800, 805, 807], "cloughtocher2dinterpol": [260, 263, 264, 265, 266, 272, 409, 416, 477, 478, 556, 557, 571, 697, 699, 701, 762, 777, 784, 788, 797, 800, 805, 807], "linearndinterpol": [260, 263, 264, 265, 266, 272, 409, 416, 477, 478, 556, 557, 571, 697, 699, 701, 762, 777, 784, 788, 797, 800, 805, 807], "encompass": [260, 263, 264, 265, 266, 272, 409, 416, 477, 478, 556, 557, 571, 697, 699, 701, 762, 777, 784, 788, 797, 800, 805, 807], "polygon": [260, 263, 264, 265, 266, 272, 409, 416, 477, 478, 556, 557, 571, 697, 699, 701, 762, 777, 784, 788, 797, 800, 805, 807, 811, 878], "hull": [260, 263, 264, 265, 266, 272, 409, 416, 477, 478, 556, 557, 571, 697, 699, 701, 762, 777, 784, 788, 797, 800, 805, 807, 878], "doc": [260, 263, 264, 265, 266, 272, 409, 416, 477, 478, 556, 557, 643, 697, 699, 701, 713, 723, 762, 777, 784, 788, 797, 800, 805, 807, 837, 857, 866, 878], "rightmost": [260, 263, 264, 265, 266, 272, 409, 416, 477, 478, 556, 557, 697, 699, 701, 777, 784, 788, 797, 800, 805], "mini": [260, 263, 264, 265, 266, 272, 409, 416, 477, 478, 556, 557, 697, 699, 701, 777, 784, 788, 797, 800, 805], "unrepresent": [260, 268, 272, 287, 301, 523, 732], "popitem": [260, 268, 272, 287, 301, 523, 732], "lifo": [260, 268, 272, 287, 301, 523, 732], "setdefault": [260, 268, 272, 287, 301, 523, 732], "khi2": 261, "mne_dipole_fit": [261, 878], "longitudin": 261, "qlong": 261, "qtran": 261, "\u03c7": 261, "dipolefix": [261, 452, 607, 868], "plot_amplitud": 261, "show_al": [261, 773], "highlight_color": [261, 773], "head_sourc": [261, 516, 773, 878], "glyph": [261, 271, 277, 279, 745, 761, 773, 804, 808, 810, 878], "cube": [261, 773, 878], "mri_rot": [261, 773], "figure3d": [261, 265, 266, 270, 271, 273, 274, 276, 277, 278, 279, 754, 761, 773, 780, 803, 804, 808, 815, 837, 855, 868], "600x600": [261, 761, 773], "get_head_surf": [261, 516, 773, 868, 878], "bdip": [261, 607, 878], "use_round": [261, 262, 263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 438, 477, 478, 697, 700], "pos_mni": 261, "n_po": [261, 341, 343, 470, 471, 787], "subdirectori": [261, 461, 745], "aspect_kind": 262, "combine_event_id": [263, 868], "id_numb": 263, "event_id_1": 263, "event_id_2": 263, "new_id_numb": 263, "lost": [263, 264, 265, 266, 439, 440, 441, 442, 477, 478, 835], "no_data": [263, 700], "equalized_count": [263, 700], "membership": [263, 264, 265, 266, 477, 478, 557, 697, 699, 700, 701, 878], "audio_left": [263, 264, 700], "name_1": [263, 264, 700], "name_2": [263, 264, 700], "likewis": [263, 264, 700, 859, 860], "eval": [263, 264, 700], "col_a": [263, 264, 700], "col_b": [263, 264, 700], "add_annotations_to_metadata": [263, 264], "annot_onset": [263, 264], "annot_dur": [263, 264], "annot_descript": [263, 264], "add_list": [263, 264, 265, 266, 477, 478, 697, 699, 700, 701], "force_update_info": [263, 264, 265, 266, 477, 478, 697, 699, 700, 701], "overwritten": [263, 264, 265, 266, 385, 477, 478, 479, 571, 586, 697, 699, 700, 701, 878], "memmap": [263, 264, 265, 266, 477, 478, 640, 697, 699, 700, 701, 878], "resiz": [263, 264, 265, 266, 477, 478, 697, 699, 700, 701, 784, 878], "januari": [263, 264, 265, 266, 477, 478, 479, 863], "1\u02e2\u1d57": [263, 264, 265, 266, 477, 478, 479], "his_id": [263, 264, 265, 266, 268, 477, 478, 479], "birthdai": [263, 264, 265, 266, 268, 477, 478, 479, 878], "revert": [263, 264, 617, 825, 878], "channel_wis": [263, 264, 265, 266, 477, 478, 878], "parallel_backend": [263, 264, 265, 266, 269, 270, 271, 273, 274, 277, 278, 279, 281, 353, 354, 356, 358, 412, 419, 422, 425, 426, 452, 465, 467, 477, 478, 516, 519, 520, 530, 531, 540, 541, 562, 569, 570, 645, 648, 649, 650, 662, 684, 685, 686, 687, 688, 699, 701, 702, 703, 704, 705, 706, 707, 715, 716, 724, 725, 726, 727, 728, 777, 780, 799, 878], "workload": [263, 264, 265, 266, 477, 478], "x_a": [263, 264, 265, 266, 477, 478], "2u": [263, 264, 265, 266, 477, 478], "enevlop": [263, 264, 265, 266, 477, 478], "hint": [263, 264, 265, 266, 477, 478, 776], "projs_a": [263, 264, 265, 266, 477, 478], "proj_a": [263, 264, 265, 266, 477, 478], "projs_b": [263, 264, 265, 266, 477, 478], "proj_b": [263, 264, 265, 266, 477, 478], "_v": [263, 264, 265, 266, 878], "emphas": [263, 264, 265, 266], "legendr": [263, 264, 265, 266, 477, 478, 516, 566, 860], "by_event_typ": [263, 264, 878], "trim_mean": [263, 264], "low_bia": [263, 264, 265, 266, 414, 477, 478, 530, 531, 699, 701, 704, 707, 709, 715, 777], "undrop": [263, 264], "timeout": [263, 264], "forev": [263, 264, 878], "lenient": [263, 264], "drop_log_stat": [263, 264], "perc": [263, 264], "mintim": [263, 264, 432], "seek": [263, 264, 417, 432], "nonspati": [263, 264], "fmt": [263, 264, 265, 266, 439, 440, 442, 477, 478, 860, 878], "eeglabio": [263, 264, 439, 442, 477, 478, 878], "cart_to_eeglab": [263, 264, 439, 442, 477, 478], "5500m": [263, 264, 265, 266, 411, 420, 445, 447, 448, 477, 478], "cuda": [263, 264, 265, 266, 411, 415, 420, 421, 447, 448, 449, 477, 478, 841, 847, 857, 868, 878], "constrict": [263, 264, 265, 266, 445, 447, 448, 477, 478], "reflect_limit": [263, 264, 265, 266, 447, 448, 449, 477, 478], "savgol_filt": [263, 264, 265, 266, 477, 478], "get_annotations_per_epoch": [263, 264], "epoch_annot": [263, 264], "only_data_ch": [263, 264, 265, 266, 268, 477, 478, 557, 697, 699, 700, 701], "alia": [263, 264, 265, 266, 276, 477, 478, 592, 743, 761, 798, 837, 878], "unitless": [263, 264, 265, 266, 477, 478, 860], "return_event_id": [263, 264, 612, 699, 700, 878], "respiratori": [263, 264, 265, 266, 477, 478, 554, 697, 699, 700, 701, 878], "excit": [263, 264, 265, 266, 268, 477, 478, 554, 697, 699, 700, 701, 860], "galvan": [263, 264, 265, 266, 477, 478, 554, 697, 699, 700, 701, 860, 878], "epoch_color": [263, 264, 775], "use_opengl": [263, 264, 477, 478, 557, 775, 792, 798, 878], "theme": [263, 264, 477, 478, 557, 745, 775, 792, 798, 878], "overview_mod": [263, 264, 477, 478, 557, 775, 792, 798, 878], "5th": [263, 264, 265, 266, 273, 477, 478, 775, 798], "1e2": [263, 264, 273, 477, 478, 775, 798], "20\u00b5v": [263, 264, 273, 477, 478, 775, 798], "ital": [263, 264, 265, 266, 477, 478, 775, 779, 783, 798, 863], "zen": [263, 264, 477, 478, 557, 775, 792, 798, 878], "selector": [263, 264, 265, 266, 477, 478, 775, 798, 801, 863, 878], "processor": [263, 264, 384, 477, 478, 557, 775, 792, 798], "pyopengl": [263, 264, 477, 478, 557, 775, 792, 798], "stylesheet": [263, 264, 477, 478, 557, 745, 775, 792, 798], "qdarkstyl": [263, 264, 477, 478, 557, 745, 775, 792, 798], "darkdetect": [263, 264, 477, 478, 557, 745, 775, 792, 798], "mne_qt_brows": [263, 264, 477, 478, 557, 775, 792, 798, 878], "mpl": [263, 264, 270, 271, 274, 277, 278, 279, 477, 478, 745, 775, 798, 803, 808], "tkagg": [263, 264, 477, 478, 775, 798], "f11": [263, 264, 477, 478, 775, 798], "set_browser_backend": [263, 264, 477, 478, 557, 775, 792, 798, 817, 868, 878], "magic": [263, 264, 477, 478, 557, 775, 792, 798, 835, 857], "qt5": [263, 264, 477, 478, 557, 775, 792, 798, 841], "n_max_plot": [263, 264, 774], "good_epoch": [263, 264, 776], "area_alpha": [263, 264, 265, 266, 477, 478, 799], "line_alpha": [263, 264, 265, 266, 477, 478, 799], "asd": [263, 264, 265, 266, 477, 478, 799], "idiom": [263, 264, 265, 266, 477, 478, 799, 837], "decibel": [263, 264, 265, 266, 274, 477, 478, 530, 699, 701, 777], "log\u2081\u2080": [263, 264, 265, 266, 477, 478, 682, 699, 701, 777], "ch_group": [263, 264, 265, 266, 477, 478, 801, 878], "to_spher": [263, 264, 265, 266, 477, 478, 801, 878], "n_ch_group": [263, 264, 265, 266, 477, 478], "n_pick": [263, 264, 265, 266, 477, 478, 600], "plot_raw": [263, 264, 265, 266, 477, 478, 801, 814, 868, 878], "downward": [263, 264, 265, 266, 477, 478, 801], "plot_layout": [263, 264, 265, 266, 477, 478, 801, 868, 878], "layout_scal": [263, 264, 265, 266, 697, 758, 783, 806], "fig_background": [263, 264, 265, 266, 697, 783, 806], "canva": [263, 264, 265, 266, 697, 758, 783, 806, 860], "allow_dupl": [263, 264, 265, 266, 311, 339, 477, 478, 633, 878], "eeg061": [263, 264, 265, 266, 311, 339, 477, 478, 633], "eeg161": [263, 264, 265, 266, 311, 339, 477, 478, 633], "anti": [263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 811, 878], "reset_drop_log_select": [263, 264, 878], "meaningless": [263, 264], "split_siz": [263, 264, 477, 478], "2gb": [263, 264, 477, 478, 878], "split_nam": [263, 264, 477, 478, 878], "100mb": [263, 264, 477, 478], "partit": [263, 264, 358, 477, 478, 685, 860, 878], "schema": [263, 264, 477, 478], "fname_split": [263, 264, 477, 478], "bbac101d50176611136b": [263, 264, 265, 266, 477, 478], "setter": [263, 264, 477, 478], "set_meas_d": [263, 264, 265, 266, 477, 478, 878], "match_cas": [263, 264, 265, 266, 268, 477, 478, 878], "match_alia": [263, 264, 265, 266, 268, 477, 478, 878], "channel_loc_alias": [263, 264, 265, 266, 268, 477, 478], "std_err": [263, 264], "mechan": [263, 264, 859], "1591": [263, 264], "juli": [263, 264], "rangeindex": [263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 697, 699, 700, 701], "float64index": [263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 697, 699, 700, 701], "int64index": [263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 697, 699, 700, 701], "timedeltaindex": [263, 264, 265, 266, 270, 271, 274, 277, 278, 279, 477, 478, 697, 700], "elicit": [265, 477, 497, 615, 854], "__neg__": [265, 266, 270, 271, 274, 277, 278, 279], "negat": [265, 266, 270, 271, 274, 277, 278, 279], "evoked_neg": [265, 266], "prepend": [265, 266], "resum": [265, 266, 859], "mff": [265, 266, 332, 440, 441, 494, 616, 860, 878], "export_evokeds_mff": [265, 266, 440, 868, 878], "merge_grad": [265, 266, 783, 878], "unsort": [265, 266, 779], "weakest": [265, 266, 779, 878], "obscur": [265, 266, 779], "multiax": [265, 266, 779], "t_start": [265, 266, 779], "t_end": [265, 266, 779], "surf_map": [265, 266, 516, 780], "n_contour": [265, 266, 780], "turntabl": [265, 266, 468, 745, 761, 780], "unintent": [265, 266, 468, 761, 780], "mask_cmap": [265, 266, 697, 781], "mask_alpha": [265, 266, 697, 781], "do_mask": [265, 266, 781], "illeg": [265, 266, 782], "01d": [265, 266, 409, 416, 784], "amplif": [265, 266, 296, 297, 353, 357, 358, 368, 369, 370, 409, 416, 452, 453, 472, 474, 475, 535, 785], "improperli": [265, 266, 296, 297, 353, 357, 358, 368, 369, 370, 409, 416, 452, 453, 469, 472, 474, 475, 535, 785, 878], "logger": [265, 266, 740, 742, 785], "_ave": [265, 266], "source_ori": [267, 863], "fiffv_mne_fixed_ori": [267, 863], "fiffv_mne_free_ori": [267, 863], "n_ori": 267, "source_rr": [267, 863], "n_sourc": [267, 296, 297, 409, 416, 454, 472, 474, 475], "nest": [268, 409, 412, 413, 415, 416, 417, 418, 419, 421, 422, 423, 558, 742, 837], "fiffv_coil_meg": 268, "fiffv_eeg_ch": 268, "3x3": [268, 500, 524], "fiff_unit_t_m": 268, "fiff_unitm_non": 268, "ctfkind": [268, 863], "colcal": 268, "rowcal": 268, "save_calibr": [268, 863], "serial": 268, "fiffv_point_eeg": [268, 863], "fiffc_vers": 268, "machid": [268, 863], "mac": 268, "usec": [268, 863], "he_level_raw": 268, "helium": 268, "helium_level": 268, "orig_file_guid": 268, "mea": 268, "creator": 268, "ncoil": 268, "hpi_coil": 268, "corr_coeff": 268, "coil_freq": 268, "dig_point": 268, "good_limit": 268, "dist_limit": [268, 276, 281, 343, 863, 878], "coord_tran": 268, "event_channel": 268, "mri_id": 268, "block_id": 268, "max_info": 268, "sss_info": 268, "max_st": 268, "sss_ctc": 268, "sss_cal": 268, "smartshield": [268, 878], "last_nam": 268, "first_nam": 268, "middle_nam": 268, "month": 268, "sex": [268, 878], "male": [268, 401], "femal": [268, 401], "handed": 268, "ambidextr": 268, "kilogram": 268, "command_lin": [268, 276], "tilt": [268, 488, 745, 860, 878], "subsystem": [268, 837], "meas_fil": 268, "mri_fil": 268, "roundtrip": [268, 878], "shh": 268, "working_dir": [268, 276], "xplotter": 268, "__setitem__": 268, "conflict": [269, 835, 837, 841, 878], "accuru": [269, 274], "m\u00b2": [269, 833], "versionad": [269, 700, 761], "outside_vertic": 269, "lie": [269, 860], "get_tri": 269, "label_tri": 269, "get_vertices_us": 269, "label_vert": 269, "n_label_vertic": 269, "icosahedr": [269, 359, 408, 464, 465], "morph_label": [269, 620, 868, 878], "div1": [269, 674], "div2": [269, 674], "split_label": [269, 868, 878], "mris_divide_parcel": [269, 674], "n_part": [269, 674], "fring": 269, "sens_data": [270, 271, 274, 277, 278, 279], "volvectorsourceestim": [270, 271, 274, 275, 278, 868, 878], "__div__": [270, 271, 274, 277, 278, 279], "__mul__": [270, 271, 274, 277, 278, 279, 697], "tstop": [270, 271, 274, 277, 278, 279], "bihemilabel": [270, 271, 274, 277, 278, 279, 443, 511, 512, 868], "pane": [270, 274, 278, 745, 803, 843], "n_color": [270, 271, 274, 277, 278, 279, 764, 803, 808, 809], "hot": [270, 271, 274, 277, 278, 279, 803, 808], "diverg": [270, 271, 274, 277, 278, 279, 745, 764, 803, 808, 809, 837], "binar": [270, 271, 274, 277, 278, 279, 653, 655, 656, 745, 803, 808], "colorschem": [270, 271, 274, 277, 278, 279, 803, 808], "bone": [270, 271, 274, 277, 278, 279, 745, 803, 808], "high_contrast": [270, 271, 274, 277, 278, 279, 745, 803, 808], "resort": [270, 274, 278, 803, 857], "devot": [270, 271, 274, 277, 278, 279, 803, 808], "occupi": [270, 271, 274, 277, 278, 279, 467, 646, 803, 808], "blend": [270, 271, 274, 277, 278, 279, 745, 764, 803, 808], "mip": [270, 271, 274, 277, 278, 279, 745, 803, 808], "surface_alpha": [270, 271, 274, 277, 278, 279, 745, 803, 808], "enclos": [270, 271, 274, 277, 278, 279, 745, 803, 808, 860, 878], "silhouette_alpha": [270, 271, 274, 277, 278, 279, 745, 803, 808], "silhouette_linewidth": [270, 271, 274, 277, 278, 279, 745, 803, 808], "time_label_s": [270, 271, 274, 277, 278, 279, 745, 803, 808], "freesurferoccipitalflattenedpatch": [270, 274, 278, 803], "openwetwar": [270, 274, 278, 803], "transform_data": [270, 271, 274, 277, 278, 279], "tmin_idx": [270, 271, 274, 277, 278, 279], "tmax_idx": [270, 271, 274, 277, 278, 279], "indicic": [270, 271, 274, 277, 278, 279], "data_t": [270, 271, 274, 277, 278, 279], "direction": [271, 277, 279], "vector_alpha": [271, 277, 279, 745, 808], "sane": [271, 277, 279, 808], "fiffv_proj_item_field": [272, 863], "compute_proj_": 272, "webp": [273, 878], "fidel": 273, "lang": [273, 878], "n_file": 273, "clearer": [273, 878], "add_custom_css": [273, 878], "add_custom_j": [273, 878], "javascript": [273, 878], "topomap_kwarg": [273, 796], "drop_log_ignor": [273, 878], "declutt": 273, "inverseoper": [273, 524, 525, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 802, 868, 878], "inverse_op": 273, "altogeth": 273, "stc_plot_kwarg": 273, "add_sys_info": 273, "sysinfo": 273, "sort_cont": [273, 878], "on_error": 273, "n_time_points_stc": 273, "remove_al": 273, "removed_index": 273, "open_brows": 273, "nanoamper": 274, "log_10": 274, "sum_k": [274, 860], "s_k": [274, 860], "subject_orig": [274, 277], "vertices_to": [275, 359], "pre_affin": 275, "src_data": 275, "vol_morph_mat": 275, "affinemap": 275, "diffeomorphicmap": [275, 733, 734, 735, 818], "stc_from": 275, "mri_spac": [275, 878], "nifti2": [275, 278, 279], "stc_to": 275, "nifti2imag": 275, "src_from": [275, 544], "monolith": 276, "fiffv_mne_surf_left_hemi": [276, 863], "fiffv_mne_surf_right_hemi": [276, 863], "fiffv_mne_surf_unknown": 276, "fiffv_coord_mri": [276, 863], "inus": [276, 863], "subject_his_id": [276, 359], "ntri": [276, 863], "nuse_tri": [276, 863], "pinfo": 276, "155295": 276, "155323": 276, "155330": 276, "patch_ind": 276, "n_src_remain": 276, "essenti": [276, 385, 853, 860, 863], "115407": 276, "nearest_dist": [276, 863], "mri_width": 276, "mri_height": 276, "mri_depth": 276, "neighbor_vert": 276, "mri_ras_t": 276, "fiffv_mne_coord_ra": 276, "src_mri_t": [276, 878], "vox_mri_t": 276, "fiffv_mne_coord_mri_voxel": 276, "mri_volume_nam": 276, "seg_nam": 276, "include_surfac": 276, "include_discret": 276, "dest": [276, 278, 279, 731], "use_lut": [276, 878], "mne_analyz": [276, 662, 760, 843, 854, 866, 878], "subvolum": [278, 279, 878], "upsampl": [278, 279, 443, 449], "trilinear": [278, 279, 443], "ensnur": [278, 279, 443], "bg_img": [278, 279, 809, 878], "initial_po": [278, 279, 809], "nutmeg": [278, 279, 809], "spatialimag": [278, 279, 302, 469, 733, 734, 735, 809, 818], "src_sampl": [278, 279, 809], "stc_vol_sampl": [278, 279, 809], "vl": [278, 625], "save_as_volum": [278, 279, 878], "pick_channels_forward": [283, 284, 868], "evoked_templ": 283, "apply_forward_raw": [283, 868, 878], "zlogratio": [286, 540, 541, 697, 700, 805], "data_sc": 286, "apply_dics_epoch": [288, 289, 291, 868, 878], "meaningfulli": 289, "quadrant": 289, "apply_d": [289, 290, 291, 868, 878], "borgiotti": [296, 297], "kaplan": [296, 297], "\u03b8i": [296, 297], "arguabl": [296, 297], "max_pow": [296, 297], "expon": [296, 297, 453, 472, 474, 475, 535], "compute_depth_prior": [296, 297, 454, 472, 474, 475, 535, 868, 878], "n_weight": 296, "src_type": [296, 297], "is_free_ori": [296, 297], "supplement": 296, "is_ssp": 297, "vec_stc": 297, "rework": [297, 878], "resmat": [298, 533, 534, 536, 539], "n_dipoles_lcmv": 298, "n_dipoles_fwd": 298, "1996": 299, "1207": 299, "nov": 299, "acssc": 299, "599135": 299, "mef": [302, 860], "mef05_001": 302, "mef30_001": 302, "flash5_img": [302, 306], "dig_kind": [304, 305, 428, 878], "origin_head": 304, "origin_devic": 304, "exclude_front": [305, 428], "n_pt": 305, "convert_flash_mri": [306, 860, 868, 878], "no_decim": 307, "watersh": [308, 854, 878], "autorecon1": [308, 857, 878], "idx_by_typ": 309, "read_dig_captrak": [311, 324, 327, 331, 332, 333, 334, 335, 336, 860, 868, 878], "read_dig_dat": [311, 327, 330, 332, 333, 334, 335, 336, 489, 860, 868, 878], "read_dig_egi": [311, 324, 327, 330, 331, 333, 334, 335, 336, 860, 868, 878], "read_dig_hpt": [311, 327, 330, 331, 332, 333, 335, 860, 868, 878], "read_dig_localit": [311, 324, 330, 331, 332, 333, 334, 336, 868, 878], "acpc": 311, "ch_po": [311, 324], "remove_fiduci": [311, 878], "circumst": [311, 438, 878], "x_max": 312, "y_min": 312, "y_max": 312, "my_layout": 312, "keep_stim": 313, "combined_inst": 313, "native_head_t": 315, "equalized_inst": [316, 434], "ch_adjac": [317, 328], "use_c": 319, "3022": [319, 477, 860], "sq20483n": [319, 477], "3023": [319, 477, 860], "sq20483": [319, 477], "sq20950n": [319, 477], "upgrad": [319, 477, 878], "ch_indic": 320, "bg_imag": 320, "reserv": [320, 837, 859, 878], "make_grid_layout": [320, 325, 868], "neighbor_nam": 321, "builtin": [321, 322, 745, 837, 878], "heurist": 323, "capit": [323, 878], "periauricular": [324, 860], "n_point": [324, 338, 364, 428, 480, 501, 611], "n_hpi": 324, "compute_dev_head_t": [324, 868, 878], "fs_tal": [324, 509, 732], "ctf_head": [324, 509, 732], "ctf_meg": [324, 509, 732], "viewport": [325, 477, 478, 798], "generate_2d_layout": [325, 326, 746, 868], "n_col": [326, 557, 698, 700, 771, 791, 878], "95mm": 327, "eloc": 329, "sfp": [329, 878], "besa": [329, 613, 878], "bvef": [329, 878], "095m": 329, "weakli": 329, "eg": [329, 878], "captrak": [330, 878], "xml": [330, 332, 441, 616, 860, 878], "bvct": [330, 860, 878], "compumed": [331, 489, 860], "eeg001": 333, "eeg002": 333, "hpt": [334, 860], "filepath": [334, 336, 695, 745], "digitz": 334, "pound": [334, 860], "auricular": [334, 860, 863], "signifi": [334, 557], "6729": 334, "3873": 334, "3671": 334, "6782": 334, "5228": 334, "3127": 334, "3976": 334, "2363": 334, "4493": 334, "8450": 334, "3601": 334, "5353": 334, "6828": 334, "8518": 334, "0697": 334, "0829": 334, "3744": 334, "6297": 334, "1376": 334, "4264": 334, "7352": 334, "7756": 334, "8676": 334, "0439": 334, "9297": 334, "6852": 334, "4881": 334, "localit": [335, 878], "read_polhemus_fastscan": [336, 868, 878], "on_header_miss": [338, 878], "fastscan": [338, 501, 860], "t_step_min": [340, 341, 342], "t_window": [340, 342, 346, 567], "interf": [340, 342, 346], "_setup_hpi_amplitude_fit": 340, "disambigu": 340, "t_step_max": 341, "too_clos": 341, "adjust_dig": [341, 343], "\u03b4t": 341, "veloc": [341, 561], "chpi_snr": 342, "snr_mag": 342, "power_mag": 342, "resid_mag": 342, "snr_grad": 342, "power_grad": 342, "resid_grad": 342, "gof_limit": 343, "quat": [343, 349, 736, 738], "q1": [343, 477, 478, 736, 738], "q2": [343, 736, 738], "q3": [343, 477, 478, 736, 738], "monitor": [344, 860, 863], "hlc001": 344, "hlc002": 344, "hlc003": 344, "rawkit": [345, 501], "include_lin": 346, "t_step": 346, "allow_line_onli": [346, 878], "hpi_freq": 348, "n_coil": 348, "hpi_pick": 348, "hpi_on": 348, "head_pos_to_trans_rot_t": [350, 351, 648, 649, 650, 662, 868], "all_evok": 352, "keep_sample_mean": 353, "ledoit_wolf": [353, 878], "factor_analysi": 353, "store_precis": 353, "assume_cent": 353, "shrikag": 353, "iter_n_compon": 353, "emprici": 353, "redund": [353, 860, 878], "on_rank_mismatch": [357, 368, 369], "orth": [357, 878], "implicitli": [357, 421, 585, 853, 860], "resultingmorph": 359, "vertices_from": 359, "vert_rh": 359, "vert_lh": 359, "mris_left_right_regist": 359, "epochs_list": [360, 432], "add_offset": 360, "events_list": [362, 878], "event_list": [362, 878], "on_defect": [364, 428, 459, 605, 634, 636, 826, 878], "read_fiduci": [364, 868, 878], "canon": [364, 484, 745, 761, 852, 878], "quantiti": [364, 583, 859, 860], "radian": [364, 561], "lpa_weight": 364, "rpa_weight": 364, "hsp_weight": 364, "eeg_weight": 364, "hpi_weight": 364, "callback": [364, 745, 758, 878], "set_fid_match": 364, "set_grow_hair": 364, "hair": 364, "set_rot": 364, "rot": [364, 736, 738], "set_scal": 364, "sca": 364, "scale_mod": 364, "set_transl": 364, "tra": 364, "fids_mri": 366, "coordinatesystem": [366, 860], "return_rank": 368, "return_color": [368, 462], "prepare_noise_cov": [368, 868, 878], "n_nonzero": 368, "1e11": 369, "1e5": 369, "fd": [370, 833], "reg_cov": 370, "fs_home": 371, "create_raw": 372, "ignore_config": 374, "env": [374, 457, 835, 837, 841, 845], "device_id": 375, "force_upd": [376, 377, 378, 379, 381, 382, 384, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407], "update_path": [376, 377, 378, 379, 381, 382, 384, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407], "mne_datasets_brainstorm_data_path": [376, 377, 378], "prompt": [376, 377, 378, 379, 381, 382, 384, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 836, 840, 842, 848, 857], "base_url": [379, 401, 402], "getenv": 379, "foot": 379, "khanetal2018": 383, "dataset_param": 384, "check_vers": 384, "return_vers": 384, "auth": 384, "token": 384, "archive_nam": [384, 390], "folder_nam": [384, 390], "hash": [384, 390, 878], "config_kei": 384, "unzip": [384, 837], "untar": [384, 835], "decompress": 384, "authent": [384, 837], "usernam": [384, 837], "password": [384, 837], "httpdownload": 384, "012345": 384, "has_dataset": [384, 868, 878], "uncompress": 384, "cryptograph": 384, "sha256": 384, "19uheid": 384, "md5": 384, "upodh2io": 384, "dataset_nam": [384, 390, 878], "tar": [384, 835, 843], "12b75d1cb7df9dfb4ad73ed82f61094f": 384, "osf": 384, "86qa2": 384, "webpag": 386, "2wk": 387, "1mo": 387, "2mo": 387, "3mo": 387, "5mo": 387, "9mo": 387, "12mo": 387, "15mo": 387, "18mo": 387, "2yr": 387, "ants4": 387, "5month3t": 387, "subject_dir": 388, "fetch_dataset": [390, 868, 878], "\u00ecnt": 393, "mne_datasets_opml_path": 397, "edfx": [401, 402], "cassett": 401, "physionet_sleep_path": [401, 402], "temazepam": [401, 854, 868, 878], "telemetri": 402, "mild": 402, "asleep": 402, "mne_datasets_spm_data_path": 404, "n_triangl": 408, "quadric": 408, "30001": 408, "20480": 408, "cov_est": 409, "transform_into": [409, 416, 878], "average_pow": [409, 416], "cov_method_param": [409, 416, 417], "component_ord": [409, 878], "mutual_info": [409, 878], "csp_space": [409, 416], "mutual": [409, 494, 735], "simplif": 409, "mean_": [409, 416], "std_": [409, 416], "x_new": [409, 410, 411, 414, 416, 417, 420, 558], "n_features_new": [409, 410, 411, 414, 416, 417, 420, 558], "get_param": [409, 410, 412, 413, 415, 416, 417, 418, 419, 421, 422, 423, 558], "subobject": [409, 412, 413, 415, 416, 417, 418, 419, 421, 422, 423, 558], "name_format": [409, 416], "n_pattern": [409, 416], "set_param": [409, 410, 412, 413, 415, 416, 417, 418, 419, 421, 422, 423, 558], "__": [409, 412, 413, 415, 416, 417, 418, 419, 421, 422, 423, 558], "classes_": [410, 412], "n_class": [410, 412, 413, 419, 425], "rtepoch": [411, 878], "temporalfilt": [411, 868, 878], "mne_realtim": [411, 870, 878], "base_estim": [412, 419, 878], "score_func": [412, 419, 557], "decision_funct": [412, 413, 419], "nd_featur": [412, 419], "n_slice": 412, "n_features_1": [412, 419], "n_features_2": [412, 419], "n_task": [412, 419], "clone": [412, 419, 835, 837, 845, 878], "n_target": [412, 413, 419, 426], "xt": [412, 419, 422], "283185307179586": 414, "nitim": [414, 709, 715, 777, 878], "n_signal": [414, 720, 722], "fit_intercept": [415, 421], "r2": 415, "edge_correct": [415, 421], "baseestim": [415, 423, 426], "return_filt": 417, "flank": 417, "spectal": 417, "sprectal": 417, "sorter_spec": 417, "x_ssd": 417, "with_mean": 418, "with_std": 418, "estimators_": 419, "filterestim": [420, 868, 878], "unsupervis": 423, "spatialfilt": 424, "_xdawntransform": 424, "features_shape_": 424, "objective_funct": 425, "leaveoneout": 425, "surrogate_tri": 425, "mean_spatial_filt": 425, "pre_dispatch": 426, "n_dimensional_featur": 426, "dispatch": 426, "explos": 426, "spawn": [426, 878], "lightweight": [426, 835], "n_score": 426, "attr": [427, 837], "get_fitting_dig": [428, 868], "extrema": [429, 594, 818], "orig_sfreq": 430, "weight_al": 430, "ignore_ref": [430, 520, 568, 576, 585], "return_map": 430, "mag_scal": [430, 568, 576, 585], "multipolar": [430, 567, 568, 576, 585], "fit_sphere_to_headshap": [430, 567, 568, 576, 585, 868, 878], "magenetomet": [430, 568, 576, 585], "pickup": [430, 568, 576, 585, 860], "0168": [430, 568, 576, 585], "sp": 430, "old_event_id": 431, "new_event_id": 431, "safeti": [431, 845], "collat": 433, "absenc": 433, "ancillari": 433, "union": [433, 450, 557, 586], "myevent": 433, "last_myev": 433, "first_": 433, "event_typ": 433, "respet": 433, "slash": [436, 833, 878], "n_new_ev": 437, "aa": 438, "dd": [438, 489, 878], "ee": 438, "gg": 438, "syncstatu": 438, "99998": 438, "neuroscan": [438, 860, 878], "mffpy": [441, 878], "xml_file": 441, "physical_rang": [442, 477, 478], "add_ch_typ": [442, 477, 478], "vmrk": [442, 477, 478, 603, 854, 878], "edflib": [442, 477, 478, 878], "f_pass": 444, "f_stop": 444, "return_copi": 444, "ellipt": 444, "gpass": 444, "gstop": 444, "weren": 444, "triag": [444, 696], "fs1": 445, "fs2": [445, 448], "fstop": 445, "max_tri": 446, "mt_bandwidth": [448, 477, 478], "centr": [448, 477, 478, 539], "xf": 448, "chronux": 448, "partha": 448, "mitra": 448, "hemant": 448, "bokil": 448, "oxford": [448, 837], "upfirdn": 449, "shortest_ev": 450, "find_stim_step": [450, 868, 878], "00000101": 450, "0000111": 450, "0100101": 450, "0000101": 450, "0000010": 450, "pad_start": 451, "pad_stop": 451, "whichev": [451, 453, 763], "v_from": 451, "v_to": 451, "min_dist": 452, "rhoend": 452, "fmin_cobyla": 452, "limit_depth_ch": [453, 878], "combine_xyz": 453, "gk": 453, "frobeniu": 453, "depth_prior": 453, "compute_orient_prior": [453, 868], "orient_prior": 454, "fwd_out": [455, 456], "restrict_forward_to_stc": [455, 868, 878], "restrict_forward_to_label": [456, 868, 878], "raise_error": 457, "config_path": 458, "mnemn": 458, "mgz_fname": 462, "atlas_id": [462, 618], "read_freesurfer_lut": [462, 868, 878], "labels_aseg": 463, "spatio_temporal_tris_adjac": [464, 868, 878], "all_inst": 466, "grown": 467, "territori": 467, "invad": 467, "broadcast": 467, "guess_mri_subject": 468, "head_high_r": 468, "scrollabl": 468, "orient_to_surfac": 468, "scale_by_dist": 468, "mark_insid": 468, "advanced_rend": 468, "head_insid": 468, "movabl": 468, "splitter": 468, "qt4": 468, "unnecessari": [468, 485, 492, 499, 853, 855], "wx": 468, "occlud": 468, "coregistrationui": 468, "base_imag": [469, 818, 878], "intracranialelectrodeloc": 469, "unscal": [471, 878], "update_mod": 472, "bay": 472, "mackai": 472, "time_pca": 474, "dgap_freq": [474, 475, 878], "cd": [474, 837, 843, 857, 860, 878], "bcd": [474, 878], "dualiti": [474, 475, 878], "alpha_max": [474, 475], "epsilon": [474, 524], "alpha_spac": [475, 878], "alpha_tim": [475, 878], "raw_extra": 476, "orig_format": [476, 477, 478, 878], "buffer_size_sec": [476, 477, 478, 878], "orig_unit": 476, "unsplit": 476, "orig_nchan": 476, "nv": 476, "my_raw_object": 476, "subclass": 476, "_read_segment_fil": 476, "mult": 476, "time_slic": [477, 478], "rawfif": [477, 478], "crop_by_annot": [477, 478, 878], "data_fram": [477, 478], "quartil": [477, 478], "fix_mag_coil_typ": [477, 868, 878], "mne_fix_mag_coil_typ": 477, "load_bad_channel": [477, 478, 878], "bad_fil": [477, 478], "mne_mark_bad_channel": [477, 478], "europ": [477, 478], "lightgrai": [477, 478, 774, 798], "show_first_samp": [477, 478, 557, 792, 798], "eventloop": [477, 478, 798], "prj": [477, 478, 798], "secondari": [477, 478, 798], "stim_pick": [477, 478, 878], "supersampl": [477, 478], "optimum": [477, 478], "drop_small_buff": [477, 478], "gzip": [477, 478, 878], "projecton": [477, 478], "datetimeindex": [477, 478], "pickl": 480, "mrk_point": 480, "fiffv_coord_": [481, 509], "input_fnam": [484, 485, 489, 492, 493, 494, 499, 501, 503, 609, 611], "pos_fnam": 484, "add_head_tran": 484, "artemis123": [484, 860, 878], "utf8": [485, 492, 878], "bdf": [485, 492, 499, 860, 878], "rawedf": [485, 492, 878], "gdf": [485, 492, 499, 860, 878], "batteri": 485, "trigger_sign": 485, "htm": 485, "cms_bit": 485, "cms_high": 485, "boxi": [486, 860, 878], "rawboxi": 486, "vhdr_fname": 487, "heogl": 487, "heogr": 487, "veogb": 487, "vision": [487, 859, 878], "rawbrainvis": [487, 878], "pdf_fname": 488, "config_fnam": 488, "head_shape_fnam": 488, "sort_by_ch_nam": 488, "e64": 488, "rawbti": 488, "data_format": 489, "date_format": 489, "int16": 489, "int32": [489, 863], "numsampl": 489, "rawcnt": 489, "system_clock": 490, "clean_nam": [490, 878], "rawctf": 490, "curri": [491, 603, 878], "dap": [491, 603], "rs3": 491, "cdt": [491, 603, 878], "dpa": [491, 603], "cef": [491, 603], "rawcurri": 491, "export_raw": [492, 868, 878], "storag": [492, 640], "sao2": 492, "subsecond": 492, "uint16_codec": [493, 603, 609, 878], "montage_unit": [493, 609, 878], "codec": [493, 603, 609, 745], "latin1": [493, 603, 609], "raweeglab": [493, 878], "trev": 494, "e1": [494, 616], "e2": [494, 616], "e3": [494, 616], "rawegi": 494, "nxe": [495, 860], "raweximia": 495, "data_nam": [496, 610, 614], "ft_datatype_raw": 496, "binfil": 498, "fil": [498, 854, 860, 878], "opmeg": 498, "rawfil": 498, "rawgdf": 499, "hitachi": [500, 878], "probe": [500, 878], "rawhitachi": 500, "3x5": 500, "etg": 500, "7000": 500, "d1": 500, "s2": 500, "d2": 500, "s3": 500, "d3": 500, "s4": 500, "d4": 500, "s5": 500, "d5": 500, "s6": 500, "d6": 500, "s7": 500, "d7": 500, "s8": 500, "ft7": 500, "tp7": 500, "laid": 500, "d8": 500, "s9": 500, "d9": 500, "s10": 500, "3x11": 500, "d10": 500, "s11": 500, "d11": 500, "s12": 500, "d12": 500, "s13": 500, "d13": 500, "s14": 500, "d14": 500, "s16": 500, "d16": 500, "s17": 500, "d17": 500, "s18": 500, "stim_cod": 501, "allow_unknown_format": [501, 611], "ricoh": [501, 611, 878], "laboratori": [501, 611], "neuroelectr": 502, "nedf": [502, 878], "rawnedf": 502, "nicolet": [503, 860, 878], "nihon": 504, "kohden": 504, "rawnihon": 504, "nirx": [505, 860, 878], "nosatflag": 505, "rawnirx": 505, "wlx": 505, "nosatflags_wlx": 505, "persyst": [506, 860, 878], "rawpersyst": 506, "snirf": [507, 878], "jnir": 507, "rawsnirf": 507, "indent": [508, 753], "read_limit": [508, 753], "max_str": [508, 753], "mne_show_fiff": 508, "mri_tal": [509, 732], "grow_outsid": 510, "hoc": [513, 844, 878], "standard_devi": 513, "write_bem_surfac": [514, 515, 604, 605, 853, 868, 878], "write_bem_solut": [515, 604, 605, 853, 868, 878], "relative_radii": 521, "radii": [521, 649], "csf": [521, 860], "replace_ev": [522, 878], "n_events_in": 522, "n_events_out": 522, "1111111111111111": [524, 525, 530, 531, 536, 540, 541], "prepare_inverse_oper": [524, 525, 526, 527, 528, 530, 531, 540, 541, 868, 878], "apply_inverse_tfr_epoch": [524, 525, 526, 527, 868, 878], "force_equ": [524, 878], "time_func": 527, "approx": [527, 860], "inv_split": [530, 531], "snr_est": 532, "unregular": 532, "tild": [532, 860, 878], "lambda_k": [532, 860], "gamma_k": [532, 860], "biggest": 532, "chi": 532, "normalis": [533, 534], "willb": [533, 534], "n_orient_inv": [533, 534, 536], "n_orient_fwd": [533, 534, 536], "pca_var": [533, 534], "mantl": [535, 860], "cog_err": 539, "graviti": 539, "cog": 539, "maxrad_ext": 539, "peak_amp": 539, "sum_amp": 539, "surf_nam": [543, 620], "mne_docs_kind": 545, "mne_docs_vers": 545, "grad_reject": 547, "mag_reject": 547, "eeg_reject": 547, "eog_reject": 547, "explanatori": [556, 600], "info_": 556, "intercept_": 556, "cumul": 557, "999999": [557, 878], "n_components_": [557, 878], "n_iter_": [557, 878], "pseudoinvers": [557, 568, 860, 878], "instabl": 557, "migrat": [557, 878], "debat": 557, "zca": 557, "tol_fastica": 557, "tol_picard": 557, "current_fit": 557, "unfit": 557, "pre_whitener_": 557, "pca_components_": 557, "pca_mean_": 557, "pca_explained_variance_": 557, "scrap": 557, "n_samples_": 557, "on_baselin": [557, 789, 878], "ummix": [557, 558], "reappli": [557, 789, 825, 878], "anymor": [557, 845, 878], "supra": [557, 559], "ecg_idx": 557, "kuiper": 557, "eog_idx": 557, "paralyz": 557, "threefold": 557, "farthest": 557, "msucl": 557, "ref_ica": 557, "ref_idx": 557, "baseraw": [557, 565, 868, 878], "unclean": 557, "pvaf": 557, "usecas": [557, 792], "plot_std": [557, 788, 790], "image_arg": [557, 697, 788, 790], "psd_arg": [557, 788, 790], "plot_ica_compon": [557, 868, 878], "topomap_axi": [557, 790], "image_axi": [557, 790], "erp_axi": [557, 790], "spectrum_axi": [557, 790], "variance_axi": [557, 790], "logarithm": [557, 790], "ass": [557, 791], "n_ica_compon": [557, 791], "sublabel": [557, 791], "score_sourc": [557, 878], "pearsonr": 557, "skew": 557, "correct_overlap": 558, "overlapp_correct": 558, "evokeds_": 558, "event_id_": 558, "correct_overlap_": 558, "n_event_typ": 558, "bad_perc": 559, "bad_peak": 559, "bad_flat": 559, "uncommon": 559, "sole": [560, 854, 859], "rotation_velocity_limit": 561, "translation_velocity_limit": 561, "use_dev_head_tran": [561, 878], "lm_cutoff": 565, "epoch_threshold": 565, "bw_method": 565, "intrins": 565, "hjorth": 565, "gaussian_kd": 565, "n_legendre_term": 566, "lap": [566, 642], "inst_csd": 566, "n_imbal": 567, "multipol": [567, 585], "bad_condit": [568, 576, 585], "extended_proj": [568, 576, 585], "ill": [568, 576, 585], "esss": [568, 576, 585, 866, 878], "n_meg": [568, 576], "n_moment": 568, "n_good_meg": 568, "reg_moment": 568, "n_use_in": 568, "dagger": 568, "phi": 568, "phi_in": 568, "data_meg_good": 568, "raw_ev": [569, 570], "avg_ref": [569, 570], "return_drop_log": [569, 570, 878], "ecg_ev": [569, 577, 580], "0005": [570, 857], "e0g": 570, "feed": [571, 860], "corrmapplugin1": 571, "categoris": 571, "preexist": 571, "dry": 571, "template_fig": 571, "labelled_": 571, "mag_pick": 572, "grad_pick": 572, "keep_ecg": [573, 878], "r_peak_events_arrai": 573, "doctest": 573, "interp_thresh": 575, "insts_bad": 575, "formerli": [575, 878], "noisy_ch": 576, "flat_ch": 576, "Their": [576, 837], "scores_flat": 576, "limits_flat": 576, "annotate_amplitud": [576, 585, 868, 878], "st_fix": [576, 585], "d_k": 576, "mu_d": 576, "sigma_d": [576, 860], "textrm": 576, "return_ecg": 577, "ch_ecg": [577, 580], "average_puls": [577, 580], "ecg_sourc": 580, "eog_sourc": 581, "n_neighbor": 582, "l_rate": 583, "w_chang": 583, "anneal_deg": 583, "anneal_step": 583, "n_subgauss": 583, "kurt_siz": 583, "ext_block": 583, "blowup": [583, 662], "blowup_fac": 583, "n_small_angl": 583, "use_bia": 583, "return_n_it": [583, 878], "kurtosi": 583, "unmixing_matrix": 583, "return_max_it": 583, "bad_limit": 584, "forth": 585, "relicens": 585, "permiss": 585, "certifi": 585, "seamless": 585, "vet": [585, 866], "abramowitz": 585, "stegun": 585, "us2006031038": 585, "us6876196": 585, "wo2005067789": 585, "wo2005078467": 585, "wo2006114473": 585, "lawyer": 585, "raw_er": 586, "from_raw": 586, "inject": 586, "raw_er_prepar": 586, "compil": 586, "pathlength": [587, 878], "hemoglobin": [592, 878], "wherev": 592, "realtim": [593, 868, 878], "provision": 593, "x0": [594, 682], "peak_loc": 594, "peak_mag": 594, "nathanael": 594, "yoder": 594, "ncyoder": 594, "purdu": 594, "36900026": 594, "76007351": 594, "imb_cal": 596, "t_raw": 599, "t_other": 599, "realign": [599, 833, 878], "first_ev": 599, "n_picks_ref": 600, "epochs_no_av": 600, "epochs_clean": 600, "n_parcel": 602, "amrk": 603, "ahdr": [603, 878], "patch_stat": [605, 627], "s_id": 605, "eventtyp": 609, "trialinfo_column": 610, "trialinfo": [610, 878], "mne_browse_raw": [612, 863], "avr": [613, 878], "mul": [613, 878], "sidecar": 613, "timelock": 614, "write_labels_to_annot": [619, 620, 827, 868, 878], "annot_fnam": [620, 828], "ascend": [620, 786, 793, 857, 878], "mne_make_morph_map": [622, 863], "morph_map": 622, "left_map": 622, "right_map": 622, "asterisk": 625, "source_morph": 626, "return_dict": 628, "file_format": [628, 831], "voxels": [628, 831], "xra": [628, 831], "yra": [628, 831], "zra": [628, 831], "cra": [628, 831], "n_face": [628, 631, 831], "read_tri": [628, 831, 868], "return_al": 630, "fname_in": 631, "clockwis": [631, 750], "counterclockwis": [631, 863], "spcecifi": 632, "bem_nam": 634, "subjects_from": [634, 637], "ba3a": 635, "cfg": 635, "skip_fiduci": 636, "ioerror": 636, "scale_bem": [636, 868, 878], "scale_label": [636, 868], "scale_source_spac": [636, 868], "src_name": 637, "my_source_spac": 637, "mne_sensitivity_map": 638, "ch_info": [639, 878], "drop_ref": [639, 878], "on_bad": 639, "unreferenc": 639, "cache_dir": 640, "output_format": 643, "howto": 643, "asctim": 643, "levelnam": 643, "notifi": [643, 837], "return_old_level": 644, "add_fram": [644, 740], "old_level": 644, "single_volum": [646, 878], "ox": 646, "oi": 646, "iii": 646, "get_stim_channel": 647, "stim_data": 647, "add_chpi": [649, 650, 662, 868, 878], "inhomogen": 650, "poisson": 650, "stc_true": [652, 653, 654, 655, 656, 657, 658, 659], "stc_est": [652, 653, 654, 655, 656, 657, 658, 659], "ppe": 654, "dfrac": [654, 659], "sum_i": [654, 659], "s_i": [654, 659], "r_i": [654, 659, 860], "tp": [655, 656], "fn": 656, "2q": 657, "min_": [657, 860], "r_k": 657, "r_l": 657, "mathbb": 657, "dle": 657, "ed": [657, 878], "terminologi": 657, "actual_snr": 661, "sti001": 662, "allow_overlap": 664, "coo_matrix": [667, 668, 669, 670, 671, 672, 673, 677], "additit": 668, "remap_vertic": [670, 673], "reassign": [670, 673], "2n": [671, 672, 673, 860], "pval_correct": [675, 681], "n_bootstrap": 676, "spmatrix": [677, 684, 685, 687, 688], "n_ob": 677, "chan_adj": 677, "5600x5600": 677, "27076": 677, "compliant": [678, 866], "slowest": 678, "a2b2": 678, "greenhous": 678, "geisser": 678, "f_val": 678, "homoscedast": 679, "kruskal": 679, "walli": 679, "pvalu": 680, "yekuti": 681, "negcorr": 681, "n_regressor": 682, "choleski": [683, 860, 878], "n_cond": 683, "bx": 683, "enorm": 683, "overload": 683, "subepoch": 683, "n_predictor": 683, "time_window_length": 683, "t_power": [684, 685, 687, 688], "check_disjoint": [684, 685, 687, 688], "subarrai": 684, "kth": 684, "unconnect": [684, 685, 687, 688], "disjoint": [684, 685, 687, 688], "set_cache_dir": [684, 685, 687, 688, 868], "rv_continu": [684, 685, 687, 688], "untract": 686, "spatial_exclud": [687, 688], "p_thresh": 689, "equal_var": 691, "ball": 692, "volu": 692, "do_neighbor_vert": 694, "do_neighbor_tri": 694, "show_path": 696, "sy": [696, 841, 878], "power_baselin": 697, "frequency_window": 697, "read_tfr": [697, 700, 730, 868, 878], "write_tfr": [697, 700, 719, 868], "csd_array_fouri": [698, 703, 704, 705, 706, 707, 868, 878], "csd_array_multitap": [698, 702, 703, 705, 706, 707, 868, 878], "csd_array_morlet": [698, 702, 704, 705, 706, 707, 868, 878], "as_cov": 698, "pack": 698, "pick_frequ": 698, "read_csd": [698, 868, 878], "getitem_epochspectrum_return": 699, "ci_alpha": [699, 701], "read_spectrum": [699, 701, 868], "latex": [699, 701], "pertin": 700, "12676": 700, "getitem_spectrum_return": 701, "sixth": 701, "subscript": 701, "freq_indic": 701, "half_nbw": 709, "kmax": 709, "sym": [709, 878], "nw": 709, "half_bw": 709, "bw": 709, "f0": 709, "tridiagon": 709, "jw": 710, "jnw": 710, "tx": 712, "n_step": [712, 720, 745], "_cycl": [713, 723, 724, 725, 727, 728], "morlet2": [713, 723], "sp_morlet": [713, 723], "this_fwhm": [713, 723], "wavelet_sp": [713, 723], "half_max": [713, 723], "n_taper": [715, 725], "get_window": [716, 799], "istft": [720, 721, 868, 878], "stftfreq": [720, 868], "epoch_data": [724, 725], "avg_power_itc": [724, 725], "power_": [724, 725], "tfr_array_multitap": [724, 726, 727, 728, 729, 868, 878], "tfr_array_stockwel": [724, 725, 727, 728, 729, 868, 878], "interrel": [724, 725, 727, 728, 844], "strive": [725, 728, 859], "finer": [725, 728, 878], "undermin": [725, 728], "intertri": [726, 729], "st_power": 726, "from_str": 732, "to_str": 732, "reg_img": 733, "trans2": 734, "niter": [735, 878], "affine_registr": 735, "rot_to_quat": [736, 868], "quat_to_rot": [738, 868], "contextlib": 739, "contextmanag": 739, "my_fnam": 739, "decor": [741, 743], "moin": 741, "pythondecoratorlibrari": 741, "sentenc": 741, "futurewarn": [741, 837, 878], "ignore_namespac": 742, "namespac": [742, 837, 868, 878], "travers": 742, "_funct": 743, "filler": 743, "5880": 743, "offscreen": 745, "subject_id": [745, 878], "buggi": 745, "soon": [745, 854, 859, 860], "add_skul": 745, "remove_data": 745, "remove_dipol": [745, 878], "remove_forward": [745, 878], "remove_head": 745, "remove_label": 745, "remove_annot": 745, "remove_sensor": 745, "remove_skul": 745, "remove_text": 745, "remove_volume_label": 745, "timeview": 745, "get_picked_point": 745, "geo": 745, "ctab": 745, "lh_ctab": 745, "rh_ctab": 745, "rbga": 745, "icefir": 745, "rocket": 745, "nvtx": 745, "thrown": [745, 878], "font": [745, 804], "add_scalar_bar": 745, "title_font_s": 745, "hex": [745, 769], "map_surfac": [745, 878], "n_coord": 745, "stereotax": 745, "coord_as_vert": 745, "1cm": 745, "subdir": 745, "reset_camera": [745, 813], "max_dist": 745, "justif": 745, "update_text": 745, "fill_hole_s": [745, 878], "hole": [745, 878], "dilat": 745, "apply_auto_sc": 745, "clear_glyph": 745, "cleanup": [745, 866], "widget": [745, 747, 878], "get_view": [745, 878], "zenith": [745, 813], "plot_time_cours": 745, "vertex_id": 745, "plot_time_lin": 745, "reset_view": 745, "restore_user_sc": 745, "bitrat": 745, "imageio": 745, "mov": 745, "interp1d": 745, "slinear": 745, "quadrat": 745, "n_frame": 745, "separate_canva": 745, "set_data_smooth": 745, "set_playback_spe": 745, "playback": 745, "set_tim": [745, 878], "set_time_interpol": 745, "set_time_point": 745, "time_idx": 745, "setup_time_view": 745, "rear": [745, 833], "time_interpol": 745, "toggle_interfac": 745, "toggle_playback": 745, "update_lut": 745, "imdata": 746, "onclick": 746, "backend_bas": 746, "bg": [746, 748], "set_ratio": 748, "ax_im": 748, "node_nam": 750, "start_between": 750, "group_sep": 750, "n_node_nam": 750, "fname_1": 753, "fname_2": 753, "show_fiff": [753, 868, 878], "smooth_shad": [754, 811], "_render": 754, "undocu": 754, "backend_us": [755, 757], "gen": 758, "ch_dx": 758, "teal": 760, "onselect": [762, 807], "rectangleselector": [762, 807], "show_indic": 763, "show_orient": [763, 878], "colorbarbas": 764, "polarax": 767, "type_snr": 768, "type_pow": 768, "type_resid": 768, "truncate_xaxi": [769, 878], "invert_i": 769, "unweight": 769, "inset": [769, 878], "n_evok": 769, "hexadecim": 769, "equal_spac": 778, "1f77b4": 786, "fscale": [786, 793], "alim": [786, 793], "pointsiz": 801, "bet": 801, "bluish": 802, "brain_color": [804, 878], "fig_numb": 804, "cone": 804, "axesimag": 807, "contourset": 807, "fieldlin": 807, "mixedvectorsourceestim": [808, 868, 878], "backend_nam": [810, 814, 816, 817], "old_backend_nam": [810, 814], "plot_evoked_field": [810, 868, 878], "link_brain": [810, 868, 878], "inlin": [810, 835, 841], "jupyterlab": 810, "colab": 810, "antialia": [811, 835], "depth_peel": 811, "multi_sampl": 811, "plot_epoch": [814, 837, 868, 878], "plot_ica_sourc": [814, 868, 878], "hide_sensor": 815, "dn": 815, "max_peak_dist": 818, "voxels_max": 818, "use_min": 818, "subject_dir_from": 818, "image_from": 818, "image_to": 818, "hsv": 828, "table_nam": 828, "colort": 828, "create_stamp": 831, "vocabulari": [833, 861], "textual": [833, 878], "spindl": 833, "acronym": [833, 861], "definion": 833, "mv": [833, 878], "\u00b5m": 833, "od": 833, "dealt": 833, "synapt": 833, "intracellular": 833, "pyramid": [833, 860], "perpendicularli": 833, "erron": [833, 878], "peculiar": 833, "encapsul": [833, 860], "hcpmmp": [833, 878], "gave": [833, 878], "cartoon": 833, "pependicular": 833, "laser": 833, "ga": 833, "rubidium": 833, "superconduct": 833, "quantum": 833, "scaleogram": 833, "uncorrel": 833, "nb_conda_kernel": 835, "anaconda": [835, 837, 841, 842, 848, 878], "forum": [835, 836, 837, 840, 843, 844, 854, 856, 857, 858], "osmesa": 835, "xvfb": 835, "forg": [835, 837, 841, 845], "mesalib": 835, "latest": [835, 837, 845, 857, 878], "git": [835, 844], "miniconda": [835, 837], "miniforg": 835, "pythonpath": 835, "pythonhom": 835, "curl": [835, 837], "githubusercont": [835, 837], "unabl": [835, 859, 878], "nvidia": [835, 857], "proprietari": [835, 859], "driver": 835, "init_cuda": [835, 868], "pytest": [835, 837], "test_filt": 835, "multithread": [835, 857], "swr": 835, "cento": 835, "spyder": [835, 837, 840, 841, 857], "mesa_gl_version_overrid": 835, "rend": 835, "msaa": 835, "antialias": [835, 878], "set_3d_opt": [835, 868, 878], "incomplet": [835, 866, 878], "prebuilt": 835, "xzvf": 835, "mesa_18": 835, "6_centos_lib": 835, "tgz": 835, "libgl_drivers_path": 835, "pwd": 835, "ld_library_path": 835, "went": [835, 836], "glxinfo": 835, "grep": [835, 837, 845], "uninstal": [835, 845], "cach": [835, 845], "gcp": 836, "travi": [836, 878], "virtualenv": 836, "8dfaa4a": 836, "bla": 836, "lapack": 836, "f614064": 836, "qtagg": 836, "post1": 836, "pyside6": 836, "modulenotfounderror": 836, "bashrc": [836, 842, 843], "zprofil": [836, 842], "zsh": [836, 842, 843], "troubleshoot": [836, 856, 858], "sustain": [837, 859], "volunt": 837, "welcom": 837, "anyon": [837, 859], "abid": 837, "fastest": [837, 843], "feel": [837, 844, 859, 878], "upstream": 837, "desktop": 837, "appreci": 837, "sudo": [837, 838, 843], "apt": [837, 838], "dmg": [837, 843], "atlassian": 837, "macport": [837, 843], "homebrew": [837, 843], "yourdomain": 837, "sooner": 837, "commit": [837, 859, 866, 878], "emac": 837, "vim": 837, "nano": 837, "subl": 837, "makefil": 837, "newest": 837, "guil": 837, "w32": 837, "ezwinport": 837, "path_to_git": 837, "mingw64": 837, "mnedev": 837, "path_to_anaconda": 837, "team": [837, 859], "yml": 837, "github_usernam": 837, "insert_your_actual_github_username_her": 837, "install_loc": 837, "opt": [837, 841, 842, 843], "site_packag": 837, "requirements_test": 837, "requirements_doc": 837, "graphviz": 837, "graphviz_dot": 837, "conda_prefix": 837, "optipng": 837, "linter": 837, "restructuredtext": 837, "autobuild": 837, "doc8": 837, "url_of_remote_repo": 837, "nickname_of_remot": 837, "repo": [837, 859], "undoubtedli": 837, "checkout": 837, "colleagu": 837, "unstag": 837, "some_fil": 837, "some_new_fil": 837, "entireti": 837, "some_other_fil": 837, "bypass": [837, 878], "enh": 837, "some_testing_fil": 837, "new_tutorial_fil": 837, "stuck": 837, "secur": [837, 843], "secret": 837, "client": [837, 878], "test_evok": 837, "python_refer": 837, "rst": 837, "my_funct": 837, "my_new_funct": 837, "old_param": 837, "new_param": 837, "my_other_funct": 837, "depr_messag": 837, "changeset": 837, "minor": [837, 863, 866, 878], "typo": [837, 856, 878], "subsect": 837, "bugfix": [837, 845], "happi": 837, "credit": 837, "gh": [837, 878], "newcontrib": [837, 878], "firstnam": 837, "lastnam": 837, "_your": 837, "test_topo": 837, "pep": 837, "pep8": 837, "pyflak": 837, "flake8": 837, "flake": 837, "ins": 837, "camelcas": [837, 868], "snake_cas": 837, "nsampl": 837, "complic": [837, 878], "sphinxcontrib": 837, "bibtex": [837, 852], "citat": [837, 878], "bibliograph": 837, "bib": 837, "singleauthor2019": 837, "authoroneauthortwo2020": 837, "firstauthoretal2021a": 837, "firstauthoretal2021b": 837, "param_nam": 837, "test_docstring_paramet": 837, "docstyl": 837, "glossari": [837, 861], "mod": 837, "intersphinx": 837, "inventori": 837, "sphobjinv": 837, "dump": 837, "ext": 837, "backtick": [837, 857], "pdb": 837, "debugg": [837, 878], "test_io_evok": 837, "imit": 837, "html_dev": 837, "noplot": 837, "regex_to_select_my_tutori": 837, "unrel": 837, "browse_raw": [837, 878], "mortem": 837, "pm": 837, "everyon": 837, "scientist": [837, 841, 856], "spare": 837, "streamlin": 837, "collabor": [837, 844, 859], "fruit": 837, "road": 837, "someon": 837, "occasion": [837, 854], "cosmet": 837, "backport": [837, 878], "whats_new": 837, "draft": 837, "wip": 837, "mrg": 837, "sty": 837, "azp": 837, "azur": 837, "exemplifi": 837, "tcsh": [838, 842, 843], "ubuntu": [838, 840, 843, 866], "bionic": 840, "beaver": 840, "1_0": 840, "intel": [840, 857], "catalina": [840, 842, 878], "silicon": 840, "studio": [840, 841], "python_1": 840, "0_1": 840, "mamba": 841, "prioriti": 841, "h5io": [841, 857], "h5py": [841, 857], "pymatread": [841, 878], "vscode": 841, "microsoft": 841, "anaconda3": [841, 842], "pyqt5": 841, "pyqt": [841, 878], "pycharm": [841, 857], "paid": 841, "profession": 841, "cmd": 842, "bash_profil": 842, "__conda_setup": 842, "overflow": [842, 878], "leopard": 843, "powerpc": 843, "runtim": 843, "mne_convert_mne_data": 843, "mne_epochs2mat": [843, 863], "mne_raw2mat": 843, "mne_simu": 843, "xcode": 843, "xquartz": 843, "x11": 843, "libxt": 843, "dylib": 843, "bak": 843, "flat_namespac": 843, "netpbm": 843, "brew": 843, "app": 843, "nightli": [843, 878], "path_to_desired_install_loc": 843, "zxvf": 843, "path_to_archive_fil": 843, "pkg": 843, "untrust": 843, "privaci": [843, 859], "mne_root": [843, 860, 863, 878], "matlab_root": 843, "r2018b": 843, "undefin": 843, "mne_setup_sh": 843, "csh": 843, "mne_setup": [843, 863], "path_to_mn": 843, "path_to_matlab": 843, "emul": 843, "zshrc": 843, "cshrc": 843, "tcshrc": 843, "setenv": [843, 848], "mne_opengl_test": 843, "redraw": 843, "spent": 843, "revolut": 843, "interrupt": 843, "glx": 843, "nondirect": 843, "IT": 843, "vnc": 843, "card": [843, 878], "libxp": 843, "libxp6": 843, "debian": [843, 866, 878], "dpkg": 843, "libxp6_1": 843, "1ubuntu1_amd64": 843, "deb": 843, "libgfortran": 843, "libfortran": 843, "gnu": 843, "maxdepth": 843, "interoper": 844, "reimplement": 844, "cpp": [844, 878], "connectom": [844, 866], "compli": [844, 878], "alphacsc": 844, "pactool": 844, "microst": 844, "conpi": 844, "eelbrain": 844, "posthoc": 844, "prep": 844, "pyprep": 844, "sesam": 844, "sesameeg": 844, "invertmeeg": 844, "unix": [844, 878], "name_of_environ": 845, "fool": 845, "proof": 845, "old_mn": 845, "dep": 845, "hm": [848, 854], "pubsw": 848, "subscrib": 848, "modular": 849, "qt3d": 849, "babymeg": 849, "tmsi": 849, "refa": 849, "brainamp": 849, "ant": 849, "eegosport": 849, "gusbamp": 849, "gramfortetal2013a": 852, "gramfortetal2014": 852, "bibliographi": 852, "meg2443": 853, "vanish": 853, "advers": 853, "preliminari": 853, "stamp": 853, "mm2": 853, "ico5": 853, "tessel": [853, 863], "prerequisit": 853, "bulletproof": 853, "feasibl": 853, "sep": 853, "bem_sol": 853, "reestablish": 853, "corregistr": 853, "charg": 853, "photograph": 853, "uninterest": 853, "epilept": 853, "infrequ": 853, "hesit": [854, 857], "siemen": [854, 860], "sonata": 854, "mprage": [854, 857, 860], "interspers": 854, "lv": 854, "audvis_raw": 854, "auvi": 854, "agre": 854, "bst_rest": [854, 868], "khz": 854, "dicom": [854, 863, 878], "richli": 854, "timon": [854, 878], "9999": 854, "msr": 854, "retrospect": 854, "satisfactori": 854, "chin": 854, "respir": [854, 860, 863], "hypnogram": 854, "rechtschaffen": 854, "kale": 854, "erlangen": 854, "germani": 854, "pend": 854, "craft": 854, "lrp": 854, "ern": 854, "neuroscientist": 855, "keystrok": 855, "peak_find": [855, 868, 878], "appnop": 857, "nope": 857, "nsappsleepdis": 857, "tempt": 857, "benfrederickson": 857, "dont": 857, "stackoverflow": 857, "21752259": 857, "write_": 857, "resid": 857, "plot_find_ecg_artifact": 857, "ordinarili": 857, "mkl": 857, "openmp": 857, "omp_num_thread": 857, "openblas_num_thread": 857, "num_cpu": 857, "implic": 857, "simplist": 857, "gpu": [857, 878], "epochs_path": 857, "protrud": 857, "shrunken": 857, "mri_norm": 857, "xopt": 857, "gentl": 857, "listserv": 857, "recon_al": 857, "autorecon2": 857, "autorecon3": 857, "formal": 859, "extraordinari": 859, "clarifi": [859, 878], "profit": 859, "entiti": [859, 863], "openli": 859, "affili": 859, "discours": 859, "behalf": 859, "barrier": 859, "leadership": 859, "neutral": 859, "tradition": [859, 860], "reward": 859, "benevol": 859, "dictat": 859, "defer": 859, "vote": 859, "deadlock": 859, "fork": 859, "disagre": 859, "deleg": 859, "appoint": 859, "successor": 859, "faith": 859, "director": 859, "ceo": [859, 878], "everydai": 859, "peer": 859, "privileg": 859, "servic": [859, 878], "scope": 859, "strateg": 859, "polici": [859, 878], "nomin": 859, "willing": 859, "capac": 859, "infrastructur": [859, 878], "outreach": 859, "deliber": 859, "divers": 859, "viewpoint": 859, "talent": 859, "grace": 859, "retir": 859, "eject": 859, "deem": 859, "harm": 859, "financi": 859, "employ": 859, "disclos": 859, "recus": 859, "themself": 859, "sparingli": 859, "apach": 859, "veto": 859, "rational": 859, "opinion": 859, "anticip": [859, 878], "suffic": 859, "usurp": 859, "countri": 859, "gift": 859, "partnership": 859, "approv": 859, "commenc": 859, "laps": 859, "pursu": 859, "monei": 859, "donor": 859, "umbrella": 859, "trademark": 859, "invit": 859, "waiv": 859, "copyright": 859, "mole": 860, "sensibl": 860, "femtotesla": 860, "typecast": 860, "unread": [860, 878], "electrocardiographi": 860, "electromyographi": 860, "celsiu": 860, "channels_3_and_4": 860, "boldsymbol": 860, "c_0": 860, "g_": 860, "infti": 860, "r_j": 860, "t_d": 860, "underbrac": 860, "b_": 860, "b_n": 860, "dotso": 860, "uc_n": 860, "constitut": 860, "orthonorm": 860, "c_e": 860, "complement": 860, "perp": 860, "uu": 860, "segonn": 860, "_brain_surfac": 860, "_inner_skull_surfac": 860, "_outer_skull_surfac": 860, "_outer_skin_surfac": 860, "availablili": 860, "fov": 860, "dcm2niix": 860, "mne_organize_dicom": 860, "flash05": 860, "fat32": 860, "mri_ms_fitparm": 860, "mri_synthes": 860, "fsl_rigid_regist": 860, "flash5_reg": 860, "cor": 860, "mri_make_bem_surfac": 860, "tringul": 860, "t_x": 860, "ti": 860, "mm3": 860, "mnitalairach": 860, "mni305": 860, "y_2": 860, "z_2": 860, "y_1": 860, "z_1": 860, "x_0": 860, "y_0": 860, "z_0": 860, "x_k": 860, "y_k": 860, "z_k": 860, "jk": 860, "9688": [860, 878], "0485": 860, "9189": 860, "t_1": 860, "s_1": 860, "s_n": 860, "t_2": 860, "filessepar": 860, "t_3": 860, "mghformat": 860, "t_4": 860, "hardcod": 860, "idiosyncrasi": 860, "conceiv": 860, "s_p": 860, "50mm": 860, "r_0": 860, "e_x": 860, "e_i": 860, "e_z": 860, "r_c": 860, "r_d": 860, "0d": 860, "n_k": 860, "w_": 860, "kp": 860, "sixteen": 860, "tm": [860, 863, 878], "centerpoint": 860, "mne_list_coil_def": 860, "3012": 860, "8mm": 860, "3013": 860, "4001": 860, "wh": 860, "3600": 860, "4003": 860, "4005": 860, "5001": 860, "5002": 860, "5004": 860, "6001": 860, "diamet": 860, "nx": 860, "ny": 860, "nz": [860, 878], "r_1": 860, "dotsc": 860, "r_m": 860, "mu_1": 860, "mu_m": 860, "int_": 860, "v_": 860, "ly": 860, "average_forward_solut": [860, 868], "ensu": 860, "posteriori": 860, "viabl": 860, "3p": 860, "unconstrain": 860, "mx": 860, "smoother": [860, 878], "arriv": 860, "bigl": 860, "bigr": 860, "u_c": 860, "lambda_c": 860, "grg": 860, "possess": 860, "varepsilon_k": 860, "sigma_k": 860, "rout": 860, "superscript": 860, "v_k": 860, "w_k": 860, "propto": 860, "dimensionless": 860, "tendenc": 860, "divis": [860, 878], "2_k": 860, "g_i": 860, "u_": 860, "lambda_": 860, "_i": 860, "noiseless": 860, "misfit": 860, "pi_k": 860, "recolor": 860, "eigenfield": 860, "n_d": 860, "a_d": 860, "postsynapt": 860, "microscop": 860, "rigidli": 860, "floc": 860, "thereaft": 860, "vloc": 860, "favor": [860, 878], "1p": 860, "2p": 860, "l_": 860, "eff": 860, "w_i": 860, "x_i": 860, "c_y": 860, "l_i": 860, "w_1": 860, "w_2": 860, "l_1": 860, "l_2": 860, "supposedli": 860, "x_j": 860, "t_j": 860, "biject": 860, "smudg": 860, "n_j": 860, "prod_": 860, "kindli": 861, "function_nam": 861, "w3school": 862, "carpentri": 862, "lesson": 862, "fiff_": 863, "startup": 863, "mne_ex": 863, "fiff_setup_read_raw": 863, "fiff_read_raw_seg": 863, "fiff_find_evok": 863, "fiff_read_bad_channel": 863, "fiff_read_ctf_comp": 863, "fiff_read_evok": 863, "fiff_read_evoked_al": 863, "fiff_read_meas_info": 863, "fiff_read_mri": 863, "fiff_read_proj": 863, "fiff_read_raw_segment_tim": 863, "fiff_pick_channel": 863, "fiff_pick_channels_evok": 863, "fiff_pick_info": 863, "fiff_pick_typ": 863, "fiff_pick_types_evok": 863, "fiff_invert_transform": 863, "fiff_reset_ch_po": 863, "fiff_transform_eeg_ch": 863, "fiff_transform_meg_ch": 863, "fiff_define_const": 863, "fiff_dir_tree_find": 863, "fiff_list_dir_tre": 863, "fiff_make_dir_tre": 863, "fiff_open": 863, "fiff_read_named_matrix": 863, "fiff_read_tag": 863, "fiff_read_tag_info": 863, "fiff_split_name_list": 863, "fiff_end_block": 863, "fiff_end_fil": 863, "fiff_start_block": 863, "fiff_start_fil": 863, "fiff_write_ch_info": 863, "fiff_write_coord_tran": 863, "fiff_write_ctf_comp": 863, "fiff_write_dig_point": 863, "fiff_write_complex": 863, "fiff_write_complex_matrix": 863, "fiff_write_doubl": 863, "fiff_write_double_complex": 863, "fiff_write_double_complex_matrix": 863, "fiff_write_double_matrix": 863, "fiff_write_evok": 863, "repons": 863, "fiff_write_float": 863, "fiff_write_float_matrix": 863, "fiff_write_id": 863, "fiff_write_int": 863, "fiff_write_int_matrix": 863, "fiff_write_name_list": 863, "fiff_write_named_matrix": 863, "fiff_write_proj": 863, "fiff_write_short": 863, "fiff_write_str": 863, "fiff_finish_writing_raw": 863, "fiff_start_writing_raw": 863, "fiff_write_dig_fil": 863, "fiff_write_raw_buff": 863, "mne_add_coil_def": 863, "mne_load_coil_def": 863, "mne_compensate_to": 863, "mne_get_current_comp": 863, "mne_make_compens": 863, "mne_make_projector_info": 863, "mne_make_projector": 863, "mne_set_current_comp": 863, "mne_pick_channels_cov": 863, "mne_pick_channels_forward": 863, "mne_read_bem_surfac": 863, "mne_read_cov": 863, "mne_read_epoch": 863, "mne_read_ev": 863, "mne_read_forward_solut": 863, "mne_read_inverse_oper": 863, "mne_read_morph_map": 863, "mne_read_noise_cov": 863, "mne_read_source_spac": 863, "mne_write_cov": 863, "mne_write_cov_fil": 863, "mne_write_ev": 863, "mne_write_inverse_sol_stc": 863, "mne_write_inverse_sol_w": 863, "mne_read_stc_fil": 863, "mne_read_stc_file1": 863, "mne_read_w_fil": 863, "mne_read_w_file1": 863, "mne_write_stc_fil": 863, "mne_write_stc_file1": 863, "mne_write_w_fil": 863, "mne_write_w_file1": 863, "mne_read_label_fil": 863, "mne_write_label_fil": 863, "mne_label_time_cours": 863, "mne_read_curvatur": 863, "mne_read_surfac": 863, "mne_reduce_surfac": 863, "reducepatch": 863, "mne_write_surfac": 863, "mne_block_diag": 863, "mne_combine_xyz": 863, "mne_file_nam": 863, "mne_find_channel": 863, "mne_find_source_space_hemi": 863, "mne_fread3": 863, "mne_fwrite3": 863, "mne_make_combined_event_fil": 863, "mne_omit_first_lin": 863, "mne_setup_toolbox": 863, "mne_transform_coordin": 863, "mne_collect_transform": 863, "mne_transpose_named_matrix": 863, "mne_transform_source_space_to": 863, "mne_ex_average_epoch": 863, "mne_ex_cancel_nois": 863, "mne_ex_compute_invers": 863, "mne_ex_data_set": 863, "mne_ex_evoked_grad_amp": 863, "mne_ex_read_epoch": 863, "mne_ex_read_evok": 863, "mne_ex_read_raw": 863, "mne_ex_read_write_raw": 863, "mne_copy_processing_histori": 863, "revis": 863, "coil_geometry_inform": 863, "fiffb_meas_info": 863, "mne_compute_raw_invers": 863, "fiffv_meg_ch": 863, "fiffv_ref_meg_ch": 863, "fiffv_eef_ch": 863, "fiffv_mcg_ch": 863, "mcg": 863, "fiffv_stim_ch": 863, "fiffv_eog_ch": 863, "fiffv_emg_ch": 863, "fiffv_ecg_ch": 863, "fiffv_misc_ch": 863, "fiffv_resp_ch": 863, "fiffv_coord_unknown": 863, "fiffv_coord_devic": 863, "fiffv_coord_isotrak": 863, "fiffv_coord_hpi": 863, "fiffv_coord_mri_slic": 863, "fiffv_coord_mri_displai": 863, "fiffv_coord_dicom_devic": 863, "fiffv_coord_imaging_devic": 863, "fiffv_mne_coord_tufts_eeg": 863, "tuft": 863, "fiffv_mne_coord_ctf_devic": 863, "1001": 863, "fiffv_mne_coord_ctf_head": 863, "1004": 863, "fiffv_aspect_averag": 863, "fiffv_aspect_std_err": 863, "fiffv_aspect_singl": 863, "fiffv_aspect_subaverag": 863, "fiffv_aspect_altaverag": 863, "fiffv_aspect_sampl": 863, "fiffv_aspect_power_dens": 863, "fiffv_aspect_dipole_wav": 863, "fiffv_bem_surf_id_unknown": 863, "fiffv_bem_surf_id_brain": 863, "fiffv_bem_surf_id_skul": 863, "fiffv_bem_surf_id_head": 863, "fiffv_point_hpi": 863, "fiffv_point_ecg": 863, "fiffv_point_extra": 863, "fiffv_point_lpa": 863, "fiffv_point_rpa": 863, "fiffv_mne_meg": 863, "fiffv_mne_eeg": 863, "fiffv_mne_meg_eeg": 863, "fiffv_mne_unknown_cov": 863, "fiffv_mne_noise_cov": 863, "fiffv_mne_sensor_cov": 863, "fiffv_mne_source_cov": 863, "fiffv_mne_fmri_prior_cov": 863, "fiffv_mne_signal_cov": 863, "fiffv_mne_depth_prior_cov": 863, "fiffv_mne_orient_prior_cov": 863, "fiffv_proj_item_non": 863, "fiffv_proj_item_dip_fix": 863, "fiffv_proj_item_dip_rot": 863, "fiffv_proj_item_homog_grad": 863, "fiffv_proj_item_homog_field": 863, "fiffv_proj_item_eeg_avref": 863, "uint32": 863, "parent_id": 863, "nent": 863, "nchild": 863, "1970": [863, 878], "fiffv_coord": 863, "fiffv_mne_coord": 863, "fiff_point": 863, "num_point": 863, "char": [863, 878], "fv": 863, "struct": 863, "fiff_eeg_ch": 863, "coil_tran": 863, "eeg_loc": 863, "six": 863, "10unit_mul": 863, "fiffv_proj_item": 863, "fiffv_mne_proj_item": 863, "decalibr": 863, "row_cal": 863, "col_cal": 863, "tri_area": 863, "tri_cent": 863, "centroid": 863, "tri_nn": 863, "mne_add_patch_info": 863, "sol_grad": 863, "sing": 863, "eigen_lead": 863, "eigen_field": 863, "source_cov": 863, "cond1": 864, "cond2": 864, "addpath": 864, "pop_fileio": 864, "pop_eegfiltnew": 864, "pop_averef": 864, "pop_select": 864, "pop_runica": 864, "pop_binica": 864, "pop_compprop": 864, "comp_num": 864, "winhandl": 864, "comphead": 864, "pop_selectcomp": 864, "list_of_components_to_exclud": 864, "pop_epoch": 864, "eeg_epoch": 864, "pop_timtopo": 864, "pop_compareerp": 864, "eeg_epochs1": 864, "eeg_epochs2": 864, "pop_saveset": 864, "lfreq": 864, "hfreq": 864, "filtered_raw": 864, "bdfl": 865, "nutmegtrip": 866, "youtub": [866, 878], "cluster_based_statist": 866, "patsi": 866, "dmatric": 866, "4859": 866, "2852": 866, "3585": 866, "openneuro": 866, "6687": 866, "adult": 866, "dcm": 866, "kymata": 866, "watch": 866, "bnci": 866, "horizon": 866, "pde": 866, "swig": 866, "ambit": 866, "useless": 866, "recruit": 866, "8221": 866, "rudimentari": 866, "crossspectrum": 866, "multitaperspectrum": 866, "6290": 866, "7671": 866, "8026": 866, "8724": 866, "9045": 866, "pr": 866, "6609": 866, "6629": 866, "6672": 866, "6673": 866, "8397": 866, "8892": 866, "mnefun": 866, "ptfce": 866, "mayavi": [866, 878], "7162": 866, "cloud": 866, "dask": 866, "czi": 866, "7751": 866, "docker": 866, "underscore_cas": 868, "themat": 868, "read_raw_curri": [868, 878], "read_raw_nedf": [868, 878], "read_mrk": 868, "get_meg_helmet_surf": 868, "get_volume_labels_from_src": [868, 878], "parse_config": 868, "read_evoked_besa": [868, 878], "read_evokeds_mff": [868, 878], "read_morph_map": [868, 878], "read_reject_paramet": 868, "write_label": 868, "export_epoch": [868, 878], "export_evok": [868, 878], "add_background_imag": 868, "compare_fiff": 868, "mne_analyze_colormap": 868, "plot_csd": 868, "plot_epochs_psd_topomap": [868, 878], "plot_evok": [868, 878], "plot_evoked_topomap": [868, 878], "plot_evoked_joint": [868, 878], "plot_ica_properti": [868, 878], "plot_ica_scor": [868, 878], "plot_ica_overlai": [868, 878], "plot_montag": [868, 878], "plot_raw_psd": [868, 878], "plot_regression_weight": [868, 878], "plot_volume_source_estim": [868, 878], "plot_tfr_topomap": [868, 878], "plot_topo_image_epoch": [868, 878], "get_3d_backend": [868, 878], "use_3d_backend": [868, 878], "close_3d_figur": 868, "close_all_3d_figur": 868, "get_browser_backend": [868, 878], "equalize_channel": [868, 878], "annotate_nan": [868, 878], "compute_fine_calibr": [868, 878], "compute_maxwell_basi": [868, 878], "ica_find_ecg_ev": 868, "ica_find_eog_ev": 868, "equalize_bad": [868, 878], "maxwell_filter_prepare_emptyroom": [868, 878], "read_eog_regress": 868, "realign_raw": [868, 878], "regress_artifact": [868, 878], "read_ica_eeglab": [868, 878], "read_fine_calibr": 868, "write_fine_calibr": 868, "short_channel": [868, 878], "estimate_ringing_sampl": 868, "extract_chpi_locs_kit": [868, 878], "concatenate_ev": 868, "count_ev": [868, 878], "match_event_nam": [868, 878], "shift_time_ev": [868, 878], "pick_channels_cov": 868, "compute_whiten": [868, 878], "write_fiduci": 868, "create_default_subject": [868, 878], "head_to_mni": 868, "head_to_mri": [868, 878], "add_source_space_dist": [868, 878], "decimate_surfac": [868, 878], "complete_surface_info": 868, "distance_to_bem": [868, 878], "compute_rank_invers": 868, "read_beamform": [868, 878], "grade_to_tri": 868, "grade_to_vertic": 868, "grow_label": [868, 878], "random_parcel": 868, "transform_surface_to": [868, 878], "get_decimated_surfac": [868, 878], "pick_channels_csd": 868, "dpss_window": [868, 878], "cwt": 868, "ttest_ind_no_p": [868, 878], "spatial_dist_adjac": [868, 878], "spatial_tris_adjac": [868, 878], "spatial_inter_hemi_adjac": [868, 878], "spatio_temporal_src_adjac": [868, 878], "spatio_temporal_dist_adjac": [868, 878], "select_source_in_label": 868, "psdestim": 868, "timefrequ": [868, 878], "open_doc": [868, 878], "set_log_fil": 868, "get_cuda_memori": 868, "set_cuda_devic": [868, 878], "11469": 878, "sawradip": 878, "saha": 878, "11458": 878, "binn": 878, "11465": 878, "hyonyoung": 878, "shin": 878, "11366": 878, "11470": 878, "ebert": 878, "scheltienn": 878, "11397": 878, "11401": 878, "11407": 878, "11388": 878, "11556": 878, "11419": 878, "11430": 878, "11440": 878, "11436": 878, "microelectrod": 878, "11567": 878, "11479": 878, "stone": 878, "setuptool": 878, "11454": 878, "arn": 878, "pelzer": 878, "sanit": 878, "11399": 878, "splash": 878, "11398": 878, "11402": 878, "11421": 878, "11427": 878, "11441": 878, "11450": 878, "11489": 878, "inconsist": 878, "11473": 878, "11499": 878, "11409": 878, "11537": 878, "11562": 878, "11563": 878, "11521": 878, "11569": 878, "11502": 878, "gerster": 878, "11500": 878, "aligned_ct": 878, "11333": 878, "tooma": 878, "anij\u00e4rv": 878, "11237": 878, "11236": 878, "11241": 878, "jevri": 878, "repr": 878, "11357": 878, "11359": 878, "11096": 878, "11353": 878, "11283": 878, "11329": 878, "11375": 878, "hennei": 878, "11310": 878, "santeri": 878, "ruuskanen": 878, "11289": 878, "mauricio": 878, "cesped": 878, "tenorio": 878, "11235": 878, "hasegan": 878, "11245": 878, "dinara": 878, "issagaliyeva": 878, "jennif": 878, "behnk": 878, "hakimeh": 878, "aslsardroud": 878, "pavel": 878, "navratil": 878, "ear_left": 878, "ear_right": 878, "11255": 878, "11263": 878, "torr": 878, "ortiz": 878, "11351": 878, "enzo": 878, "altamiranda": 878, "reject_": 878, "11244": 878, "11303": 878, "11290": 878, "wrongli": 878, "11248": 878, "11258": 878, "erkka": 878, "heinila": 878, "outli": 878, "11298": 878, "11345": 878, "11311": 878, "11300": 878, "11340": 878, "11318": 878, "11346": 878, "11344": 878, "errantli": 878, "11347": 878, "11293": 878, "11322": 878, "11369": 878, "11361": 878, "nowadai": 878, "interp_from": 878, "interp_kind": 878, "11371": 878, "brayet": 878, "luka": 878, "hecker": 878, "omer": 878, "shubi": 878, "merk": 878, "11073": 878, "10656": 878, "10784": 878, "11011": 878, "11006": 878, "6233": 878, "10986": 878, "11048": 878, "8639": 878, "11083": 878, "11051": 878, "11020": 878, "11075": 878, "valerii": 878, "chirkov": 878, "electroderm": 878, "11090": 878, "11108": 878, "19080": 878, "11099": 878, "11077": 878, "11094": 878, "11095": 878, "11186": 878, "eduard": 878, "ort": 878, "11116": 878, "11147": 878, "11150": 878, "11185": 878, "11154": 878, "11141": 878, "11232": 878, "11159": 878, "11196": 878, "gemein": 878, "unlabel": 878, "11074": 878, "sebastiaan": 878, "mathot": 878, "11072": 878, "chetan": 878, "gohil": 878, "11004": 878, "carlstr\u00f6m": 878, "schad": 878, "11190": 878, "wetzel": 878, "11019": 878, "sena": 878, "11049": 878, "11084": 878, "11145": 878, "11182": 878, "11040": 878, "marian": 878, "dovgialo": 878, "11171": 878, "11181": 878, "11193": 878, "11102": 878, "11081": 878, "11191": 878, "6870": 878, "simeon": 878, "11197": 878, "11212": 878, "11203": 878, "11201": 878, "h\u00fcseyin": 878, "orkun": 878, "elma": 878, "deprecationwarn": 878, "11123": 878, "11050": 878, "show_toolbar": 878, "10184": 878, "skirt": 878, "add_channels_epoch": 878, "11180": 878, "11046": 878, "welzel": 878, "luzpaz": 878, "10974": 878, "ilia": 878, "machaira": 878, "10942": 878, "tziona": 878, "nessaiv": 878, "10922": 878, "mingjian": 878, "he": 878, "10736": 878, "jordan": 878, "drew": 878, "10632": 878, "courtemanch": 878, "10515": 878, "alessandro": 878, "tonin": 878, "10555": 878, "powel": 878, "10627": 878, "evan": 878, "hathawai": 878, "10615": 878, "10501": 878, "10460": 878, "10544": 878, "10720": 878, "10464": 878, "10699": 878, "10534": 878, "10568": 878, "10567": 878, "10533": 878, "10557": 878, "10591": 878, "10571": 878, "10587": 878, "10125": 878, "benerradi": 878, "10606": 878, "10610": 878, "10614": 878, "10611": 878, "10633": 878, "10661": 878, "10668": 878, "10681": 878, "timeformat": 878, "yyyi": 878, "_convert_tim": 878, "10674": 878, "kern": 878, "10694": 878, "10572": 878, "10373": 878, "10734": 878, "michiru": 878, "kaneda": 878, "10284": 878, "10749": 878, "10788": 878, "10892": 878, "10940": 878, "vref": 878, "10823": 878, "huberti": 878, "10979": 878, "_project_onto_surfac": 878, "return_nn": 878, "10930": 878, "10927": 878, "reza": 878, "nasri": 878, "hypnodyn": 878, "zmax": 878, "10754": 878, "frederik": 878, "weber": 878, "10718": 878, "t1t2": 878, "10639": 878, "toivonen": 878, "10217": 878, "wang": 878, "10517": 878, "10470": 878, "dold": 878, "10485": 878, "10487": 878, "10500": 878, "10491": 878, "10662": 878, "10866": 878, "10957": 878, "10513": 878, "10493": 878, "10504": 878, "10705": 878, "10521": 878, "10547": 878, "10543": 878, "10912": 878, "10560": 878, "10619": 878, "10618": 878, "shoorangiz": 878, "10638": 878, "10664": 878, "honor": 878, "10686": 878, "10685": 878, "10688": 878, "8754": 878, "10703": 878, "10730": 878, "10753": 878, "10765": 878, "po6": 878, "blender": 878, "10778": 878, "10802": 878, "10471": 878, "10851": 878, "10898": 878, "10990": 878, "10968": 878, "10936": 878, "10963": 878, "10978": 878, "10531": 878, "bilinear": 878, "set_interpol": 878, "10617": 878, "10715": 878, "10950": 878, "10925": 878, "10945": 878, "adelin": 878, "fecker": 878, "ciok": 878, "archit": 878, "singhal": 878, "ashlei": 878, "beaslei": 878, "dominiqu": 878, "makowski": 878, "hamid": 878, "maymandi": 878, "naveen": 878, "srinivasan": 878, "sondr": 878, "foslien": 878, "10396": 878, "10089": 878, "senwen": 878, "deng": 878, "10076": 878, "zerfowski": 878, "10054": 878, "etienn": 878, "montalivet": 878, "10174": 878, "veillett": 878, "10307": 878, "10281": 878, "9952": 878, "10379": 878, "9922": 878, "9978": 878, "9994": 878, "9929": 878, "concis": 878, "__repr__": 878, "10042": 878, "sosulski": 878, "10056": 878, "10077": 878, "10102": 878, "10058": 878, "10109": 878, "10115": 878, "10119": 878, "10114": 878, "10116": 878, "dpi": 878, "10126": 878, "10129": 878, "10135": 878, "10142": 878, "10166": 878, "10175": 878, "10182": 878, "10186": 878, "10185": 878, "9969": 878, "10019": 878, "10200": 878, "10255": 878, "10202": 878, "9972": 878, "10206": 878, "10220": 878, "10230": 878, "10249": 878, "10243": 878, "10212": 878, "ui": 878, "10222": 878, "10183": 878, "10247": 878, "10297": 878, "10299": 878, "10330": 878, "10384": 878, "10417": 878, "10418": 878, "10408": 878, "subsurfac": 878, "10421": 878, "joshua": 878, "teve": 878, "latin": 878, "10429": 878, "eberlein": 878, "10431": 878, "rawmff": 878, "10304": 878, "10361": 878, "shift_jist": 878, "10356": 878, "10093": 878, "adina": 878, "wagner": 878, "loadtxt": 878, "10189": 878, "federico": 878, "zamberlan": 878, "nikolai": 878, "chapochnikov": 878, "9957": 878, "led": 878, "9966": 878, "9998": 878, "9968": 878, "alphanumer": 878, "10002": 878, "9975": 878, "9980": 878, "9990": 878, "suboptim": 878, "9991": 878, "10004": 878, "9970": 878, "10021": 878, "10040": 878, "10358": 878, "10047": 878, "10399": 878, "10073": 878, "10087": 878, "annotate_": 878, "meas_tim": 878, "10067": 878, "10118": 878, "10074": 878, "10082": 878, "10112": 878, "trip": 878, "10177": 878, "10127": 878, "10132": 878, "10095": 878, "10176": 878, "stout": 878, "10210": 878, "10235": 878, "10267": 878, "german": 878, "de_d": 878, "french": 878, "fr_fr": 878, "italian": 878, "it_it": 878, "10277": 878, "10292": 878, "10309": 878, "10265": 878, "10415": 878, "initial_valu": 878, "10289": 878, "10324": 878, "10342": 878, "10347": 878, "10313": 878, "10400": 878, "10335": 878, "mislead": 878, "10393": 878, "10392": 878, "10401": 878, "9960": 878, "10039": 878, "10348": 878, "annotate_flat": 878, "10143": 878, "max_ori_out": 878, "10366": 878, "10323": 878, "tempita": 878, "10211": 878, "julia": 878, "guiomar": 878, "niso": 878, "gal\u00e1n": 878, "steve": 878, "matindi": 878, "hartmann": 878, "julien": 878, "derollepot": 878, "xiaokai": 878, "xia": 878, "bannier": 878, "darin": 878, "erat": 878, "sleiter": 878, "gate": 878, "evgeni": 878, "goldstein": 878, "riessariu": 878, "stargardski": 878, "9801": 878, "9575": 878, "nirsport2": 878, "9348": 878, "9401": 878, "9376": 878, "9430": 878, "9481": 878, "9637": 878, "9872": 878, "9782": 878, "9858": 878, "9640": 878, "6888": 878, "9892": 878, "9725": 878, "ckdtree": 878, "9568": 878, "9643": 878, "9369": 878, "9427": 878, "9391": 878, "9396": 878, "9424": 878, "9403": 878, "9463": 878, "9431": 878, "9443": 878, "9406": 878, "9438": 878, "datablock": 878, "acquist": 878, "9437": 878, "raimondo": 878, "9445": 878, "9419": 878, "9458": 878, "9444": 878, "9503": 878, "9484": 878, "9697": 878, "9468": 878, "9514": 878, "erica": 878, "9541": 878, "9519": 878, "9525": 878, "9529": 878, "9558": 878, "9555": 878, "9553": 878, "insens": 878, "9544": 878, "9556": 878, "9578": 878, "9570": 878, "9545": 878, "9540": 878, "9601": 878, "9605": 878, "abort": 878, "9614": 878, "9516": 878, "9618": 878, "9658": 878, "9585": 878, "9682": 878, "9684": 878, "9789": 878, "9694": 878, "9586": 878, "9742": 878, "9796": 878, "9763": 878, "9784": 878, "9810": 878, "revamp": 878, "9754": 878, "9847": 878, "9860": 878, "9861": 878, "9862": 878, "9863": 878, "9871": 878, "9881": 878, "9891": 878, "9795": 878, "9800": 878, "9613": 878, "9845": 878, "9851": 878, "9869": 878, "9859": 878, "9687": 878, "9708": 878, "9706": 878, "9378": 878, "9381": 878, "9712": 878, "9719": 878, "chronolog": 878, "9765": 878, "9849": 878, "9897": 878, "9920": 878, "9384": 878, "9404": 878, "9435": 878, "9531": 878, "9447": 878, "assertionerror": 878, "9612": 878, "9831": 878, "protect": 878, "9522": 878, "9485": 878, "9513": 878, "9489": 878, "9524": 878, "9603": 878, "9528": 878, "imposs": 878, "9893": 878, "9535": 878, "9564": 878, "9565": 878, "9629": 878, "9771": 878, "9607": 878, "9663": 878, "9630": 878, "9580": 878, "9758": 878, "dollar": 878, "9695": 878, "9746": 878, "9799": 878, "9804": 878, "9777": 878, "9780": 878, "9933": 878, "9864": 878, "9873": 878, "9940": 878, "9867": 878, "9904": 878, "pysurf": 878, "kit2fiff": 878, "mne_kit_gui": 878, "9505": 878, "9596": 878, "prox": 878, "outperform": 878, "9608": 878, "9493": 878, "9685": 878, "has_": 878, "_data": 878, "9781": 878, "add_figs_to_sect": 878, "add_slider_to_sect": 878, "add_images_to_sect": 878, "add_bem_to_sect": 878, "add_htmls_to_sect": 878, "sort_sect": 878, "9815": 878, "center_cmap": 878, "9843": 878, "detect_artifact": 878, "9909": 878, "fede": 878, "gansheng": 878, "banvil": 878, "josh": 878, "koen": 878, "sumalyo": 878, "datta": 878, "pade": 878, "koehler": 878, "rotem": 878, "falach": 878, "sanderson": 878, "enrico": 878, "varano": 878, "judi": 878, "zhu": 878, "matteo": 878, "anelli": 878, "apoorva": 878, "karek": 878, "silvia": 878, "cotroneo": 878, "maggi": 878, "9192": 878, "9285": 878, "9278": 878, "9124": 878, "9203": 878, "9174": 878, "refactor": 878, "9088": 878, "9156": 878, "9043": 878, "9096": 878, "8867": 878, "8739": 878, "9169": 878, "yokogawa": 878, "8813": 878, "8799": 878, "ipyvtk_simpl": 878, "8503": 878, "8346": 878, "8896": 878, "8723": 878, "8738": 878, "8789": 878, "9268": 878, "8790": 878, "8697": 878, "8801": 878, "8829": 878, "8744": 878, "8762": 878, "9037": 878, "8793": 878, "9262": 878, "keypress": 878, "8806": 878, "starstim": 878, "enobio": 878, "8734": 878, "tristan": 878, "stenner": 878, "8760": 878, "8783": 878, "8822": 878, "8771": 878, "8805": 878, "8794": 878, "auto_clos": 878, "8730": 878, "8841": 878, "yu": 878, "luo": 878, "8858": 878, "checker": 878, "pylanc": 878, "8862": 878, "8874": 878, "interobail": 878, "8868": 878, "qt_mac_wants_lay": 878, "8959": 878, "8879": 878, "8834": 878, "9023": 878, "9015": 878, "9087": 878, "9113": 878, "9118": 878, "9103": 878, "9175": 878, "9149": 878, "9166": 878, "bierer": 878, "9210": 878, "9136": 878, "9241": 878, "9261": 878, "9269": 878, "9270": 878, "9141": 878, "9347": 878, "misbehav": 878, "8013": 878, "9207": 878, "9187": 878, "9151": 878, "9162": 878, "9152": 878, "x_label": 878, "9115": 878, "9062": 878, "8989": 878, "spectral_connect": 878, "8839": 878, "8844": 878, "8311": 878, "macosx": 878, "8688": 878, "8983": 878, "superset": 878, "8675": 878, "8713": 878, "8689": 878, "8954": 878, "8884": 878, "num_sampl": 878, "duration_in_sec": 878, "8712": 878, "8780": 878, "8804": 878, "8842": 878, "8857": 878, "9315": 878, "8956": 878, "9284": 878, "9317": 878, "8845": 878, "8811": 878, "bailei": 878, "8736": 878, "8831": 878, "8728": 878, "8731": 878, "8996": 878, "8752": 878, "8759": 878, "8775": 878, "8800": 878, "8817": 878, "8821": 878, "8856": 878, "8965": 878, "8985": 878, "8891": 878, "8963": 878, "9109": 878, "9178": 878, "9252": 878, "9027": 878, "9236": 878, "9246": 878, "9305": 878, "9277": 878, "9099": 878, "plot_sensors_connect": 878, "cbar_label": 878, "9248": 878, "read_select": 878, "8870": 878, "tf_dic": 878, "9122": 878, "9033": 878, "ana": 878, "radanov": 878, "magalvan": 878, "mista": 878, "christina": 878, "zhao": 878, "giorgio": 878, "marinato": 878, "jori": 878, "den": 878, "bossch": 878, "gensollen": 878, "treguer": 878, "austin": 878, "hurst": 878, "aniket": 878, "pradhan": 878, "hongjiang": 878, "kuziek": 878, "qianliang": 878, "tod": 878, "flak": 878, "8354": 878, "7070": 878, "imgag": 878, "7717": 878, "kyle": 878, "mathewson": 878, "8275": 878, "8445": 878, "keith": 878, "doell": 878, "8553": 878, "8351": 878, "8190": 878, "8539": 878, "8366": 878, "8642": 878, "8447": 878, "8323": 878, "8449": 878, "8402": 878, "8460": 878, "8532": 878, "8482": 878, "8608": 878, "8502": 878, "tqdm": 878, "8515": 878, "8622": 878, "8381": 878, "8584": 878, "8442": 878, "8534": 878, "8624": 878, "8519": 878, "8452": 878, "8415": 878, "8395": 878, "8658": 878, "cascad": 878, "8633": 878, "8580": 878, "8400": 878, "test_egi": 878, "mandatorili": 878, "8474": 878, "8339": 878, "8558": 878, "s390x": 878, "8618": 878, "8594": 878, "8610": 878, "8377": 878, "8285": 878, "8344": 878, "8318": 878, "8637": 878, "8306": 878, "8448": 878, "8283": 878, "name_split": 878, "01_meg": 878, "name_meg": 878, "8464": 878, "8326": 878, "8343": 878, "8425": 878, "8317": 878, "8663": 878, "8320": 878, "8303": 878, "8484": 878, "8349": 878, "max_pca_compon": 878, "max_pca_components_": 878, "8321": 878, "8341": 878, "everyhwer": 878, "8368": 878, "8393": 878, "8416": 878, "8434": 878, "8486": 878, "8491": 878, "8492": 878, "8545": 878, "8590": 878, "tukei": 878, "8542": 878, "8520": 878, "8589": 878, "8564": 878, "8605": 878, "8374": 878, "8357": 878, "8356": 878, "8389": 878, "justu": 878, "schwabed": 878, "mad": 878, "jensen": 878, "mikolaj": 878, "rahul": 878, "nadkarni": 878, "lau": 878, "m\u00f8ller": 878, "andersen": 878, "sedivi": 878, "donckt": 878, "svea": 878, "meyer": 878, "lx37": 878, "rai": 878, "n_iter_sdr": 878, "immut": 878, "fxaa": 878, "_split": 878, "_part": 878, "read_raw_xxx": 878, "simpler": 878, "permit": 878, "outermost": 878, "setup_forward_model": 878, "conjug": 878, "throw": 878, "spatio_temporal_src_connect": 878, "find_ch_connect": 878, "read_ch_connect": 878, "spatial_dist_connect": 878, "spatial_inter_hemi_connect": 878, "spatial_src_connect": 878, "spatial_tris_connect": 878, "spatio_temporal_dist_connect": 878, "spatio_temporal_tris_connect": 878, "normalize_fwd": 878, "stc_mix": 878, "read_dig_captrack": 878, "spell": 878, "captrack": 878, "mark_flat": 878, "alejandro": 878, "weinstein": 878, "anton": 878, "nikola": 878, "waniek": 878, "harmelen": 878, "sara": 878, "sommariva": 878, "chapochn": 878, "mshader": 878, "sophi": 878, "herbst": 878, "victor": 878, "ferat": 878, "mohammad": 878, "daneshzand": 878, "reppling": 878, "plv": 878, "dmitrii": 878, "altukhov": 878, "epochs_color": 878, "prepare_bem_model": 878, "compromis": 878, "roc_auc_ovo": 878, "roc_auc_ovo_weight": 878, "sebastian": 878, "old_tim": 878, "subprocess": 878, "htp": 878, "insuffici": 878, "demetr": 878, "kosta": 878, "gridsearchcv": 878, "chun": 878, "hui": 878, "henrich": 878, "kolkhorst": 878, "fu": 878, "geoff": 878, "brookshir": 878, "eegmi_url": 878, "ramiro": 878, "gatti": 878, "get_channel_type_const": 878, "bump": 878, "tandem": 878, "point_spread_funct": 878, "cross_talk_funct": 878, "ariel": 878, "rokem": 878, "jos\u00e9": 878, "garc\u00eda": 878, "moham": 878, "sherif": 878, "nataliia": 878, "kozhemiako": 878, "legrand": 878, "f\u00e9rat": 878, "theodor": 878, "papadopoulo": 878, "markerfil": 878, "dirk": 878, "g\u00fctlin": 878, "10x": 878, "jit": 878, "ryb\u00e1\u0159": 878, "abram": 878, "hindl": 878, "eberhard": 878, "eich": 878, "radman": 878, "hidpi": 878, "pycord": 878, "read_montag": 878, "read_dig_montag": 878, "set_dig": 878, "update_ch_nam": 878, "raise_if_subset": 878, "_smsh_": 878, "_smartshield": 878, "max_tick": 878, "show_legend": 878, "biosig": 878, "nathali": 878, "gayraud": 878, "crist\u00f3bal": 878, "mo\u00ebnn": 878, "loccoz": 878, "mixin": 878, "lslclient": 878, "lsl": 878, "chala": 878, "mocklslstream": 878, "roujanski": 878, "fault": 878, "kovrig": 878, "n_pad": 878, "bruno": 878, "nicenboim": 878, "32bit": 878, "edge_": 878, "v0": 878, "retina": 878, "larri": 878, "eisenman": 878, "mishandl": 878, "haslach": 878, "clean_eog_ecg": 878, "jeythekei": 878, "_criterion": 878, "katarina": 878, "slama": 878, "synthesi": 878, "find_edf_ev": 878, "patch_info": 878, "castano": 878, "finder": 878, "rasmu": 878, "zetter": 878, "orgin": 878, "gsoc": 878, "molfes": 878, "sphx_glr_auto_examples_datasets_plot_opm_rest_data": 878, "gutstein": 878, "trig_shift_by_typ": 878, "read_annotations_brainvis": 878, "get_blas_func": 878, "_compute_covariance_auto": 878, "onewai": 878, "marcin": 878, "koculak": 878, "buildup": 878, "incom": 878, "bethard": 878, "dateutil": 878, "jasper": 878, "bosch": 878, "_current": 878, "unit_noise_gain": 878, "buildqa": 878, "read_annotations_eeglab": 878, "annotmap": 878, "runtimeexcept": 878, "morph_precomput": 878, "compute_morph_matrix": 878, "morph_data_precomput": 878, "pycuda": 878, "warn_explicit": 878, "save_stc_as_volum": 878, "stop_receive_thread": 878, "johan": 878, "meer": 878, "kambiz": 878, "tavabi": 878, "lorenz": 878, "esch": 878, "manu": 878, "sutela": 878, "perri": 878, "sergei": 878, "antopolskii": 878, "teekuninga": 878, "jochmann": 878, "dupr\u00e9": 878, "workaround": 878, "trainsform": 878, "dubarri": 878, "tf_mxne_optim": 878, "mxne_optim": 878, "multidictionari": 878, "image_mask": 878, "csd_epoch": 878, "csd_arrai": 878, "oleh": 878, "kozynet": 878, "lcmv_epoch": 878, "lcmv_raw": 878, "braboszcz": 878, "desislava": 878, "petkova": 878, "krzemi\u0144ski": 878, "hornberg": 878, "juergen": 878, "katrin": 878, "leinweb": 878, "yaroslav": 878, "halchenko": 878, "baptist": 878, "schiratti": 878, "utilis": 878, "dgap_l21l1": 878, "ramonapariciog": 878, "get_pos2d": 878, "\u03c7\u00b2": 878, "writabl": 878, "plot_roi_erpimage_by_rt": 878, "ansi": 878, "codepag": 878, "okba": 878, "bekhelifi": 878, "boggess": 878, "duemos": 878, "nielsen": 878, "luk\u00e1\u0161": 878, "hejtm\u00e1nek": 878, "_virtual": 878, "treatment": 878, "megsim": 878, "mrn": 878, "reformat": 878, "timedecod": 878, "generalizationacrosstim": 878, "plot_gat_tim": 878, "plot_gat_matrix": 878, "read_events_eeglab": 878, "plot_tran": 878, "tf_lcmv": 878, "scale_tim": 878, "scalings_tim": 878, "akshay0724": 878, "rudiuk": 878, "dykstra": 878, "laetitia": 878, "grabot": 878, "proulx": 878, "apariciogarcia": 878, "robin": 878, "tibor": 878, "schirrmeist": 878, "rodrigo": 878, "h\u00fcbner": 878, "toddler": 878, "fasttrack": 878, "brovelli": 878, "_plot_topo_onpick": 878, "nikla": 878, "wilm": 878, "rantala": 878, "_bad_drop": 878, "_filenam": 878, "pasler": 878, "predict_mod": 878, "chanloc": 878, "dgap_l21": 878, "band_pass_filt": 878, "band_stop_filt": 878, "low_pass_filt": 878, "high_pass_filt": 878, "eeg_sensor": 878, "typecheck": 878, "leonardo": 878, "barbosa": 878, "superflu": 878, "hermann": 878, "sonntag": 878, "jakub": 878, "kaczmarzyk": 878, "lorenzo": 878, "alfin": 878, "visconti": 878, "nick": 878, "foti": 878, "pop_prop": 878, "maryland": 878, "preview": 878, "raimundo": 878, "hid": 878, "martinez": 878, "pablo": 878, "aria": 878, "duma": 878, "fieldtripcli": 878, "get_data_as_epoch": 878, "unitsposit": 878, "mullin": 878, "bva": 878, "strictest": 878, "hojlund": 878, "niediek": 878, "add_eeg_ref": 878, "csd_compute_epoch": 878, "ev2": 878, "\u00b5": 878, "aru": 878, "unsupport": 878, "config_opt": 878, "epochsvector": 878, "favour": 878, "cwt_morlet": 878, "single_trial_pow": 878, "committ": 878, "camilo": 878, "lamu": 878, "f\u00e9lix": 878, "kraus": 878, "shlomo": 878, "poil": 878, "show_info": 878, "compute_raw_psd": 878, "compute_epochs_psd": 878, "614990234": 878, "00064103": 878, "99897607": 878, "train_tim": 878, "ecg_criterion": 878, "eog_criterion": 878, "natali": 878, "klein": 878, "coordinan": 878, "ware": 878, "score_mod": 878, "stimserv": 878, "ip": 878, "mesh_color": 878, "multitaper_psd": 878, "vertor": 878, "renorm": 878, "drop_bad_epoch": 878, "drop_epoch": 878, "do_forward_solut": 878, "kaichogami": 878, "cl\u00e9ment": 878, "moutard": 878, "martinbab": 878, "sagun": 878, "pai": 878, "sourav": 878, "kambyses": 878, "pbnsilva": 878, "sviter": 878, "zuxfoucault": 878, "nenonen": 878, "add_eeg_average_proj": 878, "n_samp_tot": 878, "emilyps14": 878, "lennyvarghes": 878, "freeview_bem_surfac": 878, "desanti": 878, "_setup_vmin_vmax": 878, "concatenatechannel": 878, "redesign": 878, "rewrot": 878, "plot_image_epoch": 878, "preload_data": 878, "santi": 878, "roan": 878, "laplant": 878, "wakeman": 878, "add_sect": 878, "marmaduk": 878, "woodman": 878, "whiten_evok": 878, "oddbal": 878, "label_1": 878, "label_2": 878, "savitski": 878, "_baseraw": 878, "prof": 878, "decoupl": 878, "read_hsp": 878, "read_elp": 878, "write_hsp": 878, "write_mrk": 878, "label_time_cours": 878, "as_data_fram": 878, "pick_types_evok": 878, "textbox": 878, "iir_filter_raw": 878, "ingoo": 878, "kj": 878, "basil": 878, "pinsard": 878, "hafeza": 878, "anevar": 878, "manoj": 878, "kumar": 878, "tucker": 878, "ward": 878, "radic": 878, "tack": 878, "equalize_channnel": 878, "s\u00e9bastien": 878, "connector": 878, "cathi": 878, "nangini": 878, "succintli": 878, "breuer": 878, "aesthet": 878, "qunxi": 878, "drop_pick": 878, "labels_from_parc": 878, "parc_from_label": 878, "setno": 878, "plot_": 878, "praveen": 878, "sripad": 878, "tanai": 878, "saket": 878, "choudhari": 878, "brad": 878, "buran": 878, "stimclient": 878, "rtclient": 878, "mockrtclient": 878, "trelli": 878, "ki2fiff": 878, "pick_norm": 878, "write_stc": 878, "olivetti": 878, "kornblith": 878, "smarter": 878, "sources_as_epoch": 878, "psi": 878, "mne_compute_proj_eog": 878, "applicationon": 878, "proj_act": 878, "keep_comp": 878, "dest_comp": 878, "speedup": 878, "clike": 878, "l21": 878, "bessel": 878, "time_to_index": 878, "mne_compute_proj_ecg": 878, "mne_maxfilt": 878, "loui": 878, "thibault": 878, "ellen": 878, "ruzich": 878}, "objects": {"": [[868, 0, 0, "-", "mne"]], "mne": [[256, 1, 1, "", "AcqParserFIF"], [257, 1, 1, "", "Annotations"], [258, 1, 1, "", "BaseEpochs"], [259, 1, 1, "", "BiHemiLabel"], [260, 1, 1, "", "Covariance"], [261, 1, 1, "", "Dipole"], [262, 1, 1, "", "DipoleFixed"], [263, 1, 1, "", "Epochs"], [264, 1, 1, "", "EpochsArray"], [265, 1, 1, "", "Evoked"], [266, 1, 1, "", "EvokedArray"], [267, 1, 1, "", "Forward"], [268, 1, 1, "", "Info"], [269, 1, 1, "", "Label"], [270, 1, 1, "", "MixedSourceEstimate"], [271, 1, 1, "", "MixedVectorSourceEstimate"], [272, 1, 1, "", "Projection"], [273, 1, 1, "", "Report"], [274, 1, 1, "", "SourceEstimate"], [275, 1, 1, "", "SourceMorph"], [276, 1, 1, "", "SourceSpaces"], [277, 1, 1, "", "VectorSourceEstimate"], [278, 1, 1, "", "VolSourceEstimate"], [279, 1, 1, "", "VolVectorSourceEstimate"], [280, 4, 1, "", "add_reference_channels"], [281, 4, 1, "", "add_source_space_distances"], [282, 4, 1, "", "annotations_from_events"], [283, 4, 1, "", "apply_forward"], [284, 4, 1, "", "apply_forward_raw"], [285, 4, 1, "", "average_forward_solutions"], [872, 0, 0, "-", "baseline"], [846, 0, 0, "-", "beamformer"], [253, 0, 0, "-", "bem"], [309, 4, 1, "", "channel_indices_by_type"], [310, 4, 1, "", "channel_type"], [867, 0, 0, "-", "channels"], [867, 0, 0, "-", "chpi"], [352, 4, 1, "", "combine_evoked"], [353, 4, 1, "", "compute_covariance"], [354, 4, 1, "", "compute_proj_epochs"], [355, 4, 1, "", "compute_proj_evoked"], [356, 4, 1, "", "compute_proj_raw"], [357, 4, 1, "", "compute_rank"], [358, 4, 1, "", "compute_raw_covariance"], [359, 4, 1, "", "compute_source_morph"], [360, 4, 1, "", "concatenate_epochs"], [361, 4, 1, "", "concatenate_events"], [362, 4, 1, "", "concatenate_raws"], [363, 4, 1, "", "convert_forward_solution"], [367, 4, 1, "", "count_events"], [371, 4, 1, "", "create_default_subject"], [372, 4, 1, "", "create_info"], [847, 0, 0, "-", "cuda"], [248, 0, 0, "-", "datasets"], [408, 4, 1, "", "decimate_surface"], [249, 0, 0, "-", "decoding"], [428, 4, 1, "", "dig_mri_distances"], [846, 0, 0, "-", "dipole"], [250, 0, 0, "-", "epochs"], [434, 4, 1, "", "equalize_channels"], [250, 0, 0, "-", "event"], [438, 4, 1, "", "events_from_annotations"], [251, 0, 0, "-", "export"], [443, 4, 1, "", "extract_label_time_course"], [867, 0, 0, "-", "filter"], [450, 4, 1, "", "find_events"], [451, 4, 1, "", "find_stim_steps"], [452, 4, 1, "", "fit_dipole"], [457, 4, 1, "", "get_config"], [458, 4, 1, "", "get_config_path"], [459, 4, 1, "", "get_head_surf"], [460, 4, 1, "", "get_meg_helmet_surf"], [461, 4, 1, "", "get_montage_volume_labels"], [462, 4, 1, "", "get_volume_labels_from_aseg"], [463, 4, 1, "", "get_volume_labels_from_src"], [464, 4, 1, "", "grade_to_tris"], [465, 4, 1, "", "grade_to_vertices"], [466, 4, 1, "", "grand_average"], [467, 4, 1, "", "grow_labels"], [470, 4, 1, "", "head_to_mni"], [471, 4, 1, "", "head_to_mri"], [846, 0, 0, "-", "inverse_sparse"], [869, 0, 0, "-", "io"], [511, 4, 1, "", "label_sign_flip"], [512, 4, 1, "", "labels_to_stc"], [513, 4, 1, "", "make_ad_hoc_cov"], [514, 4, 1, "", "make_bem_model"], [515, 4, 1, "", "make_bem_solution"], [516, 4, 1, "", "make_field_map"], [517, 4, 1, "", "make_fixed_length_epochs"], [518, 4, 1, "", "make_fixed_length_events"], [519, 4, 1, "", "make_forward_dipole"], [520, 4, 1, "", "make_forward_solution"], [521, 4, 1, "", "make_sphere_model"], [522, 4, 1, "", "merge_events"], [846, 0, 0, "-", "minimum_norm"], [543, 4, 1, "", "morph_labels"], [544, 4, 1, "", "morph_source_spaces"], [545, 4, 1, "", "open_docs"], [546, 4, 1, "", "open_report"], [547, 4, 1, "", "parse_config"], [548, 4, 1, "", "pick_channels"], [549, 4, 1, "", "pick_channels_cov"], [550, 4, 1, "", "pick_channels_forward"], [551, 4, 1, "", "pick_channels_regexp"], [552, 4, 1, "", "pick_events"], [553, 4, 1, "", "pick_info"], [554, 4, 1, "", "pick_types"], [555, 4, 1, "", "pick_types_forward"], [867, 0, 0, "-", "preprocessing"], [602, 4, 1, "", "random_parcellation"], [603, 4, 1, "", "read_annotations"], [604, 4, 1, "", "read_bem_solution"], [605, 4, 1, "", "read_bem_surfaces"], [606, 4, 1, "", "read_cov"], [607, 4, 1, "", "read_dipole"], [608, 4, 1, "", "read_epochs"], [609, 4, 1, "", "read_epochs_eeglab"], [610, 4, 1, "", "read_epochs_fieldtrip"], [611, 4, 1, "", "read_epochs_kit"], [612, 4, 1, "", "read_events"], [613, 4, 1, "", "read_evoked_besa"], [614, 4, 1, "", "read_evoked_fieldtrip"], [615, 4, 1, "", "read_evokeds"], [616, 4, 1, "", "read_evokeds_mff"], [617, 4, 1, "", "read_forward_solution"], [618, 4, 1, "", "read_freesurfer_lut"], [619, 4, 1, "", "read_label"], [620, 4, 1, "", "read_labels_from_annot"], [621, 4, 1, "", "read_lta"], [622, 4, 1, "", "read_morph_map"], [623, 4, 1, "", "read_proj"], [624, 4, 1, "", "read_reject_parameters"], [625, 4, 1, "", "read_source_estimate"], [626, 4, 1, "", "read_source_morph"], [627, 4, 1, "", "read_source_spaces"], [628, 4, 1, "", "read_surface"], [629, 4, 1, "", "read_talxfm"], [630, 4, 1, "", "read_trans"], [631, 4, 1, "", "read_tri"], [632, 4, 1, "", "read_vectorview_selection"], [633, 4, 1, "", "rename_channels"], [634, 4, 1, "", "scale_bem"], [635, 4, 1, "", "scale_labels"], [636, 4, 1, "", "scale_mri"], [637, 4, 1, "", "scale_source_space"], [638, 4, 1, "", "sensitivity_map"], [639, 4, 1, "", "set_bipolar_reference"], [640, 4, 1, "", "set_cache_dir"], [641, 4, 1, "", "set_config"], [642, 4, 1, "", "set_eeg_reference"], [643, 4, 1, "", "set_log_file"], [644, 4, 1, "", "set_log_level"], [645, 4, 1, "", "setup_source_space"], [646, 4, 1, "", "setup_volume_source_space"], [873, 0, 0, "-", "simulation"], [667, 4, 1, "", "spatial_dist_adjacency"], [668, 4, 1, "", "spatial_inter_hemi_adjacency"], [669, 4, 1, "", "spatial_src_adjacency"], [670, 4, 1, "", "spatial_tris_adjacency"], [671, 4, 1, "", "spatio_temporal_dist_adjacency"], [672, 4, 1, "", "spatio_temporal_src_adjacency"], [673, 4, 1, "", "spatio_temporal_tris_adjacency"], [674, 4, 1, "", "split_label"], [875, 0, 0, "-", "stats"], [692, 4, 1, "", "stc_near_sensors"], [693, 4, 1, "", "stc_to_label"], [696, 4, 1, "", "sys_info"], [876, 0, 0, "-", "time_frequency"], [731, 4, 1, "", "transform_surface_to"], [867, 0, 0, "-", "transforms"], [739, 4, 1, "", "use_coil_def"], [740, 1, 1, "", "use_log_level"], [847, 0, 0, "-", "utils"], [743, 4, 1, "", "verbose"], [744, 4, 1, "", "vertex_to_mni"], [877, 0, 0, "-", "viz"], [818, 4, 1, "", "warp_montage_volume"], [819, 4, 1, "", "what"], [820, 4, 1, "", "write_bem_solution"], [821, 4, 1, "", "write_bem_surfaces"], [822, 4, 1, "", "write_cov"], [823, 4, 1, "", "write_events"], [824, 4, 1, "", "write_evokeds"], [825, 4, 1, "", "write_forward_solution"], [826, 4, 1, "", "write_head_bem"], [827, 4, 1, "", "write_label"], [828, 4, 1, "", "write_labels_to_annot"], [829, 4, 1, "", "write_proj"], [830, 4, 1, "", "write_source_spaces"], [831, 4, 1, "", "write_surface"], [832, 4, 1, "", "write_trans"]], "mne.AcqParserFIF": [[256, 2, 1, "", "__getitem__"], [256, 2, 1, "", "__len__"], [256, 3, 1, "", "categories"], [256, 3, 1, "", "events"], [256, 2, 1, "", "get_condition"]], "mne.Annotations": [[257, 2, 1, "", "__add__"], [257, 2, 1, "", "__getitem__"], [257, 2, 1, "", "__iter__"], [257, 2, 1, "", "__len__"], [257, 2, 1, "", "append"], [257, 2, 1, "", "copy"], [257, 2, 1, "", "crop"], [257, 2, 1, "", "delete"], [257, 3, 1, "", "orig_time"], [257, 2, 1, "", "rename"], [257, 2, 1, "", "save"], [257, 2, 1, "", "set_durations"], [257, 2, 1, "", "to_data_frame"]], "mne.BiHemiLabel": [[259, 2, 1, "", "__add__"], [259, 2, 1, "", "__len__"], [259, 2, 1, "", "__sub__"]], "mne.Covariance": [[260, 2, 1, "", "__add__"], [260, 2, 1, "", "__contains__"], [260, 2, 1, "", "__getitem__"], [260, 2, 1, "", "__iter__"], [260, 2, 1, "", "__len__"], [260, 2, 1, "", "as_diag"], [260, 3, 1, "", "ch_names"], [260, 2, 1, "", "clear"], [260, 2, 1, "", "copy"], [260, 3, 1, "", "data"], [260, 2, 1, "", "fromkeys"], [260, 2, 1, "", "get"], [260, 2, 1, "", "items"], [260, 2, 1, "", "keys"], [260, 3, 1, "", "nfree"], [260, 2, 1, "", "pick_channels"], [260, 2, 1, "", "plot"], [260, 2, 1, "", "plot_topomap"], [260, 2, 1, "", "pop"], [260, 2, 1, "", "popitem"], [260, 2, 1, "", "save"], [260, 2, 1, "", "setdefault"], [260, 2, 1, "", "update"], [260, 2, 1, "", "values"]], "mne.Dipole": [[261, 2, 1, "", "__getitem__"], [261, 2, 1, "", "__len__"], [261, 2, 1, "", "copy"], [261, 2, 1, "", "crop"], [261, 2, 1, "", "decimate"], [261, 2, 1, "", "plot_amplitudes"], [261, 2, 1, "", "plot_locations"], [261, 2, 1, "", "save"], [261, 2, 1, "", "shift_time"], [261, 2, 1, "", "time_as_index"], [261, 3, 1, "", "times"], [261, 3, 1, "", "tmax"], [261, 3, 1, "", "tmin"], [261, 2, 1, "", "to_mni"], [261, 2, 1, "", "to_mri"], [261, 2, 1, "", "to_volume_labels"]], "mne.DipoleFixed": [[262, 3, 1, "", "ch_names"], [262, 2, 1, "", "copy"], [262, 2, 1, "", "crop"], [262, 2, 1, "", "decimate"], [262, 2, 1, "", "plot"], [262, 2, 1, "", "save"], [262, 2, 1, "", "shift_time"], [262, 2, 1, "", "time_as_index"], [262, 3, 1, "", "times"], [262, 3, 1, "", "tmax"], [262, 3, 1, "", "tmin"]], "mne.Epochs": [[263, 2, 1, "", "__contains__"], [263, 2, 1, "", "__getitem__"], [263, 2, 1, "", "__iter__"], [263, 2, 1, "", "__len__"], [263, 2, 1, "", "add_annotations_to_metadata"], [263, 2, 1, "", "add_channels"], [263, 2, 1, "", "add_proj"], [263, 2, 1, "", "add_reference_channels"], [263, 2, 1, "", "anonymize"], [263, 2, 1, "", "apply_baseline"], [263, 2, 1, "", "apply_function"], [263, 2, 1, "", "apply_hilbert"], [263, 2, 1, "", "apply_proj"], [263, 2, 1, "", "as_type"], [263, 2, 1, "", "average"], [263, 3, 1, "", "ch_names"], [263, 3, 1, "", "compensation_grade"], [263, 2, 1, "", "compute_psd"], [263, 2, 1, "", "copy"], [263, 2, 1, "", "crop"], [263, 2, 1, "", "decimate"], [263, 2, 1, "", "del_proj"], [263, 2, 1, "", "drop"], [263, 2, 1, "", "drop_bad"], [263, 2, 1, "", "drop_channels"], [263, 2, 1, "", "drop_log_stats"], [263, 2, 1, "", "equalize_event_counts"], [263, 2, 1, "", "export"], [263, 3, 1, "", "filename"], [263, 2, 1, "", "filter"], [263, 2, 1, "", "get_annotations_per_epoch"], [263, 2, 1, "", "get_channel_types"], [263, 2, 1, "", "get_data"], [263, 2, 1, "", "get_montage"], [263, 2, 1, "", "interpolate_bads"], [263, 2, 1, "", "iter_evoked"], [263, 2, 1, "", "load_data"], [263, 3, 1, "", "metadata"], [263, 2, 1, "", "next"], [263, 2, 1, "", "pick"], [263, 2, 1, "", "pick_channels"], [263, 2, 1, "", "pick_types"], [263, 2, 1, "", "plot"], [263, 2, 1, "", "plot_drop_log"], [263, 2, 1, "", "plot_image"], [263, 2, 1, "", "plot_projs_topomap"], [263, 2, 1, "", "plot_psd"], [263, 2, 1, "", "plot_psd_topo"], [263, 2, 1, "", "plot_psd_topomap"], [263, 2, 1, "", "plot_sensors"], [263, 2, 1, "", "plot_topo_image"], [263, 3, 1, "", "proj"], [263, 2, 1, "", "rename_channels"], [263, 2, 1, "", "reorder_channels"], [263, 2, 1, "", "resample"], [263, 2, 1, "", "reset_drop_log_selection"], [263, 2, 1, "", "save"], [263, 2, 1, "", "savgol_filter"], [263, 2, 1, "", "set_annotations"], [263, 2, 1, "", "set_channel_types"], [263, 2, 1, "", "set_eeg_reference"], [263, 2, 1, "", "set_meas_date"], [263, 2, 1, "", "set_montage"], [263, 2, 1, "", "shift_time"], [263, 2, 1, "", "standard_error"], [263, 2, 1, "", "subtract_evoked"], [263, 2, 1, "", "time_as_index"], [263, 3, 1, "", "times"], [263, 3, 1, "", "tmax"], [263, 3, 1, "", "tmin"], [263, 2, 1, "", "to_data_frame"]], "mne.EpochsArray": [[264, 2, 1, "", "__contains__"], [264, 2, 1, "", "__getitem__"], [264, 2, 1, "", "__iter__"], [264, 2, 1, "", "__len__"], [264, 2, 1, "", "add_annotations_to_metadata"], [264, 2, 1, "", "add_channels"], [264, 2, 1, "", "add_proj"], [264, 2, 1, "", "add_reference_channels"], [264, 2, 1, "", "anonymize"], [264, 2, 1, "", "apply_baseline"], [264, 2, 1, "", "apply_function"], [264, 2, 1, "", "apply_hilbert"], [264, 2, 1, "", "apply_proj"], [264, 2, 1, "", "as_type"], [264, 2, 1, "", "average"], [264, 3, 1, "", "ch_names"], [264, 3, 1, "", "compensation_grade"], [264, 2, 1, "", "compute_psd"], [264, 2, 1, "", "copy"], [264, 2, 1, "", "crop"], [264, 2, 1, "", "decimate"], [264, 2, 1, "", "del_proj"], [264, 2, 1, "", "drop"], [264, 2, 1, "", "drop_bad"], [264, 2, 1, "", "drop_channels"], [264, 2, 1, "", "drop_log_stats"], [264, 2, 1, "", "equalize_event_counts"], [264, 2, 1, "", "export"], [264, 3, 1, "", "filename"], [264, 2, 1, "", "filter"], [264, 2, 1, "", "get_annotations_per_epoch"], [264, 2, 1, "", "get_channel_types"], [264, 2, 1, "", "get_data"], [264, 2, 1, "", "get_montage"], [264, 2, 1, "", "interpolate_bads"], [264, 2, 1, "", "iter_evoked"], [264, 2, 1, "", "load_data"], [264, 3, 1, "", "metadata"], [264, 2, 1, "", "next"], [264, 2, 1, "", "pick"], [264, 2, 1, "", "pick_channels"], [264, 2, 1, "", "pick_types"], [264, 2, 1, "", "plot"], [264, 2, 1, "", "plot_drop_log"], [264, 2, 1, "", "plot_image"], [264, 2, 1, "", "plot_projs_topomap"], [264, 2, 1, "", "plot_psd"], [264, 2, 1, "", "plot_psd_topo"], [264, 2, 1, "", "plot_psd_topomap"], [264, 2, 1, "", "plot_sensors"], [264, 2, 1, "", "plot_topo_image"], [264, 3, 1, "", "proj"], [264, 2, 1, "", "rename_channels"], [264, 2, 1, "", "reorder_channels"], [264, 2, 1, "", "resample"], [264, 2, 1, "", "reset_drop_log_selection"], [264, 2, 1, "", "save"], [264, 2, 1, "", "savgol_filter"], [264, 2, 1, "", "set_annotations"], [264, 2, 1, "", "set_channel_types"], [264, 2, 1, "", "set_eeg_reference"], [264, 2, 1, "", "set_meas_date"], [264, 2, 1, "", "set_montage"], [264, 2, 1, "", "shift_time"], [264, 2, 1, "", "standard_error"], [264, 2, 1, "", "subtract_evoked"], [264, 2, 1, "", "time_as_index"], [264, 3, 1, "", "times"], [264, 3, 1, "", "tmax"], [264, 3, 1, "", "tmin"], [264, 2, 1, "", "to_data_frame"]], "mne.Evoked": [[265, 2, 1, "", "__contains__"], [265, 2, 1, "", "__neg__"], [265, 2, 1, "", "add_channels"], [265, 2, 1, "", "add_proj"], [265, 2, 1, "", "add_reference_channels"], [265, 2, 1, "", "animate_topomap"], [265, 2, 1, "", "anonymize"], [265, 2, 1, "", "apply_baseline"], [265, 2, 1, "", "apply_function"], [265, 2, 1, "", "apply_hilbert"], [265, 2, 1, "", "apply_proj"], [265, 2, 1, "", "as_type"], [265, 3, 1, "", "ch_names"], [265, 3, 1, "", "compensation_grade"], [265, 2, 1, "", "compute_psd"], [265, 2, 1, "", "copy"], [265, 2, 1, "", "crop"], [265, 3, 1, "", "data"], [265, 2, 1, "", "decimate"], [265, 2, 1, "", "del_proj"], [265, 2, 1, "", "detrend"], [265, 2, 1, "", "drop_channels"], [265, 2, 1, "", "export"], [265, 2, 1, "", "filter"], [265, 2, 1, "", "get_channel_types"], [265, 2, 1, "", "get_data"], [265, 2, 1, "", "get_montage"], [265, 2, 1, "", "get_peak"], [265, 2, 1, "", "interpolate_bads"], [265, 3, 1, "", "kind"], [265, 2, 1, "", "pick"], [265, 2, 1, "", "pick_channels"], [265, 2, 1, "", "pick_types"], [265, 2, 1, "", "plot"], [265, 2, 1, "", "plot_field"], [265, 2, 1, "", "plot_image"], [265, 2, 1, "", "plot_joint"], [265, 2, 1, "", "plot_projs_topomap"], [265, 2, 1, "", "plot_psd"], [265, 2, 1, "", "plot_psd_topo"], [265, 2, 1, "", "plot_psd_topomap"], [265, 2, 1, "", "plot_sensors"], [265, 2, 1, "", "plot_topo"], [265, 2, 1, "", "plot_topomap"], [265, 2, 1, "", "plot_white"], [265, 3, 1, "", "proj"], [265, 2, 1, "", "rename_channels"], [265, 2, 1, "", "reorder_channels"], [265, 2, 1, "", "resample"], [265, 2, 1, "", "save"], [265, 2, 1, "", "savgol_filter"], [265, 2, 1, "", "set_channel_types"], [265, 2, 1, "", "set_eeg_reference"], [265, 2, 1, "", "set_meas_date"], [265, 2, 1, "", "set_montage"], [265, 2, 1, "", "shift_time"], [265, 2, 1, "", "time_as_index"], [265, 3, 1, "", "times"], [265, 3, 1, "", "tmax"], [265, 3, 1, "", "tmin"], [265, 2, 1, "", "to_data_frame"]], "mne.EvokedArray": [[266, 2, 1, "", "__contains__"], [266, 2, 1, "", "__neg__"], [266, 2, 1, "", "add_channels"], [266, 2, 1, "", "add_proj"], [266, 2, 1, "", "add_reference_channels"], [266, 2, 1, "", "animate_topomap"], [266, 2, 1, "", "anonymize"], [266, 2, 1, "", "apply_baseline"], [266, 2, 1, "", "apply_function"], [266, 2, 1, "", "apply_hilbert"], [266, 2, 1, "", "apply_proj"], [266, 2, 1, "", "as_type"], [266, 3, 1, "", "ch_names"], [266, 3, 1, "", "compensation_grade"], [266, 2, 1, "", "compute_psd"], [266, 2, 1, "", "copy"], [266, 2, 1, "", "crop"], [266, 3, 1, "", "data"], [266, 2, 1, "", "decimate"], [266, 2, 1, "", "del_proj"], [266, 2, 1, "", "detrend"], [266, 2, 1, "", "drop_channels"], [266, 2, 1, "", "export"], [266, 2, 1, "", "filter"], [266, 2, 1, "", "get_channel_types"], [266, 2, 1, "", "get_data"], [266, 2, 1, "", "get_montage"], [266, 2, 1, "", "get_peak"], [266, 2, 1, "", "interpolate_bads"], [266, 3, 1, "", "kind"], [266, 2, 1, "", "pick"], [266, 2, 1, "", "pick_channels"], [266, 2, 1, "", "pick_types"], [266, 2, 1, "", "plot"], [266, 2, 1, "", "plot_field"], [266, 2, 1, "", "plot_image"], [266, 2, 1, "", "plot_joint"], [266, 2, 1, "", "plot_projs_topomap"], [266, 2, 1, "", "plot_psd"], [266, 2, 1, "", "plot_psd_topo"], [266, 2, 1, "", "plot_psd_topomap"], [266, 2, 1, "", "plot_sensors"], [266, 2, 1, "", "plot_topo"], [266, 2, 1, "", "plot_topomap"], [266, 2, 1, "", "plot_white"], [266, 3, 1, "", "proj"], [266, 2, 1, "", "rename_channels"], [266, 2, 1, "", "reorder_channels"], [266, 2, 1, "", "resample"], [266, 2, 1, "", "save"], [266, 2, 1, "", "savgol_filter"], [266, 2, 1, "", "set_channel_types"], [266, 2, 1, "", "set_eeg_reference"], [266, 2, 1, "", "set_meas_date"], [266, 2, 1, "", "set_montage"], [266, 2, 1, "", "shift_time"], [266, 2, 1, "", "time_as_index"], [266, 3, 1, "", "times"], [266, 3, 1, "", "tmax"], [266, 3, 1, "", "tmin"], [266, 2, 1, "", "to_data_frame"]], "mne.Forward": [[267, 2, 1, "", "copy"], [267, 2, 1, "", "pick_channels"]], "mne.Info": [[268, 2, 1, "", "__contains__"], [268, 2, 1, "", "__getitem__"], [268, 2, 1, "", "__iter__"], [268, 2, 1, "", "__len__"], [268, 2, 1, "", "clear"], [268, 3, 1, "", "compensation_grade"], [268, 2, 1, "", "copy"], [268, 2, 1, "", "fromkeys"], [268, 2, 1, "", "get"], [268, 2, 1, "", "get_channel_types"], [268, 2, 1, "", "get_montage"], [268, 2, 1, "", "items"], [268, 2, 1, "", "keys"], [268, 2, 1, "", "normalize_proj"], [268, 2, 1, "", "pop"], [268, 2, 1, "", "popitem"], [268, 2, 1, "", "save"], [268, 2, 1, "", "set_montage"], [268, 2, 1, "", "setdefault"], [268, 2, 1, "", "update"], [268, 2, 1, "", "values"]], "mne.Label": [[269, 2, 1, "", "__add__"], [269, 2, 1, "", "__len__"], [269, 2, 1, "", "__sub__"], [269, 2, 1, "", "center_of_mass"], [269, 2, 1, "", "compute_area"], [269, 2, 1, "", "copy"], [269, 2, 1, "", "distances_to_outside"], [269, 2, 1, "", "fill"], [269, 2, 1, "", "get_tris"], [269, 2, 1, "", "get_vertices_used"], [269, 2, 1, "", "morph"], [269, 2, 1, "", "restrict"], [269, 2, 1, "", "save"], [269, 2, 1, "", "smooth"], [269, 2, 1, "", "split"]], "mne.MixedSourceEstimate": [[270, 2, 1, "", "__add__"], [270, 2, 1, "", "__div__"], [270, 2, 1, "", "__mul__"], [270, 2, 1, "", "__neg__"], [270, 2, 1, "", "__sub__"], [270, 2, 1, "", "apply_baseline"], [270, 2, 1, "", "bin"], [270, 2, 1, "", "copy"], [270, 2, 1, "", "crop"], [270, 3, 1, "", "data"], [270, 2, 1, "", "decimate"], [270, 2, 1, "", "extract_label_time_course"], [270, 2, 1, "", "get_peak"], [270, 2, 1, "", "mean"], [270, 2, 1, "", "plot"], [270, 2, 1, "", "resample"], [270, 2, 1, "", "save"], [270, 3, 1, "", "sfreq"], [270, 3, 1, "", "shape"], [270, 2, 1, "", "shift_time"], [270, 2, 1, "", "sqrt"], [270, 2, 1, "", "sum"], [270, 2, 1, "", "surface"], [270, 2, 1, "", "time_as_index"], [270, 3, 1, "", "times"], [270, 3, 1, "", "tmax"], [270, 3, 1, "", "tmin"], [270, 2, 1, "", "to_data_frame"], [270, 2, 1, "", "transform"], [270, 2, 1, "", "transform_data"], [270, 3, 1, "", "tstep"], [270, 2, 1, "", "volume"]], "mne.MixedVectorSourceEstimate": [[271, 2, 1, "", "__add__"], [271, 2, 1, "", "__div__"], [271, 2, 1, "", "__mul__"], [271, 2, 1, "", "__neg__"], [271, 2, 1, "", "__sub__"], [271, 2, 1, "", "apply_baseline"], [271, 2, 1, "", "bin"], [271, 2, 1, "", "copy"], [271, 2, 1, "", "crop"], [271, 3, 1, "", "data"], [271, 2, 1, "", "decimate"], [271, 2, 1, "", "extract_label_time_course"], [271, 2, 1, "", "get_peak"], [271, 2, 1, "", "magnitude"], [271, 2, 1, "", "mean"], [271, 2, 1, "", "plot"], [271, 2, 1, "", "project"], [271, 2, 1, "", "resample"], [271, 2, 1, "", "save"], [271, 3, 1, "", "sfreq"], [271, 3, 1, "", "shape"], [271, 2, 1, "", "shift_time"], [271, 2, 1, "", "sqrt"], [271, 2, 1, "", "sum"], [271, 2, 1, "", "surface"], [271, 2, 1, "", "time_as_index"], [271, 3, 1, "", "times"], [271, 3, 1, "", "tmax"], [271, 3, 1, "", "tmin"], [271, 2, 1, "", "to_data_frame"], [271, 2, 1, "", "transform"], [271, 2, 1, "", "transform_data"], [271, 3, 1, "", "tstep"], [271, 2, 1, "", "volume"]], "mne.Projection": [[272, 2, 1, "", "__contains__"], [272, 2, 1, "", "__getitem__"], [272, 2, 1, "", "__iter__"], [272, 2, 1, "", "__len__"], [272, 2, 1, "", "clear"], [272, 2, 1, "", "copy"], [272, 2, 1, "", "fromkeys"], [272, 2, 1, "", "get"], [272, 2, 1, "", "items"], [272, 2, 1, "", "keys"], [272, 2, 1, "", "plot_topomap"], [272, 2, 1, "", "pop"], [272, 2, 1, "", "popitem"], [272, 2, 1, "", "setdefault"], [272, 2, 1, "", "update"], [272, 2, 1, "", "values"]], "mne.Report": [[273, 2, 1, "", "__len__"], [273, 2, 1, "", "add_bem"], [273, 2, 1, "", "add_code"], [273, 2, 1, "", "add_covariance"], [273, 2, 1, "", "add_custom_css"], [273, 2, 1, "", "add_custom_js"], [273, 2, 1, "", "add_epochs"], [273, 2, 1, "", "add_events"], [273, 2, 1, "", "add_evokeds"], [273, 2, 1, "", "add_figure"], [273, 2, 1, "", "add_forward"], [273, 2, 1, "", "add_html"], [273, 2, 1, "", "add_ica"], [273, 2, 1, "", "add_image"], [273, 2, 1, "", "add_inverse_operator"], [273, 2, 1, "", "add_projs"], [273, 2, 1, "", "add_raw"], [273, 2, 1, "", "add_stc"], [273, 2, 1, "", "add_sys_info"], [273, 2, 1, "", "add_trans"], [273, 3, 1, "", "html"], [273, 2, 1, "", "parse_folder"], [273, 2, 1, "", "remove"], [273, 2, 1, "", "save"], [273, 3, 1, "", "tags"]], "mne.SourceEstimate": [[274, 2, 1, "", "__add__"], [274, 2, 1, "", "__div__"], [274, 2, 1, "", "__mul__"], [274, 2, 1, "", "__neg__"], [274, 2, 1, "", "__sub__"], [274, 2, 1, "", "apply_baseline"], [274, 2, 1, "", "bin"], [274, 2, 1, "", "center_of_mass"], [274, 2, 1, "", "copy"], [274, 2, 1, "", "crop"], [274, 3, 1, "", "data"], [274, 2, 1, "", "decimate"], [274, 2, 1, "", "estimate_snr"], [274, 2, 1, "", "expand"], [274, 2, 1, "", "extract_label_time_course"], [274, 2, 1, "", "get_peak"], [274, 2, 1, "", "in_label"], [274, 3, 1, "", "lh_data"], [274, 3, 1, "", "lh_vertno"], [274, 2, 1, "", "mean"], [274, 2, 1, "", "plot"], [274, 2, 1, "", "resample"], [274, 3, 1, "", "rh_data"], [274, 3, 1, "", "rh_vertno"], [274, 2, 1, "", "save"], [274, 3, 1, "", "sfreq"], [274, 3, 1, "", "shape"], [274, 2, 1, "", "shift_time"], [274, 2, 1, "", "sqrt"], [274, 2, 1, "", "sum"], [274, 2, 1, "", "time_as_index"], [274, 3, 1, "", "times"], [274, 3, 1, "", "tmax"], [274, 3, 1, "", "tmin"], [274, 2, 1, "", "to_data_frame"], [274, 2, 1, "", "to_original_src"], [274, 2, 1, "", "transform"], [274, 2, 1, "", "transform_data"], [274, 3, 1, "", "tstep"]], "mne.SourceMorph": [[275, 2, 1, "", "apply"], [275, 2, 1, "", "compute_vol_morph_mat"], [275, 2, 1, "", "save"]], "mne.SourceSpaces": [[276, 2, 1, "", "__add__"], [276, 2, 1, "", "__getitem__"], [276, 2, 1, "", "copy"], [276, 2, 1, "", "export_volume"], [276, 2, 1, "", "plot"], [276, 2, 1, "", "save"]], "mne.VectorSourceEstimate": [[277, 2, 1, "", "__add__"], [277, 2, 1, "", "__div__"], [277, 2, 1, "", "__mul__"], [277, 2, 1, "", "__neg__"], [277, 2, 1, "", "__sub__"], [277, 2, 1, "", "apply_baseline"], [277, 2, 1, "", "bin"], [277, 2, 1, "", "copy"], [277, 2, 1, "", "crop"], [277, 3, 1, "", "data"], [277, 2, 1, "", "decimate"], [277, 2, 1, "", "expand"], [277, 2, 1, "", "extract_label_time_course"], [277, 2, 1, "", "get_peak"], [277, 2, 1, "", "in_label"], [277, 3, 1, "", "lh_data"], [277, 3, 1, "", "lh_vertno"], [277, 2, 1, "", "magnitude"], [277, 2, 1, "", "mean"], [277, 2, 1, "", "plot"], [277, 2, 1, "", "project"], [277, 2, 1, "", "resample"], [277, 3, 1, "", "rh_data"], [277, 3, 1, "", "rh_vertno"], [277, 2, 1, "", "save"], [277, 3, 1, "", "sfreq"], [277, 3, 1, "", "shape"], [277, 2, 1, "", "shift_time"], [277, 2, 1, "", "sqrt"], [277, 2, 1, "", "sum"], [277, 2, 1, "", "time_as_index"], [277, 3, 1, "", "times"], [277, 3, 1, "", "tmax"], [277, 3, 1, "", "tmin"], [277, 2, 1, "", "to_data_frame"], [277, 2, 1, "", "to_original_src"], [277, 2, 1, "", "transform"], [277, 2, 1, "", "transform_data"], [277, 3, 1, "", "tstep"]], "mne.VolSourceEstimate": [[278, 2, 1, "", "__add__"], [278, 2, 1, "", "__div__"], [278, 2, 1, "", "__mul__"], [278, 2, 1, "", "__neg__"], [278, 2, 1, "", "__sub__"], [278, 2, 1, "", "apply_baseline"], [278, 2, 1, "", "as_volume"], [278, 2, 1, "", "bin"], [278, 2, 1, "", "copy"], [278, 2, 1, "", "crop"], [278, 3, 1, "", "data"], [278, 2, 1, "", "decimate"], [278, 2, 1, "", "extract_label_time_course"], [278, 2, 1, "", "get_peak"], [278, 2, 1, "", "in_label"], [278, 2, 1, "", "mean"], [278, 2, 1, "", "plot"], [278, 2, 1, "", "plot_3d"], [278, 2, 1, "", "resample"], [278, 2, 1, "", "save"], [278, 2, 1, "", "save_as_volume"], [278, 3, 1, "", "sfreq"], [278, 3, 1, "", "shape"], [278, 2, 1, "", "shift_time"], [278, 2, 1, "", "sqrt"], [278, 2, 1, "", "sum"], [278, 2, 1, "", "time_as_index"], [278, 3, 1, "", "times"], [278, 3, 1, "", "tmax"], [278, 3, 1, "", "tmin"], [278, 2, 1, "", "to_data_frame"], [278, 2, 1, "", "transform"], [278, 2, 1, "", "transform_data"], [278, 3, 1, "", "tstep"]], "mne.VolVectorSourceEstimate": [[279, 2, 1, "", "__add__"], [279, 2, 1, "", "__div__"], [279, 2, 1, "", "__mul__"], [279, 2, 1, "", "__neg__"], [279, 2, 1, "", "__sub__"], [279, 2, 1, "", "apply_baseline"], [279, 2, 1, "", "as_volume"], [279, 2, 1, "", "bin"], [279, 2, 1, "", "copy"], [279, 2, 1, "", "crop"], [279, 3, 1, "", "data"], [279, 2, 1, "", "decimate"], [279, 2, 1, "", "extract_label_time_course"], [279, 2, 1, "", "get_peak"], [279, 2, 1, "", "in_label"], [279, 2, 1, "", "magnitude"], [279, 2, 1, "", "mean"], [279, 2, 1, "", "plot"], [279, 2, 1, "", "plot_3d"], [279, 2, 1, "", "project"], [279, 2, 1, "", "resample"], [279, 2, 1, "", "save"], [279, 2, 1, "", "save_as_volume"], [279, 3, 1, "", "sfreq"], [279, 3, 1, "", "shape"], [279, 2, 1, "", "shift_time"], [279, 2, 1, "", "sqrt"], [279, 2, 1, "", "sum"], [279, 2, 1, "", "time_as_index"], [279, 3, 1, "", "times"], [279, 3, 1, "", "tmax"], [279, 3, 1, "", "tmin"], [279, 2, 1, "", "to_data_frame"], [279, 2, 1, "", "transform"], [279, 2, 1, "", "transform_data"], [279, 3, 1, "", "tstep"]], "mne.baseline": [[286, 4, 1, "", "rescale"]], "mne.beamformer": [[287, 1, 1, "", "Beamformer"], [288, 4, 1, "", "apply_dics"], [289, 4, 1, "", "apply_dics_csd"], [290, 4, 1, "", "apply_dics_epochs"], [291, 4, 1, "", "apply_dics_tfr_epochs"], [292, 4, 1, "", "apply_lcmv"], [293, 4, 1, "", "apply_lcmv_cov"], [294, 4, 1, "", "apply_lcmv_epochs"], [295, 4, 1, "", "apply_lcmv_raw"], [296, 4, 1, "", "make_dics"], [297, 4, 1, "", "make_lcmv"], [298, 4, 1, "", "make_lcmv_resolution_matrix"], [299, 4, 1, "", "rap_music"], [300, 4, 1, "", "read_beamformer"]], "mne.beamformer.Beamformer": [[287, 2, 1, "", "__contains__"], [287, 2, 1, "", "__getitem__"], [287, 2, 1, "", "__iter__"], [287, 2, 1, "", "__len__"], [287, 2, 1, "", "clear"], [287, 2, 1, "", "copy"], [287, 2, 1, "", "fromkeys"], [287, 2, 1, "", "get"], [287, 2, 1, "", "items"], [287, 2, 1, "", "keys"], [287, 2, 1, "", "pop"], [287, 2, 1, "", "popitem"], [287, 2, 1, "", "save"], [287, 2, 1, "", "setdefault"], [287, 2, 1, "", "update"], [287, 2, 1, "", "values"]], "mne.bem": [[301, 1, 1, "", "ConductorModel"], [302, 4, 1, "", "convert_flash_mris"], [303, 4, 1, "", "distance_to_bem"], [304, 4, 1, "", "fit_sphere_to_headshape"], [305, 4, 1, "", "get_fitting_dig"], [306, 4, 1, "", "make_flash_bem"], [307, 4, 1, "", "make_scalp_surfaces"], [308, 4, 1, "", "make_watershed_bem"]], "mne.bem.ConductorModel": [[301, 2, 1, "", "__contains__"], [301, 2, 1, "", "__getitem__"], [301, 2, 1, "", "__iter__"], [301, 2, 1, "", "__len__"], [301, 2, 1, "", "clear"], [301, 2, 1, "", "copy"], [301, 2, 1, "", "fromkeys"], [301, 2, 1, "", "get"], [301, 2, 1, "", "items"], [301, 2, 1, "", "keys"], [301, 2, 1, "", "pop"], [301, 2, 1, "", "popitem"], [301, 3, 1, "", "radius"], [301, 2, 1, "", "setdefault"], [301, 2, 1, "", "update"], [301, 2, 1, "", "values"]], "mne.channels": [[311, 1, 1, "", "DigMontage"], [312, 1, 1, "", "Layout"], [313, 4, 1, "", "combine_channels"], [314, 4, 1, "", "compute_dev_head_t"], [315, 4, 1, "", "compute_native_head_t"], [316, 4, 1, "", "equalize_channels"], [317, 4, 1, "", "find_ch_adjacency"], [318, 4, 1, "", "find_layout"], [319, 4, 1, "", "fix_mag_coil_types"], [320, 4, 1, "", "generate_2d_layout"], [321, 4, 1, "", "get_builtin_ch_adjacencies"], [322, 4, 1, "", "get_builtin_montages"], [323, 4, 1, "", "make_1020_channel_selections"], [324, 4, 1, "", "make_dig_montage"], [325, 4, 1, "", "make_eeg_layout"], [326, 4, 1, "", "make_grid_layout"], [327, 4, 1, "", "make_standard_montage"], [328, 4, 1, "", "read_ch_adjacency"], [329, 4, 1, "", "read_custom_montage"], [330, 4, 1, "", "read_dig_captrak"], [331, 4, 1, "", "read_dig_dat"], [332, 4, 1, "", "read_dig_egi"], [333, 4, 1, "", "read_dig_fif"], [334, 4, 1, "", "read_dig_hpts"], [335, 4, 1, "", "read_dig_localite"], [336, 4, 1, "", "read_dig_polhemus_isotrak"], [337, 4, 1, "", "read_layout"], [338, 4, 1, "", "read_polhemus_fastscan"], [339, 4, 1, "", "rename_channels"]], "mne.channels.DigMontage": [[311, 2, 1, "", "__add__"], [311, 2, 1, "", "add_estimated_fiducials"], [311, 2, 1, "", "add_mni_fiducials"], [311, 2, 1, "", "apply_trans"], [311, 2, 1, "", "copy"], [311, 2, 1, "", "get_positions"], [311, 2, 1, "", "plot"], [311, 2, 1, "", "remove_fiducials"], [311, 2, 1, "", "rename_channels"], [311, 2, 1, "", "save"]], "mne.channels.Layout": [[312, 2, 1, "", "plot"], [312, 2, 1, "", "save"]], "mne.chpi": [[340, 4, 1, "", "compute_chpi_amplitudes"], [341, 4, 1, "", "compute_chpi_locs"], [342, 4, 1, "", "compute_chpi_snr"], [343, 4, 1, "", "compute_head_pos"], [344, 4, 1, "", "extract_chpi_locs_ctf"], [345, 4, 1, "", "extract_chpi_locs_kit"], [346, 4, 1, "", "filter_chpi"], [347, 4, 1, "", "get_active_chpi"], [348, 4, 1, "", "get_chpi_info"], [349, 4, 1, "", "head_pos_to_trans_rot_t"], [350, 4, 1, "", "read_head_pos"], [351, 4, 1, "", "write_head_pos"]], "mne.coreg": [[364, 1, 1, "", "Coregistration"], [365, 4, 1, "", "estimate_head_mri_t"], [366, 4, 1, "", "get_mni_fiducials"]], "mne.coreg.Coregistration": [[364, 2, 1, "", "compute_dig_mri_distances"], [364, 2, 1, "", "fit_fiducials"], [364, 2, 1, "", "fit_icp"], [364, 2, 1, "", "omit_head_shape_points"], [364, 2, 1, "", "reset"], [364, 3, 1, "", "scale"], [364, 2, 1, "", "set_fid_match"], [364, 2, 1, "", "set_grow_hair"], [364, 2, 1, "", "set_rotation"], [364, 2, 1, "", "set_scale"], [364, 2, 1, "", "set_scale_mode"], [364, 2, 1, "", "set_translation"], [364, 3, 1, "", "trans"]], "mne.cov": [[368, 4, 1, "", "compute_whitener"], [369, 4, 1, "", "prepare_noise_cov"], [370, 4, 1, "", "regularize"]], "mne.cuda": [[373, 4, 1, "", "get_cuda_memory"], [374, 4, 1, "", "init_cuda"], [375, 4, 1, "", "set_cuda_device"]], "mne.datasets.brainstorm.bst_auditory": [[376, 4, 1, "", "data_path"]], "mne.datasets.brainstorm.bst_raw": [[377, 4, 1, "", "data_path"]], "mne.datasets.brainstorm.bst_resting": [[378, 4, 1, "", "data_path"]], "mne.datasets.eegbci": [[379, 4, 1, "", "load_data"], [380, 4, 1, "", "standardize"]], "mne.datasets.epilepsy_ecog": [[381, 4, 1, "", "data_path"]], "mne.datasets.erp_core": [[382, 4, 1, "", "data_path"]], "mne.datasets": [[383, 4, 1, "", "fetch_aparc_sub_parcellation"], [384, 4, 1, "", "fetch_dataset"], [385, 4, 1, "", "fetch_fsaverage"], [386, 4, 1, "", "fetch_hcp_mmp_parcellation"], [387, 4, 1, "", "fetch_infant_template"], [388, 4, 1, "", "fetch_phantom"], [390, 4, 1, "", "has_dataset"]], "mne.datasets.fnirs_motor": [[389, 4, 1, "", "data_path"]], "mne.datasets.hf_sef": [[391, 4, 1, "", "data_path"]], "mne.datasets.kiloword": [[392, 4, 1, "", "data_path"]], "mne.datasets.limo": [[393, 4, 1, "", "load_data"]], "mne.datasets.misc": [[394, 4, 1, "", "data_path"]], "mne.datasets.mtrf": [[395, 4, 1, "", "data_path"]], "mne.datasets.multimodal": [[396, 4, 1, "", "data_path"]], "mne.datasets.opm": [[397, 4, 1, "", "data_path"]], "mne.datasets.phantom_4dbti": [[398, 4, 1, "", "data_path"]], "mne.datasets.refmeg_noise": [[399, 4, 1, "", "data_path"]], "mne.datasets.sample": [[400, 4, 1, "", "data_path"]], "mne.datasets.sleep_physionet.age": [[401, 4, 1, "", "fetch_data"]], "mne.datasets.sleep_physionet.temazepam": [[402, 4, 1, "", "fetch_data"]], "mne.datasets.somato": [[403, 4, 1, "", "data_path"]], "mne.datasets.spm_face": [[404, 4, 1, "", "data_path"]], "mne.datasets.ssvep": [[405, 4, 1, "", "data_path"]], "mne.datasets.ucl_opm_auditory": [[406, 4, 1, "", "data_path"]], "mne.datasets.visual_92_categories": [[407, 4, 1, "", "data_path"]], "mne.decoding": [[409, 1, 1, "", "CSP"], [410, 1, 1, "", "EMS"], [411, 1, 1, "", "FilterEstimator"], [412, 1, 1, "", "GeneralizingEstimator"], [413, 1, 1, "", "LinearModel"], [414, 1, 1, "", "PSDEstimator"], [415, 1, 1, "", "ReceptiveField"], [416, 1, 1, "", "SPoC"], [417, 1, 1, "", "SSD"], [418, 1, 1, "", "Scaler"], [419, 1, 1, "", "SlidingEstimator"], [420, 1, 1, "", "TemporalFilter"], [421, 1, 1, "", "TimeDelayingRidge"], [422, 1, 1, "", "TimeFrequency"], [423, 1, 1, "", "UnsupervisedSpatialFilter"], [424, 1, 1, "", "Vectorizer"], [425, 4, 1, "", "compute_ems"], [426, 4, 1, "", "cross_val_multiscore"], [427, 4, 1, "", "get_coef"]], "mne.decoding.CSP": [[409, 2, 1, "", "fit"], [409, 2, 1, "", "fit_transform"], [409, 2, 1, "", "get_params"], [409, 2, 1, "", "plot_filters"], [409, 2, 1, "", "plot_patterns"], [409, 2, 1, "", "set_params"], [409, 2, 1, "", "transform"]], "mne.decoding.EMS": [[410, 2, 1, "", "fit"], [410, 2, 1, "", "fit_transform"], [410, 2, 1, "", "get_params"], [410, 2, 1, "", "set_params"], [410, 2, 1, "", "transform"]], "mne.decoding.FilterEstimator": [[411, 2, 1, "", "fit"], [411, 2, 1, "", "fit_transform"], [411, 2, 1, "", "transform"]], "mne.decoding.GeneralizingEstimator": [[412, 2, 1, "", "decision_function"], [412, 2, 1, "", "fit"], [412, 2, 1, "", "fit_transform"], [412, 2, 1, "", "get_params"], [412, 2, 1, "", "predict"], [412, 2, 1, "", "predict_proba"], [412, 2, 1, "", "score"], [412, 2, 1, "", "set_params"], [412, 2, 1, "", "transform"]], "mne.decoding.LinearModel": [[413, 2, 1, "", "decision_function"], [413, 2, 1, "", "fit"], [413, 2, 1, "", "fit_transform"], [413, 2, 1, "", "get_params"], [413, 2, 1, "", "predict"], [413, 2, 1, "", "predict_proba"], [413, 2, 1, "", "score"], [413, 2, 1, "", "set_params"], [413, 2, 1, "", "transform"]], "mne.decoding.PSDEstimator": [[414, 2, 1, "", "fit"], [414, 2, 1, "", "fit_transform"], [414, 2, 1, "", "transform"]], "mne.decoding.ReceptiveField": [[415, 2, 1, "", "fit"], [415, 2, 1, "", "get_params"], [415, 2, 1, "", "predict"], [415, 2, 1, "", "score"], [415, 2, 1, "", "set_params"]], "mne.decoding.SPoC": [[416, 2, 1, "", "fit"], [416, 2, 1, "", "fit_transform"], [416, 2, 1, "", "get_params"], [416, 2, 1, "", "plot_filters"], [416, 2, 1, "", "plot_patterns"], [416, 2, 1, "", "set_params"], [416, 2, 1, "", "transform"]], "mne.decoding.SSD": [[417, 2, 1, "", "apply"], [417, 2, 1, "", "fit"], [417, 2, 1, "", "fit_transform"], [417, 2, 1, "", "get_params"], [417, 2, 1, "", "get_spectral_ratio"], [417, 2, 1, "", "inverse_transform"], [417, 2, 1, "", "set_params"], [417, 2, 1, "", "transform"]], "mne.decoding.Scaler": [[418, 2, 1, "", "fit"], [418, 2, 1, "", "fit_transform"], [418, 2, 1, "", "get_params"], [418, 2, 1, "", "inverse_transform"], [418, 2, 1, "", "set_params"], [418, 2, 1, "", "transform"]], "mne.decoding.SlidingEstimator": [[419, 2, 1, "", "decision_function"], [419, 2, 1, "", "fit"], [419, 2, 1, "", "fit_transform"], [419, 2, 1, "", "get_params"], [419, 2, 1, "", "predict"], [419, 2, 1, "", "predict_proba"], [419, 2, 1, "", "score"], [419, 2, 1, "", "set_params"], [419, 2, 1, "", "transform"]], "mne.decoding.TemporalFilter": [[420, 2, 1, "", "fit"], [420, 2, 1, "", "fit_transform"], [420, 2, 1, "", "transform"]], "mne.decoding.TimeDelayingRidge": [[421, 2, 1, "", "fit"], [421, 2, 1, "", "get_params"], [421, 2, 1, "", "predict"], [421, 2, 1, "", "set_params"]], "mne.decoding.TimeFrequency": [[422, 2, 1, "", "fit"], [422, 2, 1, "", "fit_transform"], [422, 2, 1, "", "get_params"], [422, 2, 1, "", "set_params"], [422, 2, 1, "", "transform"]], "mne.decoding.UnsupervisedSpatialFilter": [[423, 2, 1, "", "fit"], [423, 2, 1, "", "fit_transform"], [423, 2, 1, "", "get_params"], [423, 2, 1, "", "inverse_transform"], [423, 2, 1, "", "set_params"], [423, 2, 1, "", "transform"]], "mne.decoding.Vectorizer": [[424, 2, 1, "", "fit"], [424, 2, 1, "", "fit_transform"], [424, 2, 1, "", "inverse_transform"], [424, 2, 1, "", "transform"]], "mne.dipole": [[429, 4, 1, "", "get_phantom_dipoles"]], "mne.epochs": [[430, 4, 1, "", "average_movements"], [431, 4, 1, "", "combine_event_ids"], [432, 4, 1, "", "equalize_epoch_counts"], [433, 4, 1, "", "make_metadata"]], "mne.event": [[435, 4, 1, "", "define_target_events"], [436, 4, 1, "", "match_event_names"], [437, 4, 1, "", "shift_time_events"]], "mne.export": [[439, 4, 1, "", "export_epochs"], [440, 4, 1, "", "export_evokeds"], [441, 4, 1, "", "export_evokeds_mff"], [442, 4, 1, "", "export_raw"]], "mne.filter": [[444, 4, 1, "", "construct_iir_filter"], [445, 4, 1, "", "create_filter"], [446, 4, 1, "", "estimate_ringing_samples"], [447, 4, 1, "", "filter_data"], [448, 4, 1, "", "notch_filter"], [449, 4, 1, "", "resample"]], "mne.forward": [[453, 4, 1, "", "compute_depth_prior"], [454, 4, 1, "", "compute_orient_prior"], [455, 4, 1, "", "restrict_forward_to_label"], [456, 4, 1, "", "restrict_forward_to_stc"]], "mne.gui": [[468, 4, 1, "", "coregistration"], [469, 4, 1, "", "locate_ieeg"]], "mne.inverse_sparse": [[472, 4, 1, "", "gamma_map"], [473, 4, 1, "", "make_stc_from_dipoles"], [474, 4, 1, "", "mixed_norm"], [475, 4, 1, "", "tf_mixed_norm"]], "mne.io": [[476, 1, 1, "", "BaseRaw"], [477, 1, 1, "", "Raw"], [478, 1, 1, "", "RawArray"], [479, 4, 1, "", "anonymize_info"], [869, 0, 0, "-", "kit"], [481, 4, 1, "", "read_fiducials"], [482, 4, 1, "", "read_info"], [483, 4, 1, "", "read_raw"], [484, 4, 1, "", "read_raw_artemis123"], [485, 4, 1, "", "read_raw_bdf"], [486, 4, 1, "", "read_raw_boxy"], [487, 4, 1, "", "read_raw_brainvision"], [488, 4, 1, "", "read_raw_bti"], [489, 4, 1, "", "read_raw_cnt"], [490, 4, 1, "", "read_raw_ctf"], [491, 4, 1, "", "read_raw_curry"], [492, 4, 1, "", "read_raw_edf"], [493, 4, 1, "", "read_raw_eeglab"], [494, 4, 1, "", "read_raw_egi"], [495, 4, 1, "", "read_raw_eximia"], [496, 4, 1, "", "read_raw_fieldtrip"], [497, 4, 1, "", "read_raw_fif"], [498, 4, 1, "", "read_raw_fil"], [499, 4, 1, "", "read_raw_gdf"], [500, 4, 1, "", "read_raw_hitachi"], [501, 4, 1, "", "read_raw_kit"], [502, 4, 1, "", "read_raw_nedf"], [503, 4, 1, "", "read_raw_nicolet"], [504, 4, 1, "", "read_raw_nihon"], [505, 4, 1, "", "read_raw_nirx"], [506, 4, 1, "", "read_raw_persyst"], [507, 4, 1, "", "read_raw_snirf"], [508, 4, 1, "", "show_fiff"], [509, 4, 1, "", "write_fiducials"]], "mne.io.Raw": [[477, 2, 1, "", "__contains__"], [477, 2, 1, "", "__getitem__"], [477, 2, 1, "", "__len__"], [477, 3, 1, "", "acqparser"], [477, 2, 1, "", "add_channels"], [477, 2, 1, "", "add_events"], [477, 2, 1, "", "add_proj"], [477, 2, 1, "", "add_reference_channels"], [477, 3, 1, "", "annotations"], [477, 2, 1, "", "anonymize"], [477, 2, 1, "", "append"], [477, 2, 1, "", "apply_function"], [477, 2, 1, "", "apply_gradient_compensation"], [477, 2, 1, "", "apply_hilbert"], [477, 2, 1, "", "apply_proj"], [477, 3, 1, "", "ch_names"], [477, 2, 1, "", "close"], [477, 3, 1, "", "compensation_grade"], [477, 2, 1, "", "compute_psd"], [477, 2, 1, "", "copy"], [477, 2, 1, "", "crop"], [477, 2, 1, "", "crop_by_annotations"], [477, 2, 1, "", "decimate"], [477, 2, 1, "", "del_proj"], [477, 2, 1, "", "describe"], [477, 2, 1, "", "drop_channels"], [477, 2, 1, "", "export"], [477, 3, 1, "", "filenames"], [477, 2, 1, "", "filter"], [477, 3, 1, "", "first_samp"], [477, 3, 1, "", "first_time"], [477, 2, 1, "", "fix_mag_coil_types"], [477, 2, 1, "", "get_channel_types"], [477, 2, 1, "", "get_data"], [477, 2, 1, "", "get_montage"], [477, 2, 1, "", "interpolate_bads"], [477, 3, 1, "", "last_samp"], [477, 2, 1, "", "load_bad_channels"], [477, 2, 1, "", "load_data"], [477, 3, 1, "", "n_times"], [477, 2, 1, "", "notch_filter"], [477, 2, 1, "", "pick"], [477, 2, 1, "", "pick_channels"], [477, 2, 1, "", "pick_types"], [477, 2, 1, "", "plot"], [477, 2, 1, "", "plot_projs_topomap"], [477, 2, 1, "", "plot_psd"], [477, 2, 1, "", "plot_psd_topo"], [477, 2, 1, "", "plot_psd_topomap"], [477, 2, 1, "", "plot_sensors"], [477, 3, 1, "", "proj"], [477, 2, 1, "", "rename_channels"], [477, 2, 1, "", "reorder_channels"], [477, 2, 1, "", "resample"], [477, 2, 1, "", "save"], [477, 2, 1, "", "savgol_filter"], [477, 2, 1, "", "set_annotations"], [477, 2, 1, "", "set_channel_types"], [477, 2, 1, "", "set_eeg_reference"], [477, 2, 1, "", "set_meas_date"], [477, 2, 1, "", "set_montage"], [477, 2, 1, "", "shift_time"], [477, 2, 1, "", "time_as_index"], [477, 3, 1, "", "times"], [477, 3, 1, "", "tmax"], [477, 3, 1, "", "tmin"], [477, 2, 1, "", "to_data_frame"]], "mne.io.RawArray": [[478, 2, 1, "", "__contains__"], [478, 2, 1, "", "__getitem__"], [478, 2, 1, "", "__len__"], [478, 2, 1, "", "add_channels"], [478, 2, 1, "", "add_events"], [478, 2, 1, "", "add_proj"], [478, 2, 1, "", "add_reference_channels"], [478, 3, 1, "", "annotations"], [478, 2, 1, "", "anonymize"], [478, 2, 1, "", "append"], [478, 2, 1, "", "apply_function"], [478, 2, 1, "", "apply_gradient_compensation"], [478, 2, 1, "", "apply_hilbert"], [478, 2, 1, "", "apply_proj"], [478, 3, 1, "", "ch_names"], [478, 2, 1, "", "close"], [478, 3, 1, "", "compensation_grade"], [478, 2, 1, "", "compute_psd"], [478, 2, 1, "", "copy"], [478, 2, 1, "", "crop"], [478, 2, 1, "", "crop_by_annotations"], [478, 2, 1, "", "decimate"], [478, 2, 1, "", "del_proj"], [478, 2, 1, "", "describe"], [478, 2, 1, "", "drop_channels"], [478, 2, 1, "", "export"], [478, 3, 1, "", "filenames"], [478, 2, 1, "", "filter"], [478, 3, 1, "", "first_samp"], [478, 3, 1, "", "first_time"], [478, 2, 1, "", "get_channel_types"], [478, 2, 1, "", "get_data"], [478, 2, 1, "", "get_montage"], [478, 2, 1, "", "interpolate_bads"], [478, 3, 1, "", "last_samp"], [478, 2, 1, "", "load_bad_channels"], [478, 2, 1, "", "load_data"], [478, 3, 1, "", "n_times"], [478, 2, 1, "", "notch_filter"], [478, 2, 1, "", "pick"], [478, 2, 1, "", "pick_channels"], [478, 2, 1, "", "pick_types"], [478, 2, 1, "", "plot"], [478, 2, 1, "", "plot_projs_topomap"], [478, 2, 1, "", "plot_psd"], [478, 2, 1, "", "plot_psd_topo"], [478, 2, 1, "", "plot_psd_topomap"], [478, 2, 1, "", "plot_sensors"], [478, 3, 1, "", "proj"], [478, 2, 1, "", "rename_channels"], [478, 2, 1, "", "reorder_channels"], [478, 2, 1, "", "resample"], [478, 2, 1, "", "save"], [478, 2, 1, "", "savgol_filter"], [478, 2, 1, "", "set_annotations"], [478, 2, 1, "", "set_channel_types"], [478, 2, 1, "", "set_eeg_reference"], [478, 2, 1, "", "set_meas_date"], [478, 2, 1, "", "set_montage"], [478, 2, 1, "", "shift_time"], [478, 2, 1, "", "time_as_index"], [478, 3, 1, "", "times"], [478, 3, 1, "", "tmax"], [478, 3, 1, "", "tmin"], [478, 2, 1, "", "to_data_frame"]], "mne.io.kit": [[480, 4, 1, "", "read_mrk"]], "mne.label": [[510, 4, 1, "", "select_sources"]], "mne.minimum_norm": [[523, 1, 1, "", "InverseOperator"], [524, 4, 1, "", "apply_inverse"], [525, 4, 1, "", "apply_inverse_cov"], [526, 4, 1, "", "apply_inverse_epochs"], [527, 4, 1, "", "apply_inverse_raw"], [528, 4, 1, "", "apply_inverse_tfr_epochs"], [529, 4, 1, "", "compute_rank_inverse"], [530, 4, 1, "", "compute_source_psd"], [531, 4, 1, "", "compute_source_psd_epochs"], [532, 4, 1, "", "estimate_snr"], [533, 4, 1, "", "get_cross_talk"], [534, 4, 1, "", "get_point_spread"], [535, 4, 1, "", "make_inverse_operator"], [536, 4, 1, "", "make_inverse_resolution_matrix"], [537, 4, 1, "", "prepare_inverse_operator"], [538, 4, 1, "", "read_inverse_operator"], [539, 4, 1, "", "resolution_metrics"], [540, 4, 1, "", "source_band_induced_power"], [541, 4, 1, "", "source_induced_power"], [542, 4, 1, "", "write_inverse_operator"]], "mne.minimum_norm.InverseOperator": [[523, 2, 1, "", "__contains__"], [523, 2, 1, "", "__getitem__"], [523, 2, 1, "", "__iter__"], [523, 2, 1, "", "__len__"], [523, 2, 1, "", "clear"], [523, 2, 1, "", "copy"], [523, 2, 1, "", "fromkeys"], [523, 2, 1, "", "get"], [523, 2, 1, "", "items"], [523, 2, 1, "", "keys"], [523, 2, 1, "", "pop"], [523, 2, 1, "", "popitem"], [523, 2, 1, "", "setdefault"], [523, 2, 1, "", "update"], [523, 2, 1, "", "values"]], "mne.preprocessing": [[556, 1, 1, "", "EOGRegression"], [557, 1, 1, "", "ICA"], [558, 1, 1, "", "Xdawn"], [559, 4, 1, "", "annotate_amplitude"], [560, 4, 1, "", "annotate_break"], [561, 4, 1, "", "annotate_movement"], [562, 4, 1, "", "annotate_muscle_zscore"], [563, 4, 1, "", "annotate_nan"], [564, 4, 1, "", "compute_average_dev_head_t"], [565, 4, 1, "", "compute_bridged_electrodes"], [566, 4, 1, "", "compute_current_source_density"], [567, 4, 1, "", "compute_fine_calibration"], [568, 4, 1, "", "compute_maxwell_basis"], [569, 4, 1, "", "compute_proj_ecg"], [570, 4, 1, "", "compute_proj_eog"], [571, 4, 1, "", "corrmap"], [572, 4, 1, "", "cortical_signal_suppression"], [573, 4, 1, "", "create_ecg_epochs"], [574, 4, 1, "", "create_eog_epochs"], [575, 4, 1, "", "equalize_bads"], [576, 4, 1, "", "find_bad_channels_maxwell"], [577, 4, 1, "", "find_ecg_events"], [578, 4, 1, "", "find_eog_events"], [579, 4, 1, "", "fix_stim_artifact"], [580, 4, 1, "", "ica_find_ecg_events"], [581, 4, 1, "", "ica_find_eog_events"], [867, 0, 0, "-", "ieeg"], [583, 4, 1, "", "infomax"], [584, 4, 1, "", "interpolate_bridged_electrodes"], [585, 4, 1, "", "maxwell_filter"], [586, 4, 1, "", "maxwell_filter_prepare_emptyroom"], [867, 0, 0, "-", "nirs"], [593, 4, 1, "", "oversampled_temporal_projection"], [594, 4, 1, "", "peak_finder"], [595, 4, 1, "", "read_eog_regression"], [596, 4, 1, "", "read_fine_calibration"], [597, 4, 1, "", "read_ica"], [598, 4, 1, "", "read_ica_eeglab"], [599, 4, 1, "", "realign_raw"], [600, 4, 1, "", "regress_artifact"], [601, 4, 1, "", "write_fine_calibration"]], "mne.preprocessing.EOGRegression": [[556, 2, 1, "", "apply"], [556, 2, 1, "", "fit"], [556, 2, 1, "", "plot"], [556, 2, 1, "", "save"]], "mne.preprocessing.ICA": [[557, 2, 1, "", "__contains__"], [557, 2, 1, "", "apply"], [557, 3, 1, "", "compensation_grade"], [557, 2, 1, "", "copy"], [557, 2, 1, "", "find_bads_ecg"], [557, 2, 1, "", "find_bads_eog"], [557, 2, 1, "", "find_bads_muscle"], [557, 2, 1, "", "find_bads_ref"], [557, 2, 1, "", "fit"], [557, 2, 1, "", "get_channel_types"], [557, 2, 1, "", "get_components"], [557, 2, 1, "", "get_explained_variance_ratio"], [557, 2, 1, "", "get_sources"], [557, 2, 1, "", "plot_components"], [557, 2, 1, "", "plot_overlay"], [557, 2, 1, "", "plot_properties"], [557, 2, 1, "", "plot_scores"], [557, 2, 1, "", "plot_sources"], [557, 2, 1, "", "save"], [557, 2, 1, "", "score_sources"]], "mne.preprocessing.Xdawn": [[558, 2, 1, "", "apply"], [558, 2, 1, "", "fit"], [558, 2, 1, "", "fit_transform"], [558, 2, 1, "", "get_params"], [558, 2, 1, "", "inverse_transform"], [558, 2, 1, "", "set_params"], [558, 2, 1, "", "transform"]], "mne.preprocessing.ieeg": [[582, 4, 1, "", "project_sensors_onto_brain"]], "mne.preprocessing.nirs": [[587, 4, 1, "", "beer_lambert_law"], [588, 4, 1, "", "optical_density"], [589, 4, 1, "", "scalp_coupling_index"], [590, 4, 1, "", "short_channels"], [591, 4, 1, "", "source_detector_distances"], [592, 4, 1, "", "temporal_derivative_distribution_repair"]], "mne.simulation": [[647, 1, 1, "", "SourceSimulator"], [648, 4, 1, "", "add_chpi"], [649, 4, 1, "", "add_ecg"], [650, 4, 1, "", "add_eog"], [651, 4, 1, "", "add_noise"], [873, 0, 0, "-", "metrics"], [660, 4, 1, "", "select_source_in_label"], [661, 4, 1, "", "simulate_evoked"], [662, 4, 1, "", "simulate_raw"], [663, 4, 1, "", "simulate_sparse_stc"], [664, 4, 1, "", "simulate_stc"]], "mne.simulation.SourceSimulator": [[647, 2, 1, "", "__iter__"], [647, 2, 1, "", "add_data"], [647, 3, 1, "", "duration"], [647, 2, 1, "", "get_stc"], [647, 2, 1, "", "get_stim_channel"], [647, 3, 1, "", "n_times"]], "mne.simulation.metrics": [[652, 4, 1, "", "cosine_score"], [653, 4, 1, "", "f1_score"], [654, 4, 1, "", "peak_position_error"], [655, 4, 1, "", "precision_score"], [656, 4, 1, "", "recall_score"], [657, 4, 1, "", "region_localization_error"], [658, 4, 1, "", "roc_auc_score"], [659, 4, 1, "", "spatial_deviation_error"]], "mne.source_space": [[665, 4, 1, "", "compute_distance_to_sensors"], [666, 4, 1, "", "get_decimated_surfaces"]], "mne.stats": [[675, 4, 1, "", "bonferroni_correction"], [676, 4, 1, "", "bootstrap_confidence_interval"], [677, 4, 1, "", "combine_adjacency"], [678, 4, 1, "", "f_mway_rm"], [679, 4, 1, "", "f_oneway"], [680, 4, 1, "", "f_threshold_mway_rm"], [681, 4, 1, "", "fdr_correction"], [682, 4, 1, "", "linear_regression"], [683, 4, 1, "", "linear_regression_raw"], [684, 4, 1, "", "permutation_cluster_1samp_test"], [685, 4, 1, "", "permutation_cluster_test"], [686, 4, 1, "", "permutation_t_test"], [687, 4, 1, "", "spatio_temporal_cluster_1samp_test"], [688, 4, 1, "", "spatio_temporal_cluster_test"], [689, 4, 1, "", "summarize_clusters_stc"], [690, 4, 1, "", "ttest_1samp_no_p"], [691, 4, 1, "", "ttest_ind_no_p"]], "mne.surface": [[694, 4, 1, "", "complete_surface_info"], [695, 4, 1, "", "read_curvature"]], "mne.time_frequency": [[697, 1, 1, "", "AverageTFR"], [698, 1, 1, "", "CrossSpectralDensity"], [699, 1, 1, "", "EpochsSpectrum"], [700, 1, 1, "", "EpochsTFR"], [701, 1, 1, "", "Spectrum"], [702, 4, 1, "", "csd_array_fourier"], [703, 4, 1, "", "csd_array_morlet"], [704, 4, 1, "", "csd_array_multitaper"], [705, 4, 1, "", "csd_fourier"], [706, 4, 1, "", "csd_morlet"], [707, 4, 1, "", "csd_multitaper"], [708, 4, 1, "", "csd_tfr"], [709, 4, 1, "", "dpss_windows"], [710, 4, 1, "", "fit_iir_model_raw"], [711, 4, 1, "", "fwhm"], [712, 4, 1, "", "istft"], [713, 4, 1, "", "morlet"], [714, 4, 1, "", "pick_channels_csd"], [715, 4, 1, "", "psd_array_multitaper"], [716, 4, 1, "", "psd_array_welch"], [717, 4, 1, "", "read_csd"], [718, 4, 1, "", "read_spectrum"], [719, 4, 1, "", "read_tfrs"], [720, 4, 1, "", "stft"], [721, 4, 1, "", "stftfreq"], [876, 0, 0, "-", "tfr"], [724, 4, 1, "", "tfr_array_morlet"], [725, 4, 1, "", "tfr_array_multitaper"], [726, 4, 1, "", "tfr_array_stockwell"], [727, 4, 1, "", "tfr_morlet"], [728, 4, 1, "", "tfr_multitaper"], [729, 4, 1, "", "tfr_stockwell"], [730, 4, 1, "", "write_tfrs"]], "mne.time_frequency.AverageTFR": [[697, 2, 1, "", "__add__"], [697, 2, 1, "", "__contains__"], [697, 2, 1, "", "__mul__"], [697, 2, 1, "", "__sub__"], [697, 2, 1, "", "add_channels"], [697, 2, 1, "", "add_reference_channels"], [697, 2, 1, "", "apply_baseline"], [697, 3, 1, "", "ch_names"], [697, 3, 1, "", "compensation_grade"], [697, 2, 1, "", "copy"], [697, 2, 1, "", "crop"], [697, 2, 1, "", "decimate"], [697, 2, 1, "", "drop_channels"], [697, 2, 1, "", "get_channel_types"], [697, 2, 1, "", "pick"], [697, 2, 1, "", "pick_channels"], [697, 2, 1, "", "pick_types"], [697, 2, 1, "", "plot"], [697, 2, 1, "", "plot_joint"], [697, 2, 1, "", "plot_topo"], [697, 2, 1, "", "plot_topomap"], [697, 2, 1, "", "reorder_channels"], [697, 2, 1, "", "save"], [697, 2, 1, "", "shift_time"], [697, 2, 1, "", "time_as_index"], [697, 3, 1, "", "times"], [697, 3, 1, "", "tmax"], [697, 3, 1, "", "tmin"], [697, 2, 1, "", "to_data_frame"]], "mne.time_frequency.CrossSpectralDensity": [[698, 2, 1, "", "__getitem__"], [698, 2, 1, "", "__len__"], [698, 2, 1, "", "copy"], [698, 2, 1, "", "get_data"], [698, 2, 1, "", "mean"], [698, 3, 1, "", "n_channels"], [698, 2, 1, "", "pick_channels"], [698, 2, 1, "", "pick_frequency"], [698, 2, 1, "", "plot"], [698, 2, 1, "", "save"], [698, 2, 1, "", "sum"]], "mne.time_frequency.EpochsSpectrum": [[699, 2, 1, "", "__contains__"], [699, 2, 1, "", "__getitem__"], [699, 2, 1, "", "__iter__"], [699, 2, 1, "", "__len__"], [699, 2, 1, "", "add_channels"], [699, 2, 1, "", "add_reference_channels"], [699, 2, 1, "", "average"], [699, 3, 1, "", "compensation_grade"], [699, 2, 1, "", "copy"], [699, 2, 1, "", "drop_channels"], [699, 2, 1, "", "get_channel_types"], [699, 2, 1, "", "get_data"], [699, 3, 1, "", "metadata"], [699, 2, 1, "", "next"], [699, 2, 1, "", "pick"], [699, 2, 1, "", "pick_channels"], [699, 2, 1, "", "pick_types"], [699, 2, 1, "", "plot"], [699, 2, 1, "", "plot_topo"], [699, 2, 1, "", "plot_topomap"], [699, 2, 1, "", "reorder_channels"], [699, 2, 1, "", "save"], [699, 2, 1, "", "to_data_frame"], [699, 2, 1, "", "units"]], "mne.time_frequency.EpochsTFR": [[700, 2, 1, "", "__contains__"], [700, 2, 1, "", "__getitem__"], [700, 2, 1, "", "__iter__"], [700, 2, 1, "", "__len__"], [700, 2, 1, "", "add_channels"], [700, 2, 1, "", "add_reference_channels"], [700, 2, 1, "", "apply_baseline"], [700, 2, 1, "", "average"], [700, 3, 1, "", "ch_names"], [700, 3, 1, "", "compensation_grade"], [700, 2, 1, "", "copy"], [700, 2, 1, "", "crop"], [700, 2, 1, "", "decimate"], [700, 2, 1, "", "drop_channels"], [700, 2, 1, "", "get_channel_types"], [700, 3, 1, "", "metadata"], [700, 2, 1, "", "next"], [700, 2, 1, "", "pick"], [700, 2, 1, "", "pick_channels"], [700, 2, 1, "", "pick_types"], [700, 2, 1, "", "reorder_channels"], [700, 2, 1, "", "save"], [700, 2, 1, "", "shift_time"], [700, 2, 1, "", "time_as_index"], [700, 3, 1, "", "times"], [700, 3, 1, "", "tmax"], [700, 3, 1, "", "tmin"], [700, 2, 1, "", "to_data_frame"]], "mne.time_frequency.Spectrum": [[701, 2, 1, "", "__contains__"], [701, 2, 1, "", "__getitem__"], [701, 2, 1, "", "add_channels"], [701, 2, 1, "", "add_reference_channels"], [701, 3, 1, "", "compensation_grade"], [701, 2, 1, "", "copy"], [701, 2, 1, "", "drop_channels"], [701, 2, 1, "", "get_channel_types"], [701, 2, 1, "", "get_data"], [701, 2, 1, "", "pick"], [701, 2, 1, "", "pick_channels"], [701, 2, 1, "", "pick_types"], [701, 2, 1, "", "plot"], [701, 2, 1, "", "plot_topo"], [701, 2, 1, "", "plot_topomap"], [701, 2, 1, "", "reorder_channels"], [701, 2, 1, "", "save"], [701, 2, 1, "", "to_data_frame"], [701, 2, 1, "", "units"]], "mne.time_frequency.tfr": [[722, 4, 1, "", "cwt"], [723, 4, 1, "", "morlet"]], "mne.transforms": [[732, 1, 1, "", "Transform"], [733, 4, 1, "", "apply_volume_registration"], [734, 4, 1, "", "apply_volume_registration_points"], [735, 4, 1, "", "compute_volume_registration"], [736, 4, 1, "", "quat_to_rot"], [737, 4, 1, "", "read_ras_mni_t"], [738, 4, 1, "", "rot_to_quat"]], "mne.transforms.Transform": [[732, 2, 1, "", "__contains__"], [732, 2, 1, "", "__getitem__"], [732, 2, 1, "", "__iter__"], [732, 2, 1, "", "__len__"], [732, 2, 1, "", "clear"], [732, 2, 1, "", "copy"], [732, 3, 1, "", "from_str"], [732, 2, 1, "", "fromkeys"], [732, 2, 1, "", "get"], [732, 2, 1, "", "items"], [732, 2, 1, "", "keys"], [732, 2, 1, "", "pop"], [732, 2, 1, "", "popitem"], [732, 2, 1, "", "save"], [732, 2, 1, "", "setdefault"], [732, 3, 1, "", "to_str"], [732, 2, 1, "", "update"], [732, 2, 1, "", "values"]], "mne.utils": [[741, 1, 1, "", "deprecated"], [742, 4, 1, "", "warn"]], "mne.viz": [[745, 1, 1, "", "Brain"], [746, 1, 1, "", "ClickableImage"], [747, 1, 1, "", "Figure3D"], [748, 4, 1, "", "add_background_image"], [749, 4, 1, "", "centers_to_edges"], [750, 4, 1, "", "circular_layout"], [751, 4, 1, "", "close_3d_figure"], [752, 4, 1, "", "close_all_3d_figures"], [753, 4, 1, "", "compare_fiff"], [754, 4, 1, "", "create_3d_figure"], [755, 4, 1, "", "get_3d_backend"], [756, 4, 1, "", "get_brain_class"], [757, 4, 1, "", "get_browser_backend"], [758, 4, 1, "", "iter_topography"], [759, 4, 1, "", "link_brains"], [760, 4, 1, "", "mne_analyze_colormap"], [761, 4, 1, "", "plot_alignment"], [762, 4, 1, "", "plot_arrowmap"], [763, 4, 1, "", "plot_bem"], [764, 4, 1, "", "plot_brain_colorbar"], [765, 4, 1, "", "plot_bridged_electrodes"], [766, 4, 1, "", "plot_ch_adjacency"], [767, 4, 1, "", "plot_channel_labels_circle"], [768, 4, 1, "", "plot_chpi_snr"], [769, 4, 1, "", "plot_compare_evokeds"], [770, 4, 1, "", "plot_cov"], [771, 4, 1, "", "plot_csd"], [772, 4, 1, "", "plot_dipole_amplitudes"], [773, 4, 1, "", "plot_dipole_locations"], [774, 4, 1, "", "plot_drop_log"], [775, 4, 1, "", "plot_epochs"], [776, 4, 1, "", "plot_epochs_image"], [777, 4, 1, "", "plot_epochs_psd_topomap"], [778, 4, 1, "", "plot_events"], [779, 4, 1, "", "plot_evoked"], [780, 4, 1, "", "plot_evoked_field"], [781, 4, 1, "", "plot_evoked_image"], [782, 4, 1, "", "plot_evoked_joint"], [783, 4, 1, "", "plot_evoked_topo"], [784, 4, 1, "", "plot_evoked_topomap"], [785, 4, 1, "", "plot_evoked_white"], [786, 4, 1, "", "plot_filter"], [787, 4, 1, "", "plot_head_positions"], [788, 4, 1, "", "plot_ica_components"], [789, 4, 1, "", "plot_ica_overlay"], [790, 4, 1, "", "plot_ica_properties"], [791, 4, 1, "", "plot_ica_scores"], [792, 4, 1, "", "plot_ica_sources"], [793, 4, 1, "", "plot_ideal_filter"], [794, 4, 1, "", "plot_layout"], [795, 4, 1, "", "plot_montage"], [796, 4, 1, "", "plot_projs_joint"], [797, 4, 1, "", "plot_projs_topomap"], [798, 4, 1, "", "plot_raw"], [799, 4, 1, "", "plot_raw_psd"], [800, 4, 1, "", "plot_regression_weights"], [801, 4, 1, "", "plot_sensors"], [802, 4, 1, "", "plot_snr_estimate"], [803, 4, 1, "", "plot_source_estimates"], [804, 4, 1, "", "plot_sparse_source_estimates"], [805, 4, 1, "", "plot_tfr_topomap"], [806, 4, 1, "", "plot_topo_image_epochs"], [807, 4, 1, "", "plot_topomap"], [808, 4, 1, "", "plot_vector_source_estimates"], [809, 4, 1, "", "plot_volume_source_estimates"], [810, 4, 1, "", "set_3d_backend"], [811, 4, 1, "", "set_3d_options"], [812, 4, 1, "", "set_3d_title"], [813, 4, 1, "", "set_3d_view"], [814, 4, 1, "", "set_browser_backend"], [815, 4, 1, "", "snapshot_brain_montage"], [816, 4, 1, "", "use_3d_backend"], [817, 4, 1, "", "use_browser_backend"]], "mne.viz.Brain": [[745, 2, 1, "", "add_annotation"], [745, 2, 1, "", "add_data"], [745, 2, 1, "", "add_dipole"], [745, 2, 1, "", "add_foci"], [745, 2, 1, "", "add_forward"], [745, 2, 1, "", "add_head"], [745, 2, 1, "", "add_label"], [745, 2, 1, "", "add_sensors"], [745, 2, 1, "", "add_skull"], [745, 2, 1, "", "add_text"], [745, 2, 1, "", "add_volume_labels"], [745, 2, 1, "", "apply_auto_scaling"], [745, 2, 1, "", "clear_glyphs"], [745, 2, 1, "", "close"], [745, 3, 1, "", "data"], [745, 2, 1, "", "get_picked_points"], [745, 2, 1, "", "get_view"], [745, 2, 1, "", "help"], [745, 3, 1, "", "interaction"], [745, 2, 1, "", "plot_time_course"], [745, 2, 1, "", "plot_time_line"], [745, 2, 1, "", "remove_annotations"], [745, 2, 1, "", "remove_data"], [745, 2, 1, "", "remove_dipole"], [745, 2, 1, "", "remove_forward"], [745, 2, 1, "", "remove_head"], [745, 2, 1, "", "remove_labels"], [745, 2, 1, "", "remove_sensors"], [745, 2, 1, "", "remove_skull"], [745, 2, 1, "", "remove_text"], [745, 2, 1, "", "remove_volume_labels"], [745, 2, 1, "", "reset"], [745, 2, 1, "", "reset_view"], [745, 2, 1, "", "restore_user_scaling"], [745, 2, 1, "", "save_image"], [745, 2, 1, "", "save_movie"], [745, 2, 1, "", "screenshot"], [745, 2, 1, "", "set_data_smoothing"], [745, 2, 1, "", "set_playback_speed"], [745, 2, 1, "", "set_time"], [745, 2, 1, "", "set_time_interpolation"], [745, 2, 1, "", "set_time_point"], [745, 2, 1, "", "setup_time_viewer"], [745, 2, 1, "", "show"], [745, 2, 1, "", "show_view"], [745, 3, 1, "", "time_interpolation"], [745, 2, 1, "", "toggle_interface"], [745, 2, 1, "", "toggle_playback"], [745, 2, 1, "", "update_lut"]], "mne.viz.ClickableImage": [[746, 2, 1, "", "onclick"], [746, 2, 1, "", "plot_clicks"], [746, 2, 1, "", "to_layout"]], "mne.viz.Figure3D": [[747, 3, 1, "", "plotter"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"]}, "titleterms": {"connect": [0, 27, 146, 245, 837], "analysi": [0, 4, 10, 14, 27, 36, 137, 146, 151, 165, 166, 216, 231, 236, 239, 240, 241, 855, 857, 864], "exampl": [0, 3, 27, 97, 104, 146, 156, 175, 195, 204, 205, 206, 255, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 282, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 306, 308, 309, 310, 311, 312, 313, 315, 317, 321, 322, 323, 324, 325, 327, 328, 329, 333, 336, 337, 340, 341, 342, 343, 344, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 370, 372, 381, 387, 392, 400, 401, 404, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 435, 438, 443, 444, 445, 447, 449, 450, 452, 457, 458, 461, 462, 466, 468, 469, 472, 473, 474, 475, 477, 478, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 544, 546, 548, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 564, 565, 566, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 582, 584, 585, 587, 588, 589, 591, 592, 593, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 619, 620, 623, 625, 626, 627, 628, 629, 630, 632, 636, 638, 639, 641, 642, 644, 645, 646, 647, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 661, 662, 663, 664, 665, 669, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 695, 696, 697, 698, 699, 700, 701, 705, 706, 707, 708, 710, 713, 715, 716, 724, 727, 728, 729, 733, 734, 735, 737, 739, 740, 744, 745, 746, 749, 750, 754, 756, 758, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 776, 778, 781, 783, 785, 786, 787, 793, 796, 797, 802, 803, 804, 807, 808, 810, 812, 813, 815, 817, 818, 822, 823, 824, 825, 826, 829, 831, 854, 863, 866], "brainstorm": [1, 183, 184, 191, 376, 377, 378, 854], "raw": [1, 7, 29, 69, 80, 89, 92, 93, 137, 140, 152, 168, 172, 177, 203, 210, 211, 214, 215, 216, 217, 220, 255, 477, 857, 860, 869], "median": [1, 854], "nerv": [1, 854], "dataset": [1, 2, 3, 4, 7, 27, 69, 82, 183, 184, 185, 191, 214, 240, 248, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 854, 857], "refer": [1, 4, 8, 10, 12, 13, 15, 16, 18, 19, 21, 33, 35, 40, 42, 43, 44, 46, 51, 54, 55, 58, 59, 65, 69, 70, 73, 74, 77, 82, 83, 87, 93, 100, 108, 111, 112, 116, 118, 120, 125, 128, 134, 137, 141, 144, 151, 155, 157, 162, 176, 178, 180, 183, 184, 189, 191, 194, 195, 199, 201, 203, 204, 205, 206, 207, 209, 211, 222, 225, 226, 230, 238, 837, 853, 854, 857, 860, 868], "hf": 2, "sef": [2, 854], "open": [3, 27, 255, 837, 866], "singl": [4, 28, 103, 127, 227, 228, 229], "trial": [4, 127, 210, 215, 227, 228, 229, 239, 240], "linear": [4, 18, 255, 860], "regress": [4, 72, 98, 100, 141, 203, 211], "limo": [4, 393, 854], "about": [4, 170, 171, 198, 860], "data": [4, 5, 7, 8, 11, 13, 15, 18, 19, 21, 27, 29, 30, 41, 42, 49, 51, 57, 63, 65, 70, 72, 74, 79, 80, 85, 88, 89, 91, 92, 93, 94, 95, 96, 98, 99, 108, 113, 114, 115, 118, 119, 120, 128, 135, 136, 137, 140, 141, 142, 146, 147, 149, 150, 152, 159, 165, 166, 167, 168, 169, 172, 175, 177, 178, 180, 188, 189, 190, 191, 192, 194, 200, 202, 203, 210, 211, 214, 215, 216, 217, 218, 220, 221, 222, 226, 229, 230, 231, 233, 234, 235, 238, 240, 247, 255, 662, 853, 854, 857, 860, 863, 869, 872, 874], "load": [4, 19, 47, 72, 114, 115, 136, 137, 140, 141, 149, 159, 166, 175, 178, 190, 194, 205, 214, 221, 860], "visual": [4, 19, 27, 47, 48, 49, 50, 54, 55, 111, 116, 121, 136, 140, 142, 144, 149, 150, 156, 158, 170, 177, 180, 181, 182, 194, 203, 204, 205, 206, 208, 225, 230, 233, 234, 235, 238, 837, 854, 866, 877], "event": [4, 68, 112, 137, 144, 151, 166, 168, 172, 215, 250, 435, 436, 437], "condit": [4, 13, 131, 151, 228, 229], "erp": [4, 141, 144, 151, 854], "effect": [4, 16, 194, 195, 203, 205, 225, 240, 860], "stimulu": [4, 19], "phase": [4, 106], "coher": [4, 239], "prepar": [4, 5, 144, 203, 235], "defin": [4, 68, 89, 156, 225, 227], "predictor": 4, "variabl": [4, 171, 837], "design": [4, 137, 195, 201, 855], "matrix": [4, 41, 64, 69, 102, 162, 225, 233, 853, 857, 860, 863], "extract": [4, 37, 39, 93, 137, 140, 208, 210, 214, 240], "coeffici": [4, 19], "plot": [4, 18, 34, 41, 42, 43, 44, 47, 48, 50, 60, 68, 69, 80, 81, 83, 115, 117, 118, 119, 122, 123, 124, 125, 126, 127, 132, 136, 141, 142, 150, 152, 162, 170, 210, 215, 217, 221, 227, 228, 239, 240, 835, 857], "model": [4, 19, 23, 27, 45, 110, 157, 158, 163, 165, 166, 177, 180, 194, 196, 207, 253, 255, 853, 859, 860, 866], "result": [4, 43, 44, 54, 240], "optic": [5, 210, 211], "pump": [5, 211], "magnetomet": [5, 211], "opm": [5, 108, 188, 211, 397, 854, 866], "local": [5, 31, 165, 176, 177, 178, 182, 186, 837, 853], "perform": [5, 72, 89, 136, 194], "dipol": [5, 45, 89, 115, 176, 178, 181, 261, 429], "fit": [5, 19, 157, 176, 181, 194, 204], "minimum": [5, 860], "norm": [5, 40, 860], "comput": [6, 16, 20, 21, 25, 28, 29, 30, 32, 33, 34, 35, 39, 40, 41, 42, 45, 46, 47, 49, 51, 54, 55, 56, 58, 59, 66, 69, 84, 89, 90, 93, 101, 102, 103, 105, 106, 107, 108, 109, 111, 129, 136, 139, 148, 154, 158, 159, 162, 164, 170, 174, 177, 179, 180, 187, 193, 197, 201, 203, 204, 205, 208, 213, 219, 224, 227, 228, 230, 232, 233, 234, 235, 237, 242, 246, 255, 853, 860, 866], "time": [6, 9, 13, 20, 25, 27, 32, 37, 39, 46, 56, 59, 66, 68, 69, 71, 84, 85, 90, 93, 101, 104, 105, 113, 129, 136, 139, 140, 142, 144, 145, 148, 154, 164, 165, 166, 174, 181, 187, 193, 195, 197, 204, 213, 214, 219, 224, 227, 228, 230, 232, 237, 239, 240, 241, 242, 837, 866, 876], "from": [7, 8, 15, 19, 37, 38, 43, 44, 61, 89, 103, 128, 137, 140, 142, 144, 149, 168, 169, 188, 189, 190, 203, 206, 210, 214, 215, 216, 217, 220, 221, 247, 255, 864], "dspm": [7, 28, 30, 34, 54, 93, 109, 177, 860], "spm": [7, 854], "face": [7, 854], "motor": [8, 854], "imageri": [8, 854], "decod": [8, 9, 11, 12, 13, 15, 17, 18, 27, 195, 249, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427], "eeg": [8, 15, 22, 55, 58, 65, 69, 70, 77, 117, 124, 151, 159, 166, 182, 188, 189, 207, 226, 240, 853, 860, 866], "us": [8, 9, 14, 18, 26, 32, 33, 34, 35, 39, 47, 57, 63, 70, 83, 93, 137, 143, 146, 149, 155, 156, 157, 160, 161, 171, 180, 194, 204, 207, 209, 229, 255, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 282, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 306, 308, 309, 310, 311, 312, 313, 315, 317, 321, 322, 323, 324, 325, 327, 328, 329, 333, 336, 337, 340, 341, 342, 343, 344, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 370, 372, 381, 387, 392, 400, 401, 404, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 435, 438, 443, 444, 445, 447, 449, 450, 452, 457, 458, 461, 462, 466, 468, 469, 472, 473, 474, 475, 477, 478, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 544, 546, 548, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 564, 565, 566, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 582, 584, 585, 587, 588, 589, 591, 592, 593, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 619, 620, 623, 625, 626, 627, 628, 629, 630, 632, 636, 638, 639, 641, 642, 644, 645, 646, 647, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 661, 662, 663, 664, 665, 669, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 695, 696, 697, 698, 699, 700, 701, 705, 706, 707, 708, 710, 713, 715, 716, 724, 727, 728, 729, 733, 734, 735, 737, 739, 740, 744, 745, 746, 749, 750, 754, 756, 758, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 776, 778, 781, 783, 785, 786, 787, 793, 796, 797, 802, 803, 804, 807, 808, 810, 812, 813, 815, 817, 818, 822, 823, 824, 825, 826, 829, 831, 835, 837, 850, 853, 857, 860, 863], "common": [8, 9, 134, 195, 233, 235, 238], "spatial": [8, 9, 16, 21, 54, 55, 180, 195, 221], "pattern": [8, 9, 18, 195], "csp": [8, 9, 409], "frequenc": [9, 27, 32, 46, 59, 104, 112, 113, 136, 165, 166, 190, 198, 201, 208, 227, 228, 230, 238, 239, 240, 241, 854, 866, 876], "space": [9, 11, 13, 18, 24, 26, 30, 41, 54, 58, 100, 103, 106, 109, 146, 158, 159, 163, 165, 178, 195, 205, 206, 209, 215, 221, 233, 235, 255, 853, 860, 863, 872, 874], "represent": [10, 113, 210, 229, 860], "similar": [10, 149], "sourc": [11, 24, 26, 27, 30, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 44, 45, 47, 54, 58, 70, 89, 93, 94, 103, 106, 107, 108, 109, 115, 156, 158, 159, 163, 165, 172, 176, 177, 178, 180, 181, 182, 186, 195, 207, 221, 233, 234, 235, 236, 255, 853, 860, 866, 874], "continu": [12, 80, 98, 100, 146, 147, 165, 166, 190, 194, 208, 214, 216, 217, 218, 860], "target": [12, 68], "spoc": [12, 195, 416], "sensor": [13, 18, 22, 83, 95, 96, 99, 100, 115, 117, 122, 124, 132, 136, 142, 165, 170, 190, 195, 206, 210, 211, 217, 221, 230, 231, 239, 860, 872], "gener": [13, 24, 38, 91, 92, 94, 144, 189, 195, 200, 211, 221, 243, 837, 857, 860], "across": [13, 69, 81, 151, 210], "evok": [14, 30, 34, 41, 51, 68, 85, 89, 91, 93, 118, 119, 120, 126, 131, 149, 150, 151, 152, 153, 165, 166, 172, 177, 203, 211, 220, 265, 853], "respons": [14, 68, 131, 144, 151, 153, 165, 166, 177, 194, 203, 210, 211, 865], "ica": [14, 75, 82, 172, 204, 557, 853], "pca": [14, 47, 255], "reduct": [14, 204, 205, 206], "techniqu": 14, "xdawn": [15, 87, 195, 558], "match": [16, 195, 204], "filter": [16, 18, 21, 49, 79, 113, 151, 180, 195, 201, 202, 204, 209, 211, 444, 445, 446, 447, 448, 449, 860], "em": [16, 410], "machin": [17, 27, 165, 196], "learn": [17, 27, 137, 165, 196], "encod": [17, 27, 662], "mvpa": [17, 27, 195], "classifi": 18, "logisticregress": 18, "recept": [19, 194], "field": [19, 150, 151, 194, 860, 863], "estim": [19, 34, 38, 41, 42, 43, 44, 57, 89, 153, 165, 166, 181, 182, 194, 208, 221, 236, 245, 853, 860], "predict": [19, 860], "public": [19, 126], "creat": [19, 89, 93, 114, 115, 137, 140, 144, 149, 188, 194, 203, 206, 207, 216, 220, 221, 229, 247, 255, 837, 853, 860], "investig": 19, "reconstruct": [19, 89, 93, 155, 160, 180, 206, 853], "spectro": [21, 194], "decomposit": 21, "ssd": [21, 417], "epoch": [21, 28, 42, 93, 103, 113, 116, 137, 140, 142, 143, 144, 145, 146, 147, 149, 151, 152, 165, 166, 172, 200, 203, 204, 210, 220, 230, 233, 235, 263, 430, 431, 432, 433, 853, 860], "displai": 22, "sensit": [22, 130], "map": [22, 35, 111, 119, 130, 142, 149, 150, 215, 222, 860], "meg": [22, 55, 73, 77, 86, 122, 132, 166, 188, 211, 221, 854, 860, 866], "forward": [23, 27, 47, 108, 158, 159, 163, 165, 172, 180, 253, 267, 453, 454, 455, 456, 853, 857, 860], "left": [24, 210], "cerebellum": 24, "volum": [24, 30, 41, 50, 181], "morph": [26, 43, 44, 180, 860], "galleri": 27, "input": [27, 62], "output": [27, 62, 160, 180], "simul": [27, 88, 89, 91, 92, 93, 94, 113, 165, 194, 204, 221, 222, 223, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 873], "preprocess": [27, 76, 108, 136, 141, 165, 166, 210, 211, 212, 216, 240, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 853, 867], "statist": [27, 97, 165, 225, 226, 227, 228, 230, 231, 233, 234, 235, 236, 240, 860, 866, 875], "invers": [27, 28, 29, 30, 31, 35, 36, 39, 40, 41, 42, 47, 52, 57, 93, 103, 165, 166, 177, 186, 846, 852, 853, 857, 860], "problem": [27, 36, 201], "mne": [28, 30, 41, 42, 54, 60, 75, 115, 123, 155, 160, 161, 166, 171, 172, 177, 179, 188, 199, 201, 204, 205, 209, 214, 220, 225, 244, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 834, 837, 839, 840, 841, 843, 844, 845, 849, 852, 856, 857, 860, 863, 871], "solut": [28, 29, 30, 35, 39, 40, 41, 47, 60, 103, 158, 172, 177, 179, 201, 204, 255, 846, 853, 857, 860], "sloreta": [29, 177, 860], "custom": [31, 126, 132, 172, 190], "solver": 31, "level": [32, 95, 128, 863], "timecours": [32, 45, 126], "dic": [32, 33, 34, 222], "beamform": [32, 33, 34, 49, 180, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300], "power": [33, 34, 42, 103, 106, 107, 108, 109, 136, 142, 151, 195, 198, 202, 222, 227, 228, 229, 239, 240], "er": 34, "lcmv": [34, 49, 180], "covari": [34, 42, 49, 64, 120, 162, 172, 177, 180, 221, 246, 260, 853, 857, 860], "some": [34, 201, 863], "spars": [35, 40, 59], "gamma": [35, 136], "empir": 35, "bayesian": 35, "method": [35, 74, 211, 214, 217, 225], "cours": [37, 93, 181], "source_estim": 37, "object": [37, 44, 137, 140, 142, 143, 145, 149, 150, 168, 169, 214, 216, 217, 220, 238, 247, 854, 857], "function": [38, 47, 48, 49, 50, 137, 210, 225, 235, 837, 841, 857, 863], "label": [38, 39, 41, 47, 103, 106, 107, 221, 269, 510, 863], "seri": [39, 69, 142], "activ": [39, 89, 93, 126, 127, 165, 180, 196, 210], "view": [39, 41, 81, 115, 143, 210, 227, 228, 255], "vector": [39, 43, 60, 172, 180, 181, 195, 424], "mix": [40, 41], "mxne": [40, 46, 59], "irmxn": 40, "set": [41, 43, 145, 151, 157, 171, 189, 207, 227, 229, 230, 233, 234, 235, 255, 837, 853, 854], "up": [41, 43, 157, 161, 255, 837, 853], "our": [41, 182], "fwd": [41, 863], "surfac": [41, 43, 158, 160, 161, 170, 181, 182, 210, 255, 694, 695, 853, 860, 863], "process": [41, 167, 180, 837, 851], "project": [42, 83, 114, 130, 170, 172, 195, 205, 255, 272, 859, 860, 863], "empti": [42, 128, 206], "room": [42, 128, 206], "appli": [42, 43, 44, 74, 137, 144, 180, 188, 190, 201, 203, 205, 240, 255], "oper": [42, 47, 52, 93, 113, 158, 159, 161, 216, 853, 855, 860], "sourcemorph": [43, 44, 275], "sourceestim": [43, 172, 175, 274], "read": [43, 44, 47, 52, 53, 64, 65, 137, 165, 168, 170, 189, 192, 215, 216, 230, 233, 235, 857, 863, 869], "write": [43, 44, 64, 215, 216, 863], "disk": [43, 44, 140], "volumetr": [44, 180, 860], "get": [44, 61, 159, 161, 171, 172, 182, 240, 844, 857, 858, 862], "volsourceestim": [44, 278], "convert": [44, 114, 145, 168, 210, 255], "nifti": 44, "an": [45, 52, 53, 57, 69, 116, 142, 143, 145, 157, 159, 161, 168, 169, 172, 180, 182, 204, 207, 211, 240, 853], "xfit": 45, "like": [45, 170], "multi": 45, "iter": [46, 140], "reweight": 46, "tf": 46, "multiscal": 46, "dictionari": 46, "leakag": 47, "among": [47, 149], "circular": 47, "graph": 47, "organis": 47, "cortic": [47, 67, 125, 136, 160, 233, 235, 853, 860], "parcel": [47, 125], "point": [47, 48, 50, 157, 221, 860], "spread": [47, 48, 50, 221], "summari": [47, 69, 167, 175, 198, 199, 201, 214, 878], "all": [47, 134, 180, 199, 229, 233, 235, 837, 841, 845, 857], "evalu": [47, 210], "base": [47, 68, 137, 141, 200, 255, 855, 860], "psf": [47, 48, 50], "correl": 47, "save": [47, 140, 149, 172, 205, 214], "figur": [47, 126, 172], "option": [47, 119, 255, 837, 857], "individu": [47, 863], "cross": [48, 49, 102, 133, 837], "talk": [48, 49], "ctf": [48, 122, 184, 188, 191], "differ": [49, 75, 89, 131, 141, 165, 192, 194, 240], "matric": [49, 162, 180], "resolut": [49, 54, 55, 161, 255], "two": [49, 221], "rap": 51, "music": 51, "stc": [53, 89, 175, 181, 863], "file": [53, 61, 170, 172, 189, 215, 216, 252, 255, 853, 857, 860, 863], "metric": [54, 55, 69, 652, 653, 654, 655, 656, 657, 658, 659], "compar": [55, 69, 75, 89, 131, 150, 151, 194, 210, 211, 225, 255], "eegmeg": 55, "snr": [57, 58, 208, 240], "prior": 59, "full": [60, 230], "valu": [60, 145, 240], "averag": [61, 113, 149, 151, 207, 860], "info": [61, 169, 214, 220, 255, 268, 863], "fif": [61, 188, 255, 857], "how": [63, 114, 160, 162, 199, 206, 216, 852, 857], "neural": [63, 165, 194, 196, 210], "ensembl": 63, "neo": 63, "format": [63, 145, 189, 190, 860], "nois": [64, 120, 128, 177, 198, 202, 205, 206, 221, 240, 853, 854, 860], "xdf": [65, 189], "signal": [67, 150, 167, 168, 205, 206, 208, 209, 210, 211, 221, 240, 860, 863], "suppress": [67, 853], "css": 67, "remov": [67, 72, 82, 204, 205, 210, 233, 235], "lag": 68, "identifi": 69, "electrod": [69, 78, 114, 134, 136, 182, 189, 860], "bridg": 69, "too": 69, "much": 69, "gel": 69, "electr": 69, "distanc": 69, "examin": [69, 141, 211], "distribut": [69, 74, 178, 835, 866], "topomap": [69, 119], "voltag": 69, "subject": [69, 93, 208, 255, 854], "eegbci": [69, 82, 379, 380, 854], "The": [69, 140, 144, 149, 167, 168, 169, 170, 175, 178, 180, 200, 214, 238, 853, 854, 859, 860, 863], "relationship": [69, 175], "between": [69, 168, 228], "imped": 69, "transform": [70, 113, 137, 156, 160, 195, 233, 235, 732, 733, 734, 735, 736, 737, 738, 860, 863], "current": [70, 115, 176, 254, 860, 865, 878], "densiti": [70, 102, 103, 107, 108, 210, 217, 240], "csd": [70, 102], "show": [71, 128, 255], "eog": [71, 72, 198, 203, 204, 206, 255], "artifact": [71, 72, 73, 74, 80, 81, 198, 202, 203, 204, 206, 255, 853], "reduc": 72, "through": 72, "import": [72, 74, 126, 188, 189, 190, 255, 837], "packag": [72, 845, 860], "befor": [72, 203, 837], "after": [72, 835], "comparison": [72, 133, 225, 229], "find": [73, 221, 230, 233], "channel": [73, 77, 86, 116, 140, 145, 149, 151, 167, 168, 169, 170, 188, 199, 200, 204, 207, 210, 214, 230, 233, 235, 240, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 662, 853, 854, 860, 863], "visualis": [74, 226], "nir": [74, 587, 588, 589, 590, 591, 592], "correct": [74, 96, 141, 144, 225], "add": [74, 115], "artifici": 74, "tempor": [74, 83, 110, 194, 195, 233, 234, 235], "deriv": 74, "repair": [74, 202, 203, 204, 206, 860], "algorithm": [75, 255, 852, 860], "interpol": [77, 119, 199, 860], "bad": [77, 156, 157, 161, 199, 200, 233, 235, 853, 860], "locat": [78, 134, 142, 151, 170, 182, 189, 190, 210, 217, 860], "micro": 78, "scale": [78, 85, 145, 152, 860], "intracrani": [78, 134], "contact": [78, 134], "maxwel": [79, 209, 860], "movement": [79, 80, 208, 209], "compens": [79, 188, 209, 860, 863], "annot": [80, 81, 137, 168, 200, 210, 216, 257, 853], "reestim": 80, "dev_head_t": 80, "head": [80, 115, 156, 158, 160, 161, 182, 189, 208, 255, 853, 860], "posit": [80, 114, 115, 208], "respect": 80, "mean": [80, 151], "record": [80, 81, 165, 189, 192, 206], "muscl": [81, 82], "z": 81, "score": [81, 89], "compon": [82, 144, 180, 204], "let": 82, "": [82, 113, 160, 878], "now": 82, "replic": 82, "thi": [82, 194], "denois": [83, 87, 211], "oversampl": 83, "shift": 85, "remap": 86, "type": [86, 140, 151, 169, 194, 201, 214, 240, 255, 837, 860], "main": 89, "paramet": [89, 167, 200, 227, 229, 230, 233, 234, 235], "true": 89, "correspond": [89, 853], "amplitud": [89, 151, 200], "threshold": [89, 225, 226], "For": [89, 863], "region": [89, 115, 151], "anatomi": 93, "responss": 93, "permut": [95, 99, 229, 230, 233, 234], "f": [95, 98, 230], "test": [95, 96, 99, 137, 225, 229, 230, 233, 234, 836, 837, 843], "1d": 95, "cluster": [95, 225, 227, 228, 229, 230, 233, 234, 235, 866], "fdr": [96, 225, 229], "t": [96, 99, 233, 857], "rer": 98, "p": 98, "analys": [100, 853], "featur": [100, 136, 137], "bin": [100, 188, 857], "spectral": [102, 103, 107, 108, 217, 238, 240], "psd": [103, 107, 108, 240], "lock": [106, 144], "vectorview": [108, 188, 214], "align": [108, 134, 156, 160, 255, 662, 853], "alpha": 108, "beta": 108, "induc": 109, "whiten": [110, 120, 152, 860, 863], "ar": [110, 149, 171, 198, 205, 857, 863], "erd": 111, "explor": [112, 136], "relat": [112, 151, 844, 863], "dynam": 112, "specif": 112, "band": 112, "multitap": 113, "v": [113, 195, 214, 840], "morlet": [113, 713, 723], "stockwel": 113, "hilbert": 113, "calcul": [113, 240, 853, 860], "tfr": [113, 229, 722, 723], "wavelet": 113, "narrow": 113, "bandpass": 113, "without": [113, 156], "over": [113, 116, 140, 195, 210], "arrai": [113, 168, 215, 247, 860], "3d": [114, 150, 170, 180, 835, 857, 860, 866], "2d": [114, 170, 180, 866], "imag": [114, 115, 116, 142, 150, 172, 210, 255, 852, 860, 866], "snapshot": 114, "manual": [114, 170, 204], "viz": [115, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817], "brain": [115, 123, 126, 136, 160, 180, 210, 745], "inform": [115, 169, 171, 178, 201, 210, 255, 853, 860, 863], "modifi": [115, 143, 167, 214, 837], "highlight": 115, "includ": [115, 215, 255], "screenshot": 115, "export": [115, 145, 161, 214, 251, 439, 440, 441, 442], "scalp": [117, 141, 150], "topograph": [118, 119, 150, 152, 210], "arrowmap": 118, "basic": [119, 136, 140, 144, 149, 201, 240, 837, 863], "plot_topomap": [119, 807], "addit": 119, "more": [119, 126, 210, 863], "advanc": [119, 835], "usag": 119, "anim": 119, "layout": [122, 124, 170, 229, 312], "system": [122, 124, 165, 171, 188, 190, 192, 255, 843, 860], "neuromag": [122, 188], "bti": [122, 185, 188, 255, 854], "kit": [122, 188, 255, 480], "artemis123": [122, 188], "helmet": 123, "make": [126, 168, 215, 837, 859], "readi": 126, "montag": [126, 170], "inset": 126, "group": [127, 144, 853], "roi": [127, 240], "sort": 127, "rt": 127, "ssp": [130, 205, 206, 255, 853, 860], "topographi": [132, 141, 150, 240], "hemispher": [133, 255, 853], "t1": 134, "acpc": 134, "freesurf": [134, 155, 160, 255, 838, 853, 860, 863], "recon": 134, "ct": 134, "mr": 134, "mark": [134, 199, 853], "each": [134, 221], "warp": 134, "atla": 134, "work": [135, 136, 143, 165, 170, 172, 191, 199, 215, 218, 835, 857], "seeg": [135, 854, 866], "ecog": [136, 854, 866], "templat": [136, 159, 204, 854], "evolut": 136, "sleep": [137, 854], "stage": 137, "classif": 137, "polysomnographi": 137, "psg": 137, "hypnogram": 137, "30": 137, "found": [137, 857], "same": 137, "step": [137, 155, 840, 857], "bob": 137, "engin": 137, "scikit": 137, "python": [137, 155, 160, 161, 166, 171, 172, 199, 201, 204, 205, 209, 214, 220, 244, 255, 834, 835, 837, 839, 840, 841, 842, 845, 852, 855, 856, 857, 862, 866, 868], "multiclass": 137, "workflow": [137, 837, 853], "further": 137, "exercis": [137, 158, 195, 221, 230, 239, 240], "clinic": [138, 165, 866], "applic": [138, 165], "structur": [140, 149, 168, 169, 175, 188, 214, 220, 860, 863], "discontinu": 140, "subselect": [140, 215], "select": [140, 143, 149, 204, 210, 214, 233, 863], "index": [140, 145, 214, 240], "drop": [140, 149, 169, 214], "reorder": [140, 149, 214], "chang": [140, 207, 214, 837, 878], "name": [140, 151, 188, 214, 837, 863], "domain": [140, 190, 204, 214, 238], "other": [140, 149, 201, 254, 835, 837, 841, 852, 860, 864], "form": [140, 240], "baselin": [141, 201, 221, 286], "tradit": 141, "regressor": 141, "wave": [141, 190], "interact": [141, 142, 216, 217, 855], "term": 141, "pipelin": [142, 866], "script": [142, 172, 855], "projector": [142, 205, 206, 207, 217], "spectrum": [142, 238, 701], "metadata": [143, 144], "restrict": 143, "datafram": [143, 145], "queri": [143, 169, 214], "ad": [143, 144, 172, 205], "auto": 144, "make_metadata": [144, 433], "specifi": [144, 190], "keep": 144, "onli": [144, 841, 845], "first": [144, 155, 837, 840, 866], "new": [144, 837, 878], "column": [144, 168], "describ": [144, 837], "stimul": [144, 240], "side": 144, "knowledg": 144, "ern": 144, "panda": 145, "wide": 145, "versu": [145, 229, 855], "long": [145, 214], "divid": 146, "equal": [146, 215], "characterist": 146, "fix": [146, 161, 178, 179], "length": [146, 201], "case": 146, "segment": [147, 165], "subset": [149, 169, 240], "memori": [149, 188, 860], "core": [149, 841, 854, 857], "combin": [149, 215], "trace": 150, "butterfli": 150, "arrow": 150, "joint": [150, 239], "subplot": 150, "potenti": [151, 864], "global": 151, "gfp": 151, "interest": [151, 230, 859], "grand": 151, "latenc": 151, "measur": [151, 229, 235, 255], "peak": 151, "mri": [155, 156, 159, 160, 172, 180, 182, 255, 851, 854, 860], "anatom": [155, 853], "fsaverag": [155, 159, 180, 854], "coordin": [156, 160, 190, 255, 853, 860, 863], "frame": [156, 160, 853], "understand": [156, 160], "definit": [156, 230, 860, 863], "A": [156, 857], "good": 156, "defac": 156, "tran": [156, 863], "gui": [156, 255, 468, 469], "autom": 157, "approach": [157, 255], "coregistr": [157, 158, 172, 255, 364, 468], "initi": 157, "fiduci": 157, "refin": 157, "icp": 157, "omit": 157, "final": 157, "bem": [158, 161, 172, 255, 301, 302, 303, 304, 305, 306, 307, 308, 853, 857, 860], "adult": 159, "setup": [159, 222, 229, 230, 835, 840, 848], "infant": [159, 854], "surrog": 159, "under": [160, 857], "hood": 160, "ra": [160, 182], "spheric": 160, "decim": [160, 857], "mni": [160, 180], "affin": 160, "inflat": 160, "blender": 161, "edit": [161, 172], "low": [161, 198, 201], "high": [161, 201, 255, 854, 863], "tip": 161, "what": [161, 168, 198, 204, 205, 206, 255, 819, 844, 857, 878], "you": 161, "still": [161, 857], "error": 161, "clean": [161, 255], "dens": 161, "smooth": [161, 860], "topolog": 161, "deal": 161, "topologi": [161, 860], "pymeshfix": 161, "should": [162, 844, 857], "i": [162, 168, 170, 204, 205, 206, 252, 835, 841, 843, 844, 857, 860], "regular": [162, 177, 194, 370, 857, 860], "tutori": [165, 173, 183, 184, 185, 866], "introductori": [165, 173], "overview": [166, 198, 837, 844, 853, 854, 861, 863], "detect": [166, 198, 200, 210], "experiment": 166, "place": [167, 170, 855], "pick": 167, "copi": 167, "pars": 168, "stim": [168, 662], "middl": 168, "embed": 168, "multipl": [168, 225, 229, 857], "per": [168, 853], "obtain": 169, "built": [170, 217], "eeglab": [170, 189, 841, 864], "sphere": [170, 860], "keyword": 170, "avail": 170, "mani": 170, "control": 170, "digit": [170, 860], "render": [170, 180, 835], "configur": [171, 837, 843, 847], "where": 171, "store": 171, "environ": [171, 837], "log": [171, 189, 847], "your": [171, 836, 837], "start": [172, 862], "report": [172, 201, 255, 273, 871], "inverseoper": [172, 523], "code": [172, 238, 837, 840, 854], "e": 172, "g": 172, "tag": [172, 240, 863], "entir": 172, "folder": [172, 255], "html": 172, "descript": [172, 860], "text": 172, "inspect": [175, 239, 860], "sourcespac": [175, 276], "src": 175, "equival": 176, "ecd": 176, "eloreta": [177, 860], "role": 178, "orient": [178, 179, 860], "loos": 178, "limit": 178, "them": 178, "discard": 178, "variou": 179, "free": [179, 225], "introduct": 180, "handl": [180, 199], "depth": [180, 860], "bia": [180, 206], "On": [180, 863], "slice": 180, "orthoview": 180, "glass": 180, "maximum": [180, 225], "voxel": [180, 182], "three": 180, "given": 182, "prerequisit": 182, "coord": 182, "elekta": [183, 188], "phantom": [183, 184, 185], "4d": [185, 255, 854], "neuroimag": [185, 188, 854], "devic": [188, 189, 190, 860], "megin": 188, "triux": 188, "fil": 188, "4": [188, 878], "d": 188, "dir": 188, "polhemu": 188, "softwar": [188, 201, 844, 852, 860, 863, 864], "gradient": [188, 860, 863], "ricoh": 188, "con": 188, "sqd": 188, "fieldtrip": [188, 230], "mat": 188, "arbitrari": [188, 235], "brainvis": 189, "vhdr": 189, "vmrk": 189, "european": 189, "edf": 189, "biosemi": 189, "bdf": 189, "gdf": 189, "neuroscan": 189, "cnt": 189, "egi": 189, "simpl": [189, 857], "binari": 189, "mff": 189, "fdt": 189, "nicolet": 189, "eximia": 189, "nxe": 189, "persyst": 189, "lai": 189, "dat": 189, "nihon": 189, "kohden": 189, "21e": 189, "pnt": 189, "xdfz": 189, "shape": 189, "fnir": [190, 210, 854], "standard": [190, 210, 225, 380, 837], "snirf": 190, "nirx": 190, "directori": [190, 854, 860, 863], "hdr": 190, "hitachi": 190, "csv": 190, "boxi": 190, "txt": 190, "legaci": [190, 238], "tsv": 190, "auditori": [191, 854], "strf": 194, "audio": 194, "recov": 194, "philosophi": [195, 855], "class": [195, 238, 835, 843, 850, 866], "scaler": [195, 418], "psdestim": [195, 414], "filterestim": [195, 411], "comodul": 195, "do": [198, 857], "drift": [198, 202, 204], "line": [198, 202, 255, 837, 863], "heartbeat": 198, "ecg": [198, 204, 206, 255], "ocular": 198, "block": 199, "execut": 199, "when": [199, 205, 837], "look": [199, 204, 857], "why": [199, 857, 860], "reject": [200, 853], "span": 200, "break": 200, "reject_by_annot": 200, "programmat": [200, 216], "background": [201, 202, 205, 207, 209, 221], "statement": 201, "fir": 201, "iir": 201, "pitfal": [201, 864], "pass": 201, "default": [201, 860], "c": [201, 843], "cutoff": 201, "order": 201, "transit": 201, "bandwidth": 201, "roll": 201, "off": [201, 835], "passband": 201, "rippl": 201, "stopband": 201, "attenu": 201, "delai": 201, "direct": 201, "resampl": [202, 225, 449, 857], "slow": [202, 204, 857], "best": [202, 205], "practic": [202, 205], "origin": [203, 221], "subtract": 203, "dimension": 204, "ignor": 204, "terminologi": 205, "environment": 206, "affect": [206, 216], "choos": 206, "number": [206, 214, 860], "via": [206, 211, 841, 860, 866], "infinit": 207, "rest": [207, 854], "bipolar": 207, "hpi": 208, "separ": [209, 240], "sss": 209, "spatiotempor": [209, 230], "tsss": 209, "caveat": 209, "infrar": 210, "spectroscopi": 210, "provid": [210, 225], "meaning": 210, "appropri": 210, "intens": 210, "qualiti": 210, "haemoglobin": 210, "heart": 210, "rate": [210, 225], "consist": [210, 220, 837], "tap": 210, "right": 210, "hand": 210, "nuisanc": 211, "attribut": 214, "sampl": [214, 227, 229, 234, 400, 854], "len": 214, "get_data": 214, "wai": 214, "exclud": 215, "id": [215, 841, 863], "descriptor": 215, "togeth": 215, "brows": [217, 255], "scratch": 220, "unit": [220, 860], "corrupt": 221, "known": 221, "period": 221, "sinusoid": 221, "distant": 221, "center": [221, 848], "vertic": 221, "infer": 225, "hypothesi": 225, "null": 225, "parametr": [225, 227, 228], "hat": 225, "varianc": 225, "adjust": 225, "non": [225, 227, 228], "bonferroni": 225, "fals": 225, "discoveri": 225, "size": 225, "adjac": [225, 227, 230, 233], "enhanc": [225, 878], "tfce": 225, "signific": [226, 233], "1": [227, 878], "mass": 229, "univari": 229, "twowai": 229, "repeat": [229, 235], "anova": [229, 235], "account": 229, "neighbor": 230, "spatio": [233, 234, 235], "one": [233, 235], "2": [234, 878], "contrast": 235, "epochsspectrum": [238, 699], "migrat": [238, 864], "quick": 238, "action": 238, "inter": 239, "itc": 239, "ssvep": [240, 405, 854], "vssr": 240, "ratio": 240, "spectra": 240, "12": [240, 878], "hz": 240, "indic": 240, "check": [240, 255, 860], "15": [240, 878], "debrief": 240, "bonu": 240, "durat": 240, "resolv": 240, "bibliographi": 243, "paper": 244, "cite": [244, 852, 857], "o": [252, 841, 860], "fund": [254, 859], "support": [254, 841, 860, 866], "institut": [254, 859, 865], "partner": [254, 859, 865], "former": [254, 865], "command": [255, 837, 857], "tool": [255, 837, 844], "anonym": 255, "browse_raw": 255, "bti2fiff": 255, "magneswh3600": 255, "note": [255, 863], "clean_eog_ecg": 255, "ie": 255, "compare_fiff": [255, 753], "fiff": [255, 863], "compute_proj_ecg": [255, 569], "compute_proj_eog": [255, 570], "coreg": [255, 364, 365, 366], "flash_bem": 255, "3": [255, 878], "layer": 255, "flash": [255, 860], "freeview_bem_surfac": 255, "freeview": 255, "kit2fiff": 255, "nyu": 255, "make_scalp_surfac": [255, 307], "maxfilt": 255, "prepare_bem_model": 255, "colloc": 255, "setup_forward_model": 255, "setup_source_spac": [255, 645], "bilater": 255, "subsampl": 255, "show_fiff": [255, 508], "content": [255, 854, 866], "show_info": 255, "surf2bem": 255, "sys_info": [255, 696], "watershed_bem": 255, "watersh": [255, 857, 860], "acqparserfif": 256, "baseepoch": 258, "bihemilabel": 259, "dipolefix": 262, "epochsarrai": 264, "evokedarrai": 266, "mixedsourceestim": 270, "mixedvectorsourceestim": 271, "vectorsourceestim": 277, "volvectorsourceestim": 279, "add_reference_channel": 280, "add_source_space_dist": 281, "annotations_from_ev": 282, "apply_forward": 283, "apply_forward_raw": 284, "average_forward_solut": 285, "rescal": 286, "apply_d": 288, "apply_dics_csd": 289, "apply_dics_epoch": 290, "apply_dics_tfr_epoch": 291, "apply_lcmv": 292, "apply_lcmv_cov": 293, "apply_lcmv_epoch": 294, "apply_lcmv_raw": 295, "make_d": 296, "make_lcmv": 297, "make_lcmv_resolution_matrix": 298, "rap_mus": 299, "read_beamform": 300, "conductormodel": 301, "convert_flash_mri": 302, "distance_to_bem": 303, "fit_sphere_to_headshap": 304, "get_fitting_dig": 305, "make_flash_bem": 306, "make_watershed_bem": 308, "channel_indices_by_typ": 309, "channel_typ": 310, "digmontag": 311, "combine_channel": 313, "compute_dev_head_t": 314, "compute_native_head_t": 315, "equalize_channel": [316, 434], "find_ch_adjac": 317, "find_layout": 318, "fix_mag_coil_typ": 319, "generate_2d_layout": 320, "get_builtin_ch_adjac": 321, "get_builtin_montag": 322, "make_1020_channel_select": 323, "make_dig_montag": 324, "make_eeg_layout": 325, "make_grid_layout": 326, "make_standard_montag": 327, "read_ch_adjac": 328, "read_custom_montag": 329, "read_dig_captrak": 330, "read_dig_dat": 331, "read_dig_egi": 332, "read_dig_fif": 333, "read_dig_hpt": 334, "read_dig_localit": 335, "read_dig_polhemus_isotrak": 336, "read_layout": 337, "read_polhemus_fastscan": 338, "rename_channel": [339, 633], "chpi": [340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351], "compute_chpi_amplitud": 340, "compute_chpi_loc": 341, "compute_chpi_snr": 342, "compute_head_po": 343, "extract_chpi_locs_ctf": 344, "extract_chpi_locs_kit": 345, "filter_chpi": 346, "get_active_chpi": 347, "get_chpi_info": 348, "head_pos_to_trans_rot_t": 349, "read_head_po": 350, "write_head_po": 351, "combine_evok": 352, "compute_covari": 353, "compute_proj_epoch": 354, "compute_proj_evok": 355, "compute_proj_raw": 356, "compute_rank": 357, "compute_raw_covari": 358, "compute_source_morph": 359, "concatenate_epoch": 360, "concatenate_ev": 361, "concatenate_raw": 362, "convert_forward_solut": 363, "estimate_head_mri_t": 365, "get_mni_fiduci": 366, "count_ev": 367, "cov": [368, 369, 370, 863], "compute_whiten": 368, "prepare_noise_cov": 369, "create_default_subject": 371, "create_info": 372, "cuda": [373, 374, 375, 835], "get_cuda_memori": 373, "init_cuda": 374, "set_cuda_devic": 375, "bst_auditori": 376, "data_path": [376, 377, 378, 381, 382, 389, 391, 392, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407], "bst_raw": 377, "bst_rest": 378, "load_data": [379, 393], "epilepsy_ecog": 381, "erp_cor": 382, "fetch_aparc_sub_parcel": 383, "fetch_dataset": 384, "fetch_fsaverag": 385, "fetch_hcp_mmp_parcel": 386, "fetch_infant_templ": 387, "fetch_phantom": 388, "fnirs_motor": 389, "has_dataset": 390, "hf_sef": 391, "kiloword": [392, 854], "misc": 394, "mtrf": [395, 854], "multimod": [396, 854], "phantom_4dbti": 398, "refmeg_nois": 399, "sleep_physionet": [401, 402], "ag": 401, "fetch_data": [401, 402], "temazepam": 402, "somato": 403, "spm_face": 404, "ucl_opm_auditori": 406, "visual_92_categori": 407, "decimate_surfac": 408, "generalizingestim": 412, "linearmodel": 413, "receptivefield": 415, "slidingestim": 419, "temporalfilt": 420, "timedelayingridg": 421, "timefrequ": 422, "unsupervisedspatialfilt": 423, "compute_em": 425, "cross_val_multiscor": 426, "get_coef": 427, "dig_mri_dist": 428, "get_phantom_dipol": 429, "average_mov": 430, "combine_event_id": 431, "equalize_epoch_count": 432, "define_target_ev": 435, "match_event_nam": 436, "shift_time_ev": 437, "events_from_annot": 438, "export_epoch": 439, "export_evok": 440, "export_evokeds_mff": 441, "export_raw": 442, "extract_label_time_cours": 443, "construct_iir_filt": 444, "create_filt": 445, "estimate_ringing_sampl": 446, "filter_data": 447, "notch_filt": 448, "find_ev": 450, "find_stim_step": 451, "fit_dipol": 452, "compute_depth_prior": 453, "compute_orient_prior": 454, "restrict_forward_to_label": 455, "restrict_forward_to_stc": 456, "get_config": 457, "get_config_path": 458, "get_head_surf": 459, "get_meg_helmet_surf": 460, "get_montage_volume_label": 461, "get_volume_labels_from_aseg": 462, "get_volume_labels_from_src": 463, "grade_to_tri": 464, "grade_to_vertic": 465, "grand_averag": 466, "grow_label": 467, "locate_ieeg": 469, "head_to_mni": 470, "head_to_mri": 471, "inverse_spars": [472, 473, 474, 475], "gamma_map": 472, "make_stc_from_dipol": 473, "mixed_norm": 474, "tf_mixed_norm": 475, "io": [476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509], "baseraw": 476, "rawarrai": 478, "anonymize_info": 479, "read_mrk": 480, "read_fiduci": 481, "read_info": 482, "read_raw": 483, "read_raw_artemis123": 484, "read_raw_bdf": 485, "read_raw_boxi": 486, "read_raw_brainvis": 487, "read_raw_bti": 488, "read_raw_cnt": 489, "read_raw_ctf": 490, "read_raw_curri": 491, "read_raw_edf": 492, "read_raw_eeglab": 493, "read_raw_egi": 494, "read_raw_eximia": 495, "read_raw_fieldtrip": 496, "read_raw_fif": 497, "read_raw_fil": 498, "read_raw_gdf": 499, "read_raw_hitachi": 500, "read_raw_kit": 501, "read_raw_nedf": 502, "read_raw_nicolet": 503, "read_raw_nihon": 504, "read_raw_nirx": 505, "read_raw_persyst": 506, "read_raw_snirf": 507, "write_fiduci": 509, "select_sourc": 510, "label_sign_flip": 511, "labels_to_stc": 512, "make_ad_hoc_cov": 513, "make_bem_model": 514, "make_bem_solut": 515, "make_field_map": 516, "make_fixed_length_epoch": 517, "make_fixed_length_ev": 518, "make_forward_dipol": 519, "make_forward_solut": 520, "make_sphere_model": 521, "merge_ev": 522, "minimum_norm": [523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542], "apply_invers": 524, "apply_inverse_cov": 525, "apply_inverse_epoch": 526, "apply_inverse_raw": 527, "apply_inverse_tfr_epoch": 528, "compute_rank_invers": 529, "compute_source_psd": 530, "compute_source_psd_epoch": 531, "estimate_snr": 532, "get_cross_talk": 533, "get_point_spread": 534, "make_inverse_oper": 535, "make_inverse_resolution_matrix": 536, "prepare_inverse_oper": 537, "read_inverse_oper": 538, "resolution_metr": 539, "source_band_induced_pow": 540, "source_induced_pow": 541, "write_inverse_oper": 542, "morph_label": 543, "morph_source_spac": 544, "open_doc": 545, "open_report": 546, "parse_config": 547, "pick_channel": 548, "pick_channels_cov": 549, "pick_channels_forward": 550, "pick_channels_regexp": 551, "pick_ev": 552, "pick_info": 553, "pick_typ": 554, "pick_types_forward": 555, "eogregress": 556, "annotate_amplitud": 559, "annotate_break": 560, "annotate_mov": 561, "annotate_muscle_zscor": 562, "annotate_nan": 563, "compute_average_dev_head_t": 564, "compute_bridged_electrod": 565, "compute_current_source_dens": 566, "compute_fine_calibr": 567, "compute_maxwell_basi": 568, "corrmap": 571, "cortical_signal_suppress": 572, "create_ecg_epoch": 573, "create_eog_epoch": 574, "equalize_bad": 575, "find_bad_channels_maxwel": 576, "find_ecg_ev": 577, "find_eog_ev": 578, "fix_stim_artifact": 579, "ica_find_ecg_ev": 580, "ica_find_eog_ev": 581, "ieeg": 582, "project_sensors_onto_brain": 582, "infomax": 583, "interpolate_bridged_electrod": 584, "maxwell_filt": 585, "maxwell_filter_prepare_emptyroom": 586, "beer_lambert_law": 587, "optical_dens": 588, "scalp_coupling_index": 589, "short_channel": 590, "source_detector_dist": 591, "temporal_derivative_distribution_repair": 592, "oversampled_temporal_project": 593, "peak_find": 594, "read_eog_regress": 595, "read_fine_calibr": 596, "read_ica": 597, "read_ica_eeglab": 598, "realign_raw": 599, "regress_artifact": 600, "write_fine_calibr": 601, "random_parcel": 602, "read_annot": 603, "read_bem_solut": 604, "read_bem_surfac": 605, "read_cov": 606, "read_dipol": 607, "read_epoch": 608, "read_epochs_eeglab": 609, "read_epochs_fieldtrip": 610, "read_epochs_kit": 611, "read_ev": 612, "read_evoked_besa": 613, "read_evoked_fieldtrip": 614, "read_evok": 615, "read_evokeds_mff": 616, "read_forward_solut": 617, "read_freesurfer_lut": 618, "read_label": 619, "read_labels_from_annot": 620, "read_lta": 621, "read_morph_map": 622, "read_proj": 623, "read_reject_paramet": 624, "read_source_estim": 625, "read_source_morph": 626, "read_source_spac": 627, "read_surfac": 628, "read_talxfm": 629, "read_tran": 630, "read_tri": 631, "read_vectorview_select": 632, "scale_bem": 634, "scale_label": 635, "scale_mri": 636, "scale_source_spac": 637, "sensitivity_map": 638, "set_bipolar_refer": 639, "set_cache_dir": 640, "set_config": 641, "set_eeg_refer": 642, "set_log_fil": 643, "set_log_level": 644, "setup_volume_source_spac": 646, "sourcesimul": 647, "add_chpi": 648, "add_ecg": 649, "add_eog": 650, "add_nois": 651, "cosine_scor": 652, "f1_score": 653, "peak_position_error": 654, "precision_scor": 655, "recall_scor": 656, "region_localization_error": 657, "roc_auc_scor": 658, "spatial_deviation_error": 659, "select_source_in_label": 660, "simulate_evok": 661, "simulate_raw": 662, "simulate_sparse_stc": 663, "simulate_stc": 664, "source_spac": [665, 666], "compute_distance_to_sensor": 665, "get_decimated_surfac": 666, "spatial_dist_adjac": 667, "spatial_inter_hemi_adjac": 668, "spatial_src_adjac": 669, "spatial_tris_adjac": 670, "spatio_temporal_dist_adjac": 671, "spatio_temporal_src_adjac": 672, "spatio_temporal_tris_adjac": 673, "split_label": 674, "stat": [675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691], "bonferroni_correct": 675, "bootstrap_confidence_interv": 676, "combine_adjac": 677, "f_mway_rm": 678, "f_onewai": 679, "f_threshold_mway_rm": 680, "fdr_correct": 681, "linear_regress": 682, "linear_regression_raw": 683, "permutation_cluster_1samp_test": 684, "permutation_cluster_test": 685, "permutation_t_test": 686, "spatio_temporal_cluster_1samp_test": 687, "spatio_temporal_cluster_test": 688, "summarize_clusters_stc": 689, "ttest_1samp_no_p": 690, "ttest_ind_no_p": 691, "stc_near_sensor": 692, "stc_to_label": 693, "complete_surface_info": 694, "read_curvatur": 695, "time_frequ": [697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730], "averagetfr": 697, "crossspectraldens": 698, "epochstfr": 700, "csd_array_fouri": 702, "csd_array_morlet": 703, "csd_array_multitap": 704, "csd_fourier": 705, "csd_morlet": 706, "csd_multitap": 707, "csd_tfr": 708, "dpss_window": 709, "fit_iir_model_raw": 710, "fwhm": 711, "istft": 712, "pick_channels_csd": 714, "psd_array_multitap": 715, "psd_array_welch": 716, "read_csd": 717, "read_spectrum": 718, "read_tfr": 719, "stft": 720, "stftfreq": 721, "cwt": 722, "tfr_array_morlet": 724, "tfr_array_multitap": 725, "tfr_array_stockwel": 726, "tfr_morlet": 727, "tfr_multitap": 728, "tfr_stockwel": 729, "write_tfr": 730, "transform_surface_to": 731, "apply_volume_registr": 733, "apply_volume_registration_point": 734, "compute_volume_registr": 735, "quat_to_rot": 736, "read_ras_mni_t": 737, "rot_to_quat": 738, "use_coil_def": 739, "use_log_level": 740, "util": [741, 742, 863], "deprec": [741, 837], "warn": [742, 837], "verbos": 743, "vertex_to_mni": 744, "clickableimag": 746, "figure3d": 747, "add_background_imag": 748, "centers_to_edg": 749, "circular_layout": 750, "close_3d_figur": 751, "close_all_3d_figur": 752, "create_3d_figur": 754, "get_3d_backend": 755, "get_brain_class": 756, "get_browser_backend": 757, "iter_topographi": 758, "link_brain": 759, "mne_analyze_colormap": 760, "plot_align": 761, "plot_arrowmap": 762, "plot_bem": 763, "plot_brain_colorbar": 764, "plot_bridged_electrod": 765, "plot_ch_adjac": 766, "plot_channel_labels_circl": 767, "plot_chpi_snr": 768, "plot_compare_evok": 769, "plot_cov": 770, "plot_csd": 771, "plot_dipole_amplitud": 772, "plot_dipole_loc": 773, "plot_drop_log": 774, "plot_epoch": 775, "plot_epochs_imag": 776, "plot_epochs_psd_topomap": 777, "plot_ev": 778, "plot_evok": 779, "plot_evoked_field": 780, "plot_evoked_imag": 781, "plot_evoked_joint": 782, "plot_evoked_topo": 783, "plot_evoked_topomap": 784, "plot_evoked_whit": 785, "plot_filt": 786, "plot_head_posit": 787, "plot_ica_compon": 788, "plot_ica_overlai": 789, "plot_ica_properti": 790, "plot_ica_scor": 791, "plot_ica_sourc": 792, "plot_ideal_filt": 793, "plot_layout": 794, "plot_montag": 795, "plot_projs_joint": 796, "plot_projs_topomap": 797, "plot_raw": 798, "plot_raw_psd": 799, "plot_regression_weight": 800, "plot_sensor": 801, "plot_snr_estim": 802, "plot_source_estim": 803, "plot_sparse_source_estim": 804, "plot_tfr_topomap": 805, "plot_topo_image_epoch": 806, "plot_vector_source_estim": 808, "plot_volume_source_estim": 809, "set_3d_backend": 810, "set_3d_opt": 811, "set_3d_titl": 812, "set_3d_view": 813, "set_browser_backend": 814, "snapshot_brain_montag": 815, "use_3d_backend": 816, "use_browser_backend": 817, "warp_montage_volum": 818, "write_bem_solut": 820, "write_bem_surfac": 821, "write_cov": 822, "write_ev": 823, "write_evok": 824, "write_forward_solut": 825, "write_head_bem": 826, "write_label": 827, "write_labels_to_annot": 828, "write_proj": 829, "write_source_spac": 830, "write_surfac": 831, "write_tran": 832, "glossari": 833, "homepag": 834, "jupyt": 835, "notebook": 835, "jupyterlab": 835, "fa": [835, 843], "brand": [835, 843], "window": [835, 857], "instal": [835, 836, 838, 839, 840, 841, 842, 843, 844], "headless": 835, "linux": 835, "server": 835, "develop": [835, 837, 845, 856], "version": [835, 845, 878], "gpu": 835, "acceler": 835, "screen": 835, "mesa": 835, "troubleshoot": [835, 843], "troubl": 835, "upgrad": [835, 845], "maco": [835, 843, 857], "contribut": 837, "guid": 837, "git": 837, "gnu": 837, "fork": 837, "repositori": 837, "virtual": 837, "github": 837, "ssh": 837, "convent": 837, "requir": [837, 843], "must": 837, "have": [837, 853, 857], "coverag": 837, "document": [837, 859, 861, 863, 865, 866], "avoid": 837, "api": [837, 855, 866, 868, 878], "possibl": 837, "decor": 837, "changelog": [837, 878], "contributor": 837, "recur": 837, "pull": 837, "request": 837, "pr": 837, "fast": 837, "thorough": 837, "style": 837, "adher": 837, "guidelin": [837, 865], "we": 837, "mostli": [837, 855], "follow": 837, "numpi": [837, 860], "docstr": 837, "everywher": 837, "guidanc": 837, "organ": [837, 855, 860], "return": 837, "run": [837, 857], "suit": [837, 844], "build": 837, "pip": 841, "conda": 841, "depend": [841, 878], "minim": 841, "scenario": 841, "appl": 843, "download": [843, 857], "help": [844, 857, 858], "updat": [845, 866], "martino": 848, "cpp": 849, "most": 850, "typic": 853, "m": [853, 857], "recommend": 853, "subdivis": 853, "icosahedron": 853, "octahedron": 853, "creation": 853, "approxim": 853, "area": 853, "been": 853, "assum": 853, "1000": 853, "cm2": 853, "mesh": [853, 857, 860], "triangul": 853, "boundari": [853, 860], "element": [853, 860], "trigger": 854, "ucl": 854, "state": 854, "somatosensori": 854, "92": 854, "categori": 854, "polysomnograph": 854, "databas": [854, 866], "miscellan": 854, "integr": [855, 866], "scientif": 855, "stack": 855, "submodul": 855, "unifi": 855, "In": [855, 866], "frequent": 857, "ask": 857, "question": 857, "faq": 857, "issu": 857, "can": 857, "pyvista": 857, "extrem": 857, "even": 857, "sure": 857, "x": 857, "my": 857, "y": 857, "think": 857, "bug": [857, 878], "danger": 857, "pickl": 857, "later": 857, "onc": 857, "again": 857, "cpu": 857, "though": 857, "didn": 857, "tell": 857, "mysteri": 857, "take": 857, "forev": 857, "incorrect": 857, "govern": 859, "bdfl": 859, "steer": [859, 865], "council": [859, 865], "membership": 859, "conflict": 859, "privat": 859, "commun": [859, 865], "decis": 859, "histori": [859, 865], "acknowledg": 859, "licens": 859, "implement": 860, "detail": [860, 863], "intern": 860, "float": 860, "precis": 860, "effici": [860, 866], "preload": 860, "explicitli": 860, "access": [860, 866], "concept": 860, "subspac": 860, "tessel": 860, "discret": 860, "geometri": [860, 863], "coil": [860, 863], "magnet": 860, "normal": 860, "accur": 860, "accuraci": 860, "purpos": 860, "patch": 860, "constraint": 860, "weight": 860, "matlab": 863, "routin": 863, "w": 863, "demonstr": 863, "toolbox": 863, "constant": 863, "taginfo": 863, "dig": 863, "coildef": 863, "see": 863, "ch": 863, "proj": 863, "comp": 863, "mea": 863, "surf": 863, "inv": 863, "reginv": 863, "noisenorm": 863, "fill": 863, "mne_prepare_inverse_oper": 863, "benevol": 865, "dictat": 865, "life": 865, "particip": 865, "lead": 865, "roadmap": 866, "page": 866, "openmeeg": 866, "improv": 866, "bind": 866, "progress": 866, "divers": 866, "equiti": 866, "inclus": 866, "dei": 866, "deep": 866, "better": 866, "db": 866, "pediatr": 866, "complet": 866, "overhaul": 866, "realtim": 870, "dev0": 878, "2023": 878, "02": 878, "23": 878, "0": 878, "2022": 878, "21": 878, "author": 878, "10": 878, "11": 878, "08": 878, "03": 878, "behavior": 878, "24": 878, "2021": 878, "04": 878, "27": 878, "22": 878, "2020": 878, "17": 878, "09": 878, "20": 878, "19": 878, "2019": 878, "18": 878, "05": 878, "2018": 878, "16": 878, "01": 878, "2017": 878, "14": 878, "13": 878, "2016": 878, "2015": 878, "26": 878, "9": 878, "8": 878, "2014": 878, "06": 878, "25": 878, "7": 878, "2013": 878, "6": 878, "5": 878, "2012": 878, "2011": 878}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinxcontrib.bibtex": 9, "sphinx": 57}, "alltitles": {"Connectivity Analysis Examples": [[0, "connectivity-analysis-examples"], [27, "connectivity-analysis-examples"]], "Brainstorm raw (median nerve) dataset": [[1, "brainstorm-raw-median-nerve-dataset"]], "References": [[1, "references"], [4, "references"], [8, "references"], [10, "references"], [12, "references"], [13, "references"], [15, "references"], [16, "references"], [18, "references"], [19, "references"], [21, "references"], [33, "references"], [35, "references"], [40, "references"], [42, "references"], [43, "references"], [44, "references"], [46, "references"], [51, "references"], [54, "references"], [55, "references"], [58, "references"], [59, "references"], [65, "references"], [69, "references"], [70, "references"], [73, "references"], [74, "references"], [77, "references"], [82, "references"], [83, "references"], [87, "references"], [93, "references"], [100, "references"], [108, "references"], [111, "references"], [112, "references"], [116, "references"], [118, "references"], [120, "references"], [125, "references"], [128, "references"], [134, "references"], [137, "references"], [141, "references"], [144, "references"], [151, "references"], [155, "references"], [157, "references"], [162, "references"], [176, "references"], [178, "references"], [180, "references"], [183, "references"], [184, "references"], [191, "references"], [194, "references"], [195, "references"], [199, "references"], [201, "references"], [203, "references"], [204, "references"], [205, "references"], [206, "references"], [207, "references"], [209, "references"], [211, "references"], [222, "references"], [225, "references"], [226, "references"], [230, "references"], [238, "references"], [853, "references"], [854, "references"], [857, "references"], [860, "references"]], "HF-SEF dataset": [[2, "hf-sef-dataset"]], "Examples on open datasets": [[3, "examples-on-open-datasets"], [27, "examples-on-open-datasets"]], "Single trial linear regression analysis with the LIMO dataset": [[4, "single-trial-linear-regression-analysis-with-the-limo-dataset"]], "About the data": [[4, "about-the-data"]], "Load the data": [[4, "load-the-data"], [137, "load-the-data"], [141, "load-the-data"], [159, "load-the-data"]], "Visualize events": [[4, "visualize-events"]], "Visualize condition ERPs": [[4, "visualize-condition-erps"]], "Visualize effect of stimulus phase-coherence": [[4, "visualize-effect-of-stimulus-phase-coherence"]], "Prepare data for linear regression analysis": [[4, "prepare-data-for-linear-regression-analysis"]], "Define predictor variables and design matrix": [[4, "define-predictor-variables-and-design-matrix"]], "Extract regression coefficients": [[4, "extract-regression-coefficients"]], "Plot model results": [[4, "plot-model-results"]], "Optically pumped magnetometer (OPM) data": [[5, "optically-pumped-magnetometer-opm-data"]], "Prepare data for localization": [[5, "prepare-data-for-localization"]], "Perform dipole fitting": [[5, "perform-dipole-fitting"]], "Perform minimum-norm localization": [[5, "perform-minimum-norm-localization"]], "Computation times": [[6, "computation-times"], [20, "computation-times"], [25, "computation-times"], [56, "computation-times"], [66, "computation-times"], [84, "computation-times"], [90, "computation-times"], [101, "computation-times"], [105, "computation-times"], [129, "computation-times"], [139, "computation-times"], [148, "computation-times"], [154, "computation-times"], [164, "computation-times"], [174, "computation-times"], [187, "computation-times"], [193, "computation-times"], [197, "computation-times"], [213, "computation-times"], [219, "computation-times"], [224, "computation-times"], [232, "computation-times"], [237, "computation-times"], [242, "computation-times"]], "From raw data to dSPM on SPM Faces dataset": [[7, "from-raw-data-to-dspm-on-spm-faces-dataset"]], "Motor imagery decoding from EEG data using the Common Spatial Pattern (CSP)": [[8, "motor-imagery-decoding-from-eeg-data-using-the-common-spatial-pattern-csp"]], "Decoding in time-frequency space using Common Spatial Patterns (CSP)": [[9, "decoding-in-time-frequency-space-using-common-spatial-patterns-csp"]], "Representational Similarity Analysis": [[10, "representational-similarity-analysis"]], "Decoding source space data": [[11, "decoding-source-space-data"]], "Continuous Target Decoding with SPoC": [[12, "continuous-target-decoding-with-spoc"]], "Decoding sensor space data with generalization across time and conditions": [[13, "decoding-sensor-space-data-with-generalization-across-time-and-conditions"]], "Analysis of evoked response using ICA and PCA reduction techniques": [[14, "analysis-of-evoked-response-using-ica-and-pca-reduction-techniques"]], "XDAWN Decoding From EEG data": [[15, "xdawn-decoding-from-eeg-data"]], "Compute effect-matched-spatial filtering (EMS)": [[16, "compute-effect-matched-spatial-filtering-ems"]], "Machine Learning (Decoding, Encoding, and MVPA)": [[17, "machine-learning-decoding-encoding-and-mvpa"], [27, "machine-learning-decoding-encoding-and-mvpa"]], "Linear classifier on sensor data with plot patterns and filters": [[18, "linear-classifier-on-sensor-data-with-plot-patterns-and-filters"]], "Decoding in sensor space using a LogisticRegression classifier": [[18, "decoding-in-sensor-space-using-a-logisticregression-classifier"]], "Receptive Field Estimation and Prediction": [[19, "receptive-field-estimation-and-prediction"]], "Load the data from the publication": [[19, "load-the-data-from-the-publication"]], "Create and fit a receptive field model": [[19, "create-and-fit-a-receptive-field-model"]], "Investigate model coefficients": [[19, "investigate-model-coefficients"], [19, "id5"]], "Create and fit a stimulus reconstruction model": [[19, "create-and-fit-a-stimulus-reconstruction-model"]], "Visualize stimulus reconstruction": [[19, "visualize-stimulus-reconstruction"]], "Compute Spectro-Spatial Decomposition (SSD) spatial filters": [[21, "compute-spectro-spatial-decomposition-ssd-spatial-filters"]], "Epoched data": [[21, "epoched-data"]], "Display sensitivity maps for EEG and MEG sensors": [[22, "display-sensitivity-maps-for-eeg-and-meg-sensors"]], "Forward modeling": [[23, "forward-modeling"], [27, "forward-modeling"]], "Generate a left cerebellum volume source space": [[24, "generate-a-left-cerebellum-volume-source-space"]], "Use source space morphing": [[26, "use-source-space-morphing"]], "Examples Gallery": [[27, "examples-gallery"]], "Input/Output": [[27, "input-output"], [62, "input-output"]], "Data Simulation": [[27, "data-simulation"], [88, "data-simulation"]], "Preprocessing": [[27, "preprocessing"], [76, "preprocessing"], [108, "preprocessing"], [141, "preprocessing"], [165, "preprocessing"], [166, "preprocessing"], [212, "preprocessing"], [853, "preprocessing"], [867, "preprocessing"]], "Visualization": [[27, "visualization"], [55, "visualization"], [121, "visualization"], [177, "visualization"], [837, "visualization"], [877, "visualization"]], "Time-Frequency Examples": [[27, "time-frequency-examples"], [104, "time-frequency-examples"]], "Statistics Examples": [[27, "statistics-examples"], [97, "statistics-examples"]], "Inverse problem and source analysis": [[27, "inverse-problem-and-source-analysis"], [36, "inverse-problem-and-source-analysis"]], "Compute MNE-dSPM inverse solution on single epochs": [[28, "compute-mne-dspm-inverse-solution-on-single-epochs"]], "Compute sLORETA inverse solution on raw data": [[29, "compute-sloreta-inverse-solution-on-raw-data"]], "Compute MNE-dSPM inverse solution on evoked data in volume source space": [[30, "compute-mne-dspm-inverse-solution-on-evoked-data-in-volume-source-space"]], "Source localization with a custom inverse solver": [[31, "source-localization-with-a-custom-inverse-solver"]], "Compute source level time-frequency timecourses using a DICS beamformer": [[32, "compute-source-level-time-frequency-timecourses-using-a-dics-beamformer"]], "Compute source power using DICS beamformer": [[33, "compute-source-power-using-dics-beamformer"]], "Compute evoked ERS source power using DICS, LCMV beamformer, and dSPM": [[34, "compute-evoked-ers-source-power-using-dics-lcmv-beamformer-and-dspm"]], "Compute covariances": [[34, "compute-covariances"]], "Compute some source estimates": [[34, "compute-some-source-estimates"]], "Plot source estimates": [[34, "plot-source-estimates"]], "Compute a sparse inverse solution using the Gamma-MAP empirical Bayesian method": [[35, "compute-a-sparse-inverse-solution-using-the-gamma-map-empirical-bayesian-method"]], "Extracting time course from source_estimate object": [[37, "extracting-time-course-from-source-estimate-object"]], "Generate a functional label from source estimates": [[38, "generate-a-functional-label-from-source-estimates"]], "Extracting the time series of activations in a label": [[39, "extracting-the-time-series-of-activations-in-a-label"]], "Compute inverse solution": [[39, "compute-inverse-solution"], [41, "compute-inverse-solution"], [177, "compute-inverse-solution"]], "View source activations": [[39, "view-source-activations"]], "Using vector solutions": [[39, "using-vector-solutions"]], "Compute sparse inverse solution with mixed norm: MxNE and irMxNE": [[40, "compute-sparse-inverse-solution-with-mixed-norm-mxne-and-irmxne"]], "Compute MNE inverse solution on evoked data with a mixed source space": [[41, "compute-mne-inverse-solution-on-evoked-data-with-a-mixed-source-space"]], "Set up our source space": [[41, "set-up-our-source-space"]], "View the source space": [[41, "view-the-source-space"]], "Compute the fwd matrix": [[41, "compute-the-fwd-matrix"]], "Plot the mixed source estimate": [[41, "plot-the-mixed-source-estimate"]], "Plot the surface": [[41, "plot-the-surface"]], "Plot the volume": [[41, "plot-the-volume"]], "Process labels": [[41, "process-labels"]], "Compute source power estimate by projecting the covariance with MNE": [[42, "compute-source-power-estimate-by-projecting-the-covariance-with-mne"]], "Compute empty-room covariance": [[42, "compute-empty-room-covariance"]], "Epoch the data": [[42, "epoch-the-data"]], "Compute and plot covariances": [[42, "compute-and-plot-covariances"]], "Apply inverse operator to covariance": [[42, "apply-inverse-operator-to-covariance"]], "Morph surface source estimate": [[43, "morph-surface-source-estimate"]], "Setting up SourceMorph for SourceEstimate": [[43, "setting-up-sourcemorph-for-sourceestimate"]], "Apply morph to (Vector) SourceEstimate": [[43, "apply-morph-to-vector-sourceestimate"]], "Plot results": [[43, "plot-results"], [44, "plot-results"]], "Reading and writing SourceMorph from and to disk": [[43, "reading-and-writing-sourcemorph-from-and-to-disk"], [44, "reading-and-writing-sourcemorph-from-and-to-disk"]], "Morph volumetric source estimate": [[44, "morph-volumetric-source-estimate"]], "Get a SourceMorph object for VolSourceEstimate": [[44, "get-a-sourcemorph-object-for-volsourceestimate"]], "Apply morph to VolSourceEstimate": [[44, "apply-morph-to-volsourceestimate"]], "Convert morphed VolSourceEstimate into NIfTI": [[44, "convert-morphed-volsourceestimate-into-nifti"]], "Computing source timecourses with an XFit-like multi-dipole model": [[45, "computing-source-timecourses-with-an-xfit-like-multi-dipole-model"]], "Compute iterative reweighted TF-MxNE with multiscale time-frequency dictionary": [[46, "compute-iterative-reweighted-tf-mxne-with-multiscale-time-frequency-dictionary"]], "Visualize source leakage among labels using a circular graph": [[47, "visualize-source-leakage-among-labels-using-a-circular-graph"]], "Load forward solution and inverse operator": [[47, "load-forward-solution-and-inverse-operator"]], "Read and organise labels for cortical parcellation": [[47, "read-and-organise-labels-for-cortical-parcellation"]], "Compute point-spread function summaries (PCA) for all labels": [[47, "compute-point-spread-function-summaries-pca-for-all-labels"]], "Evaluate leakage based on label-to-label PSF correlations": [[47, "evaluate-leakage-based-on-label-to-label-psf-correlations"]], "Save the figure (optional)": [[47, "save-the-figure-optional"]], "Plot PSFs for individual labels": [[47, "plot-psfs-for-individual-labels"]], "Plot point-spread functions (PSFs) and cross-talk functions (CTFs)": [[48, "plot-point-spread-functions-psfs-and-cross-talk-functions-ctfs"]], "Visualize": [[48, "visualize"], [49, "visualize"], [50, "visualize"]], "Compute cross-talk functions for LCMV beamformers": [[49, "compute-cross-talk-functions-for-lcmv-beamformers"]], "Compute LCMV filters with different data covariance matrices": [[49, "compute-lcmv-filters-with-different-data-covariance-matrices"]], "Compute resolution matrices for the two LCMV beamformers": [[49, "compute-resolution-matrices-for-the-two-lcmv-beamformers"]], "Plot point-spread functions (PSFs) for a volume": [[50, "plot-point-spread-functions-psfs-for-a-volume"]], "Compute Rap-Music on evoked data": [[51, "compute-rap-music-on-evoked-data"]], "Reading an inverse operator": [[52, "reading-an-inverse-operator"]], "Reading an STC file": [[53, "reading-an-stc-file"]], "Compute spatial resolution metrics in source space": [[54, "compute-spatial-resolution-metrics-in-source-space"]], "MNE": [[54, "mne"]], "dSPM": [[54, "dspm"], [860, "dspm"]], "Visualize results": [[54, "visualize-results"]], "Compute spatial resolution metrics to compare MEG with EEG+MEG": [[55, "compute-spatial-resolution-metrics-to-compare-meg-with-eeg-meg"]], "EEGMEG": [[55, "eegmeg"]], "MEG": [[55, "meg"]], "Estimate data SNR using an inverse": [[57, "estimate-data-snr-using-an-inverse"]], "Computing source space SNR": [[58, "computing-source-space-snr"]], "EEG": [[58, "eeg"]], "Compute MxNE with time-frequency sparse prior": [[59, "compute-mxne-with-time-frequency-sparse-prior"]], "Plotting the full vector-valued MNE solution": [[60, "plotting-the-full-vector-valued-mne-solution"]], "Getting averaging info from .fif files": [[61, "getting-averaging-info-from-fif-files"]], "How to use data in neural ensemble (NEO) format": [[63, "how-to-use-data-in-neural-ensemble-neo-format"]], "Reading/Writing a noise covariance matrix": [[64, "reading-writing-a-noise-covariance-matrix"]], "Reading XDF EEG data": [[65, "reading-xdf-eeg-data"]], "Cortical Signal Suppression (CSS) for removal of cortical signals": [[67, "cortical-signal-suppression-css-for-removal-of-cortical-signals"]], "Define target events based on time lag, plot evoked response": [[68, "define-target-events-based-on-time-lag-plot-evoked-response"]], "Identify EEG Electrodes Bridged by too much Gel": [[69, "ex-eeg-bridging"]], "Compute Electrical Distance Metric": [[69, "compute-electrical-distance-metric"]], "Examine an Electrical Distance Matrix": [[69, "examine-an-electrical-distance-matrix"]], "Examine the Distribution of Electrical Distances": [[69, "examine-the-distribution-of-electrical-distances"]], "Plot Electrical Distances on a Topomap": [[69, "plot-electrical-distances-on-a-topomap"]], "Plot the Raw Voltage Time Series for Bridged Electrodes": [[69, "plot-the-raw-voltage-time-series-for-bridged-electrodes"]], "Compare Bridging Across Subjects in the EEGBCI Dataset": [[69, "compare-bridging-across-subjects-in-the-eegbci-dataset"]], "The Relationship Between Bridging and Impedances": [[69, "the-relationship-between-bridging-and-impedances"]], "Summary": [[69, "summary"], [167, "summary"], [175, "summary"], [198, "summary"], [199, "summary"], [201, "summary"]], "Transform EEG data using current source density (CSD)": [[70, "transform-eeg-data-using-current-source-density-csd"]], "Show EOG artifact timing": [[71, "show-eog-artifact-timing"]], "Reduce EOG artifacts through regression": [[72, "reduce-eog-artifacts-through-regression"]], "Import packages and load data": [[72, "import-packages-and-load-data"]], "Perform regression and remove EOG": [[72, "perform-regression-and-remove-eog"]], "Before/after comparison": [[72, "before-after-comparison"]], "Find MEG reference channel artifacts": [[73, "find-meg-reference-channel-artifacts"]], "Visualise NIRS artifact correction methods": [[74, "visualise-nirs-artifact-correction-methods"]], "Import data": [[74, "import-data"]], "Add artificial artifacts to data": [[74, "add-artificial-artifacts-to-data"]], "Apply temporal derivative distribution repair": [[74, "apply-temporal-derivative-distribution-repair"]], "Compare the different ICA algorithms in MNE": [[75, "compare-the-different-ica-algorithms-in-mne"]], "Interpolate bad channels for MEG/EEG channels": [[77, "interpolate-bad-channels-for-meg-eeg-channels"]], "Locating micro-scale intracranial electrode contacts": [[78, "locating-micro-scale-intracranial-electrode-contacts"]], "Maxwell filter data with movement compensation": [[79, "maxwell-filter-data-with-movement-compensation"]], "Annotate movement artifacts and reestimate dev_head_t": [[80, "annotate-movement-artifacts-and-reestimate-dev-head-t"]], "Plot continuous head position with respect to the mean recording position": [[80, "plot-continuous-head-position-with-respect-to-the-mean-recording-position"]], "Plot raw data with annotated movement": [[80, "plot-raw-data-with-annotated-movement"]], "Annotate muscle artifacts": [[81, "annotate-muscle-artifacts"]], "Plot muscle z-scores across recording": [[81, "plot-muscle-z-scores-across-recording"]], "View the annotations": [[81, "view-the-annotations"]], "Removing muscle ICA components": [[82, "removing-muscle-ica-components"]], "Let\u2019s now replicate this on the EEGBCI dataset": [[82, "let-s-now-replicate-this-on-the-eegbci-dataset"]], "Plot sensor denoising using oversampled temporal projection": [[83, "plot-sensor-denoising-using-oversampled-temporal-projection"]], "Shifting time-scale in evoked data": [[85, "shifting-time-scale-in-evoked-data"]], "Remap MEG channel types": [[86, "remap-meg-channel-types"]], "XDAWN Denoising": [[87, "xdawn-denoising"]], "Compare simulated and estimated source activity": [[89, "compare-simulated-and-estimated-source-activity"]], "Define main parameters of sources": [[89, "define-main-parameters-of-sources"]], "Create simulated source activity": [[89, "create-simulated-source-activity"], [93, "create-simulated-source-activity"]], "Simulate raw data": [[89, "simulate-raw-data"], [93, "simulate-raw-data"]], "Compute evoked from raw data": [[89, "compute-evoked-from-raw-data"]], "Create true stcs corresponding to evoked": [[89, "create-true-stcs-corresponding-to-evoked"]], "Reconstruct simulated sources": [[89, "reconstruct-simulated-sources"]], "Compute performance scores for different source amplitude thresholds": [[89, "compute-performance-scores-for-different-source-amplitude-thresholds"]], "For region": [[89, "for-region"]], "For Dipoles": [[89, "for-dipoles"]], "Generate simulated evoked data": [[91, "generate-simulated-evoked-data"]], "Generate simulated raw data": [[92, "generate-simulated-raw-data"]], "Simulate raw data using subject anatomy": [[93, "simulate-raw-data-using-subject-anatomy"]], "Extract epochs and compute evoked responsses": [[93, "extract-epochs-and-compute-evoked-responsses"]], "Reconstruct simulated source time courses using dSPM inverse operator": [[93, "reconstruct-simulated-source-time-courses-using-dspm-inverse-operator"]], "Generate simulated source data": [[94, "generate-simulated-source-data"]], "Permutation F-test on sensor data with 1D cluster level": [[95, "permutation-f-test-on-sensor-data-with-1d-cluster-level"]], "FDR correction on T-test on sensor data": [[96, "fdr-correction-on-t-test-on-sensor-data"]], "Regression on continuous data (rER[P/F])": [[98, "regression-on-continuous-data-rer-p-f"]], "Permutation T-test on sensor data": [[99, "permutation-t-test-on-sensor-data"]], "Analysing continuous features with binning and regression in sensor space": [[100, "analysing-continuous-features-with-binning-and-regression-in-sensor-space"]], "Compute a cross-spectral density (CSD) matrix": [[102, "compute-a-cross-spectral-density-csd-matrix"]], "Compute Power Spectral Density of inverse solution from single epochs": [[103, "compute-power-spectral-density-of-inverse-solution-from-single-epochs"]], "Compute source space PSD in label": [[103, "compute-source-space-psd-in-label"]], "Compute power and phase lock in label of the source space": [[106, "compute-power-and-phase-lock-in-label-of-the-source-space"]], "Compute source power spectral density (PSD) in a label": [[107, "compute-source-power-spectral-density-psd-in-a-label"]], "Compute source power spectral density (PSD) of VectorView and OPM data": [[108, "compute-source-power-spectral-density-psd-of-vectorview-and-opm-data"]], "Alignment and forward": [[108, "alignment-and-forward"]], "Alpha": [[108, "alpha"]], "Beta": [[108, "beta"]], "Compute induced power in the source space with dSPM": [[109, "compute-induced-power-in-the-source-space-with-dspm"]], "Temporal whitening with AR model": [[110, "temporal-whitening-with-ar-model"]], "Compute and visualize ERDS maps": [[111, "compute-and-visualize-erds-maps"]], "Explore event-related dynamics for specific frequency bands": [[112, "explore-event-related-dynamics-for-specific-frequency-bands"]], "Time-frequency on simulated data (Multitaper vs. Morlet vs. Stockwell vs. Hilbert)": [[113, "time-frequency-on-simulated-data-multitaper-vs-morlet-vs-stockwell-vs-hilbert"]], "Simulate data": [[113, "simulate-data"]], "Calculate a time-frequency representation (TFR)": [[113, "calculate-a-time-frequency-representation-tfr"]], "Multitaper transform": [[113, "multitaper-transform"]], "Stockwell (S) transform": [[113, "stockwell-s-transform"]], "Morlet Wavelets": [[113, "morlet-wavelets"]], "Narrow-bandpass Filter and Hilbert Transform": [[113, "narrow-bandpass-filter-and-hilbert-transform"]], "Calculating a TFR without averaging over epochs": [[113, "calculating-a-tfr-without-averaging-over-epochs"]], "Operating on arrays": [[113, "operating-on-arrays"]], "How to convert 3D electrode positions to a 2D image": [[114, "how-to-convert-3d-electrode-positions-to-a-2d-image"]], "Load data": [[114, "load-data"], [115, "load-data"], [178, "load-data"]], "Project 3D electrodes to a 2D snapshot": [[114, "project-3d-electrodes-to-a-2d-snapshot"]], "Manually creating 2D electrode positions": [[114, "manually-creating-2d-electrode-positions"]], "Plotting with mne.viz.Brain": [[115, "plotting-with-mne-viz-brain"]], "Add source information": [[115, "add-source-information"]], "Modify the view of the brain": [[115, "modify-the-view-of-the-brain"]], "Highlight a region on the brain": [[115, "highlight-a-region-on-the-brain"]], "Include the head in the image": [[115, "include-the-head-in-the-image"]], "Add sensors positions": [[115, "add-sensors-positions"]], "Add current dipoles": [[115, "add-current-dipoles"]], "Create a screenshot for exporting the brain image": [[115, "create-a-screenshot-for-exporting-the-brain-image"]], "Visualize channel over epochs as an image": [[116, "visualize-channel-over-epochs-as-an-image"]], "Plotting EEG sensors on the scalp": [[117, "plotting-eeg-sensors-on-the-scalp"]], "Plotting topographic arrowmaps of evoked data": [[118, "plotting-topographic-arrowmaps-of-evoked-data"]], "Plotting topographic maps of evoked data": [[119, "plotting-topographic-maps-of-evoked-data"]], "Basic plot_topomap() options": [[119, "basic-plot-topomap-options"]], "Additional plot_topomap() options": [[119, "additional-plot-topomap-options"]], "More advanced usage": [[119, "more-advanced-usage"]], "Interpolating topomaps": [[119, "interpolating-topomaps"]], "Animating the topomap": [[119, "animating-the-topomap"]], "Whitening evoked data with a noise covariance": [[120, "whitening-evoked-data-with-a-noise-covariance"]], "Plotting sensor layouts of MEG systems": [[122, "plotting-sensor-layouts-of-meg-systems"]], "Neuromag": [[122, "neuromag"]], "CTF": [[122, "ctf"]], "BTi": [[122, "bti"]], "KIT": [[122, "kit"]], "Artemis123": [[122, "artemis123"]], "Plot the MNE brain and helmet": [[123, "plot-the-mne-brain-and-helmet"]], "Plotting sensor layouts of EEG systems": [[124, "plotting-sensor-layouts-of-eeg-systems"]], "Plot a cortical parcellation": [[125, "plot-a-cortical-parcellation"]], "Make figures more publication ready": [[126, "make-figures-more-publication-ready"]], "Imports": [[126, "imports"]], "Evoked plot with brain activation": [[126, "evoked-plot-with-brain-activation"]], "Custom timecourse with montage inset": [[126, "custom-timecourse-with-montage-inset"]], "Plot single trial activity, grouped by ROI and sorted by RT": [[127, "plot-single-trial-activity-grouped-by-roi-and-sorted-by-rt"]], "Show noise levels from empty room data": [[128, "show-noise-levels-from-empty-room-data"]], "Sensitivity map of SSP projections": [[130, "sensitivity-map-of-ssp-projections"]], "Compare evoked responses for different conditions": [[131, "compare-evoked-responses-for-different-conditions"]], "Plot custom topographies for MEG sensors": [[132, "plot-custom-topographies-for-meg-sensors"]], "Cross-hemisphere comparison": [[133, "cross-hemisphere-comparison"]], "Locating intracranial electrode contacts": [[134, "locating-intracranial-electrode-contacts"]], "Aligning the T1 to ACPC": [[134, "aligning-the-t1-to-acpc"]], "Freesurfer recon-all": [[134, "freesurfer-recon-all"]], "Aligning the CT to the MR": [[134, "aligning-the-ct-to-the-mr"]], "Marking the Location of Each Electrode Contact": [[134, "marking-the-location-of-each-electrode-contact"]], "Warping to a Common Atlas": [[134, "warping-to-a-common-atlas"]], "Working with sEEG data": [[135, "working-with-seeg-data"]], "Working with ECoG data": [[136, "working-with-ecog-data"]], "Load in data and perform basic preprocessing": [[136, "load-in-data-and-perform-basic-preprocessing"]], "Explore the electrodes on a template brain": [[136, "explore-the-electrodes-on-a-template-brain"]], "Compute frequency features of the data": [[136, "compute-frequency-features-of-the-data"]], "Plot Gamma Power on cortical sensors": [[136, "plot-gamma-power-on-cortical-sensors"]], "Visualize the time-evolution of the gamma power on the brain": [[136, "visualize-the-time-evolution-of-the-gamma-power-on-the-brain"]], "Sleep stage classification from polysomnography (PSG) data": [[137, "sleep-stage-classification-from-polysomnography-psg-data"]], "Read the PSG data and Hypnograms to create a raw object": [[137, "read-the-psg-data-and-hypnograms-to-create-a-raw-object"]], "Extract 30s events from annotations": [[137, "extract-30s-events-from-annotations"]], "Create Epochs from the data based on the events found in the annotations": [[137, "create-epochs-from-the-data-based-on-the-events-found-in-the-annotations"]], "Applying the same steps to the test data from Bob": [[137, "applying-the-same-steps-to-the-test-data-from-bob"]], "Feature Engineering": [[137, "feature-engineering"]], "Design a scikit-learn transformer from a Python function": [[137, "design-a-scikit-learn-transformer-from-a-python-function"]], "Multiclass classification workflow using scikit-learn": [[137, "multiclass-classification-workflow-using-scikit-learn"]], "Further analysis of the data": [[137, "further-analysis-of-the-data"]], "Exercise": [[137, "exercise"], [158, "exercise"], [195, "exercise"], [239, "exercise"]], "Clinical applications": [[138, "clinical-applications"], [165, "clinical-applications"]], "The Epochs data structure: discontinuous data": [[140, "the-epochs-data-structure-discontinuous-data"]], "Creating Epoched data from a Raw object": [[140, "creating-epoched-data-from-a-raw-object"]], "Basic visualization of Epochs objects": [[140, "basic-visualization-of-epochs-objects"]], "Subselecting epochs": [[140, "subselecting-epochs"]], "Selecting epochs by index": [[140, "selecting-epochs-by-index"]], "Selecting, dropping, and reordering channels": [[140, "selecting-dropping-and-reordering-channels"], [149, "selecting-dropping-and-reordering-channels"], [214, "selecting-dropping-and-reordering-channels"]], "Changing channel name and type": [[140, "changing-channel-name-and-type"], [214, "changing-channel-name-and-type"]], "Selection in the time domain": [[140, "selection-in-the-time-domain"], [214, "selection-in-the-time-domain"]], "Extracting data in other forms": [[140, "extracting-data-in-other-forms"]], "Loading and saving Epochs objects to disk": [[140, "loading-and-saving-epochs-objects-to-disk"]], "Iterating over Epochs": [[140, "iterating-over-epochs"]], "Regression-based baseline correction": [[141, "regression-based-baseline-correction"]], "Traditional baselining": [[141, "traditional-baselining"]], "Regression-based baselining": [[141, "regression-based-baselining"]], "Plot the baseline regressor": [[141, "plot-the-baseline-regressor"]], "Plot the ERPs": [[141, "plot-the-erps"]], "Plot the scalp topographies and difference waves": [[141, "plot-the-scalp-topographies-and-difference-waves"]], "Examine the interaction term": [[141, "examine-the-interaction-term"]], "Visualizing epoched data": [[142, "visualizing-epoched-data"]], "Plotting Epochs as time series": [[142, "plotting-epochs-as-time-series"]], "Interactivity in pipelines and scripts": [[142, null]], "Plotting projectors from an Epochs object": [[142, "plotting-projectors-from-an-epochs-object"]], "Plotting sensor locations": [[142, "plotting-sensor-locations"]], "Plotting the power spectrum of Epochs": [[142, "plotting-the-power-spectrum-of-epochs"]], "Plotting Epochs as an image map": [[142, "plotting-epochs-as-an-image-map"]], "Working with Epoch metadata": [[143, "working-with-epoch-metadata"]], "Viewing Epochs metadata": [[143, "viewing-epochs-metadata"]], "Restrictions on metadata DataFrames": [[143, null]], "Modifying the metadata": [[143, "modifying-the-metadata"]], "Selecting epochs using metadata queries": [[143, "selecting-epochs-using-metadata-queries"]], "Adding metadata to an Epochs object": [[143, "adding-metadata-to-an-epochs-object"]], "Auto-generating Epochs metadata": [[144, "auto-generating-epochs-metadata"]], "Preparation": [[144, "preparation"]], "Creating metadata from events": [[144, "creating-metadata-from-events"]], "The basics of make_metadata": [[144, "the-basics-of-make-metadata"]], "Specifying time-locked events": [[144, "specifying-time-locked-events"]], "Keeping only the first events of a group": [[144, "keeping-only-the-first-events-of-a-group"]], "Adding new columns to describe stimulation side and response correctness": [[144, "adding-new-columns-to-describe-stimulation-side-and-response-correctness"]], "Creating Epochs with metadata, and visualizing ERPs": [[144, "creating-epochs-with-metadata-and-visualizing-erps"]], "Applying the knowledge: visualizing the ERN component": [[144, "applying-the-knowledge-visualizing-the-ern-component"]], "Exporting Epochs to Pandas DataFrames": [[145, "exporting-epochs-to-pandas-dataframes"]], "Converting an Epochs object to a DataFrame": [[145, "converting-an-epochs-object-to-a-dataframe"]], "Scaling time and channel values": [[145, "scaling-time-and-channel-values"]], "Setting the index": [[145, "setting-the-index"]], "Wide- versus long-format DataFrames": [[145, "wide-versus-long-format-dataframes"]], "Divide continuous data into equally-spaced epochs": [[146, "divide-continuous-data-into-equally-spaced-epochs"]], "Characteristics of Fixed Length Epochs": [[146, "characteristics-of-fixed-length-epochs"]], "Example Use Case for Fixed Length Epochs: Connectivity Analysis": [[146, "example-use-case-for-fixed-length-epochs-connectivity-analysis"]], "Segmenting continuous data into epochs": [[147, "segmenting-continuous-data-into-epochs"], [165, "segmenting-continuous-data-into-epochs"]], "The Evoked data structure: evoked/averaged data": [[149, "the-evoked-data-structure-evoked-averaged-data"]], "Creating Evoked objects from Epochs": [[149, "creating-evoked-objects-from-epochs"]], "Basic visualization of Evoked objects": [[149, "basic-visualization-of-evoked-objects"]], "Subsetting Evoked data": [[149, "subsetting-evoked-data"]], "Evokeds are not memory-mapped": [[149, null]], "Similarities among the core data structures": [[149, "similarities-among-the-core-data-structures"]], "Loading and saving Evoked data": [[149, "loading-and-saving-evoked-data"]], "Combining Evoked objects": [[149, "combining-evoked-objects"]], "Other uses of Evoked objects": [[149, "other-uses-of-evoked-objects"]], "Visualizing Evoked data": [[150, "visualizing-evoked-data"]], "Plotting signal traces": [[150, "plotting-signal-traces"]], "Butterfly plots": [[150, null]], "Plotting scalp topographies": [[150, "plotting-scalp-topographies"]], "Arrow maps": [[150, "arrow-maps"]], "Joint plots": [[150, "joint-plots"]], "Comparing Evoked objects": [[150, "comparing-evoked-objects"]], "Image plots": [[150, "image-plots"]], "Topographical subplots": [[150, "topographical-subplots"]], "3D Field Maps": [[150, "d-field-maps"]], "EEG analysis - Event-Related Potentials (ERPs)": [[151, "eeg-analysis-event-related-potentials-erps"]], "Channel names and types": [[151, "channel-names-and-types"]], "Channel locations": [[151, "channel-locations"]], "Setting the EEG reference": [[151, "setting-the-eeg-reference"], [207, "setting-the-eeg-reference"]], "Filtering": [[151, "filtering"]], "Evoked responses: epoching and averaging": [[151, "evoked-responses-epoching-and-averaging"]], "Global field power (GFP)": [[151, "global-field-power-gfp"]], "Averaging across channels with regions of interest": [[151, "averaging-across-channels-with-regions-of-interest"]], "Comparing conditions": [[151, "comparing-conditions"]], "Grand averages": [[151, "grand-averages"]], "Amplitude and latency measures": [[151, "amplitude-and-latency-measures"]], "Peak latency and amplitude": [[151, "peak-latency-and-amplitude"]], "Mean Amplitude": [[151, "mean-amplitude"]], "Plotting whitened data": [[152, "plotting-whitened-data"]], "Raw data with whitening": [[152, "raw-data-with-whitening"]], "Epochs with whitening": [[152, "epochs-with-whitening"]], "Evoked data with whitening": [[152, "evoked-data-with-whitening"]], "Evoked data with scaled whitening": [[152, "evoked-data-with-scaled-whitening"]], "Topographic plot with whitening": [[152, "topographic-plot-with-whitening"]], "Estimating evoked responses": [[153, "estimating-evoked-responses"], [165, "estimating-evoked-responses"], [166, "estimating-evoked-responses"]], "FreeSurfer MRI reconstruction": [[155, "freesurfer-mri-reconstruction"]], "First steps": [[155, "first-steps"], [840, "first-steps"]], "Anatomical reconstruction": [[155, "anatomical-reconstruction"]], "Use with MNE-Python": [[155, "use-with-mne-python"]], "\u2018fsaverage\u2019": [[155, "fsaverage"]], "Source alignment and coordinate frames": [[156, "source-alignment-and-coordinate-frames"]], "Understanding coordinate frames": [[156, "understanding-coordinate-frames"]], "Coordinate frame definitions": [[156, "coordinate-frame-definitions"]], "A bad example": [[156, "a-bad-example"]], "A good example": [[156, "a-good-example"]], "Visualizing the transformations": [[156, "visualizing-the-transformations"]], "Example: MRI defacing": [[156, "example-mri-defacing"]], "Defining the head\u2194MRI trans using the GUI": [[156, "defining-the-headmri-trans-using-the-gui"]], "Alignment without MRI": [[156, "alignment-without-mri"]], "Using an automated approach to coregistration": [[157, "using-an-automated-approach-to-coregistration"]], "Set up the coregistration model": [[157, "set-up-the-coregistration-model"]], "Initial fit with fiducials": [[157, "initial-fit-with-fiducials"]], "Refining with ICP": [[157, "refining-with-icp"]], "Omitting bad points": [[157, "omitting-bad-points"]], "Final coregistration fit": [[157, "final-coregistration-fit"]], "Head model and forward computation": [[158, "head-model-and-forward-computation"]], "Computing the forward operator": [[158, "computing-the-forward-operator"]], "Compute and visualize BEM surfaces": [[158, "compute-and-visualize-bem-surfaces"]], "Visualizing the coregistration": [[158, "visualizing-the-coregistration"]], "Compute Source Space": [[158, "compute-source-space"]], "Compute forward solution": [[158, "compute-forward-solution"]], "EEG forward operator with a template MRI": [[159, "eeg-forward-operator-with-a-template-mri"]], "Adult template MRI (fsaverage)": [[159, "adult-template-mri-fsaverage"]], "Setup source space and compute forward": [[159, "setup-source-space-and-compute-forward"]], "Infant MRI surrogates": [[159, "infant-mri-surrogates"]], "Get an infant MRI template": [[159, "get-an-infant-mri-template"]], "How MNE uses FreeSurfer\u2019s outputs": [[160, "how-mne-uses-freesurfer-s-outputs"]], "MRI coordinate frames": [[160, "mri-coordinate-frames"]], "Under the hood": [[160, null]], "\u201cMRI coordinates\u201d in MNE-Python: FreeSurfer surface RAS": [[160, "mri-coordinates-in-mne-python-freesurfer-surface-ras"]], "Head coordinate frame": [[160, null]], "Using FreeSurfer\u2019s surface reconstructions": [[160, "using-freesurfer-s-surface-reconstructions"]], "Cortical alignment (spherical)": [[160, "cortical-alignment-spherical"]], "Surface decimation": [[160, "surface-decimation"]], "FreeSurfer\u2019s MNI affine transformation": [[160, "freesurfer-s-mni-affine-transformation"]], "Understanding the inflated brain": [[160, "understanding-the-inflated-brain"]], "Fixing BEM and head surfaces": [[161, "fixing-bem-and-head-surfaces"]], "Exporting surfaces to Blender": [[161, "exporting-surfaces-to-blender"]], "Editing in Blender": [[161, "editing-in-blender"]], "Using the fixed surfaces in MNE-Python": [[161, "using-the-fixed-surfaces-in-mne-python"]], "Editing the head surfaces": [[161, "editing-the-head-surfaces"]], "Low-resolution head": [[161, "low-resolution-head"]], "High-resolution head": [[161, "high-resolution-head"]], "Blender editing tips": [[161, "blender-editing-tips"]], "What if you still get an error?": [[161, "what-if-you-still-get-an-error"]], "Blender operations": [[161, "blender-operations"]], "Cleaning up a bad dense head surface by smoothing": [[161, "cleaning-up-a-bad-dense-head-surface-by-smoothing"]], "Topological errors": [[161, "topological-errors"]], "Dealing with topology in blender": [[161, "dealing-with-topology-in-blender"]], "Dealing with topology using pymeshfix": [[161, "dealing-with-topology-using-pymeshfix"]], "Computing a covariance matrix": [[162, "computing-a-covariance-matrix"]], "Plot the covariance matrices": [[162, "plot-the-covariance-matrices"]], "How should I regularize the covariance matrix?": [[162, "how-should-i-regularize-the-covariance-matrix"], [857, "how-should-i-regularize-the-covariance-matrix"]], "Forward models and source spaces": [[163, "forward-models-and-source-spaces"], [165, "forward-models-and-source-spaces"]], "Tutorials": [[165, "tutorials"]], "Introductory tutorials": [[165, "introductory-tutorials"], [173, "introductory-tutorials"]], "Reading data for different recording systems": [[165, "reading-data-for-different-recording-systems"], [192, "reading-data-for-different-recording-systems"]], "Working with continuous data": [[165, "working-with-continuous-data"], [218, "working-with-continuous-data"]], "Time-frequency analysis": [[165, "time-frequency-analysis"], [166, "time-frequency-analysis"], [241, "time-frequency-analysis"]], "Source localization and inverses": [[165, "source-localization-and-inverses"], [186, "source-localization-and-inverses"]], "Statistical analysis of sensor data": [[165, "statistical-analysis-of-sensor-data"], [231, "statistical-analysis-of-sensor-data"]], "Statistical analysis of source estimates": [[165, "statistical-analysis-of-source-estimates"], [236, "statistical-analysis-of-source-estimates"]], "Machine learning models of neural activity": [[165, "machine-learning-models-of-neural-activity"], [196, "machine-learning-models-of-neural-activity"]], "Simulation": [[165, "simulation"], [223, "simulation"], [873, "simulation"]], "Overview of MEG/EEG analysis with MNE-Python": [[166, "overview-of-meg-eeg-analysis-with-mne-python"]], "Loading data": [[166, "loading-data"]], "Detecting experimental events": [[166, "detecting-experimental-events"]], "Epoching continuous data": [[166, "epoching-continuous-data"]], "Inverse modeling": [[166, "inverse-modeling"]], "Modifying data in-place": [[167, "modifying-data-in-place"]], "Signal processing": [[167, "signal-processing"]], "Channel picking": [[167, "channel-picking"]], "The copy parameter": [[167, "the-copy-parameter"]], "Parsing events from raw data": [[168, "parsing-events-from-raw-data"]], "The Events and Annotations data structures": [[168, "the-events-and-annotations-data-structures"]], "What is a STIM channel?": [[168, "what-is-a-stim-channel"]], "Converting a STIM channel signal to an Events array": [[168, "converting-a-stim-channel-signal-to-an-events-array"]], "The middle column of the Events array": [[168, null]], "Reading embedded events as Annotations": [[168, "reading-embedded-events-as-annotations"]], "Converting between Events arrays and Annotations objects": [[168, "converting-between-events-arrays-and-annotations-objects"]], "Making multiple events per annotation": [[168, "making-multiple-events-per-annotation"]], "The Info data structure": [[169, "the-info-data-structure"]], "Querying the Info object": [[169, "querying-the-info-object"]], "Obtaining subsets of channels": [[169, "obtaining-subsets-of-channels"]], "Obtaining channel type information": [[169, "obtaining-channel-type-information"]], "Dropping channels from an Info object": [[169, "dropping-channels-from-an-info-object"]], "Working with sensor locations": [[170, "working-with-sensor-locations"]], "About montages and layouts": [[170, "about-montages-and-layouts"]], "Working with built-in montages": [[170, "working-with-built-in-montages"]], "Computing sensor locations": [[170, null]], "Plotting 2D sensor locations like EEGLAB": [[170, "plotting-2d-sensor-locations-like-eeglab"]], "The sphere keyword is available in many places!": [[170, null]], "Manually controlling 2D channel projection": [[170, "manually-controlling-2d-channel-projection"]], "Reading sensor digitization files": [[170, "reading-sensor-digitization-files"]], "Visualizing sensors in 3D surface renderings": [[170, "visualizing-sensors-in-3d-surface-renderings"]], "Working with layout files": [[170, "working-with-layout-files"]], "Configuring MNE-Python": [[171, "configuring-mne-python"]], "Getting and setting configuration variables": [[171, "getting-and-setting-configuration-variables"]], "Where configurations are stored": [[171, "where-configurations-are-stored"]], "Using environment variables": [[171, "using-environment-variables"]], "Logging": [[171, "logging"]], "Getting information about your system": [[171, "getting-information-about-your-system"]], "Getting started with mne.Report": [[172, "getting-started-with-mne-report"]], "Adding Raw data": [[172, "adding-raw-data"]], "Adding events": [[172, "adding-events"]], "Adding Epochs": [[172, "adding-epochs"]], "Adding Evoked": [[172, "adding-evoked"]], "Adding Covariance": [[172, "adding-covariance"]], "Adding Projection vectors": [[172, "adding-projection-vectors"]], "Adding ICA": [[172, "adding-ica"]], "Adding MRI with BEM": [[172, "adding-mri-with-bem"]], "Adding coregistration": [[172, "adding-coregistration"]], "Adding a Forward solution": [[172, "adding-a-forward-solution"]], "Adding an InverseOperator": [[172, "adding-an-inverseoperator"]], "Adding a SourceEstimate": [[172, "adding-a-sourceestimate"]], "Adding source code (e.g., a Python script)": [[172, "adding-source-code-e-g-a-python-script"]], "Adding custom figures": [[172, "adding-custom-figures"]], "Adding image files": [[172, "adding-image-files"]], "Working with tags": [[172, "working-with-tags"]], "Editing a saved report": [[172, "editing-a-saved-report"]], "Adding an entire folder of files": [[172, "adding-an-entire-folder-of-files"]], "Adding custom HTML (e.g., a description text)": [[172, "adding-custom-html-e-g-a-description-text"]], "The SourceEstimate data structure": [[175, "the-sourceestimate-data-structure"]], "Load and inspect example data": [[175, "load-and-inspect-example-data"]], "SourceEstimate (stc)": [[175, "sourceestimate-stc"]], "Relationship to SourceSpaces (src)": [[175, "relationship-to-sourcespaces-src"]], "Source localization with equivalent current dipole (ECD) fit": [[176, "source-localization-with-equivalent-current-dipole-ecd-fit"]], "Source localization with MNE, dSPM, sLORETA, and eLORETA": [[177, "source-localization-with-mne-dspm-sloreta-and-eloreta"]], "Compute regularized noise covariance": [[177, "compute-regularized-noise-covariance"]], "Compute the evoked response": [[177, "compute-the-evoked-response"]], "Inverse modeling: MNE/dSPM on evoked and raw data": [[177, "inverse-modeling-mne-dspm-on-evoked-and-raw-data"]], "The role of dipole orientations in distributed source localization": [[178, "the-role-of-dipole-orientations-in-distributed-source-localization"]], "The source space": [[178, "the-source-space"]], "Fixed dipole orientations": [[178, "fixed-dipole-orientations"]], "Loose dipole orientations": [[178, "loose-dipole-orientations"]], "Limiting orientations, but not fixing them": [[178, "limiting-orientations-but-not-fixing-them"]], "Discarding dipole orientation information": [[178, "discarding-dipole-orientation-information"]], "Computing various MNE solutions": [[179, "computing-various-mne-solutions"]], "Fixed orientation": [[179, "fixed-orientation"]], "Free orientation": [[179, "free-orientation"]], "Source reconstruction using an LCMV beamformer": [[180, "source-reconstruction-using-an-lcmv-beamformer"]], "Introduction to beamformers": [[180, "introduction-to-beamformers"]], "Data processing": [[180, "data-processing"]], "Computing the covariance matrices": [[180, "computing-the-covariance-matrices"]], "The forward model": [[180, "the-forward-model"]], "Handling depth bias": [[180, "handling-depth-bias"]], "Compute the spatial filter": [[180, "compute-the-spatial-filter"]], "Apply the spatial filter": [[180, "apply-the-spatial-filter"]], "Visualize the reconstructed source activity": [[180, "visualize-the-reconstructed-source-activity"]], "On MRI slices (orthoview; 2D)": [[180, "on-mri-slices-orthoview-2d"]], "On MNI glass brain (orthoview; 2D)": [[180, "on-mni-glass-brain-orthoview-2d"]], "Volumetric rendering (3D) with vectors": [[180, "volumetric-rendering-3d-with-vectors"]], "Visualize the activity of the maximum voxel with all three components": [[180, "visualize-the-activity-of-the-maximum-voxel-with-all-three-components"]], "Morph the output to fsaverage": [[180, "morph-the-output-to-fsaverage"]], "Visualize source time courses (stcs)": [[181, "visualize-source-time-courses-stcs"]], "Surface Source Estimates": [[181, "surface-source-estimates"]], "Volume Source Estimates": [[181, "volume-source-estimates"]], "Vector Source Estimates": [[181, "vector-source-estimates"]], "Dipole fits": [[181, "dipole-fits"]], "EEG source localization given electrode locations on an MRI": [[182, "eeg-source-localization-given-electrode-locations-on-an-mri"]], "Prerequisites": [[182, "prerequisites"]], "Visualizing the MRI": [[182, "visualizing-the-mri"]], "Getting our MRI voxel EEG locations to head (and MRI surface RAS) coords": [[182, "getting-our-mri-voxel-eeg-locations-to-head-and-mri-surface-ras-coords"]], "Getting a source estimate": [[182, "getting-a-source-estimate"]], "Brainstorm Elekta phantom dataset tutorial": [[183, "brainstorm-elekta-phantom-dataset-tutorial"]], "Brainstorm CTF phantom dataset tutorial": [[184, "brainstorm-ctf-phantom-dataset-tutorial"]], "4D Neuroimaging/BTi phantom dataset tutorial": [[185, "d-neuroimaging-bti-phantom-dataset-tutorial"]], "Importing data from MEG devices": [[188, "importing-data-from-meg-devices"]], "MEGIN/Elekta Neuromag VectorView and TRIUX (.fif)": [[188, "megin-elekta-neuromag-vectorview-and-triux-fif"]], "FIL OPM (.bin)": [[188, "fil-opm-bin"]], "Artemis123 (.bin)": [[188, "artemis123-bin"]], "4-D Neuroimaging / BTI data (dir)": [[188, "d-neuroimaging-bti-data-dir"]], "CTF data (dir)": [[188, "ctf-data-dir"]], "CTF Polhemus data": [[188, "ctf-polhemus-data"]], "Applying software gradient compensation": [[188, "applying-software-gradient-compensation"]], "Ricoh/KIT MEG system data (.con/.sqd)": [[188, "ricoh-kit-meg-system-data-con-sqd"]], "Channel naming": [[188, null]], "FieldTrip MEG/EEG data (.mat)": [[188, "fieldtrip-meg-eeg-data-mat"]], "Creating MNE data structures from arbitrary data (from memory)": [[188, "creating-mne-data-structures-from-arbitrary-data-from-memory"]], "Importing data from EEG devices": [[189, "importing-data-from-eeg-devices"]], "BrainVision (.vhdr, .vmrk, .eeg)": [[189, "brainvision-vhdr-vmrk-eeg"]], "European data format (.edf)": [[189, "european-data-format-edf"]], "BioSemi data format (.bdf)": [[189, "biosemi-data-format-bdf"]], "General data format (.gdf)": [[189, "general-data-format-gdf"]], "Neuroscan CNT (.cnt)": [[189, "neuroscan-cnt-cnt"]], "EGI simple binary (.egi)": [[189, "egi-simple-binary-egi"]], "EGI MFF (.mff)": [[189, "egi-mff-mff"]], "EEGLAB files (.set, .fdt)": [[189, "eeglab-files-set-fdt"]], "Nicolet (.data)": [[189, "nicolet-data"]], "eXimia EEG data (.nxe)": [[189, "eximia-eeg-data-nxe"]], "Persyst EEG data (.lay, .dat)": [[189, "persyst-eeg-data-lay-dat"]], "Nihon Kohden EEG data (.eeg, .21e, .pnt, .log)": [[189, "nihon-kohden-eeg-data-eeg-21e-pnt-log"]], "XDF data (.xdf, .xdfz)": [[189, "xdf-data-xdf-xdfz"]], "Setting EEG references": [[189, "setting-eeg-references"]], "Reading electrode locations and head shapes for EEG recordings": [[189, "reading-electrode-locations-and-head-shapes-for-eeg-recordings"]], "Importing data from fNIRS devices": [[190, "importing-data-from-fnirs-devices"]], "Standardized data": [[190, "standardized-data"]], "SNIRF (.snirf)": [[190, "snirf-snirf"]], "Specifying the coordinate system": [[190, "specifying-the-coordinate-system"]], "Continuous Wave Devices": [[190, "continuous-wave-devices"]], "NIRx (directory or hdr)": [[190, "nirx-directory-or-hdr"]], "Hitachi (.csv)": [[190, "hitachi-csv"]], "Frequency Domain Devices": [[190, "frequency-domain-devices"]], "BOXY (.txt)": [[190, "boxy-txt"]], "Custom Data Import": [[190, "custom-data-import"]], "Loading legacy data in CSV or TSV format": [[190, "loading-legacy-data-in-csv-or-tsv-format"]], "Applying standard sensor locations to imported data": [[190, "applying-standard-sensor-locations-to-imported-data"]], "Working with CTF data: the Brainstorm auditory dataset": [[191, "working-with-ctf-data-the-brainstorm-auditory-dataset"]], "Spectro-temporal receptive field (STRF) estimation on continuous data": [[194, "spectro-temporal-receptive-field-strf-estimation-on-continuous-data"]], "Load audio data": [[194, "load-audio-data"]], "Create a receptive field": [[194, "create-a-receptive-field"]], "Simulate a neural response": [[194, "simulate-a-neural-response"]], "Fit a model to recover this receptive field": [[194, "fit-a-model-to-recover-this-receptive-field"]], "Visualize the effects of regularization": [[194, "visualize-the-effects-of-regularization"]], "Using different regularization types": [[194, "using-different-regularization-types"]], "Compare model performance": [[194, "compare-model-performance"]], "Decoding (MVPA)": [[195, "decoding-mvpa"]], "Design philosophy": [[195, "design-philosophy"], [855, "design-philosophy"]], "Transformation classes": [[195, "transformation-classes"]], "Scaler": [[195, "scaler"]], "Vectorizer": [[195, "vectorizer"]], "PSDEstimator": [[195, "psdestimator"]], "FilterEstimator": [[195, "filterestimator"]], "Spatial filters": [[195, "spatial-filters"]], "Common spatial pattern": [[195, "common-spatial-pattern"]], "Examples": [[195, null], [195, null], [195, null], [195, null], [195, null], [255, "examples"], [255, "id4"], [255, "id7"], [255, "id10"], [255, "id13"], [255, "id16"], [255, "id19"], [255, "id22"], [255, "id25"], [255, "id29"], [255, "id32"], [255, "id35"], [255, "id38"], [255, "id41"], [255, "id44"], [255, "id47"], [255, "id50"], [255, "id53"], [255, "id56"], [255, "id59"], [255, "id62"], [255, "id65"], [255, "id68"], [854, null], [854, null], [854, null], [854, null], [854, null], [854, null], [854, null], [854, null], [854, null], [854, null], [854, null], [854, null], [854, null], [854, null], [854, null], [854, null], [854, null], [854, null], [854, null], [854, null], [854, null], [854, null]], "Source power comodulation (SPoC)": [[195, "source-power-comodulation-spoc"]], "xDAWN": [[195, "xdawn"]], "Effect-matched spatial filtering": [[195, "effect-matched-spatial-filtering"]], "Patterns vs. filters": [[195, "patterns-vs-filters"]], "Decoding over time": [[195, "decoding-over-time"]], "Temporal decoding": [[195, "temporal-decoding"]], "Temporal generalization": [[195, "temporal-generalization"]], "Projecting sensor-space patterns to source space": [[195, "projecting-sensor-space-patterns-to-source-space"]], "Source-space decoding": [[195, "source-space-decoding"]], "Overview of artifact detection": [[198, "overview-of-artifact-detection"]], "What are artifacts?": [[198, "what-are-artifacts"]], "What to do about artifacts": [[198, "what-to-do-about-artifacts"]], "Artifact detection": [[198, "artifact-detection"]], "Low-frequency drifts": [[198, "low-frequency-drifts"]], "Power line noise": [[198, "power-line-noise"], [202, "power-line-noise"]], "Heartbeat artifacts (ECG)": [[198, "heartbeat-artifacts-ecg"]], "Ocular artifacts (EOG)": [[198, "ocular-artifacts-eog"]], "Handling bad channels": [[199, "handling-bad-channels"]], "Marking bad channels": [[199, "marking-bad-channels"], [853, "marking-bad-channels"]], "Blocking execution": [[199, null]], "When to look for bad channels": [[199, "when-to-look-for-bad-channels"]], "Why mark bad channels at all?": [[199, "why-mark-bad-channels-at-all"]], "Interpolating bad channels": [[199, "interpolating-bad-channels"]], "How interpolation works": [[199, "how-interpolation-works"]], "Interpolation in MNE-Python": [[199, "interpolation-in-mne-python"]], "Rejecting bad data spans and breaks": [[200, "rejecting-bad-data-spans-and-breaks"]], "Annotating bad spans of data": [[200, "annotating-bad-spans-of-data"]], "The reject_by_annotation parameter": [[200, "the-reject-by-annotation-parameter"]], "Generating annotations programmatically": [[200, "generating-annotations-programmatically"]], "Detecting and annotating breaks": [[200, "detecting-and-annotating-breaks"]], "Rejecting Epochs based on channel amplitude": [[200, "rejecting-epochs-based-on-channel-amplitude"]], "Background information on filtering": [[201, "background-information-on-filtering"]], "Problem statement": [[201, "problem-statement"]], "Filtering basics": [[201, "filtering-basics"]], "FIR Filters": [[201, "fir-filters"]], "Designing FIR filters": [[201, "designing-fir-filters"]], "Applying FIR filters": [[201, "applying-fir-filters"]], "IIR filters": [[201, "iir-filters"]], "Designing IIR filters": [[201, "designing-iir-filters"]], "Applying IIR filters": [[201, "applying-iir-filters"]], "Some pitfalls of filtering": [[201, "some-pitfalls-of-filtering"]], "Low-pass problems": [[201, "low-pass-problems"]], "High-pass problems": [[201, "high-pass-problems"]], "Baseline problems (or solutions?)": [[201, "baseline-problems-or-solutions"]], "Filtering defaults": [[201, "filtering-defaults"]], "Defaults in MNE-Python": [[201, "defaults-in-mne-python"]], "Defaults in MNE-C": [[201, "defaults-in-mne-c"]], "Defaults in other software": [[201, "defaults-in-other-software"]], "Reporting Filters": [[201, "reporting-filters"]], "Filter type": [[201, "filter-type"]], "Cutoff frequency": [[201, "cutoff-frequency"]], "Filter length (order) and transition bandwidth (roll-off)": [[201, "filter-length-order-and-transition-bandwidth-roll-off"]], "Passband ripple and stopband attenuation": [[201, "passband-ripple-and-stopband-attenuation"]], "Filter delay and direction of computation": [[201, "filter-delay-and-direction-of-computation"]], "Filtering and resampling data": [[202, "filtering-and-resampling-data"]], "Background on filtering": [[202, "background-on-filtering"]], "Repairing artifacts by filtering": [[202, "repairing-artifacts-by-filtering"]], "Slow drifts": [[202, "slow-drifts"]], "Resampling": [[202, "resampling"]], "Best practices": [[202, "best-practices"], [205, "best-practices"]], "Repairing artifacts with regression": [[203, "repairing-artifacts-with-regression"]], "Prepare the data": [[203, "prepare-the-data"]], "Visualize the original data": [[203, "visualize-the-original-data"]], "Compute and apply EOG regression": [[203, "compute-and-apply-eog-regression"]], "Subtract the evoked response from the epoch data before regression": [[203, "subtract-the-evoked-response-from-the-epoch-data-before-regression"]], "Create EOG evoked before regression": [[203, "create-eog-evoked-before-regression"]], "Visualize the effect on raw data": [[203, "visualize-the-effect-on-raw-data"]], "Repairing artifacts with ICA": [[204, "repairing-artifacts-with-ica"]], "What is ICA?": [[204, "what-is-ica"]], "ICA in MNE-Python": [[204, "ica-in-mne-python"]], "ICA and dimensionality reduction": [[204, null]], "Example: EOG and ECG artifact repair": [[204, "example-eog-and-ecg-artifact-repair"], [206, "example-eog-and-ecg-artifact-repair"]], "Visualizing the artifacts": [[204, "visualizing-the-artifacts"], [206, "visualizing-the-artifacts"]], "Filtering to remove slow drifts": [[204, "filtering-to-remove-slow-drifts"]], "Fitting ICA": [[204, "fitting-ica"]], "Ignoring the time domain": [[204, null]], "Looking at the ICA solution": [[204, "looking-at-the-ica-solution"]], "Selecting ICA components manually": [[204, "selecting-ica-components-manually"]], "Using an EOG channel to select ICA components": [[204, "using-an-eog-channel-to-select-ica-components"]], "Using a simulated channel to select ICA components": [[204, "using-a-simulated-channel-to-select-ica-components"]], "Selecting ICA components using template matching": [[204, "selecting-ica-components-using-template-matching"]], "Compute ICA components on Epochs": [[204, "compute-ica-components-on-epochs"]], "Background on projectors and projections": [[205, "background-on-projectors-and-projections"]], "What is a projection?": [[205, "what-is-a-projection"]], "Example: projection as noise reduction": [[205, "example-projection-as-noise-reduction"]], "Terminology": [[205, null]], "Signal-space projection (SSP)": [[205, "signal-space-projection-ssp"]], "Projectors in MNE-Python": [[205, "projectors-in-mne-python"]], "Computing projectors": [[205, "computing-projectors"]], "Visualizing the effect of projectors": [[205, "visualizing-the-effect-of-projectors"]], "Loading and saving projectors": [[205, "loading-and-saving-projectors"]], "Adding and removing projectors": [[205, "adding-and-removing-projectors"]], "When are projectors \u201capplied\u201d?": [[205, "when-are-projectors-applied"]], "Repairing artifacts with SSP": [[206, "repairing-artifacts-with-ssp"]], "What is SSP?": [[206, "what-is-ssp"]], "Example: Environmental noise reduction from empty-room recordings": [[206, "example-environmental-noise-reduction-from-empty-room-recordings"]], "Visualizing the empty-room noise": [[206, "visualizing-the-empty-room-noise"]], "Creating the empty-room projectors": [[206, "creating-the-empty-room-projectors"]], "Visualizing how projectors affect the signal": [[206, "visualizing-how-projectors-affect-the-signal"]], "Repairing ECG artifacts with SSP": [[206, "repairing-ecg-artifacts-with-ssp"]], "Repairing EOG artifacts with SSP": [[206, "repairing-eog-artifacts-with-ssp"]], "Choosing the number of projectors": [[206, "choosing-the-number-of-projectors"]], "Visualizing SSP sensor-space bias via signal reconstruction": [[206, "visualizing-ssp-sensor-space-bias-via-signal-reconstruction"]], "SSP reconstruction": [[206, null]], "Background": [[207, "background"]], "Setting or changing the reference channel": [[207, "setting-or-changing-the-reference-channel"]], "Setting average reference": [[207, "setting-average-reference"]], "Creating the average reference as a projector": [[207, "creating-the-average-reference-as-a-projector"]], "Using an infinite reference (REST)": [[207, "using-an-infinite-reference-rest"]], "Using a bipolar reference": [[207, "using-a-bipolar-reference"]], "EEG reference and source modeling": [[207, "eeg-reference-and-source-modeling"]], "Extracting and visualizing subject head movement": [[208, "extracting-and-visualizing-subject-head-movement"]], "HPI frequencies": [[208, "hpi-frequencies"]], "Estimating continuous head position": [[208, "estimating-continuous-head-position"]], "Visualizing continuous head position": [[208, "visualizing-continuous-head-position"]], "Computing SNR of the HPI signal": [[208, "computing-snr-of-the-hpi-signal"]], "Signal-space separation (SSS) and Maxwell filtering": [[209, "signal-space-separation-sss-and-maxwell-filtering"]], "Background on SSS and Maxwell filtering": [[209, "background-on-sss-and-maxwell-filtering"]], "Using SSS and Maxwell filtering in MNE-Python": [[209, "using-sss-and-maxwell-filtering-in-mne-python"]], "Spatiotemporal SSS (tSSS)": [[209, "spatiotemporal-sss-tsss"]], "Movement compensation": [[209, "movement-compensation"]], "Caveats to using SSS / Maxwell filtering": [[209, "caveats-to-using-sss-maxwell-filtering"]], "Preprocessing functional near-infrared spectroscopy (fNIRS) data": [[210, "preprocessing-functional-near-infrared-spectroscopy-fnirs-data"]], "Providing more meaningful annotation information": [[210, "providing-more-meaningful-annotation-information"]], "Viewing location of sensors over brain surface": [[210, "viewing-location-of-sensors-over-brain-surface"]], "Selecting channels appropriate for detecting neural responses": [[210, "selecting-channels-appropriate-for-detecting-neural-responses"]], "Converting from raw intensity to optical density": [[210, "converting-from-raw-intensity-to-optical-density"]], "Evaluating the quality of the data": [[210, "evaluating-the-quality-of-the-data"]], "Converting from optical density to haemoglobin": [[210, "converting-from-optical-density-to-haemoglobin"]], "Removing heart rate from signal": [[210, "removing-heart-rate-from-signal"]], "Extract epochs": [[210, "extract-epochs"]], "View consistency of responses across trials": [[210, "view-consistency-of-responses-across-trials"]], "View consistency of responses across channels": [[210, "view-consistency-of-responses-across-channels"]], "Plot standard fNIRS response image": [[210, "plot-standard-fnirs-response-image"]], "View topographic representation of activity": [[210, "view-topographic-representation-of-activity"]], "Compare tapping of left and right hands": [[210, "compare-tapping-of-left-and-right-hands"]], "Preprocessing optically pumped magnetometer (OPM) MEG data": [[211, "preprocessing-optically-pumped-magnetometer-opm-meg-data"]], "Examining raw data": [[211, "examining-raw-data"]], "Denoising: Regressing via reference sensors": [[211, "denoising-regressing-via-reference-sensors"]], "Comparing denoising methods": [[211, "comparing-denoising-methods"]], "Filtering nuisance signals": [[211, "filtering-nuisance-signals"]], "Generating an evoked response": [[211, "generating-an-evoked-response"]], "The Raw data structure: continuous data": [[214, "the-raw-data-structure-continuous-data"]], "Loading continuous data": [[214, "loading-continuous-data"]], "Datasets in MNE-Python": [[214, null]], "Querying the Raw object": [[214, "querying-the-raw-object"]], "Attributes vs. Methods": [[214, null]], "The Raw.info attribute": [[214, "the-raw-info-attribute"]], "Time, sample number, and sample index": [[214, "time-sample-number-and-sample-index"]], "Sample numbering in VectorView data": [[214, null]], "Modifying Raw objects": [[214, "modifying-raw-objects"]], "len(raw)": [[214, null]], "Long channel names": [[214, null]], "Extracting data from Raw objects": [[214, "extracting-data-from-raw-objects"]], "Extracting data by index": [[214, "extracting-data-by-index"]], "Extracting channels by name": [[214, "extracting-channels-by-name"]], "Extracting channels by type": [[214, "extracting-channels-by-type"]], "The Raw.get_data() method": [[214, "the-raw-get-data-method"]], "Summary of ways to extract data from Raw objects": [[214, "summary-of-ways-to-extract-data-from-raw-objects"]], "Exporting and saving Raw objects": [[214, "exporting-and-saving-raw-objects"]], "Working with events": [[215, "working-with-events"]], "Reading and writing events from/to a file": [[215, "reading-and-writing-events-from-to-a-file"]], "Subselecting and combining events": [[215, "subselecting-and-combining-events"]], "Including/excluding events": [[215, null]], "Mapping Event IDs to trial descriptors": [[215, "mapping-event-ids-to-trial-descriptors"]], "Plotting events": [[215, "plotting-events"]], "Plotting events and raw data together": [[215, "plotting-events-and-raw-data-together"]], "Making equally-spaced Events arrays": [[215, "making-equally-spaced-events-arrays"]], "Annotating continuous data": [[216, "annotating-continuous-data"]], "Creating annotations programmatically": [[216, "creating-annotations-programmatically"]], "Annotating Raw objects interactively": [[216, "annotating-raw-objects-interactively"]], "How annotations affect preprocessing and analysis": [[216, "how-annotations-affect-preprocessing-and-analysis"]], "Operations on Annotations objects": [[216, "operations-on-annotations-objects"]], "Reading and writing Annotations to/from a file": [[216, "reading-and-writing-annotations-to-from-a-file"]], "Built-in plotting methods for Raw objects": [[217, "built-in-plotting-methods-for-raw-objects"]], "Interactive data browsing with Raw.plot()": [[217, "interactive-data-browsing-with-raw-plot"]], "Plotting spectral density of continuous data": [[217, "plotting-spectral-density-of-continuous-data"]], "Plotting sensor locations from Raw objects": [[217, "plotting-sensor-locations-from-raw-objects"]], "Plotting projectors from Raw objects": [[217, "plotting-projectors-from-raw-objects"]], "Creating MNE-Python data structures from scratch": [[220, "creating-mne-python-data-structures-from-scratch"]], "Creating Info objects": [[220, "creating-info-objects"]], "Info objects": [[220, null]], "Info consistency": [[220, null]], "Creating Raw objects": [[220, "creating-raw-objects"]], "Units": [[220, null]], "Creating Epochs objects": [[220, "creating-epochs-objects"]], "Creating Evoked Objects": [[220, "creating-evoked-objects"]], "Corrupt known signal with point spread": [[221, "corrupt-known-signal-with-point-spread"]], "Load the MEG data": [[221, "load-the-meg-data"]], "Estimate the background noise covariance from the baseline period": [[221, "estimate-the-background-noise-covariance-from-the-baseline-period"]], "Generate sinusoids in two spatially distant labels": [[221, "generate-sinusoids-in-two-spatially-distant-labels"]], "Find the center vertices in source space of each label": [[221, "find-the-center-vertices-in-source-space-of-each-label"]], "Create source-space data with known signals": [[221, "create-source-space-data-with-known-signals"]], "Plot original signals": [[221, "plot-original-signals"]], "Simulate sensor-space signals": [[221, "simulate-sensor-space-signals"]], "Plot the point-spread of corrupted signal": [[221, "plot-the-point-spread-of-corrupted-signal"]], "Exercises": [[221, "exercises"], [230, "exercises"]], "DICS for power mapping": [[222, "dics-for-power-mapping"]], "Setup": [[222, "setup"]], "Data simulation": [[222, "data-simulation"]], "Power mapping": [[222, "power-mapping"]], "Statistical inference": [[225, "statistical-inference"]], "Hypothesis testing": [[225, "hypothesis-testing"]], "Null hypothesis": [[225, "null-hypothesis"]], "Parametric tests": [[225, "parametric-tests"]], "\u201cHat\u201d variance adjustment": [[225, "hat-variance-adjustment"], [225, "id3"]], "Non-parametric tests": [[225, "non-parametric-tests"]], "Multiple comparisons": [[225, "multiple-comparisons"]], "Bonferroni correction": [[225, "bonferroni-correction"]], "False discovery rate (FDR) correction": [[225, "false-discovery-rate-fdr-correction"]], "Non-parametric resampling test with a maximum statistic": [[225, "non-parametric-resampling-test-with-a-maximum-statistic"]], "Clustering": [[225, "clustering"]], "Effect size": [[225, null]], "Defining the adjacency matrix": [[225, "defining-the-adjacency-matrix"]], "Standard clustering": [[225, "standard-clustering"]], "Threshold-free cluster enhancement (TFCE)": [[225, "threshold-free-cluster-enhancement-tfce"]], "Visualize and compare methods": [[225, "visualize-and-compare-methods"]], "Statistical functions in MNE": [[225, "statistical-functions-in-mne"]], "Parametric methods provided by MNE": [[225, "parametric-methods-provided-by-mne"]], "Non-parametric methods": [[225, "non-parametric-methods"]], "Visualising statistical significance thresholds on EEG data": [[226, "visualising-statistical-significance-thresholds-on-eeg-data"]], "Non-parametric 1 sample cluster statistic on single trial power": [[227, "non-parametric-1-sample-cluster-statistic-on-single-trial-power"]], "Set parameters": [[227, "set-parameters"], [229, "set-parameters"], [230, "set-parameters"], [233, "set-parameters"], [234, "set-parameters"], [235, "set-parameters"]], "Define adjacency for statistics": [[227, "define-adjacency-for-statistics"]], "Compute statistic": [[227, "compute-statistic"], [228, "compute-statistic"], [233, "compute-statistic"], [234, "compute-statistic"]], "View time-frequency plots": [[227, "view-time-frequency-plots"], [228, "view-time-frequency-plots"]], "Non-parametric between conditions cluster statistic on single trial power": [[228, "non-parametric-between-conditions-cluster-statistic-on-single-trial-power"]], "Mass-univariate twoway repeated measures ANOVA on single trial power": [[229, "mass-univariate-twoway-repeated-measures-anova-on-single-trial-power"]], "Create TFR representations for all conditions": [[229, "create-tfr-representations-for-all-conditions"]], "Setup repeated measures ANOVA": [[229, "setup-repeated-measures-anova"]], "Sample data layout": [[229, "id1"]], "Account for multiple comparisons using FDR versus permutation clustering test": [[229, "account-for-multiple-comparisons-using-fdr-versus-permutation-clustering-test"]], "Spatiotemporal permutation F-test on full sensor data": [[230, "spatiotemporal-permutation-f-test-on-full-sensor-data"]], "Read epochs for the channel of interest": [[230, "read-epochs-for-the-channel-of-interest"]], "Find the FieldTrip neighbor definition to setup sensor adjacency": [[230, "find-the-fieldtrip-neighbor-definition-to-setup-sensor-adjacency"]], "Compute permutation statistic": [[230, "compute-permutation-statistic"]], "Visualize clusters": [[230, "visualize-clusters"]], "Permutation statistic for time-frequencies": [[230, "permutation-statistic-for-time-frequencies"]], "Permutation t-test on source data with spatio-temporal clustering": [[233, "permutation-t-test-on-source-data-with-spatio-temporal-clustering"]], "Read epochs for all channels, removing a bad one": [[233, "read-epochs-for-all-channels-removing-a-bad-one"], [235, "read-epochs-for-all-channels-removing-a-bad-one"]], "Transform to source space": [[233, "transform-to-source-space"], [235, "transform-to-source-space"]], "Transform to common cortical space": [[233, "transform-to-common-cortical-space"], [235, "transform-to-common-cortical-space"]], "Find adjacency matrix": [[233, "find-adjacency-matrix"]], "Selecting \u201csignificant\u201d clusters": [[233, "selecting-significant-clusters"]], "Visualize the clusters": [[233, "visualize-the-clusters"], [234, "visualize-the-clusters"], [235, "visualize-the-clusters"]], "2 samples permutation test on source data with spatio-temporal clustering": [[234, "samples-permutation-test-on-source-data-with-spatio-temporal-clustering"]], "Repeated measures ANOVA on source data with spatio-temporal clustering": [[235, "repeated-measures-anova-on-source-data-with-spatio-temporal-clustering"]], "Prepare function for arbitrary contrast": [[235, "prepare-function-for-arbitrary-contrast"]], "Compute clustering statistic": [[235, "compute-clustering-statistic"]], "The Spectrum and EpochsSpectrum classes: frequency-domain data": [[238, "the-spectrum-and-epochsspectrum-classes-frequency-domain-data"]], "Visualizing Spectrum objects": [[238, "visualizing-spectrum-objects"]], "Migrating legacy code": [[238, "migrating-legacy-code"]], "Quick reference for common Spectral class actions": [[238, "id4"]], "Frequency and time-frequency sensor analysis": [[239, "frequency-and-time-frequency-sensor-analysis"]], "Frequency analysis": [[239, "frequency-analysis"], [240, "frequency-analysis"]], "Time-frequency analysis: power and inter-trial coherence": [[239, "time-frequency-analysis-power-and-inter-trial-coherence"]], "Inspect power": [[239, "inspect-power"]], "Joint Plot": [[239, "joint-plot"]], "Inspect ITC": [[239, "inspect-itc"]], "Frequency-tagging: Basic analysis of an SSVEP/vSSR dataset": [[240, "frequency-tagging-basic-analysis-of-an-ssvep-vssr-dataset"]], "Data preprocessing": [[240, "data-preprocessing"]], "Calculate power spectral density (PSD)": [[240, "calculate-power-spectral-density-psd"]], "Calculate signal to noise ratio (SNR)": [[240, "calculate-signal-to-noise-ratio-snr"]], "Plot PSD and SNR spectra": [[240, "plot-psd-and-snr-spectra"]], "Extract SNR values at the stimulation frequency": [[240, "extract-snr-values-at-the-stimulation-frequency"]], "Get index for the stimulation frequency (12 Hz)": [[240, "get-index-for-the-stimulation-frequency-12-hz"]], "Get indices for the different trial types": [[240, "get-indices-for-the-different-trial-types"]], "Get indices of EEG channels forming the ROI": [[240, "get-indices-of-eeg-channels-forming-the-roi"]], "Apply the subset, and check the result": [[240, "apply-the-subset-and-check-the-result"]], "Topography of the vSSR": [[240, "topography-of-the-vssr"]], "Statistical separation of 12 Hz and 15 Hz vSSR": [[240, "statistical-separation-of-12-hz-and-15-hz-vssr"]], "Debriefing": [[240, "debriefing"]], "Bonus exercises": [[240, "bonus-exercises"]], "Effect of trial duration on SNR": [[240, "effect-of-trial-duration-on-snr"]], "Time resolved SNR": [[240, "time-resolved-snr"]], "General bibliography": [[243, "general-bibliography"]], "Papers citing MNE-Python": [[244, "papers-citing-mne-python"]], "Connectivity Estimation": [[245, "connectivity-estimation"]], "Covariance computation": [[246, "covariance-computation"]], "Creating data objects from arrays": [[247, "creating-data-objects-from-arrays"]], "Datasets": [[248, "datasets"]], "Decoding": [[249, "decoding"]], "Events": [[250, "events"]], "Exporting": [[251, "exporting"]], "File I/O": [[252, "file-i-o"]], "Forward Modeling": [[253, "forward-modeling"]], "Funding and other support": [[254, "funding-and-other-support"]], "Institutional partners": [[254, "institutional-partners"]], "Current partners": [[254, "current-partners"], [865, "current-partners"]], "Former partners": [[254, "former-partners"], [865, "former-partners"]], "Command line tools using Python": [[255, "command-line-tools-using-python"]], "mne anonymize": [[255, "mne-anonymize"]], "Anonymize raw fif file.": [[255, "anonymize-raw-fif-file"]], "Options": [[255, "options"], [255, "id3"], [255, "id6"], [255, "id9"], [255, "id12"], [255, "id15"], [255, "id18"], [255, "id21"], [255, "id24"], [255, "id28"], [255, "id31"], [255, "id34"], [255, "id37"], [255, "id40"], [255, "id43"], [255, "id46"], [255, "id49"], [255, "id52"], [255, "id55"], [255, "id58"], [255, "id61"], [255, "id64"], [255, "id67"]], "mne browse_raw": [[255, "mne-browse-raw"]], "Browse raw data.": [[255, "browse-raw-data"]], "mne bti2fiff": [[255, "mne-bti2fiff"]], "Import BTi / 4D MagnesWH3600 data to fif file.": [[255, "import-bti-4d-magneswh3600-data-to-fif-file"]], "Notes": [[255, "notes"], [255, "id26"]], "mne clean_eog_ecg": [[255, "mne-clean-eog-ecg"]], "Clean a raw file from EOG and ECG artifacts with PCA (ie SSP).": [[255, "clean-a-raw-file-from-eog-and-ecg-artifacts-with-pca-ie-ssp"]], "mne compare_fiff": [[255, "mne-compare-fiff"]], "Compare FIFF files.": [[255, "compare-fiff-files"]], "mne compute_proj_ecg": [[255, "mne-compute-proj-ecg"]], "Compute SSP/PCA projections for ECG artifacts.": [[255, "compute-ssp-pca-projections-for-ecg-artifacts"]], "mne compute_proj_eog": [[255, "mne-compute-proj-eog"]], "Compute SSP/PCA projections for EOG artifacts.": [[255, "compute-ssp-pca-projections-for-eog-artifacts"]], "mne coreg": [[255, "mne-coreg"]], "Open the coregistration GUI.": [[255, "open-the-coregistration-gui"]], "mne flash_bem": [[255, "mne-flash-bem"]], "Create 3-layer BEM model from Flash MRI images.": [[255, "create-3-layer-bem-model-from-flash-mri-images"]], "mne freeview_bem_surfaces": [[255, "mne-freeview-bem-surfaces"]], "View the 3-Layers BEM model using Freeview.": [[255, "view-the-3-layers-bem-model-using-freeview"]], "mne kit2fiff": [[255, "mne-kit2fiff"]], "Import KIT / NYU data to fif file.": [[255, "import-kit-nyu-data-to-fif-file"]], "mne make_scalp_surfaces": [[255, "mne-make-scalp-surfaces"]], "Create high-resolution head surfaces for coordinate alignment.": [[255, "create-high-resolution-head-surfaces-for-coordinate-alignment"]], "mne maxfilter": [[255, "mne-maxfilter"]], "Apply MaxFilter.": [[255, "apply-maxfilter"]], "mne prepare_bem_model": [[255, "mne-prepare-bem-model"]], "Create a BEM solution using the linear collocation approach.": [[255, "create-a-bem-solution-using-the-linear-collocation-approach"]], "mne report": [[255, "mne-report"]], "Create mne report for a folder.": [[255, "create-mne-report-for-a-folder"]], "mne setup_forward_model": [[255, "mne-setup-forward-model"]], "Create a BEM model for a subject.": [[255, "create-a-bem-model-for-a-subject"]], "mne setup_source_space": [[255, "mne-setup-source-space"]], "Set up bilateral hemisphere surface-based source space with subsampling.": [[255, "set-up-bilateral-hemisphere-surface-based-source-space-with-subsampling"]], "mne show_fiff": [[255, "mne-show-fiff"]], "Show the contents of a FIFF file.": [[255, "show-the-contents-of-a-fiff-file"]], "mne show_info": [[255, "mne-show-info"]], "Show measurement info from .fif file.": [[255, "show-measurement-info-from-fif-file"]], "mne surf2bem": [[255, "mne-surf2bem"]], "Convert surface to BEM FIF file.": [[255, "convert-surface-to-bem-fif-file"]], "mne sys_info": [[255, "mne-sys-info"]], "Show system information.": [[255, "show-system-information"]], "mne watershed_bem": [[255, "mne-watershed-bem"]], "Create BEM surfaces using the watershed algorithm included with FreeSurfer.": [[255, "create-bem-surfaces-using-the-watershed-algorithm-included-with-freesurfer"]], "mne what": [[255, "mne-what"]], "Check type of FIF file.": [[255, "check-type-of-fif-file"]], "mne.AcqParserFIF": [[256, "mne-acqparserfif"]], "mne.Annotations": [[257, "mne-annotations"]], "Examples using mne.Annotations": [[257, "examples-using-mne-annotations"]], "mne.BaseEpochs": [[258, "mne-baseepochs"]], "mne.BiHemiLabel": [[259, "mne-bihemilabel"]], "mne.Covariance": [[260, "mne-covariance"]], "Examples using mne.Covariance": [[260, "examples-using-mne-covariance"]], "mne.Dipole": [[261, "mne-dipole"]], "Examples using mne.Dipole": [[261, "examples-using-mne-dipole"]], "mne.DipoleFixed": [[262, "mne-dipolefixed"]], "Examples using mne.DipoleFixed": [[262, "examples-using-mne-dipolefixed"]], "mne.Epochs": [[263, "mne-epochs"]], "Examples using mne.Epochs": [[263, "examples-using-mne-epochs"]], "mne.EpochsArray": [[264, "mne-epochsarray"]], "Examples using mne.EpochsArray": [[264, "examples-using-mne-epochsarray"]], "mne.Evoked": [[265, "mne-evoked"]], "Examples using mne.Evoked": [[265, "examples-using-mne-evoked"]], "mne.EvokedArray": [[266, "mne-evokedarray"]], "Examples using mne.EvokedArray": [[266, "examples-using-mne-evokedarray"]], "mne.Forward": [[267, "mne-forward"]], "Examples using mne.Forward": [[267, "examples-using-mne-forward"]], "mne.Info": [[268, "mne-info"]], "Examples using mne.Info": [[268, "examples-using-mne-info"]], "mne.Label": [[269, "mne-label"]], "Examples using mne.Label": [[269, "examples-using-mne-label"]], "mne.MixedSourceEstimate": [[270, "mne-mixedsourceestimate"]], "Examples using mne.MixedSourceEstimate": [[270, "examples-using-mne-mixedsourceestimate"]], "mne.MixedVectorSourceEstimate": [[271, "mne-mixedvectorsourceestimate"]], "Examples using mne.MixedVectorSourceEstimate": [[271, "examples-using-mne-mixedvectorsourceestimate"]], "mne.Projection": [[272, "mne-projection"]], "Examples using mne.Projection": [[272, "examples-using-mne-projection"]], "mne.Report": [[273, "mne-report"]], "Examples using mne.Report": [[273, "examples-using-mne-report"]], "mne.SourceEstimate": [[274, "mne-sourceestimate"]], "Examples using mne.SourceEstimate": [[274, "examples-using-mne-sourceestimate"]], "mne.SourceMorph": [[275, "mne-sourcemorph"]], "Examples using mne.SourceMorph": [[275, "examples-using-mne-sourcemorph"]], "mne.SourceSpaces": [[276, "mne-sourcespaces"]], "Examples using mne.SourceSpaces": [[276, "examples-using-mne-sourcespaces"]], "mne.VectorSourceEstimate": [[277, "mne-vectorsourceestimate"]], "Examples using mne.VectorSourceEstimate": [[277, "examples-using-mne-vectorsourceestimate"]], "mne.VolSourceEstimate": [[278, "mne-volsourceestimate"]], "Examples using mne.VolSourceEstimate": [[278, "examples-using-mne-volsourceestimate"]], "mne.VolVectorSourceEstimate": [[279, "mne-volvectorsourceestimate"]], "mne.add_reference_channels": [[280, "mne-add-reference-channels"]], "Examples using mne.add_reference_channels": [[280, "examples-using-mne-add-reference-channels"]], "mne.add_source_space_distances": [[281, "mne-add-source-space-distances"]], "mne.annotations_from_events": [[282, "mne-annotations-from-events"]], "Examples using mne.annotations_from_events": [[282, "examples-using-mne-annotations-from-events"]], "mne.apply_forward": [[283, "mne-apply-forward"]], "mne.apply_forward_raw": [[284, "mne-apply-forward-raw"]], "mne.average_forward_solutions": [[285, "mne-average-forward-solutions"]], "mne.baseline.rescale": [[286, "mne-baseline-rescale"]], "Examples using mne.baseline.rescale": [[286, "examples-using-mne-baseline-rescale"]], "mne.beamformer.Beamformer": [[287, "mne-beamformer-beamformer"]], "Examples using mne.beamformer.Beamformer": [[287, "examples-using-mne-beamformer-beamformer"]], "mne.beamformer.apply_dics": [[288, "mne-beamformer-apply-dics"]], "mne.beamformer.apply_dics_csd": [[289, "mne-beamformer-apply-dics-csd"]], "Examples using mne.beamformer.apply_dics_csd": [[289, "examples-using-mne-beamformer-apply-dics-csd"]], "mne.beamformer.apply_dics_epochs": [[290, "mne-beamformer-apply-dics-epochs"]], "mne.beamformer.apply_dics_tfr_epochs": [[291, "mne-beamformer-apply-dics-tfr-epochs"]], "Examples using mne.beamformer.apply_dics_tfr_epochs": [[291, "examples-using-mne-beamformer-apply-dics-tfr-epochs"]], "mne.beamformer.apply_lcmv": [[292, "mne-beamformer-apply-lcmv"]], "Examples using mne.beamformer.apply_lcmv": [[292, "examples-using-mne-beamformer-apply-lcmv"]], "mne.beamformer.apply_lcmv_cov": [[293, "mne-beamformer-apply-lcmv-cov"]], "Examples using mne.beamformer.apply_lcmv_cov": [[293, "examples-using-mne-beamformer-apply-lcmv-cov"]], "mne.beamformer.apply_lcmv_epochs": [[294, "mne-beamformer-apply-lcmv-epochs"]], "Examples using mne.beamformer.apply_lcmv_epochs": [[294, "examples-using-mne-beamformer-apply-lcmv-epochs"]], "mne.beamformer.apply_lcmv_raw": [[295, "mne-beamformer-apply-lcmv-raw"]], "Examples using mne.beamformer.apply_lcmv_raw": [[295, "examples-using-mne-beamformer-apply-lcmv-raw"]], "mne.beamformer.make_dics": [[296, "mne-beamformer-make-dics"]], "Examples using mne.beamformer.make_dics": [[296, "examples-using-mne-beamformer-make-dics"]], "mne.beamformer.make_lcmv": [[297, "mne-beamformer-make-lcmv"]], "Examples using mne.beamformer.make_lcmv": [[297, "examples-using-mne-beamformer-make-lcmv"]], "mne.beamformer.make_lcmv_resolution_matrix": [[298, "mne-beamformer-make-lcmv-resolution-matrix"]], "Examples using mne.beamformer.make_lcmv_resolution_matrix": [[298, "examples-using-mne-beamformer-make-lcmv-resolution-matrix"]], "mne.beamformer.rap_music": [[299, "mne-beamformer-rap-music"]], "Examples using mne.beamformer.rap_music": [[299, "examples-using-mne-beamformer-rap-music"]], "mne.beamformer.read_beamformer": [[300, "mne-beamformer-read-beamformer"]], "mne.bem.ConductorModel": [[301, "mne-bem-conductormodel"]], "Examples using mne.bem.ConductorModel": [[301, "examples-using-mne-bem-conductormodel"]], "mne.bem.convert_flash_mris": [[302, "mne-bem-convert-flash-mris"]], "mne.bem.distance_to_bem": [[303, "mne-bem-distance-to-bem"]], "mne.bem.fit_sphere_to_headshape": [[304, "mne-bem-fit-sphere-to-headshape"]], "mne.bem.get_fitting_dig": [[305, "mne-bem-get-fitting-dig"]], "mne.bem.make_flash_bem": [[306, "mne-bem-make-flash-bem"]], "Examples using mne.bem.make_flash_bem": [[306, "examples-using-mne-bem-make-flash-bem"]], "mne.bem.make_scalp_surfaces": [[307, "mne-bem-make-scalp-surfaces"]], "mne.bem.make_watershed_bem": [[308, "mne-bem-make-watershed-bem"]], "Examples using mne.bem.make_watershed_bem": [[308, "examples-using-mne-bem-make-watershed-bem"]], "mne.channel_indices_by_type": [[309, "mne-channel-indices-by-type"]], "Examples using mne.channel_indices_by_type": [[309, "examples-using-mne-channel-indices-by-type"]], "mne.channel_type": [[310, "mne-channel-type"]], "Examples using mne.channel_type": [[310, "examples-using-mne-channel-type"]], "mne.channels.DigMontage": [[311, "mne-channels-digmontage"]], "Examples using mne.channels.DigMontage": [[311, "examples-using-mne-channels-digmontage"]], "mne.channels.Layout": [[312, "mne-channels-layout"]], "Examples using mne.channels.Layout": [[312, "examples-using-mne-channels-layout"]], "mne.channels.combine_channels": [[313, "mne-channels-combine-channels"]], "Examples using mne.channels.combine_channels": [[313, "examples-using-mne-channels-combine-channels"]], "mne.channels.compute_dev_head_t": [[314, "mne-channels-compute-dev-head-t"]], "mne.channels.compute_native_head_t": [[315, "mne-channels-compute-native-head-t"]], "Examples using mne.channels.compute_native_head_t": [[315, "examples-using-mne-channels-compute-native-head-t"]], "mne.channels.equalize_channels": [[316, "mne-channels-equalize-channels"]], "mne.channels.find_ch_adjacency": [[317, "mne-channels-find-ch-adjacency"]], "Examples using mne.channels.find_ch_adjacency": [[317, "examples-using-mne-channels-find-ch-adjacency"]], "mne.channels.find_layout": [[318, "mne-channels-find-layout"]], "mne.channels.fix_mag_coil_types": [[319, "mne-channels-fix-mag-coil-types"]], "mne.channels.generate_2d_layout": [[320, "mne-channels-generate-2d-layout"]], "mne.channels.get_builtin_ch_adjacencies": [[321, "mne-channels-get-builtin-ch-adjacencies"]], "Examples using mne.channels.get_builtin_ch_adjacencies": [[321, "examples-using-mne-channels-get-builtin-ch-adjacencies"]], "mne.channels.get_builtin_montages": [[322, "mne-channels-get-builtin-montages"]], "Examples using mne.channels.get_builtin_montages": [[322, "examples-using-mne-channels-get-builtin-montages"]], "mne.channels.make_1020_channel_selections": [[323, "mne-channels-make-1020-channel-selections"]], "Examples using mne.channels.make_1020_channel_selections": [[323, "examples-using-mne-channels-make-1020-channel-selections"]], "mne.channels.make_dig_montage": [[324, "mne-channels-make-dig-montage"]], "Examples using mne.channels.make_dig_montage": [[324, "examples-using-mne-channels-make-dig-montage"]], "mne.channels.make_eeg_layout": [[325, "mne-channels-make-eeg-layout"]], "Examples using mne.channels.make_eeg_layout": [[325, "examples-using-mne-channels-make-eeg-layout"]], "mne.channels.make_grid_layout": [[326, "mne-channels-make-grid-layout"]], "mne.channels.make_standard_montage": [[327, "mne-channels-make-standard-montage"]], "Examples using mne.channels.make_standard_montage": [[327, "examples-using-mne-channels-make-standard-montage"]], "mne.channels.read_ch_adjacency": [[328, "mne-channels-read-ch-adjacency"]], "Examples using mne.channels.read_ch_adjacency": [[328, "examples-using-mne-channels-read-ch-adjacency"]], "mne.channels.read_custom_montage": [[329, "mne-channels-read-custom-montage"]], "Examples using mne.channels.read_custom_montage": [[329, "examples-using-mne-channels-read-custom-montage"]], "mne.channels.read_dig_captrak": [[330, "mne-channels-read-dig-captrak"]], "mne.channels.read_dig_dat": [[331, "mne-channels-read-dig-dat"]], "mne.channels.read_dig_egi": [[332, "mne-channels-read-dig-egi"]], "mne.channels.read_dig_fif": [[333, "mne-channels-read-dig-fif"]], "Examples using mne.channels.read_dig_fif": [[333, "examples-using-mne-channels-read-dig-fif"]], "mne.channels.read_dig_hpts": [[334, "mne-channels-read-dig-hpts"]], "mne.channels.read_dig_localite": [[335, "mne-channels-read-dig-localite"]], "mne.channels.read_dig_polhemus_isotrak": [[336, "mne-channels-read-dig-polhemus-isotrak"]], "Examples using mne.channels.read_dig_polhemus_isotrak": [[336, "examples-using-mne-channels-read-dig-polhemus-isotrak"]], "mne.channels.read_layout": [[337, "mne-channels-read-layout"]], "Examples using mne.channels.read_layout": [[337, "examples-using-mne-channels-read-layout"]], "mne.channels.read_polhemus_fastscan": [[338, "mne-channels-read-polhemus-fastscan"]], "mne.channels.rename_channels": [[339, "mne-channels-rename-channels"]], "mne.chpi.compute_chpi_amplitudes": [[340, "mne-chpi-compute-chpi-amplitudes"]], "Examples using mne.chpi.compute_chpi_amplitudes": [[340, "examples-using-mne-chpi-compute-chpi-amplitudes"]], "mne.chpi.compute_chpi_locs": [[341, "mne-chpi-compute-chpi-locs"]], "Examples using mne.chpi.compute_chpi_locs": [[341, "examples-using-mne-chpi-compute-chpi-locs"]], "mne.chpi.compute_chpi_snr": [[342, "mne-chpi-compute-chpi-snr"]], "Examples using mne.chpi.compute_chpi_snr": [[342, "examples-using-mne-chpi-compute-chpi-snr"]], "mne.chpi.compute_head_pos": [[343, "mne-chpi-compute-head-pos"]], "Examples using mne.chpi.compute_head_pos": [[343, "examples-using-mne-chpi-compute-head-pos"]], "mne.chpi.extract_chpi_locs_ctf": [[344, "mne-chpi-extract-chpi-locs-ctf"]], "Examples using mne.chpi.extract_chpi_locs_ctf": [[344, "examples-using-mne-chpi-extract-chpi-locs-ctf"]], "mne.chpi.extract_chpi_locs_kit": [[345, "mne-chpi-extract-chpi-locs-kit"]], "mne.chpi.filter_chpi": [[346, "mne-chpi-filter-chpi"]], "Examples using mne.chpi.filter_chpi": [[346, "examples-using-mne-chpi-filter-chpi"]], "mne.chpi.get_active_chpi": [[347, "mne-chpi-get-active-chpi"]], "Examples using mne.chpi.get_active_chpi": [[347, "examples-using-mne-chpi-get-active-chpi"]], "mne.chpi.get_chpi_info": [[348, "mne-chpi-get-chpi-info"]], "Examples using mne.chpi.get_chpi_info": [[348, "examples-using-mne-chpi-get-chpi-info"]], "mne.chpi.head_pos_to_trans_rot_t": [[349, "mne-chpi-head-pos-to-trans-rot-t"]], "mne.chpi.read_head_pos": [[350, "mne-chpi-read-head-pos"]], "Examples using mne.chpi.read_head_pos": [[350, "examples-using-mne-chpi-read-head-pos"]], "mne.chpi.write_head_pos": [[351, "mne-chpi-write-head-pos"]], "Examples using mne.chpi.write_head_pos": [[351, "examples-using-mne-chpi-write-head-pos"]], "mne.combine_evoked": [[352, "mne-combine-evoked"]], "Examples using mne.combine_evoked": [[352, "examples-using-mne-combine-evoked"]], "mne.compute_covariance": [[353, "mne-compute-covariance"]], "Examples using mne.compute_covariance": [[353, "examples-using-mne-compute-covariance"]], "mne.compute_proj_epochs": [[354, "mne-compute-proj-epochs"]], "Examples using mne.compute_proj_epochs": [[354, "examples-using-mne-compute-proj-epochs"]], "mne.compute_proj_evoked": [[355, "mne-compute-proj-evoked"]], "Examples using mne.compute_proj_evoked": [[355, "examples-using-mne-compute-proj-evoked"]], "mne.compute_proj_raw": [[356, "mne-compute-proj-raw"]], "Examples using mne.compute_proj_raw": [[356, "examples-using-mne-compute-proj-raw"]], "mne.compute_rank": [[357, "mne-compute-rank"]], "Examples using mne.compute_rank": [[357, "examples-using-mne-compute-rank"]], "mne.compute_raw_covariance": [[358, "mne-compute-raw-covariance"]], "Examples using mne.compute_raw_covariance": [[358, "examples-using-mne-compute-raw-covariance"]], "mne.compute_source_morph": [[359, "mne-compute-source-morph"]], "Examples using mne.compute_source_morph": [[359, "examples-using-mne-compute-source-morph"]], "mne.concatenate_epochs": [[360, "mne-concatenate-epochs"]], "Examples using mne.concatenate_epochs": [[360, "examples-using-mne-concatenate-epochs"]], "mne.concatenate_events": [[361, "mne-concatenate-events"]], "mne.concatenate_raws": [[362, "mne-concatenate-raws"]], "Examples using mne.concatenate_raws": [[362, "examples-using-mne-concatenate-raws"]], "mne.convert_forward_solution": [[363, "mne-convert-forward-solution"]], "Examples using mne.convert_forward_solution": [[363, "examples-using-mne-convert-forward-solution"]], "mne.coreg.Coregistration": [[364, "mne-coreg-coregistration"]], "Examples using mne.coreg.Coregistration": [[364, "examples-using-mne-coreg-coregistration"]], "mne.coreg.estimate_head_mri_t": [[365, "mne-coreg-estimate-head-mri-t"]], "Examples using mne.coreg.estimate_head_mri_t": [[365, "examples-using-mne-coreg-estimate-head-mri-t"]], "mne.coreg.get_mni_fiducials": [[366, "mne-coreg-get-mni-fiducials"]], "Examples using mne.coreg.get_mni_fiducials": [[366, "examples-using-mne-coreg-get-mni-fiducials"]], "mne.count_events": [[367, "mne-count-events"]], "mne.cov.compute_whitener": [[368, "mne-cov-compute-whitener"]], "mne.cov.prepare_noise_cov": [[369, "mne-cov-prepare-noise-cov"]], "mne.cov.regularize": [[370, "mne-cov-regularize"]], "Examples using mne.cov.regularize": [[370, "examples-using-mne-cov-regularize"]], "mne.create_default_subject": [[371, "mne-create-default-subject"]], "mne.create_info": [[372, "mne-create-info"]], "Examples using mne.create_info": [[372, "examples-using-mne-create-info"]], "mne.cuda.get_cuda_memory": [[373, "mne-cuda-get-cuda-memory"]], "mne.cuda.init_cuda": [[374, "mne-cuda-init-cuda"]], "mne.cuda.set_cuda_device": [[375, "mne-cuda-set-cuda-device"]], "mne.datasets.brainstorm.bst_auditory.data_path": [[376, "mne-datasets-brainstorm-bst-auditory-data-path"]], "mne.datasets.brainstorm.bst_raw.data_path": [[377, "mne-datasets-brainstorm-bst-raw-data-path"]], "mne.datasets.brainstorm.bst_resting.data_path": [[378, "mne-datasets-brainstorm-bst-resting-data-path"]], "mne.datasets.eegbci.load_data": [[379, "mne-datasets-eegbci-load-data"]], "mne.datasets.eegbci.standardize": [[380, "mne-datasets-eegbci-standardize"]], "mne.datasets.epilepsy_ecog.data_path": [[381, "mne-datasets-epilepsy-ecog-data-path"]], "Examples using mne.datasets.epilepsy_ecog.data_path": [[381, "examples-using-mne-datasets-epilepsy-ecog-data-path"]], "mne.datasets.erp_core.data_path": [[382, "mne-datasets-erp-core-data-path"]], "mne.datasets.fetch_aparc_sub_parcellation": [[383, "mne-datasets-fetch-aparc-sub-parcellation"]], "mne.datasets.fetch_dataset": [[384, "mne-datasets-fetch-dataset"]], "mne.datasets.fetch_fsaverage": [[385, "mne-datasets-fetch-fsaverage"]], "mne.datasets.fetch_hcp_mmp_parcellation": [[386, "mne-datasets-fetch-hcp-mmp-parcellation"]], "mne.datasets.fetch_infant_template": [[387, "mne-datasets-fetch-infant-template"]], "Examples using mne.datasets.fetch_infant_template": [[387, "examples-using-mne-datasets-fetch-infant-template"]], "mne.datasets.fetch_phantom": [[388, "mne-datasets-fetch-phantom"]], "mne.datasets.fnirs_motor.data_path": [[389, "mne-datasets-fnirs-motor-data-path"]], "mne.datasets.has_dataset": [[390, "mne-datasets-has-dataset"]], "mne.datasets.hf_sef.data_path": [[391, "mne-datasets-hf-sef-data-path"]], "mne.datasets.kiloword.data_path": [[392, "mne-datasets-kiloword-data-path"]], "Examples using mne.datasets.kiloword.data_path": [[392, "examples-using-mne-datasets-kiloword-data-path"]], "mne.datasets.limo.load_data": [[393, "mne-datasets-limo-load-data"]], "mne.datasets.misc.data_path": [[394, "mne-datasets-misc-data-path"]], "mne.datasets.mtrf.data_path": [[395, "mne-datasets-mtrf-data-path"]], "mne.datasets.multimodal.data_path": [[396, "mne-datasets-multimodal-data-path"]], "mne.datasets.opm.data_path": [[397, "mne-datasets-opm-data-path"]], "mne.datasets.phantom_4dbti.data_path": [[398, "mne-datasets-phantom-4dbti-data-path"]], "mne.datasets.refmeg_noise.data_path": [[399, "mne-datasets-refmeg-noise-data-path"]], "mne.datasets.sample.data_path": [[400, "mne-datasets-sample-data-path"]], "Examples using mne.datasets.sample.data_path": [[400, "examples-using-mne-datasets-sample-data-path"]], "mne.datasets.sleep_physionet.age.fetch_data": [[401, "mne-datasets-sleep-physionet-age-fetch-data"]], "Examples using mne.datasets.sleep_physionet.age.fetch_data": [[401, "examples-using-mne-datasets-sleep-physionet-age-fetch-data"]], "mne.datasets.sleep_physionet.temazepam.fetch_data": [[402, "mne-datasets-sleep-physionet-temazepam-fetch-data"]], "mne.datasets.somato.data_path": [[403, "mne-datasets-somato-data-path"]], "mne.datasets.spm_face.data_path": [[404, "mne-datasets-spm-face-data-path"]], "Examples using mne.datasets.spm_face.data_path": [[404, "examples-using-mne-datasets-spm-face-data-path"]], "mne.datasets.ssvep.data_path": [[405, "mne-datasets-ssvep-data-path"]], "mne.datasets.ucl_opm_auditory.data_path": [[406, "mne-datasets-ucl-opm-auditory-data-path"]], "mne.datasets.visual_92_categories.data_path": [[407, "mne-datasets-visual-92-categories-data-path"]], "mne.decimate_surface": [[408, "mne-decimate-surface"]], "mne.decoding.CSP": [[409, "mne-decoding-csp"]], "Examples using mne.decoding.CSP": [[409, "examples-using-mne-decoding-csp"]], "mne.decoding.EMS": [[410, "mne-decoding-ems"]], "Examples using mne.decoding.EMS": [[410, "examples-using-mne-decoding-ems"]], "mne.decoding.FilterEstimator": [[411, "mne-decoding-filterestimator"]], "Examples using mne.decoding.FilterEstimator": [[411, "examples-using-mne-decoding-filterestimator"]], "mne.decoding.GeneralizingEstimator": [[412, "mne-decoding-generalizingestimator"]], "Examples using mne.decoding.GeneralizingEstimator": [[412, "examples-using-mne-decoding-generalizingestimator"]], "mne.decoding.LinearModel": [[413, "mne-decoding-linearmodel"]], "Examples using mne.decoding.LinearModel": [[413, "examples-using-mne-decoding-linearmodel"]], "mne.decoding.PSDEstimator": [[414, "mne-decoding-psdestimator"]], "Examples using mne.decoding.PSDEstimator": [[414, "examples-using-mne-decoding-psdestimator"]], "mne.decoding.ReceptiveField": [[415, "mne-decoding-receptivefield"]], "Examples using mne.decoding.ReceptiveField": [[415, "examples-using-mne-decoding-receptivefield"]], "mne.decoding.SPoC": [[416, "mne-decoding-spoc"]], "Examples using mne.decoding.SPoC": [[416, "examples-using-mne-decoding-spoc"]], "mne.decoding.SSD": [[417, "mne-decoding-ssd"]], "Examples using mne.decoding.SSD": [[417, "examples-using-mne-decoding-ssd"]], "mne.decoding.Scaler": [[418, "mne-decoding-scaler"]], "Examples using mne.decoding.Scaler": [[418, "examples-using-mne-decoding-scaler"]], "mne.decoding.SlidingEstimator": [[419, "mne-decoding-slidingestimator"]], "Examples using mne.decoding.SlidingEstimator": [[419, "examples-using-mne-decoding-slidingestimator"]], "mne.decoding.TemporalFilter": [[420, "mne-decoding-temporalfilter"]], "mne.decoding.TimeDelayingRidge": [[421, "mne-decoding-timedelayingridge"]], "Examples using mne.decoding.TimeDelayingRidge": [[421, "examples-using-mne-decoding-timedelayingridge"]], "mne.decoding.TimeFrequency": [[422, "mne-decoding-timefrequency"]], "mne.decoding.UnsupervisedSpatialFilter": [[423, "mne-decoding-unsupervisedspatialfilter"]], "Examples using mne.decoding.UnsupervisedSpatialFilter": [[423, "examples-using-mne-decoding-unsupervisedspatialfilter"]], "mne.decoding.Vectorizer": [[424, "mne-decoding-vectorizer"]], "Examples using mne.decoding.Vectorizer": [[424, "examples-using-mne-decoding-vectorizer"]], "mne.decoding.compute_ems": [[425, "mne-decoding-compute-ems"]], "Examples using mne.decoding.compute_ems": [[425, "examples-using-mne-decoding-compute-ems"]], "mne.decoding.cross_val_multiscore": [[426, "mne-decoding-cross-val-multiscore"]], "Examples using mne.decoding.cross_val_multiscore": [[426, "examples-using-mne-decoding-cross-val-multiscore"]], "mne.decoding.get_coef": [[427, "mne-decoding-get-coef"]], "Examples using mne.decoding.get_coef": [[427, "examples-using-mne-decoding-get-coef"]], "mne.dig_mri_distances": [[428, "mne-dig-mri-distances"]], "Examples using mne.dig_mri_distances": [[428, "examples-using-mne-dig-mri-distances"]], "mne.dipole.get_phantom_dipoles": [[429, "mne-dipole-get-phantom-dipoles"]], "Examples using mne.dipole.get_phantom_dipoles": [[429, "examples-using-mne-dipole-get-phantom-dipoles"]], "mne.epochs.average_movements": [[430, "mne-epochs-average-movements"]], "Examples using mne.epochs.average_movements": [[430, "examples-using-mne-epochs-average-movements"]], "mne.epochs.combine_event_ids": [[431, "mne-epochs-combine-event-ids"]], "mne.epochs.equalize_epoch_counts": [[432, "mne-epochs-equalize-epoch-counts"]], "Examples using mne.epochs.equalize_epoch_counts": [[432, "examples-using-mne-epochs-equalize-epoch-counts"]], "mne.epochs.make_metadata": [[433, "mne-epochs-make-metadata"]], "Examples using mne.epochs.make_metadata": [[433, "examples-using-mne-epochs-make-metadata"]], "mne.equalize_channels": [[434, "mne-equalize-channels"]], "mne.event.define_target_events": [[435, "mne-event-define-target-events"]], "Examples using mne.event.define_target_events": [[435, "examples-using-mne-event-define-target-events"]], "mne.event.match_event_names": [[436, "mne-event-match-event-names"]], "mne.event.shift_time_events": [[437, "mne-event-shift-time-events"]], "mne.events_from_annotations": [[438, "mne-events-from-annotations"]], "Examples using mne.events_from_annotations": [[438, "examples-using-mne-events-from-annotations"]], "mne.export.export_epochs": [[439, "mne-export-export-epochs"]], "mne.export.export_evokeds": [[440, "mne-export-export-evokeds"]], "mne.export.export_evokeds_mff": [[441, "mne-export-export-evokeds-mff"]], "mne.export.export_raw": [[442, "mne-export-export-raw"]], "mne.extract_label_time_course": [[443, "mne-extract-label-time-course"]], "Examples using mne.extract_label_time_course": [[443, "examples-using-mne-extract-label-time-course"]], "mne.filter.construct_iir_filter": [[444, "mne-filter-construct-iir-filter"]], "Examples using mne.filter.construct_iir_filter": [[444, "examples-using-mne-filter-construct-iir-filter"]], "mne.filter.create_filter": [[445, "mne-filter-create-filter"]], "Examples using mne.filter.create_filter": [[445, "examples-using-mne-filter-create-filter"]], "mne.filter.estimate_ringing_samples": [[446, "mne-filter-estimate-ringing-samples"]], "mne.filter.filter_data": [[447, "mne-filter-filter-data"]], "Examples using mne.filter.filter_data": [[447, "examples-using-mne-filter-filter-data"]], "mne.filter.notch_filter": [[448, "mne-filter-notch-filter"]], "mne.filter.resample": [[449, "mne-filter-resample"]], "Examples using mne.filter.resample": [[449, "examples-using-mne-filter-resample"]], "mne.find_events": [[450, "mne-find-events"]], "Examples using mne.find_events": [[450, "examples-using-mne-find-events"]], "mne.find_stim_steps": [[451, "mne-find-stim-steps"]], "mne.fit_dipole": [[452, "mne-fit-dipole"]], "Examples using mne.fit_dipole": [[452, "examples-using-mne-fit-dipole"]], "mne.forward.compute_depth_prior": [[453, "mne-forward-compute-depth-prior"]], "mne.forward.compute_orient_prior": [[454, "mne-forward-compute-orient-prior"]], "mne.forward.restrict_forward_to_label": [[455, "mne-forward-restrict-forward-to-label"]], "mne.forward.restrict_forward_to_stc": [[456, "mne-forward-restrict-forward-to-stc"]], "mne.get_config": [[457, "mne-get-config"]], "Examples using mne.get_config": [[457, "examples-using-mne-get-config"]], "mne.get_config_path": [[458, "mne-get-config-path"]], "Examples using mne.get_config_path": [[458, "examples-using-mne-get-config-path"]], "mne.get_head_surf": [[459, "mne-get-head-surf"]], "mne.get_meg_helmet_surf": [[460, "mne-get-meg-helmet-surf"]], "mne.get_montage_volume_labels": [[461, "mne-get-montage-volume-labels"]], "Examples using mne.get_montage_volume_labels": [[461, "examples-using-mne-get-montage-volume-labels"]], "mne.get_volume_labels_from_aseg": [[462, "mne-get-volume-labels-from-aseg"]], "Examples using mne.get_volume_labels_from_aseg": [[462, "examples-using-mne-get-volume-labels-from-aseg"]], "mne.get_volume_labels_from_src": [[463, "mne-get-volume-labels-from-src"]], "mne.grade_to_tris": [[464, "mne-grade-to-tris"]], "mne.grade_to_vertices": [[465, "mne-grade-to-vertices"]], "mne.grand_average": [[466, "mne-grand-average"]], "Examples using mne.grand_average": [[466, "examples-using-mne-grand-average"]], "mne.grow_labels": [[467, "mne-grow-labels"]], "mne.gui.coregistration": [[468, "mne-gui-coregistration"]], "Examples using mne.gui.coregistration": [[468, "examples-using-mne-gui-coregistration"]], "mne.gui.locate_ieeg": [[469, "mne-gui-locate-ieeg"]], "Examples using mne.gui.locate_ieeg": [[469, "examples-using-mne-gui-locate-ieeg"]], "mne.head_to_mni": [[470, "mne-head-to-mni"]], "mne.head_to_mri": [[471, "mne-head-to-mri"]], "mne.inverse_sparse.gamma_map": [[472, "mne-inverse-sparse-gamma-map"]], "Examples using mne.inverse_sparse.gamma_map": [[472, "examples-using-mne-inverse-sparse-gamma-map"]], "mne.inverse_sparse.make_stc_from_dipoles": [[473, "mne-inverse-sparse-make-stc-from-dipoles"]], "Examples using mne.inverse_sparse.make_stc_from_dipoles": [[473, "examples-using-mne-inverse-sparse-make-stc-from-dipoles"]], "mne.inverse_sparse.mixed_norm": [[474, "mne-inverse-sparse-mixed-norm"]], "Examples using mne.inverse_sparse.mixed_norm": [[474, "examples-using-mne-inverse-sparse-mixed-norm"]], "mne.inverse_sparse.tf_mixed_norm": [[475, "mne-inverse-sparse-tf-mixed-norm"]], "Examples using mne.inverse_sparse.tf_mixed_norm": [[475, "examples-using-mne-inverse-sparse-tf-mixed-norm"]], "mne.io.BaseRaw": [[476, "mne-io-baseraw"]], "mne.io.Raw": [[477, "mne-io-raw"]], "Examples using mne.io.Raw": [[477, "examples-using-mne-io-raw"]], "mne.io.RawArray": [[478, "mne-io-rawarray"]], "Examples using mne.io.RawArray": [[478, "examples-using-mne-io-rawarray"]], "mne.io.anonymize_info": [[479, "mne-io-anonymize-info"]], "mne.io.kit.read_mrk": [[480, "mne-io-kit-read-mrk"]], "mne.io.read_fiducials": [[481, "mne-io-read-fiducials"]], "mne.io.read_info": [[482, "mne-io-read-info"]], "Examples using mne.io.read_info": [[482, "examples-using-mne-io-read-info"]], "mne.io.read_raw": [[483, "mne-io-read-raw"]], "Examples using mne.io.read_raw": [[483, "examples-using-mne-io-read-raw"]], "mne.io.read_raw_artemis123": [[484, "mne-io-read-raw-artemis123"]], "Examples using mne.io.read_raw_artemis123": [[484, "examples-using-mne-io-read-raw-artemis123"]], "mne.io.read_raw_bdf": [[485, "mne-io-read-raw-bdf"]], "Examples using mne.io.read_raw_bdf": [[485, "examples-using-mne-io-read-raw-bdf"]], "mne.io.read_raw_boxy": [[486, "mne-io-read-raw-boxy"]], "Examples using mne.io.read_raw_boxy": [[486, "examples-using-mne-io-read-raw-boxy"]], "mne.io.read_raw_brainvision": [[487, "mne-io-read-raw-brainvision"]], "Examples using mne.io.read_raw_brainvision": [[487, "examples-using-mne-io-read-raw-brainvision"]], "mne.io.read_raw_bti": [[488, "mne-io-read-raw-bti"]], "Examples using mne.io.read_raw_bti": [[488, "examples-using-mne-io-read-raw-bti"]], "mne.io.read_raw_cnt": [[489, "mne-io-read-raw-cnt"]], "Examples using mne.io.read_raw_cnt": [[489, "examples-using-mne-io-read-raw-cnt"]], "mne.io.read_raw_ctf": [[490, "mne-io-read-raw-ctf"]], "Examples using mne.io.read_raw_ctf": [[490, "examples-using-mne-io-read-raw-ctf"]], "mne.io.read_raw_curry": [[491, "mne-io-read-raw-curry"]], "mne.io.read_raw_edf": [[492, "mne-io-read-raw-edf"]], "Examples using mne.io.read_raw_edf": [[492, "examples-using-mne-io-read-raw-edf"]], "mne.io.read_raw_eeglab": [[493, "mne-io-read-raw-eeglab"]], "Examples using mne.io.read_raw_eeglab": [[493, "examples-using-mne-io-read-raw-eeglab"]], "mne.io.read_raw_egi": [[494, "mne-io-read-raw-egi"]], "Examples using mne.io.read_raw_egi": [[494, "examples-using-mne-io-read-raw-egi"]], "mne.io.read_raw_eximia": [[495, "mne-io-read-raw-eximia"]], "Examples using mne.io.read_raw_eximia": [[495, "examples-using-mne-io-read-raw-eximia"]], "mne.io.read_raw_fieldtrip": [[496, "mne-io-read-raw-fieldtrip"]], "Examples using mne.io.read_raw_fieldtrip": [[496, "examples-using-mne-io-read-raw-fieldtrip"]], "mne.io.read_raw_fif": [[497, "mne-io-read-raw-fif"]], "Examples using mne.io.read_raw_fif": [[497, "examples-using-mne-io-read-raw-fif"]], "mne.io.read_raw_fil": [[498, "mne-io-read-raw-fil"]], "Examples using mne.io.read_raw_fil": [[498, "examples-using-mne-io-read-raw-fil"]], "mne.io.read_raw_gdf": [[499, "mne-io-read-raw-gdf"]], "Examples using mne.io.read_raw_gdf": [[499, "examples-using-mne-io-read-raw-gdf"]], "mne.io.read_raw_hitachi": [[500, "mne-io-read-raw-hitachi"]], "Examples using mne.io.read_raw_hitachi": [[500, "examples-using-mne-io-read-raw-hitachi"]], "mne.io.read_raw_kit": [[501, "mne-io-read-raw-kit"]], "Examples using mne.io.read_raw_kit": [[501, "examples-using-mne-io-read-raw-kit"]], "mne.io.read_raw_nedf": [[502, "mne-io-read-raw-nedf"]], "mne.io.read_raw_nicolet": [[503, "mne-io-read-raw-nicolet"]], "Examples using mne.io.read_raw_nicolet": [[503, "examples-using-mne-io-read-raw-nicolet"]], "mne.io.read_raw_nihon": [[504, "mne-io-read-raw-nihon"]], "Examples using mne.io.read_raw_nihon": [[504, "examples-using-mne-io-read-raw-nihon"]], "mne.io.read_raw_nirx": [[505, "mne-io-read-raw-nirx"]], "Examples using mne.io.read_raw_nirx": [[505, "examples-using-mne-io-read-raw-nirx"]], "mne.io.read_raw_persyst": [[506, "mne-io-read-raw-persyst"]], "Examples using mne.io.read_raw_persyst": [[506, "examples-using-mne-io-read-raw-persyst"]], "mne.io.read_raw_snirf": [[507, "mne-io-read-raw-snirf"]], "Examples using mne.io.read_raw_snirf": [[507, "examples-using-mne-io-read-raw-snirf"]], "mne.io.show_fiff": [[508, "mne-io-show-fiff"]], "mne.io.write_fiducials": [[509, "mne-io-write-fiducials"]], "mne.label.select_sources": [[510, "mne-label-select-sources"]], "Examples using mne.label.select_sources": [[510, "examples-using-mne-label-select-sources"]], "mne.label_sign_flip": [[511, "mne-label-sign-flip"]], "Examples using mne.label_sign_flip": [[511, "examples-using-mne-label-sign-flip"]], "mne.labels_to_stc": [[512, "mne-labels-to-stc"]], "Examples using mne.labels_to_stc": [[512, "examples-using-mne-labels-to-stc"]], "mne.make_ad_hoc_cov": [[513, "mne-make-ad-hoc-cov"]], "Examples using mne.make_ad_hoc_cov": [[513, "examples-using-mne-make-ad-hoc-cov"]], "mne.make_bem_model": [[514, "mne-make-bem-model"]], "Examples using mne.make_bem_model": [[514, "examples-using-mne-make-bem-model"]], "mne.make_bem_solution": [[515, "mne-make-bem-solution"]], "Examples using mne.make_bem_solution": [[515, "examples-using-mne-make-bem-solution"]], "mne.make_field_map": [[516, "mne-make-field-map"]], "Examples using mne.make_field_map": [[516, "examples-using-mne-make-field-map"]], "mne.make_fixed_length_epochs": [[517, "mne-make-fixed-length-epochs"]], "Examples using mne.make_fixed_length_epochs": [[517, "examples-using-mne-make-fixed-length-epochs"]], "mne.make_fixed_length_events": [[518, "mne-make-fixed-length-events"]], "Examples using mne.make_fixed_length_events": [[518, "examples-using-mne-make-fixed-length-events"]], "mne.make_forward_dipole": [[519, "mne-make-forward-dipole"]], "Examples using mne.make_forward_dipole": [[519, "examples-using-mne-make-forward-dipole"]], "mne.make_forward_solution": [[520, "mne-make-forward-solution"]], "Examples using mne.make_forward_solution": [[520, "examples-using-mne-make-forward-solution"]], "mne.make_sphere_model": [[521, "mne-make-sphere-model"]], "Examples using mne.make_sphere_model": [[521, "examples-using-mne-make-sphere-model"]], "mne.merge_events": [[522, "mne-merge-events"]], "Examples using mne.merge_events": [[522, "examples-using-mne-merge-events"]], "mne.minimum_norm.InverseOperator": [[523, "mne-minimum-norm-inverseoperator"]], "Examples using mne.minimum_norm.InverseOperator": [[523, "examples-using-mne-minimum-norm-inverseoperator"]], "mne.minimum_norm.apply_inverse": [[524, "mne-minimum-norm-apply-inverse"]], "Examples using mne.minimum_norm.apply_inverse": [[524, "examples-using-mne-minimum-norm-apply-inverse"]], "mne.minimum_norm.apply_inverse_cov": [[525, "mne-minimum-norm-apply-inverse-cov"]], "Examples using mne.minimum_norm.apply_inverse_cov": [[525, "examples-using-mne-minimum-norm-apply-inverse-cov"]], "mne.minimum_norm.apply_inverse_epochs": [[526, "mne-minimum-norm-apply-inverse-epochs"]], "Examples using mne.minimum_norm.apply_inverse_epochs": [[526, "examples-using-mne-minimum-norm-apply-inverse-epochs"]], "mne.minimum_norm.apply_inverse_raw": [[527, "mne-minimum-norm-apply-inverse-raw"]], "Examples using mne.minimum_norm.apply_inverse_raw": [[527, "examples-using-mne-minimum-norm-apply-inverse-raw"]], "mne.minimum_norm.apply_inverse_tfr_epochs": [[528, "mne-minimum-norm-apply-inverse-tfr-epochs"]], "mne.minimum_norm.compute_rank_inverse": [[529, "mne-minimum-norm-compute-rank-inverse"]], "mne.minimum_norm.compute_source_psd": [[530, "mne-minimum-norm-compute-source-psd"]], "Examples using mne.minimum_norm.compute_source_psd": [[530, "examples-using-mne-minimum-norm-compute-source-psd"]], "mne.minimum_norm.compute_source_psd_epochs": [[531, "mne-minimum-norm-compute-source-psd-epochs"]], "Examples using mne.minimum_norm.compute_source_psd_epochs": [[531, "examples-using-mne-minimum-norm-compute-source-psd-epochs"]], "mne.minimum_norm.estimate_snr": [[532, "mne-minimum-norm-estimate-snr"]], "mne.minimum_norm.get_cross_talk": [[533, "mne-minimum-norm-get-cross-talk"]], "Examples using mne.minimum_norm.get_cross_talk": [[533, "examples-using-mne-minimum-norm-get-cross-talk"]], "mne.minimum_norm.get_point_spread": [[534, "mne-minimum-norm-get-point-spread"]], "Examples using mne.minimum_norm.get_point_spread": [[534, "examples-using-mne-minimum-norm-get-point-spread"]], "mne.minimum_norm.make_inverse_operator": [[535, "mne-minimum-norm-make-inverse-operator"]], "Examples using mne.minimum_norm.make_inverse_operator": [[535, "examples-using-mne-minimum-norm-make-inverse-operator"]], "mne.minimum_norm.make_inverse_resolution_matrix": [[536, "mne-minimum-norm-make-inverse-resolution-matrix"]], "Examples using mne.minimum_norm.make_inverse_resolution_matrix": [[536, "examples-using-mne-minimum-norm-make-inverse-resolution-matrix"]], "mne.minimum_norm.prepare_inverse_operator": [[537, "mne-minimum-norm-prepare-inverse-operator"]], "mne.minimum_norm.read_inverse_operator": [[538, "mne-minimum-norm-read-inverse-operator"]], "Examples using mne.minimum_norm.read_inverse_operator": [[538, "examples-using-mne-minimum-norm-read-inverse-operator"]], "mne.minimum_norm.resolution_metrics": [[539, "mne-minimum-norm-resolution-metrics"]], "Examples using mne.minimum_norm.resolution_metrics": [[539, "examples-using-mne-minimum-norm-resolution-metrics"]], "mne.minimum_norm.source_band_induced_power": [[540, "mne-minimum-norm-source-band-induced-power"]], "Examples using mne.minimum_norm.source_band_induced_power": [[540, "examples-using-mne-minimum-norm-source-band-induced-power"]], "mne.minimum_norm.source_induced_power": [[541, "mne-minimum-norm-source-induced-power"]], "Examples using mne.minimum_norm.source_induced_power": [[541, "examples-using-mne-minimum-norm-source-induced-power"]], "mne.minimum_norm.write_inverse_operator": [[542, "mne-minimum-norm-write-inverse-operator"]], "mne.morph_labels": [[543, "mne-morph-labels"]], "mne.morph_source_spaces": [[544, "mne-morph-source-spaces"]], "Examples using mne.morph_source_spaces": [[544, "examples-using-mne-morph-source-spaces"]], "mne.open_docs": [[545, "mne-open-docs"]], "mne.open_report": [[546, "mne-open-report"]], "Examples using mne.open_report": [[546, "examples-using-mne-open-report"]], "mne.parse_config": [[547, "mne-parse-config"]], "mne.pick_channels": [[548, "mne-pick-channels"]], "Examples using mne.pick_channels": [[548, "examples-using-mne-pick-channels"]], "mne.pick_channels_cov": [[549, "mne-pick-channels-cov"]], "mne.pick_channels_forward": [[550, "mne-pick-channels-forward"]], "mne.pick_channels_regexp": [[551, "mne-pick-channels-regexp"]], "Examples using mne.pick_channels_regexp": [[551, "examples-using-mne-pick-channels-regexp"]], "mne.pick_events": [[552, "mne-pick-events"]], "Examples using mne.pick_events": [[552, "examples-using-mne-pick-events"]], "mne.pick_info": [[553, "mne-pick-info"]], "Examples using mne.pick_info": [[553, "examples-using-mne-pick-info"]], "mne.pick_types": [[554, "mne-pick-types"]], "Examples using mne.pick_types": [[554, "examples-using-mne-pick-types"]], "mne.pick_types_forward": [[555, "mne-pick-types-forward"]], "Examples using mne.pick_types_forward": [[555, "examples-using-mne-pick-types-forward"]], "mne.preprocessing.EOGRegression": [[556, "mne-preprocessing-eogregression"]], "Examples using mne.preprocessing.EOGRegression": [[556, "examples-using-mne-preprocessing-eogregression"]], "mne.preprocessing.ICA": [[557, "mne-preprocessing-ica"]], "Examples using mne.preprocessing.ICA": [[557, "examples-using-mne-preprocessing-ica"]], "mne.preprocessing.Xdawn": [[558, "mne-preprocessing-xdawn"]], "Examples using mne.preprocessing.Xdawn": [[558, "examples-using-mne-preprocessing-xdawn"]], "mne.preprocessing.annotate_amplitude": [[559, "mne-preprocessing-annotate-amplitude"]], "mne.preprocessing.annotate_break": [[560, "mne-preprocessing-annotate-break"]], "Examples using mne.preprocessing.annotate_break": [[560, "examples-using-mne-preprocessing-annotate-break"]], "mne.preprocessing.annotate_movement": [[561, "mne-preprocessing-annotate-movement"]], "Examples using mne.preprocessing.annotate_movement": [[561, "examples-using-mne-preprocessing-annotate-movement"]], "mne.preprocessing.annotate_muscle_zscore": [[562, "mne-preprocessing-annotate-muscle-zscore"]], "Examples using mne.preprocessing.annotate_muscle_zscore": [[562, "examples-using-mne-preprocessing-annotate-muscle-zscore"]], "mne.preprocessing.annotate_nan": [[563, "mne-preprocessing-annotate-nan"]], "mne.preprocessing.compute_average_dev_head_t": [[564, "mne-preprocessing-compute-average-dev-head-t"]], "Examples using mne.preprocessing.compute_average_dev_head_t": [[564, "examples-using-mne-preprocessing-compute-average-dev-head-t"]], "mne.preprocessing.compute_bridged_electrodes": [[565, "mne-preprocessing-compute-bridged-electrodes"]], "Examples using mne.preprocessing.compute_bridged_electrodes": [[565, "examples-using-mne-preprocessing-compute-bridged-electrodes"]], "mne.preprocessing.compute_current_source_density": [[566, "mne-preprocessing-compute-current-source-density"]], "Examples using mne.preprocessing.compute_current_source_density": [[566, "examples-using-mne-preprocessing-compute-current-source-density"]], "mne.preprocessing.compute_fine_calibration": [[567, "mne-preprocessing-compute-fine-calibration"]], "mne.preprocessing.compute_maxwell_basis": [[568, "mne-preprocessing-compute-maxwell-basis"]], "mne.preprocessing.compute_proj_ecg": [[569, "mne-preprocessing-compute-proj-ecg"]], "Examples using mne.preprocessing.compute_proj_ecg": [[569, "examples-using-mne-preprocessing-compute-proj-ecg"]], "mne.preprocessing.compute_proj_eog": [[570, "mne-preprocessing-compute-proj-eog"]], "Examples using mne.preprocessing.compute_proj_eog": [[570, "examples-using-mne-preprocessing-compute-proj-eog"]], "mne.preprocessing.corrmap": [[571, "mne-preprocessing-corrmap"]], "Examples using mne.preprocessing.corrmap": [[571, "examples-using-mne-preprocessing-corrmap"]], "mne.preprocessing.cortical_signal_suppression": [[572, "mne-preprocessing-cortical-signal-suppression"]], "Examples using mne.preprocessing.cortical_signal_suppression": [[572, "examples-using-mne-preprocessing-cortical-signal-suppression"]], "mne.preprocessing.create_ecg_epochs": [[573, "mne-preprocessing-create-ecg-epochs"]], "Examples using mne.preprocessing.create_ecg_epochs": [[573, "examples-using-mne-preprocessing-create-ecg-epochs"]], "mne.preprocessing.create_eog_epochs": [[574, "mne-preprocessing-create-eog-epochs"]], "Examples using mne.preprocessing.create_eog_epochs": [[574, "examples-using-mne-preprocessing-create-eog-epochs"]], "mne.preprocessing.equalize_bads": [[575, "mne-preprocessing-equalize-bads"]], "mne.preprocessing.find_bad_channels_maxwell": [[576, "mne-preprocessing-find-bad-channels-maxwell"]], "Examples using mne.preprocessing.find_bad_channels_maxwell": [[576, "examples-using-mne-preprocessing-find-bad-channels-maxwell"]], "mne.preprocessing.find_ecg_events": [[577, "mne-preprocessing-find-ecg-events"]], "Examples using mne.preprocessing.find_ecg_events": [[577, "examples-using-mne-preprocessing-find-ecg-events"]], "mne.preprocessing.find_eog_events": [[578, "mne-preprocessing-find-eog-events"]], "Examples using mne.preprocessing.find_eog_events": [[578, "examples-using-mne-preprocessing-find-eog-events"]], "mne.preprocessing.fix_stim_artifact": [[579, "mne-preprocessing-fix-stim-artifact"]], "Examples using mne.preprocessing.fix_stim_artifact": [[579, "examples-using-mne-preprocessing-fix-stim-artifact"]], "mne.preprocessing.ica_find_ecg_events": [[580, "mne-preprocessing-ica-find-ecg-events"]], "mne.preprocessing.ica_find_eog_events": [[581, "mne-preprocessing-ica-find-eog-events"]], "mne.preprocessing.ieeg.project_sensors_onto_brain": [[582, "mne-preprocessing-ieeg-project-sensors-onto-brain"]], "Examples using mne.preprocessing.ieeg.project_sensors_onto_brain": [[582, "examples-using-mne-preprocessing-ieeg-project-sensors-onto-brain"]], "mne.preprocessing.infomax": [[583, "mne-preprocessing-infomax"]], "mne.preprocessing.interpolate_bridged_electrodes": [[584, "mne-preprocessing-interpolate-bridged-electrodes"]], "Examples using mne.preprocessing.interpolate_bridged_electrodes": [[584, "examples-using-mne-preprocessing-interpolate-bridged-electrodes"]], "mne.preprocessing.maxwell_filter": [[585, "mne-preprocessing-maxwell-filter"]], "Examples using mne.preprocessing.maxwell_filter": [[585, "examples-using-mne-preprocessing-maxwell-filter"]], "mne.preprocessing.maxwell_filter_prepare_emptyroom": [[586, "mne-preprocessing-maxwell-filter-prepare-emptyroom"]], "mne.preprocessing.nirs.beer_lambert_law": [[587, "mne-preprocessing-nirs-beer-lambert-law"]], "Examples using mne.preprocessing.nirs.beer_lambert_law": [[587, "examples-using-mne-preprocessing-nirs-beer-lambert-law"]], "mne.preprocessing.nirs.optical_density": [[588, "mne-preprocessing-nirs-optical-density"]], "Examples using mne.preprocessing.nirs.optical_density": [[588, "examples-using-mne-preprocessing-nirs-optical-density"]], "mne.preprocessing.nirs.scalp_coupling_index": [[589, "mne-preprocessing-nirs-scalp-coupling-index"]], "Examples using mne.preprocessing.nirs.scalp_coupling_index": [[589, "examples-using-mne-preprocessing-nirs-scalp-coupling-index"]], "mne.preprocessing.nirs.short_channels": [[590, "mne-preprocessing-nirs-short-channels"]], "mne.preprocessing.nirs.source_detector_distances": [[591, "mne-preprocessing-nirs-source-detector-distances"]], "Examples using mne.preprocessing.nirs.source_detector_distances": [[591, "examples-using-mne-preprocessing-nirs-source-detector-distances"]], "mne.preprocessing.nirs.temporal_derivative_distribution_repair": [[592, "mne-preprocessing-nirs-temporal-derivative-distribution-repair"]], "Examples using mne.preprocessing.nirs.temporal_derivative_distribution_repair": [[592, "examples-using-mne-preprocessing-nirs-temporal-derivative-distribution-repair"]], "mne.preprocessing.oversampled_temporal_projection": [[593, "mne-preprocessing-oversampled-temporal-projection"]], "Examples using mne.preprocessing.oversampled_temporal_projection": [[593, "examples-using-mne-preprocessing-oversampled-temporal-projection"]], "mne.preprocessing.peak_finder": [[594, "mne-preprocessing-peak-finder"]], "mne.preprocessing.read_eog_regression": [[595, "mne-preprocessing-read-eog-regression"]], "mne.preprocessing.read_fine_calibration": [[596, "mne-preprocessing-read-fine-calibration"]], "mne.preprocessing.read_ica": [[597, "mne-preprocessing-read-ica"]], "mne.preprocessing.read_ica_eeglab": [[598, "mne-preprocessing-read-ica-eeglab"]], "mne.preprocessing.realign_raw": [[599, "mne-preprocessing-realign-raw"]], "mne.preprocessing.regress_artifact": [[600, "mne-preprocessing-regress-artifact"]], "mne.preprocessing.write_fine_calibration": [[601, "mne-preprocessing-write-fine-calibration"]], "mne.random_parcellation": [[602, "mne-random-parcellation"]], "mne.read_annotations": [[603, "mne-read-annotations"]], "Examples using mne.read_annotations": [[603, "examples-using-mne-read-annotations"]], "mne.read_bem_solution": [[604, "mne-read-bem-solution"]], "Examples using mne.read_bem_solution": [[604, "examples-using-mne-read-bem-solution"]], "mne.read_bem_surfaces": [[605, "mne-read-bem-surfaces"]], "Examples using mne.read_bem_surfaces": [[605, "examples-using-mne-read-bem-surfaces"]], "mne.read_cov": [[606, "mne-read-cov"]], "Examples using mne.read_cov": [[606, "examples-using-mne-read-cov"]], "mne.read_dipole": [[607, "mne-read-dipole"]], "Examples using mne.read_dipole": [[607, "examples-using-mne-read-dipole"]], "mne.read_epochs": [[608, "mne-read-epochs"]], "Examples using mne.read_epochs": [[608, "examples-using-mne-read-epochs"]], "mne.read_epochs_eeglab": [[609, "mne-read-epochs-eeglab"]], "Examples using mne.read_epochs_eeglab": [[609, "examples-using-mne-read-epochs-eeglab"]], "mne.read_epochs_fieldtrip": [[610, "mne-read-epochs-fieldtrip"]], "Examples using mne.read_epochs_fieldtrip": [[610, "examples-using-mne-read-epochs-fieldtrip"]], "mne.read_epochs_kit": [[611, "mne-read-epochs-kit"]], "Examples using mne.read_epochs_kit": [[611, "examples-using-mne-read-epochs-kit"]], "mne.read_events": [[612, "mne-read-events"]], "Examples using mne.read_events": [[612, "examples-using-mne-read-events"]], "mne.read_evoked_besa": [[613, "mne-read-evoked-besa"]], "mne.read_evoked_fieldtrip": [[614, "mne-read-evoked-fieldtrip"]], "Examples using mne.read_evoked_fieldtrip": [[614, "examples-using-mne-read-evoked-fieldtrip"]], "mne.read_evokeds": [[615, "mne-read-evokeds"]], "Examples using mne.read_evokeds": [[615, "examples-using-mne-read-evokeds"]], "mne.read_evokeds_mff": [[616, "mne-read-evokeds-mff"]], "mne.read_forward_solution": [[617, "mne-read-forward-solution"]], "Examples using mne.read_forward_solution": [[617, "examples-using-mne-read-forward-solution"]], "mne.read_freesurfer_lut": [[618, "mne-read-freesurfer-lut"]], "mne.read_label": [[619, "mne-read-label"]], "Examples using mne.read_label": [[619, "examples-using-mne-read-label"]], "mne.read_labels_from_annot": [[620, "mne-read-labels-from-annot"]], "Examples using mne.read_labels_from_annot": [[620, "examples-using-mne-read-labels-from-annot"]], "mne.read_lta": [[621, "mne-read-lta"]], "mne.read_morph_map": [[622, "mne-read-morph-map"]], "mne.read_proj": [[623, "mne-read-proj"]], "Examples using mne.read_proj": [[623, "examples-using-mne-read-proj"]], "mne.read_reject_parameters": [[624, "mne-read-reject-parameters"]], "mne.read_source_estimate": [[625, "mne-read-source-estimate"]], "Examples using mne.read_source_estimate": [[625, "examples-using-mne-read-source-estimate"]], "mne.read_source_morph": [[626, "mne-read-source-morph"]], "Examples using mne.read_source_morph": [[626, "examples-using-mne-read-source-morph"]], "mne.read_source_spaces": [[627, "mne-read-source-spaces"]], "Examples using mne.read_source_spaces": [[627, "examples-using-mne-read-source-spaces"]], "mne.read_surface": [[628, "mne-read-surface"]], "Examples using mne.read_surface": [[628, "examples-using-mne-read-surface"]], "mne.read_talxfm": [[629, "mne-read-talxfm"]], "Examples using mne.read_talxfm": [[629, "examples-using-mne-read-talxfm"]], "mne.read_trans": [[630, "mne-read-trans"]], "Examples using mne.read_trans": [[630, "examples-using-mne-read-trans"]], "mne.read_tri": [[631, "mne-read-tri"]], "mne.read_vectorview_selection": [[632, "mne-read-vectorview-selection"]], "Examples using mne.read_vectorview_selection": [[632, "examples-using-mne-read-vectorview-selection"]], "mne.rename_channels": [[633, "mne-rename-channels"]], "mne.scale_bem": [[634, "mne-scale-bem"]], "mne.scale_labels": [[635, "mne-scale-labels"]], "mne.scale_mri": [[636, "mne-scale-mri"]], "Examples using mne.scale_mri": [[636, "examples-using-mne-scale-mri"]], "mne.scale_source_space": [[637, "mne-scale-source-space"]], "mne.sensitivity_map": [[638, "mne-sensitivity-map"]], "Examples using mne.sensitivity_map": [[638, "examples-using-mne-sensitivity-map"]], "mne.set_bipolar_reference": [[639, "mne-set-bipolar-reference"]], "Examples using mne.set_bipolar_reference": [[639, "examples-using-mne-set-bipolar-reference"]], "mne.set_cache_dir": [[640, "mne-set-cache-dir"]], "mne.set_config": [[641, "mne-set-config"]], "Examples using mne.set_config": [[641, "examples-using-mne-set-config"]], "mne.set_eeg_reference": [[642, "mne-set-eeg-reference"]], "Examples using mne.set_eeg_reference": [[642, "examples-using-mne-set-eeg-reference"]], "mne.set_log_file": [[643, "mne-set-log-file"]], "mne.set_log_level": [[644, "mne-set-log-level"]], "Examples using mne.set_log_level": [[644, "examples-using-mne-set-log-level"]], "mne.setup_source_space": [[645, "mne-setup-source-space"]], "Examples using mne.setup_source_space": [[645, "examples-using-mne-setup-source-space"]], "mne.setup_volume_source_space": [[646, "mne-setup-volume-source-space"]], "Examples using mne.setup_volume_source_space": [[646, "examples-using-mne-setup-volume-source-space"]], "mne.simulation.SourceSimulator": [[647, "mne-simulation-sourcesimulator"]], "Examples using mne.simulation.SourceSimulator": [[647, "examples-using-mne-simulation-sourcesimulator"]], "mne.simulation.add_chpi": [[648, "mne-simulation-add-chpi"]], "mne.simulation.add_ecg": [[649, "mne-simulation-add-ecg"]], "Examples using mne.simulation.add_ecg": [[649, "examples-using-mne-simulation-add-ecg"]], "mne.simulation.add_eog": [[650, "mne-simulation-add-eog"]], "Examples using mne.simulation.add_eog": [[650, "examples-using-mne-simulation-add-eog"]], "mne.simulation.add_noise": [[651, "mne-simulation-add-noise"]], "Examples using mne.simulation.add_noise": [[651, "examples-using-mne-simulation-add-noise"]], "mne.simulation.metrics.cosine_score": [[652, "mne-simulation-metrics-cosine-score"]], "Examples using mne.simulation.metrics.cosine_score": [[652, "examples-using-mne-simulation-metrics-cosine-score"]], "mne.simulation.metrics.f1_score": [[653, "mne-simulation-metrics-f1-score"]], "Examples using mne.simulation.metrics.f1_score": [[653, "examples-using-mne-simulation-metrics-f1-score"]], "mne.simulation.metrics.peak_position_error": [[654, "mne-simulation-metrics-peak-position-error"]], "Examples using mne.simulation.metrics.peak_position_error": [[654, "examples-using-mne-simulation-metrics-peak-position-error"]], "mne.simulation.metrics.precision_score": [[655, "mne-simulation-metrics-precision-score"]], "Examples using mne.simulation.metrics.precision_score": [[655, "examples-using-mne-simulation-metrics-precision-score"]], "mne.simulation.metrics.recall_score": [[656, "mne-simulation-metrics-recall-score"]], "Examples using mne.simulation.metrics.recall_score": [[656, "examples-using-mne-simulation-metrics-recall-score"]], "mne.simulation.metrics.region_localization_error": [[657, "mne-simulation-metrics-region-localization-error"]], "Examples using mne.simulation.metrics.region_localization_error": [[657, "examples-using-mne-simulation-metrics-region-localization-error"]], "mne.simulation.metrics.roc_auc_score": [[658, "mne-simulation-metrics-roc-auc-score"]], "mne.simulation.metrics.spatial_deviation_error": [[659, "mne-simulation-metrics-spatial-deviation-error"]], "Examples using mne.simulation.metrics.spatial_deviation_error": [[659, "examples-using-mne-simulation-metrics-spatial-deviation-error"]], "mne.simulation.select_source_in_label": [[660, "mne-simulation-select-source-in-label"]], "mne.simulation.simulate_evoked": [[661, "mne-simulation-simulate-evoked"]], "Examples using mne.simulation.simulate_evoked": [[661, "examples-using-mne-simulation-simulate-evoked"]], "mne.simulation.simulate_raw": [[662, "mne-simulation-simulate-raw"]], "Data alignment and stim channel encoding": [[662, "id3"]], "Examples using mne.simulation.simulate_raw": [[662, "examples-using-mne-simulation-simulate-raw"]], "mne.simulation.simulate_sparse_stc": [[663, "mne-simulation-simulate-sparse-stc"]], "Examples using mne.simulation.simulate_sparse_stc": [[663, "examples-using-mne-simulation-simulate-sparse-stc"]], "mne.simulation.simulate_stc": [[664, "mne-simulation-simulate-stc"]], "Examples using mne.simulation.simulate_stc": [[664, "examples-using-mne-simulation-simulate-stc"]], "mne.source_space.compute_distance_to_sensors": [[665, "mne-source-space-compute-distance-to-sensors"]], "Examples using mne.source_space.compute_distance_to_sensors": [[665, "examples-using-mne-source-space-compute-distance-to-sensors"]], "mne.source_space.get_decimated_surfaces": [[666, "mne-source-space-get-decimated-surfaces"]], "mne.spatial_dist_adjacency": [[667, "mne-spatial-dist-adjacency"]], "mne.spatial_inter_hemi_adjacency": [[668, "mne-spatial-inter-hemi-adjacency"]], "mne.spatial_src_adjacency": [[669, "mne-spatial-src-adjacency"]], "Examples using mne.spatial_src_adjacency": [[669, "examples-using-mne-spatial-src-adjacency"]], "mne.spatial_tris_adjacency": [[670, "mne-spatial-tris-adjacency"]], "mne.spatio_temporal_dist_adjacency": [[671, "mne-spatio-temporal-dist-adjacency"]], "mne.spatio_temporal_src_adjacency": [[672, "mne-spatio-temporal-src-adjacency"]], "mne.spatio_temporal_tris_adjacency": [[673, "mne-spatio-temporal-tris-adjacency"]], "mne.split_label": [[674, "mne-split-label"]], "mne.stats.bonferroni_correction": [[675, "mne-stats-bonferroni-correction"]], "Examples using mne.stats.bonferroni_correction": [[675, "examples-using-mne-stats-bonferroni-correction"]], "mne.stats.bootstrap_confidence_interval": [[676, "mne-stats-bootstrap-confidence-interval"]], "Examples using mne.stats.bootstrap_confidence_interval": [[676, "examples-using-mne-stats-bootstrap-confidence-interval"]], "mne.stats.combine_adjacency": [[677, "mne-stats-combine-adjacency"]], "Examples using mne.stats.combine_adjacency": [[677, "examples-using-mne-stats-combine-adjacency"]], "mne.stats.f_mway_rm": [[678, "mne-stats-f-mway-rm"]], "Examples using mne.stats.f_mway_rm": [[678, "examples-using-mne-stats-f-mway-rm"]], "mne.stats.f_oneway": [[679, "mne-stats-f-oneway"]], "Examples using mne.stats.f_oneway": [[679, "examples-using-mne-stats-f-oneway"]], "mne.stats.f_threshold_mway_rm": [[680, "mne-stats-f-threshold-mway-rm"]], "Examples using mne.stats.f_threshold_mway_rm": [[680, "examples-using-mne-stats-f-threshold-mway-rm"]], "mne.stats.fdr_correction": [[681, "mne-stats-fdr-correction"]], "Examples using mne.stats.fdr_correction": [[681, "examples-using-mne-stats-fdr-correction"]], "mne.stats.linear_regression": [[682, "mne-stats-linear-regression"]], "Examples using mne.stats.linear_regression": [[682, "examples-using-mne-stats-linear-regression"]], "mne.stats.linear_regression_raw": [[683, "mne-stats-linear-regression-raw"]], "Examples using mne.stats.linear_regression_raw": [[683, "examples-using-mne-stats-linear-regression-raw"]], "mne.stats.permutation_cluster_1samp_test": [[684, "mne-stats-permutation-cluster-1samp-test"]], "Examples using mne.stats.permutation_cluster_1samp_test": [[684, "examples-using-mne-stats-permutation-cluster-1samp-test"]], "mne.stats.permutation_cluster_test": [[685, "mne-stats-permutation-cluster-test"]], "Examples using mne.stats.permutation_cluster_test": [[685, "examples-using-mne-stats-permutation-cluster-test"]], "mne.stats.permutation_t_test": [[686, "mne-stats-permutation-t-test"]], "Examples using mne.stats.permutation_t_test": [[686, "examples-using-mne-stats-permutation-t-test"]], "mne.stats.spatio_temporal_cluster_1samp_test": [[687, "mne-stats-spatio-temporal-cluster-1samp-test"]], "Examples using mne.stats.spatio_temporal_cluster_1samp_test": [[687, "examples-using-mne-stats-spatio-temporal-cluster-1samp-test"]], "mne.stats.spatio_temporal_cluster_test": [[688, "mne-stats-spatio-temporal-cluster-test"]], "Examples using mne.stats.spatio_temporal_cluster_test": [[688, "examples-using-mne-stats-spatio-temporal-cluster-test"]], "mne.stats.summarize_clusters_stc": [[689, "mne-stats-summarize-clusters-stc"]], "Examples using mne.stats.summarize_clusters_stc": [[689, "examples-using-mne-stats-summarize-clusters-stc"]], "mne.stats.ttest_1samp_no_p": [[690, "mne-stats-ttest-1samp-no-p"]], "Examples using mne.stats.ttest_1samp_no_p": [[690, "examples-using-mne-stats-ttest-1samp-no-p"]], "mne.stats.ttest_ind_no_p": [[691, "mne-stats-ttest-ind-no-p"]], "mne.stc_near_sensors": [[692, "mne-stc-near-sensors"]], "Examples using mne.stc_near_sensors": [[692, "examples-using-mne-stc-near-sensors"]], "mne.stc_to_label": [[693, "mne-stc-to-label"]], "Examples using mne.stc_to_label": [[693, "examples-using-mne-stc-to-label"]], "mne.surface.complete_surface_info": [[694, "mne-surface-complete-surface-info"]], "mne.surface.read_curvature": [[695, "mne-surface-read-curvature"]], "Examples using mne.surface.read_curvature": [[695, "examples-using-mne-surface-read-curvature"]], "mne.sys_info": [[696, "mne-sys-info"]], "Examples using mne.sys_info": [[696, "examples-using-mne-sys-info"]], "mne.time_frequency.AverageTFR": [[697, "mne-time-frequency-averagetfr"]], "Examples using mne.time_frequency.AverageTFR": [[697, "examples-using-mne-time-frequency-averagetfr"]], "mne.time_frequency.CrossSpectralDensity": [[698, "mne-time-frequency-crossspectraldensity"]], "Examples using mne.time_frequency.CrossSpectralDensity": [[698, "examples-using-mne-time-frequency-crossspectraldensity"]], "mne.time_frequency.EpochsSpectrum": [[699, "mne-time-frequency-epochsspectrum"]], "Examples using mne.time_frequency.EpochsSpectrum": [[699, "examples-using-mne-time-frequency-epochsspectrum"]], "mne.time_frequency.EpochsTFR": [[700, "mne-time-frequency-epochstfr"]], "Examples using mne.time_frequency.EpochsTFR": [[700, "examples-using-mne-time-frequency-epochstfr"]], "mne.time_frequency.Spectrum": [[701, "mne-time-frequency-spectrum"]], "Examples using mne.time_frequency.Spectrum": [[701, "examples-using-mne-time-frequency-spectrum"]], "mne.time_frequency.csd_array_fourier": [[702, "mne-time-frequency-csd-array-fourier"]], "mne.time_frequency.csd_array_morlet": [[703, "mne-time-frequency-csd-array-morlet"]], "mne.time_frequency.csd_array_multitaper": [[704, "mne-time-frequency-csd-array-multitaper"]], "mne.time_frequency.csd_fourier": [[705, "mne-time-frequency-csd-fourier"]], "Examples using mne.time_frequency.csd_fourier": [[705, "examples-using-mne-time-frequency-csd-fourier"]], "mne.time_frequency.csd_morlet": [[706, "mne-time-frequency-csd-morlet"]], "Examples using mne.time_frequency.csd_morlet": [[706, "examples-using-mne-time-frequency-csd-morlet"]], "mne.time_frequency.csd_multitaper": [[707, "mne-time-frequency-csd-multitaper"]], "Examples using mne.time_frequency.csd_multitaper": [[707, "examples-using-mne-time-frequency-csd-multitaper"]], "mne.time_frequency.csd_tfr": [[708, "mne-time-frequency-csd-tfr"]], "Examples using mne.time_frequency.csd_tfr": [[708, "examples-using-mne-time-frequency-csd-tfr"]], "mne.time_frequency.dpss_windows": [[709, "mne-time-frequency-dpss-windows"]], "mne.time_frequency.fit_iir_model_raw": [[710, "mne-time-frequency-fit-iir-model-raw"]], "Examples using mne.time_frequency.fit_iir_model_raw": [[710, "examples-using-mne-time-frequency-fit-iir-model-raw"]], "mne.time_frequency.fwhm": [[711, "mne-time-frequency-fwhm"]], "mne.time_frequency.istft": [[712, "mne-time-frequency-istft"]], "mne.time_frequency.morlet": [[713, "mne-time-frequency-morlet"]], "Examples using mne.time_frequency.morlet": [[713, "examples-using-mne-time-frequency-morlet"]], "mne.time_frequency.pick_channels_csd": [[714, "mne-time-frequency-pick-channels-csd"]], "mne.time_frequency.psd_array_multitaper": [[715, "mne-time-frequency-psd-array-multitaper"]], "Examples using mne.time_frequency.psd_array_multitaper": [[715, "examples-using-mne-time-frequency-psd-array-multitaper"]], "mne.time_frequency.psd_array_welch": [[716, "mne-time-frequency-psd-array-welch"]], "Examples using mne.time_frequency.psd_array_welch": [[716, "examples-using-mne-time-frequency-psd-array-welch"]], "mne.time_frequency.read_csd": [[717, "mne-time-frequency-read-csd"]], "mne.time_frequency.read_spectrum": [[718, "mne-time-frequency-read-spectrum"]], "mne.time_frequency.read_tfrs": [[719, "mne-time-frequency-read-tfrs"]], "mne.time_frequency.stft": [[720, "mne-time-frequency-stft"]], "mne.time_frequency.stftfreq": [[721, "mne-time-frequency-stftfreq"]], "mne.time_frequency.tfr.cwt": [[722, "mne-time-frequency-tfr-cwt"]], "mne.time_frequency.tfr.morlet": [[723, "mne-time-frequency-tfr-morlet"]], "mne.time_frequency.tfr_array_morlet": [[724, "mne-time-frequency-tfr-array-morlet"]], "Examples using mne.time_frequency.tfr_array_morlet": [[724, "examples-using-mne-time-frequency-tfr-array-morlet"]], "mne.time_frequency.tfr_array_multitaper": [[725, "mne-time-frequency-tfr-array-multitaper"]], "mne.time_frequency.tfr_array_stockwell": [[726, "mne-time-frequency-tfr-array-stockwell"]], "mne.time_frequency.tfr_morlet": [[727, "mne-time-frequency-tfr-morlet"]], "Examples using mne.time_frequency.tfr_morlet": [[727, "examples-using-mne-time-frequency-tfr-morlet"]], "mne.time_frequency.tfr_multitaper": [[728, "mne-time-frequency-tfr-multitaper"]], "Examples using mne.time_frequency.tfr_multitaper": [[728, "examples-using-mne-time-frequency-tfr-multitaper"]], "mne.time_frequency.tfr_stockwell": [[729, "mne-time-frequency-tfr-stockwell"]], "Examples using mne.time_frequency.tfr_stockwell": [[729, "examples-using-mne-time-frequency-tfr-stockwell"]], "mne.time_frequency.write_tfrs": [[730, "mne-time-frequency-write-tfrs"]], "mne.transform_surface_to": [[731, "mne-transform-surface-to"]], "mne.transforms.Transform": [[732, "mne-transforms-transform"]], "mne.transforms.apply_volume_registration": [[733, "mne-transforms-apply-volume-registration"]], "Examples using mne.transforms.apply_volume_registration": [[733, "examples-using-mne-transforms-apply-volume-registration"]], "mne.transforms.apply_volume_registration_points": [[734, "mne-transforms-apply-volume-registration-points"]], "Examples using mne.transforms.apply_volume_registration_points": [[734, "examples-using-mne-transforms-apply-volume-registration-points"]], "mne.transforms.compute_volume_registration": [[735, "mne-transforms-compute-volume-registration"]], "Examples using mne.transforms.compute_volume_registration": [[735, "examples-using-mne-transforms-compute-volume-registration"]], "mne.transforms.quat_to_rot": [[736, "mne-transforms-quat-to-rot"]], "mne.transforms.read_ras_mni_t": [[737, "mne-transforms-read-ras-mni-t"]], "Examples using mne.transforms.read_ras_mni_t": [[737, "examples-using-mne-transforms-read-ras-mni-t"]], "mne.transforms.rot_to_quat": [[738, "mne-transforms-rot-to-quat"]], "mne.use_coil_def": [[739, "mne-use-coil-def"]], "Examples using mne.use_coil_def": [[739, "examples-using-mne-use-coil-def"]], "mne.use_log_level": [[740, "mne-use-log-level"]], "Examples using mne.use_log_level": [[740, "examples-using-mne-use-log-level"]], "mne.utils.deprecated": [[741, "mne-utils-deprecated"]], "mne.utils.warn": [[742, "mne-utils-warn"]], "mne.verbose": [[743, "mne-verbose"]], "mne.vertex_to_mni": [[744, "mne-vertex-to-mni"]], "Examples using mne.vertex_to_mni": [[744, "examples-using-mne-vertex-to-mni"]], "mne.viz.Brain": [[745, "mne-viz-brain"]], "Examples using mne.viz.Brain": [[745, "examples-using-mne-viz-brain"]], "mne.viz.ClickableImage": [[746, "mne-viz-clickableimage"]], "Examples using mne.viz.ClickableImage": [[746, "examples-using-mne-viz-clickableimage"]], "mne.viz.Figure3D": [[747, "mne-viz-figure3d"]], "mne.viz.add_background_image": [[748, "mne-viz-add-background-image"]], "mne.viz.centers_to_edges": [[749, "mne-viz-centers-to-edges"]], "Examples using mne.viz.centers_to_edges": [[749, "examples-using-mne-viz-centers-to-edges"]], "mne.viz.circular_layout": [[750, "mne-viz-circular-layout"]], "Examples using mne.viz.circular_layout": [[750, "examples-using-mne-viz-circular-layout"]], "mne.viz.close_3d_figure": [[751, "mne-viz-close-3d-figure"]], "mne.viz.close_all_3d_figures": [[752, "mne-viz-close-all-3d-figures"]], "mne.viz.compare_fiff": [[753, "mne-viz-compare-fiff"]], "mne.viz.create_3d_figure": [[754, "mne-viz-create-3d-figure"]], "Examples using mne.viz.create_3d_figure": [[754, "examples-using-mne-viz-create-3d-figure"]], "mne.viz.get_3d_backend": [[755, "mne-viz-get-3d-backend"]], "mne.viz.get_brain_class": [[756, "mne-viz-get-brain-class"]], "Examples using mne.viz.get_brain_class": [[756, "examples-using-mne-viz-get-brain-class"]], "mne.viz.get_browser_backend": [[757, "mne-viz-get-browser-backend"]], "mne.viz.iter_topography": [[758, "mne-viz-iter-topography"]], "Examples using mne.viz.iter_topography": [[758, "examples-using-mne-viz-iter-topography"]], "mne.viz.link_brains": [[759, "mne-viz-link-brains"]], "mne.viz.mne_analyze_colormap": [[760, "mne-viz-mne-analyze-colormap"]], "mne.viz.plot_alignment": [[761, "mne-viz-plot-alignment"]], "Examples using mne.viz.plot_alignment": [[761, "examples-using-mne-viz-plot-alignment"]], "mne.viz.plot_arrowmap": [[762, "mne-viz-plot-arrowmap"]], "Examples using mne.viz.plot_arrowmap": [[762, "examples-using-mne-viz-plot-arrowmap"]], "mne.viz.plot_bem": [[763, "mne-viz-plot-bem"]], "Examples using mne.viz.plot_bem": [[763, "examples-using-mne-viz-plot-bem"]], "mne.viz.plot_brain_colorbar": [[764, "mne-viz-plot-brain-colorbar"]], "Examples using mne.viz.plot_brain_colorbar": [[764, "examples-using-mne-viz-plot-brain-colorbar"]], "mne.viz.plot_bridged_electrodes": [[765, "mne-viz-plot-bridged-electrodes"]], "Examples using mne.viz.plot_bridged_electrodes": [[765, "examples-using-mne-viz-plot-bridged-electrodes"]], "mne.viz.plot_ch_adjacency": [[766, "mne-viz-plot-ch-adjacency"]], "Examples using mne.viz.plot_ch_adjacency": [[766, "examples-using-mne-viz-plot-ch-adjacency"]], "mne.viz.plot_channel_labels_circle": [[767, "mne-viz-plot-channel-labels-circle"]], "Examples using mne.viz.plot_channel_labels_circle": [[767, "examples-using-mne-viz-plot-channel-labels-circle"]], "mne.viz.plot_chpi_snr": [[768, "mne-viz-plot-chpi-snr"]], "Examples using mne.viz.plot_chpi_snr": [[768, "examples-using-mne-viz-plot-chpi-snr"]], "mne.viz.plot_compare_evokeds": [[769, "mne-viz-plot-compare-evokeds"]], "Examples using mne.viz.plot_compare_evokeds": [[769, "examples-using-mne-viz-plot-compare-evokeds"]], "mne.viz.plot_cov": [[770, "mne-viz-plot-cov"]], "Examples using mne.viz.plot_cov": [[770, "examples-using-mne-viz-plot-cov"]], "mne.viz.plot_csd": [[771, "mne-viz-plot-csd"]], "mne.viz.plot_dipole_amplitudes": [[772, "mne-viz-plot-dipole-amplitudes"]], "Examples using mne.viz.plot_dipole_amplitudes": [[772, "examples-using-mne-viz-plot-dipole-amplitudes"]], "mne.viz.plot_dipole_locations": [[773, "mne-viz-plot-dipole-locations"]], "Examples using mne.viz.plot_dipole_locations": [[773, "examples-using-mne-viz-plot-dipole-locations"]], "mne.viz.plot_drop_log": [[774, "mne-viz-plot-drop-log"]], "mne.viz.plot_epochs": [[775, "mne-viz-plot-epochs"]], "mne.viz.plot_epochs_image": [[776, "mne-viz-plot-epochs-image"]], "Examples using mne.viz.plot_epochs_image": [[776, "examples-using-mne-viz-plot-epochs-image"]], "mne.viz.plot_epochs_psd_topomap": [[777, "mne-viz-plot-epochs-psd-topomap"]], "mne.viz.plot_events": [[778, "mne-viz-plot-events"]], "Examples using mne.viz.plot_events": [[778, "examples-using-mne-viz-plot-events"]], "mne.viz.plot_evoked": [[779, "mne-viz-plot-evoked"]], "mne.viz.plot_evoked_field": [[780, "mne-viz-plot-evoked-field"]], "mne.viz.plot_evoked_image": [[781, "mne-viz-plot-evoked-image"]], "Examples using mne.viz.plot_evoked_image": [[781, "examples-using-mne-viz-plot-evoked-image"]], "mne.viz.plot_evoked_joint": [[782, "mne-viz-plot-evoked-joint"]], "mne.viz.plot_evoked_topo": [[783, "mne-viz-plot-evoked-topo"]], "Examples using mne.viz.plot_evoked_topo": [[783, "examples-using-mne-viz-plot-evoked-topo"]], "mne.viz.plot_evoked_topomap": [[784, "mne-viz-plot-evoked-topomap"]], "mne.viz.plot_evoked_white": [[785, "mne-viz-plot-evoked-white"]], "Examples using mne.viz.plot_evoked_white": [[785, "examples-using-mne-viz-plot-evoked-white"]], "mne.viz.plot_filter": [[786, "mne-viz-plot-filter"]], "Examples using mne.viz.plot_filter": [[786, "examples-using-mne-viz-plot-filter"]], "mne.viz.plot_head_positions": [[787, "mne-viz-plot-head-positions"]], "Examples using mne.viz.plot_head_positions": [[787, "examples-using-mne-viz-plot-head-positions"]], "mne.viz.plot_ica_components": [[788, "mne-viz-plot-ica-components"]], "mne.viz.plot_ica_overlay": [[789, "mne-viz-plot-ica-overlay"]], "mne.viz.plot_ica_properties": [[790, "mne-viz-plot-ica-properties"]], "mne.viz.plot_ica_scores": [[791, "mne-viz-plot-ica-scores"]], "mne.viz.plot_ica_sources": [[792, "mne-viz-plot-ica-sources"]], "mne.viz.plot_ideal_filter": [[793, "mne-viz-plot-ideal-filter"]], "Examples using mne.viz.plot_ideal_filter": [[793, "examples-using-mne-viz-plot-ideal-filter"]], "mne.viz.plot_layout": [[794, "mne-viz-plot-layout"]], "mne.viz.plot_montage": [[795, "mne-viz-plot-montage"]], "mne.viz.plot_projs_joint": [[796, "mne-viz-plot-projs-joint"]], "Examples using mne.viz.plot_projs_joint": [[796, "examples-using-mne-viz-plot-projs-joint"]], "mne.viz.plot_projs_topomap": [[797, "mne-viz-plot-projs-topomap"]], "Examples using mne.viz.plot_projs_topomap": [[797, "examples-using-mne-viz-plot-projs-topomap"]], "mne.viz.plot_raw": [[798, "mne-viz-plot-raw"]], "mne.viz.plot_raw_psd": [[799, "mne-viz-plot-raw-psd"]], "mne.viz.plot_regression_weights": [[800, "mne-viz-plot-regression-weights"]], "mne.viz.plot_sensors": [[801, "mne-viz-plot-sensors"]], "mne.viz.plot_snr_estimate": [[802, "mne-viz-plot-snr-estimate"]], "Examples using mne.viz.plot_snr_estimate": [[802, "examples-using-mne-viz-plot-snr-estimate"]], "mne.viz.plot_source_estimates": [[803, "mne-viz-plot-source-estimates"]], "Examples using mne.viz.plot_source_estimates": [[803, "examples-using-mne-viz-plot-source-estimates"]], "mne.viz.plot_sparse_source_estimates": [[804, "mne-viz-plot-sparse-source-estimates"]], "Examples using mne.viz.plot_sparse_source_estimates": [[804, "examples-using-mne-viz-plot-sparse-source-estimates"]], "mne.viz.plot_tfr_topomap": [[805, "mne-viz-plot-tfr-topomap"]], "mne.viz.plot_topo_image_epochs": [[806, "mne-viz-plot-topo-image-epochs"]], "mne.viz.plot_topomap": [[807, "mne-viz-plot-topomap"]], "Examples using mne.viz.plot_topomap": [[807, "examples-using-mne-viz-plot-topomap"]], "mne.viz.plot_vector_source_estimates": [[808, "mne-viz-plot-vector-source-estimates"]], "Examples using mne.viz.plot_vector_source_estimates": [[808, "examples-using-mne-viz-plot-vector-source-estimates"]], "mne.viz.plot_volume_source_estimates": [[809, "mne-viz-plot-volume-source-estimates"]], "mne.viz.set_3d_backend": [[810, "mne-viz-set-3d-backend"]], "Examples using mne.viz.set_3d_backend": [[810, "examples-using-mne-viz-set-3d-backend"]], "mne.viz.set_3d_options": [[811, "mne-viz-set-3d-options"]], "mne.viz.set_3d_title": [[812, "mne-viz-set-3d-title"]], "Examples using mne.viz.set_3d_title": [[812, "examples-using-mne-viz-set-3d-title"]], "mne.viz.set_3d_view": [[813, "mne-viz-set-3d-view"]], "Examples using mne.viz.set_3d_view": [[813, "examples-using-mne-viz-set-3d-view"]], "mne.viz.set_browser_backend": [[814, "mne-viz-set-browser-backend"]], "mne.viz.snapshot_brain_montage": [[815, "mne-viz-snapshot-brain-montage"]], "Examples using mne.viz.snapshot_brain_montage": [[815, "examples-using-mne-viz-snapshot-brain-montage"]], "mne.viz.use_3d_backend": [[816, "mne-viz-use-3d-backend"]], "mne.viz.use_browser_backend": [[817, "mne-viz-use-browser-backend"]], "Examples using mne.viz.use_browser_backend": [[817, "examples-using-mne-viz-use-browser-backend"]], "mne.warp_montage_volume": [[818, "mne-warp-montage-volume"]], "Examples using mne.warp_montage_volume": [[818, "examples-using-mne-warp-montage-volume"]], "mne.what": [[819, "mne-what"]], "mne.write_bem_solution": [[820, "mne-write-bem-solution"]], "mne.write_bem_surfaces": [[821, "mne-write-bem-surfaces"]], "mne.write_cov": [[822, "mne-write-cov"]], "Examples using mne.write_cov": [[822, "examples-using-mne-write-cov"]], "mne.write_events": [[823, "mne-write-events"]], "Examples using mne.write_events": [[823, "examples-using-mne-write-events"]], "mne.write_evokeds": [[824, "mne-write-evokeds"]], "Examples using mne.write_evokeds": [[824, "examples-using-mne-write-evokeds"]], "mne.write_forward_solution": [[825, "mne-write-forward-solution"]], "Examples using mne.write_forward_solution": [[825, "examples-using-mne-write-forward-solution"]], "mne.write_head_bem": [[826, "mne-write-head-bem"]], "Examples using mne.write_head_bem": [[826, "examples-using-mne-write-head-bem"]], "mne.write_label": [[827, "mne-write-label"]], "mne.write_labels_to_annot": [[828, "mne-write-labels-to-annot"]], "mne.write_proj": [[829, "mne-write-proj"]], "Examples using mne.write_proj": [[829, "examples-using-mne-write-proj"]], "mne.write_source_spaces": [[830, "mne-write-source-spaces"]], "mne.write_surface": [[831, "mne-write-surface"]], "Examples using mne.write_surface": [[831, "examples-using-mne-write-surface"]], "mne.write_trans": [[832, "mne-write-trans"]], "Glossary": [[833, "glossary"]], "MNE-Python Homepage": [[834, "mne-python-homepage"]], "Advanced setup": [[835, "advanced-setup"]], "Working with Jupyter Notebooks and JupyterLab": [[835, "working-with-jupyter-notebooks-and-jupyterlab"]], "<i class=\"fa-brands fa-windows\"></i> Windows": [[835, null]], "Installing to a headless Linux server": [[835, "installing-to-a-headless-linux-server"]], "Using the development version": [[835, "using-the-development-version"]], "Other Python distributions": [[835, "other-python-distributions"]], "GPU acceleration with CUDA": [[835, "gpu-acceleration-with-cuda"]], "Off-screen rendering with MESA": [[835, "off-screen-rendering-with-mesa"]], "Troubleshooting 3D plots": [[835, "troubleshooting-3d-plots"]], "3D plotting trouble after upgrade on macOS": [[835, "d-plotting-trouble-after-upgrade-on-macos"]], "Testing your installation": [[836, "testing-your-installation"]], "Contributing guide": [[837, "contributing-guide"]], "Overview of contribution process": [[837, "overview-of-contribution-process"]], "Setting up your local development environment": [[837, "setting-up-your-local-development-environment"]], "Configuring git": [[837, "configuring-git"]], "GNU Make": [[837, "gnu-make"]], "Forking the MNE-Python repository": [[837, "forking-the-mne-python-repository"]], "Creating the virtual environment": [[837, "creating-the-virtual-environment"]], "Basic git commands": [[837, "basic-git-commands"]], "Connecting to GitHub with SSH (optional)": [[837, "connecting-to-github-with-ssh-optional"]], "MNE-Python coding conventions": [[837, "mne-python-coding-conventions"]], "General requirements": [[837, "general-requirements"]], "All new functionality must have test coverage": [[837, "all-new-functionality-must-have-test-coverage"]], "All new functionality must be documented": [[837, "all-new-functionality-must-be-documented"]], "Avoid API changes when possible": [[837, "avoid-api-changes-when-possible"]], "Deprecate with a decorator or a warning": [[837, "deprecate-with-a-decorator-or-a-warning"]], "Describe your changes in the changelog": [[837, "describe-your-changes-in-the-changelog"]], "First-time contributors": [[837, "first-time-contributors"]], "Recurring contributors": [[837, "recurring-contributors"]], "Test locally before opening pull requests (PRs)": [[837, "test-locally-before-opening-pull-requests-prs"]], "Make tests fast and thorough": [[837, "make-tests-fast-and-thorough"]], "Code style": [[837, "code-style"]], "Adhere to standard Python style guidelines": [[837, "adhere-to-standard-python-style-guidelines"]], "Use consistent variable naming": [[837, "use-consistent-variable-naming"]], "We (mostly) follow NumPy style for docstrings": [[837, "we-mostly-follow-numpy-style-for-docstrings"]], "Cross-reference everywhere": [[837, "cross-reference-everywhere"]], "Other style guidance": [[837, "other-style-guidance"]], "Code organization": [[837, "code-organization"]], "Importing": [[837, "importing"]], "Return types": [[837, "return-types"]], "Running the test suite": [[837, "running-the-test-suite"]], "Building the documentation": [[837, "building-the-documentation"]], "Modifying command-line tools": [[837, "modifying-command-line-tools"]], "GitHub workflow": [[837, "github-workflow"]], "Installing FreeSurfer": [[838, "installing-freesurfer"]], "Installing MNE-Python": [[839, "installing-mne-python"]], "MNE-Python installers": [[840, "mne-python-installers"]], "VS Code Setup": [[840, "vs-code-setup"]], "Install via pip or conda": [[841, "install-via-pip-or-conda"]], "Installing MNE-Python with all dependencies": [[841, "installing-mne-python-with-all-dependencies"]], "Installing a minimal MNE-Python with core functionality only": [[841, "installing-a-minimal-mne-python-with-core-functionality-only"]], "Installing a minimal MNE-Python with EEGLAB I/O support": [[841, "installing-a-minimal-mne-python-with-eeglab-i-o-support"]], "Installing MNE-Python for other scenarios": [[841, "installing-mne-python-for-other-scenarios"]], "Python IDEs": [[841, "python-ides"]], "Installing Python": [[842, "installing-python"]], "Installing MNE-C": [[843, "installing-mne-c"]], "System requirements": [[843, "system-requirements"]], "<i class=\"fa-brands fa-apple\"></i> macOS": [[843, null]], "Downloading and Installing MNE-C": [[843, "downloading-and-installing-mne-c"]], "Configuring MNE-C": [[843, "configuring-mne-c"]], "Testing MNE-C installation": [[843, "testing-mne-c-installation"]], "Troubleshooting MNE-C installation": [[843, "troubleshooting-mne-c-installation"]], "Overview of the MNE tools suite": [[844, "overview-of-the-mne-tools-suite"]], "Related software": [[844, "related-software"]], "What should I install?": [[844, "what-should-i-install"]], "Getting help": [[844, "getting-help"], [858, "getting-help"]], "Updating MNE-Python": [[845, "updating-mne-python"]], "Upgrading MNE-Python only": [[845, "upgrading-mne-python-only"]], "Upgrading all packages": [[845, "upgrading-all-packages"]], "Upgrading to the development version": [[845, "upgrading-to-the-development-version"]], "Inverse Solutions": [[846, "inverse-solutions"]], "Logging and Configuration": [[847, "logging-and-configuration"]], "Martinos Center setup": [[848, "martinos-center-setup"]], "MNE with CPP": [[849, "mne-with-cpp"]], "Most-used classes": [[850, "most-used-classes"]], "MRI Processing": [[851, "mri-processing"]], "How to cite MNE-Python": [[852, "how-to-cite-mne-python"]], "Citing the software": [[852, "citing-the-software"]], "Citing the inverse imaging algorithms": [[852, "citing-the-inverse-imaging-algorithms"]], "Citing other algorithms": [[852, "citing-other-algorithms"]], "The typical M/EEG workflow": [[853, "the-typical-m-eeg-workflow"]], "Overview": [[853, "overview"], [863, "overview"]], "Artifact suppression": [[853, "artifact-suppression"]], "SSP": [[853, "ssp"]], "ICA": [[853, "ica"]], "Epoching and evoked data": [[853, "epoching-and-evoked-data"]], "Rejection using annotations": [[853, "rejection-using-annotations"]], "Source localization": [[853, "source-localization"]], "Anatomical information": [[853, "anatomical-information"]], "Cortical surface reconstruction with FreeSurfer": [[853, "cortical-surface-reconstruction-with-freesurfer"]], "Setting up the source space": [[853, "setting-up-the-source-space"]], "Recommended subdivisions of an icosahedron and an octahedron for\n       the creation of source spaces. The approximate source spacing and\n       corresponding surface area have been calculated assuming a\n       1000-cm2 surface area per hemisphere.": [[853, "id9"]], "Creating the BEM model meshes": [[853, "creating-the-bem-model-meshes"]], "Setting up the head surface triangulation files": [[853, "setting-up-the-head-surface-triangulation-files"]], "Setting up the boundary-element model": [[853, "setting-up-the-boundary-element-model"]], "Aligning coordinate frames": [[853, "aligning-coordinate-frames"]], "Computing the forward solution": [[853, "computing-the-forward-solution"], [860, "computing-the-forward-solution"]], "Computing the noise-covariance matrix": [[853, "computing-the-noise-covariance-matrix"]], "Calculating the inverse operator": [[853, "calculating-the-inverse-operator"]], "Creating source estimates": [[853, "creating-source-estimates"]], "Group analyses": [[853, "group-analyses"]], "Datasets Overview": [[854, "datasets-overview"]], "Sample": [[854, "sample"]], "Trigger codes for the sample data set.": [[854, "id20"]], "Contents of the data set": [[854, "contents-of-the-data-set"]], "Contents of the MEG/sample directory.": [[854, "id21"]], "Overview of the contents of the subjects/sample directory.": [[854, "id22"]], "UCL OPM Auditory": [[854, "ucl-opm-auditory"]], "Brainstorm": [[854, "brainstorm"]], "Auditory": [[854, "auditory"]], "Resting state": [[854, "resting-state"]], "Median nerve": [[854, "median-nerve"]], "SPM faces": [[854, "spm-faces"]], "EEGBCI motor imagery": [[854, "eegbci-motor-imagery"]], "Somatosensory": [[854, "somatosensory"]], "Multimodal": [[854, "multimodal"]], "fNIRS motor": [[854, "fnirs-motor"]], "High frequency SEF": [[854, "high-frequency-sef"]], "Visual 92 object categories": [[854, "visual-92-object-categories"]], "mTRF Dataset": [[854, "mtrf-dataset"]], "Kiloword dataset": [[854, "kiloword-dataset"]], "4D Neuroimaging / BTi dataset": [[854, "d-neuroimaging-bti-dataset"]], "OPM": [[854, "opm"]], "The Sleep PolySomnoGraphic Database": [[854, "the-sleep-polysomnographic-database"]], "Reference channel noise MEG data set": [[854, "reference-channel-noise-meg-data-set"]], "Miscellaneous Datasets": [[854, "miscellaneous-datasets"]], "fsaverage": [[854, "fsaverage"]], "Infant template MRIs": [[854, "infant-template-mris"]], "ECoG Dataset": [[854, "ecog-dataset"]], "sEEG Dataset": [[854, "seeg-dataset"]], "LIMO Dataset": [[854, "limo-dataset"]], "ERP CORE Dataset": [[854, "erp-core-dataset"]], "SSVEP": [[854, "ssvep"]], "Interactive versus scripted analysis": [[855, "interactive-versus-scripted-analysis"]], "Integration with the scientific python stack": [[855, "integration-with-the-scientific-python-stack"]], "Submodule-based organization": [[855, "submodule-based-organization"]], "(Mostly) unified API": [[855, "mostly-unified-api"]], "In-place operation": [[855, "in-place-operation"]], "MNE-Python Development": [[856, "mne-python-development"]], "Frequently Asked Questions (FAQ)": [[857, "frequently-asked-questions-faq"]], "General MNE-Python issues": [[857, "general-mne-python-issues"]], "Help! I can\u2019t get Python and MNE-Python working!": [[857, "help-i-can-t-get-python-and-mne-python-working"]], "I still can\u2019t get it to work!": [[857, "i-still-can-t-get-it-to-work"]], "I can\u2019t get PyVista/3D plotting to work under Windows": [[857, "i-can-t-get-pyvista-3d-plotting-to-work-under-windows"]], "Python runs on macOS extremely slow even on simple commands!": [[857, "python-runs-on-macos-extremely-slow-even-on-simple-commands"]], "How do I cite MNE?": [[857, "how-do-i-cite-mne"]], "I\u2019m not sure how to do X analysis step with my Y data\u2026": [[857, "i-m-not-sure-how-to-do-x-analysis-step-with-my-y-data"]], "I think I found a bug, what do I do?": [[857, "i-think-i-found-a-bug-what-do-i-do"]], "Why is it dangerous to \u201cpickle\u201d my MNE-Python objects and data for later use?": [[857, "why-is-it-dangerous-to-pickle-my-mne-python-objects-and-data-for-later-use"]], "I downloaded a dataset once, but MNE-Python is asking to download it again. Why?": [[857, "i-downloaded-a-dataset-once-but-mne-python-is-asking-to-download-it-again-why"]], "A function uses multiple CPU cores even though I didn\u2019t tell it to. Why?": [[857, "a-function-uses-multiple-cpu-cores-even-though-i-didn-t-tell-it-to-why"]], "I have a mystery FIF file, how do I read it?": [[857, "i-have-a-mystery-fif-file-how-do-i-read-it"]], "Resampling and decimating data": [[857, "resampling-and-decimating-data"]], "What are all these options for resampling, decimating, and binning data?": [[857, "what-are-all-these-options-for-resampling-decimating-and-binning-data"]], "Resampling raw data is taking forever! What do I do?": [[857, "resampling-raw-data-is-taking-forever-what-do-i-do"]], "Forward and Inverse Solution": [[857, "forward-and-inverse-solution"]], "My watershed BEM meshes look incorrect": [[857, "my-watershed-bem-meshes-look-incorrect"]], "Project Governance": [[859, "project-governance"]], "The Project": [[859, "the-project"]], "Governance model": [[859, "governance-model"]], "BDFL": [[859, "bdfl"]], "Steering Council": [[859, "steering-council"], [865, "steering-council"]], "Council membership": [[859, "council-membership"]], "Conflict of interest": [[859, "conflict-of-interest"]], "Private communications of the Council": [[859, "private-communications-of-the-council"]], "Council decision making": [[859, "council-decision-making"]], "Institutional Partners and funding": [[859, "institutional-partners-and-funding"]], "Document history": [[859, "document-history"], [865, "document-history"]], "Acknowledgements": [[859, "acknowledgements"]], "License": [[859, "license"]], "Algorithms and other implementation details": [[860, "algorithms-and-other-implementation-details"]], "Internal representation (units)": [[860, "internal-representation-units"]], "Floating-point precision": [[860, "floating-point-precision"]], "Supported channel types": [[860, "supported-channel-types"]], "Supported data formats": [[860, "supported-data-formats"]], "Supported formats for digitized 3D locations": [[860, "supported-formats-for-digitized-3d-locations"]], "Memory-efficient I/O": [[860, "memory-efficient-i-o"]], "Preloading continuous (raw) data": [[860, "preloading-continuous-raw-data"]], "Preloading epoched data": [[860, "preloading-epoched-data"]], "Loading data explicitly": [[860, "loading-data-explicitly"]], "Accessing data as NumPy arrays": [[860, "accessing-data-as-numpy-arrays"]], "Bad channel repair via interpolation": [[860, "bad-channel-repair-via-interpolation"]], "Maxwell filtering": [[860, "maxwell-filtering"]], "Signal-Space Projection (SSP)": [[860, "signal-space-projection-ssp"]], "General concepts": [[860, "general-concepts"]], "Estimation of the noise subspace": [[860, "estimation-of-the-noise-subspace"]], "EEG average electrode reference": [[860, "eeg-average-electrode-reference"]], "The Boundary Element Model (BEM)": [[860, "the-boundary-element-model-bem"]], "Using the watershed algorithm": [[860, "using-the-watershed-algorithm"]], "Using FLASH images": [[860, "using-flash-images"]], "Organizing MRI data into directories": [[860, "organizing-mri-data-into-directories"]], "Creating the surface tessellations": [[860, "creating-the-surface-tessellations"]], "Inspecting the meshes": [[860, "inspecting-the-meshes"]], "The forward solution": [[860, "the-forward-solution"]], "MEG/EEG and MRI coordinate systems": [[860, "meg-eeg-and-mri-coordinate-systems"]], "Coordinate transformations in FreeSurfer and MNE software packages.": [[860, "id18"]], "The head and device coordinate systems": [[860, "the-head-and-device-coordinate-systems"]], "Creating a surface-based source space": [[860, "creating-a-surface-based-source-space"]], "Creating a volumetric or discrete source space": [[860, "creating-a-volumetric-or-discrete-source-space"]], "Creating the BEM meshes": [[860, "creating-the-bem-meshes"]], "Topology checks": [[860, "topology-checks"]], "Computing the BEM geometry data": [[860, "computing-the-bem-geometry-data"]], "Coil geometry information": [[860, "coil-geometry-information"]], "The sensor coordinate system": [[860, "the-sensor-coordinate-system"]], "Calculation of the magnetic field": [[860, "calculation-of-the-magnetic-field"]], "Implemented coil geometries": [[860, "implemented-coil-geometries"]], "Normal coil descriptions.": [[860, "id20"]], "Accurate coil descriptions": [[860, "id21"]], "The coil definition file": [[860, "the-coil-definition-file"]], "Coil representation accuracies.": [[860, "id22"]], "Purpose": [[860, "purpose"]], "Implementation of software gradient compensation": [[860, "implementation-of-software-gradient-compensation"]], "The EEG sphere model definition file": [[860, "the-eeg-sphere-model-definition-file"]], "Structure of the default EEG model": [[860, "id23"]], "EEG forward solution in the sphere model": [[860, "eeg-forward-solution-in-the-sphere-model"]], "Averaging forward solutions": [[860, "averaging-forward-solutions"]], "The minimum-norm current estimates": [[860, "the-minimum-norm-current-estimates"]], "The linear inverse operator": [[860, "the-linear-inverse-operator"]], "Regularization": [[860, "regularization"]], "Whitening and scaling": [[860, "whitening-and-scaling"]], "Regularization of the noise-covariance matrix": [[860, "regularization-of-the-noise-covariance-matrix"]], "Computation of the solution": [[860, "computation-of-the-solution"]], "Noise normalization": [[860, "noise-normalization"]], "sLORETA": [[860, "sloreta"]], "eLORETA": [[860, "eloreta"]], "Predicted data": [[860, "predicted-data"]], "Cortical patch statistics": [[860, "cortical-patch-statistics"]], "Orientation constraints": [[860, "orientation-constraints"]], "Depth weighting": [[860, "depth-weighting"]], "Effective number of averages": [[860, "effective-number-of-averages"]], "Morphing and averaging source estimates": [[860, "morphing-and-averaging-source-estimates"]], "Why morphing?": [[860, "why-morphing"]], "The morphing maps": [[860, "the-morphing-maps"]], "About smoothing": [[860, "about-smoothing"]], "Documentation overview": [[861, "documentation-overview"]], "Getting started with Python": [[862, "getting-started-with-python"]], "MNE-MATLAB documentation": [[863, "mne-matlab-documentation"]], "High-level reading routines.": [[863, "id2"]], "Channel selection utilities.": [[863, "id3"]], "Coordinate transformation utilities.": [[863, "id4"]], "Basic reading routines.": [[863, "id5"]], "Writing routines.": [[863, "id6"]], "High-level data writing routines.": [[863, "id7"]], "Coil definition utilities.": [[863, "id8"]], "Routines for software gradient compensation and signal-space projection.": [[863, "id9"]], "High-level routines for reading MNE data files.": [[863, "id10"]], "High-level routines for writing MNE data files.": [[863, "id11"]], "Routines related to stc, w, and label files.": [[863, "id12"]], "Routines for reading FreeSurfer surfaces.": [[863, "id13"]], "Utility functions.": [[863, "id14"]], "Examples demonstrating the use of the toolbox.": [[863, "id15"]], "Some data structures": [[863, "some-data-structures"]], "FIFF constants.": [[863, "id16"]], "The tag structure.": [[863, "id17"]], "The taginfo structure.": [[863, "id18"]], "The directory structure.": [[863, "id19"]], "The id structure.": [[863, "id20"]], "The named matrix structure.": [[863, "id21"]], "The trans structure.": [[863, "id22"]], "The dig structure.": [[863, "id23"]], "The coildef structure. For more detailed information, see Coil geometry information.": [[863, "id24"]], "The ch structure.": [[863, "id25"]], "The proj structure.": [[863, "id26"]], "The comp structure.": [[863, "id27"]], "The meas info structure.": [[863, "id28"]], "The surf structure.": [[863, "id29"]], "The cov structure.": [[863, "id30"]], "The fwd structure.": [[863, "id31"]], "The inv structure. Note: The fields proj, whitener, reginv, and noisenorm are filled in by the routine mne_prepare_inverse_operator.": [[863, "id32"]], "On-line documentation for individual routines": [[863, "on-line-documentation-for-individual-routines"]], "Migrating from other analysis software": [[864, "migrating-from-other-analysis-software"]], "EEGLAB": [[864, "eeglab"]], "Potential pitfalls": [[864, "potential-pitfalls"]], "Current steering council and institutional partners": [[865, "current-steering-council-and-institutional-partners"]], "Benevolent Dictator for Life": [[865, "benevolent-dictator-for-life"]], "Community Participation Guidelines Response Leads": [[865, "community-participation-guidelines-response-leads"]], "Institutional Partners": [[865, "institutional-partners"]], "Roadmap": [[866, "roadmap"]], "Page contents": [[866, "page-contents"]], "Open": [[866, "open"]], "Time-frequency visualization": [[866, "time-frequency-visualization"]], "Clustering statistics API": [[866, "clustering-statistics-api"]], "Access to open EEG/MEG databases": [[866, "access-to-open-eeg-meg-databases"]], "Integrate OpenMEEG via improved Python bindings": [[866, "integrate-openmeeg-via-improved-python-bindings"]], "In progress": [[866, "in-progress"]], "Diversity, Equity, and Inclusion (DEI)": [[866, "diversity-equity-and-inclusion-dei"]], "First-class OPM support": [[866, "first-class-opm-support"]], "Deep source modeling": [[866, "deep-source-modeling"]], "Better sEEG/ECoG/DBS support": [[866, "better-seeg-ecog-dbs-support"]], "Time-frequency classes": [[866, "time-frequency-classes"]], "Pediatric and clinical MEG pipelines": [[866, "pediatric-and-clinical-meg-pipelines"]], "Statistics efficiency": [[866, "statistics-efficiency"]], "3D visualization": [[866, "d-visualization"]], "Documentation updates": [[866, "documentation-updates"]], "Completed": [[866, "completed"]], "Distributed computing support": [[866, "distributed-computing-support"]], "2D visualization": [[866, "id3"]], "Tutorial / example overhaul": [[866, "tutorial-example-overhaul"]], "Cluster computing images": [[866, "cluster-computing-images"]], "Python API Reference": [[868, "python-api-reference"]], "Reading raw data": [[869, "reading-raw-data"]], "Realtime": [[870, "realtime"]], "MNE-Report": [[871, "mne-report"]], "Sensor Space Data": [[872, "sensor-space-data"]], "Source Space Data": [[874, "source-space-data"]], "Statistics": [[875, "statistics"]], "Time-Frequency": [[876, "time-frequency"]], "What\u2019s new": [[878, "what-s-new"]], "Current (1.4.dev0)": [[878, "current-1-4-dev0"]], "Enhancements": [[878, "enhancements"], [878, "id3"], [878, "id6"], [878, "id10"], [878, "id13"], [878, "id17"], [878, "id21"], [878, "id25"], [878, "id29"]], "Bugs": [[878, "bugs"], [878, "id2"], [878, "id4"], [878, "id7"], [878, "id11"], [878, "id14"], [878, "id18"], [878, "id22"], [878, "id26"], [878, "id30"]], "API changes": [[878, "api-changes"], [878, "id5"], [878, "id8"], [878, "id15"], [878, "id19"], [878, "id23"], [878, "id27"], [878, "id31"]], "Version 1.3.1 (2023-02-23)": [[878, "version-1-3-1-2023-02-23"]], "Version 1.3.0 (2022-12-21)": [[878, "version-1-3-0-2022-12-21"]], "Authors": [[878, "authors"], [878, "id9"], [878, "id12"], [878, "id16"], [878, "id20"], [878, "id24"], [878, "id28"], [878, "id32"], [878, "id33"], [878, "id43"], [878, "id47"], [878, "id51"], [878, "id55"], [878, "id59"], [878, "id63"], [878, "id67"], [878, "id71"], [878, "id75"], [878, "id79"], [878, "id82"], [878, "id85"], [878, "id88"], [878, "id90"], [878, "id92"], [878, "id94"], [878, "id95"]], "Version 1.2.0 (2022-10-11)": [[878, "version-1-2-0-2022-10-11"]], "Version 1.1.0 (2022-08-03)": [[878, "version-1-1-0-2022-08-03"]], "API and behavior changes": [[878, "api-and-behavior-changes"]], "Version 1.0.0 (2022-03-21)": [[878, "version-1-0-0-2022-03-21"]], "Dependencies": [[878, "dependencies"]], "Version 0.24.0 (2021-11-03)": [[878, "version-0-24-0-2021-11-03"]], "Version 0.23.0 (2021-04-27)": [[878, "version-0-23-0-2021-04-27"]], "Version 0.22.0 (2020-12-17)": [[878, "version-0-22-0-2020-12-17"]], "Version 0.21 (2020-09-21)": [[878, "version-0-21-2020-09-21"]], "Version 0.20 (2020-03-27)": [[878, "version-0-20-2020-03-27"]], "Changelog": [[878, "changelog"], [878, "id34"], [878, "id37"], [878, "id40"], [878, "id44"], [878, "id48"], [878, "id52"], [878, "id56"], [878, "id60"], [878, "id64"], [878, "id68"], [878, "id72"], [878, "id76"], [878, "id80"], [878, "id83"], [878, "id86"], [878, "id89"], [878, "id91"], [878, "id93"]], "Bug": [[878, "bug"], [878, "id35"], [878, "id38"], [878, "id41"], [878, "id45"]], "API": [[878, "api"], [878, "id36"], [878, "id39"], [878, "id42"], [878, "id46"], [878, "id50"], [878, "id54"], [878, "id58"], [878, "id62"], [878, "id66"], [878, "id70"], [878, "id74"], [878, "id78"], [878, "id81"], [878, "id84"], [878, "id87"]], "Version 0.19 (2019-09-24)": [[878, "version-0-19-2019-09-24"]], "Version 0.18 (2019-05-19)": [[878, "version-0-18-2019-05-19"]], "Version 0.17 (2018-11-19)": [[878, "version-0-17-2018-11-19"]], "Version 0.16 (2018-05-01)": [[878, "version-0-16-2018-05-01"]], "Version 0.15 (2017-10-20)": [[878, "version-0-15-2017-10-20"]], "BUG": [[878, "id49"], [878, "id53"], [878, "id57"], [878, "id61"], [878, "id65"], [878, "id69"], [878, "id73"], [878, "id77"]], "Version 0.14 (2017-03-24)": [[878, "version-0-14-2017-03-24"]], "Version 0.13 (2016-09-27)": [[878, "version-0-13-2016-09-27"]], "Version 0.12 (2016-05-10)": [[878, "version-0-12-2016-05-10"]], "Version 0.11 (2015-12-24)": [[878, "version-0-11-2015-12-24"]], "Version 0.10 (2015-10-26)": [[878, "version-0-10-2015-10-26"]], "Version 0.9 (2015-05-22)": [[878, "version-0-9-2015-05-22"]], "Version 0.8 (2014-06-25)": [[878, "version-0-8-2014-06-25"]], "Version 0.7 (2013-11-26)": [[878, "version-0-7-2013-11-26"]], "Version 0.6 (2013-06-15)": [[878, "version-0-6-2013-06-15"]], "Version 0.5 (2012-12-27)": [[878, "version-0-5-2012-12-27"]], "Version 0.4 (2012-08-24)": [[878, "version-0-4-2012-08-24"]], "Version 0.3 (2012-03-23)": [[878, "version-0-3-2012-03-23"]], "Version 0.2 (2011-11-08)": [[878, "version-0-2-2011-11-08"]], "API changes summary": [[878, "api-changes-summary"]], "Version 0.1 (2011-09-23)": [[878, "version-0-1-2011-09-23"]]}, "indexentries": {"mne.datasets": [[248, "module-mne.datasets"]], "module": [[248, "module-mne.datasets"], [249, "module-mne.decoding"], [250, "module-mne.epochs"], [250, "module-mne.event"], [251, "module-mne.export"], [253, "module-mne.bem"], [846, "module-mne.beamformer"], [846, "module-mne.dipole"], [846, "module-mne.inverse_sparse"], [846, "module-mne.minimum_norm"], [847, "module-mne.cuda"], [847, "module-mne.utils"], [867, "module-mne.channels"], [867, "module-mne.chpi"], [867, "module-mne.filter"], [867, "module-mne.preprocessing"], [867, "module-mne.preprocessing.ieeg"], [867, "module-mne.preprocessing.nirs"], [867, "module-mne.transforms"], [868, "module-mne"], [869, "module-mne.io"], [869, "module-mne.io.kit"], [872, "module-mne.baseline"], [873, "module-mne.simulation"], [873, "module-mne.simulation.metrics"], [875, "module-mne.stats"], [876, "module-mne.time_frequency"], [876, "module-mne.time_frequency.tfr"], [877, "module-mne.viz"]], "mne.decoding": [[249, "module-mne.decoding"]], "mne.epochs": [[250, "module-mne.epochs"]], "mne.event": [[250, "module-mne.event"]], "mne.export": [[251, "module-mne.export"]], "mne.bem": [[253, "module-mne.bem"]], "acqparserfif (class in mne)": [[256, "mne.AcqParserFIF"]], "__getitem__() (mne.acqparserfif method)": [[256, "mne.AcqParserFIF.__getitem__"]], "__len__() (mne.acqparserfif method)": [[256, "mne.AcqParserFIF.__len__"]], "categories (mne.acqparserfif property)": [[256, "mne.AcqParserFIF.categories"]], "events (mne.acqparserfif property)": [[256, "mne.AcqParserFIF.events"]], "get_condition() (mne.acqparserfif method)": [[256, "mne.AcqParserFIF.get_condition"]], "annotations (class in mne)": [[257, "mne.Annotations"]], "__add__() (mne.annotations method)": [[257, "mne.Annotations.__add__"]], "__getitem__() (mne.annotations method)": [[257, "mne.Annotations.__getitem__"]], "__iter__() (mne.annotations method)": [[257, "mne.Annotations.__iter__"]], "__len__() (mne.annotations method)": [[257, "mne.Annotations.__len__"]], "append() (mne.annotations method)": [[257, "mne.Annotations.append"]], "copy() (mne.annotations method)": [[257, "mne.Annotations.copy"]], "crop() (mne.annotations method)": [[257, "mne.Annotations.crop"]], "delete() (mne.annotations method)": [[257, "mne.Annotations.delete"]], "orig_time (mne.annotations property)": [[257, "mne.Annotations.orig_time"]], "rename() (mne.annotations method)": [[257, "mne.Annotations.rename"]], "save() (mne.annotations method)": [[257, "mne.Annotations.save"]], "set_durations() (mne.annotations method)": [[257, "mne.Annotations.set_durations"]], "to_data_frame() (mne.annotations method)": [[257, "mne.Annotations.to_data_frame"]], "baseepochs (class in mne)": [[258, "mne.BaseEpochs"]], "bihemilabel (class in mne)": [[259, "mne.BiHemiLabel"]], "__add__() (mne.bihemilabel method)": [[259, "mne.BiHemiLabel.__add__"]], "__len__() (mne.bihemilabel method)": [[259, "mne.BiHemiLabel.__len__"]], "__sub__() (mne.bihemilabel method)": [[259, "mne.BiHemiLabel.__sub__"]], "covariance (class in mne)": [[260, "mne.Covariance"]], "__add__() (mne.covariance method)": [[260, "mne.Covariance.__add__"]], "__contains__() (mne.covariance method)": [[260, "mne.Covariance.__contains__"]], "__getitem__() (mne.covariance method)": [[260, "mne.Covariance.__getitem__"]], "__iter__() (mne.covariance method)": [[260, "mne.Covariance.__iter__"]], "__len__() (mne.covariance method)": [[260, "mne.Covariance.__len__"]], "as_diag() (mne.covariance method)": [[260, "mne.Covariance.as_diag"]], "ch_names (mne.covariance property)": [[260, "mne.Covariance.ch_names"]], "clear() (mne.covariance method)": [[260, "mne.Covariance.clear"]], "copy() (mne.covariance method)": [[260, "mne.Covariance.copy"]], "data (mne.covariance property)": [[260, "mne.Covariance.data"]], "fromkeys() (mne.covariance method)": [[260, "mne.Covariance.fromkeys"]], "get() (mne.covariance method)": [[260, "mne.Covariance.get"]], "items() (mne.covariance method)": [[260, "mne.Covariance.items"]], "keys() (mne.covariance method)": [[260, "mne.Covariance.keys"]], "nfree (mne.covariance property)": [[260, "mne.Covariance.nfree"]], "pick_channels() (mne.covariance method)": [[260, "mne.Covariance.pick_channels"]], "plot() (mne.covariance method)": [[260, "mne.Covariance.plot"]], "plot_topomap() (mne.covariance method)": [[260, "mne.Covariance.plot_topomap"]], "pop() (mne.covariance method)": [[260, "mne.Covariance.pop"]], "popitem() (mne.covariance method)": [[260, "mne.Covariance.popitem"]], "save() (mne.covariance method)": [[260, "mne.Covariance.save"]], "setdefault() (mne.covariance method)": [[260, "mne.Covariance.setdefault"]], "update() (mne.covariance method)": [[260, "mne.Covariance.update"]], "values() (mne.covariance method)": [[260, "mne.Covariance.values"]], "dipole (class in mne)": [[261, "mne.Dipole"]], "__getitem__() (mne.dipole method)": [[261, "mne.Dipole.__getitem__"]], "__len__() (mne.dipole method)": [[261, "mne.Dipole.__len__"]], "copy() (mne.dipole method)": [[261, "mne.Dipole.copy"]], "crop() (mne.dipole method)": [[261, "mne.Dipole.crop"]], "decimate() (mne.dipole method)": [[261, "mne.Dipole.decimate"]], "plot_amplitudes() (mne.dipole method)": [[261, "mne.Dipole.plot_amplitudes"]], "plot_locations() (mne.dipole method)": [[261, "mne.Dipole.plot_locations"]], "save() (mne.dipole method)": [[261, "mne.Dipole.save"]], "shift_time() (mne.dipole method)": [[261, "mne.Dipole.shift_time"]], "time_as_index() (mne.dipole method)": [[261, "mne.Dipole.time_as_index"]], "times (mne.dipole property)": [[261, "mne.Dipole.times"]], "tmax (mne.dipole property)": [[261, "mne.Dipole.tmax"]], "tmin (mne.dipole property)": [[261, "mne.Dipole.tmin"]], "to_mni() (mne.dipole method)": [[261, "mne.Dipole.to_mni"]], "to_mri() (mne.dipole method)": [[261, "mne.Dipole.to_mri"]], "to_volume_labels() (mne.dipole method)": [[261, "mne.Dipole.to_volume_labels"]], "dipolefixed (class in mne)": [[262, "mne.DipoleFixed"]], "ch_names (mne.dipolefixed property)": [[262, "mne.DipoleFixed.ch_names"]], "copy() (mne.dipolefixed method)": [[262, "mne.DipoleFixed.copy"]], "crop() (mne.dipolefixed method)": [[262, "mne.DipoleFixed.crop"]], "decimate() (mne.dipolefixed method)": [[262, "mne.DipoleFixed.decimate"]], "plot() (mne.dipolefixed method)": [[262, "mne.DipoleFixed.plot"]], "save() (mne.dipolefixed method)": [[262, "mne.DipoleFixed.save"]], "shift_time() (mne.dipolefixed method)": [[262, "mne.DipoleFixed.shift_time"]], "time_as_index() (mne.dipolefixed method)": [[262, "mne.DipoleFixed.time_as_index"]], "times (mne.dipolefixed property)": [[262, "mne.DipoleFixed.times"]], "tmax (mne.dipolefixed property)": [[262, "mne.DipoleFixed.tmax"]], "tmin (mne.dipolefixed property)": [[262, "mne.DipoleFixed.tmin"]], "epochs (class in mne)": [[263, "mne.Epochs"]], "__contains__() (mne.epochs method)": [[263, "mne.Epochs.__contains__"]], "__getitem__() (mne.epochs method)": [[263, "mne.Epochs.__getitem__"]], "__iter__() (mne.epochs method)": [[263, "mne.Epochs.__iter__"]], "__len__() (mne.epochs method)": [[263, "mne.Epochs.__len__"]], "add_annotations_to_metadata() (mne.epochs method)": [[263, "mne.Epochs.add_annotations_to_metadata"]], "add_channels() (mne.epochs method)": [[263, "mne.Epochs.add_channels"]], "add_proj() (mne.epochs method)": [[263, "mne.Epochs.add_proj"]], "add_reference_channels() (mne.epochs method)": [[263, "mne.Epochs.add_reference_channels"]], "anonymize() (mne.epochs method)": [[263, "mne.Epochs.anonymize"]], "apply_baseline() (mne.epochs method)": [[263, "mne.Epochs.apply_baseline"]], "apply_function() (mne.epochs method)": [[263, "mne.Epochs.apply_function"]], "apply_hilbert() (mne.epochs method)": [[263, "mne.Epochs.apply_hilbert"]], "apply_proj() (mne.epochs method)": [[263, "mne.Epochs.apply_proj"]], "as_type() (mne.epochs method)": [[263, "mne.Epochs.as_type"]], "average() (mne.epochs method)": [[263, "mne.Epochs.average"]], "ch_names (mne.epochs property)": [[263, "mne.Epochs.ch_names"]], "compensation_grade (mne.epochs property)": [[263, "mne.Epochs.compensation_grade"]], "compute_psd() (mne.epochs method)": [[263, "mne.Epochs.compute_psd"]], "copy() (mne.epochs method)": [[263, "mne.Epochs.copy"]], "crop() (mne.epochs method)": [[263, "mne.Epochs.crop"]], "decimate() (mne.epochs method)": [[263, "mne.Epochs.decimate"]], "del_proj() (mne.epochs method)": [[263, "mne.Epochs.del_proj"]], "drop() (mne.epochs method)": [[263, "mne.Epochs.drop"]], "drop_bad() (mne.epochs method)": [[263, "mne.Epochs.drop_bad"]], "drop_channels() (mne.epochs method)": [[263, "mne.Epochs.drop_channels"]], "drop_log_stats() (mne.epochs method)": [[263, "mne.Epochs.drop_log_stats"]], "equalize_event_counts() (mne.epochs method)": [[263, "mne.Epochs.equalize_event_counts"]], "export() (mne.epochs method)": [[263, "mne.Epochs.export"]], "filename (mne.epochs property)": [[263, "mne.Epochs.filename"]], "filter() (mne.epochs method)": [[263, "mne.Epochs.filter"]], "get_annotations_per_epoch() (mne.epochs method)": [[263, "mne.Epochs.get_annotations_per_epoch"]], "get_channel_types() (mne.epochs method)": [[263, "mne.Epochs.get_channel_types"]], "get_data() (mne.epochs method)": [[263, "mne.Epochs.get_data"]], "get_montage() (mne.epochs method)": [[263, "mne.Epochs.get_montage"]], "interpolate_bads() (mne.epochs method)": [[263, "mne.Epochs.interpolate_bads"]], "iter_evoked() (mne.epochs method)": [[263, "mne.Epochs.iter_evoked"]], "load_data() (mne.epochs method)": [[263, "mne.Epochs.load_data"]], "metadata (mne.epochs property)": [[263, "mne.Epochs.metadata"]], "next() (mne.epochs method)": [[263, "mne.Epochs.next"]], "pick() (mne.epochs method)": [[263, "mne.Epochs.pick"]], "pick_channels() (mne.epochs method)": [[263, "mne.Epochs.pick_channels"]], "pick_types() (mne.epochs method)": [[263, "mne.Epochs.pick_types"]], "plot() (mne.epochs method)": [[263, "mne.Epochs.plot"]], "plot_drop_log() (mne.epochs method)": [[263, "mne.Epochs.plot_drop_log"]], "plot_image() (mne.epochs method)": [[263, "mne.Epochs.plot_image"]], "plot_projs_topomap() (mne.epochs method)": [[263, "mne.Epochs.plot_projs_topomap"]], "plot_psd() (mne.epochs method)": [[263, "mne.Epochs.plot_psd"]], "plot_psd_topo() (mne.epochs method)": [[263, "mne.Epochs.plot_psd_topo"]], "plot_psd_topomap() (mne.epochs method)": [[263, "mne.Epochs.plot_psd_topomap"]], "plot_sensors() (mne.epochs method)": [[263, "mne.Epochs.plot_sensors"]], "plot_topo_image() (mne.epochs method)": [[263, "mne.Epochs.plot_topo_image"]], "proj (mne.epochs property)": [[263, "mne.Epochs.proj"]], "rename_channels() (mne.epochs method)": [[263, "mne.Epochs.rename_channels"]], "reorder_channels() (mne.epochs method)": [[263, "mne.Epochs.reorder_channels"]], "resample() (mne.epochs method)": [[263, "mne.Epochs.resample"]], "reset_drop_log_selection() (mne.epochs method)": [[263, "mne.Epochs.reset_drop_log_selection"]], "save() (mne.epochs method)": [[263, "mne.Epochs.save"]], "savgol_filter() (mne.epochs method)": [[263, "mne.Epochs.savgol_filter"]], "set_annotations() (mne.epochs method)": [[263, "mne.Epochs.set_annotations"]], "set_channel_types() (mne.epochs method)": [[263, "mne.Epochs.set_channel_types"]], "set_eeg_reference() (mne.epochs method)": [[263, "mne.Epochs.set_eeg_reference"]], "set_meas_date() (mne.epochs method)": [[263, "mne.Epochs.set_meas_date"]], "set_montage() (mne.epochs method)": [[263, "mne.Epochs.set_montage"]], "shift_time() (mne.epochs method)": [[263, "mne.Epochs.shift_time"]], "standard_error() (mne.epochs method)": [[263, "mne.Epochs.standard_error"]], "subtract_evoked() (mne.epochs method)": [[263, "mne.Epochs.subtract_evoked"]], "time_as_index() (mne.epochs method)": [[263, "mne.Epochs.time_as_index"]], "times (mne.epochs property)": [[263, "mne.Epochs.times"]], "tmax (mne.epochs property)": [[263, "mne.Epochs.tmax"]], "tmin (mne.epochs property)": [[263, "mne.Epochs.tmin"]], "to_data_frame() (mne.epochs method)": [[263, "mne.Epochs.to_data_frame"]], "epochsarray (class in mne)": [[264, "mne.EpochsArray"]], "__contains__() (mne.epochsarray method)": [[264, "mne.EpochsArray.__contains__"]], "__getitem__() (mne.epochsarray method)": [[264, "mne.EpochsArray.__getitem__"]], "__iter__() (mne.epochsarray method)": [[264, "mne.EpochsArray.__iter__"]], "__len__() (mne.epochsarray method)": [[264, "mne.EpochsArray.__len__"]], "add_annotations_to_metadata() (mne.epochsarray method)": [[264, "mne.EpochsArray.add_annotations_to_metadata"]], "add_channels() (mne.epochsarray method)": [[264, "mne.EpochsArray.add_channels"]], "add_proj() (mne.epochsarray method)": [[264, "mne.EpochsArray.add_proj"]], "add_reference_channels() (mne.epochsarray method)": [[264, "mne.EpochsArray.add_reference_channels"]], "anonymize() (mne.epochsarray method)": [[264, "mne.EpochsArray.anonymize"]], "apply_baseline() (mne.epochsarray method)": [[264, "mne.EpochsArray.apply_baseline"]], "apply_function() (mne.epochsarray method)": [[264, "mne.EpochsArray.apply_function"]], "apply_hilbert() (mne.epochsarray method)": [[264, "mne.EpochsArray.apply_hilbert"]], "apply_proj() (mne.epochsarray method)": [[264, "mne.EpochsArray.apply_proj"]], "as_type() (mne.epochsarray method)": [[264, "mne.EpochsArray.as_type"]], "average() (mne.epochsarray method)": [[264, "mne.EpochsArray.average"]], "ch_names (mne.epochsarray property)": [[264, "mne.EpochsArray.ch_names"]], "compensation_grade (mne.epochsarray property)": [[264, "mne.EpochsArray.compensation_grade"]], "compute_psd() (mne.epochsarray method)": [[264, "mne.EpochsArray.compute_psd"]], "copy() (mne.epochsarray method)": [[264, "mne.EpochsArray.copy"]], "crop() (mne.epochsarray method)": [[264, "mne.EpochsArray.crop"]], "decimate() (mne.epochsarray method)": [[264, "mne.EpochsArray.decimate"]], "del_proj() (mne.epochsarray method)": [[264, "mne.EpochsArray.del_proj"]], "drop() (mne.epochsarray method)": [[264, "mne.EpochsArray.drop"]], "drop_bad() (mne.epochsarray method)": [[264, "mne.EpochsArray.drop_bad"]], "drop_channels() (mne.epochsarray method)": [[264, "mne.EpochsArray.drop_channels"]], "drop_log_stats() (mne.epochsarray method)": [[264, "mne.EpochsArray.drop_log_stats"]], "equalize_event_counts() (mne.epochsarray method)": [[264, "mne.EpochsArray.equalize_event_counts"]], "export() (mne.epochsarray method)": [[264, "mne.EpochsArray.export"]], "filename (mne.epochsarray property)": [[264, "mne.EpochsArray.filename"]], "filter() (mne.epochsarray method)": [[264, "mne.EpochsArray.filter"]], "get_annotations_per_epoch() (mne.epochsarray method)": [[264, "mne.EpochsArray.get_annotations_per_epoch"]], "get_channel_types() (mne.epochsarray method)": [[264, "mne.EpochsArray.get_channel_types"]], "get_data() (mne.epochsarray method)": [[264, "mne.EpochsArray.get_data"]], "get_montage() (mne.epochsarray method)": [[264, "mne.EpochsArray.get_montage"]], "interpolate_bads() (mne.epochsarray method)": [[264, "mne.EpochsArray.interpolate_bads"]], "iter_evoked() (mne.epochsarray method)": [[264, "mne.EpochsArray.iter_evoked"]], "load_data() (mne.epochsarray method)": [[264, "mne.EpochsArray.load_data"]], "metadata (mne.epochsarray property)": [[264, "mne.EpochsArray.metadata"]], "next() (mne.epochsarray method)": [[264, "mne.EpochsArray.next"]], "pick() (mne.epochsarray method)": [[264, "mne.EpochsArray.pick"]], "pick_channels() (mne.epochsarray method)": [[264, "mne.EpochsArray.pick_channels"]], "pick_types() (mne.epochsarray method)": [[264, "mne.EpochsArray.pick_types"]], "plot() (mne.epochsarray method)": [[264, "mne.EpochsArray.plot"]], "plot_drop_log() (mne.epochsarray method)": [[264, "mne.EpochsArray.plot_drop_log"]], "plot_image() (mne.epochsarray method)": [[264, "mne.EpochsArray.plot_image"]], "plot_projs_topomap() (mne.epochsarray method)": [[264, "mne.EpochsArray.plot_projs_topomap"]], "plot_psd() (mne.epochsarray method)": [[264, "mne.EpochsArray.plot_psd"]], "plot_psd_topo() (mne.epochsarray method)": [[264, "mne.EpochsArray.plot_psd_topo"]], "plot_psd_topomap() (mne.epochsarray method)": [[264, "mne.EpochsArray.plot_psd_topomap"]], "plot_sensors() (mne.epochsarray method)": [[264, "mne.EpochsArray.plot_sensors"]], "plot_topo_image() (mne.epochsarray method)": [[264, "mne.EpochsArray.plot_topo_image"]], "proj (mne.epochsarray property)": [[264, "mne.EpochsArray.proj"]], "rename_channels() (mne.epochsarray method)": [[264, "mne.EpochsArray.rename_channels"]], "reorder_channels() (mne.epochsarray method)": [[264, "mne.EpochsArray.reorder_channels"]], "resample() (mne.epochsarray method)": [[264, "mne.EpochsArray.resample"]], "reset_drop_log_selection() (mne.epochsarray method)": [[264, "mne.EpochsArray.reset_drop_log_selection"]], "save() (mne.epochsarray method)": [[264, "mne.EpochsArray.save"]], "savgol_filter() (mne.epochsarray method)": [[264, "mne.EpochsArray.savgol_filter"]], "set_annotations() (mne.epochsarray method)": [[264, "mne.EpochsArray.set_annotations"]], "set_channel_types() (mne.epochsarray method)": [[264, "mne.EpochsArray.set_channel_types"]], "set_eeg_reference() (mne.epochsarray method)": [[264, "mne.EpochsArray.set_eeg_reference"]], "set_meas_date() (mne.epochsarray method)": [[264, "mne.EpochsArray.set_meas_date"]], "set_montage() (mne.epochsarray method)": [[264, "mne.EpochsArray.set_montage"]], "shift_time() (mne.epochsarray method)": [[264, "mne.EpochsArray.shift_time"]], "standard_error() (mne.epochsarray method)": [[264, "mne.EpochsArray.standard_error"]], "subtract_evoked() (mne.epochsarray method)": [[264, "mne.EpochsArray.subtract_evoked"]], "time_as_index() (mne.epochsarray method)": [[264, "mne.EpochsArray.time_as_index"]], "times (mne.epochsarray property)": [[264, "mne.EpochsArray.times"]], "tmax (mne.epochsarray property)": [[264, "mne.EpochsArray.tmax"]], "tmin (mne.epochsarray property)": [[264, "mne.EpochsArray.tmin"]], "to_data_frame() (mne.epochsarray method)": [[264, "mne.EpochsArray.to_data_frame"]], "evoked (class in mne)": [[265, "mne.Evoked"]], "__contains__() (mne.evoked method)": [[265, "mne.Evoked.__contains__"]], "__neg__() (mne.evoked method)": [[265, "mne.Evoked.__neg__"]], "add_channels() (mne.evoked method)": [[265, "mne.Evoked.add_channels"]], "add_proj() (mne.evoked method)": [[265, "mne.Evoked.add_proj"]], "add_reference_channels() (mne.evoked method)": [[265, "mne.Evoked.add_reference_channels"]], "animate_topomap() (mne.evoked method)": [[265, "mne.Evoked.animate_topomap"]], "anonymize() (mne.evoked method)": [[265, "mne.Evoked.anonymize"]], "apply_baseline() (mne.evoked method)": [[265, "mne.Evoked.apply_baseline"]], "apply_function() (mne.evoked method)": [[265, "mne.Evoked.apply_function"]], "apply_hilbert() (mne.evoked method)": [[265, "mne.Evoked.apply_hilbert"]], "apply_proj() (mne.evoked method)": [[265, "mne.Evoked.apply_proj"]], "as_type() (mne.evoked method)": [[265, "mne.Evoked.as_type"]], "ch_names (mne.evoked property)": [[265, "mne.Evoked.ch_names"]], "compensation_grade (mne.evoked property)": [[265, "mne.Evoked.compensation_grade"]], "compute_psd() (mne.evoked method)": [[265, "mne.Evoked.compute_psd"]], "copy() (mne.evoked method)": [[265, "mne.Evoked.copy"]], "crop() (mne.evoked method)": [[265, "mne.Evoked.crop"]], "data (mne.evoked property)": [[265, "mne.Evoked.data"]], "decimate() (mne.evoked method)": [[265, "mne.Evoked.decimate"]], "del_proj() (mne.evoked method)": [[265, "mne.Evoked.del_proj"]], "detrend() (mne.evoked method)": [[265, "mne.Evoked.detrend"]], "drop_channels() (mne.evoked method)": [[265, "mne.Evoked.drop_channels"]], "export() (mne.evoked method)": [[265, "mne.Evoked.export"]], "filter() (mne.evoked method)": [[265, "mne.Evoked.filter"]], "get_channel_types() (mne.evoked method)": [[265, "mne.Evoked.get_channel_types"]], "get_data() (mne.evoked method)": [[265, "mne.Evoked.get_data"]], "get_montage() (mne.evoked method)": [[265, "mne.Evoked.get_montage"]], "get_peak() (mne.evoked method)": [[265, "mne.Evoked.get_peak"]], "interpolate_bads() (mne.evoked method)": [[265, "mne.Evoked.interpolate_bads"]], "kind (mne.evoked property)": [[265, "mne.Evoked.kind"]], "pick() (mne.evoked method)": [[265, "mne.Evoked.pick"]], "pick_channels() (mne.evoked method)": [[265, "mne.Evoked.pick_channels"]], "pick_types() (mne.evoked method)": [[265, "mne.Evoked.pick_types"]], "plot() (mne.evoked method)": [[265, "mne.Evoked.plot"]], "plot_field() (mne.evoked method)": [[265, "mne.Evoked.plot_field"]], "plot_image() (mne.evoked method)": [[265, "mne.Evoked.plot_image"]], "plot_joint() (mne.evoked method)": [[265, "mne.Evoked.plot_joint"]], "plot_projs_topomap() (mne.evoked method)": [[265, "mne.Evoked.plot_projs_topomap"]], "plot_psd() (mne.evoked method)": [[265, "mne.Evoked.plot_psd"]], "plot_psd_topo() (mne.evoked method)": [[265, "mne.Evoked.plot_psd_topo"]], "plot_psd_topomap() (mne.evoked method)": [[265, "mne.Evoked.plot_psd_topomap"]], "plot_sensors() (mne.evoked method)": [[265, "mne.Evoked.plot_sensors"]], "plot_topo() (mne.evoked method)": [[265, "mne.Evoked.plot_topo"]], "plot_topomap() (mne.evoked method)": [[265, "mne.Evoked.plot_topomap"]], "plot_white() (mne.evoked method)": [[265, "mne.Evoked.plot_white"]], "proj (mne.evoked property)": [[265, "mne.Evoked.proj"]], "rename_channels() (mne.evoked method)": [[265, "mne.Evoked.rename_channels"]], "reorder_channels() (mne.evoked method)": [[265, "mne.Evoked.reorder_channels"]], "resample() (mne.evoked method)": [[265, "mne.Evoked.resample"]], "save() (mne.evoked method)": [[265, "mne.Evoked.save"]], "savgol_filter() (mne.evoked method)": [[265, "mne.Evoked.savgol_filter"]], "set_channel_types() (mne.evoked method)": [[265, "mne.Evoked.set_channel_types"]], "set_eeg_reference() (mne.evoked method)": [[265, "mne.Evoked.set_eeg_reference"]], "set_meas_date() (mne.evoked method)": [[265, "mne.Evoked.set_meas_date"]], "set_montage() (mne.evoked method)": [[265, "mne.Evoked.set_montage"]], "shift_time() (mne.evoked method)": [[265, "mne.Evoked.shift_time"]], "time_as_index() (mne.evoked method)": [[265, "mne.Evoked.time_as_index"]], "times (mne.evoked property)": [[265, "mne.Evoked.times"]], "tmax (mne.evoked property)": [[265, "mne.Evoked.tmax"]], "tmin (mne.evoked property)": [[265, "mne.Evoked.tmin"]], "to_data_frame() (mne.evoked method)": [[265, "mne.Evoked.to_data_frame"]], "evokedarray (class in mne)": [[266, "mne.EvokedArray"]], "__contains__() (mne.evokedarray method)": [[266, "mne.EvokedArray.__contains__"]], "__neg__() (mne.evokedarray method)": [[266, "mne.EvokedArray.__neg__"]], "add_channels() (mne.evokedarray method)": [[266, "mne.EvokedArray.add_channels"]], "add_proj() (mne.evokedarray method)": [[266, "mne.EvokedArray.add_proj"]], "add_reference_channels() (mne.evokedarray method)": [[266, "mne.EvokedArray.add_reference_channels"]], "animate_topomap() (mne.evokedarray method)": [[266, "mne.EvokedArray.animate_topomap"]], "anonymize() (mne.evokedarray method)": [[266, "mne.EvokedArray.anonymize"]], "apply_baseline() (mne.evokedarray method)": [[266, "mne.EvokedArray.apply_baseline"]], "apply_function() (mne.evokedarray method)": [[266, "mne.EvokedArray.apply_function"]], "apply_hilbert() (mne.evokedarray method)": [[266, "mne.EvokedArray.apply_hilbert"]], "apply_proj() (mne.evokedarray method)": [[266, "mne.EvokedArray.apply_proj"]], "as_type() (mne.evokedarray method)": [[266, "mne.EvokedArray.as_type"]], "ch_names (mne.evokedarray property)": [[266, "mne.EvokedArray.ch_names"]], "compensation_grade (mne.evokedarray property)": [[266, "mne.EvokedArray.compensation_grade"]], "compute_psd() (mne.evokedarray method)": [[266, "mne.EvokedArray.compute_psd"]], "copy() (mne.evokedarray method)": [[266, "mne.EvokedArray.copy"]], "crop() (mne.evokedarray method)": [[266, "mne.EvokedArray.crop"]], "data (mne.evokedarray property)": [[266, "mne.EvokedArray.data"]], "decimate() (mne.evokedarray method)": [[266, "mne.EvokedArray.decimate"]], "del_proj() (mne.evokedarray method)": [[266, "mne.EvokedArray.del_proj"]], "detrend() (mne.evokedarray method)": [[266, "mne.EvokedArray.detrend"]], "drop_channels() (mne.evokedarray method)": [[266, "mne.EvokedArray.drop_channels"]], "export() (mne.evokedarray method)": [[266, "mne.EvokedArray.export"]], "filter() (mne.evokedarray method)": [[266, "mne.EvokedArray.filter"]], "get_channel_types() (mne.evokedarray method)": [[266, "mne.EvokedArray.get_channel_types"]], "get_data() (mne.evokedarray method)": [[266, "mne.EvokedArray.get_data"]], "get_montage() (mne.evokedarray method)": [[266, "mne.EvokedArray.get_montage"]], "get_peak() (mne.evokedarray method)": [[266, "mne.EvokedArray.get_peak"]], "interpolate_bads() (mne.evokedarray method)": [[266, "mne.EvokedArray.interpolate_bads"]], "kind (mne.evokedarray property)": [[266, "mne.EvokedArray.kind"]], "pick() (mne.evokedarray method)": [[266, "mne.EvokedArray.pick"]], "pick_channels() (mne.evokedarray method)": [[266, "mne.EvokedArray.pick_channels"]], "pick_types() (mne.evokedarray method)": [[266, "mne.EvokedArray.pick_types"]], "plot() (mne.evokedarray method)": [[266, "mne.EvokedArray.plot"]], "plot_field() (mne.evokedarray method)": [[266, "mne.EvokedArray.plot_field"]], "plot_image() (mne.evokedarray method)": [[266, "mne.EvokedArray.plot_image"]], "plot_joint() (mne.evokedarray method)": [[266, "mne.EvokedArray.plot_joint"]], "plot_projs_topomap() (mne.evokedarray method)": [[266, "mne.EvokedArray.plot_projs_topomap"]], "plot_psd() (mne.evokedarray method)": [[266, "mne.EvokedArray.plot_psd"]], "plot_psd_topo() (mne.evokedarray method)": [[266, "mne.EvokedArray.plot_psd_topo"]], "plot_psd_topomap() (mne.evokedarray method)": [[266, "mne.EvokedArray.plot_psd_topomap"]], "plot_sensors() (mne.evokedarray method)": [[266, "mne.EvokedArray.plot_sensors"]], "plot_topo() (mne.evokedarray method)": [[266, "mne.EvokedArray.plot_topo"]], "plot_topomap() (mne.evokedarray method)": [[266, "mne.EvokedArray.plot_topomap"]], "plot_white() (mne.evokedarray method)": [[266, "mne.EvokedArray.plot_white"]], "proj (mne.evokedarray property)": [[266, "mne.EvokedArray.proj"]], "rename_channels() (mne.evokedarray method)": [[266, "mne.EvokedArray.rename_channels"]], "reorder_channels() (mne.evokedarray method)": [[266, "mne.EvokedArray.reorder_channels"]], "resample() (mne.evokedarray method)": [[266, "mne.EvokedArray.resample"]], "save() (mne.evokedarray method)": [[266, "mne.EvokedArray.save"]], "savgol_filter() (mne.evokedarray method)": [[266, "mne.EvokedArray.savgol_filter"]], "set_channel_types() (mne.evokedarray method)": [[266, "mne.EvokedArray.set_channel_types"]], "set_eeg_reference() (mne.evokedarray method)": [[266, "mne.EvokedArray.set_eeg_reference"]], "set_meas_date() (mne.evokedarray method)": [[266, "mne.EvokedArray.set_meas_date"]], "set_montage() (mne.evokedarray method)": [[266, "mne.EvokedArray.set_montage"]], "shift_time() (mne.evokedarray method)": [[266, "mne.EvokedArray.shift_time"]], "time_as_index() (mne.evokedarray method)": [[266, "mne.EvokedArray.time_as_index"]], "times (mne.evokedarray property)": [[266, "mne.EvokedArray.times"]], "tmax (mne.evokedarray property)": [[266, "mne.EvokedArray.tmax"]], "tmin (mne.evokedarray property)": [[266, "mne.EvokedArray.tmin"]], "to_data_frame() (mne.evokedarray method)": [[266, "mne.EvokedArray.to_data_frame"]], "forward (class in mne)": [[267, "mne.Forward"]], "copy() (mne.forward method)": [[267, "mne.Forward.copy"]], "pick_channels() (mne.forward method)": [[267, "mne.Forward.pick_channels"]], "info (class in mne)": [[268, "mne.Info"]], "__contains__() (mne.info method)": [[268, "mne.Info.__contains__"]], "__getitem__() (mne.info method)": [[268, "mne.Info.__getitem__"]], "__iter__() (mne.info method)": [[268, "mne.Info.__iter__"]], "__len__() (mne.info method)": [[268, "mne.Info.__len__"]], "clear() (mne.info method)": [[268, "mne.Info.clear"]], "compensation_grade (mne.info property)": [[268, "mne.Info.compensation_grade"]], "copy() (mne.info method)": [[268, "mne.Info.copy"]], "fromkeys() (mne.info method)": [[268, "mne.Info.fromkeys"]], "get() (mne.info method)": [[268, "mne.Info.get"]], "get_channel_types() (mne.info method)": [[268, "mne.Info.get_channel_types"]], "get_montage() (mne.info method)": [[268, "mne.Info.get_montage"]], "items() (mne.info method)": [[268, "mne.Info.items"]], "keys() (mne.info method)": [[268, "mne.Info.keys"]], "normalize_proj() (mne.info method)": [[268, "mne.Info.normalize_proj"]], "pop() (mne.info method)": [[268, "mne.Info.pop"]], "popitem() (mne.info method)": [[268, "mne.Info.popitem"]], "save() (mne.info method)": [[268, "mne.Info.save"]], "set_montage() (mne.info method)": [[268, "mne.Info.set_montage"]], "setdefault() (mne.info method)": [[268, "mne.Info.setdefault"]], "update() (mne.info method)": [[268, "mne.Info.update"]], "values() (mne.info method)": [[268, "mne.Info.values"]], "label (class in mne)": [[269, "mne.Label"]], "__add__() (mne.label method)": [[269, "mne.Label.__add__"]], "__len__() (mne.label method)": [[269, "mne.Label.__len__"]], "__sub__() (mne.label method)": [[269, "mne.Label.__sub__"]], "center_of_mass() (mne.label method)": [[269, "mne.Label.center_of_mass"]], "compute_area() (mne.label method)": [[269, "mne.Label.compute_area"]], "copy() (mne.label method)": [[269, "mne.Label.copy"]], "distances_to_outside() (mne.label method)": [[269, "mne.Label.distances_to_outside"]], "fill() (mne.label method)": [[269, "mne.Label.fill"]], "get_tris() (mne.label method)": [[269, "mne.Label.get_tris"]], "get_vertices_used() (mne.label method)": [[269, "mne.Label.get_vertices_used"]], "morph() (mne.label method)": [[269, "mne.Label.morph"]], "restrict() (mne.label method)": [[269, "mne.Label.restrict"]], "save() (mne.label method)": [[269, "mne.Label.save"]], "smooth() (mne.label method)": [[269, "mne.Label.smooth"]], "split() (mne.label method)": [[269, "mne.Label.split"]], "mixedsourceestimate (class in mne)": [[270, "mne.MixedSourceEstimate"]], "__add__() (mne.mixedsourceestimate method)": [[270, "mne.MixedSourceEstimate.__add__"]], "__div__() (mne.mixedsourceestimate method)": [[270, "mne.MixedSourceEstimate.__div__"]], "__mul__() (mne.mixedsourceestimate method)": [[270, "mne.MixedSourceEstimate.__mul__"]], "__neg__() (mne.mixedsourceestimate method)": [[270, "mne.MixedSourceEstimate.__neg__"]], "__sub__() (mne.mixedsourceestimate method)": [[270, "mne.MixedSourceEstimate.__sub__"]], "apply_baseline() (mne.mixedsourceestimate method)": [[270, "mne.MixedSourceEstimate.apply_baseline"]], "bin() (mne.mixedsourceestimate method)": [[270, "mne.MixedSourceEstimate.bin"]], "copy() (mne.mixedsourceestimate method)": [[270, "mne.MixedSourceEstimate.copy"]], "crop() (mne.mixedsourceestimate method)": [[270, "mne.MixedSourceEstimate.crop"]], "data (mne.mixedsourceestimate property)": [[270, "mne.MixedSourceEstimate.data"]], "decimate() (mne.mixedsourceestimate method)": [[270, "mne.MixedSourceEstimate.decimate"]], "extract_label_time_course() (mne.mixedsourceestimate method)": [[270, "mne.MixedSourceEstimate.extract_label_time_course"]], "get_peak() (mne.mixedsourceestimate method)": [[270, "mne.MixedSourceEstimate.get_peak"]], "mean() (mne.mixedsourceestimate method)": [[270, "mne.MixedSourceEstimate.mean"]], "plot() (mne.mixedsourceestimate method)": [[270, "mne.MixedSourceEstimate.plot"]], "resample() (mne.mixedsourceestimate method)": [[270, "mne.MixedSourceEstimate.resample"]], "save() (mne.mixedsourceestimate method)": [[270, "mne.MixedSourceEstimate.save"]], "sfreq (mne.mixedsourceestimate property)": [[270, "mne.MixedSourceEstimate.sfreq"]], "shape (mne.mixedsourceestimate property)": [[270, "mne.MixedSourceEstimate.shape"]], "shift_time() (mne.mixedsourceestimate method)": [[270, "mne.MixedSourceEstimate.shift_time"]], "sqrt() (mne.mixedsourceestimate method)": [[270, "mne.MixedSourceEstimate.sqrt"]], "sum() (mne.mixedsourceestimate method)": [[270, "mne.MixedSourceEstimate.sum"]], "surface() (mne.mixedsourceestimate method)": [[270, "mne.MixedSourceEstimate.surface"]], "time_as_index() (mne.mixedsourceestimate method)": [[270, "mne.MixedSourceEstimate.time_as_index"]], "times (mne.mixedsourceestimate property)": [[270, "mne.MixedSourceEstimate.times"]], "tmax (mne.mixedsourceestimate property)": [[270, "mne.MixedSourceEstimate.tmax"]], "tmin (mne.mixedsourceestimate property)": [[270, "mne.MixedSourceEstimate.tmin"]], "to_data_frame() (mne.mixedsourceestimate method)": [[270, "mne.MixedSourceEstimate.to_data_frame"]], "transform() (mne.mixedsourceestimate method)": [[270, "mne.MixedSourceEstimate.transform"]], "transform_data() (mne.mixedsourceestimate method)": [[270, "mne.MixedSourceEstimate.transform_data"]], "tstep (mne.mixedsourceestimate property)": [[270, "mne.MixedSourceEstimate.tstep"]], "volume() (mne.mixedsourceestimate method)": [[270, "mne.MixedSourceEstimate.volume"]], "mixedvectorsourceestimate (class in mne)": [[271, "mne.MixedVectorSourceEstimate"]], "__add__() (mne.mixedvectorsourceestimate method)": [[271, "mne.MixedVectorSourceEstimate.__add__"]], "__div__() (mne.mixedvectorsourceestimate method)": [[271, "mne.MixedVectorSourceEstimate.__div__"]], "__mul__() (mne.mixedvectorsourceestimate method)": [[271, "mne.MixedVectorSourceEstimate.__mul__"]], "__neg__() (mne.mixedvectorsourceestimate method)": [[271, "mne.MixedVectorSourceEstimate.__neg__"]], "__sub__() (mne.mixedvectorsourceestimate method)": [[271, "mne.MixedVectorSourceEstimate.__sub__"]], "apply_baseline() (mne.mixedvectorsourceestimate method)": [[271, "mne.MixedVectorSourceEstimate.apply_baseline"]], "bin() (mne.mixedvectorsourceestimate method)": [[271, "mne.MixedVectorSourceEstimate.bin"]], "copy() (mne.mixedvectorsourceestimate method)": [[271, "mne.MixedVectorSourceEstimate.copy"]], "crop() (mne.mixedvectorsourceestimate method)": [[271, "mne.MixedVectorSourceEstimate.crop"]], "data (mne.mixedvectorsourceestimate property)": [[271, "mne.MixedVectorSourceEstimate.data"]], "decimate() (mne.mixedvectorsourceestimate method)": [[271, "mne.MixedVectorSourceEstimate.decimate"]], "extract_label_time_course() (mne.mixedvectorsourceestimate method)": [[271, "mne.MixedVectorSourceEstimate.extract_label_time_course"]], "get_peak() (mne.mixedvectorsourceestimate method)": [[271, "mne.MixedVectorSourceEstimate.get_peak"]], "magnitude() (mne.mixedvectorsourceestimate method)": [[271, "mne.MixedVectorSourceEstimate.magnitude"]], "mean() (mne.mixedvectorsourceestimate method)": [[271, "mne.MixedVectorSourceEstimate.mean"]], "plot() (mne.mixedvectorsourceestimate method)": [[271, "mne.MixedVectorSourceEstimate.plot"]], "project() (mne.mixedvectorsourceestimate method)": [[271, "mne.MixedVectorSourceEstimate.project"]], "resample() (mne.mixedvectorsourceestimate method)": [[271, "mne.MixedVectorSourceEstimate.resample"]], "save() (mne.mixedvectorsourceestimate method)": [[271, "mne.MixedVectorSourceEstimate.save"]], "sfreq (mne.mixedvectorsourceestimate property)": [[271, "mne.MixedVectorSourceEstimate.sfreq"]], "shape (mne.mixedvectorsourceestimate property)": [[271, "mne.MixedVectorSourceEstimate.shape"]], "shift_time() (mne.mixedvectorsourceestimate method)": [[271, "mne.MixedVectorSourceEstimate.shift_time"]], "sqrt() (mne.mixedvectorsourceestimate method)": [[271, "mne.MixedVectorSourceEstimate.sqrt"]], "sum() (mne.mixedvectorsourceestimate method)": [[271, "mne.MixedVectorSourceEstimate.sum"]], "surface() (mne.mixedvectorsourceestimate method)": [[271, "mne.MixedVectorSourceEstimate.surface"]], "time_as_index() (mne.mixedvectorsourceestimate method)": [[271, "mne.MixedVectorSourceEstimate.time_as_index"]], "times (mne.mixedvectorsourceestimate property)": [[271, "mne.MixedVectorSourceEstimate.times"]], "tmax (mne.mixedvectorsourceestimate property)": [[271, "mne.MixedVectorSourceEstimate.tmax"]], "tmin (mne.mixedvectorsourceestimate property)": [[271, "mne.MixedVectorSourceEstimate.tmin"]], "to_data_frame() (mne.mixedvectorsourceestimate method)": [[271, "mne.MixedVectorSourceEstimate.to_data_frame"]], "transform() (mne.mixedvectorsourceestimate method)": [[271, "mne.MixedVectorSourceEstimate.transform"]], "transform_data() (mne.mixedvectorsourceestimate method)": [[271, "mne.MixedVectorSourceEstimate.transform_data"]], "tstep (mne.mixedvectorsourceestimate property)": [[271, "mne.MixedVectorSourceEstimate.tstep"]], "volume() (mne.mixedvectorsourceestimate method)": [[271, "mne.MixedVectorSourceEstimate.volume"]], "projection (class in mne)": [[272, "mne.Projection"]], "__contains__() (mne.projection method)": [[272, "mne.Projection.__contains__"]], "__getitem__() (mne.projection method)": [[272, "mne.Projection.__getitem__"]], "__iter__() (mne.projection method)": [[272, "mne.Projection.__iter__"]], "__len__() (mne.projection method)": [[272, "mne.Projection.__len__"]], "clear() (mne.projection method)": [[272, "mne.Projection.clear"]], "copy() (mne.projection method)": [[272, "mne.Projection.copy"]], "fromkeys() (mne.projection method)": [[272, "mne.Projection.fromkeys"]], "get() (mne.projection method)": [[272, "mne.Projection.get"]], "items() (mne.projection method)": [[272, "mne.Projection.items"]], "keys() (mne.projection method)": [[272, "mne.Projection.keys"]], "plot_topomap() (mne.projection method)": [[272, "mne.Projection.plot_topomap"]], "pop() (mne.projection method)": [[272, "mne.Projection.pop"]], "popitem() (mne.projection method)": [[272, "mne.Projection.popitem"]], "setdefault() (mne.projection method)": [[272, "mne.Projection.setdefault"]], "update() (mne.projection method)": [[272, "mne.Projection.update"]], "values() (mne.projection method)": [[272, "mne.Projection.values"]], "report (class in mne)": [[273, "mne.Report"]], "__len__() (mne.report method)": [[273, "mne.Report.__len__"]], "add_bem() (mne.report method)": [[273, "mne.Report.add_bem"]], "add_code() (mne.report method)": [[273, "mne.Report.add_code"]], "add_covariance() (mne.report method)": [[273, "mne.Report.add_covariance"]], "add_custom_css() (mne.report method)": [[273, "mne.Report.add_custom_css"]], "add_custom_js() (mne.report method)": [[273, "mne.Report.add_custom_js"]], "add_epochs() (mne.report method)": [[273, "mne.Report.add_epochs"]], "add_events() (mne.report method)": [[273, "mne.Report.add_events"]], "add_evokeds() (mne.report method)": [[273, "mne.Report.add_evokeds"]], "add_figure() (mne.report method)": [[273, "mne.Report.add_figure"]], "add_forward() (mne.report method)": [[273, "mne.Report.add_forward"]], "add_html() (mne.report method)": [[273, "mne.Report.add_html"]], "add_ica() (mne.report method)": [[273, "mne.Report.add_ica"]], "add_image() (mne.report method)": [[273, "mne.Report.add_image"]], "add_inverse_operator() (mne.report method)": [[273, "mne.Report.add_inverse_operator"]], "add_projs() (mne.report method)": [[273, "mne.Report.add_projs"]], "add_raw() (mne.report method)": [[273, "mne.Report.add_raw"]], "add_stc() (mne.report method)": [[273, "mne.Report.add_stc"]], "add_sys_info() (mne.report method)": [[273, "mne.Report.add_sys_info"]], "add_trans() (mne.report method)": [[273, "mne.Report.add_trans"]], "html (mne.report property)": [[273, "mne.Report.html"]], "parse_folder() (mne.report method)": [[273, "mne.Report.parse_folder"]], "remove() (mne.report method)": [[273, "mne.Report.remove"]], "save() (mne.report method)": [[273, "mne.Report.save"]], "tags (mne.report property)": [[273, "mne.Report.tags"]], "sourceestimate (class in mne)": [[274, "mne.SourceEstimate"]], "__add__() (mne.sourceestimate method)": [[274, "mne.SourceEstimate.__add__"]], "__div__() (mne.sourceestimate method)": [[274, "mne.SourceEstimate.__div__"]], "__mul__() (mne.sourceestimate method)": [[274, "mne.SourceEstimate.__mul__"]], "__neg__() (mne.sourceestimate method)": [[274, "mne.SourceEstimate.__neg__"]], "__sub__() (mne.sourceestimate method)": [[274, "mne.SourceEstimate.__sub__"]], "apply_baseline() (mne.sourceestimate method)": [[274, "mne.SourceEstimate.apply_baseline"]], "bin() (mne.sourceestimate method)": [[274, "mne.SourceEstimate.bin"]], "center_of_mass() (mne.sourceestimate method)": [[274, "mne.SourceEstimate.center_of_mass"]], "copy() (mne.sourceestimate method)": [[274, "mne.SourceEstimate.copy"]], "crop() (mne.sourceestimate method)": [[274, "mne.SourceEstimate.crop"]], "data (mne.sourceestimate property)": [[274, "mne.SourceEstimate.data"]], "decimate() (mne.sourceestimate method)": [[274, "mne.SourceEstimate.decimate"]], "estimate_snr() (mne.sourceestimate method)": [[274, "mne.SourceEstimate.estimate_snr"]], "expand() (mne.sourceestimate method)": [[274, "mne.SourceEstimate.expand"]], "extract_label_time_course() (mne.sourceestimate method)": [[274, "mne.SourceEstimate.extract_label_time_course"]], "get_peak() (mne.sourceestimate method)": [[274, "mne.SourceEstimate.get_peak"]], "in_label() (mne.sourceestimate method)": [[274, "mne.SourceEstimate.in_label"]], "lh_data (mne.sourceestimate property)": [[274, "mne.SourceEstimate.lh_data"]], "lh_vertno (mne.sourceestimate property)": [[274, "mne.SourceEstimate.lh_vertno"]], "mean() (mne.sourceestimate method)": [[274, "mne.SourceEstimate.mean"]], "plot() (mne.sourceestimate method)": [[274, "mne.SourceEstimate.plot"]], "resample() (mne.sourceestimate method)": [[274, "mne.SourceEstimate.resample"]], "rh_data (mne.sourceestimate property)": [[274, "mne.SourceEstimate.rh_data"]], "rh_vertno (mne.sourceestimate property)": [[274, "mne.SourceEstimate.rh_vertno"]], "save() (mne.sourceestimate method)": [[274, "mne.SourceEstimate.save"]], "sfreq (mne.sourceestimate property)": [[274, "mne.SourceEstimate.sfreq"]], "shape (mne.sourceestimate property)": [[274, "mne.SourceEstimate.shape"]], "shift_time() (mne.sourceestimate method)": [[274, "mne.SourceEstimate.shift_time"]], "sqrt() (mne.sourceestimate method)": [[274, "mne.SourceEstimate.sqrt"]], "sum() (mne.sourceestimate method)": [[274, "mne.SourceEstimate.sum"]], "time_as_index() (mne.sourceestimate method)": [[274, "mne.SourceEstimate.time_as_index"]], "times (mne.sourceestimate property)": [[274, "mne.SourceEstimate.times"]], "tmax (mne.sourceestimate property)": [[274, "mne.SourceEstimate.tmax"]], "tmin (mne.sourceestimate property)": [[274, "mne.SourceEstimate.tmin"]], "to_data_frame() (mne.sourceestimate method)": [[274, "mne.SourceEstimate.to_data_frame"]], "to_original_src() (mne.sourceestimate method)": [[274, "mne.SourceEstimate.to_original_src"]], "transform() (mne.sourceestimate method)": [[274, "mne.SourceEstimate.transform"]], "transform_data() (mne.sourceestimate method)": [[274, "mne.SourceEstimate.transform_data"]], "tstep (mne.sourceestimate property)": [[274, "mne.SourceEstimate.tstep"]], "sourcemorph (class in mne)": [[275, "mne.SourceMorph"]], "apply() (mne.sourcemorph method)": [[275, "mne.SourceMorph.apply"]], "compute_vol_morph_mat() (mne.sourcemorph method)": [[275, "mne.SourceMorph.compute_vol_morph_mat"]], "save() (mne.sourcemorph method)": [[275, "mne.SourceMorph.save"]], "sourcespaces (class in mne)": [[276, "mne.SourceSpaces"]], "__add__() (mne.sourcespaces method)": [[276, "mne.SourceSpaces.__add__"]], "__getitem__() (mne.sourcespaces method)": [[276, "mne.SourceSpaces.__getitem__"]], "copy() (mne.sourcespaces method)": [[276, "mne.SourceSpaces.copy"]], "export_volume() (mne.sourcespaces method)": [[276, "mne.SourceSpaces.export_volume"]], "plot() (mne.sourcespaces method)": [[276, "mne.SourceSpaces.plot"]], "save() (mne.sourcespaces method)": [[276, "mne.SourceSpaces.save"]], "vectorsourceestimate (class in mne)": [[277, "mne.VectorSourceEstimate"]], "__add__() (mne.vectorsourceestimate method)": [[277, "mne.VectorSourceEstimate.__add__"]], "__div__() (mne.vectorsourceestimate method)": [[277, "mne.VectorSourceEstimate.__div__"]], "__mul__() (mne.vectorsourceestimate method)": [[277, "mne.VectorSourceEstimate.__mul__"]], "__neg__() (mne.vectorsourceestimate method)": [[277, "mne.VectorSourceEstimate.__neg__"]], "__sub__() (mne.vectorsourceestimate method)": [[277, "mne.VectorSourceEstimate.__sub__"]], "apply_baseline() (mne.vectorsourceestimate method)": [[277, "mne.VectorSourceEstimate.apply_baseline"]], "bin() (mne.vectorsourceestimate method)": [[277, "mne.VectorSourceEstimate.bin"]], "copy() (mne.vectorsourceestimate method)": [[277, "mne.VectorSourceEstimate.copy"]], "crop() (mne.vectorsourceestimate method)": [[277, "mne.VectorSourceEstimate.crop"]], "data (mne.vectorsourceestimate property)": [[277, "mne.VectorSourceEstimate.data"]], "decimate() (mne.vectorsourceestimate method)": [[277, "mne.VectorSourceEstimate.decimate"]], "expand() (mne.vectorsourceestimate method)": [[277, "mne.VectorSourceEstimate.expand"]], "extract_label_time_course() (mne.vectorsourceestimate method)": [[277, "mne.VectorSourceEstimate.extract_label_time_course"]], "get_peak() (mne.vectorsourceestimate method)": [[277, "mne.VectorSourceEstimate.get_peak"]], "in_label() (mne.vectorsourceestimate method)": [[277, "mne.VectorSourceEstimate.in_label"]], "lh_data (mne.vectorsourceestimate property)": [[277, "mne.VectorSourceEstimate.lh_data"]], "lh_vertno (mne.vectorsourceestimate property)": [[277, "mne.VectorSourceEstimate.lh_vertno"]], "magnitude() (mne.vectorsourceestimate method)": [[277, "mne.VectorSourceEstimate.magnitude"]], "mean() (mne.vectorsourceestimate method)": [[277, "mne.VectorSourceEstimate.mean"]], "plot() (mne.vectorsourceestimate method)": [[277, "mne.VectorSourceEstimate.plot"]], "project() (mne.vectorsourceestimate method)": [[277, "mne.VectorSourceEstimate.project"]], "resample() (mne.vectorsourceestimate method)": [[277, "mne.VectorSourceEstimate.resample"]], "rh_data (mne.vectorsourceestimate property)": [[277, "mne.VectorSourceEstimate.rh_data"]], "rh_vertno (mne.vectorsourceestimate property)": [[277, "mne.VectorSourceEstimate.rh_vertno"]], "save() (mne.vectorsourceestimate method)": [[277, "mne.VectorSourceEstimate.save"]], "sfreq (mne.vectorsourceestimate property)": [[277, "mne.VectorSourceEstimate.sfreq"]], "shape (mne.vectorsourceestimate property)": [[277, "mne.VectorSourceEstimate.shape"]], "shift_time() (mne.vectorsourceestimate method)": [[277, "mne.VectorSourceEstimate.shift_time"]], "sqrt() (mne.vectorsourceestimate method)": [[277, "mne.VectorSourceEstimate.sqrt"]], "sum() (mne.vectorsourceestimate method)": [[277, "mne.VectorSourceEstimate.sum"]], "time_as_index() (mne.vectorsourceestimate method)": [[277, "mne.VectorSourceEstimate.time_as_index"]], "times (mne.vectorsourceestimate property)": [[277, "mne.VectorSourceEstimate.times"]], "tmax (mne.vectorsourceestimate property)": [[277, "mne.VectorSourceEstimate.tmax"]], "tmin (mne.vectorsourceestimate property)": [[277, "mne.VectorSourceEstimate.tmin"]], "to_data_frame() (mne.vectorsourceestimate method)": [[277, "mne.VectorSourceEstimate.to_data_frame"]], "to_original_src() (mne.vectorsourceestimate method)": [[277, "mne.VectorSourceEstimate.to_original_src"]], "transform() (mne.vectorsourceestimate method)": [[277, "mne.VectorSourceEstimate.transform"]], "transform_data() (mne.vectorsourceestimate method)": [[277, "mne.VectorSourceEstimate.transform_data"]], "tstep (mne.vectorsourceestimate property)": [[277, "mne.VectorSourceEstimate.tstep"]], "volsourceestimate (class in mne)": [[278, "mne.VolSourceEstimate"]], "__add__() (mne.volsourceestimate method)": [[278, "mne.VolSourceEstimate.__add__"]], "__div__() (mne.volsourceestimate method)": [[278, "mne.VolSourceEstimate.__div__"]], "__mul__() (mne.volsourceestimate method)": [[278, "mne.VolSourceEstimate.__mul__"]], "__neg__() (mne.volsourceestimate method)": [[278, "mne.VolSourceEstimate.__neg__"]], "__sub__() (mne.volsourceestimate method)": [[278, "mne.VolSourceEstimate.__sub__"]], "apply_baseline() (mne.volsourceestimate method)": [[278, "mne.VolSourceEstimate.apply_baseline"]], "as_volume() (mne.volsourceestimate method)": [[278, "mne.VolSourceEstimate.as_volume"]], "bin() (mne.volsourceestimate method)": [[278, "mne.VolSourceEstimate.bin"]], "copy() (mne.volsourceestimate method)": [[278, "mne.VolSourceEstimate.copy"]], "crop() (mne.volsourceestimate method)": [[278, "mne.VolSourceEstimate.crop"]], "data (mne.volsourceestimate property)": [[278, "mne.VolSourceEstimate.data"]], "decimate() (mne.volsourceestimate method)": [[278, "mne.VolSourceEstimate.decimate"]], "extract_label_time_course() (mne.volsourceestimate method)": [[278, "mne.VolSourceEstimate.extract_label_time_course"]], "get_peak() (mne.volsourceestimate method)": [[278, "mne.VolSourceEstimate.get_peak"]], "in_label() (mne.volsourceestimate method)": [[278, "mne.VolSourceEstimate.in_label"]], "mean() (mne.volsourceestimate method)": [[278, "mne.VolSourceEstimate.mean"]], "plot() (mne.volsourceestimate method)": [[278, "mne.VolSourceEstimate.plot"]], "plot_3d() (mne.volsourceestimate method)": [[278, "mne.VolSourceEstimate.plot_3d"]], "resample() (mne.volsourceestimate method)": [[278, "mne.VolSourceEstimate.resample"]], "save() (mne.volsourceestimate method)": [[278, "mne.VolSourceEstimate.save"]], "save_as_volume() (mne.volsourceestimate method)": [[278, "mne.VolSourceEstimate.save_as_volume"]], "sfreq (mne.volsourceestimate property)": [[278, "mne.VolSourceEstimate.sfreq"]], "shape (mne.volsourceestimate property)": [[278, "mne.VolSourceEstimate.shape"]], "shift_time() (mne.volsourceestimate method)": [[278, "mne.VolSourceEstimate.shift_time"]], "sqrt() (mne.volsourceestimate method)": [[278, "mne.VolSourceEstimate.sqrt"]], "sum() (mne.volsourceestimate method)": [[278, "mne.VolSourceEstimate.sum"]], "time_as_index() (mne.volsourceestimate method)": [[278, "mne.VolSourceEstimate.time_as_index"]], "times (mne.volsourceestimate property)": [[278, "mne.VolSourceEstimate.times"]], "tmax (mne.volsourceestimate property)": [[278, "mne.VolSourceEstimate.tmax"]], "tmin (mne.volsourceestimate property)": [[278, "mne.VolSourceEstimate.tmin"]], "to_data_frame() (mne.volsourceestimate method)": [[278, "mne.VolSourceEstimate.to_data_frame"]], "transform() (mne.volsourceestimate method)": [[278, "mne.VolSourceEstimate.transform"]], "transform_data() (mne.volsourceestimate method)": [[278, "mne.VolSourceEstimate.transform_data"]], "tstep (mne.volsourceestimate property)": [[278, "mne.VolSourceEstimate.tstep"]], "volvectorsourceestimate (class in mne)": [[279, "mne.VolVectorSourceEstimate"]], "__add__() (mne.volvectorsourceestimate method)": [[279, "mne.VolVectorSourceEstimate.__add__"]], "__div__() (mne.volvectorsourceestimate method)": [[279, "mne.VolVectorSourceEstimate.__div__"]], "__mul__() (mne.volvectorsourceestimate method)": [[279, "mne.VolVectorSourceEstimate.__mul__"]], "__neg__() (mne.volvectorsourceestimate method)": [[279, "mne.VolVectorSourceEstimate.__neg__"]], "__sub__() (mne.volvectorsourceestimate method)": [[279, "mne.VolVectorSourceEstimate.__sub__"]], "apply_baseline() (mne.volvectorsourceestimate method)": [[279, "mne.VolVectorSourceEstimate.apply_baseline"]], "as_volume() (mne.volvectorsourceestimate method)": [[279, "mne.VolVectorSourceEstimate.as_volume"]], "bin() (mne.volvectorsourceestimate method)": [[279, "mne.VolVectorSourceEstimate.bin"]], "copy() (mne.volvectorsourceestimate method)": [[279, "mne.VolVectorSourceEstimate.copy"]], "crop() (mne.volvectorsourceestimate method)": [[279, "mne.VolVectorSourceEstimate.crop"]], "data (mne.volvectorsourceestimate property)": [[279, "mne.VolVectorSourceEstimate.data"]], "decimate() (mne.volvectorsourceestimate method)": [[279, "mne.VolVectorSourceEstimate.decimate"]], "extract_label_time_course() (mne.volvectorsourceestimate method)": [[279, "mne.VolVectorSourceEstimate.extract_label_time_course"]], "get_peak() (mne.volvectorsourceestimate method)": [[279, "mne.VolVectorSourceEstimate.get_peak"]], "in_label() (mne.volvectorsourceestimate method)": [[279, "mne.VolVectorSourceEstimate.in_label"]], "magnitude() (mne.volvectorsourceestimate method)": [[279, "mne.VolVectorSourceEstimate.magnitude"]], "mean() (mne.volvectorsourceestimate method)": [[279, "mne.VolVectorSourceEstimate.mean"]], "plot() (mne.volvectorsourceestimate method)": [[279, "mne.VolVectorSourceEstimate.plot"]], "plot_3d() (mne.volvectorsourceestimate method)": [[279, "mne.VolVectorSourceEstimate.plot_3d"]], "project() (mne.volvectorsourceestimate method)": [[279, "mne.VolVectorSourceEstimate.project"]], "resample() (mne.volvectorsourceestimate method)": [[279, "mne.VolVectorSourceEstimate.resample"]], "save() (mne.volvectorsourceestimate method)": [[279, "mne.VolVectorSourceEstimate.save"]], "save_as_volume() (mne.volvectorsourceestimate method)": [[279, "mne.VolVectorSourceEstimate.save_as_volume"]], "sfreq (mne.volvectorsourceestimate property)": [[279, "mne.VolVectorSourceEstimate.sfreq"]], "shape (mne.volvectorsourceestimate property)": [[279, "mne.VolVectorSourceEstimate.shape"]], "shift_time() (mne.volvectorsourceestimate method)": [[279, "mne.VolVectorSourceEstimate.shift_time"]], "sqrt() (mne.volvectorsourceestimate method)": [[279, "mne.VolVectorSourceEstimate.sqrt"]], "sum() (mne.volvectorsourceestimate method)": [[279, "mne.VolVectorSourceEstimate.sum"]], "time_as_index() (mne.volvectorsourceestimate method)": [[279, "mne.VolVectorSourceEstimate.time_as_index"]], "times (mne.volvectorsourceestimate property)": [[279, "mne.VolVectorSourceEstimate.times"]], "tmax (mne.volvectorsourceestimate property)": [[279, "mne.VolVectorSourceEstimate.tmax"]], "tmin (mne.volvectorsourceestimate property)": [[279, "mne.VolVectorSourceEstimate.tmin"]], "to_data_frame() (mne.volvectorsourceestimate method)": [[279, "mne.VolVectorSourceEstimate.to_data_frame"]], "transform() (mne.volvectorsourceestimate method)": [[279, "mne.VolVectorSourceEstimate.transform"]], "transform_data() (mne.volvectorsourceestimate method)": [[279, "mne.VolVectorSourceEstimate.transform_data"]], "tstep (mne.volvectorsourceestimate property)": [[279, "mne.VolVectorSourceEstimate.tstep"]], "add_reference_channels() (in module mne)": [[280, "mne.add_reference_channels"]], "add_source_space_distances() (in module mne)": [[281, "mne.add_source_space_distances"]], "annotations_from_events() (in module mne)": [[282, "mne.annotations_from_events"]], "apply_forward() (in module mne)": [[283, "mne.apply_forward"]], "apply_forward_raw() (in module mne)": [[284, "mne.apply_forward_raw"]], "average_forward_solutions() (in module mne)": [[285, "mne.average_forward_solutions"]], "rescale() (in module mne.baseline)": [[286, "mne.baseline.rescale"]], "beamformer (class in mne.beamformer)": [[287, "mne.beamformer.Beamformer"]], "__contains__() (mne.beamformer.beamformer method)": [[287, "mne.beamformer.Beamformer.__contains__"]], "__getitem__() (mne.beamformer.beamformer method)": [[287, "mne.beamformer.Beamformer.__getitem__"]], "__iter__() (mne.beamformer.beamformer method)": [[287, "mne.beamformer.Beamformer.__iter__"]], "__len__() (mne.beamformer.beamformer method)": [[287, "mne.beamformer.Beamformer.__len__"]], "clear() (mne.beamformer.beamformer method)": [[287, "mne.beamformer.Beamformer.clear"]], "copy() (mne.beamformer.beamformer method)": [[287, "mne.beamformer.Beamformer.copy"]], "fromkeys() (mne.beamformer.beamformer method)": [[287, "mne.beamformer.Beamformer.fromkeys"]], "get() (mne.beamformer.beamformer method)": [[287, "mne.beamformer.Beamformer.get"]], "items() (mne.beamformer.beamformer method)": [[287, "mne.beamformer.Beamformer.items"]], "keys() (mne.beamformer.beamformer method)": [[287, "mne.beamformer.Beamformer.keys"]], "pop() (mne.beamformer.beamformer method)": [[287, "mne.beamformer.Beamformer.pop"]], "popitem() (mne.beamformer.beamformer method)": [[287, "mne.beamformer.Beamformer.popitem"]], "save() (mne.beamformer.beamformer method)": [[287, "mne.beamformer.Beamformer.save"]], "setdefault() (mne.beamformer.beamformer method)": [[287, "mne.beamformer.Beamformer.setdefault"]], "update() (mne.beamformer.beamformer method)": [[287, "mne.beamformer.Beamformer.update"]], "values() (mne.beamformer.beamformer method)": [[287, "mne.beamformer.Beamformer.values"]], "apply_dics() (in module mne.beamformer)": [[288, "mne.beamformer.apply_dics"]], "apply_dics_csd() (in module mne.beamformer)": [[289, "mne.beamformer.apply_dics_csd"]], "apply_dics_epochs() (in module mne.beamformer)": [[290, "mne.beamformer.apply_dics_epochs"]], "apply_dics_tfr_epochs() (in module mne.beamformer)": [[291, "mne.beamformer.apply_dics_tfr_epochs"]], "apply_lcmv() (in module mne.beamformer)": [[292, "mne.beamformer.apply_lcmv"]], "apply_lcmv_cov() (in module mne.beamformer)": [[293, "mne.beamformer.apply_lcmv_cov"]], "apply_lcmv_epochs() (in module mne.beamformer)": [[294, "mne.beamformer.apply_lcmv_epochs"]], "apply_lcmv_raw() (in module mne.beamformer)": [[295, "mne.beamformer.apply_lcmv_raw"]], "make_dics() (in module mne.beamformer)": [[296, "mne.beamformer.make_dics"]], "make_lcmv() (in module mne.beamformer)": [[297, "mne.beamformer.make_lcmv"]], "make_lcmv_resolution_matrix() (in module mne.beamformer)": [[298, "mne.beamformer.make_lcmv_resolution_matrix"]], "rap_music() (in module mne.beamformer)": [[299, "mne.beamformer.rap_music"]], "read_beamformer() (in module mne.beamformer)": [[300, "mne.beamformer.read_beamformer"]], "conductormodel (class in mne.bem)": [[301, "mne.bem.ConductorModel"]], "__contains__() (mne.bem.conductormodel method)": [[301, "mne.bem.ConductorModel.__contains__"]], "__getitem__() (mne.bem.conductormodel method)": [[301, "mne.bem.ConductorModel.__getitem__"]], "__iter__() (mne.bem.conductormodel method)": [[301, "mne.bem.ConductorModel.__iter__"]], "__len__() (mne.bem.conductormodel method)": [[301, "mne.bem.ConductorModel.__len__"]], "clear() (mne.bem.conductormodel method)": [[301, "mne.bem.ConductorModel.clear"]], "copy() (mne.bem.conductormodel method)": [[301, "mne.bem.ConductorModel.copy"]], "fromkeys() (mne.bem.conductormodel method)": [[301, "mne.bem.ConductorModel.fromkeys"]], "get() (mne.bem.conductormodel method)": [[301, "mne.bem.ConductorModel.get"]], "items() (mne.bem.conductormodel method)": [[301, "mne.bem.ConductorModel.items"]], "keys() (mne.bem.conductormodel method)": [[301, "mne.bem.ConductorModel.keys"]], "pop() (mne.bem.conductormodel method)": [[301, "mne.bem.ConductorModel.pop"]], "popitem() (mne.bem.conductormodel method)": [[301, "mne.bem.ConductorModel.popitem"]], "radius (mne.bem.conductormodel property)": [[301, "mne.bem.ConductorModel.radius"]], "setdefault() (mne.bem.conductormodel method)": [[301, "mne.bem.ConductorModel.setdefault"]], "update() (mne.bem.conductormodel method)": [[301, "mne.bem.ConductorModel.update"]], "values() (mne.bem.conductormodel method)": [[301, "mne.bem.ConductorModel.values"]], "convert_flash_mris() (in module mne.bem)": [[302, "mne.bem.convert_flash_mris"]], "distance_to_bem() (in module mne.bem)": [[303, "mne.bem.distance_to_bem"]], "fit_sphere_to_headshape() (in module mne.bem)": [[304, "mne.bem.fit_sphere_to_headshape"]], "get_fitting_dig() (in module mne.bem)": [[305, "mne.bem.get_fitting_dig"]], "make_flash_bem() (in module mne.bem)": [[306, "mne.bem.make_flash_bem"]], "make_scalp_surfaces() (in module mne.bem)": [[307, "mne.bem.make_scalp_surfaces"]], "make_watershed_bem() (in module mne.bem)": [[308, "mne.bem.make_watershed_bem"]], "channel_indices_by_type() (in module mne)": [[309, "mne.channel_indices_by_type"]], "channel_type() (in module mne)": [[310, "mne.channel_type"]], "digmontage (class in mne.channels)": [[311, "mne.channels.DigMontage"]], "__add__() (mne.channels.digmontage method)": [[311, "mne.channels.DigMontage.__add__"]], "add_estimated_fiducials() (mne.channels.digmontage method)": [[311, "mne.channels.DigMontage.add_estimated_fiducials"]], "add_mni_fiducials() (mne.channels.digmontage method)": [[311, "mne.channels.DigMontage.add_mni_fiducials"]], "apply_trans() (mne.channels.digmontage method)": [[311, "mne.channels.DigMontage.apply_trans"]], "copy() (mne.channels.digmontage method)": [[311, "mne.channels.DigMontage.copy"]], "get_positions() (mne.channels.digmontage method)": [[311, "mne.channels.DigMontage.get_positions"]], "plot() (mne.channels.digmontage method)": [[311, "mne.channels.DigMontage.plot"]], "remove_fiducials() (mne.channels.digmontage method)": [[311, "mne.channels.DigMontage.remove_fiducials"]], "rename_channels() (mne.channels.digmontage method)": [[311, "mne.channels.DigMontage.rename_channels"]], "save() (mne.channels.digmontage method)": [[311, "mne.channels.DigMontage.save"]], "layout (class in mne.channels)": [[312, "mne.channels.Layout"]], "plot() (mne.channels.layout method)": [[312, "mne.channels.Layout.plot"]], "save() (mne.channels.layout method)": [[312, "mne.channels.Layout.save"]], "combine_channels() (in module mne.channels)": [[313, "mne.channels.combine_channels"]], "compute_dev_head_t() (in module mne.channels)": [[314, "mne.channels.compute_dev_head_t"]], "compute_native_head_t() (in module mne.channels)": [[315, "mne.channels.compute_native_head_t"]], "equalize_channels() (in module mne.channels)": [[316, "mne.channels.equalize_channels"]], "find_ch_adjacency() (in module mne.channels)": [[317, "mne.channels.find_ch_adjacency"]], "find_layout() (in module mne.channels)": [[318, "mne.channels.find_layout"]], "fix_mag_coil_types() (in module mne.channels)": [[319, "mne.channels.fix_mag_coil_types"]], "generate_2d_layout() (in module mne.channels)": [[320, "mne.channels.generate_2d_layout"]], "get_builtin_ch_adjacencies() (in module mne.channels)": [[321, "mne.channels.get_builtin_ch_adjacencies"]], "get_builtin_montages() (in module mne.channels)": [[322, "mne.channels.get_builtin_montages"]], "make_1020_channel_selections() (in module mne.channels)": [[323, "mne.channels.make_1020_channel_selections"]], "make_dig_montage() (in module mne.channels)": [[324, "mne.channels.make_dig_montage"]], "make_eeg_layout() (in module mne.channels)": [[325, "mne.channels.make_eeg_layout"]], "make_grid_layout() (in module mne.channels)": [[326, "mne.channels.make_grid_layout"]], "make_standard_montage() (in module mne.channels)": [[327, "mne.channels.make_standard_montage"]], "read_ch_adjacency() (in module mne.channels)": [[328, "mne.channels.read_ch_adjacency"]], "read_custom_montage() (in module mne.channels)": [[329, "mne.channels.read_custom_montage"]], "read_dig_captrak() (in module mne.channels)": [[330, "mne.channels.read_dig_captrak"]], "read_dig_dat() (in module mne.channels)": [[331, "mne.channels.read_dig_dat"]], "read_dig_egi() (in module mne.channels)": [[332, "mne.channels.read_dig_egi"]], "read_dig_fif() (in module mne.channels)": [[333, "mne.channels.read_dig_fif"]], "read_dig_hpts() (in module mne.channels)": [[334, "mne.channels.read_dig_hpts"]], "read_dig_localite() (in module mne.channels)": [[335, "mne.channels.read_dig_localite"]], "read_dig_polhemus_isotrak() (in module mne.channels)": [[336, "mne.channels.read_dig_polhemus_isotrak"]], "read_layout() (in module mne.channels)": [[337, "mne.channels.read_layout"]], "read_polhemus_fastscan() (in module mne.channels)": [[338, "mne.channels.read_polhemus_fastscan"]], "rename_channels() (in module mne.channels)": [[339, "mne.channels.rename_channels"]], "compute_chpi_amplitudes() (in module mne.chpi)": [[340, "mne.chpi.compute_chpi_amplitudes"]], "compute_chpi_locs() (in module mne.chpi)": [[341, "mne.chpi.compute_chpi_locs"]], "compute_chpi_snr() (in module mne.chpi)": [[342, "mne.chpi.compute_chpi_snr"]], "compute_head_pos() (in module mne.chpi)": [[343, "mne.chpi.compute_head_pos"]], "extract_chpi_locs_ctf() (in module mne.chpi)": [[344, "mne.chpi.extract_chpi_locs_ctf"]], "extract_chpi_locs_kit() (in module mne.chpi)": [[345, "mne.chpi.extract_chpi_locs_kit"]], "filter_chpi() (in module mne.chpi)": [[346, "mne.chpi.filter_chpi"]], "get_active_chpi() (in module mne.chpi)": [[347, "mne.chpi.get_active_chpi"]], "get_chpi_info() (in module mne.chpi)": [[348, "mne.chpi.get_chpi_info"]], "head_pos_to_trans_rot_t() (in module mne.chpi)": [[349, "mne.chpi.head_pos_to_trans_rot_t"]], "read_head_pos() (in module mne.chpi)": [[350, "mne.chpi.read_head_pos"]], "write_head_pos() (in module mne.chpi)": [[351, "mne.chpi.write_head_pos"]], "combine_evoked() (in module mne)": [[352, "mne.combine_evoked"]], "compute_covariance() (in module mne)": [[353, "mne.compute_covariance"]], "compute_proj_epochs() (in module mne)": [[354, "mne.compute_proj_epochs"]], "compute_proj_evoked() (in module mne)": [[355, "mne.compute_proj_evoked"]], "compute_proj_raw() (in module mne)": [[356, "mne.compute_proj_raw"]], "compute_rank() (in module mne)": [[357, "mne.compute_rank"]], "compute_raw_covariance() (in module mne)": [[358, "mne.compute_raw_covariance"]], "compute_source_morph() (in module mne)": [[359, "mne.compute_source_morph"]], "concatenate_epochs() (in module mne)": [[360, "mne.concatenate_epochs"]], "concatenate_events() (in module mne)": [[361, "mne.concatenate_events"]], "concatenate_raws() (in module mne)": [[362, "mne.concatenate_raws"]], "convert_forward_solution() (in module mne)": [[363, "mne.convert_forward_solution"]], "coregistration (class in mne.coreg)": [[364, "mne.coreg.Coregistration"]], "compute_dig_mri_distances() (mne.coreg.coregistration method)": [[364, "mne.coreg.Coregistration.compute_dig_mri_distances"]], "fit_fiducials() (mne.coreg.coregistration method)": [[364, "mne.coreg.Coregistration.fit_fiducials"]], "fit_icp() (mne.coreg.coregistration method)": [[364, "mne.coreg.Coregistration.fit_icp"]], "omit_head_shape_points() (mne.coreg.coregistration method)": [[364, "mne.coreg.Coregistration.omit_head_shape_points"]], "reset() (mne.coreg.coregistration method)": [[364, "mne.coreg.Coregistration.reset"]], "scale (mne.coreg.coregistration property)": [[364, "mne.coreg.Coregistration.scale"]], "set_fid_match() (mne.coreg.coregistration method)": [[364, "mne.coreg.Coregistration.set_fid_match"]], "set_grow_hair() (mne.coreg.coregistration method)": [[364, "mne.coreg.Coregistration.set_grow_hair"]], "set_rotation() (mne.coreg.coregistration method)": [[364, "mne.coreg.Coregistration.set_rotation"]], "set_scale() (mne.coreg.coregistration method)": [[364, "mne.coreg.Coregistration.set_scale"]], "set_scale_mode() (mne.coreg.coregistration method)": [[364, "mne.coreg.Coregistration.set_scale_mode"]], "set_translation() (mne.coreg.coregistration method)": [[364, "mne.coreg.Coregistration.set_translation"]], "trans (mne.coreg.coregistration property)": [[364, "mne.coreg.Coregistration.trans"]], "estimate_head_mri_t() (in module mne.coreg)": [[365, "mne.coreg.estimate_head_mri_t"]], "get_mni_fiducials() (in module mne.coreg)": [[366, "mne.coreg.get_mni_fiducials"]], "count_events() (in module mne)": [[367, "mne.count_events"]], "compute_whitener() (in module mne.cov)": [[368, "mne.cov.compute_whitener"]], "prepare_noise_cov() (in module mne.cov)": [[369, "mne.cov.prepare_noise_cov"]], "regularize() (in module mne.cov)": [[370, "mne.cov.regularize"]], "create_default_subject() (in module mne)": [[371, "mne.create_default_subject"]], "create_info() (in module mne)": [[372, "mne.create_info"]], "get_cuda_memory() (in module mne.cuda)": [[373, "mne.cuda.get_cuda_memory"]], "init_cuda() (in module mne.cuda)": [[374, "mne.cuda.init_cuda"]], "set_cuda_device() (in module mne.cuda)": [[375, "mne.cuda.set_cuda_device"]], "data_path() (in module mne.datasets.brainstorm.bst_auditory)": [[376, "mne.datasets.brainstorm.bst_auditory.data_path"]], "data_path() (in module mne.datasets.brainstorm.bst_raw)": [[377, "mne.datasets.brainstorm.bst_raw.data_path"]], "data_path() (in module mne.datasets.brainstorm.bst_resting)": [[378, "mne.datasets.brainstorm.bst_resting.data_path"]], "load_data() (in module mne.datasets.eegbci)": [[379, "mne.datasets.eegbci.load_data"]], "standardize() (in module mne.datasets.eegbci)": [[380, "mne.datasets.eegbci.standardize"]], "data_path() (in module mne.datasets.epilepsy_ecog)": [[381, "mne.datasets.epilepsy_ecog.data_path"]], "data_path() (in module mne.datasets.erp_core)": [[382, "mne.datasets.erp_core.data_path"]], "fetch_aparc_sub_parcellation() (in module mne.datasets)": [[383, "mne.datasets.fetch_aparc_sub_parcellation"]], "fetch_dataset() (in module mne.datasets)": [[384, "mne.datasets.fetch_dataset"]], "fetch_fsaverage() (in module mne.datasets)": [[385, "mne.datasets.fetch_fsaverage"]], "fetch_hcp_mmp_parcellation() (in module mne.datasets)": [[386, "mne.datasets.fetch_hcp_mmp_parcellation"]], "fetch_infant_template() (in module mne.datasets)": [[387, "mne.datasets.fetch_infant_template"]], "fetch_phantom() (in module mne.datasets)": [[388, "mne.datasets.fetch_phantom"]], "data_path() (in module mne.datasets.fnirs_motor)": [[389, "mne.datasets.fnirs_motor.data_path"]], "has_dataset() (in module mne.datasets)": [[390, "mne.datasets.has_dataset"]], "data_path() (in module mne.datasets.hf_sef)": [[391, "mne.datasets.hf_sef.data_path"]], "data_path() (in module mne.datasets.kiloword)": [[392, "mne.datasets.kiloword.data_path"]], "load_data() (in module mne.datasets.limo)": [[393, "mne.datasets.limo.load_data"]], "data_path() (in module mne.datasets.misc)": [[394, "mne.datasets.misc.data_path"]], "data_path() (in module mne.datasets.mtrf)": [[395, "mne.datasets.mtrf.data_path"]], "data_path() (in module mne.datasets.multimodal)": [[396, "mne.datasets.multimodal.data_path"]], "data_path() (in module mne.datasets.opm)": [[397, "mne.datasets.opm.data_path"]], "data_path() (in module mne.datasets.phantom_4dbti)": [[398, "mne.datasets.phantom_4dbti.data_path"]], "data_path() (in module mne.datasets.refmeg_noise)": [[399, "mne.datasets.refmeg_noise.data_path"]], "data_path() (in module mne.datasets.sample)": [[400, "mne.datasets.sample.data_path"]], "fetch_data() (in module mne.datasets.sleep_physionet.age)": [[401, "mne.datasets.sleep_physionet.age.fetch_data"]], "fetch_data() (in module mne.datasets.sleep_physionet.temazepam)": [[402, "mne.datasets.sleep_physionet.temazepam.fetch_data"]], "data_path() (in module mne.datasets.somato)": [[403, "mne.datasets.somato.data_path"]], "data_path() (in module mne.datasets.spm_face)": [[404, "mne.datasets.spm_face.data_path"]], "data_path() (in module mne.datasets.ssvep)": [[405, "mne.datasets.ssvep.data_path"]], "data_path() (in module mne.datasets.ucl_opm_auditory)": [[406, "mne.datasets.ucl_opm_auditory.data_path"]], "data_path() (in module mne.datasets.visual_92_categories)": [[407, "mne.datasets.visual_92_categories.data_path"]], "decimate_surface() (in module mne)": [[408, "mne.decimate_surface"]], "csp (class in mne.decoding)": [[409, "mne.decoding.CSP"]], "fit() (mne.decoding.csp method)": [[409, "mne.decoding.CSP.fit"]], "fit_transform() (mne.decoding.csp method)": [[409, "mne.decoding.CSP.fit_transform"]], "get_params() (mne.decoding.csp method)": [[409, "mne.decoding.CSP.get_params"]], "plot_filters() (mne.decoding.csp method)": [[409, "mne.decoding.CSP.plot_filters"]], "plot_patterns() (mne.decoding.csp method)": [[409, "mne.decoding.CSP.plot_patterns"]], "set_params() (mne.decoding.csp method)": [[409, "mne.decoding.CSP.set_params"]], "transform() (mne.decoding.csp method)": [[409, "mne.decoding.CSP.transform"]], "ems (class in mne.decoding)": [[410, "mne.decoding.EMS"]], "fit() (mne.decoding.ems method)": [[410, "mne.decoding.EMS.fit"]], "fit_transform() (mne.decoding.ems method)": [[410, "mne.decoding.EMS.fit_transform"]], "get_params() (mne.decoding.ems method)": [[410, "mne.decoding.EMS.get_params"]], "set_params() (mne.decoding.ems method)": [[410, "mne.decoding.EMS.set_params"]], "transform() (mne.decoding.ems method)": [[410, "mne.decoding.EMS.transform"]], "filterestimator (class in mne.decoding)": [[411, "mne.decoding.FilterEstimator"]], "fit() (mne.decoding.filterestimator method)": [[411, "mne.decoding.FilterEstimator.fit"]], "fit_transform() (mne.decoding.filterestimator method)": [[411, "mne.decoding.FilterEstimator.fit_transform"]], "transform() (mne.decoding.filterestimator method)": [[411, "mne.decoding.FilterEstimator.transform"]], "generalizingestimator (class in mne.decoding)": [[412, "mne.decoding.GeneralizingEstimator"]], "decision_function() (mne.decoding.generalizingestimator method)": [[412, "mne.decoding.GeneralizingEstimator.decision_function"]], "fit() (mne.decoding.generalizingestimator method)": [[412, "mne.decoding.GeneralizingEstimator.fit"]], "fit_transform() (mne.decoding.generalizingestimator method)": [[412, "mne.decoding.GeneralizingEstimator.fit_transform"]], "get_params() (mne.decoding.generalizingestimator method)": [[412, "mne.decoding.GeneralizingEstimator.get_params"]], "predict() (mne.decoding.generalizingestimator method)": [[412, "mne.decoding.GeneralizingEstimator.predict"]], "predict_proba() (mne.decoding.generalizingestimator method)": [[412, "mne.decoding.GeneralizingEstimator.predict_proba"]], "score() (mne.decoding.generalizingestimator method)": [[412, "mne.decoding.GeneralizingEstimator.score"]], "set_params() (mne.decoding.generalizingestimator method)": [[412, "mne.decoding.GeneralizingEstimator.set_params"]], "transform() (mne.decoding.generalizingestimator method)": [[412, "mne.decoding.GeneralizingEstimator.transform"]], "linearmodel (class in mne.decoding)": [[413, "mne.decoding.LinearModel"]], "decision_function() (mne.decoding.linearmodel method)": [[413, "mne.decoding.LinearModel.decision_function"]], "fit() (mne.decoding.linearmodel method)": [[413, "mne.decoding.LinearModel.fit"]], "fit_transform() (mne.decoding.linearmodel method)": [[413, "mne.decoding.LinearModel.fit_transform"]], "get_params() (mne.decoding.linearmodel method)": [[413, "mne.decoding.LinearModel.get_params"]], "predict() (mne.decoding.linearmodel method)": [[413, "mne.decoding.LinearModel.predict"]], "predict_proba() (mne.decoding.linearmodel method)": [[413, "mne.decoding.LinearModel.predict_proba"]], "score() (mne.decoding.linearmodel method)": [[413, "mne.decoding.LinearModel.score"]], "set_params() (mne.decoding.linearmodel method)": [[413, "mne.decoding.LinearModel.set_params"]], "transform() (mne.decoding.linearmodel method)": [[413, "mne.decoding.LinearModel.transform"]], "psdestimator (class in mne.decoding)": [[414, "mne.decoding.PSDEstimator"]], "fit() (mne.decoding.psdestimator method)": [[414, "mne.decoding.PSDEstimator.fit"]], "fit_transform() (mne.decoding.psdestimator method)": [[414, "mne.decoding.PSDEstimator.fit_transform"]], "transform() (mne.decoding.psdestimator method)": [[414, "mne.decoding.PSDEstimator.transform"]], "receptivefield (class in mne.decoding)": [[415, "mne.decoding.ReceptiveField"]], "fit() (mne.decoding.receptivefield method)": [[415, "mne.decoding.ReceptiveField.fit"]], "get_params() (mne.decoding.receptivefield method)": [[415, "mne.decoding.ReceptiveField.get_params"]], "predict() (mne.decoding.receptivefield method)": [[415, "mne.decoding.ReceptiveField.predict"]], "score() (mne.decoding.receptivefield method)": [[415, "mne.decoding.ReceptiveField.score"]], "set_params() (mne.decoding.receptivefield method)": [[415, "mne.decoding.ReceptiveField.set_params"]], "spoc (class in mne.decoding)": [[416, "mne.decoding.SPoC"]], "fit() (mne.decoding.spoc method)": [[416, "mne.decoding.SPoC.fit"]], "fit_transform() (mne.decoding.spoc method)": [[416, "mne.decoding.SPoC.fit_transform"]], "get_params() (mne.decoding.spoc method)": [[416, "mne.decoding.SPoC.get_params"]], "plot_filters() (mne.decoding.spoc method)": [[416, "mne.decoding.SPoC.plot_filters"]], "plot_patterns() (mne.decoding.spoc method)": [[416, "mne.decoding.SPoC.plot_patterns"]], "set_params() (mne.decoding.spoc method)": [[416, "mne.decoding.SPoC.set_params"]], "transform() (mne.decoding.spoc method)": [[416, "mne.decoding.SPoC.transform"]], "ssd (class in mne.decoding)": [[417, "mne.decoding.SSD"]], "apply() (mne.decoding.ssd method)": [[417, "mne.decoding.SSD.apply"]], "fit() (mne.decoding.ssd method)": [[417, "mne.decoding.SSD.fit"]], "fit_transform() (mne.decoding.ssd method)": [[417, "mne.decoding.SSD.fit_transform"]], "get_params() (mne.decoding.ssd method)": [[417, "mne.decoding.SSD.get_params"]], "get_spectral_ratio() (mne.decoding.ssd method)": [[417, "mne.decoding.SSD.get_spectral_ratio"]], "inverse_transform() (mne.decoding.ssd method)": [[417, "mne.decoding.SSD.inverse_transform"]], "set_params() (mne.decoding.ssd method)": [[417, "mne.decoding.SSD.set_params"]], "transform() (mne.decoding.ssd method)": [[417, "mne.decoding.SSD.transform"]], "scaler (class in mne.decoding)": [[418, "mne.decoding.Scaler"]], "fit() (mne.decoding.scaler method)": [[418, "mne.decoding.Scaler.fit"]], "fit_transform() (mne.decoding.scaler method)": [[418, "mne.decoding.Scaler.fit_transform"]], "get_params() (mne.decoding.scaler method)": [[418, "mne.decoding.Scaler.get_params"]], "inverse_transform() (mne.decoding.scaler method)": [[418, "mne.decoding.Scaler.inverse_transform"]], "set_params() (mne.decoding.scaler method)": [[418, "mne.decoding.Scaler.set_params"]], "transform() (mne.decoding.scaler method)": [[418, "mne.decoding.Scaler.transform"]], "slidingestimator (class in mne.decoding)": [[419, "mne.decoding.SlidingEstimator"]], "decision_function() (mne.decoding.slidingestimator method)": [[419, "mne.decoding.SlidingEstimator.decision_function"]], "fit() (mne.decoding.slidingestimator method)": [[419, "mne.decoding.SlidingEstimator.fit"]], "fit_transform() (mne.decoding.slidingestimator method)": [[419, "mne.decoding.SlidingEstimator.fit_transform"]], "get_params() (mne.decoding.slidingestimator method)": [[419, "mne.decoding.SlidingEstimator.get_params"]], "predict() (mne.decoding.slidingestimator method)": [[419, "mne.decoding.SlidingEstimator.predict"]], "predict_proba() (mne.decoding.slidingestimator method)": [[419, "mne.decoding.SlidingEstimator.predict_proba"]], "score() (mne.decoding.slidingestimator method)": [[419, "mne.decoding.SlidingEstimator.score"]], "set_params() (mne.decoding.slidingestimator method)": [[419, "mne.decoding.SlidingEstimator.set_params"]], "transform() (mne.decoding.slidingestimator method)": [[419, "mne.decoding.SlidingEstimator.transform"]], "temporalfilter (class in mne.decoding)": [[420, "mne.decoding.TemporalFilter"]], "fit() (mne.decoding.temporalfilter method)": [[420, "mne.decoding.TemporalFilter.fit"]], "fit_transform() (mne.decoding.temporalfilter method)": [[420, "mne.decoding.TemporalFilter.fit_transform"]], "transform() (mne.decoding.temporalfilter method)": [[420, "mne.decoding.TemporalFilter.transform"]], "timedelayingridge (class in mne.decoding)": [[421, "mne.decoding.TimeDelayingRidge"]], "fit() (mne.decoding.timedelayingridge method)": [[421, "mne.decoding.TimeDelayingRidge.fit"]], "get_params() (mne.decoding.timedelayingridge method)": [[421, "mne.decoding.TimeDelayingRidge.get_params"]], "predict() (mne.decoding.timedelayingridge method)": [[421, "mne.decoding.TimeDelayingRidge.predict"]], "set_params() (mne.decoding.timedelayingridge method)": [[421, "mne.decoding.TimeDelayingRidge.set_params"]], "timefrequency (class in mne.decoding)": [[422, "mne.decoding.TimeFrequency"]], "fit() (mne.decoding.timefrequency method)": [[422, "mne.decoding.TimeFrequency.fit"]], "fit_transform() (mne.decoding.timefrequency method)": [[422, "mne.decoding.TimeFrequency.fit_transform"]], "get_params() (mne.decoding.timefrequency method)": [[422, "mne.decoding.TimeFrequency.get_params"]], "set_params() (mne.decoding.timefrequency method)": [[422, "mne.decoding.TimeFrequency.set_params"]], "transform() (mne.decoding.timefrequency method)": [[422, "mne.decoding.TimeFrequency.transform"]], "unsupervisedspatialfilter (class in mne.decoding)": [[423, "mne.decoding.UnsupervisedSpatialFilter"]], "fit() (mne.decoding.unsupervisedspatialfilter method)": [[423, "mne.decoding.UnsupervisedSpatialFilter.fit"]], "fit_transform() (mne.decoding.unsupervisedspatialfilter method)": [[423, "mne.decoding.UnsupervisedSpatialFilter.fit_transform"]], "get_params() (mne.decoding.unsupervisedspatialfilter method)": [[423, "mne.decoding.UnsupervisedSpatialFilter.get_params"]], "inverse_transform() (mne.decoding.unsupervisedspatialfilter method)": [[423, "mne.decoding.UnsupervisedSpatialFilter.inverse_transform"]], "set_params() (mne.decoding.unsupervisedspatialfilter method)": [[423, "mne.decoding.UnsupervisedSpatialFilter.set_params"]], "transform() (mne.decoding.unsupervisedspatialfilter method)": [[423, "mne.decoding.UnsupervisedSpatialFilter.transform"]], "vectorizer (class in mne.decoding)": [[424, "mne.decoding.Vectorizer"]], "fit() (mne.decoding.vectorizer method)": [[424, "mne.decoding.Vectorizer.fit"]], "fit_transform() (mne.decoding.vectorizer method)": [[424, "mne.decoding.Vectorizer.fit_transform"]], "inverse_transform() (mne.decoding.vectorizer method)": [[424, "mne.decoding.Vectorizer.inverse_transform"]], "transform() (mne.decoding.vectorizer method)": [[424, "mne.decoding.Vectorizer.transform"]], "compute_ems() (in module mne.decoding)": [[425, "mne.decoding.compute_ems"]], "cross_val_multiscore() (in module mne.decoding)": [[426, "mne.decoding.cross_val_multiscore"]], "get_coef() (in module mne.decoding)": [[427, "mne.decoding.get_coef"]], "dig_mri_distances() (in module mne)": [[428, "mne.dig_mri_distances"]], "get_phantom_dipoles() (in module mne.dipole)": [[429, "mne.dipole.get_phantom_dipoles"]], "average_movements() (in module mne.epochs)": [[430, "mne.epochs.average_movements"]], "combine_event_ids() (in module mne.epochs)": [[431, "mne.epochs.combine_event_ids"]], "equalize_epoch_counts() (in module mne.epochs)": [[432, "mne.epochs.equalize_epoch_counts"]], "make_metadata() (in module mne.epochs)": [[433, "mne.epochs.make_metadata"]], "equalize_channels() (in module mne)": [[434, "mne.equalize_channels"]], "define_target_events() (in module mne.event)": [[435, "mne.event.define_target_events"]], "match_event_names() (in module mne.event)": [[436, "mne.event.match_event_names"]], "shift_time_events() (in module mne.event)": [[437, "mne.event.shift_time_events"]], "events_from_annotations() (in module mne)": [[438, "mne.events_from_annotations"]], "export_epochs() (in module mne.export)": [[439, "mne.export.export_epochs"]], "export_evokeds() (in module mne.export)": [[440, "mne.export.export_evokeds"]], "export_evokeds_mff() (in module mne.export)": [[441, "mne.export.export_evokeds_mff"]], "export_raw() (in module mne.export)": [[442, "mne.export.export_raw"]], "extract_label_time_course() (in module mne)": [[443, "mne.extract_label_time_course"]], "construct_iir_filter() (in module mne.filter)": [[444, "mne.filter.construct_iir_filter"]], "create_filter() (in module mne.filter)": [[445, "mne.filter.create_filter"]], "estimate_ringing_samples() (in module mne.filter)": [[446, "mne.filter.estimate_ringing_samples"]], "filter_data() (in module mne.filter)": [[447, "mne.filter.filter_data"]], "notch_filter() (in module mne.filter)": [[448, "mne.filter.notch_filter"]], "resample() (in module mne.filter)": [[449, "mne.filter.resample"]], "find_events() (in module mne)": [[450, "mne.find_events"]], "find_stim_steps() (in module mne)": [[451, "mne.find_stim_steps"]], "fit_dipole() (in module mne)": [[452, "mne.fit_dipole"]], "compute_depth_prior() (in module mne.forward)": [[453, "mne.forward.compute_depth_prior"]], "compute_orient_prior() (in module mne.forward)": [[454, "mne.forward.compute_orient_prior"]], "restrict_forward_to_label() (in module mne.forward)": [[455, "mne.forward.restrict_forward_to_label"]], "restrict_forward_to_stc() (in module mne.forward)": [[456, "mne.forward.restrict_forward_to_stc"]], "get_config() (in module mne)": [[457, "mne.get_config"]], "get_config_path() (in module mne)": [[458, "mne.get_config_path"]], "get_head_surf() (in module mne)": [[459, "mne.get_head_surf"]], "get_meg_helmet_surf() (in module mne)": [[460, "mne.get_meg_helmet_surf"]], "get_montage_volume_labels() (in module mne)": [[461, "mne.get_montage_volume_labels"]], "get_volume_labels_from_aseg() (in module mne)": [[462, "mne.get_volume_labels_from_aseg"]], "get_volume_labels_from_src() (in module mne)": [[463, "mne.get_volume_labels_from_src"]], "grade_to_tris() (in module mne)": [[464, "mne.grade_to_tris"]], "grade_to_vertices() (in module mne)": [[465, "mne.grade_to_vertices"]], "grand_average() (in module mne)": [[466, "mne.grand_average"]], "grow_labels() (in module mne)": [[467, "mne.grow_labels"]], "coregistration() (in module mne.gui)": [[468, "mne.gui.coregistration"]], "locate_ieeg() (in module mne.gui)": [[469, "mne.gui.locate_ieeg"]], "head_to_mni() (in module mne)": [[470, "mne.head_to_mni"]], "head_to_mri() (in module mne)": [[471, "mne.head_to_mri"]], "gamma_map() (in module mne.inverse_sparse)": [[472, "mne.inverse_sparse.gamma_map"]], "make_stc_from_dipoles() (in module mne.inverse_sparse)": [[473, "mne.inverse_sparse.make_stc_from_dipoles"]], "mixed_norm() (in module mne.inverse_sparse)": [[474, "mne.inverse_sparse.mixed_norm"]], "tf_mixed_norm() (in module mne.inverse_sparse)": [[475, "mne.inverse_sparse.tf_mixed_norm"]], "baseraw (class in mne.io)": [[476, "mne.io.BaseRaw"]], "raw (class in mne.io)": [[477, "mne.io.Raw"]], "__contains__() (mne.io.raw method)": [[477, "mne.io.Raw.__contains__"]], "__getitem__() (mne.io.raw method)": [[477, "mne.io.Raw.__getitem__"]], "__len__() (mne.io.raw method)": [[477, "mne.io.Raw.__len__"]], "acqparser (mne.io.raw property)": [[477, "mne.io.Raw.acqparser"]], "add_channels() (mne.io.raw method)": [[477, "mne.io.Raw.add_channels"]], "add_events() (mne.io.raw method)": [[477, "mne.io.Raw.add_events"]], "add_proj() (mne.io.raw method)": [[477, "mne.io.Raw.add_proj"]], "add_reference_channels() (mne.io.raw method)": [[477, "mne.io.Raw.add_reference_channels"]], "annotations (mne.io.raw property)": [[477, "mne.io.Raw.annotations"]], "anonymize() (mne.io.raw method)": [[477, "mne.io.Raw.anonymize"]], "append() (mne.io.raw method)": [[477, "mne.io.Raw.append"]], "apply_function() (mne.io.raw method)": [[477, "mne.io.Raw.apply_function"]], "apply_gradient_compensation() (mne.io.raw method)": [[477, "mne.io.Raw.apply_gradient_compensation"]], "apply_hilbert() (mne.io.raw method)": [[477, "mne.io.Raw.apply_hilbert"]], "apply_proj() (mne.io.raw method)": [[477, "mne.io.Raw.apply_proj"]], "ch_names (mne.io.raw property)": [[477, "mne.io.Raw.ch_names"]], "close() (mne.io.raw method)": [[477, "mne.io.Raw.close"]], "compensation_grade (mne.io.raw property)": [[477, "mne.io.Raw.compensation_grade"]], "compute_psd() (mne.io.raw method)": [[477, "mne.io.Raw.compute_psd"]], "copy() (mne.io.raw method)": [[477, "mne.io.Raw.copy"]], "crop() (mne.io.raw method)": [[477, "mne.io.Raw.crop"]], "crop_by_annotations() (mne.io.raw method)": [[477, "mne.io.Raw.crop_by_annotations"]], "decimate() (mne.io.raw method)": [[477, "mne.io.Raw.decimate"]], "del_proj() (mne.io.raw method)": [[477, "mne.io.Raw.del_proj"]], "describe() (mne.io.raw method)": [[477, "mne.io.Raw.describe"]], "drop_channels() (mne.io.raw method)": [[477, "mne.io.Raw.drop_channels"]], "export() (mne.io.raw method)": [[477, "mne.io.Raw.export"]], "filenames (mne.io.raw property)": [[477, "mne.io.Raw.filenames"]], "filter() (mne.io.raw method)": [[477, "mne.io.Raw.filter"]], "first_samp (mne.io.raw property)": [[477, "mne.io.Raw.first_samp"]], "first_time (mne.io.raw property)": [[477, "mne.io.Raw.first_time"]], "fix_mag_coil_types() (mne.io.raw method)": [[477, "mne.io.Raw.fix_mag_coil_types"]], "get_channel_types() (mne.io.raw method)": [[477, "mne.io.Raw.get_channel_types"]], "get_data() (mne.io.raw method)": [[477, "mne.io.Raw.get_data"]], "get_montage() (mne.io.raw method)": [[477, "mne.io.Raw.get_montage"]], "interpolate_bads() (mne.io.raw method)": [[477, "mne.io.Raw.interpolate_bads"]], "last_samp (mne.io.raw property)": [[477, "mne.io.Raw.last_samp"]], "load_bad_channels() (mne.io.raw method)": [[477, "mne.io.Raw.load_bad_channels"]], "load_data() (mne.io.raw method)": [[477, "mne.io.Raw.load_data"]], "n_times (mne.io.raw property)": [[477, "mne.io.Raw.n_times"]], "notch_filter() (mne.io.raw method)": [[477, "mne.io.Raw.notch_filter"]], "pick() (mne.io.raw method)": [[477, "mne.io.Raw.pick"]], "pick_channels() (mne.io.raw method)": [[477, "mne.io.Raw.pick_channels"]], "pick_types() (mne.io.raw method)": [[477, "mne.io.Raw.pick_types"]], "plot() (mne.io.raw method)": [[477, "mne.io.Raw.plot"]], "plot_projs_topomap() (mne.io.raw method)": [[477, "mne.io.Raw.plot_projs_topomap"]], "plot_psd() (mne.io.raw method)": [[477, "mne.io.Raw.plot_psd"]], "plot_psd_topo() (mne.io.raw method)": [[477, "mne.io.Raw.plot_psd_topo"]], "plot_psd_topomap() (mne.io.raw method)": [[477, "mne.io.Raw.plot_psd_topomap"]], "plot_sensors() (mne.io.raw method)": [[477, "mne.io.Raw.plot_sensors"]], "proj (mne.io.raw property)": [[477, "mne.io.Raw.proj"]], "rename_channels() (mne.io.raw method)": [[477, "mne.io.Raw.rename_channels"]], "reorder_channels() (mne.io.raw method)": [[477, "mne.io.Raw.reorder_channels"]], "resample() (mne.io.raw method)": [[477, "mne.io.Raw.resample"]], "save() (mne.io.raw method)": [[477, "mne.io.Raw.save"]], "savgol_filter() (mne.io.raw method)": [[477, "mne.io.Raw.savgol_filter"]], "set_annotations() (mne.io.raw method)": [[477, "mne.io.Raw.set_annotations"]], "set_channel_types() (mne.io.raw method)": [[477, "mne.io.Raw.set_channel_types"]], "set_eeg_reference() (mne.io.raw method)": [[477, "mne.io.Raw.set_eeg_reference"]], "set_meas_date() (mne.io.raw method)": [[477, "mne.io.Raw.set_meas_date"]], "set_montage() (mne.io.raw method)": [[477, "mne.io.Raw.set_montage"]], "shift_time() (mne.io.raw method)": [[477, "mne.io.Raw.shift_time"]], "time_as_index() (mne.io.raw method)": [[477, "mne.io.Raw.time_as_index"]], "times (mne.io.raw property)": [[477, "mne.io.Raw.times"]], "tmax (mne.io.raw property)": [[477, "mne.io.Raw.tmax"]], "tmin (mne.io.raw property)": [[477, "mne.io.Raw.tmin"]], "to_data_frame() (mne.io.raw method)": [[477, "mne.io.Raw.to_data_frame"]], "rawarray (class in mne.io)": [[478, "mne.io.RawArray"]], "__contains__() (mne.io.rawarray method)": [[478, "mne.io.RawArray.__contains__"]], "__getitem__() (mne.io.rawarray method)": [[478, "mne.io.RawArray.__getitem__"]], "__len__() (mne.io.rawarray method)": [[478, "mne.io.RawArray.__len__"]], "add_channels() (mne.io.rawarray method)": [[478, "mne.io.RawArray.add_channels"]], "add_events() (mne.io.rawarray method)": [[478, "mne.io.RawArray.add_events"]], "add_proj() (mne.io.rawarray method)": [[478, "mne.io.RawArray.add_proj"]], "add_reference_channels() (mne.io.rawarray method)": [[478, "mne.io.RawArray.add_reference_channels"]], "annotations (mne.io.rawarray property)": [[478, "mne.io.RawArray.annotations"]], "anonymize() (mne.io.rawarray method)": [[478, "mne.io.RawArray.anonymize"]], "append() (mne.io.rawarray method)": [[478, "mne.io.RawArray.append"]], "apply_function() (mne.io.rawarray method)": [[478, "mne.io.RawArray.apply_function"]], "apply_gradient_compensation() (mne.io.rawarray method)": [[478, "mne.io.RawArray.apply_gradient_compensation"]], "apply_hilbert() (mne.io.rawarray method)": [[478, "mne.io.RawArray.apply_hilbert"]], "apply_proj() (mne.io.rawarray method)": [[478, "mne.io.RawArray.apply_proj"]], "ch_names (mne.io.rawarray property)": [[478, "mne.io.RawArray.ch_names"]], "close() (mne.io.rawarray method)": [[478, "mne.io.RawArray.close"]], "compensation_grade (mne.io.rawarray property)": [[478, "mne.io.RawArray.compensation_grade"]], "compute_psd() (mne.io.rawarray method)": [[478, "mne.io.RawArray.compute_psd"]], "copy() (mne.io.rawarray method)": [[478, "mne.io.RawArray.copy"]], "crop() (mne.io.rawarray method)": [[478, "mne.io.RawArray.crop"]], "crop_by_annotations() (mne.io.rawarray method)": [[478, "mne.io.RawArray.crop_by_annotations"]], "decimate() (mne.io.rawarray method)": [[478, "mne.io.RawArray.decimate"]], "del_proj() (mne.io.rawarray method)": [[478, "mne.io.RawArray.del_proj"]], "describe() (mne.io.rawarray method)": [[478, "mne.io.RawArray.describe"]], "drop_channels() (mne.io.rawarray method)": [[478, "mne.io.RawArray.drop_channels"]], "export() (mne.io.rawarray method)": [[478, "mne.io.RawArray.export"]], "filenames (mne.io.rawarray property)": [[478, "mne.io.RawArray.filenames"]], "filter() (mne.io.rawarray method)": [[478, "mne.io.RawArray.filter"]], "first_samp (mne.io.rawarray property)": [[478, "mne.io.RawArray.first_samp"]], "first_time (mne.io.rawarray property)": [[478, "mne.io.RawArray.first_time"]], "get_channel_types() (mne.io.rawarray method)": [[478, "mne.io.RawArray.get_channel_types"]], "get_data() (mne.io.rawarray method)": [[478, "mne.io.RawArray.get_data"]], "get_montage() (mne.io.rawarray method)": [[478, "mne.io.RawArray.get_montage"]], "interpolate_bads() (mne.io.rawarray method)": [[478, "mne.io.RawArray.interpolate_bads"]], "last_samp (mne.io.rawarray property)": [[478, "mne.io.RawArray.last_samp"]], "load_bad_channels() (mne.io.rawarray method)": [[478, "mne.io.RawArray.load_bad_channels"]], "load_data() (mne.io.rawarray method)": [[478, "mne.io.RawArray.load_data"]], "n_times (mne.io.rawarray property)": [[478, "mne.io.RawArray.n_times"]], "notch_filter() (mne.io.rawarray method)": [[478, "mne.io.RawArray.notch_filter"]], "pick() (mne.io.rawarray method)": [[478, "mne.io.RawArray.pick"]], "pick_channels() (mne.io.rawarray method)": [[478, "mne.io.RawArray.pick_channels"]], "pick_types() (mne.io.rawarray method)": [[478, "mne.io.RawArray.pick_types"]], "plot() (mne.io.rawarray method)": [[478, "mne.io.RawArray.plot"]], "plot_projs_topomap() (mne.io.rawarray method)": [[478, "mne.io.RawArray.plot_projs_topomap"]], "plot_psd() (mne.io.rawarray method)": [[478, "mne.io.RawArray.plot_psd"]], "plot_psd_topo() (mne.io.rawarray method)": [[478, "mne.io.RawArray.plot_psd_topo"]], "plot_psd_topomap() (mne.io.rawarray method)": [[478, "mne.io.RawArray.plot_psd_topomap"]], "plot_sensors() (mne.io.rawarray method)": [[478, "mne.io.RawArray.plot_sensors"]], "proj (mne.io.rawarray property)": [[478, "mne.io.RawArray.proj"]], "rename_channels() (mne.io.rawarray method)": [[478, "mne.io.RawArray.rename_channels"]], "reorder_channels() (mne.io.rawarray method)": [[478, "mne.io.RawArray.reorder_channels"]], "resample() (mne.io.rawarray method)": [[478, "mne.io.RawArray.resample"]], "save() (mne.io.rawarray method)": [[478, "mne.io.RawArray.save"]], "savgol_filter() (mne.io.rawarray method)": [[478, "mne.io.RawArray.savgol_filter"]], "set_annotations() (mne.io.rawarray method)": [[478, "mne.io.RawArray.set_annotations"]], "set_channel_types() (mne.io.rawarray method)": [[478, "mne.io.RawArray.set_channel_types"]], "set_eeg_reference() (mne.io.rawarray method)": [[478, "mne.io.RawArray.set_eeg_reference"]], "set_meas_date() (mne.io.rawarray method)": [[478, "mne.io.RawArray.set_meas_date"]], "set_montage() (mne.io.rawarray method)": [[478, "mne.io.RawArray.set_montage"]], "shift_time() (mne.io.rawarray method)": [[478, "mne.io.RawArray.shift_time"]], "time_as_index() (mne.io.rawarray method)": [[478, "mne.io.RawArray.time_as_index"]], "times (mne.io.rawarray property)": [[478, "mne.io.RawArray.times"]], "tmax (mne.io.rawarray property)": [[478, "mne.io.RawArray.tmax"]], "tmin (mne.io.rawarray property)": [[478, "mne.io.RawArray.tmin"]], "to_data_frame() (mne.io.rawarray method)": [[478, "mne.io.RawArray.to_data_frame"]], "anonymize_info() (in module mne.io)": [[479, "mne.io.anonymize_info"]], "read_mrk() (in module mne.io.kit)": [[480, "mne.io.kit.read_mrk"]], "read_fiducials() (in module mne.io)": [[481, "mne.io.read_fiducials"]], "read_info() (in module mne.io)": [[482, "mne.io.read_info"]], "read_raw() (in module mne.io)": [[483, "mne.io.read_raw"]], "read_raw_artemis123() (in module mne.io)": [[484, "mne.io.read_raw_artemis123"]], "read_raw_bdf() (in module mne.io)": [[485, "mne.io.read_raw_bdf"]], "read_raw_boxy() (in module mne.io)": [[486, "mne.io.read_raw_boxy"]], "read_raw_brainvision() (in module mne.io)": [[487, "mne.io.read_raw_brainvision"]], "read_raw_bti() (in module mne.io)": [[488, "mne.io.read_raw_bti"]], "read_raw_cnt() (in module mne.io)": [[489, "mne.io.read_raw_cnt"]], "read_raw_ctf() (in module mne.io)": [[490, "mne.io.read_raw_ctf"]], "read_raw_curry() (in module mne.io)": [[491, "mne.io.read_raw_curry"]], "read_raw_edf() (in module mne.io)": [[492, "mne.io.read_raw_edf"]], "read_raw_eeglab() (in module mne.io)": [[493, "mne.io.read_raw_eeglab"]], "read_raw_egi() (in module mne.io)": [[494, "mne.io.read_raw_egi"]], "read_raw_eximia() (in module mne.io)": [[495, "mne.io.read_raw_eximia"]], "read_raw_fieldtrip() (in module mne.io)": [[496, "mne.io.read_raw_fieldtrip"]], "read_raw_fif() (in module mne.io)": [[497, "mne.io.read_raw_fif"]], "read_raw_fil() (in module mne.io)": [[498, "mne.io.read_raw_fil"]], "read_raw_gdf() (in module mne.io)": [[499, "mne.io.read_raw_gdf"]], "read_raw_hitachi() (in module mne.io)": [[500, "mne.io.read_raw_hitachi"]], "read_raw_kit() (in module mne.io)": [[501, "mne.io.read_raw_kit"]], "read_raw_nedf() (in module mne.io)": [[502, "mne.io.read_raw_nedf"]], "read_raw_nicolet() (in module mne.io)": [[503, "mne.io.read_raw_nicolet"]], "read_raw_nihon() (in module mne.io)": [[504, "mne.io.read_raw_nihon"]], "read_raw_nirx() (in module mne.io)": [[505, "mne.io.read_raw_nirx"]], "read_raw_persyst() (in module mne.io)": [[506, "mne.io.read_raw_persyst"]], "read_raw_snirf() (in module mne.io)": [[507, "mne.io.read_raw_snirf"]], "show_fiff() (in module mne.io)": [[508, "mne.io.show_fiff"]], "write_fiducials() (in module mne.io)": [[509, "mne.io.write_fiducials"]], "select_sources() (in module mne.label)": [[510, "mne.label.select_sources"]], "label_sign_flip() (in module mne)": [[511, "mne.label_sign_flip"]], "labels_to_stc() (in module mne)": [[512, "mne.labels_to_stc"]], "make_ad_hoc_cov() (in module mne)": [[513, "mne.make_ad_hoc_cov"]], "make_bem_model() (in module mne)": [[514, "mne.make_bem_model"]], "make_bem_solution() (in module mne)": [[515, "mne.make_bem_solution"]], "make_field_map() (in module mne)": [[516, "mne.make_field_map"]], "make_fixed_length_epochs() (in module mne)": [[517, "mne.make_fixed_length_epochs"]], "make_fixed_length_events() (in module mne)": [[518, "mne.make_fixed_length_events"]], "make_forward_dipole() (in module mne)": [[519, "mne.make_forward_dipole"]], "make_forward_solution() (in module mne)": [[520, "mne.make_forward_solution"]], "make_sphere_model() (in module mne)": [[521, "mne.make_sphere_model"]], "merge_events() (in module mne)": [[522, "mne.merge_events"]], "inverseoperator (class in mne.minimum_norm)": [[523, "mne.minimum_norm.InverseOperator"]], "__contains__() (mne.minimum_norm.inverseoperator method)": [[523, "mne.minimum_norm.InverseOperator.__contains__"]], "__getitem__() (mne.minimum_norm.inverseoperator method)": [[523, "mne.minimum_norm.InverseOperator.__getitem__"]], "__iter__() (mne.minimum_norm.inverseoperator method)": [[523, "mne.minimum_norm.InverseOperator.__iter__"]], "__len__() (mne.minimum_norm.inverseoperator method)": [[523, "mne.minimum_norm.InverseOperator.__len__"]], "clear() (mne.minimum_norm.inverseoperator method)": [[523, "mne.minimum_norm.InverseOperator.clear"]], "copy() (mne.minimum_norm.inverseoperator method)": [[523, "mne.minimum_norm.InverseOperator.copy"]], "fromkeys() (mne.minimum_norm.inverseoperator method)": [[523, "mne.minimum_norm.InverseOperator.fromkeys"]], "get() (mne.minimum_norm.inverseoperator method)": [[523, "mne.minimum_norm.InverseOperator.get"]], "items() (mne.minimum_norm.inverseoperator method)": [[523, "mne.minimum_norm.InverseOperator.items"]], "keys() (mne.minimum_norm.inverseoperator method)": [[523, "mne.minimum_norm.InverseOperator.keys"]], "pop() (mne.minimum_norm.inverseoperator method)": [[523, "mne.minimum_norm.InverseOperator.pop"]], "popitem() (mne.minimum_norm.inverseoperator method)": [[523, "mne.minimum_norm.InverseOperator.popitem"]], "setdefault() (mne.minimum_norm.inverseoperator method)": [[523, "mne.minimum_norm.InverseOperator.setdefault"]], "update() (mne.minimum_norm.inverseoperator method)": [[523, "mne.minimum_norm.InverseOperator.update"]], "values() (mne.minimum_norm.inverseoperator method)": [[523, "mne.minimum_norm.InverseOperator.values"]], "apply_inverse() (in module mne.minimum_norm)": [[524, "mne.minimum_norm.apply_inverse"]], "apply_inverse_cov() (in module mne.minimum_norm)": [[525, "mne.minimum_norm.apply_inverse_cov"]], "apply_inverse_epochs() (in module mne.minimum_norm)": [[526, "mne.minimum_norm.apply_inverse_epochs"]], "apply_inverse_raw() (in module mne.minimum_norm)": [[527, "mne.minimum_norm.apply_inverse_raw"]], "apply_inverse_tfr_epochs() (in module mne.minimum_norm)": [[528, "mne.minimum_norm.apply_inverse_tfr_epochs"]], "compute_rank_inverse() (in module mne.minimum_norm)": [[529, "mne.minimum_norm.compute_rank_inverse"]], "compute_source_psd() (in module mne.minimum_norm)": [[530, "mne.minimum_norm.compute_source_psd"]], "compute_source_psd_epochs() (in module mne.minimum_norm)": [[531, "mne.minimum_norm.compute_source_psd_epochs"]], "estimate_snr() (in module mne.minimum_norm)": [[532, "mne.minimum_norm.estimate_snr"]], "get_cross_talk() (in module mne.minimum_norm)": [[533, "mne.minimum_norm.get_cross_talk"]], "get_point_spread() (in module mne.minimum_norm)": [[534, "mne.minimum_norm.get_point_spread"]], "make_inverse_operator() (in module mne.minimum_norm)": [[535, "mne.minimum_norm.make_inverse_operator"]], "make_inverse_resolution_matrix() (in module mne.minimum_norm)": [[536, "mne.minimum_norm.make_inverse_resolution_matrix"]], "prepare_inverse_operator() (in module mne.minimum_norm)": [[537, "mne.minimum_norm.prepare_inverse_operator"]], "read_inverse_operator() (in module mne.minimum_norm)": [[538, "mne.minimum_norm.read_inverse_operator"]], "resolution_metrics() (in module mne.minimum_norm)": [[539, "mne.minimum_norm.resolution_metrics"]], "source_band_induced_power() (in module mne.minimum_norm)": [[540, "mne.minimum_norm.source_band_induced_power"]], "source_induced_power() (in module mne.minimum_norm)": [[541, "mne.minimum_norm.source_induced_power"]], "write_inverse_operator() (in module mne.minimum_norm)": [[542, "mne.minimum_norm.write_inverse_operator"]], "morph_labels() (in module mne)": [[543, "mne.morph_labels"]], "morph_source_spaces() (in module mne)": [[544, "mne.morph_source_spaces"]], "open_docs() (in module mne)": [[545, "mne.open_docs"]], "open_report() (in module mne)": [[546, "mne.open_report"]], "parse_config() (in module mne)": [[547, "mne.parse_config"]], "pick_channels() (in module mne)": [[548, "mne.pick_channels"]], "pick_channels_cov() (in module mne)": [[549, "mne.pick_channels_cov"]], "pick_channels_forward() (in module mne)": [[550, "mne.pick_channels_forward"]], "pick_channels_regexp() (in module mne)": [[551, "mne.pick_channels_regexp"]], "pick_events() (in module mne)": [[552, "mne.pick_events"]], "pick_info() (in module mne)": [[553, "mne.pick_info"]], "pick_types() (in module mne)": [[554, "mne.pick_types"]], "pick_types_forward() (in module mne)": [[555, "mne.pick_types_forward"]], "eogregression (class in mne.preprocessing)": [[556, "mne.preprocessing.EOGRegression"]], "apply() (mne.preprocessing.eogregression method)": [[556, "mne.preprocessing.EOGRegression.apply"]], "fit() (mne.preprocessing.eogregression method)": [[556, "mne.preprocessing.EOGRegression.fit"]], "plot() (mne.preprocessing.eogregression method)": [[556, "mne.preprocessing.EOGRegression.plot"]], "save() (mne.preprocessing.eogregression method)": [[556, "mne.preprocessing.EOGRegression.save"]], "ica (class in mne.preprocessing)": [[557, "mne.preprocessing.ICA"]], "__contains__() (mne.preprocessing.ica method)": [[557, "mne.preprocessing.ICA.__contains__"]], "apply() (mne.preprocessing.ica method)": [[557, "mne.preprocessing.ICA.apply"]], "compensation_grade (mne.preprocessing.ica property)": [[557, "mne.preprocessing.ICA.compensation_grade"]], "copy() (mne.preprocessing.ica method)": [[557, "mne.preprocessing.ICA.copy"]], "find_bads_ecg() (mne.preprocessing.ica method)": [[557, "mne.preprocessing.ICA.find_bads_ecg"]], "find_bads_eog() (mne.preprocessing.ica method)": [[557, "mne.preprocessing.ICA.find_bads_eog"]], "find_bads_muscle() (mne.preprocessing.ica method)": [[557, "mne.preprocessing.ICA.find_bads_muscle"]], "find_bads_ref() (mne.preprocessing.ica method)": [[557, "mne.preprocessing.ICA.find_bads_ref"]], "fit() (mne.preprocessing.ica method)": [[557, "mne.preprocessing.ICA.fit"]], "get_channel_types() (mne.preprocessing.ica method)": [[557, "mne.preprocessing.ICA.get_channel_types"]], "get_components() (mne.preprocessing.ica method)": [[557, "mne.preprocessing.ICA.get_components"]], "get_explained_variance_ratio() (mne.preprocessing.ica method)": [[557, "mne.preprocessing.ICA.get_explained_variance_ratio"]], "get_sources() (mne.preprocessing.ica method)": [[557, "mne.preprocessing.ICA.get_sources"]], "plot_components() (mne.preprocessing.ica method)": [[557, "mne.preprocessing.ICA.plot_components"]], "plot_overlay() (mne.preprocessing.ica method)": [[557, "mne.preprocessing.ICA.plot_overlay"]], "plot_properties() (mne.preprocessing.ica method)": [[557, "mne.preprocessing.ICA.plot_properties"]], "plot_scores() (mne.preprocessing.ica method)": [[557, "mne.preprocessing.ICA.plot_scores"]], "plot_sources() (mne.preprocessing.ica method)": [[557, "mne.preprocessing.ICA.plot_sources"]], "save() (mne.preprocessing.ica method)": [[557, "mne.preprocessing.ICA.save"]], "score_sources() (mne.preprocessing.ica method)": [[557, "mne.preprocessing.ICA.score_sources"]], "xdawn (class in mne.preprocessing)": [[558, "mne.preprocessing.Xdawn"]], "apply() (mne.preprocessing.xdawn method)": [[558, "mne.preprocessing.Xdawn.apply"]], "fit() (mne.preprocessing.xdawn method)": [[558, "mne.preprocessing.Xdawn.fit"]], "fit_transform() (mne.preprocessing.xdawn method)": [[558, "mne.preprocessing.Xdawn.fit_transform"]], "get_params() (mne.preprocessing.xdawn method)": [[558, "mne.preprocessing.Xdawn.get_params"]], "inverse_transform() (mne.preprocessing.xdawn method)": [[558, "mne.preprocessing.Xdawn.inverse_transform"]], "set_params() (mne.preprocessing.xdawn method)": [[558, "mne.preprocessing.Xdawn.set_params"]], "transform() (mne.preprocessing.xdawn method)": [[558, "mne.preprocessing.Xdawn.transform"]], "annotate_amplitude() (in module mne.preprocessing)": [[559, "mne.preprocessing.annotate_amplitude"]], "annotate_break() (in module mne.preprocessing)": [[560, "mne.preprocessing.annotate_break"]], "annotate_movement() (in module mne.preprocessing)": [[561, "mne.preprocessing.annotate_movement"]], "annotate_muscle_zscore() (in module mne.preprocessing)": [[562, "mne.preprocessing.annotate_muscle_zscore"]], "annotate_nan() (in module mne.preprocessing)": [[563, "mne.preprocessing.annotate_nan"]], "compute_average_dev_head_t() (in module mne.preprocessing)": [[564, "mne.preprocessing.compute_average_dev_head_t"]], "compute_bridged_electrodes() (in module mne.preprocessing)": [[565, "mne.preprocessing.compute_bridged_electrodes"]], "compute_current_source_density() (in module mne.preprocessing)": [[566, "mne.preprocessing.compute_current_source_density"]], "compute_fine_calibration() (in module mne.preprocessing)": [[567, "mne.preprocessing.compute_fine_calibration"]], "compute_maxwell_basis() (in module mne.preprocessing)": [[568, "mne.preprocessing.compute_maxwell_basis"]], "compute_proj_ecg() (in module mne.preprocessing)": [[569, "mne.preprocessing.compute_proj_ecg"]], "compute_proj_eog() (in module mne.preprocessing)": [[570, "mne.preprocessing.compute_proj_eog"]], "corrmap() (in module mne.preprocessing)": [[571, "mne.preprocessing.corrmap"]], "cortical_signal_suppression() (in module mne.preprocessing)": [[572, "mne.preprocessing.cortical_signal_suppression"]], "create_ecg_epochs() (in module mne.preprocessing)": [[573, "mne.preprocessing.create_ecg_epochs"]], "create_eog_epochs() (in module mne.preprocessing)": [[574, "mne.preprocessing.create_eog_epochs"]], "equalize_bads() (in module mne.preprocessing)": [[575, "mne.preprocessing.equalize_bads"]], "find_bad_channels_maxwell() (in module mne.preprocessing)": [[576, "mne.preprocessing.find_bad_channels_maxwell"]], "find_ecg_events() (in module mne.preprocessing)": [[577, "mne.preprocessing.find_ecg_events"]], "find_eog_events() (in module mne.preprocessing)": [[578, "mne.preprocessing.find_eog_events"]], "fix_stim_artifact() (in module mne.preprocessing)": [[579, "mne.preprocessing.fix_stim_artifact"]], "ica_find_ecg_events() (in module mne.preprocessing)": [[580, "mne.preprocessing.ica_find_ecg_events"]], "ica_find_eog_events() (in module mne.preprocessing)": [[581, "mne.preprocessing.ica_find_eog_events"]], "project_sensors_onto_brain() (in module mne.preprocessing.ieeg)": [[582, "mne.preprocessing.ieeg.project_sensors_onto_brain"]], "infomax() (in module mne.preprocessing)": [[583, "mne.preprocessing.infomax"]], "interpolate_bridged_electrodes() (in module mne.preprocessing)": [[584, "mne.preprocessing.interpolate_bridged_electrodes"]], "maxwell_filter() (in module mne.preprocessing)": [[585, "mne.preprocessing.maxwell_filter"]], "maxwell_filter_prepare_emptyroom() (in module mne.preprocessing)": [[586, "mne.preprocessing.maxwell_filter_prepare_emptyroom"]], "beer_lambert_law() (in module mne.preprocessing.nirs)": [[587, "mne.preprocessing.nirs.beer_lambert_law"]], "optical_density() (in module mne.preprocessing.nirs)": [[588, "mne.preprocessing.nirs.optical_density"]], "scalp_coupling_index() (in module mne.preprocessing.nirs)": [[589, "mne.preprocessing.nirs.scalp_coupling_index"]], "short_channels() (in module mne.preprocessing.nirs)": [[590, "mne.preprocessing.nirs.short_channels"]], "source_detector_distances() (in module mne.preprocessing.nirs)": [[591, "mne.preprocessing.nirs.source_detector_distances"]], "temporal_derivative_distribution_repair() (in module mne.preprocessing.nirs)": [[592, "mne.preprocessing.nirs.temporal_derivative_distribution_repair"]], "oversampled_temporal_projection() (in module mne.preprocessing)": [[593, "mne.preprocessing.oversampled_temporal_projection"]], "peak_finder() (in module mne.preprocessing)": [[594, "mne.preprocessing.peak_finder"]], "read_eog_regression() (in module mne.preprocessing)": [[595, "mne.preprocessing.read_eog_regression"]], "read_fine_calibration() (in module mne.preprocessing)": [[596, "mne.preprocessing.read_fine_calibration"]], "read_ica() (in module mne.preprocessing)": [[597, "mne.preprocessing.read_ica"]], "read_ica_eeglab() (in module mne.preprocessing)": [[598, "mne.preprocessing.read_ica_eeglab"]], "realign_raw() (in module mne.preprocessing)": [[599, "mne.preprocessing.realign_raw"]], "regress_artifact() (in module mne.preprocessing)": [[600, "mne.preprocessing.regress_artifact"]], "write_fine_calibration() (in module mne.preprocessing)": [[601, "mne.preprocessing.write_fine_calibration"]], "random_parcellation() (in module mne)": [[602, "mne.random_parcellation"]], "read_annotations() (in module mne)": [[603, "mne.read_annotations"]], "read_bem_solution() (in module mne)": [[604, "mne.read_bem_solution"]], "read_bem_surfaces() (in module mne)": [[605, "mne.read_bem_surfaces"]], "read_cov() (in module mne)": [[606, "mne.read_cov"]], "read_dipole() (in module mne)": [[607, "mne.read_dipole"]], "read_epochs() (in module mne)": [[608, "mne.read_epochs"]], "read_epochs_eeglab() (in module mne)": [[609, "mne.read_epochs_eeglab"]], "read_epochs_fieldtrip() (in module mne)": [[610, "mne.read_epochs_fieldtrip"]], "read_epochs_kit() (in module mne)": [[611, "mne.read_epochs_kit"]], "read_events() (in module mne)": [[612, "mne.read_events"]], "read_evoked_besa() (in module mne)": [[613, "mne.read_evoked_besa"]], "read_evoked_fieldtrip() (in module mne)": [[614, "mne.read_evoked_fieldtrip"]], "read_evokeds() (in module mne)": [[615, "mne.read_evokeds"]], "read_evokeds_mff() (in module mne)": [[616, "mne.read_evokeds_mff"]], "read_forward_solution() (in module mne)": [[617, "mne.read_forward_solution"]], "read_freesurfer_lut() (in module mne)": [[618, "mne.read_freesurfer_lut"]], "read_label() (in module mne)": [[619, "mne.read_label"]], "read_labels_from_annot() (in module mne)": [[620, "mne.read_labels_from_annot"]], "read_lta() (in module mne)": [[621, "mne.read_lta"]], "read_morph_map() (in module mne)": [[622, "mne.read_morph_map"]], "read_proj() (in module mne)": [[623, "mne.read_proj"]], "read_reject_parameters() (in module mne)": [[624, "mne.read_reject_parameters"]], "read_source_estimate() (in module mne)": [[625, "mne.read_source_estimate"]], "read_source_morph() (in module mne)": [[626, "mne.read_source_morph"]], "read_source_spaces() (in module mne)": [[627, "mne.read_source_spaces"]], "read_surface() (in module mne)": [[628, "mne.read_surface"]], "read_talxfm() (in module mne)": [[629, "mne.read_talxfm"]], "read_trans() (in module mne)": [[630, "mne.read_trans"]], "read_tri() (in module mne)": [[631, "mne.read_tri"]], "read_vectorview_selection() (in module mne)": [[632, "mne.read_vectorview_selection"]], "rename_channels() (in module mne)": [[633, "mne.rename_channels"]], "scale_bem() (in module mne)": [[634, "mne.scale_bem"]], "scale_labels() (in module mne)": [[635, "mne.scale_labels"]], "scale_mri() (in module mne)": [[636, "mne.scale_mri"]], "scale_source_space() (in module mne)": [[637, "mne.scale_source_space"]], "sensitivity_map() (in module mne)": [[638, "mne.sensitivity_map"]], "set_bipolar_reference() (in module mne)": [[639, "mne.set_bipolar_reference"]], "set_cache_dir() (in module mne)": [[640, "mne.set_cache_dir"]], "set_config() (in module mne)": [[641, "mne.set_config"]], "set_eeg_reference() (in module mne)": [[642, "mne.set_eeg_reference"]], "set_log_file() (in module mne)": [[643, "mne.set_log_file"]], "set_log_level() (in module mne)": [[644, "mne.set_log_level"]], "setup_source_space() (in module mne)": [[645, "mne.setup_source_space"]], "setup_volume_source_space() (in module mne)": [[646, "mne.setup_volume_source_space"]], "sourcesimulator (class in mne.simulation)": [[647, "mne.simulation.SourceSimulator"]], "__iter__() (mne.simulation.sourcesimulator method)": [[647, "mne.simulation.SourceSimulator.__iter__"]], "add_data() (mne.simulation.sourcesimulator method)": [[647, "mne.simulation.SourceSimulator.add_data"]], "duration (mne.simulation.sourcesimulator property)": [[647, "mne.simulation.SourceSimulator.duration"]], "get_stc() (mne.simulation.sourcesimulator method)": [[647, "mne.simulation.SourceSimulator.get_stc"]], "get_stim_channel() (mne.simulation.sourcesimulator method)": [[647, "mne.simulation.SourceSimulator.get_stim_channel"]], "n_times (mne.simulation.sourcesimulator property)": [[647, "mne.simulation.SourceSimulator.n_times"]], "add_chpi() (in module mne.simulation)": [[648, "mne.simulation.add_chpi"]], "add_ecg() (in module mne.simulation)": [[649, "mne.simulation.add_ecg"]], "add_eog() (in module mne.simulation)": [[650, "mne.simulation.add_eog"]], "add_noise() (in module mne.simulation)": [[651, "mne.simulation.add_noise"]], "cosine_score() (in module mne.simulation.metrics)": [[652, "mne.simulation.metrics.cosine_score"]], "f1_score() (in module mne.simulation.metrics)": [[653, "mne.simulation.metrics.f1_score"]], "peak_position_error() (in module mne.simulation.metrics)": [[654, "mne.simulation.metrics.peak_position_error"]], "precision_score() (in module mne.simulation.metrics)": [[655, "mne.simulation.metrics.precision_score"]], "recall_score() (in module mne.simulation.metrics)": [[656, "mne.simulation.metrics.recall_score"]], "region_localization_error() (in module mne.simulation.metrics)": [[657, "mne.simulation.metrics.region_localization_error"]], "roc_auc_score() (in module mne.simulation.metrics)": [[658, "mne.simulation.metrics.roc_auc_score"]], "spatial_deviation_error() (in module mne.simulation.metrics)": [[659, "mne.simulation.metrics.spatial_deviation_error"]], "select_source_in_label() (in module mne.simulation)": [[660, "mne.simulation.select_source_in_label"]], "simulate_evoked() (in module mne.simulation)": [[661, "mne.simulation.simulate_evoked"]], "simulate_raw() (in module mne.simulation)": [[662, "mne.simulation.simulate_raw"]], "simulate_sparse_stc() (in module mne.simulation)": [[663, "mne.simulation.simulate_sparse_stc"]], "simulate_stc() (in module mne.simulation)": [[664, "mne.simulation.simulate_stc"]], "compute_distance_to_sensors() (in module mne.source_space)": [[665, "mne.source_space.compute_distance_to_sensors"]], "get_decimated_surfaces() (in module mne.source_space)": [[666, "mne.source_space.get_decimated_surfaces"]], "spatial_dist_adjacency() (in module mne)": [[667, "mne.spatial_dist_adjacency"]], "spatial_inter_hemi_adjacency() (in module mne)": [[668, "mne.spatial_inter_hemi_adjacency"]], "spatial_src_adjacency() (in module mne)": [[669, "mne.spatial_src_adjacency"]], "spatial_tris_adjacency() (in module mne)": [[670, "mne.spatial_tris_adjacency"]], "spatio_temporal_dist_adjacency() (in module mne)": [[671, "mne.spatio_temporal_dist_adjacency"]], "spatio_temporal_src_adjacency() (in module mne)": [[672, "mne.spatio_temporal_src_adjacency"]], "spatio_temporal_tris_adjacency() (in module mne)": [[673, "mne.spatio_temporal_tris_adjacency"]], "split_label() (in module mne)": [[674, "mne.split_label"]], "bonferroni_correction() (in module mne.stats)": [[675, "mne.stats.bonferroni_correction"]], "bootstrap_confidence_interval() (in module mne.stats)": [[676, "mne.stats.bootstrap_confidence_interval"]], "combine_adjacency() (in module mne.stats)": [[677, "mne.stats.combine_adjacency"]], "f_mway_rm() (in module mne.stats)": [[678, "mne.stats.f_mway_rm"]], "f_oneway() (in module mne.stats)": [[679, "mne.stats.f_oneway"]], "f_threshold_mway_rm() (in module mne.stats)": [[680, "mne.stats.f_threshold_mway_rm"]], "fdr_correction() (in module mne.stats)": [[681, "mne.stats.fdr_correction"]], "linear_regression() (in module mne.stats)": [[682, "mne.stats.linear_regression"]], "linear_regression_raw() (in module mne.stats)": [[683, "mne.stats.linear_regression_raw"]], "permutation_cluster_1samp_test() (in module mne.stats)": [[684, "mne.stats.permutation_cluster_1samp_test"]], "permutation_cluster_test() (in module mne.stats)": [[685, "mne.stats.permutation_cluster_test"]], "permutation_t_test() (in module mne.stats)": [[686, "mne.stats.permutation_t_test"]], "spatio_temporal_cluster_1samp_test() (in module mne.stats)": [[687, "mne.stats.spatio_temporal_cluster_1samp_test"]], "spatio_temporal_cluster_test() (in module mne.stats)": [[688, "mne.stats.spatio_temporal_cluster_test"]], "summarize_clusters_stc() (in module mne.stats)": [[689, "mne.stats.summarize_clusters_stc"]], "ttest_1samp_no_p() (in module mne.stats)": [[690, "mne.stats.ttest_1samp_no_p"]], "ttest_ind_no_p() (in module mne.stats)": [[691, "mne.stats.ttest_ind_no_p"]], "stc_near_sensors() (in module mne)": [[692, "mne.stc_near_sensors"]], "stc_to_label() (in module mne)": [[693, "mne.stc_to_label"]], "complete_surface_info() (in module mne.surface)": [[694, "mne.surface.complete_surface_info"]], "read_curvature() (in module mne.surface)": [[695, "mne.surface.read_curvature"]], "sys_info() (in module mne)": [[696, "mne.sys_info"]], "averagetfr (class in mne.time_frequency)": [[697, "mne.time_frequency.AverageTFR"]], "__add__() (mne.time_frequency.averagetfr method)": [[697, "mne.time_frequency.AverageTFR.__add__"]], "__contains__() (mne.time_frequency.averagetfr method)": [[697, "mne.time_frequency.AverageTFR.__contains__"]], "__mul__() (mne.time_frequency.averagetfr method)": [[697, "mne.time_frequency.AverageTFR.__mul__"]], "__sub__() (mne.time_frequency.averagetfr method)": [[697, "mne.time_frequency.AverageTFR.__sub__"]], "add_channels() (mne.time_frequency.averagetfr method)": [[697, "mne.time_frequency.AverageTFR.add_channels"]], "add_reference_channels() (mne.time_frequency.averagetfr method)": [[697, "mne.time_frequency.AverageTFR.add_reference_channels"]], "apply_baseline() (mne.time_frequency.averagetfr method)": [[697, "mne.time_frequency.AverageTFR.apply_baseline"]], "ch_names (mne.time_frequency.averagetfr property)": [[697, "mne.time_frequency.AverageTFR.ch_names"]], "compensation_grade (mne.time_frequency.averagetfr property)": [[697, "mne.time_frequency.AverageTFR.compensation_grade"]], "copy() (mne.time_frequency.averagetfr method)": [[697, "mne.time_frequency.AverageTFR.copy"]], "crop() (mne.time_frequency.averagetfr method)": [[697, "mne.time_frequency.AverageTFR.crop"]], "decimate() (mne.time_frequency.averagetfr method)": [[697, "mne.time_frequency.AverageTFR.decimate"]], "drop_channels() (mne.time_frequency.averagetfr method)": [[697, "mne.time_frequency.AverageTFR.drop_channels"]], "get_channel_types() (mne.time_frequency.averagetfr method)": [[697, "mne.time_frequency.AverageTFR.get_channel_types"]], "pick() (mne.time_frequency.averagetfr method)": [[697, "mne.time_frequency.AverageTFR.pick"]], "pick_channels() (mne.time_frequency.averagetfr method)": [[697, "mne.time_frequency.AverageTFR.pick_channels"]], "pick_types() (mne.time_frequency.averagetfr method)": [[697, "mne.time_frequency.AverageTFR.pick_types"]], "plot() (mne.time_frequency.averagetfr method)": [[697, "mne.time_frequency.AverageTFR.plot"]], "plot_joint() (mne.time_frequency.averagetfr method)": [[697, "mne.time_frequency.AverageTFR.plot_joint"]], "plot_topo() (mne.time_frequency.averagetfr method)": [[697, "mne.time_frequency.AverageTFR.plot_topo"]], "plot_topomap() (mne.time_frequency.averagetfr method)": [[697, "mne.time_frequency.AverageTFR.plot_topomap"]], "reorder_channels() (mne.time_frequency.averagetfr method)": [[697, "mne.time_frequency.AverageTFR.reorder_channels"]], "save() (mne.time_frequency.averagetfr method)": [[697, "mne.time_frequency.AverageTFR.save"]], "shift_time() (mne.time_frequency.averagetfr method)": [[697, "mne.time_frequency.AverageTFR.shift_time"]], "time_as_index() (mne.time_frequency.averagetfr method)": [[697, "mne.time_frequency.AverageTFR.time_as_index"]], "times (mne.time_frequency.averagetfr property)": [[697, "mne.time_frequency.AverageTFR.times"]], "tmax (mne.time_frequency.averagetfr property)": [[697, "mne.time_frequency.AverageTFR.tmax"]], "tmin (mne.time_frequency.averagetfr property)": [[697, "mne.time_frequency.AverageTFR.tmin"]], "to_data_frame() (mne.time_frequency.averagetfr method)": [[697, "mne.time_frequency.AverageTFR.to_data_frame"]], "crossspectraldensity (class in mne.time_frequency)": [[698, "mne.time_frequency.CrossSpectralDensity"]], "__getitem__() (mne.time_frequency.crossspectraldensity method)": [[698, "mne.time_frequency.CrossSpectralDensity.__getitem__"]], "__len__() (mne.time_frequency.crossspectraldensity method)": [[698, "mne.time_frequency.CrossSpectralDensity.__len__"]], "copy() (mne.time_frequency.crossspectraldensity method)": [[698, "mne.time_frequency.CrossSpectralDensity.copy"]], "get_data() (mne.time_frequency.crossspectraldensity method)": [[698, "mne.time_frequency.CrossSpectralDensity.get_data"]], "mean() (mne.time_frequency.crossspectraldensity method)": [[698, "mne.time_frequency.CrossSpectralDensity.mean"]], "n_channels (mne.time_frequency.crossspectraldensity property)": [[698, "mne.time_frequency.CrossSpectralDensity.n_channels"]], "pick_channels() (mne.time_frequency.crossspectraldensity method)": [[698, "mne.time_frequency.CrossSpectralDensity.pick_channels"]], "pick_frequency() (mne.time_frequency.crossspectraldensity method)": [[698, "mne.time_frequency.CrossSpectralDensity.pick_frequency"]], "plot() (mne.time_frequency.crossspectraldensity method)": [[698, "mne.time_frequency.CrossSpectralDensity.plot"]], "save() (mne.time_frequency.crossspectraldensity method)": [[698, "mne.time_frequency.CrossSpectralDensity.save"]], "sum() (mne.time_frequency.crossspectraldensity method)": [[698, "mne.time_frequency.CrossSpectralDensity.sum"]], "epochsspectrum (class in mne.time_frequency)": [[699, "mne.time_frequency.EpochsSpectrum"]], "__contains__() (mne.time_frequency.epochsspectrum method)": [[699, "mne.time_frequency.EpochsSpectrum.__contains__"]], "__getitem__() (mne.time_frequency.epochsspectrum method)": [[699, "mne.time_frequency.EpochsSpectrum.__getitem__"]], "__iter__() (mne.time_frequency.epochsspectrum method)": [[699, "mne.time_frequency.EpochsSpectrum.__iter__"]], "__len__() (mne.time_frequency.epochsspectrum method)": [[699, "mne.time_frequency.EpochsSpectrum.__len__"]], "add_channels() (mne.time_frequency.epochsspectrum method)": [[699, "mne.time_frequency.EpochsSpectrum.add_channels"]], "add_reference_channels() (mne.time_frequency.epochsspectrum method)": [[699, "mne.time_frequency.EpochsSpectrum.add_reference_channels"]], "average() (mne.time_frequency.epochsspectrum method)": [[699, "mne.time_frequency.EpochsSpectrum.average"]], "compensation_grade (mne.time_frequency.epochsspectrum property)": [[699, "mne.time_frequency.EpochsSpectrum.compensation_grade"]], "copy() (mne.time_frequency.epochsspectrum method)": [[699, "mne.time_frequency.EpochsSpectrum.copy"]], "drop_channels() (mne.time_frequency.epochsspectrum method)": [[699, "mne.time_frequency.EpochsSpectrum.drop_channels"]], "get_channel_types() (mne.time_frequency.epochsspectrum method)": [[699, "mne.time_frequency.EpochsSpectrum.get_channel_types"]], "get_data() (mne.time_frequency.epochsspectrum method)": [[699, "mne.time_frequency.EpochsSpectrum.get_data"]], "metadata (mne.time_frequency.epochsspectrum property)": [[699, "mne.time_frequency.EpochsSpectrum.metadata"]], "next() (mne.time_frequency.epochsspectrum method)": [[699, "mne.time_frequency.EpochsSpectrum.next"]], "pick() (mne.time_frequency.epochsspectrum method)": [[699, "mne.time_frequency.EpochsSpectrum.pick"]], "pick_channels() (mne.time_frequency.epochsspectrum method)": [[699, "mne.time_frequency.EpochsSpectrum.pick_channels"]], "pick_types() (mne.time_frequency.epochsspectrum method)": [[699, "mne.time_frequency.EpochsSpectrum.pick_types"]], "plot() (mne.time_frequency.epochsspectrum method)": [[699, "mne.time_frequency.EpochsSpectrum.plot"]], "plot_topo() (mne.time_frequency.epochsspectrum method)": [[699, "mne.time_frequency.EpochsSpectrum.plot_topo"]], "plot_topomap() (mne.time_frequency.epochsspectrum method)": [[699, "mne.time_frequency.EpochsSpectrum.plot_topomap"]], "reorder_channels() (mne.time_frequency.epochsspectrum method)": [[699, "mne.time_frequency.EpochsSpectrum.reorder_channels"]], "save() (mne.time_frequency.epochsspectrum method)": [[699, "mne.time_frequency.EpochsSpectrum.save"]], "to_data_frame() (mne.time_frequency.epochsspectrum method)": [[699, "mne.time_frequency.EpochsSpectrum.to_data_frame"]], "units() (mne.time_frequency.epochsspectrum method)": [[699, "mne.time_frequency.EpochsSpectrum.units"]], "epochstfr (class in mne.time_frequency)": [[700, "mne.time_frequency.EpochsTFR"]], "__contains__() (mne.time_frequency.epochstfr method)": [[700, "mne.time_frequency.EpochsTFR.__contains__"]], "__getitem__() (mne.time_frequency.epochstfr method)": [[700, "mne.time_frequency.EpochsTFR.__getitem__"]], "__iter__() (mne.time_frequency.epochstfr method)": [[700, "mne.time_frequency.EpochsTFR.__iter__"]], "__len__() (mne.time_frequency.epochstfr method)": [[700, "mne.time_frequency.EpochsTFR.__len__"]], "add_channels() (mne.time_frequency.epochstfr method)": [[700, "mne.time_frequency.EpochsTFR.add_channels"]], "add_reference_channels() (mne.time_frequency.epochstfr method)": [[700, "mne.time_frequency.EpochsTFR.add_reference_channels"]], "apply_baseline() (mne.time_frequency.epochstfr method)": [[700, "mne.time_frequency.EpochsTFR.apply_baseline"]], "average() (mne.time_frequency.epochstfr method)": [[700, "mne.time_frequency.EpochsTFR.average"]], "ch_names (mne.time_frequency.epochstfr property)": [[700, "mne.time_frequency.EpochsTFR.ch_names"]], "compensation_grade (mne.time_frequency.epochstfr property)": [[700, "mne.time_frequency.EpochsTFR.compensation_grade"]], "copy() (mne.time_frequency.epochstfr method)": [[700, "mne.time_frequency.EpochsTFR.copy"]], "crop() (mne.time_frequency.epochstfr method)": [[700, "mne.time_frequency.EpochsTFR.crop"]], "decimate() (mne.time_frequency.epochstfr method)": [[700, "mne.time_frequency.EpochsTFR.decimate"]], "drop_channels() (mne.time_frequency.epochstfr method)": [[700, "mne.time_frequency.EpochsTFR.drop_channels"]], "get_channel_types() (mne.time_frequency.epochstfr method)": [[700, "mne.time_frequency.EpochsTFR.get_channel_types"]], "metadata (mne.time_frequency.epochstfr property)": [[700, "mne.time_frequency.EpochsTFR.metadata"]], "next() (mne.time_frequency.epochstfr method)": [[700, "mne.time_frequency.EpochsTFR.next"]], "pick() (mne.time_frequency.epochstfr method)": [[700, "mne.time_frequency.EpochsTFR.pick"]], "pick_channels() (mne.time_frequency.epochstfr method)": [[700, "mne.time_frequency.EpochsTFR.pick_channels"]], "pick_types() (mne.time_frequency.epochstfr method)": [[700, "mne.time_frequency.EpochsTFR.pick_types"]], "reorder_channels() (mne.time_frequency.epochstfr method)": [[700, "mne.time_frequency.EpochsTFR.reorder_channels"]], "save() (mne.time_frequency.epochstfr method)": [[700, "mne.time_frequency.EpochsTFR.save"]], "shift_time() (mne.time_frequency.epochstfr method)": [[700, "mne.time_frequency.EpochsTFR.shift_time"]], "time_as_index() (mne.time_frequency.epochstfr method)": [[700, "mne.time_frequency.EpochsTFR.time_as_index"]], "times (mne.time_frequency.epochstfr property)": [[700, "mne.time_frequency.EpochsTFR.times"]], "tmax (mne.time_frequency.epochstfr property)": [[700, "mne.time_frequency.EpochsTFR.tmax"]], "tmin (mne.time_frequency.epochstfr property)": [[700, "mne.time_frequency.EpochsTFR.tmin"]], "to_data_frame() (mne.time_frequency.epochstfr method)": [[700, "mne.time_frequency.EpochsTFR.to_data_frame"]], "spectrum (class in mne.time_frequency)": [[701, "mne.time_frequency.Spectrum"]], "__contains__() (mne.time_frequency.spectrum method)": [[701, "mne.time_frequency.Spectrum.__contains__"]], "__getitem__() (mne.time_frequency.spectrum method)": [[701, "mne.time_frequency.Spectrum.__getitem__"]], "add_channels() (mne.time_frequency.spectrum method)": [[701, "mne.time_frequency.Spectrum.add_channels"]], "add_reference_channels() (mne.time_frequency.spectrum method)": [[701, "mne.time_frequency.Spectrum.add_reference_channels"]], "compensation_grade (mne.time_frequency.spectrum property)": [[701, "mne.time_frequency.Spectrum.compensation_grade"]], "copy() (mne.time_frequency.spectrum method)": [[701, "mne.time_frequency.Spectrum.copy"]], "drop_channels() (mne.time_frequency.spectrum method)": [[701, "mne.time_frequency.Spectrum.drop_channels"]], "get_channel_types() (mne.time_frequency.spectrum method)": [[701, "mne.time_frequency.Spectrum.get_channel_types"]], "get_data() (mne.time_frequency.spectrum method)": [[701, "mne.time_frequency.Spectrum.get_data"]], "pick() (mne.time_frequency.spectrum method)": [[701, "mne.time_frequency.Spectrum.pick"]], "pick_channels() (mne.time_frequency.spectrum method)": [[701, "mne.time_frequency.Spectrum.pick_channels"]], "pick_types() (mne.time_frequency.spectrum method)": [[701, "mne.time_frequency.Spectrum.pick_types"]], "plot() (mne.time_frequency.spectrum method)": [[701, "mne.time_frequency.Spectrum.plot"]], "plot_topo() (mne.time_frequency.spectrum method)": [[701, "mne.time_frequency.Spectrum.plot_topo"]], "plot_topomap() (mne.time_frequency.spectrum method)": [[701, "mne.time_frequency.Spectrum.plot_topomap"]], "reorder_channels() (mne.time_frequency.spectrum method)": [[701, "mne.time_frequency.Spectrum.reorder_channels"]], "save() (mne.time_frequency.spectrum method)": [[701, "mne.time_frequency.Spectrum.save"]], "to_data_frame() (mne.time_frequency.spectrum method)": [[701, "mne.time_frequency.Spectrum.to_data_frame"]], "units() (mne.time_frequency.spectrum method)": [[701, "mne.time_frequency.Spectrum.units"]], "csd_array_fourier() (in module mne.time_frequency)": [[702, "mne.time_frequency.csd_array_fourier"]], "csd_array_morlet() (in module mne.time_frequency)": [[703, "mne.time_frequency.csd_array_morlet"]], "csd_array_multitaper() (in module mne.time_frequency)": [[704, "mne.time_frequency.csd_array_multitaper"]], "csd_fourier() (in module mne.time_frequency)": [[705, "mne.time_frequency.csd_fourier"]], "csd_morlet() (in module mne.time_frequency)": [[706, "mne.time_frequency.csd_morlet"]], "csd_multitaper() (in module mne.time_frequency)": [[707, "mne.time_frequency.csd_multitaper"]], "csd_tfr() (in module mne.time_frequency)": [[708, "mne.time_frequency.csd_tfr"]], "dpss_windows() (in module mne.time_frequency)": [[709, "mne.time_frequency.dpss_windows"]], "fit_iir_model_raw() (in module mne.time_frequency)": [[710, "mne.time_frequency.fit_iir_model_raw"]], "fwhm() (in module mne.time_frequency)": [[711, "mne.time_frequency.fwhm"]], "istft() (in module mne.time_frequency)": [[712, "mne.time_frequency.istft"]], "morlet() (in module mne.time_frequency)": [[713, "mne.time_frequency.morlet"]], "pick_channels_csd() (in module mne.time_frequency)": [[714, "mne.time_frequency.pick_channels_csd"]], "psd_array_multitaper() (in module mne.time_frequency)": [[715, "mne.time_frequency.psd_array_multitaper"]], "psd_array_welch() (in module mne.time_frequency)": [[716, "mne.time_frequency.psd_array_welch"]], "read_csd() (in module mne.time_frequency)": [[717, "mne.time_frequency.read_csd"]], "read_spectrum() (in module mne.time_frequency)": [[718, "mne.time_frequency.read_spectrum"]], "read_tfrs() (in module mne.time_frequency)": [[719, "mne.time_frequency.read_tfrs"]], "stft() (in module mne.time_frequency)": [[720, "mne.time_frequency.stft"]], "stftfreq() (in module mne.time_frequency)": [[721, "mne.time_frequency.stftfreq"]], "cwt() (in module mne.time_frequency.tfr)": [[722, "mne.time_frequency.tfr.cwt"]], "morlet() (in module mne.time_frequency.tfr)": [[723, "mne.time_frequency.tfr.morlet"]], "tfr_array_morlet() (in module mne.time_frequency)": [[724, "mne.time_frequency.tfr_array_morlet"]], "tfr_array_multitaper() (in module mne.time_frequency)": [[725, "mne.time_frequency.tfr_array_multitaper"]], "tfr_array_stockwell() (in module mne.time_frequency)": [[726, "mne.time_frequency.tfr_array_stockwell"]], "tfr_morlet() (in module mne.time_frequency)": [[727, "mne.time_frequency.tfr_morlet"]], "tfr_multitaper() (in module mne.time_frequency)": [[728, "mne.time_frequency.tfr_multitaper"]], "tfr_stockwell() (in module mne.time_frequency)": [[729, "mne.time_frequency.tfr_stockwell"]], "write_tfrs() (in module mne.time_frequency)": [[730, "mne.time_frequency.write_tfrs"]], "transform_surface_to() (in module mne)": [[731, "mne.transform_surface_to"]], "transform (class in mne.transforms)": [[732, "mne.transforms.Transform"]], "__contains__() (mne.transforms.transform method)": [[732, "mne.transforms.Transform.__contains__"]], "__getitem__() (mne.transforms.transform method)": [[732, "mne.transforms.Transform.__getitem__"]], "__iter__() (mne.transforms.transform method)": [[732, "mne.transforms.Transform.__iter__"]], "__len__() (mne.transforms.transform method)": [[732, "mne.transforms.Transform.__len__"]], "clear() (mne.transforms.transform method)": [[732, "mne.transforms.Transform.clear"]], "copy() (mne.transforms.transform method)": [[732, "mne.transforms.Transform.copy"]], "from_str (mne.transforms.transform property)": [[732, "mne.transforms.Transform.from_str"]], "fromkeys() (mne.transforms.transform method)": [[732, "mne.transforms.Transform.fromkeys"]], "get() (mne.transforms.transform method)": [[732, "mne.transforms.Transform.get"]], "items() (mne.transforms.transform method)": [[732, "mne.transforms.Transform.items"]], "keys() (mne.transforms.transform method)": [[732, "mne.transforms.Transform.keys"]], "pop() (mne.transforms.transform method)": [[732, "mne.transforms.Transform.pop"]], "popitem() (mne.transforms.transform method)": [[732, "mne.transforms.Transform.popitem"]], "save() (mne.transforms.transform method)": [[732, "mne.transforms.Transform.save"]], "setdefault() (mne.transforms.transform method)": [[732, "mne.transforms.Transform.setdefault"]], "to_str (mne.transforms.transform property)": [[732, "mne.transforms.Transform.to_str"]], "update() (mne.transforms.transform method)": [[732, "mne.transforms.Transform.update"]], "values() (mne.transforms.transform method)": [[732, "mne.transforms.Transform.values"]], "apply_volume_registration() (in module mne.transforms)": [[733, "mne.transforms.apply_volume_registration"]], "apply_volume_registration_points() (in module mne.transforms)": [[734, "mne.transforms.apply_volume_registration_points"]], "compute_volume_registration() (in module mne.transforms)": [[735, "mne.transforms.compute_volume_registration"]], "quat_to_rot() (in module mne.transforms)": [[736, "mne.transforms.quat_to_rot"]], "read_ras_mni_t() (in module mne.transforms)": [[737, "mne.transforms.read_ras_mni_t"]], "rot_to_quat() (in module mne.transforms)": [[738, "mne.transforms.rot_to_quat"]], "use_coil_def() (in module mne)": [[739, "mne.use_coil_def"]], "use_log_level (class in mne)": [[740, "mne.use_log_level"]], "deprecated (class in mne.utils)": [[741, "mne.utils.deprecated"]], "warn() (in module mne.utils)": [[742, "mne.utils.warn"]], "verbose() (in module mne)": [[743, "mne.verbose"]], "vertex_to_mni() (in module mne)": [[744, "mne.vertex_to_mni"]], "brain (class in mne.viz)": [[745, "mne.viz.Brain"]], "add_annotation() (mne.viz.brain method)": [[745, "mne.viz.Brain.add_annotation"]], "add_data() (mne.viz.brain method)": [[745, "mne.viz.Brain.add_data"]], "add_dipole() (mne.viz.brain method)": [[745, "mne.viz.Brain.add_dipole"]], "add_foci() (mne.viz.brain method)": [[745, "mne.viz.Brain.add_foci"]], "add_forward() (mne.viz.brain method)": [[745, "mne.viz.Brain.add_forward"]], "add_head() (mne.viz.brain method)": [[745, "mne.viz.Brain.add_head"]], "add_label() (mne.viz.brain method)": [[745, "mne.viz.Brain.add_label"]], "add_sensors() (mne.viz.brain method)": [[745, "mne.viz.Brain.add_sensors"]], "add_skull() (mne.viz.brain method)": [[745, "mne.viz.Brain.add_skull"]], "add_text() (mne.viz.brain method)": [[745, "mne.viz.Brain.add_text"]], "add_volume_labels() (mne.viz.brain method)": [[745, "mne.viz.Brain.add_volume_labels"]], "apply_auto_scaling() (mne.viz.brain method)": [[745, "mne.viz.Brain.apply_auto_scaling"]], "clear_glyphs() (mne.viz.brain method)": [[745, "mne.viz.Brain.clear_glyphs"]], "close() (mne.viz.brain method)": [[745, "mne.viz.Brain.close"]], "data (mne.viz.brain property)": [[745, "mne.viz.Brain.data"]], "get_picked_points() (mne.viz.brain method)": [[745, "mne.viz.Brain.get_picked_points"]], "get_view() (mne.viz.brain method)": [[745, "mne.viz.Brain.get_view"]], "help() (mne.viz.brain method)": [[745, "mne.viz.Brain.help"]], "interaction (mne.viz.brain property)": [[745, "mne.viz.Brain.interaction"]], "plot_time_course() (mne.viz.brain method)": [[745, "mne.viz.Brain.plot_time_course"]], "plot_time_line() (mne.viz.brain method)": [[745, "mne.viz.Brain.plot_time_line"]], "remove_annotations() (mne.viz.brain method)": [[745, "mne.viz.Brain.remove_annotations"]], "remove_data() (mne.viz.brain method)": [[745, "mne.viz.Brain.remove_data"]], "remove_dipole() (mne.viz.brain method)": [[745, "mne.viz.Brain.remove_dipole"]], "remove_forward() (mne.viz.brain method)": [[745, "mne.viz.Brain.remove_forward"]], "remove_head() (mne.viz.brain method)": [[745, "mne.viz.Brain.remove_head"]], "remove_labels() (mne.viz.brain method)": [[745, "mne.viz.Brain.remove_labels"]], "remove_sensors() (mne.viz.brain method)": [[745, "mne.viz.Brain.remove_sensors"]], "remove_skull() (mne.viz.brain method)": [[745, "mne.viz.Brain.remove_skull"]], "remove_text() (mne.viz.brain method)": [[745, "mne.viz.Brain.remove_text"]], "remove_volume_labels() (mne.viz.brain method)": [[745, "mne.viz.Brain.remove_volume_labels"]], "reset() (mne.viz.brain method)": [[745, "mne.viz.Brain.reset"]], "reset_view() (mne.viz.brain method)": [[745, "mne.viz.Brain.reset_view"]], "restore_user_scaling() (mne.viz.brain method)": [[745, "mne.viz.Brain.restore_user_scaling"]], "save_image() (mne.viz.brain method)": [[745, "mne.viz.Brain.save_image"]], "save_movie() (mne.viz.brain method)": [[745, "mne.viz.Brain.save_movie"]], "screenshot() (mne.viz.brain method)": [[745, "mne.viz.Brain.screenshot"]], "set_data_smoothing() (mne.viz.brain method)": [[745, "mne.viz.Brain.set_data_smoothing"]], "set_playback_speed() (mne.viz.brain method)": [[745, "mne.viz.Brain.set_playback_speed"]], "set_time() (mne.viz.brain method)": [[745, "mne.viz.Brain.set_time"]], "set_time_interpolation() (mne.viz.brain method)": [[745, "mne.viz.Brain.set_time_interpolation"]], "set_time_point() (mne.viz.brain method)": [[745, "mne.viz.Brain.set_time_point"]], "setup_time_viewer() (mne.viz.brain method)": [[745, "mne.viz.Brain.setup_time_viewer"]], "show() (mne.viz.brain method)": [[745, "mne.viz.Brain.show"]], "show_view() (mne.viz.brain method)": [[745, "mne.viz.Brain.show_view"]], "time_interpolation (mne.viz.brain property)": [[745, "mne.viz.Brain.time_interpolation"]], "toggle_interface() (mne.viz.brain method)": [[745, "mne.viz.Brain.toggle_interface"]], "toggle_playback() (mne.viz.brain method)": [[745, "mne.viz.Brain.toggle_playback"]], "update_lut() (mne.viz.brain method)": [[745, "mne.viz.Brain.update_lut"]], "clickableimage (class in mne.viz)": [[746, "mne.viz.ClickableImage"]], "onclick() (mne.viz.clickableimage method)": [[746, "mne.viz.ClickableImage.onclick"]], "plot_clicks() (mne.viz.clickableimage method)": [[746, "mne.viz.ClickableImage.plot_clicks"]], "to_layout() (mne.viz.clickableimage method)": [[746, "mne.viz.ClickableImage.to_layout"]], "figure3d (class in mne.viz)": [[747, "mne.viz.Figure3D"]], "plotter (mne.viz.figure3d property)": [[747, "mne.viz.Figure3D.plotter"]], "add_background_image() (in module mne.viz)": [[748, "mne.viz.add_background_image"]], "centers_to_edges() (in module mne.viz)": [[749, "mne.viz.centers_to_edges"]], "circular_layout() (in module mne.viz)": [[750, "mne.viz.circular_layout"]], "close_3d_figure() (in module mne.viz)": [[751, "mne.viz.close_3d_figure"]], "close_all_3d_figures() (in module mne.viz)": [[752, "mne.viz.close_all_3d_figures"]], "compare_fiff() (in module mne.viz)": [[753, "mne.viz.compare_fiff"]], "create_3d_figure() (in module mne.viz)": [[754, "mne.viz.create_3d_figure"]], "get_3d_backend() (in module mne.viz)": [[755, "mne.viz.get_3d_backend"]], "get_brain_class() (in module mne.viz)": [[756, "mne.viz.get_brain_class"]], "get_browser_backend() (in module mne.viz)": [[757, "mne.viz.get_browser_backend"]], "iter_topography() (in module mne.viz)": [[758, "mne.viz.iter_topography"]], "link_brains() (in module mne.viz)": [[759, "mne.viz.link_brains"]], "mne_analyze_colormap() (in module mne.viz)": [[760, "mne.viz.mne_analyze_colormap"]], "plot_alignment() (in module mne.viz)": [[761, "mne.viz.plot_alignment"]], "plot_arrowmap() (in module mne.viz)": [[762, "mne.viz.plot_arrowmap"]], "plot_bem() (in module mne.viz)": [[763, "mne.viz.plot_bem"]], "plot_brain_colorbar() (in module mne.viz)": [[764, "mne.viz.plot_brain_colorbar"]], "plot_bridged_electrodes() (in module mne.viz)": [[765, "mne.viz.plot_bridged_electrodes"]], "plot_ch_adjacency() (in module mne.viz)": [[766, "mne.viz.plot_ch_adjacency"]], "plot_channel_labels_circle() (in module mne.viz)": [[767, "mne.viz.plot_channel_labels_circle"]], "plot_chpi_snr() (in module mne.viz)": [[768, "mne.viz.plot_chpi_snr"]], "plot_compare_evokeds() (in module mne.viz)": [[769, "mne.viz.plot_compare_evokeds"]], "plot_cov() (in module mne.viz)": [[770, "mne.viz.plot_cov"]], "plot_csd() (in module mne.viz)": [[771, "mne.viz.plot_csd"]], "plot_dipole_amplitudes() (in module mne.viz)": [[772, "mne.viz.plot_dipole_amplitudes"]], "plot_dipole_locations() (in module mne.viz)": [[773, "mne.viz.plot_dipole_locations"]], "plot_drop_log() (in module mne.viz)": [[774, "mne.viz.plot_drop_log"]], "plot_epochs() (in module mne.viz)": [[775, "mne.viz.plot_epochs"]], "plot_epochs_image() (in module mne.viz)": [[776, "mne.viz.plot_epochs_image"]], "plot_epochs_psd_topomap() (in module mne.viz)": [[777, "mne.viz.plot_epochs_psd_topomap"]], "plot_events() (in module mne.viz)": [[778, "mne.viz.plot_events"]], "plot_evoked() (in module mne.viz)": [[779, "mne.viz.plot_evoked"]], "plot_evoked_field() (in module mne.viz)": [[780, "mne.viz.plot_evoked_field"]], "plot_evoked_image() (in module mne.viz)": [[781, "mne.viz.plot_evoked_image"]], "plot_evoked_joint() (in module mne.viz)": [[782, "mne.viz.plot_evoked_joint"]], "plot_evoked_topo() (in module mne.viz)": [[783, "mne.viz.plot_evoked_topo"]], "plot_evoked_topomap() (in module mne.viz)": [[784, "mne.viz.plot_evoked_topomap"]], "plot_evoked_white() (in module mne.viz)": [[785, "mne.viz.plot_evoked_white"]], "plot_filter() (in module mne.viz)": [[786, "mne.viz.plot_filter"]], "plot_head_positions() (in module mne.viz)": [[787, "mne.viz.plot_head_positions"]], "plot_ica_components() (in module mne.viz)": [[788, "mne.viz.plot_ica_components"]], "plot_ica_overlay() (in module mne.viz)": [[789, "mne.viz.plot_ica_overlay"]], "plot_ica_properties() (in module mne.viz)": [[790, "mne.viz.plot_ica_properties"]], "plot_ica_scores() (in module mne.viz)": [[791, "mne.viz.plot_ica_scores"]], "plot_ica_sources() (in module mne.viz)": [[792, "mne.viz.plot_ica_sources"]], "plot_ideal_filter() (in module mne.viz)": [[793, "mne.viz.plot_ideal_filter"]], "plot_layout() (in module mne.viz)": [[794, "mne.viz.plot_layout"]], "plot_montage() (in module mne.viz)": [[795, "mne.viz.plot_montage"]], "plot_projs_joint() (in module mne.viz)": [[796, "mne.viz.plot_projs_joint"]], "plot_projs_topomap() (in module mne.viz)": [[797, "mne.viz.plot_projs_topomap"]], "plot_raw() (in module mne.viz)": [[798, "mne.viz.plot_raw"]], "plot_raw_psd() (in module mne.viz)": [[799, "mne.viz.plot_raw_psd"]], "plot_regression_weights() (in module mne.viz)": [[800, "mne.viz.plot_regression_weights"]], "plot_sensors() (in module mne.viz)": [[801, "mne.viz.plot_sensors"]], "plot_snr_estimate() (in module mne.viz)": [[802, "mne.viz.plot_snr_estimate"]], "plot_source_estimates() (in module mne.viz)": [[803, "mne.viz.plot_source_estimates"]], "plot_sparse_source_estimates() (in module mne.viz)": [[804, "mne.viz.plot_sparse_source_estimates"]], "plot_tfr_topomap() (in module mne.viz)": [[805, "mne.viz.plot_tfr_topomap"]], "plot_topo_image_epochs() (in module mne.viz)": [[806, "mne.viz.plot_topo_image_epochs"]], "plot_topomap() (in module mne.viz)": [[807, "mne.viz.plot_topomap"]], "plot_vector_source_estimates() (in module mne.viz)": [[808, "mne.viz.plot_vector_source_estimates"]], "plot_volume_source_estimates() (in module mne.viz)": [[809, "mne.viz.plot_volume_source_estimates"]], "set_3d_backend() (in module mne.viz)": [[810, "mne.viz.set_3d_backend"]], "set_3d_options() (in module mne.viz)": [[811, "mne.viz.set_3d_options"]], "set_3d_title() (in module mne.viz)": [[812, "mne.viz.set_3d_title"]], "set_3d_view() (in module mne.viz)": [[813, "mne.viz.set_3d_view"]], "set_browser_backend() (in module mne.viz)": [[814, "mne.viz.set_browser_backend"]], "snapshot_brain_montage() (in module mne.viz)": [[815, "mne.viz.snapshot_brain_montage"]], "use_3d_backend() (in module mne.viz)": [[816, "mne.viz.use_3d_backend"]], "use_browser_backend() (in module mne.viz)": [[817, "mne.viz.use_browser_backend"]], "warp_montage_volume() (in module mne)": [[818, "mne.warp_montage_volume"]], "what() (in module mne)": [[819, "mne.what"]], "write_bem_solution() (in module mne)": [[820, "mne.write_bem_solution"]], "write_bem_surfaces() (in module mne)": [[821, "mne.write_bem_surfaces"]], "write_cov() (in module mne)": [[822, "mne.write_cov"]], "write_events() (in module mne)": [[823, "mne.write_events"]], "write_evokeds() (in module mne)": [[824, "mne.write_evokeds"]], "write_forward_solution() (in module mne)": [[825, "mne.write_forward_solution"]], "write_head_bem() (in module mne)": [[826, "mne.write_head_bem"]], "write_label() (in module mne)": [[827, "mne.write_label"]], "write_labels_to_annot() (in module mne)": [[828, "mne.write_labels_to_annot"]], "write_proj() (in module mne)": [[829, "mne.write_proj"]], "write_source_spaces() (in module mne)": [[830, "mne.write_source_spaces"]], "write_surface() (in module mne)": [[831, "mne.write_surface"]], "write_trans() (in module mne)": [[832, "mne.write_trans"]], "bem": [[833, "term-BEM"]], "dc": [[833, "term-DC"]], "dics": [[833, "term-DICS"]], "ecd": [[833, "term-ECD"]], "freesurfer lut": [[833, "term-FreeSurfer-LUT"]], "gfp": [[833, "term-GFP"]], "hed": [[833, "term-HED"]], "hpi": [[833, "term-HPI"]], "lcmv": [[833, "term-LCMV"]], "lcmv beamformer": [[833, "term-LCMV-beamformer"]], "lut": [[833, "term-LUT"]], "mne": [[833, "term-MNE"], [868, "module-mne"]], "opm": [[833, "term-OPM"]], "ras": [[833, "term-RAS"]], "roi": [[833, "term-ROI"]], "squid": [[833, "term-SQUID"]], "ssp": [[833, "term-SSP"]], "stc": [[833, "term-STC"]], "anatomical landmark": [[833, "term-anatomical-landmark"]], "annotations": [[833, "term-annotations"]], "beamformer": [[833, "term-beamformer"]], "boundary element method": [[833, "term-boundary-element-method"]], "boundary element model": [[833, "term-boundary-element-model"]], "chpi": [[833, "term-cHPI"]], "channels": [[833, "term-channels"]], "dspm": [[833, "term-dSPM"]], "data channels": [[833, "term-data-channels"]], "digitization": [[833, "term-digitization"]], "dipole": [[833, "term-dipole"]], "direct current": [[833, "term-direct-current"]], "dynamic imaging of coherent sources": [[833, "term-dynamic-imaging-of-coherent-sources"]], "dynamic statistical parametric mapping": [[833, "term-dynamic-statistical-parametric-mapping"]], "eloreta": [[833, "term-eLORETA"]], "epochs": [[833, "term-epochs"]], "equivalent current dipole": [[833, "term-equivalent-current-dipole"]], "events": [[833, "term-events"]], "evoked": [[833, "term-evoked"]], "fiducial": [[833, "term-fiducial"]], "fiducial point": [[833, "term-fiducial-point"]], "first_samp": [[833, "term-first_samp"]], "forward": [[833, "term-forward"]], "forward solution": [[833, "term-forward-solution"]], "global field power": [[833, "term-global-field-power"]], "head position indicator": [[833, "term-head-position-indicator"]], "hierarchical event descriptors": [[833, "term-hierarchical-event-descriptors"]], "info": [[833, "term-info"]], "inverse": [[833, "term-inverse"]], "inverse operator": [[833, "term-inverse-operator"]], "label": [[833, "term-label"]], "last_samp": [[833, "term-last_samp"]], "layout": [[833, "term-layout"]], "maximum intensity projection": [[833, "term-maximum-intensity-projection"]], "measurement info": [[833, "term-measurement-info"]], "minimum-norm estimate": [[833, "term-minimum-norm-estimate"]], "minimum-norm estimation": [[833, "term-minimum-norm-estimation"]], "montage": [[833, "term-montage"]], "morphing": [[833, "term-morphing"]], "noise covariance": [[833, "term-noise-covariance"]], "optically pumped magnetometer": [[833, "term-optically-pumped-magnetometer"]], "path-like": [[833, "term-path-like"]], "pick": [[833, "term-pick"]], "projector": [[833, "term-projector"]], "raw": [[833, "term-raw"]], "region of interest": [[833, "term-region-of-interest"]], "sloreta": [[833, "term-sLORETA"]], "selection": [[833, "term-selection"]], "source estimate": [[833, "term-source-estimate"]], "source space": [[833, "term-source-space"]], "source time course": [[833, "term-source-time-course"]], "stim channel": [[833, "term-stim-channel"]], "superconducting quantum interference device": [[833, "term-superconducting-quantum-interference-device"]], "template montage": [[833, "term-template-montage"]], "tfr": [[833, "term-tfr"]], "trans": [[833, "term-trans"]], "trigger channel": [[833, "term-trigger-channel"]], "whitening": [[833, "term-whitening"]], "mne.beamformer": [[846, "module-mne.beamformer"]], "mne.dipole": [[846, "module-mne.dipole"]], "mne.inverse_sparse": [[846, "module-mne.inverse_sparse"]], "mne.minimum_norm": [[846, "module-mne.minimum_norm"]], "mne.cuda": [[847, "module-mne.cuda"]], "mne.utils": [[847, "module-mne.utils"]], "mne.channels": [[867, "module-mne.channels"]], "mne.chpi": [[867, "module-mne.chpi"]], "mne.filter": [[867, "module-mne.filter"]], "mne.preprocessing": [[867, "module-mne.preprocessing"]], "mne.preprocessing.ieeg": [[867, "module-mne.preprocessing.ieeg"]], "mne.preprocessing.nirs": [[867, "module-mne.preprocessing.nirs"]], "mne.transforms": [[867, "module-mne.transforms"]], "mne.io": [[869, "module-mne.io"]], "mne.io.kit": [[869, "module-mne.io.kit"]], "mne.baseline": [[872, "module-mne.baseline"]], "mne.simulation": [[873, "module-mne.simulation"]], "mne.simulation.metrics": [[873, "module-mne.simulation.metrics"]], "mne.stats": [[875, "module-mne.stats"]], "mne.time_frequency": [[876, "module-mne.time_frequency"]], "mne.time_frequency.tfr": [[876, "module-mne.time_frequency.tfr"]], "mne.viz": [[877, "module-mne.viz"]]}})