Search.setIndex({"docnames": ["auto_examples/connectivity/index", "auto_examples/datasets/brainstorm_data", "auto_examples/datasets/hf_sef_data", "auto_examples/datasets/index", "auto_examples/datasets/limo_data", "auto_examples/datasets/opm_data", "auto_examples/datasets/sg_execution_times", "auto_examples/datasets/spm_faces_dataset_sgskip", "auto_examples/decoding/decoding_csp_eeg", "auto_examples/decoding/decoding_csp_timefreq", "auto_examples/decoding/decoding_rsa_sgskip", "auto_examples/decoding/decoding_spatio_temporal_source", "auto_examples/decoding/decoding_spoc_CMC", "auto_examples/decoding/decoding_time_generalization_conditions", "auto_examples/decoding/decoding_unsupervised_spatial_filter", "auto_examples/decoding/decoding_xdawn_eeg", "auto_examples/decoding/ems_filtering", "auto_examples/decoding/index", "auto_examples/decoding/linear_model_patterns", "auto_examples/decoding/receptive_field_mtrf", "auto_examples/decoding/sg_execution_times", "auto_examples/decoding/ssd_spatial_filters", "auto_examples/forward/forward_sensitivity_maps", "auto_examples/forward/index", "auto_examples/forward/left_cerebellum_volume_source", "auto_examples/forward/sg_execution_times", "auto_examples/forward/source_space_morphing", "auto_examples/index", "auto_examples/inverse/compute_mne_inverse_epochs_in_label", "auto_examples/inverse/compute_mne_inverse_raw_in_label", "auto_examples/inverse/compute_mne_inverse_volume", "auto_examples/inverse/custom_inverse_solver", "auto_examples/inverse/dics_source_power", "auto_examples/inverse/evoked_ers_source_power", "auto_examples/inverse/gamma_map_inverse", "auto_examples/inverse/index", "auto_examples/inverse/label_activation_from_stc", "auto_examples/inverse/label_from_stc", "auto_examples/inverse/label_source_activations", "auto_examples/inverse/mixed_norm_inverse", "auto_examples/inverse/mixed_source_space_inverse", "auto_examples/inverse/mne_cov_power", "auto_examples/inverse/morph_surface_stc", "auto_examples/inverse/morph_volume_stc", "auto_examples/inverse/multi_dipole_model", "auto_examples/inverse/multidict_reweighted_tfmxne", "auto_examples/inverse/psf_ctf_label_leakage", "auto_examples/inverse/psf_ctf_vertices", "auto_examples/inverse/psf_ctf_vertices_lcmv", "auto_examples/inverse/psf_volume", "auto_examples/inverse/rap_music", "auto_examples/inverse/read_inverse", "auto_examples/inverse/read_stc", "auto_examples/inverse/resolution_metrics", "auto_examples/inverse/resolution_metrics_eegmeg", "auto_examples/inverse/sg_execution_times", "auto_examples/inverse/snr_estimate", "auto_examples/inverse/source_space_snr", "auto_examples/inverse/time_frequency_mixed_norm_inverse", "auto_examples/inverse/vector_mne_solution", "auto_examples/io/elekta_epochs", "auto_examples/io/index", "auto_examples/io/read_neo_format", "auto_examples/io/read_noise_covariance_matrix", "auto_examples/io/read_xdf", "auto_examples/io/sg_execution_times", "auto_examples/preprocessing/css", "auto_examples/preprocessing/define_target_events", "auto_examples/preprocessing/eeg_bridging", "auto_examples/preprocessing/eeg_csd", "auto_examples/preprocessing/eog_artifact_histogram", "auto_examples/preprocessing/eog_regression", "auto_examples/preprocessing/find_ref_artifacts", "auto_examples/preprocessing/fnirs_artifact_removal", "auto_examples/preprocessing/ica_comparison", "auto_examples/preprocessing/index", "auto_examples/preprocessing/interpolate_bad_channels", "auto_examples/preprocessing/movement_compensation", "auto_examples/preprocessing/movement_detection", "auto_examples/preprocessing/muscle_detection", "auto_examples/preprocessing/muscle_ica", "auto_examples/preprocessing/otp", "auto_examples/preprocessing/sg_execution_times", "auto_examples/preprocessing/shift_evoked", "auto_examples/preprocessing/virtual_evoked", "auto_examples/preprocessing/xdawn_denoising", "auto_examples/simulation/index", "auto_examples/simulation/plot_stc_metrics", "auto_examples/simulation/sg_execution_times", "auto_examples/simulation/simulate_evoked_data", "auto_examples/simulation/simulate_raw_data", "auto_examples/simulation/simulated_raw_data_using_subject_anatomy", "auto_examples/simulation/source_simulator", "auto_examples/stats/cluster_stats_evoked", "auto_examples/stats/fdr_stats_evoked", "auto_examples/stats/index", "auto_examples/stats/linear_regression_raw", "auto_examples/stats/sensor_permutation_test", "auto_examples/stats/sensor_regression", "auto_examples/stats/sg_execution_times", "auto_examples/time_frequency/compute_csd", "auto_examples/time_frequency/compute_source_psd_epochs", "auto_examples/time_frequency/index", "auto_examples/time_frequency/sg_execution_times", "auto_examples/time_frequency/source_label_time_frequency", "auto_examples/time_frequency/source_power_spectrum", "auto_examples/time_frequency/source_power_spectrum_opm", "auto_examples/time_frequency/source_space_time_frequency", "auto_examples/time_frequency/temporal_whitening", "auto_examples/time_frequency/time_frequency_erds", "auto_examples/time_frequency/time_frequency_global_field_power", "auto_examples/time_frequency/time_frequency_simulated", "auto_examples/visualization/3d_to_2d", "auto_examples/visualization/brain", "auto_examples/visualization/channel_epochs_image", "auto_examples/visualization/eeg_on_scalp", "auto_examples/visualization/evoked_arrowmap", "auto_examples/visualization/evoked_topomap", "auto_examples/visualization/evoked_whitening", "auto_examples/visualization/index", "auto_examples/visualization/meg_sensors", "auto_examples/visualization/mne_helmet", "auto_examples/visualization/montage_sgskip", "auto_examples/visualization/parcellation", "auto_examples/visualization/publication_figure", "auto_examples/visualization/roi_erpimage_by_rt", "auto_examples/visualization/sensor_noise_level", "auto_examples/visualization/sg_execution_times", "auto_examples/visualization/ssp_projs_sensitivity_map", "auto_examples/visualization/topo_compare_conditions", "auto_examples/visualization/topo_customized", "auto_examples/visualization/xhemi", "auto_tutorials/clinical/10_ieeg_localize", "auto_tutorials/clinical/20_seeg", "auto_tutorials/clinical/30_ecog", "auto_tutorials/clinical/60_sleep", "auto_tutorials/clinical/index", "auto_tutorials/clinical/sg_execution_times", "auto_tutorials/epochs/10_epochs_overview", "auto_tutorials/epochs/15_baseline_regression", "auto_tutorials/epochs/20_visualize_epochs", "auto_tutorials/epochs/30_epochs_metadata", "auto_tutorials/epochs/40_autogenerate_metadata", "auto_tutorials/epochs/50_epochs_to_data_frame", "auto_tutorials/epochs/60_make_fixed_length_epochs", "auto_tutorials/epochs/index", "auto_tutorials/epochs/sg_execution_times", "auto_tutorials/evoked/10_evoked_overview", "auto_tutorials/evoked/20_visualize_evoked", "auto_tutorials/evoked/30_eeg_erp", "auto_tutorials/evoked/40_whitened", "auto_tutorials/evoked/index", "auto_tutorials/evoked/sg_execution_times", "auto_tutorials/forward/10_background_freesurfer", "auto_tutorials/forward/20_source_alignment", "auto_tutorials/forward/25_automated_coreg", "auto_tutorials/forward/30_forward", "auto_tutorials/forward/35_eeg_no_mri", "auto_tutorials/forward/50_background_freesurfer_mne", "auto_tutorials/forward/80_fix_bem_in_blender", "auto_tutorials/forward/90_compute_covariance", "auto_tutorials/forward/index", "auto_tutorials/forward/sg_execution_times", "auto_tutorials/index", "auto_tutorials/intro/10_overview", "auto_tutorials/intro/15_inplace", "auto_tutorials/intro/20_events_from_raw", "auto_tutorials/intro/30_info", "auto_tutorials/intro/40_sensor_locations", "auto_tutorials/intro/50_configure_mne", "auto_tutorials/intro/70_report", "auto_tutorials/intro/index", "auto_tutorials/intro/sg_execution_times", "auto_tutorials/inverse/10_stc_class", "auto_tutorials/inverse/20_dipole_fit", "auto_tutorials/inverse/30_mne_dspm_loreta", "auto_tutorials/inverse/35_dipole_orientations", "auto_tutorials/inverse/40_mne_fixed_free", "auto_tutorials/inverse/50_beamformer_lcmv", "auto_tutorials/inverse/60_visualize_stc", "auto_tutorials/inverse/70_eeg_mri_coords", "auto_tutorials/inverse/80_brainstorm_phantom_elekta", "auto_tutorials/inverse/85_brainstorm_phantom_ctf", "auto_tutorials/inverse/90_phantom_4DBTi", "auto_tutorials/inverse/index", "auto_tutorials/inverse/sg_execution_times", "auto_tutorials/io/10_reading_meg_data", "auto_tutorials/io/20_reading_eeg_data", "auto_tutorials/io/30_reading_fnirs_data", "auto_tutorials/io/60_ctf_bst_auditory", "auto_tutorials/io/index", "auto_tutorials/io/sg_execution_times", "auto_tutorials/machine-learning/30_strf", "auto_tutorials/machine-learning/50_decoding", "auto_tutorials/machine-learning/index", "auto_tutorials/machine-learning/sg_execution_times", "auto_tutorials/preprocessing/10_preprocessing_overview", "auto_tutorials/preprocessing/15_handling_bad_channels", "auto_tutorials/preprocessing/20_rejecting_bad_data", "auto_tutorials/preprocessing/25_background_filtering", "auto_tutorials/preprocessing/30_filtering_resampling", "auto_tutorials/preprocessing/35_artifact_correction_regression", "auto_tutorials/preprocessing/40_artifact_correction_ica", "auto_tutorials/preprocessing/45_projectors_background", "auto_tutorials/preprocessing/50_artifact_correction_ssp", "auto_tutorials/preprocessing/55_setting_eeg_reference", "auto_tutorials/preprocessing/59_head_positions", "auto_tutorials/preprocessing/60_maxwell_filtering_sss", "auto_tutorials/preprocessing/70_fnirs_processing", "auto_tutorials/preprocessing/index", "auto_tutorials/preprocessing/sg_execution_times", "auto_tutorials/raw/10_raw_overview", "auto_tutorials/raw/20_event_arrays", "auto_tutorials/raw/30_annotate_raw", "auto_tutorials/raw/40_visualize_raw", "auto_tutorials/raw/index", "auto_tutorials/raw/sg_execution_times", "auto_tutorials/simulation/10_array_objs", "auto_tutorials/simulation/70_point_spread", "auto_tutorials/simulation/80_dics", "auto_tutorials/simulation/index", "auto_tutorials/simulation/sg_execution_times", "auto_tutorials/stats-sensor-space/10_background_stats", "auto_tutorials/stats-sensor-space/20_erp_stats", "auto_tutorials/stats-sensor-space/40_cluster_1samp_time_freq", "auto_tutorials/stats-sensor-space/50_cluster_between_time_freq", "auto_tutorials/stats-sensor-space/70_cluster_rmANOVA_time_freq", "auto_tutorials/stats-sensor-space/75_cluster_ftest_spatiotemporal", "auto_tutorials/stats-sensor-space/index", "auto_tutorials/stats-sensor-space/sg_execution_times", "auto_tutorials/stats-source-space/20_cluster_1samp_spatiotemporal", "auto_tutorials/stats-source-space/30_cluster_ftest_spatiotemporal", "auto_tutorials/stats-source-space/60_cluster_rmANOVA_spatiotemporal", "auto_tutorials/stats-source-space/index", "auto_tutorials/stats-source-space/sg_execution_times", "auto_tutorials/time-freq/10_spectrum_class", "auto_tutorials/time-freq/20_sensors_time_frequency", "auto_tutorials/time-freq/50_ssvep", "auto_tutorials/time-freq/index", "auto_tutorials/time-freq/sg_execution_times", "bibliography", "cited", "connectivity", "covariance", "creating_from_arrays", "datasets", "decoding", "events", "export", "file_io", "forward", "funding", "generated/commands", "generated/mne.AcqParserFIF", "generated/mne.Annotations", "generated/mne.BaseEpochs", "generated/mne.BiHemiLabel", "generated/mne.Covariance", "generated/mne.Dipole", "generated/mne.DipoleFixed", "generated/mne.Epochs", "generated/mne.EpochsArray", "generated/mne.Evoked", "generated/mne.EvokedArray", "generated/mne.Forward", "generated/mne.Info", "generated/mne.Label", "generated/mne.MixedSourceEstimate", "generated/mne.MixedVectorSourceEstimate", "generated/mne.Projection", "generated/mne.Report", "generated/mne.SourceEstimate", "generated/mne.SourceMorph", "generated/mne.SourceSpaces", "generated/mne.VectorSourceEstimate", "generated/mne.VolSourceEstimate", "generated/mne.VolVectorSourceEstimate", "generated/mne.add_reference_channels", "generated/mne.add_source_space_distances", "generated/mne.annotations_from_events", "generated/mne.apply_forward", "generated/mne.apply_forward_raw", "generated/mne.average_forward_solutions", "generated/mne.baseline.rescale", "generated/mne.beamformer.Beamformer", "generated/mne.beamformer.apply_dics", "generated/mne.beamformer.apply_dics_csd", "generated/mne.beamformer.apply_dics_epochs", "generated/mne.beamformer.apply_lcmv", "generated/mne.beamformer.apply_lcmv_cov", "generated/mne.beamformer.apply_lcmv_epochs", "generated/mne.beamformer.apply_lcmv_raw", "generated/mne.beamformer.make_dics", "generated/mne.beamformer.make_lcmv", "generated/mne.beamformer.make_lcmv_resolution_matrix", "generated/mne.beamformer.rap_music", "generated/mne.beamformer.read_beamformer", "generated/mne.bem.ConductorModel", "generated/mne.bem.convert_flash_mris", "generated/mne.bem.distance_to_bem", "generated/mne.bem.fit_sphere_to_headshape", "generated/mne.bem.get_fitting_dig", "generated/mne.bem.make_flash_bem", "generated/mne.bem.make_scalp_surfaces", "generated/mne.bem.make_watershed_bem", "generated/mne.channel_indices_by_type", "generated/mne.channel_type", "generated/mne.channels.DigMontage", "generated/mne.channels.Layout", "generated/mne.channels.combine_channels", "generated/mne.channels.compute_dev_head_t", "generated/mne.channels.compute_native_head_t", "generated/mne.channels.equalize_channels", "generated/mne.channels.find_ch_adjacency", "generated/mne.channels.find_layout", "generated/mne.channels.fix_mag_coil_types", "generated/mne.channels.generate_2d_layout", "generated/mne.channels.get_builtin_ch_adjacencies", "generated/mne.channels.get_builtin_montages", "generated/mne.channels.make_1020_channel_selections", "generated/mne.channels.make_dig_montage", "generated/mne.channels.make_eeg_layout", "generated/mne.channels.make_grid_layout", "generated/mne.channels.make_standard_montage", "generated/mne.channels.read_ch_adjacency", "generated/mne.channels.read_custom_montage", "generated/mne.channels.read_dig_captrak", "generated/mne.channels.read_dig_dat", "generated/mne.channels.read_dig_egi", "generated/mne.channels.read_dig_fif", "generated/mne.channels.read_dig_hpts", "generated/mne.channels.read_dig_localite", "generated/mne.channels.read_dig_polhemus_isotrak", "generated/mne.channels.read_layout", "generated/mne.channels.read_polhemus_fastscan", "generated/mne.channels.rename_channels", "generated/mne.chpi.compute_chpi_amplitudes", "generated/mne.chpi.compute_chpi_locs", "generated/mne.chpi.compute_chpi_snr", "generated/mne.chpi.compute_head_pos", "generated/mne.chpi.extract_chpi_locs_ctf", "generated/mne.chpi.extract_chpi_locs_kit", "generated/mne.chpi.filter_chpi", "generated/mne.chpi.get_active_chpi", "generated/mne.chpi.get_chpi_info", "generated/mne.chpi.head_pos_to_trans_rot_t", "generated/mne.chpi.read_head_pos", "generated/mne.chpi.write_head_pos", "generated/mne.combine_evoked", "generated/mne.compute_covariance", "generated/mne.compute_proj_epochs", "generated/mne.compute_proj_evoked", "generated/mne.compute_proj_raw", "generated/mne.compute_rank", "generated/mne.compute_raw_covariance", "generated/mne.compute_source_morph", "generated/mne.concatenate_epochs", "generated/mne.concatenate_events", "generated/mne.concatenate_raws", "generated/mne.convert_forward_solution", "generated/mne.coreg.Coregistration", "generated/mne.coreg.estimate_head_mri_t", "generated/mne.coreg.get_mni_fiducials", "generated/mne.cov.compute_whitener", "generated/mne.cov.prepare_noise_cov", "generated/mne.cov.regularize", "generated/mne.create_default_subject", "generated/mne.create_info", "generated/mne.cuda.get_cuda_memory", "generated/mne.cuda.init_cuda", "generated/mne.cuda.set_cuda_device", "generated/mne.datasets.brainstorm.bst_auditory.data_path", "generated/mne.datasets.brainstorm.bst_raw.data_path", "generated/mne.datasets.brainstorm.bst_resting.data_path", "generated/mne.datasets.eegbci.load_data", "generated/mne.datasets.eegbci.standardize", "generated/mne.datasets.epilepsy_ecog.data_path", "generated/mne.datasets.erp_core.data_path", "generated/mne.datasets.fetch_aparc_sub_parcellation", "generated/mne.datasets.fetch_dataset", "generated/mne.datasets.fetch_fsaverage", "generated/mne.datasets.fetch_hcp_mmp_parcellation", "generated/mne.datasets.fetch_infant_template", "generated/mne.datasets.fetch_phantom", "generated/mne.datasets.fnirs_motor.data_path", "generated/mne.datasets.has_dataset", "generated/mne.datasets.hf_sef.data_path", "generated/mne.datasets.kiloword.data_path", "generated/mne.datasets.limo.load_data", "generated/mne.datasets.misc.data_path", "generated/mne.datasets.mtrf.data_path", "generated/mne.datasets.multimodal.data_path", "generated/mne.datasets.opm.data_path", "generated/mne.datasets.phantom_4dbti.data_path", "generated/mne.datasets.refmeg_noise.data_path", "generated/mne.datasets.sample.data_path", "generated/mne.datasets.sleep_physionet.age.fetch_data", "generated/mne.datasets.sleep_physionet.temazepam.fetch_data", "generated/mne.datasets.somato.data_path", "generated/mne.datasets.spm_face.data_path", "generated/mne.datasets.ssvep.data_path", "generated/mne.datasets.visual_92_categories.data_path", "generated/mne.decimate_surface", "generated/mne.decoding.CSP", "generated/mne.decoding.EMS", "generated/mne.decoding.FilterEstimator", "generated/mne.decoding.GeneralizingEstimator", "generated/mne.decoding.LinearModel", "generated/mne.decoding.PSDEstimator", "generated/mne.decoding.ReceptiveField", "generated/mne.decoding.SPoC", "generated/mne.decoding.SSD", "generated/mne.decoding.Scaler", "generated/mne.decoding.SlidingEstimator", "generated/mne.decoding.TemporalFilter", "generated/mne.decoding.TimeDelayingRidge", "generated/mne.decoding.TimeFrequency", "generated/mne.decoding.UnsupervisedSpatialFilter", "generated/mne.decoding.Vectorizer", "generated/mne.decoding.compute_ems", "generated/mne.decoding.cross_val_multiscore", "generated/mne.decoding.get_coef", "generated/mne.dig_mri_distances", "generated/mne.dipole.get_phantom_dipoles", "generated/mne.epochs.average_movements", "generated/mne.epochs.combine_event_ids", "generated/mne.epochs.equalize_epoch_counts", "generated/mne.epochs.make_metadata", "generated/mne.equalize_channels", "generated/mne.event.define_target_events", "generated/mne.event.match_event_names", "generated/mne.event.shift_time_events", "generated/mne.events_from_annotations", "generated/mne.export.export_epochs", "generated/mne.export.export_evokeds", "generated/mne.export.export_evokeds_mff", "generated/mne.export.export_raw", "generated/mne.extract_label_time_course", "generated/mne.filter.construct_iir_filter", "generated/mne.filter.create_filter", "generated/mne.filter.estimate_ringing_samples", "generated/mne.filter.filter_data", "generated/mne.filter.notch_filter", "generated/mne.filter.resample", "generated/mne.find_events", "generated/mne.find_stim_steps", "generated/mne.fit_dipole", "generated/mne.forward.compute_depth_prior", "generated/mne.forward.compute_orient_prior", "generated/mne.forward.restrict_forward_to_label", "generated/mne.forward.restrict_forward_to_stc", "generated/mne.get_config", "generated/mne.get_config_path", "generated/mne.get_head_surf", "generated/mne.get_meg_helmet_surf", "generated/mne.get_montage_volume_labels", "generated/mne.get_volume_labels_from_aseg", "generated/mne.get_volume_labels_from_src", "generated/mne.grade_to_tris", "generated/mne.grade_to_vertices", "generated/mne.grand_average", "generated/mne.grow_labels", "generated/mne.gui.coregistration", "generated/mne.gui.locate_ieeg", "generated/mne.head_to_mni", "generated/mne.head_to_mri", "generated/mne.inverse_sparse.gamma_map", "generated/mne.inverse_sparse.make_stc_from_dipoles", "generated/mne.inverse_sparse.mixed_norm", "generated/mne.inverse_sparse.tf_mixed_norm", "generated/mne.io.BaseRaw", "generated/mne.io.Raw", "generated/mne.io.RawArray", "generated/mne.io.anonymize_info", "generated/mne.io.kit.read_mrk", "generated/mne.io.read_fiducials", "generated/mne.io.read_info", "generated/mne.io.read_raw", "generated/mne.io.read_raw_artemis123", "generated/mne.io.read_raw_bdf", "generated/mne.io.read_raw_boxy", "generated/mne.io.read_raw_brainvision", "generated/mne.io.read_raw_bti", "generated/mne.io.read_raw_cnt", "generated/mne.io.read_raw_ctf", "generated/mne.io.read_raw_curry", "generated/mne.io.read_raw_edf", "generated/mne.io.read_raw_eeglab", "generated/mne.io.read_raw_egi", "generated/mne.io.read_raw_eximia", "generated/mne.io.read_raw_fieldtrip", "generated/mne.io.read_raw_fif", "generated/mne.io.read_raw_gdf", "generated/mne.io.read_raw_hitachi", "generated/mne.io.read_raw_kit", "generated/mne.io.read_raw_nedf", "generated/mne.io.read_raw_nicolet", "generated/mne.io.read_raw_nihon", "generated/mne.io.read_raw_nirx", "generated/mne.io.read_raw_persyst", "generated/mne.io.read_raw_snirf", "generated/mne.io.show_fiff", "generated/mne.io.write_fiducials", "generated/mne.label.select_sources", "generated/mne.label_sign_flip", "generated/mne.labels_to_stc", "generated/mne.make_ad_hoc_cov", "generated/mne.make_bem_model", "generated/mne.make_bem_solution", "generated/mne.make_field_map", "generated/mne.make_fixed_length_epochs", "generated/mne.make_fixed_length_events", "generated/mne.make_forward_dipole", "generated/mne.make_forward_solution", "generated/mne.make_sphere_model", "generated/mne.merge_events", "generated/mne.minimum_norm.InverseOperator", "generated/mne.minimum_norm.apply_inverse", "generated/mne.minimum_norm.apply_inverse_cov", "generated/mne.minimum_norm.apply_inverse_epochs", "generated/mne.minimum_norm.apply_inverse_raw", "generated/mne.minimum_norm.apply_inverse_tfr_epochs", "generated/mne.minimum_norm.compute_rank_inverse", "generated/mne.minimum_norm.compute_source_psd", "generated/mne.minimum_norm.compute_source_psd_epochs", "generated/mne.minimum_norm.estimate_snr", "generated/mne.minimum_norm.get_cross_talk", "generated/mne.minimum_norm.get_point_spread", "generated/mne.minimum_norm.make_inverse_operator", "generated/mne.minimum_norm.make_inverse_resolution_matrix", "generated/mne.minimum_norm.prepare_inverse_operator", "generated/mne.minimum_norm.read_inverse_operator", "generated/mne.minimum_norm.resolution_metrics", "generated/mne.minimum_norm.source_band_induced_power", "generated/mne.minimum_norm.source_induced_power", "generated/mne.minimum_norm.write_inverse_operator", "generated/mne.morph_labels", "generated/mne.morph_source_spaces", "generated/mne.open_docs", "generated/mne.open_report", "generated/mne.parse_config", "generated/mne.pick_channels", "generated/mne.pick_channels_cov", "generated/mne.pick_channels_forward", "generated/mne.pick_channels_regexp", "generated/mne.pick_events", "generated/mne.pick_info", "generated/mne.pick_types", "generated/mne.pick_types_forward", "generated/mne.preprocessing.EOGRegression", "generated/mne.preprocessing.ICA", "generated/mne.preprocessing.Xdawn", "generated/mne.preprocessing.annotate_amplitude", "generated/mne.preprocessing.annotate_break", "generated/mne.preprocessing.annotate_movement", "generated/mne.preprocessing.annotate_muscle_zscore", "generated/mne.preprocessing.annotate_nan", "generated/mne.preprocessing.compute_average_dev_head_t", "generated/mne.preprocessing.compute_bridged_electrodes", "generated/mne.preprocessing.compute_current_source_density", "generated/mne.preprocessing.compute_fine_calibration", "generated/mne.preprocessing.compute_maxwell_basis", "generated/mne.preprocessing.compute_proj_ecg", "generated/mne.preprocessing.compute_proj_eog", "generated/mne.preprocessing.corrmap", "generated/mne.preprocessing.cortical_signal_suppression", "generated/mne.preprocessing.create_ecg_epochs", "generated/mne.preprocessing.create_eog_epochs", "generated/mne.preprocessing.equalize_bads", "generated/mne.preprocessing.find_bad_channels_maxwell", "generated/mne.preprocessing.find_ecg_events", "generated/mne.preprocessing.find_eog_events", "generated/mne.preprocessing.fix_stim_artifact", "generated/mne.preprocessing.ica_find_ecg_events", "generated/mne.preprocessing.ica_find_eog_events", "generated/mne.preprocessing.ieeg.project_sensors_onto_brain", "generated/mne.preprocessing.infomax", "generated/mne.preprocessing.interpolate_bridged_electrodes", "generated/mne.preprocessing.maxwell_filter", "generated/mne.preprocessing.maxwell_filter_prepare_emptyroom", "generated/mne.preprocessing.nirs.beer_lambert_law", "generated/mne.preprocessing.nirs.optical_density", "generated/mne.preprocessing.nirs.scalp_coupling_index", "generated/mne.preprocessing.nirs.short_channels", "generated/mne.preprocessing.nirs.source_detector_distances", "generated/mne.preprocessing.nirs.temporal_derivative_distribution_repair", "generated/mne.preprocessing.oversampled_temporal_projection", "generated/mne.preprocessing.peak_finder", "generated/mne.preprocessing.read_eog_regression", "generated/mne.preprocessing.read_fine_calibration", "generated/mne.preprocessing.read_ica", "generated/mne.preprocessing.read_ica_eeglab", "generated/mne.preprocessing.realign_raw", "generated/mne.preprocessing.regress_artifact", "generated/mne.preprocessing.write_fine_calibration", "generated/mne.random_parcellation", "generated/mne.read_annotations", "generated/mne.read_bem_solution", "generated/mne.read_bem_surfaces", "generated/mne.read_cov", "generated/mne.read_dipole", "generated/mne.read_epochs", "generated/mne.read_epochs_eeglab", "generated/mne.read_epochs_fieldtrip", "generated/mne.read_epochs_kit", "generated/mne.read_events", "generated/mne.read_evoked_besa", "generated/mne.read_evoked_fieldtrip", "generated/mne.read_evokeds", "generated/mne.read_evokeds_mff", "generated/mne.read_forward_solution", "generated/mne.read_freesurfer_lut", "generated/mne.read_label", "generated/mne.read_labels_from_annot", "generated/mne.read_lta", "generated/mne.read_morph_map", "generated/mne.read_proj", "generated/mne.read_reject_parameters", "generated/mne.read_source_estimate", "generated/mne.read_source_morph", "generated/mne.read_source_spaces", "generated/mne.read_surface", "generated/mne.read_talxfm", "generated/mne.read_trans", "generated/mne.read_tri", "generated/mne.read_vectorview_selection", "generated/mne.rename_channels", "generated/mne.scale_bem", "generated/mne.scale_labels", "generated/mne.scale_mri", "generated/mne.scale_source_space", "generated/mne.sensitivity_map", "generated/mne.set_bipolar_reference", "generated/mne.set_cache_dir", "generated/mne.set_config", "generated/mne.set_eeg_reference", "generated/mne.set_log_file", "generated/mne.set_log_level", "generated/mne.setup_source_space", "generated/mne.setup_volume_source_space", "generated/mne.simulation.SourceSimulator", "generated/mne.simulation.add_chpi", "generated/mne.simulation.add_ecg", "generated/mne.simulation.add_eog", "generated/mne.simulation.add_noise", "generated/mne.simulation.metrics.cosine_score", "generated/mne.simulation.metrics.f1_score", "generated/mne.simulation.metrics.peak_position_error", "generated/mne.simulation.metrics.precision_score", "generated/mne.simulation.metrics.recall_score", "generated/mne.simulation.metrics.region_localization_error", "generated/mne.simulation.metrics.roc_auc_score", "generated/mne.simulation.metrics.spatial_deviation_error", "generated/mne.simulation.select_source_in_label", "generated/mne.simulation.simulate_evoked", "generated/mne.simulation.simulate_raw", "generated/mne.simulation.simulate_sparse_stc", "generated/mne.simulation.simulate_stc", "generated/mne.source_space.compute_distance_to_sensors", "generated/mne.source_space.get_decimated_surfaces", "generated/mne.spatial_dist_adjacency", "generated/mne.spatial_inter_hemi_adjacency", "generated/mne.spatial_src_adjacency", "generated/mne.spatial_tris_adjacency", "generated/mne.spatio_temporal_dist_adjacency", "generated/mne.spatio_temporal_src_adjacency", "generated/mne.spatio_temporal_tris_adjacency", "generated/mne.split_label", "generated/mne.stats.bonferroni_correction", "generated/mne.stats.bootstrap_confidence_interval", "generated/mne.stats.combine_adjacency", "generated/mne.stats.f_mway_rm", "generated/mne.stats.f_oneway", "generated/mne.stats.f_threshold_mway_rm", "generated/mne.stats.fdr_correction", "generated/mne.stats.linear_regression", "generated/mne.stats.linear_regression_raw", "generated/mne.stats.permutation_cluster_1samp_test", "generated/mne.stats.permutation_cluster_test", "generated/mne.stats.permutation_t_test", "generated/mne.stats.spatio_temporal_cluster_1samp_test", "generated/mne.stats.spatio_temporal_cluster_test", "generated/mne.stats.summarize_clusters_stc", "generated/mne.stats.ttest_1samp_no_p", "generated/mne.stats.ttest_ind_no_p", "generated/mne.stc_near_sensors", "generated/mne.stc_to_label", "generated/mne.surface.complete_surface_info", "generated/mne.surface.read_curvature", "generated/mne.sys_info", "generated/mne.time_frequency.AverageTFR", "generated/mne.time_frequency.CrossSpectralDensity", "generated/mne.time_frequency.EpochsSpectrum", "generated/mne.time_frequency.EpochsTFR", "generated/mne.time_frequency.Spectrum", "generated/mne.time_frequency.csd_array_fourier", "generated/mne.time_frequency.csd_array_morlet", "generated/mne.time_frequency.csd_array_multitaper", "generated/mne.time_frequency.csd_fourier", "generated/mne.time_frequency.csd_morlet", "generated/mne.time_frequency.csd_multitaper", "generated/mne.time_frequency.csd_tfr", "generated/mne.time_frequency.dpss_windows", "generated/mne.time_frequency.fit_iir_model_raw", "generated/mne.time_frequency.istft", "generated/mne.time_frequency.morlet", "generated/mne.time_frequency.pick_channels_csd", "generated/mne.time_frequency.psd_array_multitaper", "generated/mne.time_frequency.psd_array_welch", "generated/mne.time_frequency.psd_multitaper", "generated/mne.time_frequency.psd_welch", "generated/mne.time_frequency.read_csd", "generated/mne.time_frequency.read_spectrum", "generated/mne.time_frequency.read_tfrs", "generated/mne.time_frequency.stft", "generated/mne.time_frequency.stftfreq", "generated/mne.time_frequency.tfr.cwt", "generated/mne.time_frequency.tfr.morlet", "generated/mne.time_frequency.tfr_array_morlet", "generated/mne.time_frequency.tfr_array_multitaper", "generated/mne.time_frequency.tfr_array_stockwell", "generated/mne.time_frequency.tfr_morlet", "generated/mne.time_frequency.tfr_multitaper", "generated/mne.time_frequency.tfr_stockwell", "generated/mne.time_frequency.write_tfrs", "generated/mne.transform_surface_to", "generated/mne.transforms.Transform", "generated/mne.transforms.apply_volume_registration", "generated/mne.transforms.compute_volume_registration", "generated/mne.transforms.quat_to_rot", "generated/mne.transforms.read_ras_mni_t", "generated/mne.transforms.rot_to_quat", "generated/mne.use_coil_def", "generated/mne.use_log_level", "generated/mne.utils.deprecated", "generated/mne.utils.warn", "generated/mne.verbose", "generated/mne.vertex_to_mni", "generated/mne.viz.Brain", "generated/mne.viz.ClickableImage", "generated/mne.viz.Figure3D", "generated/mne.viz.add_background_image", "generated/mne.viz.centers_to_edges", "generated/mne.viz.circular_layout", "generated/mne.viz.close_3d_figure", "generated/mne.viz.close_all_3d_figures", "generated/mne.viz.compare_fiff", "generated/mne.viz.create_3d_figure", "generated/mne.viz.get_3d_backend", "generated/mne.viz.get_brain_class", "generated/mne.viz.get_browser_backend", "generated/mne.viz.iter_topography", "generated/mne.viz.link_brains", "generated/mne.viz.mne_analyze_colormap", "generated/mne.viz.plot_alignment", "generated/mne.viz.plot_arrowmap", "generated/mne.viz.plot_bem", "generated/mne.viz.plot_brain_colorbar", "generated/mne.viz.plot_bridged_electrodes", "generated/mne.viz.plot_ch_adjacency", "generated/mne.viz.plot_channel_labels_circle", "generated/mne.viz.plot_chpi_snr", "generated/mne.viz.plot_compare_evokeds", "generated/mne.viz.plot_cov", "generated/mne.viz.plot_csd", "generated/mne.viz.plot_dipole_amplitudes", "generated/mne.viz.plot_dipole_locations", "generated/mne.viz.plot_drop_log", "generated/mne.viz.plot_epochs", "generated/mne.viz.plot_epochs_image", "generated/mne.viz.plot_epochs_psd_topomap", "generated/mne.viz.plot_events", "generated/mne.viz.plot_evoked", "generated/mne.viz.plot_evoked_field", "generated/mne.viz.plot_evoked_image", "generated/mne.viz.plot_evoked_joint", "generated/mne.viz.plot_evoked_topo", "generated/mne.viz.plot_evoked_topomap", "generated/mne.viz.plot_evoked_white", "generated/mne.viz.plot_filter", "generated/mne.viz.plot_head_positions", "generated/mne.viz.plot_ica_components", "generated/mne.viz.plot_ica_overlay", "generated/mne.viz.plot_ica_properties", "generated/mne.viz.plot_ica_scores", "generated/mne.viz.plot_ica_sources", "generated/mne.viz.plot_ideal_filter", "generated/mne.viz.plot_layout", "generated/mne.viz.plot_montage", "generated/mne.viz.plot_projs_joint", "generated/mne.viz.plot_projs_topomap", "generated/mne.viz.plot_raw", "generated/mne.viz.plot_raw_psd", "generated/mne.viz.plot_regression_weights", "generated/mne.viz.plot_sensors", "generated/mne.viz.plot_snr_estimate", "generated/mne.viz.plot_source_estimates", "generated/mne.viz.plot_sparse_source_estimates", "generated/mne.viz.plot_tfr_topomap", "generated/mne.viz.plot_topo_image_epochs", "generated/mne.viz.plot_topomap", "generated/mne.viz.plot_vector_source_estimates", "generated/mne.viz.plot_volume_source_estimates", "generated/mne.viz.set_3d_backend", "generated/mne.viz.set_3d_options", "generated/mne.viz.set_3d_title", "generated/mne.viz.set_3d_view", "generated/mne.viz.set_browser_backend", "generated/mne.viz.snapshot_brain_montage", "generated/mne.viz.use_3d_backend", "generated/mne.viz.use_browser_backend", "generated/mne.warp_montage_volume", "generated/mne.what", "generated/mne.write_bem_solution", "generated/mne.write_bem_surfaces", "generated/mne.write_cov", "generated/mne.write_events", "generated/mne.write_evokeds", "generated/mne.write_forward_solution", "generated/mne.write_head_bem", "generated/mne.write_label", "generated/mne.write_labels_to_annot", "generated/mne.write_proj", "generated/mne.write_source_spaces", "generated/mne.write_surface", "generated/mne.write_trans", "glossary", "index", "install/advanced", "install/check_installation", "install/contributing", "install/freesurfer", "install/index", "install/installers", "install/manual_install", "install/manual_install_python", "install/mne_c", "install/mne_tools_suite", "install/updating", "inverse", "logging", "martinos", "mne_cpp", "most_used_classes", "mri", "overview/cite", "overview/cookbook", "overview/datasets_index", "overview/design_philosophy", "overview/development", "overview/faq", "overview/get_help", "overview/governance", "overview/implementation", "overview/index", "overview/learn_python", "overview/matlab", "overview/migrating", "overview/people", "overview/roadmap", "preprocessing", "python_reference", "reading_raw_data", "realtime", "report", "sensor_space", "simulation", "source_space", "statistics", "time_frequency", "visualization", "whats_new"], "filenames": ["auto_examples/connectivity/index.rst", "auto_examples/datasets/brainstorm_data.rst", "auto_examples/datasets/hf_sef_data.rst", "auto_examples/datasets/index.rst", "auto_examples/datasets/limo_data.rst", "auto_examples/datasets/opm_data.rst", "auto_examples/datasets/sg_execution_times.rst", "auto_examples/datasets/spm_faces_dataset_sgskip.rst", "auto_examples/decoding/decoding_csp_eeg.rst", "auto_examples/decoding/decoding_csp_timefreq.rst", "auto_examples/decoding/decoding_rsa_sgskip.rst", "auto_examples/decoding/decoding_spatio_temporal_source.rst", "auto_examples/decoding/decoding_spoc_CMC.rst", "auto_examples/decoding/decoding_time_generalization_conditions.rst", "auto_examples/decoding/decoding_unsupervised_spatial_filter.rst", "auto_examples/decoding/decoding_xdawn_eeg.rst", "auto_examples/decoding/ems_filtering.rst", "auto_examples/decoding/index.rst", "auto_examples/decoding/linear_model_patterns.rst", "auto_examples/decoding/receptive_field_mtrf.rst", "auto_examples/decoding/sg_execution_times.rst", "auto_examples/decoding/ssd_spatial_filters.rst", "auto_examples/forward/forward_sensitivity_maps.rst", "auto_examples/forward/index.rst", "auto_examples/forward/left_cerebellum_volume_source.rst", "auto_examples/forward/sg_execution_times.rst", "auto_examples/forward/source_space_morphing.rst", "auto_examples/index.rst", "auto_examples/inverse/compute_mne_inverse_epochs_in_label.rst", "auto_examples/inverse/compute_mne_inverse_raw_in_label.rst", "auto_examples/inverse/compute_mne_inverse_volume.rst", "auto_examples/inverse/custom_inverse_solver.rst", "auto_examples/inverse/dics_source_power.rst", "auto_examples/inverse/evoked_ers_source_power.rst", "auto_examples/inverse/gamma_map_inverse.rst", "auto_examples/inverse/index.rst", "auto_examples/inverse/label_activation_from_stc.rst", "auto_examples/inverse/label_from_stc.rst", "auto_examples/inverse/label_source_activations.rst", "auto_examples/inverse/mixed_norm_inverse.rst", "auto_examples/inverse/mixed_source_space_inverse.rst", "auto_examples/inverse/mne_cov_power.rst", "auto_examples/inverse/morph_surface_stc.rst", "auto_examples/inverse/morph_volume_stc.rst", "auto_examples/inverse/multi_dipole_model.rst", "auto_examples/inverse/multidict_reweighted_tfmxne.rst", "auto_examples/inverse/psf_ctf_label_leakage.rst", "auto_examples/inverse/psf_ctf_vertices.rst", "auto_examples/inverse/psf_ctf_vertices_lcmv.rst", "auto_examples/inverse/psf_volume.rst", "auto_examples/inverse/rap_music.rst", "auto_examples/inverse/read_inverse.rst", "auto_examples/inverse/read_stc.rst", "auto_examples/inverse/resolution_metrics.rst", "auto_examples/inverse/resolution_metrics_eegmeg.rst", "auto_examples/inverse/sg_execution_times.rst", "auto_examples/inverse/snr_estimate.rst", "auto_examples/inverse/source_space_snr.rst", "auto_examples/inverse/time_frequency_mixed_norm_inverse.rst", "auto_examples/inverse/vector_mne_solution.rst", "auto_examples/io/elekta_epochs.rst", "auto_examples/io/index.rst", "auto_examples/io/read_neo_format.rst", "auto_examples/io/read_noise_covariance_matrix.rst", "auto_examples/io/read_xdf.rst", "auto_examples/io/sg_execution_times.rst", "auto_examples/preprocessing/css.rst", "auto_examples/preprocessing/define_target_events.rst", "auto_examples/preprocessing/eeg_bridging.rst", "auto_examples/preprocessing/eeg_csd.rst", "auto_examples/preprocessing/eog_artifact_histogram.rst", "auto_examples/preprocessing/eog_regression.rst", "auto_examples/preprocessing/find_ref_artifacts.rst", "auto_examples/preprocessing/fnirs_artifact_removal.rst", "auto_examples/preprocessing/ica_comparison.rst", "auto_examples/preprocessing/index.rst", "auto_examples/preprocessing/interpolate_bad_channels.rst", "auto_examples/preprocessing/movement_compensation.rst", "auto_examples/preprocessing/movement_detection.rst", "auto_examples/preprocessing/muscle_detection.rst", "auto_examples/preprocessing/muscle_ica.rst", "auto_examples/preprocessing/otp.rst", "auto_examples/preprocessing/sg_execution_times.rst", "auto_examples/preprocessing/shift_evoked.rst", "auto_examples/preprocessing/virtual_evoked.rst", "auto_examples/preprocessing/xdawn_denoising.rst", "auto_examples/simulation/index.rst", "auto_examples/simulation/plot_stc_metrics.rst", "auto_examples/simulation/sg_execution_times.rst", "auto_examples/simulation/simulate_evoked_data.rst", "auto_examples/simulation/simulate_raw_data.rst", "auto_examples/simulation/simulated_raw_data_using_subject_anatomy.rst", "auto_examples/simulation/source_simulator.rst", "auto_examples/stats/cluster_stats_evoked.rst", "auto_examples/stats/fdr_stats_evoked.rst", "auto_examples/stats/index.rst", "auto_examples/stats/linear_regression_raw.rst", "auto_examples/stats/sensor_permutation_test.rst", "auto_examples/stats/sensor_regression.rst", "auto_examples/stats/sg_execution_times.rst", "auto_examples/time_frequency/compute_csd.rst", "auto_examples/time_frequency/compute_source_psd_epochs.rst", "auto_examples/time_frequency/index.rst", "auto_examples/time_frequency/sg_execution_times.rst", "auto_examples/time_frequency/source_label_time_frequency.rst", "auto_examples/time_frequency/source_power_spectrum.rst", "auto_examples/time_frequency/source_power_spectrum_opm.rst", "auto_examples/time_frequency/source_space_time_frequency.rst", "auto_examples/time_frequency/temporal_whitening.rst", "auto_examples/time_frequency/time_frequency_erds.rst", "auto_examples/time_frequency/time_frequency_global_field_power.rst", "auto_examples/time_frequency/time_frequency_simulated.rst", "auto_examples/visualization/3d_to_2d.rst", "auto_examples/visualization/brain.rst", "auto_examples/visualization/channel_epochs_image.rst", "auto_examples/visualization/eeg_on_scalp.rst", "auto_examples/visualization/evoked_arrowmap.rst", "auto_examples/visualization/evoked_topomap.rst", "auto_examples/visualization/evoked_whitening.rst", "auto_examples/visualization/index.rst", "auto_examples/visualization/meg_sensors.rst", "auto_examples/visualization/mne_helmet.rst", "auto_examples/visualization/montage_sgskip.rst", "auto_examples/visualization/parcellation.rst", "auto_examples/visualization/publication_figure.rst", "auto_examples/visualization/roi_erpimage_by_rt.rst", "auto_examples/visualization/sensor_noise_level.rst", "auto_examples/visualization/sg_execution_times.rst", "auto_examples/visualization/ssp_projs_sensitivity_map.rst", "auto_examples/visualization/topo_compare_conditions.rst", "auto_examples/visualization/topo_customized.rst", "auto_examples/visualization/xhemi.rst", "auto_tutorials/clinical/10_ieeg_localize.rst", "auto_tutorials/clinical/20_seeg.rst", "auto_tutorials/clinical/30_ecog.rst", "auto_tutorials/clinical/60_sleep.rst", "auto_tutorials/clinical/index.rst", "auto_tutorials/clinical/sg_execution_times.rst", "auto_tutorials/epochs/10_epochs_overview.rst", "auto_tutorials/epochs/15_baseline_regression.rst", "auto_tutorials/epochs/20_visualize_epochs.rst", "auto_tutorials/epochs/30_epochs_metadata.rst", "auto_tutorials/epochs/40_autogenerate_metadata.rst", "auto_tutorials/epochs/50_epochs_to_data_frame.rst", "auto_tutorials/epochs/60_make_fixed_length_epochs.rst", "auto_tutorials/epochs/index.rst", "auto_tutorials/epochs/sg_execution_times.rst", "auto_tutorials/evoked/10_evoked_overview.rst", "auto_tutorials/evoked/20_visualize_evoked.rst", "auto_tutorials/evoked/30_eeg_erp.rst", "auto_tutorials/evoked/40_whitened.rst", "auto_tutorials/evoked/index.rst", "auto_tutorials/evoked/sg_execution_times.rst", "auto_tutorials/forward/10_background_freesurfer.rst", "auto_tutorials/forward/20_source_alignment.rst", "auto_tutorials/forward/25_automated_coreg.rst", "auto_tutorials/forward/30_forward.rst", "auto_tutorials/forward/35_eeg_no_mri.rst", "auto_tutorials/forward/50_background_freesurfer_mne.rst", "auto_tutorials/forward/80_fix_bem_in_blender.rst", "auto_tutorials/forward/90_compute_covariance.rst", "auto_tutorials/forward/index.rst", "auto_tutorials/forward/sg_execution_times.rst", "auto_tutorials/index.rst", "auto_tutorials/intro/10_overview.rst", "auto_tutorials/intro/15_inplace.rst", "auto_tutorials/intro/20_events_from_raw.rst", "auto_tutorials/intro/30_info.rst", "auto_tutorials/intro/40_sensor_locations.rst", "auto_tutorials/intro/50_configure_mne.rst", "auto_tutorials/intro/70_report.rst", "auto_tutorials/intro/index.rst", "auto_tutorials/intro/sg_execution_times.rst", "auto_tutorials/inverse/10_stc_class.rst", "auto_tutorials/inverse/20_dipole_fit.rst", "auto_tutorials/inverse/30_mne_dspm_loreta.rst", "auto_tutorials/inverse/35_dipole_orientations.rst", "auto_tutorials/inverse/40_mne_fixed_free.rst", "auto_tutorials/inverse/50_beamformer_lcmv.rst", "auto_tutorials/inverse/60_visualize_stc.rst", "auto_tutorials/inverse/70_eeg_mri_coords.rst", "auto_tutorials/inverse/80_brainstorm_phantom_elekta.rst", "auto_tutorials/inverse/85_brainstorm_phantom_ctf.rst", "auto_tutorials/inverse/90_phantom_4DBTi.rst", "auto_tutorials/inverse/index.rst", "auto_tutorials/inverse/sg_execution_times.rst", "auto_tutorials/io/10_reading_meg_data.rst", "auto_tutorials/io/20_reading_eeg_data.rst", "auto_tutorials/io/30_reading_fnirs_data.rst", "auto_tutorials/io/60_ctf_bst_auditory.rst", "auto_tutorials/io/index.rst", "auto_tutorials/io/sg_execution_times.rst", "auto_tutorials/machine-learning/30_strf.rst", "auto_tutorials/machine-learning/50_decoding.rst", "auto_tutorials/machine-learning/index.rst", "auto_tutorials/machine-learning/sg_execution_times.rst", "auto_tutorials/preprocessing/10_preprocessing_overview.rst", "auto_tutorials/preprocessing/15_handling_bad_channels.rst", "auto_tutorials/preprocessing/20_rejecting_bad_data.rst", "auto_tutorials/preprocessing/25_background_filtering.rst", "auto_tutorials/preprocessing/30_filtering_resampling.rst", "auto_tutorials/preprocessing/35_artifact_correction_regression.rst", "auto_tutorials/preprocessing/40_artifact_correction_ica.rst", "auto_tutorials/preprocessing/45_projectors_background.rst", "auto_tutorials/preprocessing/50_artifact_correction_ssp.rst", "auto_tutorials/preprocessing/55_setting_eeg_reference.rst", "auto_tutorials/preprocessing/59_head_positions.rst", "auto_tutorials/preprocessing/60_maxwell_filtering_sss.rst", "auto_tutorials/preprocessing/70_fnirs_processing.rst", "auto_tutorials/preprocessing/index.rst", "auto_tutorials/preprocessing/sg_execution_times.rst", "auto_tutorials/raw/10_raw_overview.rst", "auto_tutorials/raw/20_event_arrays.rst", "auto_tutorials/raw/30_annotate_raw.rst", "auto_tutorials/raw/40_visualize_raw.rst", "auto_tutorials/raw/index.rst", "auto_tutorials/raw/sg_execution_times.rst", "auto_tutorials/simulation/10_array_objs.rst", "auto_tutorials/simulation/70_point_spread.rst", "auto_tutorials/simulation/80_dics.rst", "auto_tutorials/simulation/index.rst", "auto_tutorials/simulation/sg_execution_times.rst", "auto_tutorials/stats-sensor-space/10_background_stats.rst", "auto_tutorials/stats-sensor-space/20_erp_stats.rst", "auto_tutorials/stats-sensor-space/40_cluster_1samp_time_freq.rst", "auto_tutorials/stats-sensor-space/50_cluster_between_time_freq.rst", "auto_tutorials/stats-sensor-space/70_cluster_rmANOVA_time_freq.rst", "auto_tutorials/stats-sensor-space/75_cluster_ftest_spatiotemporal.rst", "auto_tutorials/stats-sensor-space/index.rst", "auto_tutorials/stats-sensor-space/sg_execution_times.rst", "auto_tutorials/stats-source-space/20_cluster_1samp_spatiotemporal.rst", "auto_tutorials/stats-source-space/30_cluster_ftest_spatiotemporal.rst", "auto_tutorials/stats-source-space/60_cluster_rmANOVA_spatiotemporal.rst", "auto_tutorials/stats-source-space/index.rst", "auto_tutorials/stats-source-space/sg_execution_times.rst", "auto_tutorials/time-freq/10_spectrum_class.rst", "auto_tutorials/time-freq/20_sensors_time_frequency.rst", "auto_tutorials/time-freq/50_ssvep.rst", "auto_tutorials/time-freq/index.rst", "auto_tutorials/time-freq/sg_execution_times.rst", "bibliography.rst", "cited.rst", "connectivity.rst", "covariance.rst", "creating_from_arrays.rst", "datasets.rst", "decoding.rst", "events.rst", "export.rst", "file_io.rst", "forward.rst", "funding.rst", "generated/commands.rst", "generated/mne.AcqParserFIF.rst", "generated/mne.Annotations.rst", "generated/mne.BaseEpochs.rst", "generated/mne.BiHemiLabel.rst", "generated/mne.Covariance.rst", "generated/mne.Dipole.rst", "generated/mne.DipoleFixed.rst", "generated/mne.Epochs.rst", "generated/mne.EpochsArray.rst", "generated/mne.Evoked.rst", "generated/mne.EvokedArray.rst", "generated/mne.Forward.rst", "generated/mne.Info.rst", "generated/mne.Label.rst", "generated/mne.MixedSourceEstimate.rst", "generated/mne.MixedVectorSourceEstimate.rst", "generated/mne.Projection.rst", "generated/mne.Report.rst", "generated/mne.SourceEstimate.rst", "generated/mne.SourceMorph.rst", "generated/mne.SourceSpaces.rst", "generated/mne.VectorSourceEstimate.rst", "generated/mne.VolSourceEstimate.rst", "generated/mne.VolVectorSourceEstimate.rst", "generated/mne.add_reference_channels.rst", "generated/mne.add_source_space_distances.rst", "generated/mne.annotations_from_events.rst", "generated/mne.apply_forward.rst", "generated/mne.apply_forward_raw.rst", "generated/mne.average_forward_solutions.rst", "generated/mne.baseline.rescale.rst", "generated/mne.beamformer.Beamformer.rst", "generated/mne.beamformer.apply_dics.rst", "generated/mne.beamformer.apply_dics_csd.rst", "generated/mne.beamformer.apply_dics_epochs.rst", "generated/mne.beamformer.apply_lcmv.rst", "generated/mne.beamformer.apply_lcmv_cov.rst", "generated/mne.beamformer.apply_lcmv_epochs.rst", "generated/mne.beamformer.apply_lcmv_raw.rst", "generated/mne.beamformer.make_dics.rst", "generated/mne.beamformer.make_lcmv.rst", "generated/mne.beamformer.make_lcmv_resolution_matrix.rst", "generated/mne.beamformer.rap_music.rst", "generated/mne.beamformer.read_beamformer.rst", "generated/mne.bem.ConductorModel.rst", "generated/mne.bem.convert_flash_mris.rst", "generated/mne.bem.distance_to_bem.rst", "generated/mne.bem.fit_sphere_to_headshape.rst", "generated/mne.bem.get_fitting_dig.rst", "generated/mne.bem.make_flash_bem.rst", "generated/mne.bem.make_scalp_surfaces.rst", "generated/mne.bem.make_watershed_bem.rst", "generated/mne.channel_indices_by_type.rst", "generated/mne.channel_type.rst", "generated/mne.channels.DigMontage.rst", "generated/mne.channels.Layout.rst", "generated/mne.channels.combine_channels.rst", "generated/mne.channels.compute_dev_head_t.rst", "generated/mne.channels.compute_native_head_t.rst", "generated/mne.channels.equalize_channels.rst", "generated/mne.channels.find_ch_adjacency.rst", "generated/mne.channels.find_layout.rst", "generated/mne.channels.fix_mag_coil_types.rst", "generated/mne.channels.generate_2d_layout.rst", "generated/mne.channels.get_builtin_ch_adjacencies.rst", "generated/mne.channels.get_builtin_montages.rst", "generated/mne.channels.make_1020_channel_selections.rst", "generated/mne.channels.make_dig_montage.rst", "generated/mne.channels.make_eeg_layout.rst", "generated/mne.channels.make_grid_layout.rst", "generated/mne.channels.make_standard_montage.rst", "generated/mne.channels.read_ch_adjacency.rst", "generated/mne.channels.read_custom_montage.rst", "generated/mne.channels.read_dig_captrak.rst", "generated/mne.channels.read_dig_dat.rst", "generated/mne.channels.read_dig_egi.rst", "generated/mne.channels.read_dig_fif.rst", "generated/mne.channels.read_dig_hpts.rst", "generated/mne.channels.read_dig_localite.rst", "generated/mne.channels.read_dig_polhemus_isotrak.rst", "generated/mne.channels.read_layout.rst", "generated/mne.channels.read_polhemus_fastscan.rst", "generated/mne.channels.rename_channels.rst", "generated/mne.chpi.compute_chpi_amplitudes.rst", "generated/mne.chpi.compute_chpi_locs.rst", "generated/mne.chpi.compute_chpi_snr.rst", "generated/mne.chpi.compute_head_pos.rst", "generated/mne.chpi.extract_chpi_locs_ctf.rst", "generated/mne.chpi.extract_chpi_locs_kit.rst", "generated/mne.chpi.filter_chpi.rst", "generated/mne.chpi.get_active_chpi.rst", "generated/mne.chpi.get_chpi_info.rst", "generated/mne.chpi.head_pos_to_trans_rot_t.rst", "generated/mne.chpi.read_head_pos.rst", "generated/mne.chpi.write_head_pos.rst", "generated/mne.combine_evoked.rst", "generated/mne.compute_covariance.rst", "generated/mne.compute_proj_epochs.rst", "generated/mne.compute_proj_evoked.rst", "generated/mne.compute_proj_raw.rst", "generated/mne.compute_rank.rst", "generated/mne.compute_raw_covariance.rst", "generated/mne.compute_source_morph.rst", "generated/mne.concatenate_epochs.rst", "generated/mne.concatenate_events.rst", "generated/mne.concatenate_raws.rst", "generated/mne.convert_forward_solution.rst", "generated/mne.coreg.Coregistration.rst", "generated/mne.coreg.estimate_head_mri_t.rst", "generated/mne.coreg.get_mni_fiducials.rst", "generated/mne.cov.compute_whitener.rst", "generated/mne.cov.prepare_noise_cov.rst", "generated/mne.cov.regularize.rst", "generated/mne.create_default_subject.rst", "generated/mne.create_info.rst", "generated/mne.cuda.get_cuda_memory.rst", "generated/mne.cuda.init_cuda.rst", "generated/mne.cuda.set_cuda_device.rst", "generated/mne.datasets.brainstorm.bst_auditory.data_path.rst", "generated/mne.datasets.brainstorm.bst_raw.data_path.rst", "generated/mne.datasets.brainstorm.bst_resting.data_path.rst", "generated/mne.datasets.eegbci.load_data.rst", "generated/mne.datasets.eegbci.standardize.rst", "generated/mne.datasets.epilepsy_ecog.data_path.rst", "generated/mne.datasets.erp_core.data_path.rst", "generated/mne.datasets.fetch_aparc_sub_parcellation.rst", "generated/mne.datasets.fetch_dataset.rst", "generated/mne.datasets.fetch_fsaverage.rst", "generated/mne.datasets.fetch_hcp_mmp_parcellation.rst", "generated/mne.datasets.fetch_infant_template.rst", "generated/mne.datasets.fetch_phantom.rst", "generated/mne.datasets.fnirs_motor.data_path.rst", "generated/mne.datasets.has_dataset.rst", "generated/mne.datasets.hf_sef.data_path.rst", "generated/mne.datasets.kiloword.data_path.rst", "generated/mne.datasets.limo.load_data.rst", "generated/mne.datasets.misc.data_path.rst", "generated/mne.datasets.mtrf.data_path.rst", "generated/mne.datasets.multimodal.data_path.rst", "generated/mne.datasets.opm.data_path.rst", "generated/mne.datasets.phantom_4dbti.data_path.rst", "generated/mne.datasets.refmeg_noise.data_path.rst", "generated/mne.datasets.sample.data_path.rst", "generated/mne.datasets.sleep_physionet.age.fetch_data.rst", "generated/mne.datasets.sleep_physionet.temazepam.fetch_data.rst", "generated/mne.datasets.somato.data_path.rst", "generated/mne.datasets.spm_face.data_path.rst", "generated/mne.datasets.ssvep.data_path.rst", "generated/mne.datasets.visual_92_categories.data_path.rst", "generated/mne.decimate_surface.rst", "generated/mne.decoding.CSP.rst", "generated/mne.decoding.EMS.rst", "generated/mne.decoding.FilterEstimator.rst", "generated/mne.decoding.GeneralizingEstimator.rst", "generated/mne.decoding.LinearModel.rst", "generated/mne.decoding.PSDEstimator.rst", "generated/mne.decoding.ReceptiveField.rst", "generated/mne.decoding.SPoC.rst", "generated/mne.decoding.SSD.rst", "generated/mne.decoding.Scaler.rst", "generated/mne.decoding.SlidingEstimator.rst", "generated/mne.decoding.TemporalFilter.rst", "generated/mne.decoding.TimeDelayingRidge.rst", "generated/mne.decoding.TimeFrequency.rst", "generated/mne.decoding.UnsupervisedSpatialFilter.rst", "generated/mne.decoding.Vectorizer.rst", "generated/mne.decoding.compute_ems.rst", "generated/mne.decoding.cross_val_multiscore.rst", "generated/mne.decoding.get_coef.rst", "generated/mne.dig_mri_distances.rst", "generated/mne.dipole.get_phantom_dipoles.rst", "generated/mne.epochs.average_movements.rst", "generated/mne.epochs.combine_event_ids.rst", "generated/mne.epochs.equalize_epoch_counts.rst", "generated/mne.epochs.make_metadata.rst", "generated/mne.equalize_channels.rst", "generated/mne.event.define_target_events.rst", "generated/mne.event.match_event_names.rst", "generated/mne.event.shift_time_events.rst", "generated/mne.events_from_annotations.rst", "generated/mne.export.export_epochs.rst", "generated/mne.export.export_evokeds.rst", "generated/mne.export.export_evokeds_mff.rst", "generated/mne.export.export_raw.rst", "generated/mne.extract_label_time_course.rst", "generated/mne.filter.construct_iir_filter.rst", "generated/mne.filter.create_filter.rst", "generated/mne.filter.estimate_ringing_samples.rst", "generated/mne.filter.filter_data.rst", "generated/mne.filter.notch_filter.rst", "generated/mne.filter.resample.rst", "generated/mne.find_events.rst", "generated/mne.find_stim_steps.rst", "generated/mne.fit_dipole.rst", "generated/mne.forward.compute_depth_prior.rst", "generated/mne.forward.compute_orient_prior.rst", "generated/mne.forward.restrict_forward_to_label.rst", "generated/mne.forward.restrict_forward_to_stc.rst", "generated/mne.get_config.rst", "generated/mne.get_config_path.rst", "generated/mne.get_head_surf.rst", "generated/mne.get_meg_helmet_surf.rst", "generated/mne.get_montage_volume_labels.rst", "generated/mne.get_volume_labels_from_aseg.rst", "generated/mne.get_volume_labels_from_src.rst", "generated/mne.grade_to_tris.rst", "generated/mne.grade_to_vertices.rst", "generated/mne.grand_average.rst", "generated/mne.grow_labels.rst", "generated/mne.gui.coregistration.rst", "generated/mne.gui.locate_ieeg.rst", "generated/mne.head_to_mni.rst", "generated/mne.head_to_mri.rst", "generated/mne.inverse_sparse.gamma_map.rst", "generated/mne.inverse_sparse.make_stc_from_dipoles.rst", "generated/mne.inverse_sparse.mixed_norm.rst", "generated/mne.inverse_sparse.tf_mixed_norm.rst", "generated/mne.io.BaseRaw.rst", "generated/mne.io.Raw.rst", "generated/mne.io.RawArray.rst", "generated/mne.io.anonymize_info.rst", "generated/mne.io.kit.read_mrk.rst", "generated/mne.io.read_fiducials.rst", "generated/mne.io.read_info.rst", "generated/mne.io.read_raw.rst", "generated/mne.io.read_raw_artemis123.rst", "generated/mne.io.read_raw_bdf.rst", "generated/mne.io.read_raw_boxy.rst", "generated/mne.io.read_raw_brainvision.rst", "generated/mne.io.read_raw_bti.rst", "generated/mne.io.read_raw_cnt.rst", "generated/mne.io.read_raw_ctf.rst", "generated/mne.io.read_raw_curry.rst", "generated/mne.io.read_raw_edf.rst", "generated/mne.io.read_raw_eeglab.rst", "generated/mne.io.read_raw_egi.rst", "generated/mne.io.read_raw_eximia.rst", "generated/mne.io.read_raw_fieldtrip.rst", "generated/mne.io.read_raw_fif.rst", "generated/mne.io.read_raw_gdf.rst", "generated/mne.io.read_raw_hitachi.rst", "generated/mne.io.read_raw_kit.rst", "generated/mne.io.read_raw_nedf.rst", "generated/mne.io.read_raw_nicolet.rst", "generated/mne.io.read_raw_nihon.rst", "generated/mne.io.read_raw_nirx.rst", "generated/mne.io.read_raw_persyst.rst", "generated/mne.io.read_raw_snirf.rst", "generated/mne.io.show_fiff.rst", "generated/mne.io.write_fiducials.rst", "generated/mne.label.select_sources.rst", "generated/mne.label_sign_flip.rst", "generated/mne.labels_to_stc.rst", "generated/mne.make_ad_hoc_cov.rst", "generated/mne.make_bem_model.rst", "generated/mne.make_bem_solution.rst", "generated/mne.make_field_map.rst", "generated/mne.make_fixed_length_epochs.rst", "generated/mne.make_fixed_length_events.rst", "generated/mne.make_forward_dipole.rst", "generated/mne.make_forward_solution.rst", "generated/mne.make_sphere_model.rst", "generated/mne.merge_events.rst", "generated/mne.minimum_norm.InverseOperator.rst", "generated/mne.minimum_norm.apply_inverse.rst", "generated/mne.minimum_norm.apply_inverse_cov.rst", "generated/mne.minimum_norm.apply_inverse_epochs.rst", "generated/mne.minimum_norm.apply_inverse_raw.rst", "generated/mne.minimum_norm.apply_inverse_tfr_epochs.rst", "generated/mne.minimum_norm.compute_rank_inverse.rst", "generated/mne.minimum_norm.compute_source_psd.rst", "generated/mne.minimum_norm.compute_source_psd_epochs.rst", "generated/mne.minimum_norm.estimate_snr.rst", "generated/mne.minimum_norm.get_cross_talk.rst", "generated/mne.minimum_norm.get_point_spread.rst", "generated/mne.minimum_norm.make_inverse_operator.rst", "generated/mne.minimum_norm.make_inverse_resolution_matrix.rst", "generated/mne.minimum_norm.prepare_inverse_operator.rst", "generated/mne.minimum_norm.read_inverse_operator.rst", "generated/mne.minimum_norm.resolution_metrics.rst", "generated/mne.minimum_norm.source_band_induced_power.rst", "generated/mne.minimum_norm.source_induced_power.rst", "generated/mne.minimum_norm.write_inverse_operator.rst", "generated/mne.morph_labels.rst", "generated/mne.morph_source_spaces.rst", "generated/mne.open_docs.rst", "generated/mne.open_report.rst", "generated/mne.parse_config.rst", "generated/mne.pick_channels.rst", "generated/mne.pick_channels_cov.rst", "generated/mne.pick_channels_forward.rst", "generated/mne.pick_channels_regexp.rst", "generated/mne.pick_events.rst", "generated/mne.pick_info.rst", "generated/mne.pick_types.rst", "generated/mne.pick_types_forward.rst", "generated/mne.preprocessing.EOGRegression.rst", "generated/mne.preprocessing.ICA.rst", "generated/mne.preprocessing.Xdawn.rst", "generated/mne.preprocessing.annotate_amplitude.rst", "generated/mne.preprocessing.annotate_break.rst", "generated/mne.preprocessing.annotate_movement.rst", "generated/mne.preprocessing.annotate_muscle_zscore.rst", "generated/mne.preprocessing.annotate_nan.rst", "generated/mne.preprocessing.compute_average_dev_head_t.rst", "generated/mne.preprocessing.compute_bridged_electrodes.rst", "generated/mne.preprocessing.compute_current_source_density.rst", "generated/mne.preprocessing.compute_fine_calibration.rst", "generated/mne.preprocessing.compute_maxwell_basis.rst", "generated/mne.preprocessing.compute_proj_ecg.rst", "generated/mne.preprocessing.compute_proj_eog.rst", "generated/mne.preprocessing.corrmap.rst", "generated/mne.preprocessing.cortical_signal_suppression.rst", "generated/mne.preprocessing.create_ecg_epochs.rst", "generated/mne.preprocessing.create_eog_epochs.rst", "generated/mne.preprocessing.equalize_bads.rst", "generated/mne.preprocessing.find_bad_channels_maxwell.rst", "generated/mne.preprocessing.find_ecg_events.rst", "generated/mne.preprocessing.find_eog_events.rst", "generated/mne.preprocessing.fix_stim_artifact.rst", "generated/mne.preprocessing.ica_find_ecg_events.rst", "generated/mne.preprocessing.ica_find_eog_events.rst", "generated/mne.preprocessing.ieeg.project_sensors_onto_brain.rst", "generated/mne.preprocessing.infomax.rst", "generated/mne.preprocessing.interpolate_bridged_electrodes.rst", "generated/mne.preprocessing.maxwell_filter.rst", "generated/mne.preprocessing.maxwell_filter_prepare_emptyroom.rst", "generated/mne.preprocessing.nirs.beer_lambert_law.rst", "generated/mne.preprocessing.nirs.optical_density.rst", "generated/mne.preprocessing.nirs.scalp_coupling_index.rst", "generated/mne.preprocessing.nirs.short_channels.rst", "generated/mne.preprocessing.nirs.source_detector_distances.rst", "generated/mne.preprocessing.nirs.temporal_derivative_distribution_repair.rst", "generated/mne.preprocessing.oversampled_temporal_projection.rst", "generated/mne.preprocessing.peak_finder.rst", "generated/mne.preprocessing.read_eog_regression.rst", "generated/mne.preprocessing.read_fine_calibration.rst", "generated/mne.preprocessing.read_ica.rst", "generated/mne.preprocessing.read_ica_eeglab.rst", "generated/mne.preprocessing.realign_raw.rst", "generated/mne.preprocessing.regress_artifact.rst", "generated/mne.preprocessing.write_fine_calibration.rst", "generated/mne.random_parcellation.rst", "generated/mne.read_annotations.rst", "generated/mne.read_bem_solution.rst", "generated/mne.read_bem_surfaces.rst", "generated/mne.read_cov.rst", "generated/mne.read_dipole.rst", "generated/mne.read_epochs.rst", "generated/mne.read_epochs_eeglab.rst", "generated/mne.read_epochs_fieldtrip.rst", "generated/mne.read_epochs_kit.rst", "generated/mne.read_events.rst", "generated/mne.read_evoked_besa.rst", "generated/mne.read_evoked_fieldtrip.rst", "generated/mne.read_evokeds.rst", "generated/mne.read_evokeds_mff.rst", "generated/mne.read_forward_solution.rst", "generated/mne.read_freesurfer_lut.rst", "generated/mne.read_label.rst", "generated/mne.read_labels_from_annot.rst", "generated/mne.read_lta.rst", "generated/mne.read_morph_map.rst", "generated/mne.read_proj.rst", "generated/mne.read_reject_parameters.rst", "generated/mne.read_source_estimate.rst", "generated/mne.read_source_morph.rst", "generated/mne.read_source_spaces.rst", "generated/mne.read_surface.rst", "generated/mne.read_talxfm.rst", "generated/mne.read_trans.rst", "generated/mne.read_tri.rst", "generated/mne.read_vectorview_selection.rst", "generated/mne.rename_channels.rst", "generated/mne.scale_bem.rst", "generated/mne.scale_labels.rst", "generated/mne.scale_mri.rst", "generated/mne.scale_source_space.rst", "generated/mne.sensitivity_map.rst", "generated/mne.set_bipolar_reference.rst", "generated/mne.set_cache_dir.rst", "generated/mne.set_config.rst", "generated/mne.set_eeg_reference.rst", "generated/mne.set_log_file.rst", "generated/mne.set_log_level.rst", "generated/mne.setup_source_space.rst", "generated/mne.setup_volume_source_space.rst", "generated/mne.simulation.SourceSimulator.rst", "generated/mne.simulation.add_chpi.rst", "generated/mne.simulation.add_ecg.rst", "generated/mne.simulation.add_eog.rst", "generated/mne.simulation.add_noise.rst", "generated/mne.simulation.metrics.cosine_score.rst", "generated/mne.simulation.metrics.f1_score.rst", "generated/mne.simulation.metrics.peak_position_error.rst", "generated/mne.simulation.metrics.precision_score.rst", "generated/mne.simulation.metrics.recall_score.rst", "generated/mne.simulation.metrics.region_localization_error.rst", "generated/mne.simulation.metrics.roc_auc_score.rst", "generated/mne.simulation.metrics.spatial_deviation_error.rst", "generated/mne.simulation.select_source_in_label.rst", "generated/mne.simulation.simulate_evoked.rst", "generated/mne.simulation.simulate_raw.rst", "generated/mne.simulation.simulate_sparse_stc.rst", "generated/mne.simulation.simulate_stc.rst", "generated/mne.source_space.compute_distance_to_sensors.rst", "generated/mne.source_space.get_decimated_surfaces.rst", "generated/mne.spatial_dist_adjacency.rst", "generated/mne.spatial_inter_hemi_adjacency.rst", "generated/mne.spatial_src_adjacency.rst", "generated/mne.spatial_tris_adjacency.rst", "generated/mne.spatio_temporal_dist_adjacency.rst", "generated/mne.spatio_temporal_src_adjacency.rst", "generated/mne.spatio_temporal_tris_adjacency.rst", "generated/mne.split_label.rst", "generated/mne.stats.bonferroni_correction.rst", "generated/mne.stats.bootstrap_confidence_interval.rst", "generated/mne.stats.combine_adjacency.rst", "generated/mne.stats.f_mway_rm.rst", "generated/mne.stats.f_oneway.rst", "generated/mne.stats.f_threshold_mway_rm.rst", "generated/mne.stats.fdr_correction.rst", "generated/mne.stats.linear_regression.rst", "generated/mne.stats.linear_regression_raw.rst", "generated/mne.stats.permutation_cluster_1samp_test.rst", "generated/mne.stats.permutation_cluster_test.rst", "generated/mne.stats.permutation_t_test.rst", "generated/mne.stats.spatio_temporal_cluster_1samp_test.rst", "generated/mne.stats.spatio_temporal_cluster_test.rst", "generated/mne.stats.summarize_clusters_stc.rst", "generated/mne.stats.ttest_1samp_no_p.rst", "generated/mne.stats.ttest_ind_no_p.rst", "generated/mne.stc_near_sensors.rst", "generated/mne.stc_to_label.rst", "generated/mne.surface.complete_surface_info.rst", "generated/mne.surface.read_curvature.rst", "generated/mne.sys_info.rst", "generated/mne.time_frequency.AverageTFR.rst", "generated/mne.time_frequency.CrossSpectralDensity.rst", "generated/mne.time_frequency.EpochsSpectrum.rst", "generated/mne.time_frequency.EpochsTFR.rst", "generated/mne.time_frequency.Spectrum.rst", "generated/mne.time_frequency.csd_array_fourier.rst", "generated/mne.time_frequency.csd_array_morlet.rst", "generated/mne.time_frequency.csd_array_multitaper.rst", "generated/mne.time_frequency.csd_fourier.rst", "generated/mne.time_frequency.csd_morlet.rst", "generated/mne.time_frequency.csd_multitaper.rst", "generated/mne.time_frequency.csd_tfr.rst", "generated/mne.time_frequency.dpss_windows.rst", "generated/mne.time_frequency.fit_iir_model_raw.rst", "generated/mne.time_frequency.istft.rst", "generated/mne.time_frequency.morlet.rst", "generated/mne.time_frequency.pick_channels_csd.rst", "generated/mne.time_frequency.psd_array_multitaper.rst", "generated/mne.time_frequency.psd_array_welch.rst", "generated/mne.time_frequency.psd_multitaper.rst", "generated/mne.time_frequency.psd_welch.rst", "generated/mne.time_frequency.read_csd.rst", "generated/mne.time_frequency.read_spectrum.rst", "generated/mne.time_frequency.read_tfrs.rst", "generated/mne.time_frequency.stft.rst", "generated/mne.time_frequency.stftfreq.rst", "generated/mne.time_frequency.tfr.cwt.rst", "generated/mne.time_frequency.tfr.morlet.rst", "generated/mne.time_frequency.tfr_array_morlet.rst", "generated/mne.time_frequency.tfr_array_multitaper.rst", "generated/mne.time_frequency.tfr_array_stockwell.rst", "generated/mne.time_frequency.tfr_morlet.rst", "generated/mne.time_frequency.tfr_multitaper.rst", "generated/mne.time_frequency.tfr_stockwell.rst", "generated/mne.time_frequency.write_tfrs.rst", "generated/mne.transform_surface_to.rst", "generated/mne.transforms.Transform.rst", "generated/mne.transforms.apply_volume_registration.rst", "generated/mne.transforms.compute_volume_registration.rst", "generated/mne.transforms.quat_to_rot.rst", "generated/mne.transforms.read_ras_mni_t.rst", "generated/mne.transforms.rot_to_quat.rst", "generated/mne.use_coil_def.rst", "generated/mne.use_log_level.rst", "generated/mne.utils.deprecated.rst", "generated/mne.utils.warn.rst", "generated/mne.verbose.rst", "generated/mne.vertex_to_mni.rst", "generated/mne.viz.Brain.rst", "generated/mne.viz.ClickableImage.rst", "generated/mne.viz.Figure3D.rst", "generated/mne.viz.add_background_image.rst", "generated/mne.viz.centers_to_edges.rst", "generated/mne.viz.circular_layout.rst", "generated/mne.viz.close_3d_figure.rst", "generated/mne.viz.close_all_3d_figures.rst", "generated/mne.viz.compare_fiff.rst", "generated/mne.viz.create_3d_figure.rst", "generated/mne.viz.get_3d_backend.rst", "generated/mne.viz.get_brain_class.rst", "generated/mne.viz.get_browser_backend.rst", "generated/mne.viz.iter_topography.rst", "generated/mne.viz.link_brains.rst", "generated/mne.viz.mne_analyze_colormap.rst", "generated/mne.viz.plot_alignment.rst", "generated/mne.viz.plot_arrowmap.rst", "generated/mne.viz.plot_bem.rst", "generated/mne.viz.plot_brain_colorbar.rst", "generated/mne.viz.plot_bridged_electrodes.rst", "generated/mne.viz.plot_ch_adjacency.rst", "generated/mne.viz.plot_channel_labels_circle.rst", "generated/mne.viz.plot_chpi_snr.rst", "generated/mne.viz.plot_compare_evokeds.rst", "generated/mne.viz.plot_cov.rst", "generated/mne.viz.plot_csd.rst", "generated/mne.viz.plot_dipole_amplitudes.rst", "generated/mne.viz.plot_dipole_locations.rst", "generated/mne.viz.plot_drop_log.rst", "generated/mne.viz.plot_epochs.rst", "generated/mne.viz.plot_epochs_image.rst", "generated/mne.viz.plot_epochs_psd_topomap.rst", "generated/mne.viz.plot_events.rst", "generated/mne.viz.plot_evoked.rst", "generated/mne.viz.plot_evoked_field.rst", "generated/mne.viz.plot_evoked_image.rst", "generated/mne.viz.plot_evoked_joint.rst", "generated/mne.viz.plot_evoked_topo.rst", "generated/mne.viz.plot_evoked_topomap.rst", "generated/mne.viz.plot_evoked_white.rst", "generated/mne.viz.plot_filter.rst", "generated/mne.viz.plot_head_positions.rst", "generated/mne.viz.plot_ica_components.rst", "generated/mne.viz.plot_ica_overlay.rst", "generated/mne.viz.plot_ica_properties.rst", "generated/mne.viz.plot_ica_scores.rst", "generated/mne.viz.plot_ica_sources.rst", "generated/mne.viz.plot_ideal_filter.rst", "generated/mne.viz.plot_layout.rst", "generated/mne.viz.plot_montage.rst", "generated/mne.viz.plot_projs_joint.rst", "generated/mne.viz.plot_projs_topomap.rst", "generated/mne.viz.plot_raw.rst", "generated/mne.viz.plot_raw_psd.rst", "generated/mne.viz.plot_regression_weights.rst", "generated/mne.viz.plot_sensors.rst", "generated/mne.viz.plot_snr_estimate.rst", "generated/mne.viz.plot_source_estimates.rst", "generated/mne.viz.plot_sparse_source_estimates.rst", "generated/mne.viz.plot_tfr_topomap.rst", "generated/mne.viz.plot_topo_image_epochs.rst", "generated/mne.viz.plot_topomap.rst", "generated/mne.viz.plot_vector_source_estimates.rst", "generated/mne.viz.plot_volume_source_estimates.rst", "generated/mne.viz.set_3d_backend.rst", "generated/mne.viz.set_3d_options.rst", "generated/mne.viz.set_3d_title.rst", "generated/mne.viz.set_3d_view.rst", "generated/mne.viz.set_browser_backend.rst", "generated/mne.viz.snapshot_brain_montage.rst", "generated/mne.viz.use_3d_backend.rst", "generated/mne.viz.use_browser_backend.rst", "generated/mne.warp_montage_volume.rst", "generated/mne.what.rst", "generated/mne.write_bem_solution.rst", "generated/mne.write_bem_surfaces.rst", "generated/mne.write_cov.rst", "generated/mne.write_events.rst", "generated/mne.write_evokeds.rst", "generated/mne.write_forward_solution.rst", "generated/mne.write_head_bem.rst", "generated/mne.write_label.rst", "generated/mne.write_labels_to_annot.rst", "generated/mne.write_proj.rst", "generated/mne.write_source_spaces.rst", "generated/mne.write_surface.rst", "generated/mne.write_trans.rst", "glossary.rst", "index.rst", "install/advanced.rst", "install/check_installation.rst", "install/contributing.rst", "install/freesurfer.rst", "install/index.rst", "install/installers.rst", "install/manual_install.rst", "install/manual_install_python.rst", "install/mne_c.rst", "install/mne_tools_suite.rst", "install/updating.rst", "inverse.rst", "logging.rst", "martinos.rst", "mne_cpp.rst", "most_used_classes.rst", "mri.rst", "overview/cite.rst", "overview/cookbook.rst", "overview/datasets_index.rst", "overview/design_philosophy.rst", "overview/development.rst", "overview/faq.rst", "overview/get_help.rst", "overview/governance.rst", "overview/implementation.rst", "overview/index.rst", "overview/learn_python.rst", "overview/matlab.rst", "overview/migrating.rst", "overview/people.rst", "overview/roadmap.rst", "preprocessing.rst", "python_reference.rst", "reading_raw_data.rst", "realtime.rst", "report.rst", "sensor_space.rst", "simulation.rst", "source_space.rst", "statistics.rst", "time_frequency.rst", "visualization.rst", "whats_new.rst"], "titles": ["Connectivity Analysis Examples", "Brainstorm raw (median nerve) dataset", "HF-SEF dataset", "Examples on open datasets", "Single trial linear regression analysis with the LIMO dataset", "Optically pumped magnetometer (OPM) data", "Computation times", "From raw data to dSPM on SPM Faces dataset", "Motor imagery decoding from EEG data using the Common Spatial Pattern (CSP)", "Decoding in time-frequency space using Common Spatial Patterns (CSP)", "Representational Similarity Analysis", "Decoding source space data", "Continuous Target Decoding with SPoC", "Decoding sensor space data with generalization across time and conditions", "Analysis of evoked response using ICA and PCA reduction techniques", "XDAWN Decoding From EEG data", "Compute effect-matched-spatial filtering (EMS)", "Machine Learning (Decoding, Encoding, and MVPA)", "Linear classifier on sensor data with plot patterns and filters", "Receptive Field Estimation and Prediction", "Computation times", "Compute Spectro-Spatial Decomposition (SSD) spatial filters", "Display sensitivity maps for EEG and MEG sensors", "Forward modeling", "Generate a left cerebellum volume source space", "Computation times", "Use source space morphing", "Examples Gallery", "Compute MNE-dSPM inverse solution on single epochs", "Compute sLORETA inverse solution on raw data", "Compute MNE-dSPM inverse solution on evoked data in volume source space", "Source localization with a custom inverse solver", "Compute source power using DICS beamformer", "Compute evoked ERS source power using DICS, LCMV beamformer, and dSPM", "Compute a sparse inverse solution using the Gamma-MAP empirical Bayesian method", "Inverse problem and source analysis", "Extracting time course from source_estimate object", "Generate a functional label from source estimates", "Extracting the time series of activations in a label", "Compute sparse inverse solution with mixed norm: MxNE and irMxNE", "Compute MNE inverse solution on evoked data with a mixed source space", "Compute source power estimate by projecting the covariance with MNE", "Morph surface source estimate", "Morph volumetric source estimate", "Computing source timecourses with an XFit-like multi-dipole model", "Compute iterative reweighted TF-MxNE with multiscale time-frequency dictionary", "Visualize source leakage among labels using a circular graph", "Plot point-spread functions (PSFs) and cross-talk functions (CTFs)", "Compute cross-talk functions for LCMV beamformers", "Plot point-spread functions (PSFs) for a volume", "Compute Rap-Music on evoked data", "Reading an inverse operator", "Reading an STC file", "Compute spatial resolution metrics in source space", "Compute spatial resolution metrics to compare MEG with EEG+MEG", "Computation times", "Estimate data SNR using an inverse", "Computing source space SNR", "Compute MxNE with time-frequency sparse prior", "Plotting the full vector-valued MNE solution", "Getting averaging info from .fif files", "Input/Output", "How to use data in neural ensemble (NEO) format", "Reading/Writing a noise covariance matrix", "Reading XDF EEG data", "Computation times", "Cortical Signal Suppression (CSS) for removal of cortical signals", "Define target events based on time lag, plot evoked response", "Identify EEG Electrodes Bridged by too much Gel", "Transform EEG data using current source density (CSD)", "Show EOG artifact timing", "Reduce EOG artifacts through regression", "Find MEG reference channel artifacts", "Visualise NIRS artifact correction methods", "Compare the different ICA algorithms in MNE", "Preprocessing", "Interpolate bad channels for MEG/EEG channels", "Maxwell filter data with movement compensation", "Annotate movement artifacts and reestimate dev_head_t", "Annotate muscle artifacts", "Removing muscle ICA components", "Plot sensor denoising using oversampled temporal projection", "Computation times", "Shifting time-scale in evoked data", "Remap MEG channel types", "XDAWN Denoising", "Data Simulation", "Compare simulated and estimated source activity", "Computation times", "Generate simulated evoked data", "Generate simulated raw data", "Simulate raw data using subject anatomy", "Generate simulated source data", "Permutation F-test on sensor data with 1D cluster level", "FDR correction on T-test on sensor data", "Statistics Examples", "Regression on continuous data (rER[P/F])", "Permutation T-test on sensor data", "Analysing continuous features with binning and regression in sensor space", "Computation times", "Compute a cross-spectral density (CSD) matrix", "Compute Power Spectral Density of inverse solution from single epochs", "Time-Frequency Examples", "Computation times", "Compute power and phase lock in label of the source space", "Compute source power spectral density (PSD) in a label", "Compute source power spectral density (PSD) of VectorView and OPM data", "Compute induced power in the source space with dSPM", "Temporal whitening with AR model", "Compute and visualize ERDS maps", "Explore event-related dynamics for specific frequency bands", "Time-frequency on simulated data (Multitaper vs. Morlet vs. Stockwell vs. Hilbert)", "How to convert 3D electrode positions to a 2D image", "Plotting with <code class=\"docutils literal notranslate\"><span class=\"pre\">mne.viz.Brain</span></code>", "Visualize channel over epochs as an image", "Plotting EEG sensors on the scalp", "Plotting topographic arrowmaps of evoked data", "Plotting topographic maps of evoked data", "Whitening evoked data with a noise covariance", "Visualization", "Plotting sensor layouts of MEG systems", "Plot the MNE brain and helmet", "Plotting sensor layouts of EEG systems", "Plot a cortical parcellation", "Make figures more publication ready", "Plot single trial activity, grouped by ROI and sorted by RT", "Show noise levels from empty room data", "Computation times", "Sensitivity map of SSP projections", "Compare evoked responses for different conditions", "Plot custom topographies for MEG sensors", "Cross-hemisphere comparison", "Locating intracranial electrode contacts", "Working with sEEG data", "Working with ECoG data", "Sleep stage classification from polysomnography (PSG) data", "Clinical applications", "Computation times", "The Epochs data structure: discontinuous data", "Regression-based baseline correction", "Visualizing epoched data", "Working with Epoch metadata", "Auto-generating Epochs metadata", "Exporting Epochs to Pandas DataFrames", "Divide continuous data into equally-spaced epochs", "Segmenting continuous data into epochs", "Computation times", "The Evoked data structure: evoked/averaged data", "Visualizing Evoked data", "EEG analysis - Event-Related Potentials (ERPs)", "Plotting whitened data", "Estimating evoked responses", "Computation times", "FreeSurfer MRI reconstruction", "Source alignment and coordinate frames", "Using an automated approach to coregistration", "Head model and forward computation", "EEG forward operator with a template MRI", "How MNE uses FreeSurfer\u2019s outputs", "Fixing BEM and head surfaces", "Computing a covariance matrix", "Forward models and source spaces", "Computation times", "Tutorials", "Overview of MEG/EEG analysis with MNE-Python", "Modifying data in-place", "Parsing events from raw data", "The Info data structure", "Working with sensor locations", "Configuring MNE-Python", "Getting started with mne.Report", "Introductory tutorials", "Computation times", "The SourceEstimate data structure", "Source localization with equivalent current dipole (ECD) fit", "Source localization with MNE, dSPM, sLORETA, and eLORETA", "The role of dipole orientations in distributed source localization", "Computing various MNE solutions", "Source reconstruction using an LCMV beamformer", "Visualize source time courses (stcs)", "EEG source localization given electrode locations on an MRI", "Brainstorm Elekta phantom dataset tutorial", "Brainstorm CTF phantom dataset tutorial", "4D Neuroimaging/BTi phantom dataset tutorial", "Source localization and inverses", "Computation times", "Importing data from MEG devices", "Importing data from EEG devices", "Importing data from fNIRS devices", "Working with CTF data: the Brainstorm auditory dataset", "Reading data for different recording systems", "Computation times", "Spectro-temporal receptive field (STRF) estimation on continuous data", "Decoding (MVPA)", "Machine learning models of neural activity", "Computation times", "Overview of artifact detection", "Handling bad channels", "Rejecting bad data spans and breaks", "Background information on filtering", "Filtering and resampling data", "Repairing artifacts with regression", "Repairing artifacts with ICA", "Background on projectors and projections", "Repairing artifacts with SSP", "Setting the EEG reference", "Extracting and visualizing subject head movement", "Signal-space separation (SSS) and Maxwell filtering", "Preprocessing functional near-infrared spectroscopy (fNIRS) data", "Preprocessing", "Computation times", "The Raw data structure: continuous data", "Working with events", "Annotating continuous data", "Built-in plotting methods for Raw objects", "Working with continuous data", "Computation times", "Creating MNE-Python data structures from scratch", "Corrupt known signal with point spread", "DICS for power mapping", "Simulation", "Computation times", "Statistical inference", "Visualising statistical significance thresholds on EEG data", "Non-parametric 1 sample cluster statistic on single trial power", "Non-parametric between conditions cluster statistic on single trial power", "Mass-univariate twoway repeated measures ANOVA on single trial power", "Spatiotemporal permutation F-test on full sensor data", "Statistical analysis of sensor data", "Computation times", "Permutation t-test on source data with spatio-temporal clustering", "2 samples permutation test on source data with spatio-temporal clustering", "Repeated measures ANOVA on source data with spatio-temporal clustering", "Statistical analysis of source estimates", "Computation times", "The Spectrum and EpochsSpectrum classes: frequency-domain data", "Frequency and time-frequency sensor analysis", "Frequency-tagging: Basic analysis of an SSVEP/vSSR dataset", "Time-frequency analysis", "Computation times", "General bibliography", "Papers citing MNE-Python", "Connectivity Estimation", "Covariance computation", "Creating data objects from arrays", "Datasets", "Decoding", "Events", "Exporting", "File I/O", "Forward Modeling", "Funding and other support", "Command line tools using Python", "mne.AcqParserFIF", "mne.Annotations", "mne.BaseEpochs", "mne.BiHemiLabel", "mne.Covariance", "mne.Dipole", "mne.DipoleFixed", "mne.Epochs", "mne.EpochsArray", "mne.Evoked", "mne.EvokedArray", "mne.Forward", "mne.Info", "mne.Label", "mne.MixedSourceEstimate", "mne.MixedVectorSourceEstimate", "mne.Projection", "mne.Report", "mne.SourceEstimate", "mne.SourceMorph", "mne.SourceSpaces", "mne.VectorSourceEstimate", "mne.VolSourceEstimate", "mne.VolVectorSourceEstimate", "mne.add_reference_channels", "mne.add_source_space_distances", "mne.annotations_from_events", "mne.apply_forward", "mne.apply_forward_raw", "mne.average_forward_solutions", "mne.baseline.rescale", "mne.beamformer.Beamformer", "mne.beamformer.apply_dics", "mne.beamformer.apply_dics_csd", "mne.beamformer.apply_dics_epochs", "mne.beamformer.apply_lcmv", "mne.beamformer.apply_lcmv_cov", "mne.beamformer.apply_lcmv_epochs", "mne.beamformer.apply_lcmv_raw", "mne.beamformer.make_dics", "mne.beamformer.make_lcmv", "mne.beamformer.make_lcmv_resolution_matrix", "mne.beamformer.rap_music", "mne.beamformer.read_beamformer", "mne.bem.ConductorModel", "mne.bem.convert_flash_mris", "mne.bem.distance_to_bem", "mne.bem.fit_sphere_to_headshape", "mne.bem.get_fitting_dig", "mne.bem.make_flash_bem", "mne.bem.make_scalp_surfaces", "mne.bem.make_watershed_bem", "mne.channel_indices_by_type", "mne.channel_type", "mne.channels.DigMontage", "mne.channels.Layout", "mne.channels.combine_channels", "mne.channels.compute_dev_head_t", "mne.channels.compute_native_head_t", "mne.channels.equalize_channels", "mne.channels.find_ch_adjacency", "mne.channels.find_layout", "mne.channels.fix_mag_coil_types", "mne.channels.generate_2d_layout", "mne.channels.get_builtin_ch_adjacencies", "mne.channels.get_builtin_montages", "mne.channels.make_1020_channel_selections", "mne.channels.make_dig_montage", "mne.channels.make_eeg_layout", "mne.channels.make_grid_layout", "mne.channels.make_standard_montage", "mne.channels.read_ch_adjacency", "mne.channels.read_custom_montage", "mne.channels.read_dig_captrak", "mne.channels.read_dig_dat", "mne.channels.read_dig_egi", "mne.channels.read_dig_fif", "mne.channels.read_dig_hpts", "mne.channels.read_dig_localite", "mne.channels.read_dig_polhemus_isotrak", "mne.channels.read_layout", "mne.channels.read_polhemus_fastscan", "mne.channels.rename_channels", "mne.chpi.compute_chpi_amplitudes", "mne.chpi.compute_chpi_locs", "mne.chpi.compute_chpi_snr", "mne.chpi.compute_head_pos", "mne.chpi.extract_chpi_locs_ctf", "mne.chpi.extract_chpi_locs_kit", "mne.chpi.filter_chpi", "mne.chpi.get_active_chpi", "mne.chpi.get_chpi_info", "mne.chpi.head_pos_to_trans_rot_t", "mne.chpi.read_head_pos", "mne.chpi.write_head_pos", "mne.combine_evoked", "mne.compute_covariance", "mne.compute_proj_epochs", "mne.compute_proj_evoked", "mne.compute_proj_raw", "mne.compute_rank", "mne.compute_raw_covariance", "mne.compute_source_morph", "mne.concatenate_epochs", "mne.concatenate_events", "mne.concatenate_raws", "mne.convert_forward_solution", "mne.coreg.Coregistration", "mne.coreg.estimate_head_mri_t", "mne.coreg.get_mni_fiducials", "mne.cov.compute_whitener", "mne.cov.prepare_noise_cov", "mne.cov.regularize", "mne.create_default_subject", "mne.create_info", "mne.cuda.get_cuda_memory", "mne.cuda.init_cuda", "mne.cuda.set_cuda_device", "mne.datasets.brainstorm.bst_auditory.data_path", "mne.datasets.brainstorm.bst_raw.data_path", "mne.datasets.brainstorm.bst_resting.data_path", "mne.datasets.eegbci.load_data", "mne.datasets.eegbci.standardize", "mne.datasets.epilepsy_ecog.data_path", "mne.datasets.erp_core.data_path", "mne.datasets.fetch_aparc_sub_parcellation", "mne.datasets.fetch_dataset", "mne.datasets.fetch_fsaverage", "mne.datasets.fetch_hcp_mmp_parcellation", "mne.datasets.fetch_infant_template", "mne.datasets.fetch_phantom", "mne.datasets.fnirs_motor.data_path", "mne.datasets.has_dataset", "mne.datasets.hf_sef.data_path", "mne.datasets.kiloword.data_path", "mne.datasets.limo.load_data", "mne.datasets.misc.data_path", "mne.datasets.mtrf.data_path", "mne.datasets.multimodal.data_path", "mne.datasets.opm.data_path", "mne.datasets.phantom_4dbti.data_path", "mne.datasets.refmeg_noise.data_path", "mne.datasets.sample.data_path", "mne.datasets.sleep_physionet.age.fetch_data", "mne.datasets.sleep_physionet.temazepam.fetch_data", "mne.datasets.somato.data_path", "mne.datasets.spm_face.data_path", "mne.datasets.ssvep.data_path", "mne.datasets.visual_92_categories.data_path", "mne.decimate_surface", "mne.decoding.CSP", "mne.decoding.EMS", "mne.decoding.FilterEstimator", "mne.decoding.GeneralizingEstimator", "mne.decoding.LinearModel", "mne.decoding.PSDEstimator", "mne.decoding.ReceptiveField", "mne.decoding.SPoC", "mne.decoding.SSD", "mne.decoding.Scaler", "mne.decoding.SlidingEstimator", "mne.decoding.TemporalFilter", "mne.decoding.TimeDelayingRidge", "mne.decoding.TimeFrequency", "mne.decoding.UnsupervisedSpatialFilter", "mne.decoding.Vectorizer", "mne.decoding.compute_ems", "mne.decoding.cross_val_multiscore", "mne.decoding.get_coef", "mne.dig_mri_distances", "mne.dipole.get_phantom_dipoles", "mne.epochs.average_movements", "mne.epochs.combine_event_ids", "mne.epochs.equalize_epoch_counts", "mne.epochs.make_metadata", "mne.equalize_channels", "mne.event.define_target_events", "mne.event.match_event_names", "mne.event.shift_time_events", "mne.events_from_annotations", "mne.export.export_epochs", "mne.export.export_evokeds", "mne.export.export_evokeds_mff", "mne.export.export_raw", "mne.extract_label_time_course", "mne.filter.construct_iir_filter", "mne.filter.create_filter", "mne.filter.estimate_ringing_samples", "mne.filter.filter_data", "mne.filter.notch_filter", "mne.filter.resample", "mne.find_events", "mne.find_stim_steps", "mne.fit_dipole", "mne.forward.compute_depth_prior", "mne.forward.compute_orient_prior", "mne.forward.restrict_forward_to_label", "mne.forward.restrict_forward_to_stc", "mne.get_config", "mne.get_config_path", "mne.get_head_surf", "mne.get_meg_helmet_surf", "mne.get_montage_volume_labels", "mne.get_volume_labels_from_aseg", "mne.get_volume_labels_from_src", "mne.grade_to_tris", "mne.grade_to_vertices", "mne.grand_average", "mne.grow_labels", "mne.gui.coregistration", "mne.gui.locate_ieeg", "mne.head_to_mni", "mne.head_to_mri", "mne.inverse_sparse.gamma_map", "mne.inverse_sparse.make_stc_from_dipoles", "mne.inverse_sparse.mixed_norm", "mne.inverse_sparse.tf_mixed_norm", "mne.io.BaseRaw", "mne.io.Raw", "mne.io.RawArray", "mne.io.anonymize_info", "mne.io.kit.read_mrk", "mne.io.read_fiducials", "mne.io.read_info", "mne.io.read_raw", "mne.io.read_raw_artemis123", "mne.io.read_raw_bdf", "mne.io.read_raw_boxy", "mne.io.read_raw_brainvision", "mne.io.read_raw_bti", "mne.io.read_raw_cnt", "mne.io.read_raw_ctf", "mne.io.read_raw_curry", "mne.io.read_raw_edf", "mne.io.read_raw_eeglab", "mne.io.read_raw_egi", "mne.io.read_raw_eximia", "mne.io.read_raw_fieldtrip", "mne.io.read_raw_fif", "mne.io.read_raw_gdf", "mne.io.read_raw_hitachi", "mne.io.read_raw_kit", "mne.io.read_raw_nedf", "mne.io.read_raw_nicolet", "mne.io.read_raw_nihon", "mne.io.read_raw_nirx", "mne.io.read_raw_persyst", "mne.io.read_raw_snirf", "mne.io.show_fiff", "mne.io.write_fiducials", "mne.label.select_sources", "mne.label_sign_flip", "mne.labels_to_stc", "mne.make_ad_hoc_cov", "mne.make_bem_model", "mne.make_bem_solution", "mne.make_field_map", "mne.make_fixed_length_epochs", "mne.make_fixed_length_events", "mne.make_forward_dipole", "mne.make_forward_solution", "mne.make_sphere_model", "mne.merge_events", "mne.minimum_norm.InverseOperator", "mne.minimum_norm.apply_inverse", "mne.minimum_norm.apply_inverse_cov", "mne.minimum_norm.apply_inverse_epochs", "mne.minimum_norm.apply_inverse_raw", "mne.minimum_norm.apply_inverse_tfr_epochs", "mne.minimum_norm.compute_rank_inverse", "mne.minimum_norm.compute_source_psd", "mne.minimum_norm.compute_source_psd_epochs", "mne.minimum_norm.estimate_snr", "mne.minimum_norm.get_cross_talk", "mne.minimum_norm.get_point_spread", "mne.minimum_norm.make_inverse_operator", "mne.minimum_norm.make_inverse_resolution_matrix", "mne.minimum_norm.prepare_inverse_operator", "mne.minimum_norm.read_inverse_operator", "mne.minimum_norm.resolution_metrics", "mne.minimum_norm.source_band_induced_power", "mne.minimum_norm.source_induced_power", "mne.minimum_norm.write_inverse_operator", "mne.morph_labels", "mne.morph_source_spaces", "mne.open_docs", "mne.open_report", "mne.parse_config", "mne.pick_channels", "mne.pick_channels_cov", "mne.pick_channels_forward", "mne.pick_channels_regexp", "mne.pick_events", "mne.pick_info", "mne.pick_types", "mne.pick_types_forward", "mne.preprocessing.EOGRegression", "mne.preprocessing.ICA", "mne.preprocessing.Xdawn", "mne.preprocessing.annotate_amplitude", "mne.preprocessing.annotate_break", "mne.preprocessing.annotate_movement", "mne.preprocessing.annotate_muscle_zscore", "mne.preprocessing.annotate_nan", "mne.preprocessing.compute_average_dev_head_t", "mne.preprocessing.compute_bridged_electrodes", "mne.preprocessing.compute_current_source_density", "mne.preprocessing.compute_fine_calibration", "mne.preprocessing.compute_maxwell_basis", "mne.preprocessing.compute_proj_ecg", "mne.preprocessing.compute_proj_eog", "mne.preprocessing.corrmap", "mne.preprocessing.cortical_signal_suppression", "mne.preprocessing.create_ecg_epochs", "mne.preprocessing.create_eog_epochs", "mne.preprocessing.equalize_bads", "mne.preprocessing.find_bad_channels_maxwell", "mne.preprocessing.find_ecg_events", "mne.preprocessing.find_eog_events", "mne.preprocessing.fix_stim_artifact", "mne.preprocessing.ica_find_ecg_events", "mne.preprocessing.ica_find_eog_events", "mne.preprocessing.ieeg.project_sensors_onto_brain", "mne.preprocessing.infomax", "mne.preprocessing.interpolate_bridged_electrodes", "mne.preprocessing.maxwell_filter", "mne.preprocessing.maxwell_filter_prepare_emptyroom", "mne.preprocessing.nirs.beer_lambert_law", "mne.preprocessing.nirs.optical_density", "mne.preprocessing.nirs.scalp_coupling_index", "mne.preprocessing.nirs.short_channels", "mne.preprocessing.nirs.source_detector_distances", "mne.preprocessing.nirs.temporal_derivative_distribution_repair", "mne.preprocessing.oversampled_temporal_projection", "mne.preprocessing.peak_finder", "mne.preprocessing.read_eog_regression", "mne.preprocessing.read_fine_calibration", "mne.preprocessing.read_ica", "mne.preprocessing.read_ica_eeglab", "mne.preprocessing.realign_raw", "mne.preprocessing.regress_artifact", "mne.preprocessing.write_fine_calibration", "mne.random_parcellation", "mne.read_annotations", "mne.read_bem_solution", "mne.read_bem_surfaces", "mne.read_cov", "mne.read_dipole", "mne.read_epochs", "mne.read_epochs_eeglab", "mne.read_epochs_fieldtrip", "mne.read_epochs_kit", "mne.read_events", "mne.read_evoked_besa", "mne.read_evoked_fieldtrip", "mne.read_evokeds", "mne.read_evokeds_mff", "mne.read_forward_solution", "mne.read_freesurfer_lut", "mne.read_label", "mne.read_labels_from_annot", "mne.read_lta", "mne.read_morph_map", "mne.read_proj", "mne.read_reject_parameters", "mne.read_source_estimate", "mne.read_source_morph", "mne.read_source_spaces", "mne.read_surface", "mne.read_talxfm", "mne.read_trans", "mne.read_tri", "mne.read_vectorview_selection", "mne.rename_channels", "mne.scale_bem", "mne.scale_labels", "mne.scale_mri", "mne.scale_source_space", "mne.sensitivity_map", "mne.set_bipolar_reference", "mne.set_cache_dir", "mne.set_config", "mne.set_eeg_reference", "mne.set_log_file", "mne.set_log_level", "mne.setup_source_space", "mne.setup_volume_source_space", "mne.simulation.SourceSimulator", "mne.simulation.add_chpi", "mne.simulation.add_ecg", "mne.simulation.add_eog", "mne.simulation.add_noise", "mne.simulation.metrics.cosine_score", "mne.simulation.metrics.f1_score", "mne.simulation.metrics.peak_position_error", "mne.simulation.metrics.precision_score", "mne.simulation.metrics.recall_score", "mne.simulation.metrics.region_localization_error", "mne.simulation.metrics.roc_auc_score", "mne.simulation.metrics.spatial_deviation_error", "mne.simulation.select_source_in_label", "mne.simulation.simulate_evoked", "mne.simulation.simulate_raw", "mne.simulation.simulate_sparse_stc", "mne.simulation.simulate_stc", "mne.source_space.compute_distance_to_sensors", "mne.source_space.get_decimated_surfaces", "mne.spatial_dist_adjacency", "mne.spatial_inter_hemi_adjacency", "mne.spatial_src_adjacency", "mne.spatial_tris_adjacency", "mne.spatio_temporal_dist_adjacency", "mne.spatio_temporal_src_adjacency", "mne.spatio_temporal_tris_adjacency", "mne.split_label", "mne.stats.bonferroni_correction", "mne.stats.bootstrap_confidence_interval", "mne.stats.combine_adjacency", "mne.stats.f_mway_rm", "mne.stats.f_oneway", "mne.stats.f_threshold_mway_rm", "mne.stats.fdr_correction", "mne.stats.linear_regression", "mne.stats.linear_regression_raw", "mne.stats.permutation_cluster_1samp_test", "mne.stats.permutation_cluster_test", "mne.stats.permutation_t_test", "mne.stats.spatio_temporal_cluster_1samp_test", "mne.stats.spatio_temporal_cluster_test", "mne.stats.summarize_clusters_stc", "mne.stats.ttest_1samp_no_p", "mne.stats.ttest_ind_no_p", "mne.stc_near_sensors", "mne.stc_to_label", "mne.surface.complete_surface_info", "mne.surface.read_curvature", "mne.sys_info", "mne.time_frequency.AverageTFR", "mne.time_frequency.CrossSpectralDensity", "mne.time_frequency.EpochsSpectrum", "mne.time_frequency.EpochsTFR", "mne.time_frequency.Spectrum", "mne.time_frequency.csd_array_fourier", "mne.time_frequency.csd_array_morlet", "mne.time_frequency.csd_array_multitaper", "mne.time_frequency.csd_fourier", "mne.time_frequency.csd_morlet", "mne.time_frequency.csd_multitaper", "mne.time_frequency.csd_tfr", "mne.time_frequency.dpss_windows", "mne.time_frequency.fit_iir_model_raw", "mne.time_frequency.istft", "mne.time_frequency.morlet", "mne.time_frequency.pick_channels_csd", "mne.time_frequency.psd_array_multitaper", "mne.time_frequency.psd_array_welch", "mne.time_frequency.psd_multitaper", "mne.time_frequency.psd_welch", "mne.time_frequency.read_csd", "mne.time_frequency.read_spectrum", "mne.time_frequency.read_tfrs", "mne.time_frequency.stft", "mne.time_frequency.stftfreq", "mne.time_frequency.tfr.cwt", "mne.time_frequency.tfr.morlet", "mne.time_frequency.tfr_array_morlet", "mne.time_frequency.tfr_array_multitaper", "mne.time_frequency.tfr_array_stockwell", "mne.time_frequency.tfr_morlet", "mne.time_frequency.tfr_multitaper", "mne.time_frequency.tfr_stockwell", "mne.time_frequency.write_tfrs", "mne.transform_surface_to", "mne.transforms.Transform", "mne.transforms.apply_volume_registration", "mne.transforms.compute_volume_registration", "mne.transforms.quat_to_rot", "mne.transforms.read_ras_mni_t", "mne.transforms.rot_to_quat", "mne.use_coil_def", "mne.use_log_level", "mne.utils.deprecated", "mne.utils.warn", "mne.verbose", "mne.vertex_to_mni", "mne.viz.Brain", "mne.viz.ClickableImage", "mne.viz.Figure3D", "mne.viz.add_background_image", "mne.viz.centers_to_edges", "mne.viz.circular_layout", "mne.viz.close_3d_figure", "mne.viz.close_all_3d_figures", "mne.viz.compare_fiff", "mne.viz.create_3d_figure", "mne.viz.get_3d_backend", "mne.viz.get_brain_class", "mne.viz.get_browser_backend", "mne.viz.iter_topography", "mne.viz.link_brains", "mne.viz.mne_analyze_colormap", "mne.viz.plot_alignment", "mne.viz.plot_arrowmap", "mne.viz.plot_bem", "mne.viz.plot_brain_colorbar", "mne.viz.plot_bridged_electrodes", "mne.viz.plot_ch_adjacency", "mne.viz.plot_channel_labels_circle", "mne.viz.plot_chpi_snr", "mne.viz.plot_compare_evokeds", "mne.viz.plot_cov", "mne.viz.plot_csd", "mne.viz.plot_dipole_amplitudes", "mne.viz.plot_dipole_locations", "mne.viz.plot_drop_log", "mne.viz.plot_epochs", "mne.viz.plot_epochs_image", "mne.viz.plot_epochs_psd_topomap", "mne.viz.plot_events", "mne.viz.plot_evoked", "mne.viz.plot_evoked_field", "mne.viz.plot_evoked_image", "mne.viz.plot_evoked_joint", "mne.viz.plot_evoked_topo", "mne.viz.plot_evoked_topomap", "mne.viz.plot_evoked_white", "mne.viz.plot_filter", "mne.viz.plot_head_positions", "mne.viz.plot_ica_components", "mne.viz.plot_ica_overlay", "mne.viz.plot_ica_properties", "mne.viz.plot_ica_scores", "mne.viz.plot_ica_sources", "mne.viz.plot_ideal_filter", "mne.viz.plot_layout", "mne.viz.plot_montage", "mne.viz.plot_projs_joint", "mne.viz.plot_projs_topomap", "mne.viz.plot_raw", "mne.viz.plot_raw_psd", "mne.viz.plot_regression_weights", "mne.viz.plot_sensors", "mne.viz.plot_snr_estimate", "mne.viz.plot_source_estimates", "mne.viz.plot_sparse_source_estimates", "mne.viz.plot_tfr_topomap", "mne.viz.plot_topo_image_epochs", "mne.viz.plot_topomap", "mne.viz.plot_vector_source_estimates", "mne.viz.plot_volume_source_estimates", "mne.viz.set_3d_backend", "mne.viz.set_3d_options", "mne.viz.set_3d_title", "mne.viz.set_3d_view", "mne.viz.set_browser_backend", "mne.viz.snapshot_brain_montage", "mne.viz.use_3d_backend", "mne.viz.use_browser_backend", "mne.warp_montage_volume", "mne.what", "mne.write_bem_solution", "mne.write_bem_surfaces", "mne.write_cov", "mne.write_events", "mne.write_evokeds", "mne.write_forward_solution", "mne.write_head_bem", "mne.write_label", "mne.write_labels_to_annot", "mne.write_proj", "mne.write_source_spaces", "mne.write_surface", "mne.write_trans", "Glossary", "MNE", "Advanced setup", "Testing your installation", "Contributing guide", "Installing FreeSurfer", "Installing MNE-Python", "MNE-Python installers", "Install via <code class=\"code docutils literal notranslate\"><span class=\"pre\">pip</span></code> or <code class=\"code docutils literal notranslate\"><span class=\"pre\">conda</span></code>", "Installing Python", "Installing MNE-C", "Overview of the MNE tools suite", "Updating MNE-Python", "Inverse Solutions", "Logging and Configuration", "Martinos Center setup", "MNE with CPP", "Most-used classes", "MRI Processing", "How to cite MNE-Python", "The typical M/EEG workflow", "Datasets Overview", "Design philosophy", "MNE-Python Development", "Frequently Asked Questions (FAQ)", "Getting help", "Project Governance", "Algorithms and other implementation details", "Documentation overview", "Getting started with Python", "MNE-MATLAB documentation", "Migrating from other analysis software", "Current steering council and institutional partners", "Roadmap", "Preprocessing", "Python API Reference", "Reading raw data", "Realtime", "MNE-Report", "Sensor Space Data", "Simulation", "Source Space Data", "Statistics", "Time-Frequency", "Visualization", "What\u2019s new"], "terms": {"3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870], "7": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870], "demonstr": [0, 5, 19, 27, 32, 40, 42, 43, 44, 62, 68, 69, 71, 77, 81, 96, 100, 111, 114, 143, 144, 149, 150, 159, 166, 168, 169, 170, 188, 192, 196, 198, 199, 201, 202, 205, 207, 211, 218, 219, 222, 230, 235, 566, 838, 847, 850, 853, 854, 871], "sensor": [0, 4, 5, 11, 15, 16, 17, 20, 23, 25, 27, 28, 33, 40, 41, 44, 48, 66, 68, 69, 75, 76, 77, 82, 85, 87, 89, 91, 92, 95, 99, 100, 106, 116, 117, 119, 121, 124, 127, 129, 132, 134, 142, 144, 148, 149, 154, 155, 156, 157, 160, 164, 166, 167, 170, 171, 172, 173, 174, 176, 178, 179, 180, 181, 182, 183, 184, 186, 189, 196, 197, 199, 201, 202, 203, 205, 206, 207, 211, 219, 222, 223, 224, 229, 235, 238, 239, 240, 253, 255, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 273, 274, 275, 276, 280, 281, 292, 293, 294, 300, 301, 305, 306, 307, 308, 313, 314, 315, 316, 318, 319, 321, 322, 323, 324, 333, 335, 337, 339, 344, 349, 350, 351, 352, 353, 359, 363, 364, 365, 367, 403, 404, 405, 406, 407, 410, 411, 412, 413, 418, 419, 421, 422, 423, 444, 446, 447, 454, 463, 470, 471, 472, 473, 476, 478, 481, 482, 484, 494, 506, 512, 513, 514, 518, 520, 523, 524, 528, 541, 546, 547, 549, 550, 551, 555, 561, 564, 575, 578, 583, 584, 586, 589, 601, 604, 605, 610, 623, 625, 626, 631, 642, 643, 654, 655, 658, 668, 670, 674, 675, 677, 678, 679, 680, 681, 685, 690, 691, 692, 693, 694, 709, 721, 722, 723, 738, 751, 754, 755, 758, 759, 761, 762, 763, 764, 768, 770, 772, 773, 774, 776, 777, 778, 780, 781, 787, 790, 791, 793, 794, 798, 799, 800, 805, 806, 808, 811, 826, 831, 837, 846, 847, 848, 850, 856, 859, 860, 861, 871], "sourc": [0, 1, 2, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 28, 29, 34, 36, 39, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 93, 94, 96, 97, 98, 100, 102, 103, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 153, 155, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 173, 177, 181, 182, 183, 185, 186, 187, 188, 189, 192, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 211, 212, 213, 214, 217, 219, 222, 223, 224, 225, 226, 227, 234, 235, 236, 237, 240, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 834, 836, 837, 839, 842, 847, 850, 851, 852, 856, 861, 871], "space": [0, 5, 10, 17, 20, 22, 23, 25, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 58, 59, 66, 72, 80, 85, 87, 89, 90, 91, 92, 95, 99, 102, 103, 105, 106, 110, 112, 116, 117, 121, 124, 128, 131, 132, 133, 134, 138, 145, 146, 149, 153, 154, 158, 160, 164, 166, 168, 170, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 189, 192, 196, 202, 205, 209, 210, 211, 214, 217, 219, 222, 223, 227, 229, 231, 234, 235, 236, 240, 255, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 281, 292, 293, 307, 311, 320, 325, 337, 339, 342, 343, 346, 350, 351, 352, 354, 355, 358, 359, 362, 363, 367, 403, 406, 407, 410, 411, 413, 417, 420, 421, 424, 432, 437, 444, 448, 457, 459, 461, 465, 466, 467, 468, 469, 470, 471, 472, 474, 476, 479, 486, 504, 505, 510, 512, 513, 516, 517, 518, 519, 520, 521, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 537, 546, 547, 549, 550, 560, 561, 562, 563, 569, 578, 599, 601, 605, 608, 610, 612, 613, 620, 622, 625, 627, 629, 630, 631, 638, 639, 640, 647, 650, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 664, 665, 666, 674, 675, 677, 678, 680, 681, 682, 685, 686, 690, 692, 694, 702, 725, 738, 754, 756, 762, 768, 769, 770, 771, 774, 775, 777, 780, 781, 785, 790, 791, 793, 796, 797, 798, 801, 802, 806, 811, 823, 826, 836, 847, 850, 859, 861, 871], "function": [0, 1, 4, 8, 16, 19, 27, 31, 35, 43, 44, 53, 54, 55, 56, 58, 69, 72, 74, 89, 91, 92, 98, 100, 106, 109, 110, 111, 112, 113, 126, 130, 132, 133, 134, 138, 139, 141, 142, 144, 147, 148, 149, 150, 153, 154, 155, 156, 158, 159, 163, 164, 165, 166, 167, 168, 169, 170, 176, 178, 180, 181, 186, 187, 188, 189, 192, 193, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 217, 218, 219, 224, 226, 227, 235, 236, 237, 240, 242, 245, 246, 252, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 284, 285, 287, 292, 293, 294, 298, 300, 302, 307, 312, 313, 315, 316, 324, 325, 327, 335, 336, 337, 342, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 365, 367, 369, 380, 383, 403, 406, 407, 408, 409, 410, 411, 412, 413, 420, 422, 424, 427, 428, 429, 430, 432, 434, 435, 436, 437, 438, 442, 443, 444, 446, 460, 461, 464, 465, 469, 470, 471, 472, 477, 479, 480, 482, 483, 486, 488, 490, 491, 492, 494, 498, 500, 501, 503, 505, 513, 516, 517, 520, 523, 524, 525, 526, 527, 528, 529, 531, 532, 539, 545, 547, 549, 550, 552, 553, 554, 559, 560, 561, 562, 563, 564, 566, 567, 569, 572, 576, 578, 579, 580, 581, 582, 584, 585, 592, 595, 596, 599, 602, 603, 604, 605, 606, 607, 608, 610, 613, 618, 626, 629, 632, 635, 639, 640, 642, 643, 644, 653, 654, 656, 657, 674, 676, 677, 678, 679, 680, 681, 685, 686, 689, 690, 691, 692, 693, 694, 697, 700, 702, 707, 708, 709, 710, 721, 722, 728, 732, 733, 734, 735, 736, 738, 748, 751, 753, 754, 755, 762, 764, 768, 770, 771, 776, 777, 778, 781, 784, 789, 790, 792, 793, 794, 796, 798, 800, 801, 802, 803, 807, 826, 828, 837, 838, 839, 845, 846, 847, 848, 853, 854, 857, 859, 860, 861, 863, 865, 868, 869, 871], "ha": [0, 1, 5, 9, 10, 27, 41, 44, 48, 53, 68, 69, 72, 76, 80, 81, 90, 91, 100, 106, 111, 123, 124, 132, 134, 138, 140, 142, 143, 144, 147, 148, 149, 153, 154, 155, 157, 158, 159, 160, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 178, 179, 180, 181, 183, 186, 187, 188, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 211, 212, 214, 217, 219, 222, 223, 227, 235, 237, 242, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 280, 281, 284, 285, 286, 287, 292, 293, 297, 298, 303, 349, 353, 354, 355, 363, 364, 365, 371, 372, 373, 376, 377, 379, 383, 384, 385, 387, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 401, 403, 409, 410, 424, 439, 441, 442, 444, 446, 447, 450, 463, 466, 468, 469, 470, 471, 472, 473, 479, 480, 491, 498, 514, 516, 517, 518, 520, 528, 549, 550, 551, 553, 564, 575, 578, 585, 608, 609, 627, 630, 671, 672, 677, 678, 680, 681, 690, 691, 692, 693, 694, 705, 709, 710, 717, 721, 726, 748, 762, 770, 772, 774, 775, 776, 777, 778, 783, 785, 790, 791, 792, 793, 794, 796, 798, 800, 826, 828, 830, 834, 836, 837, 838, 846, 847, 848, 849, 850, 851, 852, 853, 856, 859, 863, 871], "move": [0, 27, 59, 73, 77, 78, 113, 132, 138, 143, 154, 159, 175, 199, 202, 203, 206, 230, 237, 242, 252, 255, 257, 260, 261, 262, 263, 269, 275, 276, 360, 403, 410, 438, 470, 471, 472, 549, 550, 554, 690, 692, 694, 727, 728, 769, 770, 774, 777, 781, 790, 793, 798, 802, 850, 852, 853, 863, 871], "mne_connect": [0, 27, 46, 144, 169, 242, 760], "packag": [0, 27, 134, 144, 158, 164, 187, 193, 197, 198, 199, 202, 219, 222, 242, 252, 254, 255, 260, 261, 262, 263, 266, 267, 268, 270, 271, 274, 275, 276, 278, 349, 350, 352, 354, 366, 367, 406, 413, 416, 419, 420, 446, 459, 461, 470, 471, 472, 508, 509, 512, 513, 523, 524, 533, 534, 555, 562, 563, 638, 641, 642, 643, 655, 677, 678, 679, 680, 681, 690, 692, 693, 694, 695, 696, 697, 698, 699, 700, 707, 708, 709, 710, 718, 719, 720, 721, 722, 770, 773, 792, 826, 827, 828, 830, 831, 833, 834, 835, 836, 837, 841, 845, 847, 848, 859, 871], "can": [0, 4, 5, 7, 12, 13, 15, 16, 19, 21, 22, 24, 26, 27, 31, 39, 40, 41, 42, 43, 44, 45, 46, 57, 58, 59, 60, 68, 69, 72, 73, 76, 77, 79, 80, 81, 85, 91, 92, 96, 98, 100, 106, 109, 110, 111, 112, 113, 116, 117, 118, 123, 124, 126, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 178, 179, 180, 181, 182, 186, 187, 188, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 217, 219, 222, 223, 224, 225, 227, 230, 231, 232, 235, 236, 237, 240, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 283, 286, 292, 293, 298, 299, 300, 301, 304, 305, 307, 309, 311, 312, 315, 316, 317, 318, 322, 323, 324, 325, 327, 330, 334, 335, 336, 337, 343, 344, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 360, 361, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 376, 377, 379, 382, 383, 384, 385, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 409, 410, 411, 413, 414, 415, 416, 418, 419, 420, 422, 424, 427, 428, 429, 430, 432, 436, 437, 438, 439, 441, 442, 443, 444, 446, 447, 448, 450, 453, 454, 455, 456, 459, 461, 462, 463, 465, 466, 468, 469, 470, 471, 472, 479, 483, 486, 487, 490, 491, 492, 494, 498, 500, 501, 503, 505, 508, 509, 510, 512, 513, 515, 517, 523, 524, 526, 527, 528, 530, 534, 536, 537, 538, 539, 547, 548, 549, 550, 552, 553, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 577, 578, 579, 582, 584, 585, 586, 592, 593, 596, 598, 601, 602, 603, 604, 607, 608, 609, 611, 613, 615, 621, 625, 626, 627, 629, 630, 632, 635, 637, 638, 639, 646, 653, 654, 655, 656, 658, 660, 662, 664, 665, 669, 670, 676, 677, 678, 679, 680, 681, 682, 683, 685, 686, 689, 690, 691, 692, 693, 694, 698, 699, 700, 701, 702, 703, 707, 709, 710, 714, 721, 722, 725, 727, 728, 733, 735, 736, 738, 739, 743, 746, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 766, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 785, 786, 788, 789, 790, 791, 792, 793, 794, 796, 798, 800, 801, 802, 804, 811, 813, 814, 817, 819, 824, 826, 828, 829, 830, 834, 835, 836, 837, 838, 842, 845, 846, 847, 848, 852, 853, 854, 856, 859, 860, 861, 871], "found": [0, 1, 2, 4, 5, 8, 9, 11, 12, 16, 18, 21, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 63, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 79, 80, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 104, 105, 106, 107, 109, 110, 111, 113, 114, 116, 117, 118, 121, 124, 125, 126, 129, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 156, 157, 159, 160, 164, 166, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 188, 189, 193, 196, 197, 198, 199, 200, 201, 202, 204, 207, 208, 212, 214, 217, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 236, 252, 253, 255, 257, 260, 261, 262, 263, 265, 269, 284, 297, 313, 314, 324, 343, 344, 360, 371, 372, 373, 374, 376, 377, 384, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 422, 430, 444, 445, 451, 452, 453, 462, 470, 471, 472, 478, 496, 516, 550, 553, 562, 566, 567, 570, 571, 573, 574, 587, 598, 621, 627, 629, 634, 635, 639, 677, 689, 726, 738, 748, 750, 754, 768, 785, 791, 819, 829, 830, 835, 847, 851, 853, 859, 861, 871], "click": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 217, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 237, 255, 257, 260, 261, 262, 263, 269, 275, 276, 403, 410, 470, 471, 472, 549, 550, 690, 692, 694, 739, 751, 759, 768, 769, 770, 772, 774, 776, 777, 781, 785, 790, 791, 792, 793, 794, 798, 799, 800, 802, 828, 830, 836, 848, 859, 871], "here": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 217, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 237, 266, 270, 271, 273, 275, 276, 329, 355, 379, 385, 409, 420, 427, 443, 470, 503, 513, 515, 525, 550, 566, 576, 579, 593, 595, 608, 639, 642, 643, 644, 653, 654, 656, 677, 678, 679, 680, 681, 685, 771, 802, 828, 830, 837, 838, 847, 850, 853, 854, 855, 857, 871], "download": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 217, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 237, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 384, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 828, 830, 831, 832, 833, 837, 838, 847, 871], "full": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 217, 218, 219, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 235, 236, 237, 255, 260, 261, 262, 263, 265, 267, 268, 271, 273, 274, 276, 292, 293, 295, 313, 314, 349, 353, 354, 355, 363, 364, 365, 403, 408, 410, 411, 416, 433, 436, 446, 447, 466, 468, 469, 470, 471, 472, 516, 517, 528, 531, 547, 550, 605, 608, 619, 670, 676, 677, 679, 681, 693, 707, 709, 716, 719, 721, 722, 728, 738, 754, 756, 759, 762, 768, 770, 778, 785, 791, 796, 801, 803, 804, 807, 828, 830, 836, 842, 846, 847, 852, 871], "exampl": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 147, 148, 149, 150, 153, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 192, 196, 197, 198, 199, 200, 201, 205, 206, 207, 208, 211, 212, 213, 214, 217, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 237, 240, 276, 330, 357, 363, 364, 374, 379, 397, 402, 425, 430, 447, 538, 560, 568, 587, 627, 636, 736, 768, 770, 777, 781, 783, 791, 793, 798, 802, 826, 828, 830, 833, 837, 846, 848, 850, 851, 853, 854, 871], "code": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 217, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 236, 237, 240, 251, 255, 260, 261, 262, 263, 270, 279, 344, 430, 432, 442, 444, 447, 470, 471, 472, 479, 488, 494, 518, 578, 587, 603, 676, 692, 694, 718, 720, 723, 738, 770, 772, 792, 826, 834, 846, 849, 850, 852, 853, 854, 857, 859, 866, 869, 871], "we": [1, 4, 5, 7, 9, 10, 11, 13, 16, 18, 19, 21, 22, 26, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 53, 57, 58, 64, 66, 67, 68, 69, 71, 72, 73, 80, 81, 84, 85, 87, 91, 92, 98, 100, 106, 108, 109, 110, 111, 112, 113, 114, 117, 118, 123, 124, 126, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 188, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 217, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 237, 240, 255, 257, 260, 261, 262, 263, 267, 270, 271, 273, 275, 278, 302, 325, 411, 413, 433, 434, 435, 436, 443, 453, 470, 471, 472, 473, 500, 525, 550, 566, 577, 585, 650, 693, 722, 738, 739, 754, 763, 778, 796, 828, 834, 835, 838, 841, 845, 846, 847, 848, 850, 852, 853, 857, 859, 871], "comput": [1, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 17, 19, 22, 23, 24, 26, 27, 31, 35, 37, 42, 43, 47, 49, 51, 56, 59, 66, 69, 70, 74, 76, 78, 84, 85, 89, 90, 92, 93, 94, 95, 97, 102, 110, 111, 112, 116, 117, 118, 120, 121, 128, 131, 132, 133, 139, 140, 143, 144, 147, 148, 149, 150, 153, 154, 155, 158, 161, 163, 164, 165, 166, 170, 173, 174, 176, 179, 180, 181, 182, 183, 184, 187, 189, 192, 193, 197, 198, 200, 204, 205, 207, 211, 214, 218, 219, 222, 223, 226, 235, 236, 237, 240, 253, 255, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 278, 280, 281, 284, 285, 286, 287, 289, 292, 293, 294, 295, 297, 299, 302, 304, 310, 311, 313, 315, 320, 324, 336, 337, 338, 339, 348, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 363, 364, 365, 374, 403, 404, 407, 408, 409, 410, 411, 415, 419, 422, 432, 437, 442, 444, 446, 447, 448, 453, 459, 461, 462, 466, 467, 468, 469, 470, 471, 472, 476, 478, 483, 484, 486, 504, 507, 508, 509, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 547, 548, 550, 551, 554, 557, 558, 560, 561, 562, 563, 566, 569, 575, 576, 595, 597, 598, 599, 600, 605, 608, 609, 610, 612, 613, 620, 622, 625, 627, 629, 631, 633, 635, 638, 639, 640, 645, 646, 647, 648, 649, 650, 651, 652, 655, 658, 660, 661, 662, 663, 664, 665, 666, 671, 672, 673, 676, 677, 678, 680, 681, 685, 686, 687, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 707, 708, 709, 710, 715, 716, 717, 718, 719, 720, 721, 722, 723, 727, 732, 738, 754, 755, 756, 762, 763, 765, 766, 768, 769, 770, 777, 778, 785, 790, 791, 797, 806, 815, 818, 819, 826, 830, 831, 833, 836, 837, 842, 847, 850, 856, 861, 866, 868, 871], "evok": [1, 2, 4, 5, 7, 8, 15, 16, 17, 18, 20, 27, 28, 31, 34, 35, 37, 38, 39, 41, 43, 44, 45, 47, 48, 49, 53, 54, 55, 56, 57, 58, 59, 60, 66, 69, 71, 75, 76, 77, 81, 82, 84, 85, 86, 88, 90, 92, 93, 94, 96, 97, 98, 104, 110, 113, 114, 119, 121, 127, 133, 134, 139, 141, 142, 152, 160, 165, 167, 168, 174, 176, 177, 178, 179, 180, 181, 182, 183, 186, 189, 193, 196, 197, 198, 199, 200, 202, 203, 204, 207, 218, 219, 223, 224, 225, 226, 227, 230, 232, 235, 237, 240, 252, 255, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 270, 271, 273, 274, 275, 276, 277, 280, 281, 285, 286, 288, 289, 292, 293, 295, 309, 312, 348, 349, 351, 353, 367, 386, 417, 424, 428, 429, 434, 435, 437, 444, 446, 460, 462, 466, 468, 469, 470, 471, 472, 476, 484, 509, 510, 513, 516, 517, 518, 519, 520, 521, 525, 528, 531, 541, 546, 547, 548, 549, 550, 551, 558, 559, 562, 563, 565, 568, 572, 577, 578, 593, 599, 601, 605, 606, 607, 608, 609, 610, 612, 613, 616, 632, 635, 638, 639, 644, 654, 656, 676, 685, 690, 692, 693, 694, 699, 703, 709, 710, 721, 722, 723, 738, 755, 762, 763, 765, 766, 768, 769, 772, 773, 774, 775, 776, 777, 778, 782, 785, 789, 791, 792, 795, 797, 800, 805, 817, 826, 830, 847, 848, 850, 853, 856, 857, 861, 871], "from": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 141, 143, 144, 145, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 202, 203, 205, 206, 207, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 237, 240, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 297, 298, 302, 304, 307, 308, 310, 313, 316, 319, 320, 321, 323, 325, 326, 327, 328, 329, 332, 333, 334, 337, 340, 341, 342, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 363, 364, 365, 366, 367, 374, 379, 387, 388, 396, 397, 403, 407, 409, 410, 411, 412, 418, 421, 425, 426, 427, 429, 432, 433, 434, 435, 436, 437, 442, 444, 445, 446, 447, 448, 451, 453, 455, 456, 460, 461, 462, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 523, 524, 525, 526, 527, 528, 530, 531, 532, 536, 537, 541, 542, 543, 547, 548, 549, 550, 551, 552, 553, 554, 557, 559, 560, 561, 564, 565, 566, 567, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 587, 588, 589, 590, 593, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 607, 608, 609, 610, 611, 612, 613, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 630, 632, 635, 639, 640, 641, 642, 643, 644, 650, 653, 654, 655, 656, 657, 659, 660, 662, 663, 664, 665, 666, 667, 669, 670, 672, 676, 677, 678, 679, 680, 681, 682, 685, 686, 688, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 720, 722, 723, 726, 727, 728, 730, 733, 734, 737, 738, 746, 751, 754, 755, 762, 766, 767, 768, 770, 771, 772, 774, 775, 776, 777, 778, 779, 781, 782, 783, 785, 786, 788, 789, 790, 791, 792, 793, 794, 795, 798, 800, 806, 808, 811, 817, 818, 821, 824, 826, 828, 830, 833, 834, 835, 836, 837, 838, 842, 846, 847, 848, 850, 852, 853, 855, 856, 859, 861, 869, 871], "tutori": [1, 27, 61, 68, 71, 81, 106, 121, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 174, 175, 176, 178, 179, 180, 184, 185, 188, 189, 190, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 211, 212, 213, 214, 215, 217, 218, 219, 220, 222, 224, 227, 228, 230, 232, 233, 235, 237, 238, 240, 255, 257, 258, 260, 261, 262, 263, 265, 292, 297, 349, 354, 403, 423, 438, 441, 444, 446, 470, 471, 472, 482, 484, 514, 538, 578, 754, 766, 778, 806, 826, 830, 847, 850, 853, 854, 855, 871], "For": [1, 4, 15, 19, 42, 43, 46, 49, 54, 62, 67, 68, 77, 92, 98, 100, 106, 110, 112, 117, 118, 120, 124, 131, 132, 133, 134, 138, 141, 142, 143, 144, 147, 148, 149, 153, 154, 156, 158, 159, 160, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 192, 193, 196, 197, 198, 199, 201, 202, 203, 204, 205, 207, 211, 212, 214, 217, 222, 224, 226, 227, 230, 232, 235, 236, 237, 252, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 279, 292, 293, 309, 320, 330, 349, 353, 354, 355, 362, 363, 364, 365, 374, 379, 396, 397, 402, 403, 405, 406, 409, 410, 411, 413, 415, 416, 420, 424, 425, 426, 427, 429, 432, 433, 434, 436, 438, 439, 441, 442, 444, 445, 446, 447, 460, 461, 462, 465, 466, 468, 469, 470, 471, 472, 477, 479, 486, 491, 493, 494, 515, 523, 528, 532, 537, 549, 550, 551, 552, 561, 565, 568, 569, 578, 582, 589, 596, 605, 621, 625, 627, 635, 637, 639, 670, 675, 676, 677, 678, 680, 681, 685, 690, 691, 692, 693, 694, 711, 728, 738, 753, 754, 756, 762, 763, 768, 769, 770, 772, 774, 777, 778, 779, 781, 782, 783, 785, 791, 793, 794, 798, 800, 802, 826, 828, 830, 832, 836, 841, 842, 846, 847, 848, 849, 850, 853, 857, 871], "comparison": [1, 27, 31, 37, 80, 93, 94, 98, 109, 119, 127, 132, 149, 153, 155, 165, 174, 181, 182, 189, 199, 204, 208, 227, 230, 231, 232, 236, 237, 240, 271, 272, 355, 550, 553, 579, 618, 674, 678, 679, 838, 846, 853, 868, 871], "see": [1, 4, 7, 8, 10, 19, 21, 22, 26, 27, 33, 34, 38, 42, 43, 61, 62, 68, 69, 71, 73, 77, 79, 80, 81, 98, 110, 112, 116, 117, 118, 124, 126, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 144, 147, 148, 149, 153, 154, 155, 156, 157, 158, 159, 160, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 178, 179, 180, 181, 182, 186, 187, 188, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 217, 218, 219, 222, 224, 225, 227, 230, 235, 237, 245, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 307, 311, 312, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 405, 406, 408, 409, 411, 413, 414, 416, 419, 420, 422, 424, 428, 430, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 453, 454, 458, 459, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 512, 513, 514, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 543, 544, 546, 549, 550, 551, 552, 553, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 573, 574, 575, 576, 578, 579, 581, 582, 585, 586, 587, 590, 591, 592, 593, 595, 597, 598, 599, 600, 601, 602, 604, 605, 606, 608, 609, 610, 612, 613, 614, 615, 616, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 635, 636, 638, 639, 641, 642, 643, 644, 653, 654, 655, 656, 658, 660, 661, 662, 663, 664, 665, 666, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 703, 707, 708, 709, 710, 714, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 733, 737, 738, 743, 746, 753, 754, 755, 762, 763, 766, 768, 769, 770, 771, 772, 773, 774, 776, 777, 778, 780, 781, 782, 783, 785, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 807, 809, 810, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 828, 829, 830, 834, 835, 836, 837, 846, 847, 848, 850, 852, 853, 854, 857, 858, 859, 861, 868, 871], "1": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 188, 189, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 216, 217, 218, 219, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 240, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 286, 292, 293, 294, 299, 302, 303, 304, 307, 309, 311, 313, 316, 317, 318, 330, 336, 337, 338, 342, 343, 348, 349, 350, 352, 354, 355, 360, 365, 374, 380, 381, 382, 386, 387, 388, 396, 397, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 430, 432, 433, 434, 435, 436, 438, 439, 441, 442, 443, 444, 446, 447, 448, 453, 459, 461, 462, 465, 466, 468, 469, 470, 471, 472, 479, 481, 486, 488, 493, 494, 495, 502, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 532, 533, 534, 535, 544, 547, 549, 550, 551, 552, 555, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 582, 585, 586, 587, 588, 593, 600, 602, 604, 612, 625, 627, 629, 631, 635, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 657, 659, 664, 665, 666, 669, 670, 671, 672, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 702, 703, 704, 705, 707, 708, 709, 710, 714, 716, 717, 718, 719, 720, 721, 722, 723, 727, 728, 733, 738, 742, 747, 751, 754, 755, 759, 762, 766, 767, 768, 769, 770, 772, 773, 774, 777, 778, 779, 781, 782, 783, 785, 786, 788, 789, 790, 791, 792, 793, 794, 796, 797, 798, 799, 800, 801, 804, 811, 815, 817, 822, 826, 828, 829, 830, 833, 835, 836, 838, 845, 846, 847, 850, 852, 853, 856, 859], "http": [1, 8, 15, 42, 68, 85, 110, 149, 153, 182, 193, 227, 240, 255, 260, 261, 262, 263, 267, 271, 275, 295, 349, 362, 374, 379, 381, 396, 397, 411, 466, 470, 471, 472, 479, 517, 551, 636, 647, 652, 672, 674, 720, 723, 734, 796, 828, 830, 838, 850, 853, 871], "neuroimag": [1, 10, 12, 18, 19, 21, 34, 41, 45, 58, 73, 91, 98, 110, 118, 123, 142, 153, 160, 163, 178, 182, 184, 185, 193, 222, 223, 240, 255, 257, 258, 260, 261, 262, 263, 265, 266, 271, 297, 349, 382, 407, 409, 410, 411, 421, 424, 444, 446, 466, 469, 482, 514, 518, 528, 532, 550, 585, 647, 650, 652, 674, 677, 678, 679, 680, 681, 683, 684, 754, 766, 778, 826, 837, 845, 848, 850, 853, 854, 859], "usc": [1, 182], "edu": [1, 9, 24, 34, 36, 42, 46, 57, 66, 68, 98, 101, 110, 111, 112, 117, 131, 149, 153, 182, 240, 267, 271, 275, 362, 587, 796, 853], "mediannervectf": 1, "author": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 139, 155, 157, 159, 177, 178, 180, 181, 182, 183, 189, 192, 199, 206, 219, 222, 224, 225, 226, 227, 230, 231, 232, 236, 237, 240, 585, 830, 845, 852], "mainak": [1, 45, 76, 83, 84, 189, 240, 469, 845, 858, 871], "ja": [1, 45, 76, 83, 84, 189, 240, 469, 845, 858, 871], "telecom": [1, 76, 84, 189], "paristech": [1, 76, 84, 189, 251, 858], "fr": [1, 7, 9, 10, 11, 13, 18, 19, 28, 29, 30, 37, 38, 39, 41, 45, 46, 47, 49, 51, 52, 58, 63, 76, 84, 89, 93, 94, 97, 104, 105, 107, 108, 114, 118, 122, 128, 129, 135, 157, 183, 189, 193, 224, 225, 226, 230, 231, 232, 236, 240, 871], "licens": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 139, 155, 157, 159, 177, 178, 180, 181, 182, 183, 189, 192, 206, 219, 222, 224, 225, 226, 227, 230, 231, 232, 236, 237, 371, 372, 373, 379, 381, 847, 871], "bsd": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 139, 155, 157, 159, 177, 178, 180, 181, 182, 183, 189, 192, 206, 219, 222, 224, 225, 226, 227, 230, 231, 232, 236, 237, 578, 852], "claus": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 139, 155, 157, 159, 177, 178, 180, 181, 182, 183, 189, 192, 206, 219, 222, 224, 225, 226, 227, 230, 231, 232, 236, 237], "import": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 72, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 217, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 237, 240, 255, 260, 261, 262, 263, 265, 307, 323, 325, 332, 367, 374, 396, 397, 443, 470, 471, 472, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 550, 587, 602, 603, 604, 607, 621, 635, 655, 670, 672, 689, 690, 692, 693, 694, 733, 736, 738, 786, 824, 828, 829, 834, 837, 838, 841, 846, 847, 848, 850, 852, 853, 857, 859, 871], "numpi": [1, 4, 5, 8, 9, 10, 11, 14, 15, 16, 19, 22, 28, 31, 32, 33, 34, 37, 39, 41, 44, 46, 49, 57, 58, 59, 62, 66, 68, 69, 70, 72, 79, 81, 87, 89, 90, 91, 92, 94, 97, 104, 108, 109, 110, 111, 112, 114, 116, 117, 122, 124, 130, 132, 133, 134, 135, 138, 139, 141, 144, 147, 148, 149, 154, 155, 156, 157, 158, 164, 166, 168, 169, 170, 174, 175, 176, 179, 180, 181, 182, 183, 188, 189, 192, 193, 196, 197, 199, 200, 201, 202, 203, 204, 207, 208, 211, 212, 217, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 237, 254, 255, 257, 260, 261, 262, 263, 267, 268, 269, 270, 271, 274, 275, 276, 409, 411, 441, 442, 443, 468, 469, 470, 471, 472, 503, 550, 564, 576, 587, 595, 642, 643, 644, 653, 654, 656, 670, 675, 677, 678, 679, 680, 681, 689, 690, 691, 692, 693, 694, 695, 697, 698, 700, 718, 719, 720, 721, 722, 723, 738, 755, 770, 772, 777, 781, 790, 798, 800, 826, 829, 848, 852, 855, 871], "np": [1, 4, 5, 8, 9, 10, 11, 14, 15, 16, 19, 22, 28, 31, 32, 33, 34, 37, 39, 41, 42, 44, 46, 49, 57, 58, 59, 66, 68, 69, 70, 72, 79, 81, 87, 89, 90, 91, 92, 94, 97, 104, 108, 109, 110, 111, 112, 114, 116, 117, 122, 124, 130, 132, 133, 134, 135, 139, 141, 144, 148, 149, 154, 155, 156, 157, 158, 164, 166, 168, 170, 174, 175, 176, 179, 180, 181, 182, 183, 188, 189, 192, 193, 196, 197, 199, 200, 201, 203, 204, 207, 208, 211, 212, 217, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 237, 254, 255, 260, 261, 262, 263, 266, 267, 268, 271, 273, 274, 275, 276, 278, 309, 349, 403, 410, 437, 438, 442, 459, 470, 471, 472, 488, 501, 550, 564, 569, 576, 587, 656, 670, 682, 690, 692, 693, 694, 709, 710, 738, 746, 752, 757, 762, 769, 792, 796, 798, 801, 802, 830, 853, 856, 869, 871], "mne": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 154, 155, 156, 157, 160, 161, 162, 163, 165, 166, 167, 168, 171, 172, 173, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 196, 198, 200, 201, 204, 205, 206, 208, 212, 213, 214, 215, 218, 219, 220, 221, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 237, 240, 245, 246, 247, 248, 250, 251, 826, 828, 829, 831, 835, 839, 840, 841, 846, 847, 848, 851, 852, 854, 857, 858, 859, 860, 861, 862, 865, 866, 868, 869, 870, 871], "bst_raw": [1, 116, 847, 861], "io": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 26, 28, 29, 32, 33, 41, 44, 45, 48, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 120, 124, 125, 126, 129, 130, 132, 133, 135, 138, 139, 140, 142, 143, 144, 147, 149, 150, 154, 155, 156, 157, 158, 160, 164, 165, 166, 167, 168, 169, 170, 175, 178, 180, 181, 182, 183, 186, 187, 188, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 217, 218, 219, 224, 225, 226, 227, 230, 232, 235, 236, 237, 240, 247, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 265, 267, 268, 270, 271, 274, 275, 276, 279, 291, 360, 379, 436, 438, 441, 513, 550, 558, 562, 563, 569, 578, 690, 692, 693, 694, 707, 709, 710, 738, 782, 783, 785, 828, 830, 834, 846, 847, 848, 850, 853, 857, 861, 862, 871], "read_raw_ctf": [1, 7, 12, 21, 78, 79, 116, 120, 182, 186, 189, 477, 853, 861, 871], "print": [1, 2, 4, 5, 7, 8, 10, 11, 13, 14, 15, 16, 18, 19, 22, 24, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 63, 67, 68, 69, 70, 71, 72, 74, 76, 77, 80, 81, 83, 84, 85, 89, 90, 91, 92, 93, 94, 97, 98, 100, 101, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 120, 124, 125, 128, 129, 130, 133, 134, 135, 138, 139, 140, 141, 142, 144, 147, 148, 149, 154, 155, 156, 157, 158, 164, 165, 166, 167, 168, 169, 173, 174, 177, 179, 180, 181, 182, 183, 189, 193, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 211, 212, 213, 217, 218, 219, 222, 223, 225, 226, 227, 230, 231, 232, 235, 236, 237, 240, 252, 255, 260, 261, 262, 263, 269, 349, 387, 438, 444, 470, 471, 472, 501, 636, 637, 689, 692, 693, 733, 746, 762, 773, 775, 778, 834, 836, 847, 850, 871], "__doc__": [1, 2, 4, 7, 8, 10, 11, 13, 14, 15, 16, 18, 22, 24, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 67, 68, 69, 70, 71, 72, 74, 76, 77, 81, 83, 84, 85, 89, 90, 91, 92, 93, 94, 97, 100, 101, 104, 105, 106, 107, 108, 111, 113, 114, 115, 116, 117, 118, 120, 125, 128, 129, 130, 134, 173, 177, 181, 182, 189, 225, 226, 231, 232], "tmin": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 28, 31, 32, 33, 34, 37, 39, 41, 44, 45, 48, 50, 58, 59, 67, 69, 70, 71, 80, 81, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 100, 101, 104, 105, 107, 108, 109, 110, 111, 114, 118, 125, 129, 130, 134, 135, 138, 139, 140, 142, 143, 147, 149, 160, 164, 170, 175, 178, 179, 181, 182, 183, 189, 192, 193, 197, 198, 202, 206, 208, 211, 217, 218, 219, 223, 224, 225, 226, 227, 230, 232, 235, 236, 237, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 336, 338, 349, 350, 351, 354, 409, 415, 427, 429, 470, 471, 472, 505, 523, 540, 562, 563, 566, 567, 572, 657, 676, 682, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 703, 709, 710, 738, 770, 792, 798, 846, 853, 857, 871], "tmax": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 28, 31, 32, 33, 34, 37, 39, 41, 44, 45, 48, 50, 58, 59, 67, 69, 70, 71, 80, 81, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 100, 101, 104, 105, 107, 108, 109, 110, 111, 114, 118, 125, 126, 129, 130, 134, 135, 138, 139, 140, 142, 143, 144, 147, 149, 150, 160, 164, 165, 166, 170, 175, 178, 179, 180, 181, 182, 183, 189, 192, 193, 196, 197, 198, 202, 203, 205, 206, 207, 208, 211, 212, 213, 214, 218, 219, 223, 224, 225, 226, 227, 230, 232, 235, 236, 237, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 336, 338, 349, 350, 351, 354, 409, 415, 427, 429, 470, 471, 472, 523, 540, 562, 563, 566, 567, 572, 676, 679, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 703, 709, 710, 738, 770, 779, 792, 798, 846, 850, 853, 857, 871], "event_id": [1, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 28, 32, 33, 41, 44, 45, 48, 67, 69, 70, 71, 85, 91, 93, 94, 96, 97, 100, 101, 104, 107, 109, 110, 114, 118, 125, 129, 133, 134, 135, 138, 139, 140, 142, 147, 149, 150, 160, 164, 166, 170, 175, 178, 181, 182, 183, 189, 193, 201, 202, 204, 208, 212, 217, 218, 219, 224, 225, 226, 227, 230, 232, 235, 236, 237, 252, 253, 254, 255, 260, 261, 270, 279, 350, 419, 425, 427, 430, 432, 470, 471, 472, 488, 515, 551, 562, 563, 566, 567, 570, 571, 572, 573, 574, 602, 604, 605, 676, 692, 693, 768, 771, 791, 846, 853, 857, 871], "0": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 235, 236, 237, 240, 242, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 288, 292, 293, 295, 299, 300, 301, 302, 304, 307, 308, 309, 312, 313, 316, 321, 323, 325, 330, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 360, 363, 364, 365, 374, 380, 381, 382, 383, 396, 397, 402, 403, 405, 407, 408, 409, 410, 411, 412, 414, 415, 416, 422, 423, 424, 427, 428, 430, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 453, 456, 459, 460, 461, 462, 466, 468, 469, 470, 471, 472, 479, 480, 481, 482, 483, 484, 486, 487, 488, 491, 493, 498, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 523, 524, 525, 528, 529, 530, 532, 533, 534, 535, 536, 537, 541, 542, 543, 544, 549, 550, 551, 552, 553, 555, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 576, 578, 580, 582, 583, 586, 587, 592, 598, 600, 602, 603, 604, 605, 608, 609, 612, 613, 621, 623, 624, 626, 627, 629, 632, 635, 637, 638, 639, 640, 641, 642, 643, 644, 646, 648, 649, 653, 654, 655, 656, 657, 659, 668, 669, 671, 672, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 700, 702, 703, 705, 706, 707, 708, 709, 710, 713, 715, 717, 718, 719, 720, 721, 722, 723, 724, 727, 728, 733, 735, 738, 739, 741, 742, 743, 747, 748, 754, 755, 756, 757, 761, 762, 763, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 785, 786, 787, 788, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 807, 811, 812, 815, 817, 821, 822, 824, 826, 828, 829, 830, 833, 836, 846, 847, 850, 852, 853, 856], "2": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 189, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 236, 237, 240, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 283, 284, 286, 292, 293, 295, 297, 309, 311, 316, 330, 336, 338, 342, 343, 349, 350, 351, 352, 354, 355, 374, 381, 382, 396, 397, 403, 405, 406, 409, 410, 411, 413, 414, 415, 419, 420, 422, 424, 425, 426, 432, 436, 438, 439, 441, 442, 444, 448, 455, 458, 465, 466, 468, 469, 470, 471, 472, 479, 486, 493, 498, 506, 508, 513, 515, 516, 517, 523, 525, 526, 527, 528, 530, 532, 533, 534, 544, 549, 550, 551, 555, 558, 559, 560, 562, 563, 564, 566, 567, 569, 575, 576, 577, 578, 582, 588, 593, 595, 608, 609, 612, 615, 618, 620, 631, 635, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 662, 664, 665, 666, 667, 669, 671, 672, 673, 676, 677, 678, 679, 680, 681, 682, 689, 690, 691, 692, 693, 694, 702, 703, 704, 708, 709, 714, 720, 722, 723, 726, 728, 738, 739, 742, 743, 755, 762, 769, 770, 772, 774, 777, 778, 779, 780, 781, 782, 783, 790, 792, 793, 794, 796, 797, 798, 800, 801, 808, 828, 829, 830, 835, 836, 838, 845, 846, 847, 848, 850, 853, 856], "take": [1, 4, 5, 7, 10, 16, 19, 26, 31, 37, 40, 42, 43, 44, 46, 49, 68, 69, 72, 74, 77, 80, 91, 93, 94, 98, 106, 107, 110, 112, 116, 120, 124, 128, 130, 132, 133, 135, 138, 139, 140, 142, 143, 147, 148, 150, 153, 156, 157, 158, 160, 164, 165, 166, 167, 169, 170, 174, 177, 179, 180, 181, 183, 187, 192, 193, 198, 199, 202, 203, 204, 205, 207, 211, 217, 219, 222, 230, 231, 232, 236, 237, 252, 254, 255, 257, 260, 261, 262, 263, 267, 268, 269, 270, 271, 272, 274, 275, 276, 278, 279, 283, 292, 293, 304, 307, 325, 335, 337, 349, 353, 354, 355, 362, 363, 364, 365, 403, 410, 427, 432, 436, 444, 446, 447, 460, 462, 466, 468, 469, 470, 471, 472, 496, 517, 518, 519, 520, 521, 523, 524, 528, 533, 534, 550, 553, 555, 558, 626, 632, 638, 640, 651, 656, 676, 685, 690, 692, 693, 694, 735, 738, 739, 755, 762, 768, 770, 772, 777, 778, 781, 790, 798, 808, 826, 830, 833, 834, 838, 852, 853, 854, 856, 871], "right": [1, 5, 8, 10, 11, 13, 15, 38, 39, 40, 42, 44, 46, 50, 51, 56, 60, 68, 69, 71, 77, 80, 91, 106, 109, 110, 111, 113, 117, 124, 125, 129, 131, 132, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 153, 154, 156, 158, 159, 164, 166, 170, 173, 174, 176, 177, 178, 179, 189, 192, 198, 199, 201, 202, 203, 204, 207, 211, 212, 213, 214, 218, 219, 224, 226, 227, 230, 231, 232, 235, 236, 255, 256, 257, 260, 261, 262, 263, 265, 266, 267, 268, 269, 271, 274, 275, 276, 307, 309, 319, 320, 330, 331, 355, 374, 403, 410, 425, 427, 430, 437, 461, 469, 470, 471, 472, 493, 503, 515, 549, 550, 625, 653, 690, 692, 693, 694, 738, 751, 761, 762, 768, 769, 770, 774, 776, 777, 781, 789, 790, 791, 793, 798, 802, 826, 828, 830, 833, 847, 850, 852, 853, 856, 871], "hand": [1, 5, 8, 9, 109, 154, 158, 197, 202, 203, 204, 237, 265, 374, 550, 853, 871], "somato": [1, 32, 33, 45, 60, 110, 236, 847, 861, 871], "reject": [1, 5, 7, 11, 13, 16, 27, 28, 41, 44, 45, 60, 67, 74, 75, 80, 93, 94, 96, 97, 98, 100, 101, 104, 107, 110, 111, 114, 118, 129, 138, 139, 140, 142, 143, 144, 149, 150, 163, 164, 170, 175, 178, 187, 189, 193, 197, 202, 203, 204, 207, 208, 209, 210, 213, 222, 224, 225, 226, 227, 230, 232, 236, 240, 252, 253, 254, 255, 260, 261, 262, 265, 270, 352, 354, 470, 471, 472, 510, 547, 550, 552, 553, 562, 563, 566, 567, 570, 571, 578, 601, 605, 617, 668, 674, 676, 709, 710, 768, 781, 782, 783, 784, 853, 871], "dict": [1, 4, 5, 7, 8, 9, 10, 11, 13, 14, 16, 18, 21, 22, 26, 28, 34, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 60, 64, 67, 68, 72, 74, 76, 77, 83, 85, 90, 91, 93, 94, 96, 97, 98, 100, 101, 104, 106, 107, 109, 110, 111, 112, 113, 114, 117, 118, 120, 124, 125, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 143, 148, 149, 150, 155, 156, 157, 158, 164, 166, 167, 168, 169, 170, 173, 174, 175, 177, 178, 179, 182, 189, 192, 193, 198, 199, 201, 202, 203, 204, 205, 207, 208, 211, 217, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 236, 237, 253, 254, 255, 257, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 282, 284, 292, 293, 297, 299, 305, 307, 309, 319, 320, 335, 336, 337, 338, 339, 340, 341, 349, 352, 353, 354, 360, 361, 362, 363, 364, 365, 379, 385, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 425, 427, 430, 432, 435, 437, 438, 439, 441, 442, 446, 447, 448, 449, 451, 453, 454, 455, 456, 463, 466, 468, 469, 470, 471, 472, 475, 479, 486, 490, 493, 502, 505, 506, 507, 508, 509, 512, 513, 516, 517, 518, 519, 520, 521, 523, 524, 528, 530, 533, 534, 535, 540, 542, 543, 546, 548, 549, 550, 551, 552, 560, 562, 563, 564, 566, 567, 569, 575, 589, 594, 598, 602, 603, 604, 605, 607, 611, 617, 621, 623, 626, 632, 639, 641, 642, 643, 653, 655, 658, 659, 675, 676, 677, 678, 680, 681, 685, 687, 690, 692, 693, 694, 725, 726, 728, 738, 739, 754, 755, 757, 758, 760, 761, 762, 766, 768, 769, 770, 771, 772, 774, 775, 776, 777, 778, 779, 781, 783, 789, 790, 791, 793, 796, 797, 798, 799, 800, 801, 802, 808, 814, 824, 825, 830, 846, 853, 857, 871], "mag": [1, 5, 7, 8, 9, 12, 13, 21, 22, 26, 28, 31, 32, 34, 39, 40, 41, 44, 45, 47, 48, 49, 50, 53, 54, 57, 58, 67, 72, 74, 77, 78, 79, 84, 90, 91, 101, 104, 106, 113, 116, 117, 118, 120, 121, 129, 138, 140, 143, 144, 148, 150, 154, 155, 156, 160, 164, 167, 168, 170, 174, 175, 176, 177, 178, 179, 181, 182, 183, 189, 193, 196, 198, 200, 202, 203, 204, 206, 207, 211, 217, 218, 227, 230, 232, 235, 252, 255, 257, 260, 261, 262, 263, 267, 268, 270, 271, 274, 275, 276, 292, 293, 306, 313, 314, 333, 349, 353, 354, 363, 364, 365, 367, 403, 410, 412, 446, 447, 466, 468, 469, 470, 471, 472, 506, 528, 547, 548, 549, 550, 555, 560, 562, 563, 564, 566, 567, 569, 631, 676, 690, 692, 693, 694, 761, 762, 768, 769, 770, 772, 774, 776, 777, 778, 781, 791, 793, 794, 798, 799, 800, 826, 846, 853, 871], "4e": [1, 9, 21, 28, 31, 41, 44, 67, 76, 79, 101, 104, 118, 129, 150, 160, 175, 178, 183, 189, 193, 202, 218, 219, 227, 255, 260, 261, 270, 354, 470, 471, 472, 550, 566, 567, 676, 768, 791, 846], "12": [1, 7, 8, 9, 11, 12, 13, 18, 19, 20, 21, 24, 28, 32, 33, 34, 41, 42, 43, 44, 45, 46, 48, 50, 55, 58, 63, 67, 68, 70, 74, 77, 78, 80, 82, 84, 93, 98, 100, 101, 103, 104, 105, 106, 109, 110, 111, 118, 124, 129, 132, 135, 141, 143, 144, 146, 149, 150, 156, 157, 159, 160, 164, 166, 167, 169, 170, 173, 174, 175, 177, 178, 181, 185, 188, 189, 191, 192, 193, 196, 198, 199, 200, 201, 202, 204, 206, 207, 210, 211, 213, 216, 217, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 236, 240, 254, 255, 258, 259, 260, 261, 262, 263, 265, 267, 268, 270, 271, 272, 273, 274, 275, 276, 292, 300, 304, 308, 330, 342, 346, 347, 349, 354, 355, 374, 387, 409, 425, 444, 446, 469, 470, 471, 472, 483, 512, 515, 517, 550, 561, 562, 563, 566, 567, 576, 578, 643, 676, 689, 690, 692, 693, 694, 709, 710, 756, 768, 770, 775, 787, 791, 794, 846, 847, 850, 853, 856], "eog": [1, 4, 8, 9, 11, 12, 14, 15, 16, 27, 28, 32, 41, 44, 45, 60, 67, 69, 72, 74, 75, 78, 79, 80, 82, 85, 87, 90, 91, 93, 94, 97, 101, 104, 105, 106, 107, 110, 114, 124, 125, 135, 138, 139, 143, 144, 147, 149, 150, 164, 165, 166, 167, 170, 175, 178, 187, 189, 193, 197, 198, 200, 203, 205, 207, 208, 211, 212, 213, 214, 217, 219, 224, 225, 226, 227, 230, 232, 236, 255, 260, 261, 262, 263, 265, 270, 306, 354, 367, 436, 444, 470, 471, 472, 479, 481, 482, 483, 486, 487, 488, 492, 496, 541, 547, 549, 550, 563, 566, 567, 571, 574, 588, 593, 602, 642, 643, 676, 690, 692, 693, 694, 768, 769, 784, 789, 791, 826, 846, 847, 848, 853, 856, 857, 871], "250e": [1, 142, 164, 189, 201, 204, 255, 260, 261, 354, 550, 566, 567, 676], "6": [1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 66, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 117, 118, 121, 124, 127, 128, 130, 132, 134, 138, 139, 140, 141, 142, 143, 144, 146, 148, 149, 150, 152, 154, 155, 156, 157, 158, 160, 164, 166, 167, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 189, 191, 192, 193, 195, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 213, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 236, 237, 239, 240, 252, 255, 257, 258, 259, 260, 261, 262, 263, 265, 267, 268, 269, 270, 271, 273, 274, 275, 276, 278, 295, 309, 330, 354, 374, 380, 403, 405, 408, 410, 438, 439, 441, 442, 470, 471, 472, 517, 549, 550, 559, 564, 565, 566, 567, 576, 580, 631, 643, 677, 678, 680, 681, 689, 690, 692, 693, 694, 753, 754, 755, 768, 769, 770, 774, 777, 781, 783, 790, 791, 793, 797, 798, 800, 828, 829, 836, 846, 847, 853, 856], "data_path": [1, 2, 5, 7, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 63, 64, 66, 67, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 104, 105, 106, 107, 108, 110, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 153, 154, 155, 156, 158, 159, 160, 164, 165, 166, 167, 168, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 188, 189, 192, 193, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 218, 219, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 237, 255, 260, 261, 262, 263, 270, 379, 470, 471, 472, 830, 847, 853, 861, 871], "raw_path": [1, 170, 182], "meg": [1, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 63, 66, 67, 69, 70, 71, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 100, 101, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 121, 124, 126, 127, 128, 129, 131, 133, 134, 138, 139, 140, 143, 144, 147, 148, 149, 150, 154, 155, 156, 157, 158, 160, 163, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 187, 189, 190, 191, 193, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 217, 219, 224, 225, 226, 227, 230, 231, 232, 235, 236, 240, 252, 255, 257, 260, 261, 262, 263, 264, 265, 269, 271, 273, 280, 281, 292, 293, 295, 305, 310, 313, 314, 315, 320, 322, 324, 332, 336, 348, 349, 350, 351, 352, 353, 354, 359, 363, 364, 365, 367, 386, 403, 405, 410, 411, 419, 424, 444, 446, 447, 454, 460, 466, 468, 469, 470, 471, 472, 474, 478, 482, 484, 490, 491, 494, 500, 502, 509, 513, 516, 517, 518, 528, 529, 531, 532, 544, 547, 548, 549, 550, 552, 555, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 572, 575, 578, 579, 584, 586, 593, 599, 603, 604, 607, 608, 610, 625, 631, 642, 643, 647, 650, 652, 655, 658, 676, 677, 678, 680, 681, 685, 690, 692, 693, 694, 698, 699, 700, 701, 703, 709, 710, 721, 722, 725, 726, 738, 751, 754, 755, 761, 762, 768, 769, 770, 771, 772, 773, 774, 775, 777, 778, 780, 782, 789, 790, 792, 793, 798, 800, 805, 826, 827, 830, 837, 842, 845, 846, 850, 856, 857, 861, 871], "subj001_somatosensory_20111109_01_aux": [1, 116], "f": [1, 5, 8, 9, 10, 18, 19, 21, 22, 27, 28, 29, 32, 38, 39, 40, 45, 46, 59, 62, 68, 69, 80, 83, 87, 89, 91, 95, 99, 101, 104, 106, 108, 109, 110, 111, 112, 116, 123, 124, 132, 133, 139, 142, 147, 148, 149, 155, 156, 157, 158, 163, 165, 168, 170, 174, 180, 192, 193, 196, 197, 199, 202, 204, 206, 207, 213, 217, 218, 219, 222, 224, 225, 226, 228, 229, 230, 231, 232, 235, 236, 237, 240, 252, 254, 255, 257, 260, 261, 262, 263, 265, 269, 284, 292, 297, 313, 348, 381, 442, 444, 470, 471, 472, 516, 547, 559, 605, 646, 670, 671, 672, 673, 676, 678, 681, 693, 721, 726, 759, 762, 769, 826, 828, 836, 838, 846, 847, 853, 871], "d": [1, 4, 7, 11, 12, 15, 19, 21, 22, 26, 33, 38, 40, 45, 49, 51, 56, 58, 64, 70, 77, 78, 79, 81, 90, 91, 97, 98, 106, 108, 110, 115, 116, 117, 120, 123, 124, 126, 132, 133, 134, 139, 155, 156, 157, 158, 169, 177, 178, 180, 181, 182, 183, 189, 192, 199, 205, 206, 213, 219, 222, 226, 230, 231, 232, 235, 237, 240, 252, 254, 255, 257, 260, 261, 262, 263, 265, 269, 284, 292, 293, 297, 316, 349, 381, 411, 466, 470, 471, 472, 484, 488, 516, 517, 609, 635, 683, 684, 692, 694, 708, 726, 739, 778, 791, 838, 847, 848, 853, 859, 871], "crop": [1, 5, 8, 9, 10, 12, 21, 30, 31, 32, 33, 34, 37, 39, 41, 43, 44, 45, 50, 58, 72, 74, 78, 79, 80, 81, 106, 109, 113, 124, 135, 138, 139, 140, 144, 147, 149, 165, 166, 170, 174, 177, 178, 179, 181, 182, 183, 196, 197, 200, 202, 203, 204, 205, 206, 207, 211, 212, 213, 214, 219, 223, 224, 230, 232, 235, 236, 254, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 560, 579, 592, 690, 693, 848, 871], "half": [1, 68, 199, 200, 232, 255, 259, 260, 261, 262, 263, 265, 267, 268, 270, 271, 274, 275, 276, 336, 405, 439, 441, 442, 470, 471, 472, 568, 677, 678, 680, 681, 685, 702, 709, 738, 762, 768, 770, 791, 796, 801, 830, 853, 871], "length": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 33, 41, 70, 71, 74, 79, 80, 81, 85, 96, 108, 109, 110, 111, 112, 118, 130, 134, 139, 141, 142, 147, 149, 170, 173, 189, 193, 196, 198, 200, 201, 202, 203, 204, 207, 208, 211, 214, 217, 223, 227, 235, 252, 255, 257, 258, 260, 261, 262, 263, 265, 267, 268, 269, 270, 271, 274, 275, 276, 283, 308, 354, 387, 403, 405, 408, 409, 410, 411, 414, 415, 418, 439, 441, 442, 461, 469, 470, 471, 472, 520, 532, 534, 549, 550, 552, 558, 566, 567, 578, 585, 608, 609, 630, 640, 656, 670, 671, 675, 676, 690, 692, 693, 694, 695, 696, 697, 698, 700, 702, 704, 707, 708, 709, 710, 714, 720, 722, 723, 728, 738, 753, 755, 762, 769, 770, 772, 774, 777, 779, 790, 793, 796, 797, 798, 799, 800, 801, 826, 846, 847, 853, 871], "save": [1, 5, 7, 9, 11, 29, 30, 33, 40, 42, 43, 59, 60, 68, 72, 105, 106, 107, 110, 112, 132, 133, 134, 140, 141, 148, 149, 154, 155, 156, 158, 159, 160, 166, 168, 175, 178, 179, 181, 186, 188, 189, 197, 198, 200, 202, 204, 205, 207, 212, 213, 214, 219, 226, 230, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 284, 307, 308, 333, 374, 379, 407, 433, 434, 435, 436, 462, 470, 471, 472, 488, 490, 494, 523, 524, 539, 549, 550, 591, 603, 604, 607, 608, 612, 615, 618, 629, 680, 681, 690, 691, 692, 693, 694, 711, 712, 724, 726, 738, 813, 817, 818, 820, 828, 830, 834, 848, 850, 853, 856, 857, 871], "memori": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 187, 188, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 217, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 237, 252, 255, 260, 261, 262, 263, 278, 287, 290, 325, 354, 358, 368, 405, 412, 415, 416, 420, 441, 470, 471, 472, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 510, 519, 520, 521, 523, 524, 530, 552, 578, 633, 639, 677, 678, 680, 681, 689, 696, 699, 716, 718, 719, 720, 721, 722, 723, 738, 772, 828, 829, 836, 848, 857, 859, 871], "120": [1, 5, 7, 9, 24, 32, 34, 37, 41, 44, 58, 78, 79, 105, 120, 130, 132, 133, 140, 149, 158, 167, 174, 179, 189, 196, 198, 200, 202, 206, 227, 236, 240, 252, 255, 260, 261, 426, 470, 471, 472, 560, 564, 768, 791], "load_data": [1, 4, 8, 9, 12, 21, 33, 41, 68, 69, 72, 73, 74, 78, 79, 80, 81, 96, 106, 109, 110, 112, 134, 144, 149, 157, 164, 166, 170, 180, 189, 193, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 211, 212, 213, 214, 236, 255, 260, 261, 262, 263, 470, 471, 472, 847, 853, 861, 871], "plot": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 44, 45, 48, 50, 52, 53, 54, 55, 57, 58, 60, 62, 63, 64, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 118, 119, 126, 127, 128, 129, 131, 132, 133, 134, 135, 138, 141, 142, 143, 144, 147, 149, 151, 152, 154, 156, 157, 158, 163, 164, 165, 166, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 188, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 213, 215, 216, 217, 219, 222, 223, 227, 230, 231, 232, 235, 252, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 307, 308, 316, 318, 319, 323, 333, 349, 359, 367, 403, 407, 410, 418, 421, 423, 429, 432, 444, 446, 463, 470, 471, 472, 478, 482, 484, 487, 494, 509, 513, 514, 516, 517, 526, 527, 528, 529, 531, 546, 547, 549, 550, 564, 586, 599, 600, 605, 608, 610, 613, 618, 623, 630, 639, 676, 690, 691, 692, 693, 694, 738, 739, 740, 741, 743, 747, 749, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 805, 806, 808, 826, 829, 830, 834, 846, 847, 848, 851, 853, 854, 857, 859, 860, 871], "set": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 41, 43, 44, 45, 47, 48, 49, 50, 53, 54, 56, 57, 58, 59, 60, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 79, 80, 81, 83, 84, 85, 87, 90, 91, 92, 93, 94, 96, 97, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 124, 125, 129, 130, 132, 133, 134, 135, 138, 139, 140, 141, 142, 144, 147, 148, 150, 153, 154, 156, 157, 158, 159, 160, 163, 164, 166, 168, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 188, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 213, 217, 218, 219, 222, 225, 236, 237, 253, 254, 255, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 283, 284, 292, 293, 295, 297, 298, 312, 320, 325, 336, 349, 350, 352, 354, 355, 356, 360, 363, 369, 370, 371, 372, 373, 374, 376, 377, 379, 381, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 426, 427, 428, 431, 432, 433, 436, 437, 438, 442, 444, 446, 459, 460, 461, 462, 468, 470, 471, 472, 473, 479, 486, 487, 490, 492, 503, 505, 507, 509, 511, 512, 513, 514, 515, 516, 519, 520, 521, 523, 524, 528, 533, 534, 536, 537, 538, 541, 543, 549, 550, 551, 552, 553, 555, 562, 563, 564, 566, 567, 569, 579, 591, 596, 602, 603, 607, 608, 609, 612, 615, 618, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 655, 667, 668, 672, 674, 676, 677, 678, 679, 680, 681, 685, 690, 692, 693, 694, 695, 696, 697, 698, 699, 700, 702, 707, 708, 709, 710, 718, 719, 720, 721, 722, 726, 728, 729, 731, 736, 737, 738, 741, 755, 757, 762, 765, 766, 768, 770, 773, 774, 775, 776, 777, 781, 783, 784, 785, 790, 791, 792, 793, 794, 796, 798, 800, 801, 802, 803, 804, 807, 810, 826, 828, 829, 834, 835, 837, 848, 850, 852, 853, 856, 857, 860, 871], "channel": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 64, 66, 67, 68, 69, 70, 71, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 87, 89, 90, 91, 92, 93, 94, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 128, 129, 130, 132, 133, 134, 135, 139, 140, 142, 144, 148, 150, 154, 155, 156, 157, 160, 163, 164, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 187, 188, 189, 192, 193, 196, 200, 201, 203, 204, 206, 207, 209, 210, 212, 213, 214, 217, 218, 219, 222, 223, 224, 225, 226, 235, 236, 240, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 274, 275, 276, 277, 280, 281, 292, 293, 303, 305, 306, 336, 338, 340, 341, 344, 348, 349, 350, 351, 352, 353, 354, 363, 364, 365, 367, 375, 403, 405, 410, 411, 412, 414, 416, 419, 424, 428, 433, 435, 436, 441, 442, 444, 445, 446, 447, 455, 460, 463, 466, 468, 469, 470, 471, 472, 479, 481, 482, 483, 484, 486, 487, 488, 490, 492, 493, 494, 496, 506, 509, 513, 518, 528, 541, 542, 543, 544, 546, 547, 548, 549, 550, 552, 555, 556, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 577, 578, 579, 582, 583, 584, 586, 589, 592, 593, 602, 603, 604, 605, 607, 608, 609, 610, 625, 626, 631, 632, 635, 640, 642, 643, 644, 658, 670, 676, 677, 678, 680, 681, 685, 690, 691, 692, 693, 694, 698, 699, 700, 701, 703, 706, 709, 710, 714, 718, 719, 721, 722, 723, 738, 751, 754, 755, 758, 759, 760, 762, 763, 764, 767, 768, 769, 770, 772, 774, 775, 776, 777, 778, 781, 782, 783, 784, 785, 787, 788, 789, 790, 791, 792, 793, 794, 798, 799, 800, 808, 810, 811, 826, 828, 830, 834, 837, 838, 848, 850, 852, 857, 860, 861, 871], "set_channel_typ": [1, 125, 134, 138, 147, 149, 189, 211, 255, 260, 261, 262, 263, 436, 470, 471, 472, 871], "eeg058": 1, "set_eeg_refer": [1, 29, 69, 90, 91, 149, 157, 160, 165, 180, 187, 201, 203, 205, 218, 237, 255, 260, 261, 262, 263, 470, 471, 472, 549, 632, 654, 857, 861, 871], "averag": [1, 2, 4, 5, 7, 10, 11, 13, 14, 15, 16, 18, 19, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 61, 63, 65, 66, 67, 69, 70, 71, 74, 76, 77, 78, 79, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 101, 104, 105, 107, 109, 110, 113, 114, 116, 117, 118, 121, 124, 126, 129, 130, 132, 133, 134, 135, 139, 140, 141, 142, 143, 144, 148, 150, 151, 152, 156, 157, 160, 163, 164, 167, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 187, 189, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 214, 217, 218, 219, 222, 223, 224, 225, 226, 227, 230, 232, 235, 236, 237, 240, 252, 253, 255, 257, 259, 260, 261, 262, 263, 265, 267, 268, 269, 271, 274, 275, 276, 282, 348, 349, 351, 366, 382, 403, 410, 417, 422, 424, 437, 444, 460, 470, 471, 472, 494, 504, 505, 518, 519, 520, 521, 523, 524, 530, 533, 534, 549, 550, 554, 555, 557, 562, 563, 564, 566, 569, 570, 573, 575, 604, 608, 609, 632, 635, 646, 654, 690, 691, 692, 693, 694, 707, 708, 709, 710, 718, 719, 720, 721, 722, 723, 738, 762, 770, 772, 773, 777, 782, 789, 790, 792, 793, 798, 800, 817, 826, 846, 847, 850, 856, 857, 859, 871], "project": [1, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 63, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 80, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 129, 130, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 169, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 189, 196, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 222, 223, 224, 225, 226, 227, 230, 232, 236, 237, 240, 255, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 274, 275, 276, 280, 281, 292, 293, 295, 336, 338, 342, 349, 350, 351, 352, 354, 363, 365, 381, 411, 423, 444, 446, 447, 470, 471, 472, 491, 510, 512, 514, 516, 517, 518, 528, 549, 550, 561, 562, 563, 565, 569, 575, 578, 586, 593, 601, 610, 616, 631, 632, 635, 654, 667, 685, 691, 692, 694, 695, 696, 697, 698, 699, 700, 701, 709, 710, 738, 754, 755, 760, 763, 770, 772, 774, 776, 777, 781, 789, 790, 791, 792, 794, 796, 801, 807, 808, 810, 822, 826, 830, 835, 837, 842, 846, 847, 849, 859, 860, 861, 871], "true": [1, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 56, 57, 58, 59, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 83, 84, 85, 89, 90, 91, 93, 94, 96, 97, 98, 100, 101, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 126, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 188, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 213, 214, 218, 219, 222, 224, 225, 226, 227, 230, 232, 235, 236, 237, 240, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 283, 284, 292, 293, 295, 297, 298, 301, 302, 303, 304, 307, 308, 309, 312, 315, 316, 317, 318, 320, 333, 335, 336, 337, 338, 339, 342, 349, 353, 354, 355, 356, 358, 359, 363, 364, 365, 369, 371, 372, 373, 374, 376, 377, 379, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 401, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 421, 422, 424, 425, 428, 432, 433, 434, 435, 436, 437, 438, 441, 442, 444, 446, 447, 448, 451, 456, 460, 461, 462, 463, 465, 466, 468, 469, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 510, 511, 513, 515, 516, 517, 518, 519, 520, 521, 523, 524, 526, 527, 528, 530, 532, 533, 534, 535, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 559, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 575, 576, 578, 593, 601, 604, 605, 608, 613, 621, 623, 626, 629, 632, 634, 635, 637, 638, 639, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 660, 664, 667, 668, 671, 672, 674, 677, 678, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 699, 700, 702, 706, 707, 709, 710, 716, 718, 719, 720, 721, 722, 723, 724, 726, 733, 736, 738, 743, 746, 747, 751, 752, 754, 755, 756, 757, 759, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 806, 808, 813, 814, 815, 816, 817, 818, 819, 821, 822, 823, 824, 825, 828, 830, 846, 847, 850, 853, 871], "show": [1, 4, 7, 8, 10, 12, 13, 14, 15, 16, 19, 22, 26, 27, 28, 29, 31, 34, 36, 37, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 57, 58, 59, 62, 66, 67, 69, 71, 72, 75, 76, 82, 94, 96, 98, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 123, 124, 127, 128, 129, 130, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 148, 149, 150, 153, 154, 155, 157, 158, 164, 166, 167, 168, 170, 174, 176, 177, 178, 179, 180, 181, 188, 189, 196, 198, 199, 200, 201, 202, 203, 204, 206, 208, 211, 213, 214, 217, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 237, 255, 257, 258, 259, 260, 261, 262, 263, 265, 268, 269, 273, 274, 275, 276, 302, 304, 307, 308, 403, 410, 444, 462, 463, 470, 471, 472, 501, 541, 547, 549, 550, 564, 569, 571, 689, 690, 691, 692, 694, 738, 746, 747, 754, 755, 756, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 797, 798, 799, 800, 801, 802, 803, 807, 826, 828, 830, 835, 838, 846, 853, 859, 871], "power": [1, 12, 21, 27, 35, 37, 55, 59, 66, 69, 79, 80, 102, 103, 109, 110, 111, 112, 118, 125, 130, 135, 143, 144, 147, 148, 160, 163, 164, 170, 178, 181, 189, 192, 198, 199, 203, 206, 214, 220, 221, 223, 227, 228, 229, 235, 240, 255, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 271, 274, 275, 276, 284, 285, 286, 287, 289, 292, 293, 313, 348, 349, 353, 354, 403, 405, 408, 410, 411, 414, 416, 437, 439, 441, 442, 443, 444, 470, 471, 472, 477, 506, 508, 513, 516, 517, 518, 523, 524, 528, 531, 533, 534, 541, 546, 547, 550, 597, 605, 610, 612, 625, 638, 644, 655, 670, 671, 672, 673, 674, 677, 678, 679, 680, 681, 690, 691, 692, 693, 694, 699, 707, 708, 709, 710, 718, 719, 720, 721, 722, 723, 732, 738, 754, 761, 762, 763, 769, 770, 772, 775, 777, 778, 783, 789, 792, 798, 806, 826, 830, 847, 850, 852, 856, 871], "line": [1, 8, 9, 68, 78, 79, 80, 98, 106, 109, 117, 118, 120, 124, 134, 135, 138, 139, 142, 149, 153, 154, 156, 157, 158, 160, 167, 169, 170, 175, 181, 188, 189, 199, 201, 202, 204, 205, 206, 207, 208, 211, 214, 224, 225, 236, 237, 240, 255, 257, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 330, 336, 342, 403, 410, 462, 470, 471, 472, 501, 507, 549, 550, 564, 585, 593, 605, 612, 621, 624, 690, 692, 694, 738, 746, 751, 754, 755, 762, 763, 768, 769, 770, 772, 774, 776, 777, 778, 780, 781, 784, 785, 786, 789, 790, 791, 792, 793, 795, 796, 797, 798, 800, 801, 819, 824, 828, 829, 833, 835, 837, 842, 846, 847, 848, 850, 853, 861, 871], "interfer": [1, 120, 134, 196, 197, 200, 205, 206, 207, 213, 240, 252, 578, 850], "remov": [1, 7, 16, 18, 21, 27, 28, 31, 34, 41, 50, 57, 58, 67, 68, 69, 70, 72, 73, 74, 75, 78, 79, 82, 87, 90, 96, 100, 106, 109, 110, 116, 124, 129, 132, 134, 138, 139, 140, 141, 144, 147, 148, 149, 155, 156, 158, 159, 160, 164, 165, 166, 168, 170, 174, 175, 178, 179, 180, 181, 182, 189, 193, 196, 197, 198, 199, 200, 201, 204, 205, 207, 211, 213, 214, 219, 224, 225, 226, 227, 237, 240, 252, 254, 255, 257, 260, 261, 262, 263, 264, 265, 266, 269, 270, 271, 284, 297, 307, 323, 342, 349, 358, 359, 409, 411, 415, 426, 442, 446, 455, 468, 469, 470, 471, 472, 473, 486, 491, 516, 547, 548, 549, 550, 551, 565, 569, 585, 586, 593, 599, 608, 610, 613, 632, 635, 654, 656, 690, 692, 693, 694, 726, 738, 755, 759, 775, 777, 791, 793, 798, 800, 807, 808, 826, 830, 838, 847, 852, 853, 856, 857, 859, 871], "plot_psd": [1, 69, 72, 106, 126, 138, 140, 141, 164, 165, 170, 181, 189, 196, 198, 200, 204, 206, 208, 214, 235, 236, 255, 260, 261, 262, 263, 270, 470, 471, 472, 707, 709, 710, 830, 853, 871], "60": [1, 5, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 28, 29, 30, 31, 32, 34, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 63, 66, 67, 68, 70, 71, 72, 74, 76, 78, 79, 80, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 100, 101, 104, 105, 106, 107, 108, 109, 111, 113, 114, 116, 117, 118, 120, 121, 124, 128, 129, 130, 132, 134, 135, 138, 139, 141, 142, 147, 148, 149, 150, 157, 164, 165, 166, 167, 168, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 218, 219, 222, 223, 225, 226, 227, 230, 232, 235, 252, 442, 470, 471, 472, 576, 779, 847, 871], "fals": [1, 4, 5, 8, 9, 11, 12, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 30, 31, 39, 40, 41, 43, 46, 47, 48, 49, 50, 53, 54, 57, 62, 63, 66, 67, 68, 69, 70, 72, 73, 74, 76, 78, 79, 80, 81, 83, 85, 87, 91, 93, 94, 96, 97, 98, 101, 104, 105, 106, 107, 109, 111, 112, 115, 116, 117, 120, 121, 123, 124, 126, 131, 134, 135, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 153, 154, 156, 158, 160, 164, 165, 166, 167, 168, 169, 170, 174, 176, 178, 179, 180, 181, 183, 186, 189, 193, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 217, 218, 219, 223, 224, 225, 226, 227, 232, 235, 236, 237, 240, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 284, 287, 290, 292, 293, 295, 297, 298, 302, 303, 304, 307, 308, 309, 312, 315, 317, 318, 321, 335, 337, 339, 342, 349, 354, 355, 356, 358, 359, 363, 366, 369, 371, 372, 373, 374, 376, 377, 379, 381, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 408, 409, 410, 411, 417, 421, 422, 424, 428, 433, 434, 435, 436, 437, 438, 444, 447, 451, 456, 461, 462, 463, 465, 466, 468, 469, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 510, 513, 515, 516, 517, 518, 519, 520, 521, 523, 524, 526, 527, 528, 530, 533, 534, 535, 541, 542, 543, 545, 546, 547, 548, 549, 550, 555, 562, 563, 564, 566, 567, 569, 570, 571, 575, 576, 578, 579, 582, 598, 601, 604, 605, 608, 615, 620, 621, 623, 624, 626, 628, 629, 632, 635, 636, 637, 639, 645, 646, 647, 648, 649, 650, 651, 652, 657, 663, 666, 667, 668, 671, 674, 677, 678, 680, 681, 686, 687, 689, 690, 691, 692, 693, 694, 697, 700, 705, 706, 707, 709, 710, 716, 717, 718, 720, 721, 722, 723, 724, 725, 726, 733, 736, 738, 747, 751, 752, 754, 755, 756, 759, 762, 763, 766, 768, 769, 770, 772, 774, 776, 777, 779, 781, 783, 785, 787, 790, 791, 792, 793, 794, 796, 797, 798, 800, 801, 804, 811, 813, 814, 815, 816, 817, 818, 819, 821, 822, 823, 824, 825, 828, 853, 856, 871], "notch_filt": [1, 5, 79, 134, 165, 189, 200, 207, 255, 260, 261, 262, 263, 441, 470, 471, 472, 861, 871], "arang": [1, 4, 8, 9, 15, 19, 42, 44, 66, 79, 87, 89, 91, 92, 104, 109, 111, 117, 124, 164, 189, 192, 193, 199, 208, 217, 219, 222, 224, 225, 226, 227, 231, 232, 237, 261, 266, 273, 442, 459, 470, 471, 472, 488, 587, 682], "181": [1, 34, 123, 167, 189, 226, 227, 240, 655, 676], "fir_design": [1, 7, 8, 9, 11, 13, 14, 15, 16, 18, 74, 85, 96, 118, 130, 189, 199, 202, 237, 255, 260, 261, 262, 263, 405, 414, 439, 441, 442, 470, 471, 472, 871], "firwin": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 33, 41, 71, 74, 79, 80, 81, 85, 96, 110, 111, 112, 118, 130, 134, 139, 142, 144, 149, 189, 193, 199, 200, 201, 202, 207, 208, 227, 237, 255, 260, 261, 262, 263, 405, 414, 439, 441, 442, 470, 471, 472, 871], "event": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 27, 28, 32, 33, 41, 44, 45, 48, 60, 68, 69, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 85, 87, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 114, 118, 125, 129, 133, 134, 138, 139, 140, 141, 143, 144, 147, 150, 151, 152, 160, 163, 167, 171, 172, 175, 178, 180, 181, 182, 183, 186, 187, 189, 193, 196, 197, 198, 199, 200, 201, 202, 204, 206, 208, 211, 214, 215, 216, 217, 218, 219, 223, 224, 225, 226, 227, 230, 232, 235, 236, 237, 240, 252, 253, 254, 255, 260, 261, 262, 263, 265, 270, 279, 283, 309, 348, 349, 356, 357, 358, 387, 404, 419, 424, 426, 427, 432, 444, 445, 460, 470, 471, 472, 479, 486, 487, 488, 492, 494, 511, 515, 540, 541, 545, 547, 550, 551, 552, 553, 558, 562, 563, 566, 567, 570, 571, 572, 573, 574, 592, 602, 603, 604, 605, 635, 640, 669, 676, 690, 692, 693, 738, 739, 762, 768, 769, 771, 785, 791, 799, 807, 810, 816, 826, 846, 847, 850, 853, 856, 857, 861, 871], "find_ev": [1, 5, 7, 10, 32, 33, 41, 44, 45, 48, 69, 70, 71, 77, 81, 87, 90, 92, 96, 104, 105, 107, 110, 138, 139, 140, 147, 150, 160, 164, 166, 170, 175, 178, 180, 181, 183, 189, 193, 197, 200, 201, 202, 204, 212, 218, 219, 224, 235, 236, 265, 429, 445, 479, 486, 492, 511, 545, 592, 605, 826, 846, 853, 857, 861, 871], "stim_channel": [1, 5, 7, 41, 45, 77, 104, 105, 107, 110, 135, 138, 140, 147, 150, 164, 166, 175, 189, 197, 202, 204, 212, 224, 235, 236, 253, 341, 444, 445, 470, 471, 472, 479, 486, 492, 572, 871], "uppt001": [1, 7, 189], "pick": [1, 2, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 56, 57, 58, 59, 66, 67, 68, 70, 71, 72, 74, 76, 78, 79, 80, 83, 85, 87, 89, 91, 93, 94, 96, 97, 100, 101, 104, 105, 106, 107, 108, 109, 112, 114, 116, 117, 118, 124, 128, 129, 130, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 155, 156, 158, 160, 164, 167, 168, 170, 175, 176, 177, 178, 179, 180, 182, 189, 193, 196, 197, 198, 200, 201, 202, 204, 205, 207, 208, 211, 214, 217, 218, 219, 224, 225, 226, 227, 230, 232, 235, 236, 255, 257, 260, 261, 262, 263, 264, 265, 267, 268, 270, 271, 274, 275, 276, 283, 292, 293, 305, 308, 309, 312, 319, 322, 324, 354, 363, 405, 411, 419, 424, 428, 441, 442, 470, 471, 472, 541, 542, 543, 544, 547, 548, 549, 550, 552, 565, 566, 567, 572, 575, 584, 586, 593, 658, 676, 685, 690, 691, 692, 693, 694, 698, 699, 700, 701, 703, 706, 709, 710, 721, 722, 738, 752, 756, 760, 762, 768, 769, 772, 774, 775, 781, 782, 783, 785, 787, 789, 792, 794, 796, 801, 826, 830, 846, 853, 856, 857, 871], "pick_typ": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 26, 28, 31, 33, 34, 39, 44, 45, 48, 50, 57, 58, 66, 67, 69, 70, 72, 80, 85, 87, 89, 93, 94, 96, 97, 100, 101, 104, 105, 107, 108, 110, 116, 124, 130, 134, 138, 139, 147, 148, 164, 166, 167, 168, 170, 174, 179, 180, 193, 196, 197, 198, 200, 201, 202, 203, 204, 208, 211, 219, 224, 225, 226, 227, 230, 232, 236, 237, 255, 260, 261, 262, 263, 470, 471, 472, 541, 690, 692, 693, 694, 830, 853, 857, 861, 871], "info": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 72, 73, 77, 78, 79, 80, 81, 83, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 100, 101, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 118, 120, 121, 122, 124, 125, 130, 132, 133, 134, 135, 138, 140, 142, 144, 147, 148, 149, 153, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 188, 189, 193, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 213, 214, 218, 219, 223, 224, 225, 226, 227, 230, 232, 235, 236, 237, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 269, 270, 271, 273, 278, 280, 281, 292, 293, 294, 300, 301, 305, 306, 308, 312, 313, 314, 315, 319, 321, 322, 324, 335, 337, 339, 344, 349, 353, 354, 360, 363, 364, 365, 367, 403, 405, 410, 411, 412, 414, 419, 422, 424, 428, 433, 434, 435, 436, 439, 441, 442, 446, 447, 454, 455, 463, 466, 468, 469, 470, 471, 472, 473, 476, 478, 490, 506, 509, 512, 513, 514, 516, 518, 528, 541, 544, 546, 547, 548, 549, 550, 552, 554, 561, 565, 566, 567, 569, 572, 575, 578, 582, 583, 584, 586, 593, 596, 603, 607, 625, 626, 631, 632, 635, 637, 641, 642, 643, 644, 654, 655, 658, 676, 690, 691, 692, 693, 694, 698, 699, 700, 701, 703, 709, 710, 722, 733, 736, 738, 751, 754, 755, 758, 759, 762, 763, 764, 768, 769, 772, 773, 774, 775, 778, 780, 785, 787, 790, 791, 792, 794, 800, 808, 817, 826, 828, 830, 833, 835, 846, 847, 848, 850, 853, 859, 861, 871], "eeg": [1, 4, 5, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 58, 59, 61, 62, 63, 65, 66, 67, 70, 71, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 113, 114, 116, 117, 118, 119, 120, 121, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 147, 148, 150, 151, 152, 154, 155, 156, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 191, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 224, 225, 226, 227, 228, 229, 230, 232, 235, 236, 240, 252, 255, 257, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 292, 293, 295, 297, 300, 301, 305, 306, 307, 309, 311, 313, 314, 318, 319, 321, 322, 323, 324, 325, 326, 329, 330, 332, 348, 349, 350, 351, 352, 353, 354, 358, 359, 360, 363, 364, 365, 367, 382, 396, 397, 403, 405, 407, 410, 411, 412, 418, 419, 422, 424, 427, 432, 435, 436, 444, 446, 447, 460, 462, 466, 468, 469, 470, 471, 472, 477, 479, 481, 482, 483, 486, 487, 488, 489, 492, 494, 496, 497, 499, 506, 509, 513, 514, 516, 517, 518, 528, 529, 531, 532, 541, 547, 548, 549, 550, 551, 552, 555, 558, 559, 562, 563, 564, 565, 566, 567, 571, 572, 575, 577, 584, 586, 593, 597, 599, 601, 602, 604, 605, 608, 609, 610, 620, 623, 631, 632, 635, 639, 643, 650, 655, 658, 676, 677, 678, 680, 681, 685, 690, 692, 693, 694, 698, 699, 700, 701, 703, 709, 710, 721, 722, 730, 738, 754, 755, 758, 762, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 781, 782, 788, 789, 790, 791, 792, 793, 794, 798, 799, 800, 805, 806, 810, 826, 827, 837, 842, 845, 847, 850, 856, 857, 860, 861, 871], "stim": [1, 8, 9, 11, 14, 15, 16, 28, 41, 44, 45, 64, 67, 69, 70, 85, 87, 96, 97, 101, 104, 105, 107, 138, 139, 140, 147, 149, 164, 167, 170, 180, 186, 189, 193, 200, 201, 202, 211, 212, 219, 224, 225, 226, 236, 237, 252, 253, 255, 260, 261, 262, 263, 265, 270, 306, 344, 367, 436, 444, 445, 470, 471, 472, 479, 486, 492, 494, 547, 550, 572, 605, 640, 690, 692, 693, 694, 768, 791, 826, 853, 856, 857, 871], "exclud": [1, 5, 7, 8, 9, 11, 13, 14, 15, 16, 24, 26, 28, 31, 33, 34, 39, 40, 42, 44, 48, 49, 50, 57, 58, 63, 66, 67, 68, 69, 72, 76, 80, 83, 85, 89, 93, 94, 97, 101, 104, 105, 106, 107, 108, 109, 130, 140, 142, 148, 154, 155, 156, 164, 167, 170, 174, 175, 179, 180, 181, 182, 183, 189, 193, 196, 197, 198, 200, 202, 203, 205, 214, 219, 224, 225, 226, 230, 232, 237, 252, 255, 257, 258, 259, 260, 261, 262, 263, 267, 268, 270, 271, 273, 274, 275, 276, 300, 301, 314, 321, 354, 360, 363, 365, 411, 422, 470, 471, 472, 479, 486, 488, 492, 514, 541, 542, 543, 545, 547, 548, 549, 550, 551, 562, 563, 564, 569, 578, 593, 605, 610, 631, 635, 639, 677, 678, 680, 681, 690, 692, 693, 694, 698, 699, 700, 701, 706, 709, 710, 763, 772, 774, 775, 776, 782, 784, 785, 792, 846, 856, 857, 871], "bad": [1, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 27, 28, 31, 32, 33, 34, 39, 40, 41, 44, 45, 48, 50, 57, 58, 63, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 82, 85, 87, 89, 90, 93, 94, 97, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 114, 118, 124, 125, 133, 134, 135, 138, 139, 140, 142, 143, 144, 147, 148, 149, 150, 160, 163, 164, 165, 166, 167, 168, 170, 174, 175, 178, 179, 180, 181, 182, 183, 189, 193, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 224, 225, 226, 227, 236, 237, 252, 254, 255, 257, 260, 261, 262, 263, 265, 293, 305, 308, 309, 314, 321, 324, 354, 358, 363, 364, 365, 405, 419, 424, 432, 441, 442, 444, 460, 470, 471, 472, 510, 528, 542, 543, 544, 547, 548, 549, 550, 552, 553, 554, 557, 562, 563, 565, 566, 567, 568, 569, 570, 571, 572, 578, 579, 584, 586, 593, 605, 608, 631, 635, 658, 676, 690, 692, 693, 694, 698, 699, 700, 701, 703, 709, 710, 722, 762, 763, 768, 769, 772, 774, 775, 776, 783, 787, 791, 792, 810, 826, 837, 848, 850, 856, 871], "epoch": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 27, 32, 33, 35, 44, 45, 48, 55, 58, 60, 67, 68, 69, 70, 71, 76, 77, 80, 81, 85, 87, 89, 90, 92, 93, 94, 96, 97, 98, 100, 102, 103, 104, 105, 106, 107, 109, 110, 118, 119, 125, 127, 129, 133, 134, 139, 146, 148, 160, 165, 166, 167, 168, 175, 177, 178, 179, 180, 181, 182, 183, 186, 189, 192, 193, 196, 197, 200, 203, 204, 207, 212, 213, 218, 219, 223, 224, 225, 226, 235, 236, 237, 247, 252, 253, 254, 255, 258, 259, 261, 262, 263, 265, 266, 267, 268, 270, 271, 274, 275, 276, 277, 287, 290, 308, 309, 312, 348, 349, 350, 352, 353, 354, 356, 388, 403, 405, 408, 409, 410, 411, 412, 415, 416, 417, 418, 419, 428, 429, 432, 433, 444, 462, 468, 470, 471, 472, 477, 504, 509, 510, 515, 516, 517, 518, 519, 520, 521, 523, 524, 531, 533, 534, 545, 547, 549, 550, 551, 552, 558, 559, 562, 563, 566, 567, 568, 572, 577, 578, 593, 601, 602, 603, 604, 605, 612, 616, 632, 635, 644, 654, 675, 676, 690, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 707, 709, 710, 718, 719, 720, 721, 722, 723, 738, 762, 767, 768, 769, 770, 781, 782, 783, 785, 789, 791, 792, 799, 826, 830, 847, 848, 850, 856, 857, 859, 861, 871], "baselin": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 28, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 53, 54, 56, 57, 58, 59, 60, 67, 69, 70, 71, 72, 73, 76, 77, 80, 81, 83, 84, 85, 87, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 104, 105, 106, 107, 109, 110, 111, 113, 114, 116, 117, 118, 121, 124, 125, 129, 133, 134, 135, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 158, 160, 163, 164, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 189, 193, 196, 197, 198, 200, 201, 202, 204, 208, 217, 219, 223, 224, 225, 226, 227, 230, 232, 236, 237, 240, 252, 255, 260, 261, 262, 263, 267, 268, 270, 271, 274, 275, 276, 348, 349, 354, 374, 444, 470, 471, 472, 510, 515, 533, 534, 550, 566, 567, 585, 601, 608, 609, 675, 690, 693, 762, 778, 782, 795, 798, 817, 826, 846, 850, 853, 856, 861, 865, 871], "none": [1, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 67, 68, 69, 71, 74, 76, 78, 79, 80, 81, 83, 84, 85, 87, 90, 91, 93, 94, 96, 97, 100, 101, 104, 106, 107, 109, 110, 111, 114, 116, 117, 118, 121, 124, 129, 132, 133, 134, 135, 139, 140, 141, 142, 143, 147, 148, 149, 150, 156, 157, 158, 159, 160, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 189, 192, 193, 199, 200, 201, 202, 204, 205, 207, 208, 213, 217, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 236, 237, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 311, 312, 313, 314, 316, 320, 321, 322, 323, 324, 325, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 454, 455, 456, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 543, 545, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 578, 579, 581, 582, 584, 585, 586, 587, 590, 591, 592, 593, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 669, 675, 676, 677, 678, 679, 680, 681, 682, 685, 686, 687, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 707, 708, 709, 710, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 730, 733, 737, 738, 741, 743, 746, 747, 748, 750, 751, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 806, 807, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 830, 846, 852, 853, 871], "preload": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 32, 33, 41, 48, 68, 69, 70, 71, 78, 79, 80, 81, 85, 96, 100, 104, 107, 109, 110, 111, 114, 118, 126, 130, 138, 139, 140, 142, 143, 144, 147, 149, 150, 157, 164, 165, 168, 170, 178, 180, 181, 182, 183, 186, 189, 193, 196, 198, 201, 202, 203, 204, 208, 211, 218, 219, 224, 225, 226, 227, 230, 232, 235, 236, 237, 252, 255, 260, 261, 262, 263, 270, 342, 358, 470, 471, 472, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 510, 562, 563, 566, 567, 601, 603, 607, 632, 635, 690, 692, 693, 694, 768, 791, 846, 847, 871], "physiolog": [1, 8, 41, 135, 200, 202, 205, 240, 255, 260, 261, 262, 263, 374, 396, 397, 470, 471, 472, 635, 847, 871], "artifact": [1, 7, 27, 41, 68, 75, 80, 81, 82, 106, 107, 140, 142, 144, 147, 163, 164, 170, 181, 189, 198, 199, 203, 205, 207, 208, 209, 210, 213, 214, 240, 254, 255, 258, 259, 260, 261, 262, 263, 265, 267, 268, 270, 271, 274, 275, 276, 339, 340, 350, 351, 352, 353, 354, 358, 405, 409, 416, 444, 469, 470, 471, 472, 484, 486, 498, 541, 544, 547, 549, 550, 554, 555, 557, 562, 563, 564, 566, 567, 570, 571, 572, 574, 578, 581, 585, 593, 642, 643, 690, 693, 716, 718, 719, 721, 722, 754, 780, 782, 789, 790, 791, 806, 810, 847, 850, 853, 859, 860, 871], "eyeblink": [1, 563, 567], "heartbeat": [1, 80, 140, 144, 198, 202, 203, 204, 205, 207, 213, 562, 566, 570, 573], "usssp": [1, 11, 15, 18, 27, 28, 29, 30, 31, 34, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 53, 54, 56, 57, 58, 59, 60, 66, 67, 69, 71, 81, 85, 87, 89, 90, 91, 92, 101, 104, 105, 106, 107, 118, 119, 127, 129, 138, 139, 140, 143, 144, 147, 149, 150, 160, 163, 164, 170, 174, 175, 176, 177, 178, 179, 180, 181, 189, 196, 197, 198, 200, 201, 202, 205, 207, 209, 210, 211, 214, 218, 227, 230, 232, 255, 257, 260, 261, 262, 263, 264, 265, 269, 270, 271, 350, 351, 352, 444, 470, 471, 472, 510, 544, 547, 549, 562, 563, 566, 567, 593, 601, 610, 616, 631, 692, 694, 709, 710, 770, 772, 774, 776, 777, 789, 790, 792, 810, 826, 850, 856, 859, 860, 871], "add_proj": [1, 2, 4, 5, 41, 89, 98, 106, 108, 138, 140, 144, 147, 160, 170, 182, 183, 189, 193, 196, 201, 203, 204, 208, 211, 223, 255, 260, 261, 262, 263, 270, 470, 471, 472, 654], "compute_proj_evok": [1, 203, 350, 352, 861], "copi": [1, 2, 4, 5, 8, 9, 10, 12, 18, 19, 22, 27, 37, 44, 45, 46, 47, 48, 53, 57, 60, 68, 71, 72, 76, 81, 104, 106, 111, 116, 124, 132, 134, 138, 139, 142, 147, 148, 149, 153, 159, 160, 164, 166, 167, 170, 174, 176, 183, 196, 197, 199, 200, 201, 202, 203, 204, 205, 207, 211, 213, 219, 223, 226, 252, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 283, 284, 297, 302, 304, 307, 312, 359, 364, 366, 371, 372, 373, 374, 376, 377, 379, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 412, 425, 428, 441, 442, 470, 471, 472, 516, 530, 542, 543, 546, 549, 550, 559, 562, 563, 568, 572, 575, 579, 593, 602, 629, 632, 635, 687, 690, 691, 692, 693, 694, 696, 698, 699, 700, 701, 702, 706, 725, 726, 830, 838, 848, 850, 853, 856, 857, 871], "apply_proj": [1, 69, 91, 140, 144, 147, 157, 165, 180, 203, 204, 205, 255, 260, 261, 262, 263, 433, 434, 435, 436, 470, 471, 472, 635, 791, 871], "fix": [1, 5, 22, 31, 39, 40, 44, 46, 47, 48, 53, 54, 57, 59, 77, 87, 97, 132, 138, 140, 156, 161, 162, 163, 166, 168, 174, 178, 193, 208, 218, 240, 253, 258, 259, 262, 263, 264, 271, 292, 293, 303, 315, 349, 356, 359, 416, 444, 446, 448, 462, 466, 468, 469, 471, 507, 511, 513, 517, 518, 519, 520, 521, 528, 529, 532, 533, 534, 550, 554, 558, 576, 598, 610, 621, 631, 696, 699, 705, 717, 718, 719, 754, 773, 818, 819, 824, 828, 830, 835, 849, 850, 853, 856, 871], "preprocess": [1, 4, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 66, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 85, 96, 109, 132, 135, 142, 144, 170, 182, 189, 192, 193, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 210, 214, 254, 255, 260, 261, 262, 263, 265, 270, 348, 403, 407, 410, 412, 424, 432, 470, 471, 472, 490, 498, 547, 603, 738, 758, 762, 768, 771, 776, 780, 781, 782, 783, 784, 785, 791, 826, 837, 847, 848, 850, 853, 857, 859, 861, 871], "fix_stim_artifact": [1, 861, 871], "correct": [1, 4, 8, 9, 11, 12, 16, 18, 21, 27, 28, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 53, 54, 56, 57, 58, 59, 60, 67, 69, 70, 71, 72, 75, 76, 77, 80, 82, 83, 84, 85, 87, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 109, 110, 111, 113, 114, 116, 117, 118, 124, 125, 128, 129, 133, 134, 135, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 154, 157, 158, 159, 160, 163, 164, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 188, 189, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 217, 218, 219, 223, 224, 225, 226, 227, 230, 231, 232, 236, 237, 240, 252, 254, 255, 257, 260, 261, 262, 263, 265, 267, 268, 269, 270, 271, 274, 275, 276, 283, 304, 315, 348, 349, 354, 360, 409, 415, 422, 424, 442, 444, 453, 470, 471, 472, 477, 479, 483, 486, 498, 499, 515, 518, 533, 534, 547, 549, 550, 551, 560, 561, 566, 567, 569, 578, 581, 585, 592, 598, 605, 608, 609, 627, 629, 645, 646, 647, 648, 649, 650, 651, 652, 668, 671, 674, 675, 676, 677, 678, 679, 690, 692, 693, 694, 708, 710, 762, 769, 770, 776, 777, 782, 790, 792, 793, 795, 798, 817, 819, 826, 828, 830, 835, 846, 849, 850, 853, 865, 868, 871], "delai": [1, 4, 19, 189, 192, 203, 204, 208, 240, 253, 255, 260, 261, 262, 263, 409, 415, 420, 439, 441, 442, 470, 471, 472, 510, 601, 779, 847, 871], "due": [1, 5, 39, 42, 46, 78, 132, 166, 187, 188, 196, 198, 199, 203, 207, 208, 211, 214, 218, 237, 255, 256, 260, 261, 262, 263, 264, 266, 396, 402, 409, 420, 424, 437, 468, 469, 470, 471, 472, 560, 561, 569, 575, 578, 592, 612, 618, 693, 738, 820, 826, 846, 850, 853, 871], "hardwar": [1, 164, 188, 198, 205, 253, 255, 260, 261, 265, 369, 396, 470, 471, 472, 550, 768, 785, 791, 826, 836, 853, 856, 871], "i": [1, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 21, 22, 26, 27, 28, 31, 33, 37, 39, 40, 41, 42, 43, 44, 45, 46, 49, 51, 53, 58, 59, 62, 64, 67, 68, 69, 70, 71, 72, 73, 76, 78, 79, 80, 84, 85, 87, 91, 92, 93, 94, 96, 97, 98, 100, 101, 104, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 120, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 163, 164, 165, 167, 169, 170, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 192, 193, 196, 197, 198, 199, 200, 201, 205, 206, 207, 208, 211, 212, 213, 214, 217, 218, 219, 222, 223, 224, 226, 227, 230, 231, 232, 235, 236, 237, 240, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 291, 292, 293, 295, 297, 299, 301, 302, 303, 307, 309, 312, 313, 315, 317, 318, 319, 320, 322, 324, 325, 326, 332, 334, 336, 337, 338, 342, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 362, 363, 364, 365, 366, 367, 369, 371, 372, 373, 374, 376, 377, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 427, 428, 429, 430, 432, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 459, 460, 461, 462, 463, 466, 468, 469, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 507, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 532, 533, 534, 536, 537, 539, 540, 541, 545, 546, 547, 549, 550, 551, 552, 553, 554, 555, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 582, 583, 585, 586, 587, 592, 593, 595, 596, 598, 601, 602, 603, 604, 605, 606, 607, 608, 609, 612, 613, 615, 618, 621, 624, 627, 628, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 660, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 702, 703, 705, 707, 708, 709, 710, 714, 716, 717, 718, 719, 720, 721, 722, 723, 724, 726, 728, 732, 733, 734, 736, 737, 738, 739, 741, 743, 746, 747, 748, 750, 751, 754, 755, 756, 759, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 811, 816, 817, 819, 821, 824, 826, 829, 830, 831, 833, 835, 838, 841, 842, 844, 846, 847, 848, 849, 851, 852, 854, 855, 856, 857, 858, 859, 861, 871], "4": [1, 2, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 26, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 124, 127, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 162, 164, 166, 167, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 187, 189, 192, 193, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 211, 212, 213, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 237, 240, 252, 255, 257, 258, 259, 260, 261, 262, 263, 265, 267, 268, 269, 270, 271, 274, 275, 276, 292, 293, 300, 301, 307, 308, 309, 330, 349, 374, 382, 403, 409, 410, 411, 416, 422, 426, 427, 438, 444, 446, 461, 468, 469, 470, 471, 472, 507, 517, 524, 549, 550, 555, 557, 559, 562, 564, 571, 577, 587, 593, 612, 631, 635, 639, 643, 650, 670, 671, 674, 678, 689, 690, 692, 693, 694, 709, 714, 719, 720, 722, 723, 726, 727, 728, 738, 741, 753, 754, 755, 757, 762, 768, 769, 770, 772, 774, 777, 778, 781, 788, 790, 791, 792, 793, 794, 796, 798, 800, 801, 802, 811, 828, 829, 835, 836, 846, 847, 850, 853, 856], "m": [1, 2, 4, 5, 8, 16, 18, 19, 22, 24, 26, 27, 28, 29, 30, 31, 32, 34, 37, 38, 39, 40, 43, 44, 45, 47, 49, 50, 52, 53, 54, 56, 57, 58, 59, 67, 69, 70, 71, 76, 83, 84, 93, 94, 95, 96, 97, 98, 100, 102, 106, 107, 110, 111, 113, 116, 117, 120, 123, 124, 132, 133, 135, 138, 139, 141, 142, 143, 147, 148, 149, 154, 155, 156, 157, 159, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 189, 192, 197, 198, 199, 202, 204, 206, 207, 212, 213, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 240, 252, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 267, 268, 269, 271, 274, 275, 276, 295, 299, 300, 320, 325, 330, 332, 334, 336, 338, 339, 340, 342, 349, 354, 360, 367, 374, 381, 396, 397, 403, 405, 407, 409, 410, 411, 414, 424, 427, 439, 441, 442, 446, 464, 465, 468, 469, 470, 471, 472, 474, 506, 514, 517, 525, 528, 532, 549, 550, 552, 558, 559, 561, 564, 566, 567, 569, 576, 578, 583, 586, 639, 643, 647, 650, 652, 655, 660, 661, 662, 664, 665, 671, 676, 677, 678, 680, 681, 685, 690, 692, 693, 694, 720, 723, 738, 741, 755, 762, 770, 772, 773, 774, 777, 778, 781, 790, 791, 793, 796, 798, 800, 801, 802, 806, 808, 826, 830, 837, 845, 847, 853, 856, 857, 871], "shift_tim": [1, 83, 138, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 690, 693, 871], "004": [1, 10, 32, 43, 118, 125, 138, 140, 143, 147, 164, 167, 174, 201, 219, 240, 272, 355, 514], "result": [1, 8, 9, 26, 29, 30, 44, 45, 54, 57, 59, 68, 77, 80, 87, 96, 98, 100, 104, 111, 123, 124, 131, 132, 134, 135, 142, 144, 147, 149, 153, 154, 155, 157, 158, 160, 164, 165, 168, 170, 174, 176, 186, 192, 193, 196, 199, 201, 202, 203, 204, 206, 211, 212, 214, 217, 219, 222, 223, 226, 227, 230, 231, 232, 240, 252, 254, 255, 260, 261, 262, 263, 265, 267, 268, 271, 272, 274, 275, 276, 285, 287, 309, 312, 348, 349, 354, 356, 358, 381, 383, 402, 404, 405, 419, 428, 437, 443, 461, 466, 468, 469, 470, 471, 472, 488, 503, 510, 514, 517, 519, 520, 521, 523, 528, 529, 536, 550, 555, 561, 566, 567, 569, 576, 578, 595, 601, 609, 632, 642, 643, 644, 653, 654, 656, 675, 676, 677, 678, 679, 680, 681, 682, 690, 692, 693, 694, 738, 746, 762, 768, 769, 791, 830, 835, 846, 847, 850, 853, 856, 871], "time_unit": [1, 11, 14, 34, 39, 41, 42, 50, 58, 60, 67, 69, 83, 89, 90, 96, 97, 98, 118, 148, 149, 150, 160, 173, 175, 176, 181, 182, 183, 189, 193, 218, 223, 224, 225, 259, 262, 263, 267, 268, 271, 274, 275, 276, 762, 772, 774, 777, 778, 796, 801, 871], "": [1, 4, 7, 8, 10, 11, 12, 13, 14, 16, 18, 19, 21, 24, 26, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 50, 51, 52, 54, 57, 58, 60, 62, 67, 68, 69, 70, 71, 72, 73, 74, 78, 79, 83, 84, 89, 90, 93, 96, 97, 98, 100, 101, 104, 105, 106, 107, 109, 110, 112, 113, 116, 117, 118, 120, 122, 123, 124, 126, 130, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 148, 149, 150, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 188, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 217, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 237, 240, 251, 252, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 284, 286, 292, 293, 297, 298, 299, 316, 323, 348, 349, 353, 355, 361, 362, 378, 379, 381, 396, 397, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 424, 427, 433, 434, 435, 436, 437, 439, 441, 442, 443, 462, 465, 468, 469, 470, 471, 472, 476, 479, 486, 488, 492, 493, 501, 505, 509, 512, 514, 516, 517, 528, 532, 533, 534, 549, 550, 551, 561, 567, 568, 571, 572, 577, 578, 582, 585, 608, 609, 618, 620, 621, 622, 623, 627, 628, 630, 632, 635, 636, 638, 639, 640, 647, 650, 652, 667, 676, 677, 678, 679, 680, 681, 685, 686, 688, 690, 691, 692, 693, 694, 702, 707, 708, 709, 710, 715, 720, 722, 723, 726, 730, 737, 738, 746, 747, 755, 756, 762, 764, 766, 768, 769, 772, 774, 775, 777, 778, 781, 785, 791, 793, 794, 796, 798, 799, 800, 801, 802, 806, 820, 821, 826, 828, 830, 834, 836, 842, 845, 846, 847, 848, 850, 852, 853, 855, 856, 857, 858, 859], "topomap": [1, 19, 41, 71, 80, 84, 116, 140, 149, 168, 201, 204, 227, 236, 255, 257, 260, 261, 262, 263, 269, 270, 307, 403, 410, 470, 471, 472, 549, 550, 564, 690, 692, 694, 755, 768, 770, 772, 775, 777, 781, 788, 789, 790, 791, 792, 793, 794, 798, 800, 826, 871], "plot_topomap": [1, 15, 16, 18, 19, 21, 41, 68, 69, 77, 84, 97, 106, 139, 140, 142, 148, 149, 164, 168, 174, 175, 189, 196, 204, 208, 214, 227, 235, 236, 237, 255, 257, 260, 261, 262, 263, 269, 470, 471, 472, 550, 690, 692, 694, 758, 770, 775, 781, 783, 861, 871], "time": [1, 2, 4, 5, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 62, 63, 64, 66, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 87, 89, 90, 92, 93, 94, 96, 97, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 135, 139, 141, 144, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 186, 188, 189, 192, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 212, 213, 214, 217, 218, 219, 222, 223, 226, 230, 231, 232, 235, 240, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 283, 285, 286, 287, 288, 291, 336, 337, 338, 339, 340, 341, 342, 343, 345, 348, 349, 352, 354, 355, 356, 358, 367, 396, 403, 404, 405, 406, 409, 410, 412, 413, 414, 415, 416, 417, 419, 426, 427, 429, 431, 432, 437, 439, 441, 442, 444, 445, 446, 456, 461, 466, 467, 468, 469, 470, 471, 472, 484, 486, 491, 498, 503, 505, 511, 512, 516, 517, 518, 520, 521, 523, 524, 525, 528, 529, 531, 533, 534, 541, 545, 547, 549, 550, 552, 553, 554, 555, 558, 559, 560, 562, 563, 564, 566, 567, 568, 569, 571, 572, 576, 586, 592, 595, 599, 600, 604, 605, 608, 609, 610, 612, 618, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 664, 665, 666, 670, 675, 676, 677, 678, 679, 680, 681, 682, 683, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 703, 705, 708, 709, 710, 716, 717, 718, 719, 720, 721, 722, 723, 737, 738, 742, 752, 755, 761, 762, 765, 766, 768, 769, 770, 771, 772, 773, 774, 775, 777, 778, 779, 780, 782, 785, 789, 790, 791, 792, 793, 796, 797, 798, 799, 800, 801, 802, 816, 826, 828, 829, 834, 836, 837, 842, 846, 847, 848, 850, 852, 853, 856, 857, 861, 871], "arraidirectori": [1, 12, 21, 32, 33, 78, 79, 91, 92, 113, 116, 120, 153, 154, 159, 164, 169, 170, 182, 189, 252, 258, 265, 266, 267, 270, 271, 274, 275, 276, 298, 302, 303, 304, 307, 355, 360, 361, 362, 366, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 422, 453, 455, 459, 461, 462, 463, 464, 465, 478, 484, 496, 499, 503, 507, 509, 536, 575, 595, 609, 613, 615, 622, 628, 629, 630, 633, 638, 639, 653, 656, 667, 685, 686, 730, 738, 754, 756, 766, 796, 802, 811, 821, 830, 833, 836, 846, 850, 871], "home": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 135, 138, 139, 141, 142, 144, 147, 148, 149, 150, 153, 154, 155, 156, 157, 160, 164, 165, 166, 167, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 188, 189, 193, 196, 200, 201, 202, 203, 204, 206, 207, 208, 211, 214, 218, 219, 223, 224, 225, 226, 227, 230, 232, 236, 255, 260, 261, 366, 374, 470, 471, 472, 768, 791, 829, 835, 871], "circleci": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 135, 138, 139, 141, 142, 144, 147, 148, 149, 150, 154, 155, 156, 157, 160, 164, 165, 166, 167, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 188, 189, 193, 196, 200, 201, 202, 203, 204, 206, 207, 208, 211, 214, 218, 219, 223, 224, 225, 226, 227, 230, 232, 236, 830], "mne_data": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 66, 67, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 124, 125, 126, 128, 129, 130, 132, 133, 135, 139, 141, 142, 144, 147, 148, 149, 150, 154, 155, 156, 157, 160, 164, 165, 166, 167, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 188, 189, 193, 196, 200, 201, 202, 203, 204, 206, 207, 208, 211, 214, 218, 219, 223, 224, 225, 226, 227, 230, 232, 236, 371, 372, 373, 374, 376, 377, 379, 380, 384, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 830, 850, 871], "data": [1, 2, 3, 6, 9, 10, 12, 14, 16, 17, 20, 22, 24, 26, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 67, 68, 70, 72, 74, 75, 76, 79, 80, 81, 82, 84, 85, 88, 95, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 114, 115, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 136, 137, 141, 142, 143, 146, 149, 151, 152, 153, 154, 155, 156, 158, 159, 160, 168, 169, 171, 172, 174, 177, 179, 180, 181, 182, 183, 184, 185, 191, 193, 194, 195, 196, 197, 199, 202, 203, 204, 205, 206, 207, 209, 210, 216, 220, 221, 222, 224, 225, 229, 233, 234, 236, 238, 239, 240, 247, 251, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 297, 298, 304, 305, 306, 307, 308, 309, 311, 313, 315, 319, 321, 322, 323, 324, 325, 330, 332, 333, 334, 336, 338, 340, 341, 342, 343, 344, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 361, 363, 364, 365, 367, 371, 372, 373, 374, 375, 376, 377, 379, 380, 382, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 426, 427, 429, 430, 431, 432, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 455, 460, 462, 466, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 506, 507, 508, 509, 510, 511, 512, 513, 516, 517, 518, 519, 520, 523, 524, 525, 528, 531, 532, 533, 534, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 586, 587, 593, 596, 597, 599, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 612, 613, 616, 618, 620, 622, 623, 632, 635, 638, 639, 640, 641, 642, 643, 644, 646, 648, 649, 650, 654, 656, 658, 662, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 685, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 703, 707, 708, 709, 710, 718, 719, 720, 721, 722, 723, 727, 732, 733, 738, 742, 746, 751, 753, 754, 755, 756, 757, 759, 760, 762, 763, 765, 766, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 785, 789, 790, 791, 792, 793, 795, 796, 797, 798, 799, 800, 801, 802, 803, 805, 806, 808, 810, 817, 824, 825, 826, 827, 830, 831, 837, 842, 845, 848, 851, 852, 857, 858, 859, 861, 866, 871], "res4": [1, 12, 21, 78, 79, 116, 120, 182, 189], "read": [1, 2, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 44, 45, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 138, 139, 140, 141, 142, 144, 147, 149, 150, 154, 155, 156, 157, 158, 159, 160, 164, 165, 167, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 188, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 214, 217, 218, 219, 223, 224, 225, 226, 231, 236, 252, 253, 254, 255, 257, 260, 261, 262, 263, 265, 271, 273, 292, 293, 296, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 346, 349, 353, 354, 363, 364, 365, 367, 403, 410, 411, 435, 444, 445, 446, 447, 451, 453, 456, 462, 466, 468, 469, 470, 471, 472, 475, 476, 477, 478, 479, 483, 484, 485, 486, 487, 488, 490, 491, 492, 494, 495, 496, 500, 501, 516, 528, 530, 531, 539, 552, 572, 588, 589, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 623, 624, 625, 627, 628, 630, 637, 643, 691, 711, 713, 730, 746, 754, 778, 806, 817, 818, 826, 830, 833, 838, 846, 848, 853, 854, 857, 859, 861, 871], "hc": [1, 12, 21, 78, 79, 116, 120, 182, 189], "separ": [1, 10, 12, 16, 21, 32, 44, 46, 68, 72, 78, 79, 80, 91, 116, 120, 133, 138, 139, 140, 143, 144, 147, 148, 149, 153, 154, 158, 159, 160, 163, 166, 173, 182, 187, 189, 193, 196, 199, 201, 202, 203, 204, 206, 209, 210, 211, 212, 213, 230, 232, 235, 240, 242, 252, 254, 255, 260, 261, 262, 263, 265, 269, 270, 292, 293, 319, 337, 339, 340, 342, 343, 346, 350, 351, 352, 357, 365, 379, 386, 403, 424, 436, 466, 470, 471, 472, 487, 493, 509, 511, 550, 560, 561, 562, 563, 566, 569, 576, 578, 592, 602, 609, 639, 645, 646, 647, 648, 649, 650, 651, 652, 677, 678, 680, 681, 692, 693, 694, 695, 696, 697, 721, 722, 728, 738, 743, 761, 762, 768, 769, 770, 777, 778, 780, 783, 785, 790, 791, 792, 826, 828, 830, 834, 846, 847, 848, 850, 853, 856, 859, 871], "posit": [1, 4, 12, 19, 21, 24, 27, 37, 38, 40, 44, 68, 73, 76, 77, 79, 80, 87, 90, 91, 92, 98, 109, 116, 119, 120, 124, 127, 132, 133, 134, 148, 149, 154, 156, 157, 158, 168, 173, 174, 176, 181, 182, 183, 186, 188, 189, 196, 197, 201, 203, 207, 219, 222, 226, 230, 237, 240, 252, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 286, 299, 301, 307, 308, 309, 320, 323, 325, 327, 330, 333, 337, 339, 340, 345, 346, 347, 349, 361, 375, 383, 403, 409, 410, 415, 422, 423, 424, 431, 445, 446, 455, 462, 470, 471, 472, 484, 491, 493, 494, 500, 512, 549, 550, 554, 555, 557, 564, 569, 571, 576, 578, 600, 639, 641, 642, 643, 647, 648, 649, 650, 651, 652, 653, 655, 658, 659, 674, 690, 692, 693, 694, 704, 714, 715, 738, 739, 743, 751, 754, 755, 757, 762, 768, 769, 770, 773, 775, 776, 777, 780, 781, 787, 790, 791, 793, 794, 796, 798, 799, 800, 802, 806, 808, 826, 830, 846, 847, 853, 856, 860, 871], "file": [1, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 39, 40, 41, 42, 43, 44, 45, 48, 55, 58, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 74, 77, 78, 79, 80, 81, 82, 85, 88, 89, 90, 91, 93, 94, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 115, 116, 117, 118, 120, 124, 125, 126, 127, 129, 130, 132, 133, 135, 137, 138, 139, 140, 142, 143, 144, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 162, 164, 165, 166, 167, 169, 172, 175, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 191, 193, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 214, 216, 218, 219, 221, 224, 225, 226, 227, 229, 230, 232, 234, 236, 239, 247, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 284, 296, 298, 299, 302, 303, 304, 307, 308, 313, 315, 316, 319, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 339, 352, 357, 358, 360, 361, 362, 366, 374, 378, 379, 380, 381, 387, 396, 397, 422, 424, 432, 433, 434, 435, 436, 444, 445, 451, 452, 453, 455, 456, 460, 462, 463, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 509, 510, 512, 513, 523, 530, 531, 535, 539, 540, 549, 550, 560, 561, 562, 563, 569, 575, 578, 588, 589, 590, 591, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 633, 634, 636, 639, 641, 642, 643, 655, 658, 667, 685, 688, 689, 690, 691, 692, 693, 694, 711, 712, 713, 724, 726, 732, 738, 746, 754, 756, 791, 802, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 828, 829, 830, 835, 836, 837, 842, 847, 857, 861, 871], "present": [1, 4, 10, 12, 13, 16, 21, 31, 39, 42, 43, 67, 79, 113, 116, 120, 123, 131, 134, 138, 140, 142, 147, 148, 156, 164, 166, 167, 168, 178, 186, 187, 189, 196, 197, 201, 203, 204, 205, 207, 212, 214, 222, 226, 230, 231, 232, 240, 252, 253, 255, 257, 260, 261, 262, 263, 265, 267, 268, 269, 270, 271, 273, 274, 275, 276, 279, 280, 281, 284, 292, 293, 297, 302, 307, 313, 315, 324, 329, 338, 342, 349, 353, 354, 355, 363, 364, 365, 385, 403, 410, 422, 424, 427, 432, 444, 445, 446, 447, 451, 466, 468, 469, 470, 471, 472, 479, 482, 486, 492, 509, 516, 528, 547, 549, 550, 552, 553, 560, 561, 564, 566, 570, 578, 586, 605, 606, 654, 659, 675, 690, 692, 693, 694, 709, 710, 726, 738, 754, 755, 761, 762, 768, 770, 772, 774, 777, 778, 781, 788, 790, 791, 792, 793, 794, 797, 798, 800, 826, 836, 846, 847, 853, 856, 871], "quaternion": [1, 12, 21, 78, 79, 116, 120, 182, 189, 345, 346, 347, 554, 557, 729, 731, 780, 871], "match": [1, 4, 8, 9, 11, 12, 17, 18, 20, 21, 27, 28, 31, 32, 33, 39, 40, 44, 45, 46, 48, 50, 57, 58, 60, 67, 69, 70, 71, 72, 77, 78, 79, 80, 85, 87, 90, 91, 92, 93, 94, 97, 98, 100, 101, 104, 105, 106, 107, 109, 110, 111, 114, 116, 118, 120, 125, 129, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 147, 149, 150, 155, 159, 160, 164, 167, 170, 175, 178, 180, 181, 182, 183, 189, 192, 196, 197, 198, 200, 201, 204, 208, 211, 212, 213, 217, 218, 219, 223, 224, 225, 226, 227, 230, 232, 236, 253, 255, 257, 260, 261, 262, 263, 265, 267, 268, 269, 270, 271, 274, 275, 276, 312, 324, 349, 353, 360, 363, 364, 404, 409, 411, 413, 419, 424, 427, 428, 430, 432, 434, 435, 437, 453, 470, 471, 472, 479, 486, 492, 536, 539, 542, 547, 549, 550, 559, 560, 564, 569, 579, 592, 602, 604, 605, 625, 628, 640, 655, 676, 681, 685, 690, 691, 692, 693, 694, 706, 728, 762, 768, 769, 770, 774, 777, 778, 784, 790, 791, 792, 793, 817, 830, 834, 853, 871], "desir": [1, 5, 11, 12, 21, 22, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 56, 57, 58, 59, 66, 68, 78, 79, 87, 89, 90, 91, 92, 98, 101, 104, 105, 107, 109, 116, 120, 121, 124, 128, 140, 144, 149, 155, 159, 164, 166, 168, 170, 175, 176, 177, 178, 179, 182, 186, 187, 189, 192, 193, 197, 198, 199, 200, 203, 212, 218, 219, 230, 232, 253, 255, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 355, 402, 427, 438, 470, 471, 472, 511, 528, 549, 572, 587, 635, 690, 692, 693, 694, 722, 725, 738, 801, 836, 846, 848, 850, 856, 871], "v": [1, 4, 8, 9, 12, 13, 21, 24, 27, 28, 42, 53, 54, 62, 64, 68, 73, 78, 79, 102, 103, 116, 120, 124, 129, 135, 139, 169, 170, 176, 182, 189, 192, 196, 199, 203, 223, 226, 227, 232, 235, 240, 252, 255, 257, 258, 259, 260, 261, 262, 263, 265, 267, 268, 269, 271, 274, 275, 276, 279, 283, 284, 297, 315, 339, 354, 367, 374, 409, 410, 411, 424, 470, 471, 472, 516, 525, 550, 558, 561, 566, 567, 569, 578, 585, 676, 690, 692, 693, 694, 702, 707, 709, 718, 721, 722, 723, 726, 742, 826, 830, 834, 846, 853, 856, 871], "transform": [1, 5, 7, 8, 11, 12, 14, 16, 19, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 66, 72, 75, 78, 79, 80, 82, 85, 87, 89, 90, 91, 92, 100, 101, 104, 105, 106, 107, 109, 110, 112, 116, 120, 121, 122, 124, 128, 132, 133, 143, 148, 153, 155, 156, 157, 164, 165, 167, 168, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 189, 202, 205, 211, 218, 219, 235, 237, 240, 252, 255, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 299, 307, 310, 311, 321, 349, 355, 356, 358, 360, 361, 362, 367, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 421, 422, 424, 444, 446, 454, 462, 463, 464, 465, 470, 471, 472, 478, 500, 509, 512, 513, 523, 524, 533, 534, 550, 551, 554, 557, 559, 561, 569, 575, 578, 579, 610, 614, 622, 623, 630, 635, 655, 658, 675, 685, 687, 692, 694, 696, 699, 704, 705, 708, 714, 715, 716, 717, 718, 719, 720, 723, 725, 738, 754, 755, 802, 808, 817, 818, 826, 837, 846, 847, 850, 860, 861, 871], "84": [1, 11, 13, 19, 33, 34, 40, 46, 57, 78, 105, 106, 109, 111, 116, 126, 132, 134, 149, 167, 193, 197, 206, 222, 223, 224, 226, 227, 230, 232, 240, 480, 582], "69": [1, 13, 15, 19, 34, 39, 46, 48, 78, 79, 100, 105, 109, 111, 116, 135, 138, 141, 167, 174, 178, 182, 183, 189, 193, 201, 206, 222, 223, 224, 226, 227, 230, 232, 240, 255, 260, 261, 292, 396], "49": [1, 5, 13, 19, 28, 30, 31, 33, 34, 37, 38, 39, 40, 43, 44, 46, 47, 49, 50, 53, 54, 56, 57, 58, 59, 76, 78, 83, 84, 100, 105, 109, 110, 111, 113, 116, 117, 120, 124, 147, 167, 170, 174, 176, 177, 179, 182, 183, 189, 192, 193, 204, 206, 207, 208, 210, 213, 219, 222, 223, 224, 226, 227, 231, 232, 236, 240, 736, 829, 871], "00": [1, 2, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 24, 25, 26, 32, 33, 40, 41, 43, 44, 45, 49, 55, 58, 65, 68, 69, 70, 71, 74, 78, 79, 80, 81, 82, 85, 87, 88, 90, 93, 96, 98, 99, 100, 101, 103, 105, 106, 109, 110, 111, 112, 116, 118, 120, 124, 127, 130, 134, 137, 139, 141, 142, 144, 146, 149, 152, 154, 155, 156, 157, 158, 162, 165, 166, 167, 170, 172, 174, 178, 179, 180, 181, 182, 183, 185, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 216, 217, 219, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 234, 235, 239, 240, 517, 549, 558], "mm": [1, 4, 5, 12, 21, 24, 26, 40, 43, 44, 49, 68, 69, 71, 74, 76, 77, 78, 79, 80, 87, 90, 91, 92, 106, 116, 120, 124, 132, 134, 139, 144, 149, 154, 155, 156, 157, 158, 159, 165, 166, 174, 176, 178, 179, 180, 181, 182, 183, 189, 196, 197, 198, 200, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 218, 219, 252, 258, 265, 267, 268, 271, 274, 275, 276, 300, 330, 332, 334, 355, 360, 422, 446, 455, 461, 464, 465, 483, 503, 513, 638, 639, 728, 730, 737, 738, 796, 801, 806, 846, 853, 871], "orig": [1, 12, 21, 78, 79, 116, 120, 158, 182, 189, 197, 530, 542, 543, 548], "44": [1, 13, 19, 26, 28, 34, 40, 44, 45, 46, 78, 100, 105, 109, 110, 111, 113, 116, 156, 166, 167, 174, 178, 179, 182, 192, 193, 195, 199, 206, 207, 222, 223, 224, 226, 227, 232, 240, 292, 293, 424, 466, 677, 678, 680, 681, 871], "30": [1, 5, 7, 8, 9, 11, 12, 13, 14, 19, 24, 28, 32, 33, 34, 40, 41, 44, 45, 46, 49, 53, 55, 57, 68, 71, 72, 74, 78, 79, 80, 87, 89, 91, 94, 98, 100, 101, 104, 105, 106, 109, 110, 111, 112, 116, 120, 124, 132, 134, 142, 144, 154, 156, 157, 158, 162, 164, 167, 169, 170, 175, 176, 181, 182, 185, 193, 196, 198, 199, 201, 202, 204, 205, 206, 208, 210, 211, 222, 223, 224, 225, 226, 227, 229, 231, 232, 235, 237, 240, 252, 255, 260, 261, 262, 263, 271, 273, 298, 302, 330, 349, 470, 471, 472, 501, 549, 553, 558, 569, 643, 654, 655, 692, 694, 720, 723, 742, 746, 770, 828, 846, 847, 853, 856, 871], "51": [1, 5, 8, 13, 19, 28, 33, 34, 44, 46, 55, 68, 69, 77, 78, 79, 100, 105, 106, 109, 111, 116, 124, 150, 154, 156, 167, 170, 182, 183, 189, 198, 202, 205, 206, 207, 211, 222, 223, 224, 226, 227, 231, 232, 240, 270, 374, 578, 847, 871], "45": [1, 5, 8, 9, 11, 15, 16, 19, 28, 34, 44, 49, 54, 55, 78, 81, 100, 103, 105, 106, 109, 110, 111, 116, 118, 120, 139, 141, 142, 143, 147, 154, 155, 156, 166, 167, 174, 178, 179, 185, 189, 192, 193, 199, 201, 202, 204, 205, 206, 207, 213, 222, 223, 224, 226, 227, 231, 232, 237, 254, 255, 260, 261, 262, 263, 292, 293, 330, 349, 353, 354, 363, 364, 365, 403, 410, 438, 446, 447, 466, 468, 469, 470, 471, 472, 528, 550, 671, 692, 694, 742, 770, 778, 853, 871], "252": [1, 34, 109, 116, 120, 167, 226, 227], "43": [1, 13, 19, 26, 28, 33, 34, 40, 44, 45, 46, 47, 49, 53, 54, 78, 79, 100, 104, 105, 109, 111, 116, 120, 143, 148, 152, 155, 156, 167, 174, 179, 180, 181, 185, 192, 206, 222, 223, 224, 225, 226, 227, 231, 232, 240, 255, 260, 261, 330, 692, 693], "diff": [1, 9, 12, 21, 68, 78, 79, 116, 120, 131, 174, 181, 182, 189, 211, 230, 746, 838], "000": [1, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 33, 41, 58, 62, 64, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 85, 87, 90, 91, 92, 96, 106, 109, 110, 111, 112, 116, 118, 120, 125, 126, 127, 130, 132, 134, 138, 139, 140, 141, 142, 144, 147, 149, 150, 157, 164, 165, 166, 170, 177, 179, 180, 181, 182, 183, 188, 189, 191, 193, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 213, 214, 217, 219, 223, 225, 226, 227, 236, 494, 604], "46": [1, 12, 13, 19, 21, 28, 32, 33, 34, 39, 44, 46, 50, 54, 70, 78, 100, 101, 105, 109, 111, 116, 120, 147, 167, 192, 193, 198, 199, 201, 206, 213, 222, 223, 224, 226, 227, 231, 232, 240, 853, 871], "28": [1, 11, 13, 18, 19, 22, 26, 28, 33, 34, 40, 44, 46, 49, 78, 100, 105, 106, 109, 111, 116, 138, 148, 152, 154, 156, 162, 167, 169, 174, 179, 180, 181, 182, 183, 193, 198, 200, 206, 222, 223, 224, 226, 227, 230, 231, 232, 236, 240, 330, 871], "53": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 28, 32, 33, 34, 39, 40, 41, 44, 45, 46, 55, 59, 71, 74, 78, 79, 80, 81, 85, 91, 96, 100, 105, 109, 110, 111, 112, 116, 118, 120, 127, 130, 134, 135, 139, 142, 143, 144, 149, 152, 153, 160, 167, 178, 182, 185, 189, 192, 193, 199, 200, 201, 202, 206, 207, 208, 213, 221, 222, 223, 224, 226, 227, 231, 232, 234, 240, 671, 850], "58": [1, 11, 13, 19, 34, 39, 44, 46, 47, 48, 53, 54, 56, 57, 58, 76, 78, 87, 90, 91, 100, 105, 106, 109, 111, 113, 116, 118, 124, 134, 135, 147, 149, 150, 154, 160, 162, 167, 169, 170, 176, 180, 189, 193, 196, 202, 204, 206, 211, 222, 223, 226, 227, 230, 240, 349, 853, 871], "243": [1, 13, 25, 78, 100, 109, 116, 167, 189, 227], "47": [1, 10, 13, 16, 19, 28, 32, 34, 44, 50, 78, 81, 100, 105, 109, 111, 116, 135, 157, 166, 167, 179, 181, 192, 193, 206, 213, 222, 223, 224, 226, 227, 231, 232, 240, 295, 330, 397, 846, 847, 853], "86": [1, 5, 12, 13, 15, 19, 26, 33, 34, 39, 40, 46, 49, 78, 100, 105, 109, 111, 116, 135, 138, 149, 154, 155, 156, 166, 167, 170, 174, 179, 180, 182, 192, 193, 200, 202, 204, 205, 206, 212, 222, 223, 224, 226, 227, 231, 232, 240, 410, 845], "41": [1, 13, 19, 28, 33, 34, 43, 44, 46, 78, 79, 100, 101, 105, 109, 111, 116, 144, 146, 166, 167, 181, 182, 189, 191, 193, 202, 204, 205, 206, 211, 222, 223, 224, 226, 227, 230, 231, 232, 237, 240, 272, 355, 396, 403, 871], "63": [1, 13, 19, 34, 44, 46, 68, 78, 79, 98, 100, 105, 109, 111, 114, 116, 141, 167, 182, 183, 189, 193, 206, 222, 223, 224, 226, 227, 230, 231, 232, 871], "55": [1, 11, 13, 19, 21, 28, 30, 31, 34, 37, 38, 39, 40, 43, 44, 45, 47, 49, 53, 54, 56, 57, 59, 76, 78, 83, 84, 98, 100, 105, 106, 109, 111, 113, 116, 117, 121, 124, 127, 135, 141, 147, 149, 155, 158, 162, 167, 170, 175, 176, 178, 179, 192, 193, 201, 202, 204, 206, 208, 213, 222, 223, 224, 226, 227, 232, 240, 403, 411, 517, 549, 550, 593, 828, 871], "82": [1, 19, 34, 45, 78, 100, 109, 111, 116, 143, 167, 178, 179, 182, 185, 189, 192, 206, 222, 223, 224, 226, 227, 231, 232, 236, 396, 438], "230": [1, 78, 85, 109, 116, 152, 167, 227], "26": [1, 5, 11, 13, 16, 19, 28, 33, 34, 40, 43, 44, 45, 46, 55, 58, 63, 78, 79, 90, 98, 100, 101, 103, 105, 106, 109, 111, 116, 117, 127, 134, 135, 143, 156, 167, 169, 181, 182, 183, 189, 193, 206, 222, 223, 224, 226, 227, 230, 231, 232, 236, 239, 240, 272, 273, 355, 387, 517, 847], "coordin": [1, 5, 11, 12, 21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 66, 69, 78, 79, 87, 89, 90, 91, 92, 101, 104, 105, 106, 107, 112, 116, 120, 121, 124, 128, 132, 133, 134, 148, 156, 157, 161, 162, 163, 164, 168, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 189, 193, 205, 207, 218, 219, 230, 232, 240, 255, 257, 258, 260, 261, 262, 263, 264, 265, 266, 269, 273, 275, 276, 297, 299, 300, 301, 307, 310, 311, 316, 320, 323, 325, 326, 328, 330, 334, 359, 360, 362, 383, 403, 410, 422, 424, 446, 454, 462, 464, 465, 468, 470, 471, 472, 475, 478, 482, 483, 494, 500, 502, 509, 514, 549, 550, 561, 564, 569, 578, 610, 620, 621, 623, 624, 639, 643, 667, 670, 690, 692, 694, 725, 726, 737, 738, 739, 754, 755, 756, 762, 766, 770, 772, 774, 776, 777, 778, 780, 781, 788, 790, 792, 793, 794, 798, 800, 806, 808, 818, 819, 824, 826, 847, 871], "establish": [1, 12, 21, 78, 79, 116, 120, 182, 186, 189, 199, 227, 240, 677, 678, 680, 681], "digit": [1, 69, 71, 74, 78, 79, 80, 87, 90, 115, 116, 120, 124, 132, 139, 144, 149, 154, 155, 157, 158, 165, 166, 167, 180, 183, 186, 187, 189, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 217, 219, 240, 252, 253, 255, 257, 258, 259, 260, 261, 262, 263, 265, 267, 268, 269, 271, 274, 275, 276, 300, 301, 307, 320, 321, 323, 325, 328, 329, 332, 334, 336, 337, 339, 360, 403, 410, 422, 424, 444, 462, 470, 471, 472, 475, 478, 484, 494, 502, 509, 514, 549, 550, 559, 560, 561, 564, 569, 578, 604, 605, 639, 690, 692, 693, 694, 738, 754, 755, 762, 770, 772, 774, 777, 778, 781, 788, 790, 792, 793, 794, 798, 800, 808, 826, 846, 847, 856, 871], "point": [1, 5, 8, 9, 11, 12, 16, 18, 21, 22, 26, 27, 32, 33, 35, 37, 40, 41, 43, 44, 45, 48, 53, 54, 55, 57, 59, 69, 70, 71, 74, 78, 79, 80, 87, 90, 91, 93, 94, 97, 98, 100, 104, 106, 107, 109, 110, 111, 112, 114, 116, 117, 118, 120, 124, 125, 131, 132, 133, 134, 135, 138, 139, 140, 142, 143, 144, 147, 148, 149, 150, 154, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 189, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 236, 237, 240, 252, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 292, 293, 300, 301, 307, 310, 311, 316, 320, 325, 329, 330, 331, 332, 334, 337, 343, 345, 349, 354, 355, 359, 360, 362, 402, 403, 404, 405, 409, 410, 412, 419, 422, 424, 437, 439, 441, 444, 462, 465, 466, 470, 471, 472, 474, 475, 478, 484, 490, 494, 502, 512, 513, 514, 516, 517, 526, 527, 528, 529, 531, 532, 549, 550, 552, 560, 561, 564, 569, 578, 599, 603, 604, 607, 608, 610, 613, 618, 621, 624, 635, 638, 639, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 657, 664, 666, 675, 676, 677, 678, 680, 681, 682, 690, 691, 692, 693, 694, 707, 708, 710, 738, 739, 742, 743, 754, 755, 756, 757, 762, 766, 770, 772, 773, 774, 775, 777, 778, 781, 782, 785, 788, 790, 792, 793, 794, 796, 797, 798, 800, 801, 802, 806, 819, 824, 826, 830, 846, 848, 850, 852, 856, 859, 871], "subj00111092011": [1, 116], "po": [1, 19, 40, 46, 49, 77, 78, 79, 81, 90, 112, 116, 134, 149, 154, 174, 181, 182, 183, 189, 205, 207, 258, 262, 263, 266, 267, 268, 271, 274, 275, 276, 299, 308, 333, 346, 347, 423, 446, 464, 465, 484, 554, 557, 612, 639, 780, 800, 856, 871], "polhemu": [1, 12, 21, 78, 79, 116, 120, 154, 168, 182, 189, 265, 307, 332, 334, 484, 853, 856, 871], "hpi": [1, 12, 21, 78, 79, 116, 120, 154, 164, 167, 168, 182, 186, 189, 196, 207, 211, 252, 255, 260, 261, 262, 263, 265, 300, 301, 307, 310, 320, 330, 332, 336, 337, 338, 341, 342, 343, 360, 422, 423, 470, 471, 472, 478, 547, 554, 690, 692, 693, 694, 761, 826, 853, 856, 860, 871], "coil": [1, 5, 12, 21, 26, 40, 44, 49, 78, 79, 106, 116, 120, 121, 148, 154, 156, 157, 174, 179, 180, 181, 182, 183, 186, 189, 196, 205, 206, 207, 252, 255, 260, 261, 262, 263, 265, 315, 330, 336, 337, 339, 340, 341, 343, 344, 423, 446, 470, 471, 472, 478, 494, 547, 560, 561, 578, 589, 604, 632, 690, 692, 693, 694, 732, 761, 826, 860, 871], "ad": [1, 4, 5, 11, 12, 21, 22, 27, 28, 29, 31, 34, 37, 38, 39, 40, 41, 42, 46, 47, 48, 50, 51, 53, 54, 56, 57, 58, 59, 66, 68, 69, 78, 79, 87, 89, 90, 91, 92, 98, 101, 104, 105, 107, 116, 117, 120, 121, 124, 128, 132, 138, 139, 140, 144, 149, 154, 156, 157, 158, 159, 160, 164, 168, 173, 175, 176, 177, 179, 180, 182, 189, 193, 198, 202, 204, 205, 207, 213, 214, 217, 218, 219, 222, 223, 230, 232, 252, 254, 255, 257, 258, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 307, 333, 336, 338, 342, 355, 356, 365, 403, 410, 424, 447, 470, 471, 472, 493, 506, 511, 512, 513, 515, 549, 550, 552, 564, 566, 600, 635, 639, 640, 644, 654, 682, 685, 690, 692, 693, 694, 734, 738, 741, 743, 755, 756, 762, 766, 767, 770, 772, 774, 777, 778, 781, 785, 788, 790, 792, 793, 794, 796, 798, 800, 801, 830, 847, 853, 856, 859, 871], "devic": [1, 5, 12, 21, 26, 40, 44, 49, 69, 77, 78, 79, 106, 116, 120, 148, 154, 156, 163, 164, 167, 168, 174, 179, 181, 182, 183, 189, 190, 191, 203, 205, 211, 252, 261, 262, 263, 265, 300, 307, 310, 323, 325, 332, 356, 358, 367, 370, 424, 435, 462, 470, 471, 472, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 554, 557, 578, 579, 592, 602, 603, 604, 607, 635, 738, 754, 773, 817, 842, 846, 847, 856, 871], "locat": [1, 4, 5, 12, 21, 26, 31, 34, 39, 40, 44, 46, 47, 48, 49, 54, 58, 59, 66, 77, 78, 79, 87, 90, 91, 92, 97, 106, 112, 115, 116, 120, 121, 133, 134, 135, 136, 137, 139, 147, 148, 153, 154, 156, 157, 158, 159, 161, 163, 164, 169, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 189, 197, 203, 205, 206, 207, 211, 217, 218, 219, 222, 223, 224, 226, 227, 232, 237, 240, 255, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 275, 276, 292, 293, 301, 302, 303, 307, 308, 311, 313, 316, 318, 321, 323, 324, 325, 326, 327, 328, 329, 330, 333, 337, 339, 340, 341, 349, 361, 362, 371, 372, 373, 374, 376, 377, 379, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 410, 423, 424, 433, 436, 444, 454, 459, 463, 470, 471, 472, 477, 481, 483, 490, 494, 500, 503, 513, 516, 517, 526, 527, 528, 532, 536, 541, 547, 549, 550, 554, 564, 571, 574, 575, 578, 589, 603, 604, 607, 612, 613, 629, 630, 632, 639, 642, 643, 653, 656, 677, 678, 680, 681, 682, 690, 692, 694, 727, 728, 730, 738, 754, 755, 759, 762, 766, 770, 772, 776, 777, 780, 781, 790, 791, 792, 793, 794, 798, 800, 803, 806, 808, 811, 826, 831, 836, 846, 847, 850, 856, 859, 860, 871], "measur": [1, 4, 5, 12, 21, 26, 40, 44, 49, 69, 71, 74, 77, 78, 79, 80, 87, 90, 100, 106, 116, 120, 124, 139, 142, 143, 144, 154, 156, 157, 160, 163, 164, 165, 166, 167, 168, 170, 174, 180, 182, 186, 187, 188, 189, 193, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 217, 219, 222, 227, 228, 229, 233, 234, 236, 237, 240, 253, 255, 257, 259, 260, 261, 262, 263, 264, 265, 269, 271, 273, 280, 281, 292, 293, 294, 300, 301, 305, 306, 313, 314, 315, 319, 321, 322, 335, 337, 339, 341, 344, 349, 353, 354, 355, 360, 363, 364, 365, 367, 403, 405, 407, 410, 411, 412, 422, 434, 435, 436, 446, 447, 454, 463, 466, 468, 469, 470, 471, 472, 473, 476, 484, 486, 498, 506, 509, 512, 513, 514, 516, 517, 518, 525, 526, 527, 528, 531, 546, 547, 550, 561, 575, 578, 579, 582, 583, 584, 605, 620, 625, 626, 635, 646, 647, 654, 655, 658, 662, 671, 672, 673, 674, 678, 681, 682, 690, 691, 692, 693, 694, 721, 738, 751, 754, 755, 758, 763, 764, 778, 780, 789, 790, 794, 817, 826, 838, 846, 847, 853, 856, 859, 871], "compos": [1, 12, 21, 26, 40, 44, 49, 78, 79, 106, 116, 120, 135, 156, 174, 182, 186, 189, 193, 846, 856], "find": [1, 5, 7, 11, 12, 19, 21, 27, 28, 29, 30, 37, 38, 43, 46, 47, 48, 49, 51, 56, 57, 59, 66, 67, 75, 78, 79, 80, 82, 101, 104, 105, 107, 116, 120, 121, 124, 125, 132, 134, 138, 139, 143, 148, 149, 153, 154, 155, 159, 164, 168, 170, 173, 174, 178, 179, 182, 189, 193, 196, 198, 199, 202, 207, 213, 219, 222, 223, 224, 232, 237, 240, 258, 262, 263, 265, 266, 267, 268, 271, 274, 275, 276, 313, 350, 351, 352, 360, 403, 410, 437, 442, 444, 445, 470, 471, 472, 490, 517, 547, 550, 553, 556, 562, 563, 564, 565, 566, 567, 569, 570, 571, 573, 574, 587, 603, 607, 628, 649, 653, 656, 667, 738, 775, 777, 811, 826, 828, 830, 833, 834, 835, 836, 847, 850, 853, 854, 856, 871], "sampl": [1, 2, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 63, 64, 66, 67, 69, 70, 71, 74, 76, 78, 79, 80, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 100, 101, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 212, 213, 214, 217, 218, 219, 222, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 240, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 265, 267, 268, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 291, 313, 349, 355, 357, 367, 379, 405, 406, 407, 408, 409, 413, 414, 415, 416, 417, 418, 420, 424, 427, 429, 431, 432, 438, 439, 440, 441, 442, 444, 445, 469, 470, 471, 472, 479, 486, 492, 511, 513, 520, 526, 527, 545, 547, 550, 552, 555, 566, 567, 586, 592, 596, 603, 604, 605, 618, 620, 625, 640, 645, 646, 647, 648, 649, 650, 651, 652, 655, 656, 657, 662, 670, 672, 676, 677, 678, 679, 680, 681, 682, 683, 684, 690, 691, 693, 695, 696, 697, 698, 699, 700, 701, 704, 705, 707, 708, 709, 714, 715, 717, 718, 719, 720, 721, 736, 738, 768, 770, 771, 779, 791, 796, 801, 802, 804, 816, 826, 830, 846, 850, 851, 853, 854, 856, 861, 871], "meg4": [1, 12, 21, 78, 79, 116, 120, 182, 189], "system": [1, 5, 8, 10, 12, 19, 21, 27, 61, 68, 72, 77, 78, 79, 106, 113, 116, 119, 121, 126, 127, 134, 135, 148, 149, 153, 154, 156, 157, 158, 164, 166, 167, 168, 170, 176, 181, 182, 183, 187, 189, 192, 196, 197, 202, 203, 204, 205, 207, 211, 212, 213, 222, 235, 240, 255, 258, 259, 260, 261, 262, 263, 265, 267, 268, 270, 271, 273, 274, 275, 276, 280, 281, 295, 307, 310, 315, 318, 323, 325, 326, 328, 329, 330, 332, 334, 359, 360, 362, 367, 374, 409, 423, 438, 440, 452, 464, 465, 466, 470, 471, 472, 478, 479, 480, 482, 483, 484, 494, 503, 514, 547, 550, 552, 576, 578, 595, 625, 642, 643, 644, 653, 654, 656, 676, 677, 678, 679, 680, 681, 689, 690, 692, 693, 694, 702, 707, 709, 725, 754, 755, 768, 771, 776, 779, 785, 791, 799, 805, 806, 819, 826, 828, 829, 830, 831, 833, 834, 835, 842, 846, 847, 849, 856, 859, 871], "clock": [1, 12, 21, 78, 79, 116, 120, 182, 189, 470, 471, 472, 484, 550, 592, 785, 791, 847, 871], "avail": [1, 2, 5, 7, 8, 12, 19, 21, 22, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 53, 54, 56, 57, 58, 59, 66, 69, 71, 74, 76, 78, 79, 80, 83, 84, 87, 89, 90, 91, 92, 98, 106, 113, 116, 117, 120, 124, 128, 132, 134, 138, 139, 140, 141, 142, 144, 147, 148, 149, 153, 154, 157, 160, 163, 164, 165, 166, 167, 170, 171, 174, 175, 176, 177, 178, 179, 182, 186, 187, 189, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 217, 218, 219, 223, 235, 252, 255, 257, 260, 261, 262, 263, 265, 267, 268, 269, 271, 274, 275, 276, 298, 300, 301, 307, 327, 366, 368, 374, 396, 397, 402, 403, 409, 410, 415, 422, 429, 451, 468, 470, 471, 472, 509, 526, 527, 541, 542, 543, 549, 550, 564, 608, 615, 655, 686, 690, 691, 692, 694, 702, 706, 721, 738, 755, 762, 768, 770, 772, 774, 777, 778, 781, 785, 788, 790, 791, 792, 793, 794, 796, 798, 800, 801, 809, 810, 826, 828, 830, 831, 836, 837, 838, 841, 844, 847, 850, 853, 854, 855, 856, 859, 871], "check": [1, 5, 12, 21, 26, 40, 42, 44, 49, 60, 68, 78, 79, 106, 116, 117, 118, 120, 122, 133, 135, 138, 140, 141, 142, 155, 156, 157, 159, 164, 166, 168, 169, 170, 173, 174, 179, 180, 182, 189, 197, 199, 202, 203, 211, 212, 214, 222, 223, 236, 255, 257, 260, 261, 262, 263, 265, 267, 268, 271, 274, 275, 276, 315, 379, 385, 422, 436, 439, 470, 471, 472, 479, 482, 525, 539, 550, 558, 560, 677, 678, 680, 681, 690, 692, 693, 694, 725, 738, 754, 772, 774, 775, 776, 777, 808, 828, 829, 830, 838, 846, 847, 850, 859, 871], "which": [1, 4, 5, 12, 16, 18, 19, 21, 26, 31, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 57, 59, 68, 72, 77, 78, 79, 80, 85, 91, 98, 100, 106, 109, 111, 112, 113, 116, 117, 120, 124, 125, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 144, 147, 148, 149, 153, 154, 155, 156, 157, 158, 159, 160, 164, 165, 166, 167, 168, 169, 170, 173, 176, 178, 180, 182, 186, 187, 188, 189, 192, 193, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 217, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 236, 237, 240, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 286, 292, 293, 300, 301, 307, 309, 316, 323, 325, 326, 327, 328, 329, 335, 336, 338, 342, 344, 348, 349, 354, 355, 358, 362, 366, 367, 374, 379, 396, 403, 405, 410, 411, 414, 420, 422, 424, 427, 429, 432, 433, 434, 436, 437, 439, 441, 442, 443, 444, 445, 446, 447, 454, 461, 462, 468, 469, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 503, 504, 505, 509, 510, 512, 517, 518, 526, 527, 530, 531, 535, 539, 549, 550, 551, 552, 558, 560, 561, 564, 566, 567, 568, 569, 575, 576, 578, 583, 592, 595, 601, 603, 607, 608, 609, 610, 612, 613, 615, 620, 621, 624, 625, 626, 627, 629, 630, 632, 633, 635, 639, 640, 644, 647, 650, 652, 653, 656, 658, 659, 667, 669, 670, 676, 682, 685, 686, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 708, 710, 713, 724, 726, 728, 738, 739, 741, 743, 744, 753, 754, 756, 759, 761, 762, 764, 766, 768, 769, 770, 772, 773, 776, 777, 781, 783, 785, 790, 791, 792, 796, 798, 801, 805, 806, 808, 817, 818, 819, 821, 823, 824, 825, 826, 828, 830, 831, 833, 835, 838, 842, 844, 845, 846, 847, 848, 850, 852, 853, 856, 857, 859, 869, 871], "ar": [1, 4, 5, 11, 12, 14, 15, 16, 18, 19, 21, 24, 26, 27, 31, 32, 33, 37, 40, 42, 44, 45, 46, 49, 58, 68, 72, 73, 74, 78, 79, 80, 81, 84, 85, 91, 96, 98, 100, 101, 102, 103, 104, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 124, 125, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 192, 193, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 211, 212, 213, 214, 217, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 237, 240, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 278, 280, 281, 284, 285, 287, 292, 293, 295, 297, 298, 300, 301, 302, 303, 305, 307, 308, 309, 311, 312, 315, 317, 318, 319, 320, 323, 324, 325, 327, 329, 330, 333, 336, 337, 338, 342, 348, 349, 353, 354, 355, 356, 358, 360, 363, 364, 365, 367, 379, 380, 387, 396, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 424, 427, 428, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 453, 455, 456, 460, 461, 462, 463, 466, 468, 469, 470, 471, 472, 473, 477, 478, 479, 481, 482, 483, 484, 486, 487, 488, 491, 492, 494, 495, 496, 497, 498, 499, 500, 503, 506, 509, 510, 512, 514, 515, 516, 525, 526, 527, 528, 529, 532, 534, 539, 541, 542, 543, 545, 546, 547, 549, 550, 551, 552, 553, 555, 557, 558, 560, 564, 565, 566, 567, 569, 570, 572, 577, 578, 579, 582, 583, 584, 586, 587, 589, 593, 595, 596, 598, 601, 602, 603, 604, 605, 608, 610, 613, 616, 618, 625, 627, 628, 629, 630, 631, 632, 635, 637, 639, 640, 642, 643, 646, 647, 650, 652, 653, 655, 656, 658, 661, 662, 664, 665, 666, 671, 672, 675, 676, 677, 678, 679, 680, 681, 682, 686, 690, 691, 692, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 706, 707, 709, 710, 715, 720, 721, 722, 724, 726, 728, 733, 738, 739, 743, 753, 754, 755, 756, 759, 762, 763, 764, 765, 766, 768, 769, 770, 771, 772, 774, 775, 776, 777, 778, 781, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 796, 797, 798, 799, 800, 801, 802, 808, 811, 816, 818, 819, 820, 821, 826, 828, 830, 831, 833, 834, 835, 836, 837, 838, 842, 845, 846, 847, 848, 849, 851, 852, 853, 854, 855, 857, 858, 859, 861, 871], "valid": [1, 8, 9, 10, 11, 12, 15, 16, 21, 72, 78, 79, 108, 116, 118, 120, 135, 160, 169, 175, 182, 188, 189, 193, 199, 208, 222, 237, 255, 257, 260, 261, 262, 263, 265, 267, 268, 269, 271, 274, 275, 276, 320, 333, 349, 354, 396, 403, 409, 419, 420, 424, 435, 437, 444, 451, 455, 470, 471, 472, 526, 527, 549, 550, 552, 564, 566, 567, 621, 635, 672, 677, 678, 680, 681, 690, 692, 693, 694, 716, 726, 738, 741, 754, 755, 762, 769, 770, 771, 772, 774, 776, 777, 781, 790, 793, 796, 798, 799, 800, 801, 824, 830, 836, 837, 846, 850, 853, 871], "240": [1, 34, 41, 45, 73, 78, 106, 109, 116, 167, 169, 179, 196, 200, 206, 222, 226, 236], "x": [1, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 34, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 63, 66, 67, 69, 70, 71, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 124, 126, 128, 129, 130, 134, 135, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 154, 155, 156, 158, 160, 164, 165, 166, 167, 168, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 189, 192, 193, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 214, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 237, 240, 252, 255, 257, 260, 261, 262, 263, 265, 267, 268, 269, 271, 273, 274, 275, 276, 284, 297, 307, 308, 330, 339, 340, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 441, 442, 443, 470, 471, 472, 482, 483, 516, 517, 525, 549, 550, 551, 559, 564, 587, 610, 642, 663, 666, 671, 675, 676, 677, 678, 679, 680, 681, 683, 690, 692, 694, 695, 696, 697, 702, 704, 705, 707, 708, 709, 714, 716, 717, 719, 722, 726, 728, 729, 731, 738, 739, 742, 755, 757, 759, 762, 770, 772, 774, 776, 777, 778, 779, 780, 781, 786, 788, 790, 792, 793, 794, 796, 798, 800, 801, 802, 804, 806, 818, 826, 830, 836, 847, 853, 856, 871], "1800": [1, 116], "432000": [1, 116], "302": [1, 28, 29, 30, 31, 34, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 53, 54, 56, 57, 58, 59, 73, 80, 90, 91, 101, 104, 105, 107, 109, 116, 118, 150, 160, 164, 167, 170, 174, 175, 176, 177, 178, 179, 218, 222, 227, 230, 232, 856], "ch": [1, 2, 8, 12, 21, 66, 78, 79, 109, 112, 116, 117, 120, 134, 135, 139, 147, 149, 164, 167, 168, 182, 189, 202, 211, 217, 219, 240, 252, 265, 314, 315, 374, 396, 397, 470, 471, 472, 808, 826, 847, 871], "current": [1, 12, 21, 22, 27, 29, 30, 31, 33, 40, 41, 43, 58, 75, 76, 78, 79, 82, 91, 116, 120, 138, 147, 159, 160, 163, 164, 169, 175, 176, 177, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 197, 199, 207, 213, 219, 230, 232, 240, 252, 253, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 274, 275, 276, 280, 281, 292, 293, 313, 315, 321, 348, 355, 360, 366, 367, 370, 409, 424, 427, 436, 441, 443, 444, 446, 466, 470, 471, 472, 477, 482, 486, 512, 513, 517, 520, 550, 559, 561, 562, 563, 569, 578, 608, 615, 635, 654, 671, 673, 690, 692, 693, 694, 716, 738, 745, 747, 748, 749, 750, 751, 755, 759, 762, 768, 791, 800, 801, 808, 826, 830, 833, 836, 838, 846, 847, 850, 852, 856, 859], "compens": [1, 2, 12, 21, 27, 30, 31, 34, 37, 38, 39, 40, 43, 47, 49, 50, 53, 54, 56, 57, 58, 59, 75, 76, 78, 79, 82, 83, 84, 98, 113, 116, 117, 120, 124, 138, 141, 147, 170, 174, 176, 177, 179, 182, 183, 189, 199, 206, 222, 223, 240, 252, 255, 260, 261, 262, 263, 265, 346, 360, 424, 426, 439, 441, 442, 444, 470, 471, 472, 484, 491, 513, 547, 550, 561, 569, 575, 578, 608, 655, 690, 692, 693, 694, 779, 780, 871], "grade": [1, 12, 21, 24, 40, 68, 78, 79, 98, 106, 116, 120, 156, 159, 182, 186, 189, 230, 232, 255, 260, 261, 262, 263, 265, 266, 458, 459, 470, 471, 472, 550, 690, 692, 693, 694, 871], "144000": [1, 78], "sec": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 28, 29, 32, 33, 40, 41, 44, 45, 48, 57, 58, 60, 62, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 100, 101, 104, 106, 107, 108, 109, 110, 111, 112, 114, 115, 118, 120, 124, 125, 126, 129, 130, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 147, 149, 150, 154, 157, 160, 164, 165, 166, 167, 170, 175, 177, 178, 179, 180, 181, 182, 183, 188, 189, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 217, 218, 219, 224, 225, 226, 227, 230, 232, 236, 252, 258, 265, 352, 552, 640, 779, 856, 871], "type": [1, 2, 5, 15, 16, 22, 27, 29, 30, 31, 33, 34, 37, 38, 39, 40, 43, 47, 49, 50, 53, 54, 56, 57, 58, 59, 62, 69, 73, 75, 76, 78, 79, 80, 82, 83, 87, 90, 91, 92, 100, 106, 110, 111, 112, 113, 115, 116, 117, 120, 121, 124, 125, 128, 132, 133, 134, 135, 139, 140, 141, 142, 143, 144, 147, 148, 154, 155, 156, 157, 160, 164, 165, 166, 168, 169, 170, 174, 176, 177, 178, 179, 180, 181, 183, 186, 188, 193, 196, 197, 198, 201, 202, 203, 204, 205, 206, 208, 212, 214, 217, 218, 219, 222, 226, 227, 235, 236, 253, 255, 257, 258, 260, 261, 262, 263, 265, 267, 268, 269, 270, 271, 273, 274, 275, 276, 292, 293, 303, 305, 306, 308, 309, 312, 313, 314, 315, 316, 322, 324, 330, 338, 349, 350, 351, 352, 353, 354, 363, 364, 365, 367, 374, 379, 396, 397, 403, 405, 410, 412, 419, 424, 427, 428, 435, 436, 438, 441, 442, 443, 444, 446, 447, 448, 453, 460, 466, 468, 469, 470, 471, 472, 479, 486, 490, 496, 500, 501, 509, 528, 540, 547, 548, 549, 550, 551, 552, 555, 559, 561, 564, 565, 566, 567, 569, 571, 572, 575, 578, 584, 586, 593, 603, 605, 607, 608, 631, 632, 635, 641, 642, 643, 655, 658, 661, 670, 676, 677, 678, 680, 681, 685, 690, 691, 692, 693, 694, 698, 699, 700, 701, 703, 709, 710, 722, 725, 738, 753, 757, 761, 762, 763, 764, 766, 768, 769, 770, 772, 773, 774, 775, 776, 777, 778, 779, 781, 782, 783, 789, 790, 791, 792, 793, 794, 796, 798, 799, 800, 801, 802, 804, 812, 826, 828, 829, 835, 836, 837, 841, 846, 848, 850, 854, 856, 857, 871], "select": [1, 5, 7, 11, 15, 21, 24, 28, 29, 31, 32, 33, 34, 39, 40, 41, 44, 45, 47, 49, 50, 53, 54, 57, 58, 69, 72, 74, 79, 80, 85, 87, 90, 91, 92, 96, 100, 106, 109, 110, 116, 117, 118, 125, 132, 135, 139, 140, 142, 148, 149, 156, 157, 159, 160, 164, 165, 167, 168, 170, 173, 175, 176, 177, 178, 179, 180, 187, 189, 193, 197, 198, 199, 201, 204, 205, 207, 212, 213, 214, 218, 219, 223, 227, 231, 232, 235, 236, 237, 240, 252, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 267, 268, 270, 271, 274, 275, 276, 314, 319, 349, 360, 405, 411, 434, 441, 462, 468, 470, 471, 472, 477, 503, 542, 543, 545, 546, 547, 548, 549, 550, 551, 555, 564, 566, 567, 573, 574, 587, 613, 625, 632, 635, 653, 656, 676, 690, 691, 692, 693, 694, 701, 706, 755, 762, 768, 772, 774, 776, 777, 778, 781, 785, 791, 793, 794, 796, 800, 803, 807, 826, 830, 833, 846, 850, 853, 857, 871], "re": [1, 4, 29, 44, 69, 90, 91, 98, 100, 110, 111, 117, 124, 132, 138, 139, 142, 149, 154, 156, 157, 158, 159, 160, 164, 165, 167, 168, 169, 170, 180, 187, 197, 198, 199, 201, 202, 203, 204, 205, 211, 213, 218, 224, 226, 232, 237, 240, 252, 254, 255, 257, 260, 261, 262, 263, 265, 269, 277, 308, 312, 403, 410, 428, 470, 471, 472, 494, 542, 543, 546, 548, 549, 550, 559, 604, 632, 635, 639, 690, 692, 693, 694, 701, 706, 725, 755, 770, 777, 781, 790, 793, 795, 798, 800, 830, 834, 835, 838, 848, 850, 851, 853, 859, 871], "referenc": [1, 29, 69, 90, 91, 138, 148, 149, 157, 160, 165, 180, 187, 197, 201, 205, 218, 222, 254, 255, 260, 261, 262, 263, 277, 470, 471, 472, 632, 635, 690, 692, 693, 694, 772, 826, 830, 853, 857, 860, 871], "item": [1, 4, 8, 11, 12, 13, 14, 15, 16, 18, 21, 26, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 63, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 80, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 121, 124, 125, 126, 128, 129, 130, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 147, 149, 150, 154, 155, 156, 157, 158, 160, 164, 165, 166, 167, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 189, 193, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 214, 217, 218, 219, 223, 224, 225, 226, 227, 230, 232, 236, 253, 255, 257, 258, 260, 261, 265, 269, 273, 279, 284, 297, 470, 471, 472, 516, 692, 693, 694, 726, 738, 836, 856, 871], "deactiv": [1, 29, 41, 50, 66, 69, 89, 90, 91, 108, 140, 144, 157, 160, 180, 189, 203, 204, 205, 218, 759, 828], "wa": [1, 5, 7, 13, 18, 21, 32, 59, 64, 69, 91, 112, 132, 138, 142, 147, 149, 156, 157, 164, 165, 166, 168, 169, 179, 180, 181, 187, 189, 192, 193, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 213, 214, 217, 225, 226, 227, 237, 253, 255, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 280, 281, 292, 293, 327, 342, 383, 402, 403, 410, 425, 427, 468, 470, 471, 472, 488, 490, 498, 503, 513, 523, 524, 526, 527, 532, 533, 534, 549, 550, 551, 562, 563, 564, 567, 569, 570, 571, 578, 585, 603, 607, 628, 639, 642, 643, 675, 685, 690, 691, 692, 693, 694, 711, 738, 754, 755, 770, 772, 777, 781, 790, 793, 798, 800, 803, 807, 826, 829, 830, 835, 836, 837, 847, 852, 853, 856, 859, 871], "been": [1, 9, 10, 30, 31, 33, 34, 37, 38, 39, 40, 41, 43, 44, 47, 49, 50, 53, 54, 56, 57, 58, 59, 68, 69, 72, 76, 77, 81, 83, 84, 91, 113, 116, 117, 124, 132, 138, 140, 143, 147, 148, 149, 157, 158, 160, 164, 165, 167, 169, 170, 173, 174, 176, 177, 179, 180, 181, 186, 189, 192, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 235, 242, 251, 252, 255, 258, 259, 260, 261, 262, 263, 265, 267, 268, 269, 271, 272, 273, 274, 275, 276, 285, 286, 287, 292, 293, 298, 349, 353, 354, 363, 364, 365, 371, 372, 373, 376, 377, 379, 384, 387, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 401, 403, 410, 424, 446, 447, 463, 466, 468, 469, 470, 471, 472, 473, 479, 480, 491, 498, 518, 528, 549, 550, 551, 562, 578, 585, 608, 690, 691, 692, 693, 694, 748, 762, 768, 772, 774, 776, 778, 792, 830, 838, 842, 847, 850, 852, 853, 856, 859, 871], "appli": [1, 4, 5, 7, 8, 9, 10, 11, 12, 15, 16, 18, 21, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 53, 54, 56, 57, 58, 59, 60, 66, 67, 68, 69, 70, 71, 72, 76, 77, 79, 80, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 97, 98, 100, 101, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 124, 125, 129, 131, 132, 133, 134, 138, 139, 140, 141, 143, 144, 147, 148, 149, 150, 154, 156, 157, 158, 159, 160, 164, 165, 167, 168, 170, 174, 175, 176, 177, 179, 180, 181, 182, 183, 187, 189, 193, 196, 197, 198, 200, 202, 204, 205, 207, 208, 214, 217, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 236, 240, 253, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 307, 333, 348, 353, 362, 363, 365, 403, 405, 406, 410, 411, 412, 414, 416, 424, 433, 434, 435, 436, 437, 439, 441, 442, 444, 447, 461, 468, 469, 470, 471, 472, 507, 510, 517, 518, 519, 520, 521, 526, 527, 529, 532, 533, 534, 549, 550, 551, 552, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 578, 585, 593, 601, 605, 608, 609, 610, 630, 635, 646, 647, 648, 649, 650, 652, 657, 671, 672, 677, 678, 679, 690, 691, 692, 693, 694, 709, 710, 720, 723, 727, 728, 738, 762, 763, 768, 769, 770, 772, 774, 776, 777, 781, 782, 783, 785, 791, 792, 796, 798, 799, 801, 808, 811, 818, 821, 826, 830, 846, 848, 850, 853, 854, 856, 859, 871], "yet": [1, 69, 91, 132, 157, 180, 187, 203, 205, 237, 260, 371, 372, 373, 376, 377, 379, 384, 387, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 401, 411, 416, 539, 564, 718, 719, 738, 830], "method": [1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 27, 28, 29, 30, 31, 33, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 58, 68, 69, 70, 71, 72, 74, 75, 76, 79, 80, 81, 82, 85, 90, 91, 92, 94, 96, 98, 100, 101, 104, 105, 106, 107, 110, 111, 112, 113, 118, 124, 130, 134, 138, 139, 140, 141, 142, 144, 147, 148, 149, 150, 157, 158, 160, 163, 164, 165, 166, 167, 168, 170, 173, 175, 178, 179, 180, 181, 182, 183, 187, 188, 189, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 213, 215, 216, 217, 218, 219, 223, 227, 230, 232, 235, 236, 237, 240, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 280, 281, 284, 292, 293, 294, 295, 297, 300, 301, 305, 306, 307, 308, 309, 313, 314, 315, 316, 319, 321, 322, 335, 337, 339, 342, 344, 349, 353, 354, 355, 360, 363, 364, 365, 367, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 422, 424, 426, 438, 439, 441, 442, 443, 447, 454, 463, 466, 467, 468, 469, 470, 471, 472, 473, 476, 478, 480, 481, 482, 483, 484, 487, 488, 489, 493, 494, 495, 496, 497, 498, 499, 500, 503, 506, 513, 514, 516, 517, 518, 519, 520, 521, 523, 524, 528, 529, 530, 532, 533, 534, 546, 547, 549, 550, 551, 558, 561, 562, 563, 565, 575, 576, 578, 581, 582, 583, 584, 585, 593, 595, 599, 602, 608, 610, 625, 626, 635, 640, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 668, 671, 672, 674, 677, 678, 679, 680, 681, 683, 690, 691, 692, 693, 694, 697, 700, 707, 708, 709, 710, 726, 733, 734, 736, 738, 739, 751, 754, 758, 763, 764, 765, 766, 769, 777, 780, 782, 790, 794, 797, 826, 828, 830, 845, 846, 848, 850, 853, 854, 856, 857, 868, 871], "note": [1, 4, 13, 16, 18, 21, 26, 46, 68, 69, 72, 80, 101, 106, 109, 111, 126, 132, 133, 134, 138, 139, 140, 141, 143, 147, 149, 154, 156, 158, 160, 164, 165, 166, 167, 168, 169, 170, 178, 179, 180, 181, 187, 188, 192, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 211, 212, 213, 217, 218, 226, 227, 230, 231, 232, 236, 237, 240, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 284, 288, 292, 293, 295, 298, 299, 300, 301, 302, 304, 305, 307, 308, 309, 312, 313, 314, 315, 316, 317, 319, 323, 324, 325, 327, 329, 330, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 353, 354, 355, 356, 359, 360, 362, 363, 366, 367, 374, 379, 380, 381, 382, 383, 385, 396, 397, 402, 405, 406, 407, 409, 411, 412, 413, 415, 419, 420, 422, 423, 424, 425, 426, 427, 428, 430, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 446, 447, 453, 454, 456, 459, 460, 461, 462, 464, 465, 470, 471, 472, 473, 479, 483, 484, 486, 487, 488, 491, 492, 493, 494, 496, 498, 499, 503, 505, 506, 507, 508, 510, 512, 513, 514, 515, 517, 518, 519, 520, 521, 523, 524, 525, 528, 530, 532, 533, 534, 536, 537, 549, 550, 551, 552, 553, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 572, 575, 578, 579, 584, 585, 586, 587, 588, 592, 593, 596, 598, 600, 601, 602, 604, 605, 608, 609, 610, 612, 613, 615, 618, 624, 626, 627, 629, 630, 632, 635, 637, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 667, 670, 671, 672, 673, 676, 677, 678, 679, 680, 681, 683, 685, 690, 691, 692, 693, 694, 698, 699, 700, 701, 702, 703, 707, 708, 709, 710, 713, 718, 719, 722, 723, 724, 726, 727, 728, 732, 733, 736, 738, 739, 741, 753, 754, 755, 756, 757, 759, 761, 762, 763, 765, 766, 768, 769, 770, 771, 772, 774, 775, 777, 778, 779, 781, 783, 784, 785, 786, 787, 789, 790, 791, 792, 793, 794, 795, 796, 798, 799, 800, 801, 802, 803, 804, 807, 808, 812, 816, 817, 818, 819, 820, 821, 826, 828, 830, 831, 837, 846, 850, 852, 853, 855, 871], "legaci": [1, 69, 72, 106, 126, 140, 141, 164, 170, 181, 196, 200, 204, 206, 208, 214, 236, 255, 260, 261, 262, 263, 470, 471, 472, 770, 792, 871], "new": [1, 8, 14, 19, 27, 31, 60, 67, 69, 72, 78, 106, 110, 126, 132, 135, 138, 140, 141, 143, 147, 149, 159, 163, 164, 170, 173, 180, 181, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 211, 213, 214, 217, 222, 225, 226, 227, 235, 236, 240, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 280, 281, 283, 284, 288, 292, 293, 295, 297, 299, 300, 301, 302, 303, 304, 307, 308, 309, 311, 312, 313, 316, 317, 318, 323, 325, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 363, 364, 365, 366, 374, 380, 382, 383, 396, 397, 402, 403, 405, 407, 409, 410, 414, 415, 422, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 450, 451, 453, 456, 460, 461, 462, 465, 466, 468, 469, 470, 471, 472, 479, 482, 483, 484, 486, 487, 488, 491, 493, 498, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 523, 524, 525, 526, 527, 530, 532, 533, 534, 535, 536, 537, 538, 539, 541, 542, 543, 549, 550, 551, 552, 553, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 575, 577, 578, 579, 586, 588, 592, 593, 598, 602, 604, 605, 609, 613, 621, 623, 624, 625, 626, 627, 629, 632, 635, 639, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 667, 671, 673, 683, 684, 685, 689, 690, 691, 692, 693, 694, 706, 707, 708, 709, 710, 713, 718, 719, 721, 722, 723, 724, 726, 727, 728, 735, 738, 739, 741, 746, 747, 751, 754, 755, 756, 757, 759, 761, 762, 764, 765, 766, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 798, 800, 801, 802, 804, 807, 812, 815, 816, 817, 821, 822, 824, 826, 828, 829, 832, 834, 835, 836, 838, 841, 846, 847, 850, 851, 852, 853, 854, 856, 858, 859], "should": [1, 4, 5, 16, 19, 39, 40, 62, 68, 69, 72, 79, 85, 87, 106, 117, 118, 126, 130, 132, 133, 134, 138, 139, 140, 141, 142, 149, 154, 155, 156, 158, 159, 163, 164, 165, 170, 178, 180, 181, 182, 188, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 217, 226, 227, 235, 236, 237, 240, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 298, 299, 300, 301, 302, 303, 304, 307, 311, 312, 323, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 408, 409, 410, 413, 414, 415, 416, 419, 420, 422, 424, 428, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 453, 454, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 505, 506, 507, 508, 509, 510, 512, 513, 514, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 543, 546, 549, 550, 552, 553, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 578, 579, 581, 582, 585, 586, 587, 588, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 608, 609, 610, 612, 613, 614, 615, 616, 618, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 635, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 650, 652, 654, 655, 656, 658, 660, 661, 662, 663, 664, 665, 666, 667, 672, 677, 678, 679, 680, 681, 685, 686, 687, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 707, 708, 709, 710, 713, 714, 718, 719, 721, 722, 723, 724, 726, 727, 728, 733, 734, 737, 738, 740, 742, 746, 754, 755, 756, 757, 761, 762, 763, 765, 766, 768, 769, 770, 771, 772, 773, 774, 777, 778, 781, 782, 783, 784, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 807, 808, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 828, 829, 830, 833, 834, 835, 836, 841, 846, 847, 852, 853, 856, 859, 871], "compute_psd": [1, 69, 72, 106, 126, 130, 135, 140, 141, 164, 170, 181, 196, 200, 204, 206, 208, 214, 235, 236, 237, 255, 260, 261, 262, 263, 470, 471, 472, 692, 694, 709, 710, 770, 792, 871], "5": [1, 2, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 24, 26, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 152, 154, 155, 156, 157, 158, 160, 162, 164, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 188, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 217, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 237, 240, 252, 254, 255, 260, 261, 262, 263, 266, 267, 268, 271, 274, 275, 276, 278, 292, 293, 295, 298, 302, 309, 321, 330, 349, 355, 374, 379, 402, 403, 409, 410, 420, 423, 424, 426, 444, 445, 446, 459, 468, 470, 471, 472, 494, 506, 507, 517, 523, 528, 532, 533, 534, 549, 550, 552, 553, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 573, 576, 578, 582, 586, 587, 604, 612, 631, 639, 643, 676, 689, 692, 694, 702, 707, 709, 722, 728, 738, 753, 757, 769, 770, 774, 775, 781, 783, 786, 791, 796, 801, 811, 828, 829, 830, 836, 846, 847, 850, 852, 853, 856, 859], "becaus": [1, 4, 5, 11, 16, 18, 21, 26, 33, 40, 42, 43, 44, 49, 59, 68, 72, 78, 79, 80, 98, 111, 112, 116, 132, 138, 140, 141, 142, 144, 147, 148, 149, 156, 158, 159, 160, 164, 165, 166, 168, 169, 174, 178, 179, 180, 181, 182, 187, 188, 189, 192, 193, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 213, 217, 222, 223, 224, 227, 230, 237, 255, 260, 261, 262, 263, 342, 353, 424, 446, 560, 569, 577, 677, 678, 680, 681, 693, 747, 768, 799, 826, 830, 834, 838, 846, 848, 850, 852, 853, 857, 871], "all": [1, 4, 5, 10, 13, 14, 18, 19, 21, 27, 28, 31, 32, 34, 39, 44, 58, 60, 62, 68, 71, 78, 79, 80, 87, 92, 94, 96, 100, 104, 108, 109, 110, 111, 113, 114, 116, 117, 118, 122, 124, 133, 138, 140, 141, 142, 143, 144, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 166, 167, 168, 169, 170, 174, 177, 179, 180, 181, 182, 183, 186, 187, 188, 189, 193, 196, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 217, 218, 219, 222, 223, 224, 227, 231, 235, 236, 237, 252, 253, 254, 255, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 287, 290, 292, 293, 295, 297, 302, 303, 304, 305, 307, 308, 309, 312, 317, 318, 319, 322, 323, 324, 333, 343, 344, 348, 349, 353, 354, 355, 360, 361, 363, 364, 365, 367, 380, 403, 405, 406, 410, 412, 419, 420, 424, 427, 428, 430, 432, 433, 434, 435, 436, 437, 441, 442, 443, 444, 445, 446, 447, 451, 453, 459, 460, 461, 462, 466, 468, 469, 470, 471, 472, 473, 477, 479, 483, 486, 492, 494, 497, 501, 505, 516, 517, 519, 521, 524, 526, 527, 528, 529, 533, 534, 536, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 560, 564, 565, 566, 567, 568, 569, 572, 575, 578, 584, 586, 593, 598, 601, 602, 604, 605, 608, 609, 610, 613, 623, 628, 629, 635, 638, 640, 649, 655, 658, 667, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 685, 690, 691, 692, 693, 694, 698, 699, 700, 701, 703, 705, 706, 707, 709, 710, 713, 717, 721, 722, 726, 728, 736, 738, 745, 746, 754, 755, 756, 762, 766, 768, 769, 770, 772, 773, 774, 775, 777, 778, 779, 781, 782, 785, 787, 788, 789, 790, 791, 792, 793, 794, 796, 798, 799, 800, 801, 802, 811, 826, 833, 837, 841, 845, 846, 847, 848, 852, 853, 856, 857, 859, 871], "were": [1, 4, 5, 10, 18, 21, 37, 78, 79, 116, 124, 132, 135, 138, 139, 140, 141, 142, 147, 148, 149, 159, 165, 166, 169, 170, 179, 180, 181, 182, 186, 188, 189, 197, 198, 199, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 217, 222, 224, 226, 227, 255, 260, 261, 262, 263, 265, 268, 270, 271, 274, 276, 277, 292, 293, 315, 343, 344, 355, 358, 396, 397, 427, 429, 470, 471, 472, 493, 550, 560, 561, 569, 578, 685, 690, 691, 692, 693, 694, 782, 784, 791, 826, 830, 837, 847, 850, 852, 856, 871], "effect": [1, 7, 17, 19, 20, 21, 26, 27, 38, 56, 58, 68, 69, 72, 80, 81, 96, 100, 106, 109, 110, 117, 118, 126, 130, 139, 143, 147, 149, 158, 160, 164, 165, 166, 170, 181, 189, 196, 198, 199, 200, 204, 205, 206, 207, 208, 214, 218, 219, 223, 224, 226, 227, 232, 235, 236, 240, 255, 260, 261, 262, 263, 265, 266, 267, 270, 271, 275, 292, 293, 315, 349, 353, 354, 363, 364, 365, 396, 397, 403, 404, 410, 419, 424, 426, 427, 442, 446, 447, 466, 468, 469, 470, 471, 472, 487, 488, 517, 520, 528, 547, 550, 553, 558, 605, 671, 673, 676, 677, 678, 680, 681, 692, 694, 709, 710, 768, 772, 778, 781, 783, 785, 791, 792, 794, 796, 826, 836, 837, 850, 871], "window": [1, 2, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 33, 41, 58, 69, 70, 71, 72, 74, 79, 80, 81, 85, 90, 96, 97, 100, 101, 105, 106, 110, 111, 112, 118, 120, 126, 130, 134, 135, 139, 140, 141, 142, 144, 149, 164, 169, 170, 178, 181, 189, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 213, 214, 223, 227, 235, 236, 237, 252, 255, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 286, 336, 338, 342, 403, 404, 408, 410, 414, 416, 419, 427, 429, 438, 439, 441, 442, 443, 452, 462, 463, 469, 470, 471, 472, 523, 524, 550, 552, 560, 569, 572, 576, 578, 586, 642, 643, 676, 690, 691, 692, 694, 697, 700, 702, 704, 707, 708, 709, 710, 714, 715, 720, 722, 723, 738, 768, 769, 770, 777, 785, 791, 792, 796, 801, 830, 833, 834, 835, 836, 871], "size": [1, 5, 8, 9, 10, 21, 22, 34, 40, 42, 43, 44, 45, 52, 57, 63, 68, 69, 72, 80, 97, 105, 106, 111, 117, 123, 124, 126, 130, 131, 132, 133, 134, 140, 142, 144, 148, 149, 153, 154, 156, 158, 164, 170, 173, 175, 176, 177, 178, 179, 181, 182, 183, 187, 188, 196, 197, 199, 200, 203, 204, 205, 206, 208, 211, 214, 218, 219, 224, 227, 230, 235, 236, 237, 240, 255, 257, 258, 260, 261, 262, 263, 267, 268, 269, 270, 271, 274, 275, 276, 307, 315, 323, 325, 355, 403, 405, 410, 414, 415, 438, 439, 441, 442, 443, 468, 470, 471, 472, 510, 523, 549, 550, 564, 569, 576, 656, 672, 676, 677, 678, 680, 681, 690, 692, 694, 715, 728, 738, 747, 751, 766, 768, 770, 776, 777, 783, 784, 785, 788, 790, 791, 793, 794, 796, 797, 798, 799, 800, 801, 805, 811, 853, 856, 871], "213": [1, 4, 19, 34, 167, 193, 206, 219, 226, 227], "need": [1, 4, 5, 11, 28, 29, 30, 33, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 49, 53, 54, 57, 58, 59, 67, 68, 72, 73, 83, 87, 91, 92, 100, 101, 104, 105, 106, 107, 109, 111, 114, 116, 124, 132, 133, 134, 138, 139, 140, 141, 142, 143, 147, 148, 149, 154, 156, 157, 158, 159, 163, 164, 165, 166, 167, 168, 170, 173, 175, 176, 177, 178, 179, 180, 186, 188, 189, 192, 193, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 211, 212, 213, 214, 217, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 237, 240, 255, 260, 261, 262, 263, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 279, 292, 313, 324, 366, 369, 379, 404, 405, 413, 419, 427, 436, 441, 461, 470, 471, 472, 479, 486, 493, 509, 514, 537, 550, 585, 639, 677, 678, 680, 681, 690, 692, 693, 694, 738, 744, 755, 761, 776, 781, 791, 830, 831, 833, 834, 835, 836, 837, 838, 846, 847, 852, 853, 854, 856, 859, 871], "more": [1, 4, 18, 19, 27, 28, 33, 41, 42, 43, 48, 53, 57, 68, 69, 71, 73, 78, 79, 80, 81, 83, 91, 101, 104, 107, 110, 111, 118, 119, 127, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 153, 154, 156, 158, 160, 163, 164, 165, 166, 167, 168, 169, 170, 173, 175, 176, 178, 179, 182, 183, 187, 188, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 211, 212, 213, 214, 219, 222, 223, 224, 225, 227, 230, 232, 236, 237, 245, 254, 255, 257, 258, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 285, 292, 293, 300, 301, 324, 349, 353, 355, 360, 362, 365, 396, 397, 402, 403, 405, 407, 408, 411, 415, 420, 422, 433, 434, 436, 437, 438, 439, 441, 442, 444, 445, 453, 462, 470, 471, 472, 479, 488, 494, 505, 509, 512, 517, 523, 524, 525, 549, 550, 552, 558, 560, 569, 575, 578, 587, 598, 600, 604, 605, 608, 618, 627, 629, 630, 632, 635, 642, 667, 671, 672, 677, 678, 679, 680, 681, 690, 692, 693, 694, 697, 700, 707, 709, 720, 721, 722, 723, 735, 738, 754, 755, 756, 757, 762, 766, 770, 773, 774, 776, 777, 781, 790, 793, 796, 798, 800, 801, 809, 810, 819, 826, 827, 828, 830, 834, 835, 836, 837, 846, 847, 848, 850, 852, 853, 854, 855, 859, 868, 871], "than": [1, 5, 13, 18, 24, 26, 32, 33, 40, 41, 43, 44, 45, 49, 53, 57, 58, 59, 67, 68, 76, 80, 83, 84, 91, 111, 116, 121, 124, 132, 133, 134, 138, 139, 140, 141, 142, 144, 147, 148, 149, 154, 156, 159, 164, 165, 166, 167, 168, 169, 170, 174, 178, 179, 181, 182, 183, 186, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 211, 212, 213, 222, 225, 235, 237, 255, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 285, 300, 301, 348, 353, 360, 405, 408, 410, 414, 420, 422, 432, 437, 439, 441, 442, 444, 447, 459, 468, 469, 470, 471, 472, 488, 494, 505, 515, 523, 524, 534, 539, 541, 543, 549, 550, 552, 558, 560, 564, 566, 576, 577, 579, 583, 586, 604, 609, 630, 639, 671, 677, 678, 679, 680, 681, 682, 685, 690, 692, 693, 694, 697, 700, 704, 707, 709, 714, 720, 723, 738, 755, 756, 768, 770, 771, 774, 777, 781, 790, 791, 793, 796, 798, 800, 801, 811, 828, 830, 835, 836, 837, 852, 853, 871], "one": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 24, 31, 32, 33, 39, 40, 41, 42, 44, 45, 47, 48, 49, 57, 58, 64, 66, 68, 71, 72, 74, 79, 80, 81, 83, 84, 85, 87, 91, 93, 94, 96, 100, 106, 108, 110, 111, 112, 114, 118, 124, 128, 130, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 153, 154, 155, 156, 157, 158, 159, 164, 165, 166, 167, 170, 174, 175, 176, 177, 178, 179, 180, 182, 186, 187, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 217, 219, 222, 224, 225, 226, 227, 231, 236, 237, 252, 253, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 282, 285, 292, 293, 306, 307, 309, 313, 314, 316, 348, 350, 351, 353, 355, 356, 360, 374, 382, 385, 387, 396, 397, 402, 409, 413, 416, 418, 422, 425, 426, 427, 434, 435, 437, 438, 444, 453, 460, 461, 462, 469, 470, 471, 472, 475, 479, 488, 502, 503, 505, 507, 512, 526, 527, 533, 534, 536, 539, 550, 551, 552, 553, 566, 570, 573, 574, 586, 589, 598, 600, 608, 609, 615, 627, 629, 635, 639, 642, 656, 661, 671, 672, 677, 678, 679, 680, 681, 683, 686, 690, 691, 692, 693, 694, 696, 699, 705, 717, 718, 719, 724, 727, 728, 738, 751, 754, 755, 756, 757, 762, 769, 770, 772, 773, 774, 775, 777, 778, 779, 781, 783, 796, 797, 798, 799, 800, 801, 802, 811, 817, 819, 826, 828, 829, 830, 833, 834, 838, 846, 847, 848, 850, 852, 853, 856, 871], "make": [1, 4, 9, 10, 13, 18, 19, 21, 27, 28, 31, 33, 37, 41, 44, 47, 49, 53, 54, 58, 60, 68, 73, 83, 87, 90, 91, 100, 106, 108, 109, 110, 111, 119, 121, 127, 130, 132, 133, 134, 138, 139, 140, 141, 142, 148, 149, 154, 156, 158, 159, 160, 164, 165, 167, 168, 169, 170, 174, 175, 176, 177, 178, 180, 181, 182, 183, 186, 187, 189, 192, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 211, 213, 217, 222, 224, 225, 226, 230, 231, 232, 237, 252, 255, 259, 260, 261, 262, 263, 265, 267, 268, 271, 273, 274, 275, 276, 292, 293, 320, 332, 349, 353, 354, 355, 360, 363, 364, 365, 366, 403, 406, 407, 410, 412, 413, 422, 426, 427, 438, 439, 441, 442, 446, 447, 453, 460, 462, 466, 468, 469, 470, 471, 472, 511, 528, 534, 543, 549, 550, 560, 575, 577, 586, 596, 598, 608, 618, 627, 629, 642, 654, 685, 687, 691, 705, 717, 718, 719, 721, 726, 733, 734, 738, 756, 757, 760, 761, 762, 764, 775, 778, 784, 791, 796, 801, 802, 819, 826, 828, 829, 837, 838, 846, 847, 848, 850, 851, 853, 856, 859, 871], "topographi": [1, 13, 21, 27, 68, 69, 72, 83, 111, 117, 119, 127, 129, 140, 142, 149, 164, 168, 170, 174, 189, 202, 204, 205, 214, 225, 227, 235, 240, 255, 260, 261, 262, 263, 265, 269, 270, 308, 403, 470, 471, 472, 547, 550, 565, 655, 690, 692, 694, 751, 770, 775, 776, 777, 781, 783, 787, 792, 794, 798, 799, 826, 871], "disabl": [1, 83, 111, 140, 147, 148, 149, 170, 196, 197, 200, 214, 225, 252, 255, 257, 260, 261, 262, 263, 269, 270, 303, 360, 409, 415, 470, 471, 472, 549, 550, 569, 578, 633, 637, 690, 692, 694, 733, 738, 755, 770, 772, 776, 777, 781, 790, 791, 793, 798, 800, 804, 828, 871], "interact": [1, 27, 32, 44, 46, 83, 111, 112, 117, 124, 132, 138, 147, 148, 149, 163, 164, 166, 170, 178, 179, 189, 197, 198, 202, 203, 204, 208, 211, 219, 222, 225, 226, 232, 236, 237, 240, 252, 255, 257, 260, 261, 262, 263, 267, 268, 269, 270, 271, 274, 275, 276, 286, 292, 403, 410, 462, 470, 471, 472, 517, 549, 550, 586, 671, 673, 690, 692, 694, 738, 740, 754, 755, 759, 769, 770, 772, 773, 774, 776, 777, 781, 783, 785, 790, 791, 792, 793, 794, 796, 798, 799, 800, 801, 828, 830, 852, 853, 854, 859, 871], "up": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 23, 24, 26, 27, 28, 32, 33, 41, 43, 44, 49, 67, 70, 71, 74, 77, 79, 80, 81, 85, 87, 90, 91, 92, 96, 100, 101, 106, 108, 109, 110, 111, 112, 114, 118, 120, 129, 130, 132, 134, 138, 139, 142, 143, 144, 148, 149, 153, 154, 156, 157, 158, 160, 163, 164, 170, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 211, 213, 214, 218, 219, 223, 224, 227, 230, 232, 237, 255, 257, 258, 260, 261, 262, 263, 267, 268, 269, 270, 271, 272, 274, 275, 276, 403, 408, 409, 410, 415, 443, 470, 471, 472, 523, 524, 549, 550, 552, 569, 633, 638, 639, 676, 685, 690, 692, 694, 707, 709, 736, 738, 757, 766, 768, 769, 770, 774, 777, 781, 784, 790, 791, 793, 796, 798, 801, 802, 808, 826, 828, 834, 850, 853, 854, 856, 859, 871], "band": [1, 5, 8, 9, 12, 13, 14, 15, 16, 18, 21, 27, 32, 33, 41, 70, 74, 79, 85, 91, 102, 103, 104, 106, 107, 109, 111, 112, 118, 123, 130, 134, 135, 139, 140, 142, 143, 144, 165, 170, 193, 196, 198, 199, 200, 201, 202, 204, 208, 214, 226, 227, 235, 236, 237, 240, 255, 260, 261, 262, 263, 283, 405, 411, 414, 438, 439, 441, 442, 444, 470, 471, 472, 533, 555, 582, 669, 692, 694, 762, 770, 786, 826, 847, 850, 871], "stop": [1, 5, 29, 66, 79, 90, 93, 124, 134, 165, 170, 198, 199, 200, 207, 211, 212, 213, 252, 253, 255, 260, 261, 262, 263, 280, 281, 291, 352, 405, 414, 438, 439, 441, 442, 470, 471, 472, 511, 520, 523, 550, 569, 576, 592, 782, 785, 830, 852, 871], "filter": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 17, 19, 20, 27, 32, 33, 41, 44, 58, 66, 70, 71, 74, 75, 79, 80, 81, 82, 85, 89, 96, 106, 109, 110, 112, 118, 130, 134, 138, 139, 142, 143, 144, 147, 160, 163, 164, 165, 167, 170, 174, 179, 181, 182, 183, 189, 192, 196, 198, 201, 204, 208, 209, 210, 211, 213, 214, 219, 227, 237, 240, 252, 255, 258, 259, 260, 261, 262, 263, 265, 267, 268, 270, 271, 274, 275, 276, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 337, 339, 342, 343, 346, 349, 353, 354, 363, 364, 365, 369, 403, 404, 405, 407, 410, 411, 414, 417, 418, 419, 421, 424, 432, 444, 446, 447, 466, 468, 469, 470, 471, 472, 484, 511, 528, 547, 550, 551, 555, 561, 562, 563, 566, 567, 569, 570, 571, 578, 579, 582, 605, 644, 654, 690, 692, 693, 694, 703, 705, 708, 778, 779, 780, 786, 791, 792, 810, 826, 828, 830, 846, 848, 850, 857, 860, 861, 871], "fir": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 33, 41, 70, 71, 74, 79, 80, 81, 85, 96, 110, 111, 112, 118, 130, 134, 139, 142, 144, 149, 170, 189, 193, 196, 198, 200, 201, 202, 204, 207, 208, 227, 252, 255, 260, 261, 262, 263, 405, 414, 439, 441, 442, 470, 471, 472, 562, 563, 582, 703, 779, 791, 828, 850, 860, 871], "paramet": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 24, 31, 33, 39, 40, 41, 42, 43, 47, 53, 54, 58, 60, 67, 69, 70, 71, 73, 74, 79, 80, 81, 85, 93, 94, 96, 97, 98, 104, 105, 106, 107, 109, 110, 111, 112, 114, 116, 117, 118, 120, 125, 129, 130, 134, 135, 138, 139, 140, 142, 143, 144, 147, 148, 149, 154, 156, 157, 159, 160, 164, 166, 167, 168, 169, 170, 173, 176, 178, 186, 189, 192, 193, 196, 197, 199, 200, 201, 202, 203, 204, 207, 208, 211, 212, 213, 214, 217, 218, 219, 222, 225, 235, 236, 237, 240, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 746, 747, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 830, 846, 848, 850, 853, 857, 871], "design": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 33, 41, 59, 70, 71, 74, 79, 80, 81, 85, 96, 110, 111, 112, 118, 130, 134, 139, 142, 144, 149, 158, 159, 170, 178, 186, 188, 189, 196, 198, 200, 201, 202, 204, 205, 207, 208, 219, 222, 227, 240, 253, 255, 260, 261, 262, 263, 337, 380, 383, 405, 414, 438, 439, 441, 442, 470, 471, 472, 479, 481, 483, 486, 487, 488, 492, 496, 549, 551, 578, 585, 592, 602, 671, 675, 714, 791, 809, 810, 835, 847, 850, 852, 859, 871], "pass": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 33, 41, 42, 58, 70, 71, 74, 79, 80, 81, 85, 96, 110, 111, 112, 118, 130, 132, 134, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 153, 154, 156, 164, 165, 166, 167, 168, 169, 170, 178, 181, 187, 189, 193, 196, 197, 198, 200, 201, 202, 203, 204, 207, 208, 211, 212, 213, 214, 217, 219, 222, 224, 226, 227, 230, 231, 232, 235, 236, 240, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 298, 299, 300, 301, 302, 303, 304, 307, 311, 312, 313, 317, 318, 319, 324, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 416, 419, 420, 422, 424, 427, 428, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 446, 447, 448, 453, 454, 458, 459, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 512, 513, 514, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 539, 543, 546, 549, 550, 551, 552, 553, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 578, 579, 581, 582, 585, 586, 587, 590, 591, 592, 593, 595, 597, 598, 599, 600, 601, 602, 604, 605, 606, 608, 609, 610, 612, 613, 614, 615, 616, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 635, 637, 638, 639, 641, 642, 643, 644, 653, 654, 655, 656, 658, 660, 661, 662, 663, 664, 665, 666, 670, 677, 678, 679, 680, 681, 685, 686, 687, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 707, 708, 709, 710, 714, 718, 719, 721, 722, 723, 724, 727, 728, 733, 737, 738, 739, 746, 751, 754, 755, 758, 760, 762, 763, 764, 766, 768, 769, 770, 771, 772, 773, 775, 776, 777, 778, 781, 782, 783, 786, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 807, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 828, 830, 834, 835, 846, 848, 850, 853, 871], "zero": [1, 2, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 24, 31, 32, 33, 34, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 53, 54, 57, 58, 62, 68, 70, 71, 72, 74, 79, 80, 81, 85, 87, 90, 91, 92, 96, 106, 109, 110, 111, 112, 117, 118, 130, 134, 138, 139, 140, 142, 144, 147, 149, 150, 156, 158, 160, 164, 166, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 217, 218, 219, 222, 226, 227, 237, 253, 254, 255, 258, 260, 261, 262, 263, 265, 266, 267, 268, 270, 271, 274, 275, 276, 277, 279, 292, 293, 349, 353, 355, 363, 405, 409, 414, 415, 416, 437, 439, 441, 442, 443, 444, 466, 470, 471, 472, 473, 484, 523, 534, 550, 551, 570, 592, 605, 641, 642, 643, 651, 655, 670, 677, 678, 680, 681, 685, 686, 690, 692, 693, 694, 702, 705, 708, 710, 717, 718, 719, 720, 721, 723, 738, 753, 757, 767, 768, 791, 796, 801, 802, 826, 830, 846, 853, 856, 871], "phase": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 27, 33, 41, 70, 71, 74, 79, 80, 81, 85, 96, 102, 103, 110, 111, 112, 118, 130, 134, 139, 142, 144, 149, 165, 170, 188, 189, 193, 196, 198, 199, 200, 201, 202, 204, 207, 208, 219, 227, 237, 240, 255, 260, 261, 262, 263, 265, 266, 267, 268, 271, 274, 275, 276, 286, 336, 365, 405, 414, 416, 437, 439, 441, 442, 444, 470, 471, 472, 516, 521, 531, 534, 547, 550, 612, 718, 719, 728, 779, 826, 837, 847, 871], "non": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 24, 33, 39, 40, 41, 45, 49, 58, 68, 70, 71, 74, 79, 80, 81, 85, 90, 96, 106, 110, 111, 112, 118, 130, 134, 139, 140, 141, 142, 144, 148, 149, 156, 163, 164, 167, 169, 170, 173, 178, 179, 183, 187, 188, 189, 193, 196, 198, 199, 200, 201, 202, 204, 205, 207, 208, 211, 217, 227, 228, 229, 240, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 267, 268, 269, 270, 271, 274, 275, 276, 282, 292, 293, 313, 348, 349, 353, 355, 409, 411, 415, 432, 439, 441, 442, 444, 469, 470, 471, 472, 487, 523, 530, 536, 547, 549, 550, 551, 564, 578, 579, 596, 602, 605, 625, 651, 669, 670, 677, 678, 680, 681, 685, 686, 690, 692, 693, 694, 721, 728, 738, 755, 766, 769, 770, 777, 790, 793, 797, 798, 800, 826, 828, 830, 839, 846, 850, 852, 853, 868, 871], "causal": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 33, 41, 70, 71, 74, 79, 80, 81, 85, 96, 110, 111, 112, 118, 130, 134, 139, 142, 144, 149, 170, 189, 193, 196, 198, 199, 200, 201, 202, 204, 207, 208, 227, 255, 260, 261, 262, 263, 409, 439, 441, 442, 470, 471, 472], "bandstop": [1, 5, 79, 134, 200, 470, 471, 472, 791], "domain": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 33, 41, 45, 70, 71, 74, 79, 80, 81, 85, 96, 100, 110, 111, 112, 118, 130, 132, 134, 139, 142, 144, 149, 163, 164, 170, 189, 193, 196, 198, 199, 200, 201, 204, 207, 208, 214, 227, 237, 238, 239, 240, 252, 255, 260, 261, 262, 263, 405, 414, 415, 439, 441, 442, 443, 444, 470, 471, 472, 533, 534, 639, 692, 694, 707, 708, 709, 710, 727, 733, 852, 871], "ham": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 33, 41, 71, 74, 79, 80, 81, 85, 96, 110, 111, 112, 118, 130, 134, 139, 142, 144, 149, 189, 193, 199, 200, 201, 202, 204, 207, 208, 227, 255, 260, 261, 262, 263, 405, 414, 439, 441, 442, 470, 471, 472, 708, 710, 792, 871], "0194": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 33, 41, 71, 74, 79, 80, 81, 85, 96, 110, 111, 112, 118, 130, 134, 139, 142, 144, 149, 189, 193, 199, 200, 201, 202, 207, 208, 227], "passband": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 33, 41, 70, 71, 74, 79, 80, 81, 85, 96, 110, 111, 112, 118, 130, 134, 139, 142, 144, 149, 170, 189, 193, 196, 198, 200, 201, 202, 204, 207, 208, 227, 846], "rippl": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 33, 41, 71, 74, 79, 80, 81, 85, 96, 110, 111, 112, 118, 130, 134, 139, 142, 144, 149, 189, 193, 200, 201, 202, 207, 208, 227], "db": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 33, 41, 70, 71, 74, 79, 80, 81, 85, 96, 105, 106, 110, 111, 112, 118, 126, 130, 134, 135, 139, 140, 142, 144, 149, 167, 170, 189, 193, 196, 198, 199, 200, 201, 202, 204, 207, 208, 211, 214, 217, 219, 227, 235, 236, 237, 255, 260, 261, 262, 263, 265, 306, 307, 365, 367, 436, 439, 470, 471, 472, 486, 496, 523, 547, 548, 550, 635, 685, 690, 692, 693, 694, 738, 754, 770, 779, 783, 786, 792, 794, 826, 853, 871], "stopband": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 33, 41, 71, 74, 79, 80, 81, 85, 96, 110, 111, 112, 118, 130, 134, 139, 142, 144, 149, 189, 193, 200, 201, 202, 207, 208, 227], "attenu": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 33, 41, 71, 74, 79, 80, 81, 85, 96, 110, 111, 112, 118, 130, 134, 139, 142, 144, 149, 160, 189, 193, 200, 201, 202, 207, 208, 227, 255, 260, 261, 262, 263, 405, 414, 439, 441, 442, 470, 471, 472, 853, 871], "lower": [1, 2, 5, 8, 9, 10, 12, 13, 14, 15, 16, 18, 21, 22, 33, 36, 39, 41, 48, 53, 54, 60, 68, 70, 71, 74, 79, 80, 85, 96, 104, 109, 110, 111, 112, 117, 118, 124, 130, 132, 134, 139, 140, 142, 144, 149, 154, 158, 170, 178, 179, 182, 193, 196, 198, 199, 200, 201, 202, 203, 204, 208, 214, 224, 225, 226, 227, 230, 232, 237, 255, 257, 260, 261, 262, 263, 267, 268, 269, 271, 274, 275, 276, 403, 405, 408, 410, 429, 439, 441, 470, 471, 472, 510, 523, 524, 549, 550, 555, 560, 564, 582, 601, 669, 676, 677, 679, 680, 690, 691, 692, 694, 707, 708, 709, 710, 755, 757, 762, 769, 770, 776, 777, 781, 790, 791, 792, 793, 796, 798, 800, 801, 802, 826, 828, 871], "transit": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 33, 41, 70, 71, 74, 79, 80, 81, 85, 96, 110, 111, 112, 118, 130, 134, 139, 142, 144, 149, 170, 189, 193, 196, 198, 200, 201, 202, 204, 207, 208, 227, 253, 255, 260, 261, 262, 263, 405, 414, 439, 441, 442, 470, 471, 472, 552, 582, 804, 853, 871], "bandwidth": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 33, 41, 70, 71, 74, 79, 80, 81, 85, 96, 101, 110, 111, 112, 118, 130, 134, 139, 142, 144, 149, 170, 189, 193, 196, 198, 200, 201, 202, 204, 207, 208, 227, 237, 255, 260, 261, 262, 263, 408, 416, 442, 470, 471, 472, 523, 524, 692, 694, 697, 700, 702, 707, 709, 719, 722, 770], "50": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 28, 33, 34, 40, 41, 44, 45, 46, 64, 70, 74, 78, 79, 80, 81, 85, 87, 92, 96, 100, 105, 106, 109, 110, 111, 112, 117, 118, 130, 133, 134, 135, 141, 142, 144, 147, 149, 156, 158, 164, 166, 167, 168, 169, 170, 176, 178, 182, 183, 187, 189, 192, 193, 196, 198, 199, 200, 201, 202, 204, 206, 211, 212, 213, 219, 222, 223, 224, 226, 227, 230, 231, 232, 237, 240, 252, 330, 438, 470, 471, 472, 532, 559, 647, 652, 670, 678, 689, 738, 786, 846, 853, 871], "hz": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 32, 33, 41, 66, 69, 70, 71, 74, 78, 79, 80, 81, 85, 87, 90, 91, 92, 96, 101, 104, 105, 106, 110, 111, 112, 118, 120, 124, 130, 134, 135, 139, 140, 142, 144, 149, 164, 165, 166, 167, 170, 178, 181, 182, 187, 188, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 217, 219, 224, 225, 226, 227, 235, 236, 240, 252, 255, 260, 261, 262, 263, 405, 408, 414, 438, 439, 441, 442, 444, 470, 471, 472, 523, 524, 550, 555, 558, 562, 563, 569, 571, 574, 578, 582, 656, 676, 690, 692, 693, 694, 697, 700, 707, 709, 715, 721, 722, 768, 770, 779, 786, 791, 792, 847, 856, 857], "upper": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 33, 38, 41, 60, 68, 70, 74, 79, 81, 85, 110, 111, 112, 117, 118, 124, 130, 132, 134, 139, 140, 142, 144, 157, 164, 170, 189, 193, 196, 198, 199, 200, 201, 202, 204, 207, 208, 227, 236, 237, 240, 255, 257, 258, 259, 260, 261, 262, 263, 267, 268, 269, 271, 274, 275, 276, 278, 403, 405, 408, 410, 429, 439, 441, 447, 470, 471, 472, 523, 524, 549, 550, 555, 582, 669, 676, 677, 678, 679, 680, 681, 690, 691, 692, 693, 694, 707, 708, 709, 710, 755, 757, 762, 770, 776, 777, 781, 790, 792, 793, 796, 798, 800, 801, 802, 871], "7921": 1, "601": [1, 5, 13, 65, 138, 147, 196, 201, 211, 227], "parallel": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 31, 32, 33, 40, 41, 44, 49, 64, 70, 71, 74, 76, 79, 80, 81, 84, 85, 87, 92, 96, 97, 104, 106, 107, 109, 110, 111, 112, 116, 118, 121, 130, 134, 139, 142, 144, 148, 149, 156, 157, 164, 170, 174, 179, 180, 181, 182, 183, 189, 193, 196, 197, 198, 200, 201, 202, 204, 205, 207, 208, 219, 224, 225, 226, 227, 236, 240, 252, 255, 260, 261, 262, 263, 266, 267, 268, 270, 271, 274, 275, 276, 278, 349, 350, 352, 354, 405, 406, 408, 409, 413, 414, 416, 419, 420, 441, 442, 443, 446, 448, 459, 461, 466, 468, 469, 470, 471, 472, 509, 512, 513, 523, 524, 528, 533, 534, 555, 562, 563, 586, 630, 633, 638, 641, 642, 643, 655, 677, 678, 679, 680, 681, 692, 694, 695, 696, 697, 698, 699, 700, 707, 708, 709, 710, 718, 719, 720, 721, 722, 723, 770, 773, 792, 838, 850, 853, 859, 871], "n_job": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 40, 41, 44, 49, 70, 71, 74, 76, 79, 80, 81, 84, 85, 87, 92, 93, 96, 97, 100, 104, 106, 107, 109, 110, 111, 112, 116, 118, 121, 130, 134, 139, 142, 144, 148, 149, 156, 157, 164, 170, 174, 179, 180, 181, 182, 183, 189, 193, 196, 197, 198, 200, 201, 202, 204, 205, 207, 208, 219, 222, 224, 225, 226, 227, 230, 231, 232, 236, 252, 255, 260, 261, 262, 263, 266, 267, 268, 270, 271, 274, 275, 276, 278, 349, 350, 352, 354, 405, 406, 408, 409, 413, 414, 415, 416, 419, 420, 441, 442, 443, 446, 459, 461, 470, 471, 472, 509, 512, 513, 523, 524, 533, 534, 555, 562, 563, 630, 638, 641, 642, 643, 655, 677, 678, 679, 680, 681, 692, 694, 695, 696, 697, 698, 699, 700, 707, 708, 709, 710, 718, 719, 720, 721, 722, 723, 770, 773, 792, 828, 850, 871], "backend": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 40, 41, 44, 49, 70, 71, 74, 76, 79, 80, 81, 84, 85, 87, 92, 96, 97, 104, 106, 107, 109, 110, 111, 112, 116, 118, 121, 130, 132, 134, 139, 142, 144, 148, 149, 154, 156, 157, 158, 164, 169, 170, 174, 179, 180, 181, 182, 183, 189, 193, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 219, 224, 225, 226, 227, 236, 255, 260, 261, 267, 268, 271, 274, 275, 276, 462, 470, 471, 472, 550, 689, 738, 745, 747, 748, 749, 750, 768, 785, 791, 796, 801, 803, 807, 808, 809, 810, 828, 829, 834, 850, 859, 871], "sequentialbackend": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 40, 41, 44, 49, 70, 71, 74, 76, 79, 80, 81, 84, 85, 87, 92, 96, 97, 104, 106, 107, 109, 110, 111, 112, 116, 118, 121, 130, 134, 139, 142, 144, 148, 149, 156, 157, 164, 170, 174, 179, 180, 181, 182, 183, 189, 193, 196, 197, 198, 200, 201, 202, 204, 205, 207, 208, 219, 224, 225, 226, 227, 236], "concurr": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 40, 41, 44, 49, 70, 71, 74, 76, 79, 80, 81, 84, 85, 87, 92, 96, 97, 104, 106, 107, 109, 110, 111, 112, 116, 118, 121, 130, 134, 139, 142, 144, 148, 149, 156, 157, 164, 170, 174, 179, 180, 181, 182, 183, 189, 193, 196, 197, 198, 200, 201, 202, 204, 205, 207, 208, 219, 224, 225, 226, 227, 236], "worker": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 40, 41, 44, 49, 70, 71, 74, 76, 79, 80, 81, 84, 85, 87, 92, 96, 97, 104, 106, 107, 109, 110, 111, 112, 116, 118, 121, 130, 134, 139, 142, 144, 148, 149, 156, 157, 164, 170, 174, 179, 180, 181, 182, 183, 189, 193, 196, 197, 198, 200, 201, 202, 204, 205, 207, 208, 219, 224, 225, 226, 227, 236, 859], "done": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 66, 68, 70, 71, 74, 76, 77, 79, 80, 81, 84, 85, 87, 89, 90, 91, 92, 96, 97, 98, 100, 101, 104, 105, 106, 107, 109, 110, 111, 112, 116, 118, 121, 128, 130, 131, 132, 133, 134, 138, 139, 141, 142, 144, 148, 149, 153, 154, 156, 157, 158, 159, 160, 164, 165, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 188, 189, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 211, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 236, 237, 253, 255, 258, 259, 260, 261, 262, 263, 265, 267, 268, 271, 274, 275, 276, 292, 293, 315, 354, 416, 466, 468, 469, 470, 471, 472, 517, 519, 520, 521, 550, 562, 563, 565, 567, 676, 690, 691, 693, 718, 719, 736, 738, 741, 754, 762, 792, 826, 830, 835, 836, 846, 850, 852, 853, 859, 871], "out": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 31, 32, 33, 34, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 53, 54, 57, 58, 66, 68, 70, 71, 72, 74, 76, 77, 79, 80, 81, 84, 85, 87, 89, 91, 92, 96, 97, 104, 106, 107, 109, 110, 111, 112, 116, 117, 118, 120, 121, 124, 128, 130, 132, 134, 135, 138, 139, 141, 142, 144, 148, 149, 154, 156, 157, 158, 164, 165, 168, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 187, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 214, 219, 222, 224, 225, 226, 227, 236, 237, 252, 255, 257, 260, 261, 262, 263, 265, 269, 284, 297, 333, 350, 351, 352, 405, 414, 439, 441, 470, 471, 472, 479, 493, 516, 524, 549, 550, 551, 564, 586, 592, 594, 682, 690, 692, 694, 718, 719, 726, 755, 762, 770, 774, 777, 782, 790, 793, 798, 800, 828, 829, 830, 836, 847, 848, 850, 853, 856, 857, 871], "elaps": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 40, 41, 44, 49, 70, 71, 74, 76, 79, 80, 81, 84, 85, 87, 92, 96, 97, 104, 106, 107, 109, 110, 111, 112, 116, 118, 121, 130, 134, 139, 142, 144, 148, 149, 156, 157, 164, 170, 174, 179, 180, 181, 182, 183, 189, 193, 196, 197, 198, 200, 201, 202, 204, 205, 207, 208, 219, 224, 225, 226, 227, 236], "remain": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 31, 32, 33, 34, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 53, 54, 57, 58, 66, 70, 71, 73, 74, 76, 79, 80, 81, 84, 85, 87, 89, 91, 92, 96, 97, 104, 106, 107, 109, 110, 111, 112, 116, 118, 121, 128, 130, 134, 135, 139, 142, 144, 148, 149, 154, 156, 157, 164, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 189, 193, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 219, 224, 225, 226, 227, 236, 255, 260, 261, 262, 263, 265, 267, 268, 271, 274, 275, 276, 292, 293, 349, 353, 354, 363, 364, 365, 403, 410, 426, 446, 447, 466, 468, 469, 470, 471, 472, 473, 528, 550, 631, 678, 690, 692, 693, 778, 838, 846, 856, 859, 871], "299": [1, 5, 33, 138, 167, 182, 222, 235], "finish": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 40, 41, 44, 49, 70, 71, 74, 76, 79, 80, 81, 84, 85, 87, 92, 96, 97, 104, 106, 107, 109, 110, 111, 112, 116, 118, 121, 130, 132, 134, 139, 142, 144, 148, 149, 156, 157, 164, 170, 174, 179, 180, 181, 182, 183, 189, 193, 196, 197, 198, 200, 201, 202, 204, 205, 207, 208, 213, 219, 224, 225, 226, 227, 236, 848, 871], "66": [1, 12, 13, 16, 19, 21, 34, 39, 40, 44, 78, 100, 105, 109, 111, 135, 142, 144, 156, 167, 174, 179, 182, 189, 192, 193, 202, 206, 222, 223, 226, 227, 240, 262, 263, 292, 293, 349, 353, 354, 363, 364, 365, 403, 410, 446, 447, 466, 468, 469, 528, 550, 778, 871], "id": [1, 5, 12, 21, 32, 33, 41, 44, 45, 48, 67, 69, 70, 71, 77, 78, 79, 87, 90, 91, 92, 96, 104, 105, 107, 109, 110, 138, 139, 140, 144, 147, 150, 160, 164, 166, 167, 169, 170, 175, 178, 180, 181, 183, 189, 193, 197, 200, 201, 202, 204, 217, 218, 219, 224, 236, 252, 255, 260, 261, 262, 265, 267, 268, 271, 273, 274, 275, 276, 279, 292, 293, 308, 349, 370, 419, 425, 427, 429, 431, 432, 444, 456, 470, 471, 472, 510, 511, 515, 545, 551, 562, 563, 572, 595, 602, 604, 605, 611, 639, 692, 693, 738, 771, 791, 796, 801, 816, 830, 850, 853, 871], "Not": [1, 8, 9, 11, 12, 16, 18, 21, 28, 32, 33, 44, 45, 48, 60, 67, 69, 70, 71, 72, 74, 77, 78, 79, 80, 85, 87, 90, 91, 92, 93, 94, 97, 100, 101, 104, 105, 106, 107, 109, 110, 111, 114, 118, 124, 125, 129, 133, 134, 135, 138, 139, 140, 141, 143, 144, 147, 149, 150, 164, 165, 166, 167, 169, 170, 175, 178, 180, 181, 182, 183, 189, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 217, 218, 219, 224, 225, 226, 227, 230, 232, 236, 262, 263, 268, 274, 275, 276, 411, 414, 438, 447, 551, 689, 690, 738, 774, 777, 802, 829, 853, 859], "metadata": [1, 4, 8, 9, 11, 12, 16, 18, 21, 28, 32, 33, 44, 45, 48, 60, 67, 69, 70, 71, 72, 77, 80, 85, 87, 90, 91, 92, 93, 94, 97, 98, 100, 101, 104, 105, 106, 107, 109, 110, 111, 114, 118, 125, 129, 133, 134, 135, 138, 139, 140, 143, 144, 145, 146, 147, 149, 150, 159, 163, 164, 170, 175, 178, 180, 181, 182, 183, 186, 187, 188, 189, 196, 197, 198, 200, 201, 202, 204, 208, 211, 217, 218, 219, 223, 224, 225, 226, 227, 230, 232, 235, 236, 255, 260, 261, 262, 263, 264, 265, 348, 427, 432, 470, 471, 472, 477, 601, 621, 690, 692, 693, 694, 762, 826, 847, 871], "33": [1, 8, 12, 13, 19, 21, 28, 32, 33, 34, 38, 39, 40, 44, 46, 74, 78, 100, 105, 106, 109, 111, 112, 127, 139, 142, 149, 158, 167, 168, 181, 192, 193, 200, 202, 206, 222, 223, 224, 226, 227, 231, 232, 255, 260, 261, 262, 263, 330, 444, 470, 471, 472, 514, 792, 853, 871], "interv": [1, 10, 11, 28, 32, 33, 37, 44, 45, 48, 60, 67, 68, 69, 70, 77, 80, 87, 90, 91, 92, 93, 94, 97, 100, 101, 104, 107, 109, 110, 114, 124, 125, 129, 138, 140, 142, 143, 147, 148, 149, 150, 164, 170, 174, 175, 176, 178, 180, 181, 182, 183, 189, 197, 198, 200, 201, 204, 207, 208, 218, 219, 224, 225, 226, 230, 232, 236, 252, 254, 255, 258, 259, 260, 261, 262, 263, 266, 267, 268, 270, 271, 274, 275, 276, 283, 341, 354, 427, 523, 533, 534, 550, 566, 567, 572, 608, 609, 640, 642, 667, 669, 690, 692, 693, 694, 703, 762, 783, 798, 847, 857, 871], "mode": [1, 5, 8, 9, 11, 22, 28, 30, 31, 32, 33, 34, 37, 38, 39, 40, 43, 44, 45, 46, 48, 50, 56, 57, 58, 59, 60, 67, 68, 69, 70, 71, 76, 77, 80, 83, 84, 90, 91, 92, 93, 94, 97, 100, 101, 104, 107, 109, 110, 111, 114, 116, 117, 124, 125, 128, 129, 134, 138, 139, 140, 142, 143, 147, 149, 150, 156, 157, 159, 164, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 187, 189, 193, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 213, 214, 218, 224, 225, 226, 227, 230, 232, 236, 237, 240, 252, 255, 257, 258, 260, 261, 262, 263, 267, 268, 269, 270, 271, 274, 275, 276, 283, 292, 293, 336, 349, 353, 354, 355, 359, 360, 363, 364, 365, 402, 403, 409, 410, 437, 441, 442, 443, 462, 466, 470, 471, 472, 509, 526, 527, 549, 550, 572, 578, 631, 653, 656, 685, 690, 691, 692, 693, 694, 716, 738, 764, 766, 768, 769, 770, 774, 777, 780, 781, 785, 790, 791, 792, 793, 796, 797, 798, 801, 802, 807, 830, 838, 859, 871], "mean": [1, 4, 8, 9, 10, 11, 14, 16, 19, 21, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 50, 56, 57, 58, 59, 60, 66, 67, 68, 69, 70, 71, 76, 77, 81, 83, 84, 90, 91, 92, 93, 94, 97, 98, 100, 101, 104, 107, 109, 110, 111, 114, 116, 117, 124, 125, 129, 135, 138, 139, 140, 141, 142, 143, 147, 148, 150, 154, 155, 156, 158, 164, 168, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 189, 193, 196, 197, 198, 199, 200, 201, 202, 204, 205, 207, 208, 211, 217, 218, 219, 222, 223, 224, 225, 226, 227, 230, 232, 235, 236, 237, 254, 255, 257, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 273, 274, 275, 276, 283, 286, 292, 293, 309, 313, 349, 354, 403, 409, 410, 412, 415, 424, 436, 437, 445, 462, 466, 468, 469, 470, 471, 472, 473, 479, 486, 492, 503, 509, 517, 523, 526, 527, 528, 533, 534, 549, 550, 554, 557, 560, 561, 564, 566, 569, 571, 576, 578, 587, 595, 608, 609, 635, 642, 643, 644, 653, 654, 656, 669, 672, 677, 678, 679, 680, 681, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 705, 708, 710, 717, 718, 719, 721, 738, 762, 764, 768, 769, 770, 772, 777, 790, 791, 792, 793, 796, 798, 800, 830, 835, 850, 852, 853, 856, 871], "activ": [1, 4, 5, 8, 11, 12, 16, 18, 19, 21, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 79, 80, 83, 84, 85, 86, 88, 89, 90, 92, 93, 94, 96, 97, 98, 100, 101, 104, 105, 106, 107, 109, 110, 111, 113, 114, 116, 117, 118, 119, 121, 127, 129, 131, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 153, 156, 157, 160, 164, 165, 166, 170, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 187, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 211, 212, 214, 217, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 236, 240, 253, 255, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 292, 293, 319, 343, 429, 432, 437, 444, 446, 450, 466, 468, 469, 470, 471, 472, 476, 487, 491, 503, 506, 516, 517, 518, 519, 520, 521, 528, 531, 547, 555, 565, 582, 608, 610, 612, 613, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 652, 655, 662, 665, 682, 685, 690, 692, 693, 694, 747, 757, 759, 766, 797, 802, 826, 828, 829, 830, 831, 833, 834, 837, 838, 846, 847, 850, 852, 853, 856, 859, 871], "projector": [1, 2, 4, 5, 8, 9, 16, 18, 21, 28, 31, 32, 33, 34, 39, 40, 41, 44, 45, 47, 48, 49, 50, 53, 54, 57, 58, 66, 67, 69, 71, 74, 80, 87, 89, 90, 91, 96, 98, 100, 106, 116, 118, 124, 129, 138, 139, 144, 147, 148, 149, 150, 160, 163, 164, 165, 166, 167, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 189, 193, 196, 197, 200, 201, 202, 208, 209, 210, 211, 218, 219, 223, 224, 225, 226, 227, 230, 232, 252, 255, 260, 261, 262, 263, 265, 269, 270, 292, 293, 349, 350, 351, 352, 353, 354, 363, 364, 365, 403, 410, 433, 434, 435, 436, 446, 447, 466, 468, 469, 470, 471, 472, 491, 517, 528, 550, 562, 563, 578, 608, 616, 635, 691, 695, 696, 697, 698, 699, 700, 701, 768, 778, 785, 789, 790, 791, 810, 822, 826, 846, 848, 850, 853, 871], "n_channel": [1, 16, 18, 19, 28, 31, 34, 41, 50, 57, 58, 62, 64, 67, 68, 69, 72, 73, 74, 78, 80, 81, 87, 96, 100, 111, 116, 124, 129, 138, 139, 140, 141, 147, 148, 149, 157, 160, 164, 165, 166, 170, 174, 175, 178, 179, 180, 188, 193, 196, 197, 200, 201, 202, 203, 204, 205, 208, 211, 214, 217, 219, 224, 225, 226, 227, 230, 232, 237, 252, 255, 257, 259, 260, 261, 262, 263, 264, 265, 292, 293, 308, 309, 313, 324, 363, 403, 404, 405, 408, 409, 410, 411, 412, 414, 416, 417, 419, 441, 442, 470, 471, 472, 549, 550, 551, 555, 558, 658, 675, 676, 690, 691, 692, 693, 694, 695, 696, 697, 709, 710, 718, 719, 720, 755, 758, 762, 768, 769, 770, 777, 791, 793, 798, 800, 808, 826, 871], "No": [1, 2, 4, 5, 8, 9, 12, 16, 18, 21, 33, 40, 45, 47, 49, 53, 54, 72, 77, 80, 85, 87, 98, 105, 106, 109, 110, 111, 113, 114, 118, 124, 125, 133, 134, 135, 138, 139, 140, 141, 144, 147, 149, 154, 164, 169, 170, 176, 182, 183, 188, 189, 193, 196, 199, 201, 202, 204, 207, 208, 217, 219, 222, 223, 227, 236, 255, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 380, 404, 419, 466, 468, 469, 470, 471, 472, 517, 519, 520, 521, 654, 792, 829, 830, 847, 852, 856], "gradiomet": [1, 22, 33, 34, 45, 58, 69, 71, 74, 77, 79, 84, 90, 97, 100, 105, 106, 107, 108, 110, 114, 116, 117, 140, 143, 144, 148, 160, 164, 165, 166, 167, 178, 181, 182, 186, 189, 196, 197, 198, 200, 202, 203, 204, 206, 207, 211, 212, 213, 214, 217, 219, 222, 224, 225, 226, 236, 252, 255, 257, 260, 261, 262, 263, 267, 268, 269, 271, 274, 275, 276, 292, 293, 349, 350, 351, 352, 353, 354, 363, 364, 365, 403, 410, 424, 446, 447, 466, 468, 469, 470, 471, 472, 506, 528, 547, 548, 549, 550, 560, 561, 562, 563, 564, 565, 566, 567, 569, 578, 589, 676, 690, 692, 693, 694, 755, 761, 762, 768, 769, 770, 772, 774, 776, 777, 778, 781, 790, 791, 793, 798, 799, 800, 826, 846, 850, 853, 856, 871], "forc": [1, 4, 144, 159, 164, 176, 189, 198, 252, 255, 260, 261, 262, 263, 303, 314, 359, 369, 371, 372, 373, 374, 376, 377, 379, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 470, 471, 472, 494, 517, 604, 690, 692, 693, 694, 738, 828, 830, 847, 871], "n_grad": [1, 189, 204, 252, 350, 351, 352, 562, 563], "n_eeg": [1, 144, 189, 204, 252, 350, 351, 352, 562, 563], "axial": [1, 32, 46, 79, 81, 89, 106, 108, 128, 133, 140, 144, 158, 170, 178, 181, 189, 196, 203, 204, 222, 258, 275, 276, 738, 756, 766, 853], "100": [1, 2, 5, 10, 11, 13, 16, 19, 22, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 43, 44, 47, 49, 50, 52, 53, 54, 56, 57, 58, 59, 72, 73, 76, 78, 80, 83, 84, 87, 89, 92, 93, 98, 100, 101, 105, 106, 108, 109, 111, 112, 113, 116, 117, 120, 122, 124, 132, 134, 135, 138, 139, 141, 142, 143, 144, 147, 149, 154, 156, 167, 168, 170, 174, 175, 176, 177, 178, 179, 181, 182, 188, 189, 192, 193, 198, 199, 200, 202, 204, 206, 217, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 240, 252, 255, 260, 261, 262, 263, 270, 355, 424, 443, 468, 469, 470, 471, 472, 493, 561, 569, 578, 656, 676, 692, 694, 720, 723, 728, 738, 768, 786, 791, 811, 847, 852, 856, 871], "pca": [1, 5, 11, 13, 15, 16, 17, 18, 20, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 63, 66, 67, 69, 70, 71, 72, 74, 76, 80, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 100, 101, 104, 105, 106, 107, 108, 113, 114, 115, 116, 117, 118, 120, 121, 124, 126, 128, 129, 130, 138, 139, 140, 144, 147, 148, 149, 150, 154, 155, 156, 158, 160, 164, 165, 166, 167, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 189, 193, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 211, 212, 213, 214, 218, 219, 224, 225, 226, 227, 230, 232, 255, 260, 262, 263, 265, 268, 274, 276, 292, 293, 349, 363, 367, 417, 466, 469, 470, 471, 523, 524, 533, 534, 547, 550, 605, 782, 846, 857, 871], "01": [1, 6, 8, 11, 12, 13, 19, 21, 24, 25, 32, 33, 34, 45, 58, 65, 69, 71, 74, 76, 80, 81, 87, 88, 89, 90, 100, 105, 106, 108, 109, 110, 117, 118, 120, 121, 124, 127, 128, 135, 137, 139, 140, 144, 148, 149, 152, 156, 157, 162, 164, 165, 166, 167, 168, 170, 172, 178, 179, 181, 183, 185, 189, 192, 193, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 219, 222, 223, 224, 226, 227, 229, 230, 231, 232, 236, 237, 239, 240, 251, 252, 254, 255, 260, 261, 336, 338, 342, 374, 396, 397, 403, 410, 411, 470, 471, 472, 482, 564, 569, 572, 576, 583, 587, 685, 847], "02": [1, 2, 5, 11, 13, 19, 20, 32, 33, 34, 55, 62, 65, 79, 81, 82, 89, 100, 105, 106, 108, 111, 117, 120, 123, 127, 128, 134, 140, 144, 146, 148, 155, 158, 162, 168, 170, 172, 178, 181, 192, 193, 199, 203, 204, 205, 206, 208, 213, 222, 223, 224, 226, 227, 229, 231, 232, 237, 240, 241, 251, 252, 255, 260, 261, 316, 466, 469, 470, 471, 472, 482, 720, 723], "creat": [1, 2, 4, 5, 8, 9, 11, 15, 16, 18, 24, 26, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 56, 57, 58, 59, 60, 62, 64, 66, 67, 68, 69, 71, 73, 77, 80, 83, 85, 89, 90, 92, 100, 101, 104, 105, 106, 107, 109, 110, 111, 114, 117, 118, 120, 122, 124, 125, 129, 131, 132, 133, 134, 139, 140, 143, 144, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 188, 189, 193, 196, 197, 198, 199, 200, 202, 203, 211, 214, 219, 220, 221, 223, 225, 227, 230, 232, 235, 236, 254, 255, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 279, 284, 292, 293, 297, 302, 303, 304, 307, 321, 349, 350, 351, 355, 360, 366, 367, 416, 420, 425, 427, 438, 439, 444, 470, 471, 472, 483, 488, 493, 506, 507, 508, 513, 514, 516, 539, 549, 550, 552, 553, 555, 559, 562, 563, 566, 567, 570, 575, 602, 604, 628, 629, 630, 632, 635, 639, 640, 644, 667, 670, 676, 685, 690, 691, 692, 693, 694, 703, 716, 718, 719, 721, 722, 726, 738, 741, 743, 746, 751, 754, 755, 761, 762, 764, 766, 769, 770, 773, 774, 775, 776, 777, 781, 783, 786, 789, 790, 791, 792, 793, 794, 796, 798, 800, 801, 809, 810, 821, 826, 828, 834, 838, 847, 851, 856, 859, 861, 871], "an": [1, 4, 5, 7, 11, 12, 15, 18, 19, 21, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 53, 54, 55, 57, 58, 59, 60, 62, 66, 67, 69, 71, 72, 76, 79, 80, 81, 85, 87, 89, 90, 91, 92, 98, 101, 104, 105, 106, 107, 108, 109, 111, 112, 116, 117, 118, 119, 124, 125, 126, 127, 129, 132, 133, 134, 135, 138, 139, 142, 144, 147, 148, 149, 150, 151, 153, 154, 156, 158, 160, 161, 162, 163, 164, 165, 168, 169, 173, 174, 175, 176, 177, 179, 181, 184, 185, 186, 187, 188, 189, 192, 193, 196, 197, 198, 199, 200, 201, 203, 204, 206, 207, 208, 211, 212, 213, 214, 217, 218, 219, 222, 223, 224, 226, 227, 230, 231, 232, 235, 236, 238, 239, 240, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 284, 285, 287, 288, 289, 290, 291, 292, 293, 295, 297, 298, 299, 307, 309, 311, 312, 313, 316, 319, 320, 323, 325, 334, 342, 343, 344, 349, 353, 355, 356, 358, 360, 363, 364, 366, 367, 379, 382, 383, 387, 402, 403, 409, 410, 411, 415, 418, 420, 421, 422, 425, 427, 428, 430, 432, 437, 438, 439, 442, 443, 444, 445, 446, 450, 451, 453, 458, 462, 466, 468, 469, 470, 471, 472, 473, 476, 478, 480, 481, 486, 487, 488, 489, 491, 494, 496, 497, 502, 503, 505, 506, 509, 512, 513, 514, 516, 517, 519, 523, 524, 526, 527, 528, 530, 531, 532, 535, 537, 539, 541, 543, 546, 547, 549, 550, 551, 552, 553, 554, 558, 560, 562, 563, 564, 566, 567, 569, 571, 576, 577, 578, 579, 585, 588, 591, 596, 597, 598, 599, 600, 603, 605, 607, 608, 610, 618, 620, 624, 625, 627, 629, 630, 632, 635, 638, 639, 640, 643, 646, 650, 655, 656, 662, 665, 667, 670, 671, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 702, 703, 708, 710, 711, 721, 722, 725, 726, 728, 730, 736, 738, 739, 747, 751, 753, 754, 755, 759, 760, 762, 764, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 781, 782, 785, 786, 788, 789, 790, 791, 792, 793, 794, 795, 796, 798, 799, 800, 801, 804, 806, 808, 811, 817, 818, 819, 826, 828, 829, 830, 834, 835, 836, 837, 842, 847, 848, 849, 850, 852, 853, 854, 856, 857, 859, 871], "oper": [1, 5, 11, 15, 18, 22, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 42, 43, 44, 45, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 66, 67, 69, 71, 81, 85, 87, 89, 90, 92, 101, 104, 105, 106, 107, 118, 121, 129, 132, 138, 139, 140, 143, 144, 147, 149, 150, 153, 154, 160, 161, 162, 163, 164, 165, 167, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 186, 189, 193, 197, 198, 199, 200, 202, 203, 204, 207, 211, 218, 219, 224, 225, 227, 230, 232, 240, 253, 254, 255, 257, 260, 261, 262, 263, 264, 265, 266, 270, 271, 273, 274, 278, 280, 281, 292, 293, 295, 297, 307, 311, 312, 323, 329, 342, 348, 367, 368, 375, 382, 404, 409, 412, 419, 424, 425, 428, 441, 442, 443, 444, 448, 449, 450, 466, 467, 468, 469, 470, 471, 472, 473, 479, 486, 503, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 543, 548, 550, 553, 555, 572, 576, 592, 595, 597, 605, 610, 620, 631, 632, 642, 643, 644, 651, 653, 654, 655, 656, 669, 677, 678, 679, 680, 681, 684, 687, 691, 718, 719, 720, 721, 722, 723, 725, 754, 795, 803, 806, 807, 818, 826, 828, 830, 836, 838, 847, 850, 856, 857, 869, 871], "subspac": [1, 11, 15, 18, 28, 29, 30, 31, 34, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 53, 54, 56, 57, 58, 59, 60, 66, 67, 69, 71, 85, 87, 89, 90, 91, 92, 101, 104, 105, 106, 107, 118, 129, 138, 139, 140, 143, 144, 147, 149, 150, 160, 164, 170, 174, 175, 176, 177, 178, 179, 180, 181, 189, 197, 198, 200, 202, 203, 204, 207, 218, 227, 230, 232, 252, 565, 578, 826], "dimens": [1, 11, 15, 18, 19, 28, 29, 30, 31, 34, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 53, 54, 56, 57, 58, 59, 60, 66, 67, 69, 71, 85, 87, 89, 90, 91, 92, 101, 104, 105, 106, 107, 118, 124, 129, 138, 139, 140, 143, 144, 147, 149, 150, 158, 160, 164, 170, 174, 175, 176, 177, 178, 179, 180, 181, 189, 192, 193, 197, 198, 200, 202, 203, 204, 206, 218, 219, 222, 224, 225, 226, 227, 230, 231, 232, 236, 237, 240, 255, 257, 260, 261, 262, 263, 267, 268, 269, 270, 271, 273, 274, 275, 276, 283, 308, 355, 406, 409, 413, 414, 416, 418, 442, 443, 466, 468, 469, 470, 471, 472, 523, 524, 526, 527, 533, 534, 549, 550, 564, 670, 671, 675, 677, 678, 680, 681, 690, 692, 693, 694, 707, 708, 710, 720, 728, 738, 747, 755, 770, 777, 781, 790, 791, 793, 798, 800, 826, 846, 853, 856, 871], "fran\u00e7oi": [1, 69, 76, 106, 181, 182, 189, 197, 240, 550, 559, 853], "tadel": [1, 106, 181, 182, 189, 240], "sylvain": [1, 106, 181, 182, 189, 240], "baillet": [1, 106, 181, 182, 189, 240], "john": [1, 18, 19, 50, 66, 80, 106, 123, 176, 181, 182, 189, 240, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 381, 382, 407, 409, 421, 466, 470, 471, 472, 517, 528, 550, 565, 582, 647, 652, 690, 693, 847, 853, 871], "c": [1, 4, 10, 11, 12, 19, 22, 43, 50, 68, 72, 93, 106, 109, 112, 118, 123, 132, 135, 159, 169, 174, 181, 182, 186, 189, 192, 193, 203, 224, 225, 226, 227, 237, 240, 252, 253, 266, 271, 272, 273, 295, 330, 349, 355, 381, 396, 397, 409, 410, 444, 447, 466, 470, 471, 472, 507, 513, 525, 550, 558, 587, 605, 650, 655, 720, 723, 738, 828, 829, 830, 834, 835, 837, 842, 845, 846, 847, 853, 854, 856, 859, 860, 871], "mosher": [1, 50, 106, 181, 182, 189, 240, 295, 853], "dimitrio": [1, 10, 106, 181, 182, 189, 240, 847], "pantazi": [1, 10, 106, 181, 182, 189, 240, 847], "richard": [1, 50, 106, 181, 182, 189, 206, 236, 240, 382, 550, 558, 672, 847, 853, 858, 871], "leahi": [1, 50, 106, 181, 182, 189, 240, 295, 853], "user": [1, 44, 73, 91, 106, 132, 140, 154, 163, 165, 169, 170, 181, 182, 187, 188, 189, 198, 199, 211, 240, 253, 255, 260, 261, 262, 263, 264, 265, 267, 268, 271, 273, 274, 275, 276, 371, 372, 373, 374, 376, 377, 379, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 401, 424, 432, 463, 470, 471, 472, 488, 550, 569, 585, 636, 688, 689, 690, 693, 755, 768, 775, 785, 791, 800, 828, 830, 832, 834, 835, 837, 841, 846, 847, 849, 850, 852, 854, 855, 871], "friendli": [1, 106, 181, 182, 189, 240], "applic": [1, 15, 68, 71, 85, 106, 147, 160, 168, 176, 181, 182, 189, 193, 199, 202, 203, 204, 207, 237, 240, 255, 260, 261, 262, 263, 405, 410, 414, 427, 439, 441, 442, 455, 470, 471, 472, 494, 509, 510, 551, 578, 601, 604, 692, 694, 709, 738, 770, 791, 811, 830, 833, 837, 842, 850, 853, 871], "analysi": [1, 3, 6, 8, 13, 15, 17, 20, 41, 42, 43, 68, 72, 80, 85, 93, 94, 98, 106, 124, 132, 138, 140, 142, 143, 151, 152, 153, 158, 159, 165, 166, 169, 170, 171, 172, 176, 181, 182, 186, 188, 189, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 211, 212, 214, 219, 222, 223, 224, 226, 227, 235, 239, 240, 255, 260, 261, 262, 263, 265, 267, 268, 270, 271, 272, 274, 275, 276, 292, 293, 307, 309, 323, 348, 349, 355, 358, 367, 397, 403, 411, 417, 427, 432, 444, 460, 466, 470, 471, 472, 481, 516, 517, 531, 541, 547, 550, 551, 558, 564, 575, 576, 605, 635, 639, 643, 650, 671, 672, 675, 677, 690, 692, 693, 694, 702, 707, 709, 720, 721, 722, 723, 738, 762, 771, 800, 810, 826, 829, 831, 833, 837, 842, 845, 846, 847, 852, 853, 854, 859, 861, 868, 869, 871], "intellig": [1, 106, 181, 182, 189, 192, 240, 409, 443], "neurosci": [1, 4, 10, 16, 19, 42, 68, 72, 106, 110, 149, 181, 182, 189, 192, 193, 199, 227, 240, 272, 355, 404, 409, 419, 550, 555, 558, 650, 677, 678, 680, 681, 720, 723, 845, 847, 852], "2011": [1, 15, 21, 33, 58, 85, 106, 149, 167, 181, 182, 187, 189, 199, 219, 222, 240, 292, 411, 469, 517, 551, 683, 684, 853], "13": [1, 6, 9, 10, 11, 12, 16, 18, 19, 20, 21, 26, 28, 31, 32, 33, 34, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 53, 54, 57, 58, 72, 74, 77, 78, 80, 81, 82, 88, 90, 91, 93, 94, 97, 100, 101, 103, 104, 105, 106, 107, 109, 110, 111, 114, 117, 118, 121, 127, 129, 130, 131, 134, 140, 142, 143, 144, 147, 148, 150, 156, 160, 164, 167, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 189, 193, 198, 199, 201, 204, 206, 208, 211, 217, 222, 223, 224, 225, 226, 227, 230, 232, 236, 237, 240, 255, 258, 259, 260, 261, 262, 263, 266, 267, 268, 271, 273, 274, 275, 276, 278, 330, 354, 374, 396, 414, 424, 438, 439, 441, 442, 444, 470, 471, 472, 550, 566, 567, 578, 605, 621, 624, 653, 656, 690, 693, 721, 722, 772, 783, 794, 824, 826, 845, 846, 853], "doi": [1, 4, 8, 10, 12, 13, 15, 16, 18, 19, 21, 32, 34, 39, 41, 42, 43, 45, 50, 53, 54, 57, 58, 64, 68, 69, 72, 73, 76, 80, 81, 85, 91, 98, 106, 109, 110, 114, 116, 118, 123, 126, 132, 135, 139, 142, 149, 153, 155, 160, 174, 176, 178, 181, 182, 189, 192, 193, 197, 199, 201, 202, 203, 204, 205, 207, 219, 222, 223, 227, 235, 240, 255, 260, 261, 262, 263, 266, 271, 272, 286, 292, 293, 295, 349, 355, 374, 381, 382, 386, 387, 396, 397, 403, 404, 407, 409, 410, 411, 419, 421, 427, 466, 468, 469, 470, 471, 472, 517, 518, 528, 532, 549, 550, 551, 555, 558, 559, 561, 564, 565, 578, 582, 585, 586, 593, 635, 643, 647, 650, 652, 655, 674, 676, 677, 678, 679, 680, 681, 683, 684, 692, 694, 702, 707, 708, 709, 720, 723, 755, 845, 846, 847, 850, 853], "10": [1, 4, 5, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 21, 22, 28, 31, 32, 33, 34, 37, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 53, 54, 57, 58, 59, 62, 64, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 85, 87, 88, 89, 90, 91, 92, 98, 100, 101, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 123, 124, 125, 126, 127, 132, 133, 134, 135, 138, 139, 140, 142, 143, 144, 149, 153, 154, 155, 156, 157, 158, 160, 164, 165, 166, 167, 168, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 188, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 212, 213, 214, 217, 218, 219, 222, 223, 224, 226, 227, 230, 231, 232, 235, 236, 237, 240, 254, 255, 258, 259, 260, 261, 262, 263, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 286, 292, 293, 295, 304, 307, 319, 325, 330, 335, 339, 342, 345, 346, 347, 349, 355, 360, 374, 381, 382, 386, 387, 396, 397, 403, 404, 405, 407, 409, 410, 411, 414, 419, 421, 424, 427, 438, 439, 441, 442, 447, 466, 468, 469, 470, 471, 472, 494, 507, 508, 517, 518, 528, 532, 537, 549, 550, 551, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 569, 570, 571, 574, 575, 578, 582, 585, 586, 593, 604, 626, 635, 643, 647, 650, 652, 654, 655, 656, 671, 673, 674, 676, 677, 678, 679, 680, 681, 683, 684, 690, 692, 693, 694, 702, 707, 708, 709, 720, 722, 723, 728, 738, 743, 753, 755, 768, 770, 777, 779, 780, 785, 786, 791, 796, 801, 829, 830, 833, 836, 845, 846, 847, 850, 853, 856, 859], "1155": [1, 106, 181, 182, 189, 240], "879716": [1, 106, 181, 182, 189, 240], "total": [1, 2, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 234, 235, 236, 237, 239, 255, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 353, 368, 420, 470, 471, 472, 552, 595, 685, 692, 694, 770, 796, 801, 853, 856, 871], "run": [1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 188, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 217, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 237, 252, 255, 260, 261, 262, 263, 266, 267, 268, 270, 271, 274, 275, 276, 278, 298, 316, 342, 349, 350, 352, 354, 369, 374, 405, 406, 409, 413, 414, 416, 419, 420, 441, 442, 443, 446, 459, 461, 470, 471, 472, 503, 509, 512, 513, 523, 524, 533, 534, 550, 555, 562, 563, 564, 569, 570, 573, 576, 579, 595, 630, 638, 641, 642, 643, 644, 653, 654, 655, 656, 677, 678, 679, 680, 681, 689, 692, 694, 695, 696, 697, 698, 699, 700, 707, 708, 709, 710, 718, 719, 720, 721, 722, 723, 738, 761, 768, 770, 773, 777, 780, 781, 785, 791, 792, 828, 829, 833, 834, 835, 836, 838, 847, 852, 853, 854, 857, 871], "script": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 141, 142, 143, 144, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 187, 188, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 217, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 237, 270, 470, 471, 472, 791, 830, 831, 833, 835, 836, 837, 847, 850, 851, 853, 856, 859, 861, 871], "minut": [1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 188, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 217, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 237, 255, 260, 261, 272, 278, 426, 470, 471, 472, 550, 642, 643, 785, 791, 834], "564": [1, 6, 227, 240, 396], "second": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 188, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 217, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 237, 240, 252, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 267, 268, 269, 270, 271, 274, 275, 276, 280, 281, 283, 291, 292, 293, 317, 318, 336, 338, 354, 403, 409, 410, 415, 427, 429, 432, 437, 438, 440, 444, 445, 469, 470, 471, 472, 491, 493, 505, 510, 511, 520, 523, 549, 550, 552, 553, 554, 555, 558, 560, 562, 563, 566, 569, 570, 571, 572, 573, 578, 586, 592, 596, 605, 608, 640, 656, 676, 677, 678, 680, 681, 682, 684, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 703, 709, 710, 738, 746, 762, 769, 770, 771, 774, 777, 781, 782, 785, 790, 791, 792, 793, 796, 798, 801, 816, 826, 830, 836, 846, 847, 850, 853, 856, 871], "estim": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 39, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 181, 182, 183, 184, 186, 187, 188, 189, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 217, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 237, 240, 241, 252, 255, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 280, 281, 285, 286, 287, 289, 290, 292, 293, 307, 315, 323, 336, 338, 342, 349, 353, 354, 355, 360, 361, 362, 363, 364, 365, 367, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 424, 437, 438, 440, 442, 443, 444, 446, 447, 450, 466, 467, 468, 469, 470, 471, 472, 476, 503, 505, 506, 512, 514, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 531, 532, 533, 534, 537, 550, 551, 555, 559, 560, 566, 570, 573, 576, 578, 590, 592, 593, 608, 610, 613, 618, 619, 620, 630, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 655, 657, 671, 675, 676, 682, 683, 685, 686, 692, 694, 695, 696, 697, 698, 699, 700, 708, 709, 710, 738, 754, 755, 761, 762, 763, 770, 778, 785, 792, 795, 796, 797, 800, 801, 802, 826, 831, 837, 839, 847, 850, 856, 859, 861, 869, 871], "usag": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 217, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 237, 252, 255, 260, 261, 262, 263, 265, 267, 268, 271, 274, 275, 276, 412, 416, 470, 471, 472, 578, 677, 678, 680, 681, 690, 692, 693, 694, 696, 699, 716, 718, 719, 720, 721, 722, 723, 826, 849, 850, 853, 856, 871], "491": [1, 6, 222, 227], "mb": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 234, 235, 236, 237, 239, 255, 260, 261, 270, 470, 471, 472, 768, 791, 836], "python": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 154, 155, 156, 157, 160, 163, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 192, 193, 194, 196, 198, 200, 201, 204, 205, 206, 208, 212, 213, 214, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 237, 240, 251, 255, 258, 259, 260, 261, 262, 263, 265, 267, 268, 270, 271, 273, 274, 275, 276, 292, 293, 309, 312, 318, 323, 324, 327, 333, 348, 360, 367, 370, 371, 372, 373, 374, 376, 377, 379, 380, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 401, 422, 428, 432, 436, 444, 451, 452, 453, 455, 462, 470, 471, 472, 486, 494, 508, 516, 517, 531, 544, 550, 566, 569, 598, 627, 629, 634, 636, 637, 689, 690, 692, 693, 721, 733, 734, 762, 768, 771, 785, 791, 799, 819, 821, 826, 829, 837, 841, 846, 847, 851, 852, 853, 854, 857, 858, 869, 871], "brainstorm_data": [1, 6], "py": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 234, 235, 236, 237, 239, 828, 830, 850, 871], "jupyt": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 217, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 237, 803, 850, 852, 854, 871], "notebook": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 217, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 237, 803, 809, 834, 850, 854, 859, 871], "ipynb": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 217, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 237], "galleri": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 217, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 237, 830], "gener": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 93, 94, 96, 97, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 188, 189, 192, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 217, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 237, 251, 252, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 287, 290, 303, 316, 321, 322, 323, 342, 348, 349, 374, 403, 405, 406, 409, 410, 413, 414, 420, 427, 432, 437, 439, 441, 442, 444, 461, 467, 468, 470, 471, 472, 476, 477, 488, 491, 503, 506, 513, 516, 517, 519, 521, 524, 528, 531, 547, 548, 549, 550, 551, 553, 562, 566, 567, 570, 572, 573, 576, 578, 595, 599, 605, 608, 610, 612, 613, 615, 616, 638, 639, 640, 642, 643, 644, 653, 654, 655, 656, 657, 670, 674, 675, 677, 678, 679, 680, 681, 686, 690, 692, 693, 694, 703, 709, 724, 735, 738, 739, 741, 751, 754, 758, 762, 769, 777, 782, 792, 793, 796, 797, 798, 806, 821, 826, 836, 837, 838, 842, 845, 846, 847, 848, 849, 851, 852, 854, 855, 856, 858, 859, 871], "sphinx": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 217, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 237, 734, 830], "thi": [2, 4, 5, 7, 9, 10, 13, 14, 16, 18, 19, 21, 22, 26, 31, 32, 33, 39, 40, 41, 42, 43, 44, 45, 46, 49, 53, 54, 56, 57, 58, 59, 62, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 84, 85, 87, 90, 91, 92, 93, 94, 96, 98, 100, 101, 106, 109, 110, 111, 112, 113, 114, 115, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 217, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 237, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 284, 285, 287, 290, 292, 293, 297, 298, 300, 301, 302, 303, 304, 307, 308, 311, 312, 313, 314, 315, 316, 319, 320, 321, 325, 326, 327, 332, 336, 337, 340, 342, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 360, 362, 363, 364, 365, 366, 369, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 383, 384, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 452, 453, 455, 456, 459, 461, 462, 464, 465, 466, 468, 469, 470, 471, 472, 473, 477, 478, 479, 480, 482, 486, 487, 488, 490, 492, 493, 496, 498, 500, 501, 503, 505, 510, 511, 513, 516, 517, 518, 519, 520, 521, 523, 524, 526, 527, 528, 534, 536, 537, 541, 545, 547, 549, 550, 551, 552, 553, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 575, 576, 577, 578, 579, 582, 585, 586, 592, 595, 596, 598, 601, 602, 603, 605, 607, 608, 612, 613, 618, 621, 627, 629, 632, 633, 635, 637, 638, 639, 642, 643, 644, 651, 653, 654, 655, 656, 657, 660, 661, 664, 667, 672, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 689, 690, 691, 692, 693, 694, 702, 719, 722, 726, 728, 732, 733, 735, 736, 738, 740, 741, 743, 747, 748, 751, 753, 754, 755, 756, 759, 760, 764, 768, 769, 770, 771, 772, 774, 775, 776, 777, 778, 779, 781, 782, 783, 784, 785, 789, 790, 791, 792, 793, 794, 795, 796, 798, 799, 800, 801, 803, 804, 807, 808, 811, 819, 821, 826, 828, 829, 830, 833, 834, 835, 836, 837, 838, 846, 847, 848, 850, 852, 853, 854, 856, 857, 859, 861, 871], "look": [2, 4, 7, 8, 19, 21, 27, 32, 41, 54, 57, 59, 66, 68, 69, 80, 81, 90, 105, 108, 109, 110, 117, 118, 119, 124, 130, 132, 133, 139, 142, 143, 148, 149, 154, 156, 158, 159, 160, 164, 166, 170, 173, 175, 176, 177, 178, 180, 181, 186, 187, 189, 196, 199, 200, 201, 203, 204, 205, 207, 208, 211, 219, 222, 227, 236, 237, 255, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 295, 298, 304, 371, 372, 373, 374, 376, 377, 379, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 444, 451, 453, 470, 471, 472, 499, 550, 552, 596, 690, 738, 754, 757, 784, 794, 796, 801, 802, 811, 828, 829, 830, 851, 852, 853, 854, 856, 871], "high": [2, 4, 7, 10, 12, 22, 37, 39, 58, 71, 72, 79, 80, 81, 85, 91, 96, 116, 132, 139, 140, 141, 149, 154, 155, 158, 165, 186, 188, 189, 193, 196, 200, 202, 203, 204, 207, 208, 224, 225, 226, 227, 231, 237, 240, 255, 260, 261, 262, 263, 273, 278, 349, 350, 351, 352, 354, 386, 405, 414, 438, 439, 441, 462, 470, 471, 472, 494, 517, 550, 555, 558, 562, 563, 566, 567, 570, 571, 573, 574, 578, 582, 643, 676, 738, 855, 871], "frequenc": [2, 5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 32, 33, 35, 41, 55, 66, 69, 70, 71, 74, 78, 79, 80, 81, 85, 87, 90, 91, 96, 100, 101, 103, 104, 105, 106, 107, 109, 112, 118, 120, 123, 124, 130, 135, 138, 139, 140, 141, 142, 144, 147, 149, 154, 165, 166, 167, 170, 178, 181, 189, 192, 193, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 217, 219, 222, 226, 230, 232, 239, 240, 252, 255, 257, 258, 260, 261, 262, 263, 264, 265, 267, 268, 270, 271, 274, 275, 276, 279, 283, 285, 286, 287, 292, 307, 323, 336, 337, 344, 349, 358, 367, 386, 403, 405, 408, 409, 411, 414, 415, 416, 424, 427, 429, 431, 432, 438, 439, 441, 442, 443, 444, 467, 469, 470, 471, 472, 481, 486, 516, 517, 521, 523, 524, 528, 533, 534, 547, 550, 555, 558, 562, 563, 566, 567, 569, 570, 571, 573, 574, 578, 582, 596, 599, 608, 610, 657, 669, 676, 677, 678, 680, 681, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 707, 708, 709, 710, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 733, 738, 742, 761, 764, 765, 766, 770, 771, 779, 783, 786, 792, 797, 798, 800, 826, 850, 856, 857, 861, 871], "respons": [2, 4, 8, 10, 16, 17, 19, 20, 27, 34, 45, 48, 50, 58, 64, 75, 82, 85, 91, 93, 94, 104, 110, 114, 117, 118, 119, 125, 127, 133, 140, 141, 143, 147, 148, 160, 166, 178, 181, 183, 189, 193, 196, 199, 204, 226, 227, 230, 232, 237, 240, 255, 260, 261, 262, 263, 265, 267, 268, 271, 274, 275, 276, 349, 367, 386, 409, 415, 417, 427, 429, 432, 439, 442, 470, 471, 472, 547, 551, 593, 605, 690, 692, 693, 694, 703, 769, 776, 778, 779, 786, 826, 846, 847, 852, 853, 856, 871], "jussi": [2, 60, 240, 386, 578, 871], "nurminen": [2, 60, 240, 386, 578, 871], "jnu": [2, 60], "iki": [2, 60], "fi": [2, 10, 60, 83, 189, 470], "o": [2, 19, 43, 60, 69, 73, 80, 112, 122, 124, 126, 138, 157, 159, 167, 169, 170, 174, 179, 183, 189, 192, 196, 197, 198, 200, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 218, 219, 232, 240, 252, 255, 257, 260, 261, 262, 263, 265, 349, 366, 374, 382, 403, 410, 451, 470, 471, 472, 549, 550, 559, 634, 690, 692, 694, 755, 770, 777, 793, 798, 800, 830, 842, 847, 850, 861, 871], "hf_sef": [2, 847, 861, 871], "fname_evok": [2, 11, 30, 37, 38, 40, 43, 56, 57, 59, 121, 124, 177, 179, 218], "path": [2, 19, 32, 42, 43, 44, 60, 73, 98, 112, 116, 117, 120, 122, 124, 126, 132, 133, 134, 138, 142, 153, 154, 155, 156, 157, 164, 168, 169, 170, 173, 174, 179, 180, 183, 189, 196, 197, 198, 200, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 218, 219, 223, 232, 252, 255, 258, 260, 261, 262, 263, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 298, 299, 302, 303, 304, 307, 316, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 355, 360, 361, 362, 371, 372, 373, 374, 376, 377, 379, 380, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 422, 424, 437, 451, 452, 453, 455, 459, 461, 462, 463, 464, 465, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 505, 507, 509, 513, 536, 537, 550, 560, 561, 569, 575, 578, 590, 591, 595, 601, 602, 603, 604, 606, 607, 608, 609, 612, 613, 615, 618, 619, 622, 623, 624, 638, 639, 653, 656, 658, 659, 667, 685, 686, 688, 689, 692, 694, 712, 730, 737, 738, 754, 756, 766, 768, 778, 785, 791, 796, 801, 802, 811, 820, 821, 825, 826, 828, 830, 833, 835, 836, 841, 871], "join": [2, 10, 19, 43, 60, 73, 124, 126, 132, 133, 138, 157, 168, 169, 174, 179, 182, 183, 189, 196, 197, 198, 200, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 218, 219, 232, 255, 260, 261, 262, 263, 470, 471, 472], "subject_b": 2, "hf_sef_15min": 2, "av": [2, 11, 30, 31, 34, 37, 38, 39, 40, 43, 47, 48, 49, 50, 53, 54, 56, 57, 58, 59, 60, 63, 66, 76, 83, 84, 87, 89, 92, 113, 116, 117, 121, 124, 147, 148, 170, 174, 176, 177, 179, 218, 252, 255, 260, 261, 262, 263, 270, 470, 471, 472, 540, 608, 617, 693, 817, 847], "fif": [2, 5, 7, 10, 11, 13, 14, 15, 16, 18, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 61, 63, 65, 66, 67, 69, 70, 71, 72, 74, 76, 77, 78, 80, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 104, 105, 106, 107, 108, 110, 112, 113, 114, 115, 116, 117, 118, 120, 121, 124, 126, 128, 129, 130, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 164, 165, 166, 167, 168, 170, 174, 175, 176, 177, 178, 179, 180, 181, 187, 188, 189, 193, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 211, 212, 213, 214, 218, 219, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 247, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 270, 273, 299, 307, 329, 360, 361, 362, 424, 433, 434, 435, 436, 453, 463, 470, 471, 472, 491, 494, 509, 513, 531, 535, 550, 560, 569, 575, 578, 590, 596, 598, 599, 600, 601, 605, 608, 610, 616, 620, 623, 627, 630, 655, 658, 685, 726, 738, 754, 812, 815, 816, 817, 818, 822, 823, 825, 830, 837, 842, 846, 847, 853, 856, 859, 871], "interest": [2, 4, 9, 16, 21, 28, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 43, 47, 49, 50, 53, 54, 56, 57, 58, 59, 62, 76, 79, 83, 84, 87, 92, 93, 94, 97, 98, 101, 104, 109, 110, 111, 113, 116, 117, 124, 125, 133, 135, 138, 140, 141, 142, 147, 148, 153, 160, 168, 170, 174, 176, 177, 178, 179, 188, 192, 193, 196, 199, 200, 203, 208, 212, 218, 219, 222, 223, 224, 225, 226, 236, 237, 255, 260, 261, 262, 263, 265, 285, 287, 319, 408, 411, 427, 429, 447, 455, 470, 471, 472, 503, 523, 524, 534, 549, 550, 593, 602, 604, 639, 690, 692, 694, 695, 696, 697, 698, 699, 700, 705, 707, 708, 709, 710, 717, 738, 792, 798, 826, 830, 846, 850, 853, 871], "t": [2, 4, 5, 9, 15, 19, 21, 27, 28, 29, 30, 31, 34, 37, 38, 39, 40, 41, 43, 44, 47, 49, 50, 52, 53, 54, 56, 57, 58, 59, 62, 64, 68, 76, 78, 80, 81, 83, 84, 90, 91, 92, 93, 95, 98, 99, 105, 111, 112, 113, 114, 116, 117, 124, 132, 138, 139, 141, 142, 143, 144, 147, 149, 154, 155, 156, 157, 158, 160, 163, 164, 166, 168, 169, 170, 174, 175, 176, 177, 178, 179, 181, 182, 186, 189, 192, 193, 197, 199, 200, 202, 203, 204, 205, 206, 207, 208, 211, 213, 218, 219, 222, 223, 224, 225, 226, 227, 232, 233, 234, 235, 236, 237, 240, 252, 255, 256, 258, 259, 260, 261, 262, 263, 265, 267, 268, 270, 271, 273, 274, 275, 276, 283, 292, 293, 336, 339, 345, 354, 355, 366, 367, 371, 372, 373, 374, 376, 377, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 409, 424, 426, 438, 444, 447, 466, 469, 470, 471, 472, 482, 483, 516, 517, 525, 531, 537, 539, 541, 547, 550, 553, 561, 562, 566, 567, 569, 571, 576, 578, 579, 587, 595, 598, 602, 604, 605, 608, 609, 612, 615, 618, 620, 637, 639, 655, 656, 662, 668, 670, 674, 675, 676, 677, 679, 680, 682, 683, 684, 690, 691, 692, 693, 694, 709, 711, 714, 722, 728, 738, 773, 781, 783, 826, 829, 830, 831, 836, 838, 846, 847, 852, 853, 854, 856, 871], "250": [2, 4, 21, 45, 78, 109, 114, 120, 134, 135, 139, 141, 149, 154, 164, 167, 179, 193, 196, 198, 199, 200, 204, 222, 226, 227, 235, 240, 643, 835], "ctf": [2, 27, 30, 31, 34, 35, 37, 38, 39, 40, 43, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 76, 83, 84, 98, 113, 116, 117, 124, 138, 141, 147, 163, 168, 170, 174, 176, 177, 179, 184, 185, 190, 191, 222, 223, 254, 255, 257, 258, 260, 261, 262, 263, 264, 265, 271, 297, 304, 333, 340, 348, 350, 354, 356, 358, 359, 444, 446, 470, 471, 472, 484, 507, 508, 513, 514, 516, 517, 526, 527, 528, 529, 532, 547, 548, 563, 578, 599, 608, 610, 616, 623, 638, 690, 692, 693, 694, 738, 754, 847, 853, 856, 871], "matric": [2, 10, 30, 31, 33, 34, 37, 38, 39, 40, 43, 46, 47, 49, 50, 53, 54, 56, 57, 58, 59, 76, 83, 84, 98, 100, 113, 116, 117, 124, 138, 141, 144, 147, 154, 161, 163, 164, 170, 174, 176, 177, 179, 186, 193, 222, 223, 240, 286, 292, 349, 403, 411, 470, 471, 472, 561, 569, 578, 590, 641, 642, 643, 655, 676, 691, 701, 729, 731, 764, 846, 853, 856, 868, 871], "nave": [2, 5, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 43, 44, 46, 47, 49, 50, 53, 54, 56, 57, 58, 59, 66, 76, 83, 84, 87, 89, 91, 101, 104, 105, 106, 107, 111, 113, 116, 117, 124, 147, 164, 170, 174, 175, 176, 177, 179, 180, 189, 193, 217, 218, 219, 230, 232, 253, 259, 262, 263, 265, 348, 460, 518, 519, 520, 521, 523, 524, 530, 533, 534, 654, 690, 856, 871], "2790": 2, "aspect": [2, 16, 22, 30, 31, 34, 37, 38, 39, 40, 43, 47, 49, 50, 53, 54, 56, 57, 58, 59, 68, 76, 83, 84, 104, 113, 116, 117, 124, 140, 147, 170, 174, 176, 177, 179, 200, 203, 224, 225, 226, 227, 741, 856, 871], "specifi": [2, 4, 5, 9, 19, 31, 37, 40, 42, 46, 62, 85, 91, 92, 98, 100, 106, 111, 117, 124, 125, 133, 138, 139, 140, 147, 148, 149, 153, 156, 164, 165, 166, 167, 168, 169, 170, 176, 182, 183, 186, 193, 196, 197, 199, 200, 201, 202, 204, 205, 207, 208, 211, 212, 213, 214, 223, 224, 227, 230, 236, 252, 254, 255, 257, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 277, 284, 286, 292, 293, 297, 304, 309, 319, 325, 349, 350, 351, 352, 353, 354, 355, 363, 364, 365, 366, 371, 372, 373, 374, 376, 377, 378, 381, 384, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 410, 414, 415, 419, 420, 424, 427, 429, 438, 439, 441, 442, 444, 446, 447, 455, 459, 462, 466, 468, 469, 470, 471, 472, 473, 481, 486, 487, 494, 498, 509, 512, 516, 518, 526, 527, 528, 539, 549, 550, 553, 555, 560, 561, 563, 564, 568, 569, 578, 593, 596, 600, 602, 604, 609, 612, 618, 627, 630, 632, 635, 639, 640, 655, 667, 670, 676, 677, 678, 680, 681, 688, 690, 692, 693, 694, 702, 726, 738, 741, 753, 754, 755, 757, 762, 769, 770, 772, 776, 777, 778, 781, 783, 784, 785, 787, 790, 793, 796, 797, 798, 800, 801, 802, 803, 807, 821, 826, 830, 848, 850, 853, 856, 871], "pleas": [2, 4, 5, 72, 74, 80, 98, 106, 120, 132, 133, 134, 135, 144, 164, 170, 182, 183, 187, 193, 196, 201, 202, 208, 223, 232, 252, 255, 257, 260, 261, 262, 263, 285, 287, 327, 365, 382, 430, 442, 444, 470, 471, 472, 482, 550, 569, 579, 610, 690, 755, 768, 777, 785, 791, 798, 800, 818, 826, 828, 830, 834, 836, 842, 845, 846, 847, 849, 851, 853, 854, 871], "consid": [2, 4, 5, 79, 90, 98, 101, 105, 106, 109, 134, 135, 139, 142, 150, 154, 157, 159, 160, 164, 182, 183, 193, 196, 197, 198, 199, 201, 202, 207, 208, 222, 223, 224, 227, 230, 232, 237, 255, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 270, 271, 274, 275, 276, 283, 292, 293, 304, 314, 332, 349, 353, 354, 364, 365, 403, 410, 411, 424, 433, 434, 435, 436, 438, 444, 451, 468, 469, 470, 471, 472, 479, 486, 488, 492, 545, 550, 552, 553, 558, 560, 561, 564, 566, 568, 569, 572, 576, 578, 583, 602, 604, 608, 651, 660, 661, 662, 664, 665, 677, 678, 680, 681, 690, 693, 695, 696, 697, 698, 699, 700, 701, 738, 751, 760, 768, 771, 772, 784, 791, 826, 828, 849, 852, 871], "self": [2, 4, 5, 98, 106, 170, 182, 183, 193, 196, 201, 208, 223, 232, 254, 255, 257, 258, 260, 261, 262, 263, 265, 266, 267, 268, 269, 271, 274, 275, 276, 284, 297, 360, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 470, 471, 472, 516, 549, 550, 551, 690, 692, 693, 694, 726, 739, 830, 848, 850, 871], "highpass": [2, 12, 69, 71, 74, 78, 79, 80, 87, 90, 96, 124, 139, 144, 149, 164, 165, 166, 167, 196, 197, 198, 199, 200, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 217, 219, 237, 252, 255, 260, 261, 262, 263, 265, 438, 470, 471, 472, 692, 694, 791, 792, 856, 871], "version": [2, 19, 33, 68, 81, 111, 134, 143, 144, 148, 153, 159, 164, 169, 186, 187, 188, 192, 193, 198, 199, 214, 252, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 280, 281, 284, 288, 292, 293, 295, 299, 300, 301, 302, 303, 304, 307, 308, 311, 312, 313, 315, 316, 317, 318, 323, 325, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 360, 363, 364, 365, 379, 380, 382, 383, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 414, 415, 419, 422, 424, 427, 428, 430, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 446, 447, 450, 451, 453, 456, 460, 462, 465, 466, 468, 469, 470, 471, 472, 479, 480, 482, 483, 484, 486, 487, 488, 491, 493, 495, 498, 500, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 517, 518, 519, 520, 523, 524, 525, 526, 527, 528, 530, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 549, 550, 551, 552, 553, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 577, 578, 579, 586, 588, 592, 593, 598, 600, 602, 604, 605, 608, 609, 613, 621, 623, 624, 626, 627, 629, 632, 635, 638, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 671, 672, 673, 682, 683, 684, 685, 689, 690, 691, 692, 693, 694, 706, 707, 708, 709, 710, 713, 718, 719, 721, 722, 723, 724, 727, 728, 735, 738, 739, 741, 747, 748, 754, 755, 756, 757, 759, 761, 762, 763, 765, 766, 767, 768, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 798, 800, 801, 802, 803, 804, 807, 812, 815, 817, 821, 822, 824, 829, 830, 833, 834, 835, 836, 845, 847, 850, 852, 853, 856, 859], "evoked_hp": 2, "l_freq": [2, 21, 80, 111, 142, 144, 149, 189, 199, 200, 202, 204, 237, 252, 255, 260, 261, 262, 263, 405, 414, 439, 441, 470, 471, 472, 550, 558, 562, 563, 566, 567, 570, 571, 573, 574, 582, 857], "300": [2, 4, 5, 21, 33, 45, 50, 72, 78, 79, 89, 113, 133, 138, 147, 149, 167, 181, 189, 200, 202, 206, 227, 235, 690, 856, 871], "h_freq": [2, 21, 80, 111, 142, 144, 149, 189, 199, 200, 202, 204, 207, 237, 252, 255, 260, 261, 262, 263, 405, 414, 439, 441, 470, 471, 472, 550, 558, 562, 563, 566, 567, 569, 570, 571, 573, 574, 582, 857], "3e": [2, 8, 9, 34, 44, 47, 48, 49, 50, 53, 54, 57, 91, 106, 150, 174, 176, 177, 178, 179, 193, 562, 563, 755], "edg": [2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 33, 41, 58, 68, 70, 71, 74, 79, 80, 81, 85, 96, 107, 110, 111, 112, 117, 118, 130, 134, 139, 140, 142, 144, 149, 159, 170, 189, 193, 196, 198, 199, 200, 201, 202, 204, 207, 208, 213, 214, 218, 222, 227, 237, 255, 257, 260, 261, 262, 263, 269, 270, 278, 405, 409, 432, 439, 441, 443, 469, 470, 471, 472, 549, 552, 553, 564, 569, 578, 582, 690, 692, 694, 742, 751, 755, 756, 770, 777, 790, 791, 793, 798, 800, 850, 871], "75": [2, 4, 5, 8, 12, 13, 16, 19, 21, 24, 33, 34, 40, 43, 68, 70, 74, 77, 78, 80, 100, 109, 111, 112, 124, 132, 133, 141, 142, 144, 156, 167, 169, 170, 178, 182, 189, 192, 193, 196, 198, 201, 202, 204, 205, 206, 213, 222, 223, 226, 227, 470, 471, 472, 550, 794, 847, 853, 871], "cutoff": [2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 33, 41, 70, 71, 74, 79, 80, 81, 85, 96, 110, 111, 112, 118, 130, 134, 139, 142, 144, 149, 170, 189, 193, 196, 198, 200, 201, 202, 204, 207, 208, 227, 255, 260, 261, 262, 263, 405, 414, 439, 441, 470, 471, 472, 550, 558, 569, 582], "262": [2, 12, 21, 149, 167, 206, 227, 240], "133": [2, 34, 60, 88, 92, 132, 154, 167, 193, 205, 226], "044": [2, 138, 140, 147, 167, 219], "306": [2, 22, 26, 31, 32, 33, 34, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 53, 54, 55, 57, 58, 60, 66, 74, 80, 81, 87, 89, 90, 91, 92, 106, 109, 128, 144, 156, 167, 170, 175, 176, 177, 178, 181, 193, 206, 207, 218, 219, 227, 550, 847], "condit": [2, 10, 11, 16, 17, 20, 27, 30, 31, 34, 37, 38, 39, 40, 43, 44, 50, 57, 58, 59, 60, 76, 83, 84, 85, 91, 93, 96, 107, 109, 116, 117, 119, 121, 127, 138, 139, 140, 141, 142, 143, 147, 148, 151, 163, 164, 166, 174, 175, 176, 177, 178, 179, 182, 183, 189, 193, 199, 208, 212, 217, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 240, 253, 255, 260, 261, 262, 263, 265, 348, 349, 406, 413, 419, 425, 470, 471, 515, 540, 547, 551, 561, 569, 578, 593, 605, 607, 608, 609, 671, 676, 677, 678, 680, 690, 692, 693, 694, 713, 721, 762, 776, 826, 830, 846, 847, 853, 857, 871], "kind": [2, 5, 7, 11, 22, 26, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 63, 66, 80, 87, 89, 90, 91, 92, 101, 104, 105, 106, 107, 121, 124, 128, 133, 134, 140, 147, 149, 154, 158, 164, 167, 168, 170, 173, 175, 176, 177, 178, 179, 182, 188, 189, 193, 200, 203, 218, 219, 230, 231, 232, 255, 259, 260, 261, 262, 263, 265, 267, 268, 269, 271, 272, 273, 274, 275, 276, 292, 293, 300, 301, 307, 308, 323, 333, 368, 383, 422, 423, 438, 465, 470, 471, 472, 502, 538, 551, 608, 685, 690, 692, 693, 694, 702, 738, 757, 759, 788, 794, 796, 801, 802, 830, 850, 853, 856, 871], "timepoint": [2, 19, 58, 98, 117, 139, 147, 149, 177, 179, 182, 211, 255, 260, 261, 262, 263, 267, 268, 270, 271, 274, 275, 276, 283, 343, 512, 566, 608, 609], "901": [2, 227], "number": [2, 4, 5, 9, 10, 11, 31, 33, 34, 38, 39, 41, 43, 45, 48, 51, 58, 70, 72, 74, 79, 80, 85, 87, 89, 90, 97, 100, 104, 106, 110, 111, 118, 124, 132, 133, 138, 140, 141, 142, 143, 144, 147, 148, 149, 158, 159, 160, 163, 164, 166, 168, 170, 173, 175, 177, 178, 179, 180, 181, 182, 183, 186, 188, 189, 193, 196, 197, 198, 199, 201, 202, 203, 207, 212, 213, 214, 217, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 237, 240, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 292, 293, 294, 295, 319, 322, 330, 337, 343, 349, 350, 351, 352, 353, 354, 355, 357, 360, 363, 364, 365, 374, 402, 403, 405, 406, 408, 409, 410, 411, 413, 414, 415, 416, 419, 420, 424, 426, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 459, 460, 461, 466, 468, 469, 470, 471, 472, 473, 482, 494, 501, 503, 509, 512, 513, 517, 518, 519, 520, 521, 523, 524, 526, 527, 528, 530, 532, 533, 534, 549, 550, 551, 555, 559, 560, 561, 562, 563, 564, 565, 569, 570, 571, 573, 575, 576, 577, 583, 584, 595, 605, 609, 630, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 653, 654, 655, 656, 664, 665, 666, 667, 669, 670, 671, 673, 675, 677, 678, 679, 680, 681, 682, 685, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 702, 705, 707, 708, 709, 710, 717, 718, 719, 720, 721, 722, 723, 728, 736, 737, 738, 746, 755, 761, 762, 764, 766, 767, 768, 769, 770, 771, 772, 773, 774, 777, 778, 779, 781, 782, 784, 785, 790, 791, 792, 793, 796, 797, 798, 799, 800, 801, 804, 811, 826, 830, 845, 847, 850, 854, 856, 871], "rang": [2, 4, 5, 9, 10, 11, 13, 14, 15, 16, 18, 19, 28, 29, 32, 33, 41, 44, 45, 48, 58, 60, 62, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 79, 80, 81, 85, 89, 90, 91, 93, 94, 96, 97, 100, 101, 104, 106, 107, 108, 109, 110, 111, 112, 114, 115, 117, 118, 120, 124, 126, 129, 130, 132, 133, 135, 138, 139, 140, 141, 142, 144, 147, 149, 150, 154, 156, 157, 158, 160, 164, 165, 166, 167, 169, 170, 174, 175, 177, 178, 179, 180, 181, 182, 183, 188, 189, 193, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 213, 214, 217, 218, 219, 222, 223, 224, 225, 226, 227, 230, 232, 235, 236, 237, 252, 253, 255, 257, 260, 261, 262, 263, 265, 269, 270, 292, 316, 367, 374, 388, 396, 397, 403, 406, 410, 412, 413, 436, 462, 468, 470, 471, 472, 479, 549, 550, 555, 564, 569, 690, 691, 692, 693, 694, 705, 717, 755, 768, 769, 770, 774, 777, 781, 790, 791, 792, 793, 798, 800, 826, 846, 852, 853, 856, 871], "05": [2, 4, 5, 6, 8, 9, 10, 20, 33, 34, 41, 45, 48, 50, 55, 58, 59, 65, 69, 76, 81, 84, 89, 92, 93, 94, 97, 99, 100, 105, 106, 109, 113, 116, 117, 121, 127, 135, 139, 142, 148, 149, 168, 172, 175, 177, 178, 179, 181, 183, 189, 192, 196, 197, 200, 204, 206, 208, 210, 211, 218, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 240, 292, 293, 316, 325, 442, 446, 470, 471, 472, 532, 559, 650, 668, 673, 674, 677, 678, 680, 681, 682, 690, 742, 797], "25": [2, 4, 5, 6, 11, 13, 16, 18, 19, 28, 33, 34, 39, 40, 41, 42, 44, 46, 48, 49, 52, 55, 63, 66, 68, 70, 72, 78, 79, 80, 82, 100, 105, 106, 109, 110, 111, 113, 121, 123, 127, 132, 133, 134, 141, 143, 144, 149, 157, 167, 168, 169, 170, 173, 176, 178, 179, 181, 189, 193, 196, 198, 199, 201, 202, 203, 204, 206, 207, 213, 219, 222, 223, 224, 226, 227, 230, 231, 232, 234, 235, 236, 240, 254, 255, 260, 261, 262, 263, 267, 268, 271, 272, 273, 274, 275, 276, 355, 396, 403, 405, 414, 439, 441, 470, 471, 472, 582, 650, 679, 689, 738, 742, 762, 774, 791, 794, 796, 801, 829, 846, 853], "off": [2, 4, 10, 71, 74, 90, 111, 113, 124, 132, 133, 135, 139, 141, 147, 149, 150, 154, 157, 158, 164, 165, 166, 167, 189, 192, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 211, 212, 213, 214, 217, 218, 219, 240, 252, 255, 260, 261, 262, 263, 273, 292, 293, 405, 414, 439, 441, 470, 471, 472, 549, 562, 563, 564, 571, 574, 578, 582, 593, 830, 846, 847, 853, 856, 871], "compar": [2, 4, 10, 19, 21, 22, 26, 27, 28, 35, 37, 38, 55, 71, 75, 80, 82, 86, 88, 100, 110, 111, 119, 127, 132, 139, 141, 142, 143, 144, 156, 158, 160, 164, 165, 170, 174, 178, 181, 182, 189, 193, 199, 201, 203, 204, 205, 224, 225, 226, 230, 231, 237, 255, 257, 260, 261, 262, 263, 264, 265, 266, 271, 273, 353, 354, 359, 380, 444, 470, 471, 472, 476, 503, 506, 510, 516, 517, 528, 529, 532, 548, 550, 578, 599, 601, 605, 608, 610, 613, 640, 644, 645, 646, 647, 648, 649, 650, 652, 655, 661, 738, 746, 768, 776, 785, 791, 830, 838, 850, 859, 871], "unfilt": [2, 164, 170, 199, 202], "singl": [2, 3, 6, 16, 18, 27, 32, 33, 35, 44, 55, 68, 72, 80, 81, 84, 91, 98, 100, 102, 103, 110, 114, 117, 119, 127, 138, 139, 140, 142, 143, 147, 148, 149, 156, 163, 164, 166, 167, 168, 170, 174, 176, 178, 181, 182, 186, 187, 188, 193, 196, 197, 199, 202, 203, 204, 205, 207, 208, 211, 212, 217, 219, 222, 227, 228, 229, 232, 236, 237, 240, 252, 254, 255, 257, 258, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 287, 290, 292, 293, 299, 307, 309, 313, 314, 319, 348, 349, 354, 379, 403, 404, 410, 416, 419, 425, 429, 432, 444, 462, 470, 471, 472, 487, 490, 504, 507, 510, 512, 514, 516, 517, 519, 521, 523, 524, 531, 547, 549, 550, 555, 558, 564, 593, 601, 605, 612, 618, 625, 635, 639, 656, 670, 671, 673, 674, 675, 677, 678, 685, 690, 691, 692, 693, 694, 718, 719, 721, 722, 728, 738, 754, 755, 756, 762, 766, 769, 770, 771, 772, 774, 777, 778, 781, 788, 789, 790, 792, 793, 794, 798, 800, 814, 830, 839, 846, 847, 850, 853, 856, 857, 859, 871], "meg0443": 2, "ch_name": [2, 4, 7, 15, 18, 19, 31, 62, 68, 70, 72, 83, 97, 109, 111, 112, 117, 122, 133, 134, 138, 144, 147, 149, 157, 164, 166, 167, 170, 182, 188, 189, 197, 200, 202, 204, 207, 208, 211, 217, 219, 224, 225, 226, 227, 236, 252, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 292, 293, 307, 309, 313, 316, 319, 324, 332, 363, 364, 367, 470, 471, 472, 541, 544, 550, 562, 563, 566, 567, 569, 570, 571, 589, 632, 644, 690, 691, 692, 693, 694, 695, 696, 697, 759, 768, 769, 791, 856, 871], "index": [2, 4, 19, 21, 31, 46, 60, 68, 70, 73, 87, 130, 141, 147, 148, 149, 158, 164, 167, 168, 170, 173, 178, 181, 182, 186, 189, 192, 196, 198, 201, 202, 203, 204, 206, 207, 208, 212, 213, 218, 223, 224, 235, 236, 240, 253, 254, 255, 258, 259, 260, 261, 262, 263, 267, 268, 270, 271, 273, 274, 275, 276, 280, 281, 291, 292, 293, 306, 316, 344, 358, 463, 470, 471, 472, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 510, 520, 540, 550, 566, 567, 570, 571, 573, 574, 582, 608, 609, 650, 690, 691, 692, 693, 694, 738, 751, 756, 762, 766, 771, 781, 785, 811, 826, 847, 853, 871], "edi": 2, "regular": [2, 5, 28, 29, 30, 33, 34, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 53, 54, 56, 57, 58, 59, 76, 80, 87, 91, 96, 101, 104, 105, 106, 107, 118, 164, 167, 176, 177, 178, 179, 180, 189, 193, 197, 204, 207, 217, 218, 219, 222, 230, 232, 262, 263, 266, 272, 292, 293, 349, 353, 354, 363, 364, 403, 410, 411, 415, 424, 432, 446, 447, 466, 468, 469, 479, 482, 486, 492, 517, 518, 519, 520, 521, 523, 524, 525, 528, 530, 533, 534, 544, 551, 559, 561, 569, 578, 613, 667, 670, 677, 678, 680, 681, 684, 777, 778, 795, 846, 852, 861, 871], "viz": [2, 4, 5, 7, 12, 19, 24, 27, 31, 33, 34, 37, 38, 39, 40, 41, 45, 46, 50, 51, 56, 58, 68, 77, 78, 83, 85, 89, 90, 98, 106, 111, 112, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 127, 129, 130, 132, 133, 134, 135, 139, 140, 141, 142, 148, 149, 153, 154, 155, 156, 157, 158, 164, 168, 175, 176, 178, 179, 180, 181, 182, 183, 188, 192, 197, 199, 200, 202, 203, 204, 205, 206, 207, 208, 212, 222, 227, 237, 255, 258, 260, 261, 262, 263, 265, 267, 268, 270, 271, 274, 275, 276, 304, 313, 324, 470, 471, 472, 550, 600, 608, 618, 623, 690, 828, 830, 846, 848, 850, 853, 857, 861, 870, 871], "plot_compare_evok": [2, 4, 98, 124, 139, 140, 141, 142, 148, 149, 164, 208, 227, 255, 260, 261, 769, 857, 861, 871], "741": [2, 6, 227], "9": [2, 4, 5, 7, 8, 9, 11, 13, 14, 15, 16, 19, 20, 21, 22, 24, 25, 26, 28, 29, 32, 33, 34, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 62, 63, 65, 66, 67, 68, 69, 71, 73, 74, 76, 77, 78, 80, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 98, 99, 100, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 121, 124, 125, 127, 129, 130, 132, 133, 135, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 149, 150, 152, 154, 156, 157, 160, 162, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 189, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 234, 235, 236, 237, 240, 255, 258, 260, 261, 262, 263, 267, 272, 273, 275, 276, 292, 293, 295, 307, 316, 330, 348, 349, 355, 356, 374, 397, 446, 456, 470, 471, 472, 491, 506, 514, 525, 533, 549, 550, 558, 576, 593, 604, 632, 635, 672, 689, 690, 692, 693, 694, 702, 713, 722, 723, 724, 738, 739, 741, 755, 765, 766, 771, 790, 795, 829, 835, 836, 846, 847, 850, 853, 856], "hf_sef_data": [2, 6], "some": [3, 4, 5, 10, 16, 21, 27, 39, 53, 54, 60, 64, 68, 71, 73, 92, 95, 100, 102, 106, 110, 111, 117, 124, 132, 133, 134, 135, 138, 139, 140, 142, 143, 147, 148, 149, 150, 154, 156, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 178, 181, 182, 187, 188, 189, 193, 194, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 209, 211, 212, 213, 214, 217, 218, 219, 222, 226, 227, 228, 235, 237, 252, 255, 260, 261, 262, 263, 264, 265, 266, 267, 268, 271, 273, 274, 275, 276, 303, 307, 311, 315, 349, 366, 379, 417, 426, 437, 456, 462, 470, 471, 472, 479, 486, 545, 549, 550, 552, 560, 568, 578, 586, 592, 602, 604, 631, 635, 638, 672, 678, 690, 692, 693, 694, 754, 756, 773, 775, 791, 826, 828, 829, 830, 833, 834, 837, 842, 845, 846, 847, 848, 850, 851, 852, 853, 854, 857, 859, 871], "demo": [3, 27, 826, 871], "common": [3, 17, 20, 27, 32, 33, 42, 43, 73, 112, 133, 147, 149, 153, 156, 158, 160, 163, 170, 187, 199, 201, 202, 203, 204, 207, 208, 211, 212, 219, 231, 237, 240, 255, 260, 261, 262, 263, 265, 273, 307, 312, 323, 349, 358, 367, 403, 428, 432, 453, 459, 470, 471, 472, 486, 547, 550, 565, 621, 625, 635, 690, 824, 826, 830, 847, 850, 853, 854, 857, 859, 871], "public": [3, 27, 109, 113, 117, 119, 127, 132, 142, 199, 255, 262, 265, 271, 442, 470, 471, 608, 618, 738, 757, 762, 830, 846, 852, 859, 871], "brainstorm": [3, 6, 27, 78, 79, 81, 106, 116, 163, 184, 185, 190, 191, 240, 254, 255, 257, 258, 260, 262, 263, 265, 271, 297, 304, 348, 349, 350, 351, 354, 356, 358, 423, 444, 446, 470, 471, 484, 507, 508, 513, 514, 516, 517, 528, 547, 563, 572, 578, 610, 616, 623, 638, 738, 754, 766, 778, 806, 853, 861, 869, 871], "raw": [3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 27, 28, 32, 33, 35, 40, 41, 44, 45, 48, 55, 60, 62, 64, 66, 67, 69, 70, 71, 72, 74, 76, 77, 79, 80, 81, 85, 86, 88, 89, 92, 93, 94, 96, 97, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 118, 120, 124, 125, 126, 129, 130, 132, 133, 134, 139, 140, 142, 143, 144, 147, 149, 154, 156, 157, 160, 163, 164, 165, 167, 168, 169, 171, 172, 178, 180, 181, 182, 183, 186, 187, 188, 189, 193, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 215, 216, 218, 219, 224, 225, 226, 227, 230, 232, 235, 236, 237, 240, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 273, 274, 275, 276, 277, 279, 280, 281, 291, 292, 293, 307, 309, 312, 336, 338, 340, 341, 342, 343, 348, 349, 351, 352, 353, 354, 357, 358, 365, 375, 386, 387, 395, 399, 411, 428, 432, 436, 438, 441, 444, 445, 462, 470, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 509, 510, 511, 513, 516, 517, 518, 519, 520, 521, 523, 524, 528, 531, 547, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 585, 586, 592, 593, 599, 603, 605, 607, 610, 612, 613, 632, 635, 640, 641, 642, 643, 644, 655, 656, 676, 690, 692, 693, 694, 703, 707, 709, 710, 736, 738, 768, 771, 772, 781, 782, 783, 785, 791, 792, 808, 826, 828, 830, 846, 847, 848, 856, 857, 861, 871], "median": [3, 5, 6, 27, 68, 125, 148, 155, 193, 202, 223, 235, 236, 255, 257, 260, 261, 262, 263, 265, 269, 309, 351, 412, 444, 470, 471, 472, 484, 547, 549, 564, 572, 578, 669, 690, 692, 693, 694, 708, 710, 755, 762, 769, 770, 777, 790, 793, 798, 800, 871], "nerv": [3, 5, 6, 27, 255, 260, 262, 263, 265, 351, 444, 470, 484, 547, 572], "hf": [3, 6, 27, 93, 124, 189, 262, 386, 762], "sef": [3, 6, 27, 124, 262, 386, 762, 846], "trial": [3, 6, 13, 16, 18, 27, 28, 32, 67, 68, 70, 81, 98, 101, 104, 110, 111, 114, 119, 127, 138, 139, 140, 141, 142, 147, 149, 150, 163, 164, 166, 178, 181, 189, 192, 193, 198, 199, 202, 217, 219, 222, 227, 228, 229, 230, 232, 240, 255, 260, 261, 262, 263, 265, 287, 290, 313, 319, 348, 403, 416, 419, 425, 426, 427, 429, 432, 444, 470, 471, 487, 490, 519, 521, 547, 550, 558, 605, 625, 670, 671, 673, 674, 675, 677, 678, 690, 693, 718, 719, 721, 722, 762, 768, 771, 826, 847, 871], "linear": [3, 5, 6, 8, 9, 13, 17, 19, 20, 26, 27, 40, 44, 49, 53, 54, 59, 96, 98, 104, 106, 107, 109, 117, 132, 133, 134, 139, 156, 157, 164, 174, 175, 179, 180, 192, 193, 199, 201, 202, 203, 240, 255, 257, 260, 261, 262, 263, 265, 267, 268, 269, 271, 273, 274, 275, 276, 336, 348, 403, 407, 409, 410, 415, 418, 421, 439, 441, 442, 470, 471, 472, 508, 520, 522, 529, 532, 549, 550, 564, 572, 576, 605, 614, 641, 642, 643, 655, 675, 676, 685, 690, 692, 694, 702, 727, 728, 738, 755, 757, 762, 770, 771, 777, 779, 781, 786, 790, 792, 793, 796, 798, 800, 801, 802, 826, 837, 839, 846, 847, 850, 871], "regress": [3, 6, 10, 11, 12, 15, 18, 19, 27, 31, 41, 75, 82, 95, 99, 145, 146, 163, 193, 209, 210, 222, 240, 255, 260, 261, 262, 263, 265, 348, 409, 415, 444, 470, 471, 515, 518, 547, 549, 567, 588, 593, 601, 674, 675, 676, 762, 771, 774, 793, 847, 859, 871], "limo": [3, 6, 27, 240, 255, 261, 262, 263, 348, 675, 762, 771, 861, 871], "optic": [3, 6, 27, 73, 188, 255, 258, 260, 262, 263, 265, 271, 297, 349, 359, 365, 432, 444, 446, 480, 516, 517, 528, 547, 580, 581, 585, 597, 610, 732, 738, 754, 806, 847, 871], "pump": [3, 6, 27, 255, 258, 260, 262, 263, 265, 271, 297, 349, 359, 444, 446, 516, 517, 528, 547, 597, 610, 732, 738, 754, 806, 847, 871], "magnetomet": [3, 6, 22, 27, 71, 74, 77, 78, 79, 84, 90, 106, 116, 117, 140, 143, 144, 148, 149, 160, 164, 165, 166, 167, 178, 181, 182, 189, 196, 197, 198, 200, 202, 203, 204, 205, 207, 211, 212, 213, 214, 217, 222, 252, 255, 257, 258, 260, 261, 262, 263, 265, 267, 268, 269, 271, 274, 275, 276, 292, 293, 297, 315, 349, 350, 351, 352, 353, 354, 359, 363, 364, 365, 403, 410, 424, 444, 446, 447, 466, 468, 469, 470, 471, 472, 506, 516, 517, 528, 547, 548, 549, 550, 560, 561, 562, 563, 564, 565, 566, 567, 569, 578, 589, 597, 610, 676, 690, 692, 693, 694, 732, 738, 754, 755, 761, 768, 769, 770, 772, 774, 777, 778, 781, 790, 791, 793, 798, 799, 800, 806, 826, 846, 847, 850, 853, 871], "opm": [3, 6, 27, 102, 103, 255, 257, 258, 260, 262, 263, 265, 271, 297, 349, 354, 359, 444, 446, 508, 513, 516, 517, 523, 528, 547, 597, 610, 638, 732, 738, 754, 806, 861, 871], "dspm": [3, 6, 11, 27, 29, 31, 35, 36, 37, 38, 39, 40, 41, 43, 54, 55, 58, 59, 101, 102, 103, 104, 105, 106, 163, 164, 173, 176, 177, 179, 180, 184, 185, 189, 193, 218, 219, 230, 232, 255, 257, 260, 262, 263, 264, 265, 266, 267, 268, 271, 273, 274, 275, 276, 286, 289, 292, 293, 348, 349, 353, 444, 468, 469, 470, 471, 484, 504, 509, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 528, 529, 530, 531, 533, 534, 547, 550, 567, 605, 608, 610, 612, 699, 738, 763, 771, 826, 846, 847, 856, 871], "spm": [3, 6, 27, 120, 193, 348, 349, 399, 444, 484, 509, 513, 517, 528, 547, 550, 567, 771, 859, 869, 871], "face": [3, 4, 6, 10, 27, 67, 120, 138, 140, 142, 147, 149, 159, 164, 170, 173, 193, 196, 240, 255, 260, 261, 301, 348, 349, 444, 484, 509, 513, 517, 528, 547, 550, 567, 621, 624, 690, 751, 771, 799, 819, 824, 856, 859, 871], "explor": [4, 27, 102, 103, 106, 156, 179, 193, 197, 199, 201, 204, 214, 218, 236, 237, 255, 260, 263, 275, 276, 283, 444, 669, 802, 827, 847, 848, 850], "structur": [4, 8, 9, 10, 27, 40, 42, 58, 61, 62, 68, 80, 91, 92, 109, 111, 120, 132, 133, 135, 140, 144, 145, 146, 149, 151, 152, 153, 157, 163, 164, 165, 168, 169, 171, 172, 179, 183, 184, 185, 187, 188, 192, 202, 212, 215, 216, 220, 221, 222, 223, 237, 240, 254, 255, 260, 261, 262, 263, 264, 265, 267, 268, 270, 271, 273, 274, 275, 276, 305, 306, 307, 315, 348, 366, 367, 382, 386, 387, 395, 399, 444, 460, 468, 469, 470, 471, 472, 476, 490, 491, 530, 541, 544, 546, 547, 561, 575, 578, 601, 602, 603, 604, 605, 607, 608, 618, 650, 660, 661, 662, 663, 664, 665, 666, 670, 690, 692, 693, 694, 728, 738, 794, 817, 826, 830, 831, 834, 837, 842, 844, 846, 847, 848, 859, 871], "contain": [4, 16, 18, 27, 31, 37, 40, 42, 52, 77, 85, 91, 98, 105, 109, 113, 124, 125, 132, 135, 138, 141, 142, 144, 147, 149, 153, 156, 160, 163, 164, 166, 167, 168, 169, 170, 173, 179, 181, 186, 187, 188, 189, 199, 201, 202, 203, 204, 207, 208, 211, 212, 217, 219, 222, 235, 236, 237, 247, 252, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 280, 281, 285, 292, 293, 294, 298, 302, 303, 304, 307, 308, 309, 310, 313, 314, 315, 321, 330, 333, 344, 349, 350, 351, 352, 353, 354, 355, 360, 361, 362, 363, 364, 365, 379, 383, 385, 386, 387, 403, 406, 407, 409, 410, 411, 412, 413, 415, 416, 417, 422, 424, 427, 430, 431, 432, 437, 444, 445, 446, 447, 451, 452, 453, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 478, 480, 481, 482, 483, 485, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 503, 504, 507, 509, 511, 512, 528, 536, 539, 540, 545, 549, 550, 551, 553, 555, 564, 565, 569, 575, 577, 578, 582, 584, 590, 591, 595, 596, 597, 598, 599, 600, 602, 603, 604, 605, 607, 608, 609, 613, 616, 621, 622, 624, 630, 632, 634, 635, 638, 639, 645, 646, 647, 648, 649, 650, 651, 652, 653, 656, 658, 659, 667, 669, 675, 677, 678, 680, 681, 682, 685, 686, 690, 691, 692, 693, 694, 702, 704, 714, 719, 721, 722, 730, 738, 754, 755, 756, 757, 762, 765, 766, 768, 769, 770, 771, 772, 774, 775, 777, 778, 779, 787, 790, 793, 794, 795, 796, 797, 798, 800, 801, 802, 811, 816, 819, 821, 822, 824, 826, 829, 830, 846, 847, 848, 850, 853, 856, 857, 871], "replic": [4, 16, 226, 230, 231, 232, 266, 667, 847, 850, 851, 871], "extend": [4, 74, 139, 142, 149, 164, 178, 197, 202, 204, 207, 227, 240, 254, 255, 257, 258, 260, 261, 262, 263, 269, 275, 349, 470, 471, 472, 503, 511, 549, 550, 553, 561, 564, 569, 576, 578, 657, 690, 692, 694, 728, 755, 766, 770, 777, 790, 793, 798, 800, 834, 837, 846, 859, 871], "main": [4, 48, 91, 98, 141, 154, 166, 169, 205, 213, 226, 232, 255, 260, 261, 321, 386, 462, 484, 671, 673, 768, 828, 830, 838, 847, 853, 854, 871], "tool": [4, 27, 53, 54, 68, 77, 86, 132, 138, 149, 153, 156, 159, 188, 196, 197, 199, 202, 204, 208, 223, 232, 237, 240, 247, 267, 268, 271, 274, 275, 276, 470, 471, 472, 507, 532, 828, 833, 834, 835, 836, 838, 842, 846, 850, 851, 852, 853, 854, 858, 859, 861, 869, 871], "integr": [4, 153, 158, 198, 202, 222, 232, 240, 532, 550, 578, 650, 830, 834, 842, 853, 856, 871], "meeg": [4, 237], "matlab": [4, 19, 192, 240, 298, 409, 490, 587, 603, 607, 836, 837, 847, 854, 855, 859, 869, 871], "toolbox": [4, 19, 68, 149, 153, 192, 240, 298, 409, 442, 558, 837, 847], "origin": [4, 5, 8, 9, 11, 12, 13, 16, 18, 21, 22, 24, 26, 32, 33, 37, 40, 41, 44, 45, 48, 49, 68, 69, 70, 73, 76, 77, 78, 84, 90, 91, 93, 94, 97, 100, 104, 107, 109, 110, 111, 114, 115, 118, 125, 132, 133, 134, 135, 138, 139, 140, 142, 143, 144, 147, 149, 150, 154, 156, 157, 158, 159, 160, 164, 165, 167, 168, 170, 174, 175, 176, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 192, 193, 196, 197, 198, 199, 200, 202, 203, 204, 205, 207, 208, 211, 213, 219, 224, 225, 226, 227, 230, 232, 235, 236, 252, 253, 254, 255, 257, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 273, 274, 275, 276, 278, 280, 281, 292, 293, 307, 355, 363, 403, 410, 417, 418, 419, 424, 427, 437, 465, 470, 471, 472, 479, 482, 486, 490, 503, 509, 518, 549, 550, 551, 560, 561, 564, 569, 578, 585, 593, 603, 607, 610, 615, 628, 630, 632, 639, 641, 642, 643, 650, 655, 675, 682, 690, 692, 693, 694, 734, 738, 754, 755, 762, 768, 770, 772, 774, 777, 778, 781, 788, 790, 791, 792, 793, 794, 797, 798, 800, 818, 826, 830, 838, 846, 847, 853, 856, 871], "interfac": [4, 8, 15, 44, 85, 132, 153, 156, 164, 187, 193, 197, 199, 202, 203, 214, 240, 262, 263, 369, 374, 462, 463, 551, 738, 777, 833, 837, 842, 847, 856, 871], "eeglab": [4, 68, 125, 166, 199, 202, 240, 255, 257, 260, 261, 262, 263, 269, 307, 325, 403, 410, 433, 436, 470, 471, 472, 487, 549, 550, 558, 564, 591, 596, 602, 690, 692, 694, 755, 762, 770, 772, 774, 777, 778, 781, 788, 790, 792, 793, 794, 798, 800, 853, 871], "In": [4, 5, 10, 15, 16, 19, 21, 39, 41, 42, 43, 44, 45, 58, 68, 72, 76, 79, 80, 84, 85, 87, 91, 98, 100, 109, 111, 112, 113, 115, 123, 124, 129, 132, 133, 135, 138, 140, 142, 147, 148, 149, 150, 153, 154, 156, 158, 159, 160, 164, 165, 166, 168, 169, 170, 173, 174, 176, 179, 186, 188, 189, 192, 193, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 211, 212, 213, 219, 222, 223, 224, 232, 235, 236, 237, 240, 252, 254, 255, 257, 260, 261, 262, 263, 265, 267, 268, 269, 270, 271, 274, 275, 276, 284, 292, 293, 297, 298, 303, 305, 315, 322, 324, 336, 349, 353, 354, 363, 364, 365, 366, 403, 405, 409, 410, 419, 420, 424, 427, 436, 438, 446, 447, 466, 468, 469, 470, 471, 472, 479, 516, 517, 518, 519, 520, 521, 525, 528, 545, 549, 550, 551, 552, 564, 565, 566, 567, 572, 575, 576, 584, 586, 593, 595, 618, 635, 655, 658, 676, 685, 690, 692, 693, 694, 698, 699, 700, 701, 703, 709, 710, 720, 722, 723, 726, 735, 738, 751, 762, 768, 769, 770, 771, 772, 774, 775, 777, 778, 781, 782, 789, 790, 791, 792, 793, 796, 798, 799, 802, 826, 828, 830, 831, 835, 836, 838, 841, 846, 847, 850, 852, 853, 856, 857, 871], "summari": [4, 10, 170, 198, 202, 214, 267, 268, 271, 274, 275, 276, 526, 527, 682, 830, 856], "fetch": [4, 135, 245, 374, 378, 379, 380, 381, 382, 383, 388, 396, 397, 830, 847, 871], "subject": [4, 5, 7, 8, 9, 10, 11, 19, 22, 24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 57, 58, 59, 66, 69, 70, 77, 78, 80, 86, 87, 88, 92, 101, 106, 109, 110, 112, 113, 115, 121, 122, 123, 124, 128, 131, 132, 133, 134, 135, 138, 141, 148, 149, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 166, 167, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 187, 188, 189, 193, 196, 197, 198, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 218, 219, 222, 223, 224, 226, 227, 230, 231, 232, 233, 236, 237, 240, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 292, 293, 298, 302, 303, 304, 307, 336, 337, 338, 339, 344, 346, 347, 355, 360, 361, 362, 366, 374, 378, 380, 381, 382, 383, 388, 396, 397, 422, 437, 453, 455, 457, 459, 461, 462, 463, 464, 465, 470, 471, 472, 473, 476, 503, 505, 507, 509, 513, 516, 517, 528, 536, 537, 550, 554, 564, 575, 578, 595, 599, 605, 610, 612, 613, 615, 618, 622, 627, 628, 629, 630, 638, 639, 640, 642, 643, 644, 653, 655, 656, 667, 671, 673, 682, 685, 686, 728, 730, 737, 738, 754, 756, 761, 766, 767, 780, 794, 796, 801, 802, 811, 820, 821, 826, 836, 844, 846, 848, 850, 853, 859, 871], "If": [4, 27, 28, 31, 42, 43, 67, 68, 79, 96, 98, 112, 114, 117, 124, 132, 133, 135, 138, 140, 142, 144, 147, 148, 149, 154, 157, 158, 159, 163, 166, 167, 168, 169, 170, 173, 179, 180, 186, 187, 188, 193, 197, 198, 199, 200, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 217, 222, 223, 224, 230, 235, 237, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 297, 298, 299, 300, 301, 302, 303, 304, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 324, 325, 327, 330, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 424, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 539, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 578, 579, 581, 582, 585, 586, 587, 590, 591, 592, 593, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 612, 613, 614, 615, 616, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 671, 672, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 686, 687, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 730, 733, 737, 738, 743, 746, 747, 748, 750, 751, 752, 753, 754, 755, 756, 757, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 806, 807, 808, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 828, 829, 830, 833, 834, 835, 836, 837, 838, 841, 846, 847, 850, 851, 852, 853, 854, 856, 857, 871], "disk": [4, 29, 77, 105, 107, 140, 141, 147, 148, 156, 164, 168, 170, 175, 178, 182, 197, 203, 206, 207, 211, 212, 213, 219, 252, 254, 255, 256, 260, 261, 262, 263, 265, 266, 278, 308, 379, 422, 444, 470, 471, 472, 552, 601, 608, 610, 612, 618, 639, 692, 694, 712, 738, 768, 772, 776, 778, 791, 818, 820, 836, 846, 850, 853, 856, 871], "fetcher": [4, 135, 847, 859, 871], "automat": [4, 68, 76, 77, 80, 91, 98, 138, 139, 140, 142, 143, 147, 148, 149, 153, 154, 164, 166, 167, 168, 170, 180, 187, 188, 189, 196, 197, 198, 199, 200, 202, 203, 204, 207, 211, 213, 214, 217, 227, 240, 252, 254, 255, 257, 260, 261, 262, 263, 265, 267, 268, 271, 274, 275, 276, 278, 307, 313, 335, 355, 371, 372, 373, 374, 376, 377, 384, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 406, 410, 413, 416, 424, 427, 435, 451, 452, 459, 461, 470, 471, 472, 477, 484, 488, 491, 494, 513, 549, 550, 552, 560, 561, 562, 564, 569, 570, 573, 576, 578, 593, 604, 615, 626, 629, 634, 635, 639, 650, 677, 678, 680, 681, 690, 693, 719, 722, 734, 738, 755, 756, 757, 761, 762, 768, 771, 774, 775, 776, 777, 784, 785, 791, 793, 796, 801, 802, 829, 830, 836, 837, 846, 847, 853, 859, 871], "remot": [4, 245, 380, 804, 828, 830, 836, 859], "repositori": [4, 168, 831, 837, 852], "dure": [4, 19, 32, 37, 42, 44, 68, 78, 80, 91, 97, 100, 113, 118, 124, 132, 134, 139, 142, 147, 153, 155, 158, 164, 165, 166, 169, 170, 178, 180, 189, 193, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 211, 212, 213, 214, 237, 240, 252, 255, 258, 260, 261, 262, 263, 264, 265, 267, 270, 271, 273, 275, 276, 277, 292, 293, 299, 336, 338, 342, 349, 353, 354, 356, 361, 363, 364, 365, 403, 409, 410, 420, 426, 427, 438, 446, 447, 463, 466, 468, 469, 470, 471, 472, 473, 484, 498, 509, 513, 528, 536, 550, 569, 575, 578, 593, 632, 635, 640, 655, 658, 664, 665, 666, 685, 690, 692, 693, 694, 696, 699, 720, 723, 727, 736, 738, 754, 757, 768, 775, 778, 782, 785, 791, 796, 802, 826, 829, 835, 838, 846, 847, 848, 852, 853, 856, 871], "inform": [4, 5, 9, 11, 21, 22, 26, 28, 29, 31, 33, 34, 37, 38, 39, 41, 42, 43, 46, 47, 48, 50, 51, 53, 54, 56, 57, 58, 59, 60, 62, 66, 77, 81, 87, 89, 90, 91, 92, 98, 101, 104, 105, 107, 121, 128, 131, 132, 133, 138, 139, 140, 141, 142, 144, 147, 148, 149, 154, 156, 157, 158, 160, 163, 164, 166, 168, 170, 173, 175, 177, 178, 179, 180, 186, 187, 188, 189, 192, 193, 200, 201, 202, 203, 204, 205, 207, 209, 210, 211, 213, 217, 218, 219, 222, 224, 227, 230, 232, 236, 237, 240, 245, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 278, 280, 281, 292, 293, 294, 300, 301, 305, 306, 313, 314, 315, 319, 321, 322, 324, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 349, 353, 355, 363, 364, 365, 367, 403, 405, 410, 411, 412, 422, 423, 427, 433, 434, 435, 436, 438, 439, 441, 442, 444, 447, 454, 455, 461, 463, 466, 469, 470, 471, 472, 473, 476, 482, 490, 501, 506, 509, 512, 513, 514, 518, 528, 546, 547, 549, 550, 560, 561, 569, 575, 576, 578, 583, 584, 589, 591, 594, 603, 605, 606, 607, 625, 626, 632, 637, 638, 654, 655, 658, 677, 681, 687, 689, 690, 691, 692, 693, 694, 705, 720, 723, 728, 733, 734, 738, 751, 754, 758, 762, 763, 764, 766, 769, 773, 779, 780, 786, 790, 794, 800, 817, 826, 828, 829, 830, 833, 834, 837, 842, 847, 848, 851, 852, 854, 871], "e": [4, 7, 8, 12, 28, 40, 41, 43, 45, 46, 53, 67, 68, 69, 77, 81, 98, 109, 111, 117, 132, 135, 138, 139, 141, 142, 144, 148, 149, 151, 153, 155, 158, 159, 160, 163, 164, 166, 167, 168, 176, 178, 183, 186, 187, 188, 192, 193, 196, 197, 198, 199, 200, 202, 203, 205, 206, 207, 211, 212, 217, 218, 219, 222, 223, 224, 227, 230, 232, 236, 237, 240, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 283, 284, 292, 293, 294, 297, 298, 301, 303, 305, 307, 308, 322, 324, 333, 335, 346, 349, 353, 354, 360, 363, 364, 365, 374, 379, 380, 382, 387, 396, 397, 403, 405, 406, 409, 410, 412, 413, 414, 417, 418, 419, 422, 423, 424, 427, 430, 432, 435, 436, 437, 439, 441, 442, 444, 445, 446, 447, 453, 459, 462, 465, 466, 468, 469, 470, 471, 472, 473, 483, 484, 486, 488, 503, 505, 507, 510, 511, 512, 513, 516, 517, 523, 524, 525, 526, 527, 528, 529, 532, 533, 534, 536, 549, 550, 552, 553, 558, 559, 560, 561, 564, 565, 566, 567, 569, 571, 572, 575, 578, 584, 585, 586, 593, 598, 605, 608, 609, 612, 613, 618, 625, 626, 627, 628, 629, 630, 636, 639, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 658, 661, 675, 676, 677, 678, 679, 680, 681, 682, 685, 686, 689, 690, 692, 693, 694, 698, 699, 700, 701, 702, 703, 709, 710, 722, 726, 728, 738, 743, 751, 754, 755, 756, 761, 762, 766, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 781, 782, 784, 785, 789, 790, 791, 792, 793, 796, 798, 800, 801, 804, 811, 816, 819, 826, 828, 829, 830, 831, 834, 836, 842, 846, 847, 850, 852, 853, 856, 857, 859, 871], "rate": [4, 67, 94, 98, 100, 178, 187, 188, 192, 199, 200, 202, 226, 236, 240, 255, 258, 259, 260, 261, 262, 263, 265, 267, 268, 271, 274, 275, 276, 367, 408, 438, 442, 444, 470, 471, 472, 479, 486, 492, 571, 576, 592, 643, 655, 668, 674, 676, 679, 690, 692, 693, 694, 707, 709, 768, 770, 779, 791, 850, 871], "per": [4, 31, 46, 87, 91, 98, 104, 107, 117, 123, 128, 140, 142, 148, 149, 156, 164, 167, 178, 198, 202, 204, 214, 222, 227, 232, 236, 252, 255, 260, 261, 262, 263, 265, 267, 268, 269, 271, 272, 273, 274, 275, 276, 278, 309, 316, 355, 369, 381, 396, 403, 410, 413, 416, 424, 427, 436, 437, 470, 471, 472, 526, 527, 532, 533, 534, 551, 554, 595, 635, 642, 671, 673, 686, 690, 692, 694, 696, 699, 705, 707, 717, 718, 719, 728, 738, 768, 769, 770, 777, 799, 830, 836, 852, 853, 859, 871], "name": [4, 5, 7, 8, 9, 10, 18, 22, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 54, 57, 58, 66, 68, 80, 87, 89, 90, 91, 92, 97, 98, 100, 106, 109, 123, 128, 129, 132, 133, 135, 139, 140, 141, 142, 143, 147, 148, 157, 158, 159, 164, 166, 167, 168, 169, 170, 175, 176, 177, 178, 188, 189, 193, 197, 198, 199, 202, 203, 205, 207, 208, 214, 217, 218, 219, 222, 223, 235, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 298, 302, 303, 304, 305, 307, 308, 313, 316, 317, 318, 319, 320, 322, 323, 324, 329, 331, 332, 333, 335, 346, 354, 355, 358, 360, 361, 362, 363, 364, 367, 375, 379, 382, 385, 403, 405, 406, 407, 409, 410, 411, 412, 413, 415, 416, 417, 419, 421, 422, 424, 427, 430, 433, 434, 435, 436, 444, 445, 453, 455, 456, 457, 459, 461, 462, 463, 464, 465, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 502, 503, 505, 509, 510, 531, 535, 539, 540, 541, 547, 548, 549, 550, 551, 552, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 575, 579, 584, 586, 589, 590, 593, 595, 596, 598, 599, 600, 602, 603, 604, 605, 607, 609, 610, 611, 612, 613, 615, 616, 618, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 632, 635, 638, 639, 641, 642, 643, 644, 655, 658, 667, 671, 675, 676, 682, 685, 686, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 703, 709, 710, 711, 713, 722, 724, 726, 735, 737, 738, 743, 754, 755, 756, 757, 759, 762, 766, 767, 768, 769, 770, 772, 774, 775, 776, 777, 782, 788, 789, 790, 791, 792, 793, 794, 796, 797, 798, 800, 801, 802, 811, 815, 816, 817, 818, 821, 822, 823, 824, 825, 826, 828, 829, 834, 835, 836, 838, 847, 848, 853, 857, 861, 871], "etc": [4, 27, 31, 35, 46, 75, 141, 153, 158, 164, 165, 166, 169, 170, 173, 186, 187, 188, 196, 197, 198, 202, 207, 211, 214, 217, 222, 230, 237, 253, 255, 258, 260, 261, 262, 263, 265, 266, 267, 271, 275, 329, 432, 444, 445, 470, 471, 472, 479, 490, 493, 512, 522, 547, 550, 578, 603, 607, 632, 637, 664, 665, 666, 667, 677, 678, 680, 681, 690, 692, 693, 694, 738, 762, 766, 769, 796, 826, 830, 834, 835, 848, 850, 852, 853, 856, 857, 859, 871], "mat": [4, 19, 192, 240, 265, 490, 603, 607, 853, 871], "store": [4, 16, 29, 30, 68, 87, 90, 91, 92, 101, 106, 112, 113, 132, 133, 138, 139, 140, 141, 142, 147, 148, 149, 153, 154, 156, 158, 160, 166, 167, 168, 170, 173, 180, 187, 188, 189, 197, 198, 203, 204, 207, 208, 211, 213, 214, 218, 219, 237, 252, 253, 254, 255, 258, 260, 261, 262, 263, 265, 270, 271, 272, 274, 278, 319, 340, 358, 374, 379, 386, 387, 396, 397, 405, 407, 418, 427, 432, 436, 441, 462, 470, 471, 472, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 510, 528, 537, 539, 550, 558, 564, 577, 596, 602, 603, 607, 610, 633, 642, 643, 655, 670, 690, 691, 693, 695, 696, 697, 698, 699, 700, 701, 711, 739, 746, 758, 791, 817, 818, 826, 830, 846, 847, 848, 850, 853, 856, 871], "fit": [4, 7, 8, 10, 11, 12, 13, 15, 16, 18, 21, 24, 39, 40, 44, 49, 58, 68, 69, 71, 72, 74, 76, 77, 78, 80, 85, 98, 108, 113, 120, 135, 139, 149, 150, 154, 156, 163, 164, 168, 170, 175, 177, 181, 182, 183, 184, 185, 187, 193, 197, 200, 201, 204, 205, 206, 207, 226, 240, 246, 252, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 269, 270, 275, 295, 300, 301, 307, 336, 337, 338, 339, 342, 346, 347, 348, 360, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 422, 424, 432, 442, 446, 470, 471, 472, 483, 509, 512, 517, 547, 549, 550, 551, 554, 557, 559, 560, 561, 564, 569, 570, 578, 608, 639, 654, 675, 690, 692, 693, 694, 703, 709, 710, 738, 755, 762, 766, 770, 772, 774, 777, 778, 781, 782, 783, 785, 788, 790, 792, 793, 794, 798, 800, 830, 842, 847, 850, 853, 857, 860, 871], "inferenti": [4, 222], "evalu": [4, 31, 43, 53, 54, 160, 186, 193, 207, 222, 240, 272, 355, 420, 429, 468, 469, 501, 532, 559, 569, 650, 847, 850, 852, 853], "signific": [4, 70, 97, 98, 109, 149, 163, 170, 186, 196, 198, 199, 201, 202, 204, 222, 224, 225, 226, 227, 228, 229, 237, 240, 255, 257, 260, 261, 262, 263, 265, 313, 319, 348, 403, 409, 410, 442, 470, 471, 472, 525, 549, 550, 601, 677, 678, 680, 681, 682, 690, 692, 694, 755, 770, 774, 777, 793, 798, 800, 846, 853, 856, 859], "jose": [4, 871], "garcia": 4, "alani": [4, 871], "jcg": 4, "gmail": [4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 32, 33, 37, 38, 41, 42, 43, 44, 45, 49, 50, 56, 57, 59, 64, 67, 70, 71, 72, 74, 76, 77, 78, 79, 81, 85, 87, 90, 91, 92, 96, 98, 100, 106, 109, 110, 111, 115, 117, 118, 120, 122, 123, 124, 125, 126, 129, 130, 132, 133, 134, 135, 139, 155, 157, 159, 177, 178, 180, 181, 182, 189, 192, 206, 219, 222, 226, 227, 230, 231, 232, 236, 237], "com": [4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 32, 33, 37, 38, 41, 42, 43, 44, 45, 49, 50, 56, 57, 59, 64, 67, 70, 71, 72, 74, 76, 77, 78, 79, 81, 85, 87, 90, 91, 92, 98, 100, 106, 109, 110, 111, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 129, 130, 132, 133, 134, 135, 139, 155, 157, 159, 177, 178, 180, 181, 182, 189, 192, 206, 218, 219, 222, 226, 227, 230, 231, 232, 236, 237, 240, 255, 260, 261, 262, 263, 271, 381, 470, 471, 472, 479, 647, 652, 828, 830, 838, 850], "matplotlib": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 28, 29, 36, 37, 38, 40, 44, 46, 52, 57, 66, 67, 68, 69, 70, 71, 79, 83, 87, 89, 90, 93, 94, 96, 101, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 117, 124, 128, 129, 130, 132, 134, 135, 142, 143, 144, 149, 158, 168, 169, 170, 174, 175, 178, 179, 181, 182, 192, 193, 197, 199, 200, 202, 203, 204, 205, 207, 208, 211, 214, 219, 222, 223, 224, 225, 226, 227, 232, 236, 237, 255, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 274, 275, 276, 307, 308, 403, 410, 470, 471, 472, 549, 550, 564, 612, 689, 690, 691, 692, 694, 738, 739, 741, 751, 753, 755, 756, 758, 760, 761, 762, 763, 764, 765, 766, 767, 768, 770, 771, 772, 774, 775, 776, 777, 778, 779, 780, 781, 783, 785, 786, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 807, 808, 810, 828, 829, 830, 848, 871], "pyplot": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 28, 29, 36, 37, 38, 40, 44, 46, 52, 57, 66, 67, 68, 69, 70, 71, 79, 83, 87, 89, 90, 93, 94, 96, 101, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 117, 124, 128, 129, 130, 132, 134, 135, 142, 143, 144, 149, 158, 168, 170, 174, 175, 178, 179, 181, 182, 192, 193, 199, 200, 203, 204, 207, 208, 211, 219, 222, 223, 224, 225, 226, 227, 232, 236, 237, 255, 259, 260, 261, 262, 263, 690, 741, 762, 772, 774, 799, 871], "plt": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 28, 29, 36, 37, 38, 40, 44, 46, 52, 57, 66, 67, 68, 69, 70, 71, 79, 83, 87, 89, 90, 93, 94, 96, 101, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 117, 124, 128, 129, 130, 132, 134, 135, 142, 143, 144, 149, 158, 168, 170, 174, 175, 178, 179, 181, 182, 192, 193, 199, 200, 203, 204, 207, 208, 211, 219, 222, 223, 224, 225, 226, 227, 232, 236, 237, 262, 263, 316, 776], "stat": [4, 93, 94, 96, 97, 98, 109, 110, 139, 192, 222, 223, 224, 225, 226, 227, 230, 231, 232, 237, 255, 260, 261, 313, 324, 550, 558, 767, 848, 861, 868, 871], "linear_regress": [4, 98, 139, 222, 861, 871], "plot_ev": [4, 7, 135, 164, 208, 212, 255, 260, 261, 768, 861, 871], "combine_evok": [4, 7, 96, 139, 142, 147, 149, 164, 174, 189, 208, 223, 225, 857, 861, 871], "subj": [4, 158, 202], "experi": [4, 19, 44, 64, 68, 125, 149, 163, 164, 166, 167, 178, 189, 197, 198, 204, 207, 208, 211, 212, 240, 265, 826, 830, 847, 849, 853, 871], "particip": [4, 69, 71, 73, 74, 78, 79, 80, 87, 90, 124, 139, 142, 144, 149, 164, 165, 166, 167, 170, 196, 197, 198, 200, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 217, 219, 237, 826, 847, 852, 859], "perform": [4, 8, 10, 19, 31, 44, 53, 73, 79, 81, 97, 98, 100, 109, 116, 135, 138, 141, 142, 144, 147, 149, 153, 154, 155, 164, 165, 166, 167, 176, 186, 187, 193, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 211, 222, 224, 226, 230, 232, 253, 255, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 278, 283, 286, 292, 293, 348, 349, 350, 352, 354, 355, 369, 406, 409, 413, 415, 416, 419, 420, 424, 438, 439, 444, 446, 459, 460, 461, 462, 466, 468, 469, 470, 471, 472, 478, 479, 486, 509, 510, 512, 513, 517, 518, 519, 520, 521, 523, 524, 528, 533, 534, 549, 550, 552, 555, 562, 563, 564, 566, 567, 569, 570, 576, 578, 593, 605, 638, 641, 642, 643, 655, 667, 672, 676, 677, 678, 679, 680, 681, 683, 690, 692, 693, 694, 695, 696, 697, 698, 699, 700, 707, 708, 709, 710, 718, 719, 720, 721, 722, 728, 754, 755, 762, 768, 769, 770, 773, 777, 783, 785, 790, 791, 792, 793, 798, 800, 804, 826, 828, 836, 837, 838, 846, 847, 853, 856, 871], "two": [4, 5, 12, 16, 19, 22, 36, 41, 44, 46, 53, 54, 64, 67, 68, 70, 72, 73, 78, 81, 85, 87, 109, 112, 114, 129, 130, 132, 133, 135, 139, 140, 142, 144, 148, 149, 153, 154, 156, 158, 164, 166, 167, 168, 169, 170, 173, 176, 178, 188, 189, 193, 196, 198, 199, 200, 201, 202, 203, 204, 205, 208, 211, 212, 213, 214, 219, 222, 224, 226, 230, 232, 235, 237, 240, 254, 255, 260, 261, 262, 263, 266, 267, 268, 271, 272, 274, 275, 276, 292, 293, 307, 315, 349, 353, 354, 363, 364, 365, 396, 403, 405, 410, 414, 418, 426, 427, 437, 439, 441, 442, 443, 446, 447, 466, 468, 469, 470, 471, 472, 493, 505, 523, 528, 545, 550, 553, 560, 564, 569, 576, 577, 592, 593, 632, 635, 643, 667, 671, 672, 673, 675, 677, 678, 679, 680, 681, 685, 690, 692, 693, 694, 707, 708, 720, 728, 738, 743, 746, 768, 769, 770, 778, 785, 791, 796, 826, 830, 836, 847, 850, 852, 853, 856, 871], "altern": [4, 111, 124, 159, 160, 167, 170, 189, 196, 198, 199, 202, 214, 222, 236, 237, 251, 253, 254, 255, 257, 260, 261, 262, 263, 269, 349, 403, 410, 470, 471, 472, 494, 512, 549, 550, 564, 600, 604, 679, 690, 692, 694, 738, 755, 770, 777, 781, 790, 793, 798, 800, 828, 830, 836, 847, 850, 856, 858, 871], "choic": [4, 111, 153, 158, 168, 169, 182, 199, 204, 212, 224, 273, 443, 453, 528, 683, 828, 834, 847, 853], "task": [4, 10, 32, 33, 45, 68, 109, 110, 134, 135, 141, 142, 153, 154, 163, 167, 173, 193, 197, 202, 236, 240, 374, 406, 413, 847, 853, 854, 857, 859, 871], "discrimin": [4, 9, 18, 80, 193, 237, 240, 403, 407, 410, 550, 847], "between": [4, 8, 10, 16, 19, 22, 26, 27, 35, 37, 39, 44, 46, 58, 59, 67, 79, 80, 85, 93, 96, 97, 100, 105, 110, 111, 124, 125, 130, 131, 132, 134, 135, 138, 139, 142, 144, 147, 148, 149, 154, 155, 156, 158, 159, 160, 163, 164, 167, 168, 169, 170, 174, 176, 186, 187, 188, 189, 192, 193, 197, 198, 199, 201, 202, 203, 205, 206, 207, 208, 211, 212, 213, 219, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 237, 240, 252, 253, 254, 255, 260, 261, 262, 263, 265, 266, 267, 268, 270, 271, 273, 274, 275, 276, 283, 303, 307, 315, 316, 336, 348, 349, 355, 356, 358, 359, 360, 403, 404, 409, 415, 419, 422, 424, 426, 427, 429, 437, 444, 447, 448, 466, 468, 469, 470, 471, 472, 493, 510, 511, 523, 525, 528, 532, 533, 534, 547, 550, 552, 553, 555, 558, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 573, 576, 577, 578, 582, 584, 605, 608, 609, 632, 640, 641, 642, 643, 645, 647, 650, 651, 654, 655, 658, 660, 661, 662, 664, 665, 669, 670, 677, 678, 680, 681, 682, 685, 690, 691, 693, 695, 697, 698, 700, 704, 708, 710, 714, 715, 721, 728, 738, 743, 754, 756, 757, 759, 762, 764, 768, 771, 772, 774, 775, 777, 791, 792, 795, 796, 798, 801, 802, 804, 817, 826, 828, 830, 836, 838, 846, 847, 850, 852, 853, 856, 859, 871], "stimuli": [4, 19, 67, 113, 125, 139, 142, 144, 147, 149, 164, 178, 189, 192, 201, 240, 409, 553, 826, 847], "The": [4, 5, 7, 8, 9, 11, 14, 15, 16, 18, 19, 21, 27, 31, 33, 37, 40, 42, 43, 44, 45, 46, 47, 48, 51, 57, 58, 59, 62, 64, 67, 72, 73, 76, 77, 78, 79, 80, 81, 85, 91, 92, 98, 100, 101, 104, 106, 107, 109, 110, 111, 112, 113, 117, 123, 124, 125, 131, 132, 133, 134, 135, 139, 140, 141, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 169, 170, 171, 172, 175, 179, 181, 182, 184, 185, 186, 187, 188, 189, 192, 193, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 236, 237, 238, 239, 240, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 374, 375, 378, 379, 380, 381, 382, 383, 385, 387, 388, 395, 396, 397, 399, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 486, 488, 490, 491, 492, 493, 494, 496, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 544, 545, 546, 547, 549, 550, 551, 552, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 629, 630, 631, 632, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 675, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 739, 740, 741, 743, 744, 746, 747, 748, 749, 750, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 820, 821, 822, 823, 825, 826, 828, 830, 833, 834, 836, 842, 848, 849, 850, 851, 854, 855, 857, 859, 871], "same": [4, 18, 19, 28, 43, 44, 53, 54, 57, 68, 72, 73, 80, 87, 96, 100, 106, 110, 111, 124, 132, 133, 138, 139, 140, 142, 147, 148, 149, 154, 158, 159, 160, 166, 167, 168, 169, 173, 174, 176, 181, 186, 188, 189, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 212, 213, 214, 217, 222, 223, 224, 226, 227, 230, 231, 232, 235, 252, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 280, 281, 283, 292, 295, 304, 309, 312, 323, 348, 349, 353, 354, 355, 365, 367, 383, 403, 410, 411, 416, 424, 427, 428, 437, 438, 453, 456, 460, 461, 466, 470, 471, 472, 478, 479, 486, 487, 496, 499, 536, 550, 551, 552, 561, 566, 567, 568, 569, 578, 579, 592, 596, 602, 603, 618, 636, 637, 640, 641, 642, 643, 650, 655, 656, 672, 676, 677, 678, 680, 681, 685, 690, 692, 693, 694, 702, 707, 708, 716, 718, 719, 720, 721, 722, 723, 728, 738, 743, 754, 755, 762, 768, 769, 770, 772, 774, 777, 779, 781, 790, 791, 796, 797, 798, 799, 800, 824, 830, 835, 842, 847, 850, 853, 854, 857, 871], "whole": [4, 28, 53, 54, 68, 160, 197, 222, 240, 267, 268, 271, 274, 275, 276, 437, 505, 578, 595, 639, 656, 691, 738, 764, 798, 830, 838, 847, 871], "vari": [4, 19, 22, 45, 46, 58, 139, 153, 188, 192, 199, 202, 203, 206, 207, 219, 222, 255, 260, 261, 265, 267, 268, 271, 274, 275, 276, 336, 337, 338, 339, 340, 341, 426, 437, 642, 681, 761, 847, 853, 856, 859, 871], "level": [4, 8, 9, 27, 43, 95, 98, 99, 119, 127, 132, 139, 140, 142, 148, 149, 153, 158, 163, 164, 166, 168, 169, 178, 179, 186, 192, 196, 198, 199, 202, 203, 219, 222, 224, 225, 226, 227, 228, 230, 231, 232, 237, 240, 252, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 298, 299, 300, 301, 302, 303, 304, 307, 311, 312, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 408, 409, 410, 413, 414, 416, 419, 420, 422, 424, 428, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 446, 447, 448, 453, 454, 458, 459, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 505, 506, 507, 508, 509, 510, 512, 513, 514, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 543, 546, 547, 549, 550, 552, 553, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 573, 574, 575, 576, 578, 579, 581, 582, 585, 586, 587, 590, 591, 592, 593, 597, 598, 599, 600, 601, 602, 604, 605, 606, 608, 609, 610, 612, 613, 614, 615, 616, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 635, 637, 638, 639, 641, 642, 643, 644, 654, 655, 658, 660, 661, 662, 663, 664, 665, 666, 669, 671, 673, 677, 678, 679, 680, 681, 685, 686, 687, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 703, 707, 708, 709, 710, 714, 718, 719, 721, 722, 723, 724, 727, 728, 733, 736, 737, 738, 746, 754, 755, 763, 766, 770, 771, 772, 773, 774, 777, 778, 781, 782, 783, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 807, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 828, 830, 837, 847, 848, 853, 855, 868, 871], "nois": [4, 5, 7, 11, 18, 21, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 61, 65, 68, 72, 79, 81, 85, 87, 90, 91, 92, 101, 104, 105, 106, 107, 111, 117, 119, 121, 127, 142, 144, 147, 149, 150, 160, 164, 170, 174, 176, 177, 178, 179, 180, 181, 182, 183, 187, 189, 192, 193, 197, 199, 201, 205, 207, 211, 214, 219, 222, 230, 232, 240, 252, 255, 257, 260, 261, 262, 263, 265, 267, 268, 270, 271, 274, 275, 276, 292, 293, 295, 342, 348, 349, 350, 351, 352, 353, 354, 363, 364, 365, 403, 410, 411, 426, 446, 447, 466, 468, 469, 470, 471, 472, 476, 506, 517, 523, 524, 528, 530, 533, 534, 550, 551, 578, 586, 587, 599, 605, 642, 643, 644, 654, 692, 694, 763, 768, 772, 776, 778, 791, 792, 815, 826, 850, 856, 871], "less": [4, 5, 10, 18, 24, 26, 39, 40, 43, 44, 45, 48, 49, 68, 76, 84, 111, 116, 121, 132, 138, 139, 141, 148, 149, 154, 156, 157, 169, 170, 174, 179, 181, 182, 183, 186, 196, 197, 199, 200, 202, 204, 205, 207, 208, 211, 218, 222, 224, 237, 358, 444, 468, 469, 470, 471, 472, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 510, 517, 550, 558, 575, 576, 583, 677, 678, 679, 680, 681, 685, 738, 830, 837, 847, 850, 852, 853, 871], "discern": [4, 847], "observ": [4, 73, 98, 135, 142, 149, 154, 202, 204, 208, 222, 224, 226, 227, 230, 232, 237, 255, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 442, 470, 471, 472, 550, 671, 676, 677, 678, 679, 680, 681, 690, 692, 693, 694, 695, 696, 697, 791, 826, 846, 847], "fig": [4, 5, 10, 11, 12, 13, 15, 18, 19, 21, 22, 24, 38, 40, 41, 44, 46, 51, 57, 66, 67, 68, 69, 70, 71, 77, 78, 79, 84, 90, 93, 96, 100, 101, 106, 109, 110, 111, 112, 113, 115, 117, 120, 121, 122, 124, 132, 133, 134, 135, 139, 142, 144, 148, 149, 154, 155, 156, 157, 158, 164, 168, 170, 174, 175, 176, 178, 179, 180, 181, 183, 189, 192, 193, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 213, 219, 222, 223, 225, 226, 227, 236, 237, 255, 257, 258, 259, 260, 261, 262, 263, 269, 270, 273, 275, 276, 307, 308, 403, 410, 470, 471, 472, 549, 550, 690, 691, 692, 694, 741, 751, 754, 755, 756, 758, 759, 760, 761, 762, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 798, 799, 802, 808, 871], "similar": [4, 16, 17, 18, 19, 20, 27, 32, 57, 59, 68, 85, 100, 106, 109, 111, 128, 134, 135, 138, 139, 140, 141, 142, 148, 158, 168, 193, 196, 197, 199, 201, 202, 203, 204, 205, 208, 211, 218, 222, 224, 227, 235, 240, 253, 255, 257, 258, 259, 260, 261, 262, 263, 267, 268, 269, 271, 274, 275, 276, 292, 349, 358, 403, 404, 410, 419, 437, 444, 470, 471, 472, 501, 547, 549, 550, 564, 569, 645, 690, 692, 693, 694, 728, 738, 753, 755, 770, 772, 777, 781, 790, 793, 794, 798, 800, 828, 830, 835, 836, 837, 847, 848, 852, 853, 859, 871], "approach": [4, 10, 19, 21, 43, 44, 45, 58, 71, 73, 100, 124, 139, 141, 142, 147, 148, 149, 154, 158, 161, 162, 163, 164, 165, 170, 178, 192, 193, 196, 197, 199, 200, 201, 202, 205, 207, 219, 222, 223, 226, 228, 237, 240, 265, 360, 382, 476, 508, 550, 566, 576, 585, 629, 754, 806, 826, 830, 838, 846, 847, 848, 852, 853, 871], "across": [4, 16, 17, 18, 19, 20, 26, 27, 28, 32, 46, 53, 54, 57, 59, 77, 80, 81, 100, 106, 110, 111, 132, 133, 135, 138, 139, 140, 141, 143, 147, 148, 151, 153, 160, 163, 164, 166, 170, 178, 193, 196, 197, 199, 201, 202, 203, 204, 205, 207, 214, 217, 218, 222, 230, 231, 232, 236, 240, 255, 260, 261, 262, 263, 265, 267, 268, 269, 270, 271, 272, 274, 275, 276, 312, 354, 355, 406, 412, 413, 415, 416, 417, 428, 437, 470, 471, 472, 526, 527, 532, 547, 550, 552, 555, 564, 605, 615, 635, 655, 681, 685, 690, 691, 692, 693, 694, 701, 707, 718, 719, 721, 722, 753, 757, 762, 769, 770, 772, 773, 777, 790, 792, 796, 799, 802, 826, 830, 846, 847, 850, 853, 859, 871], "signal": [4, 8, 9, 10, 13, 15, 16, 19, 21, 27, 28, 41, 44, 50, 57, 58, 62, 68, 69, 71, 72, 73, 75, 79, 82, 85, 97, 100, 108, 110, 111, 118, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 147, 149, 150, 160, 163, 164, 170, 173, 176, 178, 182, 187, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 205, 209, 210, 211, 212, 214, 219, 220, 221, 222, 227, 238, 240, 252, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 274, 275, 276, 295, 336, 337, 338, 339, 342, 343, 346, 349, 350, 351, 352, 354, 359, 365, 374, 396, 397, 403, 405, 407, 408, 409, 410, 411, 414, 415, 424, 427, 436, 437, 438, 439, 441, 442, 443, 444, 470, 471, 472, 486, 491, 516, 517, 518, 531, 547, 548, 549, 550, 551, 552, 559, 561, 562, 563, 565, 566, 567, 569, 571, 577, 578, 599, 608, 610, 613, 632, 635, 654, 656, 657, 676, 677, 690, 692, 693, 694, 695, 696, 697, 704, 707, 708, 709, 710, 714, 716, 720, 723, 738, 762, 768, 770, 772, 777, 778, 780, 781, 782, 783, 785, 791, 792, 826, 846, 847, 850, 871], "continuum": [4, 847, 871], "span": [4, 79, 116, 134, 138, 139, 147, 148, 149, 163, 164, 166, 176, 189, 196, 200, 209, 210, 211, 213, 214, 235, 237, 254, 255, 260, 261, 262, 263, 265, 354, 470, 471, 472, 547, 550, 552, 553, 566, 567, 570, 571, 605, 682, 690, 692, 694, 709, 710, 753, 755, 792, 798, 846, 847, 848, 853, 859, 871], "85": [4, 19, 34, 36, 46, 76, 87, 100, 106, 109, 111, 138, 143, 144, 158, 167, 174, 180, 200, 206, 222, 223, 226, 227, 871], "increas": [4, 11, 54, 68, 109, 149, 170, 199, 202, 203, 208, 219, 224, 227, 237, 255, 258, 259, 260, 261, 262, 263, 267, 268, 270, 271, 274, 275, 276, 444, 470, 471, 472, 482, 550, 569, 586, 677, 678, 680, 681, 690, 693, 705, 717, 720, 723, 738, 742, 768, 785, 791, 847, 853, 871], "step": [4, 8, 11, 15, 18, 24, 40, 45, 58, 62, 66, 91, 96, 100, 106, 109, 117, 124, 132, 138, 140, 149, 150, 156, 159, 164, 165, 166, 168, 170, 188, 189, 193, 196, 197, 198, 199, 202, 204, 205, 207, 211, 222, 223, 237, 240, 255, 260, 261, 262, 263, 265, 267, 268, 271, 274, 275, 276, 285, 287, 336, 337, 338, 342, 403, 409, 418, 421, 444, 445, 461, 462, 469, 470, 471, 472, 488, 545, 550, 560, 564, 569, 576, 640, 657, 677, 678, 680, 681, 682, 704, 714, 728, 738, 754, 762, 791, 802, 830, 831, 836, 838, 844, 846, 847, 852, 853, 857, 859, 871], "other": [4, 42, 60, 68, 80, 81, 109, 124, 139, 141, 143, 148, 149, 153, 154, 158, 164, 166, 167, 168, 170, 173, 175, 178, 179, 186, 187, 189, 193, 196, 197, 200, 201, 202, 203, 204, 205, 206, 211, 213, 214, 218, 219, 222, 226, 235, 237, 252, 254, 255, 256, 257, 258, 260, 261, 262, 263, 265, 266, 267, 268, 270, 271, 273, 274, 275, 276, 279, 307, 319, 320, 348, 355, 360, 409, 411, 420, 422, 424, 426, 427, 432, 436, 448, 452, 453, 466, 468, 469, 470, 471, 472, 483, 517, 528, 539, 549, 550, 569, 578, 592, 596, 598, 609, 612, 618, 621, 627, 629, 639, 650, 655, 661, 676, 690, 691, 692, 693, 694, 738, 751, 759, 766, 768, 770, 785, 791, 796, 811, 819, 824, 826, 835, 836, 837, 838, 842, 846, 847, 848, 850, 852, 856, 859, 871], "word": [4, 98, 141, 149, 153, 166, 173, 193, 199, 203, 204, 207, 222, 223, 237, 240, 387, 409, 720, 723, 738, 751, 826, 830, 847, 853, 859], "g": [4, 8, 28, 31, 36, 40, 41, 43, 66, 67, 68, 77, 78, 81, 93, 98, 109, 111, 112, 117, 123, 124, 132, 135, 138, 139, 141, 148, 149, 153, 158, 159, 160, 164, 166, 167, 168, 178, 186, 187, 188, 192, 193, 196, 198, 199, 200, 201, 202, 203, 205, 211, 212, 217, 218, 222, 223, 227, 230, 232, 236, 237, 240, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 292, 293, 294, 298, 305, 307, 308, 322, 324, 333, 335, 346, 349, 353, 354, 360, 363, 364, 365, 374, 379, 382, 387, 396, 397, 403, 405, 406, 409, 410, 412, 413, 414, 417, 418, 419, 422, 423, 424, 427, 432, 435, 436, 437, 439, 441, 442, 444, 445, 446, 447, 453, 459, 462, 465, 466, 468, 469, 470, 471, 472, 473, 484, 505, 507, 511, 512, 513, 517, 523, 524, 525, 528, 532, 533, 534, 536, 549, 550, 552, 553, 560, 561, 564, 565, 566, 567, 569, 572, 575, 578, 584, 585, 586, 593, 598, 605, 612, 613, 618, 625, 626, 627, 628, 629, 630, 636, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 658, 661, 675, 676, 677, 678, 679, 680, 681, 685, 686, 690, 692, 693, 694, 698, 699, 700, 701, 703, 709, 710, 720, 722, 723, 738, 743, 751, 754, 755, 756, 761, 762, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 781, 782, 784, 785, 789, 790, 791, 792, 793, 796, 798, 800, 801, 804, 811, 816, 819, 826, 828, 830, 831, 834, 836, 842, 846, 847, 850, 852, 853, 856, 857, 859, 871], "easi": [4, 130, 160, 164, 180, 186, 189, 197, 202, 205, 211, 213, 237, 270, 356, 409, 826, 828, 830, 836, 847, 848, 850, 853], "identifi": [4, 12, 13, 27, 32, 33, 75, 82, 132, 135, 144, 149, 167, 189, 193, 196, 202, 204, 219, 222, 240, 255, 260, 261, 262, 263, 265, 267, 268, 271, 274, 275, 276, 307, 323, 330, 367, 406, 413, 455, 470, 471, 472, 473, 477, 550, 554, 558, 564, 577, 587, 738, 747, 758, 796, 800, 801, 830, 846, 847, 850, 853, 856, 871], "while": [4, 10, 26, 44, 72, 74, 80, 84, 104, 124, 132, 135, 139, 140, 141, 142, 148, 149, 156, 158, 164, 170, 176, 177, 186, 196, 197, 202, 204, 205, 207, 213, 219, 222, 226, 230, 237, 240, 255, 258, 259, 260, 261, 262, 263, 267, 268, 270, 271, 274, 275, 276, 292, 293, 349, 353, 354, 363, 364, 365, 403, 409, 410, 411, 420, 437, 446, 447, 466, 468, 469, 470, 471, 472, 498, 520, 528, 550, 551, 562, 563, 566, 567, 570, 690, 693, 762, 768, 772, 776, 778, 785, 791, 794, 804, 826, 828, 830, 833, 847, 852, 853, 859, 871], "low": [4, 5, 11, 19, 44, 46, 58, 68, 72, 78, 79, 80, 81, 91, 107, 111, 132, 139, 141, 149, 164, 165, 178, 181, 186, 189, 193, 197, 200, 202, 207, 208, 222, 224, 226, 231, 240, 252, 255, 258, 259, 260, 261, 262, 263, 265, 267, 268, 271, 274, 275, 276, 300, 349, 354, 405, 411, 414, 416, 438, 439, 441, 470, 471, 472, 479, 482, 494, 517, 550, 555, 558, 562, 563, 566, 567, 569, 570, 571, 573, 574, 582, 643, 647, 652, 683, 684, 690, 693, 719, 738, 768, 791, 826, 846, 847, 850, 852, 853, 871], "hard": [4, 111, 132, 140, 202, 219, 358, 470, 471, 472, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 510, 830, 847, 848, 850, 871], "extens": [4, 12, 42, 43, 134, 138, 149, 156, 158, 168, 187, 188, 193, 212, 213, 252, 255, 260, 261, 262, 263, 292, 293, 325, 326, 332, 410, 433, 434, 436, 470, 471, 472, 478, 485, 488, 496, 578, 596, 605, 609, 691, 711, 738, 816, 833, 834, 846, 847, 853, 859, 871], "veri": [4, 10, 43, 44, 49, 59, 62, 67, 68, 77, 80, 111, 130, 132, 139, 142, 149, 155, 158, 166, 170, 179, 197, 199, 200, 201, 202, 203, 204, 207, 219, 222, 231, 237, 292, 315, 427, 471, 676, 826, 830, 833, 848, 853], "ll": [4, 7, 10, 19, 26, 33, 53, 58, 68, 111, 112, 113, 114, 117, 124, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 154, 156, 158, 160, 164, 165, 166, 168, 169, 170, 177, 178, 179, 188, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 211, 212, 213, 214, 217, 219, 223, 226, 232, 235, 236, 830, 838, 850], "begin": [4, 19, 71, 90, 132, 149, 154, 164, 166, 167, 169, 170, 173, 186, 189, 192, 196, 198, 199, 200, 201, 202, 203, 204, 213, 217, 237, 254, 255, 260, 261, 262, 263, 267, 268, 270, 271, 274, 275, 276, 279, 283, 354, 432, 445, 470, 471, 472, 496, 510, 523, 533, 534, 550, 553, 566, 567, 569, 570, 573, 578, 608, 609, 657, 690, 693, 694, 703, 709, 710, 771, 782, 783, 785, 792, 798, 824, 830, 835, 853, 856, 871], "littl": [4, 158, 169, 186, 199, 200, 202, 203, 219, 237, 833, 853], "you": [4, 24, 27, 28, 40, 42, 46, 49, 58, 59, 76, 79, 80, 85, 100, 106, 110, 111, 112, 113, 114, 116, 117, 118, 124, 130, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 153, 154, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 170, 173, 175, 176, 178, 179, 180, 186, 187, 188, 189, 192, 193, 196, 197, 198, 199, 200, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 217, 219, 222, 224, 225, 227, 230, 232, 235, 236, 237, 240, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 279, 285, 287, 292, 293, 308, 313, 323, 324, 325, 348, 349, 353, 354, 357, 358, 363, 364, 365, 370, 382, 403, 409, 410, 420, 427, 430, 436, 438, 444, 446, 447, 455, 462, 466, 468, 469, 470, 471, 472, 473, 483, 487, 493, 515, 517, 528, 549, 550, 566, 569, 571, 579, 596, 602, 639, 654, 670, 685, 690, 692, 693, 694, 736, 739, 741, 754, 755, 759, 761, 768, 769, 773, 778, 781, 783, 784, 785, 791, 796, 808, 826, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 841, 845, 846, 847, 848, 849, 850, 851, 853, 854, 856, 857, 871], "first": [4, 5, 7, 10, 11, 16, 19, 21, 28, 29, 37, 38, 40, 41, 42, 43, 44, 46, 62, 68, 69, 77, 80, 81, 84, 85, 87, 91, 92, 100, 101, 105, 106, 109, 110, 111, 112, 117, 124, 128, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 143, 144, 147, 148, 149, 154, 155, 157, 158, 159, 160, 164, 165, 166, 167, 169, 170, 173, 174, 175, 177, 178, 179, 180, 181, 182, 186, 188, 189, 192, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 218, 219, 222, 223, 224, 226, 227, 230, 231, 232, 235, 236, 237, 240, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 279, 280, 281, 284, 291, 292, 293, 297, 312, 317, 318, 349, 357, 358, 363, 369, 379, 403, 409, 410, 418, 426, 427, 428, 431, 432, 434, 435, 437, 441, 442, 443, 444, 445, 451, 453, 461, 470, 471, 472, 491, 493, 494, 505, 511, 512, 516, 520, 526, 527, 545, 549, 550, 551, 553, 555, 558, 560, 564, 587, 592, 604, 605, 608, 612, 623, 635, 640, 642, 643, 646, 648, 649, 664, 665, 666, 671, 675, 676, 677, 678, 680, 681, 682, 684, 690, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 709, 710, 726, 728, 738, 743, 746, 754, 762, 766, 768, 769, 770, 771, 774, 775, 777, 781, 782, 783, 785, 790, 791, 792, 793, 796, 798, 800, 801, 816, 817, 826, 828, 829, 838, 846, 847, 850, 853, 856, 857, 871], "limo_epoch": 4, "column": [4, 10, 31, 91, 92, 98, 109, 138, 139, 141, 143, 149, 164, 170, 173, 186, 189, 193, 204, 207, 208, 211, 222, 223, 254, 255, 257, 260, 261, 262, 263, 265, 267, 268, 269, 271, 274, 275, 276, 294, 322, 363, 427, 431, 432, 444, 445, 461, 470, 471, 472, 511, 529, 532, 545, 549, 550, 551, 596, 603, 604, 605, 612, 675, 676, 690, 692, 693, 694, 738, 770, 771, 777, 778, 781, 789, 790, 793, 798, 816, 826, 853, 856, 871], "1055": [4, 193], "process": [4, 7, 27, 28, 33, 44, 50, 58, 66, 67, 77, 81, 85, 98, 119, 132, 133, 140, 141, 142, 147, 149, 150, 153, 154, 158, 159, 160, 164, 170, 175, 180, 182, 186, 197, 198, 199, 200, 202, 203, 204, 205, 207, 211, 213, 222, 223, 224, 232, 237, 240, 252, 255, 257, 258, 259, 260, 261, 262, 263, 265, 267, 268, 270, 271, 274, 275, 276, 283, 285, 287, 292, 293, 295, 349, 353, 354, 357, 363, 364, 365, 379, 387, 403, 405, 410, 411, 416, 420, 426, 427, 442, 446, 447, 466, 468, 469, 470, 471, 472, 473, 482, 491, 523, 528, 550, 551, 560, 569, 578, 579, 586, 593, 595, 608, 639, 643, 663, 666, 677, 678, 680, 681, 690, 692, 693, 694, 718, 719, 768, 772, 778, 791, 792, 828, 837, 838, 842, 845, 846, 847, 850, 852, 853, 856, 857, 859, 860, 861, 871], "epochsarrai": [4, 186, 217, 255, 260, 263, 472, 603, 861, 871], "readi": [4, 5, 11, 13, 14, 15, 16, 18, 19, 27, 28, 29, 32, 33, 41, 44, 45, 48, 60, 62, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 80, 81, 85, 89, 90, 93, 94, 96, 97, 100, 101, 104, 106, 107, 108, 110, 111, 112, 114, 115, 118, 119, 120, 121, 126, 127, 129, 130, 132, 133, 139, 142, 144, 148, 149, 150, 154, 156, 157, 159, 160, 164, 165, 166, 167, 169, 170, 175, 178, 180, 181, 188, 193, 196, 200, 201, 202, 203, 204, 205, 206, 207, 211, 214, 217, 218, 219, 224, 225, 226, 227, 230, 232, 236, 262, 265, 271, 470, 471, 579, 608, 618, 738, 757, 762, 830, 847], "good": [4, 5, 21, 31, 48, 68, 69, 71, 74, 78, 79, 80, 87, 90, 114, 120, 124, 135, 138, 139, 141, 144, 149, 155, 164, 165, 166, 167, 169, 175, 182, 189, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 217, 219, 224, 230, 232, 237, 240, 255, 258, 260, 261, 262, 263, 265, 292, 293, 295, 322, 339, 349, 353, 354, 363, 364, 365, 403, 405, 410, 411, 416, 419, 446, 447, 460, 462, 466, 468, 469, 470, 471, 472, 510, 528, 541, 544, 547, 549, 550, 552, 555, 557, 560, 564, 565, 568, 569, 586, 593, 601, 612, 618, 658, 676, 685, 690, 692, 693, 694, 698, 699, 700, 701, 703, 709, 710, 719, 721, 722, 766, 768, 769, 772, 778, 792, 799, 829, 830, 837, 841, 847, 850, 851, 852, 853, 854, 871], "299944": 4, "499907": 4, "A": [4, 8, 9, 11, 16, 19, 21, 26, 31, 34, 41, 42, 43, 68, 73, 76, 80, 98, 100, 110, 117, 118, 123, 124, 125, 129, 130, 133, 134, 135, 140, 141, 149, 153, 155, 158, 159, 160, 164, 166, 167, 169, 170, 173, 178, 186, 187, 193, 196, 198, 199, 200, 201, 202, 203, 204, 205, 208, 211, 213, 214, 219, 222, 223, 224, 226, 230, 231, 232, 235, 240, 251, 254, 255, 256, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 284, 286, 292, 299, 305, 307, 310, 311, 312, 315, 316, 319, 335, 349, 352, 355, 360, 361, 364, 374, 381, 382, 385, 387, 396, 397, 405, 407, 411, 420, 425, 427, 428, 439, 440, 441, 442, 446, 454, 455, 456, 460, 463, 466, 470, 471, 472, 473, 478, 479, 480, 481, 482, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 503, 504, 511, 517, 518, 524, 532, 540, 542, 543, 545, 548, 549, 550, 551, 558, 564, 568, 569, 576, 579, 585, 587, 593, 595, 598, 605, 626, 632, 635, 639, 642, 643, 644, 650, 653, 654, 656, 667, 670, 671, 673, 674, 676, 677, 678, 679, 680, 681, 682, 685, 690, 691, 692, 693, 694, 695, 696, 697, 708, 720, 723, 726, 728, 738, 741, 751, 753, 756, 758, 761, 762, 764, 768, 774, 775, 776, 778, 779, 791, 792, 794, 796, 799, 800, 801, 826, 828, 845, 846, 847, 848, 852, 853, 856, 858, 859, 869, 871], "524": [4, 227], "b": [4, 8, 10, 12, 22, 28, 36, 37, 43, 94, 107, 108, 124, 125, 132, 135, 199, 202, 203, 208, 212, 214, 219, 222, 223, 226, 230, 231, 232, 237, 240, 252, 255, 260, 261, 262, 263, 267, 268, 270, 271, 272, 274, 275, 276, 283, 349, 355, 374, 396, 397, 424, 438, 440, 470, 471, 472, 533, 534, 566, 567, 608, 609, 643, 671, 673, 676, 684, 690, 693, 703, 709, 738, 762, 768, 791, 798, 830, 847, 850, 853, 871], "531": [4, 206, 227], "visualis": [4, 27, 29, 30, 47, 48, 49, 53, 54, 75, 82, 98, 163, 174, 208, 228, 229, 254, 255, 260, 262, 263, 265, 313, 319, 348, 470, 472, 498, 581, 585, 601, 681], "distribut": [4, 19, 22, 26, 45, 47, 53, 54, 58, 59, 70, 113, 143, 148, 153, 160, 163, 164, 175, 184, 185, 189, 202, 204, 222, 224, 227, 230, 231, 236, 237, 240, 255, 257, 258, 260, 261, 262, 263, 264, 265, 269, 271, 359, 468, 470, 471, 472, 516, 517, 528, 558, 585, 599, 608, 610, 623, 638, 642, 672, 675, 677, 678, 680, 681, 692, 694, 738, 747, 754, 766, 799, 806, 826, 835, 836, 837, 846, 847, 850, 852, 853, 871], "appear": [4, 91, 98, 132, 138, 142, 156, 166, 170, 178, 181, 189, 196, 199, 200, 205, 213, 252, 255, 260, 261, 262, 263, 270, 424, 470, 471, 472, 482, 505, 756, 794, 826, 830, 847, 853, 856, 871], "clearli": [4, 21, 124, 132, 142, 150, 164, 189, 200, 202, 204, 206], "group": [4, 27, 68, 106, 109, 119, 127, 132, 135, 138, 140, 141, 143, 149, 153, 158, 159, 165, 170, 176, 199, 214, 219, 222, 223, 226, 227, 231, 232, 240, 252, 255, 260, 261, 262, 263, 265, 270, 292, 293, 309, 319, 420, 429, 430, 432, 463, 470, 471, 472, 487, 550, 564, 639, 655, 672, 678, 681, 743, 768, 769, 774, 791, 794, 826, 830, 837, 853, 861, 871], "order": [4, 16, 18, 19, 27, 31, 33, 37, 46, 67, 68, 72, 79, 81, 85, 89, 91, 104, 108, 109, 111, 114, 118, 120, 125, 141, 142, 143, 147, 154, 158, 159, 160, 163, 164, 167, 170, 175, 186, 188, 192, 196, 197, 198, 201, 202, 203, 204, 206, 207, 211, 214, 219, 227, 232, 240, 252, 253, 255, 257, 260, 261, 262, 263, 264, 265, 266, 269, 270, 284, 297, 312, 319, 336, 338, 342, 349, 356, 358, 362, 403, 405, 409, 410, 414, 424, 428, 432, 438, 439, 440, 441, 442, 447, 456, 470, 471, 472, 478, 479, 486, 516, 523, 524, 526, 527, 541, 542, 543, 549, 550, 558, 560, 561, 562, 563, 569, 578, 592, 624, 635, 667, 672, 686, 690, 691, 692, 693, 694, 702, 703, 706, 724, 726, 728, 735, 743, 755, 768, 769, 770, 774, 777, 779, 781, 785, 786, 790, 791, 793, 794, 798, 799, 800, 828, 830, 846, 850, 853, 856, 871], "suptitl": [4, 18, 22, 36, 41, 44, 68, 71, 77, 84, 87, 100, 106, 109, 113, 117, 130, 132, 139, 142, 144, 149, 158, 174, 189, 192, 197, 199, 200, 202, 203, 204, 205, 207, 208, 222, 257, 262, 263, 690, 777, 798, 871], "As": [4, 37, 42, 68, 85, 91, 109, 132, 134, 138, 141, 143, 147, 148, 149, 155, 158, 164, 165, 166, 167, 168, 170, 173, 178, 186, 189, 192, 193, 196, 197, 198, 199, 201, 202, 204, 205, 207, 211, 212, 213, 214, 217, 224, 226, 232, 235, 237, 242, 411, 432, 488, 498, 564, 676, 685, 738, 762, 846, 852, 853, 856, 859, 871], "seen": [4, 12, 27, 72, 138, 141, 142, 144, 148, 149, 154, 167, 168, 193, 196, 200, 203, 204, 208, 211, 214, 292, 410, 642, 643, 830, 853, 854, 856], "abov": [4, 21, 41, 42, 44, 48, 59, 68, 72, 73, 79, 85, 111, 113, 132, 138, 140, 142, 148, 149, 154, 158, 159, 164, 165, 166, 168, 169, 170, 173, 186, 188, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 211, 212, 214, 217, 219, 226, 227, 237, 240, 254, 255, 257, 260, 261, 262, 263, 265, 273, 348, 403, 405, 410, 414, 427, 433, 434, 436, 439, 441, 470, 471, 472, 473, 479, 498, 549, 550, 552, 569, 577, 587, 677, 678, 680, 681, 690, 692, 694, 728, 738, 762, 769, 770, 777, 781, 783, 793, 794, 798, 800, 826, 829, 830, 835, 846, 850, 853, 854, 857], "These": [4, 27, 44, 53, 54, 59, 68, 91, 132, 135, 136, 142, 143, 145, 149, 151, 153, 156, 158, 160, 161, 163, 164, 165, 168, 170, 171, 176, 178, 184, 186, 187, 188, 190, 192, 193, 194, 198, 199, 202, 206, 208, 209, 214, 215, 219, 220, 222, 223, 228, 233, 237, 238, 251, 255, 260, 261, 262, 263, 265, 277, 300, 301, 320, 349, 353, 354, 355, 422, 470, 471, 472, 514, 550, 560, 569, 578, 609, 647, 652, 676, 690, 692, 693, 694, 826, 830, 837, 846, 847, 850, 852, 853, 854, 856, 859, 871], "easili": [4, 42, 43, 98, 138, 142, 147, 158, 166, 168, 186, 188, 196, 199, 202, 204, 205, 211, 212, 213, 214, 230, 237, 430, 470, 471, 472, 569, 676, 830, 837, 846, 853, 871], "access": [4, 51, 98, 129, 132, 156, 164, 166, 167, 173, 203, 211, 213, 214, 235, 240, 253, 255, 260, 261, 264, 273, 470, 471, 472, 602, 604, 692, 693, 694, 720, 723, 830, 836, 848, 852, 856, 871], "call": [4, 8, 9, 18, 31, 42, 43, 68, 80, 84, 85, 91, 109, 114, 125, 132, 138, 140, 142, 143, 144, 147, 148, 149, 153, 154, 156, 157, 158, 159, 164, 166, 168, 169, 170, 173, 176, 180, 188, 193, 196, 197, 199, 200, 202, 203, 207, 211, 212, 213, 214, 222, 224, 226, 227, 232, 236, 237, 252, 255, 258, 259, 260, 261, 262, 263, 266, 267, 268, 270, 271, 272, 274, 275, 276, 278, 303, 307, 349, 350, 352, 354, 355, 360, 406, 409, 413, 416, 419, 420, 424, 436, 438, 446, 459, 461, 470, 471, 472, 479, 486, 498, 509, 512, 513, 517, 518, 519, 520, 521, 523, 524, 533, 534, 550, 555, 560, 561, 562, 563, 566, 568, 569, 578, 593, 629, 638, 641, 642, 643, 655, 660, 664, 677, 678, 679, 680, 681, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 707, 708, 709, 710, 718, 719, 720, 721, 722, 735, 736, 738, 755, 762, 768, 769, 770, 773, 776, 777, 792, 800, 826, 828, 829, 830, 834, 838, 848, 850, 852, 853, 856, 857, 861, 871], "shown": [4, 51, 68, 77, 80, 91, 98, 115, 117, 124, 132, 134, 140, 147, 148, 149, 154, 156, 160, 164, 170, 178, 180, 199, 203, 208, 211, 212, 214, 227, 255, 257, 258, 259, 260, 261, 262, 263, 267, 268, 269, 271, 274, 275, 276, 307, 403, 410, 462, 470, 471, 472, 501, 528, 549, 550, 564, 690, 692, 693, 694, 738, 754, 755, 756, 762, 763, 765, 766, 768, 770, 772, 774, 775, 776, 777, 779, 781, 788, 790, 791, 792, 793, 794, 796, 797, 798, 799, 800, 801, 808, 853, 854, 856, 871], "below": [4, 10, 19, 42, 46, 73, 109, 111, 124, 132, 138, 149, 153, 159, 164, 166, 168, 170, 188, 192, 199, 200, 202, 203, 204, 205, 207, 208, 213, 222, 227, 230, 232, 235, 237, 240, 255, 257, 258, 259, 260, 261, 262, 263, 267, 268, 271, 272, 273, 274, 275, 276, 301, 307, 355, 405, 414, 422, 430, 439, 441, 462, 470, 471, 472, 488, 517, 550, 552, 558, 560, 642, 676, 677, 678, 680, 681, 690, 693, 738, 757, 769, 774, 778, 781, 783, 796, 801, 802, 830, 836, 846, 850, 852, 853, 857, 861, 871], "also": [4, 10, 19, 21, 27, 28, 29, 30, 37, 38, 40, 41, 42, 44, 46, 59, 61, 67, 68, 69, 76, 77, 78, 80, 81, 91, 92, 98, 101, 104, 106, 109, 111, 113, 114, 117, 123, 124, 132, 133, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 153, 154, 155, 157, 158, 159, 160, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 178, 179, 180, 181, 182, 186, 188, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 217, 219, 222, 223, 224, 226, 227, 230, 232, 235, 236, 237, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 292, 293, 299, 300, 301, 305, 307, 309, 317, 318, 322, 324, 325, 335, 342, 349, 354, 355, 361, 363, 366, 374, 381, 403, 405, 410, 415, 419, 422, 424, 427, 438, 439, 441, 442, 443, 444, 446, 453, 456, 463, 466, 468, 469, 470, 471, 472, 479, 483, 491, 494, 509, 512, 513, 523, 524, 525, 528, 547, 549, 550, 552, 553, 559, 560, 562, 564, 565, 566, 567, 570, 571, 572, 573, 575, 584, 586, 592, 593, 600, 608, 625, 626, 629, 635, 638, 639, 646, 655, 658, 676, 677, 682, 685, 690, 692, 693, 694, 698, 699, 700, 701, 703, 709, 710, 722, 728, 736, 738, 754, 755, 761, 762, 763, 766, 768, 769, 770, 772, 774, 775, 777, 778, 780, 781, 782, 788, 789, 790, 791, 792, 793, 794, 796, 798, 800, 802, 804, 811, 826, 828, 830, 833, 834, 835, 836, 837, 838, 845, 846, 847, 848, 850, 851, 852, 853, 854, 855, 856, 859, 861, 871], "conveni": [4, 11, 44, 68, 73, 132, 135, 140, 149, 156, 159, 164, 167, 169, 170, 179, 193, 196, 199, 203, 204, 212, 217, 222, 223, 224, 227, 230, 231, 232, 236, 240, 255, 260, 261, 262, 263, 264, 270, 470, 471, 472, 477, 501, 523, 550, 558, 566, 567, 632, 635, 637, 680, 681, 690, 692, 693, 694, 751, 828, 830, 834, 846, 847, 853, 871], "head": [4, 5, 10, 22, 26, 40, 42, 44, 49, 68, 69, 76, 77, 98, 106, 109, 112, 115, 117, 122, 124, 132, 133, 134, 141, 143, 148, 149, 155, 157, 161, 162, 163, 164, 167, 168, 170, 173, 174, 175, 176, 178, 179, 181, 182, 183, 186, 188, 189, 196, 197, 202, 204, 205, 207, 209, 210, 211, 223, 237, 240, 255, 257, 258, 260, 261, 262, 263, 264, 265, 269, 270, 273, 297, 299, 300, 301, 302, 303, 304, 307, 310, 311, 319, 320, 323, 325, 330, 336, 337, 338, 339, 340, 342, 344, 345, 346, 347, 349, 355, 356, 358, 359, 360, 361, 367, 380, 383, 403, 410, 422, 424, 446, 453, 454, 462, 463, 464, 465, 470, 471, 472, 476, 478, 482, 483, 484, 490, 494, 496, 500, 502, 507, 508, 509, 512, 513, 514, 549, 550, 554, 557, 559, 560, 561, 564, 569, 575, 578, 579, 598, 603, 604, 607, 610, 621, 631, 638, 639, 641, 642, 643, 647, 652, 655, 658, 685, 690, 692, 694, 725, 726, 738, 754, 755, 756, 761, 762, 766, 770, 772, 773, 774, 775, 777, 778, 780, 781, 788, 790, 792, 793, 794, 798, 800, 806, 817, 818, 819, 824, 826, 830, 847, 856, 859, 860, 861, 871], "491210": 4, "235572": 4, "043707": 4, "642398": 4, "659978": 4, "now": [4, 19, 24, 26, 40, 44, 49, 68, 70, 72, 81, 84, 85, 106, 108, 109, 110, 117, 124, 131, 132, 133, 134, 135, 138, 139, 142, 143, 144, 149, 154, 155, 156, 157, 158, 159, 160, 164, 165, 166, 170, 174, 176, 177, 178, 180, 181, 192, 196, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 211, 213, 219, 224, 226, 227, 230, 231, 232, 236, 237, 255, 258, 260, 261, 262, 263, 315, 456, 470, 471, 472, 635, 739, 759, 766, 830, 853, 856, 871], "let": [4, 10, 18, 21, 26, 46, 54, 68, 69, 71, 84, 106, 110, 118, 124, 132, 133, 134, 138, 139, 140, 142, 144, 148, 149, 150, 154, 156, 157, 158, 160, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 187, 193, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 211, 219, 222, 226, 227, 230, 231, 232, 236, 237, 503, 739, 830, 833, 871], "closer": [4, 24, 40, 106, 139, 156, 207, 222, 255, 257, 260, 261, 262, 263, 269, 470, 471, 472, 549, 564, 639, 690, 692, 694, 755, 770, 777, 790, 793, 798, 800], "want": [4, 40, 49, 80, 91, 109, 112, 117, 124, 132, 133, 134, 138, 139, 140, 141, 142, 143, 147, 148, 149, 156, 158, 159, 160, 164, 165, 166, 167, 168, 169, 170, 176, 178, 187, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 211, 212, 213, 217, 218, 222, 224, 226, 227, 230, 231, 237, 252, 253, 255, 260, 261, 262, 263, 267, 271, 275, 313, 370, 427, 432, 470, 471, 472, 550, 566, 761, 791, 796, 808, 829, 830, 833, 837, 838, 850, 851, 852, 853, 856, 857], "includ": [4, 7, 28, 36, 40, 67, 68, 79, 83, 93, 94, 96, 100, 101, 104, 107, 110, 111, 120, 129, 132, 133, 135, 138, 140, 141, 142, 144, 147, 149, 150, 153, 157, 158, 160, 164, 165, 166, 167, 168, 170, 174, 178, 180, 183, 186, 187, 188, 193, 196, 197, 198, 199, 201, 202, 203, 204, 205, 207, 208, 211, 213, 214, 217, 222, 224, 225, 226, 232, 240, 246, 251, 253, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 291, 293, 305, 308, 309, 322, 324, 349, 354, 355, 362, 363, 405, 410, 419, 424, 427, 431, 432, 441, 442, 444, 456, 457, 470, 471, 472, 479, 482, 484, 486, 488, 492, 496, 511, 513, 518, 520, 528, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 557, 558, 560, 561, 565, 566, 567, 569, 572, 575, 577, 578, 584, 586, 589, 593, 604, 605, 608, 609, 610, 619, 658, 675, 676, 685, 689, 690, 692, 693, 694, 698, 699, 700, 701, 703, 706, 709, 710, 720, 722, 723, 728, 734, 738, 762, 768, 769, 770, 771, 772, 774, 775, 782, 783, 787, 791, 792, 798, 816, 826, 828, 830, 832, 833, 834, 835, 836, 837, 838, 842, 846, 847, 848, 849, 850, 852, 853, 854, 855, 856, 857, 859, 871], "tabl": [4, 40, 120, 132, 141, 142, 169, 170, 183, 187, 199, 211, 212, 235, 255, 260, 261, 262, 263, 265, 267, 268, 270, 271, 273, 274, 275, 276, 455, 456, 470, 471, 472, 528, 639, 738, 757, 762, 769, 796, 801, 802, 803, 807, 821, 826, 853, 856, 857, 871], "epochs_summari": 4, "describ": [4, 13, 16, 72, 96, 110, 114, 147, 149, 154, 156, 160, 163, 164, 166, 167, 168, 169, 170, 186, 192, 196, 198, 203, 204, 205, 207, 208, 212, 213, 219, 220, 223, 228, 237, 262, 263, 292, 348, 349, 355, 403, 411, 424, 427, 435, 470, 471, 472, 549, 550, 551, 578, 614, 640, 660, 661, 662, 663, 664, 665, 666, 708, 778, 784, 826, 828, 846, 850, 852, 853, 856, 859, 871], "round": [4, 36, 106, 138, 143, 147, 158, 166, 170, 192, 199, 200, 202, 203, 211, 219, 237, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 432, 470, 471, 472, 690, 693, 871], "count": [4, 22, 68, 70, 138, 169, 208, 213, 222, 226, 230, 232, 255, 260, 261, 262, 263, 292, 293, 349, 353, 354, 363, 364, 365, 403, 410, 426, 446, 447, 466, 468, 469, 510, 528, 560, 601, 677, 678, 680, 681, 778, 871], "uniqu": [4, 10, 18, 98, 141, 148, 149, 164, 166, 212, 222, 227, 255, 258, 259, 260, 261, 262, 263, 265, 267, 268, 271, 274, 275, 276, 316, 432, 461, 470, 471, 472, 512, 550, 602, 663, 666, 690, 692, 693, 694, 762, 772, 853, 856, 871], "nan": [4, 67, 68, 132, 142, 207, 224, 225, 226, 227, 237, 470, 471, 472, 498, 556, 569, 871], "top": [4, 71, 109, 112, 117, 124, 134, 138, 149, 156, 158, 159, 170, 174, 179, 197, 200, 202, 203, 204, 205, 208, 211, 213, 214, 222, 252, 255, 260, 261, 262, 263, 268, 274, 276, 403, 410, 738, 739, 756, 768, 772, 801, 826, 830, 853, 856, 871], "freq": [4, 9, 21, 32, 33, 66, 101, 104, 106, 109, 111, 130, 135, 164, 192, 196, 199, 200, 224, 225, 226, 227, 235, 236, 237, 239, 252, 336, 338, 416, 442, 470, 471, 472, 534, 670, 690, 691, 692, 693, 694, 705, 707, 708, 709, 710, 715, 716, 717, 718, 719, 720, 721, 722, 761, 779, 786, 859, 871], "std": [4, 16, 149, 189, 219, 232, 235, 236, 237, 255, 260, 261, 262, 263, 309, 403, 410, 470, 471, 472, 506, 690, 762, 769, 772, 775, 792], "min": [4, 9, 21, 22, 93, 94, 109, 111, 113, 135, 139, 144, 155, 170, 192, 196, 202, 204, 211, 222, 223, 224, 225, 226, 227, 230, 231, 232, 255, 257, 260, 261, 262, 263, 267, 268, 269, 271, 274, 275, 276, 316, 403, 405, 410, 414, 436, 439, 441, 470, 471, 472, 549, 550, 562, 570, 571, 573, 582, 586, 587, 690, 692, 694, 755, 769, 770, 777, 781, 790, 791, 792, 793, 796, 798, 799, 800, 801, 811], "619": [4, 206, 227], "852": [4, 227], "084": 4, "875": [4, 141, 180, 853], "max": [4, 5, 8, 9, 19, 21, 22, 31, 32, 33, 34, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 57, 58, 59, 78, 81, 87, 90, 91, 93, 97, 106, 109, 112, 113, 118, 132, 134, 139, 142, 148, 150, 155, 158, 160, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 189, 192, 193, 200, 207, 211, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 251, 255, 257, 260, 261, 262, 263, 267, 268, 269, 271, 274, 275, 276, 292, 293, 316, 353, 405, 414, 436, 437, 439, 441, 470, 471, 472, 501, 526, 527, 532, 549, 550, 571, 582, 587, 677, 678, 679, 680, 681, 683, 690, 692, 694, 738, 746, 755, 769, 770, 773, 777, 781, 790, 792, 793, 796, 798, 799, 800, 801, 811, 858, 871], "642": [4, 58, 227, 240, 469], "provid": [4, 5, 18, 19, 27, 42, 43, 64, 77, 87, 90, 91, 92, 100, 135, 138, 140, 144, 147, 148, 149, 153, 154, 158, 159, 163, 164, 165, 166, 167, 168, 169, 170, 173, 182, 183, 186, 187, 188, 193, 196, 197, 198, 199, 201, 202, 203, 204, 205, 207, 211, 212, 213, 214, 217, 219, 223, 224, 227, 240, 241, 252, 254, 255, 257, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 281, 284, 292, 293, 297, 298, 305, 308, 316, 319, 324, 348, 350, 351, 352, 353, 354, 355, 360, 363, 366, 379, 380, 383, 405, 419, 424, 427, 430, 441, 442, 444, 446, 456, 462, 470, 471, 472, 490, 491, 500, 501, 503, 512, 516, 537, 549, 550, 552, 553, 560, 565, 566, 567, 569, 572, 578, 584, 586, 593, 603, 607, 618, 629, 639, 640, 655, 658, 675, 676, 678, 680, 681, 684, 690, 691, 692, 693, 694, 698, 699, 700, 701, 703, 709, 710, 720, 722, 723, 726, 727, 728, 735, 738, 754, 755, 757, 762, 764, 768, 769, 770, 772, 773, 774, 775, 777, 780, 785, 787, 790, 791, 792, 793, 796, 798, 800, 801, 802, 826, 828, 830, 831, 833, 834, 836, 837, 842, 845, 846, 847, 848, 850, 852, 853, 854, 856, 859, 861, 871], "command": [4, 120, 132, 149, 153, 156, 158, 169, 183, 187, 255, 260, 261, 265, 355, 462, 470, 471, 472, 507, 550, 631, 768, 785, 791, 828, 829, 833, 834, 835, 836, 837, 838, 842, 846, 848, 861, 871], "ran": [4, 227, 265], "befor": [4, 5, 21, 24, 26, 40, 43, 44, 49, 60, 66, 68, 79, 83, 85, 87, 91, 116, 124, 132, 134, 135, 138, 139, 140, 141, 142, 143, 147, 149, 154, 155, 156, 158, 159, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 178, 179, 181, 182, 183, 186, 189, 193, 196, 197, 198, 199, 200, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 219, 235, 237, 252, 253, 255, 257, 260, 261, 262, 263, 265, 267, 268, 270, 271, 272, 274, 275, 276, 292, 309, 336, 354, 357, 364, 365, 403, 409, 410, 412, 415, 427, 433, 434, 435, 436, 437, 438, 444, 445, 447, 470, 471, 472, 510, 523, 524, 526, 527, 533, 534, 549, 550, 553, 562, 563, 566, 567, 569, 570, 593, 601, 608, 613, 646, 647, 648, 649, 650, 652, 654, 676, 677, 678, 680, 681, 685, 691, 692, 694, 709, 710, 755, 764, 769, 770, 772, 774, 776, 777, 782, 783, 784, 789, 792, 808, 821, 828, 838, 846, 847, 850, 852, 853, 856, 871], "There": [4, 72, 80, 117, 124, 134, 139, 142, 149, 154, 156, 157, 164, 168, 169, 170, 175, 178, 188, 196, 198, 199, 200, 202, 203, 207, 211, 213, 222, 235, 260, 396, 427, 550, 585, 639, 830, 834, 837, 847, 850, 851, 853, 855, 856], "subdivid": [4, 158, 159, 252, 267, 271, 275, 378, 638, 796, 871], "particular": [4, 27, 123, 132, 138, 139, 153, 164, 166, 170, 173, 192, 193, 199, 202, 203, 211, 224, 232, 252, 254, 255, 260, 261, 270, 298, 420, 447, 470, 471, 472, 479, 613, 670, 677, 678, 680, 681, 768, 791, 828, 850, 852, 853, 854, 859], "addit": [4, 33, 41, 44, 59, 60, 68, 73, 79, 109, 111, 132, 133, 138, 140, 143, 148, 150, 154, 158, 159, 160, 164, 168, 186, 187, 188, 189, 192, 193, 198, 199, 202, 203, 204, 205, 207, 211, 213, 214, 217, 227, 237, 252, 255, 257, 260, 261, 262, 263, 267, 268, 271, 272, 273, 274, 275, 276, 330, 348, 349, 354, 379, 403, 404, 405, 408, 410, 411, 414, 424, 427, 434, 436, 441, 470, 471, 472, 477, 517, 518, 519, 520, 521, 523, 524, 530, 533, 534, 547, 548, 549, 550, 551, 562, 563, 579, 608, 634, 644, 676, 677, 678, 680, 681, 689, 690, 692, 693, 694, 708, 710, 738, 751, 755, 768, 770, 772, 777, 781, 783, 789, 791, 793, 796, 798, 800, 801, 830, 833, 834, 836, 837, 846, 847, 849, 850, 853, 856, 857, 859, 871], "valu": [4, 5, 7, 8, 9, 10, 16, 19, 21, 22, 24, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 57, 58, 67, 69, 87, 90, 91, 93, 98, 100, 101, 106, 109, 111, 117, 118, 124, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 144, 147, 148, 149, 150, 154, 158, 160, 164, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 192, 193, 198, 199, 200, 202, 203, 204, 207, 208, 211, 213, 217, 218, 219, 222, 223, 224, 226, 227, 230, 231, 232, 235, 236, 240, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 283, 284, 292, 293, 295, 297, 301, 304, 305, 309, 316, 320, 322, 324, 325, 343, 344, 349, 350, 352, 353, 354, 355, 360, 363, 364, 365, 369, 379, 396, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 422, 424, 425, 427, 431, 432, 436, 437, 441, 442, 443, 444, 445, 446, 447, 448, 451, 456, 459, 461, 462, 463, 466, 468, 469, 470, 471, 472, 473, 479, 481, 486, 492, 494, 498, 503, 505, 506, 507, 509, 510, 512, 513, 514, 516, 517, 521, 523, 524, 525, 526, 527, 528, 531, 533, 534, 538, 549, 550, 551, 552, 553, 555, 556, 559, 562, 563, 564, 565, 566, 567, 569, 571, 572, 575, 576, 584, 586, 587, 589, 593, 595, 601, 605, 608, 612, 621, 628, 632, 634, 635, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 663, 666, 668, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 688, 690, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 703, 707, 708, 709, 710, 718, 719, 720, 721, 722, 726, 727, 728, 738, 741, 747, 754, 755, 757, 760, 762, 763, 766, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 781, 782, 789, 790, 791, 792, 793, 796, 798, 799, 800, 801, 802, 803, 808, 811, 824, 826, 830, 846, 847, 850, 853, 856, 871], "z": [4, 5, 11, 16, 18, 24, 40, 44, 49, 125, 149, 154, 156, 157, 158, 167, 168, 173, 174, 178, 179, 181, 182, 183, 187, 199, 203, 205, 240, 255, 257, 260, 261, 262, 263, 264, 268, 269, 274, 276, 300, 301, 307, 319, 330, 339, 340, 403, 410, 422, 470, 471, 472, 483, 517, 549, 550, 555, 559, 564, 569, 610, 642, 643, 690, 692, 694, 728, 729, 731, 738, 755, 762, 768, 770, 772, 774, 777, 778, 780, 781, 785, 788, 790, 791, 792, 793, 794, 798, 800, 806, 807, 818, 826, 836, 853, 871], "score": [4, 7, 8, 9, 10, 11, 13, 15, 16, 18, 19, 72, 80, 135, 170, 192, 193, 202, 207, 270, 403, 406, 407, 409, 410, 413, 420, 550, 555, 564, 569, 646, 677, 678, 680, 681, 784, 807, 847, 850, 871], "thei": [4, 5, 26, 40, 44, 46, 49, 68, 69, 72, 79, 80, 91, 104, 111, 116, 132, 138, 139, 140, 142, 147, 149, 150, 156, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 174, 178, 179, 180, 186, 188, 189, 193, 196, 197, 198, 199, 200, 202, 203, 204, 207, 208, 211, 212, 213, 214, 227, 230, 240, 253, 255, 257, 260, 261, 262, 263, 265, 270, 292, 302, 304, 319, 320, 329, 349, 356, 358, 424, 426, 432, 436, 438, 445, 470, 471, 472, 479, 486, 491, 492, 494, 510, 526, 527, 539, 550, 561, 568, 569, 578, 593, 601, 602, 604, 635, 690, 693, 733, 738, 755, 771, 772, 775, 777, 781, 798, 800, 821, 826, 828, 830, 833, 837, 846, 848, 852, 853, 871], "have": [4, 10, 19, 30, 31, 33, 34, 37, 38, 39, 40, 43, 44, 47, 49, 50, 53, 54, 56, 57, 58, 59, 68, 69, 72, 76, 77, 80, 81, 83, 84, 87, 91, 92, 98, 100, 101, 109, 112, 113, 114, 116, 117, 124, 128, 131, 132, 133, 135, 138, 140, 141, 142, 143, 147, 148, 149, 153, 154, 155, 156, 157, 158, 159, 160, 164, 165, 166, 167, 168, 169, 170, 173, 174, 176, 177, 178, 179, 180, 181, 186, 187, 188, 189, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 217, 218, 219, 222, 223, 226, 227, 230, 232, 235, 237, 251, 252, 253, 255, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 287, 290, 292, 293, 301, 309, 312, 315, 325, 348, 349, 353, 354, 355, 360, 363, 364, 365, 396, 403, 406, 407, 409, 410, 411, 412, 413, 415, 416, 417, 422, 423, 424, 427, 428, 437, 438, 443, 446, 447, 453, 461, 463, 466, 468, 469, 470, 471, 472, 479, 482, 483, 486, 488, 491, 493, 509, 511, 519, 521, 524, 528, 536, 545, 549, 550, 551, 560, 561, 564, 566, 567, 568, 569, 571, 578, 596, 598, 608, 627, 629, 632, 635, 640, 641, 642, 643, 644, 655, 660, 664, 672, 676, 690, 691, 692, 693, 694, 708, 710, 711, 718, 719, 728, 738, 742, 743, 755, 761, 762, 768, 769, 770, 772, 775, 777, 778, 781, 790, 792, 793, 798, 799, 800, 804, 808, 819, 821, 826, 828, 831, 835, 836, 838, 842, 847, 848, 851, 852, 853, 856, 857, 859, 871], "standard": [4, 8, 28, 33, 40, 43, 45, 68, 72, 80, 91, 106, 118, 132, 133, 139, 147, 148, 149, 153, 157, 158, 167, 168, 169, 180, 189, 192, 193, 197, 199, 202, 205, 211, 217, 223, 232, 236, 240, 252, 255, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 275, 276, 283, 307, 309, 318, 323, 325, 382, 403, 410, 412, 423, 436, 437, 452, 456, 459, 470, 471, 472, 479, 483, 486, 494, 498, 517, 533, 534, 544, 549, 550, 569, 604, 611, 635, 639, 672, 675, 690, 692, 693, 694, 702, 703, 738, 755, 756, 762, 763, 769, 770, 772, 777, 778, 781, 783, 790, 793, 796, 798, 799, 800, 802, 826, 828, 846, 847, 848, 850, 853, 856, 859, 861, 871], "deviat": [4, 53, 54, 87, 94, 97, 118, 148, 149, 176, 193, 202, 206, 222, 224, 236, 255, 257, 260, 261, 262, 263, 283, 309, 403, 532, 533, 534, 550, 569, 652, 672, 690, 692, 693, 694, 762, 763, 769, 772, 778, 781, 783, 798, 799, 826, 853, 871], "how": [4, 5, 9, 10, 13, 18, 19, 22, 26, 27, 31, 32, 42, 43, 44, 46, 57, 61, 63, 65, 66, 67, 68, 69, 73, 76, 87, 91, 92, 95, 96, 102, 110, 113, 114, 117, 119, 121, 122, 124, 126, 127, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 147, 149, 150, 153, 154, 155, 156, 157, 159, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 178, 179, 180, 181, 186, 188, 192, 193, 198, 199, 200, 201, 202, 203, 205, 206, 208, 211, 212, 214, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 232, 235, 236, 237, 240, 253, 255, 257, 258, 259, 260, 261, 262, 263, 265, 267, 268, 269, 271, 273, 274, 275, 276, 292, 293, 303, 307, 308, 333, 337, 343, 355, 360, 361, 362, 367, 403, 409, 410, 415, 430, 445, 447, 461, 462, 466, 468, 469, 470, 471, 472, 476, 484, 491, 494, 501, 517, 526, 527, 528, 549, 550, 553, 561, 569, 578, 579, 620, 621, 622, 623, 631, 635, 638, 639, 677, 678, 680, 681, 688, 690, 691, 692, 693, 694, 708, 710, 738, 739, 746, 754, 755, 756, 759, 762, 764, 768, 769, 770, 773, 777, 781, 782, 783, 784, 790, 791, 793, 796, 797, 798, 800, 801, 806, 808, 826, 828, 830, 831, 838, 846, 847, 852, 853, 854, 856, 857, 859, 871], "onli": [4, 8, 10, 11, 12, 19, 21, 22, 31, 33, 38, 40, 43, 44, 46, 48, 49, 54, 62, 68, 72, 76, 79, 80, 85, 87, 90, 91, 92, 93, 94, 100, 104, 106, 109, 111, 112, 113, 114, 117, 124, 128, 130, 134, 135, 138, 139, 140, 141, 147, 148, 149, 155, 156, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 176, 178, 181, 186, 187, 188, 189, 193, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 211, 212, 213, 214, 217, 218, 219, 222, 224, 225, 226, 227, 230, 231, 232, 236, 237, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 298, 299, 300, 301, 302, 303, 304, 307, 308, 311, 312, 313, 314, 316, 317, 318, 320, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 420, 422, 424, 427, 428, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 446, 447, 448, 451, 453, 454, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 512, 513, 514, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 543, 546, 547, 548, 549, 550, 552, 553, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 578, 579, 581, 582, 585, 586, 587, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 608, 609, 610, 612, 613, 614, 615, 616, 618, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 635, 637, 638, 639, 641, 642, 643, 644, 653, 654, 655, 656, 658, 660, 661, 662, 663, 664, 665, 666, 667, 676, 677, 678, 679, 680, 681, 685, 686, 687, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 707, 708, 709, 710, 714, 718, 719, 720, 721, 722, 723, 724, 727, 728, 733, 737, 738, 746, 754, 755, 756, 757, 759, 762, 763, 766, 768, 770, 771, 772, 773, 774, 776, 777, 778, 779, 780, 781, 782, 783, 785, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 807, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 828, 830, 837, 846, 847, 850, 851, 852, 853, 854, 856, 871], "500": [4, 10, 11, 22, 68, 77, 78, 83, 85, 113, 133, 139, 141, 143, 179, 182, 188, 192, 193, 199, 202, 206, 208, 219, 227, 550], "ts_arg": [4, 98, 125, 193, 208, 223, 255, 260, 261, 262, 263, 550, 769, 775, 783, 871], "xlim": [4, 19, 36, 38, 94, 124, 158, 179, 192, 199, 200, 208, 219, 222, 232, 237, 262, 263, 772, 774], "plot_joint": [4, 69, 98, 148, 149, 164, 178, 180, 193, 196, 202, 204, 208, 223, 236, 262, 263, 690, 857, 871], "15": [4, 5, 9, 11, 12, 13, 19, 21, 22, 25, 28, 29, 32, 33, 34, 41, 42, 44, 46, 49, 50, 66, 67, 68, 69, 71, 73, 74, 76, 77, 78, 80, 82, 89, 90, 91, 100, 105, 106, 111, 120, 124, 127, 132, 135, 139, 140, 141, 143, 147, 149, 152, 153, 155, 160, 164, 166, 167, 168, 169, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 188, 189, 192, 193, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 210, 211, 217, 222, 223, 224, 226, 227, 229, 230, 231, 232, 234, 235, 240, 255, 258, 260, 261, 262, 263, 267, 268, 269, 270, 271, 273, 274, 275, 276, 280, 313, 363, 405, 414, 439, 441, 442, 443, 468, 470, 471, 472, 498, 550, 553, 562, 563, 623, 654, 674, 679, 689, 692, 694, 708, 710, 720, 721, 723, 742, 753, 754, 768, 776, 796, 801, 826, 833, 846, 847, 853], "titl": [4, 8, 9, 15, 16, 19, 22, 30, 34, 38, 41, 42, 43, 45, 46, 47, 48, 49, 53, 54, 58, 67, 68, 69, 74, 79, 83, 87, 91, 98, 100, 104, 105, 106, 107, 111, 117, 120, 122, 124, 129, 132, 135, 139, 140, 142, 144, 149, 150, 158, 170, 173, 174, 175, 177, 178, 192, 193, 197, 199, 200, 202, 203, 204, 205, 207, 219, 222, 223, 224, 227, 232, 236, 237, 240, 255, 257, 258, 260, 261, 262, 263, 267, 270, 271, 275, 403, 410, 470, 471, 472, 549, 550, 690, 692, 694, 738, 758, 761, 762, 766, 767, 768, 769, 770, 772, 774, 775, 776, 777, 779, 781, 782, 784, 785, 786, 791, 793, 794, 796, 798, 799, 805, 830, 845, 871], "differ": [4, 9, 16, 21, 22, 27, 28, 32, 36, 38, 43, 44, 46, 53, 54, 62, 66, 68, 75, 77, 78, 82, 91, 93, 96, 98, 100, 104, 107, 108, 109, 111, 117, 119, 120, 124, 127, 131, 132, 133, 135, 138, 140, 141, 142, 145, 147, 148, 149, 150, 154, 156, 158, 160, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 178, 179, 181, 182, 183, 186, 187, 188, 189, 193, 196, 199, 200, 201, 202, 203, 204, 205, 207, 211, 212, 213, 217, 222, 223, 224, 225, 227, 230, 231, 232, 236, 240, 254, 255, 260, 261, 262, 263, 264, 267, 268, 271, 274, 275, 276, 277, 292, 293, 294, 298, 315, 336, 349, 353, 354, 356, 358, 359, 363, 364, 365, 383, 396, 403, 410, 412, 424, 426, 427, 437, 444, 446, 447, 461, 462, 466, 468, 469, 470, 471, 472, 479, 486, 492, 503, 510, 523, 525, 526, 527, 528, 537, 550, 552, 560, 561, 566, 569, 576, 578, 592, 595, 601, 602, 605, 609, 632, 641, 642, 643, 644, 650, 653, 654, 655, 656, 672, 677, 678, 679, 680, 681, 690, 691, 692, 693, 694, 738, 743, 754, 764, 768, 772, 776, 777, 778, 783, 785, 791, 796, 802, 817, 826, 828, 830, 834, 835, 838, 846, 847, 848, 850, 853, 856, 859, 871], "wave": [4, 45, 92, 111, 135, 142, 149, 164, 199, 204, 223, 235, 240, 255, 260, 261, 262, 263, 396, 397, 470, 471, 472, 500, 562, 566, 570, 692, 694, 702, 707, 709, 847], "contrast": [4, 7, 85, 93, 96, 147, 149, 164, 168, 205, 219, 222, 223, 230, 235, 236, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 690, 693, 847, 857, 859, 871], "although": [4, 21, 64, 98, 138, 141, 147, 159, 170, 198, 199, 201, 203, 211, 258, 436, 470, 471, 472, 672, 837, 853, 871], "shouldn": [4, 149, 240, 271, 274, 537], "expect": [4, 37, 91, 111, 118, 142, 154, 157, 159, 160, 163, 164, 165, 170, 178, 188, 193, 199, 202, 203, 204, 208, 211, 212, 217, 219, 222, 226, 227, 232, 237, 255, 260, 261, 262, 263, 325, 327, 332, 353, 470, 471, 472, 478, 487, 490, 496, 528, 550, 578, 602, 603, 607, 618, 629, 738, 768, 778, 785, 791, 826, 828, 830, 849, 850, 852, 853, 854, 871], "great": [4, 117, 142, 149, 237, 848, 859], "among": [4, 10, 27, 35, 55, 170, 199, 222, 271, 273, 359, 527, 529, 531, 550, 569, 610, 613, 670, 738, 743, 842, 852, 871], "minu": [4, 139, 142, 224, 237, 550, 632, 675, 853, 856], "difference_wav": 4, "weight": [4, 5, 7, 11, 15, 18, 19, 21, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 49, 53, 54, 57, 58, 59, 71, 72, 87, 91, 96, 101, 104, 105, 106, 107, 120, 135, 139, 142, 147, 149, 155, 164, 166, 174, 175, 176, 177, 178, 179, 180, 183, 186, 189, 192, 193, 197, 199, 200, 201, 203, 204, 205, 208, 218, 219, 222, 223, 225, 230, 231, 232, 240, 252, 265, 266, 271, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 348, 360, 407, 408, 409, 421, 424, 447, 448, 466, 468, 469, 482, 517, 523, 524, 528, 549, 550, 576, 646, 647, 652, 653, 656, 677, 678, 680, 681, 685, 697, 700, 707, 709, 770, 793, 826, 846, 847, 856, 857, 871], "clear": [4, 72, 110, 114, 138, 155, 197, 201, 203, 207, 219, 222, 255, 257, 260, 261, 265, 269, 284, 297, 470, 471, 472, 516, 726, 738, 769, 830, 859, 871], "pattern": [4, 11, 17, 19, 20, 21, 27, 45, 77, 80, 109, 110, 140, 141, 159, 164, 165, 170, 192, 196, 199, 202, 203, 204, 208, 237, 240, 255, 260, 261, 262, 263, 265, 270, 307, 323, 358, 367, 403, 407, 409, 410, 411, 418, 421, 427, 432, 453, 470, 486, 488, 547, 551, 605, 618, 628, 629, 643, 690, 692, 693, 830, 846, 847, 853, 856, 871], "when": [4, 21, 27, 28, 31, 43, 44, 45, 46, 59, 68, 72, 73, 78, 79, 80, 81, 87, 91, 92, 100, 104, 112, 123, 124, 132, 138, 140, 141, 142, 143, 144, 147, 148, 149, 155, 156, 158, 159, 160, 164, 165, 166, 167, 168, 169, 170, 173, 176, 178, 180, 182, 186, 187, 188, 189, 193, 196, 198, 199, 200, 201, 202, 204, 205, 206, 207, 211, 212, 213, 214, 217, 218, 222, 224, 227, 235, 236, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 283, 292, 293, 304, 307, 311, 312, 334, 342, 343, 344, 348, 349, 353, 354, 355, 356, 358, 360, 363, 364, 365, 366, 369, 403, 410, 411, 414, 420, 422, 424, 428, 430, 432, 435, 437, 438, 439, 442, 444, 446, 447, 450, 453, 462, 466, 468, 469, 470, 471, 472, 479, 484, 486, 487, 488, 491, 492, 494, 498, 517, 518, 519, 520, 521, 523, 524, 528, 533, 534, 536, 539, 549, 550, 552, 555, 560, 561, 564, 566, 569, 570, 572, 573, 578, 579, 593, 596, 598, 602, 604, 606, 608, 621, 627, 629, 630, 635, 639, 640, 651, 654, 677, 678, 679, 680, 681, 685, 689, 690, 691, 692, 693, 694, 696, 699, 728, 735, 738, 746, 747, 755, 762, 766, 768, 770, 771, 772, 774, 775, 777, 778, 780, 781, 783, 785, 788, 790, 791, 792, 793, 794, 796, 797, 798, 799, 800, 801, 804, 811, 817, 819, 826, 828, 833, 834, 835, 836, 845, 846, 848, 850, 851, 852, 853, 854, 856, 857, 871], "howev": [4, 16, 21, 44, 68, 72, 73, 138, 140, 144, 147, 160, 165, 167, 168, 169, 170, 187, 188, 189, 192, 193, 197, 199, 201, 202, 203, 204, 205, 211, 212, 222, 224, 226, 227, 230, 232, 237, 255, 260, 261, 265, 292, 307, 349, 396, 424, 486, 488, 500, 517, 679, 830, 850, 852, 853, 856, 859, 871], "could": [4, 28, 29, 30, 37, 38, 40, 42, 67, 81, 101, 138, 142, 149, 158, 159, 164, 167, 169, 170, 173, 177, 178, 179, 189, 196, 198, 202, 203, 204, 205, 207, 211, 212, 213, 217, 222, 223, 230, 232, 237, 255, 260, 261, 262, 263, 266, 271, 292, 374, 396, 397, 402, 424, 426, 430, 446, 470, 471, 472, 473, 479, 550, 553, 567, 570, 571, 592, 741, 746, 812, 830, 850, 852, 859, 871], "narrow": [4, 196, 200, 237, 270, 871], "our": [4, 5, 19, 26, 27, 41, 43, 61, 68, 72, 77, 81, 90, 100, 106, 109, 111, 112, 117, 118, 124, 132, 133, 134, 135, 138, 139, 140, 142, 143, 144, 148, 149, 154, 158, 164, 166, 169, 170, 173, 178, 179, 181, 182, 193, 196, 197, 199, 200, 202, 203, 204, 205, 207, 208, 211, 212, 217, 219, 222, 224, 226, 227, 230, 231, 232, 235, 236, 237, 273, 443, 444, 525, 734, 829, 830, 832, 833, 834, 835, 846, 849, 850, 852, 853, 854, 858, 859, 871], "search": [4, 149, 154, 193, 270, 273, 292, 406, 413, 430, 451, 553, 558, 564, 754, 830, 835, 836, 850], "bit": [4, 5, 7, 106, 124, 139, 142, 158, 169, 178, 187, 199, 201, 206, 222, 230, 232, 237, 255, 260, 261, 265, 336, 470, 471, 472, 479, 486, 689, 828, 836, 847, 853, 856, 871], "sinc": [4, 19, 42, 43, 68, 91, 112, 116, 132, 133, 138, 139, 140, 142, 149, 158, 164, 165, 167, 169, 170, 173, 176, 186, 187, 189, 197, 198, 199, 200, 201, 202, 203, 204, 205, 211, 212, 213, 217, 222, 225, 230, 232, 237, 254, 255, 257, 260, 261, 262, 263, 266, 269, 270, 271, 274, 286, 307, 349, 353, 354, 403, 410, 424, 433, 434, 435, 436, 447, 459, 470, 471, 472, 513, 537, 549, 550, 561, 564, 566, 569, 578, 677, 678, 679, 680, 681, 690, 692, 694, 755, 770, 777, 781, 782, 790, 793, 798, 800, 830, 846, 850, 853, 856, 871], "paradigm": [4, 7, 142, 160, 164, 196, 199, 771, 847, 871], "might": [4, 5, 19, 21, 68, 117, 124, 139, 142, 149, 154, 159, 160, 165, 166, 174, 193, 199, 202, 205, 222, 227, 230, 237, 267, 271, 275, 327, 427, 536, 550, 586, 677, 796, 828, 829, 830, 846, 849, 850, 853, 871], "best": [4, 5, 10, 16, 71, 80, 118, 132, 133, 140, 147, 160, 164, 174, 175, 176, 178, 192, 198, 202, 207, 219, 266, 349, 354, 411, 470, 471, 472, 564, 646, 648, 649, 739, 830, 836, 838, 848, 849, 850, 852, 853, 856], "electrod": [4, 27, 75, 76, 82, 115, 117, 119, 127, 133, 136, 137, 139, 141, 148, 157, 159, 163, 164, 168, 184, 185, 189, 192, 196, 199, 201, 205, 207, 211, 222, 240, 255, 257, 260, 261, 262, 263, 264, 265, 269, 271, 277, 307, 308, 311, 321, 323, 325, 326, 327, 328, 329, 330, 333, 349, 361, 362, 367, 403, 410, 444, 455, 462, 463, 470, 471, 472, 477, 479, 481, 486, 491, 492, 513, 516, 517, 528, 549, 550, 558, 564, 575, 577, 606, 635, 690, 692, 693, 694, 727, 728, 730, 738, 739, 754, 755, 758, 760, 762, 770, 772, 774, 777, 778, 781, 788, 790, 792, 793, 794, 798, 800, 803, 806, 808, 811, 826, 846, 847, 856, 859, 871], "over": [4, 5, 8, 9, 12, 21, 27, 28, 44, 45, 57, 58, 68, 77, 78, 100, 101, 104, 106, 109, 110, 112, 119, 127, 133, 134, 135, 147, 148, 149, 157, 159, 160, 164, 167, 170, 173, 174, 189, 197, 199, 202, 204, 207, 213, 214, 219, 222, 223, 226, 227, 235, 237, 240, 252, 254, 255, 259, 260, 261, 262, 263, 265, 267, 268, 271, 274, 275, 276, 287, 290, 302, 316, 337, 349, 355, 403, 410, 412, 414, 442, 445, 470, 471, 472, 504, 519, 521, 524, 550, 554, 579, 592, 605, 639, 640, 665, 677, 686, 690, 692, 693, 694, 701, 708, 710, 723, 738, 751, 768, 769, 770, 780, 785, 826, 830, 837, 847, 848, 850, 852, 853, 859, 871], "occipit": [4, 46, 48, 167, 201, 237, 625, 853], "lobe": [4, 46, 133, 134, 178], "ani": [4, 5, 18, 24, 27, 40, 44, 49, 73, 80, 107, 109, 114, 117, 123, 124, 132, 133, 135, 138, 139, 140, 141, 147, 149, 154, 156, 158, 159, 160, 163, 164, 165, 167, 168, 169, 170, 174, 179, 181, 182, 183, 187, 188, 193, 196, 197, 198, 199, 201, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 222, 227, 237, 240, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 270, 271, 273, 274, 275, 276, 283, 285, 287, 300, 301, 307, 314, 319, 321, 356, 360, 380, 409, 422, 425, 426, 427, 430, 437, 455, 460, 470, 471, 472, 539, 541, 542, 543, 547, 548, 550, 551, 552, 553, 566, 569, 570, 578, 585, 596, 610, 618, 628, 631, 632, 635, 640, 651, 655, 676, 685, 690, 691, 692, 693, 694, 706, 738, 739, 741, 763, 768, 769, 771, 780, 781, 783, 791, 792, 802, 808, 811, 818, 821, 826, 828, 830, 833, 847, 848, 850, 852, 853, 859, 871], "easier": [4, 132, 138, 140, 142, 148, 149, 154, 170, 189, 193, 197, 199, 202, 203, 204, 205, 254, 366, 828, 830, 871], "spot": [4, 197, 200, 226, 270, 871], "area": [4, 5, 53, 68, 91, 113, 132, 133, 176, 189, 193, 197, 202, 213, 218, 222, 226, 237, 255, 260, 261, 262, 263, 266, 470, 471, 472, 651, 690, 760, 762, 772, 774, 792, 811, 830, 853, 856, 871], "dictionari": [4, 10, 27, 35, 55, 58, 91, 112, 124, 134, 138, 139, 140, 142, 143, 147, 148, 149, 164, 165, 167, 186, 202, 204, 207, 211, 212, 217, 240, 252, 254, 255, 257, 260, 261, 262, 263, 264, 265, 269, 270, 271, 273, 284, 292, 293, 294, 297, 305, 307, 319, 320, 335, 349, 353, 354, 360, 363, 364, 365, 367, 403, 405, 410, 414, 427, 430, 432, 435, 438, 439, 441, 442, 444, 446, 447, 463, 466, 467, 468, 469, 470, 471, 472, 502, 512, 516, 528, 550, 560, 562, 563, 564, 566, 569, 598, 605, 610, 621, 623, 626, 632, 639, 676, 690, 726, 728, 738, 761, 762, 768, 769, 771, 778, 781, 783, 791, 797, 837, 871], "concentr": [4, 188, 203, 208, 218, 408, 523, 524, 580, 585, 697, 700, 707, 709, 770, 871], "b11": 4, "ylim": [4, 7, 9, 19, 34, 38, 39, 45, 50, 58, 96, 109, 111, 124, 149, 158, 192, 199, 201, 208, 222, 232, 237, 262, 263, 762, 772, 776, 871], "do": [4, 5, 15, 16, 18, 24, 26, 27, 31, 33, 39, 40, 44, 46, 49, 50, 53, 54, 57, 58, 59, 64, 68, 72, 80, 106, 109, 111, 112, 117, 124, 132, 134, 135, 138, 139, 142, 147, 148, 149, 154, 155, 156, 157, 158, 159, 160, 164, 166, 169, 170, 173, 174, 175, 178, 180, 181, 182, 183, 186, 187, 189, 192, 193, 197, 199, 200, 202, 203, 204, 205, 206, 207, 211, 213, 217, 218, 219, 222, 227, 230, 231, 232, 236, 237, 240, 252, 253, 254, 255, 257, 260, 261, 262, 263, 266, 267, 268, 270, 271, 274, 275, 276, 279, 283, 298, 302, 304, 314, 321, 349, 353, 360, 363, 364, 374, 379, 396, 397, 414, 415, 416, 422, 424, 432, 437, 438, 444, 453, 461, 468, 469, 470, 471, 472, 479, 486, 513, 517, 518, 519, 520, 521, 523, 524, 533, 534, 541, 542, 543, 547, 548, 550, 551, 552, 553, 561, 566, 567, 569, 578, 595, 598, 605, 608, 609, 627, 629, 631, 677, 678, 680, 681, 685, 690, 692, 693, 694, 706, 728, 763, 767, 779, 798, 816, 819, 821, 828, 830, 833, 835, 836, 838, 841, 846, 847, 852, 853, 856, 857, 859, 871], "pretti": [4, 139, 142, 199, 202, 204, 850], "small": [4, 5, 11, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 56, 57, 58, 59, 68, 73, 87, 90, 91, 101, 104, 105, 106, 107, 118, 124, 125, 133, 139, 140, 150, 160, 164, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 189, 193, 199, 200, 202, 204, 213, 218, 219, 222, 224, 230, 232, 252, 255, 257, 258, 260, 261, 262, 263, 266, 269, 315, 349, 403, 410, 470, 471, 472, 487, 549, 550, 552, 596, 602, 677, 678, 680, 681, 683, 690, 692, 694, 766, 770, 777, 781, 790, 793, 798, 826, 830, 847, 850, 853, 856, 871], "determin": [4, 22, 79, 125, 132, 139, 143, 149, 159, 164, 167, 169, 176, 188, 199, 201, 207, 211, 212, 213, 222, 225, 227, 254, 255, 257, 258, 260, 261, 262, 263, 265, 268, 269, 274, 276, 279, 292, 293, 300, 307, 309, 336, 343, 349, 353, 354, 363, 364, 365, 379, 403, 409, 410, 420, 442, 446, 447, 466, 468, 469, 470, 471, 472, 483, 505, 509, 528, 550, 576, 578, 583, 584, 606, 625, 682, 738, 766, 769, 774, 776, 777, 778, 779, 788, 795, 801, 811, 812, 850, 853, 856, 871], "whether": [4, 13, 79, 139, 142, 143, 144, 169, 176, 178, 193, 197, 202, 203, 207, 237, 252, 253, 254, 255, 257, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 283, 292, 293, 307, 316, 317, 318, 321, 349, 354, 359, 379, 386, 425, 436, 444, 462, 463, 470, 471, 472, 482, 510, 517, 518, 519, 520, 521, 524, 526, 527, 528, 532, 533, 534, 549, 550, 551, 559, 564, 566, 567, 569, 570, 571, 576, 579, 593, 632, 635, 654, 655, 677, 678, 680, 681, 690, 691, 692, 693, 694, 696, 699, 709, 710, 738, 747, 755, 759, 762, 764, 766, 767, 768, 769, 770, 772, 776, 777, 781, 783, 785, 788, 790, 791, 792, 793, 794, 796, 798, 799, 800, 801, 804, 808, 811, 830, 836, 850, 853, 856, 871], "stronger": [4, 139, 189, 224, 232, 262, 263, 772], "along": [4, 19, 45, 112, 116, 134, 138, 140, 158, 164, 166, 168, 176, 192, 193, 196, 197, 201, 202, 205, 206, 211, 213, 214, 219, 230, 255, 257, 258, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 278, 283, 403, 406, 410, 413, 414, 416, 443, 461, 462, 468, 470, 471, 472, 549, 550, 595, 669, 670, 677, 678, 680, 681, 684, 690, 692, 693, 694, 722, 738, 754, 755, 762, 768, 769, 770, 773, 777, 781, 790, 793, 794, 796, 798, 799, 800, 801, 826, 828, 829, 830, 847, 853, 871], "phase_coh": 4, "get": [4, 5, 7, 15, 18, 19, 21, 22, 26, 27, 28, 33, 37, 38, 40, 46, 47, 49, 51, 59, 61, 62, 64, 65, 67, 68, 70, 77, 78, 80, 81, 91, 92, 93, 94, 100, 106, 110, 111, 113, 117, 120, 121, 124, 132, 133, 134, 138, 139, 140, 141, 142, 144, 147, 148, 149, 153, 154, 155, 156, 158, 160, 163, 164, 165, 167, 168, 171, 172, 173, 178, 179, 181, 182, 183, 196, 197, 198, 199, 200, 202, 204, 211, 213, 214, 222, 224, 226, 227, 232, 235, 236, 240, 252, 253, 254, 255, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 284, 297, 301, 305, 306, 307, 317, 318, 336, 337, 353, 360, 364, 365, 368, 371, 372, 373, 374, 376, 377, 384, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 406, 407, 409, 410, 411, 412, 413, 415, 416, 417, 420, 423, 427, 432, 438, 444, 452, 455, 458, 462, 470, 471, 472, 477, 499, 507, 516, 526, 527, 539, 550, 551, 557, 559, 567, 608, 639, 640, 659, 661, 669, 682, 685, 690, 691, 692, 693, 694, 722, 726, 738, 739, 762, 769, 771, 784, 826, 828, 829, 830, 832, 834, 835, 836, 841, 847, 848, 852, 853, 854, 856, 857, 859, 871], "sort": [4, 7, 15, 21, 27, 46, 91, 118, 119, 127, 135, 141, 158, 168, 222, 255, 260, 261, 262, 263, 265, 270, 319, 349, 354, 411, 429, 432, 456, 470, 487, 550, 613, 691, 693, 769, 772, 774, 821, 838, 871], "label": [4, 8, 9, 10, 11, 12, 15, 16, 18, 21, 22, 27, 28, 29, 35, 36, 43, 44, 55, 66, 68, 87, 89, 91, 92, 93, 94, 98, 102, 103, 107, 108, 109, 110, 113, 117, 123, 124, 132, 133, 135, 138, 140, 141, 142, 147, 149, 153, 158, 164, 166, 170, 174, 178, 179, 189, 193, 198, 202, 204, 207, 211, 212, 213, 223, 232, 236, 237, 240, 255, 256, 257, 258, 260, 261, 262, 263, 265, 267, 268, 269, 271, 272, 273, 274, 275, 276, 292, 293, 355, 359, 378, 381, 403, 404, 405, 408, 410, 411, 412, 414, 420, 436, 437, 444, 449, 455, 456, 457, 461, 470, 471, 472, 479, 482, 486, 504, 505, 516, 517, 518, 519, 520, 521, 523, 524, 526, 527, 529, 531, 533, 534, 536, 547, 549, 550, 551, 564, 595, 608, 610, 611, 612, 613, 618, 628, 629, 639, 640, 648, 653, 656, 657, 667, 686, 690, 692, 693, 694, 738, 743, 755, 756, 757, 760, 762, 768, 769, 770, 771, 772, 774, 777, 781, 784, 785, 790, 791, 793, 796, 797, 798, 799, 800, 801, 820, 821, 826, 830, 859, 861, 871], "2f": [4, 58, 155, 267, 268, 271, 274, 275, 276, 738, 796, 801], "format": [4, 27, 33, 42, 43, 61, 65, 68, 111, 124, 133, 134, 135, 138, 141, 147, 148, 149, 158, 163, 164, 166, 168, 169, 170, 174, 180, 186, 189, 200, 202, 203, 204, 205, 208, 211, 212, 213, 215, 222, 223, 224, 227, 252, 254, 255, 257, 259, 260, 261, 262, 263, 265, 267, 268, 269, 270, 271, 273, 274, 275, 276, 307, 325, 326, 330, 332, 345, 346, 347, 367, 403, 410, 432, 433, 434, 435, 436, 463, 470, 471, 472, 474, 477, 479, 483, 488, 539, 545, 549, 550, 564, 566, 596, 600, 605, 611, 621, 636, 637, 641, 642, 643, 655, 670, 677, 678, 680, 681, 690, 691, 692, 693, 694, 707, 712, 733, 738, 753, 755, 770, 777, 781, 790, 793, 796, 798, 800, 801, 811, 816, 824, 826, 830, 837, 842, 846, 847, 850, 856, 859, 871], "90": [4, 5, 11, 19, 24, 34, 40, 41, 46, 77, 78, 87, 91, 100, 105, 106, 109, 111, 120, 133, 134, 141, 149, 154, 155, 156, 158, 167, 168, 169, 177, 181, 182, 185, 188, 193, 198, 200, 205, 206, 208, 222, 223, 224, 226, 227, 230, 232, 237, 240, 262, 263, 292, 293, 349, 353, 354, 363, 364, 365, 403, 408, 410, 446, 447, 466, 468, 469, 514, 523, 524, 528, 550, 639, 646, 648, 649, 650, 671, 697, 700, 707, 709, 743, 770, 778, 847, 848, 853], "each": [4, 9, 10, 11, 15, 16, 19, 24, 28, 32, 37, 40, 43, 44, 68, 77, 80, 90, 91, 92, 98, 100, 104, 105, 106, 109, 110, 112, 114, 117, 124, 125, 130, 134, 135, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 153, 154, 156, 158, 159, 160, 164, 165, 166, 167, 170, 173, 174, 175, 176, 178, 179, 181, 183, 187, 188, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 217, 219, 222, 224, 226, 227, 230, 231, 232, 235, 237, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 282, 285, 286, 292, 293, 298, 305, 309, 312, 316, 337, 339, 340, 344, 345, 348, 349, 350, 351, 352, 353, 354, 355, 357, 360, 362, 365, 379, 396, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 419, 420, 426, 427, 428, 437, 441, 442, 443, 444, 445, 446, 447, 455, 461, 466, 468, 469, 470, 471, 472, 473, 475, 486, 493, 501, 502, 505, 507, 509, 510, 517, 521, 523, 524, 526, 527, 540, 549, 550, 551, 553, 555, 558, 564, 566, 568, 569, 577, 578, 582, 598, 602, 608, 621, 624, 632, 638, 639, 645, 646, 647, 648, 649, 650, 651, 652, 655, 656, 657, 659, 661, 670, 672, 673, 675, 677, 678, 679, 680, 681, 682, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 708, 709, 710, 721, 722, 728, 738, 739, 742, 746, 754, 755, 756, 758, 759, 760, 762, 763, 764, 765, 766, 769, 770, 772, 774, 775, 776, 777, 778, 781, 783, 789, 790, 791, 792, 793, 797, 798, 799, 800, 803, 807, 808, 811, 817, 819, 824, 826, 828, 829, 830, 836, 846, 847, 848, 850, 853, 856, 871], "zip": [4, 9, 10, 22, 27, 46, 78, 87, 104, 110, 111, 117, 124, 135, 138, 148, 158, 163, 178, 192, 197, 199, 200, 202, 203, 205, 222, 223, 224, 225, 226, 227, 232, 236, 380, 493, 830, 838], "c22": 4, "figur": [4, 5, 8, 16, 19, 22, 27, 28, 36, 37, 44, 48, 53, 54, 89, 100, 106, 108, 112, 113, 115, 119, 120, 122, 127, 133, 134, 139, 140, 142, 143, 148, 154, 156, 158, 164, 168, 174, 176, 177, 178, 181, 182, 189, 192, 193, 199, 201, 202, 204, 207, 208, 214, 219, 222, 224, 227, 232, 236, 255, 257, 258, 259, 260, 261, 262, 263, 265, 267, 268, 269, 270, 271, 273, 274, 275, 276, 307, 308, 321, 403, 410, 462, 463, 470, 471, 472, 549, 550, 564, 608, 618, 690, 691, 692, 693, 694, 738, 740, 741, 744, 747, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 805, 806, 808, 828, 829, 830, 848, 850, 871], "ax": [4, 10, 11, 12, 13, 15, 19, 21, 22, 36, 38, 40, 44, 46, 57, 66, 67, 68, 69, 70, 71, 78, 79, 83, 87, 90, 93, 96, 101, 109, 110, 111, 112, 113, 117, 124, 130, 132, 133, 134, 135, 142, 143, 144, 148, 149, 154, 158, 159, 168, 170, 174, 175, 178, 179, 181, 192, 193, 196, 199, 200, 203, 204, 207, 208, 214, 219, 222, 223, 224, 225, 226, 227, 235, 236, 237, 255, 257, 258, 260, 261, 262, 263, 269, 308, 316, 321, 462, 470, 471, 472, 549, 550, 690, 692, 694, 739, 741, 751, 754, 755, 757, 760, 761, 762, 766, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 783, 784, 786, 787, 790, 792, 793, 794, 795, 798, 800, 853, 871], "subplot": [4, 10, 11, 12, 13, 15, 19, 21, 22, 38, 40, 44, 46, 57, 66, 67, 68, 69, 70, 71, 79, 83, 87, 90, 93, 96, 101, 104, 109, 110, 111, 112, 113, 117, 124, 132, 134, 135, 140, 142, 144, 149, 158, 168, 170, 174, 175, 178, 179, 181, 192, 193, 199, 204, 207, 208, 214, 219, 222, 223, 224, 225, 226, 227, 236, 237, 255, 257, 260, 261, 262, 263, 269, 470, 471, 472, 549, 690, 692, 694, 738, 760, 761, 770, 771, 776, 777, 786, 790, 793, 798, 800, 803, 871], "figsiz": [4, 12, 15, 19, 22, 44, 46, 68, 71, 93, 109, 110, 111, 112, 117, 124, 132, 134, 142, 158, 174, 181, 192, 199, 204, 207, 208, 219, 222, 223, 225, 226, 227, 236, 237, 550, 783, 784], "8": [4, 5, 6, 7, 8, 9, 11, 13, 15, 19, 20, 21, 22, 25, 26, 28, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 57, 58, 60, 62, 63, 65, 66, 68, 69, 72, 73, 77, 78, 80, 82, 85, 87, 88, 91, 93, 98, 99, 100, 101, 103, 105, 106, 109, 110, 111, 113, 117, 118, 120, 123, 124, 125, 127, 132, 133, 134, 135, 137, 138, 140, 141, 142, 143, 144, 146, 148, 149, 150, 152, 154, 156, 157, 158, 160, 162, 164, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 188, 189, 191, 192, 193, 196, 198, 199, 202, 204, 205, 206, 207, 208, 210, 214, 217, 218, 219, 222, 223, 224, 226, 227, 229, 230, 231, 232, 236, 237, 239, 240, 255, 260, 261, 262, 263, 270, 273, 292, 293, 309, 374, 402, 403, 424, 447, 466, 468, 469, 470, 471, 472, 479, 486, 487, 494, 528, 533, 550, 551, 558, 561, 566, 569, 578, 596, 602, 604, 689, 692, 694, 722, 738, 761, 767, 769, 770, 774, 794, 828, 829, 830, 846, 847, 853, 856], "20": [4, 5, 9, 11, 12, 13, 14, 15, 19, 22, 28, 32, 33, 34, 36, 44, 45, 46, 47, 53, 54, 58, 59, 60, 68, 74, 78, 79, 85, 87, 97, 100, 101, 104, 105, 106, 109, 110, 111, 112, 113, 118, 124, 125, 127, 130, 135, 138, 140, 141, 148, 149, 150, 155, 157, 164, 167, 168, 169, 170, 174, 175, 177, 179, 181, 182, 183, 189, 192, 193, 196, 198, 199, 200, 203, 204, 205, 206, 207, 208, 211, 214, 217, 219, 222, 223, 224, 226, 227, 230, 231, 232, 234, 235, 237, 240, 255, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 292, 293, 303, 307, 312, 319, 325, 336, 337, 338, 339, 340, 342, 355, 360, 402, 403, 410, 428, 438, 446, 466, 468, 469, 470, 471, 472, 479, 506, 510, 517, 518, 519, 520, 524, 528, 532, 533, 534, 542, 549, 550, 559, 564, 569, 576, 600, 605, 635, 638, 639, 654, 656, 678, 679, 690, 691, 692, 693, 694, 706, 722, 742, 754, 755, 756, 762, 767, 768, 770, 772, 773, 774, 776, 777, 778, 781, 788, 790, 791, 792, 793, 794, 796, 798, 800, 801, 829, 846, 847, 850, 853], "cmap": [4, 9, 10, 13, 15, 16, 19, 22, 40, 68, 97, 98, 104, 106, 109, 111, 112, 113, 117, 132, 134, 141, 158, 180, 192, 193, 207, 222, 224, 225, 226, 227, 236, 255, 257, 260, 261, 262, 263, 269, 403, 410, 470, 471, 472, 549, 550, 564, 690, 691, 692, 694, 753, 755, 762, 764, 769, 770, 774, 777, 780, 781, 790, 793, 798, 799, 800], "magma": 4, "consider": [4, 78, 96, 149, 198, 199, 202, 218, 227, 240, 270, 676, 837, 853, 859, 871], "chosen": [4, 44, 135, 143, 149, 196, 199, 201, 202, 204, 235, 254, 255, 257, 260, 261, 262, 263, 268, 269, 273, 274, 276, 353, 405, 414, 416, 439, 441, 442, 461, 470, 471, 472, 503, 525, 549, 550, 564, 576, 595, 642, 643, 677, 678, 680, 681, 690, 691, 692, 693, 694, 719, 722, 738, 754, 755, 764, 768, 770, 774, 777, 781, 784, 790, 791, 792, 793, 794, 798, 800, 853], "test": [4, 8, 10, 13, 15, 16, 19, 26, 27, 87, 92, 95, 99, 109, 120, 125, 133, 138, 149, 163, 166, 169, 170, 186, 192, 193, 206, 207, 211, 223, 224, 225, 228, 229, 232, 233, 234, 237, 240, 255, 260, 261, 262, 263, 265, 271, 272, 273, 285, 287, 292, 313, 355, 379, 406, 407, 420, 424, 426, 442, 470, 471, 472, 480, 498, 501, 516, 517, 525, 531, 541, 547, 550, 569, 578, 605, 618, 620, 662, 668, 670, 672, 674, 677, 678, 679, 680, 681, 682, 683, 684, 690, 692, 693, 694, 721, 738, 746, 759, 762, 770, 777, 784, 798, 828, 831, 834, 835, 850, 853, 859, 871], "interpol": [4, 15, 24, 27, 59, 68, 75, 82, 84, 87, 90, 91, 92, 116, 132, 133, 134, 149, 175, 179, 186, 193, 202, 207, 219, 222, 235, 255, 257, 260, 261, 262, 263, 269, 273, 275, 276, 403, 410, 437, 460, 470, 471, 472, 549, 550, 564, 568, 572, 577, 608, 639, 641, 642, 643, 655, 690, 692, 694, 702, 727, 738, 755, 770, 777, 781, 790, 793, 798, 800, 837, 871], "miss": [4, 43, 67, 81, 132, 133, 149, 156, 157, 178, 181, 186, 188, 199, 205, 237, 255, 260, 261, 262, 263, 265, 273, 311, 334, 380, 396, 409, 470, 471, 472, 479, 486, 491, 541, 578, 676, 771, 772, 826, 830, 834, 835, 837, 838, 856, 859, 871], "drop": [4, 8, 9, 11, 12, 16, 18, 21, 32, 33, 41, 45, 48, 69, 70, 93, 94, 97, 100, 104, 107, 109, 110, 111, 114, 118, 125, 133, 134, 135, 139, 140, 142, 143, 144, 149, 150, 160, 164, 165, 170, 175, 178, 180, 181, 183, 189, 196, 197, 198, 201, 202, 204, 205, 208, 213, 218, 219, 224, 225, 226, 227, 230, 232, 236, 254, 255, 257, 260, 261, 262, 263, 267, 268, 270, 271, 274, 275, 276, 309, 312, 428, 429, 436, 460, 470, 471, 472, 484, 550, 562, 563, 566, 579, 602, 604, 632, 690, 691, 692, 693, 694, 767, 768, 781, 783, 830, 833, 853, 871], "furthermor": [4, 153, 173, 176, 187, 201, 846, 853, 856], "mark": [4, 8, 11, 48, 72, 76, 80, 89, 90, 108, 117, 123, 124, 133, 135, 140, 142, 148, 149, 164, 167, 168, 170, 176, 187, 188, 189, 198, 199, 202, 203, 205, 206, 207, 208, 211, 213, 214, 227, 240, 253, 255, 260, 261, 262, 263, 309, 365, 374, 381, 396, 397, 403, 410, 460, 462, 470, 471, 472, 549, 550, 555, 558, 564, 568, 569, 577, 578, 586, 593, 602, 604, 690, 692, 693, 694, 734, 758, 768, 770, 777, 782, 784, 791, 792, 798, 826, 830, 847, 848, 871], "exg": 4, "prefix": [4, 72, 153, 168, 173, 252, 255, 257, 260, 261, 262, 263, 269, 350, 351, 403, 410, 463, 470, 471, 472, 479, 486, 549, 550, 564, 690, 692, 694, 755, 777, 790, 793, 798, 800, 826], "interpolate_bad": [4, 68, 76, 197, 255, 260, 261, 262, 263, 460, 470, 471, 472, 853, 871], "reset_bad": [4, 76, 197, 255, 260, 261, 262, 263, 470, 471, 472, 853], "drop_channel": [4, 41, 68, 134, 138, 147, 211, 227, 255, 260, 261, 262, 263, 470, 471, 472, 690, 692, 693, 694, 857, 871], "exg1": 4, "exg2": 4, "exg3": 4, "exg4": 4, "radiu": [4, 5, 24, 26, 40, 44, 49, 68, 69, 76, 77, 90, 91, 106, 132, 149, 154, 156, 157, 168, 174, 179, 180, 181, 182, 183, 197, 204, 205, 207, 218, 255, 257, 260, 261, 262, 263, 269, 297, 300, 307, 321, 323, 325, 403, 410, 423, 461, 470, 471, 472, 503, 514, 532, 549, 550, 559, 564, 639, 642, 685, 690, 692, 694, 755, 762, 770, 772, 774, 777, 778, 781, 788, 790, 792, 793, 794, 798, 800, 853, 871], "95": [4, 5, 7, 8, 13, 19, 33, 46, 49, 68, 73, 77, 78, 87, 106, 109, 110, 111, 118, 132, 134, 140, 141, 143, 144, 149, 154, 156, 158, 167, 177, 182, 193, 198, 206, 207, 208, 222, 223, 226, 227, 240, 255, 260, 261, 262, 263, 550, 564, 650, 669, 690, 762, 778, 783, 799, 853], "113": [4, 34, 109, 166, 167, 172, 212, 222, 226, 227, 240], "524face": 4, "To": [4, 5, 11, 18, 19, 22, 32, 43, 44, 85, 87, 91, 92, 110, 113, 124, 130, 132, 135, 138, 140, 142, 144, 147, 148, 149, 154, 156, 157, 158, 159, 164, 166, 167, 168, 169, 170, 173, 176, 178, 182, 186, 188, 189, 192, 193, 197, 199, 200, 201, 202, 203, 204, 205, 207, 208, 211, 213, 214, 217, 219, 222, 224, 226, 227, 231, 232, 236, 252, 254, 255, 260, 261, 262, 263, 266, 270, 275, 276, 292, 293, 349, 353, 354, 409, 416, 427, 433, 434, 435, 436, 438, 444, 470, 471, 472, 479, 484, 499, 503, 507, 513, 550, 566, 569, 571, 575, 576, 578, 593, 595, 610, 636, 639, 642, 643, 644, 650, 653, 654, 656, 677, 678, 679, 680, 681, 683, 696, 699, 716, 718, 719, 720, 721, 722, 723, 736, 738, 755, 768, 781, 783, 785, 791, 802, 803, 818, 828, 829, 830, 833, 834, 835, 836, 838, 845, 846, 847, 848, 850, 852, 853, 857, 871], "predict": [4, 10, 12, 13, 15, 16, 17, 20, 27, 41, 98, 135, 139, 174, 192, 193, 240, 265, 292, 307, 323, 367, 406, 407, 409, 413, 415, 420, 443, 470, 472, 518, 525, 800, 847, 871], "brain": [4, 5, 7, 8, 10, 11, 15, 19, 21, 22, 24, 26, 27, 28, 29, 31, 32, 34, 37, 39, 40, 41, 42, 43, 45, 53, 57, 58, 59, 68, 79, 85, 91, 101, 106, 112, 119, 123, 127, 132, 133, 144, 149, 153, 154, 156, 158, 160, 168, 173, 174, 175, 176, 177, 179, 180, 182, 186, 187, 188, 189, 193, 196, 201, 202, 204, 205, 219, 222, 230, 231, 232, 237, 240, 252, 255, 258, 260, 261, 262, 263, 265, 267, 268, 271, 272, 273, 274, 275, 276, 286, 292, 293, 298, 326, 355, 366, 374, 403, 409, 411, 437, 442, 455, 469, 470, 471, 472, 481, 491, 505, 509, 514, 516, 517, 531, 537, 547, 548, 551, 555, 565, 575, 577, 600, 608, 618, 623, 628, 639, 655, 679, 690, 692, 693, 694, 747, 749, 752, 754, 756, 757, 760, 766, 796, 797, 801, 802, 806, 808, 811, 826, 828, 830, 831, 836, 837, 846, 847, 850, 853, 859, 861, 871], "purpos": [4, 8, 11, 12, 21, 110, 138, 139, 147, 154, 166, 178, 187, 196, 197, 198, 199, 202, 203, 205, 226, 230, 232, 237, 240, 255, 260, 261, 371, 372, 373, 374, 376, 377, 379, 384, 387, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 401, 414, 416, 470, 471, 472, 754, 768, 791, 826, 837, 846, 847, 852, 855, 856, 857], "intercept": [4, 98, 675], "predictor_var": 4, "where": [4, 10, 13, 31, 44, 66, 68, 72, 78, 79, 80, 87, 91, 92, 98, 109, 132, 135, 138, 139, 140, 142, 147, 149, 153, 158, 163, 164, 165, 166, 167, 168, 170, 173, 180, 181, 182, 186, 188, 189, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 211, 213, 217, 218, 219, 222, 224, 226, 227, 230, 231, 232, 237, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 267, 268, 269, 270, 271, 273, 274, 275, 276, 314, 316, 317, 318, 330, 348, 366, 371, 372, 373, 374, 376, 377, 379, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 416, 418, 437, 439, 442, 444, 463, 470, 471, 472, 503, 525, 549, 552, 559, 564, 566, 567, 568, 578, 640, 646, 647, 648, 649, 650, 652, 654, 655, 670, 671, 676, 677, 678, 680, 681, 690, 692, 693, 694, 738, 743, 755, 756, 759, 760, 761, 768, 769, 770, 777, 790, 791, 792, 793, 798, 800, 804, 826, 830, 831, 833, 834, 835, 836, 846, 847, 850, 852, 853, 856, 871], "func": [4, 207, 267, 268, 271, 274, 275, 276, 479, 486, 492, 830, 871], "reg": [4, 8, 9, 12, 21, 33, 48, 132, 178, 219, 292, 293, 403, 410, 411, 551, 853, 871], "design_matrix": [4, 139, 675], "25728": 4, "target": [4, 17, 20, 27, 48, 75, 82, 98, 125, 139, 159, 193, 200, 202, 222, 223, 237, 255, 260, 262, 263, 265, 402, 403, 404, 405, 406, 407, 408, 410, 411, 413, 414, 415, 416, 420, 429, 470, 471, 484, 511, 547, 550, 551, 605, 830, 871], "regressor": [4, 67, 98, 193, 222, 675], "within": [4, 5, 16, 24, 37, 40, 44, 46, 49, 60, 67, 91, 105, 106, 109, 117, 118, 124, 125, 133, 138, 139, 142, 149, 153, 154, 156, 158, 159, 163, 164, 166, 170, 173, 174, 176, 179, 181, 182, 183, 196, 199, 202, 203, 205, 207, 213, 218, 222, 233, 237, 240, 253, 255, 257, 260, 261, 262, 263, 267, 268, 269, 271, 274, 275, 276, 278, 302, 309, 367, 379, 408, 427, 429, 432, 437, 455, 461, 470, 471, 472, 523, 524, 533, 549, 564, 677, 678, 680, 681, 685, 690, 692, 694, 697, 700, 707, 709, 720, 723, 735, 755, 769, 770, 777, 778, 790, 793, 797, 798, 800, 826, 828, 830, 835, 836, 841, 850, 852, 853, 859, 871], "object": [4, 9, 10, 18, 19, 27, 30, 31, 32, 33, 35, 46, 53, 54, 55, 59, 62, 76, 91, 96, 98, 100, 101, 106, 109, 110, 111, 124, 129, 132, 139, 142, 144, 149, 153, 155, 158, 159, 160, 163, 164, 165, 168, 170, 173, 179, 180, 186, 187, 188, 189, 193, 196, 197, 198, 200, 202, 203, 204, 205, 207, 208, 212, 215, 216, 219, 223, 230, 236, 237, 240, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 279, 280, 281, 284, 286, 287, 290, 292, 293, 294, 297, 298, 300, 301, 305, 306, 307, 309, 312, 313, 314, 315, 316, 319, 321, 322, 335, 337, 339, 344, 348, 349, 352, 353, 354, 355, 356, 360, 363, 364, 365, 367, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 415, 416, 417, 419, 420, 421, 422, 428, 432, 437, 444, 445, 447, 449, 454, 463, 466, 468, 469, 470, 471, 472, 473, 476, 477, 478, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 503, 506, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 524, 526, 527, 528, 532, 539, 546, 547, 549, 550, 551, 552, 553, 561, 564, 565, 566, 573, 575, 577, 583, 584, 591, 596, 600, 601, 603, 607, 608, 609, 612, 618, 625, 626, 639, 640, 654, 655, 658, 667, 675, 676, 682, 686, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 703, 706, 709, 710, 711, 712, 713, 718, 719, 720, 721, 722, 723, 724, 726, 737, 738, 739, 744, 747, 749, 751, 752, 754, 755, 758, 759, 762, 763, 764, 765, 768, 769, 770, 771, 772, 773, 774, 775, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 788, 790, 791, 792, 793, 794, 795, 798, 800, 805, 806, 811, 817, 820, 826, 830, 846, 848, 853, 855, 857, 861, 869, 871], "multipl": [4, 16, 39, 43, 44, 50, 90, 93, 94, 98, 100, 109, 117, 138, 142, 147, 148, 157, 158, 164, 170, 173, 188, 192, 197, 199, 200, 202, 203, 205, 211, 212, 213, 223, 227, 230, 231, 232, 237, 240, 254, 255, 258, 259, 260, 261, 262, 263, 267, 268, 270, 271, 273, 274, 275, 276, 295, 312, 349, 355, 379, 405, 414, 416, 426, 428, 430, 439, 440, 441, 444, 447, 453, 468, 469, 470, 471, 472, 484, 493, 512, 526, 527, 532, 537, 550, 567, 571, 578, 582, 600, 608, 632, 635, 639, 668, 674, 678, 679, 690, 691, 693, 702, 704, 713, 714, 738, 752, 762, 769, 772, 775, 778, 781, 785, 791, 796, 797, 799, 801, 826, 830, 847, 853, 859, 861, 868, 871], "list": [4, 9, 10, 11, 16, 28, 40, 42, 46, 67, 81, 91, 100, 101, 108, 109, 110, 112, 113, 114, 124, 129, 135, 138, 142, 143, 147, 148, 149, 159, 164, 166, 167, 168, 169, 170, 173, 175, 181, 183, 186, 189, 197, 198, 199, 202, 203, 204, 207, 208, 211, 213, 214, 217, 218, 219, 222, 223, 226, 227, 231, 232, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 282, 283, 285, 286, 287, 290, 292, 293, 295, 298, 300, 301, 305, 307, 308, 309, 312, 313, 314, 316, 317, 318, 319, 321, 322, 324, 332, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 362, 363, 364, 365, 367, 374, 379, 385, 387, 396, 397, 405, 409, 413, 415, 418, 419, 420, 422, 424, 425, 426, 427, 428, 430, 434, 435, 437, 438, 441, 442, 444, 445, 449, 451, 453, 455, 456, 457, 458, 459, 460, 461, 466, 467, 468, 469, 470, 471, 472, 475, 479, 481, 483, 486, 487, 488, 492, 493, 494, 496, 501, 505, 507, 508, 509, 512, 515, 519, 521, 524, 526, 527, 536, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 558, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 575, 577, 578, 579, 584, 586, 589, 593, 595, 598, 600, 602, 604, 605, 608, 609, 610, 613, 616, 623, 625, 631, 632, 635, 639, 640, 653, 656, 657, 658, 659, 667, 670, 671, 673, 675, 676, 677, 678, 680, 681, 682, 685, 686, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 703, 705, 706, 709, 710, 713, 716, 717, 722, 724, 725, 735, 737, 738, 739, 742, 743, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 787, 788, 789, 790, 792, 793, 794, 796, 797, 798, 800, 801, 802, 814, 817, 821, 822, 826, 830, 833, 837, 838, 841, 845, 846, 850, 852, 853, 854, 856, 859, 871], "field": [4, 5, 7, 17, 20, 22, 26, 27, 33, 39, 40, 41, 44, 47, 49, 53, 54, 57, 58, 67, 76, 77, 78, 87, 91, 106, 110, 114, 116, 118, 121, 125, 128, 140, 142, 147, 154, 156, 157, 160, 163, 164, 167, 174, 175, 176, 177, 180, 181, 186, 187, 189, 193, 194, 195, 196, 197, 201, 202, 203, 204, 205, 206, 207, 211, 213, 214, 217, 219, 227, 240, 246, 253, 255, 257, 260, 261, 262, 263, 265, 292, 293, 307, 314, 323, 367, 409, 415, 435, 443, 446, 470, 471, 472, 473, 483, 490, 509, 517, 518, 564, 578, 586, 603, 607, 610, 635, 676, 720, 723, 738, 755, 762, 769, 772, 773, 775, 777, 778, 780, 799, 800, 808, 826, 831, 846, 847, 850, 859, 871], "getattr": 4, "_field": [4, 139], "beta": [4, 12, 19, 32, 33, 91, 98, 107, 109, 110, 112, 135, 139, 222, 236, 255, 260, 261, 262, 263, 470, 471, 472, 593, 675, 692, 694, 770], "stderr": [4, 139, 675], "t_val": [4, 139, 223, 675], "p_val": [4, 98, 139, 224, 225, 671, 675, 871], "mlog10_p_val": [4, 139, 675, 871], "just": [4, 5, 28, 32, 40, 41, 43, 47, 49, 58, 68, 72, 79, 80, 98, 100, 106, 110, 111, 112, 117, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 147, 149, 154, 156, 158, 159, 160, 163, 164, 166, 167, 168, 169, 170, 175, 177, 178, 179, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 211, 212, 213, 214, 219, 223, 224, 227, 230, 231, 232, 236, 237, 255, 257, 260, 261, 262, 263, 267, 268, 269, 271, 273, 274, 275, 276, 307, 403, 410, 437, 438, 470, 471, 472, 525, 549, 550, 560, 564, 577, 690, 692, 694, 734, 755, 762, 768, 770, 772, 774, 777, 778, 781, 785, 788, 790, 791, 792, 793, 794, 798, 800, 808, 828, 830, 838, 848, 853, 856, 871], "would": [4, 5, 19, 42, 43, 68, 138, 141, 142, 148, 149, 153, 154, 158, 159, 170, 173, 179, 188, 189, 193, 196, 198, 199, 200, 201, 202, 203, 204, 207, 217, 222, 223, 224, 227, 230, 232, 237, 255, 260, 261, 262, 263, 267, 268, 271, 273, 274, 275, 276, 286, 292, 293, 349, 353, 354, 363, 364, 365, 374, 379, 396, 397, 403, 410, 424, 425, 426, 438, 446, 447, 453, 466, 468, 469, 470, 471, 472, 486, 507, 515, 528, 550, 561, 578, 627, 690, 693, 738, 772, 777, 778, 791, 826, 836, 852, 853, 859, 871], "higher": [4, 26, 37, 43, 53, 67, 72, 91, 139, 149, 182, 193, 196, 198, 200, 202, 207, 218, 224, 227, 237, 270, 578, 705, 717, 828, 830, 834, 835, 853, 871], "better": [4, 9, 19, 42, 59, 68, 91, 140, 144, 149, 181, 182, 192, 199, 201, 202, 207, 222, 262, 263, 267, 268, 271, 274, 275, 276, 402, 564, 575, 578, 738, 796, 801, 828, 830, 853, 871], "visibl": [4, 46, 124, 170, 189, 199, 200, 206, 213, 214, 237, 255, 260, 261, 262, 263, 470, 471, 472, 550, 631, 690, 738, 768, 774, 785, 791, 826, 871], "neg": [4, 19, 22, 38, 69, 109, 111, 142, 148, 149, 160, 186, 189, 200, 202, 222, 230, 237, 255, 257, 258, 259, 260, 261, 262, 263, 267, 268, 269, 270, 271, 274, 275, 276, 282, 301, 403, 409, 415, 422, 431, 445, 470, 471, 472, 494, 549, 550, 571, 576, 648, 649, 674, 690, 692, 693, 694, 757, 762, 768, 770, 777, 781, 790, 791, 793, 796, 798, 802, 847, 850, 853, 856, 871], "around": [4, 48, 68, 73, 80, 91, 109, 139, 140, 142, 144, 149, 163, 164, 169, 170, 178, 181, 189, 196, 197, 198, 199, 200, 201, 202, 203, 204, 208, 211, 217, 237, 255, 260, 261, 262, 263, 270, 353, 403, 410, 422, 427, 429, 470, 471, 472, 503, 550, 562, 563, 566, 567, 595, 652, 690, 692, 693, 694, 762, 768, 774, 777, 778, 785, 791, 826, 828, 836], "200": [4, 9, 12, 30, 46, 55, 58, 73, 78, 87, 89, 92, 96, 106, 108, 109, 111, 124, 128, 133, 134, 140, 143, 144, 149, 156, 167, 170, 177, 179, 181, 189, 193, 198, 200, 203, 204, 217, 225, 226, 227, 232, 236, 240, 336, 338, 342, 442, 470, 471, 472, 523, 524, 550, 576, 837, 846, 853, 856, 859, 871], "follow": [4, 24, 27, 32, 33, 40, 41, 67, 68, 77, 91, 100, 104, 106, 110, 113, 125, 132, 133, 135, 139, 142, 149, 153, 156, 158, 159, 160, 166, 168, 170, 176, 178, 186, 187, 188, 193, 198, 199, 200, 201, 205, 207, 211, 212, 213, 217, 219, 222, 224, 226, 230, 232, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 267, 268, 269, 270, 271, 273, 274, 275, 276, 283, 284, 292, 293, 297, 298, 349, 360, 364, 379, 396, 403, 427, 429, 430, 441, 442, 443, 447, 470, 471, 472, 473, 477, 479, 486, 513, 516, 533, 534, 550, 566, 569, 578, 579, 608, 618, 636, 671, 673, 675, 690, 692, 693, 694, 709, 710, 721, 722, 726, 728, 734, 738, 751, 762, 770, 775, 798, 826, 828, 829, 832, 834, 835, 836, 846, 847, 849, 850, 853, 856, 857, 871], "onset": [4, 8, 32, 33, 114, 133, 134, 135, 138, 142, 144, 164, 166, 189, 198, 199, 201, 213, 237, 253, 254, 255, 260, 261, 349, 432, 444, 470, 471, 472, 553, 596, 695, 696, 697, 826, 871], "23": [4, 8, 11, 19, 28, 33, 34, 37, 43, 44, 46, 51, 55, 63, 64, 72, 78, 79, 100, 105, 106, 109, 111, 112, 115, 120, 123, 127, 135, 142, 143, 146, 149, 156, 167, 169, 174, 181, 182, 183, 189, 193, 202, 206, 210, 222, 223, 224, 226, 227, 230, 232, 235, 240, 254, 255, 258, 259, 260, 261, 262, 263, 265, 267, 268, 270, 271, 273, 274, 275, 276, 292, 341, 353, 363, 364, 374, 381, 382, 396, 397, 427, 462, 470, 471, 472, 479, 510, 550, 561, 598, 608, 647, 652, 689, 690, 692, 693, 694, 738, 767, 772, 782, 817, 847, 853], "correspond": [4, 16, 31, 47, 49, 60, 70, 74, 85, 89, 91, 100, 109, 117, 132, 135, 141, 142, 149, 153, 154, 156, 158, 166, 168, 170, 173, 178, 179, 180, 186, 189, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 211, 212, 213, 214, 224, 226, 227, 232, 237, 253, 255, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 285, 292, 293, 295, 299, 307, 317, 318, 320, 330, 349, 353, 354, 357, 363, 364, 365, 374, 379, 396, 397, 403, 404, 406, 407, 409, 410, 413, 415, 419, 427, 432, 446, 447, 448, 456, 466, 468, 469, 470, 471, 472, 479, 481, 483, 486, 490, 492, 494, 499, 503, 507, 509, 512, 514, 515, 526, 527, 528, 549, 550, 551, 564, 566, 569, 570, 603, 604, 607, 618, 631, 635, 639, 642, 655, 670, 671, 674, 675, 676, 677, 678, 680, 681, 682, 690, 691, 692, 693, 694, 702, 703, 708, 710, 728, 729, 731, 738, 741, 749, 751, 755, 756, 757, 762, 768, 769, 770, 772, 774, 776, 777, 778, 781, 790, 791, 793, 796, 798, 800, 801, 802, 811, 826, 830, 836, 847, 850, 853, 856, 871], "unit": [4, 8, 14, 19, 21, 80, 97, 100, 124, 133, 139, 154, 158, 166, 167, 178, 187, 188, 197, 202, 204, 207, 211, 219, 224, 225, 227, 235, 236, 240, 255, 257, 258, 259, 260, 261, 262, 263, 265, 269, 271, 292, 293, 300, 308, 325, 330, 332, 334, 354, 360, 367, 403, 405, 410, 412, 414, 424, 439, 441, 442, 447, 470, 471, 472, 479, 481, 486, 494, 550, 561, 566, 569, 578, 640, 682, 690, 692, 694, 729, 731, 738, 755, 762, 769, 770, 772, 774, 777, 778, 781, 790, 792, 798, 799, 800, 806, 826, 830, 856, 871], "scale": [4, 5, 10, 16, 19, 22, 27, 28, 29, 30, 32, 33, 34, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 49, 53, 54, 56, 57, 58, 59, 64, 68, 72, 75, 82, 87, 91, 97, 98, 100, 101, 104, 105, 106, 107, 111, 112, 113, 116, 124, 130, 135, 139, 140, 147, 149, 154, 155, 158, 164, 175, 176, 177, 178, 179, 180, 181, 188, 189, 192, 193, 199, 201, 202, 204, 205, 214, 218, 219, 230, 232, 236, 237, 240, 252, 255, 257, 258, 259, 260, 261, 262, 263, 265, 267, 268, 269, 270, 271, 274, 275, 276, 292, 293, 323, 333, 348, 349, 353, 354, 360, 363, 364, 365, 403, 410, 412, 424, 426, 437, 446, 447, 462, 465, 466, 468, 469, 470, 471, 472, 481, 523, 524, 528, 530, 533, 534, 541, 549, 550, 560, 561, 569, 578, 608, 627, 628, 629, 630, 642, 643, 654, 657, 690, 692, 693, 694, 728, 738, 751, 753, 755, 762, 766, 768, 769, 770, 772, 774, 776, 777, 778, 779, 781, 786, 790, 791, 792, 793, 797, 798, 799, 801, 826, 844, 871], "keep": [4, 11, 12, 27, 31, 59, 85, 101, 107, 108, 109, 135, 140, 143, 147, 149, 158, 159, 160, 163, 164, 167, 179, 197, 198, 199, 200, 201, 202, 211, 212, 213, 217, 224, 252, 255, 257, 260, 261, 262, 263, 287, 290, 293, 365, 409, 427, 470, 471, 472, 482, 519, 521, 524, 550, 579, 691, 702, 830, 838, 848, 852, 871], "avoid": [4, 8, 9, 28, 39, 58, 68, 85, 111, 135, 138, 149, 159, 164, 165, 167, 170, 181, 187, 189, 196, 199, 200, 204, 211, 213, 222, 235, 240, 255, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 271, 274, 275, 276, 349, 420, 432, 470, 471, 472, 479, 486, 492, 530, 550, 612, 618, 650, 653, 656, 672, 683, 684, 690, 693, 738, 796, 801, 834, 848, 850, 852, 853, 871], "convers": [4, 154, 166, 187, 189, 197, 199, 200, 255, 260, 261, 262, 263, 265, 267, 268, 271, 274, 275, 276, 470, 471, 472, 494, 587, 677, 678, 680, 681, 690, 693, 853, 856, 871], "micro": [4, 255, 260, 261, 262, 263, 470, 471, 472], "volt": [4, 139, 202, 204, 217, 255, 260, 261, 262, 263, 436, 470, 471, 472, 853, 871], "topomap_arg": [4, 68, 98, 193, 208, 223, 262, 263, 550, 690, 758, 775, 781, 783, 871], "set_ylabel": [4, 12, 13, 21, 22, 44, 68, 93, 101, 109, 110, 112, 130, 142, 170, 181, 193, 199, 203, 225, 226, 227, 237], "systemat": [4, 139, 160, 199, 240, 406, 568, 850, 871], "larg": [4, 10, 28, 68, 73, 77, 80, 81, 111, 117, 134, 140, 148, 149, 165, 170, 176, 193, 196, 197, 199, 200, 201, 203, 204, 205, 208, 214, 222, 227, 230, 237, 240, 255, 260, 261, 266, 292, 349, 353, 354, 358, 412, 442, 470, 471, 472, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 510, 530, 550, 552, 677, 678, 680, 681, 738, 756, 803, 834, 848, 871], "consist": [4, 10, 42, 68, 74, 109, 120, 155, 156, 159, 166, 168, 173, 181, 187, 188, 189, 193, 197, 198, 199, 201, 202, 206, 222, 224, 225, 240, 252, 255, 260, 261, 262, 263, 273, 277, 316, 470, 471, 472, 550, 558, 564, 568, 642, 643, 675, 690, 692, 693, 694, 695, 696, 697, 826, 846, 847, 852, 853, 859, 871], "guillaum": [4, 15, 85, 149, 155, 193, 199, 222, 240, 551, 683, 684, 847, 858, 871], "rousselet": [4, 149, 199, 240, 847], "2016": [4, 19, 45, 80, 110, 123, 192, 199, 240, 381, 382, 409, 468, 469, 550, 847], "7488": [4, 240], "1556": [4, 240], "carl": [4, 123, 240, 381, 847], "gaspar": [4, 240, 847], "cyril": [4, 240, 847], "r": [4, 8, 10, 12, 19, 21, 28, 36, 38, 40, 42, 48, 68, 78, 79, 93, 94, 96, 112, 124, 134, 135, 139, 143, 154, 158, 164, 174, 178, 179, 181, 182, 183, 192, 193, 197, 199, 201, 202, 204, 208, 212, 218, 222, 226, 227, 232, 237, 240, 252, 255, 257, 258, 259, 260, 261, 262, 263, 265, 267, 268, 269, 271, 272, 274, 275, 276, 295, 355, 374, 403, 409, 410, 438, 470, 471, 472, 502, 517, 525, 549, 550, 559, 562, 564, 566, 570, 650, 674, 677, 678, 683, 684, 690, 692, 693, 694, 720, 723, 738, 755, 756, 762, 766, 770, 777, 781, 786, 790, 793, 798, 800, 826, 828, 830, 847, 853, 856, 871], "pernet": [4, 240, 847], "jess": [4, 240, 847], "husk": [4, 240, 847], "patrick": [4, 240, 847, 853], "j": [4, 8, 12, 13, 18, 19, 21, 31, 34, 41, 43, 58, 64, 68, 69, 72, 73, 80, 91, 96, 98, 110, 118, 123, 135, 142, 149, 153, 158, 160, 170, 176, 178, 192, 193, 199, 201, 202, 203, 204, 222, 223, 227, 235, 240, 252, 255, 260, 261, 262, 263, 266, 270, 271, 272, 292, 295, 349, 355, 374, 382, 387, 397, 403, 407, 409, 410, 411, 421, 466, 469, 470, 471, 472, 517, 518, 525, 528, 532, 549, 550, 558, 559, 564, 576, 582, 585, 647, 650, 652, 676, 677, 678, 680, 681, 683, 684, 692, 694, 702, 707, 709, 720, 723, 845, 847, 850, 853, 871], "bennett": [4, 240, 847], "allison": [4, 240, 847], "sekul": [4, 240, 847], "healthi": [4, 240, 396, 397, 847, 859], "ag": [4, 110, 135, 187, 240, 255, 260, 261, 262, 263, 382, 397, 470, 471, 472, 473, 655, 847, 861, 871], "scalp": [4, 19, 27, 68, 69, 73, 76, 119, 127, 132, 140, 142, 147, 149, 153, 154, 156, 164, 168, 181, 182, 183, 188, 196, 197, 202, 204, 205, 207, 208, 214, 217, 235, 240, 252, 255, 260, 261, 262, 263, 265, 303, 422, 462, 470, 471, 472, 514, 550, 559, 582, 623, 635, 692, 694, 738, 754, 770, 792, 806, 826, 831, 834, 837, 846, 847, 850, 853, 856, 871], "sensit": [4, 5, 7, 23, 25, 27, 79, 119, 127, 149, 156, 176, 200, 204, 226, 232, 240, 255, 260, 261, 262, 263, 264, 265, 270, 271, 273, 359, 447, 470, 471, 472, 547, 550, 610, 616, 631, 658, 677, 678, 680, 681, 738, 782, 847, 852, 871], "frontier": [4, 10, 19, 132, 149, 192, 199, 240, 409, 555, 845, 847], "psychologi": [4, 10, 149, 199, 240, 672, 847], "19": [4, 9, 11, 13, 19, 28, 33, 34, 40, 41, 44, 46, 57, 63, 69, 71, 74, 78, 80, 87, 90, 91, 100, 103, 105, 106, 111, 124, 135, 138, 139, 144, 146, 149, 155, 156, 164, 165, 166, 167, 169, 176, 177, 178, 179, 180, 181, 182, 183, 189, 193, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 211, 212, 213, 214, 219, 222, 223, 224, 226, 227, 230, 231, 232, 240, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 267, 268, 271, 273, 274, 275, 276, 299, 301, 304, 323, 422, 466, 470, 471, 472, 509, 513, 543, 549, 550, 635, 685, 689, 690, 693, 708, 710, 754, 757, 762, 763, 766, 768, 785, 791, 802, 812, 828, 829, 847, 853], "14": [4, 5, 8, 9, 11, 13, 16, 19, 22, 24, 25, 28, 32, 33, 34, 42, 44, 45, 46, 47, 48, 53, 54, 57, 64, 77, 78, 80, 90, 91, 100, 104, 105, 106, 109, 111, 117, 118, 120, 139, 143, 146, 148, 150, 155, 156, 160, 166, 167, 169, 170, 173, 175, 176, 177, 178, 181, 183, 189, 192, 193, 199, 204, 206, 207, 217, 219, 222, 223, 224, 226, 227, 229, 230, 231, 232, 237, 240, 251, 255, 258, 260, 261, 262, 263, 273, 301, 354, 374, 404, 405, 409, 414, 419, 438, 439, 441, 470, 471, 472, 488, 498, 550, 566, 567, 582, 690, 707, 708, 718, 719, 738, 766, 768, 779, 786, 794, 847, 853], "2010": [4, 91, 114, 153, 199, 240, 292, 349, 403, 720, 723, 847, 871], "3389": [4, 10, 19, 132, 149, 192, 199, 240, 409, 555, 845, 847], "fpsyg": [4, 149, 199, 240, 847], "00019": [4, 240, 847], "parametr": [4, 67, 91, 110, 163, 164, 227, 228, 229, 240, 255, 260, 262, 263, 265, 313, 348, 444, 471, 517, 547, 550, 605, 625, 669, 670, 677, 678, 680, 681, 683, 684, 693, 721, 762, 783, 826, 868, 871], "studi": [4, 32, 68, 118, 142, 149, 159, 176, 178, 199, 201, 207, 219, 224, 226, 227, 240, 286, 292, 396, 397, 427, 826, 846, 853, 871], "bmc": [4, 16, 193, 240, 404, 419], "98": [4, 13, 15, 19, 32, 34, 41, 43, 46, 78, 109, 111, 114, 120, 157, 167, 175, 178, 189, 192, 193, 206, 219, 222, 223, 224, 226, 227, 232, 240, 286, 292, 337, 339, 578, 677, 678, 680, 681], "2008": [4, 10, 34, 43, 149, 168, 178, 202, 219, 222, 223, 240, 272, 292, 293, 333, 355, 403, 424, 442, 466, 532, 550, 650, 677, 678, 680, 681], "1186": [4, 16, 193, 206, 240, 404, 419], "1471": [4, 16, 193, 240, 404, 419], "2202": [4, 16, 193, 240, 404, 419], "34": [4, 6, 13, 19, 28, 33, 34, 40, 44, 46, 66, 69, 78, 100, 101, 105, 109, 111, 113, 120, 143, 167, 169, 179, 180, 183, 185, 192, 193, 199, 206, 207, 218, 222, 223, 224, 226, 227, 231, 232, 240, 559, 671], "256": [4, 5, 6, 12, 21, 34, 68, 106, 109, 112, 121, 132, 154, 158, 167, 168, 169, 170, 181, 219, 222, 226, 227, 273, 435, 689, 708, 710, 753, 828, 853], "617": [4, 227], "limo_data": [4, 6], "dataset": [5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 63, 64, 66, 67, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 170, 173, 174, 175, 176, 177, 178, 179, 180, 184, 185, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 213, 214, 217, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 238, 239, 240, 252, 254, 255, 257, 258, 260, 261, 262, 263, 265, 267, 268, 271, 274, 275, 276, 292, 293, 297, 304, 307, 323, 340, 348, 349, 350, 351, 353, 354, 356, 358, 363, 364, 365, 403, 406, 410, 413, 420, 423, 432, 434, 435, 444, 446, 447, 460, 466, 468, 469, 470, 471, 472, 481, 482, 484, 507, 508, 509, 513, 514, 516, 517, 520, 523, 524, 528, 533, 534, 547, 550, 563, 567, 572, 578, 586, 607, 608, 609, 610, 616, 623, 638, 675, 677, 678, 680, 681, 690, 692, 693, 713, 724, 738, 754, 762, 766, 771, 778, 800, 806, 817, 830, 848, 853, 854, 859, 861, 871], "electr": [5, 164, 178, 196, 204, 205, 240, 292, 293, 550, 558, 758, 826, 831, 846, 856], "stimul": [5, 44, 149, 178, 232, 255, 260, 261, 262, 263, 354, 470, 471, 472, 547, 548, 553, 572, 640, 690, 692, 693, 694, 738, 754, 847, 853, 871], "deliv": 5, "left": [5, 10, 11, 13, 15, 23, 25, 27, 30, 31, 34, 37, 38, 39, 40, 42, 43, 44, 46, 47, 49, 51, 53, 54, 56, 57, 58, 59, 60, 69, 71, 76, 77, 80, 83, 84, 91, 109, 113, 116, 117, 121, 124, 125, 129, 131, 132, 133, 138, 139, 140, 141, 142, 143, 147, 148, 149, 150, 153, 154, 156, 158, 164, 166, 170, 173, 176, 178, 179, 180, 189, 192, 193, 201, 202, 203, 204, 205, 207, 212, 213, 214, 218, 219, 223, 226, 230, 231, 232, 235, 253, 254, 255, 256, 257, 260, 261, 262, 263, 265, 266, 267, 268, 269, 271, 273, 274, 275, 276, 307, 309, 319, 320, 330, 331, 355, 374, 379, 403, 410, 425, 427, 430, 437, 461, 469, 470, 471, 472, 493, 503, 515, 549, 550, 625, 630, 638, 639, 642, 653, 690, 692, 693, 694, 738, 754, 762, 768, 769, 770, 772, 774, 776, 777, 778, 781, 789, 790, 791, 792, 793, 798, 802, 806, 826, 847, 853, 856, 871], "wrist": 5, "somatosensori": [5, 33, 45, 110, 236, 240, 386, 871], "nine": [5, 140], "quspin": 5, "serf": 5, "place": [5, 7, 26, 124, 132, 138, 147, 148, 149, 154, 159, 163, 164, 167, 171, 172, 176, 199, 201, 202, 203, 205, 207, 211, 217, 230, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 269, 272, 277, 278, 283, 307, 312, 315, 335, 342, 358, 359, 375, 378, 379, 381, 425, 427, 428, 441, 442, 470, 471, 472, 473, 482, 528, 537, 542, 549, 550, 562, 563, 564, 567, 571, 572, 575, 626, 632, 635, 640, 641, 642, 643, 655, 687, 690, 691, 692, 693, 694, 706, 725, 741, 755, 759, 770, 777, 790, 793, 798, 800, 826, 830, 847, 851, 853, 854, 856, 857, 871], "side": [5, 19, 44, 68, 139, 154, 164, 201, 205, 230, 237, 255, 257, 258, 260, 261, 262, 263, 267, 269, 271, 275, 403, 410, 470, 471, 472, 549, 550, 564, 569, 578, 675, 677, 678, 680, 681, 690, 691, 692, 694, 738, 755, 764, 766, 768, 770, 777, 781, 784, 790, 793, 796, 798, 800, 848, 853, 871], "somatomotor": 5, "custom": [5, 27, 35, 55, 106, 117, 119, 123, 127, 132, 138, 140, 143, 147, 148, 149, 165, 199, 200, 201, 202, 204, 205, 217, 227, 237, 252, 255, 257, 260, 261, 262, 263, 264, 265, 267, 268, 270, 271, 274, 275, 276, 316, 320, 322, 379, 470, 471, 472, 547, 550, 599, 608, 610, 670, 694, 732, 738, 751, 756, 757, 768, 775, 785, 791, 796, 797, 801, 802, 826, 830, 846, 847, 848, 850, 871], "opm_sampl": [5, 106], "subjects_dir": [5, 7, 11, 22, 24, 26, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 53, 54, 57, 58, 59, 66, 78, 87, 91, 92, 101, 106, 112, 113, 115, 121, 122, 123, 124, 128, 131, 132, 133, 134, 148, 153, 154, 155, 156, 157, 158, 159, 164, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 188, 189, 193, 208, 218, 219, 230, 231, 232, 252, 258, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 298, 302, 303, 304, 307, 355, 360, 361, 362, 366, 378, 380, 381, 382, 383, 422, 453, 455, 457, 459, 461, 462, 463, 464, 465, 503, 507, 509, 536, 537, 575, 595, 613, 615, 622, 627, 628, 629, 630, 638, 639, 653, 656, 667, 685, 686, 730, 737, 738, 754, 756, 766, 796, 801, 802, 811, 821, 836, 846, 853, 871], "raw_fnam": [5, 7, 8, 9, 11, 13, 14, 15, 16, 18, 26, 32, 33, 41, 44, 45, 48, 67, 68, 70, 71, 72, 74, 79, 80, 85, 90, 93, 94, 96, 97, 104, 105, 107, 108, 110, 114, 116, 118, 129, 130, 139, 150, 154, 156, 157, 160, 175, 178, 181, 183, 193, 201, 219, 224, 225, 226, 227, 230, 232, 236, 847, 853], "opm_sef_raw": 5, "bem_fnam": [5, 44, 66, 106], "bem": [5, 7, 23, 26, 27, 39, 40, 42, 43, 44, 49, 66, 106, 122, 132, 133, 134, 148, 153, 154, 157, 158, 161, 162, 163, 174, 178, 179, 180, 181, 182, 183, 188, 189, 205, 230, 231, 232, 250, 258, 270, 273, 360, 380, 402, 422, 446, 453, 507, 508, 509, 512, 513, 575, 597, 598, 621, 627, 629, 630, 639, 655, 754, 756, 813, 814, 819, 824, 826, 836, 847, 856, 861, 871], "5120": [5, 7, 26, 40, 44, 49, 66, 106, 148, 156, 157, 174, 179, 180, 252, 402, 507, 513, 655, 846], "sol": [5, 7, 22, 26, 40, 44, 49, 66, 106, 156, 157, 174, 179, 180, 252, 264, 513, 655, 846, 856], "fwd_fname": [5, 22, 31, 34, 39, 45, 50, 58, 66, 87, 89, 90, 91, 92, 178, 189, 219], "fwd": [5, 11, 22, 26, 31, 32, 33, 34, 39, 41, 42, 44, 45, 46, 47, 48, 50, 53, 54, 57, 58, 66, 87, 89, 90, 91, 92, 106, 128, 156, 157, 170, 173, 174, 175, 176, 177, 178, 180, 189, 193, 218, 219, 252, 264, 271, 280, 281, 282, 359, 437, 449, 450, 512, 513, 610, 631, 654, 655, 738, 754, 818, 846, 853], "coil_def_fnam": 5, "coil_def": [5, 106, 847, 853, 856], "dat": [5, 106, 207, 327, 485, 499, 561, 569, 578, 589, 594, 847, 853, 871], "read_raw_fif": [5, 10, 11, 13, 14, 15, 16, 18, 28, 29, 32, 33, 41, 44, 45, 48, 60, 66, 67, 69, 70, 71, 72, 74, 77, 80, 81, 85, 89, 90, 93, 94, 96, 97, 100, 101, 104, 105, 106, 107, 108, 110, 112, 114, 115, 118, 120, 124, 126, 129, 130, 138, 139, 140, 143, 144, 147, 149, 150, 154, 160, 164, 165, 166, 167, 168, 175, 178, 180, 181, 186, 193, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 211, 212, 213, 214, 218, 224, 225, 226, 227, 230, 232, 235, 236, 254, 477, 853, 857, 861, 871], "h_trans_bandwidth": [5, 21, 110, 111, 189, 199, 208, 255, 260, 261, 262, 263, 405, 414, 439, 441, 470, 471, 472, 582, 871], "notch_width": [5, 442, 470, 471, 472], "threshold": [5, 30, 33, 37, 72, 79, 93, 109, 117, 143, 149, 163, 164, 170, 180, 182, 186, 189, 197, 198, 202, 204, 207, 224, 225, 226, 227, 228, 229, 230, 231, 232, 240, 252, 255, 260, 261, 262, 263, 265, 303, 313, 319, 348, 353, 403, 410, 442, 470, 471, 472, 494, 532, 550, 552, 555, 562, 564, 566, 567, 569, 570, 571, 573, 583, 601, 646, 647, 648, 649, 650, 651, 652, 673, 674, 677, 678, 680, 681, 682, 693, 738, 762, 767, 768, 784, 811, 846, 853, 859, 871], "larger": [5, 48, 58, 68, 148, 177, 193, 196, 199, 201, 207, 214, 224, 237, 255, 260, 261, 270, 275, 276, 447, 470, 471, 472, 552, 571, 587, 685, 720, 723, 768, 791, 799, 802, 852, 853, 871], "squid": [5, 106, 240, 847, 853], "2e": [5, 8, 9, 21, 31, 32, 33, 34, 39, 40, 41, 44, 45, 47, 48, 49, 50, 53, 54, 57, 58, 68, 72, 87, 90, 91, 106, 116, 118, 150, 160, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 189, 193, 218, 219, 562, 563], "trigger": [5, 10, 90, 100, 106, 142, 164, 166, 169, 175, 180, 183, 186, 187, 188, 189, 198, 203, 208, 222, 252, 253, 349, 354, 444, 445, 470, 471, 472, 479, 486, 488, 492, 494, 567, 571, 605, 655, 826, 830, 846, 853, 856, 871], "257": [5, 109, 112, 167, 168, 222, 227, 847], "sti101": [5, 166, 253, 444, 445], "mask": [5, 28, 31, 79, 93, 97, 98, 109, 117, 140, 183, 199, 203, 218, 222, 223, 224, 225, 226, 227, 253, 255, 257, 260, 261, 262, 263, 269, 403, 409, 410, 444, 470, 471, 472, 479, 549, 550, 564, 605, 677, 678, 680, 681, 690, 692, 694, 755, 770, 774, 777, 781, 790, 793, 798, 800, 850, 871], "mask_typ": [5, 183, 253, 444, 479, 605, 871], "verbos": [5, 10, 11, 13, 14, 15, 33, 37, 39, 40, 41, 43, 48, 50, 57, 68, 73, 76, 77, 81, 85, 90, 91, 96, 101, 105, 106, 118, 120, 121, 123, 131, 132, 133, 134, 138, 140, 143, 144, 147, 148, 150, 155, 156, 157, 160, 168, 169, 170, 175, 177, 178, 179, 180, 181, 182, 188, 193, 197, 198, 199, 202, 205, 206, 207, 208, 212, 213, 222, 223, 224, 230, 235, 237, 252, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 298, 299, 300, 301, 302, 303, 304, 307, 311, 312, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 405, 406, 408, 409, 413, 414, 416, 419, 420, 422, 424, 428, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 446, 447, 448, 453, 454, 458, 459, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 505, 506, 507, 508, 509, 510, 512, 513, 514, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 543, 546, 550, 552, 553, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 573, 574, 575, 576, 578, 579, 581, 582, 585, 586, 587, 590, 591, 592, 593, 597, 598, 599, 600, 601, 602, 604, 605, 606, 608, 609, 610, 612, 613, 614, 615, 616, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 635, 637, 638, 639, 641, 642, 643, 644, 654, 655, 658, 660, 661, 662, 663, 664, 665, 666, 677, 678, 679, 680, 681, 685, 686, 687, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 703, 707, 708, 709, 710, 714, 718, 719, 721, 722, 723, 724, 727, 728, 733, 734, 737, 738, 746, 754, 763, 766, 770, 771, 772, 773, 778, 781, 782, 783, 788, 789, 791, 792, 794, 795, 796, 797, 801, 802, 803, 807, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 828, 830, 861, 871], "error": [5, 10, 13, 37, 41, 53, 54, 87, 90, 106, 111, 131, 133, 138, 142, 147, 150, 155, 160, 169, 170, 179, 181, 183, 186, 192, 193, 198, 199, 202, 205, 222, 223, 226, 240, 255, 257, 260, 261, 262, 263, 265, 266, 267, 268, 269, 271, 274, 275, 276, 280, 281, 311, 334, 343, 344, 349, 353, 356, 358, 360, 363, 364, 396, 403, 410, 422, 437, 438, 450, 451, 453, 470, 471, 472, 487, 491, 532, 541, 549, 550, 561, 564, 569, 577, 578, 596, 598, 602, 627, 629, 637, 647, 650, 652, 668, 674, 675, 679, 690, 692, 693, 694, 735, 736, 738, 755, 769, 770, 771, 777, 781, 782, 790, 793, 798, 800, 817, 819, 829, 830, 835, 836, 841, 846, 847, 850, 853, 856, 871], "suppress": [5, 13, 27, 37, 48, 75, 81, 82, 143, 148, 149, 169, 178, 182, 186, 196, 197, 199, 200, 201, 204, 240, 252, 255, 257, 260, 261, 262, 263, 264, 265, 266, 271, 336, 338, 342, 359, 439, 441, 442, 470, 471, 472, 547, 548, 565, 599, 610, 613, 636, 654, 656, 775, 826, 853, 871], "warn": [5, 10, 13, 37, 131, 133, 134, 138, 149, 160, 169, 170, 179, 182, 189, 200, 202, 203, 212, 213, 224, 235, 252, 254, 255, 260, 261, 262, 263, 265, 267, 268, 270, 271, 272, 274, 275, 276, 280, 281, 311, 334, 337, 343, 344, 349, 353, 355, 356, 358, 360, 363, 364, 396, 422, 430, 437, 450, 453, 470, 471, 472, 491, 550, 561, 569, 578, 579, 598, 608, 627, 629, 636, 637, 690, 692, 693, 694, 734, 736, 738, 771, 782, 817, 819, 836, 838, 861, 871], "about": [5, 13, 19, 27, 33, 42, 43, 68, 72, 91, 98, 111, 138, 139, 141, 142, 144, 147, 149, 153, 158, 160, 164, 166, 167, 170, 173, 176, 182, 186, 187, 188, 189, 192, 193, 197, 199, 200, 202, 203, 207, 208, 211, 212, 213, 218, 219, 222, 224, 252, 253, 255, 257, 259, 260, 261, 262, 263, 265, 269, 270, 271, 273, 278, 280, 281, 292, 293, 294, 300, 301, 305, 306, 313, 314, 315, 319, 321, 322, 335, 337, 339, 344, 353, 362, 363, 364, 365, 367, 403, 405, 410, 411, 412, 422, 427, 444, 447, 454, 463, 470, 471, 472, 473, 476, 501, 506, 513, 514, 518, 528, 546, 547, 550, 561, 575, 583, 584, 605, 625, 626, 654, 655, 658, 676, 690, 691, 692, 693, 694, 738, 751, 754, 758, 763, 764, 773, 780, 790, 794, 826, 830, 834, 846, 847, 849, 850, 852, 854, 856, 859, 871], "decim": [5, 7, 11, 12, 13, 18, 19, 24, 32, 33, 40, 41, 100, 106, 109, 156, 159, 160, 164, 170, 179, 181, 193, 200, 202, 207, 223, 224, 225, 226, 227, 236, 252, 255, 258, 259, 260, 261, 262, 263, 266, 267, 268, 270, 271, 274, 275, 276, 303, 402, 416, 424, 444, 470, 471, 472, 494, 510, 533, 534, 550, 566, 567, 601, 604, 659, 676, 690, 693, 696, 699, 716, 718, 719, 720, 721, 722, 723, 738, 756, 768, 791, 846, 853, 856, 871], "caus": [5, 13, 43, 68, 140, 149, 159, 196, 197, 198, 199, 200, 203, 207, 213, 255, 257, 260, 261, 262, 263, 270, 462, 470, 471, 472, 498, 550, 735, 772, 777, 831, 846, 871], "alias": [5, 13, 160, 179, 200, 255, 258, 259, 260, 261, 262, 263, 265, 267, 268, 271, 274, 275, 276, 416, 470, 471, 472, 566, 567, 690, 693, 716, 718, 719, 721, 722, 768, 791, 804, 850, 871], "ideal": [5, 68, 105, 130, 133, 142, 149, 168, 199, 201, 204, 205, 223, 237, 307, 779, 786, 826, 830, 850, 853], "instead": [5, 42, 72, 101, 111, 117, 132, 134, 140, 141, 144, 147, 148, 149, 154, 156, 158, 159, 164, 166, 167, 168, 169, 170, 193, 197, 198, 199, 200, 202, 203, 207, 211, 212, 214, 219, 222, 230, 231, 232, 235, 236, 252, 255, 257, 258, 259, 260, 261, 262, 263, 265, 267, 268, 269, 271, 272, 274, 275, 276, 285, 286, 287, 290, 292, 302, 304, 307, 348, 349, 354, 432, 433, 434, 435, 436, 437, 444, 451, 454, 459, 470, 471, 472, 519, 521, 524, 550, 551, 552, 585, 624, 635, 639, 654, 690, 693, 709, 710, 718, 719, 720, 721, 722, 723, 738, 740, 755, 762, 768, 772, 777, 778, 785, 791, 798, 800, 808, 828, 829, 830, 834, 835, 838, 846, 847, 848, 853, 871], "proj": [5, 8, 9, 11, 13, 14, 15, 18, 30, 31, 34, 37, 38, 39, 40, 41, 43, 44, 47, 49, 50, 53, 54, 56, 57, 58, 59, 69, 76, 83, 84, 85, 89, 106, 108, 113, 114, 116, 117, 118, 121, 124, 128, 138, 140, 143, 147, 148, 149, 160, 164, 167, 170, 174, 175, 176, 177, 178, 179, 180, 181, 189, 193, 196, 200, 203, 204, 205, 208, 211, 214, 217, 252, 255, 257, 260, 261, 262, 263, 265, 269, 270, 292, 293, 336, 337, 349, 350, 351, 352, 353, 365, 470, 471, 472, 510, 549, 550, 562, 563, 566, 593, 601, 608, 616, 631, 691, 692, 694, 695, 696, 697, 698, 699, 700, 701, 709, 710, 763, 770, 772, 774, 776, 777, 789, 790, 791, 792, 822, 826, 846, 871], "cov": [5, 11, 21, 31, 33, 34, 39, 40, 41, 44, 45, 47, 48, 49, 50, 53, 54, 57, 58, 63, 66, 81, 87, 89, 90, 91, 92, 118, 150, 170, 174, 176, 177, 179, 180, 181, 182, 183, 189, 192, 193, 218, 219, 252, 257, 270, 271, 349, 354, 446, 506, 518, 540, 550, 599, 617, 644, 654, 736, 763, 815, 830, 846, 847, 850, 861, 871], "compute_covari": [5, 7, 33, 41, 45, 48, 81, 90, 118, 150, 160, 175, 178, 180, 181, 183, 193, 218, 257, 354, 365, 403, 410, 411, 551, 599, 736, 846, 850, 861, 871], "del": [5, 18, 32, 40, 41, 45, 46, 47, 48, 49, 53, 54, 106, 110, 132, 134, 138, 140, 143, 147, 164, 170, 175, 177, 178, 179, 181, 182, 189, 193, 199, 202], "open": [5, 11, 13, 14, 15, 16, 18, 28, 29, 32, 33, 41, 44, 45, 48, 60, 66, 67, 68, 69, 70, 71, 72, 74, 77, 80, 81, 85, 89, 90, 93, 94, 96, 97, 100, 101, 104, 106, 107, 108, 110, 112, 114, 115, 118, 120, 124, 126, 129, 130, 132, 133, 139, 140, 142, 144, 148, 149, 150, 153, 154, 159, 160, 163, 164, 165, 166, 167, 170, 175, 178, 180, 181, 193, 196, 197, 198, 200, 201, 202, 203, 204, 206, 207, 211, 214, 218, 219, 224, 225, 226, 227, 230, 232, 236, 237, 240, 255, 259, 260, 261, 262, 263, 270, 273, 374, 470, 471, 472, 550, 558, 655, 776, 781, 791, 799, 826, 827, 829, 834, 836, 837, 847, 849, 850, 852, 856, 871], "isotrak": [5, 41, 98, 106, 120, 126, 141, 160, 170, 204, 206, 223, 252, 332, 853], "700999": 5, "700": [5, 78, 112, 125, 132, 206, 227, 738], "999": [5, 33, 74, 77, 81, 89, 93, 106, 108, 120, 126, 128, 140, 142, 157, 166, 170, 181, 193, 202, 203, 205, 206, 207, 227, 562, 566, 570, 573], "contigu": [5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 33, 41, 71, 74, 79, 80, 81, 85, 96, 110, 111, 112, 118, 130, 139, 142, 144, 149, 193, 200, 201, 202, 204, 207, 208, 226, 227, 266], "segment": [5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 23, 24, 27, 32, 33, 37, 41, 62, 68, 71, 74, 78, 79, 80, 81, 85, 96, 106, 110, 111, 112, 118, 130, 132, 133, 135, 139, 142, 143, 144, 149, 160, 166, 170, 182, 189, 193, 198, 200, 201, 202, 203, 204, 206, 207, 208, 213, 227, 236, 240, 252, 254, 255, 258, 260, 261, 262, 263, 270, 273, 298, 349, 354, 432, 455, 456, 457, 470, 471, 472, 498, 510, 518, 520, 550, 552, 553, 554, 555, 556, 557, 560, 566, 567, 569, 570, 576, 578, 690, 708, 709, 710, 736, 738, 772, 774, 781, 783, 826, 846, 847, 853, 856, 871], "lowpass": [5, 11, 69, 71, 74, 78, 79, 80, 81, 87, 90, 124, 139, 144, 149, 164, 165, 166, 167, 189, 196, 197, 198, 199, 200, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 217, 219, 252, 255, 258, 259, 260, 261, 262, 263, 265, 267, 268, 271, 274, 275, 276, 438, 470, 471, 472, 690, 692, 693, 694, 768, 791, 792, 856, 871], "331": [5, 33, 81, 109, 111, 167, 199, 206, 207, 222], "48": [5, 11, 12, 19, 21, 28, 34, 40, 44, 45, 46, 78, 91, 100, 101, 105, 106, 111, 143, 149, 155, 166, 167, 169, 206, 213, 222, 223, 224, 226, 227, 230, 232, 240, 871], "6601": 5, "initi": [5, 16, 19, 21, 40, 42, 43, 68, 90, 93, 106, 109, 142, 147, 149, 154, 166, 178, 183, 189, 202, 211, 217, 222, 223, 224, 225, 226, 227, 230, 231, 232, 237, 251, 252, 255, 258, 260, 261, 266, 267, 268, 270, 271, 272, 274, 275, 276, 367, 369, 466, 470, 471, 472, 478, 497, 503, 550, 576, 585, 587, 595, 642, 643, 644, 653, 654, 656, 669, 677, 678, 679, 680, 681, 693, 728, 738, 766, 768, 782, 785, 791, 796, 801, 802, 830, 835, 837, 852, 853, 856, 871], "initial_ev": [5, 87, 90, 106, 183, 219, 444, 871], "detect": [5, 8, 9, 12, 22, 27, 66, 68, 70, 72, 75, 79, 80, 90, 106, 109, 124, 135, 144, 149, 155, 157, 160, 163, 166, 170, 183, 188, 189, 193, 197, 199, 200, 201, 202, 203, 204, 207, 209, 210, 212, 237, 240, 252, 253, 255, 260, 261, 262, 263, 265, 270, 313, 336, 338, 342, 442, 470, 471, 472, 477, 498, 547, 550, 552, 554, 555, 556, 558, 562, 563, 565, 566, 567, 569, 570, 571, 573, 578, 676, 690, 720, 723, 738, 768, 784, 785, 791, 837, 850, 853, 860, 871], "201": [5, 44, 124, 134, 167, 174, 179, 181, 206, 222, 226, 227, 232, 856], "rank": [5, 7, 8, 9, 12, 15, 21, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 56, 57, 58, 59, 81, 85, 87, 90, 91, 101, 104, 105, 106, 107, 110, 118, 150, 160, 164, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 189, 193, 197, 201, 202, 203, 218, 219, 230, 232, 257, 262, 263, 292, 293, 349, 353, 354, 363, 364, 365, 403, 410, 411, 446, 447, 466, 468, 469, 522, 528, 550, 763, 778, 826, 850, 871], "toler": [5, 8, 9, 21, 31, 32, 33, 34, 39, 40, 41, 44, 45, 47, 48, 49, 50, 53, 54, 57, 58, 87, 90, 91, 106, 118, 150, 160, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 189, 193, 199, 202, 203, 218, 219, 353, 466, 468, 469, 550, 587, 853, 871], "1e": [5, 8, 9, 32, 33, 39, 44, 45, 48, 58, 64, 68, 69, 72, 79, 90, 91, 111, 117, 118, 135, 156, 160, 177, 178, 181, 183, 193, 198, 199, 218, 219, 222, 255, 260, 261, 270, 466, 470, 471, 472, 517, 549, 559, 576, 656, 683, 690, 768, 791, 793, 798, 826, 871], "16": [5, 8, 9, 11, 12, 13, 19, 21, 22, 28, 31, 32, 33, 34, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 53, 54, 57, 58, 59, 69, 77, 78, 87, 90, 91, 93, 97, 100, 105, 106, 109, 111, 118, 120, 124, 127, 142, 150, 154, 158, 160, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 192, 193, 196, 199, 200, 202, 204, 205, 206, 207, 208, 210, 217, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 234, 237, 240, 253, 255, 259, 260, 261, 262, 263, 270, 273, 349, 403, 410, 444, 462, 470, 471, 472, 479, 517, 519, 520, 523, 524, 530, 533, 550, 558, 566, 586, 670, 690, 692, 693, 694, 754, 768, 772, 774, 776, 777, 778, 780, 791, 853, 856], "ep": [5, 8, 9, 21, 31, 32, 33, 34, 39, 40, 41, 44, 45, 47, 48, 49, 50, 53, 54, 57, 58, 87, 90, 91, 106, 118, 150, 160, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 189, 193, 218, 219, 517], "dim": [5, 8, 9, 21, 31, 32, 33, 34, 39, 40, 41, 44, 45, 47, 48, 49, 50, 53, 54, 57, 58, 87, 90, 91, 106, 118, 150, 158, 160, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 189, 193, 218, 219, 235, 257, 523, 524, 533, 534, 551, 693, 856], "singular": [5, 8, 9, 21, 31, 32, 33, 34, 39, 40, 41, 44, 45, 47, 48, 49, 50, 53, 54, 57, 58, 87, 90, 91, 106, 118, 150, 160, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 189, 193, 203, 218, 219, 257, 267, 268, 271, 274, 275, 276, 353, 437, 525, 763, 853, 856], "reduc": [5, 8, 9, 12, 15, 16, 21, 27, 33, 39, 41, 45, 48, 54, 58, 69, 75, 81, 82, 85, 101, 104, 105, 106, 107, 111, 117, 118, 144, 147, 149, 155, 156, 160, 165, 170, 175, 178, 180, 181, 183, 189, 192, 193, 200, 201, 202, 203, 204, 205, 207, 211, 218, 224, 225, 227, 230, 231, 232, 236, 240, 255, 257, 260, 261, 262, 263, 264, 267, 268, 271, 274, 275, 276, 292, 293, 349, 353, 354, 363, 364, 365, 381, 403, 404, 410, 416, 419, 420, 426, 438, 444, 446, 447, 466, 468, 469, 470, 471, 472, 520, 523, 524, 528, 533, 534, 549, 550, 576, 586, 633, 677, 678, 680, 681, 696, 699, 716, 718, 719, 720, 721, 722, 723, 772, 777, 778, 826, 830, 850, 853, 856, 871], "covari": [5, 8, 9, 11, 12, 15, 19, 21, 27, 28, 29, 30, 31, 32, 34, 35, 37, 38, 39, 40, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 65, 66, 78, 85, 87, 89, 90, 91, 100, 101, 104, 105, 106, 107, 110, 119, 121, 127, 147, 150, 161, 162, 163, 164, 174, 176, 177, 179, 180, 181, 182, 183, 189, 193, 197, 198, 202, 219, 230, 232, 240, 252, 255, 260, 261, 262, 263, 264, 265, 270, 271, 289, 292, 293, 295, 312, 348, 349, 350, 352, 353, 354, 363, 364, 365, 403, 409, 410, 411, 428, 444, 446, 447, 466, 468, 469, 470, 471, 472, 476, 506, 516, 517, 518, 519, 520, 521, 523, 524, 528, 530, 533, 534, 542, 550, 551, 599, 605, 610, 644, 654, 676, 691, 701, 738, 763, 768, 772, 776, 778, 791, 815, 826, 847, 856, 861, 871], "empir": [5, 8, 9, 15, 27, 31, 35, 45, 48, 55, 85, 90, 118, 160, 175, 178, 180, 181, 183, 193, 207, 218, 240, 257, 262, 263, 264, 265, 271, 292, 293, 349, 353, 354, 363, 364, 365, 403, 410, 411, 446, 447, 466, 467, 468, 469, 528, 551, 599, 608, 610, 765, 766, 778, 797, 871], "10251": 5, "examin": [5, 33, 46, 72, 126, 134, 140, 143, 144, 149, 158, 164, 175, 176, 202, 211, 213, 830, 850], "align": [5, 7, 9, 28, 77, 133, 149, 153, 155, 156, 161, 162, 163, 166, 170, 180, 181, 182, 188, 211, 222, 254, 255, 258, 260, 261, 265, 267, 268, 271, 272, 273, 274, 275, 276, 297, 303, 307, 360, 362, 383, 422, 437, 462, 463, 471, 514, 550, 620, 621, 623, 639, 727, 728, 738, 754, 766, 768, 806, 811, 826, 853, 871], "forward": [5, 7, 12, 22, 26, 31, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 53, 54, 57, 58, 66, 70, 77, 87, 89, 90, 91, 92, 128, 133, 144, 153, 154, 158, 159, 162, 164, 168, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 186, 189, 193, 196, 197, 198, 199, 201, 202, 204, 205, 218, 219, 240, 252, 255, 260, 261, 262, 263, 265, 268, 270, 271, 273, 274, 276, 280, 281, 282, 292, 293, 294, 295, 297, 302, 304, 307, 311, 312, 323, 329, 355, 359, 367, 382, 403, 405, 410, 414, 428, 430, 431, 439, 441, 442, 462, 466, 467, 468, 469, 470, 471, 472, 476, 486, 507, 508, 512, 513, 514, 526, 527, 528, 529, 532, 543, 548, 597, 610, 620, 631, 635, 638, 639, 641, 642, 643, 654, 655, 690, 732, 738, 754, 756, 775, 779, 804, 806, 818, 826, 831, 842, 847, 852, 856, 859, 861, 871], "mri": [5, 24, 26, 30, 34, 39, 40, 42, 43, 44, 49, 58, 90, 91, 106, 112, 121, 122, 132, 133, 134, 148, 155, 156, 159, 161, 162, 163, 164, 168, 174, 176, 179, 181, 182, 183, 184, 185, 186, 187, 188, 205, 211, 219, 240, 255, 257, 258, 260, 262, 263, 264, 265, 270, 271, 272, 273, 275, 276, 297, 298, 299, 302, 303, 304, 307, 311, 320, 323, 325, 329, 349, 355, 360, 361, 362, 366, 367, 380, 382, 383, 422, 437, 444, 446, 454, 455, 456, 462, 463, 464, 465, 470, 471, 472, 486, 500, 502, 509, 512, 513, 516, 517, 528, 575, 597, 620, 622, 627, 628, 629, 630, 639, 658, 685, 725, 726, 728, 730, 738, 749, 754, 756, 766, 802, 806, 819, 826, 831, 834, 837, 846, 850, 856, 859, 861, 871], "ident": [5, 44, 68, 96, 106, 122, 133, 148, 154, 156, 158, 164, 181, 182, 183, 192, 202, 205, 207, 258, 265, 272, 273, 299, 367, 383, 427, 502, 509, 512, 513, 523, 525, 569, 576, 578, 600, 655, 685, 726, 754, 826, 846, 847, 848, 853, 856, 871], "matrix": [5, 9, 10, 11, 15, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 61, 65, 66, 76, 78, 84, 87, 89, 90, 91, 92, 93, 94, 101, 102, 103, 104, 105, 106, 107, 116, 118, 121, 128, 131, 132, 135, 139, 148, 149, 150, 154, 155, 156, 157, 158, 161, 162, 163, 164, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 189, 192, 193, 197, 202, 203, 204, 218, 219, 223, 224, 225, 226, 227, 231, 232, 240, 252, 255, 257, 258, 260, 262, 263, 265, 270, 272, 273, 289, 292, 293, 294, 299, 307, 310, 311, 313, 324, 349, 354, 355, 363, 364, 365, 409, 424, 444, 447, 470, 471, 472, 476, 509, 513, 517, 523, 524, 525, 526, 527, 528, 529, 532, 533, 534, 542, 547, 550, 551, 557, 558, 576, 579, 599, 603, 605, 639, 644, 655, 660, 661, 662, 663, 664, 665, 666, 670, 675, 676, 677, 678, 680, 681, 685, 691, 698, 699, 700, 706, 726, 754, 758, 759, 763, 764, 781, 782, 785, 815, 826, 847, 871], "co": [5, 22, 66, 155, 199, 207, 217, 240, 336, 429, 826, 847, 853], "registr": [5, 42, 43, 131, 132, 155, 178, 240, 272, 355, 727, 728, 811, 836, 847, 853, 871], "equat": [5, 133, 154, 192, 193, 203, 240, 424, 561, 720, 723, 853, 859], "mi": [5, 847], "defin": [5, 8, 9, 10, 12, 18, 19, 21, 27, 31, 32, 42, 43, 59, 60, 74, 75, 82, 91, 92, 101, 104, 108, 111, 117, 125, 132, 134, 138, 139, 140, 142, 149, 153, 156, 158, 160, 161, 163, 165, 166, 168, 170, 173, 176, 178, 180, 188, 189, 192, 193, 199, 203, 208, 219, 225, 226, 227, 230, 232, 236, 237, 252, 253, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 280, 281, 286, 292, 293, 307, 312, 315, 329, 330, 349, 355, 359, 379, 385, 403, 409, 410, 428, 429, 432, 438, 458, 461, 470, 471, 472, 477, 483, 502, 503, 504, 512, 517, 518, 519, 520, 521, 524, 528, 533, 534, 536, 547, 549, 550, 551, 553, 554, 564, 576, 595, 600, 605, 639, 642, 643, 644, 647, 650, 652, 653, 654, 655, 656, 663, 666, 677, 678, 679, 680, 681, 685, 686, 690, 691, 692, 693, 694, 696, 698, 699, 700, 701, 738, 743, 755, 759, 762, 769, 770, 772, 774, 777, 778, 781, 788, 790, 792, 793, 794, 798, 800, 801, 826, 830, 836, 846, 847, 852, 853, 856, 871], "base": [5, 7, 9, 11, 16, 21, 22, 27, 28, 33, 34, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 53, 54, 57, 58, 60, 66, 68, 75, 80, 82, 87, 89, 91, 93, 96, 97, 100, 104, 106, 107, 109, 110, 111, 114, 116, 118, 129, 132, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 156, 158, 159, 160, 163, 164, 167, 168, 170, 174, 175, 176, 177, 178, 179, 180, 187, 189, 193, 196, 197, 199, 200, 201, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 218, 219, 220, 222, 223, 224, 225, 226, 227, 230, 232, 235, 236, 237, 240, 249, 254, 255, 257, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 307, 309, 313, 314, 319, 324, 327, 336, 337, 338, 339, 342, 348, 349, 350, 351, 354, 355, 359, 369, 397, 405, 406, 409, 411, 413, 414, 416, 417, 420, 424, 426, 429, 432, 434, 436, 438, 439, 441, 442, 444, 447, 454, 460, 462, 470, 471, 472, 477, 488, 503, 509, 510, 513, 515, 518, 532, 547, 549, 550, 552, 553, 557, 558, 559, 560, 561, 564, 566, 567, 569, 570, 578, 591, 592, 593, 605, 610, 612, 629, 638, 642, 643, 650, 663, 666, 675, 676, 677, 678, 679, 680, 681, 685, 686, 690, 692, 693, 694, 696, 699, 708, 709, 710, 719, 721, 722, 724, 734, 738, 747, 749, 755, 757, 762, 767, 768, 770, 776, 777, 778, 779, 783, 784, 785, 790, 791, 793, 795, 796, 798, 800, 801, 802, 818, 826, 828, 829, 830, 831, 833, 834, 839, 842, 846, 847, 850, 856, 859, 862, 866, 871], "lpa": [5, 132, 134, 154, 158, 301, 307, 320, 331, 340, 360, 362, 422, 478, 826, 847, 871], "nasion": [5, 154, 155, 158, 168, 301, 307, 320, 330, 331, 340, 360, 362, 422, 643, 826, 847, 853, 856, 871], "rpa": [5, 132, 134, 154, 158, 301, 307, 320, 331, 340, 360, 362, 422, 478, 826, 847, 871], "fine": [5, 179, 186, 207, 237, 265, 424, 560, 561, 569, 578, 589, 594, 871], "analys": [5, 11, 27, 31, 40, 67, 95, 99, 113, 133, 134, 141, 144, 148, 149, 156, 158, 193, 197, 203, 204, 211, 223, 237, 240, 262, 263, 470, 471, 472, 601, 674, 675, 762, 774, 837, 847, 853, 859, 871], "read_bem_solut": [5, 44, 106, 157, 508, 813, 861], "tran": [5, 7, 26, 40, 49, 50, 51, 66, 78, 106, 112, 113, 115, 121, 122, 132, 133, 134, 148, 155, 156, 157, 158, 170, 174, 176, 179, 180, 181, 188, 189, 205, 208, 252, 258, 270, 273, 295, 299, 307, 360, 361, 380, 383, 422, 424, 446, 454, 462, 463, 509, 512, 513, 557, 575, 578, 623, 655, 658, 685, 725, 726, 738, 754, 766, 825, 826, 846, 847, 853, 871], "solut": [5, 7, 11, 22, 23, 26, 27, 31, 32, 33, 35, 37, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 66, 68, 69, 87, 89, 90, 91, 92, 102, 103, 104, 105, 106, 107, 121, 128, 154, 155, 157, 160, 163, 164, 168, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 189, 193, 197, 204, 218, 219, 230, 232, 240, 255, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 280, 281, 282, 292, 293, 294, 304, 355, 359, 365, 437, 447, 448, 466, 467, 468, 469, 470, 471, 472, 504, 508, 512, 513, 514, 516, 517, 518, 519, 520, 521, 524, 525, 528, 531, 532, 542, 543, 547, 548, 550, 590, 597, 599, 605, 608, 610, 612, 613, 620, 635, 638, 639, 641, 642, 643, 654, 655, 738, 754, 765, 766, 781, 783, 785, 796, 797, 801, 813, 818, 826, 828, 830, 831, 837, 842, 856, 861, 871], "must": [5, 18, 42, 43, 46, 59, 80, 124, 125, 133, 142, 144, 154, 165, 167, 169, 170, 179, 182, 186, 188, 196, 197, 202, 204, 207, 213, 217, 222, 224, 226, 227, 230, 232, 237, 252, 253, 255, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 282, 287, 292, 293, 309, 310, 313, 316, 320, 324, 336, 338, 342, 349, 353, 354, 355, 360, 363, 364, 365, 379, 385, 388, 402, 403, 409, 410, 411, 415, 418, 419, 420, 422, 427, 432, 435, 437, 444, 446, 447, 463, 466, 468, 469, 470, 471, 472, 479, 486, 491, 492, 502, 505, 510, 511, 512, 526, 527, 528, 549, 550, 552, 561, 563, 564, 565, 566, 569, 575, 578, 601, 632, 635, 639, 640, 651, 655, 656, 658, 660, 661, 664, 672, 675, 676, 677, 678, 680, 681, 685, 690, 692, 693, 694, 704, 708, 710, 714, 721, 738, 741, 743, 754, 755, 757, 761, 762, 766, 768, 769, 770, 772, 774, 776, 777, 778, 779, 785, 786, 790, 791, 792, 793, 794, 796, 799, 800, 801, 802, 834, 846, 847, 850, 852, 853, 856], "temporari": [5, 149, 170, 252, 265, 633, 746], "definit": [5, 26, 40, 44, 49, 106, 132, 156, 157, 158, 159, 160, 174, 179, 180, 181, 182, 183, 199, 205, 224, 240, 252, 265, 270, 292, 293, 315, 317, 324, 446, 471, 578, 624, 732, 738, 826, 846, 852, 854, 871], "use_coil_def": [5, 106, 861], "make_forward_solut": [5, 7, 26, 40, 49, 106, 156, 157, 180, 189, 205, 264, 610, 732, 846, 853, 861, 871], "src": [5, 7, 22, 24, 26, 28, 30, 31, 34, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 51, 53, 54, 58, 59, 66, 87, 89, 90, 91, 92, 106, 133, 134, 154, 156, 157, 158, 176, 178, 179, 180, 189, 205, 218, 230, 231, 232, 252, 264, 266, 267, 268, 271, 273, 274, 275, 276, 278, 293, 355, 437, 457, 467, 504, 505, 513, 526, 527, 530, 532, 537, 620, 630, 638, 639, 640, 647, 650, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 664, 665, 685, 686, 738, 754, 756, 796, 797, 801, 802, 823, 846, 856, 871], "mindist": [5, 24, 40, 44, 49, 154, 156, 157, 174, 179, 181, 182, 183, 205, 513, 639, 655], "read_forward_solut": [5, 22, 31, 32, 33, 34, 39, 41, 42, 45, 46, 47, 48, 50, 53, 54, 57, 58, 66, 87, 89, 90, 91, 92, 128, 156, 175, 176, 177, 178, 189, 193, 218, 219, 264, 818, 861, 871], "orient": [5, 11, 22, 26, 28, 29, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 66, 77, 87, 89, 90, 91, 92, 101, 104, 105, 106, 107, 113, 121, 128, 132, 154, 156, 157, 158, 163, 164, 170, 173, 174, 175, 178, 179, 180, 181, 184, 185, 186, 189, 193, 205, 207, 218, 219, 222, 230, 232, 240, 257, 258, 259, 262, 264, 265, 267, 268, 271, 274, 275, 276, 280, 281, 292, 293, 294, 359, 423, 437, 446, 447, 448, 462, 466, 468, 469, 490, 512, 513, 516, 517, 518, 519, 520, 521, 523, 524, 526, 527, 528, 529, 532, 533, 534, 589, 599, 600, 603, 607, 608, 610, 623, 638, 642, 654, 655, 738, 747, 754, 756, 757, 766, 806, 818, 846, 855, 856, 859, 871], "later": [5, 11, 19, 37, 42, 46, 67, 98, 106, 124, 132, 134, 138, 139, 140, 142, 147, 149, 160, 170, 173, 175, 178, 179, 187, 189, 196, 197, 198, 199, 202, 203, 204, 205, 211, 212, 213, 214, 217, 230, 231, 237, 240, 255, 260, 261, 262, 263, 268, 270, 272, 274, 277, 355, 445, 470, 471, 472, 550, 602, 604, 690, 692, 693, 694, 738, 801, 830, 835, 836, 847, 848, 853, 856, 871], "convert_forward_solut": [5, 22, 46, 47, 48, 53, 54, 66, 156, 176, 218, 513, 610, 818, 853, 861, 871], "force_fix": [5, 46, 47, 48, 53, 54, 66, 156, 218, 359, 528, 871], "plot_align": [5, 24, 51, 78, 106, 112, 115, 120, 121, 122, 133, 134, 154, 155, 156, 157, 168, 176, 180, 181, 182, 183, 255, 260, 261, 262, 263, 304, 470, 471, 472, 756, 794, 803, 808, 846, 850, 853, 861, 871], "surfac": [5, 11, 22, 24, 26, 27, 31, 33, 34, 35, 39, 41, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 57, 58, 59, 66, 69, 78, 87, 89, 91, 106, 112, 113, 115, 117, 121, 122, 131, 132, 133, 134, 148, 153, 154, 155, 157, 161, 162, 163, 164, 170, 173, 174, 175, 176, 177, 178, 181, 182, 183, 186, 188, 189, 193, 196, 205, 207, 213, 218, 219, 222, 230, 231, 232, 240, 258, 262, 263, 264, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 280, 281, 292, 293, 299, 302, 303, 304, 330, 355, 359, 360, 380, 383, 402, 422, 437, 448, 453, 454, 459, 461, 462, 465, 466, 468, 469, 503, 505, 507, 508, 509, 513, 517, 518, 519, 520, 521, 524, 526, 527, 528, 533, 534, 536, 537, 559, 560, 575, 595, 598, 610, 613, 618, 619, 620, 621, 624, 627, 629, 638, 639, 653, 654, 655, 656, 659, 661, 662, 665, 667, 685, 686, 725, 738, 754, 756, 766, 773, 796, 797, 801, 811, 814, 818, 819, 824, 826, 828, 831, 834, 836, 837, 847, 850, 859, 861, 871], "pial": [5, 112, 121, 133, 134, 153, 179, 258, 273, 536, 613, 685, 738, 754, 766, 871], "set_3d_view": [5, 24, 51, 78, 106, 112, 115, 121, 122, 134, 154, 155, 156, 157, 158, 168, 176, 181, 861, 871], "azimuth": [5, 24, 78, 106, 112, 113, 115, 121, 122, 132, 133, 134, 154, 155, 156, 158, 168, 176, 179, 181, 188, 208, 219, 738, 806, 871], "elev": [5, 24, 78, 106, 112, 113, 115, 121, 122, 132, 133, 134, 154, 155, 156, 158, 168, 179, 181, 188, 196, 203, 208, 219, 738, 806, 871], "distanc": [5, 11, 22, 24, 28, 29, 31, 34, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 50, 51, 53, 54, 56, 57, 58, 59, 66, 77, 87, 89, 90, 91, 92, 101, 104, 105, 106, 107, 113, 121, 125, 128, 132, 133, 134, 141, 154, 155, 156, 157, 158, 159, 164, 168, 170, 174, 175, 176, 177, 179, 181, 188, 189, 193, 199, 206, 208, 218, 219, 230, 232, 252, 255, 257, 260, 261, 262, 263, 265, 266, 269, 270, 271, 273, 278, 299, 339, 360, 406, 407, 413, 422, 424, 446, 455, 461, 462, 470, 471, 472, 503, 513, 532, 549, 550, 554, 558, 561, 564, 569, 578, 583, 584, 630, 638, 639, 647, 650, 653, 655, 656, 658, 660, 661, 662, 664, 665, 677, 678, 680, 681, 685, 690, 692, 694, 738, 755, 758, 770, 777, 790, 793, 798, 800, 806, 826, 853, 856, 871], "focalpoint": [5, 24, 51, 106, 113, 121, 132, 154, 155, 156, 157, 158, 176, 219, 738, 806, 871], "04": [5, 19, 24, 31, 34, 40, 41, 48, 49, 55, 68, 69, 71, 81, 82, 87, 88, 90, 92, 97, 99, 100, 105, 118, 120, 121, 124, 127, 137, 139, 156, 160, 162, 169, 172, 175, 178, 181, 183, 192, 197, 198, 206, 208, 216, 222, 223, 224, 226, 227, 232, 240, 382, 424, 509, 514, 550, 578, 647, 652, 833, 853], "load": [5, 7, 11, 13, 14, 24, 26, 28, 29, 30, 32, 36, 37, 38, 40, 41, 42, 43, 44, 45, 48, 49, 66, 69, 73, 77, 78, 79, 89, 90, 91, 93, 94, 96, 97, 98, 100, 101, 104, 106, 107, 109, 110, 114, 116, 117, 118, 120, 122, 124, 125, 132, 133, 140, 141, 143, 148, 149, 150, 154, 156, 158, 159, 160, 163, 165, 166, 167, 168, 169, 170, 174, 175, 178, 179, 180, 181, 182, 186, 187, 189, 190, 193, 196, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 212, 213, 214, 215, 222, 223, 224, 225, 226, 230, 231, 232, 235, 237, 252, 255, 256, 260, 261, 262, 263, 270, 308, 313, 317, 324, 354, 369, 453, 454, 470, 471, 472, 478, 490, 491, 497, 509, 512, 513, 528, 539, 550, 552, 562, 591, 601, 603, 607, 608, 610, 612, 618, 619, 621, 655, 688, 712, 713, 754, 768, 772, 776, 778, 785, 791, 818, 826, 847, 848, 856, 871], "three": [5, 31, 44, 91, 100, 106, 117, 140, 143, 149, 154, 156, 157, 159, 166, 176, 180, 186, 187, 196, 197, 202, 203, 204, 211, 213, 214, 217, 222, 235, 237, 252, 254, 255, 257, 258, 260, 261, 262, 263, 268, 269, 274, 276, 292, 293, 302, 303, 304, 319, 461, 466, 470, 471, 472, 507, 526, 527, 549, 560, 564, 589, 621, 624, 639, 642, 671, 673, 690, 692, 694, 728, 738, 755, 766, 768, 770, 777, 779, 789, 790, 791, 793, 798, 800, 819, 824, 830, 847, 850, 853, 856, 871], "layer": [5, 44, 106, 156, 157, 180, 181, 182, 183, 197, 240, 302, 380, 507, 514, 639, 647, 652, 754, 846, 853, 871], "model": [5, 7, 11, 12, 13, 18, 22, 26, 31, 35, 40, 41, 49, 55, 71, 98, 102, 103, 106, 110, 113, 118, 133, 139, 149, 153, 154, 157, 158, 159, 160, 162, 168, 169, 170, 173, 174, 180, 181, 182, 183, 188, 189, 193, 201, 202, 219, 226, 240, 246, 255, 257, 258, 260, 262, 263, 264, 265, 268, 270, 271, 273, 274, 275, 276, 292, 293, 297, 299, 302, 304, 336, 349, 355, 359, 366, 403, 407, 409, 410, 413, 415, 420, 421, 444, 446, 462, 466, 470, 471, 476, 507, 508, 512, 513, 514, 516, 517, 518, 519, 528, 547, 549, 559, 575, 588, 597, 599, 600, 610, 616, 625, 631, 638, 639, 647, 652, 676, 703, 732, 738, 754, 756, 778, 793, 806, 813, 818, 826, 831, 834, 836, 837, 847, 850, 856, 861, 871], "colloc": [5, 26, 40, 44, 49, 106, 156, 157, 174, 180, 508, 871], "patch": [5, 11, 22, 28, 29, 31, 33, 34, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 50, 51, 53, 54, 56, 57, 58, 59, 66, 87, 89, 90, 91, 92, 101, 104, 105, 106, 107, 121, 124, 128, 154, 156, 158, 164, 170, 175, 176, 177, 179, 180, 189, 193, 218, 219, 230, 232, 252, 255, 257, 260, 261, 262, 263, 268, 269, 273, 274, 276, 278, 280, 281, 359, 403, 410, 470, 471, 472, 517, 518, 519, 520, 521, 524, 528, 533, 534, 549, 550, 564, 598, 620, 638, 654, 655, 690, 692, 694, 755, 770, 777, 781, 790, 793, 798, 800, 856, 871], "statist": [5, 10, 11, 22, 28, 29, 31, 34, 37, 38, 39, 41, 42, 46, 47, 48, 50, 51, 53, 54, 56, 57, 58, 59, 66, 84, 85, 87, 89, 90, 91, 92, 93, 94, 98, 100, 101, 104, 105, 107, 110, 121, 128, 147, 149, 153, 154, 156, 158, 160, 164, 170, 175, 176, 177, 179, 180, 189, 193, 199, 202, 203, 218, 219, 229, 240, 252, 255, 260, 261, 262, 263, 265, 267, 268, 271, 274, 275, 276, 280, 281, 292, 293, 313, 317, 319, 324, 348, 349, 355, 359, 444, 470, 471, 472, 517, 518, 519, 520, 521, 524, 528, 533, 534, 547, 550, 598, 601, 605, 620, 625, 650, 654, 655, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 690, 692, 693, 694, 721, 770, 774, 777, 798, 826, 837, 848, 850, 861, 871], "3523": [5, 22, 31, 32, 33, 34, 39, 41, 42, 45, 46, 47, 48, 50, 53, 54, 57, 58, 66, 87, 89, 90, 91, 92, 128, 170, 175, 176, 177, 178, 189, 193, 218, 219], "8196": [5, 180, 189], "free": [5, 22, 26, 31, 32, 33, 34, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 53, 54, 57, 58, 66, 78, 87, 89, 90, 91, 92, 106, 128, 138, 149, 156, 157, 164, 170, 174, 175, 176, 178, 180, 189, 193, 205, 207, 218, 219, 223, 227, 240, 255, 258, 260, 261, 264, 292, 293, 294, 368, 446, 447, 448, 466, 468, 469, 517, 518, 519, 520, 521, 524, 528, 532, 533, 534, 559, 610, 631, 635, 677, 678, 680, 681, 818, 830, 834, 836, 837, 846, 852, 853, 859, 871], "frame": [5, 11, 22, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 56, 57, 58, 59, 66, 77, 87, 89, 90, 91, 92, 101, 104, 105, 107, 109, 121, 128, 132, 133, 134, 138, 149, 157, 161, 162, 163, 164, 168, 170, 175, 176, 177, 178, 179, 180, 181, 182, 188, 189, 193, 207, 218, 219, 230, 232, 252, 255, 258, 260, 261, 262, 263, 264, 265, 273, 297, 298, 307, 311, 320, 325, 362, 383, 422, 462, 465, 470, 471, 472, 475, 482, 500, 502, 509, 514, 561, 569, 578, 620, 621, 623, 637, 639, 714, 726, 733, 735, 738, 754, 766, 806, 826, 847, 852, 853, 856, 871], "normal": [5, 11, 15, 16, 18, 22, 24, 26, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 53, 54, 57, 58, 59, 66, 68, 87, 89, 91, 101, 104, 105, 106, 107, 110, 111, 112, 113, 134, 135, 140, 141, 153, 154, 155, 156, 158, 159, 167, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 188, 189, 193, 203, 204, 207, 217, 218, 219, 230, 232, 236, 237, 240, 251, 253, 255, 257, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 273, 274, 275, 276, 280, 281, 292, 293, 308, 316, 353, 359, 403, 405, 408, 437, 446, 466, 468, 469, 470, 471, 472, 490, 517, 518, 519, 520, 521, 523, 524, 526, 527, 528, 533, 534, 549, 550, 560, 575, 603, 607, 639, 643, 654, 655, 672, 690, 692, 694, 707, 709, 739, 755, 770, 777, 789, 790, 793, 798, 800, 826, 830, 836, 852, 856, 871], "emploi": [5, 11, 22, 26, 33, 34, 39, 40, 41, 44, 45, 46, 47, 48, 49, 53, 54, 57, 58, 66, 87, 89, 91, 106, 156, 157, 174, 175, 176, 177, 180, 186, 187, 189, 193, 219, 237, 549, 671, 846, 847, 852, 853, 856], "rotat": [5, 10, 15, 19, 22, 33, 34, 39, 40, 41, 43, 45, 46, 47, 48, 53, 54, 57, 58, 66, 77, 87, 89, 91, 106, 132, 154, 156, 170, 175, 176, 177, 178, 180, 189, 192, 193, 199, 201, 219, 252, 262, 263, 265, 292, 293, 345, 360, 363, 424, 462, 554, 560, 578, 728, 729, 731, 738, 754, 773, 828, 836, 853, 871], "convert": [5, 22, 27, 33, 34, 39, 40, 41, 45, 46, 47, 48, 53, 54, 57, 58, 66, 73, 87, 89, 91, 106, 109, 119, 127, 132, 134, 135, 138, 139, 140, 141, 142, 147, 148, 149, 154, 156, 158, 159, 167, 169, 175, 176, 177, 180, 186, 187, 188, 189, 193, 198, 199, 203, 211, 213, 218, 219, 223, 227, 230, 231, 232, 236, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 271, 274, 275, 276, 279, 286, 298, 307, 308, 333, 345, 359, 361, 405, 409, 414, 415, 418, 432, 439, 441, 442, 459, 464, 465, 467, 470, 471, 472, 482, 491, 494, 505, 512, 580, 581, 690, 692, 693, 694, 729, 731, 737, 739, 742, 754, 806, 808, 830, 831, 834, 837, 847, 853, 871], "helmet": [5, 7, 27, 44, 77, 78, 106, 113, 119, 120, 127, 135, 148, 154, 156, 168, 170, 181, 182, 183, 186, 262, 263, 265, 454, 509, 516, 531, 608, 738, 747, 754, 773, 806, 853, 871], "unknown": [5, 45, 69, 71, 74, 80, 87, 90, 106, 124, 134, 139, 144, 149, 165, 166, 167, 179, 196, 197, 198, 200, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 217, 219, 265, 320, 325, 466, 470, 471, 472, 479, 486, 500, 502, 726, 791, 812, 821, 853, 856, 871], "deriv": [5, 32, 33, 45, 69, 106, 120, 123, 138, 142, 147, 154, 166, 197, 222, 223, 235, 240, 265, 360, 550, 585, 610, 818, 853, 856, 871], "subset": [5, 44, 109, 134, 138, 140, 142, 144, 149, 156, 158, 170, 173, 204, 205, 213, 222, 235, 255, 260, 261, 262, 263, 266, 270, 280, 281, 292, 293, 349, 353, 354, 363, 364, 365, 396, 403, 406, 410, 413, 427, 441, 446, 447, 460, 466, 468, 469, 470, 471, 472, 528, 550, 663, 666, 690, 691, 692, 693, 694, 738, 768, 778, 791, 852, 853, 859, 871], "dip_opm": 5, "_": [5, 8, 9, 19, 36, 37, 44, 49, 59, 109, 132, 135, 144, 149, 158, 159, 170, 176, 178, 189, 192, 199, 202, 204, 211, 218, 222, 223, 226, 227, 236, 237, 298, 550, 561, 593, 830, 853, 871], "fit_dipol": [5, 44, 81, 174, 179, 181, 182, 183, 258, 259, 295, 600, 853, 861, 871], "040": [5, 78, 110, 118, 138, 147, 160, 167, 206, 219, 240, 262, 263, 349, 850], "080": [5, 37, 78, 183, 206, 223], "idx": [5, 31, 34, 39, 46, 58, 62, 81, 111, 130, 148, 179, 189, 196, 200, 204, 218, 230, 254, 255, 258, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 306, 470, 471, 472, 526, 527, 693, 766, 871], "argmax": [5, 34, 37, 39, 47, 49, 57, 58, 116, 174, 179, 192], "gof": [5, 39, 113, 167, 174, 176, 181, 182, 183, 255, 258, 260, 261, 262, 263, 295, 306, 337, 339, 340, 341, 470, 471, 472, 547, 690, 692, 693, 694, 766, 871], "1f": [5, 30, 39, 46, 74, 97, 106, 111, 154, 174, 181, 182, 189, 193, 199, 218, 222, 255, 257, 260, 261, 262, 263, 269, 403, 410, 470, 471, 472, 692, 694, 770, 777, 790], "1000": [5, 39, 47, 68, 78, 81, 93, 110, 111, 125, 132, 144, 154, 155, 157, 158, 174, 179, 180, 181, 182, 189, 199, 200, 204, 211, 217, 223, 227, 230, 231, 232, 432, 438, 440, 444, 470, 471, 472, 550, 612, 677, 678, 680, 681, 738, 826, 871], "n20m": 5, "plot_loc": [5, 174, 179, 258, 871], "orthoview": [5, 34, 39, 58, 132, 158, 174, 258, 766, 871], "conductormodel": [5, 44, 106, 156, 181, 182, 183, 255, 257, 260, 261, 262, 263, 269, 299, 307, 403, 410, 446, 470, 471, 472, 507, 508, 514, 549, 550, 564, 597, 639, 690, 692, 694, 754, 755, 762, 770, 772, 774, 777, 778, 781, 788, 790, 792, 793, 794, 798, 800, 813, 826, 861], "solver": [5, 10, 11, 13, 15, 18, 27, 35, 39, 44, 45, 55, 58, 173, 193, 257, 258, 262, 264, 265, 271, 446, 447, 468, 508, 532, 599, 608, 610, 676, 797, 834, 839, 859, 871], "instanc": [5, 15, 26, 31, 42, 43, 44, 49, 72, 80, 85, 106, 111, 156, 157, 164, 167, 169, 170, 174, 176, 180, 181, 183, 186, 187, 189, 201, 202, 203, 205, 207, 211, 235, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 307, 308, 309, 311, 312, 314, 320, 323, 325, 326, 328, 329, 330, 331, 332, 333, 336, 338, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 363, 364, 365, 367, 371, 372, 373, 375, 376, 377, 379, 384, 388, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 424, 425, 426, 427, 428, 432, 433, 434, 435, 436, 437, 438, 444, 446, 447, 448, 449, 450, 457, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 503, 505, 506, 508, 509, 510, 511, 512, 513, 514, 517, 518, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 537, 539, 542, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 590, 591, 592, 593, 595, 596, 597, 600, 601, 602, 603, 604, 607, 610, 612, 619, 622, 631, 632, 635, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 664, 665, 675, 676, 677, 678, 679, 680, 681, 682, 685, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 703, 706, 709, 710, 711, 712, 727, 728, 730, 735, 738, 739, 740, 741, 747, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 804, 808, 811, 813, 817, 821, 823, 830, 848, 871], "36": [5, 13, 19, 21, 28, 33, 34, 41, 44, 46, 55, 78, 80, 100, 105, 109, 111, 113, 127, 142, 167, 169, 175, 177, 179, 185, 193, 206, 222, 223, 224, 226, 227, 230, 231, 232, 237, 240, 255, 260, 261, 262, 263, 396, 470, 471, 472, 587, 689, 871], "rad": [5, 44, 174, 179, 181, 182, 183, 639, 826], "77": [5, 11, 19, 34, 78, 79, 105, 106, 109, 111, 154, 155, 166, 167, 179, 189, 192, 193, 204, 205, 206, 213, 222, 223, 226, 227, 235, 330, 871], "guess": [5, 44, 120, 174, 179, 181, 182, 183, 202, 206, 252, 462, 482, 751, 871], "grid": [5, 24, 39, 40, 44, 49, 110, 112, 120, 124, 133, 153, 154, 156, 174, 176, 178, 179, 181, 182, 183, 192, 193, 205, 206, 222, 224, 252, 270, 272, 273, 322, 468, 550, 575, 639, 691, 764, 781, 784, 846, 847, 853, 871], "n_sampl": [5, 44, 52, 63, 94, 135, 181, 182, 183, 193, 217, 222, 403, 404, 405, 406, 407, 408, 410, 411, 413, 414, 415, 416, 417, 418, 420, 445, 551, 576, 640, 669, 676, 679, 830], "10250": 5, "65975931e": 5, "41596252e": 5, "50067005e": 5, "18042429e": 5, "93613735e": 5, "88258373e": 5, "73325418e": 5, "23906800e": 5, "47917983e": 5, "14619592e": 5, "36697422e": 5, "53163548e": 5, "08794660e": 5, "00286749e": 5, "18143308e": 5, "22829671e": 5, "93976860e": 5, "28130683e": 5, "86574659e": 5, "28436459e": 5, "91104392e": 5, "54318851e": 5, "60478446e": 5, "18114621e": 5, "42024459e": 5, "20931076e": 5, "52605668e": 5, "29661483e": 5, "53868159e": 5, "40025250e": 5, "28102479e": 5, "49204692e": 5, "41942628e": 5, "29095862e": 5, "00102289e": 5, "19639173e": 5, "09222979e": 5, "25564394e": 5, "49616938e": 5, "35015052e": 5, "94284541e": 5, "29140004e": 5, "85113742e": 5, "46141046e": 5, "97190359e": 5, "ra": [5, 24, 26, 40, 42, 44, 49, 106, 132, 133, 154, 156, 157, 159, 174, 178, 179, 181, 182, 183, 205, 258, 267, 268, 271, 273, 274, 275, 276, 307, 320, 360, 437, 465, 502, 610, 726, 730, 738, 811, 818, 826, 847, 853, 871], "000000": [5, 24, 26, 40, 44, 49, 106, 141, 142, 154, 156, 157, 174, 178, 179, 180, 181, 182, 183, 205, 225, 227, 231, 232, 237], "999800": [5, 106], "015800": [5, 106], "009200": [5, 106], "018100": [5, 106], "930500": [5, 106], "365900": [5, 106], "002800": [5, 106], "366000": [5, 106], "930600": [5, 106], "40": [5, 9, 10, 12, 13, 19, 21, 28, 32, 34, 39, 44, 45, 46, 57, 58, 66, 71, 73, 77, 78, 81, 87, 97, 100, 101, 105, 106, 109, 111, 118, 121, 132, 134, 138, 139, 142, 143, 149, 153, 154, 156, 158, 164, 167, 169, 179, 181, 182, 189, 193, 198, 199, 201, 202, 206, 207, 208, 211, 222, 223, 224, 226, 227, 230, 231, 232, 236, 240, 255, 260, 261, 270, 424, 438, 470, 471, 472, 480, 550, 562, 569, 570, 573, 642, 742, 768, 786, 791, 805, 847, 853, 871], "105": [5, 24, 26, 34, 40, 44, 49, 91, 106, 111, 135, 154, 156, 167, 174, 179, 181, 182, 183, 193, 203, 205, 206, 226, 856], "decompos": [5, 8, 44, 174, 179, 181, 182, 183, 202, 403, 407, 410, 550, 551, 721, 853, 871], "eigenvalu": [5, 21, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 56, 57, 58, 59, 87, 90, 91, 101, 104, 105, 106, 107, 118, 150, 160, 164, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 189, 193, 218, 219, 230, 232, 257, 403, 702, 853, 856], "without": [5, 31, 32, 33, 34, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 53, 54, 57, 58, 68, 73, 87, 90, 91, 101, 104, 106, 110, 117, 118, 124, 132, 142, 147, 148, 149, 150, 157, 159, 160, 163, 168, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 189, 193, 197, 198, 199, 201, 202, 203, 204, 205, 207, 213, 218, 219, 222, 237, 252, 255, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 287, 290, 292, 293, 320, 321, 349, 353, 354, 363, 364, 365, 366, 403, 410, 433, 434, 435, 436, 444, 446, 447, 466, 468, 469, 470, 471, 472, 479, 486, 490, 491, 510, 519, 521, 524, 528, 543, 569, 585, 601, 603, 607, 608, 625, 684, 691, 728, 738, 778, 796, 801, 808, 828, 830, 834, 838, 846, 848, 850, 852, 853, 871], "whiten": [5, 7, 14, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 49, 50, 53, 54, 56, 57, 58, 59, 87, 90, 91, 101, 102, 103, 104, 105, 106, 107, 110, 119, 127, 147, 151, 152, 160, 163, 164, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 189, 193, 202, 218, 219, 230, 232, 240, 252, 255, 257, 260, 261, 262, 263, 265, 270, 292, 293, 349, 353, 354, 363, 364, 365, 403, 410, 444, 446, 447, 466, 468, 469, 470, 471, 472, 525, 528, 547, 550, 551, 576, 605, 616, 703, 768, 772, 776, 778, 791, 795, 826, 850, 871], "omit": [5, 12, 21, 24, 26, 28, 29, 30, 33, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 49, 53, 54, 56, 57, 58, 59, 76, 78, 84, 87, 90, 91, 101, 104, 105, 106, 107, 116, 118, 121, 148, 150, 154, 156, 160, 164, 166, 167, 169, 170, 174, 175, 176, 177, 179, 180, 181, 182, 183, 189, 193, 197, 205, 207, 218, 219, 230, 232, 254, 255, 260, 261, 262, 263, 270, 409, 470, 471, 472, 505, 550, 570, 571, 579, 596, 608, 647, 652, 694, 709, 710, 728, 754, 756, 772, 777, 783, 792, 830, 856, 871], "inner": [5, 26, 31, 40, 42, 44, 49, 106, 126, 153, 156, 158, 159, 174, 179, 180, 189, 240, 252, 255, 260, 261, 264, 299, 302, 446, 462, 513, 578, 639, 655, 738, 826, 831, 834, 837, 846, 847, 850, 853, 856, 871], "skull": [5, 26, 40, 42, 44, 49, 106, 110, 132, 153, 154, 156, 158, 159, 168, 174, 179, 180, 189, 240, 252, 264, 273, 299, 302, 446, 513, 514, 575, 639, 647, 652, 655, 738, 754, 826, 831, 834, 837, 846, 847, 850, 853, 856, 871], "cm": [5, 9, 15, 24, 40, 44, 49, 87, 113, 120, 140, 143, 154, 156, 164, 168, 174, 179, 181, 182, 183, 187, 198, 204, 205, 206, 207, 208, 224, 236, 252, 255, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 330, 332, 334, 470, 471, 472, 479, 506, 569, 769, 772, 774, 799, 826, 871], "35": [5, 11, 12, 13, 19, 21, 28, 33, 34, 44, 46, 78, 100, 103, 105, 106, 109, 111, 134, 141, 143, 144, 147, 156, 158, 167, 169, 182, 183, 193, 203, 204, 206, 208, 210, 222, 223, 224, 225, 226, 227, 230, 231, 232, 236, 240, 252, 468, 517, 562, 563, 570, 573, 742, 853], "insid": [5, 16, 24, 26, 40, 44, 49, 106, 138, 147, 154, 156, 157, 159, 174, 179, 180, 181, 182, 183, 200, 205, 207, 211, 226, 232, 266, 270, 271, 274, 275, 276, 333, 387, 427, 455, 462, 470, 471, 472, 499, 521, 738, 791, 811, 830, 846, 850, 853, 871], "sphere": [5, 24, 26, 34, 40, 42, 44, 47, 49, 58, 69, 81, 90, 91, 106, 117, 120, 122, 133, 154, 156, 157, 158, 174, 176, 179, 180, 181, 182, 183, 187, 197, 205, 206, 207, 240, 252, 255, 257, 258, 260, 261, 262, 263, 266, 269, 271, 292, 293, 297, 300, 301, 307, 355, 402, 403, 410, 446, 470, 471, 472, 483, 509, 512, 513, 514, 549, 550, 559, 564, 639, 653, 656, 690, 692, 694, 738, 754, 755, 762, 766, 770, 772, 774, 777, 778, 781, 788, 790, 792, 793, 794, 797, 798, 800, 808, 826, 871], "102": [5, 11, 13, 14, 15, 16, 18, 22, 26, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 63, 66, 67, 69, 70, 71, 74, 76, 77, 80, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 100, 101, 104, 105, 106, 107, 108, 111, 113, 114, 115, 116, 117, 118, 120, 121, 124, 126, 128, 129, 130, 138, 139, 140, 144, 147, 148, 149, 150, 154, 155, 156, 158, 160, 164, 165, 166, 167, 168, 170, 174, 175, 176, 177, 178, 179, 180, 181, 193, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 211, 212, 213, 214, 218, 219, 222, 224, 225, 226, 227, 230, 232, 252, 856], "extent": [5, 13, 16, 24, 40, 44, 46, 49, 54, 68, 87, 92, 104, 138, 154, 156, 174, 179, 181, 182, 183, 193, 204, 205, 224, 225, 226, 227, 230, 231, 232, 240, 255, 260, 261, 426, 461, 503, 532, 650, 680, 681, 852, 853, 871], "73": [5, 13, 15, 19, 21, 32, 33, 34, 39, 44, 77, 78, 93, 104, 105, 109, 111, 118, 125, 143, 147, 167, 174, 180, 192, 193, 206, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 240, 255, 260, 261, 262, 263, 470, 471, 472, 692, 694, 708], "y": [5, 9, 10, 11, 12, 13, 16, 18, 19, 24, 40, 44, 46, 49, 68, 69, 77, 79, 87, 109, 111, 112, 117, 134, 143, 149, 154, 156, 158, 159, 168, 170, 173, 174, 178, 179, 181, 182, 183, 192, 193, 196, 199, 200, 203, 205, 211, 212, 213, 214, 222, 232, 237, 254, 255, 257, 258, 260, 261, 262, 263, 265, 268, 269, 274, 276, 284, 297, 300, 301, 307, 308, 330, 339, 340, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 422, 443, 470, 471, 472, 483, 516, 517, 549, 550, 551, 559, 564, 610, 643, 676, 690, 692, 694, 726, 728, 729, 731, 738, 739, 742, 755, 762, 766, 769, 770, 771, 772, 774, 776, 777, 778, 779, 780, 781, 786, 788, 790, 792, 793, 794, 798, 799, 800, 806, 818, 826, 828, 853, 871], "42": [5, 8, 9, 11, 13, 14, 15, 16, 18, 19, 28, 29, 34, 41, 44, 46, 48, 49, 66, 67, 69, 70, 71, 74, 77, 78, 80, 85, 87, 89, 90, 93, 94, 96, 97, 100, 101, 104, 105, 106, 107, 108, 109, 111, 114, 115, 118, 120, 124, 129, 130, 132, 133, 135, 137, 139, 144, 149, 150, 154, 160, 164, 165, 166, 167, 170, 173, 174, 175, 178, 179, 180, 182, 192, 193, 196, 199, 200, 201, 202, 203, 204, 205, 206, 211, 214, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 240, 265, 517, 532, 650], "108": [5, 16, 34, 78, 79, 110, 111, 118, 132, 160, 167, 189, 206, 222, 227, 240, 262, 263, 349, 778, 850], "80": [5, 9, 13, 16, 19, 30, 31, 32, 34, 37, 38, 39, 40, 43, 44, 47, 49, 50, 53, 54, 56, 57, 58, 59, 68, 76, 77, 78, 83, 84, 87, 91, 101, 105, 109, 111, 112, 113, 115, 116, 117, 122, 124, 135, 147, 149, 154, 156, 166, 167, 169, 170, 174, 176, 177, 179, 181, 182, 183, 189, 193, 204, 206, 207, 208, 222, 223, 224, 226, 227, 231, 232, 240, 402, 550, 642, 779, 786, 836, 871], "1080": [5, 10, 192, 240, 409], "543": [5, 39, 206, 227], "after": [5, 8, 11, 16, 22, 24, 26, 31, 32, 33, 34, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 53, 54, 57, 58, 60, 66, 78, 85, 87, 89, 91, 98, 100, 106, 124, 128, 132, 134, 135, 138, 139, 140, 142, 143, 144, 147, 148, 149, 153, 154, 156, 159, 164, 165, 166, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 189, 193, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 211, 213, 218, 219, 222, 224, 225, 230, 235, 237, 252, 253, 254, 255, 260, 261, 262, 263, 265, 267, 268, 270, 271, 273, 274, 275, 276, 283, 292, 293, 336, 349, 353, 354, 356, 358, 363, 364, 365, 379, 403, 405, 409, 410, 414, 416, 417, 421, 427, 444, 445, 446, 447, 466, 468, 469, 470, 471, 472, 528, 549, 550, 553, 561, 562, 563, 566, 567, 569, 570, 571, 573, 576, 579, 608, 610, 632, 651, 690, 716, 718, 719, 721, 722, 727, 738, 754, 762, 768, 772, 774, 776, 777, 778, 781, 782, 785, 789, 791, 802, 818, 826, 830, 838, 846, 847, 850, 852, 853, 856, 859, 871], "infeas": [5, 24, 40, 44, 49, 154, 156, 174, 179, 181, 182, 183, 205], "least": [5, 40, 44, 68, 81, 111, 139, 156, 157, 174, 179, 198, 199, 200, 202, 203, 207, 222, 227, 240, 255, 260, 261, 262, 263, 270, 405, 414, 418, 420, 439, 441, 442, 460, 470, 471, 472, 550, 552, 553, 568, 569, 578, 675, 722, 738, 768, 791, 836, 846, 850, 852, 853, 871], "awai": [5, 40, 44, 132, 139, 142, 156, 157, 174, 179, 181, 186, 198, 203, 205, 360, 483, 550, 575, 643, 685, 722, 738, 811, 833, 853, 856, 871], "few": [5, 21, 26, 40, 43, 44, 49, 68, 91, 98, 106, 133, 142, 143, 147, 153, 154, 155, 156, 157, 159, 160, 165, 169, 170, 174, 179, 180, 196, 197, 198, 199, 201, 202, 204, 205, 206, 211, 214, 223, 227, 232, 235, 237, 265, 424, 560, 561, 569, 578, 830, 838, 848, 850, 853, 855, 871], "interior": [5, 26, 40, 44, 49, 106, 156, 157, 174, 179, 180, 207], "statu": [5, 26, 40, 44, 49, 106, 156, 157, 174, 179, 180, 186, 255, 260, 261, 262, 263, 265, 336, 358, 360, 470, 471, 472, 479, 486, 492, 547, 690, 692, 693, 694, 738, 826, 830, 853, 856, 871], "70": [5, 9, 12, 13, 15, 19, 21, 33, 40, 44, 45, 46, 57, 58, 78, 85, 87, 100, 101, 105, 106, 109, 111, 113, 132, 134, 138, 141, 142, 154, 156, 157, 164, 167, 168, 181, 182, 193, 199, 202, 206, 208, 222, 223, 226, 227, 230, 235, 237, 240, 255, 260, 261, 262, 263, 330, 469, 470, 471, 472, 550, 692, 694, 708, 871], "outsid": [5, 16, 24, 26, 40, 44, 49, 106, 132, 133, 138, 142, 154, 156, 157, 159, 174, 179, 180, 181, 182, 183, 197, 199, 204, 205, 207, 211, 213, 254, 255, 257, 260, 261, 262, 263, 264, 266, 267, 268, 269, 271, 274, 275, 276, 383, 403, 410, 445, 470, 471, 472, 503, 521, 549, 550, 564, 566, 690, 692, 694, 727, 735, 738, 755, 756, 770, 777, 781, 790, 793, 796, 798, 800, 801, 852, 853, 854, 856, 871], "exterior": [5, 26, 40, 44, 49, 106, 156, 157, 174, 179, 180, 207], "284": [5, 109, 167, 206, 227, 240, 403, 871], "473": [5, 111, 222, 227, 273], "qhull": [5, 26, 40, 44, 49, 106, 156, 157, 174, 179, 180, 871], "189": [5, 32, 33, 45, 96, 110, 167, 222, 226, 227, 236, 240, 853], "solid": [5, 26, 40, 44, 49, 106, 148, 156, 157, 159, 174, 179, 180, 204, 762, 789, 853], "angl": [5, 26, 40, 44, 49, 106, 115, 128, 156, 157, 159, 167, 168, 170, 174, 179, 180, 181, 252, 265, 298, 302, 576, 631, 738, 743, 806, 853, 871], "244": [5, 24, 109, 167, 206, 222, 226, 227], "complet": [5, 7, 9, 26, 32, 33, 40, 44, 49, 106, 132, 142, 148, 153, 156, 157, 159, 167, 174, 178, 179, 180, 197, 199, 202, 205, 219, 222, 240, 252, 255, 260, 261, 273, 298, 501, 550, 577, 591, 687, 734, 738, 746, 753, 830, 837, 846, 847, 848, 850, 853, 855, 856, 871], "138": [5, 24, 25, 34, 164, 167, 169, 193, 222, 226, 240, 273, 555, 871], "limit": [5, 31, 33, 39, 40, 41, 44, 49, 57, 58, 87, 91, 106, 110, 111, 124, 133, 135, 139, 140, 156, 163, 164, 166, 174, 175, 177, 179, 180, 187, 189, 193, 197, 199, 202, 207, 211, 219, 227, 237, 240, 254, 255, 256, 257, 258, 260, 261, 262, 263, 265, 266, 267, 268, 269, 271, 274, 275, 276, 278, 429, 436, 447, 468, 470, 471, 472, 490, 549, 554, 569, 578, 603, 607, 612, 618, 668, 674, 676, 690, 692, 693, 694, 753, 755, 757, 762, 769, 770, 772, 774, 776, 777, 779, 786, 790, 793, 796, 798, 800, 801, 802, 820, 828, 830, 852, 853, 854, 856, 859, 871], "214": [5, 167, 193, 195, 227], "go": [5, 43, 44, 84, 132, 133, 138, 139, 142, 148, 154, 156, 158, 159, 170, 174, 179, 181, 182, 183, 197, 199, 205, 211, 219, 237, 273, 352, 453, 470, 471, 472, 550, 639, 830, 841, 850, 851, 852, 853], "through": [5, 9, 19, 27, 36, 44, 75, 82, 110, 132, 138, 139, 140, 142, 143, 147, 153, 154, 158, 163, 164, 166, 170, 174, 178, 179, 181, 182, 183, 192, 197, 199, 202, 203, 204, 207, 211, 213, 214, 219, 230, 237, 240, 253, 255, 258, 260, 261, 262, 263, 292, 319, 367, 444, 453, 462, 470, 471, 502, 549, 550, 640, 702, 738, 760, 762, 766, 769, 771, 775, 783, 828, 830, 837, 848, 852, 853, 859, 871], "0642": [5, 167], "3779": 5, "18": [5, 9, 11, 13, 19, 28, 31, 32, 33, 34, 39, 44, 46, 49, 55, 57, 58, 63, 69, 76, 78, 79, 80, 82, 87, 90, 92, 100, 105, 106, 107, 109, 111, 124, 138, 143, 158, 165, 166, 167, 169, 174, 175, 177, 178, 179, 181, 182, 189, 193, 196, 197, 200, 203, 204, 205, 206, 207, 210, 211, 212, 213, 214, 219, 222, 223, 224, 226, 227, 230, 231, 232, 237, 239, 240, 255, 260, 261, 262, 263, 273, 275, 276, 280, 281, 288, 293, 302, 304, 349, 350, 351, 352, 353, 354, 363, 364, 365, 380, 388, 396, 409, 415, 432, 447, 450, 451, 462, 466, 468, 469, 470, 471, 472, 491, 503, 505, 511, 536, 541, 543, 550, 562, 563, 570, 638, 641, 642, 644, 655, 657, 689, 690, 693, 755, 768, 777, 779, 791, 797, 800, 802, 828, 833, 853], "7678": 5, "6600": 5, "0647": 5, "99": [5, 13, 15, 19, 26, 34, 46, 48, 67, 68, 78, 79, 87, 90, 100, 101, 105, 106, 109, 111, 117, 118, 135, 149, 150, 155, 158, 160, 167, 170, 175, 177, 178, 179, 182, 189, 192, 193, 204, 206, 213, 218, 219, 222, 223, 225, 226, 227, 240, 255, 260, 261, 270, 470, 471, 472, 768, 791, 853, 871], "leakag": [5, 27, 35, 44, 55, 271, 273, 359, 527, 529, 531, 610, 613, 722, 738, 743], "constrain": [5, 106, 164, 173, 176, 177, 178, 203, 240, 255, 260, 261, 288, 289, 290, 291, 292, 293, 355, 566, 826, 831, 837, 850, 853, 856, 871], "idea": [5, 7, 21, 27, 110, 153, 169, 173, 175, 199, 201, 202, 203, 204, 230, 232, 237, 240, 255, 260, 261, 303, 426, 849, 850, 853, 854, 859], "inverse_oper": [5, 7, 11, 28, 29, 30, 33, 37, 38, 39, 40, 41, 43, 46, 47, 53, 58, 87, 101, 104, 105, 106, 107, 170, 175, 230, 232, 270, 517, 518, 519, 520, 521, 523, 524, 529, 533, 534], "minimum_norm": [5, 7, 11, 28, 29, 30, 33, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 51, 53, 54, 56, 57, 58, 59, 87, 91, 101, 104, 105, 106, 107, 121, 164, 175, 176, 177, 179, 180, 189, 193, 203, 218, 219, 230, 232, 826, 839, 846, 853, 861, 871], "make_inverse_oper": [5, 7, 33, 39, 40, 41, 44, 47, 49, 53, 54, 57, 58, 87, 91, 106, 175, 176, 177, 180, 189, 193, 219, 531, 846, 853, 861, 871], "loos": [5, 7, 31, 33, 34, 39, 40, 41, 45, 47, 53, 54, 58, 59, 87, 91, 106, 142, 175, 177, 180, 189, 193, 219, 447, 448, 466, 468, 469, 517, 518, 519, 520, 521, 523, 524, 528, 532, 533, 534, 846, 853, 856, 871], "depth": [5, 7, 11, 22, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 49, 51, 53, 54, 56, 57, 58, 59, 87, 91, 101, 104, 105, 106, 107, 121, 164, 170, 175, 176, 177, 179, 180, 189, 193, 214, 218, 219, 230, 232, 240, 258, 292, 293, 447, 466, 468, 469, 528, 647, 652, 658, 856, 859, 871], "snr": [5, 7, 10, 11, 19, 21, 27, 28, 29, 30, 35, 37, 38, 40, 47, 53, 54, 55, 59, 85, 87, 101, 106, 164, 175, 177, 179, 182, 189, 199, 218, 219, 230, 232, 257, 262, 264, 265, 271, 338, 447, 516, 517, 525, 528, 530, 531, 599, 608, 610, 654, 738, 761, 795, 846, 853, 859, 871], "lambda2": [5, 7, 11, 28, 29, 30, 37, 38, 39, 40, 44, 46, 47, 49, 53, 54, 57, 58, 59, 69, 87, 91, 101, 105, 106, 154, 164, 175, 177, 179, 181, 182, 183, 189, 205, 218, 230, 232, 517, 518, 519, 520, 521, 523, 524, 529, 530, 533, 534, 559, 846], "stc": [5, 7, 11, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 55, 57, 58, 59, 66, 89, 90, 91, 92, 101, 105, 106, 107, 113, 124, 131, 133, 134, 156, 163, 164, 170, 174, 175, 176, 177, 178, 180, 184, 185, 193, 219, 231, 258, 262, 267, 268, 270, 271, 272, 273, 274, 275, 276, 280, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 355, 437, 446, 450, 456, 466, 467, 468, 469, 505, 512, 516, 517, 518, 519, 520, 521, 524, 526, 527, 531, 533, 608, 618, 631, 640, 654, 655, 656, 657, 682, 685, 686, 738, 796, 797, 801, 802, 826, 846, 866, 871], "apply_invers": [5, 7, 28, 30, 37, 38, 39, 40, 43, 44, 57, 58, 59, 87, 91, 164, 175, 176, 177, 179, 180, 189, 193, 203, 218, 219, 230, 232, 518, 519, 520, 521, 523, 524, 530, 533, 534, 826, 846, 853, 861, 871], "pick_ori": [5, 7, 11, 28, 29, 32, 33, 37, 38, 40, 48, 59, 87, 105, 175, 176, 178, 179, 219, 292, 293, 466, 468, 469, 517, 518, 519, 520, 521, 523, 524, 533, 534, 871], "hemi": [5, 7, 11, 26, 32, 33, 37, 40, 42, 46, 47, 48, 49, 57, 59, 91, 101, 106, 113, 124, 128, 131, 134, 153, 158, 164, 173, 175, 176, 177, 178, 179, 189, 193, 218, 219, 230, 231, 232, 266, 267, 268, 271, 274, 275, 276, 278, 461, 595, 613, 737, 738, 796, 801, 821, 871], "rh": [5, 24, 26, 33, 36, 37, 40, 42, 46, 58, 66, 87, 89, 91, 92, 104, 106, 113, 128, 134, 153, 156, 157, 158, 173, 175, 218, 219, 256, 266, 267, 268, 271, 274, 275, 276, 459, 503, 595, 613, 618, 738, 796, 801, 821, 853], "view": [5, 7, 11, 26, 28, 29, 31, 32, 34, 39, 42, 46, 49, 52, 57, 58, 67, 91, 92, 97, 101, 104, 105, 106, 110, 112, 115, 124, 133, 134, 138, 140, 148, 149, 150, 156, 157, 158, 164, 167, 168, 170, 173, 175, 178, 179, 187, 188, 189, 193, 202, 204, 213, 214, 218, 219, 227, 230, 231, 232, 240, 255, 257, 258, 260, 261, 262, 263, 265, 267, 268, 269, 271, 274, 275, 276, 284, 297, 304, 470, 471, 472, 516, 625, 726, 738, 766, 768, 791, 796, 799, 801, 806, 808, 826, 846, 850, 852, 853, 859, 871], "lat": [5, 11, 26, 57, 91, 101, 124, 134, 149, 158, 164, 193, 218, 232, 738], "initial_tim": [5, 7, 11, 40, 42, 57, 58, 59, 91, 101, 124, 131, 164, 173, 175, 176, 177, 178, 179, 180, 189, 193, 218, 267, 268, 271, 274, 275, 276, 738, 796, 801, 802], "clim": [5, 7, 10, 22, 26, 41, 42, 46, 48, 53, 54, 57, 58, 101, 106, 124, 128, 133, 134, 144, 173, 175, 177, 178, 179, 208, 218, 230, 231, 232, 262, 263, 267, 268, 271, 274, 275, 276, 738, 757, 774, 796, 801, 802, 871], "percent": [5, 26, 41, 104, 106, 109, 177, 224, 227, 267, 268, 271, 274, 275, 276, 283, 533, 534, 550, 646, 647, 648, 649, 650, 652, 690, 693, 757, 783, 796, 798, 801, 802, 871], "lim": [5, 7, 22, 26, 41, 42, 48, 53, 54, 57, 58, 101, 106, 124, 128, 133, 134, 173, 175, 177, 178, 179, 231, 232, 267, 268, 271, 274, 275, 276, 757, 796, 801, 802], "400": [5, 7, 13, 39, 43, 49, 55, 73, 78, 89, 108, 124, 128, 139, 140, 142, 144, 149, 154, 158, 169, 170, 174, 176, 179, 203, 204, 206, 208, 222, 224, 227, 462], "background": [5, 21, 42, 113, 123, 124, 132, 140, 149, 158, 163, 164, 170, 202, 204, 208, 209, 210, 211, 213, 214, 240, 255, 258, 260, 261, 262, 263, 265, 267, 268, 269, 271, 274, 275, 276, 350, 351, 352, 403, 438, 439, 441, 470, 471, 472, 491, 517, 555, 562, 563, 616, 635, 690, 692, 694, 705, 738, 741, 747, 754, 766, 772, 776, 779, 786, 791, 796, 797, 799, 801, 802, 810, 811, 822, 846, 852, 871], "w": [5, 21, 32, 38, 44, 59, 60, 71, 80, 100, 124, 129, 135, 140, 150, 154, 158, 159, 176, 180, 192, 193, 199, 208, 219, 222, 235, 240, 255, 257, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 292, 293, 304, 316, 363, 403, 410, 470, 471, 472, 517, 525, 528, 549, 550, 576, 618, 647, 652, 672, 690, 692, 693, 694, 705, 716, 717, 720, 723, 755, 770, 776, 777, 791, 793, 798, 799, 800, 853, 871], "invers": [5, 7, 11, 19, 21, 32, 33, 37, 42, 43, 44, 45, 47, 49, 50, 53, 54, 55, 57, 58, 59, 85, 87, 102, 103, 104, 105, 106, 107, 121, 147, 153, 154, 157, 158, 160, 168, 170, 173, 174, 176, 177, 178, 179, 180, 186, 189, 193, 197, 203, 205, 218, 219, 230, 232, 240, 252, 255, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 292, 293, 348, 355, 361, 362, 365, 409, 417, 421, 437, 466, 467, 468, 470, 471, 472, 504, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 528, 529, 530, 531, 532, 533, 534, 535, 547, 550, 551, 599, 605, 608, 610, 612, 613, 620, 638, 639, 704, 738, 754, 765, 766, 795, 797, 806, 826, 831, 837, 856, 859, 861, 871], "adjust": [5, 24, 31, 32, 33, 34, 39, 40, 41, 44, 45, 47, 49, 50, 53, 54, 57, 58, 87, 91, 106, 113, 117, 124, 147, 154, 156, 159, 168, 170, 175, 176, 177, 178, 180, 186, 189, 193, 205, 207, 213, 214, 219, 224, 252, 255, 257, 260, 261, 262, 263, 269, 282, 337, 339, 403, 410, 463, 470, 471, 472, 473, 482, 549, 550, 560, 571, 579, 668, 674, 679, 683, 684, 690, 692, 694, 708, 710, 751, 761, 768, 769, 770, 774, 776, 777, 781, 790, 791, 793, 798, 799, 828, 834, 846, 850, 853, 859, 871], "svd": [5, 33, 39, 40, 41, 44, 47, 49, 53, 54, 57, 58, 87, 91, 106, 175, 176, 177, 180, 189, 193, 203, 219, 257, 268, 274, 276, 336, 525, 526, 527, 763, 846, 853, 871], "lead": [5, 22, 26, 33, 39, 40, 41, 44, 47, 49, 53, 54, 57, 58, 67, 68, 85, 87, 91, 106, 142, 149, 160, 165, 175, 176, 177, 180, 189, 192, 193, 197, 199, 207, 219, 254, 255, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 349, 437, 466, 468, 469, 470, 471, 472, 517, 518, 519, 520, 521, 579, 610, 635, 677, 678, 680, 681, 690, 826, 828, 848, 853, 871], "largest": [5, 33, 39, 40, 41, 44, 47, 49, 53, 54, 57, 58, 87, 91, 106, 133, 149, 175, 176, 177, 180, 186, 189, 193, 219, 222, 403, 447, 494, 526, 527, 550], "38802": 5, "factor": [5, 28, 29, 30, 33, 37, 38, 39, 40, 41, 43, 44, 47, 49, 53, 54, 57, 58, 59, 87, 91, 101, 104, 105, 106, 107, 133, 155, 175, 176, 177, 179, 180, 189, 193, 199, 200, 207, 218, 219, 224, 225, 226, 230, 232, 236, 252, 255, 258, 259, 260, 261, 262, 263, 265, 267, 268, 270, 271, 274, 275, 276, 294, 349, 353, 360, 365, 411, 412, 415, 416, 424, 443, 470, 471, 472, 481, 520, 530, 533, 534, 560, 561, 566, 567, 569, 576, 578, 580, 627, 629, 630, 642, 643, 671, 673, 690, 693, 696, 699, 716, 718, 719, 720, 721, 722, 723, 728, 738, 751, 768, 776, 789, 791, 797, 799, 801, 826, 853, 856, 871], "trace": [5, 31, 33, 39, 40, 41, 44, 47, 49, 53, 54, 57, 58, 72, 77, 87, 90, 91, 106, 142, 147, 149, 164, 170, 175, 176, 177, 180, 189, 193, 197, 204, 206, 207, 211, 214, 219, 252, 255, 258, 260, 261, 262, 263, 267, 268, 270, 271, 274, 275, 276, 403, 470, 471, 472, 550, 735, 738, 765, 768, 772, 780, 782, 789, 791, 796, 801, 853, 871], "35945e": 5, "nchan": [5, 33, 39, 40, 41, 44, 47, 49, 51, 53, 54, 56, 57, 58, 87, 91, 106, 164, 165, 167, 175, 176, 177, 180, 189, 193, 211, 217, 219, 264, 265, 856, 871], "nzero": [5, 33, 39, 40, 41, 44, 47, 49, 53, 54, 57, 58, 87, 91, 106, 175, 176, 177, 180, 189, 193, 219], "invert": [5, 21, 28, 29, 30, 33, 37, 38, 39, 40, 41, 43, 44, 46, 47, 49, 53, 54, 56, 57, 58, 59, 87, 91, 101, 104, 105, 106, 107, 133, 154, 156, 159, 164, 175, 176, 177, 178, 179, 180, 189, 193, 199, 218, 219, 230, 232, 237, 279, 288, 291, 409, 412, 417, 466, 468, 469, 676, 714, 847, 856], "vector": [5, 15, 18, 19, 27, 33, 35, 40, 55, 106, 108, 128, 160, 173, 175, 176, 186, 192, 201, 202, 203, 204, 206, 207, 219, 240, 252, 255, 257, 258, 259, 260, 261, 262, 263, 265, 267, 268, 269, 270, 271, 274, 275, 276, 286, 292, 293, 336, 338, 342, 350, 351, 352, 355, 404, 407, 409, 414, 419, 421, 437, 441, 442, 443, 466, 468, 469, 470, 471, 472, 504, 510, 516, 517, 519, 520, 521, 526, 527, 531, 549, 550, 561, 562, 563, 565, 569, 575, 578, 587, 593, 601, 608, 616, 618, 625, 631, 690, 691, 692, 693, 694, 709, 710, 738, 770, 772, 774, 776, 777, 780, 789, 792, 796, 799, 801, 802, 822, 826, 850, 853, 856, 861, 871], "eigenlead": [5, 28, 29, 30, 33, 37, 38, 39, 40, 41, 43, 44, 46, 47, 49, 53, 54, 57, 58, 59, 87, 91, 101, 104, 105, 106, 107, 164, 175, 176, 177, 179, 180, 189, 193, 218, 219, 230, 232, 853], "residu": [5, 28, 30, 33, 34, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 49, 50, 53, 54, 57, 58, 59, 68, 73, 87, 91, 164, 175, 176, 177, 179, 180, 181, 182, 189, 193, 202, 206, 218, 219, 230, 232, 295, 446, 466, 468, 469, 517, 761, 871], "explain": [5, 18, 28, 30, 33, 34, 37, 38, 39, 40, 41, 43, 44, 46, 47, 49, 50, 53, 54, 57, 58, 59, 87, 91, 135, 157, 158, 164, 175, 176, 177, 179, 180, 181, 189, 193, 202, 218, 219, 230, 232, 269, 295, 403, 410, 466, 468, 469, 526, 527, 550, 782, 830, 834, 853, 871], "97": [5, 11, 13, 15, 19, 33, 40, 43, 46, 69, 78, 80, 100, 105, 106, 109, 111, 114, 132, 154, 158, 164, 167, 189, 192, 193, 202, 205, 206, 207, 222, 223, 226, 227, 240, 424, 514, 559, 561, 578, 671, 846, 853, 871], "varianc": [5, 8, 14, 16, 28, 30, 31, 33, 34, 37, 38, 39, 40, 41, 43, 44, 46, 47, 49, 50, 53, 54, 57, 58, 59, 68, 87, 91, 111, 164, 175, 176, 177, 178, 179, 180, 181, 189, 193, 197, 202, 218, 219, 230, 232, 240, 269, 271, 288, 289, 290, 291, 292, 293, 412, 448, 466, 468, 469, 526, 527, 528, 550, 558, 672, 683, 684, 761, 782, 783, 826, 853, 871], "control": [5, 11, 19, 22, 26, 32, 33, 37, 40, 41, 46, 47, 49, 59, 91, 106, 111, 117, 124, 131, 138, 147, 148, 154, 164, 166, 169, 170, 176, 177, 179, 180, 186, 189, 193, 198, 199, 200, 202, 203, 204, 207, 208, 213, 218, 219, 222, 230, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 298, 299, 300, 301, 302, 303, 304, 307, 311, 312, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 408, 409, 410, 411, 413, 414, 416, 419, 420, 422, 424, 428, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 446, 447, 448, 453, 454, 458, 459, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 505, 506, 507, 508, 509, 510, 512, 513, 514, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 543, 546, 550, 552, 553, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 573, 574, 575, 576, 578, 579, 581, 582, 585, 586, 587, 590, 591, 592, 593, 597, 598, 599, 600, 601, 602, 604, 605, 606, 608, 609, 610, 612, 613, 614, 615, 616, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 635, 638, 639, 641, 642, 643, 644, 654, 655, 658, 660, 661, 662, 663, 664, 665, 666, 677, 678, 679, 680, 681, 685, 686, 687, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 703, 705, 707, 708, 709, 710, 714, 717, 718, 719, 721, 722, 723, 724, 727, 728, 733, 737, 738, 746, 752, 754, 757, 763, 764, 766, 769, 770, 771, 772, 773, 778, 781, 782, 783, 784, 788, 789, 791, 792, 794, 795, 796, 797, 801, 802, 803, 804, 807, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 836, 847, 850, 852, 853, 871], "24807258e": 5, "11": [5, 9, 10, 11, 13, 16, 19, 20, 21, 28, 30, 32, 33, 34, 44, 46, 48, 55, 60, 63, 65, 68, 71, 72, 77, 78, 80, 82, 93, 97, 98, 100, 105, 106, 107, 109, 111, 117, 118, 120, 124, 134, 135, 137, 143, 155, 159, 160, 162, 164, 166, 167, 168, 169, 174, 177, 178, 179, 180, 181, 185, 189, 192, 193, 196, 199, 201, 206, 207, 208, 210, 211, 217, 218, 222, 223, 224, 226, 227, 229, 230, 231, 232, 237, 240, 251, 255, 260, 261, 270, 273, 330, 374, 424, 460, 470, 471, 472, 482, 484, 487, 488, 509, 528, 550, 576, 578, 582, 602, 647, 650, 652, 676, 690, 768, 791, 829, 836, 846, 853], "55793898e": 5, "13115753e": 5, "870": [5, 6, 78, 227, 240, 674], "854": [5, 227], "opm_data": [5, 6], "431": [6, 222, 227], "execut": [6, 20, 25, 55, 65, 82, 88, 99, 103, 127, 130, 132, 134, 137, 146, 152, 153, 162, 169, 170, 172, 185, 191, 195, 196, 210, 216, 221, 229, 234, 239, 255, 258, 260, 261, 262, 263, 266, 267, 268, 270, 271, 274, 275, 276, 278, 349, 350, 352, 354, 369, 374, 406, 413, 416, 419, 420, 446, 459, 461, 462, 463, 470, 471, 472, 509, 512, 513, 523, 524, 533, 534, 550, 555, 562, 563, 638, 641, 642, 643, 655, 677, 678, 679, 680, 681, 689, 692, 694, 695, 696, 697, 698, 699, 700, 707, 708, 709, 710, 718, 719, 720, 721, 722, 766, 768, 770, 773, 785, 791, 792, 794, 828, 829, 830, 833, 834, 853, 871], "auto_examples_dataset": 6, "616": [6, 227, 234], "853": [6, 227], "07": [6, 12, 19, 20, 34, 45, 58, 78, 81, 82, 99, 100, 131, 135, 158, 168, 174, 177, 181, 182, 183, 189, 192, 193, 206, 222, 223, 224, 227, 240, 316, 410, 650, 853], "spm_faces_dataset_sgskip": [6, 7], "pipelin": [7, 8, 9, 10, 11, 12, 13, 15, 18, 106, 132, 135, 159, 163, 164, 170, 171, 192, 193, 197, 198, 202, 403, 405, 406, 407, 409, 410, 411, 412, 413, 415, 416, 417, 456, 551, 728, 837, 847, 848, 850, 871], "reconstruct": [7, 16, 52, 132, 156, 157, 160, 161, 162, 163, 180, 184, 185, 189, 192, 196, 197, 202, 207, 232, 240, 255, 257, 258, 260, 262, 263, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 288, 289, 290, 291, 293, 298, 302, 303, 304, 307, 349, 355, 360, 361, 362, 383, 386, 411, 444, 455, 459, 461, 462, 463, 464, 465, 468, 503, 507, 509, 536, 550, 551, 560, 561, 569, 575, 578, 586, 595, 610, 613, 620, 622, 638, 639, 653, 656, 667, 685, 686, 730, 738, 749, 754, 756, 766, 772, 777, 796, 801, 802, 811, 821, 847, 850, 853, 859, 871], "scrambl": [7, 193, 847], "doe": [7, 28, 31, 54, 57, 58, 68, 69, 73, 77, 81, 109, 114, 124, 138, 139, 147, 149, 156, 158, 159, 160, 166, 176, 179, 180, 186, 187, 188, 197, 199, 200, 201, 202, 203, 205, 207, 208, 217, 219, 224, 226, 227, 230, 237, 240, 252, 253, 255, 257, 258, 259, 260, 261, 262, 263, 267, 268, 269, 271, 272, 274, 275, 276, 284, 292, 293, 297, 314, 327, 353, 356, 363, 364, 380, 433, 434, 435, 436, 437, 461, 470, 471, 472, 490, 493, 516, 536, 539, 552, 564, 566, 572, 603, 607, 637, 640, 690, 692, 693, 694, 726, 728, 733, 741, 776, 799, 830, 835, 846, 850, 852, 853, 856, 871], "quit": [7, 21, 124, 142, 148, 149, 160, 199, 200, 202, 207, 208, 211, 222, 223, 231, 550, 830, 848, 850], "so": [7, 10, 28, 31, 37, 39, 43, 46, 62, 68, 69, 73, 80, 90, 91, 92, 100, 101, 106, 111, 112, 124, 132, 134, 135, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 153, 154, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 178, 179, 180, 181, 182, 188, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 217, 218, 219, 222, 223, 224, 226, 227, 230, 231, 232, 236, 237, 252, 255, 260, 261, 262, 263, 265, 267, 268, 270, 271, 272, 273, 274, 275, 276, 285, 286, 287, 307, 329, 355, 362, 379, 383, 403, 406, 407, 409, 410, 411, 412, 413, 415, 416, 417, 434, 435, 437, 438, 442, 470, 471, 472, 493, 517, 523, 536, 550, 551, 552, 560, 561, 570, 578, 579, 596, 608, 630, 637, 638, 677, 678, 680, 681, 728, 733, 738, 739, 747, 748, 772, 781, 785, 791, 817, 826, 828, 830, 833, 835, 836, 837, 838, 846, 848, 850, 852, 853, 856, 871], "even": [7, 68, 72, 109, 125, 140, 142, 153, 158, 164, 165, 166, 169, 170, 181, 188, 189, 196, 197, 199, 201, 202, 203, 204, 205, 211, 213, 222, 237, 252, 255, 260, 261, 262, 263, 303, 319, 371, 372, 373, 374, 376, 377, 379, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 470, 471, 472, 498, 550, 799, 830, 838, 847, 853, 871], "fast": [7, 21, 43, 125, 149, 153, 189, 235, 237, 240, 255, 260, 261, 262, 263, 358, 411, 420, 470, 471, 472, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 509, 510, 550, 587, 692, 694, 702, 708, 828, 850, 853, 871], "machin": [7, 18, 91, 92, 179, 193, 197, 198, 240, 246, 265, 278, 349, 561, 569, 578, 848, 871], "sever": [7, 68, 73, 78, 79, 111, 124, 143, 148, 149, 151, 153, 156, 157, 163, 164, 166, 167, 169, 170, 178, 179, 186, 187, 188, 189, 196, 198, 203, 204, 211, 213, 214, 222, 230, 232, 255, 260, 261, 396, 438, 470, 471, 472, 586, 693, 830, 833, 834, 835, 837, 842, 846, 847, 850, 851, 853, 856, 871], "alexandr": [7, 9, 10, 11, 12, 13, 15, 18, 28, 29, 30, 37, 38, 39, 41, 45, 46, 47, 49, 51, 52, 58, 63, 85, 89, 93, 94, 97, 104, 105, 107, 108, 110, 114, 118, 122, 128, 129, 132, 135, 157, 160, 183, 193, 202, 224, 225, 226, 230, 231, 232, 236, 240, 262, 263, 349, 403, 468, 469, 518, 550, 845, 850, 852, 858, 871], "gramfort": [7, 9, 10, 11, 13, 18, 28, 29, 30, 37, 38, 39, 41, 45, 46, 47, 49, 51, 52, 58, 63, 89, 93, 94, 97, 104, 105, 107, 108, 110, 114, 118, 122, 128, 129, 132, 135, 157, 160, 183, 193, 202, 224, 225, 226, 230, 231, 232, 236, 240, 262, 263, 349, 468, 469, 518, 550, 778, 845, 850, 852, 858, 871], "inria": [7, 9, 10, 11, 13, 18, 28, 29, 30, 37, 38, 39, 41, 45, 46, 47, 49, 51, 52, 58, 63, 89, 93, 94, 97, 104, 105, 107, 108, 114, 118, 122, 128, 129, 135, 157, 183, 224, 225, 226, 230, 231, 232, 236], "deni": [7, 11, 13, 16, 21, 26, 32, 41, 67, 76, 98, 106, 110, 111, 117, 118, 123, 129, 130, 149, 160, 193, 226, 227, 232, 240, 262, 263, 349, 518, 845, 850, 858, 871], "engemann": [7, 11, 13, 16, 21, 26, 32, 41, 67, 76, 98, 106, 110, 111, 117, 118, 123, 129, 130, 160, 193, 226, 227, 232, 240, 262, 263, 349, 518, 778, 845, 850, 858, 871], "spm_face": [7, 120, 211, 847, 861], "ica": [7, 17, 20, 27, 72, 75, 81, 82, 85, 160, 163, 164, 196, 197, 198, 201, 204, 209, 210, 213, 240, 255, 260, 261, 262, 263, 265, 270, 307, 322, 323, 367, 407, 417, 444, 470, 471, 472, 486, 544, 547, 564, 566, 567, 573, 574, 576, 590, 591, 605, 768, 781, 782, 783, 784, 785, 791, 810, 837, 850, 857, 860, 861, 871], "create_eog_epoch": [7, 170, 196, 198, 201, 202, 204, 563, 571, 848, 861, 871], "spm_path": 7, "spm_ctf_meg_example_fac": 7, "d_3d": 7, "downsampl": [7, 19, 106, 132, 134, 143, 164, 192, 198, 200, 225, 252, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 402, 443, 444, 470, 471, 472, 507, 569, 676, 690, 693, 797, 850, 871], "heavili": [7, 106, 155, 193, 285, 287, 728, 856], "advis": [7, 68, 187, 199, 252, 846, 853, 871], "real": [7, 49, 89, 90, 149, 153, 154, 156, 158, 159, 199, 202, 203, 204, 205, 213, 217, 219, 224, 240, 292, 446, 470, 471, 472, 512, 587, 693, 718, 719, 738, 837, 842, 859, 871], "jitter": [7, 166, 200, 470, 471, 472, 850], "resampl": [7, 19, 21, 43, 73, 78, 79, 106, 132, 134, 138, 144, 147, 149, 163, 189, 192, 196, 199, 202, 204, 209, 210, 219, 230, 231, 232, 236, 255, 258, 259, 260, 261, 262, 263, 265, 267, 268, 271, 274, 275, 276, 424, 438, 439, 441, 442, 444, 470, 471, 472, 479, 486, 492, 547, 592, 690, 693, 738, 768, 779, 796, 801, 810, 828, 848, 853, 860, 861, 868, 871], "npad": [7, 19, 73, 78, 79, 189, 192, 230, 231, 255, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 443, 470, 471, 472, 850], "auto": [7, 10, 15, 16, 19, 22, 31, 68, 72, 73, 74, 78, 79, 80, 87, 104, 110, 117, 118, 122, 145, 146, 154, 160, 163, 189, 192, 199, 202, 205, 207, 224, 225, 226, 227, 230, 231, 252, 255, 257, 260, 261, 262, 263, 265, 267, 268, 269, 270, 271, 273, 274, 275, 276, 300, 301, 307, 323, 336, 338, 342, 348, 349, 353, 354, 355, 360, 403, 405, 409, 410, 414, 415, 422, 424, 427, 432, 433, 434, 436, 437, 439, 441, 442, 443, 448, 466, 468, 469, 470, 471, 472, 477, 479, 481, 483, 486, 487, 492, 496, 509, 514, 528, 547, 549, 550, 551, 559, 560, 561, 562, 564, 569, 570, 573, 578, 582, 596, 602, 621, 635, 690, 692, 693, 694, 738, 754, 755, 757, 762, 768, 770, 772, 774, 775, 777, 778, 781, 783, 785, 788, 790, 791, 792, 793, 794, 796, 798, 800, 801, 802, 824, 846, 847, 850, 871], "sfreq": [7, 8, 9, 14, 19, 21, 31, 62, 64, 66, 67, 68, 87, 89, 90, 91, 92, 106, 108, 111, 122, 124, 125, 134, 135, 142, 164, 166, 167, 170, 188, 189, 192, 198, 199, 200, 208, 211, 212, 213, 217, 219, 237, 254, 255, 260, 261, 262, 263, 265, 267, 268, 270, 271, 274, 275, 276, 279, 367, 405, 408, 409, 414, 415, 416, 427, 429, 431, 438, 439, 441, 470, 471, 472, 582, 596, 682, 695, 696, 697, 705, 707, 708, 715, 717, 718, 719, 720, 771, 779, 856, 871], "5e": [7, 8, 9, 13, 21, 31, 33, 34, 39, 40, 44, 48, 58, 74, 106, 121, 139, 170, 181, 183, 193, 205, 211, 219, 255, 260, 261, 270, 446, 470, 471, 472, 768, 791], "major": [7, 315, 471, 830, 850, 852, 856, 859, 871], "n_compon": [7, 8, 9, 12, 15, 72, 74, 80, 85, 114, 164, 170, 193, 202, 403, 410, 411, 417, 550, 551, 564, 871], "max_it": [7, 72, 74, 80, 164, 202, 517, 550, 576, 655, 871], "random_st": [7, 8, 9, 10, 15, 39, 74, 80, 87, 89, 90, 91, 110, 114, 135, 164, 202, 218, 219, 468, 503, 550, 576, 595, 642, 643, 644, 653, 654, 656, 669, 871], "correl": [7, 12, 18, 22, 26, 43, 72, 100, 144, 160, 193, 201, 202, 207, 222, 223, 226, 240, 252, 265, 272, 337, 349, 355, 409, 410, 415, 550, 564, 578, 674, 679, 847, 850, 853, 871], "indic": [7, 13, 16, 22, 31, 46, 47, 67, 68, 78, 97, 138, 139, 140, 142, 143, 144, 147, 149, 153, 154, 158, 166, 167, 168, 173, 176, 186, 189, 192, 196, 197, 198, 200, 202, 203, 206, 207, 211, 213, 214, 217, 219, 224, 227, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 305, 307, 308, 309, 322, 324, 330, 349, 354, 363, 396, 403, 405, 409, 410, 411, 419, 424, 427, 432, 441, 442, 445, 470, 471, 472, 479, 481, 483, 486, 487, 488, 492, 496, 526, 527, 541, 544, 546, 547, 549, 550, 551, 552, 553, 558, 560, 564, 565, 566, 567, 572, 575, 576, 577, 583, 584, 586, 587, 593, 602, 608, 609, 612, 621, 624, 630, 635, 658, 659, 663, 666, 670, 676, 677, 678, 680, 681, 682, 685, 690, 691, 692, 693, 694, 698, 699, 700, 701, 703, 709, 710, 721, 722, 738, 751, 754, 755, 756, 758, 762, 768, 769, 770, 772, 774, 775, 777, 781, 782, 783, 785, 787, 789, 790, 792, 793, 798, 800, 819, 824, 826, 835, 852, 853, 856, 871], "eog_epoch": [7, 170, 196, 201, 567], "mrt31": 7, "2908": 7, "eog_ind": [7, 202, 550], "eog_scor": [7, 170, 202, 270], "find_bads_eog": [7, 170, 202, 270, 550, 871], "plot_scor": [7, 72, 80, 202, 550, 871], "plot_compon": [7, 74, 202, 550, 857, 871], "topograph": [7, 8, 16, 18, 19, 27, 119, 127, 130, 149, 193, 240, 262, 263, 265, 269, 270, 403, 410, 484, 546, 547, 550, 608, 690, 755, 762, 772, 777, 783, 790, 798, 800, 871], "compon": [7, 8, 12, 14, 15, 21, 27, 29, 30, 31, 33, 40, 41, 43, 44, 46, 58, 68, 72, 74, 75, 76, 77, 82, 84, 85, 91, 116, 121, 135, 148, 149, 160, 164, 170, 175, 176, 177, 179, 180, 182, 189, 193, 196, 197, 198, 199, 200, 201, 203, 204, 207, 208, 213, 219, 230, 232, 240, 262, 263, 264, 266, 270, 292, 293, 307, 323, 349, 353, 354, 363, 364, 365, 374, 396, 397, 403, 406, 407, 409, 410, 411, 412, 413, 415, 416, 417, 424, 442, 443, 446, 447, 448, 466, 468, 469, 470, 471, 472, 486, 520, 523, 524, 526, 527, 528, 529, 534, 550, 551, 558, 560, 561, 564, 569, 576, 578, 693, 778, 781, 782, 783, 784, 785, 791, 837, 846, 847, 850, 853, 856, 857, 871], "saw": [7, 138, 140, 165, 166, 169, 196, 197, 198, 204, 211, 226], "2nd": [7, 149, 192, 196, 224, 227, 237, 240, 564, 632, 871], "ecg": [7, 69, 71, 74, 78, 79, 80, 87, 89, 90, 91, 106, 108, 124, 128, 138, 139, 140, 144, 147, 149, 165, 166, 167, 170, 187, 189, 197, 198, 200, 201, 203, 205, 207, 208, 211, 212, 213, 214, 217, 219, 255, 260, 261, 262, 263, 270, 306, 354, 367, 436, 470, 471, 472, 482, 483, 486, 496, 547, 550, 562, 566, 567, 570, 573, 642, 643, 676, 690, 692, 693, 694, 768, 784, 789, 791, 826, 853, 856, 871], "too": [7, 27, 67, 75, 82, 124, 138, 140, 142, 148, 149, 155, 156, 159, 163, 170, 176, 179, 196, 197, 198, 199, 200, 201, 204, 206, 208, 213, 222, 224, 226, 237, 255, 260, 261, 262, 263, 265, 307, 323, 337, 367, 424, 470, 471, 472, 477, 487, 553, 558, 560, 561, 569, 577, 578, 596, 602, 738, 758, 800, 830, 850, 871], "dipolar": [7, 446, 550, 782], "plot_overlai": [7, 80, 132, 202, 550, 871], "inspect": [7, 21, 28, 68, 80, 124, 139, 149, 154, 160, 189, 196, 207, 208, 252, 255, 260, 261, 262, 263, 302, 304, 327, 470, 471, 472, 578, 586, 642, 643, 768, 772, 791, 842, 850], "clean": [7, 71, 72, 73, 81, 139, 142, 157, 164, 165, 170, 187, 197, 199, 201, 202, 203, 204, 208, 227, 237, 255, 260, 270, 470, 471, 472, 484, 510, 550, 586, 601, 676, 782, 830, 850, 871], "default": [7, 21, 31, 42, 43, 72, 85, 100, 109, 111, 117, 124, 132, 133, 135, 138, 140, 143, 144, 147, 148, 149, 154, 156, 160, 164, 165, 166, 167, 168, 169, 170, 176, 177, 186, 187, 189, 197, 198, 200, 202, 203, 204, 205, 207, 211, 212, 213, 214, 217, 222, 226, 227, 232, 235, 236, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 311, 312, 314, 316, 317, 318, 319, 321, 322, 323, 324, 325, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 427, 428, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 453, 454, 455, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 578, 579, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 595, 597, 598, 599, 600, 601, 602, 604, 605, 606, 608, 609, 610, 612, 613, 614, 615, 616, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 671, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 713, 714, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 730, 733, 735, 737, 738, 741, 746, 747, 751, 752, 754, 755, 756, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 807, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 828, 829, 830, 834, 835, 846, 847, 850, 856, 871], "k": [7, 8, 9, 10, 11, 13, 14, 18, 19, 22, 28, 31, 37, 38, 40, 58, 64, 67, 68, 80, 94, 97, 101, 140, 141, 156, 158, 174, 179, 186, 192, 193, 199, 203, 212, 214, 226, 227, 235, 236, 237, 240, 255, 257, 258, 260, 261, 262, 263, 266, 269, 271, 279, 284, 292, 295, 297, 403, 410, 466, 468, 469, 470, 471, 472, 516, 517, 549, 550, 569, 610, 650, 671, 677, 678, 679, 681, 690, 692, 694, 726, 751, 755, 770, 776, 777, 780, 791, 793, 798, 799, 800, 826, 828, 830, 853, 856, 871], "append": [7, 8, 10, 16, 42, 43, 44, 46, 60, 66, 73, 77, 110, 135, 148, 170, 181, 192, 197, 202, 204, 208, 211, 222, 226, 227, 232, 254, 255, 260, 261, 262, 263, 266, 470, 471, 472, 550, 564, 569, 578, 636, 667, 690, 691, 692, 693, 694, 711, 830, 871], "covarari": 7, "noise_cov": [7, 11, 31, 33, 39, 40, 41, 44, 47, 48, 49, 50, 53, 54, 57, 58, 91, 106, 118, 150, 160, 170, 175, 176, 178, 180, 189, 202, 255, 257, 260, 261, 262, 263, 270, 293, 295, 363, 364, 447, 466, 468, 469, 470, 471, 472, 528, 550, 768, 772, 776, 778, 791, 856, 871], "shrunk": [7, 31, 33, 39, 40, 41, 44, 58, 118, 150, 160, 175, 181, 349], "visual": [7, 8, 13, 14, 15, 16, 32, 34, 35, 40, 41, 44, 55, 56, 58, 59, 60, 67, 69, 71, 77, 84, 91, 98, 101, 102, 103, 110, 112, 113, 116, 117, 125, 127, 129, 131, 132, 133, 135, 139, 141, 143, 145, 146, 149, 150, 151, 152, 153, 158, 160, 163, 164, 166, 170, 173, 176, 177, 181, 184, 185, 189, 193, 196, 198, 199, 200, 205, 207, 209, 210, 211, 212, 213, 214, 223, 224, 226, 236, 237, 240, 252, 255, 258, 260, 261, 262, 263, 265, 267, 268, 270, 271, 273, 274, 275, 276, 302, 303, 304, 308, 336, 337, 338, 339, 344, 346, 347, 355, 358, 359, 409, 430, 432, 444, 446, 456, 470, 471, 472, 486, 505, 509, 516, 517, 527, 529, 531, 545, 550, 554, 578, 586, 602, 604, 605, 608, 610, 613, 616, 618, 631, 639, 642, 643, 677, 682, 692, 693, 720, 722, 723, 738, 743, 755, 761, 762, 768, 769, 771, 772, 773, 776, 779, 780, 781, 782, 784, 785, 788, 789, 791, 805, 809, 810, 826, 827, 828, 831, 833, 834, 837, 842, 848, 850, 853, 854, 856, 861, 871], "dig": [7, 106, 115, 122, 134, 154, 155, 156, 157, 158, 164, 167, 168, 181, 182, 211, 217, 265, 301, 307, 337, 422, 478, 514, 754, 871], "montag": [7, 8, 19, 68, 80, 112, 122, 132, 133, 134, 149, 157, 187, 188, 202, 217, 237, 255, 260, 261, 262, 263, 265, 307, 310, 311, 313, 318, 320, 323, 325, 326, 327, 328, 329, 330, 331, 332, 360, 436, 455, 470, 471, 472, 483, 579, 788, 800, 808, 811, 826, 847, 853, 871], "It": [7, 10, 13, 31, 38, 46, 54, 59, 68, 69, 72, 87, 91, 92, 100, 111, 113, 114, 118, 138, 140, 142, 143, 147, 148, 149, 154, 155, 156, 157, 158, 164, 167, 168, 169, 170, 173, 175, 178, 186, 187, 188, 193, 197, 198, 200, 201, 202, 203, 205, 206, 207, 211, 212, 214, 217, 222, 224, 225, 227, 230, 232, 236, 237, 252, 253, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 271, 274, 275, 276, 278, 283, 292, 293, 298, 307, 325, 336, 349, 354, 360, 403, 411, 412, 438, 446, 466, 468, 469, 470, 471, 472, 479, 486, 490, 499, 509, 512, 517, 523, 524, 528, 533, 534, 550, 554, 560, 569, 578, 579, 586, 592, 599, 603, 607, 612, 616, 618, 656, 662, 665, 679, 684, 690, 693, 705, 714, 717, 728, 738, 776, 781, 801, 815, 818, 822, 826, 828, 830, 833, 834, 835, 837, 842, 846, 847, 850, 852, 853, 856, 859, 871], "spm_dig_montag": 7, "trans_fnam": [7, 66, 78, 154, 176, 189], "spm_ctf_meg_example_faces1_3d_raw": 7, "map": [7, 8, 10, 16, 19, 23, 24, 25, 26, 27, 35, 39, 40, 42, 55, 57, 69, 74, 76, 84, 91, 102, 103, 104, 106, 112, 116, 119, 121, 125, 127, 131, 132, 133, 141, 142, 143, 144, 149, 154, 156, 158, 163, 164, 166, 173, 176, 179, 180, 192, 193, 196, 197, 198, 199, 202, 203, 204, 208, 211, 218, 220, 221, 222, 227, 230, 231, 232, 240, 254, 255, 257, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 273, 274, 275, 276, 279, 284, 286, 292, 305, 307, 319, 335, 355, 358, 359, 365, 403, 406, 407, 409, 410, 411, 412, 413, 415, 416, 417, 424, 427, 430, 432, 444, 448, 456, 466, 467, 468, 469, 470, 471, 472, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 506, 509, 510, 516, 517, 528, 541, 546, 547, 550, 551, 559, 564, 599, 605, 608, 610, 611, 615, 616, 625, 626, 631, 639, 644, 650, 655, 658, 671, 673, 674, 677, 679, 683, 684, 690, 691, 692, 693, 694, 699, 722, 738, 755, 757, 762, 765, 766, 768, 772, 773, 777, 783, 790, 791, 796, 797, 798, 799, 800, 801, 802, 808, 826, 828, 830, 846, 856, 859, 871], "make_field_map": [7, 121, 148, 262, 263, 773, 861, 871], "plot_field": [7, 121, 148, 262, 263, 871], "170": [7, 78, 81, 120, 135, 167, 181, 182, 183, 189, 199, 202, 222, 227, 240], "daat": 7, "plot_whit": [7, 90, 118, 150, 160, 175, 255, 260, 261, 262, 263, 470, 471, 472, 768, 772, 791, 850, 871], "oct": [7, 11, 22, 24, 28, 29, 31, 34, 37, 38, 39, 40, 41, 42, 46, 47, 48, 50, 51, 53, 54, 56, 57, 58, 59, 66, 87, 89, 90, 91, 92, 101, 104, 105, 106, 107, 121, 128, 154, 156, 157, 158, 164, 170, 175, 176, 177, 179, 180, 189, 193, 218, 219, 230, 232, 252, 267, 271, 273, 275, 402, 638, 796, 871], "spm_": 7, "s_dspm_invers": 7, "comment": [7, 45, 60, 112, 124, 147, 148, 150, 169, 170, 187, 205, 217, 236, 253, 255, 259, 260, 261, 262, 263, 266, 270, 330, 461, 607, 612, 690, 693, 724, 762, 776, 824, 826, 828, 830, 853, 871], "3d": [7, 27, 31, 34, 37, 39, 51, 58, 59, 93, 94, 119, 124, 127, 132, 133, 134, 140, 149, 154, 156, 158, 159, 173, 174, 183, 188, 193, 203, 207, 222, 225, 227, 252, 255, 258, 260, 261, 262, 263, 265, 267, 268, 270, 271, 274, 275, 276, 286, 307, 308, 320, 333, 361, 411, 441, 442, 470, 471, 472, 491, 500, 509, 561, 569, 578, 671, 677, 678, 738, 739, 740, 745, 747, 748, 749, 754, 759, 766, 773, 788, 794, 796, 797, 801, 803, 804, 806, 808, 809, 826, 829, 830, 834, 842, 847, 848, 851, 871], "both": [7, 19, 31, 32, 37, 39, 40, 44, 46, 50, 57, 58, 67, 68, 69, 72, 84, 87, 91, 96, 106, 111, 129, 132, 138, 139, 147, 148, 149, 160, 164, 166, 167, 168, 169, 170, 173, 175, 176, 178, 179, 180, 181, 187, 188, 189, 193, 196, 198, 199, 200, 201, 202, 203, 204, 207, 208, 211, 219, 224, 226, 230, 231, 232, 235, 236, 237, 240, 255, 256, 257, 259, 260, 261, 262, 263, 267, 268, 270, 271, 273, 274, 275, 276, 283, 292, 293, 301, 310, 349, 353, 354, 355, 363, 364, 365, 403, 410, 422, 427, 444, 446, 447, 466, 468, 469, 470, 471, 472, 509, 528, 550, 553, 560, 564, 566, 592, 595, 608, 609, 613, 618, 639, 640, 644, 653, 671, 673, 677, 678, 680, 681, 690, 692, 693, 735, 738, 751, 755, 761, 762, 769, 774, 775, 777, 778, 781, 796, 798, 800, 801, 821, 826, 830, 836, 850, 851, 852, 853, 856, 871], "ven": [7, 49], "save_imag": [7, 230, 232, 738], "dspm_map": 7, "png": [7, 46, 112, 170, 230, 232, 252, 270, 871], "classifi": [8, 9, 10, 11, 13, 17, 20, 27, 193, 207, 255, 260, 262, 263, 265, 407, 418, 420, 421, 550, 569, 605, 648, 649, 871], "featur": [8, 11, 15, 18, 19, 27, 95, 99, 140, 148, 170, 192, 193, 204, 207, 214, 222, 227, 237, 240, 262, 263, 267, 268, 270, 271, 274, 275, 276, 403, 406, 409, 410, 412, 413, 415, 418, 436, 470, 471, 472, 550, 569, 578, 601, 674, 675, 762, 772, 774, 796, 801, 803, 807, 830, 837, 838, 847, 849, 850, 851, 852, 853, 871], "extract": [8, 9, 18, 21, 24, 27, 35, 37, 40, 55, 60, 71, 72, 77, 80, 97, 109, 110, 120, 124, 125, 133, 139, 140, 142, 147, 149, 156, 157, 163, 164, 167, 169, 179, 186, 188, 189, 193, 196, 200, 202, 203, 204, 209, 210, 212, 217, 223, 224, 225, 232, 240, 252, 253, 260, 262, 265, 266, 267, 268, 271, 273, 274, 275, 276, 302, 336, 337, 338, 339, 340, 341, 344, 346, 347, 357, 365, 379, 403, 407, 410, 411, 427, 437, 444, 470, 471, 474, 479, 486, 490, 505, 516, 517, 531, 550, 554, 578, 603, 607, 608, 612, 618, 662, 665, 737, 761, 780, 826, 830, 846, 847, 853, 856, 871], "en": [8, 19, 193, 240, 251, 858, 871], "wikipedia": [8, 193, 222, 240], "org": [8, 15, 32, 68, 69, 80, 85, 110, 111, 112, 113, 117, 124, 132, 133, 134, 193, 224, 226, 227, 230, 236, 240, 267, 271, 275, 295, 374, 396, 397, 411, 442, 551, 636, 674, 720, 723, 734, 796, 830, 850, 871], "wiki": [8, 153, 193, 267, 271, 275, 550, 734, 796, 826, 846], "common_spatial_pattern": [8, 193], "eegbci": [8, 9, 109, 157, 202, 861, 871], "document": [8, 15, 62, 85, 124, 133, 134, 141, 147, 149, 158, 164, 166, 167, 168, 170, 175, 179, 187, 199, 200, 202, 204, 207, 211, 213, 214, 217, 236, 240, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 298, 299, 300, 301, 302, 303, 304, 307, 311, 312, 324, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 405, 406, 408, 409, 413, 414, 416, 419, 420, 422, 424, 428, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 446, 447, 448, 453, 454, 458, 459, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 505, 506, 507, 508, 509, 510, 512, 513, 514, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 543, 546, 550, 551, 552, 553, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 573, 574, 575, 576, 578, 579, 581, 582, 585, 586, 587, 590, 591, 592, 593, 597, 598, 599, 600, 601, 602, 604, 605, 606, 608, 609, 610, 612, 613, 614, 615, 616, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 635, 638, 639, 641, 642, 643, 644, 647, 652, 654, 655, 658, 660, 661, 662, 663, 664, 665, 666, 677, 678, 679, 680, 681, 685, 686, 687, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 703, 707, 708, 709, 710, 714, 718, 719, 720, 721, 722, 723, 724, 727, 728, 733, 737, 738, 746, 747, 754, 763, 766, 770, 771, 772, 773, 776, 778, 781, 782, 783, 788, 789, 791, 792, 794, 795, 796, 797, 801, 802, 803, 807, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 834, 835, 837, 845, 846, 847, 849, 850, 853, 871], "physionet": [8, 135, 202, 240, 374, 396, 397, 847, 859, 871], "martin": [8, 10, 34, 46, 101, 240, 403, 845, 847, 853, 871], "billing": [8, 871], "tugraz": 8, "sklearn": [8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 114, 135, 169, 192, 193, 202, 222, 349, 354, 404, 406, 409, 412, 413, 417, 420, 689, 734, 829, 830, 871], "discriminant_analysi": [8, 9], "lineardiscriminantanalysi": [8, 9], "model_select": [8, 9, 10, 12, 15, 16, 19, 349, 354, 420, 871], "shufflesplit": 8, "cross_val_scor": [8, 9], "events_from_annot": [8, 9, 109, 125, 133, 134, 135, 142, 166, 208, 237, 254, 279, 479, 486, 861, 871], "make_standard_montag": [8, 19, 68, 80, 122, 157, 168, 188, 237, 255, 260, 261, 262, 263, 265, 318, 325, 470, 471, 472, 483, 493, 861, 871], "concatenate_raw": [8, 9, 10, 78, 109, 189, 255, 260, 261, 262, 263, 356, 357, 470, 471, 472, 569, 578, 847, 861, 871], "read_raw_edf": [8, 9, 80, 109, 135, 157, 187, 202, 477, 479, 492, 847, 853, 857, 861, 871], "classif": [8, 9, 10, 11, 12, 15, 50, 136, 137, 144, 160, 163, 193, 240, 254, 255, 260, 265, 295, 396, 404, 432, 470, 471, 486, 596, 692, 771, 847, 871], "start": [8, 22, 29, 32, 33, 39, 60, 64, 68, 79, 90, 93, 124, 132, 134, 135, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 154, 155, 156, 158, 159, 163, 164, 165, 166, 168, 171, 172, 175, 176, 186, 193, 197, 198, 200, 201, 202, 203, 205, 207, 208, 211, 212, 213, 214, 217, 219, 222, 223, 224, 235, 236, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 279, 280, 281, 291, 330, 336, 337, 338, 339, 349, 352, 354, 403, 409, 410, 415, 427, 443, 444, 445, 461, 462, 470, 471, 472, 477, 479, 486, 495, 498, 511, 520, 539, 549, 550, 553, 557, 562, 563, 564, 566, 567, 569, 570, 571, 572, 573, 592, 608, 655, 667, 677, 678, 680, 681, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 726, 738, 743, 755, 762, 764, 770, 771, 777, 781, 782, 784, 785, 790, 791, 793, 798, 800, 811, 826, 828, 830, 832, 833, 834, 835, 838, 841, 846, 849, 850, 853, 854, 856, 857, 871], "cue": [8, 133], "feet": [8, 9, 109, 374], "standard_1005": [8, 68, 80, 157, 168, 202], "set_montag": [8, 15, 19, 68, 80, 122, 125, 132, 133, 134, 149, 157, 168, 180, 187, 188, 202, 217, 237, 255, 260, 261, 262, 263, 265, 436, 470, 471, 472, 483, 493, 853, 871], "skip_by_annot": [8, 9, 255, 260, 261, 262, 263, 470, 471, 472, 569, 578, 871], "t1": [8, 9, 30, 43, 49, 109, 154, 155, 156, 157, 158, 159, 174, 252, 273, 275, 276, 298, 302, 303, 304, 315, 383, 463, 471, 575, 639, 756, 802, 826, 847, 853, 871], "t2": [8, 9, 109, 315, 471], "train": [8, 10, 11, 13, 15, 16, 19, 85, 135, 192, 193, 403, 404, 405, 406, 407, 408, 410, 411, 413, 414, 415, 416, 420, 550, 551, 781, 830, 846, 847, 871], "epochs_train": [8, 135], "except": [8, 9, 68, 80, 109, 138, 141, 157, 169, 173, 174, 202, 207, 211, 255, 260, 261, 262, 263, 280, 281, 323, 343, 344, 349, 396, 444, 470, 471, 472, 473, 539, 551, 569, 618, 681, 685, 728, 830, 853, 856, 871], "ignor": [8, 9, 10, 40, 46, 67, 68, 78, 80, 106, 109, 133, 138, 144, 149, 157, 160, 164, 170, 179, 182, 189, 196, 197, 198, 204, 222, 252, 255, 257, 258, 260, 261, 262, 263, 265, 267, 268, 269, 270, 271, 274, 275, 276, 278, 279, 280, 281, 292, 293, 311, 319, 334, 343, 344, 349, 353, 355, 356, 358, 360, 363, 364, 369, 371, 372, 373, 376, 377, 379, 384, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 412, 422, 430, 432, 437, 439, 444, 450, 453, 460, 466, 468, 469, 470, 471, 472, 473, 482, 484, 488, 491, 498, 528, 545, 549, 550, 553, 561, 569, 578, 598, 602, 604, 605, 613, 627, 629, 638, 639, 655, 677, 679, 690, 692, 693, 694, 735, 755, 766, 767, 768, 770, 771, 774, 777, 782, 790, 791, 792, 793, 798, 800, 817, 819, 821, 826, 830, 871], "_io": [8, 9, 68, 80, 109, 157, 202], "fileio": [8, 9, 68, 80, 109, 157, 202], "eegbci_checksum": [8, 9, 68, 80, 109, 157, 202], "txt": [8, 9, 43, 68, 80, 109, 132, 133, 157, 178, 181, 202, 212, 213, 254, 325, 334, 379, 474, 478, 596, 605, 816, 828, 830, 850, 871], "rb": [8, 9, 68, 80, 109, 157, 202], "closefd": [8, 9, 68, 80, 109, 157, 202], "traceback": [8, 9, 68, 80, 109, 157, 202, 829], "most": [8, 9, 19, 28, 44, 46, 68, 71, 79, 80, 101, 105, 106, 109, 111, 117, 124, 132, 133, 138, 142, 147, 148, 149, 150, 153, 154, 157, 163, 165, 167, 169, 170, 179, 186, 196, 199, 201, 202, 203, 204, 206, 207, 208, 211, 222, 226, 235, 252, 255, 260, 261, 262, 263, 265, 266, 271, 274, 307, 325, 350, 351, 352, 371, 372, 373, 376, 377, 379, 383, 384, 387, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 401, 432, 438, 443, 446, 466, 503, 509, 537, 550, 560, 576, 578, 595, 642, 643, 644, 653, 654, 655, 656, 677, 678, 679, 680, 681, 728, 733, 738, 756, 777, 826, 829, 830, 834, 835, 836, 848, 850, 852, 853, 854, 857, 861, 871], "recent": [8, 9, 68, 80, 109, 157, 169, 199, 202, 403, 829, 830, 846, 871], "last": [8, 9, 15, 68, 79, 80, 101, 109, 124, 135, 138, 142, 144, 149, 157, 158, 164, 181, 186, 193, 197, 198, 199, 200, 202, 203, 211, 214, 222, 223, 230, 237, 255, 257, 258, 259, 260, 261, 262, 263, 265, 267, 268, 269, 270, 271, 274, 275, 276, 283, 284, 297, 315, 337, 349, 357, 406, 413, 414, 416, 427, 441, 442, 443, 444, 470, 471, 472, 494, 511, 516, 545, 550, 553, 671, 676, 677, 678, 680, 681, 690, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 707, 709, 710, 720, 726, 738, 770, 775, 777, 782, 785, 792, 798, 826, 829, 847, 852, 853, 871], "decor": [8, 9, 68, 80, 109, 157, 202, 734, 736], "gen": [8, 9, 68, 80, 109, 157, 202, 751], "568": [8, 9, 68, 80, 109, 157, 202, 206], "resourcewarn": [8, 9, 68, 80, 109, 157, 202], "unclos": [8, 9, 68, 80, 109, 157, 202], "bufferedread": [8, 9, 68, 80, 109, 157, 202], "edf": [8, 9, 80, 109, 135, 157, 202, 436, 470, 471, 472, 479, 486, 492, 596, 847, 853, 857, 871], "eegmmidb": [8, 9, 80, 109, 157, 202, 374, 871], "s001": [8, 9, 80, 109, 157, 202], "s001r06": [8, 9, 109, 157], "19999": [8, 109, 157, 202], "124": [8, 34, 103, 104, 109, 157, 167, 193, 202, 206, 227, 240, 382], "994": [8, 9, 68, 80, 109, 157, 202, 227], "s001r10": [8, 9, 109], "s001r14": [8, 9, 109], "bandpass": [8, 9, 12, 13, 14, 15, 16, 18, 21, 33, 41, 70, 74, 79, 85, 110, 112, 118, 130, 134, 139, 142, 144, 170, 193, 196, 198, 201, 202, 204, 208, 227, 237, 255, 260, 261, 262, 263, 405, 411, 414, 438, 439, 441, 470, 471, 472, 582, 692, 694, 791, 792, 871], "265": [8, 9, 78, 79, 109, 167, 189, 227, 240, 647, 652], "656": [8, 9, 13, 206, 227], "64": [8, 9, 12, 13, 19, 21, 26, 32, 33, 34, 40, 44, 45, 46, 49, 57, 58, 78, 79, 80, 98, 100, 105, 109, 111, 141, 156, 157, 167, 168, 169, 170, 174, 176, 179, 182, 183, 189, 192, 193, 202, 206, 219, 222, 223, 226, 227, 240, 255, 257, 260, 261, 262, 263, 266, 269, 271, 403, 410, 469, 470, 471, 472, 523, 524, 533, 534, 549, 550, 690, 692, 694, 755, 770, 777, 781, 790, 793, 798, 800, 836, 847, 853, 857], "annot": [8, 9, 27, 37, 40, 43, 46, 66, 73, 75, 80, 82, 87, 91, 92, 109, 110, 123, 124, 125, 132, 133, 134, 142, 144, 149, 158, 163, 164, 171, 173, 179, 187, 188, 189, 192, 196, 202, 205, 214, 215, 216, 218, 255, 260, 261, 262, 263, 265, 279, 339, 340, 354, 358, 381, 432, 470, 471, 472, 473, 479, 484, 486, 491, 498, 510, 550, 552, 553, 554, 555, 556, 557, 566, 567, 569, 570, 571, 578, 579, 596, 605, 613, 629, 632, 694, 709, 710, 738, 754, 780, 783, 791, 792, 806, 807, 821, 826, 847, 848, 853, 861, 871], "descript": [8, 9, 109, 125, 133, 134, 135, 138, 140, 142, 149, 166, 167, 168, 186, 188, 189, 198, 208, 211, 212, 213, 217, 222, 254, 255, 260, 261, 262, 263, 265, 269, 279, 317, 318, 350, 351, 354, 432, 470, 471, 472, 473, 510, 550, 553, 566, 567, 570, 602, 690, 693, 694, 709, 710, 783, 792, 826, 830, 847, 856, 871], "801": [8, 142, 236], "discrim": 8, "mont": [8, 240], "carlo": [8, 240, 871], "cross": [8, 9, 10, 11, 12, 15, 16, 19, 27, 32, 33, 35, 43, 55, 76, 84, 102, 103, 116, 118, 119, 127, 135, 160, 164, 175, 192, 193, 197, 202, 204, 207, 218, 219, 226, 240, 255, 257, 260, 262, 264, 265, 271, 272, 284, 286, 292, 293, 294, 349, 354, 355, 359, 365, 403, 406, 409, 415, 419, 420, 424, 444, 471, 516, 526, 527, 528, 529, 532, 547, 550, 560, 566, 569, 570, 578, 599, 605, 608, 610, 618, 691, 695, 696, 697, 698, 699, 700, 701, 706, 738, 764, 782, 826, 842, 847, 850, 859, 871], "epochs_data": [8, 405, 408, 412, 871], "get_data": [8, 9, 10, 12, 13, 14, 16, 18, 21, 68, 70, 73, 81, 93, 94, 97, 111, 112, 124, 130, 135, 138, 139, 144, 147, 164, 165, 193, 200, 203, 223, 227, 235, 236, 237, 255, 260, 261, 262, 263, 470, 471, 472, 691, 692, 694, 709, 710, 853, 871], "epochs_data_train": 8, "cv": [8, 9, 10, 11, 12, 15, 16, 19, 193, 349, 354, 419, 420, 871], "test_siz": 8, "cv_split": 8, "split": [8, 10, 11, 15, 16, 19, 57, 85, 91, 124, 143, 157, 164, 192, 193, 204, 218, 223, 232, 240, 255, 260, 261, 266, 267, 268, 271, 274, 275, 276, 349, 354, 420, 462, 470, 471, 472, 491, 493, 523, 524, 578, 667, 676, 691, 720, 723, 738, 764, 796, 801, 856, 871], "assembl": [8, 9, 226, 528, 682, 848, 871], "lda": [8, 9], "log": [8, 9, 12, 21, 32, 80, 118, 126, 140, 160, 175, 197, 199, 202, 204, 208, 214, 224, 236, 237, 252, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 298, 299, 300, 301, 302, 303, 304, 307, 311, 312, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 408, 409, 410, 413, 414, 416, 419, 420, 422, 424, 428, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 446, 447, 448, 453, 454, 458, 459, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 505, 506, 507, 508, 509, 510, 512, 513, 514, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 543, 546, 550, 552, 553, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 573, 574, 575, 576, 578, 579, 581, 582, 585, 586, 587, 590, 591, 592, 593, 597, 598, 599, 600, 601, 602, 604, 605, 606, 608, 609, 610, 612, 613, 614, 615, 616, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 635, 636, 637, 638, 639, 641, 642, 643, 644, 654, 655, 658, 660, 661, 662, 663, 664, 665, 666, 677, 678, 679, 680, 681, 685, 686, 687, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 703, 707, 708, 709, 710, 714, 718, 719, 721, 722, 723, 724, 727, 728, 733, 736, 737, 738, 746, 754, 763, 766, 767, 770, 771, 772, 773, 778, 779, 781, 782, 783, 786, 788, 789, 791, 792, 794, 795, 796, 797, 798, 801, 802, 803, 807, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 850, 861, 871], "norm_trac": [8, 9, 193, 403, 871], "scikit": [8, 9, 16, 18, 19, 114, 193, 202, 407, 409, 411, 412, 413, 414, 416, 417, 418, 421, 550, 848, 871], "learn": [8, 9, 16, 18, 19, 21, 68, 114, 141, 159, 160, 164, 193, 195, 197, 198, 202, 240, 246, 349, 407, 409, 411, 412, 413, 414, 416, 417, 418, 420, 421, 550, 576, 830, 837, 847, 848, 850, 871], "clf": [8, 9, 10, 11, 12, 13, 15, 18, 193, 418, 871], "class_bal": 8, "accuraci": [8, 10, 15, 32, 78, 132, 135, 240, 255, 257, 260, 261, 262, 263, 269, 364, 365, 403, 409, 410, 415, 424, 446, 470, 471, 472, 528, 549, 550, 564, 647, 652, 690, 692, 694, 728, 755, 770, 777, 781, 790, 793, 798, 800, 811, 856, 871], "chanc": [8, 9, 10, 11, 193, 852, 871], "fit_transform": [8, 9, 10, 14, 18, 193, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 551], "plot_pattern": [8, 12, 193, 403, 410, 871], "ch_type": [8, 14, 22, 26, 41, 62, 77, 79, 84, 97, 109, 111, 117, 121, 122, 128, 139, 140, 143, 147, 148, 149, 164, 168, 174, 175, 188, 202, 207, 208, 214, 217, 227, 235, 236, 255, 257, 260, 261, 262, 263, 313, 314, 367, 403, 410, 470, 471, 472, 496, 509, 549, 550, 555, 564, 569, 631, 635, 690, 692, 693, 694, 769, 770, 777, 781, 793, 794, 798, 800, 871], "au": [8, 255, 257, 260, 261, 262, 263, 269, 367, 470, 471, 472, 690, 692, 694, 770, 777, 790, 798], "7e": [8, 9, 34, 47, 48, 53, 54, 57, 68, 91, 118, 148, 150, 160, 170, 176, 177, 180, 181, 183, 189, 193, 197, 218], "8e": [8, 9, 34, 48, 72, 106, 118, 160, 170, 175, 178, 181, 183, 189, 193], "09": [8, 9, 19, 41, 42, 43, 44, 48, 55, 71, 73, 78, 79, 82, 100, 113, 117, 118, 120, 156, 157, 158, 160, 172, 173, 175, 178, 183, 206, 221, 226, 227, 240, 266, 271, 514, 585, 671, 720, 723], "0001": [8, 9, 76, 84, 116, 121, 148, 177, 197, 468, 469], "00012": [8, 9], "6e": [8, 9, 33, 41, 45, 116, 118, 150, 170, 175, 181, 183, 193], "00011": [8, 9], "933333": 8, "533333": 8, "00025": 8, "00026": 8, "9e": [8, 9, 41, 48, 84, 90, 121, 148, 150, 160, 175, 178, 180, 181, 182, 183, 193, 218], "w_length": 8, "int": [8, 11, 19, 31, 66, 70, 87, 90, 92, 106, 111, 124, 141, 147, 158, 167, 169, 189, 192, 199, 200, 211, 217, 219, 232, 237, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 298, 299, 300, 301, 302, 303, 304, 306, 307, 311, 312, 322, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 413, 414, 415, 416, 419, 420, 422, 424, 425, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 453, 454, 456, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 541, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 585, 586, 587, 590, 591, 592, 593, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 608, 609, 610, 612, 613, 614, 615, 616, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 635, 637, 638, 639, 640, 641, 642, 643, 644, 653, 654, 655, 656, 658, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 673, 676, 677, 678, 679, 680, 681, 682, 685, 686, 687, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 707, 708, 709, 710, 713, 714, 715, 716, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 733, 737, 738, 746, 747, 751, 754, 755, 756, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 773, 776, 777, 778, 781, 782, 783, 784, 785, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 807, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 871], "w_step": 8, "w_start": 8, "shape": [8, 16, 19, 22, 31, 40, 46, 49, 52, 62, 64, 68, 94, 111, 112, 117, 132, 134, 135, 138, 144, 147, 155, 156, 158, 168, 173, 179, 186, 192, 193, 199, 211, 217, 222, 223, 224, 226, 227, 230, 231, 232, 235, 236, 237, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 283, 292, 293, 294, 299, 300, 301, 307, 308, 309, 313, 316, 320, 324, 334, 339, 343, 344, 345, 346, 347, 358, 360, 363, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 427, 431, 432, 437, 439, 441, 444, 445, 446, 447, 448, 461, 462, 464, 465, 466, 468, 470, 471, 472, 474, 482, 494, 505, 507, 509, 511, 515, 525, 526, 527, 529, 532, 533, 545, 549, 550, 551, 553, 554, 555, 557, 558, 559, 560, 561, 564, 569, 572, 576, 578, 583, 584, 592, 593, 602, 604, 605, 621, 624, 627, 628, 629, 630, 639, 640, 645, 646, 647, 648, 649, 650, 651, 652, 657, 658, 667, 669, 670, 671, 675, 676, 677, 678, 679, 680, 681, 688, 690, 691, 692, 693, 694, 695, 696, 697, 702, 704, 707, 708, 709, 710, 714, 716, 718, 719, 720, 721, 722, 726, 727, 728, 729, 731, 737, 738, 741, 742, 743, 753, 755, 757, 758, 759, 762, 768, 769, 770, 771, 772, 774, 777, 778, 780, 781, 783, 784, 788, 790, 792, 793, 794, 796, 798, 799, 800, 801, 802, 806, 808, 811, 816, 819, 824, 826, 837, 846, 853, 871], "scores_window": 8, "train_idx": 8, "test_idx": 8, "y_train": [8, 135, 192], "y_test": [8, 135, 192], "x_train": [8, 192], "x_test": [8, 192], "slide": [8, 12, 21, 132, 154, 237, 270, 710], "score_this_window": 8, "n": [8, 10, 42, 44, 68, 80, 90, 96, 106, 111, 134, 135, 139, 142, 147, 149, 155, 158, 168, 170, 173, 186, 199, 202, 203, 204, 205, 211, 217, 219, 222, 224, 226, 227, 237, 240, 252, 254, 255, 258, 259, 260, 261, 262, 263, 266, 267, 268, 271, 272, 274, 275, 276, 278, 307, 316, 335, 345, 346, 347, 350, 351, 352, 355, 374, 396, 397, 403, 410, 418, 424, 427, 438, 440, 461, 470, 471, 472, 491, 532, 549, 550, 554, 557, 566, 567, 569, 578, 626, 650, 663, 664, 665, 666, 670, 675, 690, 693, 702, 703, 738, 741, 742, 757, 772, 779, 796, 801, 802, 808, 826, 838, 847, 850, 853, 857, 871], "w_time": [8, 9], "axvlin": [8, 10, 11, 13, 19, 44, 109, 124, 142, 158, 193, 207], "linestyl": [8, 9, 11, 21, 94, 108, 109, 110, 124, 148, 193, 199, 203, 208, 227, 762, 786, 871], "color": [8, 9, 10, 11, 12, 13, 19, 21, 22, 37, 38, 44, 46, 47, 48, 49, 53, 54, 58, 68, 78, 79, 93, 94, 98, 101, 109, 110, 111, 112, 113, 117, 124, 129, 130, 132, 133, 134, 135, 139, 140, 142, 147, 148, 149, 154, 158, 164, 166, 168, 170, 173, 174, 175, 176, 179, 181, 183, 192, 193, 196, 197, 199, 200, 203, 207, 208, 212, 213, 214, 219, 227, 232, 235, 236, 237, 255, 256, 257, 258, 260, 261, 262, 263, 266, 267, 268, 269, 271, 273, 274, 275, 276, 363, 403, 410, 455, 456, 461, 462, 470, 471, 472, 549, 550, 611, 612, 690, 692, 694, 738, 747, 751, 753, 755, 757, 760, 762, 765, 766, 767, 768, 769, 770, 771, 772, 774, 776, 777, 779, 780, 781, 786, 790, 791, 792, 793, 794, 796, 797, 798, 799, 800, 801, 804, 820, 821, 826, 871], "axhlin": [8, 9, 10, 11, 13, 19, 21, 78, 79, 109, 110, 142, 158, 193, 237, 550, 784], "xlabel": [8, 9, 15, 16, 19, 22, 28, 29, 36, 38, 40, 52, 57, 66, 70, 79, 87, 90, 94, 104, 105, 107, 111, 124, 135, 149, 158, 175, 178, 179, 192, 199, 208, 219, 222, 224, 232, 236, 237, 871], "ylabel": [8, 9, 15, 16, 19, 22, 28, 29, 36, 38, 40, 52, 57, 66, 67, 70, 79, 87, 90, 94, 104, 105, 107, 124, 135, 149, 158, 175, 178, 179, 192, 199, 204, 208, 219, 222, 224, 232, 236, 237], "legend": [8, 9, 10, 11, 12, 16, 19, 21, 22, 28, 36, 37, 38, 40, 44, 66, 68, 93, 94, 107, 108, 124, 135, 142, 143, 148, 160, 164, 170, 178, 192, 193, 208, 211, 212, 232, 236, 237, 255, 260, 261, 262, 263, 738, 751, 761, 762, 768, 771, 776, 871], "loc": [8, 10, 16, 36, 38, 68, 109, 120, 124, 138, 141, 142, 143, 167, 174, 178, 181, 208, 236, 265, 325, 589, 761, 808, 853, 856], "zoltan": [8, 193, 240, 403], "kole": [8, 193, 240, 403], "quantit": [8, 160, 193, 240, 550, 850, 852], "abnorm": [8, 193, 240], "clinic": [8, 68, 69, 76, 109, 149, 193, 197, 201, 202, 240, 517, 549, 550, 558, 559, 564, 578, 593, 720, 723, 847, 853], "electroencephalographi": [8, 57, 69, 76, 109, 149, 193, 197, 201, 240, 271, 549, 559, 593, 853], "neurophysiologi": [8, 68, 69, 76, 109, 149, 193, 197, 201, 202, 240, 549, 550, 558, 559, 564, 593, 720, 723, 853], "79": [8, 15, 16, 19, 34, 40, 44, 46, 78, 100, 105, 109, 111, 116, 135, 155, 156, 167, 174, 179, 182, 193, 197, 206, 210, 222, 223, 226, 227, 240, 396, 423], "440": [8, 78, 193, 222, 227, 240], "447": [8, 193, 222, 227, 240], "1991": [8, 193, 240, 403], "1016": [8, 12, 13, 18, 19, 21, 34, 41, 43, 58, 68, 69, 72, 73, 76, 91, 98, 109, 110, 116, 118, 123, 142, 149, 153, 160, 178, 193, 197, 199, 201, 202, 222, 223, 227, 240, 262, 263, 266, 271, 272, 292, 349, 355, 382, 407, 409, 410, 411, 421, 466, 469, 517, 518, 528, 532, 549, 550, 558, 559, 564, 582, 585, 593, 647, 650, 652, 677, 678, 680, 681, 683, 684, 720, 723, 755, 845, 847, 850, 853], "0013": [8, 69, 76, 109, 149, 193, 197, 201, 240, 549, 559, 593, 853], "4694": [8, 19, 69, 76, 109, 149, 193, 197, 201, 240, 549, 559, 593, 853], "91": [8, 13, 19, 26, 34, 40, 44, 46, 49, 69, 76, 77, 105, 106, 109, 111, 114, 149, 154, 156, 167, 174, 179, 180, 193, 197, 204, 205, 206, 207, 208, 222, 223, 226, 227, 240, 330], "90163": [8, 193, 240], "gerwin": [8, 202, 240, 374, 847], "schalk": [8, 202, 240, 374, 847], "denni": [8, 202, 240, 374, 847], "mcfarland": [8, 202, 240, 374, 847], "thilo": [8, 202, 240, 374, 847], "hinterberg": [8, 202, 240, 374, 847], "niel": [8, 202, 240, 374, 847], "birbaum": [8, 202, 240, 374, 847], "jonathan": [8, 98, 202, 223, 240, 374, 387, 847, 871], "wolpaw": [8, 202, 240, 374, 847], "bci2000": [8, 202, 240, 374, 847], "bci": [8, 15, 85, 109, 157, 193, 202, 240, 374, 551, 847, 859, 871], "ieee": [8, 15, 39, 45, 50, 69, 80, 81, 85, 114, 135, 142, 160, 178, 193, 202, 235, 240, 255, 260, 261, 262, 263, 292, 293, 295, 349, 374, 397, 403, 427, 468, 469, 470, 471, 472, 550, 551, 559, 586, 692, 694, 708, 720, 723, 846, 847, 850, 853], "transact": [8, 15, 50, 69, 81, 85, 114, 135, 160, 178, 193, 202, 235, 240, 255, 260, 261, 262, 263, 292, 293, 349, 374, 397, 403, 468, 470, 471, 472, 517, 550, 551, 559, 586, 692, 694, 708, 846, 847, 850, 853], "biomed": [8, 15, 69, 81, 85, 114, 135, 178, 187, 193, 202, 219, 240, 251, 292, 293, 374, 397, 403, 550, 551, 559, 586, 846, 847, 853, 858], "engin": [8, 15, 69, 80, 81, 85, 114, 178, 193, 202, 203, 204, 219, 240, 292, 293, 374, 397, 403, 517, 550, 551, 559, 586, 830, 836, 846, 847, 853], "1034": [8, 13, 193, 202, 240, 374, 643, 847], "1043": [8, 167, 193, 202, 240, 374, 847], "2004": [8, 68, 202, 240, 349, 374, 558, 650, 847, 853], "1109": [8, 15, 39, 45, 50, 69, 80, 81, 85, 114, 135, 142, 160, 178, 193, 202, 235, 240, 255, 260, 261, 262, 263, 292, 293, 295, 349, 374, 397, 403, 427, 468, 469, 470, 471, 472, 550, 551, 559, 586, 692, 694, 708, 846, 847, 850, 853], "tbme": [8, 15, 69, 81, 85, 114, 193, 202, 240, 374, 403, 550, 551, 559, 586, 846, 847], "827072": [8, 202, 240, 374, 847], "ari": [8, 135, 202, 240, 374, 396, 397, 837, 847, 871], "l": [8, 19, 43, 48, 96, 123, 124, 132, 135, 142, 158, 170, 186, 192, 202, 205, 207, 227, 230, 236, 237, 240, 251, 252, 272, 355, 374, 396, 397, 409, 517, 550, 558, 650, 720, 723, 756, 762, 783, 836, 845, 847, 853, 858, 871], "goldberg": [8, 135, 202, 240, 374, 396, 397, 847], "lui": [8, 135, 202, 240, 374, 396, 397, 847], "amar": [8, 135, 202, 240, 374, 396, 397, 847], "leon": [8, 135, 202, 240, 374, 396, 397, 847], "glass": [8, 31, 34, 39, 43, 58, 59, 135, 179, 202, 240, 268, 274, 275, 276, 374, 396, 397, 797, 801, 802, 847], "jeffrei": [8, 135, 202, 240, 374, 396, 397, 517, 847], "hausdorff": [8, 135, 202, 240, 374, 396, 397, 847], "plamen": [8, 135, 202, 240, 374, 396, 397, 847], "ivanov": [8, 135, 202, 240, 374, 396, 397, 847], "roger": [8, 10, 135, 202, 240, 374, 396, 397, 847], "joseph": [8, 135, 202, 240, 374, 396, 397, 847], "mietu": [8, 135, 202, 240, 374, 396, 397, 847], "georg": [8, 135, 202, 240, 374, 396, 397, 847], "moodi": [8, 135, 202, 240, 374, 396, 397, 847], "chung": [8, 135, 202, 240, 374, 396, 397, 847], "kang": [8, 135, 202, 240, 374, 396, 397, 847], "peng": [8, 135, 202, 240, 374, 396, 397, 847], "h": [8, 93, 98, 109, 124, 132, 135, 199, 201, 202, 213, 240, 252, 254, 255, 260, 261, 316, 374, 396, 397, 439, 442, 549, 593, 650, 672, 688, 703, 768, 779, 845, 846, 847, 853, 871], "eugen": [8, 135, 202, 240, 374, 396, 397, 847], "stanlei": [8, 135, 202, 240, 374, 396, 397, 847], "physiobank": [8, 135, 202, 240, 374, 396, 397, 847], "physiotoolkit": [8, 135, 202, 240, 374, 396, 397, 847], "research": [8, 68, 135, 139, 142, 149, 153, 166, 196, 202, 219, 237, 240, 251, 374, 396, 397, 518, 582, 672, 838, 845, 847, 849, 858], "resourc": [8, 120, 135, 142, 200, 202, 240, 374, 396, 397, 829, 847, 854, 859], "complex": [8, 36, 111, 132, 133, 135, 202, 222, 240, 255, 260, 261, 262, 263, 286, 374, 396, 397, 416, 470, 471, 472, 521, 642, 693, 707, 718, 719, 721, 826, 830, 847, 856, 871], "circul": [8, 135, 202, 240, 374, 396, 397, 847], "2000": [8, 10, 135, 198, 199, 201, 202, 204, 211, 240, 255, 260, 261, 262, 263, 374, 396, 397, 403, 432, 470, 471, 472, 473, 517, 549, 669, 846, 847, 853], "1161": [8, 135, 202, 206, 240, 374, 396, 397, 847], "cir": [8, 135, 202, 240, 374, 396, 397, 847], "101": [8, 41, 55, 68, 111, 135, 156, 167, 188, 202, 204, 206, 222, 226, 240, 374, 396, 397, 411, 847, 856], "e215": [8, 135, 202, 240, 374, 396, 397, 847], "346": [8, 20, 40, 54, 55, 142, 167, 206, 222, 227], "decoding_csp_eeg": [8, 20], "decomposit": [9, 11, 14, 17, 20, 27, 28, 29, 30, 37, 38, 43, 46, 51, 56, 59, 72, 74, 100, 101, 104, 105, 107, 109, 110, 121, 164, 170, 179, 193, 196, 202, 203, 218, 222, 224, 225, 227, 230, 232, 236, 237, 240, 255, 260, 262, 263, 265, 267, 268, 271, 274, 275, 276, 403, 410, 411, 416, 417, 437, 470, 484, 511, 531, 550, 564, 576, 696, 699, 708, 716, 718, 719, 721, 722, 846, 853, 856, 871], "iter": [9, 19, 27, 34, 35, 42, 43, 55, 58, 80, 87, 90, 91, 92, 101, 109, 131, 132, 135, 155, 167, 170, 177, 178, 192, 202, 213, 219, 226, 230, 231, 232, 240, 254, 255, 257, 260, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 284, 287, 290, 297, 342, 349, 355, 360, 406, 413, 420, 444, 466, 467, 468, 469, 470, 471, 472, 502, 516, 517, 519, 521, 524, 550, 553, 560, 564, 576, 610, 640, 655, 675, 676, 677, 678, 680, 681, 690, 692, 693, 694, 726, 728, 738, 751, 797, 853, 871], "roll": [9, 106, 121, 738, 806], "laura": [9, 193, 240, 871], "gwilliam": [9, 193, 240, 871], "nyu": [9, 36, 98, 117, 131, 169, 222, 871], "jean": [9, 10, 11, 12, 13, 14, 16, 18, 69, 76, 183, 193, 197, 202, 240, 550, 559, 650, 846, 853, 871], "remi": [9, 10, 11, 12, 13, 14, 16, 18, 871], "king": [9, 10, 11, 12, 13, 14, 16, 18, 193, 240, 871], "jeanremi": [9, 10, 11, 12, 13, 14, 16, 18], "alex": [9, 37, 68, 69, 80, 111, 112, 113, 117, 132, 133, 134, 183, 226, 227, 858, 871], "barach": [9, 12, 15, 85, 193, 240, 403, 871], "create_info": [9, 14, 15, 19, 62, 64, 68, 111, 122, 157, 186, 188, 217, 261, 263, 265, 403, 410, 472, 609, 861, 871], "time_frequ": [9, 21, 32, 33, 89, 100, 108, 109, 111, 164, 198, 199, 219, 224, 225, 226, 227, 235, 236, 408, 411, 416, 460, 861, 869, 871], "averagetfr": [9, 109, 111, 259, 262, 263, 312, 428, 460, 693, 713, 721, 722, 723, 724, 798, 861, 871], "stratifiedkfold": [9, 10, 15, 16, 420, 871], "make_pipelin": [9, 10, 11, 12, 13, 15, 18, 135, 193, 418], "labelencod": 9, "motor": [9, 17, 20, 27, 73, 80, 106, 109, 142, 179, 193, 208, 255, 260, 265, 307, 323, 358, 374, 403, 410, 432, 470, 486, 547, 871], "imageri": [9, 17, 20, 27, 109, 193, 255, 260, 265, 307, 323, 358, 374, 403, 432, 470, 486, 547, 871], "n_split": [9, 10, 12, 15, 16, 19, 420], "speed": [9, 10, 11, 19, 32, 40, 41, 43, 49, 72, 79, 80, 81, 91, 100, 106, 110, 132, 133, 139, 143, 149, 156, 159, 160, 163, 170, 177, 178, 181, 192, 193, 196, 202, 204, 206, 223, 224, 230, 232, 255, 260, 261, 267, 268, 271, 272, 274, 275, 276, 408, 409, 415, 459, 470, 471, 472, 523, 524, 550, 633, 707, 709, 738, 768, 770, 791, 796, 801, 828, 830, 850, 854, 859, 871], "shuffl": [9, 10, 12, 15, 227, 871], "n_cycl": [9, 104, 107, 109, 111, 164, 199, 224, 225, 226, 227, 236, 416, 533, 534, 696, 699, 705, 717, 718, 719, 721, 722], "mani": [9, 43, 68, 72, 109, 117, 118, 124, 138, 140, 144, 147, 148, 149, 150, 153, 156, 158, 159, 160, 164, 165, 169, 170, 175, 188, 192, 196, 197, 198, 199, 200, 202, 203, 204, 217, 219, 222, 235, 237, 251, 252, 253, 255, 260, 261, 265, 270, 272, 275, 276, 292, 343, 349, 427, 432, 445, 462, 550, 639, 675, 685, 690, 691, 738, 754, 764, 781, 783, 784, 826, 828, 830, 833, 834, 846, 848, 850, 853, 855, 857, 859, 871], "cycl": [9, 104, 111, 182, 199, 236, 237, 255, 260, 261, 336, 416, 470, 471, 472, 533, 534, 550, 696, 699, 705, 717, 718, 719, 721, 722, 762, 768, 771, 783, 791, 830, 871], "min_freq": 9, "max_freq": 9, "n_freq": [9, 111, 192, 226, 236, 408, 416, 670, 680, 681, 690, 691, 692, 693, 707, 708, 709, 710, 716, 718, 719, 721, 722], "bin": [9, 22, 27, 68, 95, 99, 117, 120, 140, 142, 169, 199, 207, 224, 230, 235, 237, 255, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 286, 292, 411, 470, 471, 472, 478, 569, 601, 670, 674, 675, 677, 678, 680, 681, 689, 691, 692, 694, 762, 770, 774, 829, 830, 833, 834, 835, 836, 841, 853, 871], "tupl": [9, 112, 148, 168, 169, 170, 192, 202, 211, 213, 226, 227, 254, 255, 257, 258, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 283, 284, 297, 308, 317, 318, 355, 379, 403, 410, 418, 436, 437, 440, 443, 470, 471, 472, 479, 481, 482, 483, 486, 487, 488, 492, 496, 505, 507, 516, 533, 534, 549, 550, 553, 558, 564, 566, 567, 577, 602, 608, 609, 641, 642, 643, 655, 667, 675, 677, 678, 680, 681, 682, 690, 692, 693, 694, 702, 708, 710, 726, 728, 738, 739, 747, 752, 755, 757, 758, 760, 762, 766, 767, 769, 770, 772, 774, 776, 777, 779, 781, 784, 786, 790, 792, 793, 796, 797, 798, 800, 801, 802, 806, 871], "linspac": [9, 19, 39, 41, 66, 68, 110, 114, 134, 139, 148, 170, 175, 192, 196, 203, 204, 217, 218, 237], "freq_rang": [9, 237], "infer": [9, 10, 42, 43, 110, 154, 163, 168, 199, 212, 213, 223, 227, 228, 229, 240, 255, 260, 261, 262, 263, 266, 267, 268, 271, 274, 275, 276, 292, 293, 313, 317, 324, 349, 353, 354, 358, 363, 364, 365, 403, 410, 433, 434, 436, 446, 447, 463, 466, 468, 469, 470, 471, 472, 479, 481, 486, 528, 550, 621, 668, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 683, 690, 692, 694, 751, 776, 778, 785, 791, 800, 824, 826, 837, 853, 871], "gap": [9, 124, 240, 468, 469, 470, 471, 472, 791, 853, 871], "window_spac": 9, "centered_w_tim": 9, "n_window": [9, 569], "len": [9, 10, 15, 16, 18, 19, 28, 38, 40, 41, 42, 44, 46, 51, 62, 66, 68, 70, 72, 87, 90, 97, 111, 114, 135, 138, 141, 142, 154, 157, 166, 174, 176, 181, 183, 189, 192, 196, 197, 198, 199, 200, 202, 204, 205, 207, 208, 212, 218, 219, 222, 223, 224, 226, 227, 237, 254, 255, 257, 258, 260, 261, 262, 263, 265, 269, 271, 272, 273, 284, 297, 348, 355, 405, 413, 438, 441, 470, 471, 472, 516, 639, 670, 692, 693, 726, 738, 743, 769, 791, 799, 800, 871], "instanti": [9, 142, 170, 193, 202, 255, 257, 258, 259, 260, 261, 265, 269, 270, 272, 307, 472, 692, 694, 740, 751, 871], "encod": [9, 19, 124, 141, 142, 148, 164, 166, 170, 186, 192, 193, 206, 207, 208, 240, 246, 265, 341, 409, 479, 486, 492, 493, 494, 602, 824, 826, 853, 859, 871], "le": 9, "59999": [9, 182], "374": [9, 78, 167, 206, 211, 222, 227], "loop": [9, 41, 59, 106, 117, 133, 135, 147, 175, 179, 197, 227, 232, 237, 240, 397, 424, 561, 569, 578, 738, 847, 853, 871], "init": [9, 369, 830, 835], "freq_scor": 9, "fmin": [9, 100, 101, 105, 110, 111, 113, 130, 135, 235, 236, 237, 255, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 408, 470, 471, 472, 523, 524, 690, 691, 692, 693, 694, 695, 697, 698, 700, 707, 708, 709, 710, 720, 723, 738, 757, 792, 796, 798, 801, 802, 871], "fmax": [9, 72, 100, 101, 105, 110, 111, 113, 130, 135, 164, 196, 200, 235, 236, 237, 255, 260, 261, 262, 263, 408, 470, 471, 472, 523, 524, 690, 691, 692, 693, 694, 695, 697, 698, 700, 707, 708, 709, 710, 720, 723, 738, 753, 792, 798, 871], "enumer": [9, 10, 15, 19, 28, 38, 39, 46, 69, 91, 93, 101, 104, 109, 111, 132, 133, 134, 144, 147, 148, 149, 157, 192, 199, 202, 204, 208, 218, 227, 232, 237], "being": [9, 44, 111, 113, 124, 134, 158, 164, 169, 170, 197, 199, 204, 205, 207, 211, 219, 222, 224, 227, 255, 257, 260, 261, 262, 263, 266, 267, 268, 270, 271, 274, 275, 276, 357, 360, 437, 447, 461, 470, 471, 472, 505, 550, 569, 571, 613, 690, 692, 694, 738, 756, 769, 772, 774, 775, 792, 797, 802, 830, 852, 853, 871], "w_size": 9, "isol": [9, 44, 111, 198, 202, 204, 871], "raw_filt": [9, 111, 139, 200, 202], "pad": [9, 15, 111, 124, 222, 227, 237, 255, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 316, 438, 441, 442, 443, 470, 471, 472, 708, 710, 871], "drop_bad": [9, 16, 140, 149, 189, 198, 255, 260, 261, 309, 460, 550, 692, 693, 853, 871], "fold": [9, 10, 12, 15, 16, 26, 135, 266, 271, 420, 653, 656], "roc_auc": [9, 11, 13, 193, 406, 413], "axi": [9, 10, 12, 14, 15, 16, 19, 21, 22, 28, 31, 34, 44, 57, 59, 66, 68, 70, 81, 87, 93, 97, 101, 104, 106, 107, 109, 110, 111, 112, 113, 114, 116, 124, 130, 132, 135, 138, 139, 140, 142, 148, 149, 154, 158, 164, 170, 179, 181, 183, 189, 192, 193, 197, 199, 211, 214, 217, 222, 225, 227, 230, 232, 236, 237, 252, 255, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 271, 274, 275, 276, 283, 309, 316, 360, 403, 410, 416, 423, 443, 462, 470, 471, 472, 482, 549, 550, 564, 643, 667, 669, 677, 678, 680, 681, 684, 690, 692, 694, 720, 723, 738, 751, 754, 755, 762, 769, 770, 771, 772, 773, 774, 775, 777, 778, 779, 781, 783, 785, 786, 790, 791, 792, 793, 798, 799, 800, 836, 853, 871], "701": [9, 133], "205": [9, 88, 109, 167, 182, 222, 226], "281": [9, 109, 167, 206, 227], "629": [9, 53, 55, 103, 107, 227], "17": [9, 10, 11, 12, 13, 19, 26, 28, 33, 34, 40, 42, 44, 46, 49, 55, 59, 60, 69, 78, 81, 82, 87, 88, 100, 105, 106, 109, 111, 112, 120, 135, 137, 143, 146, 149, 154, 155, 156, 158, 167, 169, 170, 174, 175, 178, 179, 180, 181, 182, 183, 185, 186, 189, 193, 205, 206, 217, 222, 223, 224, 226, 227, 230, 232, 235, 239, 240, 255, 260, 261, 262, 263, 267, 270, 271, 272, 273, 275, 276, 284, 292, 349, 351, 354, 355, 365, 403, 410, 412, 470, 471, 472, 517, 523, 524, 578, 643, 655, 678, 690, 755, 796, 802, 847, 853], "165": [9, 144, 167, 199, 202, 206, 208, 222, 226, 227, 240], "031": [9, 125, 138, 147, 167, 182, 219], "581": [9, 13, 147, 152, 206, 227], "139": [9, 19, 38, 55, 167, 219, 227, 273, 871], "869": [9, 206, 227], "549": [9, 205, 227, 240], "22": [9, 11, 13, 14, 15, 16, 19, 21, 28, 31, 33, 34, 38, 39, 43, 44, 46, 55, 65, 78, 81, 82, 85, 87, 100, 105, 106, 107, 109, 111, 116, 127, 130, 148, 150, 152, 167, 169, 174, 178, 181, 186, 189, 192, 193, 195, 202, 205, 206, 219, 221, 222, 223, 224, 226, 227, 230, 231, 232, 235, 240, 255, 260, 261, 262, 263, 272, 273, 307, 330, 334, 335, 355, 397, 442, 470, 471, 472, 491, 505, 510, 550, 553, 592, 609, 626, 635, 685, 708, 710, 754, 782, 792, 829, 853], "121": [9, 40, 55, 138, 143, 164, 167, 168, 174, 222, 226, 255, 260, 261, 426], "756": [9, 189, 191, 192], "523": [9, 206, 227], "bar": [9, 132, 141, 148, 169, 181, 213, 214, 237, 255, 257, 260, 261, 262, 263, 269, 270, 403, 410, 470, 471, 472, 549, 550, 690, 692, 694, 738, 762, 767, 768, 769, 770, 774, 777, 781, 785, 790, 791, 793, 798, 807, 853, 871], "width": [9, 111, 124, 132, 158, 170, 196, 199, 200, 214, 222, 237, 255, 258, 260, 261, 262, 263, 267, 268, 270, 271, 274, 275, 276, 308, 316, 321, 405, 414, 439, 441, 442, 462, 470, 471, 472, 582, 690, 705, 717, 720, 723, 738, 747, 766, 767, 794, 796, 797, 801, 826, 850, 853, 871], "edgecolor": [9, 10, 236], "black": [9, 21, 44, 46, 47, 49, 109, 140, 149, 158, 188, 204, 208, 255, 257, 258, 260, 261, 262, 263, 267, 268, 269, 271, 274, 275, 276, 470, 471, 472, 549, 550, 564, 690, 692, 694, 738, 751, 754, 755, 766, 770, 772, 776, 777, 781, 789, 790, 792, 793, 796, 798, 799, 800, 801, 871], "xtick": [9, 15, 19, 87, 124, 192, 199, 222], "tf_score": 9, "center": [9, 36, 44, 66, 68, 77, 87, 92, 109, 117, 118, 132, 149, 154, 156, 158, 168, 183, 196, 198, 199, 200, 204, 222, 237, 251, 252, 262, 263, 266, 271, 300, 412, 482, 503, 514, 550, 559, 639, 642, 647, 653, 656, 690, 728, 738, 742, 778, 789, 797, 847, 853, 858, 871], "w_tmin": 9, "w_tmax": 9, "av_tfr": 9, "newaxi": [9, 15, 28, 97, 114, 227, 230, 231, 232, 738], "white": [9, 24, 26, 40, 51, 106, 109, 113, 118, 123, 124, 130, 132, 133, 140, 154, 156, 157, 158, 174, 176, 188, 207, 218, 222, 227, 252, 255, 258, 260, 261, 262, 263, 266, 267, 268, 271, 273, 274, 275, 276, 363, 461, 470, 471, 472, 503, 536, 537, 595, 613, 638, 690, 692, 694, 738, 754, 756, 766, 776, 778, 796, 799, 801, 826, 846, 871], "vmin": [9, 13, 19, 85, 104, 109, 111, 113, 114, 134, 139, 158, 174, 192, 193, 207, 208, 222, 224, 225, 236, 255, 257, 260, 261, 262, 263, 269, 403, 410, 470, 471, 472, 549, 550, 690, 692, 694, 738, 755, 769, 770, 777, 781, 790, 793, 798, 799, 800, 871], "red": [9, 53, 58, 68, 77, 78, 80, 97, 109, 129, 130, 140, 142, 148, 154, 158, 168, 176, 179, 188, 192, 196, 197, 200, 204, 207, 208, 214, 227, 230, 236, 237, 255, 256, 257, 258, 260, 261, 262, 263, 266, 269, 403, 410, 470, 471, 472, 549, 550, 564, 612, 690, 692, 694, 738, 753, 755, 762, 763, 766, 769, 770, 772, 777, 781, 790, 793, 798, 800, 826, 830, 871], "21": [9, 11, 19, 20, 28, 33, 34, 40, 43, 44, 45, 46, 63, 68, 78, 82, 100, 105, 106, 109, 111, 124, 127, 131, 135, 143, 148, 153, 158, 160, 162, 166, 167, 169, 170, 181, 186, 189, 192, 193, 206, 211, 218, 221, 222, 223, 224, 226, 227, 231, 232, 237, 240, 255, 257, 258, 260, 261, 262, 263, 267, 268, 269, 270, 271, 273, 274, 275, 276, 281, 292, 293, 353, 355, 397, 403, 437, 442, 456, 470, 471, 472, 505, 510, 530, 549, 550, 558, 560, 561, 564, 566, 567, 569, 578, 613, 621, 635, 639, 682, 689, 690, 692, 694, 755, 756, 766, 770, 771, 772, 773, 777, 778, 779, 783, 790, 791, 793, 795, 796, 798, 800, 804, 821, 824, 828, 829, 847, 853], "406": [9, 20, 42, 55, 78, 222, 227], "decoding_csp_timefreq": [9, 20], "supervis": [10, 18, 85, 135, 403, 420], "class": [10, 16, 19, 59, 67, 85, 91, 92, 111, 112, 135, 138, 140, 147, 149, 155, 163, 164, 166, 169, 170, 173, 192, 198, 199, 202, 211, 214, 217, 227, 238, 239, 249, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 284, 297, 307, 308, 360, 388, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 444, 470, 471, 472, 501, 516, 549, 550, 551, 640, 670, 690, 691, 692, 693, 694, 707, 708, 709, 710, 726, 727, 728, 733, 734, 735, 738, 739, 740, 749, 811, 826, 830, 838, 839, 846, 848, 853, 854, 856, 861, 862, 871], "rel": [10, 24, 32, 33, 41, 60, 73, 83, 106, 109, 110, 124, 132, 135, 138, 140, 142, 154, 164, 166, 168, 187, 196, 199, 200, 204, 207, 208, 213, 236, 237, 252, 253, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 304, 353, 360, 409, 424, 427, 439, 470, 471, 472, 514, 550, 576, 592, 628, 630, 646, 683, 690, 693, 695, 696, 697, 708, 710, 738, 751, 756, 771, 776, 785, 789, 791, 799, 811, 826, 830, 846, 853, 856, 871], "character": [10, 13, 193, 240, 550, 652, 784, 853], "confus": [10, 15, 135, 142, 650, 830], "serv": [10, 166, 212, 227, 255, 257, 260, 261, 262, 263, 269, 277, 403, 410, 470, 471, 472, 549, 550, 564, 690, 692, 693, 694, 736, 754, 755, 770, 777, 781, 790, 793, 798, 800, 830, 852, 853], "proxi": [10, 202, 206], "mental": [10, 13, 193, 240], "rsa": [10, 837, 847, 871], "24": [10, 11, 13, 19, 21, 26, 28, 33, 34, 37, 44, 45, 46, 55, 63, 78, 100, 103, 105, 106, 111, 120, 135, 142, 155, 162, 167, 169, 172, 179, 181, 183, 185, 187, 189, 193, 206, 207, 208, 219, 222, 223, 224, 226, 227, 231, 232, 237, 240, 242, 254, 255, 258, 260, 261, 262, 263, 265, 266, 270, 273, 292, 338, 344, 356, 358, 383, 411, 433, 434, 435, 436, 446, 468, 470, 471, 472, 479, 486, 493, 498, 510, 517, 550, 553, 685, 689, 690, 692, 693, 694, 727, 728, 735, 738, 748, 756, 761, 768, 785, 791, 792, 800, 803, 807, 817, 846, 853], "imag": [10, 16, 27, 30, 32, 34, 39, 43, 45, 54, 58, 68, 85, 109, 117, 119, 121, 124, 125, 127, 132, 134, 141, 144, 147, 153, 154, 157, 158, 164, 168, 174, 178, 180, 188, 189, 196, 199, 202, 203, 204, 205, 219, 222, 223, 225, 226, 227, 236, 237, 240, 251, 255, 257, 260, 261, 262, 263, 265, 269, 270, 272, 273, 275, 276, 285, 286, 287, 292, 293, 298, 302, 307, 308, 316, 333, 348, 355, 361, 382, 403, 410, 463, 466, 468, 469, 470, 471, 472, 480, 491, 517, 549, 550, 564, 605, 639, 645, 646, 647, 648, 649, 650, 651, 652, 690, 692, 694, 727, 728, 738, 739, 741, 754, 755, 756, 769, 770, 774, 776, 777, 781, 783, 790, 793, 798, 799, 800, 802, 806, 808, 811, 826, 831, 836, 837, 847, 856, 858, 871], "92": [10, 13, 19, 33, 34, 43, 78, 100, 109, 111, 135, 141, 160, 167, 178, 193, 198, 206, 222, 223, 224, 226, 227, 231, 232, 514, 853], "human": [10, 19, 32, 57, 91, 110, 123, 142, 149, 153, 176, 178, 192, 219, 240, 255, 260, 261, 262, 263, 271, 286, 292, 368, 381, 405, 409, 414, 439, 441, 442, 470, 471, 472, 555, 679, 826, 827, 837, 846, 847, 859], "anim": [10, 134, 262, 263, 847, 871], "inanim": [10, 847], "bodi": [10, 204, 205, 728, 847], "part": [10, 116, 124, 132, 138, 140, 142, 149, 153, 156, 158, 159, 160, 169, 180, 196, 199, 200, 204, 211, 219, 240, 251, 260, 262, 263, 265, 266, 275, 276, 292, 293, 349, 353, 354, 363, 364, 365, 403, 410, 432, 446, 447, 466, 468, 469, 471, 473, 491, 523, 524, 528, 618, 667, 677, 678, 680, 681, 690, 693, 738, 755, 774, 778, 830, 831, 852, 853, 854, 856, 859, 871], "6gb": 10, "build": [10, 12, 21, 44, 153, 170, 173, 189, 196, 197, 199, 222, 230, 231, 232, 828, 834, 836, 852, 859, 871], "jaakko": [10, 189, 871], "leppakanga": [10, 189, 871], "jaeilepp": [10, 189], "student": [10, 189, 830], "jyu": [10, 189], "panda": [10, 14, 98, 109, 138, 141, 145, 146, 147, 149, 163, 169, 188, 189, 207, 211, 223, 235, 254, 255, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 427, 470, 471, 472, 605, 676, 689, 690, 692, 693, 694, 829, 830, 853, 871], "read_csv": [10, 188, 189], "standardscal": [10, 11, 13, 18, 193, 412], "linear_model": [10, 11, 12, 13, 15, 18, 193, 859], "logisticregress": [10, 11, 13, 15, 193, 407, 418], "metric": [10, 15, 27, 35, 55, 87, 114, 135, 193, 257, 262, 264, 265, 271, 359, 406, 409, 413, 516, 528, 529, 532, 548, 550, 599, 608, 610, 738, 784, 852, 861, 866, 871], "roc_auc_scor": [10, 406, 413, 861], "manifold": [10, 114, 116, 755], "md": [10, 240, 643], "visual_92_categori": [10, 847, 861, 871], "stimulu": [10, 13, 32, 33, 48, 67, 69, 71, 78, 79, 87, 90, 104, 117, 138, 140, 141, 142, 144, 147, 160, 164, 165, 166, 167, 178, 181, 186, 189, 192, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 211, 212, 213, 214, 219, 226, 232, 237, 252, 254, 255, 260, 261, 262, 263, 265, 309, 341, 349, 409, 427, 432, 470, 471, 472, 547, 553, 655, 690, 692, 693, 694, 826, 847, 853, 871], "fname": [10, 12, 21, 52, 64, 76, 83, 84, 109, 116, 117, 125, 128, 158, 168, 202, 252, 254, 255, 257, 258, 259, 260, 261, 262, 263, 267, 268, 270, 271, 272, 273, 274, 275, 276, 284, 296, 307, 308, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 346, 347, 433, 434, 435, 436, 470, 471, 472, 474, 475, 476, 477, 480, 485, 489, 490, 491, 493, 497, 498, 499, 500, 501, 502, 531, 535, 539, 540, 549, 550, 588, 589, 590, 591, 594, 596, 597, 598, 599, 600, 601, 603, 606, 607, 608, 609, 610, 611, 614, 616, 617, 618, 619, 620, 621, 623, 625, 636, 690, 691, 692, 693, 694, 711, 712, 713, 724, 726, 732, 812, 813, 814, 815, 817, 818, 819, 822, 823, 824, 825, 857, 871], "visual_stimuli": 10, "csv": [10, 120, 189, 213, 254, 325, 331, 493, 596, 871], "cond": [10, 39, 45, 58, 60, 96, 98, 148, 227, 232, 253], "restrict": [10, 28, 29, 101, 123, 140, 149, 156, 159, 164, 176, 200, 201, 204, 205, 211, 218, 222, 225, 226, 237, 255, 260, 261, 262, 263, 265, 266, 267, 268, 270, 271, 274, 275, 276, 280, 281, 292, 293, 449, 450, 470, 471, 472, 517, 518, 519, 520, 521, 523, 524, 533, 534, 542, 543, 546, 547, 548, 653, 690, 692, 693, 694, 701, 706, 857, 871], "max_trigg": 10, "row": [10, 71, 98, 109, 124, 139, 140, 141, 142, 143, 148, 164, 167, 170, 173, 189, 193, 208, 211, 222, 223, 255, 260, 261, 262, 263, 265, 267, 268, 271, 274, 275, 276, 294, 353, 363, 409, 427, 470, 471, 472, 493, 529, 532, 550, 551, 569, 675, 676, 690, 691, 692, 693, 694, 738, 764, 769, 777, 784, 853, 856, 871], "cond_tag": 10, "els": [10, 15, 28, 31, 39, 46, 91, 93, 111, 149, 158, 173, 189, 199, 204, 211, 222, 237, 255, 257, 258, 260, 261, 262, 263, 265, 269, 284, 297, 403, 410, 470, 471, 472, 509, 516, 550, 551, 639, 645, 646, 647, 648, 649, 650, 651, 652, 673, 692, 694, 718, 719, 726, 766, 770, 791, 829, 830, 854, 871], "str": [10, 30, 38, 40, 98, 125, 141, 143, 148, 169, 181, 192, 223, 237, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 512, 513, 514, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 578, 579, 581, 582, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 658, 660, 661, 662, 663, 664, 665, 666, 667, 669, 671, 673, 676, 677, 678, 679, 680, 681, 682, 683, 685, 686, 687, 688, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 706, 707, 708, 709, 710, 711, 713, 714, 718, 719, 721, 722, 723, 724, 726, 727, 728, 730, 732, 733, 734, 735, 737, 738, 741, 743, 746, 748, 750, 753, 754, 755, 756, 757, 758, 759, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 805, 807, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 830, 871], "bodypart": 10, "natur": [10, 19, 123, 170, 192, 226, 240, 381, 409, 443, 582, 847, 853, 856, 871], "n_run": 10, "sample_subject_": 10, "_tsss_mc": 10, "on_split_miss": [10, 471, 491, 871], "filenam": [10, 42, 43, 69, 71, 74, 78, 79, 80, 90, 124, 133, 138, 139, 144, 149, 154, 155, 165, 166, 170, 196, 197, 198, 200, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 219, 252, 254, 255, 257, 260, 261, 262, 263, 266, 270, 273, 284, 296, 304, 307, 346, 347, 433, 434, 436, 446, 456, 462, 470, 471, 472, 475, 490, 491, 495, 499, 501, 512, 513, 589, 594, 596, 601, 603, 605, 607, 608, 611, 612, 613, 614, 617, 619, 621, 625, 629, 636, 639, 655, 691, 711, 732, 738, 746, 791, 812, 813, 814, 816, 819, 820, 821, 824, 836, 871], "min_dur": [10, 444, 552], "002": [10, 13, 32, 118, 125, 138, 139, 140, 143, 147, 164, 167, 186, 192, 193, 198, 199, 201, 204, 211, 214, 219, 240, 444], "specif": [10, 19, 27, 42, 43, 44, 68, 102, 103, 109, 117, 124, 133, 135, 139, 141, 142, 148, 149, 153, 158, 159, 168, 169, 170, 173, 187, 188, 189, 196, 197, 199, 200, 202, 204, 205, 207, 211, 214, 219, 222, 223, 224, 227, 235, 236, 237, 240, 254, 255, 256, 257, 260, 261, 262, 263, 265, 266, 267, 268, 269, 271, 274, 275, 276, 283, 292, 307, 427, 432, 434, 438, 444, 470, 471, 472, 473, 486, 503, 526, 527, 547, 548, 549, 550, 556, 561, 564, 569, 578, 612, 618, 639, 669, 676, 690, 691, 692, 693, 694, 738, 757, 762, 769, 770, 777, 790, 791, 793, 796, 798, 799, 801, 802, 820, 826, 830, 834, 837, 845, 847, 852, 853, 854, 856, 859, 860, 871], "appel": 10, "dissimilar": 10, "rdm": 10, "cichi": [10, 240, 847], "et": [10, 16, 19, 21, 192, 199, 201, 237, 251, 255, 260, 261, 558, 853, 858, 871], "al": [10, 16, 19, 21, 192, 199, 201, 237, 255, 260, 261, 558, 853, 871], "multiclass": [10, 240, 403, 420, 871], "multinomi": 10, "logist": [10, 11, 15, 18, 193], "paper": [10, 16, 199, 203, 240, 292, 466, 517, 550, 650, 845, 853], "pairwis": [10, 46, 68, 114, 240, 558], "binari": [10, 96, 158, 193, 212, 258, 404, 420, 444, 487, 488, 494, 600, 670, 676, 688, 816, 828, 835, 836, 853, 856, 871], "roc": [10, 651], "auc": [10, 193, 651], "final": [10, 16, 19, 41, 67, 68, 80, 81, 109, 110, 111, 124, 132, 135, 138, 139, 142, 144, 148, 149, 154, 158, 160, 164, 169, 177, 179, 180, 188, 192, 197, 198, 202, 203, 204, 207, 208, 222, 224, 226, 227, 230, 232, 237, 255, 260, 261, 262, 263, 313, 324, 409, 446, 470, 471, 472, 640, 808, 830, 846, 850, 852, 871], "sake": [10, 124, 198, 226, 857], "did": [10, 11, 28, 29, 30, 37, 38, 43, 46, 51, 56, 59, 80, 101, 104, 105, 107, 121, 158, 159, 160, 164, 168, 170, 173, 174, 179, 199, 202, 204, 205, 217, 218, 230, 232, 265, 273, 848, 856, 871], "instant": [10, 13, 41, 117, 175, 181, 193, 258, 262, 263, 283, 348, 446, 664, 665, 666, 690, 695, 696, 697, 698, 699, 700, 701, 773, 775, 777], "50m": 10, "300m": 10, "focu": [10, 12, 80, 124, 142, 198, 199, 836, 871], "liblinear": [10, 11, 13, 15, 18, 193], "multi_class": [10, 15], "y_pred": [10, 12, 19, 135, 406, 407, 409, 413, 871], "probabilist": [10, 240, 349, 406, 407, 413, 853, 859], "necessari": [10, 21, 31, 71, 91, 124, 133, 144, 149, 153, 154, 156, 158, 159, 164, 167, 169, 178, 196, 198, 199, 200, 201, 202, 203, 204, 211, 212, 217, 222, 253, 255, 260, 261, 262, 263, 264, 267, 268, 271, 272, 274, 275, 276, 292, 293, 311, 320, 353, 369, 412, 427, 438, 446, 470, 471, 472, 479, 486, 490, 517, 578, 586, 596, 603, 607, 635, 654, 690, 692, 693, 694, 702, 738, 796, 801, 826, 830, 846, 847, 851, 852, 853, 856, 871], "predict_proba": [10, 406, 407, 413], "ii": [10, 15, 19, 38, 90, 96, 104, 116, 133, 157, 181, 183, 188, 192, 222, 232, 240, 267, 268, 271, 274, 275, 276, 315, 406, 413, 480, 550, 639, 676, 755, 871], "train_class": 10, "jj": 10, "im": [10, 13, 15, 22, 68, 112, 134, 193, 741, 800, 808, 871], "matshow": [10, 13], "rdbu_r": [10, 13, 16, 19, 22, 104, 111, 192, 193, 224, 225, 255, 257, 260, 261, 262, 263, 269, 403, 410, 470, 471, 472, 549, 550, 564, 690, 692, 694, 755, 769, 770, 774, 777, 781, 790, 793, 798, 799, 800, 830], "set_ytick": 10, "set_yticklabel": [10, 109], "set_xtick": [10, 237], "set_xticklabel": [10, 237], "colorbar": [10, 13, 15, 22, 68, 69, 104, 109, 111, 112, 113, 117, 124, 134, 140, 144, 148, 174, 180, 193, 204, 208, 214, 222, 223, 224, 226, 227, 255, 257, 260, 261, 262, 263, 267, 268, 269, 271, 274, 275, 276, 403, 410, 470, 471, 472, 549, 550, 564, 690, 691, 692, 694, 738, 752, 755, 757, 762, 763, 764, 769, 770, 774, 775, 777, 781, 790, 793, 796, 798, 799, 800, 801, 802, 871], "tight_layout": [10, 12, 15, 19, 38, 40, 57, 68, 70, 83, 111, 112, 117, 132, 142, 174, 179, 181, 192, 199, 204, 207, 208, 219, 222, 226, 227, 236, 871], "relat": [10, 12, 19, 27, 32, 33, 68, 75, 98, 102, 103, 109, 114, 125, 129, 142, 144, 151, 152, 153, 156, 158, 160, 163, 164, 170, 171, 176, 186, 187, 192, 193, 196, 198, 199, 201, 202, 203, 206, 207, 208, 213, 223, 230, 236, 237, 240, 255, 260, 261, 262, 263, 265, 270, 283, 309, 324, 348, 387, 409, 410, 427, 439, 444, 460, 470, 471, 472, 541, 550, 558, 605, 635, 639, 669, 690, 738, 751, 759, 762, 769, 784, 785, 791, 799, 810, 826, 828, 830, 833, 845, 847, 848, 850, 851, 852, 853, 854, 859, 871], "histor": [10, 148, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 330, 470, 471, 472, 690, 693, 853, 859], "summar": [10, 44, 110, 149, 200, 202, 211, 255, 260, 261, 267, 268, 271, 274, 275, 276, 762, 769, 846, 852, 857, 871], "dimension": [10, 148, 173, 193, 197, 203, 204, 211, 227, 230, 231, 232, 240, 262, 263, 267, 268, 271, 274, 275, 276, 349, 411, 416, 418, 550, 670, 690, 738, 772, 826, 853, 871], "reduct": [10, 17, 20, 27, 111, 189, 200, 208, 240, 255, 260, 261, 262, 263, 265, 363, 367, 402, 411, 417, 470, 471, 547, 550, 551, 578, 586, 605, 871], "multi": [10, 16, 27, 35, 45, 55, 80, 101, 123, 168, 187, 193, 199, 230, 231, 232, 240, 255, 257, 258, 260, 261, 262, 263, 264, 265, 269, 275, 297, 381, 403, 404, 408, 410, 419, 442, 444, 446, 469, 470, 471, 472, 512, 516, 517, 519, 523, 524, 528, 549, 550, 564, 597, 599, 600, 625, 690, 692, 694, 707, 709, 714, 755, 770, 777, 781, 790, 793, 798, 800, 804, 837, 853, 856, 871], "cluster": [10, 27, 95, 99, 109, 163, 223, 228, 229, 233, 234, 237, 240, 255, 260, 262, 263, 265, 271, 272, 273, 313, 348, 355, 426, 444, 471, 516, 517, 531, 547, 605, 618, 620, 625, 662, 670, 671, 673, 677, 678, 680, 681, 682, 693, 721, 738, 797, 868, 871], "togeth": [10, 42, 68, 72, 139, 147, 149, 164, 170, 173, 186, 196, 202, 204, 207, 208, 211, 217, 227, 255, 260, 261, 262, 263, 270, 279, 292, 293, 349, 353, 354, 363, 364, 365, 403, 410, 425, 446, 447, 466, 468, 469, 470, 471, 472, 494, 528, 550, 577, 604, 621, 624, 677, 678, 680, 681, 709, 710, 778, 819, 824, 826, 830, 871], "precomput": [10, 154, 179, 189, 255, 260, 261, 355, 470, 471, 472, 550, 638, 768, 785, 791, 871], "colormap": [10, 24, 57, 106, 109, 110, 113, 124, 132, 134, 140, 158, 204, 237, 255, 257, 260, 261, 262, 263, 267, 268, 269, 271, 274, 275, 276, 403, 410, 470, 471, 472, 549, 550, 564, 682, 690, 691, 692, 694, 738, 753, 755, 757, 762, 764, 769, 770, 774, 777, 780, 781, 790, 793, 796, 798, 799, 800, 801, 802, 821, 830, 871], "rainbow": 10, "sel": [10, 31, 223, 541, 544, 546, 547, 625, 691], "this_nam": 10, "scatter": [10, 44, 112, 222, 756, 871], "facecolor": [10, 46, 132, 149, 222], "scatterpoint": 10, "ncol": [10, 15, 71, 109, 117, 124, 135, 144, 149, 174, 181, 208, 262, 263, 777, 856, 871], "shepard": [10, 240], "multidimension": [10, 222, 240, 406, 413, 420], "tree": [10, 240, 856], "scienc": [10, 13, 32, 39, 98, 110, 178, 193, 219, 223, 237, 240, 251, 286, 292, 387, 468, 517, 550, 647, 652, 847, 853, 858], "210": [10, 13, 34, 78, 84, 121, 148, 167, 193, 206, 226, 227, 240], "4468": [10, 240], "390": [10, 12, 21, 78, 206, 227, 240], "398": [10, 78, 227, 240], "1980": [10, 149, 240], "1126": [10, 240], "aarr": [10, 240], "laakso": [10, 240], "garrison": [10, 240], "cottrel": [10, 240], "content": [10, 27, 102, 156, 164, 167, 170, 199, 200, 203, 208, 214, 236, 240, 255, 260, 261, 264, 270, 380, 381, 435, 501, 746, 762, 769, 826, 830, 835, 871], "assess": [10, 13, 135, 154, 160, 168, 196, 240, 517, 528, 550, 647, 652, 850, 853], "neural": [10, 18, 19, 22, 27, 32, 61, 65, 68, 69, 80, 114, 135, 149, 176, 178, 193, 196, 199, 202, 205, 219, 237, 238, 240, 265, 286, 292, 293, 367, 403, 407, 409, 410, 466, 470, 472, 550, 559, 576, 826, 831, 837, 847, 871], "philosoph": [10, 240, 517, 853], "76": [10, 13, 15, 16, 18, 19, 33, 34, 45, 46, 77, 78, 100, 105, 106, 109, 111, 116, 157, 167, 174, 189, 192, 193, 206, 222, 223, 224, 226, 227, 230, 231, 232, 240, 671, 755], "09515080050002726": [10, 240], "nikolau": [10, 240], "kriegeskort": [10, 240], "mariek": [10, 240], "mur": [10, 240], "peter": [10, 178, 235, 240, 255, 260, 261, 262, 263, 470, 471, 472, 517, 550, 692, 694, 708, 720, 723, 853, 871], "bandettini": [10, 240], "connect": [10, 37, 46, 68, 158, 164, 219, 222, 240, 266, 285, 287, 292, 293, 369, 582, 670, 677, 678, 680, 681, 686, 758, 836, 837, 842, 861, 871], "branch": [10, 240, 830], "neuro": [10, 83, 240, 871], "06": [10, 19, 20, 26, 34, 40, 43, 44, 45, 49, 51, 55, 58, 69, 73, 81, 82, 91, 97, 100, 103, 127, 153, 156, 174, 177, 179, 181, 185, 192, 199, 204, 206, 216, 222, 223, 224, 227, 232, 240, 272, 355, 411, 466, 559, 826, 829], "radoslaw": [10, 240, 847], "aud": [10, 28, 29, 36, 38, 48, 89, 96, 101, 104, 105, 148, 227, 240, 260, 762, 847], "oliva": [10, 240, 847], "resolv": [10, 178, 202, 207, 240, 701, 834, 847, 871], "recognit": [10, 45, 98, 149, 199, 240, 720, 723, 847], "455": [10, 13, 227, 240, 273, 847], "462": [10, 13, 40, 227, 240, 273, 847], "2014": [10, 12, 13, 18, 19, 39, 69, 110, 118, 149, 160, 193, 199, 240, 262, 263, 349, 407, 409, 410, 411, 421, 468, 559, 582, 672, 720, 723, 845, 847, 850], "1038": [10, 123, 192, 193, 240, 381, 409, 847], "nn": [10, 176, 240, 273, 639, 847, 856, 871], "3635": [10, 240, 847], "decoding_rsa_sgskip": [10, 20], "cortic": [11, 24, 26, 27, 31, 40, 42, 57, 75, 77, 82, 87, 91, 106, 110, 119, 127, 153, 156, 161, 163, 164, 170, 173, 176, 178, 184, 189, 197, 219, 222, 231, 240, 252, 257, 263, 264, 265, 266, 267, 268, 271, 272, 273, 274, 275, 276, 278, 280, 281, 292, 293, 355, 359, 382, 437, 448, 466, 468, 469, 471, 503, 517, 518, 519, 520, 521, 524, 528, 533, 534, 547, 548, 565, 595, 598, 599, 610, 613, 620, 647, 650, 652, 653, 654, 655, 656, 686, 738, 749, 797, 826, 828, 831, 834, 837, 847, 856, 859, 871], "univari": [11, 163, 193, 222, 223, 228, 229, 240, 255, 260, 265, 471, 547, 605, 671, 673, 674, 678, 693, 709, 721, 868, 871], "confin": [11, 46, 156, 226, 286, 853], "potenti": [11, 15, 46, 68, 69, 71, 76, 85, 98, 114, 124, 125, 139, 142, 151, 152, 163, 166, 170, 193, 197, 199, 201, 205, 222, 223, 226, 237, 240, 255, 260, 261, 262, 263, 265, 266, 271, 304, 309, 348, 355, 363, 387, 442, 459, 460, 470, 471, 472, 473, 541, 551, 558, 559, 605, 635, 653, 656, 676, 683, 753, 762, 769, 799, 810, 846, 847, 850, 852, 853, 871], "relev": [11, 12, 26, 98, 109, 123, 149, 167, 178, 193, 199, 200, 201, 208, 240, 273, 366, 410, 550, 566, 689, 781, 783, 830, 845, 846, 850, 853, 856], "eric": [11, 19, 22, 26, 33, 38, 49, 56, 64, 70, 77, 81, 90, 91, 106, 115, 117, 120, 123, 124, 126, 132, 133, 134, 153, 155, 157, 177, 178, 180, 181, 182, 189, 192, 193, 206, 222, 226, 227, 230, 231, 232, 240, 266, 271, 382, 517, 586, 655, 677, 678, 680, 681, 845, 847, 858, 871], "larson": [11, 19, 22, 26, 33, 38, 49, 56, 64, 70, 77, 81, 90, 91, 106, 115, 117, 120, 123, 124, 126, 132, 133, 134, 157, 177, 178, 180, 181, 182, 189, 192, 193, 206, 222, 226, 230, 231, 232, 240, 255, 260, 261, 262, 263, 266, 271, 382, 470, 471, 472, 586, 655, 845, 847, 858, 871], "feature_select": 11, "selectkbest": 11, "f_classif": 11, "apply_inverse_epoch": [11, 28, 44, 267, 268, 271, 274, 275, 276, 517, 518, 520, 521, 861, 871], "read_inverse_oper": [11, 28, 29, 30, 37, 38, 43, 46, 51, 56, 59, 101, 104, 105, 107, 121, 164, 179, 218, 230, 232, 535, 861], "cross_val_multiscor": [11, 193, 861, 871], "linearmodel": [11, 18, 193, 861, 871], "slidingestim": [11, 193, 420, 861, 871], "get_coef": [11, 18, 193, 861, 871], "meg_path": [11, 13, 14, 15, 16, 22, 28, 30, 31, 34, 36, 38, 39, 41, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 66, 67, 69, 70, 74, 76, 83, 84, 85, 89, 90, 91, 93, 94, 96, 97, 100, 101, 104, 105, 107, 108, 114, 115, 118, 128, 129, 130, 176, 177, 178, 179, 193, 219, 224, 225, 226, 227, 230, 231, 232], "fname_fwd": [11, 32, 33, 40, 41, 42, 46, 47, 48, 53, 57, 175, 177, 218], "sample_audvi": [11, 22, 28, 29, 30, 31, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 63, 66, 76, 83, 84, 87, 89, 90, 91, 92, 101, 104, 105, 107, 113, 116, 117, 121, 124, 128, 131, 147, 148, 164, 170, 173, 174, 175, 176, 177, 178, 179, 193, 218, 219, 230, 231, 232, 252, 255, 260, 261, 262, 263, 470, 471, 472], "sample_audvis_filt": [11, 13, 14, 15, 16, 18, 28, 41, 48, 67, 70, 71, 74, 85, 93, 94, 96, 97, 114, 118, 129, 130, 139, 143, 149, 150, 164, 167, 170, 175, 178, 193, 198, 202, 227, 230, 232, 853], "40_raw": [11, 13, 14, 15, 16, 18, 28, 41, 48, 67, 70, 71, 74, 85, 93, 94, 96, 97, 114, 118, 129, 130, 139, 143, 149, 150, 164, 167, 170, 175, 178, 193, 198, 202, 227, 230, 232, 853], "event_fnam": [11, 14, 15, 16, 18, 67, 85, 93, 94, 97, 114, 118, 129, 225, 226, 227, 230, 232], "ev": [11, 13, 14, 15, 16, 18, 28, 67, 85, 91, 93, 94, 97, 100, 101, 114, 118, 129, 138, 143, 149, 170, 198, 212, 225, 226, 227, 230, 232, 252, 605, 606, 816, 850, 871], "fname_cov": [11, 40, 47, 48, 49, 53, 54, 57, 63, 91, 174, 177, 179], "fname_inv": [11, 28, 29, 30, 37, 38, 43, 46, 56, 59, 101, 104, 105, 107, 121, 179, 218, 230, 232], "inv": [11, 28, 29, 30, 37, 38, 43, 44, 46, 51, 56, 59, 91, 101, 104, 105, 107, 121, 132, 154, 156, 158, 164, 170, 175, 176, 177, 179, 180, 189, 193, 218, 219, 230, 232, 252, 437, 522, 525, 528, 530, 531, 535, 795, 830, 846, 853, 871], "aud_r": [11, 14, 15, 41, 226], "vis_r": [11, 14, 15, 41, 85, 226], "contra": 11, "setup": [11, 15, 16, 18, 24, 42, 43, 44, 67, 68, 70, 85, 93, 94, 97, 104, 105, 107, 114, 129, 132, 153, 224, 225, 230, 232, 236, 253, 273, 319, 369, 444, 829, 830, 831, 832, 834, 836, 851, 856, 871], "read_ev": [11, 13, 14, 15, 16, 18, 28, 67, 85, 91, 93, 94, 97, 100, 101, 114, 118, 129, 138, 143, 149, 198, 212, 225, 226, 227, 230, 232, 261, 444, 602, 816, 826, 861, 871], "modifi": [11, 60, 67, 114, 132, 138, 147, 148, 149, 159, 163, 166, 167, 170, 171, 172, 180, 193, 197, 203, 205, 208, 213, 217, 222, 226, 235, 240, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 271, 272, 273, 274, 275, 276, 277, 283, 307, 335, 356, 358, 359, 360, 378, 403, 405, 407, 408, 410, 411, 412, 414, 415, 417, 418, 425, 462, 466, 470, 471, 472, 479, 486, 500, 517, 530, 542, 546, 549, 550, 572, 575, 577, 578, 579, 580, 581, 593, 626, 632, 635, 641, 642, 643, 644, 672, 683, 684, 690, 691, 692, 693, 694, 706, 708, 734, 738, 741, 754, 759, 773, 775, 791, 805, 806, 811, 838, 846, 847, 853, 856, 871], "your": [11, 31, 46, 67, 68, 91, 92, 114, 118, 124, 132, 133, 134, 138, 139, 140, 147, 149, 153, 155, 156, 157, 159, 160, 164, 165, 166, 170, 175, 179, 180, 188, 189, 192, 193, 196, 197, 198, 199, 200, 202, 203, 204, 205, 207, 208, 211, 212, 213, 222, 235, 236, 237, 252, 255, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 277, 292, 293, 304, 313, 324, 327, 330, 333, 349, 353, 354, 363, 364, 365, 382, 403, 410, 427, 444, 446, 447, 466, 468, 469, 470, 471, 472, 482, 487, 528, 536, 549, 550, 553, 560, 566, 578, 596, 602, 676, 690, 692, 693, 694, 738, 768, 775, 778, 784, 785, 791, 796, 808, 828, 833, 834, 835, 836, 837, 838, 845, 846, 847, 848, 849, 850, 851, 853, 856, 871], "2443": [11, 41, 71, 74, 85, 89, 90, 104, 105, 107, 108, 114, 118, 144, 164, 165, 166, 167, 175, 178, 193, 196, 197, 198, 203, 204, 207, 211, 212, 213, 214, 219, 224, 225, 226, 230, 232], "grad": [11, 16, 22, 28, 31, 32, 33, 34, 39, 40, 41, 44, 45, 47, 48, 49, 50, 53, 54, 57, 58, 60, 74, 76, 83, 84, 90, 91, 93, 94, 96, 97, 100, 101, 104, 106, 107, 108, 110, 111, 113, 114, 116, 117, 118, 120, 121, 124, 128, 129, 138, 140, 143, 148, 150, 154, 155, 156, 160, 164, 167, 168, 170, 174, 175, 176, 177, 178, 179, 181, 193, 197, 198, 204, 206, 207, 211, 217, 218, 219, 224, 225, 226, 230, 232, 235, 236, 252, 255, 257, 260, 261, 262, 263, 267, 268, 270, 271, 274, 275, 276, 292, 293, 306, 313, 314, 333, 349, 353, 354, 363, 364, 365, 367, 403, 410, 412, 446, 447, 466, 468, 469, 470, 471, 472, 506, 513, 528, 547, 548, 549, 550, 555, 560, 562, 563, 564, 566, 567, 569, 631, 676, 690, 692, 693, 694, 761, 762, 768, 769, 770, 772, 774, 776, 777, 778, 781, 791, 793, 794, 798, 799, 800, 826, 846, 853, 856, 871], "4000e": [11, 16, 28, 41, 44, 45, 74, 93, 94, 97, 100, 101, 104, 107, 110, 114, 118, 129, 150, 164, 175, 178, 193, 204, 224, 225, 226, 230, 232, 236, 255, 260, 261, 354, 550, 566, 567, 676, 846], "150e": [11, 16, 28, 41, 44, 93, 94, 97, 101, 104, 107, 114, 139, 140, 150, 164, 175, 178, 193, 204, 224, 225, 226, 227, 230, 232, 255, 260, 261, 270, 470, 471, 472, 768, 791, 846, 853], "v1": [11, 13, 14, 15, 16, 18, 26, 28, 29, 30, 31, 34, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 63, 66, 67, 69, 70, 71, 74, 76, 80, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 100, 101, 104, 105, 107, 108, 113, 114, 115, 116, 117, 118, 120, 121, 124, 126, 129, 130, 138, 139, 140, 144, 147, 148, 149, 150, 154, 155, 156, 158, 160, 164, 165, 166, 167, 169, 170, 174, 175, 176, 177, 178, 179, 180, 187, 193, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 211, 212, 213, 214, 218, 219, 224, 225, 226, 227, 230, 232, 255, 257, 260, 261, 262, 263, 269, 403, 410, 470, 471, 472, 549, 550, 564, 689, 690, 692, 694, 755, 770, 777, 781, 790, 793, 798, 800], "idl": [11, 13, 14, 15, 16, 18, 26, 28, 29, 41, 44, 48, 60, 66, 67, 69, 70, 71, 74, 80, 81, 85, 89, 90, 91, 93, 94, 96, 97, 100, 101, 104, 107, 108, 114, 115, 118, 120, 124, 126, 128, 129, 130, 139, 140, 144, 149, 150, 154, 155, 156, 158, 160, 164, 165, 166, 167, 170, 175, 178, 180, 181, 189, 193, 196, 200, 201, 202, 203, 204, 206, 207, 211, 214, 218, 219, 224, 225, 226, 227, 230, 232], "v2": [11, 13, 14, 15, 16, 18, 26, 28, 29, 30, 31, 34, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 63, 66, 67, 69, 70, 71, 74, 76, 80, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 100, 101, 104, 105, 107, 108, 113, 114, 115, 116, 117, 118, 120, 121, 124, 126, 129, 130, 138, 139, 140, 144, 147, 148, 149, 150, 154, 155, 156, 158, 160, 164, 165, 166, 167, 170, 174, 175, 176, 177, 178, 179, 180, 187, 193, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 211, 212, 213, 214, 218, 219, 224, 225, 226, 227, 230, 232, 240, 381, 578, 871], "v3": [11, 13, 14, 15, 16, 18, 26, 28, 29, 30, 31, 34, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 63, 66, 67, 69, 70, 71, 74, 76, 80, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 100, 101, 104, 105, 107, 108, 113, 114, 115, 116, 117, 118, 120, 121, 124, 126, 129, 130, 138, 139, 140, 144, 147, 148, 149, 150, 154, 155, 156, 158, 160, 164, 165, 166, 167, 170, 174, 175, 176, 177, 178, 179, 180, 193, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 211, 212, 213, 214, 218, 219, 224, 225, 226, 227, 230, 232], "refer": [11, 14, 22, 27, 28, 29, 30, 31, 37, 38, 40, 44, 46, 47, 48, 49, 51, 56, 59, 60, 63, 66, 67, 70, 71, 74, 75, 78, 79, 82, 83, 84, 87, 89, 90, 92, 93, 94, 96, 97, 101, 104, 105, 107, 113, 117, 121, 124, 129, 130, 143, 147, 148, 150, 154, 156, 157, 163, 164, 165, 167, 168, 170, 173, 175, 177, 179, 180, 186, 198, 206, 209, 210, 211, 218, 230, 232, 236, 237, 240, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 286, 292, 293, 295, 297, 330, 349, 354, 355, 363, 374, 378, 381, 382, 385, 386, 387, 396, 397, 403, 404, 407, 409, 410, 411, 413, 419, 421, 424, 427, 429, 442, 466, 468, 469, 470, 471, 472, 482, 513, 514, 517, 518, 528, 532, 547, 548, 549, 550, 551, 555, 558, 559, 561, 562, 563, 564, 565, 569, 576, 578, 579, 582, 585, 586, 593, 630, 632, 635, 639, 643, 647, 650, 652, 655, 672, 674, 676, 677, 678, 679, 680, 681, 683, 684, 690, 692, 693, 694, 698, 699, 700, 701, 702, 707, 708, 709, 710, 720, 723, 738, 740, 754, 755, 770, 777, 778, 781, 782, 785, 790, 792, 793, 798, 800, 810, 826, 834, 845, 852, 854, 856, 871], "6450": [11, 13, 14, 15, 16, 18, 28, 41, 48, 67, 70, 71, 74, 85, 93, 94, 96, 97, 114, 118, 129, 130, 139, 149, 150, 164, 167, 170, 175, 178, 193, 202, 227, 230, 232], "48149": [11, 13, 14, 15, 16, 18, 28, 41, 48, 67, 70, 71, 74, 85, 93, 94, 96, 97, 114, 118, 129, 130, 139, 149, 150, 164, 167, 170, 175, 178, 193, 202, 227, 230, 232], "956": [11, 13, 14, 15, 16, 18, 28, 29, 41, 44, 48, 66, 67, 69, 70, 71, 74, 77, 80, 85, 89, 90, 93, 94, 96, 97, 100, 101, 104, 107, 108, 114, 115, 118, 120, 124, 129, 130, 139, 141, 144, 149, 150, 154, 160, 164, 165, 166, 167, 170, 175, 178, 180, 193, 196, 200, 201, 202, 203, 204, 205, 211, 214, 218, 219, 224, 225, 226, 227, 230, 232], "320": [11, 13, 14, 15, 16, 18, 28, 29, 41, 44, 48, 66, 67, 69, 70, 71, 74, 78, 80, 85, 89, 90, 93, 94, 96, 97, 100, 101, 104, 105, 107, 108, 109, 114, 115, 118, 120, 124, 129, 130, 132, 138, 139, 144, 147, 149, 150, 154, 160, 164, 165, 166, 167, 169, 170, 175, 178, 180, 193, 196, 197, 200, 201, 202, 203, 204, 206, 211, 214, 218, 219, 224, 225, 226, 227, 230, 232, 402], "665": [11, 13, 14, 15, 16, 18, 28, 41, 48, 67, 70, 71, 74, 85, 87, 91, 92, 93, 94, 96, 97, 114, 118, 129, 130, 139, 149, 150, 164, 167, 170, 175, 178, 193, 202, 227, 230, 232], "41699": [11, 13, 14, 15, 16, 18, 41, 70, 71, 85, 96, 118, 130, 139, 150, 164, 193, 227], "277": [11, 13, 14, 15, 16, 18, 41, 69, 70, 71, 85, 96, 100, 103, 118, 130, 139, 150, 164, 165, 167, 180, 193, 198, 201, 211, 227], "709": [11, 13, 14, 15, 16, 18, 41, 70, 71, 85, 96, 118, 130, 139, 150, 164, 193, 227], "199": [11, 30, 31, 34, 37, 38, 39, 40, 43, 47, 49, 50, 53, 54, 56, 57, 58, 59, 76, 83, 84, 103, 113, 116, 117, 124, 147, 167, 170, 174, 176, 177, 179, 181, 189, 193, 207, 217, 226, 232], "325": [11, 71, 109, 167, 189, 191, 206], "366": [11, 13, 14, 15, 16, 18, 22, 31, 34, 39, 46, 47, 48, 49, 50, 53, 54, 55, 57, 58, 63, 66, 78, 85, 87, 89, 90, 91, 92, 118, 128, 130, 142, 147, 167, 170, 176, 177, 193, 206, 207, 218, 219, 222, 227], "143": [11, 48, 71, 82, 85, 167, 198, 206, 207, 222, 227, 240, 273], "19979521315838786": [11, 28, 60, 67, 69, 70, 77, 90, 91, 93, 94, 97, 100, 101, 104, 107, 114, 129, 140, 143, 147, 148, 150, 164, 170, 175, 178, 180, 197, 198, 201, 218, 225, 226, 230, 232], "151": [11, 21, 117, 149, 159, 162, 167, 170, 179, 202, 222, 227, 232, 273], "prior": [11, 12, 18, 27, 28, 29, 30, 33, 35, 37, 38, 39, 43, 46, 51, 55, 56, 57, 59, 87, 101, 104, 105, 107, 110, 121, 140, 147, 149, 160, 164, 170, 176, 177, 178, 179, 193, 202, 205, 207, 214, 218, 227, 230, 232, 257, 258, 262, 264, 265, 271, 292, 293, 447, 448, 466, 467, 468, 469, 470, 471, 472, 488, 516, 517, 528, 550, 560, 569, 578, 599, 608, 610, 738, 765, 766, 791, 797, 853, 856, 859, 871], "061": [11, 16, 28, 32, 44, 45, 60, 69, 70, 71, 90, 91, 93, 97, 104, 110, 114, 138, 143, 149, 150, 164, 165, 166, 167, 170, 175, 178, 196, 197, 198, 201, 202, 203, 204, 207, 211, 212, 213, 214, 222, 223, 224, 225, 226, 227, 230, 232, 236, 240, 677, 678, 680, 681], "read_cov": [11, 31, 34, 39, 40, 44, 47, 48, 49, 50, 53, 54, 57, 58, 63, 66, 89, 91, 160, 176, 177, 257, 815, 850, 861], "305": [11, 28, 29, 30, 31, 34, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 74, 76, 79, 84, 85, 91, 101, 104, 105, 106, 107, 109, 118, 121, 138, 144, 148, 150, 160, 164, 167, 170, 174, 175, 176, 177, 178, 179, 205, 218, 222, 230, 232, 240, 255, 260, 261, 262, 263, 470, 471, 472, 635], "22494": [11, 22, 28, 29, 34, 37, 38, 51, 56, 59, 101, 104, 105, 107, 121, 164, 170, 179, 230, 232], "diagon": [11, 28, 29, 30, 37, 38, 43, 46, 51, 56, 59, 68, 101, 104, 105, 107, 121, 164, 170, 178, 179, 193, 218, 219, 230, 232, 240, 257, 292, 293, 349, 365, 506, 517, 525, 853, 856, 871], "retriev": [11, 193, 202, 206, 236, 323, 324, 344, 421, 479, 486, 608, 871], "lh_data": [11, 113, 173, 232, 271, 274], "hemispher": [11, 24, 27, 39, 42, 46, 51, 119, 123, 124, 127, 139, 149, 153, 156, 173, 176, 181, 230, 231, 232, 256, 266, 267, 268, 271, 272, 273, 274, 275, 276, 355, 381, 461, 503, 595, 613, 615, 618, 638, 653, 661, 686, 737, 738, 796, 801, 821, 856, 871], "prepar": [11, 12, 19, 21, 28, 29, 30, 33, 37, 38, 39, 40, 41, 43, 44, 46, 47, 49, 53, 54, 56, 57, 58, 59, 76, 84, 87, 91, 101, 104, 105, 106, 107, 116, 121, 132, 148, 164, 175, 176, 177, 179, 180, 189, 193, 197, 204, 218, 219, 224, 230, 302, 313, 324, 363, 364, 517, 518, 519, 520, 521, 523, 524, 530, 533, 534, 579, 830, 856, 871], "seri": [11, 16, 27, 28, 29, 31, 35, 40, 55, 69, 78, 87, 90, 91, 92, 108, 135, 159, 166, 173, 178, 179, 186, 202, 203, 214, 219, 232, 237, 240, 255, 258, 259, 260, 261, 262, 263, 266, 267, 268, 271, 273, 274, 275, 276, 292, 293, 349, 406, 413, 416, 437, 470, 471, 472, 516, 517, 520, 531, 550, 555, 559, 608, 612, 676, 677, 678, 690, 691, 693, 695, 696, 697, 705, 716, 717, 751, 762, 802, 826, 828, 830, 853, 871], "time_decod": [11, 193], "31": [11, 13, 19, 25, 26, 28, 32, 33, 34, 40, 42, 44, 46, 55, 73, 78, 79, 80, 82, 100, 105, 106, 109, 111, 140, 146, 149, 157, 167, 173, 174, 178, 181, 183, 185, 189, 192, 193, 199, 200, 202, 206, 208, 210, 222, 223, 224, 226, 227, 230, 231, 232, 235, 240, 255, 260, 261, 273, 330, 528, 647, 652, 853, 871], "03": [11, 19, 24, 32, 33, 34, 48, 55, 58, 69, 71, 73, 74, 80, 81, 82, 87, 90, 91, 100, 103, 105, 106, 117, 118, 124, 127, 139, 144, 148, 149, 156, 160, 164, 165, 166, 167, 168, 172, 180, 181, 182, 193, 196, 197, 198, 200, 202, 203, 204, 205, 206, 207, 211, 212, 213, 214, 217, 218, 219, 222, 223, 224, 226, 227, 231, 232, 239, 240, 254, 258, 349, 550, 677, 678, 680, 681, 766], "85it": [11, 19, 33, 100, 106, 192, 193, 206, 222, 223, 224, 226, 227, 231], "96it": [11, 19, 100, 106, 109, 193, 222, 226, 227, 232], "92it": [11, 13, 19, 33, 105, 106, 109, 192, 206, 222, 223, 227, 230], "21it": [11, 13, 19, 100, 105, 106, 192, 193, 206, 222, 223, 225, 226, 227, 230, 232], "63it": [11, 13, 19, 33, 100, 105, 106, 193, 206, 222, 223, 226, 227, 232], "12it": [11, 19, 33, 100, 106, 178, 193, 206, 222, 223, 226, 227, 232], "47it": [11, 13, 19, 33, 100, 105, 106, 109, 192, 193, 206, 222, 223, 224, 226, 227], "60it": [11, 13, 19, 32, 100, 105, 193, 206, 223, 224, 227], "29": [11, 13, 19, 21, 24, 28, 33, 34, 40, 44, 46, 49, 78, 100, 101, 105, 106, 110, 111, 120, 135, 141, 154, 155, 156, 164, 167, 169, 172, 181, 182, 183, 193, 200, 204, 206, 207, 208, 222, 223, 224, 226, 227, 230, 231, 232, 236, 240, 273, 871], "58it": [11, 19, 100, 109, 192, 193, 206, 222, 223, 226, 227, 232], "32": [11, 12, 13, 19, 21, 28, 33, 34, 40, 41, 44, 46, 48, 67, 69, 70, 71, 72, 78, 79, 91, 96, 100, 104, 105, 106, 107, 111, 117, 120, 126, 133, 138, 139, 140, 144, 147, 149, 150, 152, 156, 160, 162, 164, 166, 167, 168, 169, 170, 174, 175, 178, 180, 181, 182, 183, 192, 193, 197, 198, 200, 201, 202, 204, 205, 206, 208, 212, 216, 217, 218, 219, 222, 223, 224, 226, 227, 231, 232, 237, 240, 253, 255, 260, 261, 383, 402, 444, 470, 471, 472, 517, 565, 836, 847, 853, 856, 857, 871], "84it": [11, 19, 32, 33, 106, 109, 192, 193, 206, 222, 223, 226, 227, 230, 231], "66it": [11, 13, 19, 100, 109, 192, 193, 222, 223, 224, 226, 227, 232], "39": [11, 12, 19, 21, 28, 34, 44, 46, 78, 100, 105, 106, 109, 111, 135, 137, 138, 146, 155, 156, 157, 167, 178, 182, 183, 189, 192, 193, 198, 206, 207, 210, 222, 223, 224, 227, 230, 231, 232, 240, 273, 396, 846], "40it": [11, 19, 32, 33, 100, 105, 206, 222, 227, 230], "65it": [11, 19, 100, 106, 109, 192, 206, 222, 223, 224, 226, 227], "31it": [11, 19, 33, 43, 100, 105, 109, 193, 222, 223, 224, 226, 227, 231, 232], "64it": [11, 13, 19, 32, 100, 105, 109, 192, 193, 206, 222, 223, 224, 225, 227], "52": [11, 13, 19, 28, 34, 44, 46, 78, 79, 96, 100, 105, 106, 109, 111, 132, 143, 149, 166, 167, 172, 174, 189, 193, 199, 206, 222, 223, 226, 227, 230, 232, 240, 396, 676, 720, 723, 871], "25it": [11, 13, 19, 100, 192, 193, 206, 222, 223, 224, 227, 232], "19it": [11, 13, 19, 33, 101, 106, 192, 193, 206, 222, 227, 232], "61": [11, 13, 19, 30, 34, 44, 46, 50, 56, 69, 78, 80, 87, 90, 100, 105, 106, 109, 111, 113, 120, 124, 134, 144, 147, 164, 165, 166, 167, 168, 170, 174, 176, 177, 182, 183, 192, 193, 196, 197, 200, 203, 204, 205, 206, 207, 211, 212, 213, 214, 222, 223, 224, 226, 227, 230, 232, 240, 349], "62it": [11, 13, 19, 33, 100, 105, 106, 109, 193, 206, 223, 224, 227], "65": [11, 12, 13, 19, 21, 33, 34, 44, 46, 78, 81, 100, 105, 106, 109, 111, 132, 134, 135, 141, 143, 154, 167, 168, 175, 176, 182, 192, 193, 198, 205, 206, 222, 223, 224, 226, 227, 230, 231, 232, 240, 586, 871], "14it": [11, 19, 33, 100, 105, 106, 109, 193, 206, 222, 224, 227, 232], "68": [11, 19, 33, 34, 40, 44, 46, 78, 79, 87, 98, 100, 105, 106, 109, 111, 123, 138, 141, 143, 156, 167, 169, 170, 174, 179, 182, 189, 193, 206, 222, 223, 226, 227, 240, 262, 263, 292, 293, 330, 349, 353, 354, 363, 364, 365, 396, 403, 410, 446, 447, 466, 468, 469, 528, 689, 778], "71": [11, 12, 19, 21, 34, 44, 78, 100, 105, 106, 109, 111, 167, 174, 179, 180, 182, 192, 193, 206, 222, 223, 224, 226, 227, 230, 231, 232], "06it": [11, 13, 19, 33, 105, 106, 109, 178, 192, 193, 206, 222, 226, 227, 230, 232], "74": [11, 13, 15, 19, 26, 34, 40, 44, 49, 77, 78, 79, 100, 105, 106, 109, 111, 132, 156, 166, 167, 168, 174, 179, 182, 189, 199, 204, 206, 219, 222, 223, 226, 227, 230, 232, 671], "54it": [11, 13, 19, 32, 33, 100, 106, 109, 192, 193, 222, 227, 230], "00it": [11, 13, 19, 33, 109, 178, 192, 193, 206, 222, 223, 226, 227, 232], "81": [11, 13, 15, 16, 19, 33, 34, 78, 100, 104, 105, 106, 111, 140, 154, 167, 178, 182, 193, 205, 206, 208, 222, 223, 226, 227, 230, 235, 240, 647, 652, 871], "45it": [11, 19, 32, 100, 105, 106, 109, 192, 193, 206, 222, 223, 224, 227, 232], "94it": [11, 13, 19, 33, 100, 109, 192, 206, 222, 226, 227, 230, 231], "87": [11, 18, 19, 32, 34, 46, 77, 90, 91, 105, 106, 109, 111, 120, 121, 167, 192, 193, 204, 206, 207, 222, 223, 226, 227, 240, 407, 409, 421, 853], "27": [11, 12, 13, 19, 21, 24, 25, 28, 32, 33, 34, 38, 40, 42, 44, 46, 49, 55, 74, 78, 79, 82, 93, 99, 100, 105, 106, 109, 111, 143, 148, 156, 158, 162, 167, 169, 176, 178, 181, 183, 189, 193, 206, 222, 223, 224, 226, 227, 232, 240, 561, 828], "38it": [11, 13, 19, 93, 100, 105, 109, 192, 193, 206, 222, 223, 226, 227], "89it": [11, 13, 19, 32, 101, 105, 109, 192, 222, 224, 226, 227], "94": [11, 13, 19, 20, 34, 46, 66, 78, 100, 104, 105, 106, 109, 111, 135, 167, 168, 178, 181, 189, 192, 193, 204, 206, 222, 223, 224, 225, 226, 227, 230, 231, 232, 240, 853], "32it": [11, 19, 93, 100, 106, 109, 206, 222, 223, 224, 226, 227, 231], "81it": [11, 13, 19, 33, 105, 193, 222, 223, 224, 226, 227, 230, 231], "83it": [11, 13, 19, 32, 100, 105, 109, 178, 192, 193, 206, 222, 223, 227], "98it": [11, 13, 19, 33, 100, 105, 109, 193, 206, 222, 223, 224, 226, 227, 232], "02it": [11, 13, 19, 33, 100, 109, 193, 206, 222, 224, 226, 227, 230, 231, 232], "48it": [11, 13, 19, 32, 33, 93, 100, 106, 109, 193, 206, 222, 223, 224, 226, 227, 231], "37it": [11, 13, 19, 32, 33, 100, 105, 109, 178, 192, 206, 222, 227], "50it": [11, 13, 19, 32, 33, 100, 105, 109, 192, 193, 206, 222, 223, 226, 227], "90it": [11, 13, 19, 32, 33, 100, 105, 109, 192, 193, 222, 226, 227], "41it": [11, 13, 19, 100, 105, 109, 192, 206, 223, 224, 226, 227, 231, 232], "67it": [11, 13, 19, 100, 101, 105, 109, 178, 192, 193, 206, 222, 227], "56it": [11, 19, 33, 100, 105, 109, 192, 193, 206, 222, 224, 226, 227], "03it": [11, 19, 33, 100, 106, 178, 192, 193, 206, 222, 226, 227, 230, 231, 232], "42it": [11, 13, 19, 32, 100, 193, 206, 222, 223, 224, 227, 231], "87it": [11, 19, 32, 33, 100, 106, 109, 192, 222, 223, 226, 227], "30it": [11, 13, 19, 43, 100, 105, 193, 206, 222, 223, 227, 231], "69it": [11, 19, 32, 33, 100, 109, 192, 193, 206, 222, 223, 224, 227, 232], "11it": [11, 19, 33, 106, 109, 192, 206, 222, 226, 227, 232], "55it": [11, 13, 19, 33, 100, 106, 109, 192, 193, 206, 222, 223, 227], "35it": [11, 19, 32, 33, 100, 105, 109, 192, 193, 206, 222, 226, 227, 232], "52it": [11, 13, 19, 32, 100, 106, 109, 192, 206, 222, 223, 226, 227, 232], "77it": [11, 13, 19, 32, 33, 100, 106, 193, 206, 222, 224, 227, 232], "70it": [11, 13, 19, 33, 192, 193, 206, 222, 223, 226, 227, 230], "33it": [11, 13, 19, 32, 33, 100, 106, 193, 206, 224, 226, 227], "07it": [11, 19, 33, 93, 100, 109, 193, 206, 222, 223, 226, 227, 232], "16it": [11, 19, 105, 109, 192, 193, 206, 222, 223, 224, 226, 227, 230, 232], "49it": [11, 13, 19, 100, 109, 192, 193, 206, 222, 223, 227], "29it": [11, 19, 33, 100, 106, 109, 178, 192, 206, 222, 226, 227], "80it": [11, 19, 33, 93, 105, 106, 109, 192, 193, 206, 222, 224, 226, 227], "23it": [11, 13, 19, 33, 100, 101, 120, 192, 193, 222, 223, 224, 225, 226, 227, 232], "95it": [11, 19, 33, 100, 105, 109, 178, 192, 193, 206, 222, 224, 226, 227, 230], "18it": [11, 13, 19, 33, 100, 105, 106, 109, 178, 192, 193, 206, 222, 223, 226, 227, 232], "04it": [11, 13, 19, 33, 100, 109, 192, 193, 206, 222, 223, 226, 227, 230, 231], "93it": [11, 13, 19, 33, 100, 109, 178, 192, 222, 227], "82it": [11, 19, 32, 33, 106, 109, 192, 193, 206, 222, 223, 224, 226, 227], "51it": [11, 32, 33, 100, 105, 106, 109, 192, 206, 222, 224, 226, 227], "74it": [11, 13, 19, 32, 105, 106, 109, 192, 206, 222, 223, 227, 231, 232], "43it": [11, 19, 33, 105, 109, 192, 193, 206, 222, 227], "17it": [11, 19, 33, 105, 109, 192, 193, 206, 219, 222, 224, 227, 230, 231, 232], "61it": [11, 32, 33, 100, 192, 193, 206, 222, 226, 227], "01it": [11, 19, 33, 106, 109, 192, 193, 206, 222, 223, 226, 227, 232], "75it": [11, 13, 19, 33, 109, 193, 206, 222, 223, 224, 227, 232], "44it": [11, 19, 32, 33, 100, 105, 109, 192, 206, 222, 223, 225, 226, 227], "28it": [11, 13, 19, 32, 33, 100, 109, 178, 192, 193, 222, 223, 227, 230, 231], "57it": [11, 13, 19, 100, 106, 109, 222, 226, 227, 231], "91it": [11, 13, 19, 32, 33, 105, 109, 192, 193, 206, 222, 223, 224, 226, 227, 230, 231], "34it": [11, 19, 100, 109, 178, 192, 206, 222, 223, 227], "05it": [11, 13, 19, 33, 100, 105, 106, 192, 193, 206, 222, 223, 224, 226, 227, 231, 232], "86it": [11, 13, 19, 32, 100, 105, 109, 193, 222, 227], "76it": [11, 19, 100, 101, 109, 192, 193, 206, 222, 223, 224, 226, 227], "08it": [11, 13, 19, 33, 106, 109, 192, 193, 222, 223, 226, 227, 231, 232], "46it": [11, 19, 33, 100, 105, 109, 192, 193, 223, 226, 227, 231], "10it": [11, 19, 33, 100, 105, 106, 192, 193, 206, 222, 224, 226, 227, 232], "20it": [11, 19, 32, 100, 105, 106, 109, 192, 193, 206, 222, 224, 226, 227, 232], "53it": [11, 19, 32, 100, 105, 109, 193, 222, 223, 226, 227, 232], "72it": [11, 13, 19, 33, 101, 105, 106, 109, 192, 206, 222, 226, 227, 230, 231, 232], "09it": [11, 19, 33, 100, 105, 109, 193, 206, 219, 222, 223, 224, 227, 230, 232], "investig": [11, 21, 142, 149, 189, 199, 232, 262, 263, 550, 778, 847], "patterns_": [11, 15, 18, 19, 21, 193, 403, 407, 409, 410, 411, 421, 551, 871], "inverse_transform": [11, 18, 193, 411, 412, 417, 418, 421, 551], "lookup": [11, 40, 132, 253, 255, 260, 261, 262, 263, 265, 273, 455, 456, 470, 471, 472, 639, 738, 826], "vertic": [11, 22, 24, 28, 37, 38, 40, 42, 47, 51, 52, 66, 113, 124, 131, 132, 134, 138, 140, 153, 156, 157, 158, 159, 173, 176, 179, 189, 197, 200, 205, 206, 211, 214, 219, 222, 223, 230, 231, 232, 255, 256, 260, 261, 262, 263, 266, 267, 268, 271, 272, 273, 274, 275, 276, 280, 281, 292, 293, 353, 355, 437, 450, 459, 461, 462, 470, 471, 472, 503, 505, 526, 527, 612, 640, 653, 655, 656, 658, 659, 660, 661, 662, 664, 665, 666, 677, 678, 680, 681, 682, 685, 686, 737, 738, 752, 757, 762, 768, 776, 791, 796, 801, 821, 826, 853, 856, 871], "lh_vertno": [11, 113, 173, 271, 274, 653], "empti": [11, 15, 27, 119, 127, 138, 140, 148, 159, 160, 164, 167, 169, 170, 182, 183, 189, 198, 202, 203, 205, 207, 211, 217, 232, 254, 255, 257, 260, 261, 262, 263, 265, 269, 271, 284, 297, 305, 314, 321, 343, 344, 349, 354, 371, 372, 373, 376, 377, 379, 384, 387, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 401, 430, 451, 470, 471, 472, 479, 483, 486, 487, 492, 496, 516, 541, 542, 543, 547, 548, 550, 551, 553, 560, 561, 569, 578, 579, 602, 610, 621, 631, 635, 671, 677, 686, 690, 692, 693, 694, 706, 726, 738, 747, 754, 762, 763, 768, 769, 775, 777, 785, 791, 792, 826, 830, 846, 853, 856, 871], "stc_feat": 11, "sourceestim": [11, 22, 26, 31, 34, 36, 39, 45, 58, 59, 91, 153, 156, 163, 164, 179, 184, 185, 218, 219, 230, 231, 232, 259, 262, 263, 266, 267, 268, 270, 272, 273, 274, 275, 276, 280, 281, 285, 286, 287, 288, 289, 290, 291, 355, 437, 450, 466, 467, 468, 469, 505, 517, 518, 519, 520, 521, 523, 526, 527, 532, 533, 612, 618, 631, 640, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 657, 675, 682, 685, 686, 738, 752, 796, 797, 826, 848, 850, 861, 871], "ab": [11, 19, 34, 37, 39, 46, 58, 59, 66, 94, 116, 117, 124, 133, 149, 177, 181, 189, 192, 199, 222, 224, 225, 230, 231, 232, 237, 255, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 552, 773, 853, 871], "tstep": [11, 22, 31, 45, 58, 87, 91, 92, 179, 219, 230, 231, 232, 267, 268, 271, 274, 275, 276, 354, 469, 505, 550, 640, 657, 676, 682, 704, 714, 871], "transpar": [11, 57, 98, 132, 170, 179, 197, 237, 252, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 690, 738, 757, 774, 791, 796, 801, 802, 803, 804, 852, 871], "78it": [11, 19, 32, 33, 93, 100, 105, 106, 192, 193, 206, 222, 226, 227], "39it": [11, 13, 19, 33, 100, 101, 106, 109, 192, 193, 206, 222, 223, 227], "22it": [11, 13, 19, 100, 105, 109, 192, 193, 206, 222, 226, 227, 231], "79it": [11, 13, 19, 100, 105, 109, 192, 193, 206, 222, 226, 227], "59it": [11, 13, 19, 100, 105, 106, 109, 120, 192, 193, 206, 222, 223, 227, 231], "50724321": 11, "37721471": 11, "59502306": 11, "283": [11, 20, 40, 69, 109, 167, 206, 222, 227, 240, 559], "589": [11, 13, 20], "decoding_spatio_temporal_sourc": [11, 20], "comodul": [12, 410], "allow": [12, 19, 39, 42, 43, 45, 59, 91, 101, 109, 112, 113, 117, 132, 134, 135, 138, 139, 140, 141, 142, 144, 148, 149, 155, 156, 158, 164, 167, 168, 170, 176, 187, 193, 199, 204, 211, 212, 214, 222, 223, 224, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 267, 268, 269, 271, 273, 274, 275, 276, 287, 290, 303, 307, 330, 335, 342, 349, 366, 403, 409, 410, 411, 436, 444, 461, 470, 471, 472, 474, 486, 487, 491, 519, 521, 524, 526, 527, 528, 532, 549, 550, 551, 555, 564, 569, 576, 596, 602, 608, 626, 639, 655, 657, 676, 690, 692, 693, 694, 732, 736, 755, 759, 768, 770, 777, 781, 783, 790, 791, 793, 798, 800, 826, 828, 830, 848, 852, 853, 856, 859, 871], "composit": [12, 186, 193, 267, 268, 271, 274, 275, 276, 738, 796, 801, 853], "orthogon": [12, 111, 154, 158, 176, 193, 203, 204, 207, 292, 293, 550, 709, 853, 856, 859, 871], "spatial": [12, 14, 15, 17, 18, 20, 27, 31, 32, 33, 35, 46, 55, 68, 69, 77, 80, 81, 87, 110, 116, 118, 149, 150, 153, 154, 160, 173, 196, 197, 199, 203, 204, 214, 217, 219, 222, 224, 227, 230, 231, 232, 236, 237, 240, 255, 257, 260, 261, 262, 263, 264, 265, 266, 269, 271, 285, 286, 287, 288, 289, 290, 291, 292, 293, 307, 323, 349, 355, 358, 359, 367, 403, 404, 410, 411, 417, 419, 421, 432, 470, 471, 472, 483, 484, 486, 511, 516, 528, 529, 532, 547, 548, 549, 550, 551, 564, 577, 578, 599, 605, 608, 610, 644, 647, 652, 660, 661, 662, 663, 667, 677, 678, 680, 681, 690, 692, 694, 708, 728, 738, 755, 770, 772, 777, 778, 781, 790, 793, 798, 800, 826, 846, 847, 850, 853, 871], "maxim": [12, 59, 85, 140, 158, 174, 175, 178, 181, 193, 199, 201, 240, 268, 274, 275, 276, 292, 293, 411, 550, 576, 660, 661, 662, 664, 665, 676, 802, 853, 871], "csp": [12, 17, 20, 27, 193, 255, 260, 265, 307, 323, 358, 367, 407, 410, 432, 470, 486, 547, 551, 690, 847, 861, 871], "variabl": [12, 16, 31, 42, 98, 100, 109, 114, 139, 141, 148, 153, 166, 168, 193, 196, 199, 201, 203, 211, 213, 226, 227, 232, 240, 253, 255, 258, 260, 261, 266, 267, 268, 270, 271, 274, 275, 276, 298, 302, 303, 304, 307, 355, 360, 361, 362, 366, 369, 371, 372, 373, 374, 376, 377, 380, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 410, 420, 422, 432, 444, 445, 451, 453, 455, 459, 461, 462, 463, 464, 465, 470, 471, 472, 490, 503, 507, 509, 536, 549, 550, 569, 575, 593, 595, 603, 607, 613, 622, 627, 628, 629, 630, 637, 638, 639, 653, 656, 667, 677, 678, 679, 680, 681, 685, 686, 702, 730, 738, 754, 756, 766, 768, 785, 791, 796, 801, 802, 804, 811, 821, 826, 828, 835, 836, 846, 850, 853, 857, 871], "fluctuat": [12, 139, 140, 149, 196, 198, 204, 205, 219, 262, 263, 778], "electromyogram": [12, 871], "cortico": 12, "muscular": [12, 196, 202], "coher": [12, 32, 100, 104, 178, 219, 240, 285, 286, 287, 292, 690, 691, 718, 719, 720, 721, 722, 723, 764, 826, 837, 847], "fieldtrip": [12, 154, 189, 199, 205, 222, 224, 230, 317, 324, 490, 603, 607, 853, 859, 871], "fieldtrip_cmc": [12, 21], "ridg": [12, 19, 192, 409, 415], "kfold": [12, 16, 19, 349, 354, 420, 871], "cross_val_predict": [12, 871], "subjectcmc": [12, 21], "emg": [12, 80, 135, 167, 187, 193, 211, 217, 240, 255, 260, 261, 262, 263, 270, 306, 367, 410, 436, 470, 471, 472, 483, 486, 496, 547, 550, 690, 692, 693, 694, 768, 791, 847, 853, 856, 871], "pick_channel": [12, 44, 68, 70, 83, 97, 112, 124, 138, 139, 147, 149, 167, 168, 211, 219, 224, 225, 226, 255, 257, 260, 261, 262, 263, 264, 470, 471, 472, 544, 690, 691, 692, 693, 694, 861, 871], "emglft": 12, "ref_meg": [12, 21, 72, 116, 120, 167, 255, 260, 261, 262, 263, 270, 306, 367, 470, 471, 472, 547, 548, 690, 692, 693, 694, 768, 791, 871], "make_fixed_length_ev": [12, 21, 164, 166, 212, 217, 354, 523, 826, 861, 871], "durat": [12, 21, 48, 64, 68, 69, 71, 72, 73, 74, 78, 79, 80, 87, 90, 91, 120, 124, 135, 138, 139, 142, 144, 147, 148, 149, 164, 165, 166, 189, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 219, 230, 231, 232, 252, 254, 255, 260, 261, 262, 263, 270, 271, 279, 336, 338, 352, 354, 405, 409, 414, 415, 432, 439, 441, 442, 444, 470, 471, 472, 488, 510, 511, 550, 552, 553, 555, 569, 578, 586, 640, 642, 682, 768, 777, 785, 791, 826, 830, 871], "meg_epoch": [12, 18], "detrend": [12, 107, 133, 208, 255, 260, 262, 263, 510, 601, 871], "emg_epoch": 12, "var": [12, 46, 68, 169, 204, 369, 451, 683], "oa": [12, 21, 81, 181, 349], "validaton": 12, "first_samp": [12, 68, 73, 135, 164, 166, 182, 211, 212, 213, 254, 255, 260, 261, 265, 270, 279, 357, 431, 432, 444, 470, 471, 472, 491, 511, 545, 550, 579, 604, 605, 640, 655, 771, 785, 791, 816, 826, 856, 871], "set_xlabel": [12, 13, 19, 21, 22, 44, 68, 93, 101, 110, 130, 142, 144, 170, 181, 193, 203, 225, 226, 227], "set_titl": [12, 13, 22, 44, 68, 69, 93, 96, 109, 111, 117, 124, 132, 134, 142, 192, 193, 207, 208, 225, 226, 227, 236, 237], "78": [12, 13, 19, 21, 33, 34, 46, 50, 77, 78, 100, 109, 111, 120, 135, 155, 156, 164, 167, 174, 177, 183, 192, 193, 206, 211, 222, 223, 224, 226, 227, 232, 240, 295, 396, 853], "62": [12, 13, 16, 19, 21, 33, 34, 44, 46, 68, 78, 100, 105, 109, 111, 134, 167, 178, 192, 206, 222, 223, 226, 227, 230, 240], "258": [12, 21, 120, 156, 164, 167, 206, 227], "114": [12, 21, 34, 78, 149, 167, 179, 227, 871], "12000": [12, 21], "911610": [12, 21], "191": [12, 19, 21, 167, 206, 210, 222, 226, 227], "end": [12, 19, 21, 60, 68, 132, 135, 138, 142, 148, 149, 155, 156, 158, 159, 160, 164, 167, 170, 175, 186, 192, 197, 198, 199, 200, 202, 203, 204, 207, 208, 211, 212, 213, 214, 218, 224, 227, 237, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 283, 284, 307, 312, 319, 335, 336, 338, 349, 352, 354, 403, 409, 410, 415, 421, 426, 427, 428, 443, 444, 470, 471, 472, 484, 491, 496, 511, 523, 531, 533, 534, 535, 549, 550, 553, 566, 567, 572, 588, 590, 592, 599, 601, 608, 609, 610, 616, 620, 624, 626, 646, 647, 648, 649, 650, 652, 655, 667, 690, 691, 693, 695, 696, 697, 698, 699, 700, 701, 703, 713, 724, 726, 738, 768, 777, 782, 785, 791, 798, 812, 813, 814, 815, 817, 818, 822, 823, 824, 825, 826, 828, 830, 850, 852, 853, 856, 871], "180000": 12, "150": [12, 34, 41, 44, 58, 59, 71, 72, 74, 78, 79, 91, 117, 120, 139, 140, 144, 149, 156, 158, 164, 167, 178, 189, 198, 202, 204, 206, 222, 226, 227, 252, 273], "793": [12, 142, 193, 227], "661": [12, 199, 223, 227], "1057": [12, 193, 225], "881": [12, 227, 273], "183": [12, 167, 198, 210, 226, 227], "1801": 12, "contribut": [12, 19, 44, 66, 147, 149, 178, 224, 227, 251, 255, 260, 261, 432, 565, 646, 828, 834, 847, 849, 852, 871], "sven": [12, 18, 19, 193, 240, 407, 409, 410, 411, 421], "d\u00e4hne": [12, 18, 19, 193, 240, 407, 409, 410, 421], "frank": [12, 18, 19, 73, 193, 202, 240, 407, 409, 410, 421, 550, 585], "meineck": [12, 18, 19, 193, 240, 407, 409, 410, 421], "stefan": [12, 18, 19, 32, 110, 124, 193, 202, 224, 227, 230, 236, 240, 407, 409, 410, 411, 421, 564, 858, 871], "hauf": [12, 18, 19, 193, 240, 407, 409, 410, 411, 421], "johann": [12, 193, 240, 410, 871], "h\u00f6hne": [12, 193, 240, 410], "michael": [12, 19, 98, 192, 193, 201, 202, 240, 349, 403, 409, 410, 549, 550, 582, 593, 847, 853, 871], "tangermann": [12, 193, 202, 240, 410], "klau": [12, 193, 202, 240, 403, 410, 550], "robert": [12, 73, 192, 193, 202, 227, 240, 403, 409, 410, 677, 678, 680, 681, 858, 871], "m\u00fcller": [12, 72, 193, 202, 240, 403, 410, 550], "vadim": [12, 21, 193, 240, 410, 411], "nikulin": [12, 21, 193, 240, 410, 411], "novel": [12, 21, 193, 240, 327, 410, 411, 859], "framework": [12, 34, 193, 240, 410, 466, 842, 853], "amplitud": [12, 19, 34, 36, 38, 39, 44, 46, 52, 58, 78, 79, 90, 91, 92, 113, 120, 124, 129, 133, 138, 139, 142, 143, 160, 164, 170, 173, 178, 181, 182, 188, 192, 193, 196, 197, 199, 202, 203, 204, 206, 208, 219, 240, 252, 255, 258, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 286, 336, 337, 338, 342, 354, 410, 446, 468, 469, 470, 471, 472, 512, 521, 532, 550, 552, 566, 567, 600, 642, 643, 647, 651, 652, 676, 677, 692, 693, 694, 738, 765, 766, 779, 792, 826, 837, 850, 853, 856, 871], "neuron": [12, 21, 135, 142, 192, 193, 196, 240, 292, 397, 409, 410, 411, 517, 826, 847, 853], "oscil": [12, 21, 66, 91, 110, 111, 193, 196, 200, 219, 240, 410, 411, 643, 705, 717], "behavior": [12, 142, 167, 186, 193, 196, 198, 199, 204, 240, 253, 255, 257, 260, 261, 262, 263, 269, 270, 403, 410, 444, 470, 471, 472, 511, 515, 517, 549, 550, 564, 578, 605, 639, 690, 692, 694, 755, 770, 777, 781, 790, 793, 798, 800, 808, 830, 849, 850, 852, 859], "111": [12, 34, 45, 81, 110, 124, 143, 167, 193, 226, 227, 240, 410], "122": [12, 16, 69, 82, 158, 167, 168, 193, 202, 222, 240, 330, 404, 410, 419, 853, 871], "2013": [12, 16, 18, 19, 42, 58, 78, 79, 126, 142, 167, 193, 240, 266, 271, 272, 278, 355, 404, 407, 409, 410, 419, 421, 427, 469, 555, 582, 647, 652, 845], "079": [12, 134, 193, 240, 410], "826": [12, 13, 20, 227], "136": [12, 164, 167, 169, 222, 227, 273], "decoding_spoc_cmc": [12, 20], "illustr": [13, 27, 28, 66, 67, 87, 91, 92, 122, 131, 136, 140, 144, 148, 149, 163, 164, 169, 186, 196, 197, 198, 200, 202, 204, 208, 211, 222, 226, 232, 236, 470, 471, 472, 826, 846, 853], "discriminatori": 13, "given": [13, 16, 19, 26, 31, 68, 77, 91, 92, 109, 117, 118, 135, 141, 142, 147, 148, 149, 156, 158, 160, 163, 164, 167, 168, 169, 173, 176, 178, 184, 185, 186, 192, 193, 198, 199, 202, 203, 204, 207, 211, 212, 214, 222, 224, 226, 227, 235, 237, 252, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 274, 275, 276, 284, 292, 293, 297, 305, 307, 311, 312, 313, 322, 324, 325, 349, 354, 360, 361, 362, 363, 371, 372, 373, 374, 376, 377, 379, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 405, 407, 410, 411, 413, 418, 419, 423, 424, 428, 438, 439, 442, 444, 446, 448, 459, 466, 468, 469, 470, 471, 472, 510, 513, 514, 516, 517, 518, 519, 520, 521, 523, 524, 525, 528, 533, 534, 549, 550, 551, 552, 553, 555, 561, 564, 565, 566, 567, 569, 572, 575, 578, 584, 586, 592, 593, 598, 601, 635, 639, 644, 654, 657, 658, 670, 672, 676, 677, 678, 680, 681, 683, 685, 688, 690, 691, 692, 693, 694, 698, 699, 700, 701, 702, 703, 705, 709, 710, 711, 715, 717, 722, 726, 727, 730, 738, 742, 744, 754, 755, 756, 762, 766, 768, 769, 770, 772, 773, 774, 775, 777, 782, 785, 789, 791, 792, 793, 794, 796, 798, 800, 801, 805, 806, 826, 828, 830, 847, 850, 852, 853, 856, 871], "subsequ": [13, 67, 81, 109, 110, 138, 140, 143, 155, 159, 164, 193, 197, 200, 202, 211, 230, 240, 255, 260, 261, 470, 471, 472, 550, 553, 560, 569, 682, 826, 833, 846, 850, 853, 871], "accur": [13, 26, 40, 43, 44, 49, 106, 132, 133, 156, 157, 174, 180, 186, 193, 201, 202, 204, 207, 253, 255, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 446, 470, 471, 472, 509, 550, 728, 777, 804, 811, 846, 871], "generalizingestim": [13, 193, 420, 861, 871], "events_fnam": 13, "auditori": [13, 15, 30, 31, 36, 37, 38, 39, 40, 43, 44, 47, 49, 50, 53, 54, 56, 57, 59, 60, 64, 69, 76, 77, 83, 84, 91, 109, 113, 116, 117, 121, 124, 129, 138, 139, 140, 141, 143, 144, 147, 148, 149, 150, 163, 164, 166, 170, 173, 174, 176, 177, 178, 179, 180, 190, 191, 192, 193, 199, 204, 212, 218, 226, 230, 232, 235, 237, 240, 253, 254, 255, 257, 260, 261, 262, 263, 265, 266, 271, 304, 348, 350, 354, 356, 358, 409, 430, 444, 470, 471, 484, 507, 508, 513, 515, 516, 517, 528, 563, 582, 602, 604, 610, 616, 623, 638, 693, 738, 871], "050": [13, 78, 138, 140, 147, 167, 178, 197, 205, 206, 219, 240], "faster": [13, 18, 43, 117, 138, 181, 193, 202, 237, 240, 252, 255, 260, 261, 262, 263, 266, 267, 268, 271, 274, 275, 276, 355, 358, 443, 459, 470, 471, 472, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 510, 550, 552, 677, 678, 680, 681, 828, 833, 834, 836, 859, 871], "constructor": [13, 85, 138, 140, 149, 163, 164, 170, 198, 200, 203, 213, 217, 220, 255, 267, 268, 271, 274, 275, 276, 470, 551, 566, 796, 801, 830, 850, 871], "497": [13, 14, 15, 74, 85, 96, 118, 130, 176, 202, 222, 227, 240, 273], "310": [13, 14, 15, 34, 74, 78, 85, 96, 106, 109, 118, 130, 167, 202, 227], "lbfg": [13, 18, 193], "time_gen": [13, 193], "experiment": [13, 16, 44, 68, 69, 71, 74, 78, 79, 80, 87, 90, 124, 138, 139, 144, 147, 148, 149, 151, 163, 165, 166, 167, 178, 193, 196, 197, 198, 200, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 217, 219, 222, 240, 255, 260, 261, 262, 263, 265, 404, 419, 470, 471, 472, 473, 517, 569, 578, 579, 642, 643, 650, 690, 693, 826, 846, 853, 857, 871], "27it": [13, 19, 100, 105, 109, 192, 206, 222, 223, 227, 231, 232], "97it": [13, 33, 100, 106, 109, 178, 192, 193, 206, 222, 223, 227, 230, 232], "13it": [13, 19, 33, 100, 105, 106, 178, 192, 193, 222, 223, 224, 226, 227, 231], "54": [13, 19, 28, 33, 34, 40, 44, 46, 55, 78, 100, 105, 109, 111, 135, 142, 149, 156, 167, 191, 192, 206, 207, 222, 223, 226, 227, 240, 273, 871], "1225": [13, 19], "527": [13, 227], "605": [13, 124, 127, 152, 227], "630": [13, 78, 227], "88": [13, 19, 26, 34, 40, 44, 46, 49, 77, 78, 79, 93, 100, 106, 109, 111, 117, 156, 167, 174, 178, 179, 180, 189, 192, 193, 206, 208, 222, 223, 224, 226, 227, 231, 232, 240, 349], "652": [13, 142], "24it": [13, 19, 33, 100, 109, 120, 178, 192, 193, 222, 223, 227, 230], "110": [13, 18, 19, 21, 34, 40, 78, 79, 82, 109, 132, 156, 167, 206, 222, 227, 240, 407, 409, 421, 555], "651": [13, 19, 193, 227], "131": [13, 167, 222, 226, 227, 330], "645": [13, 181, 206, 211, 216, 218, 221, 227], "152": [13, 44, 167, 188, 222, 226, 227, 273], "641": [13, 227], "175": [13, 132, 140, 148, 167, 206, 226, 227, 240, 550], "647": [13, 93, 99, 166, 172, 227], "197": [13, 127, 129, 167, 193, 222, 226, 227, 847], "220": [13, 58, 78, 135, 167, 206, 225, 229], "655": [13, 205, 227], "266": [13, 19, 32, 33, 45, 109, 110, 167, 199, 206, 222, 227, 236, 240], "289": [13, 45, 109, 147, 167, 192, 206, 221, 222, 226, 227, 240, 409, 550], "659": [13, 45, 166, 227], "312": [13, 34, 109, 167, 206, 227], "660": [13, 34, 78, 227], "333": [13, 34, 73, 109, 167, 206], "657": [13, 139, 146], "15it": [13, 19, 33, 100, 106, 109, 193, 206, 222, 223, 226, 227, 232], "355": [13, 78, 167, 193, 206, 222, 227], "377": [13, 19, 78, 222, 227], "99it": [13, 32, 100, 109, 206, 222, 223, 227, 231, 232], "399": [13, 78, 206, 222, 227], "417": [13, 34, 116, 206, 227, 240, 550, 576, 755], "36it": [13, 19, 100, 106, 192, 206, 222, 224, 226, 227], "439": [13, 26, 227, 438], "26it": [13, 19, 105, 106, 109, 192, 206, 222, 223, 224, 226, 227], "37": [13, 19, 28, 33, 34, 40, 44, 46, 78, 100, 103, 105, 109, 110, 111, 143, 155, 167, 193, 206, 222, 223, 224, 226, 227, 230, 231, 232, 235, 330, 396, 444, 561, 689, 871], "457": 13, "636": 13, "38": [13, 19, 28, 33, 34, 44, 46, 69, 71, 78, 79, 90, 93, 100, 105, 109, 111, 124, 138, 139, 140, 142, 156, 167, 178, 182, 189, 193, 198, 204, 206, 222, 223, 224, 226, 227, 230, 231, 232, 561], "471": [13, 199, 227, 240], "620": [13, 78, 227], "484": [13, 141, 201, 227, 240, 549, 593], "603": [13, 79, 227], "505": [13, 193, 222, 227], "604": [13, 227], "526": 13, "545": [13, 68, 240, 558], "602": [13, 166, 193, 200, 856], "565": [13, 51, 55, 164, 172, 227], "593": 13, "599": [13, 227], "618": [13, 103, 111, 240, 672], "586": [13, 227], "634": [13, 240, 550], "579": [13, 67], "648": [13, 137, 147, 193, 227], "569": [13, 147, 165, 172, 227], "664": [13, 227], "563": [13, 227], "676": [13, 227], "550": [13, 68, 78, 160, 219, 240, 424, 558], "56": [13, 15, 19, 34, 44, 46, 73, 77, 78, 79, 85, 88, 100, 105, 109, 111, 121, 127, 128, 135, 149, 158, 167, 169, 170, 172, 174, 178, 189, 192, 193, 206, 208, 222, 223, 226, 227, 240, 254, 403, 551, 677, 678, 680, 681], "687": [13, 34, 60, 227], "536": [13, 123, 240, 381], "57": [13, 19, 33, 34, 39, 44, 78, 93, 100, 105, 109, 111, 114, 123, 134, 148, 149, 155, 167, 172, 178, 181, 182, 189, 193, 202, 204, 206, 210, 213, 222, 223, 224, 226, 227, 231, 232, 235, 240, 255, 260, 261, 262, 263, 330, 468, 470, 471, 472, 692, 694, 702, 707, 709, 871], "699": [13, 32, 138, 149, 178, 219, 227, 240, 286, 292], "525": [13, 227], "712": [13, 20, 21, 227], "517": [13, 227], "59": [13, 15, 19, 28, 30, 31, 33, 34, 37, 38, 39, 40, 43, 44, 47, 48, 53, 54, 57, 58, 59, 67, 69, 74, 76, 78, 80, 87, 89, 90, 91, 100, 105, 108, 109, 111, 113, 115, 118, 124, 128, 135, 139, 140, 143, 148, 149, 150, 154, 156, 160, 167, 170, 174, 176, 180, 182, 196, 197, 202, 203, 204, 206, 218, 222, 223, 224, 226, 227, 231, 232, 235, 240, 273, 424, 561, 569, 578, 683, 684], "724": [13, 227], "508": [13, 149, 222, 223, 227], "736": [13, 178, 185, 192, 227], "499": [13, 30, 31, 34, 37, 38, 39, 40, 43, 47, 49, 50, 53, 54, 56, 57, 58, 59, 76, 83, 84, 113, 116, 117, 124, 140, 141, 147, 166, 170, 174, 176, 177, 179, 206, 222, 225, 226, 227], "748": 13, "490": [13, 78, 180, 185, 227], "759": [13, 227], "481": [13, 206, 227], "770": [13, 78, 227], "472": [13, 19, 227, 240, 403], "781": [13, 227], "464": [13, 73, 142, 169, 206, 208, 222, 227, 273], "792": [13, 142], "456": [13, 19, 142, 227, 273], "804": [13, 227], "450": [13, 73, 78, 139, 158, 206, 222, 227, 273, 871], "814": [13, 193, 227, 237, 239], "441": [13, 34, 193, 222, 227, 240, 550, 576], "67": [13, 19, 32, 34, 46, 56, 78, 79, 100, 105, 109, 111, 113, 135, 147, 156, 167, 170, 174, 176, 179, 189, 192, 193, 206, 222, 223, 224, 226, 227, 231, 232, 240, 517, 871], "436": [13, 47, 206, 227, 240], "844": 13, "442": [13, 227], "862": [13, 170, 227], "446": [13, 67, 206, 222, 240, 845], "72": [13, 15, 19, 28, 34, 44, 46, 69, 76, 77, 78, 93, 97, 100, 101, 109, 111, 114, 120, 135, 138, 147, 154, 160, 167, 175, 178, 180, 181, 182, 183, 193, 197, 206, 207, 222, 223, 224, 225, 226, 227, 230, 240, 550, 559, 853, 871], "878": [13, 193, 227, 240, 674], "448": [13, 44, 55, 123, 169, 227, 273, 871], "898": [13, 149, 227], "918": 13, "937": [13, 206, 227], "468": [13, 201, 227, 240, 549, 593], "976": [13, 227], "479": [13, 206], "996": 13, "83": [13, 19, 34, 39, 46, 78, 100, 105, 109, 111, 167, 169, 177, 192, 193, 198, 201, 206, 207, 222, 223, 227, 240, 330, 549, 593, 677, 678, 680, 681], "492": [13, 49, 222, 227], "1054": [13, 193], "73it": [13, 19, 105, 193, 206, 224, 226, 227, 230, 231], "1074": [13, 206], "502": [13, 192, 222, 515, 856], "89": [13, 19, 33, 34, 46, 69, 76, 77, 78, 79, 100, 105, 109, 111, 134, 167, 182, 189, 192, 193, 197, 206, 222, 223, 226, 227, 240, 559, 853], "1094": [13, 206], "507": [13, 172, 222, 227], "1113": [13, 167], "510": [13, 78, 142, 206, 222, 237], "1128": [13, 34, 192], "506": 13, "1146": 13, "1164": 13, "88it": [13, 19, 32, 33, 105, 109, 192, 193, 206, 222, 223, 226, 227], "96": [13, 15, 18, 19, 43, 46, 79, 100, 104, 105, 109, 110, 111, 132, 135, 160, 167, 169, 178, 182, 193, 203, 204, 222, 223, 224, 225, 226, 227, 231, 232, 240, 262, 263, 407, 409, 421, 778, 850], "1180": 13, "1197": 13, "1216": 13, "509": [13, 193, 223], "vmax": [13, 19, 68, 85, 104, 109, 111, 113, 114, 121, 134, 139, 158, 174, 192, 193, 207, 208, 222, 224, 225, 236, 255, 257, 260, 261, 262, 263, 269, 403, 410, 470, 471, 472, 549, 550, 690, 692, 694, 738, 755, 769, 770, 773, 777, 781, 790, 793, 798, 799, 800, 871], "xaxi": [13, 124], "set_ticks_posit": 13, "bottom": [13, 68, 71, 72, 109, 117, 124, 138, 144, 159, 189, 213, 214, 222, 227, 255, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 751, 768, 778, 796, 801, 826, 871], "r\u00e9mi": [13, 193, 240], "stanisla": [13, 16, 135, 193, 240, 404, 419, 871], "dehaen": [13, 16, 193, 240, 404, 419], "dynam": [13, 21, 27, 32, 68, 91, 102, 103, 109, 164, 178, 193, 199, 201, 202, 219, 240, 255, 260, 263, 266, 271, 283, 285, 286, 287, 292, 411, 442, 444, 470, 471, 472, 517, 550, 551, 558, 669, 791, 826, 837, 847, 853, 856, 871], "represent": [13, 17, 20, 27, 42, 43, 91, 100, 109, 112, 138, 147, 158, 164, 166, 167, 168, 170, 173, 188, 193, 202, 211, 212, 230, 231, 232, 235, 236, 240, 255, 260, 261, 262, 263, 270, 272, 355, 358, 438, 444, 470, 471, 472, 501, 547, 550, 690, 692, 694, 718, 719, 721, 722, 723, 746, 782, 826, 837, 847, 856, 871], "tempor": [13, 16, 19, 27, 45, 58, 75, 82, 102, 103, 110, 111, 133, 134, 135, 138, 140, 144, 149, 163, 178, 182, 194, 195, 198, 199, 200, 201, 204, 207, 213, 222, 224, 225, 226, 227, 233, 234, 240, 255, 260, 262, 263, 265, 271, 272, 273, 349, 355, 409, 415, 423, 426, 429, 443, 444, 446, 467, 468, 469, 470, 471, 472, 510, 514, 516, 517, 531, 533, 534, 547, 550, 552, 565, 578, 585, 586, 601, 605, 616, 618, 620, 625, 645, 646, 647, 648, 649, 650, 651, 652, 662, 664, 665, 666, 670, 671, 673, 680, 681, 682, 703, 705, 717, 720, 723, 738, 847, 848, 853, 871], "trend": [13, 64, 110, 139, 193, 240], "cognit": [13, 41, 42, 193, 199, 240, 272, 355, 518], "203": [13, 34, 39, 41, 48, 49, 57, 58, 77, 84, 89, 90, 91, 96, 108, 113, 116, 118, 120, 121, 128, 140, 148, 150, 154, 155, 156, 160, 167, 168, 170, 175, 176, 177, 178, 193, 197, 203, 204, 206, 207, 219, 222, 226, 227, 240], "tic": [13, 193, 240], "535": [13, 20, 206, 227], "decoding_time_generalization_condit": [13, 20], "Then": [14, 19, 44, 79, 106, 110, 112, 132, 133, 134, 138, 154, 159, 179, 188, 189, 204, 227, 237, 262, 263, 312, 428, 564, 685, 774, 830, 834, 841, 850, 853], "virtual": [14, 68, 96, 149, 202, 205, 255, 260, 261, 262, 263, 309, 424, 470, 471, 472, 577, 632, 635, 826, 838, 871], "output": [14, 19, 34, 39, 43, 45, 46, 58, 110, 111, 119, 124, 132, 133, 138, 141, 147, 149, 153, 159, 161, 162, 163, 166, 169, 170, 186, 192, 193, 199, 200, 202, 203, 204, 211, 212, 214, 217, 222, 224, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 298, 299, 300, 301, 302, 303, 304, 307, 311, 312, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 408, 409, 410, 413, 414, 415, 416, 419, 420, 422, 424, 428, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 446, 447, 448, 453, 454, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 512, 513, 514, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 543, 545, 546, 550, 552, 553, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 573, 574, 575, 576, 578, 579, 581, 582, 585, 586, 587, 590, 591, 592, 593, 595, 597, 598, 599, 600, 601, 602, 604, 605, 606, 608, 609, 610, 612, 613, 614, 615, 616, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 635, 636, 638, 639, 641, 642, 643, 644, 653, 654, 655, 656, 658, 660, 661, 662, 663, 664, 665, 666, 677, 678, 679, 680, 681, 682, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 703, 707, 708, 709, 710, 714, 718, 719, 721, 722, 723, 724, 727, 728, 733, 737, 738, 742, 746, 754, 756, 763, 766, 770, 771, 772, 773, 778, 779, 781, 782, 783, 788, 789, 791, 792, 794, 795, 796, 797, 801, 802, 803, 806, 807, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 829, 830, 834, 835, 838, 850, 853, 854, 856, 871], "asish": [14, 871], "asishrocks95": 14, "decod": [14, 16, 19, 20, 21, 150, 163, 164, 166, 192, 194, 195, 240, 255, 257, 260, 262, 263, 265, 271, 307, 323, 349, 358, 367, 432, 444, 470, 471, 479, 484, 486, 494, 511, 516, 517, 519, 528, 531, 547, 551, 599, 605, 610, 690, 738, 847, 861, 871], "unsupervisedspatialfilt": [14, 861, 871], "fastica": [14, 74, 202, 550], "aud_l": [14, 15, 18, 41, 175, 226, 255, 260, 261, 768, 771], "vis_l": [14, 15, 18, 41, 226], "ie": [14, 52, 107, 257, 267, 271, 275, 595, 705, 717, 738, 763, 796, 797], "pca_data": 14, "evokedarrai": [14, 15, 16, 18, 21, 81, 97, 106, 181, 186, 193, 217, 227, 261, 262, 472, 523, 524, 607, 609, 826, 861, 871], "window_titl": [14, 189, 262, 263, 772], "ica_data": 14, "ev1": [14, 871], "208": [14, 20, 167, 169, 186, 193, 222, 232, 240], "decoding_unsupervised_spatial_filt": [14, 20], "erp": [15, 96, 98, 114, 125, 151, 152, 163, 170, 193, 196, 197, 199, 202, 204, 205, 240, 255, 260, 262, 263, 265, 309, 348, 460, 470, 471, 541, 550, 551, 605, 635, 676, 762, 781, 783, 810, 837, 857, 859, 871], "concaten": [15, 68, 72, 78, 109, 135, 149, 166, 186, 189, 201, 203, 211, 237, 255, 260, 261, 262, 263, 356, 357, 358, 403, 412, 468, 470, 471, 472, 553, 568, 569, 578, 655, 780, 871], "rescal": [15, 62, 110, 111, 363, 364, 365, 567, 690, 693, 798, 861, 871], "fed": 15, "classification_report": [15, 135], "confusion_matrix": [15, 135], "minmaxscal": 15, "n_filter": 15, "penalti": [15, 39, 45, 240, 468, 469, 859], "l1": [15, 39, 468, 469], "pred": 15, "report": [15, 135, 163, 171, 172, 207, 223, 237, 240, 255, 260, 261, 262, 265, 285, 287, 427, 444, 470, 471, 472, 477, 539, 550, 567, 569, 583, 608, 689, 768, 785, 791, 828, 830, 846, 849, 850, 851, 853, 859, 861, 871], "target_nam": [15, 135], "cm_normal": 15, "astyp": [15, 70, 132, 143, 158, 189, 192, 200, 211], "float": [15, 19, 31, 39, 64, 90, 112, 141, 142, 143, 147, 158, 167, 186, 192, 202, 211, 213, 222, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 286, 292, 293, 299, 300, 307, 316, 321, 323, 325, 336, 337, 338, 339, 342, 348, 349, 352, 353, 354, 355, 360, 365, 367, 403, 405, 407, 408, 409, 410, 411, 414, 415, 416, 420, 424, 427, 429, 431, 432, 438, 439, 441, 442, 443, 444, 446, 447, 448, 455, 461, 462, 466, 468, 469, 470, 471, 472, 481, 482, 494, 503, 505, 506, 510, 511, 513, 514, 517, 518, 519, 520, 521, 523, 524, 528, 529, 530, 532, 533, 534, 549, 550, 551, 552, 553, 554, 555, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 578, 580, 582, 583, 584, 586, 587, 596, 621, 627, 628, 629, 630, 639, 640, 645, 646, 647, 648, 649, 650, 651, 652, 655, 657, 660, 661, 662, 664, 665, 668, 669, 672, 673, 674, 676, 677, 678, 680, 681, 682, 683, 684, 685, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 707, 708, 709, 710, 715, 717, 718, 719, 720, 721, 722, 723, 727, 728, 738, 742, 743, 751, 755, 757, 758, 762, 766, 767, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 781, 782, 783, 784, 785, 786, 788, 790, 791, 792, 793, 794, 796, 797, 798, 799, 800, 801, 802, 806, 811, 824, 856, 871], "sum": [15, 28, 31, 40, 46, 59, 70, 79, 106, 110, 111, 114, 135, 142, 147, 159, 160, 166, 173, 181, 182, 199, 222, 223, 227, 237, 255, 260, 261, 262, 263, 266, 267, 268, 271, 274, 275, 276, 282, 348, 353, 470, 471, 472, 532, 550, 555, 642, 677, 678, 680, 681, 685, 691, 692, 694, 770, 850, 853, 856, 871], "imshow": [15, 16, 22, 68, 104, 112, 113, 124, 132, 134, 144, 158, 170, 193, 222, 224, 225, 226, 227, 255, 260, 261, 262, 263, 316, 690, 739, 741, 776, 799, 808], "nearest": [15, 26, 77, 113, 117, 134, 138, 143, 158, 166, 180, 211, 222, 255, 257, 260, 261, 262, 263, 266, 267, 268, 269, 271, 273, 274, 275, 276, 278, 355, 360, 403, 410, 470, 471, 472, 549, 550, 564, 685, 690, 691, 692, 693, 694, 702, 727, 738, 755, 756, 762, 770, 777, 781, 790, 793, 798, 800, 853, 856, 871], "blue": [15, 53, 54, 77, 80, 109, 129, 133, 140, 149, 154, 170, 173, 175, 176, 179, 188, 204, 230, 231, 237, 258, 738, 753, 754, 762, 766, 826], "tick_mark": 15, "ytick": [15, 124, 192, 199, 222], "precis": [15, 46, 68, 87, 132, 135, 155, 182, 199, 200, 207, 211, 219, 254, 255, 260, 261, 266, 292, 293, 444, 470, 471, 472, 578, 646, 648, 667, 846, 850, 856, 871], "recal": [15, 87, 135, 147, 148, 154, 212, 646, 647, 649, 652], "f1": [15, 68, 87, 135, 646], "support": [15, 33, 60, 120, 132, 133, 134, 135, 138, 140, 147, 148, 149, 164, 168, 170, 179, 180, 183, 187, 188, 214, 235, 236, 237, 252, 253, 254, 255, 257, 258, 260, 261, 262, 263, 267, 268, 269, 270, 271, 273, 274, 275, 276, 292, 293, 299, 307, 313, 315, 335, 349, 354, 355, 363, 364, 365, 367, 385, 403, 410, 411, 419, 424, 433, 434, 436, 437, 441, 442, 443, 463, 470, 471, 472, 477, 482, 491, 493, 494, 495, 496, 500, 505, 509, 512, 513, 549, 550, 561, 564, 569, 578, 600, 603, 604, 618, 625, 626, 635, 638, 639, 655, 671, 673, 682, 685, 690, 692, 693, 694, 738, 754, 755, 756, 759, 762, 766, 767, 768, 770, 772, 777, 781, 785, 790, 791, 792, 793, 796, 798, 800, 801, 802, 803, 804, 807, 826, 828, 830, 833, 835, 836, 837, 842, 848, 850, 857, 871], "288": [15, 34, 69, 70, 109, 129, 139, 143, 158, 167, 169, 206, 227, 232, 240, 559], "macro": [15, 135], "avg": [15, 135, 142, 222, 252], "attribut": [15, 30, 31, 34, 37, 38, 39, 40, 43, 44, 47, 49, 50, 53, 54, 56, 57, 58, 59, 69, 76, 80, 83, 84, 113, 116, 117, 124, 138, 139, 141, 147, 148, 149, 164, 166, 167, 168, 170, 173, 174, 176, 177, 179, 180, 181, 198, 202, 203, 207, 208, 214, 217, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 273, 274, 275, 276, 297, 348, 360, 403, 404, 406, 407, 409, 410, 411, 413, 418, 421, 460, 461, 470, 471, 472, 478, 480, 481, 482, 483, 484, 487, 488, 489, 493, 494, 495, 496, 497, 498, 499, 500, 509, 549, 550, 551, 602, 608, 612, 618, 640, 675, 690, 691, 692, 693, 694, 726, 738, 740, 762, 771, 784, 820, 826, 830, 848, 871], "nrow": [15, 44, 71, 117, 124, 144, 149, 174, 181, 208, 223, 262, 263, 777, 856, 871], "fitted_xdawn": 15, "get_channel_typ": [15, 138, 167, 255, 260, 261, 262, 263, 265, 470, 471, 472, 550, 690, 692, 693, 694, 871], "get_montag": [15, 112, 132, 133, 134, 255, 260, 261, 262, 263, 265, 470, 471, 472, 871], "cur_class": 15, "cur_pattern": 15, "pattern_evok": 15, "time_format": [15, 21, 97, 106, 109, 143, 174, 213, 255, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 550, 690, 693, 777, 785, 791, 871], "show_nam": [15, 97, 117, 149, 168, 180, 223, 255, 257, 260, 261, 262, 263, 269, 307, 403, 410, 470, 471, 472, 549, 564, 690, 692, 694, 755, 774, 777, 788, 790, 793, 794, 798, 800, 871], "h_pad": [15, 222], "w_pad": [15, 222], "bertrand": [15, 69, 76, 85, 193, 197, 240, 551, 559, 853, 871], "rivet": [15, 85, 193, 240, 551], "antoin": [15, 85, 193, 240, 551, 871], "souloumiac": [15, 85, 193, 240, 551], "virgini": [15, 85, 193, 240, 551], "attina": [15, 85, 193, 240, 551], "gibert": [15, 85, 193, 240, 551], "algorithm": [15, 27, 31, 68, 72, 75, 80, 81, 82, 85, 110, 123, 132, 150, 154, 155, 160, 164, 193, 197, 199, 202, 207, 222, 227, 230, 231, 232, 240, 265, 266, 270, 304, 349, 402, 403, 417, 424, 468, 470, 471, 517, 536, 550, 551, 553, 558, 560, 561, 566, 569, 571, 576, 578, 585, 586, 587, 650, 667, 672, 728, 837, 842, 846, 847, 848, 859, 871], "enhanc": [15, 85, 192, 193, 223, 227, 240, 409, 550, 551, 569, 677, 678, 680, 681, 830, 849, 856, 859], "2035": [15, 85, 178, 193, 240, 551], "2043": [15, 85, 167, 193, 240, 551], "2009": [15, 34, 57, 85, 114, 169, 193, 202, 222, 223, 240, 271, 466, 551, 564, 677, 678, 680, 681, 846, 856, 871], "2012869": [15, 85, 193, 240, 551], "hubert": [15, 85, 240, 551, 871], "cecotti": [15, 85, 240, 551], "emmanuel": [15, 85, 199, 240, 551], "mabi": [15, 85, 240, 551], "j\u00e9r\u00e9mie": [15, 85, 240, 551], "mattout": [15, 85, 240, 551], "theoret": [15, 85, 192, 193, 199, 217, 240, 403, 551, 826], "effici": [15, 41, 43, 85, 189, 199, 222, 240, 255, 260, 261, 262, 263, 415, 470, 471, 472, 550, 551, 552, 650, 692, 694, 721, 722, 848, 871], "p300": [15, 85, 189, 193, 199, 240, 551, 720, 723], "proceed": [15, 32, 39, 45, 85, 164, 178, 201, 202, 219, 240, 286, 292, 469, 551, 720, 723, 846, 853], "eusipco": [15, 85, 240, 551, 720, 723], "1382": [15, 85, 206, 240, 551], "1386": [15, 85, 240, 551], "barcelona": [15, 85, 240, 551], "url": [15, 85, 110, 149, 193, 240, 349, 374, 379, 381, 385, 396, 397, 466, 517, 551, 647, 652, 672, 720, 723, 830, 853, 871], "ieeexplor": [15, 85, 240, 551, 720, 723], "7073970": [15, 85, 240, 551], "decoding_xdawn_eeg": [15, 20], "cours": [16, 27, 35, 37, 38, 40, 49, 55, 68, 72, 80, 87, 89, 92, 98, 110, 113, 133, 134, 140, 141, 149, 163, 164, 170, 173, 174, 175, 178, 184, 185, 193, 196, 199, 203, 204, 219, 227, 232, 240, 255, 258, 259, 260, 261, 262, 263, 266, 267, 268, 271, 273, 274, 275, 276, 285, 287, 288, 291, 355, 404, 419, 437, 446, 456, 466, 468, 469, 470, 471, 472, 505, 512, 516, 517, 531, 547, 608, 612, 618, 640, 654, 656, 657, 676, 690, 692, 693, 694, 737, 738, 762, 789, 796, 801, 826, 853, 856, 871], "techniqu": [16, 17, 20, 27, 58, 68, 71, 72, 73, 147, 149, 163, 164, 193, 196, 199, 201, 202, 204, 205, 207, 208, 209, 219, 222, 240, 255, 260, 261, 262, 263, 265, 367, 405, 414, 417, 439, 441, 442, 462, 470, 471, 472, 547, 550, 605, 635, 709, 826, 847, 853, 854, 859], "By": [16, 44, 68, 77, 80, 100, 101, 109, 132, 133, 140, 143, 147, 148, 149, 156, 164, 166, 167, 168, 169, 170, 176, 186, 187, 197, 199, 202, 203, 204, 205, 207, 211, 212, 214, 235, 252, 255, 260, 261, 262, 263, 265, 266, 267, 268, 271, 274, 275, 276, 304, 321, 427, 444, 470, 471, 472, 550, 553, 632, 655, 667, 683, 690, 691, 692, 693, 694, 764, 768, 776, 784, 791, 801, 853, 859, 871], "onto": [16, 18, 39, 71, 134, 140, 153, 164, 168, 173, 178, 192, 197, 203, 204, 207, 218, 266, 268, 274, 276, 411, 575, 639, 667, 738, 754, 789, 808, 847, 853, 871], "surrog": [16, 155, 181, 204, 360, 419, 465, 871], "expos": [16, 130, 192, 226, 835, 871], "exhibit": [16, 237, 262, 263, 267, 268, 271, 274, 275, 276, 853], "evolut": [16, 110, 550, 785], "compute_em": [16, 861, 871], "audl": [16, 70], "visl": [16, 70], "wai": [16, 21, 27, 33, 42, 43, 72, 111, 112, 124, 132, 138, 139, 140, 142, 147, 148, 149, 154, 158, 159, 164, 166, 167, 168, 169, 170, 175, 178, 188, 192, 197, 198, 199, 200, 202, 203, 204, 207, 212, 213, 214, 217, 219, 222, 224, 225, 230, 232, 237, 240, 254, 255, 258, 259, 260, 261, 262, 263, 267, 268, 270, 271, 274, 275, 276, 349, 427, 437, 470, 471, 472, 486, 510, 550, 552, 566, 572, 579, 601, 608, 639, 671, 672, 673, 679, 685, 690, 693, 738, 826, 828, 830, 833, 836, 846, 847, 848, 849, 852, 854, 871], "n_epoch": [16, 111, 138, 144, 147, 164, 192, 193, 217, 227, 236, 255, 260, 261, 309, 403, 404, 405, 408, 409, 410, 411, 412, 414, 415, 417, 418, 441, 442, 551, 558, 692, 693, 695, 696, 697, 709, 710, 718, 719, 720, 762, 768, 769, 871], "n_time": [16, 19, 31, 62, 64, 68, 73, 80, 111, 138, 144, 147, 157, 164, 188, 189, 192, 193, 202, 205, 211, 217, 219, 222, 226, 227, 230, 231, 232, 255, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 309, 343, 403, 404, 405, 408, 409, 410, 411, 412, 414, 416, 417, 419, 437, 439, 441, 442, 470, 471, 472, 491, 525, 551, 576, 640, 645, 646, 647, 648, 649, 650, 651, 652, 657, 664, 665, 666, 670, 676, 680, 681, 690, 692, 693, 694, 695, 696, 697, 707, 708, 714, 716, 718, 719, 720, 738, 762, 769, 770, 777, 798, 871], "993": [16, 18, 110], "613": [16, 18, 193, 227], "145": [16, 18, 44, 71, 73, 79, 147, 167, 193, 206, 218, 222, 227], "106": [16, 34, 70, 93, 94, 97, 118, 139, 143, 150, 164, 167, 170, 175, 178, 198, 202, 222, 227, 856], "x_transform": 16, "leav": [16, 135, 142, 170, 189, 196, 201, 211, 586, 828, 836, 838, 871], "recommend": [16, 40, 42, 43, 44, 68, 111, 132, 153, 156, 159, 170, 186, 188, 199, 200, 202, 203, 205, 207, 240, 255, 260, 261, 262, 263, 267, 271, 275, 278, 302, 304, 325, 342, 349, 354, 355, 367, 402, 405, 411, 447, 466, 470, 471, 472, 490, 500, 510, 517, 523, 530, 550, 555, 566, 578, 585, 601, 603, 607, 632, 638, 639, 676, 680, 681, 747, 754, 796, 828, 830, 834, 835, 836, 849, 850, 853, 871], "stratifi": [16, 420], "tend": [16, 160, 176, 199, 201, 202, 222, 560, 850, 853], "overfit": [16, 85, 192], "cannot": [16, 58, 159, 167, 170, 186, 188, 199, 200, 203, 205, 213, 232, 262, 263, 266, 267, 268, 270, 271, 274, 275, 276, 286, 336, 338, 425, 470, 471, 472, 517, 550, 569, 610, 639, 690, 738, 774, 796, 801, 818, 828, 830, 852, 871], "x_scale": 16, "futur": [16, 68, 169, 202, 214, 278, 409, 415, 443, 569, 830, 834, 848, 850, 852, 871], "filters_": [16, 18, 403, 404, 407, 410, 411, 421, 551, 871], "individu": [16, 26, 36, 41, 42, 43, 98, 132, 138, 140, 142, 153, 157, 164, 168, 170, 173, 197, 203, 204, 208, 213, 214, 222, 236, 237, 240, 255, 260, 261, 262, 263, 267, 268, 270, 271, 274, 275, 276, 292, 293, 323, 344, 403, 444, 470, 471, 472, 518, 526, 527, 566, 586, 608, 668, 674, 682, 720, 723, 756, 768, 772, 776, 789, 791, 817, 830, 846, 847, 852, 853, 871], "argsort": [16, 31, 114, 125, 141, 179], "reorder": [16, 46, 114, 255, 260, 261, 262, 263, 470, 471, 472, 482, 690, 692, 693, 694, 769, 799, 871], "kei": [16, 91, 92, 124, 132, 135, 138, 139, 140, 147, 148, 150, 164, 167, 168, 169, 179, 187, 203, 204, 211, 212, 214, 217, 253, 254, 255, 257, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 273, 274, 275, 276, 279, 284, 292, 293, 297, 319, 320, 349, 353, 354, 360, 363, 364, 365, 379, 385, 396, 403, 410, 412, 419, 427, 430, 432, 446, 447, 448, 451, 463, 466, 468, 469, 470, 471, 472, 502, 506, 516, 517, 528, 540, 549, 550, 552, 564, 566, 567, 569, 589, 602, 604, 621, 634, 641, 642, 643, 655, 659, 675, 676, 677, 678, 680, 681, 690, 692, 693, 694, 726, 728, 738, 755, 760, 761, 762, 766, 768, 769, 770, 771, 772, 774, 776, 777, 778, 781, 790, 791, 793, 794, 796, 798, 800, 801, 802, 824, 830, 836, 847, 859, 871], "ems_av": 16, "u": [16, 19, 21, 46, 68, 101, 109, 112, 113, 135, 139, 142, 144, 147, 149, 158, 164, 169, 170, 178, 179, 181, 186, 187, 192, 198, 199, 202, 203, 204, 211, 212, 217, 222, 240, 251, 252, 255, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 403, 410, 437, 470, 471, 472, 525, 830, 833, 838, 849, 852, 853, 856, 871], "schurger": [16, 193, 240, 404, 419], "thu": [16, 18, 42, 46, 54, 68, 100, 111, 138, 139, 147, 150, 168, 169, 173, 178, 180, 186, 193, 199, 202, 204, 205, 207, 222, 255, 260, 261, 262, 263, 265, 267, 268, 271, 274, 275, 276, 342, 405, 414, 426, 437, 439, 441, 470, 471, 472, 517, 525, 528, 552, 722, 826, 830, 846, 847, 850, 853, 871], "equalize_event_count": [16, 147, 149, 164, 226, 227, 232, 255, 260, 261, 693, 871], "103": [16, 34, 49, 111, 118, 167, 195, 226, 227, 856], "112": [16, 68, 112, 132, 167, 169, 211, 216, 222, 227, 240, 558, 856], "aaron": [16, 193, 240, 404, 419], "sebastien": [16, 193, 240, 404, 419, 871], "marti": [16, 193, 240, 404, 419, 871], "reveal": [16, 98, 110, 142, 168, 189, 193, 199, 237, 240, 404, 419, 720, 723], "539": [16, 20, 227], "ems_filt": [16, 20], "continu": [17, 19, 20, 21, 27, 95, 99, 138, 140, 143, 146, 149, 159, 166, 186, 193, 194, 195, 196, 198, 199, 202, 203, 207, 209, 212, 216, 217, 222, 235, 240, 252, 254, 255, 260, 261, 262, 263, 265, 340, 348, 352, 354, 358, 387, 395, 399, 403, 409, 410, 411, 415, 443, 444, 470, 471, 472, 484, 490, 491, 500, 510, 511, 547, 549, 550, 553, 562, 570, 571, 596, 601, 674, 675, 676, 690, 692, 693, 694, 716, 762, 774, 781, 783, 826, 830, 846, 847, 852, 856, 859, 871], "spoc": [17, 20, 27, 240, 255, 260, 265, 403, 411, 470, 484, 511, 551, 861, 871], "xdawn": [17, 20, 27, 75, 82, 240, 255, 257, 260, 262, 263, 265, 354, 367, 403, 407, 410, 418, 470, 471, 547, 605, 769, 861, 871], "em": [17, 20, 27, 193, 255, 260, 262, 263, 265, 419, 470, 471, 547, 605, 861, 871], "recept": [17, 20, 27, 163, 194, 195, 240, 246, 265, 307, 323, 367, 409, 415, 443, 470, 472, 800, 847], "spectro": [17, 20, 27, 111, 163, 194, 195, 255, 260, 262, 263, 265, 409, 411, 415, 443, 470, 484, 511, 708], "ssd": [17, 20, 27, 255, 260, 262, 263, 265, 470, 484, 511, 708, 861, 871], "mvpa": [18, 163, 194, 195, 255, 257, 260, 262, 263, 265, 271, 349, 403, 404, 405, 406, 407, 408, 410, 412, 413, 418, 420, 421, 444, 517, 528, 551, 610, 738, 871], "neurophysiolog": [18, 19, 827], "interpret": [18, 19, 100, 140, 149, 157, 186, 193, 199, 200, 213, 224, 226, 227, 232, 240, 255, 260, 261, 262, 263, 265, 266, 267, 268, 270, 271, 274, 275, 276, 278, 298, 305, 308, 322, 324, 349, 350, 352, 354, 363, 405, 406, 407, 409, 413, 416, 419, 420, 421, 424, 441, 442, 446, 459, 461, 462, 470, 471, 472, 479, 486, 492, 494, 509, 512, 513, 517, 523, 524, 533, 534, 549, 550, 552, 555, 562, 563, 565, 566, 567, 569, 572, 575, 584, 586, 593, 638, 641, 642, 643, 646, 655, 658, 676, 677, 678, 679, 680, 681, 685, 690, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 703, 707, 708, 709, 710, 718, 719, 720, 721, 722, 738, 762, 768, 769, 770, 772, 773, 774, 775, 782, 783, 787, 789, 792, 830, 833, 834, 841, 853, 871], "romain": [18, 871], "trachel": [18, 871], "trachelr": 18, "sample_path": [18, 121, 132, 133, 134], "meg_data": [18, 138], "reshap": [18, 135, 192, 222, 223, 226, 230, 232, 409, 418], "scaler": [18, 861, 871], "coef": [18, 19, 192, 193, 421], "revers": [18, 19, 70, 141, 144, 170, 186, 196, 198, 199, 201, 202, 204, 211, 257, 262, 263, 267, 268, 271, 273, 274, 275, 276, 772, 774, 776, 777, 796, 801, 871], "sequenti": [18, 138, 148, 217, 255, 258, 259, 260, 261, 262, 263, 266, 267, 268, 270, 271, 274, 275, 276, 278, 330, 349, 350, 352, 354, 406, 413, 416, 419, 420, 446, 459, 461, 470, 471, 472, 509, 512, 513, 523, 524, 533, 534, 555, 562, 563, 638, 641, 642, 643, 655, 677, 678, 679, 680, 681, 690, 692, 693, 694, 695, 696, 697, 698, 699, 700, 707, 708, 709, 710, 718, 719, 720, 721, 722, 728, 738, 757, 762, 770, 773, 792, 796, 801, 802, 826], "kai": [18, 19, 142, 240, 407, 409, 421, 427], "g\u00f6rgen": [18, 19, 240, 407, 409, 421], "dylan": [18, 19, 80, 240, 407, 409, 421, 550], "hayn": [18, 19, 240, 407, 409, 421], "benjamin": [18, 19, 240, 403, 407, 409, 421], "blankertz": [18, 19, 240, 403, 407, 409, 421], "felix": [18, 19, 109, 240, 407, 409, 421, 871], "bie\u00dfmann": [18, 19, 240, 407, 409, 421], "On": [18, 19, 68, 69, 164, 166, 197, 199, 202, 203, 237, 240, 252, 278, 407, 409, 421, 432, 452, 550, 559, 828, 830, 835, 836, 838, 848, 853, 871], "multivari": [18, 19, 87, 91, 135, 160, 192, 193, 240, 349, 407, 409, 421, 644, 847, 850, 871], "067": [18, 19, 240, 407, 409, 421], "315": [18, 20, 109, 138, 146, 167, 192, 206, 227, 871], "1025": [18, 111, 142, 193], "linear_model_pattern": [18, 20], "reproduc": [19, 44, 68, 90, 149, 192, 212, 292, 503, 550, 576, 595, 642, 643, 644, 653, 654, 656, 677, 678, 679, 680, 681, 830, 871], "lalor": [19, 192, 240, 409, 847], "mtrf": [19, 192, 240, 409, 861, 871], "receptivefield": [19, 192, 415, 861, 871], "speech": [19, 192, 240, 409, 582, 720, 723, 847], "envelop": [19, 79, 110, 111, 112, 134, 144, 193, 255, 260, 261, 262, 263, 410, 470, 471, 472, 555, 847, 871], "128": [19, 24, 40, 49, 70, 82, 85, 117, 118, 127, 156, 158, 166, 167, 168, 169, 219, 226, 227, 255, 260, 261, 402, 756, 847, 871], "try": [19, 31, 68, 72, 80, 138, 139, 141, 149, 154, 156, 159, 160, 165, 169, 174, 178, 199, 200, 201, 202, 203, 204, 211, 218, 219, 237, 270, 278, 420, 440, 453, 479, 486, 550, 564, 754, 812, 828, 829, 830, 835, 848, 850, 851, 871], "known": [19, 43, 85, 109, 111, 142, 149, 154, 158, 163, 178, 220, 221, 222, 255, 257, 260, 261, 262, 263, 264, 265, 266, 271, 349, 359, 438, 444, 470, 471, 472, 479, 486, 500, 516, 517, 531, 586, 610, 613, 646, 654, 657, 672, 738, 826, 842, 847, 853, 871], "literatur": [19, 142, 237, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 690, 693, 826], "simpli": [19, 42, 133, 141, 142, 144, 147, 168, 169, 186, 197, 198, 202, 204, 207, 212, 213, 222, 236, 237, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 292, 293, 470, 471, 472, 566, 567, 690, 693, 828, 830, 833, 838, 847, 853, 871], "chri": [19, 111, 134, 192, 193, 240, 871], "holdgraf": [19, 111, 112, 134, 192, 193, 240, 409, 871], "choldgraf": [19, 111, 112, 134, 192], "nicola": [19, 46, 240, 650, 871], "barascud": [19, 871], "sphinx_gallery_thumbnail_numb": [19, 117, 193], "scipi": [19, 31, 94, 108, 154, 169, 170, 192, 199, 203, 219, 222, 223, 224, 227, 230, 231, 237, 252, 255, 257, 260, 261, 262, 263, 267, 268, 269, 271, 272, 273, 274, 275, 276, 278, 313, 324, 353, 355, 403, 405, 410, 414, 438, 439, 441, 442, 443, 446, 470, 471, 472, 549, 550, 558, 564, 638, 670, 672, 677, 678, 680, 681, 683, 684, 689, 690, 692, 693, 694, 702, 708, 710, 738, 755, 770, 777, 781, 790, 792, 793, 798, 800, 829, 830, 850, 852, 855, 868, 871], "loadmat": [19, 192], "collect": [19, 68, 124, 149, 155, 166, 170, 181, 182, 188, 189, 197, 207, 237, 240, 253, 255, 257, 260, 261, 262, 263, 316, 403, 410, 430, 470, 471, 472, 549, 550, 675, 690, 692, 694, 752, 762, 770, 777, 781, 793, 798, 800, 826, 830, 845, 846, 853, 856, 871], "listen": [19, 847, 852, 859], "know": [19, 39, 124, 140, 142, 154, 158, 167, 170, 187, 197, 199, 202, 203, 204, 213, 226, 262, 263, 292, 293, 349, 353, 354, 363, 364, 365, 403, 410, 446, 447, 466, 468, 469, 525, 528, 631, 778, 830, 833, 836, 837, 848, 850, 853, 871], "primarili": [19, 68, 168, 196, 199, 405, 470, 471, 472, 592, 760, 826, 837], "speech_data": [19, 192], "down": [19, 21, 68, 109, 132, 149, 159, 192, 193, 199, 203, 213, 214, 224, 226, 255, 257, 258, 260, 261, 262, 263, 269, 270, 403, 410, 443, 470, 471, 472, 549, 550, 576, 677, 678, 680, 681, 690, 692, 694, 738, 766, 768, 769, 770, 774, 777, 781, 790, 791, 793, 798, 828, 830, 852, 871], "biosemi128": [19, 168], "rawarrai": [19, 62, 64, 68, 73, 80, 111, 157, 186, 188, 202, 205, 217, 261, 263, 490, 826, 861, 871], "ln": [19, 89, 836, 853], "800": [19, 32, 42, 43, 50, 78, 123, 124, 131, 133, 142, 153, 154, 158, 164, 173, 175, 199, 206, 230, 267, 268, 271, 274, 275, 276, 462, 738, 796, 801], "alpha": [19, 21, 28, 34, 38, 39, 43, 45, 48, 49, 58, 68, 93, 94, 107, 109, 110, 113, 132, 133, 135, 144, 149, 170, 175, 179, 188, 192, 203, 222, 224, 227, 232, 236, 237, 255, 256, 260, 261, 262, 263, 266, 267, 268, 270, 271, 274, 275, 276, 349, 409, 415, 461, 466, 468, 469, 470, 471, 472, 533, 612, 668, 674, 677, 678, 680, 681, 690, 692, 694, 738, 754, 757, 770, 774, 786, 792, 796, 801, 871], "ln1": 19, "lw": [19, 38, 132, 142, 170, 179, 192, 207, 219, 871], "frameon": [19, 124], "float64": [19, 62, 64, 68, 73, 80, 89, 91, 111, 157, 165, 188, 202, 205, 217, 470, 670, 853], "7677": 19, "7676": 19, "119": [19, 20, 120, 132, 133, 158, 167, 193, 206, 222, 226, 871], "938": [19, 193, 227], "construct": [19, 41, 67, 100, 138, 142, 160, 166, 176, 178, 181, 182, 186, 189, 193, 199, 202, 203, 204, 207, 219, 222, 236, 237, 255, 260, 261, 262, 263, 267, 271, 273, 275, 276, 280, 281, 292, 308, 355, 427, 438, 439, 441, 442, 470, 471, 472, 488, 564, 602, 635, 639, 640, 676, 685, 696, 699, 751, 757, 791, 796, 802, 826, 846, 853, 871], "relationship": [19, 22, 141, 158, 201, 222, 409, 415, 447, 826, 847, 852, 853], "rf": [19, 192, 409], "feature_nam": [19, 192, 409, 871], "corrcoef": [19, 22, 46, 409], "extra": [19, 78, 79, 143, 158, 164, 167, 168, 189, 204, 211, 218, 255, 257, 260, 261, 262, 263, 269, 300, 301, 307, 330, 332, 403, 404, 410, 422, 470, 471, 472, 549, 550, 564, 690, 692, 694, 734, 755, 762, 770, 772, 774, 777, 778, 781, 788, 790, 792, 793, 794, 798, 800, 826, 834, 838, 871], "inclus": [19, 120, 138, 141, 183, 252, 255, 260, 261, 270, 273, 374, 396, 397, 448, 466, 468, 469, 482, 528, 545, 550, 569, 682, 691, 693, 871], "n_delai": [19, 409], "held": [19, 77, 169, 192, 852], "coef_": [19, 192, 407, 409, 549], "n_output": [19, 409, 415], "n_featur": [19, 192, 193, 403, 404, 405, 407, 408, 409, 410, 411, 414, 415, 418, 551, 576, 670], "delays_": [19, 192, 409], "mean_coef": 19, "mean_scor": 19, "ix_ch": 19, "sometim": [19, 27, 59, 80, 109, 112, 114, 124, 125, 132, 138, 142, 154, 159, 166, 167, 187, 188, 197, 199, 200, 202, 204, 205, 222, 255, 257, 260, 261, 262, 263, 265, 269, 403, 410, 470, 471, 472, 487, 549, 550, 564, 596, 602, 690, 692, 694, 755, 762, 770, 777, 781, 790, 793, 798, 800, 826, 830, 838, 846, 850, 853, 871], "well": [19, 22, 36, 46, 68, 76, 113, 117, 132, 134, 135, 138, 141, 142, 148, 150, 158, 160, 163, 164, 167, 170, 173, 180, 182, 186, 187, 189, 192, 196, 197, 199, 201, 202, 203, 204, 205, 207, 209, 211, 217, 219, 227, 235, 237, 240, 255, 260, 261, 262, 263, 270, 271, 315, 337, 349, 363, 403, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 419, 427, 442, 443, 470, 471, 472, 550, 551, 578, 585, 690, 707, 709, 720, 721, 722, 723, 768, 770, 784, 826, 828, 830, 836, 842, 847, 848, 850, 852, 853, 855, 859, 871], "recreat": [19, 124, 138, 199, 761], "time_plot": 19, "180": [19, 24, 34, 78, 89, 108, 154, 167, 176, 189, 196, 198, 200, 202, 206, 227, 267, 268, 271, 274, 275, 276, 437, 743, 871], "highlight": [19, 21, 87, 92, 111, 117, 148, 149, 170, 173, 174, 200, 202, 207, 213, 255, 257, 258, 260, 261, 262, 263, 270, 403, 410, 470, 471, 472, 549, 690, 692, 694, 755, 766, 770, 772, 777, 793, 798, 800, 830, 871], "max_coef": 19, "pcolormesh": [19, 111, 192, 871], "shade": [19, 192, 203, 747, 762, 803, 804, 871], "gouraud": [19, 192], "ncoeffici": 19, "setp": [19, 192, 200], "get_xticklabel": [19, 192], "2c": [19, 853], "ix_plot": 19, "argmin": [19, 117, 142, 237], "vlim": [19, 68, 77, 97, 106, 139, 140, 201, 204, 208, 227, 237, 255, 257, 260, 261, 262, 263, 269, 470, 471, 472, 549, 690, 692, 694, 755, 770, 777, 790, 793, 798, 800, 871], "nfor": 19, "anoth": [19, 31, 44, 68, 84, 92, 123, 139, 141, 142, 143, 147, 149, 153, 154, 159, 165, 169, 178, 186, 198, 199, 202, 203, 207, 212, 213, 214, 222, 227, 255, 260, 261, 262, 263, 266, 267, 268, 270, 271, 272, 274, 275, 276, 278, 309, 349, 350, 352, 354, 355, 406, 413, 416, 419, 420, 429, 446, 459, 461, 470, 471, 472, 498, 509, 512, 513, 523, 524, 533, 534, 536, 555, 562, 563, 638, 641, 642, 643, 655, 661, 677, 678, 679, 680, 681, 692, 694, 695, 696, 697, 698, 699, 700, 707, 708, 709, 710, 718, 719, 720, 721, 722, 727, 728, 759, 770, 773, 791, 792, 811, 826, 828, 830, 838, 847, 852, 853, 856, 871], "case": [19, 43, 57, 68, 71, 87, 91, 92, 100, 111, 117, 120, 124, 138, 141, 142, 147, 153, 159, 160, 163, 166, 167, 169, 170, 178, 179, 183, 186, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 211, 212, 213, 222, 223, 224, 230, 232, 235, 237, 240, 254, 255, 257, 260, 261, 262, 263, 265, 267, 268, 269, 270, 271, 273, 274, 275, 276, 284, 292, 293, 297, 303, 313, 324, 348, 349, 353, 354, 363, 364, 365, 366, 403, 410, 420, 427, 432, 443, 446, 447, 454, 461, 466, 468, 469, 470, 471, 472, 479, 486, 492, 500, 505, 510, 516, 517, 518, 519, 520, 521, 528, 539, 545, 553, 564, 576, 595, 601, 618, 632, 635, 650, 655, 676, 677, 690, 692, 693, 694, 702, 707, 709, 726, 738, 756, 762, 769, 771, 774, 775, 778, 796, 826, 830, 838, 850, 852, 853, 871], "aim": [19, 135, 156, 175, 218, 219, 298, 350, 351, 352], "exploit": [19, 85, 871], "context": [19, 41, 113, 169, 170, 173, 193, 199, 222, 255, 260, 261, 262, 263, 266, 267, 268, 270, 271, 274, 275, 276, 278, 349, 350, 352, 354, 403, 406, 413, 416, 419, 420, 446, 459, 461, 470, 471, 472, 509, 512, 513, 518, 523, 524, 533, 534, 539, 550, 555, 562, 563, 638, 641, 642, 643, 655, 677, 678, 679, 680, 681, 692, 694, 695, 696, 697, 698, 699, 700, 707, 708, 709, 710, 718, 719, 720, 721, 722, 732, 733, 768, 770, 773, 785, 791, 792, 809, 810, 836, 852, 871], "treat": [19, 21, 149, 170, 193, 204, 205, 222, 226, 255, 260, 261, 264, 270, 482, 484, 541, 543, 677, 678, 680, 681, 693, 762, 780, 871], "independ": [19, 68, 72, 80, 106, 109, 149, 156, 160, 164, 177, 178, 179, 193, 196, 198, 199, 201, 202, 203, 207, 213, 222, 240, 255, 260, 261, 262, 263, 267, 268, 270, 271, 274, 275, 276, 353, 406, 413, 418, 470, 471, 472, 550, 551, 558, 564, 569, 576, 578, 672, 674, 677, 678, 680, 681, 684, 781, 785, 837, 846, 847, 850, 853, 871], "therefor": [19, 68, 91, 132, 140, 144, 149, 156, 160, 167, 168, 187, 193, 197, 198, 199, 201, 202, 205, 207, 222, 237, 255, 260, 261, 270, 315, 427, 471, 487, 490, 550, 596, 602, 603, 607, 830, 834, 846, 852, 853], "qualiti": [19, 118, 155, 164, 170, 198, 199, 202, 204, 214, 237, 240, 255, 260, 261, 262, 263, 470, 471, 472, 509, 550, 566, 582, 782, 830, 846, 852, 853, 859, 871], "expens": [19, 163, 164, 170, 586, 854, 859, 871], "especi": [19, 54, 68, 109, 117, 124, 141, 147, 160, 164, 167, 196, 197, 199, 201, 202, 206, 211, 237, 262, 263, 271, 470, 471, 472, 550, 570, 586, 677, 678, 680, 681, 778, 826, 830, 833, 846, 850, 853, 871], "lag": [19, 27, 75, 82, 192, 219, 240, 255, 260, 262, 263, 265, 409, 415, 429, 471, 547, 605, 871], "footcit": [19, 378, 830], "crosseetal2016": 19, "earlier": [19, 143, 165, 169, 189, 196, 199, 211, 262, 263, 292, 293, 349, 353, 354, 363, 364, 365, 403, 410, 445, 446, 447, 466, 468, 469, 528, 778, 834, 871], "wherea": [19, 78, 132, 134, 141, 154, 156, 166, 173, 193, 199, 200, 201, 207, 222, 254, 255, 260, 261, 279, 292, 293, 470, 471, 472, 479, 768, 791, 797, 826, 853, 857, 871], "chang": [19, 31, 43, 44, 111, 124, 132, 140, 143, 147, 149, 154, 156, 159, 165, 168, 169, 170, 173, 174, 176, 182, 186, 187, 189, 192, 197, 202, 203, 204, 208, 212, 213, 214, 218, 222, 225, 230, 232, 237, 240, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 292, 293, 299, 302, 304, 307, 315, 330, 335, 336, 338, 342, 355, 357, 380, 403, 410, 424, 432, 437, 438, 440, 442, 444, 446, 447, 456, 462, 466, 468, 469, 470, 471, 472, 491, 493, 494, 505, 509, 512, 513, 528, 538, 539, 549, 550, 552, 564, 569, 575, 576, 578, 600, 608, 626, 635, 637, 638, 639, 655, 682, 685, 690, 692, 693, 694, 733, 738, 748, 754, 755, 756, 762, 763, 766, 767, 768, 769, 770, 772, 774, 777, 778, 779, 781, 783, 785, 788, 790, 791, 792, 793, 794, 796, 798, 800, 801, 802, 803, 808, 817, 831, 836, 838, 846, 849, 850, 853, 856, 857], "affect": [19, 48, 69, 78, 139, 140, 147, 149, 165, 188, 196, 197, 199, 200, 202, 203, 205, 207, 237, 240, 253, 255, 260, 261, 262, 263, 267, 270, 271, 275, 360, 396, 444, 445, 470, 471, 472, 491, 566, 608, 642, 643, 791, 796, 830, 846, 853, 871], "obvious": [19, 156, 207, 237], "cf": [19, 143, 153], "next": [19, 53, 54, 57, 111, 113, 118, 133, 134, 139, 143, 148, 149, 154, 155, 159, 164, 169, 173, 175, 177, 186, 188, 196, 198, 202, 204, 208, 211, 212, 213, 222, 236, 237, 255, 257, 260, 261, 262, 263, 269, 349, 402, 470, 471, 472, 549, 564, 690, 692, 693, 694, 720, 723, 755, 756, 777, 790, 793, 798, 800, 830, 838, 853, 856, 871], "section": [19, 72, 113, 134, 135, 138, 140, 142, 147, 148, 149, 154, 163, 164, 165, 169, 170, 173, 186, 187, 188, 196, 198, 199, 200, 202, 205, 207, 211, 212, 237, 255, 257, 258, 259, 260, 261, 262, 263, 269, 270, 272, 292, 293, 307, 385, 424, 430, 438, 440, 470, 471, 472, 488, 498, 549, 550, 564, 569, 579, 690, 692, 694, 755, 770, 777, 781, 790, 793, 798, 800, 830, 834, 846, 852, 853, 854, 856, 871], "haufeetal2014": 19, "sr": 19, "1e4": 19, "mean_pattern": 19, "max_pattern": 19, "8384": [19, 871], "1232": [19, 167], "164": [19, 79, 143, 146, 167, 199, 222, 226, 227, 229, 240, 677, 678, 680, 681], "1995": [19, 240, 396, 550, 576, 853], "234": [19, 34, 167, 222, 227], "2406": 19, "307": [19, 45, 109, 110, 167, 206, 227], "2738": 19, "389": [19, 78, 135, 206, 227], "3070": 19, "3340": 19, "555": 19, "3557": 19, "638": [19, 193, 227], "3734": 19, "717": [19, 227], "3856": 19, "767": [19, 192, 227, 240, 846], "3782": 19, "819": [19, 206, 227], "3729": 19, "871": [19, 227], "3684": 19, "947": [19, 34, 240, 466], "3776": 19, "1013": [19, 81, 167, 206, 240, 586], "3804": 19, "1092": 19, "3894": 19, "1147": 19, "3855": 19, "3930": 19, "71it": [19, 32, 105, 109, 193, 206, 222, 223, 227], "1304": 19, "4005": [19, 853], "1384": 19, "4075": 19, "1466": 19, "4147": 19, "68it": [19, 33, 93, 100, 105, 192, 193, 206, 222, 223, 224, 226, 227], "1548": [19, 192, 206, 240], "4213": 19, "1614": 19, "4203": 19, "1683": 19, "4210": 19, "1767": 19, "4278": 19, "1849": 19, "4332": 19, "1930": [19, 192], "4378": 19, "1997": [19, 110, 178, 203, 204, 240, 292, 293, 643, 853], "4365": 19, "2063": 19, "4345": 19, "2136": 19, "4357": 19, "2211": [19, 33, 167, 192, 219], "4373": 19, "2280": 19, "4368": 19, "2354": 19, "4380": 19, "2426": 19, "4382": 19, "2492": 19, "4366": 19, "2555": 19, "4341": 19, "2635": 19, "2717": 19, "4420": 19, "2801": 19, "4466": 19, "2885": 19, "4507": 19, "2966": 19, "4537": 19, "3020": 19, "4470": 19, "3077": 19, "4419": 19, "3134": 19, "4370": 19, "3192": 19, "4329": 19, "3250": [19, 180], "4288": 19, "3320": [19, 240], "4290": 19, "3378": 19, "4254": 19, "3431": 19, "4201": 19, "3484": 19, "4153": 19, "3537": 19, "4108": [19, 93], "3591": 19, "4065": 19, "3658": 19, "4070": 19, "3708": 19, "4017": 19, "3781": 19, "4043": 19, "3854": 19, "3937": 19, "4127": 19, "4020": 19, "4181": 19, "4104": 19, "4235": 19, "4161": 19, "4193": 19, "4223": 19, "4175": 19, "4301": 19, "4209": 19, "4381": 19, "4249": 19, "4452": 19, "4255": 19, "4510": 19, "4220": 19, "4569": 19, "4191": 19, "4628": 19, "4162": 19, "4710": 19, "4778": 19, "4857": 19, "4244": 19, "4934": 19, "4272": 19, "5009": 19, "5067": 19, "4253": 19, "5148": 19, "4292": 19, "5228": [19, 330], "4327": 19, "5306": 19, "4354": 19, "5384": 19, "5462": 19, "4402": 19, "5513": 19, "4337": 19, "5595": 19, "4376": 19, "5677": 19, "4414": 19, "5761": 19, "4454": 19, "5844": 19, "4488": 19, "5925": 19, "4516": 19, "5987": 19, "4483": [19, 174], "6062": 19, "4492": 19, "6146": 19, "4527": 19, "6227": 19, "4554": 19, "6311": 19, "4586": 19, "6392": 19, "4607": 19, "6458": 19, "4579": 19, "6532": 19, "4581": 19, "6613": 19, "4604": 19, "6694": 19, "4626": 19, "6773": 19, "4640": 19, "6853": 19, "4656": 19, "6924": 19, "4644": 19, "6987": 19, "7067": 19, "4625": 19, "7145": 19, "4637": 19, "7221": 19, "7297": 19, "4643": 19, "7371": 19, "7425": 19, "4575": 19, "7507": 19, "4602": 19, "7592": 19, "4636": 19, "4666": 19, "93": [19, 32, 34, 39, 46, 77, 82, 100, 105, 109, 111, 167, 192, 206, 222, 223, 226, 227, 240, 582], "7760": 19, "7840": 19, "4708": 19, "7899": 19, "4654": 19, "7980": 19, "4673": 19, "8061": 19, "4689": 19, "8144": 19, "4712": 19, "8229": 19, "4739": 19, "8315": 19, "4769": 19, "8377": [19, 871], "4722": 19, "4388": 19, "1757": 19, "2480": 19, "2661": 19, "3060": 19, "351": [19, 78, 167, 192], "3445": 19, "432": [19, 115, 127, 169, 193, 206], "3690": 19, "513": [19, 142], "3880": 19, "596": 19, "4042": 19, "3969": 19, "730": [19, 78, 227], "811": [19, 206, 227], "4176": 19, "894": [19, 227], "4270": 19, "975": [19, 34, 71, 193, 227], "1050": [19, 158, 193], "4372": 19, "1112": [19, 167], "4324": 19, "1182": 19, "4328": 19, "1250": 19, "4320": 19, "1317": 19, "4309": 19, "1393": 19, "4340": 19, "1472": 19, "1540": 19, "1608": 19, "4361": 19, "1690": 19, "4411": [19, 58], "1772": 19, "4457": 19, "1855": 19, "4502": 19, "1938": 19, "4546": 19, "4550": 19, "2071": 19, "4486": 19, "2137": 19, "4463": 19, "2206": 19, "4453": 19, "2283": 19, "4474": 19, "2353": [19, 202, 240, 550], "2420": 19, "4449": 19, "2471": 19, "4371": 19, "2636": 19, "4456": 19, "4491": 19, "2799": 19, "4525": 19, "2880": 19, "2940": 19, "4504": 19, "3007": 19, "3088": 19, "3169": 19, "3247": 19, "4564": 19, "3331": 19, "4599": 19, "3383": 19, "4523": 19, "3451": 19, "4506": 19, "3525": 19, "4512": 19, "3604": 19, "4535": 19, "3687": 19, "4567": 19, "3771": 19, "4603": 19, "3838": 19, "4541": 19, "3898": 19, "4496": 19, "3962": 19, "4469": 19, "4044": 19, "4128": 19, "4539": 19, "4211": 19, "4572": 19, "4284": 19, "4571": 19, "4529": 19, "4425": 19, "4553": 19, "4582": 19, "4589": 19, "4608": 19, "4669": 19, "4746": 19, "4803": 19, "4886": 19, "4610": 19, "4970": 19, "5050": 19, "4658": 19, "5130": 19, "5213": 19, "4697": 19, "5271": 19, "4641": 19, "5339": 19, "4621": 19, "5411": 19, "4612": 19, "5490": 19, "4627": 19, "5571": 19, "4648": 19, "5652": 19, "4667": 19, "5715": 19, "5790": 19, "5873": 19, "5954": 19, "4674": 19, "6034": 19, "4688": 19, "6116": 19, "6184": 19, "4684": 19, "6250": [19, 202], "6332": 19, "4676": 19, "6408": 19, "4679": 19, "6476": 19, "4653": 19, "6547": 19, "4642": 19, "6606": 19, "4592": 19, "6665": 19, "6725": 19, "6807": 19, "4534": 19, "6888": [19, 871], "4558": 19, "6968": 19, "7046": 19, "4593": 19, "7097": 19, "4521": 19, "7176": 19, "4540": 19, "7256": 19, "4561": 19, "7336": 19, "7418": 19, "7495": 19, "4615": 19, "7547": 19, "4547": 19, "7625": [19, 189], "4562": 19, "7704": 19, "7785": 19, "4600": 19, "7868": 19, "4629": 19, "7949": 19, "4649": 19, "8011": 19, "4609": 19, "8084": 19, "4605": 19, "8166": 19, "8249": 19, "4655": 19, "8337": 19, "4696": 19, "140": [19, 33, 78, 79, 109, 120, 154, 167, 203, 204, 206, 222, 226, 227, 240, 555, 853], "2509": 19, "2989": 19, "294": [19, 109, 167, 176], "3396": 19, "3705": 19, "3892": 19, "538": [19, 142, 227], "4057": 19, "606": [19, 142, 227], "4073": 19, "673": [19, 193, 227], "4082": 19, "750": [19, 72, 73, 78, 82, 141, 227, 847], "832": [19, 55, 202, 210, 227], "4261": 19, "913": [19, 142, 193, 227], "4339": 19, "995": [19, 193, 206, 217, 227], "4408": [19, 58, 182, 189], "1068": [19, 193], "4417": 19, "1131": [19, 33, 167, 219], "1210": 19, "1290": 19, "4459": 19, "1371": [19, 132, 133, 155, 193, 235, 240, 255, 260, 261, 262, 263, 470, 471, 472, 692, 694, 702, 707, 709], "4503": 19, "1451": [19, 192], "1526": 19, "1583": 19, "4476": 19, "1650": 19, "1724": 19, "4462": 19, "1805": 19, "4501": 19, "1884": 19, "1961": [19, 39, 240, 468], "4545": 19, "2017": [19, 81, 132, 149, 202, 240, 386, 550, 586, 650, 655], "4475": 19, "2094": 19, "2175": 19, "4531": 19, "2253": 19, "4551": 19, "2332": [19, 83, 167, 544], "4573": 19, "2408": 19, "2469": 19, "2534": 19, "2600": 19, "4480": 19, "2665": 19, "2728": 19, "4423": 19, "2791": 19, "4395": 19, "2852": [19, 859], "2917": 19, "4338": 19, "2999": 19, "4379": 19, "3079": 19, "3158": 19, "4440": 19, "3235": 19, "4460": 19, "3307": 19, "4458": 19, "3368": 19, "4421": 19, "3448": 19, "3530": 19, "4493": [19, 330], "4520": 19, "3762": 19, "4536": 19, "3817": 19, "3978": 19, "4530": 19, "4059": 19, "4556": 19, "4142": 19, "4588": 19, "4224": 19, "4614": 19, "4548": 19, "4356": 19, "4431": 19, "4568": 19, "4513": 19, "4594": 19, "4630": 19, "4735": 19, "4590": [19, 40], "4809": 19, "4591": 19, "4891": 19, "4616": 19, "4972": 19, "4638": 19, "5054": 19, "4662": 19, "5137": 19, "4687": 19, "5205": 19, "4663": 19, "4635": 19, "5354": 19, "4661": 19, "5437": 19, "4686": 19, "5520": 19, "5603": 19, "4733": 19, "4725": 19, "5738": 19, "5822": 19, "4705": 19, "5904": 19, "4726": 19, "5985": 19, "4743": 19, "6067": 19, "4759": 19, "6145": 19, "4762": 19, "6201": 19, "4698": 19, "6281": 19, "6363": 19, "4731": 19, "6445": 19, "4748": 19, "6525": 19, "4761": 19, "6604": 19, "6663": 19, "4713": 19, "6739": 19, "6821": 19, "4732": 19, "6903": 19, "4750": 19, "6983": 19, "4763": 19, "7063": 19, "4772": 19, "7128": 19, "4646": 19, "7223": 19, "4560": 19, "7270": 19, "4478": 19, "7322": 19, "4416": 19, "7405": 19, "7474": 19, "4444": 19, "7539": 19, "7622": 19, "4461": 19, "7703": 19, "4490": 19, "7783": 19, "4515": 19, "7860": 19, "4528": 19, "7936": [19, 181], "7992": 19, "4487": 19, "8062": 19, "8142": 19, "8225": 19, "8309": 19, "sens": [19, 59, 68, 140, 158, 199, 204, 237, 262, 263, 292, 293, 349, 353, 354, 363, 364, 365, 403, 410, 446, 447, 466, 468, 469, 528, 760, 778, 830, 852, 853], "actual": [19, 23, 27, 40, 42, 59, 62, 78, 112, 125, 132, 142, 149, 156, 158, 160, 166, 168, 170, 173, 180, 181, 182, 183, 187, 188, 192, 197, 198, 199, 200, 213, 222, 224, 227, 230, 231, 232, 237, 253, 270, 437, 530, 550, 826, 830, 847, 853, 871], "valid_samples_": [19, 409], "grei": [19, 110, 140, 237, 262, 263, 690, 774, 871], "attempt": [19, 73, 192, 196, 224, 255, 260, 261, 262, 263, 268, 274, 276, 369, 470, 471, 472, 478, 488, 550, 621, 635, 801, 824, 826, 852, 871], "reflect": [19, 59, 68, 117, 133, 139, 147, 149, 158, 159, 175, 179, 196, 201, 202, 204, 211, 255, 260, 261, 262, 263, 292, 293, 349, 353, 354, 363, 364, 365, 403, 410, 441, 442, 443, 446, 447, 466, 468, 469, 470, 471, 472, 528, 608, 670, 777, 778, 791, 826, 830, 846, 853, 871], "toward": [19, 42, 45, 53, 54, 68, 100, 158, 178, 198, 226, 237, 240, 445, 447, 532, 553, 853, 871], "directli": [19, 33, 42, 91, 92, 141, 142, 147, 168, 169, 170, 186, 188, 193, 197, 200, 201, 202, 203, 204, 213, 230, 236, 237, 252, 255, 257, 258, 259, 260, 261, 262, 263, 265, 267, 269, 271, 272, 275, 276, 307, 308, 313, 317, 354, 365, 403, 410, 439, 468, 470, 471, 472, 473, 474, 479, 491, 549, 550, 564, 566, 608, 635, 690, 692, 694, 740, 755, 757, 768, 770, 777, 781, 790, 793, 796, 798, 800, 802, 848, 853, 861, 871], "obtain": [19, 37, 41, 42, 59, 87, 91, 92, 132, 135, 144, 149, 153, 155, 156, 168, 170, 173, 175, 176, 182, 183, 199, 201, 207, 211, 212, 219, 222, 224, 227, 236, 255, 258, 260, 261, 262, 263, 264, 267, 271, 275, 276, 293, 304, 337, 339, 349, 351, 355, 367, 409, 411, 453, 454, 465, 468, 469, 470, 471, 472, 479, 486, 490, 503, 517, 525, 536, 550, 554, 561, 576, 595, 603, 607, 613, 639, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 656, 657, 660, 664, 677, 678, 679, 680, 681, 691, 738, 757, 773, 777, 796, 797, 802, 826, 846, 847, 851, 852, 853, 871], "via": [19, 132, 133, 134, 140, 142, 143, 147, 148, 155, 166, 167, 168, 169, 170, 173, 178, 196, 197, 198, 202, 203, 211, 214, 222, 223, 226, 230, 232, 235, 236, 240, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 270, 272, 273, 275, 276, 279, 292, 293, 304, 317, 323, 324, 369, 403, 405, 410, 414, 437, 439, 441, 442, 455, 462, 470, 471, 472, 484, 549, 550, 671, 677, 678, 680, 681, 689, 692, 693, 694, 740, 754, 755, 758, 759, 768, 772, 773, 777, 785, 791, 793, 817, 826, 828, 830, 832, 833, 838, 850, 871], "procedur": [19, 110, 142, 159, 160, 186, 201, 202, 207, 222, 224, 225, 226, 232, 237, 240, 253, 255, 260, 261, 262, 263, 342, 349, 354, 411, 470, 471, 472, 550, 551, 564, 566, 576, 586, 608, 677, 826, 847, 850, 853, 856, 871], "straightforward": [19, 100, 187, 199, 219, 853, 871], "sign": [19, 28, 37, 38, 46, 149, 202, 222, 225, 230, 262, 263, 267, 268, 271, 274, 275, 276, 330, 437, 445, 466, 468, 469, 504, 517, 518, 519, 520, 521, 576, 677, 678, 680, 681, 830, 853, 871], "strength": [19, 22, 34, 91, 149, 173, 202, 268, 274, 276, 564, 853], "direct": [19, 59, 77, 120, 132, 148, 154, 158, 159, 166, 176, 178, 183, 197, 203, 204, 206, 237, 240, 252, 255, 258, 260, 261, 267, 268, 270, 271, 274, 275, 276, 286, 292, 293, 425, 437, 445, 470, 471, 472, 482, 517, 560, 642, 692, 694, 738, 768, 780, 791, 801, 811, 826, 830, 836, 850, 852, 853, 871], "125": [19, 24, 34, 44, 124, 135, 141, 154, 158, 167, 168, 199, 206, 222, 226, 227, 333], "nbetween": 19, "giovanni": [19, 192, 240, 409, 847], "di": [19, 39, 141, 192, 240, 409, 847], "liberto": [19, 192, 240, 409, 847], "adam": [19, 133, 134, 192, 240, 409, 847, 858, 871], "bednar": [19, 192, 240, 409, 847], "edmund": [19, 192, 240, 409, 847], "fnhum": [19, 149, 192, 240, 409, 555, 847], "00604": [19, 192, 240, 409, 847], "415": [19, 20, 227], "receptive_field_mtrf": [19, 20], "643": [20, 31, 55, 120, 127, 206], "auto_examples_decod": 20, "1024": [20, 111, 132, 677, 678, 680, 681], "135": [20, 115, 122, 149, 156, 167, 203, 204, 205, 206, 226, 240, 273, 853], "ssd_spatial_filt": [20, 21], "retain": [21, 109, 147, 176, 197, 198, 211, 222, 255, 260, 261, 270, 273, 427, 550, 677, 678, 680, 681, 781, 828, 859, 871], "oscillatori": [21, 110, 219, 236, 240, 292, 293], "propos": [21, 237, 564, 569, 830], "surround": [21, 79, 98, 132, 237, 411, 555, 587, 685, 811, 830], "victoria": [21, 871], "peterson": [21, 871], "victoriapeterson09": 21, "freqs_sig": 21, "freqs_nois": 21, "sort_by_spectral_ratio": [21, 411], "filt_params_sign": [21, 411], "l_trans_bandwidth": [21, 110, 111, 199, 208, 255, 260, 261, 262, 263, 405, 414, 439, 441, 470, 471, 472, 582, 871], "filt_params_nois": [21, 411], "72000": [21, 79, 189], "196608": 21, "262144": 21, "327680": 21, "393216": 21, "458752": 21, "67108864": 21, "67174400": 21, "134742016": 21, "136314880": 21, "268435456": 21, "825": [21, 80, 111, 193, 240, 550], "ratio": [21, 57, 85, 124, 142, 164, 193, 199, 202, 204, 219, 224, 225, 226, 227, 240, 267, 268, 271, 274, 275, 276, 283, 411, 532, 533, 534, 550, 551, 631, 648, 649, 690, 693, 741, 798, 846, 853, 871], "accord": [21, 154, 167, 168, 192, 211, 253, 255, 260, 261, 262, 263, 409, 432, 470, 471, 472, 479, 482, 486, 488, 545, 579, 596, 635, 640, 847, 853, 856, 871], "either": [21, 42, 140, 147, 148, 149, 164, 165, 166, 168, 170, 188, 196, 200, 205, 207, 212, 213, 218, 222, 237, 252, 255, 257, 260, 261, 262, 263, 264, 267, 268, 269, 271, 273, 274, 275, 276, 284, 297, 316, 349, 403, 410, 411, 420, 430, 438, 461, 464, 470, 471, 472, 500, 501, 503, 509, 515, 516, 549, 550, 552, 561, 564, 569, 578, 608, 618, 635, 637, 641, 642, 643, 655, 675, 676, 690, 691, 692, 694, 707, 713, 726, 738, 754, 755, 759, 762, 769, 770, 777, 781, 782, 790, 791, 792, 793, 796, 798, 800, 801, 802, 806, 830, 836, 846, 847, 850, 856, 871], "multipli": [21, 186, 199, 222, 265, 267, 268, 271, 274, 275, 276, 294, 411, 437, 517, 523, 690, 853, 856], "eq": [21, 411, 853], "c_n": [21, 853], "reli": [21, 167, 198, 237, 307, 830, 846, 850, 853, 856, 859, 871], "suggest": [21, 26, 139, 142, 160, 198, 199, 200, 201, 202, 204, 255, 260, 261, 285, 287, 738, 829, 834, 835, 850, 852], "pariet": [21, 48, 625, 738], "ssd_sourc": [21, 411], "psd": [21, 27, 66, 72, 89, 102, 103, 108, 130, 135, 164, 170, 193, 196, 200, 214, 235, 236, 255, 257, 260, 261, 262, 263, 265, 266, 270, 271, 354, 408, 444, 470, 471, 472, 508, 513, 516, 523, 524, 528, 531, 547, 597, 612, 638, 692, 694, 697, 700, 707, 708, 709, 710, 732, 738, 754, 770, 792, 806, 847, 871], "psd_array_welch": [21, 235, 255, 260, 261, 262, 263, 411, 470, 471, 472, 692, 694, 710, 861, 871], "n_fft": [21, 105, 106, 111, 130, 235, 237, 255, 260, 261, 262, 263, 411, 470, 471, 472, 523, 691, 692, 694, 695, 697, 698, 700, 708, 710, 720, 723, 792, 871], "4096": [21, 180, 264], "spec_ratio": [21, 411], "alreadi": [21, 30, 31, 33, 34, 37, 38, 39, 40, 43, 44, 47, 49, 50, 53, 54, 56, 57, 58, 59, 68, 69, 72, 76, 83, 84, 91, 92, 112, 113, 116, 117, 124, 132, 133, 140, 142, 143, 147, 148, 149, 156, 157, 158, 160, 164, 167, 168, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 186, 187, 196, 198, 199, 202, 203, 204, 207, 211, 217, 237, 252, 255, 260, 261, 262, 263, 267, 268, 270, 271, 272, 274, 275, 276, 292, 293, 302, 304, 323, 349, 353, 354, 362, 363, 364, 365, 366, 374, 396, 397, 403, 410, 437, 438, 446, 447, 466, 468, 469, 470, 471, 472, 511, 528, 561, 562, 566, 608, 628, 629, 691, 711, 759, 762, 778, 821, 830, 831, 832, 847, 850, 853, 854, 859, 871], "sorter": 21, "get_spectral_ratio": [21, 411], "spectral": [21, 27, 32, 33, 66, 69, 102, 103, 109, 110, 111, 114, 130, 135, 140, 164, 170, 193, 198, 206, 219, 236, 240, 255, 257, 260, 261, 262, 263, 265, 266, 271, 285, 286, 287, 292, 354, 408, 411, 444, 447, 470, 471, 472, 508, 513, 516, 523, 524, 528, 531, 547, 550, 597, 605, 612, 638, 678, 691, 692, 694, 695, 696, 697, 698, 699, 700, 701, 706, 707, 708, 709, 710, 732, 738, 754, 764, 770, 792, 806, 847, 859, 871], "orang": [21, 149, 154, 188, 208, 227, 232, 795], "frac": [21, 147, 199, 200, 207, 222, 271, 525, 650, 703, 853], "p_f": 21, "p_": [21, 853], "sf": [21, 222], "384": [21, 34, 55, 78, 114, 127, 142, 169, 206, 227], "spectrum": [21, 72, 80, 100, 101, 105, 109, 130, 135, 141, 163, 164, 170, 196, 200, 202, 204, 214, 219, 236, 237, 238, 239, 240, 255, 260, 261, 262, 263, 444, 470, 471, 472, 550, 692, 707, 708, 709, 710, 712, 733, 781, 783, 792, 826, 856, 859, 861, 871], "lowest": [21, 237, 255, 260, 261, 262, 263, 266, 336, 566, 667, 690, 691, 693, 762, 772], "below50": 21, "bandfilt": 21, "loglog": 21, "fill_between": [21, 110, 149, 232, 236, 237], "10000": [21, 81, 108, 132, 432, 466, 576, 655, 679], "green": [21, 47, 48, 49, 78, 113, 149, 154, 179, 188, 204, 237, 262, 263, 738, 759, 772, 789, 795, 871], "enjoi": [21, 237], "situat": [21, 201, 205, 219, 270, 314, 430, 550, 830, 834, 852, 871], "chunk": [21, 77, 81, 135, 138, 144, 182, 207, 352, 354, 432, 470, 471, 472, 550, 569, 640, 846, 871], "overlap": [21, 68, 81, 96, 106, 138, 144, 149, 164, 166, 189, 198, 207, 212, 213, 235, 240, 254, 255, 260, 261, 262, 263, 321, 354, 405, 414, 427, 439, 441, 442, 461, 470, 471, 472, 510, 511, 523, 536, 551, 566, 567, 657, 676, 708, 710, 738, 768, 792, 826, 871], "ssd_epoch": 21, "pattern_epoch": 21, "1251": 21, "1661": 21, "guido": [21, 240, 411], "nolt": [21, 240, 411], "gabriel": [21, 39, 201, 240, 411, 468, 549, 593], "curio": [21, 240, 411], "reliabl": [21, 100, 167, 200, 240, 411, 550], "basi": [21, 144, 160, 193, 240, 411, 424, 561, 569, 578, 850, 853, 871], "spatio": [21, 45, 58, 163, 182, 192, 193, 222, 223, 233, 234, 240, 255, 260, 262, 263, 265, 271, 272, 273, 355, 409, 411, 426, 467, 468, 471, 516, 517, 531, 547, 578, 605, 618, 620, 645, 646, 647, 648, 649, 650, 651, 652, 662, 664, 665, 666, 670, 671, 673, 680, 681, 682, 738, 853, 871], "1528": [21, 192, 240, 411], "1535": [21, 240, 411], "057": [21, 50, 55, 78, 82, 138, 140, 147, 167, 219, 240, 411], "produc": [22, 37, 79, 80, 114, 116, 125, 142, 159, 170, 177, 181, 188, 199, 201, 207, 222, 237, 240, 252, 255, 258, 260, 266, 270, 272, 273, 275, 276, 298, 299, 322, 325, 346, 350, 351, 352, 354, 361, 381, 461, 463, 470, 471, 472, 503, 509, 510, 513, 523, 536, 550, 553, 559, 562, 563, 569, 575, 576, 595, 601, 605, 625, 639, 641, 642, 643, 644, 653, 654, 655, 656, 658, 677, 678, 679, 680, 681, 685, 738, 754, 755, 791, 820, 846, 852, 853, 856, 871], "abl": [22, 87, 132, 133, 135, 142, 157, 159, 163, 170, 201, 202, 207, 219, 230, 270, 442, 470, 471, 472, 550, 781, 828, 830, 847, 850, 853, 859, 871], "region": [22, 37, 40, 46, 48, 91, 92, 125, 133, 135, 148, 153, 179, 188, 199, 200, 222, 223, 236, 237, 255, 258, 260, 261, 262, 263, 273, 319, 405, 414, 439, 441, 442, 455, 456, 457, 461, 470, 471, 472, 503, 595, 639, 650, 738, 768, 791, 794, 826, 846, 859, 871], "source_spac": [22, 273, 861, 871], "compute_distance_to_sensor": [22, 861, 871], "source_estim": [22, 27, 35, 55, 266, 271, 612, 618, 737], "surf_ori": [22, 46, 47, 48, 53, 54, 66, 156, 176, 218, 264, 359, 528, 871], "leadfield": [22, 40, 156, 161, 163, 170, 292, 293, 294, 871], "7498": [22, 31, 34, 39, 41, 42, 46, 47, 48, 50, 51, 52, 53, 54, 57, 58, 59, 66, 87, 89, 90, 91, 92, 128, 170, 173, 175, 176, 177, 179, 193, 218, 219], "combin": [22, 24, 29, 30, 31, 33, 34, 36, 39, 40, 41, 43, 46, 47, 48, 50, 53, 54, 57, 58, 66, 84, 87, 89, 90, 91, 92, 98, 109, 123, 125, 128, 129, 135, 138, 139, 140, 143, 148, 149, 153, 164, 166, 168, 173, 175, 176, 177, 178, 179, 180, 186, 188, 189, 192, 193, 196, 204, 205, 207, 208, 211, 213, 219, 222, 224, 227, 230, 232, 240, 252, 255, 260, 261, 262, 263, 266, 267, 268, 271, 273, 274, 275, 276, 286, 292, 293, 300, 301, 309, 349, 350, 351, 352, 357, 365, 381, 403, 408, 410, 422, 425, 462, 470, 471, 472, 511, 512, 517, 520, 523, 524, 526, 527, 550, 562, 563, 612, 618, 625, 661, 690, 692, 693, 694, 697, 700, 707, 709, 738, 754, 762, 769, 770, 777, 780, 798, 830, 853, 856, 859, 871], "local": [22, 26, 27, 32, 33, 34, 35, 39, 40, 41, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 66, 68, 81, 87, 89, 91, 106, 110, 113, 117, 132, 148, 149, 150, 153, 156, 164, 169, 173, 177, 178, 182, 185, 189, 193, 204, 208, 219, 240, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 269, 271, 275, 292, 293, 295, 307, 311, 325, 337, 339, 348, 349, 353, 354, 359, 363, 364, 365, 367, 371, 372, 373, 374, 376, 377, 379, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 410, 424, 444, 446, 447, 460, 466, 468, 469, 470, 471, 472, 478, 512, 513, 516, 517, 518, 528, 532, 549, 558, 564, 570, 599, 608, 610, 623, 632, 635, 638, 647, 650, 652, 654, 689, 690, 692, 694, 730, 738, 747, 754, 755, 763, 766, 770, 775, 777, 778, 790, 793, 797, 798, 800, 806, 811, 826, 828, 831, 836, 837, 839, 850, 853, 859, 871], "grad_map": 22, "sensitivity_map": [22, 26, 128, 156, 861], "mag_map": [22, 26], "eeg_map": 22, "204": [22, 33, 49, 71, 74, 90, 110, 128, 144, 156, 164, 165, 166, 167, 170, 179, 181, 182, 185, 193, 196, 197, 198, 203, 204, 207, 211, 212, 213, 214, 219, 227, 236, 871], "gain": [22, 24, 31, 40, 64, 87, 90, 91, 92, 106, 156, 178, 199, 219, 292, 293, 438, 447, 779, 786, 853, 871], "picks_meg": 22, "picks_eeg": 22, "sharex": [22, 44, 71, 87, 110, 192, 204, 237], "dipol": [22, 26, 27, 28, 31, 33, 34, 35, 38, 39, 40, 41, 45, 50, 55, 58, 59, 66, 80, 81, 89, 90, 91, 106, 116, 150, 153, 156, 163, 164, 167, 175, 177, 178, 180, 181, 182, 183, 184, 185, 189, 201, 217, 219, 240, 255, 257, 259, 260, 261, 262, 263, 264, 265, 268, 271, 274, 275, 276, 292, 293, 294, 295, 297, 306, 337, 348, 359, 367, 383, 424, 444, 446, 448, 466, 467, 468, 469, 470, 471, 472, 512, 516, 517, 519, 528, 537, 547, 597, 599, 600, 608, 610, 623, 625, 638, 642, 643, 647, 650, 652, 654, 656, 690, 692, 693, 694, 738, 747, 754, 755, 765, 766, 797, 801, 806, 826, 837, 839, 842, 846, 853, 856, 861, 871], "fontsiz": [22, 36, 109, 117, 124, 142, 174, 207, 797], "fig_2": [22, 170], "hist": [22, 68, 128, 142, 208], "ravel": [22, 108, 110, 114, 128, 192, 199, 223], "brain_sen": 22, "add_text": [22, 42, 46, 47, 48, 49, 53, 54, 173, 175, 177, 738], "font_siz": [22, 42, 46, 47, 48, 49, 53, 54, 173, 175, 177, 738], "02108201": 22, "32186553": 22, "minimum": [22, 31, 56, 68, 76, 80, 134, 138, 147, 149, 160, 164, 166, 175, 177, 178, 198, 199, 204, 218, 230, 240, 255, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 288, 289, 290, 291, 292, 293, 336, 338, 339, 354, 436, 439, 441, 442, 444, 446, 447, 470, 471, 472, 513, 517, 518, 519, 520, 521, 523, 524, 528, 530, 532, 533, 534, 552, 553, 558, 566, 567, 569, 647, 650, 652, 655, 683, 690, 695, 696, 697, 698, 699, 700, 701, 720, 723, 738, 762, 776, 792, 795, 826, 837, 839, 846, 856, 871], "euclidean": [22, 266, 271, 273, 532, 650, 653, 656, 658, 661], "maxdep": 22, "vertno": [22, 42, 47, 48, 49, 156, 173, 176, 218, 230, 231, 232, 271, 273, 274, 856], "depths_map": 22, "brain_dep": 22, "like": [22, 26, 27, 31, 33, 34, 35, 39, 40, 41, 46, 55, 58, 59, 68, 79, 80, 98, 106, 109, 124, 132, 133, 134, 138, 139, 140, 141, 142, 147, 148, 149, 153, 154, 158, 159, 160, 164, 165, 166, 167, 169, 170, 173, 175, 179, 180, 186, 187, 188, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 211, 212, 213, 214, 217, 222, 226, 237, 252, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 279, 284, 297, 298, 299, 302, 303, 304, 307, 325, 326, 327, 328, 329, 330, 331, 332, 334, 336, 338, 342, 348, 349, 355, 360, 361, 362, 379, 383, 403, 410, 426, 427, 432, 438, 444, 446, 455, 459, 461, 462, 463, 464, 465, 470, 471, 472, 473, 475, 477, 488, 491, 493, 502, 503, 505, 507, 509, 512, 513, 516, 517, 519, 528, 536, 540, 549, 550, 555, 564, 567, 571, 575, 576, 578, 586, 592, 593, 595, 597, 599, 600, 601, 608, 613, 621, 622, 623, 625, 638, 639, 642, 643, 644, 653, 654, 655, 656, 659, 667, 671, 673, 676, 677, 678, 679, 680, 681, 685, 686, 689, 690, 692, 693, 694, 702, 705, 712, 717, 726, 727, 730, 735, 738, 754, 755, 756, 762, 766, 768, 770, 772, 774, 776, 777, 778, 781, 785, 788, 790, 791, 792, 793, 794, 796, 798, 800, 801, 802, 811, 821, 824, 825, 826, 828, 829, 830, 831, 833, 834, 835, 836, 837, 838, 846, 848, 850, 852, 853, 856, 871], "corr": [22, 252], "gradiomt": 22, "815476": 22, "sensitivii": 22, "highest": [22, 132, 174, 202, 255, 258, 260, 261, 262, 263, 266, 447, 470, 471, 472, 566, 667, 690, 691, 693, 766, 778, 853], "close": [22, 59, 68, 94, 104, 108, 114, 117, 124, 132, 138, 140, 142, 147, 149, 156, 158, 170, 189, 197, 198, 201, 202, 204, 205, 208, 214, 219, 222, 227, 255, 258, 260, 261, 262, 263, 266, 337, 353, 374, 426, 446, 462, 463, 470, 471, 472, 550, 567, 571, 661, 685, 692, 694, 738, 744, 745, 766, 768, 785, 791, 794, 830, 834, 842, 850, 853, 856, 871], "decreas": [22, 54, 109, 199, 219, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 403, 424, 470, 471, 472, 550, 686, 690, 693, 738, 853, 871], "rapidli": 22, "inreas": 22, "confirm": [22, 46, 68, 169, 188, 198, 202, 830, 853], "063": [22, 25], "forward_sensitivity_map": [22, 25], "coregistr": [23, 27, 78, 154, 158, 159, 161, 162, 163, 179, 258, 265, 270, 273, 299, 303, 361, 366, 382, 422, 463, 476, 509, 513, 575, 629, 658, 685, 738, 754, 806, 844, 846, 859, 861, 871], "displai": [23, 24, 25, 27, 43, 46, 74, 109, 113, 122, 138, 141, 149, 154, 156, 158, 160, 164, 202, 205, 211, 214, 223, 227, 252, 253, 255, 257, 260, 261, 262, 263, 264, 266, 267, 268, 271, 273, 274, 275, 276, 307, 359, 403, 410, 470, 471, 472, 509, 547, 549, 550, 610, 631, 658, 690, 692, 694, 738, 739, 753, 754, 762, 767, 768, 769, 771, 772, 773, 774, 776, 777, 778, 779, 782, 783, 788, 791, 792, 793, 794, 796, 797, 798, 799, 801, 802, 826, 828, 829, 833, 836, 842, 850, 853, 856, 859, 871], "cerebellum": [23, 25, 27, 40, 273, 638, 639, 754, 806], "volum": [23, 25, 27, 31, 35, 43, 55, 58, 69, 132, 133, 134, 153, 154, 156, 158, 164, 170, 174, 178, 207, 240, 252, 257, 258, 262, 264, 265, 267, 268, 271, 272, 273, 274, 275, 276, 298, 304, 307, 355, 437, 448, 456, 457, 466, 468, 469, 505, 513, 516, 517, 527, 528, 529, 531, 599, 608, 618, 621, 630, 638, 639, 662, 665, 682, 685, 727, 728, 738, 754, 796, 801, 802, 806, 811, 824, 826, 845, 846, 853, 859, 871], "morph": [23, 25, 27, 35, 39, 55, 131, 132, 134, 153, 158, 175, 179, 230, 231, 232, 252, 262, 264, 265, 266, 267, 271, 272, 273, 274, 275, 276, 355, 459, 476, 513, 516, 517, 531, 536, 537, 546, 547, 608, 610, 615, 618, 619, 620, 631, 639, 727, 728, 738, 796, 802, 811, 826, 846, 847, 856, 871], "its": [24, 68, 73, 91, 123, 133, 135, 138, 139, 141, 143, 148, 154, 156, 158, 164, 166, 167, 168, 169, 170, 173, 178, 181, 187, 188, 193, 196, 197, 199, 200, 202, 203, 204, 205, 207, 211, 212, 214, 222, 227, 235, 237, 240, 255, 257, 258, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 277, 307, 403, 406, 417, 418, 437, 444, 468, 469, 470, 471, 472, 479, 486, 549, 550, 564, 646, 656, 676, 677, 678, 680, 681, 690, 692, 693, 694, 705, 708, 710, 717, 728, 755, 762, 766, 769, 770, 777, 781, 789, 790, 791, 793, 796, 798, 800, 801, 826, 828, 829, 830, 834, 836, 846, 848, 850, 852, 853, 871], "freesurf": [24, 32, 33, 37, 40, 42, 43, 46, 113, 133, 134, 154, 156, 159, 161, 162, 163, 170, 173, 180, 189, 240, 256, 258, 265, 266, 267, 268, 270, 271, 273, 274, 275, 276, 298, 302, 303, 304, 307, 355, 360, 361, 362, 366, 378, 380, 381, 383, 386, 402, 422, 437, 455, 456, 457, 459, 461, 462, 463, 464, 465, 476, 503, 505, 507, 509, 536, 575, 595, 611, 612, 613, 614, 620, 621, 622, 623, 638, 639, 653, 656, 667, 685, 686, 688, 730, 737, 738, 749, 754, 756, 766, 796, 801, 802, 806, 811, 820, 821, 824, 826, 834, 836, 837, 842, 847, 850, 871], "alan": [24, 240, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 690, 693, 871], "leggitt": [24, 871], "ucsf": 24, "setup_source_spac": [24, 40, 106, 153, 156, 158, 176, 189, 273, 620, 639, 660, 664, 846, 853, 861, 871], "setup_volume_source_spac": [24, 40, 49, 154, 156, 158, 205, 267, 268, 271, 273, 274, 275, 276, 437, 505, 620, 638, 853, 861, 871], "aseg_fnam": 24, "aseg": [24, 40, 133, 174, 179, 258, 267, 268, 271, 274, 275, 276, 437, 455, 456, 505, 639, 738, 826, 871], "mgz": [24, 30, 40, 43, 49, 132, 154, 156, 158, 159, 174, 178, 179, 180, 252, 267, 268, 271, 273, 274, 275, 276, 298, 302, 303, 304, 383, 437, 456, 505, 639, 756, 802, 826, 850, 853, 871], "surf": [24, 26, 40, 78, 106, 115, 133, 153, 154, 155, 156, 157, 158, 159, 170, 174, 179, 218, 222, 252, 258, 266, 271, 273, 275, 276, 302, 453, 454, 503, 508, 537, 598, 621, 653, 656, 687, 725, 738, 756, 766, 814, 846, 847, 853], "add_dist": [24, 40, 106, 156, 252, 638, 660, 664, 853, 871], "lh_surf": 24, "cortex": [24, 26, 31, 36, 40, 42, 51, 52, 53, 54, 57, 59, 91, 106, 113, 123, 132, 133, 143, 149, 156, 164, 176, 179, 188, 192, 202, 208, 219, 240, 267, 268, 271, 273, 274, 275, 276, 381, 409, 582, 595, 656, 738, 796, 801, 826, 846, 847, 853, 856, 871], "volume_label": [24, 40, 267, 268, 271, 273, 274, 275, 276, 437, 505, 639, 871], "lh_cereb": 24, "sphere_unit": [24, 156, 639, 871], "octahedron": [24, 40, 106, 154, 156, 158, 252, 267, 271, 275, 638, 796], "subdivis": [24, 40, 106, 156], "octahedr": [24, 40, 106, 156, 402], "vertex": [24, 26, 40, 47, 48, 49, 80, 87, 106, 154, 155, 156, 158, 159, 173, 175, 178, 179, 218, 219, 222, 232, 266, 267, 268, 271, 272, 273, 274, 275, 276, 278, 292, 293, 437, 459, 461, 503, 526, 527, 536, 550, 612, 613, 624, 625, 630, 656, 657, 658, 663, 666, 667, 682, 685, 686, 687, 737, 738, 853, 856, 871], "lh": [24, 26, 28, 29, 36, 37, 38, 40, 42, 46, 47, 48, 53, 54, 59, 66, 87, 89, 91, 92, 101, 105, 106, 113, 123, 124, 131, 133, 153, 154, 155, 156, 157, 158, 159, 170, 173, 174, 176, 177, 180, 181, 189, 218, 219, 231, 232, 252, 256, 266, 267, 268, 271, 274, 275, 276, 459, 503, 595, 613, 618, 628, 738, 796, 801, 821, 853], "triangl": [24, 26, 40, 51, 106, 154, 155, 156, 158, 159, 173, 176, 218, 266, 273, 402, 624, 659, 663, 666, 687, 853, 856], "neighbor": [24, 26, 40, 106, 140, 154, 155, 156, 159, 197, 218, 222, 224, 237, 317, 324, 336, 445, 493, 575, 660, 661, 662, 664, 665, 670, 677, 678, 680, 681, 687, 852, 853, 871], "geometri": [24, 40, 59, 68, 106, 156, 159, 181, 182, 207, 240, 252, 383, 403, 447, 621, 738, 826, 846, 871], "triangul": [24, 40, 51, 106, 156, 173, 223, 224, 252, 273, 313, 621, 624, 819, 824, 853, 856, 871], "4098": [24, 42, 157, 158, 180, 846], "155407": [24, 26, 40, 42, 51, 156, 158], "156866": [24, 26, 40, 42, 51, 156, 158], "132651": 24, "57769": 24, "50733": 24, "401": [24, 78, 206, 227], "voxel": [24, 40, 43, 49, 132, 154, 156, 158, 205, 222, 240, 270, 273, 275, 276, 355, 683, 684, 728, 738, 756, 802, 811, 853, 871], "neighborhood": [24, 40, 49, 154, 156, 205, 273], "005000": [24, 156], "001000": [24, 40, 49, 156], "556177": 24, "16777216": 24, "nonzero": [24, 208, 853], "coord_fram": [24, 106, 115, 120, 121, 122, 133, 134, 154, 155, 156, 157, 167, 168, 176, 180, 181, 182, 188, 207, 258, 264, 265, 273, 307, 320, 325, 424, 475, 502, 560, 561, 569, 578, 738, 754, 766, 856], "export": [24, 30, 40, 109, 112, 132, 138, 145, 146, 147, 153, 163, 166, 170, 187, 188, 215, 254, 255, 260, 261, 262, 263, 267, 268, 271, 273, 274, 275, 276, 332, 334, 470, 471, 472, 486, 605, 690, 692, 693, 694, 828, 830, 836, 841, 857, 861, 871], "nifti": [24, 30, 40, 153, 273, 275, 276, 871], "nii_fnam": [24, 40], "mne_sample_lh": 24, "nii": [24, 30, 40, 153, 252], "export_volum": [24, 40, 273, 871], "mri_resolut": [24, 30, 40, 43, 272, 273, 275, 276, 437, 871], "And": [24, 41, 53, 68, 106, 132, 158, 177, 179, 188, 193, 199, 204, 208, 273, 515, 525, 680, 681, 830, 846, 853], "freeview": [24, 132, 180, 850, 853, 871], "util": [24, 90, 144, 178, 187, 222, 255, 260, 261, 433, 436, 470, 471, 472, 733, 828, 830, 836, 840, 853, 861, 865, 871], "run_subprocess": 24, "mri_fnam": 24, "lut": [24, 456, 611, 738, 826], "opac": [24, 31, 34, 39, 45, 58, 89, 132, 154, 252, 270, 462, 692, 694, 738, 797, 803, 871], "jet": 24, "colorscal": 24, "slice": [24, 34, 39, 58, 132, 138, 141, 154, 156, 158, 170, 179, 192, 213, 226, 252, 254, 255, 258, 259, 260, 261, 262, 263, 265, 270, 275, 276, 305, 308, 322, 324, 354, 363, 405, 406, 409, 413, 416, 419, 424, 441, 442, 470, 471, 472, 549, 550, 552, 565, 566, 567, 569, 572, 575, 584, 586, 593, 658, 676, 677, 678, 680, 681, 685, 690, 692, 693, 694, 696, 698, 699, 700, 701, 703, 709, 710, 716, 718, 719, 721, 722, 756, 762, 766, 768, 769, 772, 774, 775, 781, 782, 783, 785, 787, 789, 792, 802, 853, 856, 859, 871], "157": [24, 120, 135, 149, 167, 168, 186, 208, 222, 227, 240, 333, 650, 871], "left_cerebellum_volume_sourc": [24, 25], "379": [25, 78, 89, 206, 222, 227], "auto_examples_forward": 25, "source_space_morph": [25, 26], "177": [25, 26, 34, 72, 143, 167, 193, 206, 222, 226, 227, 240, 677, 678, 680, 681], "438": [25, 48, 53, 222], "oppos": [26, 59, 219, 342, 412, 826, 830, 856, 871], "evenli": [26, 205, 207, 262, 263, 354, 578, 775, 853], "caution": [26, 27, 140, 155, 167, 255, 260, 261, 262, 263, 405, 470, 471, 472, 473, 693, 747], "fname_tran": [26, 40, 49, 51, 121, 174, 179, 846], "sample_audvis_raw": [26, 29, 40, 44, 49, 51, 66, 69, 80, 89, 90, 91, 100, 101, 104, 105, 107, 108, 113, 115, 120, 121, 124, 138, 140, 144, 147, 148, 154, 156, 158, 160, 164, 165, 166, 168, 170, 174, 176, 179, 180, 196, 197, 200, 201, 203, 204, 205, 207, 211, 212, 213, 214, 218, 219, 224, 225, 226, 235, 252, 830], "fname_bem": [26, 40, 49, 157, 174, 179, 180], "fname_src_f": 26, "fsaverag": [26, 39, 42, 43, 122, 123, 132, 133, 134, 154, 155, 158, 169, 179, 188, 208, 230, 231, 232, 240, 258, 266, 267, 271, 272, 275, 276, 299, 307, 323, 355, 360, 361, 362, 366, 378, 380, 381, 459, 463, 509, 513, 536, 575, 627, 628, 658, 682, 685, 686, 738, 754, 796, 802, 811, 846, 871], "ico": [26, 39, 42, 134, 156, 157, 159, 189, 230, 231, 232, 252, 267, 271, 275, 278, 402, 507, 638, 662, 665, 796, 846, 856, 871], "read_info": [26, 63, 87, 89, 91, 92, 155, 156, 158, 167, 861], "pick_info": [26, 116, 133, 165, 167, 219, 861, 871], "src_f": [26, 43, 178], "read_source_spac": [26, 39, 42, 43, 133, 134, 154, 157, 158, 178, 230, 231, 232, 273, 823, 861], "src_morph": 26, "morph_source_spac": [26, 271, 274, 861, 871], "subject_to": [26, 39, 42, 43, 132, 230, 232, 252, 266, 272, 275, 276, 355, 536, 537, 615, 627, 628, 629, 630, 802, 811, 846], "return": [26, 31, 33, 66, 67, 73, 81, 89, 90, 91, 96, 100, 105, 106, 107, 110, 111, 112, 114, 118, 135, 138, 139, 142, 144, 147, 148, 149, 158, 159, 164, 165, 166, 167, 169, 176, 186, 202, 203, 204, 205, 207, 211, 213, 219, 222, 223, 226, 232, 235, 236, 237, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 371, 372, 373, 374, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 631, 632, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 725, 726, 727, 728, 729, 730, 731, 732, 736, 737, 738, 739, 740, 741, 742, 743, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 807, 808, 811, 812, 823, 824, 825, 848, 852, 853, 856, 871], "mag_map_f": 26, "to_original_src": [26, 271, 274, 871], "track": [26, 110, 140, 147, 164, 167, 189, 197, 200, 212, 213, 217, 550, 848, 859, 871], "sulcal": [26, 158, 738], "gyral": [26, 158, 738], "outlier": [26, 68, 155, 422, 550, 784], "mai": [26, 68, 72, 74, 80, 100, 132, 138, 139, 141, 142, 144, 147, 148, 149, 154, 156, 159, 164, 166, 168, 170, 186, 187, 188, 192, 193, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 219, 224, 227, 230, 240, 255, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 274, 275, 276, 294, 313, 324, 325, 330, 348, 360, 402, 403, 405, 410, 412, 416, 422, 427, 433, 434, 435, 436, 437, 442, 453, 455, 462, 470, 471, 472, 479, 486, 487, 491, 512, 517, 537, 549, 550, 552, 564, 566, 567, 569, 571, 578, 579, 596, 598, 600, 602, 608, 627, 629, 672, 676, 677, 678, 680, 681, 683, 685, 690, 692, 693, 694, 716, 718, 719, 720, 721, 722, 723, 738, 754, 755, 761, 768, 770, 772, 773, 775, 777, 781, 785, 790, 791, 793, 798, 800, 819, 828, 830, 831, 833, 834, 836, 837, 838, 845, 846, 848, 850, 852, 853, 856, 859, 871], "occur": [26, 43, 46, 68, 73, 87, 91, 92, 132, 138, 141, 142, 149, 159, 166, 198, 199, 204, 211, 224, 225, 253, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 278, 292, 293, 349, 353, 354, 363, 364, 365, 403, 410, 426, 427, 429, 445, 446, 447, 466, 468, 469, 470, 471, 472, 498, 528, 566, 567, 640, 690, 693, 768, 778, 791, 830, 831, 836, 846, 852, 853, 871], "kwarg": [26, 57, 106, 109, 113, 120, 139, 177, 178, 192, 199, 218, 236, 255, 260, 261, 262, 263, 265, 270, 273, 406, 413, 470, 471, 472, 477, 539, 690, 738, 739, 760, 775, 794, 797, 830], "smooth": [26, 37, 42, 58, 69, 80, 111, 131, 132, 133, 140, 149, 154, 164, 179, 192, 204, 222, 223, 230, 231, 232, 240, 255, 260, 261, 262, 263, 266, 267, 268, 271, 272, 274, 275, 276, 355, 470, 471, 472, 550, 559, 677, 678, 680, 681, 686, 722, 738, 747, 769, 796, 799, 801, 803, 804, 807, 849, 871], "smoothing_step": [26, 40, 41, 42, 54, 58, 59, 101, 106, 113, 128, 134, 173, 175, 177, 179, 218, 230, 267, 268, 271, 274, 275, 276, 738, 796, 801], "almost": [26, 111, 138, 166, 830, 853], "equidist": [26, 270], "unevenli": [26, 512], "achiev": [26, 42, 43, 109, 124, 140, 142, 144, 158, 159, 178, 199, 208, 213, 219, 262, 263, 349, 358, 503, 525, 550, 576, 595, 642, 643, 644, 653, 654, 656, 677, 678, 679, 680, 681, 778, 850, 853, 857, 859, 871], "closest": [26, 142, 155, 156, 211, 237, 255, 260, 261, 262, 263, 266, 273, 470, 471, 472, 686, 692, 694, 738, 756, 770, 853, 871], "approxim": [26, 132, 168, 202, 211, 222, 240, 252, 255, 257, 260, 261, 262, 263, 267, 268, 269, 271, 274, 275, 276, 307, 403, 410, 424, 439, 440, 442, 454, 470, 471, 472, 549, 550, 561, 564, 569, 578, 638, 690, 692, 694, 755, 762, 763, 770, 772, 774, 777, 778, 781, 788, 790, 792, 793, 794, 798, 800, 826, 853, 871], "brain_subject": 26, "time_label": [26, 32, 33, 58, 59, 106, 121, 128, 219, 230, 231, 232, 262, 263, 267, 268, 271, 274, 275, 276, 738, 773, 796, 801], "brain_f": 26, "remap": [26, 27, 75, 82, 262, 263, 608, 871], "destin": [26, 42, 43, 77, 153, 158, 254, 255, 257, 258, 260, 261, 262, 263, 267, 268, 270, 271, 272, 273, 274, 275, 276, 284, 303, 304, 307, 355, 366, 402, 424, 433, 434, 435, 436, 470, 471, 472, 502, 535, 537, 549, 550, 569, 578, 627, 628, 630, 690, 691, 692, 693, 694, 724, 725, 780, 813, 814, 815, 816, 817, 818, 819, 822, 823, 824, 825, 856, 871], "sourcespac": [26, 40, 42, 44, 49, 106, 156, 157, 158, 174, 205, 264, 266, 267, 268, 271, 274, 275, 276, 278, 355, 437, 457, 467, 504, 505, 513, 526, 527, 532, 537, 620, 638, 639, 640, 647, 650, 652, 655, 656, 657, 658, 659, 660, 661, 662, 664, 665, 682, 685, 686, 738, 754, 756, 796, 801, 802, 823, 826, 853, 861, 871], "n_vertic": [26, 40, 42, 52, 106, 156, 157, 158, 256, 266, 267, 268, 271, 274, 275, 276, 447, 532, 621, 624, 658, 677, 678, 680, 681, 688, 737, 738, 819, 824], "n_use": [26, 40, 42, 44, 49, 106, 156, 157, 158, 174, 205], "10242": [26, 42, 157, 230, 231, 232, 266, 278, 459, 682, 846], "coord": [26, 40, 42, 44, 49, 106, 122, 156, 157, 158, 159, 174, 205, 337, 446, 738, 739, 808, 824], "conductor": [26, 40, 44, 49, 106, 154, 156, 157, 174, 180, 299, 446, 514, 639, 754, 826, 853, 871], "20484": [26, 134, 157, 159, 230, 231, 252, 507], "999310": [26, 40, 49, 156, 174, 179, 180], "009985": [26, 40, 49, 156, 174, 179, 180], "035787": [26, 40, 49, 156, 174, 179, 180], "012759": [26, 40, 49, 156, 174, 179, 180], "812405": [26, 40, 49, 156, 174, 179], "582954": [26, 40, 49, 156, 174, 179], "034894": [26, 40, 49, 156, 174, 179, 180], "583008": [26, 40, 49, 156, 174, 179], "811716": [26, 40, 49, 156, 174, 179, 180], "991420": [26, 40, 44, 49, 156, 174, 179], "039936": [26, 40, 44, 49, 156, 174, 179], "124467": [26, 40, 44, 49, 156, 174, 179], "060661": [26, 40, 44, 49, 156, 174, 179], "984012": [26, 40, 44, 49, 156, 174, 179], "167456": [26, 40, 44, 49, 156, 174, 179], "115790": [26, 40, 44, 49, 156, 174, 179], "173570": [26, 40, 44, 49, 156, 174, 179], "977991": [26, 40, 44, 49, 156, 174, 179], "homogen": [26, 40, 49, 106, 156, 174, 205, 853, 856, 871], "2154": 26, "8088": 26, "8079": 26, "10233": [26, 871], "4233": 26, "2113": [26, 167], "8129": 26, "8125": 26, "10237": 26, "4204": 26, "20470": 26, "00205101": 26, "08784125": 26, "17433707": 26, "work": [27, 31, 66, 68, 73, 76, 80, 84, 130, 132, 135, 136, 137, 138, 142, 145, 146, 147, 148, 149, 153, 154, 158, 159, 164, 165, 166, 167, 171, 172, 173, 175, 176, 179, 182, 186, 188, 190, 191, 193, 196, 198, 200, 201, 202, 203, 204, 207, 208, 211, 213, 214, 216, 219, 224, 227, 230, 232, 235, 236, 237, 240, 247, 251, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 304, 307, 308, 311, 313, 318, 321, 323, 327, 333, 342, 348, 350, 354, 355, 356, 358, 361, 365, 376, 379, 382, 403, 404, 406, 407, 409, 410, 411, 412, 413, 415, 416, 417, 426, 430, 432, 437, 438, 443, 444, 455, 463, 466, 468, 469, 470, 471, 472, 477, 481, 484, 505, 507, 508, 511, 513, 515, 516, 517, 518, 519, 520, 521, 523, 524, 528, 534, 541, 545, 546, 547, 549, 550, 551, 563, 578, 592, 601, 605, 610, 616, 620, 621, 622, 623, 638, 639, 667, 685, 690, 692, 693, 694, 738, 739, 741, 754, 760, 762, 768, 770, 771, 776, 777, 781, 785, 790, 791, 793, 798, 804, 806, 808, 811, 816, 826, 829, 830, 831, 835, 836, 837, 847, 848, 852, 853, 854, 856, 859, 871], "variou": [27, 61, 98, 117, 118, 133, 139, 148, 153, 163, 167, 168, 175, 176, 184, 185, 186, 187, 190, 196, 199, 200, 202, 204, 209, 211, 213, 219, 222, 223, 257, 262, 265, 271, 325, 516, 517, 528, 550, 578, 599, 608, 610, 738, 760, 846, 850, 852, 853, 854, 856, 860, 871], "often": [27, 68, 72, 73, 80, 132, 138, 140, 148, 164, 166, 167, 173, 176, 178, 186, 188, 193, 197, 199, 200, 203, 205, 207, 212, 213, 224, 237, 262, 263, 267, 268, 271, 274, 275, 276, 292, 293, 349, 353, 354, 363, 364, 365, 403, 410, 446, 447, 466, 468, 469, 528, 579, 738, 778, 796, 801, 826, 830, 834, 835, 846, 850, 852, 853, 854, 871], "lack": [27, 68, 188, 257, 269, 284, 297, 516, 579, 726, 854], "narr": [27, 163, 826, 854], "explan": [27, 71, 140, 153, 163, 226, 692, 854, 858], "discov": [27, 848, 854, 871], "ve": [27, 112, 138, 147, 149, 154, 158, 169, 196, 198, 202, 204, 211, 212, 214, 237, 808, 830, 848, 850, 854], "flag": [27, 132, 163, 165, 252, 255, 260, 261, 265, 267, 268, 271, 274, 275, 276, 304, 470, 471, 472, 507, 757, 791, 796, 801, 802, 830, 846, 850, 871], "tutorial_script": [27, 163], "them": [27, 46, 49, 68, 72, 112, 124, 131, 132, 133, 135, 138, 139, 140, 142, 143, 147, 148, 149, 154, 158, 159, 163, 164, 166, 168, 169, 170, 189, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 211, 212, 213, 219, 222, 223, 230, 232, 237, 252, 254, 255, 260, 261, 262, 263, 266, 287, 290, 354, 357, 362, 406, 407, 421, 482, 483, 511, 512, 519, 521, 524, 545, 549, 550, 568, 579, 586, 600, 605, 644, 654, 667, 694, 709, 710, 733, 784, 826, 828, 830, 838, 846, 847, 848, 852, 853, 856, 859, 871], "shortcut": [27, 214, 728, 738, 871], "intention": [27, 206], "record": [27, 61, 64, 68, 72, 80, 81, 106, 132, 135, 138, 142, 144, 149, 154, 160, 164, 166, 167, 168, 170, 173, 182, 184, 186, 188, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 211, 212, 213, 217, 219, 222, 237, 240, 254, 255, 260, 261, 262, 263, 265, 270, 277, 315, 342, 349, 354, 358, 396, 426, 435, 470, 471, 472, 480, 484, 491, 493, 498, 499, 511, 550, 552, 553, 554, 558, 560, 561, 569, 578, 579, 586, 592, 608, 635, 676, 690, 692, 693, 694, 771, 785, 791, 826, 837, 842, 846, 847, 848, 850, 853, 856, 859, 871], "past": [27, 149, 199, 415, 640, 834, 850, 852, 856], "recip": [27, 61, 830], "write": [27, 29, 40, 61, 65, 105, 107, 138, 158, 159, 168, 169, 170, 175, 187, 200, 211, 232, 235, 252, 254, 257, 258, 262, 263, 265, 266, 267, 268, 270, 273, 274, 276, 284, 302, 347, 444, 476, 502, 535, 549, 594, 599, 689, 724, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 830, 833, 834, 846, 848, 850, 853, 859, 871], "manipul": [27, 61, 138, 147, 163, 215, 358, 470, 471, 472, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 510, 847, 853, 860, 871], "ensembl": [27, 61, 65, 135, 265, 367, 470, 472], "neo": [27, 61, 65, 186, 265, 367, 470, 472, 871], "xdf": [27, 61, 65, 265, 367, 470, 472], "anatomi": [27, 86, 88, 154, 173, 255, 257, 260, 262, 263, 264, 265, 266, 271, 273, 303, 470, 472, 476, 516, 517, 528, 599, 605, 610, 613, 640, 642, 643, 644, 655, 738, 826, 847, 871], "css": [27, 75, 82, 170, 240, 257, 263, 264, 265, 266, 270, 271, 359, 471, 547, 548, 565, 599, 610, 613, 654, 656, 871], "bridg": [27, 75, 82, 240, 265, 307, 323, 367, 470, 472, 477, 558, 577, 758, 800, 871], "much": [27, 43, 54, 72, 75, 80, 82, 132, 135, 138, 139, 140, 142, 147, 159, 163, 164, 168, 181, 189, 193, 199, 201, 202, 203, 204, 205, 206, 211, 219, 237, 240, 255, 260, 261, 262, 263, 265, 267, 268, 271, 274, 275, 276, 307, 323, 367, 427, 438, 442, 443, 470, 471, 472, 477, 558, 577, 631, 758, 800, 830, 833, 834, 853, 859, 871], "gel": [27, 75, 82, 265, 307, 323, 367, 470, 472, 477, 558, 577, 758, 800, 871], "densiti": [27, 32, 33, 66, 73, 75, 76, 82, 102, 103, 116, 130, 132, 135, 140, 158, 159, 164, 170, 188, 193, 197, 198, 206, 219, 236, 240, 255, 257, 260, 261, 262, 263, 265, 266, 271, 286, 292, 321, 354, 365, 408, 444, 470, 471, 472, 508, 513, 516, 523, 524, 528, 531, 547, 550, 558, 559, 580, 581, 585, 597, 605, 612, 638, 691, 692, 694, 695, 696, 697, 698, 699, 700, 701, 706, 707, 708, 709, 710, 732, 738, 754, 764, 770, 792, 806, 826, 847, 853, 856, 871], "csd": [27, 32, 33, 75, 82, 102, 103, 167, 219, 255, 260, 261, 262, 263, 265, 286, 292, 306, 321, 325, 365, 444, 470, 471, 472, 547, 559, 605, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 706, 711, 764, 826, 871], "nir": [27, 75, 82, 208, 254, 265, 470, 472, 498, 827, 837, 853, 860, 861, 871], "maxwel": [27, 75, 81, 82, 163, 164, 182, 196, 209, 210, 255, 260, 262, 263, 265, 292, 293, 337, 339, 342, 343, 346, 349, 353, 354, 363, 364, 365, 403, 410, 424, 444, 446, 447, 466, 468, 469, 470, 471, 472, 528, 561, 569, 578, 579, 778, 780, 871], "movement": [27, 72, 73, 75, 80, 82, 109, 135, 163, 196, 202, 203, 204, 209, 210, 213, 214, 240, 252, 254, 255, 260, 262, 263, 265, 336, 337, 338, 339, 340, 342, 344, 346, 347, 358, 424, 444, 462, 470, 471, 484, 554, 557, 569, 578, 643, 655, 754, 761, 773, 780, 806, 826, 847, 871], "reestim": [27, 75, 82, 254, 265, 339, 340, 358, 470, 484, 554, 557, 560, 754, 780, 806, 871], "dev_head_t": [27, 75, 77, 82, 154, 164, 167, 211, 254, 265, 310, 339, 340, 358, 367, 470, 484, 554, 557, 561, 569, 578, 641, 642, 643, 655, 754, 780, 806, 856, 871], "muscl": [27, 75, 82, 142, 202, 240, 254, 307, 323, 470, 484, 486, 550, 555, 871], "denois": [27, 75, 82, 193, 255, 257, 260, 262, 263, 265, 349, 354, 411, 423, 444, 446, 470, 471, 514, 547, 551, 561, 586, 605, 769, 871], "oversampl": [27, 75, 82, 240, 255, 260, 262, 263, 349, 423, 444, 446, 470, 471, 514, 586], "shift": [27, 73, 75, 82, 132, 138, 164, 192, 196, 199, 200, 205, 214, 240, 255, 258, 259, 260, 261, 262, 263, 265, 267, 268, 271, 274, 275, 276, 409, 431, 470, 471, 472, 479, 486, 541, 550, 552, 575, 585, 608, 690, 693, 738, 779, 791, 802, 871], "2d": [27, 31, 34, 39, 58, 93, 94, 116, 119, 127, 149, 170, 188, 193, 197, 200, 202, 203, 204, 205, 222, 227, 255, 260, 261, 262, 263, 265, 267, 268, 271, 274, 275, 276, 307, 308, 313, 316, 324, 333, 361, 411, 414, 418, 420, 441, 442, 470, 471, 472, 483, 491, 500, 505, 550, 675, 677, 678, 738, 739, 750, 754, 755, 759, 776, 797, 799, 800, 806, 807, 808, 810, 826, 834, 847, 871], "arrowmap": [27, 119, 127, 262, 265, 484, 546, 547, 608, 755, 871], "layout": [27, 46, 97, 112, 119, 127, 129, 130, 140, 148, 149, 157, 187, 224, 255, 260, 261, 262, 263, 265, 269, 314, 316, 318, 321, 322, 323, 333, 367, 470, 471, 472, 478, 482, 484, 493, 494, 514, 690, 692, 694, 739, 743, 751, 754, 762, 776, 787, 790, 799, 805, 806, 826, 853, 861, 871], "parcel": [27, 37, 40, 66, 87, 91, 92, 119, 127, 133, 153, 174, 179, 218, 240, 266, 378, 380, 381, 455, 595, 613, 738, 749, 821, 826, 871], "roi": [27, 37, 119, 127, 149, 153, 197, 223, 240, 255, 258, 260, 262, 263, 265, 319, 429, 432, 470, 487, 517, 738, 774, 826, 853, 856, 871], "rt": [27, 119, 127, 166, 255, 260, 265, 319, 429, 432, 470, 487], "room": [27, 119, 124, 127, 140, 149, 160, 170, 182, 189, 200, 202, 203, 205, 207, 208, 212, 240, 271, 349, 354, 470, 471, 560, 561, 569, 578, 579, 761, 826, 846, 853, 871], "lock": [27, 102, 103, 138, 154, 160, 166, 201, 204, 226, 237, 240, 255, 260, 265, 266, 427, 444, 471, 516, 531, 534, 547, 550, 612, 785, 850], "vectorview": [27, 60, 102, 103, 116, 168, 181, 253, 257, 262, 263, 265, 271, 308, 314, 315, 329, 333, 354, 383, 423, 424, 471, 508, 513, 523, 528, 561, 569, 578, 597, 638, 732, 738, 754, 806, 826, 842, 847, 853], "induc": [27, 102, 103, 104, 160, 164, 224, 225, 226, 237, 255, 260, 261, 265, 271, 444, 471, 516, 531, 533, 534, 547, 690, 693, 850, 871], "erd": [27, 102, 103, 236, 240, 255, 257, 260, 261, 262, 263, 269, 358, 432, 470, 471, 472, 486, 549, 677, 690, 692, 693, 694, 722, 755, 770, 777, 790, 793, 798, 800, 847, 871], "multitap": [27, 72, 80, 100, 102, 103, 106, 135, 140, 141, 164, 170, 193, 202, 227, 235, 236, 240, 255, 260, 261, 262, 263, 265, 283, 367, 416, 442, 470, 471, 472, 523, 690, 692, 693, 694, 697, 700, 709, 718, 720, 721, 722, 723, 742, 859, 871], "morlet": [27, 100, 102, 103, 110, 164, 199, 226, 227, 255, 260, 265, 283, 367, 416, 470, 472, 690, 693, 696, 699, 716, 718, 721, 722, 723, 742, 861, 869, 871], "stockwel": [27, 102, 103, 227, 240, 255, 260, 265, 283, 367, 470, 472, 690, 693, 718, 720, 721, 722, 723, 742, 871], "hilbert": [27, 79, 102, 103, 110, 165, 227, 255, 260, 261, 262, 263, 265, 283, 367, 470, 471, 472, 690, 693, 718, 721, 722, 723, 742, 871], "permut": [27, 95, 99, 109, 163, 222, 223, 224, 225, 228, 229, 232, 233, 234, 240, 255, 260, 262, 263, 265, 271, 272, 273, 313, 355, 426, 470, 471, 516, 517, 531, 541, 547, 605, 618, 620, 662, 670, 677, 678, 679, 680, 681, 682, 693, 721, 738, 759, 762, 859, 871], "1d": [27, 95, 99, 114, 207, 255, 260, 265, 279, 283, 468, 469, 471, 505, 547, 561, 569, 578, 587, 605, 677, 678, 680, 681, 742, 779], "fdr": [27, 95, 98, 99, 255, 260, 265, 471, 547, 605, 668, 674, 871], "rer": [27, 95, 99, 255, 260, 262, 263, 265, 348, 444, 470, 471, 547, 676], "p": [27, 46, 50, 57, 93, 94, 95, 97, 98, 99, 109, 132, 154, 158, 170, 186, 199, 219, 222, 223, 224, 226, 227, 230, 231, 232, 237, 240, 252, 255, 258, 259, 260, 261, 262, 263, 265, 267, 268, 271, 274, 275, 276, 348, 442, 444, 466, 470, 471, 472, 528, 547, 550, 561, 647, 650, 652, 668, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 690, 693, 756, 769, 830, 846, 850, 853, 871], "sloreta": [27, 28, 30, 31, 35, 37, 38, 40, 47, 49, 55, 58, 87, 101, 163, 164, 173, 176, 177, 179, 184, 185, 218, 230, 232, 240, 255, 257, 260, 262, 263, 265, 266, 267, 268, 271, 274, 275, 276, 349, 444, 470, 471, 516, 517, 518, 519, 520, 521, 523, 524, 528, 529, 530, 531, 533, 534, 610, 612, 738, 763, 826, 871], "dic": [27, 31, 35, 55, 100, 163, 178, 220, 221, 240, 255, 257, 260, 264, 265, 271, 284, 285, 286, 287, 289, 292, 293, 349, 353, 444, 470, 471, 472, 477, 506, 516, 517, 518, 528, 541, 546, 547, 610, 625, 644, 655, 691, 699, 738, 763, 826, 837, 847, 871], "beamform": [27, 35, 50, 55, 100, 163, 164, 184, 185, 219, 240, 255, 257, 260, 262, 263, 264, 265, 271, 272, 273, 275, 276, 349, 353, 355, 359, 365, 444, 446, 470, 471, 518, 526, 528, 547, 599, 610, 620, 691, 699, 738, 763, 826, 839, 847, 861, 871], "er": [27, 32, 35, 55, 109, 236, 240, 255, 257, 260, 261, 264, 265, 271, 286, 289, 292, 293, 349, 353, 444, 470, 471, 518, 528, 547, 610, 676, 699, 738, 763, 769, 847, 871], "lcmv": [27, 31, 35, 55, 163, 173, 184, 185, 255, 257, 260, 262, 263, 264, 265, 271, 272, 273, 275, 276, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 349, 353, 355, 359, 365, 444, 447, 470, 471, 518, 526, 528, 547, 599, 610, 620, 699, 738, 763, 826, 871], "spars": [27, 35, 43, 45, 55, 116, 173, 222, 227, 230, 232, 240, 252, 257, 258, 262, 264, 265, 271, 272, 273, 303, 313, 324, 355, 365, 367, 447, 466, 467, 468, 469, 516, 517, 528, 599, 608, 610, 620, 656, 670, 676, 677, 678, 680, 681, 738, 765, 766, 797, 830, 837, 839, 853, 856, 871], "gamma": [27, 35, 55, 109, 110, 114, 255, 257, 260, 261, 262, 263, 264, 265, 271, 365, 466, 467, 470, 471, 472, 525, 599, 608, 610, 692, 694, 765, 766, 770, 797, 853, 856, 871], "bayesian": [27, 35, 55, 240, 257, 262, 264, 265, 271, 349, 365, 466, 467, 599, 608, 610, 765, 766, 797, 837, 853], "mix": [27, 35, 55, 58, 100, 193, 202, 237, 240, 257, 258, 262, 264, 265, 267, 268, 271, 272, 273, 274, 275, 276, 292, 293, 355, 437, 448, 466, 467, 468, 469, 505, 513, 516, 517, 528, 550, 576, 599, 608, 610, 613, 618, 620, 638, 639, 645, 646, 647, 648, 649, 650, 651, 652, 682, 685, 738, 765, 766, 781, 796, 797, 801, 859, 871], "norm": [27, 31, 35, 46, 47, 48, 49, 55, 56, 58, 76, 81, 113, 147, 154, 160, 164, 175, 177, 183, 204, 218, 219, 240, 255, 257, 258, 260, 261, 262, 263, 264, 265, 271, 272, 273, 355, 447, 466, 467, 468, 469, 470, 471, 472, 516, 517, 518, 519, 520, 521, 523, 524, 526, 527, 528, 530, 532, 533, 534, 599, 608, 610, 620, 647, 650, 652, 765, 766, 795, 797, 826, 837, 839, 846, 856, 871], "mxne": [27, 31, 35, 55, 173, 255, 257, 258, 260, 262, 263, 264, 265, 271, 272, 273, 349, 355, 444, 467, 468, 469, 516, 517, 528, 599, 608, 610, 620, 738, 765, 766, 797, 826, 871], "irmxn": [27, 35, 55, 257, 258, 262, 264, 265, 271, 272, 273, 355, 467, 468, 516, 517, 528, 599, 608, 610, 620, 765, 766, 797], "volumetr": [27, 35, 49, 55, 133, 156, 158, 173, 175, 179, 262, 267, 268, 271, 272, 273, 274, 275, 276, 355, 505, 516, 517, 531, 608, 619, 620, 738, 796, 801, 802, 804, 811, 826, 859, 871], "timecours": [27, 32, 35, 41, 55, 255, 257, 258, 260, 262, 263, 264, 265, 275, 297, 444, 446, 470, 471, 512, 516, 517, 519, 528, 597, 599, 600, 625, 738], "xfit": [27, 35, 55, 255, 257, 258, 260, 262, 263, 264, 265, 275, 297, 444, 446, 470, 471, 512, 516, 517, 519, 528, 597, 599, 600, 625, 871], "reweight": [27, 35, 39, 55, 240, 255, 257, 260, 262, 263, 264, 271, 349, 444, 467, 468, 469, 610, 797], "tf": [27, 31, 35, 55, 58, 199, 255, 257, 260, 262, 263, 264, 271, 349, 444, 467, 469, 610, 797, 871], "multiscal": [27, 35, 55, 255, 257, 260, 262, 263, 264, 271, 349, 444, 467, 469, 610, 797], "circular": [27, 35, 55, 149, 218, 271, 273, 359, 461, 527, 529, 531, 610, 613, 738, 743, 837, 853, 871], "graph": [27, 35, 55, 114, 240, 271, 273, 359, 527, 529, 531, 610, 613, 660, 661, 662, 663, 664, 665, 666, 738, 743, 871], "spread": [27, 35, 41, 53, 54, 55, 69, 78, 80, 81, 110, 163, 166, 199, 204, 205, 207, 220, 221, 240, 255, 257, 260, 262, 263, 264, 265, 266, 271, 273, 275, 349, 359, 444, 470, 471, 513, 516, 517, 518, 526, 527, 528, 529, 531, 532, 558, 578, 599, 608, 610, 613, 639, 652, 654, 657, 738, 830, 853, 871], "psf": [27, 35, 53, 54, 55, 257, 262, 264, 265, 271, 273, 275, 359, 513, 516, 526, 527, 528, 529, 532, 599, 608, 610, 639, 738, 871], "talk": [27, 35, 55, 158, 199, 207, 224, 255, 257, 260, 262, 264, 265, 271, 284, 293, 294, 349, 359, 365, 424, 444, 516, 526, 527, 528, 529, 532, 547, 560, 569, 578, 599, 608, 610, 738, 826, 852, 871], "rap": [27, 35, 55, 240, 257, 262, 264, 295, 599, 608, 610, 765, 766, 871], "music": [27, 35, 55, 202, 240, 257, 262, 264, 295, 599, 608, 610, 765, 766, 871], "resolut": [27, 30, 35, 43, 46, 47, 49, 55, 111, 117, 132, 144, 154, 155, 156, 174, 224, 225, 240, 253, 255, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 294, 355, 359, 403, 410, 437, 459, 462, 470, 471, 472, 516, 517, 526, 527, 528, 529, 532, 548, 549, 550, 599, 608, 610, 690, 692, 694, 705, 717, 720, 722, 723, 738, 755, 770, 777, 781, 790, 793, 796, 798, 800, 801, 826, 837, 846, 852, 853, 871], "auto_examples_python": 27, "auto_examples_jupyt": 27, "fname_raw": [28, 29, 60, 100, 101, 124, 155, 180, 206], "fname_ev": [28, 91, 100, 101], "label_nam": [28, 29, 46, 89, 91, 101, 104, 179, 218, 456], "fname_label": [28, 29, 101, 104, 105], "assumpt": [28, 106, 118, 138, 139, 142, 150, 160, 199, 203, 207, 222, 262, 263, 586, 672, 778, 850, 853, 871], "read_label": [28, 29, 36, 38, 89, 101, 104, 105, 271, 274, 640, 861], "add": [28, 36, 42, 43, 68, 72, 87, 91, 92, 98, 111, 117, 123, 124, 132, 134, 138, 139, 141, 142, 149, 159, 166, 169, 170, 173, 174, 179, 187, 189, 192, 196, 197, 198, 200, 202, 203, 205, 211, 213, 218, 219, 222, 227, 237, 252, 254, 255, 256, 257, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 274, 275, 276, 277, 278, 307, 366, 403, 405, 410, 414, 427, 439, 441, 442, 462, 470, 471, 472, 549, 550, 560, 562, 563, 564, 598, 620, 629, 632, 637, 638, 640, 641, 642, 643, 644, 654, 687, 690, 692, 693, 694, 733, 738, 741, 755, 758, 759, 768, 770, 775, 777, 781, 790, 793, 798, 800, 807, 826, 828, 830, 833, 836, 837, 856, 871], "053": [28, 48, 67, 71, 89, 90, 101, 104, 105, 107, 108, 114, 149, 160, 164, 165, 166, 167, 175, 196, 197, 198, 203, 204, 205, 207, 211, 212, 213, 214, 219, 224, 225], "sqrt": [28, 114, 181, 182, 218, 219, 255, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 555, 576, 792, 853], "mean_stc": 28, "flip": [28, 37, 38, 112, 159, 202, 222, 252, 267, 268, 271, 274, 275, 276, 298, 437, 504, 677, 808, 853, 871], "cancel": [28, 78, 178, 199, 207, 267, 268, 271, 274, 275, 276, 424, 437, 550, 578, 782, 846, 853, 856], "label_sign_flip": [28, 861, 871], "label_mean": 28, "label_mean_flip": 28, "stc_evok": 28, "sub": [28, 32, 33, 40, 45, 64, 68, 80, 110, 144, 153, 168, 236, 237, 255, 260, 261, 262, 263, 265, 430, 470, 471, 472, 576, 639, 691, 738, 764, 842, 850, 853, 871], "stc_evoked_label": 28, "in_label": [28, 36, 37, 38, 271, 274, 275, 276, 871], "care": [28, 33, 139, 148, 149, 158, 199, 202, 203, 211, 213, 365, 469, 676, 853, 871], "polar": [28, 46, 140, 204, 760], "label_mean_evok": 28, "1711": [28, 33, 44, 104, 118, 129, 140, 143, 144, 150, 164, 167, 175, 178, 198, 219, 227, 230, 232], "benefit": [28, 44, 45, 54, 58, 69, 123, 170, 188, 240, 532, 559, 650, 846, 852], "1e3": [28, 29, 37, 38, 40, 67, 70, 94, 110, 135, 147, 149, 154, 155, 175, 183, 218, 224, 225, 226, 232], "h0": [28, 93, 97, 222, 223, 224, 225, 226, 230, 231, 232, 677, 678, 679, 680, 681], "h1": [28, 93, 109, 222, 223, 224, 225, 226, 227, 230, 231, 232], "linewidth": [28, 38, 94, 109, 110, 134, 148, 158, 203, 222, 255, 257, 260, 261, 262, 263, 403, 410, 470, 471, 472, 549, 690, 692, 694, 738, 755, 762, 770, 777, 793, 794, 797, 798, 800], "h2": 28, "unflip": 28, "pool": [28, 138, 147, 149, 164, 212, 292, 293, 466, 468, 469, 517, 518, 519, 520, 521, 523, 524, 534, 859], "stc_trial": 28, "_nolegend_": 28, "478": [28, 40, 55, 227], "compute_mne_inverse_epochs_in_label": [28, 55], "apply_inverse_raw": [29, 517, 518, 519, 521, 861, 871], "smaller": [29, 40, 73, 101, 124, 140, 147, 156, 199, 204, 207, 222, 223, 237, 255, 260, 261, 267, 268, 271, 274, 275, 276, 469, 552, 566, 569, 576, 677, 678, 680, 681, 704, 714, 738, 796, 801, 846, 853, 871], "time_as_index": [29, 39, 81, 138, 147, 173, 211, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 690, 693, 871], "mne_": [29, 30, 856], "s_raw_inverse_": 29, "overwrit": [29, 40, 101, 105, 107, 138, 159, 170, 189, 213, 252, 254, 255, 257, 258, 260, 261, 262, 263, 267, 268, 270, 271, 272, 273, 274, 275, 276, 284, 302, 303, 304, 307, 433, 434, 435, 436, 470, 471, 472, 502, 535, 549, 550, 559, 628, 629, 632, 636, 690, 691, 692, 693, 694, 724, 813, 814, 815, 816, 817, 818, 819, 821, 822, 823, 824, 825, 871], "25800": [29, 44, 66, 69, 77, 80, 89, 90, 100, 101, 104, 107, 108, 115, 120, 124, 144, 154, 160, 165, 166, 170, 180, 196, 200, 201, 203, 204, 205, 211, 214, 218, 219, 224, 225, 226], "192599": [29, 44, 66, 69, 80, 89, 90, 100, 101, 104, 107, 108, 115, 120, 124, 144, 154, 160, 165, 166, 170, 180, 196, 200, 201, 203, 204, 211, 214, 218, 219, 224, 225, 226], "670": [29, 44, 66, 69, 78, 80, 89, 90, 100, 101, 104, 107, 108, 115, 120, 124, 144, 154, 160, 165, 166, 170, 180, 196, 200, 201, 203, 204, 206, 211, 214, 218, 219, 224, 225, 226, 227], "343": [29, 34, 55, 141, 167, 168, 192, 206, 222, 227, 871], "compute_mne_inverse_raw_in_label": [29, 55], "nilearn": [30, 40, 43, 132, 169, 174, 179, 180, 275, 276, 689, 802], "plot_stat_map": 30, "index_img": 30, "read_evok": [30, 31, 34, 37, 38, 39, 40, 43, 47, 49, 50, 53, 54, 56, 57, 58, 59, 76, 83, 84, 113, 116, 117, 121, 124, 147, 148, 170, 174, 176, 177, 179, 255, 260, 261, 262, 263, 270, 470, 471, 472, 817, 850, 861, 871], "vol": [30, 43, 49, 133, 158, 174, 178, 179, 255, 258, 260, 261, 262, 263, 273, 295, 424, 618, 645, 646, 647, 648, 649, 650, 651, 652, 778], "4d": [30, 120, 163, 184, 185, 186, 255, 257, 258, 260, 261, 262, 263, 265, 297, 349, 444, 446, 470, 471, 472, 482, 514, 547, 548, 677, 678, 690, 692, 693, 694, 754, 766, 853, 856, 871], "img": [30, 113, 158, 180, 222, 275, 276], "as_volum": [30, 275, 276, 871], "nib": [30, 43, 132, 154], "s_invers": 30, "gz": [30, 138, 153, 170, 203, 252, 255, 259, 260, 261, 262, 263, 273, 307, 379, 470, 471, 472, 491, 531, 535, 550, 590, 596, 599, 601, 608, 610, 616, 620, 655, 812, 815, 817, 818, 822, 823, 836, 871], "t1_fname": [30, 158, 174], "11271": [30, 43, 179], "313": [30, 34, 55, 109, 167, 222, 227, 871], "compute_mne_inverse_volum": [30, 55], "plug": [31, 830, 853], "facil": [31, 253], "implement": [31, 68, 132, 164, 167, 177, 193, 200, 202, 207, 219, 237, 253, 257, 265, 269, 284, 285, 287, 297, 327, 349, 355, 403, 410, 411, 416, 420, 443, 466, 468, 469, 470, 471, 472, 513, 516, 517, 518, 519, 520, 521, 523, 524, 534, 550, 551, 558, 564, 569, 593, 615, 674, 716, 718, 719, 726, 791, 830, 837, 845, 854, 859, 869, 871], "wmne": [31, 468, 469], "eloreta": [31, 163, 164, 173, 176, 177, 184, 185, 230, 232, 255, 257, 260, 262, 263, 265, 271, 292, 293, 349, 444, 466, 468, 469, 516, 517, 518, 519, 520, 521, 523, 524, 528, 530, 533, 534, 610, 738, 763, 826, 871], "educ": [31, 852], "shall": [31, 142, 198, 262, 263, 427, 550, 658, 773, 830, 852, 859], "develop": [31, 68, 132, 169, 202, 207, 251, 252, 327, 569, 689, 747, 833, 834, 836, 837, 847, 850, 852, 856, 871], "meant": [31, 87, 92, 106, 169, 222, 269, 285, 287, 336, 405, 415, 505, 637, 732, 733, 741, 871], "practic": [31, 69, 96, 111, 149, 158, 166, 198, 199, 205, 207, 237, 240, 266, 292, 550, 559, 612, 618, 676, 826, 830, 852, 853], "apply_solv": 31, "linalg": [31, 81, 132, 154, 158, 183, 203, 353, 676, 850, 871], "plot_sparse_source_estim": [31, 34, 39, 45, 58, 89, 803, 861, 871], "ave_fnam": [31, 39, 58, 66, 89], "cov_fnam": [31, 34, 39, 44, 50, 58, 66, 89, 170, 219, 270], "handl": [31, 39, 45, 58, 124, 138, 142, 144, 149, 153, 158, 163, 164, 166, 168, 170, 171, 204, 207, 209, 210, 255, 260, 261, 262, 263, 265, 337, 430, 444, 470, 471, 472, 544, 547, 550, 578, 635, 739, 747, 755, 758, 760, 771, 782, 786, 810, 830, 856, 871], "365": [31, 39, 40, 44, 58, 78, 167, 204, 222, 227, 240, 266, 271, 349], "auxiliari": [31, 140, 366], "def": [31, 33, 66, 74, 81, 89, 90, 91, 106, 110, 114, 130, 132, 135, 148, 149, 154, 158, 199, 200, 203, 219, 222, 226, 232, 237, 830], "ones": [31, 80, 85, 108, 139, 168, 176, 181, 183, 186, 203, 204, 222, 237, 253, 266, 380, 438, 464, 465, 470, 471, 472, 509, 552, 569, 612, 618, 625, 675, 830, 850, 853, 856, 871], "account": [31, 77, 106, 120, 132, 139, 140, 154, 156, 160, 178, 183, 197, 198, 204, 205, 207, 211, 212, 222, 227, 237, 254, 257, 262, 263, 292, 293, 349, 353, 354, 363, 364, 365, 403, 410, 446, 447, 466, 468, 469, 528, 550, 553, 576, 778, 830, 850, 853, 856, 871], "constraint": [31, 59, 156, 164, 176, 192, 205, 240, 255, 260, 261, 283, 294, 446, 528, 769, 856, 871], "weigth": 31, "formul": [31, 853], "problem": [31, 39, 58, 68, 85, 93, 94, 111, 135, 142, 159, 164, 173, 174, 186, 187, 193, 197, 201, 202, 204, 205, 211, 222, 223, 227, 230, 231, 232, 237, 240, 468, 487, 550, 569, 596, 602, 677, 678, 680, 681, 683, 684, 804, 829, 830, 835, 850, 851, 853, 859, 871], "bia": [31, 39, 68, 81, 139, 149, 182, 199, 230, 232, 236, 240, 257, 262, 263, 292, 293, 355, 416, 466, 468, 469, 528, 576, 708, 710, 719, 772, 777, 853, 871], "callabl": [31, 148, 255, 257, 260, 261, 262, 263, 267, 268, 269, 271, 274, 275, 276, 279, 307, 309, 335, 360, 403, 406, 410, 413, 420, 432, 470, 471, 472, 520, 549, 550, 564, 626, 656, 657, 669, 676, 677, 678, 680, 681, 690, 692, 693, 694, 736, 738, 751, 755, 762, 769, 770, 772, 777, 781, 790, 793, 796, 798, 799, 800, 801, 871], "boolean": [31, 98, 139, 141, 167, 169, 203, 204, 211, 213, 255, 257, 260, 261, 262, 263, 269, 271, 403, 410, 470, 471, 472, 549, 550, 677, 678, 680, 681, 690, 692, 694, 769, 770, 774, 777, 781, 790, 793, 798, 830, 857, 871], "what": [31, 58, 69, 80, 87, 91, 92, 114, 124, 125, 132, 134, 138, 139, 140, 141, 142, 154, 158, 167, 169, 173, 178, 179, 180, 188, 197, 199, 208, 211, 212, 213, 219, 222, 224, 227, 235, 237, 255, 258, 259, 260, 261, 262, 263, 267, 268, 270, 271, 274, 275, 276, 349, 353, 360, 363, 364, 379, 396, 422, 427, 432, 436, 453, 470, 471, 472, 487, 536, 583, 596, 598, 602, 627, 629, 640, 690, 693, 761, 796, 801, 819, 826, 830, 833, 835, 836, 838, 856, 859, 861], "tangenti": [31, 292, 293, 448, 466, 468, 469, 528, 853, 856], "discret": [31, 44, 101, 156, 174, 193, 205, 235, 240, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 273, 274, 275, 276, 410, 448, 466, 468, 469, 470, 471, 472, 512, 528, 639, 690, 692, 693, 694, 702, 707, 709, 852, 871], "coeffici": [31, 98, 106, 139, 144, 156, 192, 199, 201, 407, 409, 415, 421, 438, 439, 440, 468, 469, 549, 560, 561, 569, 578, 589, 593, 644, 653, 654, 675, 676, 692, 694, 703, 704, 707, 714, 779, 871], "privat": [31, 830, 871], "inverse_spars": [31, 34, 39, 45, 58, 173, 839, 861, 871], "mxne_invers": 31, "_prepare_gain": 31, "is_fixed_ori": [31, 871], "_reapply_source_weight": 31, "_make_sparse_stc": 31, "all_ch_nam": 31, "gain_info": 31, "source_weight": 31, "weights_min": [31, 39, 58, 468, 469, 871], "dot": [31, 76, 84, 109, 116, 121, 124, 142, 148, 158, 173, 176, 180, 183, 188, 192, 197, 204, 208, 230, 232, 258, 262, 263, 267, 271, 275, 676, 766, 772, 830, 853], "n_orient": [31, 267, 268, 271, 274, 275, 276, 437, 532], "active_set": 31, "l2": [31, 39, 53, 54, 240, 468, 469, 532, 650, 839, 856], "penal": 31, "strongest": [31, 34, 39, 46, 58, 149], "n_dipol": [31, 50, 66, 89, 90, 156, 258, 267, 268, 271, 274, 275, 276, 295, 423, 526, 527, 529, 656], "depend": [31, 68, 79, 98, 123, 133, 134, 135, 139, 147, 149, 153, 155, 156, 160, 168, 169, 170, 188, 192, 198, 199, 201, 203, 204, 207, 213, 219, 222, 223, 224, 232, 237, 240, 254, 255, 260, 261, 262, 263, 267, 268, 271, 273, 274, 275, 276, 294, 313, 324, 337, 338, 397, 409, 415, 429, 437, 447, 470, 471, 472, 479, 486, 488, 550, 560, 569, 586, 592, 671, 677, 678, 680, 681, 683, 685, 686, 689, 690, 692, 693, 694, 713, 738, 747, 759, 761, 762, 768, 769, 772, 777, 785, 791, 811, 828, 829, 830, 833, 836, 837, 838, 845, 846, 847, 850, 853], "n_active_dipol": 31, "bool": [31, 117, 169, 227, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 298, 299, 300, 301, 302, 303, 304, 307, 308, 309, 311, 312, 315, 316, 317, 318, 321, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 424, 425, 428, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 446, 447, 448, 451, 453, 454, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 578, 579, 581, 582, 583, 585, 586, 587, 590, 591, 592, 593, 597, 598, 599, 600, 601, 602, 604, 605, 606, 608, 609, 610, 612, 613, 614, 615, 616, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 674, 677, 678, 679, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 714, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 727, 728, 733, 737, 738, 743, 746, 747, 751, 752, 754, 755, 756, 757, 759, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 806, 807, 808, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 850], "entri": [31, 106, 132, 138, 140, 142, 148, 149, 164, 168, 169, 193, 197, 211, 254, 255, 257, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 273, 274, 275, 276, 282, 309, 336, 337, 338, 339, 340, 341, 413, 425, 435, 438, 469, 470, 471, 472, 517, 525, 549, 550, 564, 636, 639, 641, 642, 643, 655, 670, 690, 692, 693, 694, 738, 755, 756, 768, 769, 770, 774, 777, 790, 791, 793, 796, 797, 798, 800, 801, 830, 833, 853, 856, 871], "x_full": 31, "solv": [31, 58, 159, 173, 403, 487, 550, 596, 602, 676, 853, 859], "ey": [31, 72, 122, 132, 133, 135, 156, 170, 181, 196, 198, 201, 203, 204, 374, 487, 567, 571, 602], "dtype": [31, 89, 91, 111, 117, 142, 154, 165, 217, 219, 227, 255, 260, 261, 262, 263, 409, 470, 471, 472, 853], "bgcolor": [31, 34, 39, 45, 58, 89, 154, 158, 176, 470, 471, 472, 747, 757, 791, 797], "custom_inverse_solv": [31, 55], "synchron": [32, 33, 109, 144, 208, 236, 240, 253, 292, 473, 479, 486, 830, 847, 871], "marijn": [32, 44, 59, 71, 100, 159, 219, 240, 292, 293, 858, 871], "van": [32, 42, 44, 59, 71, 100, 123, 159, 178, 199, 219, 240, 272, 292, 293, 355, 381, 558, 853, 858, 871], "vliet": [32, 44, 59, 71, 100, 159, 219, 240, 292, 293, 858, 871], "vanvliet": [32, 44, 59, 71, 100, 159, 219], "roman": [32, 240, 845, 871], "goj": [32, 240, 845, 871], "appelhoff": [32, 110, 124, 224, 227, 230, 236, 858, 871], "mailbox": [32, 68, 69, 80, 110, 111, 112, 113, 117, 124, 132, 133, 134, 224, 226, 227, 230, 236], "csd_morlet": [32, 33, 100, 219, 691, 695, 696, 697, 698, 700, 861, 871], "make_d": [32, 33, 219, 285, 286, 287, 826, 861, 871], "apply_dics_csd": [32, 33, 219, 285, 287, 292, 861, 871], "_task": [32, 33, 45, 110, 236], "_meg": [32, 33, 45, 110, 170, 236, 252, 470, 471, 472, 491, 871], "shorter": [32, 111, 199, 207, 237, 267, 268, 271, 274, 275, 276, 427, 432, 470, 471, 472, 555, 579, 585, 702, 705, 717, 791, 871], "01_task": [32, 33, 45, 110, 168, 236, 237], "somato_meg": [32, 33, 45, 110, 236], "237600": [32, 33, 45, 110, 236], "506999": [32, 33, 45, 110, 236], "791": [32, 33, 40, 45, 110, 179, 227, 230, 234, 236], "1688": [32, 33, 45, 110, 236], "498464098687909": [32, 33], "1052": [32, 33, 193], "logspac": [32, 33, 192, 236, 349], "log10": [32, 33, 97, 130, 199, 219, 222, 236, 237, 690], "loss": [32, 68, 198, 203, 255, 260, 261, 262, 263, 406, 413, 433, 434, 435, 436, 470, 471, 472, 672, 853], "csd_baselin": [32, 33], "csd_er": [32, 33], "block": [32, 33, 58, 62, 100, 130, 132, 140, 141, 170, 189, 198, 219, 255, 258, 260, 261, 262, 263, 270, 444, 462, 463, 468, 470, 471, 472, 539, 550, 576, 609, 677, 678, 680, 681, 692, 694, 738, 766, 768, 785, 791, 792, 794, 828, 835, 853, 856, 871], "rather": [32, 33, 59, 138, 139, 144, 147, 154, 164, 165, 166, 168, 169, 176, 186, 193, 198, 204, 205, 211, 222, 226, 230, 235, 255, 260, 261, 264, 267, 268, 271, 274, 275, 276, 410, 470, 471, 472, 515, 523, 524, 534, 541, 543, 577, 682, 685, 738, 756, 791, 826, 828, 830, 846, 847, 852, 853, 871], "entir": [32, 72, 101, 142, 149, 174, 182, 198, 199, 201, 207, 212, 222, 237, 255, 260, 261, 262, 263, 267, 268, 270, 271, 274, 275, 276, 283, 404, 419, 517, 518, 519, 520, 521, 550, 566, 608, 640, 690, 830, 871], "noise_csd": [32, 292], "reduce_rank": [32, 33, 48, 292, 293, 871], "real_filt": [32, 33, 219, 292, 871], "8155": [32, 33, 45], "sti": [32, 41, 45, 67, 70, 71, 77, 87, 90, 91, 92, 104, 105, 107, 110, 138, 140, 147, 150, 164, 166, 167, 175, 186, 193, 197, 201, 202, 204, 212, 219, 224, 235, 236, 253, 444, 445, 470, 471, 472, 488, 826, 871], "014": [32, 41, 45, 60, 67, 70, 71, 77, 87, 90, 91, 92, 104, 105, 107, 110, 125, 138, 140, 147, 150, 164, 166, 167, 175, 186, 193, 197, 201, 202, 204, 212, 219, 224, 235, 236, 253, 444, 445, 470, 471, 472, 488, 871], "006": [32, 118, 125, 138, 140, 143, 147, 156, 164, 167, 201, 204, 219, 240, 252, 266, 271, 507, 846], "005": [32, 118, 125, 138, 140, 147, 155, 157, 160, 164, 167, 201, 219, 232, 258, 339, 552, 766], "001": [32, 69, 77, 80, 81, 118, 125, 138, 139, 140, 142, 143, 147, 148, 149, 158, 164, 166, 167, 170, 186, 192, 196, 198, 199, 200, 201, 204, 211, 219, 222, 223, 224, 226, 227, 230, 231, 236, 240, 525, 559, 640, 677, 678, 680, 681, 847, 853], "003": [32, 70, 118, 125, 138, 139, 140, 143, 147, 164, 165, 167, 170, 198, 199, 201, 202, 204, 211, 219, 240], "015": [32, 103, 110, 125, 138, 140, 147, 167, 201, 202, 205, 210, 219, 230, 240, 258, 564, 650, 766], "baseline_source_pow": 32, "beta_source_pow": 32, "messag": [32, 169, 235, 252, 267, 268, 271, 274, 275, 276, 360, 437, 487, 596, 602, 636, 637, 733, 734, 735, 738, 828, 830, 836, 841, 850, 856, 871], "40188307": 32, "5102619": 32, "34636424": 32, "joachim": [32, 178, 219, 240, 286, 292], "gro\u00df": [32, 178, 219, 240, 286, 292], "jan": [32, 178, 219, 240, 286, 292, 293, 846, 871], "kujala": [32, 178, 219, 240, 286, 292, 293], "matti": [32, 39, 53, 54, 57, 58, 123, 160, 176, 178, 207, 219, 240, 271, 286, 292, 468, 469, 517, 528, 532, 561, 565, 578, 647, 652, 837, 845, 850, 853, 871], "h\u00e4m\u00e4l\u00e4inen": [32, 39, 57, 58, 123, 176, 178, 219, 240, 271, 286, 292, 424, 468, 469, 517, 528, 532, 565, 647, 650, 652, 837, 871], "lar": [32, 178, 219, 240, 286, 292], "timmermann": [32, 178, 219, 240, 286, 292], "alfon": [32, 178, 219, 240, 286, 292], "schnitzler": [32, 178, 219, 240, 286, 292], "riitta": [32, 110, 176, 178, 219, 240, 286, 292, 293], "salmelin": [32, 110, 178, 219, 240, 286, 292, 293], "nation": [32, 178, 219, 240, 251, 286, 292, 858], "academi": [32, 178, 219, 240, 286, 292], "694": [32, 178, 219, 227, 240, 286, 292], "2001": [32, 40, 68, 178, 192, 205, 219, 240, 255, 260, 261, 262, 263, 286, 292, 409, 470, 471, 472, 558, 635, 674], "1073": [32, 178, 193, 219, 240, 286, 292], "pna": [32, 178, 219, 240, 286, 292], "336": [32, 55, 109, 167, 169, 871], "dics_source_pow": [32, 55, 871], "luke": [33, 37, 41, 73, 78, 79, 106, 858, 871], "bloi": [33, 37, 41, 78, 79, 106, 858, 871], "make_lcmv": [33, 48, 178, 285, 287, 288, 289, 290, 291, 292, 294, 826, 861, 871], "apply_lcmv_cov": [33, 178, 288, 290, 291, 861, 871], "apply_inverse_cov": [33, 41, 517, 519, 520, 521, 861, 871], "90092": 33, "maxfilt": [33, 186, 207, 265, 345, 346, 347, 424, 470, 471, 472, 523, 524, 533, 534, 560, 561, 569, 578, 641, 642, 643, 655, 856, 871], "conserv": [33, 68, 144, 222, 558, 639, 738, 871], "onc": [33, 42, 43, 59, 68, 91, 117, 124, 130, 133, 140, 141, 142, 143, 148, 149, 164, 166, 167, 168, 170, 175, 179, 196, 197, 199, 201, 202, 203, 204, 211, 213, 253, 254, 255, 260, 261, 262, 263, 272, 278, 369, 439, 441, 442, 470, 471, 472, 568, 576, 759, 791, 830, 846, 852, 853, 871], "advanc": [33, 71, 124, 159, 160, 201, 213, 240, 255, 257, 260, 261, 262, 263, 269, 349, 367, 403, 410, 462, 466, 470, 471, 472, 549, 550, 564, 655, 690, 692, 694, 747, 755, 770, 777, 781, 790, 793, 798, 800, 829, 832, 834, 850, 851, 853, 855, 859, 871], "correctli": [33, 42, 43, 148, 188, 201, 232, 255, 260, 261, 262, 263, 327, 436, 470, 471, 472, 753, 772, 828, 829, 836, 846, 847, 853, 856, 871], "preserv": [33, 153, 154, 158, 164, 165, 192, 197, 202, 211, 222, 226, 255, 260, 261, 262, 263, 402, 433, 434, 435, 436, 470, 471, 472, 566, 575, 690, 692, 693, 694, 853, 871], "compute_rank": [33, 257, 411, 763, 861, 871], "tol": [33, 39, 45, 58, 72, 170, 353, 446, 466, 468, 469, 871], "tol_kind": [33, 353, 871], "active_win": 33, "baseline_win": 33, "baseline_cov": 33, "active_cov": 33, "common_cov": 33, "plot_cov": [33, 41, 175, 861, 871], "3737": 33, "_gen_dic": 33, "stc_base": [33, 41], "stc_act": 33, "_gen_lcmv": 33, "_gen_mn": 33, "stc_dic": 33, "stc_lcmv": 33, "stc_dspm": [33, 39, 58], "2421": [33, 117, 167, 198, 219], "0411": [33, 167, 219], "0741": [33, 167, 219], "1231": [33, 167, 193, 206, 219], "1431": [33, 167, 198, 219], "1611": [33, 117, 167, 219], "2621": [33, 167, 198, 219], "1941": [33, 167, 219], "0131": [33, 143, 164, 167, 219], "2531": [33, 167, 198, 219], "0331": [33, 164, 167, 219], "0231": [33, 117, 164, 167, 219], "1311": [33, 132, 133, 167, 206, 219], "0531": [33, 167, 219], "1841": [33, 167, 192, 219], "0621": [33, 167, 219], "0241": [33, 167, 219], "2541": [33, 167, 198, 219], "2231": [33, 167, 192, 219], "1741": [33, 167, 198, 219, 240], "2221": [33, 167, 219], "0541": [33, 167, 219], "1041": [33, 167, 219], "0921": [33, 167, 219], "1121": [33, 167, 192, 206, 219], "1211": [33, 167, 219], "2521": [33, 138, 147, 167, 219], "1421": [33, 143, 144, 167, 198, 204, 219], "2341": [33, 167, 219], "0211": [33, 164, 167, 219], "0811": [33, 167, 198, 219], "0521": [33, 167, 198, 219], "0931": [33, 167, 219], "1011": [33, 167, 193, 219], "0941": [33, 167, 219], "0911": [33, 167, 198, 219], "2331": [33, 167, 219, 544], "0721": [33, 167, 219], "0641": [33, 167, 219], "1911": [33, 167, 219], "0731": [33, 167, 219], "1821": [33, 167, 192, 219], "1341": [33, 167, 206, 219], "2241": [33, 157, 167, 219], "1631": [33, 117, 167, 219], "0311": [33, 164, 167, 219], "0421": [33, 167, 219], "2141": [33, 167, 198, 219, 222, 240, 683, 684], "2641": [33, 167, 219], "2511": [33, 167, 219], "1831": [33, 167, 219], "1531": [33, 164, 167, 219, 252], "1321": [33, 167, 198, 219], "0631": [33, 167, 219], "0111": [33, 143, 164, 167, 174, 198, 204, 211, 219, 625], "1621": [33, 117, 167, 219], "0511": [33, 144, 167, 219], "1411": [33, 143, 144, 167, 198, 204, 219], "0141": [33, 167, 198, 219], "0221": [33, 164, 167, 219], "2121": [33, 167, 219], "1331": [33, 143, 167, 198, 206, 219], "0441": [33, 167, 219], "1111": [33, 139, 149, 167, 199, 219, 227, 240, 349, 676, 677, 678, 680, 681, 830], "2131": [33, 167, 198, 219, 222, 240, 683, 684], "1511": [33, 164, 167, 219], "1931": [33, 167, 219], "0821": [33, 167, 219], "2021": [33, 142, 167, 188, 219, 240, 382, 498, 847, 852], "2111": [33, 167, 219], "1641": [33, 167, 219], "0611": [33, 167, 219], "1721": [33, 167, 219], "2311": [33, 167, 219], "2031": [33, 167, 219], "1141": [33, 167, 219], "1541": [33, 167, 198, 206, 219], "2041": [33, 167, 219], "2631": [33, 167, 192, 198, 219], "0321": [33, 164, 167, 219], "1021": [33, 167, 193, 219, 225, 240, 255, 260, 261, 262, 263, 470, 471, 472], "1811": [33, 117, 148, 167, 211, 219], "1241": [33, 167, 219], "1921": [33, 167, 219], "1221": [33, 167, 198, 219], "2441": [33, 167, 219], "1441": [33, 143, 167, 189, 198, 206, 219], "0431": [33, 167, 219], "0711": [33, 167, 219], "0121": [33, 143, 164, 167, 211, 219], "1731": [33, 34, 167, 219], "0341": [33, 167, 219], "2431": [33, 167, 219], "2411": [33, 117, 167, 219], "1521": [33, 164, 167, 219], "2611": [33, 167, 198, 219], "2321": [33, 167, 219], "1031": [33, 167, 193, 219, 829], "planar": [33, 39, 41, 49, 57, 58, 69, 81, 89, 91, 106, 108, 116, 128, 140, 144, 170, 175, 176, 177, 181, 186, 193, 196, 203, 204, 207, 219, 222, 755, 853, 856, 871], "7615": [33, 123, 240, 381], "004172": 33, "17919e": 33, "08": [33, 39, 41, 44, 49, 57, 58, 71, 81, 91, 100, 104, 105, 106, 109, 127, 149, 158, 164, 174, 175, 176, 177, 178, 181, 182, 193, 199, 204, 206, 211, 216, 218, 219, 223, 224, 225, 226, 227, 240, 647, 652, 689], "exp": [33, 39, 41, 49, 57, 58, 87, 89, 91, 106, 175, 176, 177, 180, 189, 193, 204, 219, 222, 292, 293, 447, 466, 468, 469, 528], "37508": 33, "81894e": 33, "brain_dic": 33, "5205929": 33, "6585548": 33, "71744034": 33, "brain_lcmv": 33, "37202028": 33, "44229054": 33, "93188606": 33, "brain_dspm": 33, "71161502": 33, "88782419": 33, "99242158": 33, "710": [33, 55, 78, 206, 240, 558], "278": [33, 55, 109, 167, 227], "evoked_ers_source_pow": [33, 55], "detail": [34, 43, 44, 77, 116, 138, 140, 147, 148, 149, 153, 154, 156, 164, 165, 166, 167, 168, 169, 170, 173, 175, 178, 186, 187, 188, 192, 193, 197, 198, 200, 202, 203, 204, 207, 211, 212, 213, 214, 232, 235, 240, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 298, 299, 300, 301, 302, 303, 304, 307, 311, 312, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 405, 406, 408, 409, 411, 413, 414, 416, 419, 420, 422, 424, 428, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 446, 447, 448, 453, 454, 458, 459, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 512, 513, 514, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 543, 546, 549, 550, 552, 553, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 573, 574, 575, 576, 578, 579, 581, 582, 585, 586, 587, 590, 591, 592, 593, 595, 597, 598, 599, 600, 601, 602, 604, 605, 606, 608, 609, 610, 612, 613, 614, 615, 616, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 635, 638, 639, 641, 642, 643, 644, 653, 654, 655, 656, 658, 660, 661, 662, 663, 664, 665, 666, 677, 678, 679, 680, 681, 683, 685, 686, 687, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 703, 707, 708, 709, 710, 714, 718, 719, 721, 722, 723, 724, 727, 728, 733, 737, 738, 746, 753, 754, 755, 762, 763, 766, 769, 770, 771, 772, 773, 776, 777, 778, 780, 781, 782, 783, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 807, 809, 810, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 830, 846, 847, 849, 850, 854, 859, 871], "luessi": [34, 46, 101, 240, 845, 871], "mluessi": [34, 46, 101], "nmr": [34, 42, 46, 101, 111, 153, 211, 267, 271, 275, 362, 796, 853], "mgh": [34, 42, 46, 57, 101, 111, 153, 168, 211, 267, 271, 275, 323, 362, 639, 796, 841, 847, 853, 859, 871], "harvard": [34, 42, 46, 57, 101, 111, 153, 251, 267, 271, 275, 362, 796, 853, 858], "daniel": [34, 39, 45, 57, 58, 89, 124, 206, 240, 271, 468, 469, 845, 858, 871], "strohmeier": [34, 39, 45, 58, 89, 240, 468, 469, 845, 871], "tu": [34, 39, 45, 58, 89], "ilmenau": [34, 39, 45, 58, 89, 251, 858], "de": [34, 39, 45, 58, 89, 96, 109, 192, 193, 237, 240, 251, 409, 550, 564, 846, 858, 871], "gamma_map": [34, 861, 871], "make_stc_from_dipol": [34, 39, 45, 58, 861, 871], "plot_dipole_loc": [34, 39, 50, 58, 176, 181, 183, 861, 871], "plot_dipole_amplitud": [34, 39, 50, 58, 861], "evoked_fnam": [34, 50, 87, 92, 255, 260, 261, 262, 263, 470, 471, 472], "50e": [34, 89, 149, 201], "300e": 34, "xyz_same_gamma": [34, 466, 871], "return_residu": [34, 39, 45, 50, 58, 175, 295, 466, 468, 469, 517, 871], "return_as_dipol": [34, 39, 45, 58, 466, 468, 469, 871], "303": [34, 85, 109, 167, 218, 227, 231], "364": [34, 39, 47, 48, 53, 54, 57, 58, 66, 78, 89, 91, 118, 160, 164, 167, 176, 206, 227, 235], "converg": [34, 39, 45, 58, 170, 177, 202, 466, 517, 550, 853, 871], "054e": 34, "22233": 34, "856e": 34, "20712": 34, "375e": 34, "17166": 34, "061e": 34, "12996": 34, "273e": 34, "10107": 34, "574e": 34, "8307": 34, "319e": 34, "7209": 34, "369e": 34, "6342": 34, "631e": 34, "5694": 34, "047e": 34, "5142": 34, "579e": 34, "4692": 34, "199e": 34, "4287": 34, "889e": 34, "4002": [34, 853], "634e": 34, "3696": 34, "422e": 34, "3429": 34, "246e": 34, "3153": 34, "099e": 34, "2952": [34, 160], "748e": 34, "2745": 34, "703e": 34, "2559": 34, "817e": 34, "2394": 34, "063e": 34, "2229": 34, "417e": 34, "2067": 34, "883e": 34, "1944": 34, "711e": 34, "1836": 34, "551e": 34, "400e": 34, "1617": [34, 206], "266e": 34, "1509": 34, "166e": 34, "1440": 34, "066e": 34, "1350": 34, "964e": 34, "1245": 34, "861e": 34, "1200": [34, 218], "754e": 34, "643e": 34, "1077": [34, 57, 240, 271, 532, 650], "529e": 34, "1017": [34, 193, 240, 709], "410e": 34, "288e": 34, "924": [34, 55, 59], "163e": 34, "873": [34, 227], "036e": 34, "837": [34, 227], "906e": 34, "798": [34, 142, 227], "776e": 34, "744": [34, 141, 146, 206, 227], "644e": 34, "705": [34, 130, 164, 170, 227], "513e": 34, "382e": 34, "253e": 34, "627": [34, 227], "125e": 34, "600": [34, 39, 57, 58, 69, 72, 78, 80, 87, 90, 123, 124, 131, 153, 154, 158, 165, 166, 176, 177, 178, 179, 182, 185, 189, 196, 197, 200, 203, 204, 205, 206, 207, 211, 212, 213, 214, 219, 227, 240, 469, 738, 871], "000e": 34, "588": [34, 206, 227], "877e": 34, "570": [34, 46, 55, 78], "758e": 34, "552": [34, 227], "642e": 34, "528": [34, 141, 227], "495": [34, 79, 206, 217, 222, 227], "421e": 34, "486": [34, 141, 222, 227], "316e": 34, "465": [34, 193, 200, 227], "215e": 34, "119e": 34, "026e": 34, "408": [34, 78, 121, 127, 183, 222, 227], "937e": 34, "402": [34, 78, 142, 856], "853e": 34, "387": [34, 78, 168, 172, 222, 240, 292], "772e": 34, "378": [34, 78, 88, 206, 222, 227], "695e": 34, "348": [34, 94, 99, 160, 167, 199, 206, 227, 871], "622e": 34, "339": [34, 99, 167, 206, 227], "552e": 34, "486e": 34, "330": [34, 49, 78, 79, 109, 167, 181, 206, 227, 871], "423e": 34, "306e": 34, "252e": 34, "297": [34, 109, 167, 206, 227], "201e": 34, "152e": 34, "273": [34, 45, 109, 164, 167, 182, 206, 222, 871], "106e": 34, "261": [34, 167, 206, 222, 227], "062e": 34, "020e": 34, "807e": 34, "431e": 34, "222": [34, 45, 109, 167, 189, 193, 222, 227, 232], "074e": 34, "219": [34, 40, 55, 167, 226, 871], "735e": 34, "412e": 34, "105e": 34, "207": [34, 111, 156, 167, 193, 206, 226, 227, 234, 240], "813e": 34, "198": [34, 167, 182, 193, 222, 226, 227, 232], "535e": 34, "192": [34, 167, 169, 193, 206, 222, 227], "271e": 34, "186": [34, 44, 142, 167, 174, 179, 206, 222, 226, 227], "018e": 34, "778e": 34, "174": [34, 123, 167, 193, 222, 227, 231, 234, 240, 273], "549e": 34, "168": [34, 44, 130, 167, 174, 179, 193, 222, 227, 232], "121e": 34, "159": [34, 111, 147, 148, 152, 167, 206, 222, 227], "922e": 34, "156": [34, 44, 47, 55, 167, 174, 179, 222, 226, 227, 273], "731e": 34, "895e": 34, "132": [34, 45, 98, 99, 149, 167, 206, 222], "749e": 34, "129": [34, 60, 125, 167, 168, 222, 226, 227, 235, 240], "608e": 34, "126": [34, 44, 96, 99, 167, 227], "344e": 34, "123": [34, 120, 167, 174, 193, 202, 204, 226, 227, 340], "220e": 34, "104": [34, 60, 167, 193, 222, 227, 240, 650, 856, 871], "100e": [34, 64, 143, 149, 198, 219], "117": [34, 60, 143, 167, 222, 226, 227, 240, 720, 723, 871], "985e": 34, "875e": 34, "107": [34, 60, 110, 112, 132, 138, 167, 183, 185, 226, 227, 240, 856, 871], "769e": 34, "666e": 34, "473e": 34, "208e": 34, "126e": 34, "115": [34, 60, 81, 91, 167, 181, 222, 226, 227, 240, 558], "688e": 34, "500e": 34, "441e": 34, "384e": 34, "329e": 34, "127": [34, 167, 192, 222, 226, 227], "275e": 34, "137": [34, 96, 99, 132, 167, 198, 206, 210, 227, 273], "154": [34, 166, 167, 222, 226, 227], "155": [34, 135, 167, 222, 226, 227, 237, 871], "247e": 34, "649e": 34, "116e": 34, "179": [34, 73, 167, 222, 226, 240, 585, 853], "523e": 34, "211": [34, 40, 58, 143, 167, 226, 227], "307e": 34, "227": [34, 149, 167, 206, 226, 227, 240, 382, 847], "214e": 34, "041e": 34, "293": [34, 45, 55, 109, 167, 181, 185, 222, 227, 240], "730e": 34, "124e": 34, "160e": 34, "783e": 34, "340": [34, 50, 78, 79, 97, 109, 120, 167, 189, 227, 240, 295, 871], "168e": 34, "949e": 34, "886e": 34, "420": [34, 78, 93, 227], "855e": 34, "reach": [34, 39, 45, 58, 170, 237, 253, 255, 260, 261, 262, 263, 470, 471, 472, 646, 690, 692, 694, 735, 770, 777, 798], "dip": [34, 39, 58, 81, 113, 174, 179, 181, 182, 183, 208, 237, 258, 446, 600, 871], "mri_head_t": [34, 39, 50, 58, 179, 264, 265, 464, 465, 856], "scale_factor": [34, 47, 48, 49, 58, 175, 268, 274, 276, 307, 738, 788, 797, 801], "fig_nam": [34, 39, 45, 58, 797], "david": [34, 41, 116, 123, 126, 132, 192, 199, 235, 240, 255, 260, 261, 262, 263, 349, 381, 409, 466, 470, 471, 472, 518, 692, 694, 702, 707, 709, 720, 723, 755, 853, 871], "wipf": [34, 240, 466], "srikantan": [34, 219, 240, 292, 293, 466], "nagarajan": [34, 219, 240, 292, 293, 466], "unifi": [34, 135, 199, 240, 466, 650, 871], "966": [34, 41, 126, 160, 170, 193, 204, 227, 240, 466], "059": [34, 138, 140, 147, 167, 197, 211, 219, 240, 466], "314": [34, 55, 109, 167, 206, 222, 227], "gamma_map_invers": [34, 55], "form": [36, 139, 141, 158, 166, 173, 176, 196, 199, 201, 202, 203, 207, 222, 224, 227, 230, 255, 257, 260, 261, 262, 263, 265, 267, 268, 269, 271, 274, 275, 276, 330, 403, 406, 407, 409, 410, 411, 412, 413, 415, 416, 417, 438, 466, 468, 469, 470, 471, 472, 503, 512, 517, 519, 520, 521, 549, 551, 559, 564, 578, 621, 624, 639, 640, 641, 642, 643, 655, 677, 678, 680, 681, 690, 692, 693, 694, 702, 755, 770, 772, 777, 790, 793, 798, 800, 819, 824, 830, 849, 850, 852, 853, 856, 871], "merg": [36, 139, 212, 213, 255, 260, 262, 263, 348, 445, 515, 632, 639, 830, 852, 871], "christian": [36, 117, 123, 131, 142, 240, 381, 382, 403, 427, 650, 845, 847, 871], "brodbeck": [36, 117, 131, 240, 845, 871], "christianbrodbeck": [36, 117, 131], "read_source_estim": [36, 42, 52, 113, 124, 131, 173, 179, 231, 861, 871], "aud_lh": 36, "aud_rh": 36, "stc_lh": [36, 46], "stc_rh": [36, 46], "stc_bh": 36, "calcul": [36, 37, 57, 78, 98, 109, 125, 142, 148, 149, 156, 160, 164, 168, 174, 178, 186, 192, 198, 199, 202, 204, 211, 222, 223, 227, 236, 255, 260, 261, 262, 263, 267, 268, 270, 271, 274, 275, 276, 292, 293, 299, 349, 353, 354, 363, 364, 365, 403, 410, 411, 438, 446, 447, 460, 466, 468, 469, 470, 471, 472, 507, 512, 513, 514, 528, 550, 557, 562, 563, 566, 569, 578, 582, 598, 608, 620, 655, 669, 677, 678, 680, 681, 683, 684, 691, 702, 708, 709, 710, 778, 783, 792, 826, 850, 856, 871], "mass": [36, 163, 222, 223, 228, 229, 255, 260, 265, 266, 271, 471, 547, 605, 639, 647, 653, 656, 671, 673, 674, 678, 693, 721, 728, 868, 871], "mni": [36, 132, 133, 134, 157, 174, 179, 180, 188, 258, 275, 276, 307, 323, 362, 464, 622, 730, 737, 738, 802, 853, 871], "vtx": 36, "t_lh": 36, "center_of_mass": [36, 218, 266, 271, 653, 656, 871], "mni_lh": 36, "vertex_to_mni": [36, 266, 271, 861], "t_rh": 36, "mni_rh": 36, "275": [36, 45, 120, 164, 167, 168, 189, 222, 227, 240, 333, 403, 847, 853], "625": [36, 141, 227], "hl": 36, "hr": 36, "hb": 36, "figlegend": 36, "419": [36, 55, 206, 222, 227], "label_activation_from_stc": [36, 55], "typic": [37, 43, 59, 68, 80, 132, 141, 143, 147, 149, 154, 158, 165, 166, 168, 186, 189, 193, 196, 197, 199, 201, 202, 203, 204, 205, 207, 213, 222, 237, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 274, 275, 276, 292, 293, 307, 308, 326, 337, 339, 349, 353, 354, 355, 357, 410, 421, 446, 456, 459, 470, 471, 472, 530, 549, 550, 552, 560, 564, 579, 589, 592, 602, 639, 661, 675, 676, 677, 678, 680, 681, 690, 693, 738, 776, 785, 789, 791, 826, 829, 830, 836, 847, 848, 850, 852, 853, 871], "anatom": [37, 43, 68, 91, 132, 133, 154, 158, 174, 179, 240, 258, 275, 276, 360, 455, 738, 756, 760, 802, 826, 853, 871], "yield": [37, 138, 140, 143, 147, 149, 153, 159, 169, 178, 200, 202, 211, 212, 237, 255, 257, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 420, 424, 550, 553, 560, 561, 569, 578, 642, 643, 682, 690, 738, 755, 777, 781, 798, 800, 826, 848, 850, 853, 871], "peak": [37, 53, 54, 59, 68, 70, 72, 79, 87, 91, 92, 124, 129, 143, 147, 148, 164, 170, 173, 175, 176, 178, 181, 182, 183, 189, 196, 198, 201, 202, 204, 206, 208, 222, 237, 252, 255, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 354, 532, 550, 552, 555, 562, 563, 566, 567, 569, 570, 571, 573, 574, 587, 647, 676, 690, 768, 773, 775, 776, 777, 811, 846, 853, 871], "banksst": [37, 40, 46], "aparc_label_nam": 37, "stc_mean": 37, "grow": [37, 87, 92, 237, 461, 503, 595, 837, 852], "halt": [37, 132, 140, 255, 258, 260, 261, 262, 263, 462, 463, 470, 471, 472, 550, 692, 694, 766, 768, 785, 791, 794, 836, 871], "read_labels_from_annot": [37, 40, 46, 66, 87, 91, 92, 123, 218, 536, 612, 821, 861, 871], "parc": [37, 40, 46, 613, 821], "aparc": [37, 40, 46, 66, 87, 91, 92, 123, 133, 153, 174, 179, 218, 258, 267, 268, 271, 274, 275, 276, 378, 437, 455, 505, 613, 628, 738, 826, 871], "regexp": [37, 87, 91, 92, 197, 202, 204, 432, 544, 613, 871], "stc_mean_label": 37, "func_label": 37, "stc_to_label": [37, 861, 871], "maximum": [37, 46, 47, 49, 57, 80, 112, 116, 149, 174, 175, 179, 180, 198, 199, 202, 211, 240, 255, 257, 260, 261, 262, 263, 267, 268, 271, 273, 274, 275, 276, 292, 293, 321, 337, 360, 403, 410, 436, 437, 440, 461, 466, 468, 469, 470, 471, 472, 503, 511, 517, 526, 527, 532, 550, 552, 566, 576, 577, 655, 677, 678, 680, 681, 686, 690, 695, 696, 697, 698, 699, 700, 701, 720, 723, 738, 755, 762, 767, 773, 776, 777, 781, 796, 798, 800, 801, 802, 811, 826, 853, 871], "anat_label": 37, "stc_anat_label": 37, "pca_anat": 37, "extract_label_time_cours": [37, 38, 40, 179, 267, 268, 271, 274, 275, 276, 505, 861, 871], "pca_flip": [37, 38, 267, 268, 271, 274, 275, 276, 437], "stc_func_label": 37, "pca_func": 37, "show_view": [37, 47, 106, 113, 132, 133, 158, 179, 188, 208, 219, 232, 267, 268, 271, 274, 275, 276, 738, 796, 801, 871], "add_label": [37, 58, 101, 113, 123, 738], "border": [37, 58, 101, 113, 123, 153, 179, 255, 257, 260, 261, 262, 263, 269, 429, 470, 471, 472, 549, 564, 690, 692, 694, 738, 770, 776, 777, 790, 793, 798, 799, 800, 871], "73227205": 37, "80078852": 37, "62750681": 37, "775": [37, 55, 124], "label_from_stc": [37, 55], "strategi": [38, 193, 196, 202, 204, 205, 240, 348, 360, 408, 420, 468, 650, 707, 709, 770, 850], "simpl": [38, 45, 125, 142, 143, 149, 158, 159, 164, 179, 192, 193, 199, 203, 219, 222, 237, 240, 252, 319, 348, 403, 406, 407, 409, 410, 411, 412, 413, 415, 416, 417, 488, 551, 786, 830, 847, 853, 871], "patheffect": [38, 158], "path_effect": [38, 158], "label_fnam": 38, "stc_label": 38, "mean_flip": [38, 267, 268, 271, 274, 275, 276, 437, 871], "tc": 38, "pe": 38, "stroke": [38, 158], "foreground": [38, 140, 158, 267, 268, 271, 274, 275, 276, 738, 796, 801, 871], "possibl": [38, 42, 44, 111, 132, 135, 138, 140, 141, 143, 147, 148, 149, 154, 158, 159, 166, 167, 168, 169, 170, 176, 178, 186, 188, 193, 196, 197, 198, 199, 200, 202, 203, 205, 206, 207, 211, 212, 213, 214, 219, 222, 226, 227, 235, 237, 254, 255, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 319, 321, 349, 403, 406, 407, 409, 410, 411, 412, 413, 415, 416, 417, 420, 426, 444, 454, 462, 470, 471, 472, 479, 494, 550, 551, 585, 586, 604, 605, 635, 672, 677, 679, 690, 691, 694, 725, 754, 764, 772, 773, 776, 781, 784, 785, 792, 828, 835, 847, 848, 850, 852, 853, 856, 857, 871], "vectorsourceestim": [38, 59, 173, 267, 268, 271, 272, 275, 276, 288, 466, 468, 469, 517, 518, 519, 520, 521, 526, 527, 618, 801, 802, 826, 861, 871], "stc_vec": [38, 40, 178], "stc_vec_label": 38, "ee6677": [38, 158], "228833": 38, "4477aa": 38, "xyz": [38, 154, 158, 176, 267, 268, 271, 274, 275, 276, 307, 325, 437, 466, 494, 808, 871], "zorder": [38, 158, 262, 263, 772, 775, 871], "551": [38, 45, 55, 56, 111, 134], "label_source_activ": [38, 55], "ir": 39, "l0": [39, 468], "sparser": [39, 267, 271, 275, 796], "convex": [39, 45, 58, 240, 255, 257, 260, 261, 262, 263, 269, 470, 471, 472, 549, 564, 690, 692, 694, 755, 770, 777, 790, 793, 798, 800, 871], "mixed_norm": [39, 173, 469, 861, 871], "sure": [39, 42, 44, 68, 106, 110, 132, 133, 138, 139, 142, 149, 154, 159, 160, 164, 168, 169, 170, 174, 187, 197, 200, 201, 202, 204, 207, 211, 226, 230, 231, 232, 252, 262, 263, 434, 435, 468, 483, 534, 549, 560, 685, 705, 717, 718, 719, 721, 775, 817, 828, 829, 830, 838, 871], "criterion": [39, 517, 871], "n_mxne_it": [39, 468], "use_cp": [39, 89, 156, 218, 268, 274, 276, 280, 281, 359, 517, 518, 519, 520, 521, 524, 528, 533, 534, 654, 655, 853, 871], "maxit": [39, 58, 466, 468, 469], "3000": [39, 48, 110, 135, 140, 143, 144, 192, 198, 204, 252, 468, 469], "active_set_s": [39, 468], "debia": [39, 58, 468, 469], "slower": [39, 43, 45, 199, 255, 260, 358, 402, 470, 471, 472, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 510, 520, 586, 830, 859], "sure_alpha_grid": [39, 468], "083": [39, 121], "tidx": [39, 179], "7262": [39, 57, 58, 91, 176, 193, 219], "020866": [39, 57, 193], "58122e": [39, 57, 58, 91, 176, 193, 219], "element": [39, 57, 87, 166, 170, 176, 177, 180, 189, 193, 199, 203, 204, 211, 213, 222, 224, 240, 254, 255, 257, 260, 261, 262, 263, 265, 267, 268, 269, 270, 271, 273, 274, 275, 276, 317, 318, 403, 410, 415, 424, 425, 437, 438, 458, 470, 471, 472, 505, 506, 507, 549, 564, 578, 639, 670, 678, 690, 692, 694, 743, 755, 757, 762, 770, 777, 790, 793, 796, 798, 800, 801, 802, 826, 830, 836, 851, 852, 856, 871], "21995": 39, "82623e": 39, "360": [39, 47, 48, 53, 54, 57, 58, 78, 79, 90, 91, 118, 150, 160, 167, 170, 176, 189, 206, 227, 236], "warm": 39, "33333333333333": 39, "66666666666667": 39, "66666666666666": 39, "666666666666664": 39, "60279": 39, "603691813114": 39, "59855": 39, "33381940738": 39, "60434": 39, "87086639602": 39, "60386": 39, "806544140134": 39, "60336": 39, "58240427435": 39, "60303": 39, "83155030615": 39, "60157": 39, "013430584055": 39, "59974": 39, "67524684279": 39, "59597": 39, "86913013583": 39, "59084": 39, "52687739991": 39, "compute_source_morph": [39, 42, 43, 131, 156, 158, 178, 179, 230, 231, 232, 267, 271, 272, 275, 276, 615, 796, 802, 846, 861, 871], "subject_from": [39, 42, 43, 132, 178, 266, 272, 355, 536, 537, 615, 627, 628, 629, 630, 811, 846], "stc_fsaverag": [39, 42, 43, 846], "src_fsaverage_fnam": 39, "src_fsaverag": 39, "matthieu": [39, 58, 240, 468, 469], "kowalski": [39, 58, 240, 468, 469], "acceler": [39, 240, 468, 836, 850, 853, 871], "gradient": [39, 116, 240, 255, 260, 261, 262, 263, 265, 468, 470, 471, 472, 513, 550, 690, 692, 693, 694, 755, 871], "physic": [39, 154, 158, 168, 174, 176, 187, 207, 240, 262, 263, 265, 424, 436, 468, 470, 471, 472, 517, 561, 569, 578, 709, 772, 826, 853, 856], "medicin": [39, 80, 174, 207, 240, 468, 550, 578, 853], "biologi": [39, 80, 174, 207, 240, 468, 550, 578, 853], "1937": [39, 240, 468], "2012": [39, 58, 149, 167, 199, 222, 240, 266, 271, 278, 349, 468, 469, 683, 684, 859], "1088": [39, 174, 192, 205, 207, 240, 255, 260, 261, 262, 263, 409, 468, 470, 471, 472, 578, 635, 853], "0031": [39, 174, 207, 240, 468, 578, 853], "9155": [39, 174, 207, 240, 468, 578, 853], "jen": [39, 45, 58, 240, 468, 469, 871], "haueisen": [39, 45, 58, 240, 468, 469], "improv": [39, 68, 142, 192, 193, 201, 204, 240, 255, 260, 261, 262, 263, 300, 336, 338, 342, 364, 365, 405, 414, 439, 441, 442, 443, 470, 471, 472, 528, 551, 586, 589, 647, 652, 830, 846, 848, 849, 850, 871], "prni": [39, 45, 240, 469], "t\u00fcbingen": [39, 240], "6858545": [39, 240], "charl": [39, 43, 240, 272, 355, 468], "alban": [39, 240, 468], "deledal": [39, 240, 468], "samuel": [39, 91, 92, 240, 468, 871], "vaiter": [39, 240, 468], "jalal": [39, 240, 468], "fadili": [39, 240, 468], "peyr\u00e9": [39, 240, 468], "stein": [39, 240, 468], "unbias": [39, 240, 468], "risk": [39, 179, 199, 202, 226, 240, 255, 260, 261, 262, 263, 468, 470, 471, 472, 569, 738], "sugar": [39, 240, 468], "siam": [39, 240, 468], "journal": [39, 42, 68, 69, 72, 116, 132, 155, 193, 199, 207, 227, 235, 240, 255, 260, 261, 262, 263, 272, 349, 355, 424, 468, 470, 471, 472, 550, 558, 559, 561, 578, 650, 677, 678, 680, 681, 692, 694, 702, 707, 709, 720, 723, 755, 845], "2448": [39, 240, 468], "2487": [39, 240, 468], "1137": [39, 240, 468], "140968045": [39, 240, 468], "223": [39, 45, 55, 146, 167, 222, 226, 227], "385": [39, 78, 192, 222, 227], "mixed_norm_invers": [39, 55], "annalisa": [40, 871], "pascarella": [40, 871], "iac": 40, "cnr": 40, "dir": [40, 169, 252, 738, 853, 856], "data_dir": [40, 56, 131, 142], "bem_dir": [40, 44, 106, 157, 159, 180], "fname_mixed_src": 40, "fname_aseg": [40, 179], "fname_model": 40, "_audvi": 40, "_audvis_raw": [40, 155], "substructur": 40, "labels_vol": 40, "amygdala": 40, "thalamu": 40, "proper": [40, 68, 222, 237, 261, 262, 263, 266, 292, 293, 349, 353, 354, 360, 363, 364, 365, 367, 403, 410, 446, 447, 466, 468, 469, 472, 528, 749, 778, 830, 847, 859, 871], "stem": [40, 70, 271, 272, 275, 478, 496], "oct6": [40, 106, 156, 252, 267, 271, 275, 630, 638, 796, 846], "oct5": [40, 106, 846], "1026": [40, 106, 193, 846], "bound": [40, 132, 156, 255, 257, 260, 261, 262, 263, 267, 268, 269, 271, 274, 275, 276, 403, 410, 447, 470, 471, 472, 549, 550, 639, 690, 691, 692, 694, 709, 710, 727, 753, 755, 757, 762, 770, 777, 781, 790, 791, 792, 793, 796, 798, 800, 801, 802, 853, 856, 871], "10mm": 40, "someth": [40, 124, 147, 159, 169, 170, 189, 199, 204, 205, 211, 267, 268, 271, 274, 275, 276, 738, 739, 796, 801, 826, 829, 830, 833, 834, 835, 837, 871], "vol_src": [40, 133, 156], "add_interpol": [40, 49, 156, 639], "usual": [40, 49, 68, 80, 109, 111, 138, 141, 143, 147, 148, 149, 153, 154, 158, 159, 164, 165, 166, 168, 170, 178, 181, 186, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 211, 212, 213, 214, 230, 232, 235, 236, 252, 255, 258, 259, 260, 261, 262, 263, 264, 265, 273, 298, 320, 325, 330, 332, 334, 454, 470, 471, 472, 655, 677, 678, 680, 681, 826, 830, 831, 833, 836, 838, 850, 853, 856], "nuse": [40, 265, 273, 856], "2562": [40, 106, 148, 156, 846], "node": [40, 46, 156, 664, 665, 666, 743, 856, 871], "2961": 40, "1275": 40, "2615": 40, "1340": 40, "1589": 40, "1372": 40, "1306": [40, 206], "010000": [40, 154], "2169": 40, "write_source_spac": [40, 620, 846, 861, 871], "again": [40, 132, 139, 140, 142, 148, 149, 153, 154, 159, 170, 193, 196, 197, 199, 201, 202, 203, 204, 211, 222, 227, 237, 255, 260, 261, 262, 263, 270, 470, 471, 472, 550, 586, 789, 817, 829, 852, 853, 871], "plot_img": 40, "nipy_spectr": 40, "exist": [40, 43, 96, 98, 124, 138, 141, 147, 148, 154, 159, 168, 169, 170, 174, 178, 198, 199, 200, 203, 204, 205, 213, 217, 222, 224, 252, 254, 255, 257, 258, 260, 261, 262, 263, 264, 265, 267, 268, 270, 271, 272, 273, 274, 275, 276, 284, 302, 303, 304, 307, 366, 371, 372, 373, 374, 376, 377, 379, 380, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 425, 429, 433, 434, 435, 436, 438, 455, 470, 471, 472, 473, 486, 502, 535, 537, 539, 549, 550, 553, 560, 579, 598, 608, 628, 629, 632, 635, 636, 637, 640, 642, 643, 660, 661, 664, 690, 691, 692, 693, 694, 724, 727, 738, 761, 777, 792, 813, 814, 815, 816, 817, 818, 819, 821, 822, 823, 824, 825, 830, 838, 846, 847, 850, 852, 857, 859, 871], "5mm": [40, 81, 133, 423, 738], "innerskul": 40, "815": [40, 155, 162, 206, 227], "807": [40, 227], "6003": 40, "inv_method": [40, 87], "a2009": [40, 91, 153, 174, 267, 268, 271, 274, 275, 276, 437, 505, 613], "39266": 40, "01344e": 40, "coron": [40, 133, 156, 158, 178, 258, 738, 756, 766], "brain_kwarg": [40, 113, 132, 178, 179, 267, 268, 271, 274, 275, 276, 796, 801], "silhouett": [40, 178, 179, 267, 268, 271, 274, 275, 276, 738, 796, 801, 871], "43101017": 40, "98225664": 40, "7504814": 40, "45409596": 40, "02821048": 40, "97219252": 40, "vox": [40, 132, 158, 178, 179, 180], "2045": 40, "21567156": 40, "47889133": 40, "39837939": 40, "labels_parc": 40, "label_t": 40, "allow_empti": [40, 267, 268, 271, 274, 275, 276, 437], "nam": [40, 90, 91, 92, 181, 182, 219, 656, 871], "264": [40, 55, 78, 79, 109, 149, 167, 189, 227, 240], "mixed_source_space_invers": [40, 55], "computation": [41, 170, 199, 202, 203, 586, 853, 859], "sabbagh": [41, 240, 518, 871], "pierr": [41, 74, 202, 240, 518, 550, 871], "ablin": [41, 74, 202, 240, 518, 550, 871], "ga\u00ebl": [41, 240, 518], "varoquaux": [41, 240, 518], "state": [41, 87, 90, 106, 123, 138, 160, 164, 166, 173, 196, 197, 204, 205, 212, 222, 237, 240, 253, 255, 260, 261, 344, 427, 468, 487, 503, 510, 518, 550, 576, 595, 596, 601, 602, 642, 643, 644, 653, 654, 656, 677, 678, 679, 680, 681, 690, 692, 693, 738, 781, 826, 828, 830, 838, 852, 853, 856, 859, 871], "2020": [41, 72, 142, 155, 240, 382, 518, 550, 689, 847], "116893": [41, 240, 518], "alexand": [41, 132, 240, 871], "captur": [41, 45, 135, 142, 164, 170, 181, 182, 193, 201, 202, 203, 204, 205, 265, 270, 447, 549, 562, 563, 566, 592, 593, 826, 871], "environ": [41, 42, 43, 153, 170, 173, 258, 266, 267, 268, 270, 271, 273, 274, 275, 276, 298, 302, 303, 304, 307, 355, 360, 361, 362, 366, 371, 372, 373, 374, 376, 377, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 422, 451, 453, 455, 459, 461, 462, 463, 464, 465, 503, 507, 509, 536, 537, 575, 595, 613, 615, 622, 627, 628, 629, 630, 634, 637, 638, 639, 653, 656, 667, 685, 686, 730, 737, 738, 754, 756, 766, 796, 801, 802, 804, 811, 821, 828, 829, 833, 834, 835, 836, 838, 846, 850, 853, 871], "raw_empty_room_fnam": [41, 160], "ernoise_raw": [41, 126, 160, 170, 204], "raw_empty_room": [41, 160], "compute_raw_covari": [41, 85, 106, 160, 182, 189, 198, 257, 349, 599, 736, 846, 861, 871], "19800": [41, 126, 160, 170, 204], "85867": [41, 126, 160, 170, 204], "142": [41, 64, 80, 126, 160, 167, 170, 204, 206, 222, 226, 227, 273, 871], "965": [41, 126, 160, 170, 202, 204, 227], "18000": 41, "249": [41, 45, 109, 149, 167, 193, 227, 240], "658": [41, 193, 227], "319": [41, 48, 70, 71, 96, 139, 150, 164, 167, 175, 178, 193, 198, 222, 227, 240, 550], "environment": [41, 164, 196, 200, 203, 205, 207, 211, 213, 214, 846], "rest": [41, 68, 71, 106, 123, 132, 135, 138, 160, 164, 166, 167, 212, 240, 255, 260, 261, 262, 263, 271, 367, 386, 470, 471, 472, 635, 643, 826, 830, 852, 854, 859, 871], "base_cov": 41, "data_cov": [41, 178, 289, 293], "fig_noise_cov": 41, "show_svd": [41, 63, 257, 763], "fig_base_cov": 41, "fig_data_cov": 41, "1680": 41, "_cov": 41, "_kw": 41, "7265": [41, 175, 177], "037795": [41, 175], "52065e": [41, 175, 177], "40775": 41, "63307e": 41, "stc_data": [41, 91, 657], "11847053": 41, "45687517": 41, "03282162": 41, "607": [41, 55, 227], "mne_cov_pow": [41, 55], "pre": [42, 48, 132, 138, 139, 160, 164, 178, 198, 199, 202, 211, 255, 260, 261, 262, 263, 349, 470, 471, 472, 550, 632, 635, 830, 831, 835, 842, 871], "spheric": [42, 69, 76, 149, 154, 168, 181, 182, 183, 197, 204, 207, 240, 255, 257, 260, 261, 262, 263, 266, 269, 271, 272, 307, 323, 325, 355, 403, 410, 424, 470, 471, 472, 514, 549, 550, 559, 560, 561, 564, 569, 578, 639, 653, 656, 667, 671, 690, 692, 694, 738, 755, 762, 770, 772, 774, 777, 778, 781, 788, 790, 792, 793, 794, 798, 800, 853, 871], "surfer": [42, 153, 267, 271, 275, 362, 738, 796, 853], "fswiki": [42, 153, 267, 271, 275, 362, 796, 853], "surfaceregandtempl": 42, "depict": [42, 262, 263, 268, 274, 276, 778, 801, 853], "success": [42, 142, 252, 255, 260, 261, 267, 268, 271, 272, 274, 275, 276, 355, 469, 526, 527, 576, 640, 677, 678, 680, 681, 692, 693, 704, 714, 728, 759, 830], "inflat": [42, 47, 48, 53, 54, 58, 59, 123, 149, 173, 189, 240, 267, 271, 275, 402, 738, 754, 796, 836, 853, 871], "overlaid": [42, 43, 132, 134, 170, 252, 639, 853, 871], "tommi": [42, 43, 871], "clausner": [42, 43, 871], "sample_dir": [42, 43, 113, 156, 170, 173], "fname_src": [42, 133, 157, 180], "fname_fsaverage_src": 42, "fname_stc": [42, 124, 173, 179], "repres": [42, 68, 72, 78, 112, 116, 138, 139, 140, 141, 142, 147, 149, 154, 156, 159, 160, 164, 166, 167, 168, 173, 187, 192, 199, 202, 214, 240, 255, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 270, 271, 273, 274, 275, 276, 292, 293, 349, 353, 354, 363, 364, 365, 403, 410, 437, 446, 447, 466, 468, 469, 470, 471, 472, 494, 503, 516, 528, 550, 564, 604, 678, 690, 693, 738, 755, 778, 781, 785, 796, 797, 801, 826, 830, 846, 850, 853, 856, 871], "itself": [42, 68, 141, 149, 158, 170, 186, 199, 202, 203, 204, 213, 222, 254, 255, 260, 261, 266, 271, 274, 302, 436, 470, 471, 472, 537, 738, 828, 830, 850, 853, 856], "proxim": [42, 133, 264, 685, 871], "src_orig": [42, 271, 274], "3732": [42, 173], "3766": 42, "src_to": [42, 43, 178, 355, 871], "argument": [42, 43, 117, 149, 153, 159, 160, 167, 168, 170, 178, 186, 187, 188, 189, 198, 199, 200, 203, 207, 211, 222, 226, 232, 236, 252, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 298, 299, 300, 301, 302, 303, 304, 307, 311, 312, 314, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 405, 406, 408, 409, 413, 414, 416, 419, 420, 422, 424, 428, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 446, 447, 448, 453, 454, 458, 459, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 505, 506, 507, 508, 509, 510, 512, 513, 514, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 543, 545, 546, 550, 552, 553, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 573, 574, 575, 576, 578, 579, 581, 582, 585, 586, 587, 590, 591, 592, 593, 597, 598, 599, 600, 601, 602, 604, 605, 606, 608, 609, 610, 612, 613, 614, 615, 616, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 635, 638, 639, 641, 642, 643, 644, 654, 655, 658, 660, 661, 662, 663, 664, 665, 666, 672, 677, 678, 679, 680, 681, 685, 686, 687, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 703, 707, 708, 709, 710, 714, 718, 719, 721, 722, 723, 724, 727, 728, 733, 734, 735, 736, 737, 738, 739, 746, 753, 754, 758, 760, 763, 766, 769, 770, 771, 772, 773, 775, 778, 781, 782, 783, 788, 789, 790, 791, 792, 794, 795, 796, 797, 799, 801, 802, 803, 807, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 846, 856, 859, 871], "special": [42, 158, 167, 203, 211, 237, 365, 479, 486, 834, 852, 853, 859, 871], "alwai": [42, 71, 141, 142, 147, 149, 158, 165, 166, 167, 173, 188, 196, 198, 199, 200, 201, 202, 203, 204, 205, 211, 217, 222, 237, 255, 258, 260, 261, 265, 267, 268, 270, 271, 273, 274, 275, 276, 313, 427, 437, 501, 550, 569, 608, 610, 677, 691, 746, 756, 766, 767, 797, 799, 808, 818, 826, 830, 853, 856, 857, 871], "10239": 42, "10240": 42, "10241": 42, "give": [42, 43, 58, 68, 72, 92, 140, 150, 159, 166, 169, 178, 180, 193, 197, 199, 200, 203, 222, 252, 255, 257, 260, 261, 262, 263, 269, 273, 307, 403, 404, 405, 410, 414, 419, 420, 424, 439, 441, 442, 446, 468, 469, 470, 471, 472, 487, 549, 550, 564, 569, 578, 596, 602, 676, 677, 678, 680, 681, 690, 692, 694, 702, 738, 755, 762, 770, 772, 774, 777, 778, 781, 788, 790, 792, 793, 794, 798, 800, 826, 828, 830, 836, 846, 850, 852, 853, 856, 871], "surfer_kwarg": [42, 173, 175], "brain_inf": 42, "under": [42, 43, 59, 124, 141, 142, 160, 187, 193, 196, 199, 203, 218, 222, 224, 230, 255, 260, 261, 262, 263, 266, 267, 268, 270, 271, 274, 275, 276, 278, 307, 319, 349, 350, 352, 354, 371, 372, 373, 374, 376, 377, 384, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 406, 413, 416, 419, 420, 446, 459, 461, 470, 471, 472, 483, 490, 509, 512, 513, 523, 524, 533, 534, 555, 562, 563, 564, 586, 603, 607, 638, 641, 642, 643, 651, 655, 675, 677, 678, 679, 680, 681, 692, 694, 695, 696, 697, 698, 699, 700, 707, 708, 709, 710, 718, 719, 720, 721, 722, 770, 773, 792, 830, 846, 852, 853, 859, 871], "h5": [42, 43, 170, 178, 219, 267, 268, 270, 271, 272, 274, 275, 276, 284, 549, 588, 690, 691, 693, 711, 713, 724, 813, 814, 871], "respect": [42, 43, 46, 54, 66, 69, 87, 129, 138, 142, 149, 154, 157, 166, 167, 170, 173, 186, 193, 197, 199, 202, 203, 205, 206, 211, 212, 227, 255, 257, 260, 261, 262, 263, 265, 269, 270, 271, 275, 276, 292, 293, 294, 330, 349, 353, 354, 360, 363, 364, 365, 403, 405, 410, 414, 427, 439, 441, 446, 447, 466, 468, 469, 470, 471, 472, 477, 494, 503, 506, 514, 528, 549, 550, 551, 552, 554, 564, 566, 596, 604, 639, 647, 650, 652, 658, 678, 690, 692, 694, 708, 738, 754, 755, 759, 762, 768, 770, 772, 777, 778, 781, 782, 785, 790, 791, 793, 798, 800, 802, 830, 833, 836, 846, 850, 853, 856, 871], "my": [42, 43, 170, 180, 217], "read_source_morph": [42, 43, 272, 861], "further": [42, 139, 149, 155, 164, 166, 176, 186, 193, 198, 202, 204, 207, 211, 222, 227, 232, 237, 255, 260, 261, 285, 287, 315, 360, 550, 554, 677, 678, 680, 681, 693, 753, 769, 842, 848, 852, 853, 871], "assign": [42, 44, 98, 100, 117, 134, 138, 141, 142, 149, 159, 166, 168, 173, 176, 186, 187, 204, 207, 212, 217, 254, 260, 265, 270, 273, 461, 463, 479, 483, 486, 488, 492, 494, 503, 512, 550, 566, 567, 570, 571, 573, 574, 600, 634, 760, 821, 846, 853, 856, 871], "chain": [42, 165, 193, 197, 211, 409, 848, 853], "handi": [42, 188, 202], "liner": 42, "shortest": [42, 154, 199, 255, 260, 261, 262, 263, 405, 414, 439, 441, 442, 470, 471, 472, 555], "dougla": [42, 240, 272, 355], "greve": [42, 240, 272, 355], "lise": [42, 240, 272, 355], "der": [42, 240, 272, 355, 853, 871], "haegen": [42, 240, 272, 355], "qing": [42, 240, 272, 355], "cai": [42, 240, 272, 355], "steven": [42, 57, 123, 142, 149, 199, 240, 271, 272, 355, 403, 528, 647, 652, 847, 871], "stufflebeam": [42, 57, 123, 240, 271, 272, 355, 528, 532, 647, 650, 652], "mert": [42, 240, 272, 355], "sabuncu": [42, 240, 272, 355], "bruce": [42, 91, 153, 240, 272, 355, 517, 853], "fischl": [42, 91, 153, 240, 272, 355, 517, 853], "marc": [42, 240, 272, 355], "brysbaert": [42, 240, 272, 355], "languag": [42, 149, 170, 199, 226, 232, 240, 255, 257, 260, 261, 262, 263, 269, 270, 272, 355, 470, 471, 472, 549, 690, 692, 694, 770, 777, 790, 793, 798, 834, 855, 871], "asymmetri": [42, 240, 272, 355], "1477": [42, 192, 206, 240, 272, 355], "1492": [42, 240, 272, 355, 846], "1162": [42, 240, 272, 355, 550], "jocn_a_00405": [42, 240, 272, 355], "morph_surface_stc": [42, 55], "affin": [43, 132, 154, 178, 180, 272, 355, 362, 614, 622, 727, 728, 811, 826, 853, 871], "nonlinear": [43, 240, 676], "symmetr": [43, 132, 199, 240, 255, 260, 261, 262, 263, 267, 268, 271, 272, 274, 275, 276, 355, 439, 441, 442, 470, 471, 472, 677, 678, 680, 681, 691, 727, 728, 738, 757, 796, 801, 802, 811, 871], "diffeomorph": [43, 132, 240, 272, 355, 727, 728, 811, 871], "sdr": [43, 132, 178, 272, 355, 727, 728, 811, 871], "afterward": [43, 147, 255, 260, 261, 262, 263, 470, 471, 472, 635, 654, 871], "nibabel": [43, 132, 154, 158, 169, 180, 273, 463, 464, 465, 689, 738, 811, 829, 853, 871], "fetch_fsaverag": [43, 122, 132, 133, 157, 178, 188, 847, 861, 871], "plot_glass_brain": [43, 132, 180], "sample_dir_raw": [43, 173], "fname_t1_fsaverag": 43, "ensur": [43, 44, 80, 109, 142, 147, 157, 159, 160, 178, 199, 200, 203, 205, 207, 208, 219, 255, 257, 260, 261, 262, 263, 265, 266, 267, 268, 271, 274, 275, 276, 315, 336, 349, 437, 438, 470, 471, 472, 473, 542, 553, 578, 579, 690, 691, 692, 693, 694, 706, 733, 828, 830, 852, 853, 871], "fname_src_fsaverag": 43, "root": [43, 79, 132, 133, 134, 147, 148, 149, 157, 170, 178, 188, 219, 257, 262, 263, 267, 268, 271, 274, 275, 276, 292, 293, 374, 379, 396, 763, 772, 830, 853, 871], "zoom": [43, 68, 132, 149, 158, 178, 202, 204, 272, 355, 728, 871], "reslic": [43, 132, 178, 355, 728], "isotrop": [43, 853], "niter_affin": [43, 178, 272, 355, 871], "niter_sdr": [43, 178, 272, 355, 871], "999999888241291": 43, "translat": [43, 132, 154, 158, 178, 187, 207, 230, 252, 255, 260, 261, 262, 263, 345, 360, 403, 410, 424, 482, 550, 554, 578, 690, 728, 738, 754, 769, 774, 777, 782, 785, 856, 871], "optim": [43, 58, 79, 132, 140, 155, 158, 160, 177, 178, 198, 199, 202, 207, 222, 230, 231, 232, 240, 262, 263, 266, 349, 403, 446, 468, 470, 471, 472, 550, 560, 578, 667, 720, 723, 728, 826, 850, 871], "r\u00b2": [43, 132, 178], "rigid": [43, 132, 178, 728], "compute_vol_morph_mat": [43, 272, 355, 871], "equival": [43, 133, 139, 148, 154, 156, 158, 160, 163, 169, 184, 185, 187, 199, 202, 205, 218, 222, 235, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 274, 275, 276, 292, 293, 307, 348, 403, 409, 410, 443, 446, 447, 466, 468, 469, 470, 471, 472, 512, 517, 528, 549, 550, 553, 555, 564, 569, 608, 637, 654, 677, 690, 692, 694, 721, 722, 728, 738, 754, 755, 762, 770, 772, 774, 777, 778, 781, 788, 790, 792, 793, 794, 796, 798, 800, 801, 826, 830, 846, 850, 853, 856, 857, 871], "reus": [43, 72, 135, 262, 263, 690, 774, 853], "exce": [43, 222, 255, 260, 261, 262, 263, 336, 338, 470, 471, 472, 552, 555, 566, 677, 777, 791, 871], "thousand": [43, 98, 203, 223, 240, 355, 387, 847, 871], "nifti1": [43, 272, 275, 276], "img_fsaverag": 43, "t1_fsaverag": 43, "plot_anat": [43, 174], "draw_cross": 43, "overlai": [43, 153, 158, 170, 178, 202, 267, 268, 271, 274, 275, 276, 550, 738, 782, 796, 801, 871], "add_overlai": [43, 738], "brian": [43, 192, 240, 272, 355, 409, 853], "avant": [43, 240, 272, 355], "epstein": [43, 240, 272, 355], "murrai": [43, 149, 240, 272, 355], "grossman": [43, 240, 272, 355], "jame": [43, 199, 240, 272, 355], "gee": [43, 240, 272, 355], "autom": [43, 80, 110, 118, 132, 142, 154, 160, 161, 162, 163, 164, 196, 197, 198, 201, 202, 207, 240, 252, 262, 263, 265, 272, 349, 355, 360, 382, 476, 629, 754, 778, 806, 838, 850, 853, 859, 871], "elderli": [43, 240, 272, 355], "neurodegen": [43, 240, 272, 355], "medic": [43, 58, 203, 204, 240, 251, 272, 355, 468, 469, 517, 853, 858], "media": [43, 240, 272, 355], "2007": [43, 178, 227, 240, 272, 355, 466, 550, 677, 678, 680, 681, 720, 723], "843": [43, 55, 227], "morph_volume_stc": [43, 55], "megin": [44, 154, 578, 871], "program": [44, 149, 159, 170, 252, 255, 258, 260, 261, 262, 263, 265, 270, 302, 462, 463, 470, 471, 472, 550, 692, 694, 766, 768, 785, 791, 794, 830, 834, 835, 836, 837, 853, 855, 856], "offer": [44, 179, 193, 199, 205, 219, 222, 223, 253, 254, 738, 828, 830, 857, 859, 871], "guid": [44, 153, 265, 828, 834, 849, 852, 854, 871], "ecd": [44, 163, 184, 185, 258, 259, 262, 263, 264, 265, 275, 348, 446, 512, 608, 654, 826, 871], "manual": [44, 80, 117, 124, 132, 135, 140, 147, 149, 154, 155, 158, 159, 160, 170, 180, 186, 188, 196, 197, 198, 200, 203, 207, 240, 253, 256, 265, 266, 323, 349, 369, 424, 438, 550, 560, 561, 569, 578, 579, 631, 761, 836, 847, 850, 853, 856, 871], "advantag": [44, 110, 135, 148, 149, 165, 166, 199, 201, 202, 205, 222, 237, 828, 838], "graphic": [44, 132, 153, 187, 255, 260, 261, 270, 463, 470, 471, 472, 550, 768, 785, 791, 830, 834, 836, 837, 847, 871], "read_dipol": [44, 113, 258, 259, 446, 861, 871], "everyth": [44, 101, 109, 124, 132, 133, 157, 158, 167, 176, 180, 189, 199, 211, 262, 263, 776, 828, 830, 832, 847, 848, 850], "read_vectorview_select": [44, 219, 224, 861, 871], "audvi": [44, 847], "evoked_left": [44, 208], "evoked_right": [44, 208], "09989760657919393": [44, 60], "80m": 44, "picks_left": 44, "evoked_fit_left": 44, "cov_fit_left": 44, "picks_right": 44, "evoked_fit_right": 44, "cov_fit_right": 44, "sss": [44, 160, 163, 196, 206, 209, 210, 255, 260, 261, 262, 263, 265, 336, 337, 338, 339, 342, 343, 346, 365, 424, 470, 471, 472, 491, 550, 561, 569, 578, 608, 768, 772, 780, 791, 850, 853, 871], "normalize_proj": [44, 265, 871], "dip_left": 44, "dip_right": 44, "153": [44, 167, 222, 227, 396], "38720": [44, 180], "58607874e": 44, "29495097e": 44, "04486582e": 44, "78988420e": 44, "81501987e": 44, "79536167e": 44, "22800262e": 44, "50545865e": 44, "24472969e": 44, "41763741e": 44, "51116585e": 44, "49899073e": 44, "11191910e": 44, "30776654e": 44, "58725785e": 44, "82015291e": 44, "83338121e": 44, "85132759e": 44, "76790821e": 44, "26581206e": 44, "61643686e": 44, "900": [44, 78, 174, 179, 227], "396": [44, 78, 174, 179, 206, 227, 240, 292], "354": [44, 78, 167, 174, 179, 206, 227], "195": [44, 79, 82, 88, 164, 167, 174, 179, 192, 206, 210, 222, 226, 227, 240], "9828": [44, 871], "69262885e": 44, "19272571e": 44, "91546253e": 44, "01298483e": 44, "64516797e": 44, "19806525e": 44, "33734643e": 44, "87121666e": 44, "27849772e": 44, "17670368e": 44, "61094719e": 44, "47048282e": 44, "57358697e": 44, "03235995e": 44, "14274862e": 44, "19294391e": 44, "09342253e": 44, "00283865e": 44, "12915739e": 44, "54166863e": 44, "75855684e": 44, "149": [44, 55, 167, 179, 222, 227, 273], "9340": [44, 871], "prevent": [44, 68, 117, 197, 207, 252, 503, 555, 578, 655, 811, 871], "lambda": [44, 97, 109, 143, 193, 208, 218, 237, 255, 257, 260, 261, 262, 263, 269, 309, 403, 410, 470, 471, 472, 525, 549, 564, 656, 690, 692, 694, 755, 762, 769, 777, 790, 793, 798, 800, 853, 856], "fulli": [44, 72, 170, 198, 200, 222, 226, 255, 260, 261, 262, 263, 267, 268, 270, 271, 274, 275, 276, 315, 470, 471, 472, 473, 671, 738, 757, 796, 801, 802, 828, 871], "make_forward_dipol": [44, 174, 861, 871], "stc_left": 44, "stc_right": 44, "sharei": [44, 71, 110, 111, 192, 204, 237], "supylabel": 44, "meter": [44, 78, 90, 91, 149, 154, 155, 158, 168, 174, 180, 204, 217, 252, 255, 257, 258, 260, 261, 262, 263, 265, 266, 269, 278, 307, 323, 332, 360, 403, 410, 424, 470, 471, 472, 494, 509, 549, 550, 554, 559, 560, 561, 564, 569, 578, 583, 584, 612, 639, 685, 690, 692, 694, 755, 762, 766, 770, 772, 774, 777, 778, 781, 788, 790, 792, 793, 794, 798, 800, 853, 871], "kb": [44, 49, 135, 141, 174, 179, 205, 217], "161": [44, 167, 202, 222, 227], "7006": 44, "97034e": 44, "stcs_left": 44, "stcs_right": 44, "90m": 44, "amplitudes_left": 44, "amplitudes_right": 44, "vstack": [44, 112, 134, 139, 182, 219], "ampltud": 44, "n_left": 44, "mean_left": 44, "mean_right": 44, "transition_point": 44, "c0": [44, 149, 203], "c1": [44, 68, 109, 149, 203], "text": [44, 66, 124, 132, 133, 140, 149, 158, 175, 181, 186, 187, 189, 199, 200, 203, 204, 212, 213, 222, 237, 252, 255, 260, 261, 273, 327, 470, 471, 472, 605, 655, 738, 816, 830, 834, 846, 853, 871], "610": [44, 78, 206, 227], "multi_dipole_model": [44, 55], "promot": [45, 58], "focal": [45, 58, 80, 178, 550, 738, 806, 871], "assum": [45, 58, 62, 90, 91, 112, 120, 133, 139, 142, 149, 156, 158, 163, 170, 180, 186, 187, 198, 199, 202, 213, 222, 224, 226, 237, 252, 254, 255, 257, 258, 260, 261, 262, 263, 266, 269, 273, 292, 293, 298, 299, 302, 307, 320, 332, 349, 353, 354, 360, 363, 364, 365, 367, 403, 410, 422, 430, 438, 444, 445, 446, 447, 453, 466, 468, 469, 470, 471, 472, 478, 479, 486, 499, 509, 513, 520, 528, 549, 550, 564, 598, 605, 624, 627, 629, 639, 655, 677, 678, 680, 681, 684, 685, 690, 692, 693, 694, 727, 738, 754, 755, 762, 770, 772, 774, 777, 778, 779, 780, 781, 788, 790, 792, 793, 794, 798, 800, 819, 826, 830, 835, 838, 853, 856, 857, 871], "stationar": [45, 58, 442, 470, 471, 472], "properti": [45, 58, 72, 98, 111, 124, 141, 159, 170, 187, 192, 197, 202, 203, 211, 214, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 267, 268, 270, 271, 274, 275, 276, 297, 360, 402, 470, 471, 472, 536, 550, 566, 567, 579, 640, 655, 672, 690, 691, 692, 693, 694, 726, 738, 740, 757, 766, 768, 772, 778, 779, 781, 783, 791, 796, 801, 802, 806, 857, 871], "bias": [45, 68, 149, 164, 178, 197, 199, 204, 226, 240, 447, 871], "short": [45, 58, 64, 79, 100, 109, 111, 124, 134, 135, 138, 158, 166, 170, 196, 199, 203, 204, 206, 208, 213, 223, 235, 237, 240, 255, 260, 261, 262, 263, 470, 471, 472, 488, 583, 586, 692, 694, 695, 698, 704, 705, 708, 714, 717, 826, 830, 853, 854, 871], "transient": [45, 79, 196, 207, 237, 555], "mathurin": [45, 240, 871], "massia": [45, 240, 871], "yousra": [45, 50, 90, 123, 240, 468, 469, 871], "bekhti": [45, 50, 90, 123, 240, 468, 469, 871], "tf_mixed_norm": [45, 58, 468, 861, 871], "350e": [45, 110, 236], "49948803289596966": 45, "301": [45, 109, 111, 167, 189, 193, 206, 227, 235, 856], "16610": 45, "multidict": 45, "l1_ratio": [45, 58, 469, 871], "wsize": [45, 58, 469, 704, 714, 715], "n_tfmxne_it": [45, 469], "dgap": [45, 58], "89e": 45, "p_obj": [45, 58], "000835": 45, "d_obj": [45, 58], "190": [45, 58, 73, 78, 113, 167, 182, 206, 227, 240, 677, 678, 680, 681], "083203": 45, "n_activ": [45, 58, 207, 343], "247": [45, 82, 167, 206, 222, 227], "27e": 45, "253": [45, 109, 167, 206, 222, 240], "327890": 45, "582652": 45, "53e": 45, "707285": 45, "246": [45, 109, 132, 167, 193, 226], "182101": 45, "18e": 45, "589468": 45, "408712": 45, "82e": 45, "243688": 45, "248": [45, 71, 109, 120, 167, 193, 208, 222, 226], "420556": 45, "67e": [45, 58], "094971": 45, "57e": 45, "991067": 45, "49e": [45, 58], "936498": 45, "442467": 45, "08e": 45, "906871": 45, "829870": 45, "70e": 45, "887205": 45, "017223": 45, "24e": 45, "872107": 45, "148583": 45, "11e": 45, "762424": 45, "94e": 45, "854012": 45, "259629": 45, "867870": 45, "46e": 45, "043596": 45, "270": [45, 78, 109, 167, 189, 206, 227, 871], "587841": 45, "87e": 45, "274": [45, 78, 79, 93, 109, 120, 164, 167, 189, 227], "722230": 45, "272": [45, 109, 116, 167, 169, 206, 227, 240, 647, 652], "856399": 45, "29e": 45, "678013": 45, "849283": 45, "335": [45, 103, 106, 140, 146, 167, 193, 222, 227, 240, 853], "966495": 45, "73e": 45, "239": [45, 66, 78, 79, 156, 167, 189, 200, 227], "215341": 45, "236": [45, 109, 167, 193, 226, 227], "481796": 45, "17e": 45, "095509": 45, "238": [45, 167, 170, 193, 222, 223, 227], "178504": 45, "77e": 45, "068507": 45, "591286": 45, "298": [45, 73, 167, 206, 227], "546285": 45, "06e": 45, "133013": 45, "826666": 45, "295": [45, 109, 125, 127, 167, 222, 227], "194637": 45, "debias": [45, 58], "d0": [45, 58], "235933e": 45, "000000e": [45, 58], "irtf": 45, "2015": [45, 69, 96, 98, 110, 118, 160, 199, 202, 223, 237, 240, 262, 263, 349, 382, 387, 559, 676, 720, 723, 778, 847, 850, 859], "intern": [45, 68, 69, 80, 124, 130, 134, 158, 166, 168, 181, 188, 197, 204, 207, 224, 240, 255, 260, 261, 262, 263, 307, 349, 354, 360, 383, 403, 424, 470, 471, 472, 486, 491, 547, 550, 558, 559, 560, 561, 569, 578, 608, 676, 677, 690, 691, 692, 693, 694, 738, 784, 830, 871], "workshop": [45, 240, 403], "roland": [45, 240, 469], "badeau": [45, 240, 469], "trento": [45, 240, 469], "7552337": [45, 240, 469], "multidict_reweighted_tfmxn": [45, 55], "plane": [46, 132, 154, 168, 203, 224, 227, 236, 423, 643, 756, 826, 853], "olaf": [46, 47, 48, 49, 53, 54, 98, 240, 532, 647, 652, 871], "hauk": [46, 47, 48, 49, 53, 54, 98, 240, 532, 647, 652, 871], "mrc": [46, 47, 48, 49, 53, 54, 853], "cbu": [46, 47, 48, 49, 53, 54, 853], "cam": [46, 47, 48, 49, 53, 54, 853], "ac": [46, 47, 48, 49, 53, 54, 132, 188, 196, 200, 240, 349, 365, 826, 853], "uk": [46, 47, 48, 49, 53, 54, 240, 349, 853], "rougier": 46, "borrow": [46, 226, 232], "hi": [46, 252], "make_inverse_resolution_matrix": [46, 47, 49, 53, 54, 861, 871], "get_point_spread": [46, 47, 49, 861, 871], "circular_layout": [46, 861], "plot_connectivity_circl": [46, 760], "rm_mne": [46, 53], "n_label": [46, 218, 267, 268, 271, 274, 275, 276, 437, 505, 657], "label_color": [46, 456], "lh_label": [46, 738], "endswith": [46, 168], "label_ypo": 46, "ypo": 46, "yp": 46, "rh_label": [46, 738], "summaris": 46, "five": [46, 140, 148, 169, 181, 206, 214, 240, 336, 470, 471, 472, 550, 738, 783, 853], "princip": [46, 202, 203, 240, 266, 349, 550, 667, 853, 871], "probabl": [46, 68, 163, 186, 196, 197, 198, 199, 202, 203, 222, 224, 227, 237, 407, 413, 432, 470, 471, 472, 483, 738, 795, 828, 830, 835, 836, 837, 853], "n_comp": [46, 526, 527], "stcs_psf_mne": 46, "pca_vars_mn": 46, "return_pca_var": [46, 526, 527], "n_vert": 46, "printopt": 46, "caudalanteriorcingul": 46, "caudalmiddlefront": [46, 87, 92, 133], "cuneu": [46, 738], "entorhin": 46, "frontalpol": 46, "fusiform": 46, "inferiorpariet": [46, 218], "inferiortempor": 46, "insula": 46, "isthmuscingul": 46, "lateraloccipit": 46, "lateralorbitofront": 46, "lingual": 46, "medialorbitofront": 46, "middletempor": 46, "paracentr": 46, "parahippocamp": [46, 66], "parsoperculari": 46, "parsorbitali": 46, "parstriangulari": 46, "pericalcarin": 46, "postcentr": [46, 66], "posteriorcingul": 46, "precentr": [46, 133], "precuneu": 46, "rostralanteriorcingul": 46, "rostralmiddlefront": [46, 218], "superiorfront": [46, 133], "superiorpariet": 46, "superiortempor": 46, "supramargin": 46, "temporalpol": 46, "transversetempor": [46, 218], "overal": [46, 124, 204, 224, 230, 231, 469, 852, 871], "bigger": [46, 78, 124, 231, 470, 471, 472], "leaker": 46, "psfs_mat": 46, "pearson": [46, 199, 202, 240, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 550, 690, 693], "arbitrari": [46, 112, 158, 163, 164, 165, 169, 199, 217, 220, 224, 227, 255, 257, 258, 259, 260, 261, 262, 263, 267, 268, 269, 271, 274, 275, 276, 470, 471, 472, 488, 550, 567, 571, 677, 678, 680, 681, 690, 692, 693, 694, 770, 777, 784, 790, 798, 852, 853, 871], "absolut": [46, 59, 79, 83, 120, 126, 133, 149, 177, 187, 222, 255, 257, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 353, 403, 410, 470, 471, 472, 474, 526, 527, 532, 550, 566, 590, 639, 651, 683, 690, 693, 755, 756, 762, 777, 781, 782, 798, 800, 802, 830, 836, 871], "leakage_mn": 46, "node_ord": [46, 743], "mirror": [46, 68, 168, 255, 260, 261, 262, 263, 267, 271, 275, 276, 441, 442, 443, 470, 471, 472, 753, 757, 796, 802, 859, 871], "node_angl": [46, 743], "start_po": [46, 743], "group_boundari": [46, 743], "subplot_kw": 46, "n_line": 46, "node_color": 46, "neighbour": [46, 255, 257, 260, 261, 262, 263, 269, 470, 471, 472, 549, 564, 690, 692, 694, 770, 777, 790, 793, 798, 800, 871], "deeper": [46, 53, 54, 178, 853], "versu": [46, 139, 149, 164, 212, 219, 294, 838], "fname_fig": 46, "plot_label_leakag": 46, "savefig": [46, 112], "inde": [46, 68, 139, 166, 173, 203, 204, 237, 828], "max_val": 46, "brain_lh": 46, "caudal": [46, 87, 92, 738], "pos_lim": [46, 53, 54, 178, 218, 230, 267, 268, 271, 274, 275, 276, 757, 796, 801, 802], "brain_rh": 46, "514": [46, 55, 227], "psf_ctf_label_leakag": [46, 55], "get_cross_talk": [47, 48, 861, 871], "fname_evo": [47, 48, 49, 53, 54, 63], "regularis": [47, 53, 54, 529], "rm_lor": 47, "stc_psf": 47, "stc_ctf": 47, "31738": [47, 53, 54], "68644e": [47, 53, 54], "vertno_lh": 47, "verttru": [47, 48], "maxima": [47, 143, 262, 263, 587, 775, 777, 871], "vert_max_psf": 47, "vert_max_ctf": 47, "brain_psf": 47, "ventral": [47, 738], "add_foci": [47, 48, 49, 158, 173, 175, 219, 738, 871], "coords_as_vert": [47, 48, 49, 173, 175, 219, 738], "22842778": 47, "2956258": 47, "85246681": 47, "brain_ctf": 47, "10932369": 47, "16149934": 47, "93351158": 47, "psf_ctf_vertic": [47, 55], "make_lcmv_resolution_matrix": [48, 861, 871], "vi": [48, 148, 227, 260, 762], "cov_pr": 48, "post": [48, 117, 132, 178, 199, 204, 207, 826, 830, 836, 837, 849, 850, 852], "cov_post": 48, "4433": 48, "filters_pr": 48, "weight_norm": [48, 178, 219, 292, 293, 871], "filters_post": 48, "rm_pre": 48, "stc_pre": 48, "rm_post": 48, "stc_post": 48, "brain_pr": 48, "ndata": 48, "brain_post": 48, "899": [48, 55, 237], "psf_ctf_vertices_lcmv": [48, 55], "coars": 49, "don": [49, 92, 112, 114, 117, 132, 139, 142, 143, 144, 155, 156, 157, 160, 166, 169, 197, 200, 202, 203, 204, 211, 224, 225, 226, 227, 232, 237, 252, 255, 260, 261, 366, 482, 483, 539, 579, 595, 602, 604, 639, 677, 680, 830, 831, 836, 838, 850, 852, 854, 871], "src_vol": 49, "forward_vol": 49, "3375": 49, "1045": [49, 193], "895": [49, 193, 227], "015000": [49, 205], "860": [49, 78, 162, 193, 206], "304": [49, 73, 81, 82, 106, 109, 121, 148, 167, 169, 182, 223, 227, 871], "158": [49, 167, 206, 222, 226, 227], "488": [49, 206, 222], "403": [49, 78, 106, 206, 222, 227], "inverse_operator_vol": 49, "rm_lor_vol": 49, "sources_vol": 49, "stc_psf_vol": 49, "383": [49, 78, 206], "140193": 49, "7904e": 49, "66519": 49, "31885e": 49, "1209": 49, "verttrue_vol": 49, "max_vert_idx": 49, "unravel_index": [49, 179, 224], "vert_max_ctf_vol": 49, "brain_psf_vol": 49, "plot_3d": [49, 133, 178, 275, 276, 871], "volume_opt": [49, 267, 268, 271, 274, 275, 276, 738, 796, 801], "32501698": 49, "38884743": 49, "87974682": 49, "psf_volum": [49, 55], "recurs": [50, 158, 199, 240, 252, 267, 271, 275, 295, 638, 796], "rap_mus": [50, 55, 446, 861, 871], "n100": [50, 164, 189, 199, 204], "1834": 50, "ori": [50, 174, 178, 181, 183, 219, 258, 292, 293, 423, 446], "2470324143277338": 50, "7764326014559829": 50, "5797649538112025": 50, "5304": 50, "5154591814700811": 50, "5345116895021849": 50, "6697753996853825": 50, "332": [50, 109, 167, 189, 206, 227, 240, 295], "1999": [50, 109, 237, 240, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 295, 349, 470, 471, 472, 550, 576, 690, 693, 853], "740118": [50, 240, 295], "inv_fnam": 51, "fmri": [51, 193, 240, 468, 469, 517, 826, 847, 853, 856], "fmri_prior": 51, "nsourc": [51, 264, 856], "rr": [51, 158, 159, 173, 176, 273, 337, 339, 340, 341, 621, 624, 639, 659, 819, 856], "use_tri": [51, 158, 273, 856], "8192": [51, 180, 183, 402], "read_invers": [51, 55], "nb": [52, 470, 471, 472], "553": [52, 55, 192, 240, 409], "read_stc": [52, 55], "localis": [53, 54, 183, 222, 223, 240, 532, 677, 678, 680, 681], "mimic": [53, 54, 404, 427, 517], "resolution_metr": [53, 54, 55, 861, 871], "ple": [53, 54, 532], "sd": [53, 54, 132, 237, 652, 692, 694], "ple_mne_psf": 53, "peak_err": [53, 54, 532], "sd_mne_psf": 53, "sd_ext": [53, 54, 532], "rm_dspm": 53, "ple_dspm_psf": 53, "sd_dspm_psf": 53, "brain_ple_mn": 53, "brain_ple_dspm": 53, "subtract": [53, 54, 64, 68, 71, 104, 110, 117, 131, 139, 149, 174, 199, 205, 207, 222, 224, 252, 255, 256, 260, 261, 262, 263, 266, 267, 268, 270, 271, 274, 275, 276, 283, 292, 293, 348, 349, 353, 354, 363, 364, 365, 403, 410, 411, 446, 447, 466, 468, 469, 470, 471, 472, 473, 528, 533, 534, 550, 551, 566, 578, 608, 609, 632, 635, 677, 680, 690, 693, 778, 798, 853, 856, 871], "diff_pl": [53, 54], "brain_ple_diff": [53, 54], "superfici": [53, 178, 853], "brain_sd_mn": 53, "brain_sd_dspm": 53, "diff_sd": [53, 54], "brain_sd_diff": [53, 54], "wors": [53, 169, 578, 846], "distinguish": [53, 70, 149, 170, 193, 196, 197, 198, 201, 202, 204, 211, 356, 826, 871], "stenroo": [53, 54, 240, 532, 647, 652], "matthia": [53, 54, 240, 532, 871], "treder": [53, 54, 240, 532], "kit": [53, 54, 168, 169, 182, 222, 240, 265, 333, 341, 424, 494, 513, 532, 561, 569, 578, 604, 853, 861, 862, 871], "biorxiv": [53, 54, 219, 240, 292, 293, 532], "2019": [53, 54, 64, 73, 139, 205, 208, 222, 227, 240, 532, 565, 585, 677, 678, 680, 681, 720, 723, 829, 836], "1101": [53, 54, 111, 219, 240, 292, 293, 532], "672956": [53, 54, 240, 532], "resolution_matrix": 54, "spatial_resolut": 54, "fname_fwd_emeg": 54, "forward_emeg": 54, "forward_meg": 54, "pick_types_forward": [54, 66, 89, 280, 281, 861], "inv_emeg": 54, "inv_meg": 54, "63485": 54, "05542e": 54, "rm_emeg": 54, "ple_psf_emeg": 54, "sd_psf_emeg": 54, "rm_meg": 54, "ple_psf_meg": 54, "sd_psf_meg": 54, "brain_ple_emeg": 54, "emeg": [54, 859], "brain_ple_meg": 54, "bring": [54, 68, 154, 179, 202, 213, 265, 275, 276, 424, 561, 569, 578, 802, 853, 856], "brain_sd_emeg": 54, "brain_sd_meg": 54, "437": [54, 55, 81, 181, 227], "resolution_metrics_eegmeg": [54, 55], "auto_examples_invers": 55, "vector_mne_solut": [55, 59], "255": [55, 109, 111, 124, 158, 167, 206, 222, 226, 227, 237, 267, 268, 271, 274, 275, 276, 738, 757, 796, 801, 802], "609": [55, 149, 240], "time_frequency_mixed_norm_invers": [55, 58], "047": [55, 58, 138, 140, 147, 167, 219], "799": [55, 142, 227], "source_space_snr": [55, 57], "245": [55, 57, 73, 109, 167, 183, 193, 195, 198, 229, 240, 853], "435": [55, 227], "snr_estim": [55, 56], "plot_snr_estim": [56, 861, 871], "padma": [57, 240, 565, 871], "sundaram": [57, 240, 565, 871], "tottochan": 57, "kaisu": [57, 871], "lankinen": [57, 871], "klankinen": 57, "inv_op": [57, 218], "snr_stc": [57, 271], "estimate_snr": [57, 271, 861, 871], "maxidx": 57, "med": [57, 91, 134, 164, 193, 218], "viridi": [57, 98, 124, 134, 141, 222, 691, 780], "70263": [57, 176], "18949e": [57, 176], "evoked_eeg": [57, 147, 204], "inv_op_eeg": 57, "stc_eeg": 57, "snr_stc_eeg": 57, "7499": [57, 87], "118742": [57, 87], "155292": [57, 87], "81981": 57, "0644e": 57, "goldenholz": [57, 240, 271], "seppo": [57, 240, 271, 528, 647, 652], "ahlfor": [57, 240, 271, 424, 528, 647, 652], "dahlia": [57, 240, 271], "sharon": [57, 240, 271], "mamiko": [57, 240, 271], "ishitobi": [57, 240, 271], "lucia": [57, 123, 240, 271], "vaina": [57, 123, 240, 271], "magnetoencephalographi": [57, 155, 176, 240, 271, 650, 720, 723, 853], "1086": [57, 206, 240, 271], "1002": [57, 81, 176, 193, 235, 240, 255, 260, 261, 262, 263, 271, 470, 471, 472, 586, 643, 679, 692, 694, 702, 707, 709, 846], "hbm": [57, 176, 240, 271, 679, 846], "20571": [57, 240, 271], "built": [58, 138, 148, 149, 155, 157, 163, 164, 165, 173, 179, 200, 202, 208, 211, 215, 216, 222, 255, 258, 260, 261, 262, 263, 265, 299, 323, 324, 361, 432, 454, 455, 463, 470, 471, 472, 509, 513, 575, 625, 658, 685, 694, 738, 754, 830, 836, 842, 850, 851, 871], "fourier": [58, 100, 199, 235, 237, 240, 255, 260, 261, 262, 263, 470, 471, 472, 692, 694, 695, 698, 702, 704, 705, 707, 708, 709, 714, 717], "stft": [58, 469, 704, 715, 826, 861, 871], "henc": [58, 111, 140, 148, 154, 160, 173, 188, 201, 204, 211, 222, 235, 237, 255, 258, 259, 260, 261, 262, 263, 267, 268, 270, 271, 274, 275, 276, 470, 471, 472, 690, 693, 751, 826, 837, 850], "trap": 58, "minima": [58, 587], "pick_channels_evok": 58, "slightli": [58, 68, 124, 158, 178, 182, 199, 204, 207, 208, 226, 255, 260, 261, 262, 263, 266, 354, 470, 471, 472, 520, 528, 667, 738, 775, 846, 847, 853, 871], "eventu": [58, 134, 313, 324, 568, 830, 846], "020865": [58, 91, 176, 219], "96729": 58, "38524e": 58, "985": [58, 62, 65, 227], "descent": [58, 240, 468, 871], "845726": 58, "353441": 58, "4410": 58, "859492": 58, "292946": 58, "51e": 58, "670058": 58, "519426": 58, "61e": 58, "669663": 58, "668049": 58, "546629e": 58, "049948803289596964": [58, 92, 177, 179], "2996928197375818": [58, 138, 147, 149, 224], "10e": [58, 66, 87, 92], "15e": 58, "20e": [58, 255, 260, 261, 270, 470, 471, 472, 768, 791], "medial": [58, 232, 677, 678, 738], "yellow": [58, 204, 262, 263, 753, 772, 789], "scalar_thresh": [58, 738], "stationari": [58, 77, 202, 204, 240, 342, 469, 846], "410": [58, 78, 206, 222, 240, 469], "422": [58, 222, 227, 240, 469], "051": [58, 138, 140, 147, 167, 197, 219, 240, 469], "sparsiti": [58, 240, 469, 650], "g\u00e1bor": [58, 240, 469], "sz\u00e9keli": [58, 240, 469], "horst": [58, 240, 469], "hahn": [58, 240, 469], "editor": [58, 189, 240, 327, 466, 469, 550, 720, 723, 830, 834, 848], "6801": [58, 240, 469], "page": [58, 132, 170, 199, 214, 240, 255, 260, 261, 324, 381, 469, 470, 471, 472, 550, 720, 723, 738, 768, 791, 828, 830, 831, 834, 836, 837, 842, 845, 846, 849, 850, 851, 852, 853, 854, 871], "611": [58, 227, 240, 349, 469], "springer": [58, 219, 240, 292, 293, 381, 469, 550], "berlin": [58, 219, 240, 292, 293, 469], "heidelberg": [58, 219, 240, 292, 293, 469], "1007": [58, 149, 193, 203, 204, 205, 219, 240, 292, 293, 403, 469, 517, 550, 565, 655, 853], "978": [58, 110, 149, 199, 202, 219, 240, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 292, 293, 349, 469, 470, 471, 472, 550, 672, 690, 693, 709], "22092": [58, 240, 469], "0_49": [58, 240, 469], "magnitud": [59, 62, 68, 109, 133, 140, 143, 147, 148, 164, 166, 176, 178, 196, 197, 199, 212, 219, 230, 231, 268, 274, 276, 349, 403, 424, 447, 525, 555, 561, 569, 578, 587, 682, 779, 801, 828, 850, 871], "accomplish": [59, 132, 133, 147, 159, 169, 828, 836, 846, 847, 853], "plot_vector_source_estim": [59, 803, 861, 871], "hood": [59, 124, 141, 187, 196, 199, 203, 871], "plot_source_estim": [59, 738, 803, 861, 871], "instruct": [59, 113, 159, 187, 208, 462, 828, 829, 830, 831, 832, 834, 835, 836, 837, 841, 844, 850, 856, 871], "impos": [59, 192, 198, 871], "underli": [59, 158, 164, 199, 203, 222, 223, 235, 240, 254, 255, 258, 259, 260, 261, 262, 263, 266, 267, 268, 271, 274, 275, 276, 403, 470, 471, 472, 477, 571, 690, 693, 728, 871], "getter": [59, 175, 871], "peak_tim": [59, 173], "get_peak": [59, 124, 147, 149, 173, 175, 176, 178, 262, 263, 267, 268, 271, 274, 275, 276, 871], "movi": [59, 133, 134, 175, 179, 738, 871], "save_movi": [59, 133, 134, 175, 179, 738, 871], "time_dil": [59, 133, 134, 175, 179, 738], "framer": [59, 133, 134, 175, 179, 738], "time_view": [59, 106, 124, 133, 134, 175, 179, 189, 267, 268, 271, 274, 275, 276, 738, 796, 801, 871], "95048065": 59, "56941314": 59, "72451438": 59, "stc_max": 59, "cosin": [59, 87, 199, 217, 645, 853], "source_nn": [59, 264, 292, 293, 856], "brain_max": 59, "975978731472672": 59, "90575168": 59, "52414196": 59, "71336747": 59, "brain_norm": 59, "83607509": 59, "44726242": 59, "57923594": 59, "lot": [59, 68, 124, 150, 156, 158, 164, 167, 197, 199, 201, 202, 203, 208, 211, 213, 354, 360, 422, 453, 598, 627, 629, 819, 830], "fname_inv_fix": 59, "inv_fix": 59, "stc_fix": 59, "brain_fix": [59, 176], "00351751": 59, "62842071": 59, "43519503": 59, "pars": [60, 138, 149, 163, 169, 171, 172, 188, 198, 212, 253, 254, 265, 279, 432, 444, 451, 470, 471, 479, 486, 487, 492, 540, 605, 826, 871], "elekta": [60, 81, 154, 163, 184, 185, 207, 253, 255, 257, 258, 260, 261, 262, 263, 265, 270, 297, 349, 423, 444, 446, 470, 471, 472, 514, 754, 766, 768, 778, 791, 806, 842, 847, 853, 856, 871], "triux": [60, 181, 253, 255, 260, 261, 262, 263, 383, 470, 471, 472, 547, 690, 692, 693, 694, 847, 853], "dacq": [60, 253, 847], "acquisit": [60, 154, 158, 166, 186, 187, 188, 189, 204, 211, 240, 253, 254, 255, 260, 261, 262, 263, 265, 279, 444, 470, 471, 472, 473, 569, 578, 592, 655, 826, 842, 846, 853, 856, 871], "accordingli": [60, 132, 148, 156, 176, 187, 211, 255, 260, 261, 262, 263, 411, 462, 470, 471, 472, 479, 486, 491, 579, 853, 871], "multimod": [60, 135, 240, 857, 861, 871], "multimodal_raw": 60, "grad_ssp_upright": 60, "mag_ssp_upright": 60, "v4": [60, 206, 207], "v5": [60, 206, 207], "183600": 60, "576599": 60, "960": [60, 78, 98, 141, 223, 227, 847], "categori": [60, 109, 143, 253, 330, 609, 735, 853, 854, 871], "acqpars": [60, 253, 471, 871], "acqparserfif": [60, 265, 471, 861, 871], "get_condit": [60, 253], "plot_topo": [60, 148, 150, 164, 214, 235, 236, 255, 260, 261, 262, 263, 316, 470, 471, 472, 690, 692, 694, 871], "background_color": [60, 129, 262, 263, 776, 871], "cat": [60, 109], "flat": [60, 80, 108, 138, 139, 148, 179, 197, 198, 199, 203, 204, 205, 207, 253, 255, 260, 261, 267, 271, 275, 352, 354, 550, 552, 562, 563, 566, 567, 569, 676, 796, 826, 846, 871], "fiff": [60, 112, 154, 158, 255, 260, 261, 264, 270, 273, 470, 471, 472, 475, 488, 501, 502, 550, 562, 563, 725, 746, 814, 819, 847, 871], "fname_out": [60, 746], "write_evok": [60, 147, 262, 263, 434, 608, 850, 861, 871], "118": [60, 167, 227, 240, 550, 871], "0812": [60, 167], "0123": [60, 143, 164, 167, 211], "0942": [60, 167], "2232": [60, 167, 330], "newcat": 60, "longer": [60, 111, 143, 160, 165, 166, 170, 189, 197, 198, 199, 200, 202, 222, 237, 255, 257, 260, 261, 262, 263, 265, 269, 336, 403, 410, 427, 438, 442, 444, 470, 471, 472, 549, 550, 552, 564, 578, 690, 692, 693, 694, 738, 748, 755, 768, 770, 771, 777, 781, 790, 793, 798, 800, 830, 836, 850, 853, 871], "ref": [60, 120, 149, 252, 738, 754, 830, 871], "reqev": [60, 253], "requir": [60, 106, 132, 133, 134, 138, 140, 142, 148, 154, 156, 159, 160, 164, 166, 168, 170, 180, 187, 188, 189, 193, 196, 199, 200, 202, 205, 207, 211, 217, 219, 222, 223, 226, 230, 252, 253, 255, 257, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 278, 292, 293, 298, 303, 307, 349, 350, 351, 352, 354, 355, 358, 379, 402, 403, 405, 406, 410, 412, 413, 416, 419, 420, 441, 442, 444, 446, 459, 461, 464, 465, 470, 471, 472, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 505, 509, 510, 512, 513, 520, 523, 524, 533, 534, 549, 550, 552, 555, 562, 563, 564, 572, 579, 587, 596, 633, 638, 641, 642, 643, 655, 677, 678, 679, 680, 681, 686, 690, 692, 694, 695, 696, 697, 698, 699, 700, 707, 708, 709, 710, 718, 719, 720, 721, 722, 732, 738, 755, 761, 768, 770, 773, 777, 781, 785, 790, 791, 792, 793, 796, 798, 800, 801, 807, 826, 828, 831, 834, 835, 846, 847, 852, 853, 859, 871], "reqwithin": [60, 253], "reqwhen": [60, 253], "freeli": 60, "824": [60, 65, 227], "elekta_epoch": [60, 65], "scratch": [62, 138, 147, 163, 186, 188, 189, 211, 220, 221, 237, 255, 261, 262, 263, 265, 367, 470, 472], "exampleio": 62, "fake": [62, 68, 157, 180], "won": [62, 149, 203, 204, 213, 226, 240, 255, 260, 261, 262, 263, 355, 470, 471, 472, 550, 608, 690, 692, 693, 694, 728], "consult": [62, 199, 203, 578, 830, 835, 836, 846, 850, 852, 853], "reader": [62, 164, 173, 186, 203, 211, 325, 470, 477, 479, 480, 481, 483, 486, 489, 491, 492, 493, 494, 496, 497, 498, 499, 500, 602, 604, 606, 853, 857, 871], "fakedata": 62, "nof": 62, "lazi": 62, "analogsign": 62, "multichannel": [62, 68, 109, 149, 193, 207, 240, 424, 558, 561, 578], "sampling_r": 62, "misc": [62, 64, 77, 78, 79, 112, 132, 133, 135, 147, 167, 176, 180, 181, 183, 186, 187, 189, 211, 217, 255, 260, 261, 262, 263, 270, 306, 322, 341, 367, 436, 470, 471, 472, 479, 481, 483, 486, 488, 492, 496, 547, 690, 692, 693, 694, 762, 768, 772, 774, 776, 791, 847, 861, 871], "show_scrollbar": [62, 73, 149, 202, 208, 217, 255, 260, 261, 470, 471, 472, 550, 768, 785, 791, 871], "100000": [62, 440], "99999": [62, 432], "read_neo_format": [62, 65], "ev_info": 63, "15972": 63, "27235589e": 63, "79818505e": 63, "12852747e": 63, "85348042e": 63, "02846360e": 63, "26727393e": 63, "33468523e": 63, "80261790e": 63, "33583009e": 63, "93161055e": 63, "35199238e": 63, "79073915e": 63, "09498615e": 63, "16924072e": 63, "93873875e": 63, "40677185e": 63, "27444183e": 63, "08634620e": 63, "59818134e": 63, "51070563e": 63, "53708918e": 63, "857": [63, 65, 227], "read_noise_covariance_matrix": [63, 65], "analyz": [64, 69, 138, 163, 166, 178, 193, 196, 197, 199, 200, 207, 212, 213, 222, 240, 255, 260, 261, 429, 553, 559, 673, 827, 830, 846, 853, 871], "pabr": 64, "maddox": [64, 240, 871], "lab": [64, 66, 830, 849, 859], "clemen": [64, 109, 858, 871], "brunner": [64, 109, 858, 871], "pyxdf": [64, 187], "p001_se": 64, "s004_task": 64, "default_run": 64, "001_eeg_a2": 64, "stream": [64, 187, 197, 200, 871], "header": [64, 110, 120, 154, 158, 180, 187, 189, 262, 263, 292, 293, 334, 349, 353, 354, 363, 364, 365, 403, 410, 446, 447, 466, 468, 469, 470, 478, 481, 483, 496, 498, 499, 528, 778, 871], "load_xdf": 64, "time_seri": 64, "assert": [64, 106, 138, 142, 147, 154, 169, 189, 212, 219, 222, 224, 852, 871], "four": [64, 68, 139, 142, 149, 164, 183, 199, 222, 232, 240, 255, 257, 260, 261, 262, 263, 269, 470, 471, 472, 549, 564, 690, 692, 694, 738, 755, 770, 777, 790, 793, 798, 800, 846, 853, 854], "plu": [64, 164, 166, 170, 175, 180, 199, 202, 204, 206, 226, 265, 708, 837, 848, 853, 856, 871], "rerefer": 64, "bipolar": [64, 189, 201, 202, 222, 255, 260, 261, 262, 263, 470, 471, 472, 632, 635, 871], "subselect": [64, 113, 141, 147, 148, 149, 164, 211, 224, 227, 235, 237, 255, 258, 259, 260, 261, 262, 263, 265, 267, 268, 271, 274, 275, 276, 364, 470, 471, 472, 690, 691, 692, 693, 768, 850, 871], "uv": [64, 255, 260, 261, 262, 263, 470, 471, 472, 871], "preamp": 64, "nominal_sr": 64, "2320128": 64, "2320127": 64, "232": [64, 109, 142, 167, 222, 227], "013": [64, 125, 138, 139, 147, 149, 167, 219], "melissa": [64, 240], "polonenko": [64, 240], "ross": [64, 240, 871], "brainstem": [64, 240], "hear": [64, 240, 582], "2331216519871395": [64, 240], "1177": [64, 98, 223, 240, 387, 847], "935": [64, 65], "read_xdf": [64, 65], "auto_examples_io": 65, "141": [65, 156, 167, 193, 206, 273], "facilit": [66, 109, 133, 134, 165, 188, 193, 223, 255, 260, 261, 262, 263, 470, 471, 472, 690, 692, 693, 694, 846, 853, 856, 871], "subcort": [66, 240, 565, 871], "simul": [66, 68, 77, 88, 102, 103, 138, 147, 159, 174, 186, 188, 198, 199, 211, 217, 227, 230, 231, 232, 237, 240, 255, 257, 260, 261, 262, 263, 264, 265, 266, 271, 273, 283, 349, 367, 444, 470, 471, 472, 476, 503, 506, 512, 516, 517, 528, 547, 548, 582, 599, 605, 610, 612, 613, 616, 690, 692, 693, 694, 703, 718, 721, 722, 723, 738, 742, 797, 847, 861, 871], "samuelsson": [66, 240, 565, 871], "johnsam": 66, "mit": [66, 69, 149, 240, 466, 559, 841, 847, 853], "simulate_sparse_stc": [66, 89, 90, 654, 655, 657, 861, 871], "simulate_evok": [66, 89, 174, 218, 512, 655, 656, 657, 861, 871], "all_label": 66, "select_label": 66, "hiplab": 66, "postcenlab": 66, "cortical_waveform": 66, "waveform": [66, 96, 199, 201, 204, 208, 240, 268, 274, 276, 640, 642, 656, 657, 676, 797, 837], "pi": [66, 87, 90, 91, 92, 111, 199, 204, 217, 218, 219, 525, 587, 656, 715, 853], "subcortical_waveform": 66, "data_fun": [66, 89, 90, 91, 656], "isin": [66, 109, 142], "evoked_subcort": [66, 565], "cortical_signal_suppress": [66, 861, 871], "n_proj": [66, 565], "fft": [66, 105, 130, 199, 235, 237, 255, 260, 261, 262, 263, 411, 415, 416, 470, 471, 472, 523, 533, 534, 691, 695, 696, 697, 698, 699, 700, 708, 710, 716, 718, 719, 720, 721, 722, 723, 792, 871], "rfft": 66, "psd_proc": 66, "transax": 66, "footbibliographi": [66, 830], "654": [66, 82, 227], "put": [67, 113, 120, 124, 139, 142, 153, 154, 159, 168, 170, 180, 181, 183, 192, 199, 202, 211, 217, 218, 219, 222, 262, 263, 266, 379, 738, 772, 830, 835, 871], "earli": [67, 68, 139, 170, 197, 199, 237, 240, 255, 260, 261, 262, 263, 470, 471, 472, 510, 601], "button": [67, 69, 91, 118, 125, 132, 138, 140, 142, 150, 154, 159, 164, 166, 189, 196, 198, 203, 212, 213, 214, 255, 257, 260, 261, 262, 263, 269, 270, 403, 410, 429, 470, 471, 472, 549, 550, 690, 692, 694, 768, 769, 770, 772, 774, 777, 781, 790, 791, 792, 793, 798, 830, 847, 871], "press": [67, 69, 110, 118, 125, 132, 138, 140, 142, 149, 150, 154, 159, 164, 166, 170, 189, 196, 198, 212, 213, 214, 240, 255, 260, 261, 349, 429, 442, 466, 470, 471, 472, 550, 559, 709, 768, 783, 785, 791, 847, 871], "590": [67, 78, 227], "millisecond": [67, 79, 109, 138, 143, 147, 166, 211, 230, 231, 232, 255, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 429, 470, 471, 472, 690, 693, 738, 796, 801, 871], "late": [67, 160, 850], "quickli": [67, 163, 164, 192, 202, 203, 213, 854, 871], "slowli": 67, "define_target_ev": [67, 82, 125, 861], "quick": [67, 71, 90, 132, 181, 196, 236, 515, 830], "reference_id": [67, 125, 429], "smilei": [67, 69, 91, 150, 164, 166, 212, 847], "target_id": [67, 125, 429], "new_id": [67, 125, 429, 515], "hit": [67, 237, 255, 257, 260, 261, 262, 263, 269, 403, 410, 470, 471, 472, 549, 550, 690, 692, 694, 769, 770, 774, 777, 781, 790, 793, 798, 871], "fill_na": [67, 429], "fill": [67, 218, 266, 271, 273, 274, 355, 429, 459, 470, 471, 472, 572, 657, 686, 738, 871], "events_": 67, "besid": [67, 198, 203], "tmin_": 67, "tmax_": 67, "8522": [67, 871], "10649": 67, "12859": 67, "14830": 67, "16850": 67, "18826": 67, "21224": 67, "23200": 67, "25272": 67, "27243": 67, "29525": 67, "31530": 67, "33481": 67, "35611": 67, "38007": 67, "566": [67, 206, 227], "08643728": 67, "532": [67, 193, 205, 227], "78723509": 67, "352": [67, 78, 167, 169], "97154325": 67, "359": [67, 78, 167, 193, 222], "63138369": 67, "20930939": 67, "40611816": 67, "512": [67, 70, 270, 273, 402], "80771377": 67, "ft": [67, 140, 143, 164, 198, 204, 236, 252, 255, 257, 260, 261, 262, 263, 267, 268, 269, 271, 274, 275, 276, 470, 471, 472, 506, 549, 550, 564, 569, 690, 692, 694, 755, 769, 770, 772, 774, 777, 781, 790, 793, 798, 799, 800, 826, 853], "411": [67, 82, 132, 133, 222, 227, 240, 349], "conduct": [68, 69, 98, 149, 156, 189, 222, 223, 224, 226, 240, 252, 507, 514, 647, 652, 826, 830, 846, 849, 853, 856, 871], "undesir": [68, 201, 550, 871], "otherwis": [68, 80, 117, 142, 149, 160, 170, 186, 198, 199, 227, 230, 232, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 271, 273, 274, 275, 276, 284, 292, 293, 297, 307, 319, 332, 349, 353, 354, 355, 363, 364, 365, 379, 397, 403, 410, 438, 441, 442, 446, 447, 461, 466, 468, 469, 470, 471, 472, 481, 515, 516, 517, 523, 528, 549, 550, 564, 596, 605, 627, 628, 630, 636, 639, 656, 675, 676, 690, 692, 693, 694, 715, 726, 728, 738, 754, 755, 762, 766, 768, 769, 770, 772, 773, 774, 775, 776, 777, 778, 781, 788, 790, 791, 792, 793, 794, 796, 797, 798, 800, 801, 816, 828, 830, 853, 871], "introduct": [68, 87, 92, 149, 227, 235, 237, 240, 270, 855], "smear": [68, 77, 78, 140, 199, 237, 577, 871], "unfortun": [68, 160, 838, 850], "brigd": 68, "far": [68, 80, 124, 138, 139, 142, 155, 169, 176, 198, 199, 200, 203, 205, 211, 212, 222, 360, 483, 553, 677, 678, 680, 681, 722, 762, 853, 856], "address": [68, 93, 94, 164, 199, 222, 223, 230, 231, 232, 240, 265, 677, 678, 680, 681, 830, 836], "Or": [68, 117, 169, 196, 206, 564, 830], "quantifi": [68, 208, 237, 271], "introduc": [68, 73, 138, 139, 147, 149, 163, 164, 171, 173, 196, 198, 199, 200, 202, 203, 204, 211, 230, 232, 255, 260, 261, 262, 263, 315, 470, 471, 472, 550, 768, 772, 791, 850, 853, 859, 871], "outcom": 68, "awar": [68, 100, 138, 142, 165, 166, 213, 224, 230, 255, 260, 261, 262, 263, 470, 471, 472, 775, 871], "mitig": [68, 178, 199, 200, 207, 853], "confound": [68, 149, 550], "psychophysiologi": [68, 69, 96, 139, 149, 199, 227, 240, 559, 676, 677, 678, 680, 681], "cpmc": 68, "columbia": 68, "softwar": [68, 132, 156, 163, 182, 187, 188, 205, 240, 253, 265, 315, 436, 462, 470, 471, 472, 480, 498, 578, 621, 804, 824, 826, 828, 830, 831, 836, 838, 846, 847, 850, 851, 852, 855, 859, 861, 871], "ebridg": 68, "html": [68, 141, 167, 240, 252, 270, 564, 636, 854, 871], "rockhil": [68, 69, 80, 111, 112, 113, 117, 132, 133, 134, 226, 227, 240, 858, 871], "aprockhil": [68, 69, 80, 111, 112, 113, 117, 132, 133, 134, 226, 227], "linearsegmentedcolormap": [68, 753], "nearli": [68, 830], "exactli": [68, 124, 138, 142, 173, 182, 193, 211, 237, 552, 676, 756, 800, 871], "suffici": [68, 197, 199, 207, 224, 255, 260, 261, 262, 263, 265, 278, 349, 470, 471, 472, 509, 702, 768, 791, 830, 836, 846, 850, 853, 871], "portion": [68, 176, 196, 198, 211, 236, 255, 260, 261, 316, 470, 471, 472, 550, 768, 785, 791, 830, 850, 852], "plenti": 68, "settl": [68, 292], "ed_data": 68, "raw_data": 68, "read_raw": [68, 132, 133, 142, 170, 219, 252, 861, 871], "compute_bridged_electrod": [68, 577, 758, 861, 871], "1959919512423807e": 68, "665886892347847": 68, "oz": [68, 125, 157, 168, 237, 255, 257, 260, 261, 262, 263, 269, 307, 403, 410, 470, 471, 472, 549, 550, 564, 639, 690, 692, 694, 755, 762, 770, 772, 774, 777, 778, 781, 788, 790, 792, 793, 794, 798, 800, 871], "iz": 68, "4367321412185206": 68, "fcz": [68, 142, 237], "fc2": [68, 125], "fc4": [68, 142], "fc6": [68, 125], "f2": 68, "f4": [68, 125, 142, 157, 168, 205], "4835197413839957e": 68, "587817798712865": 68, "fc3": [68, 142, 493], "fc1": [68, 125, 470], "cp3": [68, 493], "cp1": [68, 125], "af7": 68, "af3": 68, "af4": 68, "af8": 68, "f5": [68, 493], "f3": [68, 125, 142, 157, 205, 493], "fz": [68, 125, 142, 157, 217, 223, 436, 470, 471, 472, 486], "ft8": 68, "t8": [68, 125, 157, 168, 255, 257, 260, 261, 262, 263, 269, 307, 403, 410, 470, 471, 472, 549, 550, 564, 690, 692, 694, 755, 762, 770, 772, 774, 777, 778, 781, 788, 790, 792, 793, 794, 798, 800, 871], "tp8": 68, "p8": [68, 125, 157], "p7": [68, 125, 157, 493], "p5": [68, 493], "p3": [68, 125, 142, 157, 493], "p1": [68, 109, 208], "p4": [68, 125, 142, 157], "p6": 68, "po3": [68, 125, 237], "o1": [68, 125, 157, 217, 237], "po4": [68, 125, 237], "po8": [68, 125, 237, 871], "746002687401258": 68, "cz": [68, 109, 125, 142, 157, 168, 187, 189, 203, 205, 217, 223, 255, 260, 261, 262, 263, 470, 471, 472, 635, 871], "c2": [68, 109, 203], "c4": [68, 109, 125, 142, 157], "cp2": [68, 125], "cp4": 68, "pz": [68, 125, 141, 157, 189, 217, 223], "p2": [68, 109], "590631749462737": 68, "f6": 68, "understand": [68, 142, 158, 188, 199, 237, 830, 853, 854, 859], "physiologi": 68, "clip": [68, 170, 214, 252, 255, 257, 260, 261, 262, 263, 269, 470, 471, 472, 549, 564, 690, 692, 694, 755, 770, 777, 790, 791, 793, 798, 800, 871], "bridged_idx": [68, 558, 577, 758], "ed_matrix": [68, 558, 758], "ax1": [68, 83, 87, 96, 135, 181, 192], "ax2": [68, 83, 87, 93, 96, 135, 181, 192, 224, 225], "triangular": [68, 158, 159, 266, 621, 677, 678, 680, 681, 797, 824, 846, 853, 856], "ed_plot": 68, "triu_idx": 68, "triu_indic": 68, "idx0": 68, "idx1": 68, "nanmedian": 68, "im1": 68, "cax1": 68, "set_label": [68, 144, 193, 222], "mu": [68, 199, 222, 558, 871], "im2": 68, "cax2": 68, "histogram": [68, 156, 255, 260, 261, 768], "previou": [68, 132, 138, 142, 149, 159, 168, 169, 170, 179, 198, 199, 203, 205, 214, 262, 263, 292, 293, 349, 353, 354, 363, 364, 365, 403, 409, 410, 446, 447, 466, 468, 469, 528, 560, 569, 578, 738, 756, 778, 841, 856, 871], "pair": [68, 100, 117, 135, 142, 166, 186, 187, 188, 193, 207, 208, 222, 230, 237, 252, 255, 257, 260, 261, 262, 263, 265, 267, 268, 269, 271, 273, 274, 275, 276, 279, 284, 297, 403, 410, 470, 471, 472, 493, 516, 549, 550, 558, 577, 589, 621, 677, 679, 680, 690, 691, 692, 694, 726, 738, 754, 758, 759, 762, 770, 776, 777, 781, 793, 796, 798, 800, 801, 824, 830, 871], "isnan": 68, "arrang": [68, 124, 149, 163, 168, 214, 240, 743], "light": [68, 135, 140, 169, 188, 197, 255, 260, 261, 262, 263, 406, 413, 470, 471, 472, 550, 738, 768, 772, 785, 791, 826, 871], "horizont": [68, 78, 133, 138, 139, 140, 178, 189, 196, 207, 222, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 550, 738, 757, 772, 784, 785, 791, 796, 801, 871], "stand": [68, 153, 167, 173, 651, 830, 842], "insert": [68, 149, 167, 211, 257, 265, 269, 284, 297, 429, 445, 516, 726, 743], "syring": 68, "tip": [68, 202, 240, 349, 834, 835, 851, 857], "plot_bridged_electrod": [68, 861, 871], "saniti": [68, 117, 142, 180, 199, 439, 655, 859, 871], "implausibli": [68, 199, 222, 683], "interestingli": [68, 853], "though": [68, 72, 109, 149, 154, 158, 166, 170, 177, 181, 188, 196, 199, 200, 202, 203, 204, 222, 265, 741, 761, 826, 847, 853, 871], "adjac": [68, 140, 144, 197, 223, 231, 232, 313, 324, 415, 444, 552, 555, 660, 661, 662, 663, 664, 665, 666, 670, 677, 678, 680, 681, 759, 859, 868, 871], "distinct": [68, 69, 193, 240, 255, 257, 260, 261, 262, 263, 403, 410, 470, 471, 472, 549, 690, 692, 694, 755, 770, 777, 793, 798, 800], "unlik": [68, 138, 139, 147, 148, 154, 158, 168, 179, 196, 199, 201, 211, 255, 259, 260, 261, 262, 263, 268, 274, 276, 356, 383, 411, 579, 694, 801, 828, 846, 853, 871], "add_channel": [68, 72, 255, 260, 261, 262, 263, 470, 471, 472, 550, 690, 692, 693, 694, 871], "ch1": 68, "ch2": 68, "9760": [68, 80], "9759": [68, 80], "lesser": [68, 470, 471, 472, 791, 871], "trough": [68, 142], "monoton": [68, 98, 482, 742, 811], "discrep": [68, 853], "driven": [68, 193, 222, 365, 410, 466], "blink": [68, 70, 80, 90, 91, 142, 170, 196, 198, 201, 202, 204, 205, 211, 213, 237, 240, 254, 255, 260, 261, 549, 564, 642, 643, 871], "flatten": [68, 116, 203, 222, 226, 232, 240, 755, 871], "axvspan": [68, 93, 149], "subplots_adjust": [68, 69, 71, 104, 106, 109, 117, 124, 144, 149, 158, 197, 200, 202, 203, 204, 205, 208, 212, 222, 224, 225, 227, 761], "725": [68, 227], "wspace": [68, 71, 124, 222], "compel": 68, "evid": [68, 110, 199, 200, 240, 550, 720, 723], "judici": [68, 830], "electrolyt": [68, 240, 558], "tri": [68, 158, 159, 166, 173, 176, 255, 260, 261, 266, 267, 271, 273, 275, 313, 360, 426, 458, 621, 624, 639, 659, 663, 666, 796, 819, 848, 853, 856, 871], "those": [68, 72, 76, 96, 124, 140, 142, 149, 155, 159, 163, 164, 166, 167, 168, 169, 170, 173, 178, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 211, 212, 213, 217, 218, 222, 236, 252, 255, 260, 261, 262, 263, 265, 273, 292, 305, 307, 319, 322, 324, 350, 351, 352, 354, 363, 405, 409, 419, 424, 426, 427, 432, 436, 455, 470, 471, 472, 482, 498, 528, 536, 549, 550, 552, 553, 565, 566, 567, 572, 575, 584, 586, 593, 639, 642, 643, 658, 676, 685, 690, 692, 693, 694, 698, 699, 700, 701, 703, 709, 710, 722, 762, 768, 769, 772, 774, 775, 781, 782, 789, 792, 830, 846, 852, 853, 855, 871], "still": [68, 72, 76, 112, 117, 140, 141, 142, 158, 169, 186, 187, 196, 197, 199, 200, 201, 203, 205, 207, 211, 214, 222, 230, 260, 265, 273, 315, 360, 422, 453, 471, 550, 578, 598, 627, 629, 672, 693, 747, 761, 762, 803, 819, 828, 830, 836, 848, 859, 871], "biolog": [68, 196, 203, 204, 240, 517, 846, 853], "interpolate_bridged_electrod": [68, 861, 871], "midwai": [68, 577], "aid": [68, 240, 577, 871], "recov": [68, 132, 164, 360, 871], "impli": [68, 160, 218, 237, 265, 325, 359, 486, 850], "unbridg": 68, "ch0": 68, "bridged_idx_simul": 68, "data_orig": 68, "rng": [68, 89, 90, 91, 111, 192, 199, 222, 503, 550, 576, 595, 642, 643, 644, 653, 654, 656, 677, 678, 679, 680, 681], "random": [68, 81, 87, 89, 90, 91, 111, 157, 188, 189, 192, 196, 199, 202, 219, 222, 223, 230, 231, 232, 468, 503, 550, 576, 595, 642, 643, 644, 653, 654, 656, 677, 678, 679, 680, 681, 871], "default_rng": 68, "seed": [68, 87, 92, 109, 111, 202, 218, 219, 223, 230, 231, 232, 461, 503, 550, 576, 595, 642, 643, 644, 653, 654, 656, 669, 677, 678, 679, 680, 681, 871], "raw_sim": [68, 90, 91], "bridged_data": 68, "tile": [68, 111], "back": [68, 72, 80, 85, 113, 138, 141, 156, 159, 160, 164, 169, 170, 178, 179, 197, 199, 202, 203, 204, 205, 235, 253, 255, 260, 261, 262, 263, 270, 360, 363, 418, 444, 470, 471, 472, 550, 772, 830, 850, 871], "raw_virtu": 68, "data_virtu": 68, "raw_comp": 68, "data_comp": 68, "With": [68, 111, 118, 160, 169, 170, 186, 189, 203, 204, 213, 219, 255, 260, 261, 262, 263, 278, 445, 470, 471, 472, 494, 550, 628, 722, 738, 786, 826, 828, 830, 833, 838, 842, 850, 852, 853], "comp": [68, 167, 265, 871], "1086289630998356e": 68, "139834556312537e": 68, "brought": [68, 154], "impend": 68, "help": [68, 70, 117, 132, 138, 142, 143, 144, 149, 157, 159, 160, 164, 167, 170, 179, 186, 188, 193, 196, 197, 198, 200, 201, 202, 204, 214, 226, 252, 255, 258, 259, 260, 261, 262, 263, 266, 267, 268, 271, 274, 275, 276, 430, 432, 438, 462, 470, 471, 472, 479, 486, 487, 492, 501, 550, 596, 602, 635, 639, 653, 656, 682, 689, 690, 693, 735, 738, 746, 768, 782, 796, 830, 835, 836, 846, 848, 852, 853, 854, 856, 859, 871], "quest": 68, "technician": [68, 846, 847], "noisi": [68, 89, 140, 148, 197, 199, 204, 207, 222, 230, 232, 237, 265, 569, 570, 573, 642, 643, 654, 846, 871], "bid": [68, 132, 134, 240, 255, 260, 261, 307, 470, 471, 472, 837, 847, 859, 871], "tsv": [68, 325, 871], "kohm": 68, "passiv": [68, 196], "accept": [68, 91, 138, 167, 169, 170, 186, 197, 198, 199, 202, 203, 204, 211, 255, 257, 260, 261, 262, 263, 265, 267, 268, 271, 274, 275, 276, 309, 339, 354, 371, 372, 373, 379, 381, 403, 410, 470, 471, 472, 494, 550, 552, 566, 567, 675, 677, 678, 680, 681, 690, 692, 694, 738, 755, 762, 769, 770, 776, 777, 781, 798, 800, 824, 830, 849, 871], "from_list": 68, "impedance_cmap": 68, "cn": [68, 800], "cax": [68, 109, 113, 124, 144, 227], "omega": [68, 106], "hopefulli": [68, 196, 237, 443], "convinc": [68, 149], "tenk": [68, 69, 240, 558, 559], "kayser": [68, 69, 240, 558, 559], "electroencephalogram": [68, 240, 558], "offici": [68, 69, 188, 240, 494, 550, 558, 559, 604, 830, 838, 852, 855, 871], "feder": [68, 240, 550, 558], "march": [68, 240, 558, 856, 871], "s1388": [68, 109, 240, 558], "2457": [68, 109, 240, 558], "00553": [68, 240, 558], "arnaud": [68, 240, 550, 558], "delorm": [68, 240, 550, 558], "scott": [68, 109, 142, 240, 427, 466, 550, 558, 846, 871], "makeig": [68, 109, 142, 240, 427, 466, 550, 558, 846], "134": [68, 82, 83, 167, 169, 222, 227, 240, 273, 515, 558], "jneumeth": [68, 72, 199, 227, 240, 550, 558, 650, 677, 678, 680, 681], "2003": [68, 192, 237, 240, 409, 558, 846], "009": [68, 71, 118, 125, 138, 147, 167, 219, 240, 558], "421": [68, 69, 82, 104, 107, 140, 160, 174, 180, 192, 201, 206, 218, 225, 226, 227], "eeg_bridg": [68, 82], "laplacian": [69, 192, 240, 415, 559, 635, 871], "sharper": [69, 199], "impact": [69, 135, 176, 197, 237, 403, 871], "166799": [69, 165, 180, 201], "714": [69, 165, 180, 201, 222, 227, 229], "date": [69, 71, 74, 78, 79, 80, 87, 90, 124, 139, 144, 149, 165, 166, 167, 187, 196, 197, 198, 200, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 217, 219, 252, 254, 255, 260, 261, 262, 263, 265, 470, 471, 472, 473, 483, 486, 579, 828, 830, 871], "decemb": [69, 71, 74, 78, 79, 80, 87, 90, 124, 139, 144, 149, 165, 166, 167, 196, 197, 198, 200, 202, 203, 204, 205, 207, 211, 212, 213, 214, 219], "2002": [69, 71, 74, 80, 87, 90, 109, 124, 139, 144, 149, 164, 165, 166, 167, 196, 197, 198, 199, 200, 202, 203, 204, 205, 207, 211, 212, 213, 214, 219, 240, 254, 517, 672, 674, 679, 853], "gmt": [69, 71, 74, 78, 79, 80, 87, 90, 124, 139, 144, 149, 165, 166, 167, 196, 197, 198, 200, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 219], "146": [69, 71, 74, 80, 87, 90, 124, 139, 144, 149, 164, 165, 166, 167, 193, 196, 197, 198, 200, 202, 203, 204, 205, 207, 211, 212, 213, 214, 219, 222, 226, 227, 240], "172": [69, 80, 90, 124, 165, 166, 167, 196, 197, 199, 200, 203, 204, 205, 207, 211, 212, 213, 214, 222, 227, 240, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 650, 655, 690, 693], "hh": [69, 71, 74, 78, 79, 80, 87, 90, 124, 139, 144, 149, 165, 166, 196, 197, 198, 200, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 219], "ss": [69, 71, 74, 78, 79, 80, 87, 90, 124, 139, 144, 149, 165, 166, 196, 197, 198, 199, 200, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 219, 853], "raw_csd": 69, "compute_current_source_dens": [69, 635, 861, 871], "426": [69, 80, 126, 196, 200, 204, 214, 227, 235], "evoked_csd": 69, "stiff": [69, 559], "spline": [69, 76, 197, 240, 255, 260, 261, 262, 263, 470, 471, 472, 559, 702, 853, 871], "flexibl": [69, 141, 170, 187, 738, 871], "hspace": [69, 71, 124, 222], "set_size_inch": [69, 201], "this_evoked_csd": 69, "contour": [69, 98, 117, 156, 170, 252, 255, 257, 260, 261, 262, 263, 269, 403, 410, 470, 471, 472, 549, 550, 564, 575, 690, 692, 694, 755, 756, 770, 773, 774, 777, 781, 790, 793, 798, 800, 871], "n\u03bb\u00b2": 69, "perrin": [69, 76, 197, 240, 559, 853], "pernier": [69, 76, 197, 240, 559, 853], "bme": [69, 240, 559], "1987": [69, 174, 199, 240, 559], "326089": [69, 240, 559], "jacqu": [69, 76, 197, 240, 559, 853], "olivi": [69, 76, 197, 240, 349, 550, 559, 853], "fran\u0107oi": [69, 76, 197, 240, 559, 853], "echalli": [69, 76, 197, 240, 559, 853], "184": [69, 73, 76, 167, 197, 222, 226, 227, 240, 559, 585, 853], "187": [69, 73, 76, 167, 197, 222, 227, 240, 550, 559, 853], "1989": [69, 76, 197, 240, 559, 853], "90180": [69, 76, 197, 240, 559, 853], "mike": [69, 240, 559], "cohen": [69, 116, 126, 240, 559, 755, 871], "theori": [69, 163, 176, 207, 240, 559, 578], "j\u00fcrgen": [69, 202, 240, 550, 559], "craig": [69, 240, 559], "methodologi": [69, 98, 240, 349, 559], "electrophysiologi": [69, 132, 240, 559], "organ": [69, 226, 227, 240, 559, 680, 681, 847, 852, 856], "171": [69, 73, 123, 167, 199, 222, 226, 227, 240, 381, 528, 559, 585, 647, 652, 871], "173": [69, 143, 156, 167, 222, 226, 240, 273, 559], "ijpsycho": [69, 240, 559], "334": [69, 82, 106, 109, 167], "eeg_csd": [69, 82], "eog_event_id": 70, "eog_ev": [70, 198, 254, 563, 571, 574], "find_eog_ev": [70, 196, 198, 213, 254, 563, 567, 848, 861, 871], "add_ev": [70, 170, 270, 470, 471, 472, 871], "audr": 70, "visr": 70, "pick_ch": 70, "375": [70, 78, 91, 106, 167, 192, 196, 198, 204, 206], "dc": [70, 164, 166, 170, 188, 196, 198, 199, 200, 201, 202, 204, 212, 255, 260, 262, 263, 265, 336, 470, 471, 472, 550, 552, 578, 791, 856, 871], "offset": [70, 90, 134, 159, 166, 170, 189, 196, 198, 199, 201, 202, 203, 204, 211, 212, 213, 254, 255, 258, 259, 260, 261, 262, 263, 265, 267, 268, 271, 274, 275, 276, 356, 432, 444, 470, 471, 472, 553, 592, 605, 670, 690, 693, 738, 856, 871], "saccad": [70, 170, 189, 196, 198, 201, 202, 204, 549], "firwin2": [70, 144, 170, 189, 196, 198, 199, 201, 202, 204, 255, 260, 261, 262, 263, 405, 414, 439, 441, 442, 470, 471, 472, 871], "hann": [70, 81, 105, 106, 144, 170, 196, 198, 199, 201, 202, 204, 255, 260, 261, 262, 263, 414, 439, 441, 442, 470, 471, 472, 523, 524, 641, 642, 643, 655, 871], "1502": [70, 170, 198, 202], "098": [70, 82], "eog_artifact_histogram": [70, 82], "basic": [71, 80, 109, 148, 149, 156, 159, 160, 163, 164, 169, 170, 171, 174, 190, 196, 201, 202, 203, 204, 207, 211, 214, 215, 219, 238, 239, 240, 252, 255, 260, 265, 269, 307, 323, 367, 383, 432, 438, 470, 481, 547, 692, 800, 847, 853, 871], "thorough": [71, 163, 197, 854], "modul": [71, 132, 138, 140, 141, 143, 144, 147, 148, 149, 159, 164, 165, 166, 167, 168, 169, 170, 187, 188, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 211, 212, 213, 214, 217, 235, 237, 252, 342, 482, 544, 689, 735, 738, 829, 830, 837, 842, 850, 853, 859, 860, 861, 862, 863, 866, 869, 871], "eogregress": [71, 201, 588, 793, 861, 871], "elimin": [71, 167, 201, 203, 207, 222, 230, 232, 350, 351, 352, 403, 572, 850, 853, 871], "slow": [71, 125, 135, 139, 142, 148, 199, 201, 208, 240, 255, 260, 261, 396, 397, 408, 523, 524, 576, 707, 709, 728, 770, 830, 847], "drift": [71, 139, 199, 201, 208, 550, 592, 871], "1653": [71, 72], "376": [71, 78, 90, 91, 92, 147, 164, 165, 167, 177, 180, 185, 192, 211, 227], "offpca": [71, 74, 90, 165, 166, 167, 196, 197, 198, 200, 202, 203, 204, 207, 211, 212, 213, 214, 219], "offaverag": [71, 90, 167, 198, 202], "raw_clean": [71, 81, 201, 586], "evoked_befor": 71, "evoked_aft": 71, "epochs_aft": 71, "spatial_color": [71, 91, 96, 126, 135, 142, 148, 149, 204, 214, 255, 260, 261, 262, 263, 470, 471, 472, 692, 694, 772, 775, 792, 871], "905": 71, "847": [71, 82, 227], "eog_regress": [71, 82], "intermitt": 72, "extern": [72, 149, 178, 186, 207, 240, 255, 260, 261, 262, 263, 336, 338, 342, 424, 433, 434, 435, 436, 470, 471, 472, 550, 560, 561, 569, 578, 846, 847, 853, 871], "magnet": [72, 78, 116, 126, 132, 148, 154, 174, 186, 200, 201, 227, 240, 337, 517, 550, 755, 831, 846, 847], "fail": [72, 204, 353, 360, 422, 424, 453, 487, 488, 560, 561, 569, 578, 596, 598, 602, 627, 629, 819, 830, 852, 871], "succe": [72, 159, 169, 836], "choos": [72, 79, 111, 112, 133, 139, 144, 149, 158, 160, 178, 179, 187, 192, 196, 199, 201, 202, 207, 224, 237, 253, 255, 260, 261, 267, 268, 271, 273, 274, 275, 276, 314, 444, 517, 525, 549, 555, 562, 570, 573, 578, 605, 653, 656, 676, 722, 738, 754, 757, 796, 801, 802, 828, 830, 850, 852, 871], "made": [72, 113, 153, 170, 196, 199, 222, 255, 260, 261, 266, 268, 273, 274, 276, 309, 323, 479, 592, 655, 769, 771, 801, 828, 830, 847, 852, 871], "whose": [72, 92, 142, 166, 168, 186, 193, 219, 255, 260, 261, 262, 263, 267, 268, 270, 271, 274, 275, 276, 292, 293, 349, 353, 354, 363, 364, 365, 403, 410, 432, 437, 446, 447, 466, 468, 469, 470, 471, 472, 510, 528, 550, 555, 564, 566, 567, 570, 643, 693, 694, 709, 710, 762, 765, 778, 783, 792, 793, 852, 853, 856, 871], "particularli": [72, 159, 188, 201, 222, 255, 260, 261, 262, 263, 430, 470, 471, 472, 550, 569, 833, 853], "heavi": [72, 230, 232, 850, 871], "jeff": [72, 240, 550, 871], "hanna": [72, 240, 550, 871], "refmeg_nois": [72, 847, 861, 871], "sample_reference_meg_nois": 72, "refmeg": 72, "165353": 72, "530": [72, 78, 205, 227, 240], "30000": [72, 402], "select_pick": 72, "plot_kwarg": [72, 155, 201], "560": [72, 78, 175, 205, 227], "raw_tog": 72, "ica_kwarg": 72, "picard": [72, 74, 80, 202, 550, 837, 871], "fit_param": [72, 74, 170, 403, 404, 405, 406, 407, 408, 410, 411, 413, 414, 420, 550, 551, 871], "all_pick": 72, "ica_tog": 72, "allow_ref_meg": [72, 550], "bad_comp": 72, "find_bads_ref": [72, 550, 871], "plot_properti": [72, 80, 164, 202, 550, 857, 871], "147": [72, 87, 88, 167, 222, 226, 227], "patient": [72, 74, 80, 134, 164, 170, 202, 871], "took": [72, 74, 80, 164, 170, 202, 550], "dpss": [72, 80, 100, 101, 135, 140, 141, 164, 170, 202, 235, 236, 255, 260, 261, 262, 263, 416, 470, 471, 472, 692, 694, 702, 707, 719, 722, 871], "raw_sep": 72, "ref_pick": 72, "ica_ref": 72, "ica_sep": 72, "think": [72, 142, 170, 193, 199, 222, 826, 849], "ekg": [72, 134], "cardiac": [72, 208], "ref_comp": 72, "get_sourc": [72, 550, 871], "ref_": 72, "recognis": 72, "rename_channel": [72, 109, 125, 138, 147, 149, 157, 183, 208, 211, 255, 260, 261, 262, 263, 307, 470, 471, 472, 482, 493, 861, 871], "cora": [72, 240, 550, 871], "kim": [72, 240, 550, 871], "nadia": [72, 240, 550], "voggel": [72, 240, 550], "magnetoencephalograph": [72, 240, 550], "108592": [72, 240, 550], "find_ref_artifact": [72, 82], "fnir": [73, 163, 167, 168, 190, 191, 209, 210, 240, 255, 260, 261, 262, 263, 265, 307, 323, 325, 348, 365, 367, 432, 470, 471, 472, 480, 493, 498, 500, 547, 580, 581, 582, 584, 585, 690, 692, 693, 694, 738, 754, 762, 771, 776, 826, 837, 853, 871], "mail": [73, 222, 841], "robertluk": 73, "net": [73, 168, 192, 240, 409, 672, 853, 871], "optical_dens": [73, 208, 861, 871], "temporal_derivative_distribution_repair": [73, 861, 871], "exact": [73, 100, 132, 200, 222, 230, 237, 240, 255, 260, 261, 262, 263, 286, 420, 470, 471, 472, 517, 677, 679, 680, 691, 695, 697, 698, 700, 826, 834, 853, 871], "fnirs_data_fold": [73, 208], "fnirs_motor": [73, 208, 847, 861, 871], "fnirs_cw_amplitude_dir": [73, 208], "raw_intens": [73, 208], "read_raw_nirx": [73, 188, 208, 477, 853, 861, 871], "raw_od": [73, 208], "new_annot": [73, 213], "317": [73, 109, 167, 222, 227], "set_annot": [73, 78, 79, 135, 166, 189, 198, 213, 254, 255, 260, 261, 470, 471, 472, 552, 579, 871], "23238": [73, 208], "2974": [73, 208], "spike": [73, 80, 253, 585, 846], "person": [73, 149, 208, 265, 830, 846, 852], "optod": [73, 188, 208, 500, 582, 738, 754, 847, 871], "corrupted_data": 73, "corrupted_od": 73, "8924": 73, "8923": 73, "suppli": [73, 98, 150, 170, 178, 204, 217, 222, 255, 258, 259, 260, 261, 262, 263, 267, 268, 270, 271, 274, 275, 276, 355, 379, 427, 437, 438, 470, 471, 472, 550, 564, 584, 585, 632, 690, 693, 761, 762, 781, 871], "corrected_tddr": 73, "said": [73, 173], "fishburn": [73, 240, 585], "ruth": [73, 240, 585], "ludlum": [73, 240, 585], "chandan": [73, 240, 585], "vaidya": [73, 240, 585], "andrei": [73, 240, 585], "medvedev": [73, 240, 585], "tddr": [73, 240, 585, 871], "motion": [73, 240, 554, 585, 871], "2018": [73, 81, 123, 135, 193, 202, 219, 240, 292, 293, 550, 585, 586], "025": [73, 125, 134, 138, 144, 147, 167, 189, 196, 199, 219, 222, 240, 585], "fnirs_artifact_remov": [73, 82], "pierreablin": 74, "9009": [74, 170, 202], "run_ica": [74, 871], "t0": [74, 97, 183, 237, 253, 695, 696, 697], "fit_tim": 74, "infomax": [74, 202, 240, 550, 857, 861, 871], "162": [74, 82, 167, 222, 226, 227, 240, 273], "ica_comparison": [74, 82], "replac": [76, 85, 98, 139, 141, 149, 157, 170, 186, 188, 198, 203, 204, 207, 211, 213, 240, 255, 257, 260, 261, 262, 263, 269, 270, 403, 410, 425, 438, 470, 471, 472, 483, 498, 515, 549, 550, 564, 690, 692, 694, 755, 777, 790, 793, 798, 800, 830, 834, 836, 838, 841, 853, 871], "evoked_interp": 76, "product": [76, 84, 116, 121, 148, 168, 186, 187, 192, 197, 204, 240, 265, 326, 416, 670, 719, 720, 722, 723, 747, 852, 853, 871], "truncat": [76, 84, 116, 121, 148, 197, 204, 212, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 426, 432, 470, 471, 472, 484, 690, 693, 762, 871], "evoked_interp_mn": 76, "\u03b1": [76, 140, 204, 214], "0e": [76, 192, 204], "892": [76, 82, 206, 227], "interpolate_bad_channel": [76, 82], "bilater": [77, 204, 638, 871], "repeat": [77, 90, 98, 110, 132, 138, 159, 163, 165, 203, 204, 211, 212, 222, 228, 229, 233, 234, 254, 255, 260, 261, 262, 263, 265, 271, 273, 355, 427, 471, 516, 517, 531, 547, 550, 564, 587, 605, 620, 662, 671, 673, 674, 678, 681, 682, 693, 721, 738, 776, 830, 838, 850, 871], "maxwell_filt": [77, 182, 206, 207, 424, 560, 569, 579, 780, 850, 861, 871], "head_po": [77, 78, 206, 207, 424, 569, 578, 641, 642, 643, 655, 871], "chpi": [77, 78, 120, 167, 181, 206, 207, 252, 255, 260, 261, 262, 263, 265, 270, 306, 424, 470, 471, 472, 547, 554, 557, 578, 641, 642, 643, 655, 690, 692, 693, 694, 761, 768, 791, 826, 853, 859, 860, 861, 871], "read_head_po": [77, 206, 207, 337, 339, 345, 347, 424, 569, 578, 641, 642, 643, 655, 861], "simulated_quat": 77, "simulated_movement_raw": 77, "raw_stat": 77, "simulated_stationary_raw": 77, "34208": 77, "955": [77, 80, 141, 206, 227, 236, 239], "backward": [77, 199, 252, 255, 260, 261, 262, 263, 365, 403, 405, 409, 410, 414, 431, 439, 441, 442, 470, 471, 472, 523, 692, 694, 738, 770, 779, 803, 853, 871], "plot_head_posit": [77, 78, 206, 207, 861, 871], "quiver": [77, 258, 738, 766, 780], "306m": [77, 106, 113, 120, 121, 148, 154, 156, 168, 170, 181], "topo_kwarg": [77, 139], "evoked_stat": 77, "naiv": [77, 226], "therebi": [77, 173, 201, 203, 853], "third": [77, 91, 92, 149, 167, 170, 186, 204, 208, 213, 254, 255, 260, 431, 432, 444, 445, 470, 471, 472, 511, 545, 550, 604, 605, 680, 681, 694, 771, 816, 830, 853], "restor": [77, 198, 205, 262, 263, 403, 407, 550, 551, 590, 738, 817, 871], "raw_sss": [77, 170, 207, 252, 470, 471, 472, 491, 578], "evoked_raw_mc": 77, "harmon": [77, 90, 181, 182, 189, 196, 200, 206, 207, 237, 853], "fourth": [77, 199, 213, 461, 853], "cleanli": [77, 167], "evoked_evo_mc": 77, "average_mov": [77, 207, 578, 861, 871], "430": [77, 78, 82], "movement_compens": [77, 82], "period": [78, 118, 138, 139, 142, 143, 147, 148, 170, 178, 196, 198, 199, 200, 202, 237, 255, 260, 261, 262, 263, 267, 268, 270, 271, 274, 275, 276, 349, 550, 553, 554, 555, 566, 608, 609, 734, 772, 826, 830, 852, 871], "contamin": [78, 199, 202, 240, 550], "similarli": [78, 96, 109, 141, 147, 169, 193, 199, 205, 208, 254, 550, 762, 848, 853], "suffer": [78, 846], "adonai": [78, 79, 871], "nune": [78, 79, 240, 650, 871], "bst_auditori": [78, 79, 189, 861], "annotate_mov": [78, 206, 861, 871], "compute_average_dev_head_t": [78, 554, 861, 871], "data_path_meg": 78, "raw_fname1": [78, 189], "s01_aef_20131218_01": [78, 79, 189], "raw_fname2": [78, 189], "s01_aef_20131218_02": [78, 189], "mismatch": [78, 158, 159, 189, 349, 437, 525, 795, 871], "on_mismatch": [78, 189, 349, 356, 358, 817, 871], "350": [78, 113, 114, 132, 139, 158, 167, 222, 227], "s01_20131218_01": [78, 79, 189], "2400": [78, 79, 182, 189], "864000": [78, 79, 189], "263": [78, 79, 167, 189, 206, 207, 222], "eab": [78, 79], "s01": [78, 79], "lt": [78, 112], "br": 78, "gt": 78, "chpi_loc": [78, 206, 337, 339, 340, 341], "extract_chpi_locs_ctf": [78, 337, 339, 861, 871], "compute_head_po": [78, 206, 207, 337, 340, 578, 861, 871], "original_head_dev_t": 78, "invert_transform": [78, 133], "average_head_dev_t": 78, "val": [78, 98], "val_ori": 78, "010": [78, 91, 125, 138, 147, 153, 167, 219, 240], "020": [78, 125, 138, 147, 167, 219], "090": [78, 206], "130": [78, 79, 80, 156, 167, 168, 227, 240, 333, 871], "160": [78, 79, 81, 120, 167, 168, 169, 186, 222, 226, 227, 240, 333, 528, 562, 570, 573, 647, 652], "260": [78, 109, 167, 206, 227, 587, 847], "280": [78, 109, 167, 168, 200, 227, 236, 333, 871], "290": [78, 142, 167, 182, 216, 219, 222, 227, 240, 650], "370": [78, 106, 167, 192, 222, 227, 240, 266, 271], "380": [78, 192], "460": [78, 182, 240, 845], "470": [78, 206, 222], "480": [78, 169, 189, 222, 227], "520": [78, 227], "540": [78, 219, 227, 240, 292, 293], "580": [78, 206, 227], "640": [78, 181, 206], "650": [78, 79, 144, 227], "680": [78, 227], "690": [78, 206], "720": [78, 206, 227, 240, 558], "740": [78, 227], "760": [78, 206], "780": [78, 103, 105, 227, 229], "790": [78, 193, 206], "810": [78, 206, 227], "820": [78, 227], "830": [78, 227], "840": [78, 88, 90], "850": [78, 206, 227, 871], "880": [78, 178, 206, 227, 240, 292, 293], "890": [78, 188, 191, 206, 227, 240, 273], "910": 78, "920": [78, 98, 141, 223, 227], "930": [78, 193, 206, 227], "940": [78, 227], "950": [78, 206, 227, 237], "970": [78, 193], "980": [78, 202, 206, 227], "990": [78, 206, 227], "353": [78, 167, 206, 222, 227], "356": [78, 167, 222, 227], "357": [78, 167, 199], "358": [78, 167, 227], "369": [78, 167, 193, 206, 227, 240, 517, 650, 853], "182": [78, 167, 189, 222], "361": [78, 167, 222, 227, 231], "362": [78, 167, 206, 218, 222, 223], "363": [78, 167, 227], "367": [78, 167, 197, 222, 227], "368": [78, 167, 169, 206, 227, 230], "371": [78, 167, 227], "372": [78, 157, 162, 167, 227], "373": [78, 167, 192, 227], "381": [78, 192, 206, 222, 227], "382": [78, 82, 192, 222, 240, 650], "386": [78, 206, 227], "388": [78, 222, 227, 240], "391": [78, 206, 222, 227], "392": [78, 193, 227], "393": 78, "394": [78, 137, 206, 222, 227, 672], "395": [78, 135, 193], "397": [78, 222, 227], "404": [78, 206, 222, 227], "405": [78, 193, 227], "407": [78, 227], "409": [78, 116, 227, 240, 755], "mean_distance_limit": [78, 554], "0015": 78, "annotation_mov": 78, "hpi_disp": [78, 554], "disp": 78, "0015m": 78, "0038m": 78, "new_dev_head_t": 78, "show_ax": [78, 120, 122, 133, 154, 155, 157, 180, 181, 308, 754, 787, 871], "outer_skin": [78, 106, 115, 133, 154, 156, 157, 159, 170, 754, 846, 847, 853], "ctf_275": [78, 120, 182], "movement_detect": [78, 82], "contract": [79, 852], "clench": [79, 202], "jaw": [79, 202], "swallow": [79, 196, 202], "twitch": 79, "cranial": 79, "notic": [79, 81, 138, 139, 141, 143, 147, 148, 149, 154, 158, 160, 164, 165, 168, 173, 189, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 211, 213, 214, 217, 218, 569, 830], "annotate_muscle_zscor": [79, 861, 871], "taken": [79, 91, 135, 140, 197, 201, 203, 204, 227, 230, 237, 253, 254, 262, 263, 265, 266, 270, 271, 292, 293, 349, 353, 354, 363, 364, 365, 403, 410, 446, 447, 466, 468, 469, 470, 471, 472, 528, 576, 596, 691, 702, 778, 791, 847, 852, 871], "analyt": [79, 110, 240, 255, 260, 261, 262, 263, 470, 471, 472, 871], "divid": [79, 98, 124, 140, 141, 142, 145, 146, 160, 163, 207, 222, 224, 227, 255, 260, 261, 262, 263, 266, 267, 268, 271, 274, 275, 276, 283, 469, 470, 471, 472, 510, 533, 534, 555, 558, 562, 578, 612, 667, 677, 680, 690, 692, 693, 694, 704, 714, 770, 794, 798, 826, 850, 854, 871], "squar": [79, 110, 125, 138, 147, 148, 149, 160, 166, 167, 176, 187, 199, 211, 217, 219, 222, 224, 235, 240, 255, 257, 260, 261, 262, 263, 267, 268, 269, 271, 274, 275, 276, 292, 293, 322, 403, 410, 447, 470, 471, 472, 525, 532, 549, 550, 564, 670, 675, 677, 678, 680, 681, 690, 691, 692, 694, 738, 755, 763, 764, 770, 772, 777, 779, 784, 790, 793, 796, 798, 800, 801, 826, 850, 853, 856, 871], "hundr": [79, 202, 203, 461, 828], "bad_muscl": [79, 555], "min_length_good": [79, 555], "fraction": [79, 110, 142, 173, 196, 202, 222, 321, 523, 532, 550, 568, 685, 782, 852, 871], "notch": [79, 189, 200, 342, 442, 470, 471, 472], "1981": 79, "scores_muscl": [79, 555], "threshold_muscl": 79, "annot_muscl": 79, "filter_freq": [79, 555], "zscore": [79, 283, 533, 534, 550, 690, 693, 798], "144": [79, 167, 169, 188, 191, 201, 222, 226, 273, 871], "309": [79, 82, 109, 167, 227, 240, 582, 720, 723], "muscle_detect": [79, 82], "gross": [80, 240, 403], "widespread": [80, 202], "recover": 80, "ubiquit": 80, "postur": [80, 202], "mainten": [80, 204, 830, 871], "appropri": [80, 144, 147, 160, 164, 180, 181, 188, 198, 202, 204, 207, 217, 222, 224, 226, 237, 240, 255, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 313, 319, 355, 382, 383, 470, 471, 472, 514, 528, 676, 738, 762, 791, 796, 801, 828, 830, 845, 850, 853, 856, 871], "wouldn": [80, 871], "pronounc": [80, 199, 850], "simultan": [80, 135, 140, 193, 200, 202, 214, 411, 461, 493, 512, 592, 600, 679, 847, 853, 859, 871], "18019": 80, "1983": [80, 201, 240, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 549, 593, 690, 693], "18020": 80, "exclus": [80, 168, 197, 202, 488, 545, 550, 782, 784, 785, 871], "mdash": [80, 202], "plot_sourc": [80, 202, 255, 260, 261, 470, 471, 472, 550, 768, 785, 791, 871], "85861": 80, "103880": 80, "criteria": [80, 138, 164, 198, 203, 204, 208, 253, 255, 260, 261, 270, 545, 550, 871], "slope": [80, 186, 199, 252, 253, 265, 336, 337, 494, 550, 871], "peripher": [80, 550], "pole": [80, 158], "foci": [80, 738, 871], "blob": [80, 230, 231], "worth": [80, 98, 147, 223, 240, 387, 479, 486, 830, 847, 848, 850], "fire": 80, "fuzzi": 80, "textbook": [80, 203, 240, 672], "temporali": 80, "ear": [80, 164, 168, 178, 847], "muscle_idx": [80, 550], "log_scal": [80, 550, 783], "blink_idx": 80, "heartbeat_idx": 80, "muscle_idx_auto": 80, "find_bads_muscl": [80, 550, 871], "s001r01": 80, "529": [80, 227], "s002": [80, 202], "s002r01": 80, "dhani": [80, 240, 550], "dharmaprani": [80, 240, 550], "hoang": [80, 240, 550], "nguyen": [80, 240, 550], "trent": [80, 240, 550], "lewi": [80, 240, 550, 853], "delosangel": [80, 240, 550], "willoughbi": [80, 240, 550], "kenneth": [80, 142, 240, 427, 550], "pope": [80, 240, 550], "38th": [80, 240, 550], "annual": [80, 204, 240, 550, 855], "confer": [80, 142, 240, 427, 550, 855], "societi": [80, 188, 240, 349, 517, 550, 720, 723, 853], "embc": [80, 202, 240, 550], "828": [80, 240, 550], "orlando": [80, 240, 550], "fl": [80, 240, 550], "usa": [80, 196, 240, 550], "7590828": [80, 240, 550], "989": [80, 82, 227, 232, 234], "muscle_ica": [80, 82], "otp": [81, 82, 586], "flux": [81, 207, 255, 260, 261, 262, 263, 470, 471, 472, 547, 690, 692, 693, 694, 853], "jump": [81, 109, 142, 196, 207, 677, 678, 680, 681, 871], "bst_phantom_elekta": [81, 181], "phantom": [81, 163, 184, 185, 240, 255, 257, 258, 260, 262, 263, 265, 297, 349, 354, 383, 423, 444, 446, 470, 471, 482, 484, 514, 578, 754, 766, 778, 806, 847, 853, 871], "rid": [81, 226], "1522": [81, 167], "dipole_numb": 81, "kojak_all_200nam_pp_no_chpi_no_ms_raw": [81, 181], "47000": [81, 181], "437999": [81, 181], "alongsid": [81, 143, 147, 153, 197, 202, 203, 205, 212, 789, 826, 837], "oversampled_temporal_project": [81, 861, 871], "lump": [81, 578], "compute_bia": 81, "sti201": [81, 181, 265], "make_sphere_model": [81, 122, 154, 181, 182, 183, 205, 507, 853, 861, 871], "r0": [81, 122, 154, 181, 182, 183, 514], "head_radiu": [81, 122, 154, 181, 182, 183, 514, 871], "036": [81, 138, 147, 167, 181, 219, 240, 650], "actual_po": [81, 181, 183], "get_phantom_dipol": [81, 181, 383, 861, 871], "1fmm": 81, "worst": [81, 118, 349, 354, 646, 648, 649, 871], "bias_clean": 81, "9mm": 81, "2mm": [81, 853], "4mm": 81, "samu": [81, 160, 207, 240, 561, 578, 586, 655, 850, 871], "taulu": [81, 160, 207, 240, 424, 561, 578, 586, 655, 850, 871], "2734641": [81, 240, 586], "011": [82, 125, 138, 147, 167, 199, 219, 240], "auto_examples_preprocess": 82, "176": [82, 140, 167, 169, 193, 222, 227, 240, 550], "virtual_evok": [82, 84], "984": [82, 84, 193, 227], "xdawn_denois": [82, 85], "shift_evok": [82, 83], "hut": 83, "ax3": [83, 87, 96, 181, 192], "magnomet": 84, "virt_evok": 84, "as_typ": [84, 255, 260, 261, 262, 263, 871], "plot_epochs_imag": [85, 114, 550, 781, 783, 861, 871], "signal_cov": [85, 551], "xd": 85, "1388": 85, "41640": 85, "epochs_denois": 85, "brief": [87, 92, 164, 196, 214, 222, 830], "simplest": [87, 92, 166, 193, 222, 853], "kostiantyn": [87, 91, 92, 240, 650, 871], "maksymenko": [87, 91, 92, 240, 650, 871], "functool": [87, 222, 267, 268, 271, 274, 275, 276, 830], "partial": [87, 147, 149, 164, 198, 211, 212, 222, 240, 255, 260, 261, 267, 268, 271, 274, 275, 276, 580, 720, 723, 738, 762, 803, 807, 847, 859, 871], "region_localization_error": [87, 861], "f1_score": [87, 861], "precision_scor": [87, 861], "recall_scor": [87, 861], "cosine_scor": [87, 861], "peak_position_error": [87, 861], "spatial_deviation_error": [87, 861], "determinist": [87, 202, 871], "middl": [87, 92, 109, 132, 158, 164, 199, 203, 217, 258, 265, 267, 268, 271, 274, 275, 276, 439, 757, 766, 796, 801, 802, 830, 853, 871], "frontal": [87, 92, 164, 196, 202, 204, 211, 219, 300, 625, 738], "selected_label": [87, 92], "term": [87, 100, 123, 132, 164, 166, 192, 199, 203, 222, 226, 232, 237, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 325, 336, 371, 372, 373, 381, 470, 471, 472, 525, 537, 559, 650, 690, 693, 704, 714, 826, 830, 847, 852, 853, 854, 859, 871], "label_region": 87, "select_sourc": [87, 92, 861, 871], "1915": 87, "One": [87, 93, 94, 97, 139, 141, 147, 148, 149, 153, 155, 164, 169, 176, 189, 199, 201, 202, 211, 222, 240, 255, 260, 261, 262, 263, 270, 307, 309, 430, 436, 470, 471, 472, 550, 672, 679, 756, 768, 769, 785, 791, 830, 846, 853, 855, 856, 871], "label_dipol": 87, "source_time_seri": [87, 91, 92], "sin": [87, 89, 90, 91, 92, 111, 199, 217, 218, 219, 336, 587, 656], "n_event": [87, 92, 255, 260, 261, 265, 270, 279, 358, 431, 432, 444, 470, 471, 472, 488, 511, 545, 553, 572, 592, 602, 604, 605, 640, 676, 693, 768, 771, 816, 826], "sourcesimul": [87, 91, 92, 655, 861, 871], "source_simulator_region": 87, "add_data": [87, 91, 92, 113, 267, 268, 271, 274, 275, 276, 640, 738, 796, 801], "source_simulator_dipol": 87, "gaussian": [87, 91, 111, 118, 150, 159, 160, 199, 202, 218, 222, 255, 260, 261, 262, 263, 466, 576, 644, 720, 723, 769, 778, 799, 846, 850, 853], "raw_region": 87, "simulate_raw": [87, 90, 91, 92, 219, 642, 643, 654, 656, 657, 861, 871], "make_ad_hoc_cov": [87, 90, 92, 219, 257, 861, 871], "add_nois": [87, 90, 91, 92, 219, 642, 643, 655, 861, 871], "iir_filt": [87, 89, 90, 92, 219, 644, 654], "raw_dipol": 87, "cos2": [87, 90, 91, 92, 219, 641, 642, 643, 655], "498": [87, 170, 172, 193, 206], "evoked_region": 87, "evoked_dipol": 87, "stc_true_region": 87, "get_stc": [87, 91, 640], "start_sampl": [87, 211, 640], "stop_sampl": [87, 211, 640], "stc_true_dipol": 87, "stc_est_region": 87, "stc_est_dipol": 87, "0004": 87, "2931": 87, "34986e": 87, "scorer": [87, 409, 420, 871], "rle": [87, 650], "region_result": 87, "thx": 87, "per_sampl": [87, 645, 646, 647, 648, 649, 650, 651, 652], "ax4": 87, "col": [87, 109, 262, 263, 738, 777, 871], "constrained_layout": 87, "super": [87, 237], "ticklabel_format": 87, "style": [87, 124, 132, 148, 149, 169, 186, 208, 252, 255, 257, 260, 261, 262, 263, 270, 275, 276, 292, 403, 409, 410, 462, 470, 471, 472, 494, 549, 550, 690, 692, 693, 694, 738, 754, 755, 762, 769, 770, 773, 775, 776, 777, 785, 786, 791, 793, 798, 799, 800, 802, 871], "sci": [87, 208, 582], "scilimit": 87, "tweak": [87, 111, 124, 237, 828, 848, 850], "dipole_result": 87, "518": [87, 88, 227], "plot_stc_metr": [87, 88], "auto_examples_simul": 88, "simulated_raw_data_using_subject_anatomi": [88, 91], "761": [88, 91, 192, 227], "762": [88, 227], "simulate_raw_data": [88, 90], "source_simul": [88, 91, 92], "058": [88, 92, 138, 140, 147, 167, 214, 219], "simulate_evoked_data": [88, 89], "017": [88, 89, 125, 138, 147, 167, 211, 219], "fit_iir_model_raw": [89, 108, 861, 871], "templat": [89, 90, 122, 132, 133, 153, 155, 161, 162, 163, 168, 174, 227, 240, 264, 265, 273, 280, 297, 307, 311, 312, 313, 323, 324, 325, 329, 360, 367, 382, 428, 470, 472, 486, 513, 564, 597, 620, 639, 754, 806, 811, 826, 844, 871], "read_proj": [89, 108, 128, 140, 189, 203, 255, 260, 261, 262, 263, 270, 470, 471, 472, 822, 861], "sample_audvis_ecg": [89, 108, 128, 140, 170, 203, 252], "randomst": [89, 90, 91, 111, 157, 192, 199, 219, 222, 503, 550, 576, 595, 642, 643, 644, 653, 654, 656, 677, 678, 679, 680, 681, 871], "randn": [89, 111, 157, 192, 199, 219, 222, 230, 231, 232], "high_resolut": [89, 797], "wronkiewicz": [90, 871], "wronk": 90, "add_ecg": [90, 91, 643, 655, 861, 871], "add_eog": [90, 91, 642, 655, 861, 871], "epoch_dur": [90, 558], "stagger": 90, "sinusoid": [90, 91, 111, 181, 182, 199, 206, 217, 219, 336, 442, 470, 471, 472, 656, 826], "10hz": 90, "global": [90, 110, 118, 125, 140, 142, 147, 148, 153, 160, 164, 181, 204, 240, 255, 260, 261, 262, 263, 265, 267, 268, 271, 274, 275, 276, 427, 721, 722, 736, 762, 769, 772, 775, 777, 778, 796, 801, 826, 830, 850, 871], "n_samp": [90, 211, 219, 871], "25e": 90, "1e9": [90, 182, 219], "plt_show": [90, 178, 222], "input": [90, 91, 111, 153, 170, 186, 192, 193, 199, 204, 207, 211, 222, 226, 227, 232, 252, 255, 260, 261, 262, 263, 266, 267, 268, 271, 274, 275, 276, 279, 309, 325, 350, 351, 352, 356, 404, 406, 407, 409, 411, 413, 415, 420, 427, 432, 438, 460, 462, 463, 468, 470, 471, 472, 494, 496, 550, 551, 559, 560, 562, 563, 566, 567, 569, 570, 591, 605, 656, 667, 669, 676, 677, 678, 680, 681, 688, 690, 702, 707, 708, 709, 710, 738, 739, 741, 742, 754, 762, 769, 773, 777, 785, 796, 799, 801, 811, 846, 852, 853, 856, 871], "millimet": [90, 91, 154, 158, 180, 330, 334, 446, 461, 503, 853], "calc": 90, "orphan": 90, "206": [90, 109, 167, 193, 206, 226, 227], "ivana": [91, 871], "kojcic": [91, 871], "deslauri": [91, 92, 871], "gauthier": [91, 92, 871], "sam": [91, 92, 871], "doesn": [91, 138, 154, 168, 169, 202, 204, 205, 207, 211, 224, 227, 237, 371, 372, 373, 374, 376, 377, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 539, 550, 553, 567, 571, 578, 598, 637, 691, 693, 711, 781, 783, 830, 838, 846, 850, 871], "fname_info": 91, "g_temp_sup": 91, "g_t_transv": 91, "primari": [91, 147, 852, 853], "s_calcarin": 91, "vice": [91, 131, 158, 199, 271, 853], "versa": [91, 131, 158, 199, 271, 853], "moreov": [91, 135, 203, 204, 222], "contralater": [91, 149, 205], "ipsilater": [91, 149, 174], "activation_list": 91, "region_nam": 91, "latenc": [91, 141, 142, 143, 147, 227, 240, 262, 263, 267, 268, 271, 274, 275, 276, 427, 677, 678, 680, 681, 773, 871], "sigma": [91, 114, 125, 135, 140, 193, 222, 255, 260, 261, 514, 683, 684, 705, 717, 728, 769, 799, 853, 856], "gf": 91, "rand": [91, 219], "100m": 91, "30m": 91, "15m": 91, "region_id": 91, "events_tmp": 91, "label_tmp": 91, "amplitude_tmp": 91, "latency_tmp": 91, "wf_tmp": 91, "evoked_aud_left": 91, "evoked_vis_right": 91, "mere": [91, 170, 202, 608, 852], "stc_aud": 91, "stc_vi": 91, "stc_diff": 91, "49264": [91, 176], "64e": [91, 176], "3254294": 91, "92023613": 91, "51105546": 91, "christoph": [91, 112, 149, 153, 192, 240, 349, 409, 674, 871], "destrieux": [91, 153, 240], "ander": [91, 153, 176, 240, 517, 853], "dale": [91, 153, 176, 240, 517, 853], "halgren": [91, 153, 240, 517], "gyri": [91, 153, 156, 218, 240], "sulci": [91, 153, 218, 240], "nomenclatur": [91, 153, 211, 240], "763": [91, 103, 108, 206, 227], "sine": [92, 217, 252, 704, 714], "everi": [92, 100, 110, 124, 132, 139, 142, 149, 166, 170, 173, 193, 200, 201, 202, 214, 237, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 343, 452, 460, 468, 469, 470, 471, 472, 503, 550, 552, 566, 567, 576, 595, 642, 643, 644, 653, 654, 656, 677, 678, 679, 680, 681, 690, 693, 830, 850, 851], "significantli": [93, 94, 97, 222, 225, 230, 231, 237, 267, 268, 271, 274, 275, 276, 677, 678, 680, 681, 852], "permutation_cluster_test": [93, 222, 225, 226, 681, 861, 871], "1332": [93, 94, 143, 164, 167, 224, 225, 226], "epochs1": [93, 230, 426], "condition1": [93, 230], "epochs2": [93, 230, 426], "condition2": [93, 230], "t_ob": [93, 223, 224, 230, 677, 679, 680, 871], "cluster_p_valu": [93, 224, 225, 226, 230, 231, 232], "n_permut": [93, 97, 109, 222, 223, 224, 225, 226, 227, 231, 232, 677, 678, 679, 680, 681], "tail": [93, 109, 149, 222, 224, 225, 226, 227, 230, 237, 258, 677, 678, 679, 680, 681, 766, 797, 871], "out_typ": [93, 109, 222, 224, 225, 226, 677, 678, 680, 681, 871], "stat_fun": [93, 109, 110, 222, 223, 224, 225, 226, 227, 230, 231, 232, 669, 677, 678, 680, 681], "000227": 93, "167093": 93, "116": [93, 103, 107, 167, 206, 222], "3342": 93, "4012": 93, "572": [93, 206, 227], "4207": 93, "726": [93, 158, 227], "4276": 93, "882": [93, 193, 227], "4310": 93, "4312": 93, "4285": 93, "erf": [93, 114, 125, 189, 196, 199, 227, 240, 550, 781, 783, 837, 871], "i_c": 93, "cluster_stats_evok": [93, 99], "discoveri": [94, 226, 240, 674], "bonferroni_correct": [94, 222, 861, 871], "fdr_correct": [94, 98, 222, 226, 861], "pval": [94, 226, 668, 674, 677, 678, 680, 681], "ttest_1samp": [94, 222, 683], "n_test": [94, 679], "threshold_uncorrect": 94, "ppf": [94, 208, 222, 224, 227, 230, 231, 580, 677, 678, 680, 681], "reject_bonferroni": 94, "pval_bonferroni": 94, "threshold_bonferroni": 94, "reject_fdr": 94, "pval_fdr": 94, "indep": [94, 674], "threshold_fdr": 94, "xmin": 94, "xmax": 94, "hline": [94, 139, 262, 263, 772], "uncorrect": [94, 222], "bonferroni": [94, 442, 470, 471, 472, 668, 679, 871], "fdr_stats_evok": [94, 99], "generalis": 96, "tradit": [96, 141, 205, 762], "predictor": [96, 139, 222, 549, 593, 676], "inapplic": 96, "rerp": [96, 240, 676], "smith": [96, 123, 222, 223, 240, 381, 676, 677, 678, 680, 681], "kuta": [96, 240, 676], "169": [96, 167, 222, 226, 227, 240, 676], "jona": [96, 98, 125, 193, 227, 240, 677, 678, 680, 681, 871], "sassenhagen": [96, 98, 125, 193, 227, 240, 677, 678, 680, 681, 871], "linear_regression_raw": [96, 99, 861, 871], "rerf": 96, "param": [96, 110, 403, 404, 406, 407, 409, 410, 411, 412, 413, 415, 416, 417, 539, 551, 617, 871], "permutation_t_test": [97, 222, 861], "temporal_mask": 97, "logical_and": [97, 111], "50000": 97, "p_valu": [97, 222, 227, 442, 470, 471, 472, 679], "significant_sensor": 97, "significant_sensors_nam": 97, "49999": 97, "0243": [97, 140, 167], "1323": [97, 167], "1333": [97, 167, 230, 232], "1613": [97, 167], "1643": [97, 167], "2423": [97, 167], "2522": [97, 167], "2622": [97, 167], "2632": [97, 167], "2642": [97, 167], "2643": [97, 167, 192], "stats_pick": 97, "cbar_fmt": [97, 106, 255, 257, 260, 261, 262, 263, 269, 403, 410, 470, 471, 472, 549, 690, 692, 694, 770, 777, 790, 793, 798], "753": [97, 99, 227], "sensor_permutation_test": [97, 99], "psycholinguist": [98, 222], "st\u00e9phane": [98, 223, 240, 387, 847], "dufau": [98, 223, 240, 387, 847], "grainger": [98, 223, 240, 387, 847], "katherin": [98, 223, 240, 387, 720, 723, 847], "midglei": [98, 223, 240, 387, 847], "phillip": [98, 139, 223, 240, 382, 387, 847, 871], "holcomb": [98, 223, 240, 387, 847], "pictur": [98, 223, 240, 270, 387, 847], "snapshot": [98, 170, 223, 240, 387, 808, 830, 847, 871], "megastudi": [98, 223, 240, 387, 847], "psycholog": [98, 223, 240, 387, 847], "1887": [98, 223, 240, 387, 847], "1897": [98, 223, 240, 387, 847], "0956797615603934": [98, 223, 240, 387, 847], "matt": [98, 240, 871], "davi": [98, 240], "ford": [98, 240], "friedmann": [98, 240], "pulverm\u00fcl": [98, 240], "william": [98, 192, 240, 409], "marslen": [98, 240], "wilson": [98, 240], "1383": [98, 240], "1400": [98, 240], "2006": [98, 176, 192, 207, 240, 255, 260, 261, 528, 578, 647, 652, 720, 723], "2005": [98, 160, 207, 240, 424, 528, 561, 578, 647, 650, 652, 850], "048": [98, 138, 140, 147, 167, 214, 219, 223, 240], "tal": [98, 117, 123, 240, 479, 486, 871], "linzen": [98, 117, 871], "pd": [98, 109, 134, 141, 149, 188, 189, 207], "kiloword": [98, 141, 211, 223, 861], "kword_metadata": [98, 141, 223], "epo": [98, 138, 141, 170, 223, 252, 255, 260, 261, 601, 871], "read_epoch": [98, 138, 141, 223, 850, 853, 861, 871], "visualcomplex": [98, 141], "film": [98, 141, 223, 859], "783710": [98, 141], "cent": [98, 141], "141553": [98, 141], "shot": [98, 141], "600033": [98, 141], "cold": [98, 141], "657457": [98, 141], "945661": [98, 141], "characterist": [98, 149, 199, 200, 240, 255, 260, 261, 396, 426, 438, 569, 826], "concret": [98, 141, 142], "imagin": [98, 109, 203], "df": [98, 109, 138, 143, 189, 211, 222, 223, 224, 230, 255, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 533, 677, 680, 690, 692, 693, 694], "cut": [98, 109, 110, 178, 203, 237, 252, 255, 260, 261, 262, 263, 405, 414, 439, 441, 470, 471, 472, 562, 563, 571, 574, 578, 582, 838, 856, 871], "split_legend": [98, 227, 762], "percentil": [98, 132, 133, 134, 144, 255, 260, 261, 267, 268, 270, 271, 274, 275, 276, 470, 471, 472, 727, 757, 762, 768, 791, 796, 801, 802, 871], "gfp": [98, 110, 125, 140, 142, 148, 160, 164, 189, 227, 255, 260, 261, 262, 263, 525, 762, 769, 772, 778, 795, 826, 850, 871], "7424": 98, "plot_evoked_imag": [98, 861, 871], "null": [98, 279, 429, 672, 871], "hypothesi": [98, 170, 223, 668, 672, 674, 679, 859], "colour": [98, 174, 871], "palett": [98, 109, 143], "dark": [98, 132, 170, 255, 260, 261, 470, 471, 472, 550, 738, 768, 785, 791, 871], "reject_h0": 98, "fdr_pval": 98, "plot_imag": [98, 125, 140, 141, 144, 148, 164, 196, 198, 208, 223, 255, 260, 261, 262, 263, 871], "423": [98, 99, 160, 227], "sensor_regress": [98, 99], "296": [99, 109, 167, 206, 222, 227], "auto_examples_stat": 99, "csd_fourier": [100, 691, 695, 696, 697, 699, 700, 861, 871], "csd_multitap": [100, 691, 695, 696, 697, 698, 699, 707, 709, 861, 871], "wavelet": [100, 110, 164, 199, 226, 416, 534, 690, 693, 696, 699, 705, 716, 717, 718, 719, 721, 826, 871], "core": [100, 142, 164, 166, 169, 187, 217, 240, 255, 260, 261, 262, 263, 266, 267, 268, 270, 271, 274, 275, 276, 278, 349, 350, 352, 354, 406, 413, 416, 419, 420, 446, 459, 461, 470, 471, 472, 509, 512, 513, 523, 524, 533, 534, 555, 562, 563, 578, 630, 638, 641, 642, 643, 655, 677, 678, 679, 680, 681, 689, 692, 694, 695, 696, 697, 698, 699, 700, 707, 708, 709, 710, 718, 719, 720, 721, 722, 770, 773, 792, 828, 829, 830, 837, 852, 871], "clariti": [100, 857], "722": [100, 193, 206, 227], "adapt": [100, 110, 164, 188, 205, 219, 222, 240, 255, 260, 261, 262, 263, 292, 293, 408, 442, 443, 470, 471, 472, 523, 524, 550, 578, 692, 694, 697, 700, 705, 707, 709, 717, 734, 770, 830, 836, 847, 852, 871], "csd_fft": 100, "csd_mt": 100, "convolv": [100, 108, 199, 222, 237, 409, 416], "600hz": 100, "enough": [100, 156, 178, 200, 201, 202, 204, 207, 211, 222, 237, 255, 257, 260, 261, 262, 263, 269, 300, 301, 307, 403, 410, 422, 470, 471, 472, 549, 550, 564, 685, 690, 692, 693, 694, 747, 755, 762, 768, 770, 772, 774, 777, 778, 781, 785, 788, 790, 791, 792, 793, 794, 798, 800, 834, 852, 853, 871], "10th": 100, "greatli": 100, "minim": [100, 139, 167, 199, 217, 237, 255, 260, 261, 355, 411, 426, 560, 676, 738, 828, 850, 853], "csd_wav": 100, "crossspectraldens": [100, 286, 292, 312, 428, 695, 696, 697, 698, 699, 700, 701, 706, 711, 764, 861, 871], "trick": [100, 197, 237, 240, 679, 834, 871], "comma": [100, 252, 830, 871], "plot_dict": [100, 236], "compute_csd": [100, 103], "taper": [101, 111, 255, 260, 261, 262, 263, 408, 416, 442, 470, 471, 472, 523, 524, 692, 694, 697, 700, 702, 707, 709, 719, 722, 770, 871], "prolat": [101, 235, 240, 255, 260, 261, 262, 263, 470, 471, 472, 692, 694, 702, 707, 709], "spheroid": [101, 235, 240, 255, 260, 261, 262, 263, 470, 471, 472, 692, 694, 702, 707, 709], "sequenc": [101, 135, 240, 252, 255, 260, 261, 262, 263, 470, 471, 472, 667, 692, 694, 702, 738, 770, 847, 853], "compute_source_psd_epoch": [101, 103, 523, 861, 871], "return_gener": [101, 287, 290, 437, 519, 521, 524], "n_epochs_us": 101, "psd_avg": 101, "set_xlim": [101, 110, 149, 203], "805": [101, 103, 206, 221, 227], "972": 103, "auto_examples_time_frequ": 103, "source_power_spectrum_opm": [103, 106], "585": [103, 106, 192, 227, 240], "time_frequency_global_field_pow": [103, 110], "734": [103, 207, 210, 227], "time_frequency_erd": [103, 109, 871], "944": [103, 109, 227], "242": [103, 109, 167, 227, 871], "time_frequency_simul": [103, 111], "source_space_time_frequ": [103, 107], "source_label_time_frequ": [103, 104], "068": [103, 104], "source_power_spectrum": [103, 105], "temporal_whiten": [103, 108], "former": [104, 140, 226, 349, 550, 852, 871], "latter": [104, 140, 149, 166, 403, 406, 407, 409, 410, 411, 412, 413, 415, 416, 417, 551, 853], "source_induced_pow": [104, 861, 871], "epochs_induc": 104, "subtract_evok": [104, 110, 201, 255, 260, 261, 593, 871], "this_epoch": 104, "inter": [104, 132, 240, 255, 257, 260, 261, 262, 263, 269, 278, 427, 470, 471, 472, 549, 564, 642, 690, 692, 694, 718, 719, 721, 722, 755, 770, 777, 790, 793, 798, 800], "itc": [104, 718, 719, 720, 721, 722, 723], "baseline_mod": [104, 533, 534], "compute_source_psd": [105, 106, 524, 861, 871], "100hz": 105, "2048": [105, 108, 111, 130, 255, 260, 261, 262, 263, 402, 470, 471, 472, 523, 792], "psd_dspm": 105, "neuromag": [106, 154, 156, 158, 164, 166, 181, 183, 197, 204, 207, 211, 212, 213, 252, 253, 255, 258, 260, 261, 262, 263, 265, 270, 315, 423, 444, 470, 471, 472, 482, 488, 494, 500, 578, 600, 625, 692, 694, 768, 771, 776, 791, 826, 842, 847, 853, 856, 871], "mostli": [106, 139, 173, 176, 186, 198, 201, 371, 372, 373, 376, 377, 379, 384, 387, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 401, 448, 466, 468, 469, 470, 471, 472, 528, 738, 826], "welch": [106, 219, 235, 236, 237, 240, 255, 260, 261, 262, 263, 470, 471, 472, 692, 694, 708, 710, 792, 871], "next_fast_len": 106, "src_fname": [106, 230, 231, 232], "vv_fname": 106, "squid_resting_st": 106, "vv_erm_fnam": 106, "squid_empty_room": 106, "vv_trans_fnam": 106, "opm_fnam": 106, "opm_resting_state_raw": 106, "opm_erm_fnam": 106, "opm_empty_room_raw": 106, "opm_tran": 106, "opm_coil_def_fnam": 106, "vv": 106, "simplifi": [106, 177, 199, 240, 252, 255, 260, 261, 262, 263, 470, 471, 472, 850, 851, 871], "housekeep": 106, "raw_erm": [106, 126, 182, 189, 846], "new_sfreq": 106, "nyquist": [106, 199, 200, 871], "meg2233": 106, "meg1842": 106, "hold": [106, 189, 219, 222, 255, 260, 261, 262, 263, 424, 470, 471, 472, 569, 578, 688, 772, 792, 794, 826, 853, 859], "61999": 106, "60999": 106, "dist": [106, 154, 155, 208, 218, 252, 266, 273, 278, 360, 422, 455, 584, 660, 661, 662, 664, 665, 856], "make_bem_solut": [106, 156, 189, 360, 422, 453, 507, 513, 514, 597, 598, 627, 629, 819, 846, 853, 861, 871], "169022": 106, "169992": 106, "202": [106, 167, 193, 223, 227, 856, 871], "2052": 106, "995623": 106, "029776": 106, "088592": 106, "062622": 106, "916188": 106, "395825": 106, "069381": 106, "399641": 106, "914042": 106, "993107": 106, "074371": 106, "090590": 106, "079171": 106, "995577": 106, "050589": 106, "086427": 106, "057412": 106, "994603": 106, "691": [106, 206, 227], "692": [106, 142, 146, 227, 237], "percentag": [106, 202, 255, 260, 261, 552, 646, 647, 648, 649, 650, 652, 727, 767, 871], "freq_band": [106, 135], "topo": [106, 112, 140, 148, 208, 236, 255, 260, 261, 741, 751, 762, 799, 859, 871], "stc_psd": [106, 523], "sensor_psd": [106, 523], "return_sensor": [106, 523, 524], "topo_norm": 106, "keepdim": [106, 135], "stc_norm": 106, "3660": 106, "1969": 106, "014611": 106, "18765e": 106, "291": [106, 109, 167], "34378": 106, "07671e": 106, "3720": 106, "1698": 106, "007069": 106, "0841e": 106, "46031": 106, "26253e": 106, "coverag": 106, "worthwhil": [106, 149, 202], "plot_band": 106, "inferno": [106, 134, 222], "cau": 106, "show_trac": [106, 124, 133, 267, 268, 271, 274, 275, 276, 738, 796, 801, 871], "fig_alpha": 106, "brain_alpha": [106, 268, 274, 276, 801], "7045685": 106, "96394224": 106, "07428314": 106, "profil": [106, 169, 689, 828, 830], "beneath": 106, "fig_beta": 106, "brain_beta": 106, "18935281": 106, "33488802": 106, "88328023": 106, "fig_beta_opm": 106, "brain_beta_opm": 106, "28867831": 106, "68102302": 106, "87342874": 106, "source_band_induced_pow": [107, 861, 871], "use_fft": [107, 109, 236, 416, 533, 534, 696, 699, 716, 718, 719, 721, 722], "induced_power_": 107, "proj_fnam": [108, 189], "20000": 108, "innov": 108, "d_": 108, "lfilter": 108, "regener": [108, 255, 260, 261, 871], "r_": [108, 647, 652, 853], "dummi": [108, 122, 217, 232], "nfft": [108, 219], "written": [109, 169, 170, 173, 206, 213, 256, 298, 302, 435, 436, 470, 471, 472, 612, 618, 816, 821, 824, 837, 846, 859, 871], "desynchron": [109, 236, 240, 847], "conceptu": [109, 149, 199, 202, 240], "ersp": [109, 871], "perturb": 109, "goal": [109, 132, 135, 830, 848, 852, 859], "c3": [109, 125, 142, 157, 493], "35hz": 109, "customari": [109, 853], "klotzsch": [109, 871], "cb": 109, "mpg": 109, "twoslopenorm": 109, "seaborn": [109, 143, 207], "sn": [109, 143, 207], "tfr_multitap": [109, 111, 236, 416, 718, 719, 720, 721, 723, 861, 871], "permutation_cluster_1samp_test": [109, 222, 224, 680, 861, 871], "pcluster_test": 109, "strip": [109, 240], "961": [109, 158, 227], "suitabl": [109, 144, 157, 159, 224, 226, 255, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 301, 348, 367, 402, 403, 410, 427, 458, 470, 471, 472, 493, 507, 677, 690, 692, 693, 694, 846, 847, 853, 859], "cnorm": [109, 255, 257, 260, 261, 262, 263, 269, 470, 471, 472, 549, 690, 692, 694, 755, 770, 777, 790, 793, 798, 800], "asymmetr": [109, 753], "thing": [109, 139, 142, 143, 149, 158, 169, 170, 179, 186, 197, 199, 211, 219, 227, 230, 232, 307, 470, 471, 472, 830, 850, 871], "rdbu": 109, "equal": [109, 138, 145, 146, 147, 149, 163, 166, 170, 173, 174, 178, 196, 199, 213, 214, 230, 232, 255, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 270, 271, 274, 275, 276, 282, 292, 293, 312, 348, 349, 353, 354, 363, 364, 365, 403, 410, 416, 426, 428, 446, 447, 460, 466, 468, 469, 470, 471, 472, 488, 510, 517, 528, 533, 534, 549, 550, 562, 567, 576, 583, 584, 609, 646, 671, 672, 677, 678, 680, 681, 682, 684, 685, 690, 692, 693, 694, 708, 710, 719, 755, 756, 762, 766, 769, 770, 771, 772, 774, 777, 778, 793, 794, 798, 800, 826, 852, 853, 857, 871], "promin": [109, 141, 196, 208, 237, 350, 351, 352], "extrem": [109, 140, 237, 262, 263, 292, 293, 316, 349, 353, 354, 363, 364, 365, 403, 410, 411, 446, 447, 466, 468, 469, 528, 677, 678, 680, 681, 778], "vcenter": 109, "step_down_p": [109, 677, 678, 680, 681], "buffer_s": [109, 222, 226, 227, 230, 231, 232, 520, 677, 678, 680, 681], "tfr": [109, 199, 224, 225, 236, 416, 517, 518, 519, 520, 690, 693, 696, 699, 701, 713, 718, 719, 721, 722, 723, 724, 798, 826, 859, 861, 869, 871], "return_itc": [109, 111, 164, 224, 225, 226, 227, 236, 720, 721, 722, 723], "apply_baselin": [109, 124, 139, 147, 170, 176, 196, 201, 202, 204, 224, 225, 226, 227, 236, 255, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 690, 693, 871], "tfr_ev": 109, "gridspec_kw": [109, 124, 174, 208], "width_ratio": [109, 174, 208], "stack": [109, 139, 219, 230, 637, 733, 735, 834, 835, 838], "mask_styl": [109, 262, 263, 690, 774], "set_yscal": 109, "724718": 109, "523637": 109, "197747": 109, "267": [109, 118, 127, 141, 166, 167, 192, 222, 227, 240, 845], "271": [109, 164, 167, 193, 206, 222, 227], "279": [109, 167, 200, 222, 227, 240, 550, 720, 723], "286": [109, 167, 193, 206, 222, 227], "292": [109, 167], "269": [109, 123, 127, 134, 167, 222, 227], "259": [109, 167, 222, 227, 240, 853], "573067": 109, "687727": 109, "216": [109, 167, 193, 213, 216, 226], "218": [109, 167, 199, 222, 227, 240], "224": [109, 143, 167, 169, 186, 227], "231": [109, 116, 127, 147, 157, 162, 167, 226, 227], "235": [109, 156, 167, 179, 193, 226], "327": [109, 167, 227], "328": [109, 110, 118, 160, 167, 222, 240, 262, 263, 349, 778, 850], "324": [109, 167, 222, 227], "322": [109, 167, 193, 227], "599131": 109, "329547": 109, "308": [109, 167, 206, 222], "311": [109, 167, 222, 227], "713872": 109, "687815": 109, "369164": 109, "046259": 109, "406477": 109, "254": [109, 167, 226, 227], "233": [109, 167, 193, 226, 227], "964817": 109, "078953": 109, "287": [109, 167, 227], "237": [109, 167, 172, 206, 222, 226], "241": [109, 120, 167, 200, 226, 227, 442, 470, 471, 472], "epochstfr": [109, 111, 521, 690, 701, 713, 721, 722, 724, 861, 871], "datafram": [109, 138, 145, 146, 147, 149, 163, 188, 189, 207, 211, 223, 235, 254, 255, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 427, 470, 471, 472, 605, 676, 690, 692, 693, 694, 853, 871], "to_data_fram": [109, 138, 143, 147, 211, 223, 254, 255, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 690, 692, 693, 694, 853, 871], "0000": [109, 830], "481570": 109, "479232": 109, "765757": 109, "9875": 109, "500555": 109, "485289": 109, "764209": 109, "9750": [109, 871], "509981": 109, "474900": 109, "751235": 109, "9625": 109, "509883": 109, "455039": 109, "730498": 109, "9500": 109, "524450": 109, "448783": 109, "721221": 109, "lineplot": [109, 143], "confid": [109, 110, 140, 143, 149, 164, 174, 204, 258, 265, 550, 669, 692, 694, 762, 783, 851, 871], "long_format": [109, 143, 255, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 690, 692, 693, 694, 871], "freq_bound": 109, "delta": [109, 135, 199, 255, 260, 261, 262, 263, 468, 470, 471, 472, 533, 692, 694, 770], "theta": [109, 110, 135, 255, 260, 261, 262, 263, 470, 471, 472, 692, 694, 770], "freq_bands_of_interest": 109, "remove_unused_categori": 109, "reorder_categori": 109, "facetgrid": 109, "margin_titl": 109, "n_boot": 109, "axline_kw": 109, "dash": [109, 138, 148, 170, 200, 203, 207, 208, 214, 255, 257, 260, 261, 262, 263, 470, 471, 472, 692, 694, 762, 763, 789, 792, 871], "set_axis_label": 109, "col_templ": 109, "col_nam": [109, 265, 856], "row_templ": 109, "row_nam": [109, 264, 856], "add_legend": [109, 738], "df_mean": 109, "queri": [109, 138, 143, 147, 163, 215, 223, 235, 255, 260, 261, 430, 693], "groupbi": [109, 143, 149, 223], "reset_index": [109, 143], "col_ord": 109, "violinplot": [109, 143], "deep": [109, 135, 143, 156, 179, 199, 240, 255, 260, 261, 262, 263, 284, 403, 404, 406, 407, 409, 410, 411, 412, 413, 415, 416, 417, 470, 471, 472, 547, 548, 551, 690, 692, 693, 694, 735, 738, 754, 853, 871], "hue_ord": 109, "gert": [109, 240], "pfurtschel": [109, 240], "fernando": [109, 240, 846], "lope": [109, 240, 846], "da": [109, 240, 846], "silva": [109, 240, 846], "principl": [109, 200, 222, 227, 240, 848, 853], "1842": [109, 167, 240], "1857": [109, 240], "00141": [109, 240], "bernhard": [109, 240, 466], "graimann": [109, 240], "jane": [109, 240], "huggin": [109, 240], "simon": [109, 240, 871], "levin": [109, 240], "ecog": [109, 112, 132, 133, 136, 137, 163, 167, 211, 217, 222, 240, 255, 260, 261, 262, 263, 265, 271, 273, 306, 307, 316, 365, 367, 376, 432, 436, 470, 471, 472, 486, 547, 548, 575, 620, 635, 685, 690, 692, 693, 694, 738, 754, 794, 806, 808, 826, 827, 837, 853, 871], "00697": [109, 240], "exposur": [109, 202, 240, 830], "tone": [109, 164, 240, 847], "1993": [109, 176, 240, 709], "90110": [109, 240], "rectifi": 110, "magniud": 110, "uncertainti": [110, 235, 240, 255, 260, 261, 262, 263, 470, 471, 472, 692, 694, 702, 707, 709, 837], "importantli": [110, 111, 198, 846], "hari": [110, 111, 123, 176, 240, 871], "neuromagnet": [110, 202, 240, 550], "s0166": [110, 240], "2236": [110, 240], "10065": [110, 240], "342": [110, 118, 160, 167, 206, 222, 240, 262, 263, 349, 778, 850], "bradlei": [110, 240], "efron": [110, 240], "trevor": [110, 240], "hasti": [110, 240], "institut": [110, 240, 720, 723], "mathemat": [110, 149, 174, 197, 199, 207, 222, 240, 498, 517, 677, 720, 723, 830, 846, 853, 871], "monograph": [110, 240], "cambridg": [110, 149, 240, 349, 709], "univers": [110, 240, 251, 349, 442, 709, 847, 852, 858, 871], "york": [110, 199, 240, 251, 442, 709, 858, 871], "isbn": [110, 149, 199, 219, 240, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 292, 293, 349, 470, 471, 472, 672, 690, 693, 709], "14989": [110, 240], "web": [110, 144, 202, 237, 240, 270, 538, 746, 859, 871], "stanford": [110, 240], "casi": [110, 240], "bootstrap_confidence_interv": [110, 861], "iter_freq": 110, "frequency_map": 110, "job": [110, 200, 202, 252, 255, 260, 261, 262, 263, 266, 267, 268, 270, 271, 274, 275, 276, 278, 349, 350, 352, 354, 405, 406, 408, 409, 413, 414, 415, 416, 419, 420, 441, 442, 443, 446, 459, 461, 470, 471, 472, 509, 512, 513, 523, 524, 533, 534, 555, 562, 563, 630, 638, 641, 642, 643, 655, 677, 678, 679, 680, 681, 692, 694, 695, 696, 697, 698, 699, 700, 707, 708, 709, 710, 718, 719, 720, 721, 722, 723, 770, 773, 792], "skip": [110, 132, 142, 147, 163, 164, 168, 170, 188, 199, 237, 252, 337, 491, 523, 566, 628, 830, 846, 856, 871], "option": [110, 122, 132, 133, 138, 140, 148, 149, 154, 159, 160, 163, 164, 165, 166, 169, 170, 171, 176, 186, 193, 196, 199, 202, 207, 208, 211, 213, 214, 217, 222, 223, 226, 232, 235, 237, 255, 257, 258, 260, 261, 262, 263, 267, 268, 269, 270, 271, 273, 274, 275, 276, 280, 281, 298, 304, 307, 349, 359, 363, 366, 379, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 424, 434, 435, 436, 441, 442, 443, 445, 447, 466, 468, 469, 470, 471, 472, 484, 486, 509, 513, 517, 518, 519, 520, 521, 523, 524, 528, 530, 532, 533, 534, 542, 547, 549, 550, 551, 560, 561, 562, 563, 564, 569, 578, 598, 608, 610, 620, 655, 660, 664, 675, 677, 678, 680, 681, 684, 685, 690, 692, 693, 694, 702, 710, 722, 728, 738, 754, 755, 756, 762, 766, 768, 770, 772, 774, 777, 778, 781, 785, 788, 790, 791, 792, 793, 794, 796, 798, 800, 801, 802, 804, 836, 838, 852, 853, 856, 868, 871], "apply_hilbert": [110, 111, 112, 134, 165, 255, 260, 261, 262, 263, 470, 471, 472, 871], "269399": 110, "897": [110, 227], "077": 110, "1202": 110, "emerg": 110, "bootstrap": [110, 140, 170, 669, 692, 694, 762, 871], "domin": [110, 201, 207, 237, 267, 268, 271, 274, 275, 276, 437, 550], "helper": [110, 132, 222, 307, 325, 860], "winter_r": 110, "freq_nam": 110, "ci_low": 110, "ci_up": 110, "dhz": 110, "xy": [110, 112, 134, 179, 316, 423, 739, 808, 853], "horizontalalign": [110, 132, 199, 203], "xycoord": 110, "735": [110, 227], "trade": [111, 199], "bharadwaj": [111, 123, 240, 871], "berkelei": [111, 112, 251, 858], "tfr_stockwel": [111, 236, 718, 719, 720, 721, 722, 861, 871], "tfr_morlet": [111, 164, 224, 225, 226, 227, 236, 416, 716, 718, 719, 720, 722, 723, 861, 871], "tfr_array_morlet": [111, 719, 720, 721, 722, 723, 861, 871], "centers_to_edg": [111, 861, 871], "sim0001": 111, "sim0002": 111, "buffer": [111, 187, 252, 265, 470, 471, 472, 487, 569, 578, 596, 602, 856, 871], "burst": [111, 181, 196, 847], "ramp": [111, 199], "logical_or": 111, "on_tim": 111, "han": [111, 572, 642, 643, 871], "sin50hz": 111, "4000": [111, 164, 204, 252, 493], "41160": 111, "41159": 111, "time_bandwidth": [111, 416, 719, 722], "sim": [111, 525, 853], "nmore": 111, "balanc": [111, 198, 199, 222, 226, 646, 671, 871], "strictli": [111, 149, 159, 166, 167, 176, 199, 201, 286, 738, 871], "regard": [111, 205, 219, 227, 236, 853, 871], "recoverd": 111, "lossless": 111, "disregard": 111, "numer": [111, 154, 160, 199, 202, 211, 222, 227, 266, 273, 348, 370, 438, 463, 470, 471, 472, 550, 667, 677, 678, 680, 681, 703, 850, 852, 853, 859, 871], "all_n_cycl": 111, "isinst": [111, 138, 255, 470], "exagger": 111, "wise": [111, 160, 196, 200, 262, 263, 412, 679, 826, 871], "epochs_hilb": 111, "tfr_data": 111, "conj": [111, 292, 293], "413": [111, 176, 196, 210, 240], "3301": 111, "avgpow": 111, "avg_pow": [111, 718, 719], "mesh": [111, 154, 158, 159, 173, 266, 268, 274, 276, 303, 304, 355, 402, 458, 459, 621, 738, 797, 801, 824, 836, 871], "electrocorticographi": [112, 132, 134, 240, 255, 260, 261, 262, 263, 470, 471, 472, 547, 548, 690, 692, 693, 694, 847, 853, 871], "scatterplot": 112, "pyvista": [112, 132, 169, 179, 255, 258, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 689, 738, 740, 748, 752, 754, 766, 794, 796, 797, 801, 803, 808, 828, 829, 848, 859, 871], "clickableimag": [112, 861], "own": [112, 124, 149, 175, 181, 204, 214, 224, 227, 255, 260, 261, 262, 263, 267, 270, 271, 275, 316, 469, 470, 471, 472, 578, 738, 769, 796, 830, 833, 834, 850, 852, 856], "dirnam": [112, 122, 157, 169], "pathlib": [112, 120, 142, 155, 168, 170, 270, 371, 372, 373, 376, 377, 379, 384, 387, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 401, 513, 606, 826, 871], "noqa": [112, 114, 168, 203, 222], "f401": 112, "snapshot_brain_montag": [112, 134, 803, 861, 871], "misc_path": [112, 132, 133, 180], "ecog_data_fnam": 112, "sample_ecog_ieeg": [112, 132], "layout_path": 112, "__file__": [112, 120, 168, 169, 170], "layout_nam": 112, "custom_layout": 112, "lout": [112, 168, 308, 321, 322, 333, 871], "coreg": [112, 132, 133, 155, 156, 157, 158, 307, 462, 465, 754, 846, 853, 861, 871], "estimate_head_mri_t": [112, 132, 133, 861, 871], "sample_ecog": [112, 132], "apply_tran": [112, 132, 133, 154, 158, 180, 307, 871], "conjunct": [112, 222, 255, 260, 405, 859], "xy_pt": [112, 134], "beta_pow": 112, "fig2": [112, 149, 168], "coolwarm": 112, "cbar": [112, 124, 144, 193, 222, 757], "set_axis_off": [112, 134, 170], "bbox_inch": [112, 871], "tight": [112, 149, 159, 192, 262, 263, 714, 772, 774, 871], "669": 112, "mous": [112, 189, 213, 255, 257, 258, 260, 261, 262, 263, 269, 403, 410, 462, 470, 471, 472, 549, 550, 690, 692, 694, 739, 752, 754, 766, 768, 769, 770, 772, 773, 774, 777, 781, 790, 792, 793, 798, 848, 871], "imread": [112, 170], "plot_click": [112, 739], "to_layout": [112, 739], "got": [112, 142, 169, 197, 202, 219, 833, 871], "read_layout": [112, 168, 308, 861, 871], "764": [112, 127, 227], "3d_to_2d": [112, 127], "scalarmapp": 113, "low_contrast": [113, 123, 132, 133, 179, 188, 267, 268, 271, 274, 275, 276, 738, 796, 801], "rh_data": [113, 173, 271, 274], "rh_vertno": [113, 173, 271, 274, 653], "recon": [113, 133, 153, 158, 304, 361, 536, 811, 871], "brodmann": 113, "ba44": 113, "add_head": [113, 154, 188, 738, 871], "seghead": [113, 154, 155, 156, 159, 170, 174, 180, 181, 252, 258, 738, 754, 766], "read_tran": [113, 115, 154, 158, 176, 189, 273, 454, 655, 825, 861, 871], "add_sensor": [113, 132, 134, 188, 208, 738, 871], "role": [113, 163, 168, 175, 184, 185, 257, 258, 262, 264, 265, 271, 359, 516, 517, 528, 599, 608, 610, 623, 638, 738, 747, 754, 766, 806, 830, 852], "sample_audvis_set1": 113, "ylorrd": 113, "add_dipol": [113, 738, 871], "1e8": 113, "static": [113, 132, 178, 207, 211, 240, 252, 259, 381, 727, 728, 828, 856, 871], "add_ax": [113, 124, 144], "503": [113, 127, 227], "embed": [114, 154, 170, 198, 199, 270, 830, 837, 871], "simplic": [114, 175, 193, 199, 222, 226, 850, 871], "instal": [114, 132, 133, 134, 144, 153, 159, 169, 179, 252, 255, 260, 261, 262, 263, 278, 298, 302, 333, 378, 381, 402, 405, 409, 414, 441, 442, 443, 470, 471, 472, 693, 830, 838, 850, 851, 854, 871], "order_func": 114, "spectral_embed": 114, "rbf_kernel": 114, "this_data": 114, "good_pick": 114, "bad_pick": 114, "plt_time": 114, "overlay_tim": [114, 125, 255, 260, 261, 769, 871], "renaud": [114, 240], "keriven": [114, 240], "maureen": [114, 240], "clerc": [114, 240], "1051": [114, 206, 240], "1061": [114, 192, 193, 225, 240], "2037139": [114, 240], "channel_epochs_imag": [114, 127], "eeg_on_scalp": [115, 127], "upon": [116, 142, 155, 168, 170, 255, 260, 261, 270, 409, 470, 471, 472, 739, 755, 808, 830, 836, 852, 871], "hosaka": [116, 240, 755, 871], "flow": [116, 176, 240, 755, 871], "underneath": [116, 755, 871], "poor": [116, 196, 199, 208, 755, 871], "man": [116, 149, 170, 240, 755], "hidehiro": [116, 240, 755], "electrocardiologi": [116, 240, 755], "1976": [116, 240, 755], "s0022": [116, 240, 755], "0736": [116, 240, 755], "80041": [116, 240, 755], "sheraz": [116, 123, 126, 240, 565, 869, 871], "khan": [116, 123, 126, 240, 565, 869, 871], "khansheraz": 116, "plot_arrowmap": [116, 148, 861, 871], "evoked_mag": 116, "evoked_grad": 116, "topoplot": [116, 142, 168, 202, 237, 755, 758, 871], "max_time_idx": 116, "latitud": [116, 755], "longitud": [116, 158, 755], "radial": [116, 156, 523, 524, 534, 631, 755], "cartesian": [116, 173, 176, 755, 853, 856], "info_from": [116, 755, 871], "info_to": [116, 755], "raw_ctf": 116, "raw_ctf_info": 116, "evoked_arrowmap": [116, 127], "engeman": 117, "miko\u0142aj": [117, 858, 871], "magnuski": [117, 858, 871], "mmagnuski": [117, 871], "swp": [117, 251, 858], "pl": 117, "20m": 117, "regularli": [117, 164, 166], "multilin": [117, 871], "all_tim": 117, "rm": [117, 148, 149, 186, 219, 255, 257, 260, 261, 262, 263, 271, 403, 410, 470, 471, 472, 525, 549, 550, 690, 772, 776, 777, 781, 793, 800, 853, 871], "drawn": [117, 148, 214, 222, 255, 257, 260, 261, 262, 263, 268, 269, 274, 276, 403, 410, 470, 471, 472, 549, 550, 564, 642, 643, 690, 692, 694, 755, 756, 761, 762, 770, 771, 774, 776, 777, 781, 790, 792, 793, 794, 798, 800, 801, 871], "spectral_r": 117, "circl": [117, 132, 159, 168, 218, 255, 257, 260, 261, 262, 263, 269, 307, 403, 410, 470, 471, 472, 549, 550, 564, 690, 692, 694, 743, 755, 760, 762, 770, 772, 774, 777, 778, 781, 788, 790, 792, 793, 794, 798, 800, 826, 830, 871], "extrapol": [117, 148, 208, 255, 257, 260, 261, 262, 263, 269, 470, 471, 472, 549, 564, 690, 692, 694, 755, 770, 777, 790, 793, 798, 800, 871], "box": [117, 132, 159, 187, 255, 257, 260, 261, 262, 263, 269, 308, 316, 333, 470, 471, 472, 549, 564, 690, 692, 694, 734, 755, 770, 772, 774, 776, 777, 790, 793, 798, 800, 836, 871], "stretch": [117, 198, 738], "beyond": [117, 142, 164, 188, 232, 255, 257, 260, 261, 262, 263, 269, 470, 471, 472, 503, 549, 564, 685, 690, 692, 694, 734, 755, 770, 777, 790, 791, 793, 798, 800], "axes_row": 117, "extr": 117, "margin": [117, 124, 693, 761, 762], "exceed": [117, 182, 204, 207, 224, 260, 550, 576, 693], "mask_param": [117, 227, 255, 257, 260, 261, 262, 263, 403, 410, 470, 471, 472, 549, 690, 692, 694, 755, 770, 777, 793, 798, 800], "markers": [117, 227, 255, 257, 260, 261, 262, 263, 403, 410, 470, 471, 472, 549, 690, 692, 694, 755, 770, 777, 793, 798, 800], "markerfacecolor": [117, 255, 257, 260, 261, 262, 263, 403, 410, 470, 471, 472, 549, 690, 692, 694, 755, 770, 777, 793, 798, 800], "_time": 117, "significant_channel": 117, "_channel": 117, "in1d": 117, "_ch": 117, "perhap": [117, 199, 204, 211, 222], "imped": [117, 199, 240, 871], "image_interp": [117, 255, 257, 260, 261, 262, 263, 269, 403, 410, 470, 471, 472, 549, 550, 564, 690, 692, 694, 755, 770, 777, 781, 790, 793, 798, 800, 871], "cubic": [117, 255, 257, 260, 261, 262, 263, 269, 403, 410, 470, 471, 472, 549, 550, 564, 690, 692, 694, 702, 738, 755, 770, 777, 781, 790, 793, 798, 800, 871], "smoothest": 117, "voronoi": [117, 255, 257, 260, 261, 262, 263, 269, 403, 410, 470, 471, 472, 549, 550, 564, 690, 692, 694, 755, 770, 777, 781, 790, 793, 798, 800, 871], "debug": [117, 160, 169, 252, 371, 372, 373, 376, 377, 384, 387, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 401, 637, 689, 733, 736, 830, 850], "unalt": [117, 356], "properli": [117, 132, 134, 153, 154, 159, 166, 181, 187, 197, 203, 204, 211, 212, 230, 232, 240, 252, 255, 258, 259, 260, 261, 262, 263, 265, 267, 268, 271, 274, 275, 276, 298, 302, 342, 355, 405, 409, 414, 441, 442, 443, 470, 471, 472, 566, 567, 635, 655, 690, 693, 734, 778, 804, 828, 830, 833, 835, 846, 871], "animate_topomap": [117, 262, 263, 871], "frame_r": [117, 262, 263], "blit": [117, 262, 263], "768": [117, 127, 170, 181, 208], "evoked_topomap": [117, 127], "excel": [118, 148, 158, 199, 219], "diagnost": [118, 163, 170, 202, 207, 209], "rare": [118, 270, 852, 871], "80e": [118, 208, 853], "uncom": 118, "fewer": [118, 142, 149, 159, 168, 170, 196, 199, 212, 222, 232, 255, 260, 261, 262, 263, 270, 405, 409, 414, 415, 439, 441, 442, 470, 471, 472, 571, 575, 738, 774, 871], "007": [118, 125, 138, 139, 140, 143, 147, 164, 167, 198, 204, 219, 223, 240, 278, 582], "008": [118, 125, 138, 143, 147, 149, 164, 167, 207, 219, 240, 578], "method_param": [118, 177, 349, 354, 517, 518, 519, 520, 521, 523, 524, 530, 533, 534], "diagonal_fix": [118, 160, 349, 871], "return_estim": [118, 160, 349, 354, 850], "likelihood": [118, 149, 160, 175, 240, 257, 262, 263, 349, 354, 550, 778, 850, 853], "loglik": [118, 257], "1891": 118, "unseen": [118, 160, 175, 349, 850], "descend": [118, 160, 175, 871], "1629": 118, "666": [118, 199, 210], "1659": 118, "813": [118, 208, 210, 212, 216, 227], "1802": [118, 178, 197, 240], "6663146376516": 118, "8130475750986": 118, "10315358209": 118, "evoked_whiten": [118, 127], "read_raw_artemis123": [120, 186, 477, 853, 861, 871], "read_raw_bti": [120, 183, 186, 853, 861, 871], "read_raw_kit": [120, 169, 186, 477, 853, 861, 871], "set_3d_titl": [120, 122, 148, 861, 871], "root_path": 120, "parent": [120, 148, 159, 168, 169, 170], "spm_ctf_meg_example_faces1_3d": 120, "324474": 120, "bti_path": 120, "test_pdf_linux": 120, "test_config_linux": 120, "test_hs_linux": 120, "magn": [120, 186, 853], "3600wh": 120, "pdf": [120, 183, 192, 240, 252, 381, 466, 482, 854], "critic": [120, 149, 158, 169, 176, 183, 199, 207, 222, 224, 227, 578, 637, 736, 847, 857], "mne_create_comp_data": [120, 183, 252, 482], "print_tabl": [120, 183], "routin": [120, 183, 200, 446, 550, 578, 859, 870, 871], "magnes_3600wh": [120, 183], "kit_path": 120, "sqd": [120, 169, 252, 474, 494, 604, 853], "artemis_data_2017": 120, "10h": 120, "38m": 120, "59s_phantom_1k_hpi_1": 120, "artemis123_mneloc": 120, "1863": 120, "hpifit": [120, 206, 252], "ok": [120, 186, 206, 256, 266], "997": [120, 193, 199, 207, 227, 240], "cardin": [120, 164, 167, 211, 217, 300, 301, 330, 422, 826, 856, 871], "meg_sensor": [120, 127, 871], "create_3d_figur": [121, 154, 158, 176, 740, 861], "mne_helmet": [121, 127], "ship": [122, 168, 222, 255, 260, 261, 262, 263, 265, 317, 318, 323, 324, 455, 470, 471, 472, 842, 853, 871], "joan": [122, 135, 157, 871], "massich": [122, 135, 157, 871], "mailsik": [122, 135, 157], "op": [122, 124, 126, 132, 157, 174, 179, 182, 183, 189, 206, 208, 218, 219, 232, 255, 260, 261, 262, 263, 470, 471, 472], "get_builtin_montag": [122, 168, 255, 260, 261, 262, 263, 265, 323, 455, 470, 471, 472, 861, 871], "against": [122, 138, 139, 147, 202, 211, 240, 647, 652, 830, 871], "current_montag": 122, "fiduci": [122, 132, 134, 154, 157, 158, 168, 186, 187, 307, 310, 311, 320, 330, 331, 360, 361, 362, 380, 475, 478, 494, 502, 604, 629, 754, 826, 846, 853, 856, 871], "mri_fiduci": [122, 154, 157, 181, 754, 871], "montage_sgskip": [122, 127], "hcp": [123, 240, 381, 837, 859, 871], "mmp1": [123, 240, 381, 871], "mmp": [123, 381], "Of": [123, 140, 196, 203, 204, 219, 583, 584], "acknowledg": [123, 199], "wu": 123, "minn": 123, "publicli": [123, 164, 396, 397, 847, 852], "get_brain_class": [123, 153, 861], "fetch_hcp_mmp_parcel": [123, 179, 861, 871], "fetch_aparc_sub_parcel": [123, 861], "hcpmmp1": 123, "add_annot": [123, 153, 179, 738], "aud_label": 123, "l_a1_roi": 123, "hcpmmp1_combin": [123, 179, 381], "aparc_sub": 123, "matthew": [123, 178, 240, 381], "glasser": [123, 240, 381], "timothi": [123, 240, 381, 871], "coalson": [123, 240, 381], "emma": [123, 240, 381, 550], "robinson": [123, 178, 240, 381], "hacker": [123, 240, 381], "harwel": [123, 240, 381], "essa": [123, 240, 381], "yacoub": [123, 240, 381], "kamil": [123, 240, 381], "ugurbil": [123, 240, 381], "jesper": [123, 240, 381, 871], "andersson": [123, 240, 381], "beckmann": [123, 240, 381], "jenkinson": [123, 240, 381], "stephen": [123, 178, 192, 222, 223, 240, 381, 409, 550, 677, 678, 680, 681, 720, 723, 871], "essen": [123, 240, 381], "modal": [123, 187, 226, 232, 240, 381], "cerebr": [123, 240, 381], "178": [123, 167, 181, 182, 183, 198, 222, 227, 240, 381], "nature18933": [123, 240, 381], "javeria": [123, 240], "hashmi": [123, 240], "fahimeh": [123, 240, 871], "mamashli": [123, 240, 871], "konstantino": [123, 240], "michmizo": [123, 240], "manfr": [123, 240, 871], "kitzbichl": [123, 240, 871], "santosh": [123, 240], "ganesan": [123, 240], "keri": [123, 240], "lee": [123, 132, 240, 266, 271, 550, 576, 871], "garel": [123, 240], "susan": [123, 240, 643], "whitfield": [123, 240], "gabri": [123, 240], "randi": [123, 240, 517], "gollub": [123, 240], "jian": [123, 240], "kong": [123, 240], "kunjan": [123, 240], "rana": [123, 240], "kenet": [123, 240], "matur": [123, 240], "trajectori": [123, 240], "network": [123, 192, 240, 292, 409, 550, 837, 841], "mediat": [123, 240, 720, 723], "018": [123, 125, 138, 147, 167, 219, 240, 565], "mccloi": [124, 206, 858, 871], "dan": [124, 206, 871], "mpl_toolkit": [124, 168, 203, 222, 227, 762], "axes_grid1": [124, 227, 762], "make_axes_locat": [124, 227], "imagegrid": 124, "inset_loc": [124, 762], "suppos": [124, 166, 203, 751, 853], "max_t": 124, "17909658": 124, "18448887": 124, "83197989": 124, "screenshot": [124, 170, 738, 808, 871], "pixel": [124, 140, 170, 222, 255, 257, 258, 260, 261, 262, 263, 267, 268, 269, 270, 271, 274, 275, 276, 403, 410, 462, 470, 471, 472, 549, 550, 690, 692, 694, 738, 754, 755, 766, 770, 777, 781, 790, 793, 796, 798, 800, 801, 826, 871], "integ": [124, 138, 140, 141, 143, 147, 148, 149, 158, 164, 166, 167, 169, 173, 187, 200, 202, 211, 212, 217, 227, 252, 255, 257, 260, 261, 262, 263, 265, 267, 268, 269, 270, 271, 273, 274, 275, 276, 279, 292, 293, 305, 308, 309, 316, 319, 322, 324, 349, 353, 354, 363, 364, 365, 403, 405, 410, 419, 420, 424, 425, 432, 441, 442, 445, 446, 447, 461, 466, 468, 469, 470, 471, 472, 502, 526, 527, 528, 549, 550, 552, 564, 565, 566, 567, 572, 575, 584, 586, 593, 602, 604, 608, 638, 640, 658, 676, 685, 690, 692, 693, 694, 698, 699, 700, 701, 702, 703, 709, 710, 722, 725, 755, 762, 768, 769, 770, 771, 772, 774, 775, 776, 777, 778, 781, 782, 783, 785, 787, 789, 790, 791, 792, 793, 798, 800, 826, 853, 856, 871], "nonwhite_pix": 124, "nonwhite_row": 124, "nonwhite_col": 124, "cropped_screenshot": 124, "nrows_ncol": 124, "axes_pad": 124, "updat": [124, 144, 168, 170, 177, 187, 197, 199, 204, 207, 211, 214, 237, 252, 255, 257, 260, 261, 262, 263, 265, 269, 284, 297, 360, 364, 366, 371, 372, 373, 374, 376, 377, 379, 380, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 406, 407, 409, 410, 411, 412, 413, 415, 416, 417, 438, 455, 466, 470, 471, 472, 491, 516, 551, 630, 634, 726, 738, 828, 830, 847, 852, 856, 871], "rcparam": [124, 135, 199, 871], "labels": 124, "titles": 124, "medium": [124, 154, 181, 252, 303, 859, 871], "height": [124, 252, 265, 267, 268, 271, 274, 275, 276, 304, 308, 316, 321, 462, 738, 747, 796, 801, 826, 871], "gridspec": [124, 262, 263, 777], "keyword": [124, 147, 153, 167, 170, 189, 199, 207, 236, 252, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 298, 299, 300, 301, 302, 303, 304, 307, 311, 312, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 405, 406, 408, 409, 413, 414, 416, 419, 420, 422, 424, 428, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 446, 447, 448, 453, 454, 458, 459, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 505, 506, 507, 508, 509, 510, 512, 513, 514, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 543, 546, 550, 552, 553, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 573, 574, 575, 576, 578, 579, 581, 582, 585, 586, 587, 590, 591, 592, 593, 597, 598, 599, 600, 601, 602, 604, 605, 606, 608, 609, 610, 612, 613, 614, 615, 616, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 635, 638, 639, 641, 642, 643, 644, 654, 655, 658, 660, 661, 662, 663, 664, 665, 666, 676, 677, 678, 679, 680, 681, 685, 686, 687, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 703, 707, 708, 709, 710, 714, 718, 719, 721, 722, 723, 724, 727, 728, 733, 736, 737, 738, 739, 746, 754, 755, 760, 763, 766, 770, 771, 772, 773, 778, 781, 782, 783, 788, 789, 791, 792, 794, 795, 796, 797, 801, 802, 803, 807, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 830, 846, 871], "subplot2grid": [124, 192], "inch": [124, 255, 257, 260, 261, 262, 263, 269, 403, 410, 470, 471, 472, 549, 690, 692, 694, 770, 777, 790, 793, 798, 800], "height_ratio": 124, "rowspan": 124, "bot": 124, "evoked_idx": 124, "brain_idx": 124, "peak_lin": 124, "66ccee": [124, 158], "columnspac": 124, "labelspac": 124, "fancybox": 124, "handlelength": 124, "n_ave": 124, "spine": [124, 179, 751, 762], "set_axisbelow": 124, "tick": [124, 237, 255, 257, 260, 261, 262, 263, 269, 470, 471, 472, 549, 550, 564, 690, 692, 694, 755, 762, 770, 774, 777, 781, 790, 793, 798, 799, 800, 871], "225": [124, 142, 167, 206, 222, 226, 227, 240, 847], "append_ax": [124, 227], "plot_brain_colorbar": [124, 861, 871], "get_posit": [124, 134, 307, 871], "ymax": [124, 200, 227, 232], "transfigur": 124, "fontweight": [124, 142, 207], "bold": [124, 142, 149, 197, 200, 203, 204, 205, 207, 208, 222], "va": [124, 158], "panel": [124, 132, 149, 154, 160, 168, 178, 237, 252, 262, 263, 462, 550, 738, 778, 782, 850], "outlin": [124, 158, 170, 174, 199, 237, 255, 257, 258, 260, 261, 262, 263, 269, 307, 403, 410, 470, 471, 472, 549, 550, 564, 593, 690, 692, 694, 755, 762, 766, 770, 772, 774, 775, 777, 778, 781, 788, 790, 792, 793, 794, 798, 800, 871], "familiar": [124, 142, 196, 832, 847], "to_plot": 124, "return_tim": [124, 211, 470, 471, 472], "\u00b5v": [124, 140, 142, 143, 147, 149, 164, 198, 204, 223, 252, 255, 257, 260, 261, 262, 263, 267, 268, 269, 270, 271, 274, 275, 276, 470, 471, 472, 506, 549, 550, 564, 690, 692, 694, 755, 768, 769, 770, 772, 774, 777, 781, 790, 791, 793, 798, 799, 800, 826, 853, 871], "1e6": [124, 139, 147, 149, 255, 257, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 349, 353, 354, 403, 410, 412, 470, 471, 472, 769, 772, 774, 776, 777, 799], "inset_ax": [124, 762], "plot_sensor": [124, 140, 149, 168, 180, 188, 214, 255, 260, 261, 262, 263, 470, 471, 472, 861, 871], "server": [124, 144, 164, 170, 200, 202, 211, 804, 834], "axin": 124, "edit": [124, 149, 167, 169, 197, 199, 202, 213, 240, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 672, 690, 693, 759, 807, 830, 834, 850, 871], "stai": [124, 142, 199, 200, 217, 219, 255, 260, 261, 262, 263, 470, 471, 472, 473, 639, 830], "intact": [124, 196, 211], "That": [124, 140, 142, 159, 160, 199, 227, 262, 263, 292, 293, 349, 353, 354, 363, 364, 365, 403, 410, 446, 447, 466, 468, 469, 528, 778, 853], "nice": [124, 142, 148, 167, 169, 211, 222, 237, 830, 853, 871], "But": [124, 141, 142, 170, 182, 199, 207, 217, 222, 230, 237, 550, 848], "big": [124, 186, 202, 412, 679, 848, 871], "tast": 124, "luckili": 124, "facet": [124, 158], "set_": 124, "get_children": 124, "line2d": 124, "0x7f6b7b393cd0": 124, "0x7f6b7b391ab0": 124, "0x7f6b7b391f00": 124, "0x7f6b7b393970": 124, "pathcollect": 124, "0x7f6b7b392440": 124, "0x7f6b7b6a0460": 124, "0x7f6b7b6a31f0": 124, "0x7f6b7b6a3e80": 124, "0x7f6b7b6a0ca0": 124, "0x7f6b7b6a0df0": 124, "yaxi": [124, 204], "0x7f6b7b6a15a0": 124, "rectangl": [124, 213, 690, 755], "0x7f6b18185db0": 124, "certainli": 124, "artistlist": 124, "sensor_dot": 124, "shrink": [124, 132, 197, 222, 223, 575, 850], "set_siz": 124, "publication_figur": [124, 127], "notat": [125, 203, 226, 232, 853], "odd": [125, 199, 319, 402, 853], "central": [125, 139], "make_1020_channel_select": [125, 223, 861, 871], "test_raw": [125, 166, 252], "read_raw_eeglab": [125, 166, 187, 477, 834, 853, 857, 861, 871], "fpz": [125, 168, 202, 255, 257, 260, 261, 262, 263, 269, 307, 403, 410, 470, 471, 472, 549, 550, 564, 690, 692, 694, 755, 762, 770, 772, 774, 777, 778, 781, 788, 790, 792, 793, 794, 798, 800, 871], "eog1": 125, "eog2": 125, "fc5": [125, 493], "t7": [125, 157, 168, 255, 257, 260, 261, 262, 263, 269, 307, 403, 410, 470, 471, 472, 493, 549, 550, 564, 690, 692, 694, 755, 762, 770, 772, 774, 777, 778, 781, 788, 790, 792, 793, 794, 798, 800, 871], "012": [125, 138, 147, 167, 214, 219], "cp5": [125, 493], "cp6": 125, "019": [125, 138, 147, 167, 205, 219, 240], "021": [125, 138, 139, 147, 164, 167, 219], "022": [125, 138, 147, 167, 182, 219], "023": [125, 138, 140, 147, 167, 219, 240], "024": [125, 138, 147, 167, 219, 227, 240, 677, 678, 680, 681], "po7": [125, 237], "026": [125, 138, 147, 167, 219, 240], "poz": [125, 237], "027": [125, 138, 147, 167, 219, 222, 240, 292, 550, 683, 684, 845], "028": [125, 138, 147, 167, 219, 240, 558, 720, 723], "029": [125, 138, 147, 167, 219, 240], "o2": [125, 157, 217, 237], "standard_1020": [125, 149, 157, 168, 217, 493], "fdt": [125, 166, 487, 602], "msec": [125, 149, 690], "new_ev": [125, 212, 429, 431, 515], "203125": 125, "midlin": [125, 132, 167, 168, 214, 223, 319], "12z": [125, 223], "group_bi": [125, 140, 223, 252, 255, 260, 261, 262, 263, 470, 471, 472, 768, 769, 774, 791, 871], "vline": [125, 262, 263, 762, 776, 871], "roi_erpimage_by_rt": [125, 127], "66067": 126, "109": [126, 135, 167, 202, 226, 227, 374, 847], "xscale": [126, 204, 255, 260, 261, 262, 263, 470, 471, 472, 692, 694, 792, 871], "wall": [126, 199, 200, 240, 677, 678], "shield": [126, 200, 240, 255, 260, 261, 262, 263, 265, 470, 471, 472, 547, 578, 690, 692, 693, 694, 853], "review": [126, 149, 176, 201, 202, 240, 549, 555, 830, 852], "scientif": [126, 240, 834, 835, 855], "instrument": [126, 176, 196, 202, 240], "056101": [126, 240], "1063": [126, 193, 207, 240, 561, 578], "4802845": [126, 240], "686": [126, 127, 141, 193, 227], "167": [126, 127, 167, 206, 222, 226, 227], "sensor_noise_level": [126, 127], "907": [127, 206], "auto_examples_visu": 127, "topo_custom": [127, 130], "662": [127, 130, 227], "ssp_projs_sensitivity_map": [127, 128], "696": [127, 128, 192], "xhemi": [127, 131, 272, 355, 615], "097": [127, 131], "topo_compare_condit": [127, 129], "ecg_fnam": 128, "ssp_ecg_map": 128, "arg": [128, 226, 232, 252, 265, 273, 672, 830], "plot_evoked_topo": [129, 148, 208, 861, 871], "audio": [129, 173, 189, 193, 235, 240, 255, 260, 261, 262, 263, 410, 470, 471, 472, 692, 693, 694, 708], "nleft": 129, "iter_topographi": [130, 861, 871], "20hz": 130, "return_freq": [130, 135, 235, 236, 237, 692, 694, 709, 710, 871], "my_callback": 130, "ch_idx": [130, 206, 224, 236], "fig_facecolor": [130, 140, 235, 255, 260, 261, 262, 263, 470, 471, 472, 690, 692, 694, 751, 799], "axis_facecolor": [130, 235, 255, 260, 261, 262, 263, 470, 471, 472, 692, 694, 751], "axis_spinecolor": [130, 751], "on_pick": [130, 751], "gcf": 130, "stc_path": [131, 170], "fsaverage_sym": [131, 355], "left_right": [131, 355], "stc_xhemi": 131, "70314401": 131, "48867635": 131, "29876034": 131, "involv": [132, 133, 134, 154, 156, 158, 196, 199, 200, 203, 213, 362, 552, 852, 853], "implant": [132, 240, 582], "reson": [132, 240, 853], "tomographi": [132, 240, 517, 826, 853], "greater": [132, 142, 164, 197, 202, 222, 225, 255, 260, 261, 272, 353, 444, 550, 575, 679, 693, 702, 720, 723, 811, 871], "intens": [132, 141, 158, 179, 180, 188, 202, 262, 263, 267, 268, 271, 274, 275, 276, 278, 526, 527, 738, 773, 796, 801, 811, 826, 871], "dipi": [132, 169, 272, 689, 727, 728, 811, 829], "pip": [132, 133, 134, 144, 159, 828, 830, 832, 835, 838], "conda": [132, 133, 134, 159, 828, 829, 830, 832, 835, 838, 871], "cite": [132, 135, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 382, 442, 470, 471, 472, 690, 693, 830, 847], "seeg": [132, 134, 136, 137, 163, 167, 211, 217, 255, 260, 261, 262, 263, 265, 273, 275, 306, 307, 311, 361, 365, 367, 432, 436, 455, 470, 471, 472, 477, 486, 546, 547, 548, 550, 620, 622, 635, 685, 690, 692, 693, 694, 738, 754, 760, 794, 826, 827, 837, 853, 871], "gui": [132, 155, 156, 158, 255, 260, 261, 267, 268, 271, 274, 275, 276, 303, 470, 471, 472, 550, 768, 785, 791, 796, 801, 828, 830, 834, 836, 837, 844, 846, 848, 850, 861, 871], "set_3d_backend": [132, 809, 828, 861, 871], "pyvistaqt": [132, 169, 267, 271, 275, 689, 748, 796, 803, 809, 828, 829, 871], "anterior": [132, 158, 266, 319, 667, 826, 853, 871], "commissur": [132, 134, 307], "posterior": [132, 134, 154, 158, 266, 307, 319, 466, 667, 826, 871], "aka": [132, 161, 163, 188], "sample_seeg_t1": 132, "cursor": [132, 739, 871], "long": [132, 135, 138, 139, 144, 196, 199, 200, 202, 206, 212, 213, 217, 223, 230, 231, 255, 258, 260, 261, 262, 263, 267, 268, 271, 272, 274, 275, 276, 349, 355, 470, 471, 472, 520, 553, 558, 578, 690, 692, 693, 694, 738, 830, 833, 834, 846, 852, 859, 871], "menu": [132, 170, 213, 833, 836, 854], "prefer": [132, 140, 149, 168, 169, 187, 188, 199, 202, 203, 255, 260, 261, 262, 263, 355, 410, 432, 451, 470, 471, 472, 550, 634, 692, 694, 792, 828, 830, 834, 836, 837, 849, 852, 853, 856], "pull": [132, 149, 203, 808, 826, 837, 852], "popup": 132, "Be": [132, 159, 211, 213, 262, 263, 775], "tkreg": 132, "until": [132, 140, 197, 198, 205, 208, 255, 258, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 462, 463, 470, 471, 472, 550, 553, 692, 694, 735, 738, 766, 768, 785, 791, 794, 830, 853], "crosshair": 132, "meet": [132, 199, 852], "pc": [132, 202], "transect": 132, "sample_seeg": [132, 133], "viewer": [132, 267, 268, 271, 274, 275, 276, 738, 796, 801, 826, 859, 871], "set_posit": [132, 262, 263, 777], "xytext": [132, 179], "arrowprop": [132, 179, 192], "headwidth": 132, "consum": [132, 200, 270, 560, 683, 871], "deform": [132, 158, 168, 240], "hour": [132, 153, 470, 471, 472, 550, 785, 791], "plan": [132, 196, 197, 200, 205, 427, 828, 834, 852], "proce": [132, 149, 255, 260, 396, 550, 553, 560, 747, 850], "my_data_directori": 132, "subjid": 132, "defac": 132, "cw256": 132, "scan": [132, 153, 164, 174, 178, 181, 207, 265, 383, 575, 811, 831, 834, 837, 842, 856, 859], "anonym": [132, 154, 255, 260, 261, 262, 263, 470, 471, 472, 473, 850, 871], "orig_defac": 132, "publish": [132, 203, 240, 550, 848], "mne_bid": [132, 134, 169], "write_anat": 132, "hardli": [132, 853], "misalign": [132, 144, 176, 482, 871], "stereotact": [132, 255, 260, 261, 262, 263, 470, 471, 472, 547, 548, 690, 692, 693, 694, 853, 871], "anteriolater": 132, "thresh": [132, 567, 571, 587, 677, 678, 680, 681, 738, 811], "apply_orient": 132, "asarrai": [132, 158, 226], "dataobj": [132, 154, 158, 180], "axcodes2ornt": 132, "aff2axcod": [132, 158], "float32": 132, "quantil": [132, 412], "squeez": [132, 139, 226, 227, 232], "grai": [132, 142, 154, 158, 170, 197, 207, 212, 224, 225, 226, 227, 232, 266, 461, 550, 595, 738, 753, 754, 762, 781], "gist_heat": 132, "invert_yaxi": 132, "ct_orig": 132, "sample_seeg_ct": 132, "world": [132, 154, 158, 170, 180, 199, 213, 224, 272, 446], "ct_resampl": 132, "moving_affin": 132, "static_affin": 132, "unalign": 132, "shear": [132, 728], "reg_affin": [132, 727, 728, 811], "compute_volume_registr": [132, 727, 861, 871], "4x4": [132, 273, 493, 641, 642, 643, 655], "99270756": 132, "03243313": 132, "11610254": 132, "094156": 132, "04374389": 132, "99439665": 132, "09623816": 132, "58320673": 132, "11233068": 132, "10061512": 132, "98856381": 132, "45551601": 132, "cval": [132, 727, 871], "ct_align": 132, "apply_volume_registr": [132, 861, 871], "failur": [132, 830, 871], "heat": 132, "navig": [132, 159, 211, 255, 260, 261, 270, 275, 276, 470, 471, 472, 768, 791, 802, 828, 834, 854], "toolbar": [132, 159, 738, 803], "lta": [132, 614], "realli": [132, 173], "rerun": 132, "manual_reg_affine_vox": 132, "read_lta": [132, 861], "sample_seeg_ct_aligned_manu": 132, "manual_reg_affin": 132, "starting_affin": [132, 728, 871], "hyperintens": [132, 811], "hypointens": [132, 811], "brighter": [132, 232], "subcutan": 132, "fat": 132, "ct_data": 132, "get_fdata": 132, "t1_data": 132, "bright": 132, "halfwai": [132, 756], "talairach": [132, 133, 158, 178, 179, 275, 276, 361, 362, 622, 802, 850, 853, 871], "get_mni_fiduci": [132, 158, 307, 361, 754, 861, 871], "subj_tran": 132, "nearbi": [132, 133, 134, 192, 196, 204, 207, 218, 240, 255, 257, 260, 261, 262, 263, 269, 470, 471, 472, 549, 564, 578, 685, 690, 692, 694, 755, 770, 777, 790, 793, 798, 800, 811], "video": [132, 154, 159, 855, 871], "associ": [132, 135, 142, 166, 170, 189, 196, 203, 204, 206, 222, 224, 240, 254, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 411, 454, 470, 471, 472, 512, 602, 604, 640, 672, 677, 682, 690, 693, 760, 768, 769, 771, 772, 774, 789, 790, 828, 830, 853, 856, 871], "sidebar": 132, "scroll": [132, 140, 164, 213, 214, 255, 258, 260, 261, 470, 471, 472, 550, 766, 768, 785, 791, 807, 871], "arrow": [132, 154, 158, 159, 176, 181, 196, 200, 203, 214, 255, 257, 258, 260, 261, 262, 263, 268, 269, 274, 275, 276, 403, 410, 470, 471, 472, 549, 550, 690, 692, 694, 738, 755, 766, 768, 769, 770, 774, 777, 780, 781, 790, 791, 793, 798, 801, 802, 853, 871], "snap": [132, 159, 871], "sample_seeg_ieeg": [132, 133], "locate_ieeg": [132, 861, 871], "1310640": [132, 133], "1370605": [132, 133], "t1_ecog": 132, "ct_orig_ecog": 132, "sample_ecog_ct": 132, "99982382": 132, "00414586": 132, "01830679": 132, "15413965": 132, "00549597": 132, "99721885": 132, "07432601": 132, "54316131": 132, "01794773": 132, "07441352": 132, "99706595": 132, "84162514": 132, "ct_aligned_ecog": 132, "raw_ecog": 132, "previous": [132, 147, 168, 201, 202, 252, 286, 292, 293, 628, 738, 871], "subj_trans_ecog": 132, "3024": [132, 315, 471, 853], "dura": [132, 850], "pressur": [132, 575], "craniotomi": [132, 575], "watershed_bem": [132, 156, 575, 837, 850, 853, 871], "flash_bem": [132, 156, 575, 837, 853, 871], "modif": [132, 188, 232, 325, 367, 837, 871], "view_kwarg": [132, 155, 158], "ieeg": [132, 134, 859, 860, 861, 871], "project_sensors_onto_brain": [132, 861, 871], "cvs_avg35_inmni152": 132, "subject_brain": 132, "template_brain": 132, "regist": [132, 252, 302, 727, 728, 811, 826, 852, 853], "sdr_morph": [132, 272, 727, 728, 811], "subject_brain_sdr": 132, "appl": [132, 833], "had": [132, 140, 149, 165, 166, 173, 179, 198, 199, 200, 203, 204, 214, 235, 237, 255, 260, 261, 397, 426, 569, 608, 693, 853, 871], "montage_warp": [132, 811], "elec_imag": 132, "warped_elec_imag": 132, "warp_montage_volum": [132, 861, 871], "subjects_dir_from": [132, 811], "subjects_dir_to": [132, 811], "dark2": 132, "degrad": 132, "inaccur": [132, 160, 211, 255, 257, 260, 261, 262, 263, 269, 349, 403, 410, 470, 471, 472, 549, 550, 564, 690, 692, 694, 755, 770, 777, 781, 790, 793, 798, 800, 846, 853], "add_estimated_fiduci": [132, 307, 871], "template_tran": 132, "compute_native_head_t": [132, 133, 157, 180, 307, 861, 871], "recomput": [132, 202, 205, 227, 444, 550, 576, 630, 871], "behind": [132, 154, 169, 192, 197, 202, 462, 757, 848], "scene": [132, 154, 158, 169, 192, 240, 252, 262, 263, 267, 268, 271, 274, 275, 276, 409, 462, 738, 744, 745, 747, 754, 773, 796, 801, 805, 806, 808, 828, 848, 871], "brittani": [132, 240], "stedelin": [132, 240], "alessandra": [132, 240], "mantovani": [132, 240], "ahm": [132, 240], "raslan": [132, 240], "nicol": [132, 240, 674, 871], "swann": [132, 240], "3897": [132, 240], "2022": [132, 167, 169, 240, 241, 647, 652], "21105": [132, 240], "joss": [132, 240], "03897": [132, 240], "liberti": [132, 134, 240, 871], "hamilton": [132, 134, 240, 871], "morgan": [132, 199, 240], "edward": [132, 240], "semi": [132, 202, 240, 564, 871], "neuroinformat": [132, 240], "octob": [132, 240, 650], "fninf": [132, 240], "00062": [132, 240], "967": [132, 137, 227], "1213": [132, 167, 206], "10_ieeg_loc": [132, 137], "stereoelectroencephalographi": [133, 847], "xfm": [133, 275, 276, 362, 622, 802, 853, 871], "li": [133, 134, 158, 170, 205, 240, 853, 858, 871], "adam2392": [133, 134], "fixat": 133, "isi": [133, 189], "mni_tal": [133, 134, 307], "this_subject_dir": 133, "head_mri_t": 133, "mri_mni_t": [133, 622], "read_talxfm": [133, 158, 861], "taliarach": 133, "fro": [133, 447, 726], "rostral": [133, 738], "warp": [133, 154, 157, 240, 811, 847, 871], "intracrani": [133, 136, 137, 163, 240, 265, 307, 311, 361, 362, 455, 463, 470, 471, 472, 477, 575, 727, 728, 738, 803, 811, 846, 847, 859, 860, 871], "contact": [133, 136, 137, 163, 196, 265, 307, 311, 327, 361, 362, 463, 470, 471, 477, 575, 727, 728, 738, 803, 811, 830, 847, 871], "combine_transform": 133, "atla": [133, 179, 240, 252, 258, 267, 268, 271, 273, 274, 275, 276, 304, 437, 505, 639, 826, 847, 850, 853, 859, 871], "get_montage_volume_label": [133, 738, 861, 871], "lami": [133, 463], "lttr": 133, "isdigit": 133, "lpm": 133, "lsma": 133, "elec": [133, 223], "plot_channel_labels_circl": [133, 861, 871], "lbri": 133, "rphp": 133, "lpli": 133, "lpcn": 133, "rahp": 133, "lacn": 133, "lent": 133, "lphg": 133, "lstg": 133, "lpit": 133, "lofc": 133, "ltpo": 133, "ctx": 133, "putamen": 133, "add_volume_label": [133, 179, 738, 871], "heatmap": [133, 207], "lfp": 133, "stc_near_sensor": [133, 134, 861, 871], "Its": [133, 206, 853], "view_layout": [133, 178, 267, 268, 271, 274, 275, 276, 738, 796, 801], "sagitt": [133, 158, 178, 258, 738, 756, 766], "add_data_kwarg": [133, 179, 267, 268, 271, 274, 275, 276, 796, 801], "colorbar_kwarg": [133, 179, 738], "label_font_s": [133, 179], "websit": [133, 134, 149, 175, 179, 187, 204, 396, 397, 564, 830, 833, 852], "m4": 133, "sai": [133, 134, 199, 200, 203, 205, 211, 217, 224, 227, 734, 830, 836, 846, 856], "689": [133, 137, 227], "477": [133, 137, 222, 227], "20_seeg": [133, 137], "epilepsi": [134, 871], "seizur": [134, 871], "complementari": [134, 198, 859], "libertyhamilton": 134, "bidspath": 134, "read_raw_bid": 134, "bids_root": 134, "epilepsy_ecog": [134, 861, 871], "bids_path": 134, "pt1": 134, "session": [134, 138, 140, 147, 148, 164, 169, 170, 197, 207, 213, 255, 260, 261, 369, 370, 470, 471, 472, 550, 768, 785, 791, 799, 828, 846, 850, 854, 871], "presurgeri": 134, "ictal": 134, "datatyp": [134, 871], "vhdr": [134, 168, 237, 436, 470, 471, 472, 596, 847, 853, 871], "emit": [134, 154, 206, 254, 255, 260, 261, 262, 263, 265, 267, 268, 270, 271, 274, 275, 276, 280, 281, 311, 334, 343, 344, 349, 353, 356, 358, 360, 363, 364, 422, 437, 450, 453, 470, 471, 472, 491, 550, 579, 598, 627, 629, 690, 692, 693, 694, 735, 771, 782, 817, 819, 826, 871], "trans_bandwidth": [134, 199, 439, 442, 470, 471, 472], "add_mni_fiduci": [134, 307, 871], "epoch_length": 134, "python_env": [134, 169, 202], "lib": [134, 202, 828, 836], "python3": [134, 202, 829, 871], "site": [134, 189, 201, 202, 207, 240, 265, 315, 471, 561, 569, 578, 830], "runtimewarn": [134, 169, 735], "digmontag": [134, 168, 180, 255, 260, 261, 262, 263, 265, 310, 311, 320, 323, 325, 326, 327, 328, 329, 330, 331, 332, 360, 455, 470, 471, 472, 483, 788, 808, 811, 826, 861, 871], "rq1": 134, "rq2": 134, "inst": [134, 170, 202, 252, 254, 255, 258, 259, 260, 261, 262, 263, 265, 267, 268, 270, 271, 274, 275, 276, 277, 307, 309, 353, 403, 404, 406, 407, 409, 410, 411, 412, 413, 415, 416, 417, 462, 470, 471, 472, 549, 550, 551, 558, 559, 568, 572, 577, 593, 632, 635, 644, 675, 690, 692, 693, 694, 709, 710, 721, 722, 723, 781, 782, 783, 785, 792, 871], "on_miss": [134, 255, 260, 261, 262, 263, 265, 280, 281, 311, 343, 344, 396, 430, 450, 470, 471, 472, 690, 692, 693, 694, 771, 871], "269079": 134, "2201": 134, "ad1": 134, "att1": 134, "ast1": 134, "g16": 134, "slt1": 134, "gamma_power_t": 134, "gamma_info": 134, "445": [134, 227], "funcanim": [134, 262, 263], "gamma_pow": 134, "x_line": 134, "epileptiform": 134, "progress": [134, 149, 163, 198, 240, 830, 871], "posteriorli": 134, "becom": [134, 139, 180, 198, 199, 201, 202, 207, 230, 231, 232, 255, 260, 261, 262, 263, 592, 759, 774, 830, 838, 852, 853, 871], "xyz_pt": 134, "vmid": 134, "intra": [134, 661], "4932": 134, "708": [134, 137, 227], "649": [134, 227], "30_ecog": [134, 137], "toi": [135, 222, 859], "answer": [135, 204, 227, 237, 830, 850], "question": [135, 139, 207, 237, 830, 833, 849, 851], "alic": 135, "tackl": 135, "chambon": [135, 240, 871], "stan": 135, "sleep_physionet": [135, 847, 861, 871], "fetch_data": [135, 847, 861, 871], "randomforestclassifi": 135, "accuracy_scor": 135, "functiontransform": 135, "ground": [135, 164, 204, 550, 789, 859], "truth": [135, 204, 550, 789], "expert": [135, 160, 830, 850, 852], "alice_fil": 135, "bob_fil": 135, "raw_train": 135, "marker": [135, 149, 166, 175, 186, 187, 192, 198, 203, 252, 255, 257, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 274, 275, 276, 278, 349, 350, 352, 354, 403, 406, 410, 413, 416, 419, 420, 446, 459, 461, 470, 471, 472, 474, 494, 509, 512, 513, 523, 524, 533, 534, 549, 550, 555, 562, 563, 564, 604, 638, 641, 642, 643, 655, 677, 678, 679, 680, 681, 690, 692, 694, 695, 696, 697, 698, 699, 700, 707, 708, 709, 710, 718, 719, 720, 721, 722, 755, 770, 773, 777, 781, 790, 791, 792, 793, 797, 798, 800, 847, 871], "temp": [135, 265], "rectal": 135, "annot_train": 135, "read_annot": [135, 213, 738, 861, 871], "emit_warn": [135, 254, 470, 471, 472, 579], "resp": [135, 167, 211, 255, 260, 261, 262, 263, 270, 306, 470, 471, 472, 486, 547, 690, 692, 693, 694, 768, 791, 853, 871], "physionet_sleep": 135, "sc4001e0": 135, "wake": 135, "rem": [135, 166], "abbrevi": [135, 173, 203, 738, 853, 871], "rapid": [135, 142, 192, 199, 240, 409], "awak": 135, "night": [135, 396, 847], "imbal": [135, 226, 560, 561, 569, 578, 589], "trim": [135, 255, 260, 261], "occurr": [135, 142, 196, 427, 429], "annotation_desc_2_event_id": 135, "redefin": 135, "events_train": 135, "chunk_dur": [135, 166, 432, 871], "stage_color": 135, "prop_cycl": 135, "by_kei": 135, "841": [135, 227], "188": [135, 167, 182, 222, 226, 227], "raw_test": 135, "annot_test": 135, "events_test": 135, "epochs_test": 135, "sc4011e0": 135, "1103": [135, 176, 240], "562": 135, "signatur": [135, 197, 226, 406, 413, 420, 830, 848, 871], "ci": [135, 144, 199, 208, 222, 235, 550, 669, 692, 694, 762, 783, 830, 871], "\u00b5v\u00b2": 135, "eeg_power_band": 135, "compat": [135, 142, 169, 174, 253, 255, 260, 261, 262, 263, 315, 357, 365, 379, 387, 409, 411, 414, 416, 417, 418, 443, 462, 470, 471, 472, 523, 550, 692, 694, 768, 770, 791, 792, 803, 828, 836, 838, 850, 853, 856, 871], "psds_band": 135, "boilerpl": 135, "sckit": 135, "manner": [135, 149, 176, 222, 223, 255, 260, 871], "thank": [135, 138, 830, 859], "pipe": [135, 830, 847], "n_estim": [135, 406, 413], "acc": 135, "6727107887579329": 135, "ye": [135, 206, 207, 222, 262, 471, 491, 608, 850, 871], "databas": [135, 240, 382, 396, 397], "mathieu": [135, 240, 871], "galtier": [135, 240], "pierrick": [135, 240], "arnal": [135, 240], "gill": [135, 240], "wainrib": [135, 240], "architectur": [135, 240, 871], "rehabilit": [135, 240], "758": [135, 227, 240], "769": [135, 192, 227, 240], "tnsre": [135, 240], "2813138": [135, 240], "kemp": [135, 240, 396, 397, 847], "zwinderman": [135, 240, 396, 397, 847], "tuk": [135, 240, 397, 847], "kamphuisen": [135, 240, 396, 397, 847], "obery\u00e9": [135, 240, 397, 847], "feedback": [135, 240, 397, 847, 871], "microcontinu": [135, 240, 397, 847], "1185": [135, 206, 240, 397, 847], "1194": [135, 206, 240, 397, 847], "867928": [135, 240, 397, 847], "959": [135, 137, 141, 206, 227], "60_sleep": [135, 137], "sleep": [136, 137, 163, 166, 240, 254, 255, 260, 265, 396, 397, 432, 470, 471, 486, 596, 692, 771, 826, 850, 871], "stage": [136, 137, 142, 153, 154, 163, 170, 189, 197, 199, 202, 203, 208, 213, 240, 254, 255, 260, 261, 262, 263, 265, 272, 355, 396, 432, 470, 471, 472, 486, 510, 564, 596, 601, 692, 728, 771, 826, 830, 837, 846, 847, 861, 871], "polysomnographi": [136, 137, 163, 254, 255, 260, 265, 396, 397, 432, 470, 471, 486, 596, 692, 771, 847, 871], "psg": [136, 137, 163, 254, 255, 260, 265, 396, 432, 470, 471, 486, 596, 692, 771, 847, 871], "323": [137, 167, 206, 207, 227], "auto_tutorials_clin": 137, "1212": [137, 167], "cover": [138, 145, 147, 149, 151, 153, 160, 161, 163, 164, 166, 169, 170, 171, 184, 190, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 211, 214, 215, 222, 233, 237, 238, 266, 270, 578, 586, 595, 674, 821, 830, 853, 854, 871], "possibli": [138, 147, 164, 170, 199, 224, 225, 262, 263, 272, 292, 293, 305, 349, 353, 354, 363, 364, 365, 379, 403, 410, 446, 447, 466, 468, 469, 528, 550, 568, 569, 672, 738, 778, 846, 871], "del_proj": [138, 147, 196, 203, 204, 205, 255, 260, 261, 262, 263, 470, 471, 472, 871], "plot_projs_topomap": [138, 140, 147, 204, 214, 255, 260, 261, 262, 263, 470, 471, 472, 789, 861, 871], "plot_psd_topomap": [138, 140, 235, 236, 255, 260, 261, 262, 263, 470, 471, 472, 871], "sample_data_fold": [138, 140, 143, 144, 153, 164, 165, 166, 167, 168, 196, 197, 198, 200, 202, 203, 204, 205, 207, 211, 212, 213, 214, 235], "sample_data_raw_fil": [138, 140, 143, 144, 164, 165, 166, 167, 196, 197, 198, 200, 202, 203, 204, 205, 207, 211, 212, 213, 214, 235], "sample_data_events_fil": [138, 143, 212], "events_from_fil": [138, 212], "bare": [138, 164], "299693": [138, 149], "699283": 138, "quot": [138, 192, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 690, 693, 830, 853], "didn": [138, 142, 260, 438, 693, 871], "string": [138, 141, 142, 143, 147, 148, 166, 167, 169, 170, 198, 211, 212, 213, 235, 253, 254, 255, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 279, 305, 307, 316, 322, 324, 335, 348, 349, 353, 354, 358, 363, 368, 371, 372, 373, 376, 377, 379, 384, 385, 387, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 401, 403, 405, 406, 410, 413, 419, 420, 424, 427, 432, 437, 438, 451, 453, 455, 463, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 505, 510, 513, 517, 523, 524, 547, 548, 549, 550, 552, 553, 564, 565, 566, 567, 569, 571, 572, 575, 578, 584, 586, 593, 602, 604, 608, 626, 646, 647, 648, 649, 650, 652, 655, 658, 667, 671, 673, 676, 685, 686, 690, 691, 692, 693, 694, 698, 699, 700, 701, 702, 703, 709, 710, 722, 726, 727, 728, 738, 746, 754, 755, 762, 768, 769, 770, 772, 774, 775, 776, 777, 778, 781, 782, 789, 790, 791, 792, 793, 796, 798, 800, 801, 802, 828, 829, 830, 845, 850, 856, 871], "event_dict": [138, 140, 143, 147, 149, 164, 166, 208, 212, 217, 235], "buttonpress": [138, 147, 149, 164, 166, 170, 212], "mention": [138, 142, 149, 164, 166, 167, 168, 173, 199, 203, 204, 205, 211, 227, 348, 830], "haven": [138, 213, 830, 854, 871], "turn": [138, 147, 148, 150, 173, 189, 197, 202, 203, 204, 205, 237, 253, 255, 260, 444, 507, 639, 739, 759, 847, 852, 853, 871], "accommod": [138, 871], "request": [138, 159, 164, 169, 170, 202, 204, 207, 211, 212, 255, 260, 261, 262, 263, 267, 268, 270, 271, 274, 275, 276, 402, 470, 471, 472, 550, 562, 563, 598, 635, 671, 673, 691, 692, 694, 747, 770, 779, 796, 801, 826, 836, 837, 850, 851, 852, 856, 871], "drop_log": [138, 140, 198, 255, 260, 261, 270, 562, 563, 693, 767, 871], "too_short": [138, 149, 260, 693], "forget": [138, 155, 156, 166, 830], "brows": [138, 170, 179, 197, 213, 255, 258, 260, 261, 470, 471, 472, 550, 766, 768, 785, 791, 842, 848, 871], "scrollbar": [138, 255, 260, 261, 470, 471, 472, 550, 768, 785, 791, 871], "focus": [138, 139, 179, 213, 255, 260, 261, 470, 471, 472, 550, 647, 652, 768, 785, 791, 830, 834, 837, 855], "screen": [138, 240, 252, 255, 260, 261, 470, 471, 472, 768, 791, 804, 871], "bracket": [138, 147, 149, 167, 187, 211, 217, 235, 871], "catch": [138, 140, 164, 179, 226, 232, 830], "charact": [138, 164, 167, 197, 211, 212, 319, 487, 501, 596, 602, 646, 647, 648, 649, 650, 652, 746, 830, 871], "tag": [138, 142, 149, 163, 238, 239, 240, 252, 255, 260, 261, 265, 270, 307, 323, 427, 432, 470, 481, 501, 547, 692, 693, 746, 800, 826, 830, 847, 859, 871], "complain": 138, "ask": [138, 142, 158, 830, 845, 847, 851, 852], "keyerror": [138, 255, 257, 260, 261, 265, 269, 284, 297, 516, 693, 726], "rais": [138, 142, 205, 255, 257, 260, 261, 262, 263, 265, 266, 269, 270, 271, 274, 280, 281, 284, 297, 311, 334, 337, 343, 344, 349, 353, 356, 358, 360, 363, 364, 396, 403, 410, 422, 430, 444, 450, 451, 453, 470, 471, 472, 491, 516, 539, 541, 549, 550, 564, 577, 598, 609, 627, 629, 636, 640, 677, 678, 680, 681, 690, 692, 693, 694, 726, 755, 770, 771, 777, 781, 782, 790, 793, 798, 800, 817, 819, 830, 852, 871], "reorder_channel": [138, 147, 211, 255, 260, 261, 262, 263, 470, 471, 472, 690, 692, 693, 694, 871], "exploratori": [138, 147, 165, 203, 211, 223, 848], "epochs_eeg": 138, "new_ord": [138, 147], "epochs_subset": 138, "032": [138, 147, 167, 192, 195, 219, 223, 240], "033": [138, 147, 167, 219], "034": [138, 147, 167, 219], "035": [138, 147, 167, 219], "037": [138, 147, 167, 211, 219], "038": [138, 147, 167, 219], "039": [138, 140, 147, 167, 219], "041": [138, 140, 147, 167, 219], "042": [138, 147, 167, 219, 853], "043": [138, 147, 167, 219], "045": [138, 140, 147, 167, 219], "046": [138, 140, 147, 167, 219, 240, 650, 853], "049": [138, 140, 147, 167, 219], "052": [138, 140, 147, 160, 167, 183, 197, 219, 240, 720, 723], "054": [138, 140, 147, 167, 205, 219, 240, 528, 647, 652], "055": [138, 140, 147, 167, 205, 219, 240, 382], "056": [138, 140, 147, 167, 219], "unchang": [138, 147, 203, 255, 260, 261, 262, 263, 470, 471, 472, 579, 630], "blinkchannel": 138, "20auditori": 138, "20buttonpress": 138, "4face": [138, 149], "4visual": 138, "19visual": 138, "shorter_epoch": 138, "include_tmax": [138, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 690, 693, 871], "obj": [138, 159, 621, 824, 871], "0998976": 138, "expand": [138, 142, 158, 198, 203, 255, 260, 261, 262, 263, 266, 271, 274, 349, 433, 436, 461, 470, 471, 472, 692, 694, 770, 850, 871], "later_epoch": 138, "tshift": [138, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 431, 470, 471, 472, 690, 693], "amount": [138, 139, 160, 165, 176, 197, 204, 205, 218, 237, 255, 257, 258, 259, 260, 261, 262, 263, 267, 268, 269, 270, 271, 274, 275, 276, 358, 368, 403, 410, 443, 470, 471, 472, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 510, 525, 549, 550, 587, 603, 690, 692, 693, 694, 768, 770, 777, 781, 790, 791, 793, 796, 798, 801, 850, 853, 871], "00166496": 138, "00332992": 138, "99833504": 138, "99667008": 138, "enforc": [138, 811, 871], "eog_data": 138, "channel_4_6_8": 138, "arr": [138, 211, 237, 669], "repeatedli": [138, 202, 204, 470, 471, 472, 836, 871], "hierarch": [138, 141, 142, 235, 240, 427, 466, 515, 826, 871], "multiindex": [138, 255, 260, 261, 690, 692, 693, 694], "aggreg": [138, 141, 143, 236, 255, 260, 261, 262, 263, 309, 427, 470, 471, 472, 690, 692, 694, 769, 770, 871], "endpoint": [138, 141, 166, 217, 255, 260, 261, 262, 263, 267, 268, 270, 271, 274, 275, 276, 283, 566, 608, 609], "sort_index": 138, "inplac": [138, 143, 254, 255, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 312, 428, 438, 470, 471, 472, 546, 592, 644, 830], "read_epochs_eeglab": [138, 187, 853, 857, 861, 871], "read_epochs_kit": [138, 186, 853, 861, 871], "audiovisu": [138, 164, 211], "epochs_from_fil": 138, "convent": [138, 158, 168, 170, 186, 188, 203, 204, 212, 240, 252, 265, 298, 319, 329, 488, 586, 609, 625, 709, 716, 738, 853, 856, 871], "basenam": [138, 212], "_epo": 138, "issu": [138, 139, 142, 149, 159, 192, 199, 200, 203, 212, 213, 255, 260, 261, 266, 271, 285, 287, 414, 470, 471, 472, 550, 585, 653, 656, 768, 785, 791, 826, 828, 830, 849, 851, 852, 859, 871], "adher": [138, 141, 353, 435], "epochsfif": [138, 141], "anyth": [138, 186, 202, 380, 738, 830], "baseepoch": [138, 550, 830, 861, 871], "ndarrai": [138, 211, 219, 237, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 279, 292, 293, 300, 316, 339, 345, 358, 360, 363, 402, 403, 404, 407, 410, 415, 419, 423, 429, 431, 439, 440, 441, 443, 446, 447, 448, 470, 471, 472, 474, 505, 525, 549, 550, 551, 558, 561, 562, 563, 564, 569, 573, 574, 576, 593, 614, 639, 640, 655, 669, 670, 671, 675, 676, 677, 678, 680, 681, 690, 691, 692, 693, 694, 703, 707, 708, 709, 710, 720, 721, 722, 727, 728, 738, 739, 742, 752, 755, 757, 770, 774, 776, 777, 779, 780, 793, 796, 797, 798, 800, 801, 802, 811, 819, 869, 871], "10_epochs_overview": [138, 146], "scalar": [139, 158, 178, 219, 255, 260, 261, 262, 263, 267, 268, 269, 271, 274, 275, 276, 286, 292, 293, 294, 470, 471, 472, 676, 692, 694, 738, 770, 777, 790, 796, 801, 871], "aldai": [139, 240, 871], "reason": [139, 147, 148, 160, 164, 169, 170, 182, 197, 198, 199, 200, 201, 203, 204, 205, 211, 213, 222, 231, 232, 240, 255, 258, 259, 260, 261, 262, 263, 267, 268, 270, 271, 274, 275, 276, 349, 365, 415, 470, 471, 472, 550, 562, 570, 573, 578, 677, 678, 680, 681, 683, 690, 693, 767, 804, 830, 846, 850, 852, 853, 871], "safer": [139, 267, 268, 271, 274, 275, 276, 483], "distort": [139, 187, 199, 214, 237, 483, 728], "spuriou": [139, 144, 160, 444, 850], "carina": [139, 871], "forster": [139, 871], "email": [139, 830, 836], "carinaforster0611": 139, "merge_ev": [139, 212, 349, 861, 871], "baseline_tmin": 139, "baseline_tmax": 139, "4957": [139, 149, 330], "trad_aud": 139, "trad_vi": 139, "heterogen": [139, 198, 871], "aud_predictor": 139, "vis_predictor": 139, "trickier": 139, "seaprat": 139, "baseline_predictor": 139, "singleton": [139, 738, 871], "\u03bcv": 139, "microvolt": [139, 186, 481, 853], "unstabl": [139, 160, 201, 349, 850, 871], "transpos": [139, 211, 222, 223, 227, 230, 231, 232, 856, 871], "reg_model": 139, "6254": 139, "lm": [139, 558], "namedtupl": [139, 675], "dict_kei": [139, 167, 203], "1998": [139, 147, 240, 853], "49949": [139, 147], "tell": [139, 148, 153, 160, 164, 169, 198, 202, 204, 211, 224, 226, 232, 273, 830, 833, 834, 849, 853], "strongli": [139, 170, 196, 197, 205, 470, 471, 472, 500, 828, 830, 846, 850, 853], "\u03b2": [139, 140, 214], "constant": [139, 154, 158, 168, 193, 196, 199, 237, 255, 260, 261, 262, 263, 265, 365, 470, 471, 472, 475, 502, 727, 847, 853, 871], "effect_of_baselin": 139, "unsurprisingli": 139, "farther": [139, 850], "weaker": [139, 255, 260, 261, 262, 263, 439, 441, 442, 470, 471, 472, 853], "pure": [139, 271, 830], "influenc": [139, 199, 201, 202, 240, 852], "reg_aud": 139, "reg_vi": 139, "show_sensor": [139, 142, 164, 762, 871], "truncate_yaxi": [139, 227, 762, 871], "subtl": 139, "apart": [139, 148, 166, 217], "diff_tradit": 139, "diff_regress": 139, "themselv": [139, 262, 263, 292, 293, 349, 353, 354, 363, 364, 365, 403, 410, 446, 447, 466, 468, 469, 528, 778, 852], "ought": 139, "persist": [139, 140, 196, 200, 850, 871], "interaction_effect": 139, "seem": [139, 142, 149, 160, 189, 199, 202, 204, 237, 550], "randomli": [139, 164, 222, 503, 576, 595, 656], "glm": [139, 240, 837], "lift": [139, 176, 193, 230, 232, 240], "psyp": [139, 149, 199, 227, 240, 676, 677, 678, 680, 681], "13451": [139, 240], "15_baseline_regress": [139, 146], "imagemap": 140, "discontinu": [140, 144, 145, 146, 149, 163, 166, 199, 202, 211, 212, 217, 235, 255, 260, 444, 471, 601, 602, 604, 605, 692, 694, 826], "enabl": [140, 170, 214, 237, 252, 253, 255, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 367, 462, 470, 471, 472, 564, 585, 637, 677, 678, 680, 681, 692, 693, 733, 738, 747, 751, 754, 773, 791, 796, 801, 804, 828, 836, 846, 852, 853, 871], "unappli": [140, 148, 203, 205, 255, 260, 261, 262, 263, 433, 434, 435, 436, 470, 471, 472, 871], "purg": 140, "catch_trials_and_buttonpress": 140, "pick_ev": [140, 212, 861], "event_color": [140, 212, 255, 260, 261, 470, 471, 472, 768, 791, 871], "butterfli": [140, 147, 149, 150, 170, 197, 203, 207, 214, 255, 260, 261, 262, 263, 270, 470, 471, 472, 550, 768, 772, 775, 782, 791, 807, 857, 871], "ecg_proj_fil": [140, 203], "ecg_proj": [140, 144, 203, 204], "41auditori": 140, "40button": 140, "8face": 140, "8visual": 140, "40visual": 140, "inherit": [140, 235, 349], "joint": [140, 180, 204, 240, 255, 260, 261, 262, 263, 269, 470, 471, 472, 635, 692, 694, 770, 777, 790, 859, 871], "epochsspectrum": [140, 163, 238, 239, 255, 260, 261, 262, 263, 444, 470, 471, 694, 707, 708, 709, 710, 733, 861, 871], "\u03b4": [140, 214], "\u03b8": [140, 214], "\u03b3": [140, 214], "api": [140, 167, 193, 214, 222, 235, 404, 538, 738, 747, 751, 838, 842, 854], "jointli": [140, 160, 202, 204, 255, 260, 261, 262, 263, 269, 292, 293, 350, 351, 352, 470, 471, 472, 550, 562, 563, 692, 694, 770, 777, 789, 790, 850, 871], "untransform": 140, "docstr": [140, 149, 178, 199, 200, 207, 211, 214, 235, 261, 279, 292, 293, 466, 468, 469, 528, 692, 734, 736, 753, 871], "plot_topo_imag": [140, 255, 260, 261, 871], "accompani": [140, 655, 852], "scalebar": [140, 871], "highli": [140, 186, 204, 218, 226, 490, 603, 607, 676, 834], "customiz": [140, 262, 263, 690, 775], "respond": [140, 142, 192, 852], "opposit": [140, 166, 505, 853], "0242": [140, 167], "pop": [140, 148, 197, 255, 257, 260, 261, 265, 269, 284, 297, 516, 726, 799, 828, 871], "At": [140, 189, 201, 202, 208, 315, 471, 830, 836, 846, 871], "fullscreen": [140, 462, 871], "unusu": [140, 182, 197, 201], "reject_criteria": [140, 143, 149, 164, 198, 208], "3000e": [140, 143, 198], "find_layout": [140, 168, 861, 871], "font_color": [140, 255, 260, 261, 690, 799], "reinforc": 140, "disguis": 140, "mayb": [140, 255, 259, 260, 261, 262, 263, 470, 471, 472, 547, 690, 692, 693, 694], "20_visualize_epoch": [140, 146], "who": [141, 252, 265, 550, 830, 834, 847, 852, 871], "lexic": [141, 847], "decis": [141, 189, 199, 237, 255, 260, 407, 510, 601, 847], "kiloword_data_fold": 141, "kiloword_data_fil": 141, "capabl": [141, 153, 164, 166, 370, 738, 803, 807, 809, 810, 828, 830, 834, 837, 847, 871], "surviv": [141, 265], "reload": 141, "attach": [141, 167, 197, 211, 223, 235, 427, 826], "numberoflett": [141, 223], "english": [141, 847], "lexicon": 141, "wordfrequ": 141, "render": [141, 154, 158, 170, 252, 255, 260, 261, 267, 268, 270, 271, 274, 275, 276, 462, 470, 471, 472, 550, 690, 738, 747, 768, 785, 791, 796, 797, 801, 804, 806, 830, 836, 853, 854, 871], "orthographicdist": 141, "bigramfrequ": 141, "consonantvowelproport": 141, "450000": 141, "189490": 141, "900000": 141, "700704": 141, "546": [141, 206, 227], "600000": 141, "858537": 141, "700000": 141, "454540": 141, "1095": 141, "539076": 141, "drudgeri": 141, "473684": 141, "556303": 141, "732357": 141, "991226": 141, "859": [141, 206, 227], "545879": 141, "957": [141, 167, 172], "billiard": 141, "500000": [141, 142, 192], "672098": 141, "838597": 141, "958": [141, 223, 227], "698970": 141, "615": [141, 193, 218, 221], "088112": 141, "solenoid": 141, "111111": 141, "301030": 141, "443": [141, 227, 240], "544507": 141, "iloc": [141, 143], "iat": 141, "nindex": 141, "arbitrarili": [141, 156, 227, 853], "highcomplex": 141, "startswith": [141, 871], "district": 141, "disarrai": 141, "disast": 141, "diseas": 141, "discord": 141, "dispos": 141, "lasso": [141, 240, 255, 260, 261, 262, 263, 470, 471, 472, 768, 791, 794, 871], "tentacl": 141, "banjo": 141, "corsag": 141, "fall": [141, 149, 166, 169, 207, 213, 253, 270, 360, 397, 427, 444, 552, 826, 853, 871], "rich": [141, 828, 834], "typhoon": 141, "bungalow": 141, "colossu": 141, "linguist": 141, "dozen": [141, 197, 202, 204, 848], "share": [141, 188, 199, 213, 254, 292, 592, 677, 678, 680, 681, 830, 848, 853, 856, 859, 871], "letter": [141, 168, 186, 223, 240, 738, 871], "n_letter": 141, "sort_ord": 141, "obviou": [141, 169, 197, 202, 214, 230], "reaction": [141, 222, 255, 260, 261, 769, 871], "new_metadata": 141, "foo": [141, 148, 169, 255, 260, 261, 379, 693, 830], "30_epochs_metadata": [141, 146], "eriksen": 142, "flanker": [142, 847], "wish": [142, 169, 188, 205, 223, 224, 230, 358, 470, 471, 472, 569, 739, 741, 830, 838, 852], "introductori": [142, 148, 160, 166, 167, 196, 211, 212, 222, 850], "straight": [142, 255, 260, 261, 262, 263, 470, 471, 472, 794], "creation": [142, 147, 153, 166, 198, 213, 252, 254, 255, 257, 260, 261, 270, 273, 303, 402, 562, 563, 853, 871], "ourselv": [142, 173, 201, 202, 204], "incorrect": [142, 174, 198, 199, 240, 828, 853, 871], "sophist": [142, 187, 445], "erp_cor": [142, 847, 861], "infil": 142, "core_subject": 142, "001_task": 142, "flankers_eeg": 142, "all_ev": 142, "all_event_id": 142, "935935": 142, "33793": 142, "target_left": 142, "target_right": 142, "incompat": [142, 612, 618, 828, 871], "decid": [142, 208, 237, 255, 260, 261, 443, 510, 601, 767, 852], "1500": [142, 192], "invalid": [142, 224, 871], "metadata_tmin": 142, "metadata_tmax": 142, "why": [142, 149, 156, 158, 198, 199, 203, 211, 219, 222, 226, 240, 720, 723, 852], "event_nam": [142, 227, 427, 430], "551758": 142, "997070": 142, "434570": 142, "797": [142, 227], "343750": 142, "917969": 142, "425781": 142, "416016": 142, "392578": 142, "990234": 142, "402344": 142, "802": [142, 227], "eleg": 142, "row_ev": [142, 427], "pertain": 142, "sync": [142, 254, 265, 432, 488, 592], "508789": 142, "00000": 142, "503906": 142, "449219": 142, "542969": 142, "496094": 142, "794": [142, 206, 227], "437500": 142, "465820": 142, "796": [142, 181, 185, 227], "547852": 142, "46582": 142, "descriptor": [142, 164, 235, 240, 427, 470, 471, 472, 826], "hed": [142, 149, 235, 240, 427, 826], "inspir": [142, 427, 442, 728, 830, 869], "keep_first": [142, 427], "regardless": [142, 149, 169, 188, 201, 204, 444, 789, 826], "first_respons": [142, 427], "notna": 142, "411133": 142, "454102": 142, "443359": 142, "466797": 142, "400391": 142, "499023": 142, "584961": 142, "226": [142, 167, 182, 222, 227, 871], "421875": 142, "450195": 142, "399414": 142, "316406": 142, "316": [142, 167, 192, 206, 227, 240, 409], "416992": 142, "344": [142, 167, 222, 227], "386719": 142, "410156": 142, "467773": 142, "416": [142, 169, 222, 227], "377930": 142, "483398": 142, "454": [142, 206, 222, 273], "457031": 142, "566406": 142, "395508": 142, "354492": 142, "516": [142, 156, 227], "326172": 142, "432617": 142, "322266": 142, "482422": 142, "484375": 142, "371094": 142, "342773": 142, "704": [142, 227], "307617": 142, "706": [142, 227], "442383": 142, "728": 142, "376953": 142, "first_stimulu": 142, "perfect": [142, 156, 199, 207], "stimulus_sid": 142, "response_correct": 142, "correct_response_count": 142, "rememb": [142, 148, 159, 169, 174, 197, 202, 203, 211, 227, 853], "epochs_tmin": 142, "epochs_tmax": 142, "strong": [142, 181, 197, 202, 226, 550, 647, 652, 846], "099609375": 142, "f8": [142, 157], "fp2": [142, 157, 217, 330, 439, 442, 567, 571], "fp1": [142, 157, 205, 217, 330, 439, 442, 479, 486, 567, 571], "lastli": [142, 170, 206, 208, 236, 237, 830], "vis_erp": 142, "vis_erp_slow": 142, "40_autogenerate_metadata": [142, 146], "276": [142, 167, 222, 227], "userwarn": [142, 174], "asid": [142, 170, 196, 232], "fact": [142, 147, 149, 179, 180, 196, 202, 203, 207, 212, 409, 415, 550, 608, 826, 846, 853], "noisier": [142, 189], "deal": [142, 160, 169, 178, 199, 202, 203, 205, 212, 222, 226, 230, 232, 262, 263, 267, 268, 271, 274, 275, 276, 292, 293, 447, 550, 561, 569, 578, 592, 859, 871], "keep_last": [142, 427], "last_": [142, 427], "last_stimulu": 142, "last_respons": 142, "431641": 142, "795": [142, 227], "576172": 142, "puls": [142, 144, 164, 166, 196, 202, 204, 212, 570, 573, 853], "f7": [142, 157, 330, 493], "c5": [142, 493], "cpz": 142, "isna": 142, "bummer": 142, "impress": 142, "resp_erp_correct": 142, "resp_erp_incorrect": 142, "deflect": [142, 196, 203, 204, 871], "immedi": [142, 154, 166, 197, 202, 205, 237, 253, 420, 470, 471, 472, 553, 601, 662, 665, 747, 791, 826, 830, 852, 853, 871], "doubt": 142, "resp_erp_diff": 142, "bolder": 142, "set_linewidth": 142, "trough_time_idx": 142, "trough_tim": 142, "emili": [142, 199, 240, 847, 871], "kappenman": [142, 199, 240, 847], "jaclyn": [142, 240, 847], "farren": [142, 240, 847], "wendi": [142, 192, 240, 409, 847], "zhang": [142, 240, 847, 853, 871], "andrew": [142, 178, 240, 550, 679, 709, 847, 871], "stewart": [142, 240, 847], "luck": [142, 149, 199, 240, 847], "117465": [142, 240, 847], "nima": [142, 240, 427], "bigd": [142, 240, 427], "shamlo": [142, 240, 427], "kreutz": [142, 240, 427], "delgado": [142, 240, 427], "robbin": [142, 240, 427], "makoto": [142, 240, 427], "miyakoshi": [142, 240, 427], "marissa": [142, 240, 427], "westerfield": [142, 240, 427], "tarik": [142, 240, 427], "bel": [142, 240, 427], "bahar": [142, 240, 427], "koth": [142, 240, 427], "jessica": [142, 240, 427], "hsi": [142, 240, 427], "globalsip": [142, 240, 427], "6736796": [142, 240, 427], "193": [142, 146, 167, 226, 227, 871], "workflow": [143, 153, 198, 847, 849, 871], "200e": [143, 149, 198], "0113": [143, 164, 167, 211], "0112": [143, 164, 167, 211], "0122": [143, 164, 167, 211, 236], "0132": [143, 167], "199795": 143, "320252": 143, "567619": 143, "248584": 143, "609895": 143, "700540": 143, "352746": 143, "908667": 143, "193135": 143, "049675": 143, "702938": 143, "168267": 143, "480975": 143, "182237": 143, "225684": 143, "072452": 143, "186476": 143, "283711": 143, "006895": 143, "912317": 143, "130290": 143, "157198": 143, "842466": 143, "986073": 143, "179816": 143, "040471": 143, "643716": 143, "835772": 143, "517952": 143, "214631": 143, "043144": 143, "672744": 143, "173156": 143, "688943": 143, "974112": 143, "561683": 143, "450115": 143, "778315": 143, "795987": 143, "277138": 143, "timedelta": [143, 213, 255, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 690, 693], "132025e": 143, "156762e": 143, "324858e": 143, "060990e": 143, "870054e": 143, "835275e": 143, "790867e": 143, "049675e": 143, "702938e": 143, "416827e": 143, "748098e": 143, "018224e": 143, "212257e": 143, "072452e": 143, "283711e": 143, "300690e": 143, "691232e": 143, "213029e": 143, "515720e": 143, "178425e": 143, "986073e": 143, "304047e": 143, "643716e": 143, "783577e": 143, "851795e": 143, "521463e": 143, "204314e": 143, "672744e": 143, "568894e": 143, "974112e": 143, "556168e": 143, "450115e": 143, "377831e": 143, "117960e": 143, "727714e": 143, "0133": [143, 167], "dai": [143, 204, 252, 255, 260, 261, 262, 263, 265, 470, 471, 472, 473], "800204787": 143, "379736": 143, "123525": 143, "806864627": 143, "734826": 143, "339465": 143, "813524468": 143, "996158": 143, "627037": 143, "820184308": 143, "748030": 143, "024973": 143, "826844149": 143, "123811": 143, "917677": 143, "pivot": [143, 258, 766, 797], "long_df": [143, 223], "coupl": [143, 208, 211, 232, 406, 582, 837, 855, 871], "1342": [143, 167, 230, 232], "categorydtyp": 143, "nicer": [143, 203, 871], "hue": 143, "peak_lat": 143, "regex": [143, 871], "2123": [143, 167], "idxmax": 143, "melt": 143, "id_var": 143, "var_nam": 143, "value_nam": 143, "satur": [143, 498], "50_epochs_to_data_fram": [143, 146], "equidistantli": 144, "consecut": [144, 166, 230, 267, 268, 271, 274, 275, 276, 444, 510, 552, 553, 871], "briefli": [144, 149, 199, 214, 222], "hous": 144, "compute_proj_ecg": [144, 203, 204, 566, 570, 846, 861, 871], "envelope_correl": [144, 871], "manag": [144, 164, 169, 170, 255, 260, 261, 262, 263, 266, 267, 268, 270, 271, 274, 275, 276, 278, 349, 350, 352, 354, 406, 413, 416, 419, 420, 446, 459, 461, 470, 471, 472, 509, 512, 513, 523, 524, 533, 534, 539, 550, 555, 562, 563, 638, 641, 642, 643, 655, 677, 678, 679, 680, 681, 692, 694, 695, 696, 697, 698, 699, 700, 707, 708, 709, 710, 718, 719, 720, 721, 722, 732, 733, 768, 770, 773, 785, 791, 792, 828, 830, 835, 837, 852, 859, 871], "chan": [144, 251, 670], "221": [144, 167, 222, 226, 227], "heart": [144, 196, 201, 240, 720, 723, 871], "beat": [144, 208, 562, 570, 573, 642], "onpca": 144, "onecg": 144, "make_fixed_length_epoch": [144, 255, 861, 871], "unsuit": [144, 871], "event_related_plot": 144, "1142": [144, 167, 192], "n_sensor": [144, 236, 267, 271, 275], "alpha_data": 144, "1530": [144, 192], "epochconnect": 144, "corr_matrix": 144, "first_30": 144, "last_30": 144, "corr_matric": 144, "color_lim": 144, "mpbl": 144, "285": [144, 146, 167, 185, 206, 227], "60_make_fixed_length_epoch": [144, 146], "auto_tutorials_epoch": 146, "raw_fil": [147, 149], "happen": [147, 149, 154, 158, 159, 165, 166, 169, 193, 198, 200, 202, 222, 253, 255, 260, 261, 312, 426, 428, 826, 830, 847, 850, 852, 856, 871], "discuss": [147, 149, 154, 163, 164, 166, 171, 189, 193, 196, 199, 200, 211, 214, 222, 227, 237, 240, 693, 829, 830, 847, 849, 850, 852, 853, 871], "transfer": [147, 193, 197, 199, 579, 826, 846], "maintain": [147, 197, 222, 255, 260, 261, 262, 263, 470, 471, 472, 473, 541, 830, 849, 852, 853, 871], "proven": [147, 871], "never": [147, 255, 260, 261, 313, 568, 756, 830, 853, 871], "72160572e": 147, "57859354e": 147, "98040833e": 147, "75128428e": 147, "15309907e": 147, "83186429e": 147, "bewar": [147, 158, 853], "evoked_subset": 147, "repair": [147, 163, 164, 196, 197, 198, 203, 207, 209, 210, 214, 240, 255, 260, 262, 263, 265, 352, 444, 470, 471, 486, 544, 547, 549, 550, 562, 563, 564, 566, 567, 585, 586, 789, 790, 810, 846, 871], "evk_fil": [147, 148], "evokeds_list": [147, 148], "right_vi": 147, "remedi": 147, "left_right_aud": 147, "6992832460543575": [147, 149], "fairli": [147, 164, 196, 198, 199, 200, 202, 204, 205], "left_aud": 147, "right_aud": 147, "proport": [147, 222, 267, 268, 269, 271, 274, 275, 276, 348, 360, 469, 550, 558, 796, 801, 853, 871], "grand_averag": [147, 149, 861, 871], "intend": [147, 169, 207, 212, 253, 255, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 427, 470, 471, 472, 550, 579, 585, 837], "standard_error": [147, 255, 260, 261, 262, 263, 608, 871], "iter_evok": [147, 149, 255, 260, 261, 871], "ix": [147, 149], "return_amplitud": [147, 149, 262, 263], "10_evoked_overview": [147, 152], "life": [148, 852], "evk": [148, 149], "superimpos": [148, 170, 196, 214, 550, 739, 782], "timeseri": [148, 219, 255, 260, 261, 262, 263, 470, 471, 472, 657, 691], "resembl": [148, 160, 173, 517, 573, 574], "wing": 148, "behav": [148, 199, 211, 264, 265, 432, 871], "time_ranges_of_interest": 148, "drag": [148, 149, 159, 213, 255, 257, 260, 261, 262, 263, 269, 403, 410, 470, 471, 472, 549, 550, 690, 692, 694, 769, 770, 774, 777, 781, 790, 792, 793, 798, 800, 828, 848], "averaging_dur": 148, "augment": [148, 856], "custom_func": 148, "0x7f6b78a813f0": 148, "substr": [148, 613, 625, 871], "action": [148, 169, 830, 856, 859], "ambigu": [148, 268, 274, 276, 871], "temp_list": 148, "_comment": 148, "_evk": 148, "overhead": [148, 637, 733, 871], "trans_fil": 148, "00097": 148, "meg_surf": [148, 509], "_map": 148, "166": [148, 167, 199, 206, 222, 227, 232, 240], "20_visualize_evok": [148, 152], "materi": [149, 160, 830, 850], "link": [149, 187, 240, 267, 271, 275, 438, 752, 796, 830, 836, 850, 853, 859, 871], "events_fil": [149, 198], "discard": [149, 197, 202, 203, 204, 207, 232, 577, 578, 605, 871], "last_samp": [149, 265, 357, 470, 471, 472, 826, 871], "13514": 149, "mislabel": 149, "renam": [149, 187, 208, 211, 254, 255, 260, 261, 262, 263, 307, 335, 470, 471, 472, 479, 486, 626, 738, 748, 803, 830, 838, 871], "lowercas": 149, "channel_renaming_dict": [149, 211], "schemat": 149, "diagram": [149, 202, 826], "addition": [149, 169, 188, 196, 203, 213, 235, 251, 268, 274, 276, 313, 324, 636, 801, 830, 845, 855], "realist": [149, 240, 846, 853], "dedic": [149, 196, 202, 204, 211, 470, 471, 472, 791, 830, 834, 852, 860, 871], "use_browser_backend": [149, 197, 200, 202, 203, 204, 205, 255, 260, 261, 470, 471, 472, 550, 768, 785, 791, 861, 871], "xx": [149, 197, 200, 203, 204, 205, 254, 830], "qt": [149, 169, 170, 197, 200, 202, 203, 204, 205, 255, 260, 261, 470, 471, 472, 550, 738, 768, 785, 791, 807, 810, 828, 850, 871], "scheme": [149, 186, 217, 226, 255, 257, 260, 261, 262, 263, 269, 403, 410, 419, 470, 471, 472, 549, 550, 564, 632, 635, 671, 690, 692, 694, 755, 768, 770, 777, 781, 790, 793, 794, 798, 800, 830, 853, 871], "eeg53": 149, "eog61": 149, "chose": 149, "consol": [149, 834, 871], "duplic": [149, 159, 255, 260, 261, 262, 263, 266, 270, 307, 335, 470, 471, 472, 626, 871], "eeg03": 149, "eeg01": 149, "eeg02": 149, "eeg04": 149, "eeg06": 149, "eeg07": 149, "eeg25": 149, "25auditori": 149, "27buttonpress": 149, "5visual": 149, "28visual": 149, "barplot": [149, 202], "lose": [149, 187, 213, 850], "plot_drop_log": [149, 198, 208, 255, 260, 261, 861, 871], "break": [149, 163, 209, 210, 213, 254, 255, 260, 262, 265, 354, 470, 471, 547, 550, 553, 566, 567, 570, 571, 605, 710, 824, 830, 846, 871], "l_aud": [149, 232], "l_vi": [149, 232], "fig1": [149, 168], "speak": [149, 165, 166, 201, 838], "agreement": [149, 852], "warrant": 149, "popul": [149, 153, 163, 217, 220, 225, 240, 261, 263, 367, 403, 435, 472, 579, 672, 734, 826, 871], "leverag": [149, 852], "verifi": [149, 180, 237, 835, 836, 853], "plain": [149, 201, 237, 327, 816], "ddof": [149, 160, 850], "lime": 149, "revisit": [149, 240, 403], "eeg17": 149, "eeg18": 149, "eeg26": 149, "eeg23": 149, "eeg24": 149, "eeg34": 149, "eeg35": 149, "left_ix": 149, "right_ix": 149, "roi_dict": 149, "left_roi": [149, 255, 260, 261, 262, 263, 769, 774], "right_roi": [149, 255, 260, 261, 262, 263, 769, 774], "roi_evok": 149, "combine_channel": [149, 861, 871], "aud_minus_vi": 149, "29969": 149, "69928": 149, "weak": [149, 202], "chapter": 149, "erplab": [149, 240], "consequ": [149, 160, 167, 207, 350, 351, 352, 432, 443, 488, 537, 850, 853, 871], "voltag": [149, 164, 166, 186, 187, 205, 212, 494, 826, 871], "p100": 149, "submit": [149, 223, 689, 830, 852], "amp": [149, 176, 181, 183, 252, 871], "throughout": [149, 169, 208, 550, 847], "remaind": 149, "print_peak_measur": 149, "3f": [149, 207, 223, 227, 237, 255, 260, 261, 262, 263, 470, 471, 472, 692, 694, 770, 777], "good_tmin": 149, "good_tmax": 149, "eeg55": 149, "578": [149, 193, 227], "priori": [149, 237, 853], "believ": [149, 237, 830, 853], "eeg59": 149, "fist": 149, "l_vis_roi": 149, "ch_roi": 149, "lat_roi": 149, "amp_roi": 149, "FOR": 149, "ONE": [149, 155, 193, 240], "713": 149, "suscept": [149, 200, 569], "challeng": [149, 850, 859], "meth": [149, 170, 830, 871], "guarante": [149, 186, 197, 202, 205, 207, 222, 255, 260, 261, 262, 263, 433, 434, 435, 436, 470, 471, 472, 500, 871], "rise": [149, 487, 596, 602, 826], "crucial": [149, 154, 196, 230], "095": [149, 168, 255, 257, 260, 261, 262, 263, 269, 307, 325, 403, 410, 470, 471, 472, 549, 550, 564, 690, 692, 694, 755, 762, 770, 772, 774, 777, 778, 781, 788, 790, 792, 793, 794, 798, 800, 871], "bad_tmin": 149, "bad_tmax": 149, "bad_lat_roi": 149, "bad_amp_roi": 149, "487": [149, 165, 172], "unclear": [149, 830], "truli": [149, 199, 677], "pink": [149, 154, 754, 826], "star": 149, "yourself": [149, 154, 167, 196, 200, 211, 252, 262, 263, 482, 777, 830], "c6": 149, "act": [149, 167, 200, 201, 203, 207, 255, 260, 261, 262, 263, 273, 292, 293, 342, 466, 468, 469, 470, 471, 472, 528, 578, 635, 693, 826, 848, 850, 852, 871], "eeg54": 149, "eeg57": 149, "l_vis_mean_roi": 149, "mean_amp_roi": 149, "mean_amp_roi_df": 149, "mean_amp": 149, "numeric_onli": 149, "279764": 149, "685840": 149, "reiter": 149, "hypothes": [149, 222, 223, 859], "l_vis_crop": 149, "mean_amp_al": 149, "mean_amp_all_df": 149, "option_context": 149, "max_column": 149, "689513": 149, "078492": 149, "381191": 149, "609264": 149, "eeg05": 149, "113717": 149, "eeg56": 149, "064174": 149, "259681": 149, "eeg58": 149, "156472": 149, "802306": 149, "eeg60": 149, "878811": 149, "dietrich": [149, 240, 517, 853], "lehmann": [149, 240, 517, 853], "wolfgang": [149, 240, 720, 723], "skrandi": [149, 240], "identif": [149, 202, 240, 564], "checkerboard": [149, 164, 237, 240, 847], "621": [149, 227, 240], "90419": [149, 240], "neurobiologi": [149, 240], "1984": [149, 240], "0301": [149, 240], "0082": [149, 240], "90003": [149, 240], "micah": [149, 240], "brunet": [149, 240], "michel": [149, 183, 240, 382, 550, 650], "s10548": [149, 205, 240, 565, 655], "0054": [149, 240], "ma": [149, 240], "52585": [149, 240], "mitpress": [149, 240], "book": [149, 240, 442, 830], "javier": [149, 240], "lopez": [149, 240], "calderon": [149, 240], "00213": [149, 240], "preclud": [149, 199, 207, 240, 578], "00131": [149, 199, 240], "rufin": [149, 199, 240], "vanrullen": [149, 199, 240], "fallaci": [149, 199, 240], "00365": [149, 199, 240], "nichola": [149, 240], "gaspelin": [149, 240], "12639": [149, 240], "779": [149, 152, 193, 227], "30_eeg_erp": [149, 152], "perspect": [150, 203, 738], "satisfi": [150, 159, 222, 292, 293, 672, 692, 694, 853], "086": [150, 152, 240, 647, 652], "40_whiten": [150, 152], "repetit": [151, 163, 655], "auto_tutorials_evok": 152, "outer": [153, 156, 158, 159, 181, 252, 302, 550, 578, 738, 784, 826, 831, 834, 837, 846, 847, 850, 853, 856], "tissu": [153, 156, 826], "boundari": [153, 156, 170, 180, 189, 214, 255, 257, 260, 261, 262, 263, 266, 269, 270, 358, 461, 470, 471, 472, 549, 569, 595, 655, 669, 690, 692, 694, 738, 743, 755, 756, 770, 777, 790, 792, 793, 798, 800, 826, 836, 856, 871], "analog": [153, 186, 188, 193, 203, 207, 255, 260, 261, 262, 263, 438, 470, 471, 472, 479, 486, 492, 547, 690, 692, 693, 694, 826, 856, 871], "freesurfer_hom": [153, 366, 836], "setupfreesurf": 153, "sh": [153, 833, 836], "folder": [153, 154, 156, 159, 168, 186, 211, 270, 273, 298, 302, 333, 371, 372, 373, 374, 376, 377, 379, 384, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 451, 452, 457, 487, 498, 602, 634, 754, 756, 830, 833, 836, 871], "my_subject": 153, "my_nifti": 153, "subfold": [153, 379], "beforehand": [153, 255, 260, 261, 768, 806], "set_config": [153, 169, 255, 260, 261, 369, 379, 451, 470, 471, 472, 550, 736, 768, 785, 791, 828, 830, 846, 861, 871], "overview": [153, 154, 163, 168, 171, 172, 178, 198, 202, 204, 209, 210, 222, 236, 245, 255, 260, 261, 262, 263, 265, 271, 348, 444, 470, 471, 472, 516, 517, 531, 547, 550, 566, 567, 570, 571, 690, 721, 762, 768, 771, 785, 791, 807, 826, 850], "buckner40not": 153, "standalon": [153, 832, 863, 871], "592": [153, 162, 206, 227], "10_background_freesurf": [153, 162], "landmark": [154, 217, 330, 360, 826, 846, 853, 856, 871], "t1w": [154, 307], "nifti1imag": [154, 180, 272, 275, 276, 302], "xyzt_unit": 154, "uint8": 154, "t1_mgh": 154, "mghimag": [154, 853], "draw": [154, 168, 174, 175, 199, 224, 255, 257, 260, 261, 262, 263, 269, 403, 410, 470, 471, 472, 549, 550, 564, 573, 690, 692, 694, 755, 761, 762, 769, 770, 772, 777, 781, 784, 790, 793, 794, 798, 800, 853, 856, 871], "ight": 154, "nterior": 154, "longest": 154, "uperior": 154, "camera": [154, 158, 262, 263, 462, 738, 752, 754, 773, 806, 871], "dens": [154, 155, 156, 158, 180, 181, 188, 240, 252, 273, 303, 558, 738, 754, 871], "dig_mri_dist": [154, 360, 861, 871], "na": [154, 237, 478, 826], "preauricular": [154, 307, 331, 826, 853], "manufactur": [154, 168, 186, 187, 188, 826, 853, 859, 871], "faq": [154, 187, 199, 205, 304, 365, 479, 578, 851], "intersect": [154, 158, 159, 182, 578, 595, 846, 871], "purpl": [154, 156, 232], "perpendicular": [154, 176, 853], "goe": [154, 158, 199, 213, 853], "upward": [154, 158, 202, 206, 738, 762], "compani": [154, 240, 672, 852], "acquir": [154, 197, 280, 281, 302, 493, 842, 847, 852, 853, 856, 871], "coregist": [154, 302, 462], "front": [154, 262, 263, 301, 422, 738, 772, 826, 853], "magenta": 154, "1mm": 154, "anisotrop": [154, 240, 853], "incorrectli": [154, 463, 850, 871], "identity_tran": 154, "mri_voxel": [154, 320, 502, 726], "corner": [154, 189, 199, 200, 203, 214, 252, 255, 260, 261, 262, 263, 265, 470, 471, 472, 751, 762, 768, 776, 791, 856, 871], "inferior": [154, 158, 826], "seghead_rr": 154, "seghead_tri": 154, "read_surfac": [154, 158, 159, 266, 624, 639, 824, 846, 861, 871], "mri_to_head": 154, "scalp_pts_in_head_coord": 154, "head_to_meg": 154, "scalp_pts_in_meg_coord": 154, "vox_to_mri": 154, "get_vox2ras_tkr": [154, 158, 180], "mri_to_vox": 154, "scalp_points_in_vox": 154, "nose": [154, 205, 301], "roughli": [154, 349, 569, 828, 871], "blur": [154, 853], "fiffv_point_cardin": [154, 158, 265, 856], "fiffv_point_nas": [154, 158, 265, 856], "fiffv_coord_head": [154, 264, 265, 856], "nasion_mri": [154, 158], "nasion_vox": [154, 158], "toggl": [154, 164, 170, 189, 197, 202, 214, 255, 260, 261, 470, 471, 472, 550, 738, 768, 783, 785, 791, 807, 871], "radio": [154, 859], "icon": [154, 170], "fid": [154, 689], "icp": [154, 871], "finetun": 154, "inner_skul": [154, 156, 157, 159, 170, 181, 273, 627, 754, 846, 847], "outer_skul": [154, 156, 157, 159, 168, 170, 273, 754, 846, 847], "equiv": [154, 181, 182, 183, 205], "rv": [154, 181, 182, 183, 205, 847], "00349057": [154, 205], "mu1": [154, 181, 182, 183, 205], "944702": [154, 205], "lambda1": [154, 181, 182, 183, 205], "137194": [154, 205], "mu2": [154, 181, 182, 183, 205], "667435": [154, 205], "683781": [154, 205], "mu3": [154, 181, 182, 183, 205], "26548": [154, 205], "lambda3": [154, 181, 182, 183, 205], "0106058": [154, 205], "6156": 154, "2300": 154, "1904": 154, "504": [154, 162, 227], "20_source_align": [154, 162], "hsp": [155, 186, 252, 307, 320, 332, 360, 494, 604, 853, 871], "preprat": 155, "jon": [155, 240, 871], "houck": [155, 240, 871], "faveli": [155, 858, 871], "skin": [155, 156, 159, 252, 255, 260, 261, 262, 263, 302, 360, 470, 471, 472, 547, 690, 692, 693, 694, 826, 847, 850, 853, 871], "fit_fiduci": [155, 360], "fit_icp": [155, 360], "n_iter": [155, 360, 576], "nasion_weight": [155, 360], "omit_head_shape_point": [155, 360], "compute_dig_mri_dist": [155, 360], "write_tran": [155, 623, 861], "abil": [155, 176, 178, 193, 648, 649, 848, 852, 859, 871], "set_scale_mod": [155, 360], "fetch_infant_templ": [155, 157, 847, 861, 871], "scale_mri": [155, 360, 630, 861, 871], "clau": [155, 240], "plo": [155, 193, 240], "e0232100": [155, 240], "pone": [155, 193, 240], "0232100": [155, 240], "25_automated_coreg": [155, 162], "concept": [156, 174, 222, 240, 826, 854, 857], "make_watershed_bem": [156, 189, 826, 850, 861, 871], "make_flash_bem": [156, 298, 826, 861, 871], "plot_bem": [156, 158, 304, 754, 850, 853, 861, 871], "plot_bem_kwarg": 156, "brain_surfac": [156, 756], "mrilab": [156, 856], "isn": [156, 164, 219, 237, 256, 260, 374, 396, 397, 612, 615, 618, 693, 830, 850], "candid": [156, 197, 826, 852], "oct4": 156, "90mm": 156, "57798": 156, "24365": 156, "20377": 156, "32480": 156, "22941": 156, "2787": 156, "9357": 156, "20154": 156, "846": [156, 180, 227], "10797": 156, "12738": 156, "12352": 156, "10203": 156, "2362": [156, 202, 240, 550], "10376": 156, "midpoint": [156, 188, 257, 262, 263, 550, 690, 755, 756, 777, 781, 798, 800, 853, 871], "make_bem_model": [156, 159, 189, 273, 360, 422, 453, 508, 514, 598, 627, 629, 819, 846, 861, 871], "4th": [156, 196, 255, 260, 261, 262, 263, 405, 414, 438, 439, 441, 442, 470, 471, 472, 562, 563], "icosahedron": [156, 158, 159, 252, 267, 271, 275, 638, 796], "n_tri": [156, 158, 266, 819], "topologi": [156, 199, 537, 871], "commonli": [156, 166, 168, 173, 199, 237, 265, 461, 550, 826], "148": [156, 167, 222, 226, 227], "474": [156, 193, 222, 227, 273], "gone": 156, "adequ": [156, 204, 265], "1422": [156, 167], "fwd_fix": 156, "explicitli": [156, 170, 186, 193, 198, 200, 201, 202, 230, 255, 260, 261, 262, 263, 265, 270, 292, 293, 298, 305, 308, 324, 349, 353, 354, 363, 364, 365, 403, 405, 410, 419, 424, 441, 442, 446, 447, 466, 468, 469, 470, 471, 472, 503, 528, 549, 550, 552, 565, 566, 567, 572, 576, 584, 586, 593, 595, 635, 642, 643, 644, 653, 654, 656, 658, 676, 677, 678, 679, 680, 681, 690, 692, 693, 694, 698, 699, 700, 701, 703, 709, 710, 722, 762, 768, 769, 772, 774, 775, 778, 787, 792, 828, 830, 846, 852, 859, 871], "src_hemi": 156, "apply_forward": [156, 281, 861, 871], "write_forward_solut": [156, 610, 861, 871], "justifi": [156, 442, 470, 471, 472, 871], "claim": 156, "774": [156, 162, 227], "30_forward": [156, 162], "centimet": 157, "fs_dir": [157, 380], "live": [157, 199, 830, 871], "1005": [157, 193], "new_nam": 157, "rstrip": 157, "fp": [157, 439, 648], "999994": 157, "003552": 157, "000202": 157, "003558": 157, "998389": 157, "056626": 157, "000001": [157, 223, 226], "998395": 157, "2433": [157, 167], "7809": 157, "3991": 157, "8001": 157, "4079": 157, "6mo": [157, 382], "ants6": 157, "0months3t": 157, "come": [157, 173, 179, 186, 187, 199, 200, 202, 204, 213, 223, 237, 266, 271, 366, 493, 511, 605, 826, 828, 830, 834, 835, 847, 853, 871], "fname_1020": 157, "mon": [157, 493], "read_dig_fif": [157, 307, 320, 323, 326, 327, 328, 330, 331, 332, 853, 861, 871], "03d": [157, 488], "99975431": 157, "01839625": 157, "01236795": 157, "00087239": 157, "0143472": 157, "96230429": 157, "27159646": 157, "01252444": 157, "01689809": 157, "27135229": 157, "96233177": 157, "03137219": 157, "48640": 157, "48214": 157, "35_eeg_no_mri": [157, 162], "readabl": [158, 255, 260, 261, 262, 263, 368, 405, 414, 439, 441, 442, 470, 471, 472, 811, 830], "superior": [158, 268, 274, 276, 613, 738, 826, 853], "wide": [158, 164, 211, 830, 852], "unfamiliar": [158, 834], "unsign": [158, 267, 268, 271, 274, 275, 276, 871], "triplet": [158, 265, 447, 517, 640], "geograph": 158, "earth": 158, "north": 158, "prime": [158, 168], "meridian": 158, "degre": [158, 160, 203, 222, 224, 227, 230, 252, 257, 262, 263, 265, 298, 302, 482, 576, 643, 677, 678, 680, 681, 690, 738, 743, 774, 806, 836, 850, 853, 871], "nonetheless": [158, 199], "scanner": [158, 273, 465, 847, 853], "nativ": [158, 180, 186, 187, 255, 260, 261, 262, 263, 311, 320, 325, 433, 434, 435, 436, 470, 471, 472, 488, 494, 604, 738, 740, 847, 850, 859, 871], "mind": [158, 160, 173, 199, 251, 830], "si": [158, 188, 222, 236, 255, 260, 261, 262, 263, 447, 470, 471, 472, 772, 774], "xyz_ra": 158, "00000000e": 158, "15484021e": 158, "91852465e": 158, "22726395e": 158, "56816911e": 158, "57160827e": 158, "18960930e": 158, "49011647e": 158, "40284092e": 158, "00712036e": 158, "ras_coords_mm": 158, "inv_affin": 158, "i_": [158, 186], "j_": 158, "k_": 158, "imshow_mri": 158, "ori_slic": 158, "saggit": 158, "ori_nam": 158, "set_path_effect": 158, "reorient": 158, "rightward": 158, "x_order": 158, "lip": 158, "y_order": 158, "torig": 158, "vox2ras_tkr": [158, 180], "conform": [158, 188, 254, 853, 871], "matter": [158, 168, 255, 260, 261, 262, 263, 266, 461, 470, 471, 472, 503, 550, 595, 690, 692, 693, 694, 772, 846, 852, 871], "freeurfer": 158, "whenev": [158, 199, 830, 848], "everywher": 158, "xyz_mri": 158, "digpoint": [158, 360, 871], "nasion_head": 158, "nasion_dig_mri": 158, "nasion_dig_vox": 158, "convention": 158, "rr_mm": 158, "313728": 158, "80481719970703": 158, "rr_vox": 158, "tricontour": 158, "renderer_kwarg": 158, "curv": [158, 193, 255, 260, 261, 262, 263, 265, 470, 471, 472, 651, 688, 692, 694, 853, 856], "read_curvatur": [158, 861], "y_shift": 158, "z_shift": 158, "this_rr": 158, "this_tri": 158, "copper_r": 158, "quiver3d": [158, 203, 871], "wirefram": 158, "cyan": [158, 470, 471, 472, 791], "line_width": 158, "cull": 158, "render_lines_as_tub": 158, "uniformli": [158, 189, 204, 468], "uniform": [158, 360, 424, 517, 642, 657, 680, 681, 826, 871], "subsampl": [158, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 273, 274, 275, 276, 470, 471, 472, 507, 566, 567, 638, 676, 690, 693, 738, 846, 871], "rr_sph": 158, "mri_mni_tran": 158, "xyz_mni": 158, "02248488": 158, "00844919": 158, "03621711": 158, "00111715": 158, "07107091": 158, "91486582": 158, "40609791": 158, "02300193": 158, "00875602": 158, "43369992": 158, "02811882": 158, "03356932": 158, "land": [158, 217], "685": [158, 162, 200, 210, 227], "50_background_freesurfer_mn": [158, 162], "aris": [159, 196, 569], "ezemikulan": 159, "blender_freesurf": 159, "ezequiel": [159, 871], "mikulan": [159, 871], "manorama": [159, 871], "kadwani": [159, 871], "shutil": 159, "flash": [159, 273, 298, 302, 575, 754, 871], "surf_dir": 159, "problemat": [159, 187, 199, 202, 203, 207, 222, 255, 260, 261, 270, 303, 325], "skill": 159, "conv": 159, "conv_dir": 159, "makedir": 159, "exist_ok": 159, "read_metadata": [159, 621], "write_surfac": [159, 621, 624, 861, 871], "wavefront": [159, 621, 824, 871], "vert": [159, 176, 219, 237, 273], "preset": [159, 267, 268, 271, 274, 275, 276, 738, 796, 801], "beginn": [159, 832, 855], "teach": [159, 175, 240, 871], "_fix": 159, "inner_skull_fix": 159, "backup": 159, "mistak": [159, 830, 850], "inner_skull_orig": 159, "volume_info": [159, 621, 824], "vol_info": 159, "faulti": 159, "write_head_bem": [159, 861, 871], "head_dir": 159, "read_bem_surfac": [159, 507, 508, 597, 861, 871], "make_scalp_surfac": [159, 837, 861, 871], "shrinkwrap": 159, "\u2460": 159, "\u2461": 159, "\u2462": 159, "\u2464": 159, "tab": [159, 252, 462, 538, 746, 830, 848], "\u2465": 159, "\u2467": 159, "noth": [159, 182, 183, 198, 255, 257, 260, 261, 262, 263, 269, 272, 349, 360, 403, 410, 414, 416, 470, 471, 472, 549, 550, 564, 690, 692, 694, 741, 751, 755, 770, 777, 781, 790, 793, 798, 800, 847, 856, 871], "\u2468": 159, "extrus": 159, "extrud": 159, "rough": [159, 850], "ahead": [159, 830], "kernel": [159, 188, 192, 222, 237, 240, 267, 268, 271, 274, 275, 276, 409, 643, 828, 834, 836, 850, 871], "mri_convert": [159, 853], "fwhm": 159, "t1_smoothed_3": 159, "delet": [159, 169, 197, 198, 208, 254, 255, 257, 260, 261, 262, 263, 269, 358, 403, 410, 470, 471, 472, 549, 564, 634, 690, 692, 694, 755, 777, 790, 793, 798, 800, 830, 838, 853, 871], "cleaner": [159, 199], "encount": [159, 163, 187, 199, 437, 828, 836, 850], "runtimeerror": 159, "20516": 159, "isomorph": 159, "defect": [159, 252, 303, 360, 422, 453, 598, 627, 629, 819, 850, 871], "733": [159, 227], "1014": 159, "2068": [159, 192], "7732": 159, "8435": [159, 871], "8489": 159, "10181": 159, "11120": [159, 871], "11121": 159, "11122": [159, 871], "11304": 159, "11788": 159, "disrupt": 159, "999668": 159, "wrong": [159, 829, 871], "easiest": [159, 196, 198, 200, 217, 830, 833], "unedit": 159, "gpl": 159, "water": 159, "clean_from_arrai": 159, "522": [159, 162, 227], "80_fix_bem_in_blend": [159, 162], "bb": [160, 432], "pp": [160, 255, 260, 261, 295, 424, 672], "desc": [160, 203, 269], "66000": 160, "write_cov": [160, 599, 861, 871], "noise_cov_baselin": 160, "noise_cov_reg": 160, "1769": 160, "1785": 160, "1797": 160, "freedom": [160, 203, 222, 224, 227, 230, 257, 262, 263, 462, 677, 678, 680, 681, 754, 773, 850, 871], "violat": [160, 830, 850], "hack": [160, 237], "evoked_meg": 160, "empty_room": 160, "improp": [160, 871], "overestim": [160, 201], "juha": [160, 207, 240, 578, 850], "simola": [160, 207, 240, 578, 850], "kajola": [160, 207, 240, 424, 561, 578, 850, 853], "3359": [160, 240, 850], "3372": [160, 240, 850], "tsp": [160, 202, 240, 349, 550, 850], "853302": [160, 240, 850], "737": [160, 162, 227], "90_compute_covari": [160, 162], "auto_tutorials_forward": 162, "emphasi": [163, 262, 263, 772, 854], "topic": [163, 164, 187, 196, 199, 201, 240, 292, 845, 854, 855], "knowledg": [163, 237, 846, 852], "unexplain": 163, "experienc": [163, 552, 852], "troubl": [163, 871], "configur": [163, 166, 171, 172, 188, 204, 211, 227, 255, 260, 261, 265, 352, 379, 451, 452, 462, 470, 471, 472, 494, 528, 538, 550, 562, 563, 634, 637, 689, 733, 738, 768, 785, 791, 804, 805, 806, 828, 835, 847, 849, 850, 853, 856, 859, 861, 871], "infrar": [163, 188, 209, 210, 240, 255, 260, 261, 262, 263, 265, 348, 432, 470, 471, 472, 498, 547, 580, 581, 582, 584, 690, 692, 693, 694, 738, 762, 771, 776, 837, 847, 853, 871], "spectroscopi": [163, 188, 209, 210, 240, 255, 260, 261, 262, 263, 265, 348, 432, 470, 471, 472, 498, 547, 580, 581, 582, 584, 690, 692, 693, 694, 738, 762, 771, 776, 837, 847, 853, 871], "ssvep": [163, 168, 238, 239, 255, 260, 265, 307, 323, 432, 470, 481, 547, 692, 800, 861, 871], "vssr": [163, 238, 239, 255, 260, 265, 307, 323, 432, 470, 481, 547, 692, 800, 847], "bti": [163, 184, 185, 222, 255, 257, 258, 260, 262, 263, 265, 297, 349, 444, 446, 482, 514, 754, 766, 853, 871], "twowai": [163, 228, 229, 255, 260, 265, 471, 547, 605, 671, 673, 674, 678, 693, 721, 871], "anova": [163, 193, 222, 225, 228, 229, 233, 234, 255, 260, 262, 263, 265, 271, 273, 355, 471, 516, 517, 531, 547, 605, 620, 662, 671, 672, 673, 674, 678, 681, 682, 693, 721, 738, 871], "spatiotempor": [163, 224, 228, 229, 240, 255, 260, 262, 263, 265, 313, 470, 471, 547, 578, 605, 670, 677, 681, 682, 693, 721, 759, 762, 871], "strf": [163, 194, 195, 409, 415, 443], "submodul": [163, 164, 196, 202, 204, 211, 217, 220, 830, 871], "corrupt": [163, 196, 197, 220, 221, 255, 257, 260, 263, 264, 265, 266, 271, 349, 359, 444, 470, 471, 516, 517, 531, 610, 613, 654, 657, 738, 850, 871], "auto_tutorials_python": 163, "auto_tutorials_jupyt": 163, "varieti": [164, 186, 188, 196, 211, 853], "smoothli": [164, 198, 211, 255, 257, 260, 261, 262, 263, 269, 403, 410, 470, 471, 472, 549, 550, 690, 692, 694, 770, 777, 781, 790, 793, 798], "substitut": [164, 366, 828, 852, 853], "glimps": [164, 211], "41700": 164, "custom_ref_appli": [164, 167, 211, 217, 265, 871], "file_id": [164, 167, 211, 255, 260, 261, 262, 263, 265, 470, 471, 472, 473, 856, 871], "hpi_mea": [164, 167, 211, 265, 871], "hpi_result": [164, 167, 211, 265, 871], "meas_dat": [164, 166, 167, 198, 211, 213, 217, 254, 255, 260, 261, 262, 263, 265, 470, 471, 472, 473, 550, 579, 785, 791, 871], "utc": [164, 167, 211, 213, 255, 260, 261, 262, 263, 265, 470, 471, 472, 871], "meas_id": [164, 167, 211, 255, 260, 261, 262, 263, 265, 470, 471, 472, 473, 856, 871], "breviti": 164, "walk": [164, 202, 204], "orig_raw": 164, "chan_idx": 164, "sent": [164, 166, 188, 189, 202, 212], "deliveri": 164, "squarewav": 164, "unambigu": [164, 166], "older": [164, 166, 168, 315, 423, 471, 856, 871], "summat": [164, 166, 199, 682], "6994": 164, "7086": 164, "7192": 164, "7304": 164, "7413": 164, "ordinari": [164, 166, 197, 203, 222, 567, 571, 675, 852], "autoreject": [164, 197, 198, 837], "aren": [164, 205, 447], "fewest": 164, "conds_we_care_about": 164, "aud_epoch": 164, "vis_epoch": 164, "richer": 164, "aud_evok": 164, "vis_evok": 164, "classic": [164, 237, 267, 268, 271, 274, 275, 276, 720, 723, 738, 796, 801], "p200": [164, 189], "dorso": 164, "evoked_diff": [164, 208], "underdetermin": 164, "akin": 164, "inverse_operator_fil": 164, "inv_oper": 164, "\u03bb\u00b2": 164, "61922423e": 164, "06837855e": 164, "49139511e": 164, "663": [164, 172, 227], "10_overview": [164, 172], "obligatorili": 165, "unexpect": [165, 193, 240, 255, 260, 261, 262, 263, 349, 498, 850], "apply_funct": [165, 255, 260, 261, 262, 263, 470, 471, 472, 871], "unprocess": [165, 856], "original_raw": 165, "complex128": [165, 255, 260, 261, 262, 263, 470, 471, 472], "certain": [165, 166, 189, 196, 200, 202, 207, 236, 258, 262, 263, 379, 429, 458, 470, 471, 472, 528, 550, 568, 579, 677, 678, 772, 804, 828, 830, 852, 853, 871], "rereferenc": [165, 237], "unaffect": [165, 200, 409], "rereferenced_raw": 165, "ref_data": [165, 635], "fig_orig": 165, "fig_reref": 165, "unless": [165, 255, 260, 261, 262, 263, 266, 267, 268, 270, 271, 274, 275, 276, 278, 349, 350, 352, 354, 406, 413, 416, 419, 420, 422, 427, 446, 448, 459, 461, 466, 468, 469, 470, 471, 472, 481, 509, 512, 513, 523, 524, 528, 533, 534, 549, 550, 555, 562, 563, 578, 638, 641, 642, 643, 655, 677, 678, 679, 680, 681, 690, 692, 693, 694, 695, 696, 697, 698, 699, 700, 707, 708, 709, 710, 718, 719, 720, 721, 722, 728, 762, 768, 769, 770, 773, 777, 785, 791, 792, 793, 830, 852, 853, 871], "15_inplac": [165, 172], "broadli": 166, "ram": [166, 196, 198, 211, 212, 213, 214, 255, 260, 261, 470, 471, 472, 550, 768, 785, 791, 871], "36037": [166, 196, 200, 203, 204, 205, 207, 212, 213, 214], "necessarili": [166, 168, 187, 196, 198, 201, 253, 255, 260, 261, 292, 747, 853], "instantan": [166, 219], "receiv": [166, 188, 424, 488, 651, 828, 853, 871], "rectangular": [166, 199, 222, 267, 268, 271, 274, 275, 276, 796, 801], "ttl": [166, 592], "upcom": 166, "newer": [166, 168, 202, 828, 833, 836, 838], "27977": 166, "28345": 166, "28771": 166, "29219": 166, "29652": 166, "preced": [166, 255, 260, 261, 355, 463, 738, 768, 826, 830, 871], "config": [166, 169, 186, 252, 253, 255, 260, 261, 369, 371, 372, 373, 374, 376, 377, 379, 380, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 444, 445, 451, 452, 462, 470, 471, 472, 482, 540, 550, 617, 627, 630, 634, 738, 747, 768, 785, 791, 830, 871], "mne_stim_channel": [166, 169, 253, 444, 445, 470, 471, 472], "mne_stim_channel_1": [166, 253, 444, 445], "saver": [166, 198, 200, 848, 850], "testing_data_fold": 166, "eeglab_raw_fil": 166, "eeglab_raw": 166, "began": 166, "000068": 166, "217": [166, 167, 206], "unmodifi": [166, 205, 498], "custom_map": 166, "annotations_from_ev": [166, 254, 432, 861, 871], "orig_tim": [166, 198, 213, 254, 279, 871], "annot_from_ev": 166, "event_desc": [166, 279], "rem_annot": 166, "rem_ev": 166, "rem_event_dict": 166, "modulo": 166, "501": [166, 200, 206], "onlin": [166, 197, 202, 214, 253, 842, 855, 871], "20_events_from_raw": [166, 172], "alon": [167, 842], "gantri": [167, 265, 871], "blank": [167, 211, 690, 836, 871], "subject_info": [167, 255, 260, 261, 262, 263, 265, 470, 471, 472, 473, 871], "device_info": [167, 255, 260, 261, 262, 263, 265, 435, 470, 471, 472, 473, 871], "helium_info": [167, 255, 260, 261, 262, 263, 265, 470, 471, 472, 473, 871], "hpi_subsystem": [167, 265], "proc_histori": [167, 255, 260, 261, 262, 263, 265, 470, 471, 472, 473], "proj_id": [167, 211, 255, 260, 261, 262, 263, 265, 470, 471, 472, 473], "proj_nam": [167, 211, 255, 260, 261, 262, 263, 265, 470, 471, 472, 473], "utc_offset": [167, 255, 260, 261, 262, 263, 265, 470, 471, 472, 473, 871], "line_freq": [167, 237, 265], "gantry_angl": [167, 265], "ctf_head_t": [167, 265, 856], "dev_ctf_t": [167, 265, 856], "acq_par": [167, 211, 253, 265], "acq_stim": [167, 265], "xplotter_layout": [167, 265], "kit_system_id": [167, 265], "0143": 167, "0142": 167, "0213": 167, "0212": [167, 330], "0222": 167, "0223": 167, "0232": 167, "0233": 167, "0313": 167, "0312": 167, "0322": 167, "0323": 167, "0333": 167, "0332": 167, "0343": 167, "0342": 167, "0413": 167, "0412": 167, "0422": 167, "0423": 167, "0432": 167, "0433": 167, "0443": 167, "0442": 167, "0513": 167, "0512": 167, "0523": [167, 240, 655], "0522": 167, "0532": 167, "0533": 167, "0542": 167, "0543": 167, "0613": 167, "0612": 167, "0622": 167, "0623": 167, "0633": 167, "0632": 167, "0643": 167, "0713": 167, "0712": 167, "0723": 167, "0722": 167, "0733": 167, "0732": 167, "0743": 167, "0742": 167, "0813": 167, "0822": 167, "0823": 167, "0913": 167, "0912": 167, "0923": 167, "0922": 167, "0932": 167, "0933": 167, "0943": 167, "1012": 167, "1023": [167, 169, 193], "1022": [167, 193], "1032": [167, 193], "1033": [167, 193], "1042": [167, 330], "1123": 167, "1122": [167, 200], "1133": 167, "1132": 167, "1143": 167, "1223": [167, 206], "1222": [167, 193], "1233": 167, "1243": 167, "1242": 167, "1312": 167, "1313": 167, "1322": 167, "1343": 167, "1412": 167, "1413": 167, "1423": 167, "1433": 167, "1432": [167, 192], "1442": 167, "1443": 167, "1512": [167, 240, 466], "1513": 167, "1523": [167, 240, 720, 723], "1533": [167, 192], "1532": 167, "1543": 167, "1542": 167, "1612": 167, "1622": 167, "1623": 167, "1632": 167, "1633": 167, "1642": 167, "1713": 167, "1712": 167, "1722": 167, "1723": 167, "1732": 167, "1733": 167, "1743": 167, "1742": 167, "1813": 167, "1812": 167, "1822": 167, "1823": 167, "1832": 167, "1833": 167, "1843": 167, "1912": 167, "1913": 167, "1923": 167, "1922": 167, "1932": 167, "1933": 167, "1943": 167, "1942": 167, "2023": 167, "2032": 167, "2033": 167, "2042": 167, "2112": 167, "2122": 167, "2133": 167, "2132": 167, "2143": [167, 240, 720, 723], "2142": 167, "2212": [167, 222], "2213": 167, "2223": 167, "2222": 167, "2233": 167, "2242": [167, 211], "2243": 167, "2312": [167, 192], "2313": [167, 207], "2323": 167, "2322": 167, "2333": [167, 544], "2343": 167, "2342": 167, "2412": 167, "2413": 167, "2422": 167, "2432": 167, "2442": 167, "2512": 167, "2513": 167, "2523": 167, "2533": 167, "2532": 167, "2543": 167, "2542": 167, "2612": 167, "2613": 167, "2623": 167, "2633": 167, "bear": [167, 830, 850, 871], "scanno": [167, 265, 856], "logno": [167, 265, 856], "cal": [167, 265, 315, 470, 856], "coil_typ": [167, 265, 847], "unit_mul": [167, 265, 856], "163": [167, 222, 226, 227, 273], "185": [167, 198, 206, 222, 273], "194": [167, 227, 240, 853, 871], "196": [167, 193, 206, 226, 227], "209": [167, 182, 199, 226, 227, 240], "212": [167, 193, 199, 214, 216, 222, 227, 240], "215": [167, 191, 222, 226, 227, 240, 565], "228": [167, 206, 227, 240, 565], "229": [167, 193, 222, 226], "251": [167, 227, 470, 471, 472], "268": [167, 183, 189], "282": [167, 193, 227], "318": [167, 227], "321": [167, 199, 206, 219, 221, 222, 227], "326": [167, 206, 227], "329": [167, 227], "337": [167, 182, 185, 222, 227], "338": [167, 222, 227], "341": [167, 227, 515], "345": [167, 206, 227], "347": [167, 206, 227, 871], "349": [167, 222, 240, 853], "oxyhemoglobin": [167, 255, 260, 261, 262, 263, 470, 471, 472, 547, 690, 692, 693, 694, 826, 853], "deoxyhemoglobin": [167, 188, 255, 260, 261, 262, 263, 470, 471, 472, 547, 690, 692, 693, 694, 826, 853], "hbo": [167, 188, 208, 211, 217, 255, 260, 261, 262, 263, 306, 365, 367, 470, 471, 472, 547, 690, 692, 693, 694, 826, 853], "hbr": [167, 188, 208, 211, 217, 255, 260, 261, 262, 263, 306, 365, 367, 470, 471, 472, 547, 690, 692, 693, 694, 826, 853], "express": [167, 197, 420, 432, 479, 486, 492, 525, 544, 569, 596, 613, 852, 853, 856, 871], "pick_channels_regexp": [167, 197, 202, 204, 541, 861], "unawar": 167, "accident": [167, 213, 655, 871], "channel_typ": [167, 202, 255, 260, 261, 262, 263, 265, 470, 471, 472, 550, 690, 692, 693, 694, 861], "emb": 167, "comprehens": [167, 193, 211, 222, 224, 403, 830, 852], "channel_indices_by_typ": [167, 861], "ch_idx_by_typ": 167, "exci": [167, 211, 255, 260, 261, 262, 263, 306, 470, 471, 472, 547, 690, 692, 693, 694, 853], "ia": [167, 211, 255, 260, 261, 262, 263, 265, 306, 470, 471, 472, 547, 690, 692, 693, 694, 853, 871], "syst": [167, 211, 255, 260, 261, 262, 263, 306, 470, 471, 472, 547, 690, 692, 693, 694, 853], "bio": [167, 217, 255, 260, 261, 262, 263, 306, 367, 436, 470, 471, 472, 486, 547, 690, 692, 693, 694, 853], "temperatur": [167, 255, 260, 261, 262, 263, 306, 470, 471, 472, 547, 690, 692, 693, 694, 847, 853, 871], "gsr": [167, 255, 260, 261, 262, 263, 306, 470, 471, 472, 547, 690, 692, 693, 694, 853, 871], "fnirs_cw_amplitud": [167, 188, 208, 255, 260, 261, 262, 263, 365, 470, 471, 472, 826], "fnirs_fd_ac_amplitud": [167, 188, 255, 260, 261, 262, 263, 365, 470, 471, 472, 826], "fnirs_fd_phas": [167, 188, 255, 260, 261, 262, 263, 365, 470, 471, 472, 826], "fnirs_od": [167, 255, 260, 261, 262, 263, 365, 470, 471, 472, 826], "eeg_indic": 167, "ipython": [167, 255, 260, 261, 470, 471, 472, 550, 768, 785, 791, 828, 841, 850, 852, 854], "30_info": [167, 172], "mplot3d": [168, 203, 222], "axes3d": [168, 203, 222, 255, 258, 260, 261, 262, 263, 470, 471, 472, 766, 794, 871], "plai": [168, 202, 219, 237, 852, 853], "eeg_posit": 168, "builtin_montag": 168, "montage_nam": 168, "montage_descript": 168, "standard_alphabet": 168, "a1": [168, 205], "b2": 168, "standard_postfix": 168, "postfix": 168, "intermedi": [168, 197, 266, 285, 287, 676, 738, 853], "standard_prefix": 168, "standard_prim": 168, "biosemi16": [168, 222], "biosemi": [168, 222, 333, 479, 853], "cap": [168, 193, 222, 826, 847, 871], "biosemi32": [168, 222], "biosemi64": [168, 222], "biosemi160": 168, "biosemi256": 168, "easycap": [168, 222, 237, 871], "m1": [168, 205, 222, 237, 255, 260, 261, 262, 263, 470, 471, 472, 635, 871], "m10": [168, 871], "egi_256": 168, "geodes": [168, 461, 503, 660, 661, 662, 664, 665, 871], "gsn": [168, 435], "hydrocel": [168, 435], "64_1": 168, "65_1": 168, "mgh60": 168, "mgh70": [168, 871], "brainvis": [168, 325, 326, 432, 436, 470, 471, 472, 481, 596, 847, 853, 871], "artini": [168, 188, 323, 871], "octamon": [168, 188, 871], "detector": [168, 188, 208, 211, 493, 583, 584, 738, 754, 853, 871], "brite23": [168, 871], "brainproduct": 168, "rnp": 168, "ba": [168, 438, 853, 871], "easycap_montag": 168, "headshap": [168, 252, 300, 307, 320, 332, 871], "gca": 168, "view_init": [168, 203, 222], "azim": [168, 203], "ssvep_fold": 168, "ssvep_data_raw_path": 168, "se": [168, 198, 237, 853], "02_se": [168, 237], "ssvep_eeg": [168, 237], "ssvep_raw": 168, "read_raw_brainvis": [168, 187, 237, 477, 853, 861, 871], "circumfer": 168, "t4": 168, "t3": [168, 315, 471, 871], "075": 168, "sample_data_raw_path": 168, "sample_raw": 168, "ax2d": 168, "add_subplot": [168, 222], "ax3d": 168, "irregular": [168, 850, 871], "fastrak": 168, "predefin": [168, 826], "layout_dir": 168, "iterdir": 168, "IN": 168, "ctf151": [168, 222, 333], "lai": [168, 499, 853, 871], "ctf275": [168, 222, 333], "eeg1005": [168, 333], "egi256": [168, 333], "geodesicheadweb": [168, 333], "AS": [168, 333], "umd": [168, 222, 333], "neuromag_122": [168, 333], "grad_norm": [168, 333], "magneswh3600": [168, 333, 482], "biosemi_layout": 168, "make_eeg_layout": [168, 316, 322, 861], "layout_from_raw": 168, "make_meg_layout": 168, "snugli": 168, "40_sensor_loc": [168, 172], "suit": [169, 842], "get_config": [169, 379, 634, 861, 871], "unnam": 169, "mne_use_cuda": [169, 369, 828], "json": [169, 452], "unset": [169, 255, 260, 261, 262, 263, 266, 267, 268, 270, 271, 274, 275, 276, 278, 349, 350, 352, 354, 406, 413, 416, 419, 420, 446, 459, 461, 470, 471, 472, 509, 512, 513, 523, 524, 533, 534, 555, 562, 563, 638, 641, 642, 643, 655, 677, 678, 679, 680, 681, 692, 694, 695, 696, 697, 698, 699, 700, 707, 708, 709, 710, 718, 719, 720, 721, 722, 770, 773, 792, 828, 871], "typeerror": [169, 174, 762, 871], "err": [169, 201, 339], "nonetyp": 169, "unsur": [169, 200, 830], "fallback": [169, 255, 260, 261, 470, 471, 472, 768, 791, 852, 871], "missing_config_kei": 169, "mne_browse_raw_s": 169, "979166666666666": 169, "mne_datasets_brainstorm_path": 169, "mne_datasets_eegbci_path": [169, 374, 379], "mne_datasets_epilepsy_ecog_path": [169, 376], "mne_datasets_erp_core_path": [169, 377], "mne_datasets_fieldtrip_cmc_path": 169, "mne_datasets_fnirs_motor_path": [169, 384], "mne_datasets_hf_sef_path": [169, 386], "mne_datasets_kiloword_path": [169, 387], "mne_datasets_limo_path": [169, 388], "mne_datasets_misc_path": [169, 389], "mne_datasets_mtrf_path": [169, 390], "mne_datasets_multimodal_path": [169, 391], "mne_datasets_opm_path": 169, "mne_datasets_phantom_4dbti_path": [169, 393], "mne_datasets_refmeg_noise_path": [169, 394], "mne_datasets_sample_path": [169, 379, 395], "mne_datasets_somato_path": [169, 398], "mne_datasets_spm_face_path": 169, "mne_datasets_ssvep_path": [169, 400], "mne_datasets_testing_path": 169, "mne_logging_level": [169, 637], "mne_browser_them": [169, 255, 260, 261, 470, 471, 472, 550, 768, 785, 791, 871], "mne_3d_option_multi_sampl": [169, 828, 871], "mne_3d_option_them": [169, 738, 871], "mne_browser_overview_mod": [169, 255, 260, 261, 470, 471, 472, 550, 768, 785, 791], "hidden": [169, 170, 255, 260, 261, 470, 471, 472, 549, 550, 738, 755, 768, 785, 791, 793, 871], "mne_browser_backend": [169, 255, 260, 261, 470, 471, 472, 550, 768, 785, 791, 871], "mne_browser_precomput": [169, 255, 260, 261, 470, 471, 472, 550, 768, 785, 791], "recogn": [169, 204, 486, 852, 871], "mne_3d_option_antialia": [169, 804, 828, 871], "mne_3d_option_depth_peel": [169, 804], "mne_3d_option_smooth_shad": [169, 747, 804], "mne_browser_use_opengl": [169, 255, 260, 261, 470, 471, 472, 550, 768, 785, 791, 871], "mne_cache_dir": 169, "mne_coreg_advanced_rend": 169, "mne_coreg_copy_annot": 169, "mne_coreg_fullscreen": [169, 462], "mne_coreg_guess_mri_subject": 169, "mne_coreg_head_high_r": [169, 462], "mne_coreg_head_opac": [169, 462], "mne_coreg_head_insid": 169, "mne_coreg_interact": 169, "mne_coreg_mark_insid": 169, "mne_coreg_prepare_bem": 169, "mne_coreg_orient_to_surfac": 169, "mne_coreg_scale_label": 169, "mne_coreg_scale_by_dist": 169, "mne_coreg_scene_scal": 169, "mne_coreg_window_height": 169, "mne_coreg_window_width": [169, 462], "mne_coreg_subjects_dir": 169, "mne_cuda_devic": [169, 871], "mne_cuda_ignore_precis": 169, "mne_datasets_megsim_path": 169, "mne_datasets_spm_face_datasets_test": 169, "mne_datasets_visual_92_categories_path": [169, 401], "mne_force_seri": 169, "mne_kit2fiff_stim_channel": 169, "mne_kit2fiff_stim_channel_cod": 169, "mne_kit2fiff_stim_channel_slop": 169, "mne_kit2fiff_stim_channel_threshold": 169, "mne_memmap_min_s": 169, "mne_repr_html": [169, 871], "mne_skip_ftp_test": 169, "mne_skip_network_test": 169, "mne_skip_testing_dataset_test": 169, "mne_tqdm": [169, 871], "mne_use_numba": 169, "misspel": 169, "mnee_use_cuudaa": 169, "intro": [169, 170, 237], "50_configure_mn": [169, 172], "unrecogn": [169, 255, 260, 261, 262, 263, 265, 470, 471, 472, 871], "concern": [169, 201, 222, 490, 569, 603, 607], "userprofil": [169, 452], "linux": [169, 689, 828, 829, 830, 831, 833, 835, 836, 838, 871], "maco": [169, 830, 831, 833, 834, 835, 871], "get_config_path": [169, 861, 871], "home_dir": [169, 451, 452, 634], "use_env": [169, 451], "set_env": [169, 634, 871], "minimal_cmd": 169, "usr": [169, 689, 836, 841], "sbin": 169, "statement": [169, 170, 222, 636, 836], "fresh": 169, "me": [169, 685], "worrisom": 169, "set_log_level": [169, 636, 736, 861], "temporarili": [169, 203, 204, 255, 260, 261, 262, 263, 370, 405, 441, 470, 471, 472, 550, 768, 785, 791], "kit_data_path": 169, "abspath": 169, "use_log_level": [169, 235, 861], "496": [169, 206, 227, 273], "meg160": 169, "v2r004": 169, "160ch": 169, "jan24": 169, "eq1160c": 169, "dewar": 169, "fll": 169, "board": 169, "adc": [169, 187], "alloc": [169, 677, 678, 680, 681], "shorthand": 169, "whatev": [169, 205, 470, 471, 472, 693, 830], "hasn": [169, 562, 871], "sys_info": [169, 270, 828, 829, 850, 861, 871], "stdout": [169, 636, 689, 871], "platform": [169, 255, 260, 261, 262, 263, 470, 471, 472, 689, 692, 694, 791, 829, 833, 838, 842, 859], "aw": [169, 251, 689], "x86_64": [169, 689, 829, 836], "glibc2": [169, 689, 829], "aug": 169, "gcc": [169, 689, 829], "cpu": [169, 255, 260, 261, 262, 263, 266, 267, 268, 270, 271, 274, 275, 276, 278, 349, 350, 352, 354, 406, 413, 415, 416, 419, 420, 446, 459, 461, 470, 471, 472, 509, 512, 513, 523, 524, 533, 534, 550, 555, 562, 563, 578, 638, 641, 642, 643, 655, 677, 678, 679, 680, 681, 689, 692, 694, 695, 696, 697, 698, 699, 700, 707, 708, 709, 710, 718, 719, 720, 721, 722, 768, 770, 773, 785, 791, 792, 828, 829], "gb": [169, 689, 828, 829, 836], "dev0": [169, 689, 829], "openbla": [169, 689, 829, 850], "thread": [169, 232, 255, 260, 261, 470, 471, 472, 550, 768, 785, 791, 853], "agg": 169, "numba": [169, 689, 829, 871], "openmeeg": [169, 508, 513, 871], "cupi": [169, 255, 260, 261, 262, 263, 405, 409, 414, 441, 442, 443, 470, 471, 472, 689, 828, 829, 871], "opengl": [169, 252, 255, 260, 261, 462, 470, 471, 472, 550, 689, 768, 785, 791, 828, 836, 842], "mesa": [169, 462, 689, 804, 871], "llvmpipe": [169, 689, 828], "llvm": [169, 689, 828], "ipyvtklink": [169, 859], "vtk": [169, 402, 689, 738, 753, 828, 829, 871], "qtpy": [169, 689, 829], "pyqt6": 169, "ipympl": 169, "pyqtgraph": [169, 255, 260, 261, 470, 471, 472, 550, 689, 768, 785, 791, 871], "pooch": [169, 379, 689, 871], "mne_nir": 169, "mne_featur": 169, "mne_qt_brows": [169, 255, 260, 261, 470, 471, 472, 550, 768, 785, 791, 871], "mne_icalabel": 169, "883": [169, 172, 206, 227], "shell": [170, 181, 207, 240, 252, 507, 514, 829, 830, 835, 836, 837, 850, 853], "deploi": [170, 850], "browser": [170, 189, 211, 252, 255, 260, 261, 270, 470, 471, 472, 538, 550, 746, 750, 768, 785, 791, 807, 810, 830, 871], "tempfil": 170, "ndimag": 170, "raw_tsss": [170, 252, 470, 471, 472, 491], "_eeg": [170, 252, 470, 471, 472, 871], "_ieeg": [170, 252, 470, 471, 472, 871], "underscor": [170, 198, 202, 211, 550], "parse_fold": [170, 270, 871], "add_raw": [170, 270, 871], "slider": [170, 262, 263, 270, 777, 828, 871], "scrub": 170, "report_raw": 170, "jqueri": 170, "bundl": [170, 833, 835, 871], "tableexport": 170, "highlightj": 170, "atom": 170, "meaning": [170, 212, 269, 632, 830], "events_path": 170, "report_ev": 170, "add_epoch": [170, 270, 871], "fly": [170, 224, 255, 260, 261, 470, 471, 472, 724, 736, 768, 791, 871], "make_metadata": [170, 861, 871], "report_epoch": 170, "add_evok": [170, 270], "n_time_point": [170, 270], "evoked_path": 170, "cov_path": 170, "evokeds_subset": 170, "report_evok": 170, "add_covari": [170, 270], "report_cov": 170, "ecg_proj_path": 170, "eog_proj_path": 170, "sample_audvis_eog": [170, 850], "report_proj": 170, "998": [170, 182, 189, 207, 227, 563, 567, 571, 574], "add_ica": [170, 270, 871], "ecg_evok": [170, 202, 204, 270], "eog_evok": [170, 201, 202, 204, 270], "artifactu": [170, 196, 199, 202, 240, 550], "find_bads_ecg": [170, 202, 270, 550, 871], "ecg_scor": [170, 202, 270], "liber": 170, "eog_compon": 170, "report_ica": 170, "add_bem": [170, 270, 871], "th": [170, 260, 550, 647, 650, 652, 693, 850, 853], "report_mri_and_bem": 170, "add_tran": [170, 270, 871], "opaqu": [170, 270, 462, 871], "trans_path": 170, "report_coregistr": 170, "add_forward": [170, 270, 738, 871], "fwd_path": 170, "report_forward_sol": 170, "add_inverse_oper": [170, 270], "inverse_op_path": 170, "report_inverse_op": 170, "add_stc": [170, 270, 871], "report_inverse_sol": 170, "01632618": 170, "06303297": 170, "63565434": 170, "add_cod": [170, 270], "syntax": [170, 270, 830, 853], "snippet": [170, 230, 270, 850], "liter": [170, 270, 853], "mne_init_py_path": 170, "__init__": [170, 539], "mne_init_py_cont": 170, "read_text": 170, "utf": [170, 487, 596, 602, 871], "report_cod": 170, "add_figur": [170, 270, 871], "caption": [170, 270, 871], "num": [170, 236], "sky": 170, "image_format": [170, 252, 270], "report_custom_figur": 170, "fig_1": 170, "ax_1": 170, "ax_2": 170, "report_custom_figure_sect": 170, "intuit": [170, 193, 237, 404, 419, 648, 649], "logo": [170, 871], "mne_logo_path": 170, "mne_icon": 170, "fig_arrai": 170, "rotation_angl": 170, "fig_array_rot": 170, "mneqtbrows": [170, 255, 260, 261, 470, 471, 472, 550, 768, 785, 791], "fun": [170, 255, 260, 261, 262, 263, 470, 471, 472], "9176882624364033": 170, "photo": 170, "sketch": 170, "add_imag": [170, 270, 871], "jpeg": [170, 270], "gif": [170, 270, 738], "svg": [170, 252, 270, 871], "report_custom_imag": 170, "add_": 170, "dropdown": [170, 871], "hide": [170, 213, 235, 871], "checkbox": [170, 871], "report_tag": 170, "hdf5": [170, 267, 268, 270, 274, 276, 284, 296, 539, 549, 588, 618, 690, 691, 692, 693, 694, 711, 712, 713, 724, 813, 814, 834, 850, 871], "report_parti": 170, "amend": [170, 327], "report_from_disk": 170, "open_report": [170, 270, 861, 871], "report_fin": 170, "invok": [170, 252, 751, 836, 871], "barebon": [170, 252], "render_bem": [170, 270, 871], "raw_butterfli": [170, 270], "report_parse_folder_bas": 170, "raw_psd": [170, 270, 871], "refin": [170, 272, 315, 355], "report_parse_folder_raw_psd_proj": 170, "mri_decim": [170, 252, 270], "report_parse_folder_mri_bem": 170, "temporarydirectori": 170, "n_time_points_evok": [170, 270], "report_parse_folder_evok": 170, "tmp": 170, "tmpyoerz_iw": 170, "info_fnam": [170, 270], "report_parse_folder_cov": 170, "add_html": [170, 270, 871], "remind": [170, 550, 830], "my_html": 170, "ol": [170, 675, 859, 871], "manifest": [170, 200, 201, 202, 204, 826], "n1": 170, "report_add_html": 170, "70_report": [170, 172], "auto_tutorials_intro": 172, "volsourceestim": [173, 178, 179, 267, 268, 271, 272, 274, 276, 285, 287, 288, 289, 290, 291, 505, 512, 517, 518, 519, 520, 521, 523, 533, 618, 631, 826, 861, 871], "mixedsourceestim": [173, 268, 271, 274, 275, 276, 618, 826, 861, 871], "carri": [173, 196, 202, 237, 479, 671], "belong": [173, 265, 266, 270, 612, 667, 737, 738, 856], "shape_lh": 173, "is_equ": 173, "suspect": 173, "nth": [173, 202, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 566, 567, 690, 693], "peak_vertex": 173, "vert_as_index": [173, 178, 267, 268, 271, 274, 275, 276], "peak_vertex_surf": 173, "peak_valu": 173, "logic": [173, 224, 227, 255, 260, 261, 262, 263, 265, 462, 470, 471, 472, 473, 550, 569, 856, 871], "lh_coordin": 173, "rh_coordin": 173, "942": [173, 185, 206, 227], "10_stc_class": [173, 185], "gist": [174, 187, 255, 260, 261, 262, 263, 470, 471, 472, 850], "load_mni152_templ": 174, "fname_av": 174, "fname_surf_lh": 174, "n100m": 174, "evoked_ful": 174, "posixpath": [174, 179], "7283": 174, "6941": 174, "5323": 174, "2659": 174, "0605": 174, "7276": 174, "mni_po": 174, "to_mni": [174, 258, 871], "mri_po": 174, "to_mri": [174, 258, 871], "best_dip_idx": 174, "to_volume_label": [174, 258, 871], "fig_t1": 174, "cut_coord": 174, "fig_templ": 174, "pred_evok": 174, "inf": [174, 189, 196, 218, 255, 260, 261, 262, 263, 278, 408, 468, 469, 470, 471, 472, 501, 563, 690, 692, 694, 695, 697, 698, 700, 707, 708, 709, 710, 746, 792, 798, 871], "best_idx": 174, "best_tim": 174, "conf": [174, 258, 830], "plot_param": 174, "0f": [174, 262, 263, 773], "20_dipole_fit": [174, 185], "dip_fix": 174, "7509": 174, "6603": 174, "jukka": [174, 176, 240, 871], "sarva": [174, 240], "electromagnet": [174, 176, 196, 204, 207, 219, 240, 292, 293, 424, 517, 561, 578, 826, 853], "biomagnet": [174, 240], "598": [174, 185, 227], "200m": 175, "500m": 175, "fig_cov": [175, 257, 763], "fig_spectra": 175, "1705": [175, 178], "1468": 175, "1574": 175, "608": [175, 227], "write_inverse_oper": [175, 531, 861, 871], "6837": 175, "16026e": 175, "set_color": [175, 181], "98df81": [175, 181], "vertno_max": 175, "time_max": [175, 176], "896": [175, 185, 227], "30_mne_dspm_loreta": [175, 185], "left_auditori": 176, "dip_po": 176, "dip_ori": 176, "dip_len": 176, "dip_tim": 176, "rgb": [176, 267, 268, 271, 274, 275, 276, 456, 461, 738, 757, 796, 801, 802], "actual_amp": [176, 181, 183], "actual_gof": [176, 181, 183], "outward": [176, 258, 268, 274, 276, 360, 766, 850], "moment": [176, 178, 265, 268, 274, 276, 313, 337, 339, 340, 341, 424, 560, 561, 569, 578, 801], "06165525": 176, "70033915": 176, "34794621": 176, "inward": [176, 850], "curvatur": [176, 267, 268, 271, 274, 275, 276, 688, 738, 796, 801, 856, 871], "collaps": [176, 270, 425], "brain_mag": 176, "overlay_alpha": [176, 268, 274, 276, 801], "2188": 176, "44205e": 176, "79973942": 176, "38378769": 176, "8347911": 176, "somewhat": [176, 196], "strai": 176, "unrestrict": 176, "brain_loos": 176, "03844879": 176, "68532258": 176, "12541436": 176, "risto": [176, 203, 204, 240, 517, 853], "ilmoniemi": [176, 203, 204, 240, 517, 853], "knuutila": [176, 240], "olli": [176, 240], "lounasmaa": [176, 240], "noninvas": [176, 240], "modern": [176, 186, 240, 380, 828, 853, 855, 871], "revmodphi": [176, 240], "fa": [176, 240, 528, 647, 652], "hsuan": [176, 240, 528, 647, 652], "lin": [176, 192, 240, 409, 528, 647, 652], "belliveau": [176, 240, 517, 528, 647, 652], "20155": [176, 240], "765": [176, 185, 192], "35_dipole_orient": [176, 185], "variant": [177, 187, 456, 561, 828, 871], "1498464098687909": [177, 179], "037797": 177, "65922": 177, "72259e": 177, "28047949e": 177, "72734061e": 177, "97200565e": 177, "56295843": 177, "27742998": 177, "00597191": 177, "65359441": 177, "22223215": 177, "63030546": 177, "eigen": [177, 266, 667], "34003429e": 177, "79067976e": 177, "93243713e": 177, "61893": 177, "8713e": 177, "81398589e": 177, "00293217e": 177, "59049572e": 177, "79225614": 177, "45181117": 177, "88420763": 177, "65906465": 177, "114468": 177, "42240231": 177, "41240751e": 177, "15338772e": 177, "80101709e": 177, "964": [177, 185, 227], "40_mne_fixed_fre": [177, 185], "britta": [178, 858, 871], "westner": [178, 858, 871], "wstnr": 178, "apply_lcmv": [178, 285, 287, 289, 290, 291, 861, 871], "linearli": [178, 203, 207, 240, 288, 289, 290, 291, 292, 293, 826, 850], "ingredi": 178, "valuabl": [178, 853], "gaug": 178, "incorpor": [178, 222, 227, 315, 427, 436, 470, 471, 472, 555, 830, 853, 859, 871], "stabl": [178, 199, 201, 240, 255, 292, 293, 336, 442, 470, 471, 472, 538, 550, 560, 747, 830, 836, 850], "rule": [178, 196, 200, 240, 550, 853], "thumb": [178, 196, 200, 550, 847], "advic": [178, 830], "defici": [178, 363, 550, 853, 871], "misrepres": 178, "3757": [178, 179], "inher": [178, 187, 227, 420], "somehow": [178, 180, 202], "nai": [178, 292, 293, 871], "filters_vec": 178, "apply_lcmv_raw": [178, 288, 289, 290, 861, 871], "apply_lcmv_epoch": [178, 267, 268, 271, 274, 275, 276, 288, 289, 291, 861, 871], "087": 178, "stat_map": [178, 275, 276, 802], "5184": 178, "glass_brain": [178, 179, 275, 276, 802, 871], "022485": [178, 179], "008449": [178, 179], "036217": [178, 179], "071071": [178, 179], "914866": [178, 179], "406098": [178, 179], "008756": [178, 179], "433700": [178, 179], "028119": [178, 179], "plotter": [178, 255, 260, 261, 550, 738, 740, 768, 785, 848, 871], "peak_vox": 178, "ori_label": 178, "sourcemorph": [178, 275, 276, 355, 619, 802, 834, 861, 871], "fname_fs_src": 178, "stc_f": [178, 179], "085": 178, "17352": 178, "barri": [178, 199, 201, 202, 240, 292, 293, 549, 564], "veen": [178, 240, 292, 293], "wim": [178, 240, 292, 293], "drongelen": [178, 240, 292, 293], "mosh": [178, 240, 292, 293], "yuchtman": [178, 240, 292, 293], "akifumi": [178, 240, 292, 293], "suzuki": [178, 240, 292, 293], "867": [178, 227, 240, 292, 293], "623056": [178, 240, 292, 293], "brook": [178, 240, 845, 871], "jiri": [178, 240], "vrba": [178, 240], "clair": [178, 240, 871], "stevenson": [178, 240], "gareth": [178, 240], "barn": [178, 240], "arjan": [178, 240], "hillebrand": [178, 240], "morri": [178, 240], "optimis": [178, 240], "1788": [178, 240], "836": [178, 227, 231, 234], "50_beamformer_lcmv": [178, 185], "flatmap": [179, 267, 271, 275, 738, 796, 871], "mpl_fig": 179, "94880328959697": 179, "84640986879091": 179, "649601096532322": 179, "5653": 179, "67635542": 179, "11717401": 179, "19136023": 179, "atlas": [179, 639, 871], "get_volume_labels_from_aseg": [179, 861, 871], "label_tc": [179, 267, 268, 271, 274, 275, 276, 437], "lidx": 179, "arrowstyl": [179, 192], "set_vis": 179, "grain": [179, 871], "loci": 179, "stc_back": 179, "labels_to_stc": [179, 861, 871], "6210": 179, "69834054": 179, "98871778": 179, "62206532": 179, "70708526": 179, "36619556": 179, "64056812": 179, "6864": 179, "60_visualize_stc": [179, 185], "read_custom_montag": [180, 188, 255, 260, 261, 262, 263, 265, 323, 470, 471, 472, 861, 871], "reconstrct": 180, "elc": [180, 325, 871], "synthes": [180, 186, 298, 302, 494, 570, 871], "fname_t1_electrod": 180, "sample_eeg_mri": 180, "t1_electrod": 180, "fname_mon": 180, "sample_mri_montag": 180, "ras_mni_t": [180, 730], "read_ras_mni_t": [180, 861], "mni_affin": 180, "img_mni": 180, "hot_black_bon": 180, "black_bg": 180, "resampling_interpol": 180, "pos_vox": 180, "fname_t1": 180, "vox2mri_t": 180, "pos_mri": [180, 258], "tkmedit": [180, 836, 853], "dig_montag": 180, "head_siz": [180, 323, 325], "99930957": 180, "00998471": 180, "03578661": 180, "00316747": 180, "01275917": 180, "81240435": 180, "58295487": 180, "00685511": 180, "03489383": 180, "58300899": 180, "81171605": 180, "02888406": 180, "812404": 180, "582955": 180, "583009": 180, "3252": 180, "1702": 180, "3223": 180, "4097": [180, 199], "1672": 180, "8193": 180, "040598": 180, "157084": 180, "86184": 180, "24877e": 180, "17591891": 180, "939572": 180, "86348066": 180, "70_eeg_mri_coord": [180, 185], "fetch_phantom": [181, 423, 861, 871], "planor": 181, "meg1933": 181, "meg2421": 181, "1792": 181, "3840": 181, "bmax": [181, 252], "ring": [181, 199, 438, 440, 871], "otaniemi": [181, 383, 423, 847, 871], "phantom_otaniemi": 181, "00365867": [181, 182, 183], "944092": [181, 182, 183], "138723": [181, 182, 183], "665896": [181, 182, 183], "684544": [181, 182, 183], "132233": [181, 182, 183], "0128974": [181, 182, 183], "plot_evoked_whit": [181, 262, 263, 772, 861, 871], "t_peak": 181, "switch": [181, 182, 199, 206, 219, 240, 252, 266, 271, 344, 470, 471, 472, 828, 830, 836, 856, 871], "32640": 181, "32639": 181, "55367811e": 181, "90213143e": 181, "55347147e": 181, "28605719e": 181, "96728167e": 181, "86739464e": 181, "38610872e": 181, "82304534e": 181, "48308374e": 181, "31818228e": 181, "16854987e": 181, "00130181e": 181, "01608756e": 181, "05724640e": 181, "66791928e": 181, "36603176e": 181, "50599819e": 181, "82644670e": 181, "99846050e": 181, "93593540e": 181, "60183041e": 181, "976295": 181, "211976": 181, "043756": 181, "206488": 181, "972764": 181, "105326": 181, "064891": 181, "093794": 181, "993475": 181, "729": [181, 182, 183, 227], "actual_ori": 181, "rad2deg": 181, "arcco": 181, "dip_tru": [181, 183], "80_brainstorm_phantom_elekta": [181, 185], "phantomctf": 182, "bst_phantom_ctf": 182, "phantom_200ua_20150709_01": 182, "dip_freq": 182, "phantom_20ua_20150603_03": 182, "erm_path": 182, "emptyroom_20150709_01": 182, "24000": [182, 192], "23999": 182, "hdac006": 182, "zeros_lik": [182, 192], "ones_lik": [182, 224, 225], "tsss": [182, 262, 265, 471, 491, 578, 586, 608, 871], "apply_gradient_compens": [182, 186, 470, 471, 472, 853, 871], "un": [182, 200, 203, 207, 214, 470, 471, 472, 526, 527, 791, 853], "mf_kwarg": 182, "st_durat": [182, 207, 569, 578], "021666666666666667": 182, "458": [182, 222, 227], "catch_warn": 182, "simplefilt": 182, "60000": 182, "99596855e": 182, "57828787e": 182, "09548814e": 182, "44821628e": 182, "22550465e": 182, "07831245e": 182, "16519699e": 182, "85599860e": 182, "24819011e": 182, "19149506e": 182, "49201625e": 182, "90435099e": 182, "37114004e": 182, "52368814e": 182, "95491435e": 182, "09260032e": 182, "84849095e": 182, "02461913e": 182, "40860739e": 182, "15627312e": 182, "58591259e": 182, "999939": 182, "002039": 182, "010868": 182, "001115": 182, "959234": 182, "282612": 182, "011001": 182, "282607": 182, "959173": 182, "expected_po": 182, "array_str": 182, "786": [182, 185, 227], "85_brainstorm_phantom_ctf": [182, 185], "4dbti": 183, "badier": [183, 240, 650], "marseil": [183, 847], "franc": 183, "phantom_4dbti": [183, 847, 861, 871], "rfhp1": 183, "0hz": 183, "a173": 183, "a213": 183, "a232": 183, "4350": 183, "not_and": [183, 253, 444, 605, 871], "hs_file": [183, 186, 482], "13599": 183, "20053968578577042": 183, "6576": 183, "6575": 183, "50691838e": 183, "61763336e": 183, "91409625e": 183, "91576159e": 183, "16898444e": 183, "75585208e": 183, "47442194e": 183, "45272203e": 183, "55529894e": 183, "46448717e": 183, "88484744e": 183, "05130802e": 183, "14443569e": 183, "70955369e": 183, "39503671e": 183, "16681391e": 183, "65491197e": 183, "24338008e": 183, "53281664e": 183, "47448228e": 183, "78257781e": 183, "975564": 183, "033891": 183, "217085": 183, "044586": 183, "998011": 183, "044560": 183, "215143": 183, "053150": 183, "975135": 183, "43530566e": 183, "00499851e": 183, "47056513e": 183, "49717001e": 183, "01651220e": 183, "39837298e": 183, "09320996e": 183, "53068976e": 183, "44272962e": 183, "07218608e": 183, "57916869e": 183, "24522939e": 183, "45459681e": 183, "19250060e": 183, "30544307e": 183, "26518629e": 183, "97497347e": 183, "82472005e": 183, "37787240e": 183, "96791371e": 183, "70423989e": 183, "975554": 183, "034041": 183, "217109": 183, "044503": 183, "998063": 183, "043482": 183, "215208": 183, "052081": 183, "975178": 183, "58999814e": 183, "84421337e": 183, "28166457e": 183, "67818745e": 183, "17428979e": 183, "76211498e": 183, "09542089e": 183, "22401648e": 183, "04141267e": 183, "15865669e": 183, "76599754e": 183, "17446488e": 183, "49708010e": 183, "60822410e": 183, "73060305e": 183, "05814038e": 183, "01071067e": 183, "20173942e": 183, "25861185e": 183, "85502070e": 183, "47521229e": 183, "975577": 183, "033678": 183, "217061": 183, "044611": 183, "997960": 183, "045666": 183, "215080": 183, "054233": 183, "975089": 183, "40101009e": 183, "10513936e": 183, "52303974e": 183, "27457778e": 183, "38233857e": 183, "06793751e": 183, "00477278e": 183, "15792686e": 183, "30206685e": 183, "40306943e": 183, "32057779e": 183, "22353020e": 183, "11884928e": 183, "17314181e": 183, "64256593e": 183, "23243102e": 183, "97110034e": 183, "94566869e": 183, "63267153e": 183, "08360546e": 183, "98210291e": 183, "975557": 183, "033946": 183, "217110": 183, "044391": 183, "998071": 183, "043409": 183, "215218": 183, "051986": 183, "975181": 183, "44409481": 183, "37628851": 183, "1860296": 183, "17616473": 183, "90_phantom_4dbti": [183, 185], "auto_tutorials_invers": 185, "835": [185, 206, 227], "maxshield": [186, 252, 262, 265, 471, 491, 578, 608, 856, 871], "allow_maxshield": [186, 206, 207, 262, 471, 491, 608], "mandatori": [186, 292, 293, 315, 471, 550, 853], "rfdc": [186, 252], "realiz": [186, 199], "carefulli": [186, 197, 199, 847], "read_dig_polhemus_isotrak": [186, 307, 320, 323, 326, 327, 328, 329, 330, 331, 334, 853, 861, 871], "technic": [186, 235, 240, 255, 260, 261, 262, 263, 470, 471, 472, 517, 692, 694, 702, 707, 709, 846, 852, 853], "disturb": [186, 846, 853], "mainli": [186, 237, 830, 853], "nicknam": 186, "n_1": 186, "n_2": 186, "n_3": 186, "x_1": [186, 853], "x_2": [186, 853], "x_3": 186, "denot": [186, 193, 213, 268, 274, 276, 576, 647, 650, 652, 671, 673, 691, 826, 853], "x_": [186, 193, 853], "m_": 186, "bmatrix": [186, 853], "c_": [186, 222, 853], "standardize_nam": [186, 494, 604, 871], "nx3": [186, 458], "mrk": [186, 252, 474, 494, 604, 871], "elp": [186, 252, 325, 332, 494, 604, 606, 853, 871], "onward": [186, 640], "miscellan": [186, 211, 255, 260, 261, 262, 263, 470, 471, 472, 547, 690, 692, 693, 694, 853, 856], "eight": [186, 853, 871], "endian": [186, 871], "stimthresh": [186, 252, 494], "sum_": [186, 199, 650, 853], "t_p": 186, "d_p": 186, "bigg": 186, "leq": [186, 222], "read_raw_fieldtrip": [186, 477, 853, 861, 871], "read_epochs_fieldtrip": [186, 853, 861, 871], "read_evoked_fieldtrip": [186, 853, 861, 871], "intent": [186, 848], "original_data": 186, "read_raw_fiff": 186, "original_info": 186, "data_from_ft": 186, "evoked_data": [186, 224], "untest": 186, "cnt": [186, 432, 483, 596, 853, 871], "egi": [186, 325, 328, 488, 853, 871], "calibr": [186, 207, 265, 424, 560, 561, 569, 578, 589, 594, 856, 871], "eximia": [186, 489, 853, 871], "3rd": [186, 196, 267, 268, 271, 274, 275, 276, 676], "parti": 186, "librari": [186, 740, 828, 830, 836, 842, 848, 850, 871], "abund": 186, "electrophysiolog": [186, 199, 240, 826], "10_reading_meg_data": [186, 191], "meta": [187, 255, 260, 261, 262, 263, 470, 471, 472, 473, 859], "ini": 187, "host": [187, 852, 871], "pybv": [187, 436, 470, 471, 472], "mnelab": [187, 837], "pyedflib": 187, "read_raw_bdf": [187, 477, 486, 492, 853, 861, 871], "amplifi": [187, 201, 205, 498, 842, 871], "mastoid": [187, 205, 255, 260, 261, 262, 263, 470, 471, 472, 635], "byte": [187, 255, 260, 261, 470, 471, 472, 501, 746, 856, 871], "read_raw_gdf": [187, 477, 479, 486, 853, 861, 871], "overcom": 187, "releas": [187, 830, 838, 850, 852, 871], "gender": [187, 240, 396], "read_raw_cnt": [187, 477, 853, 861, 871], "danger": [187, 265], "x_coord": 187, "y_coord": 187, "electloc": 187, "encourag": [187, 219, 841, 852], "read_raw_egi": [187, 477, 853, 861, 871], "netstat": [187, 488, 871], "read_raw_nicolet": [187, 477, 853, 861, 871], "nexstim": 187, "read_raw_eximia": [187, 477, 853, 861], "read_raw_persyst": [187, 853, 861, 871], "nk": 187, "read_raw_nihon": [187, 861, 871], "11d": 187, "cmt": 187, "cn2": 187, "difficult": [187, 198, 227, 550, 853], "histori": [187, 265, 435, 826, 856, 871], "successfulli": [187, 212, 830, 856], "neither": [187, 460, 470, 471, 472, 838], "nor": [187, 205, 460, 470, 471, 472, 838, 852], "20_reading_eeg_data": [187, 191], "emitt": 188, "transmitt": 188, "oxyhaemoglobin": [188, 208], "Near": 188, "commun": [188, 192, 193, 219, 240, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 409, 470, 471, 472, 690, 693, 720, 723, 830, 834, 849, 859], "effort": [188, 479, 830, 851, 859], "sfnir": 188, "gowerlab": [188, 871], "cortivis": 188, "read_raw_snirf": [188, 861, 871], "provis": 188, "haemoglobin": [188, 580, 871], "optode_fram": [188, 500], "vendor": [188, 853], "icbm": 188, "2009b": 188, "nirstar": [188, 498], "aurora": [188, 498, 871], "nirscout": [188, 498], "nirsport": [188, 498, 871], "read_raw_hitachi": [188, 861, 871], "read_raw_boxi": [188, 477, 853, 861, 871], "iss": [188, 480, 871], "paren": 188, "unmodul": 188, "unpars": 188, "organis": 188, "digaux": 188, "port": [188, 836, 842], "discourag": [188, 255, 260, 261, 262, 263, 470, 471, 472, 692, 694, 770, 850, 871], "standardis": [188, 871], "to_csv": [188, 211], "_d": 188, "wavelength": [188, 196], "s1_d1": [188, 208], "s2_d1": 188, "s3_d1": 188, "s4_d1": 188, "s5_d2": 188, "s6_d2": 188, "s7_d2": 188, "s8_d2": 188, "assist": [188, 246, 828, 836, 853], "ficidu": 188, "30_reading_fnirs_data": [188, 191], "beep": 189, "deviant": [189, 199], "finger": [189, 847], "bug": [189, 253, 444, 462, 689, 738, 830, 849, 851, 852], "tracker": [189, 830, 850], "consumpt": [189, 262, 263, 420, 772, 871], "use_precomput": 189, "erm_fnam": 189, "s01_noise_20131218_01": 189, "demand": [189, 211, 420, 424, 470, 601, 853, 871], "n_times_run1": 189, "4800": 189, "unus": [189, 265, 273, 569, 871], "heog": [189, 483], "veog": [189, 483, 871], "favorit": [189, 830], "annotations_df": 189, "csv_fname": 189, "events_bad_0": 189, "concat": [189, 403], "saccades_ev": 189, "142459": 189, "216954": 189, "345135": 189, "357687": 189, "409101": 189, "461110": 189, "479866": 189, "764914": 189, "798174": 189, "846880": 189, "858863": 189, "9256": 189, "14287": 189, "116432": 189, "134489": 189, "464527": 189, "494136": 189, "749288": 189, "788623": 189, "21179": 189, "72993": 189, "134527": 189, "196555": 189, "249894": 189, "343357": 189, "400771": 189, "450256": 189, "593101": 189, "733942": 189, "765939": 189, "789476": 189, "792852": 189, "833208": 189, "859869": 189, "862888": 189, "saccade_epoch": 189, "reject_by_annot": [189, 208, 213, 260, 354, 470, 471, 472, 510, 550, 566, 567, 570, 571, 694, 709, 710, 783, 792, 871], "projs_saccad": 189, "compute_proj_epoch": [189, 203, 204, 351, 352, 861, 871], "n_mag": [189, 204, 252, 350, 351, 352, 562, 563], "desc_prefix": [189, 350, 351], "projs_eog": 189, "compute_proj_eog": [189, 203, 204, 567, 571, 846, 861, 871], "1201": [189, 295], "spectra": [189, 235, 240, 255, 257, 260, 261, 262, 263, 408, 470, 471, 472, 523, 524, 677, 692, 694, 697, 700, 707, 708, 709, 763, 770, 792, 826], "doubl": [189, 199, 202, 237, 255, 260, 261, 262, 263, 405, 414, 436, 439, 441, 442, 470, 471, 472, 578, 830, 836, 853, 856, 871], "filter_length": [189, 199, 200, 204, 252, 255, 260, 261, 262, 263, 405, 414, 439, 441, 442, 470, 471, 472, 562, 563, 570, 571, 871], "sound": [189, 192, 193, 202, 240, 410, 720, 723], "uadc001": 189, "sound_data": 189, "min_diff": 189, "\u03bc": [189, 207, 412], "\u03c3": [189, 207, 412, 514], "mlo52": 189, "mrt51": 189, "mlo42": 189, "mlo43": 189, "epochs_standard": 189, "concatenate_epoch": [189, 861, 871], "epochs_devi": 189, "mlp52": 189, "evoked_std": 189, "evoked_dev": 189, "p50": 189, "paint": [189, 255, 260, 261, 262, 263, 470, 471, 472, 772, 792], "mmn": [189, 859], "emphasis": 189, "evoked_differ": 189, "ico4": [189, 630, 846], "8033": 189, "015871": 189, "10585e": 189, "09843": 189, "11765e": 189, "stc_standard": 189, "80289064": 189, "69025561": 189, "89954824": 189, "stc_deviant": 189, "12814542": 189, "29154719": 189, "6203076": 189, "stc_differ": 189, "96162575": 189, "78319301": 189, "94351171": 189, "60_ctf_bst_auditori": [189, 191], "auto_tutorials_io": 191, "timedelayingridg": [192, 409, 861, 871], "multivariate_norm": 192, "1337": 192, "path_audio": 192, "spectrogram": [192, 227, 237, 826, 859, 871], "n_decim": 192, "explicit": [192, 259, 353, 363, 364, 830, 856, 871], "delays_samp": 192, "delays_sec": 192, "5000": [192, 224], "meshgrid": [192, 203, 227], "swap": [192, 226, 232, 624, 853, 871], "swapax": [192, 226, 232], "gabor": 192, "means_high": 192, "means_low": 192, "2500": [192, 871], "gauss_high": 192, "gauss_low": 192, "autoscal": 192, "artifici": [192, 240, 488, 550, 837, 847], "convolut": [192, 199, 237, 416, 533, 534, 696, 699, 716, 718, 719, 721, 722, 837, 871], "n_second": 192, "x_del": 192, "ix_delai": 192, "ndim": [192, 237], "elif": 192, "rollaxi": 192, "weights_sim": 192, "iep": 192, "noise_amp": 192, "x_plt": 192, "hstack": [192, 203], "y_plt": 192, "autocorrel": [192, 409, 415], "ix_best_alpha": 192, "best_mod": 192, "best_pr": 192, "iax": 192, "time_pr": 192, "3450": 192, "1151": 192, "1538": [192, 235, 240, 255, 260, 261, 262, 263, 470, 471, 472, 692, 694, 702, 707, 709], "2693": 192, "3067": 192, "521": [192, 206, 240, 349, 709], "23767": 192, "23546": 192, "23438": 192, "23386": 192, "1867": 192, "23274": 192, "2258": 192, "23485": 192, "2649": 192, "23639": 192, "3035": 192, "23707": 192, "3428": 192, "23820": 192, "23721": 192, "23480": 192, "757": [192, 193, 227], "23642": 192, "1096": 192, "22764": 192, "1334": [192, 206], "20637": 192, "1573": [192, 206], "19362": 192, "1864": 192, "19137": 192, "2247": 192, "19930": 192, "20531": 192, "3014": 192, "20991": 192, "3398": 192, "21361": 192, "21215": 192, "23775": 192, "22957": 192, "1097": [192, 206, 240], "22805": 192, "23054": 192, "1847": 192, "23066": 192, "23236": 192, "2618": 192, "23456": 192, "3388": 192, "23560": 192, "23494": 192, "23748": 192, "754": [192, 193, 227, 240, 846], "23528": 192, "1140": 192, "23720": 192, "1525": [192, 206], "23803": 192, "1906": 192, "23793": 192, "2295": 192, "23888": 192, "2674": 192, "23844": 192, "3049": 192, "23777": 192, "3437": 192, "23840": 192, "23785": 192, "23874": 192, "23884": 192, "23297": 192, "1495": 192, "23309": 192, "1868": 192, "2252": 192, "23434": 192, "2638": 192, "23543": 192, "3021": 192, "23600": 192, "3390": 192, "23526": 192, "23467": 192, "21915": 192, "727": [192, 223, 229], "22715": 192, "22831": 192, "22656": 192, "23008": 192, "2225": 192, "23185": 192, "2602": 192, "23244": 192, "2991": 192, "23371": 192, "3370": 192, "23411": 192, "23338": 192, "i_alpha": 192, "ddot": 192, "tikhonov": 192, "trf": [192, 226], "insensit": [192, 255, 260, 261, 432, 479, 486, 492, 553, 693, 871], "whilst": 192, "mse": 192, "scores_lap": 192, "models_lap": 192, "reg_typ": [192, 415], "ix_best_alpha_lap": 192, "23312": 192, "23657": 192, "1153": 192, "24040": 192, "24199": 192, "1856": [192, 223], "23104": 192, "2210": 192, "22918": 192, "2604": 192, "23193": 192, "23415": 192, "3397": 192, "23601": 192, "23519": 192, "24035": 192, "766": [192, 206], "23917": 192, "23929": 192, "1825": 192, "22662": 192, "22934": 192, "23203": 192, "2998": 192, "23406": 192, "23552": 192, "23489": 192, "19658": 192, "21778": 192, "22133": 192, "22409": 192, "1686": [192, 206, 240], "20962": 192, "21510": 192, "2455": 192, "21948": 192, "2836": 192, "22218": 192, "3214": 192, "22405": 192, "21862": 192, "23385": 192, "746": [192, 227], "23266": 192, "1105": 192, "22962": 192, "1470": 192, "22917": 192, "22684": 192, "2134": 192, "22087": 192, "2508": 192, "22298": 192, "2878": [192, 240, 846], "22412": 192, "3248": 192, "22503": 192, "22535": 192, "23106": 192, "23770": 192, "1157": 192, "24097": 192, "1537": 192, "23998": 192, "1925": 192, "24049": 192, "2301": 192, "23915": 192, "2677": 192, "23841": 192, "3065": 192, "23898": 192, "23942": 192, "24044": 192, "23950": 192, "1154": 192, "24011": 192, "23825": 192, "1919": 192, "23957": 192, "2299": 192, "23499": 192, "2958": 192, "22931": 192, "3343": 192, "23077": 192, "23172": 192, "23812": 192, "755": [192, 227], "23581": 192, "23792": 192, "23902": 192, "23807": 192, "2289": 192, "23824": 192, "2657": 192, "23681": 192, "3045": 192, "23763": 192, "3419": 192, "23706": 192, "23694": 192, "rf_lap": 192, "fr\u00e9d\u00e9ric": [192, 240, 409], "theunissen": [192, 240, 409], "nandini": [192, 240, 409], "singh": [192, 240, 409, 871], "ann": [192, 213, 240, 409, 871], "hsu": [192, 240, 409], "vinj": [192, 240, 409], "jack": [192, 240, 409, 871], "gallant": [192, 240, 409], "ben": [192, 240, 409, 871], "willmor": [192, 240, 409], "darragh": [192, 240, 409], "smyth": [192, 240, 409], "cell": [192, 196, 240, 409, 856, 871], "577": [192, 193, 206, 227, 240, 409], "0954": [192, 240, 409], "898x_14_3_309": [192, 240, 409], "heer": [192, 240, 409], "paslei": [192, 240, 409], "jochem": [192, 240, 409], "rieger": [192, 240, 409], "nathan": [192, 240, 409], "crone": [192, 240, 409], "knight": [192, 240, 409], "tune": [192, 204, 240, 409], "ncomms13654": [192, 240, 409], "30_strf": [192, 195], "visit": [193, 240, 647, 652, 842], "insight": [193, 853], "eas": 193, "camel": 193, "n_meg_channel": 193, "standand": 193, "interquartil": 193, "robustscal": [193, 412], "n_frequenc": [193, 292, 691], "popular": [193, 826, 834], "win": [193, 237], "grasp": 193, "competit": 193, "kaggl": 193, "week": [193, 852], "clf_csp": 193, "ssnr": [193, 551], "rewrit": [193, 871], "plot_filt": [193, 199, 200, 403, 410, 786, 861, 871], "boil": [193, 828], "evoked_time_gen": 193, "joint_kwarg": 193, "diag": [193, 670, 856], "1296": [193, 206, 240], "974": [193, 227], "1018": 193, "1028": [193, 240, 643], "1035": 193, "1039": 193, "428": [193, 222], "1056": [193, 225], "1060": [193, 240], "567": [193, 227, 240], "1036": [193, 206], "745": [193, 206], "848": [193, 206], "1030": [193, 206], "916": [193, 203, 210, 227, 237], "951": 193, "986": [193, 227], "1027": [193, 206], "1091": 193, "1125": 193, "1160": 193, "1195": 193, "1266": 193, "952": 193, "982": [193, 227], "992": [193, 208, 224, 227, 229], "987": [193, 227], "988": [193, 227], "1004": [193, 856], "1001": [193, 856], "542": 193, "1009": [193, 199, 240], "683": [193, 227], "719": [193, 227], "1015": 193, "1020": 193, "1037": [193, 240, 674], "1144": [193, 206], "1179": 193, "1214": [193, 206], "1249": 193, "1284": 193, "1048": 193, "1058": [193, 240, 679], "1062": [193, 206], "1064": 193, "469": [193, 222, 227], "1067": [193, 689], "1066": 193, "1070": 193, "829": [193, 206, 227], "866": [193, 227], "902": [193, 227], "1010": 193, "1046": [193, 206], "1082": 193, "1117": 193, "1152": [193, 240], "1059": 193, "1187": 193, "1257": 193, "1292": 193, "lanczo": 193, "1353": 193, "91709": 193, "26373e": 193, "98776221": 193, "41838256": 193, "06628582": 193, "methodolog": [193, 240], "uncov": [193, 240], "hal": [193, 240], "01848442": [193, 240], "archiv": [193, 240, 379, 830, 836, 838, 850, 859], "ouvert": [193, 240], "lionel": [193, 240], "naccach": [193, 240], "subtend": [193, 240, 853], "e85791": [193, 240], "0085791": [193, 240], "50_decod": [193, 195], "auto_tutorials_machin": 195, "vibrat": 196, "door": [196, 198], "slam": [196, 198], "phone": 196, "geomagnet": 196, "unshield": 196, "headphon": 196, "malfunct": [196, 197, 846], "qr": [196, 252, 562, 570, 573, 871], "sensori": 196, "genesi": 196, "ssp_projector": 196, "readili": [196, 200, 859], "mag_channel": 196, "remove_dc": [196, 200, 470, 471, 472, 791, 871], "get_xdata": [196, 200], "get_ydata": [196, 200], "searchsort": [196, 200], "dx": [196, 200], "dy": [196, 200], "head_width": [196, 200], "length_includes_head": [196, 200], "find_ecg_ev": [196, 198, 204, 213, 562, 566, 861, 871], "create_ecg_epoch": [196, 198, 202, 204, 562, 570, 861, 871], "ecg_epoch": [196, 202, 566], "6007": [196, 201], "streak": 196, "avg_ecg_epoch": 196, "blocki": 196, "efficaci": 196, "pro": [196, 199, 830], "con": [196, 199], "418": [196, 210, 227, 871], "10_preprocessing_overview": [196, 210], "deepcopi": 197, "usabl": [197, 418, 560, 586, 871], "wildcard": 197, "original_bad": 197, "bad_chan": 197, "paus": [197, 262, 263, 738, 871], "codebas": [197, 830, 845, 854, 859], "good_eeg": 197, "all_eeg": 197, "setdiff1d": 197, "excess": [197, 199, 470, 471, 472, 791, 871], "protocol": [197, 846], "sheet": [197, 846], "offlin": [197, 838], "raw2": [197, 213], "invest": [197, 852], "presenc": [197, 208, 219, 237, 240, 265, 385, 427, 830, 846, 871], "unrealist": [197, 846], "dramat": 197, "robust": [197, 201, 202, 236, 240, 255, 260, 261, 403, 550, 647, 652, 871], "uninform": 197, "deweight": 197, "fair": [197, 205], "eeg_data": [197, 211], "eeg_data_interp": 197, "interp": [197, 641, 642, 643, 655, 871], "00000022": 197, "bad_color": [197, 470, 471, 472, 791], "grad_data": 197, "grad_data_interp": 197, "00000009": 197, "propag": [197, 200, 254, 831], "968": [197, 210, 227], "15_handling_bad_channel": [197, 210], "fake_keypress": [198, 213], "keyboard": [198, 214, 738, 847, 871], "push": [198, 199, 830, 871], "enter": [198, 204, 213, 214, 829, 830, 833], "bad_cough": 198, "psd_welch": [198, 235, 709, 861, 871], "wrapper": [198, 264, 434, 438, 477, 680, 681, 871], "bad_blink": 198, "blink_annot": 198, "eeg_pick": 198, "albeit": 198, "annotate_break": [198, 861, 871], "first_tim": [198, 470, 471, 472, 491, 579, 871], "block_1": 198, "block_2": 198, "block_annot": 198, "break_annot": [198, 553], "min_break_dur": [198, 553], "t_start_after_previ": [198, 553], "t_stop_before_next": [198, 553], "bad_break": [198, 553], "events_subset": 198, "flat_criteria": 198, "stringent": 198, "reject_tmin": [198, 255, 260, 261, 566, 871], "reject_tmax": [198, 255, 260, 261, 566, 871], "disappear": [198, 237], "subsum": 198, "stronger_reject_criteria": 198, "2000e": 198, "20_rejecting_bad_data": [198, 210], "park": [199, 240], "burru": [199, 240], "ifeachor": [199, 240], "jervi": [199, 240], "widmann": [199, 240], "somedai": 199, "conclud": [199, 226], "lightli": [199, 830], "cautious": 199, "hope": [199, 200, 202, 237], "math": [199, 203, 850], "b_0": 199, "b_1": [199, 853], "b_2": 199, "ldot": 199, "b_m": [199, 853], "a_1": 199, "a_2": 199, "a_n": 199, "mb_kz": 199, "na_kz": 199, "b_k": [199, 271, 853], "denomin": [199, 227, 292, 293, 644, 654, 678, 681, 703, 871], "a_k": 199, "autoregress": 199, "broken": [199, 265, 443, 830, 871], "finit": [199, 218, 227, 240, 447, 846, 853, 871], "impuls": [199, 850], "infinit": [199, 853, 871], "qquad": 199, "foral": [199, 853], "steeper": [199, 200], "accumul": [199, 255, 260, 261], "despit": [199, 226], "throughput": 199, "sharp": [199, 222, 871], "steep": 199, "broader": [199, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 690, 693], "fundament": 199, "fftfreq": 199, "plot_ideal_filt": [199, 779, 861, 871], "f_p": [199, 853], "flim": [199, 200, 779, 786], "dlim": [199, 779], "f_": 199, "nyq": [199, 439, 442], "third_height": 199, "hypothet": [199, 550], "na\u00efv": 199, "brick": [199, 200], "correspondingli": [199, 255, 260, 261, 853], "tighter": [199, 871], "fortun": [199, 203, 853], "remez": 199, "firl": 199, "ifft": 199, "relax": [199, 232, 871], "shallow": [199, 269], "gradual": 199, "shorten": [199, 214, 237, 762, 834, 853, 871], "benefici": [199, 272], "wherebi": 199, "came": [199, 836], "minimum_phas": 199, "falloff": 199, "h_min": 199, "uncompens": 199, "imaginari": [199, 240, 718, 719, 871], "dur": 199, "morlet_freq": 199, "tlim": 199, "ttick": 199, "blip": 199, "n_onset": 199, "x_orig": 199, "transition_band": 199, "create_filt": [199, 200, 255, 260, 261, 262, 263, 441, 442, 470, 471, 472, 779, 861, 871], "x_v16": 199, "twice": [199, 255, 260, 261, 262, 263, 439, 441, 442, 470, 471, 472, 791], "filter_dur": 199, "x_v14": 199, "x_v13": 199, "h_eff": 199, "10001": [199, 871], "design_mne_c_filt": 199, "x_mne_c": 199, "hpw": 199, "lpw": 199, "x_min": [199, 308], "cost": [199, 267, 268, 271, 274, 275, 276, 409, 415, 550, 677, 678, 680, 681, 738, 796, 801, 853], "plot_sign": 199, "yscale": [199, 690, 871], "yticklabel": 199, "get_yticklabel": 199, "iirfilt": [199, 438], "iirdesign": [199, 438], "butterworth": [199, 255, 260, 261, 262, 263, 405, 414, 438, 439, 441, 442, 470, 471, 472, 562, 563, 871], "worsen": 199, "filtfilt": [199, 255, 260, 261, 262, 263, 405, 414, 439, 441, 442, 470, 471, 472, 791], "btype": [199, 438], "ftype": [199, 267, 268, 271, 274, 275, 276, 438], "butter": [199, 438], "x_shallow": 199, "sosfiltfilt": 199, "sosfilt": 199, "zpk2so": 199, "polynomi": [199, 255, 260, 261, 262, 263, 470, 471, 472, 509, 853, 871], "iir_param": [199, 204, 255, 260, 261, 262, 263, 405, 414, 438, 439, 441, 442, 470, 471, 472, 562, 563, 871], "filt": [199, 439], "x_steep": 199, "chebychev": [199, 438], "cheby1": [199, 438], "rp": [199, 438], "chebyshev": [199, 438, 871], "substanti": [199, 207, 255, 260, 261, 266, 367, 459, 852, 853, 859], "adjust_ax": 199, "errant": 199, "misappl": 199, "deleteri": 199, "schr\u00f6ger": [199, 240], "uncontrol": 199, "acunzo": [199, 240], "misinterpret": 199, "tanner": [199, 240], "semant": 199, "syntact": 199, "n400": 199, "p600": 199, "5\u00b5v": 199, "sic": 199, "poststimulu": 199, "octav": 199, "energi": [199, 251, 850, 871], "understood": [199, 738], "cos_t": 199, "sig": [199, 226, 231, 232], "iir_lp_30": 199, "iir_hp_p1": 199, "iir_lp_2": 199, "iir_hp_2": 199, "x_lp_30": 199, "padlen": [199, 438], "x_hp_p1": 199, "x_lp_2": 199, "x_hp_2": 199, "x_f": 199, "lp": 199, "_2": [199, 853], "hp": [199, 207, 252], "nbsp": 199, "evolv": 199, "maess": [199, 240, 871], "rebut": 199, "old": [199, 211, 213, 235, 240, 254, 255, 257, 260, 261, 262, 263, 271, 274, 307, 315, 335, 396, 470, 471, 472, 494, 515, 582, 604, 625, 626, 637, 738, 803, 807, 838, 871], "baseline_plot": 199, "all_ax": 199, "ri": [199, 222, 240, 720, 723], "iir_hp": 199, "x_hp": 199, "leak": [199, 218, 852, 853], "n_pre": 199, "sig_pr": 199, "filter_data": [199, 255, 260, 261, 262, 263, 414, 438, 439, 442, 470, 471, 472, 861, 871], "adopt": [199, 828, 830], "reciproc": [199, 255, 260, 261, 262, 263, 336, 405, 414, 424, 439, 441, 442, 470, 471, 472, 561, 569, 578], "decent": 199, "blackman": [199, 255, 260, 261, 262, 263, 414, 439, 441, 442, 470, 471, 472], "fir_window": [199, 255, 260, 261, 262, 263, 405, 414, 439, 441, 442, 470, 471, 472], "fir_desgin": 199, "8197": 199, "outdat": 199, "construct_iir_filt": [199, 255, 260, 261, 262, 263, 405, 414, 439, 441, 442, 470, 471, 472, 562, 563, 861, 871], "transition_bandwidth": 199, "fir_coef": 199, "0545": 199, "0017": 199, "wider": [199, 200], "thoma": [199, 222, 223, 240, 528, 647, 652, 674, 677, 678, 679, 680, 681, 871], "sidnei": [199, 240], "wilei": [199, 240], "82896": [199, 240], "andrea": [199, 240, 292, 871], "erich": [199, 240], "burkhard": [199, 240, 871], "00233": [199, 240], "graham": [199, 240], "mackenzi": [199, 240], "rossum": [199, 240], "darren": [199, 240], "kara": [199, 240], "inappropri": [199, 240, 267, 268, 271, 274, 275, 276], "conclus": [199, 224, 240], "12437": [199, 240], "1469": [199, 240], "8986": [199, 240], "01009": [199, 240], "commentari": [199, 240], "artefact": [199, 240], "norton": [199, 240], "ermf": [199, 240], "25_background_filt": [199, 210], "mathrm": [200, 207, 222], "raw_highpass": 200, "19821": 200, "9911": [200, 871], "filter_param": 200, "add_arrow": 200, "meg_pick": 200, "raw_notch": 200, "3965": 200, "raw_notch_fit": 200, "spectrum_fit": [200, 442, 470, 471, 472, 871], "notabl": [200, 236, 871], "raw_downsampl": 200, "pitfal": 200, "safe": [200, 211, 240, 255, 260, 261, 315, 371, 372, 373, 376, 377, 379, 384, 387, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 401, 471, 836, 838], "614990234375": [200, 211], "current_sfreq": 200, "desired_sfreq": 200, "obtained_sfreq": 200, "lowpass_freq": 200, "19813025304873463": 200, "80214146205357": 200, "synch": 200, "784": [200, 227], "30_filtering_resampl": [200, 210], "gratton": [201, 240, 549, 593], "croft": [201, 240, 549], "articl": [201, 240, 647, 652, 845], "6607": 201, "bleed": [201, 278, 811], "250m": 201, "model_plain": 201, "picks_artifact": [201, 549, 593], "epochs_clean_plain": 201, "redo": 201, "partli": 201, "variat": [201, 219, 403, 846, 871], "prone": 201, "allevi": [201, 853], "epochs_sub": 201, "model_sub": 201, "epochs_clean_sub": 201, "piec": [201, 213, 255, 260, 261, 470, 471, 472, 853], "ongo": [201, 553, 846, 859], "alik": 201, "model_evok": 201, "epochs_clean_evok": 201, "eog_evoked_clean": 201, "raw_kwarg": 201, "cole": [201, 240, 549, 593], "emanuel": [201, 240, 549, 593, 643, 871], "donchin": [201, 240, 549, 593], "ocular": [201, 202, 204, 240, 549, 593], "90135": [201, 240, 549, 593], "s0987": [201, 240, 549], "7053": [201, 240, 549], "00055": [201, 240, 549], "893": [201, 210, 227], "35_artifact_correction_regress": [201, 210], "corrmap": [202, 861, 871], "guidanc": [202, 204, 852], "blind": [202, 240, 550, 576], "microphon": 202, "unmix": [202, 550, 551, 576, 782, 785, 871], "analogi": 202, "unwant": [202, 204, 208, 871], "ic": [202, 270, 550, 564, 781, 785, 871], "n_pca_compon": [202, 550, 782, 871], "smallest": [202, 227, 336, 403, 550, 850, 853], "runica": [202, 550], "mixing_matrix_": [202, 550], "unmixing_matrix_": [202, 550], "tesla": [202, 204, 217, 853], "artifact_pick": [202, 204], "harder": [202, 830], "filt_raw": 202, "huge": [202, 272, 275, 276, 676], "9010": 202, "get_explained_variance_ratio": [202, 550, 871], "explained_var_ratio": 202, "9358001342790973": 202, "7717091491114122": 202, "ratio_perc": 202, "trackpad": [202, 262, 263, 462, 754, 773], "15459": 202, "954": [202, 227], "ica000": [202, 871], "ica001": [202, 270, 550, 781, 785], "anywai": [202, 212, 830, 836, 871], "read_ica": [202, 550, 861], "reconst_raw": 202, "tediou": 202, "reset": [202, 255, 257, 260, 261, 262, 263, 269, 360, 403, 410, 470, 471, 472, 549, 550, 690, 692, 693, 694, 738, 769, 770, 774, 777, 781, 790, 793, 798, 806, 856, 871], "eog_indic": 202, "prefront": 202, "ctp": [202, 550, 871], "ecg_indic": 202, "caught": 202, "ica014": 202, "refit": [202, 871], "new_ica": 202, "neck": [202, 303], "trail": [202, 550, 578, 734], "s001r03": 202, "s002r03": 202, "19679": 202, "s003": 202, "s003r03": 202, "_fastica": 202, "convergencewarn": 202, "s004": 202, "s004r03": 202, "6249": 202, "6150": 202, "6149": 202, "ica002": 202, "labels_": [202, 550, 564, 784], "get_compon": [202, 550, 871], "subject_index": 202, "component_index": 202, "template_eog_compon": 202, "33638605": 202, "32708878": 202, "32846765": 202, "32807248": 202, "35916344": 202, "37615216": 202, "42464993": 202, "21789139": 202, "22387812": 202, "22237922": 202, "21342143": 202, "2425263": 202, "26757238": 202, "27806995": 202, "15470616": 202, "1693302": 202, "17711037": 202, "17373137": 202, "19651749": 202, "21091786": 202, "22459439": 202, "68783519": 202, "46717407": 202, "64182737": 202, "34165002": 202, "28991817": 202, "76938995": 202, "0057612": 202, "54311043": 202, "54567127": 202, "63806031": 202, "57058636": 202, "52637437": 202, "51788659": 202, "55774431": 202, "56188149": 202, "69340923": 202, "73333856": 202, "2829121": 202, "39253171": 202, "16120286": 202, "25431324": 202, "06352167": 202, "1647002": 202, "11930156": 202, "1811579": 202, "10112171": 202, "12638332": 202, "13623739": 202, "1301851": 202, "14380943": 202, "15329772": 202, "1715539": 202, "16560352": 202, "13293812": 202, "08175318": 202, "10173655": 202, "10764581": 202, "12707317": 202, "09785876": 202, "07433338": 202, "08470678": 202, "07373196": 202, "03379354": 202, "ecg_ind": 202, "francoi": [202, 240, 550], "cardoso": [202, 240, 550], "precondit": [202, 207, 240, 550, 579, 871], "hessian": [202, 240, 550], "4040": [202, 240, 550], "4049": [202, 240, 550], "2844203": [202, 240, 550], "iren": [202, 240], "winkler": [202, 240], "deben": [202, 240, 564], "4101": [202, 240], "4105": [202, 240], "milan": [202, 240, 871], "7319296": [202, 240], "dammer": [202, 240, 550, 871], "schiek": [202, 240, 550], "boer": [202, 240, 550], "carmen": [202, 240, 382, 550], "silex": [202, 240, 550], "mikhail": [202, 240, 550], "zvyagintsev": [202, 240, 550], "uw": [202, 240, 550], "pietrzyk": [202, 240, 550], "mathiak": [202, 240, 550], "926677": [202, 240, 550], "filipa": [202, 240, 564], "campo": [202, 240, 564], "viola": [202, 240, 564, 871], "jeremi": [202, 240, 564], "thorn": [202, 240, 564], "edmond": [202, 240, 564], "till": [202, 240, 564], "schneider": [202, 240, 564], "tom": [202, 240, 564, 871], "eichel": [202, 240, 564], "868": [202, 240, 564], "877": [202, 227, 240, 564], "clinph": [202, 240, 550, 558, 564, 720, 723], "40_artifact_correction_ica": [202, 210], "setup_3d_ax": 203, "set_zlabel": 203, "set_ylim": [203, 237], "set_zlim": 203, "geometr": [203, 267, 268, 271, 274, 275, 276, 437, 803, 846, 853], "shadow": [203, 631], "cast": [203, 253, 444, 742, 871], "sun": 203, "xy_projection_matrix": 203, "projected_point": 203, "projected_vector": 203, "arrow_coord": 203, "arrow_length_ratio": 203, "symbol": [203, 851, 853, 871], "expans": [203, 207, 255, 260, 261, 262, 263, 424, 470, 471, 472, 509, 560, 561, 569, 578, 853], "unpack": [203, 227, 751, 836], "lucki": 203, "bother": [203, 211], "trigger_effect": 203, "internet": [203, 852], "algebra": [203, 850, 871], "full_matric": 203, "trigger_projection_matrix": 203, "plot_trisurf": 203, "interchang": [203, 292, 826], "ten": [203, 237, 461, 834, 847], "hyperplan": [203, 406, 413], "synonym": [203, 856], "incident": [203, 262, 263, 462, 754, 773], "phrase": 203, "first_projector": 203, "explained_var": [203, 269, 871], "inact": [203, 207, 255, 260, 261, 262, 263, 470, 471, 472, 852], "compute_proj_raw": [203, 204, 350, 351, 853, 861, 871], "ortho": [203, 550], "write_proj": [203, 616, 861, 871], "forgo": 203, "offecg": 203, "remove_exist": [203, 204, 255, 260, 261, 262, 263, 470, 471, 472, 738], "perman": [203, 828, 846, 871], "mags_ecg": 203, "_projector": 203, "cheaper": 203, "consequenti": 203, "mikko": [203, 204, 240, 853], "uusitalo": [203, 204, 240, 853], "bf02534144": [203, 204, 240, 853], "45_projectors_background": [203, 210], "equip": [204, 853], "system_proj": 204, "empty_room_fil": 204, "empty_room_raw": 204, "empty_room_proj": 204, "distant": [204, 850], "_proj": [204, 871], "no_proj": [204, 562, 563], "picks_trac": [204, 789], "plot_projs_joint": [204, 861, 871], "ecg_l_freq": [204, 252, 562], "ecg_h_freq": [204, 252, 562], "filter_method": [204, 562, 563], "presum": 204, "clutter": 204, "eog_proj": 204, "okai": 204, "eog_projs_bad": 204, "perfectli": [204, 237, 714, 853], "get_titl": [204, 208], "get_ylabel": 204, "set_tick_param": 204, "labelbottom": 204, "934": [204, 210, 227], "50_artifact_correction_ssp": [204, 210], "earlob": 205, "collarbon": 205, "disadvantag": [205, 222], "add_reference_channel": [205, 255, 260, 261, 262, 263, 470, 471, 472, 690, 692, 693, 694, 861, 871], "ref_channel": [205, 255, 260, 261, 262, 263, 277, 470, 471, 472, 635, 690, 692, 693, 694], "m2": [205, 255, 260, 261, 262, 263, 470, 471, 472, 635, 856], "set_bipolar_refer": [205, 255, 260, 261, 262, 263, 470, 471, 472, 635, 861, 871], "anod": [205, 632, 871], "cathod": [205, 632, 871], "alter": [205, 207, 211, 254, 549, 579, 755, 793, 871], "raw_new_ref": 205, "raw_avg_ref": 205, "wasn": [205, 871], "infin": [205, 240, 255, 260, 261, 262, 263, 470, 471, 472, 635, 871], "raw_rest": 205, "_raw": 205, "2197": 205, "00413199": 205, "0159844": 205, "05174612": 205, "eeg_bipolar": [205, 632], "transvers": [205, 258], "raw_bip_ref": 205, "36038": [205, 211], "61837": 205, "valueerror": [205, 271, 274, 437, 609, 640, 762], "yao": [205, 240, 255, 260, 261, 262, 263, 470, 471, 472, 635, 650], "693": [205, 227, 240, 255, 260, 261, 262, 263, 470, 471, 472, 635], "711": [205, 227, 240, 255, 260, 261, 262, 263, 470, 471, 472, 635], "0967": [205, 240, 255, 260, 261, 262, 263, 470, 471, 472, 635], "3334": [205, 240, 255, 260, 261, 262, 263, 470, 471, 472, 635], "dezhong": [205, 240], "yun": [205, 240], "qin": [205, 240], "shiang": [205, 240], "hu": [205, 240], "dong": [205, 240, 871], "maria": [205, 240], "bringa": [205, 240], "vega": [205, 240], "pedro": [205, 240], "vald": [205, 240], "\u00e9": [205, 240], "sosa": [205, 240], "00707": [205, 240], "55_setting_eeg_refer": [205, 210], "h\u00f6chenberg": [206, 236, 858, 871], "hoechenberg": [206, 236], "test_move_anon_raw": [206, 207], "v6": [206, 207], "v7": [206, 207, 871], "10800": [206, 207, 871], "31199": [206, 207], "20399": 206, "get_chpi_info": [206, 861, 871], "chpi_freq": 206, "chpi_cod": 206, "chpi_amplitud": [206, 336, 337], "compute_chpi_amplitud": [206, 337, 338, 861, 871], "1696": 206, "427": 206, "451": [206, 222, 273], "475": [206, 227, 273], "547": [206, 227], "571": 206, "595": [206, 227, 240], "476": [206, 227, 240, 403], "667": [206, 227], "715": [206, 227], "739": [206, 227], "787": 206, "633": 206, "678": [206, 227], "931": [206, 227], "979": [206, 227], "1003": 206, "809": [206, 227], "888": [206, 227], "1120": 206, "906": [206, 227], "925": [206, 227], "1167": 206, "1190": 206, "977": [206, 227], "1238": 206, "1262": 206, "1286": 206, "1310": 206, "1358": 206, "1078": 206, "1405": 206, "1106": 206, "1429": 206, "1453": 206, "1135": 206, "1148": 206, "1501": 206, "1174": 206, "1571": 206, "1594": 206, "1205": 206, "1640": 206, "1663": 206, "1239": 206, "compute_chpi_loc": [206, 207, 336, 338, 339, 861, 871], "4385": 206, "424": [206, 227], "459": 206, "444": [206, 222, 227, 232], "515": [206, 871], "559": [206, 227], "541": [206, 224, 227, 240, 424], "573": [206, 239], "414": [206, 222, 227], "587": [206, 227], "429": [206, 222, 227], "789": 206, "823": [206, 227], "827": [206, 227], "833": [206, 227], "948": [206, 227], "991": [206, 227], "1040": 206, "1072": 206, "1129": [206, 240, 550, 576], "1173": 206, "1229": 206, "1273": 206, "1301": 206, "1315": 206, "1319": 206, "1325": 206, "1385": 206, "1485": 206, "1529": 206, "1565": [206, 240], "1580": [206, 255, 260, 261], "1586": 206, "1590": 206, "1599": 206, "1609": 206, "1652": 206, "write_head_po": [206, 337, 339, 345, 346, 861], "compute_chpi_snr": [206, 336, 761, 861, 871], "plot_chpi_snr": [206, 861, 871], "snr_dict": [206, 761], "434": [206, 222, 227], "449": [206, 273], "494": 206, "59_head_posit": [206, 210], "find_bad_channels_maxwel": [207, 578, 861, 871], "obliqu": 207, "filter_chpi": [207, 578, 861, 871], "crosstalk": 207, "fine_cal_fil": 207, "sss_cal_mgh": 207, "crosstalk_fil": 207, "ct_sparse_mgh": 207, "raw_check": 207, "auto_noisy_ch": 207, "auto_flat_ch": 207, "auto_scor": 207, "cross_talk": [207, 560, 569, 578], "return_scor": [207, 569], "ex": [207, 830, 834, 835], "ei": 207, "ch_subset": 207, "scores_noisi": [207, 569], "limits_noisi": [207, 569], "bin_label": 207, "data_to_plot": 207, "cbar_kw": 207, "nanmin": 207, "rect": 207, "nanmax": [207, 225], "appar": [207, 846], "fashion": [207, 365, 871], "min_count": [207, 569], "qualifi": 207, "int_ord": [207, 424, 561, 569, 578], "ext_ord": [207, 336, 338, 342, 424, 560, 561, 569, 578], "thick": [207, 853], "mathtt": 207, "st": [207, 252], "_durat": 207, "penultim": 207, "st_correl": [207, 569, 578, 586], "st_onli": [207, 569, 578, 871], "doublecheck": 207, "get_active_chpi": [207, 861, 871], "chpi_fif_fil": 207, "head_pos_fil": 207, "headpo": [207, 252, 346], "patent": [207, 578, 586], "legal": [207, 762, 852], "commerci": [207, 578], "124905": [207, 240, 424, 561, 578], "1935742": [207, 240, 561, 578], "1759": [207, 240, 578], "1768": [207, 240, 578], "60_maxwell_filtering_sss": [207, 210], "deoxyhaemoglobin": [208, 871], "itertool": 208, "compress": [208, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 379, 470, 471, 472, 566, 567, 690, 693, 836, 871], "novemb": [208, 240, 647, 652], "cw": [208, 365, 826], "set_dur": [208, 254, 871], "mid": [208, 222], "source_detector_dist": [208, 861, 871], "photodetect": 208, "scalp_coupling_index": [208, 861, 871], "beer": 208, "lambert": 208, "law": [208, 852, 871], "raw_haemo": 208, "beer_lambert_law": [208, 861, 871], "haemodynam": 208, "predominantli": 208, "1291": 208, "s4_d4": 208, "s8_d8": 208, "s3_d3": 208, "s7_d6": 208, "s7_d7": 208, "s6_d8": 208, "oxi": [208, 871], "morphologi": 208, "evoked_dict": 208, "color_dict": 208, "aa3377": 208, "styles_dict": 208, "chroma": 208, "drive": [208, 358, 470, 471, 472, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 510], "tidi": 208, "leg_lin": 208, "get_c": 208, "70_fnirs_process": [208, 210], "auto_tutorials_preprocess": 210, "783": [210, 227], "166800": 211, "read_raw_": [211, 470, 853, 871], "famili": [211, 679], "seriou": [211, 852], "parenthes": [211, 853], "estimate_rank": [211, 871], "n_time_samp": 211, "time_sec": 211, "n_chan": [211, 670, 718, 719, 800], "000167471573526": 211, "megacq": 211, "acqch001": 211, "110113": 211, "acqch002": 211, "110112": 211, "acqch003": 211, "110111": 211, "acqch004": 211, "110122": 211, "frequent": [211, 828, 830, 848, 851, 871], "12012": 211, "18018": 211, "24024": 211, "underlyingli": [211, 848], "n_timepoint": [211, 675], "pose": [211, 830], "undo": [211, 608, 871], "eeg_and_eog": 211, "raw_temp": 211, "channel_nam": [211, 488, 609, 871], "eog_and_frontal_eeg": 211, "frivol": 211, "eeg_059": 211, "eeg_060": 211, "blink_detector": 211, "makeshift": 211, "eeg_001": 211, "raw_select": 211, "1503": 211, "unspecifi": [211, 217, 762], "500770084699155": 211, "5001290587975622": 211, "raw_selection1": 211, "raw_selection2": 211, "raw_selection3": 211, "5041000049184614": 211, "sampling_freq": [211, 217], "start_stop_second": 211, "channel_index": [211, 751], "85742192e": 211, "64355481e": 211, "89306644e": 211, "99872648": 211, "00039144": 211, "0020564": 211, "9933487": 211, "99501366": 211, "99667862": 211, "data_arrai": 211, "times_arrai": 211, "meg_0712": 211, "meg_1022": 211, "two_meg_chan": 211, "y_offset": 211, "safest": [211, 846], "eeg_channel_indic": 211, "planar1": [211, 255, 257, 260, 261, 262, 263, 403, 410, 470, 471, 472, 547, 548, 549, 550, 564, 690, 692, 693, 694, 770, 777, 781, 793, 798, 800], "planar2": [211, 255, 257, 260, 261, 262, 263, 403, 410, 470, 471, 472, 547, 548, 549, 550, 564, 690, 692, 693, 694, 770, 777, 781, 793, 798, 800], "first_channel_data": [211, 853], "eeg_and_eog_data": 211, "two_meg_chans_data": 211, "my_data": 211, "npy": [211, 212], "afford": 211, "scaling_tim": 211, "start_end_sec": 211, "to_hdf": 211, "999750": 211, "952283e": 211, "001415": 211, "069226e": 211, "003080": 211, "080921e": 211, "004745": 211, "010755e": 211, "006410": 211, "10_raw_overview": [211, 216], "write_ev": [212, 444, 605, 861, 871], "lst": [212, 605, 816], "array_equ": 212, "_eve": 212, "my_experi": 212, "told": 212, "events_no_button": 212, "merged_ev": 212, "ultim": [212, 830], "send": [212, 735], "cumbersom": 212, "20_event_arrai": [212, 216], "datetim": [213, 254, 255, 260, 261, 262, 263, 265, 279, 470, 471, 472, 871], "compris": [213, 217, 255, 260, 261, 678, 692, 693, 694, 853, 859], "posix": [213, 254], "timestamp": [213, 254, 267, 268, 271, 274, 275, 276, 470, 471, 472, 488, 596, 871], "my_annot": 213, "aaa": 213, "bbb": 213, "ccc": 213, "microsecond": [213, 254, 255, 260, 261, 262, 263, 265, 470, 471, 472, 856], "time_of_first_sampl": 213, "95597083": 213, "iso": 213, "8601": 213, "new_orig_tim": 213, "strftime": 213, "later_annot": 213, "ddd": 213, "eee": 213, "fff": 213, "720100": 213, "darker": 213, "spinbox": 213, "safeguard": [213, 265, 871], "interactive_annot": 213, "bad_": [213, 871], "ordereddict": 213, "95597082905339": [213, 254], "tzinfo": 213, "timezon": [213, 255, 260, 261, 262, 263, 470, 471, 472], "descr": 213, "70597082905339": 213, "45597082905339": 213, "20597082905339": 213, "WILL": 213, "NOT": 213, "annot_from_fil": 213, "752": [213, 216, 227], "30_annotate_raw": [213, 216], "versatil": 214, "lengthen": 214, "unmark": 214, "newli": [214, 759], "hover": 214, "thumbnail": 214, "plot_psd_topo": [214, 235, 255, 260, 261, 262, 263, 470, 471, 472], "081": [214, 216], "40_visualize_raw": [214, 216], "auto_tutorials_raw": 216, "synthet": [217, 488, 566, 570, 853, 871], "hertz": [217, 219, 265, 691, 695, 696, 697, 698, 699, 700], "eog001": 217, "meg001": 217, "meg002": 217, "meg003": 217, "meg004": 217, "meg005": 217, "meg006": 217, "meg007": 217, "meg008": 217, "seven": [217, 853, 871], "molar": [217, 853], "amper": [217, 853], "simulated_raw": 217, "show_scalebar": [217, 255, 260, 261, 470, 471, 472, 768, 791, 871], "simulated_epoch": 217, "column_stack": 217, "condition_a": 217, "condition_b": 217, "evoked_arrai": 217, "839": [217, 221, 227, 853], "10_array_obj": [217, 221], "simulate_stc": [218, 654, 655, 656, 861, 871], "dt": [218, 424, 702], "17545": 218, "hemi_to_ind": 218, "elig": [218, 852], "surf_vertic": 218, "restrict_vert": 218, "intersect1d": 218, "restrict_vertic": [218, 266, 271], "cent_idx": 218, "elsewher": 218, "distances_to_outsid": [218, 266, 871], "compute_area": [218, 266, 871], "stc_gen": 218, "value_fun": [218, 657], "brain_gen": 218, "evoked_gen": 218, "stc_inv": 218, "brain_inv": 218, "45968308": 218, "57021267": 218, "69354621": 218, "evoked_snr": 218, "70_point_spread": [218, 221], "unit_impuls": 219, "coh_signal_gen": 219, "t_rand": 219, "dev": [219, 538, 636], "base_freq": 219, "cumsum": 219, "signal1": 219, "signal2": 219, "am": [219, 258, 261, 263, 367, 472, 856, 871], "nperseg": 219, "coh": [219, 691, 764], "noverlap": 219, "146374": 219, "33830": 219, "stc_signal": 219, "stc_nois": 219, "pretend": [219, 222], "s_rm": 219, "59828": 219, "89697e": 219, "40489756": 219, "65479053": 219, "61269642": 219, "dampen": [219, 631], "consensu": [219, 852], "csd_signal": 219, "filters_approach1": 219, "filters_approach2": 219, "filters_1": 219, "power_approach1": 219, "power_approach2": 219, "plot_approach": 219, "brain1": 219, "42918831e": 219, "04345299e": 219, "40589757e": 219, "brain2": 219, "mia": [219, 240, 292, 293], "liljestr\u00f6m": [219, 240, 292, 293], "susanna": [219, 240, 292, 293, 871], "aro": [219, 240, 292, 293, 871], "245530": [219, 240, 292, 293], "kensuk": [219, 240, 292, 293], "sekihara": [219, 240, 292, 293], "79369": [219, 240, 292, 293], "79370": [219, 240, 292, 293], "80_dic": [219, 221], "auto_tutorials_simul": 221, "ttest_1samp_no_p": [222, 677, 680, 684, 861, 871], "phenomena": 222, "n_subject": [222, 230, 232, 673], "signal_mean": 222, "signal_sd": 222, "noise_sd": 222, "gaussian_sd": 222, "n_src": [222, 268, 273], "h_0": 222, "colon": [222, 252, 379, 856], "h_1": 222, "neq": [222, 853], "geq": 222, "cdot": [222, 650, 853], "1600": 222, "mcc": 222, "plot_t_p": 222, "p_lim": 222, "t_lim": 222, "mgrid": 222, "plot_surfac": [222, 871], "rstride": 222, "cstride": 222, "ztick": 222, "mappabl": 222, "set_tick": 222, "set_ticklabel": 222, "get_xaxi": 222, "set_label_coord": 222, "set_weight": 222, "use_p": 222, "log_": 222, "t_": [222, 853], "exchang": [222, 871], "verid": 222, "n_": [222, 853], "samp": 222, "gymnast": 222, "declar": [222, 852], "p_type_i": 222, "combat": 222, "familywis": 222, "fwer": 222, "benjamini": [222, 674], "hochberg": [222, 674], "strict": [222, 446, 834], "indistinguish": 222, "mathbf": [222, 561], "perm_": 222, "aforement": 222, "rethink": 222, "thought": [222, 671, 826], "refram": 222, "drawback": 222, "touch": [222, 316], "feature_extract": 222, "grid_to_graph": 222, "e402": 222, "mini_adjac": 222, "toarrai": 222, "find_ch_adjac": [222, 223, 224, 227, 324, 670, 677, 678, 680, 681, 759, 861, 871], "combine_adjac": [222, 224, 227, 230, 313, 324, 677, 678, 680, 681, 861, 871], "get_builtin_ch_adjac": [222, 313, 324, 759, 861], "builtin_ch_adj": 222, "adj_nam": 222, "adj_descript": 222, "bti148": 222, "bti248": 222, "bti248grad": 222, "ctf64": 222, "easycap128ch": 222, "easycap32ch": 222, "easycap64ch": 222, "easycapm1": [222, 871], "easycapm11": 222, "m11": 222, "easycapm14": 222, "m14": 222, "easycapm15": 222, "m15": 222, "ecog256": 222, "256channel": 222, "ecog256bipolar": 222, "eeg1010_neighb": 222, "elec1005": 222, "elec1010": 222, "elec1020": 222, "itab153": 222, "itab": 222, "itab28": 222, "language29ch": 222, "mpi": 222, "mpi_59_channel": 222, "neuromag122cmb": 222, "neuromag122": [222, 871], "neuromag306cmb": 222, "neuromag306": 222, "neuromag306mag": [222, 227], "neuromag306planar": [222, 224], "yokogawa160": 222, "yokogawa440": 222, "read_ch_adjac": [222, 313, 317, 670, 759, 861, 871], "n_space": 222, "t_thresh": [222, 224], "t_clust": 222, "viewabl": 222, "p_clust": 222, "cl": 222, "195527": 222, "120434": 222, "2138": 222, "2159": 222, "2180": 222, "2199": 222, "2204": 222, "2198": 222, "2193": 222, "stat_fun_hat": 222, "t_hat": 222, "p_hat": 222, "043603": 222, "127369": 222, "5049": 222, "5024": 222, "5096": 222, "5074": 222, "riemann": 222, "threshold_tfc": 222, "t_tfce": 222, "p_tfce": 222, "h_power": [222, 223], "e_pow": [222, 223], "425": [222, 227], "461": [222, 227], "467": [222, 227], "482": [222, 227], "485": [222, 273], "t_tfce_hat": 222, "p_tfce_hat": 222, "452": [222, 227, 273], "463": [222, 273], "jag": 222, "peaki": 222, "broad": [222, 237], "tighten": 222, "broaden": 222, "exhaust": [222, 292], "unbalanc": 222, "statsmodel": [222, 859, 868], "anova_lm": 222, "wrap": [222, 264, 523, 871], "q": [222, 252, 650, 677, 678, 680, 681, 853], "f_onewai": [222, 671, 673, 678, 681, 861], "f_mway_rm": [222, 226, 232, 673, 861, 871], "f_threshold_mway_rm": [222, 226, 232, 671, 861], "unpair": 222, "spatio_temporal_cluster_test": [222, 223, 227, 231, 232, 861, 871], "spatio_temporal_cluster_1samp_test": [222, 230, 677, 861, 871], "gerard": [222, 240, 683, 684], "ridgwai": [222, 240, 683, 684], "vladimir": [222, 240, 683, 684], "litvak": [222, 240, 683, 684], "flandin": [222, 240, 683, 684], "karl": [222, 240, 251, 683, 684, 858], "friston": [222, 240, 683, 684], "Will": [222, 240, 252, 264, 306, 439, 470, 550, 683, 684, 689, 702, 708, 710, 734, 812, 835], "penni": [222, 240, 683, 684], "haircut": [222, 240, 683, 684], "nichol": [222, 223, 240, 674, 677, 678, 679, 680, 681], "10_background_stat": [222, 229], "confirmatori": 223, "tfce": [223, 677, 678, 680, 681, 859, 871], "ttest_ind": [223, 684], "unsaf": [223, 693], "median_valu": 223, "long_word": 223, "short_word": 223, "time_window": [223, 690], "ntarget": 223, "short_df": 223, "format_dict": 223, "096": 223, "453939": 223, "222424": 223, "518939": 223, "371515": 223, "064": [223, 240, 341, 532, 650], "811667": 223, "250152": 223, "039697": 223, "318030": 223, "163030": 223, "425152": 223, "682": 223, "684": [223, 227], "absent": [223, 360, 856, 871], "amongst": [223, 237], "temor": 223, "cluster_pv": [223, 677, 678, 680, 681], "significant_point": 223, "delaunai": [223, 224, 313, 871], "917298": 223, "20_erp_stat": [223, 229], "whom": [224, 227, 830], "downstream": [224, 225], "nonparametr": [224, 225, 227, 240, 677, 678, 679, 680, 681], "spectrotempor": [224, 225], "tfr_epoch": 224, "logratio": [224, 236, 283, 533, 534, 690, 693, 798], "epochs_pow": [224, 226, 227], "lattic": [224, 227, 670, 677, 678, 680, 681], "sensor_adjac": 224, "use_idx": 224, "n_ch": 224, "unrol": 224, "degrees_of_freedom": 224, "455144": 224, "265125": 224, "caveat": [224, 227, 240, 550, 853], "anywher": [224, 871], "t_obs_plot": 224, "f_idx": 224, "t_idx": [224, 470, 471, 472], "nanargmax": 224, "40_cluster_1samp_time_freq": [224, 229], "epochs_condition_1": 225, "epochs_condition_2": 225, "comptuat": 225, "tfr_epochs_1": 225, "tfr_epochs_2": 225, "epochs_power_1": 225, "epochs_power_2": 225, "f_ob": [225, 226, 227, 231, 232, 678, 681], "566824": 225, "evoked_power_1": 225, "evoked_power_2": 225, "evoked_power_contrast": 225, "f_obs_plot": [225, 226, 227], "max_f": 225, "evoked_condition_1": 225, "evoked_condition_2": 225, "evoked_contrast": 225, "50_cluster_between_time_freq": [225, 229], "interplai": 226, "perceptu": 226, "56aud_r": 226, "60vis_l": 226, "64vis_r": 226, "forgiv": 226, "zero_mean": [226, 534, 705, 717, 718, 719, 721], "this_tfr": [226, 227], "this_pow": 226, "n_condit": [226, 227, 232, 678, 681], "n_replic": 226, "factor_level": [226, 232, 671, 673], "formula": [226, 232, 292, 293, 349, 646, 650, 703, 853, 871], "a1b1": [226, 671], "a1b2": [226, 671], "a2b1": [226, 671], "b2b2": 226, "fval": 226, "effect_label": 226, "autumn": [226, 227], "overrid": [226, 270, 364, 366, 470, 471, 472, 488, 627, 628, 629, 630, 736, 762, 834, 836, 852], "necessit": [226, 232], "return_pv": [226, 232, 671], "pthresh": [226, 232], "f_thresh": [226, 227, 232], "419588": 226, "good_clust": [226, 230], "f_imag": [226, 227], "f_obs_plot2": 226, "812": [226, 227, 229], "70_cluster_rmanova_time_freq": [226, 229], "differenti": [227, 240, 255, 260, 261, 262, 263, 427, 470, 471, 472, 720, 723, 859], "plot_ch_adjac": [227, 313, 324, 861, 871], "_csr": 227, "csr_matrix": [227, 272, 273, 313, 324, 615], "bind": [227, 232], "stackexchang": 227, "73993": 227, "alpha_cluster_form": 227, "n_observ": [227, 675, 677, 678, 680, 681, 762], "dfn": [227, 678, 681], "dfd": [227, 678, 681], "cluster_stat": 227, "004107": 227, "094418": 227, "412": 227, "453": [227, 273], "466": 227, "483": 227, "489": [227, 237], "511": 227, "534": 227, "537": 227, "554": 227, "557": [227, 240, 396], "574": 227, "583": [227, 240, 411], "591": 227, "594": 227, "597": [227, 240, 411], "614": 227, "622": [227, 240, 349], "632": 227, "635": 227, "644": 227, "646": 227, "653": 227, "675": 227, "681": 227, "697": 227, "703": 227, "723": 227, "732": 227, "738": 227, "743": 227, "749": 227, "773": 227, "776": 227, "782": 227, "785": 227, "788": 227, "808": 227, "817": 227, "855": 227, "858": 227, "861": 227, "864": [227, 273], "876": [227, 273], "879": 227, "885": 227, "891": 227, "903": 227, "909": 227, "912": 227, "915": 227, "917": 227, "923": 227, "926": 227, "928": 227, "933": 227, "936": 227, "939": 227, "945": [227, 262, 263, 690, 776], "953": 227, "969": 227, "971": 227, "981": 227, "p_accept": 227, "good_cluster_ind": [227, 231, 232], "crimson": [227, 738], "steelblu": [227, 470, 471, 472, 791], "i_clu": 227, "clu_idx": 227, "time_ind": 227, "space_ind": 227, "ch_ind": 227, "f_map": 227, "sig_tim": 227, "ax_topo": 227, "f_evok": 227, "ax_colorbar": 227, "ax_sign": 227, "ymin": [227, 232], "get_ylim": 227, "fill_betweenx": [227, 232], "tfr_adjac": 227, "tfr_threshold": 227, "333033": 227, "433": 227, "493": 227, "533": 227, "548": 227, "556": 227, "558": 227, "575": 227, "576": 227, "584": 227, "623": 227, "624": 227, "626": [227, 240, 550], "628": 227, "631": 227, "637": 227, "639": 227, "671": 227, "674": 227, "677": 227, "688": 227, "695": 227, "702": 227, "731": 227, "742": 227, "747": 227, "751": 227, "772": 227, "777": 227, "803": [227, 235, 239], "806": 227, "816": 227, "821": 227, "822": 227, "831": 227, "834": 227, "838": 227, "842": 227, "845": 227, "849": 227, "851": 227, "856": 227, "863": 227, "865": 227, "884": [227, 240], "886": 227, "887": 227, "889": [227, 273], "904": [227, 273], "908": 227, "911": 227, "919": 227, "921": 227, "943": 227, "946": 227, "949": 227, "962": 227, "963": 227, "973": 227, "difficulti": [227, 397, 828, 850], "freq_ind": 227, "ax_spec": 227, "f_obs_plot_sig": 227, "ax_colorbar2": 227, "mari": [227, 240, 677, 678, 680, 681, 871], "oostenveld": [227, 240, 677, 678, 680, 681, 871], "dejan": [227, 240, 677, 678, 680, 681], "draschkow": [227, 240, 677, 678, 680, 681], "e13335": [227, 240, 677, 678, 680, 681], "13335": [227, 240, 677, 678, 680, 681], "75_cluster_ftest_spatiotempor": [227, 229], "auto_tutorials_stat": [229, 234], "equalize_epoch_count": [230, 861], "summarize_clusters_stc": [230, 231, 232, 861, 871], "1000e": [230, 232], "sample_vertic": [230, 232], "evoked1": [230, 857], "evoked2": [230, 857], "n_vertices_sampl": [230, 232], "morph_data": [230, 871], "fsave_vertic": [230, 231, 232], "morph_mat": [230, 232, 272], "n_vertices_fsav": [230, 231, 232], "govern": 230, "member": [230, 675, 852, 856, 859], "max_step": [230, 677, 678, 680, 681], "spatial_src_adjac": [230, 231, 232, 861, 871], "p_threshold": [230, 231], "t_threshold": 230, "clu": [230, 231, 232, 682], "563537": 230, "791547": 230, "permutationt": 230, "good_clusters_idx": 230, "stc_all_cluster_vi": [230, 231, 232], "20_cluster_1samp_spatiotempor": [230, 234], "stc_fname": 231, "n_subjects1": 231, "n_subjects2": 231, "x1": [231, 675, 678], "x2": [231, 675, 678], "subjects_k": 231, "f_threshold": [231, 673], "632172": 231, "30_cluster_ftest_spatiotempor": [231, 234], "engemannn": 232, "r_aud": 232, "r_vi": 232, "tini": 232, "1782": 232, "851281": 232, "inds_t": 232, "inds_v": 232, "cluster_ind": 232, "eve_id": 232, "mean_tc": 232, "std_tc": 232, "60_cluster_rmanova_spatiotempor": [232, 234], "v\u00b2": 235, "\u00b2": [235, 236], "t\u00b2": [235, 237], "overridden": [235, 469, 871], "esp": 235, "method_kw": [235, 255, 260, 261, 262, 263, 470, 471, 472, 692, 694], "psd_array_multitap": [235, 255, 260, 261, 262, 263, 470, 471, 472, 692, 694, 709, 861, 871], "irrelev": [235, 252, 853], "epo_spectrum": 235, "npsd": 235, "__getitem__": [235, 253, 254, 255, 257, 258, 260, 261, 265, 269, 273, 284, 297, 470, 471, 472, 516, 691, 692, 693, 694, 726, 871], "evk_spectrum": 235, "62205637e": 235, "13776542e": 235, "90850735e": 235, "89161828e": 235, "24201617e": 235, "93085560e": 235, "57011939e": 235, "66195154e": 235, "39526016e": 235, "38954376e": 235, "03998988e": 235, "98139252e": 235, "agg_fun": [235, 255, 260, 261, 262, 263, 470, 471, 472, 692, 694, 770], "psd_multitap": [235, 236, 408, 550, 707, 710, 781, 783, 861, 871], "area_mod": [235, 255, 260, 261, 262, 263, 470, 471, 472, 792], "deprec": [235, 252, 255, 257, 260, 261, 262, 263, 269, 403, 410, 470, 471, 472, 549, 550, 564, 690, 692, 694, 709, 710, 738, 755, 770, 777, 781, 790, 793, 798, 800, 861, 871], "kept": [235, 255, 260, 266, 365, 427, 466, 468, 469, 510, 517, 518, 519, 520, 521, 523, 524, 534, 550, 551, 561, 601, 782, 830, 871], "periodogram": [235, 240, 255, 260, 261, 262, 263, 470, 471, 472, 692, 694, 708, 710], "electroacoust": [235, 240, 255, 260, 261, 262, 263, 470, 471, 472, 692, 694, 708], "1967": [235, 240, 255, 260, 261, 262, 263, 470, 471, 472, 692, 694, 708], "tau": [235, 240, 255, 260, 261, 262, 263, 470, 471, 472, 692, 694, 708], "1161901": [235, 240, 255, 260, 261, 262, 263, 470, 471, 472, 692, 694, 708], "slepian": [235, 240, 255, 260, 261, 262, 263, 470, 471, 472, 692, 694, 702, 707, 709], "bell": [235, 240, 255, 260, 261, 262, 263, 470, 471, 472, 550, 576, 692, 694, 702, 707, 709], "1430": [235, 240, 255, 260, 261, 262, 263, 470, 471, 472, 692, 694, 702, 707, 709], "1978": [235, 240, 255, 260, 261, 262, 263, 470, 471, 472, 692, 694, 702, 707, 709], "7305": [235, 240, 255, 260, 261, 262, 263, 470, 471, 472, 692, 694, 702, 707, 709], "tb02104": [235, 240, 255, 260, 261, 262, 263, 470, 471, 472, 692, 694, 702, 707, 709], "10_spectrum_class": [235, 239], "72074": 236, "psd_": [236, 237], "mean_spectrum": 236, "psds_mean": [236, 237], "psds_std": [236, 237], "arithmet": [236, 550, 708, 710, 871], "psds_welch_mean": 236, "freqs_mean": 236, "psds_welch_median": 236, "freqs_median": 236, "epo_idx": 236, "unaggreg": [236, 708, 710, 871], "n_segment": [236, 708, 710], "welch_unagg": 236, "topomap_kw": 236, "fmin_fmax": 236, "timefreq": [236, 690], "20_sensors_time_frequ": [236, 239], "fpv": 237, "steadi": 237, "assr": 237, "norcia": 237, "picton": 237, "wet": [237, 847], "dominik": [237, 871], "welk": [237, 871], "evgenii": [237, 871], "kalenkovich": [237, 871], "ttest_rel": 237, "bids_fnam": 237, "12hz": 237, "15hz": 237, "decai": 237, "stabil": [237, 438, 550, 561, 871], "bach": 237, "meigen": 237, "boxcar": [237, 255, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 443, 470, 471, 472, 850, 871], "n_overlap": [237, 255, 260, 261, 262, 263, 470, 471, 472, 692, 694, 708, 710, 792], "n_per_seg": [237, 255, 260, 261, 262, 263, 470, 471, 472, 692, 694, 708, 710, 871], "snr_spectrum": 237, "noise_n_neighbor_freq": 237, "noise_skip_neighbor_freq": 237, "n_trial": [237, 419], "n_frequency_bin": 237, "increment": [237, 468, 550], "ON": 237, "averaging_kernel": 237, "mean_nois": 237, "apply_along_axi": 237, "edge_width": 237, "pad_width": 237, "constant_valu": 237, "drastic": [237, 272, 871], "reappear": 237, "grand": [237, 460, 853, 871], "floor": [237, 416, 576, 719, 722], "ceil": [237, 714], "psds_plot": 237, "snr_mean": 237, "snr_std": 237, "stim_freq": 237, "i_bin_12hz": 237, "1st": [237, 632], "i_bin_24hz": 237, "i_bin_36hz": 237, "i_bin_15hz": 237, "i_bin_30hz": 237, "i_bin_45hz": 237, "i_trial_12hz": 237, "i_trial_15hz": 237, "roi_vi": 237, "po9": 237, "po10": 237, "o9": 237, "o10": 237, "picks_roi_vi": 237, "hotel": 237, "snrs_target": 237, "69365541718619": 237, "wait": [237, 255, 260, 830, 838, 871], "snrs_12hz": 237, "snrs_12hz_chaverag": 237, "tstat_roi_vs_scalp": 237, "985902": 237, "693655": 237, "000067": 237, "Such": [237, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 292, 293, 470, 471, 472, 631, 690, 693, 826, 852, 853], "somewher": [237, 470, 471, 472, 791, 835, 854], "unintend": 237, "preregist": 237, "peopl": [237, 830, 841, 852, 871], "detour": 237, "snrs_roi": 237, "freq_plot": 237, "color_plot": 237, "darkblu": [237, 470, 471, 472, 791], "darkgreen": 237, "mediumblu": 237, "seagreen": 237, "xpos_plot": 237, "stim_12hz_tmp": 237, "stim_15hz_tmp": 237, "snr_tmp": 237, "yerr": 237, "stim_12hz_snrs_": 237, "ihz": 237, "stim_15hz_snrs_": 237, "strike": 237, "tstat_12hz_trial_stim": 237, "stim_12hz_snrs_12hz": 237, "stim_12hz_snrs_15hz": 237, "tstat_12hz_trial_1st_harmon": 237, "stim_12hz_snrs_24hz": 237, "stim_12hz_snrs_30hz": 237, "tstat_12hz_trial_2nd_harmon": 237, "stim_12hz_snrs_36hz": 237, "stim_12hz_snrs_45hz": 237, "tstat_15hz_trial_stim": 237, "stim_15hz_snrs_12hz": 237, "stim_15hz_snrs_15hz": 237, "tstat_15hz_trial_1st_harmon": 237, "stim_15hz_snrs_24hz": 237, "stim_15hz_snrs_30hz": 237, "tstat_15hz_trial_2nd_harmon": 237, "stim_15hz_snrs_36hz": 237, "stim_15hz_snrs_45hz": 237, "000037": 237, "000014": 237, "000297": 237, "000024": 237, "519": 237, "006525": 237, "tour": [237, 871], "overli": 237, "motiv": 237, "stim_bandwidth": 237, "window_length": 237, "window_snr": 237, "i_win": 237, "this_spectrum": 237, "windowed_psd": 237, "windowed_freq": 237, "stimfreq": 237, "bin_width": 237, "skip_neighbor_freq": 237, "n_neighbor_freq": 237, "windowed_snr": 237, "boxplot": 237, "stochast": [237, 240, 550], "window_start": 237, "greyscal": 237, "optimist": 237, "serious": [237, 853], "50_ssvep": [237, 239], "auto_tutorials_tim": 239, "alphabet": [240, 830, 871], "fiorenzo": [240, 550], "artoni": [240, 550], "magazin": [240, 403], "962275": 240, "stephan": [240, 403], "bonnet": [240, 403], "marco": [240, 403], "congedo": [240, 403], "jutten": [240, 403], "riemannian": [240, 403], "multimedia": [240, 403], "mmsp": [240, 403], "5662067": [240, 403], "barber": [240, 349], "51814": [240, 349], "www": [240, 349, 442, 479, 564, 647, 652, 830, 850], "ucl": [240, 349], "staff": [240, 349, 836], "brml": [240, 349], "becker": [240, 650], "albera": [240, 650], "comon": [240, 650], "gribonv": [240, 650], "fleureau": [240, 650], "guillotel": [240, 650], "merlet": [240, 650], "sissi": [240, 650], "august": [240, 241, 650], "anthoni": [240, 550], "terrenc": [240, 550], "sejnowski": [240, 550, 576], "deconvolut": [240, 550, 576], "1159": [240, 550, 576], "neco": [240, 550], "anna": [240, 643, 871], "rita": [240, 643], "bentivoglio": [240, 643], "bressman": [240, 643], "cassetta": [240, 643], "donatella": [240, 643], "carretta": [240, 643], "pietro": [240, 643], "tonali": [240, 643], "alberto": [240, 643], "albanes": [240, 643], "disord": [240, 643], "870120629": [240, 643], "berg": [240, 853], "scherg": [240, 853], "1994": [240, 517, 853], "90113": [240, 853], "quentin": [240, 871], "anderson": [240, 871], "arindam": 240, "banerje": 240, "kenji": 240, "fukumizu": 240, "24th": 240, "1288": 240, "pmlr": 240, "apr": 240, "mlr": 240, "v130": 240, "bertrand21a": 240, "ryota": [240, 403], "tomioka": [240, 403], "lemm": [240, 403], "motoaki": [240, 403], "kawanab": [240, 403], "msp": [240, 403], "4408441": [240, 403], "fred": 240, "bookstein": 240, "thin": 240, "plate": 240, "24792": 240, "oleg": 240, "burdakov": 240, "bori": 240, "merkulov": 240, "lith": 240, "\u00f6": 240, "ping": 240, "yilun": [240, 349], "chen": [240, 349], "ami": [240, 349], "wiesel": [240, 349], "yonina": [240, 349], "eldar": [240, 349], "alfr": [240, 349, 846], "hero": [240, 349], "shrinkag": [240, 349, 403, 410, 411, 551, 871], "mmse": [240, 349], "5016": [240, 349], "5029": [240, 349], "2053029": [240, 349], "contributor": [240, 834, 837, 849, 850, 852, 859, 871], "readthedoc": 240, "ronald": [240, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 690, 693], "crochier": [240, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 690, 693], "lawrenc": [240, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 558, 690, 693], "rabin": [240, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 690, 693], "multir": [240, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 690, 693], "englewood": [240, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 690, 693], "cliff": [240, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 690, 693], "nj": [240, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 690, 693], "605162": [240, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 690, 693], "sarang": [240, 859], "dalal": [240, 859], "adrian": [240, 266, 271], "guggisberg": 240, "erik": [240, 871], "findlai": 240, "ryan": [240, 871], "canolti": 240, "mitchel": 240, "berger": 240, "barbaro": 240, "heidi": 240, "kirsch": 240, "1700": 240, "sereno": [240, 853], "1006": [240, 674, 853], "nimg": [240, 674, 853], "0395": [240, 853], "arthur": [240, 517, 720, 723], "liu": [240, 517], "buckner": [240, 517], "lewin": [240, 517], "s0896": [240, 517], "6273": [240, 517], "81138": [240, 517], "jocn": 240, "darva": 240, "ermer": 240, "20171": 240, "salat": [240, 853], "andr\u00e9": [240, 853], "kouw": [240, 853], "niko": [240, 853], "makri": [240, 853], "florent": [240, 853], "s\u00e9gonn": [240, 853], "quinn": [240, 853, 871], "s69": [240, 853], "s84": [240, 853], "0396": 240, "tootel": 240, "intersubject": 240, "sici": 240, "0193": 240, "hbm10": 240, "genoves": [240, 674], "lazar": [240, 403, 674], "supplementari": [240, 381], "neuroanatom": [240, 381], "esm": [240, 381], "art": [240, 381, 859], "3a10": [240, 381], "2fnature18933": [240, 381], "mediaobject": [240, 381], "41586_2016_bfnature18933_moesm330_esm": [240, 381], "s\u00f3nia": [240, 846], "gon\u00e7alv": [240, 846], "casper": [240, 846], "munck": [240, 846], "jeroen": [240, 846, 871], "verbunt": [240, 846], "fetsj": [240, 846], "bijma": [240, 846], "rob": [240, 846, 871], "heethaar": [240, 846], "vivo": [240, 846], "resist": [240, 846], "eit": [240, 846], "812164": [240, 846], "teon": [240, 845, 871], "lauri": [240, 845], "parkkonen": [240, 845], "\u00e4": [240, 411, 845], "inen": [240, 845], "fnin": [240, 845], "00267": [240, 845], "greischar": [240, 558], "cori": [240, 558], "burghi": [240, 558], "carien": [240, 558], "reekum": [240, 558], "daren": [240, 558], "jackson": [240, 558], "diego": [240, 558], "pizzag": [240, 558], "corrina": [240, 558], "mueller": [240, 558], "davidson": [240, 558], "electroencephalograph": [240, 558], "hne": [240, 411], "073": [240, 411], "gari": [240, 672], "heiman": [240, 672], "houghton": [240, 672], "mifflin": [240, 672], "boston": [240, 251, 672, 858], "17028": [240, 672], "joerg": [240, 292], "hipp": [240, 292], "hawellek": 240, "maurizio": 240, "corbetta": 240, "marku": [240, 292], "siegel": [240, 292], "engel": [240, 292], "spontan": [240, 846], "3101": 240, "percept": [240, 292, 826, 847, 871], "aapo": [240, 550], "hyv\u00e4rinen": [240, 550], "761722": [240, 550], "toga": 240, "mazziotta": 240, "academ": 240, "san": 240, "b978": 240, "012693019": 240, "50012": 240, "bf02512476": [240, 517], "tkk": 240, "a559": 240, "helsinki": 240, "technologi": [240, 251, 858], "16463": 240, "kevin": [240, 720, 723], "jone": [240, 720, 723], "bernic": [240, 720, 723], "porjesz": [240, 720, 723], "chorlian": [240, 720, 723], "madhavi": [240, 720, 723], "rangaswami": [240, 720, 723], "chella": [240, 720, 723], "kamarajan": [240, 720, 723], "ajayan": [240, 720, 723], "padmanabhapillai": [240, 720, 723], "stimu": [240, 720, 723], "henri": [240, 720, 723], "begleit": [240, 720, 723], "deficit": [240, 720, 723], "diagnos": [240, 720, 723, 871], "alcohol": [240, 720, 723], "2128": [240, 720, 723], "jorg": 240, "jovicich": 240, "silvest": 240, "czanner": 240, "elizabeth": 240, "halei": 240, "andr": [240, 871], "kennedi": 240, "franz": 240, "schmitt": 240, "gregori": 240, "brown": [240, 532, 650], "macfal": 240, "antti": [240, 871], "ahonen": 240, "lain": 240, "claudia": [240, 853], "tesch": [240, 853], "3315": 240, "281163": 240, "zhou": [240, 403], "1990": [240, 403], "bf01129656": [240, 403], "philipp": 240, "lachaux": 240, "eugenio": 240, "rodriguez": [240, 871], "martineri": 240, "francisco": 240, "varela": 240, "synchroni": 240, "hbm4": 240, "attent": [240, 266, 271, 856], "ledoit": [240, 349], "wolf": [240, 349], "s0047": [240, 349], "259x": [240, 349], "00096": [240, 349], "te": [240, 550, 871], "girolami": [240, 550, 576], "subgaussian": [240, 550, 576, 871], "supergaussian": [240, 550, 576], "089976699300016719": [240, 550], "seok": [240, 846], "lew": [240, 846], "carsten": [240, 846], "wolter": [240, 846], "anwand": [240, 846], "macleod": [240, 846], "compart": [240, 252, 514, 826, 846, 856], "2862": [240, 846], "20714": [240, 846], "witzel": [240, 528, 647, 652], "582": 240, "8945": 240, "8950": 240, "10024": [240, 871], "lowri": [240, 672], "vassarstat": [240, 672], "bernard": [240, 650], "giusiano": [240, 650], "roehri": [240, 650], "b\u00e9nar": [240, 650], "kathryn": [240, 381], "mill": [240, 381], "6084": [240, 381], "m9": [240, 381], "figshar": [240, 381], "3498446": [240, 381], "molin": [240, 532, 650], "quantif": [240, 424, 532, 650, 837], "1069": [240, 532, 650], "paul": [240, 853, 871], "748978": [240, 853], "ali": [240, 720, 723], "moukadem": [240, 720, 723], "zi": [240, 720, 723], "bouguila": [240, 720, 723], "djaffar": [240, 720, 723], "ould": [240, 720, 723], "abdeslam": [240, 720, 723], "alain": [240, 720, 723], "dieterlen": [240, 720, 723], "lisbon": [240, 720, 723], "6952743": [240, 720, 723], "mourtazaev": [240, 396], "1093": [240, 396], "suresh": [240, 555], "muthukumaraswami": [240, 555], "00138": [240, 555], "ndiay": 240, "fercoq": 240, "salmon": 240, "sugiyama": 240, "luxburg": 240, "guyon": 240, "garnett": 240, "curran": 240, "inc": [240, 830, 835], "nip": [240, 466], "cc": [240, 466, 852], "6405": 240, "holm": [240, 679], "primer": [240, 679], "ou": 240, "bai": 240, "wheaton": 240, "sherri": 240, "vorbach": 240, "hallett": 240, "2292": 240, "2307": 240, "zieh": 240, "aloi": 240, "schl\u00f6gl": 240, "kr\u00e4mer": 240, "brismar": 240, "robustli": 240, "physrevlett": 240, "234101": 240, "hilla": [240, 386], "paananen": [240, 386], "jyrki": [240, 386], "m\u00e4kel\u00e4": [240, 386], "5281": [240, 386], "zenodo": [240, 386, 845], "889234": [240, 386], "reilli": [240, 382, 847, 871], "mayada": [240, 382, 847], "elsabbagh": [240, 382, 847], "infant": [240, 382, 871], "117682": [240, 382, 847], "thom": [240, 846], "oostendorp": [240, 846], "delbek": [240, 846], "dick": [240, 846], "stegeman": [240, 846], "vitro": [240, 846], "1487": [240, 846], "880100": [240, 846], "oppenheim": [240, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 690, 693], "schafer": [240, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 690, 693], "buck": [240, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 690, 693], "prentic": [240, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 690, 693], "hall": [240, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 690, 693], "saddl": [240, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 690, 693], "river": [240, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 690, 693], "754920": [240, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 690, 693], "roberto": [240, 517, 853], "pascual": [240, 517, 853], "marqui": [240, 517, 853], "martha": [240, 517, 853], "koukkou": [240, 517, 853], "kieko": [240, 517, 853], "kochi": [240, 517, 853], "bernd": [240, 517, 853], "saletu": [240, 517, 853], "hideaki": [240, 517, 853], "tanaka": [240, 517, 853], "koichi": [240, 517, 853], "hirata": [240, 517, 853], "lesli": [240, 517, 853], "prichep": [240, 517, 853], "rolando": [240, 517, 853], "biscai": [240, 517, 853], "lirio": [240, 517, 853], "toshihiko": [240, 517, 853], "kinoshita": [240, 517, 853], "royal": [240, 349, 517, 853], "1952": [240, 517, 853], "3768": [240, 517, 853], "3784": [240, 517, 853], "1098": [240, 517, 853], "rsta": [240, 517, 853], "0081": [240, 517, 853], "donald": [240, 709], "perciv": [240, 709], "walden": [240, 709], "35532": [240, 709], "cbo9780511622762": [240, 709], "dinh": [240, 871], "tuan": 240, "pham": 240, "hermitian": 240, "1136": 240, "s089547980035689x": 240, "luca": [240, 582], "pollonini": [240, 582], "cristen": [240, 582], "homer": [240, 582], "abaya": [240, 582], "heather": [240, 582], "bortfeld": [240, 582], "beauchamp": [240, 267, 271, 275, 582, 796], "oghalai": [240, 582], "cochlear": [240, 582], "ernesto": 240, "pereda": 240, "ricardo": 240, "bru": 240, "\u00f1": 240, "maest": 240, "\u00fa": 240, "dog": 240, "056011": 240, "2552": 240, "aacfe4": 240, "sanchez": [240, 382], "meek": [240, 382], "wanz": [240, 382], "xie": [240, 382], "1254": [240, 382], "1259": [240, 382], "hat": [240, 525, 561, 650, 683, 684, 853, 871], "noam": [240, 565], "pele": [240, 565], "00694": [240, 565], "abraham": [240, 255, 260, 261, 262, 263, 470, 471, 472], "savitzki": [240, 255, 260, 261, 262, 263, 470, 471, 472], "marcel": [240, 255, 260, 261, 262, 263, 470, 471, 472], "golai": [240, 255, 260, 261, 262, 263, 470, 471, 472, 871], "chemistri": [240, 255, 260, 261, 262, 263, 470, 471, 472], "1627": [240, 255, 260, 261, 262, 263, 470, 471, 472], "1639": [240, 255, 260, 261, 262, 263, 470, 471, 472], "1964": [240, 255, 260, 261, 262, 263, 470, 471, 472], "ac60214a047": [240, 255, 260, 261, 262, 263, 470, 471, 472], "nathaniel": [240, 676], "marta": [240, 676], "12320": [240, 676], "corn": 240, "stam": 240, "daffertshof": 240, "diminish": 240, "1178": 240, "1193": 240, "20346": 240, "sciencedirect": [240, 647, 652], "pii": [240, 647, 652], "s1053811913004333": [240, 647, 652], "luigi": [240, 720, 723], "rodino": [240, 720, 723], "bert": [240, 720, 723], "schulz": [240, 720, 723, 871], "wong": [240, 720, 723, 871], "pseudo": [240, 292, 293, 309, 720, 723], "american": [240, 720, 723], "1090": [240, 720, 723], "fic": [240, 720, 723], "2218": [240, 468], "2228": [240, 468], "tmi": [240, 468], "2553445": [240, 468], "evelina": 240, "busa": 240, "glessner": 240, "hybrid": 240, "1075": 240, "minna": [240, 853], "huotilainen": [240, 853], "oili": [240, 853], "salonen": [240, 853], "00064": [240, 853], "bishop": [240, 349], "1467": [240, 349], "9868": [240, 349], "00196": [240, 349], "vinck": 240, "wingerden": 240, "franscesco": 240, "battaglia": 240, "cyriel": 240, "pennartz": 240, "womelsdorf": 240, "pascal": 240, "fri": 240, "rhythmic": 240, "wehner": [240, 424], "modi": [240, 424], "children": [240, 251, 424, 856, 858], "wheat": [240, 720, 723], "pier": [240, 720, 723], "cornelissen": [240, 720, 723], "frost": [240, 720, 723], "hansen": [240, 720, 723], "phonologi": [240, 720, 723], "5229": [240, 720, 723], "5233": [240, 720, 723], "jneurosci": [240, 720, 723], "4448": [240, 720, 723], "whitham": [240, 550], "sean": [240, 550], "fitzgibbon": [240, 550], "clark": [240, 550, 871], "loveless": [240, 550], "marita": [240, 550], "broberg": [240, 550], "angu": [240, 550], "wallac": [240, 550], "lilli": [240, 550], "hardi": [240, 550], "rik": [240, 550], "fronsko": [240, 550], "alyson": [240, 550], "pulbrook": [240, 550], "paralysi": [240, 550], "1877": [240, 550], "1888": [240, 550], "rei": [240, 466], "ram\u00edrez": [240, 466], "jason": [240, 466], "palmer": [240, 466], "bhaskar": [240, 466], "rao": [240, 466], "neuroelectromagnet": [240, 466], "sch\u00f6lkopf": [240, 466], "platt": [240, 466], "hoffman": [240, 466], "1505": [240, 466], "3089": [240, 466], "jun": [240, 650], "juliu": [240, 650], "dewald": [240, 650], "april": [240, 650], "zhi": [240, 853, 871], "multilay": [240, 853], "moritz": [240, 403, 871], "wentrup": [240, 403], "buss": [240, 403], "921154": [240, 403], "jair": [240, 550, 871], "montoya": [240, 550, 871], "mart\u00ednez": [240, 550], "petr": [240, 550], "tichavsk\u00fd": [240, 550], "massoud": [240, 550], "babai": [240, 550], "zadeh": [240, 550], "nad\u00e8g": [240, 550], "thirion": [240, 550], "moreau": [240, 550], "latent": [240, 550, 785], "10169": [240, 550], "lectur": [240, 550, 855], "cham": [240, 550], "53547": [240, 550], "0_27": [240, 550], "pharmacologi": [240, 517, 853], "pubm": [240, 517, 853], "ncbi": [240, 517, 853], "nlm": [240, 517, 853], "nih": [240, 517, 853], "gov": [240, 517, 853], "12575463": [240, 517, 853], "encyclopedia": 240, "php": 240, "international_system_of_unit": 240, "oldid": 240, "982683558": 240, "googl": [241, 251, 803, 859, 871], "scholar": 241, "1270": 241, "1420": 241, "health": 251, "r01": 251, "eb009048": 251, "eb006385": 251, "hd040712": 251, "ns044319": 251, "ns037462": 251, "ns104585": 251, "p41": 251, "eb015896": 251, "rr014075": 251, "foundat": [251, 852], "0958669": 251, "1042134": 251, "european": [251, 853], "council": 251, "ystg": 251, "263584": 251, "676943": 251, "depart": 251, "fg02": 251, "99er62764": 251, "agenc": 251, "national": 251, "la": [251, 847, 858, 871], "recherch": [251, 858], "neuc": 251, "0002": 251, "idex": 251, "pari": [251, 871], "saclai": 251, "0003": 251, "summer": [251, 859, 871], "year": [251, 265, 396, 845, 852, 859], "amazon": 251, "grant": [251, 262, 263, 292, 293, 349, 353, 354, 363, 364, 365, 403, 410, 446, 447, 466, 468, 469, 528, 778, 830, 852, 871], "zuckerberg": 251, "eoss2": [251, 859], "eoss4": 251, "employe": [251, 852], "duti": [251, 852], "aalto": [251, 847, 858], "yliopiston": [251, 858], "perustieteiden": [251, 858], "korkeakoulu": [251, 858], "aarhu": [251, 858], "universitet": [251, 858], "athinoula": [251, 847, 858], "martino": [251, 847, 858], "hospit": [251, 847, 858], "philadelphia": [251, 858], "school": [251, 858], "informatiqu": [251, 858], "automatiqu": [251, 858], "franzen": [251, 858], "universit\u00e4t": [251, 858], "graz": [251, 858], "macquari": [251, 847, 858], "massachusett": [251, 858], "planck": [251, 858], "f\u00fcr": [251, 858], "bildungsforschung": [251, 858], "uniwersytet": [251, 858], "humanistycznospo\u0142eczni": [251, 858], "washington": [251, 858], "commissariat": [251, 858], "\u00e0": [251, 858], "\u00e9nergi": [251, 858], "atomiqu": [251, 858], "aux": [251, 858], "forschungszentrum": [251, 858], "j\u00fclich": [251, 858], "du": [251, 858], "cerveau": [251, 858], "moell": [251, 858], "\u00e9pini\u00e8r": [251, 858], "sant\u00e9": [251, 858], "m\u00e9dical": [251, 858], "technisch": [251, 858], "t\u00e9l\u00e9com": [251, 858], "exit": [252, 266, 462, 539, 830], "outfil": 252, "anon": 252, "keep_hi": [252, 255, 260, 261, 262, 263, 470, 471, 472, 473, 871], "n_dai": 252, "daysback": [252, 255, 260, 261, 262, 263, 470, 471, 472, 473], "anonymize_info": [252, 255, 260, 261, 262, 263, 470, 471, 472, 861, 871], "resav": 252, "projoff": [252, 871], "navigaton": 252, "show_opt": [252, 470, 471, 472, 791], "dialog": [252, 255, 260, 261, 262, 263, 470, 471, 472, 791, 794, 836], "allowmaxshield": 252, "filtord": [252, 470, 471, 472, 791, 871], "iir": [252, 255, 260, 261, 262, 263, 405, 414, 438, 439, 441, 442, 470, 471, 472, 562, 563, 582, 644, 654, 703, 779, 791, 860, 871], "clamp": [252, 470, 471, 472, 738, 791], "filterchpi": [252, 871], "head_shap": 252, "out_fnam": 252, "rotation_x": [252, 482], "compensatori": 252, "deg": 252, "ecg_ch": [252, 482], "eog_ch": [252, 482, 871], "e31": [252, 482], "e63": [252, 482], "my_raw": 252, "quiet": [252, 255, 260, 261, 693], "mne_process_raw": [252, 856], "in_raw": 252, "clean_raw": 252, "file_a": 252, "file_b": 252, "test_raw_sss": 252, "filters": 252, "tap": [252, 562, 563, 570, 571, 847], "rej": 252, "rej_grad": 252, "rej_mag": 252, "rej_eeg": 252, "rej_eog": 252, "bad_fnam": 252, "raw_event_fnam": 252, "tstart": [252, 267, 268, 271, 274, 275, 276, 562, 563, 570, 571, 573, 871], "qrsthr": 252, "qrs_threshold": [252, 562, 570, 573], "eog_l_freq": [252, 563], "eog_h_freq": [252, 563], "head_opac": [252, 462], "trackbal": [252, 262, 263, 462, 738, 754, 773], "terrain": [252, 262, 263, 462, 738, 754, 773, 871], "flash30": [252, 298, 853, 871], "noflash30": [252, 853], "flash5": [252, 298, 302, 853, 871], "multiecho": [252, 298, 302], "echo": [252, 298, 829, 835, 836, 853], "noconvert": 252, "unwarp": [252, 298, 853], "grad_unwarp": [252, 298, 853], "symlink": [252, 302, 304, 871], "flash_path": 252, "parameter_map": [252, 302, 853], "mef05": 252, "mef30": 252, "mef05_": [252, 298, 871], "mef30_": [252, 298, 871], "spin": [252, 302], "termin": [252, 828, 829, 830, 833, 834, 836, 841, 850, 861, 871], "kt2fiff": 252, "mkheadsurf": [252, 303], "topolog": [252, 303, 360, 402, 422, 453, 598, 627, 629, 819, 846, 871], "suffix": [252, 270, 470, 471, 472, 484, 871], "_sss": 252, "origin_out": 252, "autobad": 252, "maxst": 252, "buflen": 252, "st_buflen": 252, "st_corr": 252, "mv_tran": 252, "in_fnam": 252, "movecomp": 252, "mv_hp": 252, "ascii": [252, 487, 596, 602, 624, 871], "hpistep": 252, "mv_hpistep": 252, "hpisubt": 252, "mv_hpisubt": 252, "nohpicon": 252, "linefreq": 252, "nooverwrit": 252, "mx_arg": 252, "sof": 252, "bmin": 252, "bash": [252, 829, 830, 835, 836, 841], "TO": 252, "1280": [252, 402, 507], "brainc": 252, "skullc": 252, "scalpc": 252, "homog": [252, 507, 846], "7mm": 252, "joblib": [252, 255, 260, 261, 262, 263, 266, 267, 268, 270, 271, 274, 275, 276, 278, 349, 350, 352, 354, 406, 413, 416, 419, 420, 446, 459, 461, 470, 471, 472, 509, 512, 513, 523, 524, 533, 534, 555, 562, 563, 633, 638, 641, 642, 643, 655, 677, 678, 679, 680, 681, 692, 694, 695, 696, 697, 698, 699, 700, 707, 708, 709, 710, 718, 719, 720, 721, 722, 770, 773, 792, 859, 871], "cp": [252, 836, 853, 871], "mri_watersh": [252, 304, 850, 853], "gcaatla": [252, 304, 850], "brain_atla": [252, 304], "preflood": [252, 304, 850], "brainmask": [252, 304, 850, 871], "fname2": 252, "parser": [253, 432, 871], "reaverag": 253, "category_nam": 253, "acq_dict": 253, "subav": 253, "subaverag": [253, 856], "__len__": [253, 254, 255, 256, 257, 258, 260, 261, 265, 266, 269, 270, 284, 297, 470, 471, 472, 516, 691, 692, 693, 726], "n_cat": 253, "uint_cast": [253, 444], "delayed_lookup": 253, "acqp": 253, "mne_stim_channel_2": [253, 444, 445], "uint16": [253, 444], "sti014": [253, 444, 871], "sti016": [253, 444], "32768": [253, 402, 444], "mne_fix_stim14": [253, 444], "slight": [253, 871], "asynchroni": 253, "conds_data": 253, "n_epochs_out": 253, "n_annot": 254, "iso8601": 254, "delimit": 254, "bad_flux": 254, "bad_nois": 254, "meg0111": [254, 255, 260, 261, 262, 263, 265, 305, 322, 324, 354, 363, 405, 419, 424, 470, 471, 472, 549, 550, 552, 565, 566, 567, 572, 575, 584, 586, 593, 625, 658, 676, 685, 690, 692, 693, 694, 698, 699, 700, 701, 703, 709, 710, 722, 762, 768, 769, 772, 774, 775, 782, 789, 792], "meg2563": 254, "meg1443": 254, "n_blink": 254, "yy": [254, 483], "______________": 254, "_________": 254, "anot": 254, "___________________": 254, "o_________": 254, "________________________": 254, "o______________": 254, "crash": [254, 871], "o________________________": 254, "bad_acq_skip": [254, 255, 260, 261, 262, 263, 470, 471, 472, 491, 569, 578, 871], "behaviour": [254, 498, 500], "__add__": [254, 256, 257, 266, 267, 268, 271, 273, 274, 275, 276, 307, 690], "concatenc": 254, "__iter__": [254, 255, 257, 260, 261, 265, 269, 284, 297, 516, 640, 692, 693, 726], "array_lik": [254, 255, 257, 258, 260, 261, 262, 263, 265, 269, 270, 279, 305, 307, 322, 324, 354, 363, 403, 405, 410, 413, 416, 418, 419, 420, 424, 430, 469, 470, 471, 472, 482, 494, 509, 514, 549, 550, 551, 552, 555, 559, 560, 561, 564, 565, 566, 567, 569, 572, 575, 578, 584, 586, 592, 593, 604, 628, 629, 644, 658, 668, 669, 672, 674, 675, 676, 684, 685, 690, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 703, 709, 710, 718, 719, 721, 722, 738, 743, 755, 762, 768, 769, 770, 772, 774, 775, 777, 778, 779, 780, 781, 782, 783, 784, 786, 788, 789, 790, 792, 793, 794, 798, 800], "use_orig_tim": [254, 871], "676071": 254, "shortstimulu": 254, "longstimulu": 254, "tabular": [254, 255, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 690, 692, 693, 694], "preload_at_end": 255, "event_rep": [255, 260, 871], "raw_sfreq": 255, "abstract": [255, 859], "meg2623": [255, 260, 261, 262, 263, 265, 305, 322, 324, 354, 363, 405, 419, 424, 470, 471, 472, 549, 550, 552, 565, 566, 567, 572, 575, 584, 586, 593, 658, 676, 685, 690, 692, 693, 694, 698, 699, 700, 701, 703, 709, 710, 722, 762, 768, 769, 772, 774, 775, 782, 789, 792], "ptp": [255, 260, 261, 550, 552, 566], "40e": [255, 260, 261, 354, 550, 566, 567, 676], "zeroth": [255, 260, 871], "unproject": [255, 260, 510, 601], "postpon": [255, 260, 510, 601], "silent": [255, 260, 396, 579, 848, 871], "irrespect": [255, 260, 360, 422, 453, 598, 627, 629, 819, 853], "coincid": [255, 260], "my_epoch": 255, "compensation_grad": [255, 260, 261, 262, 263, 265, 470, 471, 472, 550, 690, 692, 693, 694], "__contains__": [255, 257, 260, 261, 262, 263, 265, 269, 284, 297, 470, 471, 472, 516, 550, 690, 692, 693, 694, 726], "membership": [255, 260, 261, 262, 263, 470, 471, 472, 550, 690, 692, 693, 694, 871], "audio_left": [255, 260, 261, 693], "name_1": [255, 260, 261, 693], "name_2": [255, 260, 261, 693], "likewis": [255, 260, 261, 693, 852, 853], "eval": [255, 260, 261, 693], "col_a": [255, 260, 261, 693], "col_b": [255, 260, 261, 693], "add_annotations_to_metadata": [255, 260, 261], "annot_onset": [255, 260, 261], "annot_dur": [255, 260, 261], "annot_descript": [255, 260, 261], "add_list": [255, 260, 261, 262, 263, 470, 471, 472, 690, 692, 693, 694], "force_update_info": [255, 260, 261, 262, 263, 470, 471, 472, 690, 692, 693, 694], "overwritten": [255, 260, 261, 262, 263, 380, 470, 471, 472, 473, 564, 579, 690, 692, 693, 694, 871], "memmap": [255, 260, 261, 262, 263, 470, 471, 472, 633, 690, 692, 693, 694, 871], "resiz": [255, 260, 261, 262, 263, 470, 471, 472, 690, 692, 693, 694, 777, 871], "januari": [255, 260, 261, 262, 263, 470, 471, 472, 473, 856], "1\u02e2\u1d57": [255, 260, 261, 262, 263, 470, 471, 472, 473], "his_id": [255, 260, 261, 262, 263, 265, 470, 471, 472, 473], "birthdai": [255, 260, 261, 262, 263, 265, 470, 471, 472, 473, 871], "revert": [255, 260, 261, 610, 818, 871], "channel_wis": [255, 260, 261, 470, 471, 472, 871], "parallel_backend": [255, 260, 261, 262, 263, 266, 267, 268, 270, 271, 274, 275, 276, 278, 349, 350, 352, 354, 406, 413, 416, 419, 420, 446, 459, 461, 470, 471, 472, 509, 512, 513, 523, 524, 533, 534, 555, 562, 563, 638, 641, 642, 643, 655, 677, 678, 679, 680, 681, 692, 694, 695, 696, 697, 698, 699, 700, 707, 708, 709, 710, 718, 719, 720, 721, 722, 770, 773, 792, 871], "x_a": [255, 260, 261, 262, 263, 470, 471, 472], "2u": [255, 260, 261, 262, 263, 470, 471, 472], "enevlop": [255, 260, 261, 262, 263, 470, 471, 472], "hint": [255, 260, 261, 262, 263, 470, 471, 472, 769], "projs_a": [255, 260, 261, 262, 263, 470, 471, 472], "proj_a": [255, 260, 261, 262, 263, 470, 471, 472], "projs_b": [255, 260, 261, 262, 263, 470, 471, 472], "proj_b": [255, 260, 261, 262, 263, 470, 471, 472], "_v": [255, 260, 261, 262, 263, 871], "emphas": [255, 260, 261, 262, 263], "legendr": [255, 260, 261, 262, 263, 470, 471, 472, 509, 559, 853], "by_event_typ": [255, 260, 261, 871], "trim_mean": [255, 260, 261], "low_bia": [255, 260, 261, 262, 263, 408, 470, 471, 472, 523, 524, 692, 694, 697, 700, 702, 707, 709, 770], "undrop": [255, 260, 261], "timeout": [255, 260, 261], "forev": [255, 260, 261, 871], "lenient": [255, 260, 261], "drop_log_stat": [255, 260, 261], "perc": [255, 260, 261], "mintim": [255, 260, 261, 426], "seek": [255, 260, 261, 411, 426], "nonspati": [255, 260, 261], "fmt": [255, 260, 261, 262, 263, 433, 434, 436, 470, 471, 472, 853, 871], "eeglabio": [255, 260, 261, 433, 436, 470, 471, 472, 871], "lost": [255, 260, 261, 262, 263, 433, 434, 435, 436, 470, 471, 472, 828], "cart_to_eeglab": [255, 260, 261, 433, 436, 470, 471, 472], "5500m": [255, 260, 261, 262, 263, 405, 414, 439, 441, 442, 470, 471, 472], "cuda": [255, 260, 261, 262, 263, 405, 409, 414, 415, 441, 442, 443, 470, 471, 472, 834, 840, 850, 861, 871], "constrict": [255, 260, 261, 262, 263, 439, 441, 442, 470, 471, 472], "reflect_limit": [255, 260, 261, 262, 263, 441, 442, 443, 470, 471, 472], "savgol_filt": [255, 260, 261, 262, 263, 470, 471, 472], "get_annotations_per_epoch": [255, 260, 261], "epoch_annot": [255, 260, 261], "only_data_ch": [255, 260, 261, 262, 263, 265, 470, 471, 472, 550, 690, 692, 693, 694], "alia": [255, 260, 261, 262, 263, 273, 470, 471, 472, 585, 736, 754, 791, 830, 871], "unitless": [255, 260, 261, 262, 263, 470, 471, 472, 853], "return_event_id": [255, 260, 261, 605, 692, 693, 871], "respiratori": [255, 260, 261, 262, 263, 470, 471, 472, 547, 690, 692, 693, 694, 871], "excit": [255, 260, 261, 262, 263, 265, 470, 471, 472, 547, 690, 692, 693, 694, 853], "galvan": [255, 260, 261, 262, 263, 470, 471, 472, 547, 690, 692, 693, 694, 853, 871], "epoch_color": [255, 260, 261, 768], "use_opengl": [255, 260, 261, 470, 471, 472, 550, 768, 785, 791, 871], "theme": [255, 260, 261, 470, 471, 472, 550, 738, 768, 785, 791, 871], "overview_mod": [255, 260, 261, 470, 471, 472, 550, 768, 785, 791, 871], "5th": [255, 260, 261, 262, 263, 270, 470, 471, 472, 768, 791], "1e2": [255, 260, 261, 270, 470, 471, 472, 768, 791], "20\u00b5v": [255, 260, 261, 270, 470, 471, 472, 768, 791], "ital": [255, 260, 261, 262, 263, 470, 471, 472, 768, 772, 776, 791, 856], "zen": [255, 260, 261, 470, 471, 472, 550, 768, 785, 791, 871], "selector": [255, 260, 261, 262, 263, 470, 471, 472, 768, 791, 794, 856, 871], "processor": [255, 260, 261, 379, 470, 471, 472, 550, 768, 785, 791], "pyopengl": [255, 260, 261, 470, 471, 472, 550, 768, 785, 791], "stylesheet": [255, 260, 261, 470, 471, 472, 550, 738, 768, 785, 791], "qdarkstyl": [255, 260, 261, 470, 471, 472, 550, 738, 768, 785, 791], "darkdetect": [255, 260, 261, 470, 471, 472, 550, 738, 768, 785, 791], "mpl": [255, 260, 261, 267, 268, 271, 274, 275, 276, 470, 471, 472, 738, 768, 791, 796, 801], "tkagg": [255, 260, 261, 470, 471, 472, 768, 791], "f11": [255, 260, 261, 470, 471, 472, 768, 791], "set_browser_backend": [255, 260, 261, 470, 471, 472, 550, 768, 785, 791, 810, 861, 871], "magic": [255, 260, 261, 470, 471, 472, 550, 768, 785, 791, 828, 850], "qt5": [255, 260, 261, 470, 471, 472, 550, 768, 785, 791, 834], "n_max_plot": [255, 260, 261, 767], "good_epoch": [255, 260, 261, 769], "1e13": [255, 257, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 349, 353, 354, 403, 410, 412, 470, 471, 472, 769, 772, 774, 776, 777, 799], "1e15": [255, 257, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 349, 353, 354, 403, 410, 412, 470, 471, 472, 769, 772, 774, 776, 777, 799], "pluss": [255, 257, 260, 261, 262, 263, 269, 403, 410, 470, 471, 472, 549, 550, 564, 690, 692, 694, 755, 770, 777, 781, 790, 793, 798, 800], "skirt": [255, 257, 260, 261, 262, 263, 269, 403, 410, 470, 471, 472, 549, 550, 564, 690, 692, 694, 755, 770, 777, 781, 790, 793, 798, 800, 871], "mask_po": [255, 257, 260, 261, 262, 263, 269, 403, 410, 470, 471, 472, 549, 550, 564, 690, 692, 694, 755, 770, 777, 781, 790, 793, 798, 800], "cloughtocher2dinterpol": [255, 257, 260, 261, 262, 263, 269, 403, 410, 470, 471, 472, 549, 550, 564, 690, 692, 694, 755, 770, 777, 781, 790, 793, 798, 800], "linearndinterpol": [255, 257, 260, 261, 262, 263, 269, 403, 410, 470, 471, 472, 549, 550, 564, 690, 692, 694, 755, 770, 777, 781, 790, 793, 798, 800], "encompass": [255, 257, 260, 261, 262, 263, 269, 470, 471, 472, 549, 550, 564, 690, 692, 694, 755, 770, 777, 790, 793, 798, 800], "polygon": [255, 257, 260, 261, 262, 263, 269, 470, 471, 472, 549, 564, 690, 692, 694, 755, 770, 777, 790, 793, 798, 800, 804, 871], "hull": [255, 257, 260, 261, 262, 263, 269, 470, 471, 472, 549, 564, 690, 692, 694, 755, 770, 777, 790, 793, 798, 800, 871], "doc": [255, 257, 260, 261, 262, 263, 269, 470, 471, 472, 549, 636, 690, 692, 694, 755, 770, 777, 790, 793, 798, 800, 830, 850, 859, 871], "rightmost": [255, 257, 260, 261, 262, 263, 269, 470, 471, 472, 549, 550, 690, 692, 694, 770, 777, 781, 790, 793, 798], "mini": [255, 257, 260, 261, 262, 263, 269, 470, 471, 472, 549, 690, 692, 694, 770, 777, 790, 793, 798], "area_alpha": [255, 260, 261, 262, 263, 470, 471, 472, 792], "line_alpha": [255, 260, 261, 262, 263, 470, 471, 472, 792], "asd": [255, 260, 261, 262, 263, 470, 471, 472, 792], "idiom": [255, 260, 261, 262, 263, 470, 471, 472, 792, 830], "decibel": [255, 260, 261, 262, 263, 271, 470, 471, 472, 523, 692, 694, 770], "log\u2081\u2080": [255, 260, 261, 262, 263, 470, 471, 472, 675, 692, 694, 770], "markeredgecolor": [255, 257, 260, 261, 262, 263, 403, 410, 470, 471, 472, 549, 690, 692, 694, 755, 770, 777, 793, 798, 800], "ch_group": [255, 260, 261, 262, 263, 470, 471, 472, 794], "to_spher": [255, 260, 261, 262, 263, 470, 471, 472, 794, 871], "n_ch_group": [255, 260, 261, 262, 263, 470, 471, 472, 794], "n_pick": [255, 260, 261, 262, 263, 470, 471, 472, 593, 794], "plot_raw": [255, 260, 261, 262, 263, 470, 471, 472, 794, 807, 861, 871], "downward": [255, 260, 261, 262, 263, 470, 471, 472, 794], "plot_layout": [255, 260, 261, 262, 263, 470, 471, 472, 794, 861, 871], "layout_scal": [255, 260, 261, 262, 263, 690, 751, 776, 799], "fig_background": [255, 260, 261, 262, 263, 690, 776, 799], "canva": [255, 260, 261, 262, 263, 690, 751, 776, 799, 853], "allow_dupl": [255, 260, 261, 262, 263, 307, 335, 470, 471, 472, 626, 871], "eeg061": [255, 260, 261, 262, 263, 307, 335, 470, 471, 472, 626], "eeg161": [255, 260, 261, 262, 263, 307, 335, 470, 471, 472, 626], "anti": [255, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 804, 871], "reset_drop_log_select": [255, 260, 261, 871], "meaningless": [255, 260, 261], "split_siz": [255, 260, 261, 470, 471, 472], "2gb": [255, 260, 261, 470, 471, 472, 871], "split_nam": [255, 260, 261, 470, 471, 472, 871], "100mb": [255, 260, 261, 470, 471, 472], "partit": [255, 260, 261, 354, 470, 471, 472, 678, 853, 871], "schema": [255, 260, 261, 470, 471, 472], "fname_split": [255, 260, 261, 470, 471, 472], "github": [255, 260, 261, 262, 263, 470, 471, 472, 828, 838, 842, 849, 850, 851, 852], "bbac101d50176611136b": [255, 260, 261, 262, 263, 470, 471, 472], "setter": [255, 260, 261, 470, 471, 472], "set_meas_d": [255, 260, 261, 262, 263, 470, 471, 472, 871], "match_cas": [255, 260, 261, 262, 263, 265, 470, 471, 472, 871], "match_alia": [255, 260, 261, 262, 263, 265, 470, 471, 472, 871], "channel_loc_alias": [255, 260, 261, 262, 263, 265, 470, 471, 472], "make_dig_montag": [255, 260, 261, 262, 263, 265, 307, 323, 325, 326, 327, 328, 329, 330, 331, 332, 334, 470, 471, 472, 493, 853, 861, 871], "std_err": [255, 260, 261], "mechan": [255, 260, 261, 852], "1591": [255, 260, 261], "juli": [255, 260, 261], "use_round": [255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 432, 470, 471, 472, 690, 693], "rangeindex": [255, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 690, 692, 693, 694], "float64index": [255, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 690, 692, 693, 694], "int64index": [255, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 690, 692, 693, 694], "timedeltaindex": [255, 260, 261, 262, 263, 267, 268, 271, 274, 275, 276, 470, 471, 472, 690, 693], "__sub__": [256, 266, 267, 268, 271, 274, 275, 276, 690], "nfree": [257, 258, 856, 871], "eig": [257, 856], "eigvec": [257, 856], "eigenvector": [257, 853, 856], "as_diag": 257, "diagnois": 257, "fromkei": [257, 265, 269, 284, 297, 516, 726], "fig_svd": [257, 763], "unrepresent": [257, 265, 269, 284, 297, 516, 726], "popitem": [257, 265, 269, 284, 297, 516, 726], "lifo": [257, 265, 269, 284, 297, 516, 726], "setdefault": [257, 265, 269, 284, 297, 516, 726], "khi2": 258, "mne_dipole_fit": [258, 871], "longitudin": 258, "qlong": 258, "qtran": 258, "\u03c7": 258, "dipolefix": [258, 446, 600, 861], "plot_amplitud": 258, "show_al": [258, 766], "highlight_color": [258, 766], "head_sourc": [258, 509, 766, 871], "glyph": [258, 268, 274, 276, 738, 766, 797, 801, 803, 871], "cube": [258, 766, 871], "mri_rot": [258, 766], "figure3d": [258, 262, 263, 267, 268, 270, 271, 273, 274, 275, 276, 747, 754, 766, 773, 796, 797, 801, 808, 830, 848, 861], "600x600": [258, 754, 766], "get_head_surf": [258, 509, 766, 861, 871], "bdip": [258, 600, 871], "pos_mni": 258, "n_po": [258, 337, 339, 464, 465, 780], "subdirectori": [258, 455, 738], "aspect_kind": 259, "combine_event_id": [260, 861], "id_numb": 260, "event_id_1": 260, "event_id_2": 260, "new_id_numb": 260, "programmat": 260, "no_data": [260, 693], "equalized_count": [260, 693], "elicit": [262, 471, 491, 608, 847], "__neg__": [262, 263, 267, 268, 271, 274, 275, 276], "negat": [262, 263, 267, 268, 271, 274, 275, 276], "evoked_neg": [262, 263], "prepend": [262, 263], "resum": [262, 263, 852], "mff": [262, 263, 328, 434, 435, 488, 609, 853, 871], "export_evokeds_mff": [262, 263, 434, 861, 871], "merge_grad": [262, 263, 776, 871], "unsort": [262, 263, 772], "weakest": [262, 263, 772, 871], "obscur": [262, 263, 772], "multiax": [262, 263, 772], "t_start": [262, 263, 772], "t_end": [262, 263, 772], "surf_map": [262, 263, 509, 773], "n_contour": [262, 263, 773], "turntabl": [262, 263, 462, 738, 754, 773], "unintent": [262, 263, 462, 754, 773], "mask_cmap": [262, 263, 690, 774], "mask_alpha": [262, 263, 690, 774], "do_mask": [262, 263, 774], "placement": [262, 263, 775, 826, 871], "illeg": [262, 263, 775], "01d": [262, 263, 403, 410, 777], "amplif": [262, 263, 292, 293, 349, 353, 354, 363, 364, 365, 403, 410, 446, 447, 466, 468, 469, 528, 778], "improperli": [262, 263, 292, 293, 349, 353, 354, 363, 364, 365, 403, 410, 446, 447, 463, 466, 468, 469, 528, 778, 871], "logger": [262, 263, 733, 735, 778], "_ave": [262, 263], "source_ori": [264, 856], "fiffv_mne_fixed_ori": [264, 856], "fiffv_mne_free_ori": [264, 856], "n_ori": 264, "source_rr": [264, 856], "n_sourc": [264, 292, 293, 403, 410, 448, 466, 468, 469], "nest": [265, 403, 406, 407, 409, 410, 411, 412, 413, 415, 416, 417, 551, 735, 830], "fiffv_coil_meg": 265, "fiffv_eeg_ch": 265, "3x3": [265, 493, 517], "fiff_unit_t_m": 265, "fiff_unitm_non": 265, "ctfkind": [265, 856], "colcal": 265, "rowcal": 265, "save_calibr": [265, 856], "serial": 265, "fiffv_point_eeg": [265, 856], "fiffc_vers": 265, "machid": [265, 856], "mac": 265, "usec": [265, 856], "he_level_raw": 265, "helium": 265, "helium_level": 265, "orig_file_guid": 265, "mea": 265, "creator": 265, "ncoil": 265, "hpi_coil": 265, "corr_coeff": 265, "coil_freq": 265, "dig_point": 265, "good_limit": 265, "dist_limit": [265, 273, 278, 339, 856, 871], "coord_tran": 265, "event_channel": 265, "mri_id": 265, "block_id": 265, "max_info": 265, "sss_info": 265, "max_st": 265, "sss_ctc": 265, "sss_cal": 265, "smartshield": [265, 871], "last_nam": 265, "first_nam": 265, "middle_nam": 265, "month": 265, "sex": [265, 871], "male": [265, 396], "femal": [265, 396], "handed": 265, "ambidextr": 265, "kilogram": 265, "command_lin": [265, 273], "tilt": [265, 482, 738, 853, 871], "subsystem": [265, 830], "meas_fil": 265, "mri_fil": 265, "roundtrip": [265, 871], "shh": 265, "working_dir": [265, 273], "xplotter": 265, "__setitem__": 265, "conflict": [266, 828, 830, 834, 871], "rgba": [266, 267, 268, 271, 274, 275, 276, 738, 753, 757, 796, 801, 802, 871], "accuru": [266, 271], "m\u00b2": [266, 826], "versionad": [266, 693, 754], "outside_vertic": 266, "lie": [266, 853], "get_tri": 266, "label_tri": 266, "get_vertices_us": 266, "label_vert": 266, "n_label_vertic": 266, "icosahedr": [266, 355, 402, 458, 459], "morph_label": [266, 613, 861, 871], "div1": [266, 667], "div2": [266, 667], "split_label": [266, 861, 871], "mris_divide_parcel": [266, 667], "n_part": [266, 667], "fring": 266, "sens_data": [267, 268, 271, 274, 275, 276], "volvectorsourceestim": [267, 268, 271, 272, 275, 861, 871], "__div__": [267, 268, 271, 274, 275, 276], "__mul__": [267, 268, 271, 274, 275, 276, 690], "tstop": [267, 268, 271, 274, 275, 276], "bihemilabel": [267, 268, 271, 274, 275, 276, 437, 504, 505, 861], "pane": [267, 271, 275, 738, 796, 836], "n_color": [267, 268, 271, 274, 275, 276, 757, 796, 801, 802], "hot": [267, 268, 271, 274, 275, 276, 796, 801], "fmid": [267, 268, 271, 274, 275, 276, 738, 757, 796, 801, 802, 871], "diverg": [267, 268, 271, 274, 275, 276, 738, 757, 796, 801, 802, 830], "binar": [267, 268, 271, 274, 275, 276, 646, 648, 649, 738, 796, 801], "colorschem": [267, 268, 271, 274, 275, 276, 796, 801], "bone": [267, 268, 271, 274, 275, 276, 738, 796, 801], "high_contrast": [267, 268, 271, 274, 275, 276, 738, 796, 801], "resort": [267, 271, 275, 796, 850], "devot": [267, 268, 271, 274, 275, 276, 796, 801], "occupi": [267, 268, 271, 274, 275, 276, 461, 639, 796, 801], "blend": [267, 268, 271, 274, 275, 276, 738, 757, 796, 801], "mip": [267, 268, 271, 274, 275, 276, 738, 796, 801], "surface_alpha": [267, 268, 271, 274, 275, 276, 738, 796, 801], "enclos": [267, 268, 271, 274, 275, 276, 738, 796, 801, 853, 871], "silhouette_alpha": [267, 268, 271, 274, 275, 276, 738, 796, 801], "silhouette_linewidth": [267, 268, 271, 274, 275, 276, 738, 796, 801], "time_label_s": [267, 268, 271, 274, 275, 276, 738, 796, 801], "freesurferoccipitalflattenedpatch": [267, 271, 275, 796], "openwetwar": [267, 271, 275, 796], "transform_data": [267, 268, 271, 274, 275, 276], "tmin_idx": [267, 268, 271, 274, 275, 276], "tmax_idx": [267, 268, 271, 274, 275, 276], "indicic": [267, 268, 271, 274, 275, 276], "data_t": [267, 268, 271, 274, 275, 276], "direction": [268, 274, 276], "vector_alpha": [268, 274, 276, 738, 801], "sane": [268, 274, 276, 801], "fiffv_proj_item_field": [269, 856], "compute_proj_": 269, "fidel": 270, "lang": [270, 871], "n_file": 270, "clearer": [270, 871], "add_custom_css": [270, 871], "add_custom_j": [270, 871], "javascript": [270, 871], "topomap_kwarg": [270, 789], "drop_log_ignor": [270, 871], "declutt": 270, "inverseoper": [270, 517, 518, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 795, 861, 871], "inverse_op": 270, "altogeth": 270, "stc_plot_kwarg": 270, "add_sys_info": 270, "sysinfo": 270, "sort_cont": [270, 871], "on_error": 270, "n_time_points_stc": 270, "remove_al": 270, "removed_index": 270, "open_brows": 270, "nanoamper": 271, "log_10": 271, "sum_k": [271, 853], "s_k": [271, 853], "subject_orig": [271, 274], "vertices_to": [272, 355], "pre_affin": 272, "src_data": 272, "vol_morph_mat": 272, "affinemap": 272, "diffeomorphicmap": [272, 727, 728, 811], "stc_from": 272, "mri_spac": [272, 871], "nifti2": [272, 275, 276], "stc_to": 272, "nifti2imag": 272, "src_from": [272, 537], "monolith": 273, "fiffv_mne_surf_left_hemi": [273, 856], "fiffv_mne_surf_right_hemi": [273, 856], "fiffv_mne_surf_unknown": 273, "fiffv_coord_mri": [273, 856], "inus": [273, 856], "subject_his_id": [273, 355], "ntri": [273, 856], "nuse_tri": [273, 856], "pinfo": 273, "155295": 273, "155323": 273, "155330": 273, "patch_ind": 273, "n_src_remain": 273, "essenti": [273, 380, 846, 853, 856], "115407": 273, "nearest_dist": [273, 856], "mri_width": 273, "mri_height": 273, "mri_depth": 273, "neighbor_vert": 273, "mri_ras_t": 273, "fiffv_mne_coord_ra": 273, "src_mri_t": [273, 871], "vox_mri_t": 273, "fiffv_mne_coord_mri_voxel": 273, "mri_volume_nam": 273, "seg_nam": 273, "include_surfac": 273, "include_discret": 273, "dest": [273, 275, 276, 725], "use_lut": [273, 871], "mne_analyz": [273, 655, 753, 836, 847, 859, 871], "subvolum": [275, 276, 871], "upsampl": [275, 276, 437, 443], "trilinear": [275, 276, 437], "ensnur": [275, 276, 437], "bg_img": [275, 276, 802, 871], "initial_po": [275, 276, 802], "nutmeg": [275, 276, 802], "spatialimag": [275, 276, 298, 463, 727, 728, 802, 811], "src_sampl": [275, 276, 802], "stc_vol_sampl": [275, 276, 802], "vl": [275, 618], "save_as_volum": [275, 276, 871], "pick_channels_forward": [280, 281, 861], "evoked_templ": 280, "apply_forward_raw": [280, 861, 871], "zlogratio": [283, 533, 534, 690, 693, 798], "data_sc": 283, "apply_dics_epoch": [285, 861, 871], "meaningfulli": 286, "quadrant": 286, "apply_d": [287, 861, 871], "borgiotti": [292, 293], "kaplan": [292, 293], "invari": [292, 293], "\u03b8i": [292, 293], "arguabl": [292, 293], "max_pow": [292, 293], "expon": [292, 293, 447, 466, 468, 469, 528], "compute_depth_prior": [292, 293, 448, 466, 468, 469, 528, 861, 871], "n_weight": 292, "src_type": [292, 293], "is_free_ori": [292, 293], "supplement": 292, "is_ssp": 293, "vec_stc": 293, "rework": [293, 871], "resmat": [294, 526, 527, 529, 532], "n_dipoles_lcmv": 294, "n_dipoles_fwd": 294, "februari": 295, "1996": 295, "1207": 295, "nov": 295, "acssc": 295, "599135": 295, "mef": [298, 853], "mef05_001": 298, "mef30_001": 298, "flash5_img": [298, 302], "dig_kind": [300, 301, 422, 871], "origin_head": 300, "origin_devic": 300, "exclude_front": [301, 422], "n_pt": 301, "convert_flash_mri": [302, 853, 861, 871], "no_decim": 303, "watersh": [304, 847, 871], "autorecon1": [304, 850, 871], "idx_by_typ": 305, "read_dig_captrak": [307, 320, 323, 327, 328, 329, 330, 331, 332, 853, 861, 871], "read_dig_dat": [307, 323, 326, 328, 329, 330, 331, 332, 483, 853, 861, 871], "read_dig_egi": [307, 320, 323, 326, 327, 329, 330, 331, 332, 853, 861, 871], "read_dig_hpt": [307, 323, 326, 327, 328, 329, 331, 853, 861, 871], "read_dig_localit": [307, 320, 326, 327, 328, 329, 330, 332, 861, 871], "acpc": 307, "ch_po": [307, 320], "remove_fiduci": [307, 871], "circumst": [307, 432, 871], "x_max": 308, "y_min": 308, "y_max": 308, "my_layout": 308, "keep_stim": 309, "combined_inst": 309, "native_head_t": 311, "equalized_inst": [312, 428], "ch_adjac": [313, 324], "use_c": 315, "3022": [315, 471, 853], "sq20483n": [315, 471], "3023": [315, 471, 853], "sq20483": [315, 471], "sq20950n": [315, 471], "upgrad": [315, 471, 871], "ch_indic": 316, "bg_imag": 316, "reserv": [316, 830, 852, 871], "make_grid_layout": [316, 321, 861], "neighbor_nam": 317, "builtin": [317, 318, 738, 830, 871], "heurist": 319, "capit": [319, 871], "periauricular": [320, 853], "n_point": [320, 334, 360, 422, 474, 494, 604], "n_hpi": 320, "compute_dev_head_t": [320, 861, 871], "mri_tal": [320, 502, 726], "fs_tal": [320, 502, 726], "ctf_head": [320, 502, 726], "ctf_meg": [320, 502, 726], "viewport": [321, 470, 471, 472, 791], "generate_2d_layout": [321, 322, 739, 861], "n_col": [322, 550, 691, 693, 764, 784, 871], "95mm": 323, "eloc": 325, "sfp": [325, 871], "besa": [325, 606, 871], "bvef": [325, 871], "095m": 325, "weakli": 325, "eg": [325, 871], "captrak": [326, 871], "xml": [326, 328, 435, 609, 853, 871], "bvct": [326, 853, 871], "compumed": [327, 483, 853], "eeg001": 329, "eeg002": 329, "hpt": [330, 853], "filepath": [330, 332, 688, 738], "digitz": 330, "pound": [330, 853], "auricular": [330, 853, 856], "signifi": [330, 550], "6729": 330, "3873": 330, "3671": 330, "6782": 330, "3127": 330, "3976": 330, "2363": 330, "8450": 330, "3601": 330, "5353": 330, "6828": 330, "8518": 330, "0697": 330, "0829": 330, "3744": 330, "6297": 330, "1376": 330, "4264": 330, "7352": 330, "7756": 330, "8676": 330, "0439": 330, "9297": 330, "6852": 330, "4881": 330, "2969": 330, "4939": 330, "localit": [331, 871], "read_polhemus_fastscan": [332, 861, 871], "on_header_miss": [334, 871], "fastscan": [334, 853], "t_step_min": [336, 337, 338], "t_window": [336, 338, 342, 560], "interf": [336, 338, 342], "_setup_hpi_amplitude_fit": 336, "disambigu": 336, "t_step_max": 337, "too_clos": 337, "adjust_dig": [337, 339], "\u03b4t": 337, "veloc": [337, 554], "chpi_snr": 338, "snr_mag": 338, "power_mag": 338, "resid_mag": 338, "snr_grad": 338, "power_grad": 338, "resid_grad": 338, "gof_limit": 339, "quat": [339, 345, 729, 731], "q1": [339, 470, 471, 472, 729, 731], "q2": [339, 729, 731], "q3": [339, 470, 471, 472, 729, 731], "monitor": [340, 853, 856], "hlc001": 340, "hlc002": 340, "hlc003": 340, "rawkit": [341, 494], "include_lin": 342, "t_step": 342, "allow_line_onli": [342, 871], "hpi_freq": 344, "n_coil": 344, "hpi_pick": 344, "hpi_on": 344, "head_pos_to_trans_rot_t": [346, 347, 641, 642, 643, 655, 861], "all_evok": 348, "keep_sample_mean": 349, "ledoit_wolf": [349, 871], "factor_analysi": 349, "store_precis": 349, "assume_cent": 349, "shrikag": 349, "iter_n_compon": 349, "emprici": 349, "redund": [349, 853, 871], "on_rank_mismatch": [353, 363, 364], "orth": [353, 871], "implicitli": [353, 415, 578, 846, 853], "resultingmorph": 355, "vertices_from": 355, "vert_rh": 355, "vert_lh": 355, "mris_left_right_regist": 355, "epochs_list": [356, 426], "add_offset": 356, "events_list": [358, 871], "event_list": [358, 871], "on_defect": [360, 422, 453, 598, 627, 629, 819, 871], "read_fiduci": [360, 861, 871], "canon": [360, 478, 738, 754, 845, 871], "quantiti": [360, 576, 852, 853], "radian": [360, 554], "lpa_weight": 360, "rpa_weight": 360, "hsp_weight": 360, "eeg_weight": 360, "hpi_weight": 360, "callback": [360, 738, 751, 871], "set_fid_match": 360, "set_grow_hair": 360, "hair": 360, "set_rot": 360, "rot": [360, 729, 731], "set_scal": 360, "sca": 360, "scale_mod": 360, "set_transl": 360, "tra": 360, "fids_mri": 362, "coordinatesystem": [362, 853], "return_rank": 363, "return_color": [363, 456], "prepare_noise_cov": [363, 861, 871], "n_nonzero": 363, "1e12": 364, "1e11": 364, "1e5": 364, "fd": [365, 826], "reg_cov": 365, "fs_home": 366, "create_raw": 367, "ignore_config": 369, "env": [369, 451, 828, 830, 834, 838], "device_id": 370, "force_upd": [371, 372, 373, 374, 376, 377, 379, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401], "update_path": [371, 372, 373, 374, 376, 377, 379, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 401], "mne_datasets_brainstorm_data_path": [371, 372, 373], "prompt": [371, 372, 373, 374, 376, 377, 379, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 401, 829, 833, 835, 841, 850], "base_url": [374, 396, 397], "getenv": 374, "foot": 374, "khanetal2018": 378, "dataset_param": 379, "check_vers": 379, "return_vers": 379, "auth": 379, "token": 379, "archive_nam": [379, 385], "folder_nam": [379, 385], "hash": [379, 385, 871], "config_kei": 379, "unzip": [379, 830], "untar": [379, 828], "decompress": 379, "authent": [379, 830], "usernam": [379, 830], "password": [379, 830], "httpdownload": 379, "012345": 379, "has_dataset": [379, 861, 871], "uncompress": 379, "cryptograph": 379, "sha256": 379, "19uheid": 379, "md5": 379, "upodh2io": 379, "dataset_nam": [379, 385, 871], "tar": [379, 828, 836], "12b75d1cb7df9dfb4ad73ed82f61094f": 379, "osf": 379, "86qa2": 379, "webpag": 381, "2wk": 382, "1mo": 382, "2mo": 382, "3mo": 382, "5mo": 382, "9mo": 382, "12mo": 382, "15mo": 382, "18mo": 382, "2yr": 382, "ants4": 382, "5month3t": 382, "subject_dir": 383, "fetch_dataset": [385, 861, 871], "\u00ecnt": 388, "mne_datasets_opml_path": 392, "edfx": [396, 397], "cassett": 396, "physionet_sleep_path": [396, 397], "temazepam": [396, 847, 861, 871], "telemetri": 397, "mild": 397, "asleep": 397, "mne_datasets_spm_data_path": 399, "n_triangl": 402, "quadric": 402, "30001": 402, "20480": 402, "cov_est": 403, "transform_into": [403, 410, 871], "average_pow": [403, 410], "cov_method_param": [403, 410, 411], "component_ord": [403, 871], "mutual_info": [403, 871], "csp_space": [403, 410], "mutual": [403, 488, 728], "simplif": 403, "mean_": [403, 410], "std_": [403, 410], "x_new": [403, 404, 405, 408, 410, 411, 414, 551], "n_features_new": [403, 404, 405, 408, 410, 411, 414, 551], "get_param": [403, 404, 406, 407, 409, 410, 411, 412, 413, 415, 416, 417, 551], "subobject": [403, 406, 407, 409, 410, 411, 412, 413, 415, 416, 417, 551], "name_format": [403, 410], "add_artist": [403, 410], "ticker": [403, 410], "n_pattern": [403, 410], "set_param": [403, 404, 406, 407, 409, 410, 411, 412, 413, 415, 416, 417, 551], "__": [403, 406, 407, 409, 410, 411, 412, 413, 415, 416, 417, 551], "classes_": [404, 406], "n_class": [404, 406, 407, 413, 419], "rtepoch": [405, 871], "temporalfilt": [405, 861, 871], "mne_realtim": [405, 863, 871], "base_estim": [406, 413, 871], "score_func": [406, 413, 550], "decision_funct": [406, 407, 413], "nd_featur": [406, 413], "n_slice": 406, "n_features_1": [406, 413], "n_features_2": [406, 413], "n_task": [406, 413], "clone": [406, 413, 828, 830, 838, 871], "n_target": [406, 407, 413, 420], "xt": [406, 413, 416], "283185307179586": 408, "nitim": [408, 702, 707, 709, 770, 871], "n_signal": [408, 714, 716], "fit_intercept": [409, 415], "r2": 409, "edge_correct": [409, 415], "baseestim": [409, 417, 420], "return_filt": 411, "flank": 411, "spectal": 411, "sprectal": 411, "sorter_spec": 411, "x_ssd": 411, "with_mean": 412, "with_std": 412, "estimators_": 413, "filterestim": [414, 861, 871], "unsupervis": 417, "spatialfilt": 418, "_xdawntransform": 418, "features_shape_": 418, "objective_funct": 419, "leaveoneout": 419, "surrogate_tri": 419, "mean_spatial_filt": 419, "pre_dispatch": 420, "n_dimensional_featur": 420, "dispatch": 420, "explos": 420, "spawn": [420, 871], "lightweight": [420, 828], "n_score": 420, "attr": [421, 830], "get_fitting_dig": [422, 861], "extrema": [423, 587, 811], "orig_sfreq": 424, "weight_al": 424, "ignore_ref": [424, 513, 561, 569, 578], "return_map": 424, "mag_scal": [424, 561, 569, 578], "multipolar": [424, 560, 561, 569, 578], "fit_sphere_to_headshap": [424, 560, 561, 569, 578, 861, 871], "magenetomet": [424, 561, 569, 578], "pickup": [424, 561, 569, 578, 853], "0168": [424, 561, 569, 578], "sp": 424, "old_event_id": 425, "new_event_id": 425, "safeti": [425, 838], "collat": 427, "absenc": 427, "ancillari": 427, "union": [427, 444, 550, 579], "myevent": 427, "last_myev": 427, "first_": 427, "event_typ": 427, "respet": 427, "slash": [430, 826, 871], "n_new_ev": 431, "aa": 432, "dd": [432, 483, 871], "ee": 432, "gg": 432, "syncstatu": 432, "99998": 432, "neuroscan": [432, 853, 871], "mffpy": [435, 871], "xml_file": 435, "physical_rang": [436, 470, 471, 472], "add_ch_typ": [436, 470, 471, 472], "vmrk": [436, 470, 471, 472, 596, 847, 871], "edflib": [436, 470, 471, 472], "f_pass": 438, "f_stop": 438, "return_copi": 438, "ellipt": 438, "gpass": 438, "gstop": 438, "weren": 438, "triag": [438, 689], "fs1": 439, "fs2": [439, 442], "fstop": 439, "max_tri": 440, "mt_bandwidth": [442, 470, 471, 472], "centr": [442, 470, 471, 472, 532], "xf": 442, "chronux": 442, "partha": 442, "mitra": 442, "hemant": 442, "bokil": 442, "oxford": [442, 830], "upfirdn": 443, "shortest_ev": 444, "find_stim_step": [444, 861, 871], "00000101": 444, "0000111": 444, "0100101": 444, "0000101": 444, "0000010": 444, "pad_start": 445, "pad_stop": 445, "whichev": [445, 447, 756], "v_from": 445, "v_to": 445, "min_dist": 446, "rhoend": 446, "fmin_cobyla": 446, "limit_depth_ch": [447, 871], "combine_xyz": 447, "gk": 447, "frobeniu": 447, "depth_prior": 447, "compute_orient_prior": [447, 861], "matirx": 447, "orient_prior": 448, "fwd_out": [449, 450], "restrict_forward_to_stc": [449, 861, 871], "restrict_forward_to_label": [450, 861, 871], "raise_error": 451, "config_path": 452, "mnemn": 452, "mgz_fname": 456, "atlas_id": [456, 611], "read_freesurfer_lut": [456, 861, 871], "labels_aseg": 457, "spatio_temporal_tris_adjac": [458, 861, 871], "all_inst": 460, "grown": 461, "territori": 461, "invad": 461, "broadcast": 461, "guess_mri_subject": 462, "head_high_r": 462, "scrollabl": 462, "orient_to_surfac": 462, "scale_by_dist": 462, "mark_insid": 462, "advanced_rend": 462, "head_insid": 462, "launch": [462, 538, 828, 830, 834, 836, 871], "movabl": 462, "splitter": 462, "qt4": 462, "unnecessari": [462, 479, 486, 492, 846, 848], "wx": 462, "occlud": 462, "coregistrationui": 462, "aligned_ct": 463, "ct": [463, 728, 811, 871], "intracranialelectrodeloc": 463, "unscal": [465, 871], "update_mod": 466, "bay": 466, "mackai": 466, "time_pca": 468, "dgap_freq": [468, 469, 871], "cd": [468, 830, 836, 850, 853, 871], "bcd": [468, 871], "dualiti": [468, 469, 871], "alpha_max": [468, 469], "epsilon": [468, 517], "alpha_spac": [469, 871], "alpha_tim": [469, 871], "raw_extra": 470, "orig_format": [470, 471, 472, 871], "buffer_size_sec": [470, 471, 472, 871], "orig_unit": 470, "unsplit": 470, "orig_nchan": 470, "nv": 470, "my_raw_object": 470, "subclass": 470, "_read_segment_fil": 470, "mult": 470, "time_slic": [470, 471, 472], "rawfif": [470, 471, 472], "crop_by_annot": [470, 471, 472, 871], "data_fram": [470, 471, 472], "quartil": [470, 471, 472], "load_bad_channel": [470, 471, 472, 871], "bad_fil": [470, 471, 472], "mne_mark_bad_channel": [470, 471, 472], "europ": [470, 471, 472], "lightgrai": [470, 471, 472, 767, 791], "show_first_samp": [470, 471, 472, 550, 785, 791], "eventloop": [470, 471, 472, 791], "prj": [470, 471, 472, 791], "secondari": [470, 471, 472, 791], "stim_pick": [470, 471, 472, 871], "supersampl": [470, 471, 472], "optimum": [470, 471, 472], "drop_small_buff": [470, 471, 472], "gzip": [470, 471, 472, 871], "projecton": [470, 471, 472], "datetimeindex": [470, 471, 472], "fix_mag_coil_typ": [471, 861, 871], "mne_fix_mag_coil_typ": 471, "pickl": 474, "mrk_point": 474, "pt": [475, 502], "fiffv_coord_": [475, 502], "input_fnam": [478, 479, 483, 486, 487, 488, 492, 494, 496, 602, 604], "pos_fnam": 478, "add_head_tran": 478, "artemis123": [478, 853, 871], "infer_typ": [479, 486, 871], "utf8": [479, 486, 871], "bdf": [479, 486, 492, 853, 871], "rawedf": [479, 486, 871], "gdf": [479, 486, 492, 853, 871], "batteri": 479, "trigger_sign": 479, "htm": 479, "cms_bit": 479, "cms_high": 479, "boxi": [480, 853, 871], "rawboxi": 480, "vhdr_fname": 481, "heogl": 481, "heogr": 481, "veogb": 481, "vision": [481, 852, 871], "rawbrainvis": [481, 871], "pdf_fname": 482, "config_fnam": 482, "head_shape_fnam": 482, "sort_by_ch_nam": 482, "e64": 482, "rawbti": 482, "data_format": 483, "date_format": 483, "int16": 483, "int32": [483, 856], "numsampl": 483, "rawcnt": 483, "system_clock": 484, "clean_nam": [484, 871], "rawctf": 484, "curri": [485, 596, 871], "dap": [485, 596], "rs3": 485, "cdt": [485, 596, 871], "dpa": [485, 596], "cef": [485, 596], "rawcurri": 485, "export_raw": [486, 861, 871], "storag": [486, 633], "sao2": 486, "subsecond": 486, "uint16_codec": [487, 596, 602, 871], "codec": [487, 596, 602, 738], "latin1": [487, 596, 602], "raweeglab": [487, 871], "trev": 488, "e1": [488, 609], "e2": [488, 609], "e3": [488, 609], "rawegi": 488, "nxe": [489, 853], "raweximia": 489, "data_nam": [490, 603, 607], "ft_datatype_raw": 490, "rawgdf": 492, "hitachi": [493, 871], "probe": [493, 871], "rawhitachi": 493, "3x5": 493, "etg": 493, "7000": 493, "s1": 493, "d1": 493, "s2": 493, "d2": 493, "s3": 493, "d3": 493, "s4": 493, "d4": 493, "s5": 493, "d5": 493, "s6": 493, "d6": 493, "s7": 493, "d7": 493, "s8": 493, "ft7": 493, "tp7": 493, "laid": 493, "d8": 493, "s9": 493, "d9": 493, "s10": 493, "3x11": 493, "d10": 493, "s11": 493, "d11": 493, "s12": 493, "d12": 493, "s13": 493, "d13": 493, "s14": 493, "d14": 493, "s16": 493, "d16": 493, "s17": 493, "d17": 493, "s18": 493, "stim_cod": 494, "allow_unknown_format": [494, 604], "ricoh": [494, 604, 871], "laboratori": [494, 604], "neuroelectr": 495, "nedf": [495, 871], "rawnedf": 495, "nicolet": [496, 853, 871], "nihon": 497, "kohden": 497, "rawnihon": 497, "nirx": [498, 853, 871], "nosatflag": 498, "rawnirx": 498, "wlx": 498, "nosatflags_wlx": 498, "persyst": [499, 853, 871], "rawpersyst": 499, "snirf": [500, 871], "jnir": 500, "rawsnirf": 500, "indent": [501, 746], "read_limit": [501, 746], "max_str": [501, 746], "mne_show_fiff": 501, "grow_outsid": 503, "hoc": [506, 837, 871], "standard_devi": 506, "write_bem_surfac": [507, 508, 597, 598, 846, 861, 871], "write_bem_solut": [508, 597, 598, 846, 861, 871], "relative_radii": 514, "radii": [514, 642], "csf": [514, 853], "replace_ev": [515, 871], "n_events_in": 515, "n_events_out": 515, "1111111111111111": [517, 518, 523, 524, 529, 533, 534], "prepare_inverse_oper": [517, 518, 519, 520, 521, 523, 524, 533, 534, 861, 871], "apply_inverse_tfr_epoch": [517, 518, 519, 520, 861, 871], "force_equ": [517, 871], "time_func": 520, "approx": [520, 853], "epochs_tfr": [521, 701], "inv_split": [523, 524], "snr_est": 525, "unregular": 525, "tild": [525, 853, 871], "lambda_k": [525, 853], "gamma_k": [525, 853], "biggest": 525, "chi": 525, "normalis": [526, 527], "willb": [526, 527], "n_orient_inv": [526, 527, 529], "n_orient_fwd": [526, 527, 529], "pca_var": [526, 527], "mantl": [528, 853], "cog_err": 532, "graviti": 532, "cog": 532, "maxrad_ext": 532, "peak_amp": 532, "sum_amp": 532, "surf_nam": [536, 613], "mne_docs_kind": 538, "mne_docs_vers": 538, "grad_reject": 540, "mag_reject": 540, "eeg_reject": 540, "eog_reject": 540, "explanatori": [549, 593], "info_": [549, 793], "intercept_": 549, "cumul": 550, "999999": [550, 871], "n_components_": [550, 871], "n_iter_": [550, 871], "pseudoinvers": [550, 561, 853, 871], "instabl": 550, "migrat": [550, 871], "debat": 550, "zca": 550, "tol_fastica": 550, "tol_picard": 550, "current_fit": 550, "unfit": 550, "pre_whitener_": 550, "pca_components_": 550, "pca_mean_": 550, "pca_explained_variance_": 550, "scrap": 550, "n_samples_": 550, "on_baselin": [550, 782, 871], "ummix": [550, 551], "reappli": [550, 782, 818, 871], "anymor": [550, 838, 871], "supra": [550, 552], "ecg_idx": 550, "kuiper": 550, "eog_idx": 550, "paralyz": 550, "threefold": 550, "farthest": 550, "msucl": 550, "ref_ica": 550, "ref_idx": 550, "baseraw": [550, 558, 861, 871], "unclean": 550, "pvaf": 550, "usecas": [550, 785], "plot_std": [550, 781, 783], "image_arg": [550, 690, 781, 783], "psd_arg": [550, 781, 783], "batch": [550, 781], "plot_ica_compon": [550, 861, 871], "topomap_axi": [550, 783], "image_axi": [550, 783], "erp_axi": [550, 783], "spectrum_axi": [550, 783], "variance_axi": [550, 783], "logarithm": [550, 783], "ass": [550, 784], "n_ica_compon": [550, 784], "sublabel": [550, 784], "score_sourc": [550, 871], "pearsonr": 550, "skew": 550, "correct_overlap": 551, "overlapp_correct": 551, "evokeds_": 551, "event_id_": 551, "correct_overlap_": 551, "n_event_typ": 551, "bad_perc": 552, "bad_peak": 552, "bad_flat": 552, "uncommon": 552, "sole": [553, 847, 852], "rotation_velocity_limit": 554, "translation_velocity_limit": 554, "use_dev_head_tran": [554, 871], "lm_cutoff": 558, "epoch_threshold": 558, "bw_method": 558, "intrins": 558, "hjorth": 558, "gaussian_kd": 558, "n_legendre_term": 559, "lap": [559, 635], "inst_csd": 559, "n_imbal": 560, "multipol": [560, 578], "bad_condit": [561, 569, 578], "extended_proj": [561, 569, 578], "ill": [561, 569, 578], "esss": [561, 569, 578, 859, 871], "n_meg": [561, 569], "n_moment": 561, "n_good_meg": 561, "reg_moment": 561, "n_use_in": 561, "dagger": 561, "phi": 561, "phi_in": 561, "data_meg_good": 561, "raw_ev": [562, 563], "avg_ref": [562, 563], "return_drop_log": [562, 563, 871], "ecg_ev": [562, 570, 573], "0005": [563, 850], "e0g": 563, "feed": [564, 853], "corrmapplugin1": 564, "categoris": 564, "preexist": 564, "dry": 564, "template_fig": 564, "labelled_": 564, "mag_pick": 565, "grad_pick": 565, "keep_ecg": [566, 871], "r_peak_events_arrai": 566, "doctest": 566, "interp_thresh": 568, "insts_bad": 568, "formerli": [568, 871], "noisy_ch": 569, "flat_ch": 569, "Their": [569, 830], "scores_flat": 569, "limits_flat": 569, "annotate_amplitud": [569, 578, 861, 871], "st_fix": [569, 578], "d_k": 569, "mu_d": 569, "sigma_d": [569, 853], "textrm": 569, "return_ecg": 570, "ch_ecg": [570, 573], "average_puls": [570, 573], "ecg_sourc": 573, "eog_sourc": 574, "n_neighbor": 575, "l_rate": 576, "w_chang": 576, "anneal_deg": 576, "anneal_step": 576, "n_subgauss": 576, "kurt_siz": 576, "6000": 576, "ext_block": 576, "blowup": [576, 655], "blowup_fac": 576, "n_small_angl": 576, "use_bia": 576, "return_n_it": [576, 871], "kurtosi": 576, "unmixing_matrix": 576, "return_max_it": 576, "bad_limit": 577, "ovwrlap": 578, "forth": 578, "relicens": 578, "permiss": 578, "certifi": 578, "seamless": 578, "vet": [578, 859], "abramowitz": 578, "stegun": 578, "us2006031038": 578, "us6876196": 578, "wo2005067789": 578, "wo2005078467": 578, "wo2006114473": 578, "lawyer": 578, "raw_er": 579, "from_raw": 579, "inject": 579, "raw_er_prepar": 579, "compil": 579, "pathlength": [580, 871], "hemoglobin": [585, 871], "wherev": 585, "realtim": [586, 861, 871], "provision": 586, "x0": [587, 675], "peak_loc": 587, "peak_mag": 587, "nathanael": 587, "yoder": 587, "ncyoder": 587, "purdu": 587, "36900026": 587, "76007351": 587, "imb_cal": 589, "t_raw": 592, "t_other": 592, "realign": [592, 826, 871], "first_ev": 592, "n_picks_ref": 593, "epochs_no_av": 593, "epochs_clean": 593, "n_parcel": 595, "amrk": 596, "ahdr": [596, 871], "patch_stat": [598, 620], "s_id": 598, "eventtyp": 602, "trialinfo_column": 603, "trialinfo": [603, 871], "mne_browse_raw": [605, 856], "avr": [606, 871], "mul": [606, 871], "sidecar": 606, "timelock": 607, "write_labels_to_annot": [612, 613, 820, 861, 871], "annot_fnam": [613, 821], "ascend": [613, 779, 786, 850, 871], "mne_make_morph_map": [615, 856], "morph_map": 615, "left_map": 615, "right_map": 615, "asterisk": 618, "source_morph": 619, "return_dict": 621, "file_format": [621, 824], "voxels": [621, 824], "xra": [621, 824], "yra": [621, 824], "zra": [621, 824], "cra": [621, 824], "n_face": [621, 624, 824], "read_tri": [621, 824, 861], "return_al": 623, "fname_in": 624, "clockwis": [624, 743], "counterclockwis": [624, 856], "spcecifi": 625, "bem_nam": 627, "subjects_from": [627, 630], "ba3a": 628, "cfg": 628, "skip_fiduci": 629, "ioerror": 629, "scale_bem": [629, 861, 871], "scale_label": [629, 861], "scale_source_spac": [629, 861], "src_name": 630, "my_source_spac": 630, "mne_sensitivity_map": 631, "ch_info": [632, 871], "drop_ref": [632, 871], "unreferenc": 632, "cache_dir": 633, "output_format": 636, "howto": 636, "asctim": 636, "levelnam": 636, "notifi": [636, 830], "return_old_level": 637, "add_fram": [637, 733], "old_level": 637, "single_volum": [639, 871], "ox": 639, "oi": 639, "iii": 639, "get_stim_channel": 640, "stim_data": 640, "add_chpi": [642, 643, 655, 861, 871], "inhomogen": 643, "poisson": 643, "stc_true": [645, 646, 647, 648, 649, 650, 651, 652], "stc_est": [645, 646, 647, 648, 649, 650, 651, 652], "ppe": 647, "dfrac": [647, 652], "sum_i": [647, 652], "s_i": [647, 652], "r_i": [647, 652, 853], "tp": [648, 649], "fn": 649, "2q": 650, "min_": [650, 853], "r_k": 650, "r_l": 650, "mathbb": 650, "dle": 650, "ed": [650, 871], "terminologi": 650, "actual_snr": 654, "sti001": 655, "allow_overlap": 657, "coo_matrix": [660, 661, 662, 663, 664, 665, 666, 670], "additit": 661, "remap_vertic": [663, 666], "reassign": [663, 666], "2n": [664, 665, 666, 853], "pval_correct": [668, 674], "n_bootstrap": 669, "spmatrix": [670, 677, 678, 680, 681], "n_ob": 670, "chan_adj": 670, "5600x5600": 670, "27076": 670, "compliant": [671, 859], "slowest": 671, "a2b2": 671, "greenhous": 671, "geisser": 671, "f_val": 671, "homoscedast": 672, "kruskal": 672, "walli": 672, "pvalu": 673, "yekuti": 674, "negcorr": 674, "n_regressor": 675, "choleski": [676, 853, 871], "n_cond": 676, "bx": 676, "enorm": 676, "overload": 676, "subepoch": 676, "n_predictor": 676, "time_window_length": 676, "t_power": [677, 678, 680, 681], "check_disjoint": [677, 678, 680, 681], "subarrai": 677, "kth": 677, "unconnect": [677, 678, 680, 681], "disjoint": [677, 678, 680, 681], "set_cache_dir": [677, 678, 680, 681, 861], "rv_continu": [677, 678, 680, 681], "untract": 679, "spatial_exclud": [680, 681], "p_thresh": 682, "equal_var": 684, "ball": 685, "volu": 685, "do_neighbor_vert": 687, "do_neighbor_tri": 687, "show_path": 689, "sy": [689, 834, 871], "feb": 689, "bla": [689, 829], "lapack": [689, 829], "qt5agg": 689, "pyside6": [689, 829], "power_baselin": 690, "frequency_window": 690, "read_tfr": [690, 693, 724, 861, 871], "write_tfr": [690, 693, 713, 861], "csd_array_fouri": [691, 696, 697, 698, 699, 700, 861, 871], "csd_array_multitap": [691, 695, 696, 698, 699, 700, 861, 871], "csd_array_morlet": [691, 695, 697, 698, 699, 700, 861, 871], "as_cov": 691, "pack": 691, "pick_frequ": 691, "read_csd": [691, 861, 871], "getitem_epochspectrum_return": 692, "ci_alpha": [692, 694], "read_spectrum": [692, 694, 861], "latex": [692, 694], "pertin": 693, "12676": 693, "getitem_spectrum_return": 694, "sixth": 694, "subscript": 694, "freq_indic": 694, "half_nbw": 702, "kmax": 702, "interp_from": 702, "interp_kind": 702, "nw": 702, "half_bw": 702, "bw": 702, "f0": 702, "interp1d": [702, 738], "slinear": [702, 738], "quadrat": [702, 738], "tridiagon": 702, "jw": 703, "jnw": 703, "tx": 704, "n_step": [704, 714, 738], "n_taper": [707, 719, 722], "get_window": [708, 710, 792], "istft": [714, 715, 861, 871], "stftfreq": [714, 861], "epoch_data": [718, 719], "avg_power_itc": [718, 719], "tfr_array_multitap": [718, 720, 721, 722, 723, 861, 871], "tfr_array_stockwel": [718, 719, 721, 722, 723, 861, 871], "intertri": [720, 723], "st_power": 720, "from_str": 726, "to_str": 726, "reg_img": 727, "niter": [728, 871], "mr": [728, 853, 859, 871], "affine_registr": 728, "rot_to_quat": [729, 861], "quat_to_rot": [731, 861], "contextlib": 732, "contextmanag": 732, "my_fnam": 732, "moin": 734, "pythondecoratorlibrari": 734, "sentenc": 734, "futurewarn": [734, 830, 871], "ignore_namespac": 735, "namespac": [735, 830, 861, 871], "travers": 735, "_funct": 736, "dec": [736, 829], "filler": 736, "5880": 736, "show_toolbar": [738, 871], "offscreen": 738, "subject_id": [738, 871], "buggi": 738, "soon": [738, 847, 852, 853], "add_skul": 738, "remove_data": 738, "remove_dipol": [738, 871], "remove_forward": [738, 871], "remove_head": 738, "remove_label": 738, "remove_annot": 738, "remove_sensor": 738, "remove_skul": 738, "remove_text": 738, "remove_volume_label": 738, "timeview": 738, "get_picked_point": 738, "geo": 738, "ctab": 738, "lh_ctab": 738, "rh_ctab": 738, "rbga": 738, "icefir": 738, "rocket": 738, "nvtx": 738, "thrown": [738, 871], "font": [738, 797], "add_scalar_bar": 738, "title_font_s": 738, "hex": [738, 762], "map_surfac": [738, 871], "n_coord": 738, "stereotax": 738, "coord_as_vert": 738, "1cm": 738, "subdir": 738, "reset_camera": [738, 806], "justif": 738, "update_text": 738, "fill_hole_s": [738, 871], "hole": [738, 871], "dilat": 738, "apply_auto_sc": 738, "clear_glyph": 738, "cleanup": [738, 859], "widget": [738, 740, 871], "get_view": [738, 871], "zenith": [738, 806], "plot_time_cours": 738, "vertex_id": 738, "plot_time_lin": 738, "reset_view": 738, "restore_user_sc": 738, "bitrat": 738, "imageio": 738, "mov": 738, "n_frame": 738, "separate_canva": 738, "set_data_smooth": 738, "set_playback_spe": 738, "playback": 738, "set_tim": [738, 871], "set_time_interpol": 738, "set_time_point": 738, "time_idx": 738, "setup_time_view": 738, "rear": [738, 826], "dorsal": 738, "time_interpol": 738, "toggle_interfac": 738, "toggle_playback": 738, "update_lut": 738, "imdata": 739, "onclick": 739, "backend_bas": 739, "bg": [739, 741], "set_ratio": 741, "ax_im": 741, "node_nam": 743, "start_between": 743, "group_sep": 743, "n_node_nam": 743, "fname_1": 746, "fname_2": 746, "show_fiff": [746, 861, 871], "smooth_shad": [747, 804], "_render": 747, "undocu": 747, "backend_us": [748, 750], "ch_dx": 751, "teal": 753, "onselect": [755, 800], "rectangleselector": [755, 800], "show_indic": 756, "show_orient": [756, 871], "colorbarbas": 757, "polarax": 760, "type_snr": 761, "type_pow": 761, "type_resid": 761, "truncate_xaxi": [762, 871], "invert_i": 762, "unweight": 762, "inset": [762, 871], "n_evok": 762, "hexadecim": 762, "equal_spac": 771, "1f77b4": 779, "fscale": [779, 786], "alim": [779, 786], "pointsiz": 794, "bet": 794, "bluish": 795, "brain_color": [797, 871], "fig_numb": 797, "cone": 797, "axesimag": 800, "contourset": 800, "fieldlin": 800, "mixedvectorsourceestim": [801, 861, 871], "backend_nam": [803, 807, 809, 810], "old_backend_nam": [803, 807], "plot_evoked_field": [803, 861, 871], "link_brain": [803, 861, 871], "inlin": [803, 828, 834], "jupyterlab": 803, "colab": 803, "antialia": [804, 828], "depth_peel": 804, "multi_sampl": 804, "plot_epoch": [807, 830, 861, 871], "plot_ica_sourc": [807, 861, 871], "hide_sensor": 808, "dn": 808, "base_imag": 811, "max_peak_dist": 811, "voxels_max": 811, "use_min": 811, "subject_dir_from": 811, "image_from": 811, "image_to": 811, "hsv": 821, "table_nam": 821, "colort": 821, "create_stamp": 824, "vocabulari": [826, 854], "textual": [826, 871], "spindl": 826, "acronym": [826, 854], "definion": 826, "mv": [826, 871], "\u00b5m": 826, "od": 826, "synapt": 826, "intracellular": 826, "pyramid": [826, 853], "perpendicularli": 826, "erron": [826, 871], "peculiar": 826, "encapsul": [826, 853], "hcpmmp": [826, 871], "gave": 826, "cartoon": 826, "pependicular": 826, "scaleogram": 826, "uncorrel": 826, "nb_conda_kernel": 828, "anaconda": [828, 830, 834, 835, 841, 871], "forum": [828, 829, 830, 833, 836, 837, 847, 849, 850, 851], "curl": [828, 830], "githubusercont": [828, 830], "server_environ": 828, "yml": [828, 830], "latest": [828, 830, 838, 850, 871], "git": [828, 837], "miniconda": [828, 830], "miniforg": 828, "forg": [828, 830, 834, 838], "pythonpath": 828, "pythonhom": 828, "unabl": [828, 852, 871], "nvidia": [828, 850], "proprietari": [828, 852], "driver": 828, "init_cuda": [828, 861], "pytest": [828, 830], "test_filt": 828, "multithread": [828, 850], "swr": 828, "cento": 828, "spyder": [828, 830, 833, 834, 850], "mesa_gl_version_overrid": 828, "rend": 828, "msaa": 828, "antialias": [828, 871], "set_3d_opt": [828, 861, 871], "incomplet": [828, 859, 871], "prebuilt": 828, "xzvf": 828, "mesa_18": 828, "6_centos_lib": 828, "tgz": 828, "libgl_drivers_path": 828, "pwd": 828, "ld_library_path": 828, "went": [828, 829], "glxinfo": 828, "grep": [828, 830, 838], "uninstal": [828, 838], "cach": [828, 838], "gcp": 829, "travi": [829, 871], "virtualenv": 829, "8dfaa4a": 829, "f614064": 829, "qtagg": 829, "post1": 829, "modulenotfounderror": 829, "bashrc": [829, 835, 836], "zprofil": [829, 835], "zsh": [829, 835, 836], "troubleshoot": [829, 849, 851], "sustain": [830, 852], "volunt": 830, "welcom": 830, "anyon": [830, 852], "abid": 830, "fastest": [830, 836], "feel": [830, 837, 852, 871], "upstream": 830, "desktop": 830, "appreci": 830, "sudo": [830, 831, 836], "apt": [830, 831], "dmg": [830, 836], "atlassian": 830, "macport": [830, 836], "homebrew": [830, 836], "yourdomain": 830, "sooner": 830, "commit": [830, 852, 859, 871], "emac": 830, "vim": 830, "nano": 830, "subl": 830, "makefil": 830, "newest": 830, "guil": 830, "w32": 830, "ezwinport": 830, "path_to_git": 830, "mingw64": 830, "mnedev": 830, "path_to_anaconda": 830, "team": [830, 852], "github_usernam": 830, "insert_your_actual_github_username_her": 830, "install_loc": 830, "opt": [830, 834, 835, 836], "site_packag": 830, "requirements_test": 830, "requirements_doc": 830, "graphviz": 830, "graphviz_dot": 830, "conda_prefix": 830, "optipng": 830, "linter": 830, "restructuredtext": 830, "autobuild": 830, "doc8": 830, "url_of_remote_repo": 830, "nickname_of_remot": 830, "repo": [830, 852], "undoubtedli": 830, "checkout": 830, "colleagu": 830, "unstag": 830, "some_fil": 830, "some_new_fil": 830, "entireti": 830, "some_other_fil": 830, "bypass": [830, 871], "enh": 830, "some_testing_fil": 830, "new_tutorial_fil": 830, "stuck": 830, "secur": [830, 836], "secret": 830, "client": [830, 871], "test_evok": 830, "python_refer": 830, "rst": 830, "my_funct": 830, "my_new_funct": 830, "old_param": 830, "new_param": 830, "my_other_funct": 830, "depr_messag": 830, "changeset": 830, "minor": [830, 856, 859, 871], "typo": [830, 849, 871], "subsect": 830, "bugfix": [830, 838], "happi": 830, "credit": 830, "gh": [830, 871], "newcontrib": 830, "firstnam": 830, "lastnam": 830, "_your": 830, "test_topo": 830, "pep": 830, "pep8": 830, "pyflak": 830, "flake8": 830, "flake": 830, "ins": 830, "camelcas": [830, 861], "snake_cas": 830, "nsampl": 830, "complic": [830, 871], "sphinxcontrib": 830, "bibtex": [830, 845], "citat": [830, 871], "bibliograph": 830, "bib": 830, "singleauthor2019": 830, "authoroneauthortwo2020": 830, "firstauthoretal2021a": 830, "firstauthoretal2021b": 830, "param_nam": 830, "test_docstring_paramet": 830, "docstyl": 830, "glossari": [830, 854], "mod": 830, "intersphinx": 830, "inventori": 830, "sphobjinv": 830, "dump": 830, "ext": 830, "backtick": [830, 850], "pdb": 830, "debugg": [830, 871], "test_io_evok": 830, "imit": 830, "html_dev": 830, "noplot": 830, "regex_to_select_my_tutori": 830, "browse_raw": [830, 871], "mortem": 830, "pm": 830, "everyon": 830, "scientist": [830, 834, 849], "spare": 830, "streamlin": 830, "collabor": [830, 837, 852], "fruit": 830, "road": 830, "someon": 830, "occasion": [830, 847], "cosmet": 830, "backport": [830, 871], "whats_new": 830, "draft": 830, "wip": 830, "mrg": 830, "sty": 830, "azp": 830, "azur": 830, "exemplifi": 830, "ecosystem": [831, 834, 837], "tcsh": [831, 835, 836], "ubuntu": [831, 833, 836, 859], "bionic": 833, "beaver": 833, "1_0": 833, "intel": [833, 850], "catalina": [833, 835, 871], "silicon": 833, "studio": [833, 834], "python_1": 833, "0_1": 833, "mamba": 834, "prioriti": 834, "h5io": [834, 850], "h5py": [834, 850], "pymatread": [834, 871], "vscode": 834, "microsoft": 834, "anaconda3": [834, 835], "pyqt5": 834, "pyqt": [834, 871], "pycharm": [834, 850], "paid": 834, "profession": 834, "cmd": 835, "bash_profil": 835, "__conda_setup": 835, "overflow": [835, 871], "leopard": 836, "powerpc": 836, "runtim": 836, "mne_convert_mne_data": 836, "mne_epochs2mat": [836, 856], "mne_raw2mat": 836, "mne_simu": 836, "xcode": 836, "xquartz": 836, "x11": 836, "libxt": 836, "dylib": 836, "bak": 836, "flat_namespac": 836, "netpbm": 836, "brew": 836, "app": 836, "nightli": [836, 871], "path_to_desired_install_loc": 836, "zxvf": 836, "path_to_archive_fil": 836, "pkg": 836, "untrust": 836, "privaci": [836, 852], "mne_root": [836, 853, 856, 871], "matlab_root": 836, "r2018b": 836, "undefin": 836, "mne_setup_sh": 836, "csh": 836, "mne_setup": [836, 856], "path_to_mn": 836, "path_to_matlab": 836, "emul": 836, "zshrc": 836, "cshrc": 836, "tcshrc": 836, "setenv": [836, 841], "mne_opengl_test": 836, "redraw": 836, "spent": 836, "revolut": 836, "interrupt": 836, "glx": 836, "nondirect": 836, "IT": 836, "vnc": 836, "card": [836, 871], "libxp": 836, "libxp6": 836, "debian": [836, 859, 871], "dpkg": 836, "libxp6_1": 836, "1ubuntu1_amd64": 836, "deb": 836, "libgfortran": 836, "libfortran": 836, "gnu": 836, "maxdepth": 836, "interoper": 837, "interrel": 837, "reimplement": 837, "cpp": [837, 871], "connectom": [837, 859], "compli": [837, 871], "alphacsc": 837, "pactool": 837, "microst": 837, "conpi": 837, "eelbrain": 837, "posthoc": 837, "prep": 837, "pyprep": 837, "sesam": 837, "sesameeg": 837, "esinet": 837, "unix": [837, 871], "name_of_environ": 838, "fool": 838, "proof": 838, "old_mn": 838, "dep": 838, "hm": [841, 847], "pubsw": 841, "subscrib": 841, "modular": 842, "qt3d": 842, "babymeg": 842, "tmsi": 842, "refa": 842, "brainamp": 842, "ant": 842, "eegosport": 842, "gusbamp": 842, "gramfortetal2013a": 845, "gramfortetal2014": 845, "bibliographi": 845, "meg2443": 846, "vanish": 846, "advers": 846, "preliminari": 846, "stamp": 846, "mm2": 846, "ico5": 846, "tessel": [846, 856], "prerequisit": 846, "bulletproof": 846, "feasibl": 846, "sep": 846, "bem_sol": 846, "reestablish": 846, "corregistr": 846, "charg": 846, "photograph": 846, "uninterest": 846, "epilept": 846, "infrequ": 846, "hesit": [847, 850], "siemen": [847, 853], "sonata": 847, "mprage": [847, 850, 853], "interspers": 847, "lv": 847, "audvis_raw": 847, "auvi": 847, "agre": 847, "bst_rest": [847, 861], "khz": 847, "dicom": [847, 856, 871], "richli": 847, "timon": [847, 871], "9999": 847, "msr": 847, "retrospect": 847, "satisfactori": 847, "chin": 847, "respir": [847, 853, 856], "hypnogram": 847, "rechtschaffen": 847, "kale": 847, "erlangen": 847, "germani": 847, "shaft": [847, 859], "pend": 847, "craft": 847, "lrp": 847, "ern": 847, "neuroscientist": 848, "keystrok": 848, "peak_find": [848, 861, 871], "appnop": 850, "nope": 850, "nsappsleepdis": 850, "tempt": 850, "benfrederickson": 850, "dont": 850, "stackoverflow": 850, "21752259": 850, "write_": 850, "resid": 850, "plot_find_ecg_artifact": 850, "ordinarili": 850, "mkl": 850, "openmp": 850, "omp_num_thread": 850, "openblas_num_thread": 850, "num_cpu": 850, "implic": 850, "simplist": 850, "gpu": [850, 871], "epochs_path": 850, "protrud": 850, "shrunken": 850, "mri_norm": 850, "xopt": 850, "gentl": 850, "listserv": 850, "recon_al": 850, "autorecon2": 850, "autorecon3": 850, "formal": 852, "extraordinari": 852, "clarifi": [852, 871], "profit": 852, "entiti": [852, 856], "openli": 852, "affili": 852, "discours": 852, "behalf": 852, "strive": 852, "barrier": 852, "leadership": 852, "neutral": 852, "tradition": [852, 853], "reward": 852, "benevol": 852, "dictat": 852, "defer": 852, "vote": 852, "deadlock": 852, "fork": 852, "disagre": 852, "deleg": 852, "appoint": 852, "successor": 852, "faith": 852, "director": 852, "ceo": [852, 871], "everydai": 852, "peer": 852, "privileg": 852, "servic": [852, 871], "scope": 852, "strateg": 852, "polici": [852, 871], "nomin": 852, "willing": 852, "capac": 852, "infrastructur": [852, 871], "outreach": 852, "deliber": 852, "divers": 852, "viewpoint": 852, "talent": 852, "grace": 852, "retir": 852, "eject": 852, "deem": 852, "harm": 852, "financi": 852, "employ": 852, "disclos": 852, "recus": 852, "themself": 852, "sparingli": 852, "apach": 852, "veto": 852, "rational": 852, "opinion": 852, "anticip": [852, 871], "suffic": 852, "usurp": 852, "countri": 852, "gift": 852, "partnership": 852, "approv": 852, "commenc": 852, "laps": 852, "pursu": 852, "monei": 852, "donor": 852, "umbrella": 852, "trademark": 852, "invit": 852, "waiv": 852, "copyright": 852, "mole": 853, "sensibl": 853, "femtotesla": 853, "typecast": 853, "unread": [853, 871], "electrocardiographi": 853, "electromyographi": 853, "celsiu": 853, "channels_3_and_4": 853, "boldsymbol": 853, "c_0": 853, "g_": 853, "infti": 853, "r_j": 853, "t_d": 853, "underbrac": 853, "b_": 853, "b_n": 853, "dotso": 853, "uc_n": 853, "constitut": 853, "orthonorm": 853, "c_e": 853, "complement": 853, "perp": 853, "uu": 853, "segonn": 853, "_brain_surfac": 853, "_inner_skull_surfac": 853, "_outer_skull_surfac": 853, "_outer_skin_surfac": 853, "availablili": 853, "fov": 853, "dcm2niix": 853, "mne_organize_dicom": 853, "flash05": 853, "fat32": 853, "mri_ms_fitparm": 853, "mri_synthes": 853, "fsl_rigid_regist": 853, "flash5_reg": 853, "cor": 853, "mri_make_bem_surfac": 853, "tringul": 853, "t_x": 853, "ti": 853, "mm3": 853, "mnitalairach": 853, "mni305": 853, "y_2": 853, "z_2": 853, "y_1": 853, "z_1": 853, "x_0": 853, "y_0": 853, "z_0": 853, "x_k": 853, "y_k": 853, "z_k": 853, "jk": 853, "9688": [853, 871], "0485": 853, "9189": 853, "t_1": 853, "s_1": 853, "s_n": 853, "t_2": 853, "filessepar": 853, "t_3": 853, "mghformat": 853, "t_4": 853, "hardcod": 853, "idiosyncrasi": 853, "conceiv": 853, "s_p": 853, "50mm": 853, "r_0": 853, "e_x": 853, "e_i": 853, "e_z": 853, "r_c": 853, "r_d": 853, "0d": 853, "n_k": 853, "w_": 853, "kp": 853, "sixteen": 853, "tm": [853, 856, 871], "centerpoint": 853, "mne_list_coil_def": 853, "3012": 853, "8mm": 853, "3013": 853, "4001": 853, "wh": 853, "3600": 853, "4003": 853, "4004": 853, "5001": 853, "5002": 853, "5003": 853, "5004": 853, "6001": 853, "diamet": 853, "nx": 853, "ny": 853, "nz": [853, 871], "r_1": 853, "dotsc": 853, "r_m": 853, "mu_1": 853, "mu_m": 853, "int_": 853, "v_": 853, "ly": 853, "average_forward_solut": [853, 861], "ensu": 853, "posteriori": 853, "viabl": 853, "3p": 853, "unconstrain": 853, "mx": 853, "smoother": [853, 871], "arriv": 853, "bigl": 853, "bigr": 853, "u_c": 853, "lambda_c": 853, "grg": 853, "possess": 853, "varepsilon_k": 853, "sigma_k": 853, "rout": 853, "superscript": 853, "v_k": 853, "w_k": 853, "propto": 853, "dimensionless": 853, "tendenc": 853, "divis": [853, 871], "2_k": 853, "g_i": 853, "u_": 853, "lambda_": 853, "_i": 853, "noiseless": 853, "misfit": 853, "pi_k": 853, "recolor": 853, "eigenfield": 853, "n_d": 853, "a_d": 853, "postsynapt": 853, "microscop": 853, "rigidli": 853, "floc": 853, "thereaft": 853, "vloc": 853, "favor": [853, 871], "1p": 853, "2p": 853, "l_": 853, "eff": 853, "w_i": 853, "x_i": 853, "c_y": 853, "l_i": 853, "w_1": 853, "w_2": 853, "l_1": 853, "l_2": 853, "supposedli": 853, "x_j": 853, "t_j": 853, "biject": 853, "smudg": 853, "n_j": 853, "prod_": 853, "kindli": 854, "function_nam": 854, "w3school": 855, "carpentri": 855, "lesson": 855, "fiff_": 856, "startup": 856, "mne_ex": 856, "fiff_setup_read_raw": 856, "fiff_read_raw_seg": 856, "fiff_find_evok": 856, "fiff_read_bad_channel": 856, "fiff_read_ctf_comp": 856, "fiff_read_evok": 856, "fiff_read_evoked_al": 856, "fiff_read_meas_info": 856, "fiff_read_mri": 856, "fiff_read_proj": 856, "fiff_read_raw_segment_tim": 856, "fiff_pick_channel": 856, "fiff_pick_channels_evok": 856, "fiff_pick_info": 856, "fiff_pick_typ": 856, "fiff_pick_types_evok": 856, "fiff_invert_transform": 856, "fiff_reset_ch_po": 856, "fiff_transform_eeg_ch": 856, "fiff_transform_meg_ch": 856, "fiff_define_const": 856, "fiff_dir_tree_find": 856, "fiff_list_dir_tre": 856, "fiff_make_dir_tre": 856, "fiff_open": 856, "fiff_read_named_matrix": 856, "fiff_read_tag": 856, "fiff_read_tag_info": 856, "fiff_split_name_list": 856, "fiff_end_block": 856, "fiff_end_fil": 856, "fiff_start_block": 856, "fiff_start_fil": 856, "fiff_write_ch_info": 856, "fiff_write_coord_tran": 856, "fiff_write_ctf_comp": 856, "fiff_write_dig_point": 856, "fiff_write_complex": 856, "fiff_write_complex_matrix": 856, "fiff_write_doubl": 856, "fiff_write_double_complex": 856, "fiff_write_double_complex_matrix": 856, "fiff_write_double_matrix": 856, "fiff_write_evok": 856, "repons": 856, "fiff_write_float": 856, "fiff_write_float_matrix": 856, "fiff_write_id": 856, "fiff_write_int": 856, "fiff_write_int_matrix": 856, "fiff_write_name_list": 856, "fiff_write_named_matrix": 856, "fiff_write_proj": 856, "fiff_write_short": 856, "fiff_write_str": 856, "fiff_finish_writing_raw": 856, "fiff_start_writing_raw": 856, "fiff_write_dig_fil": 856, "fiff_write_raw_buff": 856, "mne_add_coil_def": 856, "mne_load_coil_def": 856, "mne_compensate_to": 856, "mne_get_current_comp": 856, "mne_make_compens": 856, "mne_make_projector_info": 856, "mne_make_projector": 856, "mne_set_current_comp": 856, "mne_pick_channels_cov": 856, "mne_pick_channels_forward": 856, "mne_read_bem_surfac": 856, "mne_read_cov": 856, "mne_read_epoch": 856, "mne_read_ev": 856, "mne_read_forward_solut": 856, "mne_read_inverse_oper": 856, "mne_read_morph_map": 856, "mne_read_noise_cov": 856, "mne_read_source_spac": 856, "mne_write_cov": 856, "mne_write_cov_fil": 856, "mne_write_ev": 856, "mne_write_inverse_sol_stc": 856, "mne_write_inverse_sol_w": 856, "mne_read_stc_fil": 856, "mne_read_stc_file1": 856, "mne_read_w_fil": 856, "mne_read_w_file1": 856, "mne_write_stc_fil": 856, "mne_write_stc_file1": 856, "mne_write_w_fil": 856, "mne_write_w_file1": 856, "mne_read_label_fil": 856, "mne_write_label_fil": 856, "mne_label_time_cours": 856, "mne_read_curvatur": 856, "mne_read_surfac": 856, "mne_reduce_surfac": 856, "reducepatch": 856, "mne_write_surfac": 856, "mne_block_diag": 856, "mne_combine_xyz": 856, "mne_file_nam": 856, "mne_find_channel": 856, "mne_find_source_space_hemi": 856, "mne_fread3": 856, "mne_fwrite3": 856, "mne_make_combined_event_fil": 856, "mne_omit_first_lin": 856, "mne_setup_toolbox": 856, "mne_transform_coordin": 856, "mne_collect_transform": 856, "mne_transpose_named_matrix": 856, "mne_transform_source_space_to": 856, "mne_ex_average_epoch": 856, "mne_ex_cancel_nois": 856, "mne_ex_compute_invers": 856, "mne_ex_data_set": 856, "mne_ex_evoked_grad_amp": 856, "mne_ex_read_epoch": 856, "mne_ex_read_evok": 856, "mne_ex_read_raw": 856, "mne_ex_read_write_raw": 856, "mne_copy_processing_histori": 856, "revis": 856, "coil_geometry_inform": 856, "fiffb_meas_info": 856, "mne_compute_raw_invers": 856, "fiffv_meg_ch": 856, "fiffv_ref_meg_ch": 856, "fiffv_eef_ch": 856, "fiffv_mcg_ch": 856, "mcg": 856, "fiffv_stim_ch": 856, "fiffv_eog_ch": 856, "fiffv_emg_ch": 856, "fiffv_ecg_ch": 856, "fiffv_misc_ch": 856, "fiffv_resp_ch": 856, "fiffv_coord_unknown": 856, "fiffv_coord_devic": 856, "fiffv_coord_isotrak": 856, "fiffv_coord_hpi": 856, "fiffv_coord_mri_slic": 856, "fiffv_coord_mri_displai": 856, "fiffv_coord_dicom_devic": 856, "fiffv_coord_imaging_devic": 856, "fiffv_mne_coord_tufts_eeg": 856, "tuft": 856, "fiffv_mne_coord_ctf_devic": 856, "fiffv_mne_coord_ctf_head": 856, "fiffv_aspect_averag": 856, "fiffv_aspect_std_err": 856, "fiffv_aspect_singl": 856, "fiffv_aspect_subaverag": 856, "fiffv_aspect_altaverag": 856, "fiffv_aspect_sampl": 856, "fiffv_aspect_power_dens": 856, "fiffv_aspect_dipole_wav": 856, "fiffv_bem_surf_id_unknown": 856, "fiffv_bem_surf_id_brain": 856, "fiffv_bem_surf_id_skul": 856, "fiffv_bem_surf_id_head": 856, "fiffv_point_hpi": 856, "fiffv_point_ecg": 856, "fiffv_point_extra": 856, "fiffv_point_lpa": 856, "fiffv_point_rpa": 856, "fiffv_mne_meg": 856, "fiffv_mne_eeg": 856, "fiffv_mne_meg_eeg": 856, "fiffv_mne_unknown_cov": 856, "fiffv_mne_noise_cov": 856, "fiffv_mne_sensor_cov": 856, "fiffv_mne_source_cov": 856, "fiffv_mne_fmri_prior_cov": 856, "fiffv_mne_signal_cov": 856, "fiffv_mne_depth_prior_cov": 856, "fiffv_mne_orient_prior_cov": 856, "fiffv_proj_item_non": 856, "fiffv_proj_item_dip_fix": 856, "fiffv_proj_item_dip_rot": 856, "fiffv_proj_item_homog_grad": 856, "fiffv_proj_item_homog_field": 856, "fiffv_proj_item_eeg_avref": 856, "uint32": 856, "parent_id": 856, "nent": 856, "nchild": 856, "1970": [856, 871], "fiffv_coord": 856, "fiffv_mne_coord": 856, "fiff_point": 856, "num_point": 856, "char": [856, 871], "fv": 856, "struct": 856, "fiff_eeg_ch": 856, "coil_tran": 856, "eeg_loc": 856, "six": 856, "10unit_mul": 856, "fiffv_proj_item": 856, "fiffv_mne_proj_item": 856, "decalibr": 856, "row_cal": 856, "col_cal": 856, "tri_area": 856, "tri_cent": 856, "centroid": 856, "tri_nn": 856, "mne_add_patch_info": 856, "sol_grad": 856, "sing": 856, "eigen_lead": 856, "eigen_field": 856, "source_cov": 856, "cond1": 857, "cond2": 857, "addpath": 857, "pop_fileio": 857, "pop_eegfiltnew": 857, "pop_averef": 857, "pop_select": 857, "pop_runica": 857, "pop_binica": 857, "pop_compprop": 857, "comp_num": 857, "winhandl": 857, "comphead": 857, "pop_selectcomp": 857, "list_of_components_to_exclud": 857, "pop_epoch": 857, "eeg_epoch": 857, "pop_timtopo": 857, "pop_compareerp": 857, "eeg_epochs1": 857, "eeg_epochs2": 857, "pop_saveset": 857, "lfreq": 857, "hfreq": 857, "filtered_raw": 857, "bdfl": 858, "nutmegtrip": 859, "youtub": [859, 871], "cluster_based_statist": 859, "patsi": 859, "dmatric": 859, "4859": 859, "3585": 859, "openneuro": 859, "6687": 859, "adult": 859, "dcm": 859, "kymata": 859, "watch": 859, "bnci": 859, "horizon": 859, "pde": 859, "swig": 859, "ambit": 859, "useless": 859, "recruit": 859, "8221": 859, "rudimentari": 859, "crossspectrum": 859, "multitaperspectrum": 859, "6290": 859, "7671": 859, "8026": 859, "8724": 859, "9045": 859, "pr": 859, "6609": 859, "6629": 859, "6672": 859, "6673": 859, "8397": 859, "8892": 859, "mnefun": 859, "ptfce": 859, "mayavi": [859, 871], "7162": 859, "cloud": 859, "dask": 859, "czi": 859, "7751": 859, "docker": 859, "underscore_cas": 861, "themat": 861, "read_raw_curri": [861, 871], "read_raw_nedf": [861, 871], "read_mrk": 861, "get_meg_helmet_surf": 861, "get_volume_labels_from_src": [861, 871], "parse_config": 861, "read_evoked_besa": [861, 871], "read_evokeds_mff": [861, 871], "read_morph_map": [861, 871], "read_reject_paramet": 861, "write_label": 861, "export_epoch": [861, 871], "export_evok": [861, 871], "add_background_imag": 861, "compare_fiff": 861, "mne_analyze_colormap": 861, "plot_csd": 861, "plot_epochs_psd_topomap": [861, 871], "plot_evok": [861, 871], "plot_evoked_topomap": [861, 871], "plot_evoked_joint": [861, 871], "plot_ica_properti": [861, 871], "plot_ica_scor": [861, 871], "plot_ica_overlai": [861, 871], "plot_montag": [861, 871], "plot_raw_psd": [861, 871], "plot_regression_weight": [861, 871], "plot_volume_source_estim": [861, 871], "plot_tfr_topomap": [861, 871], "plot_topo_image_epoch": [861, 871], "get_3d_backend": [861, 871], "use_3d_backend": [861, 871], "close_3d_figur": 861, "close_all_3d_figur": 861, "get_browser_backend": [861, 871], "equalize_channel": [861, 871], "annotate_nan": [861, 871], "compute_fine_calibr": [861, 871], "compute_maxwell_basi": [861, 871], "ica_find_ecg_ev": 861, "ica_find_eog_ev": 861, "equalize_bad": [861, 871], "maxwell_filter_prepare_emptyroom": [861, 871], "read_eog_regress": 861, "realign_raw": [861, 871], "regress_artifact": [861, 871], "read_ica_eeglab": [861, 871], "read_fine_calibr": 861, "write_fine_calibr": 861, "short_channel": [861, 871], "estimate_ringing_sampl": 861, "extract_chpi_locs_kit": [861, 871], "concatenate_ev": 861, "match_event_nam": [861, 871], "shift_time_ev": [861, 871], "pick_channels_cov": 861, "compute_whiten": [861, 871], "write_fiduci": 861, "create_default_subject": [861, 871], "head_to_mni": 861, "head_to_mri": [861, 871], "add_source_space_dist": [861, 871], "decimate_surfac": [861, 871], "complete_surface_info": 861, "distance_to_bem": [861, 871], "compute_rank_invers": 861, "read_beamform": [861, 871], "grade_to_tri": 861, "grade_to_vertic": 861, "grow_label": [861, 871], "random_parcel": 861, "transform_surface_to": [861, 871], "get_decimated_surfac": [861, 871], "csd_tfr": [861, 871], "pick_channels_csd": 861, "dpss_window": 861, "cwt": 861, "ttest_ind_no_p": [861, 871], "spatial_dist_adjac": [861, 871], "spatial_tris_adjac": [861, 871], "spatial_inter_hemi_adjac": [861, 871], "spatio_temporal_src_adjac": [861, 871], "spatio_temporal_dist_adjac": [861, 871], "select_source_in_label": 861, "psdestim": 861, "timefrequ": [861, 871], "open_doc": [861, 871], "set_log_fil": 861, "get_cuda_memori": 861, "set_cuda_devic": [861, 871], "11073": 871, "10656": 871, "gerster": 871, "10784": 871, "11011": 871, "11006": 871, "6233": 871, "10986": 871, "repr": 871, "11048": 871, "8639": 871, "11083": 871, "11051": 871, "11020": 871, "11075": 871, "valerii": 871, "chirkov": 871, "electroderm": 871, "11090": 871, "11108": 871, "19080": 871, "11099": 871, "11077": 871, "11094": 871, "scheltienn": 871, "11095": 871, "11186": 871, "eduard": 871, "ort": 871, "11116": 871, "11147": 871, "11150": 871, "11185": 871, "11154": 871, "11141": 871, "11232": 871, "11159": 871, "11196": 871, "luka": 871, "gemein": 871, "unlabel": 871, "causd": 871, "11074": 871, "sebastiaan": 871, "mathot": 871, "11072": 871, "chetan": 871, "gohil": 871, "11004": 871, "carlstr\u00f6m": 871, "schad": 871, "11190": 871, "wetzel": 871, "11019": 871, "sena": 871, "11049": 871, "11084": 871, "11145": 871, "11182": 871, "11040": 871, "marian": 871, "dovgialo": 871, "11171": 871, "11181": 871, "11193": 871, "11102": 871, "11081": 871, "11191": 871, "6870": 871, "simeon": 871, "11197": 871, "11212": 871, "11203": 871, "11201": 871, "h\u00fcseyin": 871, "orkun": 871, "elma": 871, "deprecationwarn": 871, "11123": 871, "11050": 871, "10184": 871, "finer": 871, "add_channels_epoch": 871, "11180": 871, "11046": 871, "10974": 871, "ilia": 871, "machaira": 871, "10942": 871, "tziona": 871, "nessaiv": 871, "10922": 871, "mingjian": 871, "he": 871, "10736": 871, "jordan": 871, "drew": 871, "10632": 871, "courtemanch": 871, "10515": 871, "alessandro": 871, "tonin": 871, "10555": 871, "powel": 871, "10627": 871, "evan": 871, "hathawai": 871, "icalabel": 871, "10615": 871, "10501": 871, "10460": 871, "10544": 871, "10720": 871, "10464": 871, "10699": 871, "10534": 871, "10568": 871, "10567": 871, "10533": 871, "10557": 871, "10591": 871, "10571": 871, "10587": 871, "10125": 871, "benerradi": 871, "10606": 871, "10610": 871, "10614": 871, "10611": 871, "10633": 871, "10661": 871, "10668": 871, "10681": 871, "timeformat": 871, "yyyi": 871, "_convert_tim": 871, "10674": 871, "kern": 871, "10694": 871, "10572": 871, "10373": 871, "10734": 871, "michiru": 871, "kaneda": 871, "10284": 871, "10749": 871, "10788": 871, "10892": 871, "10940": 871, "vref": 871, "10823": 871, "huberti": 871, "10979": 871, "_project_onto_surfac": 871, "return_nn": 871, "10930": 871, "10927": 871, "reza": 871, "nasri": 871, "hypnodyn": 871, "zmax": 871, "10754": 871, "frederik": 871, "weber": 871, "10718": 871, "t1t2": 871, "10639": 871, "toivonen": 871, "10217": 871, "wang": 871, "10517": 871, "10470": 871, "dold": 871, "10485": 871, "10487": 871, "10500": 871, "10491": 871, "10662": 871, "10866": 871, "10957": 871, "10513": 871, "10493": 871, "10504": 871, "10705": 871, "10521": 871, "10547": 871, "10543": 871, "10912": 871, "10560": 871, "10619": 871, "10618": 871, "shoorangiz": 871, "10638": 871, "10664": 871, "honor": 871, "10686": 871, "10685": 871, "10688": 871, "8754": 871, "10703": 871, "10730": 871, "10753": 871, "10765": 871, "po6": 871, "blender": 871, "10778": 871, "10802": 871, "10471": 871, "10851": 871, "10898": 871, "10990": 871, "10968": 871, "10936": 871, "10963": 871, "10978": 871, "10531": 871, "bilinear": 871, "set_interpol": 871, "10617": 871, "10715": 871, "10950": 871, "10925": 871, "10945": 871, "adelin": 871, "fecker": 871, "ciok": 871, "archit": 871, "singhal": 871, "ashlei": 871, "beaslei": 871, "dominiqu": 871, "makowski": 871, "hamid": 871, "maymandi": 871, "naveen": 871, "srinivasan": 871, "sondr": 871, "foslien": 871, "10396": 871, "10089": 871, "senwen": 871, "deng": 871, "10076": 871, "zerfowski": 871, "10054": 871, "etienn": 871, "montalivet": 871, "10174": 871, "veillett": 871, "10307": 871, "10281": 871, "9952": 871, "10379": 871, "9922": 871, "9978": 871, "9994": 871, "9929": 871, "concis": 871, "__repr__": 871, "10042": 871, "sosulski": 871, "10056": 871, "10077": 871, "10102": 871, "10058": 871, "10109": 871, "10115": 871, "10119": 871, "10114": 871, "10116": 871, "dpi": 871, "10126": 871, "10129": 871, "10135": 871, "10142": 871, "10166": 871, "10175": 871, "10182": 871, "10186": 871, "10185": 871, "9969": 871, "10019": 871, "10200": 871, "10255": 871, "10202": 871, "9972": 871, "10206": 871, "10220": 871, "10230": 871, "10249": 871, "10243": 871, "10212": 871, "ui": 871, "10222": 871, "10183": 871, "10247": 871, "10297": 871, "10299": 871, "10330": 871, "10384": 871, "10417": 871, "10418": 871, "10408": 871, "subsurfac": 871, "10421": 871, "joshua": 871, "teve": 871, "latin": 871, "10429": 871, "eberlein": 871, "10431": 871, "rawmff": 871, "10304": 871, "10361": 871, "shift_jist": 871, "10356": 871, "10093": 871, "adina": 871, "wagner": 871, "loadtxt": 871, "10189": 871, "federico": 871, "zamberlan": 871, "nikolai": 871, "chapochnikov": 871, "9957": 871, "led": 871, "inconsist": 871, "9966": 871, "9998": 871, "9968": 871, "alphanumer": 871, "10002": 871, "9975": 871, "9980": 871, "9990": 871, "suboptim": 871, "9991": 871, "10004": 871, "9970": 871, "10021": 871, "10040": 871, "10358": 871, "10047": 871, "10399": 871, "10073": 871, "10087": 871, "annotate_": 871, "meas_tim": 871, "10067": 871, "10118": 871, "10074": 871, "10082": 871, "10112": 871, "trip": 871, "10177": 871, "10127": 871, "10132": 871, "10095": 871, "10176": 871, "stout": 871, "10210": 871, "10235": 871, "10267": 871, "german": 871, "de_d": 871, "french": 871, "fr_fr": 871, "italian": 871, "it_it": 871, "10277": 871, "10292": 871, "10309": 871, "10265": 871, "10415": 871, "initial_valu": 871, "10289": 871, "10324": 871, "10342": 871, "10347": 871, "10313": 871, "10400": 871, "10335": 871, "mislead": 871, "10393": 871, "10392": 871, "10401": 871, "9960": 871, "10039": 871, "10348": 871, "annotate_flat": 871, "10143": 871, "max_ori_out": 871, "10366": 871, "10323": 871, "jinja2": 871, "tempita": 871, "10211": 871, "julia": 871, "guiomar": 871, "niso": 871, "gal\u00e1n": 871, "steve": 871, "matindi": 871, "hartmann": 871, "julien": 871, "derollepot": 871, "xiaokai": 871, "xia": 871, "bannier": 871, "darin": 871, "erat": 871, "sleiter": 871, "gate": 871, "evgeni": 871, "goldstein": 871, "riessariu": 871, "stargardski": 871, "9801": 871, "9575": 871, "nirsport2": 871, "9348": 871, "9401": 871, "9376": 871, "9430": 871, "9481": 871, "9637": 871, "9872": 871, "9782": 871, "9858": 871, "9640": 871, "9892": 871, "9725": 871, "ckdtree": 871, "9568": 871, "9643": 871, "9369": 871, "9427": 871, "9391": 871, "9396": 871, "9424": 871, "9403": 871, "9463": 871, "9431": 871, "9443": 871, "9406": 871, "9438": 871, "datablock": 871, "acquist": 871, "9437": 871, "raimondo": 871, "9445": 871, "9419": 871, "9458": 871, "9444": 871, "9503": 871, "9484": 871, "9697": 871, "9468": 871, "9514": 871, "erica": 871, "9541": 871, "9519": 871, "9525": 871, "9529": 871, "9558": 871, "9555": 871, "9553": 871, "insens": 871, "9544": 871, "9556": 871, "9578": 871, "9570": 871, "9545": 871, "9540": 871, "9601": 871, "9605": 871, "abort": 871, "9614": 871, "9516": 871, "9618": 871, "9658": 871, "9585": 871, "9682": 871, "9684": 871, "9789": 871, "9694": 871, "9586": 871, "9742": 871, "9796": 871, "9763": 871, "9784": 871, "9810": 871, "revamp": 871, "9754": 871, "9847": 871, "9860": 871, "9861": 871, "9862": 871, "9863": 871, "9871": 871, "9881": 871, "9891": 871, "9901": 871, "9795": 871, "9800": 871, "9613": 871, "9845": 871, "9851": 871, "9869": 871, "9859": 871, "9687": 871, "9708": 871, "9706": 871, "9378": 871, "9381": 871, "9712": 871, "9719": 871, "chronolog": 871, "9765": 871, "9849": 871, "9897": 871, "9920": 871, "9384": 871, "9404": 871, "9435": 871, "9531": 871, "9447": 871, "assertionerror": 871, "9612": 871, "9831": 871, "protect": 871, "9522": 871, "9485": 871, "9513": 871, "9489": 871, "9524": 871, "9603": 871, "9528": 871, "imposs": 871, "9893": 871, "9535": 871, "9564": 871, "9565": 871, "9629": 871, "9771": 871, "9607": 871, "9663": 871, "9630": 871, "9580": 871, "identitii": 871, "9758": 871, "dollar": 871, "9695": 871, "9746": 871, "9799": 871, "9804": 871, "9777": 871, "9780": 871, "9933": 871, "9864": 871, "9873": 871, "9940": 871, "9867": 871, "9904": 871, "pysurf": 871, "kit2fiff": 871, "mne_kit_gui": 871, "9505": 871, "9596": 871, "prox": 871, "outperform": 871, "9608": 871, "9493": 871, "9685": 871, "has_": 871, "_data": 871, "9781": 871, "add_figs_to_sect": 871, "add_slider_to_sect": 871, "add_images_to_sect": 871, "add_bem_to_sect": 871, "add_htmls_to_sect": 871, "sort_sect": 871, "9815": 871, "center_cmap": 871, "9843": 871, "detect_artifact": 871, "9909": 871, "fede": 871, "gansheng": 871, "tan": 871, "banvil": 871, "josh": 871, "koen": 871, "hecker": 871, "sumalyo": 871, "datta": 871, "pade": 871, "koehler": 871, "rotem": 871, "falach": 871, "sanderson": 871, "enrico": 871, "varano": 871, "judi": 871, "zhu": 871, "matteo": 871, "anelli": 871, "apoorva": 871, "karek": 871, "silvia": 871, "cotroneo": 871, "maggi": 871, "9192": 871, "9285": 871, "9278": 871, "9124": 871, "9203": 871, "9174": 871, "refactor": 871, "9088": 871, "9156": 871, "9043": 871, "9096": 871, "8867": 871, "8739": 871, "9169": 871, "yokogawa": 871, "8813": 871, "seymour": 871, "8799": 871, "ipyvtk_simpl": 871, "8503": 871, "8346": 871, "8896": 871, "8723": 871, "8738": 871, "8789": 871, "9268": 871, "8790": 871, "8697": 871, "8801": 871, "8829": 871, "8744": 871, "8762": 871, "9037": 871, "8793": 871, "9262": 871, "keypress": 871, "8806": 871, "starstim": 871, "enobio": 871, "8734": 871, "tristan": 871, "stenner": 871, "8760": 871, "8783": 871, "8822": 871, "8771": 871, "8805": 871, "8794": 871, "auto_clos": 871, "8730": 871, "8841": 871, "yu": 871, "luo": 871, "8858": 871, "checker": 871, "pylanc": 871, "8862": 871, "8874": 871, "interobail": 871, "8868": 871, "qt_mac_wants_lay": 871, "8959": 871, "8879": 871, "8834": 871, "9023": 871, "9015": 871, "9087": 871, "9113": 871, "9118": 871, "9103": 871, "9175": 871, "9149": 871, "9166": 871, "bierer": 871, "9210": 871, "9136": 871, "9241": 871, "9261": 871, "9269": 871, "9270": 871, "9141": 871, "9347": 871, "misbehav": 871, "8013": 871, "9207": 871, "9187": 871, "9151": 871, "9162": 871, "9152": 871, "x_label": 871, "9115": 871, "9062": 871, "8989": 871, "spectral_connect": 871, "8839": 871, "8844": 871, "8311": 871, "macosx": 871, "8688": 871, "8983": 871, "superset": 871, "8675": 871, "8713": 871, "8689": 871, "8954": 871, "8884": 871, "num_sampl": 871, "duration_in_sec": 871, "8712": 871, "8780": 871, "errantli": 871, "8804": 871, "8842": 871, "8857": 871, "9315": 871, "8956": 871, "9284": 871, "9317": 871, "8845": 871, "8811": 871, "bailei": 871, "8736": 871, "8831": 871, "8728": 871, "8731": 871, "8996": 871, "8752": 871, "8759": 871, "8775": 871, "8800": 871, "8817": 871, "8821": 871, "8856": 871, "8965": 871, "8985": 871, "8891": 871, "8963": 871, "9109": 871, "9178": 871, "9252": 871, "9027": 871, "9236": 871, "9246": 871, "9305": 871, "9277": 871, "9099": 871, "plot_sensors_connect": 871, "cbar_label": 871, "9248": 871, "read_select": 871, "8870": 871, "tf_dic": 871, "9122": 871, "9033": 871, "ana": 871, "radanov": 871, "magalvan": 871, "mista": 871, "christina": 871, "zhao": 871, "giorgio": 871, "marinato": 871, "jori": 871, "den": 871, "bossch": 871, "gensollen": 871, "treguer": 871, "merk": 871, "austin": 871, "hurst": 871, "aniket": 871, "pradhan": 871, "hongjiang": 871, "kuziek": 871, "qianliang": 871, "tod": 871, "flak": 871, "8354": 871, "7070": 871, "imgag": 871, "7717": 871, "kyle": 871, "mathewson": 871, "8275": 871, "8445": 871, "keith": 871, "doell": 871, "8553": 871, "8351": 871, "8190": 871, "8539": 871, "8379": 871, "8366": 871, "8642": 871, "8447": 871, "8323": 871, "8449": 871, "8402": 871, "8460": 871, "8532": 871, "8482": 871, "8608": 871, "8502": 871, "tqdm": 871, "8515": 871, "8622": 871, "8381": 871, "8584": 871, "8442": 871, "8534": 871, "8624": 871, "8519": 871, "8452": 871, "8415": 871, "8395": 871, "8658": 871, "cascad": 871, "8633": 871, "8580": 871, "8400": 871, "test_egi": 871, "mandatorili": 871, "8474": 871, "8339": 871, "8558": 871, "s390x": 871, "8618": 871, "8594": 871, "8610": 871, "8285": 871, "8344": 871, "8318": 871, "8637": 871, "8306": 871, "8448": 871, "8283": 871, "name_split": 871, "01_meg": 871, "name_meg": 871, "8464": 871, "8326": 871, "8343": 871, "8425": 871, "8317": 871, "8663": 871, "8320": 871, "8303": 871, "8484": 871, "8349": 871, "max_pca_compon": 871, "max_pca_components_": 871, "8321": 871, "8341": 871, "everyhwer": 871, "8368": 871, "8393": 871, "8416": 871, "8434": 871, "8486": 871, "8491": 871, "8492": 871, "8545": 871, "8590": 871, "tukei": 871, "8542": 871, "8520": 871, "8589": 871, "8564": 871, "8605": 871, "8374": 871, "8357": 871, "8356": 871, "8389": 871, "justu": 871, "schwabed": 871, "mad": 871, "jensen": 871, "mikolaj": 871, "rahul": 871, "nadkarni": 871, "lau": 871, "m\u00f8ller": 871, "andersen": 871, "sedivi": 871, "donckt": 871, "svea": 871, "meyer": 871, "lx37": 871, "rai": 871, "n_iter_sdr": 871, "immut": 871, "fxaa": 871, "_split": 871, "_part": 871, "read_raw_xxx": 871, "simpler": 871, "permit": 871, "outermost": 871, "wrongli": 871, "setup_forward_model": 871, "unicod": 871, "conjug": 871, "throw": 871, "spatio_temporal_src_connect": 871, "find_ch_connect": 871, "read_ch_connect": 871, "spatial_dist_connect": 871, "spatial_inter_hemi_connect": 871, "spatial_src_connect": 871, "spatial_tris_connect": 871, "spatio_temporal_dist_connect": 871, "spatio_temporal_tris_connect": 871, "normalize_fwd": 871, "stc_mix": 871, "read_dig_captrack": 871, "spell": 871, "captrack": 871, "mark_flat": 871, "alejandro": 871, "weinstein": 871, "anton": 871, "nikola": 871, "waniek": 871, "harmelen": 871, "sara": 871, "sommariva": 871, "chapochn": 871, "mshader": 871, "sophi": 871, "herbst": 871, "victor": 871, "ferat": 871, "mohammad": 871, "daneshzand": 871, "reppling": 871, "plv": 871, "dmitrii": 871, "altukhov": 871, "epochs_color": 871, "prepare_bem_model": 871, "unavail": 871, "compromis": 871, "roc_auc_ovo": 871, "roc_auc_ovo_weight": 871, "sebastian": 871, "old_tim": 871, "subprocess": 871, "htp": 871, "insuffici": 871, "demetr": 871, "kosta": 871, "gridsearchcv": 871, "chun": 871, "hui": 871, "henrich": 871, "kolkhorst": 871, "fu": 871, "geoff": 871, "brookshir": 871, "eegmi_url": 871, "ramiro": 871, "gatti": 871, "get_channel_type_const": 871, "bump": 871, "tandem": 871, "point_spread_funct": 871, "cross_talk_funct": 871, "ariel": 871, "rokem": 871, "torr": 871, "jos\u00e9": 871, "garc\u00eda": 871, "moham": 871, "sherif": 871, "nataliia": 871, "kozhemiako": 871, "legrand": 871, "f\u00e9rat": 871, "theodor": 871, "papadopoulo": 871, "markerfil": 871, "dirk": 871, "g\u00fctlin": 871, "10x": 871, "jit": 871, "ryb\u00e1\u0159": 871, "abram": 871, "hindl": 871, "eberhard": 871, "eich": 871, "radman": 871, "hidpi": 871, "pycord": 871, "read_montag": 871, "read_dig_montag": 871, "set_dig": 871, "update_ch_nam": 871, "raise_if_subset": 871, "_smsh_": 871, "_smartshield": 871, "max_tick": 871, "show_legend": 871, "biosig": 871, "nathali": 871, "gayraud": 871, "crist\u00f3bal": 871, "mo\u00ebnn": 871, "loccoz": 871, "mixin": 871, "lslclient": 871, "lsl": 871, "chala": 871, "mocklslstream": 871, "roujanski": 871, "fault": 871, "kovrig": 871, "n_pad": 871, "bruno": 871, "nicenboim": 871, "32bit": 871, "edge_": 871, "v0": 871, "retina": 871, "larri": 871, "eisenman": 871, "mishandl": 871, "haslach": 871, "clean_eog_ecg": 871, "jeythekei": 871, "_criterion": 871, "katarina": 871, "slama": 871, "synthesi": 871, "find_edf_ev": 871, "patch_info": 871, "castano": 871, "finder": 871, "rasmu": 871, "zetter": 871, "orgin": 871, "gsoc": 871, "molfes": 871, "sphx_glr_auto_examples_datasets_plot_opm_rest_data": 871, "gutstein": 871, "trig_shift_by_typ": 871, "read_annotations_brainvis": 871, "get_blas_func": 871, "_compute_covariance_auto": 871, "erkka": 871, "heinila": 871, "onewai": 871, "marcin": 871, "koculak": 871, "buildup": 871, "incom": 871, "bethard": 871, "dateutil": 871, "jasper": 871, "bosch": 871, "_current": 871, "unit_noise_gain": 871, "buildqa": 871, "read_annotations_eeglab": 871, "annotmap": 871, "runtimeexcept": 871, "morph_precomput": 871, "compute_morph_matrix": 871, "morph_data_precomput": 871, "pycuda": 871, "warn_explicit": 871, "save_stc_as_volum": 871, "stop_receive_thread": 871, "johan": 871, "meer": 871, "kambiz": 871, "tavabi": 871, "lorenz": 871, "esch": 871, "manu": 871, "sutela": 871, "perri": 871, "sergei": 871, "antopolskii": 871, "teekuninga": 871, "jochmann": 871, "dupr\u00e9": 871, "workaround": 871, "trainsform": 871, "dubarri": 871, "tf_mxne_optim": 871, "mxne_optim": 871, "multidictionari": 871, "image_mask": 871, "csd_epoch": 871, "csd_arrai": 871, "oleh": 871, "kozynet": 871, "lcmv_epoch": 871, "lcmv_raw": 871, "dics_epoch": 871, "braboszcz": 871, "desislava": 871, "petkova": 871, "krzemi\u0144ski": 871, "hornberg": 871, "juergen": 871, "katrin": 871, "leinweb": 871, "yaroslav": 871, "halchenko": 871, "baptist": 871, "schiratti": 871, "utilis": 871, "dgap_l21l1": 871, "ramonapariciog": 871, "get_pos2d": 871, "\u03c7\u00b2": 871, "writabl": 871, "plot_roi_erpimage_by_rt": 871, "ansi": 871, "codepag": 871, "okba": 871, "bekhelifi": 871, "boggess": 871, "duemos": 871, "nielsen": 871, "luk\u00e1\u0161": 871, "hejtm\u00e1nek": 871, "_virtual": 871, "treatment": 871, "megsim": 871, "mrn": 871, "reformat": 871, "timedecod": 871, "generalizationacrosstim": 871, "plot_gat_tim": 871, "plot_gat_matrix": 871, "read_events_eeglab": 871, "plot_tran": 871, "tf_lcmv": 871, "scale_tim": 871, "scalings_tim": 871, "akshay0724": 871, "rudiuk": 871, "dykstra": 871, "laetitia": 871, "grabot": 871, "proulx": 871, "apariciogarcia": 871, "robin": 871, "tibor": 871, "schirrmeist": 871, "rodrigo": 871, "h\u00fcbner": 871, "toddler": 871, "fasttrack": 871, "brovelli": 871, "_plot_topo_onpick": 871, "nikla": 871, "wilm": 871, "rantala": 871, "_bad_drop": 871, "_filenam": 871, "pasler": 871, "predict_mod": 871, "chanloc": 871, "dgap_l21": 871, "band_pass_filt": 871, "band_stop_filt": 871, "low_pass_filt": 871, "high_pass_filt": 871, "eeg_sensor": 871, "typecheck": 871, "leonardo": 871, "barbosa": 871, "superflu": 871, "hermann": 871, "sonntag": 871, "jakub": 871, "kaczmarzyk": 871, "lorenzo": 871, "alfin": 871, "visconti": 871, "nick": 871, "foti": 871, "pop_prop": 871, "maryland": 871, "preview": 871, "raimundo": 871, "hid": 871, "martinez": 871, "pablo": 871, "aria": 871, "duma": 871, "fieldtripcli": 871, "get_data_as_epoch": 871, "unitsposit": 871, "mullin": 871, "bva": 871, "strictest": 871, "hojlund": 871, "niediek": 871, "add_eeg_ref": 871, "csd_compute_epoch": 871, "ev2": 871, "\u00b5": 871, "aru": 871, "unsupport": 871, "config_opt": 871, "epochsvector": 871, "favour": 871, "cwt_morlet": 871, "single_trial_pow": 871, "committ": 871, "camilo": 871, "lamu": 871, "f\u00e9lix": 871, "kraus": 871, "shlomo": 871, "poil": 871, "show_info": 871, "compute_raw_psd": 871, "compute_epochs_psd": 871, "614990234": 871, "00064103": 871, "99897607": 871, "train_tim": 871, "ecg_criterion": 871, "eog_criterion": 871, "natali": 871, "klein": 871, "coordinan": 871, "ware": 871, "score_mod": 871, "stimserv": 871, "ip": 871, "mesh_color": 871, "multitaper_psd": 871, "vertor": 871, "renorm": 871, "drop_bad_epoch": 871, "drop_epoch": 871, "do_forward_solut": 871, "kaichogami": 871, "cl\u00e9ment": 871, "moutard": 871, "martinbab": 871, "sagun": 871, "pai": 871, "sourav": 871, "kambyses": 871, "pbnsilva": 871, "sviter": 871, "zuxfoucault": 871, "nenonen": 871, "add_eeg_average_proj": 871, "n_samp_tot": 871, "emilyps14": 871, "lennyvarghes": 871, "freeview_bem_surfac": 871, "desanti": 871, "_setup_vmin_vmax": 871, "concatenatechannel": 871, "redesign": 871, "rewrot": 871, "plot_image_epoch": 871, "preload_data": 871, "santi": 871, "roan": 871, "laplant": 871, "wakeman": 871, "add_sect": 871, "marmaduk": 871, "woodman": 871, "whiten_evok": 871, "oddbal": 871, "label_1": 871, "label_2": 871, "savitski": 871, "_baseraw": 871, "prof": 871, "decoupl": 871, "read_hsp": 871, "read_elp": 871, "write_hsp": 871, "write_mrk": 871, "label_time_cours": 871, "as_data_fram": 871, "pick_types_evok": 871, "textbox": 871, "iir_filter_raw": 871, "ingoo": 871, "kj": 871, "basil": 871, "pinsard": 871, "hafeza": 871, "anevar": 871, "manoj": 871, "kumar": 871, "tucker": 871, "ward": 871, "radic": 871, "tack": 871, "equalize_channnel": 871, "s\u00e9bastien": 871, "connector": 871, "cathi": 871, "nangini": 871, "succintli": 871, "breuer": 871, "aesthet": 871, "qunxi": 871, "drop_pick": 871, "labels_from_parc": 871, "parc_from_label": 871, "setno": 871, "plot_": 871, "praveen": 871, "sripad": 871, "tanai": 871, "saket": 871, "choudhari": 871, "brad": 871, "buran": 871, "stimclient": 871, "rtclient": 871, "mockrtclient": 871, "trelli": 871, "ki2fiff": 871, "pick_norm": 871, "write_stc": 871, "olivetti": 871, "kornblith": 871, "smarter": 871, "sources_as_epoch": 871, "psi": 871, "mne_compute_proj_eog": 871, "applicationon": 871, "proj_act": 871, "keep_comp": 871, "dest_comp": 871, "speedup": 871, "clike": 871, "l21": 871, "bessel": 871, "time_to_index": 871, "mne_compute_proj_ecg": 871, "mne_maxfilt": 871, "loui": 871, "thibault": 871, "ellen": 871, "ruzich": 871}, "objects": {"": [[861, 0, 0, "-", "mne"]], "mne": [[253, 1, 1, "", "AcqParserFIF"], [254, 1, 1, "", "Annotations"], [255, 1, 1, "", "BaseEpochs"], [256, 1, 1, "", "BiHemiLabel"], [257, 1, 1, "", "Covariance"], [258, 1, 1, "", "Dipole"], [259, 1, 1, "", "DipoleFixed"], [260, 1, 1, "", "Epochs"], [261, 1, 1, "", "EpochsArray"], [262, 1, 1, "", "Evoked"], [263, 1, 1, "", "EvokedArray"], [264, 1, 1, "", "Forward"], [265, 1, 1, "", "Info"], [266, 1, 1, "", "Label"], [267, 1, 1, "", "MixedSourceEstimate"], [268, 1, 1, "", "MixedVectorSourceEstimate"], [269, 1, 1, "", "Projection"], [270, 1, 1, "", "Report"], [271, 1, 1, "", "SourceEstimate"], [272, 1, 1, "", "SourceMorph"], [273, 1, 1, "", "SourceSpaces"], [274, 1, 1, "", "VectorSourceEstimate"], [275, 1, 1, "", "VolSourceEstimate"], [276, 1, 1, "", "VolVectorSourceEstimate"], [277, 4, 1, "", "add_reference_channels"], [278, 4, 1, "", "add_source_space_distances"], [279, 4, 1, "", "annotations_from_events"], [280, 4, 1, "", "apply_forward"], [281, 4, 1, "", "apply_forward_raw"], [282, 4, 1, "", "average_forward_solutions"], [865, 0, 0, "-", "baseline"], [839, 0, 0, "-", "beamformer"], [250, 0, 0, "-", "bem"], [305, 4, 1, "", "channel_indices_by_type"], [306, 4, 1, "", "channel_type"], [860, 0, 0, "-", "channels"], [860, 0, 0, "-", "chpi"], [348, 4, 1, "", "combine_evoked"], [349, 4, 1, "", "compute_covariance"], [350, 4, 1, "", "compute_proj_epochs"], [351, 4, 1, "", "compute_proj_evoked"], [352, 4, 1, "", "compute_proj_raw"], [353, 4, 1, "", "compute_rank"], [354, 4, 1, "", "compute_raw_covariance"], [355, 4, 1, "", "compute_source_morph"], [356, 4, 1, "", "concatenate_epochs"], [357, 4, 1, "", "concatenate_events"], [358, 4, 1, "", "concatenate_raws"], [359, 4, 1, "", "convert_forward_solution"], [366, 4, 1, "", "create_default_subject"], [367, 4, 1, "", "create_info"], [840, 0, 0, "-", "cuda"], [245, 0, 0, "-", "datasets"], [402, 4, 1, "", "decimate_surface"], [246, 0, 0, "-", "decoding"], [422, 4, 1, "", "dig_mri_distances"], [839, 0, 0, "-", "dipole"], [247, 0, 0, "-", "epochs"], [428, 4, 1, "", "equalize_channels"], [247, 0, 0, "-", "event"], [432, 4, 1, "", "events_from_annotations"], [248, 0, 0, "-", "export"], [437, 4, 1, "", "extract_label_time_course"], [860, 0, 0, "-", "filter"], [444, 4, 1, "", "find_events"], [445, 4, 1, "", "find_stim_steps"], [446, 4, 1, "", "fit_dipole"], [451, 4, 1, "", "get_config"], [452, 4, 1, "", "get_config_path"], [453, 4, 1, "", "get_head_surf"], [454, 4, 1, "", "get_meg_helmet_surf"], [455, 4, 1, "", "get_montage_volume_labels"], [456, 4, 1, "", "get_volume_labels_from_aseg"], [457, 4, 1, "", "get_volume_labels_from_src"], [458, 4, 1, "", "grade_to_tris"], [459, 4, 1, "", "grade_to_vertices"], [460, 4, 1, "", "grand_average"], [461, 4, 1, "", "grow_labels"], [464, 4, 1, "", "head_to_mni"], [465, 4, 1, "", "head_to_mri"], [839, 0, 0, "-", "inverse_sparse"], [862, 0, 0, "-", "io"], [504, 4, 1, "", "label_sign_flip"], [505, 4, 1, "", "labels_to_stc"], [506, 4, 1, "", "make_ad_hoc_cov"], [507, 4, 1, "", "make_bem_model"], [508, 4, 1, "", "make_bem_solution"], [509, 4, 1, "", "make_field_map"], [510, 4, 1, "", "make_fixed_length_epochs"], [511, 4, 1, "", "make_fixed_length_events"], [512, 4, 1, "", "make_forward_dipole"], [513, 4, 1, "", "make_forward_solution"], [514, 4, 1, "", "make_sphere_model"], [515, 4, 1, "", "merge_events"], [839, 0, 0, "-", "minimum_norm"], [536, 4, 1, "", "morph_labels"], [537, 4, 1, "", "morph_source_spaces"], [538, 4, 1, "", "open_docs"], [539, 4, 1, "", "open_report"], [540, 4, 1, "", "parse_config"], [541, 4, 1, "", "pick_channels"], [542, 4, 1, "", "pick_channels_cov"], [543, 4, 1, "", "pick_channels_forward"], [544, 4, 1, "", "pick_channels_regexp"], [545, 4, 1, "", "pick_events"], [546, 4, 1, "", "pick_info"], [547, 4, 1, "", "pick_types"], [548, 4, 1, "", "pick_types_forward"], [860, 0, 0, "-", "preprocessing"], [595, 4, 1, "", "random_parcellation"], [596, 4, 1, "", "read_annotations"], [597, 4, 1, "", "read_bem_solution"], [598, 4, 1, "", "read_bem_surfaces"], [599, 4, 1, "", "read_cov"], [600, 4, 1, "", "read_dipole"], [601, 4, 1, "", "read_epochs"], [602, 4, 1, "", "read_epochs_eeglab"], [603, 4, 1, "", "read_epochs_fieldtrip"], [604, 4, 1, "", "read_epochs_kit"], [605, 4, 1, "", "read_events"], [606, 4, 1, "", "read_evoked_besa"], [607, 4, 1, "", "read_evoked_fieldtrip"], [608, 4, 1, "", "read_evokeds"], [609, 4, 1, "", "read_evokeds_mff"], [610, 4, 1, "", "read_forward_solution"], [611, 4, 1, "", "read_freesurfer_lut"], [612, 4, 1, "", "read_label"], [613, 4, 1, "", "read_labels_from_annot"], [614, 4, 1, "", "read_lta"], [615, 4, 1, "", "read_morph_map"], [616, 4, 1, "", "read_proj"], [617, 4, 1, "", "read_reject_parameters"], [618, 4, 1, "", "read_source_estimate"], [619, 4, 1, "", "read_source_morph"], [620, 4, 1, "", "read_source_spaces"], [621, 4, 1, "", "read_surface"], [622, 4, 1, "", "read_talxfm"], [623, 4, 1, "", "read_trans"], [624, 4, 1, "", "read_tri"], [625, 4, 1, "", "read_vectorview_selection"], [626, 4, 1, "", "rename_channels"], [627, 4, 1, "", "scale_bem"], [628, 4, 1, "", "scale_labels"], [629, 4, 1, "", "scale_mri"], [630, 4, 1, "", "scale_source_space"], [631, 4, 1, "", "sensitivity_map"], [632, 4, 1, "", "set_bipolar_reference"], [633, 4, 1, "", "set_cache_dir"], [634, 4, 1, "", "set_config"], [635, 4, 1, "", "set_eeg_reference"], [636, 4, 1, "", "set_log_file"], [637, 4, 1, "", "set_log_level"], [638, 4, 1, "", "setup_source_space"], [639, 4, 1, "", "setup_volume_source_space"], [866, 0, 0, "-", "simulation"], [660, 4, 1, "", "spatial_dist_adjacency"], [661, 4, 1, "", "spatial_inter_hemi_adjacency"], [662, 4, 1, "", "spatial_src_adjacency"], [663, 4, 1, "", "spatial_tris_adjacency"], [664, 4, 1, "", "spatio_temporal_dist_adjacency"], [665, 4, 1, "", "spatio_temporal_src_adjacency"], [666, 4, 1, "", "spatio_temporal_tris_adjacency"], [667, 4, 1, "", "split_label"], [868, 0, 0, "-", "stats"], [685, 4, 1, "", "stc_near_sensors"], [686, 4, 1, "", "stc_to_label"], [689, 4, 1, "", "sys_info"], [869, 0, 0, "-", "time_frequency"], [725, 4, 1, "", "transform_surface_to"], [860, 0, 0, "-", "transforms"], [732, 4, 1, "", "use_coil_def"], [733, 1, 1, "", "use_log_level"], [840, 0, 0, "-", "utils"], [736, 4, 1, "", "verbose"], [737, 4, 1, "", "vertex_to_mni"], [870, 0, 0, "-", "viz"], [811, 4, 1, "", "warp_montage_volume"], [812, 4, 1, "", "what"], [813, 4, 1, "", "write_bem_solution"], [814, 4, 1, "", "write_bem_surfaces"], [815, 4, 1, "", "write_cov"], [816, 4, 1, "", "write_events"], [817, 4, 1, "", "write_evokeds"], [818, 4, 1, "", "write_forward_solution"], [819, 4, 1, "", "write_head_bem"], [820, 4, 1, "", "write_label"], [821, 4, 1, "", "write_labels_to_annot"], [822, 4, 1, "", "write_proj"], [823, 4, 1, "", "write_source_spaces"], [824, 4, 1, "", "write_surface"], [825, 4, 1, "", "write_trans"]], "mne.AcqParserFIF": [[253, 2, 1, "", "__getitem__"], [253, 2, 1, "", "__len__"], [253, 3, 1, "", "categories"], [253, 3, 1, "", "events"], [253, 2, 1, "", "get_condition"]], "mne.Annotations": [[254, 2, 1, "", "__add__"], [254, 2, 1, "", "__getitem__"], [254, 2, 1, "", "__iter__"], [254, 2, 1, "", "__len__"], [254, 2, 1, "", "append"], [254, 2, 1, "", "copy"], [254, 2, 1, "", "crop"], [254, 2, 1, "", "delete"], [254, 3, 1, "", "orig_time"], [254, 2, 1, "", "rename"], [254, 2, 1, "", "save"], [254, 2, 1, "", "set_durations"], [254, 2, 1, "", "to_data_frame"]], "mne.BaseEpochs": [[255, 2, 1, "", "__contains__"], [255, 2, 1, "", "__getitem__"], [255, 2, 1, "", "__iter__"], [255, 2, 1, "", "__len__"], [255, 2, 1, "", "add_annotations_to_metadata"], [255, 2, 1, "", "add_channels"], [255, 2, 1, "", "add_proj"], [255, 2, 1, "", "add_reference_channels"], [255, 2, 1, "", "anonymize"], [255, 2, 1, "", "apply_baseline"], [255, 2, 1, "", "apply_function"], [255, 2, 1, "", "apply_hilbert"], [255, 2, 1, "", "apply_proj"], [255, 2, 1, "", "as_type"], [255, 2, 1, "", "average"], [255, 3, 1, "", "ch_names"], [255, 3, 1, "", "compensation_grade"], [255, 2, 1, "", "compute_psd"], [255, 2, 1, "", "copy"], [255, 2, 1, "", "crop"], [255, 2, 1, "", "decimate"], [255, 2, 1, "", "del_proj"], [255, 2, 1, "", "drop"], [255, 2, 1, "", "drop_bad"], [255, 2, 1, "", "drop_channels"], [255, 2, 1, "", "drop_log_stats"], [255, 2, 1, "", "equalize_event_counts"], [255, 2, 1, "", "export"], [255, 3, 1, "", "filename"], [255, 2, 1, "", "filter"], [255, 2, 1, "", "get_annotations_per_epoch"], [255, 2, 1, "", "get_channel_types"], [255, 2, 1, "", "get_data"], [255, 2, 1, "", "get_montage"], [255, 2, 1, "", "interpolate_bads"], [255, 2, 1, "", "iter_evoked"], [255, 2, 1, "", "load_data"], [255, 3, 1, "", "metadata"], [255, 2, 1, "", "next"], [255, 2, 1, "", "pick"], [255, 2, 1, "", "pick_channels"], [255, 2, 1, "", "pick_types"], [255, 2, 1, "", "plot"], [255, 2, 1, "", "plot_drop_log"], [255, 2, 1, "", "plot_image"], [255, 2, 1, "", "plot_projs_topomap"], [255, 2, 1, "", "plot_psd"], [255, 2, 1, "", "plot_psd_topo"], [255, 2, 1, "", "plot_psd_topomap"], [255, 2, 1, "", "plot_sensors"], [255, 2, 1, "", "plot_topo_image"], [255, 3, 1, "", "proj"], [255, 2, 1, "", "rename_channels"], [255, 2, 1, "", "reorder_channels"], [255, 2, 1, "", "resample"], [255, 2, 1, "", "reset_drop_log_selection"], [255, 2, 1, "", "save"], [255, 2, 1, "", "savgol_filter"], [255, 2, 1, "", "set_annotations"], [255, 2, 1, "", "set_channel_types"], [255, 2, 1, "", "set_eeg_reference"], [255, 2, 1, "", "set_meas_date"], [255, 2, 1, "", "set_montage"], [255, 2, 1, "", "shift_time"], [255, 2, 1, "", "standard_error"], [255, 2, 1, "", "subtract_evoked"], [255, 2, 1, "", "time_as_index"], [255, 3, 1, "", "times"], [255, 3, 1, "", "tmax"], [255, 3, 1, "", "tmin"], [255, 2, 1, "", "to_data_frame"]], "mne.BiHemiLabel": [[256, 2, 1, "", "__add__"], [256, 2, 1, "", "__len__"], [256, 2, 1, "", "__sub__"]], "mne.Covariance": [[257, 2, 1, "", "__add__"], [257, 2, 1, "", "__contains__"], [257, 2, 1, "", "__getitem__"], [257, 2, 1, "", "__iter__"], [257, 2, 1, "", "__len__"], [257, 2, 1, "", "as_diag"], [257, 3, 1, "", "ch_names"], [257, 2, 1, "", "clear"], [257, 2, 1, "", "copy"], [257, 3, 1, "", "data"], [257, 2, 1, "", "fromkeys"], [257, 2, 1, "", "get"], [257, 2, 1, "", "items"], [257, 2, 1, "", "keys"], [257, 3, 1, "", "nfree"], [257, 2, 1, "", "pick_channels"], [257, 2, 1, "", "plot"], [257, 2, 1, "", "plot_topomap"], [257, 2, 1, "", "pop"], [257, 2, 1, "", "popitem"], [257, 2, 1, "", "save"], [257, 2, 1, "", "setdefault"], [257, 2, 1, "", "update"], [257, 2, 1, "", "values"]], "mne.Dipole": [[258, 2, 1, "", "__getitem__"], [258, 2, 1, "", "__len__"], [258, 2, 1, "", "copy"], [258, 2, 1, "", "crop"], [258, 2, 1, "", "decimate"], [258, 2, 1, "", "plot_amplitudes"], [258, 2, 1, "", "plot_locations"], [258, 2, 1, "", "save"], [258, 2, 1, "", "shift_time"], [258, 2, 1, "", "time_as_index"], [258, 3, 1, "", "times"], [258, 3, 1, "", "tmax"], [258, 3, 1, "", "tmin"], [258, 2, 1, "", "to_mni"], [258, 2, 1, "", "to_mri"], [258, 2, 1, "", "to_volume_labels"]], "mne.DipoleFixed": [[259, 3, 1, "", "ch_names"], [259, 2, 1, "", "copy"], [259, 2, 1, "", "crop"], [259, 2, 1, "", "decimate"], [259, 2, 1, "", "plot"], [259, 2, 1, "", "save"], [259, 2, 1, "", "shift_time"], [259, 2, 1, "", "time_as_index"], [259, 3, 1, "", "times"], [259, 3, 1, "", "tmax"], [259, 3, 1, "", "tmin"]], "mne.Epochs": [[260, 2, 1, "", "__contains__"], [260, 2, 1, "", "__getitem__"], [260, 2, 1, "", "__iter__"], [260, 2, 1, "", "__len__"], [260, 2, 1, "", "add_annotations_to_metadata"], [260, 2, 1, "", "add_channels"], [260, 2, 1, "", "add_proj"], [260, 2, 1, "", "add_reference_channels"], [260, 2, 1, "", "anonymize"], [260, 2, 1, "", "apply_baseline"], [260, 2, 1, "", "apply_function"], [260, 2, 1, "", "apply_hilbert"], [260, 2, 1, "", "apply_proj"], [260, 2, 1, "", "as_type"], [260, 2, 1, "", "average"], [260, 3, 1, "", "ch_names"], [260, 3, 1, "", "compensation_grade"], [260, 2, 1, "", "compute_psd"], [260, 2, 1, "", "copy"], [260, 2, 1, "", "crop"], [260, 2, 1, "", "decimate"], [260, 2, 1, "", "del_proj"], [260, 2, 1, "", "drop"], [260, 2, 1, "", "drop_bad"], [260, 2, 1, "", "drop_channels"], [260, 2, 1, "", "drop_log_stats"], [260, 2, 1, "", "equalize_event_counts"], [260, 2, 1, "", "export"], [260, 3, 1, "", "filename"], [260, 2, 1, "", "filter"], [260, 2, 1, "", "get_annotations_per_epoch"], [260, 2, 1, "", "get_channel_types"], [260, 2, 1, "", "get_data"], [260, 2, 1, "", "get_montage"], [260, 2, 1, "", "interpolate_bads"], [260, 2, 1, "", "iter_evoked"], [260, 2, 1, "", "load_data"], [260, 3, 1, "", "metadata"], [260, 2, 1, "", "next"], [260, 2, 1, "", "pick"], [260, 2, 1, "", "pick_channels"], [260, 2, 1, "", "pick_types"], [260, 2, 1, "", "plot"], [260, 2, 1, "", "plot_drop_log"], [260, 2, 1, "", "plot_image"], [260, 2, 1, "", "plot_projs_topomap"], [260, 2, 1, "", "plot_psd"], [260, 2, 1, "", "plot_psd_topo"], [260, 2, 1, "", "plot_psd_topomap"], [260, 2, 1, "", "plot_sensors"], [260, 2, 1, "", "plot_topo_image"], [260, 3, 1, "", "proj"], [260, 2, 1, "", "rename_channels"], [260, 2, 1, "", "reorder_channels"], [260, 2, 1, "", "resample"], [260, 2, 1, "", "reset_drop_log_selection"], [260, 2, 1, "", "save"], [260, 2, 1, "", "savgol_filter"], [260, 2, 1, "", "set_annotations"], [260, 2, 1, "", "set_channel_types"], [260, 2, 1, "", "set_eeg_reference"], [260, 2, 1, "", "set_meas_date"], [260, 2, 1, "", "set_montage"], [260, 2, 1, "", "shift_time"], [260, 2, 1, "", "standard_error"], [260, 2, 1, "", "subtract_evoked"], [260, 2, 1, "", "time_as_index"], [260, 3, 1, "", "times"], [260, 3, 1, "", "tmax"], [260, 3, 1, "", "tmin"], [260, 2, 1, "", "to_data_frame"]], "mne.EpochsArray": [[261, 2, 1, "", "__contains__"], [261, 2, 1, "", "__getitem__"], [261, 2, 1, "", "__iter__"], [261, 2, 1, "", "__len__"], [261, 2, 1, "", "add_annotations_to_metadata"], [261, 2, 1, "", "add_channels"], [261, 2, 1, "", "add_proj"], [261, 2, 1, "", "add_reference_channels"], [261, 2, 1, "", "anonymize"], [261, 2, 1, "", "apply_baseline"], [261, 2, 1, "", "apply_function"], [261, 2, 1, "", "apply_hilbert"], [261, 2, 1, "", "apply_proj"], [261, 2, 1, "", "as_type"], [261, 2, 1, "", "average"], [261, 3, 1, "", "ch_names"], [261, 3, 1, "", "compensation_grade"], [261, 2, 1, "", "compute_psd"], [261, 2, 1, "", "copy"], [261, 2, 1, "", "crop"], [261, 2, 1, "", "decimate"], [261, 2, 1, "", "del_proj"], [261, 2, 1, "", "drop"], [261, 2, 1, "", "drop_bad"], [261, 2, 1, "", "drop_channels"], [261, 2, 1, "", "drop_log_stats"], [261, 2, 1, "", "equalize_event_counts"], [261, 2, 1, "", "export"], [261, 3, 1, "", "filename"], [261, 2, 1, "", "filter"], [261, 2, 1, "", "get_annotations_per_epoch"], [261, 2, 1, "", "get_channel_types"], [261, 2, 1, "", "get_data"], [261, 2, 1, "", "get_montage"], [261, 2, 1, "", "interpolate_bads"], [261, 2, 1, "", "iter_evoked"], [261, 2, 1, "", "load_data"], [261, 3, 1, "", "metadata"], [261, 2, 1, "", "next"], [261, 2, 1, "", "pick"], [261, 2, 1, "", "pick_channels"], [261, 2, 1, "", "pick_types"], [261, 2, 1, "", "plot"], [261, 2, 1, "", "plot_drop_log"], [261, 2, 1, "", "plot_image"], [261, 2, 1, "", "plot_projs_topomap"], [261, 2, 1, "", "plot_psd"], [261, 2, 1, "", "plot_psd_topo"], [261, 2, 1, "", "plot_psd_topomap"], [261, 2, 1, "", "plot_sensors"], [261, 2, 1, "", "plot_topo_image"], [261, 3, 1, "", "proj"], [261, 2, 1, "", "rename_channels"], [261, 2, 1, "", "reorder_channels"], [261, 2, 1, "", "resample"], [261, 2, 1, "", "reset_drop_log_selection"], [261, 2, 1, "", "save"], [261, 2, 1, "", "savgol_filter"], [261, 2, 1, "", "set_annotations"], [261, 2, 1, "", "set_channel_types"], [261, 2, 1, "", "set_eeg_reference"], [261, 2, 1, "", "set_meas_date"], [261, 2, 1, "", "set_montage"], [261, 2, 1, "", "shift_time"], [261, 2, 1, "", "standard_error"], [261, 2, 1, "", "subtract_evoked"], [261, 2, 1, "", "time_as_index"], [261, 3, 1, "", "times"], [261, 3, 1, "", "tmax"], [261, 3, 1, "", "tmin"], [261, 2, 1, "", "to_data_frame"]], "mne.Evoked": [[262, 2, 1, "", "__contains__"], [262, 2, 1, "", "__neg__"], [262, 2, 1, "", "add_channels"], [262, 2, 1, "", "add_proj"], [262, 2, 1, "", "add_reference_channels"], [262, 2, 1, "", "animate_topomap"], [262, 2, 1, "", "anonymize"], [262, 2, 1, "", "apply_baseline"], [262, 2, 1, "", "apply_function"], [262, 2, 1, "", "apply_hilbert"], [262, 2, 1, "", "apply_proj"], [262, 2, 1, "", "as_type"], [262, 3, 1, "", "ch_names"], [262, 3, 1, "", "compensation_grade"], [262, 2, 1, "", "compute_psd"], [262, 2, 1, "", "copy"], [262, 2, 1, "", "crop"], [262, 3, 1, "", "data"], [262, 2, 1, "", "decimate"], [262, 2, 1, "", "del_proj"], [262, 2, 1, "", "detrend"], [262, 2, 1, "", "drop_channels"], [262, 2, 1, "", "export"], [262, 2, 1, "", "filter"], [262, 2, 1, "", "get_channel_types"], [262, 2, 1, "", "get_data"], [262, 2, 1, "", "get_montage"], [262, 2, 1, "", "get_peak"], [262, 2, 1, "", "interpolate_bads"], [262, 3, 1, "", "kind"], [262, 2, 1, "", "pick"], [262, 2, 1, "", "pick_channels"], [262, 2, 1, "", "pick_types"], [262, 2, 1, "", "plot"], [262, 2, 1, "", "plot_field"], [262, 2, 1, "", "plot_image"], [262, 2, 1, "", "plot_joint"], [262, 2, 1, "", "plot_projs_topomap"], [262, 2, 1, "", "plot_psd"], [262, 2, 1, "", "plot_psd_topo"], [262, 2, 1, "", "plot_psd_topomap"], [262, 2, 1, "", "plot_sensors"], [262, 2, 1, "", "plot_topo"], [262, 2, 1, "", "plot_topomap"], [262, 2, 1, "", "plot_white"], [262, 3, 1, "", "proj"], [262, 2, 1, "", "rename_channels"], [262, 2, 1, "", "reorder_channels"], [262, 2, 1, "", "resample"], [262, 2, 1, "", "save"], [262, 2, 1, "", "savgol_filter"], [262, 2, 1, "", "set_channel_types"], [262, 2, 1, "", "set_eeg_reference"], [262, 2, 1, "", "set_meas_date"], [262, 2, 1, "", "set_montage"], [262, 2, 1, "", "shift_time"], [262, 2, 1, "", "time_as_index"], [262, 3, 1, "", "times"], [262, 3, 1, "", "tmax"], [262, 3, 1, "", "tmin"], [262, 2, 1, "", "to_data_frame"]], "mne.EvokedArray": [[263, 2, 1, "", "__contains__"], [263, 2, 1, "", "__neg__"], [263, 2, 1, "", "add_channels"], [263, 2, 1, "", "add_proj"], [263, 2, 1, "", "add_reference_channels"], [263, 2, 1, "", "animate_topomap"], [263, 2, 1, "", "anonymize"], [263, 2, 1, "", "apply_baseline"], [263, 2, 1, "", "apply_function"], [263, 2, 1, "", "apply_hilbert"], [263, 2, 1, "", "apply_proj"], [263, 2, 1, "", "as_type"], [263, 3, 1, "", "ch_names"], [263, 3, 1, "", "compensation_grade"], [263, 2, 1, "", "compute_psd"], [263, 2, 1, "", "copy"], [263, 2, 1, "", "crop"], [263, 3, 1, "", "data"], [263, 2, 1, "", "decimate"], [263, 2, 1, "", "del_proj"], [263, 2, 1, "", "detrend"], [263, 2, 1, "", "drop_channels"], [263, 2, 1, "", "export"], [263, 2, 1, "", "filter"], [263, 2, 1, "", "get_channel_types"], [263, 2, 1, "", "get_data"], [263, 2, 1, "", "get_montage"], [263, 2, 1, "", "get_peak"], [263, 2, 1, "", "interpolate_bads"], [263, 3, 1, "", "kind"], [263, 2, 1, "", "pick"], [263, 2, 1, "", "pick_channels"], [263, 2, 1, "", "pick_types"], [263, 2, 1, "", "plot"], [263, 2, 1, "", "plot_field"], [263, 2, 1, "", "plot_image"], [263, 2, 1, "", "plot_joint"], [263, 2, 1, "", "plot_projs_topomap"], [263, 2, 1, "", "plot_psd"], [263, 2, 1, "", "plot_psd_topo"], [263, 2, 1, "", "plot_psd_topomap"], [263, 2, 1, "", "plot_sensors"], [263, 2, 1, "", "plot_topo"], [263, 2, 1, "", "plot_topomap"], [263, 2, 1, "", "plot_white"], [263, 3, 1, "", "proj"], [263, 2, 1, "", "rename_channels"], [263, 2, 1, "", "reorder_channels"], [263, 2, 1, "", "resample"], [263, 2, 1, "", "save"], [263, 2, 1, "", "savgol_filter"], [263, 2, 1, "", "set_channel_types"], [263, 2, 1, "", "set_eeg_reference"], [263, 2, 1, "", "set_meas_date"], [263, 2, 1, "", "set_montage"], [263, 2, 1, "", "shift_time"], [263, 2, 1, "", "time_as_index"], [263, 3, 1, "", "times"], [263, 3, 1, "", "tmax"], [263, 3, 1, "", "tmin"], [263, 2, 1, "", "to_data_frame"]], "mne.Forward": [[264, 2, 1, "", "copy"], [264, 2, 1, "", "pick_channels"]], "mne.Info": [[265, 2, 1, "", "__contains__"], [265, 2, 1, "", "__getitem__"], [265, 2, 1, "", "__iter__"], [265, 2, 1, "", "__len__"], [265, 2, 1, "", "clear"], [265, 3, 1, "", "compensation_grade"], [265, 2, 1, "", "copy"], [265, 2, 1, "", "fromkeys"], [265, 2, 1, "", "get"], [265, 2, 1, "", "get_channel_types"], [265, 2, 1, "", "get_montage"], [265, 2, 1, "", "items"], [265, 2, 1, "", "keys"], [265, 2, 1, "", "normalize_proj"], [265, 2, 1, "", "pop"], [265, 2, 1, "", "popitem"], [265, 2, 1, "", "set_montage"], [265, 2, 1, "", "setdefault"], [265, 2, 1, "", "update"], [265, 2, 1, "", "values"]], "mne.Label": [[266, 2, 1, "", "__add__"], [266, 2, 1, "", "__len__"], [266, 2, 1, "", "__sub__"], [266, 2, 1, "", "center_of_mass"], [266, 2, 1, "", "compute_area"], [266, 2, 1, "", "copy"], [266, 2, 1, "", "distances_to_outside"], [266, 2, 1, "", "fill"], [266, 2, 1, "", "get_tris"], [266, 2, 1, "", "get_vertices_used"], [266, 2, 1, "", "morph"], [266, 2, 1, "", "restrict"], [266, 2, 1, "", "save"], [266, 2, 1, "", "smooth"], [266, 2, 1, "", "split"]], "mne.MixedSourceEstimate": [[267, 2, 1, "", "__add__"], [267, 2, 1, "", "__div__"], [267, 2, 1, "", "__mul__"], [267, 2, 1, "", "__neg__"], [267, 2, 1, "", "__sub__"], [267, 2, 1, "", "apply_baseline"], [267, 2, 1, "", "bin"], [267, 2, 1, "", "copy"], [267, 2, 1, "", "crop"], [267, 3, 1, "", "data"], [267, 2, 1, "", "decimate"], [267, 2, 1, "", "extract_label_time_course"], [267, 2, 1, "", "get_peak"], [267, 2, 1, "", "mean"], [267, 2, 1, "", "plot"], [267, 2, 1, "", "resample"], [267, 2, 1, "", "save"], [267, 3, 1, "", "sfreq"], [267, 3, 1, "", "shape"], [267, 2, 1, "", "shift_time"], [267, 2, 1, "", "sqrt"], [267, 2, 1, "", "sum"], [267, 2, 1, "", "surface"], [267, 2, 1, "", "time_as_index"], [267, 3, 1, "", "times"], [267, 3, 1, "", "tmax"], [267, 3, 1, "", "tmin"], [267, 2, 1, "", "to_data_frame"], [267, 2, 1, "", "transform"], [267, 2, 1, "", "transform_data"], [267, 3, 1, "", "tstep"], [267, 2, 1, "", "volume"]], "mne.MixedVectorSourceEstimate": [[268, 2, 1, "", "__add__"], [268, 2, 1, "", "__div__"], [268, 2, 1, "", "__mul__"], [268, 2, 1, "", "__neg__"], [268, 2, 1, "", "__sub__"], [268, 2, 1, "", "apply_baseline"], [268, 2, 1, "", "bin"], [268, 2, 1, "", "copy"], [268, 2, 1, "", "crop"], [268, 3, 1, "", "data"], [268, 2, 1, "", "decimate"], [268, 2, 1, "", "extract_label_time_course"], [268, 2, 1, "", "get_peak"], [268, 2, 1, "", "magnitude"], [268, 2, 1, "", "mean"], [268, 2, 1, "", "plot"], [268, 2, 1, "", "project"], [268, 2, 1, "", "resample"], [268, 2, 1, "", "save"], [268, 3, 1, "", "sfreq"], [268, 3, 1, "", "shape"], [268, 2, 1, "", "shift_time"], [268, 2, 1, "", "sqrt"], [268, 2, 1, "", "sum"], [268, 2, 1, "", "surface"], [268, 2, 1, "", "time_as_index"], [268, 3, 1, "", "times"], [268, 3, 1, "", "tmax"], [268, 3, 1, "", "tmin"], [268, 2, 1, "", "to_data_frame"], [268, 2, 1, "", "transform"], [268, 2, 1, "", "transform_data"], [268, 3, 1, "", "tstep"], [268, 2, 1, "", "volume"]], "mne.Projection": [[269, 2, 1, "", "__contains__"], [269, 2, 1, "", "__getitem__"], [269, 2, 1, "", "__iter__"], [269, 2, 1, "", "__len__"], [269, 2, 1, "", "clear"], [269, 2, 1, "", "copy"], [269, 2, 1, "", "fromkeys"], [269, 2, 1, "", "get"], [269, 2, 1, "", "items"], [269, 2, 1, "", "keys"], [269, 2, 1, "", "plot_topomap"], [269, 2, 1, "", "pop"], [269, 2, 1, "", "popitem"], [269, 2, 1, "", "setdefault"], [269, 2, 1, "", "update"], [269, 2, 1, "", "values"]], "mne.Report": [[270, 2, 1, "", "__len__"], [270, 2, 1, "", "add_bem"], [270, 2, 1, "", "add_code"], [270, 2, 1, "", "add_covariance"], [270, 2, 1, "", "add_custom_css"], [270, 2, 1, "", "add_custom_js"], [270, 2, 1, "", "add_epochs"], [270, 2, 1, "", "add_events"], [270, 2, 1, "", "add_evokeds"], [270, 2, 1, "", "add_figure"], [270, 2, 1, "", "add_forward"], [270, 2, 1, "", "add_html"], [270, 2, 1, "", "add_ica"], [270, 2, 1, "", "add_image"], [270, 2, 1, "", "add_inverse_operator"], [270, 2, 1, "", "add_projs"], [270, 2, 1, "", "add_raw"], [270, 2, 1, "", "add_stc"], [270, 2, 1, "", "add_sys_info"], [270, 2, 1, "", "add_trans"], [270, 3, 1, "", "html"], [270, 2, 1, "", "parse_folder"], [270, 2, 1, "", "remove"], [270, 2, 1, "", "save"], [270, 3, 1, "", "tags"]], "mne.SourceEstimate": [[271, 2, 1, "", "__add__"], [271, 2, 1, "", "__div__"], [271, 2, 1, "", "__mul__"], [271, 2, 1, "", "__neg__"], [271, 2, 1, "", "__sub__"], [271, 2, 1, "", "apply_baseline"], [271, 2, 1, "", "bin"], [271, 2, 1, "", "center_of_mass"], [271, 2, 1, "", "copy"], [271, 2, 1, "", "crop"], [271, 3, 1, "", "data"], [271, 2, 1, "", "decimate"], [271, 2, 1, "", "estimate_snr"], [271, 2, 1, "", "expand"], [271, 2, 1, "", "extract_label_time_course"], [271, 2, 1, "", "get_peak"], [271, 2, 1, "", "in_label"], [271, 3, 1, "", "lh_data"], [271, 3, 1, "", "lh_vertno"], [271, 2, 1, "", "mean"], [271, 2, 1, "", "plot"], [271, 2, 1, "", "resample"], [271, 3, 1, "", "rh_data"], [271, 3, 1, "", "rh_vertno"], [271, 2, 1, "", "save"], [271, 3, 1, "", "sfreq"], [271, 3, 1, "", "shape"], [271, 2, 1, "", "shift_time"], [271, 2, 1, "", "sqrt"], [271, 2, 1, "", "sum"], [271, 2, 1, "", "time_as_index"], [271, 3, 1, "", "times"], [271, 3, 1, "", "tmax"], [271, 3, 1, "", "tmin"], [271, 2, 1, "", "to_data_frame"], [271, 2, 1, "", "to_original_src"], [271, 2, 1, "", "transform"], [271, 2, 1, "", "transform_data"], [271, 3, 1, "", "tstep"]], "mne.SourceMorph": [[272, 2, 1, "", "apply"], [272, 2, 1, "", "compute_vol_morph_mat"], [272, 2, 1, "", "save"]], "mne.SourceSpaces": [[273, 2, 1, "", "__add__"], [273, 2, 1, "", "__getitem__"], [273, 2, 1, "", "copy"], [273, 2, 1, "", "export_volume"], [273, 2, 1, "", "plot"], [273, 2, 1, "", "save"]], "mne.VectorSourceEstimate": [[274, 2, 1, "", "__add__"], [274, 2, 1, "", "__div__"], [274, 2, 1, "", "__mul__"], [274, 2, 1, "", "__neg__"], [274, 2, 1, "", "__sub__"], [274, 2, 1, "", "apply_baseline"], [274, 2, 1, "", "bin"], [274, 2, 1, "", "copy"], [274, 2, 1, "", "crop"], [274, 3, 1, "", "data"], [274, 2, 1, "", "decimate"], [274, 2, 1, "", "expand"], [274, 2, 1, "", "extract_label_time_course"], [274, 2, 1, "", "get_peak"], [274, 2, 1, "", "in_label"], [274, 3, 1, "", "lh_data"], [274, 3, 1, "", "lh_vertno"], [274, 2, 1, "", "magnitude"], [274, 2, 1, "", "mean"], [274, 2, 1, "", "plot"], [274, 2, 1, "", "project"], [274, 2, 1, "", "resample"], [274, 3, 1, "", "rh_data"], [274, 3, 1, "", "rh_vertno"], [274, 2, 1, "", "save"], [274, 3, 1, "", "sfreq"], [274, 3, 1, "", "shape"], [274, 2, 1, "", "shift_time"], [274, 2, 1, "", "sqrt"], [274, 2, 1, "", "sum"], [274, 2, 1, "", "time_as_index"], [274, 3, 1, "", "times"], [274, 3, 1, "", "tmax"], [274, 3, 1, "", "tmin"], [274, 2, 1, "", "to_data_frame"], [274, 2, 1, "", "to_original_src"], [274, 2, 1, "", "transform"], [274, 2, 1, "", "transform_data"], [274, 3, 1, "", "tstep"]], "mne.VolSourceEstimate": [[275, 2, 1, "", "__add__"], [275, 2, 1, "", "__div__"], [275, 2, 1, "", "__mul__"], [275, 2, 1, "", "__neg__"], [275, 2, 1, "", "__sub__"], [275, 2, 1, "", "apply_baseline"], [275, 2, 1, "", "as_volume"], [275, 2, 1, "", "bin"], [275, 2, 1, "", "copy"], [275, 2, 1, "", "crop"], [275, 3, 1, "", "data"], [275, 2, 1, "", "decimate"], [275, 2, 1, "", "extract_label_time_course"], [275, 2, 1, "", "get_peak"], [275, 2, 1, "", "in_label"], [275, 2, 1, "", "mean"], [275, 2, 1, "", "plot"], [275, 2, 1, "", "plot_3d"], [275, 2, 1, "", "resample"], [275, 2, 1, "", "save"], [275, 2, 1, "", "save_as_volume"], [275, 3, 1, "", "sfreq"], [275, 3, 1, "", "shape"], [275, 2, 1, "", "shift_time"], [275, 2, 1, "", "sqrt"], [275, 2, 1, "", "sum"], [275, 2, 1, "", "time_as_index"], [275, 3, 1, "", "times"], [275, 3, 1, "", "tmax"], [275, 3, 1, "", "tmin"], [275, 2, 1, "", "to_data_frame"], [275, 2, 1, "", "transform"], [275, 2, 1, "", "transform_data"], [275, 3, 1, "", "tstep"]], "mne.VolVectorSourceEstimate": [[276, 2, 1, "", "__add__"], [276, 2, 1, "", "__div__"], [276, 2, 1, "", "__mul__"], [276, 2, 1, "", "__neg__"], [276, 2, 1, "", "__sub__"], [276, 2, 1, "", "apply_baseline"], [276, 2, 1, "", "as_volume"], [276, 2, 1, "", "bin"], [276, 2, 1, "", "copy"], [276, 2, 1, "", "crop"], [276, 3, 1, "", "data"], [276, 2, 1, "", "decimate"], [276, 2, 1, "", "extract_label_time_course"], [276, 2, 1, "", "get_peak"], [276, 2, 1, "", "in_label"], [276, 2, 1, "", "magnitude"], [276, 2, 1, "", "mean"], [276, 2, 1, "", "plot"], [276, 2, 1, "", "plot_3d"], [276, 2, 1, "", "project"], [276, 2, 1, "", "resample"], [276, 2, 1, "", "save"], [276, 2, 1, "", "save_as_volume"], [276, 3, 1, "", "sfreq"], [276, 3, 1, "", "shape"], [276, 2, 1, "", "shift_time"], [276, 2, 1, "", "sqrt"], [276, 2, 1, "", "sum"], [276, 2, 1, "", "time_as_index"], [276, 3, 1, "", "times"], [276, 3, 1, "", "tmax"], [276, 3, 1, "", "tmin"], [276, 2, 1, "", "to_data_frame"], [276, 2, 1, "", "transform"], [276, 2, 1, "", "transform_data"], [276, 3, 1, "", "tstep"]], "mne.baseline": [[283, 4, 1, "", "rescale"]], "mne.beamformer": [[284, 1, 1, "", "Beamformer"], [285, 4, 1, "", "apply_dics"], [286, 4, 1, "", "apply_dics_csd"], [287, 4, 1, "", "apply_dics_epochs"], [288, 4, 1, "", "apply_lcmv"], [289, 4, 1, "", "apply_lcmv_cov"], [290, 4, 1, "", "apply_lcmv_epochs"], [291, 4, 1, "", "apply_lcmv_raw"], [292, 4, 1, "", "make_dics"], [293, 4, 1, "", "make_lcmv"], [294, 4, 1, "", "make_lcmv_resolution_matrix"], [295, 4, 1, "", "rap_music"], [296, 4, 1, "", "read_beamformer"]], "mne.beamformer.Beamformer": [[284, 2, 1, "", "__contains__"], [284, 2, 1, "", "__getitem__"], [284, 2, 1, "", "__iter__"], [284, 2, 1, "", "__len__"], [284, 2, 1, "", "clear"], [284, 2, 1, "", "copy"], [284, 2, 1, "", "fromkeys"], [284, 2, 1, "", "get"], [284, 2, 1, "", "items"], [284, 2, 1, "", "keys"], [284, 2, 1, "", "pop"], [284, 2, 1, "", "popitem"], [284, 2, 1, "", "save"], [284, 2, 1, "", "setdefault"], [284, 2, 1, "", "update"], [284, 2, 1, "", "values"]], "mne.bem": [[297, 1, 1, "", "ConductorModel"], [298, 4, 1, "", "convert_flash_mris"], [299, 4, 1, "", "distance_to_bem"], [300, 4, 1, "", "fit_sphere_to_headshape"], [301, 4, 1, "", "get_fitting_dig"], [302, 4, 1, "", "make_flash_bem"], [303, 4, 1, "", "make_scalp_surfaces"], [304, 4, 1, "", "make_watershed_bem"]], "mne.bem.ConductorModel": [[297, 2, 1, "", "__contains__"], [297, 2, 1, "", "__getitem__"], [297, 2, 1, "", "__iter__"], [297, 2, 1, "", "__len__"], [297, 2, 1, "", "clear"], [297, 2, 1, "", "copy"], [297, 2, 1, "", "fromkeys"], [297, 2, 1, "", "get"], [297, 2, 1, "", "items"], [297, 2, 1, "", "keys"], [297, 2, 1, "", "pop"], [297, 2, 1, "", "popitem"], [297, 3, 1, "", "radius"], [297, 2, 1, "", "setdefault"], [297, 2, 1, "", "update"], [297, 2, 1, "", "values"]], "mne.channels": [[307, 1, 1, "", "DigMontage"], [308, 1, 1, "", "Layout"], [309, 4, 1, "", "combine_channels"], [310, 4, 1, "", "compute_dev_head_t"], [311, 4, 1, "", "compute_native_head_t"], [312, 4, 1, "", "equalize_channels"], [313, 4, 1, "", "find_ch_adjacency"], [314, 4, 1, "", "find_layout"], [315, 4, 1, "", "fix_mag_coil_types"], [316, 4, 1, "", "generate_2d_layout"], [317, 4, 1, "", "get_builtin_ch_adjacencies"], [318, 4, 1, "", "get_builtin_montages"], [319, 4, 1, "", "make_1020_channel_selections"], [320, 4, 1, "", "make_dig_montage"], [321, 4, 1, "", "make_eeg_layout"], [322, 4, 1, "", "make_grid_layout"], [323, 4, 1, "", "make_standard_montage"], [324, 4, 1, "", "read_ch_adjacency"], [325, 4, 1, "", "read_custom_montage"], [326, 4, 1, "", "read_dig_captrak"], [327, 4, 1, "", "read_dig_dat"], [328, 4, 1, "", "read_dig_egi"], [329, 4, 1, "", "read_dig_fif"], [330, 4, 1, "", "read_dig_hpts"], [331, 4, 1, "", "read_dig_localite"], [332, 4, 1, "", "read_dig_polhemus_isotrak"], [333, 4, 1, "", "read_layout"], [334, 4, 1, "", "read_polhemus_fastscan"], [335, 4, 1, "", "rename_channels"]], "mne.channels.DigMontage": [[307, 2, 1, "", "__add__"], [307, 2, 1, "", "add_estimated_fiducials"], [307, 2, 1, "", "add_mni_fiducials"], [307, 2, 1, "", "apply_trans"], [307, 2, 1, "", "copy"], [307, 2, 1, "", "get_positions"], [307, 2, 1, "", "plot"], [307, 2, 1, "", "remove_fiducials"], [307, 2, 1, "", "rename_channels"], [307, 2, 1, "", "save"]], "mne.channels.Layout": [[308, 2, 1, "", "plot"], [308, 2, 1, "", "save"]], "mne.chpi": [[336, 4, 1, "", "compute_chpi_amplitudes"], [337, 4, 1, "", "compute_chpi_locs"], [338, 4, 1, "", "compute_chpi_snr"], [339, 4, 1, "", "compute_head_pos"], [340, 4, 1, "", "extract_chpi_locs_ctf"], [341, 4, 1, "", "extract_chpi_locs_kit"], [342, 4, 1, "", "filter_chpi"], [343, 4, 1, "", "get_active_chpi"], [344, 4, 1, "", "get_chpi_info"], [345, 4, 1, "", "head_pos_to_trans_rot_t"], [346, 4, 1, "", "read_head_pos"], [347, 4, 1, "", "write_head_pos"]], "mne.coreg": [[360, 1, 1, "", "Coregistration"], [361, 4, 1, "", "estimate_head_mri_t"], [362, 4, 1, "", "get_mni_fiducials"]], "mne.coreg.Coregistration": [[360, 2, 1, "", "compute_dig_mri_distances"], [360, 2, 1, "", "fit_fiducials"], [360, 2, 1, "", "fit_icp"], [360, 2, 1, "", "omit_head_shape_points"], [360, 2, 1, "", "reset"], [360, 3, 1, "", "scale"], [360, 2, 1, "", "set_fid_match"], [360, 2, 1, "", "set_grow_hair"], [360, 2, 1, "", "set_rotation"], [360, 2, 1, "", "set_scale"], [360, 2, 1, "", "set_scale_mode"], [360, 2, 1, "", "set_translation"], [360, 3, 1, "", "trans"]], "mne.cov": [[363, 4, 1, "", "compute_whitener"], [364, 4, 1, "", "prepare_noise_cov"], [365, 4, 1, "", "regularize"]], "mne.cuda": [[368, 4, 1, "", "get_cuda_memory"], [369, 4, 1, "", "init_cuda"], [370, 4, 1, "", "set_cuda_device"]], "mne.datasets.brainstorm.bst_auditory": [[371, 4, 1, "", "data_path"]], "mne.datasets.brainstorm.bst_raw": [[372, 4, 1, "", "data_path"]], "mne.datasets.brainstorm.bst_resting": [[373, 4, 1, "", "data_path"]], "mne.datasets.eegbci": [[374, 4, 1, "", "load_data"], [375, 4, 1, "", "standardize"]], "mne.datasets.epilepsy_ecog": [[376, 4, 1, "", "data_path"]], "mne.datasets.erp_core": [[377, 4, 1, "", "data_path"]], "mne.datasets": [[378, 4, 1, "", "fetch_aparc_sub_parcellation"], [379, 4, 1, "", "fetch_dataset"], [380, 4, 1, "", "fetch_fsaverage"], [381, 4, 1, "", "fetch_hcp_mmp_parcellation"], [382, 4, 1, "", "fetch_infant_template"], [383, 4, 1, "", "fetch_phantom"], [385, 4, 1, "", "has_dataset"]], "mne.datasets.fnirs_motor": [[384, 4, 1, "", "data_path"]], "mne.datasets.hf_sef": [[386, 4, 1, "", "data_path"]], "mne.datasets.kiloword": [[387, 4, 1, "", "data_path"]], "mne.datasets.limo": [[388, 4, 1, "", "load_data"]], "mne.datasets.misc": [[389, 4, 1, "", "data_path"]], "mne.datasets.mtrf": [[390, 4, 1, "", "data_path"]], "mne.datasets.multimodal": [[391, 4, 1, "", "data_path"]], "mne.datasets.opm": [[392, 4, 1, "", "data_path"]], "mne.datasets.phantom_4dbti": [[393, 4, 1, "", "data_path"]], "mne.datasets.refmeg_noise": [[394, 4, 1, "", "data_path"]], "mne.datasets.sample": [[395, 4, 1, "", "data_path"]], "mne.datasets.sleep_physionet.age": [[396, 4, 1, "", "fetch_data"]], "mne.datasets.sleep_physionet.temazepam": [[397, 4, 1, "", "fetch_data"]], "mne.datasets.somato": [[398, 4, 1, "", "data_path"]], "mne.datasets.spm_face": [[399, 4, 1, "", "data_path"]], "mne.datasets.ssvep": [[400, 4, 1, "", "data_path"]], "mne.datasets.visual_92_categories": [[401, 4, 1, "", "data_path"]], "mne.decoding": [[403, 1, 1, "", "CSP"], [404, 1, 1, "", "EMS"], [405, 1, 1, "", "FilterEstimator"], [406, 1, 1, "", "GeneralizingEstimator"], [407, 1, 1, "", "LinearModel"], [408, 1, 1, "", "PSDEstimator"], [409, 1, 1, "", "ReceptiveField"], [410, 1, 1, "", "SPoC"], [411, 1, 1, "", "SSD"], [412, 1, 1, "", "Scaler"], [413, 1, 1, "", "SlidingEstimator"], [414, 1, 1, "", "TemporalFilter"], [415, 1, 1, "", "TimeDelayingRidge"], [416, 1, 1, "", "TimeFrequency"], [417, 1, 1, "", "UnsupervisedSpatialFilter"], [418, 1, 1, "", "Vectorizer"], [419, 4, 1, "", "compute_ems"], [420, 4, 1, "", "cross_val_multiscore"], [421, 4, 1, "", "get_coef"]], "mne.decoding.CSP": [[403, 2, 1, "", "fit"], [403, 2, 1, "", "fit_transform"], [403, 2, 1, "", "get_params"], [403, 2, 1, "", "plot_filters"], [403, 2, 1, "", "plot_patterns"], [403, 2, 1, "", "set_params"], [403, 2, 1, "", "transform"]], "mne.decoding.EMS": [[404, 2, 1, "", "fit"], [404, 2, 1, "", "fit_transform"], [404, 2, 1, "", "get_params"], [404, 2, 1, "", "set_params"], [404, 2, 1, "", "transform"]], "mne.decoding.FilterEstimator": [[405, 2, 1, "", "fit"], [405, 2, 1, "", "fit_transform"], [405, 2, 1, "", "transform"]], "mne.decoding.GeneralizingEstimator": [[406, 2, 1, "", "decision_function"], [406, 2, 1, "", "fit"], [406, 2, 1, "", "fit_transform"], [406, 2, 1, "", "get_params"], [406, 2, 1, "", "predict"], [406, 2, 1, "", "predict_proba"], [406, 2, 1, "", "score"], [406, 2, 1, "", "set_params"], [406, 2, 1, "", "transform"]], "mne.decoding.LinearModel": [[407, 2, 1, "", "decision_function"], [407, 2, 1, "", "fit"], [407, 2, 1, "", "fit_transform"], [407, 2, 1, "", "get_params"], [407, 2, 1, "", "predict"], [407, 2, 1, "", "predict_proba"], [407, 2, 1, "", "score"], [407, 2, 1, "", "set_params"], [407, 2, 1, "", "transform"]], "mne.decoding.PSDEstimator": [[408, 2, 1, "", "fit"], [408, 2, 1, "", "fit_transform"], [408, 2, 1, "", "transform"]], "mne.decoding.ReceptiveField": [[409, 2, 1, "", "fit"], [409, 2, 1, "", "get_params"], [409, 2, 1, "", "predict"], [409, 2, 1, "", "score"], [409, 2, 1, "", "set_params"]], "mne.decoding.SPoC": [[410, 2, 1, "", "fit"], [410, 2, 1, "", "fit_transform"], [410, 2, 1, "", "get_params"], [410, 2, 1, "", "plot_filters"], [410, 2, 1, "", "plot_patterns"], [410, 2, 1, "", "set_params"], [410, 2, 1, "", "transform"]], "mne.decoding.SSD": [[411, 2, 1, "", "apply"], [411, 2, 1, "", "fit"], [411, 2, 1, "", "fit_transform"], [411, 2, 1, "", "get_params"], [411, 2, 1, "", "get_spectral_ratio"], [411, 2, 1, "", "inverse_transform"], [411, 2, 1, "", "set_params"], [411, 2, 1, "", "transform"]], "mne.decoding.Scaler": [[412, 2, 1, "", "fit"], [412, 2, 1, "", "fit_transform"], [412, 2, 1, "", "get_params"], [412, 2, 1, "", "inverse_transform"], [412, 2, 1, "", "set_params"], [412, 2, 1, "", "transform"]], "mne.decoding.SlidingEstimator": [[413, 2, 1, "", "decision_function"], [413, 2, 1, "", "fit"], [413, 2, 1, "", "fit_transform"], [413, 2, 1, "", "get_params"], [413, 2, 1, "", "predict"], [413, 2, 1, "", "predict_proba"], [413, 2, 1, "", "score"], [413, 2, 1, "", "set_params"], [413, 2, 1, "", "transform"]], "mne.decoding.TemporalFilter": [[414, 2, 1, "", "fit"], [414, 2, 1, "", "fit_transform"], [414, 2, 1, "", "transform"]], "mne.decoding.TimeDelayingRidge": [[415, 2, 1, "", "fit"], [415, 2, 1, "", "get_params"], [415, 2, 1, "", "predict"], [415, 2, 1, "", "set_params"]], "mne.decoding.TimeFrequency": [[416, 2, 1, "", "fit"], [416, 2, 1, "", "fit_transform"], [416, 2, 1, "", "get_params"], [416, 2, 1, "", "set_params"], [416, 2, 1, "", "transform"]], "mne.decoding.UnsupervisedSpatialFilter": [[417, 2, 1, "", "fit"], [417, 2, 1, "", "fit_transform"], [417, 2, 1, "", "get_params"], [417, 2, 1, "", "inverse_transform"], [417, 2, 1, "", "set_params"], [417, 2, 1, "", "transform"]], "mne.decoding.Vectorizer": [[418, 2, 1, "", "fit"], [418, 2, 1, "", "fit_transform"], [418, 2, 1, "", "inverse_transform"], [418, 2, 1, "", "transform"]], "mne.dipole": [[423, 4, 1, "", "get_phantom_dipoles"]], "mne.epochs": [[424, 4, 1, "", "average_movements"], [425, 4, 1, "", "combine_event_ids"], [426, 4, 1, "", "equalize_epoch_counts"], [427, 4, 1, "", "make_metadata"]], "mne.event": [[429, 4, 1, "", "define_target_events"], [430, 4, 1, "", "match_event_names"], [431, 4, 1, "", "shift_time_events"]], "mne.export": [[433, 4, 1, "", "export_epochs"], [434, 4, 1, "", "export_evokeds"], [435, 4, 1, "", "export_evokeds_mff"], [436, 4, 1, "", "export_raw"]], "mne.filter": [[438, 4, 1, "", "construct_iir_filter"], [439, 4, 1, "", "create_filter"], [440, 4, 1, "", "estimate_ringing_samples"], [441, 4, 1, "", "filter_data"], [442, 4, 1, "", "notch_filter"], [443, 4, 1, "", "resample"]], "mne.forward": [[447, 4, 1, "", "compute_depth_prior"], [448, 4, 1, "", "compute_orient_prior"], [449, 4, 1, "", "restrict_forward_to_label"], [450, 4, 1, "", "restrict_forward_to_stc"]], "mne.gui": [[462, 4, 1, "", "coregistration"], [463, 4, 1, "", "locate_ieeg"]], "mne.inverse_sparse": [[466, 4, 1, "", "gamma_map"], [467, 4, 1, "", "make_stc_from_dipoles"], [468, 4, 1, "", "mixed_norm"], [469, 4, 1, "", "tf_mixed_norm"]], "mne.io": [[470, 1, 1, "", "BaseRaw"], [471, 1, 1, "", "Raw"], [472, 1, 1, "", "RawArray"], [473, 4, 1, "", "anonymize_info"], [862, 0, 0, "-", "kit"], [475, 4, 1, "", "read_fiducials"], [476, 4, 1, "", "read_info"], [477, 4, 1, "", "read_raw"], [478, 4, 1, "", "read_raw_artemis123"], [479, 4, 1, "", "read_raw_bdf"], [480, 4, 1, "", "read_raw_boxy"], [481, 4, 1, "", "read_raw_brainvision"], [482, 4, 1, "", "read_raw_bti"], [483, 4, 1, "", "read_raw_cnt"], [484, 4, 1, "", "read_raw_ctf"], [485, 4, 1, "", "read_raw_curry"], [486, 4, 1, "", "read_raw_edf"], [487, 4, 1, "", "read_raw_eeglab"], [488, 4, 1, "", "read_raw_egi"], [489, 4, 1, "", "read_raw_eximia"], [490, 4, 1, "", "read_raw_fieldtrip"], [491, 4, 1, "", "read_raw_fif"], [492, 4, 1, "", "read_raw_gdf"], [493, 4, 1, "", "read_raw_hitachi"], [494, 4, 1, "", "read_raw_kit"], [495, 4, 1, "", "read_raw_nedf"], [496, 4, 1, "", "read_raw_nicolet"], [497, 4, 1, "", "read_raw_nihon"], [498, 4, 1, "", "read_raw_nirx"], [499, 4, 1, "", "read_raw_persyst"], [500, 4, 1, "", "read_raw_snirf"], [501, 4, 1, "", "show_fiff"], [502, 4, 1, "", "write_fiducials"]], "mne.io.BaseRaw": [[470, 2, 1, "", "__contains__"], [470, 2, 1, "", "__getitem__"], [470, 2, 1, "", "__len__"], [470, 2, 1, "", "add_channels"], [470, 2, 1, "", "add_events"], [470, 2, 1, "", "add_proj"], [470, 2, 1, "", "add_reference_channels"], [470, 3, 1, "", "annotations"], [470, 2, 1, "", "anonymize"], [470, 2, 1, "", "append"], [470, 2, 1, "", "apply_function"], [470, 2, 1, "", "apply_gradient_compensation"], [470, 2, 1, "", "apply_hilbert"], [470, 2, 1, "", "apply_proj"], [470, 3, 1, "", "ch_names"], [470, 2, 1, "", "close"], [470, 3, 1, "", "compensation_grade"], [470, 2, 1, "", "compute_psd"], [470, 2, 1, "", "copy"], [470, 2, 1, "", "crop"], [470, 2, 1, "", "crop_by_annotations"], [470, 2, 1, "", "decimate"], [470, 2, 1, "", "del_proj"], [470, 2, 1, "", "describe"], [470, 2, 1, "", "drop_channels"], [470, 2, 1, "", "export"], [470, 3, 1, "", "filenames"], [470, 2, 1, "", "filter"], [470, 3, 1, "", "first_samp"], [470, 3, 1, "", "first_time"], [470, 2, 1, "", "get_channel_types"], [470, 2, 1, "", "get_data"], [470, 2, 1, "", "get_montage"], [470, 2, 1, "", "interpolate_bads"], [470, 3, 1, "", "last_samp"], [470, 2, 1, "", "load_bad_channels"], [470, 2, 1, "", "load_data"], [470, 3, 1, "", "n_times"], [470, 2, 1, "", "notch_filter"], [470, 2, 1, "", "pick"], [470, 2, 1, "", "pick_channels"], [470, 2, 1, "", "pick_types"], [470, 2, 1, "", "plot"], [470, 2, 1, "", "plot_projs_topomap"], [470, 2, 1, "", "plot_psd"], [470, 2, 1, "", "plot_psd_topo"], [470, 2, 1, "", "plot_psd_topomap"], [470, 2, 1, "", "plot_sensors"], [470, 3, 1, "", "proj"], [470, 2, 1, "", "rename_channels"], [470, 2, 1, "", "reorder_channels"], [470, 2, 1, "", "resample"], [470, 2, 1, "", "save"], [470, 2, 1, "", "savgol_filter"], [470, 2, 1, "", "set_annotations"], [470, 2, 1, "", "set_channel_types"], [470, 2, 1, "", "set_eeg_reference"], [470, 2, 1, "", "set_meas_date"], [470, 2, 1, "", "set_montage"], [470, 2, 1, "", "shift_time"], [470, 2, 1, "", "time_as_index"], [470, 3, 1, "", "times"], [470, 3, 1, "", "tmax"], [470, 3, 1, "", "tmin"], [470, 2, 1, "", "to_data_frame"]], "mne.io.Raw": [[471, 2, 1, "", "__contains__"], [471, 2, 1, "", "__getitem__"], [471, 2, 1, "", "__len__"], [471, 3, 1, "", "acqparser"], [471, 2, 1, "", "add_channels"], [471, 2, 1, "", "add_events"], [471, 2, 1, "", "add_proj"], [471, 2, 1, "", "add_reference_channels"], [471, 3, 1, "", "annotations"], [471, 2, 1, "", "anonymize"], [471, 2, 1, "", "append"], [471, 2, 1, "", "apply_function"], [471, 2, 1, "", "apply_gradient_compensation"], [471, 2, 1, "", "apply_hilbert"], [471, 2, 1, "", "apply_proj"], [471, 3, 1, "", "ch_names"], [471, 2, 1, "", "close"], [471, 3, 1, "", "compensation_grade"], [471, 2, 1, "", "compute_psd"], [471, 2, 1, "", "copy"], [471, 2, 1, "", "crop"], [471, 2, 1, "", "crop_by_annotations"], [471, 2, 1, "", "decimate"], [471, 2, 1, "", "del_proj"], [471, 2, 1, "", "describe"], [471, 2, 1, "", "drop_channels"], [471, 2, 1, "", "export"], [471, 3, 1, "", "filenames"], [471, 2, 1, "", "filter"], [471, 3, 1, "", "first_samp"], [471, 3, 1, "", "first_time"], [471, 2, 1, "", "fix_mag_coil_types"], [471, 2, 1, "", "get_channel_types"], [471, 2, 1, "", "get_data"], [471, 2, 1, "", "get_montage"], [471, 2, 1, "", "interpolate_bads"], [471, 3, 1, "", "last_samp"], [471, 2, 1, "", "load_bad_channels"], [471, 2, 1, "", "load_data"], [471, 3, 1, "", "n_times"], [471, 2, 1, "", "notch_filter"], [471, 2, 1, "", "pick"], [471, 2, 1, "", "pick_channels"], [471, 2, 1, "", "pick_types"], [471, 2, 1, "", "plot"], [471, 2, 1, "", "plot_projs_topomap"], [471, 2, 1, "", "plot_psd"], [471, 2, 1, "", "plot_psd_topo"], [471, 2, 1, "", "plot_psd_topomap"], [471, 2, 1, "", "plot_sensors"], [471, 3, 1, "", "proj"], [471, 2, 1, "", "rename_channels"], [471, 2, 1, "", "reorder_channels"], [471, 2, 1, "", "resample"], [471, 2, 1, "", "save"], [471, 2, 1, "", "savgol_filter"], [471, 2, 1, "", "set_annotations"], [471, 2, 1, "", "set_channel_types"], [471, 2, 1, "", "set_eeg_reference"], [471, 2, 1, "", "set_meas_date"], [471, 2, 1, "", "set_montage"], [471, 2, 1, "", "shift_time"], [471, 2, 1, "", "time_as_index"], [471, 3, 1, "", "times"], [471, 3, 1, "", "tmax"], [471, 3, 1, "", "tmin"], [471, 2, 1, "", "to_data_frame"]], "mne.io.RawArray": [[472, 2, 1, "", "__contains__"], [472, 2, 1, "", "__getitem__"], [472, 2, 1, "", "__len__"], [472, 2, 1, "", "add_channels"], [472, 2, 1, "", "add_events"], [472, 2, 1, "", "add_proj"], [472, 2, 1, "", "add_reference_channels"], [472, 3, 1, "", "annotations"], [472, 2, 1, "", "anonymize"], [472, 2, 1, "", "append"], [472, 2, 1, "", "apply_function"], [472, 2, 1, "", "apply_gradient_compensation"], [472, 2, 1, "", "apply_hilbert"], [472, 2, 1, "", "apply_proj"], [472, 3, 1, "", "ch_names"], [472, 2, 1, "", "close"], [472, 3, 1, "", "compensation_grade"], [472, 2, 1, "", "compute_psd"], [472, 2, 1, "", "copy"], [472, 2, 1, "", "crop"], [472, 2, 1, "", "crop_by_annotations"], [472, 2, 1, "", "decimate"], [472, 2, 1, "", "del_proj"], [472, 2, 1, "", "describe"], [472, 2, 1, "", "drop_channels"], [472, 2, 1, "", "export"], [472, 3, 1, "", "filenames"], [472, 2, 1, "", "filter"], [472, 3, 1, "", "first_samp"], [472, 3, 1, "", "first_time"], [472, 2, 1, "", "get_channel_types"], [472, 2, 1, "", "get_data"], [472, 2, 1, "", "get_montage"], [472, 2, 1, "", "interpolate_bads"], [472, 3, 1, "", "last_samp"], [472, 2, 1, "", "load_bad_channels"], [472, 2, 1, "", "load_data"], [472, 3, 1, "", "n_times"], [472, 2, 1, "", "notch_filter"], [472, 2, 1, "", "pick"], [472, 2, 1, "", "pick_channels"], [472, 2, 1, "", "pick_types"], [472, 2, 1, "", "plot"], [472, 2, 1, "", "plot_projs_topomap"], [472, 2, 1, "", "plot_psd"], [472, 2, 1, "", "plot_psd_topo"], [472, 2, 1, "", "plot_psd_topomap"], [472, 2, 1, "", "plot_sensors"], [472, 3, 1, "", "proj"], [472, 2, 1, "", "rename_channels"], [472, 2, 1, "", "reorder_channels"], [472, 2, 1, "", "resample"], [472, 2, 1, "", "save"], [472, 2, 1, "", "savgol_filter"], [472, 2, 1, "", "set_annotations"], [472, 2, 1, "", "set_channel_types"], [472, 2, 1, "", "set_eeg_reference"], [472, 2, 1, "", "set_meas_date"], [472, 2, 1, "", "set_montage"], [472, 2, 1, "", "shift_time"], [472, 2, 1, "", "time_as_index"], [472, 3, 1, "", "times"], [472, 3, 1, "", "tmax"], [472, 3, 1, "", "tmin"], [472, 2, 1, "", "to_data_frame"]], "mne.io.kit": [[474, 4, 1, "", "read_mrk"]], "mne.label": [[503, 4, 1, "", "select_sources"]], "mne.minimum_norm": [[516, 1, 1, "", "InverseOperator"], [517, 4, 1, "", "apply_inverse"], [518, 4, 1, "", "apply_inverse_cov"], [519, 4, 1, "", "apply_inverse_epochs"], [520, 4, 1, "", "apply_inverse_raw"], [521, 4, 1, "", "apply_inverse_tfr_epochs"], [522, 4, 1, "", "compute_rank_inverse"], [523, 4, 1, "", "compute_source_psd"], [524, 4, 1, "", "compute_source_psd_epochs"], [525, 4, 1, "", "estimate_snr"], [526, 4, 1, "", "get_cross_talk"], [527, 4, 1, "", "get_point_spread"], [528, 4, 1, "", "make_inverse_operator"], [529, 4, 1, "", "make_inverse_resolution_matrix"], [530, 4, 1, "", "prepare_inverse_operator"], [531, 4, 1, "", "read_inverse_operator"], [532, 4, 1, "", "resolution_metrics"], [533, 4, 1, "", "source_band_induced_power"], [534, 4, 1, "", "source_induced_power"], [535, 4, 1, "", "write_inverse_operator"]], "mne.minimum_norm.InverseOperator": [[516, 2, 1, "", "__contains__"], [516, 2, 1, "", "__getitem__"], [516, 2, 1, "", "__iter__"], [516, 2, 1, "", "__len__"], [516, 2, 1, "", "clear"], [516, 2, 1, "", "copy"], [516, 2, 1, "", "fromkeys"], [516, 2, 1, "", "get"], [516, 2, 1, "", "items"], [516, 2, 1, "", "keys"], [516, 2, 1, "", "pop"], [516, 2, 1, "", "popitem"], [516, 2, 1, "", "setdefault"], [516, 2, 1, "", "update"], [516, 2, 1, "", "values"]], "mne.preprocessing": [[549, 1, 1, "", "EOGRegression"], [550, 1, 1, "", "ICA"], [551, 1, 1, "", "Xdawn"], [552, 4, 1, "", "annotate_amplitude"], [553, 4, 1, "", "annotate_break"], [554, 4, 1, "", "annotate_movement"], [555, 4, 1, "", "annotate_muscle_zscore"], [556, 4, 1, "", "annotate_nan"], [557, 4, 1, "", "compute_average_dev_head_t"], [558, 4, 1, "", "compute_bridged_electrodes"], [559, 4, 1, "", "compute_current_source_density"], [560, 4, 1, "", "compute_fine_calibration"], [561, 4, 1, "", "compute_maxwell_basis"], [562, 4, 1, "", "compute_proj_ecg"], [563, 4, 1, "", "compute_proj_eog"], [564, 4, 1, "", "corrmap"], [565, 4, 1, "", "cortical_signal_suppression"], [566, 4, 1, "", "create_ecg_epochs"], [567, 4, 1, "", "create_eog_epochs"], [568, 4, 1, "", "equalize_bads"], [569, 4, 1, "", "find_bad_channels_maxwell"], [570, 4, 1, "", "find_ecg_events"], [571, 4, 1, "", "find_eog_events"], [572, 4, 1, "", "fix_stim_artifact"], [573, 4, 1, "", "ica_find_ecg_events"], [574, 4, 1, "", "ica_find_eog_events"], [860, 0, 0, "-", "ieeg"], [576, 4, 1, "", "infomax"], [577, 4, 1, "", "interpolate_bridged_electrodes"], [578, 4, 1, "", "maxwell_filter"], [579, 4, 1, "", "maxwell_filter_prepare_emptyroom"], [860, 0, 0, "-", "nirs"], [586, 4, 1, "", "oversampled_temporal_projection"], [587, 4, 1, "", "peak_finder"], [588, 4, 1, "", "read_eog_regression"], [589, 4, 1, "", "read_fine_calibration"], [590, 4, 1, "", "read_ica"], [591, 4, 1, "", "read_ica_eeglab"], [592, 4, 1, "", "realign_raw"], [593, 4, 1, "", "regress_artifact"], [594, 4, 1, "", "write_fine_calibration"]], "mne.preprocessing.EOGRegression": [[549, 2, 1, "", "apply"], [549, 2, 1, "", "fit"], [549, 2, 1, "", "plot"], [549, 2, 1, "", "save"]], "mne.preprocessing.ICA": [[550, 2, 1, "", "__contains__"], [550, 2, 1, "", "apply"], [550, 3, 1, "", "compensation_grade"], [550, 2, 1, "", "copy"], [550, 2, 1, "", "find_bads_ecg"], [550, 2, 1, "", "find_bads_eog"], [550, 2, 1, "", "find_bads_muscle"], [550, 2, 1, "", "find_bads_ref"], [550, 2, 1, "", "fit"], [550, 2, 1, "", "get_channel_types"], [550, 2, 1, "", "get_components"], [550, 2, 1, "", "get_explained_variance_ratio"], [550, 2, 1, "", "get_sources"], [550, 2, 1, "", "plot_components"], [550, 2, 1, "", "plot_overlay"], [550, 2, 1, "", "plot_properties"], [550, 2, 1, "", "plot_scores"], [550, 2, 1, "", "plot_sources"], [550, 2, 1, "", "save"], [550, 2, 1, "", "score_sources"]], "mne.preprocessing.Xdawn": [[551, 2, 1, "", "apply"], [551, 2, 1, "", "fit"], [551, 2, 1, "", "fit_transform"], [551, 2, 1, "", "get_params"], [551, 2, 1, "", "inverse_transform"], [551, 2, 1, "", "set_params"], [551, 2, 1, "", "transform"]], "mne.preprocessing.ieeg": [[575, 4, 1, "", "project_sensors_onto_brain"]], "mne.preprocessing.nirs": [[580, 4, 1, "", "beer_lambert_law"], [581, 4, 1, "", "optical_density"], [582, 4, 1, "", "scalp_coupling_index"], [583, 4, 1, "", "short_channels"], [584, 4, 1, "", "source_detector_distances"], [585, 4, 1, "", "temporal_derivative_distribution_repair"]], "mne.simulation": [[640, 1, 1, "", "SourceSimulator"], [641, 4, 1, "", "add_chpi"], [642, 4, 1, "", "add_ecg"], [643, 4, 1, "", "add_eog"], [644, 4, 1, "", "add_noise"], [866, 0, 0, "-", "metrics"], [653, 4, 1, "", "select_source_in_label"], [654, 4, 1, "", "simulate_evoked"], [655, 4, 1, "", "simulate_raw"], [656, 4, 1, "", "simulate_sparse_stc"], [657, 4, 1, "", "simulate_stc"]], "mne.simulation.SourceSimulator": [[640, 2, 1, "", "__iter__"], [640, 2, 1, "", "add_data"], [640, 3, 1, "", "duration"], [640, 2, 1, "", "get_stc"], [640, 2, 1, "", "get_stim_channel"], [640, 3, 1, "", "n_times"]], "mne.simulation.metrics": [[645, 4, 1, "", "cosine_score"], [646, 4, 1, "", "f1_score"], [647, 4, 1, "", "peak_position_error"], [648, 4, 1, "", "precision_score"], [649, 4, 1, "", "recall_score"], [650, 4, 1, "", "region_localization_error"], [651, 4, 1, "", "roc_auc_score"], [652, 4, 1, "", "spatial_deviation_error"]], "mne.source_space": [[658, 4, 1, "", "compute_distance_to_sensors"], [659, 4, 1, "", "get_decimated_surfaces"]], "mne.stats": [[668, 4, 1, "", "bonferroni_correction"], [669, 4, 1, "", "bootstrap_confidence_interval"], [670, 4, 1, "", "combine_adjacency"], [671, 4, 1, "", "f_mway_rm"], [672, 4, 1, "", "f_oneway"], [673, 4, 1, "", "f_threshold_mway_rm"], [674, 4, 1, "", "fdr_correction"], [675, 4, 1, "", "linear_regression"], [676, 4, 1, "", "linear_regression_raw"], [677, 4, 1, "", "permutation_cluster_1samp_test"], [678, 4, 1, "", "permutation_cluster_test"], [679, 4, 1, "", "permutation_t_test"], [680, 4, 1, "", "spatio_temporal_cluster_1samp_test"], [681, 4, 1, "", "spatio_temporal_cluster_test"], [682, 4, 1, "", "summarize_clusters_stc"], [683, 4, 1, "", "ttest_1samp_no_p"], [684, 4, 1, "", "ttest_ind_no_p"]], "mne.surface": [[687, 4, 1, "", "complete_surface_info"], [688, 4, 1, "", "read_curvature"]], "mne.time_frequency": [[690, 1, 1, "", "AverageTFR"], [691, 1, 1, "", "CrossSpectralDensity"], [692, 1, 1, "", "EpochsSpectrum"], [693, 1, 1, "", "EpochsTFR"], [694, 1, 1, "", "Spectrum"], [695, 4, 1, "", "csd_array_fourier"], [696, 4, 1, "", "csd_array_morlet"], [697, 4, 1, "", "csd_array_multitaper"], [698, 4, 1, "", "csd_fourier"], [699, 4, 1, "", "csd_morlet"], [700, 4, 1, "", "csd_multitaper"], [701, 4, 1, "", "csd_tfr"], [702, 4, 1, "", "dpss_windows"], [703, 4, 1, "", "fit_iir_model_raw"], [704, 4, 1, "", "istft"], [705, 4, 1, "", "morlet"], [706, 4, 1, "", "pick_channels_csd"], [707, 4, 1, "", "psd_array_multitaper"], [708, 4, 1, "", "psd_array_welch"], [709, 4, 1, "", "psd_multitaper"], [710, 4, 1, "", "psd_welch"], [711, 4, 1, "", "read_csd"], [712, 4, 1, "", "read_spectrum"], [713, 4, 1, "", "read_tfrs"], [714, 4, 1, "", "stft"], [715, 4, 1, "", "stftfreq"], [869, 0, 0, "-", "tfr"], [718, 4, 1, "", "tfr_array_morlet"], [719, 4, 1, "", "tfr_array_multitaper"], [720, 4, 1, "", "tfr_array_stockwell"], [721, 4, 1, "", "tfr_morlet"], [722, 4, 1, "", "tfr_multitaper"], [723, 4, 1, "", "tfr_stockwell"], [724, 4, 1, "", "write_tfrs"]], "mne.time_frequency.AverageTFR": [[690, 2, 1, "", "__add__"], [690, 2, 1, "", "__contains__"], [690, 2, 1, "", "__mul__"], [690, 2, 1, "", "__sub__"], [690, 2, 1, "", "add_channels"], [690, 2, 1, "", "add_reference_channels"], [690, 2, 1, "", "apply_baseline"], [690, 3, 1, "", "ch_names"], [690, 3, 1, "", "compensation_grade"], [690, 2, 1, "", "copy"], [690, 2, 1, "", "crop"], [690, 2, 1, "", "decimate"], [690, 2, 1, "", "drop_channels"], [690, 2, 1, "", "get_channel_types"], [690, 2, 1, "", "pick"], [690, 2, 1, "", "pick_channels"], [690, 2, 1, "", "pick_types"], [690, 2, 1, "", "plot"], [690, 2, 1, "", "plot_joint"], [690, 2, 1, "", "plot_topo"], [690, 2, 1, "", "plot_topomap"], [690, 2, 1, "", "reorder_channels"], [690, 2, 1, "", "save"], [690, 2, 1, "", "shift_time"], [690, 2, 1, "", "time_as_index"], [690, 3, 1, "", "times"], [690, 3, 1, "", "tmax"], [690, 3, 1, "", "tmin"], [690, 2, 1, "", "to_data_frame"]], "mne.time_frequency.CrossSpectralDensity": [[691, 2, 1, "", "__getitem__"], [691, 2, 1, "", "__len__"], [691, 2, 1, "", "copy"], [691, 2, 1, "", "get_data"], [691, 2, 1, "", "mean"], [691, 3, 1, "", "n_channels"], [691, 2, 1, "", "pick_channels"], [691, 2, 1, "", "pick_frequency"], [691, 2, 1, "", "plot"], [691, 2, 1, "", "save"], [691, 2, 1, "", "sum"]], "mne.time_frequency.EpochsSpectrum": [[692, 2, 1, "", "__contains__"], [692, 2, 1, "", "__getitem__"], [692, 2, 1, "", "__iter__"], [692, 2, 1, "", "__len__"], [692, 2, 1, "", "add_channels"], [692, 2, 1, "", "add_reference_channels"], [692, 2, 1, "", "average"], [692, 3, 1, "", "compensation_grade"], [692, 2, 1, "", "copy"], [692, 2, 1, "", "drop_channels"], [692, 2, 1, "", "get_channel_types"], [692, 2, 1, "", "get_data"], [692, 3, 1, "", "metadata"], [692, 2, 1, "", "next"], [692, 2, 1, "", "pick"], [692, 2, 1, "", "pick_channels"], [692, 2, 1, "", "pick_types"], [692, 2, 1, "", "plot"], [692, 2, 1, "", "plot_topo"], [692, 2, 1, "", "plot_topomap"], [692, 2, 1, "", "reorder_channels"], [692, 2, 1, "", "save"], [692, 2, 1, "", "to_data_frame"], [692, 2, 1, "", "units"]], "mne.time_frequency.EpochsTFR": [[693, 2, 1, "", "__contains__"], [693, 2, 1, "", "__getitem__"], [693, 2, 1, "", "__iter__"], [693, 2, 1, "", "__len__"], [693, 2, 1, "", "add_channels"], [693, 2, 1, "", "add_reference_channels"], [693, 2, 1, "", "apply_baseline"], [693, 2, 1, "", "average"], [693, 3, 1, "", "ch_names"], [693, 3, 1, "", "compensation_grade"], [693, 2, 1, "", "copy"], [693, 2, 1, "", "crop"], [693, 2, 1, "", "decimate"], [693, 2, 1, "", "drop_channels"], [693, 2, 1, "", "get_channel_types"], [693, 3, 1, "", "metadata"], [693, 2, 1, "", "next"], [693, 2, 1, "", "pick"], [693, 2, 1, "", "pick_channels"], [693, 2, 1, "", "pick_types"], [693, 2, 1, "", "reorder_channels"], [693, 2, 1, "", "save"], [693, 2, 1, "", "shift_time"], [693, 2, 1, "", "time_as_index"], [693, 3, 1, "", "times"], [693, 3, 1, "", "tmax"], [693, 3, 1, "", "tmin"], [693, 2, 1, "", "to_data_frame"]], "mne.time_frequency.Spectrum": [[694, 2, 1, "", "__contains__"], [694, 2, 1, "", "__getitem__"], [694, 2, 1, "", "add_channels"], [694, 2, 1, "", "add_reference_channels"], [694, 3, 1, "", "compensation_grade"], [694, 2, 1, "", "copy"], [694, 2, 1, "", "drop_channels"], [694, 2, 1, "", "get_channel_types"], [694, 2, 1, "", "get_data"], [694, 2, 1, "", "pick"], [694, 2, 1, "", "pick_channels"], [694, 2, 1, "", "pick_types"], [694, 2, 1, "", "plot"], [694, 2, 1, "", "plot_topo"], [694, 2, 1, "", "plot_topomap"], [694, 2, 1, "", "reorder_channels"], [694, 2, 1, "", "save"], [694, 2, 1, "", "to_data_frame"], [694, 2, 1, "", "units"]], "mne.time_frequency.tfr": [[716, 4, 1, "", "cwt"], [717, 4, 1, "", "morlet"]], "mne.transforms": [[726, 1, 1, "", "Transform"], [727, 4, 1, "", "apply_volume_registration"], [728, 4, 1, "", "compute_volume_registration"], [729, 4, 1, "", "quat_to_rot"], [730, 4, 1, "", "read_ras_mni_t"], [731, 4, 1, "", "rot_to_quat"]], "mne.transforms.Transform": [[726, 2, 1, "", "__contains__"], [726, 2, 1, "", "__getitem__"], [726, 2, 1, "", "__iter__"], [726, 2, 1, "", "__len__"], [726, 2, 1, "", "clear"], [726, 2, 1, "", "copy"], [726, 3, 1, "", "from_str"], [726, 2, 1, "", "fromkeys"], [726, 2, 1, "", "get"], [726, 2, 1, "", "items"], [726, 2, 1, "", "keys"], [726, 2, 1, "", "pop"], [726, 2, 1, "", "popitem"], [726, 2, 1, "", "save"], [726, 2, 1, "", "setdefault"], [726, 3, 1, "", "to_str"], [726, 2, 1, "", "update"], [726, 2, 1, "", "values"]], "mne.utils": [[734, 1, 1, "", "deprecated"], [735, 4, 1, "", "warn"]], "mne.viz": [[738, 1, 1, "", "Brain"], [739, 1, 1, "", "ClickableImage"], [740, 1, 1, "", "Figure3D"], [741, 4, 1, "", "add_background_image"], [742, 4, 1, "", "centers_to_edges"], [743, 4, 1, "", "circular_layout"], [744, 4, 1, "", "close_3d_figure"], [745, 4, 1, "", "close_all_3d_figures"], [746, 4, 1, "", "compare_fiff"], [747, 4, 1, "", "create_3d_figure"], [748, 4, 1, "", "get_3d_backend"], [749, 4, 1, "", "get_brain_class"], [750, 4, 1, "", "get_browser_backend"], [751, 4, 1, "", "iter_topography"], [752, 4, 1, "", "link_brains"], [753, 4, 1, "", "mne_analyze_colormap"], [754, 4, 1, "", "plot_alignment"], [755, 4, 1, "", "plot_arrowmap"], [756, 4, 1, "", "plot_bem"], [757, 4, 1, "", "plot_brain_colorbar"], [758, 4, 1, "", "plot_bridged_electrodes"], [759, 4, 1, "", "plot_ch_adjacency"], [760, 4, 1, "", "plot_channel_labels_circle"], [761, 4, 1, "", "plot_chpi_snr"], [762, 4, 1, "", "plot_compare_evokeds"], [763, 4, 1, "", "plot_cov"], [764, 4, 1, "", "plot_csd"], [765, 4, 1, "", "plot_dipole_amplitudes"], [766, 4, 1, "", "plot_dipole_locations"], [767, 4, 1, "", "plot_drop_log"], [768, 4, 1, "", "plot_epochs"], [769, 4, 1, "", "plot_epochs_image"], [770, 4, 1, "", "plot_epochs_psd_topomap"], [771, 4, 1, "", "plot_events"], [772, 4, 1, "", "plot_evoked"], [773, 4, 1, "", "plot_evoked_field"], [774, 4, 1, "", "plot_evoked_image"], [775, 4, 1, "", "plot_evoked_joint"], [776, 4, 1, "", "plot_evoked_topo"], [777, 4, 1, "", "plot_evoked_topomap"], [778, 4, 1, "", "plot_evoked_white"], [779, 4, 1, "", "plot_filter"], [780, 4, 1, "", "plot_head_positions"], [781, 4, 1, "", "plot_ica_components"], [782, 4, 1, "", "plot_ica_overlay"], [783, 4, 1, "", "plot_ica_properties"], [784, 4, 1, "", "plot_ica_scores"], [785, 4, 1, "", "plot_ica_sources"], [786, 4, 1, "", "plot_ideal_filter"], [787, 4, 1, "", "plot_layout"], [788, 4, 1, "", "plot_montage"], [789, 4, 1, "", "plot_projs_joint"], [790, 4, 1, "", "plot_projs_topomap"], [791, 4, 1, "", "plot_raw"], [792, 4, 1, "", "plot_raw_psd"], [793, 4, 1, "", "plot_regression_weights"], [794, 4, 1, "", "plot_sensors"], [795, 4, 1, "", "plot_snr_estimate"], [796, 4, 1, "", "plot_source_estimates"], [797, 4, 1, "", "plot_sparse_source_estimates"], [798, 4, 1, "", "plot_tfr_topomap"], [799, 4, 1, "", "plot_topo_image_epochs"], [800, 4, 1, "", "plot_topomap"], [801, 4, 1, "", "plot_vector_source_estimates"], [802, 4, 1, "", "plot_volume_source_estimates"], [803, 4, 1, "", "set_3d_backend"], [804, 4, 1, "", "set_3d_options"], [805, 4, 1, "", "set_3d_title"], [806, 4, 1, "", "set_3d_view"], [807, 4, 1, "", "set_browser_backend"], [808, 4, 1, "", "snapshot_brain_montage"], [809, 4, 1, "", "use_3d_backend"], [810, 4, 1, "", "use_browser_backend"]], "mne.viz.Brain": [[738, 2, 1, "", "add_annotation"], [738, 2, 1, "", "add_data"], [738, 2, 1, "", "add_dipole"], [738, 2, 1, "", "add_foci"], [738, 2, 1, "", "add_forward"], [738, 2, 1, "", "add_head"], [738, 2, 1, "", "add_label"], [738, 2, 1, "", "add_sensors"], [738, 2, 1, "", "add_skull"], [738, 2, 1, "", "add_text"], [738, 2, 1, "", "add_volume_labels"], [738, 2, 1, "", "apply_auto_scaling"], [738, 2, 1, "", "clear_glyphs"], [738, 2, 1, "", "close"], [738, 3, 1, "", "data"], [738, 2, 1, "", "get_picked_points"], [738, 2, 1, "", "get_view"], [738, 2, 1, "", "help"], [738, 3, 1, "", "interaction"], [738, 2, 1, "", "plot_time_course"], [738, 2, 1, "", "plot_time_line"], [738, 2, 1, "", "remove_annotations"], [738, 2, 1, "", "remove_data"], [738, 2, 1, "", "remove_dipole"], [738, 2, 1, "", "remove_forward"], [738, 2, 1, "", "remove_head"], [738, 2, 1, "", "remove_labels"], [738, 2, 1, "", "remove_sensors"], [738, 2, 1, "", "remove_skull"], [738, 2, 1, "", "remove_text"], [738, 2, 1, "", "remove_volume_labels"], [738, 2, 1, "", "reset"], [738, 2, 1, "", "reset_view"], [738, 2, 1, "", "restore_user_scaling"], [738, 2, 1, "", "save_image"], [738, 2, 1, "", "save_movie"], [738, 2, 1, "", "screenshot"], [738, 2, 1, "", "set_data_smoothing"], [738, 2, 1, "", "set_playback_speed"], [738, 2, 1, "", "set_time"], [738, 2, 1, "", "set_time_interpolation"], [738, 2, 1, "", "set_time_point"], [738, 2, 1, "", "setup_time_viewer"], [738, 2, 1, "", "show"], [738, 2, 1, "", "show_view"], [738, 3, 1, "", "time_interpolation"], [738, 2, 1, "", "toggle_interface"], [738, 2, 1, "", "toggle_playback"], [738, 2, 1, "", "update_lut"]], "mne.viz.ClickableImage": [[739, 2, 1, "", "onclick"], [739, 2, 1, "", "plot_clicks"], [739, 2, 1, "", "to_layout"]], "mne.viz.Figure3D": [[740, 3, 1, "", "plotter"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"]}, "titleterms": {"connect": [0, 27, 144, 242, 830], "analysi": [0, 4, 10, 14, 27, 35, 135, 144, 149, 163, 164, 213, 228, 233, 236, 237, 238, 848, 850, 857], "exampl": [0, 3, 27, 95, 102, 144, 154, 173, 193, 202, 203, 204, 252, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 279, 283, 284, 286, 288, 289, 290, 291, 292, 293, 294, 295, 297, 302, 304, 305, 306, 307, 308, 309, 311, 313, 317, 318, 319, 321, 323, 324, 325, 329, 332, 333, 336, 337, 338, 339, 340, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 365, 367, 376, 382, 387, 395, 396, 399, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 429, 432, 437, 438, 439, 441, 443, 444, 446, 451, 452, 455, 456, 460, 462, 463, 466, 467, 468, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 537, 539, 541, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 555, 557, 558, 559, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 575, 577, 578, 580, 581, 582, 584, 585, 586, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 607, 608, 610, 612, 613, 616, 618, 619, 620, 621, 622, 623, 625, 629, 631, 632, 634, 635, 637, 638, 639, 640, 642, 643, 644, 645, 646, 647, 648, 649, 650, 652, 654, 655, 656, 657, 658, 662, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 686, 688, 689, 690, 691, 692, 693, 694, 698, 699, 700, 703, 705, 707, 708, 709, 710, 718, 721, 722, 723, 727, 728, 730, 732, 733, 737, 738, 739, 742, 743, 747, 749, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 765, 766, 769, 771, 774, 776, 778, 779, 780, 786, 789, 790, 795, 796, 797, 800, 801, 803, 805, 806, 808, 810, 811, 815, 816, 817, 818, 819, 822, 824, 847, 856, 859], "brainstorm": [1, 181, 182, 189, 371, 372, 373, 847], "raw": [1, 7, 29, 68, 78, 87, 90, 91, 135, 138, 150, 166, 170, 175, 201, 208, 211, 212, 213, 214, 217, 252, 471, 850, 853, 862], "median": [1, 847], "nerv": [1, 847], "dataset": [1, 2, 3, 4, 7, 27, 68, 80, 181, 182, 183, 189, 211, 237, 245, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 847, 850], "refer": [1, 4, 8, 10, 12, 13, 15, 16, 18, 19, 21, 32, 34, 39, 41, 42, 43, 45, 50, 53, 54, 57, 58, 64, 68, 69, 72, 73, 76, 80, 81, 85, 91, 98, 106, 109, 110, 114, 116, 118, 123, 126, 132, 135, 139, 142, 149, 153, 155, 160, 174, 176, 178, 181, 182, 187, 189, 192, 193, 197, 199, 201, 202, 203, 204, 205, 207, 219, 222, 223, 227, 235, 830, 846, 847, 850, 853, 861], "hf": 2, "sef": [2, 847], "open": [3, 27, 252, 830, 859], "singl": [4, 28, 101, 125, 224, 225, 226], "trial": [4, 125, 208, 212, 224, 225, 226, 236, 237], "linear": [4, 18, 252, 853], "regress": [4, 71, 96, 98, 139, 201], "limo": [4, 388, 847], "about": [4, 168, 169, 196, 853], "data": [4, 5, 7, 8, 11, 13, 15, 18, 19, 21, 27, 29, 30, 40, 41, 48, 50, 56, 62, 64, 69, 71, 73, 77, 78, 83, 86, 87, 89, 90, 91, 92, 93, 94, 96, 97, 106, 111, 112, 113, 116, 117, 118, 126, 133, 134, 135, 138, 139, 140, 144, 145, 147, 148, 150, 157, 163, 164, 165, 166, 167, 170, 173, 175, 176, 178, 186, 187, 188, 189, 190, 192, 198, 200, 201, 208, 211, 212, 213, 214, 215, 217, 218, 219, 223, 226, 227, 228, 230, 231, 232, 235, 237, 244, 252, 655, 846, 847, 850, 853, 856, 862, 865, 867], "load": [4, 19, 46, 71, 112, 113, 134, 135, 138, 139, 147, 157, 164, 173, 176, 188, 192, 203, 211, 218, 853], "visual": [4, 19, 27, 46, 47, 48, 49, 53, 54, 109, 114, 119, 134, 138, 140, 142, 147, 148, 154, 156, 168, 175, 178, 179, 180, 192, 201, 202, 203, 204, 206, 222, 227, 230, 231, 232, 235, 830, 847, 859, 870], "event": [4, 67, 110, 135, 142, 149, 164, 166, 170, 212, 247, 429, 430, 431], "condit": [4, 13, 129, 149, 225, 226], "erp": [4, 139, 142, 149, 847], "effect": [4, 16, 192, 193, 201, 203, 222, 237, 853], "stimulu": [4, 19], "phase": [4, 104], "coher": [4, 236], "prepar": [4, 5, 142, 201, 232], "defin": [4, 67, 87, 154, 222, 224], "predictor": 4, "variabl": [4, 169, 830], "design": [4, 135, 193, 199, 848], "matrix": [4, 40, 63, 68, 100, 160, 222, 230, 846, 850, 853, 856], "extract": [4, 36, 38, 91, 135, 138, 206, 208, 211, 237], "coeffici": [4, 19], "plot": [4, 18, 33, 40, 41, 42, 43, 46, 47, 49, 59, 67, 68, 78, 79, 81, 113, 115, 116, 117, 120, 121, 122, 123, 124, 125, 130, 139, 140, 148, 150, 160, 168, 208, 212, 214, 218, 224, 225, 236, 237, 828, 850], "model": [4, 19, 23, 27, 44, 108, 155, 156, 161, 163, 164, 175, 178, 192, 194, 205, 250, 252, 846, 852, 853, 859], "result": [4, 42, 43, 53, 237], "optic": [5, 208], "pump": 5, "magnetomet": 5, "opm": [5, 106, 392, 847, 859], "local": [5, 31, 163, 174, 175, 176, 180, 184, 830, 846], "perform": [5, 71, 87, 134, 192], "dipol": [5, 44, 87, 113, 174, 176, 179, 258, 423], "fit": [5, 19, 155, 174, 179, 192, 202], "minimum": [5, 853], "norm": [5, 39, 853], "comput": [6, 16, 20, 21, 25, 28, 29, 30, 32, 33, 34, 38, 39, 40, 41, 44, 45, 46, 48, 50, 53, 54, 55, 57, 58, 65, 68, 82, 87, 88, 91, 99, 100, 101, 103, 104, 105, 106, 107, 109, 127, 134, 137, 146, 152, 156, 157, 160, 162, 168, 172, 175, 177, 178, 185, 191, 195, 199, 201, 202, 203, 206, 210, 216, 221, 224, 225, 227, 229, 230, 231, 232, 234, 239, 243, 252, 846, 853, 859], "time": [6, 9, 13, 20, 25, 27, 36, 38, 45, 55, 58, 65, 67, 68, 70, 82, 83, 88, 91, 99, 102, 103, 111, 127, 134, 137, 138, 140, 142, 143, 146, 152, 162, 163, 164, 172, 179, 185, 191, 193, 195, 202, 210, 211, 216, 221, 224, 225, 227, 229, 234, 236, 237, 238, 239, 830, 859, 869], "from": [7, 8, 15, 19, 36, 37, 42, 43, 60, 87, 101, 126, 135, 138, 140, 142, 147, 166, 167, 186, 187, 188, 201, 204, 208, 211, 212, 213, 214, 217, 218, 244, 252, 857], "dspm": [7, 28, 30, 33, 53, 91, 107, 175, 853], "spm": [7, 847], "face": [7, 847], "motor": [8, 847], "imageri": [8, 847], "decod": [8, 9, 11, 12, 13, 15, 17, 18, 27, 193, 246, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421], "eeg": [8, 15, 22, 54, 57, 64, 68, 69, 76, 115, 122, 149, 157, 164, 180, 186, 187, 205, 223, 237, 846, 853, 859], "us": [8, 9, 14, 18, 26, 32, 33, 34, 38, 46, 56, 62, 69, 81, 91, 135, 141, 144, 147, 153, 154, 155, 158, 159, 169, 178, 192, 202, 205, 207, 226, 252, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 279, 283, 284, 286, 288, 289, 290, 291, 292, 293, 294, 295, 297, 302, 304, 305, 306, 307, 308, 309, 311, 313, 317, 318, 319, 321, 323, 324, 325, 329, 332, 333, 336, 337, 338, 339, 340, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 365, 367, 376, 382, 387, 395, 396, 399, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 429, 432, 437, 438, 439, 441, 443, 444, 446, 451, 452, 455, 456, 460, 462, 463, 466, 467, 468, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 537, 539, 541, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 555, 557, 558, 559, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 575, 577, 578, 580, 581, 582, 584, 585, 586, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 607, 608, 610, 612, 613, 616, 618, 619, 620, 621, 622, 623, 625, 629, 631, 632, 634, 635, 637, 638, 639, 640, 642, 643, 644, 645, 646, 647, 648, 649, 650, 652, 654, 655, 656, 657, 658, 662, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 686, 688, 689, 690, 691, 692, 693, 694, 698, 699, 700, 703, 705, 707, 708, 709, 710, 718, 721, 722, 723, 727, 728, 730, 732, 733, 737, 738, 739, 742, 743, 747, 749, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 765, 766, 769, 771, 774, 776, 778, 779, 780, 786, 789, 790, 795, 796, 797, 800, 801, 803, 805, 806, 808, 810, 811, 815, 816, 817, 818, 819, 822, 824, 828, 830, 843, 846, 850, 853, 856], "common": [8, 9, 132, 193, 230, 232, 235], "spatial": [8, 9, 16, 21, 53, 54, 178, 193, 218], "pattern": [8, 9, 18, 193], "csp": [8, 9, 403], "frequenc": [9, 27, 45, 58, 102, 110, 111, 134, 163, 164, 188, 196, 199, 206, 224, 225, 227, 235, 236, 237, 238, 847, 859, 869], "space": [9, 11, 13, 18, 24, 26, 30, 40, 53, 57, 98, 101, 104, 107, 144, 156, 157, 161, 163, 176, 193, 203, 204, 207, 212, 218, 230, 232, 252, 846, 853, 856, 865, 867], "represent": [10, 111, 208, 226, 853], "similar": [10, 147], "sourc": [11, 24, 26, 27, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 46, 53, 57, 69, 87, 91, 92, 101, 104, 105, 106, 107, 113, 154, 156, 157, 161, 163, 170, 174, 175, 176, 178, 179, 180, 184, 193, 205, 218, 230, 231, 232, 233, 252, 846, 853, 859, 867], "continu": [12, 78, 96, 98, 144, 145, 163, 164, 188, 192, 206, 211, 213, 214, 215, 853], "target": [12, 67], "spoc": [12, 193, 410], "sensor": [13, 18, 22, 81, 93, 94, 97, 98, 113, 115, 120, 122, 130, 140, 163, 168, 188, 193, 204, 208, 214, 218, 227, 228, 236, 853, 865], "gener": [13, 24, 37, 89, 90, 92, 142, 187, 193, 198, 218, 240, 830, 850, 853], "across": [13, 68, 79, 149, 208], "evok": [14, 30, 33, 40, 50, 67, 83, 87, 89, 91, 116, 117, 118, 124, 129, 147, 148, 149, 150, 151, 163, 164, 170, 175, 201, 217, 262, 846], "respons": [14, 67, 129, 142, 149, 151, 163, 164, 175, 192, 201, 208, 858], "ica": [14, 74, 80, 170, 202, 550, 846], "pca": [14, 46, 252], "reduct": [14, 202, 203, 204], "techniqu": 14, "xdawn": [15, 85, 193, 551], "match": [16, 193, 202], "filter": [16, 18, 21, 48, 77, 111, 149, 178, 193, 199, 200, 202, 207, 438, 439, 440, 441, 442, 443, 853], "em": [16, 404], "machin": [17, 27, 163, 194], "learn": [17, 27, 135, 163, 194], "encod": [17, 27, 655], "mvpa": [17, 27, 193], "classifi": 18, "logisticregress": 18, "recept": [19, 192], "field": [19, 148, 149, 192, 853, 856], "estim": [19, 33, 37, 40, 41, 42, 43, 56, 87, 151, 163, 164, 179, 180, 192, 206, 218, 233, 242, 846, 853], "predict": [19, 853], "public": [19, 124], "creat": [19, 87, 91, 112, 113, 135, 138, 142, 147, 186, 192, 201, 204, 205, 213, 217, 218, 226, 244, 252, 830, 846, 853], "investig": 19, "reconstruct": [19, 87, 91, 153, 158, 178, 204, 846], "spectro": [21, 192], "decomposit": 21, "ssd": [21, 411], "epoch": [21, 28, 41, 91, 101, 111, 114, 135, 138, 140, 141, 142, 143, 144, 145, 147, 149, 150, 163, 164, 170, 198, 201, 202, 208, 217, 227, 230, 232, 260, 424, 425, 426, 427, 846, 853], "displai": 22, "sensit": [22, 128], "map": [22, 34, 109, 117, 128, 140, 147, 148, 212, 219, 853], "meg": [22, 54, 72, 76, 84, 120, 130, 164, 186, 218, 847, 853, 859], "forward": [23, 27, 46, 106, 156, 157, 161, 163, 170, 178, 250, 264, 447, 448, 449, 450, 846, 850, 853], "left": [24, 208], "cerebellum": 24, "volum": [24, 30, 40, 49, 179], "morph": [26, 42, 43, 178, 853], "galleri": 27, "input": [27, 61], "output": [27, 61, 158, 178], "simul": [27, 86, 87, 89, 90, 91, 92, 111, 163, 192, 202, 218, 219, 220, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 866], "preprocess": [27, 75, 106, 134, 139, 163, 164, 208, 209, 213, 237, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 846, 860], "statist": [27, 95, 163, 222, 223, 224, 225, 227, 228, 230, 231, 232, 233, 237, 853, 859, 868], "invers": [27, 28, 29, 30, 31, 34, 35, 38, 39, 40, 41, 46, 51, 56, 91, 101, 163, 164, 175, 184, 839, 845, 846, 850, 853], "problem": [27, 35, 199], "mne": [28, 30, 40, 41, 53, 59, 74, 113, 121, 153, 158, 159, 164, 169, 170, 175, 177, 186, 197, 199, 202, 203, 207, 211, 217, 222, 241, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 827, 830, 832, 833, 834, 836, 837, 838, 842, 845, 849, 850, 853, 856, 864], "solut": [28, 29, 30, 34, 38, 39, 40, 46, 59, 101, 156, 170, 175, 177, 199, 202, 252, 839, 846, 850, 853], "sloreta": [29, 175, 853], "custom": [31, 124, 130, 170, 188], "solver": 31, "power": [32, 33, 41, 101, 104, 105, 106, 107, 134, 140, 149, 193, 196, 200, 219, 224, 225, 226, 236, 237], "dic": [32, 33, 219], "beamform": [32, 33, 48, 178, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296], "er": 33, "lcmv": [33, 48, 178], "covari": [33, 41, 48, 63, 118, 160, 170, 175, 178, 218, 243, 257, 846, 850, 853], "some": [33, 199, 856], "spars": [34, 39, 58], "gamma": [34, 134], "empir": 34, "bayesian": 34, "method": [34, 73, 211, 214, 222], "cours": [36, 91, 179], "source_estim": 36, "object": [36, 43, 135, 138, 140, 141, 143, 147, 148, 166, 167, 211, 213, 214, 217, 235, 244, 847, 850], "function": [37, 46, 47, 48, 49, 135, 208, 222, 232, 830, 834, 850, 856], "label": [37, 38, 40, 46, 101, 104, 105, 218, 266, 503, 856], "seri": [38, 68, 140], "activ": [38, 87, 91, 124, 125, 163, 178, 194, 208], "view": [38, 40, 79, 113, 141, 208, 224, 225, 252], "vector": [38, 42, 59, 170, 178, 179, 193, 418], "mix": [39, 40], "mxne": [39, 45, 58], "irmxn": 39, "set": [40, 42, 143, 149, 155, 169, 187, 205, 224, 226, 227, 230, 231, 232, 252, 830, 846, 847], "up": [40, 42, 155, 159, 252, 830, 846], "our": [40, 180], "fwd": [40, 856], "surfac": [40, 42, 156, 158, 159, 168, 179, 180, 208, 252, 687, 688, 846, 853, 856], "process": [40, 165, 178, 830, 844], "project": [41, 81, 112, 128, 168, 170, 193, 203, 252, 269, 852, 853, 856], "empti": [41, 126, 204], "room": [41, 126, 204], "appli": [41, 42, 43, 73, 135, 142, 178, 186, 188, 199, 201, 203, 237, 252], "oper": [41, 46, 51, 91, 111, 156, 157, 159, 213, 846, 848, 853], "sourcemorph": [42, 43, 272], "sourceestim": [42, 170, 173, 271], "read": [42, 43, 46, 51, 52, 63, 64, 135, 163, 166, 168, 187, 190, 212, 213, 227, 230, 232, 850, 856, 862], "write": [42, 43, 63, 212, 213, 856], "disk": [42, 43, 138], "volumetr": [43, 178, 853], "get": [43, 60, 157, 159, 169, 170, 180, 237, 837, 850, 851, 855], "volsourceestim": [43, 275], "convert": [43, 112, 143, 166, 208, 252], "nifti": 43, "timecours": [44, 124], "an": [44, 51, 52, 56, 68, 114, 140, 141, 143, 155, 157, 159, 166, 167, 170, 178, 180, 202, 205, 237, 846], "xfit": 44, "like": [44, 168], "multi": 44, "iter": [45, 138], "reweight": 45, "tf": 45, "multiscal": 45, "dictionari": 45, "leakag": 46, "among": [46, 147], "circular": 46, "graph": 46, "organis": 46, "cortic": [46, 66, 123, 158, 230, 232, 846, 853], "parcel": [46, 123], "point": [46, 47, 49, 155, 218, 853], "spread": [46, 47, 49, 218], "summari": [46, 68, 165, 173, 196, 197, 199, 211, 871], "all": [46, 132, 178, 197, 226, 230, 232, 830, 834, 838, 850], "evalu": [46, 208], "base": [46, 67, 135, 139, 198, 252, 848, 853], "psf": [46, 47, 49], "correl": 46, "save": [46, 138, 147, 170, 203, 211], "figur": [46, 124, 170], "option": [46, 117, 252, 830, 850], "individu": [46, 856], "cross": [47, 48, 100, 131, 830], "talk": [47, 48], "ctf": [47, 120, 182, 186, 189], "differ": [48, 74, 87, 129, 139, 163, 190, 192, 237], "matric": [48, 160, 178], "resolut": [48, 53, 54, 159, 252], "two": [48, 218], "rap": 50, "music": 50, "stc": [52, 87, 173, 179, 856], "file": [52, 60, 168, 170, 187, 212, 213, 249, 252, 846, 850, 853, 856], "metric": [53, 54, 68, 645, 646, 647, 648, 649, 650, 651, 652], "compar": [54, 68, 74, 87, 129, 148, 149, 192, 208, 222, 252], "eegmeg": 54, "snr": [56, 57, 206, 237], "prior": 58, "full": [59, 227], "valu": [59, 143, 237], "averag": [60, 111, 147, 149, 205, 853], "info": [60, 167, 211, 217, 252, 265, 856], "fif": [60, 186, 252, 850], "how": [62, 112, 158, 160, 197, 204, 213, 845, 850], "neural": [62, 163, 192, 194, 208], "ensembl": 62, "neo": 62, "format": [62, 143, 187, 188, 853], "nois": [63, 118, 126, 175, 196, 200, 203, 204, 218, 237, 846, 847, 853], "xdf": [64, 187], "signal": [66, 148, 165, 166, 203, 204, 206, 207, 208, 218, 237, 853, 856], "suppress": [66, 846], "css": 66, "remov": [66, 71, 80, 202, 203, 208, 230, 232], "lag": 67, "identifi": 68, "electrod": [68, 112, 132, 134, 180, 187, 853], "bridg": 68, "too": 68, "much": 68, "gel": 68, "electr": 68, "distanc": 68, "examin": [68, 139], "distribut": [68, 73, 176, 828, 859], "topomap": [68, 117], "voltag": 68, "subject": [68, 91, 206, 252, 847], "eegbci": [68, 80, 374, 375, 847], "The": [68, 138, 142, 147, 165, 166, 167, 168, 173, 176, 178, 198, 211, 235, 846, 847, 852, 853, 856], "relationship": [68, 173], "between": [68, 166, 225], "imped": 68, "transform": [69, 111, 135, 154, 158, 193, 230, 232, 726, 727, 728, 729, 730, 731, 853, 856], "current": [69, 113, 174, 251, 853, 858, 871], "densiti": [69, 100, 101, 105, 106, 208, 214, 237], "csd": [69, 100], "show": [70, 126, 252], "eog": [70, 71, 196, 201, 202, 204, 252], "artifact": [70, 71, 72, 73, 78, 79, 196, 200, 201, 202, 204, 252, 846], "reduc": 71, "through": 71, "import": [71, 73, 124, 186, 187, 188, 252, 830], "packag": [71, 838, 853], "befor": [71, 201, 830], "after": [71, 828], "comparison": [71, 131, 222, 226], "find": [72, 218, 227, 230], "channel": [72, 76, 84, 114, 138, 143, 147, 149, 165, 166, 167, 168, 186, 197, 198, 202, 205, 208, 211, 227, 230, 232, 237, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 655, 846, 847, 853, 856], "visualis": [73, 223], "nir": [73, 580, 581, 582, 583, 584, 585], "correct": [73, 94, 139, 142, 222], "add": [73, 113], "artifici": 73, "tempor": [73, 81, 108, 192, 193, 230, 231, 232], "deriv": 73, "repair": [73, 200, 201, 202, 204, 853], "algorithm": [74, 252, 845, 853], "interpol": [76, 117, 197, 853], "bad": [76, 154, 155, 159, 197, 198, 230, 232, 846, 853], "maxwel": [77, 207, 853], "movement": [77, 78, 206, 207], "compens": [77, 186, 207, 853, 856], "annot": [78, 79, 135, 166, 198, 208, 213, 254, 846], "reestim": 78, "dev_head_t": 78, "head": [78, 113, 154, 156, 158, 159, 180, 187, 206, 252, 846, 853], "posit": [78, 112, 113, 206], "respect": 78, "mean": [78, 149], "record": [78, 79, 163, 187, 190, 204], "muscl": [79, 80], "z": 79, "score": [79, 87], "compon": [80, 142, 178, 202], "let": 80, "": [80, 111, 158, 871], "now": 80, "replic": 80, "thi": [80, 192], "denois": [81, 85], "oversampl": 81, "shift": 83, "scale": [83, 143, 150, 853], "remap": 84, "type": [84, 138, 149, 167, 192, 199, 211, 237, 252, 830, 853], "main": 87, "paramet": [87, 165, 198, 224, 226, 227, 230, 231, 232], "true": 87, "correspond": [87, 846], "amplitud": [87, 149, 198], "threshold": [87, 222, 223], "For": [87, 856], "region": [87, 113, 149], "anatomi": 91, "responss": 91, "permut": [93, 97, 226, 227, 230, 231], "f": [93, 96, 227], "test": [93, 94, 97, 135, 222, 226, 227, 230, 231, 829, 830, 836], "1d": 93, "cluster": [93, 222, 224, 225, 226, 227, 230, 231, 232, 859], "level": [93, 126, 856], "fdr": [94, 222, 226], "t": [94, 97, 230, 850], "rer": 96, "p": 96, "analys": [98, 846], "featur": [98, 134, 135], "bin": [98, 186, 850], "spectral": [100, 101, 105, 106, 214, 235, 237], "psd": [101, 105, 106, 237], "lock": [104, 142], "vectorview": [106, 186, 211], "align": [106, 132, 154, 158, 252, 655, 846], "alpha": 106, "beta": 106, "induc": 107, "whiten": [108, 118, 150, 853, 856], "ar": [108, 147, 169, 196, 203, 850, 856], "erd": 109, "explor": [110, 134], "relat": [110, 149, 837, 856], "dynam": 110, "specif": 110, "band": 110, "multitap": 111, "v": [111, 193, 211, 833], "morlet": [111, 705, 717], "stockwel": 111, "hilbert": 111, "calcul": [111, 237, 846, 853], "tfr": [111, 226, 716, 717], "wavelet": 111, "narrow": 111, "bandpass": 111, "without": [111, 154], "over": [111, 114, 138, 193, 208], "arrai": [111, 166, 212, 244, 853], "3d": [112, 148, 168, 178, 828, 850, 853, 859], "2d": [112, 168, 178, 859], "imag": [112, 113, 114, 140, 148, 170, 208, 252, 845, 853, 859], "snapshot": 112, "manual": [112, 168, 202], "viz": [113, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810], "brain": [113, 121, 124, 134, 178, 208, 738], "inform": [113, 167, 169, 176, 199, 208, 252, 846, 853, 856], "modifi": [113, 141, 165, 211, 830], "highlight": 113, "includ": [113, 212, 252], "screenshot": 113, "export": [113, 143, 159, 211, 248, 433, 434, 435, 436], "scalp": [115, 139, 148], "topograph": [116, 117, 148, 150, 208], "arrowmap": 116, "basic": [117, 134, 138, 142, 147, 199, 237, 830, 856], "plot_topomap": [117, 800], "addit": 117, "more": [117, 124, 208, 856], "advanc": [117, 828], "usag": 117, "anim": 117, "layout": [120, 122, 168, 226, 308], "system": [120, 122, 163, 169, 186, 188, 190, 252, 836, 853], "neuromag": [120, 186], "bti": [120, 183, 186, 252, 847], "kit": [120, 186, 252, 474], "artemis123": [120, 186], "helmet": 121, "make": [124, 166, 212, 830, 852], "readi": 124, "montag": [124, 168], "inset": 124, "group": [125, 142, 846], "roi": [125, 237], "sort": 125, "rt": 125, "ssp": [128, 203, 204, 252, 846, 853], "topographi": [130, 139, 148, 237], "hemispher": [131, 252, 846], "locat": [132, 140, 149, 168, 180, 187, 188, 208, 214, 853], "intracrani": 132, "contact": 132, "t1": 132, "acpc": 132, "freesurf": [132, 153, 158, 252, 831, 846, 853, 856], "recon": 132, "ct": 132, "mr": 132, "mark": [132, 197, 846], "each": [132, 218], "warp": 132, "atla": 132, "work": [133, 134, 141, 163, 168, 170, 189, 197, 212, 215, 828, 850], "seeg": [133, 847, 859], "ecog": [134, 847, 859], "templat": [134, 157, 202, 847], "evolut": 134, "sleep": [135, 847], "stage": 135, "classif": 135, "polysomnographi": 135, "psg": 135, "hypnogram": 135, "30": 135, "found": [135, 850], "same": 135, "step": [135, 153, 833, 850], "bob": 135, "engin": 135, "scikit": 135, "python": [135, 153, 158, 159, 164, 169, 170, 197, 199, 202, 203, 207, 211, 217, 241, 252, 827, 828, 830, 832, 833, 834, 835, 838, 845, 848, 849, 850, 855, 859, 861], "multiclass": 135, "workflow": [135, 830, 846], "further": 135, "exercis": [135, 156, 193, 218, 227, 236, 237], "clinic": [136, 163, 859], "applic": [136, 163], "structur": [138, 147, 166, 167, 173, 186, 211, 217, 853, 856], "discontinu": 138, "subselect": [138, 212], "select": [138, 141, 147, 202, 208, 211, 230, 856], "index": [138, 143, 211, 237], "drop": [138, 147, 167, 211], "reorder": [138, 147, 211], "chang": [138, 205, 211, 830, 871], "name": [138, 149, 186, 211, 830, 856], "domain": [138, 188, 202, 211, 235], "other": [138, 147, 199, 251, 828, 830, 834, 845, 853, 857], "form": [138, 237], "baselin": [139, 199, 218, 283], "tradit": 139, "regressor": 139, "wave": [139, 188], "interact": [139, 140, 213, 214, 848], "term": 139, "pipelin": [140, 859], "script": [140, 170, 848], "projector": [140, 203, 204, 205, 214], "spectrum": [140, 235, 694], "metadata": [141, 142], "restrict": 141, "datafram": [141, 143], "queri": [141, 167, 211], "ad": [141, 142, 170, 203], "auto": 142, "make_metadata": [142, 427], "specifi": [142, 188], "keep": 142, "onli": [142, 834, 838], "first": [142, 153, 830, 833, 859], "new": [142, 830, 871], "column": [142, 166], "describ": [142, 830], "stimul": [142, 237], "side": 142, "knowledg": 142, "ern": 142, "panda": 143, "wide": 143, "versu": [143, 226, 848], "long": [143, 211], "divid": 144, "equal": [144, 212], "characterist": 144, "fix": [144, 159, 176, 177], "length": [144, 199], "case": 144, "segment": [145, 163], "subset": [147, 167, 237], "memori": [147, 186, 853], "core": [147, 834, 847, 850], "combin": [147, 212], "trace": 148, "butterfli": 148, "arrow": 148, "joint": [148, 236], "subplot": 148, "potenti": [149, 857], "global": 149, "gfp": 149, "interest": [149, 227, 852], "grand": 149, "latenc": 149, "measur": [149, 226, 232, 252], "peak": 149, "mri": [153, 154, 157, 158, 170, 178, 180, 252, 844, 847, 853], "anatom": [153, 846], "fsaverag": [153, 157, 178, 847], "coordin": [154, 158, 188, 252, 846, 853, 856], "frame": [154, 158, 846], "understand": 154, "definit": [154, 227, 853, 856], "A": [154, 850], "good": 154, "defac": 154, "tran": [154, 856], "gui": [154, 252, 462, 463], "autom": 155, "approach": [155, 252], "coregistr": [155, 156, 170, 252, 360, 462], "initi": 155, "fiduci": 155, "refin": 155, "icp": 155, "omit": 155, "final": 155, "bem": [156, 159, 170, 252, 297, 298, 299, 300, 301, 302, 303, 304, 846, 850, 853], "adult": 157, "setup": [157, 219, 226, 227, 828, 833, 841], "infant": [157, 847], "surrog": 157, "under": [158, 850], "hood": 158, "ra": [158, 180], "spheric": 158, "decim": [158, 850], "mni": [158, 178], "affin": 158, "blender": 159, "edit": [159, 170], "low": [159, 196, 199], "high": [159, 199, 252, 847, 856], "tip": 159, "what": [159, 166, 196, 202, 203, 204, 252, 812, 837, 850, 871], "you": 159, "still": [159, 850], "error": 159, "clean": [159, 252], "dens": 159, "smooth": [159, 853], "topolog": 159, "deal": 159, "topologi": [159, 853], "pymeshfix": 159, "should": [160, 837, 850], "i": [160, 166, 168, 202, 203, 204, 249, 828, 834, 836, 837, 850, 853], "regular": [160, 175, 192, 365, 850, 853], "tutori": [163, 171, 181, 182, 183, 859], "introductori": [163, 171], "overview": [164, 196, 830, 837, 846, 847, 854, 856], "detect": [164, 196, 198, 208], "experiment": 164, "place": [165, 168, 848], "pick": 165, "copi": 165, "pars": 166, "stim": [166, 655], "middl": 166, "embed": 166, "multipl": [166, 222, 226, 850], "per": [166, 846], "obtain": 167, "built": [168, 214], "eeglab": [168, 187, 834, 857], "sphere": [168, 853], "keyword": 168, "avail": 168, "mani": 168, "control": 168, "digit": [168, 853], "render": [168, 178, 828], "configur": [169, 830, 836, 840], "where": 169, "store": 169, "environ": [169, 830], "log": [169, 187, 840], "your": [169, 829, 830], "start": [170, 855], "report": [170, 199, 252, 270, 864], "inverseoper": [170, 516], "code": [170, 235, 830, 833, 847], "e": 170, "g": 170, "tag": [170, 237, 856], "entir": 170, "folder": [170, 252], "html": 170, "descript": [170, 853], "text": 170, "inspect": [173, 236, 853], "sourcespac": [173, 273], "src": 173, "equival": 174, "ecd": 174, "eloreta": [175, 853], "role": 176, "orient": [176, 177, 853], "loos": 176, "limit": 176, "them": 176, "discard": 176, "variou": 177, "free": [177, 222], "introduct": 178, "handl": [178, 197], "depth": [178, 853], "bia": [178, 204], "On": [178, 856], "slice": 178, "orthoview": 178, "glass": 178, "maximum": [178, 222], "voxel": [178, 180], "three": 178, "given": 180, "prerequisit": 180, "coord": 180, "elekta": [181, 186], "phantom": [181, 182, 183], "4d": [183, 252, 847], "neuroimag": [183, 186, 847], "devic": [186, 187, 188, 853], "megin": 186, "triux": 186, "4": [186, 871], "d": 186, "dir": 186, "polhemu": 186, "softwar": [186, 199, 837, 845, 853, 856, 857], "gradient": [186, 853, 856], "ricoh": 186, "con": 186, "sqd": 186, "fieldtrip": [186, 227], "mat": 186, "arbitrari": [186, 232], "brainvis": 187, "vhdr": 187, "vmrk": 187, "european": 187, "edf": 187, "biosemi": 187, "bdf": 187, "gdf": 187, "neuroscan": 187, "cnt": 187, "egi": 187, "simpl": [187, 850], "binari": 187, "mff": 187, "fdt": 187, "nicolet": 187, "eximia": 187, "nxe": 187, "persyst": 187, "lai": 187, "dat": 187, "nihon": 187, "kohden": 187, "21e": 187, "pnt": 187, "xdfz": 187, "shape": 187, "fnir": [188, 208, 847], "standard": [188, 208, 222, 375, 830], "snirf": 188, "nirx": 188, "directori": [188, 847, 853, 856], "hdr": 188, "hitachi": 188, "csv": 188, "boxi": 188, "txt": 188, "legaci": [188, 235], "tsv": 188, "auditori": [189, 847], "strf": 192, "audio": 192, "recov": 192, "philosophi": [193, 848], "class": [193, 235, 828, 836, 843, 859], "scaler": [193, 412], "psdestim": [193, 408], "filterestim": [193, 405], "comodul": 193, "do": [196, 850], "drift": [196, 200, 202], "line": [196, 200, 252, 830, 856], "heartbeat": 196, "ecg": [196, 202, 204, 252], "ocular": 196, "block": 197, "execut": 197, "when": [197, 203, 830], "look": [197, 202, 850], "why": [197, 850, 853], "reject": [198, 846], "span": 198, "break": 198, "reject_by_annot": 198, "programmat": [198, 213], "background": [199, 200, 203, 205, 207, 218], "statement": 199, "fir": 199, "iir": 199, "pitfal": [199, 857], "pass": 199, "default": [199, 853], "c": [199, 836], "cutoff": 199, "order": 199, "transit": 199, "bandwidth": 199, "roll": 199, "off": [199, 828], "passband": 199, "rippl": 199, "stopband": 199, "attenu": 199, "delai": 199, "direct": 199, "resampl": [200, 222, 443, 850], "slow": [200, 202, 850], "best": [200, 203], "practic": [200, 203], "origin": [201, 218], "subtract": 201, "dimension": 202, "ignor": 202, "terminologi": 203, "environment": 204, "affect": [204, 213], "choos": 204, "number": [204, 211, 853], "via": [204, 834, 853, 859], "infinit": 205, "rest": [205, 847], "bipolar": 205, "hpi": 206, "separ": [207, 237], "sss": 207, "spatiotempor": [207, 227], "tsss": 207, "caveat": 207, "infrar": 208, "spectroscopi": 208, "provid": [208, 222], "meaning": 208, "appropri": 208, "intens": 208, "qualiti": 208, "haemoglobin": 208, "heart": 208, "rate": [208, 222], "consist": [208, 217, 830], "tap": 208, "right": 208, "hand": 208, "attribut": 211, "sampl": [211, 224, 226, 231, 395, 847], "len": 211, "get_data": 211, "wai": 211, "exclud": 212, "id": [212, 834, 856], "descriptor": 212, "togeth": 212, "brows": [214, 252], "scratch": 217, "unit": [217, 853], "corrupt": 218, "known": 218, "period": 218, "sinusoid": 218, "distant": 218, "center": [218, 841], "vertic": 218, "infer": 222, "hypothesi": 222, "null": 222, "parametr": [222, 224, 225], "hat": 222, "varianc": 222, "adjust": 222, "non": [222, 224, 225], "bonferroni": 222, "fals": 222, "discoveri": 222, "size": 222, "adjac": [222, 224, 227, 230], "enhanc": [222, 871], "tfce": 222, "signific": [223, 230], "1": [224, 871], "mass": 226, "univari": 226, "twowai": 226, "repeat": [226, 232], "anova": [226, 232], "account": 226, "neighbor": 227, "spatio": [230, 231, 232], "one": [230, 232], "2": [231, 871], "contrast": 232, "epochsspectrum": [235, 692], "migrat": [235, 857], "quick": 235, "action": 235, "inter": 236, "itc": 236, "ssvep": [237, 400, 847], "vssr": 237, "ratio": 237, "spectra": 237, "12": [237, 871], "hz": 237, "indic": 237, "check": [237, 252, 853], "15": [237, 871], "debrief": 237, "bonu": 237, "durat": 237, "resolv": 237, "bibliographi": 240, "paper": 241, "cite": [241, 845, 850], "o": [249, 834, 853], "fund": [251, 852], "support": [251, 834, 853, 859], "institut": [251, 852, 858], "partner": [251, 852, 858], "former": [251, 858], "command": [252, 830, 850], "tool": [252, 830, 837], "anonym": 252, "browse_raw": 252, "bti2fiff": 252, "magneswh3600": 252, "note": [252, 856], "clean_eog_ecg": 252, "ie": 252, "compare_fiff": [252, 746], "fiff": [252, 856], "compute_proj_ecg": [252, 562], "compute_proj_eog": [252, 563], "coreg": [252, 360, 361, 362], "flash_bem": 252, "3": [252, 871], "layer": 252, "flash": [252, 853], "freeview_bem_surfac": 252, "freeview": 252, "kit2fiff": 252, "nyu": 252, "make_scalp_surfac": [252, 303], "maxfilt": 252, "prepare_bem_model": 252, "colloc": 252, "setup_forward_model": 252, "setup_source_spac": [252, 638], "bilater": 252, "subsampl": 252, "show_fiff": [252, 501], "content": [252, 847, 859], "show_info": 252, "surf2bem": 252, "sys_info": [252, 689], "watershed_bem": 252, "watersh": [252, 850, 853], "acqparserfif": 253, "baseepoch": 255, "bihemilabel": 256, "dipolefix": 259, "epochsarrai": 261, "evokedarrai": 263, "mixedsourceestim": 267, "mixedvectorsourceestim": 268, "vectorsourceestim": 274, "volvectorsourceestim": 276, "add_reference_channel": 277, "add_source_space_dist": 278, "annotations_from_ev": 279, "apply_forward": 280, "apply_forward_raw": 281, "average_forward_solut": 282, "rescal": 283, "apply_d": 285, "apply_dics_csd": 286, "apply_dics_epoch": 287, "apply_lcmv": 288, "apply_lcmv_cov": 289, "apply_lcmv_epoch": 290, "apply_lcmv_raw": 291, "make_d": 292, "make_lcmv": 293, "make_lcmv_resolution_matrix": 294, "rap_mus": 295, "read_beamform": 296, "conductormodel": 297, "convert_flash_mri": 298, "distance_to_bem": 299, "fit_sphere_to_headshap": 300, "get_fitting_dig": 301, "make_flash_bem": 302, "make_watershed_bem": 304, "channel_indices_by_typ": 305, "channel_typ": 306, "digmontag": 307, "combine_channel": 309, "compute_dev_head_t": 310, "compute_native_head_t": 311, "equalize_channel": [312, 428], "find_ch_adjac": 313, "find_layout": 314, "fix_mag_coil_typ": 315, "generate_2d_layout": 316, "get_builtin_ch_adjac": 317, "get_builtin_montag": 318, "make_1020_channel_select": 319, "make_dig_montag": 320, "make_eeg_layout": 321, "make_grid_layout": 322, "make_standard_montag": 323, "read_ch_adjac": 324, "read_custom_montag": 325, "read_dig_captrak": 326, "read_dig_dat": 327, "read_dig_egi": 328, "read_dig_fif": 329, "read_dig_hpt": 330, "read_dig_localit": 331, "read_dig_polhemus_isotrak": 332, "read_layout": 333, "read_polhemus_fastscan": 334, "rename_channel": [335, 626], "chpi": [336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347], "compute_chpi_amplitud": 336, "compute_chpi_loc": 337, "compute_chpi_snr": 338, "compute_head_po": 339, "extract_chpi_locs_ctf": 340, "extract_chpi_locs_kit": 341, "filter_chpi": 342, "get_active_chpi": 343, "get_chpi_info": 344, "head_pos_to_trans_rot_t": 345, "read_head_po": 346, "write_head_po": 347, "combine_evok": 348, "compute_covari": 349, "compute_proj_epoch": 350, "compute_proj_evok": 351, "compute_proj_raw": 352, "compute_rank": 353, "compute_raw_covari": 354, "compute_source_morph": 355, "concatenate_epoch": 356, "concatenate_ev": 357, "concatenate_raw": 358, "convert_forward_solut": 359, "estimate_head_mri_t": 361, "get_mni_fiduci": 362, "cov": [363, 364, 365, 856], "compute_whiten": 363, "prepare_noise_cov": 364, "create_default_subject": 366, "create_info": 367, "cuda": [368, 369, 370, 828], "get_cuda_memori": 368, "init_cuda": 369, "set_cuda_devic": 370, "bst_auditori": 371, "data_path": [371, 372, 373, 376, 377, 384, 386, 387, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 401], "bst_raw": 372, "bst_rest": 373, "load_data": [374, 388], "epilepsy_ecog": 376, "erp_cor": 377, "fetch_aparc_sub_parcel": 378, "fetch_dataset": 379, "fetch_fsaverag": 380, "fetch_hcp_mmp_parcel": 381, "fetch_infant_templ": 382, "fetch_phantom": 383, "fnirs_motor": 384, "has_dataset": 385, "hf_sef": 386, "kiloword": [387, 847], "misc": 389, "mtrf": [390, 847], "multimod": [391, 847], "phantom_4dbti": 393, "refmeg_nois": 394, "sleep_physionet": [396, 397], "ag": 396, "fetch_data": [396, 397], "temazepam": 397, "somato": 398, "spm_face": 399, "visual_92_categori": 401, "decimate_surfac": 402, "generalizingestim": 406, "linearmodel": 407, "receptivefield": 409, "slidingestim": 413, "temporalfilt": 414, "timedelayingridg": 415, "timefrequ": 416, "unsupervisedspatialfilt": 417, "compute_em": 419, "cross_val_multiscor": 420, "get_coef": 421, "dig_mri_dist": 422, "get_phantom_dipol": 423, "average_mov": 424, "combine_event_id": 425, "equalize_epoch_count": 426, "define_target_ev": 429, "match_event_nam": 430, "shift_time_ev": 431, "events_from_annot": 432, "export_epoch": 433, "export_evok": 434, "export_evokeds_mff": 435, "export_raw": 436, "extract_label_time_cours": 437, "construct_iir_filt": 438, "create_filt": 439, "estimate_ringing_sampl": 440, "filter_data": 441, "notch_filt": 442, "find_ev": 444, "find_stim_step": 445, "fit_dipol": 446, "compute_depth_prior": 447, "compute_orient_prior": 448, "restrict_forward_to_label": 449, "restrict_forward_to_stc": 450, "get_config": 451, "get_config_path": 452, "get_head_surf": 453, "get_meg_helmet_surf": 454, "get_montage_volume_label": 455, "get_volume_labels_from_aseg": 456, "get_volume_labels_from_src": 457, "grade_to_tri": 458, "grade_to_vertic": 459, "grand_averag": 460, "grow_label": 461, "locate_ieeg": 463, "head_to_mni": 464, "head_to_mri": 465, "inverse_spars": [466, 467, 468, 469], "gamma_map": 466, "make_stc_from_dipol": 467, "mixed_norm": 468, "tf_mixed_norm": 469, "io": [470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502], "baseraw": 470, "rawarrai": 472, "anonymize_info": 473, "read_mrk": 474, "read_fiduci": 475, "read_info": 476, "read_raw": 477, "read_raw_artemis123": 478, "read_raw_bdf": 479, "read_raw_boxi": 480, "read_raw_brainvis": 481, "read_raw_bti": 482, "read_raw_cnt": 483, "read_raw_ctf": 484, "read_raw_curri": 485, "read_raw_edf": 486, "read_raw_eeglab": 487, "read_raw_egi": 488, "read_raw_eximia": 489, "read_raw_fieldtrip": 490, "read_raw_fif": 491, "read_raw_gdf": 492, "read_raw_hitachi": 493, "read_raw_kit": 494, "read_raw_nedf": 495, "read_raw_nicolet": 496, "read_raw_nihon": 497, "read_raw_nirx": 498, "read_raw_persyst": 499, "read_raw_snirf": 500, "write_fiduci": 502, "select_sourc": 503, "label_sign_flip": 504, "labels_to_stc": 505, "make_ad_hoc_cov": 506, "make_bem_model": 507, "make_bem_solut": 508, "make_field_map": 509, "make_fixed_length_epoch": 510, "make_fixed_length_ev": 511, "make_forward_dipol": 512, "make_forward_solut": 513, "make_sphere_model": 514, "merge_ev": 515, "minimum_norm": [516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535], "apply_invers": 517, "apply_inverse_cov": 518, "apply_inverse_epoch": 519, "apply_inverse_raw": 520, "apply_inverse_tfr_epoch": 521, "compute_rank_invers": 522, "compute_source_psd": 523, "compute_source_psd_epoch": 524, "estimate_snr": 525, "get_cross_talk": 526, "get_point_spread": 527, "make_inverse_oper": 528, "make_inverse_resolution_matrix": 529, "prepare_inverse_oper": 530, "read_inverse_oper": 531, "resolution_metr": 532, "source_band_induced_pow": 533, "source_induced_pow": 534, "write_inverse_oper": 535, "morph_label": 536, "morph_source_spac": 537, "open_doc": 538, "open_report": 539, "parse_config": 540, "pick_channel": 541, "pick_channels_cov": 542, "pick_channels_forward": 543, "pick_channels_regexp": 544, "pick_ev": 545, "pick_info": 546, "pick_typ": 547, "pick_types_forward": 548, "eogregress": 549, "annotate_amplitud": 552, "annotate_break": 553, "annotate_mov": 554, "annotate_muscle_zscor": 555, "annotate_nan": 556, "compute_average_dev_head_t": 557, "compute_bridged_electrod": 558, "compute_current_source_dens": 559, "compute_fine_calibr": 560, "compute_maxwell_basi": 561, "corrmap": 564, "cortical_signal_suppress": 565, "create_ecg_epoch": 566, "create_eog_epoch": 567, "equalize_bad": 568, "find_bad_channels_maxwel": 569, "find_ecg_ev": 570, "find_eog_ev": 571, "fix_stim_artifact": 572, "ica_find_ecg_ev": 573, "ica_find_eog_ev": 574, "ieeg": 575, "project_sensors_onto_brain": 575, "infomax": 576, "interpolate_bridged_electrod": 577, "maxwell_filt": 578, "maxwell_filter_prepare_emptyroom": 579, "beer_lambert_law": 580, "optical_dens": 581, "scalp_coupling_index": 582, "short_channel": 583, "source_detector_dist": 584, "temporal_derivative_distribution_repair": 585, "oversampled_temporal_project": 586, "peak_find": 587, "read_eog_regress": 588, "read_fine_calibr": 589, "read_ica": 590, "read_ica_eeglab": 591, "realign_raw": 592, "regress_artifact": 593, "write_fine_calibr": 594, "random_parcel": 595, "read_annot": 596, "read_bem_solut": 597, "read_bem_surfac": 598, "read_cov": 599, "read_dipol": 600, "read_epoch": 601, "read_epochs_eeglab": 602, "read_epochs_fieldtrip": 603, "read_epochs_kit": 604, "read_ev": 605, "read_evoked_besa": 606, "read_evoked_fieldtrip": 607, "read_evok": 608, "read_evokeds_mff": 609, "read_forward_solut": 610, "read_freesurfer_lut": 611, "read_label": 612, "read_labels_from_annot": 613, "read_lta": 614, "read_morph_map": 615, "read_proj": 616, "read_reject_paramet": 617, "read_source_estim": 618, "read_source_morph": 619, "read_source_spac": 620, "read_surfac": 621, "read_talxfm": 622, "read_tran": 623, "read_tri": 624, "read_vectorview_select": 625, "scale_bem": 627, "scale_label": 628, "scale_mri": 629, "scale_source_spac": 630, "sensitivity_map": 631, "set_bipolar_refer": 632, "set_cache_dir": 633, "set_config": 634, "set_eeg_refer": 635, "set_log_fil": 636, "set_log_level": 637, "setup_volume_source_spac": 639, "sourcesimul": 640, "add_chpi": 641, "add_ecg": 642, "add_eog": 643, "add_nois": 644, "cosine_scor": 645, "f1_score": 646, "peak_position_error": 647, "precision_scor": 648, "recall_scor": 649, "region_localization_error": 650, "roc_auc_scor": 651, "spatial_deviation_error": 652, "select_source_in_label": 653, "simulate_evok": 654, "simulate_raw": 655, "simulate_sparse_stc": 656, "simulate_stc": 657, "source_spac": [658, 659], "compute_distance_to_sensor": 658, "get_decimated_surfac": 659, "spatial_dist_adjac": 660, "spatial_inter_hemi_adjac": 661, "spatial_src_adjac": 662, "spatial_tris_adjac": 663, "spatio_temporal_dist_adjac": 664, "spatio_temporal_src_adjac": 665, "spatio_temporal_tris_adjac": 666, "split_label": 667, "stat": [668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684], "bonferroni_correct": 668, "bootstrap_confidence_interv": 669, "combine_adjac": 670, "f_mway_rm": 671, "f_onewai": 672, "f_threshold_mway_rm": 673, "fdr_correct": 674, "linear_regress": 675, "linear_regression_raw": 676, "permutation_cluster_1samp_test": 677, "permutation_cluster_test": 678, "permutation_t_test": 679, "spatio_temporal_cluster_1samp_test": 680, "spatio_temporal_cluster_test": 681, "summarize_clusters_stc": 682, "ttest_1samp_no_p": 683, "ttest_ind_no_p": 684, "stc_near_sensor": 685, "stc_to_label": 686, "complete_surface_info": 687, "read_curvatur": 688, "time_frequ": [690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724], "averagetfr": 690, "crossspectraldens": 691, "epochstfr": 693, "csd_array_fouri": 695, "csd_array_morlet": 696, "csd_array_multitap": 697, "csd_fourier": 698, "csd_morlet": 699, "csd_multitap": 700, "csd_tfr": 701, "dpss_window": 702, "fit_iir_model_raw": 703, "istft": 704, "pick_channels_csd": 706, "psd_array_multitap": 707, "psd_array_welch": 708, "psd_multitap": 709, "psd_welch": 710, "read_csd": 711, "read_spectrum": 712, "read_tfr": 713, "stft": 714, "stftfreq": 715, "cwt": 716, "tfr_array_morlet": 718, "tfr_array_multitap": 719, "tfr_array_stockwel": 720, "tfr_morlet": 721, "tfr_multitap": 722, "tfr_stockwel": 723, "write_tfr": 724, "transform_surface_to": 725, "apply_volume_registr": 727, "compute_volume_registr": 728, "quat_to_rot": 729, "read_ras_mni_t": 730, "rot_to_quat": 731, "use_coil_def": 732, "use_log_level": 733, "util": [734, 735, 856], "deprec": [734, 830], "warn": [735, 830], "verbos": 736, "vertex_to_mni": 737, "clickableimag": 739, "figure3d": 740, "add_background_imag": 741, "centers_to_edg": 742, "circular_layout": 743, "close_3d_figur": 744, "close_all_3d_figur": 745, "create_3d_figur": 747, "get_3d_backend": 748, "get_brain_class": 749, "get_browser_backend": 750, "iter_topographi": 751, "link_brain": 752, "mne_analyze_colormap": 753, "plot_align": 754, "plot_arrowmap": 755, "plot_bem": 756, "plot_brain_colorbar": 757, "plot_bridged_electrod": 758, "plot_ch_adjac": 759, "plot_channel_labels_circl": 760, "plot_chpi_snr": 761, "plot_compare_evok": 762, "plot_cov": 763, "plot_csd": 764, "plot_dipole_amplitud": 765, "plot_dipole_loc": 766, "plot_drop_log": 767, "plot_epoch": 768, "plot_epochs_imag": 769, "plot_epochs_psd_topomap": 770, "plot_ev": 771, "plot_evok": 772, "plot_evoked_field": 773, "plot_evoked_imag": 774, "plot_evoked_joint": 775, "plot_evoked_topo": 776, "plot_evoked_topomap": 777, "plot_evoked_whit": 778, "plot_filt": 779, "plot_head_posit": 780, "plot_ica_compon": 781, "plot_ica_overlai": 782, "plot_ica_properti": 783, "plot_ica_scor": 784, "plot_ica_sourc": 785, "plot_ideal_filt": 786, "plot_layout": 787, "plot_montag": 788, "plot_projs_joint": 789, "plot_projs_topomap": 790, "plot_raw": 791, "plot_raw_psd": 792, "plot_regression_weight": 793, "plot_sensor": 794, "plot_snr_estim": 795, "plot_source_estim": 796, "plot_sparse_source_estim": 797, "plot_tfr_topomap": 798, "plot_topo_image_epoch": 799, "plot_vector_source_estim": 801, "plot_volume_source_estim": 802, "set_3d_backend": 803, "set_3d_opt": 804, "set_3d_titl": 805, "set_3d_view": 806, "set_browser_backend": 807, "snapshot_brain_montag": 808, "use_3d_backend": 809, "use_browser_backend": 810, "warp_montage_volum": 811, "write_bem_solut": 813, "write_bem_surfac": 814, "write_cov": 815, "write_ev": 816, "write_evok": 817, "write_forward_solut": 818, "write_head_bem": 819, "write_label": 820, "write_labels_to_annot": 821, "write_proj": 822, "write_source_spac": 823, "write_surfac": 824, "write_tran": 825, "glossari": 826, "homepag": 827, "jupyt": 828, "notebook": 828, "jupyterlab": 828, "fab": [828, 836], "fa": [828, 836], "window": [828, 850], "instal": [828, 829, 831, 832, 833, 834, 835, 836, 837], "headless": 828, "server": 828, "develop": [828, 830, 838, 849], "version": [828, 838, 871], "gpu": 828, "acceler": 828, "screen": 828, "mesa": 828, "troubleshoot": [828, 836], "troubl": 828, "upgrad": [828, 838], "maco": [828, 836, 850], "contribut": 830, "guid": 830, "git": 830, "gnu": 830, "fork": 830, "repositori": 830, "virtual": 830, "github": 830, "ssh": 830, "convent": 830, "requir": [830, 836], "must": 830, "have": [830, 846, 850], "coverag": 830, "document": [830, 852, 854, 856, 858, 859], "avoid": 830, "api": [830, 848, 859, 861, 871], "possibl": 830, "decor": 830, "changelog": [830, 871], "contributor": 830, "recur": 830, "pull": 830, "request": 830, "pr": 830, "fast": 830, "thorough": 830, "style": 830, "adher": 830, "guidelin": [830, 858], "we": 830, "mostli": [830, 848], "follow": 830, "numpi": [830, 853], "docstr": 830, "everywher": 830, "guidanc": 830, "organ": [830, 848, 853], "return": 830, "run": [830, 850], "suit": [830, 837], "build": 830, "pip": 834, "conda": 834, "depend": [834, 871], "minim": 834, "scenario": 834, "appl": 836, "download": [836, 850], "help": [837, 850, 851], "updat": [838, 859], "martino": 841, "cpp": 842, "most": 843, "typic": 846, "m": [846, 850], "recommend": 846, "subdivis": 846, "icosahedron": 846, "octahedron": 846, "creation": 846, "approxim": 846, "area": 846, "been": 846, "assum": 846, "1000": 846, "cm2": 846, "mesh": [846, 850, 853], "triangul": 846, "boundari": [846, 853], "element": [846, 853], "trigger": 847, "state": 847, "somatosensori": 847, "92": 847, "categori": 847, "polysomnograph": 847, "databas": [847, 859], "miscellan": 847, "integr": [848, 859], "scientif": 848, "stack": 848, "submodul": 848, "unifi": 848, "In": [848, 859], "frequent": 850, "ask": 850, "question": 850, "faq": 850, "issu": 850, "can": 850, "pyvista": 850, "extrem": 850, "even": 850, "sure": 850, "x": 850, "my": 850, "y": 850, "think": 850, "bug": [850, 871], "danger": 850, "pickl": 850, "later": 850, "onc": 850, "again": 850, "cpu": 850, "though": 850, "didn": 850, "tell": 850, "mysteri": 850, "take": 850, "forev": 850, "incorrect": 850, "govern": 852, "bdfl": 852, "steer": [852, 858], "council": [852, 858], "membership": 852, "conflict": 852, "privat": 852, "commun": [852, 858], "decis": 852, "histori": [852, 858], "acknowledg": 852, "licens": 852, "implement": 853, "detail": [853, 856], "intern": 853, "float": 853, "precis": 853, "effici": [853, 859], "preload": 853, "explicitli": 853, "access": [853, 859], "concept": 853, "subspac": 853, "tessel": 853, "discret": 853, "geometri": [853, 856], "coil": [853, 856], "magnet": 853, "normal": 853, "accur": 853, "accuraci": 853, "purpos": 853, "patch": 853, "constraint": 853, "weight": 853, "matlab": 856, "routin": 856, "w": 856, "demonstr": 856, "toolbox": 856, "constant": 856, "taginfo": 856, "dig": 856, "coildef": 856, "see": 856, "ch": 856, "proj": 856, "comp": 856, "mea": 856, "surf": 856, "inv": 856, "reginv": 856, "noisenorm": 856, "fill": 856, "mne_prepare_inverse_oper": 856, "benevol": 858, "dictat": 858, "life": 858, "particip": 858, "lead": 858, "roadmap": 859, "page": 859, "openmeeg": 859, "improv": 859, "bind": 859, "progress": 859, "divers": 859, "equiti": 859, "inclus": 859, "dei": 859, "deep": 859, "better": 859, "db": 859, "pediatr": 859, "complet": 859, "overhaul": 859, "realtim": 863, "dev0": 871, "0": 871, "2022": 871, "08": 871, "03": 871, "behavior": 871, "author": 871, "21": 871, "24": 871, "2021": 871, "11": 871, "23": 871, "04": 871, "27": 871, "22": 871, "2020": 871, "17": 871, "09": 871, "20": 871, "19": 871, "2019": 871, "18": 871, "05": 871, "2018": 871, "16": 871, "01": 871, "2017": 871, "10": 871, "14": 871, "13": 871, "2016": 871, "2015": 871, "26": 871, "9": 871, "8": 871, "2014": 871, "06": 871, "25": 871, "7": 871, "2013": 871, "6": 871, "5": 871, "2012": 871, "2011": 871}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinxcontrib.bibtex": 9, "sphinx": 57}, "alltitles": {"Connectivity Analysis Examples": [[0, "connectivity-analysis-examples"], [27, "connectivity-analysis-examples"]], "Brainstorm raw (median nerve) dataset": [[1, "brainstorm-raw-median-nerve-dataset"]], "References": [[1, "references"], [4, "references"], [8, "references"], [10, "references"], [12, "references"], [13, "references"], [15, "references"], [16, "references"], [18, "references"], [19, "references"], [21, "references"], [32, "references"], [34, "references"], [39, "references"], [41, "references"], [42, "references"], [43, "references"], [45, "references"], [50, "references"], [53, "references"], [54, "references"], [57, "references"], [58, "references"], [64, "references"], [68, "references"], [69, "references"], [72, "references"], [73, "references"], [76, "references"], [80, "references"], [81, "references"], [85, "references"], [91, "references"], [98, "references"], [106, "references"], [109, "references"], [110, "references"], [114, "references"], [116, "references"], [118, "references"], [123, "references"], [126, "references"], [132, "references"], [135, "references"], [139, "references"], [142, "references"], [149, "references"], [153, "references"], [155, "references"], [160, "references"], [174, "references"], [176, "references"], [178, "references"], [181, "references"], [182, "references"], [189, "references"], [192, "references"], [193, "references"], [197, "references"], [199, "references"], [201, "references"], [202, "references"], [203, "references"], [204, "references"], [205, "references"], [207, "references"], [219, "references"], [222, "references"], [223, "references"], [227, "references"], [235, "references"], [846, "references"], [847, "references"], [850, "references"], [853, "references"]], "HF-SEF dataset": [[2, "hf-sef-dataset"]], "Examples on open datasets": [[3, "examples-on-open-datasets"], [27, "examples-on-open-datasets"]], "Single trial linear regression analysis with the LIMO dataset": [[4, "single-trial-linear-regression-analysis-with-the-limo-dataset"]], "About the data": [[4, "about-the-data"]], "Load the data": [[4, "load-the-data"], [135, "load-the-data"], [139, "load-the-data"], [157, "load-the-data"]], "Visualize events": [[4, "visualize-events"]], "Visualize condition ERPs": [[4, "visualize-condition-erps"]], "Visualize effect of stimulus phase-coherence": [[4, "visualize-effect-of-stimulus-phase-coherence"]], "Prepare data for linear regression analysis": [[4, "prepare-data-for-linear-regression-analysis"]], "Define predictor variables and design matrix": [[4, "define-predictor-variables-and-design-matrix"]], "Extract regression coefficients": [[4, "extract-regression-coefficients"]], "Plot model results": [[4, "plot-model-results"]], "Optically pumped magnetometer (OPM) data": [[5, "optically-pumped-magnetometer-opm-data"]], "Prepare data for localization": [[5, "prepare-data-for-localization"]], "Perform dipole fitting": [[5, "perform-dipole-fitting"]], "Perform minimum-norm localization": [[5, "perform-minimum-norm-localization"]], "Computation times": [[6, "computation-times"], [20, "computation-times"], [25, "computation-times"], [55, "computation-times"], [65, "computation-times"], [82, "computation-times"], [88, "computation-times"], [99, "computation-times"], [103, "computation-times"], [127, "computation-times"], [137, "computation-times"], [146, "computation-times"], [152, "computation-times"], [162, "computation-times"], [172, "computation-times"], [185, "computation-times"], [191, "computation-times"], [195, "computation-times"], [210, "computation-times"], [216, "computation-times"], [221, "computation-times"], [229, "computation-times"], [234, "computation-times"], [239, "computation-times"]], "From raw data to dSPM on SPM Faces dataset": [[7, "from-raw-data-to-dspm-on-spm-faces-dataset"]], "Motor imagery decoding from EEG data using the Common Spatial Pattern (CSP)": [[8, "motor-imagery-decoding-from-eeg-data-using-the-common-spatial-pattern-csp"]], "Decoding in time-frequency space using Common Spatial Patterns (CSP)": [[9, "decoding-in-time-frequency-space-using-common-spatial-patterns-csp"]], "Representational Similarity Analysis": [[10, "representational-similarity-analysis"]], "Decoding source space data": [[11, "decoding-source-space-data"]], "Continuous Target Decoding with SPoC": [[12, "continuous-target-decoding-with-spoc"]], "Decoding sensor space data with generalization across time and conditions": [[13, "decoding-sensor-space-data-with-generalization-across-time-and-conditions"]], "Analysis of evoked response using ICA and PCA reduction techniques": [[14, "analysis-of-evoked-response-using-ica-and-pca-reduction-techniques"]], "XDAWN Decoding From EEG data": [[15, "xdawn-decoding-from-eeg-data"]], "Compute effect-matched-spatial filtering (EMS)": [[16, "compute-effect-matched-spatial-filtering-ems"]], "Machine Learning (Decoding, Encoding, and MVPA)": [[17, "machine-learning-decoding-encoding-and-mvpa"], [27, "machine-learning-decoding-encoding-and-mvpa"]], "Linear classifier on sensor data with plot patterns and filters": [[18, "linear-classifier-on-sensor-data-with-plot-patterns-and-filters"]], "Decoding in sensor space using a LogisticRegression classifier": [[18, "decoding-in-sensor-space-using-a-logisticregression-classifier"]], "Receptive Field Estimation and Prediction": [[19, "receptive-field-estimation-and-prediction"]], "Load the data from the publication": [[19, "load-the-data-from-the-publication"]], "Create and fit a receptive field model": [[19, "create-and-fit-a-receptive-field-model"]], "Investigate model coefficients": [[19, "investigate-model-coefficients"], [19, "id5"]], "Create and fit a stimulus reconstruction model": [[19, "create-and-fit-a-stimulus-reconstruction-model"]], "Visualize stimulus reconstruction": [[19, "visualize-stimulus-reconstruction"]], "Compute Spectro-Spatial Decomposition (SSD) spatial filters": [[21, "compute-spectro-spatial-decomposition-ssd-spatial-filters"]], "Epoched data": [[21, "epoched-data"]], "Display sensitivity maps for EEG and MEG sensors": [[22, "display-sensitivity-maps-for-eeg-and-meg-sensors"]], "Forward modeling": [[23, "forward-modeling"], [27, "forward-modeling"]], "Generate a left cerebellum volume source space": [[24, "generate-a-left-cerebellum-volume-source-space"]], "Use source space morphing": [[26, "use-source-space-morphing"]], "Examples Gallery": [[27, "examples-gallery"]], "Input/Output": [[27, "input-output"], [61, "input-output"]], "Data Simulation": [[27, "data-simulation"], [86, "data-simulation"]], "Preprocessing": [[27, "preprocessing"], [75, "preprocessing"], [106, "preprocessing"], [139, "preprocessing"], [163, "preprocessing"], [164, "preprocessing"], [209, "preprocessing"], [846, "preprocessing"], [860, "preprocessing"]], "Visualization": [[27, "visualization"], [54, "visualization"], [119, "visualization"], [175, "visualization"], [830, "visualization"], [870, "visualization"]], "Time-Frequency Examples": [[27, "time-frequency-examples"], [102, "time-frequency-examples"]], "Statistics Examples": [[27, "statistics-examples"], [95, "statistics-examples"]], "Inverse problem and source analysis": [[27, "inverse-problem-and-source-analysis"], [35, "inverse-problem-and-source-analysis"]], "Compute MNE-dSPM inverse solution on single epochs": [[28, "compute-mne-dspm-inverse-solution-on-single-epochs"]], "Compute sLORETA inverse solution on raw data": [[29, "compute-sloreta-inverse-solution-on-raw-data"]], "Compute MNE-dSPM inverse solution on evoked data in volume source space": [[30, "compute-mne-dspm-inverse-solution-on-evoked-data-in-volume-source-space"]], "Source localization with a custom inverse solver": [[31, "source-localization-with-a-custom-inverse-solver"]], "Compute source power using DICS beamformer": [[32, "compute-source-power-using-dics-beamformer"]], "Compute evoked ERS source power using DICS, LCMV beamformer, and dSPM": [[33, "compute-evoked-ers-source-power-using-dics-lcmv-beamformer-and-dspm"]], "Compute covariances": [[33, "compute-covariances"]], "Compute some source estimates": [[33, "compute-some-source-estimates"]], "Plot source estimates": [[33, "plot-source-estimates"]], "Compute a sparse inverse solution using the Gamma-MAP empirical Bayesian method": [[34, "compute-a-sparse-inverse-solution-using-the-gamma-map-empirical-bayesian-method"]], "Extracting time course from source_estimate object": [[36, "extracting-time-course-from-source-estimate-object"]], "Generate a functional label from source estimates": [[37, "generate-a-functional-label-from-source-estimates"]], "Extracting the time series of activations in a label": [[38, "extracting-the-time-series-of-activations-in-a-label"]], "Compute inverse solution": [[38, "compute-inverse-solution"], [40, "compute-inverse-solution"], [175, "compute-inverse-solution"]], "View source activations": [[38, "view-source-activations"]], "Using vector solutions": [[38, "using-vector-solutions"]], "Compute sparse inverse solution with mixed norm: MxNE and irMxNE": [[39, "compute-sparse-inverse-solution-with-mixed-norm-mxne-and-irmxne"]], "Compute MNE inverse solution on evoked data with a mixed source space": [[40, "compute-mne-inverse-solution-on-evoked-data-with-a-mixed-source-space"]], "Set up our source space": [[40, "set-up-our-source-space"]], "View the source space": [[40, "view-the-source-space"]], "Compute the fwd matrix": [[40, "compute-the-fwd-matrix"]], "Plot the mixed source estimate": [[40, "plot-the-mixed-source-estimate"]], "Plot the surface": [[40, "plot-the-surface"]], "Plot the volume": [[40, "plot-the-volume"]], "Process labels": [[40, "process-labels"]], "Compute source power estimate by projecting the covariance with MNE": [[41, "compute-source-power-estimate-by-projecting-the-covariance-with-mne"]], "Compute empty-room covariance": [[41, "compute-empty-room-covariance"]], "Epoch the data": [[41, "epoch-the-data"]], "Compute and plot covariances": [[41, "compute-and-plot-covariances"]], "Apply inverse operator to covariance": [[41, "apply-inverse-operator-to-covariance"]], "Morph surface source estimate": [[42, "morph-surface-source-estimate"]], "Setting up SourceMorph for SourceEstimate": [[42, "setting-up-sourcemorph-for-sourceestimate"]], "Apply morph to (Vector) SourceEstimate": [[42, "apply-morph-to-vector-sourceestimate"]], "Plot results": [[42, "plot-results"], [43, "plot-results"]], "Reading and writing SourceMorph from and to disk": [[42, "reading-and-writing-sourcemorph-from-and-to-disk"], [43, "reading-and-writing-sourcemorph-from-and-to-disk"]], "Morph volumetric source estimate": [[43, "morph-volumetric-source-estimate"]], "Get a SourceMorph object for VolSourceEstimate": [[43, "get-a-sourcemorph-object-for-volsourceestimate"]], "Apply morph to VolSourceEstimate": [[43, "apply-morph-to-volsourceestimate"]], "Convert morphed VolSourceEstimate into NIfTI": [[43, "convert-morphed-volsourceestimate-into-nifti"]], "Computing source timecourses with an XFit-like multi-dipole model": [[44, "computing-source-timecourses-with-an-xfit-like-multi-dipole-model"]], "Compute iterative reweighted TF-MxNE with multiscale time-frequency dictionary": [[45, "compute-iterative-reweighted-tf-mxne-with-multiscale-time-frequency-dictionary"]], "Visualize source leakage among labels using a circular graph": [[46, "visualize-source-leakage-among-labels-using-a-circular-graph"]], "Load forward solution and inverse operator": [[46, "load-forward-solution-and-inverse-operator"]], "Read and organise labels for cortical parcellation": [[46, "read-and-organise-labels-for-cortical-parcellation"]], "Compute point-spread function summaries (PCA) for all labels": [[46, "compute-point-spread-function-summaries-pca-for-all-labels"]], "Evaluate leakage based on label-to-label PSF correlations": [[46, "evaluate-leakage-based-on-label-to-label-psf-correlations"]], "Save the figure (optional)": [[46, "save-the-figure-optional"]], "Plot PSFs for individual labels": [[46, "plot-psfs-for-individual-labels"]], "Plot point-spread functions (PSFs) and cross-talk functions (CTFs)": [[47, "plot-point-spread-functions-psfs-and-cross-talk-functions-ctfs"]], "Visualize": [[47, "visualize"], [48, "visualize"], [49, "visualize"]], "Compute cross-talk functions for LCMV beamformers": [[48, "compute-cross-talk-functions-for-lcmv-beamformers"]], "Compute LCMV filters with different data covariance matrices": [[48, "compute-lcmv-filters-with-different-data-covariance-matrices"]], "Compute resolution matrices for the two LCMV beamformers": [[48, "compute-resolution-matrices-for-the-two-lcmv-beamformers"]], "Plot point-spread functions (PSFs) for a volume": [[49, "plot-point-spread-functions-psfs-for-a-volume"]], "Compute Rap-Music on evoked data": [[50, "compute-rap-music-on-evoked-data"]], "Reading an inverse operator": [[51, "reading-an-inverse-operator"]], "Reading an STC file": [[52, "reading-an-stc-file"]], "Compute spatial resolution metrics in source space": [[53, "compute-spatial-resolution-metrics-in-source-space"]], "MNE": [[53, "mne"]], "dSPM": [[53, "dspm"], [853, "dspm"]], "Visualize results": [[53, "visualize-results"]], "Compute spatial resolution metrics to compare MEG with EEG+MEG": [[54, "compute-spatial-resolution-metrics-to-compare-meg-with-eeg-meg"]], "EEGMEG": [[54, "eegmeg"]], "MEG": [[54, "meg"]], "Estimate data SNR using an inverse": [[56, "estimate-data-snr-using-an-inverse"]], "Computing source space SNR": [[57, "computing-source-space-snr"]], "EEG": [[57, "eeg"]], "Compute MxNE with time-frequency sparse prior": [[58, "compute-mxne-with-time-frequency-sparse-prior"]], "Plotting the full vector-valued MNE solution": [[59, "plotting-the-full-vector-valued-mne-solution"]], "Getting averaging info from .fif files": [[60, "getting-averaging-info-from-fif-files"]], "How to use data in neural ensemble (NEO) format": [[62, "how-to-use-data-in-neural-ensemble-neo-format"]], "Reading/Writing a noise covariance matrix": [[63, "reading-writing-a-noise-covariance-matrix"]], "Reading XDF EEG data": [[64, "reading-xdf-eeg-data"]], "Cortical Signal Suppression (CSS) for removal of cortical signals": [[66, "cortical-signal-suppression-css-for-removal-of-cortical-signals"]], "Define target events based on time lag, plot evoked response": [[67, "define-target-events-based-on-time-lag-plot-evoked-response"]], "Identify EEG Electrodes Bridged by too much Gel": [[68, "ex-eeg-bridging"]], "Compute Electrical Distance Metric": [[68, "compute-electrical-distance-metric"]], "Examine an Electrical Distance Matrix": [[68, "examine-an-electrical-distance-matrix"]], "Examine the Distribution of Electrical Distances": [[68, "examine-the-distribution-of-electrical-distances"]], "Plot Electrical Distances on a Topomap": [[68, "plot-electrical-distances-on-a-topomap"]], "Plot the Raw Voltage Time Series for Bridged Electrodes": [[68, "plot-the-raw-voltage-time-series-for-bridged-electrodes"]], "Compare Bridging Across Subjects in the EEGBCI Dataset": [[68, "compare-bridging-across-subjects-in-the-eegbci-dataset"]], "The Relationship Between Bridging and Impedances": [[68, "the-relationship-between-bridging-and-impedances"]], "Summary": [[68, "summary"], [165, "summary"], [173, "summary"], [196, "summary"], [197, "summary"], [199, "summary"]], "Transform EEG data using current source density (CSD)": [[69, "transform-eeg-data-using-current-source-density-csd"]], "Show EOG artifact timing": [[70, "show-eog-artifact-timing"]], "Reduce EOG artifacts through regression": [[71, "reduce-eog-artifacts-through-regression"]], "Import packages and load data": [[71, "import-packages-and-load-data"]], "Perform regression and remove EOG": [[71, "perform-regression-and-remove-eog"]], "Before/after comparison": [[71, "before-after-comparison"]], "Find MEG reference channel artifacts": [[72, "find-meg-reference-channel-artifacts"]], "Visualise NIRS artifact correction methods": [[73, "visualise-nirs-artifact-correction-methods"]], "Import data": [[73, "import-data"]], "Add artificial artifacts to data": [[73, "add-artificial-artifacts-to-data"]], "Apply temporal derivative distribution repair": [[73, "apply-temporal-derivative-distribution-repair"]], "Compare the different ICA algorithms in MNE": [[74, "compare-the-different-ica-algorithms-in-mne"]], "Interpolate bad channels for MEG/EEG channels": [[76, "interpolate-bad-channels-for-meg-eeg-channels"]], "Maxwell filter data with movement compensation": [[77, "maxwell-filter-data-with-movement-compensation"]], "Annotate movement artifacts and reestimate dev_head_t": [[78, "annotate-movement-artifacts-and-reestimate-dev-head-t"]], "Plot continuous head position with respect to the mean recording position": [[78, "plot-continuous-head-position-with-respect-to-the-mean-recording-position"]], "Plot raw data with annotated movement": [[78, "plot-raw-data-with-annotated-movement"]], "Annotate muscle artifacts": [[79, "annotate-muscle-artifacts"]], "Plot muscle z-scores across recording": [[79, "plot-muscle-z-scores-across-recording"]], "View the annotations": [[79, "view-the-annotations"]], "Removing muscle ICA components": [[80, "removing-muscle-ica-components"]], "Let\u2019s now replicate this on the EEGBCI dataset": [[80, "let-s-now-replicate-this-on-the-eegbci-dataset"]], "Plot sensor denoising using oversampled temporal projection": [[81, "plot-sensor-denoising-using-oversampled-temporal-projection"]], "Shifting time-scale in evoked data": [[83, "shifting-time-scale-in-evoked-data"]], "Remap MEG channel types": [[84, "remap-meg-channel-types"]], "XDAWN Denoising": [[85, "xdawn-denoising"]], "Compare simulated and estimated source activity": [[87, "compare-simulated-and-estimated-source-activity"]], "Define main parameters of sources": [[87, "define-main-parameters-of-sources"]], "Create simulated source activity": [[87, "create-simulated-source-activity"], [91, "create-simulated-source-activity"]], "Simulate raw data": [[87, "simulate-raw-data"], [91, "simulate-raw-data"]], "Compute evoked from raw data": [[87, "compute-evoked-from-raw-data"]], "Create true stcs corresponding to evoked": [[87, "create-true-stcs-corresponding-to-evoked"]], "Reconstruct simulated sources": [[87, "reconstruct-simulated-sources"]], "Compute performance scores for different source amplitude thresholds": [[87, "compute-performance-scores-for-different-source-amplitude-thresholds"]], "For region": [[87, "for-region"]], "For Dipoles": [[87, "for-dipoles"]], "Generate simulated evoked data": [[89, "generate-simulated-evoked-data"]], "Generate simulated raw data": [[90, "generate-simulated-raw-data"]], "Simulate raw data using subject anatomy": [[91, "simulate-raw-data-using-subject-anatomy"]], "Extract epochs and compute evoked responsses": [[91, "extract-epochs-and-compute-evoked-responsses"]], "Reconstruct simulated source time courses using dSPM inverse operator": [[91, "reconstruct-simulated-source-time-courses-using-dspm-inverse-operator"]], "Generate simulated source data": [[92, "generate-simulated-source-data"]], "Permutation F-test on sensor data with 1D cluster level": [[93, "permutation-f-test-on-sensor-data-with-1d-cluster-level"]], "FDR correction on T-test on sensor data": [[94, "fdr-correction-on-t-test-on-sensor-data"]], "Regression on continuous data (rER[P/F])": [[96, "regression-on-continuous-data-rer-p-f"]], "Permutation T-test on sensor data": [[97, "permutation-t-test-on-sensor-data"]], "Analysing continuous features with binning and regression in sensor space": [[98, "analysing-continuous-features-with-binning-and-regression-in-sensor-space"]], "Compute a cross-spectral density (CSD) matrix": [[100, "compute-a-cross-spectral-density-csd-matrix"]], "Compute Power Spectral Density of inverse solution from single epochs": [[101, "compute-power-spectral-density-of-inverse-solution-from-single-epochs"]], "Compute source space PSD in label": [[101, "compute-source-space-psd-in-label"]], "Compute power and phase lock in label of the source space": [[104, "compute-power-and-phase-lock-in-label-of-the-source-space"]], "Compute source power spectral density (PSD) in a label": [[105, "compute-source-power-spectral-density-psd-in-a-label"]], "Compute source power spectral density (PSD) of VectorView and OPM data": [[106, "compute-source-power-spectral-density-psd-of-vectorview-and-opm-data"]], "Alignment and forward": [[106, "alignment-and-forward"]], "Alpha": [[106, "alpha"]], "Beta": [[106, "beta"]], "Compute induced power in the source space with dSPM": [[107, "compute-induced-power-in-the-source-space-with-dspm"]], "Temporal whitening with AR model": [[108, "temporal-whitening-with-ar-model"]], "Compute and visualize ERDS maps": [[109, "compute-and-visualize-erds-maps"]], "Explore event-related dynamics for specific frequency bands": [[110, "explore-event-related-dynamics-for-specific-frequency-bands"]], "Time-frequency on simulated data (Multitaper vs. Morlet vs. Stockwell vs. Hilbert)": [[111, "time-frequency-on-simulated-data-multitaper-vs-morlet-vs-stockwell-vs-hilbert"]], "Simulate data": [[111, "simulate-data"]], "Calculate a time-frequency representation (TFR)": [[111, "calculate-a-time-frequency-representation-tfr"]], "Multitaper transform": [[111, "multitaper-transform"]], "Stockwell (S) transform": [[111, "stockwell-s-transform"]], "Morlet Wavelets": [[111, "morlet-wavelets"]], "Narrow-bandpass Filter and Hilbert Transform": [[111, "narrow-bandpass-filter-and-hilbert-transform"]], "Calculating a TFR without averaging over epochs": [[111, "calculating-a-tfr-without-averaging-over-epochs"]], "Operating on arrays": [[111, "operating-on-arrays"]], "How to convert 3D electrode positions to a 2D image": [[112, "how-to-convert-3d-electrode-positions-to-a-2d-image"]], "Load data": [[112, "load-data"], [113, "load-data"], [176, "load-data"]], "Project 3D electrodes to a 2D snapshot": [[112, "project-3d-electrodes-to-a-2d-snapshot"]], "Manually creating 2D electrode positions": [[112, "manually-creating-2d-electrode-positions"]], "Plotting with mne.viz.Brain": [[113, "plotting-with-mne-viz-brain"]], "Add source information": [[113, "add-source-information"]], "Modify the view of the brain": [[113, "modify-the-view-of-the-brain"]], "Highlight a region on the brain": [[113, "highlight-a-region-on-the-brain"]], "Include the head in the image": [[113, "include-the-head-in-the-image"]], "Add sensors positions": [[113, "add-sensors-positions"]], "Add current dipoles": [[113, "add-current-dipoles"]], "Create a screenshot for exporting the brain image": [[113, "create-a-screenshot-for-exporting-the-brain-image"]], "Visualize channel over epochs as an image": [[114, "visualize-channel-over-epochs-as-an-image"]], "Plotting EEG sensors on the scalp": [[115, "plotting-eeg-sensors-on-the-scalp"]], "Plotting topographic arrowmaps of evoked data": [[116, "plotting-topographic-arrowmaps-of-evoked-data"]], "Plotting topographic maps of evoked data": [[117, "plotting-topographic-maps-of-evoked-data"]], "Basic plot_topomap() options": [[117, "basic-plot-topomap-options"]], "Additional plot_topomap() options": [[117, "additional-plot-topomap-options"]], "More advanced usage": [[117, "more-advanced-usage"]], "Interpolating topomaps": [[117, "interpolating-topomaps"]], "Animating the topomap": [[117, "animating-the-topomap"]], "Whitening evoked data with a noise covariance": [[118, "whitening-evoked-data-with-a-noise-covariance"]], "Plotting sensor layouts of MEG systems": [[120, "plotting-sensor-layouts-of-meg-systems"]], "Neuromag": [[120, "neuromag"]], "CTF": [[120, "ctf"]], "BTi": [[120, "bti"]], "KIT": [[120, "kit"]], "Artemis123": [[120, "artemis123"]], "Plot the MNE brain and helmet": [[121, "plot-the-mne-brain-and-helmet"]], "Plotting sensor layouts of EEG systems": [[122, "plotting-sensor-layouts-of-eeg-systems"]], "Plot a cortical parcellation": [[123, "plot-a-cortical-parcellation"]], "Make figures more publication ready": [[124, "make-figures-more-publication-ready"]], "Imports": [[124, "imports"]], "Evoked plot with brain activation": [[124, "evoked-plot-with-brain-activation"]], "Custom timecourse with montage inset": [[124, "custom-timecourse-with-montage-inset"]], "Plot single trial activity, grouped by ROI and sorted by RT": [[125, "plot-single-trial-activity-grouped-by-roi-and-sorted-by-rt"]], "Show noise levels from empty room data": [[126, "show-noise-levels-from-empty-room-data"]], "Sensitivity map of SSP projections": [[128, "sensitivity-map-of-ssp-projections"]], "Compare evoked responses for different conditions": [[129, "compare-evoked-responses-for-different-conditions"]], "Plot custom topographies for MEG sensors": [[130, "plot-custom-topographies-for-meg-sensors"]], "Cross-hemisphere comparison": [[131, "cross-hemisphere-comparison"]], "Locating intracranial electrode contacts": [[132, "locating-intracranial-electrode-contacts"]], "Aligning the T1 to ACPC": [[132, "aligning-the-t1-to-acpc"]], "Freesurfer recon-all": [[132, "freesurfer-recon-all"]], "Aligning the CT to the MR": [[132, "aligning-the-ct-to-the-mr"]], "Marking the Location of Each Electrode Contact": [[132, "marking-the-location-of-each-electrode-contact"]], "Warping to a Common Atlas": [[132, "warping-to-a-common-atlas"]], "Working with sEEG data": [[133, "working-with-seeg-data"]], "Working with ECoG data": [[134, "working-with-ecog-data"]], "Load in data and perform basic preprocessing": [[134, "load-in-data-and-perform-basic-preprocessing"]], "Explore the electrodes on a template brain": [[134, "explore-the-electrodes-on-a-template-brain"]], "Compute frequency features of the data": [[134, "compute-frequency-features-of-the-data"]], "Visualize the time-evolution of the gamma power on the brain": [[134, "visualize-the-time-evolution-of-the-gamma-power-on-the-brain"]], "Sleep stage classification from polysomnography (PSG) data": [[135, "sleep-stage-classification-from-polysomnography-psg-data"]], "Read the PSG data and Hypnograms to create a raw object": [[135, "read-the-psg-data-and-hypnograms-to-create-a-raw-object"]], "Extract 30s events from annotations": [[135, "extract-30s-events-from-annotations"]], "Create Epochs from the data based on the events found in the annotations": [[135, "create-epochs-from-the-data-based-on-the-events-found-in-the-annotations"]], "Applying the same steps to the test data from Bob": [[135, "applying-the-same-steps-to-the-test-data-from-bob"]], "Feature Engineering": [[135, "feature-engineering"]], "Design a scikit-learn transformer from a Python function": [[135, "design-a-scikit-learn-transformer-from-a-python-function"]], "Multiclass classification workflow using scikit-learn": [[135, "multiclass-classification-workflow-using-scikit-learn"]], "Further analysis of the data": [[135, "further-analysis-of-the-data"]], "Exercise": [[135, "exercise"], [156, "exercise"], [193, "exercise"], [236, "exercise"]], "Clinical applications": [[136, "clinical-applications"], [163, "clinical-applications"]], "The Epochs data structure: discontinuous data": [[138, "the-epochs-data-structure-discontinuous-data"]], "Creating Epoched data from a Raw object": [[138, "creating-epoched-data-from-a-raw-object"]], "Basic visualization of Epochs objects": [[138, "basic-visualization-of-epochs-objects"]], "Subselecting epochs": [[138, "subselecting-epochs"]], "Selecting epochs by index": [[138, "selecting-epochs-by-index"]], "Selecting, dropping, and reordering channels": [[138, "selecting-dropping-and-reordering-channels"], [147, "selecting-dropping-and-reordering-channels"], [211, "selecting-dropping-and-reordering-channels"]], "Changing channel name and type": [[138, "changing-channel-name-and-type"], [211, "changing-channel-name-and-type"]], "Selection in the time domain": [[138, "selection-in-the-time-domain"], [211, "selection-in-the-time-domain"]], "Extracting data in other forms": [[138, "extracting-data-in-other-forms"]], "Loading and saving Epochs objects to disk": [[138, "loading-and-saving-epochs-objects-to-disk"]], "Iterating over Epochs": [[138, "iterating-over-epochs"]], "Regression-based baseline correction": [[139, "regression-based-baseline-correction"]], "Traditional baselining": [[139, "traditional-baselining"]], "Regression-based baselining": [[139, "regression-based-baselining"]], "Plot the baseline regressor": [[139, "plot-the-baseline-regressor"]], "Plot the ERPs": [[139, "plot-the-erps"]], "Plot the scalp topographies and difference waves": [[139, "plot-the-scalp-topographies-and-difference-waves"]], "Examine the interaction term": [[139, "examine-the-interaction-term"]], "Visualizing epoched data": [[140, "visualizing-epoched-data"]], "Plotting Epochs as time series": [[140, "plotting-epochs-as-time-series"]], "Interactivity in pipelines and scripts": [[140, null]], "Plotting projectors from an Epochs object": [[140, "plotting-projectors-from-an-epochs-object"]], "Plotting sensor locations": [[140, "plotting-sensor-locations"]], "Plotting the power spectrum of Epochs": [[140, "plotting-the-power-spectrum-of-epochs"]], "Plotting Epochs as an image map": [[140, "plotting-epochs-as-an-image-map"]], "Working with Epoch metadata": [[141, "working-with-epoch-metadata"]], "Viewing Epochs metadata": [[141, "viewing-epochs-metadata"]], "Restrictions on metadata DataFrames": [[141, null]], "Modifying the metadata": [[141, "modifying-the-metadata"]], "Selecting epochs using metadata queries": [[141, "selecting-epochs-using-metadata-queries"]], "Adding metadata to an Epochs object": [[141, "adding-metadata-to-an-epochs-object"]], "Auto-generating Epochs metadata": [[142, "auto-generating-epochs-metadata"]], "Preparation": [[142, "preparation"]], "Creating metadata from events": [[142, "creating-metadata-from-events"]], "The basics of make_metadata": [[142, "the-basics-of-make-metadata"]], "Specifying time-locked events": [[142, "specifying-time-locked-events"]], "Keeping only the first events of a group": [[142, "keeping-only-the-first-events-of-a-group"]], "Adding new columns to describe stimulation side and response correctness": [[142, "adding-new-columns-to-describe-stimulation-side-and-response-correctness"]], "Creating Epochs with metadata, and visualizing ERPs": [[142, "creating-epochs-with-metadata-and-visualizing-erps"]], "Applying the knowledge: visualizing the ERN component": [[142, "applying-the-knowledge-visualizing-the-ern-component"]], "Exporting Epochs to Pandas DataFrames": [[143, "exporting-epochs-to-pandas-dataframes"]], "Converting an Epochs object to a DataFrame": [[143, "converting-an-epochs-object-to-a-dataframe"]], "Scaling time and channel values": [[143, "scaling-time-and-channel-values"]], "Setting the index": [[143, "setting-the-index"]], "Wide- versus long-format DataFrames": [[143, "wide-versus-long-format-dataframes"]], "Divide continuous data into equally-spaced epochs": [[144, "divide-continuous-data-into-equally-spaced-epochs"]], "Characteristics of Fixed Length Epochs": [[144, "characteristics-of-fixed-length-epochs"]], "Example Use Case for Fixed Length Epochs: Connectivity Analysis": [[144, "example-use-case-for-fixed-length-epochs-connectivity-analysis"]], "Segmenting continuous data into epochs": [[145, "segmenting-continuous-data-into-epochs"], [163, "segmenting-continuous-data-into-epochs"]], "The Evoked data structure: evoked/averaged data": [[147, "the-evoked-data-structure-evoked-averaged-data"]], "Creating Evoked objects from Epochs": [[147, "creating-evoked-objects-from-epochs"]], "Basic visualization of Evoked objects": [[147, "basic-visualization-of-evoked-objects"]], "Subsetting Evoked data": [[147, "subsetting-evoked-data"]], "Evokeds are not memory-mapped": [[147, null]], "Similarities among the core data structures": [[147, "similarities-among-the-core-data-structures"]], "Loading and saving Evoked data": [[147, "loading-and-saving-evoked-data"]], "Combining Evoked objects": [[147, "combining-evoked-objects"]], "Other uses of Evoked objects": [[147, "other-uses-of-evoked-objects"]], "Visualizing Evoked data": [[148, "visualizing-evoked-data"]], "Plotting signal traces": [[148, "plotting-signal-traces"]], "Butterfly plots": [[148, null]], "Plotting scalp topographies": [[148, "plotting-scalp-topographies"]], "Arrow maps": [[148, "arrow-maps"]], "Joint plots": [[148, "joint-plots"]], "Comparing Evoked objects": [[148, "comparing-evoked-objects"]], "Image plots": [[148, "image-plots"]], "Topographical subplots": [[148, "topographical-subplots"]], "3D Field Maps": [[148, "d-field-maps"]], "EEG analysis - Event-Related Potentials (ERPs)": [[149, "eeg-analysis-event-related-potentials-erps"]], "Channel names and types": [[149, "channel-names-and-types"]], "Channel locations": [[149, "channel-locations"]], "Setting the EEG reference": [[149, "setting-the-eeg-reference"], [205, "setting-the-eeg-reference"]], "Filtering": [[149, "filtering"]], "Evoked responses: epoching and averaging": [[149, "evoked-responses-epoching-and-averaging"]], "Global field power (GFP)": [[149, "global-field-power-gfp"]], "Averaging across channels with regions of interest": [[149, "averaging-across-channels-with-regions-of-interest"]], "Comparing conditions": [[149, "comparing-conditions"]], "Grand averages": [[149, "grand-averages"]], "Amplitude and latency measures": [[149, "amplitude-and-latency-measures"]], "Peak latency and amplitude": [[149, "peak-latency-and-amplitude"]], "Mean Amplitude": [[149, "mean-amplitude"]], "Plotting whitened data": [[150, "plotting-whitened-data"]], "Raw data with whitening": [[150, "raw-data-with-whitening"]], "Epochs with whitening": [[150, "epochs-with-whitening"]], "Evoked data with whitening": [[150, "evoked-data-with-whitening"]], "Evoked data with scaled whitening": [[150, "evoked-data-with-scaled-whitening"]], "Topographic plot with whitening": [[150, "topographic-plot-with-whitening"]], "Estimating evoked responses": [[151, "estimating-evoked-responses"], [163, "estimating-evoked-responses"], [164, "estimating-evoked-responses"]], "FreeSurfer MRI reconstruction": [[153, "freesurfer-mri-reconstruction"]], "First steps": [[153, "first-steps"], [833, "first-steps"]], "Anatomical reconstruction": [[153, "anatomical-reconstruction"]], "Use with MNE-Python": [[153, "use-with-mne-python"]], "\u2018fsaverage\u2019": [[153, "fsaverage"]], "Source alignment and coordinate frames": [[154, "source-alignment-and-coordinate-frames"]], "Understanding coordinate frames": [[154, "understanding-coordinate-frames"]], "Coordinate frame definitions": [[154, "coordinate-frame-definitions"]], "A bad example": [[154, "a-bad-example"]], "A good example": [[154, "a-good-example"]], "Visualizing the transformations": [[154, "visualizing-the-transformations"]], "Example: MRI defacing": [[154, "example-mri-defacing"]], "Defining the head\u2194MRI trans using the GUI": [[154, "defining-the-headmri-trans-using-the-gui"]], "Alignment without MRI": [[154, "alignment-without-mri"]], "Using an automated approach to coregistration": [[155, "using-an-automated-approach-to-coregistration"]], "Set up the coregistration model": [[155, "set-up-the-coregistration-model"]], "Initial fit with fiducials": [[155, "initial-fit-with-fiducials"]], "Refining with ICP": [[155, "refining-with-icp"]], "Omitting bad points": [[155, "omitting-bad-points"]], "Final coregistration fit": [[155, "final-coregistration-fit"]], "Head model and forward computation": [[156, "head-model-and-forward-computation"]], "Computing the forward operator": [[156, "computing-the-forward-operator"]], "Compute and visualize BEM surfaces": [[156, "compute-and-visualize-bem-surfaces"]], "Visualizing the coregistration": [[156, "visualizing-the-coregistration"]], "Compute Source Space": [[156, "compute-source-space"]], "Compute forward solution": [[156, "compute-forward-solution"]], "EEG forward operator with a template MRI": [[157, "eeg-forward-operator-with-a-template-mri"]], "Adult template MRI (fsaverage)": [[157, "adult-template-mri-fsaverage"]], "Setup source space and compute forward": [[157, "setup-source-space-and-compute-forward"]], "Infant MRI surrogates": [[157, "infant-mri-surrogates"]], "Get an infant MRI template": [[157, "get-an-infant-mri-template"]], "How MNE uses FreeSurfer\u2019s outputs": [[158, "how-mne-uses-freesurfer-s-outputs"]], "MRI coordinate frames": [[158, "mri-coordinate-frames"]], "Under the hood": [[158, null]], "\u201cMRI coordinates\u201d in MNE-Python: FreeSurfer surface RAS": [[158, "mri-coordinates-in-mne-python-freesurfer-surface-ras"]], "Head coordinate frame": [[158, null]], "Using FreeSurfer\u2019s surface reconstructions": [[158, "using-freesurfer-s-surface-reconstructions"]], "Cortical alignment (spherical)": [[158, "cortical-alignment-spherical"]], "Surface decimation": [[158, "surface-decimation"]], "FreeSurfer\u2019s MNI affine transformation": [[158, "freesurfer-s-mni-affine-transformation"]], "Fixing BEM and head surfaces": [[159, "fixing-bem-and-head-surfaces"]], "Exporting surfaces to Blender": [[159, "exporting-surfaces-to-blender"]], "Editing in Blender": [[159, "editing-in-blender"]], "Using the fixed surfaces in MNE-Python": [[159, "using-the-fixed-surfaces-in-mne-python"]], "Editing the head surfaces": [[159, "editing-the-head-surfaces"]], "Low-resolution head": [[159, "low-resolution-head"]], "High-resolution head": [[159, "high-resolution-head"]], "Blender editing tips": [[159, "blender-editing-tips"]], "What if you still get an error?": [[159, "what-if-you-still-get-an-error"]], "Blender operations": [[159, "blender-operations"]], "Cleaning up a bad dense head surface by smoothing": [[159, "cleaning-up-a-bad-dense-head-surface-by-smoothing"]], "Topological errors": [[159, "topological-errors"]], "Dealing with topology in blender": [[159, "dealing-with-topology-in-blender"]], "Dealing with topology using pymeshfix": [[159, "dealing-with-topology-using-pymeshfix"]], "Computing a covariance matrix": [[160, "computing-a-covariance-matrix"]], "Plot the covariance matrices": [[160, "plot-the-covariance-matrices"]], "How should I regularize the covariance matrix?": [[160, "how-should-i-regularize-the-covariance-matrix"], [850, "how-should-i-regularize-the-covariance-matrix"]], "Forward models and source spaces": [[161, "forward-models-and-source-spaces"], [163, "forward-models-and-source-spaces"]], "Tutorials": [[163, "tutorials"]], "Introductory tutorials": [[163, "introductory-tutorials"], [171, "introductory-tutorials"]], "Reading data for different recording systems": [[163, "reading-data-for-different-recording-systems"], [190, "reading-data-for-different-recording-systems"]], "Working with continuous data": [[163, "working-with-continuous-data"], [215, "working-with-continuous-data"]], "Time-frequency analysis": [[163, "time-frequency-analysis"], [164, "time-frequency-analysis"], [238, "time-frequency-analysis"]], "Source localization and inverses": [[163, "source-localization-and-inverses"], [184, "source-localization-and-inverses"]], "Statistical analysis of sensor data": [[163, "statistical-analysis-of-sensor-data"], [228, "statistical-analysis-of-sensor-data"]], "Statistical analysis of source estimates": [[163, "statistical-analysis-of-source-estimates"], [233, "statistical-analysis-of-source-estimates"]], "Machine learning models of neural activity": [[163, "machine-learning-models-of-neural-activity"], [194, "machine-learning-models-of-neural-activity"]], "Simulation": [[163, "simulation"], [220, "simulation"], [866, "simulation"]], "Overview of MEG/EEG analysis with MNE-Python": [[164, "overview-of-meg-eeg-analysis-with-mne-python"]], "Loading data": [[164, "loading-data"]], "Detecting experimental events": [[164, "detecting-experimental-events"]], "Epoching continuous data": [[164, "epoching-continuous-data"]], "Inverse modeling": [[164, "inverse-modeling"]], "Modifying data in-place": [[165, "modifying-data-in-place"]], "Signal processing": [[165, "signal-processing"]], "Channel picking": [[165, "channel-picking"]], "The copy parameter": [[165, "the-copy-parameter"]], "Parsing events from raw data": [[166, "parsing-events-from-raw-data"]], "The Events and Annotations data structures": [[166, "the-events-and-annotations-data-structures"]], "What is a STIM channel?": [[166, "what-is-a-stim-channel"]], "Converting a STIM channel signal to an Events array": [[166, "converting-a-stim-channel-signal-to-an-events-array"]], "The middle column of the Events array": [[166, null]], "Reading embedded events as Annotations": [[166, "reading-embedded-events-as-annotations"]], "Converting between Events arrays and Annotations objects": [[166, "converting-between-events-arrays-and-annotations-objects"]], "Making multiple events per annotation": [[166, "making-multiple-events-per-annotation"]], "The Info data structure": [[167, "the-info-data-structure"]], "Querying the Info object": [[167, "querying-the-info-object"]], "Obtaining subsets of channels": [[167, "obtaining-subsets-of-channels"]], "Obtaining channel type information": [[167, "obtaining-channel-type-information"]], "Dropping channels from an Info object": [[167, "dropping-channels-from-an-info-object"]], "Working with sensor locations": [[168, "working-with-sensor-locations"]], "About montages and layouts": [[168, "about-montages-and-layouts"]], "Working with built-in montages": [[168, "working-with-built-in-montages"]], "Computing sensor locations": [[168, null]], "Plotting 2D sensor locations like EEGLAB": [[168, "plotting-2d-sensor-locations-like-eeglab"]], "The sphere keyword is available in many places!": [[168, null]], "Manually controlling 2D channel projection": [[168, "manually-controlling-2d-channel-projection"]], "Reading sensor digitization files": [[168, "reading-sensor-digitization-files"]], "Visualizing sensors in 3D surface renderings": [[168, "visualizing-sensors-in-3d-surface-renderings"]], "Working with layout files": [[168, "working-with-layout-files"]], "Configuring MNE-Python": [[169, "configuring-mne-python"]], "Getting and setting configuration variables": [[169, "getting-and-setting-configuration-variables"]], "Where configurations are stored": [[169, "where-configurations-are-stored"]], "Using environment variables": [[169, "using-environment-variables"]], "Logging": [[169, "logging"]], "Getting information about your system": [[169, "getting-information-about-your-system"]], "Getting started with mne.Report": [[170, "getting-started-with-mne-report"]], "Adding Raw data": [[170, "adding-raw-data"]], "Adding events": [[170, "adding-events"]], "Adding Epochs": [[170, "adding-epochs"]], "Adding Evoked": [[170, "adding-evoked"]], "Adding Covariance": [[170, "adding-covariance"]], "Adding Projection vectors": [[170, "adding-projection-vectors"]], "Adding ICA": [[170, "adding-ica"]], "Adding MRI with BEM": [[170, "adding-mri-with-bem"]], "Adding coregistration": [[170, "adding-coregistration"]], "Adding a Forward solution": [[170, "adding-a-forward-solution"]], "Adding an InverseOperator": [[170, "adding-an-inverseoperator"]], "Adding a SourceEstimate": [[170, "adding-a-sourceestimate"]], "Adding source code (e.g., a Python script)": [[170, "adding-source-code-e-g-a-python-script"]], "Adding custom figures": [[170, "adding-custom-figures"]], "Adding image files": [[170, "adding-image-files"]], "Working with tags": [[170, "working-with-tags"]], "Editing a saved report": [[170, "editing-a-saved-report"]], "Adding an entire folder of files": [[170, "adding-an-entire-folder-of-files"]], "Adding custom HTML (e.g., a description text)": [[170, "adding-custom-html-e-g-a-description-text"]], "The SourceEstimate data structure": [[173, "the-sourceestimate-data-structure"]], "Load and inspect example data": [[173, "load-and-inspect-example-data"]], "SourceEstimate (stc)": [[173, "sourceestimate-stc"]], "Relationship to SourceSpaces (src)": [[173, "relationship-to-sourcespaces-src"]], "Source localization with equivalent current dipole (ECD) fit": [[174, "source-localization-with-equivalent-current-dipole-ecd-fit"]], "Source localization with MNE, dSPM, sLORETA, and eLORETA": [[175, "source-localization-with-mne-dspm-sloreta-and-eloreta"]], "Compute regularized noise covariance": [[175, "compute-regularized-noise-covariance"]], "Compute the evoked response": [[175, "compute-the-evoked-response"]], "Inverse modeling: MNE/dSPM on evoked and raw data": [[175, "inverse-modeling-mne-dspm-on-evoked-and-raw-data"]], "The role of dipole orientations in distributed source localization": [[176, "the-role-of-dipole-orientations-in-distributed-source-localization"]], "The source space": [[176, "the-source-space"]], "Fixed dipole orientations": [[176, "fixed-dipole-orientations"]], "Loose dipole orientations": [[176, "loose-dipole-orientations"]], "Limiting orientations, but not fixing them": [[176, "limiting-orientations-but-not-fixing-them"]], "Discarding dipole orientation information": [[176, "discarding-dipole-orientation-information"]], "Computing various MNE solutions": [[177, "computing-various-mne-solutions"]], "Fixed orientation": [[177, "fixed-orientation"]], "Free orientation": [[177, "free-orientation"]], "Source reconstruction using an LCMV beamformer": [[178, "source-reconstruction-using-an-lcmv-beamformer"]], "Introduction to beamformers": [[178, "introduction-to-beamformers"]], "Data processing": [[178, "data-processing"]], "Computing the covariance matrices": [[178, "computing-the-covariance-matrices"]], "The forward model": [[178, "the-forward-model"]], "Handling depth bias": [[178, "handling-depth-bias"]], "Compute the spatial filter": [[178, "compute-the-spatial-filter"]], "Apply the spatial filter": [[178, "apply-the-spatial-filter"]], "Visualize the reconstructed source activity": [[178, "visualize-the-reconstructed-source-activity"]], "On MRI slices (orthoview; 2D)": [[178, "on-mri-slices-orthoview-2d"]], "On MNI glass brain (orthoview; 2D)": [[178, "on-mni-glass-brain-orthoview-2d"]], "Volumetric rendering (3D) with vectors": [[178, "volumetric-rendering-3d-with-vectors"]], "Visualize the activity of the maximum voxel with all three components": [[178, "visualize-the-activity-of-the-maximum-voxel-with-all-three-components"]], "Morph the output to fsaverage": [[178, "morph-the-output-to-fsaverage"]], "Visualize source time courses (stcs)": [[179, "visualize-source-time-courses-stcs"]], "Surface Source Estimates": [[179, "surface-source-estimates"]], "Volume Source Estimates": [[179, "volume-source-estimates"]], "Vector Source Estimates": [[179, "vector-source-estimates"]], "Dipole fits": [[179, "dipole-fits"]], "EEG source localization given electrode locations on an MRI": [[180, "eeg-source-localization-given-electrode-locations-on-an-mri"]], "Prerequisites": [[180, "prerequisites"]], "Visualizing the MRI": [[180, "visualizing-the-mri"]], "Getting our MRI voxel EEG locations to head (and MRI surface RAS) coords": [[180, "getting-our-mri-voxel-eeg-locations-to-head-and-mri-surface-ras-coords"]], "Getting a source estimate": [[180, "getting-a-source-estimate"]], "Brainstorm Elekta phantom dataset tutorial": [[181, "brainstorm-elekta-phantom-dataset-tutorial"]], "Brainstorm CTF phantom dataset tutorial": [[182, "brainstorm-ctf-phantom-dataset-tutorial"]], "4D Neuroimaging/BTi phantom dataset tutorial": [[183, "d-neuroimaging-bti-phantom-dataset-tutorial"]], "Importing data from MEG devices": [[186, "importing-data-from-meg-devices"]], "MEGIN/Elekta Neuromag VectorView and TRIUX (.fif)": [[186, "megin-elekta-neuromag-vectorview-and-triux-fif"]], "Artemis123 (.bin)": [[186, "artemis123-bin"]], "4-D Neuroimaging / BTI data (dir)": [[186, "d-neuroimaging-bti-data-dir"]], "CTF data (dir)": [[186, "ctf-data-dir"]], "CTF Polhemus data": [[186, "ctf-polhemus-data"]], "Applying software gradient compensation": [[186, "applying-software-gradient-compensation"]], "Ricoh/KIT MEG system data (.con/.sqd)": [[186, "ricoh-kit-meg-system-data-con-sqd"]], "Channel naming": [[186, null]], "FieldTrip MEG/EEG data (.mat)": [[186, "fieldtrip-meg-eeg-data-mat"]], "Creating MNE data structures from arbitrary data (from memory)": [[186, "creating-mne-data-structures-from-arbitrary-data-from-memory"]], "Importing data from EEG devices": [[187, "importing-data-from-eeg-devices"]], "BrainVision (.vhdr, .vmrk, .eeg)": [[187, "brainvision-vhdr-vmrk-eeg"]], "European data format (.edf)": [[187, "european-data-format-edf"]], "BioSemi data format (.bdf)": [[187, "biosemi-data-format-bdf"]], "General data format (.gdf)": [[187, "general-data-format-gdf"]], "Neuroscan CNT (.cnt)": [[187, "neuroscan-cnt-cnt"]], "EGI simple binary (.egi)": [[187, "egi-simple-binary-egi"]], "EGI MFF (.mff)": [[187, "egi-mff-mff"]], "EEGLAB files (.set, .fdt)": [[187, "eeglab-files-set-fdt"]], "Nicolet (.data)": [[187, "nicolet-data"]], "eXimia EEG data (.nxe)": [[187, "eximia-eeg-data-nxe"]], "Persyst EEG data (.lay, .dat)": [[187, "persyst-eeg-data-lay-dat"]], "Nihon Kohden EEG data (.eeg, .21e, .pnt, .log)": [[187, "nihon-kohden-eeg-data-eeg-21e-pnt-log"]], "XDF data (.xdf, .xdfz)": [[187, "xdf-data-xdf-xdfz"]], "Setting EEG references": [[187, "setting-eeg-references"]], "Reading electrode locations and head shapes for EEG recordings": [[187, "reading-electrode-locations-and-head-shapes-for-eeg-recordings"]], "Importing data from fNIRS devices": [[188, "importing-data-from-fnirs-devices"]], "Standardized data": [[188, "standardized-data"]], "SNIRF (.snirf)": [[188, "snirf-snirf"]], "Specifying the coordinate system": [[188, "specifying-the-coordinate-system"]], "Continuous Wave Devices": [[188, "continuous-wave-devices"]], "NIRx (directory or hdr)": [[188, "nirx-directory-or-hdr"]], "Hitachi (.csv)": [[188, "hitachi-csv"]], "Frequency Domain Devices": [[188, "frequency-domain-devices"]], "BOXY (.txt)": [[188, "boxy-txt"]], "Custom Data Import": [[188, "custom-data-import"]], "Loading legacy data in CSV or TSV format": [[188, "loading-legacy-data-in-csv-or-tsv-format"]], "Applying standard sensor locations to imported data": [[188, "applying-standard-sensor-locations-to-imported-data"]], "Working with CTF data: the Brainstorm auditory dataset": [[189, "working-with-ctf-data-the-brainstorm-auditory-dataset"]], "Spectro-temporal receptive field (STRF) estimation on continuous data": [[192, "spectro-temporal-receptive-field-strf-estimation-on-continuous-data"]], "Load audio data": [[192, "load-audio-data"]], "Create a receptive field": [[192, "create-a-receptive-field"]], "Simulate a neural response": [[192, "simulate-a-neural-response"]], "Fit a model to recover this receptive field": [[192, "fit-a-model-to-recover-this-receptive-field"]], "Visualize the effects of regularization": [[192, "visualize-the-effects-of-regularization"]], "Using different regularization types": [[192, "using-different-regularization-types"]], "Compare model performance": [[192, "compare-model-performance"]], "Decoding (MVPA)": [[193, "decoding-mvpa"]], "Design philosophy": [[193, "design-philosophy"], [848, "design-philosophy"]], "Transformation classes": [[193, "transformation-classes"]], "Scaler": [[193, "scaler"]], "Vectorizer": [[193, "vectorizer"]], "PSDEstimator": [[193, "psdestimator"]], "FilterEstimator": [[193, "filterestimator"]], "Spatial filters": [[193, "spatial-filters"]], "Common spatial pattern": [[193, "common-spatial-pattern"]], "Examples": [[193, null], [193, null], [193, null], [193, null], [193, null], [252, "examples"], [252, "id4"], [252, "id7"], [252, "id10"], [252, "id13"], [252, "id16"], [252, "id19"], [252, "id22"], [252, "id25"], [252, "id29"], [252, "id32"], [252, "id35"], [252, "id38"], [252, "id41"], [252, "id44"], [252, "id47"], [252, "id50"], [252, "id53"], [252, "id56"], [252, "id59"], [252, "id62"], [252, "id65"], [252, "id68"], [847, null], [847, null], [847, null], [847, null], [847, null], [847, null], [847, null], [847, null], [847, null], [847, null], [847, null], [847, null], [847, null], [847, null], [847, null], [847, null], [847, null], [847, null], [847, null], [847, null], [847, null]], "Source power comodulation (SPoC)": [[193, "source-power-comodulation-spoc"]], "xDAWN": [[193, "xdawn"]], "Effect-matched spatial filtering": [[193, "effect-matched-spatial-filtering"]], "Patterns vs. filters": [[193, "patterns-vs-filters"]], "Decoding over time": [[193, "decoding-over-time"]], "Temporal decoding": [[193, "temporal-decoding"]], "Temporal generalization": [[193, "temporal-generalization"]], "Projecting sensor-space patterns to source space": [[193, "projecting-sensor-space-patterns-to-source-space"]], "Source-space decoding": [[193, "source-space-decoding"]], "Overview of artifact detection": [[196, "overview-of-artifact-detection"]], "What are artifacts?": [[196, "what-are-artifacts"]], "What to do about artifacts": [[196, "what-to-do-about-artifacts"]], "Artifact detection": [[196, "artifact-detection"]], "Low-frequency drifts": [[196, "low-frequency-drifts"]], "Power line noise": [[196, "power-line-noise"], [200, "power-line-noise"]], "Heartbeat artifacts (ECG)": [[196, "heartbeat-artifacts-ecg"]], "Ocular artifacts (EOG)": [[196, "ocular-artifacts-eog"]], "Handling bad channels": [[197, "handling-bad-channels"]], "Marking bad channels": [[197, "marking-bad-channels"], [846, "marking-bad-channels"]], "Blocking execution": [[197, null]], "When to look for bad channels": [[197, "when-to-look-for-bad-channels"]], "Why mark bad channels at all?": [[197, "why-mark-bad-channels-at-all"]], "Interpolating bad channels": [[197, "interpolating-bad-channels"]], "How interpolation works": [[197, "how-interpolation-works"]], "Interpolation in MNE-Python": [[197, "interpolation-in-mne-python"]], "Rejecting bad data spans and breaks": [[198, "rejecting-bad-data-spans-and-breaks"]], "Annotating bad spans of data": [[198, "annotating-bad-spans-of-data"]], "The reject_by_annotation parameter": [[198, "the-reject-by-annotation-parameter"]], "Generating annotations programmatically": [[198, "generating-annotations-programmatically"]], "Detecting and annotating breaks": [[198, "detecting-and-annotating-breaks"]], "Rejecting Epochs based on channel amplitude": [[198, "rejecting-epochs-based-on-channel-amplitude"]], "Background information on filtering": [[199, "background-information-on-filtering"]], "Problem statement": [[199, "problem-statement"]], "Filtering basics": [[199, "filtering-basics"]], "FIR Filters": [[199, "fir-filters"]], "Designing FIR filters": [[199, "designing-fir-filters"]], "Applying FIR filters": [[199, "applying-fir-filters"]], "IIR filters": [[199, "iir-filters"]], "Designing IIR filters": [[199, "designing-iir-filters"]], "Applying IIR filters": [[199, "applying-iir-filters"]], "Some pitfalls of filtering": [[199, "some-pitfalls-of-filtering"]], "Low-pass problems": [[199, "low-pass-problems"]], "High-pass problems": [[199, "high-pass-problems"]], "Baseline problems (or solutions?)": [[199, "baseline-problems-or-solutions"]], "Filtering defaults": [[199, "filtering-defaults"]], "Defaults in MNE-Python": [[199, "defaults-in-mne-python"]], "Defaults in MNE-C": [[199, "defaults-in-mne-c"]], "Defaults in other software": [[199, "defaults-in-other-software"]], "Reporting Filters": [[199, "reporting-filters"]], "Filter type": [[199, "filter-type"]], "Cutoff frequency": [[199, "cutoff-frequency"]], "Filter length (order) and transition bandwidth (roll-off)": [[199, "filter-length-order-and-transition-bandwidth-roll-off"]], "Passband ripple and stopband attenuation": [[199, "passband-ripple-and-stopband-attenuation"]], "Filter delay and direction of computation": [[199, "filter-delay-and-direction-of-computation"]], "Filtering and resampling data": [[200, "filtering-and-resampling-data"]], "Background on filtering": [[200, "background-on-filtering"]], "Repairing artifacts by filtering": [[200, "repairing-artifacts-by-filtering"]], "Slow drifts": [[200, "slow-drifts"]], "Resampling": [[200, "resampling"]], "Best practices": [[200, "best-practices"], [203, "best-practices"]], "Repairing artifacts with regression": [[201, "repairing-artifacts-with-regression"]], "Prepare the data": [[201, "prepare-the-data"]], "Visualize the original data": [[201, "visualize-the-original-data"]], "Compute and apply EOG regression": [[201, "compute-and-apply-eog-regression"]], "Subtract the evoked response from the epoch data before regression": [[201, "subtract-the-evoked-response-from-the-epoch-data-before-regression"]], "Create EOG evoked before regression": [[201, "create-eog-evoked-before-regression"]], "Visualize the effect on raw data": [[201, "visualize-the-effect-on-raw-data"]], "Repairing artifacts with ICA": [[202, "repairing-artifacts-with-ica"]], "What is ICA?": [[202, "what-is-ica"]], "ICA in MNE-Python": [[202, "ica-in-mne-python"]], "ICA and dimensionality reduction": [[202, null]], "Example: EOG and ECG artifact repair": [[202, "example-eog-and-ecg-artifact-repair"], [204, "example-eog-and-ecg-artifact-repair"]], "Visualizing the artifacts": [[202, "visualizing-the-artifacts"], [204, "visualizing-the-artifacts"]], "Filtering to remove slow drifts": [[202, "filtering-to-remove-slow-drifts"]], "Fitting ICA": [[202, "fitting-ica"]], "Ignoring the time domain": [[202, null]], "Looking at the ICA solution": [[202, "looking-at-the-ica-solution"]], "Selecting ICA components manually": [[202, "selecting-ica-components-manually"]], "Using an EOG channel to select ICA components": [[202, "using-an-eog-channel-to-select-ica-components"]], "Using a simulated channel to select ICA components": [[202, "using-a-simulated-channel-to-select-ica-components"]], "Selecting ICA components using template matching": [[202, "selecting-ica-components-using-template-matching"]], "Compute ICA components on Epochs": [[202, "compute-ica-components-on-epochs"]], "Background on projectors and projections": [[203, "background-on-projectors-and-projections"]], "What is a projection?": [[203, "what-is-a-projection"]], "Example: projection as noise reduction": [[203, "example-projection-as-noise-reduction"]], "Terminology": [[203, null]], "Signal-space projection (SSP)": [[203, "signal-space-projection-ssp"]], "Projectors in MNE-Python": [[203, "projectors-in-mne-python"]], "Computing projectors": [[203, "computing-projectors"]], "Visualizing the effect of projectors": [[203, "visualizing-the-effect-of-projectors"]], "Loading and saving projectors": [[203, "loading-and-saving-projectors"]], "Adding and removing projectors": [[203, "adding-and-removing-projectors"]], "When are projectors \u201capplied\u201d?": [[203, "when-are-projectors-applied"]], "Repairing artifacts with SSP": [[204, "repairing-artifacts-with-ssp"]], "What is SSP?": [[204, "what-is-ssp"]], "Example: Environmental noise reduction from empty-room recordings": [[204, "example-environmental-noise-reduction-from-empty-room-recordings"]], "Visualizing the empty-room noise": [[204, "visualizing-the-empty-room-noise"]], "Creating the empty-room projectors": [[204, "creating-the-empty-room-projectors"]], "Visualizing how projectors affect the signal": [[204, "visualizing-how-projectors-affect-the-signal"]], "Repairing ECG artifacts with SSP": [[204, "repairing-ecg-artifacts-with-ssp"]], "Repairing EOG artifacts with SSP": [[204, "repairing-eog-artifacts-with-ssp"]], "Choosing the number of projectors": [[204, "choosing-the-number-of-projectors"]], "Visualizing SSP sensor-space bias via signal reconstruction": [[204, "visualizing-ssp-sensor-space-bias-via-signal-reconstruction"]], "SSP reconstruction": [[204, null]], "Background": [[205, "background"]], "Setting or changing the reference channel": [[205, "setting-or-changing-the-reference-channel"]], "Setting average reference": [[205, "setting-average-reference"]], "Creating the average reference as a projector": [[205, "creating-the-average-reference-as-a-projector"]], "Using an infinite reference (REST)": [[205, "using-an-infinite-reference-rest"]], "Using a bipolar reference": [[205, "using-a-bipolar-reference"]], "EEG reference and source modeling": [[205, "eeg-reference-and-source-modeling"]], "Extracting and visualizing subject head movement": [[206, "extracting-and-visualizing-subject-head-movement"]], "HPI frequencies": [[206, "hpi-frequencies"]], "Estimating continuous head position": [[206, "estimating-continuous-head-position"]], "Visualizing continuous head position": [[206, "visualizing-continuous-head-position"]], "Computing SNR of the HPI signal": [[206, "computing-snr-of-the-hpi-signal"]], "Signal-space separation (SSS) and Maxwell filtering": [[207, "signal-space-separation-sss-and-maxwell-filtering"]], "Background on SSS and Maxwell filtering": [[207, "background-on-sss-and-maxwell-filtering"]], "Using SSS and Maxwell filtering in MNE-Python": [[207, "using-sss-and-maxwell-filtering-in-mne-python"]], "Spatiotemporal SSS (tSSS)": [[207, "spatiotemporal-sss-tsss"]], "Movement compensation": [[207, "movement-compensation"]], "Caveats to using SSS / Maxwell filtering": [[207, "caveats-to-using-sss-maxwell-filtering"]], "Preprocessing functional near-infrared spectroscopy (fNIRS) data": [[208, "preprocessing-functional-near-infrared-spectroscopy-fnirs-data"]], "Providing more meaningful annotation information": [[208, "providing-more-meaningful-annotation-information"]], "Viewing location of sensors over brain surface": [[208, "viewing-location-of-sensors-over-brain-surface"]], "Selecting channels appropriate for detecting neural responses": [[208, "selecting-channels-appropriate-for-detecting-neural-responses"]], "Converting from raw intensity to optical density": [[208, "converting-from-raw-intensity-to-optical-density"]], "Evaluating the quality of the data": [[208, "evaluating-the-quality-of-the-data"]], "Converting from optical density to haemoglobin": [[208, "converting-from-optical-density-to-haemoglobin"]], "Removing heart rate from signal": [[208, "removing-heart-rate-from-signal"]], "Extract epochs": [[208, "extract-epochs"]], "View consistency of responses across trials": [[208, "view-consistency-of-responses-across-trials"]], "View consistency of responses across channels": [[208, "view-consistency-of-responses-across-channels"]], "Plot standard fNIRS response image": [[208, "plot-standard-fnirs-response-image"]], "View topographic representation of activity": [[208, "view-topographic-representation-of-activity"]], "Compare tapping of left and right hands": [[208, "compare-tapping-of-left-and-right-hands"]], "The Raw data structure: continuous data": [[211, "the-raw-data-structure-continuous-data"]], "Loading continuous data": [[211, "loading-continuous-data"]], "Datasets in MNE-Python": [[211, null]], "Querying the Raw object": [[211, "querying-the-raw-object"]], "Attributes vs. Methods": [[211, null]], "The Raw.info attribute": [[211, "the-raw-info-attribute"]], "Time, sample number, and sample index": [[211, "time-sample-number-and-sample-index"]], "Sample numbering in VectorView data": [[211, null]], "Modifying Raw objects": [[211, "modifying-raw-objects"]], "len(raw)": [[211, null]], "Long channel names": [[211, null]], "Extracting data from Raw objects": [[211, "extracting-data-from-raw-objects"]], "Extracting data by index": [[211, "extracting-data-by-index"]], "Extracting channels by name": [[211, "extracting-channels-by-name"]], "Extracting channels by type": [[211, "extracting-channels-by-type"]], "The Raw.get_data() method": [[211, "the-raw-get-data-method"]], "Summary of ways to extract data from Raw objects": [[211, "summary-of-ways-to-extract-data-from-raw-objects"]], "Exporting and saving Raw objects": [[211, "exporting-and-saving-raw-objects"]], "Working with events": [[212, "working-with-events"]], "Reading and writing events from/to a file": [[212, "reading-and-writing-events-from-to-a-file"]], "Subselecting and combining events": [[212, "subselecting-and-combining-events"]], "Including/excluding events": [[212, null]], "Mapping Event IDs to trial descriptors": [[212, "mapping-event-ids-to-trial-descriptors"]], "Plotting events": [[212, "plotting-events"]], "Plotting events and raw data together": [[212, "plotting-events-and-raw-data-together"]], "Making equally-spaced Events arrays": [[212, "making-equally-spaced-events-arrays"]], "Annotating continuous data": [[213, "annotating-continuous-data"]], "Creating annotations programmatically": [[213, "creating-annotations-programmatically"]], "Annotating Raw objects interactively": [[213, "annotating-raw-objects-interactively"]], "How annotations affect preprocessing and analysis": [[213, "how-annotations-affect-preprocessing-and-analysis"]], "Operations on Annotations objects": [[213, "operations-on-annotations-objects"]], "Reading and writing Annotations to/from a file": [[213, "reading-and-writing-annotations-to-from-a-file"]], "Built-in plotting methods for Raw objects": [[214, "built-in-plotting-methods-for-raw-objects"]], "Interactive data browsing with Raw.plot()": [[214, "interactive-data-browsing-with-raw-plot"]], "Plotting spectral density of continuous data": [[214, "plotting-spectral-density-of-continuous-data"]], "Plotting sensor locations from Raw objects": [[214, "plotting-sensor-locations-from-raw-objects"]], "Plotting projectors from Raw objects": [[214, "plotting-projectors-from-raw-objects"]], "Creating MNE-Python data structures from scratch": [[217, "creating-mne-python-data-structures-from-scratch"]], "Creating Info objects": [[217, "creating-info-objects"]], "Info objects": [[217, null]], "Info consistency": [[217, null]], "Creating Raw objects": [[217, "creating-raw-objects"]], "Units": [[217, null]], "Creating Epochs objects": [[217, "creating-epochs-objects"]], "Creating Evoked Objects": [[217, "creating-evoked-objects"]], "Corrupt known signal with point spread": [[218, "corrupt-known-signal-with-point-spread"]], "Load the MEG data": [[218, "load-the-meg-data"]], "Estimate the background noise covariance from the baseline period": [[218, "estimate-the-background-noise-covariance-from-the-baseline-period"]], "Generate sinusoids in two spatially distant labels": [[218, "generate-sinusoids-in-two-spatially-distant-labels"]], "Find the center vertices in source space of each label": [[218, "find-the-center-vertices-in-source-space-of-each-label"]], "Create source-space data with known signals": [[218, "create-source-space-data-with-known-signals"]], "Plot original signals": [[218, "plot-original-signals"]], "Simulate sensor-space signals": [[218, "simulate-sensor-space-signals"]], "Plot the point-spread of corrupted signal": [[218, "plot-the-point-spread-of-corrupted-signal"]], "Exercises": [[218, "exercises"], [227, "exercises"]], "DICS for power mapping": [[219, "dics-for-power-mapping"]], "Setup": [[219, "setup"]], "Data simulation": [[219, "data-simulation"]], "Power mapping": [[219, "power-mapping"]], "Statistical inference": [[222, "statistical-inference"]], "Hypothesis testing": [[222, "hypothesis-testing"]], "Null hypothesis": [[222, "null-hypothesis"]], "Parametric tests": [[222, "parametric-tests"]], "\u201cHat\u201d variance adjustment": [[222, "hat-variance-adjustment"], [222, "id3"]], "Non-parametric tests": [[222, "non-parametric-tests"]], "Multiple comparisons": [[222, "multiple-comparisons"]], "Bonferroni correction": [[222, "bonferroni-correction"]], "False discovery rate (FDR) correction": [[222, "false-discovery-rate-fdr-correction"]], "Non-parametric resampling test with a maximum statistic": [[222, "non-parametric-resampling-test-with-a-maximum-statistic"]], "Clustering": [[222, "clustering"]], "Effect size": [[222, null]], "Defining the adjacency matrix": [[222, "defining-the-adjacency-matrix"]], "Standard clustering": [[222, "standard-clustering"]], "Threshold-free cluster enhancement (TFCE)": [[222, "threshold-free-cluster-enhancement-tfce"]], "Visualize and compare methods": [[222, "visualize-and-compare-methods"]], "Statistical functions in MNE": [[222, "statistical-functions-in-mne"]], "Parametric methods provided by MNE": [[222, "parametric-methods-provided-by-mne"]], "Non-parametric methods": [[222, "non-parametric-methods"]], "Visualising statistical significance thresholds on EEG data": [[223, "visualising-statistical-significance-thresholds-on-eeg-data"]], "Non-parametric 1 sample cluster statistic on single trial power": [[224, "non-parametric-1-sample-cluster-statistic-on-single-trial-power"]], "Set parameters": [[224, "set-parameters"], [226, "set-parameters"], [227, "set-parameters"], [230, "set-parameters"], [231, "set-parameters"], [232, "set-parameters"]], "Define adjacency for statistics": [[224, "define-adjacency-for-statistics"]], "Compute statistic": [[224, "compute-statistic"], [225, "compute-statistic"], [230, "compute-statistic"], [231, "compute-statistic"]], "View time-frequency plots": [[224, "view-time-frequency-plots"], [225, "view-time-frequency-plots"]], "Non-parametric between conditions cluster statistic on single trial power": [[225, "non-parametric-between-conditions-cluster-statistic-on-single-trial-power"]], "Mass-univariate twoway repeated measures ANOVA on single trial power": [[226, "mass-univariate-twoway-repeated-measures-anova-on-single-trial-power"]], "Create TFR representations for all conditions": [[226, "create-tfr-representations-for-all-conditions"]], "Setup repeated measures ANOVA": [[226, "setup-repeated-measures-anova"]], "Sample data layout": [[226, "id1"]], "Account for multiple comparisons using FDR versus permutation clustering test": [[226, "account-for-multiple-comparisons-using-fdr-versus-permutation-clustering-test"]], "Spatiotemporal permutation F-test on full sensor data": [[227, "spatiotemporal-permutation-f-test-on-full-sensor-data"]], "Read epochs for the channel of interest": [[227, "read-epochs-for-the-channel-of-interest"]], "Find the FieldTrip neighbor definition to setup sensor adjacency": [[227, "find-the-fieldtrip-neighbor-definition-to-setup-sensor-adjacency"]], "Compute permutation statistic": [[227, "compute-permutation-statistic"]], "Visualize clusters": [[227, "visualize-clusters"]], "Permutation statistic for time-frequencies": [[227, "permutation-statistic-for-time-frequencies"]], "Permutation t-test on source data with spatio-temporal clustering": [[230, "permutation-t-test-on-source-data-with-spatio-temporal-clustering"]], "Read epochs for all channels, removing a bad one": [[230, "read-epochs-for-all-channels-removing-a-bad-one"], [232, "read-epochs-for-all-channels-removing-a-bad-one"]], "Transform to source space": [[230, "transform-to-source-space"], [232, "transform-to-source-space"]], "Transform to common cortical space": [[230, "transform-to-common-cortical-space"], [232, "transform-to-common-cortical-space"]], "Find adjacency matrix": [[230, "find-adjacency-matrix"]], "Selecting \u201csignificant\u201d clusters": [[230, "selecting-significant-clusters"]], "Visualize the clusters": [[230, "visualize-the-clusters"], [231, "visualize-the-clusters"], [232, "visualize-the-clusters"]], "2 samples permutation test on source data with spatio-temporal clustering": [[231, "samples-permutation-test-on-source-data-with-spatio-temporal-clustering"]], "Repeated measures ANOVA on source data with spatio-temporal clustering": [[232, "repeated-measures-anova-on-source-data-with-spatio-temporal-clustering"]], "Prepare function for arbitrary contrast": [[232, "prepare-function-for-arbitrary-contrast"]], "Compute clustering statistic": [[232, "compute-clustering-statistic"]], "The Spectrum and EpochsSpectrum classes: frequency-domain data": [[235, "the-spectrum-and-epochsspectrum-classes-frequency-domain-data"]], "Visualizing Spectrum objects": [[235, "visualizing-spectrum-objects"]], "Migrating legacy code": [[235, "migrating-legacy-code"]], "Quick reference for common Spectral class actions": [[235, "id4"]], "Frequency and time-frequency sensor analysis": [[236, "frequency-and-time-frequency-sensor-analysis"]], "Frequency analysis": [[236, "frequency-analysis"], [237, "frequency-analysis"]], "Time-frequency analysis: power and inter-trial coherence": [[236, "time-frequency-analysis-power-and-inter-trial-coherence"]], "Inspect power": [[236, "inspect-power"]], "Joint Plot": [[236, "joint-plot"]], "Inspect ITC": [[236, "inspect-itc"]], "Frequency-tagging: Basic analysis of an SSVEP/vSSR dataset": [[237, "frequency-tagging-basic-analysis-of-an-ssvep-vssr-dataset"]], "Data preprocessing": [[237, "data-preprocessing"]], "Calculate power spectral density (PSD)": [[237, "calculate-power-spectral-density-psd"]], "Calculate signal to noise ratio (SNR)": [[237, "calculate-signal-to-noise-ratio-snr"]], "Plot PSD and SNR spectra": [[237, "plot-psd-and-snr-spectra"]], "Extract SNR values at the stimulation frequency": [[237, "extract-snr-values-at-the-stimulation-frequency"]], "Get index for the stimulation frequency (12 Hz)": [[237, "get-index-for-the-stimulation-frequency-12-hz"]], "Get indices for the different trial types": [[237, "get-indices-for-the-different-trial-types"]], "Get indices of EEG channels forming the ROI": [[237, "get-indices-of-eeg-channels-forming-the-roi"]], "Apply the subset, and check the result": [[237, "apply-the-subset-and-check-the-result"]], "Topography of the vSSR": [[237, "topography-of-the-vssr"]], "Statistical separation of 12 Hz and 15 Hz vSSR": [[237, "statistical-separation-of-12-hz-and-15-hz-vssr"]], "Debriefing": [[237, "debriefing"]], "Bonus exercises": [[237, "bonus-exercises"]], "Effect of trial duration on SNR": [[237, "effect-of-trial-duration-on-snr"]], "Time resolved SNR": [[237, "time-resolved-snr"]], "General bibliography": [[240, "general-bibliography"]], "Papers citing MNE-Python": [[241, "papers-citing-mne-python"]], "Connectivity Estimation": [[242, "connectivity-estimation"]], "Covariance computation": [[243, "covariance-computation"]], "Creating data objects from arrays": [[244, "creating-data-objects-from-arrays"]], "Datasets": [[245, "datasets"]], "Decoding": [[246, "decoding"]], "Events": [[247, "events"]], "Exporting": [[248, "exporting"]], "File I/O": [[249, "file-i-o"]], "Forward Modeling": [[250, "forward-modeling"]], "Funding and other support": [[251, "funding-and-other-support"]], "Institutional partners": [[251, "institutional-partners"]], "Current partners": [[251, "current-partners"], [858, "current-partners"]], "Former partners": [[251, "former-partners"], [858, "former-partners"]], "Command line tools using Python": [[252, "command-line-tools-using-python"]], "mne anonymize": [[252, "mne-anonymize"]], "Anonymize raw fif file.": [[252, "anonymize-raw-fif-file"]], "Options": [[252, "options"], [252, "id3"], [252, "id6"], [252, "id9"], [252, "id12"], [252, "id15"], [252, "id18"], [252, "id21"], [252, "id24"], [252, "id28"], [252, "id31"], [252, "id34"], [252, "id37"], [252, "id40"], [252, "id43"], [252, "id46"], [252, "id49"], [252, "id52"], [252, "id55"], [252, "id58"], [252, "id61"], [252, "id64"], [252, "id67"]], "mne browse_raw": [[252, "mne-browse-raw"]], "Browse raw data.": [[252, "browse-raw-data"]], "mne bti2fiff": [[252, "mne-bti2fiff"]], "Import BTi / 4D MagnesWH3600 data to fif file.": [[252, "import-bti-4d-magneswh3600-data-to-fif-file"]], "Notes": [[252, "notes"], [252, "id26"]], "mne clean_eog_ecg": [[252, "mne-clean-eog-ecg"]], "Clean a raw file from EOG and ECG artifacts with PCA (ie SSP).": [[252, "clean-a-raw-file-from-eog-and-ecg-artifacts-with-pca-ie-ssp"]], "mne compare_fiff": [[252, "mne-compare-fiff"]], "Compare FIFF files.": [[252, "compare-fiff-files"]], "mne compute_proj_ecg": [[252, "mne-compute-proj-ecg"]], "Compute SSP/PCA projections for ECG artifacts.": [[252, "compute-ssp-pca-projections-for-ecg-artifacts"]], "mne compute_proj_eog": [[252, "mne-compute-proj-eog"]], "Compute SSP/PCA projections for EOG artifacts.": [[252, "compute-ssp-pca-projections-for-eog-artifacts"]], "mne coreg": [[252, "mne-coreg"]], "Open the coregistration GUI.": [[252, "open-the-coregistration-gui"]], "mne flash_bem": [[252, "mne-flash-bem"]], "Create 3-layer BEM model from Flash MRI images.": [[252, "create-3-layer-bem-model-from-flash-mri-images"]], "mne freeview_bem_surfaces": [[252, "mne-freeview-bem-surfaces"]], "View the 3-Layers BEM model using Freeview.": [[252, "view-the-3-layers-bem-model-using-freeview"]], "mne kit2fiff": [[252, "mne-kit2fiff"]], "Import KIT / NYU data to fif file.": [[252, "import-kit-nyu-data-to-fif-file"]], "mne make_scalp_surfaces": [[252, "mne-make-scalp-surfaces"]], "Create high-resolution head surfaces for coordinate alignment.": [[252, "create-high-resolution-head-surfaces-for-coordinate-alignment"]], "mne maxfilter": [[252, "mne-maxfilter"]], "Apply MaxFilter.": [[252, "apply-maxfilter"]], "mne prepare_bem_model": [[252, "mne-prepare-bem-model"]], "Create a BEM solution using the linear collocation approach.": [[252, "create-a-bem-solution-using-the-linear-collocation-approach"]], "mne report": [[252, "mne-report"]], "Create mne report for a folder.": [[252, "create-mne-report-for-a-folder"]], "mne setup_forward_model": [[252, "mne-setup-forward-model"]], "Create a BEM model for a subject.": [[252, "create-a-bem-model-for-a-subject"]], "mne setup_source_space": [[252, "mne-setup-source-space"]], "Set up bilateral hemisphere surface-based source space with subsampling.": [[252, "set-up-bilateral-hemisphere-surface-based-source-space-with-subsampling"]], "mne show_fiff": [[252, "mne-show-fiff"]], "Show the contents of a FIFF file.": [[252, "show-the-contents-of-a-fiff-file"]], "mne show_info": [[252, "mne-show-info"]], "Show measurement info from .fif file.": [[252, "show-measurement-info-from-fif-file"]], "mne surf2bem": [[252, "mne-surf2bem"]], "Convert surface to BEM FIF file.": [[252, "convert-surface-to-bem-fif-file"]], "mne sys_info": [[252, "mne-sys-info"]], "Show system information.": [[252, "show-system-information"]], "mne watershed_bem": [[252, "mne-watershed-bem"]], "Create BEM surfaces using the watershed algorithm included with FreeSurfer.": [[252, "create-bem-surfaces-using-the-watershed-algorithm-included-with-freesurfer"]], "mne what": [[252, "mne-what"]], "Check type of FIF file.": [[252, "check-type-of-fif-file"]], "mne.AcqParserFIF": [[253, "mne-acqparserfif"]], "mne.Annotations": [[254, "mne-annotations"]], "Examples using mne.Annotations": [[254, "examples-using-mne-annotations"]], "mne.BaseEpochs": [[255, "mne-baseepochs"]], "Examples using mne.BaseEpochs": [[255, "examples-using-mne-baseepochs"]], "mne.BiHemiLabel": [[256, "mne-bihemilabel"]], "mne.Covariance": [[257, "mne-covariance"]], "Examples using mne.Covariance": [[257, "examples-using-mne-covariance"]], "mne.Dipole": [[258, "mne-dipole"]], "Examples using mne.Dipole": [[258, "examples-using-mne-dipole"]], "mne.DipoleFixed": [[259, "mne-dipolefixed"]], "Examples using mne.DipoleFixed": [[259, "examples-using-mne-dipolefixed"]], "mne.Epochs": [[260, "mne-epochs"]], "Examples using mne.Epochs": [[260, "examples-using-mne-epochs"]], "mne.EpochsArray": [[261, "mne-epochsarray"]], "Examples using mne.EpochsArray": [[261, "examples-using-mne-epochsarray"]], "mne.Evoked": [[262, "mne-evoked"]], "Examples using mne.Evoked": [[262, "examples-using-mne-evoked"]], "mne.EvokedArray": [[263, "mne-evokedarray"]], "Examples using mne.EvokedArray": [[263, "examples-using-mne-evokedarray"]], "mne.Forward": [[264, "mne-forward"]], "Examples using mne.Forward": [[264, "examples-using-mne-forward"]], "mne.Info": [[265, "mne-info"]], "Examples using mne.Info": [[265, "examples-using-mne-info"]], "mne.Label": [[266, "mne-label"]], "Examples using mne.Label": [[266, "examples-using-mne-label"]], "mne.MixedSourceEstimate": [[267, "mne-mixedsourceestimate"]], "Examples using mne.MixedSourceEstimate": [[267, "examples-using-mne-mixedsourceestimate"]], "mne.MixedVectorSourceEstimate": [[268, "mne-mixedvectorsourceestimate"]], "Examples using mne.MixedVectorSourceEstimate": [[268, "examples-using-mne-mixedvectorsourceestimate"]], "mne.Projection": [[269, "mne-projection"]], "Examples using mne.Projection": [[269, "examples-using-mne-projection"]], "mne.Report": [[270, "mne-report"]], "Examples using mne.Report": [[270, "examples-using-mne-report"]], "mne.SourceEstimate": [[271, "mne-sourceestimate"]], "Examples using mne.SourceEstimate": [[271, "examples-using-mne-sourceestimate"]], "mne.SourceMorph": [[272, "mne-sourcemorph"]], "Examples using mne.SourceMorph": [[272, "examples-using-mne-sourcemorph"]], "mne.SourceSpaces": [[273, "mne-sourcespaces"]], "Examples using mne.SourceSpaces": [[273, "examples-using-mne-sourcespaces"]], "mne.VectorSourceEstimate": [[274, "mne-vectorsourceestimate"]], "Examples using mne.VectorSourceEstimate": [[274, "examples-using-mne-vectorsourceestimate"]], "mne.VolSourceEstimate": [[275, "mne-volsourceestimate"]], "Examples using mne.VolSourceEstimate": [[275, "examples-using-mne-volsourceestimate"]], "mne.VolVectorSourceEstimate": [[276, "mne-volvectorsourceestimate"]], "mne.add_reference_channels": [[277, "mne-add-reference-channels"]], "Examples using mne.add_reference_channels": [[277, "examples-using-mne-add-reference-channels"]], "mne.add_source_space_distances": [[278, "mne-add-source-space-distances"]], "mne.annotations_from_events": [[279, "mne-annotations-from-events"]], "Examples using mne.annotations_from_events": [[279, "examples-using-mne-annotations-from-events"]], "mne.apply_forward": [[280, "mne-apply-forward"]], "mne.apply_forward_raw": [[281, "mne-apply-forward-raw"]], "mne.average_forward_solutions": [[282, "mne-average-forward-solutions"]], "mne.baseline.rescale": [[283, "mne-baseline-rescale"]], "Examples using mne.baseline.rescale": [[283, "examples-using-mne-baseline-rescale"]], "mne.beamformer.Beamformer": [[284, "mne-beamformer-beamformer"]], "Examples using mne.beamformer.Beamformer": [[284, "examples-using-mne-beamformer-beamformer"]], "mne.beamformer.apply_dics": [[285, "mne-beamformer-apply-dics"]], "mne.beamformer.apply_dics_csd": [[286, "mne-beamformer-apply-dics-csd"]], "Examples using mne.beamformer.apply_dics_csd": [[286, "examples-using-mne-beamformer-apply-dics-csd"]], "mne.beamformer.apply_dics_epochs": [[287, "mne-beamformer-apply-dics-epochs"]], "mne.beamformer.apply_lcmv": [[288, "mne-beamformer-apply-lcmv"]], "Examples using mne.beamformer.apply_lcmv": [[288, "examples-using-mne-beamformer-apply-lcmv"]], "mne.beamformer.apply_lcmv_cov": [[289, "mne-beamformer-apply-lcmv-cov"]], "Examples using mne.beamformer.apply_lcmv_cov": [[289, "examples-using-mne-beamformer-apply-lcmv-cov"]], "mne.beamformer.apply_lcmv_epochs": [[290, "mne-beamformer-apply-lcmv-epochs"]], "Examples using mne.beamformer.apply_lcmv_epochs": [[290, "examples-using-mne-beamformer-apply-lcmv-epochs"]], "mne.beamformer.apply_lcmv_raw": [[291, "mne-beamformer-apply-lcmv-raw"]], "Examples using mne.beamformer.apply_lcmv_raw": [[291, "examples-using-mne-beamformer-apply-lcmv-raw"]], "mne.beamformer.make_dics": [[292, "mne-beamformer-make-dics"]], "Examples using mne.beamformer.make_dics": [[292, "examples-using-mne-beamformer-make-dics"]], "mne.beamformer.make_lcmv": [[293, "mne-beamformer-make-lcmv"]], "Examples using mne.beamformer.make_lcmv": [[293, "examples-using-mne-beamformer-make-lcmv"]], "mne.beamformer.make_lcmv_resolution_matrix": [[294, "mne-beamformer-make-lcmv-resolution-matrix"]], "Examples using mne.beamformer.make_lcmv_resolution_matrix": [[294, "examples-using-mne-beamformer-make-lcmv-resolution-matrix"]], "mne.beamformer.rap_music": [[295, "mne-beamformer-rap-music"]], "Examples using mne.beamformer.rap_music": [[295, "examples-using-mne-beamformer-rap-music"]], "mne.beamformer.read_beamformer": [[296, "mne-beamformer-read-beamformer"]], "mne.bem.ConductorModel": [[297, "mne-bem-conductormodel"]], "Examples using mne.bem.ConductorModel": [[297, "examples-using-mne-bem-conductormodel"]], "mne.bem.convert_flash_mris": [[298, "mne-bem-convert-flash-mris"]], "mne.bem.distance_to_bem": [[299, "mne-bem-distance-to-bem"]], "mne.bem.fit_sphere_to_headshape": [[300, "mne-bem-fit-sphere-to-headshape"]], "mne.bem.get_fitting_dig": [[301, "mne-bem-get-fitting-dig"]], "mne.bem.make_flash_bem": [[302, "mne-bem-make-flash-bem"]], "Examples using mne.bem.make_flash_bem": [[302, "examples-using-mne-bem-make-flash-bem"]], "mne.bem.make_scalp_surfaces": [[303, "mne-bem-make-scalp-surfaces"]], "mne.bem.make_watershed_bem": [[304, "mne-bem-make-watershed-bem"]], "Examples using mne.bem.make_watershed_bem": [[304, "examples-using-mne-bem-make-watershed-bem"]], "mne.channel_indices_by_type": [[305, "mne-channel-indices-by-type"]], "Examples using mne.channel_indices_by_type": [[305, "examples-using-mne-channel-indices-by-type"]], "mne.channel_type": [[306, "mne-channel-type"]], "Examples using mne.channel_type": [[306, "examples-using-mne-channel-type"]], "mne.channels.DigMontage": [[307, "mne-channels-digmontage"]], "Examples using mne.channels.DigMontage": [[307, "examples-using-mne-channels-digmontage"]], "mne.channels.Layout": [[308, "mne-channels-layout"]], "Examples using mne.channels.Layout": [[308, "examples-using-mne-channels-layout"]], "mne.channels.combine_channels": [[309, "mne-channels-combine-channels"]], "Examples using mne.channels.combine_channels": [[309, "examples-using-mne-channels-combine-channels"]], "mne.channels.compute_dev_head_t": [[310, "mne-channels-compute-dev-head-t"]], "mne.channels.compute_native_head_t": [[311, "mne-channels-compute-native-head-t"]], "Examples using mne.channels.compute_native_head_t": [[311, "examples-using-mne-channels-compute-native-head-t"]], "mne.channels.equalize_channels": [[312, "mne-channels-equalize-channels"]], "mne.channels.find_ch_adjacency": [[313, "mne-channels-find-ch-adjacency"]], "Examples using mne.channels.find_ch_adjacency": [[313, "examples-using-mne-channels-find-ch-adjacency"]], "mne.channels.find_layout": [[314, "mne-channels-find-layout"]], "mne.channels.fix_mag_coil_types": [[315, "mne-channels-fix-mag-coil-types"]], "mne.channels.generate_2d_layout": [[316, "mne-channels-generate-2d-layout"]], "mne.channels.get_builtin_ch_adjacencies": [[317, "mne-channels-get-builtin-ch-adjacencies"]], "Examples using mne.channels.get_builtin_ch_adjacencies": [[317, "examples-using-mne-channels-get-builtin-ch-adjacencies"]], "mne.channels.get_builtin_montages": [[318, "mne-channels-get-builtin-montages"]], "Examples using mne.channels.get_builtin_montages": [[318, "examples-using-mne-channels-get-builtin-montages"]], "mne.channels.make_1020_channel_selections": [[319, "mne-channels-make-1020-channel-selections"]], "Examples using mne.channels.make_1020_channel_selections": [[319, "examples-using-mne-channels-make-1020-channel-selections"]], "mne.channels.make_dig_montage": [[320, "mne-channels-make-dig-montage"]], "mne.channels.make_eeg_layout": [[321, "mne-channels-make-eeg-layout"]], "Examples using mne.channels.make_eeg_layout": [[321, "examples-using-mne-channels-make-eeg-layout"]], "mne.channels.make_grid_layout": [[322, "mne-channels-make-grid-layout"]], "mne.channels.make_standard_montage": [[323, "mne-channels-make-standard-montage"]], "Examples using mne.channels.make_standard_montage": [[323, "examples-using-mne-channels-make-standard-montage"]], "mne.channels.read_ch_adjacency": [[324, "mne-channels-read-ch-adjacency"]], "Examples using mne.channels.read_ch_adjacency": [[324, "examples-using-mne-channels-read-ch-adjacency"]], "mne.channels.read_custom_montage": [[325, "mne-channels-read-custom-montage"]], "Examples using mne.channels.read_custom_montage": [[325, "examples-using-mne-channels-read-custom-montage"]], "mne.channels.read_dig_captrak": [[326, "mne-channels-read-dig-captrak"]], "mne.channels.read_dig_dat": [[327, "mne-channels-read-dig-dat"]], "mne.channels.read_dig_egi": [[328, "mne-channels-read-dig-egi"]], "mne.channels.read_dig_fif": [[329, "mne-channels-read-dig-fif"]], "Examples using mne.channels.read_dig_fif": [[329, "examples-using-mne-channels-read-dig-fif"]], "mne.channels.read_dig_hpts": [[330, "mne-channels-read-dig-hpts"]], "mne.channels.read_dig_localite": [[331, "mne-channels-read-dig-localite"]], "mne.channels.read_dig_polhemus_isotrak": [[332, "mne-channels-read-dig-polhemus-isotrak"]], "Examples using mne.channels.read_dig_polhemus_isotrak": [[332, "examples-using-mne-channels-read-dig-polhemus-isotrak"]], "mne.channels.read_layout": [[333, "mne-channels-read-layout"]], "Examples using mne.channels.read_layout": [[333, "examples-using-mne-channels-read-layout"]], "mne.channels.read_polhemus_fastscan": [[334, "mne-channels-read-polhemus-fastscan"]], "mne.channels.rename_channels": [[335, "mne-channels-rename-channels"]], "mne.chpi.compute_chpi_amplitudes": [[336, "mne-chpi-compute-chpi-amplitudes"]], "Examples using mne.chpi.compute_chpi_amplitudes": [[336, "examples-using-mne-chpi-compute-chpi-amplitudes"]], "mne.chpi.compute_chpi_locs": [[337, "mne-chpi-compute-chpi-locs"]], "Examples using mne.chpi.compute_chpi_locs": [[337, "examples-using-mne-chpi-compute-chpi-locs"]], "mne.chpi.compute_chpi_snr": [[338, "mne-chpi-compute-chpi-snr"]], "Examples using mne.chpi.compute_chpi_snr": [[338, "examples-using-mne-chpi-compute-chpi-snr"]], "mne.chpi.compute_head_pos": [[339, "mne-chpi-compute-head-pos"]], "Examples using mne.chpi.compute_head_pos": [[339, "examples-using-mne-chpi-compute-head-pos"]], "mne.chpi.extract_chpi_locs_ctf": [[340, "mne-chpi-extract-chpi-locs-ctf"]], "Examples using mne.chpi.extract_chpi_locs_ctf": [[340, "examples-using-mne-chpi-extract-chpi-locs-ctf"]], "mne.chpi.extract_chpi_locs_kit": [[341, "mne-chpi-extract-chpi-locs-kit"]], "mne.chpi.filter_chpi": [[342, "mne-chpi-filter-chpi"]], "Examples using mne.chpi.filter_chpi": [[342, "examples-using-mne-chpi-filter-chpi"]], "mne.chpi.get_active_chpi": [[343, "mne-chpi-get-active-chpi"]], "Examples using mne.chpi.get_active_chpi": [[343, "examples-using-mne-chpi-get-active-chpi"]], "mne.chpi.get_chpi_info": [[344, "mne-chpi-get-chpi-info"]], "Examples using mne.chpi.get_chpi_info": [[344, "examples-using-mne-chpi-get-chpi-info"]], "mne.chpi.head_pos_to_trans_rot_t": [[345, "mne-chpi-head-pos-to-trans-rot-t"]], "mne.chpi.read_head_pos": [[346, "mne-chpi-read-head-pos"]], "Examples using mne.chpi.read_head_pos": [[346, "examples-using-mne-chpi-read-head-pos"]], "mne.chpi.write_head_pos": [[347, "mne-chpi-write-head-pos"]], "Examples using mne.chpi.write_head_pos": [[347, "examples-using-mne-chpi-write-head-pos"]], "mne.combine_evoked": [[348, "mne-combine-evoked"]], "Examples using mne.combine_evoked": [[348, "examples-using-mne-combine-evoked"]], "mne.compute_covariance": [[349, "mne-compute-covariance"]], "Examples using mne.compute_covariance": [[349, "examples-using-mne-compute-covariance"]], "mne.compute_proj_epochs": [[350, "mne-compute-proj-epochs"]], "Examples using mne.compute_proj_epochs": [[350, "examples-using-mne-compute-proj-epochs"]], "mne.compute_proj_evoked": [[351, "mne-compute-proj-evoked"]], "Examples using mne.compute_proj_evoked": [[351, "examples-using-mne-compute-proj-evoked"]], "mne.compute_proj_raw": [[352, "mne-compute-proj-raw"]], "Examples using mne.compute_proj_raw": [[352, "examples-using-mne-compute-proj-raw"]], "mne.compute_rank": [[353, "mne-compute-rank"]], "Examples using mne.compute_rank": [[353, "examples-using-mne-compute-rank"]], "mne.compute_raw_covariance": [[354, "mne-compute-raw-covariance"]], "Examples using mne.compute_raw_covariance": [[354, "examples-using-mne-compute-raw-covariance"]], "mne.compute_source_morph": [[355, "mne-compute-source-morph"]], "Examples using mne.compute_source_morph": [[355, "examples-using-mne-compute-source-morph"]], "mne.concatenate_epochs": [[356, "mne-concatenate-epochs"]], "Examples using mne.concatenate_epochs": [[356, "examples-using-mne-concatenate-epochs"]], "mne.concatenate_events": [[357, "mne-concatenate-events"]], "mne.concatenate_raws": [[358, "mne-concatenate-raws"]], "Examples using mne.concatenate_raws": [[358, "examples-using-mne-concatenate-raws"]], "mne.convert_forward_solution": [[359, "mne-convert-forward-solution"]], "Examples using mne.convert_forward_solution": [[359, "examples-using-mne-convert-forward-solution"]], "mne.coreg.Coregistration": [[360, "mne-coreg-coregistration"]], "Examples using mne.coreg.Coregistration": [[360, "examples-using-mne-coreg-coregistration"]], "mne.coreg.estimate_head_mri_t": [[361, "mne-coreg-estimate-head-mri-t"]], "Examples using mne.coreg.estimate_head_mri_t": [[361, "examples-using-mne-coreg-estimate-head-mri-t"]], "mne.coreg.get_mni_fiducials": [[362, "mne-coreg-get-mni-fiducials"]], "Examples using mne.coreg.get_mni_fiducials": [[362, "examples-using-mne-coreg-get-mni-fiducials"]], "mne.cov.compute_whitener": [[363, "mne-cov-compute-whitener"]], "mne.cov.prepare_noise_cov": [[364, "mne-cov-prepare-noise-cov"]], "mne.cov.regularize": [[365, "mne-cov-regularize"]], "Examples using mne.cov.regularize": [[365, "examples-using-mne-cov-regularize"]], "mne.create_default_subject": [[366, "mne-create-default-subject"]], "mne.create_info": [[367, "mne-create-info"]], "Examples using mne.create_info": [[367, "examples-using-mne-create-info"]], "mne.cuda.get_cuda_memory": [[368, "mne-cuda-get-cuda-memory"]], "mne.cuda.init_cuda": [[369, "mne-cuda-init-cuda"]], "mne.cuda.set_cuda_device": [[370, "mne-cuda-set-cuda-device"]], "mne.datasets.brainstorm.bst_auditory.data_path": [[371, "mne-datasets-brainstorm-bst-auditory-data-path"]], "mne.datasets.brainstorm.bst_raw.data_path": [[372, "mne-datasets-brainstorm-bst-raw-data-path"]], "mne.datasets.brainstorm.bst_resting.data_path": [[373, "mne-datasets-brainstorm-bst-resting-data-path"]], "mne.datasets.eegbci.load_data": [[374, "mne-datasets-eegbci-load-data"]], "mne.datasets.eegbci.standardize": [[375, "mne-datasets-eegbci-standardize"]], "mne.datasets.epilepsy_ecog.data_path": [[376, "mne-datasets-epilepsy-ecog-data-path"]], "Examples using mne.datasets.epilepsy_ecog.data_path": [[376, "examples-using-mne-datasets-epilepsy-ecog-data-path"]], "mne.datasets.erp_core.data_path": [[377, "mne-datasets-erp-core-data-path"]], "mne.datasets.fetch_aparc_sub_parcellation": [[378, "mne-datasets-fetch-aparc-sub-parcellation"]], "mne.datasets.fetch_dataset": [[379, "mne-datasets-fetch-dataset"]], "mne.datasets.fetch_fsaverage": [[380, "mne-datasets-fetch-fsaverage"]], "mne.datasets.fetch_hcp_mmp_parcellation": [[381, "mne-datasets-fetch-hcp-mmp-parcellation"]], "mne.datasets.fetch_infant_template": [[382, "mne-datasets-fetch-infant-template"]], "Examples using mne.datasets.fetch_infant_template": [[382, "examples-using-mne-datasets-fetch-infant-template"]], "mne.datasets.fetch_phantom": [[383, "mne-datasets-fetch-phantom"]], "mne.datasets.fnirs_motor.data_path": [[384, "mne-datasets-fnirs-motor-data-path"]], "mne.datasets.has_dataset": [[385, "mne-datasets-has-dataset"]], "mne.datasets.hf_sef.data_path": [[386, "mne-datasets-hf-sef-data-path"]], "mne.datasets.kiloword.data_path": [[387, "mne-datasets-kiloword-data-path"]], "Examples using mne.datasets.kiloword.data_path": [[387, "examples-using-mne-datasets-kiloword-data-path"]], "mne.datasets.limo.load_data": [[388, "mne-datasets-limo-load-data"]], "mne.datasets.misc.data_path": [[389, "mne-datasets-misc-data-path"]], "mne.datasets.mtrf.data_path": [[390, "mne-datasets-mtrf-data-path"]], "mne.datasets.multimodal.data_path": [[391, "mne-datasets-multimodal-data-path"]], "mne.datasets.opm.data_path": [[392, "mne-datasets-opm-data-path"]], "mne.datasets.phantom_4dbti.data_path": [[393, "mne-datasets-phantom-4dbti-data-path"]], "mne.datasets.refmeg_noise.data_path": [[394, "mne-datasets-refmeg-noise-data-path"]], "mne.datasets.sample.data_path": [[395, "mne-datasets-sample-data-path"]], "Examples using mne.datasets.sample.data_path": [[395, "examples-using-mne-datasets-sample-data-path"]], "mne.datasets.sleep_physionet.age.fetch_data": [[396, "mne-datasets-sleep-physionet-age-fetch-data"]], "Examples using mne.datasets.sleep_physionet.age.fetch_data": [[396, "examples-using-mne-datasets-sleep-physionet-age-fetch-data"]], "mne.datasets.sleep_physionet.temazepam.fetch_data": [[397, "mne-datasets-sleep-physionet-temazepam-fetch-data"]], "mne.datasets.somato.data_path": [[398, "mne-datasets-somato-data-path"]], "mne.datasets.spm_face.data_path": [[399, "mne-datasets-spm-face-data-path"]], "Examples using mne.datasets.spm_face.data_path": [[399, "examples-using-mne-datasets-spm-face-data-path"]], "mne.datasets.ssvep.data_path": [[400, "mne-datasets-ssvep-data-path"]], "mne.datasets.visual_92_categories.data_path": [[401, "mne-datasets-visual-92-categories-data-path"]], "mne.decimate_surface": [[402, "mne-decimate-surface"]], "mne.decoding.CSP": [[403, "mne-decoding-csp"]], "Examples using mne.decoding.CSP": [[403, "examples-using-mne-decoding-csp"]], "mne.decoding.EMS": [[404, "mne-decoding-ems"]], "Examples using mne.decoding.EMS": [[404, "examples-using-mne-decoding-ems"]], "mne.decoding.FilterEstimator": [[405, "mne-decoding-filterestimator"]], "Examples using mne.decoding.FilterEstimator": [[405, "examples-using-mne-decoding-filterestimator"]], "mne.decoding.GeneralizingEstimator": [[406, "mne-decoding-generalizingestimator"]], "Examples using mne.decoding.GeneralizingEstimator": [[406, "examples-using-mne-decoding-generalizingestimator"]], "mne.decoding.LinearModel": [[407, "mne-decoding-linearmodel"]], "Examples using mne.decoding.LinearModel": [[407, "examples-using-mne-decoding-linearmodel"]], "mne.decoding.PSDEstimator": [[408, "mne-decoding-psdestimator"]], "Examples using mne.decoding.PSDEstimator": [[408, "examples-using-mne-decoding-psdestimator"]], "mne.decoding.ReceptiveField": [[409, "mne-decoding-receptivefield"]], "Examples using mne.decoding.ReceptiveField": [[409, "examples-using-mne-decoding-receptivefield"]], "mne.decoding.SPoC": [[410, "mne-decoding-spoc"]], "Examples using mne.decoding.SPoC": [[410, "examples-using-mne-decoding-spoc"]], "mne.decoding.SSD": [[411, "mne-decoding-ssd"]], "Examples using mne.decoding.SSD": [[411, "examples-using-mne-decoding-ssd"]], "mne.decoding.Scaler": [[412, "mne-decoding-scaler"]], "Examples using mne.decoding.Scaler": [[412, "examples-using-mne-decoding-scaler"]], "mne.decoding.SlidingEstimator": [[413, "mne-decoding-slidingestimator"]], "Examples using mne.decoding.SlidingEstimator": [[413, "examples-using-mne-decoding-slidingestimator"]], "mne.decoding.TemporalFilter": [[414, "mne-decoding-temporalfilter"]], "mne.decoding.TimeDelayingRidge": [[415, "mne-decoding-timedelayingridge"]], "Examples using mne.decoding.TimeDelayingRidge": [[415, "examples-using-mne-decoding-timedelayingridge"]], "mne.decoding.TimeFrequency": [[416, "mne-decoding-timefrequency"]], "mne.decoding.UnsupervisedSpatialFilter": [[417, "mne-decoding-unsupervisedspatialfilter"]], "Examples using mne.decoding.UnsupervisedSpatialFilter": [[417, "examples-using-mne-decoding-unsupervisedspatialfilter"]], "mne.decoding.Vectorizer": [[418, "mne-decoding-vectorizer"]], "Examples using mne.decoding.Vectorizer": [[418, "examples-using-mne-decoding-vectorizer"]], "mne.decoding.compute_ems": [[419, "mne-decoding-compute-ems"]], "Examples using mne.decoding.compute_ems": [[419, "examples-using-mne-decoding-compute-ems"]], "mne.decoding.cross_val_multiscore": [[420, "mne-decoding-cross-val-multiscore"]], "Examples using mne.decoding.cross_val_multiscore": [[420, "examples-using-mne-decoding-cross-val-multiscore"]], "mne.decoding.get_coef": [[421, "mne-decoding-get-coef"]], "Examples using mne.decoding.get_coef": [[421, "examples-using-mne-decoding-get-coef"]], "mne.dig_mri_distances": [[422, "mne-dig-mri-distances"]], "Examples using mne.dig_mri_distances": [[422, "examples-using-mne-dig-mri-distances"]], "mne.dipole.get_phantom_dipoles": [[423, "mne-dipole-get-phantom-dipoles"]], "Examples using mne.dipole.get_phantom_dipoles": [[423, "examples-using-mne-dipole-get-phantom-dipoles"]], "mne.epochs.average_movements": [[424, "mne-epochs-average-movements"]], "Examples using mne.epochs.average_movements": [[424, "examples-using-mne-epochs-average-movements"]], "mne.epochs.combine_event_ids": [[425, "mne-epochs-combine-event-ids"]], "mne.epochs.equalize_epoch_counts": [[426, "mne-epochs-equalize-epoch-counts"]], "Examples using mne.epochs.equalize_epoch_counts": [[426, "examples-using-mne-epochs-equalize-epoch-counts"]], "mne.epochs.make_metadata": [[427, "mne-epochs-make-metadata"]], "Examples using mne.epochs.make_metadata": [[427, "examples-using-mne-epochs-make-metadata"]], "mne.equalize_channels": [[428, "mne-equalize-channels"]], "mne.event.define_target_events": [[429, "mne-event-define-target-events"]], "Examples using mne.event.define_target_events": [[429, "examples-using-mne-event-define-target-events"]], "mne.event.match_event_names": [[430, "mne-event-match-event-names"]], "mne.event.shift_time_events": [[431, "mne-event-shift-time-events"]], "mne.events_from_annotations": [[432, "mne-events-from-annotations"]], "Examples using mne.events_from_annotations": [[432, "examples-using-mne-events-from-annotations"]], "mne.export.export_epochs": [[433, "mne-export-export-epochs"]], "mne.export.export_evokeds": [[434, "mne-export-export-evokeds"]], "mne.export.export_evokeds_mff": [[435, "mne-export-export-evokeds-mff"]], "mne.export.export_raw": [[436, "mne-export-export-raw"]], "mne.extract_label_time_course": [[437, "mne-extract-label-time-course"]], "Examples using mne.extract_label_time_course": [[437, "examples-using-mne-extract-label-time-course"]], "mne.filter.construct_iir_filter": [[438, "mne-filter-construct-iir-filter"]], "Examples using mne.filter.construct_iir_filter": [[438, "examples-using-mne-filter-construct-iir-filter"]], "mne.filter.create_filter": [[439, "mne-filter-create-filter"]], "Examples using mne.filter.create_filter": [[439, "examples-using-mne-filter-create-filter"]], "mne.filter.estimate_ringing_samples": [[440, "mne-filter-estimate-ringing-samples"]], "mne.filter.filter_data": [[441, "mne-filter-filter-data"]], "Examples using mne.filter.filter_data": [[441, "examples-using-mne-filter-filter-data"]], "mne.filter.notch_filter": [[442, "mne-filter-notch-filter"]], "mne.filter.resample": [[443, "mne-filter-resample"]], "Examples using mne.filter.resample": [[443, "examples-using-mne-filter-resample"]], "mne.find_events": [[444, "mne-find-events"]], "Examples using mne.find_events": [[444, "examples-using-mne-find-events"]], "mne.find_stim_steps": [[445, "mne-find-stim-steps"]], "mne.fit_dipole": [[446, "mne-fit-dipole"]], "Examples using mne.fit_dipole": [[446, "examples-using-mne-fit-dipole"]], "mne.forward.compute_depth_prior": [[447, "mne-forward-compute-depth-prior"]], "mne.forward.compute_orient_prior": [[448, "mne-forward-compute-orient-prior"]], "mne.forward.restrict_forward_to_label": [[449, "mne-forward-restrict-forward-to-label"]], "mne.forward.restrict_forward_to_stc": [[450, "mne-forward-restrict-forward-to-stc"]], "mne.get_config": [[451, "mne-get-config"]], "Examples using mne.get_config": [[451, "examples-using-mne-get-config"]], "mne.get_config_path": [[452, "mne-get-config-path"]], "Examples using mne.get_config_path": [[452, "examples-using-mne-get-config-path"]], "mne.get_head_surf": [[453, "mne-get-head-surf"]], "mne.get_meg_helmet_surf": [[454, "mne-get-meg-helmet-surf"]], "mne.get_montage_volume_labels": [[455, "mne-get-montage-volume-labels"]], "Examples using mne.get_montage_volume_labels": [[455, "examples-using-mne-get-montage-volume-labels"]], "mne.get_volume_labels_from_aseg": [[456, "mne-get-volume-labels-from-aseg"]], "Examples using mne.get_volume_labels_from_aseg": [[456, "examples-using-mne-get-volume-labels-from-aseg"]], "mne.get_volume_labels_from_src": [[457, "mne-get-volume-labels-from-src"]], "mne.grade_to_tris": [[458, "mne-grade-to-tris"]], "mne.grade_to_vertices": [[459, "mne-grade-to-vertices"]], "mne.grand_average": [[460, "mne-grand-average"]], "Examples using mne.grand_average": [[460, "examples-using-mne-grand-average"]], "mne.grow_labels": [[461, "mne-grow-labels"]], "mne.gui.coregistration": [[462, "mne-gui-coregistration"]], "Examples using mne.gui.coregistration": [[462, "examples-using-mne-gui-coregistration"]], "mne.gui.locate_ieeg": [[463, "mne-gui-locate-ieeg"]], "Examples using mne.gui.locate_ieeg": [[463, "examples-using-mne-gui-locate-ieeg"]], "mne.head_to_mni": [[464, "mne-head-to-mni"]], "mne.head_to_mri": [[465, "mne-head-to-mri"]], "mne.inverse_sparse.gamma_map": [[466, "mne-inverse-sparse-gamma-map"]], "Examples using mne.inverse_sparse.gamma_map": [[466, "examples-using-mne-inverse-sparse-gamma-map"]], "mne.inverse_sparse.make_stc_from_dipoles": [[467, "mne-inverse-sparse-make-stc-from-dipoles"]], "Examples using mne.inverse_sparse.make_stc_from_dipoles": [[467, "examples-using-mne-inverse-sparse-make-stc-from-dipoles"]], "mne.inverse_sparse.mixed_norm": [[468, "mne-inverse-sparse-mixed-norm"]], "Examples using mne.inverse_sparse.mixed_norm": [[468, "examples-using-mne-inverse-sparse-mixed-norm"]], "mne.inverse_sparse.tf_mixed_norm": [[469, "mne-inverse-sparse-tf-mixed-norm"]], "Examples using mne.inverse_sparse.tf_mixed_norm": [[469, "examples-using-mne-inverse-sparse-tf-mixed-norm"]], "mne.io.BaseRaw": [[470, "mne-io-baseraw"]], "Examples using mne.io.BaseRaw": [[470, "examples-using-mne-io-baseraw"]], "mne.io.Raw": [[471, "mne-io-raw"]], "Examples using mne.io.Raw": [[471, "examples-using-mne-io-raw"]], "mne.io.RawArray": [[472, "mne-io-rawarray"]], "Examples using mne.io.RawArray": [[472, "examples-using-mne-io-rawarray"]], "mne.io.anonymize_info": [[473, "mne-io-anonymize-info"]], "mne.io.kit.read_mrk": [[474, "mne-io-kit-read-mrk"]], "mne.io.read_fiducials": [[475, "mne-io-read-fiducials"]], "mne.io.read_info": [[476, "mne-io-read-info"]], "Examples using mne.io.read_info": [[476, "examples-using-mne-io-read-info"]], "mne.io.read_raw": [[477, "mne-io-read-raw"]], "Examples using mne.io.read_raw": [[477, "examples-using-mne-io-read-raw"]], "mne.io.read_raw_artemis123": [[478, "mne-io-read-raw-artemis123"]], "Examples using mne.io.read_raw_artemis123": [[478, "examples-using-mne-io-read-raw-artemis123"]], "mne.io.read_raw_bdf": [[479, "mne-io-read-raw-bdf"]], "Examples using mne.io.read_raw_bdf": [[479, "examples-using-mne-io-read-raw-bdf"]], "mne.io.read_raw_boxy": [[480, "mne-io-read-raw-boxy"]], "Examples using mne.io.read_raw_boxy": [[480, "examples-using-mne-io-read-raw-boxy"]], "mne.io.read_raw_brainvision": [[481, "mne-io-read-raw-brainvision"]], "Examples using mne.io.read_raw_brainvision": [[481, "examples-using-mne-io-read-raw-brainvision"]], "mne.io.read_raw_bti": [[482, "mne-io-read-raw-bti"]], "Examples using mne.io.read_raw_bti": [[482, "examples-using-mne-io-read-raw-bti"]], "mne.io.read_raw_cnt": [[483, "mne-io-read-raw-cnt"]], "Examples using mne.io.read_raw_cnt": [[483, "examples-using-mne-io-read-raw-cnt"]], "mne.io.read_raw_ctf": [[484, "mne-io-read-raw-ctf"]], "Examples using mne.io.read_raw_ctf": [[484, "examples-using-mne-io-read-raw-ctf"]], "mne.io.read_raw_curry": [[485, "mne-io-read-raw-curry"]], "mne.io.read_raw_edf": [[486, "mne-io-read-raw-edf"]], "Examples using mne.io.read_raw_edf": [[486, "examples-using-mne-io-read-raw-edf"]], "mne.io.read_raw_eeglab": [[487, "mne-io-read-raw-eeglab"]], "Examples using mne.io.read_raw_eeglab": [[487, "examples-using-mne-io-read-raw-eeglab"]], "mne.io.read_raw_egi": [[488, "mne-io-read-raw-egi"]], "Examples using mne.io.read_raw_egi": [[488, "examples-using-mne-io-read-raw-egi"]], "mne.io.read_raw_eximia": [[489, "mne-io-read-raw-eximia"]], "Examples using mne.io.read_raw_eximia": [[489, "examples-using-mne-io-read-raw-eximia"]], "mne.io.read_raw_fieldtrip": [[490, "mne-io-read-raw-fieldtrip"]], "Examples using mne.io.read_raw_fieldtrip": [[490, "examples-using-mne-io-read-raw-fieldtrip"]], "mne.io.read_raw_fif": [[491, "mne-io-read-raw-fif"]], "Examples using mne.io.read_raw_fif": [[491, "examples-using-mne-io-read-raw-fif"]], "mne.io.read_raw_gdf": [[492, "mne-io-read-raw-gdf"]], "Examples using mne.io.read_raw_gdf": [[492, "examples-using-mne-io-read-raw-gdf"]], "mne.io.read_raw_hitachi": [[493, "mne-io-read-raw-hitachi"]], "Examples using mne.io.read_raw_hitachi": [[493, "examples-using-mne-io-read-raw-hitachi"]], "mne.io.read_raw_kit": [[494, "mne-io-read-raw-kit"]], "Examples using mne.io.read_raw_kit": [[494, "examples-using-mne-io-read-raw-kit"]], "mne.io.read_raw_nedf": [[495, "mne-io-read-raw-nedf"]], "mne.io.read_raw_nicolet": [[496, "mne-io-read-raw-nicolet"]], "Examples using mne.io.read_raw_nicolet": [[496, "examples-using-mne-io-read-raw-nicolet"]], "mne.io.read_raw_nihon": [[497, "mne-io-read-raw-nihon"]], "Examples using mne.io.read_raw_nihon": [[497, "examples-using-mne-io-read-raw-nihon"]], "mne.io.read_raw_nirx": [[498, "mne-io-read-raw-nirx"]], "Examples using mne.io.read_raw_nirx": [[498, "examples-using-mne-io-read-raw-nirx"]], "mne.io.read_raw_persyst": [[499, "mne-io-read-raw-persyst"]], "Examples using mne.io.read_raw_persyst": [[499, "examples-using-mne-io-read-raw-persyst"]], "mne.io.read_raw_snirf": [[500, "mne-io-read-raw-snirf"]], "Examples using mne.io.read_raw_snirf": [[500, "examples-using-mne-io-read-raw-snirf"]], "mne.io.show_fiff": [[501, "mne-io-show-fiff"]], "mne.io.write_fiducials": [[502, "mne-io-write-fiducials"]], "mne.label.select_sources": [[503, "mne-label-select-sources"]], "Examples using mne.label.select_sources": [[503, "examples-using-mne-label-select-sources"]], "mne.label_sign_flip": [[504, "mne-label-sign-flip"]], "Examples using mne.label_sign_flip": [[504, "examples-using-mne-label-sign-flip"]], "mne.labels_to_stc": [[505, "mne-labels-to-stc"]], "Examples using mne.labels_to_stc": [[505, "examples-using-mne-labels-to-stc"]], "mne.make_ad_hoc_cov": [[506, "mne-make-ad-hoc-cov"]], "Examples using mne.make_ad_hoc_cov": [[506, "examples-using-mne-make-ad-hoc-cov"]], "mne.make_bem_model": [[507, "mne-make-bem-model"]], "Examples using mne.make_bem_model": [[507, "examples-using-mne-make-bem-model"]], "mne.make_bem_solution": [[508, "mne-make-bem-solution"]], "Examples using mne.make_bem_solution": [[508, "examples-using-mne-make-bem-solution"]], "mne.make_field_map": [[509, "mne-make-field-map"]], "Examples using mne.make_field_map": [[509, "examples-using-mne-make-field-map"]], "mne.make_fixed_length_epochs": [[510, "mne-make-fixed-length-epochs"]], "Examples using mne.make_fixed_length_epochs": [[510, "examples-using-mne-make-fixed-length-epochs"]], "mne.make_fixed_length_events": [[511, "mne-make-fixed-length-events"]], "Examples using mne.make_fixed_length_events": [[511, "examples-using-mne-make-fixed-length-events"]], "mne.make_forward_dipole": [[512, "mne-make-forward-dipole"]], "Examples using mne.make_forward_dipole": [[512, "examples-using-mne-make-forward-dipole"]], "mne.make_forward_solution": [[513, "mne-make-forward-solution"]], "Examples using mne.make_forward_solution": [[513, "examples-using-mne-make-forward-solution"]], "mne.make_sphere_model": [[514, "mne-make-sphere-model"]], "Examples using mne.make_sphere_model": [[514, "examples-using-mne-make-sphere-model"]], "mne.merge_events": [[515, "mne-merge-events"]], "Examples using mne.merge_events": [[515, "examples-using-mne-merge-events"]], "mne.minimum_norm.InverseOperator": [[516, "mne-minimum-norm-inverseoperator"]], "Examples using mne.minimum_norm.InverseOperator": [[516, "examples-using-mne-minimum-norm-inverseoperator"]], "mne.minimum_norm.apply_inverse": [[517, "mne-minimum-norm-apply-inverse"]], "Examples using mne.minimum_norm.apply_inverse": [[517, "examples-using-mne-minimum-norm-apply-inverse"]], "mne.minimum_norm.apply_inverse_cov": [[518, "mne-minimum-norm-apply-inverse-cov"]], "Examples using mne.minimum_norm.apply_inverse_cov": [[518, "examples-using-mne-minimum-norm-apply-inverse-cov"]], "mne.minimum_norm.apply_inverse_epochs": [[519, "mne-minimum-norm-apply-inverse-epochs"]], "Examples using mne.minimum_norm.apply_inverse_epochs": [[519, "examples-using-mne-minimum-norm-apply-inverse-epochs"]], "mne.minimum_norm.apply_inverse_raw": [[520, "mne-minimum-norm-apply-inverse-raw"]], "Examples using mne.minimum_norm.apply_inverse_raw": [[520, "examples-using-mne-minimum-norm-apply-inverse-raw"]], "mne.minimum_norm.apply_inverse_tfr_epochs": [[521, "mne-minimum-norm-apply-inverse-tfr-epochs"]], "mne.minimum_norm.compute_rank_inverse": [[522, "mne-minimum-norm-compute-rank-inverse"]], "mne.minimum_norm.compute_source_psd": [[523, "mne-minimum-norm-compute-source-psd"]], "Examples using mne.minimum_norm.compute_source_psd": [[523, "examples-using-mne-minimum-norm-compute-source-psd"]], "mne.minimum_norm.compute_source_psd_epochs": [[524, "mne-minimum-norm-compute-source-psd-epochs"]], "Examples using mne.minimum_norm.compute_source_psd_epochs": [[524, "examples-using-mne-minimum-norm-compute-source-psd-epochs"]], "mne.minimum_norm.estimate_snr": [[525, "mne-minimum-norm-estimate-snr"]], "mne.minimum_norm.get_cross_talk": [[526, "mne-minimum-norm-get-cross-talk"]], "Examples using mne.minimum_norm.get_cross_talk": [[526, "examples-using-mne-minimum-norm-get-cross-talk"]], "mne.minimum_norm.get_point_spread": [[527, "mne-minimum-norm-get-point-spread"]], "Examples using mne.minimum_norm.get_point_spread": [[527, "examples-using-mne-minimum-norm-get-point-spread"]], "mne.minimum_norm.make_inverse_operator": [[528, "mne-minimum-norm-make-inverse-operator"]], "Examples using mne.minimum_norm.make_inverse_operator": [[528, "examples-using-mne-minimum-norm-make-inverse-operator"]], "mne.minimum_norm.make_inverse_resolution_matrix": [[529, "mne-minimum-norm-make-inverse-resolution-matrix"]], "Examples using mne.minimum_norm.make_inverse_resolution_matrix": [[529, "examples-using-mne-minimum-norm-make-inverse-resolution-matrix"]], "mne.minimum_norm.prepare_inverse_operator": [[530, "mne-minimum-norm-prepare-inverse-operator"]], "mne.minimum_norm.read_inverse_operator": [[531, "mne-minimum-norm-read-inverse-operator"]], "Examples using mne.minimum_norm.read_inverse_operator": [[531, "examples-using-mne-minimum-norm-read-inverse-operator"]], "mne.minimum_norm.resolution_metrics": [[532, "mne-minimum-norm-resolution-metrics"]], "Examples using mne.minimum_norm.resolution_metrics": [[532, "examples-using-mne-minimum-norm-resolution-metrics"]], "mne.minimum_norm.source_band_induced_power": [[533, "mne-minimum-norm-source-band-induced-power"]], "Examples using mne.minimum_norm.source_band_induced_power": [[533, "examples-using-mne-minimum-norm-source-band-induced-power"]], "mne.minimum_norm.source_induced_power": [[534, "mne-minimum-norm-source-induced-power"]], "Examples using mne.minimum_norm.source_induced_power": [[534, "examples-using-mne-minimum-norm-source-induced-power"]], "mne.minimum_norm.write_inverse_operator": [[535, "mne-minimum-norm-write-inverse-operator"]], "mne.morph_labels": [[536, "mne-morph-labels"]], "mne.morph_source_spaces": [[537, "mne-morph-source-spaces"]], "Examples using mne.morph_source_spaces": [[537, "examples-using-mne-morph-source-spaces"]], "mne.open_docs": [[538, "mne-open-docs"]], "mne.open_report": [[539, "mne-open-report"]], "Examples using mne.open_report": [[539, "examples-using-mne-open-report"]], "mne.parse_config": [[540, "mne-parse-config"]], "mne.pick_channels": [[541, "mne-pick-channels"]], "Examples using mne.pick_channels": [[541, "examples-using-mne-pick-channels"]], "mne.pick_channels_cov": [[542, "mne-pick-channels-cov"]], "mne.pick_channels_forward": [[543, "mne-pick-channels-forward"]], "mne.pick_channels_regexp": [[544, "mne-pick-channels-regexp"]], "Examples using mne.pick_channels_regexp": [[544, "examples-using-mne-pick-channels-regexp"]], "mne.pick_events": [[545, "mne-pick-events"]], "Examples using mne.pick_events": [[545, "examples-using-mne-pick-events"]], "mne.pick_info": [[546, "mne-pick-info"]], "Examples using mne.pick_info": [[546, "examples-using-mne-pick-info"]], "mne.pick_types": [[547, "mne-pick-types"]], "Examples using mne.pick_types": [[547, "examples-using-mne-pick-types"]], "mne.pick_types_forward": [[548, "mne-pick-types-forward"]], "Examples using mne.pick_types_forward": [[548, "examples-using-mne-pick-types-forward"]], "mne.preprocessing.EOGRegression": [[549, "mne-preprocessing-eogregression"]], "Examples using mne.preprocessing.EOGRegression": [[549, "examples-using-mne-preprocessing-eogregression"]], "mne.preprocessing.ICA": [[550, "mne-preprocessing-ica"]], "Examples using mne.preprocessing.ICA": [[550, "examples-using-mne-preprocessing-ica"]], "mne.preprocessing.Xdawn": [[551, "mne-preprocessing-xdawn"]], "Examples using mne.preprocessing.Xdawn": [[551, "examples-using-mne-preprocessing-xdawn"]], "mne.preprocessing.annotate_amplitude": [[552, "mne-preprocessing-annotate-amplitude"]], "mne.preprocessing.annotate_break": [[553, "mne-preprocessing-annotate-break"]], "Examples using mne.preprocessing.annotate_break": [[553, "examples-using-mne-preprocessing-annotate-break"]], "mne.preprocessing.annotate_movement": [[554, "mne-preprocessing-annotate-movement"]], "Examples using mne.preprocessing.annotate_movement": [[554, "examples-using-mne-preprocessing-annotate-movement"]], "mne.preprocessing.annotate_muscle_zscore": [[555, "mne-preprocessing-annotate-muscle-zscore"]], "Examples using mne.preprocessing.annotate_muscle_zscore": [[555, "examples-using-mne-preprocessing-annotate-muscle-zscore"]], "mne.preprocessing.annotate_nan": [[556, "mne-preprocessing-annotate-nan"]], "mne.preprocessing.compute_average_dev_head_t": [[557, "mne-preprocessing-compute-average-dev-head-t"]], "Examples using mne.preprocessing.compute_average_dev_head_t": [[557, "examples-using-mne-preprocessing-compute-average-dev-head-t"]], "mne.preprocessing.compute_bridged_electrodes": [[558, "mne-preprocessing-compute-bridged-electrodes"]], "Examples using mne.preprocessing.compute_bridged_electrodes": [[558, "examples-using-mne-preprocessing-compute-bridged-electrodes"]], "mne.preprocessing.compute_current_source_density": [[559, "mne-preprocessing-compute-current-source-density"]], "Examples using mne.preprocessing.compute_current_source_density": [[559, "examples-using-mne-preprocessing-compute-current-source-density"]], "mne.preprocessing.compute_fine_calibration": [[560, "mne-preprocessing-compute-fine-calibration"]], "mne.preprocessing.compute_maxwell_basis": [[561, "mne-preprocessing-compute-maxwell-basis"]], "mne.preprocessing.compute_proj_ecg": [[562, "mne-preprocessing-compute-proj-ecg"]], "Examples using mne.preprocessing.compute_proj_ecg": [[562, "examples-using-mne-preprocessing-compute-proj-ecg"]], "mne.preprocessing.compute_proj_eog": [[563, "mne-preprocessing-compute-proj-eog"]], "Examples using mne.preprocessing.compute_proj_eog": [[563, "examples-using-mne-preprocessing-compute-proj-eog"]], "mne.preprocessing.corrmap": [[564, "mne-preprocessing-corrmap"]], "Examples using mne.preprocessing.corrmap": [[564, "examples-using-mne-preprocessing-corrmap"]], "mne.preprocessing.cortical_signal_suppression": [[565, "mne-preprocessing-cortical-signal-suppression"]], "Examples using mne.preprocessing.cortical_signal_suppression": [[565, "examples-using-mne-preprocessing-cortical-signal-suppression"]], "mne.preprocessing.create_ecg_epochs": [[566, "mne-preprocessing-create-ecg-epochs"]], "Examples using mne.preprocessing.create_ecg_epochs": [[566, "examples-using-mne-preprocessing-create-ecg-epochs"]], "mne.preprocessing.create_eog_epochs": [[567, "mne-preprocessing-create-eog-epochs"]], "Examples using mne.preprocessing.create_eog_epochs": [[567, "examples-using-mne-preprocessing-create-eog-epochs"]], "mne.preprocessing.equalize_bads": [[568, "mne-preprocessing-equalize-bads"]], "mne.preprocessing.find_bad_channels_maxwell": [[569, "mne-preprocessing-find-bad-channels-maxwell"]], "Examples using mne.preprocessing.find_bad_channels_maxwell": [[569, "examples-using-mne-preprocessing-find-bad-channels-maxwell"]], "mne.preprocessing.find_ecg_events": [[570, "mne-preprocessing-find-ecg-events"]], "Examples using mne.preprocessing.find_ecg_events": [[570, "examples-using-mne-preprocessing-find-ecg-events"]], "mne.preprocessing.find_eog_events": [[571, "mne-preprocessing-find-eog-events"]], "Examples using mne.preprocessing.find_eog_events": [[571, "examples-using-mne-preprocessing-find-eog-events"]], "mne.preprocessing.fix_stim_artifact": [[572, "mne-preprocessing-fix-stim-artifact"]], "Examples using mne.preprocessing.fix_stim_artifact": [[572, "examples-using-mne-preprocessing-fix-stim-artifact"]], "mne.preprocessing.ica_find_ecg_events": [[573, "mne-preprocessing-ica-find-ecg-events"]], "mne.preprocessing.ica_find_eog_events": [[574, "mne-preprocessing-ica-find-eog-events"]], "mne.preprocessing.ieeg.project_sensors_onto_brain": [[575, "mne-preprocessing-ieeg-project-sensors-onto-brain"]], "Examples using mne.preprocessing.ieeg.project_sensors_onto_brain": [[575, "examples-using-mne-preprocessing-ieeg-project-sensors-onto-brain"]], "mne.preprocessing.infomax": [[576, "mne-preprocessing-infomax"]], "mne.preprocessing.interpolate_bridged_electrodes": [[577, "mne-preprocessing-interpolate-bridged-electrodes"]], "Examples using mne.preprocessing.interpolate_bridged_electrodes": [[577, "examples-using-mne-preprocessing-interpolate-bridged-electrodes"]], "mne.preprocessing.maxwell_filter": [[578, "mne-preprocessing-maxwell-filter"]], "Examples using mne.preprocessing.maxwell_filter": [[578, "examples-using-mne-preprocessing-maxwell-filter"]], "mne.preprocessing.maxwell_filter_prepare_emptyroom": [[579, "mne-preprocessing-maxwell-filter-prepare-emptyroom"]], "mne.preprocessing.nirs.beer_lambert_law": [[580, "mne-preprocessing-nirs-beer-lambert-law"]], "Examples using mne.preprocessing.nirs.beer_lambert_law": [[580, "examples-using-mne-preprocessing-nirs-beer-lambert-law"]], "mne.preprocessing.nirs.optical_density": [[581, "mne-preprocessing-nirs-optical-density"]], "Examples using mne.preprocessing.nirs.optical_density": [[581, "examples-using-mne-preprocessing-nirs-optical-density"]], "mne.preprocessing.nirs.scalp_coupling_index": [[582, "mne-preprocessing-nirs-scalp-coupling-index"]], "Examples using mne.preprocessing.nirs.scalp_coupling_index": [[582, "examples-using-mne-preprocessing-nirs-scalp-coupling-index"]], "mne.preprocessing.nirs.short_channels": [[583, "mne-preprocessing-nirs-short-channels"]], "mne.preprocessing.nirs.source_detector_distances": [[584, "mne-preprocessing-nirs-source-detector-distances"]], "Examples using mne.preprocessing.nirs.source_detector_distances": [[584, "examples-using-mne-preprocessing-nirs-source-detector-distances"]], "mne.preprocessing.nirs.temporal_derivative_distribution_repair": [[585, "mne-preprocessing-nirs-temporal-derivative-distribution-repair"]], "Examples using mne.preprocessing.nirs.temporal_derivative_distribution_repair": [[585, "examples-using-mne-preprocessing-nirs-temporal-derivative-distribution-repair"]], "mne.preprocessing.oversampled_temporal_projection": [[586, "mne-preprocessing-oversampled-temporal-projection"]], "Examples using mne.preprocessing.oversampled_temporal_projection": [[586, "examples-using-mne-preprocessing-oversampled-temporal-projection"]], "mne.preprocessing.peak_finder": [[587, "mne-preprocessing-peak-finder"]], "mne.preprocessing.read_eog_regression": [[588, "mne-preprocessing-read-eog-regression"]], "mne.preprocessing.read_fine_calibration": [[589, "mne-preprocessing-read-fine-calibration"]], "mne.preprocessing.read_ica": [[590, "mne-preprocessing-read-ica"]], "mne.preprocessing.read_ica_eeglab": [[591, "mne-preprocessing-read-ica-eeglab"]], "mne.preprocessing.realign_raw": [[592, "mne-preprocessing-realign-raw"]], "mne.preprocessing.regress_artifact": [[593, "mne-preprocessing-regress-artifact"]], "mne.preprocessing.write_fine_calibration": [[594, "mne-preprocessing-write-fine-calibration"]], "mne.random_parcellation": [[595, "mne-random-parcellation"]], "mne.read_annotations": [[596, "mne-read-annotations"]], "Examples using mne.read_annotations": [[596, "examples-using-mne-read-annotations"]], "mne.read_bem_solution": [[597, "mne-read-bem-solution"]], "Examples using mne.read_bem_solution": [[597, "examples-using-mne-read-bem-solution"]], "mne.read_bem_surfaces": [[598, "mne-read-bem-surfaces"]], "Examples using mne.read_bem_surfaces": [[598, "examples-using-mne-read-bem-surfaces"]], "mne.read_cov": [[599, "mne-read-cov"]], "Examples using mne.read_cov": [[599, "examples-using-mne-read-cov"]], "mne.read_dipole": [[600, "mne-read-dipole"]], "Examples using mne.read_dipole": [[600, "examples-using-mne-read-dipole"]], "mne.read_epochs": [[601, "mne-read-epochs"]], "Examples using mne.read_epochs": [[601, "examples-using-mne-read-epochs"]], "mne.read_epochs_eeglab": [[602, "mne-read-epochs-eeglab"]], "Examples using mne.read_epochs_eeglab": [[602, "examples-using-mne-read-epochs-eeglab"]], "mne.read_epochs_fieldtrip": [[603, "mne-read-epochs-fieldtrip"]], "Examples using mne.read_epochs_fieldtrip": [[603, "examples-using-mne-read-epochs-fieldtrip"]], "mne.read_epochs_kit": [[604, "mne-read-epochs-kit"]], "Examples using mne.read_epochs_kit": [[604, "examples-using-mne-read-epochs-kit"]], "mne.read_events": [[605, "mne-read-events"]], "Examples using mne.read_events": [[605, "examples-using-mne-read-events"]], "mne.read_evoked_besa": [[606, "mne-read-evoked-besa"]], "mne.read_evoked_fieldtrip": [[607, "mne-read-evoked-fieldtrip"]], "Examples using mne.read_evoked_fieldtrip": [[607, "examples-using-mne-read-evoked-fieldtrip"]], "mne.read_evokeds": [[608, "mne-read-evokeds"]], "Examples using mne.read_evokeds": [[608, "examples-using-mne-read-evokeds"]], "mne.read_evokeds_mff": [[609, "mne-read-evokeds-mff"]], "mne.read_forward_solution": [[610, "mne-read-forward-solution"]], "Examples using mne.read_forward_solution": [[610, "examples-using-mne-read-forward-solution"]], "mne.read_freesurfer_lut": [[611, "mne-read-freesurfer-lut"]], "mne.read_label": [[612, "mne-read-label"]], "Examples using mne.read_label": [[612, "examples-using-mne-read-label"]], "mne.read_labels_from_annot": [[613, "mne-read-labels-from-annot"]], "Examples using mne.read_labels_from_annot": [[613, "examples-using-mne-read-labels-from-annot"]], "mne.read_lta": [[614, "mne-read-lta"]], "mne.read_morph_map": [[615, "mne-read-morph-map"]], "mne.read_proj": [[616, "mne-read-proj"]], "Examples using mne.read_proj": [[616, "examples-using-mne-read-proj"]], "mne.read_reject_parameters": [[617, "mne-read-reject-parameters"]], "mne.read_source_estimate": [[618, "mne-read-source-estimate"]], "Examples using mne.read_source_estimate": [[618, "examples-using-mne-read-source-estimate"]], "mne.read_source_morph": [[619, "mne-read-source-morph"]], "Examples using mne.read_source_morph": [[619, "examples-using-mne-read-source-morph"]], "mne.read_source_spaces": [[620, "mne-read-source-spaces"]], "Examples using mne.read_source_spaces": [[620, "examples-using-mne-read-source-spaces"]], "mne.read_surface": [[621, "mne-read-surface"]], "Examples using mne.read_surface": [[621, "examples-using-mne-read-surface"]], "mne.read_talxfm": [[622, "mne-read-talxfm"]], "Examples using mne.read_talxfm": [[622, "examples-using-mne-read-talxfm"]], "mne.read_trans": [[623, "mne-read-trans"]], "Examples using mne.read_trans": [[623, "examples-using-mne-read-trans"]], "mne.read_tri": [[624, "mne-read-tri"]], "mne.read_vectorview_selection": [[625, "mne-read-vectorview-selection"]], "Examples using mne.read_vectorview_selection": [[625, "examples-using-mne-read-vectorview-selection"]], "mne.rename_channels": [[626, "mne-rename-channels"]], "mne.scale_bem": [[627, "mne-scale-bem"]], "mne.scale_labels": [[628, "mne-scale-labels"]], "mne.scale_mri": [[629, "mne-scale-mri"]], "Examples using mne.scale_mri": [[629, "examples-using-mne-scale-mri"]], "mne.scale_source_space": [[630, "mne-scale-source-space"]], "mne.sensitivity_map": [[631, "mne-sensitivity-map"]], "Examples using mne.sensitivity_map": [[631, "examples-using-mne-sensitivity-map"]], "mne.set_bipolar_reference": [[632, "mne-set-bipolar-reference"]], "Examples using mne.set_bipolar_reference": [[632, "examples-using-mne-set-bipolar-reference"]], "mne.set_cache_dir": [[633, "mne-set-cache-dir"]], "mne.set_config": [[634, "mne-set-config"]], "Examples using mne.set_config": [[634, "examples-using-mne-set-config"]], "mne.set_eeg_reference": [[635, "mne-set-eeg-reference"]], "Examples using mne.set_eeg_reference": [[635, "examples-using-mne-set-eeg-reference"]], "mne.set_log_file": [[636, "mne-set-log-file"]], "mne.set_log_level": [[637, "mne-set-log-level"]], "Examples using mne.set_log_level": [[637, "examples-using-mne-set-log-level"]], "mne.setup_source_space": [[638, "mne-setup-source-space"]], "Examples using mne.setup_source_space": [[638, "examples-using-mne-setup-source-space"]], "mne.setup_volume_source_space": [[639, "mne-setup-volume-source-space"]], "Examples using mne.setup_volume_source_space": [[639, "examples-using-mne-setup-volume-source-space"]], "mne.simulation.SourceSimulator": [[640, "mne-simulation-sourcesimulator"]], "Examples using mne.simulation.SourceSimulator": [[640, "examples-using-mne-simulation-sourcesimulator"]], "mne.simulation.add_chpi": [[641, "mne-simulation-add-chpi"]], "mne.simulation.add_ecg": [[642, "mne-simulation-add-ecg"]], "Examples using mne.simulation.add_ecg": [[642, "examples-using-mne-simulation-add-ecg"]], "mne.simulation.add_eog": [[643, "mne-simulation-add-eog"]], "Examples using mne.simulation.add_eog": [[643, "examples-using-mne-simulation-add-eog"]], "mne.simulation.add_noise": [[644, "mne-simulation-add-noise"]], "Examples using mne.simulation.add_noise": [[644, "examples-using-mne-simulation-add-noise"]], "mne.simulation.metrics.cosine_score": [[645, "mne-simulation-metrics-cosine-score"]], "Examples using mne.simulation.metrics.cosine_score": [[645, "examples-using-mne-simulation-metrics-cosine-score"]], "mne.simulation.metrics.f1_score": [[646, "mne-simulation-metrics-f1-score"]], "Examples using mne.simulation.metrics.f1_score": [[646, "examples-using-mne-simulation-metrics-f1-score"]], "mne.simulation.metrics.peak_position_error": [[647, "mne-simulation-metrics-peak-position-error"]], "Examples using mne.simulation.metrics.peak_position_error": [[647, "examples-using-mne-simulation-metrics-peak-position-error"]], "mne.simulation.metrics.precision_score": [[648, "mne-simulation-metrics-precision-score"]], "Examples using mne.simulation.metrics.precision_score": [[648, "examples-using-mne-simulation-metrics-precision-score"]], "mne.simulation.metrics.recall_score": [[649, "mne-simulation-metrics-recall-score"]], "Examples using mne.simulation.metrics.recall_score": [[649, "examples-using-mne-simulation-metrics-recall-score"]], "mne.simulation.metrics.region_localization_error": [[650, "mne-simulation-metrics-region-localization-error"]], "Examples using mne.simulation.metrics.region_localization_error": [[650, "examples-using-mne-simulation-metrics-region-localization-error"]], "mne.simulation.metrics.roc_auc_score": [[651, "mne-simulation-metrics-roc-auc-score"]], "mne.simulation.metrics.spatial_deviation_error": [[652, "mne-simulation-metrics-spatial-deviation-error"]], "Examples using mne.simulation.metrics.spatial_deviation_error": [[652, "examples-using-mne-simulation-metrics-spatial-deviation-error"]], "mne.simulation.select_source_in_label": [[653, "mne-simulation-select-source-in-label"]], "mne.simulation.simulate_evoked": [[654, "mne-simulation-simulate-evoked"]], "Examples using mne.simulation.simulate_evoked": [[654, "examples-using-mne-simulation-simulate-evoked"]], "mne.simulation.simulate_raw": [[655, "mne-simulation-simulate-raw"]], "Data alignment and stim channel encoding": [[655, "id3"]], "Examples using mne.simulation.simulate_raw": [[655, "examples-using-mne-simulation-simulate-raw"]], "mne.simulation.simulate_sparse_stc": [[656, "mne-simulation-simulate-sparse-stc"]], "Examples using mne.simulation.simulate_sparse_stc": [[656, "examples-using-mne-simulation-simulate-sparse-stc"]], "mne.simulation.simulate_stc": [[657, "mne-simulation-simulate-stc"]], "Examples using mne.simulation.simulate_stc": [[657, "examples-using-mne-simulation-simulate-stc"]], "mne.source_space.compute_distance_to_sensors": [[658, "mne-source-space-compute-distance-to-sensors"]], "Examples using mne.source_space.compute_distance_to_sensors": [[658, "examples-using-mne-source-space-compute-distance-to-sensors"]], "mne.source_space.get_decimated_surfaces": [[659, "mne-source-space-get-decimated-surfaces"]], "mne.spatial_dist_adjacency": [[660, "mne-spatial-dist-adjacency"]], "mne.spatial_inter_hemi_adjacency": [[661, "mne-spatial-inter-hemi-adjacency"]], "mne.spatial_src_adjacency": [[662, "mne-spatial-src-adjacency"]], "Examples using mne.spatial_src_adjacency": [[662, "examples-using-mne-spatial-src-adjacency"]], "mne.spatial_tris_adjacency": [[663, "mne-spatial-tris-adjacency"]], "mne.spatio_temporal_dist_adjacency": [[664, "mne-spatio-temporal-dist-adjacency"]], "mne.spatio_temporal_src_adjacency": [[665, "mne-spatio-temporal-src-adjacency"]], "mne.spatio_temporal_tris_adjacency": [[666, "mne-spatio-temporal-tris-adjacency"]], "mne.split_label": [[667, "mne-split-label"]], "mne.stats.bonferroni_correction": [[668, "mne-stats-bonferroni-correction"]], "Examples using mne.stats.bonferroni_correction": [[668, "examples-using-mne-stats-bonferroni-correction"]], "mne.stats.bootstrap_confidence_interval": [[669, "mne-stats-bootstrap-confidence-interval"]], "Examples using mne.stats.bootstrap_confidence_interval": [[669, "examples-using-mne-stats-bootstrap-confidence-interval"]], "mne.stats.combine_adjacency": [[670, "mne-stats-combine-adjacency"]], "Examples using mne.stats.combine_adjacency": [[670, "examples-using-mne-stats-combine-adjacency"]], "mne.stats.f_mway_rm": [[671, "mne-stats-f-mway-rm"]], "Examples using mne.stats.f_mway_rm": [[671, "examples-using-mne-stats-f-mway-rm"]], "mne.stats.f_oneway": [[672, "mne-stats-f-oneway"]], "Examples using mne.stats.f_oneway": [[672, "examples-using-mne-stats-f-oneway"]], "mne.stats.f_threshold_mway_rm": [[673, "mne-stats-f-threshold-mway-rm"]], "Examples using mne.stats.f_threshold_mway_rm": [[673, "examples-using-mne-stats-f-threshold-mway-rm"]], "mne.stats.fdr_correction": [[674, "mne-stats-fdr-correction"]], "Examples using mne.stats.fdr_correction": [[674, "examples-using-mne-stats-fdr-correction"]], "mne.stats.linear_regression": [[675, "mne-stats-linear-regression"]], "Examples using mne.stats.linear_regression": [[675, "examples-using-mne-stats-linear-regression"]], "mne.stats.linear_regression_raw": [[676, "mne-stats-linear-regression-raw"]], "Examples using mne.stats.linear_regression_raw": [[676, "examples-using-mne-stats-linear-regression-raw"]], "mne.stats.permutation_cluster_1samp_test": [[677, "mne-stats-permutation-cluster-1samp-test"]], "Examples using mne.stats.permutation_cluster_1samp_test": [[677, "examples-using-mne-stats-permutation-cluster-1samp-test"]], "mne.stats.permutation_cluster_test": [[678, "mne-stats-permutation-cluster-test"]], "Examples using mne.stats.permutation_cluster_test": [[678, "examples-using-mne-stats-permutation-cluster-test"]], "mne.stats.permutation_t_test": [[679, "mne-stats-permutation-t-test"]], "Examples using mne.stats.permutation_t_test": [[679, "examples-using-mne-stats-permutation-t-test"]], "mne.stats.spatio_temporal_cluster_1samp_test": [[680, "mne-stats-spatio-temporal-cluster-1samp-test"]], "Examples using mne.stats.spatio_temporal_cluster_1samp_test": [[680, "examples-using-mne-stats-spatio-temporal-cluster-1samp-test"]], "mne.stats.spatio_temporal_cluster_test": [[681, "mne-stats-spatio-temporal-cluster-test"]], "Examples using mne.stats.spatio_temporal_cluster_test": [[681, "examples-using-mne-stats-spatio-temporal-cluster-test"]], "mne.stats.summarize_clusters_stc": [[682, "mne-stats-summarize-clusters-stc"]], "Examples using mne.stats.summarize_clusters_stc": [[682, "examples-using-mne-stats-summarize-clusters-stc"]], "mne.stats.ttest_1samp_no_p": [[683, "mne-stats-ttest-1samp-no-p"]], "Examples using mne.stats.ttest_1samp_no_p": [[683, "examples-using-mne-stats-ttest-1samp-no-p"]], "mne.stats.ttest_ind_no_p": [[684, "mne-stats-ttest-ind-no-p"]], "mne.stc_near_sensors": [[685, "mne-stc-near-sensors"]], "Examples using mne.stc_near_sensors": [[685, "examples-using-mne-stc-near-sensors"]], "mne.stc_to_label": [[686, "mne-stc-to-label"]], "Examples using mne.stc_to_label": [[686, "examples-using-mne-stc-to-label"]], "mne.surface.complete_surface_info": [[687, "mne-surface-complete-surface-info"]], "mne.surface.read_curvature": [[688, "mne-surface-read-curvature"]], "Examples using mne.surface.read_curvature": [[688, "examples-using-mne-surface-read-curvature"]], "mne.sys_info": [[689, "mne-sys-info"]], "Examples using mne.sys_info": [[689, "examples-using-mne-sys-info"]], "mne.time_frequency.AverageTFR": [[690, "mne-time-frequency-averagetfr"]], "Examples using mne.time_frequency.AverageTFR": [[690, "examples-using-mne-time-frequency-averagetfr"]], "mne.time_frequency.CrossSpectralDensity": [[691, "mne-time-frequency-crossspectraldensity"]], "Examples using mne.time_frequency.CrossSpectralDensity": [[691, "examples-using-mne-time-frequency-crossspectraldensity"]], "mne.time_frequency.EpochsSpectrum": [[692, "mne-time-frequency-epochsspectrum"]], "Examples using mne.time_frequency.EpochsSpectrum": [[692, "examples-using-mne-time-frequency-epochsspectrum"]], "mne.time_frequency.EpochsTFR": [[693, "mne-time-frequency-epochstfr"]], "Examples using mne.time_frequency.EpochsTFR": [[693, "examples-using-mne-time-frequency-epochstfr"]], "mne.time_frequency.Spectrum": [[694, "mne-time-frequency-spectrum"]], "Examples using mne.time_frequency.Spectrum": [[694, "examples-using-mne-time-frequency-spectrum"]], "mne.time_frequency.csd_array_fourier": [[695, "mne-time-frequency-csd-array-fourier"]], "mne.time_frequency.csd_array_morlet": [[696, "mne-time-frequency-csd-array-morlet"]], "mne.time_frequency.csd_array_multitaper": [[697, "mne-time-frequency-csd-array-multitaper"]], "mne.time_frequency.csd_fourier": [[698, "mne-time-frequency-csd-fourier"]], "Examples using mne.time_frequency.csd_fourier": [[698, "examples-using-mne-time-frequency-csd-fourier"]], "mne.time_frequency.csd_morlet": [[699, "mne-time-frequency-csd-morlet"]], "Examples using mne.time_frequency.csd_morlet": [[699, "examples-using-mne-time-frequency-csd-morlet"]], "mne.time_frequency.csd_multitaper": [[700, "mne-time-frequency-csd-multitaper"]], "Examples using mne.time_frequency.csd_multitaper": [[700, "examples-using-mne-time-frequency-csd-multitaper"]], "mne.time_frequency.csd_tfr": [[701, "mne-time-frequency-csd-tfr"]], "mne.time_frequency.dpss_windows": [[702, "mne-time-frequency-dpss-windows"]], "mne.time_frequency.fit_iir_model_raw": [[703, "mne-time-frequency-fit-iir-model-raw"]], "Examples using mne.time_frequency.fit_iir_model_raw": [[703, "examples-using-mne-time-frequency-fit-iir-model-raw"]], "mne.time_frequency.istft": [[704, "mne-time-frequency-istft"]], "mne.time_frequency.morlet": [[705, "mne-time-frequency-morlet"]], "Examples using mne.time_frequency.morlet": [[705, "examples-using-mne-time-frequency-morlet"]], "mne.time_frequency.pick_channels_csd": [[706, "mne-time-frequency-pick-channels-csd"]], "mne.time_frequency.psd_array_multitaper": [[707, "mne-time-frequency-psd-array-multitaper"]], "Examples using mne.time_frequency.psd_array_multitaper": [[707, "examples-using-mne-time-frequency-psd-array-multitaper"]], "mne.time_frequency.psd_array_welch": [[708, "mne-time-frequency-psd-array-welch"]], "Examples using mne.time_frequency.psd_array_welch": [[708, "examples-using-mne-time-frequency-psd-array-welch"]], "mne.time_frequency.psd_multitaper": [[709, "mne-time-frequency-psd-multitaper"]], "Examples using mne.time_frequency.psd_multitaper": [[709, "examples-using-mne-time-frequency-psd-multitaper"]], "mne.time_frequency.psd_welch": [[710, "mne-time-frequency-psd-welch"]], "Examples using mne.time_frequency.psd_welch": [[710, "examples-using-mne-time-frequency-psd-welch"]], "mne.time_frequency.read_csd": [[711, "mne-time-frequency-read-csd"]], "mne.time_frequency.read_spectrum": [[712, "mne-time-frequency-read-spectrum"]], "mne.time_frequency.read_tfrs": [[713, "mne-time-frequency-read-tfrs"]], "mne.time_frequency.stft": [[714, "mne-time-frequency-stft"]], "mne.time_frequency.stftfreq": [[715, "mne-time-frequency-stftfreq"]], "mne.time_frequency.tfr.cwt": [[716, "mne-time-frequency-tfr-cwt"]], "mne.time_frequency.tfr.morlet": [[717, "mne-time-frequency-tfr-morlet"]], "mne.time_frequency.tfr_array_morlet": [[718, "mne-time-frequency-tfr-array-morlet"]], "Examples using mne.time_frequency.tfr_array_morlet": [[718, "examples-using-mne-time-frequency-tfr-array-morlet"]], "mne.time_frequency.tfr_array_multitaper": [[719, "mne-time-frequency-tfr-array-multitaper"]], "mne.time_frequency.tfr_array_stockwell": [[720, "mne-time-frequency-tfr-array-stockwell"]], "mne.time_frequency.tfr_morlet": [[721, "mne-time-frequency-tfr-morlet"]], "Examples using mne.time_frequency.tfr_morlet": [[721, "examples-using-mne-time-frequency-tfr-morlet"]], "mne.time_frequency.tfr_multitaper": [[722, "mne-time-frequency-tfr-multitaper"]], "Examples using mne.time_frequency.tfr_multitaper": [[722, "examples-using-mne-time-frequency-tfr-multitaper"]], "mne.time_frequency.tfr_stockwell": [[723, "mne-time-frequency-tfr-stockwell"]], "Examples using mne.time_frequency.tfr_stockwell": [[723, "examples-using-mne-time-frequency-tfr-stockwell"]], "mne.time_frequency.write_tfrs": [[724, "mne-time-frequency-write-tfrs"]], "mne.transform_surface_to": [[725, "mne-transform-surface-to"]], "mne.transforms.Transform": [[726, "mne-transforms-transform"]], "mne.transforms.apply_volume_registration": [[727, "mne-transforms-apply-volume-registration"]], "Examples using mne.transforms.apply_volume_registration": [[727, "examples-using-mne-transforms-apply-volume-registration"]], "mne.transforms.compute_volume_registration": [[728, "mne-transforms-compute-volume-registration"]], "Examples using mne.transforms.compute_volume_registration": [[728, "examples-using-mne-transforms-compute-volume-registration"]], "mne.transforms.quat_to_rot": [[729, "mne-transforms-quat-to-rot"]], "mne.transforms.read_ras_mni_t": [[730, "mne-transforms-read-ras-mni-t"]], "Examples using mne.transforms.read_ras_mni_t": [[730, "examples-using-mne-transforms-read-ras-mni-t"]], "mne.transforms.rot_to_quat": [[731, "mne-transforms-rot-to-quat"]], "mne.use_coil_def": [[732, "mne-use-coil-def"]], "Examples using mne.use_coil_def": [[732, "examples-using-mne-use-coil-def"]], "mne.use_log_level": [[733, "mne-use-log-level"]], "Examples using mne.use_log_level": [[733, "examples-using-mne-use-log-level"]], "mne.utils.deprecated": [[734, "mne-utils-deprecated"]], "mne.utils.warn": [[735, "mne-utils-warn"]], "mne.verbose": [[736, "mne-verbose"]], "mne.vertex_to_mni": [[737, "mne-vertex-to-mni"]], "Examples using mne.vertex_to_mni": [[737, "examples-using-mne-vertex-to-mni"]], "mne.viz.Brain": [[738, "mne-viz-brain"]], "Examples using mne.viz.Brain": [[738, "examples-using-mne-viz-brain"]], "mne.viz.ClickableImage": [[739, "mne-viz-clickableimage"]], "Examples using mne.viz.ClickableImage": [[739, "examples-using-mne-viz-clickableimage"]], "mne.viz.Figure3D": [[740, "mne-viz-figure3d"]], "mne.viz.add_background_image": [[741, "mne-viz-add-background-image"]], "mne.viz.centers_to_edges": [[742, "mne-viz-centers-to-edges"]], "Examples using mne.viz.centers_to_edges": [[742, "examples-using-mne-viz-centers-to-edges"]], "mne.viz.circular_layout": [[743, "mne-viz-circular-layout"]], "Examples using mne.viz.circular_layout": [[743, "examples-using-mne-viz-circular-layout"]], "mne.viz.close_3d_figure": [[744, "mne-viz-close-3d-figure"]], "mne.viz.close_all_3d_figures": [[745, "mne-viz-close-all-3d-figures"]], "mne.viz.compare_fiff": [[746, "mne-viz-compare-fiff"]], "mne.viz.create_3d_figure": [[747, "mne-viz-create-3d-figure"]], "Examples using mne.viz.create_3d_figure": [[747, "examples-using-mne-viz-create-3d-figure"]], "mne.viz.get_3d_backend": [[748, "mne-viz-get-3d-backend"]], "mne.viz.get_brain_class": [[749, "mne-viz-get-brain-class"]], "Examples using mne.viz.get_brain_class": [[749, "examples-using-mne-viz-get-brain-class"]], "mne.viz.get_browser_backend": [[750, "mne-viz-get-browser-backend"]], "mne.viz.iter_topography": [[751, "mne-viz-iter-topography"]], "Examples using mne.viz.iter_topography": [[751, "examples-using-mne-viz-iter-topography"]], "mne.viz.link_brains": [[752, "mne-viz-link-brains"]], "mne.viz.mne_analyze_colormap": [[753, "mne-viz-mne-analyze-colormap"]], "mne.viz.plot_alignment": [[754, "mne-viz-plot-alignment"]], "Examples using mne.viz.plot_alignment": [[754, "examples-using-mne-viz-plot-alignment"]], "mne.viz.plot_arrowmap": [[755, "mne-viz-plot-arrowmap"]], "Examples using mne.viz.plot_arrowmap": [[755, "examples-using-mne-viz-plot-arrowmap"]], "mne.viz.plot_bem": [[756, "mne-viz-plot-bem"]], "Examples using mne.viz.plot_bem": [[756, "examples-using-mne-viz-plot-bem"]], "mne.viz.plot_brain_colorbar": [[757, "mne-viz-plot-brain-colorbar"]], "Examples using mne.viz.plot_brain_colorbar": [[757, "examples-using-mne-viz-plot-brain-colorbar"]], "mne.viz.plot_bridged_electrodes": [[758, "mne-viz-plot-bridged-electrodes"]], "Examples using mne.viz.plot_bridged_electrodes": [[758, "examples-using-mne-viz-plot-bridged-electrodes"]], "mne.viz.plot_ch_adjacency": [[759, "mne-viz-plot-ch-adjacency"]], "Examples using mne.viz.plot_ch_adjacency": [[759, "examples-using-mne-viz-plot-ch-adjacency"]], "mne.viz.plot_channel_labels_circle": [[760, "mne-viz-plot-channel-labels-circle"]], "Examples using mne.viz.plot_channel_labels_circle": [[760, "examples-using-mne-viz-plot-channel-labels-circle"]], "mne.viz.plot_chpi_snr": [[761, "mne-viz-plot-chpi-snr"]], "Examples using mne.viz.plot_chpi_snr": [[761, "examples-using-mne-viz-plot-chpi-snr"]], "mne.viz.plot_compare_evokeds": [[762, "mne-viz-plot-compare-evokeds"]], "Examples using mne.viz.plot_compare_evokeds": [[762, "examples-using-mne-viz-plot-compare-evokeds"]], "mne.viz.plot_cov": [[763, "mne-viz-plot-cov"]], "Examples using mne.viz.plot_cov": [[763, "examples-using-mne-viz-plot-cov"]], "mne.viz.plot_csd": [[764, "mne-viz-plot-csd"]], "mne.viz.plot_dipole_amplitudes": [[765, "mne-viz-plot-dipole-amplitudes"]], "Examples using mne.viz.plot_dipole_amplitudes": [[765, "examples-using-mne-viz-plot-dipole-amplitudes"]], "mne.viz.plot_dipole_locations": [[766, "mne-viz-plot-dipole-locations"]], "Examples using mne.viz.plot_dipole_locations": [[766, "examples-using-mne-viz-plot-dipole-locations"]], "mne.viz.plot_drop_log": [[767, "mne-viz-plot-drop-log"]], "mne.viz.plot_epochs": [[768, "mne-viz-plot-epochs"]], "mne.viz.plot_epochs_image": [[769, "mne-viz-plot-epochs-image"]], "Examples using mne.viz.plot_epochs_image": [[769, "examples-using-mne-viz-plot-epochs-image"]], "mne.viz.plot_epochs_psd_topomap": [[770, "mne-viz-plot-epochs-psd-topomap"]], "mne.viz.plot_events": [[771, "mne-viz-plot-events"]], "Examples using mne.viz.plot_events": [[771, "examples-using-mne-viz-plot-events"]], "mne.viz.plot_evoked": [[772, "mne-viz-plot-evoked"]], "mne.viz.plot_evoked_field": [[773, "mne-viz-plot-evoked-field"]], "mne.viz.plot_evoked_image": [[774, "mne-viz-plot-evoked-image"]], "Examples using mne.viz.plot_evoked_image": [[774, "examples-using-mne-viz-plot-evoked-image"]], "mne.viz.plot_evoked_joint": [[775, "mne-viz-plot-evoked-joint"]], "mne.viz.plot_evoked_topo": [[776, "mne-viz-plot-evoked-topo"]], "Examples using mne.viz.plot_evoked_topo": [[776, "examples-using-mne-viz-plot-evoked-topo"]], "mne.viz.plot_evoked_topomap": [[777, "mne-viz-plot-evoked-topomap"]], "mne.viz.plot_evoked_white": [[778, "mne-viz-plot-evoked-white"]], "Examples using mne.viz.plot_evoked_white": [[778, "examples-using-mne-viz-plot-evoked-white"]], "mne.viz.plot_filter": [[779, "mne-viz-plot-filter"]], "Examples using mne.viz.plot_filter": [[779, "examples-using-mne-viz-plot-filter"]], "mne.viz.plot_head_positions": [[780, "mne-viz-plot-head-positions"]], "Examples using mne.viz.plot_head_positions": [[780, "examples-using-mne-viz-plot-head-positions"]], "mne.viz.plot_ica_components": [[781, "mne-viz-plot-ica-components"]], "mne.viz.plot_ica_overlay": [[782, "mne-viz-plot-ica-overlay"]], "mne.viz.plot_ica_properties": [[783, "mne-viz-plot-ica-properties"]], "mne.viz.plot_ica_scores": [[784, "mne-viz-plot-ica-scores"]], "mne.viz.plot_ica_sources": [[785, "mne-viz-plot-ica-sources"]], "mne.viz.plot_ideal_filter": [[786, "mne-viz-plot-ideal-filter"]], "Examples using mne.viz.plot_ideal_filter": [[786, "examples-using-mne-viz-plot-ideal-filter"]], "mne.viz.plot_layout": [[787, "mne-viz-plot-layout"]], "mne.viz.plot_montage": [[788, "mne-viz-plot-montage"]], "mne.viz.plot_projs_joint": [[789, "mne-viz-plot-projs-joint"]], "Examples using mne.viz.plot_projs_joint": [[789, "examples-using-mne-viz-plot-projs-joint"]], "mne.viz.plot_projs_topomap": [[790, "mne-viz-plot-projs-topomap"]], "Examples using mne.viz.plot_projs_topomap": [[790, "examples-using-mne-viz-plot-projs-topomap"]], "mne.viz.plot_raw": [[791, "mne-viz-plot-raw"]], "mne.viz.plot_raw_psd": [[792, "mne-viz-plot-raw-psd"]], "mne.viz.plot_regression_weights": [[793, "mne-viz-plot-regression-weights"]], "mne.viz.plot_sensors": [[794, "mne-viz-plot-sensors"]], "mne.viz.plot_snr_estimate": [[795, "mne-viz-plot-snr-estimate"]], "Examples using mne.viz.plot_snr_estimate": [[795, "examples-using-mne-viz-plot-snr-estimate"]], "mne.viz.plot_source_estimates": [[796, "mne-viz-plot-source-estimates"]], "Examples using mne.viz.plot_source_estimates": [[796, "examples-using-mne-viz-plot-source-estimates"]], "mne.viz.plot_sparse_source_estimates": [[797, "mne-viz-plot-sparse-source-estimates"]], "Examples using mne.viz.plot_sparse_source_estimates": [[797, "examples-using-mne-viz-plot-sparse-source-estimates"]], "mne.viz.plot_tfr_topomap": [[798, "mne-viz-plot-tfr-topomap"]], "mne.viz.plot_topo_image_epochs": [[799, "mne-viz-plot-topo-image-epochs"]], "mne.viz.plot_topomap": [[800, "mne-viz-plot-topomap"]], "Examples using mne.viz.plot_topomap": [[800, "examples-using-mne-viz-plot-topomap"]], "mne.viz.plot_vector_source_estimates": [[801, "mne-viz-plot-vector-source-estimates"]], "Examples using mne.viz.plot_vector_source_estimates": [[801, "examples-using-mne-viz-plot-vector-source-estimates"]], "mne.viz.plot_volume_source_estimates": [[802, "mne-viz-plot-volume-source-estimates"]], "mne.viz.set_3d_backend": [[803, "mne-viz-set-3d-backend"]], "Examples using mne.viz.set_3d_backend": [[803, "examples-using-mne-viz-set-3d-backend"]], "mne.viz.set_3d_options": [[804, "mne-viz-set-3d-options"]], "mne.viz.set_3d_title": [[805, "mne-viz-set-3d-title"]], "Examples using mne.viz.set_3d_title": [[805, "examples-using-mne-viz-set-3d-title"]], "mne.viz.set_3d_view": [[806, "mne-viz-set-3d-view"]], "Examples using mne.viz.set_3d_view": [[806, "examples-using-mne-viz-set-3d-view"]], "mne.viz.set_browser_backend": [[807, "mne-viz-set-browser-backend"]], "mne.viz.snapshot_brain_montage": [[808, "mne-viz-snapshot-brain-montage"]], "Examples using mne.viz.snapshot_brain_montage": [[808, "examples-using-mne-viz-snapshot-brain-montage"]], "mne.viz.use_3d_backend": [[809, "mne-viz-use-3d-backend"]], "mne.viz.use_browser_backend": [[810, "mne-viz-use-browser-backend"]], "Examples using mne.viz.use_browser_backend": [[810, "examples-using-mne-viz-use-browser-backend"]], "mne.warp_montage_volume": [[811, "mne-warp-montage-volume"]], "Examples using mne.warp_montage_volume": [[811, "examples-using-mne-warp-montage-volume"]], "mne.what": [[812, "mne-what"]], "mne.write_bem_solution": [[813, "mne-write-bem-solution"]], "mne.write_bem_surfaces": [[814, "mne-write-bem-surfaces"]], "mne.write_cov": [[815, "mne-write-cov"]], "Examples using mne.write_cov": [[815, "examples-using-mne-write-cov"]], "mne.write_events": [[816, "mne-write-events"]], "Examples using mne.write_events": [[816, "examples-using-mne-write-events"]], "mne.write_evokeds": [[817, "mne-write-evokeds"]], "Examples using mne.write_evokeds": [[817, "examples-using-mne-write-evokeds"]], "mne.write_forward_solution": [[818, "mne-write-forward-solution"]], "Examples using mne.write_forward_solution": [[818, "examples-using-mne-write-forward-solution"]], "mne.write_head_bem": [[819, "mne-write-head-bem"]], "Examples using mne.write_head_bem": [[819, "examples-using-mne-write-head-bem"]], "mne.write_label": [[820, "mne-write-label"]], "mne.write_labels_to_annot": [[821, "mne-write-labels-to-annot"]], "mne.write_proj": [[822, "mne-write-proj"]], "Examples using mne.write_proj": [[822, "examples-using-mne-write-proj"]], "mne.write_source_spaces": [[823, "mne-write-source-spaces"]], "mne.write_surface": [[824, "mne-write-surface"]], "Examples using mne.write_surface": [[824, "examples-using-mne-write-surface"]], "mne.write_trans": [[825, "mne-write-trans"]], "Glossary": [[826, "glossary"]], "MNE-Python Homepage": [[827, "mne-python-homepage"]], "Advanced setup": [[828, "advanced-setup"]], "Working with Jupyter Notebooks and JupyterLab": [[828, "working-with-jupyter-notebooks-and-jupyterlab"]], "<i class=\"fab fa-windows\"></i> Windows": [[828, null]], "Installing to a headless server": [[828, "installing-to-a-headless-server"]], "Using the development version": [[828, "using-the-development-version"]], "Other Python distributions": [[828, "other-python-distributions"]], "GPU acceleration with CUDA": [[828, "gpu-acceleration-with-cuda"]], "Off-screen rendering with MESA": [[828, "off-screen-rendering-with-mesa"]], "Troubleshooting 3D plots": [[828, "troubleshooting-3d-plots"]], "3D plotting trouble after upgrade on macOS": [[828, "d-plotting-trouble-after-upgrade-on-macos"]], "Testing your installation": [[829, "testing-your-installation"]], "Contributing guide": [[830, "contributing-guide"]], "Overview of contribution process": [[830, "overview-of-contribution-process"]], "Setting up your local development environment": [[830, "setting-up-your-local-development-environment"]], "Configuring git": [[830, "configuring-git"]], "GNU Make": [[830, "gnu-make"]], "Forking the MNE-Python repository": [[830, "forking-the-mne-python-repository"]], "Creating the virtual environment": [[830, "creating-the-virtual-environment"]], "Basic git commands": [[830, "basic-git-commands"]], "Connecting to GitHub with SSH (optional)": [[830, "connecting-to-github-with-ssh-optional"]], "MNE-Python coding conventions": [[830, "mne-python-coding-conventions"]], "General requirements": [[830, "general-requirements"]], "All new functionality must have test coverage": [[830, "all-new-functionality-must-have-test-coverage"]], "All new functionality must be documented": [[830, "all-new-functionality-must-be-documented"]], "Avoid API changes when possible": [[830, "avoid-api-changes-when-possible"]], "Deprecate with a decorator or a warning": [[830, "deprecate-with-a-decorator-or-a-warning"]], "Describe your changes in the changelog": [[830, "describe-your-changes-in-the-changelog"]], "First-time contributors": [[830, "first-time-contributors"]], "Recurring contributors": [[830, "recurring-contributors"]], "Test locally before opening pull requests (PRs)": [[830, "test-locally-before-opening-pull-requests-prs"]], "Make tests fast and thorough": [[830, "make-tests-fast-and-thorough"]], "Code style": [[830, "code-style"]], "Adhere to standard Python style guidelines": [[830, "adhere-to-standard-python-style-guidelines"]], "Use consistent variable naming": [[830, "use-consistent-variable-naming"]], "We (mostly) follow NumPy style for docstrings": [[830, "we-mostly-follow-numpy-style-for-docstrings"]], "Cross-reference everywhere": [[830, "cross-reference-everywhere"]], "Other style guidance": [[830, "other-style-guidance"]], "Code organization": [[830, "code-organization"]], "Importing": [[830, "importing"]], "Return types": [[830, "return-types"]], "Running the test suite": [[830, "running-the-test-suite"]], "Building the documentation": [[830, "building-the-documentation"]], "Modifying command-line tools": [[830, "modifying-command-line-tools"]], "GitHub workflow": [[830, "github-workflow"]], "Installing FreeSurfer": [[831, "installing-freesurfer"]], "Installing MNE-Python": [[832, "installing-mne-python"]], "MNE-Python installers": [[833, "mne-python-installers"]], "VS Code Setup": [[833, "vs-code-setup"]], "Install via pip or conda": [[834, "install-via-pip-or-conda"]], "Installing MNE-Python with all dependencies": [[834, "installing-mne-python-with-all-dependencies"]], "Installing a minimal MNE-Python with core functionality only": [[834, "installing-a-minimal-mne-python-with-core-functionality-only"]], "Installing a minimal MNE-Python with EEGLAB I/O support": [[834, "installing-a-minimal-mne-python-with-eeglab-i-o-support"]], "Installing MNE-Python for other scenarios": [[834, "installing-mne-python-for-other-scenarios"]], "Python IDEs": [[834, "python-ides"]], "Installing Python": [[835, "installing-python"]], "Installing MNE-C": [[836, "installing-mne-c"]], "System requirements": [[836, "system-requirements"]], "<i class=\"fab fa-apple\"></i> macOS": [[836, null]], "Downloading and Installing MNE-C": [[836, "downloading-and-installing-mne-c"]], "Configuring MNE-C": [[836, "configuring-mne-c"]], "Testing MNE-C installation": [[836, "testing-mne-c-installation"]], "Troubleshooting MNE-C installation": [[836, "troubleshooting-mne-c-installation"]], "Overview of the MNE tools suite": [[837, "overview-of-the-mne-tools-suite"]], "Related software": [[837, "related-software"]], "What should I install?": [[837, "what-should-i-install"]], "Getting help": [[837, "getting-help"], [851, "getting-help"]], "Updating MNE-Python": [[838, "updating-mne-python"]], "Upgrading MNE-Python only": [[838, "upgrading-mne-python-only"]], "Upgrading all packages": [[838, "upgrading-all-packages"]], "Upgrading to the development version": [[838, "upgrading-to-the-development-version"]], "Inverse Solutions": [[839, "inverse-solutions"]], "Logging and Configuration": [[840, "logging-and-configuration"]], "Martinos Center setup": [[841, "martinos-center-setup"]], "MNE with CPP": [[842, "mne-with-cpp"]], "Most-used classes": [[843, "most-used-classes"]], "MRI Processing": [[844, "mri-processing"]], "How to cite MNE-Python": [[845, "how-to-cite-mne-python"]], "Citing the software": [[845, "citing-the-software"]], "Citing the inverse imaging algorithms": [[845, "citing-the-inverse-imaging-algorithms"]], "Citing other algorithms": [[845, "citing-other-algorithms"]], "The typical M/EEG workflow": [[846, "the-typical-m-eeg-workflow"]], "Overview": [[846, "overview"], [856, "overview"]], "Artifact suppression": [[846, "artifact-suppression"]], "SSP": [[846, "ssp"]], "ICA": [[846, "ica"]], "Epoching and evoked data": [[846, "epoching-and-evoked-data"]], "Rejection using annotations": [[846, "rejection-using-annotations"]], "Source localization": [[846, "source-localization"]], "Anatomical information": [[846, "anatomical-information"]], "Cortical surface reconstruction with FreeSurfer": [[846, "cortical-surface-reconstruction-with-freesurfer"]], "Setting up the source space": [[846, "setting-up-the-source-space"]], "Recommended subdivisions of an icosahedron and an octahedron for\n       the creation of source spaces. The approximate source spacing and\n       corresponding surface area have been calculated assuming a\n       1000-cm2 surface area per hemisphere.": [[846, "id9"]], "Creating the BEM model meshes": [[846, "creating-the-bem-model-meshes"]], "Setting up the head surface triangulation files": [[846, "setting-up-the-head-surface-triangulation-files"]], "Setting up the boundary-element model": [[846, "setting-up-the-boundary-element-model"]], "Aligning coordinate frames": [[846, "aligning-coordinate-frames"]], "Computing the forward solution": [[846, "computing-the-forward-solution"], [853, "computing-the-forward-solution"]], "Computing the noise-covariance matrix": [[846, "computing-the-noise-covariance-matrix"]], "Calculating the inverse operator": [[846, "calculating-the-inverse-operator"]], "Creating source estimates": [[846, "creating-source-estimates"]], "Group analyses": [[846, "group-analyses"]], "Datasets Overview": [[847, "datasets-overview"]], "Sample": [[847, "sample"]], "Trigger codes for the sample data set.": [[847, "id19"]], "Contents of the data set": [[847, "contents-of-the-data-set"]], "Contents of the MEG/sample directory.": [[847, "id20"]], "Overview of the contents of the subjects/sample directory.": [[847, "id21"]], "Brainstorm": [[847, "brainstorm"]], "Auditory": [[847, "auditory"]], "Resting state": [[847, "resting-state"]], "Median nerve": [[847, "median-nerve"]], "SPM faces": [[847, "spm-faces"]], "EEGBCI motor imagery": [[847, "eegbci-motor-imagery"]], "Somatosensory": [[847, "somatosensory"]], "Multimodal": [[847, "multimodal"]], "fNIRS motor": [[847, "fnirs-motor"]], "High frequency SEF": [[847, "high-frequency-sef"]], "Visual 92 object categories": [[847, "visual-92-object-categories"]], "mTRF Dataset": [[847, "mtrf-dataset"]], "Kiloword dataset": [[847, "kiloword-dataset"]], "4D Neuroimaging / BTi dataset": [[847, "d-neuroimaging-bti-dataset"]], "OPM": [[847, "opm"]], "The Sleep PolySomnoGraphic Database": [[847, "the-sleep-polysomnographic-database"]], "Reference channel noise MEG data set": [[847, "reference-channel-noise-meg-data-set"]], "Miscellaneous Datasets": [[847, "miscellaneous-datasets"]], "fsaverage": [[847, "fsaverage"]], "Infant template MRIs": [[847, "infant-template-mris"]], "ECoG Dataset": [[847, "ecog-dataset"]], "sEEG Dataset": [[847, "seeg-dataset"]], "LIMO Dataset": [[847, "limo-dataset"]], "ERP CORE Dataset": [[847, "erp-core-dataset"]], "SSVEP": [[847, "ssvep"]], "Interactive versus scripted analysis": [[848, "interactive-versus-scripted-analysis"]], "Integration with the scientific python stack": [[848, "integration-with-the-scientific-python-stack"]], "Submodule-based organization": [[848, "submodule-based-organization"]], "(Mostly) unified API": [[848, "mostly-unified-api"]], "In-place operation": [[848, "in-place-operation"]], "MNE-Python Development": [[849, "mne-python-development"]], "Frequently Asked Questions (FAQ)": [[850, "frequently-asked-questions-faq"]], "General MNE-Python issues": [[850, "general-mne-python-issues"]], "Help! I can\u2019t get Python and MNE-Python working!": [[850, "help-i-can-t-get-python-and-mne-python-working"]], "I still can\u2019t get it to work!": [[850, "i-still-can-t-get-it-to-work"]], "I can\u2019t get PyVista/3D plotting to work under Windows": [[850, "i-can-t-get-pyvista-3d-plotting-to-work-under-windows"]], "Python runs on macOS extremely slow even on simple commands!": [[850, "python-runs-on-macos-extremely-slow-even-on-simple-commands"]], "How do I cite MNE?": [[850, "how-do-i-cite-mne"]], "I\u2019m not sure how to do X analysis step with my Y data\u2026": [[850, "i-m-not-sure-how-to-do-x-analysis-step-with-my-y-data"]], "I think I found a bug, what do I do?": [[850, "i-think-i-found-a-bug-what-do-i-do"]], "Why is it dangerous to \u201cpickle\u201d my MNE-Python objects and data for later use?": [[850, "why-is-it-dangerous-to-pickle-my-mne-python-objects-and-data-for-later-use"]], "I downloaded a dataset once, but MNE-Python is asking to download it again. Why?": [[850, "i-downloaded-a-dataset-once-but-mne-python-is-asking-to-download-it-again-why"]], "A function uses multiple CPU cores even though I didn\u2019t tell it to. Why?": [[850, "a-function-uses-multiple-cpu-cores-even-though-i-didn-t-tell-it-to-why"]], "I have a mystery FIF file, how do I read it?": [[850, "i-have-a-mystery-fif-file-how-do-i-read-it"]], "Resampling and decimating data": [[850, "resampling-and-decimating-data"]], "What are all these options for resampling, decimating, and binning data?": [[850, "what-are-all-these-options-for-resampling-decimating-and-binning-data"]], "Resampling raw data is taking forever! What do I do?": [[850, "resampling-raw-data-is-taking-forever-what-do-i-do"]], "Forward and Inverse Solution": [[850, "forward-and-inverse-solution"]], "My watershed BEM meshes look incorrect": [[850, "my-watershed-bem-meshes-look-incorrect"]], "Project Governance": [[852, "project-governance"]], "The Project": [[852, "the-project"]], "Governance model": [[852, "governance-model"]], "BDFL": [[852, "bdfl"]], "Steering Council": [[852, "steering-council"], [858, "steering-council"]], "Council membership": [[852, "council-membership"]], "Conflict of interest": [[852, "conflict-of-interest"]], "Private communications of the Council": [[852, "private-communications-of-the-council"]], "Council decision making": [[852, "council-decision-making"]], "Institutional Partners and funding": [[852, "institutional-partners-and-funding"]], "Document history": [[852, "document-history"], [858, "document-history"]], "Acknowledgements": [[852, "acknowledgements"]], "License": [[852, "license"]], "Algorithms and other implementation details": [[853, "algorithms-and-other-implementation-details"]], "Internal representation (units)": [[853, "internal-representation-units"]], "Floating-point precision": [[853, "floating-point-precision"]], "Supported channel types": [[853, "supported-channel-types"]], "Supported data formats": [[853, "supported-data-formats"]], "Supported formats for digitized 3D locations": [[853, "supported-formats-for-digitized-3d-locations"]], "Memory-efficient I/O": [[853, "memory-efficient-i-o"]], "Preloading continuous (raw) data": [[853, "preloading-continuous-raw-data"]], "Preloading epoched data": [[853, "preloading-epoched-data"]], "Loading data explicitly": [[853, "loading-data-explicitly"]], "Accessing data as NumPy arrays": [[853, "accessing-data-as-numpy-arrays"]], "Bad channel repair via interpolation": [[853, "bad-channel-repair-via-interpolation"]], "Maxwell filtering": [[853, "maxwell-filtering"]], "Signal-Space Projection (SSP)": [[853, "signal-space-projection-ssp"]], "General concepts": [[853, "general-concepts"]], "Estimation of the noise subspace": [[853, "estimation-of-the-noise-subspace"]], "EEG average electrode reference": [[853, "eeg-average-electrode-reference"]], "The Boundary Element Model (BEM)": [[853, "the-boundary-element-model-bem"]], "Using the watershed algorithm": [[853, "using-the-watershed-algorithm"]], "Using FLASH images": [[853, "using-flash-images"]], "Organizing MRI data into directories": [[853, "organizing-mri-data-into-directories"]], "Creating the surface tessellations": [[853, "creating-the-surface-tessellations"]], "Inspecting the meshes": [[853, "inspecting-the-meshes"]], "The forward solution": [[853, "the-forward-solution"]], "MEG/EEG and MRI coordinate systems": [[853, "meg-eeg-and-mri-coordinate-systems"]], "Coordinate transformations in FreeSurfer and MNE software packages.": [[853, "id18"]], "The head and device coordinate systems": [[853, "the-head-and-device-coordinate-systems"]], "Creating a surface-based source space": [[853, "creating-a-surface-based-source-space"]], "Creating a volumetric or discrete source space": [[853, "creating-a-volumetric-or-discrete-source-space"]], "Creating the BEM meshes": [[853, "creating-the-bem-meshes"]], "Topology checks": [[853, "topology-checks"]], "Computing the BEM geometry data": [[853, "computing-the-bem-geometry-data"]], "Coil geometry information": [[853, "coil-geometry-information"]], "The sensor coordinate system": [[853, "the-sensor-coordinate-system"]], "Calculation of the magnetic field": [[853, "calculation-of-the-magnetic-field"]], "Implemented coil geometries": [[853, "implemented-coil-geometries"]], "Normal coil descriptions.": [[853, "id20"]], "Accurate coil descriptions": [[853, "id21"]], "The coil definition file": [[853, "the-coil-definition-file"]], "Coil representation accuracies.": [[853, "id22"]], "Purpose": [[853, "purpose"]], "Implementation of software gradient compensation": [[853, "implementation-of-software-gradient-compensation"]], "The EEG sphere model definition file": [[853, "the-eeg-sphere-model-definition-file"]], "Structure of the default EEG model": [[853, "id23"]], "EEG forward solution in the sphere model": [[853, "eeg-forward-solution-in-the-sphere-model"]], "Averaging forward solutions": [[853, "averaging-forward-solutions"]], "The minimum-norm current estimates": [[853, "the-minimum-norm-current-estimates"]], "The linear inverse operator": [[853, "the-linear-inverse-operator"]], "Regularization": [[853, "regularization"]], "Whitening and scaling": [[853, "whitening-and-scaling"]], "Regularization of the noise-covariance matrix": [[853, "regularization-of-the-noise-covariance-matrix"]], "Computation of the solution": [[853, "computation-of-the-solution"]], "Noise normalization": [[853, "noise-normalization"]], "sLORETA": [[853, "sloreta"]], "eLORETA": [[853, "eloreta"]], "Predicted data": [[853, "predicted-data"]], "Cortical patch statistics": [[853, "cortical-patch-statistics"]], "Orientation constraints": [[853, "orientation-constraints"]], "Depth weighting": [[853, "depth-weighting"]], "Effective number of averages": [[853, "effective-number-of-averages"]], "Morphing and averaging source estimates": [[853, "morphing-and-averaging-source-estimates"]], "Why morphing?": [[853, "why-morphing"]], "The morphing maps": [[853, "the-morphing-maps"]], "About smoothing": [[853, "about-smoothing"]], "Documentation overview": [[854, "documentation-overview"]], "Getting started with Python": [[855, "getting-started-with-python"]], "MNE-MATLAB documentation": [[856, "mne-matlab-documentation"]], "High-level reading routines.": [[856, "id2"]], "Channel selection utilities.": [[856, "id3"]], "Coordinate transformation utilities.": [[856, "id4"]], "Basic reading routines.": [[856, "id5"]], "Writing routines.": [[856, "id6"]], "High-level data writing routines.": [[856, "id7"]], "Coil definition utilities.": [[856, "id8"]], "Routines for software gradient compensation and signal-space projection.": [[856, "id9"]], "High-level routines for reading MNE data files.": [[856, "id10"]], "High-level routines for writing MNE data files.": [[856, "id11"]], "Routines related to stc, w, and label files.": [[856, "id12"]], "Routines for reading FreeSurfer surfaces.": [[856, "id13"]], "Utility functions.": [[856, "id14"]], "Examples demonstrating the use of the toolbox.": [[856, "id15"]], "Some data structures": [[856, "some-data-structures"]], "FIFF constants.": [[856, "id16"]], "The tag structure.": [[856, "id17"]], "The taginfo structure.": [[856, "id18"]], "The directory structure.": [[856, "id19"]], "The id structure.": [[856, "id20"]], "The named matrix structure.": [[856, "id21"]], "The trans structure.": [[856, "id22"]], "The dig structure.": [[856, "id23"]], "The coildef structure. For more detailed information, see Coil geometry information.": [[856, "id24"]], "The ch structure.": [[856, "id25"]], "The proj structure.": [[856, "id26"]], "The comp structure.": [[856, "id27"]], "The meas info structure.": [[856, "id28"]], "The surf structure.": [[856, "id29"]], "The cov structure.": [[856, "id30"]], "The fwd structure.": [[856, "id31"]], "The inv structure. Note: The fields proj, whitener, reginv, and noisenorm are filled in by the routine mne_prepare_inverse_operator.": [[856, "id32"]], "On-line documentation for individual routines": [[856, "on-line-documentation-for-individual-routines"]], "Migrating from other analysis software": [[857, "migrating-from-other-analysis-software"]], "EEGLAB": [[857, "eeglab"]], "Potential pitfalls": [[857, "potential-pitfalls"]], "Current steering council and institutional partners": [[858, "current-steering-council-and-institutional-partners"]], "Benevolent Dictator for Life": [[858, "benevolent-dictator-for-life"]], "Community Participation Guidelines Response Leads": [[858, "community-participation-guidelines-response-leads"]], "Institutional Partners": [[858, "institutional-partners"]], "Roadmap": [[859, "roadmap"]], "Page contents": [[859, "page-contents"]], "Open": [[859, "open"]], "Time-frequency visualization": [[859, "time-frequency-visualization"]], "Clustering statistics API": [[859, "clustering-statistics-api"]], "Access to open EEG/MEG databases": [[859, "access-to-open-eeg-meg-databases"]], "Integrate OpenMEEG via improved Python bindings": [[859, "integrate-openmeeg-via-improved-python-bindings"]], "In progress": [[859, "in-progress"]], "Diversity, Equity, and Inclusion (DEI)": [[859, "diversity-equity-and-inclusion-dei"]], "First-class OPM support": [[859, "first-class-opm-support"]], "Deep source modeling": [[859, "deep-source-modeling"]], "Better sEEG/ECoG/DBS support": [[859, "better-seeg-ecog-dbs-support"]], "Time-frequency classes": [[859, "time-frequency-classes"]], "Pediatric and clinical MEG pipelines": [[859, "pediatric-and-clinical-meg-pipelines"]], "Statistics efficiency": [[859, "statistics-efficiency"]], "3D visualization": [[859, "d-visualization"]], "Documentation updates": [[859, "documentation-updates"]], "Completed": [[859, "completed"]], "Distributed computing support": [[859, "distributed-computing-support"]], "2D visualization": [[859, "id3"]], "Tutorial / example overhaul": [[859, "tutorial-example-overhaul"]], "Cluster computing images": [[859, "cluster-computing-images"]], "Python API Reference": [[861, "python-api-reference"]], "Reading raw data": [[862, "reading-raw-data"]], "Realtime": [[863, "realtime"]], "MNE-Report": [[864, "mne-report"]], "Sensor Space Data": [[865, "sensor-space-data"]], "Source Space Data": [[867, "source-space-data"]], "Statistics": [[868, "statistics"]], "Time-Frequency": [[869, "time-frequency"]], "What\u2019s new": [[871, "what-s-new"]], "Current (1.2.dev0)": [[871, "current-1-2-dev0"]], "Enhancements": [[871, "enhancements"], [871, "id2"], [871, "id4"], [871, "id8"], [871, "id12"], [871, "id16"], [871, "id20"]], "Bugs": [[871, "bugs"], [871, "id3"], [871, "id5"], [871, "id9"], [871, "id13"], [871, "id17"], [871, "id21"]], "API changes": [[871, "api-changes"], [871, "id6"], [871, "id10"], [871, "id14"], [871, "id18"], [871, "id22"]], "Version 1.1.0 (2022-08-03)": [[871, "version-1-1-0-2022-08-03"]], "API and behavior changes": [[871, "api-and-behavior-changes"]], "Authors": [[871, "authors"], [871, "id7"], [871, "id11"], [871, "id15"], [871, "id19"], [871, "id23"], [871, "id24"], [871, "id34"], [871, "id38"], [871, "id42"], [871, "id46"], [871, "id50"], [871, "id54"], [871, "id58"], [871, "id62"], [871, "id66"], [871, "id70"], [871, "id73"], [871, "id76"], [871, "id79"], [871, "id81"], [871, "id83"], [871, "id85"], [871, "id86"]], "Version 1.0.0 (2022-03-21)": [[871, "version-1-0-0-2022-03-21"]], "Dependencies": [[871, "dependencies"]], "Version 0.24.0 (2021-11-03)": [[871, "version-0-24-0-2021-11-03"]], "Version 0.23.0 (2021-04-27)": [[871, "version-0-23-0-2021-04-27"]], "Version 0.22.0 (2020-12-17)": [[871, "version-0-22-0-2020-12-17"]], "Version 0.21 (2020-09-21)": [[871, "version-0-21-2020-09-21"]], "Version 0.20 (2020-03-27)": [[871, "version-0-20-2020-03-27"]], "Changelog": [[871, "changelog"], [871, "id25"], [871, "id28"], [871, "id31"], [871, "id35"], [871, "id39"], [871, "id43"], [871, "id47"], [871, "id51"], [871, "id55"], [871, "id59"], [871, "id63"], [871, "id67"], [871, "id71"], [871, "id74"], [871, "id77"], [871, "id80"], [871, "id82"], [871, "id84"]], "Bug": [[871, "bug"], [871, "id26"], [871, "id29"], [871, "id32"], [871, "id36"]], "API": [[871, "api"], [871, "id27"], [871, "id30"], [871, "id33"], [871, "id37"], [871, "id41"], [871, "id45"], [871, "id49"], [871, "id53"], [871, "id57"], [871, "id61"], [871, "id65"], [871, "id69"], [871, "id72"], [871, "id75"], [871, "id78"]], "Version 0.19 (2019-09-24)": [[871, "version-0-19-2019-09-24"]], "Version 0.18 (2019-05-19)": [[871, "version-0-18-2019-05-19"]], "Version 0.17 (2018-11-19)": [[871, "version-0-17-2018-11-19"]], "Version 0.16 (2018-05-01)": [[871, "version-0-16-2018-05-01"]], "Version 0.15 (2017-10-20)": [[871, "version-0-15-2017-10-20"]], "BUG": [[871, "id40"], [871, "id44"], [871, "id48"], [871, "id52"], [871, "id56"], [871, "id60"], [871, "id64"], [871, "id68"]], "Version 0.14 (2017-03-24)": [[871, "version-0-14-2017-03-24"]], "Version 0.13 (2016-09-27)": [[871, "version-0-13-2016-09-27"]], "Version 0.12 (2016-05-10)": [[871, "version-0-12-2016-05-10"]], "Version 0.11 (2015-12-24)": [[871, "version-0-11-2015-12-24"]], "Version 0.10 (2015-10-26)": [[871, "version-0-10-2015-10-26"]], "Version 0.9 (2015-05-22)": [[871, "version-0-9-2015-05-22"]], "Version 0.8 (2014-06-25)": [[871, "version-0-8-2014-06-25"]], "Version 0.7 (2013-11-26)": [[871, "version-0-7-2013-11-26"]], "Version 0.6 (2013-06-15)": [[871, "version-0-6-2013-06-15"]], "Version 0.5 (2012-12-27)": [[871, "version-0-5-2012-12-27"]], "Version 0.4 (2012-08-24)": [[871, "version-0-4-2012-08-24"]], "Version 0.3 (2012-03-23)": [[871, "version-0-3-2012-03-23"]], "Version 0.2 (2011-11-08)": [[871, "version-0-2-2011-11-08"]], "API changes summary": [[871, "api-changes-summary"]], "Version 0.1 (2011-09-23)": [[871, "version-0-1-2011-09-23"]]}, "indexentries": {"mne.datasets": [[245, "module-mne.datasets"]], "module": [[245, "module-mne.datasets"], [246, "module-mne.decoding"], [247, "module-mne.epochs"], [247, "module-mne.event"], [248, "module-mne.export"], [250, "module-mne.bem"], [839, "module-mne.beamformer"], [839, "module-mne.dipole"], [839, "module-mne.inverse_sparse"], [839, "module-mne.minimum_norm"], [840, "module-mne.cuda"], [840, "module-mne.utils"], [860, "module-mne.channels"], [860, "module-mne.chpi"], [860, "module-mne.filter"], [860, "module-mne.preprocessing"], [860, "module-mne.preprocessing.ieeg"], [860, "module-mne.preprocessing.nirs"], [860, "module-mne.transforms"], [861, "module-mne"], [862, "module-mne.io"], [862, "module-mne.io.kit"], [865, "module-mne.baseline"], [866, "module-mne.simulation"], [866, "module-mne.simulation.metrics"], [868, "module-mne.stats"], [869, "module-mne.time_frequency"], [869, "module-mne.time_frequency.tfr"], [870, "module-mne.viz"]], "mne.decoding": [[246, "module-mne.decoding"]], "mne.epochs": [[247, "module-mne.epochs"]], "mne.event": [[247, "module-mne.event"]], "mne.export": [[248, "module-mne.export"]], "mne.bem": [[250, "module-mne.bem"]], "acqparserfif (class in mne)": [[253, "mne.AcqParserFIF"]], "__getitem__() (mne.acqparserfif method)": [[253, "mne.AcqParserFIF.__getitem__"]], "__len__() (mne.acqparserfif method)": [[253, "mne.AcqParserFIF.__len__"]], "categories (mne.acqparserfif property)": [[253, "mne.AcqParserFIF.categories"]], "events (mne.acqparserfif property)": [[253, "mne.AcqParserFIF.events"]], "get_condition() (mne.acqparserfif method)": [[253, "mne.AcqParserFIF.get_condition"]], "annotations (class in mne)": [[254, "mne.Annotations"]], "__add__() (mne.annotations method)": [[254, "mne.Annotations.__add__"]], "__getitem__() (mne.annotations method)": [[254, "mne.Annotations.__getitem__"]], "__iter__() (mne.annotations method)": [[254, "mne.Annotations.__iter__"]], "__len__() (mne.annotations method)": [[254, "mne.Annotations.__len__"]], "append() (mne.annotations method)": [[254, "mne.Annotations.append"]], "copy() (mne.annotations method)": [[254, "mne.Annotations.copy"]], "crop() (mne.annotations method)": [[254, "mne.Annotations.crop"]], "delete() (mne.annotations method)": [[254, "mne.Annotations.delete"]], "orig_time (mne.annotations property)": [[254, "mne.Annotations.orig_time"]], "rename() (mne.annotations method)": [[254, "mne.Annotations.rename"]], "save() (mne.annotations method)": [[254, "mne.Annotations.save"]], "set_durations() (mne.annotations method)": [[254, "mne.Annotations.set_durations"]], "to_data_frame() (mne.annotations method)": [[254, "mne.Annotations.to_data_frame"]], "baseepochs (class in mne)": [[255, "mne.BaseEpochs"]], "__contains__() (mne.baseepochs method)": [[255, "mne.BaseEpochs.__contains__"]], "__getitem__() (mne.baseepochs method)": [[255, "mne.BaseEpochs.__getitem__"]], "__iter__() (mne.baseepochs method)": [[255, "mne.BaseEpochs.__iter__"]], "__len__() (mne.baseepochs method)": [[255, "mne.BaseEpochs.__len__"]], "add_annotations_to_metadata() (mne.baseepochs method)": [[255, "mne.BaseEpochs.add_annotations_to_metadata"]], "add_channels() (mne.baseepochs method)": [[255, "mne.BaseEpochs.add_channels"]], "add_proj() (mne.baseepochs method)": [[255, "mne.BaseEpochs.add_proj"]], "add_reference_channels() (mne.baseepochs method)": [[255, "mne.BaseEpochs.add_reference_channels"]], "anonymize() (mne.baseepochs method)": [[255, "mne.BaseEpochs.anonymize"]], "apply_baseline() (mne.baseepochs method)": [[255, "mne.BaseEpochs.apply_baseline"]], "apply_function() (mne.baseepochs method)": [[255, "mne.BaseEpochs.apply_function"]], "apply_hilbert() (mne.baseepochs method)": [[255, "mne.BaseEpochs.apply_hilbert"]], "apply_proj() (mne.baseepochs method)": [[255, "mne.BaseEpochs.apply_proj"]], "as_type() (mne.baseepochs method)": [[255, "mne.BaseEpochs.as_type"]], "average() (mne.baseepochs method)": [[255, "mne.BaseEpochs.average"]], "ch_names (mne.baseepochs property)": [[255, "mne.BaseEpochs.ch_names"]], "compensation_grade (mne.baseepochs property)": [[255, "mne.BaseEpochs.compensation_grade"]], "compute_psd() (mne.baseepochs method)": [[255, "mne.BaseEpochs.compute_psd"]], "copy() (mne.baseepochs method)": [[255, "mne.BaseEpochs.copy"]], "crop() (mne.baseepochs method)": [[255, "mne.BaseEpochs.crop"]], "decimate() (mne.baseepochs method)": [[255, "mne.BaseEpochs.decimate"]], "del_proj() (mne.baseepochs method)": [[255, "mne.BaseEpochs.del_proj"]], "drop() (mne.baseepochs method)": [[255, "mne.BaseEpochs.drop"]], "drop_bad() (mne.baseepochs method)": [[255, "mne.BaseEpochs.drop_bad"]], "drop_channels() (mne.baseepochs method)": [[255, "mne.BaseEpochs.drop_channels"]], "drop_log_stats() (mne.baseepochs method)": [[255, "mne.BaseEpochs.drop_log_stats"]], "equalize_event_counts() (mne.baseepochs method)": [[255, "mne.BaseEpochs.equalize_event_counts"]], "export() (mne.baseepochs method)": [[255, "mne.BaseEpochs.export"]], "filename (mne.baseepochs property)": [[255, "mne.BaseEpochs.filename"]], "filter() (mne.baseepochs method)": [[255, "mne.BaseEpochs.filter"]], "get_annotations_per_epoch() (mne.baseepochs method)": [[255, "mne.BaseEpochs.get_annotations_per_epoch"]], "get_channel_types() (mne.baseepochs method)": [[255, "mne.BaseEpochs.get_channel_types"]], "get_data() (mne.baseepochs method)": [[255, "mne.BaseEpochs.get_data"]], "get_montage() (mne.baseepochs method)": [[255, "mne.BaseEpochs.get_montage"]], "interpolate_bads() (mne.baseepochs method)": [[255, "mne.BaseEpochs.interpolate_bads"]], "iter_evoked() (mne.baseepochs method)": [[255, "mne.BaseEpochs.iter_evoked"]], "load_data() (mne.baseepochs method)": [[255, "mne.BaseEpochs.load_data"]], "metadata (mne.baseepochs property)": [[255, "mne.BaseEpochs.metadata"]], "next() (mne.baseepochs method)": [[255, "mne.BaseEpochs.next"]], "pick() (mne.baseepochs method)": [[255, "mne.BaseEpochs.pick"]], "pick_channels() (mne.baseepochs method)": [[255, "mne.BaseEpochs.pick_channels"]], "pick_types() (mne.baseepochs method)": [[255, "mne.BaseEpochs.pick_types"]], "plot() (mne.baseepochs method)": [[255, "mne.BaseEpochs.plot"]], "plot_drop_log() (mne.baseepochs method)": [[255, "mne.BaseEpochs.plot_drop_log"]], "plot_image() (mne.baseepochs method)": [[255, "mne.BaseEpochs.plot_image"]], "plot_projs_topomap() (mne.baseepochs method)": [[255, "mne.BaseEpochs.plot_projs_topomap"]], "plot_psd() (mne.baseepochs method)": [[255, "mne.BaseEpochs.plot_psd"]], "plot_psd_topo() (mne.baseepochs method)": [[255, "mne.BaseEpochs.plot_psd_topo"]], "plot_psd_topomap() (mne.baseepochs method)": [[255, "mne.BaseEpochs.plot_psd_topomap"]], "plot_sensors() (mne.baseepochs method)": [[255, "mne.BaseEpochs.plot_sensors"]], "plot_topo_image() (mne.baseepochs method)": [[255, "mne.BaseEpochs.plot_topo_image"]], "proj (mne.baseepochs property)": [[255, "mne.BaseEpochs.proj"]], "rename_channels() (mne.baseepochs method)": [[255, "mne.BaseEpochs.rename_channels"]], "reorder_channels() (mne.baseepochs method)": [[255, "mne.BaseEpochs.reorder_channels"]], "resample() (mne.baseepochs method)": [[255, "mne.BaseEpochs.resample"]], "reset_drop_log_selection() (mne.baseepochs method)": [[255, "mne.BaseEpochs.reset_drop_log_selection"]], "save() (mne.baseepochs method)": [[255, "mne.BaseEpochs.save"]], "savgol_filter() (mne.baseepochs method)": [[255, "mne.BaseEpochs.savgol_filter"]], "set_annotations() (mne.baseepochs method)": [[255, "mne.BaseEpochs.set_annotations"]], "set_channel_types() (mne.baseepochs method)": [[255, "mne.BaseEpochs.set_channel_types"]], "set_eeg_reference() (mne.baseepochs method)": [[255, "mne.BaseEpochs.set_eeg_reference"]], "set_meas_date() (mne.baseepochs method)": [[255, "mne.BaseEpochs.set_meas_date"]], "set_montage() (mne.baseepochs method)": [[255, "mne.BaseEpochs.set_montage"]], "shift_time() (mne.baseepochs method)": [[255, "mne.BaseEpochs.shift_time"]], "standard_error() (mne.baseepochs method)": [[255, "mne.BaseEpochs.standard_error"]], "subtract_evoked() (mne.baseepochs method)": [[255, "mne.BaseEpochs.subtract_evoked"]], "time_as_index() (mne.baseepochs method)": [[255, "mne.BaseEpochs.time_as_index"]], "times (mne.baseepochs property)": [[255, "mne.BaseEpochs.times"]], "tmax (mne.baseepochs property)": [[255, "mne.BaseEpochs.tmax"]], "tmin (mne.baseepochs property)": [[255, "mne.BaseEpochs.tmin"]], "to_data_frame() (mne.baseepochs method)": [[255, "mne.BaseEpochs.to_data_frame"]], "bihemilabel (class in mne)": [[256, "mne.BiHemiLabel"]], "__add__() (mne.bihemilabel method)": [[256, "mne.BiHemiLabel.__add__"]], "__len__() (mne.bihemilabel method)": [[256, "mne.BiHemiLabel.__len__"]], "__sub__() (mne.bihemilabel method)": [[256, "mne.BiHemiLabel.__sub__"]], "covariance (class in mne)": [[257, "mne.Covariance"]], "__add__() (mne.covariance method)": [[257, "mne.Covariance.__add__"]], "__contains__() (mne.covariance method)": [[257, "mne.Covariance.__contains__"]], "__getitem__() (mne.covariance method)": [[257, "mne.Covariance.__getitem__"]], "__iter__() (mne.covariance method)": [[257, "mne.Covariance.__iter__"]], "__len__() (mne.covariance method)": [[257, "mne.Covariance.__len__"]], "as_diag() (mne.covariance method)": [[257, "mne.Covariance.as_diag"]], "ch_names (mne.covariance property)": [[257, "mne.Covariance.ch_names"]], "clear() (mne.covariance method)": [[257, "mne.Covariance.clear"]], "copy() (mne.covariance method)": [[257, "mne.Covariance.copy"]], "data (mne.covariance property)": [[257, "mne.Covariance.data"]], "fromkeys() (mne.covariance method)": [[257, "mne.Covariance.fromkeys"]], "get() (mne.covariance method)": [[257, "mne.Covariance.get"]], "items() (mne.covariance method)": [[257, "mne.Covariance.items"]], "keys() (mne.covariance method)": [[257, "mne.Covariance.keys"]], "nfree (mne.covariance property)": [[257, "mne.Covariance.nfree"]], "pick_channels() (mne.covariance method)": [[257, "mne.Covariance.pick_channels"]], "plot() (mne.covariance method)": [[257, "mne.Covariance.plot"]], "plot_topomap() (mne.covariance method)": [[257, "mne.Covariance.plot_topomap"]], "pop() (mne.covariance method)": [[257, "mne.Covariance.pop"]], "popitem() (mne.covariance method)": [[257, "mne.Covariance.popitem"]], "save() (mne.covariance method)": [[257, "mne.Covariance.save"]], "setdefault() (mne.covariance method)": [[257, "mne.Covariance.setdefault"]], "update() (mne.covariance method)": [[257, "mne.Covariance.update"]], "values() (mne.covariance method)": [[257, "mne.Covariance.values"]], "dipole (class in mne)": [[258, "mne.Dipole"]], "__getitem__() (mne.dipole method)": [[258, "mne.Dipole.__getitem__"]], "__len__() (mne.dipole method)": [[258, "mne.Dipole.__len__"]], "copy() (mne.dipole method)": [[258, "mne.Dipole.copy"]], "crop() (mne.dipole method)": [[258, "mne.Dipole.crop"]], "decimate() (mne.dipole method)": [[258, "mne.Dipole.decimate"]], "plot_amplitudes() (mne.dipole method)": [[258, "mne.Dipole.plot_amplitudes"]], "plot_locations() (mne.dipole method)": [[258, "mne.Dipole.plot_locations"]], "save() (mne.dipole method)": [[258, "mne.Dipole.save"]], "shift_time() (mne.dipole method)": [[258, "mne.Dipole.shift_time"]], "time_as_index() (mne.dipole method)": [[258, "mne.Dipole.time_as_index"]], "times (mne.dipole property)": [[258, "mne.Dipole.times"]], "tmax (mne.dipole property)": [[258, "mne.Dipole.tmax"]], "tmin (mne.dipole property)": [[258, "mne.Dipole.tmin"]], "to_mni() (mne.dipole method)": [[258, "mne.Dipole.to_mni"]], "to_mri() (mne.dipole method)": [[258, "mne.Dipole.to_mri"]], "to_volume_labels() (mne.dipole method)": [[258, "mne.Dipole.to_volume_labels"]], "dipolefixed (class in mne)": [[259, "mne.DipoleFixed"]], "ch_names (mne.dipolefixed property)": [[259, "mne.DipoleFixed.ch_names"]], "copy() (mne.dipolefixed method)": [[259, "mne.DipoleFixed.copy"]], "crop() (mne.dipolefixed method)": [[259, "mne.DipoleFixed.crop"]], "decimate() (mne.dipolefixed method)": [[259, "mne.DipoleFixed.decimate"]], "plot() (mne.dipolefixed method)": [[259, "mne.DipoleFixed.plot"]], "save() (mne.dipolefixed method)": [[259, "mne.DipoleFixed.save"]], "shift_time() (mne.dipolefixed method)": [[259, "mne.DipoleFixed.shift_time"]], "time_as_index() (mne.dipolefixed method)": [[259, "mne.DipoleFixed.time_as_index"]], "times (mne.dipolefixed property)": [[259, "mne.DipoleFixed.times"]], "tmax (mne.dipolefixed property)": [[259, "mne.DipoleFixed.tmax"]], "tmin (mne.dipolefixed property)": [[259, "mne.DipoleFixed.tmin"]], "epochs (class in mne)": [[260, "mne.Epochs"]], "__contains__() (mne.epochs method)": [[260, "mne.Epochs.__contains__"]], "__getitem__() (mne.epochs method)": [[260, "mne.Epochs.__getitem__"]], "__iter__() (mne.epochs method)": [[260, "mne.Epochs.__iter__"]], "__len__() (mne.epochs method)": [[260, "mne.Epochs.__len__"]], "add_annotations_to_metadata() (mne.epochs method)": [[260, "mne.Epochs.add_annotations_to_metadata"]], "add_channels() (mne.epochs method)": [[260, "mne.Epochs.add_channels"]], "add_proj() (mne.epochs method)": [[260, "mne.Epochs.add_proj"]], "add_reference_channels() (mne.epochs method)": [[260, "mne.Epochs.add_reference_channels"]], "anonymize() (mne.epochs method)": [[260, "mne.Epochs.anonymize"]], "apply_baseline() (mne.epochs method)": [[260, "mne.Epochs.apply_baseline"]], "apply_function() (mne.epochs method)": [[260, "mne.Epochs.apply_function"]], "apply_hilbert() (mne.epochs method)": [[260, "mne.Epochs.apply_hilbert"]], "apply_proj() (mne.epochs method)": [[260, "mne.Epochs.apply_proj"]], "as_type() (mne.epochs method)": [[260, "mne.Epochs.as_type"]], "average() (mne.epochs method)": [[260, "mne.Epochs.average"]], "ch_names (mne.epochs property)": [[260, "mne.Epochs.ch_names"]], "compensation_grade (mne.epochs property)": [[260, "mne.Epochs.compensation_grade"]], "compute_psd() (mne.epochs method)": [[260, "mne.Epochs.compute_psd"]], "copy() (mne.epochs method)": [[260, "mne.Epochs.copy"]], "crop() (mne.epochs method)": [[260, "mne.Epochs.crop"]], "decimate() (mne.epochs method)": [[260, "mne.Epochs.decimate"]], "del_proj() (mne.epochs method)": [[260, "mne.Epochs.del_proj"]], "drop() (mne.epochs method)": [[260, "mne.Epochs.drop"]], "drop_bad() (mne.epochs method)": [[260, "mne.Epochs.drop_bad"]], "drop_channels() (mne.epochs method)": [[260, "mne.Epochs.drop_channels"]], "drop_log_stats() (mne.epochs method)": [[260, "mne.Epochs.drop_log_stats"]], "equalize_event_counts() (mne.epochs method)": [[260, "mne.Epochs.equalize_event_counts"]], "export() (mne.epochs method)": [[260, "mne.Epochs.export"]], "filename (mne.epochs property)": [[260, "mne.Epochs.filename"]], "filter() (mne.epochs method)": [[260, "mne.Epochs.filter"]], "get_annotations_per_epoch() (mne.epochs method)": [[260, "mne.Epochs.get_annotations_per_epoch"]], "get_channel_types() (mne.epochs method)": [[260, "mne.Epochs.get_channel_types"]], "get_data() (mne.epochs method)": [[260, "mne.Epochs.get_data"]], "get_montage() (mne.epochs method)": [[260, "mne.Epochs.get_montage"]], "interpolate_bads() (mne.epochs method)": [[260, "mne.Epochs.interpolate_bads"]], "iter_evoked() (mne.epochs method)": [[260, "mne.Epochs.iter_evoked"]], "load_data() (mne.epochs method)": [[260, "mne.Epochs.load_data"]], "metadata (mne.epochs property)": [[260, "mne.Epochs.metadata"]], "next() (mne.epochs method)": [[260, "mne.Epochs.next"]], "pick() (mne.epochs method)": [[260, "mne.Epochs.pick"]], "pick_channels() (mne.epochs method)": [[260, "mne.Epochs.pick_channels"]], "pick_types() (mne.epochs method)": [[260, "mne.Epochs.pick_types"]], "plot() (mne.epochs method)": [[260, "mne.Epochs.plot"]], "plot_drop_log() (mne.epochs method)": [[260, "mne.Epochs.plot_drop_log"]], "plot_image() (mne.epochs method)": [[260, "mne.Epochs.plot_image"]], "plot_projs_topomap() (mne.epochs method)": [[260, "mne.Epochs.plot_projs_topomap"]], "plot_psd() (mne.epochs method)": [[260, "mne.Epochs.plot_psd"]], "plot_psd_topo() (mne.epochs method)": [[260, "mne.Epochs.plot_psd_topo"]], "plot_psd_topomap() (mne.epochs method)": [[260, "mne.Epochs.plot_psd_topomap"]], "plot_sensors() (mne.epochs method)": [[260, "mne.Epochs.plot_sensors"]], "plot_topo_image() (mne.epochs method)": [[260, "mne.Epochs.plot_topo_image"]], "proj (mne.epochs property)": [[260, "mne.Epochs.proj"]], "rename_channels() (mne.epochs method)": [[260, "mne.Epochs.rename_channels"]], "reorder_channels() (mne.epochs method)": [[260, "mne.Epochs.reorder_channels"]], "resample() (mne.epochs method)": [[260, "mne.Epochs.resample"]], "reset_drop_log_selection() (mne.epochs method)": [[260, "mne.Epochs.reset_drop_log_selection"]], "save() (mne.epochs method)": [[260, "mne.Epochs.save"]], "savgol_filter() (mne.epochs method)": [[260, "mne.Epochs.savgol_filter"]], "set_annotations() (mne.epochs method)": [[260, "mne.Epochs.set_annotations"]], "set_channel_types() (mne.epochs method)": [[260, "mne.Epochs.set_channel_types"]], "set_eeg_reference() (mne.epochs method)": [[260, "mne.Epochs.set_eeg_reference"]], "set_meas_date() (mne.epochs method)": [[260, "mne.Epochs.set_meas_date"]], "set_montage() (mne.epochs method)": [[260, "mne.Epochs.set_montage"]], "shift_time() (mne.epochs method)": [[260, "mne.Epochs.shift_time"]], "standard_error() (mne.epochs method)": [[260, "mne.Epochs.standard_error"]], "subtract_evoked() (mne.epochs method)": [[260, "mne.Epochs.subtract_evoked"]], "time_as_index() (mne.epochs method)": [[260, "mne.Epochs.time_as_index"]], "times (mne.epochs property)": [[260, "mne.Epochs.times"]], "tmax (mne.epochs property)": [[260, "mne.Epochs.tmax"]], "tmin (mne.epochs property)": [[260, "mne.Epochs.tmin"]], "to_data_frame() (mne.epochs method)": [[260, "mne.Epochs.to_data_frame"]], "epochsarray (class in mne)": [[261, "mne.EpochsArray"]], "__contains__() (mne.epochsarray method)": [[261, "mne.EpochsArray.__contains__"]], "__getitem__() (mne.epochsarray method)": [[261, "mne.EpochsArray.__getitem__"]], "__iter__() (mne.epochsarray method)": [[261, "mne.EpochsArray.__iter__"]], "__len__() (mne.epochsarray method)": [[261, "mne.EpochsArray.__len__"]], "add_annotations_to_metadata() (mne.epochsarray method)": [[261, "mne.EpochsArray.add_annotations_to_metadata"]], "add_channels() (mne.epochsarray method)": [[261, "mne.EpochsArray.add_channels"]], "add_proj() (mne.epochsarray method)": [[261, "mne.EpochsArray.add_proj"]], "add_reference_channels() (mne.epochsarray method)": [[261, "mne.EpochsArray.add_reference_channels"]], "anonymize() (mne.epochsarray method)": [[261, "mne.EpochsArray.anonymize"]], "apply_baseline() (mne.epochsarray method)": [[261, "mne.EpochsArray.apply_baseline"]], "apply_function() (mne.epochsarray method)": [[261, "mne.EpochsArray.apply_function"]], "apply_hilbert() (mne.epochsarray method)": [[261, "mne.EpochsArray.apply_hilbert"]], "apply_proj() (mne.epochsarray method)": [[261, "mne.EpochsArray.apply_proj"]], "as_type() (mne.epochsarray method)": [[261, "mne.EpochsArray.as_type"]], "average() (mne.epochsarray method)": [[261, "mne.EpochsArray.average"]], "ch_names (mne.epochsarray property)": [[261, "mne.EpochsArray.ch_names"]], "compensation_grade (mne.epochsarray property)": [[261, "mne.EpochsArray.compensation_grade"]], "compute_psd() (mne.epochsarray method)": [[261, "mne.EpochsArray.compute_psd"]], "copy() (mne.epochsarray method)": [[261, "mne.EpochsArray.copy"]], "crop() (mne.epochsarray method)": [[261, "mne.EpochsArray.crop"]], "decimate() (mne.epochsarray method)": [[261, "mne.EpochsArray.decimate"]], "del_proj() (mne.epochsarray method)": [[261, "mne.EpochsArray.del_proj"]], "drop() (mne.epochsarray method)": [[261, "mne.EpochsArray.drop"]], "drop_bad() (mne.epochsarray method)": [[261, "mne.EpochsArray.drop_bad"]], "drop_channels() (mne.epochsarray method)": [[261, "mne.EpochsArray.drop_channels"]], "drop_log_stats() (mne.epochsarray method)": [[261, "mne.EpochsArray.drop_log_stats"]], "equalize_event_counts() (mne.epochsarray method)": [[261, "mne.EpochsArray.equalize_event_counts"]], "export() (mne.epochsarray method)": [[261, "mne.EpochsArray.export"]], "filename (mne.epochsarray property)": [[261, "mne.EpochsArray.filename"]], "filter() (mne.epochsarray method)": [[261, "mne.EpochsArray.filter"]], "get_annotations_per_epoch() (mne.epochsarray method)": [[261, "mne.EpochsArray.get_annotations_per_epoch"]], "get_channel_types() (mne.epochsarray method)": [[261, "mne.EpochsArray.get_channel_types"]], "get_data() (mne.epochsarray method)": [[261, "mne.EpochsArray.get_data"]], "get_montage() (mne.epochsarray method)": [[261, "mne.EpochsArray.get_montage"]], "interpolate_bads() (mne.epochsarray method)": [[261, "mne.EpochsArray.interpolate_bads"]], "iter_evoked() (mne.epochsarray method)": [[261, "mne.EpochsArray.iter_evoked"]], "load_data() (mne.epochsarray method)": [[261, "mne.EpochsArray.load_data"]], "metadata (mne.epochsarray property)": [[261, "mne.EpochsArray.metadata"]], "next() (mne.epochsarray method)": [[261, "mne.EpochsArray.next"]], "pick() (mne.epochsarray method)": [[261, "mne.EpochsArray.pick"]], "pick_channels() (mne.epochsarray method)": [[261, "mne.EpochsArray.pick_channels"]], "pick_types() (mne.epochsarray method)": [[261, "mne.EpochsArray.pick_types"]], "plot() (mne.epochsarray method)": [[261, "mne.EpochsArray.plot"]], "plot_drop_log() (mne.epochsarray method)": [[261, "mne.EpochsArray.plot_drop_log"]], "plot_image() (mne.epochsarray method)": [[261, "mne.EpochsArray.plot_image"]], "plot_projs_topomap() (mne.epochsarray method)": [[261, "mne.EpochsArray.plot_projs_topomap"]], "plot_psd() (mne.epochsarray method)": [[261, "mne.EpochsArray.plot_psd"]], "plot_psd_topo() (mne.epochsarray method)": [[261, "mne.EpochsArray.plot_psd_topo"]], "plot_psd_topomap() (mne.epochsarray method)": [[261, "mne.EpochsArray.plot_psd_topomap"]], "plot_sensors() (mne.epochsarray method)": [[261, "mne.EpochsArray.plot_sensors"]], "plot_topo_image() (mne.epochsarray method)": [[261, "mne.EpochsArray.plot_topo_image"]], "proj (mne.epochsarray property)": [[261, "mne.EpochsArray.proj"]], "rename_channels() (mne.epochsarray method)": [[261, "mne.EpochsArray.rename_channels"]], "reorder_channels() (mne.epochsarray method)": [[261, "mne.EpochsArray.reorder_channels"]], "resample() (mne.epochsarray method)": [[261, "mne.EpochsArray.resample"]], "reset_drop_log_selection() (mne.epochsarray method)": [[261, "mne.EpochsArray.reset_drop_log_selection"]], "save() (mne.epochsarray method)": [[261, "mne.EpochsArray.save"]], "savgol_filter() (mne.epochsarray method)": [[261, "mne.EpochsArray.savgol_filter"]], "set_annotations() (mne.epochsarray method)": [[261, "mne.EpochsArray.set_annotations"]], "set_channel_types() (mne.epochsarray method)": [[261, "mne.EpochsArray.set_channel_types"]], "set_eeg_reference() (mne.epochsarray method)": [[261, "mne.EpochsArray.set_eeg_reference"]], "set_meas_date() (mne.epochsarray method)": [[261, "mne.EpochsArray.set_meas_date"]], "set_montage() (mne.epochsarray method)": [[261, "mne.EpochsArray.set_montage"]], "shift_time() (mne.epochsarray method)": [[261, "mne.EpochsArray.shift_time"]], "standard_error() (mne.epochsarray method)": [[261, "mne.EpochsArray.standard_error"]], "subtract_evoked() (mne.epochsarray method)": [[261, "mne.EpochsArray.subtract_evoked"]], "time_as_index() (mne.epochsarray method)": [[261, "mne.EpochsArray.time_as_index"]], "times (mne.epochsarray property)": [[261, "mne.EpochsArray.times"]], "tmax (mne.epochsarray property)": [[261, "mne.EpochsArray.tmax"]], "tmin (mne.epochsarray property)": [[261, "mne.EpochsArray.tmin"]], "to_data_frame() (mne.epochsarray method)": [[261, "mne.EpochsArray.to_data_frame"]], "evoked (class in mne)": [[262, "mne.Evoked"]], "__contains__() (mne.evoked method)": [[262, "mne.Evoked.__contains__"]], "__neg__() (mne.evoked method)": [[262, "mne.Evoked.__neg__"]], "add_channels() (mne.evoked method)": [[262, "mne.Evoked.add_channels"]], "add_proj() (mne.evoked method)": [[262, "mne.Evoked.add_proj"]], "add_reference_channels() (mne.evoked method)": [[262, "mne.Evoked.add_reference_channels"]], "animate_topomap() (mne.evoked method)": [[262, "mne.Evoked.animate_topomap"]], "anonymize() (mne.evoked method)": [[262, "mne.Evoked.anonymize"]], "apply_baseline() (mne.evoked method)": [[262, "mne.Evoked.apply_baseline"]], "apply_function() (mne.evoked method)": [[262, "mne.Evoked.apply_function"]], "apply_hilbert() (mne.evoked method)": [[262, "mne.Evoked.apply_hilbert"]], "apply_proj() (mne.evoked method)": [[262, "mne.Evoked.apply_proj"]], "as_type() (mne.evoked method)": [[262, "mne.Evoked.as_type"]], "ch_names (mne.evoked property)": [[262, "mne.Evoked.ch_names"]], "compensation_grade (mne.evoked property)": [[262, "mne.Evoked.compensation_grade"]], "compute_psd() (mne.evoked method)": [[262, "mne.Evoked.compute_psd"]], "copy() (mne.evoked method)": [[262, "mne.Evoked.copy"]], "crop() (mne.evoked method)": [[262, "mne.Evoked.crop"]], "data (mne.evoked property)": [[262, "mne.Evoked.data"]], "decimate() (mne.evoked method)": [[262, "mne.Evoked.decimate"]], "del_proj() (mne.evoked method)": [[262, "mne.Evoked.del_proj"]], "detrend() (mne.evoked method)": [[262, "mne.Evoked.detrend"]], "drop_channels() (mne.evoked method)": [[262, "mne.Evoked.drop_channels"]], "export() (mne.evoked method)": [[262, "mne.Evoked.export"]], "filter() (mne.evoked method)": [[262, "mne.Evoked.filter"]], "get_channel_types() (mne.evoked method)": [[262, "mne.Evoked.get_channel_types"]], "get_data() (mne.evoked method)": [[262, "mne.Evoked.get_data"]], "get_montage() (mne.evoked method)": [[262, "mne.Evoked.get_montage"]], "get_peak() (mne.evoked method)": [[262, "mne.Evoked.get_peak"]], "interpolate_bads() (mne.evoked method)": [[262, "mne.Evoked.interpolate_bads"]], "kind (mne.evoked property)": [[262, "mne.Evoked.kind"]], "pick() (mne.evoked method)": [[262, "mne.Evoked.pick"]], "pick_channels() (mne.evoked method)": [[262, "mne.Evoked.pick_channels"]], "pick_types() (mne.evoked method)": [[262, "mne.Evoked.pick_types"]], "plot() (mne.evoked method)": [[262, "mne.Evoked.plot"]], "plot_field() (mne.evoked method)": [[262, "mne.Evoked.plot_field"]], "plot_image() (mne.evoked method)": [[262, "mne.Evoked.plot_image"]], "plot_joint() (mne.evoked method)": [[262, "mne.Evoked.plot_joint"]], "plot_projs_topomap() (mne.evoked method)": [[262, "mne.Evoked.plot_projs_topomap"]], "plot_psd() (mne.evoked method)": [[262, "mne.Evoked.plot_psd"]], "plot_psd_topo() (mne.evoked method)": [[262, "mne.Evoked.plot_psd_topo"]], "plot_psd_topomap() (mne.evoked method)": [[262, "mne.Evoked.plot_psd_topomap"]], "plot_sensors() (mne.evoked method)": [[262, "mne.Evoked.plot_sensors"]], "plot_topo() (mne.evoked method)": [[262, "mne.Evoked.plot_topo"]], "plot_topomap() (mne.evoked method)": [[262, "mne.Evoked.plot_topomap"]], "plot_white() (mne.evoked method)": [[262, "mne.Evoked.plot_white"]], "proj (mne.evoked property)": [[262, "mne.Evoked.proj"]], "rename_channels() (mne.evoked method)": [[262, "mne.Evoked.rename_channels"]], "reorder_channels() (mne.evoked method)": [[262, "mne.Evoked.reorder_channels"]], "resample() (mne.evoked method)": [[262, "mne.Evoked.resample"]], "save() (mne.evoked method)": [[262, "mne.Evoked.save"]], "savgol_filter() (mne.evoked method)": [[262, "mne.Evoked.savgol_filter"]], "set_channel_types() (mne.evoked method)": [[262, "mne.Evoked.set_channel_types"]], "set_eeg_reference() (mne.evoked method)": [[262, "mne.Evoked.set_eeg_reference"]], "set_meas_date() (mne.evoked method)": [[262, "mne.Evoked.set_meas_date"]], "set_montage() (mne.evoked method)": [[262, "mne.Evoked.set_montage"]], "shift_time() (mne.evoked method)": [[262, "mne.Evoked.shift_time"]], "time_as_index() (mne.evoked method)": [[262, "mne.Evoked.time_as_index"]], "times (mne.evoked property)": [[262, "mne.Evoked.times"]], "tmax (mne.evoked property)": [[262, "mne.Evoked.tmax"]], "tmin (mne.evoked property)": [[262, "mne.Evoked.tmin"]], "to_data_frame() (mne.evoked method)": [[262, "mne.Evoked.to_data_frame"]], "evokedarray (class in mne)": [[263, "mne.EvokedArray"]], "__contains__() (mne.evokedarray method)": [[263, "mne.EvokedArray.__contains__"]], "__neg__() (mne.evokedarray method)": [[263, "mne.EvokedArray.__neg__"]], "add_channels() (mne.evokedarray method)": [[263, "mne.EvokedArray.add_channels"]], "add_proj() (mne.evokedarray method)": [[263, "mne.EvokedArray.add_proj"]], "add_reference_channels() (mne.evokedarray method)": [[263, "mne.EvokedArray.add_reference_channels"]], "animate_topomap() (mne.evokedarray method)": [[263, "mne.EvokedArray.animate_topomap"]], "anonymize() (mne.evokedarray method)": [[263, "mne.EvokedArray.anonymize"]], "apply_baseline() (mne.evokedarray method)": [[263, "mne.EvokedArray.apply_baseline"]], "apply_function() (mne.evokedarray method)": [[263, "mne.EvokedArray.apply_function"]], "apply_hilbert() (mne.evokedarray method)": [[263, "mne.EvokedArray.apply_hilbert"]], "apply_proj() (mne.evokedarray method)": [[263, "mne.EvokedArray.apply_proj"]], "as_type() (mne.evokedarray method)": [[263, "mne.EvokedArray.as_type"]], "ch_names (mne.evokedarray property)": [[263, "mne.EvokedArray.ch_names"]], "compensation_grade (mne.evokedarray property)": [[263, "mne.EvokedArray.compensation_grade"]], "compute_psd() (mne.evokedarray method)": [[263, "mne.EvokedArray.compute_psd"]], "copy() (mne.evokedarray method)": [[263, "mne.EvokedArray.copy"]], "crop() (mne.evokedarray method)": [[263, "mne.EvokedArray.crop"]], "data (mne.evokedarray property)": [[263, "mne.EvokedArray.data"]], "decimate() (mne.evokedarray method)": [[263, "mne.EvokedArray.decimate"]], "del_proj() (mne.evokedarray method)": [[263, "mne.EvokedArray.del_proj"]], "detrend() (mne.evokedarray method)": [[263, "mne.EvokedArray.detrend"]], "drop_channels() (mne.evokedarray method)": [[263, "mne.EvokedArray.drop_channels"]], "export() (mne.evokedarray method)": [[263, "mne.EvokedArray.export"]], "filter() (mne.evokedarray method)": [[263, "mne.EvokedArray.filter"]], "get_channel_types() (mne.evokedarray method)": [[263, "mne.EvokedArray.get_channel_types"]], "get_data() (mne.evokedarray method)": [[263, "mne.EvokedArray.get_data"]], "get_montage() (mne.evokedarray method)": [[263, "mne.EvokedArray.get_montage"]], "get_peak() (mne.evokedarray method)": [[263, "mne.EvokedArray.get_peak"]], "interpolate_bads() (mne.evokedarray method)": [[263, "mne.EvokedArray.interpolate_bads"]], "kind (mne.evokedarray property)": [[263, "mne.EvokedArray.kind"]], "pick() (mne.evokedarray method)": [[263, "mne.EvokedArray.pick"]], "pick_channels() (mne.evokedarray method)": [[263, "mne.EvokedArray.pick_channels"]], "pick_types() (mne.evokedarray method)": [[263, "mne.EvokedArray.pick_types"]], "plot() (mne.evokedarray method)": [[263, "mne.EvokedArray.plot"]], "plot_field() (mne.evokedarray method)": [[263, "mne.EvokedArray.plot_field"]], "plot_image() (mne.evokedarray method)": [[263, "mne.EvokedArray.plot_image"]], "plot_joint() (mne.evokedarray method)": [[263, "mne.EvokedArray.plot_joint"]], "plot_projs_topomap() (mne.evokedarray method)": [[263, "mne.EvokedArray.plot_projs_topomap"]], "plot_psd() (mne.evokedarray method)": [[263, "mne.EvokedArray.plot_psd"]], "plot_psd_topo() (mne.evokedarray method)": [[263, "mne.EvokedArray.plot_psd_topo"]], "plot_psd_topomap() (mne.evokedarray method)": [[263, "mne.EvokedArray.plot_psd_topomap"]], "plot_sensors() (mne.evokedarray method)": [[263, "mne.EvokedArray.plot_sensors"]], "plot_topo() (mne.evokedarray method)": [[263, "mne.EvokedArray.plot_topo"]], "plot_topomap() (mne.evokedarray method)": [[263, "mne.EvokedArray.plot_topomap"]], "plot_white() (mne.evokedarray method)": [[263, "mne.EvokedArray.plot_white"]], "proj (mne.evokedarray property)": [[263, "mne.EvokedArray.proj"]], "rename_channels() (mne.evokedarray method)": [[263, "mne.EvokedArray.rename_channels"]], "reorder_channels() (mne.evokedarray method)": [[263, "mne.EvokedArray.reorder_channels"]], "resample() (mne.evokedarray method)": [[263, "mne.EvokedArray.resample"]], "save() (mne.evokedarray method)": [[263, "mne.EvokedArray.save"]], "savgol_filter() (mne.evokedarray method)": [[263, "mne.EvokedArray.savgol_filter"]], "set_channel_types() (mne.evokedarray method)": [[263, "mne.EvokedArray.set_channel_types"]], "set_eeg_reference() (mne.evokedarray method)": [[263, "mne.EvokedArray.set_eeg_reference"]], "set_meas_date() (mne.evokedarray method)": [[263, "mne.EvokedArray.set_meas_date"]], "set_montage() (mne.evokedarray method)": [[263, "mne.EvokedArray.set_montage"]], "shift_time() (mne.evokedarray method)": [[263, "mne.EvokedArray.shift_time"]], "time_as_index() (mne.evokedarray method)": [[263, "mne.EvokedArray.time_as_index"]], "times (mne.evokedarray property)": [[263, "mne.EvokedArray.times"]], "tmax (mne.evokedarray property)": [[263, "mne.EvokedArray.tmax"]], "tmin (mne.evokedarray property)": [[263, "mne.EvokedArray.tmin"]], "to_data_frame() (mne.evokedarray method)": [[263, "mne.EvokedArray.to_data_frame"]], "forward (class in mne)": [[264, "mne.Forward"]], "copy() (mne.forward method)": [[264, "mne.Forward.copy"]], "pick_channels() (mne.forward method)": [[264, "mne.Forward.pick_channels"]], "info (class in mne)": [[265, "mne.Info"]], "__contains__() (mne.info method)": [[265, "mne.Info.__contains__"]], "__getitem__() (mne.info method)": [[265, "mne.Info.__getitem__"]], "__iter__() (mne.info method)": [[265, "mne.Info.__iter__"]], "__len__() (mne.info method)": [[265, "mne.Info.__len__"]], "clear() (mne.info method)": [[265, "mne.Info.clear"]], "compensation_grade (mne.info property)": [[265, "mne.Info.compensation_grade"]], "copy() (mne.info method)": [[265, "mne.Info.copy"]], "fromkeys() (mne.info method)": [[265, "mne.Info.fromkeys"]], "get() (mne.info method)": [[265, "mne.Info.get"]], "get_channel_types() (mne.info method)": [[265, "mne.Info.get_channel_types"]], "get_montage() (mne.info method)": [[265, "mne.Info.get_montage"]], "items() (mne.info method)": [[265, "mne.Info.items"]], "keys() (mne.info method)": [[265, "mne.Info.keys"]], "normalize_proj() (mne.info method)": [[265, "mne.Info.normalize_proj"]], "pop() (mne.info method)": [[265, "mne.Info.pop"]], "popitem() (mne.info method)": [[265, "mne.Info.popitem"]], "set_montage() (mne.info method)": [[265, "mne.Info.set_montage"]], "setdefault() (mne.info method)": [[265, "mne.Info.setdefault"]], "update() (mne.info method)": [[265, "mne.Info.update"]], "values() (mne.info method)": [[265, "mne.Info.values"]], "label (class in mne)": [[266, "mne.Label"]], "__add__() (mne.label method)": [[266, "mne.Label.__add__"]], "__len__() (mne.label method)": [[266, "mne.Label.__len__"]], "__sub__() (mne.label method)": [[266, "mne.Label.__sub__"]], "center_of_mass() (mne.label method)": [[266, "mne.Label.center_of_mass"]], "compute_area() (mne.label method)": [[266, "mne.Label.compute_area"]], "copy() (mne.label method)": [[266, "mne.Label.copy"]], "distances_to_outside() (mne.label method)": [[266, "mne.Label.distances_to_outside"]], "fill() (mne.label method)": [[266, "mne.Label.fill"]], "get_tris() (mne.label method)": [[266, "mne.Label.get_tris"]], "get_vertices_used() (mne.label method)": [[266, "mne.Label.get_vertices_used"]], "morph() (mne.label method)": [[266, "mne.Label.morph"]], "restrict() (mne.label method)": [[266, "mne.Label.restrict"]], "save() (mne.label method)": [[266, "mne.Label.save"]], "smooth() (mne.label method)": [[266, "mne.Label.smooth"]], "split() (mne.label method)": [[266, "mne.Label.split"]], "mixedsourceestimate (class in mne)": [[267, "mne.MixedSourceEstimate"]], "__add__() (mne.mixedsourceestimate method)": [[267, "mne.MixedSourceEstimate.__add__"]], "__div__() (mne.mixedsourceestimate method)": [[267, "mne.MixedSourceEstimate.__div__"]], "__mul__() (mne.mixedsourceestimate method)": [[267, "mne.MixedSourceEstimate.__mul__"]], "__neg__() (mne.mixedsourceestimate method)": [[267, "mne.MixedSourceEstimate.__neg__"]], "__sub__() (mne.mixedsourceestimate method)": [[267, "mne.MixedSourceEstimate.__sub__"]], "apply_baseline() (mne.mixedsourceestimate method)": [[267, "mne.MixedSourceEstimate.apply_baseline"]], "bin() (mne.mixedsourceestimate method)": [[267, "mne.MixedSourceEstimate.bin"]], "copy() (mne.mixedsourceestimate method)": [[267, "mne.MixedSourceEstimate.copy"]], "crop() (mne.mixedsourceestimate method)": [[267, "mne.MixedSourceEstimate.crop"]], "data (mne.mixedsourceestimate property)": [[267, "mne.MixedSourceEstimate.data"]], "decimate() (mne.mixedsourceestimate method)": [[267, "mne.MixedSourceEstimate.decimate"]], "extract_label_time_course() (mne.mixedsourceestimate method)": [[267, "mne.MixedSourceEstimate.extract_label_time_course"]], "get_peak() (mne.mixedsourceestimate method)": [[267, "mne.MixedSourceEstimate.get_peak"]], "mean() (mne.mixedsourceestimate method)": [[267, "mne.MixedSourceEstimate.mean"]], "plot() (mne.mixedsourceestimate method)": [[267, "mne.MixedSourceEstimate.plot"]], "resample() (mne.mixedsourceestimate method)": [[267, "mne.MixedSourceEstimate.resample"]], "save() (mne.mixedsourceestimate method)": [[267, "mne.MixedSourceEstimate.save"]], "sfreq (mne.mixedsourceestimate property)": [[267, "mne.MixedSourceEstimate.sfreq"]], "shape (mne.mixedsourceestimate property)": [[267, "mne.MixedSourceEstimate.shape"]], "shift_time() (mne.mixedsourceestimate method)": [[267, "mne.MixedSourceEstimate.shift_time"]], "sqrt() (mne.mixedsourceestimate method)": [[267, "mne.MixedSourceEstimate.sqrt"]], "sum() (mne.mixedsourceestimate method)": [[267, "mne.MixedSourceEstimate.sum"]], "surface() (mne.mixedsourceestimate method)": [[267, "mne.MixedSourceEstimate.surface"]], "time_as_index() (mne.mixedsourceestimate method)": [[267, "mne.MixedSourceEstimate.time_as_index"]], "times (mne.mixedsourceestimate property)": [[267, "mne.MixedSourceEstimate.times"]], "tmax (mne.mixedsourceestimate property)": [[267, "mne.MixedSourceEstimate.tmax"]], "tmin (mne.mixedsourceestimate property)": [[267, "mne.MixedSourceEstimate.tmin"]], "to_data_frame() (mne.mixedsourceestimate method)": [[267, "mne.MixedSourceEstimate.to_data_frame"]], "transform() (mne.mixedsourceestimate method)": [[267, "mne.MixedSourceEstimate.transform"]], "transform_data() (mne.mixedsourceestimate method)": [[267, "mne.MixedSourceEstimate.transform_data"]], "tstep (mne.mixedsourceestimate property)": [[267, "mne.MixedSourceEstimate.tstep"]], "volume() (mne.mixedsourceestimate method)": [[267, "mne.MixedSourceEstimate.volume"]], "mixedvectorsourceestimate (class in mne)": [[268, "mne.MixedVectorSourceEstimate"]], "__add__() (mne.mixedvectorsourceestimate method)": [[268, "mne.MixedVectorSourceEstimate.__add__"]], "__div__() (mne.mixedvectorsourceestimate method)": [[268, "mne.MixedVectorSourceEstimate.__div__"]], "__mul__() (mne.mixedvectorsourceestimate method)": [[268, "mne.MixedVectorSourceEstimate.__mul__"]], "__neg__() (mne.mixedvectorsourceestimate method)": [[268, "mne.MixedVectorSourceEstimate.__neg__"]], "__sub__() (mne.mixedvectorsourceestimate method)": [[268, "mne.MixedVectorSourceEstimate.__sub__"]], "apply_baseline() (mne.mixedvectorsourceestimate method)": [[268, "mne.MixedVectorSourceEstimate.apply_baseline"]], "bin() (mne.mixedvectorsourceestimate method)": [[268, "mne.MixedVectorSourceEstimate.bin"]], "copy() (mne.mixedvectorsourceestimate method)": [[268, "mne.MixedVectorSourceEstimate.copy"]], "crop() (mne.mixedvectorsourceestimate method)": [[268, "mne.MixedVectorSourceEstimate.crop"]], "data (mne.mixedvectorsourceestimate property)": [[268, "mne.MixedVectorSourceEstimate.data"]], "decimate() (mne.mixedvectorsourceestimate method)": [[268, "mne.MixedVectorSourceEstimate.decimate"]], "extract_label_time_course() (mne.mixedvectorsourceestimate method)": [[268, "mne.MixedVectorSourceEstimate.extract_label_time_course"]], "get_peak() (mne.mixedvectorsourceestimate method)": [[268, "mne.MixedVectorSourceEstimate.get_peak"]], "magnitude() (mne.mixedvectorsourceestimate method)": [[268, "mne.MixedVectorSourceEstimate.magnitude"]], "mean() (mne.mixedvectorsourceestimate method)": [[268, "mne.MixedVectorSourceEstimate.mean"]], "plot() (mne.mixedvectorsourceestimate method)": [[268, "mne.MixedVectorSourceEstimate.plot"]], "project() (mne.mixedvectorsourceestimate method)": [[268, "mne.MixedVectorSourceEstimate.project"]], "resample() (mne.mixedvectorsourceestimate method)": [[268, "mne.MixedVectorSourceEstimate.resample"]], "save() (mne.mixedvectorsourceestimate method)": [[268, "mne.MixedVectorSourceEstimate.save"]], "sfreq (mne.mixedvectorsourceestimate property)": [[268, "mne.MixedVectorSourceEstimate.sfreq"]], "shape (mne.mixedvectorsourceestimate property)": [[268, "mne.MixedVectorSourceEstimate.shape"]], "shift_time() (mne.mixedvectorsourceestimate method)": [[268, "mne.MixedVectorSourceEstimate.shift_time"]], "sqrt() (mne.mixedvectorsourceestimate method)": [[268, "mne.MixedVectorSourceEstimate.sqrt"]], "sum() (mne.mixedvectorsourceestimate method)": [[268, "mne.MixedVectorSourceEstimate.sum"]], "surface() (mne.mixedvectorsourceestimate method)": [[268, "mne.MixedVectorSourceEstimate.surface"]], "time_as_index() (mne.mixedvectorsourceestimate method)": [[268, "mne.MixedVectorSourceEstimate.time_as_index"]], "times (mne.mixedvectorsourceestimate property)": [[268, "mne.MixedVectorSourceEstimate.times"]], "tmax (mne.mixedvectorsourceestimate property)": [[268, "mne.MixedVectorSourceEstimate.tmax"]], "tmin (mne.mixedvectorsourceestimate property)": [[268, "mne.MixedVectorSourceEstimate.tmin"]], "to_data_frame() (mne.mixedvectorsourceestimate method)": [[268, "mne.MixedVectorSourceEstimate.to_data_frame"]], "transform() (mne.mixedvectorsourceestimate method)": [[268, "mne.MixedVectorSourceEstimate.transform"]], "transform_data() (mne.mixedvectorsourceestimate method)": [[268, "mne.MixedVectorSourceEstimate.transform_data"]], "tstep (mne.mixedvectorsourceestimate property)": [[268, "mne.MixedVectorSourceEstimate.tstep"]], "volume() (mne.mixedvectorsourceestimate method)": [[268, "mne.MixedVectorSourceEstimate.volume"]], "projection (class in mne)": [[269, "mne.Projection"]], "__contains__() (mne.projection method)": [[269, "mne.Projection.__contains__"]], "__getitem__() (mne.projection method)": [[269, "mne.Projection.__getitem__"]], "__iter__() (mne.projection method)": [[269, "mne.Projection.__iter__"]], "__len__() (mne.projection method)": [[269, "mne.Projection.__len__"]], "clear() (mne.projection method)": [[269, "mne.Projection.clear"]], "copy() (mne.projection method)": [[269, "mne.Projection.copy"]], "fromkeys() (mne.projection method)": [[269, "mne.Projection.fromkeys"]], "get() (mne.projection method)": [[269, "mne.Projection.get"]], "items() (mne.projection method)": [[269, "mne.Projection.items"]], "keys() (mne.projection method)": [[269, "mne.Projection.keys"]], "plot_topomap() (mne.projection method)": [[269, "mne.Projection.plot_topomap"]], "pop() (mne.projection method)": [[269, "mne.Projection.pop"]], "popitem() (mne.projection method)": [[269, "mne.Projection.popitem"]], "setdefault() (mne.projection method)": [[269, "mne.Projection.setdefault"]], "update() (mne.projection method)": [[269, "mne.Projection.update"]], "values() (mne.projection method)": [[269, "mne.Projection.values"]], "report (class in mne)": [[270, "mne.Report"]], "__len__() (mne.report method)": [[270, "mne.Report.__len__"]], "add_bem() (mne.report method)": [[270, "mne.Report.add_bem"]], "add_code() (mne.report method)": [[270, "mne.Report.add_code"]], "add_covariance() (mne.report method)": [[270, "mne.Report.add_covariance"]], "add_custom_css() (mne.report method)": [[270, "mne.Report.add_custom_css"]], "add_custom_js() (mne.report method)": [[270, "mne.Report.add_custom_js"]], "add_epochs() (mne.report method)": [[270, "mne.Report.add_epochs"]], "add_events() (mne.report method)": [[270, "mne.Report.add_events"]], "add_evokeds() (mne.report method)": [[270, "mne.Report.add_evokeds"]], "add_figure() (mne.report method)": [[270, "mne.Report.add_figure"]], "add_forward() (mne.report method)": [[270, "mne.Report.add_forward"]], "add_html() (mne.report method)": [[270, "mne.Report.add_html"]], "add_ica() (mne.report method)": [[270, "mne.Report.add_ica"]], "add_image() (mne.report method)": [[270, "mne.Report.add_image"]], "add_inverse_operator() (mne.report method)": [[270, "mne.Report.add_inverse_operator"]], "add_projs() (mne.report method)": [[270, "mne.Report.add_projs"]], "add_raw() (mne.report method)": [[270, "mne.Report.add_raw"]], "add_stc() (mne.report method)": [[270, "mne.Report.add_stc"]], "add_sys_info() (mne.report method)": [[270, "mne.Report.add_sys_info"]], "add_trans() (mne.report method)": [[270, "mne.Report.add_trans"]], "html (mne.report property)": [[270, "mne.Report.html"]], "parse_folder() (mne.report method)": [[270, "mne.Report.parse_folder"]], "remove() (mne.report method)": [[270, "mne.Report.remove"]], "save() (mne.report method)": [[270, "mne.Report.save"]], "tags (mne.report property)": [[270, "mne.Report.tags"]], "sourceestimate (class in mne)": [[271, "mne.SourceEstimate"]], "__add__() (mne.sourceestimate method)": [[271, "mne.SourceEstimate.__add__"]], "__div__() (mne.sourceestimate method)": [[271, "mne.SourceEstimate.__div__"]], "__mul__() (mne.sourceestimate method)": [[271, "mne.SourceEstimate.__mul__"]], "__neg__() (mne.sourceestimate method)": [[271, "mne.SourceEstimate.__neg__"]], "__sub__() (mne.sourceestimate method)": [[271, "mne.SourceEstimate.__sub__"]], "apply_baseline() (mne.sourceestimate method)": [[271, "mne.SourceEstimate.apply_baseline"]], "bin() (mne.sourceestimate method)": [[271, "mne.SourceEstimate.bin"]], "center_of_mass() (mne.sourceestimate method)": [[271, "mne.SourceEstimate.center_of_mass"]], "copy() (mne.sourceestimate method)": [[271, "mne.SourceEstimate.copy"]], "crop() (mne.sourceestimate method)": [[271, "mne.SourceEstimate.crop"]], "data (mne.sourceestimate property)": [[271, "mne.SourceEstimate.data"]], "decimate() (mne.sourceestimate method)": [[271, "mne.SourceEstimate.decimate"]], "estimate_snr() (mne.sourceestimate method)": [[271, "mne.SourceEstimate.estimate_snr"]], "expand() (mne.sourceestimate method)": [[271, "mne.SourceEstimate.expand"]], "extract_label_time_course() (mne.sourceestimate method)": [[271, "mne.SourceEstimate.extract_label_time_course"]], "get_peak() (mne.sourceestimate method)": [[271, "mne.SourceEstimate.get_peak"]], "in_label() (mne.sourceestimate method)": [[271, "mne.SourceEstimate.in_label"]], "lh_data (mne.sourceestimate property)": [[271, "mne.SourceEstimate.lh_data"]], "lh_vertno (mne.sourceestimate property)": [[271, "mne.SourceEstimate.lh_vertno"]], "mean() (mne.sourceestimate method)": [[271, "mne.SourceEstimate.mean"]], "plot() (mne.sourceestimate method)": [[271, "mne.SourceEstimate.plot"]], "resample() (mne.sourceestimate method)": [[271, "mne.SourceEstimate.resample"]], "rh_data (mne.sourceestimate property)": [[271, "mne.SourceEstimate.rh_data"]], "rh_vertno (mne.sourceestimate property)": [[271, "mne.SourceEstimate.rh_vertno"]], "save() (mne.sourceestimate method)": [[271, "mne.SourceEstimate.save"]], "sfreq (mne.sourceestimate property)": [[271, "mne.SourceEstimate.sfreq"]], "shape (mne.sourceestimate property)": [[271, "mne.SourceEstimate.shape"]], "shift_time() (mne.sourceestimate method)": [[271, "mne.SourceEstimate.shift_time"]], "sqrt() (mne.sourceestimate method)": [[271, "mne.SourceEstimate.sqrt"]], "sum() (mne.sourceestimate method)": [[271, "mne.SourceEstimate.sum"]], "time_as_index() (mne.sourceestimate method)": [[271, "mne.SourceEstimate.time_as_index"]], "times (mne.sourceestimate property)": [[271, "mne.SourceEstimate.times"]], "tmax (mne.sourceestimate property)": [[271, "mne.SourceEstimate.tmax"]], "tmin (mne.sourceestimate property)": [[271, "mne.SourceEstimate.tmin"]], "to_data_frame() (mne.sourceestimate method)": [[271, "mne.SourceEstimate.to_data_frame"]], "to_original_src() (mne.sourceestimate method)": [[271, "mne.SourceEstimate.to_original_src"]], "transform() (mne.sourceestimate method)": [[271, "mne.SourceEstimate.transform"]], "transform_data() (mne.sourceestimate method)": [[271, "mne.SourceEstimate.transform_data"]], "tstep (mne.sourceestimate property)": [[271, "mne.SourceEstimate.tstep"]], "sourcemorph (class in mne)": [[272, "mne.SourceMorph"]], "apply() (mne.sourcemorph method)": [[272, "mne.SourceMorph.apply"]], "compute_vol_morph_mat() (mne.sourcemorph method)": [[272, "mne.SourceMorph.compute_vol_morph_mat"]], "save() (mne.sourcemorph method)": [[272, "mne.SourceMorph.save"]], "sourcespaces (class in mne)": [[273, "mne.SourceSpaces"]], "__add__() (mne.sourcespaces method)": [[273, "mne.SourceSpaces.__add__"]], "__getitem__() (mne.sourcespaces method)": [[273, "mne.SourceSpaces.__getitem__"]], "copy() (mne.sourcespaces method)": [[273, "mne.SourceSpaces.copy"]], "export_volume() (mne.sourcespaces method)": [[273, "mne.SourceSpaces.export_volume"]], "plot() (mne.sourcespaces method)": [[273, "mne.SourceSpaces.plot"]], "save() (mne.sourcespaces method)": [[273, "mne.SourceSpaces.save"]], "vectorsourceestimate (class in mne)": [[274, "mne.VectorSourceEstimate"]], "__add__() (mne.vectorsourceestimate method)": [[274, "mne.VectorSourceEstimate.__add__"]], "__div__() (mne.vectorsourceestimate method)": [[274, "mne.VectorSourceEstimate.__div__"]], "__mul__() (mne.vectorsourceestimate method)": [[274, "mne.VectorSourceEstimate.__mul__"]], "__neg__() (mne.vectorsourceestimate method)": [[274, "mne.VectorSourceEstimate.__neg__"]], "__sub__() (mne.vectorsourceestimate method)": [[274, "mne.VectorSourceEstimate.__sub__"]], "apply_baseline() (mne.vectorsourceestimate method)": [[274, "mne.VectorSourceEstimate.apply_baseline"]], "bin() (mne.vectorsourceestimate method)": [[274, "mne.VectorSourceEstimate.bin"]], "copy() (mne.vectorsourceestimate method)": [[274, "mne.VectorSourceEstimate.copy"]], "crop() (mne.vectorsourceestimate method)": [[274, "mne.VectorSourceEstimate.crop"]], "data (mne.vectorsourceestimate property)": [[274, "mne.VectorSourceEstimate.data"]], "decimate() (mne.vectorsourceestimate method)": [[274, "mne.VectorSourceEstimate.decimate"]], "expand() (mne.vectorsourceestimate method)": [[274, "mne.VectorSourceEstimate.expand"]], "extract_label_time_course() (mne.vectorsourceestimate method)": [[274, "mne.VectorSourceEstimate.extract_label_time_course"]], "get_peak() (mne.vectorsourceestimate method)": [[274, "mne.VectorSourceEstimate.get_peak"]], "in_label() (mne.vectorsourceestimate method)": [[274, "mne.VectorSourceEstimate.in_label"]], "lh_data (mne.vectorsourceestimate property)": [[274, "mne.VectorSourceEstimate.lh_data"]], "lh_vertno (mne.vectorsourceestimate property)": [[274, "mne.VectorSourceEstimate.lh_vertno"]], "magnitude() (mne.vectorsourceestimate method)": [[274, "mne.VectorSourceEstimate.magnitude"]], "mean() (mne.vectorsourceestimate method)": [[274, "mne.VectorSourceEstimate.mean"]], "plot() (mne.vectorsourceestimate method)": [[274, "mne.VectorSourceEstimate.plot"]], "project() (mne.vectorsourceestimate method)": [[274, "mne.VectorSourceEstimate.project"]], "resample() (mne.vectorsourceestimate method)": [[274, "mne.VectorSourceEstimate.resample"]], "rh_data (mne.vectorsourceestimate property)": [[274, "mne.VectorSourceEstimate.rh_data"]], "rh_vertno (mne.vectorsourceestimate property)": [[274, "mne.VectorSourceEstimate.rh_vertno"]], "save() (mne.vectorsourceestimate method)": [[274, "mne.VectorSourceEstimate.save"]], "sfreq (mne.vectorsourceestimate property)": [[274, "mne.VectorSourceEstimate.sfreq"]], "shape (mne.vectorsourceestimate property)": [[274, "mne.VectorSourceEstimate.shape"]], "shift_time() (mne.vectorsourceestimate method)": [[274, "mne.VectorSourceEstimate.shift_time"]], "sqrt() (mne.vectorsourceestimate method)": [[274, "mne.VectorSourceEstimate.sqrt"]], "sum() (mne.vectorsourceestimate method)": [[274, "mne.VectorSourceEstimate.sum"]], "time_as_index() (mne.vectorsourceestimate method)": [[274, "mne.VectorSourceEstimate.time_as_index"]], "times (mne.vectorsourceestimate property)": [[274, "mne.VectorSourceEstimate.times"]], "tmax (mne.vectorsourceestimate property)": [[274, "mne.VectorSourceEstimate.tmax"]], "tmin (mne.vectorsourceestimate property)": [[274, "mne.VectorSourceEstimate.tmin"]], "to_data_frame() (mne.vectorsourceestimate method)": [[274, "mne.VectorSourceEstimate.to_data_frame"]], "to_original_src() (mne.vectorsourceestimate method)": [[274, "mne.VectorSourceEstimate.to_original_src"]], "transform() (mne.vectorsourceestimate method)": [[274, "mne.VectorSourceEstimate.transform"]], "transform_data() (mne.vectorsourceestimate method)": [[274, "mne.VectorSourceEstimate.transform_data"]], "tstep (mne.vectorsourceestimate property)": [[274, "mne.VectorSourceEstimate.tstep"]], "volsourceestimate (class in mne)": [[275, "mne.VolSourceEstimate"]], "__add__() (mne.volsourceestimate method)": [[275, "mne.VolSourceEstimate.__add__"]], "__div__() (mne.volsourceestimate method)": [[275, "mne.VolSourceEstimate.__div__"]], "__mul__() (mne.volsourceestimate method)": [[275, "mne.VolSourceEstimate.__mul__"]], "__neg__() (mne.volsourceestimate method)": [[275, "mne.VolSourceEstimate.__neg__"]], "__sub__() (mne.volsourceestimate method)": [[275, "mne.VolSourceEstimate.__sub__"]], "apply_baseline() (mne.volsourceestimate method)": [[275, "mne.VolSourceEstimate.apply_baseline"]], "as_volume() (mne.volsourceestimate method)": [[275, "mne.VolSourceEstimate.as_volume"]], "bin() (mne.volsourceestimate method)": [[275, "mne.VolSourceEstimate.bin"]], "copy() (mne.volsourceestimate method)": [[275, "mne.VolSourceEstimate.copy"]], "crop() (mne.volsourceestimate method)": [[275, "mne.VolSourceEstimate.crop"]], "data (mne.volsourceestimate property)": [[275, "mne.VolSourceEstimate.data"]], "decimate() (mne.volsourceestimate method)": [[275, "mne.VolSourceEstimate.decimate"]], "extract_label_time_course() (mne.volsourceestimate method)": [[275, "mne.VolSourceEstimate.extract_label_time_course"]], "get_peak() (mne.volsourceestimate method)": [[275, "mne.VolSourceEstimate.get_peak"]], "in_label() (mne.volsourceestimate method)": [[275, "mne.VolSourceEstimate.in_label"]], "mean() (mne.volsourceestimate method)": [[275, "mne.VolSourceEstimate.mean"]], "plot() (mne.volsourceestimate method)": [[275, "mne.VolSourceEstimate.plot"]], "plot_3d() (mne.volsourceestimate method)": [[275, "mne.VolSourceEstimate.plot_3d"]], "resample() (mne.volsourceestimate method)": [[275, "mne.VolSourceEstimate.resample"]], "save() (mne.volsourceestimate method)": [[275, "mne.VolSourceEstimate.save"]], "save_as_volume() (mne.volsourceestimate method)": [[275, "mne.VolSourceEstimate.save_as_volume"]], "sfreq (mne.volsourceestimate property)": [[275, "mne.VolSourceEstimate.sfreq"]], "shape (mne.volsourceestimate property)": [[275, "mne.VolSourceEstimate.shape"]], "shift_time() (mne.volsourceestimate method)": [[275, "mne.VolSourceEstimate.shift_time"]], "sqrt() (mne.volsourceestimate method)": [[275, "mne.VolSourceEstimate.sqrt"]], "sum() (mne.volsourceestimate method)": [[275, "mne.VolSourceEstimate.sum"]], "time_as_index() (mne.volsourceestimate method)": [[275, "mne.VolSourceEstimate.time_as_index"]], "times (mne.volsourceestimate property)": [[275, "mne.VolSourceEstimate.times"]], "tmax (mne.volsourceestimate property)": [[275, "mne.VolSourceEstimate.tmax"]], "tmin (mne.volsourceestimate property)": [[275, "mne.VolSourceEstimate.tmin"]], "to_data_frame() (mne.volsourceestimate method)": [[275, "mne.VolSourceEstimate.to_data_frame"]], "transform() (mne.volsourceestimate method)": [[275, "mne.VolSourceEstimate.transform"]], "transform_data() (mne.volsourceestimate method)": [[275, "mne.VolSourceEstimate.transform_data"]], "tstep (mne.volsourceestimate property)": [[275, "mne.VolSourceEstimate.tstep"]], "volvectorsourceestimate (class in mne)": [[276, "mne.VolVectorSourceEstimate"]], "__add__() (mne.volvectorsourceestimate method)": [[276, "mne.VolVectorSourceEstimate.__add__"]], "__div__() (mne.volvectorsourceestimate method)": [[276, "mne.VolVectorSourceEstimate.__div__"]], "__mul__() (mne.volvectorsourceestimate method)": [[276, "mne.VolVectorSourceEstimate.__mul__"]], "__neg__() (mne.volvectorsourceestimate method)": [[276, "mne.VolVectorSourceEstimate.__neg__"]], "__sub__() (mne.volvectorsourceestimate method)": [[276, "mne.VolVectorSourceEstimate.__sub__"]], "apply_baseline() (mne.volvectorsourceestimate method)": [[276, "mne.VolVectorSourceEstimate.apply_baseline"]], "as_volume() (mne.volvectorsourceestimate method)": [[276, "mne.VolVectorSourceEstimate.as_volume"]], "bin() (mne.volvectorsourceestimate method)": [[276, "mne.VolVectorSourceEstimate.bin"]], "copy() (mne.volvectorsourceestimate method)": [[276, "mne.VolVectorSourceEstimate.copy"]], "crop() (mne.volvectorsourceestimate method)": [[276, "mne.VolVectorSourceEstimate.crop"]], "data (mne.volvectorsourceestimate property)": [[276, "mne.VolVectorSourceEstimate.data"]], "decimate() (mne.volvectorsourceestimate method)": [[276, "mne.VolVectorSourceEstimate.decimate"]], "extract_label_time_course() (mne.volvectorsourceestimate method)": [[276, "mne.VolVectorSourceEstimate.extract_label_time_course"]], "get_peak() (mne.volvectorsourceestimate method)": [[276, "mne.VolVectorSourceEstimate.get_peak"]], "in_label() (mne.volvectorsourceestimate method)": [[276, "mne.VolVectorSourceEstimate.in_label"]], "magnitude() (mne.volvectorsourceestimate method)": [[276, "mne.VolVectorSourceEstimate.magnitude"]], "mean() (mne.volvectorsourceestimate method)": [[276, "mne.VolVectorSourceEstimate.mean"]], "plot() (mne.volvectorsourceestimate method)": [[276, "mne.VolVectorSourceEstimate.plot"]], "plot_3d() (mne.volvectorsourceestimate method)": [[276, "mne.VolVectorSourceEstimate.plot_3d"]], "project() (mne.volvectorsourceestimate method)": [[276, "mne.VolVectorSourceEstimate.project"]], "resample() (mne.volvectorsourceestimate method)": [[276, "mne.VolVectorSourceEstimate.resample"]], "save() (mne.volvectorsourceestimate method)": [[276, "mne.VolVectorSourceEstimate.save"]], "save_as_volume() (mne.volvectorsourceestimate method)": [[276, "mne.VolVectorSourceEstimate.save_as_volume"]], "sfreq (mne.volvectorsourceestimate property)": [[276, "mne.VolVectorSourceEstimate.sfreq"]], "shape (mne.volvectorsourceestimate property)": [[276, "mne.VolVectorSourceEstimate.shape"]], "shift_time() (mne.volvectorsourceestimate method)": [[276, "mne.VolVectorSourceEstimate.shift_time"]], "sqrt() (mne.volvectorsourceestimate method)": [[276, "mne.VolVectorSourceEstimate.sqrt"]], "sum() (mne.volvectorsourceestimate method)": [[276, "mne.VolVectorSourceEstimate.sum"]], "time_as_index() (mne.volvectorsourceestimate method)": [[276, "mne.VolVectorSourceEstimate.time_as_index"]], "times (mne.volvectorsourceestimate property)": [[276, "mne.VolVectorSourceEstimate.times"]], "tmax (mne.volvectorsourceestimate property)": [[276, "mne.VolVectorSourceEstimate.tmax"]], "tmin (mne.volvectorsourceestimate property)": [[276, "mne.VolVectorSourceEstimate.tmin"]], "to_data_frame() (mne.volvectorsourceestimate method)": [[276, "mne.VolVectorSourceEstimate.to_data_frame"]], "transform() (mne.volvectorsourceestimate method)": [[276, "mne.VolVectorSourceEstimate.transform"]], "transform_data() (mne.volvectorsourceestimate method)": [[276, "mne.VolVectorSourceEstimate.transform_data"]], "tstep (mne.volvectorsourceestimate property)": [[276, "mne.VolVectorSourceEstimate.tstep"]], "add_reference_channels() (in module mne)": [[277, "mne.add_reference_channels"]], "add_source_space_distances() (in module mne)": [[278, "mne.add_source_space_distances"]], "annotations_from_events() (in module mne)": [[279, "mne.annotations_from_events"]], "apply_forward() (in module mne)": [[280, "mne.apply_forward"]], "apply_forward_raw() (in module mne)": [[281, "mne.apply_forward_raw"]], "average_forward_solutions() (in module mne)": [[282, "mne.average_forward_solutions"]], "rescale() (in module mne.baseline)": [[283, "mne.baseline.rescale"]], "beamformer (class in mne.beamformer)": [[284, "mne.beamformer.Beamformer"]], "__contains__() (mne.beamformer.beamformer method)": [[284, "mne.beamformer.Beamformer.__contains__"]], "__getitem__() (mne.beamformer.beamformer method)": [[284, "mne.beamformer.Beamformer.__getitem__"]], "__iter__() (mne.beamformer.beamformer method)": [[284, "mne.beamformer.Beamformer.__iter__"]], "__len__() (mne.beamformer.beamformer method)": [[284, "mne.beamformer.Beamformer.__len__"]], "clear() (mne.beamformer.beamformer method)": [[284, "mne.beamformer.Beamformer.clear"]], "copy() (mne.beamformer.beamformer method)": [[284, "mne.beamformer.Beamformer.copy"]], "fromkeys() (mne.beamformer.beamformer method)": [[284, "mne.beamformer.Beamformer.fromkeys"]], "get() (mne.beamformer.beamformer method)": [[284, "mne.beamformer.Beamformer.get"]], "items() (mne.beamformer.beamformer method)": [[284, "mne.beamformer.Beamformer.items"]], "keys() (mne.beamformer.beamformer method)": [[284, "mne.beamformer.Beamformer.keys"]], "pop() (mne.beamformer.beamformer method)": [[284, "mne.beamformer.Beamformer.pop"]], "popitem() (mne.beamformer.beamformer method)": [[284, "mne.beamformer.Beamformer.popitem"]], "save() (mne.beamformer.beamformer method)": [[284, "mne.beamformer.Beamformer.save"]], "setdefault() (mne.beamformer.beamformer method)": [[284, "mne.beamformer.Beamformer.setdefault"]], "update() (mne.beamformer.beamformer method)": [[284, "mne.beamformer.Beamformer.update"]], "values() (mne.beamformer.beamformer method)": [[284, "mne.beamformer.Beamformer.values"]], "apply_dics() (in module mne.beamformer)": [[285, "mne.beamformer.apply_dics"]], "apply_dics_csd() (in module mne.beamformer)": [[286, "mne.beamformer.apply_dics_csd"]], "apply_dics_epochs() (in module mne.beamformer)": [[287, "mne.beamformer.apply_dics_epochs"]], "apply_lcmv() (in module mne.beamformer)": [[288, "mne.beamformer.apply_lcmv"]], "apply_lcmv_cov() (in module mne.beamformer)": [[289, "mne.beamformer.apply_lcmv_cov"]], "apply_lcmv_epochs() (in module mne.beamformer)": [[290, "mne.beamformer.apply_lcmv_epochs"]], "apply_lcmv_raw() (in module mne.beamformer)": [[291, "mne.beamformer.apply_lcmv_raw"]], "make_dics() (in module mne.beamformer)": [[292, "mne.beamformer.make_dics"]], "make_lcmv() (in module mne.beamformer)": [[293, "mne.beamformer.make_lcmv"]], "make_lcmv_resolution_matrix() (in module mne.beamformer)": [[294, "mne.beamformer.make_lcmv_resolution_matrix"]], "rap_music() (in module mne.beamformer)": [[295, "mne.beamformer.rap_music"]], "read_beamformer() (in module mne.beamformer)": [[296, "mne.beamformer.read_beamformer"]], "conductormodel (class in mne.bem)": [[297, "mne.bem.ConductorModel"]], "__contains__() (mne.bem.conductormodel method)": [[297, "mne.bem.ConductorModel.__contains__"]], "__getitem__() (mne.bem.conductormodel method)": [[297, "mne.bem.ConductorModel.__getitem__"]], "__iter__() (mne.bem.conductormodel method)": [[297, "mne.bem.ConductorModel.__iter__"]], "__len__() (mne.bem.conductormodel method)": [[297, "mne.bem.ConductorModel.__len__"]], "clear() (mne.bem.conductormodel method)": [[297, "mne.bem.ConductorModel.clear"]], "copy() (mne.bem.conductormodel method)": [[297, "mne.bem.ConductorModel.copy"]], "fromkeys() (mne.bem.conductormodel method)": [[297, "mne.bem.ConductorModel.fromkeys"]], "get() (mne.bem.conductormodel method)": [[297, "mne.bem.ConductorModel.get"]], "items() (mne.bem.conductormodel method)": [[297, "mne.bem.ConductorModel.items"]], "keys() (mne.bem.conductormodel method)": [[297, "mne.bem.ConductorModel.keys"]], "pop() (mne.bem.conductormodel method)": [[297, "mne.bem.ConductorModel.pop"]], "popitem() (mne.bem.conductormodel method)": [[297, "mne.bem.ConductorModel.popitem"]], "radius (mne.bem.conductormodel property)": [[297, "mne.bem.ConductorModel.radius"]], "setdefault() (mne.bem.conductormodel method)": [[297, "mne.bem.ConductorModel.setdefault"]], "update() (mne.bem.conductormodel method)": [[297, "mne.bem.ConductorModel.update"]], "values() (mne.bem.conductormodel method)": [[297, "mne.bem.ConductorModel.values"]], "convert_flash_mris() (in module mne.bem)": [[298, "mne.bem.convert_flash_mris"]], "distance_to_bem() (in module mne.bem)": [[299, "mne.bem.distance_to_bem"]], "fit_sphere_to_headshape() (in module mne.bem)": [[300, "mne.bem.fit_sphere_to_headshape"]], "get_fitting_dig() (in module mne.bem)": [[301, "mne.bem.get_fitting_dig"]], "make_flash_bem() (in module mne.bem)": [[302, "mne.bem.make_flash_bem"]], "make_scalp_surfaces() (in module mne.bem)": [[303, "mne.bem.make_scalp_surfaces"]], "make_watershed_bem() (in module mne.bem)": [[304, "mne.bem.make_watershed_bem"]], "channel_indices_by_type() (in module mne)": [[305, "mne.channel_indices_by_type"]], "channel_type() (in module mne)": [[306, "mne.channel_type"]], "digmontage (class in mne.channels)": [[307, "mne.channels.DigMontage"]], "__add__() (mne.channels.digmontage method)": [[307, "mne.channels.DigMontage.__add__"]], "add_estimated_fiducials() (mne.channels.digmontage method)": [[307, "mne.channels.DigMontage.add_estimated_fiducials"]], "add_mni_fiducials() (mne.channels.digmontage method)": [[307, "mne.channels.DigMontage.add_mni_fiducials"]], "apply_trans() (mne.channels.digmontage method)": [[307, "mne.channels.DigMontage.apply_trans"]], "copy() (mne.channels.digmontage method)": [[307, "mne.channels.DigMontage.copy"]], "get_positions() (mne.channels.digmontage method)": [[307, "mne.channels.DigMontage.get_positions"]], "plot() (mne.channels.digmontage method)": [[307, "mne.channels.DigMontage.plot"]], "remove_fiducials() (mne.channels.digmontage method)": [[307, "mne.channels.DigMontage.remove_fiducials"]], "rename_channels() (mne.channels.digmontage method)": [[307, "mne.channels.DigMontage.rename_channels"]], "save() (mne.channels.digmontage method)": [[307, "mne.channels.DigMontage.save"]], "layout (class in mne.channels)": [[308, "mne.channels.Layout"]], "plot() (mne.channels.layout method)": [[308, "mne.channels.Layout.plot"]], "save() (mne.channels.layout method)": [[308, "mne.channels.Layout.save"]], "combine_channels() (in module mne.channels)": [[309, "mne.channels.combine_channels"]], "compute_dev_head_t() (in module mne.channels)": [[310, "mne.channels.compute_dev_head_t"]], "compute_native_head_t() (in module mne.channels)": [[311, "mne.channels.compute_native_head_t"]], "equalize_channels() (in module mne.channels)": [[312, "mne.channels.equalize_channels"]], "find_ch_adjacency() (in module mne.channels)": [[313, "mne.channels.find_ch_adjacency"]], "find_layout() (in module mne.channels)": [[314, "mne.channels.find_layout"]], "fix_mag_coil_types() (in module mne.channels)": [[315, "mne.channels.fix_mag_coil_types"]], "generate_2d_layout() (in module mne.channels)": [[316, "mne.channels.generate_2d_layout"]], "get_builtin_ch_adjacencies() (in module mne.channels)": [[317, "mne.channels.get_builtin_ch_adjacencies"]], "get_builtin_montages() (in module mne.channels)": [[318, "mne.channels.get_builtin_montages"]], "make_1020_channel_selections() (in module mne.channels)": [[319, "mne.channels.make_1020_channel_selections"]], "make_dig_montage() (in module mne.channels)": [[320, "mne.channels.make_dig_montage"]], "make_eeg_layout() (in module mne.channels)": [[321, "mne.channels.make_eeg_layout"]], "make_grid_layout() (in module mne.channels)": [[322, "mne.channels.make_grid_layout"]], "make_standard_montage() (in module mne.channels)": [[323, "mne.channels.make_standard_montage"]], "read_ch_adjacency() (in module mne.channels)": [[324, "mne.channels.read_ch_adjacency"]], "read_custom_montage() (in module mne.channels)": [[325, "mne.channels.read_custom_montage"]], "read_dig_captrak() (in module mne.channels)": [[326, "mne.channels.read_dig_captrak"]], "read_dig_dat() (in module mne.channels)": [[327, "mne.channels.read_dig_dat"]], "read_dig_egi() (in module mne.channels)": [[328, "mne.channels.read_dig_egi"]], "read_dig_fif() (in module mne.channels)": [[329, "mne.channels.read_dig_fif"]], "read_dig_hpts() (in module mne.channels)": [[330, "mne.channels.read_dig_hpts"]], "read_dig_localite() (in module mne.channels)": [[331, "mne.channels.read_dig_localite"]], "read_dig_polhemus_isotrak() (in module mne.channels)": [[332, "mne.channels.read_dig_polhemus_isotrak"]], "read_layout() (in module mne.channels)": [[333, "mne.channels.read_layout"]], "read_polhemus_fastscan() (in module mne.channels)": [[334, "mne.channels.read_polhemus_fastscan"]], "rename_channels() (in module mne.channels)": [[335, "mne.channels.rename_channels"]], "compute_chpi_amplitudes() (in module mne.chpi)": [[336, "mne.chpi.compute_chpi_amplitudes"]], "compute_chpi_locs() (in module mne.chpi)": [[337, "mne.chpi.compute_chpi_locs"]], "compute_chpi_snr() (in module mne.chpi)": [[338, "mne.chpi.compute_chpi_snr"]], "compute_head_pos() (in module mne.chpi)": [[339, "mne.chpi.compute_head_pos"]], "extract_chpi_locs_ctf() (in module mne.chpi)": [[340, "mne.chpi.extract_chpi_locs_ctf"]], "extract_chpi_locs_kit() (in module mne.chpi)": [[341, "mne.chpi.extract_chpi_locs_kit"]], "filter_chpi() (in module mne.chpi)": [[342, "mne.chpi.filter_chpi"]], "get_active_chpi() (in module mne.chpi)": [[343, "mne.chpi.get_active_chpi"]], "get_chpi_info() (in module mne.chpi)": [[344, "mne.chpi.get_chpi_info"]], "head_pos_to_trans_rot_t() (in module mne.chpi)": [[345, "mne.chpi.head_pos_to_trans_rot_t"]], "read_head_pos() (in module mne.chpi)": [[346, "mne.chpi.read_head_pos"]], "write_head_pos() (in module mne.chpi)": [[347, "mne.chpi.write_head_pos"]], "combine_evoked() (in module mne)": [[348, "mne.combine_evoked"]], "compute_covariance() (in module mne)": [[349, "mne.compute_covariance"]], "compute_proj_epochs() (in module mne)": [[350, "mne.compute_proj_epochs"]], "compute_proj_evoked() (in module mne)": [[351, "mne.compute_proj_evoked"]], "compute_proj_raw() (in module mne)": [[352, "mne.compute_proj_raw"]], "compute_rank() (in module mne)": [[353, "mne.compute_rank"]], "compute_raw_covariance() (in module mne)": [[354, "mne.compute_raw_covariance"]], "compute_source_morph() (in module mne)": [[355, "mne.compute_source_morph"]], "concatenate_epochs() (in module mne)": [[356, "mne.concatenate_epochs"]], "concatenate_events() (in module mne)": [[357, "mne.concatenate_events"]], "concatenate_raws() (in module mne)": [[358, "mne.concatenate_raws"]], "convert_forward_solution() (in module mne)": [[359, "mne.convert_forward_solution"]], "coregistration (class in mne.coreg)": [[360, "mne.coreg.Coregistration"]], "compute_dig_mri_distances() (mne.coreg.coregistration method)": [[360, "mne.coreg.Coregistration.compute_dig_mri_distances"]], "fit_fiducials() (mne.coreg.coregistration method)": [[360, "mne.coreg.Coregistration.fit_fiducials"]], "fit_icp() (mne.coreg.coregistration method)": [[360, "mne.coreg.Coregistration.fit_icp"]], "omit_head_shape_points() (mne.coreg.coregistration method)": [[360, "mne.coreg.Coregistration.omit_head_shape_points"]], "reset() (mne.coreg.coregistration method)": [[360, "mne.coreg.Coregistration.reset"]], "scale (mne.coreg.coregistration property)": [[360, "mne.coreg.Coregistration.scale"]], "set_fid_match() (mne.coreg.coregistration method)": [[360, "mne.coreg.Coregistration.set_fid_match"]], "set_grow_hair() (mne.coreg.coregistration method)": [[360, "mne.coreg.Coregistration.set_grow_hair"]], "set_rotation() (mne.coreg.coregistration method)": [[360, "mne.coreg.Coregistration.set_rotation"]], "set_scale() (mne.coreg.coregistration method)": [[360, "mne.coreg.Coregistration.set_scale"]], "set_scale_mode() (mne.coreg.coregistration method)": [[360, "mne.coreg.Coregistration.set_scale_mode"]], "set_translation() (mne.coreg.coregistration method)": [[360, "mne.coreg.Coregistration.set_translation"]], "trans (mne.coreg.coregistration property)": [[360, "mne.coreg.Coregistration.trans"]], "estimate_head_mri_t() (in module mne.coreg)": [[361, "mne.coreg.estimate_head_mri_t"]], "get_mni_fiducials() (in module mne.coreg)": [[362, "mne.coreg.get_mni_fiducials"]], "compute_whitener() (in module mne.cov)": [[363, "mne.cov.compute_whitener"]], "prepare_noise_cov() (in module mne.cov)": [[364, "mne.cov.prepare_noise_cov"]], "regularize() (in module mne.cov)": [[365, "mne.cov.regularize"]], "create_default_subject() (in module mne)": [[366, "mne.create_default_subject"]], "create_info() (in module mne)": [[367, "mne.create_info"]], "get_cuda_memory() (in module mne.cuda)": [[368, "mne.cuda.get_cuda_memory"]], "init_cuda() (in module mne.cuda)": [[369, "mne.cuda.init_cuda"]], "set_cuda_device() (in module mne.cuda)": [[370, "mne.cuda.set_cuda_device"]], "data_path() (in module mne.datasets.brainstorm.bst_auditory)": [[371, "mne.datasets.brainstorm.bst_auditory.data_path"]], "data_path() (in module mne.datasets.brainstorm.bst_raw)": [[372, "mne.datasets.brainstorm.bst_raw.data_path"]], "data_path() (in module mne.datasets.brainstorm.bst_resting)": [[373, "mne.datasets.brainstorm.bst_resting.data_path"]], "load_data() (in module mne.datasets.eegbci)": [[374, "mne.datasets.eegbci.load_data"]], "standardize() (in module mne.datasets.eegbci)": [[375, "mne.datasets.eegbci.standardize"]], "data_path() (in module mne.datasets.epilepsy_ecog)": [[376, "mne.datasets.epilepsy_ecog.data_path"]], "data_path() (in module mne.datasets.erp_core)": [[377, "mne.datasets.erp_core.data_path"]], "fetch_aparc_sub_parcellation() (in module mne.datasets)": [[378, "mne.datasets.fetch_aparc_sub_parcellation"]], "fetch_dataset() (in module mne.datasets)": [[379, "mne.datasets.fetch_dataset"]], "fetch_fsaverage() (in module mne.datasets)": [[380, "mne.datasets.fetch_fsaverage"]], "fetch_hcp_mmp_parcellation() (in module mne.datasets)": [[381, "mne.datasets.fetch_hcp_mmp_parcellation"]], "fetch_infant_template() (in module mne.datasets)": [[382, "mne.datasets.fetch_infant_template"]], "fetch_phantom() (in module mne.datasets)": [[383, "mne.datasets.fetch_phantom"]], "data_path() (in module mne.datasets.fnirs_motor)": [[384, "mne.datasets.fnirs_motor.data_path"]], "has_dataset() (in module mne.datasets)": [[385, "mne.datasets.has_dataset"]], "data_path() (in module mne.datasets.hf_sef)": [[386, "mne.datasets.hf_sef.data_path"]], "data_path() (in module mne.datasets.kiloword)": [[387, "mne.datasets.kiloword.data_path"]], "load_data() (in module mne.datasets.limo)": [[388, "mne.datasets.limo.load_data"]], "data_path() (in module mne.datasets.misc)": [[389, "mne.datasets.misc.data_path"]], "data_path() (in module mne.datasets.mtrf)": [[390, "mne.datasets.mtrf.data_path"]], "data_path() (in module mne.datasets.multimodal)": [[391, "mne.datasets.multimodal.data_path"]], "data_path() (in module mne.datasets.opm)": [[392, "mne.datasets.opm.data_path"]], "data_path() (in module mne.datasets.phantom_4dbti)": [[393, "mne.datasets.phantom_4dbti.data_path"]], "data_path() (in module mne.datasets.refmeg_noise)": [[394, "mne.datasets.refmeg_noise.data_path"]], "data_path() (in module mne.datasets.sample)": [[395, "mne.datasets.sample.data_path"]], "fetch_data() (in module mne.datasets.sleep_physionet.age)": [[396, "mne.datasets.sleep_physionet.age.fetch_data"]], "fetch_data() (in module mne.datasets.sleep_physionet.temazepam)": [[397, "mne.datasets.sleep_physionet.temazepam.fetch_data"]], "data_path() (in module mne.datasets.somato)": [[398, "mne.datasets.somato.data_path"]], "data_path() (in module mne.datasets.spm_face)": [[399, "mne.datasets.spm_face.data_path"]], "data_path() (in module mne.datasets.ssvep)": [[400, "mne.datasets.ssvep.data_path"]], "data_path() (in module mne.datasets.visual_92_categories)": [[401, "mne.datasets.visual_92_categories.data_path"]], "decimate_surface() (in module mne)": [[402, "mne.decimate_surface"]], "csp (class in mne.decoding)": [[403, "mne.decoding.CSP"]], "fit() (mne.decoding.csp method)": [[403, "mne.decoding.CSP.fit"]], "fit_transform() (mne.decoding.csp method)": [[403, "mne.decoding.CSP.fit_transform"]], "get_params() (mne.decoding.csp method)": [[403, "mne.decoding.CSP.get_params"]], "plot_filters() (mne.decoding.csp method)": [[403, "mne.decoding.CSP.plot_filters"]], "plot_patterns() (mne.decoding.csp method)": [[403, "mne.decoding.CSP.plot_patterns"]], "set_params() (mne.decoding.csp method)": [[403, "mne.decoding.CSP.set_params"]], "transform() (mne.decoding.csp method)": [[403, "mne.decoding.CSP.transform"]], "ems (class in mne.decoding)": [[404, "mne.decoding.EMS"]], "fit() (mne.decoding.ems method)": [[404, "mne.decoding.EMS.fit"]], "fit_transform() (mne.decoding.ems method)": [[404, "mne.decoding.EMS.fit_transform"]], "get_params() (mne.decoding.ems method)": [[404, "mne.decoding.EMS.get_params"]], "set_params() (mne.decoding.ems method)": [[404, "mne.decoding.EMS.set_params"]], "transform() (mne.decoding.ems method)": [[404, "mne.decoding.EMS.transform"]], "filterestimator (class in mne.decoding)": [[405, "mne.decoding.FilterEstimator"]], "fit() (mne.decoding.filterestimator method)": [[405, "mne.decoding.FilterEstimator.fit"]], "fit_transform() (mne.decoding.filterestimator method)": [[405, "mne.decoding.FilterEstimator.fit_transform"]], "transform() (mne.decoding.filterestimator method)": [[405, "mne.decoding.FilterEstimator.transform"]], "generalizingestimator (class in mne.decoding)": [[406, "mne.decoding.GeneralizingEstimator"]], "decision_function() (mne.decoding.generalizingestimator method)": [[406, "mne.decoding.GeneralizingEstimator.decision_function"]], "fit() (mne.decoding.generalizingestimator method)": [[406, "mne.decoding.GeneralizingEstimator.fit"]], "fit_transform() (mne.decoding.generalizingestimator method)": [[406, "mne.decoding.GeneralizingEstimator.fit_transform"]], "get_params() (mne.decoding.generalizingestimator method)": [[406, "mne.decoding.GeneralizingEstimator.get_params"]], "predict() (mne.decoding.generalizingestimator method)": [[406, "mne.decoding.GeneralizingEstimator.predict"]], "predict_proba() (mne.decoding.generalizingestimator method)": [[406, "mne.decoding.GeneralizingEstimator.predict_proba"]], "score() (mne.decoding.generalizingestimator method)": [[406, "mne.decoding.GeneralizingEstimator.score"]], "set_params() (mne.decoding.generalizingestimator method)": [[406, "mne.decoding.GeneralizingEstimator.set_params"]], "transform() (mne.decoding.generalizingestimator method)": [[406, "mne.decoding.GeneralizingEstimator.transform"]], "linearmodel (class in mne.decoding)": [[407, "mne.decoding.LinearModel"]], "decision_function() (mne.decoding.linearmodel method)": [[407, "mne.decoding.LinearModel.decision_function"]], "fit() (mne.decoding.linearmodel method)": [[407, "mne.decoding.LinearModel.fit"]], "fit_transform() (mne.decoding.linearmodel method)": [[407, "mne.decoding.LinearModel.fit_transform"]], "get_params() (mne.decoding.linearmodel method)": [[407, "mne.decoding.LinearModel.get_params"]], "predict() (mne.decoding.linearmodel method)": [[407, "mne.decoding.LinearModel.predict"]], "predict_proba() (mne.decoding.linearmodel method)": [[407, "mne.decoding.LinearModel.predict_proba"]], "score() (mne.decoding.linearmodel method)": [[407, "mne.decoding.LinearModel.score"]], "set_params() (mne.decoding.linearmodel method)": [[407, "mne.decoding.LinearModel.set_params"]], "transform() (mne.decoding.linearmodel method)": [[407, "mne.decoding.LinearModel.transform"]], "psdestimator (class in mne.decoding)": [[408, "mne.decoding.PSDEstimator"]], "fit() (mne.decoding.psdestimator method)": [[408, "mne.decoding.PSDEstimator.fit"]], "fit_transform() (mne.decoding.psdestimator method)": [[408, "mne.decoding.PSDEstimator.fit_transform"]], "transform() (mne.decoding.psdestimator method)": [[408, "mne.decoding.PSDEstimator.transform"]], "receptivefield (class in mne.decoding)": [[409, "mne.decoding.ReceptiveField"]], "fit() (mne.decoding.receptivefield method)": [[409, "mne.decoding.ReceptiveField.fit"]], "get_params() (mne.decoding.receptivefield method)": [[409, "mne.decoding.ReceptiveField.get_params"]], "predict() (mne.decoding.receptivefield method)": [[409, "mne.decoding.ReceptiveField.predict"]], "score() (mne.decoding.receptivefield method)": [[409, "mne.decoding.ReceptiveField.score"]], "set_params() (mne.decoding.receptivefield method)": [[409, "mne.decoding.ReceptiveField.set_params"]], "spoc (class in mne.decoding)": [[410, "mne.decoding.SPoC"]], "fit() (mne.decoding.spoc method)": [[410, "mne.decoding.SPoC.fit"]], "fit_transform() (mne.decoding.spoc method)": [[410, "mne.decoding.SPoC.fit_transform"]], "get_params() (mne.decoding.spoc method)": [[410, "mne.decoding.SPoC.get_params"]], "plot_filters() (mne.decoding.spoc method)": [[410, "mne.decoding.SPoC.plot_filters"]], "plot_patterns() (mne.decoding.spoc method)": [[410, "mne.decoding.SPoC.plot_patterns"]], "set_params() (mne.decoding.spoc method)": [[410, "mne.decoding.SPoC.set_params"]], "transform() (mne.decoding.spoc method)": [[410, "mne.decoding.SPoC.transform"]], "ssd (class in mne.decoding)": [[411, "mne.decoding.SSD"]], "apply() (mne.decoding.ssd method)": [[411, "mne.decoding.SSD.apply"]], "fit() (mne.decoding.ssd method)": [[411, "mne.decoding.SSD.fit"]], "fit_transform() (mne.decoding.ssd method)": [[411, "mne.decoding.SSD.fit_transform"]], "get_params() (mne.decoding.ssd method)": [[411, "mne.decoding.SSD.get_params"]], "get_spectral_ratio() (mne.decoding.ssd method)": [[411, "mne.decoding.SSD.get_spectral_ratio"]], "inverse_transform() (mne.decoding.ssd method)": [[411, "mne.decoding.SSD.inverse_transform"]], "set_params() (mne.decoding.ssd method)": [[411, "mne.decoding.SSD.set_params"]], "transform() (mne.decoding.ssd method)": [[411, "mne.decoding.SSD.transform"]], "scaler (class in mne.decoding)": [[412, "mne.decoding.Scaler"]], "fit() (mne.decoding.scaler method)": [[412, "mne.decoding.Scaler.fit"]], "fit_transform() (mne.decoding.scaler method)": [[412, "mne.decoding.Scaler.fit_transform"]], "get_params() (mne.decoding.scaler method)": [[412, "mne.decoding.Scaler.get_params"]], "inverse_transform() (mne.decoding.scaler method)": [[412, "mne.decoding.Scaler.inverse_transform"]], "set_params() (mne.decoding.scaler method)": [[412, "mne.decoding.Scaler.set_params"]], "transform() (mne.decoding.scaler method)": [[412, "mne.decoding.Scaler.transform"]], "slidingestimator (class in mne.decoding)": [[413, "mne.decoding.SlidingEstimator"]], "decision_function() (mne.decoding.slidingestimator method)": [[413, "mne.decoding.SlidingEstimator.decision_function"]], "fit() (mne.decoding.slidingestimator method)": [[413, "mne.decoding.SlidingEstimator.fit"]], "fit_transform() (mne.decoding.slidingestimator method)": [[413, "mne.decoding.SlidingEstimator.fit_transform"]], "get_params() (mne.decoding.slidingestimator method)": [[413, "mne.decoding.SlidingEstimator.get_params"]], "predict() (mne.decoding.slidingestimator method)": [[413, "mne.decoding.SlidingEstimator.predict"]], "predict_proba() (mne.decoding.slidingestimator method)": [[413, "mne.decoding.SlidingEstimator.predict_proba"]], "score() (mne.decoding.slidingestimator method)": [[413, "mne.decoding.SlidingEstimator.score"]], "set_params() (mne.decoding.slidingestimator method)": [[413, "mne.decoding.SlidingEstimator.set_params"]], "transform() (mne.decoding.slidingestimator method)": [[413, "mne.decoding.SlidingEstimator.transform"]], "temporalfilter (class in mne.decoding)": [[414, "mne.decoding.TemporalFilter"]], "fit() (mne.decoding.temporalfilter method)": [[414, "mne.decoding.TemporalFilter.fit"]], "fit_transform() (mne.decoding.temporalfilter method)": [[414, "mne.decoding.TemporalFilter.fit_transform"]], "transform() (mne.decoding.temporalfilter method)": [[414, "mne.decoding.TemporalFilter.transform"]], "timedelayingridge (class in mne.decoding)": [[415, "mne.decoding.TimeDelayingRidge"]], "fit() (mne.decoding.timedelayingridge method)": [[415, "mne.decoding.TimeDelayingRidge.fit"]], "get_params() (mne.decoding.timedelayingridge method)": [[415, "mne.decoding.TimeDelayingRidge.get_params"]], "predict() (mne.decoding.timedelayingridge method)": [[415, "mne.decoding.TimeDelayingRidge.predict"]], "set_params() (mne.decoding.timedelayingridge method)": [[415, "mne.decoding.TimeDelayingRidge.set_params"]], "timefrequency (class in mne.decoding)": [[416, "mne.decoding.TimeFrequency"]], "fit() (mne.decoding.timefrequency method)": [[416, "mne.decoding.TimeFrequency.fit"]], "fit_transform() (mne.decoding.timefrequency method)": [[416, "mne.decoding.TimeFrequency.fit_transform"]], "get_params() (mne.decoding.timefrequency method)": [[416, "mne.decoding.TimeFrequency.get_params"]], "set_params() (mne.decoding.timefrequency method)": [[416, "mne.decoding.TimeFrequency.set_params"]], "transform() (mne.decoding.timefrequency method)": [[416, "mne.decoding.TimeFrequency.transform"]], "unsupervisedspatialfilter (class in mne.decoding)": [[417, "mne.decoding.UnsupervisedSpatialFilter"]], "fit() (mne.decoding.unsupervisedspatialfilter method)": [[417, "mne.decoding.UnsupervisedSpatialFilter.fit"]], "fit_transform() (mne.decoding.unsupervisedspatialfilter method)": [[417, "mne.decoding.UnsupervisedSpatialFilter.fit_transform"]], "get_params() (mne.decoding.unsupervisedspatialfilter method)": [[417, "mne.decoding.UnsupervisedSpatialFilter.get_params"]], "inverse_transform() (mne.decoding.unsupervisedspatialfilter method)": [[417, "mne.decoding.UnsupervisedSpatialFilter.inverse_transform"]], "set_params() (mne.decoding.unsupervisedspatialfilter method)": [[417, "mne.decoding.UnsupervisedSpatialFilter.set_params"]], "transform() (mne.decoding.unsupervisedspatialfilter method)": [[417, "mne.decoding.UnsupervisedSpatialFilter.transform"]], "vectorizer (class in mne.decoding)": [[418, "mne.decoding.Vectorizer"]], "fit() (mne.decoding.vectorizer method)": [[418, "mne.decoding.Vectorizer.fit"]], "fit_transform() (mne.decoding.vectorizer method)": [[418, "mne.decoding.Vectorizer.fit_transform"]], "inverse_transform() (mne.decoding.vectorizer method)": [[418, "mne.decoding.Vectorizer.inverse_transform"]], "transform() (mne.decoding.vectorizer method)": [[418, "mne.decoding.Vectorizer.transform"]], "compute_ems() (in module mne.decoding)": [[419, "mne.decoding.compute_ems"]], "cross_val_multiscore() (in module mne.decoding)": [[420, "mne.decoding.cross_val_multiscore"]], "get_coef() (in module mne.decoding)": [[421, "mne.decoding.get_coef"]], "dig_mri_distances() (in module mne)": [[422, "mne.dig_mri_distances"]], "get_phantom_dipoles() (in module mne.dipole)": [[423, "mne.dipole.get_phantom_dipoles"]], "average_movements() (in module mne.epochs)": [[424, "mne.epochs.average_movements"]], "combine_event_ids() (in module mne.epochs)": [[425, "mne.epochs.combine_event_ids"]], "equalize_epoch_counts() (in module mne.epochs)": [[426, "mne.epochs.equalize_epoch_counts"]], "make_metadata() (in module mne.epochs)": [[427, "mne.epochs.make_metadata"]], "equalize_channels() (in module mne)": [[428, "mne.equalize_channels"]], "define_target_events() (in module mne.event)": [[429, "mne.event.define_target_events"]], "match_event_names() (in module mne.event)": [[430, "mne.event.match_event_names"]], "shift_time_events() (in module mne.event)": [[431, "mne.event.shift_time_events"]], "events_from_annotations() (in module mne)": [[432, "mne.events_from_annotations"]], "export_epochs() (in module mne.export)": [[433, "mne.export.export_epochs"]], "export_evokeds() (in module mne.export)": [[434, "mne.export.export_evokeds"]], "export_evokeds_mff() (in module mne.export)": [[435, "mne.export.export_evokeds_mff"]], "export_raw() (in module mne.export)": [[436, "mne.export.export_raw"]], "extract_label_time_course() (in module mne)": [[437, "mne.extract_label_time_course"]], "construct_iir_filter() (in module mne.filter)": [[438, "mne.filter.construct_iir_filter"]], "create_filter() (in module mne.filter)": [[439, "mne.filter.create_filter"]], "estimate_ringing_samples() (in module mne.filter)": [[440, "mne.filter.estimate_ringing_samples"]], "filter_data() (in module mne.filter)": [[441, "mne.filter.filter_data"]], "notch_filter() (in module mne.filter)": [[442, "mne.filter.notch_filter"]], "resample() (in module mne.filter)": [[443, "mne.filter.resample"]], "find_events() (in module mne)": [[444, "mne.find_events"]], "find_stim_steps() (in module mne)": [[445, "mne.find_stim_steps"]], "fit_dipole() (in module mne)": [[446, "mne.fit_dipole"]], "compute_depth_prior() (in module mne.forward)": [[447, "mne.forward.compute_depth_prior"]], "compute_orient_prior() (in module mne.forward)": [[448, "mne.forward.compute_orient_prior"]], "restrict_forward_to_label() (in module mne.forward)": [[449, "mne.forward.restrict_forward_to_label"]], "restrict_forward_to_stc() (in module mne.forward)": [[450, "mne.forward.restrict_forward_to_stc"]], "get_config() (in module mne)": [[451, "mne.get_config"]], "get_config_path() (in module mne)": [[452, "mne.get_config_path"]], "get_head_surf() (in module mne)": [[453, "mne.get_head_surf"]], "get_meg_helmet_surf() (in module mne)": [[454, "mne.get_meg_helmet_surf"]], "get_montage_volume_labels() (in module mne)": [[455, "mne.get_montage_volume_labels"]], "get_volume_labels_from_aseg() (in module mne)": [[456, "mne.get_volume_labels_from_aseg"]], "get_volume_labels_from_src() (in module mne)": [[457, "mne.get_volume_labels_from_src"]], "grade_to_tris() (in module mne)": [[458, "mne.grade_to_tris"]], "grade_to_vertices() (in module mne)": [[459, "mne.grade_to_vertices"]], "grand_average() (in module mne)": [[460, "mne.grand_average"]], "grow_labels() (in module mne)": [[461, "mne.grow_labels"]], "coregistration() (in module mne.gui)": [[462, "mne.gui.coregistration"]], "locate_ieeg() (in module mne.gui)": [[463, "mne.gui.locate_ieeg"]], "head_to_mni() (in module mne)": [[464, "mne.head_to_mni"]], "head_to_mri() (in module mne)": [[465, "mne.head_to_mri"]], "gamma_map() (in module mne.inverse_sparse)": [[466, "mne.inverse_sparse.gamma_map"]], "make_stc_from_dipoles() (in module mne.inverse_sparse)": [[467, "mne.inverse_sparse.make_stc_from_dipoles"]], "mixed_norm() (in module mne.inverse_sparse)": [[468, "mne.inverse_sparse.mixed_norm"]], "tf_mixed_norm() (in module mne.inverse_sparse)": [[469, "mne.inverse_sparse.tf_mixed_norm"]], "baseraw (class in mne.io)": [[470, "mne.io.BaseRaw"]], "__contains__() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.__contains__"]], "__getitem__() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.__getitem__"]], "__len__() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.__len__"]], "add_channels() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.add_channels"]], "add_events() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.add_events"]], "add_proj() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.add_proj"]], "add_reference_channels() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.add_reference_channels"]], "annotations (mne.io.baseraw property)": [[470, "mne.io.BaseRaw.annotations"]], "anonymize() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.anonymize"]], "append() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.append"]], "apply_function() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.apply_function"]], "apply_gradient_compensation() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.apply_gradient_compensation"]], "apply_hilbert() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.apply_hilbert"]], "apply_proj() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.apply_proj"]], "ch_names (mne.io.baseraw property)": [[470, "mne.io.BaseRaw.ch_names"]], "close() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.close"]], "compensation_grade (mne.io.baseraw property)": [[470, "mne.io.BaseRaw.compensation_grade"]], "compute_psd() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.compute_psd"]], "copy() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.copy"]], "crop() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.crop"]], "crop_by_annotations() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.crop_by_annotations"]], "decimate() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.decimate"]], "del_proj() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.del_proj"]], "describe() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.describe"]], "drop_channels() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.drop_channels"]], "export() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.export"]], "filenames (mne.io.baseraw property)": [[470, "mne.io.BaseRaw.filenames"]], "filter() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.filter"]], "first_samp (mne.io.baseraw property)": [[470, "mne.io.BaseRaw.first_samp"]], "first_time (mne.io.baseraw property)": [[470, "mne.io.BaseRaw.first_time"]], "get_channel_types() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.get_channel_types"]], "get_data() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.get_data"]], "get_montage() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.get_montage"]], "interpolate_bads() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.interpolate_bads"]], "last_samp (mne.io.baseraw property)": [[470, "mne.io.BaseRaw.last_samp"]], "load_bad_channels() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.load_bad_channels"]], "load_data() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.load_data"]], "n_times (mne.io.baseraw property)": [[470, "mne.io.BaseRaw.n_times"]], "notch_filter() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.notch_filter"]], "pick() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.pick"]], "pick_channels() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.pick_channels"]], "pick_types() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.pick_types"]], "plot() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.plot"]], "plot_projs_topomap() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.plot_projs_topomap"]], "plot_psd() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.plot_psd"]], "plot_psd_topo() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.plot_psd_topo"]], "plot_psd_topomap() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.plot_psd_topomap"]], "plot_sensors() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.plot_sensors"]], "proj (mne.io.baseraw property)": [[470, "mne.io.BaseRaw.proj"]], "rename_channels() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.rename_channels"]], "reorder_channels() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.reorder_channels"]], "resample() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.resample"]], "save() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.save"]], "savgol_filter() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.savgol_filter"]], "set_annotations() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.set_annotations"]], "set_channel_types() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.set_channel_types"]], "set_eeg_reference() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.set_eeg_reference"]], "set_meas_date() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.set_meas_date"]], "set_montage() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.set_montage"]], "shift_time() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.shift_time"]], "time_as_index() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.time_as_index"]], "times (mne.io.baseraw property)": [[470, "mne.io.BaseRaw.times"]], "tmax (mne.io.baseraw property)": [[470, "mne.io.BaseRaw.tmax"]], "tmin (mne.io.baseraw property)": [[470, "mne.io.BaseRaw.tmin"]], "to_data_frame() (mne.io.baseraw method)": [[470, "mne.io.BaseRaw.to_data_frame"]], "raw (class in mne.io)": [[471, "mne.io.Raw"]], "__contains__() (mne.io.raw method)": [[471, "mne.io.Raw.__contains__"]], "__getitem__() (mne.io.raw method)": [[471, "mne.io.Raw.__getitem__"]], "__len__() (mne.io.raw method)": [[471, "mne.io.Raw.__len__"]], "acqparser (mne.io.raw property)": [[471, "mne.io.Raw.acqparser"]], "add_channels() (mne.io.raw method)": [[471, "mne.io.Raw.add_channels"]], "add_events() (mne.io.raw method)": [[471, "mne.io.Raw.add_events"]], "add_proj() (mne.io.raw method)": [[471, "mne.io.Raw.add_proj"]], "add_reference_channels() (mne.io.raw method)": [[471, "mne.io.Raw.add_reference_channels"]], "annotations (mne.io.raw property)": [[471, "mne.io.Raw.annotations"]], "anonymize() (mne.io.raw method)": [[471, "mne.io.Raw.anonymize"]], "append() (mne.io.raw method)": [[471, "mne.io.Raw.append"]], "apply_function() (mne.io.raw method)": [[471, "mne.io.Raw.apply_function"]], "apply_gradient_compensation() (mne.io.raw method)": [[471, "mne.io.Raw.apply_gradient_compensation"]], "apply_hilbert() (mne.io.raw method)": [[471, "mne.io.Raw.apply_hilbert"]], "apply_proj() (mne.io.raw method)": [[471, "mne.io.Raw.apply_proj"]], "ch_names (mne.io.raw property)": [[471, "mne.io.Raw.ch_names"]], "close() (mne.io.raw method)": [[471, "mne.io.Raw.close"]], "compensation_grade (mne.io.raw property)": [[471, "mne.io.Raw.compensation_grade"]], "compute_psd() (mne.io.raw method)": [[471, "mne.io.Raw.compute_psd"]], "copy() (mne.io.raw method)": [[471, "mne.io.Raw.copy"]], "crop() (mne.io.raw method)": [[471, "mne.io.Raw.crop"]], "crop_by_annotations() (mne.io.raw method)": [[471, "mne.io.Raw.crop_by_annotations"]], "decimate() (mne.io.raw method)": [[471, "mne.io.Raw.decimate"]], "del_proj() (mne.io.raw method)": [[471, "mne.io.Raw.del_proj"]], "describe() (mne.io.raw method)": [[471, "mne.io.Raw.describe"]], "drop_channels() (mne.io.raw method)": [[471, "mne.io.Raw.drop_channels"]], "export() (mne.io.raw method)": [[471, "mne.io.Raw.export"]], "filenames (mne.io.raw property)": [[471, "mne.io.Raw.filenames"]], "filter() (mne.io.raw method)": [[471, "mne.io.Raw.filter"]], "first_samp (mne.io.raw property)": [[471, "mne.io.Raw.first_samp"]], "first_time (mne.io.raw property)": [[471, "mne.io.Raw.first_time"]], "fix_mag_coil_types() (mne.io.raw method)": [[471, "mne.io.Raw.fix_mag_coil_types"]], "get_channel_types() (mne.io.raw method)": [[471, "mne.io.Raw.get_channel_types"]], "get_data() (mne.io.raw method)": [[471, "mne.io.Raw.get_data"]], "get_montage() (mne.io.raw method)": [[471, "mne.io.Raw.get_montage"]], "interpolate_bads() (mne.io.raw method)": [[471, "mne.io.Raw.interpolate_bads"]], "last_samp (mne.io.raw property)": [[471, "mne.io.Raw.last_samp"]], "load_bad_channels() (mne.io.raw method)": [[471, "mne.io.Raw.load_bad_channels"]], "load_data() (mne.io.raw method)": [[471, "mne.io.Raw.load_data"]], "n_times (mne.io.raw property)": [[471, "mne.io.Raw.n_times"]], "notch_filter() (mne.io.raw method)": [[471, "mne.io.Raw.notch_filter"]], "pick() (mne.io.raw method)": [[471, "mne.io.Raw.pick"]], "pick_channels() (mne.io.raw method)": [[471, "mne.io.Raw.pick_channels"]], "pick_types() (mne.io.raw method)": [[471, "mne.io.Raw.pick_types"]], "plot() (mne.io.raw method)": [[471, "mne.io.Raw.plot"]], "plot_projs_topomap() (mne.io.raw method)": [[471, "mne.io.Raw.plot_projs_topomap"]], "plot_psd() (mne.io.raw method)": [[471, "mne.io.Raw.plot_psd"]], "plot_psd_topo() (mne.io.raw method)": [[471, "mne.io.Raw.plot_psd_topo"]], "plot_psd_topomap() (mne.io.raw method)": [[471, "mne.io.Raw.plot_psd_topomap"]], "plot_sensors() (mne.io.raw method)": [[471, "mne.io.Raw.plot_sensors"]], "proj (mne.io.raw property)": [[471, "mne.io.Raw.proj"]], "rename_channels() (mne.io.raw method)": [[471, "mne.io.Raw.rename_channels"]], "reorder_channels() (mne.io.raw method)": [[471, "mne.io.Raw.reorder_channels"]], "resample() (mne.io.raw method)": [[471, "mne.io.Raw.resample"]], "save() (mne.io.raw method)": [[471, "mne.io.Raw.save"]], "savgol_filter() (mne.io.raw method)": [[471, "mne.io.Raw.savgol_filter"]], "set_annotations() (mne.io.raw method)": [[471, "mne.io.Raw.set_annotations"]], "set_channel_types() (mne.io.raw method)": [[471, "mne.io.Raw.set_channel_types"]], "set_eeg_reference() (mne.io.raw method)": [[471, "mne.io.Raw.set_eeg_reference"]], "set_meas_date() (mne.io.raw method)": [[471, "mne.io.Raw.set_meas_date"]], "set_montage() (mne.io.raw method)": [[471, "mne.io.Raw.set_montage"]], "shift_time() (mne.io.raw method)": [[471, "mne.io.Raw.shift_time"]], "time_as_index() (mne.io.raw method)": [[471, "mne.io.Raw.time_as_index"]], "times (mne.io.raw property)": [[471, "mne.io.Raw.times"]], "tmax (mne.io.raw property)": [[471, "mne.io.Raw.tmax"]], "tmin (mne.io.raw property)": [[471, "mne.io.Raw.tmin"]], "to_data_frame() (mne.io.raw method)": [[471, "mne.io.Raw.to_data_frame"]], "rawarray (class in mne.io)": [[472, "mne.io.RawArray"]], "__contains__() (mne.io.rawarray method)": [[472, "mne.io.RawArray.__contains__"]], "__getitem__() (mne.io.rawarray method)": [[472, "mne.io.RawArray.__getitem__"]], "__len__() (mne.io.rawarray method)": [[472, "mne.io.RawArray.__len__"]], "add_channels() (mne.io.rawarray method)": [[472, "mne.io.RawArray.add_channels"]], "add_events() (mne.io.rawarray method)": [[472, "mne.io.RawArray.add_events"]], "add_proj() (mne.io.rawarray method)": [[472, "mne.io.RawArray.add_proj"]], "add_reference_channels() (mne.io.rawarray method)": [[472, "mne.io.RawArray.add_reference_channels"]], "annotations (mne.io.rawarray property)": [[472, "mne.io.RawArray.annotations"]], "anonymize() (mne.io.rawarray method)": [[472, "mne.io.RawArray.anonymize"]], "append() (mne.io.rawarray method)": [[472, "mne.io.RawArray.append"]], "apply_function() (mne.io.rawarray method)": [[472, "mne.io.RawArray.apply_function"]], "apply_gradient_compensation() (mne.io.rawarray method)": [[472, "mne.io.RawArray.apply_gradient_compensation"]], "apply_hilbert() (mne.io.rawarray method)": [[472, "mne.io.RawArray.apply_hilbert"]], "apply_proj() (mne.io.rawarray method)": [[472, "mne.io.RawArray.apply_proj"]], "ch_names (mne.io.rawarray property)": [[472, "mne.io.RawArray.ch_names"]], "close() (mne.io.rawarray method)": [[472, "mne.io.RawArray.close"]], "compensation_grade (mne.io.rawarray property)": [[472, "mne.io.RawArray.compensation_grade"]], "compute_psd() (mne.io.rawarray method)": [[472, "mne.io.RawArray.compute_psd"]], "copy() (mne.io.rawarray method)": [[472, "mne.io.RawArray.copy"]], "crop() (mne.io.rawarray method)": [[472, "mne.io.RawArray.crop"]], "crop_by_annotations() (mne.io.rawarray method)": [[472, "mne.io.RawArray.crop_by_annotations"]], "decimate() (mne.io.rawarray method)": [[472, "mne.io.RawArray.decimate"]], "del_proj() (mne.io.rawarray method)": [[472, "mne.io.RawArray.del_proj"]], "describe() (mne.io.rawarray method)": [[472, "mne.io.RawArray.describe"]], "drop_channels() (mne.io.rawarray method)": [[472, "mne.io.RawArray.drop_channels"]], "export() (mne.io.rawarray method)": [[472, "mne.io.RawArray.export"]], "filenames (mne.io.rawarray property)": [[472, "mne.io.RawArray.filenames"]], "filter() (mne.io.rawarray method)": [[472, "mne.io.RawArray.filter"]], "first_samp (mne.io.rawarray property)": [[472, "mne.io.RawArray.first_samp"]], "first_time (mne.io.rawarray property)": [[472, "mne.io.RawArray.first_time"]], "get_channel_types() (mne.io.rawarray method)": [[472, "mne.io.RawArray.get_channel_types"]], "get_data() (mne.io.rawarray method)": [[472, "mne.io.RawArray.get_data"]], "get_montage() (mne.io.rawarray method)": [[472, "mne.io.RawArray.get_montage"]], "interpolate_bads() (mne.io.rawarray method)": [[472, "mne.io.RawArray.interpolate_bads"]], "last_samp (mne.io.rawarray property)": [[472, "mne.io.RawArray.last_samp"]], "load_bad_channels() (mne.io.rawarray method)": [[472, "mne.io.RawArray.load_bad_channels"]], "load_data() (mne.io.rawarray method)": [[472, "mne.io.RawArray.load_data"]], "n_times (mne.io.rawarray property)": [[472, "mne.io.RawArray.n_times"]], "notch_filter() (mne.io.rawarray method)": [[472, "mne.io.RawArray.notch_filter"]], "pick() (mne.io.rawarray method)": [[472, "mne.io.RawArray.pick"]], "pick_channels() (mne.io.rawarray method)": [[472, "mne.io.RawArray.pick_channels"]], "pick_types() (mne.io.rawarray method)": [[472, "mne.io.RawArray.pick_types"]], "plot() (mne.io.rawarray method)": [[472, "mne.io.RawArray.plot"]], "plot_projs_topomap() (mne.io.rawarray method)": [[472, "mne.io.RawArray.plot_projs_topomap"]], "plot_psd() (mne.io.rawarray method)": [[472, "mne.io.RawArray.plot_psd"]], "plot_psd_topo() (mne.io.rawarray method)": [[472, "mne.io.RawArray.plot_psd_topo"]], "plot_psd_topomap() (mne.io.rawarray method)": [[472, "mne.io.RawArray.plot_psd_topomap"]], "plot_sensors() (mne.io.rawarray method)": [[472, "mne.io.RawArray.plot_sensors"]], "proj (mne.io.rawarray property)": [[472, "mne.io.RawArray.proj"]], "rename_channels() (mne.io.rawarray method)": [[472, "mne.io.RawArray.rename_channels"]], "reorder_channels() (mne.io.rawarray method)": [[472, "mne.io.RawArray.reorder_channels"]], "resample() (mne.io.rawarray method)": [[472, "mne.io.RawArray.resample"]], "save() (mne.io.rawarray method)": [[472, "mne.io.RawArray.save"]], "savgol_filter() (mne.io.rawarray method)": [[472, "mne.io.RawArray.savgol_filter"]], "set_annotations() (mne.io.rawarray method)": [[472, "mne.io.RawArray.set_annotations"]], "set_channel_types() (mne.io.rawarray method)": [[472, "mne.io.RawArray.set_channel_types"]], "set_eeg_reference() (mne.io.rawarray method)": [[472, "mne.io.RawArray.set_eeg_reference"]], "set_meas_date() (mne.io.rawarray method)": [[472, "mne.io.RawArray.set_meas_date"]], "set_montage() (mne.io.rawarray method)": [[472, "mne.io.RawArray.set_montage"]], "shift_time() (mne.io.rawarray method)": [[472, "mne.io.RawArray.shift_time"]], "time_as_index() (mne.io.rawarray method)": [[472, "mne.io.RawArray.time_as_index"]], "times (mne.io.rawarray property)": [[472, "mne.io.RawArray.times"]], "tmax (mne.io.rawarray property)": [[472, "mne.io.RawArray.tmax"]], "tmin (mne.io.rawarray property)": [[472, "mne.io.RawArray.tmin"]], "to_data_frame() (mne.io.rawarray method)": [[472, "mne.io.RawArray.to_data_frame"]], "anonymize_info() (in module mne.io)": [[473, "mne.io.anonymize_info"]], "read_mrk() (in module mne.io.kit)": [[474, "mne.io.kit.read_mrk"]], "read_fiducials() (in module mne.io)": [[475, "mne.io.read_fiducials"]], "read_info() (in module mne.io)": [[476, "mne.io.read_info"]], "read_raw() (in module mne.io)": [[477, "mne.io.read_raw"]], "read_raw_artemis123() (in module mne.io)": [[478, "mne.io.read_raw_artemis123"]], "read_raw_bdf() (in module mne.io)": [[479, "mne.io.read_raw_bdf"]], "read_raw_boxy() (in module mne.io)": [[480, "mne.io.read_raw_boxy"]], "read_raw_brainvision() (in module mne.io)": [[481, "mne.io.read_raw_brainvision"]], "read_raw_bti() (in module mne.io)": [[482, "mne.io.read_raw_bti"]], "read_raw_cnt() (in module mne.io)": [[483, "mne.io.read_raw_cnt"]], "read_raw_ctf() (in module mne.io)": [[484, "mne.io.read_raw_ctf"]], "read_raw_curry() (in module mne.io)": [[485, "mne.io.read_raw_curry"]], "read_raw_edf() (in module mne.io)": [[486, "mne.io.read_raw_edf"]], "read_raw_eeglab() (in module mne.io)": [[487, "mne.io.read_raw_eeglab"]], "read_raw_egi() (in module mne.io)": [[488, "mne.io.read_raw_egi"]], "read_raw_eximia() (in module mne.io)": [[489, "mne.io.read_raw_eximia"]], "read_raw_fieldtrip() (in module mne.io)": [[490, "mne.io.read_raw_fieldtrip"]], "read_raw_fif() (in module mne.io)": [[491, "mne.io.read_raw_fif"]], "read_raw_gdf() (in module mne.io)": [[492, "mne.io.read_raw_gdf"]], "read_raw_hitachi() (in module mne.io)": [[493, "mne.io.read_raw_hitachi"]], "read_raw_kit() (in module mne.io)": [[494, "mne.io.read_raw_kit"]], "read_raw_nedf() (in module mne.io)": [[495, "mne.io.read_raw_nedf"]], "read_raw_nicolet() (in module mne.io)": [[496, "mne.io.read_raw_nicolet"]], "read_raw_nihon() (in module mne.io)": [[497, "mne.io.read_raw_nihon"]], "read_raw_nirx() (in module mne.io)": [[498, "mne.io.read_raw_nirx"]], "read_raw_persyst() (in module mne.io)": [[499, "mne.io.read_raw_persyst"]], "read_raw_snirf() (in module mne.io)": [[500, "mne.io.read_raw_snirf"]], "show_fiff() (in module mne.io)": [[501, "mne.io.show_fiff"]], "write_fiducials() (in module mne.io)": [[502, "mne.io.write_fiducials"]], "select_sources() (in module mne.label)": [[503, "mne.label.select_sources"]], "label_sign_flip() (in module mne)": [[504, "mne.label_sign_flip"]], "labels_to_stc() (in module mne)": [[505, "mne.labels_to_stc"]], "make_ad_hoc_cov() (in module mne)": [[506, "mne.make_ad_hoc_cov"]], "make_bem_model() (in module mne)": [[507, "mne.make_bem_model"]], "make_bem_solution() (in module mne)": [[508, "mne.make_bem_solution"]], "make_field_map() (in module mne)": [[509, "mne.make_field_map"]], "make_fixed_length_epochs() (in module mne)": [[510, "mne.make_fixed_length_epochs"]], "make_fixed_length_events() (in module mne)": [[511, "mne.make_fixed_length_events"]], "make_forward_dipole() (in module mne)": [[512, "mne.make_forward_dipole"]], "make_forward_solution() (in module mne)": [[513, "mne.make_forward_solution"]], "make_sphere_model() (in module mne)": [[514, "mne.make_sphere_model"]], "merge_events() (in module mne)": [[515, "mne.merge_events"]], "inverseoperator (class in mne.minimum_norm)": [[516, "mne.minimum_norm.InverseOperator"]], "__contains__() (mne.minimum_norm.inverseoperator method)": [[516, "mne.minimum_norm.InverseOperator.__contains__"]], "__getitem__() (mne.minimum_norm.inverseoperator method)": [[516, "mne.minimum_norm.InverseOperator.__getitem__"]], "__iter__() (mne.minimum_norm.inverseoperator method)": [[516, "mne.minimum_norm.InverseOperator.__iter__"]], "__len__() (mne.minimum_norm.inverseoperator method)": [[516, "mne.minimum_norm.InverseOperator.__len__"]], "clear() (mne.minimum_norm.inverseoperator method)": [[516, "mne.minimum_norm.InverseOperator.clear"]], "copy() (mne.minimum_norm.inverseoperator method)": [[516, "mne.minimum_norm.InverseOperator.copy"]], "fromkeys() (mne.minimum_norm.inverseoperator method)": [[516, "mne.minimum_norm.InverseOperator.fromkeys"]], "get() (mne.minimum_norm.inverseoperator method)": [[516, "mne.minimum_norm.InverseOperator.get"]], "items() (mne.minimum_norm.inverseoperator method)": [[516, "mne.minimum_norm.InverseOperator.items"]], "keys() (mne.minimum_norm.inverseoperator method)": [[516, "mne.minimum_norm.InverseOperator.keys"]], "pop() (mne.minimum_norm.inverseoperator method)": [[516, "mne.minimum_norm.InverseOperator.pop"]], "popitem() (mne.minimum_norm.inverseoperator method)": [[516, "mne.minimum_norm.InverseOperator.popitem"]], "setdefault() (mne.minimum_norm.inverseoperator method)": [[516, "mne.minimum_norm.InverseOperator.setdefault"]], "update() (mne.minimum_norm.inverseoperator method)": [[516, "mne.minimum_norm.InverseOperator.update"]], "values() (mne.minimum_norm.inverseoperator method)": [[516, "mne.minimum_norm.InverseOperator.values"]], "apply_inverse() (in module mne.minimum_norm)": [[517, "mne.minimum_norm.apply_inverse"]], "apply_inverse_cov() (in module mne.minimum_norm)": [[518, "mne.minimum_norm.apply_inverse_cov"]], "apply_inverse_epochs() (in module mne.minimum_norm)": [[519, "mne.minimum_norm.apply_inverse_epochs"]], "apply_inverse_raw() (in module mne.minimum_norm)": [[520, "mne.minimum_norm.apply_inverse_raw"]], "apply_inverse_tfr_epochs() (in module mne.minimum_norm)": [[521, "mne.minimum_norm.apply_inverse_tfr_epochs"]], "compute_rank_inverse() (in module mne.minimum_norm)": [[522, "mne.minimum_norm.compute_rank_inverse"]], "compute_source_psd() (in module mne.minimum_norm)": [[523, "mne.minimum_norm.compute_source_psd"]], "compute_source_psd_epochs() (in module mne.minimum_norm)": [[524, "mne.minimum_norm.compute_source_psd_epochs"]], "estimate_snr() (in module mne.minimum_norm)": [[525, "mne.minimum_norm.estimate_snr"]], "get_cross_talk() (in module mne.minimum_norm)": [[526, "mne.minimum_norm.get_cross_talk"]], "get_point_spread() (in module mne.minimum_norm)": [[527, "mne.minimum_norm.get_point_spread"]], "make_inverse_operator() (in module mne.minimum_norm)": [[528, "mne.minimum_norm.make_inverse_operator"]], "make_inverse_resolution_matrix() (in module mne.minimum_norm)": [[529, "mne.minimum_norm.make_inverse_resolution_matrix"]], "prepare_inverse_operator() (in module mne.minimum_norm)": [[530, "mne.minimum_norm.prepare_inverse_operator"]], "read_inverse_operator() (in module mne.minimum_norm)": [[531, "mne.minimum_norm.read_inverse_operator"]], "resolution_metrics() (in module mne.minimum_norm)": [[532, "mne.minimum_norm.resolution_metrics"]], "source_band_induced_power() (in module mne.minimum_norm)": [[533, "mne.minimum_norm.source_band_induced_power"]], "source_induced_power() (in module mne.minimum_norm)": [[534, "mne.minimum_norm.source_induced_power"]], "write_inverse_operator() (in module mne.minimum_norm)": [[535, "mne.minimum_norm.write_inverse_operator"]], "morph_labels() (in module mne)": [[536, "mne.morph_labels"]], "morph_source_spaces() (in module mne)": [[537, "mne.morph_source_spaces"]], "open_docs() (in module mne)": [[538, "mne.open_docs"]], "open_report() (in module mne)": [[539, "mne.open_report"]], "parse_config() (in module mne)": [[540, "mne.parse_config"]], "pick_channels() (in module mne)": [[541, "mne.pick_channels"]], "pick_channels_cov() (in module mne)": [[542, "mne.pick_channels_cov"]], "pick_channels_forward() (in module mne)": [[543, "mne.pick_channels_forward"]], "pick_channels_regexp() (in module mne)": [[544, "mne.pick_channels_regexp"]], "pick_events() (in module mne)": [[545, "mne.pick_events"]], "pick_info() (in module mne)": [[546, "mne.pick_info"]], "pick_types() (in module mne)": [[547, "mne.pick_types"]], "pick_types_forward() (in module mne)": [[548, "mne.pick_types_forward"]], "eogregression (class in mne.preprocessing)": [[549, "mne.preprocessing.EOGRegression"]], "apply() (mne.preprocessing.eogregression method)": [[549, "mne.preprocessing.EOGRegression.apply"]], "fit() (mne.preprocessing.eogregression method)": [[549, "mne.preprocessing.EOGRegression.fit"]], "plot() (mne.preprocessing.eogregression method)": [[549, "mne.preprocessing.EOGRegression.plot"]], "save() (mne.preprocessing.eogregression method)": [[549, "mne.preprocessing.EOGRegression.save"]], "ica (class in mne.preprocessing)": [[550, "mne.preprocessing.ICA"]], "__contains__() (mne.preprocessing.ica method)": [[550, "mne.preprocessing.ICA.__contains__"]], "apply() (mne.preprocessing.ica method)": [[550, "mne.preprocessing.ICA.apply"]], "compensation_grade (mne.preprocessing.ica property)": [[550, "mne.preprocessing.ICA.compensation_grade"]], "copy() (mne.preprocessing.ica method)": [[550, "mne.preprocessing.ICA.copy"]], "find_bads_ecg() (mne.preprocessing.ica method)": [[550, "mne.preprocessing.ICA.find_bads_ecg"]], "find_bads_eog() (mne.preprocessing.ica method)": [[550, "mne.preprocessing.ICA.find_bads_eog"]], "find_bads_muscle() (mne.preprocessing.ica method)": [[550, "mne.preprocessing.ICA.find_bads_muscle"]], "find_bads_ref() (mne.preprocessing.ica method)": [[550, "mne.preprocessing.ICA.find_bads_ref"]], "fit() (mne.preprocessing.ica method)": [[550, "mne.preprocessing.ICA.fit"]], "get_channel_types() (mne.preprocessing.ica method)": [[550, "mne.preprocessing.ICA.get_channel_types"]], "get_components() (mne.preprocessing.ica method)": [[550, "mne.preprocessing.ICA.get_components"]], "get_explained_variance_ratio() (mne.preprocessing.ica method)": [[550, "mne.preprocessing.ICA.get_explained_variance_ratio"]], "get_sources() (mne.preprocessing.ica method)": [[550, "mne.preprocessing.ICA.get_sources"]], "plot_components() (mne.preprocessing.ica method)": [[550, "mne.preprocessing.ICA.plot_components"]], "plot_overlay() (mne.preprocessing.ica method)": [[550, "mne.preprocessing.ICA.plot_overlay"]], "plot_properties() (mne.preprocessing.ica method)": [[550, "mne.preprocessing.ICA.plot_properties"]], "plot_scores() (mne.preprocessing.ica method)": [[550, "mne.preprocessing.ICA.plot_scores"]], "plot_sources() (mne.preprocessing.ica method)": [[550, "mne.preprocessing.ICA.plot_sources"]], "save() (mne.preprocessing.ica method)": [[550, "mne.preprocessing.ICA.save"]], "score_sources() (mne.preprocessing.ica method)": [[550, "mne.preprocessing.ICA.score_sources"]], "xdawn (class in mne.preprocessing)": [[551, "mne.preprocessing.Xdawn"]], "apply() (mne.preprocessing.xdawn method)": [[551, "mne.preprocessing.Xdawn.apply"]], "fit() (mne.preprocessing.xdawn method)": [[551, "mne.preprocessing.Xdawn.fit"]], "fit_transform() (mne.preprocessing.xdawn method)": [[551, "mne.preprocessing.Xdawn.fit_transform"]], "get_params() (mne.preprocessing.xdawn method)": [[551, "mne.preprocessing.Xdawn.get_params"]], "inverse_transform() (mne.preprocessing.xdawn method)": [[551, "mne.preprocessing.Xdawn.inverse_transform"]], "set_params() (mne.preprocessing.xdawn method)": [[551, "mne.preprocessing.Xdawn.set_params"]], "transform() (mne.preprocessing.xdawn method)": [[551, "mne.preprocessing.Xdawn.transform"]], "annotate_amplitude() (in module mne.preprocessing)": [[552, "mne.preprocessing.annotate_amplitude"]], "annotate_break() (in module mne.preprocessing)": [[553, "mne.preprocessing.annotate_break"]], "annotate_movement() (in module mne.preprocessing)": [[554, "mne.preprocessing.annotate_movement"]], "annotate_muscle_zscore() (in module mne.preprocessing)": [[555, "mne.preprocessing.annotate_muscle_zscore"]], "annotate_nan() (in module mne.preprocessing)": [[556, "mne.preprocessing.annotate_nan"]], "compute_average_dev_head_t() (in module mne.preprocessing)": [[557, "mne.preprocessing.compute_average_dev_head_t"]], "compute_bridged_electrodes() (in module mne.preprocessing)": [[558, "mne.preprocessing.compute_bridged_electrodes"]], "compute_current_source_density() (in module mne.preprocessing)": [[559, "mne.preprocessing.compute_current_source_density"]], "compute_fine_calibration() (in module mne.preprocessing)": [[560, "mne.preprocessing.compute_fine_calibration"]], "compute_maxwell_basis() (in module mne.preprocessing)": [[561, "mne.preprocessing.compute_maxwell_basis"]], "compute_proj_ecg() (in module mne.preprocessing)": [[562, "mne.preprocessing.compute_proj_ecg"]], "compute_proj_eog() (in module mne.preprocessing)": [[563, "mne.preprocessing.compute_proj_eog"]], "corrmap() (in module mne.preprocessing)": [[564, "mne.preprocessing.corrmap"]], "cortical_signal_suppression() (in module mne.preprocessing)": [[565, "mne.preprocessing.cortical_signal_suppression"]], "create_ecg_epochs() (in module mne.preprocessing)": [[566, "mne.preprocessing.create_ecg_epochs"]], "create_eog_epochs() (in module mne.preprocessing)": [[567, "mne.preprocessing.create_eog_epochs"]], "equalize_bads() (in module mne.preprocessing)": [[568, "mne.preprocessing.equalize_bads"]], "find_bad_channels_maxwell() (in module mne.preprocessing)": [[569, "mne.preprocessing.find_bad_channels_maxwell"]], "find_ecg_events() (in module mne.preprocessing)": [[570, "mne.preprocessing.find_ecg_events"]], "find_eog_events() (in module mne.preprocessing)": [[571, "mne.preprocessing.find_eog_events"]], "fix_stim_artifact() (in module mne.preprocessing)": [[572, "mne.preprocessing.fix_stim_artifact"]], "ica_find_ecg_events() (in module mne.preprocessing)": [[573, "mne.preprocessing.ica_find_ecg_events"]], "ica_find_eog_events() (in module mne.preprocessing)": [[574, "mne.preprocessing.ica_find_eog_events"]], "project_sensors_onto_brain() (in module mne.preprocessing.ieeg)": [[575, "mne.preprocessing.ieeg.project_sensors_onto_brain"]], "infomax() (in module mne.preprocessing)": [[576, "mne.preprocessing.infomax"]], "interpolate_bridged_electrodes() (in module mne.preprocessing)": [[577, "mne.preprocessing.interpolate_bridged_electrodes"]], "maxwell_filter() (in module mne.preprocessing)": [[578, "mne.preprocessing.maxwell_filter"]], "maxwell_filter_prepare_emptyroom() (in module mne.preprocessing)": [[579, "mne.preprocessing.maxwell_filter_prepare_emptyroom"]], "beer_lambert_law() (in module mne.preprocessing.nirs)": [[580, "mne.preprocessing.nirs.beer_lambert_law"]], "optical_density() (in module mne.preprocessing.nirs)": [[581, "mne.preprocessing.nirs.optical_density"]], "scalp_coupling_index() (in module mne.preprocessing.nirs)": [[582, "mne.preprocessing.nirs.scalp_coupling_index"]], "short_channels() (in module mne.preprocessing.nirs)": [[583, "mne.preprocessing.nirs.short_channels"]], "source_detector_distances() (in module mne.preprocessing.nirs)": [[584, "mne.preprocessing.nirs.source_detector_distances"]], "temporal_derivative_distribution_repair() (in module mne.preprocessing.nirs)": [[585, "mne.preprocessing.nirs.temporal_derivative_distribution_repair"]], "oversampled_temporal_projection() (in module mne.preprocessing)": [[586, "mne.preprocessing.oversampled_temporal_projection"]], "peak_finder() (in module mne.preprocessing)": [[587, "mne.preprocessing.peak_finder"]], "read_eog_regression() (in module mne.preprocessing)": [[588, "mne.preprocessing.read_eog_regression"]], "read_fine_calibration() (in module mne.preprocessing)": [[589, "mne.preprocessing.read_fine_calibration"]], "read_ica() (in module mne.preprocessing)": [[590, "mne.preprocessing.read_ica"]], "read_ica_eeglab() (in module mne.preprocessing)": [[591, "mne.preprocessing.read_ica_eeglab"]], "realign_raw() (in module mne.preprocessing)": [[592, "mne.preprocessing.realign_raw"]], "regress_artifact() (in module mne.preprocessing)": [[593, "mne.preprocessing.regress_artifact"]], "write_fine_calibration() (in module mne.preprocessing)": [[594, "mne.preprocessing.write_fine_calibration"]], "random_parcellation() (in module mne)": [[595, "mne.random_parcellation"]], "read_annotations() (in module mne)": [[596, "mne.read_annotations"]], "read_bem_solution() (in module mne)": [[597, "mne.read_bem_solution"]], "read_bem_surfaces() (in module mne)": [[598, "mne.read_bem_surfaces"]], "read_cov() (in module mne)": [[599, "mne.read_cov"]], "read_dipole() (in module mne)": [[600, "mne.read_dipole"]], "read_epochs() (in module mne)": [[601, "mne.read_epochs"]], "read_epochs_eeglab() (in module mne)": [[602, "mne.read_epochs_eeglab"]], "read_epochs_fieldtrip() (in module mne)": [[603, "mne.read_epochs_fieldtrip"]], "read_epochs_kit() (in module mne)": [[604, "mne.read_epochs_kit"]], "read_events() (in module mne)": [[605, "mne.read_events"]], "read_evoked_besa() (in module mne)": [[606, "mne.read_evoked_besa"]], "read_evoked_fieldtrip() (in module mne)": [[607, "mne.read_evoked_fieldtrip"]], "read_evokeds() (in module mne)": [[608, "mne.read_evokeds"]], "read_evokeds_mff() (in module mne)": [[609, "mne.read_evokeds_mff"]], "read_forward_solution() (in module mne)": [[610, "mne.read_forward_solution"]], "read_freesurfer_lut() (in module mne)": [[611, "mne.read_freesurfer_lut"]], "read_label() (in module mne)": [[612, "mne.read_label"]], "read_labels_from_annot() (in module mne)": [[613, "mne.read_labels_from_annot"]], "read_lta() (in module mne)": [[614, "mne.read_lta"]], "read_morph_map() (in module mne)": [[615, "mne.read_morph_map"]], "read_proj() (in module mne)": [[616, "mne.read_proj"]], "read_reject_parameters() (in module mne)": [[617, "mne.read_reject_parameters"]], "read_source_estimate() (in module mne)": [[618, "mne.read_source_estimate"]], "read_source_morph() (in module mne)": [[619, "mne.read_source_morph"]], "read_source_spaces() (in module mne)": [[620, "mne.read_source_spaces"]], "read_surface() (in module mne)": [[621, "mne.read_surface"]], "read_talxfm() (in module mne)": [[622, "mne.read_talxfm"]], "read_trans() (in module mne)": [[623, "mne.read_trans"]], "read_tri() (in module mne)": [[624, "mne.read_tri"]], "read_vectorview_selection() (in module mne)": [[625, "mne.read_vectorview_selection"]], "rename_channels() (in module mne)": [[626, "mne.rename_channels"]], "scale_bem() (in module mne)": [[627, "mne.scale_bem"]], "scale_labels() (in module mne)": [[628, "mne.scale_labels"]], "scale_mri() (in module mne)": [[629, "mne.scale_mri"]], "scale_source_space() (in module mne)": [[630, "mne.scale_source_space"]], "sensitivity_map() (in module mne)": [[631, "mne.sensitivity_map"]], "set_bipolar_reference() (in module mne)": [[632, "mne.set_bipolar_reference"]], "set_cache_dir() (in module mne)": [[633, "mne.set_cache_dir"]], "set_config() (in module mne)": [[634, "mne.set_config"]], "set_eeg_reference() (in module mne)": [[635, "mne.set_eeg_reference"]], "set_log_file() (in module mne)": [[636, "mne.set_log_file"]], "set_log_level() (in module mne)": [[637, "mne.set_log_level"]], "setup_source_space() (in module mne)": [[638, "mne.setup_source_space"]], "setup_volume_source_space() (in module mne)": [[639, "mne.setup_volume_source_space"]], "sourcesimulator (class in mne.simulation)": [[640, "mne.simulation.SourceSimulator"]], "__iter__() (mne.simulation.sourcesimulator method)": [[640, "mne.simulation.SourceSimulator.__iter__"]], "add_data() (mne.simulation.sourcesimulator method)": [[640, "mne.simulation.SourceSimulator.add_data"]], "duration (mne.simulation.sourcesimulator property)": [[640, "mne.simulation.SourceSimulator.duration"]], "get_stc() (mne.simulation.sourcesimulator method)": [[640, "mne.simulation.SourceSimulator.get_stc"]], "get_stim_channel() (mne.simulation.sourcesimulator method)": [[640, "mne.simulation.SourceSimulator.get_stim_channel"]], "n_times (mne.simulation.sourcesimulator property)": [[640, "mne.simulation.SourceSimulator.n_times"]], "add_chpi() (in module mne.simulation)": [[641, "mne.simulation.add_chpi"]], "add_ecg() (in module mne.simulation)": [[642, "mne.simulation.add_ecg"]], "add_eog() (in module mne.simulation)": [[643, "mne.simulation.add_eog"]], "add_noise() (in module mne.simulation)": [[644, "mne.simulation.add_noise"]], "cosine_score() (in module mne.simulation.metrics)": [[645, "mne.simulation.metrics.cosine_score"]], "f1_score() (in module mne.simulation.metrics)": [[646, "mne.simulation.metrics.f1_score"]], "peak_position_error() (in module mne.simulation.metrics)": [[647, "mne.simulation.metrics.peak_position_error"]], "precision_score() (in module mne.simulation.metrics)": [[648, "mne.simulation.metrics.precision_score"]], "recall_score() (in module mne.simulation.metrics)": [[649, "mne.simulation.metrics.recall_score"]], "region_localization_error() (in module mne.simulation.metrics)": [[650, "mne.simulation.metrics.region_localization_error"]], "roc_auc_score() (in module mne.simulation.metrics)": [[651, "mne.simulation.metrics.roc_auc_score"]], "spatial_deviation_error() (in module mne.simulation.metrics)": [[652, "mne.simulation.metrics.spatial_deviation_error"]], "select_source_in_label() (in module mne.simulation)": [[653, "mne.simulation.select_source_in_label"]], "simulate_evoked() (in module mne.simulation)": [[654, "mne.simulation.simulate_evoked"]], "simulate_raw() (in module mne.simulation)": [[655, "mne.simulation.simulate_raw"]], "simulate_sparse_stc() (in module mne.simulation)": [[656, "mne.simulation.simulate_sparse_stc"]], "simulate_stc() (in module mne.simulation)": [[657, "mne.simulation.simulate_stc"]], "compute_distance_to_sensors() (in module mne.source_space)": [[658, "mne.source_space.compute_distance_to_sensors"]], "get_decimated_surfaces() (in module mne.source_space)": [[659, "mne.source_space.get_decimated_surfaces"]], "spatial_dist_adjacency() (in module mne)": [[660, "mne.spatial_dist_adjacency"]], "spatial_inter_hemi_adjacency() (in module mne)": [[661, "mne.spatial_inter_hemi_adjacency"]], "spatial_src_adjacency() (in module mne)": [[662, "mne.spatial_src_adjacency"]], "spatial_tris_adjacency() (in module mne)": [[663, "mne.spatial_tris_adjacency"]], "spatio_temporal_dist_adjacency() (in module mne)": [[664, "mne.spatio_temporal_dist_adjacency"]], "spatio_temporal_src_adjacency() (in module mne)": [[665, "mne.spatio_temporal_src_adjacency"]], "spatio_temporal_tris_adjacency() (in module mne)": [[666, "mne.spatio_temporal_tris_adjacency"]], "split_label() (in module mne)": [[667, "mne.split_label"]], "bonferroni_correction() (in module mne.stats)": [[668, "mne.stats.bonferroni_correction"]], "bootstrap_confidence_interval() (in module mne.stats)": [[669, "mne.stats.bootstrap_confidence_interval"]], "combine_adjacency() (in module mne.stats)": [[670, "mne.stats.combine_adjacency"]], "f_mway_rm() (in module mne.stats)": [[671, "mne.stats.f_mway_rm"]], "f_oneway() (in module mne.stats)": [[672, "mne.stats.f_oneway"]], "f_threshold_mway_rm() (in module mne.stats)": [[673, "mne.stats.f_threshold_mway_rm"]], "fdr_correction() (in module mne.stats)": [[674, "mne.stats.fdr_correction"]], "linear_regression() (in module mne.stats)": [[675, "mne.stats.linear_regression"]], "linear_regression_raw() (in module mne.stats)": [[676, "mne.stats.linear_regression_raw"]], "permutation_cluster_1samp_test() (in module mne.stats)": [[677, "mne.stats.permutation_cluster_1samp_test"]], "permutation_cluster_test() (in module mne.stats)": [[678, "mne.stats.permutation_cluster_test"]], "permutation_t_test() (in module mne.stats)": [[679, "mne.stats.permutation_t_test"]], "spatio_temporal_cluster_1samp_test() (in module mne.stats)": [[680, "mne.stats.spatio_temporal_cluster_1samp_test"]], "spatio_temporal_cluster_test() (in module mne.stats)": [[681, "mne.stats.spatio_temporal_cluster_test"]], "summarize_clusters_stc() (in module mne.stats)": [[682, "mne.stats.summarize_clusters_stc"]], "ttest_1samp_no_p() (in module mne.stats)": [[683, "mne.stats.ttest_1samp_no_p"]], "ttest_ind_no_p() (in module mne.stats)": [[684, "mne.stats.ttest_ind_no_p"]], "stc_near_sensors() (in module mne)": [[685, "mne.stc_near_sensors"]], "stc_to_label() (in module mne)": [[686, "mne.stc_to_label"]], "complete_surface_info() (in module mne.surface)": [[687, "mne.surface.complete_surface_info"]], "read_curvature() (in module mne.surface)": [[688, "mne.surface.read_curvature"]], "sys_info() (in module mne)": [[689, "mne.sys_info"]], "averagetfr (class in mne.time_frequency)": [[690, "mne.time_frequency.AverageTFR"]], "__add__() (mne.time_frequency.averagetfr method)": [[690, "mne.time_frequency.AverageTFR.__add__"]], "__contains__() (mne.time_frequency.averagetfr method)": [[690, "mne.time_frequency.AverageTFR.__contains__"]], "__mul__() (mne.time_frequency.averagetfr method)": [[690, "mne.time_frequency.AverageTFR.__mul__"]], "__sub__() (mne.time_frequency.averagetfr method)": [[690, "mne.time_frequency.AverageTFR.__sub__"]], "add_channels() (mne.time_frequency.averagetfr method)": [[690, "mne.time_frequency.AverageTFR.add_channels"]], "add_reference_channels() (mne.time_frequency.averagetfr method)": [[690, "mne.time_frequency.AverageTFR.add_reference_channels"]], "apply_baseline() (mne.time_frequency.averagetfr method)": [[690, "mne.time_frequency.AverageTFR.apply_baseline"]], "ch_names (mne.time_frequency.averagetfr property)": [[690, "mne.time_frequency.AverageTFR.ch_names"]], "compensation_grade (mne.time_frequency.averagetfr property)": [[690, "mne.time_frequency.AverageTFR.compensation_grade"]], "copy() (mne.time_frequency.averagetfr method)": [[690, "mne.time_frequency.AverageTFR.copy"]], "crop() (mne.time_frequency.averagetfr method)": [[690, "mne.time_frequency.AverageTFR.crop"]], "decimate() (mne.time_frequency.averagetfr method)": [[690, "mne.time_frequency.AverageTFR.decimate"]], "drop_channels() (mne.time_frequency.averagetfr method)": [[690, "mne.time_frequency.AverageTFR.drop_channels"]], "get_channel_types() (mne.time_frequency.averagetfr method)": [[690, "mne.time_frequency.AverageTFR.get_channel_types"]], "pick() (mne.time_frequency.averagetfr method)": [[690, "mne.time_frequency.AverageTFR.pick"]], "pick_channels() (mne.time_frequency.averagetfr method)": [[690, "mne.time_frequency.AverageTFR.pick_channels"]], "pick_types() (mne.time_frequency.averagetfr method)": [[690, "mne.time_frequency.AverageTFR.pick_types"]], "plot() (mne.time_frequency.averagetfr method)": [[690, "mne.time_frequency.AverageTFR.plot"]], "plot_joint() (mne.time_frequency.averagetfr method)": [[690, "mne.time_frequency.AverageTFR.plot_joint"]], "plot_topo() (mne.time_frequency.averagetfr method)": [[690, "mne.time_frequency.AverageTFR.plot_topo"]], "plot_topomap() (mne.time_frequency.averagetfr method)": [[690, "mne.time_frequency.AverageTFR.plot_topomap"]], "reorder_channels() (mne.time_frequency.averagetfr method)": [[690, "mne.time_frequency.AverageTFR.reorder_channels"]], "save() (mne.time_frequency.averagetfr method)": [[690, "mne.time_frequency.AverageTFR.save"]], "shift_time() (mne.time_frequency.averagetfr method)": [[690, "mne.time_frequency.AverageTFR.shift_time"]], "time_as_index() (mne.time_frequency.averagetfr method)": [[690, "mne.time_frequency.AverageTFR.time_as_index"]], "times (mne.time_frequency.averagetfr property)": [[690, "mne.time_frequency.AverageTFR.times"]], "tmax (mne.time_frequency.averagetfr property)": [[690, "mne.time_frequency.AverageTFR.tmax"]], "tmin (mne.time_frequency.averagetfr property)": [[690, "mne.time_frequency.AverageTFR.tmin"]], "to_data_frame() (mne.time_frequency.averagetfr method)": [[690, "mne.time_frequency.AverageTFR.to_data_frame"]], "crossspectraldensity (class in mne.time_frequency)": [[691, "mne.time_frequency.CrossSpectralDensity"]], "__getitem__() (mne.time_frequency.crossspectraldensity method)": [[691, "mne.time_frequency.CrossSpectralDensity.__getitem__"]], "__len__() (mne.time_frequency.crossspectraldensity method)": [[691, "mne.time_frequency.CrossSpectralDensity.__len__"]], "copy() (mne.time_frequency.crossspectraldensity method)": [[691, "mne.time_frequency.CrossSpectralDensity.copy"]], "get_data() (mne.time_frequency.crossspectraldensity method)": [[691, "mne.time_frequency.CrossSpectralDensity.get_data"]], "mean() (mne.time_frequency.crossspectraldensity method)": [[691, "mne.time_frequency.CrossSpectralDensity.mean"]], "n_channels (mne.time_frequency.crossspectraldensity property)": [[691, "mne.time_frequency.CrossSpectralDensity.n_channels"]], "pick_channels() (mne.time_frequency.crossspectraldensity method)": [[691, "mne.time_frequency.CrossSpectralDensity.pick_channels"]], "pick_frequency() (mne.time_frequency.crossspectraldensity method)": [[691, "mne.time_frequency.CrossSpectralDensity.pick_frequency"]], "plot() (mne.time_frequency.crossspectraldensity method)": [[691, "mne.time_frequency.CrossSpectralDensity.plot"]], "save() (mne.time_frequency.crossspectraldensity method)": [[691, "mne.time_frequency.CrossSpectralDensity.save"]], "sum() (mne.time_frequency.crossspectraldensity method)": [[691, "mne.time_frequency.CrossSpectralDensity.sum"]], "epochsspectrum (class in mne.time_frequency)": [[692, "mne.time_frequency.EpochsSpectrum"]], "__contains__() (mne.time_frequency.epochsspectrum method)": [[692, "mne.time_frequency.EpochsSpectrum.__contains__"]], "__getitem__() (mne.time_frequency.epochsspectrum method)": [[692, "mne.time_frequency.EpochsSpectrum.__getitem__"]], "__iter__() (mne.time_frequency.epochsspectrum method)": [[692, "mne.time_frequency.EpochsSpectrum.__iter__"]], "__len__() (mne.time_frequency.epochsspectrum method)": [[692, "mne.time_frequency.EpochsSpectrum.__len__"]], "add_channels() (mne.time_frequency.epochsspectrum method)": [[692, "mne.time_frequency.EpochsSpectrum.add_channels"]], "add_reference_channels() (mne.time_frequency.epochsspectrum method)": [[692, "mne.time_frequency.EpochsSpectrum.add_reference_channels"]], "average() (mne.time_frequency.epochsspectrum method)": [[692, "mne.time_frequency.EpochsSpectrum.average"]], "compensation_grade (mne.time_frequency.epochsspectrum property)": [[692, "mne.time_frequency.EpochsSpectrum.compensation_grade"]], "copy() (mne.time_frequency.epochsspectrum method)": [[692, "mne.time_frequency.EpochsSpectrum.copy"]], "drop_channels() (mne.time_frequency.epochsspectrum method)": [[692, "mne.time_frequency.EpochsSpectrum.drop_channels"]], "get_channel_types() (mne.time_frequency.epochsspectrum method)": [[692, "mne.time_frequency.EpochsSpectrum.get_channel_types"]], "get_data() (mne.time_frequency.epochsspectrum method)": [[692, "mne.time_frequency.EpochsSpectrum.get_data"]], "metadata (mne.time_frequency.epochsspectrum property)": [[692, "mne.time_frequency.EpochsSpectrum.metadata"]], "next() (mne.time_frequency.epochsspectrum method)": [[692, "mne.time_frequency.EpochsSpectrum.next"]], "pick() (mne.time_frequency.epochsspectrum method)": [[692, "mne.time_frequency.EpochsSpectrum.pick"]], "pick_channels() (mne.time_frequency.epochsspectrum method)": [[692, "mne.time_frequency.EpochsSpectrum.pick_channels"]], "pick_types() (mne.time_frequency.epochsspectrum method)": [[692, "mne.time_frequency.EpochsSpectrum.pick_types"]], "plot() (mne.time_frequency.epochsspectrum method)": [[692, "mne.time_frequency.EpochsSpectrum.plot"]], "plot_topo() (mne.time_frequency.epochsspectrum method)": [[692, "mne.time_frequency.EpochsSpectrum.plot_topo"]], "plot_topomap() (mne.time_frequency.epochsspectrum method)": [[692, "mne.time_frequency.EpochsSpectrum.plot_topomap"]], "reorder_channels() (mne.time_frequency.epochsspectrum method)": [[692, "mne.time_frequency.EpochsSpectrum.reorder_channels"]], "save() (mne.time_frequency.epochsspectrum method)": [[692, "mne.time_frequency.EpochsSpectrum.save"]], "to_data_frame() (mne.time_frequency.epochsspectrum method)": [[692, "mne.time_frequency.EpochsSpectrum.to_data_frame"]], "units() (mne.time_frequency.epochsspectrum method)": [[692, "mne.time_frequency.EpochsSpectrum.units"]], "epochstfr (class in mne.time_frequency)": [[693, "mne.time_frequency.EpochsTFR"]], "__contains__() (mne.time_frequency.epochstfr method)": [[693, "mne.time_frequency.EpochsTFR.__contains__"]], "__getitem__() (mne.time_frequency.epochstfr method)": [[693, "mne.time_frequency.EpochsTFR.__getitem__"]], "__iter__() (mne.time_frequency.epochstfr method)": [[693, "mne.time_frequency.EpochsTFR.__iter__"]], "__len__() (mne.time_frequency.epochstfr method)": [[693, "mne.time_frequency.EpochsTFR.__len__"]], "add_channels() (mne.time_frequency.epochstfr method)": [[693, "mne.time_frequency.EpochsTFR.add_channels"]], "add_reference_channels() (mne.time_frequency.epochstfr method)": [[693, "mne.time_frequency.EpochsTFR.add_reference_channels"]], "apply_baseline() (mne.time_frequency.epochstfr method)": [[693, "mne.time_frequency.EpochsTFR.apply_baseline"]], "average() (mne.time_frequency.epochstfr method)": [[693, "mne.time_frequency.EpochsTFR.average"]], "ch_names (mne.time_frequency.epochstfr property)": [[693, "mne.time_frequency.EpochsTFR.ch_names"]], "compensation_grade (mne.time_frequency.epochstfr property)": [[693, "mne.time_frequency.EpochsTFR.compensation_grade"]], "copy() (mne.time_frequency.epochstfr method)": [[693, "mne.time_frequency.EpochsTFR.copy"]], "crop() (mne.time_frequency.epochstfr method)": [[693, "mne.time_frequency.EpochsTFR.crop"]], "decimate() (mne.time_frequency.epochstfr method)": [[693, "mne.time_frequency.EpochsTFR.decimate"]], "drop_channels() (mne.time_frequency.epochstfr method)": [[693, "mne.time_frequency.EpochsTFR.drop_channels"]], "get_channel_types() (mne.time_frequency.epochstfr method)": [[693, "mne.time_frequency.EpochsTFR.get_channel_types"]], "metadata (mne.time_frequency.epochstfr property)": [[693, "mne.time_frequency.EpochsTFR.metadata"]], "next() (mne.time_frequency.epochstfr method)": [[693, "mne.time_frequency.EpochsTFR.next"]], "pick() (mne.time_frequency.epochstfr method)": [[693, "mne.time_frequency.EpochsTFR.pick"]], "pick_channels() (mne.time_frequency.epochstfr method)": [[693, "mne.time_frequency.EpochsTFR.pick_channels"]], "pick_types() (mne.time_frequency.epochstfr method)": [[693, "mne.time_frequency.EpochsTFR.pick_types"]], "reorder_channels() (mne.time_frequency.epochstfr method)": [[693, "mne.time_frequency.EpochsTFR.reorder_channels"]], "save() (mne.time_frequency.epochstfr method)": [[693, "mne.time_frequency.EpochsTFR.save"]], "shift_time() (mne.time_frequency.epochstfr method)": [[693, "mne.time_frequency.EpochsTFR.shift_time"]], "time_as_index() (mne.time_frequency.epochstfr method)": [[693, "mne.time_frequency.EpochsTFR.time_as_index"]], "times (mne.time_frequency.epochstfr property)": [[693, "mne.time_frequency.EpochsTFR.times"]], "tmax (mne.time_frequency.epochstfr property)": [[693, "mne.time_frequency.EpochsTFR.tmax"]], "tmin (mne.time_frequency.epochstfr property)": [[693, "mne.time_frequency.EpochsTFR.tmin"]], "to_data_frame() (mne.time_frequency.epochstfr method)": [[693, "mne.time_frequency.EpochsTFR.to_data_frame"]], "spectrum (class in mne.time_frequency)": [[694, "mne.time_frequency.Spectrum"]], "__contains__() (mne.time_frequency.spectrum method)": [[694, "mne.time_frequency.Spectrum.__contains__"]], "__getitem__() (mne.time_frequency.spectrum method)": [[694, "mne.time_frequency.Spectrum.__getitem__"]], "add_channels() (mne.time_frequency.spectrum method)": [[694, "mne.time_frequency.Spectrum.add_channels"]], "add_reference_channels() (mne.time_frequency.spectrum method)": [[694, "mne.time_frequency.Spectrum.add_reference_channels"]], "compensation_grade (mne.time_frequency.spectrum property)": [[694, "mne.time_frequency.Spectrum.compensation_grade"]], "copy() (mne.time_frequency.spectrum method)": [[694, "mne.time_frequency.Spectrum.copy"]], "drop_channels() (mne.time_frequency.spectrum method)": [[694, "mne.time_frequency.Spectrum.drop_channels"]], "get_channel_types() (mne.time_frequency.spectrum method)": [[694, "mne.time_frequency.Spectrum.get_channel_types"]], "get_data() (mne.time_frequency.spectrum method)": [[694, "mne.time_frequency.Spectrum.get_data"]], "pick() (mne.time_frequency.spectrum method)": [[694, "mne.time_frequency.Spectrum.pick"]], "pick_channels() (mne.time_frequency.spectrum method)": [[694, "mne.time_frequency.Spectrum.pick_channels"]], "pick_types() (mne.time_frequency.spectrum method)": [[694, "mne.time_frequency.Spectrum.pick_types"]], "plot() (mne.time_frequency.spectrum method)": [[694, "mne.time_frequency.Spectrum.plot"]], "plot_topo() (mne.time_frequency.spectrum method)": [[694, "mne.time_frequency.Spectrum.plot_topo"]], "plot_topomap() (mne.time_frequency.spectrum method)": [[694, "mne.time_frequency.Spectrum.plot_topomap"]], "reorder_channels() (mne.time_frequency.spectrum method)": [[694, "mne.time_frequency.Spectrum.reorder_channels"]], "save() (mne.time_frequency.spectrum method)": [[694, "mne.time_frequency.Spectrum.save"]], "to_data_frame() (mne.time_frequency.spectrum method)": [[694, "mne.time_frequency.Spectrum.to_data_frame"]], "units() (mne.time_frequency.spectrum method)": [[694, "mne.time_frequency.Spectrum.units"]], "csd_array_fourier() (in module mne.time_frequency)": [[695, "mne.time_frequency.csd_array_fourier"]], "csd_array_morlet() (in module mne.time_frequency)": [[696, "mne.time_frequency.csd_array_morlet"]], "csd_array_multitaper() (in module mne.time_frequency)": [[697, "mne.time_frequency.csd_array_multitaper"]], "csd_fourier() (in module mne.time_frequency)": [[698, "mne.time_frequency.csd_fourier"]], "csd_morlet() (in module mne.time_frequency)": [[699, "mne.time_frequency.csd_morlet"]], "csd_multitaper() (in module mne.time_frequency)": [[700, "mne.time_frequency.csd_multitaper"]], "csd_tfr() (in module mne.time_frequency)": [[701, "mne.time_frequency.csd_tfr"]], "dpss_windows() (in module mne.time_frequency)": [[702, "mne.time_frequency.dpss_windows"]], "fit_iir_model_raw() (in module mne.time_frequency)": [[703, "mne.time_frequency.fit_iir_model_raw"]], "istft() (in module mne.time_frequency)": [[704, "mne.time_frequency.istft"]], "morlet() (in module mne.time_frequency)": [[705, "mne.time_frequency.morlet"]], "pick_channels_csd() (in module mne.time_frequency)": [[706, "mne.time_frequency.pick_channels_csd"]], "psd_array_multitaper() (in module mne.time_frequency)": [[707, "mne.time_frequency.psd_array_multitaper"]], "psd_array_welch() (in module mne.time_frequency)": [[708, "mne.time_frequency.psd_array_welch"]], "psd_multitaper() (in module mne.time_frequency)": [[709, "mne.time_frequency.psd_multitaper"]], "psd_welch() (in module mne.time_frequency)": [[710, "mne.time_frequency.psd_welch"]], "read_csd() (in module mne.time_frequency)": [[711, "mne.time_frequency.read_csd"]], "read_spectrum() (in module mne.time_frequency)": [[712, "mne.time_frequency.read_spectrum"]], "read_tfrs() (in module mne.time_frequency)": [[713, "mne.time_frequency.read_tfrs"]], "stft() (in module mne.time_frequency)": [[714, "mne.time_frequency.stft"]], "stftfreq() (in module mne.time_frequency)": [[715, "mne.time_frequency.stftfreq"]], "cwt() (in module mne.time_frequency.tfr)": [[716, "mne.time_frequency.tfr.cwt"]], "morlet() (in module mne.time_frequency.tfr)": [[717, "mne.time_frequency.tfr.morlet"]], "tfr_array_morlet() (in module mne.time_frequency)": [[718, "mne.time_frequency.tfr_array_morlet"]], "tfr_array_multitaper() (in module mne.time_frequency)": [[719, "mne.time_frequency.tfr_array_multitaper"]], "tfr_array_stockwell() (in module mne.time_frequency)": [[720, "mne.time_frequency.tfr_array_stockwell"]], "tfr_morlet() (in module mne.time_frequency)": [[721, "mne.time_frequency.tfr_morlet"]], "tfr_multitaper() (in module mne.time_frequency)": [[722, "mne.time_frequency.tfr_multitaper"]], "tfr_stockwell() (in module mne.time_frequency)": [[723, "mne.time_frequency.tfr_stockwell"]], "write_tfrs() (in module mne.time_frequency)": [[724, "mne.time_frequency.write_tfrs"]], "transform_surface_to() (in module mne)": [[725, "mne.transform_surface_to"]], "transform (class in mne.transforms)": [[726, "mne.transforms.Transform"]], "__contains__() (mne.transforms.transform method)": [[726, "mne.transforms.Transform.__contains__"]], "__getitem__() (mne.transforms.transform method)": [[726, "mne.transforms.Transform.__getitem__"]], "__iter__() (mne.transforms.transform method)": [[726, "mne.transforms.Transform.__iter__"]], "__len__() (mne.transforms.transform method)": [[726, "mne.transforms.Transform.__len__"]], "clear() (mne.transforms.transform method)": [[726, "mne.transforms.Transform.clear"]], "copy() (mne.transforms.transform method)": [[726, "mne.transforms.Transform.copy"]], "from_str (mne.transforms.transform property)": [[726, "mne.transforms.Transform.from_str"]], "fromkeys() (mne.transforms.transform method)": [[726, "mne.transforms.Transform.fromkeys"]], "get() (mne.transforms.transform method)": [[726, "mne.transforms.Transform.get"]], "items() (mne.transforms.transform method)": [[726, "mne.transforms.Transform.items"]], "keys() (mne.transforms.transform method)": [[726, "mne.transforms.Transform.keys"]], "pop() (mne.transforms.transform method)": [[726, "mne.transforms.Transform.pop"]], "popitem() (mne.transforms.transform method)": [[726, "mne.transforms.Transform.popitem"]], "save() (mne.transforms.transform method)": [[726, "mne.transforms.Transform.save"]], "setdefault() (mne.transforms.transform method)": [[726, "mne.transforms.Transform.setdefault"]], "to_str (mne.transforms.transform property)": [[726, "mne.transforms.Transform.to_str"]], "update() (mne.transforms.transform method)": [[726, "mne.transforms.Transform.update"]], "values() (mne.transforms.transform method)": [[726, "mne.transforms.Transform.values"]], "apply_volume_registration() (in module mne.transforms)": [[727, "mne.transforms.apply_volume_registration"]], "compute_volume_registration() (in module mne.transforms)": [[728, "mne.transforms.compute_volume_registration"]], "quat_to_rot() (in module mne.transforms)": [[729, "mne.transforms.quat_to_rot"]], "read_ras_mni_t() (in module mne.transforms)": [[730, "mne.transforms.read_ras_mni_t"]], "rot_to_quat() (in module mne.transforms)": [[731, "mne.transforms.rot_to_quat"]], "use_coil_def() (in module mne)": [[732, "mne.use_coil_def"]], "use_log_level (class in mne)": [[733, "mne.use_log_level"]], "deprecated (class in mne.utils)": [[734, "mne.utils.deprecated"]], "warn() (in module mne.utils)": [[735, "mne.utils.warn"]], "verbose() (in module mne)": [[736, "mne.verbose"]], "vertex_to_mni() (in module mne)": [[737, "mne.vertex_to_mni"]], "brain (class in mne.viz)": [[738, "mne.viz.Brain"]], "add_annotation() (mne.viz.brain method)": [[738, "mne.viz.Brain.add_annotation"]], "add_data() (mne.viz.brain method)": [[738, "mne.viz.Brain.add_data"]], "add_dipole() (mne.viz.brain method)": [[738, "mne.viz.Brain.add_dipole"]], "add_foci() (mne.viz.brain method)": [[738, "mne.viz.Brain.add_foci"]], "add_forward() (mne.viz.brain method)": [[738, "mne.viz.Brain.add_forward"]], "add_head() (mne.viz.brain method)": [[738, "mne.viz.Brain.add_head"]], "add_label() (mne.viz.brain method)": [[738, "mne.viz.Brain.add_label"]], "add_sensors() (mne.viz.brain method)": [[738, "mne.viz.Brain.add_sensors"]], "add_skull() (mne.viz.brain method)": [[738, "mne.viz.Brain.add_skull"]], "add_text() (mne.viz.brain method)": [[738, "mne.viz.Brain.add_text"]], "add_volume_labels() (mne.viz.brain method)": [[738, "mne.viz.Brain.add_volume_labels"]], "apply_auto_scaling() (mne.viz.brain method)": [[738, "mne.viz.Brain.apply_auto_scaling"]], "clear_glyphs() (mne.viz.brain method)": [[738, "mne.viz.Brain.clear_glyphs"]], "close() (mne.viz.brain method)": [[738, "mne.viz.Brain.close"]], "data (mne.viz.brain property)": [[738, "mne.viz.Brain.data"]], "get_picked_points() (mne.viz.brain method)": [[738, "mne.viz.Brain.get_picked_points"]], "get_view() (mne.viz.brain method)": [[738, "mne.viz.Brain.get_view"]], "help() (mne.viz.brain method)": [[738, "mne.viz.Brain.help"]], "interaction (mne.viz.brain property)": [[738, "mne.viz.Brain.interaction"]], "plot_time_course() (mne.viz.brain method)": [[738, "mne.viz.Brain.plot_time_course"]], "plot_time_line() (mne.viz.brain method)": [[738, "mne.viz.Brain.plot_time_line"]], "remove_annotations() (mne.viz.brain method)": [[738, "mne.viz.Brain.remove_annotations"]], "remove_data() (mne.viz.brain method)": [[738, "mne.viz.Brain.remove_data"]], "remove_dipole() (mne.viz.brain method)": [[738, "mne.viz.Brain.remove_dipole"]], "remove_forward() (mne.viz.brain method)": [[738, "mne.viz.Brain.remove_forward"]], "remove_head() (mne.viz.brain method)": [[738, "mne.viz.Brain.remove_head"]], "remove_labels() (mne.viz.brain method)": [[738, "mne.viz.Brain.remove_labels"]], "remove_sensors() (mne.viz.brain method)": [[738, "mne.viz.Brain.remove_sensors"]], "remove_skull() (mne.viz.brain method)": [[738, "mne.viz.Brain.remove_skull"]], "remove_text() (mne.viz.brain method)": [[738, "mne.viz.Brain.remove_text"]], "remove_volume_labels() (mne.viz.brain method)": [[738, "mne.viz.Brain.remove_volume_labels"]], "reset() (mne.viz.brain method)": [[738, "mne.viz.Brain.reset"]], "reset_view() (mne.viz.brain method)": [[738, "mne.viz.Brain.reset_view"]], "restore_user_scaling() (mne.viz.brain method)": [[738, "mne.viz.Brain.restore_user_scaling"]], "save_image() (mne.viz.brain method)": [[738, "mne.viz.Brain.save_image"]], "save_movie() (mne.viz.brain method)": [[738, "mne.viz.Brain.save_movie"]], "screenshot() (mne.viz.brain method)": [[738, "mne.viz.Brain.screenshot"]], "set_data_smoothing() (mne.viz.brain method)": [[738, "mne.viz.Brain.set_data_smoothing"]], "set_playback_speed() (mne.viz.brain method)": [[738, "mne.viz.Brain.set_playback_speed"]], "set_time() (mne.viz.brain method)": [[738, "mne.viz.Brain.set_time"]], "set_time_interpolation() (mne.viz.brain method)": [[738, "mne.viz.Brain.set_time_interpolation"]], "set_time_point() (mne.viz.brain method)": [[738, "mne.viz.Brain.set_time_point"]], "setup_time_viewer() (mne.viz.brain method)": [[738, "mne.viz.Brain.setup_time_viewer"]], "show() (mne.viz.brain method)": [[738, "mne.viz.Brain.show"]], "show_view() (mne.viz.brain method)": [[738, "mne.viz.Brain.show_view"]], "time_interpolation (mne.viz.brain property)": [[738, "mne.viz.Brain.time_interpolation"]], "toggle_interface() (mne.viz.brain method)": [[738, "mne.viz.Brain.toggle_interface"]], "toggle_playback() (mne.viz.brain method)": [[738, "mne.viz.Brain.toggle_playback"]], "update_lut() (mne.viz.brain method)": [[738, "mne.viz.Brain.update_lut"]], "clickableimage (class in mne.viz)": [[739, "mne.viz.ClickableImage"]], "onclick() (mne.viz.clickableimage method)": [[739, "mne.viz.ClickableImage.onclick"]], "plot_clicks() (mne.viz.clickableimage method)": [[739, "mne.viz.ClickableImage.plot_clicks"]], "to_layout() (mne.viz.clickableimage method)": [[739, "mne.viz.ClickableImage.to_layout"]], "figure3d (class in mne.viz)": [[740, "mne.viz.Figure3D"]], "plotter (mne.viz.figure3d property)": [[740, "mne.viz.Figure3D.plotter"]], "add_background_image() (in module mne.viz)": [[741, "mne.viz.add_background_image"]], "centers_to_edges() (in module mne.viz)": [[742, "mne.viz.centers_to_edges"]], "circular_layout() (in module mne.viz)": [[743, "mne.viz.circular_layout"]], "close_3d_figure() (in module mne.viz)": [[744, "mne.viz.close_3d_figure"]], "close_all_3d_figures() (in module mne.viz)": [[745, "mne.viz.close_all_3d_figures"]], "compare_fiff() (in module mne.viz)": [[746, "mne.viz.compare_fiff"]], "create_3d_figure() (in module mne.viz)": [[747, "mne.viz.create_3d_figure"]], "get_3d_backend() (in module mne.viz)": [[748, "mne.viz.get_3d_backend"]], "get_brain_class() (in module mne.viz)": [[749, "mne.viz.get_brain_class"]], "get_browser_backend() (in module mne.viz)": [[750, "mne.viz.get_browser_backend"]], "iter_topography() (in module mne.viz)": [[751, "mne.viz.iter_topography"]], "link_brains() (in module mne.viz)": [[752, "mne.viz.link_brains"]], "mne_analyze_colormap() (in module mne.viz)": [[753, "mne.viz.mne_analyze_colormap"]], "plot_alignment() (in module mne.viz)": [[754, "mne.viz.plot_alignment"]], "plot_arrowmap() (in module mne.viz)": [[755, "mne.viz.plot_arrowmap"]], "plot_bem() (in module mne.viz)": [[756, "mne.viz.plot_bem"]], "plot_brain_colorbar() (in module mne.viz)": [[757, "mne.viz.plot_brain_colorbar"]], "plot_bridged_electrodes() (in module mne.viz)": [[758, "mne.viz.plot_bridged_electrodes"]], "plot_ch_adjacency() (in module mne.viz)": [[759, "mne.viz.plot_ch_adjacency"]], "plot_channel_labels_circle() (in module mne.viz)": [[760, "mne.viz.plot_channel_labels_circle"]], "plot_chpi_snr() (in module mne.viz)": [[761, "mne.viz.plot_chpi_snr"]], "plot_compare_evokeds() (in module mne.viz)": [[762, "mne.viz.plot_compare_evokeds"]], "plot_cov() (in module mne.viz)": [[763, "mne.viz.plot_cov"]], "plot_csd() (in module mne.viz)": [[764, "mne.viz.plot_csd"]], "plot_dipole_amplitudes() (in module mne.viz)": [[765, "mne.viz.plot_dipole_amplitudes"]], "plot_dipole_locations() (in module mne.viz)": [[766, "mne.viz.plot_dipole_locations"]], "plot_drop_log() (in module mne.viz)": [[767, "mne.viz.plot_drop_log"]], "plot_epochs() (in module mne.viz)": [[768, "mne.viz.plot_epochs"]], "plot_epochs_image() (in module mne.viz)": [[769, "mne.viz.plot_epochs_image"]], "plot_epochs_psd_topomap() (in module mne.viz)": [[770, "mne.viz.plot_epochs_psd_topomap"]], "plot_events() (in module mne.viz)": [[771, "mne.viz.plot_events"]], "plot_evoked() (in module mne.viz)": [[772, "mne.viz.plot_evoked"]], "plot_evoked_field() (in module mne.viz)": [[773, "mne.viz.plot_evoked_field"]], "plot_evoked_image() (in module mne.viz)": [[774, "mne.viz.plot_evoked_image"]], "plot_evoked_joint() (in module mne.viz)": [[775, "mne.viz.plot_evoked_joint"]], "plot_evoked_topo() (in module mne.viz)": [[776, "mne.viz.plot_evoked_topo"]], "plot_evoked_topomap() (in module mne.viz)": [[777, "mne.viz.plot_evoked_topomap"]], "plot_evoked_white() (in module mne.viz)": [[778, "mne.viz.plot_evoked_white"]], "plot_filter() (in module mne.viz)": [[779, "mne.viz.plot_filter"]], "plot_head_positions() (in module mne.viz)": [[780, "mne.viz.plot_head_positions"]], "plot_ica_components() (in module mne.viz)": [[781, "mne.viz.plot_ica_components"]], "plot_ica_overlay() (in module mne.viz)": [[782, "mne.viz.plot_ica_overlay"]], "plot_ica_properties() (in module mne.viz)": [[783, "mne.viz.plot_ica_properties"]], "plot_ica_scores() (in module mne.viz)": [[784, "mne.viz.plot_ica_scores"]], "plot_ica_sources() (in module mne.viz)": [[785, "mne.viz.plot_ica_sources"]], "plot_ideal_filter() (in module mne.viz)": [[786, "mne.viz.plot_ideal_filter"]], "plot_layout() (in module mne.viz)": [[787, "mne.viz.plot_layout"]], "plot_montage() (in module mne.viz)": [[788, "mne.viz.plot_montage"]], "plot_projs_joint() (in module mne.viz)": [[789, "mne.viz.plot_projs_joint"]], "plot_projs_topomap() (in module mne.viz)": [[790, "mne.viz.plot_projs_topomap"]], "plot_raw() (in module mne.viz)": [[791, "mne.viz.plot_raw"]], "plot_raw_psd() (in module mne.viz)": [[792, "mne.viz.plot_raw_psd"]], "plot_regression_weights() (in module mne.viz)": [[793, "mne.viz.plot_regression_weights"]], "plot_sensors() (in module mne.viz)": [[794, "mne.viz.plot_sensors"]], "plot_snr_estimate() (in module mne.viz)": [[795, "mne.viz.plot_snr_estimate"]], "plot_source_estimates() (in module mne.viz)": [[796, "mne.viz.plot_source_estimates"]], "plot_sparse_source_estimates() (in module mne.viz)": [[797, "mne.viz.plot_sparse_source_estimates"]], "plot_tfr_topomap() (in module mne.viz)": [[798, "mne.viz.plot_tfr_topomap"]], "plot_topo_image_epochs() (in module mne.viz)": [[799, "mne.viz.plot_topo_image_epochs"]], "plot_topomap() (in module mne.viz)": [[800, "mne.viz.plot_topomap"]], "plot_vector_source_estimates() (in module mne.viz)": [[801, "mne.viz.plot_vector_source_estimates"]], "plot_volume_source_estimates() (in module mne.viz)": [[802, "mne.viz.plot_volume_source_estimates"]], "set_3d_backend() (in module mne.viz)": [[803, "mne.viz.set_3d_backend"]], "set_3d_options() (in module mne.viz)": [[804, "mne.viz.set_3d_options"]], "set_3d_title() (in module mne.viz)": [[805, "mne.viz.set_3d_title"]], "set_3d_view() (in module mne.viz)": [[806, "mne.viz.set_3d_view"]], "set_browser_backend() (in module mne.viz)": [[807, "mne.viz.set_browser_backend"]], "snapshot_brain_montage() (in module mne.viz)": [[808, "mne.viz.snapshot_brain_montage"]], "use_3d_backend() (in module mne.viz)": [[809, "mne.viz.use_3d_backend"]], "use_browser_backend() (in module mne.viz)": [[810, "mne.viz.use_browser_backend"]], "warp_montage_volume() (in module mne)": [[811, "mne.warp_montage_volume"]], "what() (in module mne)": [[812, "mne.what"]], "write_bem_solution() (in module mne)": [[813, "mne.write_bem_solution"]], "write_bem_surfaces() (in module mne)": [[814, "mne.write_bem_surfaces"]], "write_cov() (in module mne)": [[815, "mne.write_cov"]], "write_events() (in module mne)": [[816, "mne.write_events"]], "write_evokeds() (in module mne)": [[817, "mne.write_evokeds"]], "write_forward_solution() (in module mne)": [[818, "mne.write_forward_solution"]], "write_head_bem() (in module mne)": [[819, "mne.write_head_bem"]], "write_label() (in module mne)": [[820, "mne.write_label"]], "write_labels_to_annot() (in module mne)": [[821, "mne.write_labels_to_annot"]], "write_proj() (in module mne)": [[822, "mne.write_proj"]], "write_source_spaces() (in module mne)": [[823, "mne.write_source_spaces"]], "write_surface() (in module mne)": [[824, "mne.write_surface"]], "write_trans() (in module mne)": [[825, "mne.write_trans"]], "bem": [[826, "term-BEM"]], "dics": [[826, "term-DICS"]], "ecd": [[826, "term-ECD"]], "freesurfer lut": [[826, "term-FreeSurfer-LUT"]], "gfp": [[826, "term-GFP"]], "hed": [[826, "term-HED"]], "hpi": [[826, "term-HPI"]], "lcmv": [[826, "term-LCMV"]], "lcmv beamformer": [[826, "term-LCMV-beamformer"]], "lut": [[826, "term-LUT"]], "mne": [[826, "term-MNE"], [861, "module-mne"]], "ras": [[826, "term-RAS"]], "roi": [[826, "term-ROI"]], "ssp": [[826, "term-SSP"]], "stc": [[826, "term-STC"]], "anatomical landmark": [[826, "term-anatomical-landmark"]], "annotations": [[826, "term-annotations"]], "beamformer": [[826, "term-beamformer"]], "boundary element method": [[826, "term-boundary-element-method"]], "boundary element model": [[826, "term-boundary-element-model"]], "chpi": [[826, "term-cHPI"]], "channels": [[826, "term-channels"]], "dspm": [[826, "term-dSPM"]], "data channels": [[826, "term-data-channels"]], "digitization": [[826, "term-digitization"]], "dipole": [[826, "term-dipole"]], "dynamic imaging of coherent sources": [[826, "term-dynamic-imaging-of-coherent-sources"]], "dynamic statistical parametric mapping": [[826, "term-dynamic-statistical-parametric-mapping"]], "eloreta": [[826, "term-eLORETA"]], "epochs": [[826, "term-epochs"]], "equivalent current dipole": [[826, "term-equivalent-current-dipole"]], "events": [[826, "term-events"]], "evoked": [[826, "term-evoked"]], "fiducial": [[826, "term-fiducial"]], "fiducial point": [[826, "term-fiducial-point"]], "first_samp": [[826, "term-first_samp"]], "forward": [[826, "term-forward"]], "forward solution": [[826, "term-forward-solution"]], "global field power": [[826, "term-global-field-power"]], "head position indicator": [[826, "term-head-position-indicator"]], "hierarchical event descriptors": [[826, "term-hierarchical-event-descriptors"]], "info": [[826, "term-info"]], "inverse": [[826, "term-inverse"]], "inverse operator": [[826, "term-inverse-operator"]], "label": [[826, "term-label"]], "last_samp": [[826, "term-last_samp"]], "layout": [[826, "term-layout"]], "maximum intensity projection": [[826, "term-maximum-intensity-projection"]], "measurement info": [[826, "term-measurement-info"]], "minimum-norm estimate": [[826, "term-minimum-norm-estimate"]], "minimum-norm estimation": [[826, "term-minimum-norm-estimation"]], "montage": [[826, "term-montage"]], "morphing": [[826, "term-morphing"]], "noise covariance": [[826, "term-noise-covariance"]], "path-like": [[826, "term-path-like"]], "pick": [[826, "term-pick"]], "projector": [[826, "term-projector"]], "raw": [[826, "term-raw"]], "region of interest": [[826, "term-region-of-interest"]], "sloreta": [[826, "term-sLORETA"]], "selection": [[826, "term-selection"]], "source estimate": [[826, "term-source-estimate"]], "source space": [[826, "term-source-space"]], "source time course": [[826, "term-source-time-course"]], "stim channel": [[826, "term-stim-channel"]], "template montage": [[826, "term-template-montage"]], "tfr": [[826, "term-tfr"]], "trans": [[826, "term-trans"]], "trigger channel": [[826, "term-trigger-channel"]], "whitening": [[826, "term-whitening"]], "mne.beamformer": [[839, "module-mne.beamformer"]], "mne.dipole": [[839, "module-mne.dipole"]], "mne.inverse_sparse": [[839, "module-mne.inverse_sparse"]], "mne.minimum_norm": [[839, "module-mne.minimum_norm"]], "mne.cuda": [[840, "module-mne.cuda"]], "mne.utils": [[840, "module-mne.utils"]], "mne.channels": [[860, "module-mne.channels"]], "mne.chpi": [[860, "module-mne.chpi"]], "mne.filter": [[860, "module-mne.filter"]], "mne.preprocessing": [[860, "module-mne.preprocessing"]], "mne.preprocessing.ieeg": [[860, "module-mne.preprocessing.ieeg"]], "mne.preprocessing.nirs": [[860, "module-mne.preprocessing.nirs"]], "mne.transforms": [[860, "module-mne.transforms"]], "mne.io": [[862, "module-mne.io"]], "mne.io.kit": [[862, "module-mne.io.kit"]], "mne.baseline": [[865, "module-mne.baseline"]], "mne.simulation": [[866, "module-mne.simulation"]], "mne.simulation.metrics": [[866, "module-mne.simulation.metrics"]], "mne.stats": [[868, "module-mne.stats"]], "mne.time_frequency": [[869, "module-mne.time_frequency"]], "mne.time_frequency.tfr": [[869, "module-mne.time_frequency.tfr"]], "mne.viz": [[870, "module-mne.viz"]]}})