Search.setIndex({"docnames": ["auto_examples/connectivity/index", "auto_examples/datasets/brainstorm_data", "auto_examples/datasets/hf_sef_data", "auto_examples/datasets/index", "auto_examples/datasets/limo_data", "auto_examples/datasets/opm_data", "auto_examples/datasets/sg_execution_times", "auto_examples/datasets/spm_faces_dataset_sgskip", "auto_examples/decoding/decoding_csp_eeg", "auto_examples/decoding/decoding_csp_timefreq", "auto_examples/decoding/decoding_rsa_sgskip", "auto_examples/decoding/decoding_spatio_temporal_source", "auto_examples/decoding/decoding_spoc_CMC", "auto_examples/decoding/decoding_time_generalization_conditions", "auto_examples/decoding/decoding_unsupervised_spatial_filter", "auto_examples/decoding/decoding_xdawn_eeg", "auto_examples/decoding/ems_filtering", "auto_examples/decoding/index", "auto_examples/decoding/linear_model_patterns", "auto_examples/decoding/receptive_field_mtrf", "auto_examples/decoding/sg_execution_times", "auto_examples/decoding/ssd_spatial_filters", "auto_examples/forward/forward_sensitivity_maps", "auto_examples/forward/index", "auto_examples/forward/left_cerebellum_volume_source", "auto_examples/forward/sg_execution_times", "auto_examples/forward/source_space_morphing", "auto_examples/index", "auto_examples/inverse/compute_mne_inverse_epochs_in_label", "auto_examples/inverse/compute_mne_inverse_raw_in_label", "auto_examples/inverse/compute_mne_inverse_volume", "auto_examples/inverse/custom_inverse_solver", "auto_examples/inverse/dics_epochs", "auto_examples/inverse/dics_source_power", "auto_examples/inverse/evoked_ers_source_power", "auto_examples/inverse/gamma_map_inverse", "auto_examples/inverse/index", "auto_examples/inverse/label_activation_from_stc", "auto_examples/inverse/label_from_stc", "auto_examples/inverse/label_source_activations", "auto_examples/inverse/mixed_norm_inverse", "auto_examples/inverse/mixed_source_space_inverse", "auto_examples/inverse/mne_cov_power", "auto_examples/inverse/morph_surface_stc", "auto_examples/inverse/morph_volume_stc", "auto_examples/inverse/multi_dipole_model", "auto_examples/inverse/multidict_reweighted_tfmxne", "auto_examples/inverse/psf_ctf_label_leakage", "auto_examples/inverse/psf_ctf_vertices", "auto_examples/inverse/psf_ctf_vertices_lcmv", "auto_examples/inverse/psf_volume", "auto_examples/inverse/rap_music", "auto_examples/inverse/read_inverse", "auto_examples/inverse/read_stc", "auto_examples/inverse/resolution_metrics", "auto_examples/inverse/resolution_metrics_eegmeg", "auto_examples/inverse/sg_execution_times", "auto_examples/inverse/snr_estimate", "auto_examples/inverse/source_space_snr", "auto_examples/inverse/time_frequency_mixed_norm_inverse", "auto_examples/inverse/trap_music", "auto_examples/inverse/vector_mne_solution", "auto_examples/io/elekta_epochs", "auto_examples/io/index", "auto_examples/io/read_neo_format", "auto_examples/io/read_noise_covariance_matrix", "auto_examples/io/read_xdf", "auto_examples/io/sg_execution_times", "auto_examples/preprocessing/contralateral_referencing", "auto_examples/preprocessing/css", "auto_examples/preprocessing/define_target_events", "auto_examples/preprocessing/eeg_bridging", "auto_examples/preprocessing/eeg_csd", "auto_examples/preprocessing/eog_artifact_histogram", "auto_examples/preprocessing/eog_regression", "auto_examples/preprocessing/find_ref_artifacts", "auto_examples/preprocessing/fnirs_artifact_removal", "auto_examples/preprocessing/ica_comparison", "auto_examples/preprocessing/index", "auto_examples/preprocessing/interpolate_bad_channels", "auto_examples/preprocessing/movement_compensation", "auto_examples/preprocessing/movement_detection", "auto_examples/preprocessing/muscle_detection", "auto_examples/preprocessing/muscle_ica", "auto_examples/preprocessing/otp", "auto_examples/preprocessing/sg_execution_times", "auto_examples/preprocessing/shift_evoked", "auto_examples/preprocessing/virtual_evoked", "auto_examples/preprocessing/xdawn_denoising", "auto_examples/simulation/index", "auto_examples/simulation/plot_stc_metrics", "auto_examples/simulation/sg_execution_times", "auto_examples/simulation/simulate_evoked_data", "auto_examples/simulation/simulate_raw_data", "auto_examples/simulation/simulated_raw_data_using_subject_anatomy", "auto_examples/simulation/source_simulator", "auto_examples/stats/cluster_stats_evoked", "auto_examples/stats/fdr_stats_evoked", "auto_examples/stats/index", "auto_examples/stats/linear_regression_raw", "auto_examples/stats/sensor_permutation_test", "auto_examples/stats/sensor_regression", "auto_examples/stats/sg_execution_times", "auto_examples/time_frequency/compute_csd", "auto_examples/time_frequency/compute_source_psd_epochs", "auto_examples/time_frequency/index", "auto_examples/time_frequency/sg_execution_times", "auto_examples/time_frequency/source_label_time_frequency", "auto_examples/time_frequency/source_power_spectrum", "auto_examples/time_frequency/source_power_spectrum_opm", "auto_examples/time_frequency/source_space_time_frequency", "auto_examples/time_frequency/temporal_whitening", "auto_examples/time_frequency/time_frequency_erds", "auto_examples/time_frequency/time_frequency_global_field_power", "auto_examples/time_frequency/time_frequency_simulated", "auto_examples/visualization/3d_to_2d", "auto_examples/visualization/brain", "auto_examples/visualization/channel_epochs_image", "auto_examples/visualization/eeg_on_scalp", "auto_examples/visualization/evoked_arrowmap", "auto_examples/visualization/evoked_topomap", "auto_examples/visualization/evoked_whitening", "auto_examples/visualization/index", "auto_examples/visualization/meg_sensors", "auto_examples/visualization/mne_helmet", "auto_examples/visualization/montage_sgskip", "auto_examples/visualization/parcellation", "auto_examples/visualization/publication_figure", "auto_examples/visualization/roi_erpimage_by_rt", "auto_examples/visualization/sensor_noise_level", "auto_examples/visualization/sg_execution_times", "auto_examples/visualization/ssp_projs_sensitivity_map", "auto_examples/visualization/topo_compare_conditions", "auto_examples/visualization/topo_customized", "auto_examples/visualization/xhemi", "auto_tutorials/clinical/20_seeg", "auto_tutorials/clinical/30_ecog", "auto_tutorials/clinical/60_sleep", "auto_tutorials/clinical/index", "auto_tutorials/clinical/sg_execution_times", "auto_tutorials/epochs/10_epochs_overview", "auto_tutorials/epochs/15_baseline_regression", "auto_tutorials/epochs/20_visualize_epochs", "auto_tutorials/epochs/30_epochs_metadata", "auto_tutorials/epochs/40_autogenerate_metadata", "auto_tutorials/epochs/50_epochs_to_data_frame", "auto_tutorials/epochs/60_make_fixed_length_epochs", "auto_tutorials/epochs/index", "auto_tutorials/epochs/sg_execution_times", "auto_tutorials/evoked/10_evoked_overview", "auto_tutorials/evoked/20_visualize_evoked", "auto_tutorials/evoked/30_eeg_erp", "auto_tutorials/evoked/40_whitened", "auto_tutorials/evoked/index", "auto_tutorials/evoked/sg_execution_times", "auto_tutorials/forward/10_background_freesurfer", "auto_tutorials/forward/20_source_alignment", "auto_tutorials/forward/25_automated_coreg", "auto_tutorials/forward/30_forward", "auto_tutorials/forward/35_eeg_no_mri", "auto_tutorials/forward/50_background_freesurfer_mne", "auto_tutorials/forward/80_fix_bem_in_blender", "auto_tutorials/forward/90_compute_covariance", "auto_tutorials/forward/index", "auto_tutorials/forward/sg_execution_times", "auto_tutorials/index", "auto_tutorials/intro/10_overview", "auto_tutorials/intro/15_inplace", "auto_tutorials/intro/20_events_from_raw", "auto_tutorials/intro/30_info", "auto_tutorials/intro/40_sensor_locations", "auto_tutorials/intro/50_configure_mne", "auto_tutorials/intro/70_report", "auto_tutorials/intro/index", "auto_tutorials/intro/sg_execution_times", "auto_tutorials/inverse/10_stc_class", "auto_tutorials/inverse/20_dipole_fit", "auto_tutorials/inverse/30_mne_dspm_loreta", "auto_tutorials/inverse/35_dipole_orientations", "auto_tutorials/inverse/40_mne_fixed_free", "auto_tutorials/inverse/50_beamformer_lcmv", "auto_tutorials/inverse/60_visualize_stc", "auto_tutorials/inverse/70_eeg_mri_coords", "auto_tutorials/inverse/80_brainstorm_phantom_elekta", "auto_tutorials/inverse/85_brainstorm_phantom_ctf", "auto_tutorials/inverse/90_phantom_4DBTi", "auto_tutorials/inverse/index", "auto_tutorials/inverse/sg_execution_times", "auto_tutorials/io/10_reading_meg_data", "auto_tutorials/io/20_reading_eeg_data", "auto_tutorials/io/30_reading_fnirs_data", "auto_tutorials/io/60_ctf_bst_auditory", "auto_tutorials/io/70_reading_eyetracking_data", "auto_tutorials/io/index", "auto_tutorials/io/sg_execution_times", "auto_tutorials/machine-learning/30_strf", "auto_tutorials/machine-learning/50_decoding", "auto_tutorials/machine-learning/index", "auto_tutorials/machine-learning/sg_execution_times", "auto_tutorials/preprocessing/10_preprocessing_overview", "auto_tutorials/preprocessing/15_handling_bad_channels", "auto_tutorials/preprocessing/20_rejecting_bad_data", "auto_tutorials/preprocessing/25_background_filtering", "auto_tutorials/preprocessing/30_filtering_resampling", "auto_tutorials/preprocessing/35_artifact_correction_regression", "auto_tutorials/preprocessing/40_artifact_correction_ica", "auto_tutorials/preprocessing/45_projectors_background", "auto_tutorials/preprocessing/50_artifact_correction_ssp", "auto_tutorials/preprocessing/55_setting_eeg_reference", "auto_tutorials/preprocessing/59_head_positions", "auto_tutorials/preprocessing/60_maxwell_filtering_sss", "auto_tutorials/preprocessing/70_fnirs_processing", "auto_tutorials/preprocessing/80_opm_processing", "auto_tutorials/preprocessing/90_eyetracking_data", "auto_tutorials/preprocessing/index", "auto_tutorials/preprocessing/sg_execution_times", "auto_tutorials/raw/10_raw_overview", "auto_tutorials/raw/20_event_arrays", "auto_tutorials/raw/30_annotate_raw", "auto_tutorials/raw/40_visualize_raw", "auto_tutorials/raw/index", "auto_tutorials/raw/sg_execution_times", "auto_tutorials/simulation/10_array_objs", "auto_tutorials/simulation/70_point_spread", "auto_tutorials/simulation/80_dics", "auto_tutorials/simulation/index", "auto_tutorials/simulation/sg_execution_times", "auto_tutorials/stats-sensor-space/10_background_stats", "auto_tutorials/stats-sensor-space/20_erp_stats", "auto_tutorials/stats-sensor-space/40_cluster_1samp_time_freq", "auto_tutorials/stats-sensor-space/50_cluster_between_time_freq", "auto_tutorials/stats-sensor-space/70_cluster_rmANOVA_time_freq", "auto_tutorials/stats-sensor-space/75_cluster_ftest_spatiotemporal", "auto_tutorials/stats-sensor-space/index", "auto_tutorials/stats-sensor-space/sg_execution_times", "auto_tutorials/stats-source-space/20_cluster_1samp_spatiotemporal", "auto_tutorials/stats-source-space/30_cluster_ftest_spatiotemporal", "auto_tutorials/stats-source-space/60_cluster_rmANOVA_spatiotemporal", "auto_tutorials/stats-source-space/index", "auto_tutorials/stats-source-space/sg_execution_times", "auto_tutorials/time-freq/10_spectrum_class", "auto_tutorials/time-freq/20_sensors_time_frequency", "auto_tutorials/time-freq/50_ssvep", "auto_tutorials/time-freq/index", "auto_tutorials/time-freq/sg_execution_times", "bibliography", "cited", "connectivity", "covariance", "creating_from_arrays", "datasets", "decoding", "events", "export", "file_io", "forward", "funding", "generated/commands", "generated/mne.AcqParserFIF", "generated/mne.Annotations", "generated/mne.BaseEpochs", "generated/mne.BiHemiLabel", "generated/mne.Covariance", "generated/mne.Dipole", "generated/mne.DipoleFixed", "generated/mne.Epochs", "generated/mne.EpochsArray", "generated/mne.Evoked", "generated/mne.EvokedArray", "generated/mne.Forward", "generated/mne.Info", "generated/mne.Label", "generated/mne.MixedSourceEstimate", "generated/mne.MixedVectorSourceEstimate", "generated/mne.Projection", "generated/mne.Report", "generated/mne.SourceEstimate", "generated/mne.SourceMorph", "generated/mne.SourceSpaces", "generated/mne.VectorSourceEstimate", "generated/mne.VolSourceEstimate", "generated/mne.VolVectorSourceEstimate", "generated/mne.add_reference_channels", "generated/mne.add_source_space_distances", "generated/mne.annotations_from_events", "generated/mne.apply_forward", "generated/mne.apply_forward_raw", "generated/mne.average_forward_solutions", "generated/mne.baseline.rescale", "generated/mne.beamformer.Beamformer", "generated/mne.beamformer.apply_dics", "generated/mne.beamformer.apply_dics_csd", "generated/mne.beamformer.apply_dics_epochs", "generated/mne.beamformer.apply_dics_tfr_epochs", "generated/mne.beamformer.apply_lcmv", "generated/mne.beamformer.apply_lcmv_cov", "generated/mne.beamformer.apply_lcmv_epochs", "generated/mne.beamformer.apply_lcmv_raw", "generated/mne.beamformer.make_dics", "generated/mne.beamformer.make_lcmv", "generated/mne.beamformer.make_lcmv_resolution_matrix", "generated/mne.beamformer.rap_music", "generated/mne.beamformer.read_beamformer", "generated/mne.beamformer.trap_music", "generated/mne.bem.ConductorModel", "generated/mne.bem.convert_flash_mris", "generated/mne.bem.distance_to_bem", "generated/mne.bem.fit_sphere_to_headshape", "generated/mne.bem.get_fitting_dig", "generated/mne.bem.make_flash_bem", "generated/mne.bem.make_scalp_surfaces", "generated/mne.bem.make_watershed_bem", "generated/mne.channel_indices_by_type", "generated/mne.channel_type", "generated/mne.channels.DigMontage", "generated/mne.channels.Layout", "generated/mne.channels.combine_channels", "generated/mne.channels.compute_dev_head_t", "generated/mne.channels.compute_native_head_t", "generated/mne.channels.equalize_channels", "generated/mne.channels.find_ch_adjacency", "generated/mne.channels.find_layout", "generated/mne.channels.fix_mag_coil_types", "generated/mne.channels.generate_2d_layout", "generated/mne.channels.get_builtin_ch_adjacencies", "generated/mne.channels.get_builtin_montages", "generated/mne.channels.make_1020_channel_selections", "generated/mne.channels.make_dig_montage", "generated/mne.channels.make_eeg_layout", "generated/mne.channels.make_grid_layout", "generated/mne.channels.make_standard_montage", "generated/mne.channels.read_ch_adjacency", "generated/mne.channels.read_custom_montage", "generated/mne.channels.read_dig_captrak", "generated/mne.channels.read_dig_dat", "generated/mne.channels.read_dig_egi", "generated/mne.channels.read_dig_fif", "generated/mne.channels.read_dig_hpts", "generated/mne.channels.read_dig_localite", "generated/mne.channels.read_dig_polhemus_isotrak", "generated/mne.channels.read_layout", "generated/mne.channels.read_polhemus_fastscan", "generated/mne.channels.rename_channels", "generated/mne.chpi.compute_chpi_amplitudes", "generated/mne.chpi.compute_chpi_locs", "generated/mne.chpi.compute_chpi_snr", "generated/mne.chpi.compute_head_pos", "generated/mne.chpi.extract_chpi_locs_ctf", "generated/mne.chpi.extract_chpi_locs_kit", "generated/mne.chpi.filter_chpi", "generated/mne.chpi.get_active_chpi", "generated/mne.chpi.get_chpi_info", "generated/mne.chpi.head_pos_to_trans_rot_t", "generated/mne.chpi.read_head_pos", "generated/mne.chpi.write_head_pos", "generated/mne.combine_evoked", "generated/mne.compute_covariance", "generated/mne.compute_proj_epochs", "generated/mne.compute_proj_evoked", "generated/mne.compute_proj_raw", "generated/mne.compute_rank", "generated/mne.compute_raw_covariance", "generated/mne.compute_source_morph", "generated/mne.concatenate_epochs", "generated/mne.concatenate_events", "generated/mne.concatenate_raws", "generated/mne.convert_forward_solution", "generated/mne.coreg.Coregistration", "generated/mne.coreg.estimate_head_mri_t", "generated/mne.coreg.get_mni_fiducials", "generated/mne.count_events", "generated/mne.cov.compute_whitener", "generated/mne.cov.prepare_noise_cov", "generated/mne.cov.regularize", "generated/mne.create_default_subject", "generated/mne.create_info", "generated/mne.cuda.get_cuda_memory", "generated/mne.cuda.init_cuda", "generated/mne.cuda.set_cuda_device", "generated/mne.datasets.brainstorm.bst_auditory.data_path", "generated/mne.datasets.brainstorm.bst_raw.data_path", "generated/mne.datasets.brainstorm.bst_resting.data_path", "generated/mne.datasets.eegbci.load_data", "generated/mne.datasets.eegbci.standardize", "generated/mne.datasets.epilepsy_ecog.data_path", "generated/mne.datasets.erp_core.data_path", "generated/mne.datasets.eyelink.data_path", "generated/mne.datasets.fetch_aparc_sub_parcellation", "generated/mne.datasets.fetch_dataset", "generated/mne.datasets.fetch_fsaverage", "generated/mne.datasets.fetch_hcp_mmp_parcellation", "generated/mne.datasets.fetch_infant_template", "generated/mne.datasets.fetch_phantom", "generated/mne.datasets.fnirs_motor.data_path", "generated/mne.datasets.has_dataset", "generated/mne.datasets.hf_sef.data_path", "generated/mne.datasets.kiloword.data_path", "generated/mne.datasets.limo.load_data", "generated/mne.datasets.misc.data_path", "generated/mne.datasets.mtrf.data_path", "generated/mne.datasets.multimodal.data_path", "generated/mne.datasets.opm.data_path", "generated/mne.datasets.phantom_4dbti.data_path", "generated/mne.datasets.refmeg_noise.data_path", "generated/mne.datasets.sample.data_path", "generated/mne.datasets.sleep_physionet.age.fetch_data", "generated/mne.datasets.sleep_physionet.temazepam.fetch_data", "generated/mne.datasets.somato.data_path", "generated/mne.datasets.spm_face.data_path", "generated/mne.datasets.ssvep.data_path", "generated/mne.datasets.ucl_opm_auditory.data_path", "generated/mne.datasets.visual_92_categories.data_path", "generated/mne.decimate_surface", "generated/mne.decoding.CSP", "generated/mne.decoding.EMS", "generated/mne.decoding.FilterEstimator", "generated/mne.decoding.GeneralizingEstimator", "generated/mne.decoding.LinearModel", "generated/mne.decoding.PSDEstimator", "generated/mne.decoding.ReceptiveField", "generated/mne.decoding.SPoC", "generated/mne.decoding.SSD", "generated/mne.decoding.Scaler", "generated/mne.decoding.SlidingEstimator", "generated/mne.decoding.TemporalFilter", "generated/mne.decoding.TimeDelayingRidge", "generated/mne.decoding.TimeFrequency", "generated/mne.decoding.UnsupervisedSpatialFilter", "generated/mne.decoding.Vectorizer", "generated/mne.decoding.compute_ems", "generated/mne.decoding.cross_val_multiscore", "generated/mne.decoding.get_coef", "generated/mne.dig_mri_distances", "generated/mne.dipole.get_phantom_dipoles", "generated/mne.epochs.average_movements", "generated/mne.epochs.combine_event_ids", "generated/mne.epochs.equalize_epoch_counts", "generated/mne.epochs.make_metadata", "generated/mne.equalize_channels", "generated/mne.event.define_target_events", "generated/mne.event.match_event_names", "generated/mne.event.shift_time_events", "generated/mne.events_from_annotations", "generated/mne.export.export_epochs", "generated/mne.export.export_evokeds", "generated/mne.export.export_evokeds_mff", "generated/mne.export.export_raw", "generated/mne.extract_label_time_course", "generated/mne.filter.construct_iir_filter", "generated/mne.filter.create_filter", "generated/mne.filter.estimate_ringing_samples", "generated/mne.filter.filter_data", "generated/mne.filter.notch_filter", "generated/mne.filter.resample", "generated/mne.find_events", "generated/mne.find_stim_steps", "generated/mne.fit_dipole", "generated/mne.forward.compute_depth_prior", "generated/mne.forward.compute_orient_prior", "generated/mne.forward.restrict_forward_to_label", "generated/mne.forward.restrict_forward_to_stc", "generated/mne.get_config", "generated/mne.get_config_path", "generated/mne.get_head_surf", "generated/mne.get_meg_helmet_surf", "generated/mne.get_montage_volume_labels", "generated/mne.get_volume_labels_from_aseg", "generated/mne.get_volume_labels_from_src", "generated/mne.grade_to_tris", "generated/mne.grade_to_vertices", "generated/mne.grand_average", "generated/mne.grow_labels", "generated/mne.gui.coregistration", "generated/mne.gui.locate_ieeg", "generated/mne.head_to_mni", "generated/mne.head_to_mri", "generated/mne.inverse_sparse.gamma_map", "generated/mne.inverse_sparse.make_stc_from_dipoles", "generated/mne.inverse_sparse.mixed_norm", "generated/mne.inverse_sparse.tf_mixed_norm", "generated/mne.io.BaseRaw", "generated/mne.io.Raw", "generated/mne.io.RawArray", "generated/mne.io.anonymize_info", "generated/mne.io.kit.read_mrk", "generated/mne.io.read_fiducials", "generated/mne.io.read_info", "generated/mne.io.read_raw", "generated/mne.io.read_raw_artemis123", "generated/mne.io.read_raw_bdf", "generated/mne.io.read_raw_boxy", "generated/mne.io.read_raw_brainvision", "generated/mne.io.read_raw_bti", "generated/mne.io.read_raw_cnt", "generated/mne.io.read_raw_ctf", "generated/mne.io.read_raw_curry", "generated/mne.io.read_raw_edf", "generated/mne.io.read_raw_eeglab", "generated/mne.io.read_raw_egi", "generated/mne.io.read_raw_eximia", "generated/mne.io.read_raw_eyelink", "generated/mne.io.read_raw_fieldtrip", "generated/mne.io.read_raw_fif", "generated/mne.io.read_raw_fil", "generated/mne.io.read_raw_gdf", "generated/mne.io.read_raw_hitachi", "generated/mne.io.read_raw_kit", "generated/mne.io.read_raw_nedf", "generated/mne.io.read_raw_nicolet", "generated/mne.io.read_raw_nihon", "generated/mne.io.read_raw_nirx", "generated/mne.io.read_raw_persyst", "generated/mne.io.read_raw_snirf", "generated/mne.io.show_fiff", "generated/mne.io.write_fiducials", "generated/mne.label.select_sources", "generated/mne.label_sign_flip", "generated/mne.labels_to_stc", "generated/mne.make_ad_hoc_cov", "generated/mne.make_bem_model", "generated/mne.make_bem_solution", "generated/mne.make_field_map", "generated/mne.make_fixed_length_epochs", "generated/mne.make_fixed_length_events", "generated/mne.make_forward_dipole", "generated/mne.make_forward_solution", "generated/mne.make_sphere_model", "generated/mne.match_channel_orders", "generated/mne.merge_events", "generated/mne.minimum_norm.InverseOperator", "generated/mne.minimum_norm.apply_inverse", "generated/mne.minimum_norm.apply_inverse_cov", "generated/mne.minimum_norm.apply_inverse_epochs", "generated/mne.minimum_norm.apply_inverse_raw", "generated/mne.minimum_norm.apply_inverse_tfr_epochs", "generated/mne.minimum_norm.compute_rank_inverse", "generated/mne.minimum_norm.compute_source_psd", "generated/mne.minimum_norm.compute_source_psd_epochs", "generated/mne.minimum_norm.estimate_snr", "generated/mne.minimum_norm.get_cross_talk", "generated/mne.minimum_norm.get_point_spread", "generated/mne.minimum_norm.make_inverse_operator", "generated/mne.minimum_norm.make_inverse_resolution_matrix", "generated/mne.minimum_norm.prepare_inverse_operator", "generated/mne.minimum_norm.read_inverse_operator", "generated/mne.minimum_norm.resolution_metrics", "generated/mne.minimum_norm.source_band_induced_power", "generated/mne.minimum_norm.source_induced_power", "generated/mne.minimum_norm.write_inverse_operator", "generated/mne.morph_labels", "generated/mne.morph_source_spaces", "generated/mne.open_docs", "generated/mne.open_report", "generated/mne.parse_config", "generated/mne.pick_channels", "generated/mne.pick_channels_cov", "generated/mne.pick_channels_forward", "generated/mne.pick_channels_regexp", "generated/mne.pick_events", "generated/mne.pick_info", "generated/mne.pick_types", "generated/mne.pick_types_forward", "generated/mne.preprocessing.EOGRegression", "generated/mne.preprocessing.ICA", "generated/mne.preprocessing.Xdawn", "generated/mne.preprocessing.annotate_amplitude", "generated/mne.preprocessing.annotate_break", "generated/mne.preprocessing.annotate_movement", "generated/mne.preprocessing.annotate_muscle_zscore", "generated/mne.preprocessing.annotate_nan", "generated/mne.preprocessing.compute_average_dev_head_t", "generated/mne.preprocessing.compute_bridged_electrodes", "generated/mne.preprocessing.compute_current_source_density", "generated/mne.preprocessing.compute_fine_calibration", "generated/mne.preprocessing.compute_maxwell_basis", "generated/mne.preprocessing.compute_proj_ecg", "generated/mne.preprocessing.compute_proj_eog", "generated/mne.preprocessing.compute_proj_hfc", "generated/mne.preprocessing.corrmap", "generated/mne.preprocessing.cortical_signal_suppression", "generated/mne.preprocessing.create_ecg_epochs", "generated/mne.preprocessing.create_eog_epochs", "generated/mne.preprocessing.equalize_bads", "generated/mne.preprocessing.eyetracking.set_channel_types_eyetrack", "generated/mne.preprocessing.find_bad_channels_maxwell", "generated/mne.preprocessing.find_ecg_events", "generated/mne.preprocessing.find_eog_events", "generated/mne.preprocessing.fix_stim_artifact", "generated/mne.preprocessing.ica_find_ecg_events", "generated/mne.preprocessing.ica_find_eog_events", "generated/mne.preprocessing.ieeg.make_montage_volume", "generated/mne.preprocessing.ieeg.project_sensors_onto_brain", "generated/mne.preprocessing.ieeg.warp_montage", "generated/mne.preprocessing.infomax", "generated/mne.preprocessing.interpolate_bridged_electrodes", "generated/mne.preprocessing.maxwell_filter", "generated/mne.preprocessing.maxwell_filter_prepare_emptyroom", "generated/mne.preprocessing.nirs.beer_lambert_law", "generated/mne.preprocessing.nirs.optical_density", "generated/mne.preprocessing.nirs.scalp_coupling_index", "generated/mne.preprocessing.nirs.short_channels", "generated/mne.preprocessing.nirs.source_detector_distances", "generated/mne.preprocessing.nirs.temporal_derivative_distribution_repair", "generated/mne.preprocessing.oversampled_temporal_projection", "generated/mne.preprocessing.peak_finder", "generated/mne.preprocessing.read_eog_regression", "generated/mne.preprocessing.read_fine_calibration", "generated/mne.preprocessing.read_ica", "generated/mne.preprocessing.read_ica_eeglab", "generated/mne.preprocessing.realign_raw", "generated/mne.preprocessing.regress_artifact", "generated/mne.preprocessing.write_fine_calibration", "generated/mne.random_parcellation", "generated/mne.read_annotations", "generated/mne.read_bem_solution", "generated/mne.read_bem_surfaces", "generated/mne.read_cov", "generated/mne.read_dipole", "generated/mne.read_epochs", "generated/mne.read_epochs_eeglab", "generated/mne.read_epochs_fieldtrip", "generated/mne.read_epochs_kit", "generated/mne.read_events", "generated/mne.read_evoked_besa", "generated/mne.read_evoked_fieldtrip", "generated/mne.read_evokeds", "generated/mne.read_evokeds_mff", "generated/mne.read_forward_solution", "generated/mne.read_freesurfer_lut", "generated/mne.read_label", "generated/mne.read_labels_from_annot", "generated/mne.read_lta", "generated/mne.read_morph_map", "generated/mne.read_proj", "generated/mne.read_reject_parameters", "generated/mne.read_source_estimate", "generated/mne.read_source_morph", "generated/mne.read_source_spaces", "generated/mne.read_surface", "generated/mne.read_talxfm", "generated/mne.read_trans", "generated/mne.read_tri", "generated/mne.read_vectorview_selection", "generated/mne.rename_channels", "generated/mne.scale_bem", "generated/mne.scale_labels", "generated/mne.scale_mri", "generated/mne.scale_source_space", "generated/mne.sensitivity_map", "generated/mne.set_bipolar_reference", "generated/mne.set_cache_dir", "generated/mne.set_config", "generated/mne.set_eeg_reference", "generated/mne.set_log_file", "generated/mne.set_log_level", "generated/mne.set_memmap_min_size", "generated/mne.setup_source_space", "generated/mne.setup_volume_source_space", "generated/mne.simulation.SourceSimulator", "generated/mne.simulation.add_chpi", "generated/mne.simulation.add_ecg", "generated/mne.simulation.add_eog", "generated/mne.simulation.add_noise", "generated/mne.simulation.metrics.cosine_score", "generated/mne.simulation.metrics.f1_score", "generated/mne.simulation.metrics.peak_position_error", "generated/mne.simulation.metrics.precision_score", "generated/mne.simulation.metrics.recall_score", "generated/mne.simulation.metrics.region_localization_error", "generated/mne.simulation.metrics.roc_auc_score", "generated/mne.simulation.metrics.spatial_deviation_error", "generated/mne.simulation.select_source_in_label", "generated/mne.simulation.simulate_evoked", "generated/mne.simulation.simulate_raw", "generated/mne.simulation.simulate_sparse_stc", "generated/mne.simulation.simulate_stc", "generated/mne.source_space.compute_distance_to_sensors", "generated/mne.source_space.get_decimated_surfaces", "generated/mne.spatial_dist_adjacency", "generated/mne.spatial_inter_hemi_adjacency", "generated/mne.spatial_src_adjacency", "generated/mne.spatial_tris_adjacency", "generated/mne.spatio_temporal_dist_adjacency", "generated/mne.spatio_temporal_src_adjacency", "generated/mne.spatio_temporal_tris_adjacency", "generated/mne.split_label", "generated/mne.stats.bonferroni_correction", "generated/mne.stats.bootstrap_confidence_interval", "generated/mne.stats.combine_adjacency", "generated/mne.stats.f_mway_rm", "generated/mne.stats.f_oneway", "generated/mne.stats.f_threshold_mway_rm", "generated/mne.stats.fdr_correction", "generated/mne.stats.linear_regression", "generated/mne.stats.linear_regression_raw", "generated/mne.stats.permutation_cluster_1samp_test", "generated/mne.stats.permutation_cluster_test", "generated/mne.stats.permutation_t_test", "generated/mne.stats.spatio_temporal_cluster_1samp_test", "generated/mne.stats.spatio_temporal_cluster_test", "generated/mne.stats.summarize_clusters_stc", "generated/mne.stats.ttest_1samp_no_p", "generated/mne.stats.ttest_ind_no_p", "generated/mne.stc_near_sensors", "generated/mne.stc_to_label", "generated/mne.surface.complete_surface_info", "generated/mne.surface.read_curvature", "generated/mne.sys_info", "generated/mne.time_frequency.AverageTFR", "generated/mne.time_frequency.CrossSpectralDensity", "generated/mne.time_frequency.EpochsSpectrum", "generated/mne.time_frequency.EpochsTFR", "generated/mne.time_frequency.Spectrum", "generated/mne.time_frequency.csd_array_fourier", "generated/mne.time_frequency.csd_array_morlet", "generated/mne.time_frequency.csd_array_multitaper", "generated/mne.time_frequency.csd_fourier", "generated/mne.time_frequency.csd_morlet", "generated/mne.time_frequency.csd_multitaper", "generated/mne.time_frequency.csd_tfr", "generated/mne.time_frequency.dpss_windows", "generated/mne.time_frequency.fit_iir_model_raw", "generated/mne.time_frequency.fwhm", "generated/mne.time_frequency.istft", "generated/mne.time_frequency.morlet", "generated/mne.time_frequency.pick_channels_csd", "generated/mne.time_frequency.psd_array_multitaper", "generated/mne.time_frequency.psd_array_welch", "generated/mne.time_frequency.read_csd", "generated/mne.time_frequency.read_spectrum", "generated/mne.time_frequency.read_tfrs", "generated/mne.time_frequency.stft", "generated/mne.time_frequency.stftfreq", "generated/mne.time_frequency.tfr.cwt", "generated/mne.time_frequency.tfr.morlet", "generated/mne.time_frequency.tfr_array_morlet", "generated/mne.time_frequency.tfr_array_multitaper", "generated/mne.time_frequency.tfr_array_stockwell", "generated/mne.time_frequency.tfr_morlet", "generated/mne.time_frequency.tfr_multitaper", "generated/mne.time_frequency.tfr_stockwell", "generated/mne.time_frequency.write_tfrs", "generated/mne.transform_surface_to", "generated/mne.transforms.Transform", "generated/mne.transforms.apply_volume_registration", "generated/mne.transforms.apply_volume_registration_points", "generated/mne.transforms.compute_volume_registration", "generated/mne.transforms.quat_to_rot", "generated/mne.transforms.read_ras_mni_t", "generated/mne.transforms.rot_to_quat", "generated/mne.use_coil_def", "generated/mne.use_log_level", "generated/mne.utils.deprecated", "generated/mne.utils.warn", "generated/mne.verbose", "generated/mne.vertex_to_mni", "generated/mne.viz.Brain", "generated/mne.viz.ClickableImage", "generated/mne.viz.Figure3D", "generated/mne.viz.add_background_image", "generated/mne.viz.centers_to_edges", "generated/mne.viz.circular_layout", "generated/mne.viz.close_3d_figure", "generated/mne.viz.close_all_3d_figures", "generated/mne.viz.compare_fiff", "generated/mne.viz.create_3d_figure", "generated/mne.viz.get_3d_backend", "generated/mne.viz.get_brain_class", "generated/mne.viz.get_browser_backend", "generated/mne.viz.iter_topography", "generated/mne.viz.link_brains", "generated/mne.viz.mne_analyze_colormap", "generated/mne.viz.plot_alignment", "generated/mne.viz.plot_arrowmap", "generated/mne.viz.plot_bem", "generated/mne.viz.plot_brain_colorbar", "generated/mne.viz.plot_bridged_electrodes", "generated/mne.viz.plot_ch_adjacency", "generated/mne.viz.plot_channel_labels_circle", "generated/mne.viz.plot_chpi_snr", "generated/mne.viz.plot_compare_evokeds", "generated/mne.viz.plot_cov", "generated/mne.viz.plot_csd", "generated/mne.viz.plot_dipole_amplitudes", "generated/mne.viz.plot_dipole_locations", "generated/mne.viz.plot_drop_log", "generated/mne.viz.plot_epochs", "generated/mne.viz.plot_epochs_image", "generated/mne.viz.plot_epochs_psd_topomap", "generated/mne.viz.plot_events", "generated/mne.viz.plot_evoked", "generated/mne.viz.plot_evoked_field", "generated/mne.viz.plot_evoked_image", "generated/mne.viz.plot_evoked_joint", "generated/mne.viz.plot_evoked_topo", "generated/mne.viz.plot_evoked_topomap", "generated/mne.viz.plot_evoked_white", "generated/mne.viz.plot_filter", "generated/mne.viz.plot_head_positions", "generated/mne.viz.plot_ica_components", "generated/mne.viz.plot_ica_overlay", "generated/mne.viz.plot_ica_properties", "generated/mne.viz.plot_ica_scores", "generated/mne.viz.plot_ica_sources", "generated/mne.viz.plot_ideal_filter", "generated/mne.viz.plot_layout", "generated/mne.viz.plot_montage", "generated/mne.viz.plot_projs_joint", "generated/mne.viz.plot_projs_topomap", "generated/mne.viz.plot_raw", "generated/mne.viz.plot_raw_psd", "generated/mne.viz.plot_regression_weights", "generated/mne.viz.plot_sensors", "generated/mne.viz.plot_snr_estimate", "generated/mne.viz.plot_source_estimates", "generated/mne.viz.plot_sparse_source_estimates", "generated/mne.viz.plot_tfr_topomap", "generated/mne.viz.plot_topo_image_epochs", "generated/mne.viz.plot_topomap", "generated/mne.viz.plot_vector_source_estimates", "generated/mne.viz.plot_volume_source_estimates", "generated/mne.viz.set_3d_backend", "generated/mne.viz.set_3d_options", "generated/mne.viz.set_3d_title", "generated/mne.viz.set_3d_view", "generated/mne.viz.set_browser_backend", "generated/mne.viz.snapshot_brain_montage", "generated/mne.viz.use_3d_backend", "generated/mne.viz.use_browser_backend", "generated/mne.what", "generated/mne.write_bem_solution", "generated/mne.write_bem_surfaces", "generated/mne.write_cov", "generated/mne.write_events", "generated/mne.write_evokeds", "generated/mne.write_forward_solution", "generated/mne.write_head_bem", "generated/mne.write_label", "generated/mne.write_labels_to_annot", "generated/mne.write_proj", "generated/mne.write_source_spaces", "generated/mne.write_surface", "generated/mne.write_trans", "glossary", "index", "install/advanced", "install/check_installation", "install/contributing", "install/freesurfer", "install/index", "install/installers", "install/manual_install", "install/manual_install_python", "install/mne_c", "install/mne_tools_suite", "install/updating", "inverse", "logging", "martinos", "mne_cpp", "most_used_classes", "mri", "overview/cite", "overview/cookbook", "overview/datasets_index", "overview/design_philosophy", "overview/development", "overview/faq", "overview/get_help", "overview/governance", "overview/implementation", "overview/index", "overview/learn_python", "overview/matlab", "overview/migrating", "overview/people", "overview/roadmap", "preprocessing", "python_reference", "reading_raw_data", "realtime", "report", "sensor_space", "simulation", "source_space", "statistics", "time_frequency", "visualization", "whats_new"], "filenames": ["auto_examples/connectivity/index.rst", "auto_examples/datasets/brainstorm_data.rst", "auto_examples/datasets/hf_sef_data.rst", "auto_examples/datasets/index.rst", "auto_examples/datasets/limo_data.rst", "auto_examples/datasets/opm_data.rst", "auto_examples/datasets/sg_execution_times.rst", "auto_examples/datasets/spm_faces_dataset_sgskip.rst", "auto_examples/decoding/decoding_csp_eeg.rst", "auto_examples/decoding/decoding_csp_timefreq.rst", "auto_examples/decoding/decoding_rsa_sgskip.rst", "auto_examples/decoding/decoding_spatio_temporal_source.rst", "auto_examples/decoding/decoding_spoc_CMC.rst", "auto_examples/decoding/decoding_time_generalization_conditions.rst", "auto_examples/decoding/decoding_unsupervised_spatial_filter.rst", "auto_examples/decoding/decoding_xdawn_eeg.rst", "auto_examples/decoding/ems_filtering.rst", "auto_examples/decoding/index.rst", "auto_examples/decoding/linear_model_patterns.rst", "auto_examples/decoding/receptive_field_mtrf.rst", "auto_examples/decoding/sg_execution_times.rst", "auto_examples/decoding/ssd_spatial_filters.rst", "auto_examples/forward/forward_sensitivity_maps.rst", "auto_examples/forward/index.rst", "auto_examples/forward/left_cerebellum_volume_source.rst", "auto_examples/forward/sg_execution_times.rst", "auto_examples/forward/source_space_morphing.rst", "auto_examples/index.rst", "auto_examples/inverse/compute_mne_inverse_epochs_in_label.rst", "auto_examples/inverse/compute_mne_inverse_raw_in_label.rst", "auto_examples/inverse/compute_mne_inverse_volume.rst", "auto_examples/inverse/custom_inverse_solver.rst", "auto_examples/inverse/dics_epochs.rst", "auto_examples/inverse/dics_source_power.rst", "auto_examples/inverse/evoked_ers_source_power.rst", "auto_examples/inverse/gamma_map_inverse.rst", "auto_examples/inverse/index.rst", "auto_examples/inverse/label_activation_from_stc.rst", "auto_examples/inverse/label_from_stc.rst", "auto_examples/inverse/label_source_activations.rst", "auto_examples/inverse/mixed_norm_inverse.rst", "auto_examples/inverse/mixed_source_space_inverse.rst", "auto_examples/inverse/mne_cov_power.rst", "auto_examples/inverse/morph_surface_stc.rst", "auto_examples/inverse/morph_volume_stc.rst", "auto_examples/inverse/multi_dipole_model.rst", "auto_examples/inverse/multidict_reweighted_tfmxne.rst", "auto_examples/inverse/psf_ctf_label_leakage.rst", "auto_examples/inverse/psf_ctf_vertices.rst", "auto_examples/inverse/psf_ctf_vertices_lcmv.rst", "auto_examples/inverse/psf_volume.rst", "auto_examples/inverse/rap_music.rst", "auto_examples/inverse/read_inverse.rst", "auto_examples/inverse/read_stc.rst", "auto_examples/inverse/resolution_metrics.rst", "auto_examples/inverse/resolution_metrics_eegmeg.rst", "auto_examples/inverse/sg_execution_times.rst", "auto_examples/inverse/snr_estimate.rst", "auto_examples/inverse/source_space_snr.rst", "auto_examples/inverse/time_frequency_mixed_norm_inverse.rst", "auto_examples/inverse/trap_music.rst", "auto_examples/inverse/vector_mne_solution.rst", "auto_examples/io/elekta_epochs.rst", "auto_examples/io/index.rst", "auto_examples/io/read_neo_format.rst", "auto_examples/io/read_noise_covariance_matrix.rst", "auto_examples/io/read_xdf.rst", "auto_examples/io/sg_execution_times.rst", "auto_examples/preprocessing/contralateral_referencing.rst", "auto_examples/preprocessing/css.rst", "auto_examples/preprocessing/define_target_events.rst", "auto_examples/preprocessing/eeg_bridging.rst", "auto_examples/preprocessing/eeg_csd.rst", "auto_examples/preprocessing/eog_artifact_histogram.rst", "auto_examples/preprocessing/eog_regression.rst", "auto_examples/preprocessing/find_ref_artifacts.rst", "auto_examples/preprocessing/fnirs_artifact_removal.rst", "auto_examples/preprocessing/ica_comparison.rst", "auto_examples/preprocessing/index.rst", "auto_examples/preprocessing/interpolate_bad_channels.rst", "auto_examples/preprocessing/movement_compensation.rst", "auto_examples/preprocessing/movement_detection.rst", "auto_examples/preprocessing/muscle_detection.rst", "auto_examples/preprocessing/muscle_ica.rst", "auto_examples/preprocessing/otp.rst", "auto_examples/preprocessing/sg_execution_times.rst", "auto_examples/preprocessing/shift_evoked.rst", "auto_examples/preprocessing/virtual_evoked.rst", "auto_examples/preprocessing/xdawn_denoising.rst", "auto_examples/simulation/index.rst", "auto_examples/simulation/plot_stc_metrics.rst", "auto_examples/simulation/sg_execution_times.rst", "auto_examples/simulation/simulate_evoked_data.rst", "auto_examples/simulation/simulate_raw_data.rst", "auto_examples/simulation/simulated_raw_data_using_subject_anatomy.rst", "auto_examples/simulation/source_simulator.rst", "auto_examples/stats/cluster_stats_evoked.rst", "auto_examples/stats/fdr_stats_evoked.rst", "auto_examples/stats/index.rst", "auto_examples/stats/linear_regression_raw.rst", "auto_examples/stats/sensor_permutation_test.rst", "auto_examples/stats/sensor_regression.rst", "auto_examples/stats/sg_execution_times.rst", "auto_examples/time_frequency/compute_csd.rst", "auto_examples/time_frequency/compute_source_psd_epochs.rst", "auto_examples/time_frequency/index.rst", "auto_examples/time_frequency/sg_execution_times.rst", "auto_examples/time_frequency/source_label_time_frequency.rst", "auto_examples/time_frequency/source_power_spectrum.rst", "auto_examples/time_frequency/source_power_spectrum_opm.rst", "auto_examples/time_frequency/source_space_time_frequency.rst", "auto_examples/time_frequency/temporal_whitening.rst", "auto_examples/time_frequency/time_frequency_erds.rst", "auto_examples/time_frequency/time_frequency_global_field_power.rst", "auto_examples/time_frequency/time_frequency_simulated.rst", "auto_examples/visualization/3d_to_2d.rst", "auto_examples/visualization/brain.rst", "auto_examples/visualization/channel_epochs_image.rst", "auto_examples/visualization/eeg_on_scalp.rst", "auto_examples/visualization/evoked_arrowmap.rst", "auto_examples/visualization/evoked_topomap.rst", "auto_examples/visualization/evoked_whitening.rst", "auto_examples/visualization/index.rst", "auto_examples/visualization/meg_sensors.rst", "auto_examples/visualization/mne_helmet.rst", "auto_examples/visualization/montage_sgskip.rst", "auto_examples/visualization/parcellation.rst", "auto_examples/visualization/publication_figure.rst", "auto_examples/visualization/roi_erpimage_by_rt.rst", "auto_examples/visualization/sensor_noise_level.rst", "auto_examples/visualization/sg_execution_times.rst", "auto_examples/visualization/ssp_projs_sensitivity_map.rst", "auto_examples/visualization/topo_compare_conditions.rst", "auto_examples/visualization/topo_customized.rst", "auto_examples/visualization/xhemi.rst", "auto_tutorials/clinical/20_seeg.rst", "auto_tutorials/clinical/30_ecog.rst", "auto_tutorials/clinical/60_sleep.rst", "auto_tutorials/clinical/index.rst", "auto_tutorials/clinical/sg_execution_times.rst", "auto_tutorials/epochs/10_epochs_overview.rst", "auto_tutorials/epochs/15_baseline_regression.rst", "auto_tutorials/epochs/20_visualize_epochs.rst", "auto_tutorials/epochs/30_epochs_metadata.rst", "auto_tutorials/epochs/40_autogenerate_metadata.rst", "auto_tutorials/epochs/50_epochs_to_data_frame.rst", "auto_tutorials/epochs/60_make_fixed_length_epochs.rst", "auto_tutorials/epochs/index.rst", "auto_tutorials/epochs/sg_execution_times.rst", "auto_tutorials/evoked/10_evoked_overview.rst", "auto_tutorials/evoked/20_visualize_evoked.rst", "auto_tutorials/evoked/30_eeg_erp.rst", "auto_tutorials/evoked/40_whitened.rst", "auto_tutorials/evoked/index.rst", "auto_tutorials/evoked/sg_execution_times.rst", "auto_tutorials/forward/10_background_freesurfer.rst", "auto_tutorials/forward/20_source_alignment.rst", "auto_tutorials/forward/25_automated_coreg.rst", "auto_tutorials/forward/30_forward.rst", "auto_tutorials/forward/35_eeg_no_mri.rst", "auto_tutorials/forward/50_background_freesurfer_mne.rst", "auto_tutorials/forward/80_fix_bem_in_blender.rst", "auto_tutorials/forward/90_compute_covariance.rst", "auto_tutorials/forward/index.rst", "auto_tutorials/forward/sg_execution_times.rst", "auto_tutorials/index.rst", "auto_tutorials/intro/10_overview.rst", "auto_tutorials/intro/15_inplace.rst", "auto_tutorials/intro/20_events_from_raw.rst", "auto_tutorials/intro/30_info.rst", "auto_tutorials/intro/40_sensor_locations.rst", "auto_tutorials/intro/50_configure_mne.rst", "auto_tutorials/intro/70_report.rst", "auto_tutorials/intro/index.rst", "auto_tutorials/intro/sg_execution_times.rst", "auto_tutorials/inverse/10_stc_class.rst", "auto_tutorials/inverse/20_dipole_fit.rst", "auto_tutorials/inverse/30_mne_dspm_loreta.rst", "auto_tutorials/inverse/35_dipole_orientations.rst", "auto_tutorials/inverse/40_mne_fixed_free.rst", "auto_tutorials/inverse/50_beamformer_lcmv.rst", "auto_tutorials/inverse/60_visualize_stc.rst", "auto_tutorials/inverse/70_eeg_mri_coords.rst", "auto_tutorials/inverse/80_brainstorm_phantom_elekta.rst", "auto_tutorials/inverse/85_brainstorm_phantom_ctf.rst", "auto_tutorials/inverse/90_phantom_4DBTi.rst", "auto_tutorials/inverse/index.rst", "auto_tutorials/inverse/sg_execution_times.rst", "auto_tutorials/io/10_reading_meg_data.rst", "auto_tutorials/io/20_reading_eeg_data.rst", "auto_tutorials/io/30_reading_fnirs_data.rst", "auto_tutorials/io/60_ctf_bst_auditory.rst", "auto_tutorials/io/70_reading_eyetracking_data.rst", "auto_tutorials/io/index.rst", "auto_tutorials/io/sg_execution_times.rst", "auto_tutorials/machine-learning/30_strf.rst", "auto_tutorials/machine-learning/50_decoding.rst", "auto_tutorials/machine-learning/index.rst", "auto_tutorials/machine-learning/sg_execution_times.rst", "auto_tutorials/preprocessing/10_preprocessing_overview.rst", "auto_tutorials/preprocessing/15_handling_bad_channels.rst", "auto_tutorials/preprocessing/20_rejecting_bad_data.rst", "auto_tutorials/preprocessing/25_background_filtering.rst", "auto_tutorials/preprocessing/30_filtering_resampling.rst", "auto_tutorials/preprocessing/35_artifact_correction_regression.rst", "auto_tutorials/preprocessing/40_artifact_correction_ica.rst", "auto_tutorials/preprocessing/45_projectors_background.rst", "auto_tutorials/preprocessing/50_artifact_correction_ssp.rst", "auto_tutorials/preprocessing/55_setting_eeg_reference.rst", "auto_tutorials/preprocessing/59_head_positions.rst", "auto_tutorials/preprocessing/60_maxwell_filtering_sss.rst", "auto_tutorials/preprocessing/70_fnirs_processing.rst", "auto_tutorials/preprocessing/80_opm_processing.rst", "auto_tutorials/preprocessing/90_eyetracking_data.rst", "auto_tutorials/preprocessing/index.rst", "auto_tutorials/preprocessing/sg_execution_times.rst", "auto_tutorials/raw/10_raw_overview.rst", "auto_tutorials/raw/20_event_arrays.rst", "auto_tutorials/raw/30_annotate_raw.rst", "auto_tutorials/raw/40_visualize_raw.rst", "auto_tutorials/raw/index.rst", "auto_tutorials/raw/sg_execution_times.rst", "auto_tutorials/simulation/10_array_objs.rst", "auto_tutorials/simulation/70_point_spread.rst", "auto_tutorials/simulation/80_dics.rst", "auto_tutorials/simulation/index.rst", "auto_tutorials/simulation/sg_execution_times.rst", "auto_tutorials/stats-sensor-space/10_background_stats.rst", "auto_tutorials/stats-sensor-space/20_erp_stats.rst", "auto_tutorials/stats-sensor-space/40_cluster_1samp_time_freq.rst", "auto_tutorials/stats-sensor-space/50_cluster_between_time_freq.rst", "auto_tutorials/stats-sensor-space/70_cluster_rmANOVA_time_freq.rst", "auto_tutorials/stats-sensor-space/75_cluster_ftest_spatiotemporal.rst", "auto_tutorials/stats-sensor-space/index.rst", "auto_tutorials/stats-sensor-space/sg_execution_times.rst", "auto_tutorials/stats-source-space/20_cluster_1samp_spatiotemporal.rst", "auto_tutorials/stats-source-space/30_cluster_ftest_spatiotemporal.rst", "auto_tutorials/stats-source-space/60_cluster_rmANOVA_spatiotemporal.rst", "auto_tutorials/stats-source-space/index.rst", "auto_tutorials/stats-source-space/sg_execution_times.rst", "auto_tutorials/time-freq/10_spectrum_class.rst", "auto_tutorials/time-freq/20_sensors_time_frequency.rst", "auto_tutorials/time-freq/50_ssvep.rst", "auto_tutorials/time-freq/index.rst", "auto_tutorials/time-freq/sg_execution_times.rst", "bibliography.rst", "cited.rst", "connectivity.rst", "covariance.rst", "creating_from_arrays.rst", "datasets.rst", "decoding.rst", "events.rst", "export.rst", "file_io.rst", "forward.rst", "funding.rst", "generated/commands.rst", "generated/mne.AcqParserFIF.rst", "generated/mne.Annotations.rst", "generated/mne.BaseEpochs.rst", "generated/mne.BiHemiLabel.rst", "generated/mne.Covariance.rst", "generated/mne.Dipole.rst", "generated/mne.DipoleFixed.rst", "generated/mne.Epochs.rst", "generated/mne.EpochsArray.rst", "generated/mne.Evoked.rst", "generated/mne.EvokedArray.rst", "generated/mne.Forward.rst", "generated/mne.Info.rst", "generated/mne.Label.rst", "generated/mne.MixedSourceEstimate.rst", "generated/mne.MixedVectorSourceEstimate.rst", "generated/mne.Projection.rst", "generated/mne.Report.rst", "generated/mne.SourceEstimate.rst", "generated/mne.SourceMorph.rst", "generated/mne.SourceSpaces.rst", "generated/mne.VectorSourceEstimate.rst", "generated/mne.VolSourceEstimate.rst", "generated/mne.VolVectorSourceEstimate.rst", "generated/mne.add_reference_channels.rst", "generated/mne.add_source_space_distances.rst", "generated/mne.annotations_from_events.rst", "generated/mne.apply_forward.rst", "generated/mne.apply_forward_raw.rst", "generated/mne.average_forward_solutions.rst", "generated/mne.baseline.rescale.rst", "generated/mne.beamformer.Beamformer.rst", "generated/mne.beamformer.apply_dics.rst", "generated/mne.beamformer.apply_dics_csd.rst", "generated/mne.beamformer.apply_dics_epochs.rst", "generated/mne.beamformer.apply_dics_tfr_epochs.rst", "generated/mne.beamformer.apply_lcmv.rst", "generated/mne.beamformer.apply_lcmv_cov.rst", "generated/mne.beamformer.apply_lcmv_epochs.rst", "generated/mne.beamformer.apply_lcmv_raw.rst", "generated/mne.beamformer.make_dics.rst", "generated/mne.beamformer.make_lcmv.rst", "generated/mne.beamformer.make_lcmv_resolution_matrix.rst", "generated/mne.beamformer.rap_music.rst", "generated/mne.beamformer.read_beamformer.rst", "generated/mne.beamformer.trap_music.rst", "generated/mne.bem.ConductorModel.rst", "generated/mne.bem.convert_flash_mris.rst", "generated/mne.bem.distance_to_bem.rst", "generated/mne.bem.fit_sphere_to_headshape.rst", "generated/mne.bem.get_fitting_dig.rst", "generated/mne.bem.make_flash_bem.rst", "generated/mne.bem.make_scalp_surfaces.rst", "generated/mne.bem.make_watershed_bem.rst", "generated/mne.channel_indices_by_type.rst", "generated/mne.channel_type.rst", "generated/mne.channels.DigMontage.rst", "generated/mne.channels.Layout.rst", "generated/mne.channels.combine_channels.rst", "generated/mne.channels.compute_dev_head_t.rst", "generated/mne.channels.compute_native_head_t.rst", "generated/mne.channels.equalize_channels.rst", "generated/mne.channels.find_ch_adjacency.rst", "generated/mne.channels.find_layout.rst", "generated/mne.channels.fix_mag_coil_types.rst", "generated/mne.channels.generate_2d_layout.rst", "generated/mne.channels.get_builtin_ch_adjacencies.rst", "generated/mne.channels.get_builtin_montages.rst", "generated/mne.channels.make_1020_channel_selections.rst", "generated/mne.channels.make_dig_montage.rst", "generated/mne.channels.make_eeg_layout.rst", "generated/mne.channels.make_grid_layout.rst", "generated/mne.channels.make_standard_montage.rst", "generated/mne.channels.read_ch_adjacency.rst", "generated/mne.channels.read_custom_montage.rst", "generated/mne.channels.read_dig_captrak.rst", "generated/mne.channels.read_dig_dat.rst", "generated/mne.channels.read_dig_egi.rst", "generated/mne.channels.read_dig_fif.rst", "generated/mne.channels.read_dig_hpts.rst", "generated/mne.channels.read_dig_localite.rst", "generated/mne.channels.read_dig_polhemus_isotrak.rst", "generated/mne.channels.read_layout.rst", "generated/mne.channels.read_polhemus_fastscan.rst", "generated/mne.channels.rename_channels.rst", "generated/mne.chpi.compute_chpi_amplitudes.rst", "generated/mne.chpi.compute_chpi_locs.rst", "generated/mne.chpi.compute_chpi_snr.rst", "generated/mne.chpi.compute_head_pos.rst", "generated/mne.chpi.extract_chpi_locs_ctf.rst", "generated/mne.chpi.extract_chpi_locs_kit.rst", "generated/mne.chpi.filter_chpi.rst", "generated/mne.chpi.get_active_chpi.rst", "generated/mne.chpi.get_chpi_info.rst", "generated/mne.chpi.head_pos_to_trans_rot_t.rst", "generated/mne.chpi.read_head_pos.rst", "generated/mne.chpi.write_head_pos.rst", "generated/mne.combine_evoked.rst", "generated/mne.compute_covariance.rst", "generated/mne.compute_proj_epochs.rst", "generated/mne.compute_proj_evoked.rst", "generated/mne.compute_proj_raw.rst", "generated/mne.compute_rank.rst", "generated/mne.compute_raw_covariance.rst", "generated/mne.compute_source_morph.rst", "generated/mne.concatenate_epochs.rst", "generated/mne.concatenate_events.rst", "generated/mne.concatenate_raws.rst", "generated/mne.convert_forward_solution.rst", "generated/mne.coreg.Coregistration.rst", "generated/mne.coreg.estimate_head_mri_t.rst", "generated/mne.coreg.get_mni_fiducials.rst", "generated/mne.count_events.rst", "generated/mne.cov.compute_whitener.rst", "generated/mne.cov.prepare_noise_cov.rst", "generated/mne.cov.regularize.rst", "generated/mne.create_default_subject.rst", "generated/mne.create_info.rst", "generated/mne.cuda.get_cuda_memory.rst", "generated/mne.cuda.init_cuda.rst", "generated/mne.cuda.set_cuda_device.rst", "generated/mne.datasets.brainstorm.bst_auditory.data_path.rst", "generated/mne.datasets.brainstorm.bst_raw.data_path.rst", "generated/mne.datasets.brainstorm.bst_resting.data_path.rst", "generated/mne.datasets.eegbci.load_data.rst", "generated/mne.datasets.eegbci.standardize.rst", "generated/mne.datasets.epilepsy_ecog.data_path.rst", "generated/mne.datasets.erp_core.data_path.rst", "generated/mne.datasets.eyelink.data_path.rst", "generated/mne.datasets.fetch_aparc_sub_parcellation.rst", "generated/mne.datasets.fetch_dataset.rst", "generated/mne.datasets.fetch_fsaverage.rst", "generated/mne.datasets.fetch_hcp_mmp_parcellation.rst", "generated/mne.datasets.fetch_infant_template.rst", "generated/mne.datasets.fetch_phantom.rst", "generated/mne.datasets.fnirs_motor.data_path.rst", "generated/mne.datasets.has_dataset.rst", "generated/mne.datasets.hf_sef.data_path.rst", "generated/mne.datasets.kiloword.data_path.rst", "generated/mne.datasets.limo.load_data.rst", "generated/mne.datasets.misc.data_path.rst", "generated/mne.datasets.mtrf.data_path.rst", "generated/mne.datasets.multimodal.data_path.rst", "generated/mne.datasets.opm.data_path.rst", "generated/mne.datasets.phantom_4dbti.data_path.rst", "generated/mne.datasets.refmeg_noise.data_path.rst", "generated/mne.datasets.sample.data_path.rst", "generated/mne.datasets.sleep_physionet.age.fetch_data.rst", "generated/mne.datasets.sleep_physionet.temazepam.fetch_data.rst", "generated/mne.datasets.somato.data_path.rst", "generated/mne.datasets.spm_face.data_path.rst", "generated/mne.datasets.ssvep.data_path.rst", "generated/mne.datasets.ucl_opm_auditory.data_path.rst", "generated/mne.datasets.visual_92_categories.data_path.rst", "generated/mne.decimate_surface.rst", "generated/mne.decoding.CSP.rst", "generated/mne.decoding.EMS.rst", "generated/mne.decoding.FilterEstimator.rst", "generated/mne.decoding.GeneralizingEstimator.rst", "generated/mne.decoding.LinearModel.rst", "generated/mne.decoding.PSDEstimator.rst", "generated/mne.decoding.ReceptiveField.rst", "generated/mne.decoding.SPoC.rst", "generated/mne.decoding.SSD.rst", "generated/mne.decoding.Scaler.rst", "generated/mne.decoding.SlidingEstimator.rst", "generated/mne.decoding.TemporalFilter.rst", "generated/mne.decoding.TimeDelayingRidge.rst", "generated/mne.decoding.TimeFrequency.rst", "generated/mne.decoding.UnsupervisedSpatialFilter.rst", "generated/mne.decoding.Vectorizer.rst", "generated/mne.decoding.compute_ems.rst", "generated/mne.decoding.cross_val_multiscore.rst", "generated/mne.decoding.get_coef.rst", "generated/mne.dig_mri_distances.rst", "generated/mne.dipole.get_phantom_dipoles.rst", "generated/mne.epochs.average_movements.rst", "generated/mne.epochs.combine_event_ids.rst", "generated/mne.epochs.equalize_epoch_counts.rst", "generated/mne.epochs.make_metadata.rst", "generated/mne.equalize_channels.rst", "generated/mne.event.define_target_events.rst", "generated/mne.event.match_event_names.rst", "generated/mne.event.shift_time_events.rst", "generated/mne.events_from_annotations.rst", "generated/mne.export.export_epochs.rst", "generated/mne.export.export_evokeds.rst", "generated/mne.export.export_evokeds_mff.rst", "generated/mne.export.export_raw.rst", "generated/mne.extract_label_time_course.rst", "generated/mne.filter.construct_iir_filter.rst", "generated/mne.filter.create_filter.rst", "generated/mne.filter.estimate_ringing_samples.rst", "generated/mne.filter.filter_data.rst", "generated/mne.filter.notch_filter.rst", "generated/mne.filter.resample.rst", "generated/mne.find_events.rst", "generated/mne.find_stim_steps.rst", "generated/mne.fit_dipole.rst", "generated/mne.forward.compute_depth_prior.rst", "generated/mne.forward.compute_orient_prior.rst", "generated/mne.forward.restrict_forward_to_label.rst", "generated/mne.forward.restrict_forward_to_stc.rst", "generated/mne.get_config.rst", "generated/mne.get_config_path.rst", "generated/mne.get_head_surf.rst", "generated/mne.get_meg_helmet_surf.rst", "generated/mne.get_montage_volume_labels.rst", "generated/mne.get_volume_labels_from_aseg.rst", "generated/mne.get_volume_labels_from_src.rst", "generated/mne.grade_to_tris.rst", "generated/mne.grade_to_vertices.rst", "generated/mne.grand_average.rst", "generated/mne.grow_labels.rst", "generated/mne.gui.coregistration.rst", "generated/mne.gui.locate_ieeg.rst", "generated/mne.head_to_mni.rst", "generated/mne.head_to_mri.rst", "generated/mne.inverse_sparse.gamma_map.rst", "generated/mne.inverse_sparse.make_stc_from_dipoles.rst", "generated/mne.inverse_sparse.mixed_norm.rst", "generated/mne.inverse_sparse.tf_mixed_norm.rst", "generated/mne.io.BaseRaw.rst", "generated/mne.io.Raw.rst", "generated/mne.io.RawArray.rst", "generated/mne.io.anonymize_info.rst", "generated/mne.io.kit.read_mrk.rst", "generated/mne.io.read_fiducials.rst", "generated/mne.io.read_info.rst", "generated/mne.io.read_raw.rst", "generated/mne.io.read_raw_artemis123.rst", "generated/mne.io.read_raw_bdf.rst", "generated/mne.io.read_raw_boxy.rst", "generated/mne.io.read_raw_brainvision.rst", "generated/mne.io.read_raw_bti.rst", "generated/mne.io.read_raw_cnt.rst", "generated/mne.io.read_raw_ctf.rst", "generated/mne.io.read_raw_curry.rst", "generated/mne.io.read_raw_edf.rst", "generated/mne.io.read_raw_eeglab.rst", "generated/mne.io.read_raw_egi.rst", "generated/mne.io.read_raw_eximia.rst", "generated/mne.io.read_raw_eyelink.rst", "generated/mne.io.read_raw_fieldtrip.rst", "generated/mne.io.read_raw_fif.rst", "generated/mne.io.read_raw_fil.rst", "generated/mne.io.read_raw_gdf.rst", "generated/mne.io.read_raw_hitachi.rst", "generated/mne.io.read_raw_kit.rst", "generated/mne.io.read_raw_nedf.rst", "generated/mne.io.read_raw_nicolet.rst", "generated/mne.io.read_raw_nihon.rst", "generated/mne.io.read_raw_nirx.rst", "generated/mne.io.read_raw_persyst.rst", "generated/mne.io.read_raw_snirf.rst", "generated/mne.io.show_fiff.rst", "generated/mne.io.write_fiducials.rst", "generated/mne.label.select_sources.rst", "generated/mne.label_sign_flip.rst", "generated/mne.labels_to_stc.rst", "generated/mne.make_ad_hoc_cov.rst", "generated/mne.make_bem_model.rst", "generated/mne.make_bem_solution.rst", "generated/mne.make_field_map.rst", "generated/mne.make_fixed_length_epochs.rst", "generated/mne.make_fixed_length_events.rst", "generated/mne.make_forward_dipole.rst", "generated/mne.make_forward_solution.rst", "generated/mne.make_sphere_model.rst", "generated/mne.match_channel_orders.rst", "generated/mne.merge_events.rst", "generated/mne.minimum_norm.InverseOperator.rst", "generated/mne.minimum_norm.apply_inverse.rst", "generated/mne.minimum_norm.apply_inverse_cov.rst", "generated/mne.minimum_norm.apply_inverse_epochs.rst", "generated/mne.minimum_norm.apply_inverse_raw.rst", "generated/mne.minimum_norm.apply_inverse_tfr_epochs.rst", "generated/mne.minimum_norm.compute_rank_inverse.rst", "generated/mne.minimum_norm.compute_source_psd.rst", "generated/mne.minimum_norm.compute_source_psd_epochs.rst", "generated/mne.minimum_norm.estimate_snr.rst", "generated/mne.minimum_norm.get_cross_talk.rst", "generated/mne.minimum_norm.get_point_spread.rst", "generated/mne.minimum_norm.make_inverse_operator.rst", "generated/mne.minimum_norm.make_inverse_resolution_matrix.rst", "generated/mne.minimum_norm.prepare_inverse_operator.rst", "generated/mne.minimum_norm.read_inverse_operator.rst", "generated/mne.minimum_norm.resolution_metrics.rst", "generated/mne.minimum_norm.source_band_induced_power.rst", "generated/mne.minimum_norm.source_induced_power.rst", "generated/mne.minimum_norm.write_inverse_operator.rst", "generated/mne.morph_labels.rst", "generated/mne.morph_source_spaces.rst", "generated/mne.open_docs.rst", "generated/mne.open_report.rst", "generated/mne.parse_config.rst", "generated/mne.pick_channels.rst", "generated/mne.pick_channels_cov.rst", "generated/mne.pick_channels_forward.rst", "generated/mne.pick_channels_regexp.rst", "generated/mne.pick_events.rst", "generated/mne.pick_info.rst", "generated/mne.pick_types.rst", "generated/mne.pick_types_forward.rst", "generated/mne.preprocessing.EOGRegression.rst", "generated/mne.preprocessing.ICA.rst", "generated/mne.preprocessing.Xdawn.rst", "generated/mne.preprocessing.annotate_amplitude.rst", "generated/mne.preprocessing.annotate_break.rst", "generated/mne.preprocessing.annotate_movement.rst", "generated/mne.preprocessing.annotate_muscle_zscore.rst", "generated/mne.preprocessing.annotate_nan.rst", "generated/mne.preprocessing.compute_average_dev_head_t.rst", "generated/mne.preprocessing.compute_bridged_electrodes.rst", "generated/mne.preprocessing.compute_current_source_density.rst", "generated/mne.preprocessing.compute_fine_calibration.rst", "generated/mne.preprocessing.compute_maxwell_basis.rst", "generated/mne.preprocessing.compute_proj_ecg.rst", "generated/mne.preprocessing.compute_proj_eog.rst", "generated/mne.preprocessing.compute_proj_hfc.rst", "generated/mne.preprocessing.corrmap.rst", "generated/mne.preprocessing.cortical_signal_suppression.rst", "generated/mne.preprocessing.create_ecg_epochs.rst", "generated/mne.preprocessing.create_eog_epochs.rst", "generated/mne.preprocessing.equalize_bads.rst", "generated/mne.preprocessing.eyetracking.set_channel_types_eyetrack.rst", "generated/mne.preprocessing.find_bad_channels_maxwell.rst", "generated/mne.preprocessing.find_ecg_events.rst", "generated/mne.preprocessing.find_eog_events.rst", "generated/mne.preprocessing.fix_stim_artifact.rst", "generated/mne.preprocessing.ica_find_ecg_events.rst", "generated/mne.preprocessing.ica_find_eog_events.rst", "generated/mne.preprocessing.ieeg.make_montage_volume.rst", "generated/mne.preprocessing.ieeg.project_sensors_onto_brain.rst", "generated/mne.preprocessing.ieeg.warp_montage.rst", "generated/mne.preprocessing.infomax.rst", "generated/mne.preprocessing.interpolate_bridged_electrodes.rst", "generated/mne.preprocessing.maxwell_filter.rst", "generated/mne.preprocessing.maxwell_filter_prepare_emptyroom.rst", "generated/mne.preprocessing.nirs.beer_lambert_law.rst", "generated/mne.preprocessing.nirs.optical_density.rst", "generated/mne.preprocessing.nirs.scalp_coupling_index.rst", "generated/mne.preprocessing.nirs.short_channels.rst", "generated/mne.preprocessing.nirs.source_detector_distances.rst", "generated/mne.preprocessing.nirs.temporal_derivative_distribution_repair.rst", "generated/mne.preprocessing.oversampled_temporal_projection.rst", "generated/mne.preprocessing.peak_finder.rst", "generated/mne.preprocessing.read_eog_regression.rst", "generated/mne.preprocessing.read_fine_calibration.rst", "generated/mne.preprocessing.read_ica.rst", "generated/mne.preprocessing.read_ica_eeglab.rst", "generated/mne.preprocessing.realign_raw.rst", "generated/mne.preprocessing.regress_artifact.rst", "generated/mne.preprocessing.write_fine_calibration.rst", "generated/mne.random_parcellation.rst", "generated/mne.read_annotations.rst", "generated/mne.read_bem_solution.rst", "generated/mne.read_bem_surfaces.rst", "generated/mne.read_cov.rst", "generated/mne.read_dipole.rst", "generated/mne.read_epochs.rst", "generated/mne.read_epochs_eeglab.rst", "generated/mne.read_epochs_fieldtrip.rst", "generated/mne.read_epochs_kit.rst", "generated/mne.read_events.rst", "generated/mne.read_evoked_besa.rst", "generated/mne.read_evoked_fieldtrip.rst", "generated/mne.read_evokeds.rst", "generated/mne.read_evokeds_mff.rst", "generated/mne.read_forward_solution.rst", "generated/mne.read_freesurfer_lut.rst", "generated/mne.read_label.rst", "generated/mne.read_labels_from_annot.rst", "generated/mne.read_lta.rst", "generated/mne.read_morph_map.rst", "generated/mne.read_proj.rst", "generated/mne.read_reject_parameters.rst", "generated/mne.read_source_estimate.rst", "generated/mne.read_source_morph.rst", "generated/mne.read_source_spaces.rst", "generated/mne.read_surface.rst", "generated/mne.read_talxfm.rst", "generated/mne.read_trans.rst", "generated/mne.read_tri.rst", "generated/mne.read_vectorview_selection.rst", "generated/mne.rename_channels.rst", "generated/mne.scale_bem.rst", "generated/mne.scale_labels.rst", "generated/mne.scale_mri.rst", "generated/mne.scale_source_space.rst", "generated/mne.sensitivity_map.rst", "generated/mne.set_bipolar_reference.rst", "generated/mne.set_cache_dir.rst", "generated/mne.set_config.rst", "generated/mne.set_eeg_reference.rst", "generated/mne.set_log_file.rst", "generated/mne.set_log_level.rst", "generated/mne.set_memmap_min_size.rst", "generated/mne.setup_source_space.rst", "generated/mne.setup_volume_source_space.rst", "generated/mne.simulation.SourceSimulator.rst", "generated/mne.simulation.add_chpi.rst", "generated/mne.simulation.add_ecg.rst", "generated/mne.simulation.add_eog.rst", "generated/mne.simulation.add_noise.rst", "generated/mne.simulation.metrics.cosine_score.rst", "generated/mne.simulation.metrics.f1_score.rst", "generated/mne.simulation.metrics.peak_position_error.rst", "generated/mne.simulation.metrics.precision_score.rst", "generated/mne.simulation.metrics.recall_score.rst", "generated/mne.simulation.metrics.region_localization_error.rst", "generated/mne.simulation.metrics.roc_auc_score.rst", "generated/mne.simulation.metrics.spatial_deviation_error.rst", "generated/mne.simulation.select_source_in_label.rst", "generated/mne.simulation.simulate_evoked.rst", "generated/mne.simulation.simulate_raw.rst", "generated/mne.simulation.simulate_sparse_stc.rst", "generated/mne.simulation.simulate_stc.rst", "generated/mne.source_space.compute_distance_to_sensors.rst", "generated/mne.source_space.get_decimated_surfaces.rst", "generated/mne.spatial_dist_adjacency.rst", "generated/mne.spatial_inter_hemi_adjacency.rst", "generated/mne.spatial_src_adjacency.rst", "generated/mne.spatial_tris_adjacency.rst", "generated/mne.spatio_temporal_dist_adjacency.rst", "generated/mne.spatio_temporal_src_adjacency.rst", "generated/mne.spatio_temporal_tris_adjacency.rst", "generated/mne.split_label.rst", "generated/mne.stats.bonferroni_correction.rst", "generated/mne.stats.bootstrap_confidence_interval.rst", "generated/mne.stats.combine_adjacency.rst", "generated/mne.stats.f_mway_rm.rst", "generated/mne.stats.f_oneway.rst", "generated/mne.stats.f_threshold_mway_rm.rst", "generated/mne.stats.fdr_correction.rst", "generated/mne.stats.linear_regression.rst", "generated/mne.stats.linear_regression_raw.rst", "generated/mne.stats.permutation_cluster_1samp_test.rst", "generated/mne.stats.permutation_cluster_test.rst", "generated/mne.stats.permutation_t_test.rst", "generated/mne.stats.spatio_temporal_cluster_1samp_test.rst", "generated/mne.stats.spatio_temporal_cluster_test.rst", "generated/mne.stats.summarize_clusters_stc.rst", "generated/mne.stats.ttest_1samp_no_p.rst", "generated/mne.stats.ttest_ind_no_p.rst", "generated/mne.stc_near_sensors.rst", "generated/mne.stc_to_label.rst", "generated/mne.surface.complete_surface_info.rst", "generated/mne.surface.read_curvature.rst", "generated/mne.sys_info.rst", "generated/mne.time_frequency.AverageTFR.rst", "generated/mne.time_frequency.CrossSpectralDensity.rst", "generated/mne.time_frequency.EpochsSpectrum.rst", "generated/mne.time_frequency.EpochsTFR.rst", "generated/mne.time_frequency.Spectrum.rst", "generated/mne.time_frequency.csd_array_fourier.rst", "generated/mne.time_frequency.csd_array_morlet.rst", "generated/mne.time_frequency.csd_array_multitaper.rst", "generated/mne.time_frequency.csd_fourier.rst", "generated/mne.time_frequency.csd_morlet.rst", "generated/mne.time_frequency.csd_multitaper.rst", "generated/mne.time_frequency.csd_tfr.rst", "generated/mne.time_frequency.dpss_windows.rst", "generated/mne.time_frequency.fit_iir_model_raw.rst", "generated/mne.time_frequency.fwhm.rst", "generated/mne.time_frequency.istft.rst", "generated/mne.time_frequency.morlet.rst", "generated/mne.time_frequency.pick_channels_csd.rst", "generated/mne.time_frequency.psd_array_multitaper.rst", "generated/mne.time_frequency.psd_array_welch.rst", "generated/mne.time_frequency.read_csd.rst", "generated/mne.time_frequency.read_spectrum.rst", "generated/mne.time_frequency.read_tfrs.rst", "generated/mne.time_frequency.stft.rst", "generated/mne.time_frequency.stftfreq.rst", "generated/mne.time_frequency.tfr.cwt.rst", "generated/mne.time_frequency.tfr.morlet.rst", "generated/mne.time_frequency.tfr_array_morlet.rst", "generated/mne.time_frequency.tfr_array_multitaper.rst", "generated/mne.time_frequency.tfr_array_stockwell.rst", "generated/mne.time_frequency.tfr_morlet.rst", "generated/mne.time_frequency.tfr_multitaper.rst", "generated/mne.time_frequency.tfr_stockwell.rst", "generated/mne.time_frequency.write_tfrs.rst", "generated/mne.transform_surface_to.rst", "generated/mne.transforms.Transform.rst", "generated/mne.transforms.apply_volume_registration.rst", "generated/mne.transforms.apply_volume_registration_points.rst", "generated/mne.transforms.compute_volume_registration.rst", "generated/mne.transforms.quat_to_rot.rst", "generated/mne.transforms.read_ras_mni_t.rst", "generated/mne.transforms.rot_to_quat.rst", "generated/mne.use_coil_def.rst", "generated/mne.use_log_level.rst", "generated/mne.utils.deprecated.rst", "generated/mne.utils.warn.rst", "generated/mne.verbose.rst", "generated/mne.vertex_to_mni.rst", "generated/mne.viz.Brain.rst", "generated/mne.viz.ClickableImage.rst", "generated/mne.viz.Figure3D.rst", "generated/mne.viz.add_background_image.rst", "generated/mne.viz.centers_to_edges.rst", "generated/mne.viz.circular_layout.rst", "generated/mne.viz.close_3d_figure.rst", "generated/mne.viz.close_all_3d_figures.rst", "generated/mne.viz.compare_fiff.rst", "generated/mne.viz.create_3d_figure.rst", "generated/mne.viz.get_3d_backend.rst", "generated/mne.viz.get_brain_class.rst", "generated/mne.viz.get_browser_backend.rst", "generated/mne.viz.iter_topography.rst", "generated/mne.viz.link_brains.rst", "generated/mne.viz.mne_analyze_colormap.rst", "generated/mne.viz.plot_alignment.rst", "generated/mne.viz.plot_arrowmap.rst", "generated/mne.viz.plot_bem.rst", "generated/mne.viz.plot_brain_colorbar.rst", "generated/mne.viz.plot_bridged_electrodes.rst", "generated/mne.viz.plot_ch_adjacency.rst", "generated/mne.viz.plot_channel_labels_circle.rst", "generated/mne.viz.plot_chpi_snr.rst", "generated/mne.viz.plot_compare_evokeds.rst", "generated/mne.viz.plot_cov.rst", "generated/mne.viz.plot_csd.rst", "generated/mne.viz.plot_dipole_amplitudes.rst", "generated/mne.viz.plot_dipole_locations.rst", "generated/mne.viz.plot_drop_log.rst", "generated/mne.viz.plot_epochs.rst", "generated/mne.viz.plot_epochs_image.rst", "generated/mne.viz.plot_epochs_psd_topomap.rst", "generated/mne.viz.plot_events.rst", "generated/mne.viz.plot_evoked.rst", "generated/mne.viz.plot_evoked_field.rst", "generated/mne.viz.plot_evoked_image.rst", "generated/mne.viz.plot_evoked_joint.rst", "generated/mne.viz.plot_evoked_topo.rst", "generated/mne.viz.plot_evoked_topomap.rst", "generated/mne.viz.plot_evoked_white.rst", "generated/mne.viz.plot_filter.rst", "generated/mne.viz.plot_head_positions.rst", "generated/mne.viz.plot_ica_components.rst", "generated/mne.viz.plot_ica_overlay.rst", "generated/mne.viz.plot_ica_properties.rst", "generated/mne.viz.plot_ica_scores.rst", "generated/mne.viz.plot_ica_sources.rst", "generated/mne.viz.plot_ideal_filter.rst", "generated/mne.viz.plot_layout.rst", "generated/mne.viz.plot_montage.rst", "generated/mne.viz.plot_projs_joint.rst", "generated/mne.viz.plot_projs_topomap.rst", "generated/mne.viz.plot_raw.rst", "generated/mne.viz.plot_raw_psd.rst", "generated/mne.viz.plot_regression_weights.rst", "generated/mne.viz.plot_sensors.rst", "generated/mne.viz.plot_snr_estimate.rst", "generated/mne.viz.plot_source_estimates.rst", "generated/mne.viz.plot_sparse_source_estimates.rst", "generated/mne.viz.plot_tfr_topomap.rst", "generated/mne.viz.plot_topo_image_epochs.rst", "generated/mne.viz.plot_topomap.rst", "generated/mne.viz.plot_vector_source_estimates.rst", "generated/mne.viz.plot_volume_source_estimates.rst", "generated/mne.viz.set_3d_backend.rst", "generated/mne.viz.set_3d_options.rst", "generated/mne.viz.set_3d_title.rst", "generated/mne.viz.set_3d_view.rst", "generated/mne.viz.set_browser_backend.rst", "generated/mne.viz.snapshot_brain_montage.rst", "generated/mne.viz.use_3d_backend.rst", "generated/mne.viz.use_browser_backend.rst", "generated/mne.what.rst", "generated/mne.write_bem_solution.rst", "generated/mne.write_bem_surfaces.rst", "generated/mne.write_cov.rst", "generated/mne.write_events.rst", "generated/mne.write_evokeds.rst", "generated/mne.write_forward_solution.rst", "generated/mne.write_head_bem.rst", "generated/mne.write_label.rst", "generated/mne.write_labels_to_annot.rst", "generated/mne.write_proj.rst", "generated/mne.write_source_spaces.rst", "generated/mne.write_surface.rst", "generated/mne.write_trans.rst", "glossary.rst", "index.rst", "install/advanced.rst", "install/check_installation.rst", "install/contributing.rst", "install/freesurfer.rst", "install/index.rst", "install/installers.rst", "install/manual_install.rst", "install/manual_install_python.rst", "install/mne_c.rst", "install/mne_tools_suite.rst", "install/updating.rst", "inverse.rst", "logging.rst", "martinos.rst", "mne_cpp.rst", "most_used_classes.rst", "mri.rst", "overview/cite.rst", "overview/cookbook.rst", "overview/datasets_index.rst", "overview/design_philosophy.rst", "overview/development.rst", "overview/faq.rst", "overview/get_help.rst", "overview/governance.rst", "overview/implementation.rst", "overview/index.rst", "overview/learn_python.rst", "overview/matlab.rst", "overview/migrating.rst", "overview/people.rst", "overview/roadmap.rst", "preprocessing.rst", "python_reference.rst", "reading_raw_data.rst", "realtime.rst", "report.rst", "sensor_space.rst", "simulation.rst", "source_space.rst", "statistics.rst", "time_frequency.rst", "visualization.rst", "whats_new.rst"], "titles": ["Connectivity Analysis Examples", "Brainstorm raw (median nerve) dataset", "HF-SEF dataset", "Examples on open datasets", "Single trial linear regression analysis with the LIMO dataset", "Optically pumped magnetometer (OPM) data", "Computation times", "From raw data to dSPM on SPM Faces dataset", "Motor imagery decoding from EEG data using the Common Spatial Pattern (CSP)", "Decoding in time-frequency space using Common Spatial Patterns (CSP)", "Representational Similarity Analysis", "Decoding source space data", "Continuous Target Decoding with SPoC", "Decoding sensor space data with generalization across time and conditions", "Analysis of evoked response using ICA and PCA reduction techniques", "XDAWN Decoding From EEG data", "Compute effect-matched-spatial filtering (EMS)", "Machine Learning (Decoding, Encoding, and MVPA)", "Linear classifier on sensor data with plot patterns and filters", "Receptive Field Estimation and Prediction", "Computation times", "Compute Spectro-Spatial Decomposition (SSD) spatial filters", "Display sensitivity maps for EEG and MEG sensors", "Forward modeling", "Generate a left cerebellum volume source space", "Computation times", "Use source space morphing", "Examples Gallery", "Compute MNE-dSPM inverse solution on single epochs", "Compute sLORETA inverse solution on raw data", "Compute MNE-dSPM inverse solution on evoked data in volume source space", "Source localization with a custom inverse solver", "Compute source level time-frequency timecourses using a DICS beamformer", "Compute source power using DICS beamformer", "Compute evoked ERS source power using DICS, LCMV beamformer, and dSPM", "Compute a sparse inverse solution using the Gamma-MAP empirical Bayesian method", "Inverse problem and source analysis", "Extracting time course from source_estimate object", "Generate a functional label from source estimates", "Extracting the time series of activations in a label", "Compute sparse inverse solution with mixed norm: MxNE and irMxNE", "Compute MNE inverse solution on evoked data with a mixed source space", "Compute source power estimate by projecting the covariance with MNE", "Morph surface source estimate", "Morph volumetric source estimate", "Computing source timecourses with an XFit-like multi-dipole model", "Compute iterative reweighted TF-MxNE with multiscale time-frequency dictionary", "Visualize source leakage among labels using a circular graph", "Plot point-spread functions (PSFs) and cross-talk functions (CTFs)", "Compute cross-talk functions for LCMV beamformers", "Plot point-spread functions (PSFs) for a volume", "Compute Rap-Music on evoked data", "Reading an inverse operator", "Reading an STC file", "Compute spatial resolution metrics in source space", "Compute spatial resolution metrics to compare MEG with EEG+MEG", "Computation times", "Estimate data SNR using an inverse", "Computing source space SNR", "Compute MxNE with time-frequency sparse prior", "Compute Trap-Music on evoked data", "Plotting the full vector-valued MNE solution", "Getting averaging info from .fif files", "Input/Output", "How to use data in neural ensemble (NEO) format", "Reading/Writing a noise covariance matrix", "Reading XDF EEG data", "Computation times", "Using contralateral referencing for EEG", "Cortical Signal Suppression (CSS) for removal of cortical signals", "Define target events based on time lag, plot evoked response", "Identify EEG Electrodes Bridged by too much Gel", "Transform EEG data using current source density (CSD)", "Show EOG artifact timing", "Reduce EOG artifacts through regression", "Find MEG reference channel artifacts", "Visualise NIRS artifact correction methods", "Compare the different ICA algorithms in MNE", "Preprocessing", "Interpolate bad channels for MEG/EEG channels", "Maxwell filter data with movement compensation", "Annotate movement artifacts and reestimate dev_head_t", "Annotate muscle artifacts", "Removing muscle ICA components", "Plot sensor denoising using oversampled temporal projection", "Computation times", "Shifting time-scale in evoked data", "Remap MEG channel types", "XDAWN Denoising", "Data Simulation", "Compare simulated and estimated source activity", "Computation times", "Generate simulated evoked data", "Generate simulated raw data", "Simulate raw data using subject anatomy", "Generate simulated source data", "Permutation F-test on sensor data with 1D cluster level", "FDR correction on T-test on sensor data", "Statistics Examples", "Regression on continuous data (rER[P/F])", "Permutation T-test on sensor data", "Analysing continuous features with binning and regression in sensor space", "Computation times", "Compute a cross-spectral density (CSD) matrix", "Compute Power Spectral Density of inverse solution from single epochs", "Time-Frequency Examples", "Computation times", "Compute power and phase lock in label of the source space", "Compute source power spectral density (PSD) in a label", "Compute source power spectral density (PSD) of VectorView and OPM data", "Compute induced power in the source space with dSPM", "Temporal whitening with AR model", "Compute and visualize ERDS maps", "Explore event-related dynamics for specific frequency bands", "Time-frequency on simulated data (Multitaper vs. Morlet vs. Stockwell vs. Hilbert)", "How to convert 3D electrode positions to a 2D image", "Plotting with <code class=\"docutils literal notranslate\"><span class=\"pre\">mne.viz.Brain</span></code>", "Visualize channel over epochs as an image", "Plotting EEG sensors on the scalp", "Plotting topographic arrowmaps of evoked data", "Plotting topographic maps of evoked data", "Whitening evoked data with a noise covariance", "Visualization", "Plotting sensor layouts of MEG systems", "Plot the MNE brain and helmet", "Plotting sensor layouts of EEG systems", "Plot a cortical parcellation", "Make figures more publication ready", "Plot single trial activity, grouped by ROI and sorted by RT", "Show noise levels from empty room data", "Computation times", "Sensitivity map of SSP projections", "Compare evoked responses for different conditions", "Plot custom topographies for MEG sensors", "Cross-hemisphere comparison", "Working with sEEG data", "Working with ECoG data", "Sleep stage classification from polysomnography (PSG) data", "Clinical applications", "Computation times", "The Epochs data structure: discontinuous data", "Regression-based baseline correction", "Visualizing epoched data", "Working with Epoch metadata", "Auto-generating Epochs metadata", "Exporting Epochs to Pandas DataFrames", "Divide continuous data into equally-spaced epochs", "Segmenting continuous data into epochs", "Computation times", "The Evoked data structure: evoked/averaged data", "Visualizing Evoked data", "EEG analysis - Event-Related Potentials (ERPs)", "Plotting whitened data", "Estimating evoked responses", "Computation times", "FreeSurfer MRI reconstruction", "Source alignment and coordinate frames", "Using an automated approach to coregistration", "Head model and forward computation", "EEG forward operator with a template MRI", "How MNE uses FreeSurfer\u2019s outputs", "Fixing BEM and head surfaces", "Computing a covariance matrix", "Forward models and source spaces", "Computation times", "Tutorials", "Overview of MEG/EEG analysis with MNE-Python", "Modifying data in-place", "Parsing events from raw data", "The Info data structure", "Working with sensor locations", "Configuring MNE-Python", "Getting started with mne.Report", "Introductory tutorials", "Computation times", "The SourceEstimate data structure", "Source localization with equivalent current dipole (ECD) fit", "Source localization with MNE, dSPM, sLORETA, and eLORETA", "The role of dipole orientations in distributed source localization", "Computing various MNE solutions", "Source reconstruction using an LCMV beamformer", "Visualize source time courses (stcs)", "EEG source localization given electrode locations on an MRI", "Brainstorm Elekta phantom dataset tutorial", "Brainstorm CTF phantom dataset tutorial", "4D Neuroimaging/BTi phantom dataset tutorial", "Source localization and inverses", "Computation times", "Importing data from MEG devices", "Importing data from EEG devices", "Importing data from fNIRS devices", "Working with CTF data: the Brainstorm auditory dataset", "Importing Data from Eyetracking devices", "Reading data for different recording systems", "Computation times", "Spectro-temporal receptive field (STRF) estimation on continuous data", "Decoding (MVPA)", "Machine learning models of neural activity", "Computation times", "Overview of artifact detection", "Handling bad channels", "Rejecting bad data spans and breaks", "Background information on filtering", "Filtering and resampling data", "Repairing artifacts with regression", "Repairing artifacts with ICA", "Background on projectors and projections", "Repairing artifacts with SSP", "Setting the EEG reference", "Extracting and visualizing subject head movement", "Signal-space separation (SSS) and Maxwell filtering", "Preprocessing functional near-infrared spectroscopy (fNIRS) data", "Preprocessing optically pumped magnetometer (OPM) MEG data", "Working with eye tracker data in MNE-Python", "Preprocessing", "Computation times", "The Raw data structure: continuous data", "Working with events", "Annotating continuous data", "Built-in plotting methods for Raw objects", "Working with continuous data", "Computation times", "Creating MNE-Python data structures from scratch", "Corrupt known signal with point spread", "DICS for power mapping", "Simulation", "Computation times", "Statistical inference", "Visualising statistical significance thresholds on EEG data", "Non-parametric 1 sample cluster statistic on single trial power", "Non-parametric between conditions cluster statistic on single trial power", "Mass-univariate twoway repeated measures ANOVA on single trial power", "Spatiotemporal permutation F-test on full sensor data", "Statistical analysis of sensor data", "Computation times", "Permutation t-test on source data with spatio-temporal clustering", "2 samples permutation test on source data with spatio-temporal clustering", "Repeated measures ANOVA on source data with spatio-temporal clustering", "Statistical analysis of source estimates", "Computation times", "The Spectrum and EpochsSpectrum classes: frequency-domain data", "Frequency and time-frequency sensor analysis", "Frequency-tagging: Basic analysis of an SSVEP/vSSR dataset", "Time-frequency analysis", "Computation times", "General bibliography", "Papers citing MNE-Python", "Connectivity Estimation", "Covariance computation", "Creating data objects from arrays", "Datasets", "Decoding", "Events", "Exporting", "File I/O", "Forward Modeling", "Funding and other support", "Command line tools using Python", "mne.AcqParserFIF", "mne.Annotations", "mne.BaseEpochs", "mne.BiHemiLabel", "mne.Covariance", "mne.Dipole", "mne.DipoleFixed", "mne.Epochs", "mne.EpochsArray", "mne.Evoked", "mne.EvokedArray", "mne.Forward", "mne.Info", "mne.Label", "mne.MixedSourceEstimate", "mne.MixedVectorSourceEstimate", "mne.Projection", "mne.Report", "mne.SourceEstimate", "mne.SourceMorph", "mne.SourceSpaces", "mne.VectorSourceEstimate", "mne.VolSourceEstimate", "mne.VolVectorSourceEstimate", "mne.add_reference_channels", "mne.add_source_space_distances", "mne.annotations_from_events", "mne.apply_forward", "mne.apply_forward_raw", "mne.average_forward_solutions", "mne.baseline.rescale", "mne.beamformer.Beamformer", "mne.beamformer.apply_dics", "mne.beamformer.apply_dics_csd", "mne.beamformer.apply_dics_epochs", "mne.beamformer.apply_dics_tfr_epochs", "mne.beamformer.apply_lcmv", "mne.beamformer.apply_lcmv_cov", "mne.beamformer.apply_lcmv_epochs", "mne.beamformer.apply_lcmv_raw", "mne.beamformer.make_dics", "mne.beamformer.make_lcmv", "mne.beamformer.make_lcmv_resolution_matrix", "mne.beamformer.rap_music", "mne.beamformer.read_beamformer", "mne.beamformer.trap_music", "mne.bem.ConductorModel", "mne.bem.convert_flash_mris", "mne.bem.distance_to_bem", "mne.bem.fit_sphere_to_headshape", "mne.bem.get_fitting_dig", "mne.bem.make_flash_bem", "mne.bem.make_scalp_surfaces", "mne.bem.make_watershed_bem", "mne.channel_indices_by_type", "mne.channel_type", "mne.channels.DigMontage", "mne.channels.Layout", "mne.channels.combine_channels", "mne.channels.compute_dev_head_t", "mne.channels.compute_native_head_t", "mne.channels.equalize_channels", "mne.channels.find_ch_adjacency", "mne.channels.find_layout", "mne.channels.fix_mag_coil_types", "mne.channels.generate_2d_layout", "mne.channels.get_builtin_ch_adjacencies", "mne.channels.get_builtin_montages", "mne.channels.make_1020_channel_selections", "mne.channels.make_dig_montage", "mne.channels.make_eeg_layout", "mne.channels.make_grid_layout", "mne.channels.make_standard_montage", "mne.channels.read_ch_adjacency", "mne.channels.read_custom_montage", "mne.channels.read_dig_captrak", "mne.channels.read_dig_dat", "mne.channels.read_dig_egi", "mne.channels.read_dig_fif", "mne.channels.read_dig_hpts", "mne.channels.read_dig_localite", "mne.channels.read_dig_polhemus_isotrak", "mne.channels.read_layout", "mne.channels.read_polhemus_fastscan", "mne.channels.rename_channels", "mne.chpi.compute_chpi_amplitudes", "mne.chpi.compute_chpi_locs", "mne.chpi.compute_chpi_snr", "mne.chpi.compute_head_pos", "mne.chpi.extract_chpi_locs_ctf", "mne.chpi.extract_chpi_locs_kit", "mne.chpi.filter_chpi", "mne.chpi.get_active_chpi", "mne.chpi.get_chpi_info", "mne.chpi.head_pos_to_trans_rot_t", "mne.chpi.read_head_pos", "mne.chpi.write_head_pos", "mne.combine_evoked", "mne.compute_covariance", "mne.compute_proj_epochs", "mne.compute_proj_evoked", "mne.compute_proj_raw", "mne.compute_rank", "mne.compute_raw_covariance", "mne.compute_source_morph", "mne.concatenate_epochs", "mne.concatenate_events", "mne.concatenate_raws", "mne.convert_forward_solution", "mne.coreg.Coregistration", "mne.coreg.estimate_head_mri_t", "mne.coreg.get_mni_fiducials", "mne.count_events", "mne.cov.compute_whitener", "mne.cov.prepare_noise_cov", "mne.cov.regularize", "mne.create_default_subject", "mne.create_info", "mne.cuda.get_cuda_memory", "mne.cuda.init_cuda", "mne.cuda.set_cuda_device", "mne.datasets.brainstorm.bst_auditory.data_path", "mne.datasets.brainstorm.bst_raw.data_path", "mne.datasets.brainstorm.bst_resting.data_path", "mne.datasets.eegbci.load_data", "mne.datasets.eegbci.standardize", "mne.datasets.epilepsy_ecog.data_path", "mne.datasets.erp_core.data_path", "mne.datasets.eyelink.data_path", "mne.datasets.fetch_aparc_sub_parcellation", "mne.datasets.fetch_dataset", "mne.datasets.fetch_fsaverage", "mne.datasets.fetch_hcp_mmp_parcellation", "mne.datasets.fetch_infant_template", "mne.datasets.fetch_phantom", "mne.datasets.fnirs_motor.data_path", "mne.datasets.has_dataset", "mne.datasets.hf_sef.data_path", "mne.datasets.kiloword.data_path", "mne.datasets.limo.load_data", "mne.datasets.misc.data_path", "mne.datasets.mtrf.data_path", "mne.datasets.multimodal.data_path", "mne.datasets.opm.data_path", "mne.datasets.phantom_4dbti.data_path", "mne.datasets.refmeg_noise.data_path", "mne.datasets.sample.data_path", "mne.datasets.sleep_physionet.age.fetch_data", "mne.datasets.sleep_physionet.temazepam.fetch_data", "mne.datasets.somato.data_path", "mne.datasets.spm_face.data_path", "mne.datasets.ssvep.data_path", "mne.datasets.ucl_opm_auditory.data_path", "mne.datasets.visual_92_categories.data_path", "mne.decimate_surface", "mne.decoding.CSP", "mne.decoding.EMS", "mne.decoding.FilterEstimator", "mne.decoding.GeneralizingEstimator", "mne.decoding.LinearModel", "mne.decoding.PSDEstimator", "mne.decoding.ReceptiveField", "mne.decoding.SPoC", "mne.decoding.SSD", "mne.decoding.Scaler", "mne.decoding.SlidingEstimator", "mne.decoding.TemporalFilter", "mne.decoding.TimeDelayingRidge", "mne.decoding.TimeFrequency", "mne.decoding.UnsupervisedSpatialFilter", "mne.decoding.Vectorizer", "mne.decoding.compute_ems", "mne.decoding.cross_val_multiscore", "mne.decoding.get_coef", "mne.dig_mri_distances", "mne.dipole.get_phantom_dipoles", "mne.epochs.average_movements", "mne.epochs.combine_event_ids", "mne.epochs.equalize_epoch_counts", "mne.epochs.make_metadata", "mne.equalize_channels", "mne.event.define_target_events", "mne.event.match_event_names", "mne.event.shift_time_events", "mne.events_from_annotations", "mne.export.export_epochs", "mne.export.export_evokeds", "mne.export.export_evokeds_mff", "mne.export.export_raw", "mne.extract_label_time_course", "mne.filter.construct_iir_filter", "mne.filter.create_filter", "mne.filter.estimate_ringing_samples", "mne.filter.filter_data", "mne.filter.notch_filter", "mne.filter.resample", "mne.find_events", "mne.find_stim_steps", "mne.fit_dipole", "mne.forward.compute_depth_prior", "mne.forward.compute_orient_prior", "mne.forward.restrict_forward_to_label", "mne.forward.restrict_forward_to_stc", "mne.get_config", "mne.get_config_path", "mne.get_head_surf", "mne.get_meg_helmet_surf", "mne.get_montage_volume_labels", "mne.get_volume_labels_from_aseg", "mne.get_volume_labels_from_src", "mne.grade_to_tris", "mne.grade_to_vertices", "mne.grand_average", "mne.grow_labels", "mne.gui.coregistration", "mne.gui.locate_ieeg", "mne.head_to_mni", "mne.head_to_mri", "mne.inverse_sparse.gamma_map", "mne.inverse_sparse.make_stc_from_dipoles", "mne.inverse_sparse.mixed_norm", "mne.inverse_sparse.tf_mixed_norm", "mne.io.BaseRaw", "mne.io.Raw", "mne.io.RawArray", "mne.io.anonymize_info", "mne.io.kit.read_mrk", "mne.io.read_fiducials", "mne.io.read_info", "mne.io.read_raw", "mne.io.read_raw_artemis123", "mne.io.read_raw_bdf", "mne.io.read_raw_boxy", "mne.io.read_raw_brainvision", "mne.io.read_raw_bti", "mne.io.read_raw_cnt", "mne.io.read_raw_ctf", "mne.io.read_raw_curry", "mne.io.read_raw_edf", "mne.io.read_raw_eeglab", "mne.io.read_raw_egi", "mne.io.read_raw_eximia", "mne.io.read_raw_eyelink", "mne.io.read_raw_fieldtrip", "mne.io.read_raw_fif", "mne.io.read_raw_fil", "mne.io.read_raw_gdf", "mne.io.read_raw_hitachi", "mne.io.read_raw_kit", "mne.io.read_raw_nedf", "mne.io.read_raw_nicolet", "mne.io.read_raw_nihon", "mne.io.read_raw_nirx", "mne.io.read_raw_persyst", "mne.io.read_raw_snirf", "mne.io.show_fiff", "mne.io.write_fiducials", "mne.label.select_sources", "mne.label_sign_flip", "mne.labels_to_stc", "mne.make_ad_hoc_cov", "mne.make_bem_model", "mne.make_bem_solution", "mne.make_field_map", "mne.make_fixed_length_epochs", "mne.make_fixed_length_events", "mne.make_forward_dipole", "mne.make_forward_solution", "mne.make_sphere_model", "mne.match_channel_orders", "mne.merge_events", "mne.minimum_norm.InverseOperator", "mne.minimum_norm.apply_inverse", "mne.minimum_norm.apply_inverse_cov", "mne.minimum_norm.apply_inverse_epochs", "mne.minimum_norm.apply_inverse_raw", "mne.minimum_norm.apply_inverse_tfr_epochs", "mne.minimum_norm.compute_rank_inverse", "mne.minimum_norm.compute_source_psd", "mne.minimum_norm.compute_source_psd_epochs", "mne.minimum_norm.estimate_snr", "mne.minimum_norm.get_cross_talk", "mne.minimum_norm.get_point_spread", "mne.minimum_norm.make_inverse_operator", "mne.minimum_norm.make_inverse_resolution_matrix", "mne.minimum_norm.prepare_inverse_operator", "mne.minimum_norm.read_inverse_operator", "mne.minimum_norm.resolution_metrics", "mne.minimum_norm.source_band_induced_power", "mne.minimum_norm.source_induced_power", "mne.minimum_norm.write_inverse_operator", "mne.morph_labels", "mne.morph_source_spaces", "mne.open_docs", "mne.open_report", "mne.parse_config", "mne.pick_channels", "mne.pick_channels_cov", "mne.pick_channels_forward", "mne.pick_channels_regexp", "mne.pick_events", "mne.pick_info", "mne.pick_types", "mne.pick_types_forward", "mne.preprocessing.EOGRegression", "mne.preprocessing.ICA", "mne.preprocessing.Xdawn", "mne.preprocessing.annotate_amplitude", "mne.preprocessing.annotate_break", "mne.preprocessing.annotate_movement", "mne.preprocessing.annotate_muscle_zscore", "mne.preprocessing.annotate_nan", "mne.preprocessing.compute_average_dev_head_t", "mne.preprocessing.compute_bridged_electrodes", "mne.preprocessing.compute_current_source_density", "mne.preprocessing.compute_fine_calibration", "mne.preprocessing.compute_maxwell_basis", "mne.preprocessing.compute_proj_ecg", "mne.preprocessing.compute_proj_eog", "mne.preprocessing.compute_proj_hfc", "mne.preprocessing.corrmap", "mne.preprocessing.cortical_signal_suppression", "mne.preprocessing.create_ecg_epochs", "mne.preprocessing.create_eog_epochs", "mne.preprocessing.equalize_bads", "mne.preprocessing.eyetracking.set_channel_types_eyetrack", "mne.preprocessing.find_bad_channels_maxwell", "mne.preprocessing.find_ecg_events", "mne.preprocessing.find_eog_events", "mne.preprocessing.fix_stim_artifact", "mne.preprocessing.ica_find_ecg_events", "mne.preprocessing.ica_find_eog_events", "mne.preprocessing.ieeg.make_montage_volume", "mne.preprocessing.ieeg.project_sensors_onto_brain", "mne.preprocessing.ieeg.warp_montage", "mne.preprocessing.infomax", "mne.preprocessing.interpolate_bridged_electrodes", "mne.preprocessing.maxwell_filter", "mne.preprocessing.maxwell_filter_prepare_emptyroom", "mne.preprocessing.nirs.beer_lambert_law", "mne.preprocessing.nirs.optical_density", "mne.preprocessing.nirs.scalp_coupling_index", "mne.preprocessing.nirs.short_channels", "mne.preprocessing.nirs.source_detector_distances", "mne.preprocessing.nirs.temporal_derivative_distribution_repair", "mne.preprocessing.oversampled_temporal_projection", "mne.preprocessing.peak_finder", "mne.preprocessing.read_eog_regression", "mne.preprocessing.read_fine_calibration", "mne.preprocessing.read_ica", "mne.preprocessing.read_ica_eeglab", "mne.preprocessing.realign_raw", "mne.preprocessing.regress_artifact", "mne.preprocessing.write_fine_calibration", "mne.random_parcellation", "mne.read_annotations", "mne.read_bem_solution", "mne.read_bem_surfaces", "mne.read_cov", "mne.read_dipole", "mne.read_epochs", "mne.read_epochs_eeglab", "mne.read_epochs_fieldtrip", "mne.read_epochs_kit", "mne.read_events", "mne.read_evoked_besa", "mne.read_evoked_fieldtrip", "mne.read_evokeds", "mne.read_evokeds_mff", "mne.read_forward_solution", "mne.read_freesurfer_lut", "mne.read_label", "mne.read_labels_from_annot", "mne.read_lta", "mne.read_morph_map", "mne.read_proj", "mne.read_reject_parameters", "mne.read_source_estimate", "mne.read_source_morph", "mne.read_source_spaces", "mne.read_surface", "mne.read_talxfm", "mne.read_trans", "mne.read_tri", "mne.read_vectorview_selection", "mne.rename_channels", "mne.scale_bem", "mne.scale_labels", "mne.scale_mri", "mne.scale_source_space", "mne.sensitivity_map", "mne.set_bipolar_reference", "mne.set_cache_dir", "mne.set_config", "mne.set_eeg_reference", "mne.set_log_file", "mne.set_log_level", "mne.set_memmap_min_size", "mne.setup_source_space", "mne.setup_volume_source_space", "mne.simulation.SourceSimulator", "mne.simulation.add_chpi", "mne.simulation.add_ecg", "mne.simulation.add_eog", "mne.simulation.add_noise", "mne.simulation.metrics.cosine_score", "mne.simulation.metrics.f1_score", "mne.simulation.metrics.peak_position_error", "mne.simulation.metrics.precision_score", "mne.simulation.metrics.recall_score", "mne.simulation.metrics.region_localization_error", "mne.simulation.metrics.roc_auc_score", "mne.simulation.metrics.spatial_deviation_error", "mne.simulation.select_source_in_label", "mne.simulation.simulate_evoked", "mne.simulation.simulate_raw", "mne.simulation.simulate_sparse_stc", "mne.simulation.simulate_stc", "mne.source_space.compute_distance_to_sensors", "mne.source_space.get_decimated_surfaces", "mne.spatial_dist_adjacency", "mne.spatial_inter_hemi_adjacency", "mne.spatial_src_adjacency", "mne.spatial_tris_adjacency", "mne.spatio_temporal_dist_adjacency", "mne.spatio_temporal_src_adjacency", "mne.spatio_temporal_tris_adjacency", "mne.split_label", "mne.stats.bonferroni_correction", "mne.stats.bootstrap_confidence_interval", "mne.stats.combine_adjacency", "mne.stats.f_mway_rm", "mne.stats.f_oneway", "mne.stats.f_threshold_mway_rm", "mne.stats.fdr_correction", "mne.stats.linear_regression", "mne.stats.linear_regression_raw", "mne.stats.permutation_cluster_1samp_test", "mne.stats.permutation_cluster_test", "mne.stats.permutation_t_test", "mne.stats.spatio_temporal_cluster_1samp_test", "mne.stats.spatio_temporal_cluster_test", "mne.stats.summarize_clusters_stc", "mne.stats.ttest_1samp_no_p", "mne.stats.ttest_ind_no_p", "mne.stc_near_sensors", "mne.stc_to_label", "mne.surface.complete_surface_info", "mne.surface.read_curvature", "mne.sys_info", "mne.time_frequency.AverageTFR", "mne.time_frequency.CrossSpectralDensity", "mne.time_frequency.EpochsSpectrum", "mne.time_frequency.EpochsTFR", "mne.time_frequency.Spectrum", "mne.time_frequency.csd_array_fourier", "mne.time_frequency.csd_array_morlet", "mne.time_frequency.csd_array_multitaper", "mne.time_frequency.csd_fourier", "mne.time_frequency.csd_morlet", "mne.time_frequency.csd_multitaper", "mne.time_frequency.csd_tfr", "mne.time_frequency.dpss_windows", "mne.time_frequency.fit_iir_model_raw", "mne.time_frequency.fwhm", "mne.time_frequency.istft", "mne.time_frequency.morlet", "mne.time_frequency.pick_channels_csd", "mne.time_frequency.psd_array_multitaper", "mne.time_frequency.psd_array_welch", "mne.time_frequency.read_csd", "mne.time_frequency.read_spectrum", "mne.time_frequency.read_tfrs", "mne.time_frequency.stft", "mne.time_frequency.stftfreq", "mne.time_frequency.tfr.cwt", "mne.time_frequency.tfr.morlet", "mne.time_frequency.tfr_array_morlet", "mne.time_frequency.tfr_array_multitaper", "mne.time_frequency.tfr_array_stockwell", "mne.time_frequency.tfr_morlet", "mne.time_frequency.tfr_multitaper", "mne.time_frequency.tfr_stockwell", "mne.time_frequency.write_tfrs", "mne.transform_surface_to", "mne.transforms.Transform", "mne.transforms.apply_volume_registration", "mne.transforms.apply_volume_registration_points", "mne.transforms.compute_volume_registration", "mne.transforms.quat_to_rot", "mne.transforms.read_ras_mni_t", "mne.transforms.rot_to_quat", "mne.use_coil_def", "mne.use_log_level", "mne.utils.deprecated", "mne.utils.warn", "mne.verbose", "mne.vertex_to_mni", "mne.viz.Brain", "mne.viz.ClickableImage", "mne.viz.Figure3D", "mne.viz.add_background_image", "mne.viz.centers_to_edges", "mne.viz.circular_layout", "mne.viz.close_3d_figure", "mne.viz.close_all_3d_figures", "mne.viz.compare_fiff", "mne.viz.create_3d_figure", "mne.viz.get_3d_backend", "mne.viz.get_brain_class", "mne.viz.get_browser_backend", "mne.viz.iter_topography", "mne.viz.link_brains", "mne.viz.mne_analyze_colormap", "mne.viz.plot_alignment", "mne.viz.plot_arrowmap", "mne.viz.plot_bem", "mne.viz.plot_brain_colorbar", "mne.viz.plot_bridged_electrodes", "mne.viz.plot_ch_adjacency", "mne.viz.plot_channel_labels_circle", "mne.viz.plot_chpi_snr", "mne.viz.plot_compare_evokeds", "mne.viz.plot_cov", "mne.viz.plot_csd", "mne.viz.plot_dipole_amplitudes", "mne.viz.plot_dipole_locations", "mne.viz.plot_drop_log", "mne.viz.plot_epochs", "mne.viz.plot_epochs_image", "mne.viz.plot_epochs_psd_topomap", "mne.viz.plot_events", "mne.viz.plot_evoked", "mne.viz.plot_evoked_field", "mne.viz.plot_evoked_image", "mne.viz.plot_evoked_joint", "mne.viz.plot_evoked_topo", "mne.viz.plot_evoked_topomap", "mne.viz.plot_evoked_white", "mne.viz.plot_filter", "mne.viz.plot_head_positions", "mne.viz.plot_ica_components", "mne.viz.plot_ica_overlay", "mne.viz.plot_ica_properties", "mne.viz.plot_ica_scores", "mne.viz.plot_ica_sources", "mne.viz.plot_ideal_filter", "mne.viz.plot_layout", "mne.viz.plot_montage", "mne.viz.plot_projs_joint", "mne.viz.plot_projs_topomap", "mne.viz.plot_raw", "mne.viz.plot_raw_psd", "mne.viz.plot_regression_weights", "mne.viz.plot_sensors", "mne.viz.plot_snr_estimate", "mne.viz.plot_source_estimates", "mne.viz.plot_sparse_source_estimates", "mne.viz.plot_tfr_topomap", "mne.viz.plot_topo_image_epochs", "mne.viz.plot_topomap", "mne.viz.plot_vector_source_estimates", "mne.viz.plot_volume_source_estimates", "mne.viz.set_3d_backend", "mne.viz.set_3d_options", "mne.viz.set_3d_title", "mne.viz.set_3d_view", "mne.viz.set_browser_backend", "mne.viz.snapshot_brain_montage", "mne.viz.use_3d_backend", "mne.viz.use_browser_backend", "mne.what", "mne.write_bem_solution", "mne.write_bem_surfaces", "mne.write_cov", "mne.write_events", "mne.write_evokeds", "mne.write_forward_solution", "mne.write_head_bem", "mne.write_label", "mne.write_labels_to_annot", "mne.write_proj", "mne.write_source_spaces", "mne.write_surface", "mne.write_trans", "Glossary", "MNE", "Advanced setup", "Testing your installation", "Contributing guide", "Installing FreeSurfer", "Installing MNE-Python", "MNE-Python installers", "Install via <code class=\"code docutils literal notranslate\"><span class=\"pre\">pip</span></code> or <code class=\"code docutils literal notranslate\"><span class=\"pre\">conda</span></code>", "Installing Python", "Installing MNE-C", "Overview of the MNE tools suite", "Updating MNE-Python", "Inverse Solutions", "Logging and Configuration", "Martinos Center setup", "MNE with CPP", "Most-used classes", "MRI Processing", "How to cite MNE-Python", "The typical M/EEG workflow", "Datasets Overview", "Design philosophy", "MNE-Python Development", "Frequently Asked Questions (FAQ)", "Getting help", "Project Governance", "Algorithms and other implementation details", "Documentation overview", "Getting started with Python", "MNE-MATLAB documentation", "Migrating from other analysis software", "Current steering council and institutional partners", "Roadmap", "Preprocessing", "Python API Reference", "Reading raw data", "Realtime", "MNE-Report", "Sensor Space Data", "Simulation", "Source Space Data", "Statistics", "Time-Frequency", "Visualization", "What\u2019s new"], "terms": {"3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887], "8": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887], "demonstr": [0, 5, 19, 27, 33, 41, 43, 44, 45, 64, 68, 71, 72, 74, 80, 84, 99, 103, 114, 117, 145, 146, 151, 152, 161, 168, 170, 171, 172, 190, 192, 195, 199, 201, 202, 204, 205, 208, 210, 216, 223, 224, 227, 235, 240, 580, 855, 864, 867, 870, 871, 888], "sensor": [0, 4, 5, 11, 15, 16, 17, 20, 23, 25, 27, 28, 32, 34, 41, 42, 45, 49, 69, 71, 72, 78, 79, 80, 85, 88, 90, 92, 94, 95, 98, 102, 103, 109, 119, 120, 122, 124, 127, 130, 132, 135, 144, 146, 150, 151, 156, 157, 158, 159, 162, 166, 168, 169, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 185, 186, 188, 191, 199, 200, 202, 204, 205, 206, 208, 209, 210, 216, 224, 227, 228, 229, 234, 240, 243, 244, 245, 258, 260, 262, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 279, 280, 281, 285, 286, 298, 299, 300, 307, 308, 312, 313, 314, 315, 320, 321, 322, 323, 325, 326, 328, 329, 330, 331, 340, 342, 344, 346, 351, 356, 357, 358, 359, 360, 366, 371, 372, 373, 375, 413, 414, 415, 416, 417, 420, 421, 422, 423, 428, 429, 431, 432, 433, 454, 456, 457, 464, 473, 480, 481, 482, 483, 486, 488, 491, 492, 494, 506, 518, 524, 525, 526, 531, 533, 536, 537, 541, 554, 559, 560, 562, 563, 564, 568, 574, 577, 578, 583, 590, 591, 595, 600, 601, 603, 606, 618, 621, 622, 627, 640, 642, 643, 648, 660, 661, 672, 673, 676, 686, 688, 692, 693, 695, 696, 697, 698, 699, 703, 708, 709, 710, 711, 712, 738, 745, 756, 769, 772, 773, 776, 777, 779, 780, 781, 782, 786, 788, 790, 791, 792, 794, 795, 796, 798, 799, 805, 806, 808, 809, 811, 812, 816, 817, 818, 823, 824, 826, 843, 848, 854, 863, 864, 865, 867, 873, 876, 877, 878, 888], "sourc": [0, 1, 2, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 28, 29, 35, 37, 40, 46, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 96, 97, 99, 100, 101, 103, 105, 106, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 157, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 175, 179, 183, 184, 185, 187, 188, 189, 190, 191, 192, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 227, 228, 229, 230, 231, 232, 239, 240, 241, 242, 245, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 851, 853, 854, 856, 859, 864, 867, 868, 869, 873, 878, 888], "space": [0, 5, 10, 17, 20, 22, 23, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 59, 60, 61, 69, 75, 83, 88, 90, 92, 93, 94, 95, 98, 102, 105, 106, 108, 109, 113, 115, 119, 120, 124, 127, 131, 134, 135, 136, 140, 147, 148, 151, 155, 156, 160, 162, 166, 168, 170, 172, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 191, 195, 199, 205, 208, 214, 215, 216, 219, 222, 224, 227, 228, 232, 234, 236, 239, 240, 241, 245, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 285, 286, 298, 299, 314, 318, 327, 332, 349, 350, 353, 357, 358, 359, 361, 362, 365, 366, 369, 371, 375, 413, 416, 417, 420, 421, 423, 427, 430, 431, 434, 442, 447, 454, 458, 467, 469, 471, 475, 476, 477, 478, 479, 481, 482, 484, 486, 489, 496, 506, 516, 517, 522, 524, 525, 529, 530, 531, 532, 533, 534, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 550, 559, 560, 562, 563, 573, 574, 575, 576, 584, 590, 595, 616, 618, 622, 625, 627, 629, 630, 637, 639, 642, 644, 646, 647, 648, 656, 657, 658, 665, 668, 670, 671, 673, 674, 675, 676, 677, 678, 679, 680, 682, 683, 684, 692, 693, 695, 696, 698, 699, 700, 703, 704, 708, 710, 712, 720, 742, 756, 772, 774, 780, 786, 787, 788, 789, 792, 793, 795, 798, 799, 803, 808, 809, 811, 814, 815, 816, 819, 820, 824, 840, 843, 853, 864, 867, 876, 878, 888], "function": [0, 1, 4, 5, 8, 9, 12, 16, 18, 19, 21, 27, 28, 31, 35, 36, 40, 42, 44, 45, 46, 51, 54, 55, 56, 57, 58, 59, 60, 62, 70, 71, 72, 74, 77, 80, 82, 83, 90, 93, 94, 95, 99, 101, 103, 107, 112, 113, 114, 115, 116, 119, 121, 127, 132, 133, 135, 136, 140, 141, 143, 144, 146, 149, 150, 151, 152, 155, 156, 157, 158, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 222, 223, 224, 228, 229, 230, 231, 232, 235, 240, 241, 242, 245, 247, 250, 251, 257, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 289, 290, 292, 298, 299, 300, 305, 307, 309, 314, 319, 320, 322, 323, 326, 331, 332, 334, 342, 343, 344, 349, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 373, 375, 377, 389, 392, 413, 416, 417, 418, 419, 420, 422, 423, 430, 432, 434, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 452, 453, 454, 456, 470, 471, 474, 475, 479, 480, 481, 482, 487, 489, 490, 492, 493, 496, 498, 501, 502, 504, 506, 510, 512, 513, 515, 517, 525, 529, 530, 533, 536, 537, 538, 539, 540, 541, 542, 544, 545, 552, 558, 560, 562, 563, 565, 566, 567, 572, 573, 574, 575, 576, 578, 580, 581, 583, 584, 587, 593, 595, 596, 597, 598, 599, 601, 602, 609, 612, 613, 616, 619, 620, 621, 622, 623, 624, 625, 627, 630, 635, 643, 646, 649, 652, 657, 658, 660, 661, 662, 671, 672, 674, 675, 692, 694, 695, 696, 697, 698, 699, 703, 704, 707, 708, 709, 710, 711, 712, 715, 718, 720, 726, 727, 736, 738, 739, 746, 750, 751, 752, 753, 754, 756, 766, 769, 771, 772, 773, 780, 782, 786, 788, 789, 794, 795, 796, 799, 802, 807, 808, 810, 811, 812, 814, 816, 818, 819, 820, 821, 825, 843, 845, 854, 855, 856, 862, 863, 864, 865, 870, 871, 874, 876, 877, 878, 880, 882, 885, 886, 888], "ha": [0, 1, 5, 9, 10, 27, 32, 42, 45, 49, 54, 71, 72, 75, 79, 83, 84, 93, 94, 103, 109, 114, 126, 127, 136, 140, 142, 144, 145, 146, 149, 150, 151, 155, 156, 157, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 180, 181, 182, 183, 185, 188, 189, 190, 192, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 216, 217, 219, 222, 224, 227, 228, 232, 240, 242, 247, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 285, 286, 289, 290, 291, 292, 298, 299, 304, 305, 310, 356, 360, 361, 362, 371, 372, 373, 379, 380, 381, 384, 385, 386, 388, 392, 393, 394, 396, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 413, 419, 420, 434, 448, 449, 451, 452, 454, 456, 457, 460, 476, 478, 479, 481, 482, 483, 489, 490, 502, 510, 526, 529, 530, 531, 533, 541, 562, 563, 564, 566, 578, 591, 595, 602, 625, 626, 644, 647, 689, 690, 695, 696, 698, 699, 708, 709, 710, 711, 712, 715, 724, 726, 734, 735, 736, 738, 739, 743, 766, 780, 788, 790, 792, 793, 794, 795, 796, 799, 801, 803, 808, 809, 810, 811, 812, 814, 816, 818, 843, 845, 847, 851, 853, 854, 855, 863, 864, 865, 866, 867, 868, 869, 870, 873, 876, 880, 888], "move": [0, 27, 61, 76, 80, 81, 116, 140, 145, 156, 161, 177, 192, 202, 205, 206, 209, 212, 235, 242, 247, 257, 262, 265, 266, 267, 268, 274, 280, 281, 367, 413, 420, 448, 481, 482, 562, 563, 567, 592, 708, 710, 712, 744, 745, 746, 787, 788, 792, 795, 799, 808, 811, 816, 820, 867, 869, 870, 880, 888], "mne_connect": [0, 27, 47, 146, 247, 778], "packag": [0, 27, 138, 146, 160, 165, 166, 189, 196, 200, 201, 202, 205, 224, 227, 247, 257, 259, 265, 266, 267, 268, 271, 272, 273, 275, 276, 279, 280, 281, 283, 356, 357, 359, 361, 374, 375, 416, 423, 426, 429, 430, 456, 469, 471, 473, 481, 482, 520, 521, 524, 525, 536, 537, 546, 547, 568, 575, 576, 656, 659, 660, 661, 673, 695, 696, 697, 698, 699, 708, 710, 711, 712, 713, 714, 715, 716, 717, 718, 726, 727, 735, 736, 737, 738, 739, 788, 791, 810, 843, 844, 845, 847, 848, 850, 851, 852, 853, 854, 858, 864, 865, 876, 888], "can": [0, 4, 5, 7, 12, 13, 15, 16, 19, 21, 22, 24, 26, 27, 31, 32, 40, 41, 42, 43, 44, 45, 46, 47, 58, 59, 61, 62, 71, 72, 75, 76, 79, 80, 82, 83, 84, 88, 94, 95, 99, 101, 103, 109, 112, 113, 114, 115, 116, 119, 120, 121, 126, 127, 129, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 180, 181, 182, 183, 184, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 227, 228, 229, 230, 232, 235, 236, 237, 240, 241, 242, 245, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 288, 291, 298, 299, 305, 306, 307, 308, 311, 312, 314, 316, 318, 319, 322, 323, 324, 325, 329, 330, 331, 332, 334, 337, 341, 342, 343, 344, 350, 351, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 367, 368, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 384, 385, 386, 388, 391, 392, 393, 394, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 419, 420, 421, 423, 424, 425, 426, 428, 429, 430, 432, 434, 437, 438, 439, 440, 442, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 460, 463, 464, 465, 466, 469, 471, 472, 473, 475, 476, 478, 479, 481, 482, 489, 493, 496, 497, 501, 502, 504, 506, 510, 512, 513, 515, 517, 520, 521, 522, 524, 525, 528, 530, 536, 537, 539, 540, 541, 543, 547, 549, 550, 551, 552, 560, 561, 562, 563, 565, 566, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 594, 595, 596, 599, 601, 602, 603, 609, 610, 613, 615, 618, 619, 620, 621, 624, 625, 626, 628, 630, 632, 638, 642, 643, 644, 646, 647, 649, 652, 654, 656, 657, 664, 671, 672, 673, 674, 676, 678, 680, 682, 683, 687, 688, 694, 695, 696, 697, 698, 699, 700, 701, 703, 704, 707, 708, 709, 710, 711, 712, 716, 717, 718, 719, 721, 724, 731, 734, 736, 738, 739, 742, 744, 745, 746, 751, 753, 754, 756, 757, 761, 764, 769, 772, 773, 774, 775, 776, 777, 778, 779, 780, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 804, 806, 807, 808, 809, 810, 811, 812, 814, 816, 818, 819, 820, 822, 830, 831, 834, 836, 841, 843, 845, 846, 847, 851, 852, 853, 854, 855, 859, 862, 863, 864, 865, 869, 870, 871, 873, 876, 877, 878, 888], "found": [0, 1, 2, 4, 5, 8, 9, 11, 12, 16, 18, 21, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 65, 69, 70, 71, 72, 73, 74, 75, 79, 80, 81, 82, 83, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 112, 113, 114, 116, 117, 119, 120, 121, 124, 127, 128, 129, 132, 135, 136, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 158, 159, 161, 162, 166, 168, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 196, 199, 200, 201, 202, 203, 204, 205, 207, 210, 211, 212, 213, 217, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 241, 257, 258, 260, 262, 265, 266, 267, 268, 270, 274, 289, 304, 320, 321, 331, 350, 351, 367, 379, 380, 381, 382, 384, 385, 386, 393, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 432, 440, 454, 455, 461, 462, 463, 472, 481, 482, 488, 508, 529, 563, 566, 575, 580, 581, 585, 586, 588, 589, 604, 615, 638, 644, 646, 651, 652, 657, 695, 743, 756, 766, 768, 772, 786, 803, 809, 836, 843, 846, 847, 852, 864, 868, 870, 876, 878, 888], "go": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 278, 359, 463, 481, 482, 563, 657, 847, 858, 867, 868, 869, 870], "end": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 283, 288, 289, 314, 319, 326, 342, 343, 345, 356, 359, 361, 413, 419, 420, 425, 431, 436, 437, 438, 453, 454, 481, 482, 494, 502, 503, 508, 523, 536, 544, 546, 547, 548, 562, 563, 566, 580, 581, 587, 605, 607, 609, 616, 618, 625, 626, 627, 633, 637, 641, 643, 664, 665, 666, 667, 668, 670, 673, 685, 708, 709, 711, 713, 714, 715, 716, 717, 718, 719, 721, 730, 741, 743, 756, 786, 795, 800, 803, 809, 816, 829, 830, 831, 832, 834, 835, 839, 840, 841, 842, 843, 845, 847, 867, 869, 870, 873, 888], "download": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 845, 847, 848, 849, 850, 854, 855, 864, 888], "full": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 240, 241, 242, 265, 266, 267, 268, 270, 272, 273, 276, 278, 279, 281, 298, 299, 301, 303, 320, 321, 356, 360, 361, 362, 371, 372, 373, 413, 418, 420, 421, 426, 443, 446, 456, 457, 476, 478, 479, 481, 482, 529, 530, 541, 544, 560, 563, 622, 625, 688, 694, 695, 697, 699, 711, 722, 724, 726, 733, 734, 736, 738, 739, 746, 756, 772, 774, 777, 780, 786, 788, 796, 803, 809, 814, 819, 821, 822, 825, 845, 847, 853, 859, 863, 864, 869, 888], "exampl": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 149, 150, 151, 152, 155, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 195, 199, 200, 201, 202, 203, 204, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 245, 260, 281, 311, 337, 364, 370, 371, 372, 382, 388, 396, 406, 412, 435, 440, 457, 480, 505, 551, 573, 582, 604, 621, 644, 653, 734, 736, 746, 754, 786, 788, 795, 799, 801, 809, 811, 816, 820, 843, 845, 847, 850, 854, 863, 865, 867, 868, 870, 871, 888], "code": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 241, 242, 245, 256, 260, 265, 266, 267, 268, 275, 284, 351, 440, 442, 452, 454, 457, 480, 481, 482, 489, 498, 506, 531, 595, 604, 620, 694, 708, 710, 711, 712, 724, 734, 737, 738, 740, 756, 788, 790, 810, 843, 851, 863, 866, 867, 869, 870, 871, 874, 876, 883, 886, 888], "here": [1, 4, 5, 7, 9, 10, 11, 12, 15, 18, 19, 21, 28, 31, 33, 34, 38, 41, 42, 43, 45, 66, 68, 71, 72, 75, 76, 82, 83, 84, 90, 94, 95, 100, 101, 104, 109, 111, 112, 114, 116, 117, 120, 121, 127, 133, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 156, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 177, 179, 180, 181, 182, 183, 184, 185, 188, 190, 191, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 227, 228, 229, 231, 232, 235, 236, 237, 241, 242, 271, 275, 276, 278, 280, 281, 336, 362, 388, 394, 419, 430, 437, 453, 480, 515, 525, 528, 538, 563, 580, 593, 596, 610, 612, 625, 657, 660, 661, 662, 671, 672, 674, 695, 696, 697, 698, 699, 703, 789, 820, 845, 847, 854, 855, 864, 867, 870, 871, 872, 874, 888], "we": [1, 4, 5, 7, 9, 10, 11, 13, 16, 18, 19, 21, 22, 26, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 54, 58, 59, 66, 68, 69, 70, 71, 72, 74, 75, 76, 83, 84, 87, 88, 90, 94, 95, 101, 103, 109, 111, 112, 113, 114, 115, 116, 117, 120, 121, 126, 127, 129, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 245, 262, 265, 266, 267, 268, 272, 275, 276, 278, 280, 283, 309, 332, 421, 423, 443, 444, 445, 446, 453, 463, 481, 482, 483, 512, 538, 563, 580, 594, 602, 668, 711, 756, 757, 772, 781, 796, 814, 845, 851, 852, 855, 858, 862, 863, 864, 865, 867, 869, 870, 874, 876, 888], "comput": [1, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 17, 19, 22, 23, 24, 26, 27, 31, 36, 38, 43, 44, 48, 50, 52, 57, 61, 69, 72, 73, 77, 79, 81, 87, 88, 92, 93, 95, 96, 97, 98, 100, 105, 113, 114, 115, 119, 120, 121, 123, 124, 131, 134, 135, 141, 142, 145, 146, 149, 150, 151, 152, 155, 156, 157, 160, 163, 165, 166, 167, 168, 171, 172, 175, 176, 178, 181, 182, 183, 184, 185, 186, 189, 191, 195, 196, 200, 201, 203, 207, 208, 210, 212, 216, 219, 222, 223, 224, 227, 228, 231, 240, 241, 242, 245, 258, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 283, 285, 286, 289, 290, 291, 292, 293, 295, 298, 299, 300, 301, 303, 304, 306, 317, 318, 320, 322, 327, 331, 343, 344, 345, 346, 355, 356, 357, 358, 359, 360, 361, 362, 365, 366, 367, 371, 372, 373, 382, 413, 414, 417, 418, 419, 420, 421, 425, 429, 432, 442, 447, 452, 454, 456, 457, 458, 463, 469, 471, 476, 477, 478, 479, 481, 482, 486, 488, 493, 494, 496, 516, 519, 520, 521, 523, 524, 525, 526, 529, 530, 531, 532, 533, 534, 535, 536, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 560, 561, 563, 564, 567, 570, 571, 573, 574, 575, 576, 577, 580, 584, 591, 593, 612, 614, 615, 616, 617, 622, 625, 626, 627, 629, 630, 637, 639, 642, 644, 646, 648, 650, 652, 656, 657, 658, 663, 664, 665, 666, 667, 668, 669, 670, 673, 676, 678, 679, 680, 681, 682, 683, 684, 689, 690, 691, 694, 695, 696, 698, 699, 703, 704, 705, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 726, 727, 732, 733, 734, 735, 736, 737, 738, 739, 740, 744, 745, 750, 756, 772, 773, 774, 780, 781, 783, 784, 786, 787, 788, 795, 796, 803, 808, 809, 815, 824, 836, 843, 847, 848, 850, 853, 854, 859, 864, 867, 873, 878, 883, 885, 888], "evok": [1, 2, 4, 5, 7, 8, 15, 16, 17, 18, 20, 27, 28, 31, 35, 36, 38, 39, 40, 42, 44, 45, 46, 48, 49, 50, 54, 55, 56, 57, 58, 59, 61, 62, 69, 72, 74, 78, 79, 80, 84, 85, 87, 88, 89, 91, 93, 95, 96, 97, 99, 100, 101, 107, 113, 116, 117, 122, 124, 130, 135, 136, 141, 143, 144, 154, 162, 167, 169, 170, 176, 178, 179, 180, 181, 182, 183, 184, 185, 188, 191, 196, 199, 200, 201, 202, 203, 205, 206, 207, 210, 213, 223, 224, 228, 229, 230, 231, 232, 235, 237, 240, 242, 245, 257, 260, 262, 263, 264, 265, 266, 268, 269, 270, 272, 273, 275, 276, 278, 279, 280, 281, 282, 285, 286, 290, 291, 294, 295, 298, 299, 301, 303, 316, 319, 355, 356, 358, 360, 375, 395, 418, 427, 434, 438, 439, 444, 445, 447, 454, 456, 470, 472, 476, 478, 479, 481, 482, 486, 494, 521, 522, 525, 529, 530, 531, 532, 533, 534, 538, 541, 544, 554, 559, 560, 561, 562, 563, 564, 571, 572, 575, 576, 579, 582, 583, 587, 594, 595, 610, 616, 618, 622, 623, 624, 625, 626, 627, 629, 630, 633, 649, 652, 656, 657, 662, 672, 674, 694, 703, 708, 710, 711, 712, 717, 721, 726, 736, 738, 739, 740, 756, 773, 780, 783, 784, 786, 787, 790, 791, 792, 793, 794, 795, 796, 800, 803, 807, 809, 810, 813, 815, 818, 823, 834, 843, 847, 864, 865, 867, 870, 873, 874, 878, 888], "from": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 145, 146, 147, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 191, 193, 194, 195, 196, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 212, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 245, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 285, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 304, 305, 309, 311, 314, 315, 317, 320, 323, 326, 327, 328, 330, 332, 333, 334, 335, 336, 339, 340, 341, 344, 347, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 371, 372, 373, 374, 375, 382, 388, 396, 397, 405, 406, 413, 417, 419, 420, 421, 422, 428, 431, 435, 436, 437, 439, 442, 443, 444, 445, 446, 447, 452, 454, 455, 456, 457, 458, 461, 463, 465, 466, 470, 471, 472, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 536, 537, 538, 539, 540, 541, 543, 544, 545, 549, 550, 554, 555, 556, 560, 561, 562, 563, 564, 565, 566, 567, 570, 572, 573, 574, 577, 578, 579, 580, 581, 583, 584, 585, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 604, 605, 606, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 622, 624, 625, 626, 627, 628, 629, 630, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 647, 649, 652, 657, 658, 659, 660, 661, 662, 668, 671, 672, 673, 674, 675, 677, 678, 680, 681, 682, 683, 684, 685, 687, 688, 690, 694, 695, 696, 697, 698, 699, 700, 703, 704, 706, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 734, 736, 737, 738, 739, 740, 743, 744, 745, 746, 748, 751, 752, 755, 756, 764, 769, 772, 773, 780, 784, 785, 786, 788, 789, 790, 792, 793, 794, 795, 796, 797, 799, 800, 801, 803, 804, 806, 807, 808, 809, 810, 811, 812, 813, 816, 818, 824, 826, 834, 835, 838, 841, 843, 845, 847, 850, 851, 852, 853, 854, 855, 859, 863, 864, 865, 867, 869, 870, 872, 873, 876, 878, 886, 888], "tutori": [1, 27, 32, 63, 71, 74, 84, 109, 124, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 180, 181, 182, 186, 187, 190, 191, 193, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 229, 232, 233, 235, 237, 238, 240, 242, 243, 245, 262, 263, 265, 266, 267, 268, 270, 298, 304, 356, 361, 413, 433, 448, 451, 454, 456, 481, 482, 492, 494, 526, 551, 595, 735, 736, 738, 739, 772, 784, 796, 824, 843, 847, 864, 867, 870, 871, 872, 888], "For": [1, 4, 15, 19, 34, 43, 44, 47, 50, 55, 64, 68, 70, 71, 80, 95, 101, 103, 109, 113, 115, 120, 121, 123, 127, 134, 135, 136, 140, 143, 144, 145, 146, 149, 150, 151, 155, 156, 158, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 212, 216, 217, 219, 222, 227, 229, 231, 232, 235, 237, 240, 241, 242, 257, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 284, 298, 299, 316, 327, 337, 356, 360, 361, 362, 369, 371, 372, 373, 382, 388, 405, 406, 412, 413, 415, 416, 419, 420, 421, 423, 425, 426, 430, 434, 435, 436, 437, 439, 442, 443, 444, 446, 448, 449, 451, 452, 454, 455, 456, 457, 470, 471, 472, 475, 476, 478, 479, 480, 481, 482, 487, 489, 496, 502, 505, 506, 528, 536, 541, 545, 550, 562, 563, 564, 565, 574, 579, 582, 584, 595, 599, 606, 613, 622, 638, 642, 644, 649, 652, 654, 657, 688, 693, 694, 695, 696, 698, 699, 703, 708, 709, 710, 711, 712, 726, 728, 735, 736, 738, 739, 746, 756, 771, 772, 774, 780, 781, 786, 787, 788, 790, 792, 795, 796, 797, 799, 800, 801, 803, 809, 811, 812, 816, 818, 820, 843, 845, 847, 849, 853, 858, 859, 863, 864, 865, 866, 867, 870, 874, 888], "comparison": [1, 27, 31, 38, 83, 96, 97, 101, 112, 122, 130, 151, 155, 157, 167, 176, 183, 184, 191, 202, 207, 211, 232, 235, 236, 237, 241, 242, 245, 276, 277, 362, 563, 566, 596, 635, 692, 696, 697, 855, 863, 870, 885, 888], "see": [1, 4, 7, 8, 10, 19, 21, 22, 26, 27, 32, 34, 35, 39, 43, 44, 63, 64, 71, 72, 74, 76, 80, 82, 83, 84, 101, 113, 115, 119, 120, 121, 127, 129, 134, 135, 136, 137, 140, 141, 142, 143, 144, 146, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 180, 181, 182, 183, 184, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 229, 230, 232, 235, 240, 242, 250, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 307, 308, 309, 310, 311, 314, 316, 318, 319, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 418, 419, 420, 421, 423, 424, 426, 429, 430, 432, 434, 438, 440, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 463, 464, 468, 469, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 524, 525, 526, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 554, 555, 556, 557, 559, 562, 563, 564, 565, 566, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 584, 585, 586, 588, 589, 590, 591, 592, 593, 595, 596, 598, 599, 602, 603, 604, 607, 608, 609, 610, 612, 614, 615, 616, 617, 618, 619, 621, 622, 623, 625, 626, 627, 629, 630, 631, 632, 633, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 652, 653, 656, 657, 659, 660, 661, 662, 671, 672, 673, 674, 676, 678, 679, 680, 681, 682, 683, 684, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 725, 726, 727, 730, 731, 735, 736, 737, 738, 739, 740, 741, 743, 744, 745, 746, 751, 755, 756, 761, 764, 771, 772, 773, 780, 781, 784, 786, 787, 788, 789, 790, 791, 792, 794, 795, 796, 798, 799, 800, 801, 803, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 818, 819, 820, 821, 825, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 847, 851, 852, 853, 854, 863, 864, 865, 867, 869, 870, 871, 874, 875, 876, 878, 885, 888], "1": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 190, 191, 192, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 245, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 291, 298, 299, 300, 301, 303, 306, 309, 310, 311, 314, 316, 318, 320, 323, 324, 325, 326, 337, 340, 343, 344, 345, 349, 350, 355, 356, 357, 359, 361, 362, 367, 370, 373, 382, 389, 390, 391, 395, 396, 397, 405, 406, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 428, 429, 430, 431, 432, 434, 435, 436, 437, 440, 442, 443, 444, 445, 446, 448, 449, 451, 452, 453, 454, 456, 457, 458, 463, 469, 471, 472, 473, 475, 476, 478, 479, 480, 481, 482, 489, 491, 496, 497, 498, 505, 506, 507, 514, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 528, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 554, 555, 556, 557, 560, 562, 563, 564, 565, 568, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 586, 587, 588, 589, 590, 593, 594, 595, 596, 599, 602, 603, 604, 605, 610, 617, 619, 621, 627, 629, 642, 644, 646, 648, 652, 654, 655, 656, 657, 658, 659, 660, 661, 663, 664, 665, 666, 667, 668, 669, 670, 672, 673, 675, 677, 682, 683, 684, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 721, 722, 723, 724, 725, 726, 727, 731, 733, 734, 735, 736, 737, 738, 739, 740, 744, 745, 746, 751, 756, 760, 765, 769, 772, 773, 777, 780, 784, 785, 786, 787, 788, 790, 791, 792, 795, 796, 797, 799, 800, 801, 803, 804, 806, 807, 808, 809, 810, 811, 812, 814, 815, 816, 817, 818, 819, 822, 832, 834, 839, 843, 845, 846, 847, 850, 852, 853, 855, 862, 863, 864, 867, 869, 870, 873, 876], "http": [1, 8, 15, 43, 71, 88, 113, 151, 155, 160, 171, 184, 196, 232, 245, 265, 266, 267, 268, 272, 276, 280, 356, 369, 382, 388, 390, 405, 406, 421, 476, 481, 482, 489, 530, 564, 653, 690, 692, 737, 740, 752, 814, 845, 847, 855, 862, 867, 870, 888], "neuroimag": [1, 10, 12, 18, 19, 21, 35, 42, 46, 59, 60, 76, 94, 101, 113, 121, 126, 144, 155, 162, 165, 180, 184, 186, 187, 196, 212, 227, 228, 245, 262, 263, 265, 266, 267, 268, 270, 271, 276, 303, 304, 356, 391, 417, 419, 420, 421, 431, 434, 454, 456, 476, 479, 492, 526, 531, 541, 545, 563, 577, 602, 665, 668, 670, 692, 695, 696, 697, 698, 699, 701, 702, 722, 724, 734, 738, 772, 784, 796, 843, 854, 862, 865, 867, 870, 871, 876], "usc": [1, 184], "edu": [1, 9, 24, 35, 37, 43, 47, 58, 69, 71, 101, 104, 113, 114, 115, 120, 134, 151, 155, 184, 245, 272, 276, 280, 369, 604, 814, 870], "mediannervectf": 1, "author": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 141, 157, 159, 161, 179, 180, 182, 183, 184, 185, 191, 195, 202, 209, 213, 224, 227, 229, 230, 231, 232, 235, 236, 237, 241, 242, 245, 602, 724, 734, 738, 847, 862, 869], "mainak": [1, 46, 79, 86, 87, 191, 245, 479, 862, 875, 888], "ja": [1, 46, 79, 86, 87, 191, 245, 479, 862, 875, 888], "telecom": [1, 79, 87, 191], "paristech": [1, 79, 87, 191, 256, 875], "fr": [1, 7, 9, 10, 11, 13, 18, 19, 28, 29, 30, 38, 39, 40, 42, 46, 47, 48, 50, 52, 53, 59, 60, 65, 79, 87, 92, 96, 97, 100, 107, 108, 110, 111, 117, 121, 125, 131, 132, 137, 159, 185, 191, 196, 229, 230, 231, 235, 236, 237, 241, 245, 888], "licens": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 141, 157, 159, 161, 179, 180, 182, 183, 184, 185, 191, 195, 209, 213, 224, 227, 229, 230, 231, 232, 235, 236, 237, 241, 242, 379, 380, 381, 388, 390, 864, 888], "bsd": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 141, 157, 159, 161, 179, 180, 182, 183, 184, 185, 191, 195, 209, 213, 224, 227, 229, 230, 231, 232, 235, 236, 237, 241, 242, 595, 869], "claus": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 141, 157, 159, 161, 179, 180, 182, 183, 184, 185, 191, 195, 209, 213, 224, 227, 229, 230, 231, 232, 235, 236, 237, 241, 242], "import": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 245, 259, 265, 266, 267, 268, 270, 314, 330, 375, 382, 405, 406, 453, 481, 482, 489, 491, 493, 496, 497, 498, 499, 500, 501, 502, 504, 508, 509, 511, 512, 563, 583, 604, 619, 620, 624, 638, 652, 673, 688, 690, 708, 710, 711, 712, 724, 734, 751, 754, 756, 804, 841, 845, 846, 851, 854, 855, 858, 863, 864, 865, 867, 869, 870, 874, 876, 888], "numpi": [1, 4, 5, 8, 9, 10, 11, 14, 15, 16, 19, 22, 28, 31, 32, 33, 34, 35, 38, 40, 42, 45, 47, 50, 58, 59, 61, 64, 69, 71, 72, 73, 75, 82, 84, 90, 92, 93, 94, 95, 97, 100, 107, 111, 112, 113, 114, 115, 117, 119, 120, 125, 127, 133, 135, 136, 137, 140, 141, 143, 146, 149, 150, 151, 156, 157, 158, 159, 160, 166, 168, 170, 171, 172, 176, 177, 178, 181, 182, 183, 184, 185, 190, 191, 192, 195, 196, 199, 200, 202, 203, 204, 205, 206, 207, 210, 211, 212, 216, 217, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 259, 262, 265, 266, 267, 268, 272, 273, 274, 275, 276, 279, 280, 281, 413, 419, 420, 421, 451, 452, 453, 478, 479, 480, 481, 482, 515, 563, 578, 593, 604, 612, 660, 661, 662, 671, 672, 674, 688, 693, 695, 696, 697, 698, 699, 708, 709, 710, 711, 712, 713, 715, 716, 718, 724, 734, 735, 736, 737, 738, 739, 740, 756, 788, 790, 795, 808, 843, 846, 865, 869, 872, 888], "np": [1, 4, 5, 8, 9, 10, 11, 14, 15, 16, 19, 22, 28, 31, 32, 33, 34, 35, 38, 40, 42, 43, 45, 47, 50, 58, 59, 61, 69, 71, 72, 73, 75, 82, 84, 90, 92, 93, 94, 95, 97, 100, 107, 111, 112, 113, 114, 115, 117, 119, 120, 125, 127, 133, 135, 136, 137, 141, 143, 146, 150, 151, 156, 157, 158, 159, 160, 166, 168, 170, 172, 176, 177, 178, 181, 182, 183, 184, 185, 190, 191, 195, 196, 199, 200, 202, 203, 204, 206, 207, 210, 211, 212, 216, 217, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 259, 265, 266, 267, 268, 271, 272, 273, 276, 278, 279, 280, 281, 283, 316, 356, 370, 447, 448, 452, 469, 481, 482, 498, 513, 563, 578, 584, 593, 604, 674, 688, 700, 708, 710, 711, 712, 724, 726, 734, 735, 736, 738, 739, 756, 764, 770, 775, 780, 787, 810, 814, 816, 819, 820, 847, 870, 873, 886, 888], "mne": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 156, 157, 158, 159, 162, 163, 164, 167, 168, 169, 170, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 199, 201, 203, 204, 207, 208, 209, 211, 212, 214, 215, 217, 218, 219, 220, 223, 224, 225, 226, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 245, 250, 251, 252, 253, 255, 256, 843, 845, 846, 848, 852, 856, 857, 858, 863, 864, 865, 868, 869, 871, 874, 875, 876, 877, 878, 879, 882, 883, 885, 886, 887, 888], "bst_raw": [1, 119, 864, 878], "io": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 26, 28, 29, 32, 33, 34, 42, 45, 46, 49, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 121, 123, 127, 128, 129, 132, 133, 135, 137, 140, 141, 142, 144, 145, 146, 149, 151, 152, 156, 157, 158, 159, 160, 162, 166, 167, 168, 169, 170, 171, 172, 177, 180, 182, 183, 184, 185, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 229, 230, 231, 232, 235, 237, 240, 241, 242, 245, 252, 257, 258, 259, 263, 264, 265, 266, 267, 268, 270, 272, 273, 275, 276, 279, 280, 281, 284, 297, 367, 388, 418, 446, 448, 451, 525, 563, 571, 575, 576, 577, 584, 595, 708, 710, 711, 712, 726, 756, 801, 845, 847, 851, 863, 864, 865, 867, 870, 874, 878, 879, 888], "read_raw_ctf": [1, 7, 12, 21, 81, 82, 119, 123, 184, 188, 191, 487, 870, 878, 888], "print": [1, 2, 4, 5, 7, 8, 10, 11, 13, 14, 15, 16, 18, 19, 22, 24, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 70, 71, 72, 73, 74, 75, 77, 79, 80, 83, 84, 86, 87, 88, 92, 93, 94, 95, 96, 97, 100, 101, 103, 104, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 123, 127, 128, 131, 132, 133, 135, 136, 137, 140, 141, 142, 143, 144, 146, 149, 150, 151, 156, 157, 158, 159, 160, 166, 167, 168, 169, 170, 171, 175, 176, 179, 181, 182, 183, 184, 185, 191, 196, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 216, 217, 218, 222, 223, 224, 227, 228, 230, 231, 232, 235, 236, 237, 240, 241, 242, 245, 257, 265, 266, 267, 268, 274, 356, 396, 448, 454, 481, 482, 513, 653, 654, 707, 710, 711, 751, 764, 780, 791, 793, 796, 851, 853, 864, 867, 888], "__doc__": [1, 2, 4, 7, 8, 10, 11, 13, 14, 15, 16, 18, 22, 24, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 70, 71, 72, 73, 74, 75, 77, 79, 80, 84, 86, 87, 88, 92, 93, 94, 95, 96, 97, 100, 103, 104, 107, 108, 109, 110, 111, 114, 116, 117, 118, 119, 120, 121, 123, 128, 131, 132, 133, 136, 175, 179, 183, 184, 191, 230, 231, 236, 237], "tmin": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 28, 31, 32, 33, 34, 35, 38, 40, 42, 45, 46, 49, 51, 59, 60, 61, 70, 72, 73, 74, 83, 84, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 110, 111, 112, 113, 114, 117, 121, 128, 132, 133, 136, 137, 140, 141, 142, 144, 145, 149, 151, 162, 166, 172, 177, 180, 181, 183, 184, 185, 191, 195, 196, 200, 201, 205, 209, 211, 212, 213, 216, 222, 223, 224, 228, 229, 230, 231, 232, 235, 237, 240, 241, 242, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 343, 345, 356, 357, 358, 361, 419, 425, 437, 439, 480, 481, 482, 517, 536, 553, 575, 576, 580, 581, 587, 675, 694, 700, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 756, 788, 810, 816, 863, 870, 874, 888], "tmax": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 28, 31, 32, 33, 34, 35, 38, 40, 42, 45, 46, 49, 51, 59, 60, 61, 70, 72, 73, 74, 83, 84, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 110, 111, 112, 113, 114, 117, 121, 128, 129, 132, 133, 136, 137, 140, 141, 142, 144, 145, 146, 149, 151, 152, 162, 166, 167, 168, 172, 177, 180, 181, 182, 183, 184, 185, 191, 195, 196, 199, 200, 201, 205, 206, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 228, 229, 230, 231, 232, 235, 237, 240, 241, 242, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 343, 345, 356, 357, 358, 361, 419, 425, 437, 439, 480, 481, 482, 536, 553, 575, 576, 580, 581, 587, 694, 697, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 756, 788, 797, 810, 816, 863, 867, 870, 874, 888], "event_id": [1, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 28, 32, 33, 34, 42, 45, 46, 49, 70, 72, 73, 74, 88, 94, 96, 97, 99, 100, 103, 104, 107, 110, 112, 113, 117, 121, 128, 132, 135, 136, 137, 140, 141, 142, 144, 149, 151, 152, 162, 166, 168, 172, 177, 180, 183, 184, 185, 191, 196, 204, 205, 207, 211, 213, 217, 222, 223, 224, 229, 230, 231, 232, 235, 237, 240, 241, 242, 257, 258, 259, 260, 265, 266, 275, 284, 357, 429, 435, 437, 440, 442, 481, 482, 498, 528, 564, 575, 576, 580, 581, 585, 586, 587, 588, 589, 619, 621, 622, 694, 710, 711, 786, 789, 809, 863, 870, 874, 888], "0": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 240, 241, 242, 245, 247, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 289, 294, 298, 299, 301, 306, 307, 308, 309, 311, 314, 315, 316, 319, 320, 323, 326, 328, 330, 332, 337, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 367, 370, 371, 372, 373, 382, 389, 390, 391, 392, 405, 406, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 432, 433, 434, 437, 438, 440, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 463, 466, 469, 470, 471, 472, 473, 476, 478, 479, 480, 481, 482, 489, 490, 491, 492, 493, 494, 496, 497, 498, 500, 502, 505, 510, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 530, 531, 532, 533, 536, 537, 538, 541, 542, 543, 545, 546, 547, 548, 549, 550, 554, 555, 556, 557, 562, 563, 564, 565, 566, 568, 571, 572, 573, 574, 575, 576, 578, 580, 581, 582, 584, 585, 586, 587, 588, 590, 593, 595, 597, 599, 600, 603, 604, 609, 615, 617, 619, 620, 621, 622, 625, 626, 627, 629, 630, 638, 640, 641, 643, 644, 646, 649, 652, 654, 656, 657, 658, 659, 660, 661, 662, 664, 666, 667, 671, 672, 673, 674, 675, 677, 686, 687, 689, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 718, 720, 721, 724, 725, 726, 727, 730, 732, 734, 735, 736, 737, 738, 739, 740, 741, 744, 745, 746, 751, 753, 756, 757, 759, 760, 761, 765, 766, 772, 773, 774, 775, 779, 780, 781, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 825, 829, 832, 834, 838, 839, 841, 843, 845, 846, 847, 850, 853, 863, 864, 867, 869, 870, 873], "2": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 130, 131, 132, 133, 136, 137, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 191, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 221, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 237, 238, 239, 240, 241, 242, 245, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 288, 289, 291, 298, 299, 301, 304, 316, 318, 323, 337, 343, 345, 349, 350, 356, 357, 358, 359, 361, 362, 370, 382, 390, 391, 405, 406, 413, 415, 416, 419, 420, 421, 423, 424, 425, 429, 430, 432, 434, 435, 436, 442, 446, 448, 449, 451, 452, 454, 458, 465, 468, 475, 476, 478, 479, 481, 482, 489, 496, 505, 510, 518, 520, 525, 528, 529, 530, 536, 538, 539, 540, 541, 543, 545, 546, 547, 557, 562, 563, 564, 568, 571, 572, 573, 575, 576, 577, 578, 580, 581, 584, 591, 593, 594, 595, 599, 605, 610, 612, 625, 626, 629, 632, 635, 637, 648, 652, 663, 664, 665, 666, 667, 668, 669, 670, 672, 673, 680, 682, 683, 684, 685, 687, 689, 690, 691, 694, 695, 696, 697, 698, 699, 700, 708, 709, 710, 711, 712, 720, 721, 723, 724, 726, 727, 731, 734, 735, 736, 737, 738, 739, 740, 743, 746, 756, 757, 760, 761, 773, 780, 787, 788, 790, 792, 795, 796, 797, 798, 799, 800, 801, 808, 810, 811, 812, 814, 815, 816, 818, 819, 826, 845, 846, 847, 852, 853, 855, 862, 863, 864, 865, 867, 870, 873], "take": [1, 4, 5, 7, 10, 16, 19, 26, 31, 38, 41, 43, 44, 45, 47, 50, 71, 72, 75, 77, 80, 83, 94, 96, 97, 101, 109, 110, 113, 115, 119, 123, 127, 131, 133, 135, 137, 140, 141, 142, 144, 145, 149, 150, 152, 155, 158, 159, 160, 162, 166, 167, 168, 169, 171, 172, 176, 179, 181, 182, 183, 185, 189, 192, 195, 196, 201, 202, 205, 206, 207, 208, 210, 216, 222, 224, 227, 235, 236, 237, 241, 242, 257, 259, 262, 265, 266, 267, 268, 272, 273, 274, 275, 276, 277, 279, 280, 281, 283, 284, 288, 298, 299, 311, 314, 332, 342, 344, 356, 360, 361, 362, 369, 371, 372, 373, 413, 420, 437, 442, 446, 454, 456, 457, 470, 472, 476, 478, 479, 481, 482, 508, 530, 531, 532, 533, 534, 536, 537, 541, 546, 547, 563, 566, 568, 571, 643, 649, 656, 658, 669, 674, 694, 703, 708, 710, 711, 712, 753, 756, 757, 773, 780, 786, 788, 790, 795, 796, 799, 808, 816, 826, 843, 847, 850, 851, 855, 869, 870, 871, 873, 888], "right": [1, 5, 8, 10, 11, 13, 15, 39, 40, 41, 43, 45, 47, 51, 52, 57, 60, 62, 68, 71, 72, 74, 80, 83, 94, 109, 112, 113, 114, 116, 120, 127, 128, 132, 134, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 158, 160, 161, 166, 168, 172, 175, 176, 178, 179, 180, 181, 191, 192, 195, 201, 202, 204, 205, 206, 207, 210, 216, 217, 218, 219, 223, 224, 229, 231, 232, 235, 236, 237, 240, 241, 261, 262, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 279, 280, 281, 314, 316, 326, 327, 337, 338, 362, 382, 413, 420, 435, 437, 440, 447, 471, 479, 481, 482, 500, 505, 515, 528, 562, 563, 583, 642, 671, 708, 710, 711, 712, 724, 734, 756, 769, 779, 780, 786, 787, 788, 792, 794, 795, 799, 807, 808, 809, 811, 816, 820, 843, 845, 847, 850, 864, 867, 869, 870, 873, 888], "hand": [1, 5, 8, 9, 112, 156, 160, 200, 205, 206, 207, 242, 270, 382, 563, 870, 888], "somato": [1, 32, 33, 34, 46, 62, 113, 171, 241, 864, 878, 888], "reject": [1, 5, 7, 11, 13, 16, 27, 28, 32, 42, 45, 46, 62, 70, 77, 78, 83, 96, 97, 99, 100, 101, 103, 104, 107, 110, 113, 114, 117, 121, 132, 140, 141, 142, 144, 145, 146, 151, 152, 165, 166, 172, 177, 180, 189, 191, 196, 200, 205, 206, 207, 210, 211, 214, 215, 218, 227, 229, 230, 231, 232, 235, 237, 241, 245, 257, 258, 259, 260, 265, 266, 267, 270, 275, 359, 361, 481, 482, 522, 560, 563, 565, 566, 575, 576, 577, 580, 581, 585, 586, 595, 618, 622, 634, 686, 692, 694, 786, 799, 800, 801, 802, 870, 888], "dict": [1, 4, 5, 7, 8, 9, 10, 11, 13, 14, 16, 18, 21, 22, 26, 28, 32, 35, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 54, 55, 58, 59, 60, 62, 66, 68, 70, 71, 75, 77, 79, 80, 86, 88, 93, 94, 96, 97, 99, 100, 101, 103, 104, 107, 109, 110, 112, 113, 114, 115, 116, 117, 120, 121, 123, 127, 128, 131, 132, 135, 136, 137, 140, 141, 142, 143, 145, 150, 151, 152, 157, 158, 159, 160, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 184, 191, 192, 195, 196, 201, 202, 204, 205, 206, 207, 208, 210, 211, 212, 213, 216, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 241, 242, 258, 259, 260, 262, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 287, 289, 298, 299, 304, 306, 312, 314, 316, 326, 327, 342, 343, 344, 345, 346, 347, 348, 356, 359, 360, 361, 367, 368, 369, 370, 371, 372, 373, 388, 394, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 430, 435, 437, 440, 442, 445, 447, 448, 449, 451, 452, 456, 457, 458, 459, 461, 463, 464, 465, 466, 473, 476, 478, 479, 480, 481, 482, 485, 489, 496, 501, 505, 514, 517, 518, 519, 520, 521, 524, 525, 529, 530, 531, 532, 533, 534, 536, 537, 541, 543, 546, 547, 548, 553, 555, 556, 559, 561, 562, 563, 564, 565, 573, 575, 576, 578, 580, 581, 583, 584, 591, 606, 611, 615, 619, 620, 621, 622, 624, 628, 634, 638, 640, 643, 649, 657, 659, 660, 661, 671, 673, 676, 677, 693, 694, 695, 696, 698, 699, 703, 705, 708, 710, 711, 712, 724, 734, 742, 743, 745, 746, 756, 757, 772, 773, 775, 776, 778, 779, 780, 784, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 799, 801, 807, 808, 809, 811, 814, 815, 816, 817, 818, 819, 820, 826, 831, 841, 842, 847, 863, 870, 874, 888], "mag": [1, 5, 7, 8, 9, 12, 13, 21, 22, 26, 28, 31, 32, 33, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 60, 70, 75, 77, 80, 81, 82, 87, 93, 94, 104, 107, 109, 116, 119, 120, 121, 123, 124, 132, 140, 142, 145, 146, 150, 152, 156, 157, 158, 162, 166, 169, 170, 172, 176, 177, 178, 179, 180, 181, 183, 184, 185, 191, 196, 199, 201, 203, 205, 206, 207, 209, 210, 216, 222, 223, 232, 235, 237, 240, 257, 260, 262, 265, 266, 267, 268, 272, 273, 275, 276, 279, 280, 281, 298, 299, 313, 320, 321, 340, 356, 360, 361, 371, 372, 373, 375, 413, 420, 422, 456, 457, 476, 478, 479, 481, 482, 518, 541, 560, 561, 562, 563, 568, 573, 575, 576, 578, 580, 581, 584, 648, 694, 708, 710, 711, 712, 779, 780, 786, 787, 788, 790, 792, 794, 795, 796, 799, 809, 811, 812, 816, 817, 818, 843, 863, 870, 888], "4e": [1, 9, 28, 31, 42, 45, 70, 79, 82, 93, 104, 107, 121, 132, 152, 162, 177, 180, 185, 191, 196, 205, 223, 224, 232, 260, 265, 266, 275, 361, 481, 482, 563, 580, 581, 694, 786, 809, 863], "12": [1, 7, 9, 11, 12, 13, 18, 19, 21, 24, 28, 32, 33, 34, 35, 42, 43, 44, 45, 46, 47, 49, 56, 59, 65, 70, 73, 77, 80, 81, 83, 85, 101, 103, 104, 107, 108, 109, 112, 113, 114, 121, 127, 132, 136, 137, 139, 143, 145, 146, 148, 151, 152, 154, 161, 162, 164, 166, 168, 169, 171, 172, 175, 177, 179, 180, 183, 185, 187, 191, 195, 196, 199, 201, 202, 203, 204, 205, 207, 209, 210, 215, 216, 218, 222, 224, 227, 228, 229, 230, 231, 232, 234, 236, 237, 241, 245, 259, 260, 263, 264, 265, 266, 267, 268, 270, 272, 273, 275, 276, 277, 278, 279, 280, 281, 298, 307, 311, 315, 337, 349, 353, 354, 356, 361, 362, 382, 396, 419, 435, 454, 456, 479, 481, 482, 493, 524, 528, 530, 563, 574, 575, 576, 580, 581, 593, 595, 661, 694, 708, 710, 711, 712, 736, 739, 774, 786, 788, 793, 805, 809, 812, 863, 864, 867, 870, 873], "eog": [1, 4, 8, 9, 11, 12, 14, 15, 16, 27, 28, 32, 33, 42, 45, 46, 62, 70, 72, 75, 77, 78, 81, 82, 83, 85, 88, 90, 93, 94, 96, 97, 100, 104, 107, 108, 109, 110, 113, 117, 127, 128, 137, 140, 141, 145, 146, 149, 151, 152, 166, 167, 168, 169, 172, 177, 180, 189, 191, 192, 196, 200, 201, 203, 206, 208, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 229, 230, 231, 232, 235, 237, 241, 260, 265, 266, 267, 268, 270, 275, 313, 361, 375, 446, 454, 481, 482, 489, 491, 492, 493, 496, 497, 498, 504, 508, 554, 560, 562, 563, 576, 580, 581, 586, 589, 605, 610, 619, 660, 661, 694, 708, 710, 711, 712, 786, 787, 802, 807, 809, 843, 863, 864, 865, 870, 873, 874, 888], "250e": [1, 32, 144, 166, 191, 204, 207, 260, 265, 266, 361, 563, 580, 581, 694], "6": [1, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 69, 71, 72, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 119, 120, 121, 124, 127, 130, 131, 133, 136, 140, 141, 142, 143, 144, 145, 146, 151, 152, 156, 157, 158, 159, 160, 162, 166, 168, 169, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 191, 195, 196, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 215, 216, 217, 218, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 239, 241, 242, 245, 257, 260, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 278, 279, 280, 281, 283, 316, 337, 361, 382, 389, 413, 415, 418, 420, 448, 449, 451, 452, 481, 482, 530, 562, 563, 572, 578, 579, 580, 581, 593, 597, 648, 661, 695, 696, 698, 699, 708, 710, 711, 712, 724, 734, 735, 736, 738, 739, 771, 772, 773, 786, 787, 788, 792, 795, 799, 801, 808, 809, 811, 815, 816, 818, 845, 846, 853, 863, 864, 870, 873], "data_path": [1, 2, 5, 7, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 160, 161, 162, 166, 167, 168, 169, 170, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 192, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 223, 224, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 265, 266, 267, 268, 275, 388, 481, 482, 847, 864, 870, 878, 888], "raw_path": [1, 172, 184], "meg": [1, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 65, 69, 70, 72, 73, 74, 77, 78, 80, 81, 82, 83, 84, 85, 86, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 124, 127, 129, 130, 131, 132, 134, 135, 136, 140, 141, 142, 145, 146, 149, 150, 151, 152, 156, 157, 158, 159, 160, 162, 165, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 191, 192, 193, 194, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 218, 219, 220, 222, 224, 229, 230, 231, 232, 235, 236, 237, 240, 241, 245, 257, 260, 262, 265, 266, 267, 268, 269, 270, 274, 276, 278, 285, 286, 298, 299, 301, 303, 312, 317, 320, 321, 322, 327, 329, 331, 343, 355, 356, 357, 358, 359, 360, 361, 366, 371, 372, 373, 375, 395, 404, 413, 415, 420, 421, 429, 434, 454, 456, 457, 464, 470, 476, 478, 479, 481, 482, 484, 488, 492, 494, 502, 503, 506, 512, 514, 521, 523, 525, 529, 530, 531, 541, 542, 544, 545, 557, 560, 561, 562, 563, 565, 568, 573, 574, 575, 576, 577, 578, 579, 580, 581, 584, 585, 587, 591, 595, 596, 601, 603, 610, 616, 621, 625, 627, 642, 648, 660, 661, 665, 668, 670, 673, 676, 694, 695, 696, 698, 699, 703, 708, 710, 711, 712, 716, 717, 718, 719, 721, 738, 739, 742, 743, 756, 769, 772, 773, 779, 780, 786, 787, 788, 789, 790, 791, 792, 793, 795, 796, 798, 799, 800, 807, 808, 810, 811, 816, 818, 823, 843, 844, 847, 854, 859, 862, 863, 867, 873, 874, 878, 888], "subj001_somatosensory_20111109_01_aux": [1, 119], "f": [1, 5, 8, 9, 10, 18, 19, 21, 22, 27, 28, 29, 32, 33, 39, 40, 41, 46, 47, 61, 64, 71, 72, 83, 86, 90, 92, 94, 98, 102, 104, 107, 109, 111, 112, 113, 114, 115, 119, 126, 127, 135, 141, 144, 149, 150, 151, 157, 158, 159, 160, 165, 167, 170, 172, 176, 182, 191, 195, 196, 199, 200, 202, 205, 207, 209, 210, 211, 218, 222, 223, 224, 227, 229, 230, 231, 233, 234, 235, 236, 237, 240, 241, 242, 245, 257, 259, 262, 265, 266, 267, 268, 270, 274, 289, 298, 304, 320, 340, 355, 390, 452, 454, 481, 482, 529, 560, 572, 622, 664, 688, 689, 690, 691, 694, 696, 699, 711, 724, 734, 738, 743, 777, 780, 787, 843, 853, 855, 863, 864, 870, 888], "d": [1, 4, 7, 11, 12, 15, 19, 21, 22, 26, 34, 39, 41, 46, 50, 52, 57, 59, 66, 73, 80, 81, 82, 84, 93, 94, 100, 101, 109, 111, 113, 118, 119, 120, 123, 126, 127, 129, 135, 136, 141, 157, 158, 159, 160, 171, 179, 180, 182, 183, 184, 185, 191, 195, 202, 208, 209, 218, 224, 227, 231, 235, 236, 237, 240, 242, 245, 257, 259, 262, 265, 266, 267, 268, 270, 274, 289, 298, 299, 304, 323, 356, 390, 421, 476, 481, 482, 494, 498, 529, 530, 626, 652, 701, 702, 710, 712, 727, 743, 757, 796, 809, 855, 864, 865, 870, 876, 888], "crop": [1, 5, 8, 9, 10, 12, 21, 30, 31, 32, 33, 34, 35, 38, 40, 42, 44, 45, 46, 51, 59, 60, 75, 77, 81, 82, 83, 84, 109, 112, 116, 127, 137, 140, 141, 142, 146, 149, 151, 167, 168, 172, 176, 179, 180, 181, 183, 184, 185, 199, 200, 203, 205, 206, 207, 208, 209, 210, 212, 213, 216, 217, 218, 219, 224, 228, 229, 235, 237, 240, 241, 259, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 573, 596, 609, 708, 711, 865, 888], "half": [1, 71, 202, 203, 237, 264, 265, 266, 267, 268, 270, 272, 273, 275, 276, 279, 280, 281, 343, 415, 449, 451, 452, 481, 482, 582, 695, 696, 698, 699, 703, 720, 722, 724, 734, 736, 738, 739, 756, 780, 786, 788, 809, 814, 819, 847, 870, 888], "length": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 73, 74, 77, 82, 83, 84, 88, 99, 111, 112, 113, 114, 115, 121, 133, 136, 141, 143, 144, 149, 151, 172, 175, 191, 196, 199, 201, 203, 204, 205, 206, 207, 210, 211, 212, 216, 219, 222, 228, 232, 240, 257, 260, 262, 263, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 279, 280, 281, 288, 315, 361, 396, 413, 415, 418, 419, 420, 421, 424, 425, 428, 449, 451, 452, 471, 479, 480, 481, 482, 533, 545, 547, 562, 563, 565, 571, 580, 581, 595, 602, 625, 626, 647, 658, 674, 688, 689, 693, 694, 708, 710, 711, 712, 713, 714, 715, 716, 718, 720, 723, 726, 727, 731, 735, 736, 737, 738, 739, 740, 746, 756, 771, 772, 773, 780, 787, 788, 790, 792, 795, 797, 799, 808, 811, 814, 815, 816, 817, 818, 819, 843, 863, 864, 870, 888], "save": [1, 5, 7, 9, 11, 29, 30, 32, 34, 41, 43, 44, 61, 62, 71, 75, 108, 109, 110, 113, 115, 135, 136, 142, 143, 150, 151, 156, 157, 158, 160, 161, 162, 168, 170, 177, 180, 181, 183, 188, 190, 191, 200, 201, 203, 205, 207, 208, 210, 217, 218, 219, 224, 231, 235, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 283, 289, 314, 315, 340, 382, 388, 417, 443, 444, 445, 446, 472, 480, 481, 482, 498, 501, 506, 536, 537, 552, 562, 563, 608, 620, 621, 624, 625, 629, 632, 635, 646, 698, 699, 708, 709, 710, 711, 712, 728, 729, 741, 743, 756, 830, 834, 835, 837, 845, 847, 851, 865, 867, 870, 873, 874, 888], "memori": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 257, 260, 265, 266, 267, 268, 283, 292, 293, 296, 332, 361, 363, 365, 376, 415, 422, 425, 426, 430, 451, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 522, 532, 533, 534, 536, 537, 543, 565, 595, 650, 655, 657, 695, 696, 698, 699, 714, 717, 733, 735, 736, 737, 738, 739, 740, 756, 790, 845, 846, 853, 865, 874, 876, 888], "120": [1, 5, 7, 24, 33, 35, 38, 42, 45, 59, 81, 82, 106, 108, 112, 133, 135, 142, 151, 160, 169, 176, 181, 191, 199, 201, 203, 205, 209, 212, 232, 241, 245, 257, 265, 266, 436, 481, 482, 573, 578, 786, 809], "load_data": [1, 4, 8, 9, 12, 21, 34, 42, 71, 72, 75, 76, 77, 81, 82, 83, 84, 99, 109, 112, 113, 115, 136, 146, 151, 159, 166, 168, 172, 182, 191, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 211, 212, 216, 217, 218, 219, 241, 265, 266, 267, 268, 481, 482, 864, 870, 878, 888], "plot": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 45, 46, 49, 51, 53, 54, 55, 56, 58, 59, 60, 62, 64, 65, 66, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 121, 122, 129, 130, 131, 132, 134, 135, 137, 140, 143, 144, 145, 146, 149, 151, 153, 154, 156, 158, 159, 160, 165, 166, 167, 168, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 216, 218, 220, 221, 222, 224, 227, 228, 232, 235, 236, 237, 240, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 314, 315, 323, 325, 326, 330, 340, 356, 366, 375, 413, 417, 420, 428, 431, 433, 439, 442, 454, 456, 473, 481, 482, 488, 492, 494, 497, 502, 506, 521, 525, 526, 529, 530, 539, 540, 541, 542, 544, 559, 560, 562, 563, 578, 603, 616, 617, 622, 625, 627, 630, 635, 640, 647, 657, 694, 708, 709, 710, 711, 712, 724, 734, 756, 757, 758, 759, 761, 765, 767, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 823, 824, 826, 843, 846, 847, 851, 863, 864, 865, 868, 870, 871, 874, 876, 877, 888], "set": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 44, 45, 46, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 62, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 82, 83, 84, 86, 87, 88, 90, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 126, 127, 128, 132, 133, 135, 136, 137, 140, 141, 142, 143, 144, 146, 149, 150, 152, 155, 156, 158, 159, 160, 161, 162, 165, 166, 168, 170, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 212, 213, 214, 215, 218, 222, 223, 224, 227, 230, 241, 242, 258, 259, 260, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 288, 289, 298, 299, 301, 303, 304, 305, 319, 327, 332, 343, 356, 357, 359, 361, 362, 363, 367, 371, 377, 378, 379, 380, 381, 382, 384, 385, 386, 388, 390, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 436, 437, 438, 441, 442, 443, 446, 447, 448, 452, 454, 456, 469, 470, 471, 472, 478, 481, 482, 483, 489, 496, 497, 501, 504, 506, 515, 517, 519, 521, 523, 524, 525, 526, 528, 529, 532, 533, 534, 536, 537, 541, 546, 547, 549, 550, 551, 554, 562, 563, 564, 565, 566, 568, 575, 576, 577, 578, 580, 581, 583, 584, 596, 608, 613, 619, 620, 624, 625, 626, 629, 632, 635, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 673, 685, 686, 690, 692, 694, 695, 696, 697, 698, 699, 703, 708, 710, 711, 712, 713, 714, 715, 716, 717, 718, 724, 726, 727, 734, 735, 736, 737, 738, 739, 743, 746, 747, 749, 754, 755, 756, 759, 773, 775, 780, 783, 784, 786, 788, 791, 792, 793, 794, 795, 799, 801, 802, 803, 808, 809, 810, 811, 812, 814, 816, 818, 819, 820, 821, 822, 825, 828, 843, 845, 846, 851, 852, 854, 865, 867, 869, 870, 873, 874, 877, 888], "channel": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 66, 68, 69, 70, 71, 72, 73, 74, 77, 78, 80, 81, 82, 83, 84, 85, 86, 88, 90, 92, 93, 94, 95, 96, 97, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 130, 131, 132, 133, 135, 136, 137, 141, 142, 144, 146, 150, 152, 156, 157, 158, 159, 162, 165, 166, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 190, 191, 192, 195, 196, 199, 203, 204, 206, 207, 209, 210, 212, 214, 215, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 240, 241, 245, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 279, 280, 281, 282, 285, 286, 298, 299, 310, 312, 313, 343, 345, 347, 348, 351, 355, 356, 357, 358, 359, 360, 361, 371, 372, 373, 375, 383, 413, 415, 420, 421, 422, 424, 426, 429, 434, 438, 443, 445, 446, 451, 452, 454, 455, 456, 457, 465, 470, 473, 476, 478, 479, 480, 481, 482, 489, 491, 492, 493, 494, 496, 497, 498, 501, 504, 505, 506, 508, 518, 521, 525, 527, 531, 541, 554, 555, 556, 557, 559, 560, 561, 562, 563, 565, 568, 569, 571, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 594, 595, 596, 599, 600, 601, 603, 606, 609, 610, 619, 620, 621, 622, 624, 625, 626, 627, 642, 643, 648, 649, 652, 658, 660, 661, 662, 676, 688, 694, 695, 696, 698, 699, 703, 708, 709, 710, 711, 712, 716, 717, 718, 719, 721, 725, 731, 735, 738, 739, 740, 756, 769, 772, 773, 776, 777, 778, 780, 781, 782, 785, 786, 787, 788, 790, 792, 793, 794, 795, 796, 799, 800, 801, 802, 803, 805, 806, 807, 808, 809, 810, 811, 812, 816, 817, 818, 826, 828, 843, 845, 847, 851, 854, 855, 865, 867, 869, 874, 877, 878, 888], "set_channel_typ": [1, 128, 140, 149, 151, 191, 216, 265, 266, 267, 268, 446, 481, 482, 583, 888], "eeg058": 1, "set_eeg_refer": [1, 29, 68, 72, 93, 94, 151, 159, 162, 167, 182, 189, 204, 206, 208, 223, 242, 265, 266, 267, 268, 481, 482, 562, 649, 672, 874, 878, 888], "averag": [1, 2, 4, 5, 7, 10, 11, 13, 14, 15, 16, 18, 19, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 63, 65, 67, 69, 70, 72, 73, 74, 77, 79, 80, 81, 82, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 104, 107, 108, 110, 112, 113, 116, 117, 119, 120, 121, 124, 127, 129, 132, 133, 135, 136, 137, 141, 142, 143, 144, 145, 146, 150, 152, 153, 154, 158, 159, 162, 165, 166, 169, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 191, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 237, 240, 241, 242, 245, 257, 258, 262, 264, 265, 266, 267, 268, 270, 272, 273, 274, 276, 279, 280, 281, 287, 355, 356, 358, 374, 391, 413, 420, 427, 432, 434, 447, 454, 470, 481, 482, 506, 516, 517, 531, 532, 533, 534, 536, 537, 543, 546, 547, 562, 563, 567, 568, 570, 575, 576, 578, 580, 584, 585, 588, 591, 621, 625, 626, 649, 652, 664, 672, 708, 709, 710, 711, 712, 726, 727, 735, 736, 737, 738, 739, 740, 756, 780, 788, 790, 791, 795, 799, 800, 807, 808, 810, 811, 816, 818, 843, 863, 864, 867, 873, 874, 876, 888], "project": [1, 5, 8, 11, 12, 13, 14, 15, 16, 18, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 83, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 132, 133, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 199, 200, 201, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 237, 241, 242, 245, 260, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 279, 280, 281, 285, 286, 298, 299, 301, 303, 343, 345, 349, 356, 357, 358, 359, 361, 371, 373, 390, 421, 433, 454, 456, 457, 480, 481, 482, 502, 522, 524, 526, 529, 531, 541, 562, 563, 574, 575, 576, 577, 579, 584, 591, 595, 603, 610, 618, 627, 633, 648, 649, 652, 672, 685, 703, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 756, 772, 773, 778, 781, 788, 790, 792, 794, 795, 799, 807, 808, 809, 810, 812, 814, 819, 825, 826, 828, 839, 843, 847, 852, 854, 859, 862, 863, 864, 866, 876, 877, 878, 888], "true": [1, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 86, 87, 88, 92, 93, 94, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 129, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 149, 150, 151, 152, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 218, 219, 223, 224, 227, 229, 230, 231, 232, 235, 237, 240, 241, 242, 245, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 289, 298, 299, 301, 303, 304, 305, 308, 309, 310, 311, 314, 315, 316, 319, 322, 323, 324, 325, 326, 327, 340, 342, 343, 344, 345, 346, 349, 356, 360, 361, 362, 363, 365, 366, 371, 372, 373, 377, 379, 380, 381, 382, 384, 385, 386, 388, 390, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 431, 432, 434, 435, 438, 442, 443, 444, 445, 446, 447, 448, 451, 452, 454, 456, 457, 458, 461, 466, 470, 471, 472, 473, 475, 476, 478, 479, 480, 481, 482, 483, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 522, 523, 525, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 539, 540, 541, 543, 545, 546, 547, 548, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 572, 574, 575, 576, 578, 580, 581, 582, 584, 585, 586, 591, 593, 595, 610, 618, 621, 622, 625, 627, 630, 638, 640, 643, 646, 649, 651, 652, 654, 656, 657, 663, 664, 665, 666, 667, 668, 669, 670, 672, 673, 678, 682, 685, 686, 689, 690, 692, 695, 696, 698, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 714, 715, 717, 718, 720, 724, 725, 726, 733, 734, 735, 736, 737, 738, 739, 740, 741, 743, 751, 754, 756, 761, 764, 765, 769, 770, 772, 773, 774, 775, 777, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 824, 826, 830, 831, 832, 833, 834, 835, 836, 838, 839, 840, 841, 842, 845, 847, 863, 864, 867, 870, 888], "show": [1, 4, 7, 8, 10, 12, 13, 14, 15, 16, 19, 22, 26, 27, 28, 29, 31, 32, 35, 37, 38, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 58, 59, 61, 64, 69, 70, 72, 74, 75, 78, 79, 85, 97, 99, 101, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 126, 127, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 150, 151, 152, 155, 156, 157, 159, 160, 166, 168, 169, 170, 172, 176, 178, 179, 180, 181, 182, 190, 191, 199, 201, 202, 203, 204, 205, 206, 207, 209, 211, 213, 216, 218, 219, 222, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 262, 263, 264, 265, 266, 267, 268, 270, 273, 274, 278, 279, 280, 281, 309, 311, 314, 315, 413, 420, 454, 472, 473, 481, 482, 513, 554, 560, 562, 563, 578, 584, 586, 707, 708, 709, 710, 712, 724, 734, 756, 764, 765, 772, 773, 774, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 819, 820, 821, 825, 843, 845, 847, 852, 855, 863, 870, 876, 888], "power": [1, 12, 21, 27, 32, 36, 38, 56, 61, 69, 72, 82, 83, 105, 106, 112, 113, 114, 115, 121, 128, 133, 137, 145, 146, 149, 150, 162, 165, 166, 172, 180, 183, 191, 195, 201, 202, 206, 209, 212, 219, 222, 225, 226, 228, 232, 233, 234, 240, 245, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 279, 280, 281, 289, 290, 291, 292, 295, 298, 299, 320, 355, 356, 360, 361, 413, 415, 418, 420, 421, 424, 426, 447, 449, 451, 452, 453, 454, 481, 482, 487, 518, 520, 525, 529, 530, 531, 536, 537, 541, 544, 546, 547, 554, 559, 560, 563, 614, 622, 627, 629, 642, 656, 662, 673, 688, 689, 690, 691, 692, 695, 696, 697, 698, 699, 708, 709, 710, 711, 712, 717, 726, 727, 735, 736, 737, 738, 739, 740, 750, 756, 772, 779, 780, 781, 787, 788, 790, 793, 795, 796, 801, 807, 810, 816, 824, 843, 847, 864, 867, 869, 873, 888], "line": [1, 71, 81, 82, 101, 109, 120, 121, 123, 127, 136, 137, 140, 141, 144, 151, 155, 156, 158, 160, 162, 169, 171, 172, 177, 183, 190, 191, 192, 202, 204, 207, 208, 209, 210, 211, 216, 219, 229, 230, 241, 242, 245, 262, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 337, 343, 349, 413, 420, 472, 481, 482, 513, 519, 562, 563, 578, 602, 610, 622, 629, 638, 641, 708, 710, 712, 756, 764, 769, 772, 773, 780, 781, 786, 787, 788, 790, 792, 794, 795, 796, 798, 799, 802, 803, 804, 807, 808, 809, 810, 811, 813, 814, 815, 816, 818, 819, 836, 841, 845, 846, 850, 852, 854, 859, 863, 864, 865, 867, 870, 878, 888], "interfer": [1, 123, 136, 199, 200, 203, 208, 209, 210, 212, 218, 245, 257, 577, 595, 843, 864, 867], "remov": [1, 7, 16, 18, 21, 27, 28, 31, 32, 35, 42, 51, 58, 59, 60, 68, 70, 71, 72, 73, 75, 76, 77, 78, 81, 82, 85, 90, 93, 99, 103, 109, 112, 113, 119, 127, 132, 136, 140, 141, 142, 143, 146, 149, 150, 151, 157, 158, 160, 161, 162, 166, 167, 168, 170, 172, 176, 177, 180, 181, 182, 183, 184, 191, 196, 199, 200, 201, 202, 203, 204, 207, 208, 210, 212, 216, 218, 219, 224, 229, 230, 231, 232, 240, 242, 245, 257, 259, 262, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 289, 304, 314, 330, 340, 349, 356, 365, 366, 419, 421, 425, 436, 452, 456, 465, 473, 478, 479, 481, 482, 483, 496, 502, 529, 560, 561, 562, 563, 564, 577, 579, 584, 602, 603, 610, 616, 625, 627, 630, 649, 652, 672, 674, 708, 710, 711, 712, 743, 756, 777, 793, 809, 825, 826, 843, 847, 855, 864, 869, 870, 873, 874, 876, 888], "compute_psd": [1, 72, 75, 109, 129, 133, 137, 140, 142, 143, 166, 167, 183, 191, 199, 201, 203, 207, 209, 211, 212, 219, 240, 241, 242, 265, 266, 267, 268, 418, 481, 482, 563, 710, 712, 726, 788, 799, 801, 810, 888], "60": [1, 5, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 28, 29, 30, 31, 33, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 65, 69, 70, 71, 73, 74, 75, 77, 79, 81, 82, 83, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 112, 114, 116, 117, 119, 120, 121, 123, 124, 127, 131, 132, 133, 136, 137, 140, 141, 143, 144, 149, 150, 151, 152, 159, 166, 167, 168, 169, 170, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 216, 217, 218, 219, 223, 224, 227, 228, 230, 231, 232, 235, 237, 240, 257, 452, 481, 482, 593, 797, 864, 888], "fals": [1, 4, 5, 8, 9, 11, 12, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 30, 31, 32, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 54, 55, 58, 60, 64, 65, 68, 69, 70, 71, 72, 73, 75, 76, 77, 79, 81, 82, 83, 84, 86, 88, 90, 94, 96, 97, 99, 100, 101, 104, 107, 108, 109, 110, 112, 114, 115, 118, 119, 120, 123, 124, 126, 127, 129, 134, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 155, 156, 158, 160, 162, 166, 167, 168, 169, 170, 171, 172, 176, 178, 180, 181, 182, 183, 185, 188, 191, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 216, 217, 218, 219, 222, 223, 224, 228, 229, 230, 231, 232, 237, 240, 241, 242, 245, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 289, 292, 293, 296, 298, 299, 301, 303, 304, 305, 309, 310, 311, 314, 315, 316, 319, 322, 324, 325, 326, 328, 342, 344, 346, 349, 356, 361, 362, 363, 365, 366, 371, 374, 377, 379, 380, 381, 382, 384, 385, 386, 388, 390, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 418, 419, 420, 421, 427, 431, 432, 434, 438, 443, 444, 445, 446, 447, 448, 454, 457, 461, 466, 471, 472, 473, 475, 476, 478, 479, 480, 481, 482, 483, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 522, 525, 528, 529, 530, 531, 532, 533, 534, 536, 537, 539, 540, 541, 543, 546, 547, 548, 554, 555, 556, 558, 559, 560, 561, 562, 563, 568, 575, 576, 578, 580, 581, 584, 585, 586, 590, 591, 593, 595, 596, 599, 615, 618, 621, 622, 625, 627, 632, 637, 638, 640, 641, 643, 645, 646, 649, 652, 653, 654, 657, 663, 664, 665, 666, 667, 668, 669, 670, 675, 681, 684, 685, 686, 689, 692, 695, 696, 698, 699, 704, 705, 707, 708, 709, 710, 711, 712, 715, 718, 720, 724, 725, 726, 733, 734, 735, 737, 738, 739, 740, 741, 742, 743, 751, 754, 756, 765, 769, 770, 772, 773, 774, 777, 780, 781, 784, 786, 787, 788, 790, 792, 794, 795, 797, 799, 801, 803, 805, 808, 809, 810, 811, 812, 814, 815, 816, 818, 819, 822, 830, 831, 832, 833, 834, 835, 836, 838, 839, 840, 841, 842, 845, 870, 873, 888], "pick": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 62, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 86, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 119, 120, 121, 127, 129, 131, 132, 133, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 157, 158, 160, 162, 166, 168, 169, 170, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 192, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 219, 222, 223, 224, 228, 229, 230, 231, 232, 235, 237, 240, 241, 260, 262, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 279, 280, 281, 288, 298, 299, 312, 315, 316, 319, 329, 331, 361, 371, 415, 421, 429, 434, 438, 451, 452, 481, 482, 554, 555, 556, 557, 560, 561, 562, 563, 565, 577, 579, 580, 581, 587, 591, 601, 603, 610, 676, 694, 703, 708, 709, 710, 711, 712, 716, 717, 718, 719, 721, 725, 738, 739, 756, 770, 774, 778, 780, 786, 787, 790, 792, 793, 799, 800, 801, 803, 805, 807, 810, 812, 814, 819, 843, 847, 863, 870, 873, 874, 888], "data": [1, 2, 3, 6, 9, 10, 12, 14, 16, 17, 20, 22, 24, 26, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 65, 67, 68, 69, 70, 71, 73, 75, 77, 78, 79, 82, 83, 84, 85, 87, 88, 91, 98, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 117, 118, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 138, 139, 143, 144, 145, 148, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 170, 171, 173, 174, 176, 179, 181, 182, 183, 184, 185, 186, 187, 194, 196, 197, 198, 199, 200, 202, 205, 206, 207, 208, 209, 210, 214, 215, 221, 225, 226, 227, 229, 230, 234, 238, 239, 241, 243, 244, 245, 252, 256, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 312, 313, 314, 315, 316, 318, 320, 322, 326, 328, 329, 330, 331, 337, 339, 340, 341, 343, 345, 347, 348, 349, 350, 351, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 371, 372, 373, 375, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 391, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 436, 437, 439, 440, 441, 442, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 465, 470, 472, 476, 478, 479, 480, 481, 482, 483, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 518, 519, 520, 521, 522, 523, 524, 525, 527, 529, 530, 531, 532, 533, 536, 537, 538, 541, 544, 545, 546, 547, 554, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 587, 589, 591, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 610, 613, 614, 616, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 633, 635, 637, 639, 640, 649, 652, 656, 657, 658, 659, 660, 661, 662, 664, 666, 667, 668, 672, 674, 676, 680, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 703, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 726, 727, 735, 736, 737, 738, 739, 740, 744, 750, 751, 756, 760, 764, 769, 771, 772, 773, 774, 775, 777, 778, 780, 781, 783, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 807, 808, 809, 810, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 823, 824, 826, 828, 834, 841, 842, 843, 844, 847, 848, 854, 859, 862, 865, 868, 869, 874, 875, 876, 878, 883, 888], "exclud": [1, 5, 7, 8, 9, 11, 13, 14, 15, 16, 24, 26, 28, 31, 34, 35, 40, 41, 43, 45, 49, 50, 51, 58, 59, 60, 65, 69, 70, 71, 72, 75, 79, 83, 86, 88, 92, 96, 97, 100, 104, 107, 108, 109, 110, 111, 112, 129, 133, 137, 142, 143, 144, 150, 156, 157, 158, 166, 169, 172, 176, 177, 181, 182, 183, 184, 185, 191, 196, 199, 200, 201, 203, 205, 206, 207, 208, 209, 211, 219, 222, 224, 229, 230, 231, 235, 237, 240, 241, 242, 257, 262, 263, 264, 265, 266, 267, 268, 272, 273, 275, 276, 278, 279, 280, 281, 307, 308, 321, 328, 361, 367, 371, 373, 421, 432, 481, 482, 489, 496, 498, 500, 504, 526, 554, 555, 556, 558, 560, 561, 562, 563, 564, 575, 576, 577, 578, 584, 595, 610, 622, 627, 648, 652, 657, 695, 696, 698, 699, 708, 710, 711, 712, 716, 717, 718, 719, 725, 781, 790, 792, 793, 794, 800, 802, 803, 810, 863, 873, 874, 888], "bad": [1, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 27, 28, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 49, 51, 58, 59, 60, 65, 69, 70, 71, 72, 73, 74, 75, 77, 78, 80, 81, 82, 83, 85, 88, 90, 92, 93, 96, 97, 100, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 117, 121, 127, 128, 129, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 162, 165, 166, 167, 168, 169, 170, 172, 176, 177, 180, 181, 182, 183, 184, 185, 191, 196, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 229, 230, 231, 232, 240, 241, 242, 257, 259, 260, 262, 265, 266, 267, 268, 270, 299, 312, 315, 316, 321, 328, 331, 361, 365, 371, 372, 373, 415, 429, 434, 442, 451, 452, 454, 470, 481, 482, 500, 522, 541, 555, 556, 557, 560, 561, 562, 563, 565, 566, 567, 570, 575, 576, 577, 579, 580, 581, 582, 584, 585, 586, 587, 595, 596, 601, 603, 610, 622, 625, 648, 649, 652, 676, 694, 708, 710, 711, 712, 716, 717, 718, 719, 721, 739, 780, 781, 786, 787, 790, 792, 793, 794, 801, 805, 809, 810, 828, 843, 854, 865, 867, 873, 888], "notch_filt": [1, 5, 82, 136, 167, 191, 203, 210, 212, 265, 266, 267, 268, 451, 481, 482, 878, 888], "arang": [1, 4, 8, 9, 15, 19, 43, 45, 69, 82, 90, 92, 94, 95, 107, 112, 114, 120, 127, 166, 191, 195, 196, 202, 211, 212, 222, 224, 227, 229, 230, 231, 232, 236, 237, 242, 271, 278, 452, 469, 481, 482, 498, 604, 700, 724, 734, 735, 736, 738, 739], "181": [1, 13, 35, 126, 169, 191, 196, 227, 232, 245, 673, 694], "fir_design": [1, 7, 8, 9, 11, 13, 14, 15, 16, 18, 77, 88, 99, 121, 133, 191, 202, 205, 242, 265, 266, 267, 268, 415, 424, 449, 451, 452, 481, 482, 888], "firwin": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 74, 77, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 136, 141, 144, 146, 151, 191, 196, 202, 203, 204, 205, 210, 211, 212, 232, 242, 265, 266, 267, 268, 415, 424, 449, 451, 452, 481, 482, 888], "event": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 27, 28, 32, 33, 34, 42, 45, 46, 49, 62, 71, 72, 73, 74, 75, 78, 80, 81, 82, 83, 84, 85, 88, 90, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 117, 121, 128, 132, 135, 136, 140, 141, 142, 143, 145, 146, 149, 152, 153, 154, 162, 165, 169, 173, 174, 177, 180, 182, 183, 184, 185, 188, 189, 191, 192, 196, 199, 200, 201, 202, 203, 204, 205, 207, 209, 211, 212, 216, 219, 220, 221, 222, 223, 224, 228, 229, 230, 231, 232, 235, 237, 240, 241, 242, 245, 257, 258, 259, 260, 265, 266, 267, 268, 270, 275, 284, 288, 316, 355, 356, 363, 364, 365, 370, 396, 414, 429, 434, 436, 437, 442, 454, 455, 470, 481, 482, 489, 496, 497, 498, 500, 504, 506, 523, 528, 553, 554, 558, 560, 563, 564, 565, 566, 571, 575, 576, 580, 581, 585, 586, 587, 588, 589, 609, 619, 620, 621, 622, 658, 687, 694, 708, 710, 711, 756, 757, 780, 786, 787, 789, 803, 809, 817, 825, 828, 833, 843, 863, 864, 867, 870, 873, 874, 878, 888], "find_ev": [1, 5, 7, 10, 32, 33, 34, 42, 45, 46, 49, 72, 73, 74, 80, 84, 90, 93, 95, 99, 107, 108, 110, 113, 140, 141, 142, 149, 152, 162, 166, 168, 171, 172, 177, 180, 182, 183, 185, 191, 196, 200, 203, 204, 205, 207, 212, 213, 217, 223, 224, 229, 240, 241, 270, 439, 455, 489, 496, 504, 523, 558, 609, 622, 843, 863, 870, 874, 878, 888], "stim_channel": [1, 5, 7, 42, 46, 80, 107, 108, 110, 113, 137, 140, 142, 149, 152, 166, 168, 177, 191, 200, 205, 207, 217, 229, 240, 241, 258, 348, 454, 455, 481, 482, 489, 496, 504, 587, 888], "uppt001": [1, 7, 191], "pick_typ": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 26, 28, 31, 34, 35, 40, 45, 46, 49, 51, 58, 59, 60, 69, 70, 72, 73, 75, 82, 83, 88, 90, 92, 93, 96, 97, 99, 100, 103, 104, 107, 108, 110, 111, 113, 119, 121, 127, 133, 136, 140, 141, 149, 150, 152, 162, 166, 168, 169, 170, 172, 176, 177, 181, 182, 183, 192, 196, 199, 200, 201, 203, 204, 205, 206, 207, 211, 212, 213, 216, 224, 229, 230, 231, 232, 235, 237, 241, 242, 265, 266, 267, 268, 481, 482, 554, 708, 710, 711, 712, 847, 870, 874, 878, 888], "info": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 80, 81, 82, 83, 84, 86, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 127, 128, 133, 135, 136, 137, 140, 142, 144, 146, 149, 150, 151, 155, 156, 157, 158, 159, 160, 162, 165, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 191, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 218, 219, 223, 224, 228, 229, 230, 231, 232, 235, 237, 240, 241, 242, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 274, 275, 276, 278, 283, 285, 286, 298, 299, 300, 307, 308, 312, 313, 315, 319, 320, 321, 322, 326, 328, 329, 331, 342, 344, 346, 351, 356, 360, 361, 367, 371, 372, 373, 375, 413, 415, 420, 421, 422, 424, 429, 432, 434, 438, 443, 444, 445, 446, 449, 451, 452, 456, 457, 464, 465, 473, 476, 478, 479, 480, 481, 482, 483, 486, 488, 501, 518, 521, 524, 525, 526, 529, 531, 541, 554, 557, 559, 560, 561, 562, 563, 565, 567, 574, 577, 579, 580, 581, 584, 587, 591, 595, 599, 600, 601, 603, 610, 613, 620, 624, 642, 643, 648, 649, 652, 654, 659, 660, 661, 662, 672, 673, 676, 694, 708, 709, 710, 711, 712, 716, 717, 718, 719, 721, 739, 745, 751, 754, 756, 769, 772, 773, 776, 777, 780, 781, 782, 786, 787, 790, 791, 792, 793, 796, 798, 803, 805, 808, 809, 810, 812, 818, 826, 834, 843, 845, 847, 850, 852, 863, 864, 865, 867, 870, 876, 878, 888], "eeg": [1, 4, 5, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 59, 60, 61, 63, 64, 65, 67, 69, 70, 73, 74, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 116, 117, 119, 120, 121, 122, 123, 124, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 245, 257, 260, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 298, 299, 301, 303, 304, 307, 308, 312, 313, 314, 316, 318, 320, 321, 325, 326, 328, 329, 330, 331, 332, 333, 336, 337, 339, 355, 356, 357, 358, 359, 360, 361, 365, 366, 367, 371, 372, 373, 375, 391, 404, 405, 406, 413, 415, 417, 420, 421, 422, 428, 429, 432, 434, 437, 442, 445, 446, 454, 456, 457, 470, 472, 476, 478, 479, 481, 482, 487, 489, 491, 492, 493, 496, 497, 498, 499, 502, 504, 506, 508, 509, 511, 518, 521, 523, 525, 526, 529, 530, 531, 541, 542, 544, 545, 554, 560, 561, 562, 563, 564, 565, 568, 571, 572, 575, 576, 578, 579, 580, 581, 586, 587, 591, 594, 601, 603, 610, 614, 616, 618, 619, 621, 622, 625, 626, 627, 637, 640, 648, 649, 652, 657, 661, 668, 673, 676, 694, 695, 696, 698, 699, 703, 708, 710, 711, 712, 716, 717, 718, 719, 721, 738, 739, 748, 756, 772, 773, 776, 780, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 799, 800, 806, 807, 808, 809, 810, 811, 812, 816, 817, 818, 823, 824, 828, 843, 844, 854, 859, 862, 864, 867, 873, 874, 877, 878, 888], "stim": [1, 8, 9, 11, 14, 15, 16, 28, 42, 45, 46, 66, 70, 72, 73, 88, 90, 99, 100, 104, 107, 108, 110, 140, 141, 142, 149, 151, 166, 169, 172, 182, 188, 191, 196, 203, 204, 205, 213, 216, 217, 224, 229, 230, 231, 241, 242, 257, 258, 265, 266, 267, 268, 270, 275, 313, 351, 375, 446, 454, 455, 481, 482, 489, 496, 504, 506, 560, 563, 587, 622, 658, 708, 710, 711, 712, 786, 809, 843, 870, 873, 874, 888], "epoch": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 27, 32, 33, 34, 36, 45, 46, 49, 56, 59, 62, 70, 71, 72, 73, 74, 79, 80, 83, 84, 88, 90, 92, 93, 95, 96, 97, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 112, 113, 121, 122, 128, 130, 132, 135, 136, 141, 148, 150, 162, 167, 168, 169, 170, 177, 179, 180, 181, 182, 183, 184, 185, 188, 191, 195, 196, 199, 200, 203, 206, 207, 210, 212, 213, 217, 218, 223, 224, 228, 229, 230, 231, 240, 241, 242, 252, 257, 258, 259, 260, 263, 264, 266, 267, 268, 270, 271, 272, 273, 275, 276, 279, 280, 281, 282, 292, 293, 296, 315, 316, 319, 355, 356, 357, 359, 360, 361, 363, 397, 413, 415, 418, 419, 420, 421, 422, 425, 426, 427, 428, 429, 438, 439, 442, 443, 454, 472, 478, 481, 482, 487, 500, 516, 521, 522, 528, 529, 530, 531, 532, 533, 534, 536, 537, 544, 546, 547, 558, 560, 562, 563, 564, 565, 571, 572, 575, 576, 580, 581, 582, 583, 587, 594, 595, 610, 618, 619, 620, 621, 622, 629, 633, 649, 652, 662, 672, 693, 694, 708, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 726, 735, 736, 737, 738, 739, 740, 756, 780, 785, 786, 787, 788, 799, 800, 801, 803, 807, 809, 810, 817, 843, 847, 864, 865, 867, 873, 874, 876, 878, 888], "baselin": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 62, 70, 72, 73, 74, 75, 76, 79, 80, 83, 84, 86, 87, 88, 90, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 112, 113, 114, 116, 117, 119, 120, 121, 124, 127, 128, 132, 135, 136, 137, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 160, 162, 165, 166, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 196, 199, 200, 201, 203, 204, 205, 207, 211, 212, 213, 222, 224, 228, 229, 230, 231, 232, 235, 237, 241, 242, 245, 257, 260, 265, 266, 267, 268, 272, 273, 275, 276, 279, 280, 281, 355, 356, 361, 382, 454, 481, 482, 522, 528, 546, 547, 563, 580, 581, 602, 618, 625, 626, 693, 708, 711, 780, 796, 800, 813, 816, 834, 843, 863, 867, 870, 873, 878, 882, 888], "none": [1, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 70, 71, 72, 74, 77, 79, 81, 82, 83, 84, 86, 87, 88, 90, 93, 94, 96, 97, 99, 100, 103, 104, 107, 109, 110, 112, 113, 114, 117, 119, 120, 121, 124, 127, 132, 135, 136, 137, 141, 142, 143, 144, 145, 149, 150, 151, 152, 158, 159, 160, 161, 162, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 191, 195, 196, 202, 203, 204, 205, 207, 208, 210, 211, 212, 213, 218, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 241, 242, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 318, 319, 320, 321, 323, 327, 328, 329, 330, 331, 332, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 461, 462, 463, 464, 465, 466, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 554, 555, 556, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 595, 596, 598, 599, 601, 602, 603, 604, 607, 608, 609, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 671, 672, 673, 674, 675, 676, 678, 679, 680, 681, 682, 683, 684, 685, 687, 693, 694, 695, 696, 697, 698, 699, 700, 703, 704, 705, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 723, 724, 725, 726, 727, 730, 731, 732, 734, 735, 736, 737, 738, 739, 740, 741, 743, 744, 745, 746, 748, 751, 755, 756, 759, 761, 764, 765, 766, 768, 769, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 847, 863, 869, 870, 888], "preload": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 32, 33, 34, 42, 49, 68, 71, 72, 73, 74, 81, 82, 83, 84, 88, 99, 103, 107, 110, 112, 113, 114, 117, 121, 129, 133, 140, 141, 142, 144, 145, 146, 149, 151, 152, 159, 166, 167, 170, 172, 180, 182, 183, 184, 185, 188, 191, 196, 199, 201, 204, 205, 206, 207, 211, 213, 216, 223, 224, 229, 230, 231, 232, 235, 237, 240, 241, 242, 257, 265, 266, 267, 268, 275, 349, 365, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 522, 575, 576, 580, 581, 618, 620, 624, 649, 652, 708, 710, 711, 712, 786, 809, 863, 864, 888], "physiolog": [1, 8, 42, 137, 192, 203, 205, 208, 245, 265, 266, 267, 268, 382, 405, 406, 481, 482, 652, 864, 888], "artifact": [1, 7, 27, 32, 42, 71, 78, 83, 84, 85, 109, 110, 142, 144, 146, 149, 165, 166, 172, 183, 191, 192, 201, 202, 206, 208, 210, 211, 213, 214, 215, 218, 219, 245, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 275, 276, 279, 280, 281, 346, 347, 357, 358, 359, 360, 361, 365, 415, 419, 426, 454, 479, 481, 482, 494, 496, 510, 554, 557, 560, 562, 563, 567, 568, 570, 575, 576, 578, 580, 581, 585, 586, 587, 589, 595, 598, 602, 607, 610, 660, 661, 708, 711, 712, 733, 735, 736, 738, 739, 772, 798, 800, 807, 808, 809, 824, 828, 864, 867, 870, 876, 877, 888], "eyeblink": [1, 213, 576, 581], "heartbeat": [1, 83, 142, 146, 201, 205, 206, 207, 208, 210, 218, 575, 580, 585, 588], "us": [1, 2, 3, 4, 5, 7, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 36, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 54, 55, 56, 58, 59, 60, 61, 62, 63, 67, 69, 70, 71, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 93, 95, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 132, 133, 134, 135, 136, 138, 140, 141, 142, 144, 145, 150, 151, 152, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 196, 199, 200, 201, 202, 203, 204, 206, 207, 209, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 225, 227, 228, 229, 230, 232, 235, 236, 237, 240, 241, 242, 245, 258, 260, 281, 283, 285, 286, 287, 290, 292, 296, 297, 305, 306, 307, 308, 309, 310, 311, 319, 321, 322, 331, 341, 342, 348, 364, 371, 372, 374, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 406, 407, 408, 409, 410, 411, 412, 415, 418, 424, 426, 438, 440, 441, 443, 444, 445, 446, 451, 452, 457, 458, 463, 464, 468, 469, 471, 473, 474, 475, 480, 483, 485, 490, 495, 505, 507, 513, 514, 534, 538, 543, 548, 549, 555, 556, 565, 569, 573, 574, 588, 589, 590, 591, 592, 593, 596, 604, 608, 609, 610, 620, 621, 623, 626, 631, 632, 641, 643, 644, 647, 650, 653, 654, 655, 659, 671, 678, 679, 681, 682, 683, 684, 685, 690, 705, 713, 714, 715, 720, 722, 723, 725, 726, 730, 731, 733, 734, 736, 737, 741, 742, 743, 744, 745, 746, 753, 754, 758, 764, 766, 768, 771, 782, 785, 786, 788, 790, 791, 793, 795, 799, 800, 801, 802, 803, 806, 809, 810, 811, 812, 816, 817, 820, 821, 822, 825, 827, 830, 831, 832, 833, 834, 835, 837, 838, 839, 840, 842, 843, 846, 848, 849, 850, 851, 852, 853, 854, 855, 858, 859, 861, 862, 864, 865, 869, 871, 874, 876, 877, 878, 888], "ssp": [1, 11, 15, 18, 27, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 62, 69, 70, 72, 74, 84, 88, 90, 92, 93, 94, 95, 104, 107, 108, 109, 110, 121, 122, 130, 132, 140, 141, 142, 145, 146, 149, 151, 152, 162, 165, 166, 172, 176, 177, 178, 179, 180, 181, 182, 183, 191, 199, 200, 201, 203, 204, 205, 208, 210, 214, 215, 216, 219, 223, 232, 235, 237, 260, 262, 265, 266, 267, 268, 269, 270, 274, 275, 276, 357, 358, 359, 454, 481, 482, 522, 557, 560, 562, 575, 576, 580, 581, 585, 610, 618, 627, 633, 648, 710, 712, 788, 790, 792, 794, 795, 807, 808, 810, 828, 843, 867, 873, 876, 877, 888], "add_proj": [1, 2, 4, 5, 42, 92, 101, 109, 111, 140, 142, 146, 149, 162, 172, 184, 185, 191, 196, 199, 204, 206, 207, 211, 212, 216, 228, 265, 266, 267, 268, 275, 481, 482, 577, 672], "compute_proj_evok": [1, 206, 357, 359, 878], "copi": [1, 2, 4, 5, 8, 9, 10, 12, 18, 19, 22, 27, 38, 45, 46, 47, 48, 49, 54, 58, 62, 68, 71, 74, 75, 79, 84, 107, 109, 114, 119, 127, 136, 140, 141, 144, 149, 150, 151, 155, 161, 162, 166, 168, 169, 171, 172, 176, 178, 185, 199, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 216, 218, 224, 228, 231, 257, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 278, 279, 280, 281, 282, 288, 289, 304, 309, 311, 314, 319, 366, 372, 374, 379, 380, 381, 382, 384, 385, 386, 388, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 422, 435, 438, 451, 452, 481, 482, 527, 529, 543, 555, 556, 559, 562, 563, 572, 575, 576, 582, 587, 591, 596, 610, 619, 646, 649, 652, 705, 708, 709, 710, 711, 712, 714, 716, 717, 718, 719, 720, 725, 742, 743, 847, 855, 865, 867, 870, 873, 874, 888], "apply_proj": [1, 72, 94, 142, 146, 149, 159, 167, 182, 206, 207, 208, 212, 265, 266, 267, 268, 443, 444, 445, 446, 481, 482, 577, 652, 809, 888], "fix": [1, 5, 22, 31, 40, 41, 45, 47, 48, 49, 54, 55, 58, 61, 80, 90, 100, 140, 142, 158, 163, 164, 165, 168, 170, 176, 180, 196, 211, 212, 223, 245, 258, 263, 264, 267, 268, 269, 276, 298, 299, 310, 322, 356, 363, 366, 426, 454, 456, 458, 472, 476, 478, 479, 481, 519, 523, 525, 530, 531, 532, 533, 534, 541, 542, 545, 546, 547, 563, 567, 571, 593, 615, 627, 638, 648, 714, 717, 724, 734, 735, 736, 738, 739, 772, 791, 835, 836, 841, 845, 847, 852, 866, 867, 870, 873, 888], "preprocess": [1, 4, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 69, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 88, 99, 112, 137, 144, 146, 172, 184, 188, 191, 192, 195, 196, 199, 200, 201, 202, 204, 205, 206, 207, 209, 210, 215, 219, 259, 265, 266, 267, 268, 270, 275, 355, 413, 417, 420, 422, 434, 442, 454, 481, 482, 501, 503, 510, 557, 560, 620, 712, 756, 776, 780, 786, 789, 794, 798, 799, 800, 801, 802, 803, 809, 843, 854, 864, 865, 867, 870, 874, 876, 878, 888], "fix_stim_artifact": [1, 878, 888], "correct": [1, 8, 9, 11, 12, 16, 18, 21, 27, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 62, 70, 72, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 90, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 112, 113, 114, 116, 117, 119, 120, 121, 127, 128, 131, 132, 135, 136, 137, 140, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 156, 159, 160, 161, 162, 165, 166, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 192, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 213, 222, 223, 224, 228, 229, 230, 231, 232, 235, 236, 237, 241, 242, 245, 257, 259, 260, 262, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 279, 280, 281, 288, 311, 322, 355, 356, 361, 367, 413, 419, 420, 425, 432, 434, 452, 454, 463, 481, 482, 487, 489, 493, 496, 510, 511, 528, 531, 546, 547, 560, 562, 563, 564, 573, 574, 577, 580, 581, 584, 595, 598, 602, 609, 615, 622, 625, 626, 644, 646, 663, 664, 665, 666, 667, 668, 669, 670, 686, 689, 692, 693, 694, 695, 696, 697, 708, 710, 711, 712, 720, 727, 780, 787, 788, 794, 795, 800, 808, 810, 811, 813, 816, 834, 836, 843, 845, 847, 852, 862, 863, 866, 867, 870, 882, 885, 888], "delai": [1, 4, 19, 191, 195, 206, 207, 211, 245, 258, 260, 265, 266, 267, 268, 419, 425, 430, 448, 449, 451, 452, 481, 482, 522, 618, 797, 864, 888], "due": [1, 5, 40, 43, 47, 81, 168, 189, 190, 199, 201, 202, 206, 210, 211, 212, 216, 219, 223, 242, 261, 265, 266, 267, 268, 269, 271, 405, 412, 419, 430, 434, 447, 478, 479, 481, 482, 573, 574, 584, 591, 595, 609, 629, 635, 711, 756, 837, 843, 863, 867, 870, 888], "hardwar": [1, 166, 190, 201, 208, 258, 265, 266, 270, 377, 405, 481, 482, 563, 786, 803, 809, 843, 853, 870, 873, 888], "i": [1, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 21, 22, 26, 27, 28, 31, 32, 34, 35, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 54, 58, 59, 60, 61, 62, 64, 66, 68, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 87, 88, 90, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 109, 110, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123, 126, 127, 128, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 169, 171, 172, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 245, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 297, 298, 299, 301, 303, 304, 306, 308, 309, 310, 314, 316, 319, 320, 322, 324, 325, 326, 327, 329, 331, 332, 333, 339, 341, 343, 344, 345, 349, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 371, 372, 373, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 469, 470, 471, 472, 473, 476, 478, 479, 480, 481, 482, 483, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 519, 521, 522, 523, 524, 525, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 549, 550, 552, 553, 554, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 593, 594, 595, 596, 599, 600, 602, 603, 604, 609, 610, 612, 613, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 629, 630, 632, 635, 638, 641, 644, 645, 646, 647, 649, 650, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 678, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 721, 724, 726, 727, 731, 733, 734, 735, 736, 737, 738, 739, 740, 741, 743, 746, 750, 751, 752, 754, 755, 756, 757, 759, 761, 764, 765, 766, 768, 769, 772, 773, 774, 777, 779, 780, 781, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 833, 834, 836, 838, 841, 843, 846, 847, 848, 850, 852, 855, 858, 859, 861, 863, 864, 865, 866, 868, 869, 871, 872, 873, 874, 875, 876, 878, 888], "4": [1, 2, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 127, 130, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 156, 157, 158, 159, 160, 161, 162, 164, 166, 168, 169, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 191, 192, 194, 195, 196, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 222, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 240, 241, 242, 244, 245, 257, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 279, 280, 281, 298, 299, 303, 307, 308, 314, 315, 316, 326, 337, 340, 356, 382, 391, 413, 419, 420, 421, 426, 432, 436, 437, 448, 454, 456, 471, 478, 479, 481, 482, 519, 530, 537, 554, 555, 556, 562, 563, 568, 570, 572, 575, 577, 578, 586, 592, 594, 604, 610, 627, 629, 648, 652, 657, 661, 668, 688, 689, 692, 696, 708, 710, 711, 712, 724, 725, 727, 731, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 756, 759, 771, 772, 773, 775, 780, 786, 787, 788, 790, 792, 795, 796, 799, 806, 808, 809, 810, 811, 812, 814, 816, 818, 819, 820, 843, 845, 846, 852, 853, 863, 864, 867, 870, 873], "m": [1, 2, 4, 5, 8, 16, 18, 19, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 39, 40, 41, 44, 45, 46, 48, 50, 51, 53, 54, 55, 57, 58, 59, 60, 61, 70, 72, 73, 74, 79, 86, 87, 96, 97, 98, 99, 100, 101, 103, 105, 109, 110, 113, 114, 116, 119, 120, 123, 126, 127, 135, 137, 140, 141, 143, 144, 145, 149, 150, 151, 156, 157, 158, 159, 161, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 195, 200, 201, 202, 205, 207, 209, 210, 212, 217, 218, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 245, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 276, 279, 280, 281, 301, 306, 307, 327, 332, 337, 339, 341, 343, 345, 346, 347, 349, 356, 361, 367, 375, 382, 390, 405, 406, 413, 415, 417, 419, 420, 421, 424, 434, 437, 449, 451, 452, 456, 474, 475, 478, 479, 481, 482, 484, 497, 518, 526, 530, 538, 541, 545, 562, 563, 565, 571, 572, 574, 577, 578, 580, 581, 583, 584, 593, 595, 600, 603, 619, 657, 661, 665, 668, 670, 673, 678, 679, 680, 682, 683, 689, 694, 695, 696, 698, 699, 703, 708, 710, 711, 712, 724, 734, 737, 740, 756, 759, 773, 780, 788, 790, 791, 792, 795, 796, 799, 808, 809, 811, 814, 816, 818, 819, 820, 824, 826, 843, 847, 854, 862, 864, 870, 873, 874, 888], "shift_tim": [1, 86, 140, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 708, 711, 888], "004": [1, 10, 32, 33, 44, 121, 128, 140, 142, 145, 149, 166, 169, 176, 204, 224, 245, 277, 362, 526, 756], "result": [1, 8, 9, 26, 29, 30, 45, 46, 55, 58, 61, 71, 80, 83, 90, 99, 101, 103, 107, 114, 126, 127, 134, 136, 137, 144, 146, 149, 151, 155, 156, 157, 159, 160, 162, 166, 167, 170, 172, 176, 178, 188, 195, 196, 199, 202, 204, 205, 206, 207, 209, 216, 217, 219, 222, 224, 227, 228, 231, 232, 235, 236, 237, 245, 257, 259, 260, 265, 266, 267, 268, 270, 272, 273, 276, 277, 279, 280, 281, 290, 292, 299, 316, 319, 320, 355, 356, 361, 363, 365, 390, 392, 412, 414, 415, 429, 438, 447, 453, 471, 476, 478, 479, 481, 482, 498, 515, 522, 526, 530, 532, 533, 534, 536, 541, 542, 549, 563, 568, 574, 580, 581, 584, 593, 595, 612, 618, 626, 649, 660, 661, 662, 671, 672, 674, 693, 694, 695, 696, 697, 698, 699, 700, 708, 710, 711, 712, 756, 764, 780, 786, 787, 809, 847, 852, 863, 864, 867, 870, 873, 888], "time_unit": [1, 11, 14, 35, 40, 42, 43, 51, 59, 60, 62, 70, 72, 86, 92, 93, 99, 100, 101, 121, 150, 151, 152, 162, 175, 177, 178, 183, 184, 185, 191, 196, 223, 228, 229, 230, 264, 267, 268, 272, 273, 276, 279, 280, 281, 780, 790, 792, 795, 796, 814, 819, 888], "": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 24, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 55, 58, 59, 60, 62, 64, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 112, 113, 115, 116, 117, 119, 120, 121, 123, 125, 126, 127, 128, 129, 132, 133, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 245, 256, 257, 259, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 289, 291, 298, 299, 304, 305, 306, 323, 326, 330, 355, 356, 359, 360, 362, 368, 369, 387, 388, 390, 405, 406, 413, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 434, 437, 443, 444, 445, 446, 447, 449, 451, 452, 453, 472, 475, 478, 479, 481, 482, 486, 489, 496, 498, 504, 505, 513, 517, 521, 524, 526, 529, 530, 541, 545, 546, 547, 562, 563, 564, 565, 574, 581, 582, 586, 587, 594, 595, 599, 602, 625, 626, 635, 637, 638, 639, 640, 644, 645, 647, 649, 652, 653, 657, 658, 665, 668, 670, 685, 694, 695, 696, 697, 698, 699, 703, 704, 706, 708, 709, 710, 711, 712, 720, 724, 726, 727, 732, 734, 736, 737, 738, 739, 740, 743, 748, 755, 756, 764, 765, 773, 774, 780, 782, 784, 786, 787, 790, 792, 793, 795, 796, 797, 799, 803, 809, 811, 812, 814, 816, 817, 818, 819, 820, 824, 837, 838, 843, 845, 847, 851, 853, 859, 862, 863, 864, 865, 867, 869, 870, 872, 873, 874, 875, 876], "topomap": [1, 19, 42, 74, 83, 87, 119, 142, 151, 170, 204, 207, 232, 241, 262, 265, 266, 267, 268, 274, 275, 314, 413, 420, 481, 482, 562, 563, 578, 708, 710, 712, 773, 786, 788, 790, 793, 795, 799, 806, 807, 808, 809, 810, 811, 812, 816, 818, 843, 888], "plot_topomap": [1, 15, 16, 18, 19, 21, 42, 71, 72, 80, 87, 100, 109, 141, 142, 144, 150, 151, 166, 170, 176, 177, 191, 199, 207, 211, 219, 232, 240, 241, 242, 262, 265, 266, 267, 268, 274, 481, 482, 563, 708, 710, 712, 776, 788, 793, 801, 878, 888], "time": [1, 2, 4, 5, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 64, 65, 66, 68, 69, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 90, 92, 93, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 137, 141, 143, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 188, 190, 191, 192, 195, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 217, 218, 219, 222, 223, 224, 227, 228, 231, 235, 236, 237, 240, 245, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 297, 298, 343, 344, 345, 346, 347, 348, 349, 350, 352, 355, 356, 359, 361, 362, 363, 365, 375, 405, 413, 414, 415, 416, 419, 420, 422, 423, 424, 425, 426, 427, 429, 436, 437, 439, 441, 442, 447, 449, 451, 452, 454, 455, 456, 466, 471, 476, 477, 478, 479, 480, 481, 482, 494, 496, 500, 502, 510, 515, 517, 523, 524, 529, 530, 531, 533, 534, 536, 537, 538, 541, 542, 544, 546, 547, 554, 558, 560, 562, 563, 565, 566, 567, 568, 571, 572, 573, 575, 576, 578, 580, 581, 582, 584, 586, 587, 593, 603, 609, 612, 616, 617, 621, 622, 625, 626, 627, 629, 635, 656, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 682, 683, 684, 688, 693, 694, 695, 696, 697, 698, 699, 700, 701, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 724, 727, 733, 734, 735, 736, 737, 738, 739, 740, 755, 756, 760, 770, 773, 779, 780, 783, 784, 786, 787, 788, 789, 790, 791, 792, 793, 795, 796, 797, 798, 799, 800, 803, 807, 808, 809, 810, 811, 814, 815, 816, 817, 818, 819, 820, 833, 843, 845, 846, 851, 853, 854, 859, 863, 864, 865, 867, 869, 870, 873, 874, 878, 888], "arraidirectori": [1, 12, 21, 33, 34, 81, 82, 94, 95, 116, 119, 123, 155, 156, 161, 166, 171, 172, 184, 191, 257, 263, 270, 271, 272, 275, 276, 279, 280, 281, 305, 309, 310, 311, 314, 362, 367, 368, 369, 374, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 432, 463, 465, 469, 471, 472, 473, 474, 475, 488, 494, 508, 511, 515, 519, 521, 549, 591, 612, 626, 630, 632, 639, 645, 646, 647, 650, 656, 657, 671, 674, 685, 703, 704, 748, 756, 772, 774, 784, 814, 820, 838, 847, 850, 853, 863, 867, 888], "home": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 135, 137, 140, 141, 143, 144, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 162, 166, 167, 168, 169, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 192, 196, 199, 203, 204, 205, 206, 207, 209, 210, 211, 213, 216, 219, 223, 224, 228, 229, 230, 231, 232, 235, 237, 241, 265, 266, 374, 382, 481, 482, 786, 809, 846, 852, 888], "circleci": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 135, 137, 140, 141, 143, 144, 146, 149, 150, 151, 152, 156, 157, 158, 159, 162, 166, 167, 168, 169, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 192, 196, 199, 203, 204, 205, 206, 207, 209, 210, 211, 213, 216, 219, 223, 224, 228, 229, 230, 231, 232, 235, 237, 241, 847], "mne_data": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 135, 137, 141, 143, 144, 146, 149, 150, 151, 152, 156, 157, 158, 159, 162, 166, 167, 168, 169, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 192, 196, 199, 203, 204, 205, 206, 207, 209, 210, 211, 213, 216, 219, 223, 224, 228, 229, 230, 231, 232, 235, 237, 241, 379, 380, 381, 382, 384, 385, 386, 388, 389, 393, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 847, 867, 888], "res4": [1, 12, 21, 81, 82, 119, 123, 184, 191], "read": [1, 2, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 144, 146, 149, 151, 152, 156, 157, 158, 159, 160, 161, 162, 166, 167, 169, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 219, 222, 223, 224, 228, 229, 230, 231, 236, 241, 257, 258, 259, 260, 262, 265, 266, 267, 268, 270, 276, 278, 298, 299, 302, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 353, 356, 360, 361, 371, 372, 373, 375, 413, 420, 421, 445, 454, 455, 456, 457, 461, 463, 466, 472, 476, 478, 479, 480, 481, 482, 485, 486, 487, 488, 489, 493, 494, 495, 496, 497, 498, 501, 502, 504, 506, 507, 508, 512, 513, 529, 541, 543, 544, 552, 565, 587, 605, 606, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 640, 641, 642, 644, 645, 647, 654, 661, 709, 728, 730, 748, 764, 772, 796, 824, 834, 835, 843, 847, 850, 855, 863, 865, 870, 871, 874, 876, 878, 888], "hc": [1, 12, 21, 81, 82, 119, 123, 184, 191], "separ": [1, 10, 12, 16, 21, 32, 33, 45, 47, 71, 75, 81, 82, 83, 94, 119, 123, 135, 140, 141, 142, 145, 146, 149, 150, 151, 155, 156, 160, 161, 162, 165, 168, 175, 184, 189, 191, 192, 196, 199, 202, 204, 205, 206, 207, 209, 214, 215, 216, 217, 218, 235, 237, 240, 245, 247, 257, 259, 260, 265, 266, 267, 268, 270, 274, 275, 298, 299, 326, 347, 349, 350, 353, 357, 358, 359, 364, 373, 388, 395, 413, 420, 434, 446, 476, 481, 482, 497, 500, 505, 521, 523, 563, 573, 574, 575, 576, 580, 584, 593, 595, 609, 619, 626, 657, 663, 664, 665, 666, 667, 668, 669, 670, 695, 696, 698, 699, 710, 711, 712, 713, 714, 715, 738, 739, 746, 756, 761, 779, 780, 786, 787, 788, 795, 796, 798, 803, 808, 809, 810, 843, 845, 847, 851, 863, 864, 865, 867, 870, 873, 876, 888], "posit": [1, 4, 12, 19, 21, 24, 27, 38, 39, 41, 45, 71, 76, 79, 80, 82, 83, 90, 93, 94, 95, 101, 112, 119, 122, 123, 127, 130, 135, 136, 150, 151, 156, 158, 159, 160, 170, 175, 176, 178, 183, 184, 185, 188, 190, 191, 199, 200, 204, 206, 210, 212, 213, 224, 227, 231, 235, 242, 245, 257, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 291, 306, 308, 314, 315, 316, 327, 330, 332, 334, 337, 340, 344, 346, 347, 352, 353, 354, 356, 368, 383, 392, 413, 416, 419, 420, 423, 425, 432, 433, 434, 441, 455, 456, 465, 472, 481, 482, 494, 497, 502, 505, 506, 512, 524, 560, 562, 563, 567, 568, 570, 578, 584, 586, 593, 595, 617, 619, 657, 659, 660, 661, 665, 666, 667, 668, 669, 670, 671, 673, 676, 677, 692, 708, 710, 711, 712, 723, 731, 732, 756, 757, 761, 769, 772, 773, 775, 780, 786, 787, 788, 791, 793, 794, 795, 798, 799, 805, 808, 809, 811, 812, 814, 816, 817, 818, 820, 824, 826, 843, 847, 863, 864, 870, 873, 877, 888], "file": [1, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 40, 41, 42, 43, 44, 45, 46, 49, 56, 59, 63, 64, 67, 69, 70, 71, 72, 73, 74, 75, 77, 80, 81, 82, 83, 84, 85, 88, 91, 92, 93, 94, 96, 97, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 120, 121, 123, 127, 128, 129, 130, 132, 133, 135, 137, 139, 140, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 156, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 171, 174, 177, 180, 181, 182, 183, 184, 185, 187, 188, 190, 191, 192, 194, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 213, 215, 216, 219, 221, 223, 224, 226, 229, 230, 231, 232, 234, 235, 237, 239, 241, 244, 252, 259, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 289, 302, 305, 306, 309, 310, 311, 314, 315, 320, 322, 323, 326, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 344, 346, 359, 364, 365, 367, 368, 369, 374, 382, 387, 388, 389, 390, 396, 405, 406, 432, 434, 442, 443, 444, 445, 446, 454, 455, 461, 462, 463, 465, 466, 470, 472, 473, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 521, 522, 524, 525, 536, 543, 544, 548, 552, 553, 562, 563, 573, 574, 575, 576, 584, 591, 595, 605, 606, 607, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 650, 651, 653, 657, 659, 660, 661, 673, 676, 685, 703, 706, 707, 708, 709, 710, 711, 712, 728, 729, 730, 741, 743, 745, 750, 756, 764, 772, 774, 809, 820, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 847, 852, 853, 854, 859, 864, 874, 878, 888], "present": [1, 4, 10, 12, 13, 16, 21, 31, 40, 43, 44, 70, 82, 116, 119, 123, 126, 134, 140, 142, 144, 149, 150, 158, 166, 168, 169, 170, 180, 188, 189, 191, 192, 199, 200, 204, 206, 207, 208, 210, 213, 217, 219, 227, 231, 235, 236, 237, 245, 257, 258, 260, 262, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 278, 279, 280, 281, 284, 285, 286, 289, 298, 299, 304, 309, 314, 320, 322, 326, 331, 336, 345, 349, 356, 360, 361, 362, 370, 371, 372, 373, 394, 413, 420, 432, 434, 437, 442, 454, 455, 456, 457, 461, 476, 478, 479, 481, 482, 489, 492, 496, 504, 521, 529, 541, 560, 562, 563, 565, 566, 573, 574, 578, 580, 585, 595, 603, 622, 623, 672, 677, 693, 708, 710, 711, 712, 726, 743, 756, 772, 773, 779, 780, 786, 788, 790, 792, 795, 796, 799, 806, 808, 809, 810, 811, 812, 815, 816, 818, 843, 853, 863, 864, 870, 873, 888], "quaternion": [1, 12, 21, 81, 82, 119, 123, 184, 191, 352, 353, 354, 567, 570, 747, 749, 798, 888], "match": [1, 8, 9, 11, 12, 17, 18, 20, 21, 27, 28, 31, 32, 33, 34, 40, 41, 45, 46, 47, 49, 51, 58, 59, 60, 62, 70, 72, 73, 74, 75, 80, 81, 82, 83, 88, 90, 93, 94, 95, 96, 97, 100, 101, 103, 104, 107, 108, 109, 110, 112, 113, 114, 117, 119, 121, 123, 128, 132, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 151, 152, 157, 161, 162, 166, 169, 172, 177, 180, 182, 183, 184, 185, 191, 195, 199, 200, 201, 203, 204, 207, 211, 213, 216, 217, 218, 222, 223, 224, 228, 229, 230, 231, 232, 235, 237, 241, 258, 260, 262, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 279, 280, 281, 319, 331, 356, 360, 367, 371, 372, 413, 414, 419, 420, 421, 423, 429, 434, 437, 438, 440, 442, 444, 445, 447, 463, 480, 481, 482, 489, 496, 504, 527, 549, 552, 554, 555, 556, 560, 562, 563, 572, 573, 578, 584, 596, 609, 619, 621, 622, 627, 642, 645, 658, 673, 694, 699, 703, 708, 709, 710, 711, 712, 724, 725, 734, 746, 780, 786, 787, 788, 792, 795, 796, 799, 802, 808, 809, 810, 811, 834, 847, 851, 870, 888], "desir": [1, 5, 11, 12, 21, 22, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 61, 69, 71, 81, 82, 90, 92, 93, 94, 95, 101, 104, 107, 108, 110, 112, 119, 123, 124, 127, 131, 142, 146, 151, 157, 161, 166, 168, 170, 172, 177, 178, 179, 180, 181, 184, 188, 189, 191, 195, 196, 200, 201, 202, 203, 206, 217, 223, 224, 235, 237, 258, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 362, 412, 437, 448, 481, 482, 523, 541, 562, 587, 604, 652, 708, 710, 711, 712, 724, 734, 738, 742, 756, 819, 853, 863, 865, 867, 873, 888], "v": [1, 4, 8, 9, 12, 13, 21, 24, 27, 28, 32, 43, 54, 55, 64, 66, 71, 76, 81, 82, 105, 106, 119, 123, 127, 132, 137, 141, 171, 172, 178, 184, 191, 195, 199, 202, 206, 228, 231, 232, 237, 240, 245, 257, 260, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 276, 279, 280, 281, 284, 288, 289, 299, 304, 322, 346, 361, 375, 382, 419, 420, 421, 434, 481, 482, 529, 538, 563, 571, 574, 580, 581, 584, 595, 602, 694, 708, 710, 711, 712, 720, 726, 735, 738, 739, 740, 743, 760, 843, 847, 851, 863, 870, 873, 888], "transform": [1, 5, 7, 8, 11, 12, 14, 16, 19, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 69, 75, 78, 81, 82, 83, 85, 88, 90, 92, 93, 94, 95, 103, 104, 107, 108, 109, 110, 112, 113, 115, 119, 123, 124, 125, 127, 131, 135, 145, 150, 155, 157, 158, 159, 166, 167, 169, 170, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 191, 205, 208, 216, 223, 224, 240, 242, 245, 257, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 306, 314, 317, 318, 328, 356, 362, 363, 365, 367, 368, 369, 375, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 431, 432, 434, 454, 456, 464, 472, 473, 474, 475, 481, 482, 488, 512, 521, 524, 525, 536, 537, 546, 547, 563, 564, 567, 570, 572, 574, 584, 591, 595, 596, 627, 631, 639, 640, 647, 652, 673, 676, 693, 703, 705, 710, 712, 714, 717, 723, 724, 727, 731, 732, 733, 734, 735, 736, 737, 740, 742, 756, 772, 773, 820, 826, 834, 835, 842, 843, 854, 863, 864, 867, 877, 878, 888], "84": [1, 11, 13, 19, 34, 35, 41, 47, 58, 81, 108, 109, 112, 114, 119, 129, 136, 151, 169, 195, 200, 209, 227, 228, 229, 231, 232, 235, 237, 245, 490, 599], "69": [1, 13, 15, 19, 35, 40, 47, 49, 81, 82, 103, 108, 112, 114, 119, 137, 140, 143, 169, 176, 180, 184, 185, 191, 195, 196, 204, 209, 227, 228, 229, 230, 231, 232, 235, 237, 245, 265, 266, 298, 405], "49": [1, 5, 13, 19, 28, 30, 31, 34, 35, 38, 39, 40, 41, 44, 45, 47, 48, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 79, 81, 86, 87, 103, 104, 108, 112, 113, 114, 116, 119, 120, 123, 127, 149, 169, 172, 176, 178, 179, 181, 184, 185, 191, 195, 196, 209, 210, 211, 218, 224, 227, 228, 229, 231, 232, 236, 237, 245, 754, 846, 888], "00": [1, 2, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 24, 25, 26, 33, 34, 41, 42, 44, 45, 46, 50, 56, 59, 67, 71, 72, 73, 74, 77, 81, 82, 83, 84, 85, 88, 90, 91, 93, 96, 99, 101, 102, 103, 104, 106, 108, 109, 112, 113, 114, 115, 119, 121, 123, 127, 130, 133, 136, 139, 141, 143, 144, 146, 148, 151, 154, 156, 157, 158, 159, 160, 164, 167, 168, 169, 172, 174, 176, 180, 181, 182, 183, 184, 185, 187, 191, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 239, 240, 244, 245, 530, 562, 571], "mm": [1, 4, 5, 12, 21, 24, 26, 41, 44, 45, 50, 71, 72, 74, 77, 79, 80, 81, 82, 83, 90, 93, 94, 95, 109, 119, 123, 127, 136, 141, 146, 151, 156, 157, 158, 159, 160, 161, 167, 168, 176, 178, 180, 181, 182, 183, 184, 185, 191, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 223, 224, 257, 263, 270, 272, 273, 276, 279, 280, 281, 307, 337, 339, 341, 362, 367, 432, 456, 465, 471, 474, 475, 493, 497, 515, 525, 583, 619, 656, 657, 746, 748, 755, 756, 814, 819, 824, 863, 870, 888], "orig": [1, 12, 21, 81, 82, 119, 123, 160, 184, 191, 200, 543, 555, 556, 561], "44": [1, 13, 19, 28, 32, 35, 41, 45, 46, 47, 56, 81, 103, 108, 112, 113, 114, 116, 119, 158, 168, 169, 176, 180, 181, 184, 196, 202, 209, 210, 221, 227, 228, 229, 231, 232, 235, 236, 237, 245, 298, 299, 434, 476, 695, 696, 698, 699, 888], "30": [1, 5, 7, 8, 9, 11, 12, 13, 14, 19, 24, 28, 33, 34, 35, 41, 42, 45, 46, 47, 50, 58, 71, 74, 75, 77, 81, 82, 83, 85, 90, 92, 94, 97, 101, 103, 104, 107, 108, 109, 112, 113, 114, 115, 119, 123, 127, 136, 144, 146, 151, 154, 156, 158, 160, 166, 169, 171, 172, 183, 184, 195, 196, 199, 201, 202, 203, 204, 205, 207, 208, 209, 211, 212, 215, 216, 227, 228, 229, 230, 231, 232, 234, 237, 240, 242, 245, 257, 265, 266, 267, 268, 276, 278, 305, 309, 337, 356, 481, 482, 513, 562, 566, 571, 584, 661, 672, 673, 710, 712, 724, 734, 735, 737, 738, 740, 760, 764, 788, 845, 863, 864, 870, 873, 888], "51": [1, 5, 8, 13, 19, 28, 34, 35, 45, 47, 71, 72, 80, 81, 82, 103, 104, 108, 109, 112, 114, 119, 127, 137, 152, 154, 156, 158, 169, 172, 180, 184, 185, 187, 191, 195, 196, 198, 201, 205, 208, 209, 210, 215, 216, 227, 228, 229, 231, 232, 236, 237, 245, 275, 382, 595, 864, 888], "45": [1, 5, 8, 9, 11, 13, 15, 16, 19, 28, 35, 41, 45, 50, 81, 84, 103, 108, 109, 112, 113, 114, 119, 121, 123, 141, 142, 143, 144, 145, 148, 149, 156, 157, 158, 168, 169, 176, 177, 180, 181, 187, 191, 195, 196, 202, 204, 205, 207, 208, 209, 210, 212, 213, 218, 227, 228, 229, 231, 232, 235, 236, 237, 242, 259, 265, 266, 267, 268, 298, 299, 337, 356, 360, 361, 371, 372, 373, 413, 420, 448, 456, 457, 476, 478, 479, 481, 482, 541, 563, 689, 710, 712, 760, 788, 796, 870, 888], "252": [1, 35, 112, 119, 123, 169, 209, 227, 231], "43": [1, 13, 19, 26, 28, 34, 35, 41, 45, 46, 47, 48, 50, 54, 55, 56, 81, 82, 96, 103, 107, 108, 112, 114, 119, 123, 145, 146, 148, 150, 154, 157, 158, 169, 174, 176, 181, 182, 196, 209, 227, 228, 229, 230, 231, 232, 235, 236, 237, 245, 265, 266, 337, 710, 711], "diff": [1, 9, 12, 21, 71, 81, 82, 119, 123, 134, 176, 183, 184, 191, 216, 235, 764, 847, 855], "000": [1, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 34, 42, 59, 64, 66, 68, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 88, 90, 93, 94, 95, 99, 109, 112, 113, 114, 115, 119, 121, 123, 128, 129, 130, 133, 136, 140, 141, 142, 143, 144, 146, 149, 151, 152, 159, 166, 167, 168, 172, 179, 181, 182, 183, 184, 185, 190, 191, 194, 196, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 219, 222, 224, 228, 230, 231, 232, 241, 506, 621], "46": [1, 12, 13, 19, 21, 28, 33, 34, 35, 40, 45, 47, 51, 55, 60, 73, 81, 103, 108, 112, 114, 119, 123, 149, 169, 183, 187, 195, 196, 201, 202, 204, 209, 218, 227, 228, 229, 231, 232, 235, 236, 237, 245, 870, 888], "28": [1, 11, 13, 18, 19, 26, 28, 34, 35, 41, 45, 47, 50, 56, 81, 96, 103, 108, 109, 112, 114, 119, 120, 130, 140, 157, 158, 164, 169, 171, 175, 176, 181, 182, 183, 184, 185, 187, 195, 196, 201, 203, 209, 227, 228, 229, 231, 232, 236, 237, 241, 245, 337, 888], "53": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 25, 28, 32, 33, 34, 35, 40, 42, 45, 46, 47, 69, 74, 77, 81, 82, 83, 84, 85, 88, 94, 99, 103, 108, 112, 113, 114, 115, 119, 121, 123, 133, 136, 141, 144, 145, 146, 151, 155, 162, 169, 184, 191, 196, 202, 203, 204, 205, 209, 210, 211, 212, 218, 227, 228, 229, 231, 232, 236, 237, 245, 689, 867], "58": [1, 11, 13, 19, 35, 40, 45, 47, 48, 49, 54, 55, 57, 58, 59, 79, 81, 90, 93, 94, 96, 103, 108, 109, 112, 114, 116, 119, 121, 127, 136, 137, 148, 149, 151, 152, 162, 169, 171, 172, 174, 178, 182, 191, 195, 196, 199, 205, 207, 209, 216, 227, 228, 231, 232, 235, 245, 356, 870, 888], "243": [1, 46, 81, 104, 106, 112, 119, 169, 191, 209, 232], "47": [1, 10, 13, 16, 19, 28, 33, 35, 45, 51, 81, 84, 103, 108, 112, 114, 119, 137, 139, 159, 168, 169, 181, 183, 195, 196, 209, 213, 218, 227, 228, 229, 231, 232, 235, 236, 237, 245, 301, 337, 406, 863, 864, 870], "86": [1, 5, 12, 13, 15, 19, 26, 34, 35, 40, 41, 47, 50, 81, 103, 108, 112, 114, 119, 137, 140, 151, 156, 157, 158, 168, 169, 172, 176, 181, 182, 184, 195, 196, 203, 205, 207, 208, 209, 212, 217, 227, 228, 229, 231, 232, 236, 237, 245, 420, 722, 724, 734, 738, 862], "41": [1, 13, 19, 28, 34, 35, 44, 45, 47, 81, 82, 103, 108, 112, 114, 119, 131, 168, 169, 183, 184, 191, 196, 205, 207, 208, 209, 216, 227, 228, 229, 231, 232, 235, 237, 242, 245, 277, 362, 405, 413, 888], "63": [1, 13, 19, 28, 35, 45, 47, 71, 81, 82, 101, 103, 108, 112, 114, 117, 119, 137, 143, 169, 184, 185, 191, 195, 196, 209, 227, 228, 229, 231, 232, 235, 236, 237, 888], "55": [1, 11, 13, 19, 21, 28, 30, 31, 32, 35, 38, 39, 40, 41, 44, 45, 46, 48, 50, 54, 55, 57, 58, 61, 79, 81, 85, 86, 87, 101, 103, 108, 109, 112, 114, 116, 119, 120, 124, 127, 143, 149, 151, 157, 160, 164, 169, 171, 172, 177, 178, 180, 181, 195, 196, 204, 205, 207, 209, 211, 218, 227, 228, 229, 231, 232, 237, 245, 413, 421, 530, 562, 563, 610, 845, 888], "82": [1, 13, 19, 35, 46, 81, 103, 112, 114, 119, 145, 169, 171, 180, 181, 184, 191, 195, 196, 209, 227, 228, 229, 231, 232, 236, 237, 241, 405, 448], "230": [1, 81, 88, 112, 119, 169, 209, 227, 232], "26": [1, 5, 11, 13, 16, 19, 28, 32, 34, 35, 44, 45, 47, 56, 65, 67, 81, 82, 101, 103, 108, 109, 112, 114, 119, 126, 136, 137, 145, 158, 169, 171, 172, 174, 183, 184, 185, 191, 195, 196, 199, 209, 213, 215, 227, 228, 229, 231, 232, 235, 236, 237, 245, 277, 278, 362, 396, 530, 864], "coordin": [1, 5, 11, 12, 21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 69, 72, 81, 82, 90, 92, 93, 94, 95, 104, 107, 108, 109, 110, 115, 119, 123, 124, 127, 131, 135, 136, 150, 158, 159, 163, 164, 165, 166, 170, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 191, 192, 196, 208, 210, 212, 213, 223, 224, 235, 237, 245, 262, 263, 265, 266, 267, 268, 269, 270, 271, 274, 278, 280, 281, 304, 306, 307, 308, 314, 317, 318, 323, 327, 330, 332, 333, 335, 337, 341, 366, 367, 369, 392, 413, 420, 432, 434, 456, 464, 472, 474, 475, 478, 481, 482, 485, 488, 492, 493, 506, 512, 514, 521, 526, 562, 563, 574, 578, 584, 595, 627, 637, 638, 640, 641, 657, 661, 685, 688, 708, 710, 712, 742, 743, 755, 756, 757, 772, 773, 774, 780, 784, 788, 790, 792, 794, 795, 796, 798, 799, 806, 808, 810, 811, 812, 816, 818, 824, 826, 835, 836, 841, 843, 864, 888], "establish": [1, 12, 21, 81, 82, 119, 123, 184, 188, 191, 202, 232, 245, 695, 696, 698, 699], "digit": [1, 72, 74, 77, 81, 82, 83, 90, 93, 118, 119, 123, 127, 141, 146, 151, 156, 157, 159, 160, 167, 168, 169, 171, 182, 185, 188, 189, 191, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 245, 257, 258, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 276, 279, 280, 281, 307, 308, 314, 327, 328, 330, 332, 335, 336, 339, 341, 343, 344, 346, 367, 413, 420, 432, 434, 454, 472, 481, 482, 485, 488, 494, 506, 514, 521, 526, 562, 563, 572, 573, 574, 578, 584, 595, 621, 622, 657, 708, 710, 711, 712, 756, 772, 773, 780, 788, 790, 792, 795, 796, 799, 806, 808, 810, 811, 812, 816, 818, 826, 843, 863, 864, 873, 888], "point": [1, 5, 8, 9, 11, 12, 16, 18, 21, 22, 26, 27, 32, 33, 34, 36, 38, 41, 42, 44, 45, 46, 49, 54, 55, 56, 58, 61, 72, 73, 74, 77, 81, 82, 83, 90, 93, 94, 96, 97, 100, 101, 103, 107, 109, 110, 112, 113, 114, 115, 117, 119, 120, 121, 123, 127, 128, 134, 135, 136, 137, 140, 141, 142, 144, 145, 146, 149, 150, 151, 152, 156, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 191, 192, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 241, 242, 245, 257, 258, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 298, 299, 307, 308, 314, 317, 318, 323, 327, 332, 336, 337, 338, 339, 341, 344, 350, 352, 356, 361, 362, 366, 367, 369, 412, 413, 414, 415, 419, 420, 422, 429, 432, 434, 447, 449, 451, 454, 472, 475, 476, 480, 481, 482, 484, 485, 488, 494, 501, 506, 514, 524, 525, 526, 529, 530, 539, 540, 541, 542, 544, 545, 562, 563, 565, 573, 574, 577, 578, 584, 595, 616, 620, 621, 624, 625, 627, 630, 635, 638, 641, 652, 656, 657, 659, 660, 661, 663, 664, 665, 666, 667, 668, 669, 670, 672, 673, 675, 682, 684, 693, 694, 695, 696, 698, 699, 700, 708, 709, 710, 711, 712, 726, 727, 756, 757, 760, 761, 772, 773, 774, 775, 780, 784, 788, 790, 791, 792, 793, 795, 796, 799, 800, 803, 806, 808, 810, 811, 812, 814, 815, 816, 818, 819, 820, 824, 836, 841, 843, 847, 863, 865, 867, 869, 873, 876, 888], "subj00111092011": [1, 119], "po": [1, 19, 41, 47, 50, 80, 81, 82, 84, 93, 115, 119, 136, 151, 156, 176, 183, 184, 185, 191, 208, 210, 263, 267, 268, 271, 272, 273, 276, 279, 280, 281, 306, 315, 340, 353, 354, 433, 456, 474, 475, 494, 567, 570, 629, 657, 798, 818, 873, 888], "polhemu": [1, 12, 21, 81, 82, 119, 123, 156, 170, 184, 191, 270, 314, 339, 341, 494, 506, 870, 873, 888], "hpi": [1, 12, 21, 81, 82, 119, 123, 156, 166, 169, 170, 184, 188, 191, 199, 210, 216, 257, 265, 266, 267, 268, 270, 307, 308, 314, 317, 327, 337, 339, 343, 344, 345, 348, 349, 350, 367, 432, 433, 481, 482, 488, 506, 560, 567, 708, 710, 711, 712, 779, 843, 870, 873, 877, 888], "coil": [1, 5, 12, 21, 26, 41, 45, 50, 81, 82, 109, 119, 123, 124, 150, 156, 158, 159, 176, 181, 182, 183, 184, 185, 188, 191, 199, 208, 209, 210, 257, 265, 266, 267, 268, 270, 322, 337, 343, 344, 346, 347, 348, 350, 351, 433, 456, 481, 482, 488, 506, 560, 573, 574, 577, 595, 606, 621, 649, 708, 710, 711, 712, 750, 779, 843, 877, 888], "ad": [1, 4, 5, 11, 12, 21, 22, 27, 28, 29, 31, 35, 38, 39, 40, 41, 42, 43, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 61, 68, 69, 71, 72, 81, 82, 90, 92, 93, 94, 95, 101, 104, 107, 108, 110, 119, 120, 123, 124, 127, 131, 140, 141, 142, 146, 151, 156, 158, 159, 160, 161, 162, 166, 170, 175, 177, 178, 179, 181, 182, 184, 191, 196, 201, 205, 207, 208, 210, 218, 219, 222, 223, 224, 227, 228, 235, 237, 257, 259, 262, 263, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 314, 340, 343, 345, 349, 362, 363, 373, 413, 420, 434, 457, 480, 481, 482, 505, 518, 523, 524, 525, 528, 562, 563, 565, 578, 580, 617, 652, 657, 658, 662, 672, 700, 703, 708, 710, 711, 712, 752, 756, 759, 761, 773, 774, 780, 784, 785, 788, 790, 792, 795, 796, 799, 803, 806, 808, 810, 811, 812, 814, 816, 818, 819, 847, 864, 870, 873, 876, 888], "devic": [1, 5, 12, 21, 26, 41, 45, 50, 72, 80, 81, 82, 109, 119, 123, 150, 156, 158, 165, 166, 169, 170, 171, 176, 181, 183, 184, 185, 191, 193, 194, 206, 208, 212, 213, 216, 257, 259, 267, 268, 270, 307, 314, 317, 330, 363, 365, 375, 378, 434, 445, 472, 481, 482, 488, 489, 491, 493, 496, 497, 498, 499, 500, 502, 504, 508, 509, 510, 511, 512, 567, 570, 583, 595, 596, 609, 619, 652, 756, 772, 791, 834, 843, 859, 863, 864, 873, 888], "locat": [1, 4, 5, 12, 21, 26, 27, 31, 35, 40, 41, 45, 47, 48, 49, 50, 55, 59, 61, 68, 69, 78, 80, 81, 82, 90, 93, 94, 95, 100, 109, 115, 118, 119, 123, 124, 135, 136, 137, 138, 141, 149, 150, 155, 156, 158, 159, 160, 161, 163, 165, 166, 171, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 191, 192, 200, 206, 208, 209, 210, 212, 216, 222, 223, 224, 227, 228, 229, 231, 232, 237, 242, 245, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 278, 279, 280, 281, 298, 299, 308, 309, 310, 314, 315, 318, 320, 323, 325, 326, 328, 330, 331, 332, 333, 334, 335, 336, 337, 340, 344, 346, 347, 348, 356, 369, 379, 380, 381, 382, 384, 385, 386, 388, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 420, 433, 434, 443, 446, 454, 464, 469, 473, 481, 482, 491, 493, 501, 506, 512, 515, 525, 529, 530, 539, 540, 541, 545, 549, 562, 563, 567, 578, 586, 589, 590, 595, 606, 620, 621, 624, 629, 630, 646, 647, 649, 657, 660, 661, 671, 674, 695, 696, 698, 699, 700, 708, 710, 712, 748, 756, 772, 773, 777, 780, 784, 788, 790, 794, 795, 798, 799, 808, 809, 810, 811, 812, 816, 818, 824, 826, 843, 848, 853, 863, 864, 867, 873, 876, 877, 888], "measur": [1, 4, 5, 12, 21, 26, 41, 45, 50, 72, 74, 77, 80, 81, 82, 83, 90, 93, 103, 109, 119, 123, 127, 141, 144, 145, 146, 156, 158, 159, 162, 165, 166, 167, 168, 169, 170, 172, 176, 182, 184, 188, 189, 190, 191, 192, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 227, 232, 233, 234, 238, 239, 241, 242, 245, 258, 260, 262, 264, 265, 266, 267, 268, 269, 270, 274, 276, 278, 285, 286, 298, 299, 300, 307, 308, 312, 313, 320, 321, 322, 326, 328, 329, 342, 344, 346, 348, 351, 356, 360, 361, 362, 367, 371, 372, 373, 375, 413, 415, 417, 420, 421, 422, 432, 444, 445, 446, 456, 457, 464, 473, 476, 478, 479, 480, 481, 482, 483, 486, 494, 496, 510, 518, 521, 524, 525, 526, 529, 530, 531, 538, 539, 540, 541, 544, 559, 560, 563, 574, 577, 591, 595, 596, 599, 600, 601, 622, 637, 642, 643, 652, 664, 665, 672, 673, 676, 680, 689, 690, 691, 692, 696, 699, 700, 708, 709, 710, 711, 712, 738, 745, 756, 769, 772, 773, 776, 781, 782, 796, 798, 807, 808, 812, 834, 843, 855, 863, 864, 870, 873, 876, 888], "compos": [1, 12, 21, 26, 41, 45, 50, 81, 82, 109, 119, 123, 137, 158, 176, 184, 188, 191, 196, 863, 873], "find": [1, 5, 7, 11, 12, 19, 21, 27, 28, 29, 30, 38, 39, 44, 47, 48, 49, 50, 52, 57, 58, 61, 69, 70, 78, 81, 82, 83, 85, 104, 107, 108, 110, 119, 123, 124, 127, 128, 136, 140, 141, 145, 150, 151, 155, 156, 157, 161, 166, 170, 172, 175, 176, 180, 181, 184, 191, 196, 199, 201, 202, 205, 210, 218, 224, 227, 228, 229, 237, 242, 245, 263, 267, 268, 270, 271, 272, 273, 276, 279, 280, 281, 320, 357, 358, 359, 367, 447, 452, 454, 455, 481, 482, 501, 530, 560, 563, 566, 569, 575, 576, 578, 579, 580, 581, 584, 585, 586, 588, 589, 590, 604, 620, 624, 645, 667, 671, 674, 685, 756, 793, 795, 843, 845, 847, 850, 851, 852, 853, 862, 864, 867, 870, 871, 873, 888], "sampl": [1, 2, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 65, 66, 69, 70, 72, 73, 74, 77, 79, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 129, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 217, 218, 219, 222, 223, 224, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 241, 245, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 270, 272, 273, 275, 276, 277, 278, 279, 280, 281, 284, 285, 286, 297, 320, 356, 362, 364, 375, 388, 415, 416, 417, 418, 419, 423, 424, 425, 426, 427, 428, 430, 434, 437, 439, 441, 442, 448, 449, 450, 451, 452, 454, 455, 479, 480, 481, 482, 489, 496, 504, 523, 525, 533, 539, 540, 558, 560, 563, 565, 568, 577, 580, 581, 603, 609, 613, 620, 621, 622, 635, 637, 642, 658, 663, 664, 665, 666, 667, 668, 669, 670, 673, 674, 675, 680, 688, 690, 694, 695, 696, 697, 698, 699, 700, 701, 702, 708, 709, 711, 713, 714, 715, 716, 717, 718, 719, 723, 724, 726, 727, 731, 732, 734, 735, 736, 737, 738, 754, 756, 786, 788, 789, 797, 809, 814, 819, 820, 822, 833, 843, 847, 863, 867, 868, 870, 871, 873, 878, 888], "meg4": [1, 12, 21, 81, 82, 119, 123, 184, 191], "system": [1, 5, 8, 10, 12, 19, 21, 27, 63, 71, 75, 80, 81, 82, 109, 116, 119, 122, 124, 129, 130, 136, 137, 150, 151, 155, 156, 158, 159, 160, 166, 168, 169, 170, 172, 178, 183, 184, 185, 189, 191, 192, 195, 199, 200, 205, 206, 207, 208, 210, 212, 216, 217, 218, 227, 240, 245, 263, 264, 265, 266, 267, 268, 270, 272, 273, 275, 276, 278, 279, 280, 281, 285, 286, 301, 314, 317, 322, 325, 330, 332, 333, 335, 336, 337, 339, 341, 366, 367, 369, 375, 382, 419, 433, 448, 450, 462, 474, 475, 476, 481, 482, 488, 489, 490, 492, 493, 494, 506, 515, 526, 560, 563, 565, 593, 595, 612, 642, 660, 661, 662, 671, 672, 674, 694, 695, 696, 697, 698, 699, 707, 708, 710, 711, 712, 720, 726, 742, 772, 773, 786, 789, 794, 797, 803, 809, 817, 823, 824, 836, 843, 845, 846, 847, 848, 850, 851, 852, 859, 863, 864, 866, 873, 876, 888], "clock": [1, 12, 21, 81, 82, 119, 123, 184, 191, 481, 482, 494, 563, 609, 803, 809, 864, 888], "avail": [1, 2, 5, 7, 8, 12, 19, 21, 22, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 69, 72, 74, 77, 79, 81, 82, 83, 86, 87, 90, 92, 93, 94, 95, 101, 109, 116, 119, 120, 123, 127, 131, 136, 140, 141, 142, 143, 144, 146, 149, 150, 151, 155, 156, 159, 162, 165, 166, 167, 168, 169, 172, 173, 176, 177, 178, 179, 180, 181, 184, 188, 189, 191, 192, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 228, 240, 257, 262, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 279, 280, 281, 305, 307, 308, 314, 334, 340, 374, 376, 382, 405, 406, 412, 413, 419, 420, 425, 432, 439, 461, 478, 481, 482, 521, 539, 540, 554, 555, 556, 562, 563, 578, 625, 632, 673, 704, 708, 709, 710, 712, 725, 738, 756, 773, 780, 786, 788, 790, 792, 795, 796, 799, 803, 806, 808, 809, 810, 811, 812, 814, 816, 818, 819, 827, 828, 843, 845, 847, 848, 853, 854, 855, 858, 861, 864, 867, 870, 871, 872, 873, 876, 888], "check": [1, 5, 12, 21, 26, 41, 43, 45, 50, 62, 71, 81, 82, 109, 119, 120, 121, 123, 125, 135, 137, 140, 142, 143, 144, 157, 158, 159, 161, 166, 168, 170, 171, 172, 175, 176, 181, 182, 184, 191, 200, 202, 205, 206, 216, 217, 219, 227, 228, 241, 260, 262, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 320, 322, 388, 394, 432, 446, 449, 480, 481, 482, 489, 492, 538, 552, 563, 571, 573, 695, 696, 698, 699, 708, 710, 711, 712, 742, 756, 772, 790, 792, 793, 794, 795, 826, 845, 846, 847, 855, 863, 864, 867, 876, 888], "which": [1, 4, 5, 12, 16, 18, 19, 21, 26, 31, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 58, 61, 71, 75, 80, 81, 82, 83, 88, 94, 101, 103, 109, 112, 114, 115, 116, 119, 120, 123, 127, 128, 134, 135, 136, 137, 140, 141, 142, 143, 144, 146, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 178, 180, 182, 184, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 241, 242, 245, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 291, 298, 299, 307, 308, 314, 316, 323, 330, 332, 333, 334, 335, 336, 342, 343, 345, 349, 351, 355, 356, 361, 362, 365, 369, 374, 375, 382, 388, 405, 413, 415, 420, 421, 424, 430, 432, 434, 437, 439, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 464, 471, 472, 473, 478, 479, 480, 481, 482, 483, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 515, 516, 517, 521, 522, 524, 530, 531, 539, 540, 543, 544, 548, 552, 562, 563, 564, 565, 571, 573, 574, 577, 578, 580, 581, 582, 584, 591, 593, 595, 600, 609, 612, 618, 620, 624, 625, 626, 627, 629, 630, 632, 637, 638, 641, 642, 643, 644, 646, 647, 649, 650, 652, 657, 658, 662, 665, 668, 670, 671, 674, 676, 677, 685, 687, 688, 694, 700, 703, 704, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 724, 727, 730, 734, 735, 736, 738, 739, 741, 743, 746, 756, 757, 759, 761, 762, 771, 772, 774, 777, 779, 780, 782, 784, 786, 787, 788, 790, 791, 794, 795, 799, 801, 803, 808, 809, 810, 814, 816, 819, 823, 824, 826, 834, 835, 836, 838, 840, 841, 842, 843, 845, 847, 848, 850, 852, 855, 859, 861, 862, 863, 864, 865, 867, 869, 870, 873, 874, 876, 886, 888], "ar": [1, 4, 5, 11, 12, 14, 15, 16, 18, 19, 21, 24, 26, 27, 31, 32, 33, 34, 38, 41, 43, 45, 46, 47, 50, 59, 68, 71, 75, 76, 77, 81, 82, 83, 84, 87, 88, 94, 99, 101, 103, 104, 105, 106, 107, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 127, 128, 132, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 195, 196, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 245, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 283, 285, 286, 289, 290, 292, 298, 299, 304, 305, 307, 308, 309, 310, 312, 314, 315, 316, 318, 319, 322, 324, 325, 326, 327, 330, 331, 332, 334, 336, 337, 340, 343, 344, 345, 349, 355, 356, 360, 361, 362, 363, 365, 367, 371, 372, 373, 375, 388, 389, 396, 405, 413, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 434, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 463, 465, 466, 470, 471, 472, 473, 476, 478, 479, 480, 481, 482, 483, 487, 488, 489, 491, 492, 493, 494, 496, 497, 498, 500, 502, 504, 506, 507, 508, 509, 510, 511, 512, 515, 518, 521, 522, 524, 526, 528, 529, 538, 539, 540, 541, 542, 545, 547, 552, 555, 556, 558, 559, 560, 562, 563, 564, 565, 566, 568, 570, 571, 573, 578, 579, 580, 581, 584, 585, 587, 590, 594, 595, 596, 599, 600, 601, 603, 604, 606, 610, 612, 613, 615, 618, 619, 620, 621, 622, 625, 627, 630, 633, 635, 642, 644, 645, 646, 647, 648, 649, 652, 654, 657, 658, 660, 661, 664, 665, 668, 670, 671, 673, 674, 676, 679, 680, 682, 683, 684, 689, 690, 693, 694, 695, 696, 697, 698, 699, 700, 704, 708, 709, 710, 711, 712, 713, 715, 716, 717, 718, 719, 720, 721, 725, 726, 727, 732, 735, 736, 737, 738, 739, 741, 743, 746, 751, 756, 757, 761, 771, 772, 773, 774, 777, 780, 781, 782, 783, 784, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 799, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 816, 817, 818, 819, 820, 826, 833, 835, 836, 837, 838, 843, 845, 847, 848, 850, 851, 852, 853, 854, 855, 859, 862, 863, 864, 865, 866, 868, 869, 870, 871, 872, 874, 875, 876, 878, 888], "valid": [1, 8, 9, 10, 11, 12, 15, 16, 21, 75, 81, 82, 111, 119, 121, 123, 137, 162, 171, 177, 184, 190, 191, 196, 202, 211, 227, 242, 260, 262, 265, 266, 267, 268, 270, 272, 273, 274, 276, 279, 280, 281, 327, 340, 356, 361, 405, 413, 419, 420, 429, 430, 434, 445, 447, 454, 461, 465, 481, 482, 539, 540, 562, 563, 565, 578, 580, 581, 638, 652, 690, 695, 696, 698, 699, 708, 710, 711, 712, 733, 743, 756, 759, 772, 773, 780, 787, 788, 789, 790, 792, 794, 795, 799, 808, 811, 814, 816, 817, 818, 819, 841, 847, 853, 854, 863, 867, 870, 888], "240": [1, 35, 42, 46, 76, 81, 109, 112, 119, 169, 171, 181, 199, 203, 209, 226, 232, 241], "x": [1, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 68, 69, 70, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 127, 129, 131, 132, 133, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 156, 157, 158, 160, 162, 166, 167, 168, 169, 170, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 191, 192, 195, 196, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 216, 219, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 242, 245, 257, 262, 265, 266, 267, 268, 270, 272, 273, 274, 276, 278, 279, 280, 281, 289, 304, 314, 315, 337, 346, 347, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 451, 452, 453, 481, 482, 492, 493, 529, 530, 538, 562, 563, 564, 572, 578, 583, 604, 627, 660, 681, 684, 689, 693, 694, 695, 696, 697, 698, 699, 701, 708, 710, 712, 713, 714, 715, 720, 722, 723, 724, 726, 727, 731, 733, 734, 738, 743, 746, 747, 749, 756, 757, 760, 773, 775, 777, 780, 788, 790, 792, 794, 795, 796, 797, 798, 799, 804, 806, 808, 810, 811, 812, 814, 816, 818, 819, 820, 822, 824, 835, 843, 847, 853, 864, 870, 873, 888], "1800": [1, 119, 192], "432000": [1, 119], "302": [1, 13, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 76, 83, 93, 94, 104, 107, 108, 110, 119, 121, 152, 162, 166, 169, 172, 176, 177, 178, 179, 180, 181, 223, 232, 235, 237, 873], "ch": [1, 2, 8, 12, 21, 69, 81, 82, 112, 115, 119, 120, 123, 136, 137, 141, 149, 151, 166, 169, 170, 184, 191, 205, 216, 222, 224, 245, 257, 270, 321, 322, 382, 405, 406, 481, 482, 826, 843, 864, 888], "current": [1, 12, 21, 22, 27, 29, 30, 31, 34, 41, 42, 44, 59, 78, 79, 81, 82, 85, 94, 119, 123, 140, 149, 161, 162, 165, 166, 171, 177, 178, 179, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 200, 202, 210, 212, 213, 218, 224, 235, 237, 245, 257, 258, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 279, 280, 281, 285, 286, 298, 299, 320, 322, 328, 355, 362, 367, 374, 375, 378, 419, 434, 437, 446, 451, 453, 454, 456, 476, 480, 481, 482, 487, 492, 496, 524, 525, 530, 533, 563, 572, 574, 575, 576, 584, 595, 625, 632, 652, 672, 689, 691, 708, 710, 711, 712, 733, 756, 763, 765, 766, 767, 768, 769, 773, 777, 780, 786, 809, 818, 819, 826, 843, 847, 850, 853, 855, 863, 864, 867, 869, 873, 876], "compens": [1, 2, 12, 21, 27, 30, 31, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 61, 78, 79, 81, 82, 85, 86, 87, 101, 116, 119, 120, 123, 127, 140, 143, 149, 172, 176, 178, 179, 181, 184, 185, 191, 192, 202, 209, 227, 228, 245, 257, 260, 265, 266, 267, 268, 270, 353, 367, 434, 436, 448, 449, 451, 452, 454, 480, 481, 482, 494, 502, 525, 560, 563, 574, 584, 591, 595, 625, 673, 708, 710, 711, 712, 797, 798, 888], "grade": [1, 12, 21, 24, 41, 71, 81, 82, 101, 109, 119, 123, 158, 161, 184, 188, 191, 235, 237, 260, 265, 266, 267, 268, 270, 271, 468, 469, 480, 481, 482, 563, 708, 710, 711, 712, 888], "144000": [1, 81], "sec": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 28, 29, 32, 33, 34, 42, 45, 46, 49, 59, 62, 64, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 88, 92, 93, 96, 97, 99, 100, 103, 104, 107, 109, 110, 111, 112, 113, 114, 115, 117, 118, 121, 123, 127, 129, 132, 133, 135, 136, 141, 144, 146, 149, 151, 152, 156, 159, 162, 166, 167, 168, 169, 172, 177, 179, 180, 181, 182, 183, 184, 185, 190, 196, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 217, 218, 219, 222, 223, 224, 229, 230, 231, 232, 235, 237, 241, 270, 873, 888], "type": [1, 2, 5, 15, 16, 22, 27, 29, 30, 31, 34, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 61, 64, 68, 72, 76, 78, 79, 81, 82, 83, 85, 86, 90, 93, 94, 95, 103, 109, 113, 114, 115, 116, 118, 119, 120, 123, 124, 127, 128, 131, 135, 136, 137, 141, 142, 143, 144, 145, 146, 149, 150, 156, 157, 158, 159, 162, 166, 167, 168, 170, 171, 172, 176, 178, 179, 180, 181, 182, 183, 185, 188, 190, 192, 196, 199, 200, 201, 204, 205, 206, 207, 208, 209, 211, 213, 217, 219, 222, 223, 224, 227, 231, 232, 240, 241, 258, 260, 262, 263, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 278, 279, 280, 281, 298, 299, 310, 312, 313, 315, 316, 319, 320, 321, 322, 323, 329, 331, 337, 345, 356, 357, 358, 359, 360, 361, 370, 371, 372, 373, 375, 382, 388, 405, 406, 413, 415, 420, 422, 429, 434, 437, 438, 445, 446, 448, 451, 452, 453, 454, 456, 457, 458, 463, 470, 476, 478, 479, 480, 481, 482, 489, 496, 501, 508, 512, 513, 521, 541, 553, 560, 561, 562, 563, 564, 565, 568, 572, 574, 577, 578, 579, 580, 581, 583, 584, 586, 587, 591, 595, 601, 603, 610, 620, 622, 624, 625, 648, 649, 652, 659, 660, 661, 673, 676, 679, 688, 694, 695, 696, 698, 699, 703, 708, 709, 710, 711, 712, 716, 717, 718, 719, 721, 739, 742, 756, 771, 775, 779, 780, 781, 782, 784, 786, 787, 788, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 807, 808, 809, 810, 811, 812, 814, 816, 817, 818, 819, 820, 822, 829, 843, 845, 846, 852, 853, 854, 858, 863, 865, 867, 871, 873, 874, 888], "select": [1, 5, 7, 11, 15, 21, 24, 28, 29, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 50, 51, 54, 55, 58, 59, 60, 68, 72, 75, 77, 82, 83, 88, 90, 93, 94, 95, 99, 103, 109, 112, 113, 119, 120, 121, 128, 137, 141, 142, 144, 150, 151, 158, 159, 161, 162, 166, 167, 169, 170, 172, 175, 177, 178, 179, 180, 181, 182, 189, 191, 196, 200, 201, 202, 204, 207, 208, 210, 213, 217, 218, 219, 223, 224, 228, 232, 236, 237, 240, 241, 242, 245, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 275, 276, 279, 280, 281, 321, 326, 356, 367, 415, 421, 444, 451, 472, 478, 481, 482, 487, 515, 555, 556, 558, 559, 560, 561, 563, 564, 568, 577, 578, 580, 581, 588, 589, 604, 630, 642, 649, 652, 671, 674, 694, 708, 709, 710, 711, 712, 719, 725, 773, 780, 786, 790, 792, 794, 795, 796, 799, 801, 803, 809, 812, 814, 818, 821, 825, 843, 847, 850, 863, 867, 870, 874, 888], "re": [1, 4, 29, 45, 68, 72, 93, 94, 101, 103, 113, 114, 120, 127, 140, 141, 144, 151, 156, 158, 159, 160, 161, 162, 166, 167, 169, 170, 171, 172, 182, 189, 200, 201, 202, 204, 205, 206, 207, 208, 216, 218, 223, 229, 231, 237, 242, 245, 257, 259, 262, 265, 266, 267, 268, 270, 274, 282, 315, 319, 413, 420, 438, 481, 482, 506, 555, 556, 559, 561, 562, 563, 572, 621, 649, 652, 657, 708, 710, 711, 712, 719, 725, 742, 773, 788, 795, 799, 808, 811, 813, 816, 818, 847, 851, 852, 855, 865, 867, 868, 870, 876, 888], "referenc": [1, 27, 29, 72, 78, 85, 93, 94, 140, 150, 151, 159, 162, 167, 182, 189, 200, 204, 208, 223, 227, 259, 265, 266, 267, 268, 270, 282, 326, 481, 482, 487, 649, 652, 708, 710, 711, 712, 790, 843, 847, 870, 874, 877, 888], "item": [1, 8, 11, 12, 13, 14, 15, 16, 18, 21, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 65, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 127, 128, 129, 131, 132, 133, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 151, 152, 156, 157, 158, 159, 160, 162, 166, 167, 168, 169, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 219, 222, 223, 224, 228, 229, 230, 231, 232, 235, 237, 241, 258, 262, 263, 265, 266, 270, 274, 278, 284, 289, 304, 481, 482, 529, 710, 711, 712, 743, 756, 853, 873, 888], "deactiv": [1, 29, 42, 51, 60, 69, 72, 92, 93, 94, 111, 142, 146, 159, 162, 182, 191, 206, 207, 208, 212, 223, 777, 845], "wa": [1, 5, 7, 13, 18, 21, 33, 61, 66, 72, 94, 115, 140, 144, 149, 151, 158, 159, 160, 166, 167, 168, 170, 171, 181, 182, 183, 189, 191, 192, 195, 196, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 218, 219, 222, 230, 231, 232, 242, 258, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 285, 286, 298, 299, 334, 349, 392, 412, 413, 420, 435, 437, 478, 481, 482, 498, 501, 510, 515, 525, 536, 537, 539, 540, 545, 546, 547, 562, 563, 564, 575, 576, 578, 581, 584, 585, 586, 595, 602, 620, 624, 645, 657, 660, 661, 693, 703, 708, 709, 710, 711, 712, 724, 728, 734, 756, 772, 773, 788, 790, 795, 799, 808, 811, 816, 818, 821, 825, 843, 846, 847, 852, 853, 854, 864, 869, 870, 873, 876, 888], "been": [1, 9, 10, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 61, 71, 72, 75, 79, 80, 84, 86, 87, 94, 116, 119, 120, 127, 140, 142, 145, 149, 150, 151, 159, 160, 162, 166, 167, 169, 171, 172, 175, 176, 178, 179, 181, 182, 183, 188, 191, 192, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 216, 217, 218, 219, 240, 247, 256, 257, 260, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 276, 277, 278, 279, 280, 281, 290, 291, 292, 298, 299, 305, 356, 360, 361, 371, 372, 373, 379, 380, 381, 384, 385, 386, 388, 393, 396, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 413, 420, 434, 456, 457, 476, 478, 479, 481, 482, 483, 489, 490, 502, 510, 531, 541, 562, 563, 564, 575, 595, 602, 625, 708, 709, 710, 711, 712, 736, 739, 766, 780, 786, 790, 792, 794, 796, 810, 847, 855, 859, 864, 867, 869, 870, 873, 876, 888], "appli": [1, 5, 7, 8, 9, 10, 11, 12, 15, 16, 18, 21, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 62, 68, 69, 70, 71, 72, 73, 74, 75, 79, 80, 82, 83, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 100, 101, 103, 104, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 119, 120, 121, 127, 128, 132, 134, 135, 136, 140, 141, 142, 143, 145, 146, 149, 150, 151, 152, 156, 158, 159, 160, 161, 162, 166, 167, 169, 170, 172, 176, 177, 178, 179, 181, 182, 183, 184, 185, 189, 191, 196, 199, 200, 201, 203, 205, 207, 208, 210, 211, 212, 213, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 241, 245, 258, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 314, 340, 355, 360, 369, 371, 373, 413, 415, 416, 420, 421, 422, 424, 426, 434, 443, 444, 445, 446, 447, 448, 449, 451, 452, 454, 457, 471, 478, 479, 481, 482, 519, 522, 530, 531, 532, 533, 534, 539, 540, 542, 545, 546, 547, 562, 563, 564, 565, 574, 575, 576, 577, 578, 579, 580, 581, 584, 585, 586, 587, 592, 595, 602, 610, 618, 622, 625, 626, 627, 647, 652, 664, 665, 666, 667, 668, 670, 675, 689, 690, 695, 696, 697, 708, 709, 710, 711, 712, 720, 737, 740, 744, 745, 746, 756, 780, 781, 786, 787, 788, 790, 792, 794, 795, 799, 800, 801, 803, 809, 810, 814, 816, 817, 819, 826, 835, 838, 843, 847, 863, 865, 867, 870, 871, 873, 876, 888], "yet": [1, 72, 94, 159, 182, 189, 192, 206, 208, 242, 265, 379, 380, 381, 384, 385, 386, 388, 393, 396, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 421, 426, 552, 578, 756, 847], "method": [1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 27, 28, 29, 30, 31, 34, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 59, 71, 72, 73, 74, 75, 77, 78, 79, 82, 83, 84, 85, 88, 93, 94, 95, 97, 99, 101, 103, 104, 107, 108, 109, 110, 113, 114, 115, 116, 121, 127, 133, 136, 140, 141, 142, 143, 144, 146, 149, 150, 151, 152, 159, 160, 162, 165, 166, 167, 168, 169, 170, 172, 175, 177, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 213, 214, 218, 220, 221, 222, 223, 224, 228, 232, 235, 237, 240, 241, 242, 245, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 285, 286, 289, 298, 299, 300, 301, 303, 304, 307, 308, 312, 313, 314, 315, 316, 320, 321, 322, 323, 326, 328, 329, 342, 344, 346, 349, 351, 356, 360, 361, 362, 367, 371, 372, 373, 375, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 432, 434, 436, 448, 449, 451, 452, 453, 457, 464, 473, 476, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 515, 518, 525, 526, 529, 530, 531, 532, 533, 534, 536, 537, 541, 542, 543, 545, 546, 547, 559, 560, 562, 563, 564, 571, 574, 575, 576, 577, 579, 591, 593, 595, 598, 599, 600, 601, 602, 610, 612, 616, 619, 625, 627, 642, 643, 652, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 676, 686, 689, 690, 692, 695, 696, 697, 698, 699, 701, 708, 709, 710, 711, 712, 715, 718, 720, 726, 727, 735, 736, 738, 739, 743, 745, 751, 752, 754, 756, 757, 769, 772, 776, 781, 782, 783, 784, 787, 795, 798, 800, 808, 812, 815, 843, 845, 847, 862, 863, 865, 867, 870, 871, 873, 874, 885, 888], "5": [1, 2, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 54, 55, 56, 57, 58, 59, 61, 62, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 162, 166, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 190, 191, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 221, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 245, 257, 259, 260, 262, 265, 266, 267, 268, 271, 272, 273, 276, 279, 280, 281, 283, 298, 299, 301, 303, 305, 309, 316, 328, 337, 340, 356, 362, 370, 382, 388, 412, 413, 419, 430, 433, 434, 436, 454, 455, 456, 469, 473, 478, 481, 482, 506, 518, 519, 530, 536, 541, 545, 546, 547, 554, 555, 556, 562, 563, 565, 566, 571, 572, 573, 574, 575, 578, 579, 580, 581, 582, 584, 585, 588, 590, 593, 595, 599, 603, 604, 621, 627, 629, 648, 657, 661, 694, 708, 710, 711, 712, 720, 724, 725, 726, 734, 735, 736, 738, 739, 746, 756, 771, 775, 787, 788, 792, 793, 799, 801, 804, 809, 814, 819, 845, 846, 847, 853, 863, 864, 867, 869, 870, 873, 876], "becaus": [1, 4, 5, 11, 16, 18, 21, 26, 34, 41, 43, 44, 45, 50, 61, 71, 75, 81, 82, 83, 101, 114, 115, 119, 140, 142, 143, 144, 146, 149, 150, 151, 158, 160, 161, 162, 166, 167, 168, 170, 171, 176, 180, 181, 182, 183, 184, 189, 190, 191, 192, 195, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 218, 222, 227, 228, 229, 232, 235, 242, 265, 266, 267, 268, 349, 360, 434, 456, 573, 584, 594, 695, 696, 698, 699, 711, 765, 786, 817, 843, 847, 851, 855, 863, 865, 867, 869, 870, 874, 888], "all": [1, 4, 5, 10, 13, 14, 18, 19, 21, 27, 28, 31, 33, 35, 40, 45, 59, 62, 64, 68, 71, 74, 81, 82, 83, 90, 95, 97, 99, 103, 107, 111, 112, 113, 114, 116, 117, 119, 120, 121, 125, 127, 135, 140, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 168, 169, 170, 171, 172, 176, 179, 181, 182, 183, 184, 185, 188, 189, 190, 191, 196, 199, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 232, 236, 240, 241, 242, 257, 258, 259, 260, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 292, 293, 296, 298, 299, 301, 303, 304, 309, 310, 311, 312, 314, 315, 316, 319, 324, 325, 329, 330, 331, 340, 350, 351, 355, 356, 360, 361, 362, 363, 367, 368, 370, 371, 372, 373, 375, 389, 413, 415, 416, 420, 422, 429, 430, 434, 437, 438, 440, 442, 443, 444, 445, 446, 447, 451, 452, 453, 454, 455, 456, 457, 461, 463, 469, 470, 471, 472, 476, 478, 479, 481, 482, 483, 487, 489, 493, 496, 504, 506, 509, 513, 517, 529, 530, 532, 534, 537, 539, 540, 541, 542, 546, 547, 549, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 573, 577, 578, 579, 580, 581, 582, 583, 584, 587, 590, 591, 595, 601, 603, 610, 615, 618, 619, 621, 622, 625, 626, 627, 630, 640, 645, 646, 652, 656, 658, 667, 673, 676, 685, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 700, 703, 708, 709, 710, 711, 712, 716, 717, 718, 719, 721, 724, 725, 726, 730, 734, 735, 736, 738, 739, 743, 746, 754, 756, 763, 764, 772, 773, 774, 780, 784, 786, 787, 788, 790, 791, 792, 793, 795, 796, 797, 799, 800, 803, 805, 806, 807, 808, 809, 810, 811, 812, 814, 816, 817, 818, 819, 820, 843, 850, 854, 858, 862, 863, 864, 865, 869, 870, 873, 874, 876, 888], "were": [1, 4, 5, 10, 18, 21, 38, 81, 82, 119, 127, 137, 140, 141, 142, 143, 144, 149, 150, 151, 161, 167, 168, 171, 172, 181, 182, 183, 184, 188, 190, 191, 192, 200, 201, 202, 205, 206, 207, 208, 210, 211, 216, 217, 218, 219, 222, 227, 229, 231, 232, 265, 266, 267, 268, 270, 273, 275, 276, 279, 281, 282, 298, 299, 322, 350, 351, 362, 365, 405, 406, 437, 439, 481, 482, 505, 563, 573, 574, 584, 595, 703, 708, 709, 710, 711, 712, 800, 802, 809, 843, 847, 854, 864, 867, 869, 873, 888], "effect": [1, 7, 17, 19, 20, 21, 26, 27, 39, 57, 59, 71, 72, 75, 83, 84, 99, 103, 109, 112, 113, 120, 121, 129, 133, 141, 145, 149, 151, 160, 162, 166, 167, 168, 172, 183, 191, 199, 201, 202, 203, 207, 208, 209, 210, 211, 212, 219, 222, 223, 224, 228, 229, 231, 232, 237, 240, 241, 245, 265, 266, 267, 268, 270, 271, 272, 275, 276, 280, 298, 299, 322, 356, 360, 361, 371, 372, 373, 405, 406, 413, 414, 420, 429, 434, 436, 437, 452, 456, 457, 476, 478, 479, 481, 482, 497, 498, 530, 533, 541, 560, 563, 566, 571, 622, 689, 691, 694, 695, 696, 698, 699, 710, 712, 715, 726, 786, 790, 796, 799, 801, 803, 809, 810, 812, 814, 843, 853, 854, 867, 888], "window": [1, 2, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 59, 72, 73, 74, 75, 77, 82, 83, 84, 88, 93, 99, 100, 103, 104, 108, 109, 113, 114, 115, 121, 123, 129, 133, 136, 137, 141, 142, 143, 144, 146, 151, 166, 171, 172, 180, 183, 191, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 218, 219, 222, 228, 232, 240, 241, 242, 257, 260, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 291, 343, 345, 349, 413, 414, 418, 420, 424, 426, 429, 437, 439, 448, 449, 451, 452, 453, 462, 472, 473, 479, 481, 482, 536, 537, 563, 565, 573, 584, 587, 593, 595, 603, 660, 661, 694, 708, 709, 710, 712, 715, 718, 720, 723, 726, 727, 731, 732, 735, 736, 737, 738, 739, 740, 756, 786, 787, 788, 795, 803, 809, 810, 814, 819, 847, 850, 851, 852, 853, 888], "size": [1, 5, 8, 9, 10, 21, 22, 32, 35, 41, 43, 44, 45, 46, 53, 58, 65, 71, 72, 75, 83, 100, 108, 109, 114, 120, 126, 127, 129, 133, 134, 135, 136, 142, 144, 146, 150, 151, 155, 156, 158, 160, 166, 171, 172, 175, 177, 178, 179, 180, 181, 183, 184, 185, 189, 190, 199, 200, 202, 203, 206, 207, 208, 209, 211, 212, 213, 216, 219, 222, 223, 224, 229, 232, 235, 240, 241, 242, 245, 262, 263, 265, 266, 267, 268, 272, 273, 274, 275, 276, 279, 280, 281, 314, 322, 330, 332, 362, 413, 415, 420, 424, 425, 448, 449, 451, 452, 453, 478, 480, 481, 482, 522, 536, 560, 562, 563, 578, 584, 590, 593, 655, 674, 690, 694, 695, 696, 698, 699, 708, 710, 711, 712, 732, 746, 756, 765, 769, 784, 786, 788, 794, 795, 799, 801, 802, 803, 806, 808, 809, 811, 812, 814, 815, 816, 817, 818, 819, 823, 864, 870, 873, 888], "707": [1, 172, 174, 196, 209, 232], "need": [1, 4, 5, 11, 28, 29, 30, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 54, 55, 58, 59, 61, 70, 71, 75, 76, 86, 90, 94, 95, 103, 104, 107, 108, 109, 110, 112, 114, 117, 119, 127, 135, 136, 140, 141, 142, 143, 144, 145, 149, 150, 151, 156, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 172, 175, 177, 178, 179, 180, 181, 182, 188, 190, 191, 195, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 242, 245, 265, 266, 267, 268, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 284, 298, 320, 331, 374, 377, 388, 414, 415, 423, 429, 437, 446, 451, 471, 480, 481, 482, 489, 496, 505, 521, 526, 550, 563, 602, 657, 695, 696, 698, 699, 708, 710, 711, 712, 756, 762, 773, 779, 794, 799, 809, 845, 847, 848, 850, 851, 852, 853, 854, 855, 863, 864, 869, 870, 871, 873, 876, 888], "more": [1, 4, 18, 19, 27, 28, 34, 42, 43, 44, 49, 54, 58, 71, 72, 74, 76, 81, 82, 83, 84, 86, 94, 104, 107, 110, 113, 114, 121, 122, 130, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 155, 156, 158, 160, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 177, 178, 180, 181, 184, 185, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 213, 216, 217, 218, 219, 224, 227, 228, 229, 230, 232, 235, 237, 241, 242, 250, 259, 260, 262, 263, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 290, 298, 299, 307, 308, 331, 356, 360, 362, 367, 369, 373, 405, 406, 412, 413, 415, 417, 418, 420, 421, 425, 430, 432, 443, 444, 446, 447, 448, 449, 451, 452, 454, 455, 463, 472, 481, 482, 489, 498, 500, 506, 517, 521, 524, 530, 536, 537, 538, 562, 563, 565, 571, 573, 584, 591, 595, 604, 615, 617, 621, 622, 625, 635, 644, 646, 647, 649, 652, 660, 685, 689, 690, 695, 696, 697, 698, 699, 708, 710, 711, 712, 715, 718, 726, 735, 736, 737, 738, 739, 740, 753, 756, 772, 773, 774, 775, 780, 784, 788, 791, 792, 794, 795, 799, 808, 811, 814, 816, 818, 819, 827, 828, 836, 843, 844, 845, 847, 851, 852, 853, 854, 863, 864, 865, 867, 869, 870, 871, 872, 876, 885, 888], "than": [1, 5, 13, 18, 24, 26, 33, 34, 41, 42, 44, 45, 46, 50, 54, 58, 59, 61, 70, 71, 79, 83, 86, 87, 94, 114, 119, 124, 127, 135, 136, 140, 141, 142, 143, 144, 146, 149, 150, 151, 156, 158, 161, 166, 167, 168, 169, 170, 171, 172, 176, 180, 181, 183, 184, 185, 188, 191, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 216, 217, 218, 227, 230, 240, 242, 260, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 290, 307, 308, 355, 360, 367, 413, 415, 418, 420, 424, 430, 432, 442, 447, 449, 451, 452, 454, 457, 469, 478, 479, 481, 482, 498, 500, 506, 517, 528, 536, 537, 547, 552, 562, 563, 565, 571, 573, 578, 580, 590, 593, 594, 596, 600, 603, 621, 626, 647, 657, 689, 695, 696, 697, 698, 699, 700, 703, 708, 710, 711, 712, 715, 718, 723, 726, 731, 737, 740, 756, 773, 774, 786, 788, 789, 792, 795, 799, 808, 809, 811, 814, 816, 818, 819, 845, 847, 852, 853, 854, 869, 870, 888], "one": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 24, 31, 32, 33, 34, 40, 41, 42, 43, 45, 46, 48, 49, 50, 58, 59, 66, 69, 71, 74, 75, 77, 82, 83, 84, 86, 87, 88, 90, 94, 96, 97, 99, 103, 109, 111, 113, 114, 115, 117, 121, 127, 131, 133, 135, 136, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 166, 167, 168, 169, 172, 176, 177, 178, 179, 180, 181, 182, 184, 188, 189, 191, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 216, 217, 218, 219, 222, 224, 227, 229, 230, 231, 232, 236, 241, 242, 257, 258, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 287, 290, 298, 299, 313, 314, 316, 320, 321, 323, 355, 357, 358, 360, 362, 363, 367, 382, 391, 394, 396, 405, 406, 412, 413, 419, 420, 423, 426, 428, 432, 435, 436, 437, 444, 445, 447, 448, 454, 463, 470, 471, 472, 479, 480, 481, 482, 485, 489, 498, 500, 514, 515, 517, 519, 524, 539, 540, 546, 547, 549, 552, 563, 564, 565, 566, 580, 585, 588, 589, 590, 592, 603, 606, 615, 617, 625, 626, 632, 644, 646, 652, 657, 660, 674, 679, 689, 690, 695, 696, 697, 698, 699, 701, 704, 708, 709, 710, 711, 712, 714, 717, 724, 734, 735, 736, 738, 739, 741, 744, 745, 746, 756, 769, 772, 774, 775, 780, 787, 788, 790, 791, 792, 793, 795, 796, 797, 799, 801, 814, 815, 817, 818, 819, 820, 834, 836, 843, 845, 846, 847, 850, 851, 855, 863, 864, 865, 867, 869, 870, 873, 888], "make": [1, 4, 9, 10, 13, 18, 19, 21, 27, 28, 31, 32, 34, 38, 42, 45, 48, 50, 54, 55, 59, 62, 68, 71, 76, 86, 90, 93, 94, 103, 109, 111, 112, 113, 114, 122, 124, 130, 133, 135, 136, 140, 141, 142, 143, 144, 150, 151, 156, 158, 160, 161, 162, 166, 167, 169, 170, 171, 172, 176, 177, 178, 179, 180, 182, 183, 184, 185, 188, 189, 191, 192, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 213, 216, 218, 222, 227, 229, 230, 231, 235, 236, 237, 242, 257, 264, 265, 266, 267, 268, 270, 272, 273, 276, 278, 279, 280, 281, 298, 299, 327, 339, 356, 360, 361, 362, 367, 371, 372, 373, 374, 413, 416, 417, 420, 422, 423, 432, 436, 437, 448, 449, 451, 452, 456, 457, 463, 470, 472, 476, 478, 479, 481, 482, 523, 541, 547, 556, 562, 563, 573, 590, 591, 594, 603, 613, 615, 625, 635, 644, 646, 660, 672, 703, 705, 709, 724, 734, 735, 736, 738, 743, 751, 752, 756, 774, 775, 778, 779, 782, 793, 796, 802, 809, 814, 819, 820, 836, 843, 845, 846, 854, 855, 863, 864, 865, 867, 868, 870, 873, 876, 888], "topographi": [1, 13, 21, 27, 71, 72, 75, 86, 114, 120, 122, 130, 132, 142, 144, 151, 166, 170, 172, 176, 191, 205, 207, 208, 219, 230, 232, 240, 245, 265, 266, 267, 268, 270, 274, 275, 315, 413, 420, 481, 482, 560, 563, 579, 673, 708, 710, 712, 769, 788, 793, 794, 795, 799, 801, 805, 810, 812, 816, 817, 843, 888], "disabl": [1, 86, 114, 142, 149, 150, 151, 172, 199, 200, 203, 219, 230, 257, 262, 265, 266, 267, 268, 274, 275, 310, 367, 413, 419, 420, 425, 481, 482, 562, 563, 584, 595, 650, 654, 655, 708, 710, 712, 751, 756, 773, 788, 790, 794, 795, 799, 808, 809, 811, 816, 818, 822, 845, 888], "interact": [1, 27, 33, 45, 47, 86, 114, 115, 120, 127, 140, 149, 150, 151, 165, 166, 168, 171, 172, 180, 181, 191, 200, 201, 205, 206, 207, 211, 216, 224, 227, 230, 231, 237, 241, 242, 245, 257, 262, 265, 266, 267, 268, 272, 273, 274, 275, 276, 279, 280, 281, 291, 298, 413, 420, 472, 481, 482, 530, 562, 563, 603, 689, 691, 708, 710, 712, 756, 758, 772, 773, 777, 787, 788, 790, 791, 792, 794, 795, 799, 801, 803, 808, 809, 810, 811, 812, 814, 816, 817, 818, 819, 845, 847, 869, 870, 871, 876, 888], "filter": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 17, 19, 20, 27, 32, 33, 34, 42, 45, 59, 69, 73, 74, 77, 78, 82, 83, 84, 85, 88, 92, 99, 109, 112, 113, 115, 121, 133, 136, 140, 141, 144, 145, 146, 149, 162, 165, 166, 167, 169, 171, 172, 176, 181, 183, 184, 185, 191, 195, 199, 201, 204, 207, 211, 214, 215, 216, 218, 219, 224, 232, 242, 245, 257, 260, 263, 264, 265, 266, 267, 268, 270, 272, 273, 275, 276, 279, 280, 281, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 349, 350, 353, 356, 360, 361, 371, 372, 373, 377, 413, 414, 415, 417, 420, 421, 424, 427, 428, 429, 431, 434, 442, 454, 456, 457, 476, 478, 479, 481, 482, 494, 523, 541, 560, 563, 564, 568, 574, 575, 576, 580, 581, 584, 585, 586, 595, 596, 599, 622, 662, 672, 708, 710, 711, 712, 720, 721, 724, 727, 796, 797, 798, 804, 809, 810, 828, 843, 845, 847, 863, 865, 867, 874, 877, 878, 888], "contigu": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 34, 42, 74, 77, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 136, 141, 144, 146, 151, 196, 203, 204, 205, 207, 210, 211, 212, 231, 232, 271], "segment": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 23, 24, 27, 33, 34, 38, 42, 64, 71, 74, 77, 81, 82, 83, 84, 88, 99, 109, 113, 114, 115, 121, 133, 135, 136, 137, 141, 144, 145, 146, 151, 162, 168, 172, 184, 191, 196, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 218, 232, 241, 245, 257, 259, 263, 265, 266, 267, 268, 275, 278, 305, 356, 361, 442, 465, 466, 467, 480, 481, 482, 510, 522, 531, 533, 563, 565, 566, 567, 568, 569, 570, 573, 580, 581, 584, 585, 593, 595, 708, 727, 754, 756, 790, 792, 799, 801, 843, 863, 864, 870, 873, 888], "up": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 23, 24, 26, 27, 28, 33, 34, 42, 44, 45, 50, 70, 73, 74, 77, 80, 82, 83, 84, 88, 90, 93, 94, 95, 99, 103, 104, 109, 111, 112, 113, 114, 115, 117, 121, 123, 132, 133, 136, 140, 141, 144, 145, 146, 150, 151, 155, 156, 158, 159, 160, 162, 165, 166, 172, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 216, 218, 219, 223, 224, 228, 229, 232, 235, 237, 242, 262, 263, 265, 266, 267, 268, 272, 273, 274, 275, 276, 277, 279, 280, 281, 413, 418, 419, 420, 425, 453, 481, 482, 536, 537, 562, 563, 565, 584, 650, 656, 657, 694, 703, 708, 710, 712, 726, 754, 756, 775, 784, 786, 787, 788, 792, 795, 799, 802, 808, 809, 811, 814, 816, 819, 820, 826, 843, 845, 851, 867, 870, 871, 873, 876, 888], "band": [1, 5, 8, 9, 12, 13, 14, 15, 16, 18, 21, 27, 32, 33, 34, 42, 73, 77, 82, 88, 94, 105, 106, 107, 109, 110, 112, 114, 115, 121, 126, 133, 136, 137, 141, 142, 144, 145, 146, 167, 172, 196, 199, 201, 202, 203, 204, 205, 207, 211, 212, 219, 231, 232, 240, 241, 242, 245, 265, 266, 267, 268, 288, 415, 421, 424, 448, 449, 451, 452, 454, 481, 482, 546, 568, 599, 687, 710, 712, 724, 734, 735, 738, 780, 788, 804, 843, 864, 867, 888], "stop": [1, 5, 29, 69, 82, 93, 96, 127, 136, 167, 172, 201, 202, 203, 210, 212, 216, 217, 218, 257, 258, 265, 266, 267, 268, 285, 286, 297, 359, 415, 424, 448, 449, 451, 452, 480, 481, 482, 500, 523, 533, 536, 563, 584, 593, 609, 800, 803, 847, 869, 888], "fir": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 73, 74, 77, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 136, 141, 144, 146, 151, 172, 191, 196, 199, 201, 203, 204, 205, 207, 210, 211, 212, 232, 257, 265, 266, 267, 268, 415, 424, 448, 449, 451, 452, 481, 482, 575, 576, 599, 721, 797, 809, 845, 867, 877, 888], "paramet": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 24, 31, 34, 40, 41, 42, 43, 44, 48, 54, 55, 59, 62, 68, 70, 72, 73, 74, 76, 77, 82, 83, 84, 88, 96, 97, 99, 100, 101, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 120, 121, 123, 128, 132, 133, 136, 137, 140, 141, 142, 144, 145, 146, 149, 150, 151, 156, 158, 159, 161, 162, 166, 168, 169, 170, 171, 172, 175, 178, 180, 188, 191, 192, 195, 196, 199, 200, 202, 203, 204, 205, 206, 207, 210, 211, 212, 216, 217, 218, 219, 222, 223, 224, 227, 230, 240, 241, 242, 245, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 759, 760, 761, 762, 764, 765, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 847, 863, 865, 867, 870, 874, 888], "design": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 61, 73, 74, 77, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 136, 141, 144, 146, 151, 160, 161, 172, 180, 188, 190, 191, 199, 201, 203, 204, 205, 207, 208, 210, 211, 212, 224, 227, 232, 245, 258, 265, 266, 267, 268, 344, 389, 392, 415, 424, 448, 449, 451, 452, 481, 482, 489, 491, 493, 496, 497, 498, 504, 508, 562, 564, 595, 602, 609, 619, 689, 693, 720, 731, 809, 827, 828, 852, 864, 867, 869, 876, 888], "pass": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 32, 34, 42, 43, 59, 73, 74, 77, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 136, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 155, 156, 158, 166, 167, 168, 169, 170, 171, 172, 180, 183, 189, 191, 192, 196, 199, 200, 201, 203, 204, 205, 206, 207, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 227, 229, 231, 232, 235, 236, 237, 240, 241, 245, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 305, 306, 307, 308, 309, 310, 311, 314, 316, 318, 319, 320, 324, 325, 331, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 426, 429, 430, 432, 434, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 463, 464, 468, 469, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 524, 525, 526, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 554, 555, 556, 559, 562, 563, 564, 565, 566, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 595, 596, 598, 599, 602, 603, 604, 607, 608, 609, 610, 612, 614, 615, 616, 617, 618, 619, 621, 622, 623, 625, 626, 627, 629, 630, 631, 632, 633, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 652, 654, 656, 657, 659, 660, 661, 662, 671, 672, 673, 674, 676, 678, 679, 680, 681, 682, 683, 684, 688, 695, 696, 697, 698, 699, 703, 704, 705, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 725, 726, 727, 730, 731, 735, 736, 738, 739, 740, 741, 744, 745, 746, 751, 755, 756, 757, 764, 769, 772, 773, 776, 778, 780, 781, 782, 784, 786, 787, 788, 789, 790, 791, 793, 794, 795, 796, 799, 800, 801, 804, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 825, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 847, 851, 852, 863, 865, 867, 870, 888], "zero": [1, 2, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 24, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 60, 64, 71, 73, 74, 75, 77, 82, 83, 84, 88, 90, 93, 94, 95, 99, 109, 112, 113, 114, 115, 120, 121, 133, 136, 140, 141, 142, 144, 146, 149, 151, 152, 158, 160, 162, 166, 168, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 191, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 222, 223, 224, 227, 231, 232, 242, 258, 259, 260, 263, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 279, 280, 281, 282, 284, 298, 299, 356, 360, 362, 371, 415, 419, 424, 425, 426, 447, 448, 449, 451, 452, 453, 454, 476, 481, 482, 483, 494, 536, 547, 563, 564, 585, 609, 622, 659, 660, 661, 669, 673, 688, 695, 696, 698, 699, 703, 704, 708, 710, 711, 712, 724, 727, 734, 735, 736, 737, 738, 740, 756, 771, 775, 785, 786, 809, 814, 819, 820, 843, 847, 863, 870, 873, 888], "phase": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 27, 34, 42, 73, 74, 77, 82, 83, 84, 88, 99, 105, 106, 113, 114, 115, 121, 133, 136, 141, 144, 146, 151, 167, 172, 190, 191, 196, 199, 201, 202, 203, 204, 205, 207, 210, 211, 212, 224, 232, 242, 245, 265, 266, 267, 268, 270, 271, 272, 273, 276, 279, 280, 281, 291, 343, 373, 415, 424, 426, 447, 448, 449, 451, 452, 454, 481, 482, 529, 534, 544, 547, 560, 563, 629, 735, 736, 746, 797, 843, 854, 864, 888], "non": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 24, 34, 40, 41, 42, 46, 50, 59, 71, 73, 74, 77, 82, 83, 84, 88, 93, 99, 109, 113, 114, 115, 121, 133, 136, 141, 142, 143, 144, 146, 150, 151, 158, 165, 166, 169, 171, 172, 175, 180, 181, 185, 189, 190, 191, 196, 199, 201, 202, 203, 204, 205, 207, 208, 210, 211, 212, 216, 222, 232, 233, 234, 245, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 279, 280, 281, 287, 298, 299, 320, 355, 356, 360, 362, 413, 419, 420, 421, 425, 442, 448, 449, 451, 452, 454, 479, 481, 482, 497, 536, 543, 549, 560, 562, 563, 564, 577, 578, 595, 596, 613, 619, 622, 642, 669, 687, 688, 695, 696, 698, 699, 703, 704, 708, 710, 711, 712, 738, 746, 756, 773, 784, 787, 788, 795, 799, 808, 811, 815, 816, 818, 843, 845, 847, 856, 863, 867, 869, 870, 885, 888], "causal": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 73, 74, 77, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 136, 141, 144, 146, 151, 172, 191, 196, 199, 201, 202, 203, 204, 205, 207, 210, 211, 212, 232, 265, 266, 267, 268, 419, 448, 449, 451, 452, 481, 482], "bandstop": [1, 5, 82, 136, 203, 212, 481, 482, 809], "domain": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 46, 73, 74, 77, 82, 83, 84, 88, 99, 103, 113, 114, 115, 121, 133, 136, 141, 144, 146, 151, 165, 166, 172, 191, 196, 199, 201, 202, 203, 204, 207, 210, 211, 212, 219, 232, 242, 243, 244, 245, 257, 265, 266, 267, 268, 415, 424, 425, 449, 451, 452, 453, 454, 481, 482, 546, 547, 657, 710, 712, 744, 751, 869, 888], "ham": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 74, 77, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 136, 141, 144, 146, 151, 191, 196, 202, 203, 204, 205, 207, 210, 211, 212, 232, 265, 266, 267, 268, 415, 424, 449, 451, 452, 481, 482, 727, 810, 888], "0194": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 74, 77, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 136, 141, 144, 146, 151, 191, 196, 202, 203, 204, 205, 210, 211, 212, 232], "passband": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 73, 74, 77, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 136, 141, 144, 146, 151, 172, 191, 196, 199, 201, 203, 204, 205, 207, 210, 211, 212, 232, 863], "rippl": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 74, 77, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 136, 141, 144, 146, 151, 191, 196, 203, 204, 205, 210, 211, 212, 232], "db": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 73, 74, 77, 82, 83, 84, 88, 99, 108, 109, 113, 114, 115, 121, 129, 133, 136, 137, 141, 142, 144, 146, 151, 169, 172, 191, 196, 199, 201, 202, 203, 204, 205, 207, 210, 211, 212, 216, 219, 222, 224, 232, 240, 241, 242, 265, 266, 267, 268, 270, 313, 314, 373, 375, 446, 449, 481, 482, 496, 508, 536, 560, 561, 563, 652, 703, 708, 710, 711, 712, 756, 772, 788, 797, 801, 804, 810, 812, 843, 870, 888], "stopband": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 74, 77, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 136, 141, 144, 146, 151, 191, 196, 203, 204, 205, 210, 211, 212, 232], "attenu": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 74, 77, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 136, 141, 144, 146, 151, 162, 191, 196, 203, 204, 205, 210, 211, 212, 232, 265, 266, 267, 268, 415, 424, 449, 451, 452, 481, 482, 870, 888], "lower": [1, 2, 5, 8, 9, 10, 12, 13, 14, 15, 16, 18, 21, 22, 34, 37, 40, 42, 49, 54, 55, 62, 71, 73, 74, 77, 82, 83, 88, 99, 107, 112, 113, 114, 115, 120, 121, 127, 133, 136, 141, 142, 144, 146, 151, 156, 160, 172, 180, 181, 184, 192, 196, 199, 201, 202, 203, 204, 205, 206, 207, 211, 212, 219, 229, 230, 231, 232, 235, 237, 242, 260, 262, 265, 266, 267, 268, 272, 273, 274, 276, 279, 280, 281, 413, 415, 418, 420, 439, 449, 451, 481, 482, 522, 536, 537, 562, 563, 568, 573, 578, 599, 618, 687, 694, 695, 697, 698, 708, 709, 710, 712, 726, 727, 773, 775, 780, 787, 788, 794, 795, 799, 808, 809, 810, 811, 814, 816, 818, 819, 820, 843, 845, 888], "transit": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 73, 74, 77, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 136, 141, 144, 146, 151, 172, 191, 196, 199, 201, 203, 204, 205, 207, 210, 211, 212, 232, 258, 265, 266, 267, 268, 415, 424, 449, 451, 452, 481, 482, 565, 599, 822, 870, 888], "bandwidth": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 73, 74, 77, 82, 83, 84, 88, 99, 104, 113, 114, 115, 121, 133, 136, 141, 144, 146, 151, 172, 191, 196, 199, 201, 203, 204, 205, 207, 210, 211, 212, 232, 242, 265, 266, 267, 268, 418, 426, 452, 481, 482, 536, 537, 710, 712, 715, 718, 720, 726, 736, 739, 788, 888], "50": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 28, 34, 35, 41, 42, 45, 46, 47, 66, 73, 77, 81, 82, 83, 84, 88, 90, 95, 99, 103, 104, 108, 109, 112, 113, 114, 115, 120, 121, 133, 135, 136, 137, 143, 144, 146, 149, 151, 158, 160, 166, 168, 169, 170, 171, 172, 178, 180, 184, 185, 189, 191, 195, 196, 199, 201, 202, 203, 204, 205, 207, 209, 212, 216, 217, 218, 224, 227, 228, 229, 231, 232, 235, 236, 237, 242, 245, 257, 337, 448, 481, 482, 545, 572, 665, 670, 688, 696, 756, 804, 863, 870, 888], "hz": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 32, 33, 34, 42, 69, 72, 73, 74, 77, 81, 82, 83, 84, 88, 90, 93, 94, 95, 99, 104, 107, 108, 109, 113, 114, 115, 121, 123, 127, 133, 136, 137, 141, 142, 144, 146, 151, 166, 167, 168, 169, 172, 180, 183, 184, 189, 190, 191, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 229, 230, 231, 232, 240, 241, 245, 257, 265, 266, 267, 268, 415, 418, 424, 448, 449, 451, 452, 454, 481, 482, 536, 537, 563, 568, 571, 575, 576, 584, 586, 589, 595, 599, 674, 694, 708, 710, 711, 712, 715, 718, 724, 726, 732, 734, 735, 736, 738, 739, 786, 788, 797, 804, 809, 810, 864, 873, 874], "upper": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 34, 39, 42, 62, 71, 73, 77, 82, 84, 88, 113, 114, 115, 120, 121, 127, 133, 136, 141, 142, 144, 146, 159, 166, 172, 191, 196, 199, 201, 202, 203, 204, 205, 207, 210, 211, 212, 232, 241, 242, 245, 262, 263, 264, 265, 266, 267, 268, 272, 273, 274, 276, 279, 280, 281, 283, 413, 415, 418, 420, 439, 449, 451, 457, 481, 482, 536, 537, 562, 563, 568, 599, 687, 694, 695, 696, 697, 698, 699, 708, 709, 710, 711, 712, 724, 726, 727, 734, 773, 775, 780, 788, 794, 795, 799, 808, 810, 811, 814, 816, 818, 819, 820, 888], "7921": 1, "601": [1, 5, 140, 149, 199, 204, 216, 232], "parallel": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 31, 32, 33, 34, 41, 42, 45, 50, 66, 73, 74, 77, 79, 82, 83, 84, 87, 88, 90, 95, 99, 100, 107, 109, 110, 112, 113, 114, 115, 119, 121, 124, 133, 136, 141, 144, 146, 150, 151, 158, 159, 166, 171, 172, 176, 181, 182, 183, 184, 185, 191, 196, 199, 200, 201, 203, 204, 205, 207, 208, 210, 211, 212, 222, 224, 229, 230, 231, 232, 241, 245, 257, 265, 266, 267, 268, 271, 272, 273, 275, 276, 279, 280, 281, 283, 356, 357, 359, 361, 415, 416, 418, 419, 423, 424, 426, 429, 430, 451, 452, 453, 456, 458, 469, 471, 476, 478, 479, 481, 482, 521, 524, 525, 536, 537, 541, 546, 547, 568, 575, 576, 603, 647, 650, 655, 656, 659, 660, 661, 673, 695, 696, 697, 698, 699, 710, 712, 713, 714, 715, 716, 717, 718, 726, 727, 735, 736, 737, 738, 739, 740, 788, 791, 810, 855, 867, 870, 876, 888], "n_job": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 73, 74, 77, 79, 82, 83, 84, 87, 88, 90, 95, 96, 99, 100, 103, 107, 109, 110, 112, 113, 114, 115, 119, 121, 124, 133, 136, 141, 144, 146, 150, 151, 158, 159, 166, 172, 176, 181, 182, 183, 184, 185, 191, 196, 199, 200, 201, 203, 204, 205, 207, 208, 210, 211, 212, 222, 224, 227, 229, 230, 231, 232, 235, 236, 237, 241, 257, 265, 266, 267, 268, 271, 272, 273, 275, 276, 279, 280, 281, 283, 356, 357, 359, 361, 415, 416, 418, 419, 423, 424, 425, 426, 429, 430, 451, 452, 453, 456, 469, 471, 481, 482, 521, 524, 525, 536, 537, 546, 547, 568, 575, 576, 647, 656, 659, 660, 661, 673, 695, 696, 697, 698, 699, 710, 712, 713, 714, 715, 716, 717, 718, 726, 727, 735, 736, 737, 738, 739, 740, 788, 791, 810, 845, 867, 888], "backend": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 73, 74, 77, 79, 82, 83, 84, 87, 88, 90, 95, 99, 100, 107, 109, 110, 112, 113, 114, 115, 119, 121, 124, 133, 136, 141, 144, 146, 150, 151, 156, 158, 159, 160, 166, 171, 172, 176, 181, 182, 183, 184, 185, 191, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 211, 212, 222, 224, 229, 230, 231, 232, 241, 265, 266, 272, 273, 276, 279, 280, 281, 472, 481, 482, 563, 756, 763, 765, 766, 767, 768, 786, 803, 809, 814, 819, 821, 825, 826, 827, 828, 845, 846, 851, 867, 876, 888], "sequentialbackend": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 73, 74, 77, 79, 82, 83, 84, 87, 88, 90, 95, 99, 100, 107, 109, 110, 112, 113, 114, 115, 119, 121, 124, 133, 136, 141, 144, 146, 150, 151, 158, 159, 166, 172, 176, 181, 182, 183, 184, 185, 191, 196, 199, 200, 201, 203, 204, 205, 207, 208, 210, 211, 212, 222, 224, 229, 230, 231, 232, 241], "concurr": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 73, 74, 77, 79, 82, 83, 84, 87, 88, 90, 95, 99, 100, 107, 109, 110, 112, 113, 114, 115, 119, 121, 124, 133, 136, 141, 144, 146, 150, 151, 158, 159, 166, 172, 176, 181, 182, 183, 184, 185, 191, 196, 199, 200, 201, 203, 204, 205, 207, 208, 210, 211, 212, 222, 224, 229, 230, 231, 232, 241], "worker": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 73, 74, 77, 79, 82, 83, 84, 87, 88, 90, 95, 99, 100, 107, 109, 110, 112, 113, 114, 115, 119, 121, 124, 133, 136, 141, 144, 146, 150, 151, 158, 159, 166, 171, 172, 176, 181, 182, 183, 184, 185, 191, 196, 199, 200, 201, 203, 204, 205, 207, 208, 210, 211, 212, 222, 224, 229, 230, 231, 232, 241, 876], "done": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 69, 71, 73, 74, 77, 79, 80, 82, 83, 84, 87, 88, 90, 92, 93, 94, 95, 99, 100, 101, 103, 104, 107, 108, 109, 110, 112, 113, 114, 115, 119, 121, 124, 131, 133, 134, 135, 136, 140, 141, 143, 144, 146, 150, 151, 155, 156, 158, 159, 160, 161, 162, 166, 167, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 216, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 241, 242, 258, 263, 264, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 298, 299, 322, 361, 426, 476, 478, 479, 481, 482, 530, 532, 533, 534, 563, 575, 576, 579, 581, 694, 708, 709, 711, 733, 735, 736, 738, 739, 754, 756, 759, 772, 780, 810, 843, 847, 852, 853, 863, 867, 869, 870, 876, 888], "out": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 60, 69, 71, 73, 74, 75, 77, 79, 80, 82, 83, 84, 87, 88, 90, 92, 94, 95, 99, 100, 107, 109, 110, 112, 113, 114, 115, 119, 120, 121, 123, 124, 127, 131, 133, 136, 137, 140, 141, 143, 144, 146, 150, 151, 156, 158, 159, 160, 166, 167, 170, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 191, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 219, 222, 224, 227, 229, 230, 231, 232, 241, 242, 257, 262, 265, 266, 267, 268, 270, 274, 289, 304, 340, 357, 358, 359, 413, 415, 420, 424, 449, 451, 481, 482, 489, 505, 529, 537, 562, 563, 564, 578, 603, 609, 611, 700, 708, 710, 712, 735, 736, 743, 773, 780, 788, 792, 795, 799, 800, 808, 811, 816, 818, 845, 846, 847, 853, 864, 865, 867, 870, 873, 874, 888], "elaps": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 73, 74, 77, 79, 82, 83, 84, 87, 88, 90, 95, 99, 100, 107, 109, 110, 112, 113, 114, 115, 119, 121, 124, 133, 136, 141, 144, 146, 150, 151, 158, 159, 166, 172, 176, 181, 182, 183, 184, 185, 191, 196, 199, 200, 201, 203, 204, 205, 207, 208, 210, 211, 212, 222, 224, 229, 230, 231, 232, 241], "remain": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 60, 69, 73, 74, 76, 77, 79, 82, 83, 84, 87, 88, 90, 92, 94, 95, 99, 100, 107, 109, 110, 112, 113, 114, 115, 119, 121, 124, 131, 133, 136, 137, 141, 144, 146, 150, 151, 156, 158, 159, 166, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 211, 212, 222, 224, 229, 230, 231, 232, 241, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 298, 299, 356, 360, 361, 371, 372, 373, 413, 420, 436, 456, 457, 476, 478, 479, 481, 482, 483, 541, 563, 648, 696, 708, 710, 711, 735, 736, 738, 739, 796, 855, 863, 873, 876, 888], "299": [1, 5, 13, 34, 85, 86, 140, 169, 184, 209, 232, 240], "finish": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 73, 74, 77, 79, 82, 83, 84, 87, 88, 90, 95, 99, 100, 107, 109, 110, 112, 113, 114, 115, 119, 121, 124, 133, 136, 141, 144, 146, 150, 151, 158, 159, 166, 172, 176, 181, 182, 183, 184, 185, 191, 196, 199, 200, 201, 203, 204, 205, 207, 208, 210, 211, 212, 218, 222, 224, 229, 230, 231, 232, 241, 865, 888], "66": [1, 12, 13, 16, 19, 21, 35, 40, 41, 45, 81, 103, 108, 112, 114, 144, 146, 158, 169, 176, 181, 184, 191, 196, 205, 209, 227, 228, 231, 232, 245, 267, 268, 298, 299, 356, 360, 361, 371, 372, 373, 413, 420, 456, 457, 476, 478, 479, 541, 563, 796, 888], "id": [1, 5, 12, 21, 32, 33, 34, 42, 45, 46, 49, 70, 72, 73, 74, 80, 81, 82, 90, 93, 94, 95, 99, 107, 108, 110, 112, 113, 140, 141, 142, 146, 149, 152, 162, 166, 168, 169, 171, 172, 177, 180, 182, 183, 185, 191, 196, 200, 203, 204, 205, 207, 212, 213, 222, 223, 224, 229, 241, 257, 260, 265, 266, 267, 270, 272, 273, 276, 278, 279, 280, 281, 284, 298, 299, 315, 356, 370, 378, 429, 435, 437, 439, 441, 442, 454, 466, 481, 482, 522, 523, 528, 558, 564, 575, 576, 587, 612, 619, 621, 622, 628, 657, 710, 711, 756, 789, 809, 814, 819, 833, 847, 867, 870, 888], "Not": [1, 8, 9, 11, 12, 16, 18, 21, 28, 32, 33, 34, 45, 46, 49, 62, 70, 72, 73, 74, 75, 77, 80, 81, 82, 83, 88, 90, 93, 94, 95, 96, 97, 100, 103, 104, 107, 108, 109, 110, 112, 113, 114, 117, 121, 127, 128, 132, 135, 136, 137, 140, 141, 142, 143, 145, 146, 149, 151, 152, 166, 167, 168, 169, 172, 177, 180, 182, 183, 184, 185, 191, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 229, 230, 231, 232, 235, 237, 241, 267, 268, 273, 279, 280, 281, 421, 424, 448, 457, 564, 708, 756, 792, 820, 846, 870, 876], "metadata": [1, 4, 8, 9, 11, 12, 16, 18, 21, 28, 32, 33, 34, 45, 46, 49, 62, 70, 72, 73, 74, 75, 80, 83, 88, 90, 93, 94, 95, 96, 97, 100, 101, 103, 104, 107, 108, 109, 110, 112, 113, 114, 117, 121, 128, 132, 135, 136, 137, 140, 141, 142, 145, 146, 147, 148, 149, 151, 152, 161, 165, 166, 172, 177, 180, 182, 183, 184, 185, 188, 189, 190, 191, 199, 200, 201, 203, 204, 205, 207, 211, 213, 216, 222, 223, 224, 228, 229, 230, 231, 232, 235, 237, 240, 241, 259, 260, 265, 266, 267, 268, 269, 270, 355, 437, 442, 481, 482, 487, 618, 638, 708, 710, 711, 712, 780, 843, 864, 888], "33": [1, 8, 12, 13, 19, 21, 28, 33, 34, 35, 39, 40, 41, 45, 47, 77, 81, 103, 108, 112, 114, 115, 137, 141, 144, 151, 169, 170, 183, 196, 203, 205, 209, 227, 228, 229, 230, 231, 232, 236, 237, 265, 266, 267, 268, 337, 454, 481, 482, 526, 810, 870, 888], "interv": [1, 10, 11, 28, 32, 33, 34, 38, 45, 46, 49, 62, 70, 71, 72, 73, 80, 83, 90, 93, 94, 95, 96, 97, 100, 103, 104, 107, 110, 112, 113, 117, 127, 128, 132, 140, 142, 144, 145, 149, 150, 151, 152, 166, 172, 176, 177, 178, 180, 182, 183, 184, 185, 191, 200, 201, 203, 204, 207, 210, 211, 213, 223, 224, 229, 230, 231, 235, 237, 241, 257, 259, 260, 263, 264, 265, 266, 267, 268, 271, 272, 273, 275, 276, 279, 280, 281, 288, 348, 361, 437, 536, 546, 547, 563, 580, 581, 587, 625, 626, 658, 660, 685, 687, 708, 710, 711, 712, 721, 780, 801, 816, 864, 874, 888], "mode": [1, 5, 11, 22, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 44, 45, 46, 47, 49, 51, 57, 58, 59, 60, 61, 62, 70, 72, 73, 74, 79, 80, 86, 87, 93, 94, 95, 96, 97, 100, 103, 104, 107, 110, 112, 113, 114, 117, 119, 120, 127, 128, 131, 132, 136, 140, 141, 142, 144, 145, 149, 151, 152, 158, 161, 166, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 191, 192, 196, 199, 200, 201, 202, 203, 204, 205, 207, 209, 210, 211, 213, 218, 219, 223, 229, 230, 231, 232, 235, 237, 241, 242, 245, 257, 262, 263, 265, 266, 267, 268, 272, 273, 274, 275, 276, 279, 280, 281, 288, 298, 299, 343, 356, 360, 361, 362, 366, 367, 371, 372, 373, 412, 413, 419, 420, 447, 451, 452, 453, 472, 476, 481, 482, 521, 539, 540, 562, 563, 587, 595, 648, 671, 674, 703, 708, 709, 710, 711, 712, 733, 756, 782, 784, 786, 787, 788, 792, 795, 798, 799, 803, 808, 809, 810, 811, 814, 815, 816, 819, 820, 825, 847, 855, 876, 888], "mean": [1, 4, 8, 9, 10, 11, 14, 16, 19, 21, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 51, 57, 58, 59, 60, 61, 62, 68, 69, 70, 71, 72, 73, 74, 79, 80, 84, 86, 87, 93, 94, 95, 96, 97, 100, 101, 103, 104, 107, 110, 112, 113, 114, 117, 119, 120, 127, 128, 132, 137, 140, 141, 142, 143, 144, 145, 149, 150, 152, 156, 157, 158, 160, 166, 170, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 196, 199, 200, 201, 202, 203, 204, 205, 207, 208, 210, 211, 212, 213, 216, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 237, 240, 241, 242, 259, 260, 262, 265, 266, 267, 268, 269, 272, 273, 274, 275, 276, 278, 279, 280, 281, 288, 291, 298, 299, 316, 320, 356, 361, 413, 419, 420, 422, 425, 434, 446, 447, 455, 472, 476, 478, 479, 481, 482, 483, 489, 496, 504, 515, 521, 530, 536, 539, 540, 541, 546, 547, 562, 563, 567, 570, 573, 574, 578, 580, 584, 586, 593, 595, 604, 612, 625, 626, 652, 660, 661, 662, 671, 672, 674, 687, 690, 695, 696, 697, 698, 699, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 724, 727, 734, 735, 736, 738, 739, 756, 780, 782, 786, 787, 788, 790, 795, 799, 808, 809, 810, 811, 814, 816, 818, 847, 852, 867, 869, 870, 873, 888], "activ": [1, 4, 5, 8, 11, 12, 16, 18, 19, 21, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 82, 83, 86, 87, 88, 89, 91, 92, 93, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 112, 113, 114, 116, 117, 119, 120, 121, 122, 124, 130, 132, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 158, 159, 162, 166, 167, 168, 172, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 189, 191, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 216, 217, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 241, 245, 258, 260, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 298, 299, 326, 350, 439, 442, 447, 454, 456, 460, 476, 478, 479, 480, 481, 482, 486, 497, 502, 515, 518, 529, 530, 531, 532, 533, 534, 541, 544, 560, 568, 579, 599, 625, 627, 629, 630, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 670, 673, 680, 683, 700, 703, 708, 710, 711, 712, 724, 734, 735, 738, 765, 775, 777, 784, 815, 820, 843, 845, 846, 847, 848, 850, 851, 854, 855, 863, 864, 867, 869, 870, 873, 876, 888], "note": [1, 4, 5, 9, 12, 13, 16, 18, 21, 26, 28, 31, 35, 40, 42, 45, 46, 47, 51, 58, 59, 60, 62, 70, 71, 72, 74, 75, 80, 82, 83, 90, 93, 94, 95, 99, 101, 104, 107, 109, 112, 113, 114, 115, 119, 121, 127, 129, 132, 135, 136, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 156, 158, 160, 162, 166, 167, 168, 169, 170, 171, 172, 176, 177, 180, 181, 182, 183, 184, 185, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 216, 217, 218, 222, 223, 224, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 245, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 289, 294, 298, 299, 301, 303, 305, 306, 307, 308, 309, 311, 312, 314, 315, 316, 319, 320, 321, 322, 323, 324, 330, 331, 332, 334, 336, 337, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 360, 361, 362, 363, 366, 367, 369, 371, 374, 375, 382, 388, 389, 390, 391, 392, 394, 405, 406, 412, 413, 415, 416, 417, 419, 420, 421, 422, 423, 425, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 463, 464, 466, 469, 470, 471, 472, 474, 475, 480, 481, 482, 483, 489, 493, 494, 496, 497, 498, 502, 504, 505, 506, 508, 510, 511, 515, 517, 518, 519, 520, 522, 524, 525, 526, 528, 530, 531, 532, 533, 534, 536, 537, 538, 541, 543, 545, 546, 547, 549, 550, 562, 563, 564, 565, 566, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 587, 591, 595, 596, 601, 602, 603, 604, 605, 609, 610, 613, 615, 617, 618, 619, 621, 622, 625, 626, 627, 629, 630, 632, 635, 641, 643, 644, 646, 647, 649, 652, 654, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 676, 677, 685, 688, 689, 690, 691, 694, 695, 696, 697, 698, 699, 701, 703, 708, 709, 710, 711, 712, 716, 717, 718, 719, 720, 721, 722, 724, 726, 727, 730, 734, 735, 736, 738, 739, 740, 741, 743, 744, 745, 746, 750, 751, 754, 756, 757, 759, 771, 772, 773, 774, 775, 777, 779, 780, 781, 783, 784, 786, 787, 788, 789, 790, 792, 793, 795, 796, 797, 799, 801, 802, 803, 804, 805, 807, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 820, 821, 822, 825, 826, 829, 833, 834, 835, 836, 837, 838, 843, 845, 847, 848, 854, 863, 867, 869, 870, 872, 888], "pick_channel": [1, 4, 5, 9, 12, 28, 42, 45, 46, 62, 70, 71, 72, 73, 74, 80, 86, 90, 93, 94, 95, 99, 100, 101, 107, 112, 113, 114, 115, 121, 127, 132, 135, 136, 140, 141, 143, 144, 146, 149, 150, 151, 152, 162, 166, 169, 170, 172, 177, 180, 182, 183, 184, 185, 191, 196, 199, 200, 204, 205, 207, 211, 212, 213, 216, 223, 224, 228, 229, 230, 231, 232, 235, 237, 240, 241, 262, 265, 266, 267, 268, 269, 481, 482, 557, 708, 709, 710, 711, 712, 878, 888], "legaci": [1, 4, 5, 9, 12, 16, 18, 21, 28, 31, 35, 40, 42, 45, 46, 51, 58, 59, 60, 62, 70, 71, 72, 74, 80, 82, 83, 90, 93, 94, 95, 99, 101, 107, 112, 113, 114, 115, 119, 121, 127, 132, 135, 136, 140, 141, 142, 143, 144, 146, 149, 150, 151, 152, 162, 166, 168, 172, 176, 177, 180, 181, 182, 183, 184, 185, 191, 192, 196, 199, 200, 203, 204, 205, 206, 207, 211, 212, 213, 216, 219, 223, 224, 228, 229, 230, 231, 232, 235, 237, 241, 265, 266, 267, 268, 481, 482, 708, 710, 711, 712, 788, 810, 888], "new": [1, 4, 5, 8, 9, 12, 14, 16, 18, 19, 21, 27, 28, 31, 35, 40, 42, 45, 46, 51, 58, 59, 60, 62, 70, 71, 72, 74, 80, 81, 82, 83, 90, 93, 94, 95, 99, 101, 107, 112, 113, 114, 115, 119, 121, 127, 132, 135, 136, 137, 140, 141, 142, 143, 145, 146, 149, 150, 151, 152, 161, 162, 165, 166, 168, 172, 175, 176, 177, 180, 181, 182, 183, 184, 185, 191, 192, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 216, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 237, 240, 241, 245, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 285, 286, 288, 289, 294, 298, 299, 301, 303, 304, 306, 307, 308, 309, 310, 311, 314, 315, 316, 318, 319, 320, 323, 324, 325, 326, 330, 332, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 371, 372, 373, 374, 382, 389, 391, 392, 405, 406, 412, 413, 415, 417, 419, 420, 424, 425, 432, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 460, 461, 463, 466, 470, 471, 472, 475, 476, 478, 479, 480, 481, 482, 489, 492, 493, 494, 496, 497, 498, 502, 505, 510, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 526, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 543, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 562, 563, 564, 565, 566, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 580, 581, 584, 585, 591, 594, 595, 596, 603, 605, 609, 610, 615, 619, 621, 622, 626, 627, 630, 638, 640, 641, 642, 643, 644, 646, 649, 652, 657, 659, 660, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 677, 685, 689, 691, 701, 702, 703, 707, 708, 709, 710, 711, 712, 720, 722, 725, 726, 727, 730, 735, 736, 738, 739, 740, 741, 743, 744, 745, 746, 753, 756, 757, 759, 764, 765, 769, 772, 773, 774, 775, 777, 779, 780, 782, 783, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816, 818, 819, 820, 822, 825, 829, 832, 833, 834, 838, 839, 841, 843, 845, 846, 849, 851, 852, 853, 855, 858, 863, 864, 867, 868, 869, 870, 871, 873, 875, 876], "should": [1, 4, 5, 9, 12, 16, 18, 19, 21, 28, 31, 35, 40, 41, 42, 45, 46, 51, 58, 59, 60, 62, 64, 70, 71, 72, 74, 80, 82, 83, 88, 90, 93, 94, 95, 99, 101, 107, 112, 113, 114, 115, 119, 120, 121, 127, 132, 133, 135, 136, 140, 141, 142, 143, 144, 146, 149, 150, 151, 152, 156, 157, 158, 160, 161, 165, 166, 167, 168, 172, 176, 177, 180, 181, 182, 183, 184, 185, 190, 191, 192, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 228, 229, 230, 231, 232, 235, 237, 240, 241, 242, 245, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 305, 306, 307, 308, 309, 310, 311, 314, 316, 318, 319, 330, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 418, 419, 420, 423, 424, 425, 426, 429, 430, 432, 434, 438, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 463, 464, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 517, 518, 519, 520, 521, 522, 524, 525, 526, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 554, 555, 556, 559, 562, 563, 565, 566, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 586, 588, 589, 590, 591, 592, 593, 595, 596, 598, 599, 602, 603, 604, 605, 607, 608, 609, 610, 613, 614, 615, 616, 617, 618, 619, 621, 622, 623, 625, 626, 627, 629, 630, 631, 632, 633, 635, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 652, 656, 657, 658, 659, 660, 661, 662, 664, 665, 666, 667, 668, 670, 672, 673, 674, 676, 678, 679, 680, 681, 682, 683, 684, 685, 690, 695, 696, 697, 698, 699, 703, 704, 705, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 725, 726, 727, 730, 731, 735, 736, 738, 739, 740, 741, 743, 744, 745, 746, 751, 752, 755, 756, 758, 760, 764, 772, 773, 774, 775, 779, 780, 781, 783, 784, 786, 787, 788, 789, 790, 791, 792, 795, 796, 799, 800, 801, 802, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 825, 826, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 845, 846, 847, 850, 851, 852, 853, 858, 863, 864, 869, 870, 873, 876, 888], "inst": [1, 4, 5, 9, 12, 16, 18, 21, 28, 31, 35, 40, 42, 45, 46, 51, 58, 59, 60, 62, 70, 71, 72, 74, 80, 82, 83, 90, 93, 94, 95, 99, 101, 107, 112, 113, 114, 115, 119, 121, 127, 132, 135, 136, 140, 141, 143, 144, 146, 149, 150, 151, 152, 162, 166, 168, 172, 176, 177, 180, 181, 182, 183, 184, 185, 191, 192, 196, 199, 200, 203, 204, 205, 206, 207, 211, 212, 213, 216, 223, 224, 228, 229, 230, 231, 232, 235, 237, 240, 241, 257, 259, 263, 264, 265, 266, 267, 268, 270, 272, 273, 275, 276, 279, 280, 281, 282, 314, 316, 360, 413, 414, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 472, 481, 482, 562, 563, 564, 571, 572, 577, 582, 583, 587, 594, 610, 649, 652, 662, 693, 708, 710, 711, 712, 738, 739, 740, 799, 800, 801, 803, 810, 888], "projector": [1, 2, 4, 5, 8, 9, 16, 18, 21, 28, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 60, 69, 70, 72, 74, 77, 83, 90, 92, 93, 94, 99, 101, 103, 109, 119, 121, 127, 132, 140, 141, 146, 149, 150, 151, 152, 162, 165, 166, 167, 168, 169, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 196, 199, 200, 203, 204, 205, 211, 212, 214, 215, 216, 223, 224, 228, 229, 230, 231, 232, 235, 237, 257, 265, 266, 267, 268, 270, 274, 275, 298, 299, 356, 357, 358, 359, 360, 361, 371, 372, 373, 413, 420, 443, 444, 445, 446, 456, 457, 476, 478, 479, 481, 482, 502, 541, 563, 575, 576, 577, 595, 625, 633, 652, 709, 713, 714, 715, 716, 717, 718, 719, 786, 796, 803, 807, 808, 809, 828, 843, 863, 865, 867, 870, 888], "n_channel": [1, 16, 18, 19, 28, 31, 35, 42, 51, 58, 59, 60, 64, 66, 68, 70, 71, 72, 75, 76, 77, 81, 83, 84, 90, 99, 103, 114, 119, 127, 132, 140, 141, 142, 143, 149, 150, 151, 159, 162, 166, 167, 168, 172, 176, 177, 180, 181, 182, 190, 196, 199, 200, 203, 204, 205, 206, 207, 208, 211, 216, 219, 222, 224, 229, 230, 231, 232, 235, 237, 242, 257, 260, 262, 264, 265, 266, 267, 268, 269, 270, 298, 299, 315, 316, 320, 331, 371, 413, 414, 415, 418, 419, 420, 421, 422, 424, 426, 427, 429, 451, 452, 481, 482, 562, 563, 564, 568, 571, 676, 693, 694, 708, 709, 710, 711, 712, 713, 714, 715, 735, 736, 737, 773, 776, 780, 786, 787, 788, 795, 809, 811, 816, 818, 826, 843, 888], "No": [1, 2, 4, 5, 8, 9, 12, 16, 18, 21, 34, 41, 46, 48, 50, 54, 55, 75, 80, 83, 88, 90, 101, 108, 109, 112, 113, 114, 116, 117, 121, 127, 128, 135, 136, 137, 140, 141, 142, 143, 146, 149, 151, 156, 166, 171, 172, 178, 184, 185, 190, 191, 196, 199, 202, 204, 205, 207, 210, 211, 212, 222, 224, 227, 228, 232, 241, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 389, 414, 429, 476, 478, 479, 481, 482, 530, 532, 533, 534, 672, 810, 846, 847, 864, 869, 873], "gradiomet": [1, 22, 32, 34, 35, 46, 59, 72, 74, 77, 80, 82, 87, 93, 100, 103, 108, 109, 110, 111, 113, 117, 119, 120, 142, 145, 146, 150, 162, 166, 167, 168, 169, 180, 183, 184, 188, 191, 199, 200, 201, 203, 205, 206, 207, 209, 210, 216, 217, 218, 219, 222, 224, 227, 229, 230, 231, 241, 257, 260, 262, 265, 266, 267, 268, 272, 273, 274, 276, 279, 280, 281, 298, 299, 356, 357, 358, 359, 360, 361, 371, 372, 373, 413, 420, 434, 456, 457, 476, 478, 479, 481, 482, 518, 541, 560, 561, 562, 563, 573, 574, 575, 576, 578, 579, 580, 581, 584, 595, 606, 694, 708, 710, 711, 712, 773, 779, 780, 786, 787, 788, 790, 792, 794, 795, 796, 799, 808, 809, 811, 816, 817, 818, 843, 863, 867, 870, 873, 888], "forc": [1, 4, 146, 161, 166, 171, 178, 191, 201, 257, 265, 266, 267, 268, 310, 321, 366, 377, 379, 380, 381, 382, 384, 385, 386, 388, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 481, 482, 506, 530, 621, 708, 710, 711, 712, 756, 845, 847, 864, 888], "n_grad": [1, 191, 207, 257, 357, 358, 359, 575, 576], "n_eeg": [1, 146, 191, 207, 257, 357, 358, 359, 575, 576], "axial": [1, 33, 47, 82, 84, 92, 109, 111, 131, 135, 142, 146, 160, 172, 180, 183, 191, 199, 206, 207, 227, 263, 280, 281, 756, 774, 784, 870], "100": [1, 2, 5, 10, 11, 13, 16, 19, 22, 29, 30, 31, 33, 34, 35, 38, 39, 40, 41, 44, 45, 48, 50, 51, 53, 54, 55, 57, 58, 59, 60, 61, 75, 76, 79, 81, 83, 86, 87, 90, 92, 95, 96, 101, 103, 104, 108, 109, 111, 112, 114, 115, 116, 119, 120, 123, 125, 127, 135, 136, 137, 140, 141, 143, 144, 145, 146, 149, 151, 156, 158, 169, 170, 172, 176, 177, 178, 179, 180, 181, 183, 184, 190, 191, 195, 196, 201, 202, 203, 205, 207, 209, 212, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 245, 257, 265, 266, 267, 268, 275, 362, 434, 453, 478, 479, 481, 482, 505, 574, 584, 590, 595, 674, 694, 710, 712, 737, 740, 746, 756, 786, 804, 809, 864, 869, 873, 888], "pca": [1, 5, 11, 13, 15, 16, 17, 18, 20, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 65, 69, 70, 72, 73, 74, 75, 77, 79, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 116, 117, 118, 119, 120, 121, 123, 124, 127, 129, 131, 132, 133, 140, 141, 142, 146, 149, 150, 151, 152, 156, 157, 158, 160, 162, 166, 167, 168, 169, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 216, 217, 218, 219, 223, 224, 229, 230, 231, 232, 235, 237, 265, 267, 268, 270, 273, 279, 281, 298, 299, 356, 371, 375, 427, 476, 479, 481, 536, 537, 546, 547, 560, 563, 622, 800, 863, 874, 888], "01": [1, 6, 8, 11, 12, 13, 19, 21, 24, 32, 33, 34, 35, 46, 59, 68, 72, 74, 77, 79, 83, 84, 90, 91, 92, 93, 103, 108, 109, 111, 112, 113, 120, 121, 123, 124, 127, 130, 131, 137, 139, 141, 142, 146, 150, 151, 154, 158, 159, 164, 166, 167, 168, 169, 170, 172, 174, 180, 181, 183, 185, 187, 191, 194, 195, 196, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 224, 226, 227, 228, 229, 231, 232, 234, 235, 236, 237, 241, 242, 244, 245, 256, 257, 259, 265, 266, 343, 345, 349, 382, 405, 406, 421, 481, 482, 492, 578, 584, 587, 593, 600, 604, 703, 864], "02": [1, 2, 5, 11, 13, 19, 20, 33, 34, 35, 56, 64, 67, 68, 82, 84, 85, 92, 103, 108, 109, 111, 114, 120, 123, 126, 130, 131, 136, 139, 142, 146, 148, 150, 157, 160, 164, 170, 172, 174, 180, 183, 195, 196, 202, 206, 207, 208, 209, 211, 213, 218, 227, 228, 229, 231, 232, 234, 237, 242, 245, 256, 257, 265, 266, 323, 476, 479, 481, 482, 492, 724, 734, 735, 737, 738, 740], "creat": [1, 2, 4, 5, 8, 9, 11, 15, 16, 18, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 62, 64, 66, 68, 69, 70, 71, 72, 74, 76, 80, 83, 86, 88, 92, 93, 95, 103, 104, 107, 108, 109, 110, 112, 113, 114, 117, 120, 121, 123, 125, 127, 128, 132, 134, 135, 136, 141, 142, 145, 146, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 192, 196, 199, 200, 201, 202, 203, 205, 206, 213, 216, 219, 224, 225, 226, 228, 230, 232, 235, 237, 240, 241, 259, 260, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 284, 289, 298, 299, 304, 309, 310, 311, 314, 328, 356, 357, 358, 362, 367, 374, 375, 413, 420, 426, 430, 435, 437, 448, 449, 454, 481, 482, 493, 498, 500, 505, 518, 519, 520, 523, 525, 526, 529, 552, 562, 563, 565, 566, 568, 572, 575, 576, 580, 581, 585, 591, 619, 621, 645, 646, 647, 649, 652, 657, 658, 662, 685, 688, 694, 703, 708, 709, 710, 711, 712, 721, 724, 727, 733, 734, 735, 736, 738, 739, 743, 756, 759, 761, 764, 769, 772, 773, 779, 780, 782, 784, 787, 788, 791, 792, 793, 794, 795, 799, 801, 804, 806, 807, 808, 809, 810, 811, 812, 814, 816, 818, 819, 827, 828, 838, 843, 845, 851, 855, 864, 868, 873, 876, 878, 888], "an": [1, 4, 5, 7, 11, 12, 15, 18, 19, 21, 26, 27, 28, 29, 30, 31, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 54, 55, 56, 58, 59, 60, 61, 62, 64, 68, 69, 70, 72, 74, 75, 79, 82, 83, 84, 88, 90, 92, 93, 94, 95, 101, 104, 107, 108, 109, 110, 111, 112, 114, 115, 119, 120, 121, 122, 127, 128, 129, 130, 132, 135, 136, 137, 140, 141, 144, 146, 149, 150, 151, 152, 153, 155, 156, 158, 160, 162, 163, 164, 165, 166, 167, 170, 171, 175, 176, 177, 178, 179, 181, 183, 186, 187, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 206, 207, 209, 210, 211, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 231, 232, 235, 236, 237, 240, 241, 243, 244, 245, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 289, 290, 292, 294, 298, 299, 301, 303, 304, 305, 306, 314, 316, 318, 319, 320, 323, 327, 330, 332, 341, 349, 350, 351, 356, 360, 362, 363, 365, 367, 371, 372, 374, 375, 388, 391, 392, 396, 412, 413, 419, 420, 421, 425, 428, 430, 431, 432, 435, 437, 438, 440, 442, 447, 448, 449, 452, 453, 454, 455, 456, 460, 461, 463, 468, 472, 476, 478, 479, 480, 481, 482, 483, 486, 488, 490, 491, 496, 497, 498, 499, 500, 502, 506, 508, 509, 514, 515, 517, 518, 521, 524, 525, 526, 529, 530, 532, 536, 537, 539, 540, 541, 543, 544, 545, 548, 550, 552, 559, 560, 562, 563, 564, 565, 566, 567, 571, 573, 575, 576, 578, 580, 581, 584, 586, 590, 593, 594, 595, 596, 602, 605, 608, 613, 614, 615, 616, 617, 620, 622, 624, 625, 627, 635, 637, 641, 642, 644, 646, 647, 649, 652, 656, 657, 658, 661, 664, 668, 673, 674, 680, 683, 685, 688, 689, 694, 695, 696, 697, 698, 699, 700, 702, 703, 704, 708, 709, 710, 711, 712, 713, 714, 715, 716, 721, 724, 727, 728, 734, 738, 739, 742, 743, 746, 748, 754, 756, 757, 765, 769, 771, 772, 773, 777, 778, 780, 782, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 803, 804, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 822, 824, 826, 834, 835, 836, 843, 845, 846, 847, 851, 852, 853, 854, 859, 864, 865, 866, 867, 869, 870, 871, 873, 874, 876, 888], "oper": [1, 5, 11, 15, 18, 22, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 69, 70, 72, 74, 84, 88, 90, 92, 93, 95, 104, 107, 108, 109, 110, 121, 124, 132, 140, 141, 142, 145, 146, 149, 151, 152, 155, 156, 162, 163, 164, 165, 166, 167, 169, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 188, 191, 196, 200, 201, 202, 203, 205, 206, 207, 210, 216, 223, 224, 229, 230, 232, 235, 237, 245, 258, 259, 262, 265, 266, 267, 268, 269, 270, 271, 275, 276, 278, 279, 283, 285, 286, 298, 299, 301, 303, 304, 314, 318, 319, 330, 336, 349, 355, 375, 376, 383, 391, 414, 419, 422, 429, 434, 435, 438, 451, 452, 453, 454, 458, 459, 460, 476, 477, 478, 479, 481, 482, 483, 489, 496, 500, 515, 524, 525, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 556, 561, 563, 566, 568, 587, 593, 609, 612, 614, 622, 627, 637, 648, 649, 660, 661, 662, 669, 671, 672, 673, 674, 687, 695, 696, 697, 698, 699, 702, 705, 708, 709, 735, 736, 737, 738, 739, 740, 742, 772, 813, 821, 824, 825, 835, 843, 845, 847, 853, 855, 864, 867, 873, 874, 886, 888], "subspac": [1, 11, 15, 18, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 62, 69, 70, 72, 74, 88, 90, 92, 93, 94, 95, 104, 107, 108, 109, 110, 121, 132, 140, 141, 142, 145, 146, 149, 151, 152, 162, 166, 172, 176, 177, 178, 179, 180, 181, 182, 183, 191, 200, 201, 203, 205, 206, 207, 210, 223, 232, 235, 237, 257, 579, 595, 843], "dimens": [1, 11, 15, 18, 19, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 62, 69, 70, 72, 74, 88, 90, 92, 93, 94, 95, 104, 107, 108, 109, 110, 121, 127, 132, 140, 141, 142, 145, 146, 149, 151, 152, 160, 162, 166, 172, 176, 177, 178, 179, 180, 181, 182, 183, 191, 195, 196, 200, 201, 203, 205, 206, 207, 209, 223, 224, 227, 229, 230, 231, 232, 235, 236, 237, 241, 242, 245, 262, 265, 266, 267, 268, 272, 273, 274, 275, 276, 278, 279, 280, 281, 288, 315, 362, 413, 416, 419, 420, 423, 424, 426, 428, 452, 453, 476, 478, 479, 481, 482, 536, 537, 539, 540, 546, 547, 562, 563, 578, 688, 689, 693, 695, 696, 698, 699, 708, 710, 711, 712, 726, 727, 737, 746, 756, 765, 773, 788, 795, 799, 808, 809, 811, 816, 818, 843, 863, 870, 873, 888], "fran\u00e7oi": [1, 72, 79, 109, 183, 184, 191, 200, 245, 563, 572, 870], "tadel": [1, 109, 183, 184, 191, 245], "sylvain": [1, 109, 183, 184, 191, 245], "baillet": [1, 109, 183, 184, 191, 245], "john": [1, 18, 19, 51, 69, 83, 109, 126, 178, 180, 183, 184, 191, 245, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 301, 390, 391, 417, 419, 431, 476, 481, 482, 530, 541, 563, 579, 599, 665, 670, 708, 711, 864, 870, 888], "c": [1, 4, 10, 11, 12, 19, 22, 44, 51, 71, 75, 96, 109, 112, 115, 121, 126, 137, 161, 171, 176, 180, 183, 184, 188, 191, 195, 196, 206, 212, 229, 230, 231, 232, 242, 245, 257, 258, 271, 276, 277, 278, 301, 337, 340, 356, 362, 390, 405, 406, 419, 420, 454, 457, 476, 481, 482, 519, 525, 538, 563, 571, 577, 604, 622, 668, 673, 737, 740, 756, 845, 846, 847, 851, 852, 854, 859, 862, 863, 864, 870, 871, 873, 876, 877, 888], "mosher": [1, 51, 109, 180, 183, 184, 191, 245, 301, 870], "dimitrio": [1, 10, 109, 183, 184, 191, 245, 864], "pantazi": [1, 10, 109, 183, 184, 191, 245, 864], "richard": [1, 51, 109, 183, 184, 191, 209, 241, 245, 301, 391, 563, 571, 690, 864, 870, 875, 888], "leahi": [1, 51, 109, 183, 184, 191, 245, 301, 870], "user": [1, 45, 76, 94, 109, 142, 156, 165, 167, 171, 172, 183, 184, 189, 190, 191, 201, 202, 216, 245, 258, 260, 265, 266, 267, 268, 269, 270, 272, 273, 276, 278, 279, 280, 281, 379, 380, 381, 382, 384, 385, 386, 388, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 434, 442, 473, 480, 481, 482, 498, 563, 584, 602, 653, 706, 707, 708, 711, 773, 786, 793, 803, 809, 818, 845, 847, 849, 851, 852, 854, 858, 863, 864, 866, 867, 869, 871, 872, 888], "friendli": [1, 109, 183, 184, 191, 245], "applic": [1, 15, 71, 74, 88, 109, 149, 162, 170, 178, 183, 184, 191, 192, 196, 202, 205, 206, 207, 210, 242, 245, 260, 265, 266, 267, 268, 415, 420, 424, 437, 449, 451, 452, 465, 481, 482, 506, 521, 522, 564, 592, 595, 618, 621, 710, 712, 756, 788, 809, 847, 850, 854, 859, 867, 870, 888], "analysi": [1, 3, 6, 8, 13, 15, 17, 20, 42, 43, 44, 71, 75, 83, 88, 96, 97, 101, 109, 127, 140, 142, 144, 145, 153, 154, 155, 160, 161, 167, 168, 171, 172, 173, 174, 178, 183, 184, 188, 190, 191, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 216, 217, 219, 224, 227, 228, 229, 231, 232, 240, 244, 245, 265, 266, 267, 268, 270, 272, 273, 275, 276, 277, 279, 280, 281, 298, 299, 314, 316, 330, 355, 356, 362, 365, 375, 404, 406, 413, 421, 427, 437, 442, 454, 470, 476, 481, 482, 491, 502, 523, 529, 530, 544, 554, 560, 563, 564, 571, 578, 591, 593, 622, 657, 661, 668, 689, 690, 693, 695, 708, 710, 711, 712, 720, 722, 724, 726, 734, 735, 736, 737, 738, 739, 740, 756, 780, 789, 818, 828, 843, 846, 848, 850, 854, 859, 862, 863, 864, 869, 870, 871, 876, 878, 885, 886, 888], "intellig": [1, 109, 183, 184, 191, 195, 245, 419, 453], "neurosci": [1, 4, 10, 16, 19, 43, 71, 75, 109, 113, 151, 183, 184, 191, 195, 196, 202, 232, 245, 277, 362, 414, 419, 429, 563, 568, 571, 668, 695, 696, 698, 699, 724, 734, 735, 737, 738, 740, 862, 864, 869], "2011": [1, 15, 21, 32, 34, 59, 88, 109, 151, 169, 183, 184, 189, 191, 202, 224, 227, 245, 298, 421, 479, 530, 564, 701, 702, 870], "13": [1, 9, 10, 11, 12, 13, 16, 19, 21, 26, 28, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 58, 59, 60, 68, 71, 75, 77, 80, 81, 83, 84, 93, 94, 96, 97, 100, 101, 102, 103, 104, 107, 108, 109, 110, 112, 113, 114, 117, 120, 121, 124, 132, 133, 134, 136, 142, 144, 145, 146, 149, 150, 152, 158, 162, 166, 169, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 196, 201, 202, 204, 205, 207, 209, 211, 216, 222, 224, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 241, 242, 245, 260, 263, 264, 265, 266, 267, 268, 271, 272, 273, 276, 278, 279, 280, 281, 283, 337, 361, 382, 405, 424, 434, 448, 449, 451, 452, 454, 481, 482, 563, 580, 581, 595, 622, 638, 641, 671, 674, 708, 711, 738, 739, 790, 801, 812, 841, 843, 852, 862, 863, 870], "doi": [1, 4, 8, 10, 12, 13, 15, 16, 18, 19, 21, 33, 35, 40, 42, 43, 44, 46, 51, 54, 55, 58, 59, 60, 66, 71, 72, 75, 76, 79, 83, 84, 88, 94, 101, 109, 112, 113, 117, 119, 121, 126, 129, 137, 141, 144, 151, 155, 157, 162, 176, 178, 180, 183, 184, 191, 195, 196, 200, 202, 204, 205, 206, 207, 208, 210, 212, 224, 227, 228, 232, 240, 245, 265, 266, 267, 268, 271, 276, 277, 291, 298, 299, 301, 303, 356, 362, 382, 390, 391, 395, 396, 405, 406, 413, 414, 417, 419, 420, 421, 429, 431, 437, 476, 478, 479, 481, 482, 530, 531, 541, 545, 562, 563, 564, 568, 571, 572, 574, 577, 578, 579, 595, 599, 602, 603, 610, 652, 661, 665, 668, 670, 673, 692, 694, 695, 696, 697, 698, 699, 701, 702, 710, 712, 720, 722, 724, 726, 727, 734, 735, 737, 738, 740, 773, 862, 863, 864, 867, 870], "10": [1, 4, 5, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 28, 30, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 64, 66, 67, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 88, 90, 91, 92, 93, 94, 95, 101, 103, 104, 108, 109, 110, 112, 113, 114, 115, 117, 119, 120, 121, 124, 126, 127, 128, 129, 130, 135, 136, 137, 140, 141, 142, 144, 145, 146, 148, 151, 154, 155, 156, 157, 158, 159, 160, 162, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 191, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 231, 232, 234, 235, 236, 237, 240, 241, 242, 245, 259, 263, 264, 265, 266, 267, 268, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 283, 291, 298, 299, 301, 303, 311, 314, 326, 332, 337, 342, 346, 349, 352, 353, 354, 356, 362, 367, 382, 390, 391, 395, 396, 405, 406, 413, 414, 415, 417, 419, 420, 421, 424, 429, 431, 434, 437, 448, 449, 451, 452, 457, 476, 478, 479, 481, 482, 506, 519, 520, 530, 531, 541, 545, 550, 562, 563, 564, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 584, 585, 586, 589, 591, 595, 599, 602, 603, 610, 621, 643, 652, 661, 665, 668, 670, 672, 673, 674, 689, 691, 692, 694, 695, 696, 697, 698, 699, 701, 702, 708, 710, 711, 712, 720, 722, 724, 726, 727, 734, 735, 736, 737, 738, 739, 740, 746, 756, 761, 771, 773, 786, 788, 795, 797, 798, 803, 804, 809, 814, 819, 846, 847, 850, 853, 862, 863, 864, 867, 870, 873, 876], "1155": [1, 109, 183, 184, 191, 209, 245], "879716": [1, 109, 183, 184, 191, 245], "total": [1, 2, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 190, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 239, 240, 241, 242, 244, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 360, 376, 430, 481, 482, 565, 612, 703, 710, 712, 788, 814, 819, 870, 873, 888], "run": [1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 257, 265, 266, 267, 268, 271, 272, 273, 275, 276, 279, 280, 281, 283, 305, 323, 349, 356, 357, 359, 361, 377, 382, 415, 416, 419, 423, 424, 426, 429, 430, 451, 452, 453, 456, 469, 471, 481, 482, 515, 521, 524, 525, 536, 537, 546, 547, 563, 568, 575, 576, 578, 584, 585, 588, 593, 596, 612, 647, 656, 659, 660, 661, 662, 671, 672, 673, 674, 695, 696, 697, 698, 699, 710, 712, 713, 714, 715, 716, 717, 718, 726, 727, 735, 736, 737, 738, 739, 740, 756, 779, 786, 788, 791, 795, 798, 799, 803, 809, 810, 845, 846, 850, 851, 852, 853, 855, 864, 869, 870, 871, 874, 888], "script": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 275, 481, 482, 809, 847, 848, 850, 852, 853, 854, 864, 867, 868, 870, 873, 876, 878, 888], "minut": [1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 265, 266, 277, 283, 436, 481, 482, 563, 660, 661, 803, 809, 851], "9": [1, 2, 4, 5, 6, 7, 8, 9, 11, 13, 16, 19, 20, 21, 22, 24, 25, 26, 28, 29, 32, 33, 34, 35, 37, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 59, 62, 65, 67, 69, 70, 71, 72, 74, 77, 79, 80, 81, 83, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 119, 120, 124, 126, 127, 128, 130, 132, 135, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 154, 156, 158, 159, 162, 164, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 191, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 240, 241, 242, 244, 245, 263, 265, 266, 267, 268, 272, 277, 278, 280, 281, 298, 299, 301, 314, 323, 337, 355, 356, 362, 363, 382, 406, 456, 466, 481, 482, 502, 518, 526, 538, 546, 562, 563, 571, 593, 610, 621, 649, 652, 690, 708, 710, 711, 712, 720, 730, 739, 740, 741, 756, 757, 759, 773, 783, 784, 789, 808, 813, 845, 846, 852, 853, 863, 864, 867, 870, 873], "839": [1, 6, 209, 232, 870], "second": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 245, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 279, 280, 281, 285, 286, 288, 297, 298, 299, 324, 325, 343, 345, 361, 413, 419, 420, 425, 437, 439, 442, 447, 448, 450, 454, 455, 479, 480, 481, 482, 500, 502, 505, 517, 522, 523, 533, 536, 562, 563, 565, 566, 567, 568, 571, 573, 575, 576, 580, 584, 585, 586, 587, 588, 595, 603, 609, 613, 622, 625, 658, 674, 694, 695, 696, 698, 699, 700, 702, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 736, 739, 756, 764, 780, 787, 788, 789, 792, 795, 799, 800, 801, 803, 808, 809, 810, 811, 814, 816, 819, 833, 843, 847, 853, 863, 864, 867, 870, 873, 888], "estim": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 183, 184, 185, 186, 188, 189, 190, 191, 192, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 245, 246, 257, 260, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 285, 286, 290, 291, 292, 293, 295, 296, 298, 299, 314, 322, 330, 343, 345, 349, 356, 360, 361, 362, 367, 368, 369, 371, 372, 373, 375, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 434, 447, 448, 450, 452, 453, 454, 456, 457, 460, 476, 477, 478, 479, 481, 482, 486, 515, 517, 518, 524, 526, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 544, 545, 546, 547, 550, 563, 564, 568, 572, 573, 580, 585, 588, 593, 595, 607, 609, 610, 625, 627, 630, 635, 636, 637, 647, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 673, 675, 689, 693, 694, 700, 701, 703, 704, 710, 712, 713, 714, 715, 716, 717, 718, 727, 735, 736, 738, 739, 756, 772, 773, 779, 780, 781, 788, 796, 803, 810, 813, 814, 815, 818, 819, 820, 843, 848, 854, 856, 864, 867, 873, 876, 878, 886, 888], "usag": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 257, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 422, 426, 481, 482, 595, 695, 696, 698, 699, 708, 710, 711, 712, 714, 717, 733, 735, 736, 737, 738, 739, 740, 843, 866, 867, 870, 873, 888], "488": [1, 6, 50, 167, 227, 232], "mb": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 239, 240, 241, 242, 244, 265, 266, 275, 481, 482, 786, 809, 853], "python": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 156, 157, 158, 159, 162, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 195, 196, 197, 199, 201, 203, 204, 207, 208, 209, 211, 212, 214, 215, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 245, 256, 259, 263, 264, 265, 266, 267, 268, 270, 272, 273, 275, 276, 278, 279, 280, 281, 298, 299, 316, 319, 325, 330, 331, 334, 340, 355, 367, 375, 378, 379, 380, 381, 382, 384, 385, 386, 388, 389, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 432, 438, 442, 446, 454, 461, 462, 463, 465, 472, 481, 482, 496, 500, 502, 506, 520, 523, 529, 530, 544, 557, 563, 580, 584, 615, 644, 646, 651, 653, 707, 708, 710, 711, 712, 724, 727, 734, 735, 736, 738, 739, 751, 752, 780, 786, 789, 803, 809, 817, 836, 838, 843, 846, 854, 858, 863, 864, 868, 869, 870, 871, 874, 875, 886, 888], "brainstorm_data": [1, 6], "py": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 239, 240, 241, 242, 244, 845, 847, 867, 888], "jupyt": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 821, 867, 869, 871, 888], "notebook": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 821, 827, 851, 867, 871, 876, 888], "ipynb": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242], "galleri": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 847], "gener": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 94, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 191, 192, 195, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 216, 217, 218, 219, 222, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 256, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 292, 293, 296, 310, 323, 328, 329, 330, 349, 355, 356, 382, 413, 415, 416, 419, 420, 423, 424, 430, 437, 442, 447, 449, 451, 452, 454, 471, 477, 478, 481, 482, 486, 487, 498, 502, 506, 515, 518, 525, 529, 530, 532, 534, 537, 541, 544, 560, 561, 562, 563, 564, 566, 575, 577, 580, 581, 585, 587, 588, 593, 595, 612, 616, 622, 625, 627, 629, 630, 632, 633, 656, 657, 658, 660, 661, 662, 671, 672, 673, 674, 675, 688, 692, 693, 695, 696, 697, 698, 699, 704, 708, 710, 711, 712, 720, 721, 741, 753, 756, 757, 759, 769, 772, 776, 780, 787, 795, 799, 800, 810, 811, 814, 815, 824, 838, 843, 853, 854, 855, 859, 862, 863, 864, 865, 866, 868, 869, 871, 872, 873, 875, 876, 888], "sphinx": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 752, 847, 888], "thi": [2, 4, 5, 7, 9, 10, 13, 14, 16, 18, 19, 21, 22, 26, 31, 32, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 50, 54, 55, 57, 58, 59, 61, 64, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 84, 87, 88, 90, 93, 94, 95, 96, 97, 99, 101, 103, 104, 109, 112, 113, 114, 115, 116, 117, 118, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 289, 290, 292, 293, 296, 298, 299, 304, 305, 307, 308, 309, 310, 311, 314, 315, 318, 319, 320, 321, 322, 323, 326, 327, 328, 332, 333, 334, 339, 343, 344, 347, 349, 353, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 369, 371, 372, 373, 374, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 392, 393, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 462, 463, 465, 466, 469, 471, 472, 474, 475, 476, 478, 479, 480, 481, 482, 483, 487, 488, 489, 490, 492, 496, 497, 498, 501, 504, 505, 508, 510, 512, 513, 515, 517, 522, 523, 525, 529, 530, 531, 532, 533, 534, 536, 537, 539, 540, 541, 547, 549, 550, 554, 558, 560, 562, 563, 564, 565, 566, 571, 572, 573, 574, 575, 576, 578, 579, 580, 581, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 599, 602, 603, 609, 612, 613, 615, 618, 619, 620, 622, 624, 625, 629, 630, 635, 638, 644, 646, 649, 650, 652, 654, 656, 657, 660, 661, 662, 669, 671, 672, 673, 674, 675, 678, 679, 682, 685, 690, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 707, 708, 709, 710, 711, 712, 715, 726, 736, 739, 743, 746, 750, 751, 753, 754, 756, 758, 759, 761, 765, 766, 769, 771, 772, 773, 774, 777, 778, 782, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 807, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 821, 822, 825, 826, 836, 838, 843, 845, 846, 847, 850, 851, 852, 853, 854, 855, 863, 864, 865, 867, 869, 870, 871, 873, 874, 876, 878, 888], "look": [2, 4, 7, 8, 19, 21, 27, 32, 33, 42, 55, 58, 61, 68, 69, 71, 72, 83, 84, 93, 108, 111, 112, 113, 120, 121, 122, 127, 133, 135, 141, 144, 145, 150, 151, 156, 158, 160, 161, 162, 166, 168, 172, 175, 177, 178, 179, 180, 182, 183, 188, 189, 191, 192, 199, 202, 203, 204, 206, 207, 208, 210, 211, 212, 216, 224, 227, 232, 241, 242, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 301, 303, 305, 311, 379, 380, 381, 382, 384, 385, 386, 388, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 454, 461, 463, 481, 482, 511, 563, 565, 590, 613, 708, 756, 772, 775, 802, 812, 814, 819, 820, 845, 846, 847, 862, 868, 869, 870, 871, 873, 888], "high": [2, 4, 7, 10, 12, 22, 38, 40, 59, 74, 75, 82, 83, 84, 88, 94, 99, 119, 141, 142, 143, 151, 156, 157, 160, 167, 171, 188, 190, 191, 196, 199, 203, 205, 206, 207, 210, 211, 212, 229, 230, 231, 232, 236, 242, 245, 265, 266, 267, 268, 278, 283, 356, 357, 358, 359, 361, 395, 415, 424, 448, 449, 451, 472, 481, 482, 506, 530, 563, 568, 571, 575, 576, 580, 581, 585, 586, 588, 589, 595, 599, 661, 694, 756, 843, 854, 872, 888], "frequenc": [2, 5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 33, 34, 36, 42, 56, 69, 72, 73, 74, 77, 81, 82, 83, 84, 88, 90, 93, 94, 99, 103, 104, 106, 107, 108, 109, 110, 112, 115, 121, 123, 126, 127, 133, 137, 140, 141, 142, 143, 144, 146, 149, 151, 156, 167, 168, 169, 172, 180, 183, 191, 195, 196, 200, 201, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 227, 231, 235, 237, 244, 245, 257, 262, 263, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 279, 280, 281, 284, 288, 289, 290, 291, 292, 293, 298, 314, 330, 343, 344, 351, 356, 365, 375, 395, 413, 415, 418, 419, 421, 424, 425, 426, 434, 437, 439, 441, 442, 448, 449, 451, 452, 453, 454, 477, 479, 481, 482, 491, 496, 529, 530, 534, 536, 537, 541, 546, 547, 560, 563, 568, 571, 575, 576, 580, 581, 584, 585, 586, 588, 589, 595, 599, 613, 616, 625, 627, 675, 687, 694, 695, 696, 698, 699, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 751, 756, 760, 779, 782, 783, 784, 788, 789, 797, 801, 804, 810, 815, 816, 818, 843, 867, 873, 874, 878, 888], "respons": [2, 4, 8, 10, 16, 17, 19, 20, 27, 35, 46, 49, 51, 59, 60, 66, 78, 85, 88, 94, 96, 97, 107, 113, 117, 120, 121, 122, 128, 130, 135, 142, 143, 145, 149, 150, 162, 168, 180, 183, 185, 191, 196, 199, 202, 207, 231, 232, 235, 237, 242, 245, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 356, 375, 395, 419, 425, 427, 437, 439, 442, 449, 452, 481, 482, 560, 564, 610, 622, 708, 710, 711, 712, 721, 787, 794, 796, 797, 804, 843, 863, 864, 869, 870, 873, 888], "jussi": [2, 62, 245, 395, 595, 888], "nurminen": [2, 62, 245, 395, 595, 888], "jnu": [2, 62], "iki": [2, 62], "fi": [2, 10, 62, 86, 191, 480], "o": [2, 19, 44, 62, 72, 76, 83, 115, 125, 140, 159, 161, 169, 171, 172, 185, 195, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 212, 216, 217, 218, 219, 245, 257, 262, 265, 266, 267, 268, 270, 356, 374, 382, 391, 413, 420, 461, 481, 482, 562, 563, 572, 577, 651, 708, 710, 712, 773, 788, 795, 811, 816, 818, 847, 859, 864, 867, 878, 888], "hf_sef": [2, 171, 864, 878, 888], "fname_evok": [2, 11, 30, 38, 39, 41, 44, 57, 58, 61, 124, 127, 179, 181, 223], "path": [2, 19, 33, 43, 44, 45, 62, 76, 101, 115, 119, 120, 123, 125, 135, 136, 140, 144, 155, 156, 157, 158, 159, 166, 170, 171, 172, 175, 181, 182, 185, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 216, 217, 218, 219, 223, 228, 257, 259, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 289, 302, 305, 306, 309, 310, 311, 314, 315, 323, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 353, 354, 362, 367, 368, 369, 374, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 432, 434, 447, 456, 461, 462, 463, 465, 466, 469, 471, 472, 473, 474, 475, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 519, 521, 525, 544, 548, 549, 550, 552, 553, 562, 563, 573, 574, 584, 590, 591, 595, 605, 606, 607, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646, 653, 656, 657, 659, 660, 661, 671, 673, 674, 676, 677, 685, 703, 704, 706, 707, 708, 709, 710, 711, 712, 728, 729, 730, 741, 743, 745, 748, 750, 755, 756, 764, 772, 774, 784, 786, 796, 803, 809, 814, 819, 820, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 847, 850, 852, 853, 858, 888], "join": [2, 10, 19, 44, 62, 76, 135, 140, 159, 170, 171, 184, 185, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 216, 217, 218, 219, 265, 266, 267, 268, 481, 482], "subject_b": 2, "hf_sef_15min": 2, "av": [2, 11, 30, 31, 35, 38, 39, 40, 41, 44, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 62, 65, 69, 79, 86, 87, 90, 92, 95, 116, 119, 120, 124, 127, 149, 150, 172, 176, 178, 179, 181, 223, 257, 265, 266, 267, 268, 275, 481, 482, 553, 625, 634, 711, 834, 864], "fif": [2, 5, 7, 10, 11, 13, 14, 15, 16, 18, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 63, 65, 67, 69, 70, 72, 73, 74, 75, 77, 79, 80, 81, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 127, 129, 131, 132, 133, 135, 136, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 172, 176, 177, 178, 179, 180, 181, 182, 183, 189, 190, 191, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 216, 217, 218, 219, 223, 224, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 252, 259, 262, 263, 264, 265, 266, 267, 268, 270, 275, 278, 306, 314, 336, 367, 368, 369, 434, 443, 444, 445, 446, 463, 473, 481, 482, 502, 506, 521, 525, 544, 548, 563, 573, 584, 591, 595, 607, 613, 615, 616, 617, 618, 622, 625, 627, 633, 637, 640, 644, 647, 673, 676, 703, 743, 745, 756, 772, 829, 831, 832, 833, 834, 835, 836, 839, 840, 842, 847, 854, 859, 863, 864, 870, 873, 876, 888], "interest": [2, 4, 9, 16, 21, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 61, 64, 79, 82, 86, 87, 90, 95, 96, 97, 100, 101, 104, 107, 112, 113, 114, 116, 119, 120, 127, 128, 135, 137, 140, 142, 143, 144, 149, 150, 155, 160, 162, 170, 172, 176, 178, 179, 180, 181, 190, 192, 195, 196, 199, 202, 203, 206, 211, 212, 213, 217, 223, 224, 227, 228, 229, 230, 231, 241, 242, 260, 265, 266, 267, 268, 270, 290, 292, 326, 418, 421, 437, 439, 457, 465, 481, 482, 515, 536, 537, 547, 562, 563, 610, 619, 621, 657, 708, 710, 712, 713, 714, 715, 716, 717, 718, 726, 727, 735, 736, 738, 739, 756, 810, 816, 843, 847, 863, 867, 870, 888], "t": [2, 4, 5, 9, 15, 19, 21, 27, 28, 29, 30, 31, 32, 35, 38, 39, 40, 41, 42, 44, 45, 48, 50, 51, 53, 54, 55, 57, 58, 59, 60, 61, 64, 66, 71, 79, 81, 83, 84, 86, 87, 93, 94, 95, 96, 98, 101, 102, 108, 114, 115, 116, 117, 119, 120, 127, 140, 141, 143, 144, 145, 146, 149, 151, 156, 157, 158, 159, 160, 162, 165, 166, 168, 170, 171, 172, 176, 177, 178, 179, 180, 181, 183, 184, 188, 191, 195, 196, 200, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 216, 218, 223, 224, 227, 228, 229, 230, 231, 232, 237, 238, 239, 240, 241, 242, 245, 257, 260, 261, 263, 264, 265, 266, 267, 268, 270, 272, 273, 275, 276, 278, 279, 280, 281, 288, 298, 299, 343, 346, 352, 361, 362, 374, 375, 379, 380, 381, 382, 384, 385, 386, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 419, 434, 436, 448, 454, 457, 476, 479, 481, 482, 492, 493, 529, 530, 538, 544, 550, 552, 554, 560, 563, 566, 574, 575, 580, 581, 584, 586, 593, 595, 596, 604, 612, 615, 619, 621, 622, 625, 626, 629, 632, 635, 637, 654, 657, 673, 674, 680, 686, 692, 693, 694, 695, 697, 698, 700, 701, 702, 708, 709, 710, 711, 712, 724, 728, 731, 734, 735, 736, 738, 739, 746, 756, 791, 801, 843, 846, 847, 848, 853, 855, 863, 864, 869, 870, 871, 873, 888], "250": [2, 4, 13, 16, 20, 21, 46, 68, 81, 112, 117, 123, 136, 137, 141, 143, 151, 156, 166, 169, 181, 196, 199, 201, 202, 203, 207, 231, 232, 240, 245, 661, 715, 852, 888], "ctf": [2, 27, 30, 31, 35, 36, 38, 39, 40, 41, 44, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 79, 86, 87, 101, 116, 119, 120, 127, 140, 143, 149, 165, 170, 172, 176, 178, 179, 181, 186, 187, 193, 194, 227, 228, 259, 262, 263, 265, 266, 267, 268, 269, 270, 276, 304, 340, 347, 355, 357, 361, 363, 365, 366, 454, 456, 481, 482, 494, 519, 520, 525, 526, 529, 530, 539, 540, 541, 542, 545, 560, 561, 576, 595, 616, 625, 627, 633, 640, 656, 708, 710, 711, 712, 756, 772, 864, 870, 873, 888], "matric": [2, 10, 30, 31, 34, 35, 38, 39, 40, 41, 44, 47, 48, 50, 51, 54, 55, 57, 58, 59, 60, 61, 79, 86, 87, 101, 103, 116, 119, 120, 127, 140, 143, 146, 149, 156, 163, 165, 166, 172, 176, 178, 179, 181, 188, 196, 227, 228, 245, 291, 298, 356, 413, 421, 481, 482, 574, 584, 595, 607, 659, 660, 661, 673, 694, 709, 719, 747, 749, 782, 863, 870, 873, 885, 888], "nave": [2, 5, 28, 29, 30, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 51, 54, 55, 57, 58, 59, 60, 61, 69, 79, 86, 87, 90, 92, 94, 104, 107, 108, 109, 110, 114, 116, 119, 120, 127, 149, 166, 172, 176, 177, 178, 179, 181, 182, 191, 196, 222, 223, 224, 235, 237, 258, 264, 267, 268, 270, 355, 470, 531, 532, 533, 534, 536, 537, 543, 546, 547, 672, 708, 873, 888], "2790": 2, "aspect": [2, 16, 22, 30, 31, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 61, 71, 79, 86, 87, 107, 116, 119, 120, 127, 142, 149, 172, 176, 178, 179, 181, 203, 206, 229, 230, 231, 232, 759, 873, 888], "specifi": [2, 4, 5, 9, 19, 31, 38, 41, 43, 47, 64, 88, 94, 95, 101, 103, 109, 114, 120, 127, 128, 135, 140, 141, 142, 149, 150, 151, 155, 158, 166, 167, 168, 169, 170, 171, 172, 178, 184, 185, 188, 192, 196, 199, 200, 202, 203, 204, 205, 207, 208, 210, 211, 212, 216, 217, 218, 219, 228, 229, 232, 235, 241, 257, 259, 260, 262, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 289, 291, 298, 299, 304, 311, 316, 326, 332, 356, 357, 358, 359, 360, 361, 362, 371, 372, 373, 374, 379, 380, 381, 382, 384, 385, 386, 387, 390, 393, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 420, 424, 425, 429, 430, 434, 437, 439, 448, 449, 451, 452, 454, 456, 457, 465, 469, 472, 476, 478, 479, 480, 481, 482, 483, 491, 496, 497, 506, 510, 521, 524, 529, 531, 539, 540, 541, 552, 562, 563, 566, 568, 573, 574, 576, 577, 578, 582, 584, 595, 610, 613, 617, 619, 621, 626, 629, 635, 644, 647, 649, 652, 657, 658, 673, 685, 688, 694, 695, 696, 698, 699, 706, 708, 710, 711, 712, 724, 734, 738, 743, 756, 759, 771, 772, 773, 775, 780, 787, 788, 790, 794, 795, 796, 799, 801, 802, 803, 805, 808, 811, 814, 815, 816, 818, 819, 820, 821, 825, 838, 843, 847, 865, 867, 870, 873, 888], "pleas": [2, 4, 5, 75, 77, 83, 101, 109, 123, 135, 136, 137, 146, 166, 172, 184, 185, 189, 196, 199, 204, 205, 211, 212, 228, 237, 257, 265, 266, 290, 292, 334, 340, 373, 391, 440, 452, 454, 481, 482, 492, 563, 584, 596, 627, 786, 803, 809, 835, 843, 845, 847, 851, 853, 859, 862, 863, 864, 866, 868, 870, 871, 888], "consid": [2, 4, 5, 82, 93, 101, 104, 108, 109, 112, 137, 141, 144, 152, 156, 159, 161, 162, 166, 184, 185, 192, 196, 199, 200, 201, 202, 204, 205, 210, 211, 212, 227, 228, 229, 232, 235, 237, 242, 260, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 279, 280, 281, 288, 298, 299, 311, 321, 339, 356, 360, 361, 372, 373, 413, 420, 421, 434, 443, 444, 445, 446, 448, 454, 461, 478, 479, 481, 482, 489, 496, 498, 500, 504, 558, 563, 565, 566, 571, 573, 574, 578, 580, 582, 584, 587, 593, 595, 600, 619, 621, 625, 669, 678, 679, 680, 682, 683, 695, 696, 698, 699, 708, 711, 713, 714, 715, 716, 717, 718, 719, 756, 769, 778, 786, 789, 790, 802, 809, 843, 845, 866, 869, 888], "self": [2, 4, 5, 101, 109, 172, 184, 185, 196, 199, 204, 211, 212, 228, 237, 259, 262, 263, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 279, 280, 281, 289, 304, 367, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 480, 481, 482, 500, 529, 562, 563, 564, 708, 710, 711, 712, 743, 757, 847, 865, 867, 888], "highpass": [2, 12, 72, 74, 77, 81, 82, 83, 90, 93, 99, 127, 141, 146, 151, 166, 167, 168, 169, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 242, 257, 265, 266, 267, 268, 270, 448, 481, 482, 710, 712, 809, 810, 873, 888], "version": [2, 19, 34, 71, 84, 114, 145, 146, 150, 155, 161, 166, 171, 188, 189, 190, 195, 196, 201, 202, 219, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 285, 286, 289, 294, 298, 299, 301, 303, 306, 307, 308, 309, 310, 311, 314, 315, 318, 319, 320, 322, 323, 324, 325, 326, 330, 332, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 367, 371, 372, 373, 388, 389, 391, 392, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 424, 425, 429, 432, 434, 437, 438, 440, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 460, 461, 463, 466, 470, 472, 473, 475, 476, 478, 479, 480, 481, 482, 489, 490, 492, 493, 494, 496, 497, 498, 502, 505, 507, 510, 512, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 530, 531, 532, 533, 536, 537, 538, 539, 540, 541, 543, 545, 546, 547, 548, 549, 550, 551, 554, 555, 556, 562, 563, 564, 565, 566, 571, 572, 573, 574, 575, 576, 577, 578, 580, 581, 584, 585, 594, 595, 596, 603, 605, 609, 610, 615, 617, 619, 621, 622, 625, 626, 627, 630, 638, 640, 641, 643, 644, 646, 649, 652, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 677, 689, 690, 691, 700, 701, 702, 703, 707, 708, 709, 710, 711, 712, 720, 722, 725, 726, 727, 730, 735, 736, 738, 739, 740, 741, 744, 745, 746, 753, 756, 757, 759, 765, 766, 772, 773, 774, 775, 777, 779, 780, 781, 783, 784, 785, 786, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816, 818, 819, 820, 821, 822, 825, 829, 832, 834, 838, 839, 841, 846, 847, 850, 851, 852, 853, 862, 864, 867, 869, 870, 873, 876], "evoked_hp": 2, "l_freq": [2, 21, 83, 114, 144, 146, 151, 191, 202, 203, 205, 207, 242, 257, 265, 266, 267, 268, 415, 424, 449, 451, 481, 482, 563, 571, 575, 576, 580, 581, 585, 586, 588, 589, 599, 874], "300": [2, 4, 5, 13, 21, 34, 46, 51, 60, 75, 81, 82, 92, 112, 116, 130, 132, 135, 140, 149, 151, 169, 183, 191, 203, 205, 209, 212, 227, 232, 240, 708, 873, 888], "h_freq": [2, 21, 83, 114, 144, 146, 151, 191, 202, 203, 205, 207, 210, 242, 257, 265, 266, 267, 268, 415, 424, 449, 451, 481, 482, 563, 571, 575, 576, 580, 581, 584, 585, 586, 588, 589, 599, 874], "3e": [2, 8, 9, 21, 32, 35, 45, 48, 49, 50, 51, 54, 55, 58, 60, 94, 109, 152, 176, 178, 179, 180, 181, 196, 575, 576, 773], "edg": [2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 32, 34, 42, 59, 71, 73, 74, 77, 82, 83, 84, 88, 99, 110, 113, 114, 115, 120, 121, 133, 136, 141, 142, 144, 146, 151, 161, 172, 191, 196, 199, 201, 202, 203, 204, 205, 207, 210, 211, 212, 218, 219, 223, 227, 232, 242, 262, 265, 266, 267, 268, 274, 275, 283, 320, 413, 415, 419, 420, 442, 449, 451, 453, 479, 481, 482, 562, 563, 565, 566, 578, 584, 595, 599, 708, 710, 712, 760, 769, 773, 774, 788, 795, 799, 808, 809, 811, 816, 818, 867, 888], "75": [2, 4, 5, 8, 12, 13, 16, 19, 21, 24, 34, 35, 41, 44, 71, 73, 77, 80, 81, 83, 103, 112, 114, 115, 123, 127, 135, 143, 144, 146, 158, 169, 172, 180, 184, 191, 195, 196, 199, 201, 204, 205, 207, 208, 209, 218, 227, 228, 231, 232, 481, 482, 563, 812, 864, 870, 888], "cutoff": [2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 34, 42, 73, 74, 77, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 136, 141, 144, 146, 151, 172, 191, 196, 199, 201, 203, 204, 205, 207, 210, 211, 212, 232, 265, 266, 267, 268, 415, 424, 449, 451, 481, 482, 563, 571, 584, 599], "262": [2, 12, 13, 21, 106, 112, 114, 151, 169, 209, 211, 227, 232, 245], "133": [2, 35, 62, 154, 156, 169, 171, 176, 196, 208, 209, 231, 232], "044": [2, 140, 142, 149, 169, 224], "306": [2, 22, 26, 31, 32, 33, 34, 35, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 60, 62, 69, 77, 83, 84, 90, 92, 93, 94, 95, 109, 112, 131, 146, 158, 169, 172, 177, 178, 179, 180, 183, 196, 209, 210, 223, 224, 232, 563, 864], "condit": [2, 10, 11, 16, 17, 20, 27, 30, 31, 35, 38, 39, 40, 41, 44, 45, 51, 58, 59, 60, 61, 62, 79, 86, 87, 88, 94, 96, 99, 110, 112, 119, 120, 122, 124, 130, 140, 141, 142, 143, 144, 145, 149, 150, 153, 165, 166, 168, 176, 177, 178, 179, 180, 181, 184, 185, 191, 196, 202, 211, 217, 222, 227, 228, 229, 232, 233, 234, 235, 236, 237, 240, 245, 258, 265, 266, 267, 268, 270, 355, 356, 416, 423, 429, 435, 481, 528, 553, 560, 564, 574, 584, 595, 610, 622, 624, 625, 626, 689, 694, 695, 696, 698, 708, 710, 711, 712, 730, 738, 780, 794, 843, 847, 863, 864, 870, 874, 888], "kind": [2, 5, 7, 11, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 65, 69, 83, 90, 92, 93, 94, 95, 104, 107, 108, 109, 110, 124, 127, 131, 135, 136, 142, 149, 151, 156, 160, 166, 169, 170, 172, 175, 177, 178, 179, 180, 181, 184, 190, 191, 196, 203, 206, 223, 224, 235, 236, 237, 264, 265, 266, 267, 268, 270, 272, 273, 274, 276, 277, 278, 279, 280, 281, 298, 299, 307, 308, 314, 315, 330, 340, 376, 392, 432, 433, 448, 475, 481, 482, 514, 551, 564, 625, 703, 708, 710, 711, 712, 724, 734, 756, 775, 777, 806, 812, 814, 819, 820, 847, 854, 867, 870, 873, 888], "timepoint": [2, 19, 59, 101, 120, 141, 149, 151, 179, 181, 184, 216, 260, 265, 266, 267, 268, 272, 273, 275, 276, 279, 280, 281, 288, 350, 524, 580, 625, 626], "901": [2, 232], "number": [2, 4, 5, 9, 10, 11, 31, 34, 35, 39, 40, 42, 44, 46, 49, 52, 59, 73, 75, 77, 82, 83, 88, 90, 92, 93, 100, 103, 107, 109, 113, 114, 121, 127, 135, 140, 142, 143, 144, 145, 146, 149, 150, 151, 160, 161, 162, 165, 166, 168, 170, 171, 172, 175, 177, 179, 180, 181, 182, 183, 184, 185, 188, 190, 191, 192, 196, 199, 200, 201, 202, 204, 205, 206, 210, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 245, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 298, 299, 300, 301, 303, 326, 329, 337, 344, 350, 356, 357, 358, 359, 360, 361, 362, 364, 367, 371, 372, 373, 382, 412, 413, 415, 416, 418, 419, 420, 421, 423, 424, 425, 426, 429, 430, 434, 436, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 469, 470, 471, 476, 478, 479, 480, 481, 482, 483, 492, 506, 513, 515, 521, 524, 525, 530, 531, 532, 533, 534, 536, 537, 539, 540, 541, 543, 545, 546, 547, 562, 563, 564, 568, 572, 573, 574, 575, 576, 578, 579, 584, 585, 586, 588, 590, 591, 593, 594, 600, 601, 612, 622, 626, 647, 656, 657, 658, 659, 660, 661, 662, 666, 667, 668, 671, 672, 673, 674, 682, 683, 684, 685, 687, 688, 689, 691, 693, 695, 696, 697, 698, 699, 700, 703, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 722, 724, 726, 727, 734, 735, 736, 737, 738, 739, 740, 746, 754, 755, 756, 764, 773, 779, 780, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 795, 796, 797, 799, 800, 802, 803, 808, 809, 810, 811, 814, 815, 816, 817, 818, 819, 822, 843, 847, 862, 864, 867, 871, 873, 888], "rang": [2, 4, 5, 9, 10, 11, 13, 14, 15, 16, 18, 19, 28, 29, 32, 33, 34, 42, 45, 46, 49, 59, 62, 64, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 82, 83, 84, 88, 92, 93, 94, 96, 97, 99, 100, 103, 104, 107, 109, 110, 111, 112, 113, 114, 115, 117, 118, 120, 121, 123, 127, 129, 132, 133, 135, 136, 137, 140, 141, 142, 143, 144, 146, 149, 151, 152, 156, 158, 159, 160, 162, 166, 167, 168, 169, 171, 172, 176, 177, 179, 180, 181, 182, 183, 184, 185, 190, 191, 192, 196, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 237, 240, 241, 242, 257, 258, 262, 265, 266, 267, 268, 270, 274, 275, 298, 323, 375, 382, 397, 405, 406, 413, 416, 420, 422, 423, 446, 472, 478, 481, 482, 489, 562, 563, 568, 578, 584, 708, 709, 710, 711, 712, 724, 734, 773, 786, 787, 788, 792, 795, 799, 808, 809, 810, 811, 816, 818, 843, 863, 869, 870, 873, 888], "05": [2, 4, 5, 6, 8, 9, 10, 13, 19, 20, 34, 35, 42, 46, 49, 51, 56, 59, 60, 61, 72, 79, 84, 85, 87, 92, 95, 96, 97, 100, 102, 103, 112, 116, 119, 120, 124, 130, 141, 144, 150, 151, 170, 174, 177, 179, 180, 181, 183, 185, 191, 199, 200, 203, 207, 209, 211, 216, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 245, 298, 299, 323, 326, 332, 452, 456, 481, 482, 500, 545, 572, 668, 686, 691, 692, 695, 696, 698, 699, 700, 708, 722, 724, 734, 738, 760, 815], "25": [2, 4, 5, 11, 13, 16, 18, 19, 20, 28, 34, 35, 38, 41, 43, 45, 46, 47, 49, 50, 53, 56, 65, 69, 71, 73, 77, 81, 82, 83, 85, 103, 104, 106, 108, 109, 112, 113, 114, 116, 119, 124, 130, 135, 136, 137, 143, 144, 145, 146, 148, 151, 159, 169, 170, 171, 172, 174, 175, 178, 180, 181, 183, 191, 196, 199, 201, 202, 204, 205, 206, 207, 209, 210, 211, 213, 215, 218, 224, 227, 228, 229, 231, 232, 235, 236, 237, 240, 241, 245, 259, 265, 266, 267, 268, 272, 273, 276, 277, 278, 279, 280, 281, 362, 405, 413, 415, 424, 449, 451, 481, 482, 599, 668, 697, 756, 760, 780, 792, 809, 812, 814, 819, 846, 863, 870], "off": [2, 4, 10, 68, 74, 77, 93, 114, 116, 127, 135, 137, 141, 143, 149, 151, 152, 156, 159, 160, 166, 167, 168, 169, 171, 191, 195, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 212, 216, 217, 218, 219, 222, 223, 224, 245, 257, 260, 265, 266, 267, 268, 278, 298, 299, 415, 424, 449, 451, 481, 482, 562, 575, 576, 578, 586, 589, 595, 599, 610, 736, 739, 847, 863, 864, 870, 873, 888], "compar": [2, 4, 10, 19, 21, 22, 26, 27, 28, 36, 38, 39, 56, 74, 78, 83, 85, 89, 91, 103, 113, 114, 122, 130, 141, 143, 144, 145, 146, 158, 160, 162, 166, 167, 172, 176, 180, 183, 184, 191, 196, 202, 204, 206, 207, 208, 229, 230, 231, 235, 236, 242, 260, 262, 265, 266, 267, 268, 269, 270, 271, 276, 278, 360, 361, 366, 389, 454, 481, 482, 486, 515, 518, 522, 529, 530, 541, 542, 545, 561, 563, 595, 616, 618, 622, 625, 627, 630, 658, 662, 663, 664, 665, 666, 667, 668, 670, 673, 679, 756, 764, 786, 794, 803, 809, 847, 855, 867, 876, 888], "unfilt": [2, 166, 172, 202, 205], "singl": [2, 3, 6, 16, 18, 27, 33, 34, 36, 45, 56, 68, 71, 75, 83, 84, 87, 94, 101, 103, 105, 106, 113, 117, 120, 122, 130, 140, 141, 142, 144, 145, 149, 150, 151, 158, 165, 166, 168, 169, 170, 172, 176, 178, 180, 183, 184, 188, 189, 190, 196, 199, 200, 202, 205, 206, 207, 208, 210, 211, 212, 216, 217, 222, 224, 227, 232, 233, 234, 237, 241, 242, 245, 257, 259, 260, 262, 263, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 292, 293, 296, 298, 299, 306, 314, 316, 320, 321, 326, 355, 356, 361, 388, 413, 414, 420, 426, 429, 435, 439, 442, 454, 472, 481, 482, 497, 501, 503, 516, 519, 522, 524, 526, 529, 530, 532, 534, 536, 537, 544, 560, 562, 563, 568, 571, 578, 610, 618, 622, 629, 635, 642, 652, 657, 674, 688, 689, 691, 692, 693, 695, 696, 703, 708, 709, 710, 711, 712, 724, 734, 735, 736, 738, 739, 746, 756, 772, 773, 774, 780, 784, 787, 788, 789, 790, 792, 795, 796, 799, 806, 807, 808, 810, 811, 812, 816, 818, 831, 847, 856, 863, 864, 867, 870, 873, 874, 876, 888], "meg0443": 2, "ch_name": [2, 4, 7, 15, 18, 19, 31, 64, 68, 71, 73, 75, 86, 100, 112, 114, 115, 120, 125, 135, 136, 140, 146, 149, 151, 159, 166, 168, 169, 172, 184, 190, 191, 200, 203, 205, 207, 210, 211, 212, 216, 222, 224, 229, 230, 231, 232, 241, 257, 259, 260, 262, 264, 265, 266, 267, 268, 269, 270, 298, 299, 314, 316, 320, 323, 326, 331, 339, 371, 372, 375, 480, 481, 482, 554, 555, 556, 557, 563, 575, 576, 580, 581, 584, 585, 586, 606, 627, 649, 662, 708, 709, 710, 711, 712, 713, 714, 715, 725, 777, 786, 787, 809, 873, 888], "index": [2, 4, 19, 21, 31, 47, 62, 71, 73, 76, 90, 133, 136, 143, 149, 150, 151, 160, 166, 169, 170, 172, 175, 180, 183, 184, 188, 191, 195, 199, 201, 204, 205, 206, 207, 209, 210, 211, 217, 218, 223, 228, 229, 240, 241, 245, 258, 259, 263, 264, 265, 266, 267, 268, 272, 273, 275, 276, 278, 279, 280, 281, 285, 286, 297, 298, 299, 313, 323, 351, 365, 473, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 522, 533, 553, 563, 580, 581, 585, 586, 588, 589, 590, 599, 625, 626, 668, 708, 709, 710, 711, 712, 756, 769, 774, 780, 784, 789, 799, 801, 803, 843, 864, 870, 888], "edi": 2, "regular": [2, 5, 28, 29, 30, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 54, 55, 57, 58, 59, 61, 79, 83, 90, 94, 99, 104, 107, 108, 109, 110, 121, 166, 169, 178, 179, 180, 181, 182, 191, 196, 200, 207, 210, 222, 223, 224, 227, 235, 237, 267, 268, 271, 277, 298, 299, 356, 360, 361, 371, 372, 413, 420, 421, 425, 434, 442, 456, 457, 476, 478, 479, 489, 492, 496, 504, 530, 531, 532, 533, 534, 536, 537, 538, 541, 543, 546, 547, 557, 564, 572, 574, 584, 595, 630, 685, 688, 695, 696, 698, 699, 702, 795, 796, 813, 863, 869, 878, 888], "viz": [2, 4, 5, 7, 12, 19, 24, 27, 31, 35, 38, 39, 40, 41, 42, 46, 47, 51, 52, 57, 59, 60, 71, 80, 81, 86, 88, 92, 93, 101, 109, 114, 115, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 130, 132, 133, 135, 136, 137, 141, 142, 143, 144, 150, 151, 155, 156, 157, 158, 159, 160, 166, 170, 171, 177, 178, 180, 181, 182, 183, 184, 185, 190, 195, 200, 202, 203, 205, 206, 207, 208, 209, 210, 211, 217, 227, 232, 242, 263, 265, 266, 267, 268, 270, 272, 273, 275, 276, 279, 280, 281, 311, 320, 331, 481, 482, 563, 617, 625, 635, 640, 708, 845, 847, 863, 865, 867, 870, 874, 878, 887, 888], "plot_compare_evok": [2, 4, 101, 127, 141, 142, 143, 144, 150, 151, 166, 211, 232, 265, 266, 787, 874, 878, 888], "708": [2, 6, 194, 232], "hf_sef_data": [2, 6], "some": [3, 4, 5, 10, 16, 21, 27, 34, 40, 54, 55, 62, 66, 68, 71, 74, 76, 95, 98, 103, 105, 109, 113, 114, 120, 127, 135, 136, 137, 138, 140, 141, 142, 144, 145, 149, 150, 151, 152, 156, 158, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 180, 183, 184, 189, 190, 191, 192, 196, 197, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 212, 213, 214, 216, 217, 218, 219, 222, 223, 224, 227, 231, 232, 233, 240, 242, 257, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 278, 279, 280, 281, 310, 314, 318, 322, 356, 374, 388, 427, 436, 447, 466, 472, 481, 482, 489, 496, 558, 562, 563, 565, 573, 582, 595, 603, 609, 619, 621, 648, 652, 656, 690, 696, 708, 710, 711, 712, 724, 734, 738, 772, 774, 791, 793, 809, 843, 845, 846, 847, 850, 851, 854, 859, 862, 863, 864, 865, 867, 868, 869, 870, 871, 874, 876, 888], "demo": [3, 27, 843, 888], "common": [3, 17, 20, 27, 32, 33, 34, 43, 44, 68, 76, 115, 135, 149, 151, 155, 158, 160, 162, 165, 172, 189, 192, 202, 204, 205, 206, 207, 210, 211, 216, 217, 224, 236, 242, 245, 265, 266, 267, 268, 270, 278, 314, 319, 330, 356, 365, 375, 413, 438, 442, 463, 469, 481, 482, 496, 560, 563, 579, 638, 642, 652, 708, 841, 843, 847, 864, 867, 870, 871, 874, 876, 888], "public": [3, 27, 112, 116, 120, 122, 130, 144, 202, 260, 267, 270, 276, 452, 480, 481, 625, 635, 756, 775, 847, 863, 869, 876, 888], "brainstorm": [3, 6, 27, 81, 82, 84, 109, 119, 165, 171, 186, 187, 193, 194, 245, 259, 262, 263, 265, 267, 268, 270, 276, 304, 355, 356, 357, 358, 361, 363, 365, 433, 454, 456, 481, 494, 519, 520, 525, 526, 529, 530, 541, 560, 576, 587, 595, 627, 633, 640, 656, 756, 772, 784, 796, 824, 870, 878, 886, 888], "raw": [3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 27, 28, 32, 33, 34, 36, 41, 42, 45, 46, 49, 56, 62, 64, 66, 68, 69, 70, 72, 73, 74, 75, 77, 79, 80, 82, 83, 84, 88, 89, 91, 92, 95, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 121, 123, 127, 128, 129, 132, 133, 135, 136, 141, 142, 144, 145, 146, 149, 151, 156, 158, 159, 162, 165, 166, 167, 169, 170, 171, 173, 174, 180, 182, 183, 184, 185, 188, 189, 190, 191, 192, 196, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 220, 221, 223, 224, 229, 230, 231, 232, 235, 237, 240, 241, 242, 245, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 282, 284, 285, 286, 297, 298, 299, 314, 316, 319, 343, 345, 347, 348, 349, 350, 355, 356, 358, 359, 360, 361, 364, 365, 373, 383, 395, 418, 421, 438, 442, 446, 448, 451, 454, 455, 472, 480, 482, 483, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 518, 521, 522, 523, 525, 527, 529, 530, 531, 532, 533, 534, 536, 537, 541, 544, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 593, 594, 595, 596, 597, 598, 599, 602, 603, 609, 610, 616, 620, 622, 624, 627, 629, 630, 649, 652, 658, 659, 660, 661, 662, 673, 674, 694, 708, 710, 711, 712, 721, 726, 754, 756, 786, 789, 790, 799, 800, 801, 803, 809, 810, 826, 843, 845, 847, 863, 864, 865, 873, 874, 878, 888], "median": [3, 5, 6, 27, 71, 128, 150, 157, 196, 205, 228, 240, 241, 262, 265, 266, 267, 268, 270, 274, 316, 358, 413, 420, 422, 454, 481, 482, 494, 560, 562, 563, 578, 587, 595, 687, 708, 710, 711, 712, 727, 773, 780, 787, 788, 795, 799, 808, 811, 816, 818, 888], "nerv": [3, 5, 6, 27, 265, 267, 268, 270, 358, 454, 494, 560, 587], "hf": [3, 6, 27, 96, 127, 191, 267, 395, 780], "sef": [3, 6, 27, 127, 267, 395, 780, 863], "trial": [3, 6, 13, 16, 18, 27, 28, 33, 70, 71, 73, 84, 101, 104, 107, 113, 114, 117, 122, 130, 140, 141, 142, 143, 144, 149, 151, 152, 165, 166, 168, 180, 183, 191, 195, 196, 201, 202, 205, 213, 222, 224, 227, 232, 233, 234, 235, 237, 245, 265, 266, 267, 268, 270, 292, 293, 296, 320, 326, 355, 413, 426, 429, 435, 436, 437, 439, 442, 454, 481, 497, 501, 532, 534, 560, 563, 571, 622, 642, 688, 689, 691, 692, 693, 695, 696, 708, 711, 735, 736, 738, 739, 780, 786, 789, 843, 864, 888], "linear": [3, 5, 6, 8, 9, 13, 17, 19, 20, 26, 27, 32, 41, 45, 50, 54, 55, 61, 99, 101, 107, 109, 110, 112, 120, 135, 136, 141, 158, 159, 166, 176, 177, 181, 182, 195, 196, 202, 204, 205, 206, 245, 260, 262, 265, 266, 267, 268, 270, 272, 273, 274, 276, 278, 279, 280, 281, 343, 355, 413, 417, 419, 420, 425, 428, 431, 448, 449, 451, 452, 481, 482, 520, 533, 535, 542, 545, 562, 563, 578, 587, 593, 622, 631, 659, 660, 661, 673, 693, 694, 703, 708, 710, 712, 744, 746, 756, 773, 775, 780, 788, 789, 795, 797, 799, 804, 808, 810, 811, 814, 816, 818, 819, 820, 843, 854, 856, 863, 864, 867, 888], "regress": [3, 6, 10, 11, 12, 15, 18, 19, 27, 31, 42, 78, 85, 98, 102, 147, 148, 165, 196, 214, 215, 227, 245, 265, 266, 267, 268, 270, 355, 419, 425, 454, 481, 528, 531, 560, 562, 581, 605, 610, 618, 692, 693, 694, 780, 789, 792, 811, 864, 876, 888], "limo": [3, 6, 27, 171, 245, 266, 267, 268, 355, 693, 780, 789, 878, 888], "optic": [3, 6, 27, 76, 165, 188, 190, 214, 215, 245, 263, 265, 267, 268, 270, 276, 304, 356, 366, 373, 442, 454, 456, 490, 503, 529, 530, 541, 557, 560, 562, 577, 597, 598, 602, 614, 627, 712, 750, 756, 772, 824, 843, 864, 888], "pump": [3, 6, 27, 165, 188, 214, 215, 245, 263, 265, 267, 268, 270, 276, 304, 356, 366, 454, 456, 503, 529, 530, 541, 557, 560, 562, 577, 614, 627, 712, 750, 756, 772, 824, 843, 864, 888], "magnetomet": [3, 6, 22, 27, 32, 74, 77, 80, 81, 82, 87, 93, 109, 119, 120, 142, 145, 146, 150, 151, 162, 165, 166, 167, 168, 169, 180, 183, 184, 188, 191, 199, 200, 201, 203, 205, 206, 207, 208, 210, 214, 215, 216, 217, 218, 219, 222, 227, 245, 257, 260, 262, 263, 265, 266, 267, 268, 270, 272, 273, 274, 276, 279, 280, 281, 298, 299, 304, 322, 356, 357, 358, 359, 360, 361, 366, 371, 372, 373, 413, 420, 434, 454, 456, 457, 476, 478, 479, 481, 482, 503, 518, 529, 530, 541, 557, 560, 561, 562, 563, 573, 574, 575, 576, 577, 578, 579, 580, 581, 584, 595, 606, 614, 627, 694, 708, 710, 711, 712, 750, 756, 772, 773, 779, 786, 787, 788, 790, 792, 795, 796, 799, 808, 809, 811, 816, 817, 818, 824, 843, 863, 864, 867, 870, 888], "opm": [3, 6, 27, 105, 106, 165, 171, 214, 215, 245, 262, 263, 265, 267, 268, 270, 276, 304, 356, 361, 366, 454, 456, 503, 520, 525, 529, 530, 536, 541, 557, 560, 562, 577, 614, 627, 656, 712, 750, 756, 772, 824, 843, 870, 878, 888], "dspm": [3, 6, 11, 27, 29, 31, 36, 37, 38, 39, 40, 41, 42, 44, 55, 56, 59, 61, 104, 105, 106, 107, 108, 109, 165, 166, 175, 178, 179, 181, 182, 186, 187, 191, 196, 223, 224, 235, 237, 262, 265, 267, 268, 269, 270, 271, 272, 273, 276, 278, 279, 280, 281, 291, 295, 298, 299, 355, 356, 360, 454, 478, 479, 481, 494, 516, 521, 525, 529, 530, 531, 532, 533, 534, 535, 536, 537, 541, 542, 543, 544, 546, 547, 560, 563, 581, 622, 625, 627, 629, 717, 756, 781, 789, 843, 863, 864, 873, 888], "spm": [3, 6, 27, 123, 196, 355, 356, 408, 454, 494, 521, 525, 530, 541, 560, 563, 581, 789, 876, 886, 888], "face": [3, 4, 6, 10, 27, 70, 123, 140, 142, 144, 149, 151, 161, 166, 172, 175, 196, 199, 245, 265, 266, 308, 355, 356, 454, 494, 521, 525, 530, 541, 560, 563, 581, 638, 641, 708, 769, 789, 817, 836, 841, 873, 876, 888], "explor": [4, 27, 105, 106, 109, 158, 181, 196, 200, 202, 204, 207, 219, 222, 223, 241, 242, 265, 268, 280, 281, 288, 454, 687, 820, 844, 864, 865, 867], "structur": [4, 8, 9, 10, 27, 41, 43, 59, 63, 64, 68, 71, 83, 94, 95, 112, 114, 123, 135, 137, 142, 146, 147, 148, 151, 153, 154, 155, 159, 165, 166, 167, 170, 171, 173, 174, 181, 185, 186, 187, 189, 190, 192, 195, 205, 213, 217, 220, 221, 225, 226, 227, 228, 242, 245, 259, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 278, 279, 280, 281, 312, 313, 314, 322, 355, 374, 375, 391, 395, 454, 479, 481, 482, 486, 501, 523, 543, 554, 557, 559, 560, 574, 591, 595, 618, 620, 624, 625, 635, 668, 678, 679, 680, 681, 682, 683, 684, 688, 708, 710, 711, 712, 727, 746, 756, 812, 843, 847, 848, 851, 854, 859, 861, 863, 864, 865, 876, 888], "contain": [4, 16, 18, 27, 31, 38, 41, 43, 53, 80, 88, 94, 101, 108, 112, 116, 127, 128, 137, 140, 143, 144, 146, 149, 151, 155, 158, 162, 165, 166, 168, 169, 170, 171, 172, 175, 181, 183, 188, 189, 190, 191, 192, 202, 204, 205, 206, 207, 210, 211, 212, 213, 216, 217, 222, 224, 227, 240, 241, 242, 252, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 285, 286, 290, 298, 299, 300, 305, 309, 310, 311, 314, 315, 316, 317, 320, 321, 322, 328, 337, 340, 351, 356, 357, 358, 359, 360, 361, 362, 367, 368, 369, 370, 371, 372, 373, 388, 392, 394, 395, 396, 413, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 432, 434, 437, 440, 441, 442, 447, 454, 455, 456, 457, 461, 462, 463, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 481, 482, 488, 490, 491, 492, 493, 495, 497, 498, 499, 500, 501, 502, 505, 506, 507, 508, 509, 510, 511, 512, 515, 516, 519, 521, 523, 524, 541, 549, 552, 553, 558, 562, 563, 564, 566, 568, 578, 579, 584, 590, 591, 592, 594, 595, 599, 601, 607, 608, 612, 613, 614, 615, 616, 617, 619, 620, 621, 622, 624, 625, 626, 630, 633, 636, 638, 639, 641, 647, 649, 651, 652, 656, 657, 663, 664, 665, 666, 667, 668, 669, 670, 671, 674, 676, 677, 685, 687, 693, 695, 696, 698, 699, 700, 703, 704, 708, 709, 710, 711, 712, 720, 723, 731, 735, 736, 738, 739, 748, 756, 772, 773, 774, 775, 780, 783, 784, 786, 787, 788, 789, 790, 792, 793, 795, 796, 797, 799, 805, 808, 811, 812, 813, 814, 815, 816, 818, 819, 820, 833, 836, 838, 839, 841, 843, 846, 847, 863, 864, 865, 867, 870, 873, 874, 888], "replic": [4, 16, 231, 235, 236, 237, 271, 685, 864, 867, 868, 888], "extend": [4, 77, 141, 144, 151, 166, 180, 200, 205, 207, 210, 212, 232, 245, 259, 262, 263, 265, 266, 267, 268, 274, 280, 356, 413, 420, 481, 482, 515, 523, 562, 563, 566, 574, 578, 584, 593, 595, 675, 708, 710, 712, 724, 734, 738, 746, 773, 784, 788, 795, 799, 808, 811, 816, 818, 851, 854, 863, 876, 888], "main": [4, 49, 94, 101, 143, 156, 168, 171, 208, 212, 218, 231, 237, 265, 266, 328, 395, 472, 494, 689, 691, 786, 845, 847, 855, 864, 870, 871, 888], "tool": [4, 27, 54, 55, 71, 80, 89, 140, 151, 155, 158, 161, 171, 190, 192, 199, 200, 202, 205, 207, 211, 228, 237, 242, 245, 252, 272, 273, 276, 279, 280, 281, 481, 482, 519, 545, 845, 850, 851, 852, 853, 855, 859, 863, 867, 868, 869, 870, 871, 875, 876, 878, 886, 888], "integr": [4, 155, 160, 201, 205, 227, 237, 245, 545, 563, 595, 668, 847, 851, 859, 870, 873, 888], "meeg": [4, 242], "matlab": [4, 19, 195, 245, 305, 419, 501, 604, 620, 624, 853, 854, 864, 871, 872, 876, 886, 888], "toolbox": [4, 19, 71, 151, 155, 195, 245, 305, 419, 452, 571, 854, 864], "origin": [4, 5, 8, 9, 11, 12, 13, 16, 18, 21, 22, 24, 26, 32, 33, 34, 38, 41, 42, 45, 46, 49, 50, 71, 72, 73, 76, 79, 80, 81, 87, 93, 94, 96, 97, 100, 103, 107, 110, 112, 113, 114, 117, 118, 121, 128, 135, 136, 137, 140, 141, 142, 144, 145, 146, 149, 151, 152, 156, 158, 159, 160, 161, 162, 166, 167, 169, 170, 172, 176, 177, 178, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 195, 196, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 213, 216, 218, 224, 229, 230, 231, 232, 235, 237, 240, 241, 257, 258, 259, 260, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 278, 279, 280, 281, 283, 285, 286, 298, 299, 314, 362, 371, 413, 420, 427, 428, 429, 434, 437, 447, 475, 480, 481, 482, 489, 492, 496, 501, 515, 521, 531, 562, 563, 564, 573, 574, 578, 584, 595, 602, 610, 620, 624, 627, 632, 645, 647, 649, 657, 659, 660, 661, 668, 673, 693, 700, 708, 710, 711, 712, 752, 756, 772, 773, 780, 786, 788, 790, 792, 795, 796, 799, 806, 808, 809, 810, 811, 812, 815, 816, 818, 835, 843, 847, 855, 863, 864, 870, 873, 888], "interfac": [4, 8, 15, 45, 88, 155, 158, 166, 189, 196, 200, 202, 205, 206, 219, 245, 267, 268, 377, 382, 472, 473, 564, 756, 795, 850, 854, 859, 864, 873, 888], "eeglab": [4, 68, 71, 128, 168, 202, 205, 245, 262, 265, 266, 267, 268, 274, 314, 332, 413, 420, 443, 446, 481, 482, 497, 562, 563, 571, 578, 608, 613, 619, 708, 710, 712, 773, 780, 788, 790, 792, 795, 796, 799, 806, 808, 810, 811, 812, 816, 818, 870, 888], "In": [4, 5, 10, 15, 16, 19, 21, 32, 40, 42, 43, 44, 45, 46, 59, 71, 75, 79, 82, 83, 87, 88, 90, 94, 101, 103, 112, 114, 115, 116, 118, 126, 127, 132, 135, 137, 140, 142, 144, 149, 150, 151, 152, 155, 156, 158, 160, 161, 162, 166, 167, 168, 170, 171, 172, 175, 176, 178, 181, 188, 190, 191, 192, 195, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 222, 224, 227, 228, 229, 237, 240, 241, 242, 245, 257, 259, 260, 262, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 279, 280, 281, 289, 298, 299, 301, 304, 305, 310, 312, 322, 329, 331, 343, 356, 360, 361, 371, 372, 373, 374, 413, 415, 419, 420, 429, 430, 434, 437, 446, 448, 456, 457, 476, 478, 479, 481, 482, 489, 529, 530, 531, 532, 533, 534, 538, 541, 558, 562, 563, 564, 565, 578, 579, 580, 581, 587, 591, 593, 601, 603, 610, 612, 635, 652, 673, 676, 694, 703, 708, 710, 711, 712, 716, 717, 718, 719, 721, 724, 734, 735, 736, 737, 738, 739, 740, 743, 753, 756, 769, 780, 786, 787, 788, 789, 790, 792, 793, 795, 796, 799, 800, 807, 808, 809, 810, 811, 814, 816, 817, 820, 843, 845, 847, 848, 852, 853, 855, 858, 863, 864, 867, 869, 870, 873, 874, 888], "summari": [4, 10, 172, 201, 205, 219, 272, 273, 276, 279, 280, 281, 539, 540, 700, 847, 873], "fetch": [4, 137, 250, 382, 387, 388, 389, 390, 391, 392, 397, 405, 406, 847, 864, 888], "subject": [4, 5, 7, 8, 9, 10, 11, 19, 22, 24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 58, 59, 60, 61, 69, 72, 73, 80, 81, 83, 89, 90, 91, 95, 104, 109, 112, 113, 115, 116, 118, 124, 125, 126, 127, 131, 134, 135, 136, 137, 140, 143, 150, 151, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 168, 169, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 191, 192, 196, 199, 200, 201, 204, 205, 206, 207, 208, 210, 211, 212, 214, 215, 216, 217, 223, 224, 227, 228, 229, 231, 232, 235, 236, 237, 238, 241, 242, 245, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 298, 299, 305, 309, 310, 311, 314, 343, 344, 345, 346, 351, 353, 354, 362, 367, 368, 369, 374, 382, 387, 389, 390, 391, 392, 397, 405, 406, 432, 447, 463, 465, 467, 469, 471, 472, 473, 474, 475, 481, 482, 483, 486, 515, 517, 519, 521, 525, 529, 530, 541, 549, 550, 563, 567, 578, 590, 591, 595, 612, 616, 622, 627, 629, 630, 632, 635, 639, 644, 645, 646, 647, 656, 657, 658, 660, 661, 662, 671, 673, 674, 685, 689, 691, 700, 703, 704, 746, 748, 755, 756, 772, 774, 779, 784, 785, 798, 812, 814, 819, 820, 837, 838, 843, 853, 861, 863, 865, 867, 870, 876, 888], "If": [4, 27, 28, 31, 43, 44, 70, 71, 82, 99, 101, 115, 117, 120, 127, 135, 137, 140, 142, 144, 146, 149, 150, 151, 156, 159, 160, 161, 165, 168, 169, 170, 171, 172, 175, 181, 182, 188, 189, 190, 192, 196, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 213, 216, 217, 218, 219, 222, 227, 228, 229, 235, 240, 242, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 331, 332, 334, 337, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 434, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 595, 596, 598, 599, 602, 603, 604, 607, 608, 609, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 633, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 678, 679, 680, 681, 682, 683, 684, 685, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 703, 704, 705, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 723, 724, 725, 726, 727, 730, 731, 732, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 748, 751, 755, 756, 761, 764, 765, 766, 768, 769, 770, 771, 772, 773, 774, 775, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 847, 850, 851, 852, 853, 854, 855, 858, 863, 864, 867, 868, 869, 870, 871, 873, 874, 888], "disk": [4, 29, 80, 108, 110, 142, 143, 149, 150, 158, 166, 170, 172, 177, 180, 184, 200, 206, 209, 210, 216, 217, 218, 224, 257, 259, 260, 261, 265, 266, 267, 268, 270, 271, 283, 315, 388, 432, 454, 480, 481, 482, 565, 618, 625, 627, 629, 635, 657, 710, 712, 729, 756, 786, 790, 794, 796, 809, 835, 837, 853, 863, 867, 870, 873, 888], "fetcher": [4, 137, 864, 876, 888], "automat": [4, 71, 79, 80, 83, 94, 101, 140, 141, 142, 144, 145, 149, 150, 151, 155, 156, 166, 168, 169, 170, 172, 182, 189, 190, 191, 192, 199, 200, 201, 202, 203, 205, 206, 207, 210, 216, 218, 219, 222, 232, 245, 257, 259, 260, 262, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 283, 314, 320, 342, 362, 379, 380, 381, 382, 384, 385, 386, 393, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 416, 423, 426, 434, 437, 445, 461, 462, 469, 471, 481, 482, 487, 494, 498, 502, 506, 525, 562, 563, 565, 573, 574, 575, 578, 584, 585, 588, 593, 595, 610, 621, 632, 643, 646, 651, 652, 657, 668, 695, 696, 698, 699, 708, 711, 752, 756, 774, 775, 779, 780, 786, 789, 792, 793, 794, 795, 802, 803, 809, 814, 819, 820, 846, 847, 853, 854, 863, 864, 870, 876, 888], "remot": [4, 192, 250, 389, 822, 845, 847, 853, 876], "repositori": [4, 170, 848, 854, 869], "dure": [4, 19, 33, 38, 43, 45, 71, 81, 83, 94, 100, 103, 116, 121, 127, 136, 141, 144, 149, 155, 157, 160, 166, 167, 168, 171, 172, 180, 182, 191, 196, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 216, 217, 218, 219, 242, 245, 257, 263, 265, 266, 267, 268, 269, 270, 272, 275, 276, 278, 280, 281, 282, 298, 299, 306, 343, 345, 349, 356, 360, 361, 363, 368, 371, 372, 373, 413, 419, 420, 430, 436, 437, 448, 456, 457, 473, 476, 478, 479, 481, 482, 483, 494, 510, 521, 525, 541, 549, 563, 584, 591, 595, 610, 649, 652, 658, 673, 676, 682, 683, 684, 703, 708, 710, 711, 712, 714, 717, 737, 740, 744, 745, 754, 756, 772, 775, 786, 793, 796, 800, 803, 809, 814, 820, 843, 846, 852, 855, 863, 864, 865, 869, 870, 873, 888], "inform": [4, 5, 9, 11, 21, 22, 26, 28, 29, 31, 34, 35, 38, 39, 40, 42, 43, 44, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 64, 69, 80, 84, 90, 92, 93, 94, 95, 101, 104, 107, 108, 110, 124, 131, 134, 135, 140, 141, 142, 143, 144, 146, 149, 150, 151, 156, 158, 159, 160, 162, 165, 166, 168, 170, 172, 175, 177, 179, 180, 181, 182, 188, 189, 190, 191, 192, 195, 196, 203, 204, 205, 206, 207, 208, 210, 213, 214, 215, 216, 218, 222, 223, 224, 227, 229, 232, 235, 237, 241, 242, 245, 250, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 283, 285, 286, 298, 299, 300, 307, 308, 312, 313, 320, 321, 322, 326, 328, 329, 331, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 360, 362, 371, 372, 373, 375, 413, 415, 420, 421, 422, 432, 433, 437, 443, 444, 445, 446, 448, 449, 451, 452, 454, 457, 464, 465, 471, 473, 476, 479, 480, 481, 482, 483, 486, 492, 501, 513, 518, 521, 524, 525, 526, 531, 541, 559, 560, 562, 563, 573, 574, 577, 583, 584, 591, 593, 595, 600, 601, 606, 608, 611, 620, 622, 623, 624, 642, 643, 649, 654, 656, 672, 673, 676, 695, 699, 705, 707, 708, 709, 710, 711, 712, 724, 735, 736, 737, 738, 739, 740, 745, 746, 751, 752, 756, 769, 772, 776, 780, 781, 782, 784, 787, 791, 797, 798, 804, 808, 812, 818, 834, 843, 845, 846, 847, 850, 851, 854, 859, 864, 865, 868, 869, 871, 888], "e": [4, 7, 8, 12, 28, 41, 42, 44, 46, 47, 54, 70, 71, 72, 80, 84, 101, 112, 114, 120, 137, 140, 141, 143, 144, 146, 150, 151, 153, 155, 157, 160, 161, 162, 165, 166, 168, 169, 170, 171, 178, 180, 185, 188, 189, 190, 192, 195, 196, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 213, 216, 217, 222, 223, 224, 227, 228, 229, 232, 235, 237, 241, 242, 245, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 288, 289, 298, 299, 300, 304, 305, 308, 310, 312, 314, 315, 320, 329, 331, 340, 342, 353, 356, 360, 361, 367, 371, 372, 373, 382, 388, 389, 391, 396, 405, 406, 413, 415, 416, 419, 420, 422, 423, 424, 427, 428, 429, 432, 433, 434, 437, 440, 442, 445, 446, 447, 449, 451, 452, 454, 455, 456, 457, 463, 469, 472, 475, 476, 478, 479, 480, 481, 482, 483, 493, 494, 496, 498, 500, 515, 517, 519, 522, 523, 524, 525, 529, 530, 536, 537, 538, 539, 540, 541, 542, 545, 546, 547, 549, 562, 563, 565, 566, 571, 572, 573, 574, 577, 578, 579, 580, 581, 583, 584, 586, 587, 590, 591, 595, 601, 602, 603, 610, 615, 622, 625, 626, 629, 630, 635, 642, 643, 644, 645, 646, 647, 653, 655, 657, 663, 664, 665, 666, 667, 668, 669, 670, 672, 673, 676, 679, 693, 694, 695, 696, 697, 698, 699, 700, 703, 704, 707, 708, 710, 711, 712, 716, 717, 718, 719, 720, 721, 724, 734, 738, 739, 743, 746, 756, 761, 769, 772, 773, 774, 779, 780, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 799, 800, 802, 803, 807, 808, 809, 810, 811, 814, 816, 818, 819, 822, 833, 836, 843, 845, 846, 847, 848, 851, 853, 859, 863, 864, 867, 869, 870, 873, 874, 876, 888], "rate": [4, 70, 97, 101, 103, 180, 189, 190, 195, 202, 203, 205, 231, 241, 245, 260, 263, 264, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 375, 418, 448, 452, 454, 481, 482, 489, 496, 504, 586, 593, 609, 661, 673, 686, 692, 694, 697, 708, 710, 711, 712, 726, 786, 788, 797, 809, 867, 888], "per": [4, 31, 47, 90, 94, 101, 107, 110, 120, 126, 131, 142, 144, 150, 151, 158, 166, 169, 180, 192, 201, 205, 207, 219, 227, 232, 237, 241, 257, 265, 266, 267, 268, 270, 272, 273, 274, 276, 277, 278, 279, 280, 281, 283, 316, 323, 362, 377, 390, 405, 413, 420, 423, 426, 434, 437, 446, 447, 481, 482, 539, 540, 545, 546, 547, 563, 564, 567, 612, 652, 660, 689, 691, 704, 708, 710, 712, 714, 717, 724, 726, 727, 734, 735, 736, 738, 739, 746, 756, 786, 787, 788, 795, 799, 817, 847, 853, 869, 870, 876, 888], "name": [4, 5, 7, 8, 10, 18, 22, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 51, 54, 55, 58, 59, 60, 69, 71, 83, 90, 92, 93, 94, 95, 100, 101, 103, 109, 112, 126, 131, 132, 135, 137, 141, 142, 143, 144, 145, 149, 150, 159, 160, 161, 166, 168, 169, 170, 171, 172, 177, 178, 179, 180, 190, 191, 196, 200, 201, 202, 205, 206, 208, 210, 211, 212, 219, 222, 223, 224, 227, 228, 240, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 305, 309, 310, 311, 312, 314, 315, 320, 323, 324, 325, 326, 327, 329, 330, 331, 336, 338, 339, 340, 342, 353, 361, 362, 365, 367, 368, 369, 371, 372, 375, 383, 388, 391, 394, 413, 415, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 429, 431, 432, 434, 437, 440, 443, 444, 445, 446, 454, 455, 463, 465, 466, 467, 469, 471, 472, 473, 474, 475, 480, 481, 482, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 514, 515, 517, 521, 522, 544, 548, 552, 553, 554, 560, 561, 562, 563, 564, 565, 576, 578, 579, 580, 581, 584, 585, 586, 587, 588, 591, 596, 601, 603, 606, 607, 610, 612, 613, 615, 617, 619, 620, 621, 622, 624, 626, 627, 628, 629, 630, 632, 633, 635, 637, 638, 639, 640, 642, 643, 644, 645, 646, 647, 649, 652, 656, 657, 662, 676, 685, 689, 693, 694, 700, 703, 704, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 724, 728, 730, 734, 736, 739, 741, 743, 753, 755, 756, 761, 772, 773, 774, 775, 777, 780, 784, 785, 786, 787, 788, 790, 792, 793, 794, 795, 799, 800, 806, 807, 808, 809, 810, 811, 812, 814, 815, 816, 818, 819, 820, 832, 833, 834, 835, 838, 839, 840, 841, 842, 843, 845, 846, 851, 852, 853, 855, 864, 865, 870, 874, 878, 888], "etc": [4, 27, 31, 36, 47, 78, 143, 155, 160, 166, 167, 168, 171, 172, 175, 188, 189, 190, 199, 200, 201, 205, 210, 216, 219, 222, 227, 235, 242, 258, 263, 265, 266, 267, 268, 270, 271, 272, 276, 280, 336, 442, 454, 455, 481, 482, 489, 501, 505, 524, 535, 560, 563, 577, 595, 620, 624, 649, 654, 682, 683, 684, 685, 695, 696, 698, 699, 708, 710, 711, 712, 756, 780, 784, 787, 814, 843, 847, 851, 852, 865, 867, 869, 870, 873, 874, 876, 888], "mat": [4, 19, 195, 245, 270, 501, 620, 624, 870, 888], "store": [4, 16, 29, 30, 71, 90, 93, 94, 95, 104, 109, 115, 116, 135, 140, 141, 142, 143, 144, 149, 150, 151, 155, 156, 158, 160, 162, 168, 169, 170, 172, 175, 182, 189, 190, 191, 192, 200, 201, 206, 207, 210, 211, 213, 216, 218, 219, 223, 224, 242, 257, 258, 259, 263, 265, 266, 267, 268, 270, 275, 276, 277, 279, 283, 326, 347, 365, 382, 388, 395, 396, 405, 406, 415, 417, 428, 437, 442, 446, 451, 472, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 522, 541, 550, 552, 563, 571, 578, 583, 594, 613, 619, 620, 624, 627, 650, 660, 661, 673, 688, 708, 709, 711, 713, 714, 715, 716, 717, 718, 719, 728, 757, 764, 776, 809, 834, 835, 843, 847, 863, 864, 865, 867, 870, 873, 888], "fit": [4, 7, 8, 10, 11, 12, 13, 15, 16, 18, 21, 24, 40, 41, 45, 50, 59, 71, 72, 74, 75, 77, 79, 80, 81, 83, 88, 101, 111, 116, 123, 137, 141, 151, 152, 156, 158, 165, 166, 170, 172, 177, 179, 183, 184, 185, 186, 187, 189, 192, 196, 200, 203, 204, 207, 208, 209, 210, 212, 231, 245, 251, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270, 274, 275, 280, 301, 303, 307, 308, 314, 343, 344, 345, 346, 349, 353, 354, 355, 367, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 432, 434, 442, 452, 456, 481, 482, 493, 521, 524, 530, 560, 562, 563, 564, 567, 570, 572, 573, 574, 578, 584, 585, 595, 625, 657, 672, 693, 708, 710, 711, 712, 721, 756, 773, 780, 784, 788, 790, 792, 795, 796, 799, 800, 801, 803, 806, 808, 810, 811, 812, 816, 818, 847, 859, 864, 867, 870, 874, 877, 888], "inferenti": [4, 227], "evalu": [4, 31, 44, 54, 55, 162, 188, 196, 210, 212, 227, 245, 277, 362, 430, 439, 478, 479, 513, 545, 572, 584, 668, 864, 867, 869, 870], "signific": [4, 73, 100, 101, 112, 151, 165, 172, 188, 199, 201, 202, 204, 205, 207, 227, 229, 230, 231, 232, 233, 234, 242, 245, 262, 265, 266, 267, 268, 270, 320, 326, 355, 413, 419, 420, 452, 481, 482, 538, 562, 563, 618, 695, 696, 698, 699, 700, 708, 710, 712, 773, 788, 792, 795, 811, 816, 818, 863, 870, 873, 876], "jose": [4, 888], "garcia": 4, "alani": [4, 888], "jcg": 4, "gmail": [4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 32, 33, 34, 38, 39, 42, 43, 44, 45, 46, 50, 51, 57, 58, 61, 66, 70, 73, 74, 75, 77, 79, 80, 81, 82, 84, 88, 90, 93, 94, 95, 99, 101, 103, 109, 112, 113, 114, 118, 120, 121, 123, 125, 126, 127, 128, 129, 132, 133, 135, 136, 137, 141, 157, 159, 161, 179, 180, 182, 183, 184, 191, 195, 209, 224, 227, 231, 232, 235, 236, 237, 241, 242], "com": [4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 32, 33, 34, 38, 39, 42, 43, 44, 45, 46, 50, 51, 57, 58, 61, 66, 70, 73, 74, 75, 77, 79, 80, 81, 82, 84, 88, 90, 93, 94, 95, 101, 103, 109, 112, 113, 114, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 132, 133, 135, 136, 137, 141, 157, 159, 160, 161, 179, 180, 182, 183, 184, 191, 195, 209, 223, 224, 227, 231, 232, 235, 236, 237, 241, 242, 245, 265, 266, 267, 268, 276, 390, 481, 482, 489, 845, 847, 855, 867], "matplotlib": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 28, 29, 37, 38, 39, 41, 45, 47, 53, 58, 69, 70, 71, 72, 73, 74, 82, 86, 90, 92, 93, 96, 97, 99, 104, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 120, 127, 131, 132, 133, 136, 137, 144, 145, 146, 151, 160, 170, 171, 172, 176, 177, 180, 181, 183, 184, 195, 196, 200, 202, 203, 205, 206, 207, 208, 210, 211, 212, 216, 219, 224, 227, 228, 229, 230, 231, 232, 237, 241, 242, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 274, 275, 276, 279, 280, 281, 314, 315, 413, 420, 481, 482, 562, 563, 578, 629, 708, 709, 710, 712, 724, 734, 756, 757, 759, 769, 771, 773, 774, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 801, 803, 804, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 825, 826, 828, 845, 846, 847, 865, 888], "pyplot": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 28, 29, 37, 38, 39, 41, 45, 47, 53, 58, 69, 70, 71, 72, 73, 74, 82, 86, 90, 92, 93, 96, 97, 99, 104, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 120, 127, 131, 132, 133, 136, 137, 144, 145, 146, 151, 160, 170, 172, 176, 177, 180, 181, 183, 184, 195, 196, 202, 203, 206, 207, 210, 211, 212, 216, 224, 227, 228, 229, 230, 231, 232, 237, 241, 242, 264, 265, 266, 267, 268, 708, 724, 734, 759, 780, 790, 792, 817, 888], "plt": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 28, 29, 37, 38, 39, 41, 45, 47, 53, 58, 69, 70, 71, 72, 73, 74, 82, 86, 90, 92, 93, 96, 97, 99, 104, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 120, 127, 131, 132, 133, 136, 137, 144, 145, 146, 151, 160, 170, 172, 176, 177, 180, 181, 183, 184, 195, 196, 202, 203, 206, 207, 210, 211, 212, 216, 224, 227, 228, 229, 230, 231, 232, 237, 241, 242, 267, 268, 323, 724, 734, 794], "stat": [4, 96, 97, 99, 100, 101, 112, 113, 141, 195, 227, 228, 229, 230, 231, 232, 235, 236, 237, 242, 265, 266, 320, 331, 563, 571, 785, 865, 878, 885, 888], "linear_regress": [4, 101, 141, 227, 878, 888], "plot_ev": [4, 7, 137, 166, 211, 217, 265, 266, 786, 878, 888], "combine_evok": [4, 7, 99, 141, 144, 149, 151, 166, 176, 191, 211, 228, 230, 874, 878, 888], "subj": [4, 160, 205], "experi": [4, 19, 45, 66, 71, 128, 151, 165, 166, 168, 169, 180, 191, 200, 201, 207, 210, 211, 212, 213, 216, 217, 245, 270, 500, 843, 847, 864, 866, 870, 888], "particip": [4, 72, 74, 76, 77, 81, 82, 83, 90, 93, 127, 141, 144, 146, 151, 166, 167, 168, 169, 172, 192, 199, 200, 201, 203, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 242, 843, 864, 869, 876], "perform": [4, 8, 10, 13, 19, 31, 45, 54, 76, 82, 84, 100, 101, 103, 112, 119, 137, 140, 143, 144, 146, 149, 151, 155, 156, 157, 166, 167, 168, 169, 178, 188, 189, 192, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 216, 227, 229, 231, 235, 237, 258, 260, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 283, 288, 291, 298, 299, 355, 356, 357, 359, 361, 362, 377, 413, 416, 419, 420, 423, 425, 426, 429, 430, 434, 448, 449, 454, 456, 469, 470, 471, 472, 476, 478, 479, 481, 482, 488, 489, 496, 521, 522, 524, 525, 530, 531, 532, 533, 534, 536, 537, 541, 546, 547, 562, 563, 565, 568, 575, 576, 577, 578, 580, 581, 584, 585, 593, 595, 610, 622, 656, 659, 660, 661, 673, 685, 690, 694, 695, 696, 697, 698, 699, 701, 708, 710, 711, 712, 713, 714, 715, 716, 717, 718, 726, 727, 735, 736, 737, 738, 739, 746, 772, 773, 780, 786, 787, 788, 791, 795, 799, 801, 803, 808, 809, 810, 811, 816, 818, 822, 843, 845, 853, 854, 855, 863, 864, 870, 873, 888], "two": [4, 5, 12, 16, 19, 22, 32, 37, 42, 45, 47, 54, 55, 66, 68, 70, 71, 73, 75, 76, 81, 84, 88, 90, 112, 115, 117, 132, 133, 135, 137, 141, 142, 144, 146, 150, 151, 155, 156, 158, 160, 166, 168, 169, 170, 171, 172, 175, 178, 180, 190, 191, 192, 196, 199, 201, 202, 203, 204, 205, 206, 207, 208, 211, 216, 217, 218, 219, 224, 227, 229, 231, 235, 237, 240, 242, 245, 259, 265, 266, 267, 268, 271, 272, 273, 276, 277, 279, 280, 281, 298, 299, 314, 322, 356, 360, 361, 371, 372, 373, 405, 413, 415, 420, 424, 428, 436, 437, 447, 449, 451, 452, 453, 456, 457, 476, 478, 479, 481, 482, 505, 517, 536, 541, 558, 563, 566, 573, 578, 584, 593, 594, 609, 610, 649, 652, 661, 685, 689, 690, 691, 693, 695, 696, 697, 698, 699, 703, 708, 710, 711, 712, 726, 727, 737, 746, 756, 761, 764, 786, 787, 788, 796, 803, 809, 814, 843, 847, 853, 864, 867, 869, 870, 873, 888], "altern": [4, 114, 127, 161, 162, 169, 172, 191, 199, 201, 202, 205, 212, 213, 219, 227, 241, 242, 256, 258, 259, 262, 265, 266, 267, 268, 274, 356, 413, 420, 481, 482, 506, 524, 562, 563, 578, 617, 621, 697, 708, 710, 712, 756, 773, 788, 795, 799, 808, 811, 816, 818, 845, 847, 853, 864, 867, 873, 875, 888], "choic": [4, 114, 155, 160, 170, 171, 184, 202, 207, 217, 229, 278, 453, 463, 541, 701, 845, 851, 864, 870], "task": [4, 10, 32, 33, 34, 46, 71, 112, 113, 136, 137, 143, 144, 155, 156, 165, 169, 175, 196, 200, 205, 241, 245, 382, 416, 423, 724, 734, 735, 738, 864, 870, 871, 874, 876, 888], "discrimin": [4, 9, 18, 83, 196, 242, 245, 413, 417, 420, 563, 864], "between": [4, 8, 10, 16, 19, 22, 26, 27, 36, 38, 40, 45, 47, 59, 61, 70, 82, 83, 88, 96, 99, 100, 103, 108, 113, 114, 127, 128, 133, 134, 136, 137, 140, 141, 144, 146, 149, 150, 151, 156, 157, 158, 160, 161, 162, 165, 166, 169, 170, 171, 172, 176, 178, 188, 189, 190, 191, 192, 195, 196, 200, 201, 202, 204, 205, 206, 208, 209, 210, 211, 212, 213, 216, 217, 218, 224, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 242, 245, 257, 258, 259, 260, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 288, 310, 314, 320, 322, 323, 343, 355, 356, 362, 363, 365, 366, 367, 413, 414, 419, 425, 429, 432, 434, 436, 437, 439, 447, 454, 457, 458, 476, 478, 479, 481, 482, 500, 505, 522, 523, 536, 538, 541, 545, 546, 547, 560, 563, 565, 566, 568, 571, 573, 574, 575, 578, 579, 580, 581, 582, 584, 585, 588, 593, 594, 595, 599, 601, 622, 625, 626, 649, 658, 659, 660, 661, 663, 665, 668, 669, 672, 673, 676, 678, 679, 680, 682, 683, 687, 688, 695, 696, 698, 699, 700, 703, 708, 709, 711, 713, 715, 716, 718, 723, 724, 727, 731, 732, 734, 735, 736, 738, 739, 746, 756, 761, 772, 774, 775, 777, 780, 782, 786, 789, 790, 792, 793, 795, 809, 810, 813, 814, 816, 819, 820, 822, 834, 843, 845, 847, 853, 855, 863, 864, 867, 869, 870, 873, 876, 888], "stimuli": [4, 19, 70, 116, 128, 141, 144, 146, 149, 151, 166, 180, 191, 195, 204, 245, 419, 566, 843, 864], "The": [4, 5, 7, 8, 9, 11, 14, 15, 16, 18, 19, 21, 27, 31, 34, 38, 41, 43, 44, 45, 46, 47, 48, 49, 52, 58, 59, 61, 64, 66, 68, 70, 75, 76, 79, 80, 81, 82, 83, 84, 88, 94, 95, 101, 103, 104, 107, 109, 110, 112, 113, 114, 115, 116, 120, 126, 127, 128, 134, 135, 136, 137, 138, 141, 142, 143, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 171, 172, 173, 174, 177, 181, 183, 184, 186, 187, 188, 189, 190, 191, 192, 195, 196, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 218, 219, 220, 221, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 241, 242, 243, 244, 245, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 296, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 382, 383, 387, 388, 389, 390, 391, 392, 394, 397, 405, 406, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 491, 492, 493, 494, 496, 498, 501, 502, 503, 504, 505, 506, 508, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 648, 649, 651, 652, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 743, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 761, 762, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 837, 838, 839, 840, 842, 843, 845, 847, 850, 851, 853, 859, 865, 866, 867, 868, 871, 872, 874, 876, 888], "same": [4, 18, 19, 28, 44, 45, 54, 55, 58, 71, 75, 76, 83, 90, 99, 103, 109, 113, 114, 127, 135, 140, 141, 142, 144, 149, 150, 151, 156, 160, 161, 162, 168, 169, 170, 171, 175, 176, 178, 183, 188, 190, 191, 192, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 217, 218, 219, 222, 227, 228, 229, 231, 232, 235, 236, 237, 240, 257, 259, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 285, 286, 288, 298, 301, 303, 311, 316, 319, 330, 355, 356, 360, 361, 362, 373, 375, 392, 413, 420, 421, 426, 434, 437, 438, 447, 448, 463, 466, 470, 471, 476, 480, 481, 482, 488, 489, 496, 497, 508, 511, 549, 563, 564, 565, 574, 577, 580, 581, 582, 584, 595, 596, 609, 613, 619, 620, 635, 653, 654, 658, 659, 660, 661, 668, 673, 674, 690, 694, 695, 696, 698, 699, 703, 708, 710, 711, 712, 724, 726, 727, 733, 734, 735, 736, 737, 738, 739, 740, 746, 756, 761, 772, 773, 780, 786, 787, 788, 790, 792, 795, 797, 808, 809, 812, 814, 815, 817, 841, 847, 852, 859, 864, 867, 870, 871, 874, 888], "whole": [4, 28, 54, 55, 71, 162, 200, 227, 245, 272, 273, 276, 279, 280, 281, 447, 517, 595, 612, 657, 674, 709, 756, 782, 816, 847, 855, 864, 888], "vari": [4, 19, 22, 46, 47, 59, 141, 155, 190, 195, 202, 205, 206, 209, 210, 212, 224, 227, 265, 266, 270, 272, 273, 276, 279, 280, 281, 343, 344, 345, 346, 347, 348, 436, 447, 660, 699, 779, 864, 870, 873, 876, 888], "level": [4, 8, 9, 27, 36, 44, 56, 98, 101, 102, 122, 130, 141, 142, 144, 150, 151, 155, 160, 165, 166, 168, 170, 171, 180, 181, 188, 195, 199, 201, 202, 205, 206, 212, 224, 227, 229, 230, 231, 232, 233, 235, 236, 237, 242, 245, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 305, 306, 307, 308, 309, 310, 311, 314, 316, 318, 319, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 418, 419, 420, 423, 424, 426, 429, 430, 432, 434, 438, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 463, 464, 468, 469, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 517, 518, 519, 520, 521, 522, 524, 525, 526, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 554, 555, 556, 559, 560, 562, 563, 565, 566, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 584, 585, 586, 588, 589, 590, 591, 592, 593, 595, 596, 598, 599, 602, 603, 604, 607, 608, 609, 610, 614, 615, 616, 617, 618, 619, 621, 622, 623, 625, 626, 627, 629, 630, 631, 632, 633, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 652, 654, 656, 657, 659, 660, 661, 662, 672, 673, 676, 678, 679, 680, 681, 682, 683, 684, 687, 689, 691, 695, 696, 697, 698, 699, 703, 704, 705, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 725, 726, 727, 730, 731, 735, 736, 738, 739, 740, 741, 744, 745, 746, 751, 754, 755, 756, 764, 772, 773, 781, 784, 788, 789, 790, 791, 792, 795, 796, 799, 800, 801, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 818, 819, 820, 821, 825, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 845, 847, 854, 864, 865, 870, 872, 885, 888], "nois": [4, 5, 7, 11, 18, 21, 27, 28, 29, 30, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 63, 67, 71, 75, 82, 84, 88, 90, 93, 94, 95, 104, 107, 108, 109, 110, 114, 120, 122, 124, 130, 144, 146, 149, 151, 152, 162, 166, 172, 176, 178, 179, 180, 181, 182, 183, 184, 185, 189, 191, 195, 196, 200, 202, 204, 208, 210, 213, 216, 219, 224, 227, 235, 237, 245, 257, 262, 265, 266, 267, 268, 270, 272, 273, 275, 276, 279, 280, 281, 298, 299, 301, 303, 349, 355, 356, 357, 358, 359, 360, 361, 371, 372, 373, 413, 420, 421, 436, 456, 457, 476, 478, 479, 481, 482, 486, 518, 530, 536, 537, 541, 543, 546, 547, 563, 564, 577, 595, 603, 604, 616, 622, 660, 661, 662, 672, 710, 712, 736, 739, 781, 786, 790, 794, 796, 809, 810, 832, 843, 867, 873, 888], "less": [4, 5, 10, 18, 24, 26, 40, 41, 44, 45, 46, 49, 50, 71, 79, 87, 114, 119, 124, 140, 141, 143, 150, 151, 156, 158, 159, 171, 172, 176, 181, 183, 184, 185, 188, 199, 200, 202, 203, 205, 207, 208, 210, 211, 212, 216, 223, 227, 229, 242, 365, 454, 478, 479, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 522, 530, 563, 571, 591, 593, 600, 695, 696, 697, 698, 699, 703, 756, 847, 854, 864, 867, 869, 870, 888], "discern": [4, 864], "observ": [4, 76, 101, 137, 144, 151, 156, 205, 207, 211, 212, 227, 229, 231, 232, 235, 237, 242, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 452, 481, 482, 563, 689, 694, 695, 696, 697, 698, 699, 708, 710, 711, 712, 713, 714, 715, 809, 843, 863, 864], "fig": [4, 5, 10, 11, 12, 13, 15, 18, 19, 21, 22, 24, 39, 41, 42, 45, 47, 52, 58, 68, 69, 70, 71, 72, 73, 74, 80, 81, 82, 87, 93, 96, 99, 103, 104, 109, 112, 113, 114, 115, 116, 118, 120, 123, 124, 125, 127, 135, 136, 137, 141, 144, 146, 150, 151, 156, 157, 158, 159, 160, 166, 170, 172, 176, 177, 178, 180, 181, 182, 183, 185, 191, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 224, 227, 228, 230, 231, 232, 241, 242, 262, 263, 264, 265, 266, 267, 268, 274, 275, 278, 280, 281, 314, 315, 413, 420, 481, 482, 562, 563, 708, 709, 710, 712, 759, 769, 772, 773, 774, 776, 777, 778, 779, 780, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 816, 817, 820, 826, 888], "similar": [4, 16, 17, 18, 19, 20, 27, 33, 58, 61, 71, 88, 103, 109, 112, 114, 131, 136, 137, 140, 141, 142, 143, 144, 150, 160, 170, 196, 199, 200, 202, 204, 205, 206, 207, 208, 211, 216, 223, 227, 229, 232, 240, 245, 258, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 298, 356, 365, 414, 429, 447, 454, 481, 482, 513, 560, 563, 578, 584, 663, 708, 711, 712, 746, 756, 771, 790, 812, 845, 847, 852, 853, 854, 864, 865, 869, 870, 876, 888], "approach": [4, 10, 19, 21, 44, 45, 46, 59, 74, 76, 103, 127, 141, 143, 144, 149, 150, 151, 156, 160, 163, 164, 165, 166, 167, 172, 180, 195, 196, 199, 200, 202, 203, 204, 205, 208, 210, 212, 224, 227, 228, 231, 233, 242, 245, 270, 367, 391, 486, 520, 563, 580, 593, 602, 646, 772, 824, 843, 855, 863, 864, 865, 869, 870, 888], "across": [4, 16, 17, 18, 19, 20, 26, 27, 28, 32, 33, 47, 54, 55, 58, 61, 80, 83, 84, 103, 109, 113, 114, 135, 137, 140, 141, 142, 143, 145, 149, 150, 153, 155, 162, 165, 166, 168, 172, 180, 196, 199, 200, 202, 204, 205, 206, 207, 208, 210, 212, 219, 222, 223, 227, 235, 236, 237, 241, 245, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 277, 279, 280, 281, 319, 361, 362, 413, 416, 420, 422, 423, 425, 426, 427, 438, 447, 481, 482, 500, 527, 539, 540, 545, 560, 563, 565, 568, 578, 622, 632, 652, 673, 699, 703, 708, 709, 710, 711, 712, 719, 726, 735, 736, 738, 739, 771, 775, 780, 787, 788, 790, 791, 795, 808, 810, 814, 817, 820, 843, 847, 863, 864, 867, 870, 876, 888], "signal": [4, 8, 9, 10, 13, 15, 16, 19, 21, 27, 28, 42, 45, 51, 58, 59, 60, 64, 71, 72, 74, 75, 76, 78, 82, 85, 88, 100, 103, 111, 113, 114, 121, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 151, 152, 162, 165, 166, 172, 175, 178, 180, 184, 189, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 208, 214, 215, 216, 217, 219, 224, 225, 226, 227, 232, 243, 245, 257, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 279, 280, 281, 301, 303, 343, 345, 349, 350, 353, 356, 357, 358, 359, 361, 366, 373, 382, 405, 406, 413, 415, 417, 418, 419, 420, 421, 424, 425, 434, 437, 446, 447, 448, 449, 451, 452, 453, 454, 481, 482, 496, 502, 529, 530, 531, 544, 560, 561, 562, 563, 564, 565, 572, 574, 575, 576, 579, 580, 581, 584, 586, 594, 595, 616, 625, 627, 630, 649, 652, 672, 674, 675, 694, 695, 708, 710, 711, 712, 713, 714, 715, 723, 724, 726, 727, 731, 733, 734, 737, 738, 740, 756, 780, 786, 788, 790, 795, 796, 798, 799, 800, 801, 803, 809, 810, 843, 863, 864, 867, 888], "continuum": [4, 864, 888], "span": [4, 82, 119, 136, 140, 141, 149, 150, 151, 165, 166, 168, 178, 191, 199, 203, 214, 215, 216, 218, 219, 240, 242, 259, 265, 266, 267, 268, 270, 481, 482, 500, 560, 565, 566, 586, 622, 700, 708, 710, 712, 726, 771, 773, 810, 816, 863, 864, 865, 870, 876, 888], "85": [4, 13, 19, 35, 37, 47, 79, 90, 103, 109, 112, 114, 137, 140, 145, 146, 160, 169, 176, 182, 195, 196, 203, 209, 227, 228, 231, 232, 888], "increas": [4, 11, 32, 55, 71, 112, 151, 172, 192, 202, 205, 206, 211, 212, 224, 229, 232, 242, 263, 264, 265, 266, 267, 268, 272, 273, 275, 276, 279, 280, 281, 454, 481, 482, 492, 563, 584, 603, 695, 696, 698, 699, 708, 711, 724, 734, 735, 736, 737, 738, 739, 740, 756, 760, 786, 803, 809, 864, 870, 888], "step": [4, 8, 11, 15, 18, 24, 41, 46, 59, 64, 69, 94, 99, 103, 109, 112, 120, 127, 140, 142, 151, 152, 158, 161, 166, 167, 168, 170, 172, 190, 191, 196, 199, 200, 201, 202, 205, 207, 208, 210, 212, 216, 227, 228, 242, 245, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 290, 292, 343, 344, 345, 349, 413, 419, 428, 431, 454, 455, 471, 472, 479, 481, 482, 498, 558, 563, 573, 578, 584, 593, 658, 675, 695, 696, 698, 699, 700, 723, 731, 746, 756, 772, 780, 809, 820, 847, 848, 853, 855, 861, 863, 864, 869, 870, 874, 876, 888], "other": [4, 43, 62, 71, 83, 84, 112, 127, 141, 143, 145, 150, 151, 155, 156, 160, 166, 168, 169, 170, 172, 175, 177, 180, 181, 188, 189, 191, 192, 196, 199, 200, 203, 204, 205, 206, 207, 208, 209, 212, 216, 218, 219, 223, 224, 227, 231, 240, 242, 257, 259, 260, 261, 262, 263, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 284, 314, 326, 327, 355, 362, 367, 419, 421, 430, 432, 434, 436, 437, 442, 446, 458, 462, 463, 476, 478, 479, 481, 482, 493, 530, 541, 552, 562, 563, 584, 590, 595, 609, 613, 615, 626, 629, 635, 638, 644, 646, 657, 668, 673, 679, 694, 708, 709, 710, 711, 712, 756, 769, 777, 784, 786, 788, 799, 803, 809, 814, 836, 841, 843, 852, 853, 854, 855, 859, 863, 864, 865, 867, 869, 873, 876, 888], "word": [4, 101, 143, 151, 155, 168, 175, 196, 202, 206, 207, 210, 227, 228, 242, 245, 396, 419, 737, 740, 756, 769, 843, 847, 864, 870, 876], "g": [4, 8, 28, 31, 37, 41, 42, 44, 69, 70, 71, 80, 81, 84, 96, 101, 112, 114, 115, 120, 126, 127, 137, 140, 141, 143, 150, 151, 155, 160, 161, 162, 166, 168, 169, 170, 171, 180, 188, 189, 190, 195, 196, 199, 201, 202, 203, 204, 205, 206, 208, 213, 216, 217, 222, 223, 227, 228, 232, 235, 237, 241, 242, 245, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 298, 299, 300, 305, 312, 314, 315, 320, 329, 331, 340, 342, 353, 356, 360, 361, 367, 371, 372, 373, 382, 388, 391, 396, 405, 406, 413, 415, 416, 419, 420, 422, 423, 424, 427, 428, 429, 432, 433, 434, 437, 442, 445, 446, 447, 449, 451, 452, 454, 455, 456, 457, 463, 469, 472, 475, 476, 478, 479, 480, 481, 482, 483, 494, 517, 519, 523, 524, 525, 530, 536, 537, 538, 541, 545, 546, 547, 549, 562, 563, 565, 566, 573, 574, 577, 578, 579, 580, 581, 583, 584, 587, 590, 591, 595, 601, 602, 603, 610, 615, 622, 629, 630, 635, 642, 643, 644, 645, 646, 647, 653, 655, 663, 664, 665, 666, 667, 668, 669, 670, 672, 673, 676, 679, 693, 694, 695, 696, 697, 698, 699, 703, 704, 708, 710, 711, 712, 716, 717, 718, 719, 721, 724, 734, 737, 738, 739, 740, 756, 761, 769, 772, 773, 774, 779, 780, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 799, 800, 802, 803, 807, 808, 809, 810, 811, 814, 816, 818, 819, 822, 833, 836, 843, 845, 847, 848, 851, 853, 859, 863, 864, 867, 869, 870, 873, 874, 876, 888], "easi": [4, 133, 162, 166, 182, 188, 191, 200, 205, 208, 216, 218, 242, 275, 363, 419, 843, 845, 847, 853, 864, 865, 867, 870, 888], "identifi": [4, 12, 13, 27, 32, 33, 34, 78, 85, 137, 146, 151, 169, 191, 192, 196, 199, 205, 207, 224, 227, 245, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 314, 330, 337, 375, 416, 423, 465, 481, 482, 483, 487, 563, 567, 571, 578, 594, 604, 756, 765, 776, 814, 818, 819, 847, 863, 864, 867, 870, 873, 888], "whilelow": [4, 5, 11, 19, 45, 47, 59, 71, 75, 81, 82, 83, 84, 94, 110, 114, 141, 143, 151, 166, 167, 180, 183, 188, 191, 196, 200, 203, 205, 210, 211, 212, 227, 229, 231, 236, 245, 257, 260, 263, 264, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 307, 356, 361, 415, 421, 424, 426, 448, 449, 451, 481, 482, 489, 492, 506, 530, 563, 568, 571, 575, 576, 580, 581, 584, 585, 586, 588, 589, 599, 661, 665, 670, 701, 702, 708, 711, 736, 739, 756, 786, 809, 843, 863, 864, 867, 869, 870, 888], "hard": [4, 114, 142, 205, 224, 365, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 522, 847, 864, 865, 867, 888], "extens": [4, 12, 43, 44, 136, 140, 151, 158, 160, 170, 189, 190, 192, 196, 217, 218, 257, 265, 266, 267, 268, 298, 299, 332, 333, 339, 420, 443, 444, 446, 481, 482, 488, 495, 498, 508, 595, 613, 622, 626, 709, 728, 756, 833, 850, 851, 863, 864, 870, 876, 888], "veri": [4, 10, 44, 45, 50, 61, 64, 70, 71, 80, 83, 114, 133, 141, 144, 151, 157, 160, 168, 172, 181, 200, 202, 203, 204, 205, 206, 207, 210, 224, 227, 236, 242, 298, 322, 437, 481, 694, 724, 734, 738, 843, 847, 850, 865, 870], "ll": [4, 7, 10, 19, 26, 34, 54, 59, 68, 71, 114, 115, 116, 117, 120, 127, 135, 136, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 156, 158, 160, 162, 166, 167, 168, 170, 171, 172, 179, 180, 181, 190, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 216, 217, 218, 219, 222, 224, 228, 231, 237, 240, 241, 847, 855, 867], "begin": [4, 19, 74, 93, 151, 156, 166, 168, 169, 171, 172, 175, 188, 191, 195, 199, 201, 202, 203, 204, 205, 206, 207, 212, 218, 222, 242, 259, 260, 265, 266, 267, 268, 272, 273, 275, 276, 279, 280, 281, 284, 288, 361, 442, 455, 481, 482, 508, 522, 536, 546, 547, 563, 566, 580, 581, 584, 585, 588, 595, 625, 626, 675, 708, 711, 712, 721, 789, 800, 801, 803, 810, 816, 841, 847, 852, 870, 873, 888], "littl": [4, 160, 171, 188, 202, 203, 205, 206, 224, 242, 850, 870], "you": [4, 24, 27, 28, 32, 41, 43, 47, 50, 59, 61, 79, 82, 83, 88, 103, 109, 113, 114, 115, 116, 117, 119, 120, 121, 127, 133, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 158, 159, 160, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 177, 178, 180, 181, 182, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 216, 217, 218, 219, 222, 224, 227, 229, 230, 232, 235, 237, 240, 241, 242, 245, 257, 258, 259, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 282, 284, 290, 292, 298, 299, 315, 320, 330, 331, 332, 355, 356, 360, 361, 364, 365, 371, 372, 373, 378, 391, 413, 419, 420, 430, 437, 440, 446, 448, 454, 456, 457, 465, 472, 476, 478, 479, 481, 482, 483, 493, 497, 505, 528, 530, 541, 562, 563, 580, 584, 586, 596, 613, 619, 657, 672, 688, 703, 708, 710, 711, 712, 724, 734, 738, 754, 757, 759, 772, 773, 777, 779, 786, 787, 791, 796, 799, 801, 802, 803, 809, 814, 826, 843, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 858, 862, 863, 864, 865, 866, 867, 868, 870, 871, 873, 874, 888], "first": [4, 5, 7, 10, 11, 16, 19, 21, 28, 29, 32, 38, 39, 41, 42, 43, 44, 45, 47, 64, 71, 72, 80, 83, 84, 87, 88, 90, 94, 95, 103, 104, 108, 109, 112, 113, 114, 115, 120, 127, 131, 133, 134, 135, 136, 137, 140, 141, 142, 143, 145, 146, 149, 150, 151, 156, 157, 159, 160, 161, 162, 166, 167, 168, 169, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 184, 188, 190, 191, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 223, 224, 227, 228, 229, 231, 232, 235, 236, 237, 240, 241, 242, 245, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 284, 285, 286, 289, 297, 298, 299, 304, 319, 324, 325, 356, 364, 365, 371, 377, 388, 413, 419, 420, 428, 436, 437, 438, 441, 442, 444, 445, 447, 451, 452, 453, 454, 455, 461, 463, 471, 480, 481, 482, 502, 505, 506, 517, 523, 524, 529, 533, 539, 540, 558, 562, 563, 564, 566, 568, 571, 573, 578, 604, 609, 621, 622, 625, 629, 640, 652, 658, 660, 661, 664, 666, 667, 682, 683, 684, 689, 693, 694, 695, 696, 698, 699, 700, 702, 708, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 743, 746, 756, 761, 764, 772, 780, 784, 786, 787, 788, 789, 792, 793, 795, 799, 800, 801, 803, 808, 809, 810, 811, 814, 816, 818, 819, 833, 834, 843, 845, 846, 855, 863, 864, 867, 870, 873, 874, 888], "limo_epoch": 4, "process": [4, 7, 27, 28, 32, 34, 45, 51, 59, 69, 70, 80, 84, 88, 101, 122, 135, 142, 143, 144, 149, 151, 152, 155, 156, 160, 161, 162, 166, 171, 172, 177, 182, 184, 188, 200, 201, 202, 203, 205, 206, 207, 208, 210, 212, 216, 218, 222, 227, 228, 229, 237, 242, 245, 257, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 275, 276, 279, 280, 281, 288, 290, 292, 298, 299, 301, 356, 360, 361, 364, 371, 372, 373, 388, 396, 413, 415, 420, 421, 426, 430, 436, 437, 452, 456, 457, 476, 478, 479, 481, 482, 483, 492, 502, 536, 541, 563, 564, 573, 584, 595, 596, 603, 610, 612, 625, 655, 657, 661, 681, 684, 695, 696, 698, 699, 708, 710, 711, 712, 735, 786, 790, 796, 809, 810, 845, 854, 855, 859, 862, 863, 864, 867, 869, 870, 873, 874, 876, 877, 878, 888], "epochsarrai": [4, 188, 222, 260, 265, 268, 363, 482, 620, 878, 888], "readi": [4, 5, 11, 13, 14, 15, 16, 18, 19, 27, 28, 29, 32, 33, 34, 42, 45, 46, 49, 62, 64, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 83, 84, 88, 92, 93, 96, 97, 99, 100, 103, 104, 107, 109, 110, 111, 113, 114, 115, 117, 118, 121, 122, 123, 124, 129, 130, 132, 133, 135, 141, 144, 146, 150, 151, 152, 156, 158, 159, 161, 162, 166, 167, 168, 169, 171, 172, 177, 180, 182, 183, 190, 196, 199, 203, 204, 205, 206, 207, 208, 209, 210, 216, 219, 222, 223, 224, 229, 230, 231, 232, 235, 237, 241, 267, 270, 276, 481, 596, 625, 635, 756, 775, 847, 864], "1055": 4, "good": [4, 5, 21, 31, 49, 71, 72, 74, 77, 81, 82, 83, 90, 93, 117, 123, 127, 137, 140, 141, 143, 146, 151, 157, 166, 167, 168, 169, 171, 177, 184, 191, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 229, 235, 237, 242, 245, 260, 263, 265, 266, 267, 268, 270, 298, 299, 301, 303, 329, 346, 356, 360, 361, 371, 372, 373, 413, 415, 420, 421, 426, 429, 456, 457, 470, 472, 476, 478, 479, 481, 482, 522, 541, 554, 557, 560, 562, 563, 565, 568, 570, 573, 578, 579, 582, 584, 603, 610, 618, 629, 635, 676, 694, 703, 708, 710, 711, 712, 716, 717, 718, 719, 721, 736, 738, 739, 784, 786, 787, 790, 796, 810, 817, 846, 847, 854, 858, 864, 867, 868, 869, 870, 871, 888], "299944": 4, "499907": 4, "213": [4, 35, 112, 169, 209, 219, 224, 232], "7": [4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21, 28, 30, 32, 33, 34, 35, 39, 40, 41, 42, 44, 45, 46, 47, 49, 55, 56, 59, 61, 62, 65, 66, 69, 71, 72, 74, 75, 77, 80, 81, 82, 83, 88, 93, 94, 96, 97, 103, 104, 106, 107, 108, 109, 112, 113, 114, 115, 120, 127, 128, 131, 136, 137, 140, 142, 143, 144, 145, 146, 148, 149, 151, 156, 158, 159, 160, 166, 169, 170, 171, 172, 176, 179, 180, 181, 182, 183, 184, 185, 187, 191, 195, 196, 199, 201, 202, 203, 205, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 222, 223, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 245, 256, 263, 264, 265, 266, 267, 268, 272, 273, 276, 278, 279, 280, 281, 316, 337, 356, 382, 391, 405, 412, 424, 426, 454, 473, 478, 481, 482, 563, 568, 584, 593, 595, 599, 613, 647, 648, 674, 688, 689, 690, 708, 711, 712, 714, 717, 724, 734, 735, 736, 738, 739, 756, 787, 792, 801, 814, 815, 819, 845, 846, 853, 862, 864, 870, 873], "A": [4, 8, 9, 11, 16, 19, 21, 26, 31, 35, 42, 43, 44, 71, 76, 79, 83, 101, 103, 113, 120, 121, 126, 127, 128, 132, 133, 135, 137, 142, 143, 151, 155, 157, 160, 161, 162, 166, 168, 169, 171, 172, 175, 180, 188, 189, 196, 199, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 216, 218, 219, 224, 227, 228, 229, 231, 235, 236, 237, 240, 245, 256, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 289, 291, 298, 306, 312, 314, 317, 318, 319, 322, 323, 326, 342, 356, 359, 362, 367, 368, 370, 372, 382, 390, 391, 394, 396, 405, 406, 415, 417, 421, 430, 435, 437, 438, 449, 450, 451, 452, 456, 464, 465, 466, 470, 473, 476, 481, 482, 483, 488, 489, 490, 491, 492, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 515, 516, 523, 530, 531, 537, 545, 553, 555, 556, 558, 561, 562, 563, 564, 571, 577, 578, 582, 583, 584, 593, 596, 602, 604, 610, 612, 615, 622, 643, 649, 652, 657, 660, 661, 662, 668, 671, 672, 674, 685, 688, 689, 691, 692, 694, 695, 696, 697, 698, 699, 700, 703, 708, 709, 710, 711, 712, 713, 714, 715, 722, 724, 727, 734, 735, 736, 737, 738, 739, 740, 743, 746, 756, 759, 769, 771, 772, 774, 776, 779, 780, 782, 786, 792, 793, 794, 796, 797, 809, 810, 812, 814, 817, 818, 819, 843, 845, 862, 863, 864, 865, 869, 870, 873, 875, 876, 886, 888], "524": [4, 196, 232], "b": [4, 8, 10, 12, 22, 28, 37, 38, 44, 97, 110, 111, 127, 128, 137, 202, 205, 206, 211, 217, 219, 224, 227, 228, 231, 235, 236, 237, 242, 245, 257, 260, 265, 266, 267, 268, 272, 273, 275, 276, 277, 279, 280, 281, 288, 356, 362, 382, 405, 406, 434, 448, 450, 481, 482, 546, 547, 580, 581, 625, 626, 661, 689, 691, 694, 702, 708, 711, 721, 735, 736, 738, 739, 756, 780, 786, 809, 816, 847, 864, 867, 870, 888], "531": [4, 106, 107, 232], "visualis": [4, 27, 29, 30, 48, 49, 50, 54, 55, 78, 85, 101, 165, 176, 211, 233, 234, 259, 265, 267, 268, 270, 320, 326, 355, 482, 510, 598, 602, 618, 699], "distribut": [4, 19, 22, 26, 46, 48, 54, 55, 59, 61, 73, 116, 145, 150, 155, 162, 165, 166, 177, 186, 187, 191, 205, 207, 227, 229, 232, 235, 236, 241, 242, 245, 262, 263, 265, 266, 267, 268, 269, 270, 274, 276, 366, 478, 481, 482, 529, 530, 541, 571, 602, 616, 625, 627, 640, 656, 660, 690, 693, 695, 696, 698, 699, 710, 712, 756, 765, 772, 784, 817, 824, 843, 852, 853, 854, 863, 864, 867, 869, 870, 888], "appear": [4, 94, 101, 140, 144, 158, 168, 172, 180, 183, 191, 199, 202, 203, 208, 218, 257, 265, 266, 267, 268, 275, 434, 481, 482, 492, 517, 774, 812, 843, 847, 864, 870, 873, 888], "clearli": [4, 21, 127, 144, 152, 166, 191, 203, 205, 207, 209], "group": [4, 27, 68, 71, 109, 112, 122, 130, 137, 140, 142, 143, 145, 151, 155, 160, 161, 167, 172, 178, 202, 219, 224, 227, 228, 231, 232, 236, 237, 245, 257, 265, 266, 267, 268, 270, 275, 298, 299, 316, 326, 430, 439, 440, 442, 473, 481, 482, 497, 563, 578, 657, 673, 690, 696, 699, 761, 786, 787, 792, 809, 812, 843, 847, 854, 870, 878, 888], "order": [4, 16, 18, 19, 27, 31, 34, 38, 45, 47, 70, 71, 75, 82, 84, 88, 92, 94, 107, 111, 112, 114, 117, 121, 123, 128, 136, 143, 144, 145, 149, 156, 160, 161, 162, 165, 166, 169, 172, 177, 188, 190, 195, 199, 200, 201, 204, 205, 206, 207, 209, 210, 212, 216, 219, 224, 229, 232, 237, 245, 257, 258, 260, 262, 265, 266, 267, 268, 269, 270, 271, 274, 275, 289, 304, 319, 326, 343, 345, 349, 356, 363, 365, 369, 413, 415, 419, 420, 424, 434, 438, 442, 448, 449, 450, 451, 452, 457, 466, 481, 482, 488, 489, 496, 527, 529, 536, 537, 539, 540, 554, 555, 556, 562, 563, 571, 573, 574, 575, 576, 577, 584, 595, 609, 627, 641, 652, 685, 690, 704, 708, 709, 710, 711, 712, 720, 721, 725, 741, 743, 746, 753, 761, 773, 786, 787, 788, 792, 795, 797, 799, 803, 804, 808, 809, 811, 812, 816, 817, 818, 845, 847, 863, 867, 870, 873, 888], "suptitl": [4, 18, 22, 37, 42, 45, 71, 74, 80, 87, 90, 103, 109, 112, 116, 120, 133, 141, 144, 146, 151, 160, 176, 191, 195, 200, 202, 203, 205, 206, 207, 208, 210, 211, 227, 888], "As": [4, 38, 43, 71, 88, 94, 112, 136, 140, 143, 145, 149, 150, 151, 157, 160, 166, 167, 168, 169, 170, 172, 175, 180, 188, 191, 195, 196, 199, 200, 201, 202, 204, 205, 207, 208, 210, 213, 216, 217, 218, 219, 222, 229, 231, 237, 240, 242, 247, 421, 442, 498, 510, 578, 694, 703, 756, 780, 863, 869, 870, 873, 876, 888], "seen": [4, 12, 27, 75, 140, 143, 144, 146, 150, 151, 156, 169, 170, 196, 199, 203, 206, 207, 211, 212, 216, 219, 298, 420, 660, 661, 736, 739, 847, 870, 871, 873], "abov": [4, 21, 42, 43, 45, 49, 61, 71, 75, 76, 82, 88, 114, 116, 140, 142, 144, 150, 151, 156, 160, 161, 166, 167, 168, 170, 171, 172, 175, 188, 190, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 216, 217, 219, 222, 224, 231, 232, 242, 245, 259, 262, 265, 266, 267, 268, 270, 278, 355, 413, 415, 420, 424, 437, 443, 444, 446, 449, 451, 481, 482, 483, 489, 510, 562, 563, 565, 584, 594, 604, 695, 696, 698, 699, 708, 710, 712, 736, 739, 746, 756, 780, 787, 788, 795, 799, 801, 811, 812, 816, 818, 843, 846, 847, 852, 863, 867, 870, 871, 874], "These": [4, 27, 45, 54, 55, 61, 71, 94, 137, 138, 144, 145, 147, 151, 153, 155, 158, 160, 162, 163, 165, 166, 167, 170, 172, 173, 178, 180, 186, 188, 189, 190, 192, 193, 195, 196, 197, 201, 202, 205, 209, 211, 214, 219, 220, 224, 225, 227, 228, 233, 238, 242, 243, 256, 265, 266, 267, 268, 270, 282, 307, 308, 327, 356, 360, 361, 362, 432, 481, 482, 526, 563, 573, 584, 595, 626, 665, 670, 694, 708, 710, 711, 712, 843, 847, 854, 863, 864, 867, 869, 870, 871, 873, 876, 888], "easili": [4, 43, 44, 101, 140, 144, 149, 160, 168, 170, 188, 190, 199, 202, 205, 207, 208, 216, 217, 218, 219, 235, 242, 440, 481, 482, 584, 694, 847, 854, 863, 870, 888], "access": [4, 52, 101, 132, 158, 166, 168, 169, 175, 192, 206, 216, 218, 219, 240, 245, 258, 260, 265, 266, 269, 278, 481, 482, 619, 621, 710, 711, 712, 737, 740, 847, 853, 865, 869, 873, 888], "call": [4, 18, 31, 43, 44, 87, 88, 94, 117, 128, 140, 142, 144, 145, 146, 149, 150, 151, 155, 156, 158, 160, 161, 166, 168, 170, 171, 172, 175, 178, 182, 190, 196, 199, 200, 202, 203, 205, 206, 210, 212, 216, 217, 218, 219, 227, 229, 231, 232, 237, 241, 242, 257, 263, 264, 265, 266, 267, 268, 271, 272, 273, 275, 276, 277, 279, 280, 281, 283, 310, 314, 356, 357, 359, 361, 362, 367, 416, 419, 423, 426, 429, 430, 434, 446, 448, 456, 469, 471, 481, 482, 489, 496, 510, 521, 524, 525, 530, 531, 532, 533, 534, 536, 537, 546, 547, 563, 568, 573, 574, 575, 576, 580, 582, 584, 595, 610, 646, 656, 659, 660, 661, 673, 678, 682, 695, 696, 697, 698, 699, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 724, 726, 727, 734, 735, 736, 737, 738, 739, 753, 754, 756, 773, 780, 786, 787, 788, 791, 794, 795, 810, 818, 843, 845, 846, 847, 851, 855, 865, 867, 869, 870, 873, 874, 878, 888], "shown": [4, 32, 52, 71, 80, 83, 94, 101, 118, 120, 127, 136, 142, 149, 150, 151, 156, 158, 162, 166, 172, 180, 182, 202, 206, 211, 216, 217, 219, 232, 262, 263, 264, 265, 266, 267, 268, 272, 273, 274, 276, 279, 280, 281, 314, 413, 420, 472, 481, 482, 513, 541, 562, 563, 578, 708, 710, 711, 712, 756, 772, 773, 774, 780, 781, 783, 784, 786, 788, 790, 792, 793, 794, 795, 797, 799, 806, 808, 809, 810, 811, 812, 814, 815, 816, 817, 818, 819, 826, 870, 871, 873, 888], "below": [4, 10, 19, 43, 47, 76, 112, 114, 127, 140, 151, 155, 160, 161, 166, 168, 170, 172, 190, 192, 195, 202, 203, 205, 206, 207, 208, 210, 211, 212, 218, 227, 232, 235, 237, 240, 242, 245, 260, 262, 263, 264, 265, 266, 267, 268, 272, 273, 276, 277, 278, 279, 280, 281, 308, 314, 362, 415, 424, 432, 440, 449, 451, 472, 481, 482, 498, 530, 563, 565, 571, 573, 660, 694, 695, 696, 698, 699, 708, 711, 756, 775, 787, 792, 796, 799, 801, 814, 819, 820, 843, 847, 853, 863, 867, 869, 870, 874, 878, 888], "also": [4, 10, 19, 21, 27, 28, 29, 30, 32, 38, 39, 41, 42, 43, 45, 47, 61, 63, 70, 71, 72, 79, 80, 81, 83, 84, 94, 95, 101, 104, 107, 109, 112, 114, 116, 117, 120, 126, 127, 135, 138, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 155, 156, 157, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 180, 181, 182, 183, 184, 188, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 227, 228, 229, 231, 232, 235, 237, 240, 241, 242, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 298, 299, 306, 307, 308, 312, 314, 316, 324, 325, 329, 331, 332, 342, 349, 356, 361, 362, 368, 371, 374, 382, 390, 413, 415, 420, 425, 429, 432, 434, 437, 448, 449, 451, 452, 453, 454, 456, 463, 466, 473, 476, 478, 479, 481, 482, 489, 493, 502, 506, 521, 524, 525, 536, 537, 538, 541, 560, 562, 563, 565, 566, 572, 573, 575, 578, 579, 580, 581, 585, 586, 587, 588, 590, 591, 601, 603, 609, 610, 617, 625, 642, 643, 646, 652, 656, 657, 664, 673, 676, 694, 695, 700, 703, 708, 710, 711, 712, 716, 717, 718, 719, 721, 736, 739, 745, 746, 754, 756, 772, 773, 779, 780, 781, 784, 786, 787, 788, 790, 792, 793, 795, 796, 798, 799, 800, 806, 807, 808, 809, 810, 811, 812, 814, 816, 818, 820, 822, 843, 845, 847, 850, 851, 852, 853, 854, 855, 862, 863, 864, 865, 867, 868, 869, 870, 871, 872, 873, 876, 878, 888], "conveni": [4, 11, 45, 71, 76, 137, 142, 151, 158, 161, 166, 169, 171, 172, 181, 196, 199, 202, 206, 207, 217, 222, 227, 228, 229, 232, 235, 236, 237, 241, 245, 265, 266, 267, 268, 269, 275, 480, 481, 482, 487, 513, 536, 563, 571, 580, 581, 649, 652, 654, 698, 699, 708, 710, 711, 712, 769, 845, 847, 851, 863, 864, 870, 888], "head": [4, 5, 10, 22, 26, 41, 43, 45, 50, 71, 72, 79, 80, 101, 109, 112, 115, 118, 120, 125, 127, 135, 136, 143, 145, 150, 151, 157, 159, 163, 164, 165, 166, 169, 170, 171, 172, 175, 176, 177, 178, 180, 181, 183, 184, 185, 188, 190, 191, 199, 200, 205, 207, 208, 210, 212, 214, 215, 216, 228, 242, 245, 262, 263, 265, 266, 267, 268, 269, 270, 274, 275, 278, 304, 306, 307, 308, 310, 314, 317, 318, 327, 330, 332, 337, 343, 344, 345, 346, 347, 349, 351, 352, 353, 354, 356, 363, 365, 366, 367, 368, 375, 389, 392, 413, 420, 432, 434, 456, 463, 464, 472, 473, 474, 475, 481, 482, 486, 488, 492, 493, 494, 501, 506, 508, 512, 514, 519, 520, 521, 524, 525, 526, 562, 563, 567, 570, 572, 573, 574, 578, 584, 591, 595, 596, 615, 620, 621, 624, 638, 656, 657, 659, 660, 661, 665, 670, 673, 676, 703, 708, 710, 712, 742, 743, 745, 756, 772, 773, 774, 779, 780, 784, 788, 790, 791, 792, 793, 795, 796, 798, 799, 806, 808, 810, 811, 812, 816, 818, 824, 834, 836, 841, 843, 847, 864, 873, 876, 877, 878, 888], "491210": 4, "235572": 4, "043707": 4, "642398": 4, "659978": 4, "now": [4, 19, 24, 26, 32, 41, 45, 50, 71, 73, 75, 84, 87, 88, 109, 111, 112, 113, 120, 127, 134, 135, 136, 137, 140, 141, 144, 145, 146, 151, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 172, 176, 178, 179, 180, 182, 183, 195, 199, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 216, 218, 224, 229, 231, 232, 235, 236, 237, 241, 242, 263, 265, 266, 267, 268, 322, 466, 481, 482, 652, 757, 777, 784, 847, 870, 873, 888], "let": [4, 10, 18, 21, 26, 32, 47, 55, 71, 72, 74, 87, 109, 113, 121, 127, 135, 136, 140, 141, 142, 144, 146, 150, 151, 152, 156, 158, 159, 160, 162, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 189, 196, 199, 200, 201, 202, 203, 204, 205, 207, 209, 210, 212, 216, 224, 227, 231, 232, 235, 236, 237, 241, 242, 515, 724, 734, 757, 847, 850, 888], "closer": [4, 24, 41, 109, 141, 158, 210, 227, 262, 265, 266, 267, 268, 274, 413, 420, 481, 482, 562, 563, 578, 657, 708, 710, 712, 773, 788, 795, 799, 808, 811, 816, 818], "want": [4, 41, 50, 83, 94, 112, 115, 120, 127, 135, 136, 140, 141, 142, 143, 144, 145, 149, 150, 151, 158, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 178, 180, 189, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 216, 217, 218, 222, 223, 227, 229, 231, 232, 235, 236, 242, 257, 258, 265, 266, 267, 268, 272, 276, 280, 320, 378, 437, 442, 481, 482, 563, 580, 724, 734, 738, 779, 809, 814, 826, 846, 847, 850, 854, 855, 867, 868, 869, 870, 873, 874], "includ": [4, 7, 28, 37, 41, 70, 71, 82, 86, 96, 97, 99, 103, 104, 107, 110, 113, 114, 123, 132, 135, 137, 140, 142, 143, 144, 146, 149, 151, 152, 155, 159, 160, 162, 166, 167, 168, 169, 170, 171, 172, 176, 180, 182, 185, 188, 189, 190, 192, 196, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 211, 212, 216, 218, 219, 222, 227, 229, 230, 231, 237, 245, 251, 256, 258, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 297, 299, 312, 315, 316, 320, 329, 331, 356, 361, 362, 369, 371, 415, 420, 429, 434, 437, 441, 442, 451, 452, 454, 466, 467, 480, 481, 482, 489, 492, 494, 496, 497, 498, 504, 508, 523, 525, 531, 533, 541, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 570, 571, 573, 574, 577, 579, 580, 581, 583, 584, 587, 591, 594, 595, 601, 603, 606, 610, 619, 621, 622, 625, 626, 627, 676, 693, 694, 703, 707, 708, 710, 711, 712, 716, 717, 718, 719, 721, 725, 737, 739, 740, 746, 752, 756, 780, 786, 787, 788, 789, 790, 792, 793, 800, 801, 805, 809, 810, 816, 833, 843, 845, 847, 849, 850, 851, 852, 853, 854, 855, 859, 863, 864, 865, 866, 867, 869, 870, 871, 872, 873, 874, 876, 888], "column": [4, 10, 31, 94, 95, 101, 112, 140, 141, 143, 145, 151, 166, 172, 175, 188, 191, 196, 207, 210, 211, 216, 227, 228, 259, 260, 262, 265, 266, 267, 268, 270, 272, 273, 274, 276, 279, 280, 281, 300, 329, 371, 413, 420, 437, 441, 442, 454, 455, 471, 481, 482, 523, 542, 545, 558, 562, 563, 564, 613, 620, 621, 622, 629, 693, 694, 708, 710, 711, 712, 756, 788, 789, 795, 796, 799, 807, 808, 811, 816, 833, 843, 870, 873, 888], "tabl": [4, 41, 123, 143, 144, 171, 172, 185, 189, 202, 216, 217, 240, 265, 266, 267, 268, 270, 272, 273, 275, 276, 278, 279, 280, 281, 465, 466, 481, 482, 541, 657, 756, 775, 780, 787, 814, 819, 820, 821, 825, 838, 843, 870, 873, 874, 888], "epochs_summari": 4, "describ": [4, 13, 16, 75, 99, 113, 117, 149, 151, 156, 158, 162, 165, 166, 168, 169, 170, 171, 172, 188, 192, 195, 199, 201, 206, 207, 208, 210, 211, 217, 218, 224, 225, 228, 233, 242, 245, 267, 268, 298, 355, 356, 362, 413, 421, 434, 437, 445, 481, 482, 562, 563, 564, 595, 631, 658, 678, 679, 680, 681, 682, 683, 684, 722, 724, 727, 734, 738, 796, 802, 843, 845, 863, 867, 869, 870, 873, 876, 888], "round": [4, 37, 109, 140, 145, 149, 160, 168, 172, 195, 202, 203, 205, 206, 212, 216, 224, 242, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 442, 481, 482, 708, 711, 888], "count": [4, 22, 71, 73, 140, 171, 211, 218, 227, 231, 235, 237, 260, 265, 266, 267, 268, 298, 299, 356, 360, 361, 370, 371, 372, 373, 413, 420, 436, 456, 457, 476, 478, 479, 522, 541, 573, 618, 695, 696, 698, 699, 796, 888], "uniqu": [4, 10, 18, 101, 143, 150, 151, 166, 168, 217, 227, 232, 263, 264, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 323, 442, 471, 481, 482, 524, 563, 619, 681, 684, 708, 710, 711, 712, 736, 739, 780, 790, 870, 873, 888], "nan": [4, 70, 71, 144, 210, 229, 230, 231, 232, 242, 481, 482, 510, 569, 584, 888], "top": [4, 74, 112, 115, 120, 127, 136, 140, 151, 158, 160, 161, 172, 176, 181, 192, 200, 203, 205, 206, 207, 208, 211, 216, 218, 219, 227, 257, 265, 266, 267, 268, 273, 279, 281, 756, 757, 774, 786, 790, 819, 843, 847, 870, 873, 888], "freq": [4, 9, 21, 32, 33, 34, 69, 104, 107, 109, 112, 114, 133, 137, 166, 195, 199, 202, 203, 212, 222, 229, 230, 231, 232, 240, 241, 242, 244, 257, 343, 345, 426, 452, 481, 482, 547, 688, 708, 709, 710, 711, 712, 722, 724, 726, 727, 732, 734, 735, 736, 737, 738, 739, 779, 797, 804, 876, 888], "std": [4, 16, 151, 191, 224, 237, 240, 241, 242, 265, 266, 267, 268, 316, 413, 420, 481, 482, 518, 708, 780, 787, 790, 793, 810], "min": [4, 9, 21, 22, 96, 97, 112, 114, 116, 136, 137, 141, 146, 157, 172, 195, 199, 205, 207, 216, 227, 228, 229, 230, 231, 232, 235, 236, 237, 262, 265, 266, 267, 268, 272, 273, 274, 276, 279, 280, 281, 323, 413, 415, 420, 424, 446, 449, 451, 481, 482, 562, 563, 575, 585, 586, 588, 590, 599, 603, 604, 708, 710, 712, 773, 787, 788, 795, 799, 808, 809, 810, 811, 814, 816, 817, 818, 819], "619": [4, 232], "852": 4, "084": 4, "875": [4, 143, 182, 870], "max": [4, 5, 8, 9, 19, 21, 22, 31, 32, 33, 34, 35, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 60, 61, 81, 84, 90, 93, 94, 96, 100, 109, 112, 115, 116, 121, 136, 141, 144, 150, 152, 157, 160, 162, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 195, 196, 203, 210, 216, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 256, 262, 265, 266, 267, 268, 272, 273, 274, 276, 279, 280, 281, 298, 299, 323, 360, 413, 415, 420, 424, 446, 447, 449, 451, 481, 482, 513, 539, 540, 545, 562, 563, 586, 590, 599, 604, 695, 696, 697, 698, 699, 701, 708, 710, 712, 724, 734, 756, 764, 773, 787, 788, 791, 795, 799, 808, 810, 811, 814, 816, 817, 818, 819, 875, 888], "642": [4, 59, 196, 209, 245, 479], "provid": [4, 5, 18, 19, 27, 43, 44, 66, 80, 90, 93, 94, 95, 103, 137, 140, 142, 146, 149, 150, 151, 155, 156, 160, 161, 165, 166, 167, 168, 169, 170, 171, 172, 175, 184, 185, 188, 189, 190, 192, 196, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 213, 216, 217, 218, 219, 222, 224, 228, 229, 232, 245, 246, 257, 259, 260, 262, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 286, 289, 298, 299, 304, 305, 312, 315, 323, 331, 355, 357, 358, 359, 360, 361, 362, 367, 371, 374, 388, 389, 392, 413, 415, 420, 429, 434, 437, 440, 451, 452, 454, 456, 466, 472, 473, 480, 481, 482, 501, 502, 512, 513, 515, 524, 529, 550, 562, 563, 565, 566, 573, 579, 580, 581, 584, 587, 595, 601, 603, 610, 620, 624, 635, 646, 657, 658, 673, 676, 693, 694, 696, 698, 699, 702, 708, 709, 710, 711, 712, 716, 717, 718, 719, 721, 724, 734, 735, 736, 737, 738, 739, 740, 743, 744, 746, 753, 756, 772, 773, 775, 780, 782, 786, 787, 788, 790, 791, 792, 793, 795, 798, 799, 803, 805, 808, 809, 810, 811, 814, 816, 818, 819, 820, 843, 845, 847, 848, 850, 851, 853, 854, 859, 862, 863, 864, 865, 867, 869, 870, 871, 873, 876, 878, 888], "command": [4, 123, 151, 155, 158, 160, 171, 185, 189, 265, 266, 270, 362, 472, 481, 482, 519, 563, 648, 786, 803, 809, 845, 846, 850, 851, 852, 853, 854, 855, 859, 863, 865, 878, 888], "ran": [4, 232, 270], "befor": [4, 5, 21, 24, 26, 41, 44, 45, 50, 62, 69, 71, 82, 86, 88, 90, 94, 119, 127, 136, 137, 140, 141, 142, 143, 144, 145, 149, 151, 156, 157, 158, 160, 161, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 180, 181, 183, 184, 185, 188, 191, 196, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 212, 216, 217, 218, 219, 224, 240, 242, 257, 258, 260, 262, 265, 266, 267, 268, 270, 272, 273, 275, 276, 277, 279, 280, 281, 298, 316, 343, 361, 364, 372, 373, 413, 419, 420, 422, 425, 437, 443, 444, 445, 446, 447, 448, 454, 455, 457, 481, 482, 522, 536, 537, 539, 540, 546, 547, 562, 563, 566, 575, 576, 580, 581, 584, 585, 610, 618, 625, 630, 664, 665, 666, 667, 668, 670, 672, 694, 695, 696, 698, 699, 703, 709, 710, 712, 773, 782, 787, 788, 790, 792, 794, 795, 800, 801, 802, 807, 810, 826, 838, 845, 855, 863, 864, 867, 869, 870, 873, 888], "There": [4, 75, 83, 120, 127, 141, 144, 151, 156, 158, 159, 166, 170, 171, 172, 177, 180, 190, 192, 199, 201, 202, 203, 205, 206, 210, 212, 213, 216, 218, 227, 240, 265, 405, 437, 563, 602, 657, 847, 851, 854, 864, 867, 868, 870, 872, 873], "subdivid": [4, 160, 161, 257, 272, 276, 280, 387, 656, 814, 888], "particular": [4, 27, 126, 140, 141, 155, 166, 168, 172, 175, 195, 196, 202, 205, 206, 216, 229, 237, 257, 259, 265, 266, 275, 305, 430, 457, 481, 482, 489, 630, 688, 695, 696, 698, 699, 786, 809, 845, 867, 869, 870, 871, 876], "addit": [4, 34, 42, 45, 61, 62, 71, 76, 82, 112, 114, 135, 140, 142, 145, 150, 152, 156, 160, 161, 162, 166, 170, 188, 189, 190, 191, 195, 196, 201, 202, 205, 206, 207, 208, 210, 212, 216, 218, 219, 222, 232, 242, 257, 262, 265, 266, 267, 268, 272, 273, 276, 277, 278, 279, 280, 281, 337, 355, 356, 361, 388, 413, 414, 415, 418, 420, 421, 424, 434, 437, 444, 446, 451, 481, 482, 487, 530, 531, 532, 533, 534, 536, 537, 543, 546, 547, 560, 561, 562, 563, 564, 575, 576, 596, 625, 651, 662, 694, 695, 696, 698, 699, 707, 708, 710, 711, 712, 727, 735, 736, 738, 739, 756, 769, 773, 786, 788, 790, 795, 801, 807, 809, 811, 814, 816, 818, 819, 847, 850, 851, 853, 854, 863, 864, 866, 867, 870, 873, 874, 876, 888], "valu": [4, 5, 7, 8, 9, 10, 16, 19, 21, 22, 24, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 58, 59, 60, 70, 72, 90, 93, 94, 96, 101, 103, 104, 109, 112, 114, 120, 121, 127, 131, 132, 135, 136, 137, 140, 141, 142, 143, 144, 146, 149, 150, 151, 152, 156, 160, 162, 166, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 195, 196, 201, 202, 203, 205, 206, 207, 210, 211, 212, 216, 218, 222, 223, 224, 227, 228, 229, 231, 232, 235, 236, 237, 240, 241, 245, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 288, 289, 298, 299, 301, 303, 304, 308, 311, 312, 316, 323, 327, 329, 331, 332, 350, 351, 356, 357, 359, 360, 361, 362, 367, 370, 371, 372, 373, 377, 388, 405, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 432, 434, 435, 437, 441, 442, 446, 447, 451, 452, 453, 454, 455, 456, 457, 458, 461, 466, 469, 471, 472, 473, 476, 478, 479, 481, 482, 483, 489, 491, 496, 500, 504, 506, 510, 515, 517, 518, 519, 521, 522, 524, 525, 526, 529, 530, 534, 536, 537, 538, 539, 540, 541, 544, 546, 547, 551, 562, 563, 564, 565, 566, 568, 569, 572, 575, 576, 578, 579, 580, 581, 584, 586, 587, 590, 591, 593, 601, 603, 604, 606, 610, 612, 618, 622, 625, 629, 638, 645, 649, 651, 652, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 681, 684, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 706, 708, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 724, 726, 727, 734, 735, 736, 737, 738, 739, 743, 744, 746, 756, 759, 765, 772, 773, 775, 778, 780, 781, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 799, 800, 807, 808, 809, 810, 811, 814, 816, 817, 818, 819, 820, 821, 826, 841, 843, 847, 863, 864, 867, 870, 873, 888], "z": [4, 5, 11, 16, 18, 24, 41, 45, 50, 128, 151, 156, 158, 159, 160, 169, 170, 175, 176, 180, 181, 183, 184, 185, 189, 202, 206, 208, 245, 262, 265, 266, 267, 268, 269, 273, 274, 279, 281, 307, 308, 314, 326, 337, 346, 347, 413, 420, 432, 481, 482, 493, 530, 562, 563, 568, 572, 578, 584, 627, 660, 661, 708, 710, 712, 746, 747, 749, 756, 773, 780, 786, 788, 790, 792, 795, 796, 798, 799, 803, 806, 808, 809, 810, 811, 812, 816, 818, 824, 825, 835, 843, 853, 870, 888], "score": [4, 7, 8, 9, 10, 11, 13, 15, 16, 18, 19, 75, 83, 137, 172, 195, 196, 205, 210, 275, 413, 416, 417, 419, 420, 423, 430, 563, 568, 578, 584, 664, 695, 696, 698, 699, 802, 825, 864, 867, 888], "thei": [4, 5, 26, 41, 45, 47, 50, 71, 72, 75, 82, 83, 94, 107, 114, 119, 140, 141, 142, 144, 149, 151, 152, 158, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 176, 180, 181, 182, 188, 190, 191, 192, 196, 199, 200, 201, 202, 203, 205, 206, 207, 210, 211, 212, 216, 217, 218, 219, 232, 235, 245, 258, 260, 265, 266, 267, 268, 270, 275, 298, 309, 311, 327, 336, 356, 363, 365, 434, 436, 442, 446, 448, 455, 481, 482, 489, 496, 502, 504, 506, 522, 539, 540, 552, 563, 574, 582, 584, 595, 610, 618, 619, 621, 652, 711, 751, 756, 773, 789, 790, 793, 838, 843, 845, 847, 850, 854, 863, 865, 869, 870, 888], "have": [4, 10, 19, 30, 31, 34, 35, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 61, 71, 72, 75, 79, 80, 83, 84, 86, 87, 90, 94, 95, 101, 103, 104, 112, 115, 116, 117, 119, 120, 127, 131, 134, 135, 137, 140, 142, 143, 144, 145, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 178, 179, 181, 182, 183, 188, 189, 190, 191, 192, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 231, 232, 235, 237, 240, 242, 256, 257, 258, 260, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 284, 292, 293, 296, 298, 299, 308, 316, 319, 322, 332, 355, 356, 360, 361, 362, 367, 371, 372, 373, 405, 413, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 432, 433, 434, 437, 438, 447, 448, 453, 456, 457, 463, 471, 473, 476, 478, 479, 480, 481, 482, 489, 492, 493, 496, 498, 502, 505, 521, 523, 532, 534, 537, 541, 549, 558, 562, 563, 564, 573, 574, 578, 580, 581, 582, 584, 586, 595, 613, 615, 625, 644, 646, 649, 652, 658, 659, 660, 661, 662, 673, 678, 682, 690, 694, 708, 709, 710, 711, 712, 727, 728, 735, 736, 746, 756, 760, 761, 773, 779, 780, 786, 787, 788, 790, 793, 795, 796, 799, 808, 810, 811, 816, 817, 818, 822, 826, 836, 838, 843, 845, 848, 852, 853, 855, 859, 864, 865, 868, 869, 870, 873, 874, 876, 888], "standard": [4, 8, 28, 34, 41, 44, 46, 71, 75, 83, 94, 109, 121, 135, 141, 149, 150, 151, 155, 159, 160, 169, 170, 171, 182, 191, 195, 196, 200, 202, 205, 208, 216, 222, 228, 237, 241, 245, 257, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 278, 279, 280, 281, 288, 314, 316, 325, 330, 332, 391, 413, 420, 422, 433, 446, 447, 462, 466, 469, 481, 482, 489, 493, 496, 506, 510, 530, 546, 547, 557, 562, 563, 584, 621, 628, 652, 657, 690, 693, 708, 710, 711, 712, 720, 721, 724, 734, 738, 756, 773, 774, 780, 781, 787, 788, 790, 795, 796, 799, 801, 808, 811, 814, 816, 817, 818, 820, 843, 845, 863, 864, 865, 867, 870, 873, 876, 878, 888], "deviat": [4, 54, 55, 90, 97, 100, 121, 150, 151, 178, 196, 205, 209, 227, 229, 241, 262, 265, 266, 267, 268, 288, 316, 413, 545, 546, 547, 563, 584, 670, 690, 708, 710, 711, 712, 724, 734, 738, 780, 781, 787, 790, 796, 799, 801, 816, 817, 843, 870, 888], "how": [4, 5, 9, 10, 13, 18, 19, 22, 26, 27, 31, 33, 43, 44, 45, 47, 58, 63, 65, 67, 68, 69, 70, 71, 72, 76, 79, 90, 94, 95, 98, 99, 105, 113, 116, 117, 120, 122, 124, 125, 127, 129, 130, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 155, 156, 157, 158, 159, 161, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 180, 181, 182, 183, 188, 190, 192, 195, 196, 201, 202, 203, 204, 205, 206, 208, 209, 211, 216, 217, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 237, 240, 241, 242, 245, 258, 260, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 276, 278, 279, 280, 281, 298, 299, 310, 314, 315, 340, 344, 350, 367, 368, 369, 375, 413, 419, 420, 425, 440, 455, 457, 471, 472, 476, 478, 479, 481, 482, 486, 494, 502, 503, 506, 513, 530, 539, 540, 541, 562, 563, 566, 574, 584, 595, 596, 637, 638, 639, 640, 648, 652, 695, 696, 698, 699, 706, 708, 709, 710, 711, 712, 727, 756, 757, 764, 772, 773, 777, 780, 782, 786, 787, 788, 791, 795, 799, 800, 801, 802, 808, 809, 811, 814, 815, 816, 818, 819, 824, 826, 843, 845, 847, 848, 855, 863, 864, 869, 870, 871, 873, 874, 876, 888], "onli": [4, 8, 10, 11, 12, 19, 21, 22, 31, 34, 39, 41, 44, 45, 47, 49, 50, 55, 64, 71, 75, 79, 82, 83, 88, 90, 93, 94, 95, 96, 97, 103, 107, 109, 112, 114, 115, 116, 117, 120, 127, 131, 133, 136, 137, 140, 141, 142, 143, 149, 150, 151, 157, 158, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 178, 180, 183, 188, 189, 190, 191, 192, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 229, 230, 231, 232, 235, 236, 237, 241, 242, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 305, 306, 307, 308, 309, 310, 311, 314, 315, 316, 318, 319, 320, 321, 323, 324, 325, 327, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 432, 434, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 461, 463, 464, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 524, 525, 526, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 554, 555, 556, 559, 560, 561, 562, 563, 565, 566, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 595, 596, 598, 599, 602, 603, 604, 607, 608, 609, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 629, 630, 631, 632, 633, 635, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 652, 654, 656, 657, 659, 660, 661, 662, 671, 672, 673, 674, 676, 678, 679, 680, 681, 682, 683, 684, 685, 694, 695, 696, 697, 698, 699, 703, 704, 705, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 725, 726, 727, 730, 731, 735, 736, 737, 738, 739, 740, 741, 744, 745, 746, 751, 755, 756, 764, 772, 773, 774, 775, 777, 780, 781, 784, 786, 788, 789, 790, 791, 792, 794, 795, 796, 797, 798, 799, 800, 801, 803, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 825, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 847, 854, 863, 864, 867, 868, 869, 870, 871, 873, 888], "500": [4, 10, 11, 22, 71, 80, 81, 86, 88, 106, 111, 116, 135, 141, 143, 145, 181, 184, 190, 192, 195, 196, 202, 205, 209, 211, 212, 213, 224, 227, 232, 563], "ts_arg": [4, 101, 128, 196, 211, 228, 265, 266, 267, 268, 563, 787, 793, 801, 888], "xlim": [4, 19, 37, 39, 97, 127, 160, 181, 195, 202, 203, 211, 212, 224, 227, 237, 242, 267, 268, 790, 792], "plot_joint": [4, 72, 101, 150, 151, 166, 180, 182, 196, 199, 205, 207, 211, 228, 241, 267, 268, 708, 874, 888], "15": [4, 5, 6, 9, 11, 12, 13, 19, 21, 22, 25, 28, 29, 32, 33, 34, 35, 42, 43, 45, 47, 50, 51, 56, 58, 60, 69, 70, 71, 72, 74, 76, 77, 79, 80, 81, 83, 85, 92, 93, 94, 103, 106, 107, 108, 109, 112, 114, 127, 135, 136, 137, 141, 142, 143, 145, 148, 151, 155, 157, 162, 166, 168, 169, 170, 171, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 195, 196, 201, 203, 204, 205, 207, 208, 209, 210, 211, 215, 216, 222, 227, 228, 229, 231, 232, 235, 236, 237, 239, 240, 245, 263, 265, 266, 267, 268, 272, 273, 274, 275, 276, 278, 279, 280, 281, 285, 320, 371, 415, 424, 449, 451, 452, 453, 478, 481, 482, 510, 563, 566, 575, 576, 640, 672, 692, 697, 710, 712, 727, 737, 738, 740, 760, 771, 772, 786, 794, 814, 819, 843, 850, 863, 864, 870], "titl": [4, 8, 9, 15, 16, 19, 22, 30, 35, 39, 42, 43, 44, 46, 47, 48, 49, 50, 54, 55, 59, 70, 71, 72, 77, 82, 86, 90, 94, 101, 103, 107, 108, 109, 110, 114, 120, 123, 125, 127, 132, 137, 141, 142, 144, 146, 151, 152, 160, 172, 175, 176, 177, 179, 180, 195, 196, 200, 202, 203, 205, 206, 207, 208, 210, 212, 224, 227, 228, 229, 232, 237, 241, 242, 245, 263, 265, 266, 267, 268, 272, 275, 276, 280, 481, 482, 562, 563, 708, 710, 712, 756, 776, 779, 780, 784, 785, 786, 787, 788, 790, 792, 793, 794, 797, 799, 800, 802, 803, 804, 809, 811, 812, 814, 817, 823, 847, 862, 888], "differ": [4, 9, 16, 21, 22, 27, 28, 33, 37, 39, 44, 45, 47, 54, 55, 64, 69, 71, 78, 80, 81, 85, 94, 96, 99, 101, 103, 107, 110, 111, 112, 114, 120, 122, 123, 127, 130, 134, 135, 137, 140, 142, 143, 144, 147, 149, 150, 151, 152, 156, 158, 160, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 180, 181, 183, 184, 185, 188, 189, 190, 191, 196, 199, 202, 203, 204, 205, 206, 207, 208, 210, 212, 216, 217, 218, 222, 227, 228, 229, 230, 232, 235, 236, 237, 241, 245, 259, 260, 265, 266, 267, 268, 269, 272, 273, 276, 279, 280, 281, 282, 298, 299, 300, 305, 322, 343, 356, 360, 361, 363, 365, 366, 371, 372, 373, 392, 405, 413, 420, 422, 434, 436, 437, 447, 454, 456, 457, 471, 472, 476, 478, 479, 481, 482, 489, 496, 504, 515, 522, 536, 538, 539, 540, 541, 550, 563, 565, 573, 574, 580, 584, 593, 595, 609, 612, 618, 619, 622, 626, 649, 659, 660, 661, 662, 668, 671, 672, 673, 674, 690, 695, 696, 697, 698, 699, 708, 709, 710, 711, 712, 724, 734, 738, 756, 761, 772, 782, 786, 790, 794, 795, 796, 801, 803, 809, 812, 814, 820, 834, 843, 845, 847, 851, 852, 855, 863, 864, 865, 867, 870, 873, 876, 888], "wave": [4, 46, 95, 114, 137, 144, 151, 166, 202, 207, 228, 240, 245, 265, 266, 267, 268, 405, 406, 481, 482, 512, 575, 580, 585, 710, 712, 720, 726, 864], "contrast": [4, 7, 88, 96, 99, 149, 151, 166, 170, 208, 224, 227, 228, 235, 240, 241, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 708, 711, 864, 874, 876, 888], "although": [4, 21, 66, 101, 140, 143, 149, 161, 172, 201, 202, 204, 206, 216, 263, 446, 481, 482, 690, 854, 870, 888], "shouldn": [4, 151, 245, 276, 279, 550], "expect": [4, 32, 38, 94, 114, 121, 144, 156, 159, 161, 162, 165, 166, 167, 172, 180, 190, 196, 202, 205, 206, 207, 211, 216, 217, 222, 224, 227, 231, 232, 237, 242, 265, 266, 267, 268, 332, 334, 339, 360, 481, 482, 488, 497, 501, 508, 541, 563, 595, 619, 620, 624, 635, 646, 756, 786, 796, 803, 809, 843, 845, 847, 866, 867, 869, 870, 871, 888], "great": [4, 120, 144, 151, 242, 865, 876], "among": [4, 10, 27, 36, 56, 172, 202, 227, 276, 278, 366, 540, 542, 544, 563, 584, 627, 630, 688, 756, 761, 859, 869, 888], "minu": [4, 141, 144, 229, 242, 563, 649, 693, 870, 873], "difference_wav": 4, "weight": [4, 5, 7, 11, 15, 18, 19, 21, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 54, 55, 58, 59, 61, 74, 75, 90, 94, 99, 104, 107, 108, 109, 110, 123, 137, 141, 144, 149, 151, 157, 166, 168, 176, 177, 178, 179, 180, 181, 182, 185, 188, 191, 195, 196, 200, 202, 203, 204, 206, 207, 208, 211, 223, 224, 227, 228, 230, 235, 236, 237, 245, 257, 270, 271, 276, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 355, 367, 417, 418, 419, 431, 434, 457, 458, 476, 478, 479, 492, 530, 536, 537, 541, 562, 563, 593, 664, 665, 670, 671, 674, 695, 696, 698, 699, 703, 715, 718, 726, 788, 811, 843, 863, 864, 873, 874, 888], "clear": [4, 75, 113, 117, 140, 157, 200, 204, 206, 210, 212, 224, 227, 262, 265, 266, 270, 274, 289, 304, 481, 482, 529, 743, 756, 787, 847, 876, 888], "pattern": [4, 11, 17, 19, 20, 21, 27, 46, 80, 83, 112, 113, 142, 143, 161, 166, 167, 172, 195, 199, 202, 205, 206, 207, 211, 242, 245, 265, 266, 267, 268, 270, 275, 314, 330, 365, 375, 413, 417, 419, 420, 421, 428, 431, 437, 442, 463, 496, 498, 560, 564, 622, 635, 645, 646, 661, 708, 710, 711, 847, 863, 864, 870, 873, 888], "when": [4, 21, 27, 28, 31, 44, 45, 46, 47, 61, 71, 75, 76, 81, 82, 83, 84, 90, 94, 95, 103, 107, 115, 126, 127, 140, 142, 143, 144, 145, 146, 149, 150, 151, 157, 158, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 178, 180, 182, 184, 188, 189, 190, 191, 192, 196, 199, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 227, 229, 232, 240, 241, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 298, 299, 311, 314, 318, 319, 341, 349, 350, 351, 355, 356, 360, 361, 362, 363, 365, 367, 371, 372, 373, 374, 377, 413, 420, 421, 424, 430, 432, 434, 438, 440, 442, 445, 447, 448, 449, 451, 452, 454, 456, 457, 460, 463, 472, 476, 478, 479, 481, 482, 489, 494, 496, 497, 498, 502, 504, 506, 510, 530, 531, 532, 533, 534, 536, 537, 541, 546, 547, 549, 552, 562, 563, 565, 568, 573, 574, 577, 578, 580, 584, 585, 587, 588, 595, 596, 610, 613, 615, 619, 621, 623, 625, 638, 644, 646, 647, 652, 657, 658, 669, 672, 695, 696, 697, 698, 699, 703, 707, 708, 709, 710, 711, 712, 714, 715, 717, 720, 724, 726, 734, 738, 746, 753, 756, 764, 765, 773, 780, 784, 786, 788, 789, 790, 792, 793, 795, 796, 798, 799, 801, 803, 806, 808, 809, 810, 811, 812, 814, 815, 816, 817, 818, 819, 822, 834, 836, 843, 845, 850, 851, 852, 853, 862, 863, 865, 867, 868, 869, 870, 871, 873, 874, 888], "howev": [4, 16, 21, 45, 71, 75, 76, 140, 142, 146, 149, 162, 167, 169, 170, 171, 172, 189, 190, 191, 192, 195, 196, 200, 202, 204, 205, 206, 207, 208, 212, 216, 217, 227, 229, 231, 232, 235, 237, 242, 265, 266, 270, 298, 314, 356, 405, 434, 496, 498, 512, 530, 697, 847, 867, 869, 870, 873, 876, 888], "could": [4, 28, 29, 30, 38, 39, 41, 43, 70, 84, 104, 140, 144, 151, 160, 161, 166, 169, 171, 172, 175, 179, 180, 181, 191, 199, 201, 205, 206, 207, 208, 210, 213, 216, 217, 218, 222, 227, 228, 235, 237, 242, 265, 266, 267, 268, 271, 276, 298, 382, 405, 406, 412, 434, 436, 440, 456, 481, 482, 483, 489, 563, 566, 581, 585, 586, 609, 759, 764, 829, 847, 867, 869, 876, 888], "narrow": [4, 199, 203, 242, 275, 888], "our": [4, 5, 19, 26, 27, 32, 42, 44, 63, 68, 71, 75, 80, 84, 93, 103, 109, 112, 114, 115, 120, 121, 127, 135, 136, 137, 140, 141, 142, 144, 145, 146, 150, 151, 156, 160, 166, 168, 171, 172, 175, 180, 181, 183, 184, 196, 199, 200, 202, 203, 205, 206, 207, 208, 210, 211, 212, 216, 217, 222, 224, 227, 229, 231, 232, 235, 236, 237, 240, 241, 242, 278, 453, 454, 538, 724, 734, 738, 752, 846, 847, 849, 850, 851, 852, 863, 866, 867, 869, 870, 871, 875, 876, 888], "search": [4, 151, 156, 196, 245, 275, 278, 298, 416, 423, 440, 461, 566, 571, 578, 724, 734, 735, 738, 772, 847, 852, 853, 867], "bit": [4, 5, 7, 109, 127, 141, 144, 160, 171, 180, 189, 202, 204, 209, 212, 227, 235, 237, 242, 265, 266, 270, 343, 481, 482, 489, 496, 503, 845, 853, 864, 870, 873, 888], "sinc": [4, 19, 32, 43, 44, 71, 94, 115, 119, 135, 140, 141, 142, 144, 151, 160, 166, 167, 169, 171, 172, 175, 178, 188, 189, 191, 200, 201, 202, 203, 204, 205, 206, 207, 208, 213, 216, 217, 218, 222, 227, 230, 235, 237, 242, 259, 260, 265, 266, 267, 268, 271, 275, 276, 279, 291, 314, 340, 356, 360, 361, 434, 443, 444, 445, 446, 457, 469, 481, 482, 525, 550, 563, 574, 580, 584, 595, 695, 696, 697, 698, 699, 773, 800, 847, 863, 867, 870, 873, 888], "paradigm": [4, 7, 144, 162, 166, 199, 202, 789, 864, 888], "might": [4, 5, 19, 21, 71, 120, 127, 141, 144, 151, 156, 161, 162, 167, 168, 176, 192, 196, 202, 205, 208, 227, 232, 235, 242, 272, 276, 280, 334, 437, 549, 563, 603, 695, 814, 845, 846, 847, 863, 866, 867, 870, 888], "best": [4, 5, 10, 16, 74, 83, 121, 135, 142, 149, 162, 166, 176, 177, 178, 180, 192, 195, 201, 205, 210, 224, 271, 356, 361, 421, 481, 482, 578, 664, 666, 667, 757, 847, 853, 855, 865, 866, 867, 869, 870, 873], "electrod": [4, 27, 68, 78, 79, 85, 118, 120, 122, 130, 135, 138, 141, 143, 150, 159, 161, 165, 166, 170, 186, 187, 191, 195, 199, 202, 204, 208, 210, 216, 227, 245, 262, 265, 266, 267, 268, 269, 270, 274, 276, 282, 314, 315, 318, 328, 330, 332, 333, 334, 335, 336, 337, 340, 356, 368, 375, 413, 420, 454, 465, 472, 473, 481, 482, 487, 489, 491, 496, 502, 504, 525, 529, 530, 541, 562, 563, 571, 578, 590, 592, 594, 623, 652, 708, 710, 711, 712, 748, 756, 757, 772, 773, 776, 778, 780, 788, 790, 792, 795, 796, 799, 806, 808, 810, 811, 812, 816, 818, 824, 826, 843, 863, 864, 873, 876, 888], "over": [4, 5, 8, 9, 12, 21, 27, 28, 45, 46, 58, 59, 68, 71, 80, 81, 103, 104, 107, 109, 112, 113, 115, 122, 130, 135, 136, 137, 149, 150, 151, 159, 161, 162, 166, 169, 172, 175, 176, 191, 192, 200, 202, 205, 207, 210, 212, 218, 219, 224, 227, 228, 231, 232, 240, 242, 245, 257, 259, 264, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 292, 293, 296, 309, 323, 344, 356, 362, 413, 420, 422, 424, 452, 455, 481, 482, 516, 532, 534, 537, 563, 567, 596, 609, 622, 657, 658, 683, 695, 704, 708, 710, 711, 712, 719, 727, 740, 756, 769, 786, 787, 788, 798, 803, 843, 847, 854, 864, 865, 867, 869, 870, 876, 888], "occipit": [4, 47, 49, 169, 204, 242, 642, 870], "lobe": [4, 47, 135, 136, 180], "ani": [4, 5, 18, 24, 27, 41, 45, 50, 76, 83, 110, 112, 117, 120, 126, 127, 135, 137, 140, 141, 142, 143, 149, 151, 156, 158, 160, 161, 162, 165, 166, 167, 169, 170, 171, 172, 176, 181, 183, 184, 185, 189, 190, 196, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 211, 212, 216, 217, 218, 219, 227, 232, 242, 245, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 275, 276, 278, 279, 280, 281, 288, 290, 292, 307, 308, 314, 321, 326, 328, 363, 367, 389, 419, 432, 435, 436, 437, 440, 447, 465, 470, 481, 482, 497, 552, 554, 555, 556, 560, 561, 563, 564, 565, 566, 580, 584, 585, 590, 595, 602, 613, 619, 627, 635, 645, 648, 649, 652, 658, 669, 673, 694, 703, 708, 709, 710, 711, 712, 725, 756, 757, 759, 781, 786, 787, 789, 798, 801, 809, 810, 820, 826, 835, 838, 843, 845, 847, 850, 864, 865, 867, 869, 870, 876, 888], "easier": [4, 140, 142, 144, 150, 151, 156, 172, 191, 196, 200, 202, 205, 206, 207, 208, 259, 374, 845, 847, 888], "spot": [4, 200, 203, 231, 275, 888], "area": [4, 5, 54, 71, 94, 116, 135, 178, 191, 192, 196, 200, 205, 213, 218, 223, 227, 231, 242, 265, 266, 267, 268, 271, 481, 482, 590, 669, 708, 778, 780, 790, 792, 810, 847, 870, 873, 888], "dictionari": [4, 10, 27, 36, 56, 59, 94, 115, 127, 136, 140, 141, 142, 144, 145, 149, 150, 151, 166, 167, 169, 188, 205, 207, 210, 216, 217, 222, 245, 257, 259, 260, 262, 265, 266, 267, 268, 269, 270, 274, 275, 276, 278, 289, 298, 299, 300, 304, 312, 314, 326, 327, 342, 356, 360, 361, 367, 370, 371, 372, 373, 375, 413, 415, 420, 424, 437, 440, 442, 445, 448, 449, 451, 452, 454, 456, 457, 473, 476, 477, 478, 479, 480, 481, 482, 514, 524, 529, 541, 563, 573, 575, 576, 578, 580, 583, 584, 615, 622, 627, 638, 640, 643, 649, 657, 694, 708, 743, 746, 756, 779, 780, 786, 787, 789, 796, 799, 801, 809, 815, 854, 888], "concentr": [4, 190, 206, 211, 223, 418, 536, 537, 597, 602, 715, 718, 726, 788, 888], "b11": 4, "ylim": [4, 7, 9, 19, 35, 39, 40, 46, 51, 59, 60, 99, 112, 114, 127, 151, 160, 195, 202, 204, 211, 212, 227, 237, 242, 267, 268, 780, 790, 794, 888], "do": [4, 5, 15, 16, 18, 24, 26, 27, 31, 34, 40, 41, 45, 47, 50, 51, 54, 55, 58, 59, 60, 61, 66, 68, 71, 75, 83, 109, 112, 114, 115, 120, 127, 136, 137, 140, 141, 144, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 166, 168, 171, 172, 175, 176, 177, 180, 182, 183, 184, 185, 188, 189, 191, 192, 195, 196, 200, 202, 203, 205, 206, 207, 208, 209, 210, 212, 216, 218, 222, 223, 224, 227, 232, 235, 236, 237, 241, 242, 245, 257, 258, 259, 260, 262, 265, 266, 267, 268, 271, 272, 273, 275, 276, 279, 280, 281, 284, 288, 305, 309, 311, 321, 328, 356, 360, 367, 371, 372, 382, 388, 405, 406, 424, 425, 426, 432, 434, 442, 447, 448, 454, 463, 471, 478, 479, 481, 482, 489, 496, 525, 530, 531, 532, 533, 534, 536, 537, 546, 547, 554, 555, 556, 560, 561, 563, 564, 565, 566, 574, 580, 581, 584, 595, 612, 615, 622, 625, 626, 644, 646, 648, 695, 696, 698, 699, 703, 708, 710, 711, 712, 724, 725, 734, 738, 746, 781, 785, 797, 816, 833, 836, 838, 845, 847, 850, 852, 853, 855, 858, 863, 864, 869, 870, 873, 874, 876, 888], "pretti": [4, 141, 144, 202, 205, 207, 867], "small": [4, 5, 11, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 71, 76, 90, 93, 94, 104, 107, 108, 109, 110, 121, 127, 128, 135, 141, 142, 152, 162, 166, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 191, 196, 202, 203, 205, 207, 218, 223, 224, 227, 229, 235, 237, 257, 262, 263, 265, 266, 267, 268, 271, 274, 322, 356, 413, 420, 481, 482, 497, 562, 563, 565, 613, 619, 695, 696, 698, 699, 701, 708, 710, 712, 784, 788, 795, 799, 808, 811, 816, 843, 847, 864, 867, 870, 873, 888], "determin": [4, 22, 82, 128, 141, 145, 151, 161, 166, 169, 171, 178, 190, 202, 204, 210, 216, 217, 218, 227, 230, 232, 259, 262, 263, 265, 266, 267, 268, 270, 273, 274, 279, 281, 284, 298, 299, 307, 314, 316, 343, 350, 356, 360, 361, 371, 372, 373, 388, 413, 419, 420, 421, 430, 452, 456, 457, 476, 478, 479, 481, 482, 493, 517, 521, 541, 563, 590, 593, 595, 600, 601, 623, 642, 700, 724, 734, 736, 738, 739, 756, 784, 787, 792, 794, 795, 796, 797, 806, 813, 819, 829, 867, 870, 873, 888], "whether": [4, 13, 82, 141, 144, 145, 146, 171, 178, 180, 196, 200, 205, 206, 210, 242, 257, 258, 259, 260, 262, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 298, 299, 314, 323, 324, 325, 326, 328, 356, 361, 366, 388, 395, 413, 420, 435, 446, 454, 472, 473, 480, 481, 482, 492, 500, 522, 530, 531, 532, 533, 534, 537, 539, 540, 541, 545, 546, 547, 562, 563, 564, 572, 578, 580, 581, 584, 585, 586, 590, 593, 596, 610, 649, 652, 672, 673, 695, 696, 698, 699, 708, 709, 710, 711, 712, 714, 717, 720, 756, 765, 773, 777, 780, 782, 784, 785, 786, 787, 788, 790, 794, 795, 799, 801, 803, 806, 808, 809, 810, 811, 812, 814, 816, 817, 818, 819, 822, 826, 847, 853, 867, 870, 873, 888], "stronger": [4, 141, 191, 229, 237, 267, 268, 790], "along": [4, 19, 46, 68, 115, 119, 136, 140, 142, 160, 166, 168, 170, 178, 195, 196, 199, 200, 204, 205, 208, 209, 216, 218, 219, 224, 235, 262, 263, 265, 266, 267, 268, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 283, 288, 413, 416, 420, 423, 424, 426, 453, 471, 472, 478, 481, 482, 562, 563, 612, 687, 688, 695, 696, 698, 699, 702, 708, 710, 711, 712, 756, 772, 773, 780, 786, 787, 788, 791, 795, 799, 808, 811, 812, 814, 816, 817, 818, 819, 843, 845, 846, 847, 864, 870, 888], "phase_coh": 4, "get": [4, 5, 7, 15, 18, 19, 21, 22, 26, 27, 28, 34, 38, 39, 41, 47, 48, 50, 52, 61, 63, 64, 66, 67, 70, 71, 73, 80, 81, 83, 84, 94, 95, 96, 97, 103, 109, 113, 114, 116, 120, 123, 124, 127, 135, 136, 140, 141, 142, 143, 144, 146, 149, 150, 151, 155, 156, 157, 158, 160, 162, 165, 166, 167, 169, 170, 173, 174, 175, 180, 181, 183, 184, 185, 192, 199, 200, 201, 202, 203, 205, 207, 216, 218, 219, 227, 229, 231, 232, 237, 240, 241, 245, 257, 258, 259, 260, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 289, 304, 308, 312, 313, 314, 324, 325, 343, 344, 360, 367, 372, 373, 376, 379, 380, 381, 382, 384, 385, 386, 393, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 430, 433, 437, 442, 448, 454, 462, 465, 468, 472, 481, 482, 487, 511, 519, 529, 539, 540, 552, 563, 564, 570, 572, 581, 625, 657, 658, 677, 679, 687, 700, 703, 708, 709, 710, 711, 712, 724, 734, 738, 743, 756, 757, 780, 787, 789, 802, 843, 845, 846, 847, 849, 851, 852, 853, 858, 864, 865, 869, 870, 871, 873, 874, 876, 888], "sort": [4, 7, 15, 21, 27, 47, 94, 121, 122, 130, 137, 143, 160, 170, 227, 265, 266, 267, 268, 270, 275, 326, 356, 361, 421, 439, 442, 466, 497, 563, 630, 709, 711, 787, 790, 792, 838, 855, 888], "label": [4, 8, 9, 10, 11, 12, 13, 15, 16, 18, 21, 22, 27, 28, 29, 36, 37, 44, 45, 56, 69, 71, 90, 92, 94, 95, 96, 97, 101, 105, 106, 110, 111, 112, 113, 116, 120, 126, 127, 135, 137, 140, 142, 143, 144, 149, 151, 155, 160, 166, 168, 171, 172, 176, 180, 181, 191, 192, 196, 201, 205, 207, 210, 216, 217, 218, 228, 237, 241, 242, 245, 261, 262, 263, 265, 266, 267, 268, 270, 272, 273, 274, 276, 277, 278, 279, 280, 281, 298, 299, 362, 366, 387, 390, 413, 414, 415, 418, 420, 421, 422, 424, 430, 446, 447, 454, 459, 465, 466, 467, 471, 481, 482, 489, 492, 496, 516, 517, 529, 530, 531, 532, 533, 534, 536, 537, 539, 540, 542, 544, 546, 547, 549, 560, 562, 563, 564, 578, 612, 625, 627, 628, 629, 630, 635, 645, 646, 657, 658, 666, 671, 674, 675, 685, 704, 708, 710, 711, 712, 724, 734, 756, 761, 774, 775, 778, 780, 786, 787, 788, 789, 790, 792, 795, 799, 802, 803, 808, 809, 811, 814, 815, 816, 817, 818, 819, 837, 838, 843, 847, 876, 878, 888], "2f": [4, 59, 157, 272, 273, 276, 279, 280, 281, 563, 756, 799, 814, 819], "format": [4, 27, 34, 43, 44, 63, 67, 71, 114, 127, 135, 137, 140, 143, 149, 150, 151, 160, 165, 166, 168, 170, 171, 172, 176, 182, 188, 191, 192, 203, 205, 206, 207, 208, 211, 213, 216, 217, 218, 220, 227, 228, 229, 232, 257, 259, 262, 264, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 278, 279, 280, 281, 314, 332, 333, 337, 339, 352, 353, 354, 375, 413, 420, 442, 443, 444, 445, 446, 473, 480, 481, 482, 484, 487, 489, 493, 498, 503, 552, 558, 562, 563, 578, 580, 590, 613, 617, 622, 628, 638, 653, 654, 659, 660, 661, 673, 688, 695, 696, 698, 699, 708, 709, 710, 711, 712, 726, 727, 729, 751, 756, 771, 773, 788, 795, 799, 808, 811, 814, 816, 818, 819, 833, 841, 843, 847, 854, 859, 863, 864, 867, 873, 876, 888], "90": [4, 5, 11, 13, 19, 24, 35, 41, 42, 47, 80, 81, 90, 94, 103, 104, 108, 109, 112, 114, 123, 135, 136, 143, 151, 156, 157, 158, 160, 169, 170, 171, 179, 184, 190, 195, 196, 201, 203, 208, 209, 211, 212, 227, 228, 229, 231, 232, 236, 237, 242, 245, 267, 268, 298, 299, 356, 360, 361, 371, 372, 373, 413, 418, 420, 456, 457, 476, 478, 479, 526, 536, 537, 541, 563, 657, 664, 666, 667, 668, 689, 715, 718, 726, 761, 788, 796, 864, 865, 870], "each": [4, 9, 10, 11, 15, 16, 19, 24, 28, 32, 33, 38, 41, 44, 45, 68, 71, 80, 83, 93, 94, 95, 101, 103, 107, 108, 109, 112, 113, 115, 117, 120, 127, 128, 133, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 155, 156, 158, 160, 161, 162, 166, 167, 168, 169, 171, 172, 175, 176, 177, 178, 180, 181, 183, 185, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 217, 218, 219, 222, 224, 227, 229, 231, 232, 235, 236, 237, 240, 242, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 287, 290, 291, 298, 299, 305, 312, 316, 319, 323, 344, 346, 347, 351, 352, 355, 356, 357, 358, 359, 360, 361, 362, 364, 367, 369, 373, 388, 405, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 429, 430, 436, 437, 438, 447, 451, 452, 453, 454, 455, 456, 457, 465, 471, 476, 478, 479, 480, 481, 482, 483, 485, 496, 505, 513, 514, 517, 519, 521, 522, 530, 534, 536, 537, 539, 540, 553, 562, 563, 564, 566, 568, 571, 578, 580, 582, 584, 590, 594, 595, 599, 615, 619, 625, 638, 641, 649, 656, 657, 663, 664, 665, 666, 667, 668, 669, 670, 673, 674, 675, 677, 679, 688, 690, 691, 693, 695, 696, 697, 698, 699, 700, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 724, 727, 734, 738, 739, 746, 756, 757, 760, 764, 772, 773, 774, 776, 777, 778, 780, 781, 782, 783, 784, 787, 788, 790, 792, 793, 794, 795, 796, 799, 807, 808, 809, 810, 811, 815, 816, 817, 818, 821, 825, 826, 834, 836, 841, 843, 845, 846, 847, 853, 863, 864, 865, 867, 870, 873, 888], "zip": [4, 9, 10, 22, 27, 47, 81, 90, 107, 113, 114, 120, 127, 137, 140, 150, 160, 165, 180, 195, 200, 202, 203, 205, 206, 208, 227, 228, 229, 230, 231, 232, 237, 241, 389, 505, 847, 855], "c22": 4, "figur": [4, 5, 8, 16, 19, 22, 27, 28, 37, 38, 45, 49, 54, 55, 92, 103, 109, 111, 115, 116, 118, 122, 123, 125, 130, 135, 136, 141, 142, 145, 150, 156, 158, 160, 166, 170, 176, 178, 179, 180, 183, 184, 191, 195, 196, 202, 204, 205, 207, 210, 211, 219, 224, 227, 229, 232, 237, 241, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 278, 279, 280, 281, 314, 315, 328, 413, 420, 472, 473, 481, 482, 562, 563, 578, 625, 635, 708, 709, 710, 711, 712, 735, 736, 738, 739, 756, 758, 759, 762, 765, 769, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 823, 824, 826, 845, 846, 847, 865, 867, 888], "ax": [4, 10, 11, 12, 13, 15, 19, 21, 22, 37, 39, 41, 45, 47, 58, 68, 69, 70, 71, 72, 73, 74, 81, 82, 86, 90, 93, 96, 99, 104, 112, 113, 114, 115, 116, 120, 127, 133, 135, 136, 137, 144, 145, 146, 150, 151, 156, 160, 161, 170, 172, 176, 177, 180, 181, 183, 195, 196, 199, 202, 203, 206, 207, 210, 211, 212, 219, 224, 227, 228, 229, 230, 231, 232, 240, 241, 242, 262, 263, 265, 266, 267, 268, 274, 314, 315, 323, 328, 413, 420, 472, 481, 482, 562, 563, 708, 710, 712, 724, 734, 757, 759, 769, 772, 773, 775, 778, 779, 780, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 801, 802, 804, 805, 806, 808, 810, 811, 812, 813, 816, 818, 870, 888], "subplot": [4, 10, 11, 12, 13, 15, 19, 21, 22, 39, 41, 45, 47, 58, 69, 70, 71, 72, 73, 74, 82, 86, 90, 93, 96, 99, 104, 107, 112, 113, 114, 115, 116, 120, 127, 136, 137, 142, 144, 146, 151, 160, 170, 172, 176, 177, 180, 181, 183, 195, 196, 202, 207, 210, 211, 212, 219, 224, 227, 228, 229, 230, 231, 232, 241, 242, 262, 265, 266, 267, 268, 274, 413, 420, 481, 482, 562, 563, 708, 710, 712, 724, 734, 756, 778, 779, 788, 789, 794, 795, 799, 804, 808, 811, 816, 818, 821, 888], "figsiz": [4, 12, 15, 19, 22, 45, 47, 71, 74, 96, 112, 113, 114, 115, 120, 127, 136, 144, 160, 176, 183, 195, 202, 207, 210, 211, 224, 227, 228, 230, 231, 232, 241, 242, 563, 801, 802], "20": [4, 5, 9, 11, 12, 13, 14, 15, 19, 22, 28, 33, 34, 35, 37, 45, 46, 47, 48, 54, 55, 56, 59, 61, 62, 71, 75, 77, 81, 82, 88, 90, 100, 103, 104, 107, 108, 109, 112, 113, 114, 115, 116, 121, 127, 128, 130, 133, 134, 137, 140, 142, 143, 150, 151, 152, 157, 159, 166, 169, 170, 171, 172, 176, 177, 179, 181, 183, 184, 185, 191, 195, 196, 199, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 216, 219, 222, 224, 227, 228, 229, 231, 232, 236, 237, 240, 242, 244, 245, 246, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 298, 299, 310, 314, 319, 326, 332, 343, 344, 345, 346, 347, 349, 362, 367, 412, 413, 420, 438, 448, 456, 476, 478, 479, 481, 482, 489, 518, 522, 530, 531, 532, 533, 537, 541, 545, 546, 547, 554, 555, 556, 562, 563, 572, 578, 584, 593, 617, 622, 627, 652, 656, 657, 672, 674, 696, 697, 708, 709, 710, 711, 712, 725, 760, 772, 773, 774, 780, 785, 786, 788, 790, 791, 792, 794, 795, 796, 799, 806, 808, 809, 810, 811, 812, 814, 816, 818, 819, 846, 863, 864, 867, 870], "cmap": [4, 9, 10, 13, 15, 16, 19, 22, 41, 71, 100, 101, 107, 109, 112, 114, 115, 116, 120, 136, 143, 160, 182, 195, 196, 210, 227, 229, 230, 231, 232, 241, 262, 265, 266, 267, 268, 274, 413, 420, 481, 482, 562, 563, 578, 708, 709, 710, 712, 771, 773, 780, 782, 787, 788, 792, 795, 798, 799, 808, 811, 816, 817, 818], "magma": 4, "consider": [4, 81, 99, 151, 201, 202, 205, 212, 223, 232, 245, 275, 694, 854, 870, 876, 888], "chosen": [4, 45, 137, 145, 151, 199, 202, 204, 205, 207, 240, 259, 262, 265, 266, 267, 268, 273, 274, 278, 279, 281, 360, 413, 415, 420, 424, 426, 449, 451, 452, 471, 481, 482, 515, 538, 562, 563, 578, 593, 612, 660, 661, 695, 696, 698, 699, 708, 709, 710, 711, 712, 724, 734, 738, 756, 772, 773, 782, 786, 788, 792, 795, 799, 802, 808, 809, 810, 811, 812, 816, 818, 870], "test": [4, 8, 10, 13, 15, 16, 19, 26, 27, 90, 95, 98, 102, 112, 123, 128, 135, 140, 151, 165, 168, 171, 172, 188, 195, 196, 209, 210, 216, 228, 229, 230, 233, 234, 237, 238, 239, 242, 245, 265, 266, 267, 268, 270, 276, 277, 278, 290, 292, 298, 320, 362, 388, 416, 417, 430, 434, 436, 452, 481, 482, 490, 510, 513, 529, 530, 538, 544, 554, 560, 563, 584, 595, 622, 635, 637, 680, 686, 688, 690, 692, 695, 696, 697, 698, 699, 700, 701, 702, 708, 710, 711, 712, 738, 756, 764, 777, 780, 788, 795, 802, 816, 845, 848, 851, 852, 867, 870, 876, 888], "interpol": [4, 15, 24, 27, 32, 61, 71, 78, 85, 87, 90, 93, 94, 95, 119, 135, 136, 151, 177, 181, 188, 196, 205, 210, 224, 227, 240, 262, 265, 266, 267, 268, 274, 278, 280, 281, 413, 420, 447, 470, 481, 482, 562, 563, 578, 582, 587, 594, 625, 657, 659, 660, 661, 673, 708, 710, 712, 744, 756, 773, 788, 795, 799, 808, 811, 816, 818, 854, 888], "miss": [4, 44, 70, 84, 135, 151, 158, 159, 180, 183, 188, 190, 202, 208, 242, 265, 266, 267, 268, 270, 278, 318, 341, 389, 405, 419, 481, 482, 489, 496, 502, 595, 694, 789, 790, 843, 847, 851, 852, 854, 855, 873, 876, 888], "drop": [4, 8, 9, 11, 12, 16, 18, 21, 32, 33, 34, 42, 46, 49, 72, 73, 96, 97, 100, 103, 107, 110, 112, 113, 114, 117, 121, 128, 135, 136, 137, 141, 142, 144, 145, 146, 151, 152, 162, 166, 167, 172, 177, 180, 182, 183, 185, 191, 199, 200, 201, 204, 205, 207, 208, 211, 212, 213, 218, 223, 224, 229, 230, 231, 232, 235, 237, 241, 259, 260, 262, 265, 266, 267, 268, 272, 273, 275, 276, 279, 280, 281, 316, 319, 438, 439, 446, 470, 481, 482, 494, 563, 575, 576, 580, 596, 619, 621, 649, 708, 709, 710, 711, 712, 785, 786, 799, 801, 847, 850, 870, 888], "furthermor": [4, 155, 175, 178, 189, 204, 863, 870, 873], "mark": [4, 8, 11, 49, 75, 79, 83, 92, 93, 111, 120, 126, 127, 135, 137, 142, 144, 150, 151, 166, 169, 170, 171, 172, 178, 189, 190, 191, 201, 202, 205, 206, 208, 209, 210, 211, 216, 218, 219, 232, 245, 258, 260, 265, 266, 267, 268, 316, 373, 382, 390, 405, 406, 470, 472, 480, 481, 482, 562, 563, 568, 571, 577, 578, 582, 584, 594, 595, 603, 610, 619, 621, 649, 708, 710, 711, 712, 752, 776, 786, 788, 795, 800, 802, 809, 810, 816, 843, 847, 864, 865, 888], "exg": 4, "prefix": [4, 75, 155, 170, 175, 257, 262, 265, 266, 267, 268, 274, 357, 358, 413, 420, 473, 481, 482, 489, 496, 497, 562, 563, 578, 619, 708, 710, 712, 773, 795, 799, 808, 811, 816, 843], "interpolate_bad": [4, 71, 79, 200, 265, 266, 267, 268, 470, 481, 482, 870, 888], "reset_bad": [4, 79, 200, 265, 266, 267, 268, 481, 482, 870], "drop_channel": [4, 42, 68, 71, 136, 140, 149, 216, 232, 265, 266, 267, 268, 481, 482, 708, 710, 711, 712, 874, 888], "exg1": 4, "exg2": 4, "exg3": 4, "exg4": 4, "radiu": [4, 5, 24, 26, 41, 45, 50, 71, 72, 79, 80, 93, 94, 109, 151, 156, 158, 159, 170, 176, 181, 182, 183, 184, 185, 200, 207, 208, 210, 223, 262, 265, 266, 267, 268, 274, 304, 307, 314, 328, 330, 332, 413, 420, 433, 471, 481, 482, 515, 526, 545, 562, 563, 572, 578, 657, 660, 703, 708, 710, 712, 773, 780, 788, 790, 792, 795, 796, 799, 806, 808, 810, 811, 812, 816, 818, 870, 888], "95": [4, 5, 7, 13, 19, 34, 47, 50, 71, 76, 80, 81, 90, 109, 112, 113, 114, 121, 136, 142, 143, 145, 146, 151, 156, 158, 160, 169, 179, 184, 195, 196, 201, 209, 210, 211, 227, 228, 231, 232, 245, 265, 266, 267, 268, 563, 578, 668, 687, 708, 780, 796, 801, 817, 870], "113": [4, 35, 112, 169, 216, 221, 227, 231, 232, 245], "524face": 4, "To": [4, 5, 11, 18, 19, 22, 33, 44, 45, 88, 90, 94, 95, 113, 116, 127, 133, 137, 140, 142, 144, 146, 149, 150, 151, 156, 158, 159, 160, 161, 166, 168, 169, 170, 171, 172, 175, 178, 180, 184, 188, 190, 191, 192, 195, 196, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 216, 218, 219, 222, 224, 227, 229, 231, 232, 236, 237, 241, 257, 259, 260, 265, 266, 267, 268, 271, 275, 280, 281, 298, 299, 356, 360, 361, 419, 426, 437, 443, 444, 445, 446, 448, 454, 481, 482, 489, 494, 511, 515, 519, 525, 563, 577, 580, 584, 586, 591, 593, 595, 610, 612, 627, 653, 657, 660, 661, 662, 668, 671, 672, 674, 695, 696, 697, 698, 699, 701, 714, 717, 724, 733, 734, 735, 736, 737, 738, 739, 740, 754, 756, 773, 786, 799, 801, 803, 809, 820, 821, 835, 845, 846, 847, 850, 851, 852, 853, 855, 862, 863, 864, 865, 867, 869, 870, 874, 888], "predict": [4, 10, 12, 13, 15, 16, 17, 20, 27, 42, 101, 137, 141, 176, 195, 196, 245, 270, 298, 314, 330, 375, 416, 417, 419, 423, 425, 430, 453, 482, 531, 538, 818, 864, 888], "brain": [4, 5, 7, 8, 10, 11, 15, 19, 21, 22, 24, 26, 27, 28, 29, 31, 32, 33, 35, 38, 40, 41, 42, 43, 44, 46, 54, 58, 59, 61, 71, 82, 88, 94, 104, 109, 115, 122, 126, 130, 135, 146, 151, 155, 156, 158, 162, 170, 175, 176, 177, 178, 179, 181, 182, 184, 188, 189, 190, 191, 196, 199, 204, 205, 207, 208, 224, 227, 235, 236, 237, 242, 245, 256, 257, 263, 265, 266, 267, 268, 270, 272, 273, 276, 277, 278, 279, 280, 281, 291, 298, 299, 305, 333, 362, 374, 382, 413, 419, 421, 447, 452, 465, 479, 481, 482, 491, 502, 517, 521, 526, 529, 530, 544, 550, 560, 561, 564, 568, 579, 591, 592, 594, 617, 625, 635, 640, 645, 657, 673, 697, 708, 710, 711, 712, 765, 767, 770, 772, 774, 775, 778, 784, 814, 815, 819, 820, 824, 826, 843, 845, 847, 848, 853, 854, 863, 864, 867, 870, 875, 876, 878, 888], "purpos": [4, 8, 11, 12, 21, 113, 140, 141, 149, 156, 168, 180, 189, 199, 200, 201, 202, 205, 206, 208, 231, 235, 237, 242, 245, 265, 266, 379, 380, 381, 382, 384, 385, 386, 388, 393, 396, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 424, 426, 481, 482, 772, 786, 809, 843, 854, 863, 864, 869, 872, 873, 874], "intercept": [4, 101, 693], "predictor_var": 4, "where": [4, 10, 13, 31, 45, 69, 71, 75, 81, 82, 83, 90, 94, 95, 101, 112, 137, 140, 141, 142, 144, 149, 151, 155, 160, 165, 166, 167, 168, 169, 170, 172, 175, 182, 183, 184, 188, 190, 191, 192, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 216, 218, 222, 223, 224, 227, 229, 231, 232, 235, 236, 237, 242, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 272, 273, 274, 275, 276, 278, 279, 280, 281, 321, 323, 324, 325, 337, 355, 374, 379, 380, 381, 382, 384, 385, 386, 388, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 420, 426, 428, 447, 449, 452, 454, 473, 481, 482, 515, 538, 562, 563, 565, 572, 578, 580, 581, 582, 595, 658, 664, 665, 666, 667, 668, 670, 672, 673, 688, 689, 694, 695, 696, 698, 699, 708, 710, 711, 712, 724, 734, 736, 738, 739, 756, 761, 773, 774, 777, 778, 779, 786, 787, 788, 795, 799, 808, 809, 810, 811, 816, 818, 822, 843, 847, 848, 850, 851, 852, 853, 863, 864, 867, 869, 870, 873, 888], "func": [4, 210, 272, 273, 276, 279, 280, 281, 489, 496, 504, 847, 888], "reg": [4, 8, 9, 12, 21, 34, 49, 180, 224, 298, 299, 413, 420, 421, 564, 870, 888], "design_matrix": [4, 141, 693], "25728": 4, "target": [4, 17, 20, 27, 49, 78, 85, 101, 128, 141, 161, 196, 203, 205, 227, 228, 242, 265, 267, 268, 270, 412, 413, 414, 415, 416, 417, 418, 420, 421, 423, 424, 425, 426, 430, 439, 481, 494, 523, 560, 563, 564, 622, 847, 888], "regressor": [4, 70, 101, 196, 227, 693], "within": [4, 5, 16, 24, 38, 41, 45, 47, 50, 62, 70, 94, 108, 109, 112, 120, 121, 127, 128, 135, 140, 141, 144, 151, 155, 156, 158, 160, 161, 165, 166, 168, 172, 175, 176, 178, 181, 183, 184, 185, 199, 202, 205, 206, 208, 210, 218, 223, 227, 238, 242, 245, 258, 262, 265, 266, 267, 268, 272, 273, 274, 276, 279, 280, 281, 283, 309, 316, 375, 388, 413, 418, 420, 437, 439, 442, 447, 465, 471, 481, 482, 536, 537, 546, 562, 563, 578, 695, 696, 698, 699, 703, 708, 710, 712, 715, 718, 726, 737, 740, 753, 773, 787, 788, 795, 796, 799, 808, 811, 815, 816, 818, 843, 845, 847, 852, 853, 858, 867, 869, 870, 876, 888], "object": [4, 9, 10, 18, 19, 27, 30, 31, 32, 33, 34, 36, 47, 54, 55, 56, 61, 64, 79, 94, 99, 101, 103, 104, 109, 112, 113, 114, 127, 132, 141, 144, 146, 151, 155, 157, 160, 161, 162, 165, 166, 167, 170, 171, 172, 175, 181, 182, 188, 189, 190, 191, 192, 196, 199, 200, 201, 203, 205, 206, 207, 208, 210, 211, 213, 217, 220, 221, 224, 228, 235, 241, 242, 245, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 284, 285, 286, 289, 291, 292, 293, 296, 298, 299, 300, 304, 305, 307, 308, 312, 313, 314, 316, 319, 320, 321, 322, 323, 326, 328, 329, 342, 344, 346, 351, 355, 356, 359, 360, 361, 362, 363, 367, 371, 372, 373, 375, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 429, 430, 431, 432, 438, 442, 447, 454, 455, 457, 459, 464, 473, 476, 478, 479, 480, 481, 482, 483, 486, 487, 488, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 515, 518, 523, 524, 525, 526, 529, 530, 531, 532, 533, 534, 537, 539, 540, 541, 545, 552, 559, 560, 562, 563, 564, 565, 566, 574, 577, 578, 579, 580, 588, 590, 591, 592, 594, 600, 601, 608, 613, 617, 618, 620, 624, 625, 626, 629, 635, 642, 643, 657, 658, 672, 673, 676, 685, 693, 694, 700, 704, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 725, 728, 729, 730, 735, 736, 737, 738, 739, 740, 741, 743, 745, 755, 756, 757, 762, 765, 767, 769, 770, 772, 773, 776, 777, 780, 781, 782, 783, 786, 787, 788, 789, 790, 791, 792, 793, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 806, 808, 809, 810, 811, 812, 813, 816, 818, 823, 824, 834, 837, 843, 847, 863, 865, 870, 872, 874, 878, 886, 888], "multipl": [4, 16, 40, 44, 45, 51, 60, 93, 96, 97, 101, 103, 112, 120, 140, 144, 149, 150, 159, 160, 166, 172, 175, 190, 195, 200, 202, 203, 205, 206, 208, 216, 217, 218, 228, 232, 235, 236, 237, 242, 245, 259, 263, 264, 265, 266, 267, 268, 272, 273, 275, 276, 278, 279, 280, 281, 301, 303, 319, 356, 362, 388, 415, 424, 426, 436, 438, 440, 449, 450, 451, 454, 457, 463, 478, 479, 481, 482, 494, 500, 505, 524, 539, 540, 545, 550, 563, 581, 586, 595, 599, 617, 625, 649, 652, 657, 686, 692, 696, 697, 708, 709, 711, 720, 723, 730, 731, 736, 739, 756, 770, 780, 787, 790, 793, 796, 799, 801, 803, 809, 814, 815, 817, 819, 843, 847, 864, 870, 876, 878, 885, 888], "list": [4, 9, 10, 11, 16, 28, 41, 43, 47, 68, 70, 84, 94, 103, 104, 111, 112, 113, 115, 116, 117, 127, 132, 137, 140, 144, 145, 149, 150, 151, 161, 166, 168, 169, 170, 171, 172, 175, 177, 183, 185, 188, 191, 200, 201, 202, 205, 206, 207, 210, 211, 216, 218, 219, 222, 223, 224, 227, 228, 231, 232, 236, 237, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 287, 288, 290, 291, 292, 293, 296, 298, 299, 301, 303, 305, 307, 308, 312, 314, 315, 316, 319, 320, 321, 323, 324, 325, 326, 328, 329, 331, 339, 340, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 367, 369, 371, 372, 373, 375, 382, 388, 394, 396, 405, 406, 413, 415, 419, 420, 423, 425, 428, 429, 430, 432, 434, 435, 436, 437, 438, 440, 444, 445, 447, 448, 451, 452, 454, 455, 459, 461, 463, 465, 466, 467, 468, 469, 470, 471, 476, 477, 478, 479, 480, 481, 482, 485, 489, 491, 493, 496, 497, 498, 500, 504, 505, 506, 508, 513, 517, 519, 520, 521, 524, 527, 528, 532, 534, 537, 539, 540, 549, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 586, 587, 591, 594, 595, 596, 601, 603, 606, 610, 612, 615, 617, 619, 621, 622, 625, 626, 627, 630, 633, 640, 642, 648, 649, 652, 657, 658, 671, 674, 675, 676, 677, 685, 688, 689, 691, 693, 694, 695, 696, 698, 699, 700, 703, 704, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 724, 725, 730, 733, 734, 739, 741, 742, 753, 755, 756, 757, 760, 761, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 805, 806, 807, 808, 810, 811, 812, 814, 815, 816, 818, 819, 820, 831, 834, 838, 839, 843, 847, 850, 854, 855, 858, 862, 863, 867, 869, 870, 871, 873, 876, 888], "field": [4, 5, 7, 17, 20, 22, 26, 27, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 70, 79, 80, 81, 90, 94, 109, 113, 117, 119, 121, 124, 128, 131, 142, 144, 149, 156, 158, 159, 162, 165, 166, 169, 176, 177, 178, 179, 182, 183, 188, 189, 191, 196, 197, 198, 199, 200, 204, 205, 206, 207, 208, 209, 210, 216, 218, 219, 222, 224, 232, 245, 251, 258, 262, 265, 266, 267, 268, 270, 298, 299, 314, 321, 330, 375, 419, 425, 445, 453, 456, 481, 482, 483, 493, 501, 521, 530, 531, 577, 578, 595, 603, 620, 624, 627, 652, 694, 737, 740, 756, 773, 780, 787, 790, 791, 793, 795, 796, 798, 817, 818, 826, 843, 848, 863, 864, 867, 876, 888], "getattr": [4, 724, 734], "_field": [4, 141], "beta": [4, 12, 19, 32, 33, 34, 94, 101, 110, 112, 113, 115, 137, 141, 227, 241, 265, 266, 267, 268, 481, 482, 610, 693, 710, 712, 788], "stderr": [4, 141, 693], "t_val": [4, 141, 228, 693], "p_val": [4, 101, 141, 229, 230, 689, 693, 888], "mlog10_p_val": [4, 141, 693, 888], "just": [4, 5, 28, 32, 33, 41, 42, 44, 48, 50, 59, 71, 75, 82, 83, 101, 103, 109, 113, 114, 115, 120, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 151, 156, 158, 160, 161, 162, 165, 166, 168, 169, 170, 171, 172, 177, 179, 180, 181, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 216, 217, 218, 219, 224, 228, 229, 232, 235, 236, 237, 241, 242, 262, 265, 266, 267, 268, 272, 273, 274, 276, 278, 279, 280, 281, 314, 413, 420, 447, 448, 481, 482, 497, 538, 562, 563, 573, 578, 594, 619, 708, 710, 712, 752, 773, 780, 786, 788, 790, 792, 795, 796, 799, 803, 806, 808, 809, 810, 811, 812, 816, 818, 826, 845, 847, 855, 865, 870, 873, 888], "would": [4, 5, 19, 43, 44, 71, 140, 143, 144, 150, 151, 155, 156, 160, 161, 172, 175, 181, 190, 191, 196, 199, 201, 202, 203, 204, 205, 206, 207, 210, 222, 227, 228, 229, 232, 235, 237, 242, 265, 266, 267, 268, 272, 273, 276, 278, 279, 280, 281, 291, 298, 299, 356, 360, 361, 371, 372, 373, 382, 388, 405, 406, 413, 420, 434, 435, 436, 448, 456, 457, 463, 476, 478, 479, 481, 482, 496, 519, 528, 541, 563, 574, 595, 644, 708, 711, 756, 790, 795, 796, 809, 843, 853, 869, 870, 876, 888], "higher": [4, 26, 38, 44, 54, 70, 75, 94, 141, 151, 184, 192, 196, 199, 201, 203, 205, 210, 223, 229, 232, 242, 275, 595, 724, 734, 845, 847, 851, 852, 870, 888], "better": [4, 9, 19, 43, 61, 71, 94, 142, 146, 151, 183, 184, 195, 202, 204, 205, 210, 227, 245, 267, 268, 272, 273, 276, 279, 280, 281, 412, 578, 591, 595, 722, 724, 734, 738, 756, 814, 819, 845, 847, 870, 888], "visibl": [4, 47, 127, 172, 191, 202, 203, 209, 218, 219, 242, 265, 266, 267, 268, 481, 482, 563, 648, 708, 756, 786, 792, 803, 809, 843, 888], "neg": [4, 19, 22, 39, 72, 112, 114, 144, 150, 151, 162, 188, 191, 203, 205, 212, 227, 235, 242, 262, 263, 264, 265, 266, 267, 268, 272, 273, 274, 275, 276, 279, 280, 281, 287, 308, 413, 419, 420, 425, 432, 441, 455, 481, 482, 506, 562, 563, 586, 593, 666, 667, 692, 708, 710, 711, 712, 775, 780, 786, 788, 795, 799, 808, 809, 811, 814, 816, 820, 864, 867, 870, 873, 888], "around": [4, 49, 71, 76, 83, 94, 112, 141, 142, 144, 146, 151, 165, 166, 171, 172, 180, 183, 191, 199, 200, 201, 202, 203, 204, 205, 206, 207, 211, 216, 222, 242, 265, 266, 267, 268, 275, 360, 413, 420, 432, 437, 439, 481, 482, 515, 563, 575, 576, 580, 581, 612, 670, 708, 710, 711, 712, 780, 786, 792, 795, 796, 803, 809, 843, 845, 853], "200": [4, 9, 12, 47, 59, 76, 81, 90, 92, 95, 99, 109, 111, 114, 127, 131, 135, 136, 142, 145, 146, 151, 158, 169, 172, 179, 181, 183, 191, 196, 201, 203, 206, 207, 222, 227, 230, 231, 232, 237, 241, 245, 343, 345, 349, 452, 481, 482, 536, 537, 563, 593, 854, 863, 870, 873, 876, 888], "follow": [4, 24, 27, 32, 33, 34, 41, 42, 68, 70, 71, 80, 94, 103, 107, 109, 113, 116, 128, 135, 137, 141, 144, 151, 155, 158, 160, 161, 162, 168, 170, 172, 178, 180, 188, 189, 190, 192, 196, 201, 202, 203, 204, 208, 210, 212, 213, 216, 217, 218, 222, 224, 227, 229, 231, 235, 237, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 278, 279, 280, 281, 288, 289, 298, 299, 304, 305, 356, 367, 372, 388, 405, 413, 437, 439, 440, 451, 452, 453, 457, 480, 481, 482, 483, 487, 489, 496, 525, 529, 546, 547, 563, 580, 584, 595, 596, 625, 635, 653, 689, 691, 693, 708, 710, 711, 712, 724, 734, 735, 738, 739, 743, 746, 752, 756, 769, 780, 788, 793, 816, 843, 845, 846, 849, 851, 852, 853, 863, 864, 866, 867, 870, 873, 874, 888], "onset": [4, 8, 33, 34, 117, 135, 136, 137, 140, 144, 146, 166, 168, 191, 201, 202, 204, 213, 218, 242, 258, 259, 265, 266, 356, 442, 454, 481, 482, 500, 566, 613, 713, 714, 715, 843, 888], "23": [4, 8, 11, 13, 19, 28, 34, 35, 38, 45, 47, 52, 56, 65, 66, 75, 81, 82, 103, 106, 108, 109, 112, 114, 123, 126, 137, 145, 151, 158, 162, 164, 169, 171, 183, 184, 185, 191, 195, 196, 198, 205, 209, 227, 228, 229, 231, 232, 235, 236, 237, 240, 245, 259, 263, 264, 265, 266, 267, 268, 270, 272, 273, 275, 276, 278, 279, 280, 281, 298, 348, 360, 371, 372, 382, 390, 391, 405, 406, 437, 472, 481, 482, 489, 522, 563, 574, 615, 625, 708, 710, 711, 712, 756, 785, 790, 800, 834, 864, 870], "correspond": [4, 16, 31, 48, 50, 62, 73, 77, 88, 92, 94, 103, 112, 120, 137, 143, 144, 151, 155, 156, 158, 160, 168, 170, 172, 175, 180, 181, 182, 188, 191, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 216, 217, 218, 219, 229, 231, 232, 237, 242, 258, 260, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 290, 298, 299, 301, 303, 306, 314, 324, 325, 326, 327, 337, 356, 360, 361, 364, 371, 372, 373, 382, 388, 405, 406, 413, 414, 416, 417, 419, 420, 423, 425, 429, 437, 442, 456, 457, 458, 466, 476, 478, 479, 481, 482, 489, 491, 493, 496, 501, 504, 506, 511, 515, 519, 521, 524, 526, 528, 539, 540, 541, 562, 563, 564, 578, 580, 584, 585, 590, 620, 621, 624, 635, 648, 652, 657, 660, 673, 688, 689, 692, 693, 694, 695, 696, 698, 699, 700, 708, 709, 710, 711, 712, 720, 721, 727, 746, 747, 749, 756, 759, 767, 769, 773, 774, 775, 780, 786, 787, 788, 790, 792, 794, 795, 796, 799, 808, 809, 811, 814, 816, 818, 819, 820, 843, 847, 853, 864, 867, 870, 873, 888], "unit": [4, 8, 14, 19, 21, 32, 83, 100, 103, 127, 135, 136, 141, 156, 160, 168, 169, 180, 189, 190, 192, 200, 205, 207, 210, 213, 216, 224, 229, 230, 232, 240, 241, 245, 260, 262, 263, 264, 265, 266, 267, 268, 270, 274, 276, 298, 299, 307, 315, 332, 337, 339, 341, 361, 367, 375, 413, 415, 420, 422, 424, 434, 449, 451, 452, 457, 480, 481, 482, 489, 491, 496, 497, 506, 563, 574, 580, 583, 584, 595, 619, 658, 700, 708, 710, 712, 747, 749, 756, 780, 787, 788, 790, 792, 795, 796, 808, 810, 816, 817, 824, 843, 847, 873, 888], "scale": [4, 5, 10, 16, 19, 22, 27, 28, 29, 30, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 54, 55, 57, 58, 59, 61, 66, 71, 75, 78, 85, 90, 94, 100, 101, 103, 104, 107, 108, 109, 110, 114, 115, 116, 119, 127, 133, 136, 137, 141, 142, 149, 151, 156, 157, 160, 166, 171, 177, 178, 179, 180, 181, 182, 183, 190, 191, 192, 195, 196, 202, 204, 205, 207, 208, 213, 219, 223, 224, 235, 237, 241, 242, 245, 257, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 279, 280, 281, 298, 299, 330, 340, 355, 356, 360, 361, 367, 371, 372, 373, 413, 420, 422, 434, 436, 447, 456, 457, 472, 475, 476, 478, 479, 481, 482, 491, 536, 537, 541, 543, 546, 547, 554, 562, 563, 573, 574, 584, 595, 625, 644, 645, 646, 647, 660, 661, 672, 675, 708, 710, 711, 712, 720, 746, 756, 769, 771, 773, 780, 784, 786, 787, 788, 790, 792, 794, 795, 796, 797, 799, 804, 808, 809, 810, 811, 815, 816, 817, 819, 843, 861, 888], "keep": [4, 11, 12, 27, 31, 61, 88, 104, 110, 111, 112, 137, 142, 145, 149, 151, 160, 161, 162, 165, 166, 169, 181, 200, 201, 202, 203, 204, 205, 216, 217, 218, 222, 229, 257, 262, 265, 266, 267, 268, 292, 293, 296, 299, 373, 419, 437, 481, 482, 492, 532, 534, 537, 563, 596, 709, 720, 847, 855, 865, 869, 888], "avoid": [4, 8, 9, 28, 40, 59, 71, 88, 114, 137, 140, 151, 161, 166, 167, 169, 172, 183, 189, 191, 199, 202, 203, 207, 216, 218, 227, 240, 245, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 276, 279, 280, 281, 356, 430, 442, 481, 482, 489, 496, 504, 543, 563, 629, 635, 668, 671, 674, 690, 701, 702, 708, 711, 756, 814, 819, 845, 851, 865, 867, 869, 870, 888], "convers": [4, 156, 168, 189, 191, 192, 200, 202, 203, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 481, 482, 506, 604, 695, 696, 698, 699, 708, 711, 870, 873, 888], "micro": [4, 27, 78, 265, 266, 267, 268, 481, 482, 888], "volt": [4, 141, 205, 207, 222, 265, 266, 267, 268, 446, 481, 482, 870, 888], "topomap_arg": [4, 71, 101, 196, 211, 228, 267, 268, 563, 708, 776, 793, 801, 888], "set_ylabel": [4, 12, 13, 21, 22, 45, 71, 96, 104, 112, 113, 115, 133, 144, 172, 183, 196, 202, 206, 230, 231, 232, 242], "systemat": [4, 141, 162, 202, 245, 416, 582, 867, 888], "larg": [4, 10, 28, 71, 76, 80, 83, 84, 114, 120, 136, 142, 150, 151, 167, 171, 172, 178, 196, 199, 200, 202, 203, 204, 206, 207, 208, 211, 212, 219, 227, 232, 235, 242, 245, 265, 266, 271, 298, 356, 360, 361, 365, 422, 452, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 522, 543, 563, 565, 655, 695, 696, 698, 699, 756, 774, 821, 851, 865, 888], "consist": [4, 10, 43, 71, 77, 112, 123, 157, 158, 161, 168, 170, 175, 183, 189, 190, 191, 196, 200, 201, 202, 204, 205, 209, 227, 229, 230, 245, 257, 265, 266, 267, 268, 278, 282, 323, 370, 481, 482, 527, 563, 571, 578, 582, 660, 661, 693, 708, 710, 711, 712, 713, 714, 715, 843, 863, 864, 869, 870, 876, 888], "guillaum": [4, 15, 88, 151, 157, 196, 202, 227, 245, 564, 701, 702, 864, 875, 888], "rousselet": [4, 151, 202, 245, 864], "2016": [4, 19, 46, 83, 113, 126, 195, 202, 245, 390, 391, 419, 478, 479, 563, 864], "7488": [4, 245], "1556": [4, 245], "carl": [4, 126, 245, 390, 864], "gaspar": [4, 245, 864], "cyril": [4, 245, 864], "r": [4, 8, 10, 12, 19, 21, 28, 37, 39, 41, 43, 49, 71, 81, 82, 96, 97, 99, 115, 127, 136, 137, 141, 145, 156, 160, 166, 176, 180, 181, 183, 184, 185, 195, 196, 200, 202, 204, 205, 207, 211, 212, 217, 223, 227, 231, 232, 237, 242, 245, 257, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 276, 277, 279, 280, 281, 301, 362, 382, 413, 419, 420, 448, 481, 482, 514, 530, 538, 562, 563, 572, 575, 577, 578, 580, 585, 668, 692, 695, 696, 701, 702, 708, 710, 711, 712, 737, 740, 756, 773, 774, 780, 784, 788, 795, 799, 804, 808, 811, 816, 818, 843, 845, 847, 864, 870, 873, 888], "pernet": [4, 245, 864], "jess": [4, 245, 864], "husk": [4, 245, 864], "patrick": [4, 245, 864, 870], "j": [4, 8, 12, 13, 18, 19, 21, 31, 35, 42, 44, 59, 60, 66, 71, 72, 75, 76, 83, 94, 99, 101, 113, 121, 126, 137, 144, 151, 155, 160, 162, 172, 178, 180, 195, 196, 202, 204, 205, 206, 207, 212, 227, 228, 232, 240, 245, 257, 265, 266, 267, 268, 271, 275, 276, 277, 298, 301, 303, 356, 362, 382, 391, 396, 406, 413, 417, 419, 420, 421, 431, 476, 479, 481, 482, 530, 531, 538, 541, 545, 562, 563, 571, 572, 577, 578, 593, 599, 602, 665, 668, 670, 694, 695, 696, 698, 699, 701, 702, 710, 712, 720, 722, 724, 726, 734, 737, 738, 740, 862, 864, 867, 870, 888], "bennett": [4, 245, 864], "allison": [4, 245, 864], "sekul": [4, 245, 864], "healthi": [4, 245, 405, 406, 864, 876], "ag": [4, 113, 137, 189, 245, 265, 266, 267, 268, 391, 406, 481, 482, 483, 673, 864, 878, 888], "scalp": [4, 19, 27, 71, 72, 76, 79, 122, 130, 142, 144, 149, 151, 155, 156, 158, 166, 170, 171, 183, 184, 185, 190, 199, 200, 205, 207, 208, 210, 211, 212, 219, 222, 240, 245, 257, 265, 266, 267, 268, 270, 310, 432, 472, 481, 482, 526, 563, 572, 599, 640, 652, 710, 712, 756, 772, 788, 810, 824, 843, 848, 851, 854, 863, 864, 867, 870, 873, 888], "sensit": [4, 5, 7, 23, 25, 27, 82, 122, 130, 151, 158, 178, 203, 207, 212, 231, 237, 245, 265, 266, 267, 268, 269, 270, 275, 276, 278, 366, 457, 481, 482, 560, 563, 627, 633, 648, 676, 695, 696, 698, 699, 756, 800, 864, 869, 888], "frontier": [4, 10, 19, 151, 195, 202, 245, 419, 568, 862, 864], "psychologi": [4, 10, 151, 202, 245, 690, 864], "19": [4, 9, 11, 13, 19, 20, 28, 34, 35, 41, 42, 45, 47, 58, 65, 72, 74, 77, 81, 83, 90, 93, 94, 103, 108, 109, 112, 114, 127, 130, 140, 141, 146, 151, 157, 158, 166, 167, 168, 169, 171, 178, 179, 180, 181, 182, 183, 184, 185, 191, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 215, 216, 217, 218, 219, 224, 227, 228, 229, 231, 232, 235, 236, 237, 245, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 276, 278, 279, 280, 281, 306, 308, 311, 330, 432, 476, 481, 482, 521, 525, 556, 562, 563, 652, 703, 708, 711, 727, 772, 775, 780, 781, 784, 786, 803, 809, 820, 829, 845, 846, 864, 870], "14": [4, 5, 8, 9, 11, 12, 13, 16, 19, 20, 21, 22, 28, 32, 33, 34, 35, 43, 45, 46, 47, 48, 49, 54, 55, 58, 62, 66, 67, 80, 81, 83, 93, 94, 103, 107, 108, 109, 112, 114, 120, 121, 123, 130, 133, 145, 148, 149, 150, 152, 154, 157, 158, 162, 164, 168, 169, 171, 172, 175, 177, 178, 179, 180, 181, 183, 185, 187, 190, 191, 194, 195, 196, 201, 202, 207, 209, 210, 215, 222, 224, 227, 228, 229, 231, 232, 235, 236, 237, 242, 245, 256, 263, 265, 266, 267, 268, 278, 308, 361, 382, 414, 415, 419, 424, 429, 448, 449, 451, 481, 482, 498, 510, 563, 580, 581, 599, 708, 726, 727, 735, 736, 756, 784, 786, 797, 804, 812, 864, 870], "2010": [4, 94, 117, 155, 202, 245, 298, 356, 413, 737, 740, 864, 888], "3389": [4, 10, 19, 151, 195, 202, 245, 419, 568, 862, 864], "fpsyg": [4, 151, 202, 245, 864], "00019": [4, 245, 864], "parametr": [4, 70, 94, 113, 165, 166, 232, 233, 234, 245, 265, 267, 268, 270, 320, 355, 454, 481, 530, 560, 563, 622, 642, 687, 688, 695, 696, 698, 699, 701, 702, 711, 738, 780, 801, 843, 885, 888], "studi": [4, 33, 71, 121, 144, 151, 161, 178, 180, 202, 204, 210, 224, 229, 231, 232, 245, 291, 298, 405, 406, 437, 843, 863, 870, 888], "bmc": [4, 16, 196, 245, 414, 429], "98": [4, 13, 15, 19, 33, 35, 42, 44, 47, 81, 112, 114, 117, 123, 137, 159, 169, 177, 180, 191, 194, 195, 196, 209, 224, 227, 228, 229, 230, 231, 232, 236, 237, 245, 291, 298, 344, 346, 595, 695, 696, 698, 699], "2008": [4, 10, 35, 44, 151, 170, 180, 205, 224, 227, 228, 245, 277, 298, 299, 340, 362, 413, 434, 452, 476, 545, 563, 668, 695, 696, 698, 699], "1186": [4, 16, 196, 209, 245, 414, 429], "1471": [4, 16, 19, 196, 209, 245, 414, 429], "2202": [4, 16, 196, 245, 414, 429], "35": [4, 5, 6, 11, 12, 13, 19, 21, 28, 34, 35, 45, 47, 81, 103, 108, 109, 112, 114, 123, 136, 143, 145, 146, 149, 158, 160, 169, 171, 176, 182, 184, 185, 187, 196, 206, 207, 209, 211, 227, 228, 229, 231, 232, 235, 236, 237, 241, 245, 257, 478, 530, 575, 576, 585, 588, 760, 870], "587": [4, 6, 209, 232], "620": [4, 6, 81], "limo_data": [4, 6], "dataset": [5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 186, 187, 190, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 243, 244, 245, 257, 259, 262, 263, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 298, 299, 304, 314, 330, 347, 355, 356, 357, 358, 360, 361, 363, 365, 371, 372, 373, 413, 416, 420, 423, 430, 433, 442, 444, 445, 454, 456, 457, 470, 476, 478, 479, 481, 482, 491, 492, 494, 519, 520, 521, 525, 526, 529, 530, 533, 536, 537, 541, 546, 547, 560, 563, 576, 577, 581, 587, 595, 603, 624, 625, 626, 627, 633, 640, 656, 693, 695, 696, 698, 699, 708, 710, 711, 730, 741, 756, 772, 780, 784, 789, 796, 818, 824, 834, 847, 865, 870, 871, 876, 878, 888], "electr": [5, 166, 180, 199, 207, 208, 245, 298, 299, 563, 571, 776, 843, 848, 863, 873], "stimul": [5, 32, 45, 151, 180, 213, 237, 265, 266, 267, 268, 361, 481, 482, 560, 561, 566, 587, 658, 708, 710, 711, 712, 756, 772, 864, 870, 888], "deliv": 5, "left": [5, 10, 11, 13, 15, 23, 25, 27, 30, 31, 35, 38, 39, 40, 41, 43, 44, 45, 47, 48, 50, 52, 54, 55, 57, 58, 59, 61, 62, 68, 72, 74, 79, 80, 83, 86, 87, 94, 112, 116, 119, 120, 124, 127, 128, 132, 134, 135, 140, 141, 142, 143, 144, 145, 149, 150, 151, 152, 155, 156, 158, 160, 166, 168, 172, 175, 178, 180, 181, 182, 191, 192, 195, 196, 204, 205, 206, 207, 208, 210, 217, 218, 219, 223, 224, 228, 231, 235, 236, 237, 240, 258, 259, 261, 262, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 278, 279, 280, 281, 314, 316, 326, 327, 337, 338, 362, 382, 388, 413, 420, 435, 437, 440, 447, 471, 479, 481, 482, 500, 505, 515, 528, 562, 563, 583, 642, 647, 656, 657, 660, 671, 708, 710, 711, 712, 756, 772, 780, 786, 787, 788, 790, 792, 794, 795, 796, 799, 807, 808, 809, 810, 811, 816, 820, 824, 843, 864, 870, 873, 888], "wrist": 5, "somatosensori": [5, 32, 34, 46, 113, 241, 245, 395, 888], "nine": [5, 142], "quspin": 5, "serf": 5, "place": [5, 7, 26, 68, 127, 140, 149, 150, 151, 156, 161, 165, 166, 169, 173, 174, 178, 202, 204, 205, 206, 208, 210, 212, 216, 222, 235, 259, 262, 264, 265, 266, 267, 268, 269, 270, 274, 277, 282, 283, 288, 314, 319, 322, 342, 349, 365, 366, 383, 387, 388, 390, 413, 420, 435, 437, 438, 451, 452, 481, 482, 483, 492, 527, 541, 550, 555, 559, 562, 563, 575, 576, 578, 581, 583, 586, 587, 591, 643, 649, 652, 658, 659, 660, 661, 673, 705, 708, 709, 710, 711, 712, 725, 742, 759, 773, 777, 788, 795, 799, 808, 811, 816, 818, 843, 847, 864, 868, 870, 871, 873, 874, 888], "side": [5, 19, 32, 45, 71, 141, 156, 166, 204, 208, 235, 242, 262, 263, 265, 266, 267, 268, 272, 274, 276, 280, 413, 420, 481, 482, 562, 563, 578, 584, 595, 693, 695, 696, 698, 699, 708, 709, 710, 712, 756, 773, 782, 784, 786, 788, 795, 799, 802, 808, 811, 814, 816, 818, 865, 870, 888], "somatomotor": 5, "custom": [5, 27, 36, 56, 68, 109, 120, 122, 126, 130, 140, 142, 145, 149, 150, 151, 167, 192, 202, 203, 204, 205, 207, 208, 213, 222, 232, 242, 257, 262, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 279, 280, 281, 323, 327, 329, 388, 481, 482, 560, 563, 616, 625, 627, 688, 712, 750, 756, 769, 774, 775, 786, 793, 803, 809, 814, 815, 819, 820, 843, 847, 863, 864, 865, 867, 888], "opm_sampl": [5, 109], "subjects_dir": [5, 7, 11, 22, 24, 26, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 54, 55, 58, 59, 60, 61, 69, 81, 90, 94, 95, 104, 109, 115, 116, 118, 124, 125, 126, 127, 131, 134, 135, 136, 150, 155, 156, 157, 158, 159, 160, 161, 166, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 190, 191, 196, 211, 223, 224, 235, 236, 237, 257, 263, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 305, 309, 310, 311, 314, 362, 367, 368, 369, 374, 387, 389, 390, 391, 392, 432, 463, 465, 467, 469, 471, 472, 473, 474, 475, 515, 519, 521, 549, 550, 591, 612, 630, 632, 639, 644, 645, 646, 647, 656, 657, 671, 674, 685, 703, 704, 748, 755, 756, 772, 774, 784, 814, 819, 820, 838, 853, 863, 870, 888], "raw_fnam": [5, 7, 8, 9, 11, 13, 14, 15, 16, 18, 26, 32, 33, 34, 42, 45, 46, 49, 70, 71, 73, 74, 75, 77, 82, 83, 88, 93, 96, 97, 99, 100, 107, 108, 110, 111, 113, 117, 119, 121, 132, 133, 141, 152, 156, 158, 159, 162, 177, 180, 183, 185, 196, 204, 224, 229, 230, 231, 232, 235, 237, 241, 864, 870], "opm_sef_raw": 5, "bem_fnam": [5, 45, 69, 109], "bem": [5, 7, 23, 26, 27, 40, 41, 43, 44, 45, 50, 69, 109, 125, 135, 136, 150, 155, 156, 159, 160, 163, 164, 165, 171, 176, 180, 181, 182, 183, 184, 185, 190, 191, 208, 235, 236, 237, 255, 263, 275, 278, 367, 389, 412, 432, 456, 463, 519, 520, 521, 524, 525, 591, 614, 615, 638, 644, 646, 647, 657, 673, 772, 774, 830, 831, 836, 841, 843, 853, 864, 873, 878, 888], "5120": [5, 7, 26, 41, 45, 50, 69, 109, 150, 158, 159, 176, 181, 182, 257, 412, 519, 525, 673, 863], "sol": [5, 7, 22, 26, 41, 45, 50, 69, 109, 158, 159, 176, 181, 182, 257, 269, 525, 673, 863, 873], "fwd_fname": [5, 22, 31, 35, 40, 46, 51, 59, 60, 69, 90, 92, 93, 94, 95, 180, 191, 224], "fwd": [5, 11, 22, 26, 31, 32, 33, 34, 35, 40, 42, 43, 45, 46, 47, 48, 49, 51, 54, 55, 58, 59, 60, 69, 90, 92, 93, 94, 95, 109, 131, 158, 159, 172, 175, 176, 177, 178, 179, 180, 182, 191, 196, 223, 224, 257, 269, 276, 285, 286, 287, 366, 447, 459, 460, 524, 525, 627, 648, 672, 673, 756, 772, 835, 863, 870], "coil_def_fnam": 5, "coil_def": [5, 109, 864, 870, 873], "dat": [5, 109, 210, 334, 495, 511, 574, 584, 595, 606, 611, 864, 870, 888], "read_raw_fif": [5, 10, 11, 13, 14, 15, 16, 18, 28, 29, 32, 33, 34, 42, 45, 46, 49, 62, 69, 70, 72, 73, 74, 75, 77, 80, 83, 84, 88, 92, 93, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 113, 115, 117, 118, 121, 123, 127, 129, 132, 133, 140, 141, 142, 145, 146, 149, 151, 152, 156, 162, 166, 167, 168, 169, 170, 177, 180, 182, 183, 188, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 216, 217, 218, 219, 223, 229, 230, 231, 232, 235, 237, 240, 241, 259, 487, 870, 874, 878, 888], "h_trans_bandwidth": [5, 21, 113, 114, 191, 202, 211, 265, 266, 267, 268, 415, 424, 449, 451, 481, 482, 599, 888], "notch_width": [5, 212, 452, 481, 482], "threshold": [5, 30, 34, 38, 75, 82, 96, 112, 120, 145, 151, 165, 166, 171, 172, 182, 184, 188, 191, 200, 201, 205, 207, 210, 229, 230, 231, 232, 233, 234, 235, 236, 237, 245, 257, 260, 265, 266, 267, 268, 270, 310, 320, 326, 355, 360, 452, 481, 482, 500, 506, 545, 563, 565, 568, 575, 578, 580, 581, 584, 585, 586, 588, 590, 600, 618, 655, 664, 665, 666, 667, 668, 669, 670, 691, 692, 695, 696, 698, 699, 700, 711, 756, 780, 785, 786, 802, 863, 870, 876, 888], "larger": [5, 49, 59, 71, 150, 179, 196, 199, 202, 204, 210, 219, 229, 242, 265, 266, 275, 280, 281, 457, 481, 482, 500, 565, 586, 604, 703, 736, 737, 739, 740, 786, 809, 817, 820, 869, 870, 888], "squid": [5, 109, 212, 245, 843, 864, 870], "2e": [5, 8, 9, 21, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 60, 71, 75, 90, 93, 94, 109, 119, 121, 152, 162, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 196, 223, 224, 575, 576], "trigger": [5, 10, 93, 103, 109, 144, 166, 168, 171, 177, 182, 185, 188, 189, 190, 191, 201, 206, 211, 227, 257, 258, 356, 361, 454, 455, 481, 482, 489, 496, 498, 504, 506, 581, 586, 622, 655, 673, 843, 847, 863, 870, 873, 888], "257": [5, 112, 115, 169, 170, 209, 232, 864], "sti101": [5, 168, 258, 454, 455], "mask": [5, 28, 31, 82, 96, 100, 101, 112, 120, 142, 185, 202, 206, 223, 227, 228, 229, 230, 231, 232, 258, 262, 265, 266, 267, 268, 274, 413, 419, 420, 454, 481, 482, 489, 562, 563, 578, 622, 695, 696, 698, 699, 708, 710, 712, 773, 788, 792, 795, 799, 808, 811, 816, 818, 867, 888], "mask_typ": [5, 185, 258, 454, 489, 622, 888], "verbos": [5, 10, 11, 13, 14, 15, 34, 38, 40, 41, 42, 44, 49, 51, 58, 60, 71, 76, 79, 80, 84, 88, 93, 94, 99, 104, 108, 109, 121, 123, 124, 126, 134, 135, 136, 140, 142, 145, 146, 149, 150, 152, 157, 158, 159, 162, 170, 171, 172, 177, 179, 180, 181, 182, 183, 184, 190, 196, 200, 201, 202, 205, 208, 209, 210, 211, 212, 217, 218, 222, 227, 228, 229, 235, 240, 242, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 305, 306, 307, 308, 309, 310, 311, 314, 316, 318, 319, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 418, 419, 423, 424, 426, 429, 430, 432, 434, 438, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 463, 464, 468, 469, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 517, 518, 519, 520, 521, 522, 524, 525, 526, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 554, 555, 556, 559, 563, 565, 566, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 584, 585, 586, 588, 589, 590, 591, 592, 593, 595, 596, 598, 599, 602, 603, 604, 607, 608, 609, 610, 614, 615, 616, 617, 618, 619, 621, 622, 623, 625, 626, 627, 629, 630, 631, 632, 633, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 652, 654, 656, 657, 659, 660, 661, 662, 672, 673, 676, 678, 679, 680, 681, 682, 683, 684, 695, 696, 697, 698, 699, 703, 704, 705, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 725, 726, 727, 730, 731, 735, 736, 738, 739, 740, 741, 744, 745, 746, 751, 752, 755, 756, 764, 772, 781, 784, 788, 789, 790, 791, 796, 799, 800, 801, 806, 807, 809, 810, 812, 813, 814, 815, 819, 820, 821, 825, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 845, 847, 878, 888], "errorsuppress": [5, 13, 27, 38, 49, 78, 84, 85, 136, 145, 150, 151, 171, 180, 184, 188, 199, 200, 202, 203, 204, 207, 212, 245, 257, 262, 265, 266, 267, 268, 269, 270, 271, 276, 343, 345, 349, 366, 448, 449, 451, 452, 481, 482, 560, 561, 579, 616, 627, 630, 653, 672, 674, 793, 843, 864, 870, 888], "warn": [5, 10, 13, 38, 134, 135, 136, 140, 151, 162, 171, 172, 181, 184, 191, 203, 205, 206, 217, 218, 229, 240, 257, 259, 260, 265, 266, 267, 268, 270, 272, 273, 275, 276, 279, 280, 281, 285, 286, 318, 341, 344, 350, 351, 356, 360, 362, 363, 365, 367, 371, 372, 405, 432, 440, 447, 460, 463, 481, 482, 502, 563, 574, 584, 595, 596, 615, 625, 644, 646, 649, 653, 654, 708, 710, 711, 712, 752, 754, 756, 789, 800, 834, 836, 853, 855, 878, 888], "about": [5, 13, 19, 27, 34, 43, 44, 71, 75, 94, 101, 114, 140, 141, 143, 144, 146, 149, 151, 155, 160, 162, 166, 168, 169, 172, 175, 178, 184, 188, 189, 190, 191, 192, 195, 196, 200, 202, 203, 205, 206, 210, 211, 213, 216, 217, 218, 223, 224, 227, 229, 257, 258, 260, 262, 264, 265, 266, 267, 268, 270, 274, 275, 276, 278, 283, 285, 286, 298, 299, 300, 307, 308, 312, 313, 320, 321, 322, 326, 328, 329, 342, 344, 346, 351, 360, 369, 371, 372, 373, 375, 413, 415, 420, 421, 422, 432, 437, 454, 457, 464, 473, 480, 481, 482, 483, 486, 513, 518, 525, 526, 531, 541, 559, 560, 563, 574, 577, 591, 600, 601, 622, 642, 643, 672, 673, 676, 694, 708, 709, 710, 711, 712, 735, 736, 738, 739, 745, 756, 769, 772, 776, 781, 782, 791, 798, 808, 812, 843, 847, 851, 863, 864, 866, 867, 869, 871, 873, 876, 888], "decim": [5, 7, 11, 12, 13, 18, 19, 24, 33, 34, 41, 42, 103, 109, 112, 158, 161, 162, 166, 172, 181, 183, 196, 203, 205, 210, 228, 229, 230, 231, 232, 241, 257, 260, 263, 264, 265, 266, 267, 268, 271, 272, 273, 275, 276, 279, 280, 281, 310, 412, 426, 434, 454, 481, 482, 506, 522, 546, 547, 563, 580, 581, 618, 621, 677, 694, 708, 711, 714, 717, 733, 735, 736, 737, 738, 739, 740, 756, 774, 786, 809, 863, 870, 873, 888], "caus": [5, 13, 44, 71, 142, 151, 161, 199, 200, 201, 202, 203, 206, 210, 212, 218, 262, 265, 266, 267, 268, 275, 472, 481, 482, 510, 563, 753, 790, 795, 848, 863, 888], "alias": [5, 13, 162, 181, 203, 260, 263, 264, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 426, 481, 482, 580, 581, 708, 711, 733, 735, 736, 738, 739, 786, 809, 822, 867, 888], "ideal": [5, 71, 108, 133, 135, 144, 151, 170, 202, 204, 207, 208, 228, 242, 314, 797, 804, 843, 847, 867, 870], "instead": [5, 43, 68, 75, 104, 114, 120, 136, 142, 143, 146, 149, 150, 151, 156, 158, 160, 161, 166, 168, 169, 170, 171, 172, 196, 200, 201, 202, 203, 205, 206, 210, 212, 216, 217, 219, 224, 227, 235, 236, 237, 240, 241, 257, 260, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 277, 279, 280, 281, 290, 291, 292, 293, 296, 298, 309, 311, 314, 326, 340, 355, 356, 361, 442, 443, 444, 445, 446, 447, 454, 461, 464, 469, 473, 480, 481, 482, 532, 534, 537, 563, 564, 565, 602, 641, 652, 657, 672, 708, 711, 724, 734, 735, 736, 737, 738, 739, 740, 756, 758, 780, 786, 790, 796, 803, 809, 818, 826, 845, 846, 847, 851, 852, 855, 863, 864, 865, 870, 888], "proj": [5, 8, 9, 11, 13, 14, 15, 18, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 61, 72, 79, 86, 87, 88, 92, 109, 111, 116, 117, 119, 120, 121, 124, 127, 131, 140, 142, 145, 149, 150, 151, 162, 166, 169, 172, 176, 177, 178, 179, 180, 181, 182, 183, 191, 196, 199, 203, 206, 207, 208, 211, 212, 216, 219, 222, 257, 260, 262, 265, 266, 267, 268, 270, 274, 275, 298, 299, 343, 344, 356, 357, 358, 359, 360, 373, 480, 481, 482, 522, 562, 563, 575, 576, 577, 580, 610, 618, 625, 633, 648, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 781, 788, 790, 792, 794, 795, 807, 808, 809, 810, 839, 843, 863, 888], "cov": [5, 11, 21, 31, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 60, 65, 69, 84, 90, 92, 93, 94, 95, 121, 152, 172, 176, 178, 179, 181, 182, 183, 184, 185, 191, 195, 196, 223, 224, 257, 262, 275, 276, 356, 361, 456, 518, 531, 553, 563, 616, 634, 662, 672, 754, 781, 832, 847, 863, 864, 867, 878, 888], "compute_covari": [5, 7, 34, 42, 46, 49, 84, 93, 121, 152, 162, 177, 180, 182, 183, 185, 196, 223, 262, 361, 373, 413, 420, 421, 564, 616, 754, 863, 867, 878, 888], "del": [5, 18, 33, 41, 42, 46, 47, 48, 49, 50, 54, 55, 109, 113, 136, 140, 142, 145, 149, 166, 172, 177, 179, 180, 181, 183, 184, 191, 196, 202, 205], "open": [5, 11, 13, 14, 15, 16, 18, 28, 29, 32, 33, 34, 42, 45, 46, 49, 62, 69, 70, 71, 72, 73, 74, 75, 77, 80, 83, 84, 88, 92, 93, 96, 97, 99, 100, 103, 104, 107, 109, 110, 111, 113, 115, 117, 118, 121, 123, 127, 129, 132, 133, 135, 141, 142, 144, 146, 150, 151, 152, 155, 156, 161, 162, 165, 166, 167, 168, 169, 172, 177, 180, 182, 183, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 216, 219, 223, 224, 229, 230, 231, 232, 235, 237, 241, 242, 245, 264, 265, 266, 267, 268, 275, 278, 382, 481, 482, 563, 571, 673, 794, 799, 809, 817, 843, 844, 846, 851, 853, 854, 864, 866, 867, 869, 873, 888], "isotrak": [5, 42, 101, 109, 123, 129, 143, 162, 172, 207, 209, 228, 257, 339, 870], "700999": 5, "700": [5, 13, 81, 115, 128, 196, 209, 232, 724, 734, 756], "999": [5, 34, 77, 80, 84, 92, 96, 109, 111, 123, 129, 131, 142, 144, 159, 168, 172, 183, 205, 206, 208, 209, 210, 232, 575, 580, 585, 588], "lowpass": [5, 11, 72, 74, 77, 81, 82, 83, 84, 90, 93, 127, 141, 146, 151, 166, 167, 168, 169, 191, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 257, 263, 264, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 448, 481, 482, 708, 710, 711, 712, 786, 809, 810, 873, 888], "331": [5, 13, 19, 34, 56, 84, 114, 169, 202, 209, 210, 232], "48": [5, 11, 12, 13, 19, 21, 28, 35, 45, 46, 47, 81, 94, 103, 104, 108, 109, 112, 114, 137, 145, 151, 157, 168, 169, 171, 195, 196, 209, 218, 227, 228, 229, 231, 232, 235, 236, 237, 245, 888], "6601": 5, "initi": [5, 16, 19, 21, 41, 43, 44, 71, 93, 96, 109, 112, 144, 149, 151, 156, 168, 180, 185, 191, 205, 212, 216, 222, 227, 228, 229, 230, 231, 232, 235, 236, 237, 242, 256, 257, 263, 265, 266, 271, 272, 273, 275, 276, 277, 279, 280, 281, 375, 377, 476, 481, 482, 488, 509, 515, 563, 593, 602, 604, 612, 660, 661, 662, 671, 672, 674, 687, 695, 696, 697, 698, 699, 711, 746, 756, 784, 786, 800, 803, 809, 814, 819, 820, 847, 852, 854, 869, 870, 873, 888], "256": [5, 12, 21, 71, 109, 112, 115, 124, 156, 160, 169, 170, 171, 172, 183, 209, 224, 231, 232, 278, 445, 727, 771, 845, 870], "initial_ev": [5, 90, 93, 109, 185, 224, 454, 888], "detect": [5, 8, 9, 12, 22, 27, 69, 71, 73, 75, 78, 82, 83, 93, 109, 112, 127, 137, 146, 151, 157, 159, 162, 165, 168, 172, 185, 190, 191, 192, 196, 200, 202, 203, 204, 205, 206, 207, 210, 213, 214, 215, 217, 242, 245, 257, 258, 265, 266, 267, 268, 270, 275, 320, 343, 345, 349, 452, 481, 482, 487, 510, 560, 563, 565, 567, 568, 569, 571, 575, 576, 579, 580, 581, 584, 585, 586, 588, 595, 694, 708, 737, 740, 756, 786, 802, 803, 809, 854, 867, 870, 877, 888], "201": [5, 45, 127, 136, 169, 176, 181, 183, 209, 227, 232, 237, 873], "rank": [5, 7, 8, 9, 12, 15, 21, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 84, 88, 90, 93, 94, 104, 107, 108, 109, 110, 113, 121, 152, 162, 166, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 196, 200, 204, 205, 206, 223, 224, 235, 237, 262, 267, 268, 298, 299, 356, 360, 361, 371, 372, 373, 413, 420, 421, 456, 457, 476, 478, 479, 535, 541, 563, 781, 796, 843, 867, 888], "toler": [5, 8, 9, 21, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 60, 90, 93, 94, 109, 121, 152, 162, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 196, 202, 205, 206, 223, 224, 360, 476, 478, 479, 563, 604, 870, 888], "1e": [5, 8, 9, 32, 33, 34, 40, 45, 46, 49, 59, 66, 71, 72, 75, 82, 93, 94, 114, 120, 121, 137, 158, 162, 179, 180, 183, 185, 196, 201, 202, 223, 224, 227, 265, 266, 275, 476, 481, 482, 530, 562, 572, 593, 674, 701, 708, 786, 809, 811, 816, 843, 888], "16": [5, 8, 9, 11, 12, 13, 19, 21, 22, 28, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 60, 61, 72, 80, 81, 85, 90, 93, 94, 96, 100, 103, 108, 109, 112, 114, 121, 123, 144, 152, 156, 160, 162, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 195, 196, 199, 202, 203, 205, 206, 207, 208, 209, 210, 211, 213, 215, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 237, 242, 245, 258, 260, 264, 265, 266, 267, 268, 275, 278, 356, 413, 420, 454, 472, 481, 482, 489, 530, 532, 533, 536, 537, 543, 546, 563, 571, 580, 603, 688, 708, 710, 711, 712, 772, 786, 790, 792, 794, 795, 796, 798, 809, 870, 873], "ep": [5, 8, 9, 21, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 60, 90, 93, 94, 109, 121, 152, 162, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 196, 223, 224, 530], "dim": [5, 8, 9, 21, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 60, 90, 93, 94, 109, 121, 152, 160, 162, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 196, 222, 223, 224, 240, 262, 536, 537, 546, 547, 564, 711, 873], "singular": [5, 8, 9, 21, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 60, 90, 93, 94, 109, 121, 152, 162, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 196, 206, 223, 224, 262, 272, 273, 276, 279, 280, 281, 360, 447, 538, 781, 870, 873], "reduc": [5, 8, 9, 12, 15, 16, 21, 27, 34, 40, 42, 46, 49, 55, 59, 72, 78, 84, 85, 88, 104, 107, 108, 109, 110, 114, 120, 121, 146, 149, 151, 157, 158, 162, 167, 172, 177, 180, 182, 183, 185, 191, 195, 196, 203, 204, 205, 206, 207, 208, 210, 212, 216, 223, 229, 230, 232, 235, 236, 237, 241, 245, 262, 265, 266, 267, 268, 269, 272, 273, 276, 279, 280, 281, 298, 299, 356, 360, 361, 371, 372, 373, 390, 413, 414, 420, 426, 429, 430, 436, 448, 454, 456, 457, 476, 478, 479, 481, 482, 533, 536, 537, 541, 546, 547, 562, 563, 593, 603, 650, 695, 696, 698, 699, 714, 717, 733, 735, 736, 737, 738, 739, 740, 790, 795, 796, 843, 847, 867, 870, 873, 888], "covari": [5, 8, 9, 11, 12, 15, 19, 21, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 67, 69, 81, 88, 90, 92, 93, 94, 103, 104, 107, 108, 109, 110, 113, 122, 124, 130, 149, 152, 163, 164, 165, 166, 176, 178, 179, 181, 182, 183, 184, 185, 191, 196, 200, 201, 205, 224, 235, 237, 245, 257, 265, 266, 267, 268, 269, 270, 275, 276, 295, 298, 299, 301, 303, 319, 355, 356, 357, 359, 360, 361, 371, 372, 373, 413, 419, 420, 421, 438, 454, 456, 457, 476, 478, 479, 481, 482, 486, 518, 529, 530, 531, 532, 533, 534, 536, 537, 541, 543, 546, 547, 555, 563, 564, 616, 622, 627, 662, 672, 694, 709, 719, 756, 781, 786, 790, 794, 796, 809, 832, 843, 864, 873, 878, 888], "empir": [5, 8, 9, 15, 27, 31, 36, 46, 49, 56, 88, 93, 121, 162, 177, 180, 182, 183, 185, 196, 210, 223, 245, 262, 267, 268, 269, 270, 276, 298, 299, 356, 360, 361, 371, 372, 373, 413, 420, 421, 456, 457, 476, 477, 478, 479, 541, 564, 616, 625, 627, 783, 784, 796, 815, 888], "10251": 5, "examin": [5, 34, 47, 75, 129, 136, 142, 145, 146, 151, 160, 166, 177, 178, 205, 216, 218, 847, 867], "align": [5, 7, 9, 28, 80, 135, 151, 155, 157, 158, 163, 164, 165, 168, 172, 182, 183, 184, 190, 216, 227, 259, 263, 265, 266, 270, 272, 273, 276, 277, 278, 279, 280, 281, 304, 310, 314, 367, 369, 392, 432, 447, 472, 473, 481, 526, 563, 592, 637, 638, 640, 657, 744, 745, 746, 756, 772, 784, 786, 824, 843, 870, 888], "forward": [5, 7, 12, 22, 26, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 60, 69, 73, 80, 90, 92, 93, 94, 95, 131, 135, 146, 155, 156, 160, 161, 164, 166, 170, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 188, 191, 196, 199, 200, 201, 202, 204, 205, 207, 208, 223, 224, 245, 257, 265, 266, 267, 268, 270, 273, 275, 276, 278, 279, 281, 285, 286, 287, 298, 299, 300, 301, 303, 304, 314, 318, 319, 330, 336, 366, 375, 391, 413, 420, 424, 438, 440, 441, 448, 449, 451, 452, 476, 477, 478, 479, 481, 482, 486, 496, 519, 520, 524, 525, 526, 539, 540, 541, 542, 545, 556, 561, 614, 627, 637, 648, 652, 656, 657, 659, 660, 661, 672, 673, 708, 750, 756, 772, 774, 793, 797, 822, 824, 835, 843, 848, 859, 864, 869, 873, 876, 878, 888], "mri": [5, 24, 26, 30, 35, 40, 41, 43, 44, 45, 50, 59, 93, 94, 109, 115, 124, 125, 135, 136, 150, 157, 158, 161, 163, 164, 165, 166, 170, 171, 176, 178, 181, 183, 184, 185, 186, 187, 188, 189, 190, 208, 216, 224, 245, 262, 263, 265, 267, 268, 269, 270, 275, 276, 277, 278, 280, 281, 304, 305, 306, 309, 310, 311, 314, 318, 327, 330, 332, 336, 356, 362, 367, 368, 369, 374, 375, 389, 391, 392, 432, 447, 454, 456, 464, 465, 466, 472, 473, 474, 475, 481, 482, 496, 512, 514, 521, 524, 525, 529, 530, 541, 591, 614, 637, 639, 644, 645, 646, 647, 651, 656, 657, 676, 703, 742, 743, 745, 746, 748, 756, 767, 772, 774, 784, 820, 824, 836, 843, 848, 851, 854, 863, 867, 873, 876, 878, 888], "ident": [5, 45, 71, 99, 109, 125, 135, 150, 156, 158, 160, 166, 183, 184, 185, 195, 205, 208, 210, 212, 263, 270, 277, 278, 306, 375, 392, 437, 514, 521, 524, 525, 536, 538, 584, 593, 595, 617, 673, 703, 724, 734, 738, 743, 772, 843, 863, 864, 865, 870, 873, 888], "matrix": [5, 9, 10, 11, 15, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 63, 67, 69, 79, 81, 87, 90, 92, 93, 94, 95, 96, 97, 104, 105, 106, 107, 108, 109, 110, 119, 121, 124, 131, 134, 137, 141, 150, 151, 152, 156, 157, 158, 159, 160, 163, 164, 165, 166, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 191, 195, 196, 200, 205, 206, 207, 223, 224, 228, 229, 230, 231, 232, 236, 237, 245, 257, 262, 263, 265, 267, 268, 270, 275, 277, 278, 295, 298, 299, 300, 306, 314, 317, 318, 320, 331, 356, 361, 362, 371, 372, 373, 419, 434, 454, 457, 481, 482, 486, 521, 525, 530, 536, 537, 538, 539, 540, 541, 542, 545, 546, 547, 555, 560, 563, 564, 570, 571, 593, 596, 616, 620, 622, 657, 662, 673, 678, 679, 680, 681, 682, 683, 684, 688, 693, 694, 695, 696, 698, 699, 703, 709, 716, 717, 718, 725, 743, 772, 776, 777, 781, 782, 799, 800, 803, 832, 843, 864, 888], "co": [5, 22, 69, 157, 202, 210, 222, 245, 343, 439, 843, 864, 870], "registr": [5, 43, 44, 134, 157, 180, 245, 277, 362, 592, 744, 745, 746, 853, 864, 870, 888], "equat": [5, 135, 156, 195, 196, 206, 245, 434, 574, 737, 740, 870, 876], "mi": [5, 864], "defin": [5, 8, 9, 10, 12, 18, 19, 21, 27, 31, 33, 43, 44, 61, 62, 77, 78, 85, 94, 95, 104, 107, 111, 114, 120, 128, 136, 140, 141, 142, 144, 151, 155, 158, 160, 162, 163, 165, 167, 168, 170, 172, 175, 178, 180, 182, 190, 191, 195, 196, 202, 206, 211, 224, 230, 231, 232, 235, 237, 241, 242, 245, 257, 258, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 285, 286, 291, 298, 299, 314, 319, 322, 336, 337, 356, 362, 366, 388, 394, 413, 419, 420, 438, 439, 442, 448, 468, 471, 481, 482, 487, 493, 514, 515, 516, 524, 530, 531, 532, 533, 534, 537, 541, 546, 547, 549, 560, 562, 563, 564, 566, 567, 577, 578, 583, 593, 612, 617, 622, 657, 660, 661, 662, 665, 668, 670, 671, 672, 673, 674, 681, 684, 695, 696, 697, 698, 699, 703, 704, 708, 709, 710, 711, 712, 714, 716, 717, 718, 719, 722, 724, 734, 735, 736, 738, 739, 756, 761, 773, 777, 780, 787, 788, 790, 792, 795, 796, 799, 806, 808, 810, 811, 812, 816, 818, 819, 843, 847, 853, 863, 864, 869, 870, 873, 888], "base": [5, 7, 9, 11, 16, 21, 22, 27, 28, 32, 34, 35, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 54, 55, 58, 59, 62, 69, 71, 78, 83, 85, 90, 92, 94, 96, 99, 100, 103, 107, 109, 110, 112, 113, 114, 117, 119, 121, 132, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 158, 160, 161, 162, 165, 166, 169, 170, 172, 176, 177, 178, 179, 180, 181, 182, 189, 191, 196, 199, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 216, 217, 218, 219, 223, 224, 225, 227, 228, 229, 230, 231, 232, 235, 237, 240, 241, 242, 245, 254, 259, 260, 262, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 314, 316, 320, 321, 326, 331, 334, 343, 344, 345, 346, 349, 355, 356, 357, 358, 361, 362, 366, 377, 406, 413, 415, 416, 419, 420, 421, 423, 424, 426, 427, 430, 434, 436, 439, 442, 444, 446, 448, 449, 451, 452, 454, 457, 464, 470, 472, 480, 481, 482, 487, 498, 515, 521, 522, 525, 528, 531, 545, 560, 562, 563, 565, 566, 570, 571, 572, 573, 574, 577, 578, 580, 581, 584, 585, 595, 608, 609, 610, 622, 627, 629, 646, 656, 660, 661, 668, 681, 684, 693, 694, 695, 696, 697, 698, 699, 703, 704, 708, 710, 711, 712, 714, 717, 720, 727, 735, 736, 738, 739, 741, 752, 756, 765, 767, 773, 775, 780, 785, 786, 788, 794, 795, 796, 797, 799, 801, 802, 803, 808, 809, 811, 813, 814, 816, 818, 819, 820, 835, 843, 845, 846, 847, 848, 850, 851, 856, 859, 863, 864, 867, 873, 876, 879, 883, 888], "lpa": [5, 136, 156, 160, 308, 314, 327, 338, 347, 367, 369, 432, 488, 843, 864, 888], "nasion": [5, 156, 157, 160, 170, 308, 314, 327, 337, 338, 347, 367, 369, 432, 661, 843, 864, 870, 873, 888], "rpa": [5, 136, 156, 160, 308, 314, 327, 338, 347, 367, 369, 432, 488, 843, 864, 888], "fine": [5, 181, 188, 210, 242, 270, 434, 573, 574, 584, 595, 606, 611, 888], "analys": [5, 11, 27, 31, 41, 70, 98, 102, 116, 135, 143, 146, 150, 151, 158, 160, 192, 196, 200, 206, 207, 216, 228, 242, 245, 267, 268, 481, 482, 618, 692, 693, 780, 792, 854, 864, 870, 876, 888], "read_bem_solut": [5, 45, 109, 159, 520, 830, 878], "tran": [5, 7, 26, 41, 50, 51, 52, 60, 69, 81, 109, 115, 116, 118, 124, 125, 135, 136, 150, 157, 158, 159, 160, 172, 176, 178, 181, 182, 183, 190, 191, 208, 211, 257, 263, 275, 278, 306, 314, 367, 368, 389, 392, 432, 434, 456, 464, 472, 473, 521, 524, 525, 570, 591, 595, 640, 673, 676, 703, 742, 743, 745, 756, 772, 784, 842, 843, 863, 864, 870, 888], "solut": [5, 7, 11, 22, 23, 26, 27, 31, 32, 33, 34, 36, 38, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 69, 71, 72, 90, 92, 93, 94, 95, 105, 106, 107, 108, 109, 110, 124, 131, 156, 157, 159, 162, 165, 166, 170, 171, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 191, 196, 200, 207, 223, 224, 235, 237, 245, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 285, 286, 287, 298, 299, 300, 311, 362, 366, 373, 447, 457, 458, 476, 477, 478, 479, 481, 482, 516, 520, 524, 525, 526, 529, 530, 531, 532, 533, 534, 537, 538, 541, 544, 545, 555, 556, 560, 561, 563, 607, 614, 616, 622, 625, 627, 629, 630, 637, 652, 656, 657, 659, 660, 661, 672, 673, 756, 772, 783, 784, 799, 801, 803, 814, 815, 819, 830, 835, 843, 845, 847, 848, 854, 859, 873, 878, 888], "must": [5, 18, 32, 43, 44, 47, 61, 83, 127, 128, 135, 144, 146, 156, 167, 169, 171, 172, 181, 184, 188, 190, 199, 200, 205, 207, 210, 218, 222, 227, 229, 231, 232, 235, 237, 242, 257, 258, 260, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 287, 292, 298, 299, 314, 316, 317, 320, 323, 327, 331, 343, 345, 349, 356, 360, 361, 362, 367, 371, 372, 373, 388, 394, 397, 412, 413, 419, 420, 421, 425, 428, 429, 430, 432, 437, 442, 445, 447, 454, 456, 457, 473, 476, 478, 479, 480, 481, 482, 489, 496, 500, 502, 504, 506, 514, 517, 522, 523, 524, 539, 540, 541, 562, 563, 565, 574, 576, 578, 579, 580, 584, 591, 595, 618, 621, 649, 652, 657, 658, 669, 673, 674, 676, 678, 679, 682, 690, 693, 694, 695, 696, 698, 699, 703, 708, 710, 711, 712, 723, 727, 731, 738, 756, 759, 761, 772, 773, 775, 779, 780, 784, 786, 787, 788, 790, 792, 794, 795, 796, 797, 799, 803, 804, 806, 808, 809, 810, 811, 812, 814, 817, 818, 819, 820, 851, 863, 864, 867, 869, 870, 873], "temporari": [5, 151, 172, 257, 270, 650, 764], "definit": [5, 26, 41, 45, 50, 109, 158, 159, 160, 161, 162, 176, 181, 182, 183, 184, 185, 202, 208, 229, 245, 257, 270, 275, 298, 299, 322, 324, 331, 456, 481, 577, 595, 641, 750, 756, 843, 863, 869, 871, 888], "use_coil_def": [5, 109, 878], "make_forward_solut": [5, 7, 26, 41, 50, 109, 158, 159, 182, 191, 208, 269, 627, 750, 863, 870, 878, 888], "src": [5, 7, 22, 24, 26, 28, 30, 31, 35, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 52, 54, 55, 59, 61, 69, 90, 92, 93, 94, 95, 109, 135, 136, 156, 158, 159, 160, 178, 180, 181, 182, 191, 208, 223, 235, 236, 237, 257, 269, 271, 272, 273, 276, 278, 279, 280, 281, 283, 299, 362, 447, 467, 477, 516, 517, 525, 539, 540, 543, 545, 550, 637, 647, 656, 657, 658, 665, 668, 670, 671, 673, 674, 675, 676, 677, 678, 679, 680, 682, 683, 703, 704, 756, 772, 774, 814, 815, 819, 820, 840, 863, 873, 888], "mindist": [5, 24, 41, 45, 50, 156, 158, 159, 176, 181, 183, 184, 185, 208, 525, 657, 673], "read_forward_solut": [5, 22, 31, 32, 33, 34, 35, 40, 42, 43, 46, 47, 48, 49, 51, 54, 55, 58, 59, 60, 69, 90, 92, 93, 94, 95, 131, 158, 177, 178, 179, 180, 191, 196, 223, 224, 269, 835, 878, 888], "orient": [5, 11, 22, 26, 28, 29, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 69, 80, 90, 92, 93, 94, 95, 104, 107, 108, 109, 110, 116, 124, 131, 156, 158, 159, 160, 165, 166, 171, 172, 175, 176, 177, 180, 181, 182, 183, 186, 187, 188, 191, 196, 208, 210, 223, 224, 227, 235, 237, 245, 262, 263, 264, 267, 269, 270, 272, 273, 276, 279, 280, 281, 285, 286, 298, 299, 300, 366, 433, 447, 456, 457, 458, 472, 476, 478, 479, 501, 524, 525, 529, 530, 531, 532, 533, 534, 536, 537, 539, 540, 541, 542, 545, 546, 547, 606, 616, 617, 620, 624, 625, 627, 640, 656, 660, 672, 673, 756, 765, 772, 774, 775, 784, 824, 835, 863, 872, 873, 876, 888], "later": [5, 11, 19, 32, 38, 43, 47, 70, 101, 109, 127, 136, 140, 141, 142, 144, 149, 151, 162, 172, 175, 177, 180, 181, 189, 191, 199, 200, 201, 202, 205, 206, 207, 208, 212, 216, 217, 218, 219, 222, 235, 236, 242, 245, 260, 265, 266, 267, 268, 273, 275, 277, 279, 282, 362, 455, 481, 482, 563, 619, 621, 708, 710, 711, 712, 756, 819, 847, 852, 853, 864, 865, 870, 873, 888], "convert_forward_solut": [5, 22, 47, 48, 49, 54, 55, 69, 158, 178, 223, 525, 627, 835, 870, 878, 888], "force_fix": [5, 47, 48, 49, 54, 55, 69, 158, 223, 366, 541, 888], "plot_align": [5, 24, 52, 81, 109, 115, 118, 123, 124, 125, 135, 136, 156, 157, 158, 159, 170, 178, 182, 183, 184, 185, 265, 266, 267, 268, 311, 481, 482, 774, 812, 821, 826, 863, 867, 870, 878, 888], "surfac": [5, 11, 22, 24, 26, 27, 31, 34, 35, 36, 40, 42, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 58, 59, 61, 69, 72, 81, 90, 92, 94, 109, 115, 116, 118, 120, 124, 125, 134, 135, 136, 150, 155, 156, 157, 159, 163, 164, 165, 166, 171, 172, 175, 176, 177, 178, 179, 180, 183, 184, 185, 188, 190, 191, 196, 199, 208, 210, 218, 223, 224, 227, 235, 236, 237, 245, 263, 267, 268, 269, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 283, 285, 286, 298, 299, 306, 309, 310, 311, 337, 362, 366, 367, 389, 392, 412, 432, 447, 458, 463, 464, 469, 471, 472, 475, 476, 478, 479, 506, 515, 517, 519, 520, 521, 525, 530, 531, 532, 533, 534, 537, 539, 540, 541, 546, 547, 549, 550, 572, 573, 590, 591, 612, 615, 627, 630, 635, 637, 638, 641, 644, 646, 656, 657, 671, 672, 673, 674, 677, 679, 680, 683, 685, 703, 704, 736, 739, 742, 745, 756, 772, 774, 784, 791, 814, 815, 819, 831, 835, 836, 841, 843, 845, 848, 851, 853, 854, 864, 867, 876, 878, 888], "pial": [5, 115, 124, 135, 136, 155, 160, 181, 263, 278, 549, 630, 703, 756, 772, 784, 888], "set_3d_view": [5, 24, 52, 81, 109, 115, 118, 124, 125, 136, 156, 157, 158, 159, 160, 170, 178, 183, 878, 888], "azimuth": [5, 24, 81, 109, 115, 116, 118, 124, 125, 135, 136, 156, 157, 158, 160, 170, 178, 181, 183, 190, 211, 224, 756, 824, 888], "elev": [5, 24, 81, 109, 115, 116, 118, 124, 125, 135, 136, 156, 157, 158, 160, 170, 181, 183, 190, 199, 206, 211, 224, 756, 824, 888], "distanc": [5, 11, 22, 24, 28, 29, 31, 35, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 61, 69, 80, 90, 92, 93, 94, 95, 104, 107, 108, 109, 110, 116, 124, 128, 131, 135, 136, 143, 156, 157, 158, 159, 160, 161, 166, 170, 171, 172, 176, 177, 178, 179, 181, 183, 190, 191, 192, 196, 202, 209, 211, 223, 224, 235, 237, 257, 262, 265, 266, 267, 268, 270, 271, 274, 275, 276, 278, 283, 306, 346, 367, 413, 416, 417, 420, 423, 432, 434, 456, 465, 471, 472, 481, 482, 515, 525, 545, 562, 563, 567, 571, 574, 578, 584, 595, 600, 601, 647, 656, 657, 665, 668, 671, 673, 674, 676, 678, 679, 680, 682, 683, 695, 696, 698, 699, 703, 708, 710, 712, 756, 773, 776, 788, 795, 799, 808, 811, 816, 818, 824, 843, 870, 873, 888], "focalpoint": [5, 24, 52, 109, 116, 124, 135, 156, 157, 158, 159, 160, 178, 224, 756, 824, 888], "04": [5, 13, 19, 24, 31, 35, 41, 42, 49, 50, 56, 71, 72, 74, 84, 85, 90, 93, 95, 100, 103, 106, 108, 121, 123, 124, 127, 130, 141, 158, 162, 164, 177, 180, 183, 185, 194, 195, 200, 201, 209, 211, 227, 228, 229, 231, 232, 237, 245, 391, 434, 521, 526, 563, 595, 665, 670, 850, 870], "load": [5, 7, 11, 13, 14, 24, 26, 28, 29, 30, 32, 33, 37, 38, 39, 41, 42, 43, 44, 45, 46, 49, 50, 69, 72, 76, 80, 81, 82, 92, 93, 94, 96, 97, 99, 100, 101, 103, 104, 107, 109, 110, 112, 113, 117, 119, 120, 121, 123, 125, 127, 128, 135, 142, 143, 145, 150, 151, 152, 156, 158, 160, 161, 162, 165, 167, 168, 169, 170, 171, 172, 176, 177, 180, 181, 182, 183, 184, 188, 189, 191, 192, 193, 196, 199, 200, 201, 203, 204, 205, 207, 208, 209, 210, 211, 217, 218, 219, 220, 227, 228, 229, 230, 231, 235, 236, 237, 240, 242, 257, 260, 261, 265, 266, 267, 268, 275, 315, 320, 324, 331, 361, 363, 377, 463, 464, 481, 482, 488, 501, 502, 509, 521, 524, 525, 541, 552, 563, 565, 575, 608, 618, 620, 624, 625, 627, 629, 635, 636, 638, 673, 706, 729, 730, 772, 786, 790, 794, 796, 803, 809, 835, 843, 864, 865, 873, 888], "three": [5, 31, 45, 94, 103, 109, 120, 142, 145, 151, 156, 158, 159, 161, 168, 178, 182, 188, 189, 192, 199, 200, 205, 206, 207, 216, 218, 219, 222, 227, 240, 242, 257, 259, 262, 263, 265, 266, 267, 268, 273, 274, 279, 281, 298, 299, 309, 310, 311, 326, 413, 420, 471, 476, 481, 482, 519, 539, 540, 562, 563, 573, 578, 606, 638, 641, 657, 660, 689, 691, 708, 710, 712, 746, 756, 773, 784, 786, 788, 795, 797, 799, 807, 808, 809, 811, 816, 818, 836, 841, 847, 864, 867, 870, 873, 888], "layer": [5, 45, 109, 158, 159, 182, 183, 184, 185, 200, 245, 309, 389, 519, 526, 657, 665, 670, 772, 863, 870, 888], "model": [5, 7, 11, 12, 13, 18, 22, 26, 31, 32, 36, 41, 42, 50, 56, 74, 101, 105, 106, 109, 113, 116, 121, 135, 141, 151, 155, 156, 159, 160, 161, 162, 164, 170, 171, 172, 175, 176, 182, 183, 184, 185, 190, 191, 192, 196, 204, 205, 224, 231, 245, 251, 262, 263, 265, 267, 268, 269, 270, 273, 275, 276, 278, 279, 280, 281, 298, 299, 304, 306, 309, 343, 356, 362, 366, 374, 413, 417, 419, 420, 423, 425, 430, 431, 454, 456, 476, 481, 486, 519, 520, 524, 525, 526, 529, 530, 531, 532, 541, 560, 562, 572, 577, 591, 605, 614, 616, 617, 633, 642, 656, 657, 665, 670, 694, 721, 750, 756, 772, 774, 796, 811, 824, 830, 843, 848, 851, 853, 854, 864, 867, 873, 878, 888], "colloc": [5, 26, 41, 45, 50, 109, 158, 159, 176, 182, 520, 888], "patch": [5, 11, 22, 28, 29, 31, 34, 35, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 61, 69, 90, 92, 93, 94, 95, 104, 107, 108, 109, 110, 124, 127, 131, 156, 158, 160, 166, 172, 177, 178, 179, 181, 182, 191, 196, 223, 224, 235, 237, 257, 262, 265, 266, 267, 268, 273, 274, 278, 279, 281, 283, 285, 286, 366, 413, 420, 481, 482, 530, 531, 532, 533, 534, 537, 541, 546, 547, 562, 563, 578, 615, 637, 656, 672, 673, 708, 710, 712, 773, 788, 795, 799, 808, 811, 816, 818, 873, 888], "statist": [5, 10, 11, 22, 28, 29, 31, 35, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 61, 69, 87, 88, 90, 92, 93, 94, 95, 96, 97, 101, 103, 104, 107, 108, 110, 113, 124, 131, 149, 151, 155, 156, 158, 160, 162, 166, 172, 177, 178, 179, 181, 182, 191, 196, 202, 205, 206, 223, 224, 234, 245, 257, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 285, 286, 298, 299, 320, 324, 326, 355, 356, 362, 366, 454, 481, 482, 530, 531, 532, 533, 534, 537, 541, 546, 547, 560, 563, 615, 618, 622, 637, 642, 668, 672, 673, 686, 688, 689, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 708, 710, 711, 712, 738, 788, 792, 795, 816, 843, 854, 865, 867, 878, 888], "3523": [5, 22, 31, 32, 33, 34, 35, 40, 42, 43, 46, 47, 48, 49, 51, 54, 55, 58, 59, 60, 69, 90, 92, 93, 94, 95, 131, 172, 177, 178, 179, 180, 191, 196, 223, 224], "8196": [5, 182, 191], "free": [5, 22, 26, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 60, 69, 81, 90, 92, 93, 94, 95, 109, 131, 140, 151, 158, 159, 166, 172, 176, 177, 178, 180, 182, 191, 196, 208, 210, 223, 224, 228, 232, 245, 263, 265, 266, 269, 298, 299, 300, 376, 456, 457, 458, 476, 478, 479, 530, 531, 532, 533, 534, 537, 541, 545, 546, 547, 572, 627, 648, 652, 695, 696, 698, 699, 835, 847, 851, 853, 854, 863, 869, 870, 876, 888], "frame": [5, 11, 22, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 61, 69, 80, 90, 92, 93, 94, 95, 104, 107, 108, 110, 112, 124, 131, 135, 136, 140, 151, 159, 163, 164, 165, 166, 170, 172, 177, 178, 179, 180, 181, 182, 183, 184, 190, 191, 196, 210, 212, 223, 224, 235, 237, 257, 263, 265, 266, 267, 268, 269, 270, 278, 304, 305, 314, 318, 327, 332, 369, 392, 432, 472, 475, 481, 482, 485, 492, 512, 514, 521, 526, 574, 584, 595, 637, 638, 640, 654, 657, 731, 743, 751, 753, 756, 772, 784, 824, 843, 864, 869, 870, 873, 888], "normal": [5, 11, 15, 16, 18, 22, 24, 26, 28, 29, 30, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 54, 55, 58, 59, 61, 69, 71, 90, 92, 94, 104, 107, 108, 109, 110, 113, 114, 115, 116, 136, 137, 142, 143, 155, 156, 157, 158, 160, 161, 169, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 196, 206, 207, 210, 222, 223, 224, 235, 237, 241, 242, 245, 256, 258, 262, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 278, 279, 280, 281, 285, 286, 298, 299, 315, 323, 360, 366, 413, 415, 418, 420, 447, 456, 476, 478, 479, 481, 482, 501, 530, 531, 532, 533, 534, 536, 537, 539, 540, 541, 546, 547, 562, 563, 573, 577, 591, 620, 624, 657, 661, 672, 673, 690, 708, 710, 712, 720, 724, 726, 734, 757, 773, 788, 795, 799, 807, 808, 811, 816, 818, 843, 847, 853, 869, 873, 888], "emploi": [5, 11, 22, 26, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 54, 55, 58, 59, 69, 90, 92, 94, 109, 158, 159, 176, 177, 178, 179, 182, 188, 189, 191, 196, 224, 242, 562, 689, 863, 864, 869, 870, 873], "rotat": [5, 10, 15, 19, 22, 34, 35, 40, 41, 42, 44, 46, 47, 48, 49, 54, 55, 58, 59, 69, 80, 90, 92, 94, 109, 156, 158, 172, 177, 178, 179, 180, 182, 191, 192, 195, 196, 202, 204, 224, 257, 267, 268, 270, 298, 299, 352, 367, 371, 434, 472, 567, 573, 595, 746, 747, 749, 756, 772, 791, 845, 853, 870, 888], "convert": [5, 22, 27, 34, 35, 40, 41, 42, 46, 47, 48, 49, 54, 55, 58, 59, 69, 76, 90, 92, 94, 109, 112, 122, 130, 136, 137, 140, 141, 142, 143, 144, 149, 150, 151, 156, 158, 160, 161, 169, 171, 177, 178, 179, 182, 188, 189, 190, 191, 192, 196, 201, 202, 206, 213, 216, 218, 223, 224, 228, 232, 235, 236, 237, 241, 259, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 276, 279, 280, 281, 284, 291, 305, 314, 315, 340, 352, 366, 368, 415, 419, 424, 425, 428, 442, 449, 451, 452, 469, 474, 475, 477, 481, 482, 492, 502, 506, 517, 524, 583, 597, 598, 708, 710, 711, 712, 724, 734, 747, 749, 755, 757, 760, 772, 824, 826, 847, 848, 851, 854, 864, 870, 888], "helmet": [5, 7, 27, 45, 80, 81, 109, 116, 122, 123, 130, 137, 150, 156, 158, 170, 172, 183, 184, 185, 188, 212, 267, 268, 270, 464, 521, 529, 544, 625, 756, 765, 772, 791, 824, 870, 888], "unknown": [5, 46, 72, 74, 77, 83, 90, 93, 109, 127, 141, 146, 151, 167, 168, 169, 181, 199, 200, 201, 203, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 270, 327, 332, 476, 481, 482, 489, 496, 512, 514, 743, 809, 829, 838, 870, 873, 888], "deriv": [5, 32, 33, 34, 46, 72, 109, 123, 126, 140, 144, 149, 156, 168, 200, 227, 228, 240, 245, 270, 367, 563, 602, 627, 835, 870, 873, 888], "subset": [5, 45, 112, 140, 142, 144, 146, 151, 158, 160, 172, 175, 207, 208, 212, 218, 227, 240, 260, 265, 266, 267, 268, 271, 275, 285, 286, 298, 299, 356, 360, 361, 371, 372, 373, 405, 413, 416, 420, 423, 437, 451, 456, 457, 470, 476, 478, 479, 481, 482, 541, 563, 681, 684, 708, 709, 710, 711, 712, 756, 786, 796, 809, 869, 870, 876, 888], "dip_opm": 5, "_": [5, 8, 9, 19, 37, 38, 45, 50, 61, 68, 112, 137, 146, 151, 160, 161, 172, 178, 180, 191, 195, 202, 205, 207, 212, 216, 223, 227, 228, 231, 232, 241, 242, 305, 563, 574, 610, 724, 734, 847, 870, 888], "fit_dipol": [5, 45, 84, 176, 181, 183, 184, 185, 263, 264, 301, 303, 617, 870, 878, 888], "040": [5, 81, 113, 121, 140, 149, 162, 169, 209, 224, 245, 267, 268, 356, 867], "080": [5, 38, 81, 185, 209, 228], "idx": [5, 31, 35, 40, 47, 59, 64, 84, 114, 133, 150, 181, 191, 199, 203, 207, 223, 235, 259, 263, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 313, 480, 481, 482, 539, 540, 711, 784, 888], "argmax": [5, 35, 38, 40, 48, 50, 58, 59, 119, 176, 181, 195], "gof": [5, 40, 116, 169, 176, 178, 183, 184, 185, 263, 265, 266, 267, 268, 301, 303, 313, 344, 346, 347, 348, 481, 482, 560, 708, 710, 711, 712, 784, 888], "1f": [5, 30, 40, 47, 77, 100, 109, 114, 156, 176, 183, 184, 191, 196, 202, 223, 227, 262, 265, 266, 267, 268, 274, 413, 420, 481, 482, 710, 712, 788, 795, 808], "1000": [5, 40, 48, 71, 81, 84, 96, 113, 114, 128, 146, 156, 157, 159, 160, 176, 181, 182, 183, 184, 191, 202, 203, 207, 209, 213, 216, 222, 228, 230, 232, 235, 236, 237, 442, 448, 450, 454, 481, 482, 563, 629, 695, 696, 698, 699, 724, 734, 756, 843, 864, 888], "n20m": 5, "plot_loc": [5, 176, 181, 263, 888], "orthoview": [5, 35, 40, 59, 160, 176, 263, 784, 888], "conductormodel": [5, 45, 109, 158, 183, 184, 185, 262, 265, 266, 267, 268, 274, 306, 314, 413, 420, 456, 481, 482, 519, 520, 526, 562, 563, 578, 614, 657, 708, 710, 712, 772, 773, 780, 788, 790, 792, 795, 796, 799, 806, 808, 810, 811, 812, 816, 818, 830, 843, 878], "solver": [5, 10, 11, 13, 15, 18, 27, 36, 40, 45, 46, 56, 59, 175, 196, 262, 263, 267, 269, 270, 276, 456, 457, 478, 520, 545, 616, 625, 627, 694, 815, 851, 856, 876, 888], "instanc": [5, 15, 26, 31, 43, 44, 45, 50, 75, 83, 88, 109, 114, 158, 159, 166, 169, 171, 172, 176, 178, 182, 183, 185, 188, 189, 191, 204, 205, 206, 208, 210, 212, 216, 222, 240, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 314, 315, 316, 318, 319, 321, 327, 330, 332, 333, 335, 336, 337, 338, 339, 340, 343, 345, 347, 348, 349, 350, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 371, 372, 373, 375, 379, 380, 381, 383, 384, 385, 386, 388, 393, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 434, 435, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 454, 456, 457, 458, 459, 460, 467, 470, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 515, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 550, 552, 554, 555, 556, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 602, 603, 607, 608, 609, 610, 612, 613, 614, 617, 618, 619, 620, 621, 624, 627, 629, 636, 639, 648, 649, 652, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 682, 683, 693, 694, 695, 696, 697, 698, 699, 700, 703, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 725, 728, 729, 744, 745, 746, 748, 753, 756, 757, 758, 759, 765, 769, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 822, 826, 830, 834, 838, 840, 847, 865, 888], "36": [5, 13, 19, 28, 34, 35, 45, 47, 81, 83, 103, 108, 112, 114, 144, 169, 171, 181, 195, 196, 209, 215, 227, 228, 229, 231, 232, 236, 237, 242, 245, 265, 266, 267, 268, 405, 481, 482, 604, 888], "rad": [5, 45, 176, 181, 183, 184, 185, 583, 657, 843], "77": [5, 11, 13, 19, 35, 81, 82, 108, 109, 112, 114, 156, 157, 168, 169, 181, 191, 195, 196, 207, 208, 209, 218, 227, 228, 231, 232, 235, 240, 337, 888], "guess": [5, 45, 123, 171, 176, 181, 183, 184, 185, 205, 209, 257, 472, 492, 769, 888], "grid": [5, 24, 40, 41, 45, 50, 113, 115, 123, 127, 135, 155, 156, 158, 176, 178, 180, 181, 183, 184, 185, 195, 196, 208, 209, 212, 227, 229, 257, 275, 277, 278, 329, 478, 563, 591, 657, 709, 782, 799, 802, 863, 864, 870, 888], "n_sampl": [5, 45, 53, 65, 97, 137, 183, 184, 185, 196, 222, 227, 413, 414, 415, 416, 417, 418, 420, 421, 423, 424, 425, 426, 427, 428, 430, 455, 564, 593, 658, 687, 694, 697, 847], "10250": 5, "65975931e": 5, "41596252e": 5, "50067005e": 5, "18042429e": 5, "93613735e": 5, "88258373e": 5, "73325418e": 5, "23906800e": 5, "47917983e": 5, "14619592e": 5, "36697422e": 5, "53163548e": 5, "08794660e": 5, "00286749e": 5, "18143308e": 5, "22829671e": 5, "93976860e": 5, "28130683e": 5, "86574659e": 5, "28436459e": 5, "91104392e": 5, "54318851e": 5, "60478446e": 5, "18114621e": 5, "42024459e": 5, "20931076e": 5, "52605668e": 5, "29661483e": 5, "53868159e": 5, "40025250e": 5, "28102479e": 5, "49204692e": 5, "41942628e": 5, "29095862e": 5, "00102289e": 5, "19639173e": 5, "09222979e": 5, "25564394e": 5, "49616938e": 5, "35015052e": 5, "94284541e": 5, "29140004e": 5, "85113742e": 5, "46141046e": 5, "97190359e": 5, "ra": [5, 24, 26, 41, 43, 45, 50, 109, 135, 156, 158, 159, 161, 176, 180, 181, 183, 184, 185, 208, 263, 272, 273, 276, 278, 279, 280, 281, 314, 327, 367, 447, 475, 514, 590, 627, 743, 745, 748, 756, 835, 843, 864, 870, 888], "000000": [5, 24, 26, 41, 45, 50, 109, 143, 144, 156, 158, 159, 176, 180, 181, 182, 183, 184, 185, 208, 230, 232, 236, 237, 242], "999800": [5, 109], "015800": [5, 109], "009200": [5, 109], "018100": [5, 109], "930500": [5, 109], "365900": [5, 109], "002800": [5, 109], "366000": [5, 109], "930600": [5, 109], "40": [5, 9, 10, 12, 13, 19, 21, 28, 33, 35, 40, 45, 46, 47, 58, 59, 69, 74, 76, 80, 81, 84, 90, 100, 102, 103, 104, 106, 108, 109, 113, 114, 121, 124, 130, 136, 140, 141, 144, 145, 151, 155, 156, 158, 160, 166, 169, 171, 174, 181, 183, 184, 191, 195, 196, 201, 202, 204, 205, 209, 210, 211, 212, 216, 227, 228, 229, 231, 232, 235, 236, 237, 241, 245, 265, 266, 275, 434, 448, 481, 482, 490, 563, 575, 584, 585, 588, 660, 760, 786, 804, 809, 823, 864, 870, 888], "105": [5, 24, 26, 35, 41, 45, 50, 94, 109, 114, 135, 137, 156, 158, 169, 176, 181, 183, 184, 185, 195, 196, 206, 208, 209, 227, 231, 232, 873], "decompos": [5, 8, 45, 176, 181, 183, 184, 185, 205, 413, 417, 420, 563, 564, 738, 870, 888], "eigenvalu": [5, 21, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 90, 93, 94, 104, 107, 108, 109, 110, 121, 152, 162, 166, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 196, 223, 224, 235, 237, 262, 413, 720, 870, 873], "without": [5, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 60, 71, 76, 90, 93, 94, 104, 107, 109, 113, 120, 121, 127, 144, 149, 150, 151, 152, 159, 161, 162, 165, 170, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 196, 200, 201, 202, 204, 205, 206, 207, 208, 210, 218, 223, 224, 227, 242, 257, 260, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 292, 293, 296, 298, 299, 327, 328, 356, 360, 361, 371, 372, 373, 374, 413, 420, 443, 444, 445, 446, 454, 456, 457, 476, 478, 479, 481, 482, 489, 496, 501, 502, 522, 532, 534, 537, 541, 556, 584, 602, 618, 620, 624, 625, 642, 702, 709, 746, 756, 796, 814, 819, 826, 845, 847, 851, 855, 863, 865, 867, 869, 870, 888], "whiten": [5, 7, 14, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 54, 55, 57, 58, 59, 60, 61, 90, 93, 94, 104, 105, 106, 107, 108, 109, 110, 113, 122, 130, 149, 153, 154, 162, 165, 166, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 196, 205, 223, 224, 235, 237, 245, 257, 262, 265, 266, 267, 268, 270, 275, 298, 299, 356, 360, 361, 371, 372, 373, 413, 420, 454, 456, 457, 476, 478, 479, 481, 482, 538, 541, 560, 563, 564, 593, 622, 633, 721, 786, 790, 794, 796, 809, 813, 843, 867, 888], "omit": [5, 12, 21, 24, 26, 28, 29, 30, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 54, 55, 57, 58, 59, 61, 79, 81, 87, 90, 93, 94, 104, 107, 108, 109, 110, 119, 121, 124, 150, 152, 156, 158, 162, 166, 168, 169, 171, 172, 176, 177, 178, 179, 181, 182, 183, 184, 185, 191, 196, 200, 208, 210, 223, 224, 235, 237, 259, 265, 266, 267, 268, 275, 419, 481, 482, 517, 563, 585, 586, 596, 613, 625, 665, 670, 712, 746, 772, 774, 790, 795, 801, 810, 847, 873, 888], "inner": [5, 26, 31, 41, 43, 45, 50, 109, 129, 155, 158, 160, 161, 171, 176, 181, 182, 191, 245, 257, 265, 266, 269, 306, 309, 456, 472, 525, 595, 657, 673, 756, 843, 848, 851, 854, 863, 864, 867, 870, 873, 888], "skull": [5, 26, 41, 43, 45, 50, 109, 113, 155, 156, 158, 160, 161, 170, 176, 181, 182, 191, 245, 257, 269, 278, 306, 309, 456, 525, 526, 591, 657, 665, 670, 673, 756, 772, 843, 848, 851, 854, 863, 864, 867, 870, 873, 888], "cm": [5, 9, 15, 24, 41, 45, 50, 90, 116, 123, 142, 145, 156, 158, 166, 170, 176, 181, 183, 184, 185, 189, 201, 207, 208, 209, 210, 211, 229, 241, 257, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 337, 339, 341, 481, 482, 489, 518, 584, 787, 790, 792, 817, 843, 888], "insid": [5, 16, 24, 26, 41, 45, 50, 109, 140, 149, 156, 158, 159, 160, 161, 171, 176, 181, 182, 183, 184, 185, 203, 208, 210, 216, 231, 237, 271, 275, 276, 279, 280, 281, 293, 340, 396, 437, 465, 472, 481, 482, 511, 534, 592, 756, 809, 847, 863, 867, 870, 888], "sphere": [5, 24, 26, 35, 41, 43, 45, 48, 50, 59, 68, 72, 84, 93, 94, 109, 120, 123, 125, 135, 156, 158, 159, 160, 176, 178, 181, 182, 183, 184, 185, 189, 200, 208, 209, 210, 245, 257, 262, 263, 265, 266, 267, 268, 271, 274, 276, 298, 299, 304, 307, 308, 314, 362, 412, 413, 420, 456, 481, 482, 493, 521, 524, 525, 526, 562, 563, 572, 578, 657, 671, 674, 708, 710, 712, 756, 772, 773, 780, 784, 788, 790, 792, 795, 796, 799, 806, 808, 810, 811, 812, 815, 816, 818, 826, 843, 888], "102": [5, 11, 13, 14, 15, 16, 18, 22, 26, 28, 29, 30, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 65, 69, 70, 72, 73, 74, 77, 79, 80, 83, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 114, 116, 117, 118, 119, 120, 121, 123, 124, 127, 129, 131, 132, 133, 140, 141, 142, 146, 149, 150, 151, 152, 156, 157, 158, 160, 162, 166, 167, 168, 169, 170, 172, 176, 177, 178, 179, 180, 181, 182, 183, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 216, 217, 218, 219, 223, 224, 227, 229, 230, 231, 232, 235, 237, 257, 873], "extent": [5, 13, 16, 24, 41, 45, 47, 50, 55, 71, 90, 95, 107, 140, 156, 158, 176, 181, 183, 184, 185, 196, 207, 208, 229, 230, 231, 232, 235, 236, 237, 245, 265, 266, 436, 471, 515, 545, 668, 698, 699, 869, 870, 888], "73": [5, 13, 15, 19, 33, 34, 35, 40, 45, 60, 80, 81, 96, 107, 108, 112, 114, 121, 128, 145, 149, 169, 176, 182, 196, 209, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 245, 265, 266, 267, 268, 303, 481, 482, 710, 712, 727], "y": [5, 9, 10, 11, 12, 13, 16, 18, 19, 24, 41, 45, 47, 50, 68, 71, 72, 80, 82, 90, 112, 114, 115, 120, 136, 145, 151, 156, 158, 160, 161, 170, 172, 175, 176, 180, 181, 183, 184, 185, 192, 195, 196, 199, 202, 203, 206, 208, 213, 216, 217, 218, 219, 227, 237, 242, 259, 262, 263, 265, 266, 267, 268, 270, 273, 274, 279, 281, 289, 304, 307, 308, 314, 315, 337, 346, 347, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 432, 453, 481, 482, 493, 529, 530, 562, 563, 564, 572, 578, 583, 627, 661, 694, 708, 710, 712, 743, 746, 747, 749, 756, 757, 760, 773, 780, 784, 787, 788, 789, 790, 792, 794, 795, 796, 797, 798, 799, 804, 806, 808, 810, 811, 812, 816, 817, 818, 824, 835, 843, 845, 870, 888], "42": [5, 8, 9, 11, 13, 14, 15, 16, 18, 19, 28, 29, 35, 42, 45, 47, 49, 69, 70, 72, 73, 74, 77, 80, 81, 83, 88, 90, 92, 93, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 112, 114, 117, 118, 121, 123, 127, 132, 133, 137, 141, 146, 151, 152, 156, 162, 166, 167, 168, 169, 172, 175, 176, 177, 179, 180, 181, 182, 184, 187, 196, 199, 202, 203, 204, 205, 206, 207, 208, 209, 216, 219, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 245, 270, 530, 545, 668], "108": [5, 16, 35, 81, 82, 113, 114, 121, 162, 169, 191, 227, 232, 245, 267, 268, 356, 796, 867], "80": [5, 9, 13, 16, 19, 30, 31, 33, 35, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 61, 71, 79, 80, 81, 86, 87, 90, 94, 104, 108, 112, 114, 115, 116, 118, 119, 120, 125, 127, 149, 151, 156, 158, 168, 169, 171, 172, 176, 178, 179, 181, 183, 184, 185, 191, 195, 196, 207, 209, 210, 211, 227, 228, 229, 231, 232, 236, 237, 245, 412, 563, 660, 797, 804, 853, 888], "1080": [5, 10, 195, 245, 419], "543": [5, 40, 232], "after": [5, 8, 11, 16, 22, 24, 26, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 60, 62, 69, 81, 88, 90, 92, 94, 101, 103, 109, 127, 131, 136, 137, 140, 141, 142, 144, 145, 146, 149, 150, 151, 155, 156, 158, 161, 166, 167, 168, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 191, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 216, 218, 223, 224, 227, 229, 230, 235, 240, 242, 257, 258, 259, 265, 266, 267, 268, 270, 272, 273, 275, 276, 278, 279, 280, 281, 288, 298, 299, 343, 356, 360, 361, 363, 365, 371, 372, 373, 388, 413, 415, 419, 420, 424, 426, 427, 431, 437, 454, 455, 456, 457, 476, 478, 479, 481, 482, 541, 562, 563, 566, 574, 575, 576, 580, 581, 584, 585, 586, 588, 593, 596, 625, 627, 649, 669, 708, 733, 735, 736, 738, 739, 744, 756, 772, 780, 786, 790, 792, 794, 795, 796, 799, 800, 803, 807, 809, 820, 835, 843, 847, 855, 863, 864, 867, 869, 870, 873, 876, 888], "infeas": [5, 24, 41, 45, 50, 156, 158, 176, 181, 183, 184, 185, 208], "least": [5, 41, 45, 71, 84, 114, 141, 158, 159, 176, 181, 201, 202, 203, 205, 206, 210, 227, 232, 245, 265, 266, 267, 268, 275, 415, 424, 428, 430, 449, 451, 452, 470, 481, 482, 563, 565, 566, 582, 584, 595, 693, 756, 786, 809, 853, 863, 867, 869, 870, 888], "awai": [5, 41, 45, 141, 144, 158, 159, 176, 181, 183, 188, 201, 206, 208, 212, 367, 493, 563, 590, 591, 661, 703, 736, 739, 756, 850, 870, 873, 888], "few": [5, 21, 26, 41, 44, 45, 50, 71, 94, 101, 109, 135, 144, 145, 149, 155, 156, 157, 158, 159, 161, 162, 167, 171, 172, 176, 181, 182, 199, 200, 201, 202, 204, 205, 207, 208, 209, 216, 219, 228, 232, 237, 240, 242, 270, 434, 573, 574, 584, 595, 843, 847, 855, 865, 867, 870, 872, 888], "interior": [5, 26, 41, 45, 50, 109, 158, 159, 176, 181, 182, 210], "statu": [5, 26, 41, 45, 50, 109, 158, 159, 176, 181, 182, 188, 265, 266, 267, 268, 270, 343, 365, 367, 481, 482, 489, 496, 504, 560, 708, 710, 711, 712, 756, 843, 847, 870, 873, 888], "70": [5, 9, 12, 13, 15, 19, 21, 34, 41, 45, 46, 47, 58, 59, 81, 88, 90, 103, 104, 108, 109, 112, 114, 116, 136, 140, 143, 144, 156, 158, 159, 166, 169, 170, 183, 184, 195, 196, 202, 205, 209, 211, 227, 228, 231, 232, 235, 240, 242, 245, 265, 266, 267, 268, 337, 479, 481, 482, 563, 710, 712, 724, 727, 734, 735, 738, 888], "outsid": [5, 16, 24, 26, 41, 45, 50, 109, 135, 140, 144, 156, 158, 159, 161, 176, 181, 182, 183, 184, 185, 200, 202, 207, 208, 210, 216, 218, 259, 262, 265, 266, 267, 268, 269, 271, 272, 273, 274, 276, 279, 280, 281, 293, 392, 413, 420, 455, 481, 482, 515, 534, 562, 563, 578, 580, 708, 710, 712, 744, 753, 756, 773, 774, 788, 795, 799, 808, 811, 814, 816, 818, 819, 869, 870, 871, 873, 888], "exterior": [5, 26, 41, 45, 50, 109, 158, 159, 176, 181, 182, 210], "284": [5, 13, 96, 169, 209, 245, 413, 888], "473": [5, 114, 196, 209, 232, 278], "qhull": [5, 26, 41, 45, 50, 109, 158, 159, 176, 181, 182, 888], "189": [5, 32, 33, 34, 46, 99, 113, 169, 227, 232, 241, 245, 870], "solid": [5, 26, 41, 45, 50, 109, 150, 158, 159, 161, 176, 181, 182, 207, 780, 807, 870], "angl": [5, 26, 41, 45, 50, 109, 118, 131, 158, 159, 161, 169, 170, 172, 176, 181, 182, 183, 213, 257, 270, 305, 309, 583, 593, 648, 756, 761, 824, 870, 888], "244": [5, 112, 169, 209, 231], "complet": [5, 7, 9, 26, 32, 33, 34, 41, 45, 50, 109, 144, 150, 155, 158, 159, 161, 169, 176, 180, 181, 182, 200, 202, 205, 208, 224, 227, 245, 257, 265, 266, 278, 305, 513, 563, 594, 608, 705, 752, 756, 764, 771, 847, 854, 863, 864, 865, 867, 870, 872, 873, 888], "128": [5, 13, 19, 24, 41, 50, 120, 158, 160, 168, 169, 170, 171, 213, 215, 222, 224, 227, 231, 232, 265, 266, 412, 774, 864, 888], "limit": [5, 31, 34, 40, 41, 42, 45, 50, 58, 59, 90, 94, 109, 113, 114, 127, 135, 137, 141, 142, 158, 165, 166, 168, 176, 177, 179, 181, 182, 189, 191, 196, 200, 202, 205, 210, 216, 224, 232, 242, 245, 259, 261, 262, 263, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 279, 280, 281, 283, 413, 420, 439, 446, 457, 478, 481, 482, 501, 562, 563, 567, 584, 595, 620, 624, 629, 635, 686, 692, 694, 708, 710, 711, 712, 771, 773, 775, 780, 787, 788, 790, 792, 794, 795, 797, 799, 804, 808, 811, 814, 816, 818, 819, 820, 837, 845, 847, 869, 870, 871, 873, 876, 888], "214": [5, 13, 112, 169, 209, 227, 231, 232], "through": [5, 9, 19, 27, 37, 45, 78, 85, 113, 140, 141, 142, 144, 145, 149, 155, 156, 160, 165, 166, 168, 172, 176, 180, 181, 183, 184, 185, 195, 200, 202, 205, 206, 207, 210, 212, 216, 218, 219, 224, 235, 242, 245, 258, 263, 265, 266, 267, 268, 298, 375, 417, 454, 463, 472, 481, 514, 562, 563, 658, 720, 756, 778, 780, 784, 787, 789, 793, 801, 843, 845, 847, 854, 865, 869, 870, 876, 888], "0642": [5, 169], "3529": 5, "18": [5, 9, 11, 13, 19, 20, 28, 31, 34, 35, 40, 45, 47, 50, 59, 65, 72, 81, 82, 83, 90, 93, 95, 103, 108, 109, 110, 112, 114, 123, 127, 130, 140, 145, 160, 167, 168, 169, 171, 176, 177, 179, 180, 181, 183, 184, 191, 195, 196, 199, 200, 203, 206, 207, 208, 209, 210, 215, 216, 217, 218, 219, 224, 227, 228, 229, 231, 232, 234, 235, 236, 237, 239, 240, 244, 245, 265, 266, 267, 268, 278, 280, 281, 285, 286, 294, 299, 309, 311, 356, 357, 358, 359, 360, 361, 371, 372, 373, 389, 397, 405, 419, 425, 442, 457, 460, 461, 472, 476, 478, 479, 481, 482, 502, 515, 517, 523, 549, 563, 575, 576, 585, 656, 659, 660, 662, 673, 675, 708, 711, 773, 786, 795, 797, 809, 815, 818, 820, 845, 850, 870], "7471": 5, "7238": 5, "0647": 5, "99": [5, 13, 15, 19, 26, 35, 47, 49, 70, 71, 81, 82, 90, 93, 103, 104, 108, 109, 112, 114, 120, 121, 137, 151, 152, 157, 160, 162, 169, 172, 177, 179, 180, 181, 184, 191, 192, 195, 196, 207, 209, 218, 223, 224, 227, 228, 230, 231, 232, 245, 265, 266, 275, 481, 482, 786, 809, 870, 888], "leakag": [5, 27, 36, 45, 56, 276, 278, 366, 540, 542, 544, 627, 630, 736, 739, 756, 761], "constrain": [5, 109, 144, 166, 175, 178, 179, 180, 206, 245, 260, 265, 266, 294, 295, 296, 297, 298, 299, 362, 580, 843, 848, 854, 867, 870, 873, 888], "idea": [5, 7, 21, 27, 113, 155, 171, 175, 177, 202, 204, 205, 206, 207, 235, 237, 242, 245, 265, 266, 310, 436, 866, 867, 870, 871, 876], "inverse_oper": [5, 7, 11, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 47, 48, 54, 59, 90, 104, 107, 108, 109, 110, 172, 177, 235, 237, 275, 530, 531, 532, 533, 534, 536, 537, 542, 546, 547], "minimum_norm": [5, 7, 11, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 58, 59, 61, 90, 94, 104, 107, 108, 109, 110, 124, 166, 177, 178, 179, 181, 182, 191, 196, 206, 223, 224, 235, 237, 843, 856, 863, 870, 878, 888], "make_inverse_oper": [5, 7, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 90, 94, 109, 177, 178, 179, 182, 191, 196, 224, 544, 863, 870, 878, 888], "loos": [5, 7, 31, 34, 35, 40, 41, 42, 46, 48, 54, 55, 59, 61, 90, 94, 109, 144, 177, 179, 182, 191, 196, 224, 457, 458, 476, 478, 479, 530, 531, 532, 533, 534, 536, 537, 541, 545, 546, 547, 863, 870, 873, 888], "depth": [5, 7, 11, 22, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 52, 54, 55, 57, 58, 59, 61, 90, 94, 104, 107, 108, 109, 110, 124, 166, 171, 172, 177, 178, 179, 181, 182, 191, 196, 219, 223, 224, 235, 237, 245, 263, 298, 299, 457, 476, 478, 479, 541, 665, 670, 676, 873, 876, 888], "snr": [5, 7, 10, 11, 19, 21, 27, 28, 29, 30, 36, 38, 39, 41, 48, 54, 55, 56, 61, 88, 90, 104, 109, 166, 177, 179, 181, 184, 191, 202, 223, 224, 235, 237, 262, 267, 269, 270, 276, 345, 457, 529, 530, 538, 541, 543, 544, 616, 625, 627, 672, 756, 779, 813, 863, 870, 876, 888], "lambda2": [5, 7, 11, 28, 29, 30, 38, 39, 40, 41, 45, 47, 48, 50, 54, 55, 58, 59, 61, 72, 90, 94, 104, 108, 109, 156, 166, 177, 179, 181, 183, 184, 185, 191, 208, 223, 235, 237, 530, 531, 532, 533, 534, 536, 537, 542, 543, 546, 547, 572, 863], "stc": [5, 7, 11, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 56, 58, 59, 61, 69, 92, 93, 94, 95, 104, 108, 109, 110, 116, 127, 134, 135, 136, 158, 165, 166, 172, 176, 177, 178, 179, 180, 182, 186, 187, 196, 224, 236, 263, 267, 272, 273, 275, 276, 277, 278, 279, 280, 281, 285, 286, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 362, 447, 456, 460, 466, 476, 477, 478, 479, 517, 524, 529, 530, 531, 532, 533, 534, 537, 539, 540, 544, 546, 625, 635, 648, 658, 672, 673, 674, 675, 700, 703, 704, 756, 814, 815, 819, 820, 843, 863, 883, 888], "apply_invers": [5, 7, 28, 30, 38, 39, 40, 41, 44, 45, 58, 59, 61, 90, 94, 166, 177, 178, 179, 181, 182, 191, 196, 206, 223, 224, 235, 237, 531, 532, 533, 534, 536, 537, 543, 546, 547, 843, 863, 870, 878, 888], "pick_ori": [5, 7, 11, 28, 29, 32, 33, 34, 38, 39, 41, 49, 61, 90, 108, 177, 178, 180, 181, 224, 298, 299, 476, 478, 479, 530, 531, 532, 533, 534, 536, 537, 546, 547, 888], "hemi": [5, 7, 11, 26, 32, 33, 34, 38, 41, 43, 47, 48, 49, 50, 58, 61, 68, 94, 104, 109, 116, 127, 131, 134, 136, 155, 160, 166, 175, 177, 178, 179, 180, 181, 191, 196, 223, 224, 235, 236, 237, 271, 272, 273, 276, 279, 280, 281, 283, 471, 612, 630, 755, 756, 814, 819, 838, 888], "rh": [5, 24, 26, 34, 37, 38, 41, 43, 47, 59, 69, 90, 92, 94, 95, 107, 109, 116, 131, 136, 155, 158, 159, 160, 175, 177, 223, 224, 261, 271, 272, 273, 276, 279, 280, 281, 469, 515, 612, 630, 635, 756, 814, 819, 838, 870], "view": [5, 7, 11, 26, 28, 29, 31, 32, 33, 35, 40, 43, 47, 50, 53, 58, 59, 70, 94, 95, 100, 104, 107, 108, 109, 113, 115, 118, 127, 135, 136, 140, 142, 150, 151, 152, 158, 159, 160, 166, 169, 170, 172, 175, 177, 180, 181, 189, 190, 191, 196, 205, 207, 218, 219, 223, 224, 232, 235, 236, 237, 245, 262, 263, 265, 266, 267, 268, 270, 272, 273, 274, 276, 279, 280, 281, 289, 304, 311, 481, 482, 529, 642, 743, 756, 784, 786, 809, 814, 817, 819, 824, 826, 843, 863, 867, 869, 870, 876, 888], "lat": [5, 11, 26, 58, 94, 104, 127, 136, 151, 160, 166, 196, 223, 237, 756], "initial_tim": [5, 7, 11, 32, 41, 43, 58, 59, 61, 94, 104, 127, 134, 166, 175, 177, 178, 179, 180, 181, 182, 191, 196, 223, 272, 273, 276, 279, 280, 281, 756, 814, 819, 820], "clim": [5, 7, 10, 22, 26, 42, 43, 47, 49, 54, 55, 58, 59, 104, 109, 127, 131, 135, 136, 146, 175, 177, 179, 180, 181, 211, 223, 235, 236, 237, 267, 268, 272, 273, 276, 279, 280, 281, 756, 775, 792, 814, 819, 820, 888], "percent": [5, 26, 42, 107, 109, 112, 179, 229, 232, 272, 273, 276, 279, 280, 281, 288, 546, 547, 563, 664, 665, 666, 667, 668, 670, 708, 711, 775, 801, 814, 816, 819, 820, 888], "lim": [5, 7, 22, 26, 42, 43, 49, 54, 55, 58, 59, 104, 109, 127, 131, 135, 136, 175, 177, 179, 180, 181, 236, 237, 272, 273, 276, 279, 280, 281, 775, 814, 819, 820], "400": [5, 7, 13, 40, 44, 76, 81, 92, 111, 127, 131, 135, 141, 142, 144, 146, 151, 156, 160, 171, 172, 176, 178, 181, 206, 207, 209, 211, 215, 229, 232, 472], "background": [5, 21, 43, 116, 126, 127, 135, 142, 151, 160, 165, 166, 172, 205, 207, 211, 214, 215, 216, 218, 219, 245, 263, 265, 266, 267, 268, 270, 272, 273, 274, 276, 279, 280, 281, 413, 448, 449, 451, 481, 482, 502, 568, 590, 633, 708, 710, 712, 724, 756, 759, 765, 772, 784, 790, 794, 797, 804, 809, 814, 815, 817, 819, 820, 828, 863, 869, 888], "w": [5, 21, 32, 33, 39, 45, 61, 62, 74, 83, 103, 127, 132, 137, 142, 152, 156, 160, 161, 178, 182, 195, 196, 202, 211, 224, 227, 240, 245, 262, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 298, 299, 311, 323, 371, 413, 420, 481, 482, 530, 538, 541, 562, 563, 593, 635, 665, 670, 690, 708, 710, 711, 712, 724, 733, 734, 737, 740, 773, 788, 794, 795, 809, 811, 816, 817, 818, 870, 888], "invers": [5, 7, 11, 19, 21, 32, 33, 34, 38, 43, 44, 45, 46, 48, 50, 51, 54, 55, 56, 58, 59, 60, 61, 88, 90, 105, 106, 107, 108, 109, 110, 124, 149, 155, 156, 159, 160, 162, 170, 172, 175, 176, 178, 179, 180, 181, 182, 188, 191, 196, 200, 206, 208, 223, 224, 235, 237, 245, 257, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 298, 299, 355, 362, 368, 369, 373, 419, 427, 431, 447, 476, 477, 478, 481, 482, 516, 525, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 546, 547, 548, 560, 563, 564, 616, 622, 625, 627, 629, 630, 637, 656, 657, 723, 756, 772, 783, 784, 813, 815, 824, 843, 848, 854, 873, 876, 878, 888], "adjust": [5, 24, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 50, 51, 54, 55, 58, 59, 60, 90, 94, 109, 116, 120, 127, 149, 156, 158, 161, 170, 172, 177, 178, 179, 180, 182, 188, 191, 196, 208, 210, 218, 219, 224, 229, 257, 262, 265, 266, 267, 268, 274, 287, 344, 346, 413, 420, 473, 481, 482, 483, 492, 500, 562, 563, 573, 586, 596, 686, 692, 697, 701, 702, 708, 710, 712, 727, 769, 779, 786, 787, 788, 792, 794, 795, 799, 808, 809, 811, 816, 817, 845, 851, 863, 867, 870, 876, 888], "svd": [5, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 90, 94, 109, 177, 178, 179, 182, 191, 196, 206, 224, 262, 273, 279, 281, 343, 538, 539, 540, 781, 863, 870, 888], "lead": [5, 22, 26, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 70, 71, 88, 90, 94, 109, 144, 151, 162, 167, 177, 178, 179, 182, 191, 195, 196, 200, 202, 210, 212, 224, 259, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 356, 447, 476, 478, 479, 481, 482, 530, 531, 532, 533, 534, 596, 627, 652, 695, 696, 698, 699, 708, 843, 845, 865, 870, 888], "largest": [5, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 90, 94, 109, 135, 151, 177, 178, 179, 182, 188, 191, 196, 224, 227, 413, 457, 506, 539, 540, 563], "38802": 5, "factor": [5, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 45, 48, 50, 54, 55, 58, 59, 61, 90, 94, 104, 107, 108, 109, 110, 135, 157, 171, 177, 178, 179, 181, 182, 191, 196, 202, 203, 210, 212, 223, 224, 229, 230, 231, 235, 237, 241, 257, 260, 263, 264, 265, 266, 267, 268, 270, 272, 273, 275, 276, 279, 280, 281, 300, 356, 360, 367, 373, 421, 422, 425, 426, 434, 453, 481, 482, 491, 533, 543, 546, 547, 573, 574, 580, 581, 584, 593, 595, 597, 644, 646, 647, 660, 661, 689, 691, 708, 711, 714, 717, 720, 733, 735, 736, 737, 738, 739, 740, 746, 756, 769, 786, 794, 807, 809, 815, 817, 819, 843, 870, 873, 888], "trace": [5, 31, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 75, 80, 90, 93, 94, 109, 144, 149, 151, 166, 172, 177, 178, 179, 182, 191, 192, 196, 200, 207, 209, 210, 213, 216, 219, 224, 257, 263, 265, 266, 267, 268, 272, 273, 275, 276, 279, 280, 281, 413, 481, 482, 563, 753, 756, 783, 786, 790, 798, 800, 807, 809, 814, 819, 870, 888], "35945e": 5, "nchan": [5, 34, 40, 41, 42, 45, 48, 50, 52, 54, 55, 57, 58, 59, 90, 94, 109, 166, 167, 169, 177, 178, 179, 182, 191, 196, 216, 222, 224, 269, 270, 873, 888], "nzero": [5, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 90, 94, 109, 177, 178, 179, 182, 191, 196, 224], "invert": [5, 21, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 54, 55, 57, 58, 59, 61, 90, 94, 104, 107, 108, 109, 110, 135, 156, 158, 161, 166, 177, 178, 179, 180, 181, 182, 191, 196, 202, 223, 224, 235, 237, 242, 284, 294, 297, 419, 422, 427, 476, 478, 479, 694, 731, 864, 873], "vector": [5, 15, 18, 19, 27, 34, 36, 41, 56, 109, 111, 131, 162, 175, 177, 178, 188, 195, 204, 205, 206, 207, 209, 210, 224, 245, 257, 260, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 279, 280, 281, 291, 298, 299, 343, 345, 349, 357, 358, 359, 362, 414, 417, 419, 424, 429, 431, 447, 451, 452, 453, 476, 478, 479, 481, 482, 516, 522, 529, 530, 532, 533, 534, 539, 540, 544, 562, 563, 574, 575, 576, 577, 579, 584, 591, 595, 604, 610, 618, 625, 633, 635, 642, 648, 708, 709, 710, 711, 712, 756, 788, 790, 792, 794, 795, 798, 807, 810, 814, 817, 819, 820, 839, 843, 867, 870, 873, 878, 888], "eigenlead": [5, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 54, 55, 58, 59, 61, 90, 94, 104, 107, 108, 109, 110, 166, 177, 178, 179, 181, 182, 191, 196, 223, 224, 235, 237, 870], "residu": [5, 28, 30, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 54, 55, 58, 59, 60, 61, 71, 76, 90, 94, 166, 177, 178, 179, 181, 182, 183, 184, 191, 196, 205, 209, 223, 224, 235, 237, 301, 303, 456, 476, 478, 479, 530, 779, 888], "explain": [5, 18, 28, 30, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 51, 54, 55, 58, 59, 60, 61, 90, 94, 137, 159, 160, 166, 177, 178, 179, 181, 182, 183, 191, 192, 196, 205, 223, 224, 235, 237, 274, 301, 303, 413, 420, 476, 478, 479, 539, 540, 563, 577, 800, 847, 851, 870, 888], "97": [5, 11, 13, 15, 19, 34, 41, 44, 47, 72, 81, 83, 103, 108, 109, 112, 114, 117, 156, 160, 166, 169, 191, 195, 196, 205, 208, 209, 210, 227, 228, 230, 231, 232, 245, 434, 526, 572, 574, 595, 689, 863, 870, 888], "varianc": [5, 8, 14, 16, 28, 30, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 51, 54, 55, 58, 59, 60, 61, 71, 90, 94, 114, 166, 177, 178, 179, 180, 181, 182, 183, 191, 196, 200, 205, 212, 223, 224, 235, 237, 245, 274, 276, 294, 295, 296, 297, 298, 299, 422, 458, 476, 478, 479, 539, 540, 541, 563, 571, 690, 701, 702, 736, 739, 779, 800, 801, 843, 870, 888], "control": [5, 11, 19, 22, 26, 32, 33, 34, 38, 41, 42, 47, 48, 50, 61, 94, 109, 114, 120, 127, 134, 140, 149, 150, 156, 166, 168, 171, 172, 178, 179, 181, 182, 188, 191, 196, 201, 202, 203, 205, 206, 207, 210, 211, 218, 223, 224, 227, 235, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 305, 306, 307, 308, 309, 310, 311, 314, 316, 318, 319, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 418, 419, 420, 421, 423, 424, 426, 429, 430, 432, 434, 438, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 463, 464, 468, 469, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 517, 518, 519, 520, 521, 522, 524, 525, 526, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 554, 555, 556, 559, 563, 565, 566, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 584, 585, 586, 588, 589, 590, 591, 592, 593, 595, 596, 598, 599, 602, 603, 604, 607, 608, 609, 610, 614, 615, 616, 617, 618, 619, 621, 622, 623, 625, 626, 627, 629, 630, 631, 632, 633, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 652, 656, 657, 659, 660, 661, 662, 672, 673, 676, 678, 679, 680, 681, 682, 683, 684, 695, 696, 697, 698, 699, 703, 704, 705, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 724, 725, 726, 727, 730, 731, 734, 735, 736, 738, 739, 740, 741, 744, 745, 746, 751, 755, 756, 764, 770, 772, 775, 781, 782, 784, 787, 788, 789, 790, 791, 796, 799, 800, 801, 802, 806, 807, 809, 810, 812, 813, 814, 815, 819, 820, 821, 822, 825, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 853, 864, 867, 869, 870, 888], "24807258e": 5, "11": [5, 9, 10, 11, 13, 16, 19, 24, 25, 28, 33, 34, 35, 45, 47, 49, 60, 65, 71, 74, 75, 79, 80, 81, 83, 85, 87, 91, 93, 96, 100, 101, 103, 106, 108, 109, 110, 112, 114, 120, 121, 123, 127, 130, 137, 145, 157, 162, 166, 168, 169, 170, 171, 174, 176, 179, 180, 181, 182, 183, 191, 196, 199, 202, 204, 209, 210, 211, 216, 222, 223, 227, 228, 229, 231, 232, 235, 236, 237, 242, 245, 256, 265, 266, 275, 278, 303, 337, 370, 382, 434, 470, 481, 482, 492, 494, 497, 498, 521, 541, 563, 593, 595, 599, 619, 665, 668, 670, 694, 708, 786, 809, 846, 853, 863, 870], "55793898e": 5, "13115753e": 5, "24": [5, 6, 10, 11, 13, 19, 21, 26, 28, 34, 35, 44, 45, 46, 47, 56, 65, 71, 81, 85, 93, 103, 108, 109, 112, 114, 115, 118, 123, 130, 144, 169, 171, 181, 183, 189, 191, 196, 209, 210, 224, 227, 228, 229, 231, 232, 235, 236, 237, 242, 245, 247, 259, 263, 265, 266, 267, 268, 270, 271, 275, 278, 298, 345, 351, 363, 365, 392, 421, 443, 444, 445, 446, 456, 478, 481, 482, 489, 496, 505, 510, 522, 530, 563, 566, 703, 707, 708, 710, 711, 712, 744, 746, 753, 756, 766, 774, 779, 786, 803, 809, 810, 818, 821, 825, 834, 863, 870], "856": [5, 6, 232], "865": [5, 6, 141, 148, 196, 232], "opm_data": [5, 6], "989": [6, 232], "execut": [6, 20, 25, 32, 56, 67, 85, 91, 102, 106, 130, 133, 136, 139, 148, 154, 155, 164, 171, 172, 174, 187, 194, 198, 199, 215, 221, 226, 234, 239, 244, 263, 265, 266, 267, 268, 271, 272, 273, 275, 276, 279, 280, 281, 283, 356, 357, 359, 361, 377, 382, 416, 423, 426, 429, 430, 456, 469, 471, 472, 473, 481, 482, 521, 524, 525, 536, 537, 546, 547, 563, 568, 575, 576, 656, 659, 660, 661, 673, 695, 696, 697, 698, 699, 710, 712, 713, 714, 715, 716, 717, 718, 726, 727, 735, 736, 737, 738, 739, 784, 786, 788, 791, 803, 809, 810, 812, 845, 846, 847, 850, 851, 870, 888], "auto_examples_dataset": 6, "09": [6, 8, 9, 21, 42, 43, 44, 45, 49, 56, 74, 76, 81, 82, 102, 103, 116, 120, 121, 123, 130, 158, 159, 160, 162, 174, 175, 177, 180, 185, 195, 209, 221, 231, 232, 245, 271, 276, 526, 602, 689, 737, 740], "spm_faces_dataset_sgskip": [6, 7], "pipelin": [7, 8, 9, 10, 11, 12, 13, 15, 18, 109, 137, 161, 165, 166, 171, 172, 173, 195, 196, 200, 201, 205, 413, 415, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 466, 564, 746, 854, 864, 865, 867, 888], "reconstruct": [7, 16, 53, 158, 159, 162, 163, 164, 165, 182, 186, 187, 191, 195, 199, 200, 205, 210, 237, 245, 262, 263, 265, 267, 268, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 294, 299, 305, 309, 310, 311, 314, 356, 362, 367, 368, 369, 392, 395, 421, 454, 465, 469, 471, 472, 473, 474, 475, 478, 515, 519, 521, 549, 563, 564, 573, 574, 584, 591, 595, 603, 612, 627, 630, 637, 639, 651, 656, 657, 671, 674, 685, 703, 704, 748, 756, 767, 772, 774, 784, 790, 795, 814, 819, 820, 838, 864, 867, 870, 876, 888], "scrambl": [7, 196, 864], "doe": [7, 28, 31, 55, 58, 59, 71, 72, 76, 80, 84, 112, 117, 127, 140, 141, 149, 151, 158, 160, 161, 162, 168, 178, 181, 182, 188, 189, 190, 192, 200, 202, 203, 204, 205, 206, 208, 210, 211, 212, 213, 222, 224, 229, 231, 232, 235, 242, 245, 257, 258, 260, 262, 263, 264, 265, 266, 267, 268, 272, 273, 274, 276, 277, 279, 280, 281, 289, 298, 299, 304, 321, 334, 360, 363, 371, 372, 389, 443, 444, 445, 446, 447, 471, 481, 482, 501, 505, 529, 549, 552, 565, 578, 580, 587, 620, 624, 649, 654, 658, 708, 710, 711, 712, 743, 746, 751, 759, 794, 817, 847, 852, 863, 867, 869, 870, 873, 888], "quit": [7, 21, 127, 144, 150, 151, 162, 202, 203, 205, 210, 211, 216, 227, 228, 236, 563, 847, 865, 867], "so": [7, 10, 28, 31, 32, 38, 40, 44, 47, 64, 68, 71, 72, 76, 83, 93, 94, 95, 103, 104, 109, 114, 115, 127, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 155, 156, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 180, 181, 182, 183, 184, 190, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 231, 232, 235, 236, 237, 241, 242, 257, 265, 266, 267, 268, 270, 272, 273, 275, 276, 277, 278, 279, 280, 281, 290, 291, 292, 299, 314, 336, 362, 369, 388, 392, 413, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 444, 445, 447, 448, 452, 481, 482, 500, 505, 530, 536, 549, 563, 564, 565, 573, 574, 585, 595, 596, 613, 625, 647, 654, 656, 695, 696, 698, 699, 710, 712, 746, 751, 756, 757, 765, 766, 790, 799, 801, 803, 809, 834, 843, 845, 847, 850, 852, 853, 854, 855, 863, 865, 867, 869, 870, 873, 888], "even": [7, 71, 75, 112, 128, 142, 155, 160, 166, 167, 168, 171, 172, 183, 190, 191, 199, 200, 202, 204, 205, 206, 207, 208, 212, 216, 218, 227, 242, 257, 265, 266, 267, 268, 310, 326, 379, 380, 381, 382, 384, 385, 386, 388, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 481, 482, 510, 563, 720, 817, 847, 855, 864, 870, 888], "fast": [7, 21, 44, 128, 151, 155, 191, 240, 242, 245, 265, 266, 267, 268, 365, 421, 430, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 521, 522, 563, 604, 710, 712, 727, 845, 867, 870, 888], "machin": [7, 18, 94, 95, 181, 196, 200, 201, 245, 251, 270, 283, 356, 574, 584, 595, 865, 888], "sever": [7, 71, 76, 81, 82, 114, 127, 145, 150, 151, 153, 155, 158, 159, 165, 166, 168, 169, 171, 172, 180, 181, 188, 189, 190, 191, 199, 201, 206, 207, 212, 216, 218, 219, 227, 235, 237, 260, 265, 266, 405, 448, 481, 482, 603, 711, 736, 739, 847, 850, 851, 852, 854, 859, 863, 864, 867, 868, 870, 873, 888], "alexandr": [7, 9, 10, 11, 12, 13, 15, 18, 28, 29, 30, 38, 39, 40, 42, 46, 47, 48, 50, 52, 53, 59, 65, 88, 92, 96, 97, 100, 107, 108, 110, 111, 113, 117, 121, 125, 131, 132, 137, 159, 162, 180, 185, 196, 205, 229, 230, 231, 235, 236, 237, 241, 245, 267, 268, 356, 413, 478, 479, 531, 563, 862, 867, 869, 875, 888], "gramfort": [7, 9, 10, 11, 13, 18, 28, 29, 30, 38, 39, 40, 42, 46, 47, 48, 50, 52, 53, 59, 65, 92, 96, 97, 100, 107, 108, 110, 111, 113, 117, 121, 125, 131, 132, 137, 159, 162, 180, 185, 196, 205, 229, 230, 231, 235, 236, 237, 241, 245, 267, 268, 356, 478, 479, 531, 563, 796, 862, 867, 869, 875, 888], "inria": [7, 9, 10, 11, 13, 18, 28, 29, 30, 38, 39, 40, 42, 46, 47, 48, 50, 52, 53, 59, 60, 65, 92, 96, 97, 100, 107, 108, 110, 111, 117, 121, 125, 131, 132, 137, 159, 185, 229, 230, 231, 235, 236, 237, 241], "deni": [7, 11, 13, 16, 21, 26, 33, 42, 70, 79, 101, 109, 113, 114, 120, 121, 126, 132, 133, 151, 162, 196, 231, 232, 237, 245, 267, 268, 356, 531, 862, 867, 875, 888], "engemann": [7, 11, 13, 16, 21, 26, 33, 42, 70, 79, 101, 109, 113, 114, 120, 121, 126, 132, 133, 162, 196, 231, 232, 237, 245, 267, 268, 356, 531, 796, 862, 867, 875, 888], "spm_face": [7, 123, 171, 216, 864, 878], "ica": [7, 17, 20, 27, 75, 78, 84, 85, 88, 162, 165, 166, 199, 200, 201, 204, 207, 214, 215, 218, 245, 262, 265, 266, 267, 268, 270, 275, 314, 329, 330, 375, 417, 427, 454, 481, 482, 496, 557, 560, 578, 580, 581, 588, 589, 593, 607, 608, 622, 786, 799, 800, 801, 802, 803, 809, 828, 854, 867, 874, 877, 878, 888], "create_eog_epoch": [7, 172, 199, 201, 204, 205, 207, 576, 586, 865, 878, 888], "spm_path": 7, "spm_ctf_meg_example_fac": 7, "d_3d": 7, "downsampl": [7, 19, 109, 136, 145, 166, 195, 201, 203, 230, 257, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 412, 453, 454, 481, 482, 519, 584, 694, 708, 711, 815, 867, 888], "heavili": [7, 109, 157, 196, 290, 292, 746, 873], "advis": [7, 71, 189, 202, 257, 863, 870, 888], "real": [7, 32, 50, 92, 93, 151, 155, 156, 158, 160, 161, 202, 205, 206, 207, 208, 218, 222, 224, 229, 245, 298, 456, 481, 482, 524, 604, 711, 724, 734, 735, 736, 756, 854, 859, 876, 888], "jitter": [7, 168, 203, 481, 482, 867], "resampl": [7, 19, 21, 44, 76, 81, 82, 109, 136, 140, 146, 149, 151, 165, 171, 191, 195, 199, 202, 205, 207, 214, 215, 224, 235, 236, 237, 241, 263, 264, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 434, 448, 449, 451, 452, 454, 481, 482, 489, 496, 504, 560, 609, 708, 711, 712, 756, 786, 797, 814, 819, 828, 845, 865, 870, 877, 878, 885, 888], "npad": [7, 19, 76, 81, 82, 191, 195, 235, 236, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 453, 481, 482, 867], "auto": [7, 10, 15, 16, 19, 22, 31, 71, 75, 76, 77, 81, 82, 83, 90, 107, 113, 120, 121, 125, 147, 148, 156, 162, 165, 171, 191, 195, 202, 205, 208, 210, 229, 230, 231, 232, 235, 236, 257, 259, 262, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 278, 279, 280, 281, 307, 308, 314, 330, 343, 345, 349, 355, 356, 360, 361, 362, 367, 413, 415, 419, 420, 424, 425, 432, 434, 437, 442, 443, 444, 446, 447, 449, 451, 452, 453, 458, 476, 478, 479, 481, 482, 487, 489, 491, 493, 496, 497, 504, 508, 521, 526, 541, 560, 562, 563, 564, 572, 573, 574, 575, 578, 584, 585, 588, 595, 599, 613, 619, 638, 652, 708, 710, 711, 712, 756, 772, 773, 775, 780, 786, 788, 790, 792, 793, 795, 796, 799, 801, 803, 806, 808, 809, 810, 811, 812, 814, 816, 818, 819, 820, 841, 863, 864, 867, 888], "sfreq": [7, 8, 9, 14, 19, 21, 31, 64, 66, 69, 70, 71, 90, 92, 93, 94, 95, 109, 111, 114, 125, 127, 128, 136, 137, 144, 166, 168, 169, 172, 190, 191, 195, 201, 202, 203, 211, 212, 216, 217, 218, 222, 224, 242, 259, 260, 265, 266, 267, 268, 270, 272, 273, 275, 276, 279, 280, 281, 284, 375, 415, 418, 419, 424, 425, 426, 437, 439, 441, 448, 449, 451, 481, 482, 599, 613, 700, 713, 714, 715, 724, 726, 727, 732, 734, 735, 736, 737, 789, 797, 873, 888], "5e": [7, 8, 9, 13, 31, 32, 34, 35, 40, 41, 45, 49, 59, 77, 109, 124, 141, 172, 183, 185, 196, 208, 216, 224, 265, 266, 275, 456, 481, 482, 786, 809], "major": [7, 322, 481, 847, 867, 869, 873, 876, 888], "n_compon": [7, 8, 9, 12, 15, 75, 77, 83, 88, 117, 166, 172, 196, 205, 413, 420, 421, 427, 563, 564, 578, 888], "max_it": [7, 75, 77, 83, 166, 205, 530, 563, 593, 673, 715, 726, 888], "random_st": [7, 8, 9, 10, 15, 40, 77, 83, 90, 92, 93, 94, 113, 117, 137, 166, 205, 223, 224, 478, 515, 563, 593, 612, 660, 661, 662, 671, 672, 674, 687, 888], "correl": [7, 12, 18, 22, 26, 44, 75, 103, 146, 162, 196, 204, 205, 210, 227, 228, 231, 245, 257, 270, 277, 344, 356, 362, 419, 420, 425, 563, 578, 595, 692, 697, 864, 867, 870, 888], "indic": [7, 13, 16, 22, 31, 47, 48, 70, 71, 81, 100, 140, 141, 142, 144, 145, 146, 149, 151, 155, 156, 160, 168, 169, 170, 175, 178, 188, 191, 195, 199, 200, 201, 203, 205, 206, 209, 210, 212, 216, 218, 219, 222, 224, 229, 232, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 312, 314, 315, 316, 326, 329, 331, 337, 356, 361, 371, 405, 413, 415, 419, 420, 421, 429, 434, 437, 442, 451, 452, 455, 481, 482, 489, 491, 493, 496, 497, 498, 504, 508, 539, 540, 554, 557, 559, 560, 562, 563, 564, 565, 566, 571, 573, 578, 579, 580, 581, 587, 591, 593, 594, 600, 601, 603, 604, 610, 619, 625, 626, 629, 638, 641, 647, 652, 676, 677, 681, 684, 688, 694, 695, 696, 698, 699, 700, 703, 708, 709, 710, 711, 712, 716, 717, 718, 719, 721, 738, 739, 756, 769, 772, 773, 774, 776, 780, 786, 787, 788, 790, 792, 793, 795, 799, 800, 801, 803, 805, 807, 808, 810, 811, 816, 818, 836, 841, 843, 852, 869, 870, 873, 888], "eog_epoch": [7, 172, 199, 204, 581], "mrt31": 7, "2908": 7, "eog_ind": [7, 205, 563], "eog_scor": [7, 172, 205, 275], "find_bads_eog": [7, 172, 205, 275, 563, 888], "plot_scor": [7, 75, 83, 205, 563, 888], "plot_compon": [7, 77, 205, 563, 874, 888], "topograph": [7, 8, 16, 18, 19, 27, 122, 130, 133, 151, 196, 245, 267, 268, 270, 274, 275, 413, 420, 494, 559, 560, 563, 625, 708, 773, 780, 790, 795, 801, 808, 816, 818, 888], "compon": [7, 8, 12, 14, 15, 21, 27, 29, 30, 31, 34, 41, 42, 44, 45, 47, 59, 71, 75, 77, 78, 79, 80, 85, 87, 88, 94, 119, 124, 137, 150, 151, 162, 166, 172, 177, 178, 179, 181, 182, 184, 191, 196, 199, 200, 201, 202, 203, 204, 206, 207, 210, 211, 212, 218, 224, 235, 237, 245, 267, 268, 269, 271, 275, 298, 299, 314, 330, 356, 360, 361, 371, 372, 373, 382, 405, 406, 413, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 434, 452, 453, 456, 457, 458, 476, 478, 479, 481, 482, 496, 533, 536, 537, 539, 540, 541, 542, 547, 563, 564, 571, 573, 574, 577, 578, 583, 584, 593, 595, 711, 796, 799, 800, 801, 802, 803, 809, 854, 863, 864, 867, 870, 873, 874, 888], "saw": [7, 140, 142, 167, 168, 171, 199, 200, 201, 207, 216, 231], "2nd": [7, 151, 195, 199, 229, 232, 242, 245, 578, 649, 888], "ecg": [7, 72, 74, 77, 81, 82, 83, 90, 92, 93, 94, 109, 111, 127, 131, 140, 141, 142, 146, 149, 151, 167, 168, 169, 172, 189, 191, 200, 201, 203, 204, 206, 208, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 265, 266, 267, 268, 275, 313, 361, 375, 446, 481, 482, 492, 493, 496, 508, 560, 563, 575, 580, 581, 585, 588, 660, 661, 694, 708, 710, 711, 712, 786, 802, 807, 809, 843, 870, 873, 888], "too": [7, 27, 70, 78, 85, 127, 140, 142, 144, 150, 151, 157, 158, 161, 165, 172, 178, 181, 199, 200, 201, 202, 203, 204, 207, 209, 211, 218, 227, 229, 231, 242, 265, 266, 267, 268, 270, 314, 330, 344, 375, 434, 481, 482, 487, 497, 566, 571, 573, 574, 584, 594, 595, 613, 619, 756, 776, 818, 847, 867, 888], "dipolar": [7, 456, 563, 800], "plot_overlai": [7, 83, 205, 563, 888], "inspect": [7, 21, 28, 71, 83, 127, 141, 151, 156, 162, 191, 199, 210, 211, 257, 265, 266, 267, 268, 309, 311, 320, 334, 481, 482, 595, 603, 660, 661, 786, 790, 809, 859, 867], "clean": [7, 74, 75, 76, 84, 141, 144, 159, 166, 167, 172, 189, 200, 202, 204, 205, 206, 207, 211, 232, 242, 260, 265, 275, 481, 482, 494, 522, 563, 603, 618, 694, 800, 847, 867, 888], "default": [7, 21, 31, 43, 44, 75, 88, 103, 112, 114, 120, 127, 135, 137, 140, 142, 145, 146, 149, 150, 151, 156, 158, 162, 166, 167, 168, 169, 170, 171, 172, 178, 179, 188, 189, 191, 192, 200, 201, 203, 205, 206, 207, 208, 210, 213, 216, 217, 218, 219, 222, 227, 231, 232, 237, 240, 241, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 318, 319, 321, 323, 324, 325, 326, 328, 329, 330, 331, 332, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 463, 464, 465, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 595, 596, 598, 599, 600, 601, 602, 603, 604, 607, 608, 609, 610, 612, 614, 615, 616, 617, 618, 619, 621, 622, 623, 625, 626, 627, 629, 630, 631, 632, 633, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 671, 672, 673, 674, 675, 676, 678, 679, 680, 681, 682, 683, 684, 685, 689, 693, 694, 695, 696, 697, 698, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 723, 724, 725, 726, 727, 730, 731, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 748, 751, 753, 755, 756, 759, 764, 765, 769, 770, 772, 773, 774, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 825, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 847, 851, 852, 863, 864, 867, 873, 888], "k": [7, 8, 9, 10, 11, 13, 14, 18, 19, 22, 28, 31, 38, 39, 41, 59, 66, 70, 71, 83, 97, 100, 104, 142, 143, 158, 160, 176, 181, 188, 195, 196, 202, 206, 217, 219, 231, 232, 240, 241, 242, 245, 262, 263, 265, 266, 267, 268, 271, 274, 276, 284, 289, 298, 301, 303, 304, 413, 420, 476, 478, 479, 481, 482, 529, 530, 562, 563, 584, 627, 668, 689, 695, 696, 697, 699, 708, 710, 712, 724, 734, 743, 769, 773, 788, 794, 795, 798, 809, 811, 816, 817, 818, 843, 845, 847, 870, 873, 888], "append": [7, 8, 10, 16, 43, 44, 45, 47, 62, 69, 76, 80, 113, 137, 150, 172, 183, 195, 200, 205, 207, 211, 216, 227, 231, 232, 237, 259, 265, 266, 267, 268, 271, 481, 482, 563, 578, 584, 595, 653, 685, 708, 709, 710, 711, 712, 728, 847, 888], "covarari": 7, "noise_cov": [7, 11, 31, 34, 40, 41, 42, 45, 48, 49, 50, 51, 54, 55, 58, 59, 60, 94, 109, 121, 152, 162, 172, 177, 178, 180, 182, 191, 205, 262, 265, 266, 267, 268, 275, 299, 301, 303, 371, 372, 457, 476, 478, 479, 481, 482, 541, 563, 786, 790, 794, 796, 809, 873, 888], "shrunk": [7, 31, 34, 40, 41, 42, 45, 59, 121, 152, 162, 177, 183, 356], "visual": [7, 8, 13, 14, 15, 16, 32, 33, 35, 36, 41, 42, 45, 56, 57, 59, 61, 62, 70, 72, 74, 80, 87, 94, 101, 104, 105, 106, 113, 115, 116, 119, 120, 128, 130, 132, 134, 135, 137, 141, 143, 145, 147, 148, 151, 152, 153, 154, 155, 160, 162, 165, 166, 168, 171, 172, 175, 178, 179, 183, 186, 187, 191, 192, 196, 199, 201, 202, 203, 208, 210, 213, 214, 215, 216, 217, 218, 219, 228, 229, 231, 241, 242, 245, 257, 260, 263, 265, 266, 267, 268, 270, 272, 273, 275, 276, 278, 279, 280, 281, 309, 310, 311, 315, 343, 344, 345, 346, 351, 353, 354, 362, 365, 366, 419, 440, 442, 454, 456, 466, 481, 482, 496, 517, 521, 529, 530, 540, 542, 544, 558, 560, 563, 567, 583, 595, 603, 619, 621, 622, 625, 627, 630, 633, 635, 648, 657, 660, 661, 695, 700, 708, 710, 711, 724, 734, 735, 737, 738, 739, 740, 756, 761, 773, 779, 780, 786, 787, 789, 790, 791, 794, 797, 798, 799, 800, 801, 802, 803, 806, 807, 809, 823, 827, 828, 843, 844, 845, 848, 850, 851, 854, 859, 865, 867, 870, 871, 873, 878, 888], "dig": [7, 109, 118, 125, 136, 156, 157, 158, 159, 160, 166, 169, 170, 183, 184, 216, 222, 270, 308, 314, 344, 432, 488, 526, 772, 888], "montag": [7, 8, 19, 71, 83, 115, 125, 135, 136, 151, 159, 189, 190, 205, 222, 242, 265, 266, 267, 268, 270, 314, 317, 318, 320, 325, 327, 330, 332, 333, 334, 335, 336, 337, 338, 339, 367, 446, 465, 481, 482, 493, 590, 592, 596, 806, 818, 826, 843, 864, 870, 888], "It": [7, 10, 13, 31, 39, 47, 55, 61, 71, 72, 75, 90, 94, 95, 103, 114, 116, 117, 121, 140, 142, 144, 145, 149, 150, 151, 156, 157, 158, 159, 160, 166, 169, 170, 171, 172, 175, 177, 180, 188, 189, 190, 192, 196, 200, 201, 203, 204, 205, 206, 208, 209, 210, 213, 216, 217, 219, 222, 227, 229, 230, 232, 235, 237, 241, 242, 257, 258, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 279, 280, 281, 283, 288, 298, 299, 305, 314, 332, 343, 356, 361, 367, 413, 421, 422, 448, 456, 473, 476, 478, 479, 481, 482, 489, 496, 501, 511, 521, 524, 530, 536, 537, 541, 546, 547, 563, 567, 573, 584, 595, 596, 603, 609, 616, 620, 624, 629, 633, 635, 674, 680, 683, 697, 702, 708, 711, 724, 731, 734, 746, 756, 794, 799, 819, 832, 835, 839, 843, 845, 847, 850, 851, 852, 854, 859, 863, 864, 867, 869, 870, 873, 876, 888], "spm_dig_montag": 7, "trans_fnam": [7, 69, 81, 156, 178, 191], "spm_ctf_meg_example_faces1_3d_raw": 7, "map": [7, 8, 10, 16, 19, 23, 24, 25, 26, 27, 36, 40, 41, 43, 56, 58, 72, 77, 79, 87, 94, 105, 106, 107, 109, 115, 119, 122, 124, 128, 130, 134, 135, 136, 143, 144, 145, 146, 151, 156, 158, 160, 165, 166, 168, 171, 175, 178, 181, 182, 195, 196, 199, 200, 201, 202, 205, 206, 207, 211, 216, 222, 223, 225, 226, 227, 232, 235, 236, 237, 245, 259, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 279, 280, 281, 284, 289, 291, 298, 312, 314, 326, 342, 362, 365, 366, 373, 413, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 434, 437, 440, 442, 454, 458, 466, 476, 477, 478, 479, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 518, 521, 522, 529, 530, 541, 554, 559, 560, 563, 564, 572, 578, 583, 616, 622, 625, 627, 628, 632, 633, 642, 643, 648, 655, 657, 662, 668, 673, 676, 689, 691, 692, 695, 697, 701, 702, 708, 709, 710, 711, 712, 717, 739, 756, 773, 775, 780, 783, 784, 786, 790, 791, 795, 801, 808, 809, 814, 815, 816, 817, 818, 819, 820, 826, 843, 845, 847, 863, 873, 876, 888], "make_field_map": [7, 124, 150, 267, 268, 791, 878, 888], "plot_field": [7, 124, 150, 267, 268, 888], "170": [7, 81, 84, 123, 137, 169, 183, 184, 185, 191, 202, 205, 209, 232, 245], "daat": 7, "plot_whit": [7, 93, 121, 152, 162, 177, 265, 266, 267, 268, 481, 482, 786, 790, 809, 867, 888], "oct": [7, 11, 22, 24, 28, 29, 31, 35, 38, 39, 40, 41, 42, 43, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 61, 69, 90, 92, 93, 94, 95, 104, 107, 108, 109, 110, 124, 131, 156, 158, 159, 160, 166, 172, 177, 178, 179, 181, 182, 191, 196, 223, 224, 235, 237, 257, 272, 276, 278, 280, 412, 656, 814, 888], "spm_": 7, "s_dspm_invers": 7, "comment": [7, 46, 62, 115, 127, 149, 150, 152, 171, 172, 189, 208, 222, 241, 258, 264, 265, 266, 267, 268, 271, 275, 337, 471, 624, 629, 708, 711, 741, 780, 794, 841, 843, 845, 847, 870, 888], "3d": [7, 27, 31, 35, 38, 40, 52, 59, 61, 96, 97, 122, 127, 130, 135, 136, 142, 151, 156, 158, 160, 161, 171, 175, 176, 185, 190, 196, 206, 210, 227, 230, 232, 257, 263, 265, 266, 267, 268, 270, 272, 273, 275, 276, 279, 280, 281, 291, 314, 315, 327, 340, 368, 421, 451, 452, 481, 482, 502, 512, 521, 574, 584, 595, 689, 695, 696, 756, 757, 758, 763, 765, 766, 767, 772, 777, 784, 791, 806, 812, 814, 815, 819, 821, 822, 824, 826, 827, 843, 846, 847, 851, 859, 864, 865, 868, 888], "both": [7, 19, 31, 32, 33, 38, 40, 41, 45, 47, 51, 58, 59, 60, 70, 71, 72, 75, 87, 90, 94, 99, 109, 114, 132, 140, 141, 149, 150, 151, 162, 166, 168, 169, 170, 171, 172, 175, 177, 178, 180, 181, 182, 183, 189, 190, 191, 192, 196, 199, 201, 202, 203, 204, 205, 206, 207, 210, 211, 216, 224, 229, 231, 235, 236, 237, 240, 241, 242, 245, 260, 261, 264, 265, 266, 267, 268, 272, 273, 275, 276, 278, 279, 280, 281, 288, 298, 299, 308, 317, 356, 360, 361, 362, 371, 372, 373, 413, 420, 432, 437, 454, 456, 457, 476, 478, 479, 481, 482, 500, 521, 541, 563, 566, 573, 578, 580, 609, 612, 625, 626, 630, 635, 657, 658, 662, 671, 689, 691, 695, 696, 698, 699, 708, 710, 711, 753, 756, 769, 779, 780, 787, 792, 793, 796, 799, 814, 819, 838, 843, 847, 853, 867, 868, 869, 870, 873, 888], "ven": [7, 50], "save_imag": [7, 235, 237, 756], "dspm_map": 7, "png": [7, 47, 115, 172, 235, 237, 257, 275, 888], "classifi": [8, 9, 10, 11, 13, 17, 20, 27, 196, 210, 265, 267, 268, 270, 417, 428, 430, 431, 563, 584, 622, 666, 667, 888], "featur": [8, 11, 15, 18, 19, 27, 98, 102, 142, 150, 171, 172, 195, 196, 207, 210, 219, 222, 227, 232, 242, 245, 267, 268, 272, 273, 275, 276, 279, 280, 281, 413, 416, 419, 420, 422, 423, 425, 428, 446, 481, 482, 563, 584, 595, 618, 692, 693, 780, 790, 792, 814, 819, 821, 825, 847, 854, 855, 864, 866, 867, 868, 869, 870, 888], "extract": [8, 9, 18, 21, 24, 27, 36, 38, 41, 56, 62, 68, 74, 75, 80, 83, 100, 112, 113, 123, 127, 128, 135, 136, 141, 142, 144, 149, 151, 158, 159, 165, 166, 169, 171, 181, 188, 190, 191, 196, 199, 203, 205, 206, 207, 213, 214, 215, 217, 222, 228, 229, 230, 237, 245, 257, 258, 265, 267, 270, 271, 272, 273, 276, 278, 279, 280, 281, 309, 343, 344, 345, 346, 347, 348, 351, 353, 354, 364, 373, 388, 413, 417, 420, 421, 437, 447, 454, 481, 484, 489, 496, 501, 517, 529, 530, 544, 563, 567, 595, 620, 624, 625, 629, 635, 680, 683, 755, 779, 798, 843, 847, 863, 864, 870, 873, 888], "en": [8, 19, 196, 245, 256, 875, 888], "wikipedia": [8, 196, 227, 245], "org": [8, 15, 32, 33, 71, 72, 83, 88, 113, 114, 115, 116, 120, 127, 135, 136, 196, 229, 231, 232, 235, 241, 245, 272, 276, 280, 382, 405, 406, 421, 452, 564, 653, 692, 737, 740, 752, 814, 847, 862, 867, 888], "wiki": [8, 155, 196, 272, 276, 280, 563, 752, 814, 843, 863], "common_spatial_pattern": [8, 196], "eegbci": [8, 9, 112, 159, 171, 205, 878, 888], "document": [8, 15, 32, 64, 88, 127, 135, 136, 143, 149, 151, 160, 166, 168, 169, 170, 172, 177, 181, 189, 202, 203, 205, 207, 210, 216, 218, 219, 222, 241, 245, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 305, 306, 307, 308, 309, 310, 311, 314, 316, 318, 319, 331, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 418, 419, 423, 424, 426, 429, 430, 432, 434, 438, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 463, 464, 468, 469, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 517, 518, 519, 520, 521, 522, 524, 525, 526, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 554, 555, 556, 559, 563, 564, 565, 566, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 584, 585, 586, 588, 589, 590, 591, 592, 593, 595, 596, 598, 599, 602, 603, 604, 607, 608, 609, 610, 614, 615, 616, 617, 618, 619, 621, 622, 623, 625, 626, 627, 629, 630, 631, 632, 633, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 652, 656, 657, 659, 660, 661, 662, 665, 670, 672, 673, 676, 678, 679, 680, 681, 682, 683, 684, 695, 696, 697, 698, 699, 703, 704, 705, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 725, 726, 727, 730, 731, 735, 736, 737, 738, 739, 740, 741, 744, 745, 746, 751, 755, 756, 764, 765, 772, 781, 784, 788, 789, 790, 791, 794, 796, 799, 800, 801, 806, 807, 809, 810, 812, 813, 814, 815, 819, 820, 821, 825, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 851, 852, 854, 862, 863, 864, 866, 867, 870, 888], "physionet": [8, 137, 205, 245, 382, 405, 406, 864, 876, 888], "martin": [8, 10, 35, 47, 104, 245, 413, 862, 864, 870, 888], "billing": [8, 888], "tugraz": 8, "sklearn": [8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 117, 137, 171, 195, 196, 205, 227, 356, 361, 414, 416, 419, 422, 423, 427, 430, 752, 846, 847, 888], "discriminant_analysi": [8, 9], "lineardiscriminantanalysi": [8, 9], "model_select": [8, 9, 10, 12, 15, 16, 19, 356, 361, 430, 888], "shufflesplit": 8, "cross_val_scor": [8, 9], "events_from_annot": [8, 9, 112, 128, 135, 136, 137, 144, 168, 211, 242, 259, 284, 489, 496, 878, 888], "make_standard_montag": [8, 19, 71, 83, 125, 159, 170, 190, 242, 265, 266, 267, 268, 270, 325, 332, 481, 482, 493, 505, 878, 888], "concatenate_raw": [8, 9, 10, 81, 112, 191, 265, 266, 267, 268, 363, 364, 481, 482, 584, 595, 864, 878, 888], "read_raw_edf": [8, 9, 83, 112, 137, 159, 189, 205, 487, 489, 504, 864, 870, 874, 878, 888], "classif": [8, 9, 10, 11, 12, 15, 51, 60, 138, 139, 146, 162, 165, 196, 245, 259, 265, 270, 301, 303, 405, 414, 442, 496, 613, 710, 789, 864, 888], "start": [8, 22, 29, 33, 34, 40, 62, 66, 71, 82, 93, 96, 127, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 156, 157, 158, 160, 161, 165, 166, 167, 168, 170, 173, 174, 177, 178, 188, 196, 200, 201, 203, 204, 205, 206, 208, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 227, 228, 229, 240, 241, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 284, 285, 286, 297, 337, 343, 344, 345, 346, 356, 359, 361, 413, 419, 420, 425, 437, 453, 454, 455, 471, 472, 480, 481, 482, 487, 489, 496, 500, 507, 510, 523, 529, 533, 552, 563, 566, 570, 575, 576, 580, 581, 584, 585, 586, 587, 588, 590, 609, 625, 673, 685, 695, 696, 698, 699, 708, 709, 711, 713, 714, 715, 716, 717, 718, 719, 743, 756, 761, 780, 782, 789, 795, 800, 802, 803, 809, 843, 845, 847, 849, 850, 851, 852, 855, 858, 863, 866, 867, 870, 871, 873, 874, 888], "cue": [8, 135], "feet": [8, 9, 112, 382], "standard_1005": [8, 71, 83, 159, 170, 205], "set_montag": [8, 15, 19, 68, 71, 83, 125, 128, 135, 136, 151, 159, 170, 182, 189, 190, 205, 222, 242, 265, 266, 267, 268, 270, 446, 481, 482, 493, 505, 870, 888], "skip_by_annot": [8, 9, 265, 266, 267, 268, 481, 482, 584, 595, 888], "t1": [8, 9, 30, 44, 50, 112, 156, 157, 158, 159, 160, 161, 176, 257, 278, 280, 281, 305, 309, 310, 311, 322, 392, 473, 481, 591, 657, 774, 820, 843, 864, 870, 888], "t2": [8, 9, 112, 322, 481, 888], "train": [8, 10, 11, 13, 15, 16, 19, 88, 137, 195, 196, 413, 414, 415, 416, 417, 418, 420, 421, 423, 424, 425, 426, 430, 563, 564, 799, 847, 863, 864, 888], "epochs_train": [8, 137], "edf": [8, 9, 83, 112, 137, 159, 192, 205, 446, 481, 482, 489, 496, 504, 613, 864, 870, 874, 888], "eegmmidb": [8, 9, 83, 112, 159, 205, 382, 888], "s001": [8, 9, 83, 112, 159, 205], "s001r06": [8, 9, 112, 159], "19999": [8, 112, 159, 205], "124": [8, 33, 35, 112, 159, 169, 205, 227, 231, 232, 245, 391], "994": [8, 9, 71, 83, 112, 159, 205, 232], "s001r10": [8, 9, 112], "s001r14": [8, 9, 112], "bandpass": [8, 9, 12, 13, 14, 15, 16, 18, 21, 34, 42, 73, 77, 82, 88, 113, 115, 121, 133, 136, 141, 144, 146, 172, 196, 199, 201, 204, 205, 207, 211, 212, 232, 242, 265, 266, 267, 268, 415, 421, 424, 448, 449, 451, 481, 482, 599, 710, 712, 809, 810, 888], "265": [8, 9, 13, 81, 82, 112, 169, 191, 209, 232, 245, 665, 670], "656": [8, 9, 232], "64": [8, 9, 12, 13, 19, 21, 26, 32, 33, 34, 35, 41, 45, 46, 47, 50, 58, 59, 81, 82, 83, 101, 103, 108, 112, 114, 137, 143, 158, 159, 169, 170, 171, 172, 176, 178, 181, 184, 185, 191, 196, 205, 209, 224, 227, 228, 231, 232, 245, 262, 265, 266, 267, 268, 271, 274, 276, 413, 420, 479, 481, 482, 503, 536, 537, 546, 547, 562, 563, 708, 710, 712, 773, 788, 795, 799, 808, 811, 816, 818, 853, 864, 870, 874], "annot": [8, 9, 27, 38, 41, 44, 47, 69, 76, 78, 83, 85, 90, 94, 95, 112, 113, 126, 127, 128, 135, 136, 144, 146, 151, 160, 165, 166, 171, 173, 175, 181, 189, 190, 191, 192, 195, 199, 205, 208, 213, 219, 220, 221, 223, 260, 265, 266, 267, 268, 270, 284, 346, 347, 361, 365, 390, 442, 480, 481, 482, 483, 489, 494, 496, 500, 502, 510, 522, 563, 565, 566, 567, 568, 569, 570, 580, 581, 584, 585, 586, 595, 596, 613, 622, 630, 646, 649, 712, 756, 772, 798, 801, 809, 810, 824, 825, 838, 843, 864, 865, 870, 878, 888], "descript": [8, 9, 112, 128, 135, 136, 137, 140, 142, 144, 151, 168, 169, 170, 188, 190, 191, 201, 211, 216, 217, 218, 222, 227, 259, 265, 266, 267, 268, 270, 274, 284, 324, 325, 357, 358, 361, 442, 481, 482, 483, 500, 522, 563, 566, 580, 581, 585, 619, 708, 711, 712, 801, 810, 843, 847, 864, 873, 888], "801": [8, 19, 44, 144, 241], "discrim": 8, "mont": [8, 245], "carlo": [8, 245, 888], "cross": [8, 9, 10, 11, 12, 15, 16, 19, 27, 32, 33, 34, 36, 44, 56, 79, 87, 105, 106, 119, 121, 122, 130, 137, 162, 166, 177, 195, 196, 200, 205, 207, 210, 223, 224, 231, 245, 262, 265, 267, 269, 270, 276, 277, 289, 291, 298, 299, 300, 356, 361, 362, 366, 373, 413, 416, 419, 425, 429, 430, 434, 454, 481, 529, 539, 540, 541, 542, 545, 560, 563, 573, 580, 584, 585, 595, 616, 622, 625, 627, 635, 709, 713, 714, 715, 716, 717, 718, 719, 725, 756, 782, 800, 843, 859, 864, 867, 876, 888], "epochs_data": [8, 415, 418, 422, 888], "get_data": [8, 9, 10, 12, 13, 14, 16, 18, 21, 71, 73, 76, 84, 96, 97, 100, 114, 115, 127, 133, 137, 140, 141, 146, 149, 166, 167, 196, 203, 206, 228, 232, 240, 241, 242, 265, 266, 267, 268, 481, 482, 709, 710, 712, 870, 888], "epochs_data_train": 8, "cv": [8, 9, 10, 11, 12, 15, 16, 19, 196, 356, 361, 429, 430, 888], "test_siz": 8, "cv_split": 8, "split": [8, 10, 11, 15, 16, 19, 58, 68, 88, 94, 127, 145, 159, 166, 195, 196, 207, 223, 228, 237, 245, 265, 266, 267, 268, 271, 272, 273, 276, 279, 280, 281, 356, 361, 430, 472, 480, 481, 482, 502, 505, 536, 537, 595, 685, 694, 709, 737, 740, 756, 782, 814, 819, 873, 888], "assembl": [8, 9, 231, 541, 700, 865, 888], "lda": [8, 9], "log": [8, 9, 12, 21, 33, 83, 121, 129, 142, 162, 177, 200, 202, 205, 207, 211, 219, 229, 241, 242, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 305, 306, 307, 308, 309, 310, 311, 314, 316, 318, 319, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 418, 419, 420, 423, 424, 426, 429, 430, 432, 434, 438, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 463, 464, 468, 469, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 517, 518, 519, 520, 521, 522, 524, 525, 526, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 554, 555, 556, 559, 563, 565, 566, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 584, 585, 586, 588, 589, 590, 591, 592, 593, 595, 596, 598, 599, 602, 603, 604, 607, 608, 609, 610, 614, 615, 616, 617, 618, 619, 621, 622, 623, 625, 626, 627, 629, 630, 631, 632, 633, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 652, 653, 654, 656, 657, 659, 660, 661, 662, 672, 673, 676, 678, 679, 680, 681, 682, 683, 684, 695, 696, 697, 698, 699, 703, 704, 705, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 724, 725, 726, 727, 730, 731, 734, 735, 736, 738, 739, 740, 741, 744, 745, 746, 751, 754, 755, 756, 764, 772, 781, 784, 785, 788, 789, 790, 791, 796, 797, 799, 800, 801, 804, 806, 807, 809, 810, 812, 813, 814, 815, 816, 819, 820, 821, 825, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 867, 878, 888], "norm_trac": [8, 9, 196, 413, 888], "scikit": [8, 9, 16, 18, 19, 117, 196, 205, 417, 419, 421, 422, 423, 424, 426, 427, 428, 431, 563, 865, 888], "learn": [8, 9, 16, 18, 19, 21, 71, 117, 143, 161, 162, 166, 196, 198, 200, 201, 205, 245, 251, 356, 417, 419, 421, 422, 423, 424, 426, 427, 428, 430, 431, 563, 593, 847, 854, 864, 865, 867, 888], "clf": [8, 9, 10, 11, 12, 13, 15, 18, 196, 428, 888], "class_bal": 8, "accuraci": [8, 10, 15, 33, 81, 137, 245, 262, 265, 266, 267, 268, 274, 372, 373, 413, 419, 420, 425, 434, 456, 481, 482, 541, 562, 563, 577, 578, 590, 665, 670, 708, 710, 712, 736, 739, 746, 773, 788, 795, 799, 808, 811, 816, 818, 873, 888], "chanc": [8, 9, 10, 11, 196, 869, 888], "fit_transform": [8, 9, 10, 14, 18, 196, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 564], "plot_pattern": [8, 12, 196, 413, 420, 888], "ch_type": [8, 14, 22, 26, 42, 64, 80, 82, 87, 100, 112, 114, 120, 124, 125, 131, 141, 142, 145, 149, 150, 151, 166, 170, 176, 177, 190, 205, 210, 211, 219, 222, 232, 240, 241, 262, 265, 266, 267, 268, 320, 321, 375, 413, 420, 481, 482, 508, 521, 562, 563, 568, 578, 584, 648, 652, 708, 710, 711, 712, 787, 788, 795, 799, 811, 812, 816, 818, 888], "au": [8, 213, 262, 265, 266, 267, 268, 274, 375, 413, 420, 481, 482, 583, 708, 710, 712, 788, 795, 808, 816], "7e": [8, 9, 32, 35, 48, 49, 54, 55, 58, 71, 94, 121, 150, 152, 162, 172, 178, 179, 182, 183, 185, 191, 196, 200, 223], "8e": [8, 9, 32, 35, 49, 75, 109, 121, 162, 172, 177, 180, 183, 185, 191, 196], "0001": [8, 9, 32, 79, 87, 119, 124, 150, 179, 200, 478, 479], "00012": [8, 9], "6e": [8, 9, 34, 42, 46, 119, 121, 152, 172, 177, 183, 185, 196], "00011": [8, 9], "933333": 8, "533333": 8, "00025": 8, "00026": 8, "9e": [8, 9, 21, 42, 49, 87, 124, 150, 152, 162, 177, 180, 182, 183, 184, 185, 196, 223], "w_length": 8, "int": [8, 11, 19, 31, 69, 73, 90, 93, 95, 109, 114, 127, 143, 149, 160, 169, 171, 191, 195, 202, 203, 212, 216, 222, 224, 237, 242, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 305, 306, 307, 308, 309, 310, 311, 313, 314, 316, 318, 319, 329, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 423, 424, 425, 426, 429, 430, 432, 434, 435, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 463, 464, 466, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 598, 599, 602, 603, 604, 607, 608, 609, 610, 612, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 629, 630, 631, 632, 633, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 652, 654, 656, 657, 658, 659, 660, 661, 662, 671, 672, 673, 674, 676, 678, 679, 680, 681, 682, 683, 684, 685, 687, 688, 691, 694, 695, 696, 697, 698, 699, 700, 703, 704, 705, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 723, 725, 726, 727, 730, 731, 732, 733, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 751, 755, 756, 764, 765, 769, 772, 773, 774, 780, 781, 782, 784, 785, 786, 787, 788, 789, 790, 791, 794, 795, 796, 799, 800, 801, 802, 803, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 825, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 888], "w_step": 8, "w_start": 8, "shape": [8, 16, 19, 22, 31, 41, 47, 50, 53, 64, 66, 71, 97, 114, 115, 120, 136, 137, 140, 146, 149, 157, 158, 160, 170, 175, 181, 188, 195, 196, 202, 216, 222, 227, 228, 229, 231, 232, 235, 236, 237, 240, 241, 242, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 288, 298, 299, 300, 306, 307, 308, 314, 315, 316, 320, 323, 327, 331, 341, 346, 350, 351, 352, 353, 354, 365, 367, 370, 371, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 437, 441, 442, 447, 449, 451, 454, 455, 456, 457, 458, 471, 472, 474, 475, 476, 478, 481, 482, 484, 492, 506, 517, 519, 521, 523, 528, 538, 539, 540, 542, 545, 546, 558, 562, 563, 564, 566, 567, 568, 570, 571, 572, 573, 574, 578, 584, 587, 592, 593, 595, 600, 601, 609, 610, 619, 621, 622, 638, 641, 644, 645, 646, 647, 657, 658, 663, 664, 665, 666, 667, 668, 669, 670, 675, 676, 685, 687, 688, 689, 693, 694, 695, 696, 697, 698, 699, 706, 708, 709, 710, 711, 712, 713, 714, 715, 720, 723, 724, 726, 727, 731, 733, 734, 735, 736, 737, 738, 739, 743, 744, 745, 746, 747, 749, 755, 756, 759, 760, 761, 771, 772, 773, 775, 776, 777, 780, 786, 787, 788, 789, 790, 792, 795, 796, 798, 799, 801, 802, 806, 808, 810, 811, 812, 814, 816, 817, 818, 819, 820, 824, 826, 833, 836, 841, 843, 854, 863, 870, 888], "scores_window": 8, "train_idx": 8, "test_idx": 8, "y_train": [8, 137, 195], "y_test": [8, 137, 195], "x_train": [8, 195], "x_test": [8, 195], "slide": [8, 12, 21, 156, 242, 275, 735, 736, 738, 739], "score_this_window": 8, "n": [8, 10, 43, 45, 71, 83, 93, 99, 109, 114, 137, 141, 144, 149, 151, 157, 160, 170, 172, 175, 188, 202, 205, 206, 207, 208, 216, 222, 224, 227, 229, 231, 232, 242, 245, 257, 259, 260, 263, 264, 265, 266, 267, 268, 271, 272, 273, 276, 277, 279, 280, 281, 283, 314, 323, 342, 352, 353, 354, 357, 358, 359, 362, 370, 382, 405, 406, 428, 434, 437, 448, 450, 471, 481, 482, 502, 545, 562, 563, 567, 570, 580, 581, 584, 595, 643, 668, 681, 682, 683, 684, 688, 693, 708, 711, 720, 721, 724, 734, 735, 736, 738, 739, 756, 759, 760, 775, 790, 797, 814, 819, 820, 826, 843, 855, 864, 867, 870, 874, 888], "w_time": [8, 9], "axvlin": [8, 10, 11, 13, 19, 45, 112, 127, 144, 160, 196, 210], "linestyl": [8, 9, 11, 21, 97, 111, 112, 113, 127, 150, 196, 202, 206, 211, 232, 724, 734, 780, 804, 888], "color": [8, 9, 10, 11, 12, 13, 19, 21, 22, 38, 39, 45, 47, 48, 49, 50, 54, 55, 59, 71, 81, 82, 96, 97, 101, 104, 112, 113, 114, 115, 116, 120, 127, 132, 133, 135, 136, 137, 141, 142, 144, 149, 150, 151, 156, 160, 166, 168, 170, 171, 172, 175, 176, 177, 178, 181, 183, 185, 195, 196, 199, 200, 202, 203, 206, 210, 211, 217, 218, 219, 224, 232, 237, 240, 241, 242, 261, 262, 263, 265, 266, 267, 268, 271, 272, 273, 274, 276, 278, 279, 280, 281, 371, 413, 420, 465, 466, 471, 472, 481, 482, 562, 563, 628, 629, 708, 710, 712, 724, 734, 756, 765, 769, 771, 772, 773, 775, 778, 780, 783, 784, 785, 786, 787, 788, 789, 790, 792, 794, 795, 797, 798, 799, 804, 808, 809, 810, 811, 812, 814, 815, 816, 817, 818, 819, 822, 837, 838, 843, 888], "axhlin": [8, 9, 10, 11, 13, 19, 21, 81, 82, 112, 113, 144, 160, 196, 242, 563, 802], "xlabel": [8, 9, 15, 16, 19, 22, 28, 29, 37, 39, 41, 53, 58, 69, 73, 82, 90, 93, 97, 107, 108, 110, 114, 127, 137, 151, 160, 177, 180, 181, 195, 202, 211, 212, 224, 227, 229, 237, 241, 242, 724, 734, 888], "ylabel": [8, 9, 15, 16, 19, 22, 28, 29, 37, 39, 41, 53, 58, 69, 70, 73, 82, 90, 93, 97, 107, 108, 110, 127, 137, 151, 160, 177, 180, 181, 195, 202, 207, 211, 212, 224, 227, 229, 237, 241, 242, 724, 734], "legend": [8, 9, 10, 11, 12, 16, 19, 21, 22, 28, 37, 38, 39, 41, 45, 69, 71, 96, 97, 110, 111, 127, 137, 144, 145, 150, 162, 166, 172, 180, 195, 196, 211, 216, 217, 237, 241, 242, 265, 266, 267, 268, 724, 734, 756, 769, 779, 780, 786, 789, 794, 888], "loc": [8, 10, 16, 37, 39, 71, 112, 123, 127, 136, 140, 143, 144, 145, 169, 176, 180, 183, 211, 241, 270, 332, 606, 724, 734, 779, 826, 870, 873], "zoltan": [8, 196, 245, 413], "kole": [8, 196, 245, 413], "quantit": [8, 162, 196, 245, 563, 867, 869], "abnorm": [8, 196, 245], "clinic": [8, 71, 72, 79, 112, 151, 196, 200, 204, 205, 245, 530, 562, 563, 571, 572, 578, 595, 610, 737, 740, 864, 870], "electroencephalographi": [8, 58, 72, 79, 112, 151, 196, 200, 204, 245, 276, 562, 572, 610, 870], "neurophysiologi": [8, 71, 72, 79, 112, 151, 196, 200, 204, 205, 245, 562, 563, 571, 572, 578, 610, 737, 740, 870], "79": [8, 13, 15, 16, 19, 35, 41, 45, 47, 81, 103, 108, 112, 114, 119, 157, 158, 169, 176, 181, 184, 195, 196, 209, 227, 228, 231, 232, 245, 405, 433], "440": [8, 81, 196, 209, 232, 245], "447": [8, 187, 196, 245], "1991": [8, 196, 245, 413], "1016": [8, 12, 13, 18, 19, 21, 35, 42, 44, 59, 60, 71, 72, 75, 76, 79, 94, 101, 112, 113, 119, 121, 126, 144, 151, 155, 162, 180, 195, 196, 200, 202, 204, 205, 212, 227, 228, 232, 245, 267, 268, 271, 276, 277, 298, 303, 356, 362, 391, 417, 419, 420, 421, 431, 476, 479, 530, 531, 541, 545, 562, 563, 571, 572, 577, 578, 599, 602, 610, 665, 668, 670, 695, 696, 698, 699, 701, 702, 722, 724, 734, 737, 738, 740, 773, 862, 864, 867, 870], "0013": [8, 72, 79, 112, 151, 196, 200, 204, 245, 562, 572, 610, 870], "4694": [8, 72, 79, 112, 151, 196, 200, 204, 245, 562, 572, 610, 870], "91": [8, 13, 19, 26, 35, 41, 45, 47, 50, 72, 79, 80, 102, 108, 109, 112, 114, 117, 151, 156, 158, 162, 169, 176, 181, 182, 195, 196, 200, 207, 208, 209, 210, 211, 227, 228, 231, 232, 245, 337], "90163": [8, 196, 245], "gerwin": [8, 205, 245, 382, 864], "schalk": [8, 205, 245, 382, 864], "denni": [8, 205, 245, 382, 864], "mcfarland": [8, 205, 245, 382, 864], "thilo": [8, 205, 245, 382, 864], "hinterberg": [8, 205, 245, 382, 864], "niel": [8, 205, 245, 382, 864], "birbaum": [8, 205, 245, 382, 864], "jonathan": [8, 101, 205, 228, 245, 382, 396, 864, 888], "wolpaw": [8, 205, 245, 382, 864], "bci2000": [8, 205, 245, 382, 864], "bci": [8, 15, 88, 112, 159, 196, 205, 245, 382, 564, 864, 876, 888], "ieee": [8, 15, 40, 46, 51, 72, 83, 84, 88, 117, 137, 144, 162, 180, 196, 205, 240, 245, 265, 266, 267, 268, 298, 299, 301, 356, 382, 406, 413, 437, 478, 479, 481, 482, 563, 564, 572, 603, 710, 712, 727, 737, 740, 863, 864, 867, 870], "transact": [8, 15, 51, 72, 84, 88, 117, 137, 162, 180, 196, 205, 240, 245, 265, 266, 267, 268, 298, 299, 301, 356, 382, 406, 413, 478, 481, 482, 530, 563, 564, 572, 603, 710, 712, 727, 863, 864, 867, 870], "biomed": [8, 15, 72, 84, 88, 117, 137, 180, 189, 196, 205, 224, 245, 256, 298, 299, 382, 406, 413, 563, 564, 572, 603, 863, 864, 870, 875], "engin": [8, 15, 72, 83, 84, 88, 117, 180, 196, 205, 206, 207, 224, 245, 298, 299, 382, 406, 413, 530, 563, 564, 572, 603, 847, 853, 863, 864, 870], "1034": [8, 18, 20, 195, 205, 245, 382, 661, 864], "1043": [8, 169, 205, 209, 245, 382, 864], "2004": [8, 71, 205, 245, 356, 382, 571, 668, 864, 870], "1109": [8, 15, 40, 46, 51, 72, 83, 84, 88, 117, 137, 144, 162, 180, 196, 205, 240, 245, 265, 266, 267, 268, 298, 299, 301, 356, 382, 406, 413, 437, 478, 479, 481, 482, 563, 564, 572, 603, 710, 712, 727, 863, 864, 867, 870], "tbme": [8, 15, 72, 84, 88, 117, 196, 205, 245, 382, 413, 563, 564, 572, 603, 863, 864], "827072": [8, 205, 245, 382, 864], "ari": [8, 137, 205, 245, 382, 405, 406, 854, 864, 888], "l": [8, 19, 44, 49, 99, 126, 127, 137, 144, 160, 172, 188, 195, 205, 208, 210, 212, 232, 235, 241, 242, 245, 256, 257, 277, 362, 382, 405, 406, 419, 530, 563, 571, 668, 737, 740, 774, 780, 801, 853, 862, 864, 870, 875, 888], "goldberg": [8, 137, 205, 245, 382, 405, 406, 864], "lui": [8, 137, 205, 245, 382, 405, 406, 864], "amar": [8, 137, 205, 245, 382, 405, 406, 864], "leon": [8, 137, 205, 245, 382, 405, 406, 864], "glass": [8, 31, 35, 40, 44, 59, 61, 137, 181, 205, 245, 273, 279, 280, 281, 382, 405, 406, 815, 819, 820, 864], "jeffrei": [8, 137, 205, 245, 382, 405, 406, 530, 864], "hausdorff": [8, 137, 205, 245, 382, 405, 406, 864], "plamen": [8, 137, 205, 245, 382, 405, 406, 864], "ivanov": [8, 137, 205, 245, 382, 405, 406, 864], "roger": [8, 10, 137, 205, 245, 382, 405, 406, 864], "joseph": [8, 137, 205, 245, 382, 405, 406, 864], "mietu": [8, 137, 205, 245, 382, 405, 406, 864], "georg": [8, 137, 205, 212, 245, 382, 405, 406, 577, 864, 888], "moodi": [8, 137, 205, 245, 382, 405, 406, 864], "chung": [8, 137, 205, 245, 382, 405, 406, 864], "kang": [8, 137, 205, 245, 382, 405, 406, 864], "peng": [8, 137, 205, 245, 382, 405, 406, 864], "h": [8, 96, 101, 112, 127, 137, 202, 204, 205, 218, 245, 257, 259, 265, 266, 323, 382, 405, 406, 449, 452, 562, 610, 668, 690, 706, 721, 786, 797, 862, 863, 864, 870, 888], "eugen": [8, 137, 205, 245, 382, 405, 406, 864], "stanlei": [8, 137, 205, 245, 382, 405, 406, 864], "physiobank": [8, 137, 205, 245, 382, 405, 406, 864], "physiotoolkit": [8, 137, 205, 245, 382, 405, 406, 864], "research": [8, 68, 71, 137, 141, 144, 151, 155, 168, 199, 205, 213, 224, 242, 245, 256, 382, 405, 406, 531, 599, 690, 855, 862, 864, 866, 875], "resourc": [8, 123, 137, 144, 203, 205, 245, 382, 405, 406, 846, 864, 871, 876], "complex": [8, 32, 37, 114, 135, 137, 192, 205, 227, 245, 265, 266, 267, 268, 291, 382, 405, 406, 426, 481, 482, 534, 660, 711, 726, 727, 735, 736, 738, 843, 847, 864, 873, 888], "circul": [8, 137, 205, 245, 382, 405, 406, 864], "2000": [8, 10, 19, 137, 192, 201, 202, 204, 205, 207, 216, 245, 265, 266, 267, 268, 382, 405, 406, 413, 442, 481, 482, 483, 530, 562, 687, 863, 864, 870], "1161": [8, 137, 205, 245, 382, 405, 406, 864], "cir": [8, 137, 205, 245, 382, 405, 406, 864], "101": [8, 71, 114, 137, 158, 169, 190, 205, 207, 209, 231, 245, 382, 405, 406, 421, 864, 873], "e215": [8, 137, 205, 245, 382, 405, 406, 864], "930": [8, 20, 81, 196, 209, 232], "decoding_csp_eeg": [8, 20], "decomposit": [9, 11, 14, 17, 20, 27, 28, 29, 30, 32, 38, 39, 44, 47, 52, 57, 61, 75, 77, 103, 104, 107, 108, 110, 112, 113, 124, 166, 172, 181, 196, 199, 205, 206, 222, 223, 227, 229, 230, 232, 235, 237, 241, 242, 245, 265, 267, 268, 270, 272, 273, 276, 279, 280, 281, 413, 420, 421, 426, 427, 447, 494, 523, 544, 563, 578, 593, 714, 717, 727, 733, 735, 736, 738, 739, 863, 870, 873, 888], "iter": [9, 19, 27, 35, 36, 43, 44, 56, 59, 83, 90, 93, 94, 95, 104, 112, 134, 137, 157, 169, 172, 179, 180, 195, 205, 218, 224, 231, 235, 236, 237, 245, 259, 260, 262, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 277, 289, 292, 293, 296, 304, 349, 356, 362, 367, 416, 423, 430, 454, 476, 477, 478, 479, 480, 481, 482, 514, 529, 530, 532, 534, 537, 563, 566, 573, 578, 593, 627, 658, 673, 693, 694, 695, 696, 698, 699, 708, 710, 711, 712, 715, 726, 743, 746, 756, 769, 799, 815, 870, 888], "roll": [9, 109, 124, 756, 824], "laura": [9, 196, 245, 888], "gwilliam": [9, 196, 245, 888], "nyu": [9, 37, 101, 120, 134, 171, 227, 888], "jean": [9, 10, 11, 12, 13, 14, 16, 18, 72, 79, 185, 196, 200, 205, 245, 563, 572, 668, 863, 870, 888], "remi": [9, 10, 11, 12, 13, 14, 16, 18, 888], "king": [9, 10, 11, 12, 13, 14, 16, 18, 196, 245, 888], "jeanremi": [9, 10, 11, 12, 13, 14, 16, 18], "alex": [9, 32, 38, 71, 72, 83, 114, 115, 116, 120, 135, 136, 185, 231, 232, 875, 888], "barach": [9, 12, 15, 88, 196, 245, 413, 888], "create_info": [9, 14, 15, 19, 64, 66, 71, 114, 125, 159, 188, 190, 222, 266, 268, 270, 413, 420, 482, 626, 878, 888], "time_frequ": [9, 21, 32, 33, 34, 92, 103, 111, 112, 114, 166, 202, 222, 224, 229, 230, 231, 232, 240, 241, 275, 418, 421, 426, 470, 878, 886, 888], "averagetfr": [9, 112, 114, 264, 267, 268, 319, 438, 470, 711, 730, 738, 739, 740, 741, 816, 878, 888], "stratifiedkfold": [9, 10, 15, 16, 430, 888], "make_pipelin": [9, 10, 11, 12, 13, 15, 18, 137, 196, 428], "labelencod": 9, "motor": [9, 17, 20, 27, 32, 76, 83, 109, 112, 144, 181, 196, 211, 265, 270, 314, 330, 365, 382, 413, 420, 442, 496, 560, 888], "imageri": [9, 17, 20, 27, 112, 196, 265, 270, 314, 330, 365, 382, 413, 442, 496, 560, 888], "n_split": [9, 10, 12, 15, 16, 19, 430], "speed": [9, 10, 11, 19, 32, 33, 41, 42, 44, 50, 75, 82, 83, 84, 94, 103, 109, 113, 135, 141, 145, 151, 158, 161, 162, 165, 172, 179, 180, 183, 195, 196, 199, 205, 207, 209, 212, 228, 229, 235, 237, 265, 266, 272, 273, 276, 277, 279, 280, 281, 418, 419, 425, 469, 481, 482, 536, 537, 563, 650, 726, 756, 786, 788, 809, 814, 819, 845, 847, 867, 871, 876, 888], "shuffl": [9, 10, 12, 15, 232, 888], "n_cycl": [9, 32, 107, 110, 112, 114, 166, 202, 229, 230, 231, 232, 241, 426, 546, 547, 714, 717, 722, 724, 734, 735, 736, 738, 739], "mani": [9, 44, 71, 75, 112, 120, 121, 127, 140, 142, 146, 149, 150, 151, 152, 155, 158, 160, 161, 162, 166, 167, 171, 172, 177, 190, 195, 199, 200, 201, 202, 203, 205, 206, 207, 222, 224, 227, 240, 242, 256, 257, 258, 265, 266, 270, 275, 277, 298, 350, 356, 437, 442, 455, 472, 563, 657, 693, 703, 708, 709, 756, 772, 782, 799, 801, 802, 843, 845, 847, 850, 851, 863, 865, 867, 870, 872, 874, 876, 888], "cycl": [9, 107, 114, 184, 202, 241, 242, 265, 266, 343, 426, 481, 482, 546, 547, 563, 714, 717, 722, 724, 734, 735, 736, 738, 739, 780, 786, 789, 801, 809, 847, 888], "min_freq": 9, "max_freq": 9, "n_freq": [9, 114, 195, 231, 241, 418, 426, 688, 698, 699, 708, 709, 710, 711, 724, 726, 727, 733, 734, 735, 736, 738, 739], "bin": [9, 22, 27, 71, 98, 102, 120, 123, 142, 144, 171, 202, 210, 212, 229, 235, 240, 242, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 291, 298, 421, 481, 482, 488, 503, 584, 618, 688, 692, 693, 695, 696, 698, 699, 709, 710, 712, 780, 788, 792, 846, 847, 850, 851, 852, 853, 858, 870, 888], "tupl": [9, 115, 150, 170, 171, 172, 195, 205, 216, 218, 231, 232, 259, 260, 262, 263, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 288, 289, 304, 315, 324, 325, 362, 388, 413, 420, 428, 446, 447, 450, 453, 480, 481, 482, 489, 491, 492, 493, 496, 497, 498, 504, 508, 517, 519, 529, 546, 547, 562, 563, 566, 571, 578, 580, 581, 583, 594, 619, 625, 626, 659, 660, 661, 673, 685, 693, 695, 696, 698, 699, 700, 708, 710, 711, 712, 720, 727, 743, 746, 756, 757, 765, 770, 773, 775, 776, 778, 780, 784, 785, 787, 788, 790, 792, 794, 795, 797, 799, 802, 804, 808, 810, 811, 814, 815, 816, 818, 819, 820, 824, 888], "linspac": [9, 19, 32, 40, 42, 69, 71, 113, 117, 136, 141, 150, 172, 177, 195, 199, 206, 207, 222, 223, 242], "freq_rang": [9, 242], "infer": [9, 10, 43, 44, 113, 156, 165, 170, 202, 217, 218, 228, 232, 233, 234, 245, 265, 266, 267, 268, 271, 272, 273, 276, 279, 280, 281, 298, 299, 320, 324, 356, 360, 361, 365, 371, 372, 373, 413, 420, 443, 444, 446, 456, 457, 473, 476, 478, 479, 481, 482, 489, 491, 496, 541, 563, 638, 686, 692, 695, 696, 697, 698, 699, 701, 708, 710, 712, 769, 794, 795, 796, 803, 809, 818, 841, 843, 854, 870, 888], "gap": [9, 127, 245, 478, 479, 481, 482, 500, 809, 870, 888], "window_spac": 9, "centered_w_tim": 9, "n_window": [9, 584], "len": [9, 10, 15, 16, 18, 19, 28, 32, 39, 41, 42, 43, 45, 47, 52, 64, 68, 69, 71, 73, 75, 90, 93, 100, 114, 117, 137, 140, 143, 144, 156, 159, 168, 176, 178, 183, 185, 191, 195, 199, 200, 201, 202, 203, 205, 207, 208, 210, 211, 212, 217, 223, 224, 227, 228, 229, 231, 232, 242, 259, 260, 262, 263, 265, 266, 267, 268, 270, 274, 276, 277, 278, 289, 304, 355, 362, 415, 423, 448, 451, 481, 482, 529, 657, 688, 710, 711, 724, 734, 743, 756, 761, 787, 809, 817, 818, 888], "instanti": [9, 144, 172, 196, 205, 222, 260, 262, 263, 264, 265, 266, 270, 274, 275, 277, 314, 482, 710, 712, 758, 769, 888], "encod": [9, 19, 127, 143, 144, 150, 166, 168, 172, 188, 195, 196, 209, 210, 211, 245, 251, 270, 348, 419, 489, 496, 504, 505, 506, 619, 841, 843, 870, 876, 888], "le": 9, "59999": [9, 184], "374": [9, 81, 169, 216, 227, 232], "loop": [9, 32, 42, 61, 109, 120, 135, 137, 149, 177, 181, 200, 232, 237, 242, 245, 406, 434, 574, 584, 595, 756, 864, 870, 888], "init": [9, 377, 847, 852], "freq_scor": 9, "fmin": [9, 32, 103, 104, 108, 113, 114, 116, 133, 137, 222, 240, 241, 242, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 418, 481, 482, 536, 537, 708, 709, 710, 711, 712, 713, 715, 716, 718, 726, 727, 737, 740, 756, 775, 810, 814, 816, 819, 820, 888], "fmax": [9, 32, 75, 103, 104, 108, 113, 114, 116, 133, 137, 166, 199, 203, 212, 222, 240, 241, 242, 265, 266, 267, 268, 418, 481, 482, 536, 537, 708, 709, 710, 711, 712, 713, 715, 716, 718, 726, 727, 737, 740, 756, 771, 810, 816, 888], "enumer": [9, 10, 15, 19, 28, 39, 40, 47, 72, 94, 96, 104, 107, 112, 114, 135, 136, 146, 149, 150, 151, 159, 195, 202, 205, 207, 211, 223, 232, 237, 242], "being": [9, 45, 114, 116, 127, 136, 160, 166, 171, 172, 200, 202, 207, 208, 210, 216, 224, 227, 229, 232, 262, 265, 266, 267, 268, 271, 272, 273, 275, 276, 279, 280, 281, 364, 367, 447, 457, 471, 481, 482, 517, 563, 584, 586, 630, 708, 710, 712, 756, 774, 787, 790, 792, 793, 810, 815, 820, 847, 869, 870, 888], "w_size": 9, "isol": [9, 45, 114, 201, 205, 207, 888], "raw_filt": [9, 114, 141, 203, 205], "pad": [9, 15, 114, 127, 227, 232, 242, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 323, 448, 451, 452, 453, 481, 482, 727, 888], "drop_bad": [9, 16, 142, 151, 191, 201, 265, 266, 316, 470, 563, 710, 711, 870, 888], "fold": [9, 10, 12, 15, 16, 26, 137, 271, 276, 430, 671, 674], "roc_auc": [9, 11, 13, 196, 416, 423], "axi": [9, 10, 12, 14, 15, 16, 19, 21, 22, 28, 31, 35, 45, 58, 61, 69, 71, 73, 84, 90, 96, 100, 104, 107, 109, 110, 112, 113, 114, 115, 116, 117, 119, 127, 133, 137, 140, 141, 142, 144, 150, 151, 156, 160, 166, 172, 181, 183, 185, 191, 195, 196, 200, 202, 212, 216, 219, 222, 227, 230, 232, 235, 237, 241, 242, 245, 257, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 274, 276, 279, 280, 281, 288, 316, 323, 367, 413, 420, 426, 433, 453, 472, 481, 482, 492, 562, 563, 577, 578, 661, 685, 687, 695, 696, 698, 699, 702, 708, 710, 712, 737, 740, 756, 769, 772, 773, 780, 787, 788, 789, 790, 791, 792, 793, 795, 796, 797, 799, 801, 803, 804, 808, 809, 810, 811, 816, 817, 818, 853, 870, 888], "701": [9, 135, 196, 209], "205": [9, 19, 102, 112, 169, 184, 196, 227, 231], "281": [9, 19, 112, 169, 195, 227], "629": [9, 196, 232], "17": [9, 10, 11, 12, 13, 19, 26, 28, 32, 33, 34, 35, 41, 43, 45, 47, 50, 56, 61, 62, 72, 81, 84, 85, 90, 91, 103, 108, 109, 112, 114, 115, 123, 137, 145, 151, 156, 157, 158, 160, 169, 171, 172, 176, 177, 180, 181, 182, 183, 184, 185, 188, 191, 196, 200, 208, 209, 212, 213, 215, 216, 221, 222, 227, 228, 229, 231, 232, 235, 236, 237, 245, 265, 266, 267, 268, 272, 275, 276, 277, 278, 280, 281, 289, 298, 356, 358, 361, 362, 373, 413, 420, 422, 480, 481, 482, 530, 536, 537, 595, 661, 673, 696, 708, 724, 734, 735, 738, 773, 814, 820, 864, 870], "165": [9, 146, 169, 202, 205, 211, 227, 231, 232, 245], "031": [9, 128, 140, 149, 169, 184, 224], "581": [9, 196, 209, 232], "139": [9, 13, 25, 169, 196, 209, 224, 227, 231, 232, 278, 888], "869": [9, 19, 106, 109, 203, 215], "549": [9, 196, 208, 245], "22": [9, 11, 13, 14, 15, 16, 19, 20, 21, 28, 32, 34, 35, 39, 40, 41, 42, 44, 45, 47, 56, 81, 88, 90, 103, 104, 108, 109, 110, 112, 114, 127, 130, 133, 137, 150, 152, 154, 155, 169, 171, 176, 180, 183, 184, 187, 188, 191, 196, 205, 208, 209, 224, 227, 228, 229, 231, 232, 236, 237, 239, 240, 245, 265, 266, 267, 268, 277, 278, 314, 337, 341, 342, 362, 406, 452, 481, 482, 502, 517, 522, 563, 566, 609, 626, 643, 652, 703, 727, 772, 800, 810, 846, 870], "121": [9, 140, 145, 166, 169, 170, 209, 227, 231, 265, 266, 436], "756": [9, 13, 232], "523": [9, 209, 232], "bar": [9, 143, 150, 171, 183, 218, 219, 242, 262, 265, 266, 267, 268, 274, 275, 413, 416, 420, 423, 481, 482, 562, 563, 708, 710, 712, 756, 780, 785, 786, 787, 788, 792, 795, 799, 803, 808, 809, 811, 816, 825, 870, 888], "width": [9, 114, 127, 160, 171, 172, 199, 202, 203, 219, 227, 242, 263, 265, 266, 267, 268, 272, 273, 275, 276, 279, 280, 281, 315, 323, 328, 415, 424, 449, 451, 452, 472, 481, 482, 599, 708, 722, 724, 734, 737, 738, 740, 756, 765, 784, 785, 812, 814, 815, 819, 843, 867, 870, 888], "edgecolor": [9, 10, 241], "black": [9, 21, 45, 47, 48, 50, 112, 135, 142, 151, 160, 190, 207, 211, 262, 263, 265, 266, 267, 268, 272, 273, 274, 276, 279, 280, 281, 413, 420, 481, 482, 562, 563, 578, 708, 710, 712, 756, 769, 772, 773, 784, 788, 790, 794, 795, 799, 807, 808, 810, 811, 814, 816, 817, 818, 819, 888], "xtick": [9, 15, 19, 90, 127, 195, 202, 212, 227], "tf_score": 9, "center": [9, 37, 45, 69, 71, 80, 90, 95, 112, 120, 121, 151, 156, 158, 160, 170, 185, 199, 201, 202, 203, 207, 227, 242, 256, 257, 267, 268, 271, 276, 307, 422, 492, 515, 526, 563, 572, 657, 660, 665, 671, 674, 708, 746, 756, 760, 796, 807, 815, 864, 870, 875, 888], "w_tmin": 9, "w_tmax": 9, "av_tfr": 9, "newaxi": [9, 15, 28, 100, 117, 232, 235, 236, 237, 756], "white": [9, 24, 26, 41, 52, 109, 112, 116, 121, 126, 127, 133, 135, 142, 156, 158, 159, 160, 176, 178, 190, 210, 223, 227, 232, 257, 263, 265, 266, 267, 268, 271, 272, 273, 276, 278, 279, 280, 281, 371, 471, 481, 482, 515, 549, 550, 612, 630, 656, 708, 710, 712, 756, 772, 774, 784, 794, 796, 814, 817, 819, 843, 863, 888], "vmin": [9, 13, 19, 88, 107, 112, 114, 116, 117, 136, 141, 160, 176, 195, 196, 210, 211, 227, 229, 230, 241, 262, 265, 266, 267, 268, 274, 413, 420, 481, 482, 562, 563, 708, 710, 712, 756, 773, 787, 788, 795, 799, 808, 811, 816, 817, 818, 888], "red": [9, 54, 59, 71, 80, 81, 83, 100, 112, 132, 133, 142, 144, 150, 156, 160, 170, 178, 181, 190, 195, 199, 200, 203, 207, 210, 211, 219, 232, 235, 241, 242, 261, 262, 263, 265, 266, 267, 268, 271, 274, 413, 420, 481, 482, 562, 563, 578, 629, 708, 710, 712, 756, 771, 773, 780, 781, 784, 787, 788, 790, 795, 799, 808, 811, 816, 818, 843, 847, 888], "650": [9, 19, 20, 81, 82, 146, 212], "decoding_csp_timefreq": [9, 20], "supervis": [10, 18, 88, 137, 413, 430], "class": [10, 16, 19, 61, 70, 88, 94, 95, 114, 115, 137, 140, 142, 149, 151, 157, 165, 166, 168, 171, 172, 175, 195, 201, 202, 205, 216, 219, 222, 232, 243, 244, 254, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 289, 304, 314, 315, 367, 397, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 454, 480, 481, 482, 513, 529, 562, 563, 564, 592, 658, 688, 708, 709, 710, 711, 712, 743, 744, 745, 746, 751, 752, 753, 756, 757, 758, 767, 843, 847, 855, 856, 863, 865, 870, 871, 873, 878, 879, 888], "rel": [10, 24, 32, 33, 34, 42, 62, 76, 86, 109, 112, 113, 127, 137, 140, 142, 144, 156, 166, 168, 170, 189, 192, 199, 202, 203, 207, 210, 211, 212, 218, 241, 242, 257, 258, 260, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 311, 360, 367, 419, 434, 437, 449, 481, 482, 526, 563, 590, 593, 609, 645, 647, 664, 701, 708, 711, 713, 714, 715, 727, 756, 769, 774, 789, 794, 803, 807, 809, 817, 843, 847, 863, 870, 873, 888], "character": [10, 13, 196, 245, 563, 670, 802, 870], "confus": [10, 15, 137, 144, 192, 668, 847], "serv": [10, 168, 217, 232, 262, 265, 266, 267, 268, 274, 282, 413, 420, 481, 482, 562, 563, 578, 708, 710, 711, 712, 754, 772, 773, 788, 795, 799, 808, 811, 816, 818, 847, 869, 870], "proxi": [10, 205, 209], "mental": [10, 13, 196, 245], "rsa": [10, 854, 864, 888], "imag": [10, 16, 27, 30, 32, 33, 35, 40, 44, 46, 55, 59, 71, 88, 112, 120, 122, 124, 127, 128, 130, 136, 143, 146, 149, 155, 156, 159, 160, 166, 170, 176, 180, 182, 190, 191, 199, 202, 205, 206, 207, 208, 224, 227, 228, 230, 231, 232, 241, 242, 245, 256, 262, 265, 266, 267, 268, 270, 274, 275, 277, 278, 280, 281, 290, 291, 292, 293, 298, 299, 305, 309, 314, 315, 323, 340, 355, 362, 368, 391, 413, 420, 473, 476, 478, 479, 481, 482, 490, 502, 530, 562, 563, 578, 590, 592, 622, 657, 663, 664, 665, 666, 667, 668, 669, 670, 708, 710, 712, 724, 734, 744, 745, 746, 756, 757, 759, 772, 773, 774, 787, 788, 792, 794, 795, 799, 801, 808, 811, 816, 817, 818, 820, 824, 826, 843, 848, 853, 854, 864, 873, 875, 888], "92": [10, 13, 19, 34, 35, 44, 81, 101, 103, 112, 114, 143, 169, 180, 195, 196, 201, 209, 227, 228, 229, 231, 232, 237, 526, 870], "human": [10, 19, 33, 58, 94, 113, 126, 144, 151, 155, 178, 180, 195, 224, 245, 265, 266, 267, 268, 276, 291, 298, 376, 390, 415, 419, 424, 449, 451, 452, 481, 482, 568, 697, 724, 734, 735, 738, 843, 844, 854, 863, 864, 876], "anim": [10, 136, 267, 268, 864, 888], "inanim": [10, 864], "bodi": [10, 207, 208, 746, 864], "part": [10, 119, 127, 140, 142, 144, 151, 155, 158, 160, 161, 162, 171, 182, 199, 202, 203, 207, 212, 216, 224, 245, 256, 265, 267, 268, 270, 271, 280, 281, 298, 299, 356, 360, 361, 371, 372, 373, 413, 420, 442, 456, 457, 476, 478, 479, 481, 483, 502, 536, 537, 541, 635, 685, 695, 696, 698, 699, 708, 711, 756, 773, 792, 796, 843, 847, 848, 869, 870, 871, 873, 876, 888], "6gb": 10, "build": [10, 12, 21, 32, 45, 155, 172, 175, 191, 199, 200, 202, 227, 235, 236, 237, 845, 851, 853, 869, 876, 888], "jaakko": [10, 191, 888], "leppakanga": [10, 191, 888], "jaeilepp": [10, 191], "student": [10, 191, 847], "jyu": [10, 191], "panda": [10, 14, 101, 112, 140, 143, 147, 148, 149, 151, 165, 171, 190, 191, 210, 216, 228, 240, 259, 260, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 437, 481, 482, 622, 694, 708, 710, 711, 712, 846, 847, 870, 888], "read_csv": [10, 190, 191], "standardscal": [10, 11, 13, 18, 196, 422], "linear_model": [10, 11, 12, 13, 15, 18, 196, 876], "logisticregress": [10, 11, 13, 15, 196, 417, 428], "metric": [10, 15, 27, 36, 56, 90, 117, 137, 196, 212, 262, 267, 269, 270, 276, 366, 416, 419, 423, 529, 541, 542, 545, 561, 563, 616, 625, 627, 756, 802, 869, 878, 883, 888], "roc_auc_scor": [10, 416, 423, 878], "manifold": [10, 117, 119, 773], "md": [10, 245, 661], "visual_92_categori": [10, 171, 864, 878, 888], "stimulu": [10, 13, 33, 34, 49, 70, 72, 74, 81, 82, 90, 93, 107, 120, 140, 142, 143, 144, 146, 149, 162, 166, 167, 168, 169, 180, 183, 188, 191, 192, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 212, 216, 217, 218, 219, 224, 231, 237, 242, 257, 259, 265, 266, 267, 268, 270, 316, 348, 356, 419, 437, 442, 481, 482, 560, 566, 673, 708, 710, 711, 712, 843, 864, 870, 888], "fname": [10, 12, 21, 53, 66, 79, 86, 87, 112, 119, 120, 128, 131, 160, 170, 205, 257, 259, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 275, 276, 277, 278, 279, 280, 281, 289, 302, 314, 315, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 353, 354, 443, 444, 445, 446, 481, 482, 484, 485, 486, 487, 490, 495, 499, 500, 501, 502, 505, 509, 510, 511, 512, 513, 514, 544, 548, 552, 553, 562, 563, 605, 606, 607, 608, 611, 613, 614, 615, 616, 617, 618, 620, 623, 624, 625, 626, 627, 628, 631, 633, 634, 635, 636, 637, 638, 640, 642, 653, 708, 709, 710, 711, 712, 728, 729, 730, 741, 743, 750, 829, 830, 831, 832, 834, 835, 836, 839, 840, 841, 842, 874, 888], "visual_stimuli": 10, "csv": [10, 123, 191, 218, 259, 332, 338, 505, 613, 888], "cond": [10, 40, 46, 59, 62, 99, 101, 150, 232, 237, 258], "restrict": [10, 28, 29, 104, 126, 142, 151, 158, 161, 166, 178, 203, 204, 207, 208, 216, 223, 227, 230, 231, 242, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 279, 280, 281, 285, 286, 298, 299, 459, 460, 481, 482, 530, 531, 532, 533, 534, 536, 537, 546, 547, 555, 556, 559, 560, 561, 671, 708, 710, 711, 712, 719, 725, 874, 888], "max_trigg": 10, "row": [10, 74, 101, 112, 127, 141, 142, 143, 144, 145, 150, 166, 169, 172, 175, 191, 196, 211, 216, 227, 228, 260, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 300, 360, 371, 413, 419, 420, 437, 481, 482, 505, 542, 545, 563, 564, 584, 693, 694, 708, 709, 710, 711, 712, 756, 782, 787, 795, 799, 802, 870, 873, 888], "cond_tag": 10, "els": [10, 15, 28, 31, 40, 47, 94, 96, 114, 151, 160, 175, 191, 202, 207, 216, 227, 242, 262, 263, 265, 266, 267, 268, 270, 274, 289, 304, 413, 420, 481, 482, 521, 529, 563, 564, 657, 663, 664, 665, 666, 667, 668, 669, 670, 691, 710, 712, 735, 736, 743, 784, 788, 809, 846, 847, 871, 888], "str": [10, 30, 39, 41, 101, 128, 143, 145, 150, 171, 183, 195, 228, 242, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 524, 525, 526, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 554, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 595, 596, 598, 599, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 633, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 676, 678, 679, 680, 681, 682, 683, 684, 685, 687, 689, 691, 694, 695, 696, 697, 698, 699, 700, 701, 703, 704, 705, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 725, 726, 727, 730, 731, 735, 736, 738, 739, 740, 741, 743, 744, 745, 746, 748, 751, 752, 753, 755, 756, 759, 761, 764, 766, 768, 771, 772, 773, 774, 775, 776, 777, 780, 781, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 823, 825, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 847, 888], "bodypart": 10, "natur": [10, 19, 126, 172, 195, 231, 245, 390, 419, 453, 599, 864, 870, 873, 888], "n_run": 10, "sample_subject_": 10, "_tsss_mc": 10, "on_split_miss": [10, 481, 502, 888], "ignor": [10, 41, 47, 70, 81, 109, 135, 140, 146, 151, 162, 166, 172, 181, 184, 191, 199, 200, 201, 207, 227, 257, 260, 262, 263, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 279, 280, 281, 283, 284, 285, 286, 298, 299, 318, 326, 341, 350, 351, 356, 360, 362, 363, 365, 367, 371, 372, 377, 379, 380, 381, 384, 385, 386, 388, 393, 396, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 413, 420, 422, 432, 440, 442, 447, 449, 454, 460, 463, 470, 476, 478, 479, 481, 482, 483, 492, 494, 498, 502, 510, 541, 558, 562, 563, 566, 574, 584, 595, 615, 619, 621, 622, 630, 644, 646, 649, 656, 657, 673, 695, 697, 708, 710, 711, 712, 753, 773, 784, 785, 786, 788, 789, 792, 795, 799, 800, 808, 809, 810, 811, 816, 818, 834, 836, 838, 843, 847, 888], "filenam": [10, 43, 44, 72, 74, 77, 81, 82, 83, 93, 127, 135, 140, 141, 146, 151, 156, 157, 167, 168, 172, 199, 200, 201, 203, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 219, 224, 257, 259, 260, 262, 265, 266, 267, 268, 271, 275, 278, 289, 302, 311, 314, 353, 354, 443, 444, 446, 456, 466, 472, 480, 481, 482, 485, 501, 502, 507, 511, 513, 524, 525, 606, 611, 613, 618, 620, 622, 624, 625, 628, 629, 630, 631, 634, 638, 642, 646, 653, 657, 673, 709, 728, 750, 756, 764, 809, 829, 830, 831, 833, 836, 837, 838, 841, 853, 888], "min_dur": [10, 212, 213, 454, 565], "002": [10, 13, 32, 33, 121, 128, 140, 141, 142, 145, 149, 166, 169, 188, 195, 196, 201, 202, 204, 207, 212, 216, 219, 224, 245, 454], "specif": [10, 19, 27, 43, 44, 45, 71, 105, 106, 112, 120, 127, 135, 137, 141, 143, 144, 150, 151, 155, 160, 161, 170, 171, 172, 175, 189, 190, 191, 192, 199, 200, 202, 203, 205, 207, 208, 210, 212, 216, 219, 224, 227, 228, 229, 232, 240, 241, 242, 245, 259, 261, 262, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 279, 280, 281, 288, 298, 314, 413, 420, 437, 442, 444, 448, 454, 481, 482, 483, 496, 515, 539, 540, 560, 561, 562, 563, 569, 574, 578, 583, 584, 595, 629, 635, 657, 687, 694, 708, 709, 710, 711, 712, 756, 775, 780, 787, 788, 795, 799, 808, 809, 811, 814, 816, 817, 819, 820, 837, 843, 847, 851, 854, 862, 864, 869, 870, 871, 873, 876, 877, 888], "appel": 10, "dissimilar": 10, "rdm": 10, "cichi": [10, 245, 864], "et": [10, 16, 19, 21, 195, 202, 204, 242, 256, 265, 266, 571, 870, 875, 888], "al": [10, 16, 19, 21, 195, 202, 204, 242, 265, 266, 571, 870, 888], "multiclass": [10, 245, 413, 430, 888], "multinomi": 10, "logist": [10, 11, 15, 18, 196], "paper": [10, 16, 202, 206, 245, 298, 476, 530, 563, 668, 862, 870], "pairwis": [10, 47, 71, 117, 245, 571], "binari": [10, 99, 160, 192, 196, 217, 263, 414, 430, 454, 497, 498, 503, 506, 617, 688, 694, 706, 833, 845, 852, 853, 870, 873, 888], "roc": [10, 13, 669], "auc": [10, 13, 196, 669], "final": [10, 16, 19, 42, 68, 70, 71, 83, 84, 112, 113, 114, 127, 137, 140, 141, 144, 146, 150, 151, 156, 160, 162, 166, 171, 179, 181, 182, 190, 195, 200, 201, 205, 206, 207, 210, 211, 227, 229, 231, 232, 235, 237, 242, 265, 266, 267, 268, 320, 331, 419, 456, 481, 482, 658, 826, 847, 863, 867, 869, 888], "sake": [10, 127, 201, 231, 874], "did": [10, 11, 28, 29, 30, 38, 39, 44, 47, 52, 57, 61, 83, 104, 107, 108, 110, 124, 160, 161, 162, 166, 170, 172, 175, 176, 181, 202, 205, 207, 208, 222, 223, 235, 237, 270, 278, 865, 873, 888], "instant": [10, 13, 42, 120, 177, 183, 196, 263, 267, 268, 288, 355, 456, 682, 683, 684, 708, 713, 714, 715, 716, 717, 718, 719, 791, 793, 795], "50m": 10, "300m": 10, "focu": [10, 12, 83, 127, 144, 201, 202, 853, 888], "liblinear": [10, 11, 13, 15, 18, 196], "multi_class": [10, 15], "y_pred": [10, 12, 19, 137, 416, 417, 419, 423, 888], "probabilist": [10, 245, 356, 416, 417, 423, 870, 876], "necessari": [10, 21, 31, 74, 94, 127, 135, 146, 151, 155, 156, 158, 160, 161, 166, 169, 171, 180, 199, 201, 202, 203, 204, 205, 206, 207, 213, 216, 217, 222, 227, 258, 265, 266, 267, 268, 269, 272, 273, 276, 277, 279, 280, 281, 298, 299, 318, 320, 327, 360, 377, 413, 420, 422, 437, 448, 456, 480, 481, 482, 489, 496, 501, 530, 595, 603, 613, 620, 624, 652, 672, 708, 710, 711, 712, 756, 795, 814, 819, 843, 847, 863, 864, 868, 869, 870, 873, 888], "predict_proba": [10, 416, 417, 423], "ii": [10, 15, 19, 39, 93, 99, 107, 119, 135, 159, 183, 185, 190, 195, 212, 227, 237, 245, 272, 273, 276, 279, 280, 281, 322, 416, 423, 490, 563, 657, 694, 773, 888], "train_class": 10, "jj": 10, "im": [10, 13, 15, 22, 71, 115, 136, 196, 759, 818, 826, 888], "matshow": [10, 13], "rdbu_r": [10, 13, 16, 19, 22, 107, 114, 195, 196, 229, 230, 262, 265, 266, 267, 268, 274, 413, 420, 481, 482, 562, 563, 578, 708, 710, 712, 773, 787, 788, 792, 795, 799, 808, 811, 816, 817, 818, 847], "set_ytick": 10, "set_yticklabel": [10, 112], "set_xtick": [10, 242], "set_xticklabel": [10, 242], "colorbar": [10, 13, 15, 22, 71, 72, 107, 112, 114, 115, 116, 120, 127, 136, 142, 146, 150, 176, 182, 196, 207, 211, 219, 227, 228, 229, 231, 232, 262, 265, 266, 267, 268, 272, 273, 274, 276, 279, 280, 281, 413, 420, 481, 482, 562, 563, 578, 708, 709, 710, 712, 756, 770, 773, 775, 780, 781, 782, 787, 788, 792, 793, 795, 799, 808, 811, 814, 816, 817, 818, 819, 820, 888], "tight_layout": [10, 12, 15, 19, 39, 41, 58, 71, 73, 86, 114, 115, 120, 176, 181, 195, 202, 207, 210, 211, 224, 227, 231, 232, 888], "relat": [10, 12, 19, 27, 32, 33, 34, 71, 78, 101, 105, 106, 112, 117, 128, 132, 136, 144, 146, 153, 154, 155, 158, 160, 162, 165, 166, 172, 173, 178, 188, 189, 192, 195, 196, 199, 201, 202, 204, 205, 206, 209, 210, 211, 218, 228, 235, 241, 242, 245, 265, 266, 267, 268, 270, 275, 288, 316, 331, 355, 396, 419, 420, 437, 449, 454, 470, 481, 482, 554, 563, 571, 622, 657, 687, 708, 724, 734, 738, 756, 769, 777, 780, 787, 802, 803, 809, 817, 828, 843, 845, 847, 850, 862, 864, 865, 867, 868, 869, 870, 871, 876, 888], "histor": [10, 150, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 337, 481, 482, 708, 711, 870, 876, 888], "summar": [10, 45, 113, 151, 203, 205, 216, 265, 266, 272, 273, 276, 279, 280, 281, 780, 787, 863, 869, 874, 888], "dimension": [10, 150, 175, 196, 200, 206, 207, 216, 232, 235, 236, 237, 245, 267, 268, 272, 273, 276, 279, 280, 281, 356, 421, 426, 428, 563, 688, 708, 756, 790, 843, 870, 888], "reduct": [10, 17, 20, 27, 114, 191, 203, 211, 212, 245, 265, 266, 267, 268, 270, 371, 375, 412, 421, 427, 481, 560, 563, 564, 595, 603, 622, 736, 739, 888], "multi": [10, 16, 27, 36, 46, 56, 83, 104, 126, 170, 189, 196, 202, 235, 236, 237, 245, 262, 263, 265, 266, 267, 268, 269, 270, 274, 280, 304, 390, 413, 414, 418, 420, 429, 452, 454, 456, 479, 481, 482, 524, 529, 530, 532, 536, 537, 541, 562, 563, 577, 578, 614, 616, 617, 642, 708, 710, 712, 726, 731, 773, 788, 795, 799, 808, 811, 816, 818, 822, 854, 870, 873, 888], "cluster": [10, 27, 98, 102, 112, 165, 228, 233, 234, 238, 239, 242, 245, 265, 267, 268, 270, 276, 277, 278, 320, 355, 362, 436, 454, 481, 529, 530, 544, 560, 622, 635, 637, 642, 680, 688, 689, 691, 695, 696, 698, 699, 700, 711, 738, 756, 815, 885, 888], "togeth": [10, 43, 71, 75, 141, 149, 151, 166, 172, 175, 188, 199, 205, 207, 210, 211, 216, 222, 232, 265, 266, 267, 268, 275, 284, 298, 299, 356, 360, 361, 371, 372, 373, 413, 420, 435, 456, 457, 476, 478, 479, 481, 482, 506, 541, 563, 594, 621, 638, 641, 695, 696, 698, 699, 726, 796, 836, 841, 843, 847, 888], "precomput": [10, 156, 171, 181, 191, 265, 266, 362, 481, 482, 563, 656, 786, 803, 809, 888], "colormap": [10, 24, 58, 109, 112, 113, 116, 127, 136, 142, 160, 207, 242, 262, 265, 266, 267, 268, 272, 273, 274, 276, 279, 280, 281, 413, 420, 481, 482, 562, 563, 578, 700, 708, 709, 710, 712, 756, 771, 773, 775, 780, 782, 787, 788, 792, 795, 798, 799, 808, 811, 814, 816, 817, 818, 819, 820, 838, 847, 888], "rainbow": 10, "sel": [10, 31, 228, 554, 557, 559, 560, 642, 709], "this_nam": 10, "scatter": [10, 45, 115, 227, 774, 888], "facecolor": [10, 47, 151, 227], "scatterpoint": 10, "ncol": [10, 15, 74, 112, 120, 127, 137, 146, 151, 176, 183, 211, 267, 268, 413, 420, 563, 795, 799, 873, 888], "shepard": [10, 245], "multidimension": [10, 227, 245, 416, 423, 430], "tree": [10, 245, 873], "scienc": [10, 13, 33, 40, 101, 113, 180, 196, 224, 228, 242, 245, 256, 291, 298, 396, 478, 530, 563, 864, 870, 875], "210": [10, 13, 35, 81, 87, 124, 150, 168, 169, 174, 196, 209, 210, 212, 215, 231, 232, 244, 245], "4468": [10, 245], "390": [10, 12, 21, 81, 209, 227, 232, 245], "398": [10, 81, 196, 232, 245], "1980": [10, 151, 245], "1126": [10, 196, 209, 245], "aarr": [10, 245], "laakso": [10, 245], "garrison": [10, 245], "cottrel": [10, 245], "content": [10, 27, 105, 158, 166, 169, 172, 202, 203, 206, 211, 219, 241, 245, 265, 266, 269, 275, 389, 390, 445, 513, 764, 780, 787, 843, 847, 852, 888], "assess": [10, 13, 137, 156, 162, 170, 199, 245, 530, 541, 563, 665, 670, 867, 870], "neural": [10, 18, 19, 22, 27, 33, 63, 67, 71, 72, 83, 117, 137, 151, 178, 180, 196, 199, 202, 205, 208, 212, 224, 242, 243, 245, 270, 291, 298, 299, 375, 413, 417, 419, 420, 476, 481, 482, 563, 572, 593, 843, 848, 864, 888], "philosoph": [10, 245, 530, 870], "76": [10, 13, 15, 16, 18, 19, 34, 35, 46, 47, 80, 81, 103, 108, 109, 112, 114, 119, 159, 169, 176, 191, 196, 209, 227, 228, 229, 231, 232, 235, 237, 245, 689, 773], "09515080050002726": [10, 245], "nikolau": [10, 245], "kriegeskort": [10, 245], "mariek": [10, 245], "mur": [10, 245], "peter": [10, 180, 240, 245, 265, 266, 267, 268, 481, 482, 530, 563, 710, 712, 727, 737, 740, 870, 888], "bandettini": [10, 245], "connect": [10, 38, 47, 71, 160, 166, 171, 224, 227, 245, 271, 290, 292, 298, 299, 377, 599, 688, 695, 696, 698, 699, 704, 776, 853, 854, 859, 878, 888], "branch": [10, 245, 847], "neuro": [10, 86, 245, 888], "06": [10, 20, 26, 35, 41, 44, 45, 46, 50, 52, 56, 59, 72, 76, 84, 94, 100, 102, 103, 130, 155, 158, 174, 176, 179, 181, 183, 187, 195, 202, 207, 209, 215, 221, 227, 228, 229, 232, 236, 237, 245, 277, 362, 421, 476, 572, 843, 846], "radoslaw": [10, 245, 864], "aud": [10, 28, 29, 37, 39, 49, 92, 99, 104, 107, 108, 150, 232, 245, 265, 780, 864], "oliva": [10, 245, 864], "resolv": [10, 180, 205, 210, 245, 719, 851, 864, 888], "recognit": [10, 46, 101, 151, 202, 245, 737, 740, 864], "455": [10, 41, 232, 245, 278, 864], "462": [10, 196, 209, 223, 226, 232, 245, 278, 864], "2014": [10, 12, 13, 18, 19, 40, 72, 113, 121, 151, 162, 196, 202, 245, 267, 268, 356, 417, 419, 420, 421, 431, 478, 572, 599, 690, 737, 740, 862, 864, 867], "1038": [10, 126, 195, 245, 390, 419, 864], "nn": [10, 178, 245, 278, 657, 864, 873, 888], "3635": [10, 19, 245, 864], "decoding_rsa_sgskip": [10, 20], "cortic": [11, 24, 26, 27, 31, 32, 41, 43, 58, 78, 80, 85, 90, 94, 109, 113, 122, 130, 155, 158, 163, 165, 166, 172, 175, 178, 180, 186, 191, 200, 224, 227, 236, 245, 257, 262, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 283, 285, 286, 298, 299, 362, 366, 391, 447, 458, 476, 478, 479, 481, 515, 530, 531, 532, 533, 534, 537, 541, 546, 547, 560, 561, 579, 612, 615, 616, 627, 630, 637, 665, 668, 670, 671, 672, 673, 674, 704, 756, 767, 815, 843, 845, 848, 851, 854, 864, 873, 876, 888], "univari": [11, 165, 196, 227, 228, 233, 234, 245, 265, 270, 481, 560, 622, 689, 691, 692, 696, 711, 738, 885, 888], "confin": [11, 47, 158, 231, 291, 870], "potenti": [11, 15, 47, 71, 72, 74, 79, 88, 101, 117, 127, 128, 141, 144, 153, 154, 165, 168, 172, 196, 200, 202, 204, 208, 227, 228, 231, 242, 245, 265, 266, 267, 268, 270, 271, 276, 311, 316, 355, 362, 371, 396, 452, 469, 470, 481, 482, 483, 554, 564, 571, 572, 622, 671, 674, 694, 701, 771, 780, 787, 817, 828, 863, 864, 867, 869, 870, 888], "relev": [11, 12, 26, 101, 112, 126, 151, 169, 180, 196, 202, 203, 204, 211, 245, 278, 374, 420, 563, 580, 707, 799, 801, 847, 862, 863, 867, 870, 873], "eric": [11, 19, 22, 26, 34, 39, 50, 57, 66, 73, 80, 84, 93, 94, 109, 118, 120, 123, 126, 127, 129, 135, 136, 155, 157, 159, 179, 180, 182, 183, 184, 191, 195, 196, 209, 227, 231, 232, 235, 236, 237, 245, 271, 276, 391, 530, 603, 673, 695, 696, 698, 699, 862, 864, 875, 888], "larson": [11, 19, 22, 26, 34, 39, 50, 57, 66, 73, 80, 84, 93, 94, 109, 118, 120, 123, 126, 127, 129, 135, 136, 159, 179, 180, 182, 183, 184, 191, 195, 196, 209, 227, 231, 235, 236, 237, 245, 265, 266, 267, 268, 271, 276, 391, 481, 482, 603, 673, 862, 864, 875, 888], "feature_select": 11, "selectkbest": 11, "f_classif": 11, "apply_inverse_epoch": [11, 28, 45, 272, 273, 276, 279, 280, 281, 530, 531, 533, 534, 878, 888], "read_inverse_oper": [11, 28, 29, 30, 38, 39, 44, 47, 52, 57, 61, 104, 107, 108, 110, 124, 166, 181, 223, 235, 237, 548, 878], "cross_val_multiscor": [11, 196, 878, 888], "linearmodel": [11, 18, 196, 878, 888], "slidingestim": [11, 196, 430, 878, 888], "get_coef": [11, 18, 196, 878, 888], "meg_path": [11, 13, 14, 15, 16, 22, 28, 30, 31, 35, 37, 39, 40, 42, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 69, 70, 72, 73, 77, 79, 86, 87, 88, 92, 93, 94, 96, 97, 99, 100, 103, 104, 107, 108, 110, 111, 117, 118, 121, 131, 132, 133, 178, 179, 180, 181, 196, 224, 229, 230, 231, 232, 235, 236, 237], "fname_fwd": [11, 32, 33, 34, 41, 42, 43, 47, 48, 49, 54, 58, 177, 179, 223], "sample_audvi": [11, 22, 28, 29, 30, 31, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 65, 69, 79, 86, 87, 90, 92, 93, 94, 95, 104, 107, 108, 110, 116, 119, 120, 124, 127, 131, 134, 149, 150, 166, 172, 175, 176, 177, 178, 179, 180, 181, 196, 223, 224, 235, 236, 237, 257, 265, 266, 267, 268, 481, 482], "sample_audvis_filt": [11, 13, 14, 15, 16, 18, 28, 42, 49, 70, 73, 74, 77, 88, 96, 97, 99, 100, 117, 121, 132, 133, 141, 145, 151, 152, 166, 169, 172, 177, 180, 196, 201, 205, 232, 235, 237, 870], "40_raw": [11, 13, 14, 15, 16, 18, 28, 42, 49, 70, 73, 74, 77, 88, 96, 97, 99, 100, 117, 121, 132, 133, 141, 145, 151, 152, 166, 169, 172, 177, 180, 196, 201, 205, 232, 235, 237, 870], "event_fnam": [11, 14, 15, 16, 18, 70, 88, 96, 97, 100, 117, 121, 132, 230, 231, 232, 235, 237], "ev": [11, 13, 14, 15, 16, 18, 28, 70, 88, 94, 96, 97, 100, 103, 104, 117, 121, 132, 140, 145, 151, 172, 201, 217, 230, 231, 232, 235, 237, 257, 622, 623, 833, 867, 888], "fname_cov": [11, 41, 48, 49, 50, 54, 55, 58, 65, 94, 176, 179, 181], "fname_inv": [11, 28, 29, 30, 38, 39, 44, 47, 57, 61, 104, 107, 108, 110, 124, 181, 223, 235, 237], "inv": [11, 28, 29, 30, 38, 39, 44, 45, 47, 52, 57, 61, 94, 104, 107, 108, 110, 124, 156, 158, 160, 166, 172, 177, 178, 179, 181, 182, 191, 196, 223, 224, 235, 237, 257, 447, 535, 538, 541, 543, 544, 548, 813, 847, 863, 870, 888], "aud_r": [11, 14, 15, 42, 231], "vis_r": [11, 14, 15, 42, 88, 231], "contra": 11, "setup": [11, 15, 16, 18, 24, 43, 44, 45, 70, 71, 73, 88, 96, 97, 100, 107, 108, 110, 117, 132, 155, 229, 230, 235, 237, 241, 258, 278, 377, 454, 846, 847, 848, 849, 851, 853, 864, 868, 873, 888], "read_ev": [11, 13, 14, 15, 16, 18, 28, 70, 88, 94, 96, 97, 100, 103, 104, 117, 121, 132, 140, 145, 151, 201, 217, 230, 231, 232, 235, 237, 266, 454, 619, 833, 843, 878, 888], "modifi": [11, 62, 70, 117, 140, 149, 150, 151, 161, 165, 168, 169, 172, 173, 174, 182, 196, 200, 206, 208, 211, 218, 222, 227, 231, 240, 245, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 276, 277, 278, 279, 280, 281, 282, 288, 314, 320, 342, 363, 365, 366, 367, 387, 413, 415, 417, 418, 420, 421, 422, 424, 425, 427, 428, 435, 472, 476, 481, 482, 489, 496, 512, 527, 530, 543, 554, 555, 556, 559, 562, 563, 583, 587, 591, 592, 594, 595, 596, 597, 598, 610, 627, 643, 649, 652, 659, 660, 661, 662, 690, 701, 702, 708, 709, 710, 711, 712, 725, 727, 752, 756, 759, 772, 777, 791, 793, 809, 823, 824, 855, 863, 864, 870, 873, 888], "your": [11, 31, 47, 70, 71, 94, 95, 117, 121, 127, 135, 140, 141, 142, 149, 151, 155, 157, 158, 159, 161, 162, 166, 167, 168, 172, 177, 181, 182, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 216, 217, 218, 227, 240, 241, 242, 257, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 282, 298, 299, 311, 320, 331, 334, 337, 340, 356, 360, 361, 371, 372, 373, 391, 413, 420, 437, 454, 456, 457, 476, 478, 479, 481, 482, 492, 497, 541, 549, 562, 563, 566, 573, 580, 583, 595, 613, 619, 694, 708, 710, 711, 712, 756, 786, 793, 796, 802, 803, 809, 814, 826, 845, 850, 851, 852, 853, 854, 855, 862, 863, 864, 865, 866, 867, 868, 870, 873, 888], "2443": [11, 42, 74, 77, 88, 92, 93, 107, 108, 110, 111, 117, 121, 146, 166, 167, 168, 169, 177, 180, 196, 199, 200, 201, 206, 207, 210, 216, 217, 218, 219, 224, 229, 230, 231, 235, 237], "grad": [11, 16, 22, 28, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 60, 62, 77, 79, 86, 87, 93, 94, 96, 97, 99, 100, 103, 104, 107, 109, 110, 111, 113, 114, 116, 117, 119, 120, 121, 123, 124, 127, 131, 132, 140, 142, 145, 150, 152, 156, 157, 158, 162, 166, 169, 170, 172, 176, 177, 178, 179, 180, 181, 183, 196, 200, 201, 207, 209, 210, 216, 222, 223, 224, 229, 230, 231, 235, 237, 240, 241, 257, 260, 262, 265, 266, 267, 268, 272, 273, 275, 276, 279, 280, 281, 298, 299, 313, 320, 321, 340, 356, 360, 361, 371, 372, 373, 375, 413, 420, 422, 456, 457, 476, 478, 479, 481, 482, 518, 525, 541, 560, 561, 562, 563, 568, 573, 575, 576, 578, 580, 581, 584, 648, 694, 708, 710, 711, 712, 779, 780, 786, 787, 788, 790, 792, 794, 795, 796, 799, 809, 811, 812, 816, 817, 818, 843, 863, 870, 873, 888], "4000e": [11, 16, 28, 42, 45, 46, 77, 96, 97, 100, 103, 104, 107, 110, 113, 117, 121, 132, 152, 166, 177, 180, 196, 207, 229, 230, 231, 235, 237, 241, 260, 265, 266, 361, 563, 580, 581, 694, 863], "150e": [11, 16, 28, 42, 45, 96, 97, 100, 104, 107, 110, 117, 141, 142, 152, 166, 177, 180, 196, 207, 229, 230, 231, 232, 235, 237, 265, 266, 275, 481, 482, 786, 809, 863, 870], "v1": [11, 13, 14, 15, 16, 18, 26, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 65, 69, 70, 72, 73, 74, 77, 79, 83, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 110, 111, 116, 117, 118, 119, 120, 121, 123, 124, 127, 129, 132, 133, 140, 141, 142, 146, 149, 150, 151, 152, 156, 157, 158, 160, 162, 166, 167, 168, 169, 172, 176, 177, 178, 179, 180, 181, 182, 189, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 216, 217, 218, 219, 223, 224, 229, 230, 231, 232, 235, 237, 340], "idl": [11, 13, 14, 15, 16, 18, 26, 28, 29, 42, 45, 49, 62, 69, 70, 72, 73, 74, 77, 83, 84, 88, 92, 93, 94, 96, 97, 99, 100, 103, 104, 107, 110, 111, 117, 118, 121, 123, 127, 129, 131, 132, 133, 141, 142, 146, 151, 152, 156, 157, 158, 160, 162, 166, 167, 168, 169, 172, 177, 180, 182, 183, 191, 196, 199, 203, 204, 205, 206, 207, 209, 210, 216, 219, 223, 224, 229, 230, 231, 232, 235, 237], "v2": [11, 13, 14, 15, 16, 18, 26, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 65, 69, 70, 72, 73, 74, 77, 79, 83, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 110, 111, 116, 117, 118, 119, 120, 121, 123, 124, 127, 129, 132, 133, 140, 141, 142, 146, 149, 150, 151, 152, 156, 157, 158, 160, 162, 166, 167, 168, 169, 172, 176, 177, 178, 179, 180, 181, 182, 189, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 216, 217, 218, 219, 223, 224, 229, 230, 231, 232, 235, 237, 245, 390, 595, 888], "v3": [11, 13, 14, 15, 16, 18, 26, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 65, 69, 70, 72, 73, 74, 77, 79, 83, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 110, 111, 116, 117, 118, 119, 120, 121, 123, 124, 127, 129, 132, 133, 140, 141, 142, 146, 149, 150, 151, 152, 156, 157, 158, 160, 162, 166, 167, 168, 169, 172, 176, 177, 178, 179, 180, 181, 182, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 216, 217, 218, 219, 223, 224, 229, 230, 231, 232, 235, 237], "refer": [11, 14, 22, 27, 28, 29, 30, 31, 38, 39, 41, 45, 47, 48, 49, 50, 52, 57, 61, 62, 65, 68, 69, 70, 73, 74, 77, 78, 81, 82, 85, 86, 87, 90, 92, 93, 95, 96, 97, 99, 100, 104, 107, 108, 110, 116, 120, 124, 127, 132, 133, 145, 149, 150, 152, 156, 158, 159, 165, 166, 167, 169, 170, 172, 175, 177, 179, 181, 182, 188, 192, 201, 209, 214, 215, 216, 223, 235, 237, 241, 242, 245, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 291, 298, 299, 301, 303, 304, 337, 356, 361, 362, 371, 382, 387, 390, 391, 394, 395, 396, 405, 406, 413, 414, 417, 419, 420, 421, 423, 429, 431, 434, 437, 439, 452, 476, 478, 479, 481, 482, 492, 506, 525, 526, 530, 531, 541, 545, 560, 561, 562, 563, 564, 568, 571, 572, 574, 575, 576, 577, 578, 579, 584, 593, 595, 596, 599, 602, 603, 610, 647, 649, 652, 657, 661, 665, 668, 670, 673, 690, 692, 694, 695, 696, 697, 698, 699, 701, 702, 708, 710, 711, 712, 716, 717, 718, 719, 720, 722, 724, 726, 727, 734, 735, 737, 738, 740, 756, 758, 772, 773, 788, 795, 796, 799, 800, 803, 808, 810, 811, 816, 818, 828, 843, 851, 862, 869, 871, 873, 888], "6450": [11, 13, 14, 15, 16, 18, 19, 28, 42, 49, 70, 73, 74, 77, 88, 96, 97, 99, 100, 117, 121, 132, 133, 141, 151, 152, 166, 169, 172, 177, 180, 196, 205, 232, 235, 237], "48149": [11, 13, 14, 15, 16, 18, 28, 42, 49, 70, 73, 74, 77, 88, 96, 97, 99, 100, 117, 121, 132, 133, 141, 151, 152, 166, 169, 172, 177, 180, 196, 205, 232, 235, 237], "956": [11, 13, 14, 15, 16, 18, 28, 29, 42, 45, 49, 69, 70, 72, 73, 74, 77, 80, 83, 88, 92, 93, 96, 97, 99, 100, 103, 104, 107, 110, 111, 117, 118, 121, 123, 127, 132, 133, 141, 143, 146, 151, 152, 156, 162, 166, 167, 168, 169, 172, 177, 180, 182, 196, 199, 203, 204, 205, 206, 207, 208, 216, 219, 223, 224, 229, 230, 231, 232, 235, 237], "320": [11, 13, 14, 15, 16, 18, 28, 29, 42, 45, 49, 69, 70, 72, 73, 74, 77, 81, 83, 88, 92, 93, 96, 97, 99, 100, 103, 104, 107, 108, 110, 111, 112, 117, 118, 121, 123, 127, 132, 133, 140, 141, 146, 149, 151, 152, 156, 162, 166, 167, 168, 169, 171, 172, 177, 180, 182, 196, 199, 200, 203, 204, 205, 206, 207, 209, 215, 216, 219, 223, 224, 229, 230, 231, 232, 235, 237, 412], "665": [11, 13, 14, 15, 16, 18, 28, 42, 49, 70, 73, 74, 77, 88, 90, 94, 95, 96, 97, 99, 100, 117, 121, 132, 133, 141, 151, 152, 166, 169, 172, 177, 180, 195, 196, 205, 232, 235, 237], "41699": [11, 13, 14, 15, 16, 18, 42, 73, 74, 88, 99, 121, 133, 141, 152, 166, 196, 232], "277": [11, 13, 14, 15, 16, 18, 42, 72, 73, 74, 88, 99, 121, 133, 141, 152, 166, 167, 169, 182, 196, 201, 204, 209, 216, 232], "709": [11, 13, 14, 15, 16, 18, 42, 73, 74, 88, 99, 121, 133, 141, 152, 166, 191, 196, 232], "199": [11, 19, 30, 31, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 61, 79, 86, 87, 112, 116, 119, 120, 127, 149, 169, 172, 176, 178, 179, 181, 183, 191, 209, 210, 222, 227, 232, 237, 245, 722, 724, 734, 738], "325": [11, 13, 74, 112, 169, 227], "366": [11, 13, 14, 15, 16, 18, 22, 31, 35, 40, 47, 48, 49, 50, 51, 54, 55, 58, 59, 60, 65, 69, 81, 88, 90, 92, 93, 94, 95, 121, 131, 133, 144, 149, 169, 172, 178, 179, 196, 209, 210, 223, 224, 227, 232], "143": [11, 49, 74, 169, 196, 201, 209, 210, 227, 231, 232, 245, 278], "19979521315838786": [11, 28, 62, 70, 72, 73, 80, 93, 94, 96, 97, 100, 103, 104, 107, 110, 117, 132, 142, 145, 149, 150, 152, 166, 172, 177, 180, 182, 200, 201, 204, 223, 230, 231, 235, 237], "151": [11, 19, 21, 120, 151, 169, 172, 196, 205, 209, 227, 231, 232, 237, 278], "prior": [11, 12, 18, 27, 28, 29, 30, 34, 36, 38, 39, 40, 44, 47, 52, 56, 57, 58, 61, 90, 104, 107, 108, 110, 113, 124, 142, 149, 151, 162, 166, 172, 178, 179, 180, 181, 192, 196, 205, 208, 210, 212, 219, 223, 232, 235, 237, 262, 263, 267, 269, 270, 276, 298, 299, 457, 458, 476, 477, 478, 479, 481, 482, 498, 529, 530, 541, 563, 573, 584, 595, 616, 625, 627, 756, 783, 784, 809, 815, 870, 873, 876, 888], "061": [11, 16, 28, 32, 33, 45, 46, 62, 72, 73, 74, 93, 94, 96, 100, 107, 113, 117, 140, 145, 151, 152, 166, 167, 168, 169, 172, 177, 180, 199, 200, 201, 204, 205, 206, 207, 210, 216, 217, 218, 219, 227, 228, 229, 230, 231, 232, 235, 237, 241, 245, 695, 696, 698, 699], "read_cov": [11, 31, 35, 40, 41, 45, 48, 49, 50, 51, 54, 55, 58, 59, 60, 65, 69, 92, 94, 162, 178, 179, 262, 832, 867, 878], "305": [11, 12, 13, 20, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 77, 79, 82, 87, 88, 94, 104, 107, 108, 109, 110, 112, 121, 124, 140, 146, 150, 152, 162, 166, 169, 172, 176, 177, 178, 179, 180, 181, 208, 209, 223, 235, 237, 245, 265, 266, 267, 268, 481, 482, 652], "22494": [11, 22, 28, 29, 35, 38, 39, 52, 57, 61, 104, 107, 108, 110, 124, 166, 172, 181, 235, 237], "diagon": [11, 28, 29, 30, 38, 39, 44, 47, 52, 57, 61, 71, 104, 107, 108, 110, 124, 166, 172, 180, 181, 196, 223, 224, 235, 237, 245, 262, 298, 299, 356, 373, 518, 530, 538, 870, 873, 888], "retriev": [11, 196, 205, 209, 241, 330, 331, 351, 431, 489, 496, 625, 888], "lh_data": [11, 116, 175, 237, 276, 279], "hemispher": [11, 24, 27, 40, 43, 47, 52, 68, 122, 126, 127, 130, 141, 151, 155, 158, 175, 178, 183, 235, 236, 237, 261, 271, 272, 273, 276, 277, 278, 279, 280, 281, 326, 362, 390, 471, 515, 612, 630, 632, 635, 656, 671, 679, 704, 755, 756, 814, 819, 838, 873, 888], "prepar": [11, 12, 19, 21, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 54, 55, 57, 58, 59, 61, 79, 87, 90, 94, 104, 107, 108, 109, 110, 119, 124, 150, 166, 171, 177, 178, 179, 181, 182, 191, 196, 200, 207, 223, 224, 229, 235, 309, 320, 331, 371, 372, 530, 531, 532, 533, 534, 536, 537, 543, 546, 547, 596, 847, 873, 888], "seri": [11, 16, 27, 28, 29, 31, 36, 41, 56, 72, 81, 90, 93, 94, 95, 111, 137, 161, 168, 175, 180, 181, 188, 205, 206, 219, 224, 237, 242, 245, 263, 264, 265, 266, 267, 268, 271, 272, 273, 276, 278, 279, 280, 281, 298, 299, 356, 416, 423, 426, 447, 481, 482, 529, 530, 533, 544, 563, 568, 572, 625, 629, 694, 695, 696, 708, 709, 711, 713, 714, 715, 724, 733, 734, 769, 780, 820, 843, 845, 847, 870, 888], "time_decod": [11, 196], "31": [11, 13, 19, 28, 32, 34, 35, 40, 43, 45, 47, 56, 76, 81, 82, 83, 103, 108, 109, 112, 114, 130, 151, 159, 160, 164, 169, 180, 183, 185, 191, 196, 205, 209, 211, 212, 215, 227, 228, 229, 231, 232, 235, 236, 237, 240, 245, 265, 266, 278, 337, 541, 665, 670, 870, 888], "76it": [11, 13, 19, 34, 103, 109, 112, 196, 209, 227, 228, 231, 232, 237], "80it": [11, 19, 33, 34, 103, 108, 109, 112, 180, 195, 209, 227, 231, 232, 236, 237], "91it": [11, 19, 33, 34, 103, 112, 196, 209, 229, 231, 232, 235], "98it": [11, 13, 19, 34, 103, 108, 112, 195, 209, 227, 231, 232, 237], "74it": [11, 13, 19, 33, 34, 44, 103, 109, 112, 195, 209, 227, 229, 231, 232, 235, 237], "85it": [11, 13, 19, 33, 34, 103, 108, 112, 180, 196, 209, 227, 231, 232, 237], "10it": [11, 13, 19, 103, 108, 109, 112, 195, 196, 209, 227, 229, 232], "32it": [11, 19, 34, 108, 109, 112, 195, 196, 209, 227, 229, 231, 232, 237], "29": [11, 13, 19, 21, 24, 28, 34, 35, 41, 43, 45, 47, 50, 81, 91, 103, 108, 109, 113, 114, 123, 137, 143, 156, 157, 158, 169, 171, 183, 184, 185, 195, 196, 203, 207, 209, 210, 211, 227, 228, 229, 231, 232, 235, 236, 237, 241, 245, 278, 888], "31it": [11, 19, 33, 34, 109, 112, 195, 196, 209, 227, 228, 231, 232], "32": [11, 12, 13, 19, 21, 28, 34, 35, 41, 42, 45, 47, 49, 54, 56, 70, 72, 73, 74, 75, 81, 82, 94, 99, 103, 104, 107, 108, 109, 110, 112, 114, 116, 120, 129, 135, 140, 141, 142, 146, 149, 150, 151, 152, 154, 158, 162, 166, 168, 169, 170, 171, 172, 176, 177, 180, 182, 183, 184, 185, 196, 200, 201, 203, 204, 205, 207, 208, 209, 212, 217, 222, 223, 224, 227, 228, 229, 231, 232, 235, 236, 237, 242, 245, 258, 265, 266, 392, 412, 454, 481, 482, 503, 530, 579, 853, 864, 870, 873, 874, 888], "18it": [11, 19, 34, 103, 108, 112, 195, 196, 209, 227, 229, 231, 232, 235], "94it": [11, 13, 19, 33, 34, 103, 108, 112, 180, 196, 209, 227, 232, 236], "39": [11, 12, 13, 19, 21, 28, 35, 45, 47, 81, 91, 94, 103, 106, 108, 109, 112, 114, 137, 140, 157, 158, 159, 169, 171, 178, 180, 184, 185, 187, 191, 195, 196, 201, 209, 210, 227, 228, 229, 231, 232, 235, 236, 237, 245, 278, 405, 863], "05it": [11, 13, 19, 34, 96, 103, 108, 112, 195, 196, 209, 227, 228, 231, 232, 235, 237], "73it": [11, 19, 33, 34, 103, 108, 109, 195, 196, 209, 227, 231, 232, 237], "21": [11, 13, 19, 26, 28, 34, 35, 41, 44, 45, 46, 47, 65, 71, 75, 81, 85, 103, 108, 109, 114, 140, 145, 148, 150, 160, 164, 168, 169, 171, 172, 183, 188, 191, 196, 209, 216, 227, 228, 229, 231, 232, 235, 236, 237, 242, 245, 262, 263, 265, 266, 267, 268, 272, 273, 274, 275, 276, 278, 279, 280, 281, 286, 298, 299, 360, 362, 406, 413, 420, 447, 452, 466, 481, 482, 517, 522, 543, 562, 563, 571, 573, 574, 578, 580, 581, 584, 595, 630, 638, 652, 657, 700, 708, 710, 712, 773, 774, 784, 788, 789, 790, 791, 795, 796, 797, 799, 801, 808, 809, 811, 813, 814, 816, 818, 822, 838, 841, 845, 846, 864, 870], "49it": [11, 13, 19, 34, 103, 109, 112, 180, 195, 196, 209, 227, 231, 232, 236, 237], "52": [11, 13, 19, 28, 35, 45, 47, 81, 82, 99, 103, 104, 106, 108, 109, 112, 114, 145, 151, 168, 169, 191, 196, 202, 207, 209, 215, 227, 228, 231, 232, 235, 237, 245, 405, 694, 737, 740, 888], "06it": [11, 13, 19, 108, 112, 195, 196, 209, 227, 231, 232], "33it": [11, 19, 103, 112, 180, 195, 196, 209, 227, 228, 229, 232], "87it": [11, 13, 19, 34, 103, 108, 109, 112, 195, 196, 209, 227, 228, 230, 231, 232], "61": [11, 13, 19, 30, 35, 45, 47, 51, 57, 60, 72, 81, 83, 90, 93, 103, 108, 109, 114, 116, 123, 127, 136, 146, 149, 166, 167, 168, 169, 170, 172, 176, 178, 179, 184, 185, 196, 199, 200, 203, 206, 207, 208, 209, 210, 216, 217, 218, 219, 227, 228, 229, 231, 232, 235, 237, 245, 356], "22it": [11, 13, 19, 34, 109, 112, 180, 195, 196, 209, 227, 228, 231, 232, 236, 237], "65": [11, 12, 13, 19, 21, 34, 35, 45, 47, 81, 84, 103, 108, 109, 112, 114, 136, 143, 145, 156, 169, 170, 177, 178, 184, 195, 196, 201, 208, 209, 227, 228, 229, 231, 232, 236, 237, 245, 603, 888], "68": [11, 13, 19, 34, 35, 41, 45, 47, 50, 81, 82, 90, 101, 103, 108, 109, 112, 114, 126, 137, 140, 143, 145, 158, 169, 171, 172, 176, 181, 184, 191, 195, 196, 209, 227, 228, 230, 231, 232, 235, 245, 267, 268, 298, 299, 337, 356, 360, 361, 371, 372, 373, 405, 413, 420, 456, 457, 476, 478, 479, 541, 796], "12it": [11, 13, 19, 34, 103, 108, 112, 196, 209, 227, 228, 229, 231, 232, 236], "71": [11, 12, 13, 19, 21, 35, 45, 81, 103, 108, 109, 112, 114, 137, 169, 176, 181, 182, 184, 196, 209, 227, 228, 229, 231, 232, 236, 237], "60it": [11, 19, 34, 96, 103, 108, 109, 112, 195, 196, 209, 227, 228, 229, 232, 236, 237], "74": [11, 13, 15, 19, 26, 35, 41, 45, 50, 80, 81, 82, 103, 108, 109, 112, 114, 137, 158, 168, 169, 170, 171, 176, 181, 184, 191, 195, 196, 202, 207, 209, 224, 227, 228, 231, 232, 235, 237, 689], "09it": [11, 13, 19, 33, 34, 103, 112, 195, 196, 209, 227, 231, 232, 236], "81": [11, 13, 15, 16, 19, 34, 35, 81, 103, 107, 108, 109, 112, 114, 142, 156, 169, 180, 184, 196, 208, 209, 211, 227, 228, 231, 232, 240, 245, 665, 670, 722, 724, 734, 738, 888], "07it": [11, 13, 19, 112, 123, 195, 196, 209, 227, 228, 231, 232, 237], "61it": [11, 13, 19, 103, 112, 195, 196, 209, 227, 228, 229, 231, 232], "87": [11, 18, 19, 33, 35, 47, 80, 93, 94, 108, 109, 112, 114, 123, 124, 169, 195, 196, 207, 209, 210, 227, 228, 231, 232, 235, 245, 417, 419, 431, 870], "27": [11, 12, 13, 19, 21, 24, 25, 26, 28, 33, 34, 35, 39, 41, 43, 45, 47, 50, 81, 82, 103, 106, 108, 109, 112, 114, 145, 150, 158, 160, 169, 171, 176, 178, 180, 183, 185, 191, 194, 195, 196, 198, 209, 223, 224, 226, 227, 228, 229, 231, 232, 234, 235, 236, 237, 241, 244, 245, 574, 845], "94": [11, 13, 19, 35, 47, 81, 103, 107, 108, 109, 112, 114, 137, 169, 170, 180, 183, 185, 187, 191, 195, 196, 200, 207, 209, 212, 227, 228, 229, 230, 231, 232, 235, 236, 237, 245, 870], "99it": [11, 13, 19, 33, 34, 103, 108, 112, 227, 228, 231, 232, 237], "41it": [11, 13, 19, 34, 103, 112, 195, 196, 209, 227, 231, 232, 235], "63it": [11, 13, 19, 34, 103, 104, 109, 112, 195, 196, 209, 227, 228, 231, 232], "29it": [11, 19, 112, 209, 227, 231, 232], "84it": [11, 13, 19, 33, 34, 103, 104, 108, 112, 195, 196, 209, 227, 231, 232], "90it": [11, 13, 19, 33, 108, 112, 196, 209, 227, 228, 231, 232, 235, 236], "77it": [11, 13, 19, 33, 34, 103, 104, 112, 195, 196, 209, 227, 228, 231, 232, 237], "88it": [11, 19, 33, 34, 96, 103, 112, 196, 209, 227, 228, 232, 235], "89it": [11, 13, 19, 33, 112, 195, 196, 209, 227, 228, 231, 232, 237], "01it": [11, 13, 19, 33, 34, 103, 108, 109, 112, 196, 209, 227, 229, 231, 232, 237], "79it": [11, 19, 33, 34, 103, 109, 112, 195, 196, 209, 228, 229, 231, 232, 235, 237], "71it": [11, 19, 34, 103, 109, 112, 195, 196, 209, 227, 228, 229, 231, 232, 237], "51it": [11, 19, 34, 103, 112, 195, 196, 209, 227, 228, 229, 232], "44it": [11, 13, 34, 103, 112, 123, 195, 196, 209, 227, 228, 232], "15it": [11, 13, 19, 34, 103, 108, 112, 195, 196, 209, 227, 228, 229, 231, 232, 236], "81it": [11, 13, 19, 103, 108, 112, 195, 196, 209, 227, 228, 231, 232, 235], "39it": [11, 13, 19, 34, 103, 112, 196, 209, 227, 228, 231, 232, 236, 237], "57it": [11, 19, 34, 103, 108, 112, 195, 196, 209, 227, 232, 235, 236], "11it": [11, 13, 19, 96, 103, 108, 112, 196, 209, 227, 228, 230, 231, 232, 235, 237], "25it": [11, 19, 34, 112, 195, 196, 209, 227, 229, 231, 232, 236, 237], "70it": [11, 13, 19, 103, 109, 112, 180, 195, 196, 209, 227, 228, 232, 237], "19it": [11, 13, 19, 33, 34, 96, 103, 108, 109, 195, 209, 227, 228, 231, 232, 236], "68it": [11, 13, 19, 34, 103, 112, 195, 209, 227, 231, 232], "67it": [11, 13, 19, 33, 34, 103, 108, 112, 195, 196, 209, 227, 228, 229, 232, 236, 237], "04it": [11, 13, 19, 108, 112, 195, 196, 209, 227, 232, 236], "83it": [11, 13, 19, 33, 103, 108, 112, 180, 195, 196, 209, 227, 228, 229, 231, 232], "92it": [11, 13, 19, 33, 34, 103, 109, 112, 195, 196, 209, 227, 228, 229, 232], "96it": [11, 19, 33, 34, 103, 109, 112, 180, 195, 196, 209, 227, 228, 231, 232], "13it": [11, 13, 19, 33, 34, 96, 103, 108, 109, 112, 180, 195, 196, 209, 227, 228, 231, 232], "78it": [11, 13, 19, 33, 103, 108, 112, 180, 195, 196, 209, 227, 228, 229, 231, 232, 237], "46it": [11, 13, 19, 34, 103, 108, 112, 195, 196, 227, 231, 232], "14it": [11, 13, 19, 34, 103, 108, 109, 180, 196, 209, 227, 229, 231, 232], "45it": [11, 13, 19, 34, 112, 196, 209, 227, 228, 231, 232, 237], "50it": [11, 13, 19, 96, 103, 108, 109, 112, 195, 196, 209, 227, 228, 230, 231, 232, 236, 237], "23it": [11, 13, 19, 103, 109, 112, 195, 196, 209, 227, 228, 229, 231, 232, 235], "62it": [11, 19, 34, 103, 109, 112, 195, 196, 209, 227, 229, 231, 232, 236], "48it": [11, 13, 19, 103, 195, 196, 209, 227, 232, 236], "37it": [11, 19, 34, 44, 103, 108, 112, 195, 196, 209, 227, 228, 231, 232, 235], "93it": [11, 13, 19, 33, 103, 104, 108, 109, 112, 180, 196, 227, 228, 229, 231, 232], "95it": [11, 19, 33, 34, 103, 112, 195, 196, 209, 228, 229, 231, 232], "55it": [11, 13, 19, 34, 108, 109, 112, 195, 196, 209, 227, 228, 229, 231, 232], "97it": [11, 13, 19, 34, 103, 108, 112, 195, 196, 209, 227, 228, 231, 232, 237], "53it": [11, 19, 33, 34, 103, 108, 109, 112, 195, 196, 209, 224, 227, 228, 229, 231, 232, 235, 237], "86it": [11, 19, 33, 34, 103, 108, 109, 195, 196, 227, 228, 231, 232, 237], "17it": [11, 13, 19, 34, 103, 112, 196, 209, 227, 231, 232, 237], "35it": [11, 13, 19, 33, 103, 109, 112, 196, 209, 227, 228, 229, 231, 232, 236], "54it": [11, 13, 19, 34, 103, 104, 109, 195, 196, 209, 227, 228, 229, 231, 232, 237], "47it": [11, 19, 34, 103, 108, 109, 112, 196, 209, 224, 227, 228, 231, 232, 237], "00it": [11, 13, 19, 34, 103, 112, 180, 196, 209, 227, 228, 229, 232], "38it": [11, 19, 34, 44, 103, 112, 195, 196, 209, 227, 228, 229, 231, 232], "03it": [11, 13, 19, 33, 34, 103, 112, 180, 196, 209, 227, 228, 229, 231, 232, 236], "27it": [11, 13, 19, 104, 109, 112, 123, 195, 209, 227, 228, 231, 232, 235, 236, 237], "59it": [11, 19, 34, 103, 112, 196, 209, 227, 229, 232], "65it": [11, 13, 19, 103, 108, 112, 195, 227, 231, 232], "52it": [11, 13, 19, 33, 34, 103, 195, 196, 209, 227, 228, 231, 232, 237], "investig": [11, 21, 144, 151, 191, 202, 237, 267, 268, 563, 796, 864], "patterns_": [11, 15, 18, 19, 21, 196, 413, 417, 419, 420, 421, 431, 564, 888], "inverse_transform": [11, 18, 196, 421, 422, 427, 428, 431, 564], "lookup": [11, 41, 258, 265, 266, 267, 268, 270, 278, 465, 466, 481, 482, 657, 756, 843], "vertic": [11, 22, 24, 28, 38, 39, 41, 43, 48, 52, 53, 69, 116, 127, 134, 136, 140, 142, 155, 158, 159, 160, 161, 175, 178, 181, 191, 200, 203, 208, 209, 216, 219, 224, 227, 228, 235, 236, 237, 261, 265, 266, 267, 268, 271, 272, 273, 276, 277, 278, 279, 280, 281, 285, 286, 298, 299, 360, 362, 447, 460, 469, 471, 472, 481, 482, 515, 517, 539, 540, 629, 658, 671, 673, 674, 676, 677, 678, 679, 680, 682, 683, 684, 695, 696, 698, 699, 700, 703, 704, 755, 756, 770, 775, 780, 786, 794, 809, 814, 819, 838, 843, 870, 873, 888], "lh_vertno": [11, 116, 175, 276, 279, 671], "empti": [11, 15, 27, 122, 130, 140, 142, 150, 161, 162, 166, 169, 171, 172, 184, 185, 191, 201, 205, 206, 208, 210, 216, 222, 237, 259, 262, 265, 266, 267, 268, 270, 274, 276, 289, 304, 312, 321, 328, 350, 351, 356, 361, 379, 380, 381, 384, 385, 386, 388, 393, 396, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 440, 461, 481, 482, 489, 493, 496, 497, 504, 508, 529, 554, 555, 556, 560, 561, 563, 564, 566, 573, 574, 584, 595, 596, 619, 627, 638, 648, 652, 689, 695, 704, 708, 710, 711, 712, 725, 743, 756, 765, 772, 780, 781, 786, 787, 793, 795, 803, 809, 810, 843, 847, 863, 870, 873, 888], "stc_feat": 11, "sourceestim": [11, 22, 26, 31, 35, 37, 40, 46, 59, 61, 94, 155, 158, 165, 166, 181, 186, 187, 223, 224, 235, 236, 237, 264, 267, 268, 271, 272, 273, 275, 277, 278, 279, 280, 281, 285, 286, 290, 291, 292, 293, 294, 295, 296, 297, 362, 447, 460, 476, 477, 478, 479, 517, 530, 531, 532, 533, 534, 536, 539, 540, 545, 546, 629, 635, 648, 658, 663, 664, 665, 666, 667, 668, 669, 670, 672, 673, 674, 675, 693, 700, 703, 704, 756, 770, 814, 815, 843, 865, 867, 878, 888], "ab": [11, 19, 35, 38, 40, 47, 59, 61, 69, 97, 119, 120, 127, 135, 151, 179, 183, 191, 195, 202, 227, 229, 230, 235, 236, 237, 242, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 565, 724, 734, 791, 870, 888], "tstep": [11, 22, 31, 46, 59, 90, 94, 95, 181, 224, 235, 236, 237, 272, 273, 276, 279, 280, 281, 361, 479, 517, 563, 658, 675, 694, 700, 723, 731, 888], "transpar": [11, 58, 101, 172, 181, 200, 242, 257, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 708, 756, 775, 792, 809, 814, 819, 820, 821, 822, 869, 888], "03": [11, 13, 19, 24, 33, 34, 35, 49, 56, 59, 67, 72, 74, 76, 77, 83, 84, 85, 90, 93, 94, 103, 106, 108, 109, 120, 121, 127, 130, 141, 146, 150, 151, 158, 162, 166, 167, 168, 169, 170, 174, 182, 183, 184, 196, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 231, 232, 236, 237, 245, 259, 263, 356, 563, 695, 696, 698, 699, 784], "16it": [11, 13, 19, 34, 103, 108, 112, 195, 196, 209, 227, 228, 231, 232], "02it": [11, 13, 19, 34, 112, 195, 196, 209, 227, 228, 229, 231, 232, 235], "24it": [11, 13, 19, 34, 103, 108, 195, 196, 209, 227, 228, 231, 232], "5072551": 11, "37721471": 11, "59502306": 11, "824": [11, 20, 106, 113, 232], "326": [11, 13, 20, 169, 232], "decoding_spatio_temporal_sourc": [11, 20], "comodul": [12, 420], "allow": [12, 19, 40, 43, 44, 46, 61, 94, 104, 112, 115, 116, 120, 137, 140, 141, 142, 143, 144, 146, 150, 151, 157, 158, 160, 166, 169, 170, 172, 178, 189, 192, 196, 202, 207, 216, 217, 219, 227, 228, 229, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 272, 273, 276, 278, 279, 280, 281, 292, 293, 296, 310, 314, 337, 342, 349, 356, 374, 413, 419, 420, 421, 446, 454, 471, 480, 481, 482, 484, 496, 497, 500, 502, 532, 534, 537, 539, 540, 541, 545, 563, 564, 568, 584, 593, 613, 619, 625, 643, 657, 673, 675, 694, 708, 710, 711, 712, 735, 736, 738, 739, 750, 754, 777, 786, 788, 799, 801, 809, 812, 843, 845, 847, 865, 869, 870, 873, 876, 888], "composit": [12, 188, 196, 272, 273, 276, 279, 280, 281, 756, 814, 819, 870], "orthogon": [12, 114, 156, 160, 178, 196, 206, 207, 210, 298, 299, 563, 736, 739, 870, 873, 876, 888], "spatial": [12, 14, 15, 17, 18, 20, 27, 31, 32, 33, 34, 36, 47, 56, 71, 72, 80, 83, 84, 90, 113, 119, 121, 151, 152, 155, 156, 162, 175, 199, 200, 202, 206, 207, 212, 219, 222, 224, 227, 229, 232, 235, 236, 237, 241, 242, 245, 262, 265, 266, 267, 268, 269, 270, 271, 274, 276, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 314, 330, 356, 362, 365, 366, 375, 413, 414, 420, 421, 427, 429, 431, 442, 481, 482, 493, 494, 496, 523, 529, 541, 542, 545, 560, 561, 562, 563, 564, 577, 578, 594, 595, 616, 622, 625, 627, 662, 665, 670, 678, 679, 680, 681, 685, 695, 696, 698, 699, 708, 710, 712, 727, 746, 756, 773, 788, 790, 795, 796, 799, 808, 811, 816, 818, 843, 863, 864, 867, 870, 888], "maxim": [12, 61, 88, 142, 160, 176, 177, 180, 183, 196, 202, 204, 245, 273, 279, 280, 281, 298, 299, 421, 563, 593, 678, 679, 680, 682, 683, 694, 820, 870, 888], "csp": [12, 17, 20, 27, 196, 265, 270, 314, 330, 365, 375, 417, 420, 442, 496, 560, 564, 708, 864, 878, 888], "variabl": [12, 16, 31, 43, 101, 103, 112, 117, 141, 143, 150, 155, 168, 170, 196, 199, 202, 204, 206, 216, 218, 231, 232, 237, 245, 258, 263, 265, 266, 271, 272, 273, 275, 276, 279, 280, 281, 305, 309, 310, 311, 314, 362, 367, 368, 369, 374, 377, 379, 380, 381, 382, 384, 385, 386, 389, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 420, 430, 432, 442, 454, 455, 461, 463, 465, 469, 471, 472, 473, 474, 475, 481, 482, 501, 515, 519, 521, 549, 562, 563, 584, 591, 610, 612, 620, 624, 630, 639, 644, 645, 646, 647, 654, 656, 657, 671, 674, 685, 695, 696, 697, 698, 699, 703, 704, 748, 756, 772, 774, 784, 786, 803, 809, 814, 819, 820, 822, 838, 843, 845, 852, 853, 863, 867, 870, 874, 888], "fluctuat": [12, 141, 142, 151, 199, 201, 207, 208, 212, 224, 267, 268, 796, 843], "electromyogram": [12, 888], "cortico": 12, "muscular": [12, 199, 205], "coher": [12, 32, 33, 103, 107, 180, 224, 245, 290, 291, 292, 293, 298, 708, 709, 735, 736, 737, 738, 739, 740, 782, 843, 854, 864], "fieldtrip": [12, 156, 191, 202, 208, 227, 229, 235, 324, 331, 501, 620, 624, 735, 736, 738, 739, 870, 876, 888], "fieldtrip_cmc": [12, 21, 171], "ridg": [12, 19, 195, 419, 425], "kfold": [12, 16, 19, 356, 361, 430, 888], "cross_val_predict": [12, 888], "subjectcmc": [12, 21], "emg": [12, 83, 137, 169, 189, 196, 216, 222, 245, 265, 266, 267, 268, 275, 313, 375, 420, 446, 481, 482, 493, 496, 508, 560, 563, 708, 710, 711, 712, 786, 809, 864, 870, 873, 888], "emglft": 12, "ref_meg": [12, 21, 75, 119, 123, 169, 212, 265, 266, 267, 268, 275, 313, 375, 481, 482, 560, 561, 577, 708, 710, 711, 712, 786, 809, 888], "make_fixed_length_ev": [12, 21, 166, 168, 217, 222, 361, 536, 843, 878, 888], "durat": [12, 21, 49, 66, 71, 72, 74, 75, 76, 77, 81, 82, 83, 90, 93, 94, 123, 127, 137, 140, 141, 144, 146, 149, 150, 151, 166, 167, 168, 191, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 224, 235, 236, 237, 257, 259, 265, 266, 267, 268, 275, 276, 284, 343, 345, 359, 361, 413, 415, 419, 420, 424, 425, 442, 449, 451, 452, 454, 481, 482, 498, 522, 523, 563, 565, 566, 568, 584, 595, 603, 658, 660, 700, 722, 724, 734, 738, 786, 795, 803, 809, 843, 847, 888], "meg_epoch": [12, 18], "detrend": [12, 110, 135, 211, 260, 265, 267, 268, 522, 618, 888], "emg_epoch": 12, "var": [12, 47, 71, 171, 207, 377, 461, 701], "oa": [12, 21, 84, 183, 356], "validaton": 12, "first_samp": [12, 71, 76, 137, 166, 168, 184, 216, 217, 218, 259, 260, 265, 266, 270, 275, 284, 364, 441, 442, 454, 480, 481, 482, 502, 523, 558, 563, 596, 621, 622, 658, 673, 789, 803, 809, 833, 843, 873, 888], "set_xlabel": [12, 13, 19, 21, 22, 45, 71, 96, 104, 113, 133, 144, 146, 172, 183, 196, 206, 230, 231, 232], "set_titl": [12, 13, 22, 45, 71, 72, 96, 99, 112, 114, 120, 127, 136, 144, 195, 196, 210, 211, 230, 231, 232, 241, 242], "78": [12, 13, 19, 21, 34, 35, 47, 51, 80, 81, 103, 112, 114, 123, 137, 157, 158, 166, 169, 176, 179, 185, 195, 196, 209, 216, 227, 228, 229, 231, 232, 236, 237, 245, 301, 405, 870], "62": [12, 13, 16, 19, 21, 34, 35, 45, 47, 56, 71, 81, 103, 108, 112, 114, 136, 137, 169, 180, 196, 209, 227, 228, 231, 232, 235, 245], "258": [12, 21, 99, 102, 112, 123, 158, 166, 169, 196], "114": [12, 20, 21, 35, 66, 67, 81, 151, 169, 181, 196, 209, 217, 231, 232, 235, 239, 888], "12000": [12, 21], "911610": [12, 21], "191": [12, 21, 167, 169, 174, 227, 231, 232], "180000": 12, "150": [12, 13, 35, 42, 45, 59, 74, 75, 77, 81, 82, 94, 120, 123, 141, 142, 146, 151, 158, 160, 166, 169, 180, 191, 196, 201, 205, 207, 209, 215, 227, 232, 257, 278, 726, 888], "793": [12, 144, 209], "661": [12, 196, 202, 228, 232], "1057": 12, "881": [12, 232, 278], "183": [12, 169, 172, 196, 227, 232, 237], "1801": 12, "contribut": [12, 19, 45, 69, 149, 151, 180, 229, 232, 256, 265, 266, 442, 579, 664, 845, 851, 864, 866, 869, 888], "sven": [12, 18, 19, 196, 245, 417, 419, 420, 421, 431], "d\u00e4hne": [12, 18, 19, 196, 245, 417, 419, 420, 431], "frank": [12, 18, 19, 76, 196, 205, 245, 417, 419, 420, 431, 563, 602], "meineck": [12, 18, 19, 196, 245, 417, 419, 420, 431], "stefan": [12, 18, 19, 33, 113, 127, 196, 205, 229, 232, 235, 241, 245, 417, 419, 420, 421, 431, 578, 875, 888], "hauf": [12, 18, 19, 196, 245, 417, 419, 420, 421, 431], "johann": [12, 196, 245, 420, 888], "h\u00f6hne": [12, 196, 245, 420], "michael": [12, 19, 101, 195, 196, 204, 205, 245, 356, 413, 419, 420, 562, 563, 599, 610, 722, 724, 734, 738, 864, 870, 888], "tangermann": [12, 196, 205, 245, 420], "klau": [12, 196, 205, 245, 413, 420, 563], "robert": [12, 76, 180, 195, 196, 205, 212, 232, 245, 413, 419, 420, 577, 695, 696, 698, 699, 864, 875, 888], "m\u00fcller": [12, 75, 196, 205, 245, 413, 420, 563], "vadim": [12, 21, 196, 245, 420, 421], "nikulin": [12, 21, 196, 245, 420, 421], "novel": [12, 21, 196, 245, 334, 420, 421, 876], "framework": [12, 35, 196, 245, 420, 476, 859, 870], "amplitud": [12, 19, 35, 37, 39, 40, 45, 47, 53, 59, 81, 82, 93, 94, 95, 116, 123, 127, 132, 135, 140, 141, 144, 145, 162, 166, 172, 175, 180, 183, 184, 190, 192, 195, 196, 199, 200, 202, 205, 206, 207, 209, 211, 212, 224, 245, 257, 260, 263, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 291, 299, 343, 344, 345, 349, 361, 420, 456, 478, 479, 481, 482, 524, 534, 545, 563, 565, 580, 581, 617, 660, 661, 665, 669, 670, 694, 695, 710, 711, 712, 724, 734, 756, 783, 784, 797, 810, 843, 854, 867, 870, 873, 888], "neuron": [12, 21, 137, 144, 195, 196, 199, 245, 298, 406, 419, 420, 421, 530, 577, 843, 864, 870], "oscil": [12, 21, 69, 94, 113, 114, 196, 199, 203, 224, 245, 420, 421, 661, 722, 724, 734, 738], "behavior": [12, 144, 169, 188, 196, 199, 201, 202, 207, 245, 258, 265, 266, 275, 420, 454, 523, 528, 530, 595, 622, 657, 710, 712, 826, 847, 866, 867, 869, 876], "111": [12, 32, 35, 46, 113, 127, 145, 169, 196, 231, 232, 245, 420], "122": [12, 16, 160, 169, 170, 176, 196, 205, 208, 215, 227, 231, 232, 245, 337, 414, 420, 429, 870, 888], "2013": [12, 16, 18, 19, 43, 59, 81, 82, 129, 144, 169, 196, 245, 271, 276, 277, 283, 362, 414, 417, 419, 420, 429, 431, 437, 479, 568, 599, 665, 670, 862], "07": [12, 19, 35, 46, 56, 59, 67, 81, 84, 85, 103, 106, 108, 134, 160, 170, 176, 179, 183, 184, 185, 191, 195, 196, 209, 215, 226, 229, 232, 237, 244, 245, 323, 420, 668, 870], "079": [12, 136, 196, 245, 420], "786": [12, 20, 232], "decoding_spoc_cmc": [12, 20], "illustr": [13, 27, 28, 69, 70, 90, 94, 95, 125, 134, 138, 142, 146, 150, 151, 165, 166, 171, 188, 199, 200, 201, 203, 205, 207, 211, 216, 227, 231, 237, 241, 481, 482, 843, 863, 870], "discriminatori": 13, "given": [13, 16, 19, 26, 31, 71, 80, 94, 95, 112, 120, 121, 137, 143, 144, 149, 150, 151, 158, 160, 162, 165, 166, 169, 170, 171, 175, 178, 180, 186, 187, 188, 195, 196, 201, 202, 205, 206, 207, 210, 212, 216, 217, 219, 227, 229, 231, 232, 240, 242, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 279, 280, 281, 289, 298, 299, 304, 312, 314, 318, 319, 320, 329, 331, 332, 356, 361, 367, 368, 369, 370, 371, 379, 380, 381, 382, 384, 385, 386, 388, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 415, 417, 420, 421, 423, 428, 429, 433, 434, 438, 448, 449, 452, 454, 456, 458, 469, 476, 478, 479, 480, 481, 482, 522, 525, 526, 529, 530, 531, 532, 533, 534, 536, 537, 538, 541, 546, 547, 562, 563, 564, 565, 566, 568, 574, 578, 579, 580, 581, 584, 587, 591, 595, 601, 603, 609, 610, 615, 618, 652, 657, 662, 672, 675, 676, 688, 690, 694, 695, 696, 698, 699, 701, 703, 706, 708, 709, 710, 711, 712, 716, 717, 718, 719, 720, 721, 724, 726, 728, 732, 734, 738, 739, 743, 744, 748, 756, 760, 762, 772, 773, 774, 780, 784, 786, 787, 788, 790, 791, 792, 793, 795, 800, 803, 807, 809, 810, 811, 812, 814, 816, 818, 819, 823, 824, 843, 845, 847, 864, 867, 869, 870, 873, 888], "subsequ": [13, 70, 84, 112, 113, 140, 142, 145, 157, 161, 166, 196, 200, 203, 205, 216, 235, 245, 265, 266, 481, 482, 563, 566, 573, 584, 700, 843, 850, 863, 867, 870, 888], "accur": [13, 26, 41, 44, 45, 50, 109, 135, 158, 159, 176, 182, 188, 196, 204, 205, 207, 210, 212, 258, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 456, 481, 482, 521, 563, 577, 590, 746, 795, 822, 863, 888], "generalizingestim": [13, 196, 430, 878, 888], "events_fnam": 13, "auditori": [13, 15, 30, 31, 37, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 57, 58, 60, 61, 62, 66, 72, 79, 80, 86, 87, 94, 112, 116, 119, 120, 124, 127, 132, 140, 141, 142, 143, 145, 146, 149, 150, 151, 152, 165, 166, 168, 172, 175, 176, 178, 179, 180, 181, 182, 193, 194, 195, 196, 202, 207, 212, 217, 223, 231, 235, 237, 240, 242, 245, 258, 259, 260, 262, 265, 266, 267, 268, 270, 271, 276, 355, 357, 361, 363, 365, 419, 440, 454, 481, 494, 519, 520, 525, 528, 529, 530, 541, 576, 599, 619, 621, 627, 633, 640, 656, 711, 756, 888], "050": [13, 81, 140, 142, 149, 169, 180, 200, 208, 209, 224, 245], "faster": [13, 18, 44, 120, 140, 183, 196, 205, 242, 245, 257, 265, 266, 267, 268, 271, 272, 273, 276, 279, 280, 281, 362, 365, 453, 469, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 522, 563, 565, 695, 696, 698, 699, 845, 850, 851, 853, 876, 888], "constructor": [13, 88, 140, 142, 151, 165, 166, 172, 201, 203, 206, 218, 222, 225, 260, 272, 273, 276, 279, 280, 281, 480, 564, 580, 814, 819, 847, 867, 888], "497": [13, 14, 15, 77, 88, 99, 121, 133, 178, 196, 205, 232, 245, 278], "310": [13, 14, 15, 34, 35, 56, 77, 81, 88, 99, 109, 121, 133, 169, 205, 232], "lbfg": [13, 18, 196], "time_gen": [13, 196], "experiment": [13, 16, 45, 71, 72, 74, 77, 81, 82, 83, 90, 93, 127, 140, 141, 146, 149, 150, 151, 153, 165, 167, 168, 169, 180, 196, 199, 200, 201, 203, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 227, 245, 265, 266, 267, 268, 270, 414, 429, 481, 482, 483, 530, 584, 595, 596, 660, 661, 668, 708, 711, 843, 863, 870, 874, 888], "59": [13, 15, 19, 28, 30, 31, 34, 35, 38, 39, 40, 41, 44, 45, 48, 49, 54, 55, 56, 58, 59, 61, 70, 72, 77, 79, 81, 83, 90, 92, 93, 94, 103, 108, 111, 112, 114, 116, 118, 121, 127, 131, 141, 142, 145, 150, 151, 152, 156, 158, 162, 164, 169, 172, 176, 178, 182, 184, 187, 195, 196, 199, 200, 205, 206, 207, 209, 223, 227, 228, 229, 231, 232, 236, 237, 240, 245, 278, 434, 574, 584, 595, 701, 702], "30it": [13, 19, 34, 103, 112, 196, 209, 228, 229, 232, 236, 237], "54": [13, 19, 28, 34, 35, 45, 47, 81, 103, 106, 108, 109, 112, 114, 144, 151, 158, 169, 195, 196, 209, 210, 227, 228, 231, 232, 245, 278, 888], "64it": [13, 19, 34, 103, 108, 109, 195, 196, 209, 227, 231, 232, 237], "83": [13, 19, 35, 40, 47, 60, 81, 103, 108, 112, 114, 169, 195, 196, 201, 204, 209, 210, 227, 228, 231, 232, 245, 303, 337, 562, 610, 695, 696, 698, 699], "72": [13, 15, 19, 28, 35, 45, 47, 72, 79, 80, 81, 96, 100, 103, 104, 112, 114, 117, 123, 140, 149, 156, 162, 169, 177, 180, 182, 183, 184, 185, 195, 196, 200, 209, 210, 227, 228, 229, 230, 231, 232, 235, 245, 563, 572, 870, 888], "89": [13, 19, 34, 35, 47, 72, 79, 80, 81, 82, 95, 103, 108, 112, 114, 136, 169, 184, 191, 195, 196, 200, 209, 227, 228, 231, 232, 245, 572, 870], "75it": [13, 19, 34, 44, 103, 112, 195, 196, 209, 227, 228, 231, 232, 236, 237], "34": [13, 19, 28, 34, 35, 41, 45, 47, 69, 72, 81, 103, 108, 112, 114, 116, 123, 130, 145, 160, 164, 169, 171, 181, 185, 196, 202, 209, 210, 211, 215, 223, 227, 228, 229, 231, 232, 236, 237, 245, 572, 689], "1225": [13, 196], "231": [13, 112, 169, 209, 231], "261": [13, 35, 112, 169, 209, 232], "292": [13, 112, 169, 179, 187, 227, 232], "283": [13, 41, 72, 112, 169, 227, 232, 245, 572], "28it": [13, 19, 103, 108, 112, 195, 196, 209, 227, 228, 229, 232], "273": [13, 35, 46, 166, 169, 184, 209, 227, 232, 888], "56": [13, 15, 19, 32, 35, 45, 47, 76, 80, 81, 82, 88, 103, 108, 112, 114, 130, 135, 139, 151, 160, 169, 172, 176, 180, 191, 195, 196, 209, 211, 227, 228, 231, 232, 245, 259, 413, 564, 695, 696, 698, 699], "271": [13, 112, 166, 169, 232], "107": [13, 35, 62, 113, 115, 140, 169, 196, 227, 231, 232, 245, 873, 888], "259": [13, 112, 169, 209, 227, 232, 239, 245, 870], "116": [13, 41, 56, 169, 181, 231], "260": [13, 81, 112, 169, 192, 209, 232, 236, 604, 864], "269": [13, 112, 136, 169, 209, 227], "274": [13, 46, 81, 82, 112, 123, 166, 169, 191, 196, 227, 232], "279": [13, 169, 196, 203, 245, 563, 737, 740], "160": [13, 81, 82, 84, 123, 169, 170, 171, 188, 196, 232, 245, 340, 541, 575, 585, 588, 665, 670], "280": [13, 81, 112, 169, 170, 196, 209, 232, 340, 888], "171": [13, 72, 76, 126, 169, 202, 221, 231, 232, 245, 390, 541, 572, 602, 665, 670, 888], "193": [13, 169, 209, 227, 231, 888], "290": [13, 81, 144, 169, 184, 187, 227, 232, 245, 668], "203": [13, 35, 40, 42, 49, 50, 58, 59, 80, 87, 92, 93, 94, 99, 111, 116, 119, 121, 123, 124, 131, 142, 150, 152, 156, 157, 158, 162, 169, 170, 172, 177, 178, 179, 180, 196, 200, 206, 207, 209, 210, 224, 231, 232, 245], "223": [13, 46, 112, 148, 169, 227, 232], "232": [13, 66, 112, 144, 169, 231, 232, 234], "288": [13, 15, 35, 72, 73, 132, 141, 145, 160, 169, 171, 232, 237, 245, 572], "242": [13, 56, 112, 169, 209, 227, 231, 232, 888], "21it": [13, 19, 34, 103, 108, 109, 195, 196, 209, 227, 228, 231, 232], "72it": [13, 19, 34, 103, 112, 195, 196, 209, 228, 230, 231, 232, 236, 237], "297": [13, 35, 112, 169, 227, 232], "282": [13, 40, 56, 169, 209], "58it": [13, 19, 34, 103, 104, 112, 195, 196, 209, 227, 228, 231, 232, 237], "308": [13, 112, 169, 209, 217, 221, 227], "285": [13, 112, 169, 227], "318": [13, 56, 169, 227, 232], "328": [13, 113, 121, 162, 169, 196, 209, 227, 232, 245, 267, 268, 356, 796, 867], "339": [13, 35, 112, 169, 195, 209, 227, 232], "352": [13, 70, 81, 169, 171, 195, 209, 232], "293": [13, 35, 112, 169, 183, 209, 245], "362": [13, 81, 143, 148, 169, 223, 228], "373": [13, 81, 169, 196, 232], "295": [13, 46, 169, 232], "385": [13, 81, 149, 154, 209, 227], "395": [13, 67, 81, 196, 227, 232], "298": [13, 46, 76, 112, 169, 196, 200, 209, 215], "406": [13, 81, 109, 227], "418": [13, 196, 209, 227, 232, 888], "303": [13, 35, 88, 112, 121, 130, 169, 196, 223, 236], "428": [13, 209, 227, 232], "66it": [13, 19, 33, 34, 96, 103, 108, 109, 112, 195, 196, 209, 227, 228, 229, 231, 232, 237], "438": [13, 48, 49, 54, 55, 56, 227, 232], "20it": [13, 19, 34, 109, 112, 195, 196, 209, 227, 228, 231, 232, 236], "37": [13, 19, 21, 28, 34, 35, 42, 45, 47, 81, 103, 108, 112, 114, 145, 157, 169, 195, 196, 209, 227, 228, 229, 231, 232, 235, 236, 237, 240, 337, 405, 454, 574, 888], "449": [13, 227, 232, 278], "43it": [13, 19, 33, 103, 108, 109, 112, 195, 196, 209, 227, 228, 231, 232], "458": [13, 184, 232], "301": [13, 46, 114, 169, 191, 194, 209, 240, 873], "40it": [13, 19, 103, 108, 109, 112, 195, 196, 209, 227, 229, 231, 232, 236], "38": [13, 19, 21, 28, 34, 35, 41, 45, 47, 72, 74, 81, 82, 93, 96, 103, 104, 108, 112, 114, 127, 140, 141, 142, 144, 158, 169, 180, 184, 191, 195, 196, 201, 202, 207, 209, 215, 227, 228, 229, 231, 232, 236, 237, 574], "468": [13, 204, 232, 245, 562, 610], "477": [13, 209, 227, 232], "487": [13, 151, 174, 227], "496": [13, 109, 171, 209, 232, 278], "507": [13, 19, 162, 202, 215, 227, 232], "516": [13, 144, 158, 232], "296": [13, 19, 112, 169, 196, 209, 227, 232], "525": [13, 232], "535": [13, 135, 139, 232], "544": [13, 196, 232], "554": [13, 15, 20, 232], "563": [13, 209], "573": [13, 209, 232], "583": [13, 26, 232, 245, 421], "593": [13, 37, 56, 82, 85, 196, 232], "602": [13, 168, 203, 232, 873], "291": [13, 109, 169, 183, 209, 232], "612": 13, "34it": [13, 19, 33, 34, 103, 109, 112, 195, 196, 209, 228, 231, 232, 235], "622": [13, 24, 25, 209, 232, 245, 356], "634": [13, 245, 563], "294": [13, 112, 169, 232], "647": [13, 136, 196, 232], "658": [13, 42, 196, 232], "670": [13, 29, 45, 69, 72, 81, 83, 92, 93, 103, 104, 107, 110, 111, 117, 118, 123, 127, 130, 146, 156, 162, 167, 168, 172, 182, 196, 199, 203, 204, 206, 207, 209, 216, 219, 223, 224, 229, 230, 231, 232], "36it": [13, 19, 34, 103, 108, 112, 195, 196, 209, 227, 229, 231, 232, 237], "679": [13, 121, 152, 154, 196], "690": [13, 81], "57": [13, 19, 34, 35, 40, 45, 81, 103, 108, 112, 114, 117, 124, 126, 136, 139, 150, 151, 157, 169, 171, 180, 183, 184, 191, 195, 196, 207, 209, 218, 227, 228, 229, 231, 232, 236, 237, 239, 240, 245, 265, 266, 267, 268, 337, 478, 481, 482, 710, 712, 720, 726, 888], "711": [13, 196, 208, 232, 245, 265, 266, 267, 268, 481, 482, 652], "722": [13, 103, 232, 245, 724, 734, 735, 738], "304": [13, 50, 109, 124, 150, 169, 171, 184, 227, 228, 232, 888], "733": [13, 94, 161, 232], "744": [13, 35, 232], "770": [13, 81, 209], "313": [13, 35, 169, 232, 888], "780": [13, 81, 209, 232], "312": [13, 35, 112, 169, 195, 232], "794": [13, 144, 196, 209, 232], "317": [13, 76, 84, 85, 112, 169, 209, 227, 232], "807": [13, 34, 41, 56], "321": [13, 46, 56, 169, 196, 198, 202, 227, 232], "67": [13, 19, 33, 35, 47, 57, 81, 82, 103, 106, 107, 108, 112, 114, 116, 149, 158, 169, 172, 176, 178, 181, 191, 195, 196, 209, 227, 228, 229, 231, 232, 236, 237, 245, 530, 888], "817": [13, 32, 209, 232], "319": [13, 35, 42, 49, 73, 74, 99, 112, 141, 152, 166, 169, 171, 174, 177, 180, 196, 201, 232, 245, 563], "832": [13, 232], "844": [13, 30, 56], "327": [13, 169, 209, 232], "854": [13, 209, 232, 240, 244], "868": [13, 205, 232, 245, 578], "329": [13, 169, 195, 227, 232], "880": [13, 81, 180, 209, 232, 245, 298, 299], "890": [13, 81, 209, 232, 245, 278], "904": [13, 232, 278], "333": [13, 35, 76, 169, 209, 232], "911": [13, 232], "919": [13, 232], "322": [13, 69, 85, 169, 196, 209, 232], "935": [13, 232], "330": [13, 35, 50, 81, 82, 169, 183, 227, 232, 888], "946": [13, 232], "954": [13, 196, 205, 232], "324": [13, 112, 169, 227, 232], "960": [13, 62, 81, 101, 143, 228, 232, 235, 239, 864], "971": [13, 232], "982": [13, 232], "992": [13, 211, 232], "316": [13, 112, 144, 169, 195, 209, 232, 245, 419], "1002": [13, 58, 84, 178, 195, 240, 245, 265, 266, 267, 268, 276, 481, 482, 603, 661, 697, 710, 712, 720, 726, 863], "314": [13, 100, 102, 169, 209, 232], "1014": [13, 161, 195, 209], "1026": [13, 41, 109, 863], "56it": [13, 19, 33, 34, 103, 112, 195, 196, 209, 227, 228, 229, 231, 232, 236, 237], "1036": 13, "1046": [13, 195], "1059": 13, "42it": [13, 19, 33, 34, 103, 108, 109, 112, 196, 209, 227, 228, 231, 232, 236], "88": [13, 19, 26, 35, 41, 45, 47, 50, 80, 81, 82, 84, 85, 91, 96, 103, 109, 112, 114, 120, 158, 169, 176, 180, 181, 182, 191, 195, 196, 209, 211, 227, 228, 229, 231, 232, 236, 237, 245, 356], "1073": [13, 33, 180, 196, 224, 245, 291, 298], "1084": 13, "1094": [13, 209], "1105": [13, 209], "1117": 13, "1133": [13, 169], "26it": [13, 19, 103, 109, 112, 195, 209, 227, 231, 232], "93": [13, 19, 33, 35, 40, 47, 80, 103, 108, 112, 114, 169, 196, 209, 215, 227, 228, 231, 232, 245, 599], "1144": 13, "1153": 13, "1164": 13, "96": [13, 15, 18, 19, 44, 47, 82, 103, 107, 108, 112, 113, 114, 137, 162, 169, 171, 180, 184, 196, 206, 207, 209, 227, 228, 229, 230, 231, 232, 236, 237, 245, 267, 268, 417, 419, 431, 796, 867], "1173": 13, "323": [13, 112, 169, 196, 209, 210, 232], "1182": 13, "69it": [13, 19, 34, 103, 108, 109, 196, 209, 227, 228, 231, 232, 236, 237], "1195": 13, "1204": 13, "1216": 13, "constrained_layout": [13, 90, 183, 212, 241, 724, 734], "vmax": [13, 19, 71, 88, 107, 112, 114, 116, 117, 124, 136, 141, 160, 176, 195, 196, 210, 211, 227, 229, 230, 241, 262, 265, 266, 267, 268, 274, 413, 420, 481, 482, 562, 563, 708, 710, 712, 756, 773, 787, 788, 791, 795, 799, 808, 811, 816, 817, 818, 888], "xaxi": [13, 127], "set_ticks_posit": 13, "bottom": [13, 71, 74, 75, 112, 120, 127, 140, 146, 161, 191, 218, 219, 227, 232, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 769, 786, 796, 814, 819, 843, 888], "ntest": 13, "ntrain": 13, "fontweight": [13, 127, 144, 210], "bold": [13, 127, 144, 151, 200, 203, 206, 207, 208, 210, 211, 227], "r\u00e9mi": [13, 196, 245], "stanisla": [13, 16, 137, 196, 245, 414, 429, 888], "dehaen": [13, 16, 196, 245, 414, 429], "dynam": [13, 21, 27, 32, 33, 71, 94, 105, 106, 112, 166, 180, 196, 202, 204, 205, 212, 224, 245, 265, 268, 271, 276, 288, 290, 291, 292, 293, 298, 421, 452, 454, 481, 482, 530, 563, 564, 571, 687, 809, 843, 854, 864, 870, 873, 888], "represent": [13, 17, 20, 27, 43, 44, 94, 103, 112, 115, 140, 149, 160, 166, 168, 169, 170, 172, 175, 190, 196, 205, 216, 217, 235, 236, 237, 240, 241, 245, 265, 266, 267, 268, 275, 277, 362, 365, 448, 454, 481, 482, 513, 560, 563, 708, 710, 712, 735, 736, 738, 739, 740, 764, 800, 843, 854, 864, 873, 888], "tempor": [13, 16, 19, 27, 46, 59, 78, 85, 105, 106, 113, 114, 135, 136, 137, 140, 142, 146, 151, 165, 180, 184, 197, 198, 201, 202, 203, 204, 207, 210, 218, 227, 229, 230, 231, 232, 238, 239, 245, 260, 265, 267, 268, 270, 276, 277, 278, 356, 362, 419, 425, 433, 436, 439, 453, 454, 456, 477, 478, 479, 481, 482, 522, 526, 529, 530, 544, 546, 547, 560, 563, 565, 579, 595, 602, 603, 618, 622, 633, 635, 637, 642, 663, 664, 665, 666, 667, 668, 669, 670, 680, 682, 683, 684, 689, 691, 698, 699, 700, 721, 724, 734, 735, 736, 737, 738, 739, 740, 756, 864, 865, 870, 888], "trend": [13, 66, 113, 141, 196, 245], "cognit": [13, 42, 43, 196, 202, 245, 256, 277, 362, 531, 875], "tic": [13, 196, 245], "190": [13, 20, 46, 59, 76, 81, 116, 169, 184, 209, 227, 231, 232, 245, 695, 696, 698, 699], "129": [13, 14, 15, 20, 35, 56, 58, 62, 73, 85, 88, 121, 128, 130, 169, 170, 209, 232, 234, 245], "decoding_time_generalization_condit": [13, 20], "Then": [14, 19, 45, 68, 82, 109, 113, 115, 135, 136, 140, 156, 161, 181, 190, 191, 192, 207, 232, 242, 267, 268, 319, 438, 578, 703, 792, 847, 851, 858, 867, 870], "virtual": [14, 71, 99, 151, 205, 208, 265, 266, 267, 268, 316, 434, 481, 482, 594, 649, 652, 843, 845, 855, 888], "output": [14, 19, 32, 35, 40, 44, 46, 47, 59, 113, 114, 122, 127, 135, 140, 143, 149, 151, 155, 161, 163, 164, 165, 168, 171, 172, 188, 192, 195, 196, 202, 203, 205, 206, 207, 213, 216, 217, 219, 222, 227, 229, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 305, 306, 307, 308, 309, 310, 311, 314, 316, 318, 319, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 418, 419, 423, 424, 425, 426, 429, 430, 432, 434, 438, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 463, 464, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 524, 525, 526, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 554, 555, 556, 558, 559, 563, 565, 566, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 584, 585, 586, 588, 589, 590, 591, 592, 593, 595, 596, 598, 599, 602, 603, 604, 607, 608, 609, 610, 612, 614, 615, 616, 617, 618, 619, 621, 622, 623, 625, 626, 627, 629, 630, 631, 632, 633, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 652, 653, 656, 657, 659, 660, 661, 662, 671, 672, 673, 674, 676, 678, 679, 680, 681, 682, 683, 684, 695, 696, 697, 698, 699, 700, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 725, 726, 727, 730, 731, 735, 736, 738, 739, 740, 741, 744, 745, 746, 751, 755, 756, 760, 764, 772, 781, 784, 788, 789, 790, 791, 796, 797, 799, 800, 801, 806, 807, 809, 810, 812, 813, 814, 815, 819, 820, 821, 824, 825, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 846, 847, 851, 852, 855, 867, 870, 871, 873, 888], "asish": [14, 888], "asishrocks95": 14, "decod": [14, 16, 19, 20, 21, 152, 165, 166, 168, 195, 197, 198, 245, 262, 265, 267, 268, 270, 276, 314, 330, 356, 365, 375, 442, 454, 481, 489, 494, 496, 506, 523, 529, 530, 532, 541, 544, 560, 564, 616, 622, 627, 708, 756, 864, 878, 888], "unsupervisedspatialfilt": [14, 878, 888], "fastica": [14, 77, 205, 563], "aud_l": [14, 15, 18, 42, 177, 231, 265, 266, 786, 789], "vis_l": [14, 15, 18, 42, 231], "ie": [14, 53, 110, 262, 272, 276, 280, 612, 724, 734, 756, 781, 814, 815], "pca_data": 14, "evokedarrai": [14, 15, 16, 18, 21, 84, 100, 109, 183, 188, 196, 222, 232, 266, 267, 482, 536, 537, 624, 626, 843, 878, 888], "window_titl": [14, 191, 267, 268, 790], "ica_data": 14, "ev1": [14, 888], "069": [14, 20, 66, 67], "decoding_unsupervised_spatial_filt": [14, 20], "erp": [15, 99, 101, 117, 128, 153, 154, 165, 172, 196, 199, 200, 202, 205, 207, 208, 245, 265, 267, 268, 270, 316, 355, 470, 481, 554, 563, 564, 622, 694, 780, 799, 801, 828, 854, 874, 876, 888], "concaten": [15, 71, 75, 81, 112, 137, 151, 168, 188, 191, 204, 206, 216, 242, 265, 266, 267, 268, 363, 364, 365, 413, 422, 478, 481, 482, 566, 582, 584, 595, 673, 798, 888], "rescal": [15, 64, 113, 114, 371, 372, 373, 581, 708, 711, 816, 878, 888], "fed": 15, "classification_report": [15, 137], "confusion_matrix": [15, 137], "minmaxscal": 15, "n_filter": 15, "penalti": [15, 40, 46, 245, 478, 479, 876], "l1": [15, 40, 478, 479], "pred": 15, "report": [15, 137, 165, 173, 174, 192, 210, 212, 213, 228, 242, 245, 262, 265, 266, 267, 269, 270, 274, 276, 290, 292, 437, 454, 481, 482, 487, 529, 552, 563, 581, 584, 600, 625, 724, 734, 738, 786, 803, 809, 845, 847, 863, 866, 867, 868, 870, 876, 878, 888], "target_nam": [15, 137], "cm_normal": 15, "astyp": [15, 73, 145, 160, 191, 195, 203, 216], "float": [15, 19, 31, 40, 66, 93, 115, 143, 144, 145, 149, 160, 169, 171, 188, 192, 195, 205, 216, 218, 227, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 291, 298, 299, 306, 307, 314, 323, 328, 330, 332, 343, 344, 345, 346, 349, 355, 356, 359, 360, 361, 362, 367, 373, 375, 413, 415, 417, 418, 419, 420, 421, 424, 425, 426, 430, 434, 437, 439, 441, 442, 448, 449, 451, 452, 453, 454, 456, 457, 458, 465, 471, 472, 476, 478, 479, 480, 481, 482, 491, 492, 500, 506, 515, 517, 518, 522, 523, 525, 526, 530, 531, 532, 533, 534, 536, 537, 541, 542, 543, 545, 546, 547, 562, 563, 564, 565, 566, 567, 568, 571, 572, 573, 574, 575, 576, 578, 580, 581, 582, 584, 585, 586, 587, 588, 589, 590, 592, 593, 595, 597, 599, 600, 601, 603, 604, 613, 638, 644, 645, 646, 647, 657, 658, 663, 664, 665, 666, 667, 668, 669, 670, 673, 675, 678, 679, 680, 682, 683, 686, 687, 690, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 726, 727, 732, 734, 735, 736, 737, 738, 739, 740, 744, 745, 746, 756, 760, 761, 769, 773, 775, 776, 780, 784, 785, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 806, 808, 809, 810, 811, 812, 814, 815, 816, 817, 818, 819, 820, 824, 841, 873, 888], "sum": [15, 28, 31, 41, 47, 61, 73, 82, 109, 113, 114, 117, 137, 144, 149, 161, 162, 168, 175, 183, 184, 202, 227, 228, 232, 242, 265, 266, 267, 268, 271, 272, 273, 276, 279, 280, 281, 287, 355, 360, 481, 482, 545, 563, 568, 660, 695, 696, 698, 699, 703, 709, 710, 712, 788, 867, 870, 873, 888], "imshow": [15, 16, 22, 71, 107, 115, 116, 127, 136, 146, 160, 172, 196, 227, 229, 230, 231, 232, 265, 266, 267, 268, 323, 708, 757, 759, 794, 817, 826], "nearest": [15, 26, 80, 116, 120, 136, 140, 145, 160, 168, 182, 216, 227, 262, 265, 266, 267, 268, 271, 272, 273, 274, 276, 278, 279, 280, 281, 283, 362, 367, 413, 420, 481, 482, 562, 563, 578, 703, 708, 709, 710, 711, 712, 744, 756, 773, 774, 780, 788, 795, 799, 808, 811, 816, 818, 870, 873, 888], "blue": [15, 54, 55, 80, 83, 112, 132, 135, 142, 151, 156, 172, 175, 177, 178, 181, 190, 207, 235, 236, 242, 263, 756, 771, 772, 780, 784, 843], "tick_mark": 15, "ytick": [15, 127, 195, 202, 227], "precis": [15, 47, 71, 90, 137, 157, 184, 192, 202, 203, 210, 216, 224, 259, 265, 266, 271, 298, 299, 454, 481, 482, 503, 595, 664, 666, 685, 735, 736, 738, 739, 863, 867, 873, 888], "recal": [15, 90, 137, 149, 150, 156, 217, 664, 665, 667, 670], "f1": [15, 71, 90, 137, 664], "support": [15, 34, 62, 123, 135, 136, 137, 138, 140, 142, 149, 150, 151, 165, 166, 170, 172, 181, 182, 185, 189, 190, 192, 219, 240, 241, 242, 257, 258, 259, 260, 262, 263, 265, 266, 267, 268, 272, 273, 275, 276, 278, 279, 280, 281, 298, 299, 306, 314, 320, 322, 342, 356, 361, 362, 371, 372, 373, 375, 394, 413, 420, 421, 429, 434, 443, 444, 446, 447, 451, 452, 453, 473, 480, 481, 482, 487, 492, 502, 505, 506, 507, 508, 512, 517, 521, 524, 525, 563, 574, 583, 584, 595, 617, 620, 621, 635, 642, 643, 652, 656, 657, 673, 689, 691, 700, 703, 708, 710, 711, 712, 756, 772, 774, 777, 780, 784, 785, 786, 790, 795, 803, 809, 810, 814, 819, 820, 821, 822, 825, 843, 845, 847, 850, 852, 853, 854, 859, 865, 867, 874, 888], "macro": [15, 137], "avg": [15, 137, 144, 227, 257, 735, 736], "attribut": [15, 30, 31, 35, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 61, 72, 79, 83, 86, 87, 116, 119, 120, 127, 140, 141, 143, 149, 150, 151, 166, 168, 169, 170, 172, 175, 176, 178, 179, 181, 182, 183, 201, 205, 206, 210, 211, 219, 222, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 304, 355, 367, 413, 414, 416, 417, 419, 420, 421, 423, 428, 431, 470, 471, 480, 481, 482, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 521, 562, 563, 564, 619, 625, 629, 635, 658, 693, 708, 709, 710, 711, 712, 743, 756, 758, 780, 789, 802, 837, 843, 847, 865, 888], "last": [15, 71, 82, 104, 127, 137, 140, 144, 146, 151, 160, 166, 183, 188, 196, 200, 201, 202, 203, 205, 206, 216, 219, 227, 228, 235, 242, 260, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 279, 280, 281, 288, 289, 304, 322, 344, 356, 364, 416, 423, 424, 426, 437, 451, 452, 453, 454, 480, 481, 482, 506, 523, 529, 558, 563, 566, 689, 694, 695, 696, 698, 699, 708, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 726, 737, 743, 756, 788, 793, 795, 800, 803, 810, 816, 843, 846, 864, 869, 870, 888], "nrow": [15, 45, 74, 120, 127, 146, 151, 176, 183, 211, 228, 267, 268, 413, 420, 563, 795, 799, 873, 888], "fitted_xdawn": 15, "get_channel_typ": [15, 140, 169, 265, 266, 267, 268, 270, 481, 482, 563, 708, 710, 711, 712, 888], "get_montag": [15, 115, 135, 136, 265, 266, 267, 268, 270, 481, 482, 888], "cur_class": 15, "cur_pattern": 15, "pattern_evok": 15, "time_format": [15, 21, 100, 109, 112, 145, 176, 218, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 563, 708, 711, 795, 803, 809, 888], "show_nam": [15, 68, 100, 120, 151, 170, 182, 228, 262, 265, 266, 267, 268, 274, 314, 413, 420, 481, 482, 562, 563, 578, 708, 710, 712, 773, 792, 795, 799, 806, 808, 811, 812, 816, 888], "h_pad": [15, 227], "w_pad": [15, 227], "bertrand": [15, 72, 79, 88, 196, 200, 245, 564, 572, 724, 734, 735, 738, 870, 888], "rivet": [15, 88, 196, 245, 564], "antoin": [15, 88, 196, 245, 564, 888], "souloumiac": [15, 88, 196, 245, 564], "virgini": [15, 88, 196, 245, 564], "attina": [15, 88, 196, 245, 564], "gibert": [15, 88, 196, 245, 564], "algorithm": [15, 27, 31, 71, 75, 78, 83, 84, 85, 88, 113, 126, 152, 156, 157, 162, 166, 196, 200, 202, 205, 210, 227, 232, 235, 236, 237, 245, 270, 271, 275, 311, 356, 412, 413, 427, 434, 478, 481, 530, 549, 563, 564, 566, 571, 573, 574, 580, 584, 586, 593, 595, 602, 603, 604, 668, 685, 690, 746, 854, 859, 863, 864, 865, 876, 888], "enhanc": [15, 88, 195, 196, 228, 232, 245, 419, 563, 564, 584, 695, 696, 698, 699, 847, 866, 873, 876], "2035": [15, 88, 180, 196, 245, 564], "2043": [15, 88, 169, 196, 245, 564], "2009": [15, 35, 58, 88, 117, 171, 196, 205, 227, 228, 245, 276, 476, 564, 578, 695, 696, 698, 699, 863, 873, 888], "2012869": [15, 88, 196, 245, 564], "hubert": [15, 88, 245, 564, 888], "cecotti": [15, 88, 245, 564], "emmanuel": [15, 88, 202, 245, 564], "mabi": [15, 88, 245, 564], "j\u00e9r\u00e9mie": [15, 88, 245, 564], "mattout": [15, 88, 245, 564], "theoret": [15, 88, 195, 196, 202, 222, 245, 413, 564, 843], "effici": [15, 42, 44, 88, 191, 202, 227, 245, 260, 265, 266, 267, 268, 425, 481, 482, 563, 564, 565, 668, 710, 712, 738, 739, 865, 888], "p300": [15, 88, 191, 196, 202, 245, 564, 737, 740], "proceed": [15, 33, 40, 46, 88, 166, 180, 204, 205, 224, 245, 291, 298, 479, 564, 737, 740, 863, 870], "eusipco": [15, 88, 245, 564, 737, 740], "1382": [15, 88, 245, 564], "1386": [15, 88, 245, 564], "barcelona": [15, 88, 245, 564], "url": [15, 88, 113, 151, 196, 245, 356, 382, 388, 390, 394, 405, 406, 476, 530, 564, 690, 737, 740, 847, 870, 888], "ieeexplor": [15, 88, 245, 564, 737, 740], "7073970": [15, 88, 245, 564], "decoding_xdawn_eeg": [15, 20], "cours": [16, 27, 32, 36, 38, 39, 41, 50, 56, 71, 75, 83, 90, 92, 95, 101, 113, 116, 135, 136, 142, 143, 151, 165, 166, 172, 175, 176, 177, 180, 186, 187, 196, 199, 202, 206, 207, 224, 232, 237, 245, 263, 264, 265, 266, 267, 268, 271, 272, 273, 276, 278, 279, 280, 281, 290, 292, 294, 297, 362, 414, 429, 447, 456, 466, 476, 478, 479, 481, 482, 517, 524, 529, 530, 544, 560, 625, 629, 635, 658, 672, 674, 675, 694, 708, 710, 711, 712, 755, 756, 780, 807, 814, 819, 843, 870, 873, 888], "techniqu": [16, 17, 20, 27, 59, 71, 74, 75, 76, 149, 151, 165, 166, 196, 199, 202, 204, 205, 207, 208, 210, 211, 212, 214, 224, 227, 245, 265, 266, 267, 268, 270, 375, 415, 424, 427, 449, 451, 452, 472, 481, 482, 560, 563, 622, 652, 843, 864, 870, 871, 876], "By": [16, 45, 71, 80, 83, 103, 104, 112, 135, 142, 145, 149, 150, 151, 158, 166, 168, 169, 170, 171, 172, 178, 188, 189, 200, 202, 205, 206, 207, 208, 210, 213, 216, 217, 219, 240, 257, 265, 266, 267, 268, 270, 271, 272, 273, 276, 279, 280, 281, 311, 328, 437, 454, 481, 482, 563, 566, 649, 673, 685, 701, 708, 709, 710, 711, 712, 782, 786, 794, 802, 809, 819, 870, 876, 888], "onto": [16, 18, 40, 74, 135, 136, 142, 155, 166, 170, 175, 180, 195, 200, 206, 207, 210, 223, 271, 273, 279, 281, 421, 591, 657, 685, 756, 772, 807, 826, 864, 870, 888], "surrog": [16, 157, 183, 207, 367, 429, 475, 888], "expos": [16, 133, 195, 231, 852, 888], "exhibit": [16, 242, 267, 268, 272, 273, 276, 279, 280, 281, 870], "evolut": [16, 113, 563, 803], "compute_em": [16, 878, 888], "audl": [16, 73], "visl": [16, 73], "wai": [16, 21, 27, 34, 43, 44, 75, 114, 115, 127, 140, 141, 142, 144, 149, 150, 151, 156, 160, 161, 166, 168, 169, 170, 171, 172, 177, 180, 190, 195, 200, 201, 202, 203, 205, 206, 207, 210, 212, 217, 218, 219, 222, 224, 227, 229, 230, 235, 237, 242, 245, 259, 260, 263, 264, 265, 266, 267, 268, 272, 273, 275, 276, 279, 280, 281, 356, 437, 447, 481, 482, 496, 522, 563, 565, 580, 587, 596, 618, 625, 657, 689, 690, 691, 697, 703, 708, 711, 722, 724, 734, 738, 756, 843, 845, 847, 850, 853, 862, 863, 864, 865, 866, 869, 871, 888], "n_epoch": [16, 114, 140, 146, 149, 166, 195, 196, 222, 232, 241, 260, 265, 266, 316, 413, 414, 415, 418, 419, 420, 421, 422, 424, 425, 427, 428, 451, 452, 564, 571, 710, 711, 713, 714, 715, 735, 736, 737, 780, 786, 787, 888], "n_time": [16, 19, 31, 64, 66, 68, 71, 76, 83, 114, 140, 146, 149, 159, 166, 190, 191, 195, 196, 205, 208, 216, 222, 224, 227, 231, 232, 235, 236, 237, 260, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 316, 350, 413, 414, 415, 418, 419, 420, 421, 422, 424, 426, 427, 429, 447, 449, 451, 452, 480, 481, 482, 502, 538, 564, 593, 658, 663, 664, 665, 666, 667, 668, 669, 670, 675, 682, 683, 684, 688, 694, 698, 699, 708, 710, 711, 712, 713, 714, 715, 726, 727, 731, 733, 735, 736, 737, 756, 780, 787, 788, 795, 816, 888], "993": [16, 18, 113, 195], "613": [16, 18, 19, 209, 232], "145": [16, 18, 45, 74, 76, 82, 149, 169, 209, 223, 227, 232], "106": [16, 35, 67, 73, 96, 97, 100, 121, 141, 145, 152, 166, 169, 172, 177, 180, 196, 201, 205, 209, 227, 232, 873], "x_transform": 16, "leav": [16, 137, 144, 172, 191, 199, 204, 216, 603, 845, 853, 855, 888], "recommend": [16, 41, 43, 44, 45, 71, 114, 155, 158, 161, 172, 188, 190, 192, 202, 203, 205, 206, 208, 210, 245, 260, 265, 266, 267, 268, 272, 276, 280, 283, 309, 311, 320, 332, 349, 356, 361, 362, 375, 412, 415, 421, 457, 476, 481, 482, 501, 512, 522, 530, 536, 543, 563, 568, 580, 595, 602, 618, 620, 624, 649, 656, 657, 694, 698, 699, 724, 734, 738, 765, 772, 814, 845, 847, 851, 852, 853, 866, 867, 870, 888], "stratifi": [16, 430], "tend": [16, 162, 178, 202, 204, 205, 227, 573, 867, 870], "overfit": [16, 88, 195], "cannot": [16, 59, 161, 169, 172, 188, 190, 192, 202, 203, 206, 208, 218, 237, 267, 268, 271, 272, 273, 275, 276, 279, 280, 281, 291, 343, 345, 435, 481, 482, 530, 563, 583, 584, 627, 657, 708, 756, 792, 814, 819, 835, 845, 847, 869, 888], "x_scale": 16, "futur": [16, 71, 171, 205, 219, 283, 419, 425, 453, 584, 847, 851, 865, 867, 869, 888], "filters_": [16, 18, 413, 414, 417, 420, 421, 431, 564, 888], "individu": [16, 26, 32, 37, 42, 43, 44, 101, 140, 142, 144, 155, 159, 166, 170, 172, 175, 200, 206, 207, 211, 218, 219, 227, 241, 242, 245, 260, 265, 266, 267, 268, 272, 273, 275, 276, 279, 280, 281, 298, 299, 330, 351, 413, 454, 481, 482, 531, 539, 540, 580, 603, 625, 686, 692, 700, 737, 740, 774, 786, 790, 794, 807, 809, 834, 847, 863, 864, 869, 870, 888], "argsort": [16, 31, 117, 128, 143, 181], "reorder": [16, 47, 117, 265, 266, 267, 268, 481, 482, 492, 708, 710, 711, 712, 787, 817, 888], "kei": [16, 94, 95, 127, 137, 140, 141, 142, 149, 150, 152, 166, 169, 170, 171, 181, 189, 206, 207, 216, 217, 219, 222, 258, 259, 260, 262, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 279, 280, 281, 284, 289, 298, 299, 304, 326, 327, 356, 360, 361, 367, 370, 371, 372, 373, 388, 394, 405, 413, 420, 422, 429, 437, 440, 442, 456, 457, 458, 461, 473, 476, 478, 479, 481, 482, 514, 518, 529, 530, 541, 553, 562, 563, 565, 578, 580, 581, 584, 606, 619, 621, 638, 651, 659, 660, 661, 673, 677, 693, 694, 695, 696, 698, 699, 708, 710, 711, 712, 743, 746, 756, 773, 778, 779, 780, 784, 786, 787, 788, 789, 790, 792, 794, 795, 796, 799, 808, 809, 811, 812, 814, 816, 818, 819, 820, 841, 847, 853, 864, 876, 888], "ems_av": 16, "u": [16, 19, 21, 47, 71, 104, 112, 115, 116, 137, 141, 144, 146, 149, 151, 160, 166, 171, 172, 180, 181, 188, 189, 195, 201, 202, 205, 206, 207, 213, 216, 217, 222, 245, 256, 257, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 447, 481, 482, 538, 847, 850, 855, 866, 869, 870, 873, 888], "schurger": [16, 196, 245, 414, 429], "thu": [16, 18, 43, 47, 55, 71, 103, 114, 140, 141, 149, 152, 170, 171, 175, 180, 182, 188, 192, 196, 202, 205, 207, 208, 210, 227, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 349, 415, 424, 436, 447, 449, 451, 481, 482, 530, 538, 541, 565, 724, 734, 736, 738, 739, 843, 847, 863, 864, 867, 870, 888], "equalize_event_count": [16, 149, 151, 166, 231, 232, 237, 265, 266, 711, 888], "103": [16, 35, 50, 112, 114, 121, 169, 196, 209, 227, 231, 232, 873], "112": [16, 45, 71, 115, 169, 171, 221, 227, 232, 245, 571, 873], "aaron": [16, 196, 245, 414, 429], "sebastien": [16, 196, 245, 414, 429, 888], "marti": [16, 196, 245, 414, 429, 888], "reveal": [16, 101, 113, 144, 170, 191, 196, 202, 242, 245, 414, 429, 737, 740], "132": [16, 35, 46, 151, 169, 196, 227, 231], "ems_filt": [16, 20], "continu": [17, 19, 20, 21, 27, 98, 102, 140, 142, 145, 148, 151, 161, 168, 188, 196, 197, 198, 199, 201, 202, 205, 206, 210, 214, 217, 221, 222, 227, 240, 245, 257, 259, 265, 266, 267, 268, 270, 347, 355, 359, 361, 365, 413, 419, 420, 421, 425, 453, 454, 481, 482, 494, 501, 512, 522, 523, 560, 562, 563, 566, 575, 613, 618, 692, 693, 694, 708, 710, 711, 712, 733, 780, 792, 799, 801, 843, 847, 863, 864, 869, 873, 876, 888], "spoc": [17, 20, 27, 245, 265, 270, 413, 421, 494, 523, 564, 878, 888], "xdawn": [17, 20, 27, 78, 85, 245, 262, 265, 267, 268, 270, 361, 375, 413, 417, 420, 428, 481, 560, 622, 787, 878, 888], "em": [17, 20, 27, 196, 265, 267, 268, 270, 429, 481, 560, 622, 878, 888], "recept": [17, 20, 27, 165, 197, 198, 245, 251, 270, 314, 330, 375, 419, 425, 453, 482, 818, 864], "spectro": [17, 20, 27, 114, 165, 197, 198, 265, 267, 268, 270, 419, 421, 425, 453, 494, 523, 727], "ssd": [17, 20, 27, 265, 267, 268, 270, 494, 523, 727, 878, 888], "mvpa": [18, 165, 197, 198, 262, 265, 267, 268, 270, 276, 356, 413, 414, 416, 417, 420, 422, 423, 428, 430, 431, 454, 530, 541, 564, 627, 756, 888], "neurophysiolog": [18, 19, 844], "interpret": [18, 19, 103, 142, 151, 159, 160, 188, 196, 202, 203, 218, 229, 231, 232, 237, 245, 260, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 279, 280, 281, 283, 305, 312, 315, 329, 331, 356, 357, 359, 361, 371, 415, 416, 417, 419, 423, 426, 429, 430, 431, 434, 451, 452, 456, 469, 471, 472, 481, 482, 489, 496, 504, 506, 521, 524, 525, 530, 536, 537, 546, 547, 562, 563, 565, 568, 575, 576, 579, 580, 581, 584, 587, 591, 601, 603, 610, 656, 659, 660, 661, 664, 673, 676, 694, 695, 696, 697, 698, 699, 703, 708, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 726, 727, 735, 736, 737, 738, 739, 756, 780, 786, 787, 788, 790, 791, 792, 793, 800, 805, 807, 810, 847, 850, 851, 858, 870, 888], "romain": [18, 888], "trachel": [18, 888], "trachelr": 18, "sample_path": [18, 124, 135, 136], "meg_data": [18, 140], "reshap": [18, 137, 195, 227, 228, 231, 235, 237, 419, 428], "scaler": [18, 878, 888], "coef": [18, 19, 195, 196, 431], "revers": [18, 19, 73, 143, 146, 172, 188, 199, 201, 202, 204, 205, 207, 216, 262, 267, 268, 272, 273, 276, 278, 279, 280, 281, 790, 792, 794, 795, 814, 819, 888], "sequenti": [18, 140, 150, 222, 263, 264, 265, 266, 267, 268, 271, 272, 273, 275, 276, 279, 280, 281, 283, 337, 356, 357, 359, 361, 416, 423, 426, 429, 430, 456, 469, 471, 481, 482, 521, 524, 525, 536, 537, 546, 547, 568, 575, 576, 656, 659, 660, 661, 673, 695, 696, 697, 698, 699, 708, 710, 711, 712, 713, 714, 715, 716, 717, 718, 726, 727, 735, 736, 737, 738, 739, 746, 756, 775, 780, 788, 791, 810, 814, 819, 820, 843], "kai": [18, 19, 144, 245, 417, 419, 431, 437], "g\u00f6rgen": [18, 19, 245, 417, 419, 431], "dylan": [18, 19, 83, 245, 417, 419, 431, 563], "hayn": [18, 19, 245, 417, 419, 431], "benjamin": [18, 19, 245, 413, 417, 419, 431], "blankertz": [18, 19, 245, 413, 417, 419, 431], "felix": [18, 19, 112, 245, 417, 419, 431, 888], "bie\u00dfmann": [18, 19, 245, 417, 419, 431], "On": [18, 19, 71, 72, 166, 168, 200, 202, 205, 206, 242, 245, 257, 283, 417, 419, 431, 442, 462, 563, 572, 845, 847, 852, 853, 855, 865, 870, 888], "multivari": [18, 19, 90, 94, 137, 162, 195, 196, 245, 356, 417, 419, 431, 662, 864, 867, 888], "110": [18, 19, 21, 35, 41, 42, 56, 81, 82, 112, 158, 169, 209, 227, 232, 245, 417, 419, 431, 568], "067": [18, 19, 245, 417, 419, 431], "382": [18, 20, 81, 85, 91, 209, 227, 232, 245, 668], "linear_model_pattern": [18, 20], "reproduc": [19, 45, 71, 93, 151, 195, 217, 298, 515, 563, 593, 612, 660, 661, 662, 671, 672, 674, 695, 696, 697, 698, 699, 847, 888], "lalor": [19, 195, 245, 419, 864], "mtrf": [19, 171, 195, 245, 419, 878, 888], "receptivefield": [19, 195, 425, 878, 888], "speech": [19, 195, 245, 419, 599, 737, 740, 864], "envelop": [19, 82, 113, 114, 115, 136, 146, 196, 265, 266, 267, 268, 420, 481, 482, 568, 724, 734, 738, 864, 888], "try": [19, 31, 71, 75, 83, 140, 141, 143, 151, 156, 158, 161, 162, 167, 171, 176, 180, 192, 202, 203, 204, 205, 206, 207, 216, 223, 224, 242, 275, 283, 430, 450, 463, 489, 496, 563, 578, 772, 829, 845, 846, 847, 852, 865, 867, 868, 888], "known": [19, 44, 88, 112, 114, 144, 151, 156, 160, 165, 180, 225, 226, 227, 262, 265, 266, 267, 268, 269, 270, 271, 276, 356, 366, 448, 454, 481, 482, 489, 496, 512, 529, 530, 544, 603, 627, 630, 664, 672, 675, 690, 756, 843, 859, 864, 870, 888], "literatur": [19, 144, 242, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 708, 711, 843], "simpli": [19, 43, 135, 143, 144, 146, 149, 170, 171, 188, 200, 201, 205, 207, 210, 217, 218, 227, 241, 242, 260, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 298, 299, 481, 482, 580, 581, 708, 711, 845, 847, 850, 855, 864, 870, 888], "chri": [19, 114, 136, 195, 196, 245, 888], "holdgraf": [19, 114, 115, 136, 195, 196, 245, 419, 888], "choldgraf": [19, 114, 115, 136, 195], "nicola": [19, 47, 245, 668, 888], "barascud": [19, 888], "sphinx_gallery_thumbnail_numb": [19, 120, 196], "scipi": [19, 31, 97, 111, 156, 171, 172, 195, 202, 206, 224, 227, 228, 229, 232, 235, 236, 242, 257, 262, 265, 266, 267, 268, 272, 273, 274, 276, 277, 278, 279, 280, 281, 283, 320, 331, 360, 362, 413, 415, 420, 424, 448, 449, 451, 452, 453, 456, 481, 482, 562, 563, 571, 578, 656, 688, 690, 695, 696, 698, 699, 701, 702, 708, 710, 711, 712, 724, 727, 734, 756, 773, 788, 795, 799, 808, 810, 811, 816, 818, 846, 847, 867, 869, 872, 885, 888], "loadmat": [19, 195], "collect": [19, 71, 127, 151, 157, 168, 172, 183, 184, 190, 191, 192, 200, 210, 242, 245, 258, 262, 265, 266, 267, 268, 323, 413, 420, 440, 481, 482, 562, 563, 693, 708, 710, 712, 770, 780, 788, 795, 799, 811, 816, 818, 843, 847, 862, 863, 870, 873, 888], "listen": [19, 864, 869, 876], "know": [19, 40, 127, 142, 156, 160, 169, 172, 189, 192, 200, 202, 205, 206, 207, 218, 231, 267, 268, 298, 299, 356, 360, 361, 371, 372, 373, 413, 420, 456, 457, 476, 478, 479, 538, 541, 648, 796, 847, 850, 853, 854, 865, 867, 870, 888], "primarili": [19, 71, 170, 199, 202, 415, 481, 482, 609, 778, 843, 854], "speech_data": [19, 195], "down": [19, 21, 71, 112, 151, 161, 192, 195, 196, 202, 206, 218, 219, 229, 231, 262, 263, 265, 266, 267, 268, 274, 275, 413, 420, 453, 481, 482, 562, 563, 593, 695, 696, 698, 699, 708, 710, 712, 756, 784, 786, 787, 788, 792, 795, 799, 808, 809, 811, 816, 845, 847, 869, 888], "biosemi128": [19, 170], "rawarrai": [19, 64, 66, 68, 71, 76, 83, 114, 159, 188, 190, 205, 208, 222, 266, 268, 501, 843, 878, 888], "ln": [19, 92, 724, 734, 738, 853, 870], "800": [19, 33, 43, 51, 56, 60, 81, 83, 126, 127, 134, 135, 144, 155, 156, 160, 166, 175, 177, 192, 196, 202, 209, 235, 272, 273, 276, 279, 280, 281, 472, 756, 814, 819], "alpha": [19, 21, 28, 35, 39, 40, 44, 46, 49, 50, 59, 71, 96, 97, 110, 112, 113, 116, 135, 137, 146, 151, 172, 177, 181, 190, 195, 206, 212, 227, 229, 232, 237, 241, 242, 261, 265, 266, 267, 268, 271, 272, 273, 275, 276, 279, 280, 281, 356, 419, 425, 471, 476, 478, 479, 481, 482, 546, 629, 686, 692, 695, 696, 698, 699, 708, 710, 712, 756, 772, 775, 788, 792, 804, 810, 814, 819, 888], "ln1": 19, "lw": [19, 39, 144, 172, 181, 195, 210, 212, 224, 724, 734, 888], "frameon": [19, 127], "float64": [19, 64, 66, 68, 71, 76, 83, 92, 94, 114, 159, 167, 190, 205, 208, 222, 480, 688, 870], "7677": 19, "7676": 19, "119": [19, 123, 135, 160, 169, 227, 231, 888], "938": [19, 232], "construct": [19, 42, 70, 103, 140, 144, 162, 168, 178, 180, 183, 184, 188, 191, 196, 202, 205, 206, 207, 210, 224, 227, 241, 242, 265, 266, 267, 268, 272, 276, 278, 280, 281, 285, 286, 298, 315, 362, 437, 448, 449, 451, 452, 481, 482, 498, 578, 619, 652, 657, 658, 694, 703, 714, 717, 769, 775, 809, 814, 820, 843, 863, 870, 888], "relationship": [19, 22, 143, 160, 192, 204, 227, 419, 425, 457, 724, 734, 735, 736, 738, 739, 843, 864, 869, 870], "rf": [19, 195, 419], "feature_nam": [19, 195, 419, 888], "corrcoef": [19, 22, 47, 419], "extra": [19, 81, 82, 145, 160, 166, 169, 170, 191, 207, 216, 223, 262, 265, 266, 267, 268, 274, 307, 308, 314, 337, 339, 413, 414, 420, 432, 481, 482, 562, 563, 578, 708, 710, 712, 752, 773, 780, 788, 790, 792, 795, 796, 799, 806, 808, 810, 811, 812, 816, 818, 843, 851, 855, 888], "inclus": [19, 123, 140, 143, 185, 257, 265, 266, 275, 278, 382, 405, 406, 458, 476, 478, 479, 492, 541, 558, 563, 584, 700, 709, 711, 888], "n_delai": [19, 419], "held": [19, 80, 171, 195, 869], "coef_": [19, 195, 417, 419, 562], "n_output": [19, 419, 425], "n_featur": [19, 195, 196, 413, 414, 415, 417, 418, 419, 420, 421, 424, 425, 428, 564, 593, 688], "delays_": [19, 195, 419], "mean_coef": 19, "mean_scor": 19, "ix_ch": 19, "sometim": [19, 27, 61, 83, 112, 115, 117, 127, 128, 140, 144, 156, 161, 168, 169, 189, 190, 200, 202, 203, 205, 207, 208, 227, 262, 265, 266, 267, 268, 270, 274, 413, 420, 481, 482, 497, 562, 563, 578, 613, 619, 708, 710, 712, 773, 780, 788, 795, 799, 808, 811, 816, 818, 843, 847, 855, 863, 867, 870, 888], "well": [19, 22, 32, 37, 47, 71, 79, 116, 120, 136, 137, 140, 143, 144, 150, 152, 160, 162, 165, 166, 169, 172, 175, 182, 184, 188, 189, 191, 195, 199, 200, 202, 204, 205, 206, 207, 208, 210, 212, 214, 216, 222, 224, 232, 240, 242, 245, 265, 266, 267, 268, 275, 276, 322, 344, 356, 371, 413, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 429, 437, 452, 453, 481, 482, 563, 564, 577, 583, 595, 602, 708, 724, 726, 734, 737, 738, 739, 740, 786, 788, 802, 843, 845, 847, 853, 859, 864, 865, 867, 869, 870, 872, 876, 888], "recreat": [19, 127, 140, 202, 779], "time_plot": 19, "180": [19, 24, 35, 81, 92, 111, 156, 169, 178, 191, 199, 201, 203, 205, 209, 212, 227, 231, 272, 273, 276, 279, 280, 281, 447, 761, 888], "highlight": [19, 21, 90, 95, 114, 120, 150, 151, 172, 175, 176, 203, 205, 210, 218, 262, 263, 265, 266, 267, 268, 275, 413, 420, 481, 482, 562, 708, 710, 712, 773, 784, 788, 790, 795, 811, 816, 818, 847, 888], "max_coef": 19, "pcolormesh": [19, 114, 195, 888], "shade": [19, 171, 195, 206, 765, 780, 821, 822, 888], "gouraud": [19, 195], "ncoeffici": 19, "setp": [19, 195, 203], "get_xticklabel": [19, 195], "2c": [19, 870], "ix_plot": 19, "argmin": [19, 120, 144, 242], "vlim": [19, 71, 80, 100, 109, 141, 142, 204, 207, 211, 232, 242, 262, 265, 266, 267, 268, 274, 413, 420, 481, 482, 562, 563, 708, 710, 712, 773, 788, 795, 799, 808, 811, 816, 818, 888], "nfor": 19, "anoth": [19, 31, 45, 71, 87, 95, 126, 141, 143, 144, 145, 149, 151, 155, 156, 161, 167, 171, 180, 188, 201, 202, 205, 206, 210, 212, 217, 218, 219, 227, 232, 265, 266, 267, 268, 271, 272, 273, 275, 276, 277, 279, 280, 281, 283, 316, 356, 357, 359, 361, 362, 416, 423, 426, 429, 430, 439, 456, 469, 471, 481, 482, 510, 521, 524, 525, 536, 537, 546, 547, 549, 568, 575, 576, 592, 656, 659, 660, 661, 673, 679, 695, 696, 697, 698, 699, 710, 712, 713, 714, 715, 716, 717, 718, 726, 727, 735, 736, 737, 738, 739, 744, 745, 746, 777, 788, 791, 809, 810, 843, 845, 847, 855, 864, 869, 870, 873, 888], "case": [19, 44, 58, 71, 74, 90, 94, 95, 103, 114, 120, 123, 127, 138, 140, 143, 144, 149, 155, 161, 162, 165, 168, 169, 171, 172, 180, 181, 185, 188, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 216, 217, 218, 227, 228, 229, 235, 237, 240, 242, 245, 259, 260, 262, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 278, 279, 280, 281, 289, 298, 299, 304, 310, 320, 331, 355, 356, 360, 361, 371, 372, 373, 374, 413, 420, 430, 437, 442, 453, 456, 457, 464, 471, 476, 478, 479, 481, 482, 489, 496, 504, 512, 517, 522, 529, 530, 531, 532, 533, 534, 541, 552, 558, 566, 578, 593, 612, 618, 635, 649, 652, 668, 673, 694, 695, 708, 710, 711, 712, 720, 726, 736, 739, 743, 756, 774, 780, 787, 789, 792, 793, 796, 814, 843, 847, 855, 867, 869, 870, 888], "aim": [19, 137, 158, 177, 223, 224, 305, 357, 358, 359], "exploit": [19, 88, 888], "context": [19, 42, 116, 171, 172, 175, 196, 202, 227, 265, 266, 267, 268, 271, 272, 273, 275, 276, 279, 280, 281, 283, 356, 357, 359, 361, 413, 416, 423, 426, 429, 430, 456, 469, 471, 481, 482, 521, 524, 525, 531, 536, 537, 546, 547, 552, 563, 568, 575, 576, 656, 659, 660, 661, 673, 695, 696, 697, 698, 699, 710, 712, 713, 714, 715, 716, 717, 718, 726, 727, 735, 736, 737, 738, 739, 750, 751, 786, 788, 791, 803, 809, 810, 827, 828, 853, 869, 888], "treat": [19, 21, 151, 172, 196, 207, 208, 227, 231, 265, 266, 269, 275, 492, 494, 554, 695, 696, 698, 699, 711, 780, 798, 888], "independ": [19, 71, 75, 83, 109, 112, 151, 158, 162, 166, 179, 180, 181, 196, 199, 201, 202, 204, 205, 206, 210, 218, 227, 245, 265, 266, 267, 268, 272, 273, 275, 276, 279, 280, 281, 360, 416, 423, 428, 481, 482, 563, 564, 571, 578, 584, 593, 595, 690, 692, 695, 696, 698, 699, 702, 735, 736, 738, 739, 799, 801, 803, 854, 863, 864, 867, 870, 888], "therefor": [19, 71, 94, 136, 142, 146, 151, 158, 162, 169, 170, 189, 196, 200, 201, 202, 204, 205, 208, 210, 213, 227, 242, 265, 266, 275, 320, 322, 437, 481, 497, 501, 563, 613, 619, 620, 624, 847, 851, 863, 869, 870], "qualiti": [19, 121, 157, 166, 172, 201, 202, 205, 207, 219, 242, 245, 260, 265, 266, 267, 268, 481, 482, 521, 563, 580, 599, 800, 847, 863, 869, 870, 876, 888], "expens": [19, 165, 166, 172, 603, 871, 876, 888], "especi": [19, 55, 71, 112, 120, 127, 143, 149, 162, 166, 169, 199, 200, 202, 204, 205, 209, 216, 242, 267, 268, 276, 481, 482, 563, 585, 603, 695, 696, 698, 699, 796, 843, 847, 850, 863, 867, 870, 888], "lag": [19, 27, 78, 85, 195, 224, 245, 265, 267, 268, 270, 419, 425, 439, 481, 560, 622, 888], "footcit": [19, 387, 847], "crosseetal2016": 19, "earlier": [19, 145, 167, 171, 191, 199, 202, 216, 267, 268, 298, 299, 356, 360, 361, 371, 372, 373, 413, 420, 455, 456, 457, 476, 478, 479, 541, 796, 851, 888], "wherea": [19, 81, 136, 143, 156, 158, 168, 175, 196, 202, 203, 204, 210, 227, 259, 265, 266, 284, 298, 299, 481, 482, 489, 786, 809, 815, 843, 870, 874, 888], "chang": [19, 31, 44, 45, 114, 127, 136, 142, 145, 149, 151, 156, 158, 161, 167, 170, 171, 172, 175, 176, 178, 184, 188, 189, 191, 192, 195, 200, 205, 206, 207, 211, 212, 217, 218, 219, 223, 227, 230, 235, 237, 242, 245, 257, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 298, 299, 306, 309, 311, 314, 322, 337, 342, 343, 345, 349, 362, 364, 389, 413, 420, 434, 442, 447, 448, 450, 452, 454, 456, 457, 466, 472, 476, 478, 479, 481, 482, 502, 505, 506, 517, 521, 524, 525, 541, 551, 552, 554, 555, 556, 562, 563, 565, 578, 584, 591, 593, 595, 617, 625, 627, 643, 652, 654, 656, 657, 673, 700, 703, 708, 710, 711, 712, 725, 751, 756, 766, 772, 773, 774, 780, 781, 784, 785, 786, 787, 788, 790, 792, 795, 796, 797, 799, 801, 803, 806, 808, 809, 810, 811, 812, 814, 816, 818, 819, 820, 821, 826, 834, 848, 853, 855, 863, 866, 867, 870, 873, 874], "affect": [19, 49, 72, 81, 141, 142, 149, 151, 167, 190, 199, 200, 202, 203, 205, 206, 208, 210, 242, 245, 258, 260, 265, 266, 267, 268, 272, 275, 276, 280, 367, 405, 454, 455, 481, 482, 502, 580, 625, 660, 661, 736, 739, 809, 814, 847, 863, 870, 888], "obvious": [19, 158, 210, 242], "cf": [19, 145, 155, 724, 734, 738], "next": [19, 54, 55, 58, 114, 116, 121, 135, 136, 141, 145, 150, 151, 156, 157, 161, 166, 171, 175, 177, 179, 188, 190, 199, 201, 205, 207, 211, 216, 217, 218, 227, 241, 242, 262, 265, 266, 267, 268, 274, 356, 412, 413, 420, 481, 482, 562, 563, 578, 708, 710, 711, 712, 737, 740, 773, 774, 795, 799, 808, 811, 816, 845, 847, 855, 870, 873, 888], "section": [19, 75, 116, 136, 137, 140, 142, 144, 149, 150, 151, 156, 165, 166, 167, 171, 172, 175, 188, 189, 190, 192, 199, 201, 202, 203, 205, 208, 210, 216, 217, 242, 260, 262, 263, 264, 265, 266, 267, 268, 274, 275, 277, 298, 299, 314, 394, 413, 420, 434, 440, 448, 450, 481, 482, 498, 510, 562, 563, 578, 584, 596, 708, 710, 712, 773, 788, 795, 799, 808, 811, 816, 818, 847, 851, 863, 869, 870, 871, 873, 888], "haufeetal2014": 19, "sr": [19, 213, 864, 870], "1e4": 19, "mean_pattern": 19, "max_pattern": 19, "8384": [19, 888], "1177": [19, 66, 101, 228, 245, 396, 864], "130": [19, 81, 82, 83, 158, 169, 170, 209, 231, 232, 245, 340, 888], "1874": 19, "2433": [19, 159, 169], "2830": 19, "357": [19, 81, 169, 196, 202, 209, 227, 232], "3123": 19, "432": [19, 72, 85, 171, 209, 227], "3338": 19, "506": [19, 177, 227, 232], "3501": 19, "580": [19, 81, 196, 209], "3715": 19, "726": [19, 160, 196, 232], "3820": 19, "3903": 19, "877": [19, 205, 232, 245, 578], "3982": 19, "944": [19, 195, 232], "3997": 19, "1008": 19, "3992": 19, "1076": 19, "4009": 19, "1131": [19, 32, 34, 169, 224], "3961": 19, "82it": [19, 33, 34, 103, 108, 196, 209, 227, 228, 231, 232, 235], "1192": [19, 196], "3944": 19, "1252": 19, "3927": 19, "1323": [19, 100, 169, 195], "3962": 19, "1397": 19, "4006": 19, "4048": 19, "1541": [19, 34, 169, 201, 209, 224], "4069": 19, "1613": [19, 100, 169, 227], "4095": 19, "1688": [19, 32, 33, 34, 46, 113, 195, 241], "4134": 19, "1759": [19, 210, 245, 595], "4150": 19, "1832": [19, 169], "4174": 19, "1902": [19, 195], "4186": 19, "1973": 19, "4201": 19, "2047": 19, "4227": 19, "2123": [19, 145, 169], "4256": 19, "2199": 19, "4284": 19, "2273": 19, "4302": 19, "2346": 19, "4314": 19, "2417": 19, "4321": 19, "2491": 19, "4338": 19, "2559": [19, 35], "4329": 19, "2636": 19, "4354": 19, "2710": 19, "4368": 19, "2784": 19, "4381": 19, "2855": 19, "4382": 19, "2931": [19, 90], "4400": 19, "3009": 19, "4426": 19, "3084": 19, "4440": 19, "3150": 19, "4421": 19, "3202": 19, "4355": 19, "3254": 19, "4292": 19, "3307": 19, "4235": 19, "3358": 19, "4175": 19, "3409": 19, "4120": 19, "3460": 19, "3512": 19, "4024": 19, "3563": 19, "3979": 19, "3615": 19, "3939": 19, "3683": 19, "3954": 19, "3759": [19, 227], "3994": 19, "3831": 19, "4019": 19, "3906": 19, "4054": 19, "3981": 19, "4084": 19, "4052": 19, "4100": 19, "4127": 19, "4131": 19, "4206": 19, "4170": 19, "4281": [19, 96], "4195": 19, "4217": [19, 96], "4429": 19, "4238": 19, "4505": 19, "4262": 19, "4579": 19, "4278": 19, "4650": 19, "4285": 19, "4723": 19, "4297": 19, "4784": 19, "4272": 19, "4850": 19, "4911": 19, "4974": 19, "4221": 19, "5035": 19, "4199": 19, "5096": 19, "4179": 19, "5160": 19, "4167": 19, "5226": 19, "4162": 19, "5289": 19, "4148": 19, "5353": [19, 337], "4137": 19, "5426": 19, "4158": 19, "5507": 19, "5584": 19, "4230": 19, "5654": 19, "5712": 19, "4203": 19, "5766": 19, "4159": 19, "5830": 19, "4147": 19, "5894": 19, "4140": 19, "5970": 19, "4169": 19, "6045": 19, "4194": 19, "6124": 19, "4231": 19, "6201": 19, "4259": 19, "6280": 19, "6360": 19, "4326": 19, "6435": 19, "4342": 19, "6507": 19, "4348": 19, "6564": 19, "4308": 19, "6637": 19, "4320": 19, "6690": 19, "4269": 19, "6764": 19, "6842": 19, "4312": [19, 96], "6917": 19, "4328": 19, "6999": 19, "4365": 19, "7077": 19, "4389": 19, "7155": 19, "4411": [19, 59], "7235": 19, "4438": 19, "7310": 19, "4448": [19, 245, 737, 740], "7385": 19, "4457": 19, "7461": 19, "4470": 19, "7540": 19, "4491": 19, "7620": 19, "4513": 19, "7697": 19, "4526": 19, "7776": 19, "4544": 19, "7856": 19, "4565": 19, "7932": 19, "4574": 19, "8009": 19, "4584": 19, "8089": 19, "4603": 19, "8169": 19, "4621": 19, "8251": 19, "4644": 19, "8336": 19, "4676": 19, "4294": 19, "1859": 19, "2658": 19, "227": [19, 112, 142, 148, 151, 169, 227, 231, 232, 245, 391, 864], "3139": 19, "3370": 19, "363": [19, 42, 56, 81, 169, 209, 227, 232], "3505": 19, "436": [19, 245], "3666": 19, "3773": 19, "584": [19, 196, 232], "3901": 19, "660": [19, 35, 81, 169, 174, 196, 232], "3999": 19, "736": [19, 232], "4082": 19, "811": [19, 232], "4142": 19, "4089": 19, "926": [19, 232], "4037": 19, "990": [19, 81, 209], "4029": 19, "1052": [19, 32, 33, 34], "4012": 19, "1121": [19, 34, 169, 224], "4032": 19, "1176": 19, "3980": 19, "1245": [19, 35], "4003": [19, 870], "4067": 19, "1401": 19, "4124": 19, "1479": 19, "1554": 19, "4211": 19, "1632": [19, 169], "4255": 19, "1705": [19, 177, 180], "4274": 19, "1779": 19, "1852": 19, "1926": 19, "4331": 19, "4346": [19, 96], "2077": 19, "4370": 19, "2149": 19, "4377": 19, "2217": 19, "4367": 19, "2281": 19, "4344": 19, "2347": 19, "4330": 19, "2425": 19, "4362": 19, "2503": 19, "2575": 19, "4392": 19, "2642": [19, 100, 169], "4378": 19, "2699": 19, "2748": 19, "2804": 19, "4213": 19, "2874": 19, "4220": 19, "2948": 19, "4242": 19, "3021": 19, "4258": 19, "3095": 19, "4276": 19, "3176": 19, "4318": 19, "3259": 19, "3333": 19, "3399": 19, "3476": 19, "4384": 19, "3553": 19, "4405": 19, "3631": 19, "4430": 19, "3703": 19, "4433": [19, 49], "3774": 19, "4431": 19, "3842": 19, "4422": 19, "3920": 19, "4443": 19, "4403": 19, "4408": [19, 59, 184, 191], "4129": 19, "4428": 19, "4469": 19, "4487": 19, "4476": 19, "4489": 19, "4543": 19, "4372": 19, "4599": 19, "4324": 19, "4652": 19, "4271": 19, "4704": 19, "4216": 19, "4774": 19, "4223": 19, "4248": [19, 96], "4928": 19, "5005": 19, "4303": 19, "5071": 19, "5145": 19, "5224": 19, "4340": 19, "5298": 19, "4353": 19, "5374": 19, "5450": 19, "5528": 19, "5592": 19, "4386": 19, "5667": 19, "4399": 19, "5740": 19, "4407": 19, "5815": 19, "5891": 19, "4435": 19, "5966": 19, "4446": 19, "6042": 19, "4459": 19, "6120": 19, "4478": 19, "6195": 19, "4488": 19, "6271": 19, "4499": 19, "6347": 19, "4511": 19, "6422": 19, "4520": 19, "6497": 19, "4527": 19, "6572": 19, "4533": 19, "6648": 19, "6722": 19, "4547": 19, "6798": 19, "4555": 19, "6875": 19, "4567": 19, "6950": 19, "4572": 19, "7025": 19, "4575": 19, "7101": 19, "4581": 19, "7176": 19, "4583": 19, "7251": 19, "4585": 19, "7322": 19, "4578": 19, "7389": 19, "4557": 19, "7456": 19, "4538": 19, "7527": 19, "7598": [19, 176], "7673": 19, "4532": 19, "7749": 19, "7825": 19, "4551": 19, "7902": 19, "4562": 19, "7977": 19, "8047": 19, "8118": 19, "4546": 19, "8192": [19, 52, 182, 185, 412], "4550": 19, "8270": 19, "4566": 19, "8348": 19, "4580": 19, "1399": 19, "2229": [19, 35], "2737": [19, 195], "267": [19, 143, 168, 169, 209, 245, 862], "3032": 19, "3191": 19, "404": [19, 81, 209, 227, 232], "3395": 19, "467": [19, 68, 227, 232], "3467": 19, "540": [19, 81, 196, 224, 232, 245, 298, 299], "3602": 19, "3713": 19, "684": [19, 195, 196, 228], "3792": 19, "760": [19, 81, 209, 232], "3886": 19, "826": [19, 232], "887": [19, 196, 219, 221, 232], "3892": 19, "947": [19, 35, 245, 476], "3879": 19, "1012": [19, 169], "1083": 19, "3935": 19, "1150": [19, 196], "1214": [19, 196], "1285": 19, "3986": 19, "1355": 19, "4015": 19, "1425": 19, "4038": 19, "1496": 19, "4065": 19, "1566": 19, "4083": 19, "1635": [19, 227], "1698": [19, 109], "4079": 19, "4061": 19, "1822": [19, 169], "1887": [19, 101, 228, 245, 396, 864], "4053": 19, "1951": 19, "4049": [19, 205, 245, 563], "2017": [19, 60, 84, 151, 205, 245, 303, 395, 563, 603, 668, 673], "4051": 19, "2070": 19, "2115": 19, "3932": 19, "2156": 19, "3848": 19, "2194": 19, "3757": [19, 180, 181], "2231": [19, 34, 169, 224], "3668": 19, "2267": 19, "3585": [19, 876], "2328": 19, "3596": 19, "2401": 19, "3649": 19, "2473": 19, "3695": 19, "2541": [19, 34, 169, 201, 224], "3725": 19, "2579": 19, "3648": 19, "2616": 19, "3571": 19, "2655": 19, "3504": [19, 227], "2692": 19, "3438": 19, "2765": 19, "3499": 19, "2837": 19, "3552": 19, "2883": 19, "3513": 19, "2934": 19, "3492": 19, "3002": [19, 195], "3531": 19, "3075": [19, 195], "3584": 19, "3149": 19, "3637": 19, "3220": 19, "3680": 19, "3286": 19, "3700": 19, "3349": 19, "3712": 19, "3411": 19, "3719": 19, "3472": 19, "3723": 19, "3535": 19, "3734": 19, "3600": [19, 870], "3749": 19, "3663": 19, "3758": 19, "3729": 19, "3776": 19, "3797": 19, "3798": 19, "3853": 19, "3781": 19, "3891": 19, "3704": 19, "3952": 19, "3709": 19, "4010": 19, "3702": 19, "4059": 19, "4116": 19, "3658": 19, "4151": 19, "3581": 19, "3508": 19, "4236": 19, "3487": 19, "4296": 19, "3498": 19, "4335": 19, "3442": 19, "3378": 19, "4419": 19, "3359": [19, 162, 245, 867], "3344": 19, "4518": 19, "3330": 19, "4593": 19, "3398": 19, "4629": 19, "3340": 19, "4686": 19, "4746": 19, "3368": 19, "4797": 19, "3357": 19, "4847": 19, "3343": 19, "4898": 19, "3335": 19, "4949": 19, "3327": 19, "5001": [19, 870], "3320": [19, 245], "5051": 19, "3308": 19, "5099": 19, "3292": 19, "5147": 19, "3277": 19, "5195": 19, "3261": 19, "5243": 19, "3247": 19, "5290": 19, "3231": 19, "5338": 19, "3217": 19, "5386": 19, "3203": 19, "5447": 19, "3233": 19, "5525": 19, "3314": 19, "5596": 19, "5665": 19, "3413": 19, "5734": 19, "3455": 19, "5809": 19, "3514": 19, "5874": 19, "3540": 19, "5932": 19, "3544": 19, "5980": 19, "3515": 19, "6025": 19, "3480": 19, "6085": 19, "3491": 19, "6151": 19, "3522": 19, "6224": 19, "3573": 19, "6299": 19, "3628": 19, "6377": 19, "3688": 19, "3730": 19, "6518": 19, "3755": 19, "6592": 19, "6666": 19, "3838": 19, "6738": 19, "3871": 19, "6813": 19, "3911": 19, "6885": 19, "6954": 19, "3955": 19, "7026": 19, "4016": 19, "7175": 19, "4044": 19, "4077": 19, "7323": 19, "4098": [19, 24, 43, 159, 160, 182, 863], "7394": 19, "4113": 19, "7469": 19, "4139": 19, "7545": 19, "4168": 19, "7622": 19, "7699": 19, "4229": 19, "7774": 19, "4252": 19, "7846": 19, "4264": [19, 337], "7917": 19, "7987": 19, "4275": 19, "8063": 19, "8137": 19, "4310": [19, 26], "8213": 19, "8283": [19, 888], "8363": 19, "4361": 19, "3794": 19, "sens": [19, 61, 71, 142, 160, 202, 207, 212, 242, 267, 268, 298, 299, 356, 360, 361, 371, 372, 373, 413, 420, 456, 457, 476, 478, 479, 541, 778, 796, 843, 847, 869, 870], "actual": [19, 23, 27, 41, 43, 61, 64, 81, 115, 128, 144, 151, 158, 160, 162, 168, 170, 172, 175, 182, 183, 184, 185, 189, 190, 195, 200, 201, 202, 203, 218, 227, 229, 232, 235, 236, 237, 242, 258, 275, 447, 543, 563, 843, 847, 864, 870, 888], "valid_samples_": [19, 419], "grei": [19, 113, 142, 242, 267, 268, 708, 792, 888], "attempt": [19, 76, 195, 199, 229, 265, 266, 267, 268, 273, 279, 281, 377, 481, 482, 488, 498, 563, 638, 652, 819, 841, 843, 869, 888], "reflect": [19, 32, 61, 71, 120, 135, 141, 149, 151, 160, 161, 177, 181, 199, 204, 205, 207, 216, 265, 266, 267, 268, 298, 299, 356, 360, 361, 371, 372, 373, 413, 420, 451, 452, 453, 456, 457, 476, 478, 479, 481, 482, 541, 625, 688, 795, 796, 809, 843, 847, 863, 870, 888], "most": [19, 28, 45, 47, 71, 74, 82, 83, 104, 108, 109, 114, 120, 127, 135, 140, 144, 149, 150, 151, 152, 155, 156, 165, 167, 169, 171, 172, 181, 188, 192, 199, 202, 204, 206, 207, 209, 210, 211, 212, 216, 227, 231, 240, 257, 265, 266, 267, 268, 270, 271, 276, 279, 314, 332, 357, 358, 359, 379, 380, 381, 384, 385, 386, 388, 392, 393, 396, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 442, 448, 453, 456, 476, 515, 521, 550, 563, 573, 593, 595, 612, 660, 661, 662, 671, 672, 673, 674, 695, 696, 697, 698, 699, 746, 751, 756, 774, 795, 843, 846, 847, 851, 852, 853, 865, 867, 869, 870, 871, 874, 878, 888], "toward": [19, 43, 46, 54, 55, 71, 103, 160, 180, 192, 201, 231, 242, 245, 455, 457, 545, 566, 870, 888], "directli": [19, 34, 43, 94, 95, 138, 143, 144, 149, 165, 170, 171, 172, 188, 190, 196, 200, 203, 204, 205, 206, 207, 218, 235, 241, 242, 257, 260, 262, 263, 264, 265, 266, 267, 268, 270, 272, 274, 276, 277, 280, 281, 314, 315, 320, 324, 361, 373, 413, 420, 449, 478, 481, 482, 483, 484, 489, 502, 562, 563, 578, 580, 625, 652, 708, 710, 712, 758, 773, 775, 786, 788, 795, 799, 808, 811, 814, 816, 818, 820, 865, 870, 878, 888], "obtain": [19, 38, 42, 43, 61, 90, 94, 95, 137, 146, 151, 155, 157, 158, 170, 172, 175, 177, 178, 184, 185, 202, 204, 210, 216, 217, 224, 227, 229, 232, 241, 263, 265, 266, 267, 268, 269, 272, 276, 280, 281, 299, 311, 344, 346, 356, 358, 362, 375, 419, 421, 463, 464, 475, 478, 479, 481, 482, 489, 496, 501, 515, 530, 538, 549, 563, 567, 574, 593, 612, 620, 624, 630, 657, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 674, 675, 678, 682, 695, 696, 697, 698, 699, 709, 736, 739, 756, 775, 791, 814, 815, 820, 843, 863, 864, 868, 869, 870, 888], "via": [19, 135, 136, 140, 142, 144, 145, 149, 150, 157, 168, 169, 170, 171, 172, 175, 180, 192, 199, 200, 201, 205, 206, 216, 219, 227, 228, 231, 235, 237, 240, 241, 245, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 275, 277, 278, 280, 281, 284, 298, 299, 311, 320, 324, 330, 331, 377, 424, 447, 449, 451, 452, 465, 472, 481, 482, 494, 563, 689, 695, 696, 698, 699, 710, 711, 712, 758, 772, 776, 777, 786, 790, 791, 795, 803, 809, 834, 843, 845, 847, 849, 850, 855, 867, 888], "procedur": [19, 113, 144, 161, 162, 188, 204, 205, 210, 227, 229, 230, 231, 237, 242, 245, 258, 260, 265, 266, 267, 268, 349, 356, 361, 421, 481, 482, 563, 564, 578, 580, 593, 603, 625, 695, 843, 864, 867, 870, 873, 888], "straightforward": [19, 103, 189, 202, 224, 870, 888], "sign": [19, 28, 38, 39, 47, 151, 205, 227, 230, 235, 267, 268, 272, 273, 276, 279, 280, 281, 337, 447, 455, 476, 478, 479, 516, 530, 531, 532, 533, 534, 593, 695, 696, 698, 699, 847, 870, 888], "strength": [19, 22, 35, 94, 151, 175, 205, 273, 279, 281, 578, 870], "direct": [19, 61, 80, 123, 150, 156, 160, 161, 168, 178, 180, 185, 200, 206, 207, 209, 242, 245, 257, 263, 265, 266, 272, 273, 275, 276, 279, 280, 281, 291, 298, 299, 435, 447, 455, 481, 482, 492, 530, 573, 590, 660, 710, 712, 756, 786, 798, 809, 819, 843, 847, 853, 867, 869, 870, 888], "140": [19, 22, 34, 70, 81, 82, 85, 112, 123, 156, 169, 206, 207, 209, 232, 245, 568, 870], "125": [19, 24, 35, 127, 137, 143, 156, 160, 169, 170, 190, 194, 202, 209, 232, 340], "nbetween": 19, "giovanni": [19, 195, 245, 419, 864], "di": [19, 40, 143, 195, 245, 419, 864], "liberto": [19, 195, 245, 419, 864], "adam": [19, 135, 136, 195, 245, 419, 864, 875, 888], "bednar": [19, 195, 245, 419, 864], "edmund": [19, 195, 245, 419, 864], "fnhum": [19, 151, 195, 245, 419, 568, 864], "00604": [19, 195, 245, 419, 864], "471": [19, 20, 202, 242, 244, 245], "receptive_field_mtrf": [19, 20], "517": [20, 232], "auto_examples_decod": 20, "ssd_spatial_filt": [20, 21], "410": [20, 21, 59, 72, 81, 83, 129, 199, 203, 207, 209, 219, 227, 232, 240, 245, 479], "08": [20, 34, 40, 42, 45, 50, 58, 59, 74, 84, 85, 94, 103, 107, 109, 112, 130, 151, 160, 166, 176, 177, 178, 179, 180, 183, 184, 194, 196, 202, 207, 209, 216, 223, 224, 227, 229, 230, 231, 232, 245], "131": [20, 102, 169, 196, 232, 337], "retain": [21, 112, 149, 178, 200, 201, 216, 227, 260, 265, 266, 275, 278, 437, 563, 695, 696, 698, 699, 799, 845, 876, 888], "oscillatori": [21, 113, 224, 241, 245, 298, 299, 724, 734, 735, 738], "propos": [21, 242, 578, 584, 847], "surround": [21, 82, 101, 242, 421, 568, 590, 604, 703, 847], "victoria": [21, 888], "peterson": [21, 888], "victoriapeterson09": 21, "freqs_sig": 21, "freqs_nois": 21, "sort_by_spectral_ratio": [21, 421], "filt_params_sign": [21, 421], "l_trans_bandwidth": [21, 113, 114, 202, 211, 265, 266, 267, 268, 415, 424, 449, 451, 481, 482, 599, 888], "filt_params_nois": [21, 421], "72000": [21, 82, 191], "196608": 21, "262144": 21, "327680": 21, "393216": 21, "458752": 21, "67108864": 21, "67174400": 21, "134742016": 21, "136314880": 21, "268435456": 21, "825": [21, 83, 114, 232, 245, 563], "086": [21, 245, 665, 670], "preserv": [21, 34, 155, 156, 160, 166, 167, 195, 200, 205, 216, 227, 231, 260, 265, 266, 267, 268, 412, 443, 444, 445, 446, 481, 482, 580, 591, 708, 710, 711, 712, 870, 888], "ratio": [21, 58, 88, 127, 144, 166, 196, 202, 205, 207, 224, 229, 230, 231, 232, 245, 272, 273, 276, 279, 280, 281, 288, 421, 545, 546, 547, 563, 564, 648, 666, 667, 708, 711, 759, 816, 863, 870, 888], "accord": [21, 156, 169, 170, 192, 195, 216, 258, 265, 266, 267, 268, 419, 421, 442, 481, 482, 489, 492, 496, 498, 558, 596, 613, 652, 658, 864, 870, 873, 888], "either": [21, 32, 43, 142, 149, 150, 151, 166, 167, 168, 170, 171, 172, 190, 199, 203, 208, 210, 217, 218, 223, 227, 242, 257, 260, 262, 265, 266, 267, 268, 269, 272, 273, 274, 276, 278, 279, 280, 281, 289, 304, 323, 340, 356, 413, 420, 421, 430, 440, 448, 471, 474, 481, 482, 512, 513, 515, 521, 525, 528, 529, 562, 563, 565, 574, 578, 584, 595, 625, 635, 652, 654, 659, 660, 661, 673, 693, 694, 708, 709, 710, 712, 720, 730, 735, 736, 738, 739, 743, 756, 772, 773, 777, 780, 787, 788, 795, 799, 800, 808, 809, 810, 811, 814, 816, 818, 819, 820, 824, 847, 853, 863, 864, 867, 873, 888], "multipli": [21, 188, 202, 227, 270, 272, 273, 276, 279, 280, 281, 300, 421, 447, 530, 536, 708, 870, 873], "eq": [21, 421, 724, 734, 738, 870], "c_n": [21, 870], "reli": [21, 169, 201, 242, 314, 847, 863, 867, 870, 873, 876, 888], "suggest": [21, 26, 141, 144, 162, 201, 202, 203, 204, 205, 207, 265, 266, 290, 292, 756, 846, 851, 852, 867, 869, 888], "pariet": [21, 49, 642, 756], "ssd_sourc": [21, 421], "psd": [21, 27, 69, 75, 92, 105, 106, 111, 133, 137, 140, 166, 172, 196, 199, 203, 212, 219, 222, 240, 241, 262, 265, 266, 267, 268, 270, 271, 275, 276, 361, 418, 454, 481, 482, 520, 525, 529, 536, 537, 541, 544, 560, 614, 629, 656, 710, 712, 715, 718, 726, 727, 750, 756, 772, 788, 810, 824, 864, 888], "psd_array_welch": [21, 222, 240, 265, 266, 267, 268, 421, 481, 482, 710, 712, 878, 888], "n_fft": [21, 108, 109, 114, 133, 212, 222, 240, 242, 265, 266, 267, 268, 421, 481, 482, 536, 709, 710, 712, 713, 715, 716, 718, 727, 737, 740, 810, 888], "4096": [21, 182, 269], "spec_ratio": [21, 421], "alreadi": [21, 30, 31, 34, 35, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 61, 71, 72, 75, 79, 86, 87, 94, 95, 115, 116, 119, 120, 127, 135, 142, 144, 145, 149, 150, 151, 158, 159, 160, 162, 166, 169, 170, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 188, 189, 199, 201, 202, 205, 206, 207, 210, 216, 222, 242, 257, 265, 266, 267, 268, 272, 273, 275, 276, 277, 279, 280, 281, 298, 299, 309, 311, 330, 356, 360, 361, 369, 371, 372, 373, 374, 382, 405, 406, 413, 420, 447, 448, 456, 457, 476, 478, 479, 481, 482, 523, 541, 574, 575, 580, 625, 645, 646, 709, 728, 777, 780, 796, 838, 847, 848, 849, 864, 867, 870, 871, 876, 888], "sorter": 21, "get_spectral_ratio": [21, 421], "spectral": [21, 27, 32, 33, 34, 69, 72, 105, 106, 112, 113, 114, 117, 133, 137, 142, 166, 172, 196, 201, 209, 222, 224, 241, 245, 262, 265, 266, 267, 268, 270, 271, 276, 290, 291, 292, 298, 361, 418, 421, 454, 457, 481, 482, 520, 525, 529, 536, 537, 541, 544, 560, 563, 614, 622, 629, 656, 696, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 720, 725, 726, 727, 735, 736, 738, 739, 750, 756, 772, 782, 788, 810, 824, 864, 876, 888], "orang": [21, 151, 156, 190, 211, 232, 237, 813], "frac": [21, 149, 202, 203, 210, 227, 276, 538, 668, 721, 724, 734, 735, 736, 738, 739, 870], "p_f": 21, "p_": [21, 870], "sf": [21, 227], "384": [21, 35, 81, 144, 171, 232], "spectrum": [21, 75, 83, 103, 104, 108, 112, 133, 137, 140, 143, 165, 166, 172, 199, 203, 205, 207, 212, 219, 222, 224, 241, 242, 243, 244, 245, 265, 266, 267, 268, 275, 454, 481, 482, 563, 710, 729, 751, 799, 801, 810, 843, 873, 876, 878, 888], "lowest": [21, 242, 260, 265, 266, 267, 268, 271, 343, 580, 685, 708, 709, 711, 780, 790], "below50": 21, "bandfilt": 21, "loglog": 21, "fill_between": [21, 113, 151, 237, 241, 242], "10000": [21, 84, 111, 442, 476, 593, 673, 697], "green": [21, 48, 49, 50, 81, 116, 151, 156, 181, 190, 207, 242, 267, 268, 756, 777, 790, 807, 813, 888], "enjoi": [21, 242], "situat": [21, 204, 208, 222, 224, 275, 321, 440, 563, 847, 851, 869, 888], "chunk": [21, 80, 84, 137, 140, 146, 184, 210, 359, 361, 442, 481, 482, 563, 584, 658, 863, 888], "overlap": [21, 71, 84, 99, 109, 140, 146, 151, 166, 168, 191, 201, 210, 217, 218, 240, 245, 259, 265, 266, 267, 268, 328, 361, 415, 424, 437, 449, 451, 452, 471, 481, 482, 522, 523, 536, 549, 564, 580, 581, 595, 675, 694, 727, 756, 786, 810, 843, 888], "ssd_epoch": 21, "pattern_epoch": 21, "1251": [21, 195], "1661": 21, "guido": [21, 245, 421], "nolt": [21, 245, 421], "gabriel": [21, 40, 204, 245, 421, 478, 562, 610], "curio": [21, 245, 421], "reliabl": [21, 103, 169, 203, 245, 421, 563], "basi": [21, 146, 162, 196, 245, 421, 434, 574, 577, 584, 595, 867, 870, 888], "spatio": [21, 46, 59, 165, 184, 195, 196, 227, 228, 238, 239, 245, 265, 267, 268, 270, 276, 277, 278, 362, 419, 421, 436, 477, 478, 481, 529, 530, 544, 560, 595, 622, 635, 637, 663, 664, 665, 666, 667, 668, 669, 670, 680, 682, 683, 684, 689, 691, 698, 699, 700, 756, 870, 888], "1528": [21, 245, 421], "1535": [21, 245, 421], "057": [21, 56, 59, 140, 142, 149, 169, 224, 245, 421], "produc": [22, 38, 82, 83, 117, 119, 128, 144, 161, 172, 179, 183, 190, 192, 202, 204, 210, 227, 242, 245, 257, 260, 263, 265, 271, 275, 278, 305, 306, 329, 332, 353, 357, 358, 359, 361, 368, 390, 471, 473, 481, 482, 515, 521, 522, 525, 536, 549, 563, 566, 572, 575, 576, 584, 591, 593, 612, 618, 622, 642, 657, 659, 660, 661, 662, 671, 672, 673, 674, 676, 695, 696, 697, 698, 699, 703, 745, 756, 772, 773, 809, 837, 863, 869, 870, 873, 888], "abl": [22, 90, 135, 137, 144, 159, 161, 165, 172, 204, 205, 210, 224, 235, 275, 452, 481, 482, 563, 799, 845, 847, 864, 867, 870, 876, 888], "region": [22, 38, 41, 47, 49, 94, 95, 128, 135, 137, 150, 155, 181, 190, 202, 203, 227, 228, 241, 242, 263, 265, 266, 267, 268, 278, 326, 415, 424, 449, 451, 452, 465, 466, 467, 471, 481, 482, 515, 612, 657, 668, 756, 786, 809, 812, 843, 863, 876, 888], "source_spac": [22, 278, 878, 888], "compute_distance_to_sensor": [22, 878, 888], "source_estim": [22, 27, 36, 56, 271, 276, 629, 635, 755], "surf_ori": [22, 47, 48, 49, 54, 55, 69, 158, 178, 223, 269, 366, 541, 888], "leadfield": [22, 41, 158, 163, 165, 172, 298, 299, 300, 888], "7498": [22, 31, 35, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 58, 59, 60, 61, 69, 90, 92, 93, 94, 95, 131, 172, 175, 177, 178, 179, 181, 196, 223, 224], "combin": [22, 24, 29, 30, 31, 34, 35, 37, 40, 41, 42, 44, 47, 48, 49, 51, 54, 55, 58, 59, 60, 69, 87, 90, 92, 93, 94, 95, 101, 112, 126, 128, 131, 132, 137, 140, 141, 142, 145, 150, 151, 155, 166, 168, 170, 175, 177, 178, 179, 180, 181, 182, 188, 190, 191, 195, 196, 199, 207, 208, 210, 211, 216, 218, 224, 227, 229, 232, 235, 237, 245, 257, 260, 265, 266, 267, 268, 271, 272, 273, 276, 278, 279, 280, 281, 291, 298, 299, 307, 308, 316, 356, 357, 358, 359, 364, 373, 390, 413, 418, 420, 432, 435, 472, 481, 482, 497, 500, 523, 524, 530, 533, 536, 537, 539, 540, 563, 575, 576, 619, 629, 635, 642, 679, 708, 710, 711, 712, 715, 718, 726, 756, 772, 780, 787, 788, 795, 798, 816, 847, 870, 873, 876, 888], "local": [22, 26, 27, 33, 34, 35, 36, 40, 41, 42, 46, 47, 48, 49, 51, 54, 55, 56, 58, 59, 60, 69, 71, 84, 90, 92, 94, 109, 113, 116, 120, 150, 151, 152, 155, 158, 166, 171, 175, 179, 180, 184, 187, 191, 196, 207, 211, 224, 245, 262, 263, 264, 265, 266, 267, 268, 269, 270, 274, 276, 280, 298, 299, 301, 303, 314, 318, 332, 344, 346, 355, 356, 360, 361, 366, 371, 372, 373, 375, 379, 380, 381, 382, 384, 385, 386, 388, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 420, 434, 454, 456, 457, 470, 476, 478, 479, 481, 482, 488, 524, 525, 529, 530, 531, 541, 545, 562, 563, 571, 578, 585, 590, 616, 625, 627, 640, 649, 652, 656, 665, 668, 670, 672, 708, 710, 712, 748, 756, 765, 772, 773, 781, 784, 788, 793, 795, 796, 799, 808, 811, 815, 816, 818, 824, 843, 845, 848, 853, 854, 856, 867, 870, 876, 888], "grad_map": 22, "sensitivity_map": [22, 26, 131, 158, 878], "mag_map": [22, 26], "eeg_map": 22, "204": [22, 34, 74, 77, 93, 113, 131, 146, 158, 166, 167, 168, 169, 172, 183, 184, 187, 196, 199, 200, 201, 206, 207, 209, 210, 216, 217, 218, 219, 224, 232, 241, 888], "gain": [22, 24, 31, 41, 66, 90, 93, 94, 95, 109, 158, 180, 202, 224, 298, 299, 448, 457, 797, 804, 870, 888], "picks_meg": 22, "picks_eeg": 22, "sharex": [22, 45, 74, 90, 113, 195, 207, 242], "dipol": [22, 26, 27, 28, 31, 34, 35, 36, 39, 40, 41, 42, 46, 51, 56, 59, 60, 61, 69, 83, 84, 92, 93, 94, 109, 119, 152, 155, 158, 165, 166, 169, 177, 179, 180, 182, 183, 184, 185, 186, 187, 191, 204, 222, 224, 245, 262, 264, 265, 266, 267, 268, 269, 270, 273, 276, 279, 280, 281, 298, 299, 300, 301, 303, 304, 313, 344, 355, 366, 375, 392, 434, 454, 456, 458, 476, 477, 478, 479, 481, 482, 524, 529, 530, 532, 541, 550, 560, 614, 616, 617, 625, 627, 640, 642, 656, 660, 661, 665, 668, 670, 672, 674, 708, 710, 711, 712, 756, 765, 772, 773, 783, 784, 815, 819, 824, 843, 854, 856, 859, 863, 870, 873, 878, 888], "fontsiz": [22, 37, 112, 120, 127, 144, 176, 210, 815], "fig_2": [22, 172], "hist": [22, 71, 131, 144, 211], "ravel": [22, 111, 113, 117, 131, 195, 202, 228], "brain_sen": 22, "add_text": [22, 43, 47, 48, 49, 50, 54, 55, 175, 177, 179, 756], "font_siz": [22, 43, 47, 48, 49, 50, 54, 55, 175, 177, 179, 756], "02108201": 22, "32186553": 22, "minimum": [22, 31, 57, 71, 79, 83, 136, 140, 149, 151, 162, 166, 168, 171, 177, 179, 180, 201, 202, 207, 223, 235, 245, 260, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 294, 295, 296, 297, 298, 299, 343, 345, 346, 361, 446, 448, 449, 451, 452, 454, 456, 457, 481, 482, 525, 530, 531, 532, 533, 534, 536, 537, 541, 543, 545, 546, 547, 565, 566, 571, 580, 581, 584, 655, 665, 668, 670, 673, 701, 708, 713, 714, 715, 716, 717, 718, 719, 737, 740, 756, 780, 794, 810, 813, 843, 854, 856, 863, 873, 888], "euclidean": [22, 271, 276, 278, 545, 668, 671, 674, 676, 679], "maxdep": 22, "vertno": [22, 43, 48, 49, 50, 158, 175, 178, 223, 235, 236, 237, 276, 278, 279, 873], "depths_map": 22, "brain_dep": 22, "like": [22, 26, 27, 31, 32, 34, 35, 36, 40, 41, 42, 47, 56, 59, 61, 71, 82, 83, 101, 109, 112, 127, 135, 136, 140, 141, 142, 143, 144, 149, 150, 151, 155, 156, 160, 161, 162, 166, 167, 168, 169, 171, 172, 175, 177, 181, 182, 188, 189, 190, 192, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 216, 217, 218, 219, 222, 227, 231, 242, 257, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 289, 302, 304, 305, 306, 309, 310, 311, 314, 315, 323, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 345, 349, 353, 354, 355, 356, 362, 367, 368, 369, 370, 374, 387, 388, 390, 392, 413, 420, 434, 436, 437, 442, 448, 454, 456, 463, 465, 466, 469, 471, 472, 473, 474, 475, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 519, 521, 524, 525, 529, 530, 532, 541, 544, 548, 549, 550, 552, 553, 562, 563, 568, 578, 581, 586, 590, 591, 592, 593, 595, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646, 653, 656, 657, 659, 660, 661, 662, 671, 672, 673, 674, 677, 685, 689, 691, 694, 695, 696, 697, 698, 699, 703, 704, 706, 707, 708, 709, 710, 711, 712, 724, 728, 729, 730, 734, 741, 743, 744, 748, 750, 753, 756, 764, 772, 773, 774, 780, 784, 786, 788, 790, 792, 794, 795, 796, 799, 803, 806, 808, 809, 810, 811, 812, 814, 816, 818, 819, 820, 829, 830, 831, 832, 833, 834, 835, 836, 838, 839, 840, 841, 842, 843, 845, 846, 847, 848, 850, 851, 852, 853, 854, 855, 863, 865, 867, 869, 870, 873, 888], "corr": [22, 257], "gradiomt": 22, "815476": 22, "sensitivii": 22, "highest": [22, 176, 205, 260, 263, 265, 266, 267, 268, 271, 457, 481, 482, 580, 685, 708, 709, 711, 784, 796, 870], "close": [22, 61, 71, 97, 107, 111, 117, 120, 127, 140, 142, 144, 149, 151, 158, 160, 172, 191, 200, 201, 204, 205, 207, 208, 211, 219, 224, 227, 232, 263, 265, 266, 267, 268, 271, 344, 360, 382, 436, 456, 472, 473, 481, 482, 563, 581, 586, 679, 703, 710, 712, 724, 734, 738, 756, 762, 763, 784, 786, 803, 809, 812, 847, 851, 859, 867, 870, 873, 888], "decreas": [22, 55, 112, 202, 213, 224, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 413, 434, 481, 482, 563, 704, 708, 711, 735, 736, 738, 739, 756, 870, 888], "rapidli": [22, 212], "inreas": 22, "confirm": [22, 47, 71, 171, 190, 201, 205, 847, 870], "003": [22, 25, 32, 33, 73, 121, 128, 140, 141, 142, 145, 149, 166, 167, 169, 172, 201, 202, 204, 205, 207, 216, 224, 245], "forward_sensitivity_map": [22, 25], "coregistr": [23, 27, 81, 156, 160, 161, 163, 164, 165, 181, 263, 270, 275, 278, 306, 310, 368, 374, 391, 432, 473, 486, 521, 525, 591, 646, 676, 703, 745, 756, 772, 824, 861, 863, 876, 878, 888], "displai": [23, 24, 25, 27, 44, 47, 77, 112, 116, 125, 140, 143, 151, 156, 158, 160, 162, 166, 192, 205, 208, 216, 219, 228, 232, 257, 258, 262, 265, 266, 267, 268, 269, 271, 272, 273, 276, 278, 279, 280, 281, 314, 366, 481, 482, 521, 560, 562, 563, 627, 648, 676, 708, 710, 712, 756, 757, 771, 772, 780, 785, 786, 787, 789, 790, 791, 792, 794, 795, 796, 797, 800, 801, 806, 809, 810, 811, 812, 814, 815, 817, 819, 820, 843, 845, 846, 850, 853, 859, 867, 870, 873, 876, 888], "cerebellum": [23, 25, 27, 41, 278, 656, 657, 772, 824], "volum": [23, 25, 27, 31, 36, 44, 56, 59, 72, 135, 136, 155, 156, 158, 160, 166, 172, 176, 180, 210, 245, 257, 262, 263, 267, 269, 270, 272, 273, 276, 277, 278, 279, 280, 281, 305, 311, 314, 362, 447, 458, 466, 467, 476, 478, 479, 517, 525, 529, 530, 540, 541, 542, 544, 590, 592, 616, 625, 635, 638, 647, 656, 657, 680, 683, 700, 703, 744, 745, 746, 756, 772, 814, 819, 820, 824, 841, 843, 862, 863, 870, 876, 888], "morph": [23, 25, 27, 36, 40, 56, 134, 136, 155, 160, 177, 181, 235, 236, 237, 257, 267, 269, 270, 271, 272, 276, 277, 278, 279, 280, 281, 362, 469, 486, 525, 529, 530, 544, 549, 550, 559, 560, 592, 625, 627, 632, 635, 636, 637, 648, 657, 744, 745, 746, 756, 814, 820, 843, 863, 864, 873, 888], "its": [24, 71, 76, 94, 126, 135, 137, 140, 141, 143, 145, 150, 156, 158, 160, 166, 168, 169, 170, 171, 172, 175, 180, 183, 189, 190, 196, 199, 200, 202, 203, 205, 206, 207, 208, 210, 216, 217, 219, 227, 232, 240, 242, 245, 262, 263, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 314, 413, 416, 420, 427, 428, 447, 454, 478, 479, 480, 481, 482, 489, 496, 562, 563, 578, 664, 674, 694, 695, 696, 698, 699, 708, 710, 711, 712, 724, 727, 734, 746, 773, 780, 784, 787, 788, 795, 799, 807, 808, 809, 811, 814, 816, 818, 819, 843, 845, 846, 847, 851, 853, 863, 865, 867, 869, 870, 888], "freesurf": [24, 32, 33, 34, 38, 41, 43, 44, 47, 116, 135, 136, 156, 158, 161, 163, 164, 165, 171, 172, 175, 182, 191, 245, 261, 263, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 305, 309, 310, 311, 314, 362, 367, 368, 369, 374, 387, 389, 390, 392, 395, 412, 432, 447, 465, 466, 467, 469, 471, 472, 473, 474, 475, 486, 515, 517, 519, 521, 549, 590, 591, 612, 628, 629, 630, 631, 637, 638, 639, 640, 651, 656, 657, 671, 674, 685, 703, 704, 706, 748, 755, 756, 767, 772, 774, 784, 814, 819, 820, 824, 837, 838, 841, 843, 851, 853, 854, 859, 864, 867, 888], "alan": [24, 245, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 708, 711, 888], "leggitt": [24, 888], "ucsf": 24, "setup_source_spac": [24, 41, 109, 155, 158, 160, 178, 191, 278, 637, 657, 678, 682, 863, 870, 878, 888], "setup_volume_source_spac": [24, 41, 50, 156, 158, 160, 208, 272, 273, 276, 278, 279, 280, 281, 447, 517, 637, 656, 870, 878, 888], "aseg_fnam": 24, "aseg": [24, 41, 135, 176, 181, 263, 272, 273, 276, 279, 280, 281, 447, 465, 466, 517, 657, 756, 843, 888], "mgz": [24, 30, 41, 44, 50, 156, 158, 160, 161, 176, 180, 181, 182, 257, 272, 273, 276, 278, 279, 280, 281, 305, 309, 310, 311, 392, 447, 466, 517, 657, 774, 820, 843, 867, 870, 888], "surf": [24, 26, 41, 81, 109, 118, 135, 155, 156, 157, 158, 159, 160, 161, 172, 176, 181, 223, 227, 257, 263, 271, 276, 278, 280, 281, 309, 463, 464, 515, 520, 550, 615, 638, 671, 674, 705, 742, 756, 774, 784, 831, 863, 864, 870], "add_dist": [24, 41, 109, 158, 257, 656, 678, 682, 870, 888], "lh_surf": 24, "cortex": [24, 26, 31, 37, 41, 43, 52, 53, 54, 55, 58, 61, 94, 109, 116, 126, 135, 145, 151, 158, 166, 178, 181, 190, 195, 205, 211, 224, 245, 272, 273, 276, 278, 279, 280, 281, 390, 419, 599, 612, 674, 756, 814, 819, 843, 863, 864, 870, 873, 888], "volume_label": [24, 41, 272, 273, 276, 278, 279, 280, 281, 447, 517, 657, 888], "lh_cereb": 24, "sphere_unit": [24, 158, 657, 888], "octahedron": [24, 41, 109, 156, 158, 160, 257, 272, 276, 280, 656, 814], "subdivis": [24, 41, 109, 158], "octahedr": [24, 41, 109, 158, 412], "vertex": [24, 26, 41, 48, 49, 50, 83, 90, 109, 156, 157, 158, 160, 161, 175, 177, 180, 181, 223, 224, 227, 237, 271, 272, 273, 276, 277, 278, 279, 280, 281, 283, 298, 299, 447, 469, 471, 515, 539, 540, 549, 563, 629, 630, 641, 642, 647, 674, 675, 676, 681, 684, 685, 700, 703, 704, 705, 755, 756, 870, 873, 888], "lh": [24, 26, 28, 29, 37, 38, 39, 41, 43, 47, 48, 49, 54, 55, 61, 69, 90, 92, 94, 95, 104, 108, 109, 116, 126, 127, 134, 135, 155, 156, 157, 158, 159, 160, 161, 172, 175, 176, 178, 179, 182, 183, 191, 223, 224, 236, 237, 257, 261, 271, 272, 273, 276, 279, 280, 281, 469, 515, 612, 630, 635, 645, 756, 814, 819, 838, 870], "triangl": [24, 26, 41, 52, 109, 156, 157, 158, 160, 161, 175, 178, 223, 271, 278, 412, 641, 677, 681, 684, 705, 870, 873], "neighbor": [24, 26, 41, 109, 142, 156, 157, 158, 161, 200, 223, 227, 229, 242, 324, 331, 343, 455, 505, 591, 678, 679, 680, 682, 683, 688, 695, 696, 698, 699, 705, 869, 870, 888], "geometri": [24, 41, 61, 71, 109, 158, 161, 183, 184, 210, 245, 257, 392, 413, 457, 638, 756, 843, 863, 888], "triangul": [24, 41, 52, 109, 158, 175, 228, 229, 257, 278, 320, 638, 641, 836, 841, 870, 873, 888], "155407": [24, 26, 41, 43, 52, 158, 160], "156866": [24, 26, 41, 43, 52, 158, 160], "132651": 24, "57769": 24, "50733": 24, "401": [24, 81, 209, 212, 232], "voxel": [24, 41, 44, 50, 156, 158, 160, 208, 227, 245, 275, 278, 280, 281, 362, 590, 701, 702, 746, 756, 774, 820, 870, 888], "neighborhood": [24, 41, 50, 156, 158, 208, 278], "005000": [24, 158], "001000": [24, 41, 50, 158], "556177": 24, "16777216": 24, "nonzero": [24, 211, 870], "coord_fram": [24, 109, 118, 123, 124, 125, 135, 136, 156, 157, 158, 159, 169, 170, 178, 182, 183, 184, 190, 210, 263, 269, 270, 278, 314, 327, 332, 434, 485, 514, 573, 574, 584, 595, 756, 772, 784, 873], "export": [24, 30, 41, 112, 115, 140, 147, 148, 149, 155, 165, 168, 172, 189, 190, 220, 259, 265, 266, 267, 268, 272, 273, 276, 278, 279, 280, 281, 339, 341, 481, 482, 496, 506, 622, 708, 710, 711, 712, 845, 853, 858, 874, 878, 888], "nifti": [24, 30, 41, 155, 278, 280, 281, 888], "nii_fnam": [24, 41], "mne_sample_lh": 24, "nii": [24, 30, 41, 155, 257], "export_volum": [24, 41, 278, 888], "mri_resolut": [24, 30, 41, 44, 277, 278, 280, 281, 447, 888], "And": [24, 42, 54, 71, 109, 160, 179, 181, 190, 196, 202, 207, 211, 278, 528, 538, 698, 699, 847, 863, 870], "freeview": [24, 182, 867, 870, 888], "util": [24, 93, 146, 180, 189, 227, 265, 266, 443, 446, 481, 482, 751, 845, 847, 853, 857, 870, 878, 882, 888], "run_subprocess": 24, "mri_fnam": 24, "lut": [24, 466, 628, 756, 843], "opac": [24, 31, 35, 40, 46, 59, 92, 156, 171, 257, 275, 472, 710, 712, 756, 815, 821, 888], "jet": 24, "colorscal": 24, "slice": [24, 35, 40, 59, 140, 143, 156, 158, 160, 172, 181, 195, 218, 231, 257, 259, 260, 263, 264, 265, 266, 267, 268, 270, 275, 280, 281, 312, 315, 329, 331, 361, 371, 415, 416, 419, 423, 426, 429, 434, 451, 452, 481, 482, 562, 563, 565, 577, 579, 580, 581, 584, 587, 591, 601, 603, 610, 676, 694, 695, 696, 698, 699, 703, 708, 710, 711, 712, 714, 716, 717, 718, 719, 721, 733, 735, 736, 738, 739, 774, 780, 784, 786, 787, 790, 792, 793, 799, 800, 801, 803, 805, 807, 810, 820, 870, 873, 876, 888], "157": [24, 123, 137, 151, 169, 170, 188, 209, 211, 227, 232, 245, 340, 668, 888], "248": [24, 25, 46, 74, 85, 101, 102, 112, 123, 169, 211, 227, 232], "left_cerebellum_volume_sourc": [24, 25], "717": [25, 232], "auto_examples_forward": 25, "source_space_morph": [25, 26], "091": [25, 26], "582": [25, 196, 209, 245], "oppos": [26, 61, 213, 224, 349, 422, 843, 847, 873, 888], "evenli": [26, 208, 210, 267, 268, 361, 595, 793, 870], "caution": [26, 27, 142, 157, 169, 192, 265, 266, 267, 268, 415, 481, 482, 483, 711, 765], "fname_tran": [26, 41, 50, 52, 124, 176, 181, 863], "sample_audvis_raw": [26, 29, 41, 45, 50, 52, 69, 72, 83, 92, 93, 94, 103, 104, 107, 108, 110, 111, 116, 118, 123, 124, 127, 140, 142, 146, 149, 150, 156, 158, 160, 162, 166, 167, 168, 170, 172, 176, 178, 181, 182, 199, 200, 203, 204, 206, 207, 208, 210, 216, 217, 218, 219, 223, 224, 229, 230, 231, 240, 257, 847], "fname_bem": [26, 41, 50, 159, 176, 181, 182], "fname_src_f": 26, "fsaverag": [26, 40, 43, 44, 125, 126, 135, 136, 156, 157, 160, 171, 181, 190, 211, 235, 236, 237, 245, 263, 271, 272, 276, 277, 280, 281, 306, 314, 330, 362, 367, 368, 369, 374, 387, 389, 390, 469, 473, 521, 525, 549, 591, 644, 645, 676, 700, 703, 704, 745, 756, 772, 814, 820, 863, 888], "ico": [26, 40, 43, 136, 158, 159, 161, 191, 235, 236, 237, 257, 272, 276, 280, 283, 412, 519, 656, 680, 683, 814, 863, 873, 888], "read_info": [26, 65, 90, 92, 94, 95, 157, 158, 160, 169, 878], "pick_info": [26, 119, 135, 167, 169, 224, 878, 888], "src_f": [26, 44, 180], "read_source_spac": [26, 40, 43, 44, 135, 136, 156, 159, 160, 180, 235, 236, 237, 278, 840, 878], "src_morph": 26, "morph_source_spac": [26, 276, 279, 878, 888], "subject_to": [26, 40, 43, 44, 235, 237, 257, 271, 277, 280, 281, 362, 549, 550, 632, 644, 645, 646, 647, 820, 863], "return": [26, 31, 34, 69, 70, 76, 84, 92, 93, 94, 99, 103, 108, 109, 110, 113, 114, 115, 117, 121, 137, 140, 141, 144, 146, 149, 150, 151, 160, 161, 166, 167, 168, 169, 171, 178, 188, 205, 206, 207, 208, 210, 216, 218, 222, 224, 227, 228, 231, 237, 240, 241, 242, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 379, 380, 381, 382, 384, 385, 386, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 648, 649, 652, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 742, 743, 744, 745, 746, 747, 748, 749, 750, 754, 755, 756, 757, 758, 759, 760, 761, 764, 765, 766, 767, 768, 769, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 825, 826, 829, 840, 841, 842, 865, 869, 870, 873, 888], "mag_map_f": 26, "to_original_src": [26, 276, 279, 888], "track": [26, 113, 142, 149, 166, 169, 191, 192, 200, 203, 213, 217, 218, 222, 563, 583, 865, 876, 877, 888], "sulcal": [26, 160, 756], "gyral": [26, 160, 756], "outlier": [26, 71, 157, 432, 563, 802], "mai": [26, 71, 75, 77, 83, 103, 135, 140, 141, 143, 144, 146, 149, 150, 151, 156, 158, 161, 166, 168, 170, 172, 188, 189, 190, 192, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 211, 216, 217, 218, 219, 222, 224, 229, 232, 235, 245, 260, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 274, 275, 276, 279, 280, 281, 300, 320, 331, 332, 337, 355, 367, 412, 413, 415, 420, 422, 426, 432, 437, 443, 444, 445, 446, 447, 452, 463, 465, 472, 481, 482, 489, 496, 497, 502, 524, 527, 530, 550, 562, 563, 565, 578, 580, 581, 584, 586, 595, 596, 613, 615, 617, 619, 625, 644, 646, 690, 694, 695, 696, 698, 699, 701, 703, 708, 710, 711, 712, 733, 735, 736, 737, 738, 739, 740, 756, 772, 773, 779, 786, 788, 790, 791, 793, 795, 799, 803, 808, 809, 811, 816, 818, 836, 845, 847, 848, 850, 851, 853, 854, 855, 862, 863, 865, 867, 869, 870, 873, 876, 888], "occur": [26, 44, 47, 71, 76, 90, 94, 95, 140, 143, 144, 151, 161, 168, 201, 202, 207, 216, 229, 230, 258, 260, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 283, 298, 299, 356, 360, 361, 371, 372, 373, 413, 420, 436, 437, 439, 455, 456, 457, 476, 478, 479, 481, 482, 510, 541, 580, 581, 658, 708, 711, 786, 796, 809, 847, 848, 853, 863, 869, 870, 888], "kwarg": [26, 58, 109, 112, 116, 123, 141, 179, 180, 195, 202, 223, 241, 265, 266, 267, 268, 270, 275, 278, 416, 423, 481, 482, 487, 552, 708, 756, 757, 778, 793, 812, 815, 847], "smooth": [26, 38, 43, 59, 72, 83, 114, 134, 135, 142, 151, 156, 166, 171, 181, 195, 207, 227, 228, 235, 236, 237, 245, 265, 266, 267, 268, 271, 272, 273, 276, 277, 279, 280, 281, 362, 481, 482, 563, 572, 695, 696, 698, 699, 704, 724, 726, 734, 735, 736, 738, 739, 756, 765, 787, 814, 817, 819, 821, 822, 825, 866, 888], "smoothing_step": [26, 41, 42, 43, 55, 59, 61, 104, 109, 116, 131, 136, 175, 177, 179, 181, 223, 235, 272, 273, 276, 279, 280, 281, 756, 814, 819], "almost": [26, 114, 140, 168, 847, 870], "equidist": [26, 275], "unevenli": [26, 524], "achiev": [26, 43, 44, 112, 127, 142, 144, 146, 160, 161, 180, 202, 211, 218, 224, 267, 268, 356, 365, 515, 538, 563, 593, 612, 660, 661, 662, 671, 672, 674, 695, 696, 697, 698, 699, 796, 867, 870, 874, 876, 888], "closest": [26, 144, 157, 158, 216, 242, 260, 265, 266, 267, 268, 271, 278, 481, 482, 704, 710, 712, 756, 774, 788, 870, 888], "approxim": [26, 68, 170, 205, 216, 227, 245, 257, 262, 265, 266, 267, 268, 272, 273, 274, 276, 279, 280, 281, 314, 413, 420, 434, 449, 450, 452, 464, 481, 482, 562, 563, 574, 578, 584, 595, 656, 708, 710, 712, 720, 773, 780, 781, 788, 790, 792, 795, 796, 799, 806, 808, 810, 811, 812, 816, 818, 843, 870, 888], "brain_subject": 26, "time_label": [26, 33, 34, 59, 61, 109, 124, 131, 224, 235, 236, 237, 267, 268, 272, 273, 276, 279, 280, 281, 756, 791, 814, 819], "brain_f": 26, "remap": [26, 27, 78, 85, 267, 268, 625, 888], "destin": [26, 43, 44, 80, 155, 160, 259, 262, 263, 265, 266, 267, 268, 272, 273, 275, 276, 277, 278, 279, 280, 281, 289, 310, 311, 314, 315, 362, 374, 412, 434, 443, 444, 445, 446, 481, 482, 514, 548, 550, 562, 563, 584, 595, 644, 645, 647, 708, 709, 710, 711, 712, 741, 742, 798, 830, 831, 832, 833, 834, 835, 836, 839, 840, 841, 842, 873, 888], "sourcespac": [26, 41, 43, 45, 50, 109, 158, 159, 160, 176, 208, 269, 271, 272, 273, 276, 279, 280, 281, 283, 362, 447, 467, 477, 516, 517, 525, 539, 540, 545, 550, 637, 656, 657, 658, 665, 668, 670, 673, 674, 675, 676, 677, 678, 679, 680, 682, 683, 700, 703, 704, 756, 772, 774, 814, 819, 820, 840, 843, 870, 878, 888], "n_vertic": [26, 41, 43, 53, 109, 158, 159, 160, 261, 271, 272, 273, 276, 279, 280, 281, 457, 545, 638, 641, 676, 695, 696, 698, 699, 706, 755, 756, 836, 841], "n_use": [26, 41, 43, 45, 50, 109, 158, 159, 160, 176, 208], "10242": [26, 43, 159, 235, 236, 237, 271, 283, 469, 700, 863], "coord": [26, 41, 43, 45, 50, 109, 125, 158, 159, 160, 161, 176, 208, 344, 456, 756, 757, 826, 841], "conductor": [26, 41, 45, 50, 109, 156, 158, 159, 176, 182, 306, 456, 526, 657, 772, 843, 870, 888], "20484": [26, 136, 159, 161, 235, 236, 257, 519], "999310": [26, 41, 50, 158, 176, 181, 182], "009985": [26, 41, 50, 158, 176, 181, 182], "035787": [26, 41, 50, 158, 176, 181, 182], "012759": [26, 41, 50, 158, 176, 181, 182], "812405": [26, 41, 50, 158, 176, 181], "582954": [26, 41, 50, 158, 176, 181], "034894": [26, 41, 50, 158, 176, 181, 182], "583008": [26, 41, 50, 158, 176, 181], "811716": [26, 41, 50, 158, 176, 181, 182], "991420": [26, 41, 45, 50, 158, 176, 181], "039936": [26, 41, 45, 50, 158, 176, 181], "124467": [26, 41, 45, 50, 158, 176, 181], "060661": [26, 41, 45, 50, 158, 176, 181], "984012": [26, 41, 45, 50, 158, 176, 181], "167456": [26, 41, 45, 50, 158, 176, 181], "115790": [26, 41, 45, 50, 158, 176, 181], "173570": [26, 41, 45, 50, 158, 176, 181], "977991": [26, 41, 45, 50, 158, 176, 181], "homogen": [26, 41, 50, 109, 158, 176, 208, 245, 577, 870, 873, 888], "2154": 26, "8088": 26, "8079": 26, "10233": [26, 888], "4190": 26, "2113": [26, 169], "8129": 26, "8125": 26, "10237": 26, "20470": 26, "00205101": 26, "08784125": 26, "17433707": 26, "work": [27, 31, 69, 71, 76, 79, 83, 87, 133, 137, 138, 139, 140, 144, 147, 148, 149, 150, 151, 155, 156, 160, 161, 166, 167, 168, 169, 173, 174, 175, 177, 178, 181, 184, 188, 190, 193, 194, 196, 199, 201, 203, 204, 205, 206, 207, 210, 211, 214, 215, 216, 218, 219, 221, 222, 224, 229, 232, 235, 237, 240, 241, 242, 245, 252, 256, 259, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 314, 315, 318, 320, 325, 328, 330, 334, 340, 349, 355, 357, 361, 362, 363, 365, 368, 373, 384, 388, 391, 413, 414, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 436, 440, 442, 447, 448, 453, 454, 465, 473, 476, 478, 479, 481, 482, 487, 491, 494, 500, 517, 519, 520, 523, 525, 528, 529, 530, 531, 532, 533, 534, 536, 537, 541, 547, 558, 559, 562, 563, 564, 576, 583, 590, 595, 609, 618, 622, 627, 633, 637, 638, 639, 640, 656, 657, 685, 703, 708, 710, 711, 712, 756, 757, 759, 772, 778, 780, 786, 788, 789, 794, 795, 799, 803, 808, 809, 811, 816, 818, 822, 824, 826, 843, 846, 847, 848, 852, 853, 854, 862, 864, 865, 869, 870, 871, 873, 876, 888], "variou": [27, 63, 101, 120, 121, 135, 141, 150, 155, 165, 169, 170, 177, 178, 186, 187, 188, 189, 192, 193, 199, 202, 203, 205, 207, 214, 216, 218, 224, 227, 228, 262, 267, 270, 276, 332, 529, 530, 541, 563, 595, 616, 625, 627, 756, 778, 863, 867, 869, 870, 871, 873, 877, 888], "often": [27, 68, 71, 75, 76, 83, 140, 142, 150, 166, 168, 169, 175, 178, 180, 188, 190, 192, 196, 200, 202, 203, 206, 208, 210, 213, 217, 218, 229, 242, 267, 268, 272, 273, 276, 279, 280, 281, 298, 299, 356, 360, 361, 371, 372, 373, 413, 420, 456, 457, 476, 478, 479, 541, 596, 756, 796, 814, 819, 843, 847, 851, 852, 863, 867, 869, 870, 871, 888], "lack": [27, 71, 190, 262, 274, 289, 304, 529, 596, 743, 871], "narr": [27, 165, 843, 871], "explan": [27, 74, 142, 155, 165, 231, 710, 871, 875, 888], "discov": [27, 865, 871, 888], "ve": [27, 115, 140, 149, 151, 156, 160, 171, 199, 201, 205, 207, 216, 217, 219, 242, 826, 847, 865, 867, 871], "flag": [27, 165, 167, 257, 265, 266, 270, 272, 273, 276, 279, 280, 281, 311, 481, 482, 519, 775, 809, 814, 819, 820, 847, 863, 867, 888], "tutorial_script": [27, 165], "them": [27, 47, 50, 68, 71, 75, 115, 127, 134, 135, 137, 140, 141, 142, 144, 145, 149, 150, 151, 156, 160, 161, 165, 166, 168, 170, 171, 172, 191, 192, 199, 200, 201, 202, 204, 205, 206, 207, 209, 210, 211, 216, 217, 218, 224, 227, 228, 235, 237, 242, 257, 259, 265, 266, 267, 268, 271, 292, 293, 296, 361, 364, 369, 416, 417, 431, 492, 493, 523, 524, 532, 534, 537, 558, 562, 563, 582, 596, 603, 617, 622, 662, 672, 685, 712, 751, 802, 843, 845, 847, 855, 863, 864, 865, 869, 870, 873, 876, 888], "shortcut": [27, 219, 746, 756, 888], "intention": [27, 209], "record": [27, 63, 66, 71, 75, 83, 84, 109, 137, 140, 144, 146, 151, 156, 162, 166, 168, 169, 170, 172, 175, 184, 186, 188, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 213, 216, 217, 218, 222, 224, 227, 242, 245, 259, 260, 265, 266, 267, 268, 270, 275, 282, 301, 322, 349, 356, 361, 365, 405, 436, 445, 481, 482, 490, 494, 500, 502, 505, 510, 511, 523, 563, 565, 566, 567, 571, 573, 574, 584, 595, 596, 603, 609, 625, 652, 694, 708, 710, 711, 712, 789, 803, 809, 843, 854, 859, 863, 864, 865, 867, 870, 873, 876, 888], "past": [27, 151, 202, 425, 658, 851, 867, 869, 873], "recip": [27, 63, 847], "write": [27, 29, 41, 63, 67, 108, 110, 140, 160, 161, 170, 171, 172, 177, 189, 203, 216, 237, 240, 257, 259, 262, 263, 267, 268, 270, 271, 272, 273, 275, 278, 279, 281, 289, 309, 354, 454, 486, 514, 548, 562, 611, 616, 707, 741, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 847, 850, 851, 863, 865, 867, 870, 876, 888], "manipul": [27, 63, 140, 149, 165, 220, 365, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 522, 864, 870, 877, 888], "ensembl": [27, 63, 67, 137, 270, 375, 481, 482], "neo": [27, 63, 67, 188, 270, 375, 481, 482, 888], "xdf": [27, 63, 67, 270, 375, 482], "anatomi": [27, 89, 91, 156, 175, 262, 265, 267, 268, 269, 270, 271, 276, 278, 310, 482, 486, 529, 530, 541, 616, 622, 627, 630, 658, 660, 661, 662, 673, 756, 843, 864, 888], "intracrani": [27, 78, 135, 138, 165, 245, 314, 465, 473, 481, 482, 590, 592, 863, 864, 876, 877, 888], "contact": [27, 78, 135, 138, 165, 199, 334, 473, 590, 847, 864, 888], "contralater": [27, 78, 85, 94, 151, 208, 270, 326, 487, 649], "css": [27, 78, 85, 172, 245, 262, 268, 269, 270, 271, 275, 276, 366, 481, 560, 561, 579, 616, 627, 630, 672, 674, 888], "bridg": [27, 78, 85, 245, 270, 314, 330, 375, 482, 487, 571, 594, 776, 818, 888], "much": [27, 44, 55, 75, 78, 83, 85, 137, 140, 141, 142, 144, 149, 161, 165, 166, 170, 183, 191, 196, 202, 204, 205, 206, 207, 208, 209, 212, 216, 224, 242, 245, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 314, 330, 375, 437, 448, 452, 453, 481, 482, 487, 571, 594, 648, 776, 818, 847, 850, 851, 870, 876, 888], "gel": [27, 78, 85, 270, 314, 330, 375, 482, 487, 571, 594, 776, 818, 888], "densiti": [27, 32, 33, 34, 69, 76, 78, 79, 85, 105, 106, 119, 133, 137, 142, 160, 161, 166, 172, 190, 196, 200, 201, 209, 224, 241, 245, 262, 265, 266, 267, 268, 270, 271, 276, 291, 298, 328, 361, 373, 418, 454, 481, 482, 520, 525, 529, 536, 537, 541, 544, 560, 563, 571, 572, 597, 598, 602, 614, 622, 629, 656, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 725, 726, 727, 750, 756, 772, 782, 788, 810, 824, 843, 864, 870, 873, 888], "csd": [27, 32, 33, 34, 78, 85, 105, 106, 169, 224, 265, 266, 267, 268, 270, 291, 298, 313, 328, 332, 373, 454, 481, 482, 560, 572, 622, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 725, 728, 782, 843, 888], "nir": [27, 78, 85, 171, 211, 259, 270, 482, 510, 844, 854, 870, 877, 878, 888], "maxwel": [27, 78, 84, 85, 165, 166, 184, 199, 214, 215, 265, 267, 268, 270, 298, 299, 349, 350, 353, 356, 360, 361, 371, 372, 373, 413, 420, 434, 454, 456, 457, 476, 478, 479, 481, 482, 541, 574, 584, 595, 596, 796, 798, 888], "movement": [27, 75, 76, 78, 83, 85, 112, 137, 165, 192, 199, 205, 206, 207, 214, 215, 218, 219, 245, 257, 259, 265, 267, 268, 270, 343, 344, 345, 346, 347, 349, 351, 353, 354, 365, 434, 454, 472, 481, 494, 567, 570, 584, 595, 661, 673, 772, 779, 791, 798, 824, 843, 864, 888], "reestim": [27, 78, 85, 259, 270, 346, 347, 365, 494, 567, 570, 573, 772, 798, 824, 888], "dev_head_t": [27, 78, 80, 85, 156, 166, 169, 216, 259, 270, 317, 346, 347, 365, 375, 494, 567, 570, 574, 584, 595, 659, 660, 661, 673, 772, 798, 824, 873, 888], "muscl": [27, 78, 85, 144, 205, 245, 259, 314, 330, 494, 496, 563, 568, 888], "denois": [27, 78, 85, 196, 262, 265, 267, 268, 270, 356, 361, 421, 433, 454, 456, 481, 526, 560, 564, 574, 603, 622, 787, 888], "oversampl": [27, 78, 85, 245, 265, 267, 268, 356, 433, 454, 456, 481, 526, 603], "shift": [27, 76, 78, 85, 140, 166, 195, 199, 202, 203, 208, 219, 245, 260, 263, 264, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 419, 441, 481, 482, 489, 496, 554, 563, 565, 591, 602, 625, 708, 711, 720, 756, 797, 809, 820, 888], "2d": [27, 31, 35, 40, 59, 96, 97, 119, 122, 130, 151, 166, 172, 190, 196, 200, 203, 205, 206, 207, 208, 227, 232, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 314, 315, 320, 323, 331, 340, 368, 421, 424, 428, 430, 451, 452, 481, 482, 493, 502, 512, 517, 563, 693, 695, 696, 756, 757, 768, 772, 773, 777, 794, 815, 817, 818, 824, 825, 826, 828, 843, 851, 864, 888], "arrowmap": [27, 122, 130, 267, 270, 494, 559, 560, 625, 773, 888], "layout": [27, 47, 100, 115, 122, 130, 132, 133, 142, 144, 150, 151, 159, 189, 212, 229, 265, 266, 267, 268, 270, 274, 321, 323, 325, 328, 329, 330, 340, 375, 481, 482, 488, 492, 494, 505, 506, 526, 708, 710, 712, 757, 761, 769, 772, 780, 794, 805, 808, 817, 823, 824, 843, 870, 878, 888], "parcel": [27, 38, 41, 69, 90, 94, 95, 122, 130, 135, 155, 176, 181, 223, 245, 271, 387, 389, 390, 465, 612, 630, 756, 767, 838, 843, 888], "roi": [27, 38, 122, 130, 151, 155, 200, 228, 245, 263, 265, 267, 268, 270, 326, 439, 442, 497, 530, 756, 792, 843, 870, 873, 888], "rt": [27, 122, 130, 168, 265, 270, 326, 439, 442, 497], "room": [27, 122, 127, 130, 142, 151, 162, 172, 184, 191, 203, 205, 206, 208, 210, 211, 212, 217, 245, 276, 356, 361, 481, 573, 574, 584, 595, 596, 779, 843, 863, 870, 888], "lock": [27, 105, 106, 140, 156, 162, 168, 204, 207, 231, 242, 245, 260, 265, 270, 271, 437, 454, 481, 529, 544, 547, 560, 563, 629, 803, 867], "vectorview": [27, 62, 105, 106, 119, 170, 183, 258, 262, 267, 268, 270, 276, 315, 321, 322, 336, 340, 361, 392, 433, 434, 481, 520, 525, 536, 541, 574, 584, 595, 614, 656, 750, 756, 772, 824, 843, 859, 864, 870], "induc": [27, 105, 106, 107, 162, 166, 229, 230, 231, 242, 245, 265, 266, 270, 276, 454, 481, 529, 544, 546, 547, 560, 708, 711, 724, 734, 735, 738, 867, 888], "erd": [27, 105, 106, 241, 245, 262, 265, 266, 267, 268, 274, 365, 413, 420, 442, 481, 482, 496, 562, 563, 695, 708, 710, 711, 712, 739, 773, 788, 795, 799, 808, 811, 816, 818, 864, 888], "multitap": [27, 75, 83, 103, 105, 106, 109, 137, 142, 143, 166, 172, 196, 205, 232, 240, 241, 245, 265, 266, 267, 268, 270, 288, 375, 426, 452, 481, 482, 536, 708, 710, 712, 715, 718, 735, 736, 737, 738, 739, 740, 760, 876, 888], "morlet": [27, 32, 103, 105, 106, 113, 166, 202, 231, 232, 245, 265, 270, 288, 375, 426, 482, 708, 711, 714, 717, 722, 733, 735, 738, 739, 740, 760, 878, 886, 888], "stockwel": [27, 105, 106, 232, 245, 265, 270, 288, 375, 482, 708, 735, 737, 738, 739, 740, 760, 888], "hilbert": [27, 82, 105, 106, 113, 167, 232, 265, 266, 267, 268, 270, 288, 375, 481, 482, 708, 735, 738, 739, 740, 760, 888], "permut": [27, 98, 102, 112, 165, 227, 228, 229, 230, 233, 234, 237, 238, 239, 245, 265, 267, 268, 270, 276, 277, 278, 320, 362, 436, 481, 529, 530, 544, 554, 560, 622, 635, 637, 680, 688, 695, 696, 697, 698, 699, 700, 711, 738, 756, 777, 780, 876, 888], "1d": [27, 98, 102, 117, 210, 265, 270, 284, 288, 478, 479, 481, 517, 560, 574, 584, 595, 604, 622, 695, 696, 698, 699, 760, 797], "fdr": [27, 98, 101, 102, 265, 270, 481, 560, 622, 686, 692, 888], "rer": [27, 98, 102, 265, 267, 268, 270, 355, 454, 481, 560, 694], "p": [27, 47, 51, 58, 60, 96, 97, 98, 100, 101, 102, 112, 156, 160, 172, 188, 202, 224, 227, 228, 229, 231, 232, 235, 236, 237, 242, 245, 257, 263, 264, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 355, 452, 454, 476, 481, 482, 541, 560, 563, 574, 665, 668, 670, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 708, 711, 774, 787, 847, 863, 867, 870, 888], "sloreta": [27, 28, 30, 31, 36, 38, 39, 41, 48, 50, 56, 59, 90, 104, 165, 166, 175, 178, 179, 181, 186, 187, 223, 235, 237, 245, 262, 265, 267, 268, 270, 271, 272, 273, 276, 279, 280, 281, 356, 454, 481, 529, 530, 531, 532, 533, 534, 536, 537, 541, 542, 543, 544, 546, 547, 627, 629, 756, 781, 843, 888], "timecours": [27, 33, 36, 42, 56, 262, 263, 265, 267, 268, 269, 270, 276, 280, 289, 293, 298, 304, 454, 456, 481, 524, 529, 530, 532, 541, 614, 616, 617, 627, 642, 709, 711, 719, 738, 756], "dic": [27, 31, 36, 56, 103, 165, 180, 225, 226, 245, 262, 265, 269, 270, 276, 289, 290, 291, 292, 293, 295, 298, 299, 356, 360, 454, 481, 482, 487, 518, 529, 530, 531, 541, 554, 559, 560, 627, 642, 662, 673, 709, 711, 717, 719, 738, 756, 843, 854, 864, 888], "beamform": [27, 36, 51, 56, 60, 103, 165, 166, 186, 187, 224, 245, 262, 265, 267, 268, 269, 270, 276, 277, 278, 280, 356, 360, 362, 366, 373, 454, 456, 481, 531, 539, 541, 560, 616, 627, 637, 709, 711, 717, 719, 738, 756, 843, 856, 864, 878, 888], "er": [27, 32, 33, 36, 56, 112, 241, 245, 262, 265, 266, 269, 270, 276, 291, 295, 298, 299, 356, 360, 454, 481, 531, 541, 560, 627, 694, 717, 756, 787, 864, 888], "lcmv": [27, 31, 36, 56, 165, 175, 186, 187, 262, 265, 267, 268, 269, 270, 276, 277, 278, 280, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 356, 360, 362, 366, 373, 454, 457, 481, 531, 539, 541, 560, 616, 627, 637, 717, 756, 843, 888], "spars": [27, 36, 44, 46, 56, 119, 175, 227, 232, 235, 237, 245, 257, 262, 263, 267, 269, 270, 276, 277, 278, 310, 320, 331, 362, 373, 375, 457, 476, 477, 478, 479, 529, 530, 541, 616, 625, 627, 637, 674, 688, 694, 695, 696, 698, 699, 756, 783, 784, 815, 847, 854, 856, 870, 873, 888], "gamma": [27, 36, 56, 112, 113, 117, 245, 262, 265, 266, 267, 268, 269, 270, 276, 373, 476, 477, 481, 482, 538, 616, 625, 627, 710, 712, 724, 734, 735, 738, 783, 784, 788, 815, 870, 873, 888], "bayesian": [27, 36, 56, 245, 262, 267, 269, 270, 276, 356, 373, 476, 477, 616, 625, 627, 783, 784, 815, 854, 870], "mix": [27, 36, 56, 59, 103, 196, 205, 242, 245, 262, 263, 267, 269, 270, 272, 273, 276, 277, 278, 279, 280, 281, 298, 299, 362, 447, 458, 476, 477, 478, 479, 517, 525, 529, 530, 541, 563, 593, 616, 625, 627, 630, 635, 637, 656, 657, 663, 664, 665, 666, 667, 668, 669, 670, 700, 703, 756, 783, 784, 799, 814, 815, 819, 876, 888], "norm": [27, 31, 36, 47, 48, 49, 50, 56, 57, 59, 79, 84, 116, 149, 156, 162, 166, 177, 179, 185, 207, 223, 224, 245, 262, 263, 265, 266, 267, 268, 269, 270, 276, 277, 278, 362, 457, 476, 477, 478, 479, 481, 482, 529, 530, 531, 532, 533, 534, 536, 537, 539, 540, 541, 543, 545, 546, 547, 616, 625, 627, 637, 665, 668, 670, 720, 783, 784, 813, 815, 843, 854, 856, 863, 873, 888], "mxne": [27, 31, 36, 56, 175, 262, 263, 265, 267, 268, 269, 270, 276, 277, 278, 356, 362, 454, 477, 478, 479, 529, 530, 541, 616, 625, 627, 637, 756, 783, 784, 815, 843, 888], "irmxn": [27, 36, 56, 262, 263, 267, 269, 270, 276, 277, 278, 362, 477, 478, 529, 530, 541, 616, 625, 627, 637, 783, 784, 815], "volumetr": [27, 36, 50, 56, 135, 158, 160, 175, 177, 181, 267, 272, 273, 276, 277, 278, 279, 280, 281, 362, 517, 529, 530, 544, 590, 625, 637, 756, 814, 819, 820, 822, 843, 876, 888], "xfit": [27, 36, 56, 262, 263, 265, 267, 268, 269, 270, 280, 304, 454, 456, 481, 524, 529, 530, 532, 541, 614, 616, 617, 642, 888], "reweight": [27, 36, 40, 56, 245, 262, 265, 267, 268, 269, 276, 356, 454, 477, 478, 479, 627, 815], "tf": [27, 31, 36, 56, 59, 202, 262, 265, 267, 268, 269, 276, 356, 454, 477, 479, 627, 815, 888], "multiscal": [27, 36, 56, 262, 265, 267, 268, 269, 276, 356, 454, 477, 479, 627, 815], "circular": [27, 36, 56, 151, 223, 276, 278, 366, 471, 540, 542, 544, 627, 630, 756, 761, 854, 870, 888], "graph": [27, 36, 56, 117, 245, 276, 278, 366, 540, 542, 544, 627, 630, 678, 679, 680, 681, 682, 683, 684, 756, 761, 888], "spread": [27, 36, 42, 54, 55, 56, 72, 81, 83, 84, 113, 165, 168, 202, 207, 208, 210, 225, 226, 245, 262, 265, 267, 268, 269, 270, 271, 276, 278, 280, 356, 366, 454, 481, 525, 529, 530, 531, 539, 540, 541, 542, 544, 545, 571, 595, 616, 625, 627, 630, 657, 670, 672, 675, 756, 847, 870, 888], "psf": [27, 36, 54, 55, 56, 262, 267, 269, 270, 276, 278, 280, 366, 525, 529, 539, 540, 541, 542, 545, 616, 625, 627, 657, 756, 888], "talk": [27, 36, 56, 160, 202, 210, 229, 262, 265, 267, 269, 270, 276, 289, 299, 300, 356, 366, 373, 434, 454, 529, 539, 540, 541, 542, 545, 560, 573, 584, 595, 616, 625, 627, 756, 843, 869, 888], "rap": [27, 36, 56, 60, 245, 262, 267, 269, 301, 303, 616, 625, 627, 783, 784, 888], "music": [27, 36, 56, 205, 245, 262, 267, 269, 301, 303, 616, 625, 627, 783, 784, 888], "resolut": [27, 30, 36, 44, 47, 48, 50, 56, 114, 120, 146, 156, 157, 158, 176, 212, 229, 230, 245, 258, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 300, 362, 366, 413, 420, 447, 469, 472, 481, 482, 529, 530, 539, 540, 541, 542, 545, 561, 562, 563, 616, 625, 627, 708, 710, 712, 724, 734, 735, 736, 737, 738, 739, 740, 756, 773, 788, 795, 799, 808, 811, 814, 816, 818, 819, 843, 854, 863, 869, 870, 888], "trap": [27, 36, 56, 59, 245, 262, 267, 269, 303, 616, 625, 627, 783, 784, 888], "auto_examples_python": 27, "auto_examples_jupyt": 27, "fname_raw": [28, 29, 62, 103, 104, 127, 157, 182, 209], "fname_ev": [28, 94, 103, 104], "label_nam": [28, 29, 47, 92, 94, 104, 107, 181, 223, 466], "fname_label": [28, 29, 104, 107, 108], "assumpt": [28, 109, 121, 140, 141, 144, 152, 162, 202, 206, 210, 227, 267, 268, 603, 690, 796, 867, 870, 888], "read_label": [28, 29, 37, 39, 92, 104, 107, 108, 276, 279, 658, 878], "add": [28, 37, 43, 44, 71, 75, 90, 94, 95, 101, 114, 120, 126, 127, 136, 140, 141, 143, 144, 151, 161, 168, 171, 172, 175, 176, 181, 189, 191, 195, 199, 200, 201, 203, 205, 206, 208, 216, 218, 223, 224, 227, 232, 242, 257, 259, 261, 262, 265, 266, 267, 268, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 314, 374, 413, 415, 420, 424, 437, 449, 451, 452, 472, 481, 482, 562, 563, 573, 575, 576, 577, 578, 615, 637, 646, 649, 654, 656, 658, 659, 660, 661, 662, 672, 705, 708, 710, 711, 712, 751, 756, 759, 773, 776, 777, 786, 788, 793, 795, 799, 808, 811, 816, 818, 825, 843, 845, 847, 850, 853, 854, 873, 888], "053": [28, 49, 70, 74, 92, 93, 104, 107, 108, 110, 111, 117, 151, 162, 166, 167, 168, 169, 177, 199, 200, 201, 206, 207, 208, 210, 216, 217, 218, 219, 224, 229, 230], "sqrt": [28, 117, 183, 184, 223, 224, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 568, 593, 724, 734, 738, 810, 870], "mean_stc": 28, "flip": [28, 38, 39, 115, 161, 205, 227, 257, 272, 273, 276, 279, 280, 281, 305, 447, 516, 695, 826, 870, 888], "cancel": [28, 81, 180, 202, 210, 272, 273, 276, 279, 280, 281, 434, 447, 563, 595, 800, 863, 870, 873], "label_sign_flip": [28, 878, 888], "label_mean": 28, "label_mean_flip": 28, "stc_evok": 28, "sub": [28, 32, 33, 34, 41, 46, 66, 68, 71, 83, 113, 146, 155, 170, 212, 241, 242, 265, 266, 267, 268, 270, 440, 481, 482, 593, 657, 709, 756, 782, 859, 867, 870, 888], "stc_evoked_label": 28, "in_label": [28, 37, 38, 39, 276, 279, 280, 281, 888], "care": [28, 34, 141, 150, 151, 160, 202, 205, 206, 216, 218, 373, 479, 694, 870, 888], "polar": [28, 47, 142, 207, 778], "label_mean_evok": 28, "1711": [28, 34, 45, 107, 121, 132, 142, 145, 146, 152, 166, 169, 177, 180, 201, 224, 232, 235, 237], "benefit": [28, 45, 46, 55, 59, 72, 126, 172, 190, 245, 545, 572, 668, 863, 869], "1e3": [28, 29, 38, 39, 41, 70, 73, 97, 113, 137, 149, 151, 156, 157, 177, 185, 192, 213, 223, 229, 230, 231, 237], "h0": [28, 96, 100, 227, 228, 229, 230, 231, 235, 236, 237, 695, 696, 697, 698, 699], "h1": [28, 96, 112, 227, 228, 229, 230, 231, 232, 235, 236, 237], "linewidth": [28, 39, 97, 112, 113, 136, 150, 160, 206, 227, 262, 265, 266, 267, 268, 413, 420, 481, 482, 562, 708, 710, 712, 756, 773, 780, 788, 795, 811, 812, 815, 816, 818], "h2": 28, "unflip": 28, "pool": [28, 140, 149, 151, 166, 217, 298, 299, 476, 478, 479, 530, 531, 532, 533, 534, 536, 537, 547, 876], "stc_trial": 28, "_nolegend_": 28, "026": [28, 56, 128, 140, 149, 169, 224, 245], "compute_mne_inverse_epochs_in_label": [28, 56], "apply_inverse_raw": [29, 530, 531, 532, 534, 878, 888], "smaller": [29, 41, 76, 104, 127, 142, 149, 158, 202, 207, 210, 227, 228, 242, 260, 265, 266, 272, 273, 276, 279, 280, 281, 479, 500, 565, 580, 584, 593, 695, 696, 698, 699, 723, 731, 756, 814, 819, 863, 870, 888], "time_as_index": [29, 40, 84, 140, 149, 175, 216, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 708, 711, 888], "mne_": [29, 30, 873], "s_raw_inverse_": 29, "overwrit": [29, 41, 104, 108, 110, 140, 161, 172, 191, 218, 257, 259, 262, 263, 265, 266, 267, 268, 272, 273, 275, 276, 277, 278, 279, 280, 281, 289, 309, 310, 311, 314, 315, 443, 444, 445, 446, 481, 482, 514, 548, 562, 563, 572, 645, 646, 649, 653, 708, 709, 710, 711, 712, 741, 830, 831, 832, 833, 834, 835, 836, 838, 839, 840, 841, 842, 888], "25800": [29, 45, 69, 72, 80, 83, 92, 93, 103, 104, 107, 110, 111, 118, 123, 127, 146, 156, 162, 167, 168, 172, 182, 199, 203, 204, 206, 207, 208, 216, 219, 223, 224, 229, 230, 231], "192599": [29, 45, 69, 72, 83, 92, 93, 103, 104, 107, 110, 111, 118, 123, 127, 146, 156, 162, 167, 168, 172, 182, 199, 203, 204, 206, 207, 216, 219, 223, 224, 229, 230, 231], "611": [29, 56, 59, 196, 232, 245, 356, 479], "compute_mne_inverse_raw_in_label": [29, 56], "nilearn": [30, 41, 44, 171, 176, 181, 182, 280, 281, 820], "plot_stat_map": 30, "index_img": 30, "read_evok": [30, 31, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 61, 79, 86, 87, 116, 119, 120, 124, 127, 149, 150, 172, 176, 178, 179, 181, 265, 266, 267, 268, 275, 481, 482, 834, 867, 878, 888], "vol": [30, 44, 50, 135, 160, 176, 180, 181, 245, 263, 265, 266, 267, 268, 278, 301, 434, 635, 663, 664, 665, 666, 667, 668, 669, 670, 796], "4d": [30, 123, 165, 186, 187, 188, 262, 263, 265, 266, 267, 268, 270, 304, 356, 454, 456, 481, 482, 492, 526, 560, 561, 695, 696, 708, 710, 711, 712, 772, 784, 870, 873, 888], "img": [30, 116, 160, 182, 227, 280, 281], "as_volum": [30, 280, 281, 888], "nib": [30, 44, 156], "s_invers": 30, "gz": [30, 140, 155, 172, 206, 257, 264, 265, 266, 267, 268, 278, 314, 388, 481, 482, 502, 544, 548, 563, 607, 613, 616, 618, 625, 627, 633, 637, 673, 829, 832, 834, 835, 839, 840, 853, 888], "t1_fname": [30, 160, 176], "499": [30, 31, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 61, 79, 86, 87, 106, 110, 116, 119, 120, 127, 142, 143, 149, 168, 172, 176, 178, 179, 181, 230, 231, 232], "11271": [30, 44, 181, 888], "364": [30, 35, 40, 48, 49, 54, 55, 56, 58, 59, 69, 81, 92, 94, 121, 162, 166, 169, 178, 232, 240], "compute_mne_inverse_volum": [30, 56], "plug": [31, 847, 870], "facil": [31, 258], "implement": [31, 71, 166, 169, 179, 196, 203, 205, 210, 224, 242, 258, 262, 270, 274, 289, 290, 292, 304, 334, 356, 362, 413, 420, 421, 426, 430, 453, 476, 478, 479, 481, 482, 525, 529, 530, 531, 532, 533, 534, 536, 537, 547, 563, 564, 571, 578, 584, 610, 632, 692, 733, 735, 743, 809, 847, 854, 862, 871, 876, 886, 888], "wmne": [31, 478, 479], "eloreta": [31, 165, 166, 175, 178, 179, 186, 187, 235, 237, 262, 265, 267, 268, 270, 276, 298, 299, 356, 454, 476, 478, 479, 529, 530, 531, 532, 533, 534, 536, 537, 541, 543, 546, 547, 627, 756, 781, 843, 888], "educ": [31, 869], "shall": [31, 144, 201, 267, 268, 437, 563, 676, 791, 847, 869, 876], "develop": [31, 71, 171, 205, 210, 256, 257, 334, 584, 707, 765, 850, 851, 853, 854, 864, 867, 869, 873, 888], "meant": [31, 90, 95, 109, 171, 227, 274, 290, 292, 343, 415, 425, 517, 654, 750, 751, 759, 888], "practic": [31, 72, 99, 114, 151, 160, 168, 201, 202, 208, 210, 242, 245, 271, 298, 563, 572, 629, 635, 694, 843, 847, 869, 870], "apply_solv": 31, "linalg": [31, 84, 156, 160, 185, 206, 360, 694, 867, 888], "plot_sparse_source_estim": [31, 35, 40, 46, 59, 92, 821, 878, 888], "ave_fnam": [31, 40, 59, 69, 92], "cov_fnam": [31, 35, 40, 45, 51, 59, 60, 69, 92, 172, 224, 275], "handl": [31, 40, 46, 59, 127, 133, 140, 144, 146, 151, 155, 160, 165, 166, 168, 170, 172, 173, 207, 210, 214, 215, 260, 265, 266, 267, 268, 270, 344, 440, 454, 481, 482, 557, 560, 563, 595, 652, 757, 765, 773, 776, 778, 789, 800, 804, 828, 847, 873, 888], "365": [31, 40, 41, 45, 59, 81, 169, 207, 232, 245, 271, 276, 356], "auxiliari": [31, 142, 374], "def": [31, 34, 69, 77, 84, 92, 93, 94, 109, 113, 117, 133, 137, 150, 151, 156, 160, 202, 203, 206, 222, 224, 227, 231, 237, 242, 847], "ones": [31, 83, 88, 111, 141, 170, 178, 183, 185, 188, 206, 207, 227, 242, 258, 271, 389, 448, 474, 475, 481, 482, 521, 565, 584, 629, 635, 642, 693, 847, 867, 870, 873, 888], "account": [31, 80, 109, 123, 141, 142, 156, 158, 162, 180, 185, 192, 200, 201, 207, 208, 210, 216, 217, 227, 232, 242, 259, 262, 267, 268, 298, 299, 356, 360, 361, 371, 372, 373, 413, 420, 456, 457, 476, 478, 479, 541, 563, 566, 593, 796, 847, 867, 870, 873, 888], "constraint": [31, 61, 158, 166, 178, 195, 208, 245, 265, 266, 288, 300, 456, 541, 787, 873, 888], "weigth": 31, "formul": [31, 724, 734, 735, 738, 870], "problem": [31, 40, 59, 71, 88, 96, 97, 114, 137, 144, 161, 166, 175, 176, 188, 189, 196, 200, 204, 205, 207, 208, 216, 227, 228, 232, 235, 236, 237, 242, 245, 478, 497, 563, 584, 613, 619, 695, 696, 698, 699, 701, 702, 822, 846, 847, 852, 867, 868, 870, 876, 888], "bia": [31, 40, 71, 84, 141, 151, 184, 202, 235, 237, 241, 245, 262, 267, 268, 298, 299, 362, 426, 476, 478, 479, 541, 593, 727, 790, 795, 870, 888], "callabl": [31, 150, 262, 265, 266, 267, 268, 272, 273, 274, 276, 279, 280, 281, 284, 314, 316, 342, 367, 413, 416, 420, 423, 430, 442, 481, 482, 533, 562, 563, 578, 643, 674, 675, 687, 694, 695, 696, 698, 699, 708, 710, 711, 712, 754, 756, 769, 773, 780, 787, 788, 790, 795, 799, 808, 811, 814, 816, 817, 818, 819, 888], "boolean": [31, 101, 141, 143, 169, 171, 206, 207, 216, 218, 262, 265, 266, 267, 268, 274, 276, 413, 420, 481, 482, 562, 563, 695, 696, 698, 699, 708, 710, 712, 787, 788, 792, 795, 799, 808, 811, 816, 847, 874, 888], "what": [31, 59, 72, 83, 90, 94, 95, 117, 127, 128, 136, 140, 141, 142, 143, 144, 156, 160, 169, 171, 175, 180, 181, 182, 190, 200, 202, 211, 216, 217, 218, 224, 227, 229, 232, 240, 242, 260, 263, 264, 265, 266, 267, 268, 272, 273, 275, 276, 279, 280, 281, 356, 360, 367, 371, 372, 388, 405, 432, 437, 442, 446, 463, 480, 481, 482, 497, 549, 600, 613, 615, 619, 644, 646, 658, 708, 711, 736, 739, 779, 814, 819, 836, 843, 847, 850, 852, 853, 855, 873, 876, 878], "tangenti": [31, 298, 299, 458, 476, 478, 479, 541, 870, 873], "discret": [31, 45, 104, 158, 176, 196, 208, 240, 245, 263, 264, 265, 266, 267, 268, 272, 273, 276, 278, 279, 280, 281, 420, 458, 476, 478, 479, 481, 482, 524, 541, 657, 708, 710, 711, 712, 720, 726, 869, 888], "coeffici": [31, 101, 109, 141, 146, 158, 195, 202, 204, 417, 419, 425, 431, 448, 449, 450, 478, 479, 562, 573, 574, 584, 595, 606, 610, 662, 671, 672, 693, 694, 710, 712, 721, 723, 726, 727, 731, 797, 888], "privat": [31, 847, 888], "inverse_spars": [31, 35, 40, 46, 59, 175, 856, 878, 888], "mxne_invers": 31, "_prepare_gain": 31, "is_fixed_ori": [31, 888], "_reapply_source_weight": 31, "_make_sparse_stc": 31, "all_ch_nam": 31, "gain_info": 31, "source_weight": 31, "weights_min": [31, 40, 59, 478, 479, 888], "dot": [31, 79, 87, 112, 119, 124, 127, 144, 150, 160, 175, 178, 182, 185, 190, 195, 200, 207, 211, 235, 237, 263, 267, 268, 272, 276, 280, 694, 784, 790, 847, 870, 888], "n_orient": [31, 272, 273, 276, 279, 280, 281, 447, 545], "active_set": 31, "l2": [31, 40, 54, 55, 245, 478, 479, 545, 668, 720, 856, 873], "penal": 31, "strongest": [31, 35, 40, 47, 59, 151], "n_dipol": [31, 51, 60, 69, 92, 93, 158, 263, 272, 273, 276, 279, 280, 281, 301, 303, 433, 539, 540, 542, 674], "depend": [31, 71, 82, 101, 126, 135, 136, 137, 141, 149, 151, 155, 157, 158, 162, 170, 171, 172, 190, 195, 201, 202, 204, 206, 207, 210, 218, 224, 227, 228, 229, 237, 242, 245, 259, 265, 266, 267, 268, 272, 273, 276, 278, 279, 280, 281, 300, 320, 331, 344, 345, 406, 419, 425, 439, 447, 457, 481, 482, 489, 496, 498, 563, 573, 584, 590, 603, 609, 689, 695, 696, 698, 699, 701, 703, 704, 707, 708, 710, 711, 712, 730, 756, 765, 777, 779, 780, 786, 787, 790, 803, 809, 845, 846, 847, 850, 853, 854, 855, 862, 863, 864, 867, 870], "n_active_dipol": 31, "bool": [31, 120, 171, 232, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 305, 306, 307, 308, 309, 310, 311, 314, 315, 316, 318, 319, 322, 323, 324, 325, 326, 328, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 434, 435, 438, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 461, 463, 464, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 586, 588, 589, 590, 591, 592, 593, 595, 596, 598, 599, 600, 602, 603, 604, 607, 608, 609, 610, 614, 615, 616, 617, 618, 619, 621, 622, 623, 625, 626, 627, 629, 630, 631, 632, 633, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 672, 673, 675, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 692, 695, 696, 697, 698, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 724, 725, 726, 727, 730, 731, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 744, 745, 746, 751, 755, 756, 761, 764, 765, 769, 770, 772, 773, 774, 775, 777, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 867], "entri": [31, 109, 140, 142, 144, 150, 151, 166, 170, 171, 196, 200, 216, 259, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 279, 280, 281, 287, 316, 343, 344, 345, 346, 347, 348, 413, 420, 423, 435, 445, 448, 479, 480, 481, 482, 530, 538, 562, 563, 578, 653, 657, 659, 660, 661, 673, 688, 708, 710, 711, 712, 756, 773, 774, 786, 787, 788, 792, 795, 799, 808, 809, 811, 814, 815, 816, 818, 819, 847, 850, 870, 873, 888], "x_full": 31, "solv": [31, 59, 161, 175, 413, 497, 563, 613, 619, 694, 870, 876], "ey": [31, 75, 125, 135, 137, 158, 165, 172, 183, 199, 201, 204, 206, 207, 214, 215, 259, 265, 266, 267, 268, 382, 454, 481, 482, 497, 500, 560, 581, 583, 586, 619, 708, 710, 711, 712, 864, 877], "dtype": [31, 92, 94, 114, 120, 144, 156, 167, 222, 224, 232, 265, 266, 267, 268, 419, 480, 481, 482, 870], "bgcolor": [31, 35, 40, 46, 59, 92, 156, 160, 178, 481, 482, 765, 775, 809, 815], "358": [31, 56, 81, 169, 209, 232], "149": [31, 45, 56, 169, 181, 231, 232, 278], "custom_inverse_solv": [31, 56], "synchron": [32, 33, 34, 112, 146, 211, 241, 245, 258, 298, 483, 489, 496, 847, 864, 888], "marijn": [32, 33, 45, 61, 74, 103, 161, 224, 245, 298, 299, 875, 888], "van": [32, 33, 43, 45, 61, 74, 103, 126, 161, 180, 202, 224, 245, 277, 298, 299, 362, 390, 571, 870, 875, 888], "vliet": [32, 33, 45, 61, 74, 103, 161, 224, 245, 298, 299, 875, 888], "vanvliet": [32, 33, 45, 61, 74, 103, 161, 224], "rockhil": [32, 71, 72, 83, 114, 115, 116, 120, 135, 136, 231, 232, 245, 875, 888], "aprockhil": [32, 71, 72, 83, 114, 115, 116, 120, 135, 136, 231, 232], "mailbox": [32, 33, 71, 72, 83, 113, 114, 115, 116, 120, 127, 135, 136, 229, 231, 232, 235, 241], "tfr_morlet": [32, 114, 166, 229, 230, 231, 232, 241, 426, 733, 735, 736, 737, 739, 740, 878, 888], "csd_tfr": [32, 878, 888], "make_d": [32, 33, 34, 224, 290, 291, 292, 293, 843, 878, 888], "apply_dics_tfr_epoch": [32, 290, 291, 292, 878, 888], "organ": [32, 72, 231, 232, 245, 572, 698, 699, 864, 869, 873], "_task": [32, 33, 34, 46, 113, 241], "_meg": [32, 33, 34, 46, 113, 172, 241, 257, 481, 482, 502, 503, 888], "5000e": 32, "mostli": [32, 109, 141, 175, 178, 188, 201, 204, 379, 380, 381, 384, 385, 386, 388, 393, 396, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 458, 476, 478, 479, 481, 482, 541, 756, 843], "wavelet": [32, 103, 113, 166, 202, 231, 245, 426, 547, 708, 711, 714, 717, 722, 724, 733, 734, 735, 736, 738, 739, 843, 888], "tfr": [32, 112, 202, 229, 230, 241, 426, 530, 531, 532, 533, 708, 711, 714, 717, 719, 730, 735, 736, 738, 739, 740, 741, 816, 843, 876, 878, 886, 888], "wish": [32, 144, 171, 190, 208, 222, 228, 229, 235, 365, 481, 482, 584, 757, 759, 847, 855, 869], "epochs_tfr": [32, 293, 534, 719], "return_itc": [32, 112, 114, 166, 229, 230, 231, 232, 241, 737, 738, 739, 740], "buffer": [32, 114, 189, 257, 270, 480, 481, 482, 497, 584, 595, 613, 619, 873, 888], "01_task": [32, 33, 34, 46, 68, 113, 170, 241, 242], "somato_meg": [32, 33, 34, 46, 113, 241], "237600": [32, 33, 34, 46, 113, 241], "506999": [32, 33, 34, 46, 113, 241], "791": [32, 33, 34, 46, 113, 181, 232, 241], "266": [32, 33, 34, 46, 112, 113, 169, 196, 202, 209, 227, 232, 241, 245], "9989760657919393": 32, "0121": [32, 34, 145, 166, 169, 216, 224], "0211": [32, 34, 166, 169, 224], "1331": [32, 34, 145, 169, 201, 209, 224], "2211": [32, 34, 169, 224], "2241": [32, 34, 159, 169, 224], "2521": [32, 34, 140, 149, 169, 224], "1641": [32, 34, 169, 224], "1831": [32, 34, 169, 224], "1921": [32, 34, 169, 224], "1941": [32, 34, 35, 169, 224], "1611": [32, 34, 120, 169, 224], "0441": [32, 34, 169, 224], "1631": [32, 34, 120, 169, 224], "0231": [32, 34, 120, 166, 169, 224], "1411": [32, 34, 145, 146, 169, 201, 207, 224], "0341": [32, 34, 169, 224], "1621": [32, 34, 120, 169, 224], "1811": [32, 34, 120, 150, 169, 216, 224], "1521": [32, 34, 166, 169, 224], "1721": [32, 34, 169, 224], "1911": [32, 34, 169, 224], "1931": [32, 34, 169, 224], "2111": [32, 34, 169, 224], "2121": [32, 34, 169, 224], "2021": [32, 34, 144, 169, 180, 190, 195, 212, 224, 245, 391, 510, 577, 864, 869], "1341": [32, 34, 169, 209, 224], "0221": [32, 34, 166, 169, 224], "0241": [32, 34, 169, 224], "1731": [32, 34, 35, 169, 224], "2041": [32, 34, 169, 224], "0731": [32, 34, 169, 224], "1141": [32, 34, 169, 224], "0131": [32, 34, 145, 166, 169, 224], "period": [32, 81, 121, 140, 141, 144, 145, 149, 150, 172, 180, 199, 201, 202, 203, 205, 212, 242, 260, 265, 266, 267, 268, 272, 273, 275, 276, 279, 280, 281, 356, 500, 563, 566, 567, 568, 580, 625, 626, 720, 752, 790, 843, 847, 869, 888], "baseline_csd": 32, "scalar": [32, 141, 160, 180, 224, 265, 266, 267, 268, 272, 273, 274, 276, 279, 280, 281, 291, 298, 299, 300, 413, 420, 481, 482, 563, 694, 710, 712, 756, 788, 795, 799, 808, 814, 819, 888], "beamfom": 32, "noise_csd": [32, 33, 298], "reduce_rank": [32, 33, 34, 49, 298, 299, 888], "real_filt": [32, 33, 34, 224, 298, 888], "epochs_stc": 32, "return_gener": [32, 104, 292, 293, 296, 447, 532, 534, 537], "nsourc": [32, 52, 269, 873], "epoch_stc": 32, "conj": [32, 114, 298, 299], "apply_baselin": [32, 112, 127, 141, 149, 172, 178, 199, 204, 205, 207, 229, 230, 231, 232, 241, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 708, 711, 888], "8155": [32, 33, 34, 46], "sti": [32, 33, 42, 46, 70, 73, 74, 80, 90, 93, 94, 95, 107, 108, 110, 113, 140, 142, 149, 152, 166, 168, 169, 177, 188, 196, 200, 204, 205, 207, 217, 224, 229, 240, 241, 258, 454, 455, 481, 482, 498, 843, 888], "014": [32, 33, 42, 46, 62, 70, 73, 74, 80, 90, 93, 94, 95, 107, 108, 110, 113, 128, 140, 142, 149, 152, 166, 168, 169, 177, 188, 196, 200, 204, 205, 207, 217, 224, 229, 240, 241, 258, 454, 455, 481, 482, 498, 888], "001": [32, 33, 72, 80, 83, 84, 121, 128, 140, 141, 142, 144, 145, 149, 150, 151, 160, 166, 168, 169, 172, 188, 195, 199, 201, 202, 203, 204, 207, 212, 216, 224, 227, 228, 229, 231, 232, 235, 236, 241, 245, 538, 572, 658, 695, 696, 698, 699, 864, 870], "005": [32, 33, 121, 128, 140, 142, 149, 157, 159, 162, 166, 169, 204, 224, 237, 241, 263, 346, 565, 784], "015": [32, 33, 128, 140, 142, 149, 169, 204, 205, 224, 235, 245, 263, 578, 668, 784], "006": [32, 33, 121, 128, 140, 142, 145, 146, 148, 149, 158, 166, 169, 204, 207, 224, 245, 257, 271, 276, 519, 863], "074": 32, "gyri": [32, 94, 155, 158, 223, 245], "border": [32, 38, 59, 104, 116, 126, 155, 181, 262, 265, 266, 267, 268, 274, 413, 420, 439, 481, 482, 562, 563, 578, 708, 710, 712, 756, 788, 794, 795, 799, 808, 811, 816, 817, 818, 888], "central": [32, 128, 141], "sulcu": 32, "primari": [32, 94, 149, 869, 870], "s1": [32, 505], "m1": [32, 68, 170, 208, 227, 242, 265, 266, 267, 268, 481, 482, 652, 888], "4500": 32, "dorsal": [32, 756], "brain_kwarg": [32, 41, 116, 180, 181, 272, 273, 276, 279, 280, 281, 814, 819], "add_data_kwarg": [32, 135, 181, 272, 273, 276, 279, 280, 281, 814, 819], "fmid": [32, 272, 273, 276, 279, 280, 281, 756, 775, 814, 819, 820, 888], "scale_factor": [32, 35, 48, 49, 50, 59, 177, 273, 279, 281, 314, 756, 806, 815, 819], "colorbar_kwarg": [32, 135, 181, 756], "label_font_s": [32, 135, 181], "movi": [32, 61, 135, 136, 177, 181, 756, 888], "websit": [32, 135, 136, 151, 177, 181, 189, 207, 405, 406, 578, 847, 850, 869], "save_movi": [32, 61, 135, 136, 177, 181, 756, 888], "time_view": [32, 61, 109, 127, 135, 136, 177, 181, 191, 272, 273, 276, 279, 280, 281, 756, 814, 819, 888], "onc": [32, 34, 43, 44, 61, 71, 94, 120, 127, 133, 135, 142, 143, 144, 145, 150, 151, 166, 168, 169, 170, 172, 177, 181, 199, 200, 202, 204, 205, 206, 207, 216, 218, 258, 259, 265, 266, 267, 268, 277, 283, 377, 448, 449, 451, 452, 481, 482, 582, 593, 736, 739, 777, 809, 847, 863, 869, 870, 888], "688": [32, 196, 232], "33913449": 32, "80202112": 32, "3163": 32, "68479992": 32, "425": [32, 56, 227, 232], "1446": 32, "dics_epoch": [32, 56, 888], "roman": [33, 245, 862, 888], "goj": [33, 245, 862, 888], "appelhoff": [33, 113, 127, 229, 232, 235, 241, 875, 888], "csd_morlet": [33, 34, 103, 224, 709, 713, 714, 715, 716, 718, 878, 888], "apply_dics_csd": [33, 34, 224, 290, 292, 293, 298, 878, 888], "shorter": [33, 114, 202, 210, 242, 272, 273, 276, 279, 280, 281, 437, 442, 481, 482, 568, 596, 602, 724, 734, 735, 736, 738, 739, 809, 888], "498464098687909": [33, 34], "logspac": [33, 34, 195, 241, 356], "log10": [33, 34, 100, 133, 202, 212, 224, 227, 241, 242, 708], "loss": [33, 71, 201, 206, 265, 266, 267, 268, 416, 423, 443, 444, 445, 446, 481, 482, 690, 870], "csd_baselin": [33, 34], "csd_er": [33, 34], "block": [33, 34, 59, 64, 103, 133, 142, 143, 172, 191, 192, 201, 213, 224, 263, 265, 266, 267, 268, 275, 454, 472, 473, 478, 481, 482, 500, 552, 563, 593, 626, 695, 696, 698, 699, 710, 712, 756, 784, 786, 803, 809, 810, 812, 845, 852, 870, 873, 888], "rather": [33, 34, 61, 140, 141, 146, 149, 156, 166, 167, 168, 170, 171, 178, 188, 196, 201, 207, 208, 212, 216, 227, 231, 235, 240, 265, 266, 269, 272, 273, 276, 279, 280, 281, 420, 481, 482, 528, 536, 537, 547, 594, 700, 703, 756, 774, 809, 843, 845, 847, 863, 864, 869, 870, 888], "entir": [33, 75, 104, 144, 151, 176, 184, 201, 202, 204, 210, 212, 217, 227, 242, 260, 265, 266, 267, 268, 272, 273, 275, 276, 279, 280, 281, 288, 414, 429, 530, 531, 532, 533, 534, 563, 580, 625, 658, 708, 847, 888], "baseline_source_pow": 33, "beta_source_pow": 33, "messag": [33, 171, 213, 240, 257, 272, 273, 276, 279, 280, 281, 367, 447, 497, 500, 613, 619, 653, 654, 751, 752, 753, 756, 845, 847, 853, 858, 867, 873, 888], "40188307": 33, "5102619": 33, "34636424": 33, "joachim": [33, 180, 224, 245, 291, 298], "gro\u00df": [33, 180, 224, 245, 291, 298], "jan": [33, 180, 224, 245, 291, 298, 299, 863, 888], "kujala": [33, 180, 224, 245, 291, 298, 299], "matti": [33, 40, 54, 55, 58, 59, 60, 126, 162, 178, 180, 210, 224, 245, 276, 291, 298, 303, 478, 479, 530, 541, 545, 574, 579, 595, 665, 670, 854, 862, 867, 870, 888], "h\u00e4m\u00e4l\u00e4inen": [33, 40, 58, 59, 126, 178, 180, 224, 245, 276, 291, 298, 434, 478, 479, 530, 541, 545, 579, 665, 668, 670, 854, 888], "lar": [33, 180, 224, 245, 291, 298], "timmermann": [33, 180, 224, 245, 291, 298], "alfon": [33, 180, 224, 245, 291, 298], "schnitzler": [33, 180, 224, 245, 291, 298], "riitta": [33, 113, 178, 180, 224, 245, 291, 298, 299], "salmelin": [33, 113, 180, 224, 245, 291, 298, 299], "nation": [33, 180, 224, 245, 256, 291, 298, 875], "academi": [33, 180, 224, 245, 291, 298], "694": [33, 48, 56, 180, 195, 196, 224, 232, 245, 291, 298], "699": [33, 140, 151, 180, 196, 224, 232, 245, 291, 298], "2001": [33, 41, 71, 180, 195, 208, 224, 245, 265, 266, 267, 268, 291, 298, 419, 481, 482, 571, 652, 692], "pna": [33, 180, 224, 245, 291, 298], "564": [33, 39, 56, 232, 245, 405], "dics_source_pow": [33, 56, 888], "luke": [34, 38, 42, 76, 81, 82, 109, 875, 888], "bloi": [34, 38, 42, 81, 82, 109, 875, 888], "make_lcmv": [34, 49, 180, 290, 292, 294, 295, 296, 297, 298, 300, 843, 878, 888], "apply_lcmv_cov": [34, 180, 294, 296, 297, 878, 888], "apply_inverse_cov": [34, 42, 530, 532, 533, 534, 878, 888], "90092": 34, "maxfilt": [34, 188, 210, 270, 352, 353, 354, 434, 481, 482, 536, 537, 546, 547, 573, 574, 584, 595, 659, 660, 661, 673, 873, 888], "conserv": [34, 71, 146, 227, 571, 657, 756, 888], "advanc": [34, 74, 127, 161, 162, 171, 204, 218, 245, 262, 265, 266, 267, 268, 274, 356, 375, 413, 420, 472, 476, 481, 482, 562, 563, 578, 673, 708, 710, 712, 765, 773, 788, 795, 799, 808, 811, 816, 818, 846, 849, 851, 867, 868, 870, 872, 876, 888], "correctli": [34, 43, 44, 150, 190, 204, 237, 265, 266, 267, 268, 334, 446, 481, 482, 583, 771, 790, 845, 846, 853, 863, 864, 870, 873, 888], "compute_rank": [34, 262, 421, 781, 878, 888], "tol": [34, 40, 46, 59, 75, 172, 360, 456, 476, 478, 479, 888], "tol_kind": [34, 360, 888], "active_win": 34, "baseline_win": 34, "baseline_cov": 34, "active_cov": 34, "common_cov": 34, "3737": 34, "ref": [34, 62, 68, 123, 151, 257, 756, 772, 847, 888], "ex": [34, 210, 847, 851, 852], "_gen_dic": 34, "stc_base": [34, 42], "stc_act": 34, "_gen_lcmv": 34, "_gen_mn": 34, "stc_dic": 34, "stc_lcmv": 34, "stc_dspm": [34, 40, 59], "08it": [34, 103, 104, 108, 112, 180, 195, 196, 209, 227, 231, 232, 236], "0921": [34, 169, 224], "0541": [34, 169, 224], "1231": [34, 169, 224], "1311": [34, 135, 169, 209, 224], "0331": [34, 166, 169, 224], "1431": [34, 169, 201, 224], "2141": [34, 169, 201, 224, 227, 245, 701, 702], "2611": [34, 169, 201, 224], "2321": [34, 169, 224], "0811": [34, 169, 201, 224], "1041": [34, 169, 209, 224], "2431": [34, 169, 224], "0711": [34, 169, 224], "1111": [34, 141, 151, 169, 202, 224, 232, 245, 356, 694, 695, 696, 698, 699, 847], "0511": [34, 146, 169, 224], "1221": [34, 169, 201, 224], "1031": [34, 169, 224, 846], "0141": [34, 169, 201, 224], "2531": [34, 169, 201, 224], "1741": [34, 169, 201, 224, 245], "2511": [34, 169, 224], "1421": [34, 145, 146, 169, 201, 207, 224], "2631": [34, 169, 201, 224], "2331": [34, 169, 224, 557], "0631": [34, 169, 224], "0641": [34, 169, 224], "1321": [34, 169, 201, 224], "2311": [34, 169, 224], "1511": [34, 166, 169, 224], "1021": [34, 169, 224, 245, 265, 266, 267, 268, 481, 482], "1531": [34, 166, 169, 224, 257], "1211": [34, 169, 224], "1011": [34, 169, 224], "1241": [34, 169, 224], "0421": [34, 169, 224], "2221": [34, 169, 224], "0321": [34, 166, 169, 224], "0431": [34, 169, 224], "0941": [34, 169, 224], "0111": [34, 145, 166, 169, 201, 207, 216, 224, 642], "0741": [34, 169, 224], "1821": [34, 169, 224], "0721": [34, 169, 224], "0311": [34, 166, 169, 224], "2341": [34, 169, 224], "1441": [34, 145, 169, 191, 201, 209, 224], "2621": [34, 169, 201, 224], "1841": [34, 169, 224], "0621": [34, 169, 224], "2421": [34, 120, 169, 201, 224], "0931": [34, 169, 224], "0521": [34, 169, 201, 224], "2411": [34, 120, 169, 224], "0821": [34, 169, 224], "2641": [34, 169, 224], "0531": [34, 169, 224], "0411": [34, 169, 224], "0611": [34, 169, 224], "2131": [34, 169, 201, 224, 227, 245, 701, 702], "0911": [34, 169, 201, 224], "2031": [34, 169, 195, 224], "2441": [34, 169, 224], "planar": [34, 40, 42, 50, 58, 59, 72, 84, 92, 94, 109, 111, 119, 131, 142, 146, 172, 177, 178, 179, 183, 188, 196, 199, 206, 207, 210, 224, 227, 773, 870, 873, 888], "7615": [34, 126, 245, 390], "004172": 34, "17919e": 34, "exp": [34, 40, 42, 50, 58, 59, 90, 92, 94, 109, 177, 178, 179, 182, 191, 196, 207, 224, 227, 298, 299, 457, 476, 478, 479, 541], "37511": 34, "81775e": 34, "brain_dic": 34, "5205929": 34, "6585548": 34, "71744034": 34, "brain_lcmv": 34, "47949264": 34, "58585385": 34, "05032456": 34, "brain_dspm": 34, "71118668": 34, "88724176": 34, "99076424": 34, "evoked_ers_source_pow": [34, 56], "detail": [35, 44, 45, 80, 119, 140, 142, 149, 150, 151, 155, 156, 158, 166, 167, 168, 169, 170, 171, 172, 175, 177, 180, 188, 189, 190, 195, 196, 200, 201, 203, 205, 206, 207, 210, 216, 217, 218, 219, 237, 240, 245, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 305, 306, 307, 308, 309, 310, 311, 314, 316, 318, 319, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 418, 419, 420, 421, 423, 424, 426, 429, 430, 432, 434, 438, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 463, 464, 468, 469, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 524, 525, 526, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 554, 555, 556, 559, 562, 563, 565, 566, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 584, 585, 586, 588, 589, 590, 591, 592, 593, 595, 596, 598, 599, 602, 603, 604, 607, 608, 609, 610, 612, 614, 615, 616, 617, 618, 619, 621, 622, 623, 625, 626, 627, 629, 630, 631, 632, 633, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 652, 656, 657, 659, 660, 661, 662, 671, 672, 673, 674, 676, 678, 679, 680, 681, 682, 683, 684, 695, 696, 697, 698, 699, 701, 703, 704, 705, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 725, 726, 727, 730, 731, 735, 736, 738, 739, 740, 741, 744, 745, 746, 751, 755, 756, 764, 771, 772, 773, 780, 781, 784, 787, 788, 789, 790, 791, 794, 795, 796, 798, 799, 800, 801, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 818, 819, 820, 821, 825, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 847, 863, 864, 866, 867, 871, 876, 888], "luessi": [35, 47, 104, 245, 862, 888], "mluessi": [35, 47, 104], "nmr": [35, 43, 47, 104, 114, 155, 216, 272, 276, 280, 369, 814, 870], "mgh": [35, 43, 47, 58, 104, 114, 155, 170, 216, 272, 276, 280, 330, 369, 657, 814, 858, 864, 870, 876, 888], "harvard": [35, 43, 47, 58, 104, 114, 155, 256, 272, 276, 280, 369, 814, 870, 875], "daniel": [35, 40, 46, 58, 59, 92, 127, 209, 245, 276, 478, 479, 862, 875, 888], "strohmeier": [35, 40, 46, 59, 92, 245, 478, 479, 862, 888], "tu": [35, 40, 46, 59, 92], "ilmenau": [35, 40, 46, 59, 92, 256, 875], "de": [35, 40, 46, 59, 92, 99, 112, 195, 196, 213, 242, 245, 256, 419, 563, 578, 863, 875, 888], "gamma_map": [35, 878, 888], "make_stc_from_dipol": [35, 40, 46, 59, 878, 888], "plot_dipole_loc": [35, 40, 51, 59, 60, 178, 183, 185, 878, 888], "plot_dipole_amplitud": [35, 40, 51, 59, 60, 878], "evoked_fnam": [35, 51, 60, 90, 95, 265, 266, 267, 268, 481, 482], "50e": [35, 92, 151, 204], "300e": 35, "xyz_same_gamma": [35, 476, 888], "return_residu": [35, 40, 46, 51, 59, 60, 177, 301, 303, 476, 478, 479, 530, 888], "return_as_dipol": [35, 40, 46, 59, 476, 478, 479, 888], "converg": [35, 40, 46, 59, 172, 179, 205, 476, 530, 563, 715, 726, 870, 888], "055e": 35, "22233": 35, "856e": 35, "20712": 35, "375e": 35, "17166": 35, "061e": 35, "12996": 35, "273e": 35, "10107": 35, "574e": 35, "8307": 35, "319e": 35, "7209": 35, "369e": 35, "6342": 35, "631e": 35, "5694": 35, "047e": 35, "5142": 35, "579e": 35, "4692": 35, "199e": 35, "4287": 35, "889e": 35, "4002": [35, 870], "634e": 35, "3696": 35, "422e": 35, "3429": 35, "246e": 35, "3153": 35, "099e": 35, "2952": [35, 162], "747e": 35, "2745": 35, "702e": 35, "817e": 35, "2394": [35, 195], "062e": 35, "417e": 35, "2067": 35, "883e": 35, "711e": 35, "1836": 35, "552e": 35, "400e": 35, "1617": 35, "266e": 35, "1509": [35, 227], "166e": 35, "1440": 35, "066e": 35, "1350": 35, "965e": 35, "861e": 35, "1200": [35, 196, 223], "754e": 35, "1128": 35, "643e": 35, "1077": [35, 58, 245, 276, 545, 668], "529e": 35, "1017": [35, 195, 245], "410e": 35, "975": [35, 74, 137, 139, 232], "288e": 35, "924": [35, 209, 232], "163e": 35, "873": [35, 232], "036e": 35, "837": [35, 232], "906e": 35, "798": [35, 144, 232], "776e": 35, "644e": 35, "705": [35, 196, 232], "513e": 35, "687": [35, 62, 195, 196], "382e": 35, "253e": 35, "627": [35, 196, 232], "125e": 35, "600": [35, 40, 58, 59, 72, 75, 81, 83, 90, 93, 126, 127, 134, 155, 156, 160, 167, 168, 178, 179, 180, 184, 191, 199, 200, 203, 206, 207, 208, 209, 210, 212, 216, 217, 218, 219, 224, 232, 245, 479, 756, 888], "000e": 35, "588": 35, "877e": 35, "570": [35, 81, 196, 232], "758e": 35, "552": [35, 232], "642e": 35, "528": [35, 56, 143, 232], "495": [35, 82, 222, 227, 232], "421e": 35, "486": [35, 143, 209, 232], "316e": 35, "465": [35, 203, 232], "215e": 35, "441": [35, 91, 95, 232, 245, 563, 593], "118e": 35, "417": [35, 119, 162, 209, 227, 232, 245, 563, 593, 773], "026e": 35, "408": [35, 75, 81, 85, 185, 232], "937e": 35, "402": [35, 81, 144, 232, 873], "853e": 35, "387": [35, 81, 91, 93, 209, 232, 245, 298], "772e": 35, "378": [35, 81, 232], "695e": 35, "348": [35, 169, 196, 202, 209, 888], "622e": 35, "486e": 35, "423e": 35, "306e": 35, "252e": 35, "201e": 35, "152e": 35, "106e": 35, "020e": 35, "807e": 35, "234": [35, 112, 169, 196, 209, 227, 231], "432e": 35, "222": [35, 46, 112, 169, 191, 195, 209, 231, 232, 237], "074e": 35, "219": [35, 41, 115, 130, 169, 227, 231, 232, 888], "735e": 35, "413e": 35, "207": [35, 112, 114, 158, 169, 227, 231, 232, 245], "814e": 35, "198": [35, 169, 184, 209, 227, 231, 237], "536e": 35, "192": [35, 158, 164, 169, 171, 176, 187, 209, 227], "271e": 35, "186": [35, 45, 144, 169, 176, 179, 181, 196, 209, 227, 231, 232], "019e": 35, "778e": 35, "174": [35, 126, 156, 164, 169, 209, 231, 232, 245, 278], "549e": 35, "168": [35, 45, 129, 130, 169, 176, 181, 209, 227, 231, 232, 237], "122e": 35, "159": [35, 114, 129, 130, 149, 169, 231, 232], "922e": 35, "156": [35, 45, 91, 93, 140, 169, 176, 181, 183, 187, 209, 231, 232, 278], "732e": 35, "550e": 35, "138": [35, 166, 169, 196, 232, 245, 278, 568, 888], "896e": 35, "749e": 35, "609e": 35, "126": [35, 56, 96, 169, 181, 187, 227, 231, 232], "344e": 35, "123": [35, 56, 123, 169, 205, 207, 232, 347], "220e": 35, "104": [35, 62, 169, 196, 227, 232, 245, 668, 873, 888], "101e": 35, "117": [35, 62, 145, 169, 196, 209, 227, 232, 245, 737, 740, 888], "986e": 35, "875e": 35, "769e": 35, "667e": 35, "473e": 35, "209e": 35, "126e": 35, "115": [35, 45, 50, 56, 62, 84, 94, 169, 183, 196, 209, 232, 245, 571], "689e": 35, "500e": 35, "441e": 35, "384e": 35, "329e": 35, "127": [35, 39, 55, 56, 158, 169, 209, 232], "275e": 35, "985e": 35, "137": [35, 51, 56, 169, 171, 231, 232, 278], "154": [35, 137, 168, 169, 227, 231, 232], "155": [35, 148, 169, 196, 231, 232, 242, 888], "247e": 35, "650e": 35, "177": [35, 145, 169, 196, 227, 231, 232, 245, 695, 696, 698, 699], "117e": 35, "179": [35, 76, 169, 196, 209, 227, 232, 245, 602, 870], "815e": 35, "524e": 35, "211": [35, 41, 59, 85, 88, 145, 169, 231, 232], "307e": 35, "226": [35, 112, 144, 169, 184, 196, 209, 227, 231, 232, 888], "274e": 35, "042e": 35, "161e": 35, "784e": 35, "340": [35, 51, 81, 82, 123, 169, 190, 191, 194, 209, 245, 301, 888], "169e": 35, "343": [35, 112, 143, 169, 170, 196, 209, 227, 888], "949e": 35, "886e": 35, "420": [35, 81, 232], "reach": [35, 40, 46, 59, 172, 242, 258, 265, 266, 267, 268, 481, 482, 664, 708, 710, 712, 715, 726, 736, 739, 753, 788, 795, 816, 888], "dip": [35, 40, 59, 84, 116, 176, 181, 183, 184, 185, 211, 242, 263, 456, 617, 888], "mri_head_t": [35, 40, 51, 59, 60, 181, 269, 270, 474, 475, 873], "fig_nam": [35, 40, 46, 59, 815], "david": [35, 42, 119, 126, 129, 195, 202, 240, 245, 265, 266, 267, 268, 356, 390, 419, 476, 481, 482, 531, 710, 712, 720, 726, 737, 740, 773, 870, 888], "wipf": [35, 245, 476], "srikantan": [35, 224, 245, 298, 299, 476], "nagarajan": [35, 224, 245, 298, 299, 476], "unifi": [35, 137, 180, 202, 245, 476, 668, 888], "966": [35, 42, 129, 162, 172, 195, 198, 205, 207, 232, 245, 476], "059": [35, 140, 142, 149, 169, 200, 216, 224, 245, 476], "771": [35, 56, 232], "gamma_map_invers": [35, 56], "form": [37, 141, 143, 160, 168, 175, 178, 199, 202, 204, 205, 206, 210, 227, 229, 232, 235, 262, 265, 266, 267, 268, 270, 272, 273, 274, 276, 279, 280, 281, 337, 413, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 448, 476, 478, 479, 481, 482, 515, 524, 530, 532, 533, 534, 562, 563, 564, 572, 578, 595, 638, 641, 657, 658, 659, 660, 661, 673, 695, 696, 698, 699, 708, 710, 711, 712, 720, 773, 788, 790, 795, 799, 808, 811, 816, 818, 836, 841, 847, 866, 867, 869, 870, 873, 888], "merg": [37, 141, 217, 218, 260, 265, 267, 268, 355, 455, 500, 528, 649, 657, 847, 869, 888], "christian": [37, 120, 126, 134, 144, 245, 390, 391, 413, 437, 668, 862, 864, 888], "brodbeck": [37, 120, 134, 245, 862, 888], "christianbrodbeck": [37, 120, 134], "read_source_estim": [37, 43, 53, 116, 127, 134, 175, 181, 236, 878, 888], "aud_lh": 37, "aud_rh": 37, "stc_lh": [37, 47], "stc_rh": [37, 47], "stc_bh": 37, "calcul": [37, 38, 58, 81, 101, 112, 128, 144, 150, 151, 158, 162, 166, 170, 176, 180, 188, 195, 201, 202, 205, 207, 212, 216, 227, 228, 232, 241, 260, 265, 266, 267, 268, 272, 273, 275, 276, 279, 280, 281, 298, 299, 306, 320, 356, 360, 361, 371, 372, 373, 413, 420, 421, 448, 456, 457, 470, 476, 478, 479, 481, 482, 519, 524, 525, 526, 541, 563, 570, 575, 576, 580, 584, 595, 599, 615, 625, 637, 673, 687, 695, 696, 698, 699, 701, 702, 709, 720, 727, 796, 801, 810, 843, 867, 873, 888], "mass": [37, 165, 227, 228, 233, 234, 265, 270, 271, 276, 481, 560, 622, 657, 665, 671, 674, 689, 691, 692, 696, 711, 738, 746, 885, 888], "mni": [37, 135, 136, 159, 176, 181, 182, 190, 263, 280, 281, 314, 330, 369, 474, 639, 748, 755, 756, 820, 870, 888], "vtx": 37, "t_lh": 37, "center_of_mass": [37, 223, 271, 276, 671, 674, 888], "mni_lh": 37, "vertex_to_mni": [37, 271, 276, 878], "t_rh": 37, "mni_rh": 37, "275": [37, 46, 112, 123, 145, 148, 166, 169, 170, 191, 227, 232, 245, 340, 413, 864, 870], "625": [37, 143, 232], "hl": 37, "hr": 37, "hb": 37, "figlegend": 37, "label_activation_from_stc": [37, 56], "typic": [38, 44, 61, 71, 83, 143, 145, 149, 151, 156, 160, 167, 168, 170, 188, 191, 192, 196, 199, 200, 202, 204, 205, 206, 207, 208, 210, 212, 218, 227, 242, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 279, 280, 281, 298, 299, 314, 315, 333, 344, 346, 356, 360, 361, 362, 364, 420, 431, 456, 466, 469, 481, 482, 543, 562, 563, 565, 573, 578, 596, 606, 609, 619, 657, 679, 693, 694, 695, 696, 698, 699, 708, 711, 756, 794, 803, 807, 809, 843, 846, 847, 853, 864, 865, 867, 869, 870, 888], "anatom": [38, 44, 71, 94, 135, 156, 160, 176, 181, 245, 263, 280, 281, 367, 465, 756, 774, 778, 820, 843, 870, 888], "yield": [38, 140, 142, 145, 149, 151, 155, 161, 171, 180, 192, 203, 205, 216, 217, 242, 260, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 320, 430, 434, 563, 566, 573, 574, 584, 595, 621, 660, 661, 700, 724, 734, 735, 736, 738, 739, 756, 843, 865, 867, 870, 888], "peak": [38, 54, 55, 61, 71, 73, 75, 82, 90, 94, 95, 127, 132, 145, 149, 150, 166, 172, 175, 177, 178, 180, 183, 184, 185, 191, 199, 201, 204, 205, 207, 209, 211, 227, 242, 257, 260, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 361, 545, 563, 565, 568, 575, 576, 580, 581, 584, 585, 586, 588, 589, 590, 604, 665, 694, 708, 786, 791, 793, 794, 795, 863, 870, 888], "banksst": [38, 41, 47], "aparc_label_nam": 38, "stc_mean": 38, "grow": [38, 90, 95, 242, 471, 515, 612, 854, 869], "halt": [38, 142, 263, 265, 266, 267, 268, 472, 473, 481, 482, 563, 710, 712, 784, 786, 803, 809, 812, 853, 888], "read_labels_from_annot": [38, 41, 47, 69, 90, 94, 95, 126, 223, 549, 629, 838, 878, 888], "parc": [38, 41, 47, 630, 838], "aparc": [38, 41, 47, 69, 90, 94, 95, 126, 135, 155, 176, 181, 223, 263, 272, 273, 276, 279, 280, 281, 387, 447, 465, 517, 630, 645, 756, 843, 888], "regexp": [38, 90, 94, 95, 200, 205, 207, 212, 442, 557, 630, 888], "stc_mean_label": 38, "func_label": 38, "stc_to_label": [38, 878, 888], "maximum": [38, 47, 48, 50, 58, 83, 115, 119, 151, 176, 177, 181, 182, 201, 202, 205, 216, 245, 260, 265, 266, 267, 268, 272, 273, 276, 278, 279, 280, 281, 298, 299, 328, 344, 367, 421, 446, 447, 450, 471, 476, 478, 479, 481, 482, 515, 523, 530, 539, 540, 545, 563, 565, 580, 590, 593, 594, 673, 695, 696, 698, 699, 704, 708, 713, 714, 715, 716, 717, 718, 719, 720, 722, 724, 726, 734, 737, 738, 740, 756, 780, 785, 791, 794, 814, 819, 820, 843, 870, 888], "anat_label": 38, "stc_anat_label": 38, "pca_anat": 38, "extract_label_time_cours": [38, 39, 41, 181, 272, 273, 276, 279, 280, 281, 517, 878, 888], "pca_flip": [38, 39, 272, 273, 276, 279, 280, 281, 447], "stc_func_label": 38, "pca_func": 38, "show_view": [38, 48, 109, 116, 135, 160, 181, 190, 211, 224, 237, 272, 273, 276, 279, 280, 281, 756, 814, 819, 888], "add_label": [38, 59, 104, 116, 126, 756], "73227205": 38, "80078852": 38, "62750681": 38, "915": [38, 56, 106, 112, 196, 232], "label_from_stc": [38, 56], "strategi": [39, 196, 199, 205, 207, 208, 245, 355, 367, 418, 430, 478, 668, 726, 788, 867], "simpl": [39, 46, 128, 144, 145, 151, 160, 161, 166, 181, 195, 196, 202, 206, 224, 227, 242, 245, 257, 326, 355, 413, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 498, 564, 724, 734, 804, 847, 864, 870, 888], "patheffect": [39, 160], "path_effect": [39, 160], "label_fnam": 39, "stc_label": 39, "mean_flip": [39, 272, 273, 276, 279, 280, 281, 447, 888], "tc": 39, "pe": 39, "stroke": [39, 160], "foreground": [39, 142, 160, 272, 273, 276, 279, 280, 281, 756, 814, 819, 888], "possibl": [39, 43, 45, 114, 137, 140, 142, 143, 145, 149, 150, 151, 156, 160, 161, 168, 169, 170, 171, 172, 178, 180, 188, 190, 192, 196, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 212, 216, 217, 218, 219, 222, 224, 227, 231, 232, 240, 242, 259, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 328, 356, 413, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 430, 436, 454, 464, 472, 481, 482, 489, 506, 563, 564, 602, 603, 621, 622, 652, 690, 695, 697, 708, 709, 712, 742, 772, 782, 790, 791, 794, 799, 802, 803, 810, 845, 852, 864, 865, 867, 869, 870, 873, 874, 888], "vectorsourceestim": [39, 61, 175, 272, 273, 276, 277, 280, 281, 293, 294, 476, 478, 479, 530, 531, 532, 533, 534, 539, 540, 635, 819, 820, 843, 878, 888], "stc_vec": [39, 41, 180], "stc_vec_label": 39, "ee6677": [39, 160, 724, 734], "228833": 39, "4477aa": [39, 724, 734], "xyz": [39, 156, 160, 178, 272, 273, 276, 279, 280, 281, 314, 332, 447, 476, 506, 826, 888], "zorder": [39, 160, 267, 268, 724, 734, 790, 793, 888], "label_source_activ": [39, 56], "ir": 40, "l0": [40, 478], "sparser": [40, 272, 276, 280, 814], "convex": [40, 46, 59, 245, 262, 265, 266, 267, 268, 274, 413, 420, 481, 482, 562, 563, 578, 708, 710, 712, 773, 788, 795, 799, 808, 811, 816, 818, 888], "mixed_norm": [40, 175, 479, 878, 888], "sure": [40, 43, 45, 68, 71, 109, 113, 135, 140, 141, 144, 151, 156, 161, 162, 166, 170, 171, 172, 176, 189, 200, 203, 204, 205, 207, 210, 216, 231, 235, 236, 237, 257, 267, 268, 444, 445, 478, 493, 547, 562, 573, 703, 724, 734, 735, 736, 738, 793, 834, 845, 846, 847, 855, 888], "criterion": [40, 530, 888], "n_mxne_it": [40, 478], "use_cp": [40, 92, 158, 223, 273, 279, 281, 285, 286, 366, 530, 531, 532, 533, 534, 537, 541, 546, 547, 672, 673, 870, 888], "maxit": [40, 59, 476, 478, 479], "3000": [40, 49, 113, 137, 142, 145, 146, 192, 201, 207, 212, 257, 478, 479], "active_set_s": [40, 478], "debia": [40, 59, 478, 479], "slower": [40, 44, 46, 202, 260, 265, 365, 412, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 522, 533, 603, 847, 876], "sure_alpha_grid": [40, 478], "083": [40, 54, 56, 124], "tidx": [40, 181], "7262": [40, 58, 59, 94, 178, 196, 224], "020866": [40, 58, 196], "58122e": [40, 58, 59, 94, 178, 196, 224], "element": [40, 58, 90, 168, 172, 178, 179, 182, 191, 196, 202, 206, 207, 216, 218, 227, 229, 245, 259, 262, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 278, 279, 280, 281, 324, 325, 413, 420, 425, 434, 435, 447, 448, 468, 481, 482, 517, 518, 519, 562, 578, 595, 657, 688, 696, 708, 710, 712, 761, 773, 775, 780, 788, 795, 808, 811, 814, 816, 818, 819, 820, 843, 847, 853, 868, 869, 873, 888], "21995": 40, "82623e": 40, "360": [40, 48, 49, 54, 55, 58, 59, 81, 82, 93, 94, 121, 152, 162, 169, 172, 176, 178, 187, 191, 209, 227, 232, 241], "warm": 40, "33333333333333": 40, "66666666666667": 40, "66666666666666": 40, "666666666666664": 40, "60279": 40, "6036917851": 40, "59855": 40, "33381591424": 40, "60434": 40, "8708663271": 40, "60386": 40, "806545232204": 40, "60336": 40, "58240550615": 40, "60303": 40, "83155507343": 40, "60157": 40, "01344242948": 40, "59974": 40, "67525570807": 40, "59597": 40, "86913656531": 40, "59084": 40, "52688073421": 40, "compute_source_morph": [40, 43, 44, 134, 158, 160, 180, 181, 235, 236, 237, 272, 276, 277, 280, 281, 632, 814, 820, 863, 878, 888], "subject_from": [40, 43, 44, 180, 271, 277, 362, 549, 550, 632, 644, 645, 646, 647, 863], "stc_fsaverag": [40, 43, 44, 863], "src_fsaverage_fnam": 40, "src_fsaverag": 40, "matthieu": [40, 59, 245, 478, 479], "kowalski": [40, 59, 245, 478, 479], "acceler": [40, 245, 478, 853, 867, 870, 888], "gradient": [40, 119, 212, 245, 260, 265, 266, 267, 268, 270, 478, 480, 481, 482, 525, 563, 577, 708, 710, 711, 712, 773, 888], "physic": [40, 156, 160, 170, 176, 178, 189, 210, 245, 267, 268, 270, 434, 446, 478, 481, 482, 530, 574, 584, 595, 790, 843, 870, 873, 888], "medicin": [40, 83, 176, 210, 245, 478, 563, 595, 870], "biologi": [40, 83, 176, 210, 245, 478, 563, 595, 870], "1937": [40, 245, 478], "1961": [40, 245, 478], "2012": [40, 59, 151, 169, 202, 227, 245, 271, 276, 283, 356, 478, 479, 701, 702, 876], "1088": [40, 176, 195, 208, 210, 245, 265, 266, 267, 268, 419, 478, 481, 482, 595, 652, 870], "0031": [40, 176, 210, 245, 478, 595, 870], "9155": [40, 176, 210, 245, 478, 595, 870], "jen": [40, 46, 59, 245, 478, 479, 888], "haueisen": [40, 46, 59, 245, 478, 479], "improv": [40, 71, 144, 195, 196, 204, 207, 212, 245, 265, 266, 267, 268, 307, 343, 345, 349, 372, 373, 415, 424, 449, 451, 452, 453, 481, 482, 541, 564, 603, 606, 665, 670, 736, 739, 847, 863, 865, 866, 867, 888], "prni": [40, 46, 245, 479], "t\u00fcbingen": [40, 245], "6858545": [40, 245], "charl": [40, 44, 245, 277, 362, 478], "alban": [40, 245, 478], "deledal": [40, 245, 478], "samuel": [40, 94, 95, 245, 478, 888], "vaiter": [40, 245, 478], "jalal": [40, 245, 478], "fadili": [40, 245, 478], "peyr\u00e9": [40, 245, 478], "stein": [40, 245, 478], "unbias": [40, 245, 478], "risk": [40, 181, 202, 205, 231, 245, 265, 266, 267, 268, 478, 481, 482, 584, 756], "sugar": [40, 245, 478], "siam": [40, 245, 478], "journal": [40, 43, 71, 72, 75, 119, 157, 196, 202, 210, 232, 240, 245, 265, 266, 267, 268, 277, 356, 362, 434, 478, 481, 482, 563, 571, 572, 574, 595, 668, 695, 696, 698, 699, 710, 712, 720, 724, 726, 734, 735, 737, 738, 740, 773, 862], "2448": [40, 245, 478], "2487": [40, 245, 478], "1137": [40, 209, 245, 478], "140968045": [40, 245, 478], "392": [40, 56, 81, 227, 232], "mixed_norm_invers": [40, 56], "annalisa": [41, 888], "pascarella": [41, 888], "iac": 41, "cnr": 41, "dir": [41, 171, 257, 756, 870, 873], "data_dir": [41, 57, 134, 144], "bem_dir": [41, 45, 109, 159, 161, 182], "fname_mixed_src": 41, "fname_aseg": [41, 181], "fname_model": 41, "_audvi": 41, "_audvis_raw": [41, 157], "substructur": 41, "labels_vol": 41, "amygdala": 41, "thalamu": 41, "proper": [41, 71, 227, 242, 266, 267, 268, 271, 298, 299, 356, 360, 361, 367, 371, 372, 373, 375, 413, 420, 456, 457, 476, 478, 479, 482, 541, 767, 796, 847, 864, 876, 888], "stem": [41, 73, 213, 276, 280, 488, 508], "oct6": [41, 109, 158, 257, 272, 276, 280, 647, 656, 814, 863], "oct5": [41, 109, 863], "bound": [41, 158, 262, 265, 266, 267, 268, 272, 273, 274, 276, 279, 280, 281, 413, 420, 457, 481, 482, 562, 563, 657, 708, 709, 710, 712, 726, 744, 771, 773, 775, 780, 788, 795, 799, 808, 809, 810, 811, 814, 816, 818, 819, 820, 870, 873, 888], "10mm": 41, "someth": [41, 127, 149, 161, 171, 172, 191, 202, 207, 208, 216, 272, 273, 276, 279, 280, 281, 756, 757, 814, 819, 843, 846, 847, 850, 851, 852, 854, 888], "vol_src": [41, 135, 158], "add_interpol": [41, 50, 158, 657], "usual": [41, 50, 71, 83, 112, 114, 140, 143, 145, 149, 150, 151, 155, 156, 160, 161, 166, 167, 168, 170, 172, 180, 183, 188, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 216, 217, 218, 219, 235, 237, 240, 241, 257, 263, 264, 265, 266, 267, 268, 269, 270, 278, 305, 327, 332, 337, 339, 341, 464, 481, 482, 506, 673, 695, 696, 698, 699, 843, 847, 848, 850, 853, 855, 867, 870, 873], "nuse": [41, 270, 278, 873], "2562": [41, 109, 150, 158, 863], "node": [41, 47, 158, 682, 683, 684, 761, 873, 888], "4590": 41, "2961": 41, "346": [41, 144, 169, 195, 209, 232], "1275": 41, "2615": 41, "1340": 41, "1589": 41, "725": [41, 71, 196, 209, 232], "1372": 41, "1306": [41, 209], "010000": [41, 156], "2169": 41, "write_source_spac": [41, 637, 863, 878, 888], "again": [41, 141, 142, 144, 150, 151, 155, 156, 161, 172, 196, 199, 200, 202, 204, 205, 206, 207, 216, 227, 232, 242, 265, 266, 267, 268, 275, 481, 482, 563, 603, 807, 834, 846, 869, 870, 888], "plot_img": 41, "nipy_spectr": 41, "exist": [41, 44, 99, 101, 127, 140, 143, 149, 150, 156, 161, 170, 171, 172, 176, 180, 201, 202, 203, 206, 207, 208, 218, 222, 227, 229, 257, 259, 262, 263, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 280, 281, 289, 309, 310, 311, 314, 315, 374, 379, 380, 381, 382, 384, 385, 386, 388, 389, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 435, 439, 443, 444, 445, 446, 448, 465, 481, 482, 483, 496, 500, 514, 548, 550, 552, 562, 563, 566, 573, 596, 615, 625, 645, 646, 649, 652, 653, 654, 658, 660, 661, 678, 679, 682, 708, 709, 710, 711, 712, 741, 744, 756, 779, 795, 810, 830, 831, 832, 833, 834, 835, 836, 838, 839, 840, 841, 842, 847, 855, 863, 864, 867, 869, 874, 876, 888], "5mm": [41, 84, 135, 433, 756], "innerskul": 41, "815": [41, 209, 232], "457": [41, 209, 232], "6003": 41, "inv_method": [41, 90], "a2009": [41, 94, 135, 155, 176, 272, 273, 276, 279, 280, 281, 447, 517, 630], "39266": 41, "01344e": 41, "coron": [41, 135, 158, 160, 180, 263, 756, 774, 784], "silhouett": [41, 180, 181, 272, 273, 276, 279, 280, 281, 756, 814, 819, 888], "43101017": 41, "98225664": 41, "7504814": 41, "45409596": 41, "02821047": 41, "97219252": 41, "vox": [41, 160, 180, 181, 182], "2045": 41, "21567156": 41, "47889133": 41, "39837939": 41, "labels_parc": 41, "label_t": 41, "allow_empti": [41, 272, 273, 276, 279, 280, 281, 447], "nam": [41, 93, 94, 95, 183, 184, 224, 674, 888], "332": [41, 51, 169, 191, 195, 209, 227, 245, 301], "mixed_source_space_invers": [41, 56], "computation": [42, 172, 202, 205, 206, 603, 870, 876], "sabbagh": [42, 245, 531, 888], "pierr": [42, 77, 205, 245, 531, 563, 888], "ablin": [42, 77, 205, 245, 531, 563, 888], "ga\u00ebl": [42, 245, 531], "varoquaux": [42, 245, 531], "state": [42, 90, 93, 109, 126, 140, 162, 166, 168, 175, 199, 200, 207, 208, 217, 222, 227, 242, 245, 258, 260, 265, 266, 351, 437, 478, 497, 515, 522, 531, 563, 593, 612, 613, 618, 619, 660, 661, 662, 671, 672, 674, 695, 696, 697, 698, 699, 708, 710, 711, 756, 799, 843, 845, 847, 855, 869, 870, 873, 876, 888], "2020": [42, 75, 144, 157, 245, 391, 531, 563, 864], "116893": [42, 245, 531], "alexand": [42, 212, 245, 577, 864, 888], "captur": [42, 46, 137, 144, 166, 172, 183, 184, 196, 204, 205, 206, 207, 208, 270, 275, 457, 562, 575, 576, 580, 609, 610, 843, 888], "environ": [42, 43, 44, 155, 172, 175, 263, 271, 272, 273, 275, 276, 278, 279, 280, 281, 305, 309, 310, 311, 314, 362, 367, 368, 369, 374, 379, 380, 381, 382, 384, 385, 386, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 432, 461, 463, 465, 469, 471, 472, 473, 474, 475, 515, 519, 521, 549, 550, 591, 612, 630, 632, 639, 644, 645, 646, 647, 651, 654, 656, 657, 671, 674, 685, 703, 704, 748, 755, 756, 772, 774, 784, 814, 819, 820, 822, 838, 845, 846, 850, 851, 852, 853, 855, 863, 867, 870, 888], "raw_empty_room_fnam": [42, 162], "ernoise_raw": [42, 129, 162, 172, 207], "raw_empty_room": [42, 162], "compute_raw_covari": [42, 88, 109, 162, 184, 191, 201, 262, 356, 616, 754, 863, 878, 888], "19800": [42, 129, 162, 172, 207], "85867": [42, 129, 162, 172, 207], "142": [42, 83, 129, 162, 166, 169, 172, 174, 207, 278, 888], "965": [42, 129, 162, 172, 207, 232], "18000": 42, "249": [42, 46, 85, 112, 151, 169, 196, 209, 231, 232, 245], "environment": [42, 166, 199, 203, 206, 208, 210, 216, 218, 219, 863], "rest": [42, 71, 74, 109, 126, 137, 140, 162, 166, 168, 169, 217, 245, 265, 266, 267, 268, 276, 375, 395, 481, 482, 652, 661, 843, 847, 869, 871, 876, 888], "base_cov": 42, "data_cov": [42, 180, 295, 299], "fig_noise_cov": 42, "plot_cov": [42, 177, 878, 888], "show_svd": [42, 65, 262, 781], "fig_base_cov": 42, "fig_data_cov": 42, "1680": 42, "_cov": 42, "_kw": 42, "7265": [42, 177, 179], "037795": [42, 177], "52065e": [42, 177, 179], "40105": 42, "62956e": 42, "stc_data": [42, 94, 675], "11859103": 42, "45698488": 42, "03713927": 42, "mne_cov_pow": [42, 56], "pre": [43, 49, 140, 141, 162, 166, 180, 201, 202, 205, 216, 222, 265, 266, 267, 268, 356, 481, 482, 563, 649, 652, 847, 848, 852, 859, 888], "spheric": [43, 72, 79, 151, 156, 170, 183, 184, 185, 200, 207, 210, 245, 262, 265, 266, 267, 268, 271, 274, 276, 277, 314, 330, 332, 362, 413, 420, 434, 481, 482, 526, 562, 563, 572, 573, 574, 577, 578, 584, 595, 657, 671, 674, 685, 689, 708, 710, 712, 756, 773, 780, 788, 790, 792, 795, 796, 799, 806, 808, 810, 811, 812, 816, 818, 870, 888], "surfer": [43, 155, 272, 276, 280, 369, 756, 814, 870], "fswiki": [43, 155, 272, 276, 280, 369, 814, 870], "surfaceregandtempl": 43, "depict": [43, 267, 268, 273, 279, 281, 796, 819, 870], "success": [43, 144, 257, 265, 266, 272, 273, 276, 277, 279, 280, 281, 362, 479, 539, 540, 593, 658, 695, 696, 698, 699, 710, 711, 723, 731, 746, 777, 847], "inflat": [43, 48, 49, 54, 55, 59, 61, 126, 135, 151, 175, 191, 245, 272, 276, 280, 412, 756, 772, 814, 853, 870, 888], "overlaid": [43, 44, 136, 172, 257, 657, 870, 888], "tommi": [43, 44, 888], "clausner": [43, 44, 888], "sample_dir": [43, 44, 116, 158, 172, 175], "fname_src": [43, 135, 159, 182], "fname_fsaverage_src": 43, "fname_stc": [43, 127, 175, 181], "repres": [43, 71, 75, 81, 115, 119, 140, 141, 142, 143, 144, 149, 151, 156, 158, 161, 162, 166, 168, 169, 170, 171, 175, 189, 195, 202, 205, 219, 245, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 278, 279, 280, 281, 298, 299, 356, 360, 361, 371, 372, 373, 413, 420, 447, 456, 457, 476, 478, 479, 481, 482, 497, 503, 506, 515, 529, 541, 563, 578, 619, 621, 696, 708, 711, 756, 773, 796, 799, 801, 803, 814, 815, 819, 843, 847, 863, 867, 870, 873, 888], "itself": [43, 71, 143, 151, 160, 172, 188, 202, 205, 206, 207, 218, 227, 259, 265, 266, 271, 276, 279, 309, 446, 481, 482, 550, 756, 845, 847, 867, 870, 873], "proxim": [43, 135, 269, 703, 888], "src_orig": [43, 276, 279], "3732": [43, 175], "3766": 43, "src_to": [43, 44, 180, 362, 888], "argument": [43, 44, 120, 151, 155, 161, 162, 169, 170, 172, 180, 188, 189, 190, 191, 192, 201, 202, 203, 206, 210, 213, 216, 227, 231, 237, 241, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 305, 306, 307, 308, 309, 310, 311, 314, 316, 318, 319, 321, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 418, 419, 423, 424, 426, 429, 430, 432, 434, 438, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 463, 464, 468, 469, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 517, 518, 519, 520, 521, 522, 524, 525, 526, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 554, 555, 556, 558, 559, 563, 565, 566, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 584, 585, 586, 588, 589, 590, 591, 592, 593, 595, 596, 598, 599, 602, 603, 604, 607, 608, 609, 610, 614, 615, 616, 617, 618, 619, 621, 622, 623, 625, 626, 627, 629, 630, 631, 632, 633, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 652, 656, 657, 659, 660, 661, 662, 672, 673, 676, 678, 679, 680, 681, 682, 683, 684, 690, 695, 696, 697, 698, 699, 703, 704, 705, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 725, 726, 727, 730, 731, 735, 736, 738, 739, 740, 741, 744, 745, 746, 751, 752, 753, 754, 755, 756, 757, 764, 771, 772, 776, 778, 781, 784, 787, 788, 789, 790, 791, 793, 796, 799, 800, 801, 806, 807, 808, 809, 810, 812, 813, 814, 815, 817, 819, 820, 821, 825, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 863, 873, 876, 888], "special": [43, 160, 169, 206, 216, 242, 373, 489, 496, 851, 869, 870, 876, 888], "alwai": [43, 74, 143, 144, 149, 151, 160, 167, 168, 169, 175, 190, 199, 201, 202, 203, 204, 205, 206, 207, 208, 213, 216, 222, 227, 242, 263, 265, 266, 270, 272, 273, 275, 276, 278, 279, 280, 281, 320, 437, 447, 513, 563, 584, 625, 627, 695, 709, 764, 774, 784, 785, 815, 817, 826, 835, 843, 847, 870, 873, 874, 888], "10239": 43, "10240": 43, "10241": 43, "give": [43, 44, 59, 71, 75, 95, 142, 152, 161, 168, 171, 180, 182, 196, 200, 202, 203, 206, 227, 257, 262, 265, 266, 267, 268, 274, 278, 314, 413, 414, 415, 420, 424, 429, 430, 434, 449, 451, 452, 456, 478, 479, 481, 482, 497, 562, 563, 578, 584, 595, 613, 619, 694, 695, 696, 698, 699, 708, 710, 712, 720, 724, 734, 738, 756, 773, 780, 788, 790, 792, 795, 796, 799, 806, 808, 810, 811, 812, 816, 818, 843, 845, 847, 853, 863, 867, 869, 870, 873, 888], "surfer_kwarg": [43, 175, 177], "brain_inf": 43, "under": [43, 44, 61, 127, 143, 144, 162, 189, 196, 199, 202, 206, 223, 227, 229, 235, 265, 266, 267, 268, 271, 272, 273, 275, 276, 279, 280, 281, 283, 314, 326, 356, 357, 359, 361, 379, 380, 381, 382, 384, 385, 386, 393, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 416, 423, 426, 429, 430, 456, 469, 471, 481, 482, 493, 501, 521, 524, 525, 536, 537, 546, 547, 568, 575, 576, 578, 603, 620, 624, 656, 659, 660, 661, 669, 673, 693, 695, 696, 697, 698, 699, 710, 712, 713, 714, 715, 716, 717, 718, 726, 727, 735, 736, 737, 738, 739, 788, 791, 810, 847, 863, 869, 870, 876, 888], "h5": [43, 44, 172, 180, 224, 272, 273, 275, 276, 277, 279, 280, 281, 289, 562, 605, 708, 709, 711, 728, 730, 741, 830, 831, 888], "respect": [43, 44, 47, 55, 69, 72, 90, 132, 140, 144, 151, 156, 159, 168, 169, 172, 175, 188, 196, 200, 202, 205, 206, 208, 209, 216, 217, 232, 260, 262, 265, 266, 267, 268, 270, 274, 275, 276, 280, 281, 298, 299, 300, 337, 356, 360, 361, 367, 371, 372, 373, 413, 415, 420, 424, 437, 449, 451, 456, 457, 476, 478, 479, 481, 482, 487, 506, 515, 518, 526, 541, 562, 563, 564, 565, 567, 578, 580, 613, 621, 657, 665, 668, 670, 676, 696, 708, 710, 712, 727, 735, 736, 738, 739, 756, 772, 773, 777, 780, 786, 788, 790, 795, 796, 799, 800, 803, 808, 809, 811, 816, 818, 820, 847, 850, 853, 863, 867, 870, 873, 888], "my": [43, 44, 172, 182, 222], "read_source_morph": [43, 44, 277, 878], "further": [43, 141, 151, 157, 166, 168, 178, 188, 196, 201, 205, 207, 210, 216, 227, 232, 237, 242, 265, 266, 290, 292, 322, 367, 563, 567, 695, 696, 698, 699, 711, 771, 787, 859, 865, 869, 870, 888], "assign": [43, 45, 101, 103, 120, 136, 140, 143, 144, 151, 161, 168, 170, 175, 178, 188, 189, 192, 207, 210, 217, 222, 259, 265, 270, 275, 278, 471, 473, 489, 493, 496, 498, 504, 506, 515, 524, 563, 580, 581, 585, 586, 588, 589, 617, 651, 756, 778, 838, 863, 870, 873, 888], "chain": [43, 167, 196, 200, 216, 419, 865, 870], "handi": [43, 190, 205], "liner": 43, "shortest": [43, 156, 202, 265, 266, 267, 268, 415, 424, 449, 451, 452, 481, 482, 568], "dougla": [43, 245, 277, 362], "greve": [43, 245, 277, 362], "lise": [43, 245, 277, 362], "der": [43, 245, 277, 362, 870, 888], "haegen": [43, 245, 277, 362], "qing": [43, 245, 277, 362], "cai": [43, 245, 277, 362], "steven": [43, 58, 126, 144, 151, 202, 245, 276, 277, 362, 413, 541, 665, 670, 864, 888], "stufflebeam": [43, 58, 126, 245, 276, 277, 362, 541, 545, 665, 668, 670], "mert": [43, 245, 277, 362], "sabuncu": [43, 245, 277, 362], "bruce": [43, 94, 155, 245, 277, 362, 530, 870], "fischl": [43, 94, 155, 245, 277, 362, 530, 870], "marc": [43, 245, 277, 362], "brysbaert": [43, 245, 277, 362], "languag": [43, 151, 172, 202, 231, 237, 245, 262, 265, 266, 267, 268, 274, 275, 277, 362, 413, 420, 481, 482, 562, 563, 708, 710, 712, 788, 795, 799, 808, 811, 816, 851, 872, 888], "asymmetri": [43, 245, 277, 362], "1477": [43, 245, 277, 362], "1492": [43, 245, 277, 362, 863], "1162": [43, 209, 245, 277, 362, 563], "jocn_a_00405": [43, 245, 277, 362], "147": [43, 56, 75, 169, 196, 231, 232], "morph_surface_stc": [43, 56], "affin": [44, 156, 180, 182, 277, 362, 369, 592, 631, 639, 744, 745, 746, 843, 870, 888], "nonlinear": [44, 245, 694], "symmetr": [44, 202, 245, 265, 266, 267, 268, 272, 273, 276, 277, 279, 280, 281, 362, 448, 449, 451, 452, 481, 482, 592, 695, 696, 698, 699, 709, 720, 744, 745, 746, 756, 775, 814, 819, 820, 888], "diffeomorph": [44, 245, 277, 362, 592, 744, 745, 746, 888], "sdr": [44, 180, 277, 362, 592, 744, 745, 746, 888], "afterward": [44, 149, 265, 266, 267, 268, 481, 482, 652, 672, 888], "nibabel": [44, 156, 160, 171, 182, 278, 473, 474, 475, 590, 756, 846, 870, 888], "fetch_fsaverag": [44, 125, 135, 159, 180, 190, 864, 878, 888], "plot_glass_brain": [44, 182], "sample_dir_raw": [44, 175], "fname_t1_fsaverag": 44, "ensur": [44, 45, 83, 112, 144, 149, 159, 161, 162, 180, 202, 203, 206, 208, 210, 211, 224, 262, 265, 266, 267, 268, 270, 271, 272, 273, 276, 279, 280, 281, 322, 343, 356, 447, 448, 481, 482, 483, 527, 554, 555, 556, 566, 595, 596, 627, 708, 709, 710, 711, 712, 724, 725, 734, 738, 751, 845, 847, 869, 870, 888], "fname_src_fsaverag": 44, "root": [44, 82, 135, 136, 149, 150, 151, 159, 172, 180, 190, 224, 262, 267, 268, 272, 273, 276, 279, 280, 281, 298, 299, 382, 388, 405, 781, 790, 847, 870, 888], "txt": [44, 135, 159, 180, 183, 217, 218, 259, 332, 341, 388, 484, 488, 506, 613, 621, 622, 833, 845, 847, 867, 888], "zoom": [44, 71, 151, 160, 180, 205, 207, 277, 362, 746, 888], "reslic": [44, 180, 362, 746], "isotrop": [44, 870], "niter_affin": [44, 180, 277, 362, 888], "niter_sdr": [44, 180, 277, 362, 888], "999999888241291": 44, "translat": [44, 135, 156, 160, 180, 189, 210, 235, 257, 265, 266, 267, 268, 352, 367, 413, 420, 434, 492, 563, 567, 595, 708, 746, 756, 772, 787, 792, 795, 800, 803, 873, 888], "optim": [44, 59, 82, 142, 157, 160, 162, 179, 180, 201, 202, 205, 210, 227, 235, 236, 237, 245, 267, 268, 271, 356, 413, 456, 478, 481, 482, 563, 573, 595, 685, 737, 740, 746, 843, 867, 888], "r\u00b2": [44, 180], "rigid": [44, 180, 212, 746], "compute_vol_morph_mat": [44, 277, 362, 888], "equival": [44, 135, 141, 150, 156, 158, 160, 162, 165, 171, 186, 187, 189, 202, 205, 208, 223, 227, 240, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 279, 280, 281, 298, 299, 314, 355, 413, 419, 420, 453, 456, 457, 476, 478, 479, 481, 482, 524, 530, 541, 562, 563, 566, 568, 578, 584, 625, 654, 672, 695, 708, 710, 712, 724, 734, 738, 739, 746, 756, 772, 773, 780, 788, 790, 792, 795, 796, 799, 806, 808, 810, 811, 812, 814, 816, 818, 819, 843, 847, 863, 867, 870, 873, 874, 888], "reus": [44, 75, 137, 267, 268, 708, 792, 870], "exce": [44, 227, 260, 265, 266, 267, 268, 343, 345, 413, 420, 481, 482, 565, 568, 580, 695, 795, 809, 888], "thousand": [44, 101, 206, 228, 245, 362, 396, 864, 888], "nifti1": [44, 277, 280, 281], "img_fsaverag": 44, "t1_fsaverag": 44, "plot_anat": [44, 176], "draw_cross": 44, "overlai": [44, 155, 160, 172, 180, 205, 272, 273, 276, 279, 280, 281, 563, 756, 800, 814, 819, 888], "add_overlai": [44, 756], "brian": [44, 195, 245, 277, 362, 419, 870], "avant": [44, 245, 277, 362], "epstein": [44, 245, 277, 362], "murrai": [44, 151, 245, 277, 362], "grossman": [44, 245, 277, 362], "jame": [44, 202, 245, 277, 362], "gee": [44, 245, 277, 362], "autom": [44, 83, 113, 121, 144, 156, 162, 163, 164, 165, 166, 171, 199, 200, 201, 204, 205, 210, 245, 257, 267, 268, 270, 277, 356, 362, 367, 391, 486, 646, 655, 772, 796, 824, 855, 867, 870, 876, 888], "elderli": [44, 245, 277, 362], "neurodegen": [44, 245, 277, 362], "medic": [44, 59, 206, 207, 245, 256, 277, 362, 478, 479, 530, 870, 875], "media": [44, 245, 277, 362], "2007": [44, 180, 232, 245, 277, 362, 476, 563, 695, 696, 698, 699, 737, 740], "246": [44, 46, 56, 112, 169, 180, 209, 232, 245], "morph_volume_stc": [44, 56], "megin": [45, 156, 595, 888], "program": [45, 151, 161, 172, 257, 263, 265, 266, 267, 268, 270, 275, 309, 472, 473, 481, 482, 563, 710, 712, 784, 786, 803, 809, 812, 847, 851, 852, 853, 854, 870, 872, 873], "offer": [45, 181, 196, 202, 208, 224, 227, 228, 258, 259, 756, 845, 847, 874, 876, 888], "guid": [45, 155, 270, 845, 851, 866, 869, 871, 888], "ecd": [45, 165, 186, 187, 263, 264, 267, 268, 269, 270, 280, 355, 456, 524, 625, 672, 843, 888], "manual": [45, 83, 120, 127, 137, 142, 149, 151, 156, 157, 160, 161, 162, 172, 182, 188, 190, 192, 199, 200, 201, 203, 206, 210, 245, 258, 261, 270, 271, 320, 330, 356, 377, 434, 448, 563, 573, 574, 584, 595, 596, 648, 779, 853, 864, 867, 870, 873, 888], "advantag": [45, 113, 137, 150, 151, 167, 168, 202, 204, 205, 208, 212, 227, 242, 845, 855], "graphic": [45, 155, 189, 265, 266, 275, 473, 481, 482, 563, 786, 803, 809, 847, 851, 853, 854, 864, 888], "read_dipol": [45, 116, 263, 264, 456, 878, 888], "everyth": [45, 104, 112, 127, 135, 159, 160, 169, 178, 182, 191, 202, 216, 267, 268, 794, 845, 847, 849, 864, 865, 867], "read_vectorview_select": [45, 224, 229, 878, 888], "audvi": [45, 864], "evoked_left": [45, 211], "evoked_right": [45, 211], "09989760657919393": [45, 62], "80m": 45, "picks_left": 45, "evoked_fit_left": 45, "cov_fit_left": 45, "picks_right": 45, "evoked_fit_right": 45, "cov_fit_right": 45, "sss": [45, 162, 165, 199, 209, 214, 215, 265, 266, 267, 268, 270, 343, 345, 349, 350, 353, 373, 434, 481, 482, 502, 563, 574, 584, 595, 625, 786, 790, 798, 809, 867, 870, 888], "normalize_proj": [45, 270, 888], "dip_left": 45, "dip_right": 45, "153": [45, 124, 130, 169, 196, 209, 227, 232, 405], "38720": [45, 182], "58607874e": 45, "29495097e": 45, "04486582e": 45, "78988420e": 45, "81501987e": 45, "79536167e": 45, "22800262e": 45, "50545865e": 45, "24472969e": 45, "41763741e": 45, "51116585e": 45, "49899073e": 45, "11191910e": 45, "30776654e": 45, "58725785e": 45, "82015291e": 45, "83338121e": 45, "85132759e": 45, "76790821e": 45, "26581206e": 45, "61643686e": 45, "900": [45, 76, 81, 85, 176, 181], "396": [45, 81, 174, 176, 181, 232, 245, 298], "354": [45, 81, 169, 176, 181, 232], "195": [45, 166, 169, 176, 181, 227, 231, 245], "9828": [45, 888], "152": [45, 130, 161, 164, 169, 190, 227, 231, 232, 240, 241, 244, 278], "69262885e": 45, "19272571e": 45, "91546253e": 45, "01298483e": 45, "64516797e": 45, "19806525e": 45, "33734643e": 45, "87121666e": 45, "27849772e": 45, "17670368e": 45, "61094719e": 45, "47048282e": 45, "57358697e": 45, "03235995e": 45, "14274862e": 45, "19294391e": 45, "09342253e": 45, "00283865e": 45, "12915739e": 45, "54166863e": 45, "75855684e": 45, "9340": [45, 888], "prevent": [45, 71, 120, 200, 210, 257, 515, 568, 590, 595, 673, 888], "lambda": [45, 68, 100, 112, 145, 196, 211, 223, 242, 262, 265, 266, 267, 268, 274, 316, 413, 420, 481, 482, 538, 562, 563, 578, 674, 708, 710, 712, 773, 780, 787, 795, 799, 808, 811, 816, 870, 873], "fulli": [45, 75, 172, 201, 203, 227, 231, 265, 266, 267, 268, 272, 273, 275, 276, 279, 280, 281, 322, 481, 482, 483, 689, 756, 775, 814, 819, 820, 845, 888], "make_forward_dipol": [45, 176, 878, 888], "stc_left": 45, "stc_right": 45, "sharei": [45, 74, 113, 114, 195, 207, 242], "supylabel": 45, "meter": [45, 81, 93, 94, 151, 156, 157, 160, 170, 176, 182, 192, 207, 222, 257, 262, 263, 265, 266, 267, 268, 270, 271, 274, 283, 314, 330, 339, 367, 413, 420, 434, 481, 482, 497, 506, 521, 562, 563, 567, 572, 573, 574, 578, 584, 595, 600, 601, 619, 629, 657, 703, 708, 710, 712, 756, 773, 780, 784, 788, 790, 792, 795, 796, 799, 806, 808, 810, 811, 812, 816, 818, 870, 888], "kb": [45, 50, 137, 143, 176, 181, 208, 222], "161": [45, 169, 196, 205, 227, 231, 232], "7006": 45, "97034e": 45, "stcs_left": 45, "stcs_right": 45, "90m": 45, "amplitudes_left": 45, "amplitudes_right": 45, "vstack": [45, 115, 136, 141, 184, 224], "ampltud": 45, "n_left": 45, "mean_left": 45, "mean_right": 45, "transition_point": 45, "c0": [45, 151, 206], "c1": [45, 71, 112, 151, 206], "text": [45, 69, 127, 135, 142, 151, 160, 177, 183, 188, 189, 191, 192, 202, 203, 206, 207, 217, 218, 227, 242, 257, 265, 266, 278, 334, 481, 482, 506, 622, 673, 756, 833, 847, 851, 863, 870, 888], "560": [45, 56, 81, 195, 208], "610": [45, 56, 81, 209, 232], "multi_dipole_model": [45, 56], "promot": [46, 59], "focal": [46, 59, 83, 180, 563, 756, 824, 888], "assum": [46, 59, 64, 93, 94, 115, 123, 135, 141, 144, 151, 158, 160, 165, 172, 182, 188, 189, 192, 201, 202, 205, 212, 218, 227, 229, 231, 242, 257, 259, 262, 263, 265, 266, 267, 268, 271, 274, 278, 298, 299, 305, 306, 309, 314, 327, 339, 356, 360, 361, 367, 371, 372, 373, 375, 413, 420, 432, 440, 448, 454, 455, 456, 457, 463, 476, 478, 479, 481, 482, 488, 489, 496, 511, 521, 525, 533, 541, 562, 563, 577, 578, 615, 622, 641, 644, 646, 657, 673, 695, 696, 698, 699, 702, 703, 708, 710, 711, 712, 744, 756, 772, 773, 780, 788, 790, 792, 795, 796, 797, 798, 799, 806, 808, 810, 811, 812, 816, 818, 836, 843, 847, 852, 855, 870, 873, 874, 888], "stationar": [46, 59, 452, 481, 482], "properti": [46, 59, 75, 101, 114, 127, 143, 161, 172, 189, 195, 200, 205, 206, 216, 219, 258, 259, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 275, 276, 279, 280, 281, 304, 367, 412, 417, 481, 482, 549, 563, 580, 581, 596, 658, 673, 690, 708, 709, 710, 711, 712, 743, 756, 758, 775, 784, 786, 790, 796, 797, 799, 801, 809, 814, 819, 820, 824, 874, 888], "bias": [46, 71, 151, 166, 180, 200, 202, 207, 231, 245, 457, 888], "short": [46, 59, 66, 82, 103, 112, 114, 127, 136, 137, 140, 160, 168, 172, 199, 202, 206, 207, 209, 211, 218, 228, 240, 242, 245, 265, 266, 267, 268, 481, 482, 498, 600, 603, 710, 712, 713, 716, 723, 724, 727, 731, 734, 843, 847, 864, 870, 871, 888], "transient": [46, 82, 199, 210, 242, 568], "mathurin": [46, 245, 888], "massia": [46, 245, 888], "yousra": [46, 51, 93, 126, 245, 478, 479, 888], "bekhti": [46, 51, 93, 126, 245, 478, 479, 888], "tf_mixed_norm": [46, 59, 478, 878, 888], "350e": [46, 113, 241], "49948803289596966": 46, "16610": 46, "multidict": 46, "l1_ratio": [46, 59, 479, 888], "wsize": [46, 59, 479, 723, 731, 732], "n_tfmxne_it": [46, 479], "dgap": [46, 59], "89e": 46, "p_obj": [46, 59], "289": [46, 149, 169, 195, 209, 227, 231, 232, 245, 419, 563], "000835": 46, "d_obj": [46, 59], "083203": 46, "n_activ": [46, 59, 210, 350], "247": [46, 112, 169, 209, 212, 231, 245, 864], "27e": 46, "253": [46, 169, 232, 245], "327890": 46, "582652": 46, "53e": 46, "707285": 46, "182101": 46, "18e": 46, "589468": 46, "408712": 46, "82e": 46, "243688": 46, "420556": 46, "67e": [46, 59], "094971": 46, "57e": 46, "991067": 46, "49e": [46, 59], "936498": 46, "442467": 46, "08e": 46, "906871": 46, "829870": 46, "70e": 46, "887205": 46, "017223": 46, "24e": 46, "872107": 46, "148583": 46, "11e": 46, "762424": 46, "94e": 46, "854012": 46, "259629": 46, "659": [46, 168, 196, 229, 234], "867870": 46, "46e": 46, "043596": 46, "270": [46, 81, 169, 191, 209, 227, 232, 888], "587841": 46, "87e": 46, "722230": 46, "272": [46, 112, 119, 169, 171, 209, 232, 245, 665, 670], "856399": 46, "29e": 46, "678013": 46, "849283": 46, "335": [46, 109, 169, 195, 209, 227, 232, 245, 870], "966495": 46, "73e": 46, "239": [46, 56, 59, 69, 81, 82, 158, 169, 191, 203, 209, 231], "215341": 46, "236": [46, 112, 130, 133, 169, 209, 231], "481796": 46, "17e": 46, "095509": 46, "238": [46, 112, 169, 227, 228, 231, 232], "178504": 46, "77e": 46, "068507": 46, "591286": 46, "546285": 46, "06e": 46, "133013": 46, "826666": 46, "194637": 46, "debias": [46, 59], "551": [46, 114, 232], "d0": [46, 59], "235927e": 46, "000000e": [46, 59], "irtf": 46, "2015": [46, 72, 99, 101, 113, 121, 162, 202, 205, 228, 242, 245, 267, 268, 356, 391, 396, 572, 694, 737, 740, 796, 864, 867, 876], "intern": [46, 71, 72, 83, 127, 133, 136, 160, 168, 170, 183, 190, 192, 200, 207, 210, 213, 229, 245, 265, 266, 267, 268, 314, 356, 361, 367, 392, 413, 434, 481, 482, 496, 502, 560, 563, 571, 572, 573, 574, 584, 595, 625, 694, 695, 708, 709, 710, 711, 712, 756, 802, 847, 888], "workshop": [46, 245, 413], "roland": [46, 245, 479], "badeau": [46, 245, 479], "trento": [46, 245, 479], "7552337": [46, 245, 479], "multidict_reweighted_tfmxn": [46, 56], "plane": [47, 156, 170, 206, 229, 232, 241, 433, 661, 736, 739, 774, 843, 870], "olaf": [47, 48, 49, 50, 54, 55, 101, 245, 545, 665, 670, 888], "hauk": [47, 48, 49, 50, 54, 55, 101, 245, 545, 665, 670, 888], "mrc": [47, 48, 49, 50, 54, 55, 870], "cbu": [47, 48, 49, 50, 54, 55, 870], "cam": [47, 48, 49, 50, 54, 55, 870], "ac": [47, 48, 49, 50, 54, 55, 190, 199, 203, 245, 356, 373, 843, 870], "uk": [47, 48, 49, 50, 54, 55, 245, 356, 870], "rougier": 47, "borrow": [47, 231, 237], "hi": [47, 257], "make_inverse_resolution_matrix": [47, 48, 50, 54, 55, 878, 888], "get_point_spread": [47, 48, 50, 878, 888], "circular_layout": [47, 878], "plot_connectivity_circl": [47, 778], "rm_mne": [47, 54], "n_label": [47, 223, 272, 273, 276, 279, 280, 281, 447, 517, 675], "label_color": [47, 466], "lh_label": [47, 756], "endswith": [47, 170], "label_ypo": 47, "ypo": 47, "yp": 47, "rh_label": [47, 756], "summaris": [47, 212], "five": [47, 142, 150, 171, 183, 209, 219, 245, 343, 481, 482, 563, 756, 801, 870], "princip": [47, 205, 206, 245, 271, 356, 563, 685, 870, 888], "probabl": [47, 71, 165, 188, 199, 200, 201, 202, 205, 206, 227, 229, 232, 242, 417, 423, 442, 481, 482, 493, 756, 813, 845, 847, 852, 853, 854, 870], "n_comp": [47, 539, 540], "stcs_psf_mne": 47, "pca_vars_mn": 47, "return_pca_var": [47, 539, 540], "n_vert": 47, "printopt": 47, "caudalanteriorcingul": 47, "caudalmiddlefront": [47, 90, 95, 135], "cuneu": [47, 756], "entorhin": 47, "frontalpol": 47, "fusiform": 47, "inferiorpariet": [47, 223], "inferiortempor": 47, "insula": 47, "isthmuscingul": 47, "lateraloccipit": 47, "lateralorbitofront": 47, "lingual": 47, "medialorbitofront": 47, "middletempor": 47, "paracentr": 47, "parahippocamp": [47, 69], "parsoperculari": 47, "parsorbitali": 47, "parstriangulari": 47, "pericalcarin": 47, "postcentr": [47, 69], "posteriorcingul": 47, "precentr": [47, 135], "precuneu": 47, "rostralanteriorcingul": 47, "rostralmiddlefront": [47, 223], "superiorfront": [47, 135], "superiorpariet": 47, "superiortempor": 47, "supramargin": 47, "temporalpol": 47, "transversetempor": [47, 223], "overal": [47, 127, 207, 229, 235, 236, 479, 869, 888], "bigger": [47, 81, 127, 236, 481, 482], "leaker": 47, "psfs_mat": 47, "pearson": [47, 202, 205, 245, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 563, 708, 711], "arbitrari": [47, 115, 160, 165, 166, 167, 171, 192, 202, 213, 222, 225, 229, 232, 262, 263, 264, 265, 266, 267, 268, 272, 273, 274, 276, 279, 280, 281, 413, 420, 481, 482, 498, 563, 581, 586, 695, 696, 698, 699, 708, 710, 711, 712, 788, 795, 802, 808, 816, 869, 870, 888], "absolut": [47, 61, 82, 86, 123, 129, 135, 151, 179, 189, 227, 260, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 360, 413, 481, 482, 484, 539, 540, 545, 563, 580, 607, 657, 669, 701, 708, 711, 774, 780, 800, 820, 843, 847, 853, 888], "leakage_mn": 47, "node_ord": [47, 761], "mirror": [47, 68, 71, 170, 265, 266, 267, 268, 272, 276, 280, 281, 451, 452, 453, 481, 482, 771, 775, 814, 820, 876, 888], "node_angl": [47, 761], "start_po": [47, 761], "group_boundari": [47, 761], "subplot_kw": 47, "n_line": 47, "node_color": 47, "neighbour": [47, 262, 265, 266, 267, 268, 274, 413, 420, 481, 482, 562, 563, 578, 708, 710, 712, 788, 795, 799, 808, 811, 816, 818, 888], "deeper": [47, 54, 55, 180, 870], "versu": [47, 141, 151, 166, 217, 224, 300, 855], "fname_fig": 47, "plot_label_leakag": 47, "savefig": [47, 115], "inde": [47, 71, 141, 168, 175, 206, 207, 242, 845], "max_val": 47, "brain_lh": 47, "caudal": [47, 90, 95, 756], "pos_lim": [47, 54, 55, 180, 223, 235, 272, 273, 276, 279, 280, 281, 775, 814, 819, 820], "brain_rh": 47, "952": [47, 56, 209], "529": [47, 83, 196, 232], "psf_ctf_label_leakag": [47, 56], "get_cross_talk": [48, 49, 878, 888], "fname_evo": [48, 49, 50, 54, 55, 65], "regularis": [48, 54, 55, 542], "rm_lor": 48, "stc_psf": 48, "stc_ctf": 48, "31738": [48, 54, 55], "68644e": [48, 54, 55], "vertno_lh": 48, "verttru": [48, 49], "maxima": [48, 145, 267, 268, 604, 793, 795, 888], "vert_max_psf": 48, "vert_max_ctf": 48, "brain_psf": 48, "ventral": [48, 756], "add_foci": [48, 49, 50, 160, 175, 177, 224, 756, 888], "coords_as_vert": [48, 49, 50, 175, 177, 224, 756], "22842778": 48, "2956258": 48, "85246681": 48, "brain_ctf": 48, "10932369": 48, "16149934": 48, "93351158": 48, "psf_ctf_vertic": [48, 56], "make_lcmv_resolution_matrix": [49, 878, 888], "vi": [49, 150, 232, 265, 780], "cov_pr": 49, "post": [49, 120, 180, 202, 207, 210, 843, 847, 853, 854, 866, 867, 869], "cov_post": 49, "filters_pr": 49, "weight_norm": [49, 180, 224, 298, 299, 888], "filters_post": 49, "rm_pre": 49, "stc_pre": 49, "rm_post": 49, "stc_post": 49, "brain_pr": 49, "ndata": 49, "brain_post": 49, "943": [49, 56, 232], "psf_ctf_vertices_lcmv": [49, 56], "coars": 50, "don": [50, 95, 115, 117, 120, 141, 144, 145, 146, 157, 158, 159, 162, 168, 171, 200, 203, 205, 206, 207, 216, 229, 230, 231, 232, 237, 242, 257, 260, 265, 266, 374, 492, 493, 552, 596, 612, 619, 621, 657, 695, 698, 847, 848, 853, 855, 867, 869, 871, 888], "src_vol": 50, "forward_vol": 50, "3375": 50, "1045": 50, "895": [50, 196, 232], "015000": [50, 208], "860": [50, 81, 209, 232], "158": [50, 64, 67, 169, 227, 231, 232], "403": [50, 81, 209, 227, 232], "216": [50, 112, 169, 231, 232], "492": [50, 209, 232], "inverse_operator_vol": 50, "rm_lor_vol": 50, "sources_vol": 50, "stc_psf_vol": 50, "383": [50, 81, 92, 227, 232], "140193": 50, "7904e": 50, "66519": 50, "31885e": 50, "1209": 50, "verttrue_vol": 50, "max_vert_idx": 50, "unravel_index": [50, 181, 229], "vert_max_ctf_vol": 50, "brain_psf_vol": 50, "plot_3d": [50, 135, 180, 280, 281, 888], "volume_opt": [50, 272, 273, 276, 279, 280, 281, 756, 814, 819], "32501697": 50, "38884743": 50, "87974682": 50, "632": [50, 56, 196, 232], "psf_volum": [50, 56], "recurs": [51, 60, 160, 202, 245, 257, 272, 276, 280, 301, 303, 656, 814], "rap_mus": [51, 56, 303, 456, 878, 888], "n100": [51, 60, 166, 191, 202, 207], "1834": [51, 60], "ori": [51, 60, 176, 180, 183, 185, 224, 263, 298, 299, 433, 456], "24703241413887647": [51, 60], "776432601481173": [51, 60], "5797649538579378": [51, 60], "5304": [51, 60], "5154591819142723": [51, 60], "5345116894131523": [51, 60], "6697753994145853": [51, 60], "1999": [51, 112, 242, 245, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 301, 356, 481, 482, 563, 593, 708, 711, 870], "740118": [51, 245, 301], "148": [51, 56, 169, 209, 227, 231, 232], "inv_fnam": 52, "fmri": [52, 196, 245, 478, 479, 530, 843, 864, 870, 873], "fmri_prior": 52, "rr": [52, 160, 161, 175, 178, 278, 344, 346, 347, 348, 638, 641, 657, 677, 836, 873], "use_tri": [52, 160, 278, 873], "712": [52, 56, 196, 232], "read_invers": [52, 56], "nb": [53, 481, 482], "821": [53, 56, 203, 232], "read_stc": [53, 56], "localis": [54, 55, 185, 227, 228, 245, 545, 695, 696, 698, 699, 888], "mimic": [54, 55, 414, 437, 530], "resolution_metr": [54, 55, 56, 878, 888], "ple": [54, 55, 545], "sd": [54, 55, 242, 670, 710, 712], "ple_mne_psf": 54, "peak_err": [54, 55, 545], "sd_mne_psf": 54, "sd_ext": [54, 55, 545], "rm_dspm": 54, "ple_dspm_psf": 54, "sd_dspm_psf": 54, "brain_ple_mn": 54, "brain_ple_dspm": 54, "subtract": [54, 55, 66, 71, 74, 107, 113, 120, 134, 141, 151, 176, 202, 208, 210, 227, 229, 257, 260, 261, 265, 266, 267, 268, 271, 272, 273, 275, 276, 279, 280, 281, 288, 298, 299, 355, 356, 360, 361, 371, 372, 373, 413, 420, 421, 456, 457, 476, 478, 479, 481, 482, 483, 541, 546, 547, 563, 564, 580, 595, 625, 626, 649, 652, 695, 698, 708, 711, 796, 816, 843, 870, 873, 888], "diff_pl": [54, 55], "brain_ple_diff": [54, 55], "superfici": [54, 180, 870], "brain_sd_mn": 54, "brain_sd_dspm": 54, "diff_sd": [54, 55], "brain_sd_diff": [54, 55], "wors": [54, 171, 595, 863], "distinguish": [54, 73, 151, 172, 196, 199, 200, 201, 204, 205, 207, 216, 363, 843, 888], "stenroo": [54, 55, 60, 245, 303, 545, 665, 670], "matthia": [54, 55, 245, 545, 888], "treder": [54, 55, 245, 545], "kit": [54, 55, 170, 171, 184, 227, 245, 270, 340, 348, 434, 506, 525, 545, 574, 584, 595, 621, 870, 878, 879, 888], "biorxiv": [54, 55, 224, 245, 298, 299, 545], "2019": [54, 55, 66, 76, 141, 208, 211, 227, 232, 245, 545, 579, 602, 695, 696, 698, 699, 722, 724, 734, 737, 738, 740, 846, 853], "1101": [54, 55, 114, 224, 245, 298, 299, 545], "672956": [54, 55, 245, 545], "resolution_matrix": 55, "spatial_resolut": 55, "fname_fwd_emeg": 55, "forward_emeg": 55, "forward_meg": 55, "pick_types_forward": [55, 69, 92, 285, 286, 878], "inv_emeg": 55, "inv_meg": 55, "63485": 55, "05542e": 55, "rm_emeg": 55, "ple_psf_emeg": 55, "sd_psf_emeg": 55, "rm_meg": 55, "ple_psf_meg": 55, "sd_psf_meg": 55, "brain_ple_emeg": 55, "emeg": [55, 876], "brain_ple_meg": 55, "bring": [55, 71, 156, 181, 205, 218, 270, 280, 281, 434, 574, 584, 595, 820, 870, 873], "brain_sd_emeg": 55, "brain_sd_meg": 55, "resolution_metrics_eegmeg": [55, 56], "767": [56, 166, 245, 863], "auto_examples_invers": 56, "1445": 56, "vector_mne_solut": [56, 61], "672": [56, 61, 196, 232], "209": [56, 61, 169, 184, 196, 202, 231, 232, 245], "time_frequency_mixed_norm_invers": [56, 59], "source_space_snr": [56, 58], "225": [56, 58, 112, 127, 144, 169, 209, 232, 245, 864], "trap_mus": [56, 60, 301, 878, 888], "810": [56, 60, 81, 209, 232], "166": [56, 60, 150, 169, 196, 202, 232, 237, 245], "snr_estim": [56, 57], "476": [56, 57, 245, 413], "plot_snr_estim": [57, 878, 888], "padma": [58, 245, 579, 888], "sundaram": [58, 245, 579, 888], "tottochan": 58, "kaisu": [58, 888], "lankinen": [58, 888], "klankinen": 58, "inv_op": [58, 223], "snr_stc": [58, 276], "estimate_snr": [58, 276, 878, 888], "maxidx": 58, "med": [58, 94, 136, 166, 196, 223], "viridi": [58, 101, 127, 136, 143, 227, 709, 798], "70263": [58, 178], "18949e": [58, 178], "evoked_eeg": [58, 149, 207], "inv_op_eeg": 58, "stc_eeg": 58, "snr_stc_eeg": 58, "7499": [58, 90], "118742": [58, 90], "155292": [58, 90], "81981": 58, "0644e": 58, "goldenholz": [58, 245, 276], "seppo": [58, 245, 276, 541, 665, 670], "ahlfor": [58, 245, 276, 434, 541, 665, 670], "dahlia": [58, 245, 276], "sharon": [58, 245, 276], "mamiko": [58, 245, 276], "ishitobi": [58, 245, 276], "lucia": [58, 126, 245, 276], "vaina": [58, 126, 245, 276], "magnetoencephalographi": [58, 157, 178, 245, 276, 668, 737, 740, 870], "1086": [58, 209, 245, 276], "hbm": [58, 178, 245, 276, 697, 863], "20571": [58, 245, 276], "built": [59, 140, 150, 151, 157, 159, 165, 166, 167, 175, 181, 203, 205, 211, 216, 220, 221, 227, 263, 265, 266, 267, 268, 270, 306, 330, 331, 340, 368, 442, 464, 465, 473, 481, 482, 502, 521, 525, 591, 642, 676, 703, 712, 745, 756, 772, 847, 853, 859, 867, 868, 888], "fourier": [59, 103, 202, 240, 242, 245, 265, 266, 267, 268, 481, 482, 710, 712, 713, 716, 720, 723, 724, 726, 727, 731, 734, 735, 736, 738, 739], "stft": [59, 479, 723, 732, 843, 878, 888], "henc": [59, 114, 142, 150, 156, 162, 175, 190, 204, 207, 216, 227, 240, 242, 263, 264, 265, 266, 267, 268, 272, 273, 275, 276, 279, 280, 281, 481, 482, 708, 711, 769, 843, 854, 867], "minima": [59, 604], "slightli": [59, 71, 127, 160, 180, 184, 202, 207, 210, 211, 222, 231, 265, 266, 267, 268, 271, 361, 481, 482, 533, 541, 685, 756, 793, 863, 864, 870, 888], "eventu": [59, 136, 320, 331, 582, 847, 863], "020865": [59, 94, 178, 224], "96729": 59, "38524e": 59, "985": 59, "descent": [59, 245, 478, 888], "845726": 59, "353441": 59, "4410": 59, "859492": 59, "292946": 59, "51e": 59, "670058": 59, "519426": 59, "61e": 59, "669663": 59, "668049": 59, "546628e": 59, "049948803289596964": [59, 95, 179, 181], "2996928197375818": [59, 140, 149, 151, 229], "10e": [59, 69, 90, 95], "15e": 59, "20e": [59, 265, 266, 275, 481, 482, 786, 809], "medial": [59, 237, 695, 696, 756], "yellow": [59, 207, 267, 268, 771, 790, 807], "scalar_thresh": [59, 756], "stationari": [59, 80, 205, 207, 212, 245, 349, 479, 863], "422": [59, 232, 245, 479], "051": [59, 140, 142, 149, 169, 200, 224, 245, 479], "sparsiti": [59, 245, 479, 668], "g\u00e1bor": [59, 245, 479], "sz\u00e9keli": [59, 245, 479], "horst": [59, 245, 479], "hahn": [59, 245, 479], "editor": [59, 191, 245, 334, 476, 479, 563, 737, 740, 847, 851, 865], "6801": [59, 245, 479], "page": [59, 172, 202, 219, 245, 265, 266, 331, 390, 479, 481, 482, 563, 724, 734, 735, 737, 738, 740, 756, 786, 809, 845, 847, 848, 851, 853, 854, 859, 862, 863, 866, 867, 868, 869, 870, 871, 888], "springer": [59, 224, 245, 298, 299, 390, 479, 563], "berlin": [59, 224, 245, 298, 299, 479], "heidelberg": [59, 224, 245, 298, 299, 479], "1007": [59, 151, 206, 207, 208, 224, 245, 298, 299, 413, 479, 530, 563, 579, 673, 870], "978": [59, 113, 151, 202, 205, 224, 232, 245, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 298, 299, 356, 479, 481, 482, 563, 690, 708, 711], "22092": [59, 245, 479], "0_49": [59, 245, 479], "truncat": [60, 79, 87, 119, 124, 150, 200, 207, 217, 245, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 303, 436, 442, 481, 482, 494, 708, 711, 780, 888], "th\u00e9odor": [60, 888], "papadopoulo": [60, 888], "theodor": 60, "niko": [60, 245, 303, 870], "m\u00e4kel\u00e4": [60, 245, 303, 395], "jukka": [60, 176, 178, 245, 303, 888], "sarva": [60, 176, 245, 303], "risto": [60, 178, 206, 207, 245, 303, 530, 870], "ilmoniemi": [60, 178, 206, 207, 245, 303, 530, 870], "167": [60, 139, 169, 209, 231, 232, 245, 303], "2018": [60, 76, 84, 126, 137, 196, 205, 224, 245, 298, 299, 303, 563, 602, 603], "013": [60, 66, 128, 140, 141, 149, 151, 169, 224, 245, 303], "magnitud": [61, 64, 71, 112, 113, 135, 142, 145, 149, 150, 166, 168, 178, 180, 199, 200, 202, 217, 224, 235, 236, 273, 279, 281, 356, 413, 434, 457, 538, 568, 574, 584, 595, 604, 700, 797, 819, 845, 867, 888], "accomplish": [61, 135, 149, 161, 171, 845, 853, 863, 864, 870], "plot_vector_source_estim": [61, 821, 878, 888], "hood": [61, 127, 143, 189, 199, 202, 206, 888], "plot_source_estim": [61, 756, 821, 878, 888], "instruct": [61, 116, 161, 189, 211, 472, 845, 846, 847, 848, 849, 851, 852, 853, 854, 858, 861, 867, 873, 888], "impos": [61, 195, 201, 724, 734, 738, 888], "underli": [61, 160, 166, 202, 206, 227, 228, 240, 245, 259, 263, 264, 265, 266, 267, 268, 271, 272, 273, 276, 279, 280, 281, 413, 481, 482, 487, 586, 708, 711, 746, 888], "getter": [61, 177, 888], "peak_tim": [61, 175], "get_peak": [61, 127, 149, 151, 175, 177, 178, 180, 267, 268, 272, 273, 276, 279, 280, 281, 888], "time_dil": [61, 135, 136, 177, 181, 756], "framer": [61, 135, 136, 177, 181, 756], "95048065": 61, "56941314": 61, "72451438": 61, "stc_max": 61, "cosin": [61, 90, 202, 222, 663, 870], "source_nn": [61, 269, 298, 299, 873], "brain_max": 61, "975978731472672": 61, "90575168": 61, "52414196": 61, "71336747": 61, "brain_norm": 61, "83607509": 61, "44726242": 61, "57923594": 61, "lot": [61, 71, 127, 152, 158, 160, 166, 169, 200, 202, 204, 205, 206, 211, 216, 218, 361, 367, 432, 463, 615, 644, 646, 836, 847], "fname_inv_fix": 61, "inv_fix": 61, "stc_fix": 61, "brain_fix": [61, 178], "00351751": 61, "62842071": 61, "43519503": 61, "pars": [62, 140, 151, 165, 171, 173, 174, 190, 201, 217, 258, 259, 265, 270, 284, 442, 454, 461, 481, 489, 496, 497, 504, 523, 553, 622, 843, 888], "elekta": [62, 84, 156, 165, 186, 187, 210, 258, 262, 263, 265, 266, 267, 268, 270, 275, 304, 356, 433, 454, 456, 481, 482, 526, 772, 784, 786, 796, 809, 824, 859, 864, 870, 873, 888], "triux": [62, 183, 258, 265, 266, 267, 268, 392, 481, 482, 560, 708, 710, 711, 712, 864, 870], "dacq": [62, 258, 864], "acquisit": [62, 156, 160, 168, 188, 189, 190, 191, 207, 216, 245, 258, 259, 265, 266, 267, 268, 270, 284, 454, 481, 482, 483, 584, 595, 609, 673, 843, 859, 863, 870, 873, 888], "accordingli": [62, 150, 158, 178, 189, 216, 260, 265, 266, 267, 268, 472, 481, 482, 489, 496, 502, 596, 870, 888], "multimod": [62, 137, 171, 245, 874, 878, 888], "multimodal_raw": 62, "grad_ssp_upright": 62, "mag_ssp_upright": 62, "v4": [62, 209, 210], "v5": [62, 209, 210], "183600": 62, "576599": 62, "categori": [62, 112, 145, 258, 337, 626, 753, 870, 871, 888], "acqpars": [62, 258, 481, 888], "acqparserfif": [62, 270, 481, 878, 888], "get_condit": [62, 258], "plot_topo": [62, 150, 152, 166, 219, 240, 241, 265, 266, 267, 268, 323, 481, 482, 708, 710, 712, 888], "background_color": [62, 132, 267, 268, 794, 888], "cat": [62, 112], "flat": [62, 83, 111, 135, 140, 141, 150, 181, 200, 201, 202, 206, 207, 208, 210, 258, 260, 265, 266, 272, 276, 280, 359, 361, 563, 565, 575, 576, 580, 581, 584, 694, 756, 814, 843, 863, 888], "fiff": [62, 115, 156, 160, 265, 266, 269, 275, 278, 481, 482, 485, 498, 513, 514, 563, 575, 576, 742, 764, 864, 888], "fname_out": [62, 764], "write_evok": [62, 149, 267, 268, 444, 625, 867, 878, 888], "118": [62, 169, 209, 231, 245, 563, 888], "0812": [62, 169], "0123": [62, 145, 166, 169, 216], "0942": [62, 169], "2232": [62, 169, 337], "newcat": 62, "longer": [62, 114, 145, 162, 167, 168, 172, 191, 200, 201, 202, 203, 205, 227, 242, 265, 266, 267, 268, 270, 343, 437, 448, 452, 454, 481, 482, 565, 595, 711, 735, 736, 738, 739, 756, 766, 786, 789, 847, 853, 867, 870, 888], "reqev": [62, 258], "requir": [62, 109, 135, 136, 140, 142, 144, 150, 156, 158, 161, 162, 166, 168, 170, 171, 172, 182, 189, 190, 191, 192, 196, 199, 202, 203, 205, 208, 210, 212, 213, 216, 222, 224, 227, 228, 231, 235, 257, 258, 262, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 283, 298, 299, 305, 310, 314, 356, 357, 358, 359, 361, 362, 365, 388, 412, 413, 415, 416, 420, 422, 423, 426, 429, 430, 451, 452, 454, 456, 469, 471, 474, 475, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 517, 521, 522, 524, 525, 533, 536, 537, 546, 547, 562, 563, 565, 568, 575, 576, 578, 587, 596, 604, 613, 650, 656, 659, 660, 661, 673, 695, 696, 697, 698, 699, 704, 708, 710, 712, 713, 714, 715, 716, 717, 718, 726, 727, 735, 736, 737, 738, 739, 750, 756, 773, 779, 786, 788, 791, 795, 799, 803, 808, 809, 810, 811, 814, 816, 818, 819, 825, 843, 845, 848, 851, 852, 863, 864, 869, 870, 876, 888], "reqwithin": [62, 258], "reqwhen": [62, 258], "freeli": 62, "elekta_epoch": [62, 67], "scratch": [64, 140, 149, 165, 188, 190, 191, 216, 225, 226, 242, 265, 266, 267, 268, 270, 375, 481, 482, 523, 712, 727], "exampleio": 64, "fake": [64, 71, 159, 182], "won": [64, 151, 206, 207, 218, 231, 245, 265, 266, 267, 268, 362, 481, 482, 563, 625, 708, 710, 711, 712, 746], "consult": [64, 202, 206, 595, 847, 852, 853, 863, 867, 869, 870], "reader": [64, 166, 175, 188, 206, 216, 332, 480, 487, 489, 490, 491, 493, 496, 499, 500, 502, 504, 505, 506, 508, 509, 510, 511, 512, 619, 621, 623, 870, 874, 888], "fakedata": 64, "nof": 64, "lazi": 64, "analogsign": 64, "multichannel": [64, 71, 112, 151, 196, 210, 245, 434, 571, 574, 595], "sampling_r": 64, "misc": [64, 66, 80, 81, 82, 115, 135, 137, 149, 169, 171, 178, 182, 183, 185, 188, 189, 191, 192, 216, 222, 265, 266, 267, 268, 275, 313, 329, 348, 375, 446, 481, 482, 489, 491, 493, 496, 498, 504, 508, 560, 708, 710, 711, 712, 780, 786, 790, 792, 794, 809, 864, 878, 888], "show_scrollbar": [64, 76, 151, 205, 211, 222, 265, 266, 481, 482, 563, 786, 803, 809, 888], "100000": [64, 450], "99999": [64, 442], "read_neo_format": [64, 67], "ev_info": 65, "15972": 65, "27235589e": 65, "79818505e": 65, "12852747e": 65, "85348042e": 65, "02846360e": 65, "26727393e": 65, "33468523e": 65, "80261790e": 65, "33583009e": 65, "93161055e": 65, "35199238e": 65, "79073915e": 65, "09498615e": 65, "16924072e": 65, "93873875e": 65, "40677185e": 65, "27444183e": 65, "08634620e": 65, "59818134e": 65, "51070563e": 65, "53708918e": 65, "062": [65, 67], "read_noise_covariance_matrix": [65, 67], "analyz": [66, 72, 140, 165, 168, 180, 192, 196, 199, 200, 202, 203, 210, 217, 218, 227, 245, 265, 266, 439, 566, 572, 691, 844, 847, 863, 870, 888], "pabr": 66, "maddox": [66, 245, 888], "lab": [66, 69, 866, 876], "clemen": [66, 112, 875, 888], "brunner": [66, 112, 875, 888], "pyxdf": [66, 189], "p001_se": 66, "s004_task": 66, "default_run": 66, "001_eeg_a2": 66, "stream": [66, 189, 200, 203, 888], "header": [66, 113, 123, 156, 160, 182, 189, 191, 267, 268, 298, 299, 341, 356, 360, 361, 371, 372, 373, 413, 420, 456, 457, 476, 478, 479, 480, 488, 491, 493, 508, 510, 511, 541, 796, 888], "load_xdf": 66, "time_seri": 66, "assert": [66, 109, 140, 144, 149, 156, 171, 191, 217, 224, 227, 229, 869, 888], "four": [66, 71, 141, 144, 151, 166, 185, 202, 227, 237, 245, 262, 265, 266, 267, 268, 274, 413, 420, 481, 482, 562, 563, 578, 708, 710, 712, 756, 773, 788, 795, 799, 808, 811, 816, 818, 863, 870, 871], "plu": [66, 166, 168, 172, 177, 182, 202, 205, 207, 209, 231, 270, 727, 854, 865, 870, 873, 888], "rerefer": 66, "bipolar": [66, 68, 191, 204, 205, 227, 265, 266, 267, 268, 481, 482, 649, 652, 888], "subselect": [66, 116, 143, 149, 150, 151, 166, 216, 229, 232, 240, 242, 263, 264, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 372, 481, 482, 708, 709, 710, 711, 786, 867, 888], "uv": [66, 265, 266, 267, 268, 481, 482, 888], "preamp": 66, "nominal_sr": 66, "100e": [66, 145, 151, 201, 224], "2320128": 66, "2320127": 66, "melissa": [66, 245], "polonenko": [66, 245], "ross": [66, 245, 888], "brainstem": [66, 245], "hear": [66, 245, 599], "2331216519871395": [66, 245], "read_xdf": [66, 67], "auto_examples_io": 67, "mastoid": [68, 189, 208, 265, 266, 267, 268, 481, 482, 652], "bone": [68, 272, 273, 276, 279, 280, 281, 756, 814, 819], "sleep": [68, 138, 139, 165, 168, 245, 259, 265, 270, 405, 406, 442, 496, 613, 710, 789, 843, 867, 888], "ssvep_fold": [68, 170], "ssvep": [68, 165, 170, 171, 243, 244, 265, 270, 314, 330, 442, 491, 560, 710, 818, 878, 888], "ssvep_data_raw_path": [68, 170], "se": [68, 170, 201, 212, 242, 870], "02_se": [68, 170, 242], "ssvep_eeg": [68, 170, 242], "vhdr": [68, 136, 170, 242, 446, 481, 482, 613, 864, 870, 888], "read_raw": [68, 71, 135, 144, 172, 224, 257, 878, 888], "easycap": [68, 170, 227, 242, 888], "467579": 68, "579": [68, 70], "tp9": 68, "tp10": 68, "rename_channel": [68, 75, 112, 128, 140, 149, 151, 159, 185, 211, 216, 265, 266, 267, 268, 314, 481, 482, 492, 505, 878, 888], "m2": [68, 208, 265, 266, 267, 268, 481, 482, 652, 873], "midlin": [68, 128, 169, 170, 219, 228, 326, 888], "make_1020_channel_select": [68, 128, 228, 878, 888], "return_ch_nam": [68, 326, 888], "rereferenc": [68, 167, 242], "rereferenced_midline_ch": 68, "alter": [68, 208, 210, 216, 259, 596, 888], "set_bipolar_refer": [68, 208, 265, 266, 267, 268, 481, 482, 652, 878, 888], "anod": [68, 208, 649, 888], "cathod": [68, 208, 649, 888], "strip": [68, 112, 245], "suffix": [68, 257, 275, 481, 482, 494, 888], "replac": [68, 79, 88, 101, 141, 143, 151, 159, 172, 188, 190, 201, 206, 207, 210, 216, 218, 245, 262, 265, 266, 267, 268, 274, 275, 413, 420, 435, 448, 481, 482, 493, 510, 528, 562, 563, 578, 708, 710, 712, 773, 795, 799, 808, 811, 816, 847, 851, 853, 855, 858, 870, 888], "unreferenc": [68, 649], "add_channel": [68, 71, 75, 265, 266, 267, 268, 481, 482, 563, 708, 710, 711, 712, 888], "467580": 68, "o1": [68, 71, 128, 159, 222, 242], "po9": [68, 242], "p7": [68, 71, 128, 159, 505], "p3": [68, 71, 128, 144, 159, 505], "cp5": [68, 128, 505], "cp1": [68, 71, 128], "t7": [68, 128, 159, 170, 262, 265, 266, 267, 268, 274, 314, 413, 420, 481, 482, 505, 562, 563, 578, 708, 710, 712, 773, 780, 788, 790, 792, 795, 796, 799, 806, 808, 810, 811, 812, 816, 818, 888], "c3": [68, 112, 128, 144, 159, 505], "fc1": [68, 71, 128, 480], "fc5": [68, 128, 505], "f3": [68, 71, 128, 144, 159, 208, 505], "f7": [68, 144, 159, 337, 505], "fp1": [68, 144, 159, 208, 222, 337, 449, 452, 489, 496, 581, 586], "o2": [68, 128, 159, 222, 242], "po10": [68, 242], "p8": [68, 71, 128, 159], "p4": [68, 71, 128, 144, 159], "cp6": [68, 128], "cp2": [68, 71, 128], "c4": [68, 71, 112, 128, 144, 159], "t8": [68, 71, 128, 159, 170, 262, 265, 266, 267, 268, 274, 314, 413, 420, 481, 482, 562, 563, 578, 708, 710, 712, 773, 780, 788, 790, 792, 795, 796, 799, 806, 808, 810, 811, 812, 816, 818, 888], "fc2": [68, 71, 128], "fc6": [68, 71, 128], "f4": [68, 71, 128, 144, 159, 170, 208], "f8": [68, 144, 159], "fp2": [68, 144, 159, 222, 337, 449, 452, 581, 586], "still": [68, 71, 75, 79, 115, 120, 142, 143, 144, 160, 171, 188, 189, 199, 200, 202, 203, 204, 206, 208, 210, 212, 216, 219, 227, 235, 265, 270, 278, 322, 367, 432, 463, 481, 563, 595, 615, 644, 646, 690, 711, 765, 779, 780, 821, 836, 845, 847, 853, 865, 876, 888], "plot_sensor": [68, 127, 142, 151, 170, 182, 190, 219, 265, 266, 267, 268, 481, 482, 878, 888], "fpz": [68, 128, 137, 170, 205, 262, 265, 266, 267, 268, 274, 314, 413, 420, 481, 482, 562, 563, 578, 708, 710, 712, 773, 780, 788, 790, 792, 795, 796, 799, 806, 808, 810, 811, 812, 816, 818, 888], "oz": [68, 71, 128, 137, 159, 170, 242, 262, 265, 266, 267, 268, 274, 314, 413, 420, 481, 482, 562, 563, 578, 657, 708, 710, 712, 773, 780, 788, 790, 792, 795, 796, 799, 806, 808, 810, 811, 812, 816, 818, 888], "361": [68, 81, 85, 169, 232, 236], "contralateral_referenc": [68, 85], "facilit": [69, 112, 135, 136, 167, 190, 196, 228, 265, 266, 267, 268, 481, 482, 708, 710, 711, 712, 863, 870, 873, 888], "subcort": [69, 245, 579, 888], "simul": [69, 71, 80, 91, 105, 106, 140, 149, 161, 176, 188, 190, 201, 202, 216, 222, 232, 235, 236, 237, 242, 245, 262, 265, 266, 267, 268, 269, 270, 271, 276, 278, 288, 356, 375, 454, 481, 482, 486, 515, 518, 524, 529, 530, 541, 560, 561, 599, 616, 622, 627, 629, 630, 633, 708, 710, 712, 721, 735, 738, 739, 740, 756, 760, 815, 864, 878, 888], "samuelsson": [69, 245, 579, 888], "johnsam": 69, "mit": [69, 72, 151, 245, 476, 572, 858, 864, 870], "simulate_sparse_stc": [69, 92, 93, 672, 673, 675, 878, 888], "simulate_evok": [69, 92, 176, 223, 524, 673, 674, 675, 878, 888], "all_label": 69, "select_label": 69, "hiplab": 69, "postcenlab": 69, "cortical_waveform": 69, "waveform": [69, 99, 202, 204, 207, 211, 245, 273, 279, 281, 658, 660, 674, 675, 694, 815, 854], "pi": [69, 90, 93, 94, 95, 114, 202, 207, 222, 223, 224, 538, 604, 674, 724, 732, 734, 738, 870], "subcortical_waveform": 69, "data_fun": [69, 92, 93, 94, 674], "isin": [69, 112, 144], "evoked_subcort": [69, 579], "cortical_signal_suppress": [69, 878, 888], "n_proj": [69, 579], "fft": [69, 108, 133, 202, 240, 242, 265, 266, 267, 268, 421, 425, 426, 481, 482, 536, 546, 547, 709, 713, 714, 715, 716, 717, 718, 720, 727, 733, 735, 736, 737, 738, 739, 740, 810, 888], "rfft": 69, "psd_proc": 69, "transax": 69, "footbibliographi": [69, 847], "put": [70, 116, 123, 127, 141, 144, 155, 156, 161, 170, 172, 182, 183, 185, 195, 202, 205, 216, 222, 223, 224, 227, 267, 268, 271, 388, 756, 790, 847, 852, 888], "earli": [70, 71, 141, 172, 200, 202, 242, 245, 260, 265, 266, 267, 268, 481, 482, 522, 618], "button": [70, 72, 94, 121, 128, 140, 142, 144, 152, 156, 161, 166, 168, 191, 199, 201, 206, 217, 218, 219, 262, 265, 266, 267, 268, 274, 275, 413, 420, 439, 481, 482, 562, 563, 708, 710, 712, 786, 787, 788, 790, 792, 795, 799, 808, 809, 810, 811, 816, 847, 864, 888], "press": [70, 72, 113, 121, 128, 140, 142, 144, 151, 152, 156, 161, 166, 168, 172, 191, 199, 201, 217, 218, 219, 245, 265, 266, 356, 439, 452, 476, 481, 482, 563, 572, 786, 801, 803, 809, 864, 888], "590": [70, 81, 196, 232], "millisecond": [70, 82, 112, 140, 145, 149, 168, 216, 235, 236, 237, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 439, 481, 482, 708, 711, 756, 814, 819, 888], "late": [70, 162, 867], "quickli": [70, 165, 166, 195, 205, 206, 218, 871, 888], "slowli": 70, "define_target_ev": [70, 85, 128, 878], "quick": [70, 74, 93, 183, 199, 241, 528, 847], "reference_id": [70, 128, 439], "smilei": [70, 72, 94, 152, 166, 168, 217, 864], "target_id": [70, 128, 439], "new_id": [70, 128, 439, 528], "hit": [70, 242, 262, 265, 266, 267, 268, 274, 413, 420, 481, 482, 562, 563, 708, 710, 712, 787, 788, 792, 795, 799, 808, 811, 816, 888], "fill_na": [70, 439], "fill": [70, 223, 271, 276, 278, 279, 362, 439, 469, 481, 482, 587, 675, 704, 756, 888], "events_": 70, "besid": [70, 201, 206], "tmin_": 70, "tmax_": 70, "8522": [70, 888], "10649": 70, "12859": 70, "14830": 70, "16850": 70, "18826": 70, "21224": 70, "23200": 70, "25272": 70, "27243": 70, "29525": 70, "31530": 70, "33481": 70, "35611": 70, "38007": 70, "566": 70, "08643728": 70, "532": [70, 208, 232], "78723509": 70, "97154325": 70, "359": [70, 81, 169], "63138369": 70, "446": [70, 209, 211, 215, 227, 232, 245, 862], "20930939": 70, "40611816": 70, "512": [70, 73, 275, 278, 412], "80771377": 70, "ft": [70, 142, 145, 166, 201, 207, 241, 257, 262, 265, 266, 267, 268, 272, 273, 274, 276, 279, 280, 281, 413, 420, 481, 482, 518, 562, 563, 578, 584, 708, 710, 712, 773, 787, 788, 790, 792, 795, 799, 808, 811, 816, 817, 818, 843, 870], "conduct": [71, 72, 101, 151, 158, 191, 227, 228, 229, 231, 245, 257, 519, 526, 665, 670, 843, 847, 863, 866, 870, 873, 888], "undesir": [71, 204, 563, 888], "otherwis": [71, 83, 120, 144, 151, 162, 172, 188, 201, 202, 232, 235, 237, 259, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 289, 298, 299, 304, 314, 326, 339, 356, 360, 361, 362, 371, 372, 373, 388, 406, 413, 420, 448, 451, 452, 456, 457, 471, 476, 478, 479, 481, 482, 491, 527, 528, 529, 530, 536, 541, 562, 563, 578, 613, 622, 644, 645, 647, 653, 657, 674, 693, 694, 708, 710, 711, 712, 720, 732, 743, 746, 756, 772, 773, 780, 784, 786, 787, 788, 790, 791, 792, 793, 794, 795, 796, 799, 806, 808, 809, 810, 811, 812, 814, 815, 816, 818, 819, 833, 845, 847, 870, 888], "introduct": [71, 90, 95, 151, 232, 240, 242, 245, 275, 872], "smear": [71, 80, 81, 142, 202, 242, 594, 735, 736, 738, 739, 888], "unfortun": [71, 162, 855, 867], "brigd": 71, "far": [71, 83, 127, 140, 141, 144, 157, 171, 178, 201, 202, 203, 206, 208, 216, 217, 227, 367, 493, 566, 695, 696, 698, 699, 736, 739, 780, 870, 873], "address": [71, 96, 97, 166, 202, 227, 228, 235, 236, 237, 245, 270, 695, 696, 698, 699, 847, 853], "Or": [71, 120, 171, 199, 209, 222, 578, 847], "quantifi": [71, 211, 242, 276], "introduc": [71, 76, 140, 141, 149, 151, 165, 166, 173, 175, 199, 201, 202, 203, 205, 206, 207, 212, 216, 235, 237, 260, 265, 266, 267, 268, 322, 481, 482, 563, 786, 790, 809, 867, 870, 876, 888], "outcom": 71, "awar": [71, 103, 140, 144, 167, 168, 218, 229, 235, 265, 266, 267, 268, 481, 482, 793, 888], "mitig": [71, 180, 202, 203, 210, 870], "confound": [71, 151, 563], "psychophysiologi": [71, 72, 99, 141, 151, 202, 232, 245, 572, 694, 695, 696, 698, 699], "cpmc": 71, "columbia": 71, "softwar": [71, 158, 165, 184, 189, 190, 208, 245, 258, 270, 322, 446, 472, 481, 482, 490, 510, 595, 638, 822, 841, 843, 845, 847, 848, 853, 855, 863, 864, 867, 868, 869, 872, 876, 878, 888], "ebridg": 71, "html": [71, 143, 169, 171, 245, 257, 275, 578, 653, 847, 871, 888], "linearsegmentedcolormap": [71, 771], "nearli": [71, 847], "exactli": [71, 127, 140, 144, 175, 184, 196, 216, 242, 565, 694, 774, 818, 888], "suffici": [71, 200, 202, 210, 229, 265, 266, 267, 268, 270, 283, 356, 481, 482, 521, 786, 809, 845, 847, 853, 863, 867, 870, 888], "portion": [71, 178, 199, 201, 216, 241, 265, 266, 323, 481, 482, 563, 786, 803, 809, 847, 867, 869, 888], "plenti": 71, "settl": [71, 298], "ed_data": 71, "raw_data": 71, "compute_bridged_electrod": [71, 594, 776, 878, 888], "1959919512423807e": 71, "665886892350542": 71, "iz": 71, "4367320903573773": 71, "fcz": [71, 144, 242], "fc4": [71, 144], "f2": 71, "4835197413857302e": 71, "587817798758312": 71, "fc3": [71, 144, 505], "cp3": [71, 505], "af7": 71, "af3": 71, "af4": 71, "af8": 71, "f5": [71, 505], "fz": [71, 128, 144, 159, 222, 228, 446, 481, 482, 496], "ft8": 71, "tp8": 71, "p5": [71, 505], "p1": [71, 112, 211], "p6": 71, "po3": [71, 128, 242], "po4": [71, 128, 242], "po8": [71, 128, 242, 888], "746002687400983": 71, "cz": [71, 112, 128, 137, 144, 159, 170, 189, 191, 206, 208, 222, 228, 265, 266, 267, 268, 481, 482, 652, 888], "c2": [71, 112, 206], "cp4": 71, "pz": [71, 128, 137, 143, 159, 191, 222, 228], "p2": [71, 112], "590631749463316": 71, "f6": 71, "understand": [71, 135, 144, 190, 202, 242, 847, 870, 871, 876, 888], "physiologi": 71, "clip": [71, 172, 219, 257, 262, 265, 266, 267, 268, 274, 413, 420, 481, 482, 562, 563, 578, 708, 710, 712, 773, 788, 795, 799, 808, 809, 811, 816, 818, 888], "bridged_idx": [71, 571, 594, 776], "ed_matrix": [71, 571, 776], "ax1": [71, 86, 90, 99, 137, 183, 195], "ax2": [71, 86, 90, 96, 99, 137, 183, 195, 229, 230], "triangular": [71, 160, 161, 271, 638, 695, 696, 698, 699, 815, 841, 863, 870, 873], "ed_plot": 71, "triu_idx": 71, "triu_indic": 71, "idx0": 71, "idx1": 71, "nanmedian": 71, "im1": 71, "cax1": 71, "set_label": [71, 146, 196, 227], "mu": [71, 202, 227, 571, 888], "im2": 71, "cax2": 71, "histogram": [71, 158, 265, 266, 786], "previou": [71, 140, 144, 151, 161, 170, 171, 172, 181, 201, 202, 206, 208, 219, 267, 268, 298, 299, 356, 360, 361, 371, 372, 373, 413, 419, 420, 456, 457, 476, 478, 479, 541, 573, 584, 595, 756, 774, 796, 858, 873, 888], "pair": [71, 103, 120, 137, 144, 168, 188, 189, 190, 192, 196, 210, 211, 227, 235, 242, 257, 262, 265, 266, 267, 268, 270, 272, 273, 274, 276, 278, 279, 280, 281, 284, 289, 304, 413, 420, 481, 482, 505, 529, 562, 563, 571, 594, 606, 638, 695, 697, 698, 708, 709, 710, 712, 743, 756, 772, 776, 777, 780, 788, 794, 795, 799, 811, 814, 816, 818, 819, 841, 847, 888], "isnan": 71, "arrang": [71, 127, 151, 165, 170, 219, 245, 326, 761], "light": [71, 137, 142, 171, 190, 200, 213, 265, 266, 267, 268, 416, 423, 481, 482, 563, 756, 786, 790, 803, 809, 843, 864, 888], "horizont": [71, 81, 135, 137, 140, 141, 142, 180, 191, 199, 210, 227, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 563, 756, 775, 790, 802, 803, 809, 814, 819, 888], "stand": [71, 155, 169, 175, 669, 847, 859], "insert": [71, 151, 169, 216, 262, 270, 274, 289, 304, 439, 455, 529, 743, 761], "syring": 71, "tip": [71, 205, 245, 356, 851, 852, 868, 874], "plot_bridged_electrod": [71, 878, 888], "saniti": [71, 120, 144, 182, 202, 449, 673, 876, 888], "implausibli": [71, 202, 227, 701], "interestingli": [71, 870], "though": [71, 75, 112, 151, 156, 160, 168, 172, 179, 183, 190, 199, 202, 203, 205, 206, 207, 212, 227, 270, 759, 779, 843, 864, 870, 888], "adjac": [71, 142, 146, 200, 228, 236, 237, 320, 331, 425, 454, 565, 568, 678, 679, 680, 681, 682, 683, 684, 688, 695, 696, 698, 699, 777, 876, 885, 888], "distinct": [71, 72, 196, 245, 262, 265, 266, 267, 268, 413, 420, 481, 482, 562, 708, 710, 712, 773, 788, 795, 811, 816, 818], "unlik": [71, 140, 141, 149, 150, 156, 160, 170, 181, 199, 202, 204, 216, 264, 265, 266, 267, 268, 273, 279, 281, 363, 392, 421, 596, 712, 819, 845, 863, 870, 888], "ch1": 71, "ch2": 71, "9760": [71, 83], "9759": [71, 83], "lesser": [71, 481, 482, 809, 888], "trough": [71, 144], "monoton": [71, 101, 492, 590, 760], "discrep": [71, 870], "driven": [71, 196, 227, 373, 420, 476], "blink": [71, 73, 83, 93, 94, 144, 172, 192, 199, 201, 204, 205, 207, 208, 213, 216, 218, 242, 245, 259, 265, 266, 500, 562, 578, 660, 661, 888], "flatten": [71, 119, 206, 227, 231, 237, 245, 773, 888], "axvspan": [71, 96, 151], "subplots_adjust": [71, 72, 74, 107, 109, 112, 120, 127, 146, 151, 160, 200, 203, 205, 206, 207, 208, 211, 217, 227, 229, 230, 232, 779], "wspace": [71, 74, 127, 227], "compel": 71, "evid": [71, 113, 202, 203, 245, 563, 737, 740], "judici": [71, 847], "electrolyt": [71, 245, 571], "tri": [71, 160, 161, 168, 175, 178, 265, 266, 271, 272, 276, 278, 280, 320, 367, 436, 468, 638, 641, 657, 677, 681, 684, 814, 836, 865, 870, 873, 888], "those": [71, 75, 79, 99, 127, 142, 144, 151, 157, 161, 165, 166, 168, 169, 170, 171, 172, 175, 180, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 216, 217, 218, 222, 223, 227, 257, 260, 265, 266, 267, 268, 270, 278, 298, 312, 314, 326, 329, 331, 357, 358, 359, 361, 370, 371, 415, 419, 429, 434, 436, 437, 442, 446, 465, 481, 482, 492, 510, 541, 549, 562, 563, 565, 566, 579, 580, 581, 587, 591, 601, 603, 610, 657, 660, 661, 676, 694, 703, 708, 710, 711, 712, 716, 717, 718, 719, 721, 735, 736, 738, 739, 780, 786, 787, 790, 792, 793, 800, 807, 810, 847, 863, 869, 870, 872, 888], "biolog": [71, 199, 206, 207, 245, 530, 863, 870], "interpolate_bridged_electrod": [71, 878, 888], "midwai": [71, 594], "aid": [71, 245, 594, 888], "recov": [71, 166, 367, 888], "impli": [71, 162, 223, 242, 270, 332, 366, 496, 867], "unbridg": 71, "ch0": 71, "bridged_idx_simul": 71, "data_orig": 71, "rng": [71, 92, 93, 94, 114, 195, 202, 227, 515, 563, 593, 612, 660, 661, 662, 671, 672, 674, 695, 696, 697, 698, 699], "random": [71, 84, 90, 92, 93, 94, 114, 159, 190, 191, 195, 199, 202, 205, 224, 227, 228, 235, 236, 237, 478, 515, 563, 593, 612, 660, 661, 662, 671, 672, 674, 695, 696, 697, 698, 699, 888], "default_rng": 71, "seed": [71, 90, 95, 112, 114, 205, 223, 224, 228, 235, 236, 237, 471, 515, 563, 593, 612, 660, 661, 662, 671, 672, 674, 687, 695, 696, 697, 698, 699, 888], "raw_sim": [71, 93, 94], "bridged_data": 71, "tile": [71, 114], "back": [71, 75, 83, 88, 116, 140, 143, 158, 161, 162, 166, 171, 172, 180, 181, 200, 202, 205, 206, 207, 208, 240, 258, 265, 266, 267, 268, 275, 367, 371, 428, 454, 481, 482, 563, 790, 847, 867, 888], "raw_virtu": 71, "data_virtu": 71, "raw_comp": 71, "data_comp": 71, "With": [71, 114, 121, 162, 171, 172, 188, 191, 206, 207, 212, 218, 224, 265, 266, 267, 268, 283, 455, 481, 482, 506, 563, 645, 756, 804, 843, 847, 850, 855, 859, 867, 869, 870], "comp": [71, 169, 270, 888], "1086289630948187e": 71, "1398345563221063e": 71, "brought": [71, 156], "impend": 71, "help": [71, 73, 120, 135, 140, 144, 145, 146, 151, 159, 160, 161, 162, 166, 169, 171, 172, 181, 188, 190, 196, 199, 200, 201, 203, 204, 205, 207, 219, 231, 257, 263, 264, 265, 266, 267, 268, 271, 272, 273, 276, 279, 280, 281, 440, 442, 448, 472, 481, 482, 489, 496, 497, 504, 513, 563, 613, 619, 652, 657, 671, 674, 700, 708, 711, 753, 756, 764, 786, 800, 814, 847, 852, 853, 863, 865, 869, 870, 871, 873, 876, 888], "quest": 71, "technician": [71, 863, 864], "noisi": [71, 92, 142, 150, 200, 202, 207, 210, 227, 235, 237, 242, 270, 584, 585, 588, 660, 661, 672, 863, 888], "bid": [71, 136, 171, 245, 265, 266, 314, 481, 482, 854, 864, 876, 888], "tsv": [71, 332, 888], "kohm": 71, "passiv": [71, 199], "accept": [71, 94, 140, 169, 171, 172, 188, 200, 201, 202, 205, 206, 207, 216, 260, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 316, 346, 361, 379, 380, 381, 388, 390, 481, 482, 506, 565, 580, 581, 693, 695, 696, 698, 699, 710, 712, 756, 780, 787, 788, 794, 812, 841, 847, 866, 888], "from_list": 71, "impedance_cmap": 71, "cn": [71, 818], "cax": [71, 112, 116, 127, 146, 232], "omega": [71, 109], "hopefulli": [71, 199, 242, 453], "convinc": [71, 151], "tenk": [71, 72, 245, 571, 572], "kayser": [71, 72, 245, 571, 572], "electroencephalogram": [71, 245, 571], "offici": [71, 72, 190, 245, 506, 563, 571, 572, 621, 847, 855, 869, 872, 888], "feder": [71, 245, 563, 571], "545": [71, 196, 201, 215, 232, 245, 571], "550": [71, 81, 162, 224, 232, 245, 434, 571], "march": [71, 245, 571, 873, 888], "s1388": [71, 112, 245, 571], "2457": [71, 112, 245, 571], "00553": [71, 245, 571], "arnaud": [71, 245, 563, 571], "delorm": [71, 245, 563, 571], "scott": [71, 112, 144, 213, 245, 437, 476, 563, 571, 863, 888], "makeig": [71, 112, 144, 245, 437, 476, 563, 571, 863], "134": [71, 149, 169, 232, 245, 278, 528, 571], "jneumeth": [71, 75, 202, 232, 245, 563, 571, 668, 695, 696, 698, 699], "2003": [71, 195, 242, 245, 419, 571, 863], "009": [71, 74, 121, 128, 140, 149, 169, 224, 245, 571], "942": [71, 85, 195, 232], "eeg_bridg": [71, 85], "laplacian": [72, 195, 245, 425, 572, 652, 888], "sharper": [72, 202], "impact": [72, 137, 178, 200, 242, 413, 888], "166799": [72, 167, 182, 204], "714": [72, 167, 182, 196, 204, 232], "date": [72, 74, 77, 81, 82, 83, 90, 93, 127, 141, 146, 151, 167, 168, 169, 189, 199, 200, 201, 203, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 257, 259, 265, 266, 267, 268, 270, 481, 482, 483, 493, 496, 596, 845, 847, 888], "decemb": [72, 74, 77, 81, 82, 83, 90, 93, 127, 141, 146, 151, 167, 168, 169, 199, 200, 201, 203, 205, 206, 207, 208, 210, 216, 217, 218, 219, 224], "2002": [72, 74, 77, 83, 90, 93, 112, 127, 141, 146, 151, 166, 167, 168, 169, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 216, 217, 218, 219, 224, 245, 259, 530, 690, 692, 697, 870], "gmt": [72, 74, 77, 81, 82, 83, 90, 93, 127, 141, 146, 151, 167, 168, 169, 199, 200, 201, 203, 205, 206, 207, 208, 210, 211, 213, 216, 217, 218, 219, 224], "146": [72, 74, 77, 83, 90, 93, 127, 141, 146, 151, 166, 167, 168, 169, 199, 200, 201, 203, 205, 206, 207, 208, 210, 213, 216, 217, 218, 219, 224, 227, 231, 232, 245], "172": [72, 75, 83, 85, 93, 127, 167, 168, 169, 175, 187, 199, 200, 202, 203, 206, 207, 208, 209, 210, 216, 217, 218, 219, 227, 231, 245, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 668, 673, 708, 711], "hh": [72, 74, 77, 81, 82, 83, 90, 93, 127, 141, 146, 151, 167, 168, 199, 200, 201, 203, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 219, 224], "ss": [72, 74, 77, 81, 82, 83, 90, 93, 127, 141, 146, 151, 167, 168, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 219, 224, 870], "raw_csd": 72, "compute_current_source_dens": [72, 652, 878, 888], "421": [72, 107, 110, 142, 162, 176, 182, 204, 223, 227, 230, 231, 232], "evoked_csd": 72, "stiff": [72, 572], "spline": [72, 79, 200, 245, 265, 266, 267, 268, 481, 482, 572, 870, 888], "flexibl": [72, 143, 172, 189, 212, 756, 888], "hspace": [72, 74, 127, 227], "set_size_inch": [72, 204], "this_evoked_csd": 72, "contour": [72, 101, 120, 158, 172, 241, 257, 262, 265, 266, 267, 268, 274, 413, 420, 481, 482, 562, 563, 578, 591, 708, 710, 712, 773, 774, 788, 791, 792, 795, 799, 808, 811, 816, 818, 888], "n\u03bb\u00b2": 72, "perrin": [72, 79, 200, 245, 572, 870], "pernier": [72, 79, 200, 245, 572, 724, 734, 735, 738, 870], "bme": [72, 245, 572], "1987": [72, 176, 202, 245, 572], "326089": [72, 245, 572], "jacqu": [72, 79, 200, 245, 572, 724, 734, 735, 738, 870], "olivi": [72, 79, 200, 245, 356, 563, 572, 724, 734, 735, 738, 870], "fran\u0107oi": [72, 79, 200, 245, 572, 870], "echalli": [72, 79, 200, 245, 572, 870], "184": [72, 76, 79, 137, 139, 169, 196, 200, 209, 227, 231, 232, 245, 572, 602, 870], "187": [72, 76, 79, 169, 196, 200, 227, 245, 563, 572, 870], "1989": [72, 79, 200, 245, 572, 870], "90180": [72, 79, 200, 245, 572, 870], "mike": [72, 245, 572], "cohen": [72, 119, 129, 245, 572, 722, 724, 734, 738, 773, 888], "theori": [72, 165, 178, 210, 245, 572, 595], "j\u00fcrgen": [72, 205, 245, 563, 572], "craig": [72, 245, 572], "methodologi": [72, 101, 245, 356, 572], "electrophysiologi": [72, 245, 572], "173": [72, 145, 158, 169, 232, 245, 278, 572], "ijpsycho": [72, 245, 572], "202": [72, 85, 109, 169, 209, 227, 228, 231, 232, 873, 888], "eeg_csd": [72, 85], "eog_event_id": 73, "eog_ev": [73, 201, 259, 576, 586, 589], "find_eog_ev": [73, 199, 201, 218, 259, 576, 581, 865, 878, 888], "add_ev": [73, 172, 275, 481, 482, 888], "audr": 73, "visr": 73, "pick_ch": 73, "375": [73, 81, 94, 169, 199, 201, 207, 209, 232], "dc": [73, 166, 168, 172, 190, 199, 201, 202, 203, 204, 205, 207, 212, 217, 260, 265, 267, 268, 270, 343, 481, 482, 563, 565, 595, 809, 843, 873, 888], "offset": [73, 93, 136, 161, 168, 172, 191, 199, 201, 202, 204, 205, 206, 207, 216, 217, 218, 259, 260, 263, 264, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 363, 442, 454, 481, 482, 500, 566, 609, 622, 688, 708, 711, 756, 843, 873, 888], "saccad": [73, 172, 191, 192, 199, 201, 204, 205, 207, 213, 500, 562], "firwin2": [73, 146, 172, 191, 199, 201, 202, 204, 205, 207, 265, 266, 267, 268, 415, 424, 449, 451, 452, 481, 482, 888], "hann": [73, 84, 108, 109, 146, 172, 199, 201, 202, 204, 205, 207, 265, 266, 267, 268, 424, 449, 451, 452, 481, 482, 536, 537, 659, 660, 661, 673, 888], "1502": [73, 172, 201, 205], "073": [73, 85, 245, 421], "eog_artifact_histogram": [73, 85], "basic": [74, 83, 112, 150, 151, 158, 161, 162, 165, 166, 171, 172, 173, 176, 193, 199, 204, 205, 206, 207, 210, 216, 219, 220, 224, 243, 244, 245, 257, 265, 270, 274, 314, 330, 375, 392, 442, 448, 491, 560, 710, 818, 864, 870, 888], "thorough": [74, 165, 200, 871], "modul": [74, 140, 142, 143, 145, 146, 149, 150, 151, 161, 166, 167, 168, 169, 170, 171, 172, 189, 190, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 216, 217, 218, 219, 222, 240, 242, 257, 349, 492, 557, 707, 753, 756, 846, 847, 854, 859, 867, 870, 876, 877, 878, 879, 880, 883, 886, 888], "eogregress": [74, 204, 212, 605, 811, 878, 888], "elimin": [74, 169, 204, 206, 210, 227, 235, 237, 357, 358, 359, 413, 587, 867, 870, 888], "slow": [74, 128, 137, 141, 144, 150, 202, 204, 211, 245, 265, 266, 405, 406, 418, 536, 537, 593, 726, 746, 788, 847, 864], "drift": [74, 141, 202, 204, 211, 212, 563, 609, 888], "1653": [74, 75], "376": [74, 81, 93, 94, 95, 135, 139, 149, 166, 167, 169, 179, 209, 216, 227, 232], "offpca": [74, 77, 93, 167, 168, 169, 199, 200, 201, 203, 205, 206, 207, 210, 216, 217, 218, 219, 224], "offaverag": [74, 93, 169, 201, 205], "raw_clean": [74, 84, 204, 603], "evoked_befor": 74, "evoked_aft": 74, "epochs_aft": 74, "spatial_color": [74, 94, 99, 129, 137, 144, 150, 151, 207, 219, 222, 265, 266, 267, 268, 481, 482, 710, 712, 790, 793, 810, 888], "905": [74, 232], "710": [74, 79, 81, 85, 196, 209, 232, 245, 571], "eog_regress": [74, 85], "intermitt": 75, "extern": [75, 151, 180, 188, 210, 245, 265, 266, 267, 268, 343, 345, 349, 434, 443, 444, 445, 446, 481, 482, 563, 573, 574, 584, 595, 863, 864, 870, 888], "magnet": [75, 81, 119, 129, 150, 156, 176, 188, 203, 204, 212, 232, 245, 344, 530, 563, 577, 773, 843, 848, 863, 864], "fail": [75, 207, 360, 367, 432, 434, 463, 497, 498, 573, 574, 584, 595, 613, 615, 619, 644, 646, 836, 847, 869, 888], "succe": [75, 161, 171, 853], "choos": [75, 82, 114, 115, 135, 141, 146, 151, 160, 162, 180, 181, 189, 195, 199, 202, 204, 205, 210, 229, 242, 258, 265, 266, 272, 273, 276, 278, 279, 280, 281, 321, 454, 530, 538, 562, 568, 575, 585, 588, 595, 622, 671, 674, 694, 756, 772, 775, 814, 819, 820, 845, 847, 867, 869, 888], "made": [75, 116, 155, 172, 199, 202, 227, 265, 266, 271, 273, 278, 279, 281, 316, 330, 489, 609, 673, 787, 789, 819, 845, 847, 864, 869, 888], "whose": [75, 95, 144, 168, 170, 188, 196, 224, 265, 266, 267, 268, 272, 273, 275, 276, 279, 280, 281, 298, 299, 356, 360, 361, 371, 372, 373, 413, 420, 442, 447, 456, 457, 476, 478, 479, 481, 482, 522, 541, 563, 568, 578, 580, 581, 585, 661, 711, 712, 780, 783, 796, 801, 810, 811, 869, 870, 873, 888], "particularli": [75, 161, 190, 204, 227, 265, 266, 267, 268, 440, 481, 482, 563, 584, 850, 870], "heavi": [75, 235, 237, 867, 888], "jeff": [75, 245, 563, 888], "hanna": [75, 245, 563, 888], "refmeg_nois": [75, 171, 864, 878, 888], "sample_reference_meg_nois": 75, "refmeg": 75, "165353": 75, "530": [75, 81, 208, 232, 245], "30000": [75, 412], "select_pick": 75, "plot_kwarg": [75, 157, 204, 212], "480": [75, 81, 171, 191, 227, 232], "raw_tog": 75, "ica_kwarg": 75, "picard": [75, 77, 83, 205, 563, 854, 888], "fit_param": [75, 77, 172, 413, 414, 415, 416, 417, 418, 420, 421, 423, 424, 430, 563, 564, 888], "all_pick": 75, "ica_tog": 75, "allow_ref_meg": [75, 563], "bad_comp": 75, "find_bads_ref": [75, 563, 888], "plot_properti": [75, 83, 166, 205, 563, 874, 888], "patient": [75, 77, 83, 136, 166, 172, 205, 888], "took": [75, 77, 83, 166, 172, 205, 563], "dpss": [75, 83, 103, 104, 137, 142, 143, 166, 172, 205, 240, 241, 265, 266, 267, 268, 426, 481, 482, 710, 712, 720, 726, 736, 739, 888], "raw_sep": 75, "ref_pick": 75, "ica_ref": 75, "ica_sep": 75, "think": [75, 144, 172, 196, 202, 227, 843, 866], "ekg": [75, 136], "cardiac": [75, 211], "ref_comp": 75, "get_sourc": [75, 563, 888], "ref_": 75, "recognis": 75, "cora": [75, 245, 563, 888], "kim": [75, 245, 563, 888], "nadia": [75, 245, 563], "voggel": [75, 245, 563], "magnetoencephalograph": [75, 245, 563], "108592": [75, 245, 563], "find_ref_artifact": [75, 85], "fnir": [76, 165, 169, 170, 193, 194, 214, 215, 245, 265, 266, 267, 268, 270, 314, 330, 355, 373, 375, 442, 481, 482, 505, 510, 512, 560, 597, 598, 599, 601, 602, 708, 710, 711, 712, 756, 772, 780, 789, 794, 843, 854, 870, 888], "mail": [76, 213, 227, 858], "robertluk": 76, "net": [76, 170, 195, 245, 419, 690, 870, 888], "optical_dens": [76, 211, 878, 888], "temporal_derivative_distribution_repair": [76, 878, 888], "exact": [76, 103, 203, 227, 235, 242, 245, 265, 266, 267, 268, 291, 430, 481, 482, 530, 695, 697, 698, 709, 713, 715, 716, 718, 843, 851, 870, 888], "fnirs_data_fold": [76, 211], "fnirs_motor": [76, 171, 211, 864, 878, 888], "fnirs_cw_amplitude_dir": [76, 211], "raw_intens": [76, 211], "read_raw_nirx": [76, 190, 211, 487, 870, 878, 888], "raw_od": [76, 211], "new_annot": [76, 218], "set_annot": [76, 81, 82, 137, 168, 191, 201, 218, 259, 265, 266, 481, 482, 565, 596, 888], "23238": [76, 211], "2974": [76, 211], "464": [76, 144, 171, 196, 209, 211, 232, 278], "spike": [76, 83, 258, 602, 863], "person": [76, 151, 192, 211, 270, 847, 863, 869], "optod": [76, 190, 211, 512, 599, 756, 772, 864, 888], "corrupted_data": 76, "450": [76, 81, 141, 160, 278, 888], "750": [76, 81, 143, 196, 232, 864], "corrupted_od": 76, "245": [76, 103, 106, 112, 169, 185, 201, 227, 231, 232, 245, 870], "8924": 76, "8923": 76, "suppli": [76, 101, 152, 172, 180, 207, 222, 227, 263, 264, 265, 266, 267, 268, 272, 273, 275, 276, 279, 280, 281, 362, 388, 437, 447, 448, 481, 482, 563, 578, 601, 602, 649, 708, 711, 779, 780, 799, 888], "corrected_tddr": 76, "said": [76, 175], "fishburn": [76, 245, 602], "ruth": [76, 245, 602], "ludlum": [76, 245, 602], "chandan": [76, 245, 602], "vaidya": [76, 245, 602], "andrei": [76, 245, 602], "medvedev": [76, 245, 602], "tddr": [76, 245, 602, 888], "motion": [76, 245, 567, 602, 888], "025": [76, 128, 136, 140, 146, 149, 169, 191, 199, 202, 224, 227, 245, 602], "fnirs_artifact_remov": [76, 85], "pierreablin": 77, "9009": [77, 172, 205], "run_ica": [77, 888], "t0": [77, 100, 185, 242, 258, 713, 714, 715], "fit_tim": 77, "infomax": [77, 205, 245, 563, 874, 878, 888], "651": [77, 85, 196, 232], "ica_comparison": [77, 85], "evoked_interp": 79, "product": [79, 87, 119, 124, 150, 170, 188, 189, 195, 200, 207, 245, 270, 333, 426, 688, 736, 737, 739, 740, 765, 869, 870, 888], "evoked_interp_mn": 79, "\u03b1": [79, 142, 207, 219], "0e": [79, 195, 207], "interpolate_bad_channel": [79, 85], "bilater": [80, 207, 656, 888], "repeat": [80, 93, 101, 113, 140, 161, 165, 167, 206, 207, 216, 217, 227, 233, 234, 238, 239, 259, 265, 266, 267, 268, 270, 276, 278, 362, 437, 481, 529, 530, 544, 560, 563, 578, 604, 622, 637, 680, 689, 691, 692, 696, 699, 700, 711, 738, 756, 794, 847, 855, 867, 888], "maxwell_filt": [80, 184, 209, 210, 434, 573, 584, 596, 798, 867, 878, 888], "head_po": [80, 81, 209, 210, 434, 584, 595, 659, 660, 661, 673, 888], "chpi": [80, 81, 123, 169, 183, 209, 210, 257, 265, 266, 267, 268, 270, 275, 313, 434, 481, 482, 560, 567, 570, 595, 659, 660, 661, 673, 708, 710, 711, 712, 779, 786, 809, 843, 870, 876, 877, 878, 888], "read_head_po": [80, 209, 210, 344, 346, 352, 354, 434, 584, 595, 659, 660, 661, 673, 878], "simulated_quat": 80, "simulated_movement_raw": 80, "raw_stat": 80, "simulated_stationary_raw": 80, "34208": 80, "955": [80, 83, 143, 209], "backward": [80, 202, 257, 265, 266, 267, 268, 373, 413, 419, 420, 424, 441, 448, 449, 451, 452, 481, 482, 536, 710, 712, 756, 788, 797, 821, 870, 888], "plot_head_posit": [80, 81, 209, 210, 878, 888], "quiver": [80, 263, 756, 784, 798], "306m": [80, 109, 116, 123, 124, 150, 156, 158, 170, 172, 183], "topo_kwarg": [80, 141], "evoked_stat": 80, "naiv": [80, 231], "therebi": [80, 175, 204, 206, 736, 739, 870], "third": [80, 94, 95, 151, 169, 172, 188, 207, 211, 218, 259, 260, 265, 441, 442, 454, 455, 481, 482, 523, 558, 563, 621, 622, 698, 699, 712, 789, 833, 847, 870], "restor": [80, 201, 208, 267, 268, 413, 417, 563, 564, 607, 756, 834, 888], "raw_sss": [80, 172, 210, 257, 481, 482, 502, 595], "evoked_raw_mc": 80, "harmon": [80, 93, 183, 184, 191, 199, 203, 209, 210, 242, 245, 577, 870, 888], "fourth": [80, 202, 218, 471, 870], "cleanli": [80, 169], "evoked_evo_mc": 80, "average_mov": [80, 210, 595, 878, 888], "617": [80, 85, 185, 187, 196], "movement_compens": [80, 85], "contamin": [81, 202, 205, 245, 563], "similarli": [81, 99, 112, 143, 149, 171, 196, 202, 208, 211, 259, 563, 780, 865, 870], "suffer": [81, 863], "adonai": [81, 82, 888], "nune": [81, 82, 245, 668, 888], "bst_auditori": [81, 82, 191, 878], "annotate_mov": [81, 209, 878, 888], "compute_average_dev_head_t": [81, 567, 878, 888], "data_path_meg": 81, "raw_fname1": [81, 191], "s01_aef_20131218_01": [81, 82, 191], "raw_fname2": [81, 191], "s01_aef_20131218_02": [81, 191], "mismatch": [81, 160, 161, 191, 356, 447, 538, 813, 888], "on_mismatch": [81, 191, 356, 363, 365, 834, 888], "350": [81, 116, 117, 141, 160, 169, 227, 232], "264": [81, 82, 112, 151, 169, 191, 209, 245], "s01_20131218_01": [81, 82, 191], "2400": [81, 82, 184, 191], "864000": [81, 82, 191], "263": [81, 82, 112, 169, 191, 209, 210, 227, 232], "eab": [81, 82], "s01": [81, 82], "lt": [81, 115], "br": 81, "gt": 81, "chpi_loc": [81, 209, 344, 346, 347, 348], "extract_chpi_locs_ctf": [81, 344, 346, 878, 888], "compute_head_po": [81, 209, 210, 344, 347, 595, 878, 888], "original_head_dev_t": 81, "invert_transform": [81, 135], "average_head_dev_t": 81, "val": [81, 101], "val_ori": 81, "010": [81, 94, 128, 140, 149, 155, 169, 224, 245], "020": [81, 128, 140, 149, 169, 224], "090": [81, 209], "220": [81, 106, 112, 137, 169, 196, 209, 232], "370": [81, 127, 130, 169, 209, 227, 232, 245, 271, 276], "380": [81, 106, 232], "430": [81, 96, 204, 215, 232], "460": [81, 184, 232, 245, 862], "470": [81, 209, 227], "490": [81, 232], "510": [81, 144, 209, 227, 232, 242], "520": [81, 232], "630": [81, 195, 196, 232], "640": [81, 183, 209, 222], "680": [81, 196, 209, 232], "720": [81, 209, 245, 571], "730": [81, 232], "740": [81, 232], "790": [81, 209], "820": [81, 215], "830": [81, 232], "840": [81, 232], "850": [81, 209, 232, 888], "870": [81, 245, 692], "910": [81, 232], "920": [81, 101, 143, 228], "940": [81, 232], "950": [81, 196, 209, 242], "970": [81, 209, 232], "980": [81, 116, 130, 205, 209, 232], "351": [81, 169, 209], "353": [81, 169, 227, 232], "355": [81, 169, 232], "356": [81, 169, 227, 232], "369": [81, 169, 209, 245, 530, 668, 870], "182": [81, 169, 174, 191, 196, 227, 231, 232, 239], "367": [81, 169, 200, 209, 232], "368": [81, 90, 91, 169, 171, 232, 235], "371": [81, 169, 196, 209, 232], "372": [81, 169, 209, 232], "377": [81, 97, 100, 102, 227, 232], "379": [81, 232], "381": [81, 109, 209, 227], "386": [81, 209, 232], "388": [81, 209, 227, 232, 245], "389": [81, 196, 232], "391": [81, 209, 213, 215, 232], "393": [81, 209], "394": [81, 145, 148, 209, 232, 690], "397": [81, 227, 232], "399": [81, 209, 227, 232], "405": [81, 209, 222, 226, 232], "407": [81, 232], "409": [81, 109, 119, 209, 232, 245, 773], "mean_distance_limit": [81, 567], "0015": 81, "annotation_mov": 81, "hpi_disp": [81, 567], "disp": 81, "0015m": 81, "0038m": 81, "new_dev_head_t": 81, "show_ax": [81, 123, 125, 156, 157, 159, 182, 183, 315, 772, 805, 888], "outer_skin": [81, 109, 118, 156, 158, 159, 161, 172, 772, 863, 864, 870], "ctf_275": [81, 123, 184], "485": [81, 85, 168, 174, 195, 278], "movement_detect": [81, 85], "contract": [82, 869], "clench": [82, 205], "jaw": [82, 205], "swallow": [82, 199, 205], "twitch": 82, "cranial": 82, "notic": [82, 84, 140, 141, 143, 145, 149, 150, 151, 156, 160, 162, 166, 167, 170, 175, 191, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 213, 216, 218, 219, 222, 223, 584, 847], "annotate_muscle_zscor": [82, 878, 888], "taken": [82, 94, 137, 142, 192, 200, 204, 206, 207, 232, 235, 242, 258, 259, 267, 268, 270, 271, 275, 276, 298, 299, 356, 360, 361, 371, 372, 373, 413, 420, 456, 457, 476, 478, 479, 480, 481, 482, 541, 593, 613, 709, 720, 796, 809, 864, 869, 888], "analyt": [82, 113, 245, 265, 266, 267, 268, 481, 482, 888], "divid": [82, 101, 127, 142, 143, 144, 147, 148, 162, 165, 210, 227, 229, 232, 265, 266, 267, 268, 271, 272, 273, 276, 279, 280, 281, 288, 479, 481, 482, 522, 546, 547, 568, 571, 575, 595, 629, 685, 695, 698, 708, 710, 711, 712, 723, 731, 788, 812, 816, 843, 867, 871, 888], "squar": [82, 113, 128, 140, 149, 150, 151, 162, 168, 169, 178, 189, 202, 216, 222, 224, 227, 229, 240, 245, 262, 265, 266, 267, 268, 272, 273, 274, 276, 279, 280, 281, 298, 299, 329, 413, 420, 457, 481, 482, 538, 545, 562, 563, 578, 688, 693, 695, 696, 698, 699, 708, 709, 710, 712, 756, 773, 781, 782, 788, 790, 795, 797, 799, 802, 808, 811, 814, 816, 818, 819, 843, 867, 870, 873, 888], "hundr": [82, 205, 206, 471, 845], "bad_muscl": [82, 568], "min_length_good": [82, 568], "fraction": [82, 113, 144, 175, 199, 205, 227, 328, 536, 545, 563, 582, 703, 800, 869, 888], "notch": [82, 191, 203, 212, 349, 452, 481, 482], "1981": 82, "603": [82, 209, 232], "scores_muscl": [82, 568], "threshold_muscl": 82, "annot_muscl": 82, "filter_freq": [82, 568], "zscore": [82, 288, 546, 547, 563, 708, 711, 816], "144": [82, 169, 171, 196, 204, 209, 211, 231, 278, 888], "164": [82, 130, 133, 169, 202, 232, 234, 245, 695, 696, 698, 699], "196": [82, 85, 112, 169, 227, 231, 232], "muscle_detect": [82, 85], "gross": [83, 245, 413], "widespread": [83, 205], "recover": 83, "ubiquit": 83, "postur": [83, 205], "mainten": [83, 207, 847, 888], "appropri": [83, 146, 149, 162, 166, 182, 183, 190, 201, 205, 207, 210, 222, 227, 229, 231, 242, 245, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 320, 326, 362, 391, 392, 481, 482, 526, 541, 694, 756, 780, 809, 814, 819, 845, 847, 862, 867, 870, 873, 888], "wouldn": [83, 888], "pronounc": [83, 202, 867], "simultan": [83, 137, 142, 192, 196, 203, 205, 219, 421, 471, 505, 524, 609, 617, 697, 864, 870, 876, 888], "18019": 83, "1983": [83, 204, 245, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 562, 610, 708, 711], "18020": 83, "exclus": [83, 170, 200, 205, 498, 558, 563, 800, 802, 803, 888], "mdash": [83, 205], "plot_sourc": [83, 205, 265, 266, 481, 482, 563, 786, 803, 809, 888], "85861": 83, "103880": 83, "criteria": [83, 140, 166, 201, 206, 207, 211, 258, 265, 266, 275, 558, 563, 888], "slope": [83, 188, 202, 257, 258, 270, 343, 344, 506, 563, 888], "peripher": [83, 563], "pole": [83, 160], "foci": [83, 756, 888], "blob": [83, 235, 236], "worth": [83, 101, 149, 228, 245, 396, 489, 496, 847, 864, 865, 867], "fire": 83, "fuzzi": 83, "textbook": [83, 206, 245, 690], "temporali": 83, "ear": [83, 166, 170, 180, 864], "muscle_idx": [83, 563], "log_scal": [83, 563, 801], "blink_idx": 83, "heartbeat_idx": 83, "muscle_idx_auto": 83, "find_bads_muscl": [83, 563, 888], "s001r01": 83, "s002": [83, 205], "s002r01": 83, "dhani": [83, 245, 563], "dharmaprani": [83, 245, 563], "hoang": [83, 245, 563], "nguyen": [83, 245, 563], "trent": [83, 245, 563], "lewi": [83, 245, 563, 870], "delosangel": [83, 245, 563], "willoughbi": [83, 245, 563], "kenneth": [83, 144, 245, 437, 563], "pope": [83, 245, 563], "38th": [83, 245, 563], "annual": [83, 207, 245, 563, 872], "confer": [83, 144, 245, 301, 437, 563, 872], "societi": [83, 190, 245, 356, 530, 563, 737, 740, 870], "embc": [83, 205, 245, 563], "828": [83, 232, 245, 563], "orlando": [83, 245, 563], "fl": [83, 245, 563], "usa": [83, 199, 245, 563], "7590828": [83, 245, 563], "035": [83, 85, 140, 149, 169, 224], "muscle_ica": [83, 85], "otp": [84, 85, 603], "flux": [84, 210, 212, 265, 266, 267, 268, 481, 482, 560, 708, 710, 711, 712, 870], "jump": [84, 112, 144, 199, 210, 695, 696, 698, 699, 888], "bst_phantom_elekta": [84, 183], "phantom": [84, 165, 186, 187, 245, 262, 263, 265, 267, 268, 270, 304, 356, 361, 392, 433, 454, 456, 481, 492, 494, 526, 595, 772, 784, 796, 824, 864, 870, 888], "rid": [84, 231], "1522": [84, 169], "dipole_numb": 84, "kojak_all_200nam_pp_no_chpi_no_ms_raw": [84, 183], "47000": [84, 183], "437999": [84, 183], "437": [84, 137, 183, 196, 232], "alongsid": [84, 145, 149, 155, 200, 205, 206, 208, 217, 807, 843, 854], "oversampled_temporal_project": [84, 878, 888], "lump": [84, 595], "compute_bia": 84, "sti201": [84, 183, 270], "make_sphere_model": [84, 125, 156, 183, 184, 185, 208, 519, 870, 878, 888], "r0": [84, 125, 156, 183, 184, 185, 526], "head_radiu": [84, 125, 156, 183, 184, 185, 526, 888], "036": [84, 140, 149, 169, 183, 224, 245, 668], "actual_po": [84, 183, 185], "get_phantom_dipol": [84, 183, 392, 878, 888], "1fmm": 84, "worst": [84, 121, 356, 361, 664, 666, 667, 888], "bias_clean": 84, "2mm": [84, 870], "4mm": 84, "samu": [84, 162, 210, 245, 574, 595, 603, 673, 867, 888], "taulu": [84, 162, 210, 245, 434, 574, 595, 603, 673, 867, 888], "1013": [84, 169, 195, 245, 603], "2734641": [84, 245, 603], "011": [85, 128, 140, 149, 169, 202, 224, 245], "auto_examples_preprocess": 85, "virtual_evok": [85, 87], "805": [85, 87, 209, 232], "xdawn_denois": [85, 88], "shift_evok": [85, 86], "hut": 86, "2332": [86, 169, 557], "ax3": [86, 90, 99, 183, 195], "magnomet": 87, "virt_evok": 87, "as_typ": [87, 265, 266, 267, 268, 888], "plot_epochs_imag": [88, 117, 563, 799, 801, 878, 888], "signal_cov": [88, 564], "xd": 88, "1388": 88, "41640": 88, "epochs_denois": 88, "brief": [90, 95, 166, 199, 219, 227, 847], "simplest": [90, 95, 168, 196, 212, 227, 870], "kostiantyn": [90, 94, 95, 245, 668, 888], "maksymenko": [90, 94, 95, 245, 668, 888], "functool": [90, 227, 272, 273, 276, 279, 280, 281, 847], "partial": [90, 149, 151, 166, 201, 216, 217, 227, 245, 265, 266, 272, 273, 276, 279, 280, 281, 320, 597, 737, 740, 756, 780, 821, 825, 864, 876, 888], "region_localization_error": [90, 878], "f1_score": [90, 878], "precision_scor": [90, 878], "recall_scor": [90, 878], "cosine_scor": [90, 878], "peak_position_error": [90, 878], "spatial_deviation_error": [90, 878], "determinist": [90, 205, 888], "middl": [90, 95, 112, 160, 166, 202, 206, 222, 263, 270, 272, 273, 276, 279, 280, 281, 449, 775, 784, 814, 819, 820, 847, 870, 888], "frontal": [90, 95, 166, 199, 205, 207, 216, 224, 307, 642, 756], "selected_label": [90, 95], "term": [90, 103, 126, 166, 168, 195, 202, 206, 227, 231, 237, 242, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 332, 343, 379, 380, 381, 390, 481, 482, 538, 550, 572, 577, 668, 708, 711, 723, 724, 731, 734, 738, 843, 847, 864, 869, 870, 871, 876, 888], "label_region": 90, "select_sourc": [90, 95, 878, 888], "1915": 90, "One": [90, 96, 97, 100, 141, 143, 149, 150, 151, 155, 157, 166, 171, 178, 191, 202, 204, 205, 212, 216, 227, 245, 265, 266, 267, 268, 275, 314, 316, 440, 446, 481, 482, 563, 690, 697, 774, 786, 787, 803, 809, 847, 863, 870, 872, 873, 888], "label_dipol": 90, "source_time_seri": [90, 94, 95], "sin": [90, 92, 93, 94, 95, 114, 202, 222, 223, 224, 343, 604, 674], "n_event": [90, 95, 260, 265, 266, 270, 275, 284, 365, 441, 442, 454, 481, 482, 498, 523, 558, 566, 587, 609, 619, 621, 622, 658, 694, 711, 786, 789, 833, 843], "sourcesimul": [90, 94, 95, 673, 878, 888], "source_simulator_region": 90, "add_data": [90, 94, 95, 116, 272, 273, 276, 279, 280, 281, 658, 756, 814, 819], "source_simulator_dipol": 90, "gaussian": [90, 94, 114, 121, 152, 161, 162, 202, 205, 223, 227, 265, 266, 267, 268, 476, 593, 662, 724, 734, 737, 738, 740, 787, 796, 817, 863, 867, 870], "raw_region": 90, "simulate_raw": [90, 93, 94, 95, 224, 660, 661, 672, 674, 675, 878, 888], "make_ad_hoc_cov": [90, 93, 95, 224, 262, 299, 878, 888], "add_nois": [90, 93, 94, 95, 224, 660, 661, 673, 878, 888], "iir_filt": [90, 92, 93, 95, 224, 662, 672], "raw_dipol": 90, "cos2": [90, 93, 94, 95, 224, 659, 660, 661, 673], "498": [90, 227, 232], "evoked_region": 90, "evoked_dipol": 90, "stc_true_region": 90, "get_stc": [90, 94, 658], "start_sampl": [90, 216, 658], "stop_sampl": [90, 216, 658], "stc_true_dipol": 90, "stc_est_region": 90, "stc_est_dipol": 90, "0004": 90, "34986e": 90, "scorer": [90, 419, 430, 888], "rle": [90, 668], "region_result": 90, "thx": 90, "per_sampl": [90, 663, 664, 665, 666, 667, 668, 669, 670], "ax4": 90, "col": [90, 112, 756, 888], "super": [90, 242], "ticklabel_format": 90, "style": [90, 127, 150, 151, 171, 188, 211, 257, 260, 262, 265, 266, 267, 268, 275, 280, 281, 298, 413, 419, 420, 472, 481, 482, 506, 562, 563, 708, 710, 711, 712, 756, 772, 773, 780, 787, 788, 791, 793, 794, 795, 803, 804, 809, 811, 816, 817, 818, 820, 888], "sci": [90, 211, 599], "scilimit": 90, "tweak": [90, 114, 127, 242, 845, 865, 867], "dipole_result": 90, "162": [90, 91, 169, 187, 195, 196, 209, 232, 234, 245, 278], "plot_stc_metr": [90, 91], "233": [91, 169, 209, 232], "auto_examples_simul": 91, "simulated_raw_data_using_subject_anatomi": [91, 94], "874": [91, 94, 232], "732": [91, 96, 232], "simulate_raw_data": [91, 93], "source_simul": [91, 94, 95], "simulate_evoked_data": [91, 92], "163": [91, 92, 169, 177, 196, 209, 227, 231, 232, 278], "fit_iir_model_raw": [92, 111, 878, 888], "templat": [92, 93, 125, 135, 155, 157, 163, 164, 165, 170, 176, 232, 245, 269, 270, 278, 285, 304, 314, 318, 319, 320, 330, 331, 332, 336, 367, 375, 391, 438, 482, 496, 525, 578, 592, 614, 637, 657, 772, 824, 843, 861, 888], "read_proj": [92, 111, 131, 142, 191, 206, 265, 266, 267, 268, 275, 481, 482, 839, 878], "sample_audvis_ecg": [92, 111, 131, 142, 172, 206, 257], "randomst": [92, 93, 94, 114, 159, 195, 202, 224, 227, 515, 563, 593, 612, 660, 661, 662, 671, 672, 674, 695, 696, 697, 698, 699, 888], "randn": [92, 114, 159, 195, 202, 224, 227, 235, 236, 237], "high_resolut": [92, 815], "wronkiewicz": [93, 888], "wronk": 93, "add_ecg": [93, 94, 661, 673, 878, 888], "add_eog": [93, 94, 660, 673, 878, 888], "epoch_dur": [93, 571], "stagger": 93, "sinusoid": [93, 94, 114, 183, 184, 202, 209, 222, 224, 343, 452, 481, 482, 674, 843], "10hz": 93, "global": [93, 113, 121, 128, 142, 144, 149, 150, 155, 162, 166, 183, 207, 245, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 437, 754, 780, 787, 790, 793, 795, 796, 814, 819, 843, 847, 867, 888], "n_samp": [93, 216, 224, 888], "25e": 93, "1e9": [93, 184, 224], "plt_show": [93, 180, 227], "input": [93, 94, 114, 155, 172, 188, 195, 196, 202, 207, 210, 216, 227, 231, 232, 237, 257, 265, 266, 267, 268, 271, 272, 273, 276, 279, 280, 281, 284, 316, 332, 357, 358, 359, 363, 370, 413, 414, 416, 417, 419, 420, 421, 423, 425, 430, 437, 442, 448, 470, 472, 473, 478, 481, 482, 506, 508, 563, 564, 572, 573, 575, 576, 580, 581, 584, 585, 590, 608, 622, 674, 685, 687, 694, 695, 696, 698, 699, 706, 708, 726, 727, 756, 757, 759, 760, 772, 780, 787, 791, 795, 803, 814, 817, 819, 863, 869, 870, 873, 888], "millimet": [93, 94, 156, 160, 182, 213, 337, 341, 456, 471, 497, 515, 619, 870, 888], "calc": 93, "orphan": 93, "ivana": [94, 888], "kojcic": [94, 888], "deslauri": [94, 95, 888], "gauthier": [94, 95, 888], "sam": [94, 95, 888], "doesn": [94, 140, 156, 170, 171, 205, 207, 208, 210, 216, 229, 232, 242, 379, 380, 381, 382, 384, 385, 386, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 552, 563, 566, 581, 586, 595, 615, 654, 709, 711, 728, 801, 847, 855, 863, 867, 888], "fname_info": 94, "g_temp_sup": 94, "g_t_transv": 94, "s_calcarin": 94, "vice": [94, 134, 160, 202, 276, 870], "versa": [94, 134, 160, 202, 276, 870], "moreov": [94, 137, 206, 207, 227], "ipsilater": [94, 151, 176], "activation_list": 94, "region_nam": 94, "latenc": [94, 143, 144, 145, 149, 232, 245, 267, 268, 272, 273, 276, 279, 280, 281, 437, 695, 696, 698, 699, 791, 888], "sigma": [94, 117, 128, 137, 142, 196, 227, 265, 266, 526, 701, 702, 724, 734, 738, 746, 787, 817, 870, 873], "gf": 94, "rand": [94, 224], "100m": 94, "30m": 94, "15m": 94, "region_id": 94, "events_tmp": 94, "label_tmp": 94, "amplitude_tmp": 94, "latency_tmp": 94, "wf_tmp": 94, "evoked_aud_left": 94, "evoked_vis_right": 94, "mere": [94, 172, 205, 625, 869], "stc_aud": 94, "stc_vi": 94, "stc_diff": 94, "49264": [94, 178], "64e": [94, 178], "32542029": 94, "92022543": 94, "5110744": 94, "christoph": [94, 115, 151, 155, 195, 245, 356, 419, 692, 888], "destrieux": [94, 155, 245], "ander": [94, 155, 178, 245, 530, 870], "dale": [94, 155, 178, 245, 530, 870], "halgren": [94, 155, 245, 530], "sulci": [94, 155, 160, 223, 245], "nomenclatur": [94, 155, 216, 245], "sine": [95, 222, 257, 723, 731], "everi": [95, 103, 113, 127, 141, 144, 151, 168, 172, 175, 196, 203, 204, 205, 219, 242, 260, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 350, 462, 470, 478, 479, 481, 482, 515, 563, 565, 580, 581, 593, 612, 660, 661, 662, 671, 672, 674, 695, 696, 697, 698, 699, 708, 711, 847, 867, 868], "significantli": [96, 97, 100, 227, 230, 235, 236, 242, 272, 273, 276, 279, 280, 281, 695, 696, 698, 699, 869], "permutation_cluster_test": [96, 227, 230, 231, 699, 878, 888], "1332": [96, 97, 145, 166, 169, 229, 230, 231], "epochs1": [96, 235, 436], "condition1": [96, 235], "epochs2": [96, 235, 436], "condition2": [96, 235], "t_ob": [96, 228, 229, 235, 695, 697, 698, 888], "cluster_p_valu": [96, 229, 230, 231, 235, 236, 237], "n_permut": [96, 100, 112, 227, 228, 229, 230, 231, 232, 236, 237, 695, 696, 697, 698, 699], "tail": [96, 112, 151, 227, 229, 230, 231, 232, 235, 242, 263, 695, 696, 697, 698, 699, 784, 815, 888], "out_typ": [96, 112, 227, 229, 230, 231, 695, 696, 698, 699, 888], "stat_fun": [96, 112, 113, 227, 228, 229, 230, 231, 232, 235, 236, 237, 687, 695, 696, 698, 699], "000227": 96, "167093": 96, "3667": 96, "4177": 96, "578": [96, 151, 232], "884": [96, 209, 232, 239, 245], "4295": 96, "erf": [96, 117, 128, 191, 199, 202, 232, 245, 563, 799, 801, 854, 888], "i_c": 96, "871": [96, 102, 232], "cluster_stats_evok": [96, 102], "discoveri": [97, 231, 245, 692, 888], "bonferroni_correct": [97, 227, 878, 888], "fdr_correct": [97, 101, 227, 231, 878], "pval": [97, 231, 686, 692, 695, 696, 698, 699], "ttest_1samp": [97, 227, 701], "n_test": [97, 697], "threshold_uncorrect": 97, "ppf": [97, 211, 227, 229, 232, 235, 236, 597, 695, 696, 698, 699], "reject_bonferroni": 97, "pval_bonferroni": 97, "threshold_bonferroni": 97, "reject_fdr": 97, "pval_fdr": 97, "indep": [97, 692], "threshold_fdr": 97, "xmin": 97, "xmax": 97, "hline": [97, 141, 267, 268, 790], "uncorrect": [97, 227], "bonferroni": [97, 452, 481, 482, 686, 697, 888], "fdr_stats_evok": [97, 102], "generalis": 99, "tradit": [99, 143, 208, 212, 735, 736, 738, 739, 780], "predictor": [99, 141, 227, 562, 610, 694], "inapplic": 99, "rerp": [99, 245, 694], "smith": [99, 126, 227, 228, 245, 390, 694, 695, 696, 698, 699], "kuta": [99, 245, 694], "169": [99, 169, 209, 231, 232, 245, 694], "jona": [99, 101, 128, 196, 232, 245, 695, 696, 698, 699, 888], "sassenhagen": [99, 101, 128, 196, 232, 245, 695, 696, 698, 699, 888], "linear_regression_raw": [99, 102, 878, 888], "rerf": 99, "param": [99, 113, 413, 414, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 552, 564, 634, 888], "206": [99, 112, 169, 209, 231, 232], "permutation_t_test": [100, 227, 878], "temporal_mask": 100, "logical_and": [100, 114], "50000": 100, "p_valu": [100, 227, 232, 452, 481, 482, 697], "significant_sensor": 100, "significant_sensors_nam": 100, "49999": 100, "0243": [100, 142, 169], "1333": [100, 169, 235, 237], "1643": [100, 169], "2423": [100, 169], "2522": [100, 169], "2622": [100, 169], "2632": [100, 169], "2643": [100, 169], "stats_pick": 100, "cbar_fmt": [100, 109, 262, 265, 266, 267, 268, 274, 413, 420, 481, 482, 562, 563, 708, 710, 712, 788, 795, 799, 808, 811, 816, 888], "sensor_permutation_test": [100, 102], "psycholinguist": [101, 227], "st\u00e9phane": [101, 228, 245, 396, 864], "dufau": [101, 228, 245, 396, 864], "grainger": [101, 228, 245, 396, 864], "katherin": [101, 228, 245, 396, 737, 740, 864], "midglei": [101, 228, 245, 396, 864], "phillip": [101, 141, 228, 245, 391, 396, 864, 888], "holcomb": [101, 228, 245, 396, 864], "pictur": [101, 228, 245, 275, 396, 864], "snapshot": [101, 172, 228, 245, 396, 826, 847, 864, 888], "megastudi": [101, 228, 245, 396, 864], "psycholog": [101, 228, 245, 396, 864], "1897": [101, 228, 245, 396, 864], "0956797615603934": [101, 228, 245, 396, 864], "matt": [101, 245, 888], "davi": [101, 245], "ford": [101, 245], "friedmann": [101, 245], "pulverm\u00fcl": [101, 245], "william": [101, 195, 245, 419], "marslen": [101, 245], "wilson": [101, 245], "1383": [101, 245], "1400": [101, 245], "2006": [101, 178, 195, 210, 245, 265, 266, 541, 595, 665, 670, 737, 740], "2005": [101, 162, 210, 245, 434, 541, 574, 595, 665, 668, 670, 867], "048": [101, 140, 142, 149, 169, 183, 219, 224, 228, 245, 722, 724, 734, 738], "tal": [101, 120, 126, 245, 489, 496, 888], "linzen": [101, 120, 888], "pd": [101, 112, 136, 143, 151, 190, 191, 210], "kiloword": [101, 143, 171, 216, 228, 878], "kword_metadata": [101, 143, 228], "epo": [101, 140, 143, 172, 228, 257, 265, 266, 618, 888], "read_epoch": [101, 140, 143, 228, 867, 870, 878, 888], "visualcomplex": [101, 143], "film": [101, 143, 228, 876], "783710": [101, 143], "cent": [101, 143], "141553": [101, 143], "shot": [101, 143], "600033": [101, 143], "cold": [101, 143], "657457": [101, 143], "945661": [101, 143], "characterist": [101, 151, 202, 203, 245, 265, 266, 405, 436, 448, 584, 843], "concret": [101, 143, 144], "imagin": [101, 112, 206], "df": [101, 112, 140, 145, 191, 216, 227, 228, 229, 235, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 546, 695, 698, 708, 710, 711, 712], "cut": [101, 112, 113, 180, 206, 242, 257, 265, 266, 267, 268, 415, 424, 449, 451, 481, 482, 575, 576, 586, 589, 595, 599, 855, 873, 888], "split_legend": [101, 232, 780], "percentil": [101, 135, 136, 146, 265, 266, 272, 273, 275, 276, 279, 280, 281, 481, 482, 744, 775, 780, 786, 809, 814, 819, 820, 888], "gfp": [101, 113, 128, 142, 144, 150, 162, 166, 191, 232, 265, 266, 267, 268, 538, 780, 787, 790, 796, 813, 843, 867, 888], "7424": 101, "plot_evoked_imag": [101, 878, 888], "null": [101, 284, 439, 690, 888], "hypothesi": [101, 172, 228, 686, 690, 692, 697, 876], "colour": [101, 176, 888], "palett": [101, 112, 145], "dark": [101, 171, 172, 265, 266, 481, 482, 563, 756, 786, 803, 809, 888], "reject_h0": 101, "fdr_pval": 101, "plot_imag": [101, 128, 142, 143, 146, 150, 166, 199, 201, 211, 228, 265, 266, 267, 268, 888], "sensor_regress": [101, 102], "auto_examples_stat": 102, "csd_fourier": [103, 709, 713, 714, 715, 717, 718, 878, 888], "csd_multitap": [103, 709, 713, 714, 715, 716, 717, 726, 878, 888], "core": [103, 144, 166, 168, 171, 189, 222, 245, 265, 266, 267, 268, 271, 272, 273, 275, 276, 279, 280, 281, 283, 356, 357, 359, 361, 416, 423, 426, 429, 430, 456, 469, 471, 481, 482, 521, 524, 525, 536, 537, 546, 547, 568, 575, 576, 595, 647, 656, 659, 660, 661, 673, 695, 696, 697, 698, 699, 710, 712, 713, 714, 715, 716, 717, 718, 726, 727, 735, 736, 737, 738, 739, 788, 791, 810, 845, 846, 847, 854, 869, 888], "clariti": [103, 874], "adapt": [103, 113, 166, 190, 208, 224, 227, 245, 265, 266, 267, 268, 298, 299, 418, 452, 453, 481, 482, 536, 537, 563, 595, 710, 712, 715, 718, 724, 726, 734, 752, 788, 847, 853, 864, 869, 888], "csd_fft": 103, "csd_mt": 103, "convolv": [103, 111, 202, 227, 242, 419, 426], "600hz": 103, "enough": [103, 158, 180, 203, 204, 205, 207, 210, 216, 227, 242, 262, 265, 266, 267, 268, 274, 307, 308, 314, 413, 420, 432, 481, 482, 562, 563, 578, 703, 708, 710, 711, 712, 765, 773, 780, 786, 788, 790, 792, 795, 796, 799, 803, 806, 808, 809, 810, 811, 812, 816, 818, 851, 869, 870, 888], "10th": 103, "greatli": 103, "minim": [103, 141, 169, 202, 222, 242, 265, 266, 362, 421, 436, 573, 694, 736, 739, 756, 845, 867, 870], "csd_wav": 103, "crossspectraldens": [103, 291, 298, 319, 438, 713, 714, 715, 716, 717, 718, 719, 725, 728, 782, 878, 888], "trick": [103, 200, 242, 245, 697, 851, 888], "comma": [103, 257, 847, 888], "plot_dict": [103, 241], "889": [103, 106, 232, 278], "compute_csd": [103, 106], "taper": [104, 114, 265, 266, 267, 268, 418, 426, 452, 481, 482, 536, 537, 710, 712, 715, 718, 720, 726, 736, 739, 788, 888], "prolat": [104, 240, 245, 265, 266, 267, 268, 481, 482, 710, 712, 720, 726], "spheroid": [104, 240, 245, 265, 266, 267, 268, 481, 482, 710, 712, 720, 726], "sequenc": [104, 137, 245, 257, 265, 266, 267, 268, 481, 482, 685, 710, 712, 720, 756, 788, 864, 870], "compute_source_psd_epoch": [104, 106, 536, 878, 888], "n_epochs_us": 104, "psd_avg": 104, "set_xlim": [104, 113, 151, 206], "auto_examples_time_frequ": 106, "source_power_spectrum_opm": [106, 109], "time_frequency_global_field_pow": [106, 113], "092": [106, 113], "time_frequency_erd": [106, 112, 888], "time_frequency_simul": [106, 114], "source_label_time_frequ": [106, 107], "source_space_time_frequ": [106, 110], "607": [106, 232], "source_power_spectrum": [106, 108], "419": [106, 108], "temporal_whiten": [106, 111], "former": [107, 142, 231, 356, 563, 869, 888], "latter": [107, 142, 151, 168, 413, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 564, 870], "source_induced_pow": [107, 878, 888], "epochs_induc": 107, "subtract_evok": [107, 113, 204, 265, 266, 610, 888], "this_epoch": 107, "inter": [107, 245, 262, 265, 266, 267, 268, 274, 283, 413, 420, 437, 481, 482, 562, 563, 578, 660, 708, 710, 712, 735, 736, 738, 739, 773, 788, 795, 799, 808, 811, 816, 818], "itc": [107, 735, 736, 737, 738, 739, 740], "baseline_mod": [107, 546, 547], "compute_source_psd": [108, 109, 537, 878, 888], "100hz": 108, "2048": [108, 111, 114, 133, 265, 266, 267, 268, 412, 481, 482, 536, 810], "psd_dspm": 108, "neuromag": [109, 156, 158, 160, 166, 168, 183, 185, 200, 207, 210, 216, 217, 218, 257, 258, 263, 265, 266, 267, 268, 270, 275, 322, 433, 454, 481, 482, 492, 498, 506, 512, 595, 617, 642, 710, 712, 786, 789, 794, 809, 843, 859, 864, 870, 873, 888], "welch": [109, 224, 240, 241, 242, 245, 265, 266, 267, 268, 481, 482, 710, 712, 727, 810, 888], "next_fast_len": 109, "src_fname": [109, 235, 236, 237], "vv_fname": 109, "squid_resting_st": 109, "vv_erm_fnam": 109, "squid_empty_room": 109, "vv_trans_fnam": 109, "opm_fnam": 109, "opm_resting_state_raw": 109, "opm_erm_fnam": 109, "opm_empty_room_raw": 109, "opm_tran": 109, "opm_coil_def_fnam": 109, "vv": 109, "simplifi": [109, 179, 202, 245, 257, 265, 266, 267, 268, 481, 482, 867, 868, 888], "housekeep": [109, 212], "raw_erm": [109, 129, 184, 191, 863], "new_sfreq": 109, "nyquist": [109, 202, 203, 888], "meg2233": 109, "meg1842": 109, "hold": [109, 191, 224, 227, 265, 266, 267, 268, 434, 481, 482, 584, 595, 706, 790, 810, 812, 843, 870, 876], "61999": 109, "60999": 109, "dist": [109, 156, 157, 211, 223, 257, 271, 278, 283, 367, 432, 465, 601, 678, 679, 680, 682, 683, 873], "make_bem_solut": [109, 158, 191, 367, 432, 463, 519, 525, 526, 614, 615, 644, 646, 836, 863, 870, 878, 888], "169022": 109, "169992": 109, "2052": 109, "995623": 109, "029776": 109, "088592": 109, "062622": 109, "916188": 109, "395825": 109, "069381": 109, "399641": 109, "914042": 109, "993107": 109, "074371": 109, "090590": 109, "079171": 109, "995577": 109, "050589": 109, "086427": 109, "057412": 109, "994603": 109, "691": [109, 195, 196, 232], "416": [109, 144, 171, 232], "334": [109, 169, 195, 232], "692": [109, 144, 196, 232, 242], "percentag": [109, 205, 265, 266, 565, 664, 665, 666, 667, 668, 670, 744, 785, 888], "freq_band": [109, 137], "topo": [109, 115, 142, 150, 211, 241, 265, 266, 759, 769, 780, 817, 876, 888], "stc_psd": [109, 536], "sensor_psd": [109, 536], "return_sensor": [109, 536, 537], "topo_norm": 109, "keepdim": [109, 137], "stc_norm": 109, "3660": 109, "1969": 109, "014611": 109, "18765e": 109, "34378": 109, "07671e": 109, "3720": 109, "007069": 109, "0841e": 109, "46031": 109, "26253e": 109, "coverag": 109, "worthwhil": [109, 151, 205], "plot_band": 109, "inferno": [109, 136, 227], "cau": 109, "show_trac": [109, 127, 135, 272, 273, 276, 279, 280, 281, 756, 814, 819, 888], "fig_alpha": 109, "brain_alpha": [109, 273, 279, 281, 819], "7033039": 109, "9654317": 109, "07428314": 109, "profil": [109, 171, 212, 845, 847], "beneath": 109, "fig_beta": 109, "brain_beta": 109, "18694376": 109, "33488803": 109, "88328024": 109, "fig_beta_opm": 109, "brain_beta_opm": 109, "28867831": 109, "68102302": 109, "8757832": 109, "source_band_induced_pow": [110, 878, 888], "use_fft": [110, 112, 241, 426, 546, 547, 714, 717, 733, 735, 736, 738, 739], "induced_power_": 110, "608": [110, 177, 232], "proj_fnam": [111, 191], "20000": 111, "innov": 111, "d_": 111, "lfilter": [111, 265, 266, 267, 268, 448, 449, 451, 452, 481, 482], "regener": [111, 265, 266, 888], "r_": [111, 665, 670, 870], "dummi": [111, 125, 222, 237], "nfft": [111, 224], "written": [112, 171, 172, 175, 192, 209, 218, 261, 305, 309, 445, 446, 480, 481, 482, 629, 635, 833, 838, 841, 854, 863, 876, 888], "desynchron": [112, 241, 245, 864], "conceptu": [112, 151, 202, 205, 245], "ersp": [112, 888], "perturb": 112, "goal": [112, 137, 847, 865, 869, 876], "35hz": 112, "customari": [112, 870], "klotzsch": [112, 888], "cb": 112, "mpg": 112, "twoslopenorm": 112, "seaborn": [112, 145, 210], "sn": [112, 145, 210], "tfr_multitap": [112, 114, 241, 426, 735, 736, 737, 738, 740, 878, 888], "permutation_cluster_1samp_test": [112, 227, 229, 698, 878, 888], "pcluster_test": 112, "961": [112, 160, 232], "suitabl": [112, 146, 159, 161, 229, 231, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 308, 355, 375, 412, 437, 468, 481, 482, 505, 519, 695, 708, 710, 711, 712, 843, 863, 864, 870, 876], "cnorm": [112, 262, 265, 266, 267, 268, 274, 413, 420, 481, 482, 562, 563, 708, 710, 712, 773, 788, 795, 799, 808, 811, 816, 818, 888], "asymmetr": [112, 771], "thing": [112, 141, 145, 151, 160, 171, 172, 181, 188, 200, 202, 216, 224, 232, 235, 237, 314, 481, 482, 847, 867, 888], "rdbu": 112, "equal": [112, 140, 147, 148, 149, 151, 165, 168, 172, 175, 176, 180, 199, 202, 218, 219, 235, 237, 260, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 275, 276, 279, 280, 281, 287, 298, 299, 319, 355, 356, 360, 361, 371, 372, 373, 413, 420, 421, 426, 436, 438, 456, 457, 470, 476, 478, 479, 481, 482, 498, 522, 530, 541, 546, 547, 562, 563, 575, 581, 593, 600, 601, 626, 664, 689, 690, 695, 696, 698, 699, 700, 702, 703, 708, 710, 711, 712, 727, 773, 774, 780, 784, 787, 788, 789, 790, 792, 795, 796, 811, 812, 816, 818, 843, 869, 870, 874, 888], "promin": [112, 143, 199, 211, 213, 242, 357, 358, 359], "extrem": [112, 142, 242, 267, 268, 298, 299, 323, 356, 360, 361, 371, 372, 373, 413, 420, 421, 456, 457, 476, 478, 479, 541, 695, 696, 698, 699, 796], "vcenter": 112, "step_down_p": [112, 695, 696, 698, 699], "buffer_s": [112, 227, 231, 232, 235, 236, 237, 533, 695, 696, 698, 699], "tfr_ev": 112, "gridspec_kw": [112, 127, 176, 211], "width_ratio": [112, 176, 211], "stack": [112, 141, 224, 235, 654, 751, 753, 851, 852, 855], "mask_styl": [112, 267, 268, 708, 792], "set_yscal": 112, "724718": 112, "552076": 112, "183231": 112, "345": [112, 169, 209, 232], "347": [112, 169, 227, 232, 888], "344": [112, 144, 159, 164, 169, 196, 209, 227], "528367": 112, "706422": 112, "235": [112, 158, 169, 181, 196, 231, 232], "241": [112, 123, 169, 203, 209, 224, 227, 231, 232, 452, 481, 482], "254": [112, 169, 209, 231, 232], "581589": 112, "346448": 112, "176": [112, 142, 169, 171, 196, 201, 209, 227, 232, 245, 563], "251": [112, 169, 196, 209, 212, 232, 481, 482], "713872": 112, "754759": 112, "360704": 112, "276": [112, 169, 227, 232], "278": [112, 169, 209, 227, 232], "268": [112, 169, 185, 191, 209, 232], "992503": 112, "416450": 112, "228": [112, 169, 232, 245, 579], "224": [112, 142, 169, 171, 188, 231, 232], "221": [112, 146, 169, 227, 231, 232], "229": [112, 169, 209, 231, 232], "044340": 112, "070444": 112, "215": [112, 169, 209, 227, 231, 232, 245, 579], "255": [112, 114, 127, 160, 169, 227, 231, 242, 272, 273, 276, 279, 280, 281, 756, 775, 814, 819, 820], "237": [112, 169, 209, 232], "epochstfr": [112, 114, 293, 534, 708, 719, 730, 738, 739, 741, 878, 888], "datafram": [112, 140, 147, 148, 149, 151, 165, 190, 191, 210, 216, 228, 240, 259, 260, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 437, 481, 482, 500, 622, 694, 708, 710, 711, 712, 870, 888], "to_data_fram": [112, 136, 140, 145, 149, 216, 228, 259, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 708, 710, 711, 712, 870, 888], "0000": [112, 847], "473093": 112, "474571": 112, "764021": 112, "9875": 112, "491659": 112, "480088": 112, "762445": 112, "9750": [112, 888], "500872": 112, "469376": 112, "749421": 112, "9625": 112, "500605": 112, "449373": 112, "728686": 112, "9500": 112, "515911": 112, "443439": 112, "719536": 112, "lineplot": [112, 145], "confid": [112, 113, 142, 145, 151, 166, 176, 207, 263, 270, 563, 687, 710, 712, 780, 801, 868, 888], "long_format": [112, 145, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 708, 710, 711, 712, 888], "freq_bound": 112, "delta": [112, 137, 202, 265, 266, 267, 268, 478, 481, 482, 546, 710, 712, 788], "theta": [112, 113, 137, 265, 266, 267, 268, 481, 482, 710, 712, 788], "freq_bands_of_interest": 112, "remove_unused_categori": 112, "reorder_categori": 112, "facetgrid": 112, "margin_titl": 112, "n_boot": 112, "axline_kw": 112, "dash": [112, 140, 150, 172, 203, 206, 210, 211, 219, 262, 265, 266, 267, 268, 481, 482, 710, 712, 780, 781, 807, 810, 888], "set_axis_label": 112, "col_templ": 112, "col_nam": [112, 270, 873], "row_templ": 112, "row_nam": [112, 269, 873], "add_legend": [112, 756], "df_mean": 112, "queri": [112, 140, 145, 149, 165, 220, 228, 240, 260, 265, 266, 440, 711], "groupbi": [112, 145, 151, 228], "reset_index": [112, 145], "col_ord": 112, "violinplot": [112, 145], "deep": [112, 137, 145, 158, 181, 202, 245, 265, 266, 267, 268, 289, 413, 414, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 481, 482, 560, 561, 564, 708, 710, 711, 712, 753, 756, 772, 870, 888], "hue_ord": 112, "gert": [112, 245], "pfurtschel": [112, 245], "fernando": [112, 245, 863], "lope": [112, 245, 863], "da": [112, 245, 863], "silva": [112, 245, 863], "principl": [112, 203, 227, 232, 245, 865, 870], "1842": [112, 169, 245], "1857": [112, 245], "00141": [112, 245], "bernhard": [112, 245, 476], "graimann": [112, 245], "jane": [112, 245], "huggin": [112, 245], "simon": [112, 245, 888], "levin": [112, 245], "ecog": [112, 115, 135, 138, 139, 165, 169, 216, 222, 227, 245, 265, 266, 267, 268, 270, 276, 278, 313, 314, 323, 373, 375, 384, 442, 446, 481, 482, 496, 560, 561, 591, 637, 652, 703, 708, 710, 711, 712, 756, 772, 812, 824, 826, 843, 844, 854, 870, 888], "00697": [112, 245], "exposur": [112, 205, 245, 847], "tone": [112, 166, 245, 864], "1993": [112, 178, 245], "90110": [112, 245], "rectifi": 113, "uncertainti": [113, 240, 245, 265, 266, 267, 268, 481, 482, 710, 712, 720, 726, 854], "importantli": [113, 114, 201, 863], "hari": [113, 114, 126, 178, 245, 888], "neuromagnet": [113, 205, 245, 563], "1997": [113, 180, 206, 207, 245, 298, 299, 661, 724, 734, 735, 738, 870], "s0166": [113, 245], "2236": [113, 245], "10065": [113, 245], "342": [113, 121, 162, 169, 195, 232, 245, 267, 268, 356, 796, 867], "bradlei": [113, 245], "efron": [113, 245], "trevor": [113, 245], "hasti": [113, 245], "institut": [113, 245, 737, 740], "mathemat": [113, 151, 176, 200, 202, 210, 227, 245, 510, 530, 695, 737, 740, 847, 863, 870, 888], "monograph": [113, 245], "cambridg": [113, 151, 245, 356], "univers": [113, 245, 256, 356, 452, 864, 869, 875, 888], "york": [113, 202, 245, 256, 452, 875, 888], "isbn": [113, 151, 202, 224, 245, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 298, 299, 356, 481, 482, 690, 708, 711], "14989": [113, 245], "web": [113, 146, 205, 213, 242, 245, 275, 551, 764, 876, 888], "stanford": [113, 245], "casi": [113, 245], "bootstrap_confidence_interv": [113, 878], "iter_freq": 113, "frequency_map": 113, "job": [113, 203, 205, 212, 257, 265, 266, 267, 268, 271, 272, 273, 275, 276, 279, 280, 281, 283, 356, 357, 359, 361, 415, 416, 418, 419, 423, 424, 425, 426, 429, 430, 451, 452, 453, 456, 469, 471, 481, 482, 521, 524, 525, 536, 537, 546, 547, 568, 575, 576, 647, 656, 659, 660, 661, 673, 695, 696, 697, 698, 699, 710, 712, 713, 714, 715, 716, 717, 718, 726, 727, 735, 736, 737, 738, 739, 740, 788, 791, 810, 888], "skip": [113, 144, 149, 165, 166, 170, 171, 172, 190, 202, 242, 257, 344, 502, 536, 580, 645, 847, 863, 873, 888], "option": [113, 125, 135, 140, 142, 150, 151, 156, 161, 162, 165, 166, 167, 168, 171, 172, 173, 178, 188, 196, 199, 202, 205, 210, 211, 216, 218, 219, 222, 227, 228, 231, 237, 240, 242, 262, 263, 265, 266, 267, 268, 272, 273, 274, 275, 276, 278, 279, 280, 281, 285, 286, 305, 311, 314, 356, 366, 371, 374, 388, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 430, 434, 444, 445, 446, 451, 452, 453, 455, 457, 476, 478, 479, 481, 482, 494, 496, 503, 521, 525, 530, 531, 532, 533, 534, 536, 537, 541, 543, 545, 546, 547, 555, 560, 562, 563, 564, 573, 574, 575, 576, 578, 584, 595, 615, 625, 627, 637, 673, 678, 682, 693, 695, 696, 698, 699, 702, 703, 708, 710, 711, 712, 746, 756, 772, 773, 774, 780, 784, 786, 788, 790, 792, 795, 796, 799, 803, 806, 808, 809, 810, 811, 812, 814, 816, 818, 819, 820, 822, 853, 855, 869, 870, 873, 885, 888], "apply_hilbert": [113, 114, 115, 136, 167, 265, 266, 267, 268, 481, 482, 888], "269399": 113, "897": [113, 232], "077": 113, "307": [113, 161, 164, 169, 209, 232], "1202": 113, "emerg": 113, "bootstrap": [113, 142, 172, 687, 710, 712, 780, 888], "domin": [113, 204, 210, 242, 272, 273, 276, 279, 280, 281, 447, 563], "helper": [113, 227, 314, 332, 877], "winter_r": 113, "freq_nam": 113, "ci_low": 113, "ci_up": 113, "dhz": 113, "xy": [113, 115, 136, 181, 323, 433, 757, 826, 870], "horizontalalign": [113, 202, 206], "xycoord": 113, "trade": [114, 202, 736, 739], "bharadwaj": [114, 126, 245, 888], "berkelei": [114, 115, 256, 875], "tfr_stockwel": [114, 241, 735, 736, 737, 738, 739, 878, 888], "tfr_array_morlet": [114, 736, 737, 738, 739, 740, 878, 888], "centers_to_edg": [114, 878, 888], "sim0001": 114, "sim0002": 114, "1024": [114, 209, 695, 696, 698, 699], "burst": [114, 183, 199, 864], "ramp": [114, 202], "logical_or": 114, "on_tim": 114, "han": [114, 587, 660, 661, 735, 736, 738, 739, 888], "sin50hz": 114, "4000": [114, 166, 207, 257, 505], "41160": 114, "41159": 114, "time_bandwidth": [114, 426, 736, 739], "sim": [114, 538, 870], "nmore": 114, "1025": [114, 144, 240], "balanc": [114, 201, 202, 227, 231, 664, 689, 888], "strictli": [114, 151, 161, 168, 169, 178, 202, 204, 291, 756, 888], "regard": [114, 208, 224, 232, 241, 870, 888], "recoverd": 114, "lossless": 114, "disregard": 114, "numer": [114, 156, 162, 171, 202, 205, 216, 227, 232, 271, 278, 355, 378, 448, 473, 481, 482, 563, 685, 695, 696, 698, 699, 721, 867, 869, 870, 876, 888], "all_n_cycl": 114, "isinst": [114, 140, 260, 480], "exagger": 114, "wise": [114, 162, 199, 203, 267, 268, 422, 697, 843, 888], "epochs_hilb": 114, "tfr_data": 114, "413": [114, 178, 195, 196, 227, 245], "3301": 114, "avgpow": 114, "avg_pow": [114, 735, 736], "mesh": [114, 156, 160, 161, 175, 271, 273, 279, 281, 310, 311, 362, 412, 468, 469, 638, 756, 815, 819, 841, 853, 888], "electrocorticographi": [115, 136, 245, 265, 266, 267, 268, 481, 482, 560, 561, 708, 710, 711, 712, 864, 870, 888], "scatterplot": 115, "pyvista": [115, 171, 181, 263, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 756, 758, 766, 770, 772, 784, 812, 814, 815, 819, 821, 826, 845, 846, 865, 876, 888], "clickableimag": [115, 878], "own": [115, 127, 151, 177, 183, 207, 219, 229, 232, 265, 266, 267, 268, 272, 275, 276, 280, 323, 479, 481, 482, 595, 756, 787, 814, 847, 850, 851, 867, 869, 873], "dirnam": [115, 125, 159, 171], "pathlib": [115, 123, 144, 157, 170, 172, 275, 379, 380, 381, 384, 385, 386, 388, 393, 396, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 525, 843, 888], "noqa": [115, 117, 170, 206, 227], "f401": 115, "snapshot_brain_montag": [115, 136, 821, 878, 888], "misc_path": [115, 135, 182], "ecog_data_fnam": 115, "sample_ecog_ieeg": 115, "click": [115, 133, 142, 150, 151, 156, 161, 181, 191, 200, 205, 218, 219, 241, 262, 265, 266, 267, 268, 274, 280, 281, 413, 420, 481, 482, 562, 563, 708, 710, 712, 757, 769, 777, 786, 787, 788, 790, 792, 794, 795, 799, 803, 808, 809, 810, 811, 812, 816, 817, 818, 820, 845, 847, 853, 865, 876, 888], "layout_path": 115, "__file__": [115, 123, 170, 171, 172], "layout_nam": 115, "custom_layout": 115, "lout": [115, 170, 315, 328, 329, 340, 888], "coreg": [115, 135, 157, 158, 159, 160, 171, 314, 472, 475, 772, 863, 870, 878, 888], "estimate_head_mri_t": [115, 135, 878, 888], "sample_ecog": 115, "apply_tran": [115, 135, 156, 160, 182, 314, 888], "conjunct": [115, 227, 260, 265, 415, 876], "xy_pt": [115, 136], "beta_pow": 115, "fig2": [115, 151, 170], "coolwarm": 115, "cbar": [115, 127, 146, 196, 227, 775], "set_axis_off": [115, 136, 172], "bbox_inch": [115, 888], "tight": [115, 151, 161, 195, 267, 268, 731, 790, 792, 888], "669": [115, 195, 196, 228, 234], "mous": [115, 191, 218, 262, 263, 265, 266, 267, 268, 274, 413, 420, 472, 481, 482, 562, 563, 708, 710, 712, 757, 770, 772, 784, 786, 787, 788, 790, 791, 792, 795, 799, 808, 810, 811, 816, 865, 888], "imread": [115, 172], "plot_click": [115, 757], "to_layout": [115, 757], "got": [115, 144, 171, 200, 205, 224, 850, 888], "read_layout": [115, 170, 315, 878, 888], "3d_to_2d": [115, 130], "scalarmapp": 116, "low_contrast": [116, 126, 135, 181, 190, 272, 273, 276, 279, 280, 281, 756, 814, 819], "rh_data": [116, 175, 276, 279], "rh_vertno": [116, 175, 276, 279, 671], "recon": [116, 135, 155, 160, 311, 368, 549, 888], "brodmann": 116, "ba44": 116, "add_head": [116, 135, 156, 190, 756, 888], "seghead": [116, 156, 157, 158, 161, 172, 176, 182, 183, 257, 263, 756, 772, 784], "read_tran": [116, 118, 156, 160, 178, 191, 278, 464, 673, 842, 878, 888], "add_sensor": [116, 135, 136, 190, 211, 756, 888], "role": [116, 165, 170, 177, 186, 187, 262, 263, 267, 269, 270, 276, 366, 529, 530, 541, 616, 625, 627, 640, 656, 756, 765, 772, 784, 824, 847, 869], "sample_audvis_set1": 116, "ylorrd": 116, "add_dipol": [116, 756, 888], "1e8": 116, "static": [116, 180, 210, 216, 245, 257, 264, 390, 592, 744, 745, 746, 845, 873, 888], "add_ax": [116, 127, 146], "embed": [117, 156, 172, 201, 202, 275, 847, 854, 888], "simplic": [117, 177, 196, 202, 227, 231, 867, 888], "instal": [117, 135, 136, 146, 155, 161, 171, 181, 257, 265, 266, 267, 268, 283, 305, 309, 340, 387, 390, 412, 415, 419, 424, 451, 452, 453, 481, 482, 711, 847, 855, 867, 868, 871, 888], "order_func": 117, "spectral_embed": 117, "rbf_kernel": 117, "this_data": 117, "good_pick": 117, "bad_pick": [117, 212], "plt_time": 117, "overlay_tim": [117, 128, 265, 266, 787, 888], "renaud": [117, 245], "keriven": [117, 245], "maureen": [117, 245], "clerc": [117, 245], "1051": [117, 209, 245], "1061": [117, 245], "2037139": [117, 245], "channel_epochs_imag": [117, 130], "135": [118, 125, 151, 158, 169, 171, 206, 207, 208, 227, 231, 245, 278, 870], "085": [118, 130, 180], "eeg_on_scalp": [118, 130], "upon": [119, 144, 157, 170, 172, 265, 266, 275, 419, 481, 482, 757, 773, 826, 847, 853, 869, 888], "hosaka": [119, 245, 773, 888], "flow": [119, 178, 245, 773, 888], "underneath": [119, 773, 888], "poor": [119, 199, 202, 211, 773, 888], "man": [119, 151, 172, 245, 773], "hidehiro": [119, 245, 773], "electrocardiologi": [119, 245, 773], "1976": [119, 245, 773], "s0022": [119, 245, 773], "0736": [119, 245, 773], "80041": [119, 245, 773], "sheraz": [119, 126, 129, 245, 579, 886, 888], "khan": [119, 126, 129, 245, 579, 886, 888], "khansheraz": 119, "plot_arrowmap": [119, 150, 878, 888], "evoked_mag": 119, "evoked_grad": 119, "topoplot": [119, 144, 170, 205, 242, 773, 776, 888], "max_time_idx": 119, "latitud": [119, 773], "longitud": [119, 160, 773], "radial": [119, 158, 536, 537, 547, 648, 773], "cartesian": [119, 175, 178, 773, 870, 873], "info_from": [119, 773, 888], "info_to": [119, 773], "raw_ctf": 119, "raw_ctf_info": 119, "evoked_arrowmap": [119, 130], "engeman": 120, "miko\u0142aj": [120, 875, 888], "magnuski": [120, 875, 888], "mmagnuski": [120, 888], "swp": [120, 256, 875], "pl": 120, "20m": 120, "regularli": [120, 166, 168], "multilin": [120, 888], "all_tim": 120, "rm": [120, 150, 151, 188, 224, 262, 265, 266, 267, 268, 276, 413, 420, 481, 482, 538, 562, 563, 708, 790, 794, 795, 799, 811, 818, 870, 888], "drawn": [120, 150, 219, 227, 262, 265, 266, 267, 268, 273, 274, 279, 281, 413, 420, 481, 482, 562, 563, 578, 660, 661, 708, 710, 712, 773, 774, 779, 780, 788, 789, 792, 794, 795, 799, 808, 810, 811, 812, 816, 818, 819, 888], "spectral_r": 120, "circl": [120, 161, 170, 192, 223, 262, 265, 266, 267, 268, 274, 314, 413, 420, 481, 482, 562, 563, 578, 708, 710, 712, 761, 773, 778, 780, 788, 790, 792, 795, 796, 799, 806, 808, 810, 811, 812, 816, 818, 843, 847, 888], "extrapol": [120, 150, 211, 262, 265, 266, 267, 268, 274, 413, 420, 481, 482, 562, 563, 578, 708, 710, 712, 773, 788, 795, 799, 808, 811, 816, 818, 888], "box": [120, 161, 189, 262, 265, 266, 267, 268, 274, 315, 323, 340, 413, 420, 481, 482, 562, 563, 578, 708, 710, 712, 752, 773, 788, 790, 792, 794, 795, 799, 808, 811, 816, 818, 853, 888], "stretch": [120, 201, 756], "beyond": [120, 144, 166, 190, 237, 262, 265, 266, 267, 268, 274, 413, 420, 481, 482, 515, 562, 563, 578, 703, 708, 710, 712, 752, 773, 788, 795, 799, 808, 809, 811, 816, 818], "axes_row": 120, "extr": 120, "margin": [120, 127, 711, 779, 780], "exceed": [120, 184, 207, 210, 229, 265, 563, 593, 711], "mask_param": [120, 232, 262, 265, 266, 267, 268, 413, 420, 481, 482, 562, 708, 710, 712, 773, 788, 795, 811, 816, 818], "markers": [120, 232, 262, 265, 266, 267, 268, 413, 420, 481, 482, 562, 708, 710, 712, 773, 788, 795, 811, 816, 818], "markerfacecolor": [120, 262, 265, 266, 267, 268, 413, 420, 481, 482, 562, 708, 710, 712, 773, 788, 795, 811, 816, 818], "_time": 120, "significant_channel": 120, "_channel": 120, "in1d": 120, "_ch": 120, "perhap": [120, 202, 207, 216, 227], "imped": [120, 202, 245, 888], "image_interp": [120, 262, 265, 266, 267, 268, 274, 413, 420, 481, 482, 562, 563, 578, 708, 710, 712, 773, 788, 795, 799, 808, 811, 816, 818, 888], "cubic": [120, 262, 265, 266, 267, 268, 274, 413, 420, 481, 482, 562, 563, 578, 708, 710, 712, 756, 773, 788, 795, 799, 808, 811, 816, 818, 888], "smoothest": 120, "voronoi": [120, 262, 265, 266, 267, 268, 274, 413, 420, 481, 482, 562, 563, 578, 708, 710, 712, 773, 788, 795, 799, 808, 811, 816, 818, 888], "debug": [120, 162, 171, 257, 379, 380, 381, 384, 385, 386, 393, 396, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 654, 751, 754, 847, 867], "unalt": [120, 363], "properli": [120, 136, 155, 156, 161, 168, 183, 189, 200, 206, 207, 216, 217, 235, 237, 245, 257, 260, 263, 264, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 305, 309, 349, 362, 415, 419, 424, 451, 452, 453, 481, 482, 580, 581, 652, 673, 708, 711, 752, 796, 822, 845, 847, 850, 852, 863, 888], "animate_topomap": [120, 267, 268, 888], "frame_r": [120, 267, 268], "blit": [120, 267, 268], "065": [120, 130], "evoked_topomap": [120, 130], "excel": [121, 150, 160, 202, 224], "diagnost": [121, 165, 172, 205, 210, 214], "rare": [121, 275, 869, 888], "80e": [121, 211, 870], "uncom": 121, "fewer": [121, 144, 151, 161, 170, 172, 199, 202, 217, 227, 237, 265, 266, 267, 268, 275, 415, 419, 424, 425, 449, 451, 452, 481, 482, 586, 591, 736, 739, 756, 792, 888], "007": [121, 128, 140, 141, 142, 145, 149, 166, 169, 201, 207, 224, 228, 245, 283, 599], "008": [121, 128, 140, 145, 149, 151, 166, 169, 210, 224, 245, 595], "method_param": [121, 179, 356, 361, 530, 531, 532, 533, 534, 536, 537, 543, 546, 547], "diagonal_fix": [121, 162, 356, 888], "return_estim": [121, 162, 356, 361, 867], "likelihood": [121, 151, 162, 177, 245, 262, 267, 268, 356, 361, 563, 796, 867, 870], "loglik": [121, 262], "1891": 121, "unseen": [121, 162, 177, 356, 867], "descend": [121, 162, 177, 888], "1628": [121, 209], "1659": [121, 227], "783": [121, 232], "1802": [121, 180, 200, 245], "678903414706": 121, "7831816731043": 121, "1031535820766": 121, "evoked_whiten": [121, 130], "read_raw_artemis123": [123, 188, 487, 870, 878, 888], "read_raw_bti": [123, 185, 188, 870, 878, 888], "read_raw_kit": [123, 171, 188, 487, 870, 878, 888], "set_3d_titl": [123, 125, 150, 878, 888], "root_path": 123, "parent": [123, 150, 161, 170, 171, 172, 888], "spm_ctf_meg_example_faces1_3d": 123, "324474": 123, "bti_path": 123, "test_pdf_linux": 123, "test_config_linux": 123, "test_hs_linux": 123, "magn": [123, 188, 870], "3600wh": 123, "pdf": [123, 185, 195, 245, 257, 390, 476, 492, 871], "critic": [123, 151, 160, 171, 178, 185, 202, 210, 227, 229, 232, 595, 654, 754, 864, 874], "mne_create_comp_data": [123, 185, 257, 492], "print_tabl": [123, 185], "routin": [123, 185, 203, 456, 563, 595, 876, 887, 888], "magnes_3600wh": [123, 185], "kit_path": 123, "sqd": [123, 171, 257, 484, 506, 621, 870], "artemis_data_2017": 123, "10h": 123, "38m": 123, "59s_phantom_1k_hpi_1": 123, "artemis123_mneloc": 123, "1863": 123, "hpifit": [123, 209, 257], "ok": [123, 188, 209, 261, 271], "997": [123, 202, 210, 232, 245], "cardin": [123, 166, 169, 216, 222, 307, 308, 337, 432, 843, 873, 888], "513": [123, 130, 144, 218, 221, 232], "meg_sensor": [123, 130, 888], "create_3d_figur": [124, 156, 160, 178, 758, 878], "mne_helmet": [124, 130], "ship": [125, 170, 227, 265, 266, 267, 268, 270, 324, 325, 330, 331, 465, 481, 482, 859, 870, 888], "joan": [125, 137, 159, 888], "massich": [125, 137, 159, 888], "mailsik": [125, 137, 159], "op": [125, 159, 184, 185, 209, 265, 266, 267, 268, 481, 482], "get_builtin_montag": [125, 170, 265, 266, 267, 268, 270, 330, 465, 481, 482, 878, 888], "against": [125, 140, 141, 149, 205, 216, 245, 665, 670, 847, 888], "current_montag": 125, "fiduci": [125, 136, 156, 159, 160, 170, 188, 189, 314, 317, 318, 327, 337, 338, 367, 368, 369, 389, 485, 488, 506, 514, 621, 646, 772, 843, 863, 870, 873, 888], "mri_fiduci": [125, 156, 159, 183, 772, 888], "montage_sgskip": [125, 130], "hcp": [126, 245, 390, 854, 876, 888], "mmp1": [126, 245, 390, 888], "448": [126, 171, 184, 196, 232, 278, 888], "mmp": [126, 390], "Of": [126, 142, 199, 206, 207, 224, 600, 601], "acknowledg": [126, 202], "wu": 126, "minn": 126, "publicli": [126, 166, 405, 406, 864, 869], "get_brain_class": [126, 155, 878], "fetch_hcp_mmp_parcel": [126, 181, 878, 888], "fetch_aparc_sub_parcel": [126, 878], "hcpmmp1": 126, "add_annot": [126, 135, 155, 181, 756], "aud_label": 126, "l_a1_roi": 126, "hcpmmp1_combin": [126, 181, 390], "aparc_sub": 126, "matthew": [126, 180, 245, 390], "glasser": [126, 245, 390], "timothi": [126, 245, 390, 888], "coalson": [126, 245, 390], "emma": [126, 245, 390, 563], "robinson": [126, 180, 245, 390], "hacker": [126, 245, 390], "harwel": [126, 245, 390], "essa": [126, 245, 390], "yacoub": [126, 245, 390], "kamil": [126, 245, 390], "ugurbil": [126, 245, 390], "jesper": [126, 245, 390, 888], "andersson": [126, 245, 390], "beckmann": [126, 245, 390], "jenkinson": [126, 245, 390], "stephen": [126, 180, 195, 227, 228, 245, 390, 419, 563, 695, 696, 698, 699, 737, 740, 888], "essen": [126, 245, 390], "modal": [126, 189, 231, 237, 245, 390], "cerebr": [126, 245, 390], "536": [126, 196, 245, 390], "178": [126, 169, 183, 184, 185, 201, 209, 231, 232, 245, 390], "nature18933": [126, 245, 390], "javeria": [126, 245], "hashmi": [126, 245], "fahimeh": [126, 245, 888], "mamashli": [126, 245, 888], "konstantino": [126, 245], "michmizo": [126, 245], "manfr": [126, 245, 888], "kitzbichl": [126, 245, 888], "santosh": [126, 245], "ganesan": [126, 245], "keri": [126, 245], "lee": [126, 245, 271, 276, 563, 593, 888], "garel": [126, 245], "susan": [126, 245, 661], "whitfield": [126, 245], "gabri": [126, 245], "randi": [126, 245, 530], "gollub": [126, 245], "jian": [126, 245], "kong": [126, 245], "kunjan": [126, 245], "rana": [126, 245], "kenet": [126, 245], "matur": [126, 245], "trajectori": [126, 245], "network": [126, 195, 245, 298, 419, 563, 858], "mediat": [126, 245, 737, 740], "018": [126, 128, 140, 149, 164, 169, 224, 245, 579], "655": [126, 130, 196, 208, 232], "mccloi": [127, 209, 875, 888], "dan": [127, 209, 888], "mpl_toolkit": [127, 170, 206, 227, 232, 780], "axes_grid1": [127, 232, 780], "make_axes_locat": [127, 232], "imagegrid": 127, "inset_loc": [127, 780], "suppos": [127, 168, 206, 769, 870], "max_t": 127, "17909658": 127, "18448887": 127, "83197989": 127, "screenshot": [127, 172, 756, 826, 888], "pixel": [127, 142, 172, 192, 213, 227, 262, 263, 265, 266, 267, 268, 272, 273, 274, 275, 276, 279, 280, 281, 413, 420, 472, 481, 482, 562, 563, 708, 710, 712, 756, 772, 773, 784, 788, 795, 799, 808, 811, 814, 816, 818, 819, 843, 888], "integ": [127, 140, 142, 143, 145, 149, 150, 151, 160, 166, 168, 169, 171, 175, 189, 192, 203, 205, 216, 217, 222, 232, 257, 260, 262, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 278, 279, 280, 281, 284, 298, 299, 312, 315, 316, 323, 329, 331, 356, 360, 361, 371, 372, 373, 413, 415, 420, 429, 430, 434, 435, 442, 451, 452, 455, 456, 457, 471, 476, 478, 479, 481, 482, 514, 539, 540, 541, 562, 563, 565, 578, 579, 580, 581, 587, 591, 601, 603, 610, 619, 621, 625, 656, 658, 676, 694, 703, 708, 710, 711, 712, 716, 717, 718, 719, 721, 739, 742, 773, 780, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 799, 800, 801, 803, 805, 807, 808, 809, 810, 811, 816, 818, 843, 870, 873, 888], "nonwhite_pix": 127, "nonwhite_row": 127, "nonwhite_col": 127, "cropped_screenshot": 127, "nrows_ncol": 127, "axes_pad": 127, "updat": [127, 146, 170, 172, 179, 189, 200, 202, 207, 210, 212, 216, 219, 242, 257, 262, 265, 266, 267, 268, 270, 274, 289, 304, 367, 372, 374, 379, 380, 381, 382, 384, 385, 386, 388, 389, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 448, 465, 476, 481, 482, 502, 529, 564, 647, 651, 743, 756, 845, 847, 864, 869, 873, 888], "rcparam": [127, 137, 202, 888], "labels": 127, "titles": 127, "medium": [127, 156, 183, 257, 310, 876, 888], "height": [127, 171, 257, 270, 272, 273, 276, 279, 280, 281, 311, 315, 323, 328, 472, 756, 765, 814, 819, 843, 888], "gridspec": [127, 267, 268, 795], "keyword": [127, 149, 155, 169, 172, 191, 202, 210, 241, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 305, 306, 307, 308, 309, 310, 311, 314, 316, 318, 319, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 418, 419, 423, 424, 426, 429, 430, 432, 434, 438, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 463, 464, 468, 469, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 517, 518, 519, 520, 521, 522, 524, 525, 526, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 554, 555, 556, 559, 563, 565, 566, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 584, 585, 586, 588, 589, 590, 591, 592, 593, 595, 596, 598, 599, 602, 603, 604, 607, 608, 609, 610, 614, 615, 616, 617, 618, 619, 621, 622, 623, 625, 626, 627, 629, 630, 631, 632, 633, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 652, 656, 657, 659, 660, 661, 662, 672, 673, 676, 678, 679, 680, 681, 682, 683, 684, 694, 695, 696, 697, 698, 699, 703, 704, 705, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 725, 726, 727, 730, 731, 735, 736, 738, 739, 740, 741, 744, 745, 746, 751, 754, 755, 756, 757, 764, 772, 773, 778, 781, 784, 788, 789, 790, 791, 796, 799, 800, 801, 806, 807, 809, 810, 812, 813, 814, 815, 819, 820, 821, 825, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 847, 863, 888], "subplot2grid": [127, 195], "inch": [127, 171, 262, 265, 266, 267, 268, 274, 413, 420, 481, 482, 562, 563, 708, 710, 712, 788, 795, 799, 808, 811, 816, 818], "height_ratio": 127, "rowspan": 127, "775": [127, 196], "bot": 127, "evoked_idx": 127, "brain_idx": 127, "peak_lin": 127, "66ccee": [127, 160, 724, 734], "columnspac": 127, "labelspac": 127, "fancybox": 127, "handlelength": 127, "n_ave": 127, "spine": [127, 181, 769, 780], "set_axisbelow": 127, "tick": [127, 242, 262, 265, 266, 267, 268, 274, 413, 420, 481, 482, 562, 563, 578, 708, 710, 712, 773, 780, 788, 792, 795, 799, 808, 811, 816, 817, 818, 888], "append_ax": [127, 232], "plot_brain_colorbar": [127, 878, 888], "get_posit": [127, 136, 314, 888], "ymax": [127, 203, 232, 237], "transfigur": 127, "va": [127, 160], "panel": [127, 151, 156, 162, 170, 180, 242, 257, 267, 268, 472, 563, 756, 796, 800, 867], "outlin": [127, 160, 172, 176, 202, 242, 262, 263, 265, 266, 267, 268, 274, 314, 413, 420, 481, 482, 562, 563, 578, 610, 708, 710, 712, 773, 780, 784, 788, 790, 792, 793, 795, 796, 799, 806, 808, 810, 811, 812, 816, 818, 888], "familiar": [127, 144, 199, 849, 864], "to_plot": 127, "return_tim": [127, 216, 481, 482], "\u00b5v": [127, 142, 144, 145, 149, 151, 166, 201, 207, 228, 257, 262, 265, 266, 267, 268, 272, 273, 274, 275, 276, 279, 280, 281, 413, 420, 481, 482, 518, 562, 563, 578, 708, 710, 712, 773, 786, 787, 788, 790, 792, 795, 799, 808, 809, 811, 816, 817, 818, 843, 870, 888], "1e6": [127, 141, 149, 151, 262, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 356, 360, 361, 413, 420, 422, 481, 482, 787, 790, 792, 794, 795, 817], "inset_ax": [127, 780], "server": [127, 146, 166, 172, 203, 205, 216, 822, 851], "axin": 127, "edit": [127, 151, 169, 171, 200, 202, 205, 218, 245, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 690, 708, 711, 777, 825, 847, 851, 867, 888], "stai": [127, 144, 202, 203, 222, 224, 265, 266, 267, 268, 481, 482, 483, 657, 843, 847], "intact": [127, 199, 216], "That": [127, 142, 144, 161, 162, 202, 232, 267, 268, 298, 299, 356, 360, 361, 371, 372, 373, 413, 420, 456, 457, 476, 478, 479, 541, 796, 870], "nice": [127, 144, 150, 169, 171, 216, 227, 242, 847, 870, 888], "But": [127, 143, 144, 172, 184, 202, 210, 212, 222, 227, 235, 242, 563, 865], "big": [127, 188, 205, 422, 697, 865, 888], "tast": 127, "luckili": 127, "facet": [127, 160], "set_": 127, "get_children": 127, "line2d": 127, "0x7fb00bf60580": 127, "0x7fb00bf61090": 127, "0x7fb00bf62860": 127, "0x7fb00bf605b0": 127, "pathcollect": 127, "0x7fb00bf62c80": 127, "0x7fb05c950a00": 127, "0x7fb05c9a89a0": 127, "0x7fb064f44cd0": 127, "0x7fb064f44a90": 127, "0x7fb05c953310": 127, "yaxi": [127, 207], "0x7fb064f44f10": 127, "rectangl": [127, 218, 708, 773], "0x7fafec416a70": 127, "certainli": 127, "artistlist": 127, "sensor_dot": 127, "shrink": [127, 200, 227, 228, 591, 867], "set_siz": 127, "publication_figur": [127, 130], "notat": [128, 206, 231, 237, 870], "odd": [128, 202, 326, 412, 870], "test_raw": [128, 168, 257], "read_raw_eeglab": [128, 168, 189, 487, 851, 870, 874, 878, 888], "eog1": 128, "eog2": 128, "012": [128, 140, 149, 169, 219, 224], "017": [128, 140, 149, 169, 216, 224], "019": [128, 140, 149, 169, 208, 224, 245], "021": [128, 140, 141, 149, 166, 169, 224], "022": [128, 140, 149, 169, 184, 224], "023": [128, 140, 142, 149, 169, 224, 245], "024": [128, 140, 149, 169, 224, 226, 232, 245, 695, 696, 698, 699], "po7": [128, 242], "poz": [128, 242], "027": [128, 140, 149, 169, 224, 227, 245, 298, 563, 701, 702, 862], "028": [128, 140, 149, 160, 164, 169, 224, 245, 571, 737, 740], "029": [128, 140, 149, 169, 224, 245], "standard_1020": [128, 151, 159, 170, 222, 505], "fdt": [128, 168, 497, 619], "msec": [128, 151, 708], "new_ev": [128, 217, 439, 441, 528], "203125": 128, "12z": [128, 228], "group_bi": [128, 142, 228, 257, 265, 266, 267, 268, 481, 482, 786, 787, 792, 809, 888], "vline": [128, 267, 268, 780, 794, 888], "766": [128, 130, 174, 232], "roi_erpimage_by_rt": [128, 130], "plot_psd": [129, 140, 142, 166, 199, 219, 240, 241, 265, 266, 267, 268, 275, 481, 482, 847, 870, 888], "66067": 129, "109": [129, 137, 169, 205, 209, 227, 231, 232, 382, 864], "xscale": [129, 207, 265, 266, 267, 268, 481, 482, 710, 712, 810, 888], "wall": [129, 202, 203, 245, 695, 696], "shield": [129, 203, 212, 245, 265, 266, 267, 268, 270, 481, 482, 560, 595, 708, 710, 711, 712, 870], "review": [129, 151, 178, 204, 205, 245, 562, 568, 847, 869], "scientif": [129, 245, 851, 852, 872], "instrument": [129, 178, 199, 205, 245], "056101": [129, 245], "1063": [129, 210, 245, 574, 595], "4802845": [129, 245], "sensor_noise_level": [129, 130], "auto_examples_visu": 130, "topo_custom": [130, 133], "ssp_projs_sensitivity_map": [130, 131], "047": [130, 131, 140, 142, 149, 169, 224], "topo_compare_condit": [130, 132], "xhemi": [130, 134, 277, 362, 632], "571": [130, 134, 232], "ecg_fnam": 131, "ssp_ecg_map": 131, "arg": [131, 231, 237, 257, 270, 278, 690, 847], "plot_evoked_topo": [132, 150, 211, 878, 888], "audio": [132, 175, 191, 196, 240, 245, 265, 266, 267, 268, 420, 481, 482, 710, 711, 712, 727], "nleft": 132, "iter_topographi": [133, 878, 888], "20hz": 133, "return_freq": [133, 137, 240, 241, 242, 710, 712, 888], "my_callback": 133, "ch_idx": [133, 209, 229, 241], "callback": [133, 367, 756, 769, 888], "fig_facecolor": [133, 142, 240, 265, 266, 267, 268, 481, 482, 708, 710, 712, 769, 817], "axis_facecolor": [133, 240, 265, 266, 267, 268, 481, 482, 710, 712, 769], "axis_spinecolor": [133, 769], "on_pick": [133, 769], "gcf": 133, "639": [133, 166, 172, 195, 196, 232], "stc_path": [134, 172], "fsaverage_sym": [134, 362], "left_right": [134, 362], "stc_xhemi": 134, "70314401": 134, "48867635": 134, "29876034": 134, "stereoelectroencephalographi": [135, 864], "talairach": [135, 160, 180, 181, 280, 281, 368, 369, 639, 820, 867, 870, 888], "xfm": [135, 280, 281, 369, 639, 820, 870, 888], "involv": [135, 136, 156, 158, 160, 199, 202, 203, 206, 218, 369, 565, 869, 870], "pip": [135, 136, 146, 161, 845, 847, 849, 852, 855], "conda": [135, 136, 161, 845, 846, 847, 849, 852, 855, 888], "li": [135, 136, 160, 172, 208, 245, 870, 875, 888], "adam2392": [135, 136], "sample_seeg_ieeg": 135, "1310640": 135, "1370605": 135, "411": [135, 209, 227, 245, 356], "1371": [135, 157, 196, 240, 245, 265, 266, 267, 268, 481, 482, 710, 712, 720, 726], "fixat": [135, 192, 213, 500, 864], "isi": [135, 191], "mni_tal": [135, 136, 314, 327], "this_subject_dir": 135, "head_mri_t": 135, "sample_seeg": 135, "mri_mni_t": [135, 639], "read_talxfm": [135, 160, 878], "taliarach": 135, "fro": [135, 457, 743], "rostral": [135, 756], "warp": [135, 156, 159, 171, 245, 592, 864, 888], "compute_native_head_t": [135, 159, 182, 314, 878, 888], "combine_transform": 135, "view_kwarg": [135, 157, 160], "tan": [135, 212, 888], "dens": [135, 156, 157, 158, 160, 182, 183, 190, 245, 257, 278, 310, 571, 756, 772, 888], "video": [135, 156, 160, 161, 872, 888], "nearbi": [135, 136, 195, 199, 207, 210, 223, 245, 262, 265, 266, 267, 268, 274, 413, 420, 481, 482, 562, 563, 578, 590, 595, 703, 708, 710, 712, 773, 788, 795, 799, 808, 811, 816, 818], "atla": [135, 181, 245, 257, 263, 272, 273, 276, 278, 279, 280, 281, 311, 447, 517, 657, 843, 864, 867, 870, 876, 888], "get_montage_volume_label": [135, 756, 878, 888], "lami": [135, 473], "lttr": 135, "isdigit": 135, "lpm": 135, "lsma": 135, "elec": [135, 228], "plot_channel_labels_circl": [135, 878, 888], "lent": 135, "lstg": 135, "lpit": 135, "ltpo": 135, "lphg": 135, "lpli": 135, "rahp": 135, "lpcn": 135, "lacn": 135, "rphp": 135, "lbri": 135, "lofc": 135, "ctx": 135, "putamen": 135, "add_volume_label": [135, 181, 756, 888], "heatmap": [135, 210], "lfp": 135, "stc_near_sensor": [135, 136, 878, 888], "Its": [135, 209, 870], "view_layout": [135, 180, 272, 273, 276, 279, 280, 281, 756, 814, 819], "sagitt": [135, 160, 180, 263, 756, 774, 784], "m4": 135, "sai": [135, 136, 202, 203, 206, 208, 216, 222, 229, 232, 752, 847, 853, 863, 873], "20_seeg": [135, 139], "epilepsi": [136, 888], "seizur": [136, 888], "complementari": [136, 201, 876], "seeg": [136, 138, 139, 165, 169, 216, 222, 265, 266, 267, 268, 270, 278, 280, 313, 314, 318, 368, 373, 375, 442, 446, 465, 481, 482, 487, 496, 559, 560, 561, 563, 637, 639, 652, 703, 708, 710, 711, 712, 756, 772, 778, 812, 843, 844, 854, 870, 888], "liberti": [136, 245, 888], "hamilton": [136, 245, 888], "libertyhamilton": 136, "mne_bid": 136, "bidspath": 136, "read_raw_bid": 136, "bids_root": 136, "epilepsy_ecog": [136, 171, 878, 888], "bids_path": 136, "pt1": 136, "session": [136, 140, 142, 149, 150, 166, 171, 172, 200, 210, 212, 218, 265, 266, 377, 378, 481, 482, 563, 786, 803, 809, 817, 845, 863, 867, 871, 888], "presurgeri": 136, "ictal": 136, "datatyp": [136, 192, 888], "ieeg": [136, 876, 877, 878, 888], "trans_bandwidth": [136, 202, 449, 452, 481, 482], "add_mni_fiduci": [136, 314, 888], "posterior": [136, 156, 160, 271, 314, 326, 476, 685, 843, 888], "commissur": [136, 314], "epoch_length": 136, "269079": 136, "2201": 136, "ad1": 136, "att1": 136, "ast1": 136, "g16": 136, "slt1": 136, "sensor_color": [136, 772], "gamma_power_t": 136, "gamma_info": 136, "445": [136, 227, 232], "gamma_power_at_15": 136, "rgba": [136, 271, 272, 273, 276, 279, 280, 281, 756, 771, 775, 814, 819, 820, 888], "get_cmap": 136, "tolist": 136, "funcanim": [136, 267, 268], "gamma_pow": 136, "x_line": 136, "epileptiform": 136, "progress": [136, 151, 165, 171, 201, 245, 416, 423, 847, 888], "posteriorli": 136, "becom": [136, 141, 182, 201, 202, 204, 205, 210, 212, 235, 236, 237, 265, 266, 267, 268, 609, 777, 792, 847, 855, 869, 870, 888], "xyz_pt": 136, "vmid": 136, "intra": [136, 679], "4932": 136, "816": [136, 139, 209, 232], "30_ecog": [136, 139], "cite": [137, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 391, 452, 481, 482, 708, 711, 847, 864], "toi": [137, 227, 876], "answer": [137, 207, 232, 242, 847, 867], "question": [137, 141, 210, 242, 847, 850, 866, 868], "alic": 137, "tackl": 137, "chambon": [137, 245, 888], "stan": 137, "sleep_physionet": [137, 864, 878, 888], "fetch_data": [137, 864, 878, 888], "randomforestclassifi": 137, "accuracy_scor": 137, "functiontransform": 137, "associ": [137, 144, 168, 172, 191, 199, 206, 207, 209, 227, 229, 245, 259, 260, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 421, 464, 481, 482, 524, 619, 621, 658, 690, 695, 700, 708, 711, 778, 786, 787, 789, 790, 792, 807, 808, 845, 847, 870, 873, 888], "ground": [137, 166, 207, 563, 807, 876], "truth": [137, 207, 563, 807], "expert": [137, 162, 847, 867, 869], "alice_fil": 137, "bob_fil": 137, "raw_train": 137, "marker": [137, 151, 168, 171, 177, 188, 189, 195, 201, 206, 257, 262, 265, 266, 267, 268, 271, 272, 273, 274, 275, 276, 279, 280, 281, 283, 356, 357, 359, 361, 413, 416, 420, 423, 426, 429, 430, 456, 469, 471, 481, 482, 484, 506, 521, 524, 525, 536, 537, 546, 547, 562, 563, 568, 575, 576, 578, 621, 656, 659, 660, 661, 673, 695, 696, 697, 698, 699, 708, 710, 712, 713, 714, 715, 716, 717, 718, 726, 727, 735, 736, 737, 738, 739, 773, 788, 791, 795, 799, 808, 809, 810, 811, 815, 816, 818, 864, 888], "infer_typ": [137, 489, 496, 888], "annot_train": 137, "read_annot": [137, 218, 756, 878, 888], "emit_warn": [137, 259, 481, 482, 596], "resp": [137, 169, 216, 265, 266, 267, 268, 275, 313, 481, 482, 496, 560, 708, 710, 711, 712, 786, 809, 870, 888], "physionet_sleep": 137, "sc4001e0": 137, "recogn": [137, 171, 207, 496, 869, 888], "renam": [137, 151, 189, 211, 216, 259, 265, 266, 267, 268, 314, 342, 481, 482, 489, 496, 643, 756, 766, 821, 847, 855, 888], "oro": 137, "nasal": 137, "subment": 137, "temp": [137, 270], "rectal": 137, "wake": 137, "rem": [137, 168], "abbrevi": [137, 175, 206, 756, 870, 888], "rapid": [137, 144, 195, 202, 245, 419], "long": [137, 140, 141, 146, 199, 202, 203, 205, 209, 217, 218, 222, 228, 235, 236, 263, 265, 266, 267, 268, 272, 273, 276, 277, 279, 280, 281, 356, 362, 481, 482, 533, 566, 571, 595, 708, 710, 711, 712, 756, 847, 850, 851, 863, 869, 876, 888], "awak": 137, "night": [137, 405, 864], "imbal": [137, 231, 573, 574, 584, 595, 606], "trim": [137, 265, 266], "occurr": [137, 144, 199, 437, 439], "annotation_desc_2_event_id": 137, "redefin": 137, "events_train": 137, "chunk_dur": [137, 168, 442, 888], "stage_color": 137, "prop_cycl": 137, "by_kei": 137, "841": [137, 232], "188": [137, 169, 184, 209, 227, 231, 232], "raw_test": 137, "annot_test": 137, "events_test": 137, "epochs_test": 137, "sc4011e0": 137, "1103": [137, 178, 245], "562": [137, 232], "signatur": [137, 200, 231, 416, 423, 430, 847, 865, 888], "ci": [137, 146, 202, 211, 227, 240, 563, 687, 710, 712, 780, 801, 847, 888], "\u00b5v\u00b2": 137, "eeg_power_band": 137, "compat": [137, 144, 171, 176, 258, 265, 266, 267, 268, 322, 364, 373, 388, 396, 419, 421, 424, 426, 427, 428, 453, 472, 481, 482, 536, 563, 710, 712, 786, 788, 809, 810, 821, 845, 853, 855, 867, 870, 873, 888], "psds_band": 137, "boilerpl": 137, "sckit": 137, "manner": [137, 151, 178, 227, 228, 260, 265, 888], "thank": [137, 140, 847, 876], "pipe": [137, 847, 864], "n_estim": [137, 416, 423], "acc": 137, "6854034451495921": 137, "ye": [137, 209, 210, 227, 267, 481, 502, 625, 867, 888], "databas": [137, 245, 391, 405, 406], "mathieu": [137, 245, 888], "galtier": [137, 245], "pierrick": [137, 245], "arnal": [137, 245], "gill": [137, 245], "wainrib": [137, 245], "architectur": [137, 245, 888], "rehabilit": [137, 245], "758": [137, 232, 245], "769": [137, 232, 245], "tnsre": [137, 245], "2813138": [137, 245], "kemp": [137, 245, 405, 406, 864], "zwinderman": [137, 245, 405, 406, 864], "tuk": [137, 245, 406, 864], "kamphuisen": [137, 245, 405, 406, 864], "obery\u00e9": [137, 245, 406, 864], "feedback": [137, 245, 406, 864, 888], "microcontinu": [137, 245, 406, 864], "1185": [137, 245, 406, 864], "1194": [137, 245, 406, 864], "867928": [137, 245, 406, 864], "60_sleep": [137, 139], "mne_gui_addon": [138, 165, 473, 888], "stage": [138, 139, 144, 155, 156, 165, 172, 191, 200, 202, 205, 206, 211, 218, 245, 259, 260, 265, 266, 267, 268, 270, 277, 362, 405, 442, 481, 482, 496, 522, 578, 613, 618, 710, 746, 789, 843, 847, 854, 863, 864, 878, 888], "polysomnographi": [138, 139, 165, 259, 265, 270, 405, 406, 442, 496, 613, 710, 789, 864, 888], "psg": [138, 139, 165, 259, 265, 270, 405, 442, 496, 613, 710, 789, 864, 888], "auto_tutorials_clin": 139, "646": [139, 196, 205, 215, 232], "cover": [140, 147, 149, 151, 153, 155, 162, 163, 165, 166, 168, 171, 172, 173, 186, 193, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 212, 214, 216, 219, 220, 227, 238, 242, 243, 271, 275, 595, 603, 612, 692, 838, 847, 870, 871, 888], "possibli": [140, 149, 166, 172, 202, 229, 230, 267, 268, 277, 298, 299, 312, 356, 360, 361, 371, 372, 373, 388, 413, 420, 456, 457, 476, 478, 479, 541, 563, 582, 584, 690, 756, 796, 863, 888], "del_proj": [140, 149, 199, 206, 207, 208, 265, 266, 267, 268, 481, 482, 888], "plot_projs_topomap": [140, 142, 149, 207, 219, 265, 266, 267, 268, 481, 482, 807, 878, 888], "plot_psd_topomap": [140, 142, 240, 265, 266, 267, 268, 481, 482, 888], "sample_data_fold": [140, 142, 145, 146, 155, 166, 167, 168, 169, 170, 199, 200, 201, 203, 205, 206, 207, 208, 210, 216, 217, 218, 219, 240], "sample_data_raw_fil": [140, 142, 145, 146, 166, 167, 168, 169, 199, 200, 201, 203, 205, 206, 207, 208, 210, 216, 217, 218, 219, 240], "sample_data_events_fil": [140, 145, 217], "events_from_fil": [140, 217], "bare": [140, 166], "299693": [140, 151], "699283": 140, "quot": [140, 195, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 708, 711, 847, 870], "didn": [140, 144, 265, 448, 711, 888], "string": [140, 143, 144, 145, 149, 150, 168, 169, 171, 172, 201, 216, 217, 218, 240, 258, 259, 260, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 284, 312, 314, 323, 329, 331, 342, 355, 356, 360, 361, 365, 371, 376, 379, 380, 381, 384, 385, 386, 388, 393, 394, 396, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 413, 415, 416, 420, 423, 429, 430, 434, 437, 442, 447, 448, 461, 463, 465, 473, 480, 481, 482, 483, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 517, 522, 530, 536, 537, 560, 561, 562, 563, 565, 566, 578, 579, 580, 581, 584, 586, 587, 591, 595, 601, 603, 610, 619, 621, 625, 643, 664, 665, 666, 667, 668, 670, 673, 676, 685, 689, 691, 694, 703, 704, 708, 709, 710, 711, 712, 716, 717, 718, 719, 721, 739, 743, 744, 746, 756, 764, 772, 773, 780, 786, 787, 788, 790, 792, 793, 794, 795, 796, 799, 800, 807, 808, 809, 810, 811, 814, 816, 818, 819, 820, 845, 846, 847, 862, 867, 873, 888], "event_dict": [140, 142, 145, 149, 151, 166, 168, 211, 213, 217, 222, 240], "buttonpress": [140, 149, 151, 166, 168, 172, 217], "mention": [140, 144, 151, 166, 168, 169, 170, 175, 202, 206, 207, 208, 216, 232, 355, 847], "haven": [140, 218, 847, 871, 888], "turn": [140, 149, 150, 152, 175, 191, 200, 205, 206, 207, 208, 242, 258, 260, 265, 454, 519, 657, 757, 777, 864, 869, 870, 888], "accommod": [140, 888], "request": [140, 161, 166, 171, 172, 205, 207, 210, 216, 217, 265, 266, 267, 268, 272, 273, 275, 276, 279, 280, 281, 412, 481, 482, 563, 575, 576, 615, 652, 689, 691, 709, 710, 712, 765, 788, 797, 799, 814, 819, 843, 853, 854, 867, 868, 869, 873, 888], "drop_log": [140, 142, 201, 260, 265, 266, 275, 575, 576, 711, 785, 888], "too_short": [140, 151, 265, 711], "forget": [140, 157, 158, 168, 847], "brows": [140, 171, 172, 181, 200, 218, 263, 265, 266, 481, 482, 563, 784, 786, 803, 809, 859, 865, 888], "scrollbar": [140, 265, 266, 481, 482, 563, 786, 803, 809, 888], "focus": [140, 141, 181, 218, 265, 266, 481, 482, 563, 665, 670, 786, 803, 809, 847, 851, 854, 872], "screen": [140, 171, 192, 213, 245, 257, 265, 266, 481, 482, 786, 809, 822, 864, 888], "bracket": [140, 149, 151, 169, 189, 216, 222, 240, 888], "catch": [140, 142, 166, 181, 231, 237, 847], "charact": [140, 166, 169, 200, 216, 217, 326, 497, 513, 613, 619, 664, 665, 666, 667, 668, 670, 764, 847, 888], "tag": [140, 144, 151, 165, 243, 244, 245, 257, 265, 266, 270, 275, 314, 330, 437, 442, 491, 513, 560, 710, 711, 764, 818, 843, 847, 864, 876, 888], "complain": 140, "ask": [140, 144, 160, 847, 862, 864, 868, 869], "except": [140, 143, 171, 175, 176, 192, 210, 216, 265, 266, 267, 268, 285, 286, 330, 350, 351, 356, 405, 454, 481, 482, 483, 552, 564, 584, 635, 699, 703, 746, 847, 870, 873, 888], "keyerror": [140, 262, 265, 266, 270, 274, 289, 304, 529, 711, 743], "rais": [140, 144, 208, 260, 262, 265, 266, 267, 268, 270, 271, 274, 275, 276, 279, 285, 286, 289, 304, 318, 341, 344, 350, 351, 356, 360, 363, 365, 367, 371, 372, 405, 432, 440, 454, 460, 461, 463, 481, 482, 502, 529, 552, 563, 594, 615, 626, 644, 646, 649, 653, 658, 695, 696, 698, 699, 708, 710, 711, 712, 743, 789, 800, 834, 836, 847, 869, 888], "reorder_channel": [140, 149, 216, 265, 266, 267, 268, 481, 482, 708, 710, 711, 712, 888], "exploratori": [140, 149, 167, 206, 216, 228, 865], "epochs_eeg": 140, "new_ord": [140, 149], "epochs_subset": 140, "032": [140, 149, 169, 224, 228, 245], "033": [140, 149, 169, 182, 187, 224], "034": [140, 149, 169, 224], "037": [140, 149, 169, 216, 224, 227, 234], "038": [140, 149, 169, 224], "039": [140, 142, 149, 169, 224], "041": [140, 142, 149, 169, 224], "042": [140, 149, 169, 224, 870], "043": [140, 149, 169, 224], "045": [140, 142, 149, 169, 224], "046": [140, 142, 149, 169, 224, 245, 668, 870], "049": [140, 142, 149, 169, 224], "052": [140, 142, 148, 149, 162, 169, 185, 200, 224, 245, 737, 740], "054": [140, 142, 149, 169, 208, 224, 245, 541, 665, 670], "055": [140, 142, 149, 169, 208, 224, 245, 391], "056": [140, 142, 149, 169, 224], "058": [140, 142, 149, 169, 219, 224], "unchang": [140, 149, 206, 265, 266, 267, 268, 481, 482, 596, 647], "blinkchannel": 140, "20auditori": 140, "20buttonpress": 140, "4face": [140, 151], "4visual": 140, "19visual": 140, "shorter_epoch": 140, "include_tmax": [140, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 708, 711, 888], "obj": [140, 161, 638, 841, 888], "0998976": 140, "expand": [140, 144, 160, 201, 206, 265, 266, 267, 268, 271, 276, 279, 356, 443, 446, 471, 481, 482, 710, 712, 788, 867, 888], "later_epoch": 140, "tshift": [140, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 441, 481, 482, 708, 711], "amount": [140, 141, 162, 167, 178, 200, 207, 208, 223, 242, 262, 263, 264, 265, 266, 267, 268, 272, 273, 274, 275, 276, 279, 280, 281, 365, 376, 413, 420, 453, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 522, 538, 562, 563, 604, 620, 708, 710, 711, 712, 786, 788, 795, 799, 808, 809, 811, 814, 816, 819, 867, 870, 888], "00166496": 140, "00332992": 140, "99833504": 140, "99667008": 140, "enforc": [140, 590, 888], "eog_data": 140, "channel_4_6_8": 140, "arr": [140, 216, 242, 687], "repeatedli": [140, 205, 207, 481, 482, 853, 888], "hierarch": [140, 143, 144, 240, 245, 437, 476, 528, 843, 888], "multiindex": [140, 265, 266, 708, 710, 711, 712], "aggreg": [140, 143, 145, 241, 265, 266, 267, 268, 316, 437, 481, 482, 708, 710, 712, 787, 788, 888], "endpoint": [140, 143, 168, 222, 260, 265, 266, 267, 268, 272, 273, 275, 276, 279, 280, 281, 288, 580, 625, 626, 724, 734, 738], "sort_index": 140, "inplac": [140, 145, 259, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 319, 438, 448, 481, 482, 559, 609, 662, 847], "read_epochs_eeglab": [140, 189, 870, 874, 878, 888], "read_epochs_kit": [140, 188, 870, 878, 888], "audiovisu": [140, 166, 216], "epochs_from_fil": 140, "convent": [140, 160, 170, 172, 188, 190, 206, 207, 217, 245, 257, 270, 305, 326, 336, 498, 603, 626, 642, 724, 733, 734, 756, 870, 873, 888], "basenam": [140, 217], "_epo": 140, "issu": [140, 141, 144, 151, 161, 195, 202, 203, 206, 217, 218, 265, 266, 271, 276, 290, 292, 424, 481, 482, 563, 602, 671, 674, 786, 803, 809, 843, 845, 847, 866, 868, 869, 876, 888], "adher": [140, 143, 360, 445], "epochsfif": [140, 143], "anyth": [140, 188, 205, 389, 756, 847], "baseepoch": [140, 563, 847, 878, 888], "ndarrai": [140, 216, 222, 224, 242, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 284, 298, 299, 307, 323, 346, 352, 365, 367, 370, 371, 412, 413, 414, 417, 420, 425, 429, 433, 439, 441, 449, 450, 451, 453, 456, 457, 458, 480, 481, 482, 484, 517, 538, 562, 563, 564, 571, 574, 575, 576, 578, 584, 588, 589, 592, 593, 610, 631, 657, 658, 673, 687, 688, 689, 693, 694, 695, 696, 698, 699, 708, 709, 710, 711, 712, 721, 724, 726, 727, 734, 737, 744, 745, 746, 756, 757, 760, 770, 773, 775, 788, 792, 794, 795, 797, 798, 811, 814, 815, 816, 818, 819, 820, 836, 886, 888], "475": [140, 148, 209, 232, 278], "10_epochs_overview": [140, 148], "aldai": [141, 245, 888], "reason": [141, 149, 150, 162, 166, 171, 172, 184, 200, 201, 202, 203, 204, 206, 207, 208, 216, 218, 227, 236, 237, 245, 263, 264, 265, 266, 267, 268, 272, 273, 275, 276, 279, 280, 281, 299, 356, 373, 425, 481, 482, 563, 575, 585, 588, 595, 695, 696, 698, 699, 701, 708, 711, 785, 822, 847, 863, 867, 869, 870, 888], "safer": [141, 272, 273, 276, 279, 280, 281, 493], "distort": [141, 189, 202, 219, 242, 493, 746], "spuriou": [141, 146, 162, 454, 867], "carina": [141, 888], "forster": [141, 888], "email": [141, 847, 853], "carinaforster0611": 141, "merge_ev": [141, 217, 356, 878, 888], "baseline_tmin": 141, "baseline_tmax": 141, "4957": [141, 151, 337], "trad_aud": 141, "trad_vi": 141, "heterogen": [141, 201, 888], "aud_predictor": 141, "vis_predictor": 141, "trickier": 141, "seaprat": 141, "baseline_predictor": 141, "squeez": [141, 231, 232, 237], "singleton": [141, 756, 888], "\u03bcv": 141, "microvolt": [141, 188, 491, 870], "unstabl": [141, 162, 204, 356, 867, 888], "transpos": [141, 216, 227, 228, 232, 235, 236, 237, 873, 888], "reg_model": 141, "6254": 141, "lm": [141, 571], "namedtupl": [141, 693], "dict_kei": [141, 169, 206], "1998": [141, 149, 245, 870], "49949": [141, 149], "tell": [141, 150, 155, 162, 166, 171, 201, 205, 207, 213, 216, 229, 231, 237, 278, 847, 850, 851, 866, 870], "strongli": [141, 172, 199, 200, 208, 481, 482, 512, 845, 847, 863, 867, 870], "\u03b2": [141, 142, 219], "constant": [141, 156, 160, 170, 196, 199, 202, 212, 242, 260, 265, 266, 267, 268, 270, 373, 481, 482, 485, 514, 744, 843, 864, 870, 888], "effect_of_baselin": 141, "unsurprisingli": 141, "farther": [141, 867], "weaker": [141, 265, 266, 267, 268, 448, 449, 451, 452, 481, 482, 870], "pure": [141, 276, 847], "influenc": [141, 202, 204, 205, 245, 869], "reg_aud": 141, "reg_vi": 141, "show_sensor": [141, 144, 166, 780, 888], "truncate_yaxi": [141, 232, 780, 888], "subtl": 141, "apart": [141, 150, 168, 222], "diff_tradit": 141, "diff_regress": 141, "themselv": [141, 267, 268, 298, 299, 356, 360, 361, 371, 372, 373, 413, 420, 456, 457, 476, 478, 479, 541, 796, 869], "ought": 141, "persist": [141, 142, 199, 203, 867, 888], "interaction_effect": 141, "seem": [141, 144, 151, 162, 191, 202, 205, 207, 242, 563, 847], "randomli": [141, 166, 227, 515, 593, 612, 674], "glm": [141, 245, 854], "lift": [141, 178, 196, 235, 237, 245], "psyp": [141, 151, 202, 232, 245, 694, 695, 696, 698, 699], "13451": [141, 245], "15_baseline_regress": [141, 148], "imagemap": 142, "discontinu": [142, 146, 147, 148, 151, 165, 168, 202, 205, 216, 217, 222, 240, 265, 454, 618, 710, 712, 843], "until": [142, 200, 201, 208, 211, 260, 263, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 472, 473, 480, 481, 482, 563, 566, 710, 712, 753, 756, 784, 786, 803, 809, 812, 847, 870], "scroll": [142, 166, 218, 219, 263, 265, 266, 481, 482, 563, 784, 786, 803, 809, 825, 888], "enabl": [142, 172, 219, 242, 257, 258, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 375, 472, 481, 482, 578, 602, 654, 695, 696, 698, 699, 710, 711, 751, 756, 765, 769, 772, 791, 809, 814, 819, 822, 845, 853, 863, 869, 870, 888], "unappli": [142, 150, 206, 208, 265, 266, 267, 268, 443, 444, 445, 446, 481, 482, 888], "purg": 142, "catch_trials_and_buttonpress": 142, "pick_ev": [142, 217, 878], "event_color": [142, 213, 217, 265, 266, 481, 482, 786, 809, 888], "butterfli": [142, 149, 151, 152, 172, 200, 206, 210, 219, 265, 266, 267, 268, 275, 481, 482, 563, 786, 790, 793, 800, 809, 825, 874, 888], "ecg_proj_fil": [142, 206], "ecg_proj": [142, 146, 206, 207], "175": [142, 150, 169, 196, 215, 227, 231, 232, 245, 563], "41auditori": 142, "40button": 142, "8face": 142, "8visual": 142, "40visual": 142, "inherit": [142, 240, 356, 888], "joint": [142, 182, 207, 245, 265, 266, 267, 268, 274, 413, 420, 481, 482, 652, 710, 712, 788, 795, 808, 876, 888], "epochsspectrum": [142, 165, 243, 244, 265, 266, 267, 268, 454, 481, 712, 751, 878, 888], "\u03b4": [142, 219], "\u03b8": [142, 219], "\u03b3": [142, 219], "api": [142, 169, 192, 196, 219, 222, 227, 240, 414, 551, 756, 765, 769, 855, 859, 871], "jointli": [142, 162, 205, 207, 265, 266, 267, 268, 274, 298, 299, 357, 358, 359, 413, 420, 481, 482, 563, 575, 576, 710, 712, 788, 795, 807, 808, 867, 888], "prefer": [142, 151, 170, 171, 189, 190, 192, 202, 205, 206, 213, 260, 265, 266, 267, 268, 362, 420, 442, 461, 481, 482, 563, 651, 710, 712, 810, 845, 847, 851, 853, 854, 866, 869, 870, 873], "untransform": 142, "docstr": [142, 151, 180, 202, 203, 210, 216, 219, 240, 266, 284, 298, 299, 476, 478, 479, 541, 710, 752, 754, 771, 888], "plot_topo_imag": [142, 265, 266, 888], "accompani": [142, 673, 869], "scalebar": [142, 888], "highli": [142, 188, 207, 223, 231, 501, 620, 624, 694, 851], "customiz": [142, 267, 268, 708, 793], "respond": [142, 144, 195, 869], "opposit": [142, 168, 517, 870], "0242": [142, 169], "pop": [142, 150, 200, 262, 265, 266, 270, 274, 289, 304, 529, 743, 817, 845, 888], "had": [142, 151, 167, 168, 175, 181, 201, 202, 203, 206, 207, 219, 240, 242, 265, 266, 406, 436, 584, 625, 711, 870, 888], "At": [142, 191, 204, 205, 211, 322, 481, 847, 853, 863, 888], "fullscreen": [142, 472, 888], "unusu": [142, 184, 200, 204], "reject_criteria": [142, 145, 151, 166, 201, 211], "3000e": [142, 145, 201], "find_layout": [142, 170, 878, 888], "font_color": [142, 265, 266, 708, 817], "reinforc": 142, "disguis": 142, "mayb": [142, 264, 265, 266, 267, 268, 481, 482, 560, 708, 710, 711, 712], "20_visualize_epoch": [142, 148], "who": [143, 257, 270, 563, 847, 851, 864, 869, 888], "lexic": [143, 864], "decis": [143, 191, 202, 242, 260, 265, 417, 522, 618, 864], "kiloword_data_fold": 143, "kiloword_data_fil": 143, "capabl": [143, 155, 166, 168, 378, 756, 821, 825, 827, 828, 845, 847, 851, 854, 864, 888], "surviv": [143, 270], "reload": 143, "attach": [143, 169, 200, 216, 228, 240, 437, 843], "numberoflett": [143, 228], "english": [143, 864], "lexicon": 143, "wordfrequ": 143, "render": [143, 156, 160, 171, 172, 257, 265, 266, 272, 273, 275, 276, 279, 280, 281, 472, 481, 482, 563, 708, 756, 765, 786, 803, 809, 814, 815, 819, 822, 824, 847, 853, 870, 871, 888], "orthographicdist": 143, "bigramfrequ": 143, "consonantvowelproport": 143, "450000": 143, "189490": 143, "900000": 143, "700704": 143, "546": [143, 209, 232], "600000": 143, "858537": 143, "484": [143, 196, 204, 227, 245, 562, 610], "700000": 143, "454540": 143, "1095": 143, "539076": 143, "686": [143, 196, 232], "drudgeri": 143, "473684": 143, "556303": 143, "732357": 143, "991226": 143, "859": [143, 232], "545879": 143, "957": [143, 232], "billiard": 143, "500000": [143, 144, 195], "672098": 143, "838597": 143, "958": [143, 228], "698970": 143, "615": [143, 196, 232], "088112": 143, "959": [143, 195, 196, 232], "solenoid": 143, "111111": 143, "301030": 143, "443": [143, 232, 245], "544507": 143, "iloc": [143, 145], "iat": 143, "nindex": 143, "arbitrarili": [143, 158, 232, 870], "highcomplex": 143, "startswith": [143, 888], "district": 143, "disarrai": 143, "disast": 143, "diseas": 143, "discord": 143, "dispos": 143, "lasso": [143, 245, 265, 266, 267, 268, 481, 482, 786, 809, 812, 888], "tentacl": 143, "banjo": 143, "corsag": 143, "fall": [143, 151, 168, 171, 210, 218, 258, 275, 367, 406, 437, 454, 565, 843, 870, 888], "rich": [143, 171, 845, 851], "typhoon": 143, "bungalow": 143, "colossu": 143, "linguist": 143, "dozen": [143, 200, 205, 207, 865], "share": [143, 190, 202, 218, 259, 298, 609, 695, 696, 698, 699, 847, 865, 870, 873, 876, 888], "letter": [143, 170, 188, 228, 245, 756, 888], "n_letter": 143, "intens": [143, 160, 171, 181, 182, 190, 205, 267, 268, 272, 273, 276, 279, 280, 281, 283, 539, 540, 590, 756, 791, 814, 819, 843, 888], "sort_ord": 143, "obviou": [143, 171, 200, 205, 219, 235], "reaction": [143, 227, 265, 266, 787, 888], "new_metadata": 143, "foo": [143, 150, 171, 265, 266, 388, 711, 847], "30_epochs_metadata": [143, 148], "eriksen": 144, "flanker": [144, 864], "introductori": [144, 150, 162, 168, 169, 199, 216, 217, 227, 867], "straight": [144, 265, 266, 267, 268, 481, 482, 812], "creation": [144, 149, 155, 168, 201, 218, 257, 259, 262, 265, 266, 275, 278, 310, 412, 575, 576, 870, 888], "ourselv": [144, 175, 204, 205, 207], "incorrect": [144, 176, 192, 201, 202, 212, 245, 845, 870, 888], "sophist": [144, 189, 455], "erp_cor": [144, 171, 864, 878], "infil": 144, "core_subject": 144, "001_task": [144, 212], "flankers_eeg": 144, "all_ev": 144, "all_event_id": 144, "935935": 144, "913": [144, 232], "33793": 144, "target_left": 144, "target_right": 144, "incompat": [144, 629, 635, 845, 888], "decid": [144, 211, 242, 260, 265, 266, 453, 522, 618, 785, 869], "1500": 144, "invalid": [144, 229, 888], "metadata_tmin": 144, "metadata_tmax": 144, "why": [144, 151, 158, 160, 192, 201, 202, 206, 216, 224, 227, 231, 245, 737, 740, 869], "event_nam": [144, 232, 437, 440], "551758": 144, "997070": 144, "434570": 144, "797": [144, 232], "343750": 144, "917969": 144, "425781": 144, "416016": 144, "799": [144, 232], "392578": 144, "990234": 144, "402344": 144, "802": [144, 232], "eleg": 144, "row_ev": [144, 437], "pertain": 144, "sync": [144, 259, 270, 442, 498, 609], "508789": 144, "00000": 144, "503906": 144, "449219": 144, "542969": 144, "792": 144, "496094": 144, "437500": 144, "465820": 144, "796": [144, 232], "547852": 144, "46582": 144, "descriptor": [144, 166, 240, 245, 437, 481, 482, 843], "hed": [144, 151, 240, 245, 437, 843], "inspir": [144, 437, 452, 746, 847, 886], "keep_first": [144, 437], "regardless": [144, 151, 171, 190, 204, 207, 454, 807, 843], "first_respons": [144, 437], "notna": 144, "411133": 144, "454102": 144, "443359": 144, "466797": 144, "400391": 144, "499023": 144, "584961": 144, "421875": 144, "450195": 144, "399414": 144, "316406": 144, "416992": 144, "386719": 144, "410156": 144, "467773": 144, "377930": 144, "483398": 144, "454": [144, 209, 232, 278], "457031": 144, "456": [144, 227, 278], "566406": 144, "395508": 144, "354492": 144, "326172": 144, "432617": 144, "538": [144, 232], "322266": 144, "482422": 144, "606": [144, 196, 232], "484375": 144, "652": [144, 196, 226, 232], "371094": 144, "342773": 144, "704": [144, 180, 187, 196], "307617": 144, "706": [144, 196, 232], "442383": 144, "728": 144, "376953": 144, "first_stimulu": 144, "perfect": [144, 158, 202, 210], "stimulus_sid": 144, "response_correct": 144, "correct_response_count": 144, "rememb": [144, 150, 161, 171, 176, 200, 205, 206, 216, 232, 870], "epochs_tmin": 144, "epochs_tmax": 144, "strong": [144, 183, 200, 205, 231, 563, 665, 670, 863], "099609375": 144, "lastli": [144, 172, 209, 211, 241, 242, 847], "greater": [144, 166, 200, 205, 227, 230, 265, 266, 277, 360, 454, 563, 590, 591, 697, 711, 737, 740, 756, 888], "vis_erp": 144, "vis_erp_slow": 144, "asid": [144, 172, 199, 237], "fact": [144, 149, 151, 181, 182, 199, 205, 206, 210, 217, 419, 425, 563, 625, 843, 863, 870], "noisier": [144, 191], "deal": [144, 162, 171, 180, 202, 205, 206, 208, 217, 227, 231, 235, 237, 267, 268, 272, 273, 276, 279, 280, 281, 298, 299, 457, 563, 574, 584, 595, 609, 876, 888], "keep_last": [144, 437], "previous": [144, 149, 170, 204, 205, 257, 291, 298, 299, 645, 756, 888], "last_": [144, 437], "last_stimulu": 144, "last_respons": 144, "431641": 144, "795": [144, 232], "576172": 144, "puls": [144, 146, 166, 168, 199, 205, 207, 217, 585, 588, 870], "c5": [144, 505], "cpz": 144, "isna": 144, "bummer": 144, "impress": 144, "resp_erp_correct": 144, "resp_erp_incorrect": 144, "deflect": [144, 199, 206, 207, 888], "immedi": [144, 156, 168, 200, 205, 208, 242, 258, 430, 481, 482, 566, 618, 680, 683, 765, 809, 843, 847, 869, 870, 888], "doubt": 144, "resp_erp_diff": 144, "bolder": 144, "set_linewidth": 144, "grai": [144, 156, 160, 172, 200, 210, 217, 229, 230, 231, 232, 237, 271, 471, 563, 612, 756, 771, 772, 780, 799], "trough_time_idx": 144, "trough_tim": 144, "emili": [144, 202, 245, 864, 888], "kappenman": [144, 202, 245, 864], "jaclyn": [144, 245, 864], "farren": [144, 245, 864], "wendi": [144, 195, 245, 419, 864], "zhang": [144, 245, 864, 870, 888], "andrew": [144, 180, 245, 563, 697, 864, 888], "stewart": [144, 245, 864], "luck": [144, 151, 202, 245, 864], "117465": [144, 245, 864], "nima": [144, 245, 437], "bigd": [144, 245, 437], "shamlo": [144, 245, 437], "kreutz": [144, 245, 437], "delgado": [144, 245, 437], "robbin": [144, 245, 437], "makoto": [144, 245, 437], "miyakoshi": [144, 245, 437], "marissa": [144, 245, 437], "westerfield": [144, 245, 437], "tarik": [144, 245, 437], "bel": [144, 245, 437], "bahar": [144, 245, 437], "koth": [144, 245, 437], "jessica": [144, 245, 437], "hsi": [144, 245, 437], "globalsip": [144, 245, 437], "6736796": [144, 245, 437], "842": [144, 148, 157, 164, 232], "40_autogenerate_metadata": [144, 148], "workflow": [145, 155, 201, 864, 866, 888], "200e": [145, 151, 201], "0113": [145, 166, 169, 176, 216], "0112": [145, 166, 169, 216], "0122": [145, 166, 169, 216, 241], "0132": [145, 169], "199795": 145, "320252": 145, "567619": 145, "248584": 145, "609895": 145, "700540": 145, "352746": 145, "908667": 145, "193135": 145, "049675": 145, "702938": 145, "168267": 145, "480975": 145, "182237": 145, "225684": 145, "072452": 145, "186476": 145, "283711": 145, "006895": 145, "912317": 145, "130290": 145, "157198": 145, "842466": 145, "986073": 145, "179816": 145, "040471": 145, "643716": 145, "835772": 145, "517952": 145, "214631": 145, "043144": 145, "672744": 145, "173156": 145, "688943": 145, "974112": 145, "561683": 145, "450115": 145, "778315": 145, "795987": 145, "277138": 145, "timedelta": [145, 218, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 708, 711], "132025e": 145, "156762e": 145, "324858e": 145, "060990e": 145, "870054e": 145, "835275e": 145, "790867e": 145, "049675e": 145, "702938e": 145, "416827e": 145, "748098e": 145, "018224e": 145, "212257e": 145, "072452e": 145, "283711e": 145, "300690e": 145, "691232e": 145, "213029e": 145, "515720e": 145, "178425e": 145, "986073e": 145, "304047e": 145, "643716e": 145, "783577e": 145, "851795e": 145, "521463e": 145, "204314e": 145, "672744e": 145, "568894e": 145, "974112e": 145, "556168e": 145, "450115e": 145, "377831e": 145, "117960e": 145, "727714e": 145, "0133": [145, 169], "dai": [145, 207, 257, 265, 266, 267, 268, 270, 481, 482, 483], "800204787": 145, "379736": 145, "123525": 145, "806864627": 145, "734826": 145, "339465": 145, "813524468": 145, "996158": 145, "627037": 145, "820184308": 145, "748030": 145, "024973": 145, "826844149": 145, "123811": 145, "917677": 145, "pivot": [145, 263, 784, 815], "long_df": [145, 228], "coupl": [145, 211, 216, 237, 416, 599, 854, 872, 888], "1342": [145, 169, 235, 237], "categorydtyp": 145, "nicer": [145, 206, 888], "hue": 145, "peak_lat": 145, "regex": [145, 888], "idxmax": 145, "melt": 145, "id_var": 145, "var_nam": 145, "value_nam": 145, "satur": [145, 510], "50_epochs_to_data_fram": [145, 148], "equidistantli": 146, "consecut": [146, 168, 235, 272, 273, 276, 279, 280, 281, 454, 522, 565, 566, 888], "briefli": [146, 151, 202, 219, 227], "hous": 146, "compute_proj_ecg": [146, 206, 207, 580, 585, 863, 878, 888], "envelope_correl": [146, 888], "manag": [146, 166, 171, 172, 265, 266, 267, 268, 271, 272, 273, 275, 276, 279, 280, 281, 283, 356, 357, 359, 361, 416, 423, 426, 429, 430, 456, 469, 471, 481, 482, 521, 524, 525, 536, 537, 546, 547, 552, 563, 568, 575, 576, 656, 659, 660, 661, 673, 695, 696, 697, 698, 699, 710, 712, 713, 714, 715, 716, 717, 718, 726, 727, 735, 736, 737, 738, 739, 750, 751, 786, 788, 791, 803, 809, 810, 845, 847, 852, 854, 869, 876, 888], "chan": [146, 256, 688], "heart": [146, 199, 204, 245, 737, 740, 888], "beat": [146, 211, 575, 585, 588, 660], "onpca": 146, "onecg": 146, "make_fixed_length_epoch": [146, 260, 878, 888], "unsuit": [146, 888], "misalign": [146, 178, 492, 888], "event_related_plot": 146, "1142": [146, 169], "n_sensor": [146, 241, 272, 276, 280, 772], "alpha_data": 146, "1530": 146, "epochconnect": 146, "corr_matrix": 146, "first_30": 146, "last_30": 146, "corr_matric": 146, "color_lim": 146, "mpbl": 146, "60_make_fixed_length_epoch": [146, 148], "auto_tutorials_epoch": 148, "raw_fil": [149, 151], "happen": [149, 151, 156, 160, 161, 167, 168, 171, 196, 201, 203, 205, 227, 258, 265, 266, 319, 436, 438, 843, 847, 864, 867, 869, 873, 888], "discuss": [149, 151, 156, 165, 166, 168, 173, 180, 191, 196, 199, 202, 203, 216, 219, 227, 232, 242, 245, 711, 846, 847, 864, 866, 867, 869, 870, 888], "transfer": [149, 196, 200, 202, 596, 843, 863], "maintain": [149, 200, 227, 265, 266, 267, 268, 481, 482, 483, 554, 847, 866, 869, 870, 888], "proven": [149, 888], "never": [149, 265, 266, 320, 582, 774, 847, 870, 888], "72160572e": 149, "57859354e": 149, "98040833e": 149, "75128428e": 149, "15309907e": 149, "83186429e": 149, "bewar": [149, 160, 870], "evoked_subset": 149, "repair": [149, 165, 166, 199, 200, 201, 206, 210, 214, 215, 219, 245, 262, 265, 267, 268, 270, 357, 359, 454, 481, 496, 557, 560, 562, 563, 575, 576, 578, 580, 581, 585, 602, 603, 607, 712, 807, 808, 828, 863, 888], "evk_fil": 149, "evokeds_list": [149, 150], "right_vi": 149, "remedi": 149, "left_right_aud": 149, "6992832460543575": [149, 151], "fairli": [149, 166, 199, 201, 202, 203, 205, 207, 208], "left_aud": 149, "right_aud": 149, "proport": [149, 227, 272, 273, 274, 276, 279, 280, 281, 355, 367, 479, 563, 571, 814, 819, 870, 888], "grand_averag": [149, 151, 878, 888], "intend": [149, 171, 210, 217, 258, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 437, 481, 482, 563, 596, 602, 854], "standard_error": [149, 265, 266, 267, 268, 625, 888], "iter_evok": [149, 151, 265, 266, 888], "ix": [149, 151], "return_amplitud": [149, 151, 267, 268], "569": [149, 196, 232], "648": [149, 232], "10_evoked_overview": [149, 154], "evoked_fil": 150, "life": [150, 869], "evk": [150, 151], "superimpos": [150, 172, 199, 219, 563, 757, 800], "timeseri": [150, 224, 265, 266, 267, 268, 481, 482, 675, 709], "resembl": [150, 162, 175, 530, 588, 589], "wing": 150, "behav": [150, 202, 216, 269, 270, 442, 888], "time_ranges_of_interest": 150, "drag": [150, 151, 161, 218, 262, 265, 266, 267, 268, 274, 413, 420, 481, 482, 562, 563, 708, 710, 712, 787, 788, 792, 795, 799, 808, 810, 811, 816, 818, 845, 865], "averaging_dur": 150, "augment": [150, 873], "custom_func": 150, "0x7fb05f005e10": 150, "substr": [150, 630, 642, 888], "action": [150, 171, 847, 873, 876], "ambigu": [150, 273, 279, 281, 888], "temp_list": 150, "_comment": 150, "_evk": 150, "overhead": [150, 654, 751, 888], "trans_fil": 150, "00097": 150, "meg_surf": [150, 521], "_map": 150, "508": [150, 151, 154, 227, 228, 232], "20_visualize_evok": [150, 154], "materi": [151, 162, 843, 847, 867], "link": [151, 189, 245, 272, 276, 280, 448, 770, 814, 847, 853, 867, 870, 876, 888], "events_fil": [151, 201], "discard": [151, 200, 205, 206, 207, 210, 237, 594, 595, 622, 888], "last_samp": [151, 270, 364, 480, 481, 482, 843, 888], "13514": 151, "mislabel": 151, "lowercas": 151, "channel_renaming_dict": [151, 216], "schemat": 151, "diagram": [151, 205, 843], "addition": [151, 171, 190, 199, 206, 218, 240, 256, 273, 279, 281, 320, 331, 653, 736, 739, 819, 847, 862, 872], "realist": [151, 245, 863, 870], "dedic": [151, 199, 205, 207, 216, 481, 482, 809, 847, 851, 869, 877, 888], "use_browser_backend": [151, 200, 203, 205, 206, 207, 208, 265, 266, 481, 482, 563, 786, 803, 809, 878, 888], "xx": [151, 200, 203, 206, 207, 208, 259, 847], "qt": [151, 166, 171, 172, 200, 203, 205, 206, 207, 208, 265, 266, 481, 482, 563, 756, 786, 803, 809, 825, 828, 845, 867, 888], "scheme": [151, 188, 222, 231, 262, 265, 266, 267, 268, 274, 413, 420, 429, 481, 482, 562, 563, 578, 649, 652, 689, 708, 710, 712, 773, 786, 788, 795, 799, 808, 811, 812, 816, 818, 847, 870, 888], "eeg53": 151, "eog61": 151, "chose": 151, "proce": [151, 260, 265, 405, 563, 566, 573, 765, 867], "consol": [151, 851, 888], "duplic": [151, 161, 260, 265, 266, 267, 268, 271, 275, 314, 342, 481, 482, 643, 888], "eeg03": 151, "eeg01": 151, "eeg02": 151, "eeg04": 151, "eeg06": 151, "eeg07": 151, "eeg25": 151, "25auditori": 151, "27buttonpress": 151, "5visual": 151, "28visual": 151, "barplot": [151, 205], "lose": [151, 189, 218, 867], "plot_drop_log": [151, 201, 211, 265, 266, 878, 888], "break": [151, 165, 214, 215, 218, 259, 265, 267, 270, 481, 560, 566, 586, 622, 841, 847, 863, 888], "l_aud": [151, 237], "l_vi": [151, 237], "fig1": [151, 170], "speak": [151, 167, 168, 204, 855], "agreement": [151, 869], "warrant": 151, "popul": [151, 155, 165, 222, 225, 230, 245, 266, 268, 375, 413, 445, 482, 596, 690, 752, 843, 888], "leverag": [151, 869], "verifi": [151, 182, 242, 852, 853, 870], "plain": [151, 192, 204, 242, 334, 833], "ddof": [151, 162, 867], "lime": 151, "revisit": [151, 245, 413], "eeg17": 151, "eeg18": 151, "eeg26": 151, "eeg23": 151, "eeg24": 151, "eeg34": 151, "eeg35": 151, "left_ix": 151, "right_ix": 151, "roi_dict": 151, "left_roi": [151, 265, 266, 267, 268, 787, 792], "right_roi": [151, 265, 266, 267, 268, 787, 792], "roi_evok": 151, "combine_channel": [151, 878, 888], "aud_minus_vi": 151, "29969": 151, "69928": 151, "weak": [151, 205], "chapter": 151, "erplab": [151, 245], "consequ": [151, 162, 169, 210, 357, 358, 359, 442, 453, 498, 550, 867, 870, 888], "voltag": [151, 166, 168, 188, 189, 208, 217, 506, 843, 888], "p100": 151, "submit": [151, 228, 847, 869], "amp": [151, 178, 183, 185, 257, 888], "throughout": [151, 171, 211, 563, 864, 888], "remaind": 151, "print_peak_measur": 151, "3f": [151, 210, 228, 232, 242, 265, 266, 267, 268, 481, 482, 710, 712, 788, 795], "good_tmin": 151, "good_tmax": 151, "eeg55": 151, "pull": [151, 206, 826, 843, 854, 869], "priori": [151, 242, 870], "believ": [151, 242, 847, 870], "eeg59": 151, "fist": 151, "l_vis_roi": 151, "ch_roi": 151, "lat_roi": 151, "amp_roi": 151, "FOR": 151, "ONE": [151, 157, 196, 245], "713": [151, 196, 232], "suscept": [151, 203, 584], "challeng": [151, 212, 245, 864, 867, 876], "meth": [151, 172, 847, 888], "guarante": [151, 188, 200, 205, 208, 210, 227, 265, 266, 267, 268, 443, 444, 445, 446, 481, 482, 512, 888], "rise": [151, 497, 613, 619, 843], "crucial": [151, 156, 199, 235], "095": [151, 170, 262, 265, 266, 267, 268, 274, 314, 332, 413, 420, 481, 482, 562, 563, 578, 708, 710, 712, 773, 780, 788, 790, 792, 795, 796, 799, 806, 808, 810, 811, 812, 816, 818, 888], "bad_tmin": 151, "bad_tmax": 151, "bad_lat_roi": 151, "bad_amp_roi": 151, "898": 151, "unclear": [151, 847], "truli": [151, 202, 695], "pink": [151, 156, 772, 843], "star": 151, "yourself": [151, 156, 169, 199, 203, 216, 257, 267, 268, 492, 795, 847], "c6": 151, "act": [151, 169, 203, 204, 206, 210, 265, 266, 267, 268, 278, 298, 299, 349, 476, 478, 479, 481, 482, 541, 595, 652, 711, 843, 865, 867, 869, 888], "eeg54": 151, "eeg57": 151, "l_vis_mean_roi": 151, "mean_amp_roi": 151, "mean_amp_roi_df": 151, "mean_amp": 151, "numeric_onli": 151, "279764": 151, "685840": 151, "reiter": 151, "hypothes": [151, 227, 228, 876], "l_vis_crop": 151, "mean_amp_al": 151, "mean_amp_all_df": 151, "option_context": 151, "max_column": 151, "689513": 151, "078492": 151, "381191": 151, "609264": 151, "eeg05": 151, "113717": 151, "eeg56": 151, "064174": 151, "259681": 151, "eeg58": 151, "156472": 151, "802306": 151, "eeg60": 151, "878811": 151, "dietrich": [151, 245, 530, 870], "lehmann": [151, 245, 530, 870], "wolfgang": [151, 245, 737, 740], "skrandi": [151, 245], "identif": [151, 205, 245, 578], "checkerboard": [151, 166, 242, 245, 864], "609": [151, 245], "621": [151, 196, 232, 245], "90419": [151, 245], "neurobiologi": [151, 245], "1984": [151, 195, 245], "0301": [151, 245], "0082": [151, 245], "90003": [151, 245], "micah": [151, 245], "brunet": [151, 245], "michel": [151, 185, 245, 391, 563, 668], "s10548": [151, 208, 245, 579, 673], "0054": [151, 245], "ma": [151, 245, 888], "52585": [151, 245], "mitpress": [151, 245], "book": [151, 245, 452, 847], "javier": [151, 245], "lopez": [151, 245], "calderon": [151, 245], "00213": [151, 245], "preclud": [151, 202, 210, 245, 595], "00131": [151, 202, 245], "rufin": [151, 202, 245], "vanrullen": [151, 202, 245], "fallaci": [151, 202, 245], "00365": [151, 202, 245], "nichola": [151, 212, 245, 577, 864], "gaspelin": [151, 245], "12639": [151, 245], "862": [151, 154, 172, 232], "30_eeg_erp": [151, 154], "perspect": [152, 206, 756], "satisfi": [152, 161, 227, 298, 299, 690, 710, 712, 870], "40_whiten": [152, 154], "repetit": [153, 165, 673], "433": [154, 209, 232], "auto_tutorials_evok": 154, "outer": [155, 158, 160, 161, 183, 257, 309, 563, 595, 756, 802, 843, 848, 851, 854, 863, 864, 867, 870, 873], "tissu": [155, 158, 843], "boundari": [155, 158, 172, 182, 191, 219, 262, 265, 266, 267, 268, 271, 274, 275, 365, 413, 420, 471, 481, 482, 562, 563, 584, 612, 673, 687, 708, 710, 712, 756, 761, 773, 774, 788, 795, 799, 808, 810, 811, 816, 818, 843, 853, 873, 888], "analog": [155, 188, 190, 196, 206, 210, 265, 266, 267, 268, 448, 481, 482, 489, 496, 504, 560, 708, 710, 711, 712, 843, 873, 888], "freesurfer_hom": [155, 374, 853], "setupfreesurf": 155, "sh": [155, 850, 853], "folder": [155, 156, 158, 161, 170, 188, 216, 275, 278, 305, 309, 340, 379, 380, 381, 382, 384, 385, 386, 388, 393, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 461, 462, 467, 497, 510, 619, 651, 772, 774, 847, 850, 853, 888], "my_subject": 155, "my_nifti": 155, "subfold": [155, 388], "hour": [155, 481, 482, 563, 803, 809], "beforehand": [155, 265, 266, 786, 824], "set_config": [155, 171, 265, 266, 377, 388, 461, 481, 482, 563, 754, 786, 803, 809, 845, 847, 863, 878, 888], "scan": [155, 166, 176, 180, 183, 210, 270, 392, 590, 591, 848, 851, 854, 859, 873, 876], "overview": [155, 156, 165, 170, 171, 173, 174, 180, 201, 205, 207, 214, 215, 227, 241, 250, 265, 266, 267, 268, 270, 276, 355, 404, 454, 481, 482, 502, 523, 529, 530, 544, 560, 563, 580, 581, 585, 708, 738, 780, 786, 789, 803, 809, 825, 843, 867], "buckner40not": 155, "standalon": [155, 849, 880, 888], "716": [155, 164, 232], "10_background_freesurf": [155, 164], "landmark": [156, 222, 337, 367, 843, 863, 870, 873, 888], "t1w": [156, 314], "nifti1imag": [156, 182, 277, 280, 281, 309], "dataobj": [156, 160, 182], "xyzt_unit": 156, "uint8": 156, "t1_mgh": 156, "mghimag": [156, 870], "draw": [156, 170, 176, 177, 202, 229, 262, 265, 266, 267, 268, 274, 314, 413, 420, 481, 482, 562, 563, 578, 588, 708, 710, 712, 773, 779, 780, 787, 788, 790, 795, 799, 802, 806, 808, 811, 812, 816, 818, 870, 873, 888], "arrow": [156, 160, 161, 178, 183, 199, 203, 206, 219, 262, 263, 265, 266, 267, 268, 273, 274, 279, 280, 281, 413, 420, 481, 482, 562, 563, 708, 710, 712, 756, 773, 784, 786, 787, 788, 792, 795, 798, 799, 808, 809, 811, 816, 819, 820, 870, 888], "ight": 156, "nterior": 156, "longest": 156, "uperior": 156, "camera": [156, 160, 192, 267, 268, 472, 756, 770, 772, 791, 824, 888], "dig_mri_dist": [156, 367, 878, 888], "na": [156, 242, 488, 843], "preauricular": [156, 314, 338, 843, 870], "manufactur": [156, 170, 188, 189, 190, 192, 843, 870, 876, 888], "faq": [156, 189, 202, 208, 311, 373, 489, 595, 868], "intersect": [156, 160, 161, 184, 595, 612, 863, 888], "purpl": [156, 158, 237], "perpendicular": [156, 178, 870], "goe": [156, 160, 202, 218, 870], "upward": [156, 160, 205, 209, 756, 780], "compani": [156, 245, 690, 869], "acquir": [156, 200, 285, 286, 309, 505, 859, 864, 869, 870, 873, 888], "emit": [156, 209, 259, 265, 266, 267, 268, 270, 272, 273, 275, 276, 279, 280, 281, 285, 286, 318, 341, 350, 351, 356, 360, 363, 365, 367, 371, 372, 432, 447, 460, 463, 481, 482, 502, 563, 596, 615, 644, 646, 708, 710, 711, 712, 753, 789, 800, 834, 836, 843, 888], "coregist": [156, 309, 472], "front": [156, 267, 268, 308, 432, 756, 790, 843, 870], "magenta": 156, "1mm": 156, "anisotrop": [156, 245, 870], "incorrectli": [156, 473, 867, 888], "identity_tran": 156, "mri_voxel": [156, 327, 514, 743], "corner": [156, 191, 202, 203, 206, 219, 257, 265, 266, 267, 268, 270, 481, 482, 769, 780, 786, 794, 809, 873, 888], "inferior": [156, 160, 843], "seghead_rr": 156, "seghead_tri": 156, "read_surfac": [156, 160, 161, 271, 641, 657, 841, 863, 878, 888], "mri_to_head": 156, "scalp_pts_in_head_coord": 156, "head_to_meg": 156, "scalp_pts_in_meg_coord": 156, "vox_to_mri": 156, "get_vox2ras_tkr": [156, 160, 182], "mri_to_vox": 156, "scalp_points_in_vox": 156, "scene": [156, 160, 171, 195, 245, 257, 267, 268, 272, 273, 276, 279, 280, 281, 419, 472, 756, 762, 763, 765, 772, 791, 814, 819, 823, 824, 826, 845, 865, 888], "nose": [156, 208, 308], "behind": [156, 171, 195, 200, 205, 472, 775, 865], "roughli": [156, 356, 584, 845, 888], "world": [156, 160, 172, 182, 202, 218, 229, 277, 456], "anonym": [156, 265, 266, 267, 268, 481, 482, 483, 867, 888], "blur": [156, 870], "fiffv_point_cardin": [156, 160, 270, 873], "fiffv_point_nas": [156, 160, 270, 873], "fiffv_coord_head": [156, 269, 270, 873], "nasion_mri": [156, 160], "nasion_vox": [156, 160], "toggl": [156, 166, 172, 191, 200, 205, 219, 265, 266, 481, 482, 563, 756, 786, 801, 803, 809, 825, 888], "radio": [156, 876], "icon": [156, 172], "fid": [156, 707], "icp": [156, 888], "finetun": 156, "inner_skul": [156, 158, 159, 161, 172, 183, 278, 644, 772, 863, 864], "outer_skul": [156, 158, 159, 161, 170, 172, 278, 772, 863, 864], "equiv": [156, 183, 184, 185, 208], "rv": [156, 183, 184, 185, 208, 864], "00348961": [156, 208], "mu1": [156, 183, 184, 185, 208], "944714": [156, 208], "lambda1": [156, 183, 184, 185, 208], "137173": [156, 208], "mu2": [156, 183, 184, 185, 208], "667447": [156, 208], "683794": [156, 208], "mu3": [156, 183, 184, 185, 208], "26595": [156, 208], "lambda3": [156, 183, 184, 185, 208], "0105972": [156, 208], "6156": 156, "2300": 156, "1904": 156, "082": [156, 164], "20_source_align": [156, 164], "hsp": [157, 188, 257, 314, 327, 339, 367, 506, 621, 870, 888], "preprat": 157, "jon": [157, 245, 888], "houck": [157, 245, 888], "faveli": [157, 875, 888], "skin": [157, 158, 161, 257, 265, 266, 267, 268, 309, 367, 481, 482, 560, 708, 710, 711, 712, 843, 864, 867, 870, 888], "fit_fiduci": [157, 367], "gui": [157, 158, 160, 265, 266, 272, 273, 276, 279, 280, 281, 310, 481, 482, 563, 772, 786, 803, 809, 814, 819, 845, 847, 851, 853, 854, 861, 863, 865, 867, 878, 888], "fit_icp": [157, 367], "n_iter": [157, 367, 593], "nasion_weight": [157, 367], "omit_head_shape_point": [157, 367], "compute_dig_mri_dist": [157, 367], "write_tran": [157, 640, 878], "abil": [157, 178, 180, 196, 666, 667, 736, 739, 865, 869, 876, 888], "set_scale_mod": [157, 367], "fetch_infant_templ": [157, 159, 864, 878, 888], "scale_mri": [157, 367, 647, 878, 888], "clau": [157, 245], "plo": [157, 196, 245], "e0232100": [157, 245], "pone": [157, 196, 245], "0232100": [157, 245], "25_automated_coreg": [157, 164], "concept": [158, 176, 227, 245, 843, 871, 874], "watershed_bem": [158, 591, 854, 867, 870, 888], "flash_bem": [158, 591, 854, 870, 888], "make_watershed_bem": [158, 191, 843, 867, 878, 888], "make_flash_bem": [158, 305, 843, 878, 888], "plot_bem": [158, 160, 311, 772, 867, 870, 878, 888], "plot_bem_kwarg": 158, "brain_surfac": [158, 774], "mrilab": [158, 873], "isn": [158, 166, 224, 242, 261, 265, 382, 405, 406, 629, 632, 635, 711, 847, 867], "candid": [158, 200, 843, 869], "oct4": 158, "90mm": 158, "57798": 158, "24365": 158, "20377": 158, "32480": 158, "22941": 158, "2787": 158, "9357": 158, "20154": 158, "846": [158, 182, 232], "10797": 158, "12738": 158, "13218": 158, "10203": 158, "2362": [158, 205, 245, 563], "10376": 158, "midpoint": [158, 190, 267, 268, 774, 870, 888], "make_bem_model": [158, 161, 191, 278, 367, 432, 463, 520, 526, 615, 644, 646, 836, 863, 878, 888], "4th": [158, 199, 265, 266, 267, 268, 415, 424, 448, 449, 451, 452, 481, 482, 575, 576], "icosahedron": [158, 160, 161, 257, 272, 276, 280, 656, 814], "n_tri": [158, 160, 271, 836], "topologi": [158, 202, 550, 888], "commonli": [158, 168, 170, 175, 202, 242, 270, 471, 563, 843, 888], "474": [158, 227, 232, 278], "gone": 158, "adequ": [158, 207, 270], "1422": [158, 169], "fwd_fix": 158, "explicitli": [158, 172, 188, 196, 201, 203, 204, 205, 235, 260, 265, 266, 267, 268, 270, 275, 298, 299, 305, 312, 315, 331, 356, 360, 361, 371, 372, 373, 413, 415, 420, 429, 434, 451, 452, 456, 457, 476, 478, 479, 481, 482, 515, 541, 562, 563, 565, 579, 580, 581, 587, 593, 601, 603, 610, 612, 652, 660, 661, 662, 671, 672, 674, 676, 694, 695, 696, 697, 698, 699, 708, 710, 711, 712, 716, 717, 718, 719, 721, 739, 780, 786, 787, 790, 792, 793, 796, 805, 810, 845, 847, 863, 869, 876, 888], "src_hemi": 158, "apply_forward": [158, 286, 878, 888], "write_forward_solut": [158, 627, 878, 888], "justifi": [158, 452, 481, 482, 888], "claim": 158, "759": [158, 164, 232], "30_forward": [158, 164], "centimet": 159, "fs_dir": [159, 389], "live": [159, 202, 847, 888], "1005": 159, "new_nam": 159, "rstrip": 159, "fp": [159, 449, 666], "999994": 159, "003552": 159, "000202": 159, "003558": 159, "998389": 159, "056626": 159, "000001": [159, 228, 231], "998395": 159, "7809": 159, "4337": 159, "8001": 159, "4228": 159, "6mo": [159, 391], "ants6": 159, "0months3t": 159, "come": [159, 175, 181, 188, 189, 202, 203, 205, 207, 218, 228, 242, 271, 276, 374, 505, 523, 583, 622, 843, 845, 847, 851, 852, 864, 870, 888], "fname_1020": 159, "mon": [159, 505], "read_dig_fif": [159, 314, 327, 330, 333, 334, 335, 337, 338, 339, 870, 878, 888], "03d": [159, 498], "99975431": 159, "01839625": 159, "01236795": 159, "00087239": 159, "0143472": 159, "96230429": 159, "27159646": 159, "01252444": 159, "01689809": 159, "27135229": 159, "96233177": 159, "03137219": 159, "48640": 159, "48214": 159, "645": [159, 164, 183, 232], "35_eeg_no_mri": [159, 164], "readabl": [160, 265, 266, 267, 268, 376, 415, 424, 449, 451, 452, 481, 482, 590, 847], "anterior": [160, 271, 326, 685, 843, 870, 888], "superior": [160, 273, 279, 281, 630, 756, 843, 870], "wide": [160, 166, 216, 847, 869], "unfamiliar": [160, 851], "asarrai": [160, 231], "unsign": [160, 272, 273, 276, 279, 280, 281, 888], "triplet": [160, 270, 457, 530, 658], "geograph": 160, "earth": 160, "north": 160, "prime": [160, 170], "meridian": 160, "degre": [160, 162, 192, 206, 227, 229, 232, 235, 257, 262, 267, 268, 270, 305, 309, 492, 593, 661, 695, 696, 698, 699, 708, 756, 761, 792, 824, 843, 853, 867, 870, 888], "nonetheless": [160, 202], "scanner": [160, 278, 475, 864, 870], "nativ": [160, 182, 188, 189, 265, 266, 267, 268, 318, 327, 332, 443, 444, 445, 446, 481, 482, 498, 506, 621, 756, 758, 864, 867, 876, 888], "mind": [160, 162, 175, 202, 256, 847], "si": [160, 190, 192, 227, 241, 265, 266, 267, 268, 299, 457, 481, 482, 583, 790, 792], "xyz_ra": 160, "00000000e": 160, "15484021e": 160, "91852465e": 160, "22726395e": 160, "56816911e": 160, "57160827e": 160, "18960930e": 160, "49011647e": 160, "40284092e": 160, "00712036e": 160, "ras_coords_mm": 160, "inv_affin": 160, "i_": [160, 188], "j_": 160, "k_": 160, "imshow_mri": 160, "aff2axcod": 160, "ori_slic": 160, "ori_nam": 160, "set_path_effect": 160, "reorient": 160, "rightward": 160, "x_order": 160, "lip": 160, "y_order": 160, "torig": 160, "vox2ras_tkr": [160, 182], "conform": [160, 190, 259, 870, 888], "matter": [160, 170, 265, 266, 267, 268, 271, 471, 481, 482, 515, 563, 612, 708, 710, 711, 712, 790, 863, 869, 888], "freeurfer": 160, "whenev": [160, 202, 847, 865], "everywher": 160, "xyz_mri": 160, "get_mni_fiduci": [160, 314, 368, 772, 878, 888], "digpoint": [160, 367, 888], "nasion_head": 160, "nasion_dig_mri": 160, "nasion_dig_vox": 160, "convention": 160, "rr_mm": 160, "313728": 160, "80481719970703": 160, "rr_vox": 160, "tricontour": 160, "renderer_kwarg": 160, "curv": [160, 196, 265, 266, 267, 268, 270, 481, 482, 669, 706, 710, 712, 870, 873], "read_curvatur": [160, 878], "y_shift": 160, "z_shift": 160, "this_rr": 160, "this_tri": 160, "copper_r": 160, "quiver3d": [160, 206, 888], "1050": 160, "wirefram": 160, "cyan": [160, 481, 482, 809], "line_width": 160, "cull": 160, "render_lines_as_tub": 160, "uniformli": [160, 191, 207, 478], "deform": [160, 170, 245], "uniform": [160, 367, 434, 530, 660, 675, 698, 699, 843, 888], "subsampl": [160, 260, 263, 264, 265, 266, 267, 268, 272, 273, 276, 278, 279, 280, 281, 481, 482, 519, 580, 581, 656, 694, 708, 711, 720, 756, 863, 888], "rr_sph": 160, "mri_mni_tran": 160, "xyz_mni": 160, "02248488": 160, "00844919": 160, "03621711": 160, "00111715": 160, "07107091": 160, "91486582": 160, "40609791": 160, "02300193": 160, "00875602": 160, "43369992": 160, "02811882": 160, "03356932": 160, "land": [160, 222], "difficult": [160, 189, 201, 232, 563, 870], "gist": [160, 176, 189, 265, 266, 267, 268, 481, 482, 867], "github": [160, 265, 266, 267, 268, 481, 482, 845, 855, 859, 866, 867, 868, 869], "alexrockhil": 160, "b5a1ce6c6ba363cf3f277cd321a763bf": 160, "50_background_freesurfer_mn": [160, 164], "aris": [161, 199, 584], "ezemikulan": 161, "blender_freesurf": 161, "ezequiel": [161, 888], "mikulan": [161, 888], "manorama": [161, 888], "kadwani": [161, 888], "shutil": 161, "flash": [161, 213, 278, 305, 309, 591, 772, 864, 888], "surf_dir": 161, "problemat": [161, 189, 202, 205, 206, 210, 227, 265, 266, 275, 310, 332], "skill": [161, 847], "conv": 161, "conv_dir": 161, "makedir": 161, "exist_ok": 161, "read_metadata": [161, 638], "write_surfac": [161, 638, 641, 878, 888], "wavefront": [161, 638, 841, 888], "navig": [161, 216, 265, 266, 275, 280, 281, 481, 482, 786, 809, 820, 845, 851, 871], "vert": [161, 178, 224, 242, 278], "preset": [161, 272, 273, 276, 279, 280, 281, 756, 814, 819], "beginn": [161, 849, 872], "teach": [161, 177, 245, 888], "_fix": 161, "inner_skull_fix": 161, "Be": [161, 216, 218, 267, 268, 793], "backup": 161, "mistak": [161, 847, 867], "inner_skull_orig": 161, "volume_info": [161, 638, 841], "vol_info": 161, "faulti": 161, "write_head_bem": [161, 878, 888], "head_dir": 161, "read_bem_surfac": [161, 519, 520, 614, 878, 888], "make_scalp_surfac": [161, 854, 878, 888], "shrinkwrap": 161, "\u2460": 161, "\u2461": 161, "\u2462": 161, "\u2464": 161, "tab": [161, 192, 257, 472, 551, 764, 847, 865], "\u2465": 161, "\u2467": 161, "snap": [161, 888], "noth": [161, 184, 185, 201, 262, 265, 266, 267, 268, 274, 277, 356, 367, 413, 420, 424, 426, 481, 482, 562, 563, 578, 649, 708, 710, 712, 759, 769, 773, 788, 795, 799, 808, 811, 816, 818, 864, 873, 888], "toolbar": [161, 821], "\u2468": 161, "extrus": 161, "extrud": 161, "rough": [161, 867], "ahead": [161, 847], "kernel": [161, 190, 195, 227, 242, 245, 272, 273, 276, 279, 280, 281, 419, 661, 845, 851, 853, 867, 888], "mri_convert": [161, 870], "fwhm": [161, 724, 734, 738, 878, 888], "t1_smoothed_3": 161, "delet": [161, 171, 200, 201, 211, 259, 262, 265, 266, 267, 268, 274, 365, 413, 420, 481, 482, 562, 563, 578, 651, 708, 710, 712, 773, 795, 799, 808, 811, 816, 847, 855, 870, 888], "cleaner": [161, 202], "encount": [161, 165, 189, 202, 447, 845, 853, 867], "runtimeerror": 161, "20516": 161, "isomorph": 161, "defect": [161, 257, 310, 367, 432, 463, 615, 644, 646, 836, 867, 888], "2068": 161, "7732": 161, "8435": [161, 888], "8489": 161, "10181": 161, "11120": [161, 888], "11121": 161, "11122": [161, 888], "11304": 161, "11788": 161, "disrupt": 161, "999668": 161, "wrong": [161, 846, 888], "easiest": [161, 199, 201, 203, 222, 847, 850], "unedit": 161, "gpl": 161, "water": 161, "clean_from_arrai": 161, "80_fix_bem_in_blend": [161, 164], "bb": [162, 442], "pp": [162, 265, 266, 434, 690], "desc": [162, 206, 274], "66000": 162, "write_cov": [162, 616, 878, 888], "inaccur": [162, 216, 262, 265, 266, 267, 268, 274, 356, 413, 420, 481, 482, 562, 563, 578, 708, 710, 712, 773, 788, 795, 799, 808, 811, 816, 818, 863, 870], "noise_cov_baselin": 162, "noise_cov_reg": 162, "1768": [162, 210, 245, 595], "1785": 162, "1797": 162, "freedom": [162, 206, 227, 229, 232, 235, 262, 267, 268, 472, 695, 696, 698, 699, 772, 791, 867, 888], "violat": [162, 847, 867], "hack": [162, 242], "evoked_meg": 162, "empty_room": 162, "improp": [162, 888], "overestim": [162, 204], "juha": [162, 210, 245, 595, 867], "simola": [162, 210, 245, 595, 867], "kajola": [162, 210, 245, 434, 574, 595, 867, 870], "3372": [162, 245, 867], "tsp": [162, 205, 245, 356, 563, 867], "853302": [162, 245, 867], "941": [162, 164], "90_compute_covari": [162, 164], "aka": [163, 165, 190], "auto_tutorials_forward": 164, "emphasi": [165, 267, 268, 790, 871], "topic": [165, 166, 189, 199, 202, 204, 245, 298, 862, 871, 872], "knowledg": [165, 242, 863, 869], "unexplain": 165, "experienc": [165, 565, 869], "troubl": [165, 888], "configur": [165, 168, 173, 174, 190, 207, 216, 232, 265, 266, 359, 388, 461, 462, 472, 481, 482, 506, 541, 551, 563, 575, 576, 651, 707, 751, 756, 786, 803, 809, 822, 823, 824, 845, 852, 864, 866, 867, 870, 873, 876, 878, 888], "eyetrack": [165, 193, 194, 213, 259, 265, 266, 267, 268, 313, 375, 481, 482, 500, 560, 708, 710, 711, 712, 870, 877, 878, 888], "infrar": [165, 190, 214, 215, 245, 265, 266, 267, 268, 270, 355, 442, 481, 482, 510, 560, 597, 598, 599, 601, 708, 710, 711, 712, 756, 780, 789, 794, 854, 864, 870, 888], "spectroscopi": [165, 190, 214, 215, 245, 265, 266, 267, 268, 270, 355, 442, 481, 482, 510, 560, 597, 598, 599, 601, 708, 710, 711, 712, 756, 780, 789, 794, 854, 864, 870, 888], "tracker": [165, 191, 214, 215, 259, 265, 454, 500, 847, 864, 867], "vssr": [165, 243, 244, 265, 270, 314, 330, 442, 491, 560, 710, 818, 864], "bti": [165, 186, 187, 227, 262, 263, 265, 267, 268, 270, 304, 356, 454, 456, 492, 526, 772, 784, 870, 888], "twowai": [165, 233, 234, 265, 270, 481, 560, 622, 689, 691, 692, 696, 711, 738, 888], "anova": [165, 196, 227, 230, 233, 234, 238, 239, 265, 267, 268, 270, 276, 278, 362, 481, 529, 530, 544, 560, 622, 637, 680, 689, 690, 691, 692, 696, 699, 700, 711, 738, 756, 888], "spatiotempor": [165, 229, 233, 234, 245, 265, 267, 268, 270, 320, 481, 560, 595, 622, 688, 695, 699, 700, 711, 738, 777, 780, 888], "strf": [165, 197, 198, 419, 425, 453], "submodul": [165, 166, 199, 205, 207, 216, 222, 225, 847, 888], "corrupt": [165, 199, 200, 225, 226, 262, 265, 268, 269, 270, 271, 276, 356, 366, 454, 481, 529, 530, 544, 627, 630, 672, 675, 756, 867, 888], "auto_tutorials_python": 165, "auto_tutorials_jupyt": 165, "varieti": [166, 188, 190, 199, 216, 870], "smoothli": [166, 201, 216, 262, 265, 266, 267, 268, 274, 413, 420, 481, 482, 562, 563, 708, 710, 712, 788, 795, 799, 808, 811, 816], "substitut": [166, 374, 845, 869, 870], "glimps": [166, 216], "41700": 166, "custom_ref_appli": [166, 169, 216, 222, 270, 888], "file_id": [166, 169, 216, 265, 266, 267, 268, 270, 481, 482, 483, 873, 888], "hpi_mea": [166, 169, 216, 270, 888], "hpi_result": [166, 169, 216, 270, 888], "meas_dat": [166, 168, 169, 201, 216, 218, 222, 259, 265, 266, 267, 268, 270, 480, 481, 482, 483, 563, 596, 803, 809, 888], "utc": [166, 169, 216, 218, 265, 266, 267, 268, 270, 481, 482, 888], "meas_id": [166, 169, 216, 265, 266, 267, 268, 270, 481, 482, 483, 873, 888], "breviti": 166, "walk": [166, 205, 207], "orig_raw": 166, "chan_idx": 166, "sent": [166, 168, 190, 191, 205, 213, 217, 275], "deliveri": 166, "squarewav": 166, "unambigu": [166, 168], "older": [166, 168, 170, 322, 433, 481, 873, 888], "summat": [166, 168, 202, 700], "6994": 166, "7086": 166, "7192": 166, "7304": 166, "7413": 166, "ordinari": [166, 168, 200, 206, 227, 581, 586, 693, 869], "autoreject": [166, 200, 201, 854], "aren": [166, 208, 457], "fewest": 166, "conds_we_care_about": 166, "aud_epoch": 166, "vis_epoch": 166, "136": [166, 169, 209, 232, 278], "richer": 166, "aud_evok": 166, "vis_evok": 166, "classic": [166, 242, 272, 273, 276, 279, 280, 281, 737, 740, 756, 814, 819], "p200": [166, 191], "dorso": 166, "evoked_diff": [166, 211], "underdetermin": 166, "akin": 166, "inverse_operator_fil": 166, "inv_oper": 166, "\u03bb\u00b2": 166, "61922423e": 166, "06837855e": 166, "49139511e": 166, "10_overview": [166, 174], "obligatorili": 167, "unexpect": [167, 196, 245, 265, 266, 267, 268, 320, 356, 510, 867], "apply_funct": [167, 265, 266, 267, 268, 481, 482, 888], "unprocess": [167, 873], "original_raw": 167, "complex128": [167, 265, 266, 267, 268, 481, 482], "certain": [167, 168, 191, 199, 203, 205, 210, 213, 222, 241, 263, 267, 268, 388, 439, 468, 481, 482, 541, 563, 582, 596, 695, 696, 790, 822, 845, 847, 869, 870, 888], "unaffect": [167, 203, 419], "rereferenced_raw": 167, "ref_data": [167, 652], "fig_orig": 167, "fig_reref": 167, "unless": [167, 265, 266, 267, 268, 271, 272, 273, 275, 276, 279, 280, 281, 283, 356, 357, 359, 361, 413, 416, 420, 423, 426, 429, 430, 432, 437, 456, 458, 469, 471, 476, 478, 479, 481, 482, 491, 521, 524, 525, 536, 537, 541, 546, 547, 562, 563, 568, 575, 576, 595, 656, 659, 660, 661, 673, 695, 696, 697, 698, 699, 708, 710, 711, 712, 713, 714, 715, 716, 717, 718, 726, 727, 735, 736, 737, 738, 739, 746, 780, 786, 787, 788, 791, 795, 803, 809, 810, 811, 847, 869, 870, 888], "15_inplac": [167, 174], "broadli": 168, "ram": [168, 199, 201, 216, 217, 218, 219, 265, 266, 481, 482, 563, 786, 803, 809, 888], "36037": [168, 199, 203, 206, 207, 208, 210, 217, 218, 219], "necessarili": [168, 170, 189, 199, 201, 204, 258, 265, 266, 298, 765, 870], "instantan": [168, 224], "receiv": [168, 190, 434, 498, 669, 845, 870, 888], "rectangular": [168, 202, 227, 272, 273, 276, 279, 280, 281, 814, 819], "ttl": [168, 609], "upcom": 168, "newer": [168, 170, 205, 845, 850, 853, 855, 888], "27977": 168, "28345": 168, "28771": 168, "29219": 168, "29652": 168, "preced": [168, 265, 266, 362, 473, 756, 786, 843, 847, 888], "config": [168, 171, 188, 257, 258, 265, 266, 377, 379, 380, 381, 382, 384, 385, 386, 388, 389, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 454, 455, 461, 462, 472, 481, 482, 492, 553, 563, 634, 644, 647, 651, 756, 765, 786, 803, 809, 847, 888], "mne_stim_channel": [168, 171, 258, 454, 455, 481, 482], "mne_stim_channel_1": [168, 258, 454, 455], "saver": [168, 201, 203, 865, 867], "testing_data_fold": 168, "eeglab_raw_fil": 168, "eeglab_raw": 168, "began": 168, "000068": 168, "217": [168, 169, 218, 221, 227], "unmodifi": [168, 208, 510], "custom_map": 168, "annotations_from_ev": [168, 259, 442, 878, 888], "orig_tim": [168, 201, 218, 259, 284, 888], "annot_from_ev": 168, "event_desc": [168, 284], "rem_annot": 168, "rem_ev": 168, "rem_event_dict": 168, "modulo": 168, "501": [168, 182, 187, 203, 209], "onlin": [168, 200, 205, 219, 258, 859, 872, 888], "20_events_from_raw": [168, 174], "alon": [169, 859], "gantri": [169, 270, 888], "blank": [169, 216, 708, 853, 888], "subject_info": [169, 265, 266, 267, 268, 270, 481, 482, 483, 888], "device_info": [169, 265, 266, 267, 268, 270, 445, 481, 482, 483, 888], "helium_info": [169, 265, 266, 267, 268, 270, 481, 482, 483, 888], "hpi_subsystem": [169, 270], "proc_histori": [169, 265, 266, 267, 268, 270, 481, 482, 483], "proj_id": [169, 216, 265, 266, 267, 268, 270, 481, 482, 483], "proj_nam": [169, 216, 265, 266, 267, 268, 270, 481, 482, 483], "utc_offset": [169, 265, 266, 267, 268, 270, 481, 482, 483, 888], "line_freq": [169, 242, 270], "gantry_angl": [169, 270], "ctf_head_t": [169, 270, 873], "dev_ctf_t": [169, 270, 873], "acq_par": [169, 216, 258, 270], "acq_stim": [169, 270], "xplotter_layout": [169, 270], "kit_system_id": [169, 270], "0143": 169, "0142": 169, "0213": 169, "0212": [169, 337], "0222": 169, "0223": 169, "0232": 169, "0233": 169, "0313": 169, "0312": 169, "0322": 169, "0323": 169, "0333": 169, "0332": 169, "0343": 169, "0342": 169, "0413": 169, "0412": 169, "0422": 169, "0423": 169, "0432": 169, "0433": 169, "0443": 169, "0442": 169, "0513": 169, "0512": 169, "0523": [169, 245, 673], "0522": 169, "0532": 169, "0533": 169, "0542": 169, "0543": 169, "0613": 169, "0612": 169, "0622": 169, "0623": 169, "0633": 169, "0632": 169, "0643": 169, "0713": 169, "0712": 169, "0723": 169, "0722": 169, "0733": 169, "0732": 169, "0743": 169, "0742": 169, "0813": 169, "0822": 169, "0823": 169, "0913": 169, "0912": 169, "0923": 169, "0922": 169, "0932": 169, "0933": 169, "0943": 169, "1023": [169, 195, 196], "1022": 169, "1032": 169, "1033": 169, "1042": [169, 337], "1112": 169, "1113": 169, "1123": [169, 196], "1122": [169, 196, 203], "1132": [169, 209], "1143": 169, "1213": 169, "1212": 169, "1223": 169, "1222": 169, "1232": 169, "1233": 169, "1243": 169, "1242": [169, 196], "1312": 169, "1313": 169, "1322": 169, "1343": 169, "1412": 169, "1413": 169, "1423": 169, "1433": 169, "1432": 169, "1442": 169, "1443": 169, "1512": [169, 245, 476], "1513": 169, "1523": [169, 245, 724, 734, 735, 737, 738, 740], "1533": 169, "1532": 169, "1543": 169, "1542": 169, "1612": 169, "1622": 169, "1623": 169, "1633": 169, "1642": 169, "1713": 169, "1712": 169, "1722": 169, "1723": 169, "1732": 169, "1733": 169, "1743": 169, "1742": 169, "1813": 169, "1812": 169, "1823": 169, "1833": 169, "1843": 169, "1912": 169, "1913": 169, "1923": 169, "1922": 169, "1932": 169, "1933": 169, "1943": 169, "1942": 169, "2023": [169, 171], "2022": [169, 180, 195, 212, 213, 245, 246, 577, 864], "2032": 169, "2033": [169, 195], "2042": 169, "2112": 169, "2122": 169, "2133": 169, "2132": 169, "2143": [169, 245, 737, 740], "2142": 169, "2212": 169, "2213": 169, "2223": 169, "2222": 169, "2233": 169, "2242": [169, 216], "2243": 169, "2312": 169, "2313": [169, 210], "2323": 169, "2322": 169, "2333": [169, 557], "2343": [169, 195], "2342": 169, "2412": 169, "2413": 169, "2422": 169, "2432": 169, "2442": 169, "2512": 169, "2513": 169, "2523": 169, "2533": 169, "2532": 169, "2543": 169, "2542": 169, "2612": 169, "2613": 169, "2623": 169, "2633": 169, "bear": [169, 847, 867, 888], "scanno": [169, 270, 873], "logno": [169, 270, 873], "cal": [169, 270, 322, 480, 873], "coil_typ": [169, 270, 864], "unit_mul": [169, 270, 873], "141": [169, 196, 231, 278], "185": [169, 187, 201, 227, 232, 278], "194": [169, 227, 232, 245, 870, 888], "197": [169, 227, 232, 864], "208": [169, 171, 188, 227, 245], "212": [169, 202, 209, 221, 227, 231, 232, 245], "218": [169, 202, 209, 231, 232, 245], "286": [169, 232], "287": [169, 198, 209, 232], "309": [169, 232, 245, 599, 737, 740], "311": [169, 196, 209, 227, 232], "315": [169, 227, 232, 888], "336": [169, 171, 195, 232, 888], "337": [169, 195, 209, 227, 232], "338": [169, 195, 209, 232], "341": [169, 195, 232, 528], "349": [169, 195, 209, 232, 245, 870], "oxyhemoglobin": [169, 265, 266, 267, 268, 481, 482, 560, 708, 710, 711, 712, 843, 870], "deoxyhemoglobin": [169, 190, 265, 266, 267, 268, 481, 482, 560, 708, 710, 711, 712, 843, 870], "hbo": [169, 190, 211, 216, 222, 265, 266, 267, 268, 313, 373, 375, 481, 482, 560, 708, 710, 711, 712, 843, 870], "hbr": [169, 190, 211, 216, 222, 265, 266, 267, 268, 313, 373, 375, 481, 482, 560, 708, 710, 711, 712, 843, 870], "express": [169, 200, 430, 442, 489, 496, 504, 538, 557, 584, 613, 630, 722, 869, 870, 873, 888], "pick_channels_regexp": [169, 200, 205, 207, 212, 554, 878], "unawar": 169, "accident": [169, 218, 673, 888], "channel_typ": [169, 205, 265, 266, 267, 268, 270, 481, 482, 563, 708, 710, 711, 712, 878], "emb": 169, "comprehens": [169, 196, 216, 227, 229, 413, 847, 869], "channel_indices_by_typ": [169, 878], "ch_idx_by_typ": 169, "exci": [169, 216, 265, 266, 267, 268, 313, 481, 482, 560, 708, 710, 711, 712, 870], "ia": [169, 216, 265, 266, 267, 268, 270, 313, 481, 482, 560, 708, 710, 711, 712, 870, 888], "syst": [169, 216, 265, 266, 267, 268, 313, 481, 482, 560, 708, 710, 711, 712, 870], "bio": [169, 222, 265, 266, 267, 268, 313, 375, 446, 481, 482, 496, 560, 708, 710, 711, 712, 870], "temperatur": [169, 265, 266, 267, 268, 313, 481, 482, 560, 708, 710, 711, 712, 843, 864, 870, 888], "gsr": [169, 265, 266, 267, 268, 313, 481, 482, 560, 708, 710, 711, 712, 870, 888], "fnirs_cw_amplitud": [169, 190, 211, 265, 266, 267, 268, 373, 481, 482, 843], "fnirs_fd_ac_amplitud": [169, 190, 265, 266, 267, 268, 373, 481, 482, 843], "fnirs_fd_phas": [169, 190, 265, 266, 267, 268, 373, 481, 482, 843], "fnirs_od": [169, 265, 266, 267, 268, 373, 481, 482, 843], "eyegaz": [169, 192, 213, 265, 266, 267, 268, 481, 482, 560, 583, 708, 710, 711, 712], "pupil": [169, 265, 266, 267, 268, 481, 482, 560, 583, 708, 710, 711, 712, 864], "eeg_indic": 169, "ipython": [169, 265, 266, 481, 482, 563, 786, 803, 809, 845, 858, 867, 869, 871], "30_info": [169, 174], "mplot3d": [170, 206, 227], "axes3d": [170, 206, 227, 263, 265, 266, 267, 268, 314, 481, 482, 784, 806, 812, 888], "plai": [170, 205, 224, 242, 736, 739, 869, 870], "eeg_posit": 170, "builtin_montag": 170, "montage_nam": 170, "montage_descript": 170, "standard_alphabet": 170, "a1": [170, 208], "b2": 170, "standard_postfix": 170, "postfix": 170, "intermedi": [170, 200, 271, 290, 292, 694, 756, 870, 888], "standard_prefix": 170, "standard_prim": 170, "biosemi16": [170, 227], "biosemi": [170, 227, 340, 489, 870], "cap": [170, 196, 227, 843, 864, 888], "biosemi32": [170, 227], "biosemi64": [170, 227], "biosemi160": 170, "biosemi256": 170, "m10": [170, 888], "egi_256": 170, "geodes": [170, 471, 515, 678, 679, 680, 682, 683, 888], "gsn": [170, 445], "hydrocel": [170, 445], "64_1": 170, "65_1": 170, "mgh60": [170, 888], "mgh70": [170, 888], "brainvis": [170, 332, 333, 442, 446, 481, 482, 491, 613, 864, 870, 888], "artini": [170, 190, 330, 888], "octamon": [170, 190, 888], "detector": [170, 190, 211, 216, 505, 600, 601, 756, 772, 870, 888], "brite23": [170, 888], "brainproduct": 170, "rnp": 170, "ba": [170, 448, 870, 888], "easycap_montag": 170, "digmontag": [170, 182, 265, 266, 267, 268, 270, 317, 318, 327, 330, 332, 333, 334, 335, 336, 337, 338, 339, 367, 465, 481, 482, 493, 590, 592, 806, 826, 843, 878, 888], "headshap": [170, 257, 307, 314, 327, 339, 506, 888], "gca": 170, "view_init": [170, 206, 227], "azim": [170, 206], "ssvep_raw": 170, "read_raw_brainvis": [170, 189, 242, 487, 870, 878, 888], "circumfer": 170, "t4": 170, "t3": [170, 322, 481, 888], "075": 170, "sample_data_raw_path": 170, "sample_raw": 170, "ax2d": 170, "add_subplot": [170, 227], "ax3d": 170, "irregular": [170, 867, 888], "fastrak": 170, "predefin": [170, 843], "layout_dir": 170, "iterdir": 170, "IN": 170, "ctf151": [170, 227, 340], "lai": [170, 340, 511, 870, 888], "ctf275": [170, 227, 340], "eeg1005": [170, 340], "egi256": [170, 340], "geodesicheadweb": [170, 340], "AS": [170, 340], "umd": [170, 227, 340], "neuromag_122": [170, 340], "grad_norm": [170, 340], "magneswh3600": [170, 340, 492], "biosemi_layout": 170, "make_eeg_layout": [170, 323, 329, 878], "layout_from_raw": 170, "make_meg_layout": 170, "snugli": 170, "892": [170, 174, 206, 215, 232], "40_sensor_loc": [170, 174], "suit": [171, 859], "get_config": [171, 388, 651, 878, 888], "unnam": 171, "mne_use_cuda": [171, 377, 845], "json": [171, 462], "unset": [171, 265, 266, 267, 268, 271, 272, 273, 275, 276, 279, 280, 281, 283, 356, 357, 359, 361, 416, 423, 426, 429, 430, 456, 469, 471, 481, 482, 521, 524, 525, 536, 537, 546, 547, 568, 575, 576, 656, 659, 660, 661, 673, 695, 696, 697, 698, 699, 710, 712, 713, 714, 715, 716, 717, 718, 726, 727, 735, 736, 737, 738, 739, 788, 791, 810, 845, 888], "typeerror": [171, 176, 780, 888], "err": [171, 204, 346], "nonetyp": 171, "unsur": [171, 203, 847], "fallback": [171, 265, 266, 481, 482, 786, 809, 869, 888], "missing_config_kei": 171, "mne_browse_raw_s": 171, "979166666666666": 171, "mne_datasets_brainstorm_path": 171, "mne_datasets_eegbci_path": [171, 382, 388], "mne_datasets_epilepsy_ecog_path": [171, 384], "mne_datasets_erp_core_path": [171, 385], "mne_datasets_eyelink_path": [171, 386], "mne_datasets_fieldtrip_cmc_path": 171, "mne_datasets_fnirs_motor_path": [171, 393], "mne_datasets_hf_sef_path": [171, 395], "mne_datasets_kiloword_path": [171, 396], "mne_datasets_limo_path": [171, 397], "mne_datasets_misc_path": [171, 398], "mne_datasets_mtrf_path": [171, 399], "mne_datasets_multimodal_path": [171, 400], "mne_datasets_opm_path": 171, "mne_datasets_phantom_4dbti_path": [171, 402], "mne_datasets_refmeg_noise_path": [171, 403], "mne_datasets_sample_path": [171, 388, 404], "mne_datasets_somato_path": [171, 407], "mne_datasets_spm_face_path": 171, "mne_datasets_ssvep_path": [171, 409], "mne_datasets_testing_path": 171, "mne_datasets_ucl_opm_auditory_path": [171, 410], "mne_logging_level": [171, 654], "mne_browser_them": [171, 265, 266, 481, 482, 563, 786, 803, 809, 888], "mne_browser_overview_mod": [171, 265, 266, 481, 482, 563, 786, 803, 809], "hidden": [171, 172, 265, 266, 481, 482, 563, 756, 786, 803, 809, 888], "mne_browser_precomput": [171, 265, 266, 481, 482, 563, 786, 803, 809], "mne_3d_option_multi_sampl": [171, 845, 888], "mne_browser_backend": [171, 265, 266, 481, 482, 563, 786, 803, 809, 888], "mne_3d_option_them": [171, 756, 888], "mne_3d_option_antialia": [171, 822, 845, 888], "antialias": [171, 845, 888], "mne_3d_option_depth_peel": [171, 822], "peel": 171, "mne_3d_option_smooth_shad": [171, 765, 822], "theme": [171, 265, 266, 481, 482, 563, 756, 786, 803, 809, 888], "browser": [171, 172, 191, 216, 257, 265, 266, 275, 481, 482, 551, 563, 764, 768, 786, 803, 809, 825, 828, 847, 888], "plot_raw": [171, 265, 266, 267, 268, 481, 482, 812, 825, 878, 888], "mne_browser_use_opengl": [171, 265, 266, 481, 482, 563, 786, 803, 809, 888], "opengl": [171, 257, 265, 266, 472, 481, 482, 563, 786, 803, 809, 845, 853, 859], "mne_cache_dir": 171, "cach": [171, 845, 855], "mne_coreg_advanced_rend": 171, "mne_coreg_copy_annot": 171, "mne_coreg_fullscreen": [171, 472], "mne_coreg_guess_mri_subject": 171, "mne_coreg_head_high_r": [171, 472], "mne_coreg_head_opac": [171, 472], "mne_coreg_head_insid": 171, "opaqu": [171, 172, 275, 472, 888], "occlud": [171, 472], "mne_coreg_interact": 171, "trackbal": [171, 257, 267, 268, 472, 756, 772, 791], "terrain": [171, 257, 267, 268, 472, 756, 772, 791, 888], "mne_coreg_mark_insid": 171, "mne_coreg_prepare_bem": 171, "mne_coreg_orient_to_surfac": 171, "mne_coreg_scale_label": 171, "mne_coreg_scale_by_dist": 171, "mne_coreg_scene_scal": 171, "mne_coreg_window_height": 171, "mne_coreg_window_width": [171, 472], "mne_coreg_subjects_dir": 171, "mne_cuda_devic": [171, 888], "cuda": [171, 265, 266, 267, 268, 415, 419, 424, 425, 451, 452, 453, 481, 482, 851, 857, 867, 878, 888], "gpu": [171, 867, 888], "mne_datasets_megsim_path": 171, "megsim": [171, 888], "mne_datasets_spm_face_datasets_test": 171, "mne_datasets_visual_92_categories_path": [171, 411], "phantom_4dbti": [171, 185, 864, 878, 888], "mne_force_seri": 171, "serial": [171, 270], "decor": [171, 752, 754], "stabl": [171, 180, 202, 204, 245, 260, 298, 299, 343, 452, 480, 481, 482, 551, 563, 573, 765, 847, 853, 867], "auto_tutori": 171, "intro": [171, 172, 242], "50_configure_mn": [171, 174], "mne_memmap_min_s": 171, "1m": [171, 655], "5g": 171, "mne_repr_html": [171, 888], "mne_skip_network_test": 171, "requires_good_network": 171, "mne_skip_testing_dataset_test": 171, "requires_spm_data": 171, "requires_bstraw_data": 171, "mne_tqdm": [171, 888], "tqdm": [171, 888], "presenc": [171, 200, 211, 224, 242, 245, 270, 394, 437, 847, 863, 888], "absenc": [171, 437], "mne_use_numba": 171, "numba": [171, 846, 888], "compil": [171, 596], "misspel": 171, "mnee_use_cuudaa": 171, "runtimewarn": [171, 753], "unrecogn": [171, 265, 266, 267, 268, 270, 481, 482, 888], "concern": [171, 204, 227, 501, 584, 620, 624], "userprofil": [171, 462], "linux": [171, 846, 847, 848, 850, 852, 853, 855, 888], "maco": [171, 847, 848, 850, 851, 852, 888], "get_config_path": [171, 878, 888], "home_dir": [171, 461, 462, 651], "use_env": [171, 461], "set_env": [171, 651, 888], "python_env": [171, 205], "minimal_cmd": 171, "usr": [171, 853, 858], "sbin": 171, "statement": [171, 172, 227, 653, 853], "fresh": 171, "me": [171, 703], "worrisom": 171, "set_log_level": [171, 653, 754, 878], "temporarili": [171, 206, 207, 265, 266, 267, 268, 378, 415, 451, 481, 482, 563, 786, 803, 809], "kit_data_path": 171, "abspath": 171, "use_log_level": [171, 240, 878], "meg160": 171, "v2r004": 171, "160ch": 171, "jan24": 171, "eq1160c": 171, "dewar": 171, "fll": 171, "board": 171, "adc": [171, 189], "alloc": [171, 695, 696, 698, 699], "shorthand": 171, "whatev": [171, 208, 481, 482, 711, 847], "recent": [171, 202, 413, 846, 847, 863, 888], "hasn": [171, 575, 888], "sys_info": [171, 275, 845, 846, 867, 878, 888], "stdout": [171, 653, 707, 888], "platform": [171, 265, 266, 267, 268, 481, 482, 710, 712, 809, 846, 850, 855, 859, 876], "1030": [171, 195], "aw": [171, 256], "x86_64": [171, 846, 853], "glibc2": [171, 846], "mar": 171, "gcc": [171, 846], "cpu": [171, 265, 266, 267, 268, 271, 272, 273, 275, 276, 279, 280, 281, 283, 356, 357, 359, 361, 416, 423, 425, 426, 429, 430, 456, 469, 471, 481, 482, 521, 524, 525, 536, 537, 546, 547, 563, 568, 575, 576, 595, 656, 659, 660, 661, 673, 695, 696, 697, 698, 699, 710, 712, 713, 714, 715, 716, 717, 718, 726, 727, 735, 736, 737, 738, 739, 786, 788, 791, 803, 809, 810, 845, 846], "gb": [171, 845, 846, 853], "dev148": 171, "g425e3b344": 171, "openbla": [171, 846, 867], "thread": [171, 237, 265, 266, 481, 482, 563, 786, 803, 809, 870], "agg": 171, "pooch": [171, 388, 888], "jinja2": [171, 888], "dipi": [171, 277, 592, 744, 745, 746, 846, 888], "openmeeg": [171, 520, 525, 888], "unavail": [171, 888], "cupi": [171, 265, 266, 267, 268, 415, 419, 424, 451, 452, 453, 481, 482, 845, 846, 888], "mesa": [171, 472, 822, 888], "llvmpipe": [171, 845], "llvm": [171, 845], "pyvistaqt": [171, 272, 276, 280, 766, 814, 821, 827, 845, 846, 888], "ipyvtklink": [171, 876], "vtk": [171, 412, 756, 771, 845, 846, 888], "qtpy": [171, 846], "pyqt6": 171, "ipympl": 171, "pyqtgraph": [171, 265, 266, 481, 482, 563, 786, 803, 809, 888], "ecosystem": [171, 848, 851, 854], "dev0": [171, 846], "0dev0": 171, "icalabel": [171, 888], "shell": [172, 183, 210, 245, 257, 519, 526, 846, 847, 852, 853, 854, 867, 870], "deploi": [172, 867], "tempfil": 172, "ndimag": 172, "raw_tsss": [172, 257, 481, 482, 502], "_eeg": [172, 257, 481, 482, 888], "_ieeg": [172, 257, 481, 482, 888], "underscor": [172, 201, 205, 216, 563], "parse_fold": [172, 275, 888], "add_raw": [172, 275, 888], "slider": [172, 267, 268, 275, 795, 845, 888], "scrub": 172, "report_raw": 172, "jqueri": 172, "bundl": [172, 850, 852, 888], "tableexport": 172, "highlightj": 172, "atom": 172, "meaning": [172, 217, 274, 649, 847], "events_path": 172, "report_ev": 172, "add_epoch": [172, 275, 888], "fly": [172, 229, 265, 266, 481, 482, 741, 754, 786, 809, 888], "make_metadata": [172, 878, 888], "report_epoch": 172, "add_evok": [172, 275], "n_time_point": [172, 275], "evoked_path": 172, "cov_path": 172, "evokeds_subset": 172, "report_evok": 172, "add_covari": [172, 275], "report_cov": 172, "ecg_proj_path": 172, "eog_proj_path": 172, "sample_audvis_eog": [172, 867], "report_proj": 172, "998": [172, 184, 191, 196, 210, 232, 576, 581, 586, 589], "add_ica": [172, 275, 888], "ecg_evok": [172, 205, 207, 275], "eog_evok": [172, 204, 205, 207, 275], "artifactu": [172, 199, 202, 205, 245, 563], "find_bads_ecg": [172, 205, 275, 563, 888], "ecg_scor": [172, 205, 275], "liber": 172, "eog_compon": 172, "report_ica": 172, "add_bem": [172, 275, 888], "th": [172, 265, 563, 665, 668, 670, 711, 867, 870], "report_mri_and_bem": 172, "add_tran": [172, 275, 888], "trans_path": 172, "report_coregistr": 172, "add_forward": [172, 275, 756, 888], "fwd_path": 172, "report_forward_sol": 172, "add_inverse_oper": [172, 275], "inverse_op_path": 172, "report_inverse_op": 172, "add_stc": [172, 275, 888], "report_inverse_sol": 172, "01632618": 172, "06303297": 172, "63565434": 172, "add_cod": [172, 275], "syntax": [172, 275, 847, 870], "snippet": [172, 235, 275, 867], "liter": [172, 275, 870], "mne_init_py_path": 172, "__init__": [172, 552], "mne_init_py_cont": 172, "read_text": 172, "utf": [172, 497, 613, 619, 888], "report_cod": 172, "add_figur": [172, 275, 888], "caption": [172, 275, 888], "num": [172, 241], "sky": 172, "image_format": [172, 257, 275, 888], "report_custom_figur": 172, "fig_1": 172, "ax_1": 172, "ax_2": 172, "report_custom_figure_sect": 172, "intuit": [172, 196, 242, 414, 429, 666, 667], "logo": [172, 888], "mne_logo_path": 172, "mne_icon": 172, "fig_arrai": 172, "rotation_angl": 172, "fig_array_rot": 172, "mneqtbrows": [172, 265, 266, 481, 482, 563, 786, 803, 809], "fun": [172, 265, 266, 267, 268, 481, 482], "768": [172, 183, 232], "9176882624364033": 172, "photo": 172, "sketch": 172, "add_imag": [172, 275, 888], "jpeg": [172, 275], "gif": [172, 275, 756, 888], "svg": [172, 257, 275, 888], "report_custom_imag": 172, "add_": 172, "dropdown": [172, 888], "menu": [172, 218, 850, 853, 871], "hide": [172, 218, 240, 888], "checkbox": [172, 888], "report_tag": 172, "hdf5": [172, 272, 273, 275, 279, 281, 289, 302, 552, 562, 605, 635, 708, 709, 710, 711, 712, 728, 729, 730, 741, 830, 831, 851, 867, 888], "report_parti": 172, "amend": [172, 334], "report_from_disk": 172, "open_report": [172, 275, 878, 888], "report_fin": 172, "invok": [172, 257, 769, 853, 888], "barebon": [172, 257], "render_bem": [172, 275, 888], "raw_butterfli": [172, 275], "report_parse_folder_bas": 172, "raw_psd": [172, 275, 888], "refin": [172, 277, 322, 362], "report_parse_folder_raw_psd_proj": 172, "mri_decim": [172, 257, 275], "report_parse_folder_mri_bem": 172, "temporarydirectori": 172, "n_time_points_evok": [172, 275], "report_parse_folder_evok": 172, "tmp": 172, "tmpjdpgqyhf": 172, "info_fnam": [172, 275], "report_parse_folder_cov": 172, "add_html": [172, 275, 888], "remind": [172, 563, 847], "my_html": 172, "ol": [172, 693, 876, 888], "manifest": [172, 203, 204, 205, 207, 843], "n1": 172, "report_add_html": 172, "70_report": [172, 174], "auto_tutorials_intro": 174, "volsourceestim": [175, 180, 181, 272, 273, 276, 277, 279, 281, 290, 292, 293, 294, 295, 296, 297, 517, 524, 530, 531, 532, 533, 534, 536, 546, 635, 648, 843, 878, 888], "mixedsourceestim": [175, 273, 276, 279, 280, 281, 635, 843, 878, 888], "realli": 175, "carri": [175, 199, 205, 242, 489, 689], "belong": [175, 270, 271, 275, 629, 685, 755, 756, 873], "shape_lh": 175, "is_equ": 175, "suspect": 175, "nth": [175, 205, 260, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 580, 581, 708, 711], "peak_vertex": 175, "vert_as_index": [175, 180, 272, 273, 276, 279, 280, 281], "peak_vertex_surf": 175, "peak_valu": 175, "logic": [175, 222, 229, 232, 265, 266, 267, 268, 270, 472, 481, 482, 483, 563, 584, 873, 888], "lh_coordin": 175, "rh_coordin": 175, "10_stc_class": [175, 187], "load_mni152_templ": 176, "fname_av": 176, "fname_surf_lh": 176, "n100m": 176, "evoked_ful": 176, "posixpath": [176, 181], "6179": 176, "6941": 176, "5491": 176, "2193": 176, "0405": 176, "4769": 176, "mni_po": 176, "to_mni": [176, 263, 888], "mri_po": 176, "to_mri": [176, 263, 888], "best_dip_idx": 176, "to_volume_label": [176, 263, 888], "fig_t1": 176, "cut_coord": 176, "fig_templ": 176, "pred_evok": 176, "inf": [176, 191, 199, 223, 265, 266, 267, 268, 283, 418, 478, 479, 481, 482, 513, 576, 708, 710, 712, 713, 715, 716, 718, 726, 727, 764, 810, 816, 888], "best_idx": 176, "best_tim": 176, "conf": [176, 263, 847], "plot_param": 176, "0f": [176, 267, 268, 791], "20_dipole_fit": [176, 187], "userwarn": 176, "dip_fix": 176, "7506": 176, "6606": 176, "electromagnet": [176, 178, 199, 207, 210, 224, 245, 298, 299, 434, 530, 574, 595, 843, 870], "biomagnet": [176, 245], "200m": 177, "500m": 177, "fig_cov": [177, 262, 781], "fig_spectra": 177, "1468": 177, "1574": [177, 195], "write_inverse_oper": [177, 544, 878, 888], "67933": 177, "16538e": 177, "set_color": [177, 183], "98df81": [177, 183], "vertno_max": 177, "time_max": [177, 178], "765": [177, 187], "30_mne_dspm_loreta": [177, 187], "left_auditori": 178, "dip_po": 178, "dip_ori": 178, "dip_len": 178, "dip_tim": 178, "rgb": [178, 272, 273, 276, 279, 280, 281, 466, 471, 756, 772, 775, 814, 819, 820], "actual_amp": [178, 183, 185], "actual_gof": [178, 183, 185], "outward": [178, 263, 273, 279, 281, 367, 784, 867], "moment": [178, 180, 222, 270, 273, 279, 281, 320, 344, 346, 347, 348, 434, 573, 574, 584, 595, 819], "06165525": 178, "70033915": 178, "34794621": 178, "inward": [178, 867], "curvatur": [178, 272, 273, 276, 279, 280, 281, 706, 756, 814, 819, 873, 888], "collaps": [178, 275, 435], "brain_mag": 178, "overlay_alpha": [178, 273, 279, 281, 819], "2188": 178, "44205e": 178, "79973942": 178, "38378769": 178, "8347911": 178, "somewhat": [178, 199], "strai": 178, "unrestrict": 178, "brain_loos": 178, "03844879": 178, "68532258": 178, "12541436": 178, "knuutila": [178, 245], "olli": [178, 245], "lounasmaa": [178, 245], "noninvas": [178, 245], "modern": [178, 188, 245, 389, 845, 870, 872, 888], "revmodphi": [178, 245], "fa": [178, 245, 541, 665, 670], "hsuan": [178, 245, 541, 665, 670], "lin": [178, 195, 245, 419, 541, 665, 670], "belliveau": [178, 245, 530, 541, 665, 670], "20155": [178, 245], "995": [178, 187, 222], "494": [178, 187, 227, 230, 232, 234], "35_dipole_orient": [178, 187], "variant": [179, 189, 466, 574, 845, 888], "1498464098687909": [179, 181], "037797": 179, "65922": 179, "72259e": 179, "28047949e": 179, "72734062e": 179, "97200565e": 179, "56295849": 179, "27742998": 179, "00597185": 179, "65359441": 179, "22223216": 179, "63030546": 179, "eigen": [179, 271, 685], "34003429e": 179, "79067976e": 179, "93243713e": 179, "61893": 179, "8713e": 179, "81398590e": 179, "00293217e": 179, "59049573e": 179, "79225614": 179, "45181115": 179, "88420759": 179, "65906465": 179, "11446799": 179, "4224023": 179, "41240750e": 179, "15338772e": 179, "80101709e": 179, "40_mne_fixed_fre": [179, 187], "britta": [180, 245, 875, 888], "westner": [180, 245, 875, 888], "wstnr": 180, "apply_lcmv": [180, 290, 292, 295, 296, 297, 878, 888], "linearli": [180, 206, 210, 245, 294, 295, 296, 297, 298, 299, 843, 867], "ingredi": 180, "valuabl": [180, 870], "gaug": 180, "incorpor": [180, 227, 232, 322, 437, 446, 481, 482, 568, 847, 870, 876, 888], "rule": [180, 199, 203, 245, 563, 870], "thumb": [180, 199, 203, 563, 864], "advic": [180, 847], "defici": [180, 371, 563, 870, 888], "misrepres": 180, "inher": [180, 189, 232, 430], "somehow": [180, 182, 205], "nai": [180, 298, 299, 888], "switch": [180, 183, 184, 202, 209, 224, 245, 257, 271, 276, 351, 481, 482, 845, 847, 853, 873, 888], "invari": [180, 298, 299], "filters_vec": 180, "apply_lcmv_raw": [180, 294, 295, 296, 878, 888], "apply_lcmv_epoch": [180, 272, 273, 276, 279, 280, 281, 294, 295, 297, 878, 888], "087": 180, "stat_map": [180, 280, 281, 820], "5184": 180, "glass_brain": [180, 181, 280, 281, 820, 888], "022485": [180, 181], "008449": [180, 181], "036217": [180, 181], "071071": [180, 181], "914866": [180, 181], "406098": [180, 181], "008756": [180, 181], "433700": [180, 181], "028119": [180, 181], "plotter": [180, 265, 266, 563, 756, 758, 786, 803, 865, 888], "peak_vox": 180, "ori_label": 180, "sourcemorph": [180, 280, 281, 362, 636, 820, 851, 878, 888], "fname_fs_src": 180, "stc_f": [180, 181], "17352": 180, "barri": [180, 202, 204, 205, 245, 298, 299, 562, 578], "veen": [180, 245, 298, 299], "wim": [180, 245, 298, 299], "drongelen": [180, 245, 298, 299], "mosh": [180, 245, 298, 299], "yuchtman": [180, 245, 298, 299], "akifumi": [180, 245, 298, 299], "suzuki": [180, 245, 298, 299], "867": [180, 245, 298, 299], "623056": [180, 245, 298, 299], "brook": [180, 245, 862, 888], "jiri": [180, 245], "vrba": [180, 245], "clair": [180, 245, 888], "stevenson": [180, 245], "gareth": [180, 212, 245, 577, 864], "barn": [180, 212, 245, 577, 864], "arjan": [180, 245], "hillebrand": [180, 245], "morri": [180, 245], "optimis": [180, 245], "1788": [180, 245], "sarang": [180, 245, 876], "dalal": [180, 245, 876], "vladimir": [180, 227, 245, 701, 702], "litvak": [180, 227, 245, 701, 702], "oostenveld": [180, 232, 245, 695, 696, 698, 699, 888], "mathij": [180, 245], "schoffelen": [180, 245], "118789": [180, 245], "909": [180, 187, 232], "50_beamformer_lcmv": [180, 187], "flatmap": [181, 272, 276, 280, 756, 814, 888], "mpl_fig": 181, "94880328959697": 181, "84640986879091": 181, "649601096532322": 181, "5653": 181, "67635542": 181, "11717401": 181, "19136023": 181, "atlas": [181, 657, 888], "get_volume_labels_from_aseg": [181, 878, 888], "label_tc": [181, 272, 273, 276, 279, 280, 281, 447], "lidx": 181, "xytext": 181, "arrowprop": [181, 195], "arrowstyl": [181, 195], "set_vis": 181, "grain": [181, 888], "loci": 181, "stc_back": 181, "labels_to_stc": [181, 878, 888], "6210": 181, "69834054": 181, "98871778": 181, "62206532": 181, "70708526": 181, "36619556": 181, "64056812": 181, "6864": 181, "678": [181, 196, 232], "60_visualize_stc": [181, 187], "read_custom_montag": [182, 190, 265, 266, 267, 268, 270, 330, 481, 482, 878, 888], "reconstrct": 182, "elc": [182, 332, 888], "synthes": [182, 188, 305, 309, 506, 585, 888], "fname_t1_electrod": 182, "sample_eeg_mri": 182, "t1_electrod": 182, "fname_mon": 182, "sample_mri_montag": 182, "ras_mni_t": [182, 748], "read_ras_mni_t": [182, 878], "mni_affin": 182, "img_mni": 182, "hot_black_bon": 182, "black_bg": 182, "resampling_interpol": 182, "pos_vox": 182, "fname_t1": 182, "vox2mri_t": 182, "pos_mri": [182, 263], "tkmedit": [182, 853, 870], "dig_montag": 182, "head_siz": [182, 330, 332], "99930957": 182, "00998471": 182, "03578661": 182, "00316747": 182, "01275917": 182, "81240435": 182, "58295487": 182, "00685511": 182, "03489383": 182, "58300899": 182, "81171605": 182, "02888406": 182, "812404": 182, "582955": 182, "583009": 182, "3252": 182, "3250": 182, "1693": 182, "3223": 182, "4097": [182, 202], "1651": [182, 209], "8193": 182, "040598": 182, "157084": 182, "86184": 182, "24877e": 182, "17591891": 182, "939572": 182, "86348066": 182, "70_eeg_mri_coord": [182, 187], "fetch_phantom": [183, 433, 878, 888], "planor": 183, "meg1933": 183, "meg2421": 183, "1792": 183, "3840": 183, "7936": 183, "bmax": [183, 257], "ring": [183, 202, 448, 450, 888], "otaniemi": [183, 392, 433, 864, 888], "phantom_otaniemi": 183, "00364477": [183, 184, 185], "944121": [183, 184, 185], "138646": [183, 184, 185], "665982": [183, 184, 185], "684475": [183, 184, 185], "140083": [183, 184, 185], "0127517": [183, 184, 185], "plot_evoked_whit": [183, 267, 268, 790, 878, 888], "t_peak": 183, "32640": 183, "32639": 183, "55367811e": 183, "90213143e": 183, "55347147e": 183, "28605719e": 183, "96728167e": 183, "86739464e": 183, "38610872e": 183, "82304534e": 183, "48308374e": 183, "31818228e": 183, "16854987e": 183, "00130181e": 183, "01608756e": 183, "05724640e": 183, "66791928e": 183, "36603176e": 183, "50599819e": 183, "82644670e": 183, "99846050e": 183, "93593540e": 183, "60183041e": 183, "976295": 183, "211976": 183, "043756": 183, "206488": 183, "972764": 183, "105326": 183, "064891": 183, "093794": 183, "993475": 183, "729": [183, 184, 185, 196, 232], "actual_ori": 183, "rad2deg": 183, "arcco": 183, "dip_tru": [183, 185], "80_brainstorm_phantom_elekta": [183, 187], "phantomctf": 184, "bst_phantom_ctf": 184, "phantom_200ua_20150709_01": 184, "dip_freq": 184, "phantom_20ua_20150603_03": 184, "erm_path": 184, "emptyroom_20150709_01": 184, "24000": 184, "23999": 184, "hdac006": 184, "zeros_lik": [184, 195], "ones_lik": [184, 229, 230], "tsss": [184, 267, 270, 481, 502, 595, 603, 625, 888], "apply_gradient_compens": [184, 188, 481, 482, 870, 888], "un": [184, 203, 206, 210, 219, 481, 482, 539, 540, 809, 870], "mf_kwarg": 184, "st_durat": [184, 210, 584, 595], "021666666666666667": 184, "catch_warn": 184, "simplefilt": 184, "60000": 184, "99596855e": 184, "57828787e": 184, "09548814e": 184, "44821628e": 184, "22550465e": 184, "07831245e": 184, "16519699e": 184, "85599860e": 184, "24819011e": 184, "19149506e": 184, "49201625e": 184, "90435099e": 184, "37114004e": 184, "52368814e": 184, "95491435e": 184, "09260032e": 184, "84849095e": 184, "02461913e": 184, "40860739e": 184, "15627312e": 184, "58591259e": 184, "999939": 184, "002039": 184, "010868": 184, "001115": 184, "959234": 184, "282612": 184, "011001": 184, "282607": 184, "959173": 184, "expected_po": 184, "array_str": 184, "85_brainstorm_phantom_ctf": [184, 187], "4dbti": 185, "badier": [185, 245, 668], "marseil": [185, 864], "franc": 185, "rfhp1": 185, "0hz": 185, "a173": 185, "a213": 185, "a232": 185, "4350": 185, "not_and": [185, 258, 454, 622, 888], "hs_file": [185, 188, 492], "13599": 185, "20053968578577042": 185, "6576": 185, "6575": 185, "50691838e": 185, "61763336e": 185, "91409625e": 185, "91576159e": 185, "16898444e": 185, "75585208e": 185, "47442194e": 185, "45272203e": 185, "55529894e": 185, "46448717e": 185, "88484744e": 185, "05130802e": 185, "14443569e": 185, "70955369e": 185, "39503671e": 185, "16681391e": 185, "65491197e": 185, "24338008e": 185, "53281664e": 185, "47448228e": 185, "78257781e": 185, "975564": 185, "033891": 185, "217085": 185, "044586": 185, "998011": 185, "044560": 185, "215143": 185, "053150": 185, "975135": 185, "43530566e": 185, "00499851e": 185, "47056513e": 185, "49717001e": 185, "01651220e": 185, "39837298e": 185, "09320996e": 185, "53068976e": 185, "44272962e": 185, "07218608e": 185, "57916869e": 185, "24522939e": 185, "45459681e": 185, "19250060e": 185, "30544307e": 185, "26518629e": 185, "97497347e": 185, "82472005e": 185, "37787240e": 185, "96791371e": 185, "70423989e": 185, "975554": 185, "034041": 185, "217109": 185, "044503": 185, "998063": 185, "043482": 185, "215208": 185, "052081": 185, "975178": 185, "58999814e": 185, "84421337e": 185, "28166457e": 185, "67818745e": 185, "17428979e": 185, "76211498e": 185, "09542089e": 185, "22401648e": 185, "04141267e": 185, "15865669e": 185, "76599754e": 185, "17446488e": 185, "49708010e": 185, "60822410e": 185, "73060305e": 185, "05814038e": 185, "01071067e": 185, "20173942e": 185, "25861185e": 185, "85502070e": 185, "47521229e": 185, "975577": 185, "033678": 185, "217061": 185, "044611": 185, "997960": 185, "045666": 185, "215080": 185, "054233": 185, "975089": 185, "40101009e": 185, "10513936e": 185, "52303974e": 185, "27457778e": 185, "38233857e": 185, "06793751e": 185, "00477278e": 185, "15792686e": 185, "30206685e": 185, "40306943e": 185, "32057779e": 185, "22353020e": 185, "11884928e": 185, "17314181e": 185, "64256593e": 185, "23243102e": 185, "97110034e": 185, "94566869e": 185, "63267153e": 185, "08360546e": 185, "98210291e": 185, "975557": 185, "033946": 185, "217110": 185, "044391": 185, "998071": 185, "043409": 185, "215218": 185, "051986": 185, "975181": 185, "37436305": 185, "3777228": 185, "21169488": 185, "17616473": 185, "90_phantom_4dbti": [185, 187], "424": [187, 199, 215], "auto_tutorials_invers": 187, "677": [187, 195, 196, 232], "maxshield": [188, 257, 267, 270, 481, 502, 595, 625, 873, 888], "allow_maxshield": [188, 209, 210, 267, 481, 502, 625], "ucl": [188, 212, 245, 356, 888], "read_raw_fil": [188, 212, 487, 870, 878, 888], "mandatori": [188, 298, 299, 322, 481, 563, 870], "rfdc": [188, 257], "realiz": [188, 202], "carefulli": [188, 200, 202, 864], "read_dig_polhemus_isotrak": [188, 314, 327, 330, 333, 334, 335, 336, 337, 338, 341, 870, 878, 888], "technic": [188, 240, 245, 265, 266, 267, 268, 481, 482, 530, 710, 712, 720, 726, 863, 869, 870], "disturb": [188, 863, 870], "mainli": [188, 242, 847, 870], "nicknam": 188, "n_1": 188, "n_2": 188, "n_3": 188, "x_1": [188, 870], "x_2": [188, 870], "x_3": 188, "denot": [188, 196, 218, 273, 279, 281, 593, 665, 668, 670, 689, 691, 709, 843, 870], "x_": [188, 196, 870], "m_": 188, "bmatrix": [188, 870], "c_": [188, 227, 870], "standardize_nam": [188, 506, 621, 888], "nx3": [188, 468], "mrk": [188, 257, 484, 506, 621, 888], "elp": [188, 257, 332, 339, 506, 621, 623, 870, 888], "onward": [188, 658], "miscellan": [188, 216, 265, 266, 267, 268, 481, 482, 560, 708, 710, 711, 712, 870, 873], "eight": [188, 870, 888], "endian": [188, 888], "stimthresh": [188, 257, 506], "sum_": [188, 202, 668, 870], "t_p": 188, "d_p": 188, "bigg": 188, "leq": [188, 227], "read_raw_fieldtrip": [188, 487, 870, 878, 888], "read_epochs_fieldtrip": [188, 870, 878, 888], "read_evoked_fieldtrip": [188, 870, 878, 888], "intent": [188, 865], "original_data": 188, "read_raw_fiff": 188, "original_info": 188, "data_from_ft": 188, "evoked_data": [188, 229], "untest": 188, "cnt": [188, 442, 493, 613, 870, 888], "egi": [188, 332, 335, 498, 870, 888], "calibr": [188, 192, 210, 270, 434, 573, 574, 584, 595, 606, 611, 873, 888], "eximia": [188, 499, 870, 888], "3rd": [188, 199, 272, 273, 276, 279, 280, 281, 694], "parti": 188, "librari": [188, 758, 845, 847, 853, 854, 859, 865, 867, 888], "abund": 188, "electrophysiolog": [188, 202, 245, 843], "10_reading_meg_data": [188, 194], "meta": [189, 222, 265, 266, 267, 268, 481, 482, 483, 876], "ini": 189, "host": [189, 869, 888], "pybv": [189, 446, 481, 482], "mnelab": [189, 854], "pyedflib": 189, "read_raw_bdf": [189, 487, 496, 504, 870, 878, 888], "amplifi": [189, 204, 208, 510, 859, 888], "byte": [189, 265, 266, 481, 482, 513, 764, 873, 888], "read_raw_gdf": [189, 487, 489, 496, 870, 878, 888], "overcom": 189, "releas": [189, 847, 855, 867, 869, 888], "gender": [189, 245, 405], "read_raw_cnt": [189, 487, 870, 878, 888], "danger": [189, 270], "x_coord": 189, "y_coord": 189, "electloc": 189, "encourag": [189, 224, 858, 869, 888], "read_raw_egi": [189, 487, 870, 878, 888], "netstat": [189, 498, 888], "read_raw_nicolet": [189, 487, 870, 878, 888], "nexstim": 189, "read_raw_eximia": [189, 487, 870, 878], "read_raw_persyst": [189, 870, 878, 888], "nk": 189, "read_raw_nihon": [189, 878, 888], "11d": 189, "cmt": 189, "cn2": 189, "histori": [189, 270, 445, 843, 873, 888], "successfulli": [189, 217, 847, 873], "neither": [189, 470, 481, 482, 855], "nor": [189, 208, 470, 481, 482, 855, 869], "20_reading_eeg_data": [189, 194], "emitt": 190, "transmitt": 190, "oxyhaemoglobin": [190, 211], "modif": [190, 192, 237, 332, 375, 854, 888], "Near": 190, "commun": [190, 195, 196, 224, 245, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 419, 481, 482, 708, 711, 737, 740, 847, 851, 866, 876], "effort": [190, 489, 847, 868, 876], "sfnir": 190, "gowerlab": [190, 888], "cortivis": 190, "read_raw_snirf": [190, 878, 888], "provis": 190, "haemoglobin": [190, 597, 888], "optode_fram": [190, 512], "vendor": [190, 870], "icbm": 190, "2009b": 190, "nirstar": [190, 510], "aurora": [190, 510, 888], "nirscout": [190, 510], "nirsport": [190, 510, 888], "read_raw_hitachi": [190, 878, 888], "read_raw_boxi": [190, 487, 870, 878, 888], "iss": [190, 490, 888], "paren": 190, "unmodul": 190, "unpars": 190, "organis": 190, "digaux": 190, "port": [190, 213, 853, 859], "discourag": [190, 265, 266, 267, 268, 481, 482, 710, 712, 788, 867, 888], "standardis": [190, 888], "to_csv": [190, 216], "_d": 190, "wavelength": [190, 199], "s1_d1": [190, 211], "s2_d1": 190, "s3_d1": 190, "s4_d1": 190, "s5_d2": 190, "s6_d2": 190, "s7_d2": 190, "s8_d2": 190, "assist": [190, 251, 845, 853, 870], "ficidu": 190, "30_reading_fnirs_data": [190, 194], "site": [191, 204, 205, 210, 245, 270, 322, 481, 574, 584, 595, 847], "beep": 191, "deviant": [191, 202], "finger": [191, 864], "bug": [191, 258, 454, 472, 707, 756, 847, 866, 868, 869], "consumpt": [191, 267, 268, 430, 790, 888], "use_precomput": 191, "erm_fnam": 191, "s01_noise_20131218_01": 191, "demand": [191, 216, 430, 434, 480, 618, 870, 888], "n_times_run1": 191, "4800": 191, "unus": [191, 270, 278, 584, 888], "heog": [191, 493], "veog": [191, 493, 888], "favorit": [191, 847], "annotations_df": 191, "csv_fname": 191, "events_bad_0": 191, "concat": [191, 413], "saccades_ev": 191, "7625": 191, "142459": 191, "216954": 191, "345135": 191, "357687": 191, "409101": 191, "461110": 191, "479866": 191, "764914": 191, "798174": 191, "846880": 191, "858863": 191, "9256": 191, "14287": 191, "116432": 191, "134489": 191, "464527": 191, "494136": 191, "749288": 191, "788623": 191, "21179": 191, "72993": 191, "134527": 191, "196555": 191, "249894": 191, "343357": 191, "400771": 191, "450256": 191, "593101": 191, "733942": 191, "765939": 191, "789476": 191, "792852": 191, "833208": 191, "859869": 191, "862888": 191, "saccade_epoch": 191, "reject_by_annot": [191, 211, 218, 222, 265, 361, 481, 482, 522, 563, 580, 581, 585, 586, 712, 801, 810, 888], "projs_saccad": 191, "compute_proj_epoch": [191, 206, 207, 358, 359, 878, 888], "n_mag": [191, 207, 257, 357, 358, 359, 575, 576], "desc_prefix": [191, 357, 358], "projs_eog": 191, "compute_proj_eog": [191, 206, 207, 581, 586, 863, 878, 888], "1201": [191, 209, 245, 301], "spectra": [191, 222, 240, 245, 262, 265, 266, 267, 268, 418, 481, 482, 536, 537, 695, 710, 712, 715, 718, 726, 727, 781, 788, 810, 843], "doubl": [191, 202, 205, 242, 265, 266, 267, 268, 415, 424, 446, 448, 449, 451, 452, 480, 481, 482, 503, 595, 847, 853, 870, 873, 888], "filter_length": [191, 202, 203, 207, 257, 265, 266, 267, 268, 415, 424, 449, 451, 452, 481, 482, 575, 576, 585, 586, 888], "sound": [191, 195, 196, 205, 245, 420, 737, 740], "uadc001": 191, "sound_data": 191, "min_diff": 191, "\u03bc": [191, 210, 422], "\u03c3": [191, 210, 422, 526], "mlo52": 191, "mrt51": 191, "mlo42": 191, "mlo43": 191, "epochs_standard": 191, "concatenate_epoch": [191, 878, 888], "epochs_devi": 191, "mlp52": 191, "evoked_std": 191, "evoked_dev": 191, "p50": 191, "paint": [191, 265, 266, 267, 268, 481, 482, 790, 810], "mmn": [191, 876], "emphasis": 191, "evoked_differ": 191, "ico4": [191, 647, 863], "8033": 191, "015871": 191, "10585e": 191, "09843": 191, "11765e": 191, "stc_standard": 191, "80289065": 191, "69025561": 191, "89954825": 191, "stc_deviant": 191, "12814543": 191, "29154718": 191, "6203076": 191, "stc_differ": 191, "96162575": 191, "78319301": 191, "94351171": 191, "481": [191, 194, 209, 232], "60_ctf_bst_auditori": [191, 194], "radian": [192, 213, 367, 567], "set_channel_types_eyetrack": [192, 878], "glossari": [192, 847, 871], "ascii": [192, 257, 497, 613, 619, 641, 870, 888], "edf2asc": 192, "read_raw_eyelink": [192, 213, 870, 878, 888], "european": [192, 256, 870], "occular": [192, 213, 500], "binocular": 192, "ypos_right": 192, "fpath": 192, "px_textpage_w": 192, "create_annot": [192, 213, 500], "custom_sc": 192, "legibl": [192, 213], "bad_rec_gap": [192, 213, 500], "trackabl": 192, "href_textpage_w": 192, "diamet": [192, 870], "ellips": 192, "delimint": 192, "2000hz": 192, "timestamp": [192, 218, 259, 272, 273, 276, 279, 280, 281, 481, 482, 498, 613, 888], "479": [192, 194, 232], "70_reading_eyetracking_data": [192, 194], "auto_tutorials_io": 194, "timedelayingridg": [195, 419, 878, 888], "multivariate_norm": 195, "1337": 195, "path_audio": 195, "spectrogram": [195, 232, 242, 843, 876, 888], "n_decim": 195, "explicit": [195, 264, 360, 371, 372, 847, 873, 888], "delays_samp": 195, "delays_sec": 195, "5000": [195, 229], "meshgrid": [195, 206, 232], "swap": [195, 231, 237, 641, 870, 888], "swapax": [195, 231, 237], "gabor": 195, "means_high": 195, "means_low": 195, "2500": [195, 888], "gauss_high": 195, "gauss_low": 195, "autoscal": 195, "artifici": [195, 245, 498, 563, 864], "convolut": [195, 202, 242, 426, 546, 547, 714, 717, 724, 733, 734, 735, 736, 738, 739, 854, 888], "n_second": 195, "x_del": 195, "ix_delai": 195, "ndim": [195, 242], "elif": 195, "rollaxi": 195, "weights_sim": 195, "iep": 195, "noise_amp": 195, "x_plt": 195, "hstack": [195, 206], "y_plt": 195, "autocorrel": [195, 419, 425], "ix_best_alpha": 195, "best_mod": 195, "best_pr": 195, "iax": 195, "time_pr": 195, "3450": 195, "675": [195, 196, 232], "1358": 195, "1681": 195, "2358": 195, "2701": 195, "3042": 195, "3385": 195, "489": [195, 196, 232, 242], "21174": 195, "21345": 195, "21064": 195, "1348": 195, "21025": 195, "1684": 195, "21009": 195, "21160": 195, "2373": 195, "21171": 195, "2681": 195, "20883": 195, "2906": 195, "19958": 195, "3239": 195, "20059": 195, "20247": 195, "21326": 195, "21420": 195, "21266": 195, "1270": 195, "19691": 195, "1614": 195, "20081": 195, "1957": 195, "20329": 195, "2162": 195, "19079": 195, "2370": 195, "18173": 195, "2564": 195, "17355": 195, "2839": 195, "17332": 195, "3143": 195, "17521": 195, "17950": 195, "19483": 195, "19654": 195, "19593": 195, "1254": [195, 245, 391], "19560": 195, "19653": 195, "1873": 195, "19460": 195, "2182": 195, "19432": 195, "2479": 195, "19301": 195, "2667": 195, "18274": 195, "2950": 195, "18198": 195, "3256": 195, "18305": 195, "18502": 195, "20929": 195, "636": [195, 232], "19841": 195, "19615": 195, "19496": 195, "1561": [195, 209], "19799": 195, "2239": 195, "20004": 195, "2554": 195, "19950": 195, "2862": [195, 245, 863], "19849": 195, "3170": 195, "19763": 195, "19733": 195, "21008": 195, "21126": 195, "21096": 195, "1352": 195, "21097": 195, "21073": 195, "21019": 195, "2353": [195, 205, 245, 563], "20967": 195, "2693": 195, "21001": 195, "3036": 195, "21055": 195, "3380": 195, "21109": 195, "21069": 195, "20913": 195, "21061": 195, "21132": 195, "1362": 195, "21252": 195, "1701": 195, "21227": 195, "2044": 195, "2385": 195, "21268": 195, "2731": 195, "21316": 195, "3059": 195, "21200": 195, "3383": 195, "21077": 195, "21074": 195, "i_alpha": 195, "ddot": 195, "tikhonov": 195, "trf": [195, 231], "insensit": [195, 265, 266, 442, 489, 496, 504, 566, 711, 888], "whilst": [195, 212], "mse": 195, "scores_lap": 195, "models_lap": 195, "reg_typ": [195, 425], "ix_best_alpha_lap": 195, "20535": 195, "682": [195, 196, 209, 228], "21293": 195, "21449": 195, "1381": [195, 209], "21570": 195, "1728": 195, "21587": 195, "2078": 195, "21639": 195, "2430": 195, "21694": 195, "2777": 195, "21687": 195, "3119": 195, "21641": 195, "21609": 195, "21798": 195, "21486": 195, "19811": 195, "1267": 195, "19645": 195, "1604": [195, 227], "1936": 195, "20092": 195, "2255": 195, "20058": 195, "2586": 195, "20149": 195, "2926": 195, "20295": 195, "3272": 195, "20454": 195, "20412": 195, "20995": 195, "683": [195, 196, 232], "21350": 195, "1357": 195, "21181": 195, "1703": 195, "21269": 195, "2059": 195, "21446": 195, "2402": 195, "21441": 195, "2760": 195, "21578": 195, "3118": 195, "21679": 195, "21698": 195, "21972": 195, "702": [195, 196, 209, 232], "21896": 195, "21736": 195, "1374": 195, "21398": 195, "1700": [195, 245], "21165": 195, "20963": 195, "2689": 195, "20914": 195, "3022": [195, 322, 481, 870], "20900": 195, "3369": 195, "20991": 195, "21021": 195, "20711": 195, "20760": 195, "20665": 195, "20647": 195, "1655": 195, "20668": 195, "20642": 195, "2316": 195, "20653": 195, "2649": 195, "20676": 195, "20860": 195, "3353": 195, "20992": 195, "20939": 195, "20856": 195, "20891": 195, "20855": 195, "20869": 195, "1669": 195, "20834": 195, "20873": 195, "20894": 195, "2675": 195, "20871": 195, "3025": 195, "21004": 195, "3373": 195, "21095": 195, "21040": 195, "21307": 195, "21664": 195, "21514": 195, "1373": 195, "21411": 195, "1715": 195, "21391": 195, "2064": 195, "21462": 195, "21320": 195, "21333": 195, "21304": 195, "3416": 195, "21281": 195, "rf_lap": 195, "fr\u00e9d\u00e9ric": [195, 245, 419], "theunissen": [195, 245, 419], "nandini": [195, 245, 419], "singh": [195, 245, 419, 888], "ann": [195, 218, 245, 419, 888], "hsu": [195, 245, 419], "vinj": [195, 245, 419], "jack": [195, 245, 419, 888], "gallant": [195, 245, 419], "ben": [195, 245, 419, 888], "willmor": [195, 245, 419], "darragh": [195, 245, 419], "smyth": [195, 245, 419], "cell": [195, 199, 245, 419, 873, 888], "553": [195, 232, 245, 419], "577": [195, 209, 232, 245, 419], "0954": [195, 245, 419], "898x_14_3_309": [195, 245, 419], "heer": [195, 245, 419], "paslei": [195, 245, 419], "jochem": [195, 245, 419], "rieger": [195, 245, 419], "nathan": [195, 245, 419], "crone": [195, 245, 419], "knight": [195, 245, 419], "tune": [195, 207, 245, 419], "ncomms13654": [195, 245, 419], "30_strf": [195, 198], "visit": [196, 245, 859], "insight": [196, 870], "eas": 196, "camel": 196, "n_meg_channel": 196, "standand": 196, "interquartil": 196, "robustscal": [196, 422], "n_frequenc": [196, 298, 709], "popular": [196, 843, 851], "win": [196, 242], "grasp": 196, "competit": 196, "kaggl": 196, "week": [196, 869], "clf_csp": 196, "ssnr": [196, 564], "rewrit": [196, 888], "plot_filt": [196, 202, 203, 413, 420, 804, 878, 888], "boil": [196, 845], "evoked_time_gen": 196, "joint_kwarg": 196, "diag": [196, 688, 873], "1296": [196, 209, 245], "518": [196, 209], "635": [196, 209, 232], "663": [196, 209], "673": [196, 232], "689": [196, 232], "668": [196, 232], "676": [196, 209], "509": [196, 228], "681": 196, "533": [196, 232], "557": [196, 232, 245, 405], "604": 196, "685": [196, 232], "654": [196, 232], "695": [196, 232], "698": [196, 232], "822": [196, 232], "697": [196, 232], "847": 196, "872": [196, 209], "934": [196, 232], "977": [196, 232], "996": [196, 209], "671": [196, 232], "1015": 196, "664": [196, 232], "1037": [196, 245, 692], "1060": [196, 245], "1081": 196, "1104": 196, "1146": 196, "657": [196, 209, 232], "1170": 196, "1237": 196, "1259": [196, 245, 391], "1283": 196, "559": [196, 209, 232], "674": [196, 232], "666": [196, 232], "638": [196, 209, 232], "616": [196, 232], "597": [196, 232, 245, 421], "568": [196, 209, 232], "537": [196, 232], "515": [196, 888], "444": [196, 232, 237], "556": [196, 232], "558": 196, "514": 196, "586": [196, 232], "594": 196, "605": [196, 232], "618": [196, 232, 245, 690], "747": [196, 209, 232], "631": [196, 232], "772": [196, 232], "637": [196, 232], "818": 196, "843": 196, "907": [196, 232], "929": [196, 209, 232], "643": [196, 232], "641": [196, 232], "973": [196, 232], "1048": 196, "1098": [196, 245, 530, 870], "1145": 196, "1196": 196, "1218": 196, "1266": 196, "1289": 196, "623": [196, 232], "423": [196, 209, 232], "521": [196, 232, 245, 356], "703": 196, "738": [196, 209, 232], "762": [196, 232], "785": [196, 232], "809": [196, 232], "833": [196, 209, 232], "858": [196, 232], "882": [196, 232], "906": [196, 209, 232], "979": [196, 232], "1003": 196, "1029": [196, 209], "1054": 196, "1078": 196, "1102": 196, "1175": 196, "1250": 196, "1274": 196, "lanczo": 196, "1353": 196, "91709": 196, "26373e": 196, "98776221": 196, "41838256": 196, "06628583": 196, "methodolog": [196, 245], "uncov": [196, 245], "hal": [196, 245], "01848442": [196, 245], "archiv": [196, 245, 388, 847, 853, 855, 867, 876], "ouvert": [196, 245], "lionel": [196, 245], "naccach": [196, 245], "subtend": [196, 245, 870], "e85791": [196, 245], "0085791": [196, 245], "50_decod": [196, 198], "auto_tutorials_machin": 198, "vibrat": 199, "door": [199, 201], "slam": [199, 201], "phone": 199, "geomagnet": 199, "unshield": 199, "headphon": 199, "malfunct": [199, 200, 863], "qr": [199, 257, 575, 585, 588, 888], "sensori": 199, "plan": [199, 200, 203, 208, 437, 845, 851, 869], "genesi": 199, "ssp_projector": 199, "readili": [199, 203, 876], "mag_channel": 199, "remove_dc": [199, 203, 481, 482, 809, 888], "get_xdata": [199, 203], "get_ydata": [199, 203], "searchsort": [199, 203], "dx": [199, 203], "dy": [199, 203], "head_width": [199, 203], "length_includes_head": [199, 203], "find_ecg_ev": [199, 201, 207, 218, 575, 580, 878, 888], "create_ecg_epoch": [199, 201, 205, 207, 575, 585, 878, 888], "ecg_epoch": [199, 205, 580], "6007": [199, 204], "streak": 199, "avg_ecg_epoch": 199, "blocki": 199, "efficaci": 199, "pro": [199, 202, 847], "con": [199, 202], "589": [199, 215, 232], "10_preprocessing_overview": [199, 215], "deepcopi": 200, "usabl": [200, 428, 573, 603, 888], "wildcard": 200, "original_bad": 200, "bad_chan": 200, "paus": [200, 267, 268, 756, 888], "codebas": [200, 847, 862, 871, 876], "good_eeg": 200, "all_eeg": 200, "setdiff1d": 200, "excess": [200, 202, 481, 482, 809, 888], "protocol": [200, 863], "sheet": [200, 863], "offlin": [200, 855], "raw2": [200, 218], "invest": [200, 869], "unrealist": [200, 863], "dramat": 200, "robust": [200, 204, 205, 241, 245, 265, 266, 413, 563, 665, 670, 888], "uninform": 200, "deweight": 200, "fair": [200, 208], "eeg_data": [200, 216], "eeg_data_interp": 200, "interp": [200, 659, 660, 661, 673, 888], "00000022": 200, "bad_color": [200, 481, 482, 809], "grad_data": 200, "grad_data_interp": 200, "00000009": 200, "propag": [200, 203, 259, 848], "15_handling_bad_channel": [200, 215], "fake_keypress": [201, 218], "keyboard": [201, 219, 756, 864, 888], "push": [201, 202, 847, 888], "enter": [201, 207, 218, 219, 846, 847, 850], "bad_cough": 201, "wrapper": [201, 269, 444, 448, 487, 698, 699, 888], "bad_blink": 201, "blink_annot": 201, "eeg_pick": 201, "albeit": 201, "annotate_break": [201, 878, 888], "first_tim": [201, 480, 481, 482, 502, 596, 888], "block_1": 201, "block_2": 201, "block_annot": 201, "break_annot": [201, 566], "min_break_dur": [201, 566], "t_start_after_previ": [201, 566], "t_stop_before_next": [201, 566], "bad_break": [201, 566], "events_subset": 201, "flat_criteria": 201, "stringent": 201, "reject_tmin": [201, 260, 265, 266, 580, 888], "reject_tmax": [201, 260, 265, 266, 580, 888], "disappear": [201, 242, 888], "subsum": 201, "stronger_reject_criteria": 201, "2000e": 201, "20_rejecting_bad_data": [201, 215], "park": [202, 245], "burru": [202, 245], "ifeachor": [202, 245], "jervi": [202, 245], "widmann": [202, 245], "somedai": 202, "conclud": [202, 231], "lightli": [202, 847], "cautious": 202, "hope": [202, 203, 205, 242], "math": [202, 206, 867], "b_0": 202, "b_1": [202, 870], "b_2": 202, "ldot": 202, "b_m": [202, 870], "a_1": 202, "a_2": 202, "a_n": 202, "mb_kz": 202, "na_kz": 202, "b_k": [202, 276, 870], "denomin": [202, 232, 298, 299, 662, 672, 696, 699, 721, 888], "a_k": 202, "autoregress": 202, "broken": [202, 270, 453, 847, 888], "finit": [202, 223, 232, 245, 457, 863, 870, 888], "impuls": [202, 867], "infinit": [202, 870, 888], "qquad": 202, "foral": [202, 870], "steeper": [202, 203], "accumul": [202, 265, 266], "despit": [202, 231], "throughput": 202, "sharp": [202, 227, 888], "steep": 202, "broader": [202, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 708, 711], "fundament": 202, "fftfreq": 202, "plot_ideal_filt": [202, 797, 878, 888], "f_p": [202, 870], "flim": [202, 203, 797, 804], "dlim": [202, 797], "f_": 202, "nyq": [202, 449, 452], "third_height": 202, "hypothet": [202, 563], "na\u00efv": 202, "brick": [202, 203], "correspondingli": [202, 265, 266, 870], "tighter": [202, 888], "fortun": [202, 206, 870], "remez": 202, "firl": 202, "ifft": 202, "relax": [202, 237, 888], "shallow": [202, 274], "gradual": 202, "shorten": [202, 219, 242, 780, 851, 870, 888], "benefici": [202, 277], "wherebi": 202, "came": [202, 853], "minimum_phas": 202, "falloff": 202, "h_min": 202, "uncompens": 202, "imaginari": [202, 245, 735, 736, 888], "dur": 202, "morlet_freq": 202, "tlim": 202, "ttick": 202, "blip": 202, "n_onset": 202, "x_orig": 202, "transition_band": 202, "create_filt": [202, 203, 265, 266, 267, 268, 451, 452, 481, 482, 797, 878, 888], "x_v16": 202, "twice": [202, 265, 266, 267, 268, 448, 449, 451, 452, 481, 482, 809], "filter_dur": 202, "x_v14": 202, "x_v13": 202, "h_eff": 202, "10001": [202, 888], "design_mne_c_filt": 202, "x_mne_c": 202, "hpw": 202, "lpw": 202, "x_min": [202, 315], "cost": [202, 272, 273, 276, 279, 280, 281, 419, 425, 563, 695, 696, 698, 699, 756, 814, 819, 870], "plot_sign": 202, "yscale": [202, 708, 888], "yticklabel": 202, "get_yticklabel": 202, "iirfilt": [202, 448], "iirdesign": [202, 448], "butterworth": [202, 265, 266, 267, 268, 415, 424, 448, 449, 451, 452, 481, 482, 575, 576, 888], "worsen": 202, "filtfilt": [202, 265, 266, 267, 268, 424, 448, 449, 451, 452, 481, 482, 809], "btype": [202, 448], "ftype": [202, 272, 273, 276, 279, 280, 281, 448], "butter": [202, 448], "x_shallow": 202, "sosfiltfilt": 202, "sosfilt": 202, "zpk2so": 202, "polynomi": [202, 265, 266, 267, 268, 481, 482, 521, 870, 888], "iir_param": [202, 207, 265, 266, 267, 268, 415, 424, 448, 449, 451, 452, 481, 482, 575, 576, 888], "filt": [202, 449], "x_steep": 202, "chebychev": [202, 448], "cheby1": [202, 448], "rp": [202, 448], "chebyshev": [202, 448, 888], "substanti": [202, 210, 265, 266, 271, 375, 469, 869, 870, 876], "adjust_ax": 202, "errant": 202, "misappl": 202, "deleteri": 202, "schr\u00f6ger": [202, 245], "uncontrol": 202, "acunzo": [202, 245], "misinterpret": 202, "tanner": [202, 245], "semant": 202, "syntact": 202, "n400": 202, "p600": 202, "5\u00b5v": 202, "sic": 202, "poststimulu": 202, "octav": 202, "energi": [202, 256, 867, 888], "understood": [202, 756], "cos_t": 202, "sig": [202, 231, 236, 237], "iir_lp_30": 202, "iir_hp_p1": 202, "iir_lp_2": 202, "iir_hp_2": 202, "x_lp_30": 202, "padlen": [202, 448], "x_hp_p1": 202, "x_lp_2": 202, "x_hp_2": 202, "x_f": 202, "lp": 202, "_2": [202, 870], "hp": [202, 210, 257], "evolv": 202, "maess": [202, 245, 888], "rebut": 202, "old": [202, 216, 218, 240, 245, 259, 262, 265, 266, 267, 268, 276, 279, 314, 322, 342, 405, 481, 482, 506, 528, 599, 621, 642, 643, 654, 756, 821, 825, 847, 855, 888], "baseline_plot": 202, "all_ax": 202, "ri": [202, 227, 245, 737, 740], "iir_hp": 202, "x_hp": 202, "leak": [202, 223, 869, 870], "n_pre": 202, "sig_pr": 202, "filter_data": [202, 265, 266, 267, 268, 424, 448, 449, 452, 481, 482, 878, 888], "adopt": [202, 845, 847], "reciproc": [202, 265, 266, 267, 268, 343, 415, 424, 434, 449, 451, 452, 481, 482, 574, 584, 595], "decent": 202, "blackman": [202, 265, 266, 267, 268, 424, 449, 451, 452, 481, 482], "fir_window": [202, 265, 266, 267, 268, 415, 424, 449, 451, 452, 481, 482], "fir_desgin": 202, "meet": [202, 869], "8197": 202, "outdat": 202, "construct_iir_filt": [202, 265, 266, 267, 268, 415, 424, 449, 451, 452, 481, 482, 575, 576, 878, 888], "transition_bandwidth": 202, "fir_coef": 202, "0545": 202, "0017": 202, "wider": [202, 203], "thoma": [202, 227, 228, 245, 541, 665, 670, 692, 695, 696, 697, 698, 699, 888], "sidnei": [202, 245], "wilei": [202, 245], "82896": [202, 245], "andrea": [202, 245, 298, 888], "erich": [202, 245], "burkhard": [202, 245, 888], "00233": [202, 245], "graham": [202, 245], "mackenzi": [202, 245], "rossum": [202, 245], "darren": [202, 245], "kara": [202, 245], "morgan": [202, 245], "inappropri": [202, 245, 272, 273, 276, 279, 280, 281], "conclus": [202, 229, 245], "1009": [202, 245], "12437": [202, 245], "1469": [202, 245], "8986": [202, 245], "01009": [202, 245], "commentari": [202, 245], "artefact": [202, 212, 245], "norton": [202, 245], "ermf": [202, 245], "25_background_filt": [202, 215], "mathrm": [203, 210, 227, 724, 734, 736, 738, 739], "raw_highpass": 203, "19821": 203, "9911": [203, 888], "filter_param": 203, "add_arrow": 203, "meg_pick": 203, "raw_notch": 203, "3965": 203, "raw_notch_fit": 203, "spectrum_fit": [203, 452, 481, 482, 888], "notabl": [203, 241, 888], "consum": [203, 275, 573, 701, 888], "raw_downsampl": 203, "pitfal": 203, "safe": [203, 216, 245, 265, 266, 322, 379, 380, 381, 384, 385, 386, 388, 393, 396, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 481, 853, 855], "614990234375": [203, 216], "current_sfreq": 203, "desired_sfreq": 203, "obtained_sfreq": 203, "lowpass_freq": 203, "19813025304873463": 203, "80214146205357": 203, "synch": 203, "30_filtering_resampl": [203, 215], "gratton": [204, 245, 562, 610], "croft": [204, 245, 562], "articl": [204, 862], "6607": 204, "bleed": [204, 283, 590], "250m": 204, "model_plain": 204, "picks_artifact": [204, 212, 562, 610], "epochs_clean_plain": 204, "redo": 204, "partli": 204, "variat": [204, 224, 413, 863, 888], "prone": 204, "allevi": [204, 870], "epochs_sub": 204, "model_sub": 204, "epochs_clean_sub": 204, "piec": [204, 218, 265, 266, 481, 482, 870], "ongo": [204, 566, 863, 876], "alik": 204, "model_evok": 204, "epochs_clean_evok": 204, "eog_evoked_clean": 204, "raw_kwarg": 204, "cole": [204, 245, 562, 610], "emanuel": [204, 245, 562, 610, 661, 888], "donchin": [204, 245, 562, 610], "ocular": [204, 205, 207, 245, 562, 610], "90135": [204, 245, 562, 610], "s0987": [204, 245, 562], "7053": [204, 245, 562], "00055": [204, 245, 562], "35_artifact_correction_regress": [204, 215], "corrmap": [205, 878, 888], "guidanc": [205, 207, 869], "blind": [205, 245, 563, 593], "microphon": 205, "unmix": [205, 563, 564, 593, 800, 803, 888], "analogi": 205, "unwant": [205, 207, 211, 320, 888], "ic": [205, 275, 563, 578, 799, 801, 803, 888], "n_pca_compon": [205, 563, 800, 888], "pc": 205, "smallest": [205, 232, 343, 413, 563, 867, 870], "runica": [205, 563], "mixing_matrix_": [205, 563], "unmixing_matrix_": [205, 563], "tesla": [205, 207, 222, 870], "artifact_pick": [205, 207], "harder": [205, 847], "filt_raw": 205, "huge": [205, 694], "9010": 205, "get_explained_variance_ratio": [205, 563, 888], "explained_var_ratio": 205, "9358001342790973": 205, "7717091491114122": 205, "ratio_perc": 205, "trackpad": [205, 267, 268, 472, 772, 791], "15459": 205, "ica000": [205, 888], "ica001": [205, 275, 563, 799, 801, 803], "anywai": [205, 217, 847, 853, 888], "read_ica": [205, 563, 878], "reconst_raw": 205, "tediou": 205, "reset": [205, 262, 265, 266, 267, 268, 274, 367, 413, 420, 481, 482, 562, 563, 708, 710, 711, 712, 756, 787, 788, 792, 795, 799, 808, 811, 816, 824, 873, 888], "eog_indic": 205, "prefront": 205, "ctp": [205, 563, 888], "ecg_indic": 205, "caught": 205, "ica014": 205, "refit": [205, 888], "new_ica": 205, "neck": [205, 310], "trail": [205, 563, 595, 752], "s001r03": 205, "s002r03": 205, "19679": 205, "s003": 205, "s003r03": 205, "lib": [205, 845, 853], "python3": [205, 846, 888], "_fastica": 205, "convergencewarn": 205, "s004": 205, "s004r03": 205, "6250": 205, "6249": 205, "6150": 205, "6149": 205, "ica002": 205, "labels_": [205, 563, 578, 802], "get_compon": [205, 563, 888], "subject_index": 205, "component_index": 205, "template_eog_compon": 205, "33638605": 205, "32708878": 205, "32846765": 205, "32807248": 205, "35916344": 205, "37615216": 205, "42464993": 205, "21789139": 205, "22387812": 205, "22237922": 205, "21342143": 205, "2425263": 205, "26757238": 205, "27806995": 205, "15470616": 205, "1693302": 205, "17711037": 205, "17373137": 205, "19651749": 205, "21091786": 205, "22459439": 205, "68783519": 205, "46717407": 205, "64182737": 205, "34165002": 205, "28991817": 205, "76938995": 205, "0057612": 205, "54311043": 205, "54567127": 205, "63806031": 205, "57058636": 205, "52637437": 205, "51788659": 205, "55774431": 205, "56188149": 205, "69340923": 205, "73333856": 205, "2829121": 205, "39253171": 205, "16120286": 205, "25431324": 205, "06352167": 205, "1647002": 205, "11930156": 205, "1811579": 205, "10112171": 205, "12638332": 205, "13623739": 205, "1301851": 205, "14380943": 205, "15329772": 205, "1715539": 205, "16560352": 205, "13293812": 205, "08175318": 205, "10173655": 205, "10764581": 205, "12707317": 205, "09785876": 205, "07433338": 205, "08470678": 205, "07373196": 205, "03379354": 205, "recomput": [205, 208, 232, 454, 563, 593, 647, 888], "ecg_ind": 205, "francoi": [205, 245, 563], "cardoso": [205, 245, 563], "precondit": [205, 210, 245, 563, 596, 888], "hessian": [205, 245, 563], "4040": [205, 245, 563], "2844203": [205, 245, 563], "iren": [205, 245], "winkler": [205, 245], "deben": [205, 245, 578], "4101": [205, 245], "4105": [205, 245], "milan": [205, 245, 888], "7319296": [205, 245], "dammer": [205, 245, 563, 888], "schiek": [205, 245, 563], "boer": [205, 245, 563], "carmen": [205, 245, 391, 563], "silex": [205, 245, 563], "mikhail": [205, 245, 563], "zvyagintsev": [205, 245, 563], "uw": [205, 245, 563], "pietrzyk": [205, 245, 563], "mathiak": [205, 245, 563], "926677": [205, 245, 563], "filipa": [205, 245, 578], "campo": [205, 245, 578], "viola": [205, 245, 578, 888], "jeremi": [205, 245, 578], "thorn": [205, 245, 578], "edmond": [205, 245, 578], "till": [205, 245, 578], "schneider": [205, 245, 578], "tom": [205, 245, 578, 888], "eichel": [205, 245, 578], "semi": [205, 245, 578, 888], "clinph": [205, 245, 563, 571, 578, 737, 740], "40_artifact_correction_ica": [205, 215], "setup_3d_ax": 206, "set_zlabel": 206, "set_ylim": [206, 242], "set_zlim": 206, "geometr": [206, 272, 273, 276, 279, 280, 281, 447, 821, 863, 870], "shadow": [206, 648], "cast": [206, 258, 454, 760, 888], "sun": 206, "xy_projection_matrix": 206, "projected_point": 206, "projected_vector": 206, "arrow_coord": 206, "arrow_length_ratio": 206, "symbol": [206, 257, 707, 868, 870, 888], "expans": [206, 210, 265, 266, 267, 268, 434, 481, 482, 521, 573, 574, 584, 595, 870], "unpack": [206, 232, 769, 853], "lucki": 206, "bother": [206, 216], "trigger_effect": 206, "internet": [206, 869], "algebra": [206, 867, 888], "full_matric": 206, "trigger_projection_matrix": 206, "plot_trisurf": 206, "interchang": [206, 298, 843], "ten": [206, 242, 471, 851, 864], "hyperplan": [206, 416, 423], "synonym": [206, 873], "incident": [206, 267, 268, 472, 772, 791], "phrase": 206, "publish": [206, 245, 563, 865], "first_projector": 206, "explained_var": [206, 274, 888], "inact": [206, 210, 265, 266, 267, 268, 481, 482, 869], "compute_proj_raw": [206, 207, 357, 358, 870, 878, 888], "ortho": [206, 563], "write_proj": [206, 633, 878, 888], "forgo": 206, "offecg": 206, "remove_exist": [206, 207, 265, 266, 267, 268, 481, 482, 756], "perman": [206, 845, 863, 888], "mags_ecg": 206, "_projector": 206, "cheaper": 206, "consequenti": 206, "mikko": [206, 207, 245, 870], "uusitalo": [206, 207, 245, 870], "bf02534144": [206, 207, 245, 870], "45_projectors_background": [206, 215], "equip": [207, 870], "system_proj": 207, "empty_room_fil": 207, "empty_room_raw": 207, "empty_room_proj": 207, "distant": [207, 867], "_proj": [207, 888], "no_proj": [207, 575, 576], "picks_trac": [207, 807], "plot_projs_joint": [207, 878, 888], "ecg_l_freq": [207, 257, 575], "ecg_h_freq": [207, 257, 575], "filter_method": [207, 575, 576], "presum": 207, "clutter": 207, "eog_proj": 207, "okai": 207, "eog_projs_bad": 207, "perfectli": [207, 242, 731, 870], "get_titl": [207, 211], "get_ylabel": 207, "set_tick_param": 207, "labelbottom": 207, "50_artifact_correction_ssp": [207, 215], "earlob": 208, "collarbon": 208, "disadvantag": [208, 227], "add_reference_channel": [208, 265, 266, 267, 268, 481, 482, 708, 710, 711, 712, 878, 888], "ref_channel": [208, 265, 266, 267, 268, 282, 481, 482, 652, 708, 710, 711, 712], "raw_new_ref": 208, "raw_avg_ref": 208, "wasn": [208, 888], "infin": [208, 245, 265, 266, 267, 268, 481, 482, 652, 888], "raw_rest": 208, "_raw": [208, 211], "2197": 208, "00413199": 208, "0159844": 208, "05174612": 208, "eeg_bipolar": [208, 649], "transvers": [208, 263], "raw_bip_ref": 208, "36038": [208, 216], "61837": 208, "valueerror": [208, 276, 279, 447, 626, 649, 658, 780], "yao": [208, 245, 265, 266, 267, 268, 481, 482, 652, 668], "693": [208, 232, 245, 265, 266, 267, 268, 481, 482, 652], "0967": [208, 245, 265, 266, 267, 268, 481, 482, 652], "3334": [208, 245, 265, 266, 267, 268, 481, 482, 652], "dezhong": [208, 245], "yun": [208, 245], "qin": [208, 245], "shiang": [208, 245], "hu": [208, 245], "dong": [208, 245, 888], "maria": [208, 245], "bringa": [208, 245], "vega": [208, 245], "pedro": [208, 245], "vald": [208, 245], "\u00e9": [208, 245], "sosa": [208, 245], "00707": [208, 245], "55_setting_eeg_refer": [208, 215], "h\u00f6chenberg": [209, 241, 875, 888], "hoechenberg": [209, 241], "test_move_anon_raw": [209, 210], "v6": [209, 210], "v7": [209, 210, 888], "10800": [209, 210, 888], "31199": [209, 210], "20399": 209, "get_chpi_info": [209, 878, 888], "chpi_freq": 209, "chpi_cod": 209, "chpi_amplitud": [209, 343, 344], "compute_chpi_amplitud": [209, 344, 345, 878, 888], "1696": 209, "591": 209, "442": [209, 227, 232], "522": [209, 232], "542": [209, 232], "861": 209, "974": [209, 232], "1018": 209, "721": [209, 232], "741": [209, 232], "1064": 209, "761": 209, "1087": 209, "1110": 209, "836": [209, 232], "1178": [209, 245], "1224": 209, "1247": 209, "908": [209, 232], "1269": 209, "1291": [209, 211], "939": [209, 232], "1314": 209, "1336": 209, "1359": 209, "986": [209, 232], "1403": 209, "1426": 209, "1449": 209, "1056": 209, "1494": 209, "1069": [209, 245, 545, 668], "1517": 209, "1082": 209, "1539": 209, "1583": 209, "1115": 209, "1605": 209, "1148": 209, "1674": 209, "1158": 209, "1695": 209, "compute_chpi_loc": [209, 210, 343, 345, 346, 878, 888], "4385": 209, "431": [209, 227, 232], "439": [209, 227, 448], "503": [209, 232], "539": 209, "511": [209, 232], "472": [209, 227, 232, 245, 413], "776": [209, 232], "789": 209, "819": [209, 232], "823": 209, "827": [209, 232], "848": [209, 232], "886": [209, 232, 241, 244], "948": [209, 232], "1040": 209, "1062": 209, "1072": 209, "1124": 209, "1163": 209, "1263": 209, "1286": 209, "414": [209, 232], "1301": 209, "1315": 209, "1319": 209, "1325": 209, "1379": 209, "1418": 209, "1480": 209, "1519": 209, "1565": [209, 245], "1573": 209, "1580": [209, 265, 266], "1586": 209, "1590": [209, 227], "1594": 209, "1599": 209, "1609": 209, "1647": 209, "1652": 209, "1690": 209, "write_head_po": [209, 344, 346, 352, 353, 878], "compute_chpi_snr": [209, 343, 779, 878, 888], "plot_chpi_snr": [209, 878, 888], "snr_dict": [209, 779], "429": 209, "435": [209, 227, 232], "452": [209, 227, 232, 278], "463": [209, 212, 215, 216, 221, 227, 232, 278], "469": [209, 232], "59_head_posit": [209, 215], "find_bad_channels_maxwel": [210, 595, 878, 888], "obliqu": 210, "filter_chpi": [210, 595, 878, 888], "crosstalk": 210, "fine_cal_fil": 210, "sss_cal_mgh": 210, "crosstalk_fil": 210, "ct_sparse_mgh": 210, "raw_check": 210, "auto_noisy_ch": 210, "auto_flat_ch": 210, "auto_scor": 210, "cross_talk": [210, 573, 584, 595], "return_scor": [210, 584], "ei": 210, "ch_subset": 210, "scores_noisi": [210, 584], "limits_noisi": [210, 584], "bin_label": 210, "data_to_plot": 210, "cbar_kw": 210, "nanmin": 210, "rect": 210, "nanmax": [210, 230], "appar": [210, 863], "fashion": [210, 373, 888], "min_count": [210, 584], "qualifi": 210, "int_ord": [210, 434, 574, 584, 595, 888], "ext_ord": [210, 343, 345, 349, 434, 573, 574, 584, 595], "thick": [210, 870], "mathtt": [210, 724, 734, 735, 736, 738, 739], "st": [210, 257], "_durat": 210, "penultim": 210, "st_correl": [210, 584, 595, 603], "st_onli": [210, 584, 595, 888], "doublecheck": 210, "get_active_chpi": [210, 878, 888], "chpi_fif_fil": 210, "head_pos_fil": 210, "headpo": [210, 257, 353], "patent": [210, 595, 603], "legal": [210, 780, 869], "commerci": [210, 595], "124905": [210, 245, 434, 574, 595], "1935742": [210, 245, 574, 595], "60_maxwell_filtering_sss": [210, 215], "deoxyhaemoglobin": [211, 888], "itertool": 211, "compress": [211, 260, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 388, 481, 482, 580, 581, 708, 711, 853, 888], "novemb": [211, 213, 245, 301, 665, 670], "cw": [211, 373, 843], "set_dur": [211, 259, 888], "mid": [211, 227], "source_detector_dist": [211, 878, 888], "photodetect": 211, "scalp_coupling_index": [211, 878, 888], "beer": 211, "lambert": 211, "law": [211, 869, 888], "raw_haemo": 211, "beer_lambert_law": [211, 878, 888], "haemodynam": 211, "predominantli": 211, "raw_haemo_unfilt": 211, "s4_d4": 211, "s8_d8": 211, "s3_d3": 211, "s7_d6": 211, "s7_d7": 211, "s6_d8": 211, "oxi": [211, 888], "morphologi": 211, "evoked_dict": 211, "color_dict": 211, "aa3377": [211, 724, 734], "styles_dict": 211, "chroma": 211, "drive": [211, 365, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 522], "tidi": 211, "leg_lin": 211, "get_c": 211, "70_fnirs_process": [211, 215], "technologi": [212, 245, 256, 875], "placement": [212, 267, 268, 793, 843, 888], "opm_data_fold": 212, "ucl_opm_auditori": [212, 864, 878], "opm_fil": 212, "002_se": 212, "aef_run": 212, "001_meg": 212, "540000": 212, "6000": [212, 593], "pt": [212, 485, 514], "amp_scal": 212, "1e12": [212, 372], "data_d": 212, "time_d": 212, "set_kwarg": 212, "ambient": 212, "knowldg": 212, "evironment": [212, 577], "g2": 212, "psd_kwarg": 212, "psd_pre": 212, "psd_post_reg": 212, "9901": [212, 888], "relatiship": 212, "hfc": [212, 577, 888], "homgen": 212, "compute_proj_hfc": [212, 878, 888], "psd_post_hfc": 212, "broadband": 212, "remnant": 212, "motiv": [212, 242], "minimis": 212, "interfec": 212, "39601": 212, "seymour": [212, 245, 577, 864, 888], "stephani": [212, 245, 577, 864], "mellor": [212, 245, 577, 864], "neill": [212, 245, 577, 864, 888], "tim": [212, 245, 577, 864], "tiernei": [212, 245, 577, 864], "eleanor": [212, 245, 577, 864], "maguir": [212, 245, 577, 864], "opportun": [212, 245, 864], "118834": [212, 245, 864], "februari": [212, 245, 864], "80_opm_process": [212, 215], "pupillari": 213, "reflex": 213, "dominik": [213, 242, 888], "welk": [213, 242, 888], "huberti": [213, 888], "mcgill": 213, "ca": 213, "proprietari": [213, 845, 864, 869], "asc": [213, 500, 864, 870], "eyelink": [213, 500, 870, 878], "monocular": [213, 864], "eyelink_fnam": 213, "mono_multi": 213, "block_multi": 213, "gaze": [213, 583, 864], "feed": [213, 578, 870], "shortest_ev": [213, 454], "uint_cast": [213, 258, 454], "categor": 213, "5301": 213, "90_eyetracking_data": [213, 215], "878": [215, 245, 692], "auto_tutorials_preprocess": 215, "166800": 216, "read_raw_": [216, 480, 870, 888], "famili": [216, 697], "seriou": [216, 869], "parenthes": [216, 870], "estimate_rank": [216, 888], "n_time_samp": 216, "time_sec": 216, "n_chan": [216, 688, 735, 736, 818], "000167471573526": 216, "megacq": 216, "acqch001": 216, "110113": 216, "acqch002": 216, "110112": 216, "acqch003": 216, "110111": 216, "acqch004": 216, "110122": 216, "frequent": [216, 845, 847, 865, 868, 888], "12012": 216, "18018": 216, "24024": 216, "underlyingli": [216, 865], "n_timepoint": [216, 693], "pose": [216, 847], "undo": [216, 625, 888], "eeg_and_eog": 216, "raw_temp": 216, "channel_nam": [216, 498, 626, 888], "eog_and_frontal_eeg": 216, "frivol": 216, "eeg_059": 216, "eeg_060": 216, "blink_detector": 216, "makeshift": 216, "eeg_001": 216, "raw_select": 216, "1503": 216, "unspecifi": [216, 222, 780], "500770084699155": 216, "5001290587975622": 216, "raw_selection1": 216, "raw_selection2": 216, "raw_selection3": 216, "5041000049184614": 216, "sampling_freq": [216, 222], "start_stop_second": 216, "channel_index": [216, 769], "85742192e": 216, "64355481e": 216, "89306644e": 216, "99872648": 216, "00039144": 216, "0020564": 216, "9933487": 216, "99501366": 216, "99667862": 216, "data_arrai": 216, "times_arrai": 216, "meg_0712": 216, "meg_1022": 216, "two_meg_chan": 216, "y_offset": 216, "safest": [216, 863], "eeg_channel_indic": 216, "planar1": [216, 262, 265, 266, 267, 268, 413, 420, 481, 482, 560, 561, 562, 563, 578, 708, 710, 711, 712, 788, 795, 799, 811, 816, 818], "planar2": [216, 262, 265, 266, 267, 268, 413, 420, 481, 482, 560, 561, 562, 563, 578, 708, 710, 711, 712, 788, 795, 799, 811, 816, 818], "first_channel_data": [216, 870], "eeg_and_eog_data": 216, "two_meg_chans_data": 216, "my_data": 216, "npy": [216, 217], "afford": 216, "scaling_tim": 216, "start_end_sec": 216, "to_hdf": 216, "999750": 216, "952283e": 216, "001415": 216, "069226e": 216, "003080": 216, "080921e": 216, "004745": 216, "010755e": 216, "006410": 216, "10_raw_overview": [216, 221], "write_ev": [217, 454, 622, 878, 888], "lst": [217, 622, 833], "array_equ": 217, "_eve": 217, "my_experi": 217, "told": 217, "events_no_button": 217, "merged_ev": 217, "ultim": [217, 847], "send": [217, 753], "cumbersom": 217, "20_event_arrai": [217, 221], "datetim": [218, 259, 265, 266, 267, 268, 270, 284, 481, 482, 888], "compris": [218, 222, 265, 266, 696, 710, 711, 712, 870, 876], "posix": [218, 259], "my_annot": 218, "aaa": 218, "bbb": 218, "ccc": 218, "microsecond": [218, 259, 265, 266, 267, 268, 270, 481, 482, 873], "time_of_first_sampl": 218, "95597083": 218, "iso": 218, "8601": 218, "new_orig_tim": 218, "strftime": 218, "later_annot": 218, "ddd": 218, "eee": 218, "fff": 218, "720100": 218, "darker": 218, "spinbox": 218, "safeguard": [218, 270, 888], "interactive_annot": 218, "bad_": [218, 888], "ordereddict": 218, "95597082905339": [218, 259], "tzinfo": 218, "timezon": [218, 265, 266, 267, 268, 481, 482], "descr": 218, "70597082905339": 218, "45597082905339": 218, "20597082905339": 218, "WILL": 218, "NOT": 218, "annot_from_fil": 218, "30_annotate_raw": [218, 221], "versatil": 219, "lengthen": 219, "unmark": 219, "newli": [219, 777], "hover": 219, "thumbnail": 219, "plot_psd_topo": [219, 240, 265, 266, 267, 268, 481, 482], "40_visualize_raw": [219, 221], "auto_tutorials_raw": 221, "synthet": [222, 498, 580, 585, 870, 888], "hertz": [222, 224, 270, 709, 713, 714, 715, 716, 717, 718], "eog001": 222, "meg001": 222, "meg002": 222, "meg003": 222, "meg004": 222, "meg005": 222, "meg006": 222, "meg007": 222, "meg008": 222, "seven": [222, 870, 888], "molar": [222, 870], "amper": [222, 870], "simulated_raw": 222, "show_scalebar": [222, 265, 266, 481, 482, 786, 809, 888], "simulated_epoch": 222, "column_stack": 222, "condition_a": 222, "condition_b": 222, "evoked_arrai": 222, "n_per_seg": [222, 242, 265, 266, 267, 268, 481, 482, 710, 712, 727, 888], "psd_ave": 222, "spectrum_from_arrai": 222, "inst_info": 222, "my_welch": 222, "inst_type_str": 222, "data_typ": 222, "10_array_obj": [222, 226], "simulate_stc": [223, 672, 673, 674, 878, 888], "dt": [223, 434, 720], "17545": 223, "hemi_to_ind": 223, "elig": [223, 869], "surf_vertic": 223, "restrict_vert": 223, "intersect1d": 223, "restrict_vertic": [223, 271, 276], "cent_idx": 223, "elsewher": 223, "distances_to_outsid": [223, 271, 888], "compute_area": [223, 271, 888], "stc_gen": 223, "value_fun": [223, 675], "brain_gen": 223, "evoked_gen": 223, "stc_inv": 223, "brain_inv": 223, "45968308": 223, "57021267": 223, "69354621": 223, "evoked_snr": 223, "653": [223, 232], "70_point_spread": [223, 226], "unit_impuls": 224, "coh_signal_gen": 224, "t_rand": 224, "dev": [224, 551, 653], "base_freq": 224, "cumsum": 224, "signal1": 224, "signal2": 224, "am": [224, 263, 266, 268, 375, 482, 873, 888], "nperseg": 224, "coh": [224, 709, 782], "noverlap": 224, "146374": 224, "33830": 224, "stc_signal": 224, "stc_nois": 224, "pretend": [224, 227], "s_rm": 224, "59828": 224, "89697e": 224, "40489756": 224, "65479053": 224, "61269642": 224, "dampen": [224, 648], "consensu": [224, 869], "csd_signal": 224, "filters_approach1": 224, "filters_approach2": 224, "filters_1": 224, "power_approach1": 224, "power_approach2": 224, "plot_approach": 224, "brain1": 224, "42918831e": 224, "04345299e": 224, "40589757e": 224, "brain2": 224, "mia": [224, 245, 298, 299], "liljestr\u00f6m": [224, 245, 298, 299], "susanna": [224, 245, 298, 299, 888], "aro": [224, 245, 298, 299, 888], "245530": [224, 245, 298, 299], "kensuk": [224, 245, 298, 299], "sekihara": [224, 245, 298, 299], "79369": [224, 245, 298, 299], "79370": [224, 245, 298, 299], "80_dic": [224, 226], "891": 226, "auto_tutorials_simul": 226, "ttest_1samp_no_p": [227, 695, 698, 702, 878, 888], "phenomena": 227, "n_subject": [227, 235, 237, 691], "signal_mean": 227, "signal_sd": 227, "noise_sd": 227, "gaussian_sd": 227, "n_src": [227, 273, 278], "h_0": 227, "colon": [227, 257, 388, 873], "h_1": 227, "neq": [227, 870], "geq": 227, "cdot": [227, 668, 870], "1600": 227, "mcc": 227, "plot_t_p": 227, "p_lim": 227, "t_lim": 227, "mgrid": 227, "plot_surfac": [227, 888], "rstride": 227, "cstride": 227, "ztick": 227, "mappabl": 227, "set_tick": 227, "set_ticklabel": 227, "get_xaxi": 227, "set_label_coord": 227, "set_weight": 227, "use_p": 227, "log_": 227, "t_": [227, 870], "exchang": [227, 888], "verid": 227, "n_": [227, 870], "samp": 227, "gymnast": 227, "declar": [227, 869], "p_type_i": 227, "combat": 227, "familywis": 227, "fwer": 227, "benjamini": [227, 692], "hochberg": [227, 692], "strict": [227, 456, 851], "indistinguish": 227, "mathbf": [227, 574], "perm_": 227, "aforement": 227, "rethink": 227, "thought": [227, 689, 843], "refram": 227, "drawback": 227, "touch": [227, 323], "feature_extract": 227, "grid_to_graph": 227, "e402": 227, "mini_adjac": 227, "toarrai": 227, "find_ch_adjac": [227, 228, 229, 232, 331, 688, 695, 696, 698, 699, 777, 878, 888], "combine_adjac": [227, 229, 232, 235, 320, 331, 695, 696, 698, 699, 878, 888], "get_builtin_ch_adjac": [227, 320, 331, 777, 878], "builtin_ch_adj": 227, "adj_nam": 227, "adj_descript": 227, "bti148": 227, "bti248": 227, "bti248grad": 227, "ctf64": 227, "easycap128ch": 227, "easycap32ch": 227, "easycap64ch": 227, "easycapm1": [227, 888], "easycapm11": 227, "m11": 227, "easycapm14": 227, "m14": 227, "easycapm15": 227, "m15": 227, "ecog256": 227, "256channel": 227, "ecog256bipolar": 227, "eeg1010_neighb": 227, "elec1005": 227, "elec1010": 227, "elec1020": 227, "itab153": 227, "itab": 227, "itab28": 227, "language29ch": 227, "mpi": 227, "mpi_59_channel": 227, "neuromag122cmb": 227, "neuromag122": [227, 888], "neuromag306cmb": 227, "neuromag306": 227, "neuromag306mag": [227, 232], "neuromag306planar": [227, 229], "yokogawa160": 227, "yokogawa440": 227, "read_ch_adjac": [227, 320, 324, 688, 777, 878, 888], "n_space": 227, "t_thresh": [227, 229], "t_clust": 227, "viewabl": 227, "p_clust": 227, "cl": 227, "195527": 227, "120434": 227, "1551": 227, "1587": 227, "1685": 227, "1670": 227, "stat_fun_hat": 227, "t_hat": 227, "p_hat": 227, "043603": 227, "127369": 227, "2467": 227, "3970": 227, "3917": 227, "riemann": 227, "threshold_tfc": 227, "t_tfce": 227, "p_tfce": 227, "h_power": [227, 228], "e_pow": [227, 228], "453": [227, 278], "459": 227, "491": [227, 232], "502": [227, 232, 528, 873], "t_tfce_hat": 227, "p_tfce_hat": 227, "466": [227, 232], "jag": 227, "peaki": 227, "broad": [227, 242], "tighten": 227, "broaden": 227, "exhaust": [227, 298], "unbalanc": 227, "statsmodel": [227, 876, 885], "anova_lm": 227, "wrap": [227, 269, 536, 888], "q": [227, 257, 668, 695, 696, 698, 699, 870], "f_onewai": [227, 689, 691, 696, 699, 878], "f_mway_rm": [227, 231, 237, 691, 878, 888], "f_threshold_mway_rm": [227, 231, 237, 689, 878], "unpair": 227, "spatio_temporal_cluster_test": [227, 228, 232, 236, 237, 878, 888], "spatio_temporal_cluster_1samp_test": [227, 235, 695, 878, 888], "gerard": [227, 245, 701, 702], "ridgwai": [227, 245, 701, 702], "flandin": [227, 245, 701, 702], "karl": [227, 245, 256, 701, 702, 875], "friston": [227, 245, 701, 702], "Will": [227, 245, 257, 269, 313, 449, 480, 563, 701, 702, 707, 720, 727, 752, 829, 852], "penni": [227, 245, 701, 702], "haircut": [227, 245, 701, 702], "nichol": [227, 228, 245, 692, 695, 696, 697, 698, 699], "10_background_stat": [227, 234], "confirmatori": 228, "tfce": [228, 695, 696, 698, 699, 876, 888], "ttest_ind": [228, 702], "unsaf": [228, 711], "median_valu": 228, "long_word": 228, "short_word": 228, "time_window": [228, 708], "ntarget": 228, "short_df": 228, "format_dict": 228, "096": 228, "453939": 228, "222424": 228, "518939": 228, "371515": 228, "064": [228, 245, 348, 545, 668], "811667": 228, "250152": 228, "039697": 228, "318030": 228, "163030": 228, "425152": 228, "absent": [228, 367, 873, 888], "amongst": [228, 242], "temor": 228, "cluster_pv": [228, 695, 696, 698, 699], "significant_point": 228, "delaunai": [228, 229, 320, 888], "917298": 228, "1856": 228, "20_erp_stat": [228, 234], "whom": [229, 232, 847], "downstream": [229, 230], "nonparametr": [229, 230, 232, 245, 695, 696, 697, 698, 699], "spectrotempor": [229, 230, 735, 736, 738, 739], "tfr_epoch": 229, "logratio": [229, 241, 288, 546, 547, 708, 711, 816], "epochs_pow": [229, 231, 232], "541": [229, 232, 245, 434], "lattic": [229, 232, 688, 695, 696, 698, 699], "sensor_adjac": 229, "use_idx": 229, "n_ch": 229, "unrol": 229, "degrees_of_freedom": 229, "455144": 229, "265125": 229, "caveat": [229, 232, 245, 563, 870], "anywher": [229, 888], "t_obs_plot": 229, "f_idx": 229, "t_idx": [229, 481, 482], "nanargmax": 229, "40_cluster_1samp_time_freq": [229, 234], "epochs_condition_1": 230, "epochs_condition_2": 230, "comptuat": 230, "tfr_epochs_1": 230, "tfr_epochs_2": 230, "epochs_power_1": 230, "epochs_power_2": 230, "f_ob": [230, 231, 232, 236, 237, 696, 699], "566824": 230, "964": [230, 232], "951": [230, 232], "evoked_power_1": 230, "evoked_power_2": 230, "evoked_power_contrast": 230, "f_obs_plot": [230, 231, 232], "max_f": 230, "evoked_condition_1": 230, "evoked_condition_2": 230, "evoked_contrast": 230, "50_cluster_between_time_freq": [230, 234], "interplai": 231, "perceptu": 231, "56aud_r": 231, "60vis_l": 231, "64vis_r": 231, "forgiv": 231, "zero_mean": [231, 547, 724, 734, 735, 736, 738], "this_tfr": [231, 232], "this_pow": 231, "n_condit": [231, 232, 237, 696, 699], "n_replic": 231, "factor_level": [231, 237, 689, 691], "formula": [231, 237, 298, 299, 356, 664, 668, 721, 722, 870, 888], "a1b1": [231, 689], "a1b2": [231, 689], "a2b1": [231, 689], "b2b2": 231, "fval": 231, "effect_label": 231, "autumn": [231, 232], "overrid": [231, 275, 372, 374, 481, 482, 498, 644, 645, 646, 647, 754, 780, 851, 853, 869], "necessit": [231, 237, 888], "return_pv": [231, 237, 689], "pthresh": [231, 237], "f_thresh": [231, 232, 237], "419588": 231, "good_clust": [231, 235], "f_imag": [231, 232], "f_obs_plot2": 231, "071": [231, 234], "70_cluster_rmanova_time_freq": [231, 234], "differenti": [232, 245, 265, 266, 267, 268, 437, 481, 482, 737, 740, 876], "plot_ch_adjac": [232, 320, 331, 878, 888], "_csr": 232, "csr_matrix": [232, 277, 278, 320, 331, 632], "bind": [232, 237], "stackexchang": 232, "73993": 232, "alpha_cluster_form": 232, "n_observ": [232, 693, 695, 696, 698, 699, 780], "dfn": [232, 696, 699], "dfd": [232, 696, 699], "cluster_stat": 232, "004107": 232, "094418": 232, "412": 232, "415": 232, "478": 232, "483": 232, "519": [232, 242], "527": 232, "534": 232, "548": 232, "567": [232, 245], "576": 232, "592": 232, "595": [232, 245], "624": 232, "633": 232, "644": 232, "649": 232, "662": 232, "667": 232, "719": 232, "727": 232, "735": 232, "743": 232, "746": 232, "749": 232, "751": 232, "754": [232, 245, 863], "757": 232, "763": 232, "774": 232, "777": 232, "779": 232, "782": 232, "788": 232, "808": 232, "813": 232, "831": 232, "845": 232, "853": 232, "876": [232, 278], "879": 232, "885": 232, "893": 232, "896": 232, "899": [232, 242], "902": 232, "918": 232, "921": 232, "932": 232, "937": 232, "945": [232, 267, 268, 708, 794], "962": 232, "968": 232, "981": 232, "984": 232, "p_accept": 232, "good_cluster_ind": [232, 236, 237], "crimson": [232, 756], "steelblu": [232, 481, 482, 809], "i_clu": 232, "clu_idx": 232, "time_ind": 232, "space_ind": 232, "ch_ind": 232, "f_map": 232, "sig_tim": 232, "ax_topo": 232, "f_evok": 232, "ax_colorbar": 232, "ax_sign": 232, "ymin": [232, 237], "get_ylim": 232, "fill_betweenx": [232, 237], "tfr_adjac": 232, "tfr_threshold": 232, "333033": 232, "434": 232, "451": [232, 278], "461": 232, "504": 232, "505": 232, "547": 232, "565": 232, "572": 232, "574": 232, "596": 232, "598": 232, "599": 232, "614": 232, "626": [232, 245, 563], "628": 232, "696": 232, "715": 232, "718": 232, "724": 232, "731": 232, "734": [232, 245, 724, 734, 735, 738], "737": 232, "739": 232, "742": 232, "752": 232, "753": 232, "773": 232, "781": 232, "784": 232, "804": 232, "806": 232, "812": 232, "814": 232, "829": 232, "834": 232, "835": 232, "849": 232, "851": 232, "857": 232, "863": 232, "866": 232, "883": 232, "888": 232, "903": 232, "912": 232, "916": [232, 242], "917": 232, "922": 232, "925": 232, "927": 232, "928": 232, "931": 232, "933": 232, "936": [232, 236, 239], "949": 232, "963": 232, "969": 232, "972": 232, "983": 232, "987": 232, "991": 232, "difficulti": [232, 406, 845, 867], "freq_ind": 232, "ax_spec": 232, "f_obs_plot_sig": 232, "ax_colorbar2": 232, "mari": [232, 245, 695, 696, 698, 699, 888], "dejan": [232, 245, 695, 696, 698, 699], "draschkow": [232, 245, 695, 696, 698, 699], "e13335": [232, 245, 695, 696, 698, 699], "13335": [232, 245, 695, 696, 698, 699], "75_cluster_ftest_spatiotempor": [232, 234], "auto_tutorials_stat": [234, 239], "equalize_epoch_count": [235, 878], "summarize_clusters_stc": [235, 236, 237, 878, 888], "1000e": [235, 237], "sample_vertic": [235, 237], "evoked1": [235, 874], "evoked2": [235, 874], "n_vertices_sampl": [235, 237], "morph_data": [235, 888], "fsave_vertic": [235, 236, 237], "morph_mat": [235, 237, 277], "n_vertices_fsav": [235, 236, 237], "govern": 235, "member": [235, 693, 869, 873, 876], "max_step": [235, 695, 696, 698, 699], "spatial_src_adjac": [235, 236, 237, 878, 888], "p_threshold": [235, 236], "t_threshold": 235, "clu": [235, 236, 237, 700], "563537": 235, "791547": 235, "permutationt": 235, "good_clusters_idx": 235, "stc_all_cluster_vi": [235, 236, 237], "20_cluster_1samp_spatiotempor": [235, 239], "stc_fname": 236, "n_subjects1": 236, "n_subjects2": 236, "x1": [236, 693, 696], "x2": [236, 693, 696], "subjects_k": 236, "f_threshold": [236, 691], "632172": 236, "30_cluster_ftest_spatiotempor": [236, 239], "engemannn": 237, "r_aud": 237, "r_vi": 237, "tini": [237, 299], "1782": 237, "851281": 237, "brighter": 237, "inds_t": 237, "inds_v": 237, "cluster_ind": 237, "eve_id": 237, "mean_tc": 237, "std_tc": 237, "988": [237, 239], "60_cluster_rmanova_spatiotempor": [237, 239], "v\u00b2": 240, "\u00b2": [240, 241], "t\u00b2": [240, 242], "overridden": [240, 479, 888], "esp": 240, "method_kw": [240, 265, 266, 267, 268, 481, 482, 710, 712], "psd_array_multitap": [240, 265, 266, 267, 268, 418, 481, 482, 710, 712, 736, 739, 878, 888], "irrelev": [240, 257, 847, 870], "epo_spectrum": 240, "npsd": 240, "__getitem__": [240, 258, 259, 260, 262, 263, 265, 266, 270, 274, 278, 289, 304, 481, 482, 529, 709, 710, 711, 712, 743, 888], "evk_spectrum": 240, "61863537e": 240, "13487136e": 240, "88010499e": 240, "89065956e": 240, "24056397e": 240, "91160668e": 240, "56762015e": 240, "65842303e": 240, "39426775e": 240, "38758770e": 240, "03771739e": 240, "98519756e": 240, "agg_fun": [240, 265, 266, 267, 268, 481, 482, 710, 712, 788], "psd_welch": [240, 888], "psd_multitap": [240, 888], "area_mod": [240, 265, 266, 267, 268, 481, 482, 810], "kept": [240, 260, 265, 271, 326, 373, 437, 476, 478, 479, 500, 522, 530, 531, 532, 533, 534, 536, 537, 547, 563, 564, 574, 618, 800, 847, 888], "periodogram": [240, 245, 265, 266, 267, 268, 481, 482, 710, 712, 727], "electroacoust": [240, 245, 265, 266, 267, 268, 481, 482, 710, 712, 727], "1967": [240, 245, 265, 266, 267, 268, 481, 482, 710, 712, 727], "tau": [240, 245, 265, 266, 267, 268, 481, 482, 710, 712, 727], "1161901": [240, 245, 265, 266, 267, 268, 481, 482, 710, 712, 727], "slepian": [240, 245, 265, 266, 267, 268, 481, 482, 710, 712, 720, 726], "bell": [240, 245, 265, 266, 267, 268, 481, 482, 563, 593, 710, 712, 720, 726], "1430": [240, 245, 265, 266, 267, 268, 481, 482, 710, 712, 720, 726], "1978": [240, 245, 265, 266, 267, 268, 481, 482, 710, 712, 720, 726], "1538": [240, 245, 265, 266, 267, 268, 481, 482, 710, 712, 720, 726], "7305": [240, 245, 265, 266, 267, 268, 481, 482, 710, 712, 720, 726], "tb02104": [240, 245, 265, 266, 267, 268, 481, 482, 710, 712, 720, 726], "10_spectrum_class": [240, 244], "72074": 241, "mean_spectrum": 241, "psds_mean": [241, 242], "psds_std": [241, 242], "arithmet": [241, 563, 727, 888], "psds_welch_mean": 241, "freqs_mean": 241, "psds_welch_median": 241, "freqs_median": 241, "epo_idx": 241, "unaggreg": [241, 727, 888], "n_segment": [241, 727], "welch_unagg": 241, "topomap_kw": 241, "fmin_fmax": 241, "timefreq": [241, 708], "20_sensors_time_frequ": [241, 244], "fpv": 242, "steadi": 242, "assr": 242, "norcia": 242, "picton": 242, "wet": [242, 864], "evgenii": [242, 888], "kalenkovich": [242, 888], "ttest_rel": 242, "bids_fnam": 242, "12hz": 242, "15hz": 242, "decai": 242, "stabil": [242, 448, 563, 574, 888], "bach": 242, "meigen": 242, "boxcar": [242, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 453, 481, 482, 867, 888], "n_overlap": [242, 265, 266, 267, 268, 481, 482, 710, 712, 727, 810], "snr_spectrum": 242, "noise_n_neighbor_freq": 242, "noise_skip_neighbor_freq": 242, "n_trial": [242, 429], "n_frequency_bin": 242, "increment": [242, 478, 563], "ON": 242, "averaging_kernel": 242, "mean_nois": 242, "apply_along_axi": 242, "psd_": 242, "edge_width": 242, "pad_width": 242, "constant_valu": 242, "drastic": [242, 277, 888], "reappear": 242, "grand": [242, 470, 870, 888], "floor": [242, 426, 593, 736, 739], "ceil": [242, 731], "psds_plot": 242, "snr_mean": 242, "snr_std": 242, "stim_freq": 242, "i_bin_12hz": 242, "1st": [242, 649], "i_bin_24hz": 242, "i_bin_36hz": 242, "i_bin_15hz": 242, "i_bin_30hz": 242, "i_bin_45hz": 242, "i_trial_12hz": 242, "i_trial_15hz": 242, "roi_vi": 242, "o9": 242, "o10": 242, "picks_roi_vi": 242, "hotel": 242, "snrs_target": 242, "69365541718619": 242, "wait": [242, 260, 265, 847, 855, 888], "snrs_12hz": 242, "snrs_12hz_chaverag": 242, "tstat_roi_vs_scalp": 242, "985902": 242, "693655": 242, "000067": 242, "Such": [242, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 298, 299, 481, 482, 648, 708, 711, 843, 869, 870], "somewher": [242, 481, 482, 809, 852, 871], "unintend": 242, "preregist": 242, "peopl": [242, 847, 858, 869, 888], "detour": 242, "snrs_roi": 242, "freq_plot": 242, "color_plot": 242, "darkblu": [242, 481, 482, 809], "darkgreen": 242, "mediumblu": 242, "seagreen": 242, "xpos_plot": 242, "stim_12hz_tmp": 242, "stim_15hz_tmp": 242, "snr_tmp": 242, "yerr": 242, "stim_12hz_snrs_": 242, "ihz": 242, "stim_15hz_snrs_": 242, "strike": 242, "tstat_12hz_trial_stim": 242, "stim_12hz_snrs_12hz": 242, "stim_12hz_snrs_15hz": 242, "tstat_12hz_trial_1st_harmon": 242, "stim_12hz_snrs_24hz": 242, "stim_12hz_snrs_30hz": 242, "tstat_12hz_trial_2nd_harmon": 242, "stim_12hz_snrs_36hz": 242, "stim_12hz_snrs_45hz": 242, "tstat_15hz_trial_stim": 242, "stim_15hz_snrs_12hz": 242, "stim_15hz_snrs_15hz": 242, "tstat_15hz_trial_1st_harmon": 242, "stim_15hz_snrs_24hz": 242, "stim_15hz_snrs_30hz": 242, "tstat_15hz_trial_2nd_harmon": 242, "stim_15hz_snrs_36hz": 242, "stim_15hz_snrs_45hz": 242, "000037": 242, "000014": 242, "000297": 242, "000024": 242, "006525": 242, "tour": [242, 888], "overli": 242, "stim_bandwidth": 242, "window_length": 242, "window_snr": 242, "i_win": 242, "this_spectrum": 242, "windowed_psd": 242, "windowed_freq": 242, "stimfreq": 242, "bin_width": 242, "skip_neighbor_freq": 242, "n_neighbor_freq": 242, "windowed_snr": 242, "boxplot": 242, "stochast": [242, 245, 563], "window_start": 242, "greyscal": 242, "optimist": 242, "serious": [242, 870], "50_ssvep": [242, 244], "auto_tutorials_tim": 244, "alphabet": [245, 847, 888], "fiorenzo": [245, 563], "artoni": [245, 563], "magazin": [245, 413], "962275": 245, "stephan": [245, 413], "bonnet": [245, 413], "marco": [245, 413], "congedo": [245, 413], "jutten": [245, 413], "riemannian": [245, 413], "multimedia": [245, 413], "mmsp": [245, 413], "5662067": [245, 413], "barber": [245, 356], "51814": [245, 356], "www": [245, 356, 452, 489, 578, 847, 867], "staff": [245, 356, 853], "brml": [245, 356], "becker": [245, 668], "albera": [245, 668], "comon": [245, 668], "gribonv": [245, 668], "fleureau": [245, 668], "guillotel": [245, 668], "merlet": [245, 668], "sissi": [245, 668], "august": [245, 668], "anthoni": [245, 563], "terrenc": [245, 563], "sejnowski": [245, 563, 593], "deconvolut": [245, 563, 593], "1129": [245, 563, 593], "1159": [245, 563, 593], "1995": [245, 405, 563, 593, 870], "neco": [245, 563], "anna": [245, 661, 888], "rita": [245, 661], "bentivoglio": [245, 661], "bressman": [245, 661], "cassetta": [245, 661], "donatella": [245, 661], "carretta": [245, 661], "pietro": [245, 661], "tonali": [245, 661], "alberto": [245, 661], "albanes": [245, 661], "disord": [245, 661], "1028": [245, 661], "870120629": [245, 661], "berg": [245, 870], "scherg": [245, 870], "1994": [245, 530, 870], "90113": [245, 870], "quentin": [245, 888], "anderson": [245, 888], "arindam": 245, "banerje": 245, "kenji": 245, "fukumizu": 245, "24th": 245, "1288": 245, "pmlr": 245, "apr": 245, "mlr": 245, "v130": 245, "bertrand21a": 245, "ryota": [245, 413], "tomioka": [245, 413], "lemm": [245, 413], "motoaki": [245, 413], "kawanab": [245, 413], "msp": [245, 413], "4408441": [245, 413], "fred": 245, "bookstein": 245, "thin": 245, "plate": 245, "585": 245, "24792": 245, "oleg": 245, "burdakov": 245, "bori": 245, "merkulov": 245, "lith": 245, "\u00f6": 245, "ping": 245, "yilun": [245, 356], "chen": [245, 356], "ami": [245, 356], "wiesel": [245, 356], "yonina": [245, 356], "eldar": [245, 356], "alfr": [245, 356, 863], "hero": [245, 356], "shrinkag": [245, 356, 413, 420, 421, 564, 888], "mmse": [245, 356], "5016": [245, 356], "5029": [245, 356], "2053029": [245, 356], "contributor": [245, 851, 854, 866, 867, 869, 876, 888], "readthedoc": 245, "octob": [245, 668], "ronald": [245, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 708, 711], "crochier": [245, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 708, 711], "lawrenc": [245, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 571, 708, 711], "rabin": [245, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 708, 711], "multir": [245, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 708, 711], "englewood": [245, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 708, 711], "cliff": [245, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 708, 711], "nj": [245, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 708, 711], "605162": [245, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 708, 711], "adrian": [245, 271, 276], "guggisberg": 245, "erik": [245, 888], "edward": 245, "findlai": 245, "ryan": [245, 577, 888], "canolti": 245, "mitchel": 245, "berger": 245, "barbaro": 245, "heidi": 245, "kirsch": 245, "1686": 245, "sereno": [245, 870], "1006": [245, 692, 870], "nimg": [245, 692, 870], "0395": [245, 870], "arthur": [245, 530, 737, 740], "liu": [245, 530], "buckner": [245, 530], "lewin": [245, 530], "s0896": [245, 530], "6273": [245, 530], "81138": [245, 530], "jocn": 245, "darva": 245, "ermer": 245, "20171": 245, "salat": [245, 870], "andr\u00e9": [245, 870], "kouw": [245, 870], "makri": [245, 870], "florent": [245, 870], "s\u00e9gonn": [245, 870], "quinn": [245, 870, 888], "reson": [245, 870], "s69": [245, 870], "s84": [245, 870], "0396": 245, "tootel": 245, "intersubject": 245, "sici": 245, "1097": 245, "0193": 245, "hbm10": 245, "genoves": [245, 692], "nicol": [245, 692, 888], "lazar": [245, 413, 692], "supplementari": [245, 390], "neuroanatom": [245, 390], "esm": [245, 390], "art": [245, 390, 876], "3a10": [245, 390], "2fnature18933": [245, 390], "mediaobject": [245, 390], "41586_2016_bfnature18933_moesm330_esm": [245, 390], "s\u00f3nia": [245, 863], "gon\u00e7alv": [245, 863], "casper": [245, 863], "munck": [245, 863], "jeroen": [245, 863, 888], "verbunt": [245, 863], "fetsj": [245, 863], "bijma": [245, 863], "rob": [245, 863, 888], "heethaar": [245, 863], "vivo": [245, 863], "resist": [245, 863], "eit": [245, 863], "812164": [245, 863], "teon": [245, 862, 888], "lauri": [245, 862], "parkkonen": [245, 862], "\u00e4": [245, 421, 862], "inen": [245, 862], "fnin": [245, 862], "00267": [245, 862], "greischar": [245, 571], "cori": [245, 571], "burghi": [245, 571], "carien": [245, 571], "reekum": [245, 571], "daren": [245, 571], "jackson": [245, 571], "diego": [245, 571], "pizzag": [245, 571], "corrina": [245, 571], "mueller": [245, 571], "davidson": [245, 571], "electroencephalograph": [245, 571], "neuroinformat": 245, "fninf": 245, "00062": 245, "hne": [245, 421], "gari": [245, 690], "heiman": [245, 690], "houghton": [245, 690], "mifflin": [245, 690], "boston": [245, 256, 690, 875], "17028": [245, 690], "joerg": [245, 298], "hipp": [245, 298], "hawellek": 245, "maurizio": 245, "corbetta": 245, "marku": [245, 298], "siegel": [245, 298], "engel": [245, 298], "spontan": [245, 863], "3101": 245, "percept": [245, 298, 843, 864, 888], "aapo": [245, 563], "hyv\u00e4rinen": [245, 563], "761722": [245, 563], "toga": 245, "mazziotta": 245, "academ": 245, "san": 245, "b978": 245, "012693019": 245, "50012": 245, "bf02512476": [245, 530], "tkk": 245, "a559": 245, "helsinki": 245, "16463": 245, "kevin": [245, 737, 740], "jone": [245, 737, 740], "bernic": [245, 737, 740], "porjesz": [245, 737, 740], "chorlian": [245, 737, 740], "madhavi": [245, 737, 740], "rangaswami": [245, 737, 740], "chella": [245, 737, 740], "kamarajan": [245, 737, 740], "ajayan": [245, 737, 740], "padmanabhapillai": [245, 737, 740], "stimu": [245, 737, 740], "henri": [245, 737, 740], "begleit": [245, 737, 740], "deficit": [245, 737, 740], "diagnos": [245, 737, 740, 888], "alcohol": [245, 737, 740], "2128": [245, 737, 740], "jorg": 245, "jovicich": 245, "silvest": 245, "czanner": 245, "elizabeth": 245, "halei": 245, "andr": [245, 888], "kennedi": 245, "franz": 245, "schmitt": 245, "gregori": 245, "brown": [245, 545, 668], "macfal": 245, "antti": [245, 888], "ahonen": 245, "lain": 245, "claudia": [245, 870], "tesch": [245, 870], "3315": 245, "281163": 245, "zhou": [245, 413], "1990": [245, 413], "bf01129656": [245, 413], "philipp": 245, "lachaux": 245, "eugenio": 245, "rodriguez": [245, 888], "martineri": 245, "francisco": 245, "varela": 245, "synchroni": 245, "hbm4": 245, "attent": [245, 271, 276, 873], "ledoit": [245, 356], "wolf": [245, 356], "s0047": [245, 356], "259x": [245, 356], "00096": [245, 356], "te": [245, 563, 888], "girolami": [245, 563, 593], "subgaussian": [245, 563, 593, 888], "supergaussian": [245, 563, 593], "089976699300016719": [245, 563], "seok": [245, 863], "lew": [245, 863], "carsten": [245, 863], "wolter": [245, 863], "anwand": [245, 863], "macleod": [245, 863], "compart": [245, 257, 526, 843, 863, 873], "2878": [245, 863], "20714": [245, 863], "witzel": [245, 541, 665, 670], "8945": 245, "8950": 245, "10024": [245, 888], "lowri": [245, 690], "vassarstat": [245, 690], "bernard": [245, 668], "giusiano": [245, 668], "roehri": [245, 668], "b\u00e9nar": [245, 668], "kathryn": [245, 390], "mill": [245, 390], "6084": [245, 390], "m9": [245, 390], "figshar": [245, 390], "3498446": [245, 390], "molin": [245, 545, 668], "quantif": [245, 434, 545, 668, 854], "thirtieth": [245, 301], "asilomar": [245, 301], "1207": [245, 301], "1996": [245, 301], "issn": [245, 301], "1058": [245, 301, 697], "6393": [245, 301], "acssc": [245, 301], "599135": [245, 301], "paul": [245, 870, 888], "748978": [245, 870], "ali": [245, 737, 740], "moukadem": [245, 737, 740], "zi": [245, 737, 740], "bouguila": [245, 737, 740], "djaffar": [245, 737, 740], "ould": [245, 737, 740], "abdeslam": [245, 737, 740], "alain": [245, 737, 740], "dieterlen": [245, 737, 740], "lisbon": [245, 737, 740], "6952743": [245, 737, 740], "mourtazaev": [245, 405], "1093": [245, 405], "suresh": [245, 568], "muthukumaraswami": [245, 568], "00138": [245, 568], "ndiay": 245, "fercoq": 245, "salmon": 245, "sugiyama": 245, "luxburg": 245, "guyon": 245, "garnett": 245, "curran": 245, "inc": [245, 847, 852], "nip": [245, 476], "cc": [245, 476, 869], "6405": 245, "holm": [245, 577, 697], "primer": [245, 697], "ou": 245, "bai": 245, "wheaton": 245, "sherri": 245, "vorbach": 245, "hallett": 245, "2292": 245, "2307": 245, "zieh": 245, "aloi": 245, "schl\u00f6gl": 245, "kr\u00e4mer": 245, "brismar": 245, "robustli": 245, "physrevlett": 245, "234101": 245, "hilla": [245, 395], "paananen": [245, 395], "jyrki": [245, 395], "5281": [245, 395, 862], "zenodo": [245, 395, 862], "889234": [245, 395], "reilli": [245, 391, 864, 888], "mayada": [245, 391, 864], "elsabbagh": [245, 391, 864], "infant": [245, 391, 888], "117682": [245, 391, 864], "thom": [245, 863], "oostendorp": [245, 863], "delbek": [245, 863], "dick": [245, 863], "stegeman": [245, 863], "vitro": [245, 863], "1487": [245, 863], "880100": [245, 863], "oppenheim": [245, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 708, 711], "schafer": [245, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 708, 711], "buck": [245, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 708, 711], "prentic": [245, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 708, 711], "hall": [245, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 708, 711], "saddl": [245, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 708, 711], "river": [245, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 708, 711], "754920": [245, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 708, 711], "roberto": [245, 530, 870], "pascual": [245, 530, 870], "marqui": [245, 530, 870], "martha": [245, 530, 870], "koukkou": [245, 530, 870], "kieko": [245, 530, 870], "kochi": [245, 530, 870], "bernd": [245, 530, 870], "saletu": [245, 530, 870], "hideaki": [245, 530, 870], "tanaka": [245, 530, 870], "koichi": [245, 530, 870], "hirata": [245, 530, 870], "lesli": [245, 530, 870], "prichep": [245, 530, 870], "rolando": [245, 530, 870], "biscai": [245, 530, 870], "lirio": [245, 530, 870], "toshihiko": [245, 530, 870], "kinoshita": [245, 530, 870], "tomographi": [245, 530, 843, 870, 888], "royal": [245, 356, 530, 870], "1952": [245, 530, 870], "3768": [245, 530, 870], "3784": [245, 530, 870], "rsta": [245, 530, 870], "0081": [245, 530, 870], "donald": 245, "perciv": 245, "walden": 245, "35532": 245, "cbo9780511622762": 245, "dinh": [245, 888], "tuan": 245, "pham": 245, "hermitian": 245, "1136": 245, "1152": 245, "s089547980035689x": 245, "luca": [245, 599], "pollonini": [245, 599], "cristen": [245, 599], "homer": [245, 599], "abaya": [245, 599], "heather": [245, 599], "bortfeld": [245, 599], "beauchamp": [245, 272, 276, 280, 599, 814], "oghalai": [245, 599], "cochlear": [245, 599], "implant": [245, 599], "ernesto": 245, "pereda": 245, "ricardo": 245, "bru": 245, "\u00f1": 245, "maest": 245, "\u00fa": 245, "dog": 245, "056011": 245, "2552": 245, "aacfe4": 245, "sanchez": [245, 391], "meek": [245, 391], "wanz": [245, 391], "xie": [245, 391], "hat": [245, 538, 574, 668, 701, 702, 870, 888], "brittani": 245, "stedelin": 245, "alessandra": 245, "mantovani": 245, "ahm": 245, "raslan": 245, "swann": 245, "3897": 245, "21105": 245, "joss": 245, "03897": 245, "noam": [245, 579], "pele": [245, 579], "00694": [245, 579], "abraham": [245, 265, 266, 267, 268, 481, 482], "savitzki": [245, 265, 266, 267, 268, 481, 482], "marcel": [245, 265, 266, 267, 268, 481, 482], "golai": [245, 265, 266, 267, 268, 481, 482, 888], "chemistri": [245, 265, 266, 267, 268, 481, 482], "1627": [245, 265, 266, 267, 268, 481, 482], "1639": [245, 265, 266, 267, 268, 481, 482], "1964": [245, 265, 266, 267, 268, 481, 482], "ac60214a047": [245, 265, 266, 267, 268, 481, 482], "nathaniel": [245, 694], "marta": [245, 694], "12320": [245, 694], "corn": 245, "stam": 245, "daffertshof": 245, "diminish": 245, "1193": 245, "20346": 245, "luigi": [245, 737, 740], "rodino": [245, 737, 740], "bert": [245, 737, 740], "schulz": [245, 737, 740, 888], "wong": [245, 737, 740, 888], "pseudo": [245, 298, 299, 316, 737, 740], "american": [245, 737, 740], "1090": [245, 737, 740], "fic": [245, 737, 740], "2218": [245, 478], "2228": [245, 478], "tmi": [245, 478], "2553445": [245, 478], "evelina": 245, "busa": 245, "glessner": 245, "hybrid": 245, "1075": 245, "catherin": [245, 724, 734, 735, 738], "tallon": [245, 724, 734, 735, 738], "baudri": [245, 724, 734, 735, 738], "claud": [245, 724, 734, 735, 738], "delpuech": [245, 724, 734, 735, 738], "jneurosci": [245, 724, 734, 735, 737, 738, 740], "00722": [245, 724, 734, 735, 738], "minna": [245, 870], "huotilainen": [245, 870], "oili": [245, 870], "salonen": [245, 870], "00064": [245, 870], "niall": [245, 577], "118484": [245, 577], "nd": [245, 577], "timm": [245, 577], "119338": [245, 577], "bishop": [245, 356], "1467": [245, 356], "9868": [245, 356], "00196": [245, 356], "vinck": 245, "wingerden": 245, "franscesco": 245, "battaglia": 245, "cyriel": 245, "pennartz": 245, "1548": 245, "womelsdorf": 245, "pascal": 245, "fri": 245, "rhythmic": 245, "wehner": [245, 434], "modi": [245, 434], "children": [245, 256, 434, 873, 875], "wheat": [245, 737, 740], "pier": [245, 737, 740], "cornelissen": [245, 737, 740], "frost": [245, 737, 740], "hansen": [245, 737, 740], "phonologi": [245, 737, 740], "5229": [245, 737, 740], "5233": [245, 737, 740], "whitham": [245, 563], "sean": [245, 563], "fitzgibbon": [245, 563], "clark": [245, 563, 888], "loveless": [245, 563], "marita": [245, 563], "broberg": [245, 563], "angu": [245, 563], "wallac": [245, 563], "lilli": [245, 563], "hardi": [245, 563], "rik": [245, 563], "fronsko": [245, 563], "alyson": [245, 563], "pulbrook": [245, 563], "paralysi": [245, 563], "1877": [245, 563], "1888": [245, 563], "rei": [245, 476], "ram\u00edrez": [245, 476], "jason": [245, 476], "palmer": [245, 476], "bhaskar": [245, 476], "rao": [245, 476], "neuroelectromagnet": [245, 476], "sch\u00f6lkopf": [245, 476], "platt": [245, 476], "hoffman": [245, 476], "1505": [245, 476], "3089": [245, 476], "jun": [245, 668], "juliu": [245, 668, 888], "dewald": [245, 668], "april": [245, 668], "zhi": [245, 870, 888], "multilay": [245, 870], "moritz": [245, 413, 888], "wentrup": [245, 413], "buss": [245, 413], "921154": [245, 413], "jair": [245, 563, 888], "montoya": [245, 563, 888], "mart\u00ednez": [245, 563], "petr": [245, 563], "tichavsk\u00fd": [245, 563], "massoud": [245, 563], "babai": [245, 563], "zadeh": [245, 563], "nad\u00e8g": [245, 563], "thirion": [245, 563], "moreau": [245, 563], "latent": [245, 563, 803], "10169": [245, 563], "lectur": [245, 563, 872], "cham": [245, 563], "53547": [245, 563], "0_27": [245, 563], "pharmacologi": [245, 530, 870], "pubm": [245, 530, 870], "ncbi": [245, 530, 870], "nlm": [245, 530, 870], "nih": [245, 530, 870], "gov": [245, 530, 870], "12575463": [245, 530, 870], "encyclopedia": 245, "php": 245, "international_system_of_unit": 245, "oldid": 245, "982683558": 245, "googl": [246, 256, 821, 876, 888], "scholar": 246, "dec": [246, 754, 846], "1370": 246, "1640": 246, "health": 256, "r01": 256, "eb009048": 256, "eb006385": 256, "hd040712": 256, "ns044319": 256, "ns037462": 256, "ns104585": 256, "p41": 256, "eb015896": 256, "rr014075": 256, "foundat": [256, 869], "0958669": 256, "1042134": 256, "council": 256, "ystg": 256, "263584": 256, "676943": 256, "depart": 256, "fg02": 256, "99er62764": 256, "agenc": 256, "national": 256, "la": [256, 864, 875, 888], "recherch": [256, 875], "neuc": 256, "0002": 256, "idex": 256, "pari": [256, 888], "saclai": 256, "0003": 256, "summer": [256, 876, 888], "year": [256, 270, 405, 862, 869, 876], "amazon": 256, "grant": [256, 267, 268, 298, 299, 356, 360, 361, 371, 372, 373, 413, 420, 456, 457, 476, 478, 479, 541, 796, 847, 869, 888], "zuckerberg": 256, "eoss2": [256, 876], "eoss4": 256, "employe": [256, 869], "duti": [256, 869], "aalto": [256, 864, 875], "yliopiston": [256, 875], "perustieteiden": [256, 875], "korkeakoulu": [256, 875], "athinoula": [256, 864, 875], "martino": [256, 864, 875], "hospit": [256, 864, 875], "philadelphia": [256, 875], "donder": [256, 875], "behaviour": [256, 259, 510, 512, 875], "radboud": [256, 875], "school": [256, 875], "informatiqu": [256, 875], "automatiqu": [256, 875], "franzen": [256, 875], "universit\u00e4t": [256, 875], "graz": [256, 875], "macquari": [256, 864, 875], "massachusett": [256, 875], "planck": [256, 875], "f\u00fcr": [256, 875], "bildungsforschung": [256, 875], "uniwersytet": [256, 875], "humanistycznospo\u0142eczni": [256, 875], "washington": [256, 875], "aarhu": [256, 875], "universitet": [256, 875], "commissariat": [256, 875], "\u00e0": [256, 875], "\u00e9nergi": [256, 875], "atomiqu": [256, 875], "aux": [256, 875], "forschungszentrum": [256, 875], "j\u00fclich": [256, 875], "du": [256, 875], "cerveau": [256, 875], "moell": [256, 875], "\u00e9pini\u00e8r": [256, 875], "sant\u00e9": [256, 875], "m\u00e9dical": [256, 875], "technisch": [256, 875], "t\u00e9l\u00e9com": [256, 875], "exit": [257, 271, 472, 552, 847], "outfil": 257, "anon": 257, "keep_hi": [257, 265, 266, 267, 268, 481, 482, 483, 888], "n_dai": 257, "daysback": [257, 265, 266, 267, 268, 481, 482, 483], "anonymize_info": [257, 265, 266, 267, 268, 481, 482, 878, 888], "resav": 257, "projoff": [257, 888], "navigaton": 257, "show_opt": [257, 481, 482, 809], "dialog": [257, 265, 266, 267, 268, 481, 482, 809, 812, 853, 888], "allowmaxshield": 257, "filtord": [257, 481, 482, 809, 888], "iir": [257, 265, 266, 267, 268, 415, 424, 448, 449, 451, 452, 481, 482, 575, 576, 599, 662, 672, 721, 797, 809, 877, 888], "clamp": [257, 481, 482, 756, 809], "filterchpi": [257, 888], "head_shap": 257, "out_fnam": 257, "rotation_x": [257, 492], "compensatori": 257, "deg": [257, 583], "ecg_ch": [257, 492], "eog_ch": [257, 492, 888], "e31": [257, 492], "e63": [257, 492], "my_raw": 257, "quiet": [257, 265, 266, 711], "mne_process_raw": [257, 873], "in_raw": 257, "clean_raw": 257, "file_a": 257, "file_b": 257, "test_raw_sss": 257, "filters": 257, "tap": [257, 575, 576, 585, 586, 864], "rej": 257, "rej_grad": 257, "rej_mag": 257, "rej_eeg": 257, "rej_eog": 257, "bad_fnam": 257, "raw_event_fnam": 257, "tstart": [257, 272, 273, 276, 279, 280, 281, 575, 576, 585, 586, 588, 888], "qrsthr": 257, "qrs_threshold": [257, 575, 585, 588], "eog_l_freq": [257, 576], "eog_h_freq": [257, 576], "head_opac": [257, 472], "flash30": [257, 305, 870, 888], "noflash30": [257, 870], "flash5": [257, 305, 309, 870, 888], "multiecho": [257, 305, 309], "echo": [257, 305, 846, 852, 853, 870], "regist": [257, 309, 592, 744, 745, 746, 843, 869, 870], "noconvert": 257, "deprec": [257, 340, 473, 808, 878, 888], "unwarp": [257, 305, 870], "grad_unwarp": [257, 305, 870], "symlink": [257, 309, 311, 888], "flash_path": 257, "parameter_map": [257, 309, 870], "mef05": 257, "mef30": 257, "mef05_": [257, 305, 888], "mef30_": [257, 305, 888], "spin": [257, 309], "termin": [257, 845, 846, 847, 850, 851, 853, 858, 867, 878, 888], "kt2fiff": 257, "mkheadsurf": [257, 310], "topolog": [257, 310, 367, 412, 432, 463, 615, 644, 646, 836, 863, 888], "_sss": 257, "origin_out": 257, "autobad": 257, "maxst": 257, "buflen": 257, "st_buflen": 257, "st_corr": 257, "mv_tran": 257, "in_fnam": 257, "movecomp": 257, "mv_hp": 257, "hpistep": 257, "mv_hpistep": 257, "hpisubt": 257, "mv_hpisubt": 257, "nohpicon": 257, "linefreq": 257, "nooverwrit": 257, "mx_arg": 257, "sof": 257, "bmin": 257, "bash": [257, 846, 847, 852, 853, 858], "TO": 257, "1280": [257, 412, 519], "brainc": 257, "skullc": 257, "scalpc": 257, "homog": [257, 519, 863], "7mm": 257, "joblib": [257, 265, 266, 267, 268, 271, 272, 273, 275, 276, 279, 280, 281, 283, 356, 357, 359, 361, 416, 423, 426, 429, 430, 456, 469, 471, 481, 482, 521, 524, 525, 536, 537, 546, 547, 568, 575, 576, 650, 656, 659, 660, 661, 673, 695, 696, 697, 698, 699, 710, 712, 713, 714, 715, 716, 717, 718, 726, 727, 735, 736, 737, 738, 739, 788, 791, 810, 876, 888], "cp": [257, 853, 870, 888], "unicod": [257, 707, 888], "mri_watersh": [257, 311, 867, 870], "gcaatla": [257, 311, 867], "brain_atla": [257, 311], "preflood": [257, 311, 867], "brainmask": [257, 311, 867, 888], "fname2": 257, "parser": [258, 442, 888], "reaverag": 258, "category_nam": 258, "acq_dict": 258, "subav": 258, "subaverag": [258, 873], "__len__": [258, 259, 261, 262, 263, 265, 266, 270, 271, 274, 275, 289, 304, 481, 482, 529, 709, 710, 711, 743], "n_cat": 258, "delayed_lookup": 258, "acqp": 258, "mne_stim_channel_2": [258, 454, 455], "uint16": [258, 454], "sti014": [258, 454, 888], "sti016": [258, 454], "32768": [258, 412, 454], "mne_fix_stim14": [258, 454], "slight": [258, 888], "asynchroni": 258, "conds_data": 258, "n_epochs_out": 258, "n_annot": 259, "iso8601": 259, "delimit": 259, "bad_flux": 259, "bad_nois": 259, "meg0111": [259, 260, 265, 266, 267, 268, 270, 312, 329, 331, 361, 371, 415, 429, 434, 481, 482, 562, 563, 565, 579, 580, 581, 587, 591, 601, 603, 610, 642, 676, 694, 703, 708, 710, 711, 712, 716, 717, 718, 719, 721, 739, 780, 786, 787, 790, 792, 793, 800, 807, 810], "meg2563": 259, "meg1443": 259, "n_blink": 259, "yy": [259, 493], "______________": 259, "_________": 259, "anot": 259, "___________________": 259, "o_________": 259, "________________________": 259, "o______________": 259, "crash": [259, 888], "o________________________": 259, "bad_acq_skip": [259, 265, 266, 267, 268, 481, 482, 502, 584, 595, 888], "__add__": [259, 261, 262, 271, 272, 273, 276, 278, 279, 280, 281, 314, 708], "concatenc": 259, "with_ch_nam": 259, "__iter__": [259, 262, 265, 266, 270, 274, 289, 304, 529, 658, 710, 711, 743], "array_lik": [259, 260, 262, 263, 265, 266, 267, 268, 270, 274, 275, 284, 312, 314, 329, 331, 361, 370, 371, 413, 415, 420, 423, 426, 428, 429, 430, 434, 440, 479, 481, 482, 492, 506, 521, 526, 562, 563, 564, 565, 568, 572, 573, 574, 577, 578, 579, 580, 581, 584, 587, 591, 595, 601, 603, 609, 610, 645, 646, 662, 676, 686, 687, 690, 692, 693, 694, 702, 703, 708, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 724, 734, 738, 739, 756, 761, 772, 773, 780, 786, 787, 788, 790, 792, 793, 795, 796, 797, 798, 799, 800, 801, 802, 804, 806, 807, 808, 810, 811, 812, 816, 818], "use_orig_tim": [259, 888], "676071": 259, "shortstimulu": 259, "longstimulu": 259, "tabular": [259, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 708, 710, 711, 712], "on_miss": [260, 265, 266, 267, 268, 270, 285, 286, 318, 350, 351, 405, 440, 460, 481, 482, 708, 710, 711, 712, 789, 888], "preload_at_end": 260, "event_rep": [260, 265, 888], "raw_sfreq": [260, 266], "abstract": [260, 876], "meg2623": [260, 265, 266, 267, 268, 270, 312, 329, 331, 361, 371, 415, 429, 434, 481, 482, 562, 563, 565, 579, 580, 581, 587, 591, 601, 603, 610, 676, 694, 703, 708, 710, 711, 712, 716, 717, 718, 719, 721, 739, 780, 786, 787, 790, 792, 793, 800, 807, 810], "ptp": [260, 265, 266, 563, 565, 580], "40e": [260, 265, 266, 361, 563, 580, 581, 694], "zeroth": [260, 265, 888], "unproject": [260, 265, 522, 618], "postpon": [260, 265, 522, 618], "silent": [260, 265, 405, 596, 865, 888], "irrespect": [260, 265, 367, 432, 463, 615, 644, 646, 836, 870], "coincid": [260, 265], "my_epoch": 260, "compensation_grad": [260, 265, 266, 267, 268, 270, 480, 481, 482, 563, 708, 710, 711, 712], "__sub__": [261, 271, 272, 273, 276, 279, 280, 281, 708], "nfree": [262, 263, 873, 888], "eig": [262, 873], "eigvec": [262, 873], "eigenvector": [262, 870, 873], "__contains__": [262, 265, 266, 267, 268, 270, 274, 289, 304, 481, 482, 529, 563, 708, 710, 711, 712, 743], "as_diag": 262, "diagnois": 262, "fromkei": [262, 270, 274, 289, 304, 529, 743], "fig_svd": [262, 781], "1e13": [262, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 356, 360, 361, 413, 420, 422, 481, 482, 787, 790, 792, 794, 795, 817], "1e15": [262, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 356, 360, 361, 413, 420, 422, 481, 482, 787, 790, 792, 794, 795, 817], "pluss": [262, 265, 266, 267, 268, 274, 413, 420, 481, 482, 562, 563, 578, 708, 710, 712, 773, 788, 795, 799, 808, 811, 816, 818], "markeredgecolor": [262, 265, 266, 267, 268, 413, 420, 481, 482, 562, 708, 710, 712, 773, 788, 795, 811, 816, 818], "mask_po": [262, 265, 266, 267, 268, 274, 413, 420, 481, 482, 562, 563, 578, 708, 710, 712, 773, 788, 795, 799, 808, 811, 816, 818], "cloughtocher2dinterpol": [262, 265, 266, 267, 268, 274, 413, 420, 481, 482, 562, 563, 578, 708, 710, 712, 773, 788, 795, 799, 808, 811, 816, 818], "linearndinterpol": [262, 265, 266, 267, 268, 274, 413, 420, 481, 482, 562, 563, 578, 708, 710, 712, 773, 788, 795, 799, 808, 811, 816, 818], "encompass": [262, 265, 266, 267, 268, 274, 413, 420, 481, 482, 562, 563, 578, 708, 710, 712, 773, 788, 795, 799, 808, 811, 816, 818], "polygon": [262, 265, 266, 267, 268, 274, 413, 420, 481, 482, 562, 563, 578, 708, 710, 712, 773, 788, 795, 799, 808, 811, 816, 818, 822, 888], "hull": [262, 265, 266, 267, 268, 274, 413, 420, 481, 482, 562, 563, 578, 708, 710, 712, 773, 788, 795, 799, 808, 811, 816, 818, 888], "doc": [262, 265, 266, 267, 268, 274, 413, 420, 481, 482, 562, 563, 653, 708, 710, 712, 724, 734, 773, 788, 795, 799, 808, 811, 816, 818, 847, 867, 876, 888], "rightmost": [262, 265, 266, 267, 268, 274, 413, 420, 481, 482, 562, 563, 708, 710, 712, 788, 795, 799, 808, 811, 816], "mini": [262, 265, 266, 267, 268, 274, 413, 420, 481, 482, 562, 563, 708, 710, 712, 788, 795, 799, 808, 811, 816], "unrepresent": [262, 270, 274, 289, 304, 529, 743], "popitem": [262, 270, 274, 289, 304, 529, 743], "lifo": [262, 270, 274, 289, 304, 529, 743], "setdefault": [262, 270, 274, 289, 304, 529, 743], "khi2": 263, "mne_dipole_fit": [263, 888], "longitudin": 263, "qlong": 263, "qtran": 263, "\u03c7": 263, "dipolefix": [263, 456, 617, 878], "plot_amplitud": 263, "show_al": [263, 784], "highlight_color": [263, 784], "head_sourc": [263, 521, 784, 888], "glyph": [263, 273, 279, 281, 756, 772, 784, 815, 819, 821, 888], "cube": [263, 784, 888], "mri_rot": [263, 784], "figure3d": [263, 267, 268, 272, 273, 275, 276, 278, 279, 280, 281, 765, 772, 784, 791, 814, 815, 819, 826, 847, 865, 878], "600x600": [263, 772, 784], "get_head_surf": [263, 521, 784, 878, 888], "bdip": [263, 617, 888], "use_round": [263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 442, 481, 482, 708, 711], "pos_mni": 263, "n_po": [263, 344, 346, 474, 475, 798], "subdirectori": [263, 465, 756], "aspect_kind": 264, "combine_event_id": [265, 878], "id_numb": 265, "event_id_1": 265, "event_id_2": 265, "new_id_numb": 265, "programmat": 265, "lost": [265, 266, 267, 268, 443, 444, 445, 446, 481, 482, 845], "no_data": [265, 711], "equalized_count": [265, 711], "membership": [265, 266, 267, 268, 481, 482, 563, 708, 710, 711, 712, 888], "audio_left": [265, 266, 711], "name_1": [265, 266, 711], "name_2": [265, 266, 711], "likewis": [265, 266, 711, 869, 870], "eval": [265, 266, 711], "col_a": [265, 266, 711], "col_b": [265, 266, 711], "add_annotations_to_metadata": [265, 266], "annot_onset": [265, 266], "annot_dur": [265, 266], "annot_descript": [265, 266], "add_list": [265, 266, 267, 268, 481, 482, 708, 710, 711, 712], "force_update_info": [265, 266, 267, 268, 481, 482, 708, 710, 711, 712], "overwritten": [265, 266, 267, 268, 389, 481, 482, 483, 578, 596, 708, 710, 711, 712, 888], "memmap": [265, 266, 267, 268, 481, 482, 650, 655, 708, 710, 711, 712, 888], "resiz": [265, 266, 267, 268, 481, 482, 708, 710, 711, 712, 795, 888], "januari": [265, 266, 267, 268, 481, 482, 483, 873], "1\u02e2\u1d57": [265, 266, 267, 268, 481, 482, 483], "his_id": [265, 266, 267, 268, 270, 481, 482, 483], "birthdai": [265, 266, 267, 268, 270, 481, 482, 483, 888], "revert": [265, 266, 627, 835, 888], "channel_wis": [265, 266, 267, 268, 481, 482, 888], "parallel_backend": [265, 266, 267, 268, 271, 272, 273, 275, 276, 279, 280, 281, 283, 356, 357, 359, 361, 416, 423, 426, 429, 430, 456, 469, 471, 481, 482, 521, 524, 525, 536, 537, 546, 547, 568, 575, 576, 656, 659, 660, 661, 673, 695, 696, 697, 698, 699, 710, 712, 713, 714, 715, 716, 717, 718, 726, 727, 735, 736, 737, 738, 739, 788, 791, 810, 888], "workload": [265, 266, 267, 268, 481, 482], "x_a": [265, 266, 267, 268, 481, 482], "2u": [265, 266, 267, 268, 481, 482], "enevlop": [265, 266, 267, 268, 481, 482], "hint": [265, 266, 267, 268, 481, 482, 787], "projs_a": [265, 266, 267, 268, 481, 482], "proj_a": [265, 266, 267, 268, 481, 482], "projs_b": [265, 266, 267, 268, 481, 482], "proj_b": [265, 266, 267, 268, 481, 482], "_v": [265, 266, 267, 268, 888], "emphas": [265, 266, 267, 268], "legendr": [265, 266, 267, 268, 481, 482, 521, 572, 870], "by_event_typ": [265, 266, 888], "trim_mean": [265, 266], "low_bia": [265, 266, 267, 268, 418, 481, 482, 536, 537, 710, 712, 715, 718, 720, 726, 788], "undrop": [265, 266], "timeout": [265, 266], "forev": [265, 266, 888], "lenient": [265, 266], "drop_log_stat": [265, 266], "perc": [265, 266], "mintim": [265, 266, 436], "seek": [265, 266, 421, 436], "nonspati": [265, 266], "fmt": [265, 266, 267, 268, 443, 444, 446, 481, 482, 870, 888], "eeglabio": [265, 266, 443, 446, 481, 482, 888], "cart_to_eeglab": [265, 266, 443, 446, 481, 482], "5500m": [265, 266, 267, 268, 415, 424, 449, 451, 452, 481, 482], "reflect_limit": [265, 266, 267, 268, 451, 452, 453, 481, 482], "savgol_filt": [265, 266, 267, 268, 481, 482], "get_annotations_per_epoch": [265, 266], "epoch_annot": [265, 266], "only_data_ch": [265, 266, 267, 268, 270, 481, 482, 563, 708, 710, 711, 712], "alia": [265, 266, 267, 268, 278, 481, 482, 602, 754, 772, 809, 847, 888], "unitless": [265, 266, 267, 268, 481, 482, 870], "return_event_id": [265, 266, 622, 710, 711, 888], "respiratori": [265, 266, 267, 268, 481, 482, 560, 708, 710, 711, 712, 888], "excit": [265, 266, 267, 268, 270, 481, 482, 560, 708, 710, 711, 712, 870], "stereotact": [265, 266, 267, 268, 481, 482, 560, 561, 708, 710, 711, 712, 870, 888], "galvan": [265, 266, 267, 268, 481, 482, 560, 708, 710, 711, 712, 870, 888], "epoch_color": [265, 266, 786], "use_opengl": [265, 266, 481, 482, 563, 786, 803, 809, 888], "overview_mod": [265, 266, 481, 482, 563, 786, 803, 809, 888], "5th": [265, 266, 267, 268, 275, 481, 482, 786, 809], "1e2": [265, 266, 275, 481, 482, 786, 809], "20\u00b5v": [265, 266, 275, 481, 482, 786, 809], "ital": [265, 266, 267, 268, 481, 482, 786, 790, 794, 809, 873], "zen": [265, 266, 481, 482, 563, 786, 803, 809, 888], "selector": [265, 266, 267, 268, 481, 482, 786, 809, 812, 873, 888], "processor": [265, 266, 388, 481, 482, 563, 786, 803, 809], "pyopengl": [265, 266, 481, 482, 563, 786, 803, 809], "stylesheet": [265, 266, 481, 482, 563, 756, 786, 803, 809], "qdarkstyl": [265, 266, 481, 482, 563, 756, 786, 803, 809], "darkdetect": [265, 266, 481, 482, 563, 756, 786, 803, 809], "mne_qt_brows": [265, 266, 481, 482, 563, 786, 803, 809, 888], "mpl": [265, 266, 272, 273, 276, 279, 280, 281, 481, 482, 756, 786, 809, 814, 819], "tkagg": [265, 266, 481, 482, 786, 809], "f11": [265, 266, 481, 482, 786, 809], "set_browser_backend": [265, 266, 481, 482, 563, 786, 803, 809, 828, 878, 888], "magic": [265, 266, 481, 482, 563, 786, 803, 809, 845, 867], "qt5": [265, 266, 481, 482, 563, 786, 803, 809, 851], "n_max_plot": [265, 266, 785], "good_epoch": [265, 266, 787], "area_alpha": [265, 266, 267, 268, 481, 482, 810], "line_alpha": [265, 266, 267, 268, 481, 482, 810], "asd": [265, 266, 267, 268, 481, 482, 810], "idiom": [265, 266, 267, 268, 481, 482, 810, 847], "decibel": [265, 266, 267, 268, 276, 481, 482, 536, 710, 712, 788], "log\u2081\u2080": [265, 266, 267, 268, 481, 482, 693, 710, 712, 788], "ch_group": [265, 266, 267, 268, 481, 482, 812, 888], "to_spher": [265, 266, 267, 268, 481, 482, 812, 888], "n_ch_group": [265, 266, 267, 268, 481, 482], "n_pick": [265, 266, 267, 268, 481, 482, 610], "downward": [265, 266, 267, 268, 481, 482, 812], "plot_layout": [265, 266, 267, 268, 481, 482, 812, 878, 888], "layout_scal": [265, 266, 267, 268, 708, 769, 794, 817], "fig_background": [265, 266, 267, 268, 708, 794, 817], "canva": [265, 266, 267, 268, 708, 769, 794, 817, 870], "allow_dupl": [265, 266, 267, 268, 314, 342, 481, 482, 643, 888], "eeg061": [265, 266, 267, 268, 314, 342, 481, 482, 643], "eeg161": [265, 266, 267, 268, 314, 342, 481, 482, 643], "anti": [265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 822, 888], "reset_drop_log_select": [265, 266, 888], "meaningless": [265, 266], "split_siz": [265, 266, 481, 482], "2gb": [265, 266, 481, 482, 888], "split_nam": [265, 266, 481, 482, 888], "100mb": [265, 266, 481, 482], "partit": [265, 266, 361, 481, 482, 696, 870, 888], "schema": [265, 266, 481, 482], "fname_split": [265, 266, 481, 482], "bbac101d50176611136b": [265, 266, 267, 268, 481, 482], "setter": [265, 266, 481, 482], "on_unit_chang": [265, 266, 267, 268, 481, 482, 888], "eyetrack_po": [265, 266, 267, 268, 481, 482], "eyetrack_pupil": [265, 266, 267, 268, 481, 482], "set_meas_d": [265, 266, 267, 268, 481, 482, 888], "match_cas": [265, 266, 267, 268, 270, 481, 482, 888], "match_alia": [265, 266, 267, 268, 270, 481, 482, 888], "channel_loc_alias": [265, 266, 267, 268, 270, 481, 482], "make_dig_montag": [265, 266, 267, 268, 270, 314, 330, 332, 333, 334, 335, 336, 337, 338, 339, 341, 481, 482, 505, 870, 878, 888], "std_err": [265, 266], "mechan": [265, 266, 869], "1591": [265, 266], "juli": [265, 266], "rangeindex": [265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 708, 710, 711, 712], "timedeltaindex": [265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 708, 711], "elicit": [267, 481, 502, 625, 864], "__neg__": [267, 268, 272, 273, 276, 279, 280, 281], "negat": [267, 268, 272, 273, 276, 279, 280, 281], "evoked_neg": [267, 268], "prepend": [267, 268], "resum": [267, 268, 869], "mff": [267, 268, 335, 444, 445, 498, 626, 870, 888], "export_evokeds_mff": [267, 268, 444, 878, 888], "merge_grad": [267, 268, 794, 888], "unsort": [267, 268, 790], "weakest": [267, 268, 790, 888], "obscur": [267, 268, 790], "multiax": [267, 268, 790], "t_start": [267, 268, 790], "t_end": [267, 268, 790], "surf_map": [267, 268, 521, 791], "n_contour": [267, 268, 791], "turntabl": [267, 268, 472, 756, 772, 791], "unintent": [267, 268, 472, 772, 791], "mask_cmap": [267, 268, 708, 792], "mask_alpha": [267, 268, 708, 792], "do_mask": [267, 268, 792], "illeg": [267, 268, 793], "01d": [267, 268, 413, 420, 795], "set_posit": [267, 268, 795], "amplif": [267, 268, 298, 299, 356, 360, 361, 371, 372, 373, 413, 420, 456, 457, 476, 478, 479, 541, 796], "improperli": [267, 268, 298, 299, 356, 360, 361, 371, 372, 373, 413, 420, 456, 457, 473, 476, 478, 479, 541, 796, 888], "logger": [267, 268, 751, 753, 796], "_ave": [267, 268], "source_ori": [269, 873], "fiffv_mne_fixed_ori": [269, 873], "fiffv_mne_free_ori": [269, 873], "n_ori": 269, "source_rr": [269, 873], "n_sourc": [269, 298, 299, 413, 420, 458, 476, 478, 479], "nest": [270, 413, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 564, 753, 847], "fiffv_coil_meg": 270, "fiffv_eeg_ch": 270, "3x3": [270, 505, 530], "fiff_unit_t_m": 270, "fiff_unitm_non": 270, "ctfkind": [270, 873], "colcal": 270, "rowcal": 270, "save_calibr": [270, 873], "fiffv_point_eeg": [270, 873], "fiffc_vers": 270, "machid": [270, 873], "mac": 270, "usec": [270, 873], "he_level_raw": 270, "helium": 270, "helium_level": 270, "orig_file_guid": 270, "mea": 270, "creator": 270, "ncoil": 270, "hpi_coil": 270, "corr_coeff": 270, "coil_freq": 270, "dig_point": 270, "good_limit": 270, "dist_limit": [270, 278, 283, 346, 873, 888], "coord_tran": 270, "event_channel": 270, "mri_id": 270, "block_id": 270, "max_info": 270, "sss_info": 270, "max_st": 270, "sss_ctc": 270, "sss_cal": 270, "smartshield": [270, 888], "last_nam": 270, "first_nam": 270, "middle_nam": 270, "month": 270, "sex": [270, 888], "male": [270, 405], "femal": [270, 405], "handed": 270, "ambidextr": 270, "kilogram": 270, "command_lin": [270, 278], "tilt": [270, 492, 756, 870, 888], "subsystem": [270, 847], "meas_fil": 270, "mri_fil": 270, "roundtrip": [270, 888], "shh": 270, "working_dir": [270, 278], "xplotter": 270, "__setitem__": 270, "conflict": [271, 845, 847, 851, 888], "accuru": [271, 276], "m\u00b2": [271, 843], "versionad": [271, 711, 772], "outside_vertic": 271, "lie": [271, 870], "get_tri": 271, "label_tri": 271, "get_vertices_us": 271, "label_vert": 271, "n_label_vertic": 271, "icosahedr": [271, 362, 412, 468, 469], "morph_label": [271, 630, 878, 888], "div1": [271, 685], "div2": [271, 685], "split_label": [271, 878, 888], "mris_divide_parcel": [271, 685], "n_part": [271, 685], "fring": 271, "sens_data": [272, 273, 276, 279, 280, 281], "volvectorsourceestim": [272, 273, 276, 277, 280, 878, 888], "__div__": [272, 273, 276, 279, 280, 281], "__mul__": [272, 273, 276, 279, 280, 281, 708], "tstop": [272, 273, 276, 279, 280, 281], "bihemilabel": [272, 273, 276, 279, 280, 281, 447, 516, 517, 878], "pane": [272, 276, 280, 756, 814, 853], "n_color": [272, 273, 276, 279, 280, 281, 775, 814, 819, 820], "hot": [272, 273, 276, 279, 280, 281, 814, 819], "diverg": [272, 273, 276, 279, 280, 281, 756, 775, 814, 819, 820, 847], "viewer": [272, 273, 276, 279, 280, 281, 756, 814, 819, 843, 876, 888], "binar": [272, 273, 276, 279, 280, 281, 664, 666, 667, 756, 814, 819], "colorschem": [272, 273, 276, 279, 280, 281, 814, 819], "high_contrast": [272, 273, 276, 279, 280, 281, 756, 814, 819], "resort": [272, 276, 280, 814, 867], "devot": [272, 273, 276, 279, 280, 281, 814, 819], "occupi": [272, 273, 276, 279, 280, 281, 471, 657, 814, 819], "blend": [272, 273, 276, 279, 280, 281, 756, 775, 814, 819], "mip": [272, 273, 276, 279, 280, 281, 756, 814, 819], "surface_alpha": [272, 273, 276, 279, 280, 281, 756, 814, 819], "enclos": [272, 273, 276, 279, 280, 281, 756, 814, 819, 870, 888], "silhouette_alpha": [272, 273, 276, 279, 280, 281, 756, 814, 819], "silhouette_linewidth": [272, 273, 276, 279, 280, 281, 756, 814, 819], "time_label_s": [272, 273, 276, 279, 280, 281, 756, 814, 819], "freesurferoccipitalflattenedpatch": [272, 276, 280, 814], "openwetwar": [272, 276, 280, 814], "transform_data": [272, 273, 276, 279, 280, 281], "tmin_idx": [272, 273, 276, 279, 280, 281], "tmax_idx": [272, 273, 276, 279, 280, 281], "indicic": [272, 273, 276, 279, 280, 281], "data_t": [272, 273, 276, 279, 280, 281], "direction": [273, 279, 281], "vector_alpha": [273, 279, 281, 756, 819], "sane": [273, 279, 281, 819], "fiffv_proj_item_field": [274, 873], "compute_proj_": 274, "webp": [275, 888], "fidel": 275, "lang": [275, 888], "n_file": 275, "clearer": [275, 888], "add_custom_css": [275, 888], "add_custom_j": [275, 888], "javascript": [275, 888], "topomap_kwarg": [275, 807], "drop_log_ignor": [275, 888], "declutt": 275, "inverseoper": [275, 530, 531, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 813, 878, 888], "inverse_op": 275, "altogeth": 275, "stc_plot_kwarg": 275, "add_sys_info": 275, "sysinfo": 275, "sort_cont": [275, 888], "on_error": 275, "n_time_points_stc": 275, "remove_al": 275, "removed_index": 275, "open_brows": 275, "nanoamper": 276, "log_10": 276, "sum_k": [276, 870], "s_k": [276, 870], "subject_orig": [276, 279], "vertices_to": [277, 362], "pre_affin": 277, "sdr_morph": [277, 592, 744, 745, 746], "src_data": 277, "vol_morph_mat": 277, "affinemap": 277, "diffeomorphicmap": [277, 592, 744, 745, 746, 888], "stc_from": 277, "mri_spac": [277, 888], "nifti2": [277, 280, 281], "stc_to": 277, "nifti2imag": 277, "src_from": [277, 550], "monolith": 278, "fiffv_mne_surf_left_hemi": [278, 873], "fiffv_mne_surf_right_hemi": [278, 873], "fiffv_mne_surf_unknown": 278, "fiffv_coord_mri": [278, 873], "inus": [278, 873], "subject_his_id": [278, 362], "ntri": [278, 873], "nuse_tri": [278, 873], "pinfo": 278, "155295": 278, "155323": 278, "155330": 278, "864": 278, "patch_ind": 278, "n_src_remain": 278, "essenti": [278, 389, 863, 870, 873], "115407": 278, "nearest_dist": [278, 873], "mri_width": 278, "mri_height": 278, "mri_depth": 278, "neighbor_vert": 278, "mri_ras_t": 278, "fiffv_mne_coord_ra": 278, "src_mri_t": [278, 888], "vox_mri_t": 278, "fiffv_mne_coord_mri_voxel": 278, "mri_volume_nam": 278, "seg_nam": 278, "include_surfac": 278, "include_discret": 278, "dest": [278, 280, 281, 742], "use_lut": [278, 888], "mne_analyz": [278, 673, 771, 853, 864, 876, 888], "4x4": [278, 505, 659, 660, 661, 673], "subvolum": [280, 281, 888], "upsampl": [280, 281, 447, 453], "trilinear": [280, 281, 447], "ensnur": [280, 281, 447], "bg_img": [280, 281, 820, 888], "initial_po": [280, 281, 820], "nutmeg": [280, 281, 820], "spatialimag": [280, 281, 305, 473, 590, 592, 744, 745, 746, 820], "src_sampl": [280, 281, 820], "stc_vol_sampl": [280, 281, 820], "vl": [280, 635], "save_as_volum": [280, 281, 888], "pick_channels_forward": [285, 286, 878], "evoked_templ": 285, "apply_forward_raw": [285, 878, 888], "zlogratio": [288, 546, 547, 708, 711, 816], "data_sc": 288, "apply_dics_epoch": [290, 291, 293, 878, 888], "meaningfulli": 291, "quadrant": 291, "apply_d": [291, 292, 293, 878, 888], "borgiotti": [298, 299], "kaplan": [298, 299], "\u03b8i": [298, 299], "arguabl": [298, 299], "max_pow": [298, 299], "expon": [298, 299, 457, 476, 478, 479, 541], "compute_depth_prior": [298, 299, 458, 476, 478, 479, 541, 878, 888], "n_weight": 298, "src_type": [298, 299], "is_free_ori": [298, 299], "supplement": 298, "is_ssp": 299, "vec_stc": 299, "rework": [299, 888], "resmat": [300, 539, 540, 542, 545], "n_dipoles_lcmv": 300, "n_dipoles_fwd": 300, "mef": [305, 870], "mef05_001": 305, "mef30_001": 305, "flash5_img": [305, 309], "dig_kind": [307, 308, 432, 888], "origin_head": 307, "origin_devic": 307, "exclude_front": [308, 432], "n_pt": 308, "convert_flash_mri": [309, 870, 878, 888], "no_decim": 310, "watersh": [311, 864, 888], "autorecon1": [311, 867, 888], "idx_by_typ": 312, "read_dig_captrak": [314, 327, 330, 334, 335, 336, 337, 338, 339, 870, 878, 888], "read_dig_dat": [314, 330, 333, 335, 336, 337, 338, 339, 493, 870, 878, 888], "read_dig_egi": [314, 327, 330, 333, 334, 336, 337, 338, 339, 870, 878, 888], "read_dig_hpt": [314, 330, 333, 334, 335, 336, 338, 870, 878, 888], "read_dig_localit": [314, 327, 333, 334, 335, 336, 337, 339, 878, 888], "add_estimated_fiduci": [314, 888], "acpc": 314, "ch_po": [314, 327], "remove_fiduci": [314, 888], "circumst": [314, 442, 888], "x_max": 315, "y_min": 315, "y_max": 315, "my_layout": 315, "keep_stim": 316, "combined_inst": 316, "native_head_t": 318, "equalized_inst": [319, 438], "ch_adjac": [320, 331], "use_c": 322, "sq20483n": [322, 481], "3023": [322, 481, 870], "sq20483": [322, 481], "3024": [322, 481, 870], "sq20950n": [322, 481], "upgrad": [322, 481, 888], "ch_indic": 323, "bg_imag": 323, "reserv": [323, 847, 869, 888], "make_grid_layout": [323, 328, 878], "neighbor_nam": 324, "builtin": [324, 325, 756, 847, 888], "heurist": 326, "capit": [326, 888], "periauricular": [327, 870], "n_point": [327, 341, 367, 432, 484, 506, 621], "n_hpi": 327, "compute_dev_head_t": [327, 878, 888], "fs_tal": [327, 514, 743], "ctf_head": [327, 514, 743], "ctf_meg": [327, 514, 743], "viewport": [328, 481, 482, 809], "generate_2d_layout": [328, 329, 757, 878], "n_col": [329, 563, 709, 711, 782, 802, 888], "95mm": 330, "eloc": 332, "sfp": [332, 888], "besa": [332, 623, 888], "bvef": [332, 888], "095m": 332, "weakli": 332, "eg": [332, 888], "captrak": [333, 888], "xml": [333, 335, 445, 626, 870, 888], "bvct": [333, 870, 888], "compumed": [334, 493, 870], "eeg001": 336, "eeg002": 336, "hpt": [337, 870], "filepath": [337, 339, 706, 756], "digitz": 337, "pound": [337, 870], "auricular": [337, 870, 873], "signifi": [337, 563], "6729": 337, "3873": 337, "3671": 337, "6782": 337, "5228": 337, "3127": 337, "3976": 337, "2363": 337, "4493": 337, "8450": 337, "3601": 337, "6828": 337, "8518": 337, "0697": 337, "0829": 337, "3744": 337, "6297": 337, "1376": 337, "7352": 337, "7756": 337, "8676": 337, "0439": 337, "9297": 337, "6852": 337, "4881": 337, "2969": 337, "4939": 337, "localit": [338, 888], "read_polhemus_fastscan": [339, 878, 888], "on_header_miss": [341, 888], "fastscan": [341, 506, 870], "t_step_min": [343, 344, 345], "t_window": [343, 345, 349, 573], "interf": [343, 345, 349], "_setup_hpi_amplitude_fit": 343, "disambigu": 343, "t_step_max": 344, "too_clos": 344, "adjust_dig": [344, 346], "\u03b4t": 344, "veloc": [344, 567], "chpi_snr": 345, "snr_mag": 345, "power_mag": 345, "resid_mag": 345, "snr_grad": 345, "power_grad": 345, "resid_grad": 345, "gof_limit": 346, "quat": [346, 352, 747, 749], "q1": [346, 481, 482, 747, 749], "q2": [346, 747, 749], "q3": [346, 481, 482, 747, 749], "monitor": [347, 870, 873], "hlc001": 347, "hlc002": 347, "hlc003": 347, "rawkit": [348, 506], "include_lin": 349, "t_step": 349, "allow_line_onli": [349, 888], "hpi_freq": 351, "n_coil": 351, "hpi_pick": 351, "hpi_on": 351, "head_pos_to_trans_rot_t": [353, 354, 659, 660, 661, 673, 878], "all_evok": 355, "keep_sample_mean": 356, "ledoit_wolf": [356, 888], "factor_analysi": 356, "store_precis": 356, "assume_cent": 356, "shrikag": 356, "iter_n_compon": 356, "emprici": 356, "redund": [356, 870, 888], "on_rank_mismatch": [360, 371, 372], "orth": [360, 888], "implicitli": [360, 425, 595, 863, 870], "resultingmorph": 362, "vertices_from": 362, "vert_rh": 362, "vert_lh": 362, "mris_left_right_regist": 362, "epochs_list": [363, 436], "add_offset": 363, "events_list": [365, 888], "event_list": [365, 888], "on_defect": [367, 432, 463, 615, 644, 646, 836, 888], "read_fiduci": [367, 878, 888], "canon": [367, 488, 756, 772, 862, 888], "quantiti": [367, 593, 869, 870], "lpa_weight": 367, "rpa_weight": 367, "hsp_weight": 367, "eeg_weight": 367, "hpi_weight": 367, "set_fid_match": 367, "set_grow_hair": 367, "hair": 367, "set_rot": 367, "rot": [367, 747, 749], "set_scal": 367, "sca": 367, "scale_mod": 367, "set_transl": 367, "tra": 367, "fids_mri": 369, "coordinatesystem": [369, 870], "return_rank": 371, "return_color": [371, 466], "prepare_noise_cov": [371, 878, 888], "n_nonzero": 371, "1e11": 372, "1e5": 372, "fd": [373, 843], "reg_cov": 373, "fs_home": 374, "create_raw": 375, "ignore_config": 377, "env": [377, 461, 845, 847, 851, 855], "device_id": 378, "force_upd": [379, 380, 381, 382, 384, 385, 386, 388, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411], "update_path": [379, 380, 381, 382, 384, 385, 386, 388, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411], "mne_datasets_brainstorm_data_path": [379, 380, 381], "prompt": [379, 380, 381, 382, 384, 385, 386, 388, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 846, 850, 852, 858, 867], "base_url": [382, 405, 406], "getenv": 382, "foot": 382, "khanetal2018": 387, "dataset_param": 388, "check_vers": 388, "return_vers": 388, "auth": 388, "token": 388, "archive_nam": [388, 394], "folder_nam": [388, 394], "hash": [388, 394, 888], "config_kei": 388, "unzip": [388, 847], "untar": [388, 845], "decompress": 388, "authent": [388, 847], "usernam": [388, 847], "password": [388, 847], "httpdownload": 388, "012345": 388, "has_dataset": [388, 878, 888], "uncompress": 388, "cryptograph": 388, "sha256": 388, "19uheid": 388, "md5": 388, "upodh2io": 388, "dataset_nam": [388, 394, 888], "tar": [388, 845, 853], "12b75d1cb7df9dfb4ad73ed82f61094f": 388, "osf": 388, "86qa2": 388, "webpag": 390, "2wk": 391, "1mo": 391, "2mo": 391, "3mo": 391, "5mo": 391, "9mo": 391, "12mo": 391, "15mo": 391, "18mo": 391, "2yr": 391, "ants4": 391, "5month3t": 391, "subject_dir": 392, "fetch_dataset": [394, 878, 888], "\u00ecnt": 397, "mne_datasets_opml_path": 401, "edfx": [405, 406], "cassett": 405, "physionet_sleep_path": [405, 406], "temazepam": [405, 864, 878, 888], "telemetri": 406, "mild": 406, "asleep": 406, "mne_datasets_spm_data_path": 408, "n_triangl": 412, "quadric": 412, "30001": 412, "20480": 412, "cov_est": 413, "transform_into": [413, 420, 888], "average_pow": [413, 420], "cov_method_param": [413, 420, 421], "component_ord": [413, 888], "mutual_info": [413, 888], "csp_space": [413, 420], "mutual": [413, 498, 746], "simplif": 413, "mean_": [413, 420], "std_": [413, 420], "x_new": [413, 414, 415, 418, 420, 421, 424, 564], "n_features_new": [413, 414, 415, 418, 420, 421, 424, 564], "get_param": [413, 414, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 564], "subobject": [413, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 564], "name_format": [413, 420], "n_pattern": [413, 420], "set_param": [413, 414, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 564], "__": [413, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 564], "classes_": [414, 416, 417], "n_class": [414, 416, 417, 423, 429], "rtepoch": [415, 888], "temporalfilt": [415, 878, 888], "mne_realtim": [415, 880, 888], "base_estim": [416, 423, 888], "score_func": [416, 423, 563], "decision_funct": [416, 417, 423], "nd_featur": [416, 423], "n_slice": 416, "n_features_1": [416, 423], "n_features_2": [416, 423], "n_task": [416, 423], "clone": [416, 423, 845, 847, 855, 888], "n_target": [416, 417, 423, 430], "xt": [416, 423, 426], "283185307179586": 418, "nitim": [418, 720, 726, 788, 888], "n_signal": [418, 731, 733], "fit_intercept": [419, 425], "r2": 419, "edge_correct": [419, 425], "baseestim": [419, 427, 430], "return_filt": 421, "flank": 421, "spectal": 421, "sprectal": 421, "sorter_spec": 421, "x_ssd": 421, "with_mean": 422, "with_std": 422, "quantil": 422, "estimators_": 423, "filterestim": [424, 878, 888], "unsupervis": 427, "spatialfilt": 428, "_xdawntransform": 428, "features_shape_": 428, "objective_funct": 429, "leaveoneout": 429, "surrogate_tri": 429, "mean_spatial_filt": 429, "pre_dispatch": 430, "n_dimensional_featur": 430, "dispatch": 430, "explos": 430, "spawn": [430, 888], "lightweight": [430, 845], "n_score": 430, "attr": [431, 847], "get_fitting_dig": [432, 878], "extrema": [433, 590, 604], "orig_sfreq": 434, "weight_al": 434, "ignore_ref": [434, 525, 574, 584, 595], "return_map": 434, "mag_scal": [434, 574, 584, 595], "multipolar": [434, 573, 574, 584, 595], "fit_sphere_to_headshap": [434, 573, 574, 584, 595, 878, 888], "magenetomet": [434, 574, 584, 595], "pickup": [434, 574, 584, 595, 870], "0168": [434, 574, 584, 595], "sp": 434, "old_event_id": 435, "new_event_id": 435, "safeti": [435, 855], "collat": 437, "ancillari": 437, "union": [437, 454, 563, 596], "myevent": 437, "last_myev": 437, "first_": 437, "event_typ": 437, "respet": 437, "slash": [440, 843, 888], "n_new_ev": 441, "aa": 442, "dd": [442, 493, 888], "ee": 442, "gg": 442, "syncstatu": 442, "99998": 442, "neuroscan": [442, 870, 888], "mffpy": [445, 888], "xml_file": 445, "physical_rang": [446, 481, 482], "add_ch_typ": [446, 481, 482], "vmrk": [446, 481, 482, 613, 864, 888], "edflib": [446, 481, 482, 888], "f_pass": 448, "f_stop": 448, "return_copi": 448, "ellipt": 448, "gpass": 448, "gstop": 448, "weren": 448, "triag": [448, 707], "fs1": 449, "fs2": [449, 452], "fstop": 449, "max_tri": 450, "mt_bandwidth": [452, 481, 482], "centr": [452, 481, 482, 545], "xf": 452, "chronux": 452, "partha": 452, "mitra": 452, "hemant": 452, "bokil": 452, "oxford": [452, 847], "upfirdn": 453, "find_stim_step": [454, 878, 888], "00000101": 454, "0000111": 454, "0100101": 454, "0000101": 454, "0000010": 454, "pad_start": 455, "pad_stop": 455, "whichev": [455, 457, 774], "v_from": 455, "v_to": 455, "min_dist": 456, "rhoend": 456, "fmin_cobyla": 456, "limit_depth_ch": [457, 888], "combine_xyz": 457, "gk": 457, "frobeniu": 457, "depth_prior": 457, "compute_orient_prior": [457, 878], "orient_prior": 458, "fwd_out": [459, 460], "restrict_forward_to_stc": [459, 878, 888], "restrict_forward_to_label": [460, 878, 888], "raise_error": 461, "config_path": 462, "mnemn": 462, "mgz_fname": 466, "atlas_id": [466, 628], "read_freesurfer_lut": [466, 878, 888], "labels_aseg": 467, "spatio_temporal_tris_adjac": [468, 878, 888], "all_inst": 470, "grown": 471, "territori": 471, "invad": 471, "broadcast": 471, "guess_mri_subject": 472, "head_high_r": 472, "scrollabl": 472, "orient_to_surfac": 472, "scale_by_dist": 472, "mark_insid": 472, "advanced_rend": 472, "head_insid": 472, "launch": [472, 551, 845, 847, 851, 853, 888], "movabl": 472, "splitter": 472, "qt4": 472, "unnecessari": [472, 489, 496, 504, 863, 865], "wx": 472, "coregistrationui": 472, "base_imag": [473, 590, 888], "ct": [473, 590, 746, 888], "mr": [473, 746, 870, 876, 888], "intracranialelectrodeloc": 473, "unscal": [475, 888], "update_mod": 476, "bay": 476, "mackai": 476, "time_pca": 478, "dgap_freq": [478, 479, 888], "cd": [478, 847, 853, 867, 870, 888], "bcd": [478, 888], "dualiti": [478, 479, 888], "alpha_max": [478, 479], "epsilon": [478, 530], "alpha_spac": [479, 888], "alpha_tim": [479, 888], "raw_extra": 480, "orig_format": [480, 481, 482, 888], "buffer_size_sec": [480, 481, 482, 888], "orig_unit": 480, "unsplit": 480, "orig_nchan": 480, "nv": 480, "my_raw_object": 480, "subclass": 480, "_read_segment_fil": 480, "mult": 480, "time_slic": [481, 482], "rawfif": [481, 482], "crop_by_annot": [481, 482, 888], "data_fram": [481, 482], "quartil": [481, 482], "fix_mag_coil_typ": [481, 878, 888], "mne_fix_mag_coil_typ": 481, "load_bad_channel": [481, 482, 888], "bad_fil": [481, 482], "mne_mark_bad_channel": [481, 482], "europ": [481, 482], "lightgrai": [481, 482, 785, 809], "show_first_samp": [481, 482, 563, 803, 809], "eventloop": [481, 482, 809], "prj": [481, 482, 809], "secondari": [481, 482, 809], "stim_pick": [481, 482, 888], "supersampl": [481, 482], "optimum": [481, 482], "drop_small_buff": [481, 482], "gzip": [481, 482, 888], "projecton": [481, 482], "datetimeindex": [481, 482], "pickl": 484, "mrk_point": 484, "fiffv_coord_": [485, 514], "input_fnam": [488, 489, 493, 496, 497, 498, 504, 506, 508, 619, 621], "pos_fnam": 488, "add_head_tran": 488, "artemis123": [488, 870, 888], "utf8": [489, 496, 888], "bdf": [489, 496, 504, 870, 888], "rawedf": [489, 496, 888], "gdf": [489, 496, 504, 870, 888], "batteri": 489, "trigger_sign": 489, "htm": 489, "cms_bit": 489, "cms_high": 489, "boxi": [490, 870, 888], "rawboxi": 490, "vhdr_fname": 491, "heogl": 491, "heogr": 491, "veogb": 491, "vision": [491, 869, 888], "rawbrainvis": [491, 888], "pdf_fname": 492, "config_fnam": 492, "head_shape_fnam": 492, "sort_by_ch_nam": 492, "e64": 492, "rawbti": 492, "data_format": 493, "date_format": 493, "int16": 493, "int32": [493, 873], "numsampl": 493, "rawcnt": 493, "system_clock": 494, "clean_nam": [494, 888], "rawctf": 494, "curri": [495, 613, 888], "dap": [495, 613], "rs3": 495, "cdt": [495, 613, 888], "dpa": [495, 613], "cef": [495, 613], "rawcurri": 495, "export_raw": [496, 878, 888], "storag": [496, 650], "sao2": 496, "subsecond": 496, "uint16_codec": [497, 613, 619, 888], "montage_unit": [497, 619, 888], "codec": [497, 613, 619, 756], "latin1": [497, 613, 619], "raweeglab": [497, 888], "trev": 498, "e1": [498, 626], "e2": [498, 626], "e3": [498, 626], "rawegi": 498, "nxe": [499, 870], "raweximia": 499, "apply_offset": 500, "find_overlap": 500, "overlap_threshold": 500, "gap_descript": 500, "blink_l": 500, "blink_r": 500, "blink_both": 500, "raweyelink": 500, "data_nam": [501, 620, 624], "ft_datatype_raw": 501, "binfil": 503, "fil": [503, 864, 870, 888], "opmeg": 503, "rawfil": 503, "rawgdf": 504, "hitachi": [505, 888], "probe": [505, 888], "rawhitachi": 505, "3x5": 505, "etg": 505, "7000": 505, "d1": 505, "s2": 505, "d2": 505, "s3": 505, "d3": 505, "s4": 505, "d4": 505, "s5": 505, "d5": 505, "s6": 505, "d6": 505, "s7": 505, "d7": 505, "s8": 505, "ft7": 505, "tp7": 505, "laid": 505, "d8": 505, "s9": 505, "d9": 505, "s10": 505, "3x11": 505, "d10": 505, "s11": 505, "d11": 505, "s12": 505, "d12": 505, "s13": 505, "d13": 505, "s14": 505, "d14": 505, "s16": 505, "d16": 505, "s17": 505, "d17": 505, "s18": 505, "stim_cod": 506, "allow_unknown_format": [506, 621], "ricoh": [506, 621, 888], "laboratori": [506, 621], "neuroelectr": 507, "nedf": [507, 888], "rawnedf": 507, "nicolet": [508, 870, 888], "nihon": 509, "kohden": 509, "rawnihon": 509, "nirx": [510, 870, 888], "nosatflag": 510, "rawnirx": 510, "wlx": 510, "nosatflags_wlx": 510, "persyst": [511, 870, 888], "rawpersyst": 511, "snirf": [512, 888], "jnir": 512, "rawsnirf": 512, "indent": [513, 764], "read_limit": [513, 764], "max_str": [513, 764], "mne_show_fiff": 513, "mri_tal": [514, 743], "grow_outsid": 515, "hoc": [518, 854, 888], "standard_devi": 518, "write_bem_surfac": [519, 520, 614, 615, 863, 878, 888], "write_bem_solut": [520, 614, 615, 863, 878, 888], "relative_radii": 526, "radii": [526, 660], "csf": [526, 870], "replace_ev": [528, 888], "n_events_in": 528, "n_events_out": 528, "1111111111111111": [530, 531, 536, 537, 542, 546, 547], "prepare_inverse_oper": [530, 531, 532, 533, 534, 536, 537, 546, 547, 878, 888], "apply_inverse_tfr_epoch": [530, 531, 532, 533, 878, 888], "force_equ": [530, 888], "time_func": 533, "approx": [533, 870], "inv_split": [536, 537], "snr_est": 538, "unregular": 538, "tild": [538, 870, 888], "lambda_k": [538, 870], "gamma_k": [538, 870], "biggest": 538, "chi": 538, "normalis": [539, 540], "willb": [539, 540], "n_orient_inv": [539, 540, 542], "n_orient_fwd": [539, 540, 542], "pca_var": [539, 540], "mantl": [541, 870], "cog_err": 545, "graviti": 545, "cog": 545, "maxrad_ext": 545, "peak_amp": 545, "sum_amp": 545, "surf_nam": [549, 630], "mne_docs_kind": 551, "mne_docs_vers": 551, "grad_reject": 553, "mag_reject": 553, "eeg_reject": 553, "eog_reject": 553, "explanatori": [562, 610], "info_": 562, "intercept_": 562, "cumul": 563, "999999": [563, 888], "n_components_": [563, 888], "n_iter_": [563, 888], "pseudoinvers": [563, 574, 870, 888], "instabl": 563, "migrat": [563, 888], "debat": 563, "zca": 563, "tol_fastica": 563, "tol_picard": 563, "current_fit": 563, "unfit": 563, "pre_whitener_": 563, "pca_components_": 563, "pca_mean_": 563, "pca_explained_variance_": 563, "scrap": 563, "n_samples_": 563, "on_baselin": [563, 800, 888], "ummix": [563, 564], "reappli": [563, 800, 835, 888], "anymor": [563, 855, 888], "supra": [563, 565], "ecg_idx": 563, "kuiper": 563, "eog_idx": 563, "paralyz": 563, "threefold": 563, "farthest": 563, "msucl": 563, "ref_ica": 563, "ref_idx": 563, "baseraw": [563, 571, 878, 888], "unclean": 563, "pvaf": 563, "usecas": [563, 803], "plot_std": [563, 799, 801], "image_arg": [563, 708, 799, 801], "psd_arg": [563, 799, 801], "plot_ica_compon": [563, 878, 888], "topomap_axi": [563, 801], "image_axi": [563, 801], "erp_axi": [563, 801], "spectrum_axi": [563, 801], "variance_axi": [563, 801], "logarithm": [563, 801], "ass": [563, 802], "n_ica_compon": [563, 802], "sublabel": [563, 802], "score_sourc": [563, 888], "pearsonr": 563, "skew": 563, "correct_overlap": 564, "overlapp_correct": 564, "evokeds_": 564, "event_id_": 564, "correct_overlap_": 564, "n_event_typ": 564, "bad_perc": 565, "bad_peak": 565, "bad_flat": 565, "uncommon": 565, "sole": [566, 864, 869], "rotation_velocity_limit": 567, "translation_velocity_limit": 567, "use_dev_head_tran": [567, 888], "lm_cutoff": 571, "epoch_threshold": 571, "bw_method": 571, "intrins": 571, "hjorth": 571, "gaussian_kd": 571, "n_legendre_term": 572, "lap": [572, 652], "inst_csd": 572, "n_imbal": 573, "multipol": [573, 595], "bad_condit": [574, 584, 595], "extended_proj": [574, 584, 595], "ill": [574, 584, 595], "esss": [574, 584, 595, 876, 888], "n_meg": [574, 584], "n_moment": 574, "n_good_meg": 574, "reg_moment": 574, "n_use_in": 574, "dagger": 574, "phi": 574, "phi_in": 574, "data_meg_good": 574, "raw_ev": [575, 576], "avg_ref": [575, 576], "return_drop_log": [575, 576, 888], "ecg_ev": [575, 585, 588], "0005": [576, 867], "e0g": 576, "magentomet": 577, "quadratur": 577, "corrmapplugin1": 578, "categoris": 578, "preexist": 578, "dry": 578, "template_fig": 578, "labelled_": 578, "mag_pick": 579, "grad_pick": 579, "keep_ecg": [580, 888], "r_peak_events_arrai": 580, "doctest": 580, "thresh": [581, 586, 590, 604, 695, 696, 698, 699, 756], "interp_thresh": 582, "insts_bad": 582, "formerli": [582, 888], "px": 583, "l_x": 583, "r_pupil": 583, "noisy_ch": 584, "flat_ch": 584, "Their": [584, 847], "scores_flat": 584, "limits_flat": 584, "annotate_amplitud": [584, 595, 878, 888], "st_fix": [584, 595], "d_k": 584, "mu_d": 584, "sigma_d": [584, 870], "textrm": 584, "return_ecg": 585, "ch_ecg": [585, 588], "average_puls": [585, 588], "ecg_sourc": 588, "eog_sourc": 589, "max_peak_dist": 590, "voxels_max": 590, "use_min": 590, "hypointens": 590, "hyperintens": 590, "elec_imag": 590, "n_neighbor": 591, "pressur": 591, "craniotomi": 591, "reg_affin": [592, 744, 745, 746], "montage_warp": 592, "l_rate": 593, "w_chang": 593, "anneal_deg": 593, "anneal_step": 593, "n_subgauss": 593, "kurt_siz": 593, "ext_block": 593, "blowup": [593, 673], "blowup_fac": 593, "n_small_angl": 593, "use_bia": 593, "return_n_it": [593, 888], "kurtosi": 593, "unmixing_matrix": 593, "return_max_it": 593, "bad_limit": 594, "forth": 595, "relicens": 595, "permiss": 595, "certifi": 595, "seamless": 595, "vet": [595, 876], "abramowitz": 595, "stegun": 595, "us2006031038": 595, "us6876196": 595, "wo2005067789": 595, "wo2005078467": 595, "wo2006114473": 595, "lawyer": 595, "raw_er": 596, "from_raw": 596, "inject": 596, "raw_er_prepar": 596, "pathlength": [597, 888], "hemoglobin": [602, 888], "wherev": 602, "realtim": [603, 878, 888], "provision": 603, "x0": [604, 693], "peak_loc": 604, "peak_mag": 604, "nathanael": 604, "yoder": 604, "ncyoder": 604, "purdu": 604, "36900026": 604, "76007351": 604, "imb_cal": 606, "t_raw": 609, "t_other": 609, "realign": [609, 843, 888], "first_ev": 609, "n_picks_ref": 610, "epochs_no_av": 610, "epochs_clean": 610, "n_parcel": 612, "amrk": 613, "ahdr": [613, 888], "patch_stat": [615, 637], "s_id": 615, "eventtyp": 619, "trialinfo_column": 620, "trialinfo": [620, 888], "mne_browse_raw": [622, 873], "avr": [623, 888], "mul": [623, 888], "sidecar": 623, "timelock": 624, "write_labels_to_annot": [629, 630, 837, 878, 888], "annot_fnam": [630, 838], "ascend": [630, 797, 804, 867, 888], "lta": [631, 888], "mne_make_morph_map": [632, 873], "morph_map": 632, "left_map": 632, "right_map": 632, "asterisk": 635, "source_morph": 636, "return_dict": 638, "file_format": [638, 841], "voxels": [638, 841], "xra": [638, 841], "yra": [638, 841], "zra": [638, 841], "cra": [638, 841], "n_face": [638, 641, 841], "read_tri": [638, 841, 878], "return_al": 640, "fname_in": 641, "clockwis": [641, 761], "counterclockwis": [641, 873], "spcecifi": 642, "bem_nam": 644, "subjects_from": [644, 647], "ba3a": 645, "cfg": 645, "skip_fiduci": 646, "oserror": 646, "scale_bem": [646, 878, 888], "scale_label": [646, 878], "scale_source_spac": [646, 878], "src_name": 647, "my_source_spac": 647, "mne_sensitivity_map": 648, "ch_info": [649, 888], "drop_ref": [649, 888], "on_bad": 649, "cache_dir": 650, "output_format": 653, "howto": 653, "asctim": 653, "levelnam": 653, "notifi": [653, 847], "return_old_level": 654, "add_fram": [654, 751], "old_level": 654, "memmap_min_s": 655, "megabyt": 655, "single_volum": [657, 888], "ox": 657, "oi": 657, "iii": 657, "get_stim_channel": 658, "stim_data": 658, "add_chpi": [660, 661, 673, 878, 888], "inhomogen": 661, "poisson": 661, "stc_true": [663, 664, 665, 666, 667, 668, 669, 670], "stc_est": [663, 664, 665, 666, 667, 668, 669, 670], "ppe": 665, "dfrac": [665, 670], "sum_i": [665, 670], "s_i": [665, 670], "r_i": [665, 670, 870], "tp": [666, 667], "fn": 667, "2q": 668, "min_": [668, 870], "r_k": 668, "r_l": 668, "mathbb": 668, "dle": 668, "ed": [668, 888], "terminologi": 668, "actual_snr": 672, "sti001": 673, "allow_overlap": 675, "coo_matrix": [678, 679, 680, 681, 682, 683, 684, 688], "additit": 679, "remap_vertic": [681, 684], "reassign": [681, 684], "2n": [682, 683, 684, 870], "pval_correct": [686, 692], "n_bootstrap": 687, "spmatrix": [688, 695, 696, 698, 699], "n_ob": 688, "chan_adj": 688, "5600x5600": 688, "27076": 688, "compliant": [689, 876], "slowest": 689, "a2b2": 689, "greenhous": 689, "geisser": 689, "f_val": 689, "homoscedast": 690, "kruskal": 690, "walli": 690, "pvalu": 691, "yekuti": 692, "negcorr": 692, "n_regressor": 693, "choleski": [694, 870, 888], "n_cond": 694, "bx": 694, "enorm": 694, "overload": 694, "subepoch": 694, "n_predictor": 694, "time_window_length": 694, "t_power": [695, 696, 698, 699], "check_disjoint": [695, 696, 698, 699], "subarrai": 695, "kth": 695, "unconnect": [695, 696, 698, 699], "disjoint": [695, 696, 698, 699], "set_cache_dir": [695, 696, 698, 699, 878], "rv_continu": [695, 696, 698, 699], "untract": 697, "spatial_exclud": [698, 699], "p_thresh": 700, "equal_var": 702, "ball": 703, "volu": 703, "do_neighbor_vert": 705, "do_neighbor_tri": 705, "show_path": 707, "sy": [707, 851, 888], "power_baselin": 708, "frequency_window": 708, "read_tfr": [708, 711, 741, 878, 888], "write_tfr": [708, 711, 730, 878], "csd_array_fouri": [709, 714, 715, 716, 717, 718, 878, 888], "csd_array_multitap": [709, 713, 714, 716, 717, 718, 878, 888], "csd_array_morlet": [709, 713, 715, 716, 717, 718, 878, 888], "as_cov": 709, "pack": 709, "pick_frequ": 709, "read_csd": [709, 878, 888], "getitem_epochspectrum_return": 710, "ci_alpha": [710, 712], "read_spectrum": [710, 712, 878], "latex": [710, 712], "pertin": 711, "12676": 711, "getitem_spectrum_return": 712, "sixth": 712, "subscript": 712, "freq_indic": 712, "half_nbw": 720, "kmax": 720, "sym": [720, 888], "nw": 720, "half_bw": 720, "bw": 720, "f0": 720, "tridiagon": 720, "jw": 721, "jnw": 721, "tx": 723, "n_step": [723, 731, 756], "_cycl": [724, 734, 735, 736, 738, 739], "desired_fwhm": [724, 734, 738], "morlet2": [724, 734], "sp_morlet": [724, 734], "this_fwhm": [724, 734], "wavelet_sp": [724, 734], "half_max": [724, 734], "n_taper": [726, 736], "get_window": [727, 810], "istft": [731, 732, 878, 888], "stftfreq": [731, 878], "epoch_data": [735, 736], "avg_power_itc": [735, 736], "power_": [735, 736], "tfr_array_multitap": [735, 737, 738, 739, 740, 878, 888], "tfr_array_stockwel": [735, 736, 738, 739, 740, 878, 888], "interrel": [735, 736, 738, 739, 854], "strive": [736, 739, 869], "finer": [736, 739, 888], "undermin": [736, 739], "intertri": [737, 740], "st_power": 737, "from_str": 743, "to_str": 743, "cval": [744, 888], "compute_volume_registr": [744, 745, 878, 888], "reg_img": 744, "trans2": 745, "niter": [746, 888], "starting_affin": [746, 888], "shear": 746, "affine_registr": 746, "rot_to_quat": [747, 878], "quat_to_rot": [749, 878], "contextlib": 750, "contextmanag": 750, "my_fnam": 750, "moin": 752, "pythondecoratorlibrari": 752, "sentenc": 752, "futurewarn": [752, 847, 888], "ignore_namespac": 753, "namespac": [753, 847, 878, 888], "travers": 753, "_funct": 754, "filler": 754, "5880": 754, "offscreen": 756, "subject_id": [756, 888], "buggi": 756, "soon": [756, 864, 869, 870], "add_skul": 756, "remove_data": 756, "remove_dipol": [756, 888], "remove_forward": [756, 888], "remove_head": 756, "remove_label": 756, "remove_annot": 756, "remove_sensor": 756, "remove_skul": 756, "remove_text": 756, "remove_volume_label": 756, "timeview": 756, "get_picked_point": 756, "geo": 756, "ctab": 756, "lh_ctab": 756, "rh_ctab": 756, "rbga": 756, "icefir": 756, "rocket": 756, "nvtx": 756, "thrown": [756, 888], "font": [756, 815], "add_scalar_bar": 756, "title_font_s": 756, "hex": [756, 780], "map_surfac": [756, 888], "n_coord": 756, "stereotax": 756, "coord_as_vert": 756, "1cm": 756, "subdir": 756, "reset_camera": [756, 824], "max_dist": 756, "justif": 756, "update_text": 756, "fill_hole_s": [756, 888], "hole": [756, 888], "dilat": 756, "apply_auto_sc": 756, "clear_glyph": 756, "cleanup": [756, 876], "widget": [756, 758, 888], "get_view": [756, 888], "zenith": [756, 824], "plot_time_cours": 756, "vertex_id": 756, "plot_time_lin": 756, "reset_view": 756, "restore_user_sc": 756, "bitrat": 756, "imageio": 756, "mov": 756, "interp1d": 756, "slinear": 756, "quadrat": 756, "n_frame": 756, "separate_canva": 756, "set_data_smooth": 756, "set_playback_spe": 756, "playback": 756, "set_tim": [756, 888], "set_time_interpol": 756, "set_time_point": 756, "time_idx": 756, "setup_time_view": 756, "rear": [756, 843], "time_interpol": 756, "toggle_interfac": 756, "toggle_playback": 756, "update_lut": 756, "imdata": 757, "cursor": [757, 888], "onclick": 757, "backend_bas": 757, "bg": [757, 759], "set_ratio": 759, "ax_im": 759, "node_nam": 761, "start_between": 761, "group_sep": 761, "n_node_nam": 761, "fname_1": 764, "fname_2": 764, "show_fiff": [764, 878, 888], "smooth_shad": [765, 822], "_render": 765, "undocu": 765, "backend_us": [766, 768], "gen": 769, "ch_dx": 769, "teal": 771, "onselect": [773, 818], "rectangleselector": [773, 818], "show_indic": 774, "show_orient": [774, 888], "halfwai": 774, "colorbarbas": 775, "polarax": 778, "type_snr": 779, "type_pow": 779, "type_resid": 779, "truncate_xaxi": [780, 888], "invert_i": 780, "unweight": 780, "inset": [780, 888], "n_evok": 780, "hexadecim": 780, "equal_spac": 789, "1f77b4": 797, "fscale": [797, 804], "alim": [797, 804], "pointsiz": 812, "bet": 812, "bluish": 813, "brain_color": [815, 888], "fig_numb": 815, "cone": 815, "axesimag": 818, "contourset": 818, "fieldlin": 818, "mixedvectorsourceestim": [819, 878, 888], "backend_nam": [821, 825, 827, 828], "old_backend_nam": [821, 825], "plot_evoked_field": [821, 878, 888], "link_brain": [821, 878, 888], "inlin": [821, 845, 851], "jupyterlab": 821, "colab": 821, "antialia": [822, 845], "depth_peel": 822, "multi_sampl": 822, "plot_epoch": [825, 847, 878, 888], "plot_ica_sourc": [825, 878, 888], "hide_sensor": 826, "dn": 826, "set_3d_backend": [827, 845, 878, 888], "hsv": 838, "table_nam": 838, "colort": 838, "create_stamp": 841, "vocabulari": [843, 871], "textual": [843, 888], "spindl": 843, "acronym": [843, 871], "definion": 843, "mv": [843, 888], "\u00b5m": 843, "od": 843, "dealt": 843, "synapt": 843, "intracellular": 843, "pyramid": [843, 870], "perpendicularli": 843, "erron": [843, 888], "peculiar": 843, "encapsul": [843, 870], "hcpmmp": [843, 888], "gave": [843, 888], "cartoon": 843, "pependicular": 843, "laser": 843, "ga": 843, "rubidium": 843, "superconduct": 843, "quantum": 843, "scaleogram": 843, "uncorrel": 843, "nb_conda_kernel": 845, "anaconda": [845, 847, 851, 852, 858, 888], "forum": [845, 846, 847, 850, 853, 854, 864, 866, 867, 868], "osmesa": 845, "xvfb": 845, "forg": [845, 847, 851, 855], "mesalib": 845, "latest": [845, 847, 855, 867, 888], "git": [845, 854], "miniconda": [845, 847], "miniforg": 845, "pythonpath": 845, "pythonhom": 845, "curl": [845, 847], "githubusercont": [845, 847], "unabl": [845, 869, 888], "nvidia": [845, 867], "driver": 845, "init_cuda": [845, 878], "pytest": [845, 847], "test_filt": 845, "multithread": [845, 867], "swr": 845, "cento": 845, "spyder": [845, 847, 850, 851, 867], "mesa_gl_version_overrid": 845, "rend": 845, "msaa": 845, "set_3d_opt": [845, 878, 888], "incomplet": [845, 876, 888], "prebuilt": 845, "xzvf": 845, "mesa_18": 845, "6_centos_lib": 845, "tgz": 845, "libgl_drivers_path": 845, "pwd": 845, "ld_library_path": 845, "went": [845, 846], "glxinfo": 845, "grep": [845, 847, 855], "uninstal": [845, 855], "gcp": 846, "travi": [846, 888], "virtualenv": 846, "8dfaa4a": 846, "bla": 846, "lapack": 846, "f614064": 846, "qtagg": 846, "post1": 846, "pyside6": 846, "traceback": 846, "modulenotfounderror": 846, "bashrc": [846, 852, 853], "zprofil": [846, 852], "zsh": [846, 852, 853], "troubleshoot": [846, 866, 868], "sustain": [847, 869], "volunt": 847, "welcom": 847, "anyon": [847, 869], "abid": 847, "fastest": [847, 853], "feel": [847, 854, 869, 888], "upstream": 847, "desktop": 847, "appreci": 847, "sudo": [847, 848, 853], "apt": [847, 848], "dmg": [847, 853], "atlassian": 847, "macport": [847, 853], "homebrew": [847, 853], "yourdomain": 847, "sooner": 847, "commit": [847, 869, 876, 888], "emac": 847, "vim": 847, "nano": 847, "subl": 847, "makefil": 847, "newest": 847, "guil": 847, "w32": 847, "ezwinport": 847, "path_to_git": 847, "mingw64": 847, "mnedev": 847, "path_to_anaconda": 847, "team": [847, 869], "yml": 847, "github_usernam": 847, "insert_your_actual_github_username_her": 847, "install_loc": 847, "opt": [847, 851, 852, 853], "blame": 847, "ignorerevsfil": 847, "rev": 847, "site_packag": 847, "requirements_test": 847, "requirements_doc": 847, "graphviz": 847, "graphviz_dot": 847, "conda_prefix": 847, "optipng": 847, "linter": 847, "restructuredtext": 847, "autobuild": 847, "doc8": 847, "url_of_remote_repo": 847, "nickname_of_remot": 847, "repo": [847, 869], "undoubtedli": 847, "checkout": 847, "colleagu": 847, "unstag": 847, "some_fil": 847, "some_new_fil": 847, "entireti": 847, "some_other_fil": 847, "bypass": [847, 888], "enh": 847, "some_testing_fil": 847, "new_tutorial_fil": 847, "stuck": 847, "secur": [847, 853], "secret": 847, "client": [847, 888], "test_evok": 847, "python_refer": 847, "rst": 847, "my_funct": 847, "my_new_funct": 847, "old_param": 847, "new_param": 847, "my_other_funct": 847, "depr_messag": 847, "changeset": 847, "minor": [847, 873, 876, 888], "typo": [847, 866, 888], "subsect": 847, "bugfix": [847, 855], "happi": 847, "credit": 847, "gh": [847, 888], "newcontrib": 847, "firstnam": 847, "lastnam": 847, "_your": 847, "test_topo": 847, "pep": 847, "ruff": 847, "hook": 847, "ins": 847, "camelcas": [847, 878], "snake_cas": 847, "nsampl": 847, "complic": [847, 888], "sphinxcontrib": 847, "bibtex": [847, 862], "citat": [847, 888], "bibliograph": 847, "bib": 847, "singleauthor2019": 847, "authoroneauthortwo2020": 847, "firstauthoretal2021a": 847, "firstauthoretal2021b": 847, "param_nam": 847, "test_docstring_paramet": 847, "mod": 847, "intersphinx": 847, "inventori": 847, "sphobjinv": 847, "dump": 847, "ext": 847, "backtick": [847, 867], "pdb": 847, "debugg": [847, 888], "failur": [847, 888], "test_io_evok": 847, "imit": 847, "noplot": 847, "regex_to_select_my_tutori": 847, "unrel": 847, "browse_raw": [847, 888], "mortem": 847, "pm": 847, "everyon": 847, "scientist": [847, 851, 866], "spare": 847, "streamlin": 847, "collabor": [847, 854, 869], "fruit": 847, "road": 847, "someon": 847, "occasion": [847, 864], "cosmet": 847, "backport": [847, 888], "whats_new": 847, "draft": 847, "wip": 847, "mrg": 847, "sty": 847, "azp": 847, "azur": 847, "exemplifi": 847, "tcsh": [848, 852, 853], "ubuntu": [848, 850, 853, 876], "bionic": 850, "beaver": 850, "1_0": 850, "intel": [850, 867], "catalina": [850, 852, 888], "appl": 850, "silicon": 850, "studio": [850, 851], "python_1": 850, "0_1": 850, "mamba": 851, "prioriti": 851, "h5io": [851, 867], "h5py": [851, 867], "pymatread": [851, 888], "vscode": 851, "microsoft": 851, "anaconda3": [851, 852], "pyqt5": 851, "pyqt": [851, 888], "pycharm": [851, 867], "paid": 851, "profession": 851, "cmd": 852, "bash_profil": 852, "__conda_setup": 852, "overflow": [852, 888], "leopard": 853, "powerpc": 853, "runtim": 853, "mne_convert_mne_data": 853, "mne_epochs2mat": [853, 873], "mne_raw2mat": 853, "mne_simu": 853, "xcode": 853, "xquartz": 853, "x11": 853, "libxt": 853, "dylib": 853, "bak": 853, "flat_namespac": 853, "netpbm": 853, "brew": 853, "app": 853, "nightli": [853, 888], "path_to_desired_install_loc": 853, "zxvf": 853, "path_to_archive_fil": 853, "pkg": 853, "untrust": 853, "privaci": [853, 869], "mne_root": [853, 870, 873, 888], "matlab_root": 853, "r2018b": 853, "undefin": 853, "mne_setup_sh": 853, "csh": 853, "mne_setup": [853, 873], "path_to_mn": 853, "path_to_matlab": 853, "emul": 853, "zshrc": 853, "cshrc": 853, "tcshrc": 853, "setenv": [853, 858], "mne_opengl_test": 853, "redraw": 853, "spent": 853, "revolut": 853, "interrupt": 853, "glx": 853, "nondirect": 853, "IT": 853, "vnc": 853, "card": [853, 888], "libxp": 853, "libxp6": 853, "debian": [853, 876, 888], "dpkg": 853, "libxp6_1": 853, "1ubuntu1_amd64": 853, "deb": 853, "libgfortran": 853, "libfortran": 853, "gnu": 853, "maxdepth": 853, "interoper": 854, "reimplement": 854, "cpp": [854, 888], "connectom": [854, 876], "compli": [854, 888], "alphacsc": 854, "pactool": 854, "microst": 854, "conpi": 854, "eelbrain": 854, "posthoc": 854, "prep": 854, "pyprep": 854, "sesam": 854, "sesameeg": 854, "invertmeeg": 854, "unix": [854, 888], "name_of_environ": 855, "fool": 855, "proof": 855, "old_mn": 855, "dep": 855, "hm": [858, 864], "pubsw": 858, "subscrib": 858, "modular": 859, "qt3d": 859, "babymeg": 859, "tmsi": 859, "refa": 859, "brainamp": 859, "ant": 859, "eegosport": 859, "gusbamp": 859, "sidebar": 862, "592483": 862, "gramfortetal2013a": 862, "gramfortetal2014": 862, "bibliographi": 862, "meg2443": 863, "vanish": 863, "advers": 863, "preliminari": 863, "stamp": 863, "mm2": 863, "ico5": 863, "tessel": [863, 873], "prerequisit": 863, "bulletproof": 863, "feasibl": 863, "sep": 863, "bem_sol": 863, "reestablish": 863, "corregistr": 863, "charg": 863, "photograph": 863, "uninterest": 863, "epilept": 863, "infrequ": 863, "hesit": [864, 867], "siemen": [864, 870], "sonata": 864, "mprage": [864, 867, 870], "interspers": 864, "lv": 864, "audvis_raw": 864, "auvi": 864, "agre": 864, "bst_rest": [864, 878], "khz": 864, "dicom": [864, 873, 888], "richli": 864, "timon": [864, 888], "9999": 864, "msr": 864, "retrospect": 864, "satisfactori": 864, "chin": 864, "respir": [864, 870, 873], "hypnogram": 864, "rechtschaffen": 864, "kale": 864, "erlangen": 864, "germani": 864, "shaft": [864, 876], "pend": 864, "craft": 864, "lrp": 864, "ern": 864, "neuroscientist": 865, "keystrok": 865, "peak_find": [865, 878, 888], "appnop": 867, "nope": 867, "nsappsleepdis": 867, "tempt": 867, "benfrederickson": 867, "dont": 867, "stackoverflow": 867, "21752259": 867, "write_": 867, "resid": 867, "plot_find_ecg_artifact": 867, "ordinarili": 867, "mkl": 867, "openmp": 867, "omp_num_thread": 867, "openblas_num_thread": 867, "num_cpu": 867, "implic": 867, "simplist": 867, "epochs_path": 867, "protrud": 867, "shrunken": 867, "dura": 867, "mri_norm": 867, "xopt": 867, "gentl": 867, "listserv": 867, "recon_al": 867, "autorecon2": 867, "autorecon3": 867, "formal": 869, "extraordinari": 869, "clarifi": [869, 888], "profit": 869, "entiti": [869, 873], "openli": 869, "affili": 869, "discours": 869, "behalf": 869, "barrier": 869, "leadership": 869, "neutral": 869, "tradition": [869, 870], "reward": 869, "benevol": 869, "dictat": 869, "defer": 869, "vote": 869, "deadlock": 869, "fork": 869, "disagre": 869, "deleg": 869, "appoint": 869, "successor": 869, "faith": 869, "director": 869, "ceo": [869, 888], "everydai": 869, "peer": 869, "privileg": 869, "servic": [869, 888], "scope": 869, "strateg": 869, "polici": [869, 888], "nomin": 869, "willing": 869, "capac": 869, "infrastructur": [869, 888], "outreach": 869, "deliber": 869, "divers": 869, "viewpoint": 869, "talent": 869, "grace": 869, "retir": 869, "eject": 869, "deem": 869, "harm": 869, "financi": 869, "employ": 869, "disclos": 869, "recus": 869, "themself": 869, "sparingli": 869, "apach": 869, "veto": 869, "rational": 869, "opinion": 869, "anticip": [869, 888], "suffic": 869, "usurp": 869, "countri": 869, "gift": 869, "partnership": 869, "approv": 869, "commenc": 869, "laps": 869, "pursu": 869, "monei": 869, "donor": 869, "umbrella": 869, "trademark": 869, "invit": 869, "waiv": 869, "copyright": 869, "mole": 870, "sensibl": 870, "femtotesla": 870, "typecast": 870, "unread": [870, 888], "electrocardiographi": 870, "electromyographi": 870, "celsiu": 870, "channels_3_and_4": 870, "boldsymbol": 870, "c_0": 870, "g_": 870, "infti": 870, "r_j": 870, "t_d": 870, "underbrac": 870, "b_": 870, "b_n": 870, "dotso": 870, "uc_n": 870, "constitut": 870, "orthonorm": 870, "c_e": 870, "complement": 870, "perp": 870, "uu": 870, "segonn": 870, "_brain_surfac": 870, "_inner_skull_surfac": 870, "_outer_skull_surfac": 870, "_outer_skin_surfac": 870, "availablili": 870, "fov": 870, "dcm2niix": 870, "mne_organize_dicom": 870, "flash05": 870, "fat32": 870, "mri_ms_fitparm": 870, "mri_synthes": 870, "fsl_rigid_regist": 870, "flash5_reg": 870, "cor": 870, "mri_make_bem_surfac": 870, "tringul": 870, "t_x": 870, "ti": 870, "mm3": 870, "hardli": 870, "mnitalairach": 870, "mni305": 870, "y_2": 870, "z_2": 870, "y_1": 870, "z_1": 870, "x_0": 870, "y_0": 870, "z_0": 870, "x_k": 870, "y_k": 870, "z_k": 870, "jk": 870, "9688": [870, 888], "0485": 870, "9189": 870, "t_1": 870, "s_1": 870, "s_n": 870, "t_2": 870, "filessepar": 870, "t_3": 870, "mghformat": 870, "t_4": 870, "hardcod": 870, "idiosyncrasi": 870, "conceiv": 870, "s_p": 870, "50mm": 870, "r_0": 870, "e_x": 870, "e_i": 870, "e_z": 870, "r_c": 870, "r_d": 870, "0d": 870, "n_k": 870, "w_": 870, "kp": 870, "sixteen": 870, "tm": [870, 873, 888], "centerpoint": 870, "mne_list_coil_def": 870, "3012": 870, "8mm": 870, "3013": 870, "4001": 870, "wh": 870, "4004": 870, "4005": 870, "5002": 870, "5003": 870, "5004": 870, "6001": 870, "nx": 870, "ny": 870, "nz": [870, 888], "r_1": 870, "dotsc": 870, "r_m": 870, "mu_1": 870, "mu_m": 870, "int_": 870, "v_": 870, "ly": 870, "average_forward_solut": [870, 878], "ensu": 870, "posteriori": 870, "viabl": 870, "3p": 870, "unconstrain": 870, "mx": 870, "smoother": [870, 888], "arriv": 870, "bigl": 870, "bigr": 870, "u_c": 870, "lambda_c": 870, "grg": 870, "possess": 870, "varepsilon_k": 870, "sigma_k": 870, "rout": 870, "superscript": 870, "v_k": 870, "w_k": 870, "propto": 870, "dimensionless": 870, "tendenc": 870, "divis": [870, 888], "2_k": 870, "g_i": 870, "u_": 870, "lambda_": 870, "_i": 870, "noiseless": 870, "misfit": 870, "pi_k": 870, "recolor": 870, "eigenfield": 870, "n_d": 870, "a_d": 870, "postsynapt": 870, "microscop": 870, "rigidli": 870, "floc": 870, "thereaft": 870, "vloc": 870, "favor": [870, 888], "1p": 870, "2p": 870, "l_": 870, "eff": 870, "w_i": 870, "x_i": 870, "c_y": 870, "l_i": 870, "w_1": 870, "w_2": 870, "l_1": 870, "l_2": 870, "supposedli": 870, "x_j": 870, "t_j": 870, "biject": 870, "smudg": 870, "n_j": 870, "prod_": 870, "kindli": 871, "function_nam": 871, "w3school": 872, "carpentri": 872, "lesson": 872, "fiff_": 873, "startup": 873, "mne_ex": 873, "fiff_setup_read_raw": 873, "fiff_read_raw_seg": 873, "fiff_find_evok": 873, "fiff_read_bad_channel": 873, "fiff_read_ctf_comp": 873, "fiff_read_evok": 873, "fiff_read_evoked_al": 873, "fiff_read_meas_info": 873, "fiff_read_mri": 873, "fiff_read_proj": 873, "fiff_read_raw_segment_tim": 873, "fiff_pick_channel": 873, "fiff_pick_channels_evok": 873, "fiff_pick_info": 873, "fiff_pick_typ": 873, "fiff_pick_types_evok": 873, "fiff_invert_transform": 873, "fiff_reset_ch_po": 873, "fiff_transform_eeg_ch": 873, "fiff_transform_meg_ch": 873, "fiff_define_const": 873, "fiff_dir_tree_find": 873, "fiff_list_dir_tre": 873, "fiff_make_dir_tre": 873, "fiff_open": 873, "fiff_read_named_matrix": 873, "fiff_read_tag": 873, "fiff_read_tag_info": 873, "fiff_split_name_list": 873, "fiff_end_block": 873, "fiff_end_fil": 873, "fiff_start_block": 873, "fiff_start_fil": 873, "fiff_write_ch_info": 873, "fiff_write_coord_tran": 873, "fiff_write_ctf_comp": 873, "fiff_write_dig_point": 873, "fiff_write_complex": 873, "fiff_write_complex_matrix": 873, "fiff_write_doubl": 873, "fiff_write_double_complex": 873, "fiff_write_double_complex_matrix": 873, "fiff_write_double_matrix": 873, "fiff_write_evok": 873, "repons": 873, "fiff_write_float": 873, "fiff_write_float_matrix": 873, "fiff_write_id": 873, "fiff_write_int": 873, "fiff_write_int_matrix": 873, "fiff_write_name_list": 873, "fiff_write_named_matrix": 873, "fiff_write_proj": 873, "fiff_write_short": 873, "fiff_write_str": 873, "fiff_finish_writing_raw": 873, "fiff_start_writing_raw": 873, "fiff_write_dig_fil": 873, "fiff_write_raw_buff": 873, "mne_add_coil_def": 873, "mne_load_coil_def": 873, "mne_compensate_to": 873, "mne_get_current_comp": 873, "mne_make_compens": 873, "mne_make_projector_info": 873, "mne_make_projector": 873, "mne_set_current_comp": 873, "mne_pick_channels_cov": 873, "mne_pick_channels_forward": 873, "mne_read_bem_surfac": 873, "mne_read_cov": 873, "mne_read_epoch": 873, "mne_read_ev": 873, "mne_read_forward_solut": 873, "mne_read_inverse_oper": 873, "mne_read_morph_map": 873, "mne_read_noise_cov": 873, "mne_read_source_spac": 873, "mne_write_cov": 873, "mne_write_cov_fil": 873, "mne_write_ev": 873, "mne_write_inverse_sol_stc": 873, "mne_write_inverse_sol_w": 873, "mne_read_stc_fil": 873, "mne_read_stc_file1": 873, "mne_read_w_fil": 873, "mne_read_w_file1": 873, "mne_write_stc_fil": 873, "mne_write_stc_file1": 873, "mne_write_w_fil": 873, "mne_write_w_file1": 873, "mne_read_label_fil": 873, "mne_write_label_fil": 873, "mne_label_time_cours": 873, "mne_read_curvatur": 873, "mne_read_surfac": 873, "mne_reduce_surfac": 873, "reducepatch": 873, "mne_write_surfac": 873, "mne_block_diag": 873, "mne_combine_xyz": 873, "mne_file_nam": 873, "mne_find_channel": 873, "mne_find_source_space_hemi": 873, "mne_fread3": 873, "mne_fwrite3": 873, "mne_make_combined_event_fil": 873, "mne_omit_first_lin": 873, "mne_setup_toolbox": 873, "mne_transform_coordin": 873, "mne_collect_transform": 873, "mne_transpose_named_matrix": 873, "mne_transform_source_space_to": 873, "mne_ex_average_epoch": 873, "mne_ex_cancel_nois": 873, "mne_ex_compute_invers": 873, "mne_ex_data_set": 873, "mne_ex_evoked_grad_amp": 873, "mne_ex_read_epoch": 873, "mne_ex_read_evok": 873, "mne_ex_read_raw": 873, "mne_ex_read_write_raw": 873, "mne_copy_processing_histori": 873, "revis": 873, "coil_geometry_inform": 873, "fiffb_meas_info": 873, "mne_compute_raw_invers": 873, "fiffv_meg_ch": 873, "fiffv_ref_meg_ch": 873, "fiffv_eef_ch": 873, "fiffv_mcg_ch": 873, "mcg": 873, "fiffv_stim_ch": 873, "fiffv_eog_ch": 873, "fiffv_emg_ch": 873, "fiffv_ecg_ch": 873, "fiffv_misc_ch": 873, "fiffv_resp_ch": 873, "fiffv_coord_unknown": 873, "fiffv_coord_devic": 873, "fiffv_coord_isotrak": 873, "fiffv_coord_hpi": 873, "fiffv_coord_mri_slic": 873, "fiffv_coord_mri_displai": 873, "fiffv_coord_dicom_devic": 873, "fiffv_coord_imaging_devic": 873, "fiffv_mne_coord_tufts_eeg": 873, "tuft": 873, "fiffv_mne_coord_ctf_devic": 873, "1001": 873, "fiffv_mne_coord_ctf_head": 873, "1004": 873, "fiffv_aspect_averag": 873, "fiffv_aspect_std_err": 873, "fiffv_aspect_singl": 873, "fiffv_aspect_subaverag": 873, "fiffv_aspect_altaverag": 873, "fiffv_aspect_sampl": 873, "fiffv_aspect_power_dens": 873, "fiffv_aspect_dipole_wav": 873, "fiffv_bem_surf_id_unknown": 873, "fiffv_bem_surf_id_brain": 873, "fiffv_bem_surf_id_skul": 873, "fiffv_bem_surf_id_head": 873, "fiffv_point_hpi": 873, "fiffv_point_ecg": 873, "fiffv_point_extra": 873, "fiffv_point_lpa": 873, "fiffv_point_rpa": 873, "fiffv_mne_meg": 873, "fiffv_mne_eeg": 873, "fiffv_mne_meg_eeg": 873, "fiffv_mne_unknown_cov": 873, "fiffv_mne_noise_cov": 873, "fiffv_mne_sensor_cov": 873, "fiffv_mne_source_cov": 873, "fiffv_mne_fmri_prior_cov": 873, "fiffv_mne_signal_cov": 873, "fiffv_mne_depth_prior_cov": 873, "fiffv_mne_orient_prior_cov": 873, "fiffv_proj_item_non": 873, "fiffv_proj_item_dip_fix": 873, "fiffv_proj_item_dip_rot": 873, "fiffv_proj_item_homog_grad": 873, "fiffv_proj_item_homog_field": 873, "fiffv_proj_item_eeg_avref": 873, "uint32": 873, "parent_id": 873, "nent": 873, "nchild": 873, "1970": [873, 888], "fiffv_coord": 873, "fiffv_mne_coord": 873, "fiff_point": 873, "num_point": 873, "char": [873, 888], "fv": 873, "struct": 873, "fiff_eeg_ch": 873, "coil_tran": 873, "eeg_loc": 873, "six": 873, "10unit_mul": 873, "fiffv_proj_item": 873, "fiffv_mne_proj_item": 873, "decalibr": 873, "row_cal": 873, "col_cal": 873, "tri_area": 873, "tri_cent": 873, "centroid": 873, "tri_nn": 873, "mne_add_patch_info": 873, "sol_grad": 873, "sing": 873, "eigen_lead": 873, "eigen_field": 873, "source_cov": 873, "cond1": 874, "cond2": 874, "addpath": 874, "pop_fileio": 874, "pop_eegfiltnew": 874, "pop_averef": 874, "pop_select": 874, "pop_runica": 874, "pop_binica": 874, "pop_compprop": 874, "comp_num": 874, "winhandl": 874, "comphead": 874, "pop_selectcomp": 874, "list_of_components_to_exclud": 874, "pop_epoch": 874, "eeg_epoch": 874, "pop_timtopo": 874, "pop_compareerp": 874, "eeg_epochs1": 874, "eeg_epochs2": 874, "pop_saveset": 874, "lfreq": 874, "hfreq": 874, "filtered_raw": 874, "bdfl": 875, "nutmegtrip": 876, "youtub": [876, 888], "cluster_based_statist": 876, "patsi": 876, "dmatric": 876, "4859": 876, "2852": 876, "openneuro": 876, "6687": 876, "adult": 876, "dcm": 876, "kymata": 876, "watch": 876, "bnci": 876, "horizon": 876, "pde": 876, "swig": 876, "ambit": 876, "useless": 876, "recruit": 876, "8221": 876, "rudimentari": 876, "crossspectrum": 876, "multitaperspectrum": 876, "6290": 876, "7671": 876, "8026": 876, "8724": 876, "9045": 876, "pr": 876, "6609": 876, "6629": 876, "6672": 876, "6673": 876, "8397": 876, "8892": 876, "mnefun": 876, "ptfce": 876, "mayavi": [876, 888], "7162": 876, "cloud": 876, "dask": 876, "czi": 876, "7751": 876, "docker": 876, "underscore_cas": 878, "themat": 878, "read_raw_curri": [878, 888], "read_raw_nedf": [878, 888], "read_mrk": 878, "get_meg_helmet_surf": 878, "get_volume_labels_from_src": [878, 888], "parse_config": 878, "read_evoked_besa": [878, 888], "read_evokeds_mff": [878, 888], "read_morph_map": [878, 888], "read_reject_paramet": 878, "write_label": 878, "export_epoch": [878, 888], "export_evok": [878, 888], "add_background_imag": 878, "compare_fiff": 878, "mne_analyze_colormap": 878, "plot_csd": 878, "plot_epochs_psd_topomap": [878, 888], "plot_evok": [878, 888], "plot_evoked_topomap": [878, 888], "plot_evoked_joint": [878, 888], "plot_ica_properti": [878, 888], "plot_ica_scor": [878, 888], "plot_ica_overlai": [878, 888], "plot_montag": [878, 888], "plot_raw_psd": [878, 888], "plot_regression_weight": [878, 888], "plot_volume_source_estim": [878, 888], "plot_tfr_topomap": [878, 888], "plot_topo_image_epoch": [878, 888], "get_3d_backend": [878, 888], "use_3d_backend": [878, 888], "close_3d_figur": 878, "close_all_3d_figur": 878, "get_browser_backend": [878, 888], "equalize_channel": [878, 888], "annotate_nan": [878, 888], "compute_fine_calibr": [878, 888], "compute_maxwell_basi": [878, 888], "ica_find_ecg_ev": 878, "ica_find_eog_ev": 878, "equalize_bad": [878, 888], "maxwell_filter_prepare_emptyroom": [878, 888], "read_eog_regress": 878, "realign_raw": [878, 888], "regress_artifact": [878, 888], "read_ica_eeglab": [878, 888], "read_fine_calibr": 878, "write_fine_calibr": 878, "short_channel": [878, 888], "project_sensors_onto_brain": [878, 888], "make_montage_volum": [878, 888], "warp_montag": [878, 888], "estimate_ringing_sampl": 878, "extract_chpi_locs_kit": [878, 888], "concatenate_ev": 878, "count_ev": [878, 888], "match_event_nam": [878, 888], "shift_time_ev": [878, 888], "match_channel_ord": 878, "pick_channels_cov": 878, "compute_whiten": [878, 888], "write_fiduci": 878, "locate_ieeg": [878, 888], "create_default_subject": [878, 888], "head_to_mni": 878, "head_to_mri": [878, 888], "read_lta": [878, 888], "apply_volume_registr": [878, 888], "apply_volume_registration_point": [878, 888], "add_source_space_dist": [878, 888], "decimate_surfac": [878, 888], "complete_surface_info": 878, "distance_to_bem": [878, 888], "compute_rank_invers": 878, "read_beamform": [878, 888], "grade_to_tri": 878, "grade_to_vertic": 878, "grow_label": [878, 888], "random_parcel": 878, "transform_surface_to": [878, 888], "get_decimated_surfac": [878, 888], "pick_channels_csd": 878, "dpss_window": [878, 888], "cwt": 878, "ttest_ind_no_p": [878, 888], "spatial_dist_adjac": [878, 888], "spatial_tris_adjac": [878, 888], "spatial_inter_hemi_adjac": [878, 888], "spatio_temporal_src_adjac": [878, 888], "spatio_temporal_dist_adjac": [878, 888], "select_source_in_label": 878, "psdestim": 878, "timefrequ": [878, 888], "open_doc": [878, 888], "set_log_fil": 878, "set_memmap_min_s": 878, "get_cuda_memori": 878, "set_cuda_devic": [878, 888], "11631": 888, "jacob": 888, "woessner": 888, "11469": 888, "sawradip": 888, "saha": 888, "11458": 888, "binn": 888, "11465": 888, "hyonyoung": 888, "shin": 888, "11366": 888, "11536": 888, "11470": 888, "ebert": 888, "scheltienn": 888, "11078": 888, "barth\u00e9lemi": 888, "11397": 888, "11401": 888, "11407": 888, "11166": 888, "11388": 888, "11556": 888, "11419": 888, "11430": 888, "11440": 888, "11436": 888, "microelectrod": 888, "11567": 888, "imwarp": 888, "transform_point": 888, "11572": 888, "11614": 888, "10554": 888, "11152": 888, "11632": 888, "11668": 888, "11679": 888, "qt6": 888, "aa_usehighdpipixmap": 888, "11662": 888, "florin": 888, "11479": 888, "stone": 888, "setuptool": 888, "11454": 888, "arn": 888, "pelzer": 888, "11666": 888, "timur": 888, "sokhin": 888, "11457": 888, "zvi": 888, "baratz": 888, "sanit": 888, "11399": 888, "splash": 888, "11398": 888, "11402": 888, "11421": 888, "11427": 888, "11441": 888, "11450": 888, "11489": 888, "inconsist": 888, "11473": 888, "11499": 888, "11409": 888, "11537": 888, "11562": 888, "11563": 888, "11521": 888, "11569": 888, "11502": 888, "gerster": 888, "11607": 888, "11612": 888, "11664": 888, "11623": 888, "11654": 888, "11683": 888, "11616": 888, "11500": 888, "aligned_ct": 888, "unalign": 888, "warp_montage_volum": 888, "pick_channels_evok": 888, "11665": 888, "11333": 888, "tooma": 888, "anij\u00e4rv": 888, "11237": 888, "11236": 888, "11241": 888, "jevri": 888, "repr": 888, "11357": 888, "11359": 888, "11096": 888, "11353": 888, "11283": 888, "11329": 888, "11375": 888, "hennei": 888, "11310": 888, "santeri": 888, "ruuskanen": 888, "11289": 888, "mauricio": 888, "cesped": 888, "tenorio": 888, "11235": 888, "hasegan": 888, "11245": 888, "dinara": 888, "issagaliyeva": 888, "jennif": 888, "behnk": 888, "hakimeh": 888, "aslsardroud": 888, "pavel": 888, "navratil": 888, "ear_left": 888, "ear_right": 888, "11255": 888, "11263": 888, "torr": 888, "ortiz": 888, "11351": 888, "enzo": 888, "altamiranda": 888, "reject_": 888, "11244": 888, "11303": 888, "11290": 888, "wrongli": 888, "11248": 888, "11258": 888, "erkka": 888, "heinila": 888, "outli": 888, "11298": 888, "11345": 888, "11311": 888, "11300": 888, "11340": 888, "11318": 888, "11346": 888, "11344": 888, "errantli": 888, "11347": 888, "11293": 888, "11322": 888, "11369": 888, "11361": 888, "nowadai": 888, "interp_from": 888, "interp_kind": 888, "11371": 888, "brayet": 888, "luka": 888, "hecker": 888, "omer": 888, "shubi": 888, "merk": 888, "11073": 888, "10656": 888, "10784": 888, "11011": 888, "11006": 888, "6233": 888, "10986": 888, "11048": 888, "8639": 888, "11083": 888, "11051": 888, "11020": 888, "11075": 888, "valerii": 888, "chirkov": 888, "electroderm": 888, "11090": 888, "11108": 888, "19080": 888, "11099": 888, "11077": 888, "11094": 888, "11095": 888, "11186": 888, "eduard": 888, "ort": 888, "11116": 888, "11147": 888, "11150": 888, "11185": 888, "11154": 888, "11141": 888, "11232": 888, "11159": 888, "11196": 888, "gemein": 888, "unlabel": 888, "11074": 888, "sebastiaan": 888, "mathot": 888, "11072": 888, "chetan": 888, "gohil": 888, "11004": 888, "carlstr\u00f6m": 888, "schad": 888, "11190": 888, "wetzel": 888, "11019": 888, "sena": 888, "11049": 888, "11084": 888, "11145": 888, "11182": 888, "11040": 888, "marian": 888, "dovgialo": 888, "11171": 888, "11181": 888, "11193": 888, "11102": 888, "11081": 888, "11191": 888, "6870": 888, "simeon": 888, "11197": 888, "11212": 888, "11203": 888, "11201": 888, "h\u00fcseyin": 888, "orkun": 888, "elma": 888, "deprecationwarn": 888, "11123": 888, "11050": 888, "show_toolbar": 888, "10184": 888, "skirt": 888, "add_channels_epoch": 888, "11180": 888, "11046": 888, "welzel": 888, "luzpaz": 888, "10974": 888, "ilia": 888, "machaira": 888, "10942": 888, "tziona": 888, "nessaiv": 888, "10922": 888, "mingjian": 888, "he": 888, "10736": 888, "jordan": 888, "drew": 888, "10632": 888, "courtemanch": 888, "10515": 888, "alessandro": 888, "tonin": 888, "10555": 888, "powel": 888, "10627": 888, "evan": 888, "hathawai": 888, "10615": 888, "10501": 888, "10460": 888, "10544": 888, "10720": 888, "10464": 888, "10699": 888, "10534": 888, "10568": 888, "10567": 888, "10533": 888, "10557": 888, "10591": 888, "10571": 888, "10587": 888, "10125": 888, "benerradi": 888, "10606": 888, "10610": 888, "10614": 888, "10611": 888, "10633": 888, "10661": 888, "10668": 888, "10681": 888, "timeformat": 888, "yyyi": 888, "_convert_tim": 888, "10674": 888, "kern": 888, "10694": 888, "10572": 888, "10373": 888, "10734": 888, "michiru": 888, "kaneda": 888, "10284": 888, "10749": 888, "10788": 888, "10892": 888, "10940": 888, "vref": 888, "10823": 888, "10979": 888, "_project_onto_surfac": 888, "return_nn": 888, "10930": 888, "10927": 888, "reza": 888, "nasri": 888, "hypnodyn": 888, "zmax": 888, "10754": 888, "frederik": 888, "weber": 888, "10718": 888, "t1t2": 888, "10639": 888, "toivonen": 888, "10217": 888, "wang": 888, "10517": 888, "10470": 888, "dold": 888, "10485": 888, "10487": 888, "10500": 888, "10491": 888, "10662": 888, "10866": 888, "10957": 888, "10513": 888, "10493": 888, "10504": 888, "10705": 888, "10521": 888, "10547": 888, "10543": 888, "10912": 888, "10560": 888, "10619": 888, "10618": 888, "shoorangiz": 888, "10638": 888, "10664": 888, "honor": 888, "10686": 888, "10685": 888, "10688": 888, "8754": 888, "10703": 888, "10730": 888, "10753": 888, "10765": 888, "po6": 888, "blender": 888, "10778": 888, "10802": 888, "10471": 888, "10851": 888, "10898": 888, "10990": 888, "10968": 888, "10936": 888, "10963": 888, "10978": 888, "10531": 888, "bilinear": 888, "set_interpol": 888, "10617": 888, "10715": 888, "10950": 888, "10925": 888, "10945": 888, "adelin": 888, "fecker": 888, "ciok": 888, "archit": 888, "singhal": 888, "ashlei": 888, "beaslei": 888, "dominiqu": 888, "makowski": 888, "hamid": 888, "maymandi": 888, "naveen": 888, "srinivasan": 888, "sondr": 888, "foslien": 888, "10396": 888, "10089": 888, "senwen": 888, "deng": 888, "10076": 888, "zerfowski": 888, "10054": 888, "etienn": 888, "montalivet": 888, "10174": 888, "veillett": 888, "10307": 888, "10281": 888, "9952": 888, "10379": 888, "9922": 888, "9978": 888, "9994": 888, "9929": 888, "concis": 888, "__repr__": 888, "10042": 888, "sosulski": 888, "10056": 888, "10077": 888, "10102": 888, "10058": 888, "10109": 888, "10115": 888, "10119": 888, "10114": 888, "10116": 888, "dpi": 888, "10126": 888, "10129": 888, "10135": 888, "10142": 888, "10166": 888, "10175": 888, "10182": 888, "10186": 888, "10185": 888, "9969": 888, "10019": 888, "10200": 888, "10255": 888, "10202": 888, "9972": 888, "10206": 888, "10220": 888, "10230": 888, "10249": 888, "10243": 888, "10212": 888, "ui": 888, "10222": 888, "10183": 888, "10247": 888, "10297": 888, "10299": 888, "10330": 888, "10384": 888, "10417": 888, "10418": 888, "10408": 888, "subsurfac": 888, "10421": 888, "joshua": 888, "teve": 888, "latin": 888, "10429": 888, "eberlein": 888, "10431": 888, "rawmff": 888, "10304": 888, "10361": 888, "shift_jist": 888, "10356": 888, "10093": 888, "adina": 888, "wagner": 888, "loadtxt": 888, "10189": 888, "federico": 888, "zamberlan": 888, "nikolai": 888, "chapochnikov": 888, "9957": 888, "led": 888, "9966": 888, "9998": 888, "9968": 888, "alphanumer": 888, "10002": 888, "9975": 888, "9980": 888, "9990": 888, "suboptim": 888, "9991": 888, "10004": 888, "9970": 888, "10021": 888, "10040": 888, "10358": 888, "10047": 888, "10399": 888, "10073": 888, "10087": 888, "annotate_": 888, "meas_tim": 888, "10067": 888, "10118": 888, "10074": 888, "10082": 888, "10112": 888, "trip": 888, "10177": 888, "10127": 888, "10132": 888, "10095": 888, "10176": 888, "stout": 888, "10210": 888, "10235": 888, "10267": 888, "german": 888, "de_d": 888, "french": 888, "fr_fr": 888, "italian": 888, "it_it": 888, "10277": 888, "10292": 888, "10309": 888, "10265": 888, "10415": 888, "initial_valu": 888, "10289": 888, "10324": 888, "10342": 888, "10347": 888, "10313": 888, "10400": 888, "10335": 888, "mislead": 888, "10393": 888, "10392": 888, "10401": 888, "9960": 888, "10039": 888, "10348": 888, "annotate_flat": 888, "10143": 888, "max_ori_out": 888, "10366": 888, "10323": 888, "tempita": 888, "10211": 888, "julia": 888, "guiomar": 888, "niso": 888, "gal\u00e1n": 888, "steve": 888, "matindi": 888, "hartmann": 888, "julien": 888, "derollepot": 888, "xiaokai": 888, "xia": 888, "bannier": 888, "darin": 888, "erat": 888, "sleiter": 888, "gate": 888, "evgeni": 888, "goldstein": 888, "riessariu": 888, "stargardski": 888, "9801": 888, "9575": 888, "nirsport2": 888, "9348": 888, "9401": 888, "9376": 888, "9430": 888, "9481": 888, "9637": 888, "9872": 888, "9782": 888, "9858": 888, "9640": 888, "6888": 888, "9892": 888, "9725": 888, "ckdtree": 888, "9568": 888, "9643": 888, "9369": 888, "9427": 888, "9391": 888, "9396": 888, "9424": 888, "9403": 888, "9463": 888, "9431": 888, "9443": 888, "9406": 888, "9438": 888, "datablock": 888, "acquist": 888, "9437": 888, "raimondo": 888, "9445": 888, "9419": 888, "9458": 888, "9444": 888, "9503": 888, "9484": 888, "9697": 888, "9468": 888, "9514": 888, "erica": 888, "9541": 888, "9519": 888, "9525": 888, "9529": 888, "9558": 888, "9555": 888, "9553": 888, "insens": 888, "9544": 888, "9556": 888, "9578": 888, "9570": 888, "9545": 888, "9540": 888, "9601": 888, "9605": 888, "abort": 888, "9614": 888, "9516": 888, "9618": 888, "9658": 888, "9585": 888, "9682": 888, "9684": 888, "9789": 888, "9694": 888, "9586": 888, "9742": 888, "9796": 888, "9763": 888, "9784": 888, "9810": 888, "revamp": 888, "9754": 888, "9847": 888, "9860": 888, "9861": 888, "9862": 888, "9863": 888, "9871": 888, "9881": 888, "9891": 888, "9795": 888, "9800": 888, "9613": 888, "9845": 888, "9851": 888, "9869": 888, "9859": 888, "9687": 888, "9708": 888, "9706": 888, "9378": 888, "9381": 888, "9712": 888, "9719": 888, "chronolog": 888, "9765": 888, "9849": 888, "9897": 888, "9920": 888, "9384": 888, "9404": 888, "9435": 888, "9531": 888, "9447": 888, "assertionerror": 888, "9612": 888, "9831": 888, "protect": 888, "9522": 888, "9485": 888, "9513": 888, "9489": 888, "9524": 888, "9603": 888, "9528": 888, "imposs": 888, "9893": 888, "9535": 888, "9564": 888, "9565": 888, "9629": 888, "9771": 888, "9607": 888, "9663": 888, "9630": 888, "9580": 888, "9758": 888, "dollar": 888, "9695": 888, "9746": 888, "9799": 888, "9804": 888, "9777": 888, "9780": 888, "9933": 888, "9864": 888, "9873": 888, "9940": 888, "9867": 888, "9904": 888, "pysurf": 888, "kit2fiff": 888, "mne_kit_gui": 888, "9505": 888, "9596": 888, "prox": 888, "outperform": 888, "9608": 888, "9493": 888, "9685": 888, "has_": 888, "_data": 888, "9781": 888, "add_figs_to_sect": 888, "add_slider_to_sect": 888, "add_images_to_sect": 888, "add_bem_to_sect": 888, "add_htmls_to_sect": 888, "sort_sect": 888, "9815": 888, "center_cmap": 888, "9843": 888, "detect_artifact": 888, "9909": 888, "fede": 888, "gansheng": 888, "banvil": 888, "josh": 888, "koen": 888, "sumalyo": 888, "datta": 888, "pade": 888, "koehler": 888, "rotem": 888, "falach": 888, "sanderson": 888, "enrico": 888, "varano": 888, "judi": 888, "zhu": 888, "matteo": 888, "anelli": 888, "apoorva": 888, "karek": 888, "silvia": 888, "cotroneo": 888, "maggi": 888, "9192": 888, "9285": 888, "9278": 888, "9124": 888, "9203": 888, "9174": 888, "refactor": 888, "9088": 888, "9156": 888, "9043": 888, "9096": 888, "8867": 888, "8739": 888, "9169": 888, "yokogawa": 888, "8813": 888, "8799": 888, "ipyvtk_simpl": 888, "8503": 888, "8346": 888, "8896": 888, "8723": 888, "8738": 888, "8789": 888, "9268": 888, "8790": 888, "8697": 888, "8801": 888, "8829": 888, "8744": 888, "8762": 888, "9037": 888, "8793": 888, "9262": 888, "keypress": 888, "8806": 888, "starstim": 888, "enobio": 888, "8734": 888, "tristan": 888, "stenner": 888, "8760": 888, "8783": 888, "8822": 888, "8771": 888, "8805": 888, "8794": 888, "auto_clos": 888, "8730": 888, "8841": 888, "yu": 888, "luo": 888, "8858": 888, "checker": 888, "pylanc": 888, "8862": 888, "8874": 888, "interobail": 888, "8868": 888, "qt_mac_wants_lay": 888, "8959": 888, "8879": 888, "8834": 888, "9023": 888, "9015": 888, "9087": 888, "9113": 888, "9118": 888, "9103": 888, "9175": 888, "9149": 888, "9166": 888, "bierer": 888, "9210": 888, "9136": 888, "9241": 888, "9261": 888, "9269": 888, "9270": 888, "9141": 888, "9347": 888, "misbehav": 888, "8013": 888, "9207": 888, "9187": 888, "9151": 888, "9162": 888, "9152": 888, "x_label": 888, "9115": 888, "9062": 888, "8989": 888, "spectral_connect": 888, "8839": 888, "8844": 888, "8311": 888, "macosx": 888, "8688": 888, "8983": 888, "superset": 888, "8675": 888, "8713": 888, "8689": 888, "8954": 888, "8884": 888, "num_sampl": 888, "duration_in_sec": 888, "8712": 888, "8780": 888, "8804": 888, "8842": 888, "8857": 888, "9315": 888, "8956": 888, "9284": 888, "9317": 888, "8845": 888, "8811": 888, "bailei": 888, "8736": 888, "8831": 888, "8728": 888, "8731": 888, "8996": 888, "8752": 888, "8759": 888, "8775": 888, "8800": 888, "8817": 888, "8821": 888, "8856": 888, "8965": 888, "8985": 888, "8891": 888, "8963": 888, "9109": 888, "9178": 888, "9252": 888, "9027": 888, "9236": 888, "9246": 888, "9305": 888, "9277": 888, "9099": 888, "plot_sensors_connect": 888, "cbar_label": 888, "9248": 888, "read_select": 888, "8870": 888, "tf_dic": 888, "9122": 888, "9033": 888, "ana": 888, "radanov": 888, "magalvan": 888, "mista": 888, "christina": 888, "zhao": 888, "giorgio": 888, "marinato": 888, "jori": 888, "den": 888, "bossch": 888, "gensollen": 888, "treguer": 888, "austin": 888, "hurst": 888, "aniket": 888, "pradhan": 888, "hongjiang": 888, "kuziek": 888, "qianliang": 888, "tod": 888, "flak": 888, "8354": 888, "7070": 888, "imgag": 888, "7717": 888, "kyle": 888, "mathewson": 888, "8275": 888, "8445": 888, "keith": 888, "doell": 888, "8553": 888, "8351": 888, "8190": 888, "8539": 888, "8379": 888, "8366": 888, "8642": 888, "8447": 888, "8323": 888, "8449": 888, "8402": 888, "8460": 888, "8532": 888, "8482": 888, "8608": 888, "8502": 888, "8515": 888, "8622": 888, "8381": 888, "8584": 888, "8442": 888, "8534": 888, "8624": 888, "8519": 888, "8452": 888, "8415": 888, "8395": 888, "8658": 888, "cascad": 888, "8633": 888, "8580": 888, "8400": 888, "test_egi": 888, "mandatorili": 888, "8474": 888, "8339": 888, "8558": 888, "s390x": 888, "8618": 888, "8594": 888, "8610": 888, "8377": 888, "8285": 888, "8344": 888, "8318": 888, "8637": 888, "8306": 888, "8448": 888, "name_split": 888, "01_meg": 888, "name_meg": 888, "8464": 888, "8326": 888, "8343": 888, "8425": 888, "8317": 888, "8663": 888, "8320": 888, "8303": 888, "8484": 888, "8349": 888, "max_pca_compon": 888, "max_pca_components_": 888, "8321": 888, "8341": 888, "everyhwer": 888, "8368": 888, "8393": 888, "8416": 888, "8434": 888, "8486": 888, "8491": 888, "8492": 888, "8545": 888, "8590": 888, "tukei": 888, "8542": 888, "8520": 888, "8589": 888, "8564": 888, "8605": 888, "8374": 888, "8357": 888, "8356": 888, "8389": 888, "justu": 888, "schwabed": 888, "mad": 888, "jensen": 888, "mikolaj": 888, "rahul": 888, "nadkarni": 888, "lau": 888, "m\u00f8ller": 888, "andersen": 888, "sedivi": 888, "donckt": 888, "svea": 888, "meyer": 888, "lx37": 888, "rai": 888, "n_iter_sdr": 888, "immut": 888, "fxaa": 888, "_split": 888, "_part": 888, "read_raw_xxx": 888, "simpler": 888, "permit": 888, "outermost": 888, "setup_forward_model": 888, "conjug": 888, "throw": 888, "spatio_temporal_src_connect": 888, "find_ch_connect": 888, "read_ch_connect": 888, "spatial_dist_connect": 888, "spatial_inter_hemi_connect": 888, "spatial_src_connect": 888, "spatial_tris_connect": 888, "spatio_temporal_dist_connect": 888, "spatio_temporal_tris_connect": 888, "normalize_fwd": 888, "stc_mix": 888, "read_dig_captrack": 888, "spell": 888, "captrack": 888, "mark_flat": 888, "alejandro": 888, "weinstein": 888, "anton": 888, "nikola": 888, "waniek": 888, "harmelen": 888, "sara": 888, "sommariva": 888, "chapochn": 888, "mshader": 888, "sophi": 888, "herbst": 888, "victor": 888, "ferat": 888, "mohammad": 888, "daneshzand": 888, "reppling": 888, "plv": 888, "dmitrii": 888, "altukhov": 888, "epochs_color": 888, "prepare_bem_model": 888, "compromis": 888, "roc_auc_ovo": 888, "roc_auc_ovo_weight": 888, "sebastian": 888, "old_tim": 888, "subprocess": 888, "htp": 888, "insuffici": 888, "demetr": 888, "kosta": 888, "gridsearchcv": 888, "chun": 888, "hui": 888, "henrich": 888, "kolkhorst": 888, "fu": 888, "geoff": 888, "brookshir": 888, "eegmi_url": 888, "ramiro": 888, "gatti": 888, "get_channel_type_const": 888, "bump": 888, "tandem": 888, "point_spread_funct": 888, "cross_talk_funct": 888, "ariel": 888, "rokem": 888, "jos\u00e9": 888, "garc\u00eda": 888, "moham": 888, "sherif": 888, "nataliia": 888, "kozhemiako": 888, "legrand": 888, "f\u00e9rat": 888, "markerfil": 888, "dirk": 888, "g\u00fctlin": 888, "10x": 888, "jit": 888, "ryb\u00e1\u0159": 888, "abram": 888, "hindl": 888, "eberhard": 888, "eich": 888, "radman": 888, "hidpi": 888, "pycord": 888, "read_montag": 888, "read_dig_montag": 888, "set_dig": 888, "update_ch_nam": 888, "raise_if_subset": 888, "_smsh_": 888, "_smartshield": 888, "max_tick": 888, "show_legend": 888, "biosig": 888, "nathali": 888, "gayraud": 888, "crist\u00f3bal": 888, "mo\u00ebnn": 888, "loccoz": 888, "mixin": 888, "lslclient": 888, "lsl": 888, "chala": 888, "mocklslstream": 888, "roujanski": 888, "fault": 888, "kovrig": 888, "n_pad": 888, "bruno": 888, "nicenboim": 888, "32bit": 888, "edge_": 888, "v0": 888, "retina": 888, "larri": 888, "eisenman": 888, "mishandl": 888, "haslach": 888, "clean_eog_ecg": 888, "jeythekei": 888, "_criterion": 888, "katarina": 888, "slama": 888, "synthesi": 888, "find_edf_ev": 888, "patch_info": 888, "castano": 888, "finder": 888, "rasmu": 888, "zetter": 888, "orgin": 888, "gsoc": 888, "molfes": 888, "sphx_glr_auto_examples_datasets_plot_opm_rest_data": 888, "gutstein": 888, "trig_shift_by_typ": 888, "read_annotations_brainvis": 888, "get_blas_func": 888, "_compute_covariance_auto": 888, "onewai": 888, "marcin": 888, "koculak": 888, "buildup": 888, "incom": 888, "bethard": 888, "dateutil": 888, "jasper": 888, "bosch": 888, "_current": 888, "unit_noise_gain": 888, "buildqa": 888, "read_annotations_eeglab": 888, "annotmap": 888, "runtimeexcept": 888, "morph_precomput": 888, "compute_morph_matrix": 888, "morph_data_precomput": 888, "pycuda": 888, "warn_explicit": 888, "save_stc_as_volum": 888, "stop_receive_thread": 888, "johan": 888, "meer": 888, "kambiz": 888, "tavabi": 888, "lorenz": 888, "esch": 888, "manu": 888, "sutela": 888, "perri": 888, "sergei": 888, "antopolskii": 888, "teekuninga": 888, "jochmann": 888, "dupr\u00e9": 888, "workaround": 888, "trainsform": 888, "dubarri": 888, "tf_mxne_optim": 888, "mxne_optim": 888, "multidictionari": 888, "image_mask": 888, "csd_epoch": 888, "csd_arrai": 888, "oleh": 888, "kozynet": 888, "lcmv_epoch": 888, "lcmv_raw": 888, "braboszcz": 888, "desislava": 888, "petkova": 888, "krzemi\u0144ski": 888, "hornberg": 888, "juergen": 888, "katrin": 888, "leinweb": 888, "yaroslav": 888, "halchenko": 888, "baptist": 888, "schiratti": 888, "utilis": 888, "dgap_l21l1": 888, "ramonapariciog": 888, "get_pos2d": 888, "\u03c7\u00b2": 888, "writabl": 888, "plot_roi_erpimage_by_rt": 888, "ansi": 888, "codepag": 888, "okba": 888, "bekhelifi": 888, "boggess": 888, "duemos": 888, "nielsen": 888, "luk\u00e1\u0161": 888, "hejtm\u00e1nek": 888, "_virtual": 888, "treatment": 888, "mrn": 888, "reformat": 888, "timedecod": 888, "generalizationacrosstim": 888, "plot_gat_tim": 888, "plot_gat_matrix": 888, "read_events_eeglab": 888, "plot_tran": 888, "tf_lcmv": 888, "scale_tim": 888, "scalings_tim": 888, "akshay0724": 888, "rudiuk": 888, "dykstra": 888, "laetitia": 888, "grabot": 888, "proulx": 888, "apariciogarcia": 888, "robin": 888, "tibor": 888, "schirrmeist": 888, "rodrigo": 888, "h\u00fcbner": 888, "toddler": 888, "fasttrack": 888, "brovelli": 888, "_plot_topo_onpick": 888, "nikla": 888, "wilm": 888, "rantala": 888, "_bad_drop": 888, "_filenam": 888, "pasler": 888, "predict_mod": 888, "chanloc": 888, "dgap_l21": 888, "band_pass_filt": 888, "band_stop_filt": 888, "low_pass_filt": 888, "high_pass_filt": 888, "eeg_sensor": 888, "typecheck": 888, "leonardo": 888, "barbosa": 888, "superflu": 888, "hermann": 888, "sonntag": 888, "jakub": 888, "kaczmarzyk": 888, "lorenzo": 888, "alfin": 888, "visconti": 888, "nick": 888, "foti": 888, "pop_prop": 888, "maryland": 888, "preview": 888, "raimundo": 888, "hid": 888, "martinez": 888, "pablo": 888, "aria": 888, "duma": 888, "fieldtripcli": 888, "get_data_as_epoch": 888, "unitsposit": 888, "mullin": 888, "bva": 888, "strictest": 888, "hojlund": 888, "niediek": 888, "add_eeg_ref": 888, "csd_compute_epoch": 888, "ev2": 888, "\u00b5": 888, "aru": 888, "unsupport": 888, "config_opt": 888, "epochsvector": 888, "favour": 888, "cwt_morlet": 888, "single_trial_pow": 888, "committ": 888, "camilo": 888, "lamu": 888, "f\u00e9lix": 888, "kraus": 888, "shlomo": 888, "poil": 888, "show_info": 888, "compute_raw_psd": 888, "compute_epochs_psd": 888, "614990234": 888, "00064103": 888, "99897607": 888, "train_tim": 888, "ecg_criterion": 888, "eog_criterion": 888, "natali": 888, "klein": 888, "coordinan": 888, "ware": 888, "score_mod": 888, "stimserv": 888, "ip": 888, "mesh_color": 888, "multitaper_psd": 888, "vertor": 888, "renorm": 888, "drop_bad_epoch": 888, "drop_epoch": 888, "do_forward_solut": 888, "kaichogami": 888, "cl\u00e9ment": 888, "moutard": 888, "martinbab": 888, "sagun": 888, "pai": 888, "sourav": 888, "kambyses": 888, "pbnsilva": 888, "sviter": 888, "zuxfoucault": 888, "nenonen": 888, "add_eeg_average_proj": 888, "n_samp_tot": 888, "emilyps14": 888, "lennyvarghes": 888, "freeview_bem_surfac": 888, "desanti": 888, "_setup_vmin_vmax": 888, "concatenatechannel": 888, "redesign": 888, "rewrot": 888, "plot_image_epoch": 888, "preload_data": 888, "santi": 888, "roan": 888, "laplant": 888, "wakeman": 888, "add_sect": 888, "marmaduk": 888, "woodman": 888, "whiten_evok": 888, "oddbal": 888, "label_1": 888, "label_2": 888, "savitski": 888, "_baseraw": 888, "prof": 888, "decoupl": 888, "read_hsp": 888, "read_elp": 888, "write_hsp": 888, "write_mrk": 888, "label_time_cours": 888, "as_data_fram": 888, "pick_types_evok": 888, "textbox": 888, "iir_filter_raw": 888, "ingoo": 888, "kj": 888, "basil": 888, "pinsard": 888, "hafeza": 888, "anevar": 888, "manoj": 888, "kumar": 888, "tucker": 888, "ward": 888, "radic": 888, "tack": 888, "equalize_channnel": 888, "s\u00e9bastien": 888, "connector": 888, "cathi": 888, "nangini": 888, "succintli": 888, "breuer": 888, "aesthet": 888, "qunxi": 888, "drop_pick": 888, "labels_from_parc": 888, "parc_from_label": 888, "setno": 888, "plot_": 888, "praveen": 888, "sripad": 888, "tanai": 888, "saket": 888, "choudhari": 888, "brad": 888, "buran": 888, "stimclient": 888, "rtclient": 888, "mockrtclient": 888, "trelli": 888, "ki2fiff": 888, "pick_norm": 888, "write_stc": 888, "olivetti": 888, "kornblith": 888, "smarter": 888, "sources_as_epoch": 888, "psi": 888, "mne_compute_proj_eog": 888, "applicationon": 888, "proj_act": 888, "keep_comp": 888, "dest_comp": 888, "speedup": 888, "clike": 888, "l21": 888, "bessel": 888, "time_to_index": 888, "mne_compute_proj_ecg": 888, "mne_maxfilt": 888, "loui": 888, "thibault": 888, "ellen": 888, "ruzich": 888}, "objects": {"": [[878, 0, 0, "-", "mne"]], "mne": [[258, 1, 1, "", "AcqParserFIF"], [259, 1, 1, "", "Annotations"], [260, 1, 1, "", "BaseEpochs"], [261, 1, 1, "", "BiHemiLabel"], [262, 1, 1, "", "Covariance"], [263, 1, 1, "", "Dipole"], [264, 1, 1, "", "DipoleFixed"], [265, 1, 1, "", "Epochs"], [266, 1, 1, "", "EpochsArray"], [267, 1, 1, "", "Evoked"], [268, 1, 1, "", "EvokedArray"], [269, 1, 1, "", "Forward"], [270, 1, 1, "", "Info"], [271, 1, 1, "", "Label"], [272, 1, 1, "", "MixedSourceEstimate"], [273, 1, 1, "", "MixedVectorSourceEstimate"], [274, 1, 1, "", "Projection"], [275, 1, 1, "", "Report"], [276, 1, 1, "", "SourceEstimate"], [277, 1, 1, "", "SourceMorph"], [278, 1, 1, "", "SourceSpaces"], [279, 1, 1, "", "VectorSourceEstimate"], [280, 1, 1, "", "VolSourceEstimate"], [281, 1, 1, "", "VolVectorSourceEstimate"], [282, 4, 1, "", "add_reference_channels"], [283, 4, 1, "", "add_source_space_distances"], [284, 4, 1, "", "annotations_from_events"], [285, 4, 1, "", "apply_forward"], [286, 4, 1, "", "apply_forward_raw"], [287, 4, 1, "", "average_forward_solutions"], [882, 0, 0, "-", "baseline"], [856, 0, 0, "-", "beamformer"], [255, 0, 0, "-", "bem"], [312, 4, 1, "", "channel_indices_by_type"], [313, 4, 1, "", "channel_type"], [877, 0, 0, "-", "channels"], [877, 0, 0, "-", "chpi"], [355, 4, 1, "", "combine_evoked"], [356, 4, 1, "", "compute_covariance"], [357, 4, 1, "", "compute_proj_epochs"], [358, 4, 1, "", "compute_proj_evoked"], [359, 4, 1, "", "compute_proj_raw"], [360, 4, 1, "", "compute_rank"], [361, 4, 1, "", "compute_raw_covariance"], [362, 4, 1, "", "compute_source_morph"], [363, 4, 1, "", "concatenate_epochs"], [364, 4, 1, "", "concatenate_events"], [365, 4, 1, "", "concatenate_raws"], [366, 4, 1, "", "convert_forward_solution"], [370, 4, 1, "", "count_events"], [374, 4, 1, "", "create_default_subject"], [375, 4, 1, "", "create_info"], [857, 0, 0, "-", "cuda"], [250, 0, 0, "-", "datasets"], [412, 4, 1, "", "decimate_surface"], [251, 0, 0, "-", "decoding"], [432, 4, 1, "", "dig_mri_distances"], [856, 0, 0, "-", "dipole"], [252, 0, 0, "-", "epochs"], [438, 4, 1, "", "equalize_channels"], [252, 0, 0, "-", "event"], [442, 4, 1, "", "events_from_annotations"], [253, 0, 0, "-", "export"], [447, 4, 1, "", "extract_label_time_course"], [877, 0, 0, "-", "filter"], [454, 4, 1, "", "find_events"], [455, 4, 1, "", "find_stim_steps"], [456, 4, 1, "", "fit_dipole"], [461, 4, 1, "", "get_config"], [462, 4, 1, "", "get_config_path"], [463, 4, 1, "", "get_head_surf"], [464, 4, 1, "", "get_meg_helmet_surf"], [465, 4, 1, "", "get_montage_volume_labels"], [466, 4, 1, "", "get_volume_labels_from_aseg"], [467, 4, 1, "", "get_volume_labels_from_src"], [468, 4, 1, "", "grade_to_tris"], [469, 4, 1, "", "grade_to_vertices"], [470, 4, 1, "", "grand_average"], [471, 4, 1, "", "grow_labels"], [474, 4, 1, "", "head_to_mni"], [475, 4, 1, "", "head_to_mri"], [856, 0, 0, "-", "inverse_sparse"], [879, 0, 0, "-", "io"], [516, 4, 1, "", "label_sign_flip"], [517, 4, 1, "", "labels_to_stc"], [518, 4, 1, "", "make_ad_hoc_cov"], [519, 4, 1, "", "make_bem_model"], [520, 4, 1, "", "make_bem_solution"], [521, 4, 1, "", "make_field_map"], [522, 4, 1, "", "make_fixed_length_epochs"], [523, 4, 1, "", "make_fixed_length_events"], [524, 4, 1, "", "make_forward_dipole"], [525, 4, 1, "", "make_forward_solution"], [526, 4, 1, "", "make_sphere_model"], [527, 4, 1, "", "match_channel_orders"], [528, 4, 1, "", "merge_events"], [856, 0, 0, "-", "minimum_norm"], [549, 4, 1, "", "morph_labels"], [550, 4, 1, "", "morph_source_spaces"], [551, 4, 1, "", "open_docs"], [552, 4, 1, "", "open_report"], [553, 4, 1, "", "parse_config"], [554, 4, 1, "", "pick_channels"], [555, 4, 1, "", "pick_channels_cov"], [556, 4, 1, "", "pick_channels_forward"], [557, 4, 1, "", "pick_channels_regexp"], [558, 4, 1, "", "pick_events"], [559, 4, 1, "", "pick_info"], [560, 4, 1, "", "pick_types"], [561, 4, 1, "", "pick_types_forward"], [877, 0, 0, "-", "preprocessing"], [612, 4, 1, "", "random_parcellation"], [613, 4, 1, "", "read_annotations"], [614, 4, 1, "", "read_bem_solution"], [615, 4, 1, "", "read_bem_surfaces"], [616, 4, 1, "", "read_cov"], [617, 4, 1, "", "read_dipole"], [618, 4, 1, "", "read_epochs"], [619, 4, 1, "", "read_epochs_eeglab"], [620, 4, 1, "", "read_epochs_fieldtrip"], [621, 4, 1, "", "read_epochs_kit"], [622, 4, 1, "", "read_events"], [623, 4, 1, "", "read_evoked_besa"], [624, 4, 1, "", "read_evoked_fieldtrip"], [625, 4, 1, "", "read_evokeds"], [626, 4, 1, "", "read_evokeds_mff"], [627, 4, 1, "", "read_forward_solution"], [628, 4, 1, "", "read_freesurfer_lut"], [629, 4, 1, "", "read_label"], [630, 4, 1, "", "read_labels_from_annot"], [631, 4, 1, "", "read_lta"], [632, 4, 1, "", "read_morph_map"], [633, 4, 1, "", "read_proj"], [634, 4, 1, "", "read_reject_parameters"], [635, 4, 1, "", "read_source_estimate"], [636, 4, 1, "", "read_source_morph"], [637, 4, 1, "", "read_source_spaces"], [638, 4, 1, "", "read_surface"], [639, 4, 1, "", "read_talxfm"], [640, 4, 1, "", "read_trans"], [641, 4, 1, "", "read_tri"], [642, 4, 1, "", "read_vectorview_selection"], [643, 4, 1, "", "rename_channels"], [644, 4, 1, "", "scale_bem"], [645, 4, 1, "", "scale_labels"], [646, 4, 1, "", "scale_mri"], [647, 4, 1, "", "scale_source_space"], [648, 4, 1, "", "sensitivity_map"], [649, 4, 1, "", "set_bipolar_reference"], [650, 4, 1, "", "set_cache_dir"], [651, 4, 1, "", "set_config"], [652, 4, 1, "", "set_eeg_reference"], [653, 4, 1, "", "set_log_file"], [654, 4, 1, "", "set_log_level"], [655, 4, 1, "", "set_memmap_min_size"], [656, 4, 1, "", "setup_source_space"], [657, 4, 1, "", "setup_volume_source_space"], [883, 0, 0, "-", "simulation"], [678, 4, 1, "", "spatial_dist_adjacency"], [679, 4, 1, "", "spatial_inter_hemi_adjacency"], [680, 4, 1, "", "spatial_src_adjacency"], [681, 4, 1, "", "spatial_tris_adjacency"], [682, 4, 1, "", "spatio_temporal_dist_adjacency"], [683, 4, 1, "", "spatio_temporal_src_adjacency"], [684, 4, 1, "", "spatio_temporal_tris_adjacency"], [685, 4, 1, "", "split_label"], [885, 0, 0, "-", "stats"], [703, 4, 1, "", "stc_near_sensors"], [704, 4, 1, "", "stc_to_label"], [707, 4, 1, "", "sys_info"], [886, 0, 0, "-", "time_frequency"], [742, 4, 1, "", "transform_surface_to"], [877, 0, 0, "-", "transforms"], [750, 4, 1, "", "use_coil_def"], [751, 1, 1, "", "use_log_level"], [857, 0, 0, "-", "utils"], [754, 4, 1, "", "verbose"], [755, 4, 1, "", "vertex_to_mni"], [887, 0, 0, "-", "viz"], [829, 4, 1, "", "what"], [830, 4, 1, "", "write_bem_solution"], [831, 4, 1, "", "write_bem_surfaces"], [832, 4, 1, "", "write_cov"], [833, 4, 1, "", "write_events"], [834, 4, 1, "", "write_evokeds"], [835, 4, 1, "", "write_forward_solution"], [836, 4, 1, "", "write_head_bem"], [837, 4, 1, "", "write_label"], [838, 4, 1, "", "write_labels_to_annot"], [839, 4, 1, "", "write_proj"], [840, 4, 1, "", "write_source_spaces"], [841, 4, 1, "", "write_surface"], [842, 4, 1, "", "write_trans"]], "mne.AcqParserFIF": [[258, 2, 1, "", "__getitem__"], [258, 2, 1, "", "__len__"], [258, 3, 1, "", "categories"], [258, 3, 1, "", "events"], [258, 2, 1, "", "get_condition"]], "mne.Annotations": [[259, 2, 1, "", "__add__"], [259, 2, 1, "", "__getitem__"], [259, 2, 1, "", "__iter__"], [259, 2, 1, "", "__len__"], [259, 2, 1, "", "append"], [259, 2, 1, "", "copy"], [259, 2, 1, "", "crop"], [259, 2, 1, "", "delete"], [259, 3, 1, "", "orig_time"], [259, 2, 1, "", "rename"], [259, 2, 1, "", "save"], [259, 2, 1, "", "set_durations"], [259, 2, 1, "", "to_data_frame"]], "mne.BiHemiLabel": [[261, 2, 1, "", "__add__"], [261, 2, 1, "", "__len__"], [261, 2, 1, "", "__sub__"]], "mne.Covariance": [[262, 2, 1, "", "__add__"], [262, 2, 1, "", "__contains__"], [262, 2, 1, "", "__getitem__"], [262, 2, 1, "", "__iter__"], [262, 2, 1, "", "__len__"], [262, 2, 1, "", "as_diag"], [262, 3, 1, "", "ch_names"], [262, 2, 1, "", "clear"], [262, 2, 1, "", "copy"], [262, 3, 1, "", "data"], [262, 2, 1, "", "fromkeys"], [262, 2, 1, "", "get"], [262, 2, 1, "", "items"], [262, 2, 1, "", "keys"], [262, 3, 1, "", "nfree"], [262, 2, 1, "", "pick_channels"], [262, 2, 1, "", "plot"], [262, 2, 1, "", "plot_topomap"], [262, 2, 1, "", "pop"], [262, 2, 1, "", "popitem"], [262, 2, 1, "", "save"], [262, 2, 1, "", "setdefault"], [262, 2, 1, "", "update"], [262, 2, 1, "", "values"]], "mne.Dipole": [[263, 2, 1, "", "__getitem__"], [263, 2, 1, "", "__len__"], [263, 2, 1, "", "copy"], [263, 2, 1, "", "crop"], [263, 2, 1, "", "decimate"], [263, 2, 1, "", "plot_amplitudes"], [263, 2, 1, "", "plot_locations"], [263, 2, 1, "", "save"], [263, 2, 1, "", "shift_time"], [263, 2, 1, "", "time_as_index"], [263, 3, 1, "", "times"], [263, 3, 1, "", "tmax"], [263, 3, 1, "", "tmin"], [263, 2, 1, "", "to_mni"], [263, 2, 1, "", "to_mri"], [263, 2, 1, "", "to_volume_labels"]], "mne.DipoleFixed": [[264, 3, 1, "", "ch_names"], [264, 2, 1, "", "copy"], [264, 2, 1, "", "crop"], [264, 2, 1, "", "decimate"], [264, 2, 1, "", "plot"], [264, 2, 1, "", "save"], [264, 2, 1, "", "shift_time"], [264, 2, 1, "", "time_as_index"], [264, 3, 1, "", "times"], [264, 3, 1, "", "tmax"], [264, 3, 1, "", "tmin"]], "mne.Epochs": [[265, 2, 1, "", "__contains__"], [265, 2, 1, "", "__getitem__"], [265, 2, 1, "", "__iter__"], [265, 2, 1, "", "__len__"], [265, 2, 1, "", "add_annotations_to_metadata"], [265, 2, 1, "", "add_channels"], [265, 2, 1, "", "add_proj"], [265, 2, 1, "", "add_reference_channels"], [265, 2, 1, "", "anonymize"], [265, 2, 1, "", "apply_baseline"], [265, 2, 1, "", "apply_function"], [265, 2, 1, "", "apply_hilbert"], [265, 2, 1, "", "apply_proj"], [265, 2, 1, "", "as_type"], [265, 2, 1, "", "average"], [265, 3, 1, "", "ch_names"], [265, 3, 1, "", "compensation_grade"], [265, 2, 1, "", "compute_psd"], [265, 2, 1, "", "copy"], [265, 2, 1, "", "crop"], [265, 2, 1, "", "decimate"], [265, 2, 1, "", "del_proj"], [265, 2, 1, "", "drop"], [265, 2, 1, "", "drop_bad"], [265, 2, 1, "", "drop_channels"], [265, 2, 1, "", "drop_log_stats"], [265, 2, 1, "", "equalize_event_counts"], [265, 2, 1, "", "export"], [265, 3, 1, "", "filename"], [265, 2, 1, "", "filter"], [265, 2, 1, "", "get_annotations_per_epoch"], [265, 2, 1, "", "get_channel_types"], [265, 2, 1, "", "get_data"], [265, 2, 1, "", "get_montage"], [265, 2, 1, "", "interpolate_bads"], [265, 2, 1, "", "iter_evoked"], [265, 2, 1, "", "load_data"], [265, 3, 1, "", "metadata"], [265, 2, 1, "", "next"], [265, 2, 1, "", "pick"], [265, 2, 1, "", "pick_channels"], [265, 2, 1, "", "pick_types"], [265, 2, 1, "", "plot"], [265, 2, 1, "", "plot_drop_log"], [265, 2, 1, "", "plot_image"], [265, 2, 1, "", "plot_projs_topomap"], [265, 2, 1, "", "plot_psd"], [265, 2, 1, "", "plot_psd_topo"], [265, 2, 1, "", "plot_psd_topomap"], [265, 2, 1, "", "plot_sensors"], [265, 2, 1, "", "plot_topo_image"], [265, 3, 1, "", "proj"], [265, 2, 1, "", "rename_channels"], [265, 2, 1, "", "reorder_channels"], [265, 2, 1, "", "resample"], [265, 2, 1, "", "reset_drop_log_selection"], [265, 2, 1, "", "save"], [265, 2, 1, "", "savgol_filter"], [265, 2, 1, "", "set_annotations"], [265, 2, 1, "", "set_channel_types"], [265, 2, 1, "", "set_eeg_reference"], [265, 2, 1, "", "set_meas_date"], [265, 2, 1, "", "set_montage"], [265, 2, 1, "", "shift_time"], [265, 2, 1, "", "standard_error"], [265, 2, 1, "", "subtract_evoked"], [265, 2, 1, "", "time_as_index"], [265, 3, 1, "", "times"], [265, 3, 1, "", "tmax"], [265, 3, 1, "", "tmin"], [265, 2, 1, "", "to_data_frame"]], "mne.EpochsArray": [[266, 2, 1, "", "__contains__"], [266, 2, 1, "", "__getitem__"], [266, 2, 1, "", "__iter__"], [266, 2, 1, "", "__len__"], [266, 2, 1, "", "add_annotations_to_metadata"], [266, 2, 1, "", "add_channels"], [266, 2, 1, "", "add_proj"], [266, 2, 1, "", "add_reference_channels"], [266, 2, 1, "", "anonymize"], [266, 2, 1, "", "apply_baseline"], [266, 2, 1, "", "apply_function"], [266, 2, 1, "", "apply_hilbert"], [266, 2, 1, "", "apply_proj"], [266, 2, 1, "", "as_type"], [266, 2, 1, "", "average"], [266, 3, 1, "", "ch_names"], [266, 3, 1, "", "compensation_grade"], [266, 2, 1, "", "compute_psd"], [266, 2, 1, "", "copy"], [266, 2, 1, "", "crop"], [266, 2, 1, "", "decimate"], [266, 2, 1, "", "del_proj"], [266, 2, 1, "", "drop"], [266, 2, 1, "", "drop_bad"], [266, 2, 1, "", "drop_channels"], [266, 2, 1, "", "drop_log_stats"], [266, 2, 1, "", "equalize_event_counts"], [266, 2, 1, "", "export"], [266, 3, 1, "", "filename"], [266, 2, 1, "", "filter"], [266, 2, 1, "", "get_annotations_per_epoch"], [266, 2, 1, "", "get_channel_types"], [266, 2, 1, "", "get_data"], [266, 2, 1, "", "get_montage"], [266, 2, 1, "", "interpolate_bads"], [266, 2, 1, "", "iter_evoked"], [266, 2, 1, "", "load_data"], [266, 3, 1, "", "metadata"], [266, 2, 1, "", "next"], [266, 2, 1, "", "pick"], [266, 2, 1, "", "pick_channels"], [266, 2, 1, "", "pick_types"], [266, 2, 1, "", "plot"], [266, 2, 1, "", "plot_drop_log"], [266, 2, 1, "", "plot_image"], [266, 2, 1, "", "plot_projs_topomap"], [266, 2, 1, "", "plot_psd"], [266, 2, 1, "", "plot_psd_topo"], [266, 2, 1, "", "plot_psd_topomap"], [266, 2, 1, "", "plot_sensors"], [266, 2, 1, "", "plot_topo_image"], [266, 3, 1, "", "proj"], [266, 2, 1, "", "rename_channels"], [266, 2, 1, "", "reorder_channels"], [266, 2, 1, "", "resample"], [266, 2, 1, "", "reset_drop_log_selection"], [266, 2, 1, "", "save"], [266, 2, 1, "", "savgol_filter"], [266, 2, 1, "", "set_annotations"], [266, 2, 1, "", "set_channel_types"], [266, 2, 1, "", "set_eeg_reference"], [266, 2, 1, "", "set_meas_date"], [266, 2, 1, "", "set_montage"], [266, 2, 1, "", "shift_time"], [266, 2, 1, "", "standard_error"], [266, 2, 1, "", "subtract_evoked"], [266, 2, 1, "", "time_as_index"], [266, 3, 1, "", "times"], [266, 3, 1, "", "tmax"], [266, 3, 1, "", "tmin"], [266, 2, 1, "", "to_data_frame"]], "mne.Evoked": [[267, 2, 1, "", "__contains__"], [267, 2, 1, "", "__neg__"], [267, 2, 1, "", "add_channels"], [267, 2, 1, "", "add_proj"], [267, 2, 1, "", "add_reference_channels"], [267, 2, 1, "", "animate_topomap"], [267, 2, 1, "", "anonymize"], [267, 2, 1, "", "apply_baseline"], [267, 2, 1, "", "apply_function"], [267, 2, 1, "", "apply_hilbert"], [267, 2, 1, "", "apply_proj"], [267, 2, 1, "", "as_type"], [267, 3, 1, "", "ch_names"], [267, 3, 1, "", "compensation_grade"], [267, 2, 1, "", "compute_psd"], [267, 2, 1, "", "copy"], [267, 2, 1, "", "crop"], [267, 3, 1, "", "data"], [267, 2, 1, "", "decimate"], [267, 2, 1, "", "del_proj"], [267, 2, 1, "", "detrend"], [267, 2, 1, "", "drop_channels"], [267, 2, 1, "", "export"], [267, 2, 1, "", "filter"], [267, 2, 1, "", "get_channel_types"], [267, 2, 1, "", "get_data"], [267, 2, 1, "", "get_montage"], [267, 2, 1, "", "get_peak"], [267, 2, 1, "", "interpolate_bads"], [267, 3, 1, "", "kind"], [267, 2, 1, "", "pick"], [267, 2, 1, "", "pick_channels"], [267, 2, 1, "", "pick_types"], [267, 2, 1, "", "plot"], [267, 2, 1, "", "plot_field"], [267, 2, 1, "", "plot_image"], [267, 2, 1, "", "plot_joint"], [267, 2, 1, "", "plot_projs_topomap"], [267, 2, 1, "", "plot_psd"], [267, 2, 1, "", "plot_psd_topo"], [267, 2, 1, "", "plot_psd_topomap"], [267, 2, 1, "", "plot_sensors"], [267, 2, 1, "", "plot_topo"], [267, 2, 1, "", "plot_topomap"], [267, 2, 1, "", "plot_white"], [267, 3, 1, "", "proj"], [267, 2, 1, "", "rename_channels"], [267, 2, 1, "", "reorder_channels"], [267, 2, 1, "", "resample"], [267, 2, 1, "", "save"], [267, 2, 1, "", "savgol_filter"], [267, 2, 1, "", "set_channel_types"], [267, 2, 1, "", "set_eeg_reference"], [267, 2, 1, "", "set_meas_date"], [267, 2, 1, "", "set_montage"], [267, 2, 1, "", "shift_time"], [267, 2, 1, "", "time_as_index"], [267, 3, 1, "", "times"], [267, 3, 1, "", "tmax"], [267, 3, 1, "", "tmin"], [267, 2, 1, "", "to_data_frame"]], "mne.EvokedArray": [[268, 2, 1, "", "__contains__"], [268, 2, 1, "", "__neg__"], [268, 2, 1, "", "add_channels"], [268, 2, 1, "", "add_proj"], [268, 2, 1, "", "add_reference_channels"], [268, 2, 1, "", "animate_topomap"], [268, 2, 1, "", "anonymize"], [268, 2, 1, "", "apply_baseline"], [268, 2, 1, "", "apply_function"], [268, 2, 1, "", "apply_hilbert"], [268, 2, 1, "", "apply_proj"], [268, 2, 1, "", "as_type"], [268, 3, 1, "", "ch_names"], [268, 3, 1, "", "compensation_grade"], [268, 2, 1, "", "compute_psd"], [268, 2, 1, "", "copy"], [268, 2, 1, "", "crop"], [268, 3, 1, "", "data"], [268, 2, 1, "", "decimate"], [268, 2, 1, "", "del_proj"], [268, 2, 1, "", "detrend"], [268, 2, 1, "", "drop_channels"], [268, 2, 1, "", "export"], [268, 2, 1, "", "filter"], [268, 2, 1, "", "get_channel_types"], [268, 2, 1, "", "get_data"], [268, 2, 1, "", "get_montage"], [268, 2, 1, "", "get_peak"], [268, 2, 1, "", "interpolate_bads"], [268, 3, 1, "", "kind"], [268, 2, 1, "", "pick"], [268, 2, 1, "", "pick_channels"], [268, 2, 1, "", "pick_types"], [268, 2, 1, "", "plot"], [268, 2, 1, "", "plot_field"], [268, 2, 1, "", "plot_image"], [268, 2, 1, "", "plot_joint"], [268, 2, 1, "", "plot_projs_topomap"], [268, 2, 1, "", "plot_psd"], [268, 2, 1, "", "plot_psd_topo"], [268, 2, 1, "", "plot_psd_topomap"], [268, 2, 1, "", "plot_sensors"], [268, 2, 1, "", "plot_topo"], [268, 2, 1, "", "plot_topomap"], [268, 2, 1, "", "plot_white"], [268, 3, 1, "", "proj"], [268, 2, 1, "", "rename_channels"], [268, 2, 1, "", "reorder_channels"], [268, 2, 1, "", "resample"], [268, 2, 1, "", "save"], [268, 2, 1, "", "savgol_filter"], [268, 2, 1, "", "set_channel_types"], [268, 2, 1, "", "set_eeg_reference"], [268, 2, 1, "", "set_meas_date"], [268, 2, 1, "", "set_montage"], [268, 2, 1, "", "shift_time"], [268, 2, 1, "", "time_as_index"], [268, 3, 1, "", "times"], [268, 3, 1, "", "tmax"], [268, 3, 1, "", "tmin"], [268, 2, 1, "", "to_data_frame"]], "mne.Forward": [[269, 2, 1, "", "copy"], [269, 2, 1, "", "pick_channels"]], "mne.Info": [[270, 2, 1, "", "__contains__"], [270, 2, 1, "", "__getitem__"], [270, 2, 1, "", "__iter__"], [270, 2, 1, "", "__len__"], [270, 2, 1, "", "clear"], [270, 3, 1, "", "compensation_grade"], [270, 2, 1, "", "copy"], [270, 2, 1, "", "fromkeys"], [270, 2, 1, "", "get"], [270, 2, 1, "", "get_channel_types"], [270, 2, 1, "", "get_montage"], [270, 2, 1, "", "items"], [270, 2, 1, "", "keys"], [270, 2, 1, "", "normalize_proj"], [270, 2, 1, "", "pop"], [270, 2, 1, "", "popitem"], [270, 2, 1, "", "save"], [270, 2, 1, "", "set_montage"], [270, 2, 1, "", "setdefault"], [270, 2, 1, "", "update"], [270, 2, 1, "", "values"]], "mne.Label": [[271, 2, 1, "", "__add__"], [271, 2, 1, "", "__len__"], [271, 2, 1, "", "__sub__"], [271, 2, 1, "", "center_of_mass"], [271, 2, 1, "", "compute_area"], [271, 2, 1, "", "copy"], [271, 2, 1, "", "distances_to_outside"], [271, 2, 1, "", "fill"], [271, 2, 1, "", "get_tris"], [271, 2, 1, "", "get_vertices_used"], [271, 2, 1, "", "morph"], [271, 2, 1, "", "restrict"], [271, 2, 1, "", "save"], [271, 2, 1, "", "smooth"], [271, 2, 1, "", "split"]], "mne.MixedSourceEstimate": [[272, 2, 1, "", "__add__"], [272, 2, 1, "", "__div__"], [272, 2, 1, "", "__mul__"], [272, 2, 1, "", "__neg__"], [272, 2, 1, "", "__sub__"], [272, 2, 1, "", "apply_baseline"], [272, 2, 1, "", "bin"], [272, 2, 1, "", "copy"], [272, 2, 1, "", "crop"], [272, 3, 1, "", "data"], [272, 2, 1, "", "decimate"], [272, 2, 1, "", "extract_label_time_course"], [272, 2, 1, "", "get_peak"], [272, 2, 1, "", "mean"], [272, 2, 1, "", "plot"], [272, 2, 1, "", "resample"], [272, 2, 1, "", "save"], [272, 3, 1, "", "sfreq"], [272, 3, 1, "", "shape"], [272, 2, 1, "", "shift_time"], [272, 2, 1, "", "sqrt"], [272, 2, 1, "", "sum"], [272, 2, 1, "", "surface"], [272, 2, 1, "", "time_as_index"], [272, 3, 1, "", "times"], [272, 3, 1, "", "tmax"], [272, 3, 1, "", "tmin"], [272, 2, 1, "", "to_data_frame"], [272, 2, 1, "", "transform"], [272, 2, 1, "", "transform_data"], [272, 3, 1, "", "tstep"], [272, 2, 1, "", "volume"]], "mne.MixedVectorSourceEstimate": [[273, 2, 1, "", "__add__"], [273, 2, 1, "", "__div__"], [273, 2, 1, "", "__mul__"], [273, 2, 1, "", "__neg__"], [273, 2, 1, "", "__sub__"], [273, 2, 1, "", "apply_baseline"], [273, 2, 1, "", "bin"], [273, 2, 1, "", "copy"], [273, 2, 1, "", "crop"], [273, 3, 1, "", "data"], [273, 2, 1, "", "decimate"], [273, 2, 1, "", "extract_label_time_course"], [273, 2, 1, "", "get_peak"], [273, 2, 1, "", "magnitude"], [273, 2, 1, "", "mean"], [273, 2, 1, "", "plot"], [273, 2, 1, "", "project"], [273, 2, 1, "", "resample"], [273, 2, 1, "", "save"], [273, 3, 1, "", "sfreq"], [273, 3, 1, "", "shape"], [273, 2, 1, "", "shift_time"], [273, 2, 1, "", "sqrt"], [273, 2, 1, "", "sum"], [273, 2, 1, "", "surface"], [273, 2, 1, "", "time_as_index"], [273, 3, 1, "", "times"], [273, 3, 1, "", "tmax"], [273, 3, 1, "", "tmin"], [273, 2, 1, "", "to_data_frame"], [273, 2, 1, "", "transform"], [273, 2, 1, "", "transform_data"], [273, 3, 1, "", "tstep"], [273, 2, 1, "", "volume"]], "mne.Projection": [[274, 2, 1, "", "__contains__"], [274, 2, 1, "", "__getitem__"], [274, 2, 1, "", "__iter__"], [274, 2, 1, "", "__len__"], [274, 2, 1, "", "clear"], [274, 2, 1, "", "copy"], [274, 2, 1, "", "fromkeys"], [274, 2, 1, "", "get"], [274, 2, 1, "", "items"], [274, 2, 1, "", "keys"], [274, 2, 1, "", "plot_topomap"], [274, 2, 1, "", "pop"], [274, 2, 1, "", "popitem"], [274, 2, 1, "", "setdefault"], [274, 2, 1, "", "update"], [274, 2, 1, "", "values"]], "mne.Report": [[275, 2, 1, "", "__len__"], [275, 2, 1, "", "add_bem"], [275, 2, 1, "", "add_code"], [275, 2, 1, "", "add_covariance"], [275, 2, 1, "", "add_custom_css"], [275, 2, 1, "", "add_custom_js"], [275, 2, 1, "", "add_epochs"], [275, 2, 1, "", "add_events"], [275, 2, 1, "", "add_evokeds"], [275, 2, 1, "", "add_figure"], [275, 2, 1, "", "add_forward"], [275, 2, 1, "", "add_html"], [275, 2, 1, "", "add_ica"], [275, 2, 1, "", "add_image"], [275, 2, 1, "", "add_inverse_operator"], [275, 2, 1, "", "add_projs"], [275, 2, 1, "", "add_raw"], [275, 2, 1, "", "add_stc"], [275, 2, 1, "", "add_sys_info"], [275, 2, 1, "", "add_trans"], [275, 3, 1, "", "html"], [275, 2, 1, "", "parse_folder"], [275, 2, 1, "", "remove"], [275, 2, 1, "", "save"], [275, 3, 1, "", "tags"]], "mne.SourceEstimate": [[276, 2, 1, "", "__add__"], [276, 2, 1, "", "__div__"], [276, 2, 1, "", "__mul__"], [276, 2, 1, "", "__neg__"], [276, 2, 1, "", "__sub__"], [276, 2, 1, "", "apply_baseline"], [276, 2, 1, "", "bin"], [276, 2, 1, "", "center_of_mass"], [276, 2, 1, "", "copy"], [276, 2, 1, "", "crop"], [276, 3, 1, "", "data"], [276, 2, 1, "", "decimate"], [276, 2, 1, "", "estimate_snr"], [276, 2, 1, "", "expand"], [276, 2, 1, "", "extract_label_time_course"], [276, 2, 1, "", "get_peak"], [276, 2, 1, "", "in_label"], [276, 3, 1, "", "lh_data"], [276, 3, 1, "", "lh_vertno"], [276, 2, 1, "", "mean"], [276, 2, 1, "", "plot"], [276, 2, 1, "", "resample"], [276, 3, 1, "", "rh_data"], [276, 3, 1, "", "rh_vertno"], [276, 2, 1, "", "save"], [276, 3, 1, "", "sfreq"], [276, 3, 1, "", "shape"], [276, 2, 1, "", "shift_time"], [276, 2, 1, "", "sqrt"], [276, 2, 1, "", "sum"], [276, 2, 1, "", "time_as_index"], [276, 3, 1, "", "times"], [276, 3, 1, "", "tmax"], [276, 3, 1, "", "tmin"], [276, 2, 1, "", "to_data_frame"], [276, 2, 1, "", "to_original_src"], [276, 2, 1, "", "transform"], [276, 2, 1, "", "transform_data"], [276, 3, 1, "", "tstep"]], "mne.SourceMorph": [[277, 2, 1, "", "apply"], [277, 2, 1, "", "compute_vol_morph_mat"], [277, 2, 1, "", "save"]], "mne.SourceSpaces": [[278, 2, 1, "", "__add__"], [278, 2, 1, "", "__getitem__"], [278, 2, 1, "", "copy"], [278, 2, 1, "", "export_volume"], [278, 2, 1, "", "plot"], [278, 2, 1, "", "save"]], "mne.VectorSourceEstimate": [[279, 2, 1, "", "__add__"], [279, 2, 1, "", "__div__"], [279, 2, 1, "", "__mul__"], [279, 2, 1, "", "__neg__"], [279, 2, 1, "", "__sub__"], [279, 2, 1, "", "apply_baseline"], [279, 2, 1, "", "bin"], [279, 2, 1, "", "copy"], [279, 2, 1, "", "crop"], [279, 3, 1, "", "data"], [279, 2, 1, "", "decimate"], [279, 2, 1, "", "expand"], [279, 2, 1, "", "extract_label_time_course"], [279, 2, 1, "", "get_peak"], [279, 2, 1, "", "in_label"], [279, 3, 1, "", "lh_data"], [279, 3, 1, "", "lh_vertno"], [279, 2, 1, "", "magnitude"], [279, 2, 1, "", "mean"], [279, 2, 1, "", "plot"], [279, 2, 1, "", "project"], [279, 2, 1, "", "resample"], [279, 3, 1, "", "rh_data"], [279, 3, 1, "", "rh_vertno"], [279, 2, 1, "", "save"], [279, 3, 1, "", "sfreq"], [279, 3, 1, "", "shape"], [279, 2, 1, "", "shift_time"], [279, 2, 1, "", "sqrt"], [279, 2, 1, "", "sum"], [279, 2, 1, "", "time_as_index"], [279, 3, 1, "", "times"], [279, 3, 1, "", "tmax"], [279, 3, 1, "", "tmin"], [279, 2, 1, "", "to_data_frame"], [279, 2, 1, "", "to_original_src"], [279, 2, 1, "", "transform"], [279, 2, 1, "", "transform_data"], [279, 3, 1, "", "tstep"]], "mne.VolSourceEstimate": [[280, 2, 1, "", "__add__"], [280, 2, 1, "", "__div__"], [280, 2, 1, "", "__mul__"], [280, 2, 1, "", "__neg__"], [280, 2, 1, "", "__sub__"], [280, 2, 1, "", "apply_baseline"], [280, 2, 1, "", "as_volume"], [280, 2, 1, "", "bin"], [280, 2, 1, "", "copy"], [280, 2, 1, "", "crop"], [280, 3, 1, "", "data"], [280, 2, 1, "", "decimate"], [280, 2, 1, "", "extract_label_time_course"], [280, 2, 1, "", "get_peak"], [280, 2, 1, "", "in_label"], [280, 2, 1, "", "mean"], [280, 2, 1, "", "plot"], [280, 2, 1, "", "plot_3d"], [280, 2, 1, "", "resample"], [280, 2, 1, "", "save"], [280, 2, 1, "", "save_as_volume"], [280, 3, 1, "", "sfreq"], [280, 3, 1, "", "shape"], [280, 2, 1, "", "shift_time"], [280, 2, 1, "", "sqrt"], [280, 2, 1, "", "sum"], [280, 2, 1, "", "time_as_index"], [280, 3, 1, "", "times"], [280, 3, 1, "", "tmax"], [280, 3, 1, "", "tmin"], [280, 2, 1, "", "to_data_frame"], [280, 2, 1, "", "transform"], [280, 2, 1, "", "transform_data"], [280, 3, 1, "", "tstep"]], "mne.VolVectorSourceEstimate": [[281, 2, 1, "", "__add__"], [281, 2, 1, "", "__div__"], [281, 2, 1, "", "__mul__"], [281, 2, 1, "", "__neg__"], [281, 2, 1, "", "__sub__"], [281, 2, 1, "", "apply_baseline"], [281, 2, 1, "", "as_volume"], [281, 2, 1, "", "bin"], [281, 2, 1, "", "copy"], [281, 2, 1, "", "crop"], [281, 3, 1, "", "data"], [281, 2, 1, "", "decimate"], [281, 2, 1, "", "extract_label_time_course"], [281, 2, 1, "", "get_peak"], [281, 2, 1, "", "in_label"], [281, 2, 1, "", "magnitude"], [281, 2, 1, "", "mean"], [281, 2, 1, "", "plot"], [281, 2, 1, "", "plot_3d"], [281, 2, 1, "", "project"], [281, 2, 1, "", "resample"], [281, 2, 1, "", "save"], [281, 2, 1, "", "save_as_volume"], [281, 3, 1, "", "sfreq"], [281, 3, 1, "", "shape"], [281, 2, 1, "", "shift_time"], [281, 2, 1, "", "sqrt"], [281, 2, 1, "", "sum"], [281, 2, 1, "", "time_as_index"], [281, 3, 1, "", "times"], [281, 3, 1, "", "tmax"], [281, 3, 1, "", "tmin"], [281, 2, 1, "", "to_data_frame"], [281, 2, 1, "", "transform"], [281, 2, 1, "", "transform_data"], [281, 3, 1, "", "tstep"]], "mne.baseline": [[288, 4, 1, "", "rescale"]], "mne.beamformer": [[289, 1, 1, "", "Beamformer"], [290, 4, 1, "", "apply_dics"], [291, 4, 1, "", "apply_dics_csd"], [292, 4, 1, "", "apply_dics_epochs"], [293, 4, 1, "", "apply_dics_tfr_epochs"], [294, 4, 1, "", "apply_lcmv"], [295, 4, 1, "", "apply_lcmv_cov"], [296, 4, 1, "", "apply_lcmv_epochs"], [297, 4, 1, "", "apply_lcmv_raw"], [298, 4, 1, "", "make_dics"], [299, 4, 1, "", "make_lcmv"], [300, 4, 1, "", "make_lcmv_resolution_matrix"], [301, 4, 1, "", "rap_music"], [302, 4, 1, "", "read_beamformer"], [303, 4, 1, "", "trap_music"]], "mne.beamformer.Beamformer": [[289, 2, 1, "", "__contains__"], [289, 2, 1, "", "__getitem__"], [289, 2, 1, "", "__iter__"], [289, 2, 1, "", "__len__"], [289, 2, 1, "", "clear"], [289, 2, 1, "", "copy"], [289, 2, 1, "", "fromkeys"], [289, 2, 1, "", "get"], [289, 2, 1, "", "items"], [289, 2, 1, "", "keys"], [289, 2, 1, "", "pop"], [289, 2, 1, "", "popitem"], [289, 2, 1, "", "save"], [289, 2, 1, "", "setdefault"], [289, 2, 1, "", "update"], [289, 2, 1, "", "values"]], "mne.bem": [[304, 1, 1, "", "ConductorModel"], [305, 4, 1, "", "convert_flash_mris"], [306, 4, 1, "", "distance_to_bem"], [307, 4, 1, "", "fit_sphere_to_headshape"], [308, 4, 1, "", "get_fitting_dig"], [309, 4, 1, "", "make_flash_bem"], [310, 4, 1, "", "make_scalp_surfaces"], [311, 4, 1, "", "make_watershed_bem"]], "mne.bem.ConductorModel": [[304, 2, 1, "", "__contains__"], [304, 2, 1, "", "__getitem__"], [304, 2, 1, "", "__iter__"], [304, 2, 1, "", "__len__"], [304, 2, 1, "", "clear"], [304, 2, 1, "", "copy"], [304, 2, 1, "", "fromkeys"], [304, 2, 1, "", "get"], [304, 2, 1, "", "items"], [304, 2, 1, "", "keys"], [304, 2, 1, "", "pop"], [304, 2, 1, "", "popitem"], [304, 3, 1, "", "radius"], [304, 2, 1, "", "setdefault"], [304, 2, 1, "", "update"], [304, 2, 1, "", "values"]], "mne.channels": [[314, 1, 1, "", "DigMontage"], [315, 1, 1, "", "Layout"], [316, 4, 1, "", "combine_channels"], [317, 4, 1, "", "compute_dev_head_t"], [318, 4, 1, "", "compute_native_head_t"], [319, 4, 1, "", "equalize_channels"], [320, 4, 1, "", "find_ch_adjacency"], [321, 4, 1, "", "find_layout"], [322, 4, 1, "", "fix_mag_coil_types"], [323, 4, 1, "", "generate_2d_layout"], [324, 4, 1, "", "get_builtin_ch_adjacencies"], [325, 4, 1, "", "get_builtin_montages"], [326, 4, 1, "", "make_1020_channel_selections"], [327, 4, 1, "", "make_dig_montage"], [328, 4, 1, "", "make_eeg_layout"], [329, 4, 1, "", "make_grid_layout"], [330, 4, 1, "", "make_standard_montage"], [331, 4, 1, "", "read_ch_adjacency"], [332, 4, 1, "", "read_custom_montage"], [333, 4, 1, "", "read_dig_captrak"], [334, 4, 1, "", "read_dig_dat"], [335, 4, 1, "", "read_dig_egi"], [336, 4, 1, "", "read_dig_fif"], [337, 4, 1, "", "read_dig_hpts"], [338, 4, 1, "", "read_dig_localite"], [339, 4, 1, "", "read_dig_polhemus_isotrak"], [340, 4, 1, "", "read_layout"], [341, 4, 1, "", "read_polhemus_fastscan"], [342, 4, 1, "", "rename_channels"]], "mne.channels.DigMontage": [[314, 2, 1, "", "__add__"], [314, 2, 1, "", "add_estimated_fiducials"], [314, 2, 1, "", "add_mni_fiducials"], [314, 2, 1, "", "apply_trans"], [314, 2, 1, "", "copy"], [314, 2, 1, "", "get_positions"], [314, 2, 1, "", "plot"], [314, 2, 1, "", "remove_fiducials"], [314, 2, 1, "", "rename_channels"], [314, 2, 1, "", "save"]], "mne.channels.Layout": [[315, 2, 1, "", "plot"], [315, 2, 1, "", "save"]], "mne.chpi": [[343, 4, 1, "", "compute_chpi_amplitudes"], [344, 4, 1, "", "compute_chpi_locs"], [345, 4, 1, "", "compute_chpi_snr"], [346, 4, 1, "", "compute_head_pos"], [347, 4, 1, "", "extract_chpi_locs_ctf"], [348, 4, 1, "", "extract_chpi_locs_kit"], [349, 4, 1, "", "filter_chpi"], [350, 4, 1, "", "get_active_chpi"], [351, 4, 1, "", "get_chpi_info"], [352, 4, 1, "", "head_pos_to_trans_rot_t"], [353, 4, 1, "", "read_head_pos"], [354, 4, 1, "", "write_head_pos"]], "mne.coreg": [[367, 1, 1, "", "Coregistration"], [368, 4, 1, "", "estimate_head_mri_t"], [369, 4, 1, "", "get_mni_fiducials"]], "mne.coreg.Coregistration": [[367, 2, 1, "", "compute_dig_mri_distances"], [367, 2, 1, "", "fit_fiducials"], [367, 2, 1, "", "fit_icp"], [367, 2, 1, "", "omit_head_shape_points"], [367, 2, 1, "", "reset"], [367, 3, 1, "", "scale"], [367, 2, 1, "", "set_fid_match"], [367, 2, 1, "", "set_grow_hair"], [367, 2, 1, "", "set_rotation"], [367, 2, 1, "", "set_scale"], [367, 2, 1, "", "set_scale_mode"], [367, 2, 1, "", "set_translation"], [367, 3, 1, "", "trans"]], "mne.cov": [[371, 4, 1, "", "compute_whitener"], [372, 4, 1, "", "prepare_noise_cov"], [373, 4, 1, "", "regularize"]], "mne.cuda": [[376, 4, 1, "", "get_cuda_memory"], [377, 4, 1, "", "init_cuda"], [378, 4, 1, "", "set_cuda_device"]], "mne.datasets.brainstorm.bst_auditory": [[379, 4, 1, "", "data_path"]], "mne.datasets.brainstorm.bst_raw": [[380, 4, 1, "", "data_path"]], "mne.datasets.brainstorm.bst_resting": [[381, 4, 1, "", "data_path"]], "mne.datasets.eegbci": [[382, 4, 1, "", "load_data"], [383, 4, 1, "", "standardize"]], "mne.datasets.epilepsy_ecog": [[384, 4, 1, "", "data_path"]], "mne.datasets.erp_core": [[385, 4, 1, "", "data_path"]], "mne.datasets.eyelink": [[386, 4, 1, "", "data_path"]], "mne.datasets": [[387, 4, 1, "", "fetch_aparc_sub_parcellation"], [388, 4, 1, "", "fetch_dataset"], [389, 4, 1, "", "fetch_fsaverage"], [390, 4, 1, "", "fetch_hcp_mmp_parcellation"], [391, 4, 1, "", "fetch_infant_template"], [392, 4, 1, "", "fetch_phantom"], [394, 4, 1, "", "has_dataset"]], "mne.datasets.fnirs_motor": [[393, 4, 1, "", "data_path"]], "mne.datasets.hf_sef": [[395, 4, 1, "", "data_path"]], "mne.datasets.kiloword": [[396, 4, 1, "", "data_path"]], "mne.datasets.limo": [[397, 4, 1, "", "load_data"]], "mne.datasets.misc": [[398, 4, 1, "", "data_path"]], "mne.datasets.mtrf": [[399, 4, 1, "", "data_path"]], "mne.datasets.multimodal": [[400, 4, 1, "", "data_path"]], "mne.datasets.opm": [[401, 4, 1, "", "data_path"]], "mne.datasets.phantom_4dbti": [[402, 4, 1, "", "data_path"]], "mne.datasets.refmeg_noise": [[403, 4, 1, "", "data_path"]], "mne.datasets.sample": [[404, 4, 1, "", "data_path"]], "mne.datasets.sleep_physionet.age": [[405, 4, 1, "", "fetch_data"]], "mne.datasets.sleep_physionet.temazepam": [[406, 4, 1, "", "fetch_data"]], "mne.datasets.somato": [[407, 4, 1, "", "data_path"]], "mne.datasets.spm_face": [[408, 4, 1, "", "data_path"]], "mne.datasets.ssvep": [[409, 4, 1, "", "data_path"]], "mne.datasets.ucl_opm_auditory": [[410, 4, 1, "", "data_path"]], "mne.datasets.visual_92_categories": [[411, 4, 1, "", "data_path"]], "mne.decoding": [[413, 1, 1, "", "CSP"], [414, 1, 1, "", "EMS"], [415, 1, 1, "", "FilterEstimator"], [416, 1, 1, "", "GeneralizingEstimator"], [417, 1, 1, "", "LinearModel"], [418, 1, 1, "", "PSDEstimator"], [419, 1, 1, "", "ReceptiveField"], [420, 1, 1, "", "SPoC"], [421, 1, 1, "", "SSD"], [422, 1, 1, "", "Scaler"], [423, 1, 1, "", "SlidingEstimator"], [424, 1, 1, "", "TemporalFilter"], [425, 1, 1, "", "TimeDelayingRidge"], [426, 1, 1, "", "TimeFrequency"], [427, 1, 1, "", "UnsupervisedSpatialFilter"], [428, 1, 1, "", "Vectorizer"], [429, 4, 1, "", "compute_ems"], [430, 4, 1, "", "cross_val_multiscore"], [431, 4, 1, "", "get_coef"]], "mne.decoding.CSP": [[413, 2, 1, "", "fit"], [413, 2, 1, "", "fit_transform"], [413, 2, 1, "", "get_params"], [413, 2, 1, "", "plot_filters"], [413, 2, 1, "", "plot_patterns"], [413, 2, 1, "", "set_params"], [413, 2, 1, "", "transform"]], "mne.decoding.EMS": [[414, 2, 1, "", "fit"], [414, 2, 1, "", "fit_transform"], [414, 2, 1, "", "get_params"], [414, 2, 1, "", "set_params"], [414, 2, 1, "", "transform"]], "mne.decoding.FilterEstimator": [[415, 2, 1, "", "fit"], [415, 2, 1, "", "fit_transform"], [415, 2, 1, "", "transform"]], "mne.decoding.GeneralizingEstimator": [[416, 2, 1, "", "decision_function"], [416, 2, 1, "", "fit"], [416, 2, 1, "", "fit_transform"], [416, 2, 1, "", "get_params"], [416, 2, 1, "", "predict"], [416, 2, 1, "", "predict_proba"], [416, 2, 1, "", "score"], [416, 2, 1, "", "set_params"], [416, 2, 1, "", "transform"]], "mne.decoding.LinearModel": [[417, 3, 1, "", "classes_"], [417, 2, 1, "", "decision_function"], [417, 2, 1, "", "fit"], [417, 2, 1, "", "fit_transform"], [417, 2, 1, "", "get_params"], [417, 2, 1, "", "predict"], [417, 2, 1, "", "predict_proba"], [417, 2, 1, "", "score"], [417, 2, 1, "", "set_params"], [417, 2, 1, "", "transform"]], "mne.decoding.PSDEstimator": [[418, 2, 1, "", "fit"], [418, 2, 1, "", "fit_transform"], [418, 2, 1, "", "transform"]], "mne.decoding.ReceptiveField": [[419, 2, 1, "", "fit"], [419, 2, 1, "", "get_params"], [419, 2, 1, "", "predict"], [419, 2, 1, "", "score"], [419, 2, 1, "", "set_params"]], "mne.decoding.SPoC": [[420, 2, 1, "", "fit"], [420, 2, 1, "", "fit_transform"], [420, 2, 1, "", "get_params"], [420, 2, 1, "", "plot_filters"], [420, 2, 1, "", "plot_patterns"], [420, 2, 1, "", "set_params"], [420, 2, 1, "", "transform"]], "mne.decoding.SSD": [[421, 2, 1, "", "apply"], [421, 2, 1, "", "fit"], [421, 2, 1, "", "fit_transform"], [421, 2, 1, "", "get_params"], [421, 2, 1, "", "get_spectral_ratio"], [421, 2, 1, "", "inverse_transform"], [421, 2, 1, "", "set_params"], [421, 2, 1, "", "transform"]], "mne.decoding.Scaler": [[422, 2, 1, "", "fit"], [422, 2, 1, "", "fit_transform"], [422, 2, 1, "", "get_params"], [422, 2, 1, "", "inverse_transform"], [422, 2, 1, "", "set_params"], [422, 2, 1, "", "transform"]], "mne.decoding.SlidingEstimator": [[423, 2, 1, "", "decision_function"], [423, 2, 1, "", "fit"], [423, 2, 1, "", "fit_transform"], [423, 2, 1, "", "get_params"], [423, 2, 1, "", "predict"], [423, 2, 1, "", "predict_proba"], [423, 2, 1, "", "score"], [423, 2, 1, "", "set_params"], [423, 2, 1, "", "transform"]], "mne.decoding.TemporalFilter": [[424, 2, 1, "", "fit"], [424, 2, 1, "", "fit_transform"], [424, 2, 1, "", "transform"]], "mne.decoding.TimeDelayingRidge": [[425, 2, 1, "", "fit"], [425, 2, 1, "", "get_params"], [425, 2, 1, "", "predict"], [425, 2, 1, "", "set_params"]], "mne.decoding.TimeFrequency": [[426, 2, 1, "", "fit"], [426, 2, 1, "", "fit_transform"], [426, 2, 1, "", "get_params"], [426, 2, 1, "", "set_params"], [426, 2, 1, "", "transform"]], "mne.decoding.UnsupervisedSpatialFilter": [[427, 2, 1, "", "fit"], [427, 2, 1, "", "fit_transform"], [427, 2, 1, "", "get_params"], [427, 2, 1, "", "inverse_transform"], [427, 2, 1, "", "set_params"], [427, 2, 1, "", "transform"]], "mne.decoding.Vectorizer": [[428, 2, 1, "", "fit"], [428, 2, 1, "", "fit_transform"], [428, 2, 1, "", "inverse_transform"], [428, 2, 1, "", "transform"]], "mne.dipole": [[433, 4, 1, "", "get_phantom_dipoles"]], "mne.epochs": [[434, 4, 1, "", "average_movements"], [435, 4, 1, "", "combine_event_ids"], [436, 4, 1, "", "equalize_epoch_counts"], [437, 4, 1, "", "make_metadata"]], "mne.event": [[439, 4, 1, "", "define_target_events"], [440, 4, 1, "", "match_event_names"], [441, 4, 1, "", "shift_time_events"]], "mne.export": [[443, 4, 1, "", "export_epochs"], [444, 4, 1, "", "export_evokeds"], [445, 4, 1, "", "export_evokeds_mff"], [446, 4, 1, "", "export_raw"]], "mne.filter": [[448, 4, 1, "", "construct_iir_filter"], [449, 4, 1, "", "create_filter"], [450, 4, 1, "", "estimate_ringing_samples"], [451, 4, 1, "", "filter_data"], [452, 4, 1, "", "notch_filter"], [453, 4, 1, "", "resample"]], "mne.forward": [[457, 4, 1, "", "compute_depth_prior"], [458, 4, 1, "", "compute_orient_prior"], [459, 4, 1, "", "restrict_forward_to_label"], [460, 4, 1, "", "restrict_forward_to_stc"]], "mne.gui": [[472, 4, 1, "", "coregistration"], [473, 4, 1, "", "locate_ieeg"]], "mne.inverse_sparse": [[476, 4, 1, "", "gamma_map"], [477, 4, 1, "", "make_stc_from_dipoles"], [478, 4, 1, "", "mixed_norm"], [479, 4, 1, "", "tf_mixed_norm"]], "mne.io": [[480, 1, 1, "", "BaseRaw"], [481, 1, 1, "", "Raw"], [482, 1, 1, "", "RawArray"], [483, 4, 1, "", "anonymize_info"], [879, 0, 0, "-", "kit"], [485, 4, 1, "", "read_fiducials"], [486, 4, 1, "", "read_info"], [487, 4, 1, "", "read_raw"], [488, 4, 1, "", "read_raw_artemis123"], [489, 4, 1, "", "read_raw_bdf"], [490, 4, 1, "", "read_raw_boxy"], [491, 4, 1, "", "read_raw_brainvision"], [492, 4, 1, "", "read_raw_bti"], [493, 4, 1, "", "read_raw_cnt"], [494, 4, 1, "", "read_raw_ctf"], [495, 4, 1, "", "read_raw_curry"], [496, 4, 1, "", "read_raw_edf"], [497, 4, 1, "", "read_raw_eeglab"], [498, 4, 1, "", "read_raw_egi"], [499, 4, 1, "", "read_raw_eximia"], [500, 4, 1, "", "read_raw_eyelink"], [501, 4, 1, "", "read_raw_fieldtrip"], [502, 4, 1, "", "read_raw_fif"], [503, 4, 1, "", "read_raw_fil"], [504, 4, 1, "", "read_raw_gdf"], [505, 4, 1, "", "read_raw_hitachi"], [506, 4, 1, "", "read_raw_kit"], [507, 4, 1, "", "read_raw_nedf"], [508, 4, 1, "", "read_raw_nicolet"], [509, 4, 1, "", "read_raw_nihon"], [510, 4, 1, "", "read_raw_nirx"], [511, 4, 1, "", "read_raw_persyst"], [512, 4, 1, "", "read_raw_snirf"], [513, 4, 1, "", "show_fiff"], [514, 4, 1, "", "write_fiducials"]], "mne.io.Raw": [[481, 2, 1, "", "__contains__"], [481, 2, 1, "", "__getitem__"], [481, 2, 1, "", "__len__"], [481, 3, 1, "", "acqparser"], [481, 2, 1, "", "add_channels"], [481, 2, 1, "", "add_events"], [481, 2, 1, "", "add_proj"], [481, 2, 1, "", "add_reference_channels"], [481, 3, 1, "", "annotations"], [481, 2, 1, "", "anonymize"], [481, 2, 1, "", "append"], [481, 2, 1, "", "apply_function"], [481, 2, 1, "", "apply_gradient_compensation"], [481, 2, 1, "", "apply_hilbert"], [481, 2, 1, "", "apply_proj"], [481, 3, 1, "", "ch_names"], [481, 2, 1, "", "close"], [481, 3, 1, "", "compensation_grade"], [481, 2, 1, "", "compute_psd"], [481, 2, 1, "", "copy"], [481, 2, 1, "", "crop"], [481, 2, 1, "", "crop_by_annotations"], [481, 2, 1, "", "decimate"], [481, 2, 1, "", "del_proj"], [481, 2, 1, "", "describe"], [481, 2, 1, "", "drop_channels"], [481, 2, 1, "", "export"], [481, 3, 1, "", "filenames"], [481, 2, 1, "", "filter"], [481, 3, 1, "", "first_samp"], [481, 3, 1, "", "first_time"], [481, 2, 1, "", "fix_mag_coil_types"], [481, 2, 1, "", "get_channel_types"], [481, 2, 1, "", "get_data"], [481, 2, 1, "", "get_montage"], [481, 2, 1, "", "interpolate_bads"], [481, 3, 1, "", "last_samp"], [481, 2, 1, "", "load_bad_channels"], [481, 2, 1, "", "load_data"], [481, 3, 1, "", "n_times"], [481, 2, 1, "", "notch_filter"], [481, 2, 1, "", "pick"], [481, 2, 1, "", "pick_channels"], [481, 2, 1, "", "pick_types"], [481, 2, 1, "", "plot"], [481, 2, 1, "", "plot_projs_topomap"], [481, 2, 1, "", "plot_psd"], [481, 2, 1, "", "plot_psd_topo"], [481, 2, 1, "", "plot_psd_topomap"], [481, 2, 1, "", "plot_sensors"], [481, 3, 1, "", "proj"], [481, 2, 1, "", "rename_channels"], [481, 2, 1, "", "reorder_channels"], [481, 2, 1, "", "resample"], [481, 2, 1, "", "save"], [481, 2, 1, "", "savgol_filter"], [481, 2, 1, "", "set_annotations"], [481, 2, 1, "", "set_channel_types"], [481, 2, 1, "", "set_eeg_reference"], [481, 2, 1, "", "set_meas_date"], [481, 2, 1, "", "set_montage"], [481, 2, 1, "", "shift_time"], [481, 2, 1, "", "time_as_index"], [481, 3, 1, "", "times"], [481, 3, 1, "", "tmax"], [481, 3, 1, "", "tmin"], [481, 2, 1, "", "to_data_frame"]], "mne.io.RawArray": [[482, 2, 1, "", "__contains__"], [482, 2, 1, "", "__getitem__"], [482, 2, 1, "", "__len__"], [482, 2, 1, "", "add_channels"], [482, 2, 1, "", "add_events"], [482, 2, 1, "", "add_proj"], [482, 2, 1, "", "add_reference_channels"], [482, 3, 1, "", "annotations"], [482, 2, 1, "", "anonymize"], [482, 2, 1, "", "append"], [482, 2, 1, "", "apply_function"], [482, 2, 1, "", "apply_gradient_compensation"], [482, 2, 1, "", "apply_hilbert"], [482, 2, 1, "", "apply_proj"], [482, 3, 1, "", "ch_names"], [482, 2, 1, "", "close"], [482, 3, 1, "", "compensation_grade"], [482, 2, 1, "", "compute_psd"], [482, 2, 1, "", "copy"], [482, 2, 1, "", "crop"], [482, 2, 1, "", "crop_by_annotations"], [482, 2, 1, "", "decimate"], [482, 2, 1, "", "del_proj"], [482, 2, 1, "", "describe"], [482, 2, 1, "", "drop_channels"], [482, 2, 1, "", "export"], [482, 3, 1, "", "filenames"], [482, 2, 1, "", "filter"], [482, 3, 1, "", "first_samp"], [482, 3, 1, "", "first_time"], [482, 2, 1, "", "get_channel_types"], [482, 2, 1, "", "get_data"], [482, 2, 1, "", "get_montage"], [482, 2, 1, "", "interpolate_bads"], [482, 3, 1, "", "last_samp"], [482, 2, 1, "", "load_bad_channels"], [482, 2, 1, "", "load_data"], [482, 3, 1, "", "n_times"], [482, 2, 1, "", "notch_filter"], [482, 2, 1, "", "pick"], [482, 2, 1, "", "pick_channels"], [482, 2, 1, "", "pick_types"], [482, 2, 1, "", "plot"], [482, 2, 1, "", "plot_projs_topomap"], [482, 2, 1, "", "plot_psd"], [482, 2, 1, "", "plot_psd_topo"], [482, 2, 1, "", "plot_psd_topomap"], [482, 2, 1, "", "plot_sensors"], [482, 3, 1, "", "proj"], [482, 2, 1, "", "rename_channels"], [482, 2, 1, "", "reorder_channels"], [482, 2, 1, "", "resample"], [482, 2, 1, "", "save"], [482, 2, 1, "", "savgol_filter"], [482, 2, 1, "", "set_annotations"], [482, 2, 1, "", "set_channel_types"], [482, 2, 1, "", "set_eeg_reference"], [482, 2, 1, "", "set_meas_date"], [482, 2, 1, "", "set_montage"], [482, 2, 1, "", "shift_time"], [482, 2, 1, "", "time_as_index"], [482, 3, 1, "", "times"], [482, 3, 1, "", "tmax"], [482, 3, 1, "", "tmin"], [482, 2, 1, "", "to_data_frame"]], "mne.io.kit": [[484, 4, 1, "", "read_mrk"]], "mne.label": [[515, 4, 1, "", "select_sources"]], "mne.minimum_norm": [[529, 1, 1, "", "InverseOperator"], [530, 4, 1, "", "apply_inverse"], [531, 4, 1, "", "apply_inverse_cov"], [532, 4, 1, "", "apply_inverse_epochs"], [533, 4, 1, "", "apply_inverse_raw"], [534, 4, 1, "", "apply_inverse_tfr_epochs"], [535, 4, 1, "", "compute_rank_inverse"], [536, 4, 1, "", "compute_source_psd"], [537, 4, 1, "", "compute_source_psd_epochs"], [538, 4, 1, "", "estimate_snr"], [539, 4, 1, "", "get_cross_talk"], [540, 4, 1, "", "get_point_spread"], [541, 4, 1, "", "make_inverse_operator"], [542, 4, 1, "", "make_inverse_resolution_matrix"], [543, 4, 1, "", "prepare_inverse_operator"], [544, 4, 1, "", "read_inverse_operator"], [545, 4, 1, "", "resolution_metrics"], [546, 4, 1, "", "source_band_induced_power"], [547, 4, 1, "", "source_induced_power"], [548, 4, 1, "", "write_inverse_operator"]], "mne.minimum_norm.InverseOperator": [[529, 2, 1, "", "__contains__"], [529, 2, 1, "", "__getitem__"], [529, 2, 1, "", "__iter__"], [529, 2, 1, "", "__len__"], [529, 2, 1, "", "clear"], [529, 2, 1, "", "copy"], [529, 2, 1, "", "fromkeys"], [529, 2, 1, "", "get"], [529, 2, 1, "", "items"], [529, 2, 1, "", "keys"], [529, 2, 1, "", "pop"], [529, 2, 1, "", "popitem"], [529, 2, 1, "", "setdefault"], [529, 2, 1, "", "update"], [529, 2, 1, "", "values"]], "mne.preprocessing": [[562, 1, 1, "", "EOGRegression"], [563, 1, 1, "", "ICA"], [564, 1, 1, "", "Xdawn"], [565, 4, 1, "", "annotate_amplitude"], [566, 4, 1, "", "annotate_break"], [567, 4, 1, "", "annotate_movement"], [568, 4, 1, "", "annotate_muscle_zscore"], [569, 4, 1, "", "annotate_nan"], [570, 4, 1, "", "compute_average_dev_head_t"], [571, 4, 1, "", "compute_bridged_electrodes"], [572, 4, 1, "", "compute_current_source_density"], [573, 4, 1, "", "compute_fine_calibration"], [574, 4, 1, "", "compute_maxwell_basis"], [575, 4, 1, "", "compute_proj_ecg"], [576, 4, 1, "", "compute_proj_eog"], [577, 4, 1, "", "compute_proj_hfc"], [578, 4, 1, "", "corrmap"], [579, 4, 1, "", "cortical_signal_suppression"], [580, 4, 1, "", "create_ecg_epochs"], [581, 4, 1, "", "create_eog_epochs"], [582, 4, 1, "", "equalize_bads"], [877, 0, 0, "-", "eyetracking"], [584, 4, 1, "", "find_bad_channels_maxwell"], [585, 4, 1, "", "find_ecg_events"], [586, 4, 1, "", "find_eog_events"], [587, 4, 1, "", "fix_stim_artifact"], [588, 4, 1, "", "ica_find_ecg_events"], [589, 4, 1, "", "ica_find_eog_events"], [877, 0, 0, "-", "ieeg"], [593, 4, 1, "", "infomax"], [594, 4, 1, "", "interpolate_bridged_electrodes"], [595, 4, 1, "", "maxwell_filter"], [596, 4, 1, "", "maxwell_filter_prepare_emptyroom"], [877, 0, 0, "-", "nirs"], [603, 4, 1, "", "oversampled_temporal_projection"], [604, 4, 1, "", "peak_finder"], [605, 4, 1, "", "read_eog_regression"], [606, 4, 1, "", "read_fine_calibration"], [607, 4, 1, "", "read_ica"], [608, 4, 1, "", "read_ica_eeglab"], [609, 4, 1, "", "realign_raw"], [610, 4, 1, "", "regress_artifact"], [611, 4, 1, "", "write_fine_calibration"]], "mne.preprocessing.EOGRegression": [[562, 2, 1, "", "apply"], [562, 2, 1, "", "fit"], [562, 2, 1, "", "plot"], [562, 2, 1, "", "save"]], "mne.preprocessing.ICA": [[563, 2, 1, "", "__contains__"], [563, 2, 1, "", "apply"], [563, 3, 1, "", "compensation_grade"], [563, 2, 1, "", "copy"], [563, 2, 1, "", "find_bads_ecg"], [563, 2, 1, "", "find_bads_eog"], [563, 2, 1, "", "find_bads_muscle"], [563, 2, 1, "", "find_bads_ref"], [563, 2, 1, "", "fit"], [563, 2, 1, "", "get_channel_types"], [563, 2, 1, "", "get_components"], [563, 2, 1, "", "get_explained_variance_ratio"], [563, 2, 1, "", "get_sources"], [563, 2, 1, "", "plot_components"], [563, 2, 1, "", "plot_overlay"], [563, 2, 1, "", "plot_properties"], [563, 2, 1, "", "plot_scores"], [563, 2, 1, "", "plot_sources"], [563, 2, 1, "", "save"], [563, 2, 1, "", "score_sources"]], "mne.preprocessing.Xdawn": [[564, 2, 1, "", "apply"], [564, 2, 1, "", "fit"], [564, 2, 1, "", "fit_transform"], [564, 2, 1, "", "get_params"], [564, 2, 1, "", "inverse_transform"], [564, 2, 1, "", "set_params"], [564, 2, 1, "", "transform"]], "mne.preprocessing.eyetracking": [[583, 4, 1, "", "set_channel_types_eyetrack"]], "mne.preprocessing.ieeg": [[590, 4, 1, "", "make_montage_volume"], [591, 4, 1, "", "project_sensors_onto_brain"], [592, 4, 1, "", "warp_montage"]], "mne.preprocessing.nirs": [[597, 4, 1, "", "beer_lambert_law"], [598, 4, 1, "", "optical_density"], [599, 4, 1, "", "scalp_coupling_index"], [600, 4, 1, "", "short_channels"], [601, 4, 1, "", "source_detector_distances"], [602, 4, 1, "", "temporal_derivative_distribution_repair"]], "mne.simulation": [[658, 1, 1, "", "SourceSimulator"], [659, 4, 1, "", "add_chpi"], [660, 4, 1, "", "add_ecg"], [661, 4, 1, "", "add_eog"], [662, 4, 1, "", "add_noise"], [883, 0, 0, "-", "metrics"], [671, 4, 1, "", "select_source_in_label"], [672, 4, 1, "", "simulate_evoked"], [673, 4, 1, "", "simulate_raw"], [674, 4, 1, "", "simulate_sparse_stc"], [675, 4, 1, "", "simulate_stc"]], "mne.simulation.SourceSimulator": [[658, 2, 1, "", "__iter__"], [658, 2, 1, "", "add_data"], [658, 3, 1, "", "duration"], [658, 2, 1, "", "get_stc"], [658, 2, 1, "", "get_stim_channel"], [658, 3, 1, "", "n_times"]], "mne.simulation.metrics": [[663, 4, 1, "", "cosine_score"], [664, 4, 1, "", "f1_score"], [665, 4, 1, "", "peak_position_error"], [666, 4, 1, "", "precision_score"], [667, 4, 1, "", "recall_score"], [668, 4, 1, "", "region_localization_error"], [669, 4, 1, "", "roc_auc_score"], [670, 4, 1, "", "spatial_deviation_error"]], "mne.source_space": [[676, 4, 1, "", "compute_distance_to_sensors"], [677, 4, 1, "", "get_decimated_surfaces"]], "mne.stats": [[686, 4, 1, "", "bonferroni_correction"], [687, 4, 1, "", "bootstrap_confidence_interval"], [688, 4, 1, "", "combine_adjacency"], [689, 4, 1, "", "f_mway_rm"], [690, 4, 1, "", "f_oneway"], [691, 4, 1, "", "f_threshold_mway_rm"], [692, 4, 1, "", "fdr_correction"], [693, 4, 1, "", "linear_regression"], [694, 4, 1, "", "linear_regression_raw"], [695, 4, 1, "", "permutation_cluster_1samp_test"], [696, 4, 1, "", "permutation_cluster_test"], [697, 4, 1, "", "permutation_t_test"], [698, 4, 1, "", "spatio_temporal_cluster_1samp_test"], [699, 4, 1, "", "spatio_temporal_cluster_test"], [700, 4, 1, "", "summarize_clusters_stc"], [701, 4, 1, "", "ttest_1samp_no_p"], [702, 4, 1, "", "ttest_ind_no_p"]], "mne.surface": [[705, 4, 1, "", "complete_surface_info"], [706, 4, 1, "", "read_curvature"]], "mne.time_frequency": [[708, 1, 1, "", "AverageTFR"], [709, 1, 1, "", "CrossSpectralDensity"], [710, 1, 1, "", "EpochsSpectrum"], [711, 1, 1, "", "EpochsTFR"], [712, 1, 1, "", "Spectrum"], [713, 4, 1, "", "csd_array_fourier"], [714, 4, 1, "", "csd_array_morlet"], [715, 4, 1, "", "csd_array_multitaper"], [716, 4, 1, "", "csd_fourier"], [717, 4, 1, "", "csd_morlet"], [718, 4, 1, "", "csd_multitaper"], [719, 4, 1, "", "csd_tfr"], [720, 4, 1, "", "dpss_windows"], [721, 4, 1, "", "fit_iir_model_raw"], [722, 4, 1, "", "fwhm"], [723, 4, 1, "", "istft"], [724, 4, 1, "", "morlet"], [725, 4, 1, "", "pick_channels_csd"], [726, 4, 1, "", "psd_array_multitaper"], [727, 4, 1, "", "psd_array_welch"], [728, 4, 1, "", "read_csd"], [729, 4, 1, "", "read_spectrum"], [730, 4, 1, "", "read_tfrs"], [731, 4, 1, "", "stft"], [732, 4, 1, "", "stftfreq"], [886, 0, 0, "-", "tfr"], [735, 4, 1, "", "tfr_array_morlet"], [736, 4, 1, "", "tfr_array_multitaper"], [737, 4, 1, "", "tfr_array_stockwell"], [738, 4, 1, "", "tfr_morlet"], [739, 4, 1, "", "tfr_multitaper"], [740, 4, 1, "", "tfr_stockwell"], [741, 4, 1, "", "write_tfrs"]], "mne.time_frequency.AverageTFR": [[708, 2, 1, "", "__add__"], [708, 2, 1, "", "__contains__"], [708, 2, 1, "", "__mul__"], [708, 2, 1, "", "__sub__"], [708, 2, 1, "", "add_channels"], [708, 2, 1, "", "add_reference_channels"], [708, 2, 1, "", "apply_baseline"], [708, 3, 1, "", "ch_names"], [708, 3, 1, "", "compensation_grade"], [708, 2, 1, "", "copy"], [708, 2, 1, "", "crop"], [708, 2, 1, "", "decimate"], [708, 2, 1, "", "drop_channels"], [708, 2, 1, "", "get_channel_types"], [708, 2, 1, "", "pick"], [708, 2, 1, "", "pick_channels"], [708, 2, 1, "", "pick_types"], [708, 2, 1, "", "plot"], [708, 2, 1, "", "plot_joint"], [708, 2, 1, "", "plot_topo"], [708, 2, 1, "", "plot_topomap"], [708, 2, 1, "", "reorder_channels"], [708, 2, 1, "", "save"], [708, 2, 1, "", "shift_time"], [708, 2, 1, "", "time_as_index"], [708, 3, 1, "", "times"], [708, 3, 1, "", "tmax"], [708, 3, 1, "", "tmin"], [708, 2, 1, "", "to_data_frame"]], "mne.time_frequency.CrossSpectralDensity": [[709, 2, 1, "", "__getitem__"], [709, 2, 1, "", "__len__"], [709, 2, 1, "", "copy"], [709, 2, 1, "", "get_data"], [709, 2, 1, "", "mean"], [709, 3, 1, "", "n_channels"], [709, 2, 1, "", "pick_channels"], [709, 2, 1, "", "pick_frequency"], [709, 2, 1, "", "plot"], [709, 2, 1, "", "save"], [709, 2, 1, "", "sum"]], "mne.time_frequency.EpochsSpectrum": [[710, 2, 1, "", "__contains__"], [710, 2, 1, "", "__getitem__"], [710, 2, 1, "", "__iter__"], [710, 2, 1, "", "__len__"], [710, 2, 1, "", "add_channels"], [710, 2, 1, "", "add_reference_channels"], [710, 2, 1, "", "average"], [710, 3, 1, "", "compensation_grade"], [710, 2, 1, "", "copy"], [710, 2, 1, "", "drop_channels"], [710, 2, 1, "", "get_channel_types"], [710, 2, 1, "", "get_data"], [710, 3, 1, "", "metadata"], [710, 2, 1, "", "next"], [710, 2, 1, "", "pick"], [710, 2, 1, "", "pick_channels"], [710, 2, 1, "", "pick_types"], [710, 2, 1, "", "plot"], [710, 2, 1, "", "plot_topo"], [710, 2, 1, "", "plot_topomap"], [710, 2, 1, "", "reorder_channels"], [710, 2, 1, "", "save"], [710, 2, 1, "", "to_data_frame"], [710, 2, 1, "", "units"]], "mne.time_frequency.EpochsTFR": [[711, 2, 1, "", "__contains__"], [711, 2, 1, "", "__getitem__"], [711, 2, 1, "", "__iter__"], [711, 2, 1, "", "__len__"], [711, 2, 1, "", "add_channels"], [711, 2, 1, "", "add_reference_channels"], [711, 2, 1, "", "apply_baseline"], [711, 2, 1, "", "average"], [711, 3, 1, "", "ch_names"], [711, 3, 1, "", "compensation_grade"], [711, 2, 1, "", "copy"], [711, 2, 1, "", "crop"], [711, 2, 1, "", "decimate"], [711, 2, 1, "", "drop_channels"], [711, 2, 1, "", "get_channel_types"], [711, 3, 1, "", "metadata"], [711, 2, 1, "", "next"], [711, 2, 1, "", "pick"], [711, 2, 1, "", "pick_channels"], [711, 2, 1, "", "pick_types"], [711, 2, 1, "", "reorder_channels"], [711, 2, 1, "", "save"], [711, 2, 1, "", "shift_time"], [711, 2, 1, "", "time_as_index"], [711, 3, 1, "", "times"], [711, 3, 1, "", "tmax"], [711, 3, 1, "", "tmin"], [711, 2, 1, "", "to_data_frame"]], "mne.time_frequency.Spectrum": [[712, 2, 1, "", "__contains__"], [712, 2, 1, "", "__getitem__"], [712, 2, 1, "", "add_channels"], [712, 2, 1, "", "add_reference_channels"], [712, 3, 1, "", "compensation_grade"], [712, 2, 1, "", "copy"], [712, 2, 1, "", "drop_channels"], [712, 2, 1, "", "get_channel_types"], [712, 2, 1, "", "get_data"], [712, 2, 1, "", "pick"], [712, 2, 1, "", "pick_channels"], [712, 2, 1, "", "pick_types"], [712, 2, 1, "", "plot"], [712, 2, 1, "", "plot_topo"], [712, 2, 1, "", "plot_topomap"], [712, 2, 1, "", "reorder_channels"], [712, 2, 1, "", "save"], [712, 2, 1, "", "to_data_frame"], [712, 2, 1, "", "units"]], "mne.time_frequency.tfr": [[733, 4, 1, "", "cwt"], [734, 4, 1, "", "morlet"]], "mne.transforms": [[743, 1, 1, "", "Transform"], [744, 4, 1, "", "apply_volume_registration"], [745, 4, 1, "", "apply_volume_registration_points"], [746, 4, 1, "", "compute_volume_registration"], [747, 4, 1, "", "quat_to_rot"], [748, 4, 1, "", "read_ras_mni_t"], [749, 4, 1, "", "rot_to_quat"]], "mne.transforms.Transform": [[743, 2, 1, "", "__contains__"], [743, 2, 1, "", "__getitem__"], [743, 2, 1, "", "__iter__"], [743, 2, 1, "", "__len__"], [743, 2, 1, "", "clear"], [743, 2, 1, "", "copy"], [743, 3, 1, "", "from_str"], [743, 2, 1, "", "fromkeys"], [743, 2, 1, "", "get"], [743, 2, 1, "", "items"], [743, 2, 1, "", "keys"], [743, 2, 1, "", "pop"], [743, 2, 1, "", "popitem"], [743, 2, 1, "", "save"], [743, 2, 1, "", "setdefault"], [743, 3, 1, "", "to_str"], [743, 2, 1, "", "update"], [743, 2, 1, "", "values"]], "mne.utils": [[752, 1, 1, "", "deprecated"], [753, 4, 1, "", "warn"]], "mne.viz": [[756, 1, 1, "", "Brain"], [757, 1, 1, "", "ClickableImage"], [758, 1, 1, "", "Figure3D"], [759, 4, 1, "", "add_background_image"], [760, 4, 1, "", "centers_to_edges"], [761, 4, 1, "", "circular_layout"], [762, 4, 1, "", "close_3d_figure"], [763, 4, 1, "", "close_all_3d_figures"], [764, 4, 1, "", "compare_fiff"], [765, 4, 1, "", "create_3d_figure"], [766, 4, 1, "", "get_3d_backend"], [767, 4, 1, "", "get_brain_class"], [768, 4, 1, "", "get_browser_backend"], [769, 4, 1, "", "iter_topography"], [770, 4, 1, "", "link_brains"], [771, 4, 1, "", "mne_analyze_colormap"], [772, 4, 1, "", "plot_alignment"], [773, 4, 1, "", "plot_arrowmap"], [774, 4, 1, "", "plot_bem"], [775, 4, 1, "", "plot_brain_colorbar"], [776, 4, 1, "", "plot_bridged_electrodes"], [777, 4, 1, "", "plot_ch_adjacency"], [778, 4, 1, "", "plot_channel_labels_circle"], [779, 4, 1, "", "plot_chpi_snr"], [780, 4, 1, "", "plot_compare_evokeds"], [781, 4, 1, "", "plot_cov"], [782, 4, 1, "", "plot_csd"], [783, 4, 1, "", "plot_dipole_amplitudes"], [784, 4, 1, "", "plot_dipole_locations"], [785, 4, 1, "", "plot_drop_log"], [786, 4, 1, "", "plot_epochs"], [787, 4, 1, "", "plot_epochs_image"], [788, 4, 1, "", "plot_epochs_psd_topomap"], [789, 4, 1, "", "plot_events"], [790, 4, 1, "", "plot_evoked"], [791, 4, 1, "", "plot_evoked_field"], [792, 4, 1, "", "plot_evoked_image"], [793, 4, 1, "", "plot_evoked_joint"], [794, 4, 1, "", "plot_evoked_topo"], [795, 4, 1, "", "plot_evoked_topomap"], [796, 4, 1, "", "plot_evoked_white"], [797, 4, 1, "", "plot_filter"], [798, 4, 1, "", "plot_head_positions"], [799, 4, 1, "", "plot_ica_components"], [800, 4, 1, "", "plot_ica_overlay"], [801, 4, 1, "", "plot_ica_properties"], [802, 4, 1, "", "plot_ica_scores"], [803, 4, 1, "", "plot_ica_sources"], [804, 4, 1, "", "plot_ideal_filter"], [805, 4, 1, "", "plot_layout"], [806, 4, 1, "", "plot_montage"], [807, 4, 1, "", "plot_projs_joint"], [808, 4, 1, "", "plot_projs_topomap"], [809, 4, 1, "", "plot_raw"], [810, 4, 1, "", "plot_raw_psd"], [811, 4, 1, "", "plot_regression_weights"], [812, 4, 1, "", "plot_sensors"], [813, 4, 1, "", "plot_snr_estimate"], [814, 4, 1, "", "plot_source_estimates"], [815, 4, 1, "", "plot_sparse_source_estimates"], [816, 4, 1, "", "plot_tfr_topomap"], [817, 4, 1, "", "plot_topo_image_epochs"], [818, 4, 1, "", "plot_topomap"], [819, 4, 1, "", "plot_vector_source_estimates"], [820, 4, 1, "", "plot_volume_source_estimates"], [821, 4, 1, "", "set_3d_backend"], [822, 4, 1, "", "set_3d_options"], [823, 4, 1, "", "set_3d_title"], [824, 4, 1, "", "set_3d_view"], [825, 4, 1, "", "set_browser_backend"], [826, 4, 1, "", "snapshot_brain_montage"], [827, 4, 1, "", "use_3d_backend"], [828, 4, 1, "", "use_browser_backend"]], "mne.viz.Brain": [[756, 2, 1, "", "add_annotation"], [756, 2, 1, "", "add_data"], [756, 2, 1, "", "add_dipole"], [756, 2, 1, "", "add_foci"], [756, 2, 1, "", "add_forward"], [756, 2, 1, "", "add_head"], [756, 2, 1, "", "add_label"], [756, 2, 1, "", "add_sensors"], [756, 2, 1, "", "add_skull"], [756, 2, 1, "", "add_text"], [756, 2, 1, "", "add_volume_labels"], [756, 2, 1, "", "apply_auto_scaling"], [756, 2, 1, "", "clear_glyphs"], [756, 2, 1, "", "close"], [756, 3, 1, "", "data"], [756, 2, 1, "", "get_picked_points"], [756, 2, 1, "", "get_view"], [756, 2, 1, "", "help"], [756, 3, 1, "", "interaction"], [756, 2, 1, "", "plot_time_course"], [756, 2, 1, "", "plot_time_line"], [756, 2, 1, "", "remove_annotations"], [756, 2, 1, "", "remove_data"], [756, 2, 1, "", "remove_dipole"], [756, 2, 1, "", "remove_forward"], [756, 2, 1, "", "remove_head"], [756, 2, 1, "", "remove_labels"], [756, 2, 1, "", "remove_sensors"], [756, 2, 1, "", "remove_skull"], [756, 2, 1, "", "remove_text"], [756, 2, 1, "", "remove_volume_labels"], [756, 2, 1, "", "reset"], [756, 2, 1, "", "reset_view"], [756, 2, 1, "", "restore_user_scaling"], [756, 2, 1, "", "save_image"], [756, 2, 1, "", "save_movie"], [756, 2, 1, "", "screenshot"], [756, 2, 1, "", "set_data_smoothing"], [756, 2, 1, "", "set_playback_speed"], [756, 2, 1, "", "set_time"], [756, 2, 1, "", "set_time_interpolation"], [756, 2, 1, "", "set_time_point"], [756, 2, 1, "", "setup_time_viewer"], [756, 2, 1, "", "show"], [756, 2, 1, "", "show_view"], [756, 3, 1, "", "time_interpolation"], [756, 2, 1, "", "toggle_interface"], [756, 2, 1, "", "toggle_playback"], [756, 2, 1, "", "update_lut"]], "mne.viz.ClickableImage": [[757, 2, 1, "", "onclick"], [757, 2, 1, "", "plot_clicks"], [757, 2, 1, "", "to_layout"]], "mne.viz.Figure3D": [[758, 3, 1, "", "plotter"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"]}, "titleterms": {"connect": [0, 27, 146, 247, 847], "analysi": [0, 4, 10, 14, 27, 36, 137, 146, 151, 165, 166, 218, 233, 238, 241, 242, 243, 865, 867, 874], "exampl": [0, 3, 27, 98, 105, 138, 146, 156, 165, 175, 196, 205, 206, 207, 257, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 284, 288, 289, 291, 293, 294, 295, 298, 299, 300, 301, 303, 304, 312, 313, 314, 315, 316, 318, 320, 324, 325, 326, 328, 330, 332, 336, 340, 343, 344, 345, 346, 347, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 373, 375, 384, 391, 404, 405, 413, 414, 416, 417, 419, 420, 421, 422, 423, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 439, 442, 447, 448, 449, 453, 454, 456, 461, 462, 465, 466, 470, 472, 476, 477, 478, 479, 481, 482, 486, 487, 488, 489, 491, 492, 493, 494, 496, 497, 498, 499, 500, 502, 503, 504, 506, 508, 509, 510, 511, 512, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 536, 537, 539, 540, 541, 542, 544, 545, 546, 547, 550, 552, 554, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 570, 571, 572, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 587, 594, 595, 597, 598, 599, 601, 602, 603, 607, 613, 614, 615, 616, 617, 618, 619, 622, 625, 627, 629, 630, 633, 635, 637, 638, 639, 640, 642, 646, 648, 649, 651, 652, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 670, 672, 673, 674, 675, 676, 680, 686, 687, 688, 689, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 703, 704, 706, 707, 708, 709, 710, 711, 712, 716, 717, 718, 719, 721, 724, 727, 735, 738, 739, 740, 748, 750, 751, 755, 756, 757, 760, 761, 765, 767, 769, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 783, 784, 787, 789, 792, 794, 796, 797, 798, 804, 807, 808, 813, 814, 815, 818, 819, 823, 824, 826, 828, 836, 841, 864, 873, 876], "brainstorm": [1, 183, 184, 191, 379, 380, 381, 864], "raw": [1, 7, 29, 71, 81, 90, 93, 94, 137, 140, 152, 168, 172, 177, 204, 211, 212, 213, 216, 217, 218, 219, 222, 257, 481, 867, 870, 879], "median": [1, 864], "nerv": [1, 864], "dataset": [1, 2, 3, 4, 7, 27, 71, 83, 183, 184, 185, 191, 216, 242, 250, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 864, 867], "refer": [1, 4, 8, 10, 12, 13, 15, 16, 18, 19, 21, 33, 35, 40, 42, 43, 44, 46, 51, 54, 55, 58, 59, 60, 66, 71, 72, 75, 76, 79, 83, 84, 88, 94, 101, 109, 112, 113, 117, 119, 121, 126, 129, 137, 141, 144, 151, 155, 157, 162, 176, 178, 180, 183, 184, 189, 191, 195, 196, 200, 202, 204, 205, 206, 207, 208, 210, 212, 224, 227, 228, 232, 240, 847, 863, 864, 867, 870, 878], "hf": 2, "sef": [2, 864], "open": [3, 27, 257, 847, 876], "singl": [4, 28, 104, 128, 229, 230, 231], "trial": [4, 128, 211, 217, 229, 230, 231, 241, 242], "linear": [4, 18, 257, 870], "regress": [4, 74, 99, 101, 141, 204, 212], "limo": [4, 397, 864], "about": [4, 170, 171, 199, 870], "data": [4, 5, 7, 8, 11, 13, 15, 18, 19, 21, 27, 29, 30, 41, 42, 49, 51, 57, 60, 64, 66, 72, 74, 76, 80, 81, 86, 89, 90, 92, 93, 94, 95, 96, 97, 99, 100, 109, 114, 115, 116, 119, 120, 121, 129, 135, 136, 137, 140, 141, 142, 146, 147, 149, 150, 152, 159, 165, 166, 167, 168, 169, 172, 175, 177, 178, 180, 188, 189, 190, 191, 192, 193, 195, 201, 203, 204, 211, 212, 213, 216, 217, 218, 219, 220, 222, 223, 224, 228, 231, 232, 233, 235, 236, 237, 240, 242, 249, 257, 673, 863, 864, 867, 870, 873, 879, 882, 884], "load": [4, 19, 47, 74, 115, 116, 136, 137, 140, 141, 149, 159, 166, 175, 178, 190, 195, 206, 213, 216, 223, 870], "visual": [4, 19, 27, 47, 48, 49, 50, 54, 55, 112, 117, 122, 136, 140, 142, 144, 149, 150, 156, 158, 170, 177, 180, 181, 182, 195, 204, 205, 206, 207, 209, 227, 232, 235, 236, 237, 240, 847, 864, 876, 887], "event": [4, 70, 113, 137, 144, 151, 166, 168, 172, 213, 217, 252, 439, 440, 441], "condit": [4, 13, 132, 151, 230, 231], "erp": [4, 141, 144, 151, 864], "effect": [4, 16, 195, 196, 204, 206, 227, 242, 870], "stimulu": [4, 19, 213], "phase": [4, 107], "coher": [4, 241], "prepar": [4, 5, 144, 204, 237], "defin": [4, 70, 90, 156, 227, 229], "predictor": 4, "variabl": [4, 171, 847], "design": [4, 137, 196, 202, 865], "matrix": [4, 41, 65, 71, 103, 162, 227, 235, 863, 867, 870, 873], "extract": [4, 37, 39, 94, 137, 140, 209, 211, 216, 242], "coeffici": [4, 19], "plot": [4, 18, 34, 41, 42, 43, 44, 47, 48, 50, 61, 70, 71, 81, 82, 84, 116, 118, 119, 120, 123, 124, 125, 126, 127, 128, 133, 136, 141, 142, 150, 152, 162, 170, 211, 213, 217, 219, 223, 229, 230, 241, 242, 845, 867], "model": [4, 19, 23, 27, 45, 111, 157, 158, 163, 165, 166, 177, 180, 195, 197, 208, 255, 257, 863, 869, 870, 876], "result": [4, 43, 44, 54, 242], "optic": [5, 211, 212], "pump": [5, 212], "magnetomet": [5, 212], "opm": [5, 109, 188, 212, 401, 864, 876], "local": [5, 31, 165, 176, 177, 178, 182, 186, 847, 863], "perform": [5, 74, 90, 136, 195], "dipol": [5, 45, 90, 116, 176, 178, 181, 263, 433], "fit": [5, 19, 157, 176, 181, 195, 205], "minimum": [5, 870], "norm": [5, 40, 870], "comput": [6, 16, 20, 21, 25, 28, 29, 30, 32, 33, 34, 35, 39, 40, 41, 42, 45, 46, 47, 49, 51, 54, 55, 56, 58, 59, 60, 67, 71, 85, 90, 91, 94, 102, 103, 104, 106, 107, 108, 109, 110, 112, 130, 136, 139, 148, 154, 158, 159, 162, 164, 170, 174, 177, 179, 180, 187, 194, 198, 202, 204, 205, 206, 209, 215, 221, 226, 229, 230, 232, 234, 235, 236, 237, 239, 244, 248, 257, 863, 870, 876], "time": [6, 9, 13, 20, 25, 27, 32, 37, 39, 46, 56, 59, 67, 70, 71, 73, 85, 86, 91, 94, 102, 105, 106, 114, 130, 136, 139, 140, 142, 144, 145, 148, 154, 164, 165, 166, 174, 181, 187, 194, 196, 198, 205, 215, 216, 221, 226, 229, 230, 232, 234, 239, 241, 242, 243, 244, 847, 876, 886], "from": [7, 8, 15, 19, 37, 38, 43, 44, 62, 90, 104, 129, 137, 140, 142, 144, 149, 168, 169, 188, 189, 190, 192, 204, 207, 211, 213, 216, 217, 218, 219, 222, 223, 249, 257, 874], "dspm": [7, 28, 30, 34, 54, 94, 110, 177, 870], "spm": [7, 864], "face": [7, 864], "motor": [8, 864], "imageri": [8, 864], "decod": [8, 9, 11, 12, 13, 15, 17, 18, 27, 196, 251, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431], "eeg": [8, 15, 22, 55, 58, 66, 68, 71, 72, 79, 118, 125, 151, 159, 166, 182, 188, 189, 208, 228, 242, 863, 870, 876], "us": [8, 9, 14, 18, 26, 32, 33, 34, 35, 39, 47, 57, 64, 68, 72, 84, 94, 137, 143, 146, 149, 155, 156, 157, 160, 161, 171, 180, 195, 205, 208, 210, 231, 257, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 284, 288, 289, 291, 293, 294, 295, 298, 299, 300, 301, 303, 304, 312, 313, 314, 315, 316, 318, 320, 324, 325, 326, 328, 330, 332, 336, 340, 343, 344, 345, 346, 347, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 373, 375, 384, 391, 404, 405, 413, 414, 416, 417, 419, 420, 421, 422, 423, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 439, 442, 447, 448, 449, 453, 454, 456, 461, 462, 465, 466, 470, 472, 476, 477, 478, 479, 481, 482, 486, 487, 488, 489, 491, 492, 493, 494, 496, 497, 498, 499, 500, 502, 503, 504, 506, 508, 509, 510, 511, 512, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 536, 537, 539, 540, 541, 542, 544, 545, 546, 547, 550, 552, 554, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 570, 571, 572, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 587, 594, 595, 597, 598, 599, 601, 602, 603, 607, 613, 614, 615, 616, 617, 618, 619, 622, 625, 627, 629, 630, 633, 635, 637, 638, 639, 640, 642, 646, 648, 649, 651, 652, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 670, 672, 673, 674, 675, 676, 680, 686, 687, 688, 689, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 703, 704, 706, 707, 708, 709, 710, 711, 712, 716, 717, 718, 719, 721, 724, 727, 735, 738, 739, 740, 748, 750, 751, 755, 756, 757, 760, 761, 765, 767, 769, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 783, 784, 787, 789, 792, 794, 796, 797, 798, 804, 807, 808, 813, 814, 815, 818, 819, 823, 824, 826, 828, 836, 841, 845, 847, 860, 863, 867, 870, 873], "common": [8, 9, 196, 235, 237, 240], "spatial": [8, 9, 16, 21, 54, 55, 180, 196, 223], "pattern": [8, 9, 18, 196], "csp": [8, 9, 413], "frequenc": [9, 27, 32, 46, 59, 105, 113, 114, 136, 165, 166, 190, 199, 202, 209, 229, 230, 232, 240, 241, 242, 243, 864, 876, 886], "space": [9, 11, 13, 18, 24, 26, 30, 41, 54, 58, 101, 104, 107, 110, 146, 158, 159, 163, 165, 178, 196, 206, 207, 210, 217, 223, 235, 237, 257, 863, 870, 873, 882, 884], "represent": [10, 114, 211, 231, 870], "similar": [10, 149], "sourc": [11, 24, 26, 27, 30, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 44, 45, 47, 54, 58, 72, 90, 94, 95, 104, 107, 108, 109, 110, 116, 156, 158, 159, 163, 165, 172, 176, 177, 178, 180, 181, 182, 186, 196, 208, 223, 235, 236, 237, 238, 257, 863, 870, 876, 884], "continu": [12, 81, 99, 101, 146, 147, 165, 166, 190, 195, 209, 216, 218, 219, 220, 870], "target": [12, 70], "spoc": [12, 196, 420], "sensor": [13, 18, 22, 84, 96, 97, 100, 101, 116, 118, 123, 125, 133, 136, 142, 165, 170, 190, 196, 207, 211, 212, 219, 223, 232, 233, 241, 870, 882], "gener": [13, 24, 38, 92, 93, 95, 144, 189, 196, 201, 212, 223, 245, 847, 867, 870], "across": [13, 71, 82, 151, 211], "evok": [14, 30, 34, 41, 51, 60, 70, 86, 90, 92, 94, 119, 120, 121, 127, 132, 149, 150, 151, 152, 153, 165, 166, 172, 177, 204, 212, 222, 267, 863], "respons": [14, 70, 132, 144, 151, 153, 165, 166, 177, 195, 204, 211, 212, 213, 875], "ica": [14, 77, 83, 172, 205, 563, 863], "pca": [14, 47, 257], "reduct": [14, 205, 206, 207], "techniqu": 14, "xdawn": [15, 88, 196, 564], "match": [16, 196, 205], "filter": [16, 18, 21, 49, 80, 114, 151, 180, 196, 202, 203, 205, 210, 212, 448, 449, 450, 451, 452, 453, 870], "em": [16, 414], "machin": [17, 27, 165, 197], "learn": [17, 27, 137, 165, 197], "encod": [17, 27, 673], "mvpa": [17, 27, 196], "classifi": 18, "logisticregress": 18, "recept": [19, 195], "field": [19, 150, 151, 195, 212, 870, 873], "estim": [19, 34, 38, 41, 42, 43, 44, 57, 90, 153, 165, 166, 181, 182, 195, 209, 223, 238, 247, 863, 870], "predict": [19, 870], "public": [19, 127], "creat": [19, 90, 94, 115, 116, 137, 140, 144, 149, 188, 195, 204, 207, 208, 218, 222, 223, 231, 249, 257, 847, 863, 870], "investig": 19, "reconstruct": [19, 90, 94, 155, 160, 180, 207, 863], "spectro": [21, 195], "decomposit": 21, "ssd": [21, 421], "epoch": [21, 28, 42, 94, 104, 114, 117, 137, 140, 142, 143, 144, 145, 146, 147, 149, 151, 152, 165, 166, 172, 201, 204, 205, 211, 222, 232, 235, 237, 265, 434, 435, 436, 437, 863, 870], "displai": 22, "sensit": [22, 131], "map": [22, 35, 112, 120, 131, 142, 149, 150, 217, 224, 870], "meg": [22, 55, 75, 79, 87, 123, 133, 166, 188, 212, 223, 864, 870, 876], "forward": [23, 27, 47, 109, 158, 159, 163, 165, 172, 180, 255, 269, 457, 458, 459, 460, 863, 867, 870], "left": [24, 211], "cerebellum": 24, "volum": [24, 30, 41, 50, 181], "morph": [26, 43, 44, 180, 870], "galleri": 27, "input": [27, 63], "output": [27, 63, 160, 180], "simul": [27, 89, 90, 92, 93, 94, 95, 114, 165, 195, 205, 223, 224, 225, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 883], "preprocess": [27, 78, 109, 136, 141, 165, 166, 211, 212, 214, 218, 242, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 863, 877], "statist": [27, 98, 165, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 242, 870, 876, 885], "invers": [27, 28, 29, 30, 31, 35, 36, 39, 40, 41, 42, 47, 52, 57, 94, 104, 165, 166, 177, 186, 856, 862, 863, 867, 870], "problem": [27, 36, 202], "mne": [28, 30, 41, 42, 54, 61, 77, 116, 124, 138, 155, 160, 161, 165, 166, 171, 172, 177, 179, 188, 200, 202, 205, 206, 210, 213, 216, 222, 227, 246, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 844, 847, 849, 850, 851, 853, 854, 855, 859, 862, 866, 867, 870, 873, 881], "solut": [28, 29, 30, 35, 39, 40, 41, 47, 61, 104, 158, 172, 177, 179, 202, 205, 257, 856, 863, 867, 870], "sloreta": [29, 177, 870], "custom": [31, 127, 133, 172, 190], "solver": 31, "level": [32, 96, 129, 873], "timecours": [32, 45, 127], "dic": [32, 33, 34, 224], "beamform": [32, 33, 34, 49, 180, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303], "power": [33, 34, 42, 104, 107, 108, 109, 110, 136, 142, 151, 196, 199, 203, 224, 229, 230, 231, 241, 242], "er": 34, "lcmv": [34, 49, 180], "covari": [34, 42, 49, 65, 121, 162, 172, 177, 180, 223, 248, 262, 863, 867, 870], "spars": [35, 40, 59], "gamma": [35, 136], "empir": 35, "bayesian": 35, "method": [35, 76, 212, 216, 219, 227], "cours": [37, 94, 181], "source_estim": 37, "object": [37, 44, 137, 140, 142, 143, 145, 149, 150, 168, 169, 216, 218, 219, 222, 240, 249, 864, 867], "function": [38, 47, 48, 49, 50, 137, 211, 227, 237, 847, 851, 867, 873], "label": [38, 39, 41, 47, 104, 107, 108, 223, 271, 515, 873], "seri": [39, 71, 142], "activ": [39, 90, 94, 127, 128, 165, 180, 197, 211], "view": [39, 41, 82, 116, 143, 211, 229, 230, 257], "vector": [39, 43, 61, 172, 180, 181, 196, 428], "mix": [40, 41], "mxne": [40, 46, 59], "irmxn": 40, "set": [41, 43, 145, 151, 157, 171, 189, 208, 229, 231, 232, 235, 236, 237, 257, 847, 863, 864], "up": [41, 43, 157, 161, 257, 847, 863], "our": [41, 182], "fwd": [41, 873], "surfac": [41, 43, 158, 160, 161, 170, 181, 182, 211, 257, 705, 706, 863, 870, 873], "process": [41, 167, 180, 847, 861], "project": [42, 84, 115, 131, 170, 172, 196, 206, 257, 274, 869, 870, 873], "empti": [42, 129, 207], "room": [42, 129, 207], "appli": [42, 43, 44, 76, 137, 144, 180, 188, 190, 202, 204, 206, 242, 257], "oper": [42, 47, 52, 94, 114, 158, 159, 161, 218, 863, 865, 870], "sourcemorph": [43, 44, 277], "sourceestim": [43, 172, 175, 276], "read": [43, 44, 47, 52, 53, 65, 66, 137, 165, 168, 170, 189, 193, 217, 218, 232, 235, 237, 867, 873, 879], "write": [43, 44, 65, 217, 218, 873], "disk": [43, 44, 140], "volumetr": [44, 180, 870], "get": [44, 62, 159, 161, 171, 172, 182, 213, 242, 854, 867, 868, 872], "volsourceestim": [44, 280], "convert": [44, 115, 145, 168, 211, 257], "nifti": 44, "an": [45, 52, 53, 57, 71, 117, 142, 143, 145, 157, 159, 161, 168, 169, 172, 180, 182, 205, 208, 212, 242, 863], "xfit": 45, "like": [45, 170], "multi": 45, "iter": [46, 140], "reweight": 46, "tf": 46, "multiscal": 46, "dictionari": 46, "leakag": 47, "among": [47, 149], "circular": 47, "graph": 47, "organis": 47, "cortic": [47, 69, 126, 136, 160, 235, 237, 863, 870], "parcel": [47, 126], "point": [47, 48, 50, 157, 223, 870], "spread": [47, 48, 50, 223], "summari": [47, 71, 167, 175, 199, 200, 202, 216, 888], "all": [47, 180, 200, 231, 235, 237, 847, 851, 855, 867], "evalu": [47, 211], "base": [47, 70, 137, 141, 201, 257, 865, 870], "psf": [47, 48, 50], "correl": 47, "save": [47, 140, 149, 172, 206, 216], "figur": [47, 127, 172], "option": [47, 120, 257, 847, 867], "individu": [47, 873], "cross": [48, 49, 103, 134, 847], "talk": [48, 49], "ctf": [48, 123, 184, 188, 191], "differ": [49, 77, 90, 132, 141, 165, 193, 195, 242], "matric": [49, 162, 180], "resolut": [49, 54, 55, 161, 192, 257], "two": [49, 223], "rap": 51, "music": [51, 60], "stc": [53, 90, 175, 181, 873], "file": [53, 62, 170, 172, 189, 217, 218, 254, 257, 863, 867, 870, 873], "metric": [54, 55, 71, 663, 664, 665, 666, 667, 668, 669, 670], "compar": [55, 71, 77, 90, 132, 150, 151, 195, 211, 212, 227, 257], "eegmeg": 55, "snr": [57, 58, 209, 242], "prior": 59, "trap": 60, "full": [61, 232], "valu": [61, 145, 242], "averag": [62, 114, 149, 151, 208, 213, 870], "info": [62, 169, 216, 222, 257, 270, 873], "fif": [62, 188, 257, 867], "how": [64, 115, 160, 162, 200, 207, 218, 862, 867], "neural": [64, 165, 195, 197, 211], "ensembl": 64, "neo": 64, "format": [64, 145, 189, 190, 870], "nois": [65, 121, 129, 177, 199, 203, 206, 207, 223, 242, 863, 864, 870], "xdf": [66, 189], "contralater": 68, "referenc": [68, 192], "signal": [69, 150, 167, 168, 206, 207, 209, 210, 211, 212, 223, 242, 870, 873], "suppress": [69, 863], "css": 69, "remov": [69, 74, 83, 205, 206, 211, 235, 237], "lag": 70, "identifi": 71, "electrod": [71, 115, 136, 182, 189, 870], "bridg": 71, "too": 71, "much": 71, "gel": 71, "electr": 71, "distanc": 71, "examin": [71, 141, 212], "distribut": [71, 76, 178, 845, 876], "topomap": [71, 120], "voltag": 71, "subject": [71, 94, 209, 257, 864], "eegbci": [71, 83, 382, 383, 864], "The": [71, 140, 144, 149, 167, 168, 169, 170, 175, 178, 180, 201, 216, 240, 863, 864, 869, 870, 873], "relationship": [71, 175], "between": [71, 168, 230], "imped": 71, "transform": [72, 114, 137, 156, 160, 196, 235, 237, 743, 744, 745, 746, 747, 748, 749, 870, 873], "current": [72, 116, 176, 256, 870, 875, 888], "densiti": [72, 103, 104, 108, 109, 211, 219, 242], "csd": [72, 103], "show": [73, 129, 257], "eog": [73, 74, 199, 204, 205, 207, 257], "artifact": [73, 74, 75, 76, 81, 82, 199, 203, 204, 205, 207, 257, 863], "reduc": 74, "through": 74, "import": [74, 76, 127, 188, 189, 190, 192, 257, 847], "packag": [74, 855, 870], "befor": [74, 204, 847], "after": [74, 845], "comparison": [74, 134, 227, 231], "find": [75, 223, 232, 235], "channel": [75, 79, 87, 117, 140, 145, 149, 151, 167, 168, 169, 170, 188, 200, 201, 205, 208, 211, 213, 216, 232, 235, 237, 242, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 673, 863, 864, 870, 873], "visualis": [76, 228], "nir": [76, 597, 598, 599, 600, 601, 602], "correct": [76, 97, 141, 144, 212, 227], "add": [76, 116], "artifici": 76, "tempor": [76, 84, 111, 195, 196, 235, 236, 237], "deriv": 76, "repair": [76, 203, 204, 205, 207, 870], "algorithm": [77, 257, 862, 870], "interpol": [79, 120, 200, 870], "bad": [79, 156, 157, 161, 200, 201, 235, 237, 863, 870], "maxwel": [80, 210, 870], "movement": [80, 81, 209, 210], "compens": [80, 188, 210, 870, 873], "annot": [81, 82, 137, 168, 201, 211, 218, 259, 863], "reestim": 81, "dev_head_t": 81, "head": [81, 116, 156, 158, 160, 161, 182, 189, 192, 209, 257, 863, 870], "posit": [81, 115, 116, 192, 209], "respect": 81, "mean": [81, 151], "record": [81, 82, 165, 189, 193, 207], "muscl": [82, 83], "z": 82, "score": [82, 90], "compon": [83, 144, 180, 205], "let": 83, "": [83, 114, 160, 888], "now": 83, "replic": 83, "thi": [83, 195], "denois": [84, 88, 212], "oversampl": 84, "shift": 86, "scale": [86, 145, 152, 870], "remap": 87, "type": [87, 140, 151, 169, 195, 202, 216, 242, 257, 847, 870], "main": 90, "paramet": [90, 167, 201, 229, 231, 232, 235, 236, 237], "true": 90, "correspond": [90, 863], "amplitud": [90, 151, 201], "threshold": [90, 227, 228], "For": [90, 873], "region": [90, 116, 151], "anatomi": 94, "responss": 94, "permut": [96, 100, 231, 232, 235, 236], "f": [96, 99, 232], "test": [96, 97, 100, 137, 227, 231, 232, 235, 236, 846, 847, 853], "1d": 96, "cluster": [96, 227, 229, 230, 231, 232, 235, 236, 237, 876], "fdr": [97, 227, 231], "t": [97, 100, 235, 867], "rer": 99, "p": 99, "analys": [101, 863], "featur": [101, 136, 137], "bin": [101, 188, 867], "spectral": [103, 104, 108, 109, 219, 240, 242], "psd": [104, 108, 109, 242], "lock": [107, 144], "vectorview": [109, 188, 216], "align": [109, 156, 160, 257, 673, 863], "alpha": 109, "beta": 109, "induc": 110, "whiten": [111, 121, 152, 870, 873], "ar": [111, 149, 171, 199, 206, 867, 873], "erd": 112, "explor": [113, 136], "relat": [113, 151, 854, 873], "dynam": 113, "specif": 113, "band": 113, "multitap": 114, "v": [114, 196, 216, 850], "morlet": [114, 724, 734], "stockwel": 114, "hilbert": 114, "calcul": [114, 242, 863, 870], "tfr": [114, 231, 733, 734], "wavelet": 114, "narrow": 114, "bandpass": 114, "without": [114, 156], "over": [114, 117, 140, 196, 211], "arrai": [114, 168, 217, 249, 870], "3d": [115, 150, 170, 180, 845, 867, 870, 876], "2d": [115, 170, 180, 876], "imag": [115, 116, 117, 142, 150, 172, 211, 257, 862, 870, 876], "snapshot": 115, "manual": [115, 170, 205], "viz": [116, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828], "brain": [116, 124, 127, 136, 160, 180, 211, 756], "inform": [116, 169, 171, 178, 202, 211, 257, 863, 870, 873], "modifi": [116, 143, 167, 216, 847], "highlight": 116, "includ": [116, 217, 257], "screenshot": 116, "export": [116, 145, 161, 216, 253, 443, 444, 445, 446], "scalp": [118, 141, 150], "topograph": [119, 120, 150, 152, 211], "arrowmap": 119, "basic": [120, 136, 140, 144, 149, 202, 242, 847, 873], "plot_topomap": [120, 818], "addit": 120, "more": [120, 127, 211, 873], "advanc": [120, 845], "usag": 120, "anim": 120, "layout": [123, 125, 170, 231, 315], "system": [123, 125, 165, 171, 188, 190, 193, 257, 853, 870], "neuromag": [123, 188], "bti": [123, 185, 188, 257, 864], "kit": [123, 188, 257, 484], "artemis123": [123, 188], "helmet": 124, "make": [127, 168, 217, 847, 869], "readi": 127, "montag": [127, 170], "inset": 127, "group": [128, 144, 863], "roi": [128, 242], "sort": 128, "rt": 128, "ssp": [131, 206, 207, 257, 863, 870], "topographi": [133, 141, 150, 242], "hemispher": [134, 257, 863], "work": [135, 136, 143, 165, 170, 172, 191, 200, 213, 217, 220, 845, 867], "seeg": [135, 864, 876], "ecog": [136, 864, 876], "templat": [136, 159, 205, 864], "evolut": 136, "sleep": [137, 864], "stage": 137, "classif": 137, "polysomnographi": 137, "psg": 137, "hypnogram": 137, "30": 137, "found": [137, 867], "same": 137, "step": [137, 155, 850, 867], "bob": 137, "engin": 137, "scikit": 137, "python": [137, 138, 155, 160, 161, 165, 166, 171, 172, 200, 202, 205, 206, 210, 213, 216, 222, 246, 257, 844, 845, 847, 849, 850, 851, 852, 855, 862, 865, 866, 867, 872, 876, 878], "multiclass": 137, "workflow": [137, 847, 863], "further": 137, "exercis": [137, 158, 196, 223, 232, 241, 242], "clinic": [138, 165, 876], "applic": [138, 165], "gui": [138, 156, 165, 257, 472, 473], "addon": [138, 165], "structur": [140, 149, 168, 169, 175, 188, 216, 222, 870, 873], "discontinu": 140, "subselect": [140, 217], "select": [140, 143, 149, 205, 211, 216, 235, 873], "index": [140, 145, 216, 242], "drop": [140, 149, 169, 216], "reorder": [140, 149, 216], "chang": [140, 208, 216, 847, 888], "name": [140, 151, 188, 216, 847, 873], "domain": [140, 190, 205, 216, 240], "other": [140, 149, 202, 256, 845, 847, 851, 862, 870, 874], "form": [140, 242], "baselin": [141, 202, 223, 288], "tradit": 141, "regressor": 141, "wave": [141, 190], "interact": [141, 142, 218, 219, 865], "term": 141, "pipelin": [142, 876], "script": [142, 172, 865], "projector": [142, 206, 207, 208, 219], "locat": [142, 151, 170, 182, 189, 190, 211, 219, 870], "spectrum": [142, 240, 712], "metadata": [143, 144], "restrict": 143, "datafram": [143, 145], "queri": [143, 169, 216], "ad": [143, 144, 172, 206], "auto": 144, "make_metadata": [144, 437], "specifi": [144, 190], "keep": 144, "onli": [144, 851, 855], "first": [144, 155, 847, 850, 876], "new": [144, 847, 888], "column": [144, 168], "describ": [144, 847], "stimul": [144, 242], "side": 144, "knowledg": 144, "ern": 144, "panda": 145, "wide": 145, "versu": [145, 231, 865], "long": [145, 216], "divid": 146, "equal": [146, 217], "characterist": 146, "fix": [146, 161, 178, 179], "length": [146, 202], "case": 146, "segment": [147, 165], "subset": [149, 169, 242], "memori": [149, 188, 870], "core": [149, 851, 864, 867], "combin": [149, 217], "trace": 150, "butterfli": 150, "arrow": 150, "joint": [150, 241], "subplot": 150, "potenti": [151, 874], "global": 151, "gfp": 151, "interest": [151, 232, 869], "grand": 151, "latenc": 151, "measur": [151, 231, 237, 257], "peak": 151, "freesurf": [155, 160, 257, 848, 863, 870, 873], "mri": [155, 156, 159, 160, 172, 180, 182, 257, 861, 864, 870], "anatom": [155, 863], "fsaverag": [155, 159, 180, 864], "coordin": [156, 160, 190, 257, 863, 870, 873], "frame": [156, 160, 863], "understand": [156, 160], "definit": [156, 232, 870, 873], "A": [156, 867], "good": 156, "defac": 156, "tran": [156, 873], "autom": 157, "approach": [157, 257], "coregistr": [157, 158, 172, 257, 367, 472], "initi": 157, "fiduci": 157, "refin": 157, "icp": 157, "omit": 157, "final": 157, "bem": [158, 161, 172, 257, 304, 305, 306, 307, 308, 309, 310, 311, 863, 867, 870], "adult": 159, "setup": [159, 224, 231, 232, 845, 850, 858], "infant": [159, 864], "surrog": 159, "under": [160, 867], "hood": 160, "ra": [160, 182], "spheric": 160, "decim": [160, 867], "mni": [160, 180], "affin": 160, "inflat": 160, "blender": 161, "edit": [161, 172], "low": [161, 199, 202], "high": [161, 202, 257, 864, 873], "tip": 161, "what": [161, 168, 199, 205, 206, 207, 257, 829, 854, 867, 888], "you": 161, "still": [161, 867], "error": 161, "clean": [161, 257], "dens": 161, "smooth": [161, 870], "topolog": 161, "deal": 161, "topologi": [161, 870], "pymeshfix": 161, "should": [162, 854, 867], "i": [162, 168, 170, 205, 206, 207, 254, 845, 851, 853, 854, 867, 870], "regular": [162, 177, 195, 373, 867, 870], "tutori": [165, 173, 183, 184, 185, 876], "introductori": [165, 173], "overview": [166, 199, 847, 854, 863, 864, 871, 873], "detect": [166, 199, 201, 211], "experiment": 166, "place": [167, 170, 865], "pick": 167, "copi": 167, "pars": 168, "stim": [168, 673], "middl": 168, "embed": 168, "multipl": [168, 227, 231, 867], "per": [168, 863], "obtain": 169, "built": [170, 219], "eeglab": [170, 189, 851, 874], "sphere": [170, 870], "keyword": 170, "avail": 170, "mani": 170, "control": 170, "digit": [170, 870], "render": [170, 180, 845], "configur": [171, 847, 853, 857], "where": 171, "store": 171, "environ": [171, 847], "log": [171, 189, 857], "your": [171, 846, 847], "start": [172, 872], "report": [172, 202, 257, 275, 881], "inverseoper": [172, 529], "code": [172, 240, 847, 850, 864], "e": 172, "g": 172, "tag": [172, 242, 873], "entir": 172, "folder": [172, 257], "html": 172, "descript": [172, 870], "text": 172, "inspect": [175, 241, 870], "sourcespac": [175, 278], "src": 175, "equival": 176, "ecd": 176, "eloreta": [177, 870], "role": 178, "orient": [178, 179, 870], "loos": 178, "limit": 178, "them": 178, "discard": 178, "variou": 179, "free": [179, 227], "introduct": 180, "handl": [180, 200], "depth": [180, 870], "bia": [180, 207], "On": [180, 873], "slice": 180, "orthoview": 180, "glass": 180, "maximum": [180, 227], "voxel": [180, 182], "three": 180, "given": 182, "prerequisit": 182, "coord": 182, "elekta": [183, 188], "phantom": [183, 184, 185], "4d": [185, 257, 864], "neuroimag": [185, 188, 864], "devic": [188, 189, 190, 192, 870], "megin": 188, "triux": 188, "fil": 188, "4": [188, 888], "d": 188, "dir": 188, "polhemu": 188, "softwar": [188, 202, 854, 862, 870, 873, 874], "gradient": [188, 870, 873], "ricoh": 188, "con": 188, "sqd": 188, "fieldtrip": [188, 232], "mat": 188, "arbitrari": [188, 237], "brainvis": 189, "vhdr": 189, "vmrk": 189, "european": 189, "edf": 189, "biosemi": 189, "bdf": 189, "gdf": 189, "neuroscan": 189, "cnt": 189, "egi": 189, "simpl": [189, 867], "binari": 189, "mff": 189, "fdt": 189, "nicolet": 189, "eximia": 189, "nxe": 189, "persyst": 189, "lai": 189, "dat": 189, "nihon": 189, "kohden": 189, "21e": 189, "pnt": 189, "xdfz": 189, "shape": 189, "fnir": [190, 211, 864], "standard": [190, 211, 227, 383, 847], "snirf": 190, "nirx": 190, "directori": [190, 864, 870, 873], "hdr": 190, "hitachi": 190, "csv": 190, "boxi": 190, "txt": 190, "legaci": [190, 240], "tsv": 190, "auditori": [191, 864], "eyetrack": [192, 583], "sr": 192, "research": 192, "eyelink": [192, 386, 864], "asc": 192, "ey": [192, 213], "gaze": 192, "angl": 192, "href": 192, "pupil": [192, 213], "size": [192, 227], "veloc": 192, "strf": 195, "audio": 195, "recov": 195, "philosophi": [196, 865], "class": [196, 240, 845, 853, 860, 876], "scaler": [196, 422], "psdestim": [196, 418], "filterestim": [196, 415], "comodul": 196, "do": [199, 867], "drift": [199, 203, 205], "line": [199, 203, 257, 847, 873], "heartbeat": 199, "ecg": [199, 205, 207, 257], "ocular": 199, "mark": [200, 863], "block": 200, "execut": 200, "when": [200, 206, 847], "look": [200, 205, 867], "why": [200, 867, 870], "reject": [201, 863], "span": 201, "break": 201, "reject_by_annot": 201, "programmat": [201, 218], "background": [202, 203, 206, 208, 210, 223], "statement": 202, "fir": 202, "iir": 202, "some": [202, 873], "pitfal": [202, 874], "pass": 202, "default": [202, 870], "c": [202, 853], "cutoff": 202, "order": 202, "transit": 202, "bandwidth": 202, "roll": 202, "off": [202, 845], "passband": 202, "rippl": 202, "stopband": 202, "attenu": 202, "delai": 202, "direct": 202, "resampl": [203, 227, 453, 867], "slow": [203, 205, 867], "best": [203, 206], "practic": [203, 206], "origin": [204, 223], "subtract": 204, "dimension": 205, "ignor": 205, "terminologi": 206, "environment": 207, "affect": [207, 218], "choos": 207, "number": [207, 216, 870], "via": [207, 212, 851, 870, 876], "infinit": 208, "rest": [208, 864], "bipolar": 208, "hpi": 209, "separ": [210, 242], "sss": 210, "spatiotempor": [210, 232], "tsss": 210, "caveat": 210, "infrar": 211, "spectroscopi": 211, "provid": [211, 227], "meaning": 211, "appropri": 211, "intens": 211, "qualiti": 211, "haemoglobin": 211, "heart": 211, "rate": [211, 227], "consist": [211, 222, 847], "tap": 211, "right": 211, "hand": 211, "homogen": 212, "nuisanc": 212, "tracker": 213, "din": 213, "attribut": 216, "sampl": [216, 229, 231, 236, 404, 864], "len": 216, "get_data": 216, "wai": 216, "exclud": 217, "id": [217, 851, 873], "descriptor": 217, "togeth": 217, "brows": [219, 257], "scratch": 222, "unit": [222, 870], "corrupt": 223, "known": 223, "period": 223, "sinusoid": 223, "distant": 223, "center": [223, 858], "vertic": 223, "each": 223, "infer": 227, "hypothesi": 227, "null": 227, "parametr": [227, 229, 230], "hat": 227, "varianc": 227, "adjust": 227, "non": [227, 229, 230], "bonferroni": 227, "fals": 227, "discoveri": 227, "adjac": [227, 229, 232, 235], "enhanc": [227, 888], "tfce": 227, "signific": [228, 235], "1": [229, 888], "mass": 231, "univari": 231, "twowai": 231, "repeat": [231, 237], "anova": [231, 237], "account": 231, "neighbor": 232, "spatio": [235, 236, 237], "one": [235, 237], "2": [236, 888], "contrast": 237, "epochsspectrum": [240, 710], "migrat": [240, 874], "quick": 240, "action": 240, "inter": 241, "itc": 241, "ssvep": [242, 409, 864], "vssr": 242, "ratio": 242, "spectra": 242, "12": [242, 888], "hz": 242, "indic": 242, "check": [242, 257, 870], "15": [242, 888], "debrief": 242, "bonu": 242, "durat": 242, "resolv": 242, "bibliographi": 245, "paper": 246, "cite": [246, 862, 867], "o": [254, 851, 870], "fund": [256, 869], "support": [256, 851, 870, 876], "institut": [256, 869, 875], "partner": [256, 869, 875], "former": [256, 875], "command": [257, 847, 867], "tool": [257, 847, 854], "anonym": 257, "browse_raw": 257, "bti2fiff": 257, "magneswh3600": 257, "note": [257, 873], "clean_eog_ecg": 257, "ie": 257, "compare_fiff": [257, 764], "fiff": [257, 873], "compute_proj_ecg": [257, 575], "compute_proj_eog": [257, 576], "coreg": [257, 367, 368, 369], "flash_bem": 257, "3": [257, 888], "layer": 257, "flash": [257, 870], "freeview_bem_surfac": 257, "freeview": 257, "kit2fiff": 257, "nyu": 257, "make_scalp_surfac": [257, 310], "maxfilt": 257, "prepare_bem_model": 257, "colloc": 257, "setup_forward_model": 257, "setup_source_spac": [257, 656], "bilater": 257, "subsampl": 257, "show_fiff": [257, 513], "content": [257, 864, 876], "show_info": 257, "surf2bem": 257, "sys_info": [257, 707], "watershed_bem": 257, "watersh": [257, 867, 870], "acqparserfif": 258, "baseepoch": 260, "bihemilabel": 261, "dipolefix": 264, "epochsarrai": 266, "evokedarrai": 268, "mixedsourceestim": 272, "mixedvectorsourceestim": 273, "vectorsourceestim": 279, "volvectorsourceestim": 281, "add_reference_channel": 282, "add_source_space_dist": 283, "annotations_from_ev": 284, "apply_forward": 285, "apply_forward_raw": 286, "average_forward_solut": 287, "rescal": 288, "apply_d": 290, "apply_dics_csd": 291, "apply_dics_epoch": 292, "apply_dics_tfr_epoch": 293, "apply_lcmv": 294, "apply_lcmv_cov": 295, "apply_lcmv_epoch": 296, "apply_lcmv_raw": 297, "make_d": 298, "make_lcmv": 299, "make_lcmv_resolution_matrix": 300, "rap_mus": 301, "read_beamform": 302, "trap_mus": 303, "conductormodel": 304, "convert_flash_mri": 305, "distance_to_bem": 306, "fit_sphere_to_headshap": 307, "get_fitting_dig": 308, "make_flash_bem": 309, "make_watershed_bem": 311, "channel_indices_by_typ": 312, "channel_typ": 313, "digmontag": 314, "combine_channel": 316, "compute_dev_head_t": 317, "compute_native_head_t": 318, "equalize_channel": [319, 438], "find_ch_adjac": 320, "find_layout": 321, "fix_mag_coil_typ": 322, "generate_2d_layout": 323, "get_builtin_ch_adjac": 324, "get_builtin_montag": 325, "make_1020_channel_select": 326, "make_dig_montag": 327, "make_eeg_layout": 328, "make_grid_layout": 329, "make_standard_montag": 330, "read_ch_adjac": 331, "read_custom_montag": 332, "read_dig_captrak": 333, "read_dig_dat": 334, "read_dig_egi": 335, "read_dig_fif": 336, "read_dig_hpt": 337, "read_dig_localit": 338, "read_dig_polhemus_isotrak": 339, "read_layout": 340, "read_polhemus_fastscan": 341, "rename_channel": [342, 643], "chpi": [343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354], "compute_chpi_amplitud": 343, "compute_chpi_loc": 344, "compute_chpi_snr": 345, "compute_head_po": 346, "extract_chpi_locs_ctf": 347, "extract_chpi_locs_kit": 348, "filter_chpi": 349, "get_active_chpi": 350, "get_chpi_info": 351, "head_pos_to_trans_rot_t": 352, "read_head_po": 353, "write_head_po": 354, "combine_evok": 355, "compute_covari": 356, "compute_proj_epoch": 357, "compute_proj_evok": 358, "compute_proj_raw": 359, "compute_rank": 360, "compute_raw_covari": 361, "compute_source_morph": 362, "concatenate_epoch": 363, "concatenate_ev": 364, "concatenate_raw": 365, "convert_forward_solut": 366, "estimate_head_mri_t": 368, "get_mni_fiduci": 369, "count_ev": 370, "cov": [371, 372, 373, 873], "compute_whiten": 371, "prepare_noise_cov": 372, "create_default_subject": 374, "create_info": 375, "cuda": [376, 377, 378, 845], "get_cuda_memori": 376, "init_cuda": 377, "set_cuda_devic": 378, "bst_auditori": 379, "data_path": [379, 380, 381, 384, 385, 386, 393, 395, 396, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411], "bst_raw": 380, "bst_rest": 381, "load_data": [382, 397], "epilepsy_ecog": 384, "erp_cor": 385, "fetch_aparc_sub_parcel": 387, "fetch_dataset": 388, "fetch_fsaverag": 389, "fetch_hcp_mmp_parcel": 390, "fetch_infant_templ": 391, "fetch_phantom": 392, "fnirs_motor": 393, "has_dataset": 394, "hf_sef": 395, "kiloword": [396, 864], "misc": 398, "mtrf": [399, 864], "multimod": [400, 864], "phantom_4dbti": 402, "refmeg_nois": 403, "sleep_physionet": [405, 406], "ag": 405, "fetch_data": [405, 406], "temazepam": 406, "somato": 407, "spm_face": 408, "ucl_opm_auditori": 410, "visual_92_categori": 411, "decimate_surfac": 412, "generalizingestim": 416, "linearmodel": 417, "receptivefield": 419, "slidingestim": 423, "temporalfilt": 424, "timedelayingridg": 425, "timefrequ": 426, "unsupervisedspatialfilt": 427, "compute_em": 429, "cross_val_multiscor": 430, "get_coef": 431, "dig_mri_dist": 432, "get_phantom_dipol": 433, "average_mov": 434, "combine_event_id": 435, "equalize_epoch_count": 436, "define_target_ev": 439, "match_event_nam": 440, "shift_time_ev": 441, "events_from_annot": 442, "export_epoch": 443, "export_evok": 444, "export_evokeds_mff": 445, "export_raw": 446, "extract_label_time_cours": 447, "construct_iir_filt": 448, "create_filt": 449, "estimate_ringing_sampl": 450, "filter_data": 451, "notch_filt": 452, "find_ev": 454, "find_stim_step": 455, "fit_dipol": 456, "compute_depth_prior": 457, "compute_orient_prior": 458, "restrict_forward_to_label": 459, "restrict_forward_to_stc": 460, "get_config": 461, "get_config_path": 462, "get_head_surf": 463, "get_meg_helmet_surf": 464, "get_montage_volume_label": 465, "get_volume_labels_from_aseg": 466, "get_volume_labels_from_src": 467, "grade_to_tri": 468, "grade_to_vertic": 469, "grand_averag": 470, "grow_label": 471, "locate_ieeg": 473, "head_to_mni": 474, "head_to_mri": 475, "inverse_spars": [476, 477, 478, 479], "gamma_map": 476, "make_stc_from_dipol": 477, "mixed_norm": 478, "tf_mixed_norm": 479, "io": [480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514], "baseraw": 480, "rawarrai": 482, "anonymize_info": 483, "read_mrk": 484, "read_fiduci": 485, "read_info": 486, "read_raw": 487, "read_raw_artemis123": 488, "read_raw_bdf": 489, "read_raw_boxi": 490, "read_raw_brainvis": 491, "read_raw_bti": 492, "read_raw_cnt": 493, "read_raw_ctf": 494, "read_raw_curri": 495, "read_raw_edf": 496, "read_raw_eeglab": 497, "read_raw_egi": 498, "read_raw_eximia": 499, "read_raw_eyelink": 500, "read_raw_fieldtrip": 501, "read_raw_fif": 502, "read_raw_fil": 503, "read_raw_gdf": 504, "read_raw_hitachi": 505, "read_raw_kit": 506, "read_raw_nedf": 507, "read_raw_nicolet": 508, "read_raw_nihon": 509, "read_raw_nirx": 510, "read_raw_persyst": 511, "read_raw_snirf": 512, "write_fiduci": 514, "select_sourc": 515, "label_sign_flip": 516, "labels_to_stc": 517, "make_ad_hoc_cov": 518, "make_bem_model": 519, "make_bem_solut": 520, "make_field_map": 521, "make_fixed_length_epoch": 522, "make_fixed_length_ev": 523, "make_forward_dipol": 524, "make_forward_solut": 525, "make_sphere_model": 526, "match_channel_ord": 527, "merge_ev": 528, "minimum_norm": [529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548], "apply_invers": 530, "apply_inverse_cov": 531, "apply_inverse_epoch": 532, "apply_inverse_raw": 533, "apply_inverse_tfr_epoch": 534, "compute_rank_invers": 535, "compute_source_psd": 536, "compute_source_psd_epoch": 537, "estimate_snr": 538, "get_cross_talk": 539, "get_point_spread": 540, "make_inverse_oper": 541, "make_inverse_resolution_matrix": 542, "prepare_inverse_oper": 543, "read_inverse_oper": 544, "resolution_metr": 545, "source_band_induced_pow": 546, "source_induced_pow": 547, "write_inverse_oper": 548, "morph_label": 549, "morph_source_spac": 550, "open_doc": 551, "open_report": 552, "parse_config": 553, "pick_channel": 554, "pick_channels_cov": 555, "pick_channels_forward": 556, "pick_channels_regexp": 557, "pick_ev": 558, "pick_info": 559, "pick_typ": 560, "pick_types_forward": 561, "eogregress": 562, "annotate_amplitud": 565, "annotate_break": 566, "annotate_mov": 567, "annotate_muscle_zscor": 568, "annotate_nan": 569, "compute_average_dev_head_t": 570, "compute_bridged_electrod": 571, "compute_current_source_dens": 572, "compute_fine_calibr": 573, "compute_maxwell_basi": 574, "compute_proj_hfc": 577, "corrmap": 578, "cortical_signal_suppress": 579, "create_ecg_epoch": 580, "create_eog_epoch": 581, "equalize_bad": 582, "set_channel_types_eyetrack": 583, "find_bad_channels_maxwel": 584, "find_ecg_ev": 585, "find_eog_ev": 586, "fix_stim_artifact": 587, "ica_find_ecg_ev": 588, "ica_find_eog_ev": 589, "ieeg": [590, 591, 592], "make_montage_volum": 590, "project_sensors_onto_brain": 591, "warp_montag": 592, "infomax": 593, "interpolate_bridged_electrod": 594, "maxwell_filt": 595, "maxwell_filter_prepare_emptyroom": 596, "beer_lambert_law": 597, "optical_dens": 598, "scalp_coupling_index": 599, "short_channel": 600, "source_detector_dist": 601, "temporal_derivative_distribution_repair": 602, "oversampled_temporal_project": 603, "peak_find": 604, "read_eog_regress": 605, "read_fine_calibr": 606, "read_ica": 607, "read_ica_eeglab": 608, "realign_raw": 609, "regress_artifact": 610, "write_fine_calibr": 611, "random_parcel": 612, "read_annot": 613, "read_bem_solut": 614, "read_bem_surfac": 615, "read_cov": 616, "read_dipol": 617, "read_epoch": 618, "read_epochs_eeglab": 619, "read_epochs_fieldtrip": 620, "read_epochs_kit": 621, "read_ev": 622, "read_evoked_besa": 623, "read_evoked_fieldtrip": 624, "read_evok": 625, "read_evokeds_mff": 626, "read_forward_solut": 627, "read_freesurfer_lut": 628, "read_label": 629, "read_labels_from_annot": 630, "read_lta": 631, "read_morph_map": 632, "read_proj": 633, "read_reject_paramet": 634, "read_source_estim": 635, "read_source_morph": 636, "read_source_spac": 637, "read_surfac": 638, "read_talxfm": 639, "read_tran": 640, "read_tri": 641, "read_vectorview_select": 642, "scale_bem": 644, "scale_label": 645, "scale_mri": 646, "scale_source_spac": 647, "sensitivity_map": 648, "set_bipolar_refer": 649, "set_cache_dir": 650, "set_config": 651, "set_eeg_refer": 652, "set_log_fil": 653, "set_log_level": 654, "set_memmap_min_s": 655, "setup_volume_source_spac": 657, "sourcesimul": 658, "add_chpi": 659, "add_ecg": 660, "add_eog": 661, "add_nois": 662, "cosine_scor": 663, "f1_score": 664, "peak_position_error": 665, "precision_scor": 666, "recall_scor": 667, "region_localization_error": 668, "roc_auc_scor": 669, "spatial_deviation_error": 670, "select_source_in_label": 671, "simulate_evok": 672, "simulate_raw": 673, "simulate_sparse_stc": 674, "simulate_stc": 675, "source_spac": [676, 677], "compute_distance_to_sensor": 676, "get_decimated_surfac": 677, "spatial_dist_adjac": 678, "spatial_inter_hemi_adjac": 679, "spatial_src_adjac": 680, "spatial_tris_adjac": 681, "spatio_temporal_dist_adjac": 682, "spatio_temporal_src_adjac": 683, "spatio_temporal_tris_adjac": 684, "split_label": 685, "stat": [686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702], "bonferroni_correct": 686, "bootstrap_confidence_interv": 687, "combine_adjac": 688, "f_mway_rm": 689, "f_onewai": 690, "f_threshold_mway_rm": 691, "fdr_correct": 692, "linear_regress": 693, "linear_regression_raw": 694, "permutation_cluster_1samp_test": 695, "permutation_cluster_test": 696, "permutation_t_test": 697, "spatio_temporal_cluster_1samp_test": 698, "spatio_temporal_cluster_test": 699, "summarize_clusters_stc": 700, "ttest_1samp_no_p": 701, "ttest_ind_no_p": 702, "stc_near_sensor": 703, "stc_to_label": 704, "complete_surface_info": 705, "read_curvatur": 706, "time_frequ": [708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741], "averagetfr": 708, "crossspectraldens": 709, "epochstfr": 711, "csd_array_fouri": 713, "csd_array_morlet": 714, "csd_array_multitap": 715, "csd_fourier": 716, "csd_morlet": 717, "csd_multitap": 718, "csd_tfr": 719, "dpss_window": 720, "fit_iir_model_raw": 721, "fwhm": 722, "istft": 723, "pick_channels_csd": 725, "psd_array_multitap": 726, "psd_array_welch": 727, "read_csd": 728, "read_spectrum": 729, "read_tfr": 730, "stft": 731, "stftfreq": 732, "cwt": 733, "tfr_array_morlet": 735, "tfr_array_multitap": 736, "tfr_array_stockwel": 737, "tfr_morlet": 738, "tfr_multitap": 739, "tfr_stockwel": 740, "write_tfr": 741, "transform_surface_to": 742, "apply_volume_registr": 744, "apply_volume_registration_point": 745, "compute_volume_registr": 746, "quat_to_rot": 747, "read_ras_mni_t": 748, "rot_to_quat": 749, "use_coil_def": 750, "use_log_level": 751, "util": [752, 753, 873], "deprec": [752, 847], "warn": [753, 847], "verbos": 754, "vertex_to_mni": 755, "clickableimag": 757, "figure3d": 758, "add_background_imag": 759, "centers_to_edg": 760, "circular_layout": 761, "close_3d_figur": 762, "close_all_3d_figur": 763, "create_3d_figur": 765, "get_3d_backend": 766, "get_brain_class": 767, "get_browser_backend": 768, "iter_topographi": 769, "link_brain": 770, "mne_analyze_colormap": 771, "plot_align": 772, "plot_arrowmap": 773, "plot_bem": 774, "plot_brain_colorbar": 775, "plot_bridged_electrod": 776, "plot_ch_adjac": 777, "plot_channel_labels_circl": 778, "plot_chpi_snr": 779, "plot_compare_evok": 780, "plot_cov": 781, "plot_csd": 782, "plot_dipole_amplitud": 783, "plot_dipole_loc": 784, "plot_drop_log": 785, "plot_epoch": 786, "plot_epochs_imag": 787, "plot_epochs_psd_topomap": 788, "plot_ev": 789, "plot_evok": 790, "plot_evoked_field": 791, "plot_evoked_imag": 792, "plot_evoked_joint": 793, "plot_evoked_topo": 794, "plot_evoked_topomap": 795, "plot_evoked_whit": 796, "plot_filt": 797, "plot_head_posit": 798, "plot_ica_compon": 799, "plot_ica_overlai": 800, "plot_ica_properti": 801, "plot_ica_scor": 802, "plot_ica_sourc": 803, "plot_ideal_filt": 804, "plot_layout": 805, "plot_montag": 806, "plot_projs_joint": 807, "plot_projs_topomap": 808, "plot_raw": 809, "plot_raw_psd": 810, "plot_regression_weight": 811, "plot_sensor": 812, "plot_snr_estim": 813, "plot_source_estim": 814, "plot_sparse_source_estim": 815, "plot_tfr_topomap": 816, "plot_topo_image_epoch": 817, "plot_vector_source_estim": 819, "plot_volume_source_estim": 820, "set_3d_backend": 821, "set_3d_opt": 822, "set_3d_titl": 823, "set_3d_view": 824, "set_browser_backend": 825, "snapshot_brain_montag": 826, "use_3d_backend": 827, "use_browser_backend": 828, "write_bem_solut": 830, "write_bem_surfac": 831, "write_cov": 832, "write_ev": 833, "write_evok": 834, "write_forward_solut": 835, "write_head_bem": 836, "write_label": 837, "write_labels_to_annot": 838, "write_proj": 839, "write_source_spac": 840, "write_surfac": 841, "write_tran": 842, "glossari": 843, "homepag": 844, "jupyt": 845, "notebook": 845, "jupyterlab": 845, "fa": [845, 853], "brand": [845, 853], "window": [845, 867], "instal": [845, 846, 848, 849, 850, 851, 852, 853, 854], "headless": 845, "linux": 845, "server": 845, "develop": [845, 847, 855, 866], "version": [845, 855, 888], "gpu": 845, "acceler": 845, "screen": 845, "mesa": 845, "troubleshoot": [845, 853], "troubl": 845, "upgrad": [845, 855], "maco": [845, 853, 867], "contribut": 847, "guid": 847, "git": 847, "gnu": 847, "fork": 847, "repositori": 847, "virtual": 847, "github": 847, "ssh": 847, "convent": 847, "requir": [847, 853], "must": 847, "have": [847, 863, 867], "coverag": 847, "document": [847, 869, 871, 873, 875, 876], "avoid": 847, "api": [847, 865, 876, 878, 888], "possibl": 847, "decor": 847, "changelog": [847, 888], "contributor": 847, "recur": 847, "pull": 847, "request": 847, "pr": 847, "fast": 847, "thorough": 847, "style": 847, "adher": 847, "guidelin": [847, 875], "we": 847, "mostli": [847, 865], "follow": 847, "numpi": [847, 870], "docstr": 847, "everywher": 847, "guidanc": 847, "organ": [847, 865, 870], "return": 847, "run": [847, 867], "suit": [847, 854], "build": 847, "pip": 851, "conda": 851, "depend": [851, 888], "minim": 851, "scenario": 851, "appl": 853, "download": [853, 867], "help": [854, 867, 868], "updat": [855, 876], "martino": 858, "cpp": 859, "most": 860, "typic": 863, "m": [863, 867], "recommend": 863, "subdivis": 863, "icosahedron": 863, "octahedron": 863, "creation": 863, "approxim": 863, "area": 863, "been": 863, "assum": 863, "1000": 863, "cm2": 863, "mesh": [863, 867, 870], "triangul": 863, "boundari": [863, 870], "element": [863, 870], "trigger": 864, "ucl": 864, "state": 864, "somatosensori": 864, "92": 864, "categori": 864, "polysomnograph": 864, "databas": [864, 876], "miscellan": 864, "integr": [865, 876], "scientif": 865, "stack": 865, "submodul": 865, "unifi": 865, "In": [865, 876], "frequent": 867, "ask": 867, "question": 867, "faq": 867, "issu": 867, "can": 867, "pyvista": 867, "extrem": 867, "even": 867, "sure": 867, "x": 867, "my": 867, "y": 867, "think": 867, "bug": [867, 888], "danger": 867, "pickl": 867, "later": 867, "onc": 867, "again": 867, "cpu": 867, "though": 867, "didn": 867, "tell": 867, "mysteri": 867, "take": 867, "forev": 867, "incorrect": 867, "govern": 869, "bdfl": 869, "steer": [869, 875], "council": [869, 875], "membership": 869, "conflict": 869, "privat": 869, "commun": [869, 875], "decis": 869, "histori": [869, 875], "acknowledg": 869, "licens": 869, "implement": 870, "detail": [870, 873], "intern": 870, "float": 870, "precis": 870, "effici": [870, 876], "preload": 870, "explicitli": 870, "access": [870, 876], "concept": 870, "subspac": 870, "tessel": 870, "discret": 870, "geometri": [870, 873], "coil": [870, 873], "magnet": 870, "normal": 870, "accur": 870, "accuraci": 870, "purpos": 870, "patch": 870, "constraint": 870, "weight": 870, "matlab": 873, "routin": 873, "w": 873, "demonstr": 873, "toolbox": 873, "constant": 873, "taginfo": 873, "dig": 873, "coildef": 873, "see": 873, "ch": 873, "proj": 873, "comp": 873, "mea": 873, "surf": 873, "inv": 873, "reginv": 873, "noisenorm": 873, "fill": 873, "mne_prepare_inverse_oper": 873, "benevol": 875, "dictat": 875, "life": 875, "particip": 875, "lead": 875, "roadmap": 876, "page": 876, "openmeeg": 876, "improv": 876, "bind": 876, "progress": 876, "divers": 876, "equiti": 876, "inclus": 876, "dei": 876, "deep": 876, "better": 876, "db": 876, "pediatr": 876, "complet": 876, "overhaul": 876, "realtim": 880, "dev0": 888, "2023": 888, "02": 888, "23": 888, "0": 888, "2022": 888, "21": 888, "author": 888, "10": 888, "11": 888, "08": 888, "03": 888, "behavior": 888, "24": 888, "2021": 888, "04": 888, "27": 888, "22": 888, "2020": 888, "17": 888, "09": 888, "20": 888, "19": 888, "2019": 888, "18": 888, "05": 888, "2018": 888, "16": 888, "01": 888, "2017": 888, "14": 888, "13": 888, "2016": 888, "2015": 888, "26": 888, "9": 888, "8": 888, "2014": 888, "06": 888, "25": 888, "7": 888, "2013": 888, "6": 888, "5": 888, "2012": 888, "2011": 888}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinxcontrib.bibtex": 9, "sphinx": 57}, "alltitles": {"Connectivity Analysis Examples": [[0, "connectivity-analysis-examples"], [27, "connectivity-analysis-examples"]], "Brainstorm raw (median nerve) dataset": [[1, "brainstorm-raw-median-nerve-dataset"]], "References": [[1, "references"], [4, "references"], [8, "references"], [10, "references"], [12, "references"], [13, "references"], [15, "references"], [16, "references"], [18, "references"], [19, "references"], [21, "references"], [33, "references"], [35, "references"], [40, "references"], [42, "references"], [43, "references"], [44, "references"], [46, "references"], [51, "references"], [54, "references"], [55, "references"], [58, "references"], [59, "references"], [60, "references"], [66, "references"], [71, "references"], [72, "references"], [75, "references"], [76, "references"], [79, "references"], [83, "references"], [84, "references"], [88, "references"], [94, "references"], [101, "references"], [109, "references"], [112, "references"], [113, "references"], [117, "references"], [119, "references"], [121, "references"], [126, "references"], [129, "references"], [137, "references"], [141, "references"], [144, "references"], [151, "references"], [155, "references"], [157, "references"], [162, "references"], [176, "references"], [178, "references"], [180, "references"], [183, "references"], [184, "references"], [191, "references"], [195, "references"], [196, "references"], [200, "references"], [202, "references"], [204, "references"], [205, "references"], [206, "references"], [207, "references"], [208, "references"], [210, "references"], [212, "references"], [224, "references"], [227, "references"], [228, "references"], [232, "references"], [240, "references"], [863, "references"], [864, "references"], [867, "references"], [870, "references"]], "HF-SEF dataset": [[2, "hf-sef-dataset"]], "Examples on open datasets": [[3, "examples-on-open-datasets"], [27, "examples-on-open-datasets"]], "Single trial linear regression analysis with the LIMO dataset": [[4, "single-trial-linear-regression-analysis-with-the-limo-dataset"]], "About the data": [[4, "about-the-data"]], "Load the data": [[4, "load-the-data"], [137, "load-the-data"], [141, "load-the-data"], [159, "load-the-data"]], "Visualize events": [[4, "visualize-events"]], "Visualize condition ERPs": [[4, "visualize-condition-erps"]], "Visualize effect of stimulus phase-coherence": [[4, "visualize-effect-of-stimulus-phase-coherence"]], "Prepare data for linear regression analysis": [[4, "prepare-data-for-linear-regression-analysis"]], "Define predictor variables and design matrix": [[4, "define-predictor-variables-and-design-matrix"]], "Extract regression coefficients": [[4, "extract-regression-coefficients"]], "Plot model results": [[4, "plot-model-results"]], "Optically pumped magnetometer (OPM) data": [[5, "optically-pumped-magnetometer-opm-data"]], "Prepare data for localization": [[5, "prepare-data-for-localization"]], "Perform dipole fitting": [[5, "perform-dipole-fitting"]], "Perform minimum-norm localization": [[5, "perform-minimum-norm-localization"]], "Computation times": [[6, "computation-times"], [20, "computation-times"], [25, "computation-times"], [56, "computation-times"], [67, "computation-times"], [85, "computation-times"], [91, "computation-times"], [102, "computation-times"], [106, "computation-times"], [130, "computation-times"], [139, "computation-times"], [148, "computation-times"], [154, "computation-times"], [164, "computation-times"], [174, "computation-times"], [187, "computation-times"], [194, "computation-times"], [198, "computation-times"], [215, "computation-times"], [221, "computation-times"], [226, "computation-times"], [234, "computation-times"], [239, "computation-times"], [244, "computation-times"]], "From raw data to dSPM on SPM Faces dataset": [[7, "from-raw-data-to-dspm-on-spm-faces-dataset"]], "Motor imagery decoding from EEG data using the Common Spatial Pattern (CSP)": [[8, "motor-imagery-decoding-from-eeg-data-using-the-common-spatial-pattern-csp"]], "Decoding in time-frequency space using Common Spatial Patterns (CSP)": [[9, "decoding-in-time-frequency-space-using-common-spatial-patterns-csp"]], "Representational Similarity Analysis": [[10, "representational-similarity-analysis"]], "Decoding source space data": [[11, "decoding-source-space-data"]], "Continuous Target Decoding with SPoC": [[12, "continuous-target-decoding-with-spoc"]], "Decoding sensor space data with generalization across time and conditions": [[13, "decoding-sensor-space-data-with-generalization-across-time-and-conditions"]], "Analysis of evoked response using ICA and PCA reduction techniques": [[14, "analysis-of-evoked-response-using-ica-and-pca-reduction-techniques"]], "XDAWN Decoding From EEG data": [[15, "xdawn-decoding-from-eeg-data"]], "Compute effect-matched-spatial filtering (EMS)": [[16, "compute-effect-matched-spatial-filtering-ems"]], "Machine Learning (Decoding, Encoding, and MVPA)": [[17, "machine-learning-decoding-encoding-and-mvpa"], [27, "machine-learning-decoding-encoding-and-mvpa"]], "Linear classifier on sensor data with plot patterns and filters": [[18, "linear-classifier-on-sensor-data-with-plot-patterns-and-filters"]], "Decoding in sensor space using a LogisticRegression classifier": [[18, "decoding-in-sensor-space-using-a-logisticregression-classifier"]], "Receptive Field Estimation and Prediction": [[19, "receptive-field-estimation-and-prediction"]], "Load the data from the publication": [[19, "load-the-data-from-the-publication"]], "Create and fit a receptive field model": [[19, "create-and-fit-a-receptive-field-model"]], "Investigate model coefficients": [[19, "investigate-model-coefficients"], [19, "id5"]], "Create and fit a stimulus reconstruction model": [[19, "create-and-fit-a-stimulus-reconstruction-model"]], "Visualize stimulus reconstruction": [[19, "visualize-stimulus-reconstruction"]], "Compute Spectro-Spatial Decomposition (SSD) spatial filters": [[21, "compute-spectro-spatial-decomposition-ssd-spatial-filters"]], "Epoched data": [[21, "epoched-data"]], "Display sensitivity maps for EEG and MEG sensors": [[22, "display-sensitivity-maps-for-eeg-and-meg-sensors"]], "Forward modeling": [[23, "forward-modeling"], [27, "forward-modeling"]], "Generate a left cerebellum volume source space": [[24, "generate-a-left-cerebellum-volume-source-space"]], "Use source space morphing": [[26, "use-source-space-morphing"]], "Examples Gallery": [[27, "examples-gallery"]], "Input/Output": [[27, "input-output"], [63, "input-output"]], "Data Simulation": [[27, "data-simulation"], [89, "data-simulation"]], "Preprocessing": [[27, "preprocessing"], [78, "preprocessing"], [109, "preprocessing"], [141, "preprocessing"], [165, "preprocessing"], [166, "preprocessing"], [214, "preprocessing"], [863, "preprocessing"], [877, "preprocessing"]], "Visualization": [[27, "visualization"], [55, "visualization"], [122, "visualization"], [177, "visualization"], [847, "visualization"], [887, "visualization"]], "Time-Frequency Examples": [[27, "time-frequency-examples"], [105, "time-frequency-examples"]], "Statistics Examples": [[27, "statistics-examples"], [98, "statistics-examples"]], "Inverse problem and source analysis": [[27, "inverse-problem-and-source-analysis"], [36, "inverse-problem-and-source-analysis"]], "Compute MNE-dSPM inverse solution on single epochs": [[28, "compute-mne-dspm-inverse-solution-on-single-epochs"]], "Compute sLORETA inverse solution on raw data": [[29, "compute-sloreta-inverse-solution-on-raw-data"]], "Compute MNE-dSPM inverse solution on evoked data in volume source space": [[30, "compute-mne-dspm-inverse-solution-on-evoked-data-in-volume-source-space"]], "Source localization with a custom inverse solver": [[31, "source-localization-with-a-custom-inverse-solver"]], "Compute source level time-frequency timecourses using a DICS beamformer": [[32, "compute-source-level-time-frequency-timecourses-using-a-dics-beamformer"]], "Compute source power using DICS beamformer": [[33, "compute-source-power-using-dics-beamformer"]], "Compute evoked ERS source power using DICS, LCMV beamformer, and dSPM": [[34, "compute-evoked-ers-source-power-using-dics-lcmv-beamformer-and-dspm"]], "Compute covariances": [[34, "compute-covariances"]], "Plot source estimates": [[34, "plot-source-estimates"]], "Compute a sparse inverse solution using the Gamma-MAP empirical Bayesian method": [[35, "compute-a-sparse-inverse-solution-using-the-gamma-map-empirical-bayesian-method"]], "Extracting time course from source_estimate object": [[37, "extracting-time-course-from-source-estimate-object"]], "Generate a functional label from source estimates": [[38, "generate-a-functional-label-from-source-estimates"]], "Extracting the time series of activations in a label": [[39, "extracting-the-time-series-of-activations-in-a-label"]], "Compute inverse solution": [[39, "compute-inverse-solution"], [41, "compute-inverse-solution"], [177, "compute-inverse-solution"]], "View source activations": [[39, "view-source-activations"]], "Using vector solutions": [[39, "using-vector-solutions"]], "Compute sparse inverse solution with mixed norm: MxNE and irMxNE": [[40, "compute-sparse-inverse-solution-with-mixed-norm-mxne-and-irmxne"]], "Compute MNE inverse solution on evoked data with a mixed source space": [[41, "compute-mne-inverse-solution-on-evoked-data-with-a-mixed-source-space"]], "Set up our source space": [[41, "set-up-our-source-space"]], "View the source space": [[41, "view-the-source-space"]], "Compute the fwd matrix": [[41, "compute-the-fwd-matrix"]], "Plot the mixed source estimate": [[41, "plot-the-mixed-source-estimate"]], "Plot the surface": [[41, "plot-the-surface"]], "Plot the volume": [[41, "plot-the-volume"]], "Process labels": [[41, "process-labels"]], "Compute source power estimate by projecting the covariance with MNE": [[42, "compute-source-power-estimate-by-projecting-the-covariance-with-mne"]], "Compute empty-room covariance": [[42, "compute-empty-room-covariance"]], "Epoch the data": [[42, "epoch-the-data"]], "Compute and plot covariances": [[42, "compute-and-plot-covariances"]], "Apply inverse operator to covariance": [[42, "apply-inverse-operator-to-covariance"]], "Morph surface source estimate": [[43, "morph-surface-source-estimate"]], "Setting up SourceMorph for SourceEstimate": [[43, "setting-up-sourcemorph-for-sourceestimate"]], "Apply morph to (Vector) SourceEstimate": [[43, "apply-morph-to-vector-sourceestimate"]], "Plot results": [[43, "plot-results"], [44, "plot-results"]], "Reading and writing SourceMorph from and to disk": [[43, "reading-and-writing-sourcemorph-from-and-to-disk"], [44, "reading-and-writing-sourcemorph-from-and-to-disk"]], "Morph volumetric source estimate": [[44, "morph-volumetric-source-estimate"]], "Get a SourceMorph object for VolSourceEstimate": [[44, "get-a-sourcemorph-object-for-volsourceestimate"]], "Apply morph to VolSourceEstimate": [[44, "apply-morph-to-volsourceestimate"]], "Convert morphed VolSourceEstimate into NIfTI": [[44, "convert-morphed-volsourceestimate-into-nifti"]], "Computing source timecourses with an XFit-like multi-dipole model": [[45, "computing-source-timecourses-with-an-xfit-like-multi-dipole-model"]], "Compute iterative reweighted TF-MxNE with multiscale time-frequency dictionary": [[46, "compute-iterative-reweighted-tf-mxne-with-multiscale-time-frequency-dictionary"]], "Visualize source leakage among labels using a circular graph": [[47, "visualize-source-leakage-among-labels-using-a-circular-graph"]], "Load forward solution and inverse operator": [[47, "load-forward-solution-and-inverse-operator"]], "Read and organise labels for cortical parcellation": [[47, "read-and-organise-labels-for-cortical-parcellation"]], "Compute point-spread function summaries (PCA) for all labels": [[47, "compute-point-spread-function-summaries-pca-for-all-labels"]], "Evaluate leakage based on label-to-label PSF correlations": [[47, "evaluate-leakage-based-on-label-to-label-psf-correlations"]], "Save the figure (optional)": [[47, "save-the-figure-optional"]], "Plot PSFs for individual labels": [[47, "plot-psfs-for-individual-labels"]], "Plot point-spread functions (PSFs) and cross-talk functions (CTFs)": [[48, "plot-point-spread-functions-psfs-and-cross-talk-functions-ctfs"]], "Visualize": [[48, "visualize"], [49, "visualize"], [50, "visualize"]], "Compute cross-talk functions for LCMV beamformers": [[49, "compute-cross-talk-functions-for-lcmv-beamformers"]], "Compute LCMV filters with different data covariance matrices": [[49, "compute-lcmv-filters-with-different-data-covariance-matrices"]], "Compute resolution matrices for the two LCMV beamformers": [[49, "compute-resolution-matrices-for-the-two-lcmv-beamformers"]], "Plot point-spread functions (PSFs) for a volume": [[50, "plot-point-spread-functions-psfs-for-a-volume"]], "Compute Rap-Music on evoked data": [[51, "compute-rap-music-on-evoked-data"]], "Reading an inverse operator": [[52, "reading-an-inverse-operator"]], "Reading an STC file": [[53, "reading-an-stc-file"]], "Compute spatial resolution metrics in source space": [[54, "compute-spatial-resolution-metrics-in-source-space"]], "MNE": [[54, "mne"]], "dSPM": [[54, "dspm"], [870, "dspm"]], "Visualize results": [[54, "visualize-results"]], "Compute spatial resolution metrics to compare MEG with EEG+MEG": [[55, "compute-spatial-resolution-metrics-to-compare-meg-with-eeg-meg"]], "EEGMEG": [[55, "eegmeg"]], "MEG": [[55, "meg"]], "Estimate data SNR using an inverse": [[57, "estimate-data-snr-using-an-inverse"]], "Computing source space SNR": [[58, "computing-source-space-snr"]], "EEG": [[58, "eeg"]], "Compute MxNE with time-frequency sparse prior": [[59, "compute-mxne-with-time-frequency-sparse-prior"]], "Compute Trap-Music on evoked data": [[60, "compute-trap-music-on-evoked-data"]], "Plotting the full vector-valued MNE solution": [[61, "plotting-the-full-vector-valued-mne-solution"]], "Getting averaging info from .fif files": [[62, "getting-averaging-info-from-fif-files"]], "How to use data in neural ensemble (NEO) format": [[64, "how-to-use-data-in-neural-ensemble-neo-format"]], "Reading/Writing a noise covariance matrix": [[65, "reading-writing-a-noise-covariance-matrix"]], "Reading XDF EEG data": [[66, "reading-xdf-eeg-data"]], "Using contralateral referencing for EEG": [[68, "using-contralateral-referencing-for-eeg"]], "Cortical Signal Suppression (CSS) for removal of cortical signals": [[69, "cortical-signal-suppression-css-for-removal-of-cortical-signals"]], "Define target events based on time lag, plot evoked response": [[70, "define-target-events-based-on-time-lag-plot-evoked-response"]], "Identify EEG Electrodes Bridged by too much Gel": [[71, "ex-eeg-bridging"]], "Compute Electrical Distance Metric": [[71, "compute-electrical-distance-metric"]], "Examine an Electrical Distance Matrix": [[71, "examine-an-electrical-distance-matrix"]], "Examine the Distribution of Electrical Distances": [[71, "examine-the-distribution-of-electrical-distances"]], "Plot Electrical Distances on a Topomap": [[71, "plot-electrical-distances-on-a-topomap"]], "Plot the Raw Voltage Time Series for Bridged Electrodes": [[71, "plot-the-raw-voltage-time-series-for-bridged-electrodes"]], "Compare Bridging Across Subjects in the EEGBCI Dataset": [[71, "compare-bridging-across-subjects-in-the-eegbci-dataset"]], "The Relationship Between Bridging and Impedances": [[71, "the-relationship-between-bridging-and-impedances"]], "Summary": [[71, "summary"], [167, "summary"], [175, "summary"], [199, "summary"], [200, "summary"], [202, "summary"]], "Transform EEG data using current source density (CSD)": [[72, "transform-eeg-data-using-current-source-density-csd"]], "Show EOG artifact timing": [[73, "show-eog-artifact-timing"]], "Reduce EOG artifacts through regression": [[74, "reduce-eog-artifacts-through-regression"]], "Import packages and load data": [[74, "import-packages-and-load-data"]], "Perform regression and remove EOG": [[74, "perform-regression-and-remove-eog"]], "Before/after comparison": [[74, "before-after-comparison"]], "Find MEG reference channel artifacts": [[75, "find-meg-reference-channel-artifacts"]], "Visualise NIRS artifact correction methods": [[76, "visualise-nirs-artifact-correction-methods"]], "Import data": [[76, "import-data"]], "Add artificial artifacts to data": [[76, "add-artificial-artifacts-to-data"]], "Apply temporal derivative distribution repair": [[76, "apply-temporal-derivative-distribution-repair"]], "Compare the different ICA algorithms in MNE": [[77, "compare-the-different-ica-algorithms-in-mne"]], "Interpolate bad channels for MEG/EEG channels": [[79, "interpolate-bad-channels-for-meg-eeg-channels"]], "Maxwell filter data with movement compensation": [[80, "maxwell-filter-data-with-movement-compensation"]], "Annotate movement artifacts and reestimate dev_head_t": [[81, "annotate-movement-artifacts-and-reestimate-dev-head-t"]], "Plot continuous head position with respect to the mean recording position": [[81, "plot-continuous-head-position-with-respect-to-the-mean-recording-position"]], "Plot raw data with annotated movement": [[81, "plot-raw-data-with-annotated-movement"]], "Annotate muscle artifacts": [[82, "annotate-muscle-artifacts"]], "Plot muscle z-scores across recording": [[82, "plot-muscle-z-scores-across-recording"]], "View the annotations": [[82, "view-the-annotations"]], "Removing muscle ICA components": [[83, "removing-muscle-ica-components"]], "Let\u2019s now replicate this on the EEGBCI dataset": [[83, "let-s-now-replicate-this-on-the-eegbci-dataset"]], "Plot sensor denoising using oversampled temporal projection": [[84, "plot-sensor-denoising-using-oversampled-temporal-projection"]], "Shifting time-scale in evoked data": [[86, "shifting-time-scale-in-evoked-data"]], "Remap MEG channel types": [[87, "remap-meg-channel-types"]], "XDAWN Denoising": [[88, "xdawn-denoising"]], "Compare simulated and estimated source activity": [[90, "compare-simulated-and-estimated-source-activity"]], "Define main parameters of sources": [[90, "define-main-parameters-of-sources"]], "Create simulated source activity": [[90, "create-simulated-source-activity"], [94, "create-simulated-source-activity"]], "Simulate raw data": [[90, "simulate-raw-data"], [94, "simulate-raw-data"]], "Compute evoked from raw data": [[90, "compute-evoked-from-raw-data"]], "Create true stcs corresponding to evoked": [[90, "create-true-stcs-corresponding-to-evoked"]], "Reconstruct simulated sources": [[90, "reconstruct-simulated-sources"]], "Compute performance scores for different source amplitude thresholds": [[90, "compute-performance-scores-for-different-source-amplitude-thresholds"]], "For region": [[90, "for-region"]], "For Dipoles": [[90, "for-dipoles"]], "Generate simulated evoked data": [[92, "generate-simulated-evoked-data"]], "Generate simulated raw data": [[93, "generate-simulated-raw-data"]], "Simulate raw data using subject anatomy": [[94, "simulate-raw-data-using-subject-anatomy"]], "Extract epochs and compute evoked responsses": [[94, "extract-epochs-and-compute-evoked-responsses"]], "Reconstruct simulated source time courses using dSPM inverse operator": [[94, "reconstruct-simulated-source-time-courses-using-dspm-inverse-operator"]], "Generate simulated source data": [[95, "generate-simulated-source-data"]], "Permutation F-test on sensor data with 1D cluster level": [[96, "permutation-f-test-on-sensor-data-with-1d-cluster-level"]], "FDR correction on T-test on sensor data": [[97, "fdr-correction-on-t-test-on-sensor-data"]], "Regression on continuous data (rER[P/F])": [[99, "regression-on-continuous-data-rer-p-f"]], "Permutation T-test on sensor data": [[100, "permutation-t-test-on-sensor-data"]], "Analysing continuous features with binning and regression in sensor space": [[101, "analysing-continuous-features-with-binning-and-regression-in-sensor-space"]], "Compute a cross-spectral density (CSD) matrix": [[103, "compute-a-cross-spectral-density-csd-matrix"]], "Compute Power Spectral Density of inverse solution from single epochs": [[104, "compute-power-spectral-density-of-inverse-solution-from-single-epochs"]], "Compute source space PSD in label": [[104, "compute-source-space-psd-in-label"]], "Compute power and phase lock in label of the source space": [[107, "compute-power-and-phase-lock-in-label-of-the-source-space"]], "Compute source power spectral density (PSD) in a label": [[108, "compute-source-power-spectral-density-psd-in-a-label"]], "Compute source power spectral density (PSD) of VectorView and OPM data": [[109, "compute-source-power-spectral-density-psd-of-vectorview-and-opm-data"]], "Alignment and forward": [[109, "alignment-and-forward"]], "Alpha": [[109, "alpha"]], "Beta": [[109, "beta"]], "Compute induced power in the source space with dSPM": [[110, "compute-induced-power-in-the-source-space-with-dspm"]], "Temporal whitening with AR model": [[111, "temporal-whitening-with-ar-model"]], "Compute and visualize ERDS maps": [[112, "compute-and-visualize-erds-maps"]], "Explore event-related dynamics for specific frequency bands": [[113, "explore-event-related-dynamics-for-specific-frequency-bands"]], "Time-frequency on simulated data (Multitaper vs. Morlet vs. Stockwell vs. Hilbert)": [[114, "time-frequency-on-simulated-data-multitaper-vs-morlet-vs-stockwell-vs-hilbert"]], "Simulate data": [[114, "simulate-data"]], "Calculate a time-frequency representation (TFR)": [[114, "calculate-a-time-frequency-representation-tfr"]], "Multitaper transform": [[114, "multitaper-transform"]], "Stockwell (S) transform": [[114, "stockwell-s-transform"]], "Morlet Wavelets": [[114, "morlet-wavelets"]], "Narrow-bandpass Filter and Hilbert Transform": [[114, "narrow-bandpass-filter-and-hilbert-transform"]], "Calculating a TFR without averaging over epochs": [[114, "calculating-a-tfr-without-averaging-over-epochs"]], "Operating on arrays": [[114, "operating-on-arrays"]], "How to convert 3D electrode positions to a 2D image": [[115, "how-to-convert-3d-electrode-positions-to-a-2d-image"]], "Load data": [[115, "load-data"], [116, "load-data"], [178, "load-data"]], "Project 3D electrodes to a 2D snapshot": [[115, "project-3d-electrodes-to-a-2d-snapshot"]], "Manually creating 2D electrode positions": [[115, "manually-creating-2d-electrode-positions"]], "Plotting with mne.viz.Brain": [[116, "plotting-with-mne-viz-brain"]], "Add source information": [[116, "add-source-information"]], "Modify the view of the brain": [[116, "modify-the-view-of-the-brain"]], "Highlight a region on the brain": [[116, "highlight-a-region-on-the-brain"]], "Include the head in the image": [[116, "include-the-head-in-the-image"]], "Add sensors positions": [[116, "add-sensors-positions"]], "Add current dipoles": [[116, "add-current-dipoles"]], "Create a screenshot for exporting the brain image": [[116, "create-a-screenshot-for-exporting-the-brain-image"]], "Visualize channel over epochs as an image": [[117, "visualize-channel-over-epochs-as-an-image"]], "Plotting EEG sensors on the scalp": [[118, "plotting-eeg-sensors-on-the-scalp"]], "Plotting topographic arrowmaps of evoked data": [[119, "plotting-topographic-arrowmaps-of-evoked-data"]], "Plotting topographic maps of evoked data": [[120, "plotting-topographic-maps-of-evoked-data"]], "Basic plot_topomap() options": [[120, "basic-plot-topomap-options"]], "Additional plot_topomap() options": [[120, "additional-plot-topomap-options"]], "More advanced usage": [[120, "more-advanced-usage"]], "Interpolating topomaps": [[120, "interpolating-topomaps"]], "Animating the topomap": [[120, "animating-the-topomap"]], "Whitening evoked data with a noise covariance": [[121, "whitening-evoked-data-with-a-noise-covariance"]], "Plotting sensor layouts of MEG systems": [[123, "plotting-sensor-layouts-of-meg-systems"]], "Neuromag": [[123, "neuromag"]], "CTF": [[123, "ctf"]], "BTi": [[123, "bti"]], "KIT": [[123, "kit"]], "Artemis123": [[123, "artemis123"]], "Plot the MNE brain and helmet": [[124, "plot-the-mne-brain-and-helmet"]], "Plotting sensor layouts of EEG systems": [[125, "plotting-sensor-layouts-of-eeg-systems"]], "Plot a cortical parcellation": [[126, "plot-a-cortical-parcellation"]], "Make figures more publication ready": [[127, "make-figures-more-publication-ready"]], "Imports": [[127, "imports"]], "Evoked plot with brain activation": [[127, "evoked-plot-with-brain-activation"]], "Custom timecourse with montage inset": [[127, "custom-timecourse-with-montage-inset"]], "Plot single trial activity, grouped by ROI and sorted by RT": [[128, "plot-single-trial-activity-grouped-by-roi-and-sorted-by-rt"]], "Show noise levels from empty room data": [[129, "show-noise-levels-from-empty-room-data"]], "Sensitivity map of SSP projections": [[131, "sensitivity-map-of-ssp-projections"]], "Compare evoked responses for different conditions": [[132, "compare-evoked-responses-for-different-conditions"]], "Plot custom topographies for MEG sensors": [[133, "plot-custom-topographies-for-meg-sensors"]], "Cross-hemisphere comparison": [[134, "cross-hemisphere-comparison"]], "Working with sEEG data": [[135, "working-with-seeg-data"]], "Working with ECoG data": [[136, "working-with-ecog-data"]], "Load in data and perform basic preprocessing": [[136, "load-in-data-and-perform-basic-preprocessing"]], "Explore the electrodes on a template brain": [[136, "explore-the-electrodes-on-a-template-brain"]], "Compute frequency features of the data": [[136, "compute-frequency-features-of-the-data"]], "Plot Gamma Power on cortical sensors": [[136, "plot-gamma-power-on-cortical-sensors"]], "Visualize the time-evolution of the gamma power on the brain": [[136, "visualize-the-time-evolution-of-the-gamma-power-on-the-brain"]], "Sleep stage classification from polysomnography (PSG) data": [[137, "sleep-stage-classification-from-polysomnography-psg-data"]], "Read the PSG data and Hypnograms to create a raw object": [[137, "read-the-psg-data-and-hypnograms-to-create-a-raw-object"]], "Extract 30s events from annotations": [[137, "extract-30s-events-from-annotations"]], "Create Epochs from the data based on the events found in the annotations": [[137, "create-epochs-from-the-data-based-on-the-events-found-in-the-annotations"]], "Applying the same steps to the test data from Bob": [[137, "applying-the-same-steps-to-the-test-data-from-bob"]], "Feature Engineering": [[137, "feature-engineering"]], "Design a scikit-learn transformer from a Python function": [[137, "design-a-scikit-learn-transformer-from-a-python-function"]], "Multiclass classification workflow using scikit-learn": [[137, "multiclass-classification-workflow-using-scikit-learn"]], "Further analysis of the data": [[137, "further-analysis-of-the-data"]], "Exercise": [[137, "exercise"], [158, "exercise"], [196, "exercise"], [241, "exercise"]], "Clinical applications": [[138, "clinical-applications"], [165, "clinical-applications"]], "MNE-GUI-addons examples": [[138, "mne-gui-addons-examples"], [165, "mne-gui-addons-examples"]], "MNE-Python examples": [[138, "mne-python-examples"], [165, "mne-python-examples"]], "The Epochs data structure: discontinuous data": [[140, "the-epochs-data-structure-discontinuous-data"]], "Creating Epoched data from a Raw object": [[140, "creating-epoched-data-from-a-raw-object"]], "Basic visualization of Epochs objects": [[140, "basic-visualization-of-epochs-objects"]], "Subselecting epochs": [[140, "subselecting-epochs"]], "Selecting epochs by index": [[140, "selecting-epochs-by-index"]], "Selecting, dropping, and reordering channels": [[140, "selecting-dropping-and-reordering-channels"], [149, "selecting-dropping-and-reordering-channels"], [216, "selecting-dropping-and-reordering-channels"]], "Changing channel name and type": [[140, "changing-channel-name-and-type"], [216, "changing-channel-name-and-type"]], "Selection in the time domain": [[140, "selection-in-the-time-domain"], [216, "selection-in-the-time-domain"]], "Extracting data in other forms": [[140, "extracting-data-in-other-forms"]], "Loading and saving Epochs objects to disk": [[140, "loading-and-saving-epochs-objects-to-disk"]], "Iterating over Epochs": [[140, "iterating-over-epochs"]], "Regression-based baseline correction": [[141, "regression-based-baseline-correction"]], "Traditional baselining": [[141, "traditional-baselining"]], "Regression-based baselining": [[141, "regression-based-baselining"]], "Plot the baseline regressor": [[141, "plot-the-baseline-regressor"]], "Plot the ERPs": [[141, "plot-the-erps"]], "Plot the scalp topographies and difference waves": [[141, "plot-the-scalp-topographies-and-difference-waves"]], "Examine the interaction term": [[141, "examine-the-interaction-term"]], "Visualizing epoched data": [[142, "visualizing-epoched-data"]], "Plotting Epochs as time series": [[142, "plotting-epochs-as-time-series"]], "Interactivity in pipelines and scripts": [[142, null]], "Plotting projectors from an Epochs object": [[142, "plotting-projectors-from-an-epochs-object"]], "Plotting sensor locations": [[142, "plotting-sensor-locations"]], "Plotting the power spectrum of Epochs": [[142, "plotting-the-power-spectrum-of-epochs"]], "Plotting Epochs as an image map": [[142, "plotting-epochs-as-an-image-map"]], "Working with Epoch metadata": [[143, "working-with-epoch-metadata"]], "Viewing Epochs metadata": [[143, "viewing-epochs-metadata"]], "Restrictions on metadata DataFrames": [[143, null]], "Modifying the metadata": [[143, "modifying-the-metadata"]], "Selecting epochs using metadata queries": [[143, "selecting-epochs-using-metadata-queries"]], "Adding metadata to an Epochs object": [[143, "adding-metadata-to-an-epochs-object"]], "Auto-generating Epochs metadata": [[144, "auto-generating-epochs-metadata"]], "Preparation": [[144, "preparation"]], "Creating metadata from events": [[144, "creating-metadata-from-events"]], "The basics of make_metadata": [[144, "the-basics-of-make-metadata"]], "Specifying time-locked events": [[144, "specifying-time-locked-events"]], "Keeping only the first events of a group": [[144, "keeping-only-the-first-events-of-a-group"]], "Adding new columns to describe stimulation side and response correctness": [[144, "adding-new-columns-to-describe-stimulation-side-and-response-correctness"]], "Creating Epochs with metadata, and visualizing ERPs": [[144, "creating-epochs-with-metadata-and-visualizing-erps"]], "Applying the knowledge: visualizing the ERN component": [[144, "applying-the-knowledge-visualizing-the-ern-component"]], "Exporting Epochs to Pandas DataFrames": [[145, "exporting-epochs-to-pandas-dataframes"]], "Converting an Epochs object to a DataFrame": [[145, "converting-an-epochs-object-to-a-dataframe"]], "Scaling time and channel values": [[145, "scaling-time-and-channel-values"]], "Setting the index": [[145, "setting-the-index"]], "Wide- versus long-format DataFrames": [[145, "wide-versus-long-format-dataframes"]], "Divide continuous data into equally-spaced epochs": [[146, "divide-continuous-data-into-equally-spaced-epochs"]], "Characteristics of Fixed Length Epochs": [[146, "characteristics-of-fixed-length-epochs"]], "Example Use Case for Fixed Length Epochs: Connectivity Analysis": [[146, "example-use-case-for-fixed-length-epochs-connectivity-analysis"]], "Segmenting continuous data into epochs": [[147, "segmenting-continuous-data-into-epochs"], [165, "segmenting-continuous-data-into-epochs"]], "The Evoked data structure: evoked/averaged data": [[149, "the-evoked-data-structure-evoked-averaged-data"]], "Creating Evoked objects from Epochs": [[149, "creating-evoked-objects-from-epochs"]], "Basic visualization of Evoked objects": [[149, "basic-visualization-of-evoked-objects"]], "Subsetting Evoked data": [[149, "subsetting-evoked-data"]], "Evokeds are not memory-mapped": [[149, null]], "Similarities among the core data structures": [[149, "similarities-among-the-core-data-structures"]], "Loading and saving Evoked data": [[149, "loading-and-saving-evoked-data"]], "Combining Evoked objects": [[149, "combining-evoked-objects"]], "Other uses of Evoked objects": [[149, "other-uses-of-evoked-objects"]], "Visualizing Evoked data": [[150, "visualizing-evoked-data"]], "Plotting signal traces": [[150, "plotting-signal-traces"]], "Butterfly plots": [[150, null]], "Plotting scalp topographies": [[150, "plotting-scalp-topographies"]], "Arrow maps": [[150, "arrow-maps"]], "Joint plots": [[150, "joint-plots"]], "Comparing Evoked objects": [[150, "comparing-evoked-objects"]], "Image plots": [[150, "image-plots"]], "Topographical subplots": [[150, "topographical-subplots"]], "3D Field Maps": [[150, "d-field-maps"]], "EEG analysis - Event-Related Potentials (ERPs)": [[151, "eeg-analysis-event-related-potentials-erps"]], "Channel names and types": [[151, "channel-names-and-types"]], "Channel locations": [[151, "channel-locations"]], "Setting the EEG reference": [[151, "setting-the-eeg-reference"], [208, "setting-the-eeg-reference"]], "Filtering": [[151, "filtering"]], "Evoked responses: epoching and averaging": [[151, "evoked-responses-epoching-and-averaging"]], "Global field power (GFP)": [[151, "global-field-power-gfp"]], "Averaging across channels with regions of interest": [[151, "averaging-across-channels-with-regions-of-interest"]], "Comparing conditions": [[151, "comparing-conditions"]], "Grand averages": [[151, "grand-averages"]], "Amplitude and latency measures": [[151, "amplitude-and-latency-measures"]], "Peak latency and amplitude": [[151, "peak-latency-and-amplitude"]], "Mean Amplitude": [[151, "mean-amplitude"]], "Plotting whitened data": [[152, "plotting-whitened-data"]], "Raw data with whitening": [[152, "raw-data-with-whitening"]], "Epochs with whitening": [[152, "epochs-with-whitening"]], "Evoked data with whitening": [[152, "evoked-data-with-whitening"]], "Evoked data with scaled whitening": [[152, "evoked-data-with-scaled-whitening"]], "Topographic plot with whitening": [[152, "topographic-plot-with-whitening"]], "Estimating evoked responses": [[153, "estimating-evoked-responses"], [165, "estimating-evoked-responses"], [166, "estimating-evoked-responses"]], "FreeSurfer MRI reconstruction": [[155, "freesurfer-mri-reconstruction"]], "First steps": [[155, "first-steps"], [850, "first-steps"]], "Anatomical reconstruction": [[155, "anatomical-reconstruction"]], "Use with MNE-Python": [[155, "use-with-mne-python"]], "\u2018fsaverage\u2019": [[155, "fsaverage"]], "Source alignment and coordinate frames": [[156, "source-alignment-and-coordinate-frames"]], "Understanding coordinate frames": [[156, "understanding-coordinate-frames"]], "Coordinate frame definitions": [[156, "coordinate-frame-definitions"]], "A bad example": [[156, "a-bad-example"]], "A good example": [[156, "a-good-example"]], "Visualizing the transformations": [[156, "visualizing-the-transformations"]], "Example: MRI defacing": [[156, "example-mri-defacing"]], "Defining the head\u2194MRI trans using the GUI": [[156, "defining-the-headmri-trans-using-the-gui"]], "Alignment without MRI": [[156, "alignment-without-mri"]], "Using an automated approach to coregistration": [[157, "using-an-automated-approach-to-coregistration"]], "Set up the coregistration model": [[157, "set-up-the-coregistration-model"]], "Initial fit with fiducials": [[157, "initial-fit-with-fiducials"]], "Refining with ICP": [[157, "refining-with-icp"]], "Omitting bad points": [[157, "omitting-bad-points"]], "Final coregistration fit": [[157, "final-coregistration-fit"]], "Head model and forward computation": [[158, "head-model-and-forward-computation"]], "Computing the forward operator": [[158, "computing-the-forward-operator"]], "Compute and visualize BEM surfaces": [[158, "compute-and-visualize-bem-surfaces"]], "Visualizing the coregistration": [[158, "visualizing-the-coregistration"]], "Compute Source Space": [[158, "compute-source-space"]], "Compute forward solution": [[158, "compute-forward-solution"]], "EEG forward operator with a template MRI": [[159, "eeg-forward-operator-with-a-template-mri"]], "Adult template MRI (fsaverage)": [[159, "adult-template-mri-fsaverage"]], "Setup source space and compute forward": [[159, "setup-source-space-and-compute-forward"]], "Infant MRI surrogates": [[159, "infant-mri-surrogates"]], "Get an infant MRI template": [[159, "get-an-infant-mri-template"]], "How MNE uses FreeSurfer\u2019s outputs": [[160, "how-mne-uses-freesurfer-s-outputs"]], "MRI coordinate frames": [[160, "mri-coordinate-frames"]], "Under the hood": [[160, null]], "\u201cMRI coordinates\u201d in MNE-Python: FreeSurfer surface RAS": [[160, "mri-coordinates-in-mne-python-freesurfer-surface-ras"]], "Head coordinate frame": [[160, null]], "Using FreeSurfer\u2019s surface reconstructions": [[160, "using-freesurfer-s-surface-reconstructions"]], "Cortical alignment (spherical)": [[160, "cortical-alignment-spherical"]], "Surface decimation": [[160, "surface-decimation"]], "FreeSurfer\u2019s MNI affine transformation": [[160, "freesurfer-s-mni-affine-transformation"]], "Understanding the inflated brain": [[160, "understanding-the-inflated-brain"]], "Fixing BEM and head surfaces": [[161, "fixing-bem-and-head-surfaces"]], "Exporting surfaces to Blender": [[161, "exporting-surfaces-to-blender"]], "Editing in Blender": [[161, "editing-in-blender"]], "Using the fixed surfaces in MNE-Python": [[161, "using-the-fixed-surfaces-in-mne-python"]], "Editing the head surfaces": [[161, "editing-the-head-surfaces"]], "Low-resolution head": [[161, "low-resolution-head"]], "High-resolution head": [[161, "high-resolution-head"]], "Blender editing tips": [[161, "blender-editing-tips"]], "What if you still get an error?": [[161, "what-if-you-still-get-an-error"]], "Blender operations": [[161, "blender-operations"]], "Cleaning up a bad dense head surface by smoothing": [[161, "cleaning-up-a-bad-dense-head-surface-by-smoothing"]], "Topological errors": [[161, "topological-errors"]], "Dealing with topology in blender": [[161, "dealing-with-topology-in-blender"]], "Dealing with topology using pymeshfix": [[161, "dealing-with-topology-using-pymeshfix"]], "Computing a covariance matrix": [[162, "computing-a-covariance-matrix"]], "Plot the covariance matrices": [[162, "plot-the-covariance-matrices"]], "How should I regularize the covariance matrix?": [[162, "how-should-i-regularize-the-covariance-matrix"], [867, "how-should-i-regularize-the-covariance-matrix"]], "Forward models and source spaces": [[163, "forward-models-and-source-spaces"], [165, "forward-models-and-source-spaces"]], "Tutorials": [[165, "tutorials"]], "Introductory tutorials": [[165, "introductory-tutorials"], [173, "introductory-tutorials"]], "Reading data for different recording systems": [[165, "reading-data-for-different-recording-systems"], [193, "reading-data-for-different-recording-systems"]], "Working with continuous data": [[165, "working-with-continuous-data"], [220, "working-with-continuous-data"]], "Time-frequency analysis": [[165, "time-frequency-analysis"], [166, "time-frequency-analysis"], [243, "time-frequency-analysis"]], "Source localization and inverses": [[165, "source-localization-and-inverses"], [186, "source-localization-and-inverses"]], "Statistical analysis of sensor data": [[165, "statistical-analysis-of-sensor-data"], [233, "statistical-analysis-of-sensor-data"]], "Statistical analysis of source estimates": [[165, "statistical-analysis-of-source-estimates"], [238, "statistical-analysis-of-source-estimates"]], "Machine learning models of neural activity": [[165, "machine-learning-models-of-neural-activity"], [197, "machine-learning-models-of-neural-activity"]], "Simulation": [[165, "simulation"], [225, "simulation"], [883, "simulation"]], "Overview of MEG/EEG analysis with MNE-Python": [[166, "overview-of-meg-eeg-analysis-with-mne-python"]], "Loading data": [[166, "loading-data"]], "Detecting experimental events": [[166, "detecting-experimental-events"]], "Epoching continuous data": [[166, "epoching-continuous-data"]], "Inverse modeling": [[166, "inverse-modeling"]], "Modifying data in-place": [[167, "modifying-data-in-place"]], "Signal processing": [[167, "signal-processing"]], "Channel picking": [[167, "channel-picking"]], "The copy parameter": [[167, "the-copy-parameter"]], "Parsing events from raw data": [[168, "parsing-events-from-raw-data"]], "The Events and Annotations data structures": [[168, "the-events-and-annotations-data-structures"]], "What is a STIM channel?": [[168, "what-is-a-stim-channel"]], "Converting a STIM channel signal to an Events array": [[168, "converting-a-stim-channel-signal-to-an-events-array"]], "The middle column of the Events array": [[168, null]], "Reading embedded events as Annotations": [[168, "reading-embedded-events-as-annotations"]], "Converting between Events arrays and Annotations objects": [[168, "converting-between-events-arrays-and-annotations-objects"]], "Making multiple events per annotation": [[168, "making-multiple-events-per-annotation"]], "The Info data structure": [[169, "the-info-data-structure"]], "Querying the Info object": [[169, "querying-the-info-object"]], "Obtaining subsets of channels": [[169, "obtaining-subsets-of-channels"]], "Obtaining channel type information": [[169, "obtaining-channel-type-information"]], "Dropping channels from an Info object": [[169, "dropping-channels-from-an-info-object"]], "Working with sensor locations": [[170, "working-with-sensor-locations"]], "About montages and layouts": [[170, "about-montages-and-layouts"]], "Working with built-in montages": [[170, "working-with-built-in-montages"]], "Computing sensor locations": [[170, null]], "Plotting 2D sensor locations like EEGLAB": [[170, "plotting-2d-sensor-locations-like-eeglab"]], "The sphere keyword is available in many places!": [[170, null]], "Manually controlling 2D channel projection": [[170, "manually-controlling-2d-channel-projection"]], "Reading sensor digitization files": [[170, "reading-sensor-digitization-files"]], "Visualizing sensors in 3D surface renderings": [[170, "visualizing-sensors-in-3d-surface-renderings"]], "Working with layout files": [[170, "working-with-layout-files"]], "Configuring MNE-Python": [[171, "configuring-mne-python"]], "Getting and setting configuration variables": [[171, "getting-and-setting-configuration-variables"]], "Where configurations are stored": [[171, "where-configurations-are-stored"]], "Using environment variables": [[171, "using-environment-variables"]], "Logging": [[171, "logging"]], "Getting information about your system": [[171, "getting-information-about-your-system"]], "Getting started with mne.Report": [[172, "getting-started-with-mne-report"]], "Adding Raw data": [[172, "adding-raw-data"]], "Adding events": [[172, "adding-events"]], "Adding Epochs": [[172, "adding-epochs"]], "Adding Evoked": [[172, "adding-evoked"]], "Adding Covariance": [[172, "adding-covariance"]], "Adding Projection vectors": [[172, "adding-projection-vectors"]], "Adding ICA": [[172, "adding-ica"]], "Adding MRI with BEM": [[172, "adding-mri-with-bem"]], "Adding coregistration": [[172, "adding-coregistration"]], "Adding a Forward solution": [[172, "adding-a-forward-solution"]], "Adding an InverseOperator": [[172, "adding-an-inverseoperator"]], "Adding a SourceEstimate": [[172, "adding-a-sourceestimate"]], "Adding source code (e.g., a Python script)": [[172, "adding-source-code-e-g-a-python-script"]], "Adding custom figures": [[172, "adding-custom-figures"]], "Adding image files": [[172, "adding-image-files"]], "Working with tags": [[172, "working-with-tags"]], "Editing a saved report": [[172, "editing-a-saved-report"]], "Adding an entire folder of files": [[172, "adding-an-entire-folder-of-files"]], "Adding custom HTML (e.g., a description text)": [[172, "adding-custom-html-e-g-a-description-text"]], "The SourceEstimate data structure": [[175, "the-sourceestimate-data-structure"]], "Load and inspect example data": [[175, "load-and-inspect-example-data"]], "SourceEstimate (stc)": [[175, "sourceestimate-stc"]], "Relationship to SourceSpaces (src)": [[175, "relationship-to-sourcespaces-src"]], "Source localization with equivalent current dipole (ECD) fit": [[176, "source-localization-with-equivalent-current-dipole-ecd-fit"]], "Source localization with MNE, dSPM, sLORETA, and eLORETA": [[177, "source-localization-with-mne-dspm-sloreta-and-eloreta"]], "Compute regularized noise covariance": [[177, "compute-regularized-noise-covariance"]], "Compute the evoked response": [[177, "compute-the-evoked-response"]], "Inverse modeling: MNE/dSPM on evoked and raw data": [[177, "inverse-modeling-mne-dspm-on-evoked-and-raw-data"]], "The role of dipole orientations in distributed source localization": [[178, "the-role-of-dipole-orientations-in-distributed-source-localization"]], "The source space": [[178, "the-source-space"]], "Fixed dipole orientations": [[178, "fixed-dipole-orientations"]], "Loose dipole orientations": [[178, "loose-dipole-orientations"]], "Limiting orientations, but not fixing them": [[178, "limiting-orientations-but-not-fixing-them"]], "Discarding dipole orientation information": [[178, "discarding-dipole-orientation-information"]], "Computing various MNE solutions": [[179, "computing-various-mne-solutions"]], "Fixed orientation": [[179, "fixed-orientation"]], "Free orientation": [[179, "free-orientation"]], "Source reconstruction using an LCMV beamformer": [[180, "source-reconstruction-using-an-lcmv-beamformer"]], "Introduction to beamformers": [[180, "introduction-to-beamformers"]], "Data processing": [[180, "data-processing"]], "Computing the covariance matrices": [[180, "computing-the-covariance-matrices"]], "The forward model": [[180, "the-forward-model"]], "Handling depth bias": [[180, "handling-depth-bias"]], "Compute the spatial filter": [[180, "compute-the-spatial-filter"]], "Apply the spatial filter": [[180, "apply-the-spatial-filter"]], "Visualize the reconstructed source activity": [[180, "visualize-the-reconstructed-source-activity"]], "On MRI slices (orthoview; 2D)": [[180, "on-mri-slices-orthoview-2d"]], "On MNI glass brain (orthoview; 2D)": [[180, "on-mni-glass-brain-orthoview-2d"]], "Volumetric rendering (3D) with vectors": [[180, "volumetric-rendering-3d-with-vectors"]], "Visualize the activity of the maximum voxel with all three components": [[180, "visualize-the-activity-of-the-maximum-voxel-with-all-three-components"]], "Morph the output to fsaverage": [[180, "morph-the-output-to-fsaverage"]], "Visualize source time courses (stcs)": [[181, "visualize-source-time-courses-stcs"]], "Surface Source Estimates": [[181, "surface-source-estimates"]], "Volume Source Estimates": [[181, "volume-source-estimates"]], "Vector Source Estimates": [[181, "vector-source-estimates"]], "Dipole fits": [[181, "dipole-fits"]], "EEG source localization given electrode locations on an MRI": [[182, "eeg-source-localization-given-electrode-locations-on-an-mri"]], "Prerequisites": [[182, "prerequisites"]], "Visualizing the MRI": [[182, "visualizing-the-mri"]], "Getting our MRI voxel EEG locations to head (and MRI surface RAS) coords": [[182, "getting-our-mri-voxel-eeg-locations-to-head-and-mri-surface-ras-coords"]], "Getting a source estimate": [[182, "getting-a-source-estimate"]], "Brainstorm Elekta phantom dataset tutorial": [[183, "brainstorm-elekta-phantom-dataset-tutorial"]], "Brainstorm CTF phantom dataset tutorial": [[184, "brainstorm-ctf-phantom-dataset-tutorial"]], "4D Neuroimaging/BTi phantom dataset tutorial": [[185, "d-neuroimaging-bti-phantom-dataset-tutorial"]], "Importing data from MEG devices": [[188, "importing-data-from-meg-devices"]], "MEGIN/Elekta Neuromag VectorView and TRIUX (.fif)": [[188, "megin-elekta-neuromag-vectorview-and-triux-fif"]], "FIL OPM (.bin)": [[188, "fil-opm-bin"]], "Artemis123 (.bin)": [[188, "artemis123-bin"]], "4-D Neuroimaging / BTI data (dir)": [[188, "d-neuroimaging-bti-data-dir"]], "CTF data (dir)": [[188, "ctf-data-dir"]], "CTF Polhemus data": [[188, "ctf-polhemus-data"]], "Applying software gradient compensation": [[188, "applying-software-gradient-compensation"]], "Ricoh/KIT MEG system data (.con/.sqd)": [[188, "ricoh-kit-meg-system-data-con-sqd"]], "Channel naming": [[188, null]], "FieldTrip MEG/EEG data (.mat)": [[188, "fieldtrip-meg-eeg-data-mat"]], "Creating MNE data structures from arbitrary data (from memory)": [[188, "creating-mne-data-structures-from-arbitrary-data-from-memory"]], "Importing data from EEG devices": [[189, "importing-data-from-eeg-devices"]], "BrainVision (.vhdr, .vmrk, .eeg)": [[189, "brainvision-vhdr-vmrk-eeg"]], "European data format (.edf)": [[189, "european-data-format-edf"]], "BioSemi data format (.bdf)": [[189, "biosemi-data-format-bdf"]], "General data format (.gdf)": [[189, "general-data-format-gdf"]], "Neuroscan CNT (.cnt)": [[189, "neuroscan-cnt-cnt"]], "EGI simple binary (.egi)": [[189, "egi-simple-binary-egi"]], "EGI MFF (.mff)": [[189, "egi-mff-mff"]], "EEGLAB files (.set, .fdt)": [[189, "eeglab-files-set-fdt"]], "Nicolet (.data)": [[189, "nicolet-data"]], "eXimia EEG data (.nxe)": [[189, "eximia-eeg-data-nxe"]], "Persyst EEG data (.lay, .dat)": [[189, "persyst-eeg-data-lay-dat"]], "Nihon Kohden EEG data (.eeg, .21e, .pnt, .log)": [[189, "nihon-kohden-eeg-data-eeg-21e-pnt-log"]], "XDF data (.xdf, .xdfz)": [[189, "xdf-data-xdf-xdfz"]], "Setting EEG references": [[189, "setting-eeg-references"]], "Reading electrode locations and head shapes for EEG recordings": [[189, "reading-electrode-locations-and-head-shapes-for-eeg-recordings"]], "Importing data from fNIRS devices": [[190, "importing-data-from-fnirs-devices"]], "Standardized data": [[190, "standardized-data"]], "SNIRF (.snirf)": [[190, "snirf-snirf"]], "Specifying the coordinate system": [[190, "specifying-the-coordinate-system"]], "Continuous Wave Devices": [[190, "continuous-wave-devices"]], "NIRx (directory or hdr)": [[190, "nirx-directory-or-hdr"]], "Hitachi (.csv)": [[190, "hitachi-csv"]], "Frequency Domain Devices": [[190, "frequency-domain-devices"]], "BOXY (.txt)": [[190, "boxy-txt"]], "Custom Data Import": [[190, "custom-data-import"]], "Loading legacy data in CSV or TSV format": [[190, "loading-legacy-data-in-csv-or-tsv-format"]], "Applying standard sensor locations to imported data": [[190, "applying-standard-sensor-locations-to-imported-data"]], "Working with CTF data: the Brainstorm auditory dataset": [[191, "working-with-ctf-data-the-brainstorm-auditory-dataset"]], "Importing Data from Eyetracking devices": [[192, "importing-data-from-eyetracking-devices"]], "SR Research (Eyelink) (.asc)": [[192, "sr-research-eyelink-asc"]], "Eye Position Data": [[192, "eye-position-data"]], "Gaze": [[192, "gaze"]], "Head-Referenced Eye Angle (HREF)": [[192, "head-referenced-eye-angle-href"]], "Pupil Position": [[192, "pupil-position"]], "Pupil Size Data": [[192, "pupil-size-data"]], "Velocity, resolution, and head position data": [[192, "velocity-resolution-and-head-position-data"]], "Spectro-temporal receptive field (STRF) estimation on continuous data": [[195, "spectro-temporal-receptive-field-strf-estimation-on-continuous-data"]], "Load audio data": [[195, "load-audio-data"]], "Create a receptive field": [[195, "create-a-receptive-field"]], "Simulate a neural response": [[195, "simulate-a-neural-response"]], "Fit a model to recover this receptive field": [[195, "fit-a-model-to-recover-this-receptive-field"]], "Visualize the effects of regularization": [[195, "visualize-the-effects-of-regularization"]], "Using different regularization types": [[195, "using-different-regularization-types"]], "Compare model performance": [[195, "compare-model-performance"]], "Decoding (MVPA)": [[196, "decoding-mvpa"]], "Design philosophy": [[196, "design-philosophy"], [865, "design-philosophy"]], "Transformation classes": [[196, "transformation-classes"]], "Scaler": [[196, "scaler"]], "Vectorizer": [[196, "vectorizer"]], "PSDEstimator": [[196, "psdestimator"]], "FilterEstimator": [[196, "filterestimator"]], "Spatial filters": [[196, "spatial-filters"]], "Common spatial pattern": [[196, "common-spatial-pattern"]], "Examples": [[196, null], [196, null], [196, null], [196, null], [196, null], [257, "examples"], [257, "id4"], [257, "id7"], [257, "id10"], [257, "id13"], [257, "id16"], [257, "id19"], [257, "id22"], [257, "id25"], [257, "id29"], [257, "id32"], [257, "id35"], [257, "id38"], [257, "id41"], [257, "id44"], [257, "id47"], [257, "id50"], [257, "id53"], [257, "id56"], [257, "id59"], [257, "id62"], [257, "id65"], [257, "id68"], [864, null], [864, null], [864, null], [864, null], [864, null], [864, null], [864, null], [864, null], [864, null], [864, null], [864, null], [864, null], [864, null], [864, null], [864, null], [864, null], [864, null], [864, null], [864, null], [864, null], [864, null], [864, null], [864, null]], "Source power comodulation (SPoC)": [[196, "source-power-comodulation-spoc"]], "xDAWN": [[196, "xdawn"]], "Effect-matched spatial filtering": [[196, "effect-matched-spatial-filtering"]], "Patterns vs. filters": [[196, "patterns-vs-filters"]], "Decoding over time": [[196, "decoding-over-time"]], "Temporal decoding": [[196, "temporal-decoding"]], "Temporal generalization": [[196, "temporal-generalization"]], "Projecting sensor-space patterns to source space": [[196, "projecting-sensor-space-patterns-to-source-space"]], "Source-space decoding": [[196, "source-space-decoding"]], "Overview of artifact detection": [[199, "overview-of-artifact-detection"]], "What are artifacts?": [[199, "what-are-artifacts"]], "What to do about artifacts": [[199, "what-to-do-about-artifacts"]], "Artifact detection": [[199, "artifact-detection"]], "Low-frequency drifts": [[199, "low-frequency-drifts"]], "Power line noise": [[199, "power-line-noise"], [203, "power-line-noise"]], "Heartbeat artifacts (ECG)": [[199, "heartbeat-artifacts-ecg"]], "Ocular artifacts (EOG)": [[199, "ocular-artifacts-eog"]], "Handling bad channels": [[200, "handling-bad-channels"]], "Marking bad channels": [[200, "marking-bad-channels"], [863, "marking-bad-channels"]], "Blocking execution": [[200, null]], "When to look for bad channels": [[200, "when-to-look-for-bad-channels"]], "Why mark bad channels at all?": [[200, "why-mark-bad-channels-at-all"]], "Interpolating bad channels": [[200, "interpolating-bad-channels"]], "How interpolation works": [[200, "how-interpolation-works"]], "Interpolation in MNE-Python": [[200, "interpolation-in-mne-python"]], "Rejecting bad data spans and breaks": [[201, "rejecting-bad-data-spans-and-breaks"]], "Annotating bad spans of data": [[201, "annotating-bad-spans-of-data"]], "The reject_by_annotation parameter": [[201, "the-reject-by-annotation-parameter"]], "Generating annotations programmatically": [[201, "generating-annotations-programmatically"]], "Detecting and annotating breaks": [[201, "detecting-and-annotating-breaks"]], "Rejecting Epochs based on channel amplitude": [[201, "rejecting-epochs-based-on-channel-amplitude"]], "Background information on filtering": [[202, "background-information-on-filtering"]], "Problem statement": [[202, "problem-statement"]], "Filtering basics": [[202, "filtering-basics"]], "FIR Filters": [[202, "fir-filters"]], "Designing FIR filters": [[202, "designing-fir-filters"]], "Applying FIR filters": [[202, "applying-fir-filters"]], "IIR filters": [[202, "iir-filters"]], "Designing IIR filters": [[202, "designing-iir-filters"]], "Applying IIR filters": [[202, "applying-iir-filters"]], "Some pitfalls of filtering": [[202, "some-pitfalls-of-filtering"]], "Low-pass problems": [[202, "low-pass-problems"]], "High-pass problems": [[202, "high-pass-problems"]], "Baseline problems (or solutions?)": [[202, "baseline-problems-or-solutions"]], "Filtering defaults": [[202, "filtering-defaults"]], "Defaults in MNE-Python": [[202, "defaults-in-mne-python"]], "Defaults in MNE-C": [[202, "defaults-in-mne-c"]], "Defaults in other software": [[202, "defaults-in-other-software"]], "Reporting Filters": [[202, "reporting-filters"]], "Filter type": [[202, "filter-type"]], "Cutoff frequency": [[202, "cutoff-frequency"]], "Filter length (order) and transition bandwidth (roll-off)": [[202, "filter-length-order-and-transition-bandwidth-roll-off"]], "Passband ripple and stopband attenuation": [[202, "passband-ripple-and-stopband-attenuation"]], "Filter delay and direction of computation": [[202, "filter-delay-and-direction-of-computation"]], "Filtering and resampling data": [[203, "filtering-and-resampling-data"]], "Background on filtering": [[203, "background-on-filtering"]], "Repairing artifacts by filtering": [[203, "repairing-artifacts-by-filtering"]], "Slow drifts": [[203, "slow-drifts"]], "Resampling": [[203, "resampling"]], "Best practices": [[203, "best-practices"], [206, "best-practices"]], "Repairing artifacts with regression": [[204, "repairing-artifacts-with-regression"]], "Prepare the data": [[204, "prepare-the-data"]], "Visualize the original data": [[204, "visualize-the-original-data"]], "Compute and apply EOG regression": [[204, "compute-and-apply-eog-regression"]], "Subtract the evoked response from the epoch data before regression": [[204, "subtract-the-evoked-response-from-the-epoch-data-before-regression"]], "Create EOG evoked before regression": [[204, "create-eog-evoked-before-regression"]], "Visualize the effect on raw data": [[204, "visualize-the-effect-on-raw-data"]], "Repairing artifacts with ICA": [[205, "repairing-artifacts-with-ica"]], "What is ICA?": [[205, "what-is-ica"]], "ICA in MNE-Python": [[205, "ica-in-mne-python"]], "ICA and dimensionality reduction": [[205, null]], "Example: EOG and ECG artifact repair": [[205, "example-eog-and-ecg-artifact-repair"], [207, "example-eog-and-ecg-artifact-repair"]], "Visualizing the artifacts": [[205, "visualizing-the-artifacts"], [207, "visualizing-the-artifacts"]], "Filtering to remove slow drifts": [[205, "filtering-to-remove-slow-drifts"]], "Fitting ICA": [[205, "fitting-ica"]], "Ignoring the time domain": [[205, null]], "Looking at the ICA solution": [[205, "looking-at-the-ica-solution"]], "Selecting ICA components manually": [[205, "selecting-ica-components-manually"]], "Using an EOG channel to select ICA components": [[205, "using-an-eog-channel-to-select-ica-components"]], "Using a simulated channel to select ICA components": [[205, "using-a-simulated-channel-to-select-ica-components"]], "Selecting ICA components using template matching": [[205, "selecting-ica-components-using-template-matching"]], "Compute ICA components on Epochs": [[205, "compute-ica-components-on-epochs"]], "Background on projectors and projections": [[206, "background-on-projectors-and-projections"]], "What is a projection?": [[206, "what-is-a-projection"]], "Example: projection as noise reduction": [[206, "example-projection-as-noise-reduction"]], "Terminology": [[206, null]], "Signal-space projection (SSP)": [[206, "signal-space-projection-ssp"]], "Projectors in MNE-Python": [[206, "projectors-in-mne-python"]], "Computing projectors": [[206, "computing-projectors"]], "Visualizing the effect of projectors": [[206, "visualizing-the-effect-of-projectors"]], "Loading and saving projectors": [[206, "loading-and-saving-projectors"]], "Adding and removing projectors": [[206, "adding-and-removing-projectors"]], "When are projectors \u201capplied\u201d?": [[206, "when-are-projectors-applied"]], "Repairing artifacts with SSP": [[207, "repairing-artifacts-with-ssp"]], "What is SSP?": [[207, "what-is-ssp"]], "Example: Environmental noise reduction from empty-room recordings": [[207, "example-environmental-noise-reduction-from-empty-room-recordings"]], "Visualizing the empty-room noise": [[207, "visualizing-the-empty-room-noise"]], "Creating the empty-room projectors": [[207, "creating-the-empty-room-projectors"]], "Visualizing how projectors affect the signal": [[207, "visualizing-how-projectors-affect-the-signal"]], "Repairing ECG artifacts with SSP": [[207, "repairing-ecg-artifacts-with-ssp"]], "Repairing EOG artifacts with SSP": [[207, "repairing-eog-artifacts-with-ssp"]], "Choosing the number of projectors": [[207, "choosing-the-number-of-projectors"]], "Visualizing SSP sensor-space bias via signal reconstruction": [[207, "visualizing-ssp-sensor-space-bias-via-signal-reconstruction"]], "SSP reconstruction": [[207, null]], "Background": [[208, "background"]], "Setting or changing the reference channel": [[208, "setting-or-changing-the-reference-channel"]], "Setting average reference": [[208, "setting-average-reference"]], "Creating the average reference as a projector": [[208, "creating-the-average-reference-as-a-projector"]], "Using an infinite reference (REST)": [[208, "using-an-infinite-reference-rest"]], "Using a bipolar reference": [[208, "using-a-bipolar-reference"]], "EEG reference and source modeling": [[208, "eeg-reference-and-source-modeling"]], "Extracting and visualizing subject head movement": [[209, "extracting-and-visualizing-subject-head-movement"]], "HPI frequencies": [[209, "hpi-frequencies"]], "Estimating continuous head position": [[209, "estimating-continuous-head-position"]], "Visualizing continuous head position": [[209, "visualizing-continuous-head-position"]], "Computing SNR of the HPI signal": [[209, "computing-snr-of-the-hpi-signal"]], "Signal-space separation (SSS) and Maxwell filtering": [[210, "signal-space-separation-sss-and-maxwell-filtering"]], "Background on SSS and Maxwell filtering": [[210, "background-on-sss-and-maxwell-filtering"]], "Using SSS and Maxwell filtering in MNE-Python": [[210, "using-sss-and-maxwell-filtering-in-mne-python"]], "Spatiotemporal SSS (tSSS)": [[210, "spatiotemporal-sss-tsss"]], "Movement compensation": [[210, "movement-compensation"]], "Caveats to using SSS / Maxwell filtering": [[210, "caveats-to-using-sss-maxwell-filtering"]], "Preprocessing functional near-infrared spectroscopy (fNIRS) data": [[211, "preprocessing-functional-near-infrared-spectroscopy-fnirs-data"]], "Providing more meaningful annotation information": [[211, "providing-more-meaningful-annotation-information"]], "Viewing location of sensors over brain surface": [[211, "viewing-location-of-sensors-over-brain-surface"]], "Selecting channels appropriate for detecting neural responses": [[211, "selecting-channels-appropriate-for-detecting-neural-responses"]], "Converting from raw intensity to optical density": [[211, "converting-from-raw-intensity-to-optical-density"]], "Evaluating the quality of the data": [[211, "evaluating-the-quality-of-the-data"]], "Converting from optical density to haemoglobin": [[211, "converting-from-optical-density-to-haemoglobin"]], "Removing heart rate from signal": [[211, "removing-heart-rate-from-signal"]], "Extract epochs": [[211, "extract-epochs"]], "View consistency of responses across trials": [[211, "view-consistency-of-responses-across-trials"]], "View consistency of responses across channels": [[211, "view-consistency-of-responses-across-channels"]], "Plot standard fNIRS response image": [[211, "plot-standard-fnirs-response-image"]], "View topographic representation of activity": [[211, "view-topographic-representation-of-activity"]], "Compare tapping of left and right hands": [[211, "compare-tapping-of-left-and-right-hands"]], "Preprocessing optically pumped magnetometer (OPM) MEG data": [[212, "preprocessing-optically-pumped-magnetometer-opm-meg-data"]], "Examining raw data": [[212, "examining-raw-data"]], "Denoising: Regressing via reference sensors": [[212, "denoising-regressing-via-reference-sensors"]], "Denoising: Regressing via homogeneous field correction": [[212, "denoising-regressing-via-homogeneous-field-correction"]], "Comparing denoising methods": [[212, "comparing-denoising-methods"]], "Filtering nuisance signals": [[212, "filtering-nuisance-signals"]], "Generating an evoked response": [[212, "generating-an-evoked-response"]], "Working with eye tracker data in MNE-Python": [[213, "working-with-eye-tracker-data-in-mne-python"]], "Data loading": [[213, "data-loading"]], "Get stimulus events from DIN channel": [[213, "get-stimulus-events-from-din-channel"]], "Plot raw data": [[213, "plot-raw-data"]], "Plot average pupil response": [[213, "plot-average-pupil-response"]], "The Raw data structure: continuous data": [[216, "the-raw-data-structure-continuous-data"]], "Loading continuous data": [[216, "loading-continuous-data"]], "Datasets in MNE-Python": [[216, null]], "Querying the Raw object": [[216, "querying-the-raw-object"]], "Attributes vs. Methods": [[216, null]], "The Raw.info attribute": [[216, "the-raw-info-attribute"]], "Time, sample number, and sample index": [[216, "time-sample-number-and-sample-index"]], "Sample numbering in VectorView data": [[216, null]], "Modifying Raw objects": [[216, "modifying-raw-objects"]], "len(raw)": [[216, null]], "Long channel names": [[216, null]], "Extracting data from Raw objects": [[216, "extracting-data-from-raw-objects"]], "Extracting data by index": [[216, "extracting-data-by-index"]], "Extracting channels by name": [[216, "extracting-channels-by-name"]], "Extracting channels by type": [[216, "extracting-channels-by-type"]], "The Raw.get_data() method": [[216, "the-raw-get-data-method"]], "Summary of ways to extract data from Raw objects": [[216, "summary-of-ways-to-extract-data-from-raw-objects"]], "Exporting and saving Raw objects": [[216, "exporting-and-saving-raw-objects"]], "Working with events": [[217, "working-with-events"]], "Reading and writing events from/to a file": [[217, "reading-and-writing-events-from-to-a-file"]], "Subselecting and combining events": [[217, "subselecting-and-combining-events"]], "Including/excluding events": [[217, null]], "Mapping Event IDs to trial descriptors": [[217, "mapping-event-ids-to-trial-descriptors"]], "Plotting events": [[217, "plotting-events"]], "Plotting events and raw data together": [[217, "plotting-events-and-raw-data-together"]], "Making equally-spaced Events arrays": [[217, "making-equally-spaced-events-arrays"]], "Annotating continuous data": [[218, "annotating-continuous-data"]], "Creating annotations programmatically": [[218, "creating-annotations-programmatically"]], "Annotating Raw objects interactively": [[218, "annotating-raw-objects-interactively"]], "How annotations affect preprocessing and analysis": [[218, "how-annotations-affect-preprocessing-and-analysis"]], "Operations on Annotations objects": [[218, "operations-on-annotations-objects"]], "Reading and writing Annotations to/from a file": [[218, "reading-and-writing-annotations-to-from-a-file"]], "Built-in plotting methods for Raw objects": [[219, "built-in-plotting-methods-for-raw-objects"]], "Interactive data browsing with Raw.plot()": [[219, "interactive-data-browsing-with-raw-plot"]], "Plotting spectral density of continuous data": [[219, "plotting-spectral-density-of-continuous-data"]], "Plotting sensor locations from Raw objects": [[219, "plotting-sensor-locations-from-raw-objects"]], "Plotting projectors from Raw objects": [[219, "plotting-projectors-from-raw-objects"]], "Creating MNE-Python data structures from scratch": [[222, "creating-mne-python-data-structures-from-scratch"]], "Creating Info objects": [[222, "creating-info-objects"]], "Info objects": [[222, null]], "Info consistency": [[222, null]], "Creating Raw objects": [[222, "creating-raw-objects"]], "Units": [[222, null]], "Creating Epochs objects": [[222, "creating-epochs-objects"]], "Creating Evoked Objects": [[222, "creating-evoked-objects"]], "Corrupt known signal with point spread": [[223, "corrupt-known-signal-with-point-spread"]], "Load the MEG data": [[223, "load-the-meg-data"]], "Estimate the background noise covariance from the baseline period": [[223, "estimate-the-background-noise-covariance-from-the-baseline-period"]], "Generate sinusoids in two spatially distant labels": [[223, "generate-sinusoids-in-two-spatially-distant-labels"]], "Find the center vertices in source space of each label": [[223, "find-the-center-vertices-in-source-space-of-each-label"]], "Create source-space data with known signals": [[223, "create-source-space-data-with-known-signals"]], "Plot original signals": [[223, "plot-original-signals"]], "Simulate sensor-space signals": [[223, "simulate-sensor-space-signals"]], "Plot the point-spread of corrupted signal": [[223, "plot-the-point-spread-of-corrupted-signal"]], "Exercises": [[223, "exercises"], [232, "exercises"]], "DICS for power mapping": [[224, "dics-for-power-mapping"]], "Setup": [[224, "setup"]], "Data simulation": [[224, "data-simulation"]], "Power mapping": [[224, "power-mapping"]], "Statistical inference": [[227, "statistical-inference"]], "Hypothesis testing": [[227, "hypothesis-testing"]], "Null hypothesis": [[227, "null-hypothesis"]], "Parametric tests": [[227, "parametric-tests"]], "\u201cHat\u201d variance adjustment": [[227, "hat-variance-adjustment"], [227, "id3"]], "Non-parametric tests": [[227, "non-parametric-tests"]], "Multiple comparisons": [[227, "multiple-comparisons"]], "Bonferroni correction": [[227, "bonferroni-correction"]], "False discovery rate (FDR) correction": [[227, "false-discovery-rate-fdr-correction"]], "Non-parametric resampling test with a maximum statistic": [[227, "non-parametric-resampling-test-with-a-maximum-statistic"]], "Clustering": [[227, "clustering"]], "Effect size": [[227, null]], "Defining the adjacency matrix": [[227, "defining-the-adjacency-matrix"]], "Standard clustering": [[227, "standard-clustering"]], "Threshold-free cluster enhancement (TFCE)": [[227, "threshold-free-cluster-enhancement-tfce"]], "Visualize and compare methods": [[227, "visualize-and-compare-methods"]], "Statistical functions in MNE": [[227, "statistical-functions-in-mne"]], "Parametric methods provided by MNE": [[227, "parametric-methods-provided-by-mne"]], "Non-parametric methods": [[227, "non-parametric-methods"]], "Visualising statistical significance thresholds on EEG data": [[228, "visualising-statistical-significance-thresholds-on-eeg-data"]], "Non-parametric 1 sample cluster statistic on single trial power": [[229, "non-parametric-1-sample-cluster-statistic-on-single-trial-power"]], "Set parameters": [[229, "set-parameters"], [231, "set-parameters"], [232, "set-parameters"], [235, "set-parameters"], [236, "set-parameters"], [237, "set-parameters"]], "Define adjacency for statistics": [[229, "define-adjacency-for-statistics"]], "Compute statistic": [[229, "compute-statistic"], [230, "compute-statistic"], [235, "compute-statistic"], [236, "compute-statistic"]], "View time-frequency plots": [[229, "view-time-frequency-plots"], [230, "view-time-frequency-plots"]], "Non-parametric between conditions cluster statistic on single trial power": [[230, "non-parametric-between-conditions-cluster-statistic-on-single-trial-power"]], "Mass-univariate twoway repeated measures ANOVA on single trial power": [[231, "mass-univariate-twoway-repeated-measures-anova-on-single-trial-power"]], "Create TFR representations for all conditions": [[231, "create-tfr-representations-for-all-conditions"]], "Setup repeated measures ANOVA": [[231, "setup-repeated-measures-anova"]], "Sample data layout": [[231, "id1"]], "Account for multiple comparisons using FDR versus permutation clustering test": [[231, "account-for-multiple-comparisons-using-fdr-versus-permutation-clustering-test"]], "Spatiotemporal permutation F-test on full sensor data": [[232, "spatiotemporal-permutation-f-test-on-full-sensor-data"]], "Read epochs for the channel of interest": [[232, "read-epochs-for-the-channel-of-interest"]], "Find the FieldTrip neighbor definition to setup sensor adjacency": [[232, "find-the-fieldtrip-neighbor-definition-to-setup-sensor-adjacency"]], "Compute permutation statistic": [[232, "compute-permutation-statistic"]], "Visualize clusters": [[232, "visualize-clusters"]], "Permutation statistic for time-frequencies": [[232, "permutation-statistic-for-time-frequencies"]], "Permutation t-test on source data with spatio-temporal clustering": [[235, "permutation-t-test-on-source-data-with-spatio-temporal-clustering"]], "Read epochs for all channels, removing a bad one": [[235, "read-epochs-for-all-channels-removing-a-bad-one"], [237, "read-epochs-for-all-channels-removing-a-bad-one"]], "Transform to source space": [[235, "transform-to-source-space"], [237, "transform-to-source-space"]], "Transform to common cortical space": [[235, "transform-to-common-cortical-space"], [237, "transform-to-common-cortical-space"]], "Find adjacency matrix": [[235, "find-adjacency-matrix"]], "Selecting \u201csignificant\u201d clusters": [[235, "selecting-significant-clusters"]], "Visualize the clusters": [[235, "visualize-the-clusters"], [236, "visualize-the-clusters"], [237, "visualize-the-clusters"]], "2 samples permutation test on source data with spatio-temporal clustering": [[236, "samples-permutation-test-on-source-data-with-spatio-temporal-clustering"]], "Repeated measures ANOVA on source data with spatio-temporal clustering": [[237, "repeated-measures-anova-on-source-data-with-spatio-temporal-clustering"]], "Prepare function for arbitrary contrast": [[237, "prepare-function-for-arbitrary-contrast"]], "Compute clustering statistic": [[237, "compute-clustering-statistic"]], "The Spectrum and EpochsSpectrum classes: frequency-domain data": [[240, "the-spectrum-and-epochsspectrum-classes-frequency-domain-data"]], "Visualizing Spectrum objects": [[240, "visualizing-spectrum-objects"]], "Migrating legacy code": [[240, "migrating-legacy-code"]], "Quick reference for common Spectral class actions": [[240, "id4"]], "Frequency and time-frequency sensor analysis": [[241, "frequency-and-time-frequency-sensor-analysis"]], "Frequency analysis": [[241, "frequency-analysis"], [242, "frequency-analysis"]], "Time-frequency analysis: power and inter-trial coherence": [[241, "time-frequency-analysis-power-and-inter-trial-coherence"]], "Inspect power": [[241, "inspect-power"]], "Joint Plot": [[241, "joint-plot"]], "Inspect ITC": [[241, "inspect-itc"]], "Frequency-tagging: Basic analysis of an SSVEP/vSSR dataset": [[242, "frequency-tagging-basic-analysis-of-an-ssvep-vssr-dataset"]], "Data preprocessing": [[242, "data-preprocessing"]], "Calculate power spectral density (PSD)": [[242, "calculate-power-spectral-density-psd"]], "Calculate signal to noise ratio (SNR)": [[242, "calculate-signal-to-noise-ratio-snr"]], "Plot PSD and SNR spectra": [[242, "plot-psd-and-snr-spectra"]], "Extract SNR values at the stimulation frequency": [[242, "extract-snr-values-at-the-stimulation-frequency"]], "Get index for the stimulation frequency (12 Hz)": [[242, "get-index-for-the-stimulation-frequency-12-hz"]], "Get indices for the different trial types": [[242, "get-indices-for-the-different-trial-types"]], "Get indices of EEG channels forming the ROI": [[242, "get-indices-of-eeg-channels-forming-the-roi"]], "Apply the subset, and check the result": [[242, "apply-the-subset-and-check-the-result"]], "Topography of the vSSR": [[242, "topography-of-the-vssr"]], "Statistical separation of 12 Hz and 15 Hz vSSR": [[242, "statistical-separation-of-12-hz-and-15-hz-vssr"]], "Debriefing": [[242, "debriefing"]], "Bonus exercises": [[242, "bonus-exercises"]], "Effect of trial duration on SNR": [[242, "effect-of-trial-duration-on-snr"]], "Time resolved SNR": [[242, "time-resolved-snr"]], "General bibliography": [[245, "general-bibliography"]], "Papers citing MNE-Python": [[246, "papers-citing-mne-python"]], "Connectivity Estimation": [[247, "connectivity-estimation"]], "Covariance computation": [[248, "covariance-computation"]], "Creating data objects from arrays": [[249, "creating-data-objects-from-arrays"]], "Datasets": [[250, "datasets"]], "Decoding": [[251, "decoding"]], "Events": [[252, "events"]], "Exporting": [[253, "exporting"]], "File I/O": [[254, "file-i-o"]], "Forward Modeling": [[255, "forward-modeling"]], "Funding and other support": [[256, "funding-and-other-support"]], "Institutional partners": [[256, "institutional-partners"]], "Current partners": [[256, "current-partners"], [875, "current-partners"]], "Former partners": [[256, "former-partners"], [875, "former-partners"]], "Command line tools using Python": [[257, "command-line-tools-using-python"]], "mne anonymize": [[257, "mne-anonymize"]], "Anonymize raw fif file.": [[257, "anonymize-raw-fif-file"]], "Options": [[257, "options"], [257, "id3"], [257, "id6"], [257, "id9"], [257, "id12"], [257, "id15"], [257, "id18"], [257, "id21"], [257, "id24"], [257, "id28"], [257, "id31"], [257, "id34"], [257, "id37"], [257, "id40"], [257, "id43"], [257, "id46"], [257, "id49"], [257, "id52"], [257, "id55"], [257, "id58"], [257, "id61"], [257, "id64"], [257, "id67"]], "mne browse_raw": [[257, "mne-browse-raw"]], "Browse raw data.": [[257, "browse-raw-data"]], "mne bti2fiff": [[257, "mne-bti2fiff"]], "Import BTi / 4D MagnesWH3600 data to fif file.": [[257, "import-bti-4d-magneswh3600-data-to-fif-file"]], "Notes": [[257, "notes"], [257, "id26"]], "mne clean_eog_ecg": [[257, "mne-clean-eog-ecg"]], "Clean a raw file from EOG and ECG artifacts with PCA (ie SSP).": [[257, "clean-a-raw-file-from-eog-and-ecg-artifacts-with-pca-ie-ssp"]], "mne compare_fiff": [[257, "mne-compare-fiff"]], "Compare FIFF files.": [[257, "compare-fiff-files"]], "mne compute_proj_ecg": [[257, "mne-compute-proj-ecg"]], "Compute SSP/PCA projections for ECG artifacts.": [[257, "compute-ssp-pca-projections-for-ecg-artifacts"]], "mne compute_proj_eog": [[257, "mne-compute-proj-eog"]], "Compute SSP/PCA projections for EOG artifacts.": [[257, "compute-ssp-pca-projections-for-eog-artifacts"]], "mne coreg": [[257, "mne-coreg"]], "Open the coregistration GUI.": [[257, "open-the-coregistration-gui"]], "mne flash_bem": [[257, "mne-flash-bem"]], "Create 3-layer BEM model from Flash MRI images.": [[257, "create-3-layer-bem-model-from-flash-mri-images"]], "mne freeview_bem_surfaces": [[257, "mne-freeview-bem-surfaces"]], "View the 3-Layers BEM model using Freeview.": [[257, "view-the-3-layers-bem-model-using-freeview"]], "mne kit2fiff": [[257, "mne-kit2fiff"]], "Import KIT / NYU data to fif file.": [[257, "import-kit-nyu-data-to-fif-file"]], "mne make_scalp_surfaces": [[257, "mne-make-scalp-surfaces"]], "Create high-resolution head surfaces for coordinate alignment.": [[257, "create-high-resolution-head-surfaces-for-coordinate-alignment"]], "mne maxfilter": [[257, "mne-maxfilter"]], "Apply MaxFilter.": [[257, "apply-maxfilter"]], "mne prepare_bem_model": [[257, "mne-prepare-bem-model"]], "Create a BEM solution using the linear collocation approach.": [[257, "create-a-bem-solution-using-the-linear-collocation-approach"]], "mne report": [[257, "mne-report"]], "Create mne report for a folder.": [[257, "create-mne-report-for-a-folder"]], "mne setup_forward_model": [[257, "mne-setup-forward-model"]], "Create a BEM model for a subject.": [[257, "create-a-bem-model-for-a-subject"]], "mne setup_source_space": [[257, "mne-setup-source-space"]], "Set up bilateral hemisphere surface-based source space with subsampling.": [[257, "set-up-bilateral-hemisphere-surface-based-source-space-with-subsampling"]], "mne show_fiff": [[257, "mne-show-fiff"]], "Show the contents of a FIFF file.": [[257, "show-the-contents-of-a-fiff-file"]], "mne show_info": [[257, "mne-show-info"]], "Show measurement info from .fif file.": [[257, "show-measurement-info-from-fif-file"]], "mne surf2bem": [[257, "mne-surf2bem"]], "Convert surface to BEM FIF file.": [[257, "convert-surface-to-bem-fif-file"]], "mne sys_info": [[257, "mne-sys-info"]], "Show system information.": [[257, "show-system-information"]], "mne watershed_bem": [[257, "mne-watershed-bem"]], "Create BEM surfaces using the watershed algorithm included with FreeSurfer.": [[257, "create-bem-surfaces-using-the-watershed-algorithm-included-with-freesurfer"]], "mne what": [[257, "mne-what"]], "Check type of FIF file.": [[257, "check-type-of-fif-file"]], "mne.AcqParserFIF": [[258, "mne-acqparserfif"]], "mne.Annotations": [[259, "mne-annotations"]], "Examples using mne.Annotations": [[259, "examples-using-mne-annotations"]], "mne.BaseEpochs": [[260, "mne-baseepochs"]], "mne.BiHemiLabel": [[261, "mne-bihemilabel"]], "mne.Covariance": [[262, "mne-covariance"]], "Examples using mne.Covariance": [[262, "examples-using-mne-covariance"]], "mne.Dipole": [[263, "mne-dipole"]], "Examples using mne.Dipole": [[263, "examples-using-mne-dipole"]], "mne.DipoleFixed": [[264, "mne-dipolefixed"]], "Examples using mne.DipoleFixed": [[264, "examples-using-mne-dipolefixed"]], "mne.Epochs": [[265, "mne-epochs"]], "Examples using mne.Epochs": [[265, "examples-using-mne-epochs"]], "mne.EpochsArray": [[266, "mne-epochsarray"]], "Examples using mne.EpochsArray": [[266, "examples-using-mne-epochsarray"]], "mne.Evoked": [[267, "mne-evoked"]], "Examples using mne.Evoked": [[267, "examples-using-mne-evoked"]], "mne.EvokedArray": [[268, "mne-evokedarray"]], "Examples using mne.EvokedArray": [[268, "examples-using-mne-evokedarray"]], "mne.Forward": [[269, "mne-forward"]], "Examples using mne.Forward": [[269, "examples-using-mne-forward"]], "mne.Info": [[270, "mne-info"]], "Examples using mne.Info": [[270, "examples-using-mne-info"]], "mne.Label": [[271, "mne-label"]], "Examples using mne.Label": [[271, "examples-using-mne-label"]], "mne.MixedSourceEstimate": [[272, "mne-mixedsourceestimate"]], "Examples using mne.MixedSourceEstimate": [[272, "examples-using-mne-mixedsourceestimate"]], "mne.MixedVectorSourceEstimate": [[273, "mne-mixedvectorsourceestimate"]], "Examples using mne.MixedVectorSourceEstimate": [[273, "examples-using-mne-mixedvectorsourceestimate"]], "mne.Projection": [[274, "mne-projection"]], "Examples using mne.Projection": [[274, "examples-using-mne-projection"]], "mne.Report": [[275, "mne-report"]], "Examples using mne.Report": [[275, "examples-using-mne-report"]], "mne.SourceEstimate": [[276, "mne-sourceestimate"]], "Examples using mne.SourceEstimate": [[276, "examples-using-mne-sourceestimate"]], "mne.SourceMorph": [[277, "mne-sourcemorph"]], "Examples using mne.SourceMorph": [[277, "examples-using-mne-sourcemorph"]], "mne.SourceSpaces": [[278, "mne-sourcespaces"]], "Examples using mne.SourceSpaces": [[278, "examples-using-mne-sourcespaces"]], "mne.VectorSourceEstimate": [[279, "mne-vectorsourceestimate"]], "Examples using mne.VectorSourceEstimate": [[279, "examples-using-mne-vectorsourceestimate"]], "mne.VolSourceEstimate": [[280, "mne-volsourceestimate"]], "Examples using mne.VolSourceEstimate": [[280, "examples-using-mne-volsourceestimate"]], "mne.VolVectorSourceEstimate": [[281, "mne-volvectorsourceestimate"]], "mne.add_reference_channels": [[282, "mne-add-reference-channels"]], "Examples using mne.add_reference_channels": [[282, "examples-using-mne-add-reference-channels"]], "mne.add_source_space_distances": [[283, "mne-add-source-space-distances"]], "mne.annotations_from_events": [[284, "mne-annotations-from-events"]], "Examples using mne.annotations_from_events": [[284, "examples-using-mne-annotations-from-events"]], "mne.apply_forward": [[285, "mne-apply-forward"]], "mne.apply_forward_raw": [[286, "mne-apply-forward-raw"]], "mne.average_forward_solutions": [[287, "mne-average-forward-solutions"]], "mne.baseline.rescale": [[288, "mne-baseline-rescale"]], "Examples using mne.baseline.rescale": [[288, "examples-using-mne-baseline-rescale"]], "mne.beamformer.Beamformer": [[289, "mne-beamformer-beamformer"]], "Examples using mne.beamformer.Beamformer": [[289, "examples-using-mne-beamformer-beamformer"]], "mne.beamformer.apply_dics": [[290, "mne-beamformer-apply-dics"]], "mne.beamformer.apply_dics_csd": [[291, "mne-beamformer-apply-dics-csd"]], "Examples using mne.beamformer.apply_dics_csd": [[291, "examples-using-mne-beamformer-apply-dics-csd"]], "mne.beamformer.apply_dics_epochs": [[292, "mne-beamformer-apply-dics-epochs"]], "mne.beamformer.apply_dics_tfr_epochs": [[293, "mne-beamformer-apply-dics-tfr-epochs"]], "Examples using mne.beamformer.apply_dics_tfr_epochs": [[293, "examples-using-mne-beamformer-apply-dics-tfr-epochs"]], "mne.beamformer.apply_lcmv": [[294, "mne-beamformer-apply-lcmv"]], "Examples using mne.beamformer.apply_lcmv": [[294, "examples-using-mne-beamformer-apply-lcmv"]], "mne.beamformer.apply_lcmv_cov": [[295, "mne-beamformer-apply-lcmv-cov"]], "Examples using mne.beamformer.apply_lcmv_cov": [[295, "examples-using-mne-beamformer-apply-lcmv-cov"]], "mne.beamformer.apply_lcmv_epochs": [[296, "mne-beamformer-apply-lcmv-epochs"]], "mne.beamformer.apply_lcmv_raw": [[297, "mne-beamformer-apply-lcmv-raw"]], "mne.beamformer.make_dics": [[298, "mne-beamformer-make-dics"]], "Examples using mne.beamformer.make_dics": [[298, "examples-using-mne-beamformer-make-dics"]], "mne.beamformer.make_lcmv": [[299, "mne-beamformer-make-lcmv"]], "Examples using mne.beamformer.make_lcmv": [[299, "examples-using-mne-beamformer-make-lcmv"]], "mne.beamformer.make_lcmv_resolution_matrix": [[300, "mne-beamformer-make-lcmv-resolution-matrix"]], "Examples using mne.beamformer.make_lcmv_resolution_matrix": [[300, "examples-using-mne-beamformer-make-lcmv-resolution-matrix"]], "mne.beamformer.rap_music": [[301, "mne-beamformer-rap-music"]], "Examples using mne.beamformer.rap_music": [[301, "examples-using-mne-beamformer-rap-music"]], "mne.beamformer.read_beamformer": [[302, "mne-beamformer-read-beamformer"]], "mne.beamformer.trap_music": [[303, "mne-beamformer-trap-music"]], "Examples using mne.beamformer.trap_music": [[303, "examples-using-mne-beamformer-trap-music"]], "mne.bem.ConductorModel": [[304, "mne-bem-conductormodel"]], "Examples using mne.bem.ConductorModel": [[304, "examples-using-mne-bem-conductormodel"]], "mne.bem.convert_flash_mris": [[305, "mne-bem-convert-flash-mris"]], "mne.bem.distance_to_bem": [[306, "mne-bem-distance-to-bem"]], "mne.bem.fit_sphere_to_headshape": [[307, "mne-bem-fit-sphere-to-headshape"]], "mne.bem.get_fitting_dig": [[308, "mne-bem-get-fitting-dig"]], "mne.bem.make_flash_bem": [[309, "mne-bem-make-flash-bem"]], "mne.bem.make_scalp_surfaces": [[310, "mne-bem-make-scalp-surfaces"]], "mne.bem.make_watershed_bem": [[311, "mne-bem-make-watershed-bem"]], "mne.channel_indices_by_type": [[312, "mne-channel-indices-by-type"]], "Examples using mne.channel_indices_by_type": [[312, "examples-using-mne-channel-indices-by-type"]], "mne.channel_type": [[313, "mne-channel-type"]], "Examples using mne.channel_type": [[313, "examples-using-mne-channel-type"]], "mne.channels.DigMontage": [[314, "mne-channels-digmontage"]], "Examples using mne.channels.DigMontage": [[314, "examples-using-mne-channels-digmontage"]], "mne.channels.Layout": [[315, "mne-channels-layout"]], "Examples using mne.channels.Layout": [[315, "examples-using-mne-channels-layout"]], "mne.channels.combine_channels": [[316, "mne-channels-combine-channels"]], "Examples using mne.channels.combine_channels": [[316, "examples-using-mne-channels-combine-channels"]], "mne.channels.compute_dev_head_t": [[317, "mne-channels-compute-dev-head-t"]], "mne.channels.compute_native_head_t": [[318, "mne-channels-compute-native-head-t"]], "Examples using mne.channels.compute_native_head_t": [[318, "examples-using-mne-channels-compute-native-head-t"]], "mne.channels.equalize_channels": [[319, "mne-channels-equalize-channels"]], "mne.channels.find_ch_adjacency": [[320, "mne-channels-find-ch-adjacency"]], "Examples using mne.channels.find_ch_adjacency": [[320, "examples-using-mne-channels-find-ch-adjacency"]], "mne.channels.find_layout": [[321, "mne-channels-find-layout"]], "mne.channels.fix_mag_coil_types": [[322, "mne-channels-fix-mag-coil-types"]], "mne.channels.generate_2d_layout": [[323, "mne-channels-generate-2d-layout"]], "mne.channels.get_builtin_ch_adjacencies": [[324, "mne-channels-get-builtin-ch-adjacencies"]], "Examples using mne.channels.get_builtin_ch_adjacencies": [[324, "examples-using-mne-channels-get-builtin-ch-adjacencies"]], "mne.channels.get_builtin_montages": [[325, "mne-channels-get-builtin-montages"]], "Examples using mne.channels.get_builtin_montages": [[325, "examples-using-mne-channels-get-builtin-montages"]], "mne.channels.make_1020_channel_selections": [[326, "mne-channels-make-1020-channel-selections"]], "Examples using mne.channels.make_1020_channel_selections": [[326, "examples-using-mne-channels-make-1020-channel-selections"]], "mne.channels.make_dig_montage": [[327, "mne-channels-make-dig-montage"]], "mne.channels.make_eeg_layout": [[328, "mne-channels-make-eeg-layout"]], "Examples using mne.channels.make_eeg_layout": [[328, "examples-using-mne-channels-make-eeg-layout"]], "mne.channels.make_grid_layout": [[329, "mne-channels-make-grid-layout"]], "mne.channels.make_standard_montage": [[330, "mne-channels-make-standard-montage"]], "Examples using mne.channels.make_standard_montage": [[330, "examples-using-mne-channels-make-standard-montage"]], "mne.channels.read_ch_adjacency": [[331, "mne-channels-read-ch-adjacency"]], "mne.channels.read_custom_montage": [[332, "mne-channels-read-custom-montage"]], "Examples using mne.channels.read_custom_montage": [[332, "examples-using-mne-channels-read-custom-montage"]], "mne.channels.read_dig_captrak": [[333, "mne-channels-read-dig-captrak"]], "mne.channels.read_dig_dat": [[334, "mne-channels-read-dig-dat"]], "mne.channels.read_dig_egi": [[335, "mne-channels-read-dig-egi"]], "mne.channels.read_dig_fif": [[336, "mne-channels-read-dig-fif"]], "Examples using mne.channels.read_dig_fif": [[336, "examples-using-mne-channels-read-dig-fif"]], "mne.channels.read_dig_hpts": [[337, "mne-channels-read-dig-hpts"]], "mne.channels.read_dig_localite": [[338, "mne-channels-read-dig-localite"]], "mne.channels.read_dig_polhemus_isotrak": [[339, "mne-channels-read-dig-polhemus-isotrak"]], "mne.channels.read_layout": [[340, "mne-channels-read-layout"]], "Examples using mne.channels.read_layout": [[340, "examples-using-mne-channels-read-layout"]], "mne.channels.read_polhemus_fastscan": [[341, "mne-channels-read-polhemus-fastscan"]], "mne.channels.rename_channels": [[342, "mne-channels-rename-channels"]], "mne.chpi.compute_chpi_amplitudes": [[343, "mne-chpi-compute-chpi-amplitudes"]], "Examples using mne.chpi.compute_chpi_amplitudes": [[343, "examples-using-mne-chpi-compute-chpi-amplitudes"]], "mne.chpi.compute_chpi_locs": [[344, "mne-chpi-compute-chpi-locs"]], "Examples using mne.chpi.compute_chpi_locs": [[344, "examples-using-mne-chpi-compute-chpi-locs"]], "mne.chpi.compute_chpi_snr": [[345, "mne-chpi-compute-chpi-snr"]], "Examples using mne.chpi.compute_chpi_snr": [[345, "examples-using-mne-chpi-compute-chpi-snr"]], "mne.chpi.compute_head_pos": [[346, "mne-chpi-compute-head-pos"]], "Examples using mne.chpi.compute_head_pos": [[346, "examples-using-mne-chpi-compute-head-pos"]], "mne.chpi.extract_chpi_locs_ctf": [[347, "mne-chpi-extract-chpi-locs-ctf"]], "Examples using mne.chpi.extract_chpi_locs_ctf": [[347, "examples-using-mne-chpi-extract-chpi-locs-ctf"]], "mne.chpi.extract_chpi_locs_kit": [[348, "mne-chpi-extract-chpi-locs-kit"]], "mne.chpi.filter_chpi": [[349, "mne-chpi-filter-chpi"]], "Examples using mne.chpi.filter_chpi": [[349, "examples-using-mne-chpi-filter-chpi"]], "mne.chpi.get_active_chpi": [[350, "mne-chpi-get-active-chpi"]], "Examples using mne.chpi.get_active_chpi": [[350, "examples-using-mne-chpi-get-active-chpi"]], "mne.chpi.get_chpi_info": [[351, "mne-chpi-get-chpi-info"]], "Examples using mne.chpi.get_chpi_info": [[351, "examples-using-mne-chpi-get-chpi-info"]], "mne.chpi.head_pos_to_trans_rot_t": [[352, "mne-chpi-head-pos-to-trans-rot-t"]], "mne.chpi.read_head_pos": [[353, "mne-chpi-read-head-pos"]], "Examples using mne.chpi.read_head_pos": [[353, "examples-using-mne-chpi-read-head-pos"]], "mne.chpi.write_head_pos": [[354, "mne-chpi-write-head-pos"]], "Examples using mne.chpi.write_head_pos": [[354, "examples-using-mne-chpi-write-head-pos"]], "mne.combine_evoked": [[355, "mne-combine-evoked"]], "Examples using mne.combine_evoked": [[355, "examples-using-mne-combine-evoked"]], "mne.compute_covariance": [[356, "mne-compute-covariance"]], "Examples using mne.compute_covariance": [[356, "examples-using-mne-compute-covariance"]], "mne.compute_proj_epochs": [[357, "mne-compute-proj-epochs"]], "Examples using mne.compute_proj_epochs": [[357, "examples-using-mne-compute-proj-epochs"]], "mne.compute_proj_evoked": [[358, "mne-compute-proj-evoked"]], "Examples using mne.compute_proj_evoked": [[358, "examples-using-mne-compute-proj-evoked"]], "mne.compute_proj_raw": [[359, "mne-compute-proj-raw"]], "Examples using mne.compute_proj_raw": [[359, "examples-using-mne-compute-proj-raw"]], "mne.compute_rank": [[360, "mne-compute-rank"]], "Examples using mne.compute_rank": [[360, "examples-using-mne-compute-rank"]], "mne.compute_raw_covariance": [[361, "mne-compute-raw-covariance"]], "Examples using mne.compute_raw_covariance": [[361, "examples-using-mne-compute-raw-covariance"]], "mne.compute_source_morph": [[362, "mne-compute-source-morph"]], "Examples using mne.compute_source_morph": [[362, "examples-using-mne-compute-source-morph"]], "mne.concatenate_epochs": [[363, "mne-concatenate-epochs"]], "Examples using mne.concatenate_epochs": [[363, "examples-using-mne-concatenate-epochs"]], "mne.concatenate_events": [[364, "mne-concatenate-events"]], "mne.concatenate_raws": [[365, "mne-concatenate-raws"]], "Examples using mne.concatenate_raws": [[365, "examples-using-mne-concatenate-raws"]], "mne.convert_forward_solution": [[366, "mne-convert-forward-solution"]], "Examples using mne.convert_forward_solution": [[366, "examples-using-mne-convert-forward-solution"]], "mne.coreg.Coregistration": [[367, "mne-coreg-coregistration"]], "Examples using mne.coreg.Coregistration": [[367, "examples-using-mne-coreg-coregistration"]], "mne.coreg.estimate_head_mri_t": [[368, "mne-coreg-estimate-head-mri-t"]], "Examples using mne.coreg.estimate_head_mri_t": [[368, "examples-using-mne-coreg-estimate-head-mri-t"]], "mne.coreg.get_mni_fiducials": [[369, "mne-coreg-get-mni-fiducials"]], "Examples using mne.coreg.get_mni_fiducials": [[369, "examples-using-mne-coreg-get-mni-fiducials"]], "mne.count_events": [[370, "mne-count-events"]], "mne.cov.compute_whitener": [[371, "mne-cov-compute-whitener"]], "mne.cov.prepare_noise_cov": [[372, "mne-cov-prepare-noise-cov"]], "mne.cov.regularize": [[373, "mne-cov-regularize"]], "Examples using mne.cov.regularize": [[373, "examples-using-mne-cov-regularize"]], "mne.create_default_subject": [[374, "mne-create-default-subject"]], "mne.create_info": [[375, "mne-create-info"]], "Examples using mne.create_info": [[375, "examples-using-mne-create-info"]], "mne.cuda.get_cuda_memory": [[376, "mne-cuda-get-cuda-memory"]], "mne.cuda.init_cuda": [[377, "mne-cuda-init-cuda"]], "mne.cuda.set_cuda_device": [[378, "mne-cuda-set-cuda-device"]], "mne.datasets.brainstorm.bst_auditory.data_path": [[379, "mne-datasets-brainstorm-bst-auditory-data-path"]], "mne.datasets.brainstorm.bst_raw.data_path": [[380, "mne-datasets-brainstorm-bst-raw-data-path"]], "mne.datasets.brainstorm.bst_resting.data_path": [[381, "mne-datasets-brainstorm-bst-resting-data-path"]], "mne.datasets.eegbci.load_data": [[382, "mne-datasets-eegbci-load-data"]], "mne.datasets.eegbci.standardize": [[383, "mne-datasets-eegbci-standardize"]], "mne.datasets.epilepsy_ecog.data_path": [[384, "mne-datasets-epilepsy-ecog-data-path"]], "Examples using mne.datasets.epilepsy_ecog.data_path": [[384, "examples-using-mne-datasets-epilepsy-ecog-data-path"]], "mne.datasets.erp_core.data_path": [[385, "mne-datasets-erp-core-data-path"]], "mne.datasets.eyelink.data_path": [[386, "mne-datasets-eyelink-data-path"]], "mne.datasets.fetch_aparc_sub_parcellation": [[387, "mne-datasets-fetch-aparc-sub-parcellation"]], "mne.datasets.fetch_dataset": [[388, "mne-datasets-fetch-dataset"]], "mne.datasets.fetch_fsaverage": [[389, "mne-datasets-fetch-fsaverage"]], "mne.datasets.fetch_hcp_mmp_parcellation": [[390, "mne-datasets-fetch-hcp-mmp-parcellation"]], "mne.datasets.fetch_infant_template": [[391, "mne-datasets-fetch-infant-template"]], "Examples using mne.datasets.fetch_infant_template": [[391, "examples-using-mne-datasets-fetch-infant-template"]], "mne.datasets.fetch_phantom": [[392, "mne-datasets-fetch-phantom"]], "mne.datasets.fnirs_motor.data_path": [[393, "mne-datasets-fnirs-motor-data-path"]], "mne.datasets.has_dataset": [[394, "mne-datasets-has-dataset"]], "mne.datasets.hf_sef.data_path": [[395, "mne-datasets-hf-sef-data-path"]], "mne.datasets.kiloword.data_path": [[396, "mne-datasets-kiloword-data-path"]], "mne.datasets.limo.load_data": [[397, "mne-datasets-limo-load-data"]], "mne.datasets.misc.data_path": [[398, "mne-datasets-misc-data-path"]], "mne.datasets.mtrf.data_path": [[399, "mne-datasets-mtrf-data-path"]], "mne.datasets.multimodal.data_path": [[400, "mne-datasets-multimodal-data-path"]], "mne.datasets.opm.data_path": [[401, "mne-datasets-opm-data-path"]], "mne.datasets.phantom_4dbti.data_path": [[402, "mne-datasets-phantom-4dbti-data-path"]], "mne.datasets.refmeg_noise.data_path": [[403, "mne-datasets-refmeg-noise-data-path"]], "mne.datasets.sample.data_path": [[404, "mne-datasets-sample-data-path"]], "Examples using mne.datasets.sample.data_path": [[404, "examples-using-mne-datasets-sample-data-path"]], "mne.datasets.sleep_physionet.age.fetch_data": [[405, "mne-datasets-sleep-physionet-age-fetch-data"]], "Examples using mne.datasets.sleep_physionet.age.fetch_data": [[405, "examples-using-mne-datasets-sleep-physionet-age-fetch-data"]], "mne.datasets.sleep_physionet.temazepam.fetch_data": [[406, "mne-datasets-sleep-physionet-temazepam-fetch-data"]], "mne.datasets.somato.data_path": [[407, "mne-datasets-somato-data-path"]], "mne.datasets.spm_face.data_path": [[408, "mne-datasets-spm-face-data-path"]], "mne.datasets.ssvep.data_path": [[409, "mne-datasets-ssvep-data-path"]], "mne.datasets.ucl_opm_auditory.data_path": [[410, "mne-datasets-ucl-opm-auditory-data-path"]], "mne.datasets.visual_92_categories.data_path": [[411, "mne-datasets-visual-92-categories-data-path"]], "mne.decimate_surface": [[412, "mne-decimate-surface"]], "mne.decoding.CSP": [[413, "mne-decoding-csp"]], "Examples using mne.decoding.CSP": [[413, "examples-using-mne-decoding-csp"]], "mne.decoding.EMS": [[414, "mne-decoding-ems"]], "Examples using mne.decoding.EMS": [[414, "examples-using-mne-decoding-ems"]], "mne.decoding.FilterEstimator": [[415, "mne-decoding-filterestimator"]], "mne.decoding.GeneralizingEstimator": [[416, "mne-decoding-generalizingestimator"]], "Examples using mne.decoding.GeneralizingEstimator": [[416, "examples-using-mne-decoding-generalizingestimator"]], "mne.decoding.LinearModel": [[417, "mne-decoding-linearmodel"]], "Examples using mne.decoding.LinearModel": [[417, "examples-using-mne-decoding-linearmodel"]], "mne.decoding.PSDEstimator": [[418, "mne-decoding-psdestimator"]], "mne.decoding.ReceptiveField": [[419, "mne-decoding-receptivefield"]], "Examples using mne.decoding.ReceptiveField": [[419, "examples-using-mne-decoding-receptivefield"]], "mne.decoding.SPoC": [[420, "mne-decoding-spoc"]], "Examples using mne.decoding.SPoC": [[420, "examples-using-mne-decoding-spoc"]], "mne.decoding.SSD": [[421, "mne-decoding-ssd"]], "Examples using mne.decoding.SSD": [[421, "examples-using-mne-decoding-ssd"]], "mne.decoding.Scaler": [[422, "mne-decoding-scaler"]], "Examples using mne.decoding.Scaler": [[422, "examples-using-mne-decoding-scaler"]], "mne.decoding.SlidingEstimator": [[423, "mne-decoding-slidingestimator"]], "Examples using mne.decoding.SlidingEstimator": [[423, "examples-using-mne-decoding-slidingestimator"]], "mne.decoding.TemporalFilter": [[424, "mne-decoding-temporalfilter"]], "mne.decoding.TimeDelayingRidge": [[425, "mne-decoding-timedelayingridge"]], "Examples using mne.decoding.TimeDelayingRidge": [[425, "examples-using-mne-decoding-timedelayingridge"]], "mne.decoding.TimeFrequency": [[426, "mne-decoding-timefrequency"]], "mne.decoding.UnsupervisedSpatialFilter": [[427, "mne-decoding-unsupervisedspatialfilter"]], "Examples using mne.decoding.UnsupervisedSpatialFilter": [[427, "examples-using-mne-decoding-unsupervisedspatialfilter"]], "mne.decoding.Vectorizer": [[428, "mne-decoding-vectorizer"]], "Examples using mne.decoding.Vectorizer": [[428, "examples-using-mne-decoding-vectorizer"]], "mne.decoding.compute_ems": [[429, "mne-decoding-compute-ems"]], "Examples using mne.decoding.compute_ems": [[429, "examples-using-mne-decoding-compute-ems"]], "mne.decoding.cross_val_multiscore": [[430, "mne-decoding-cross-val-multiscore"]], "Examples using mne.decoding.cross_val_multiscore": [[430, "examples-using-mne-decoding-cross-val-multiscore"]], "mne.decoding.get_coef": [[431, "mne-decoding-get-coef"]], "Examples using mne.decoding.get_coef": [[431, "examples-using-mne-decoding-get-coef"]], "mne.dig_mri_distances": [[432, "mne-dig-mri-distances"]], "Examples using mne.dig_mri_distances": [[432, "examples-using-mne-dig-mri-distances"]], "mne.dipole.get_phantom_dipoles": [[433, "mne-dipole-get-phantom-dipoles"]], "Examples using mne.dipole.get_phantom_dipoles": [[433, "examples-using-mne-dipole-get-phantom-dipoles"]], "mne.epochs.average_movements": [[434, "mne-epochs-average-movements"]], "Examples using mne.epochs.average_movements": [[434, "examples-using-mne-epochs-average-movements"]], "mne.epochs.combine_event_ids": [[435, "mne-epochs-combine-event-ids"]], "mne.epochs.equalize_epoch_counts": [[436, "mne-epochs-equalize-epoch-counts"]], "Examples using mne.epochs.equalize_epoch_counts": [[436, "examples-using-mne-epochs-equalize-epoch-counts"]], "mne.epochs.make_metadata": [[437, "mne-epochs-make-metadata"]], "Examples using mne.epochs.make_metadata": [[437, "examples-using-mne-epochs-make-metadata"]], "mne.equalize_channels": [[438, "mne-equalize-channels"]], "mne.event.define_target_events": [[439, "mne-event-define-target-events"]], "Examples using mne.event.define_target_events": [[439, "examples-using-mne-event-define-target-events"]], "mne.event.match_event_names": [[440, "mne-event-match-event-names"]], "mne.event.shift_time_events": [[441, "mne-event-shift-time-events"]], "mne.events_from_annotations": [[442, "mne-events-from-annotations"]], "Examples using mne.events_from_annotations": [[442, "examples-using-mne-events-from-annotations"]], "mne.export.export_epochs": [[443, "mne-export-export-epochs"]], "mne.export.export_evokeds": [[444, "mne-export-export-evokeds"]], "mne.export.export_evokeds_mff": [[445, "mne-export-export-evokeds-mff"]], "mne.export.export_raw": [[446, "mne-export-export-raw"]], "mne.extract_label_time_course": [[447, "mne-extract-label-time-course"]], "Examples using mne.extract_label_time_course": [[447, "examples-using-mne-extract-label-time-course"]], "mne.filter.construct_iir_filter": [[448, "mne-filter-construct-iir-filter"]], "Examples using mne.filter.construct_iir_filter": [[448, "examples-using-mne-filter-construct-iir-filter"]], "mne.filter.create_filter": [[449, "mne-filter-create-filter"]], "Examples using mne.filter.create_filter": [[449, "examples-using-mne-filter-create-filter"]], "mne.filter.estimate_ringing_samples": [[450, "mne-filter-estimate-ringing-samples"]], "mne.filter.filter_data": [[451, "mne-filter-filter-data"]], "mne.filter.notch_filter": [[452, "mne-filter-notch-filter"]], "mne.filter.resample": [[453, "mne-filter-resample"]], "Examples using mne.filter.resample": [[453, "examples-using-mne-filter-resample"]], "mne.find_events": [[454, "mne-find-events"]], "Examples using mne.find_events": [[454, "examples-using-mne-find-events"]], "mne.find_stim_steps": [[455, "mne-find-stim-steps"]], "mne.fit_dipole": [[456, "mne-fit-dipole"]], "Examples using mne.fit_dipole": [[456, "examples-using-mne-fit-dipole"]], "mne.forward.compute_depth_prior": [[457, "mne-forward-compute-depth-prior"]], "mne.forward.compute_orient_prior": [[458, "mne-forward-compute-orient-prior"]], "mne.forward.restrict_forward_to_label": [[459, "mne-forward-restrict-forward-to-label"]], "mne.forward.restrict_forward_to_stc": [[460, "mne-forward-restrict-forward-to-stc"]], "mne.get_config": [[461, "mne-get-config"]], "Examples using mne.get_config": [[461, "examples-using-mne-get-config"]], "mne.get_config_path": [[462, "mne-get-config-path"]], "Examples using mne.get_config_path": [[462, "examples-using-mne-get-config-path"]], "mne.get_head_surf": [[463, "mne-get-head-surf"]], "mne.get_meg_helmet_surf": [[464, "mne-get-meg-helmet-surf"]], "mne.get_montage_volume_labels": [[465, "mne-get-montage-volume-labels"]], "Examples using mne.get_montage_volume_labels": [[465, "examples-using-mne-get-montage-volume-labels"]], "mne.get_volume_labels_from_aseg": [[466, "mne-get-volume-labels-from-aseg"]], "Examples using mne.get_volume_labels_from_aseg": [[466, "examples-using-mne-get-volume-labels-from-aseg"]], "mne.get_volume_labels_from_src": [[467, "mne-get-volume-labels-from-src"]], "mne.grade_to_tris": [[468, "mne-grade-to-tris"]], "mne.grade_to_vertices": [[469, "mne-grade-to-vertices"]], "mne.grand_average": [[470, "mne-grand-average"]], "Examples using mne.grand_average": [[470, "examples-using-mne-grand-average"]], "mne.grow_labels": [[471, "mne-grow-labels"]], "mne.gui.coregistration": [[472, "mne-gui-coregistration"]], "Examples using mne.gui.coregistration": [[472, "examples-using-mne-gui-coregistration"]], "mne.gui.locate_ieeg": [[473, "mne-gui-locate-ieeg"]], "mne.head_to_mni": [[474, "mne-head-to-mni"]], "mne.head_to_mri": [[475, "mne-head-to-mri"]], "mne.inverse_sparse.gamma_map": [[476, "mne-inverse-sparse-gamma-map"]], "Examples using mne.inverse_sparse.gamma_map": [[476, "examples-using-mne-inverse-sparse-gamma-map"]], "mne.inverse_sparse.make_stc_from_dipoles": [[477, "mne-inverse-sparse-make-stc-from-dipoles"]], "Examples using mne.inverse_sparse.make_stc_from_dipoles": [[477, "examples-using-mne-inverse-sparse-make-stc-from-dipoles"]], "mne.inverse_sparse.mixed_norm": [[478, "mne-inverse-sparse-mixed-norm"]], "Examples using mne.inverse_sparse.mixed_norm": [[478, "examples-using-mne-inverse-sparse-mixed-norm"]], "mne.inverse_sparse.tf_mixed_norm": [[479, "mne-inverse-sparse-tf-mixed-norm"]], "Examples using mne.inverse_sparse.tf_mixed_norm": [[479, "examples-using-mne-inverse-sparse-tf-mixed-norm"]], "mne.io.BaseRaw": [[480, "mne-io-baseraw"]], "mne.io.Raw": [[481, "mne-io-raw"]], "Examples using mne.io.Raw": [[481, "examples-using-mne-io-raw"]], "mne.io.RawArray": [[482, "mne-io-rawarray"]], "Examples using mne.io.RawArray": [[482, "examples-using-mne-io-rawarray"]], "mne.io.anonymize_info": [[483, "mne-io-anonymize-info"]], "mne.io.kit.read_mrk": [[484, "mne-io-kit-read-mrk"]], "mne.io.read_fiducials": [[485, "mne-io-read-fiducials"]], "mne.io.read_info": [[486, "mne-io-read-info"]], "Examples using mne.io.read_info": [[486, "examples-using-mne-io-read-info"]], "mne.io.read_raw": [[487, "mne-io-read-raw"]], "Examples using mne.io.read_raw": [[487, "examples-using-mne-io-read-raw"]], "mne.io.read_raw_artemis123": [[488, "mne-io-read-raw-artemis123"]], "Examples using mne.io.read_raw_artemis123": [[488, "examples-using-mne-io-read-raw-artemis123"]], "mne.io.read_raw_bdf": [[489, "mne-io-read-raw-bdf"]], "Examples using mne.io.read_raw_bdf": [[489, "examples-using-mne-io-read-raw-bdf"]], "mne.io.read_raw_boxy": [[490, "mne-io-read-raw-boxy"]], "mne.io.read_raw_brainvision": [[491, "mne-io-read-raw-brainvision"]], "Examples using mne.io.read_raw_brainvision": [[491, "examples-using-mne-io-read-raw-brainvision"]], "mne.io.read_raw_bti": [[492, "mne-io-read-raw-bti"]], "Examples using mne.io.read_raw_bti": [[492, "examples-using-mne-io-read-raw-bti"]], "mne.io.read_raw_cnt": [[493, "mne-io-read-raw-cnt"]], "Examples using mne.io.read_raw_cnt": [[493, "examples-using-mne-io-read-raw-cnt"]], "mne.io.read_raw_ctf": [[494, "mne-io-read-raw-ctf"]], "Examples using mne.io.read_raw_ctf": [[494, "examples-using-mne-io-read-raw-ctf"]], "mne.io.read_raw_curry": [[495, "mne-io-read-raw-curry"]], "mne.io.read_raw_edf": [[496, "mne-io-read-raw-edf"]], "Examples using mne.io.read_raw_edf": [[496, "examples-using-mne-io-read-raw-edf"]], "mne.io.read_raw_eeglab": [[497, "mne-io-read-raw-eeglab"]], "Examples using mne.io.read_raw_eeglab": [[497, "examples-using-mne-io-read-raw-eeglab"]], "mne.io.read_raw_egi": [[498, "mne-io-read-raw-egi"]], "Examples using mne.io.read_raw_egi": [[498, "examples-using-mne-io-read-raw-egi"]], "mne.io.read_raw_eximia": [[499, "mne-io-read-raw-eximia"]], "Examples using mne.io.read_raw_eximia": [[499, "examples-using-mne-io-read-raw-eximia"]], "mne.io.read_raw_eyelink": [[500, "mne-io-read-raw-eyelink"]], "Examples using mne.io.read_raw_eyelink": [[500, "examples-using-mne-io-read-raw-eyelink"]], "mne.io.read_raw_fieldtrip": [[501, "mne-io-read-raw-fieldtrip"]], "mne.io.read_raw_fif": [[502, "mne-io-read-raw-fif"]], "Examples using mne.io.read_raw_fif": [[502, "examples-using-mne-io-read-raw-fif"]], "mne.io.read_raw_fil": [[503, "mne-io-read-raw-fil"]], "Examples using mne.io.read_raw_fil": [[503, "examples-using-mne-io-read-raw-fil"]], "mne.io.read_raw_gdf": [[504, "mne-io-read-raw-gdf"]], "Examples using mne.io.read_raw_gdf": [[504, "examples-using-mne-io-read-raw-gdf"]], "mne.io.read_raw_hitachi": [[505, "mne-io-read-raw-hitachi"]], "mne.io.read_raw_kit": [[506, "mne-io-read-raw-kit"]], "Examples using mne.io.read_raw_kit": [[506, "examples-using-mne-io-read-raw-kit"]], "mne.io.read_raw_nedf": [[507, "mne-io-read-raw-nedf"]], "mne.io.read_raw_nicolet": [[508, "mne-io-read-raw-nicolet"]], "Examples using mne.io.read_raw_nicolet": [[508, "examples-using-mne-io-read-raw-nicolet"]], "mne.io.read_raw_nihon": [[509, "mne-io-read-raw-nihon"]], "Examples using mne.io.read_raw_nihon": [[509, "examples-using-mne-io-read-raw-nihon"]], "mne.io.read_raw_nirx": [[510, "mne-io-read-raw-nirx"]], "Examples using mne.io.read_raw_nirx": [[510, "examples-using-mne-io-read-raw-nirx"]], "mne.io.read_raw_persyst": [[511, "mne-io-read-raw-persyst"]], "Examples using mne.io.read_raw_persyst": [[511, "examples-using-mne-io-read-raw-persyst"]], "mne.io.read_raw_snirf": [[512, "mne-io-read-raw-snirf"]], "Examples using mne.io.read_raw_snirf": [[512, "examples-using-mne-io-read-raw-snirf"]], "mne.io.show_fiff": [[513, "mne-io-show-fiff"]], "mne.io.write_fiducials": [[514, "mne-io-write-fiducials"]], "mne.label.select_sources": [[515, "mne-label-select-sources"]], "Examples using mne.label.select_sources": [[515, "examples-using-mne-label-select-sources"]], "mne.label_sign_flip": [[516, "mne-label-sign-flip"]], "Examples using mne.label_sign_flip": [[516, "examples-using-mne-label-sign-flip"]], "mne.labels_to_stc": [[517, "mne-labels-to-stc"]], "Examples using mne.labels_to_stc": [[517, "examples-using-mne-labels-to-stc"]], "mne.make_ad_hoc_cov": [[518, "mne-make-ad-hoc-cov"]], "Examples using mne.make_ad_hoc_cov": [[518, "examples-using-mne-make-ad-hoc-cov"]], "mne.make_bem_model": [[519, "mne-make-bem-model"]], "Examples using mne.make_bem_model": [[519, "examples-using-mne-make-bem-model"]], "mne.make_bem_solution": [[520, "mne-make-bem-solution"]], "Examples using mne.make_bem_solution": [[520, "examples-using-mne-make-bem-solution"]], "mne.make_field_map": [[521, "mne-make-field-map"]], "Examples using mne.make_field_map": [[521, "examples-using-mne-make-field-map"]], "mne.make_fixed_length_epochs": [[522, "mne-make-fixed-length-epochs"]], "Examples using mne.make_fixed_length_epochs": [[522, "examples-using-mne-make-fixed-length-epochs"]], "mne.make_fixed_length_events": [[523, "mne-make-fixed-length-events"]], "Examples using mne.make_fixed_length_events": [[523, "examples-using-mne-make-fixed-length-events"]], "mne.make_forward_dipole": [[524, "mne-make-forward-dipole"]], "Examples using mne.make_forward_dipole": [[524, "examples-using-mne-make-forward-dipole"]], "mne.make_forward_solution": [[525, "mne-make-forward-solution"]], "Examples using mne.make_forward_solution": [[525, "examples-using-mne-make-forward-solution"]], "mne.make_sphere_model": [[526, "mne-make-sphere-model"]], "Examples using mne.make_sphere_model": [[526, "examples-using-mne-make-sphere-model"]], "mne.match_channel_orders": [[527, "mne-match-channel-orders"]], "mne.merge_events": [[528, "mne-merge-events"]], "Examples using mne.merge_events": [[528, "examples-using-mne-merge-events"]], "mne.minimum_norm.InverseOperator": [[529, "mne-minimum-norm-inverseoperator"]], "Examples using mne.minimum_norm.InverseOperator": [[529, "examples-using-mne-minimum-norm-inverseoperator"]], "mne.minimum_norm.apply_inverse": [[530, "mne-minimum-norm-apply-inverse"]], "Examples using mne.minimum_norm.apply_inverse": [[530, "examples-using-mne-minimum-norm-apply-inverse"]], "mne.minimum_norm.apply_inverse_cov": [[531, "mne-minimum-norm-apply-inverse-cov"]], "Examples using mne.minimum_norm.apply_inverse_cov": [[531, "examples-using-mne-minimum-norm-apply-inverse-cov"]], "mne.minimum_norm.apply_inverse_epochs": [[532, "mne-minimum-norm-apply-inverse-epochs"]], "Examples using mne.minimum_norm.apply_inverse_epochs": [[532, "examples-using-mne-minimum-norm-apply-inverse-epochs"]], "mne.minimum_norm.apply_inverse_raw": [[533, "mne-minimum-norm-apply-inverse-raw"]], "Examples using mne.minimum_norm.apply_inverse_raw": [[533, "examples-using-mne-minimum-norm-apply-inverse-raw"]], "mne.minimum_norm.apply_inverse_tfr_epochs": [[534, "mne-minimum-norm-apply-inverse-tfr-epochs"]], "mne.minimum_norm.compute_rank_inverse": [[535, "mne-minimum-norm-compute-rank-inverse"]], "mne.minimum_norm.compute_source_psd": [[536, "mne-minimum-norm-compute-source-psd"]], "Examples using mne.minimum_norm.compute_source_psd": [[536, "examples-using-mne-minimum-norm-compute-source-psd"]], "mne.minimum_norm.compute_source_psd_epochs": [[537, "mne-minimum-norm-compute-source-psd-epochs"]], "Examples using mne.minimum_norm.compute_source_psd_epochs": [[537, "examples-using-mne-minimum-norm-compute-source-psd-epochs"]], "mne.minimum_norm.estimate_snr": [[538, "mne-minimum-norm-estimate-snr"]], "mne.minimum_norm.get_cross_talk": [[539, "mne-minimum-norm-get-cross-talk"]], "Examples using mne.minimum_norm.get_cross_talk": [[539, "examples-using-mne-minimum-norm-get-cross-talk"]], "mne.minimum_norm.get_point_spread": [[540, "mne-minimum-norm-get-point-spread"]], "Examples using mne.minimum_norm.get_point_spread": [[540, "examples-using-mne-minimum-norm-get-point-spread"]], "mne.minimum_norm.make_inverse_operator": [[541, "mne-minimum-norm-make-inverse-operator"]], "Examples using mne.minimum_norm.make_inverse_operator": [[541, "examples-using-mne-minimum-norm-make-inverse-operator"]], "mne.minimum_norm.make_inverse_resolution_matrix": [[542, "mne-minimum-norm-make-inverse-resolution-matrix"]], "Examples using mne.minimum_norm.make_inverse_resolution_matrix": [[542, "examples-using-mne-minimum-norm-make-inverse-resolution-matrix"]], "mne.minimum_norm.prepare_inverse_operator": [[543, "mne-minimum-norm-prepare-inverse-operator"]], "mne.minimum_norm.read_inverse_operator": [[544, "mne-minimum-norm-read-inverse-operator"]], "Examples using mne.minimum_norm.read_inverse_operator": [[544, "examples-using-mne-minimum-norm-read-inverse-operator"]], "mne.minimum_norm.resolution_metrics": [[545, "mne-minimum-norm-resolution-metrics"]], "Examples using mne.minimum_norm.resolution_metrics": [[545, "examples-using-mne-minimum-norm-resolution-metrics"]], "mne.minimum_norm.source_band_induced_power": [[546, "mne-minimum-norm-source-band-induced-power"]], "Examples using mne.minimum_norm.source_band_induced_power": [[546, "examples-using-mne-minimum-norm-source-band-induced-power"]], "mne.minimum_norm.source_induced_power": [[547, "mne-minimum-norm-source-induced-power"]], "Examples using mne.minimum_norm.source_induced_power": [[547, "examples-using-mne-minimum-norm-source-induced-power"]], "mne.minimum_norm.write_inverse_operator": [[548, "mne-minimum-norm-write-inverse-operator"]], "mne.morph_labels": [[549, "mne-morph-labels"]], "mne.morph_source_spaces": [[550, "mne-morph-source-spaces"]], "Examples using mne.morph_source_spaces": [[550, "examples-using-mne-morph-source-spaces"]], "mne.open_docs": [[551, "mne-open-docs"]], "mne.open_report": [[552, "mne-open-report"]], "Examples using mne.open_report": [[552, "examples-using-mne-open-report"]], "mne.parse_config": [[553, "mne-parse-config"]], "mne.pick_channels": [[554, "mne-pick-channels"]], "Examples using mne.pick_channels": [[554, "examples-using-mne-pick-channels"]], "mne.pick_channels_cov": [[555, "mne-pick-channels-cov"]], "mne.pick_channels_forward": [[556, "mne-pick-channels-forward"]], "mne.pick_channels_regexp": [[557, "mne-pick-channels-regexp"]], "Examples using mne.pick_channels_regexp": [[557, "examples-using-mne-pick-channels-regexp"]], "mne.pick_events": [[558, "mne-pick-events"]], "Examples using mne.pick_events": [[558, "examples-using-mne-pick-events"]], "mne.pick_info": [[559, "mne-pick-info"]], "Examples using mne.pick_info": [[559, "examples-using-mne-pick-info"]], "mne.pick_types": [[560, "mne-pick-types"]], "Examples using mne.pick_types": [[560, "examples-using-mne-pick-types"]], "mne.pick_types_forward": [[561, "mne-pick-types-forward"]], "Examples using mne.pick_types_forward": [[561, "examples-using-mne-pick-types-forward"]], "mne.preprocessing.EOGRegression": [[562, "mne-preprocessing-eogregression"]], "Examples using mne.preprocessing.EOGRegression": [[562, "examples-using-mne-preprocessing-eogregression"]], "mne.preprocessing.ICA": [[563, "mne-preprocessing-ica"]], "Examples using mne.preprocessing.ICA": [[563, "examples-using-mne-preprocessing-ica"]], "mne.preprocessing.Xdawn": [[564, "mne-preprocessing-xdawn"]], "Examples using mne.preprocessing.Xdawn": [[564, "examples-using-mne-preprocessing-xdawn"]], "mne.preprocessing.annotate_amplitude": [[565, "mne-preprocessing-annotate-amplitude"]], "mne.preprocessing.annotate_break": [[566, "mne-preprocessing-annotate-break"]], "Examples using mne.preprocessing.annotate_break": [[566, "examples-using-mne-preprocessing-annotate-break"]], "mne.preprocessing.annotate_movement": [[567, "mne-preprocessing-annotate-movement"]], "Examples using mne.preprocessing.annotate_movement": [[567, "examples-using-mne-preprocessing-annotate-movement"]], "mne.preprocessing.annotate_muscle_zscore": [[568, "mne-preprocessing-annotate-muscle-zscore"]], "Examples using mne.preprocessing.annotate_muscle_zscore": [[568, "examples-using-mne-preprocessing-annotate-muscle-zscore"]], "mne.preprocessing.annotate_nan": [[569, "mne-preprocessing-annotate-nan"]], "mne.preprocessing.compute_average_dev_head_t": [[570, "mne-preprocessing-compute-average-dev-head-t"]], "Examples using mne.preprocessing.compute_average_dev_head_t": [[570, "examples-using-mne-preprocessing-compute-average-dev-head-t"]], "mne.preprocessing.compute_bridged_electrodes": [[571, "mne-preprocessing-compute-bridged-electrodes"]], "Examples using mne.preprocessing.compute_bridged_electrodes": [[571, "examples-using-mne-preprocessing-compute-bridged-electrodes"]], "mne.preprocessing.compute_current_source_density": [[572, "mne-preprocessing-compute-current-source-density"]], "Examples using mne.preprocessing.compute_current_source_density": [[572, "examples-using-mne-preprocessing-compute-current-source-density"]], "mne.preprocessing.compute_fine_calibration": [[573, "mne-preprocessing-compute-fine-calibration"]], "mne.preprocessing.compute_maxwell_basis": [[574, "mne-preprocessing-compute-maxwell-basis"]], "mne.preprocessing.compute_proj_ecg": [[575, "mne-preprocessing-compute-proj-ecg"]], "Examples using mne.preprocessing.compute_proj_ecg": [[575, "examples-using-mne-preprocessing-compute-proj-ecg"]], "mne.preprocessing.compute_proj_eog": [[576, "mne-preprocessing-compute-proj-eog"]], "Examples using mne.preprocessing.compute_proj_eog": [[576, "examples-using-mne-preprocessing-compute-proj-eog"]], "mne.preprocessing.compute_proj_hfc": [[577, "mne-preprocessing-compute-proj-hfc"]], "Examples using mne.preprocessing.compute_proj_hfc": [[577, "examples-using-mne-preprocessing-compute-proj-hfc"]], "mne.preprocessing.corrmap": [[578, "mne-preprocessing-corrmap"]], "Examples using mne.preprocessing.corrmap": [[578, "examples-using-mne-preprocessing-corrmap"]], "mne.preprocessing.cortical_signal_suppression": [[579, "mne-preprocessing-cortical-signal-suppression"]], "Examples using mne.preprocessing.cortical_signal_suppression": [[579, "examples-using-mne-preprocessing-cortical-signal-suppression"]], "mne.preprocessing.create_ecg_epochs": [[580, "mne-preprocessing-create-ecg-epochs"]], "Examples using mne.preprocessing.create_ecg_epochs": [[580, "examples-using-mne-preprocessing-create-ecg-epochs"]], "mne.preprocessing.create_eog_epochs": [[581, "mne-preprocessing-create-eog-epochs"]], "Examples using mne.preprocessing.create_eog_epochs": [[581, "examples-using-mne-preprocessing-create-eog-epochs"]], "mne.preprocessing.equalize_bads": [[582, "mne-preprocessing-equalize-bads"]], "mne.preprocessing.eyetracking.set_channel_types_eyetrack": [[583, "mne-preprocessing-eyetracking-set-channel-types-eyetrack"]], "Examples using mne.preprocessing.eyetracking.set_channel_types_eyetrack": [[583, "examples-using-mne-preprocessing-eyetracking-set-channel-types-eyetrack"]], "mne.preprocessing.find_bad_channels_maxwell": [[584, "mne-preprocessing-find-bad-channels-maxwell"]], "Examples using mne.preprocessing.find_bad_channels_maxwell": [[584, "examples-using-mne-preprocessing-find-bad-channels-maxwell"]], "mne.preprocessing.find_ecg_events": [[585, "mne-preprocessing-find-ecg-events"]], "Examples using mne.preprocessing.find_ecg_events": [[585, "examples-using-mne-preprocessing-find-ecg-events"]], "mne.preprocessing.find_eog_events": [[586, "mne-preprocessing-find-eog-events"]], "Examples using mne.preprocessing.find_eog_events": [[586, "examples-using-mne-preprocessing-find-eog-events"]], "mne.preprocessing.fix_stim_artifact": [[587, "mne-preprocessing-fix-stim-artifact"]], "Examples using mne.preprocessing.fix_stim_artifact": [[587, "examples-using-mne-preprocessing-fix-stim-artifact"]], "mne.preprocessing.ica_find_ecg_events": [[588, "mne-preprocessing-ica-find-ecg-events"]], "mne.preprocessing.ica_find_eog_events": [[589, "mne-preprocessing-ica-find-eog-events"]], "mne.preprocessing.ieeg.make_montage_volume": [[590, "mne-preprocessing-ieeg-make-montage-volume"]], "mne.preprocessing.ieeg.project_sensors_onto_brain": [[591, "mne-preprocessing-ieeg-project-sensors-onto-brain"]], "mne.preprocessing.ieeg.warp_montage": [[592, "mne-preprocessing-ieeg-warp-montage"]], "mne.preprocessing.infomax": [[593, "mne-preprocessing-infomax"]], "mne.preprocessing.interpolate_bridged_electrodes": [[594, "mne-preprocessing-interpolate-bridged-electrodes"]], "Examples using mne.preprocessing.interpolate_bridged_electrodes": [[594, "examples-using-mne-preprocessing-interpolate-bridged-electrodes"]], "mne.preprocessing.maxwell_filter": [[595, "mne-preprocessing-maxwell-filter"]], "Examples using mne.preprocessing.maxwell_filter": [[595, "examples-using-mne-preprocessing-maxwell-filter"]], "mne.preprocessing.maxwell_filter_prepare_emptyroom": [[596, "mne-preprocessing-maxwell-filter-prepare-emptyroom"]], "mne.preprocessing.nirs.beer_lambert_law": [[597, "mne-preprocessing-nirs-beer-lambert-law"]], "Examples using mne.preprocessing.nirs.beer_lambert_law": [[597, "examples-using-mne-preprocessing-nirs-beer-lambert-law"]], "mne.preprocessing.nirs.optical_density": [[598, "mne-preprocessing-nirs-optical-density"]], "Examples using mne.preprocessing.nirs.optical_density": [[598, "examples-using-mne-preprocessing-nirs-optical-density"]], "mne.preprocessing.nirs.scalp_coupling_index": [[599, "mne-preprocessing-nirs-scalp-coupling-index"]], "Examples using mne.preprocessing.nirs.scalp_coupling_index": [[599, "examples-using-mne-preprocessing-nirs-scalp-coupling-index"]], "mne.preprocessing.nirs.short_channels": [[600, "mne-preprocessing-nirs-short-channels"]], "mne.preprocessing.nirs.source_detector_distances": [[601, "mne-preprocessing-nirs-source-detector-distances"]], "Examples using mne.preprocessing.nirs.source_detector_distances": [[601, "examples-using-mne-preprocessing-nirs-source-detector-distances"]], "mne.preprocessing.nirs.temporal_derivative_distribution_repair": [[602, "mne-preprocessing-nirs-temporal-derivative-distribution-repair"]], "Examples using mne.preprocessing.nirs.temporal_derivative_distribution_repair": [[602, "examples-using-mne-preprocessing-nirs-temporal-derivative-distribution-repair"]], "mne.preprocessing.oversampled_temporal_projection": [[603, "mne-preprocessing-oversampled-temporal-projection"]], "Examples using mne.preprocessing.oversampled_temporal_projection": [[603, "examples-using-mne-preprocessing-oversampled-temporal-projection"]], "mne.preprocessing.peak_finder": [[604, "mne-preprocessing-peak-finder"]], "mne.preprocessing.read_eog_regression": [[605, "mne-preprocessing-read-eog-regression"]], "mne.preprocessing.read_fine_calibration": [[606, "mne-preprocessing-read-fine-calibration"]], "mne.preprocessing.read_ica": [[607, "mne-preprocessing-read-ica"]], "Examples using mne.preprocessing.read_ica": [[607, "examples-using-mne-preprocessing-read-ica"]], "mne.preprocessing.read_ica_eeglab": [[608, "mne-preprocessing-read-ica-eeglab"]], "mne.preprocessing.realign_raw": [[609, "mne-preprocessing-realign-raw"]], "mne.preprocessing.regress_artifact": [[610, "mne-preprocessing-regress-artifact"]], "mne.preprocessing.write_fine_calibration": [[611, "mne-preprocessing-write-fine-calibration"]], "mne.random_parcellation": [[612, "mne-random-parcellation"]], "mne.read_annotations": [[613, "mne-read-annotations"]], "Examples using mne.read_annotations": [[613, "examples-using-mne-read-annotations"]], "mne.read_bem_solution": [[614, "mne-read-bem-solution"]], "Examples using mne.read_bem_solution": [[614, "examples-using-mne-read-bem-solution"]], "mne.read_bem_surfaces": [[615, "mne-read-bem-surfaces"]], "Examples using mne.read_bem_surfaces": [[615, "examples-using-mne-read-bem-surfaces"]], "mne.read_cov": [[616, "mne-read-cov"]], "Examples using mne.read_cov": [[616, "examples-using-mne-read-cov"]], "mne.read_dipole": [[617, "mne-read-dipole"]], "Examples using mne.read_dipole": [[617, "examples-using-mne-read-dipole"]], "mne.read_epochs": [[618, "mne-read-epochs"]], "Examples using mne.read_epochs": [[618, "examples-using-mne-read-epochs"]], "mne.read_epochs_eeglab": [[619, "mne-read-epochs-eeglab"]], "Examples using mne.read_epochs_eeglab": [[619, "examples-using-mne-read-epochs-eeglab"]], "mne.read_epochs_fieldtrip": [[620, "mne-read-epochs-fieldtrip"]], "mne.read_epochs_kit": [[621, "mne-read-epochs-kit"]], "mne.read_events": [[622, "mne-read-events"]], "Examples using mne.read_events": [[622, "examples-using-mne-read-events"]], "mne.read_evoked_besa": [[623, "mne-read-evoked-besa"]], "mne.read_evoked_fieldtrip": [[624, "mne-read-evoked-fieldtrip"]], "mne.read_evokeds": [[625, "mne-read-evokeds"]], "Examples using mne.read_evokeds": [[625, "examples-using-mne-read-evokeds"]], "mne.read_evokeds_mff": [[626, "mne-read-evokeds-mff"]], "mne.read_forward_solution": [[627, "mne-read-forward-solution"]], "Examples using mne.read_forward_solution": [[627, "examples-using-mne-read-forward-solution"]], "mne.read_freesurfer_lut": [[628, "mne-read-freesurfer-lut"]], "mne.read_label": [[629, "mne-read-label"]], "Examples using mne.read_label": [[629, "examples-using-mne-read-label"]], "mne.read_labels_from_annot": [[630, "mne-read-labels-from-annot"]], "Examples using mne.read_labels_from_annot": [[630, "examples-using-mne-read-labels-from-annot"]], "mne.read_lta": [[631, "mne-read-lta"]], "mne.read_morph_map": [[632, "mne-read-morph-map"]], "mne.read_proj": [[633, "mne-read-proj"]], "Examples using mne.read_proj": [[633, "examples-using-mne-read-proj"]], "mne.read_reject_parameters": [[634, "mne-read-reject-parameters"]], "mne.read_source_estimate": [[635, "mne-read-source-estimate"]], "Examples using mne.read_source_estimate": [[635, "examples-using-mne-read-source-estimate"]], "mne.read_source_morph": [[636, "mne-read-source-morph"]], "mne.read_source_spaces": [[637, "mne-read-source-spaces"]], "Examples using mne.read_source_spaces": [[637, "examples-using-mne-read-source-spaces"]], "mne.read_surface": [[638, "mne-read-surface"]], "Examples using mne.read_surface": [[638, "examples-using-mne-read-surface"]], "mne.read_talxfm": [[639, "mne-read-talxfm"]], "Examples using mne.read_talxfm": [[639, "examples-using-mne-read-talxfm"]], "mne.read_trans": [[640, "mne-read-trans"]], "Examples using mne.read_trans": [[640, "examples-using-mne-read-trans"]], "mne.read_tri": [[641, "mne-read-tri"]], "mne.read_vectorview_selection": [[642, "mne-read-vectorview-selection"]], "Examples using mne.read_vectorview_selection": [[642, "examples-using-mne-read-vectorview-selection"]], "mne.rename_channels": [[643, "mne-rename-channels"]], "mne.scale_bem": [[644, "mne-scale-bem"]], "mne.scale_labels": [[645, "mne-scale-labels"]], "mne.scale_mri": [[646, "mne-scale-mri"]], "Examples using mne.scale_mri": [[646, "examples-using-mne-scale-mri"]], "mne.scale_source_space": [[647, "mne-scale-source-space"]], "mne.sensitivity_map": [[648, "mne-sensitivity-map"]], "Examples using mne.sensitivity_map": [[648, "examples-using-mne-sensitivity-map"]], "mne.set_bipolar_reference": [[649, "mne-set-bipolar-reference"]], "Examples using mne.set_bipolar_reference": [[649, "examples-using-mne-set-bipolar-reference"]], "mne.set_cache_dir": [[650, "mne-set-cache-dir"]], "mne.set_config": [[651, "mne-set-config"]], "Examples using mne.set_config": [[651, "examples-using-mne-set-config"]], "mne.set_eeg_reference": [[652, "mne-set-eeg-reference"]], "Examples using mne.set_eeg_reference": [[652, "examples-using-mne-set-eeg-reference"]], "mne.set_log_file": [[653, "mne-set-log-file"]], "mne.set_log_level": [[654, "mne-set-log-level"]], "mne.set_memmap_min_size": [[655, "mne-set-memmap-min-size"]], "mne.setup_source_space": [[656, "mne-setup-source-space"]], "Examples using mne.setup_source_space": [[656, "examples-using-mne-setup-source-space"]], "mne.setup_volume_source_space": [[657, "mne-setup-volume-source-space"]], "Examples using mne.setup_volume_source_space": [[657, "examples-using-mne-setup-volume-source-space"]], "mne.simulation.SourceSimulator": [[658, "mne-simulation-sourcesimulator"]], "Examples using mne.simulation.SourceSimulator": [[658, "examples-using-mne-simulation-sourcesimulator"]], "mne.simulation.add_chpi": [[659, "mne-simulation-add-chpi"]], "mne.simulation.add_ecg": [[660, "mne-simulation-add-ecg"]], "Examples using mne.simulation.add_ecg": [[660, "examples-using-mne-simulation-add-ecg"]], "mne.simulation.add_eog": [[661, "mne-simulation-add-eog"]], "Examples using mne.simulation.add_eog": [[661, "examples-using-mne-simulation-add-eog"]], "mne.simulation.add_noise": [[662, "mne-simulation-add-noise"]], "Examples using mne.simulation.add_noise": [[662, "examples-using-mne-simulation-add-noise"]], "mne.simulation.metrics.cosine_score": [[663, "mne-simulation-metrics-cosine-score"]], "Examples using mne.simulation.metrics.cosine_score": [[663, "examples-using-mne-simulation-metrics-cosine-score"]], "mne.simulation.metrics.f1_score": [[664, "mne-simulation-metrics-f1-score"]], "Examples using mne.simulation.metrics.f1_score": [[664, "examples-using-mne-simulation-metrics-f1-score"]], "mne.simulation.metrics.peak_position_error": [[665, "mne-simulation-metrics-peak-position-error"]], "Examples using mne.simulation.metrics.peak_position_error": [[665, "examples-using-mne-simulation-metrics-peak-position-error"]], "mne.simulation.metrics.precision_score": [[666, "mne-simulation-metrics-precision-score"]], "Examples using mne.simulation.metrics.precision_score": [[666, "examples-using-mne-simulation-metrics-precision-score"]], "mne.simulation.metrics.recall_score": [[667, "mne-simulation-metrics-recall-score"]], "Examples using mne.simulation.metrics.recall_score": [[667, "examples-using-mne-simulation-metrics-recall-score"]], "mne.simulation.metrics.region_localization_error": [[668, "mne-simulation-metrics-region-localization-error"]], "Examples using mne.simulation.metrics.region_localization_error": [[668, "examples-using-mne-simulation-metrics-region-localization-error"]], "mne.simulation.metrics.roc_auc_score": [[669, "mne-simulation-metrics-roc-auc-score"]], "mne.simulation.metrics.spatial_deviation_error": [[670, "mne-simulation-metrics-spatial-deviation-error"]], "Examples using mne.simulation.metrics.spatial_deviation_error": [[670, "examples-using-mne-simulation-metrics-spatial-deviation-error"]], "mne.simulation.select_source_in_label": [[671, "mne-simulation-select-source-in-label"]], "mne.simulation.simulate_evoked": [[672, "mne-simulation-simulate-evoked"]], "Examples using mne.simulation.simulate_evoked": [[672, "examples-using-mne-simulation-simulate-evoked"]], "mne.simulation.simulate_raw": [[673, "mne-simulation-simulate-raw"]], "Data alignment and stim channel encoding": [[673, "id3"]], "Examples using mne.simulation.simulate_raw": [[673, "examples-using-mne-simulation-simulate-raw"]], "mne.simulation.simulate_sparse_stc": [[674, "mne-simulation-simulate-sparse-stc"]], "Examples using mne.simulation.simulate_sparse_stc": [[674, "examples-using-mne-simulation-simulate-sparse-stc"]], "mne.simulation.simulate_stc": [[675, "mne-simulation-simulate-stc"]], "Examples using mne.simulation.simulate_stc": [[675, "examples-using-mne-simulation-simulate-stc"]], "mne.source_space.compute_distance_to_sensors": [[676, "mne-source-space-compute-distance-to-sensors"]], "Examples using mne.source_space.compute_distance_to_sensors": [[676, "examples-using-mne-source-space-compute-distance-to-sensors"]], "mne.source_space.get_decimated_surfaces": [[677, "mne-source-space-get-decimated-surfaces"]], "mne.spatial_dist_adjacency": [[678, "mne-spatial-dist-adjacency"]], "mne.spatial_inter_hemi_adjacency": [[679, "mne-spatial-inter-hemi-adjacency"]], "mne.spatial_src_adjacency": [[680, "mne-spatial-src-adjacency"]], "Examples using mne.spatial_src_adjacency": [[680, "examples-using-mne-spatial-src-adjacency"]], "mne.spatial_tris_adjacency": [[681, "mne-spatial-tris-adjacency"]], "mne.spatio_temporal_dist_adjacency": [[682, "mne-spatio-temporal-dist-adjacency"]], "mne.spatio_temporal_src_adjacency": [[683, "mne-spatio-temporal-src-adjacency"]], "mne.spatio_temporal_tris_adjacency": [[684, "mne-spatio-temporal-tris-adjacency"]], "mne.split_label": [[685, "mne-split-label"]], "mne.stats.bonferroni_correction": [[686, "mne-stats-bonferroni-correction"]], "Examples using mne.stats.bonferroni_correction": [[686, "examples-using-mne-stats-bonferroni-correction"]], "mne.stats.bootstrap_confidence_interval": [[687, "mne-stats-bootstrap-confidence-interval"]], "Examples using mne.stats.bootstrap_confidence_interval": [[687, "examples-using-mne-stats-bootstrap-confidence-interval"]], "mne.stats.combine_adjacency": [[688, "mne-stats-combine-adjacency"]], "Examples using mne.stats.combine_adjacency": [[688, "examples-using-mne-stats-combine-adjacency"]], "mne.stats.f_mway_rm": [[689, "mne-stats-f-mway-rm"]], "Examples using mne.stats.f_mway_rm": [[689, "examples-using-mne-stats-f-mway-rm"]], "mne.stats.f_oneway": [[690, "mne-stats-f-oneway"]], "mne.stats.f_threshold_mway_rm": [[691, "mne-stats-f-threshold-mway-rm"]], "Examples using mne.stats.f_threshold_mway_rm": [[691, "examples-using-mne-stats-f-threshold-mway-rm"]], "mne.stats.fdr_correction": [[692, "mne-stats-fdr-correction"]], "Examples using mne.stats.fdr_correction": [[692, "examples-using-mne-stats-fdr-correction"]], "mne.stats.linear_regression": [[693, "mne-stats-linear-regression"]], "Examples using mne.stats.linear_regression": [[693, "examples-using-mne-stats-linear-regression"]], "mne.stats.linear_regression_raw": [[694, "mne-stats-linear-regression-raw"]], "Examples using mne.stats.linear_regression_raw": [[694, "examples-using-mne-stats-linear-regression-raw"]], "mne.stats.permutation_cluster_1samp_test": [[695, "mne-stats-permutation-cluster-1samp-test"]], "Examples using mne.stats.permutation_cluster_1samp_test": [[695, "examples-using-mne-stats-permutation-cluster-1samp-test"]], "mne.stats.permutation_cluster_test": [[696, "mne-stats-permutation-cluster-test"]], "Examples using mne.stats.permutation_cluster_test": [[696, "examples-using-mne-stats-permutation-cluster-test"]], "mne.stats.permutation_t_test": [[697, "mne-stats-permutation-t-test"]], "Examples using mne.stats.permutation_t_test": [[697, "examples-using-mne-stats-permutation-t-test"]], "mne.stats.spatio_temporal_cluster_1samp_test": [[698, "mne-stats-spatio-temporal-cluster-1samp-test"]], "Examples using mne.stats.spatio_temporal_cluster_1samp_test": [[698, "examples-using-mne-stats-spatio-temporal-cluster-1samp-test"]], "mne.stats.spatio_temporal_cluster_test": [[699, "mne-stats-spatio-temporal-cluster-test"]], "Examples using mne.stats.spatio_temporal_cluster_test": [[699, "examples-using-mne-stats-spatio-temporal-cluster-test"]], "mne.stats.summarize_clusters_stc": [[700, "mne-stats-summarize-clusters-stc"]], "Examples using mne.stats.summarize_clusters_stc": [[700, "examples-using-mne-stats-summarize-clusters-stc"]], "mne.stats.ttest_1samp_no_p": [[701, "mne-stats-ttest-1samp-no-p"]], "Examples using mne.stats.ttest_1samp_no_p": [[701, "examples-using-mne-stats-ttest-1samp-no-p"]], "mne.stats.ttest_ind_no_p": [[702, "mne-stats-ttest-ind-no-p"]], "mne.stc_near_sensors": [[703, "mne-stc-near-sensors"]], "Examples using mne.stc_near_sensors": [[703, "examples-using-mne-stc-near-sensors"]], "mne.stc_to_label": [[704, "mne-stc-to-label"]], "Examples using mne.stc_to_label": [[704, "examples-using-mne-stc-to-label"]], "mne.surface.complete_surface_info": [[705, "mne-surface-complete-surface-info"]], "mne.surface.read_curvature": [[706, "mne-surface-read-curvature"]], "Examples using mne.surface.read_curvature": [[706, "examples-using-mne-surface-read-curvature"]], "mne.sys_info": [[707, "mne-sys-info"]], "Examples using mne.sys_info": [[707, "examples-using-mne-sys-info"]], "mne.time_frequency.AverageTFR": [[708, "mne-time-frequency-averagetfr"]], "Examples using mne.time_frequency.AverageTFR": [[708, "examples-using-mne-time-frequency-averagetfr"]], "mne.time_frequency.CrossSpectralDensity": [[709, "mne-time-frequency-crossspectraldensity"]], "Examples using mne.time_frequency.CrossSpectralDensity": [[709, "examples-using-mne-time-frequency-crossspectraldensity"]], "mne.time_frequency.EpochsSpectrum": [[710, "mne-time-frequency-epochsspectrum"]], "Examples using mne.time_frequency.EpochsSpectrum": [[710, "examples-using-mne-time-frequency-epochsspectrum"]], "mne.time_frequency.EpochsTFR": [[711, "mne-time-frequency-epochstfr"]], "Examples using mne.time_frequency.EpochsTFR": [[711, "examples-using-mne-time-frequency-epochstfr"]], "mne.time_frequency.Spectrum": [[712, "mne-time-frequency-spectrum"]], "Examples using mne.time_frequency.Spectrum": [[712, "examples-using-mne-time-frequency-spectrum"]], "mne.time_frequency.csd_array_fourier": [[713, "mne-time-frequency-csd-array-fourier"]], "mne.time_frequency.csd_array_morlet": [[714, "mne-time-frequency-csd-array-morlet"]], "mne.time_frequency.csd_array_multitaper": [[715, "mne-time-frequency-csd-array-multitaper"]], "mne.time_frequency.csd_fourier": [[716, "mne-time-frequency-csd-fourier"]], "Examples using mne.time_frequency.csd_fourier": [[716, "examples-using-mne-time-frequency-csd-fourier"]], "mne.time_frequency.csd_morlet": [[717, "mne-time-frequency-csd-morlet"]], "Examples using mne.time_frequency.csd_morlet": [[717, "examples-using-mne-time-frequency-csd-morlet"]], "mne.time_frequency.csd_multitaper": [[718, "mne-time-frequency-csd-multitaper"]], "Examples using mne.time_frequency.csd_multitaper": [[718, "examples-using-mne-time-frequency-csd-multitaper"]], "mne.time_frequency.csd_tfr": [[719, "mne-time-frequency-csd-tfr"]], "Examples using mne.time_frequency.csd_tfr": [[719, "examples-using-mne-time-frequency-csd-tfr"]], "mne.time_frequency.dpss_windows": [[720, "mne-time-frequency-dpss-windows"]], "mne.time_frequency.fit_iir_model_raw": [[721, "mne-time-frequency-fit-iir-model-raw"]], "Examples using mne.time_frequency.fit_iir_model_raw": [[721, "examples-using-mne-time-frequency-fit-iir-model-raw"]], "mne.time_frequency.fwhm": [[722, "mne-time-frequency-fwhm"]], "mne.time_frequency.istft": [[723, "mne-time-frequency-istft"]], "mne.time_frequency.morlet": [[724, "mne-time-frequency-morlet"]], "Examples using mne.time_frequency.morlet": [[724, "examples-using-mne-time-frequency-morlet"]], "mne.time_frequency.pick_channels_csd": [[725, "mne-time-frequency-pick-channels-csd"]], "mne.time_frequency.psd_array_multitaper": [[726, "mne-time-frequency-psd-array-multitaper"]], "mne.time_frequency.psd_array_welch": [[727, "mne-time-frequency-psd-array-welch"]], "Examples using mne.time_frequency.psd_array_welch": [[727, "examples-using-mne-time-frequency-psd-array-welch"]], "mne.time_frequency.read_csd": [[728, "mne-time-frequency-read-csd"]], "mne.time_frequency.read_spectrum": [[729, "mne-time-frequency-read-spectrum"]], "mne.time_frequency.read_tfrs": [[730, "mne-time-frequency-read-tfrs"]], "mne.time_frequency.stft": [[731, "mne-time-frequency-stft"]], "mne.time_frequency.stftfreq": [[732, "mne-time-frequency-stftfreq"]], "mne.time_frequency.tfr.cwt": [[733, "mne-time-frequency-tfr-cwt"]], "mne.time_frequency.tfr.morlet": [[734, "mne-time-frequency-tfr-morlet"]], "mne.time_frequency.tfr_array_morlet": [[735, "mne-time-frequency-tfr-array-morlet"]], "Examples using mne.time_frequency.tfr_array_morlet": [[735, "examples-using-mne-time-frequency-tfr-array-morlet"]], "mne.time_frequency.tfr_array_multitaper": [[736, "mne-time-frequency-tfr-array-multitaper"]], "mne.time_frequency.tfr_array_stockwell": [[737, "mne-time-frequency-tfr-array-stockwell"]], "mne.time_frequency.tfr_morlet": [[738, "mne-time-frequency-tfr-morlet"]], "Examples using mne.time_frequency.tfr_morlet": [[738, "examples-using-mne-time-frequency-tfr-morlet"]], "mne.time_frequency.tfr_multitaper": [[739, "mne-time-frequency-tfr-multitaper"]], "Examples using mne.time_frequency.tfr_multitaper": [[739, "examples-using-mne-time-frequency-tfr-multitaper"]], "mne.time_frequency.tfr_stockwell": [[740, "mne-time-frequency-tfr-stockwell"]], "Examples using mne.time_frequency.tfr_stockwell": [[740, "examples-using-mne-time-frequency-tfr-stockwell"]], "mne.time_frequency.write_tfrs": [[741, "mne-time-frequency-write-tfrs"]], "mne.transform_surface_to": [[742, "mne-transform-surface-to"]], "mne.transforms.Transform": [[743, "mne-transforms-transform"]], "mne.transforms.apply_volume_registration": [[744, "mne-transforms-apply-volume-registration"]], "mne.transforms.apply_volume_registration_points": [[745, "mne-transforms-apply-volume-registration-points"]], "mne.transforms.compute_volume_registration": [[746, "mne-transforms-compute-volume-registration"]], "mne.transforms.quat_to_rot": [[747, "mne-transforms-quat-to-rot"]], "mne.transforms.read_ras_mni_t": [[748, "mne-transforms-read-ras-mni-t"]], "Examples using mne.transforms.read_ras_mni_t": [[748, "examples-using-mne-transforms-read-ras-mni-t"]], "mne.transforms.rot_to_quat": [[749, "mne-transforms-rot-to-quat"]], "mne.use_coil_def": [[750, "mne-use-coil-def"]], "Examples using mne.use_coil_def": [[750, "examples-using-mne-use-coil-def"]], "mne.use_log_level": [[751, "mne-use-log-level"]], "Examples using mne.use_log_level": [[751, "examples-using-mne-use-log-level"]], "mne.utils.deprecated": [[752, "mne-utils-deprecated"]], "mne.utils.warn": [[753, "mne-utils-warn"]], "mne.verbose": [[754, "mne-verbose"]], "mne.vertex_to_mni": [[755, "mne-vertex-to-mni"]], "Examples using mne.vertex_to_mni": [[755, "examples-using-mne-vertex-to-mni"]], "mne.viz.Brain": [[756, "mne-viz-brain"]], "Examples using mne.viz.Brain": [[756, "examples-using-mne-viz-brain"]], "mne.viz.ClickableImage": [[757, "mne-viz-clickableimage"]], "Examples using mne.viz.ClickableImage": [[757, "examples-using-mne-viz-clickableimage"]], "mne.viz.Figure3D": [[758, "mne-viz-figure3d"]], "mne.viz.add_background_image": [[759, "mne-viz-add-background-image"]], "mne.viz.centers_to_edges": [[760, "mne-viz-centers-to-edges"]], "Examples using mne.viz.centers_to_edges": [[760, "examples-using-mne-viz-centers-to-edges"]], "mne.viz.circular_layout": [[761, "mne-viz-circular-layout"]], "Examples using mne.viz.circular_layout": [[761, "examples-using-mne-viz-circular-layout"]], "mne.viz.close_3d_figure": [[762, "mne-viz-close-3d-figure"]], "mne.viz.close_all_3d_figures": [[763, "mne-viz-close-all-3d-figures"]], "mne.viz.compare_fiff": [[764, "mne-viz-compare-fiff"]], "mne.viz.create_3d_figure": [[765, "mne-viz-create-3d-figure"]], "Examples using mne.viz.create_3d_figure": [[765, "examples-using-mne-viz-create-3d-figure"]], "mne.viz.get_3d_backend": [[766, "mne-viz-get-3d-backend"]], "mne.viz.get_brain_class": [[767, "mne-viz-get-brain-class"]], "Examples using mne.viz.get_brain_class": [[767, "examples-using-mne-viz-get-brain-class"]], "mne.viz.get_browser_backend": [[768, "mne-viz-get-browser-backend"]], "mne.viz.iter_topography": [[769, "mne-viz-iter-topography"]], "Examples using mne.viz.iter_topography": [[769, "examples-using-mne-viz-iter-topography"]], "mne.viz.link_brains": [[770, "mne-viz-link-brains"]], "mne.viz.mne_analyze_colormap": [[771, "mne-viz-mne-analyze-colormap"]], "mne.viz.plot_alignment": [[772, "mne-viz-plot-alignment"]], "Examples using mne.viz.plot_alignment": [[772, "examples-using-mne-viz-plot-alignment"]], "mne.viz.plot_arrowmap": [[773, "mne-viz-plot-arrowmap"]], "Examples using mne.viz.plot_arrowmap": [[773, "examples-using-mne-viz-plot-arrowmap"]], "mne.viz.plot_bem": [[774, "mne-viz-plot-bem"]], "Examples using mne.viz.plot_bem": [[774, "examples-using-mne-viz-plot-bem"]], "mne.viz.plot_brain_colorbar": [[775, "mne-viz-plot-brain-colorbar"]], "Examples using mne.viz.plot_brain_colorbar": [[775, "examples-using-mne-viz-plot-brain-colorbar"]], "mne.viz.plot_bridged_electrodes": [[776, "mne-viz-plot-bridged-electrodes"]], "Examples using mne.viz.plot_bridged_electrodes": [[776, "examples-using-mne-viz-plot-bridged-electrodes"]], "mne.viz.plot_ch_adjacency": [[777, "mne-viz-plot-ch-adjacency"]], "Examples using mne.viz.plot_ch_adjacency": [[777, "examples-using-mne-viz-plot-ch-adjacency"]], "mne.viz.plot_channel_labels_circle": [[778, "mne-viz-plot-channel-labels-circle"]], "Examples using mne.viz.plot_channel_labels_circle": [[778, "examples-using-mne-viz-plot-channel-labels-circle"]], "mne.viz.plot_chpi_snr": [[779, "mne-viz-plot-chpi-snr"]], "Examples using mne.viz.plot_chpi_snr": [[779, "examples-using-mne-viz-plot-chpi-snr"]], "mne.viz.plot_compare_evokeds": [[780, "mne-viz-plot-compare-evokeds"]], "Examples using mne.viz.plot_compare_evokeds": [[780, "examples-using-mne-viz-plot-compare-evokeds"]], "mne.viz.plot_cov": [[781, "mne-viz-plot-cov"]], "Examples using mne.viz.plot_cov": [[781, "examples-using-mne-viz-plot-cov"]], "mne.viz.plot_csd": [[782, "mne-viz-plot-csd"]], "mne.viz.plot_dipole_amplitudes": [[783, "mne-viz-plot-dipole-amplitudes"]], "Examples using mne.viz.plot_dipole_amplitudes": [[783, "examples-using-mne-viz-plot-dipole-amplitudes"]], "mne.viz.plot_dipole_locations": [[784, "mne-viz-plot-dipole-locations"]], "Examples using mne.viz.plot_dipole_locations": [[784, "examples-using-mne-viz-plot-dipole-locations"]], "mne.viz.plot_drop_log": [[785, "mne-viz-plot-drop-log"]], "mne.viz.plot_epochs": [[786, "mne-viz-plot-epochs"]], "mne.viz.plot_epochs_image": [[787, "mne-viz-plot-epochs-image"]], "Examples using mne.viz.plot_epochs_image": [[787, "examples-using-mne-viz-plot-epochs-image"]], "mne.viz.plot_epochs_psd_topomap": [[788, "mne-viz-plot-epochs-psd-topomap"]], "mne.viz.plot_events": [[789, "mne-viz-plot-events"]], "Examples using mne.viz.plot_events": [[789, "examples-using-mne-viz-plot-events"]], "mne.viz.plot_evoked": [[790, "mne-viz-plot-evoked"]], "mne.viz.plot_evoked_field": [[791, "mne-viz-plot-evoked-field"]], "mne.viz.plot_evoked_image": [[792, "mne-viz-plot-evoked-image"]], "Examples using mne.viz.plot_evoked_image": [[792, "examples-using-mne-viz-plot-evoked-image"]], "mne.viz.plot_evoked_joint": [[793, "mne-viz-plot-evoked-joint"]], "mne.viz.plot_evoked_topo": [[794, "mne-viz-plot-evoked-topo"]], "Examples using mne.viz.plot_evoked_topo": [[794, "examples-using-mne-viz-plot-evoked-topo"]], "mne.viz.plot_evoked_topomap": [[795, "mne-viz-plot-evoked-topomap"]], "mne.viz.plot_evoked_white": [[796, "mne-viz-plot-evoked-white"]], "Examples using mne.viz.plot_evoked_white": [[796, "examples-using-mne-viz-plot-evoked-white"]], "mne.viz.plot_filter": [[797, "mne-viz-plot-filter"]], "Examples using mne.viz.plot_filter": [[797, "examples-using-mne-viz-plot-filter"]], "mne.viz.plot_head_positions": [[798, "mne-viz-plot-head-positions"]], "Examples using mne.viz.plot_head_positions": [[798, "examples-using-mne-viz-plot-head-positions"]], "mne.viz.plot_ica_components": [[799, "mne-viz-plot-ica-components"]], "mne.viz.plot_ica_overlay": [[800, "mne-viz-plot-ica-overlay"]], "mne.viz.plot_ica_properties": [[801, "mne-viz-plot-ica-properties"]], "mne.viz.plot_ica_scores": [[802, "mne-viz-plot-ica-scores"]], "mne.viz.plot_ica_sources": [[803, "mne-viz-plot-ica-sources"]], "mne.viz.plot_ideal_filter": [[804, "mne-viz-plot-ideal-filter"]], "Examples using mne.viz.plot_ideal_filter": [[804, "examples-using-mne-viz-plot-ideal-filter"]], "mne.viz.plot_layout": [[805, "mne-viz-plot-layout"]], "mne.viz.plot_montage": [[806, "mne-viz-plot-montage"]], "mne.viz.plot_projs_joint": [[807, "mne-viz-plot-projs-joint"]], "Examples using mne.viz.plot_projs_joint": [[807, "examples-using-mne-viz-plot-projs-joint"]], "mne.viz.plot_projs_topomap": [[808, "mne-viz-plot-projs-topomap"]], "Examples using mne.viz.plot_projs_topomap": [[808, "examples-using-mne-viz-plot-projs-topomap"]], "mne.viz.plot_raw": [[809, "mne-viz-plot-raw"]], "mne.viz.plot_raw_psd": [[810, "mne-viz-plot-raw-psd"]], "mne.viz.plot_regression_weights": [[811, "mne-viz-plot-regression-weights"]], "mne.viz.plot_sensors": [[812, "mne-viz-plot-sensors"]], "mne.viz.plot_snr_estimate": [[813, "mne-viz-plot-snr-estimate"]], "Examples using mne.viz.plot_snr_estimate": [[813, "examples-using-mne-viz-plot-snr-estimate"]], "mne.viz.plot_source_estimates": [[814, "mne-viz-plot-source-estimates"]], "Examples using mne.viz.plot_source_estimates": [[814, "examples-using-mne-viz-plot-source-estimates"]], "mne.viz.plot_sparse_source_estimates": [[815, "mne-viz-plot-sparse-source-estimates"]], "Examples using mne.viz.plot_sparse_source_estimates": [[815, "examples-using-mne-viz-plot-sparse-source-estimates"]], "mne.viz.plot_tfr_topomap": [[816, "mne-viz-plot-tfr-topomap"]], "mne.viz.plot_topo_image_epochs": [[817, "mne-viz-plot-topo-image-epochs"]], "mne.viz.plot_topomap": [[818, "mne-viz-plot-topomap"]], "Examples using mne.viz.plot_topomap": [[818, "examples-using-mne-viz-plot-topomap"]], "mne.viz.plot_vector_source_estimates": [[819, "mne-viz-plot-vector-source-estimates"]], "Examples using mne.viz.plot_vector_source_estimates": [[819, "examples-using-mne-viz-plot-vector-source-estimates"]], "mne.viz.plot_volume_source_estimates": [[820, "mne-viz-plot-volume-source-estimates"]], "mne.viz.set_3d_backend": [[821, "mne-viz-set-3d-backend"]], "mne.viz.set_3d_options": [[822, "mne-viz-set-3d-options"]], "mne.viz.set_3d_title": [[823, "mne-viz-set-3d-title"]], "Examples using mne.viz.set_3d_title": [[823, "examples-using-mne-viz-set-3d-title"]], "mne.viz.set_3d_view": [[824, "mne-viz-set-3d-view"]], "Examples using mne.viz.set_3d_view": [[824, "examples-using-mne-viz-set-3d-view"]], "mne.viz.set_browser_backend": [[825, "mne-viz-set-browser-backend"]], "mne.viz.snapshot_brain_montage": [[826, "mne-viz-snapshot-brain-montage"]], "Examples using mne.viz.snapshot_brain_montage": [[826, "examples-using-mne-viz-snapshot-brain-montage"]], "mne.viz.use_3d_backend": [[827, "mne-viz-use-3d-backend"]], "mne.viz.use_browser_backend": [[828, "mne-viz-use-browser-backend"]], "Examples using mne.viz.use_browser_backend": [[828, "examples-using-mne-viz-use-browser-backend"]], "mne.what": [[829, "mne-what"]], "mne.write_bem_solution": [[830, "mne-write-bem-solution"]], "mne.write_bem_surfaces": [[831, "mne-write-bem-surfaces"]], "mne.write_cov": [[832, "mne-write-cov"]], "mne.write_events": [[833, "mne-write-events"]], "mne.write_evokeds": [[834, "mne-write-evokeds"]], "mne.write_forward_solution": [[835, "mne-write-forward-solution"]], "mne.write_head_bem": [[836, "mne-write-head-bem"]], "Examples using mne.write_head_bem": [[836, "examples-using-mne-write-head-bem"]], "mne.write_label": [[837, "mne-write-label"]], "mne.write_labels_to_annot": [[838, "mne-write-labels-to-annot"]], "mne.write_proj": [[839, "mne-write-proj"]], "mne.write_source_spaces": [[840, "mne-write-source-spaces"]], "mne.write_surface": [[841, "mne-write-surface"]], "Examples using mne.write_surface": [[841, "examples-using-mne-write-surface"]], "mne.write_trans": [[842, "mne-write-trans"]], "Glossary": [[843, "glossary"]], "MNE-Python Homepage": [[844, "mne-python-homepage"]], "Advanced setup": [[845, "advanced-setup"]], "Working with Jupyter Notebooks and JupyterLab": [[845, "working-with-jupyter-notebooks-and-jupyterlab"]], "<i class=\"fa-brands fa-windows\"></i> Windows": [[845, null]], "Installing to a headless Linux server": [[845, "installing-to-a-headless-linux-server"]], "Using the development version": [[845, "using-the-development-version"]], "Other Python distributions": [[845, "other-python-distributions"]], "GPU acceleration with CUDA": [[845, "gpu-acceleration-with-cuda"]], "Off-screen rendering with MESA": [[845, "off-screen-rendering-with-mesa"]], "Troubleshooting 3D plots": [[845, "troubleshooting-3d-plots"]], "3D plotting trouble after upgrade on macOS": [[845, "d-plotting-trouble-after-upgrade-on-macos"]], "Testing your installation": [[846, "testing-your-installation"]], "Contributing guide": [[847, "contributing-guide"]], "Overview of contribution process": [[847, "overview-of-contribution-process"]], "Setting up your local development environment": [[847, "setting-up-your-local-development-environment"]], "Configuring git": [[847, "configuring-git"]], "GNU Make": [[847, "gnu-make"]], "Forking the MNE-Python repository": [[847, "forking-the-mne-python-repository"]], "Creating the virtual environment": [[847, "creating-the-virtual-environment"]], "Basic git commands": [[847, "basic-git-commands"]], "Connecting to GitHub with SSH (optional)": [[847, "connecting-to-github-with-ssh-optional"]], "MNE-Python coding conventions": [[847, "mne-python-coding-conventions"]], "General requirements": [[847, "general-requirements"]], "All new functionality must have test coverage": [[847, "all-new-functionality-must-have-test-coverage"]], "All new functionality must be documented": [[847, "all-new-functionality-must-be-documented"]], "Avoid API changes when possible": [[847, "avoid-api-changes-when-possible"]], "Deprecate with a decorator or a warning": [[847, "deprecate-with-a-decorator-or-a-warning"]], "Describe your changes in the changelog": [[847, "describe-your-changes-in-the-changelog"]], "First-time contributors": [[847, "first-time-contributors"]], "Recurring contributors": [[847, "recurring-contributors"]], "Test locally before opening pull requests (PRs)": [[847, "test-locally-before-opening-pull-requests-prs"]], "Make tests fast and thorough": [[847, "make-tests-fast-and-thorough"]], "Code style": [[847, "code-style"]], "Adhere to standard Python style guidelines": [[847, "adhere-to-standard-python-style-guidelines"]], "Use consistent variable naming": [[847, "use-consistent-variable-naming"]], "We (mostly) follow NumPy style for docstrings": [[847, "we-mostly-follow-numpy-style-for-docstrings"]], "Cross-reference everywhere": [[847, "cross-reference-everywhere"]], "Other style guidance": [[847, "other-style-guidance"]], "Code organization": [[847, "code-organization"]], "Importing": [[847, "importing"]], "Return types": [[847, "return-types"]], "Running the test suite": [[847, "running-the-test-suite"]], "Building the documentation": [[847, "building-the-documentation"]], "Modifying command-line tools": [[847, "modifying-command-line-tools"]], "GitHub workflow": [[847, "github-workflow"]], "Installing FreeSurfer": [[848, "installing-freesurfer"]], "Installing MNE-Python": [[849, "installing-mne-python"]], "MNE-Python installers": [[850, "mne-python-installers"]], "VS Code Setup": [[850, "vs-code-setup"]], "Install via pip or conda": [[851, "install-via-pip-or-conda"]], "Installing MNE-Python with all dependencies": [[851, "installing-mne-python-with-all-dependencies"]], "Installing a minimal MNE-Python with core functionality only": [[851, "installing-a-minimal-mne-python-with-core-functionality-only"]], "Installing a minimal MNE-Python with EEGLAB I/O support": [[851, "installing-a-minimal-mne-python-with-eeglab-i-o-support"]], "Installing MNE-Python for other scenarios": [[851, "installing-mne-python-for-other-scenarios"]], "Python IDEs": [[851, "python-ides"]], "Installing Python": [[852, "installing-python"]], "Installing MNE-C": [[853, "installing-mne-c"]], "System requirements": [[853, "system-requirements"]], "<i class=\"fa-brands fa-apple\"></i> macOS": [[853, null]], "Downloading and Installing MNE-C": [[853, "downloading-and-installing-mne-c"]], "Configuring MNE-C": [[853, "configuring-mne-c"]], "Testing MNE-C installation": [[853, "testing-mne-c-installation"]], "Troubleshooting MNE-C installation": [[853, "troubleshooting-mne-c-installation"]], "Overview of the MNE tools suite": [[854, "overview-of-the-mne-tools-suite"]], "Related software": [[854, "related-software"]], "What should I install?": [[854, "what-should-i-install"]], "Getting help": [[854, "getting-help"], [868, "getting-help"]], "Updating MNE-Python": [[855, "updating-mne-python"]], "Upgrading MNE-Python only": [[855, "upgrading-mne-python-only"]], "Upgrading all packages": [[855, "upgrading-all-packages"]], "Upgrading to the development version": [[855, "upgrading-to-the-development-version"]], "Inverse Solutions": [[856, "inverse-solutions"]], "Logging and Configuration": [[857, "logging-and-configuration"]], "Martinos Center setup": [[858, "martinos-center-setup"]], "MNE with CPP": [[859, "mne-with-cpp"]], "Most-used classes": [[860, "most-used-classes"]], "MRI Processing": [[861, "mri-processing"]], "How to cite MNE-Python": [[862, "how-to-cite-mne-python"]], "Citing the software": [[862, "citing-the-software"]], "Citing the inverse imaging algorithms": [[862, "citing-the-inverse-imaging-algorithms"]], "Citing other algorithms": [[862, "citing-other-algorithms"]], "The typical M/EEG workflow": [[863, "the-typical-m-eeg-workflow"]], "Overview": [[863, "overview"], [873, "overview"]], "Artifact suppression": [[863, "artifact-suppression"]], "SSP": [[863, "ssp"]], "ICA": [[863, "ica"]], "Epoching and evoked data": [[863, "epoching-and-evoked-data"]], "Rejection using annotations": [[863, "rejection-using-annotations"]], "Source localization": [[863, "source-localization"]], "Anatomical information": [[863, "anatomical-information"]], "Cortical surface reconstruction with FreeSurfer": [[863, "cortical-surface-reconstruction-with-freesurfer"]], "Setting up the source space": [[863, "setting-up-the-source-space"]], "Recommended subdivisions of an icosahedron and an octahedron for\n       the creation of source spaces. The approximate source spacing and\n       corresponding surface area have been calculated assuming a\n       1000-cm2 surface area per hemisphere.": [[863, "id9"]], "Creating the BEM model meshes": [[863, "creating-the-bem-model-meshes"]], "Setting up the head surface triangulation files": [[863, "setting-up-the-head-surface-triangulation-files"]], "Setting up the boundary-element model": [[863, "setting-up-the-boundary-element-model"]], "Aligning coordinate frames": [[863, "aligning-coordinate-frames"]], "Computing the forward solution": [[863, "computing-the-forward-solution"], [870, "computing-the-forward-solution"]], "Computing the noise-covariance matrix": [[863, "computing-the-noise-covariance-matrix"]], "Calculating the inverse operator": [[863, "calculating-the-inverse-operator"]], "Creating source estimates": [[863, "creating-source-estimates"]], "Group analyses": [[863, "group-analyses"]], "Datasets Overview": [[864, "datasets-overview"]], "Sample": [[864, "sample"]], "Trigger codes for the sample data set.": [[864, "id20"]], "Contents of the data set": [[864, "contents-of-the-data-set"]], "Contents of the MEG/sample directory.": [[864, "id21"]], "Overview of the contents of the subjects/sample directory.": [[864, "id22"]], "UCL OPM Auditory": [[864, "ucl-opm-auditory"]], "Brainstorm": [[864, "brainstorm"]], "Auditory": [[864, "auditory"]], "Resting state": [[864, "resting-state"]], "Median nerve": [[864, "median-nerve"]], "SPM faces": [[864, "spm-faces"]], "EEGBCI motor imagery": [[864, "eegbci-motor-imagery"]], "Somatosensory": [[864, "somatosensory"]], "Multimodal": [[864, "multimodal"]], "fNIRS motor": [[864, "fnirs-motor"]], "High frequency SEF": [[864, "high-frequency-sef"]], "Visual 92 object categories": [[864, "visual-92-object-categories"]], "mTRF Dataset": [[864, "mtrf-dataset"]], "Kiloword dataset": [[864, "kiloword-dataset"]], "4D Neuroimaging / BTi dataset": [[864, "d-neuroimaging-bti-dataset"]], "OPM": [[864, "opm"]], "The Sleep PolySomnoGraphic Database": [[864, "the-sleep-polysomnographic-database"]], "Reference channel noise MEG data set": [[864, "reference-channel-noise-meg-data-set"]], "Miscellaneous Datasets": [[864, "miscellaneous-datasets"]], "fsaverage": [[864, "fsaverage"]], "Infant template MRIs": [[864, "infant-template-mris"]], "ECoG Dataset": [[864, "ecog-dataset"]], "sEEG Dataset": [[864, "seeg-dataset"]], "LIMO Dataset": [[864, "limo-dataset"]], "ERP CORE Dataset": [[864, "erp-core-dataset"]], "SSVEP": [[864, "ssvep"]], "EYELINK": [[864, "eyelink"]], "Interactive versus scripted analysis": [[865, "interactive-versus-scripted-analysis"]], "Integration with the scientific python stack": [[865, "integration-with-the-scientific-python-stack"]], "Submodule-based organization": [[865, "submodule-based-organization"]], "(Mostly) unified API": [[865, "mostly-unified-api"]], "In-place operation": [[865, "in-place-operation"]], "MNE-Python Development": [[866, "mne-python-development"]], "Frequently Asked Questions (FAQ)": [[867, "frequently-asked-questions-faq"]], "General MNE-Python issues": [[867, "general-mne-python-issues"]], "Help! I can\u2019t get Python and MNE-Python working!": [[867, "help-i-can-t-get-python-and-mne-python-working"]], "I still can\u2019t get it to work!": [[867, "i-still-can-t-get-it-to-work"]], "I can\u2019t get PyVista/3D plotting to work under Windows": [[867, "i-can-t-get-pyvista-3d-plotting-to-work-under-windows"]], "Python runs on macOS extremely slow even on simple commands!": [[867, "python-runs-on-macos-extremely-slow-even-on-simple-commands"]], "How do I cite MNE?": [[867, "how-do-i-cite-mne"]], "I\u2019m not sure how to do X analysis step with my Y data\u2026": [[867, "i-m-not-sure-how-to-do-x-analysis-step-with-my-y-data"]], "I think I found a bug, what do I do?": [[867, "i-think-i-found-a-bug-what-do-i-do"]], "Why is it dangerous to \u201cpickle\u201d my MNE-Python objects and data for later use?": [[867, "why-is-it-dangerous-to-pickle-my-mne-python-objects-and-data-for-later-use"]], "I downloaded a dataset once, but MNE-Python is asking to download it again. Why?": [[867, "i-downloaded-a-dataset-once-but-mne-python-is-asking-to-download-it-again-why"]], "A function uses multiple CPU cores even though I didn\u2019t tell it to. Why?": [[867, "a-function-uses-multiple-cpu-cores-even-though-i-didn-t-tell-it-to-why"]], "I have a mystery FIF file, how do I read it?": [[867, "i-have-a-mystery-fif-file-how-do-i-read-it"]], "Resampling and decimating data": [[867, "resampling-and-decimating-data"]], "What are all these options for resampling, decimating, and binning data?": [[867, "what-are-all-these-options-for-resampling-decimating-and-binning-data"]], "Resampling raw data is taking forever! What do I do?": [[867, "resampling-raw-data-is-taking-forever-what-do-i-do"]], "Forward and Inverse Solution": [[867, "forward-and-inverse-solution"]], "My watershed BEM meshes look incorrect": [[867, "my-watershed-bem-meshes-look-incorrect"]], "Project Governance": [[869, "project-governance"]], "The Project": [[869, "the-project"]], "Governance model": [[869, "governance-model"]], "BDFL": [[869, "bdfl"]], "Steering Council": [[869, "steering-council"], [875, "steering-council"]], "Council membership": [[869, "council-membership"]], "Conflict of interest": [[869, "conflict-of-interest"]], "Private communications of the Council": [[869, "private-communications-of-the-council"]], "Council decision making": [[869, "council-decision-making"]], "Institutional Partners and funding": [[869, "institutional-partners-and-funding"]], "Document history": [[869, "document-history"], [875, "document-history"]], "Acknowledgements": [[869, "acknowledgements"]], "License": [[869, "license"]], "Algorithms and other implementation details": [[870, "algorithms-and-other-implementation-details"]], "Internal representation (units)": [[870, "internal-representation-units"]], "Floating-point precision": [[870, "floating-point-precision"]], "Supported channel types": [[870, "supported-channel-types"]], "Supported data formats": [[870, "supported-data-formats"]], "Supported formats for digitized 3D locations": [[870, "supported-formats-for-digitized-3d-locations"]], "Memory-efficient I/O": [[870, "memory-efficient-i-o"]], "Preloading continuous (raw) data": [[870, "preloading-continuous-raw-data"]], "Preloading epoched data": [[870, "preloading-epoched-data"]], "Loading data explicitly": [[870, "loading-data-explicitly"]], "Accessing data as NumPy arrays": [[870, "accessing-data-as-numpy-arrays"]], "Bad channel repair via interpolation": [[870, "bad-channel-repair-via-interpolation"]], "Maxwell filtering": [[870, "maxwell-filtering"]], "Signal-Space Projection (SSP)": [[870, "signal-space-projection-ssp"]], "General concepts": [[870, "general-concepts"]], "Estimation of the noise subspace": [[870, "estimation-of-the-noise-subspace"]], "EEG average electrode reference": [[870, "eeg-average-electrode-reference"]], "The Boundary Element Model (BEM)": [[870, "the-boundary-element-model-bem"]], "Using the watershed algorithm": [[870, "using-the-watershed-algorithm"]], "Using FLASH images": [[870, "using-flash-images"]], "Organizing MRI data into directories": [[870, "organizing-mri-data-into-directories"]], "Creating the surface tessellations": [[870, "creating-the-surface-tessellations"]], "Inspecting the meshes": [[870, "inspecting-the-meshes"]], "The forward solution": [[870, "the-forward-solution"]], "MEG/EEG and MRI coordinate systems": [[870, "meg-eeg-and-mri-coordinate-systems"]], "Coordinate transformations in FreeSurfer and MNE software packages.": [[870, "id18"]], "The head and device coordinate systems": [[870, "the-head-and-device-coordinate-systems"]], "Creating a surface-based source space": [[870, "creating-a-surface-based-source-space"]], "Creating a volumetric or discrete source space": [[870, "creating-a-volumetric-or-discrete-source-space"]], "Creating the BEM meshes": [[870, "creating-the-bem-meshes"]], "Topology checks": [[870, "topology-checks"]], "Computing the BEM geometry data": [[870, "computing-the-bem-geometry-data"]], "Coil geometry information": [[870, "coil-geometry-information"]], "The sensor coordinate system": [[870, "the-sensor-coordinate-system"]], "Calculation of the magnetic field": [[870, "calculation-of-the-magnetic-field"]], "Implemented coil geometries": [[870, "implemented-coil-geometries"]], "Normal coil descriptions.": [[870, "id20"]], "Accurate coil descriptions": [[870, "id21"]], "The coil definition file": [[870, "the-coil-definition-file"]], "Coil representation accuracies.": [[870, "id22"]], "Purpose": [[870, "purpose"]], "Implementation of software gradient compensation": [[870, "implementation-of-software-gradient-compensation"]], "The EEG sphere model definition file": [[870, "the-eeg-sphere-model-definition-file"]], "Structure of the default EEG model": [[870, "id23"]], "EEG forward solution in the sphere model": [[870, "eeg-forward-solution-in-the-sphere-model"]], "Averaging forward solutions": [[870, "averaging-forward-solutions"]], "The minimum-norm current estimates": [[870, "the-minimum-norm-current-estimates"]], "The linear inverse operator": [[870, "the-linear-inverse-operator"]], "Regularization": [[870, "regularization"]], "Whitening and scaling": [[870, "whitening-and-scaling"]], "Regularization of the noise-covariance matrix": [[870, "regularization-of-the-noise-covariance-matrix"]], "Computation of the solution": [[870, "computation-of-the-solution"]], "Noise normalization": [[870, "noise-normalization"]], "sLORETA": [[870, "sloreta"]], "eLORETA": [[870, "eloreta"]], "Predicted data": [[870, "predicted-data"]], "Cortical patch statistics": [[870, "cortical-patch-statistics"]], "Orientation constraints": [[870, "orientation-constraints"]], "Depth weighting": [[870, "depth-weighting"]], "Effective number of averages": [[870, "effective-number-of-averages"]], "Morphing and averaging source estimates": [[870, "morphing-and-averaging-source-estimates"]], "Why morphing?": [[870, "why-morphing"]], "The morphing maps": [[870, "the-morphing-maps"]], "About smoothing": [[870, "about-smoothing"]], "Documentation overview": [[871, "documentation-overview"]], "Getting started with Python": [[872, "getting-started-with-python"]], "MNE-MATLAB documentation": [[873, "mne-matlab-documentation"]], "High-level reading routines.": [[873, "id2"]], "Channel selection utilities.": [[873, "id3"]], "Coordinate transformation utilities.": [[873, "id4"]], "Basic reading routines.": [[873, "id5"]], "Writing routines.": [[873, "id6"]], "High-level data writing routines.": [[873, "id7"]], "Coil definition utilities.": [[873, "id8"]], "Routines for software gradient compensation and signal-space projection.": [[873, "id9"]], "High-level routines for reading MNE data files.": [[873, "id10"]], "High-level routines for writing MNE data files.": [[873, "id11"]], "Routines related to stc, w, and label files.": [[873, "id12"]], "Routines for reading FreeSurfer surfaces.": [[873, "id13"]], "Utility functions.": [[873, "id14"]], "Examples demonstrating the use of the toolbox.": [[873, "id15"]], "Some data structures": [[873, "some-data-structures"]], "FIFF constants.": [[873, "id16"]], "The tag structure.": [[873, "id17"]], "The taginfo structure.": [[873, "id18"]], "The directory structure.": [[873, "id19"]], "The id structure.": [[873, "id20"]], "The named matrix structure.": [[873, "id21"]], "The trans structure.": [[873, "id22"]], "The dig structure.": [[873, "id23"]], "The coildef structure. For more detailed information, see Coil geometry information.": [[873, "id24"]], "The ch structure.": [[873, "id25"]], "The proj structure.": [[873, "id26"]], "The comp structure.": [[873, "id27"]], "The meas info structure.": [[873, "id28"]], "The surf structure.": [[873, "id29"]], "The cov structure.": [[873, "id30"]], "The fwd structure.": [[873, "id31"]], "The inv structure. Note: The fields proj, whitener, reginv, and noisenorm are filled in by the routine mne_prepare_inverse_operator.": [[873, "id32"]], "On-line documentation for individual routines": [[873, "on-line-documentation-for-individual-routines"]], "Migrating from other analysis software": [[874, "migrating-from-other-analysis-software"]], "EEGLAB": [[874, "eeglab"]], "Potential pitfalls": [[874, "potential-pitfalls"]], "Current steering council and institutional partners": [[875, "current-steering-council-and-institutional-partners"]], "Benevolent Dictator for Life": [[875, "benevolent-dictator-for-life"]], "Community Participation Guidelines Response Leads": [[875, "community-participation-guidelines-response-leads"]], "Institutional Partners": [[875, "institutional-partners"]], "Roadmap": [[876, "roadmap"]], "Page contents": [[876, "page-contents"]], "Open": [[876, "open"]], "Time-frequency visualization": [[876, "time-frequency-visualization"]], "Clustering statistics API": [[876, "clustering-statistics-api"]], "Access to open EEG/MEG databases": [[876, "access-to-open-eeg-meg-databases"]], "Integrate OpenMEEG via improved Python bindings": [[876, "integrate-openmeeg-via-improved-python-bindings"]], "In progress": [[876, "in-progress"]], "Diversity, Equity, and Inclusion (DEI)": [[876, "diversity-equity-and-inclusion-dei"]], "First-class OPM support": [[876, "first-class-opm-support"]], "Deep source modeling": [[876, "deep-source-modeling"]], "Better sEEG/ECoG/DBS support": [[876, "better-seeg-ecog-dbs-support"]], "Time-frequency classes": [[876, "time-frequency-classes"]], "Pediatric and clinical MEG pipelines": [[876, "pediatric-and-clinical-meg-pipelines"]], "Statistics efficiency": [[876, "statistics-efficiency"]], "3D visualization": [[876, "d-visualization"]], "Documentation updates": [[876, "documentation-updates"]], "Completed": [[876, "completed"]], "Distributed computing support": [[876, "distributed-computing-support"]], "2D visualization": [[876, "id3"]], "Tutorial / example overhaul": [[876, "tutorial-example-overhaul"]], "Cluster computing images": [[876, "cluster-computing-images"]], "Python API Reference": [[878, "python-api-reference"]], "Reading raw data": [[879, "reading-raw-data"]], "Realtime": [[880, "realtime"]], "MNE-Report": [[881, "mne-report"]], "Sensor Space Data": [[882, "sensor-space-data"]], "Source Space Data": [[884, "source-space-data"]], "Statistics": [[885, "statistics"]], "Time-Frequency": [[886, "time-frequency"]], "What\u2019s new": [[888, "what-s-new"]], "Current (1.4.dev0)": [[888, "current-1-4-dev0"]], "Enhancements": [[888, "enhancements"], [888, "id3"], [888, "id6"], [888, "id10"], [888, "id13"], [888, "id17"], [888, "id21"], [888, "id25"], [888, "id29"]], "Bugs": [[888, "bugs"], [888, "id2"], [888, "id4"], [888, "id7"], [888, "id11"], [888, "id14"], [888, "id18"], [888, "id22"], [888, "id26"], [888, "id30"]], "API changes": [[888, "api-changes"], [888, "id5"], [888, "id8"], [888, "id15"], [888, "id19"], [888, "id23"], [888, "id27"], [888, "id31"]], "Version 1.3.1 (2023-02-23)": [[888, "version-1-3-1-2023-02-23"]], "Version 1.3.0 (2022-12-21)": [[888, "version-1-3-0-2022-12-21"]], "Authors": [[888, "authors"], [888, "id9"], [888, "id12"], [888, "id16"], [888, "id20"], [888, "id24"], [888, "id28"], [888, "id32"], [888, "id33"], [888, "id43"], [888, "id47"], [888, "id51"], [888, "id55"], [888, "id59"], [888, "id63"], [888, "id67"], [888, "id71"], [888, "id75"], [888, "id79"], [888, "id82"], [888, "id85"], [888, "id88"], [888, "id90"], [888, "id92"], [888, "id94"], [888, "id95"]], "Version 1.2.0 (2022-10-11)": [[888, "version-1-2-0-2022-10-11"]], "Version 1.1.0 (2022-08-03)": [[888, "version-1-1-0-2022-08-03"]], "API and behavior changes": [[888, "api-and-behavior-changes"]], "Version 1.0.0 (2022-03-21)": [[888, "version-1-0-0-2022-03-21"]], "Dependencies": [[888, "dependencies"]], "Version 0.24.0 (2021-11-03)": [[888, "version-0-24-0-2021-11-03"]], "Version 0.23.0 (2021-04-27)": [[888, "version-0-23-0-2021-04-27"]], "Version 0.22.0 (2020-12-17)": [[888, "version-0-22-0-2020-12-17"]], "Version 0.21 (2020-09-21)": [[888, "version-0-21-2020-09-21"]], "Version 0.20 (2020-03-27)": [[888, "version-0-20-2020-03-27"]], "Changelog": [[888, "changelog"], [888, "id34"], [888, "id37"], [888, "id40"], [888, "id44"], [888, "id48"], [888, "id52"], [888, "id56"], [888, "id60"], [888, "id64"], [888, "id68"], [888, "id72"], [888, "id76"], [888, "id80"], [888, "id83"], [888, "id86"], [888, "id89"], [888, "id91"], [888, "id93"]], "Bug": [[888, "bug"], [888, "id35"], [888, "id38"], [888, "id41"], [888, "id45"]], "API": [[888, "api"], [888, "id36"], [888, "id39"], [888, "id42"], [888, "id46"], [888, "id50"], [888, "id54"], [888, "id58"], [888, "id62"], [888, "id66"], [888, "id70"], [888, "id74"], [888, "id78"], [888, "id81"], [888, "id84"], [888, "id87"]], "Version 0.19 (2019-09-24)": [[888, "version-0-19-2019-09-24"]], "Version 0.18 (2019-05-19)": [[888, "version-0-18-2019-05-19"]], "Version 0.17 (2018-11-19)": [[888, "version-0-17-2018-11-19"]], "Version 0.16 (2018-05-01)": [[888, "version-0-16-2018-05-01"]], "Version 0.15 (2017-10-20)": [[888, "version-0-15-2017-10-20"]], "BUG": [[888, "id49"], [888, "id53"], [888, "id57"], [888, "id61"], [888, "id65"], [888, "id69"], [888, "id73"], [888, "id77"]], "Version 0.14 (2017-03-24)": [[888, "version-0-14-2017-03-24"]], "Version 0.13 (2016-09-27)": [[888, "version-0-13-2016-09-27"]], "Version 0.12 (2016-05-10)": [[888, "version-0-12-2016-05-10"]], "Version 0.11 (2015-12-24)": [[888, "version-0-11-2015-12-24"]], "Version 0.10 (2015-10-26)": [[888, "version-0-10-2015-10-26"]], "Version 0.9 (2015-05-22)": [[888, "version-0-9-2015-05-22"]], "Version 0.8 (2014-06-25)": [[888, "version-0-8-2014-06-25"]], "Version 0.7 (2013-11-26)": [[888, "version-0-7-2013-11-26"]], "Version 0.6 (2013-06-15)": [[888, "version-0-6-2013-06-15"]], "Version 0.5 (2012-12-27)": [[888, "version-0-5-2012-12-27"]], "Version 0.4 (2012-08-24)": [[888, "version-0-4-2012-08-24"]], "Version 0.3 (2012-03-23)": [[888, "version-0-3-2012-03-23"]], "Version 0.2 (2011-11-08)": [[888, "version-0-2-2011-11-08"]], "API changes summary": [[888, "api-changes-summary"]], "Version 0.1 (2011-09-23)": [[888, "version-0-1-2011-09-23"]]}, "indexentries": {"mne.datasets": [[250, "module-mne.datasets"]], "module": [[250, "module-mne.datasets"], [251, "module-mne.decoding"], [252, "module-mne.epochs"], [252, "module-mne.event"], [253, "module-mne.export"], [255, "module-mne.bem"], [856, "module-mne.beamformer"], [856, "module-mne.dipole"], [856, "module-mne.inverse_sparse"], [856, "module-mne.minimum_norm"], [857, "module-mne.cuda"], [857, "module-mne.utils"], [877, "module-mne.channels"], [877, "module-mne.chpi"], [877, "module-mne.filter"], [877, "module-mne.preprocessing"], [877, "module-mne.preprocessing.eyetracking"], [877, "module-mne.preprocessing.ieeg"], [877, "module-mne.preprocessing.nirs"], [877, "module-mne.transforms"], [878, "module-mne"], [879, "module-mne.io"], [879, "module-mne.io.kit"], [882, "module-mne.baseline"], [883, "module-mne.simulation"], [883, "module-mne.simulation.metrics"], [885, "module-mne.stats"], [886, "module-mne.time_frequency"], [886, "module-mne.time_frequency.tfr"], [887, "module-mne.viz"]], "mne.decoding": [[251, "module-mne.decoding"]], "mne.epochs": [[252, "module-mne.epochs"]], "mne.event": [[252, "module-mne.event"]], "mne.export": [[253, "module-mne.export"]], "mne.bem": [[255, "module-mne.bem"]], "acqparserfif (class in mne)": [[258, "mne.AcqParserFIF"]], "__getitem__() (mne.acqparserfif method)": [[258, "mne.AcqParserFIF.__getitem__"]], "__len__() (mne.acqparserfif method)": [[258, "mne.AcqParserFIF.__len__"]], "categories (mne.acqparserfif property)": [[258, "mne.AcqParserFIF.categories"]], "events (mne.acqparserfif property)": [[258, "mne.AcqParserFIF.events"]], "get_condition() (mne.acqparserfif method)": [[258, "mne.AcqParserFIF.get_condition"]], "annotations (class in mne)": [[259, "mne.Annotations"]], "__add__() (mne.annotations method)": [[259, "mne.Annotations.__add__"]], "__getitem__() (mne.annotations method)": [[259, "mne.Annotations.__getitem__"]], "__iter__() (mne.annotations method)": [[259, "mne.Annotations.__iter__"]], "__len__() (mne.annotations method)": [[259, "mne.Annotations.__len__"]], "append() (mne.annotations method)": [[259, "mne.Annotations.append"]], "copy() (mne.annotations method)": [[259, "mne.Annotations.copy"]], "crop() (mne.annotations method)": [[259, "mne.Annotations.crop"]], "delete() (mne.annotations method)": [[259, "mne.Annotations.delete"]], "orig_time (mne.annotations property)": [[259, "mne.Annotations.orig_time"]], "rename() (mne.annotations method)": [[259, "mne.Annotations.rename"]], "save() (mne.annotations method)": [[259, "mne.Annotations.save"]], "set_durations() (mne.annotations method)": [[259, "mne.Annotations.set_durations"]], "to_data_frame() (mne.annotations method)": [[259, "mne.Annotations.to_data_frame"]], "baseepochs (class in mne)": [[260, "mne.BaseEpochs"]], "bihemilabel (class in mne)": [[261, "mne.BiHemiLabel"]], "__add__() (mne.bihemilabel method)": [[261, "mne.BiHemiLabel.__add__"]], "__len__() (mne.bihemilabel method)": [[261, "mne.BiHemiLabel.__len__"]], "__sub__() (mne.bihemilabel method)": [[261, "mne.BiHemiLabel.__sub__"]], "covariance (class in mne)": [[262, "mne.Covariance"]], "__add__() (mne.covariance method)": [[262, "mne.Covariance.__add__"]], "__contains__() (mne.covariance method)": [[262, "mne.Covariance.__contains__"]], "__getitem__() (mne.covariance method)": [[262, "mne.Covariance.__getitem__"]], "__iter__() (mne.covariance method)": [[262, "mne.Covariance.__iter__"]], "__len__() (mne.covariance method)": [[262, "mne.Covariance.__len__"]], "as_diag() (mne.covariance method)": [[262, "mne.Covariance.as_diag"]], "ch_names (mne.covariance property)": [[262, "mne.Covariance.ch_names"]], "clear() (mne.covariance method)": [[262, "mne.Covariance.clear"]], "copy() (mne.covariance method)": [[262, "mne.Covariance.copy"]], "data (mne.covariance property)": [[262, "mne.Covariance.data"]], "fromkeys() (mne.covariance method)": [[262, "mne.Covariance.fromkeys"]], "get() (mne.covariance method)": [[262, "mne.Covariance.get"]], "items() (mne.covariance method)": [[262, "mne.Covariance.items"]], "keys() (mne.covariance method)": [[262, "mne.Covariance.keys"]], "nfree (mne.covariance property)": [[262, "mne.Covariance.nfree"]], "pick_channels() (mne.covariance method)": [[262, "mne.Covariance.pick_channels"]], "plot() (mne.covariance method)": [[262, "mne.Covariance.plot"]], "plot_topomap() (mne.covariance method)": [[262, "mne.Covariance.plot_topomap"]], "pop() (mne.covariance method)": [[262, "mne.Covariance.pop"]], "popitem() (mne.covariance method)": [[262, "mne.Covariance.popitem"]], "save() (mne.covariance method)": [[262, "mne.Covariance.save"]], "setdefault() (mne.covariance method)": [[262, "mne.Covariance.setdefault"]], "update() (mne.covariance method)": [[262, "mne.Covariance.update"]], "values() (mne.covariance method)": [[262, "mne.Covariance.values"]], "dipole (class in mne)": [[263, "mne.Dipole"]], "__getitem__() (mne.dipole method)": [[263, "mne.Dipole.__getitem__"]], "__len__() (mne.dipole method)": [[263, "mne.Dipole.__len__"]], "copy() (mne.dipole method)": [[263, "mne.Dipole.copy"]], "crop() (mne.dipole method)": [[263, "mne.Dipole.crop"]], "decimate() (mne.dipole method)": [[263, "mne.Dipole.decimate"]], "plot_amplitudes() (mne.dipole method)": [[263, "mne.Dipole.plot_amplitudes"]], "plot_locations() (mne.dipole method)": [[263, "mne.Dipole.plot_locations"]], "save() (mne.dipole method)": [[263, "mne.Dipole.save"]], "shift_time() (mne.dipole method)": [[263, "mne.Dipole.shift_time"]], "time_as_index() (mne.dipole method)": [[263, "mne.Dipole.time_as_index"]], "times (mne.dipole property)": [[263, "mne.Dipole.times"]], "tmax (mne.dipole property)": [[263, "mne.Dipole.tmax"]], "tmin (mne.dipole property)": [[263, "mne.Dipole.tmin"]], "to_mni() (mne.dipole method)": [[263, "mne.Dipole.to_mni"]], "to_mri() (mne.dipole method)": [[263, "mne.Dipole.to_mri"]], "to_volume_labels() (mne.dipole method)": [[263, "mne.Dipole.to_volume_labels"]], "dipolefixed (class in mne)": [[264, "mne.DipoleFixed"]], "ch_names (mne.dipolefixed property)": [[264, "mne.DipoleFixed.ch_names"]], "copy() (mne.dipolefixed method)": [[264, "mne.DipoleFixed.copy"]], "crop() (mne.dipolefixed method)": [[264, "mne.DipoleFixed.crop"]], "decimate() (mne.dipolefixed method)": [[264, "mne.DipoleFixed.decimate"]], "plot() (mne.dipolefixed method)": [[264, "mne.DipoleFixed.plot"]], "save() (mne.dipolefixed method)": [[264, "mne.DipoleFixed.save"]], "shift_time() (mne.dipolefixed method)": [[264, "mne.DipoleFixed.shift_time"]], "time_as_index() (mne.dipolefixed method)": [[264, "mne.DipoleFixed.time_as_index"]], "times (mne.dipolefixed property)": [[264, "mne.DipoleFixed.times"]], "tmax (mne.dipolefixed property)": [[264, "mne.DipoleFixed.tmax"]], "tmin (mne.dipolefixed property)": [[264, "mne.DipoleFixed.tmin"]], "epochs (class in mne)": [[265, "mne.Epochs"]], "__contains__() (mne.epochs method)": [[265, "mne.Epochs.__contains__"]], "__getitem__() (mne.epochs method)": [[265, "mne.Epochs.__getitem__"]], "__iter__() (mne.epochs method)": [[265, "mne.Epochs.__iter__"]], "__len__() (mne.epochs method)": [[265, "mne.Epochs.__len__"]], "add_annotations_to_metadata() (mne.epochs method)": [[265, "mne.Epochs.add_annotations_to_metadata"]], "add_channels() (mne.epochs method)": [[265, "mne.Epochs.add_channels"]], "add_proj() (mne.epochs method)": [[265, "mne.Epochs.add_proj"]], "add_reference_channels() (mne.epochs method)": [[265, "mne.Epochs.add_reference_channels"]], "anonymize() (mne.epochs method)": [[265, "mne.Epochs.anonymize"]], "apply_baseline() (mne.epochs method)": [[265, "mne.Epochs.apply_baseline"]], "apply_function() (mne.epochs method)": [[265, "mne.Epochs.apply_function"]], "apply_hilbert() (mne.epochs method)": [[265, "mne.Epochs.apply_hilbert"]], "apply_proj() (mne.epochs method)": [[265, "mne.Epochs.apply_proj"]], "as_type() (mne.epochs method)": [[265, "mne.Epochs.as_type"]], "average() (mne.epochs method)": [[265, "mne.Epochs.average"]], "ch_names (mne.epochs property)": [[265, "mne.Epochs.ch_names"]], "compensation_grade (mne.epochs property)": [[265, "mne.Epochs.compensation_grade"]], "compute_psd() (mne.epochs method)": [[265, "mne.Epochs.compute_psd"]], "copy() (mne.epochs method)": [[265, "mne.Epochs.copy"]], "crop() (mne.epochs method)": [[265, "mne.Epochs.crop"]], "decimate() (mne.epochs method)": [[265, "mne.Epochs.decimate"]], "del_proj() (mne.epochs method)": [[265, "mne.Epochs.del_proj"]], "drop() (mne.epochs method)": [[265, "mne.Epochs.drop"]], "drop_bad() (mne.epochs method)": [[265, "mne.Epochs.drop_bad"]], "drop_channels() (mne.epochs method)": [[265, "mne.Epochs.drop_channels"]], "drop_log_stats() (mne.epochs method)": [[265, "mne.Epochs.drop_log_stats"]], "equalize_event_counts() (mne.epochs method)": [[265, "mne.Epochs.equalize_event_counts"]], "export() (mne.epochs method)": [[265, "mne.Epochs.export"]], "filename (mne.epochs property)": [[265, "mne.Epochs.filename"]], "filter() (mne.epochs method)": [[265, "mne.Epochs.filter"]], "get_annotations_per_epoch() (mne.epochs method)": [[265, "mne.Epochs.get_annotations_per_epoch"]], "get_channel_types() (mne.epochs method)": [[265, "mne.Epochs.get_channel_types"]], "get_data() (mne.epochs method)": [[265, "mne.Epochs.get_data"]], "get_montage() (mne.epochs method)": [[265, "mne.Epochs.get_montage"]], "interpolate_bads() (mne.epochs method)": [[265, "mne.Epochs.interpolate_bads"]], "iter_evoked() (mne.epochs method)": [[265, "mne.Epochs.iter_evoked"]], "load_data() (mne.epochs method)": [[265, "mne.Epochs.load_data"]], "metadata (mne.epochs property)": [[265, "mne.Epochs.metadata"]], "next() (mne.epochs method)": [[265, "mne.Epochs.next"]], "pick() (mne.epochs method)": [[265, "mne.Epochs.pick"]], "pick_channels() (mne.epochs method)": [[265, "mne.Epochs.pick_channels"]], "pick_types() (mne.epochs method)": [[265, "mne.Epochs.pick_types"]], "plot() (mne.epochs method)": [[265, "mne.Epochs.plot"]], "plot_drop_log() (mne.epochs method)": [[265, "mne.Epochs.plot_drop_log"]], "plot_image() (mne.epochs method)": [[265, "mne.Epochs.plot_image"]], "plot_projs_topomap() (mne.epochs method)": [[265, "mne.Epochs.plot_projs_topomap"]], "plot_psd() (mne.epochs method)": [[265, "mne.Epochs.plot_psd"]], "plot_psd_topo() (mne.epochs method)": [[265, "mne.Epochs.plot_psd_topo"]], "plot_psd_topomap() (mne.epochs method)": [[265, "mne.Epochs.plot_psd_topomap"]], "plot_sensors() (mne.epochs method)": [[265, "mne.Epochs.plot_sensors"]], "plot_topo_image() (mne.epochs method)": [[265, "mne.Epochs.plot_topo_image"]], "proj (mne.epochs property)": [[265, "mne.Epochs.proj"]], "rename_channels() (mne.epochs method)": [[265, "mne.Epochs.rename_channels"]], "reorder_channels() (mne.epochs method)": [[265, "mne.Epochs.reorder_channels"]], "resample() (mne.epochs method)": [[265, "mne.Epochs.resample"]], "reset_drop_log_selection() (mne.epochs method)": [[265, "mne.Epochs.reset_drop_log_selection"]], "save() (mne.epochs method)": [[265, "mne.Epochs.save"]], "savgol_filter() (mne.epochs method)": [[265, "mne.Epochs.savgol_filter"]], "set_annotations() (mne.epochs method)": [[265, "mne.Epochs.set_annotations"]], "set_channel_types() (mne.epochs method)": [[265, "mne.Epochs.set_channel_types"]], "set_eeg_reference() (mne.epochs method)": [[265, "mne.Epochs.set_eeg_reference"]], "set_meas_date() (mne.epochs method)": [[265, "mne.Epochs.set_meas_date"]], "set_montage() (mne.epochs method)": [[265, "mne.Epochs.set_montage"]], "shift_time() (mne.epochs method)": [[265, "mne.Epochs.shift_time"]], "standard_error() (mne.epochs method)": [[265, "mne.Epochs.standard_error"]], "subtract_evoked() (mne.epochs method)": [[265, "mne.Epochs.subtract_evoked"]], "time_as_index() (mne.epochs method)": [[265, "mne.Epochs.time_as_index"]], "times (mne.epochs property)": [[265, "mne.Epochs.times"]], "tmax (mne.epochs property)": [[265, "mne.Epochs.tmax"]], "tmin (mne.epochs property)": [[265, "mne.Epochs.tmin"]], "to_data_frame() (mne.epochs method)": [[265, "mne.Epochs.to_data_frame"]], "epochsarray (class in mne)": [[266, "mne.EpochsArray"]], "__contains__() (mne.epochsarray method)": [[266, "mne.EpochsArray.__contains__"]], "__getitem__() (mne.epochsarray method)": [[266, "mne.EpochsArray.__getitem__"]], "__iter__() (mne.epochsarray method)": [[266, "mne.EpochsArray.__iter__"]], "__len__() (mne.epochsarray method)": [[266, "mne.EpochsArray.__len__"]], "add_annotations_to_metadata() (mne.epochsarray method)": [[266, "mne.EpochsArray.add_annotations_to_metadata"]], "add_channels() (mne.epochsarray method)": [[266, "mne.EpochsArray.add_channels"]], "add_proj() (mne.epochsarray method)": [[266, "mne.EpochsArray.add_proj"]], "add_reference_channels() (mne.epochsarray method)": [[266, "mne.EpochsArray.add_reference_channels"]], "anonymize() (mne.epochsarray method)": [[266, "mne.EpochsArray.anonymize"]], "apply_baseline() (mne.epochsarray method)": [[266, "mne.EpochsArray.apply_baseline"]], "apply_function() (mne.epochsarray method)": [[266, "mne.EpochsArray.apply_function"]], "apply_hilbert() (mne.epochsarray method)": [[266, "mne.EpochsArray.apply_hilbert"]], "apply_proj() (mne.epochsarray method)": [[266, "mne.EpochsArray.apply_proj"]], "as_type() (mne.epochsarray method)": [[266, "mne.EpochsArray.as_type"]], "average() (mne.epochsarray method)": [[266, "mne.EpochsArray.average"]], "ch_names (mne.epochsarray property)": [[266, "mne.EpochsArray.ch_names"]], "compensation_grade (mne.epochsarray property)": [[266, "mne.EpochsArray.compensation_grade"]], "compute_psd() (mne.epochsarray method)": [[266, "mne.EpochsArray.compute_psd"]], "copy() (mne.epochsarray method)": [[266, "mne.EpochsArray.copy"]], "crop() (mne.epochsarray method)": [[266, "mne.EpochsArray.crop"]], "decimate() (mne.epochsarray method)": [[266, "mne.EpochsArray.decimate"]], "del_proj() (mne.epochsarray method)": [[266, "mne.EpochsArray.del_proj"]], "drop() (mne.epochsarray method)": [[266, "mne.EpochsArray.drop"]], "drop_bad() (mne.epochsarray method)": [[266, "mne.EpochsArray.drop_bad"]], "drop_channels() (mne.epochsarray method)": [[266, "mne.EpochsArray.drop_channels"]], "drop_log_stats() (mne.epochsarray method)": [[266, "mne.EpochsArray.drop_log_stats"]], "equalize_event_counts() (mne.epochsarray method)": [[266, "mne.EpochsArray.equalize_event_counts"]], "export() (mne.epochsarray method)": [[266, "mne.EpochsArray.export"]], "filename (mne.epochsarray property)": [[266, "mne.EpochsArray.filename"]], "filter() (mne.epochsarray method)": [[266, "mne.EpochsArray.filter"]], "get_annotations_per_epoch() (mne.epochsarray method)": [[266, "mne.EpochsArray.get_annotations_per_epoch"]], "get_channel_types() (mne.epochsarray method)": [[266, "mne.EpochsArray.get_channel_types"]], "get_data() (mne.epochsarray method)": [[266, "mne.EpochsArray.get_data"]], "get_montage() (mne.epochsarray method)": [[266, "mne.EpochsArray.get_montage"]], "interpolate_bads() (mne.epochsarray method)": [[266, "mne.EpochsArray.interpolate_bads"]], "iter_evoked() (mne.epochsarray method)": [[266, "mne.EpochsArray.iter_evoked"]], "load_data() (mne.epochsarray method)": [[266, "mne.EpochsArray.load_data"]], "metadata (mne.epochsarray property)": [[266, "mne.EpochsArray.metadata"]], "next() (mne.epochsarray method)": [[266, "mne.EpochsArray.next"]], "pick() (mne.epochsarray method)": [[266, "mne.EpochsArray.pick"]], "pick_channels() (mne.epochsarray method)": [[266, "mne.EpochsArray.pick_channels"]], "pick_types() (mne.epochsarray method)": [[266, "mne.EpochsArray.pick_types"]], "plot() (mne.epochsarray method)": [[266, "mne.EpochsArray.plot"]], "plot_drop_log() (mne.epochsarray method)": [[266, "mne.EpochsArray.plot_drop_log"]], "plot_image() (mne.epochsarray method)": [[266, "mne.EpochsArray.plot_image"]], "plot_projs_topomap() (mne.epochsarray method)": [[266, "mne.EpochsArray.plot_projs_topomap"]], "plot_psd() (mne.epochsarray method)": [[266, "mne.EpochsArray.plot_psd"]], "plot_psd_topo() (mne.epochsarray method)": [[266, "mne.EpochsArray.plot_psd_topo"]], "plot_psd_topomap() (mne.epochsarray method)": [[266, "mne.EpochsArray.plot_psd_topomap"]], "plot_sensors() (mne.epochsarray method)": [[266, "mne.EpochsArray.plot_sensors"]], "plot_topo_image() (mne.epochsarray method)": [[266, "mne.EpochsArray.plot_topo_image"]], "proj (mne.epochsarray property)": [[266, "mne.EpochsArray.proj"]], "rename_channels() (mne.epochsarray method)": [[266, "mne.EpochsArray.rename_channels"]], "reorder_channels() (mne.epochsarray method)": [[266, "mne.EpochsArray.reorder_channels"]], "resample() (mne.epochsarray method)": [[266, "mne.EpochsArray.resample"]], "reset_drop_log_selection() (mne.epochsarray method)": [[266, "mne.EpochsArray.reset_drop_log_selection"]], "save() (mne.epochsarray method)": [[266, "mne.EpochsArray.save"]], "savgol_filter() (mne.epochsarray method)": [[266, "mne.EpochsArray.savgol_filter"]], "set_annotations() (mne.epochsarray method)": [[266, "mne.EpochsArray.set_annotations"]], "set_channel_types() (mne.epochsarray method)": [[266, "mne.EpochsArray.set_channel_types"]], "set_eeg_reference() (mne.epochsarray method)": [[266, "mne.EpochsArray.set_eeg_reference"]], "set_meas_date() (mne.epochsarray method)": [[266, "mne.EpochsArray.set_meas_date"]], "set_montage() (mne.epochsarray method)": [[266, "mne.EpochsArray.set_montage"]], "shift_time() (mne.epochsarray method)": [[266, "mne.EpochsArray.shift_time"]], "standard_error() (mne.epochsarray method)": [[266, "mne.EpochsArray.standard_error"]], "subtract_evoked() (mne.epochsarray method)": [[266, "mne.EpochsArray.subtract_evoked"]], "time_as_index() (mne.epochsarray method)": [[266, "mne.EpochsArray.time_as_index"]], "times (mne.epochsarray property)": [[266, "mne.EpochsArray.times"]], "tmax (mne.epochsarray property)": [[266, "mne.EpochsArray.tmax"]], "tmin (mne.epochsarray property)": [[266, "mne.EpochsArray.tmin"]], "to_data_frame() (mne.epochsarray method)": [[266, "mne.EpochsArray.to_data_frame"]], "evoked (class in mne)": [[267, "mne.Evoked"]], "__contains__() (mne.evoked method)": [[267, "mne.Evoked.__contains__"]], "__neg__() (mne.evoked method)": [[267, "mne.Evoked.__neg__"]], "add_channels() (mne.evoked method)": [[267, "mne.Evoked.add_channels"]], "add_proj() (mne.evoked method)": [[267, "mne.Evoked.add_proj"]], "add_reference_channels() (mne.evoked method)": [[267, "mne.Evoked.add_reference_channels"]], "animate_topomap() (mne.evoked method)": [[267, "mne.Evoked.animate_topomap"]], "anonymize() (mne.evoked method)": [[267, "mne.Evoked.anonymize"]], "apply_baseline() (mne.evoked method)": [[267, "mne.Evoked.apply_baseline"]], "apply_function() (mne.evoked method)": [[267, "mne.Evoked.apply_function"]], "apply_hilbert() (mne.evoked method)": [[267, "mne.Evoked.apply_hilbert"]], "apply_proj() (mne.evoked method)": [[267, "mne.Evoked.apply_proj"]], "as_type() (mne.evoked method)": [[267, "mne.Evoked.as_type"]], "ch_names (mne.evoked property)": [[267, "mne.Evoked.ch_names"]], "compensation_grade (mne.evoked property)": [[267, "mne.Evoked.compensation_grade"]], "compute_psd() (mne.evoked method)": [[267, "mne.Evoked.compute_psd"]], "copy() (mne.evoked method)": [[267, "mne.Evoked.copy"]], "crop() (mne.evoked method)": [[267, "mne.Evoked.crop"]], "data (mne.evoked property)": [[267, "mne.Evoked.data"]], "decimate() (mne.evoked method)": [[267, "mne.Evoked.decimate"]], "del_proj() (mne.evoked method)": [[267, "mne.Evoked.del_proj"]], "detrend() (mne.evoked method)": [[267, "mne.Evoked.detrend"]], "drop_channels() (mne.evoked method)": [[267, "mne.Evoked.drop_channels"]], "export() (mne.evoked method)": [[267, "mne.Evoked.export"]], "filter() (mne.evoked method)": [[267, "mne.Evoked.filter"]], "get_channel_types() (mne.evoked method)": [[267, "mne.Evoked.get_channel_types"]], "get_data() (mne.evoked method)": [[267, "mne.Evoked.get_data"]], "get_montage() (mne.evoked method)": [[267, "mne.Evoked.get_montage"]], "get_peak() (mne.evoked method)": [[267, "mne.Evoked.get_peak"]], "interpolate_bads() (mne.evoked method)": [[267, "mne.Evoked.interpolate_bads"]], "kind (mne.evoked property)": [[267, "mne.Evoked.kind"]], "pick() (mne.evoked method)": [[267, "mne.Evoked.pick"]], "pick_channels() (mne.evoked method)": [[267, "mne.Evoked.pick_channels"]], "pick_types() (mne.evoked method)": [[267, "mne.Evoked.pick_types"]], "plot() (mne.evoked method)": [[267, "mne.Evoked.plot"]], "plot_field() (mne.evoked method)": [[267, "mne.Evoked.plot_field"]], "plot_image() (mne.evoked method)": [[267, "mne.Evoked.plot_image"]], "plot_joint() (mne.evoked method)": [[267, "mne.Evoked.plot_joint"]], "plot_projs_topomap() (mne.evoked method)": [[267, "mne.Evoked.plot_projs_topomap"]], "plot_psd() (mne.evoked method)": [[267, "mne.Evoked.plot_psd"]], "plot_psd_topo() (mne.evoked method)": [[267, "mne.Evoked.plot_psd_topo"]], "plot_psd_topomap() (mne.evoked method)": [[267, "mne.Evoked.plot_psd_topomap"]], "plot_sensors() (mne.evoked method)": [[267, "mne.Evoked.plot_sensors"]], "plot_topo() (mne.evoked method)": [[267, "mne.Evoked.plot_topo"]], "plot_topomap() (mne.evoked method)": [[267, "mne.Evoked.plot_topomap"]], "plot_white() (mne.evoked method)": [[267, "mne.Evoked.plot_white"]], "proj (mne.evoked property)": [[267, "mne.Evoked.proj"]], "rename_channels() (mne.evoked method)": [[267, "mne.Evoked.rename_channels"]], "reorder_channels() (mne.evoked method)": [[267, "mne.Evoked.reorder_channels"]], "resample() (mne.evoked method)": [[267, "mne.Evoked.resample"]], "save() (mne.evoked method)": [[267, "mne.Evoked.save"]], "savgol_filter() (mne.evoked method)": [[267, "mne.Evoked.savgol_filter"]], "set_channel_types() (mne.evoked method)": [[267, "mne.Evoked.set_channel_types"]], "set_eeg_reference() (mne.evoked method)": [[267, "mne.Evoked.set_eeg_reference"]], "set_meas_date() (mne.evoked method)": [[267, "mne.Evoked.set_meas_date"]], "set_montage() (mne.evoked method)": [[267, "mne.Evoked.set_montage"]], "shift_time() (mne.evoked method)": [[267, "mne.Evoked.shift_time"]], "time_as_index() (mne.evoked method)": [[267, "mne.Evoked.time_as_index"]], "times (mne.evoked property)": [[267, "mne.Evoked.times"]], "tmax (mne.evoked property)": [[267, "mne.Evoked.tmax"]], "tmin (mne.evoked property)": [[267, "mne.Evoked.tmin"]], "to_data_frame() (mne.evoked method)": [[267, "mne.Evoked.to_data_frame"]], "evokedarray (class in mne)": [[268, "mne.EvokedArray"]], "__contains__() (mne.evokedarray method)": [[268, "mne.EvokedArray.__contains__"]], "__neg__() (mne.evokedarray method)": [[268, "mne.EvokedArray.__neg__"]], "add_channels() (mne.evokedarray method)": [[268, "mne.EvokedArray.add_channels"]], "add_proj() (mne.evokedarray method)": [[268, "mne.EvokedArray.add_proj"]], "add_reference_channels() (mne.evokedarray method)": [[268, "mne.EvokedArray.add_reference_channels"]], "animate_topomap() (mne.evokedarray method)": [[268, "mne.EvokedArray.animate_topomap"]], "anonymize() (mne.evokedarray method)": [[268, "mne.EvokedArray.anonymize"]], "apply_baseline() (mne.evokedarray method)": [[268, "mne.EvokedArray.apply_baseline"]], "apply_function() (mne.evokedarray method)": [[268, "mne.EvokedArray.apply_function"]], "apply_hilbert() (mne.evokedarray method)": [[268, "mne.EvokedArray.apply_hilbert"]], "apply_proj() (mne.evokedarray method)": [[268, "mne.EvokedArray.apply_proj"]], "as_type() (mne.evokedarray method)": [[268, "mne.EvokedArray.as_type"]], "ch_names (mne.evokedarray property)": [[268, "mne.EvokedArray.ch_names"]], "compensation_grade (mne.evokedarray property)": [[268, "mne.EvokedArray.compensation_grade"]], "compute_psd() (mne.evokedarray method)": [[268, "mne.EvokedArray.compute_psd"]], "copy() (mne.evokedarray method)": [[268, "mne.EvokedArray.copy"]], "crop() (mne.evokedarray method)": [[268, "mne.EvokedArray.crop"]], "data (mne.evokedarray property)": [[268, "mne.EvokedArray.data"]], "decimate() (mne.evokedarray method)": [[268, "mne.EvokedArray.decimate"]], "del_proj() (mne.evokedarray method)": [[268, "mne.EvokedArray.del_proj"]], "detrend() (mne.evokedarray method)": [[268, "mne.EvokedArray.detrend"]], "drop_channels() (mne.evokedarray method)": [[268, "mne.EvokedArray.drop_channels"]], "export() (mne.evokedarray method)": [[268, "mne.EvokedArray.export"]], "filter() (mne.evokedarray method)": [[268, "mne.EvokedArray.filter"]], "get_channel_types() (mne.evokedarray method)": [[268, "mne.EvokedArray.get_channel_types"]], "get_data() (mne.evokedarray method)": [[268, "mne.EvokedArray.get_data"]], "get_montage() (mne.evokedarray method)": [[268, "mne.EvokedArray.get_montage"]], "get_peak() (mne.evokedarray method)": [[268, "mne.EvokedArray.get_peak"]], "interpolate_bads() (mne.evokedarray method)": [[268, "mne.EvokedArray.interpolate_bads"]], "kind (mne.evokedarray property)": [[268, "mne.EvokedArray.kind"]], "pick() (mne.evokedarray method)": [[268, "mne.EvokedArray.pick"]], "pick_channels() (mne.evokedarray method)": [[268, "mne.EvokedArray.pick_channels"]], "pick_types() (mne.evokedarray method)": [[268, "mne.EvokedArray.pick_types"]], "plot() (mne.evokedarray method)": [[268, "mne.EvokedArray.plot"]], "plot_field() (mne.evokedarray method)": [[268, "mne.EvokedArray.plot_field"]], "plot_image() (mne.evokedarray method)": [[268, "mne.EvokedArray.plot_image"]], "plot_joint() (mne.evokedarray method)": [[268, "mne.EvokedArray.plot_joint"]], "plot_projs_topomap() (mne.evokedarray method)": [[268, "mne.EvokedArray.plot_projs_topomap"]], "plot_psd() (mne.evokedarray method)": [[268, "mne.EvokedArray.plot_psd"]], "plot_psd_topo() (mne.evokedarray method)": [[268, "mne.EvokedArray.plot_psd_topo"]], "plot_psd_topomap() (mne.evokedarray method)": [[268, "mne.EvokedArray.plot_psd_topomap"]], "plot_sensors() (mne.evokedarray method)": [[268, "mne.EvokedArray.plot_sensors"]], "plot_topo() (mne.evokedarray method)": [[268, "mne.EvokedArray.plot_topo"]], "plot_topomap() (mne.evokedarray method)": [[268, "mne.EvokedArray.plot_topomap"]], "plot_white() (mne.evokedarray method)": [[268, "mne.EvokedArray.plot_white"]], "proj (mne.evokedarray property)": [[268, "mne.EvokedArray.proj"]], "rename_channels() (mne.evokedarray method)": [[268, "mne.EvokedArray.rename_channels"]], "reorder_channels() (mne.evokedarray method)": [[268, "mne.EvokedArray.reorder_channels"]], "resample() (mne.evokedarray method)": [[268, "mne.EvokedArray.resample"]], "save() (mne.evokedarray method)": [[268, "mne.EvokedArray.save"]], "savgol_filter() (mne.evokedarray method)": [[268, "mne.EvokedArray.savgol_filter"]], "set_channel_types() (mne.evokedarray method)": [[268, "mne.EvokedArray.set_channel_types"]], "set_eeg_reference() (mne.evokedarray method)": [[268, "mne.EvokedArray.set_eeg_reference"]], "set_meas_date() (mne.evokedarray method)": [[268, "mne.EvokedArray.set_meas_date"]], "set_montage() (mne.evokedarray method)": [[268, "mne.EvokedArray.set_montage"]], "shift_time() (mne.evokedarray method)": [[268, "mne.EvokedArray.shift_time"]], "time_as_index() (mne.evokedarray method)": [[268, "mne.EvokedArray.time_as_index"]], "times (mne.evokedarray property)": [[268, "mne.EvokedArray.times"]], "tmax (mne.evokedarray property)": [[268, "mne.EvokedArray.tmax"]], "tmin (mne.evokedarray property)": [[268, "mne.EvokedArray.tmin"]], "to_data_frame() (mne.evokedarray method)": [[268, "mne.EvokedArray.to_data_frame"]], "forward (class in mne)": [[269, "mne.Forward"]], "copy() (mne.forward method)": [[269, "mne.Forward.copy"]], "pick_channels() (mne.forward method)": [[269, "mne.Forward.pick_channels"]], "info (class in mne)": [[270, "mne.Info"]], "__contains__() (mne.info method)": [[270, "mne.Info.__contains__"]], "__getitem__() (mne.info method)": [[270, "mne.Info.__getitem__"]], "__iter__() (mne.info method)": [[270, "mne.Info.__iter__"]], "__len__() (mne.info method)": [[270, "mne.Info.__len__"]], "clear() (mne.info method)": [[270, "mne.Info.clear"]], "compensation_grade (mne.info property)": [[270, "mne.Info.compensation_grade"]], "copy() (mne.info method)": [[270, "mne.Info.copy"]], "fromkeys() (mne.info method)": [[270, "mne.Info.fromkeys"]], "get() (mne.info method)": [[270, "mne.Info.get"]], "get_channel_types() (mne.info method)": [[270, "mne.Info.get_channel_types"]], "get_montage() (mne.info method)": [[270, "mne.Info.get_montage"]], "items() (mne.info method)": [[270, "mne.Info.items"]], "keys() (mne.info method)": [[270, "mne.Info.keys"]], "normalize_proj() (mne.info method)": [[270, "mne.Info.normalize_proj"]], "pop() (mne.info method)": [[270, "mne.Info.pop"]], "popitem() (mne.info method)": [[270, "mne.Info.popitem"]], "save() (mne.info method)": [[270, "mne.Info.save"]], "set_montage() (mne.info method)": [[270, "mne.Info.set_montage"]], "setdefault() (mne.info method)": [[270, "mne.Info.setdefault"]], "update() (mne.info method)": [[270, "mne.Info.update"]], "values() (mne.info method)": [[270, "mne.Info.values"]], "label (class in mne)": [[271, "mne.Label"]], "__add__() (mne.label method)": [[271, "mne.Label.__add__"]], "__len__() (mne.label method)": [[271, "mne.Label.__len__"]], "__sub__() (mne.label method)": [[271, "mne.Label.__sub__"]], "center_of_mass() (mne.label method)": [[271, "mne.Label.center_of_mass"]], "compute_area() (mne.label method)": [[271, "mne.Label.compute_area"]], "copy() (mne.label method)": [[271, "mne.Label.copy"]], "distances_to_outside() (mne.label method)": [[271, "mne.Label.distances_to_outside"]], "fill() (mne.label method)": [[271, "mne.Label.fill"]], "get_tris() (mne.label method)": [[271, "mne.Label.get_tris"]], "get_vertices_used() (mne.label method)": [[271, "mne.Label.get_vertices_used"]], "morph() (mne.label method)": [[271, "mne.Label.morph"]], "restrict() (mne.label method)": [[271, "mne.Label.restrict"]], "save() (mne.label method)": [[271, "mne.Label.save"]], "smooth() (mne.label method)": [[271, "mne.Label.smooth"]], "split() (mne.label method)": [[271, "mne.Label.split"]], "mixedsourceestimate (class in mne)": [[272, "mne.MixedSourceEstimate"]], "__add__() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.__add__"]], "__div__() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.__div__"]], "__mul__() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.__mul__"]], "__neg__() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.__neg__"]], "__sub__() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.__sub__"]], "apply_baseline() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.apply_baseline"]], "bin() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.bin"]], "copy() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.copy"]], "crop() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.crop"]], "data (mne.mixedsourceestimate property)": [[272, "mne.MixedSourceEstimate.data"]], "decimate() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.decimate"]], "extract_label_time_course() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.extract_label_time_course"]], "get_peak() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.get_peak"]], "mean() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.mean"]], "plot() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.plot"]], "resample() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.resample"]], "save() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.save"]], "sfreq (mne.mixedsourceestimate property)": [[272, "mne.MixedSourceEstimate.sfreq"]], "shape (mne.mixedsourceestimate property)": [[272, "mne.MixedSourceEstimate.shape"]], "shift_time() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.shift_time"]], "sqrt() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.sqrt"]], "sum() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.sum"]], "surface() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.surface"]], "time_as_index() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.time_as_index"]], "times (mne.mixedsourceestimate property)": [[272, "mne.MixedSourceEstimate.times"]], "tmax (mne.mixedsourceestimate property)": [[272, "mne.MixedSourceEstimate.tmax"]], "tmin (mne.mixedsourceestimate property)": [[272, "mne.MixedSourceEstimate.tmin"]], "to_data_frame() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.to_data_frame"]], "transform() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.transform"]], "transform_data() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.transform_data"]], "tstep (mne.mixedsourceestimate property)": [[272, "mne.MixedSourceEstimate.tstep"]], "volume() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.volume"]], "mixedvectorsourceestimate (class in mne)": [[273, "mne.MixedVectorSourceEstimate"]], "__add__() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.__add__"]], "__div__() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.__div__"]], "__mul__() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.__mul__"]], "__neg__() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.__neg__"]], "__sub__() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.__sub__"]], "apply_baseline() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.apply_baseline"]], "bin() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.bin"]], "copy() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.copy"]], "crop() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.crop"]], "data (mne.mixedvectorsourceestimate property)": [[273, "mne.MixedVectorSourceEstimate.data"]], "decimate() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.decimate"]], "extract_label_time_course() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.extract_label_time_course"]], "get_peak() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.get_peak"]], "magnitude() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.magnitude"]], "mean() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.mean"]], "plot() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.plot"]], "project() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.project"]], "resample() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.resample"]], "save() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.save"]], "sfreq (mne.mixedvectorsourceestimate property)": [[273, "mne.MixedVectorSourceEstimate.sfreq"]], "shape (mne.mixedvectorsourceestimate property)": [[273, "mne.MixedVectorSourceEstimate.shape"]], "shift_time() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.shift_time"]], "sqrt() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.sqrt"]], "sum() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.sum"]], "surface() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.surface"]], "time_as_index() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.time_as_index"]], "times (mne.mixedvectorsourceestimate property)": [[273, "mne.MixedVectorSourceEstimate.times"]], "tmax (mne.mixedvectorsourceestimate property)": [[273, "mne.MixedVectorSourceEstimate.tmax"]], "tmin (mne.mixedvectorsourceestimate property)": [[273, "mne.MixedVectorSourceEstimate.tmin"]], "to_data_frame() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.to_data_frame"]], "transform() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.transform"]], "transform_data() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.transform_data"]], "tstep (mne.mixedvectorsourceestimate property)": [[273, "mne.MixedVectorSourceEstimate.tstep"]], "volume() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.volume"]], "projection (class in mne)": [[274, "mne.Projection"]], "__contains__() (mne.projection method)": [[274, "mne.Projection.__contains__"]], "__getitem__() (mne.projection method)": [[274, "mne.Projection.__getitem__"]], "__iter__() (mne.projection method)": [[274, "mne.Projection.__iter__"]], "__len__() (mne.projection method)": [[274, "mne.Projection.__len__"]], "clear() (mne.projection method)": [[274, "mne.Projection.clear"]], "copy() (mne.projection method)": [[274, "mne.Projection.copy"]], "fromkeys() (mne.projection method)": [[274, "mne.Projection.fromkeys"]], "get() (mne.projection method)": [[274, "mne.Projection.get"]], "items() (mne.projection method)": [[274, "mne.Projection.items"]], "keys() (mne.projection method)": [[274, "mne.Projection.keys"]], "plot_topomap() (mne.projection method)": [[274, "mne.Projection.plot_topomap"]], "pop() (mne.projection method)": [[274, "mne.Projection.pop"]], "popitem() (mne.projection method)": [[274, "mne.Projection.popitem"]], "setdefault() (mne.projection method)": [[274, "mne.Projection.setdefault"]], "update() (mne.projection method)": [[274, "mne.Projection.update"]], "values() (mne.projection method)": [[274, "mne.Projection.values"]], "report (class in mne)": [[275, "mne.Report"]], "__len__() (mne.report method)": [[275, "mne.Report.__len__"]], "add_bem() (mne.report method)": [[275, "mne.Report.add_bem"]], "add_code() (mne.report method)": [[275, "mne.Report.add_code"]], "add_covariance() (mne.report method)": [[275, "mne.Report.add_covariance"]], "add_custom_css() (mne.report method)": [[275, "mne.Report.add_custom_css"]], "add_custom_js() (mne.report method)": [[275, "mne.Report.add_custom_js"]], "add_epochs() (mne.report method)": [[275, "mne.Report.add_epochs"]], "add_events() (mne.report method)": [[275, "mne.Report.add_events"]], "add_evokeds() (mne.report method)": [[275, "mne.Report.add_evokeds"]], "add_figure() (mne.report method)": [[275, "mne.Report.add_figure"]], "add_forward() (mne.report method)": [[275, "mne.Report.add_forward"]], "add_html() (mne.report method)": [[275, "mne.Report.add_html"]], "add_ica() (mne.report method)": [[275, "mne.Report.add_ica"]], "add_image() (mne.report method)": [[275, "mne.Report.add_image"]], "add_inverse_operator() (mne.report method)": [[275, "mne.Report.add_inverse_operator"]], "add_projs() (mne.report method)": [[275, "mne.Report.add_projs"]], "add_raw() (mne.report method)": [[275, "mne.Report.add_raw"]], "add_stc() (mne.report method)": [[275, "mne.Report.add_stc"]], "add_sys_info() (mne.report method)": [[275, "mne.Report.add_sys_info"]], "add_trans() (mne.report method)": [[275, "mne.Report.add_trans"]], "html (mne.report property)": [[275, "mne.Report.html"]], "parse_folder() (mne.report method)": [[275, "mne.Report.parse_folder"]], "remove() (mne.report method)": [[275, "mne.Report.remove"]], "save() (mne.report method)": [[275, "mne.Report.save"]], "tags (mne.report property)": [[275, "mne.Report.tags"]], "sourceestimate (class in mne)": [[276, "mne.SourceEstimate"]], "__add__() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.__add__"]], "__div__() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.__div__"]], "__mul__() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.__mul__"]], "__neg__() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.__neg__"]], "__sub__() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.__sub__"]], "apply_baseline() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.apply_baseline"]], "bin() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.bin"]], "center_of_mass() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.center_of_mass"]], "copy() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.copy"]], "crop() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.crop"]], "data (mne.sourceestimate property)": [[276, "mne.SourceEstimate.data"]], "decimate() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.decimate"]], "estimate_snr() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.estimate_snr"]], "expand() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.expand"]], "extract_label_time_course() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.extract_label_time_course"]], "get_peak() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.get_peak"]], "in_label() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.in_label"]], "lh_data (mne.sourceestimate property)": [[276, "mne.SourceEstimate.lh_data"]], "lh_vertno (mne.sourceestimate property)": [[276, "mne.SourceEstimate.lh_vertno"]], "mean() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.mean"]], "plot() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.plot"]], "resample() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.resample"]], "rh_data (mne.sourceestimate property)": [[276, "mne.SourceEstimate.rh_data"]], "rh_vertno (mne.sourceestimate property)": [[276, "mne.SourceEstimate.rh_vertno"]], "save() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.save"]], "sfreq (mne.sourceestimate property)": [[276, "mne.SourceEstimate.sfreq"]], "shape (mne.sourceestimate property)": [[276, "mne.SourceEstimate.shape"]], "shift_time() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.shift_time"]], "sqrt() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.sqrt"]], "sum() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.sum"]], "time_as_index() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.time_as_index"]], "times (mne.sourceestimate property)": [[276, "mne.SourceEstimate.times"]], "tmax (mne.sourceestimate property)": [[276, "mne.SourceEstimate.tmax"]], "tmin (mne.sourceestimate property)": [[276, "mne.SourceEstimate.tmin"]], "to_data_frame() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.to_data_frame"]], "to_original_src() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.to_original_src"]], "transform() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.transform"]], "transform_data() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.transform_data"]], "tstep (mne.sourceestimate property)": [[276, "mne.SourceEstimate.tstep"]], "sourcemorph (class in mne)": [[277, "mne.SourceMorph"]], "apply() (mne.sourcemorph method)": [[277, "mne.SourceMorph.apply"]], "compute_vol_morph_mat() (mne.sourcemorph method)": [[277, "mne.SourceMorph.compute_vol_morph_mat"]], "save() (mne.sourcemorph method)": [[277, "mne.SourceMorph.save"]], "sourcespaces (class in mne)": [[278, "mne.SourceSpaces"]], "__add__() (mne.sourcespaces method)": [[278, "mne.SourceSpaces.__add__"]], "__getitem__() (mne.sourcespaces method)": [[278, "mne.SourceSpaces.__getitem__"]], "copy() (mne.sourcespaces method)": [[278, "mne.SourceSpaces.copy"]], "export_volume() (mne.sourcespaces method)": [[278, "mne.SourceSpaces.export_volume"]], "plot() (mne.sourcespaces method)": [[278, "mne.SourceSpaces.plot"]], "save() (mne.sourcespaces method)": [[278, "mne.SourceSpaces.save"]], "vectorsourceestimate (class in mne)": [[279, "mne.VectorSourceEstimate"]], "__add__() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.__add__"]], "__div__() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.__div__"]], "__mul__() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.__mul__"]], "__neg__() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.__neg__"]], "__sub__() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.__sub__"]], "apply_baseline() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.apply_baseline"]], "bin() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.bin"]], "copy() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.copy"]], "crop() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.crop"]], "data (mne.vectorsourceestimate property)": [[279, "mne.VectorSourceEstimate.data"]], "decimate() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.decimate"]], "expand() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.expand"]], "extract_label_time_course() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.extract_label_time_course"]], "get_peak() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.get_peak"]], "in_label() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.in_label"]], "lh_data (mne.vectorsourceestimate property)": [[279, "mne.VectorSourceEstimate.lh_data"]], "lh_vertno (mne.vectorsourceestimate property)": [[279, "mne.VectorSourceEstimate.lh_vertno"]], "magnitude() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.magnitude"]], "mean() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.mean"]], "plot() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.plot"]], "project() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.project"]], "resample() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.resample"]], "rh_data (mne.vectorsourceestimate property)": [[279, "mne.VectorSourceEstimate.rh_data"]], "rh_vertno (mne.vectorsourceestimate property)": [[279, "mne.VectorSourceEstimate.rh_vertno"]], "save() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.save"]], "sfreq (mne.vectorsourceestimate property)": [[279, "mne.VectorSourceEstimate.sfreq"]], "shape (mne.vectorsourceestimate property)": [[279, "mne.VectorSourceEstimate.shape"]], "shift_time() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.shift_time"]], "sqrt() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.sqrt"]], "sum() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.sum"]], "time_as_index() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.time_as_index"]], "times (mne.vectorsourceestimate property)": [[279, "mne.VectorSourceEstimate.times"]], "tmax (mne.vectorsourceestimate property)": [[279, "mne.VectorSourceEstimate.tmax"]], "tmin (mne.vectorsourceestimate property)": [[279, "mne.VectorSourceEstimate.tmin"]], "to_data_frame() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.to_data_frame"]], "to_original_src() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.to_original_src"]], "transform() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.transform"]], "transform_data() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.transform_data"]], "tstep (mne.vectorsourceestimate property)": [[279, "mne.VectorSourceEstimate.tstep"]], "volsourceestimate (class in mne)": [[280, "mne.VolSourceEstimate"]], "__add__() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.__add__"]], "__div__() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.__div__"]], "__mul__() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.__mul__"]], "__neg__() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.__neg__"]], "__sub__() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.__sub__"]], "apply_baseline() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.apply_baseline"]], "as_volume() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.as_volume"]], "bin() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.bin"]], "copy() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.copy"]], "crop() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.crop"]], "data (mne.volsourceestimate property)": [[280, "mne.VolSourceEstimate.data"]], "decimate() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.decimate"]], "extract_label_time_course() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.extract_label_time_course"]], "get_peak() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.get_peak"]], "in_label() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.in_label"]], "mean() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.mean"]], "plot() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.plot"]], "plot_3d() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.plot_3d"]], "resample() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.resample"]], "save() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.save"]], "save_as_volume() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.save_as_volume"]], "sfreq (mne.volsourceestimate property)": [[280, "mne.VolSourceEstimate.sfreq"]], "shape (mne.volsourceestimate property)": [[280, "mne.VolSourceEstimate.shape"]], "shift_time() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.shift_time"]], "sqrt() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.sqrt"]], "sum() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.sum"]], "time_as_index() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.time_as_index"]], "times (mne.volsourceestimate property)": [[280, "mne.VolSourceEstimate.times"]], "tmax (mne.volsourceestimate property)": [[280, "mne.VolSourceEstimate.tmax"]], "tmin (mne.volsourceestimate property)": [[280, "mne.VolSourceEstimate.tmin"]], "to_data_frame() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.to_data_frame"]], "transform() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.transform"]], "transform_data() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.transform_data"]], "tstep (mne.volsourceestimate property)": [[280, "mne.VolSourceEstimate.tstep"]], "volvectorsourceestimate (class in mne)": [[281, "mne.VolVectorSourceEstimate"]], "__add__() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.__add__"]], "__div__() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.__div__"]], "__mul__() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.__mul__"]], "__neg__() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.__neg__"]], "__sub__() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.__sub__"]], "apply_baseline() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.apply_baseline"]], "as_volume() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.as_volume"]], "bin() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.bin"]], "copy() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.copy"]], "crop() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.crop"]], "data (mne.volvectorsourceestimate property)": [[281, "mne.VolVectorSourceEstimate.data"]], "decimate() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.decimate"]], "extract_label_time_course() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.extract_label_time_course"]], "get_peak() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.get_peak"]], "in_label() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.in_label"]], "magnitude() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.magnitude"]], "mean() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.mean"]], "plot() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.plot"]], "plot_3d() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.plot_3d"]], "project() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.project"]], "resample() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.resample"]], "save() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.save"]], "save_as_volume() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.save_as_volume"]], "sfreq (mne.volvectorsourceestimate property)": [[281, "mne.VolVectorSourceEstimate.sfreq"]], "shape (mne.volvectorsourceestimate property)": [[281, "mne.VolVectorSourceEstimate.shape"]], "shift_time() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.shift_time"]], "sqrt() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.sqrt"]], "sum() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.sum"]], "time_as_index() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.time_as_index"]], "times (mne.volvectorsourceestimate property)": [[281, "mne.VolVectorSourceEstimate.times"]], "tmax (mne.volvectorsourceestimate property)": [[281, "mne.VolVectorSourceEstimate.tmax"]], "tmin (mne.volvectorsourceestimate property)": [[281, "mne.VolVectorSourceEstimate.tmin"]], "to_data_frame() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.to_data_frame"]], "transform() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.transform"]], "transform_data() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.transform_data"]], "tstep (mne.volvectorsourceestimate property)": [[281, "mne.VolVectorSourceEstimate.tstep"]], "add_reference_channels() (in module mne)": [[282, "mne.add_reference_channels"]], "add_source_space_distances() (in module mne)": [[283, "mne.add_source_space_distances"]], "annotations_from_events() (in module mne)": [[284, "mne.annotations_from_events"]], "apply_forward() (in module mne)": [[285, "mne.apply_forward"]], "apply_forward_raw() (in module mne)": [[286, "mne.apply_forward_raw"]], "average_forward_solutions() (in module mne)": [[287, "mne.average_forward_solutions"]], "rescale() (in module mne.baseline)": [[288, "mne.baseline.rescale"]], "beamformer (class in mne.beamformer)": [[289, "mne.beamformer.Beamformer"]], "__contains__() (mne.beamformer.beamformer method)": [[289, "mne.beamformer.Beamformer.__contains__"]], "__getitem__() (mne.beamformer.beamformer method)": [[289, "mne.beamformer.Beamformer.__getitem__"]], "__iter__() (mne.beamformer.beamformer method)": [[289, "mne.beamformer.Beamformer.__iter__"]], "__len__() (mne.beamformer.beamformer method)": [[289, "mne.beamformer.Beamformer.__len__"]], "clear() (mne.beamformer.beamformer method)": [[289, "mne.beamformer.Beamformer.clear"]], "copy() (mne.beamformer.beamformer method)": [[289, "mne.beamformer.Beamformer.copy"]], "fromkeys() (mne.beamformer.beamformer method)": [[289, "mne.beamformer.Beamformer.fromkeys"]], "get() (mne.beamformer.beamformer method)": [[289, "mne.beamformer.Beamformer.get"]], "items() (mne.beamformer.beamformer method)": [[289, "mne.beamformer.Beamformer.items"]], "keys() (mne.beamformer.beamformer method)": [[289, "mne.beamformer.Beamformer.keys"]], "pop() (mne.beamformer.beamformer method)": [[289, "mne.beamformer.Beamformer.pop"]], "popitem() (mne.beamformer.beamformer method)": [[289, "mne.beamformer.Beamformer.popitem"]], "save() (mne.beamformer.beamformer method)": [[289, "mne.beamformer.Beamformer.save"]], "setdefault() (mne.beamformer.beamformer method)": [[289, "mne.beamformer.Beamformer.setdefault"]], "update() (mne.beamformer.beamformer method)": [[289, "mne.beamformer.Beamformer.update"]], "values() (mne.beamformer.beamformer method)": [[289, "mne.beamformer.Beamformer.values"]], "apply_dics() (in module mne.beamformer)": [[290, "mne.beamformer.apply_dics"]], "apply_dics_csd() (in module mne.beamformer)": [[291, "mne.beamformer.apply_dics_csd"]], "apply_dics_epochs() (in module mne.beamformer)": [[292, "mne.beamformer.apply_dics_epochs"]], "apply_dics_tfr_epochs() (in module mne.beamformer)": [[293, "mne.beamformer.apply_dics_tfr_epochs"]], "apply_lcmv() (in module mne.beamformer)": [[294, "mne.beamformer.apply_lcmv"]], "apply_lcmv_cov() (in module mne.beamformer)": [[295, "mne.beamformer.apply_lcmv_cov"]], "apply_lcmv_epochs() (in module mne.beamformer)": [[296, "mne.beamformer.apply_lcmv_epochs"]], "apply_lcmv_raw() (in module mne.beamformer)": [[297, "mne.beamformer.apply_lcmv_raw"]], "make_dics() (in module mne.beamformer)": [[298, "mne.beamformer.make_dics"]], "make_lcmv() (in module mne.beamformer)": [[299, "mne.beamformer.make_lcmv"]], "make_lcmv_resolution_matrix() (in module mne.beamformer)": [[300, "mne.beamformer.make_lcmv_resolution_matrix"]], "rap_music() (in module mne.beamformer)": [[301, "mne.beamformer.rap_music"]], "read_beamformer() (in module mne.beamformer)": [[302, "mne.beamformer.read_beamformer"]], "trap_music() (in module mne.beamformer)": [[303, "mne.beamformer.trap_music"]], "conductormodel (class in mne.bem)": [[304, "mne.bem.ConductorModel"]], "__contains__() (mne.bem.conductormodel method)": [[304, "mne.bem.ConductorModel.__contains__"]], "__getitem__() (mne.bem.conductormodel method)": [[304, "mne.bem.ConductorModel.__getitem__"]], "__iter__() (mne.bem.conductormodel method)": [[304, "mne.bem.ConductorModel.__iter__"]], "__len__() (mne.bem.conductormodel method)": [[304, "mne.bem.ConductorModel.__len__"]], "clear() (mne.bem.conductormodel method)": [[304, "mne.bem.ConductorModel.clear"]], "copy() (mne.bem.conductormodel method)": [[304, "mne.bem.ConductorModel.copy"]], "fromkeys() (mne.bem.conductormodel method)": [[304, "mne.bem.ConductorModel.fromkeys"]], "get() (mne.bem.conductormodel method)": [[304, "mne.bem.ConductorModel.get"]], "items() (mne.bem.conductormodel method)": [[304, "mne.bem.ConductorModel.items"]], "keys() (mne.bem.conductormodel method)": [[304, "mne.bem.ConductorModel.keys"]], "pop() (mne.bem.conductormodel method)": [[304, "mne.bem.ConductorModel.pop"]], "popitem() (mne.bem.conductormodel method)": [[304, "mne.bem.ConductorModel.popitem"]], "radius (mne.bem.conductormodel property)": [[304, "mne.bem.ConductorModel.radius"]], "setdefault() (mne.bem.conductormodel method)": [[304, "mne.bem.ConductorModel.setdefault"]], "update() (mne.bem.conductormodel method)": [[304, "mne.bem.ConductorModel.update"]], "values() (mne.bem.conductormodel method)": [[304, "mne.bem.ConductorModel.values"]], "convert_flash_mris() (in module mne.bem)": [[305, "mne.bem.convert_flash_mris"]], "distance_to_bem() (in module mne.bem)": [[306, "mne.bem.distance_to_bem"]], "fit_sphere_to_headshape() (in module mne.bem)": [[307, "mne.bem.fit_sphere_to_headshape"]], "get_fitting_dig() (in module mne.bem)": [[308, "mne.bem.get_fitting_dig"]], "make_flash_bem() (in module mne.bem)": [[309, "mne.bem.make_flash_bem"]], "make_scalp_surfaces() (in module mne.bem)": [[310, "mne.bem.make_scalp_surfaces"]], "make_watershed_bem() (in module mne.bem)": [[311, "mne.bem.make_watershed_bem"]], "channel_indices_by_type() (in module mne)": [[312, "mne.channel_indices_by_type"]], "channel_type() (in module mne)": [[313, "mne.channel_type"]], "digmontage (class in mne.channels)": [[314, "mne.channels.DigMontage"]], "__add__() (mne.channels.digmontage method)": [[314, "mne.channels.DigMontage.__add__"]], "add_estimated_fiducials() (mne.channels.digmontage method)": [[314, "mne.channels.DigMontage.add_estimated_fiducials"]], "add_mni_fiducials() (mne.channels.digmontage method)": [[314, "mne.channels.DigMontage.add_mni_fiducials"]], "apply_trans() (mne.channels.digmontage method)": [[314, "mne.channels.DigMontage.apply_trans"]], "copy() (mne.channels.digmontage method)": [[314, "mne.channels.DigMontage.copy"]], "get_positions() (mne.channels.digmontage method)": [[314, "mne.channels.DigMontage.get_positions"]], "plot() (mne.channels.digmontage method)": [[314, "mne.channels.DigMontage.plot"]], "remove_fiducials() (mne.channels.digmontage method)": [[314, "mne.channels.DigMontage.remove_fiducials"]], "rename_channels() (mne.channels.digmontage method)": [[314, "mne.channels.DigMontage.rename_channels"]], "save() (mne.channels.digmontage method)": [[314, "mne.channels.DigMontage.save"]], "layout (class in mne.channels)": [[315, "mne.channels.Layout"]], "plot() (mne.channels.layout method)": [[315, "mne.channels.Layout.plot"]], "save() (mne.channels.layout method)": [[315, "mne.channels.Layout.save"]], "combine_channels() (in module mne.channels)": [[316, "mne.channels.combine_channels"]], "compute_dev_head_t() (in module mne.channels)": [[317, "mne.channels.compute_dev_head_t"]], "compute_native_head_t() (in module mne.channels)": [[318, "mne.channels.compute_native_head_t"]], "equalize_channels() (in module mne.channels)": [[319, "mne.channels.equalize_channels"]], "find_ch_adjacency() (in module mne.channels)": [[320, "mne.channels.find_ch_adjacency"]], "find_layout() (in module mne.channels)": [[321, "mne.channels.find_layout"]], "fix_mag_coil_types() (in module mne.channels)": [[322, "mne.channels.fix_mag_coil_types"]], "generate_2d_layout() (in module mne.channels)": [[323, "mne.channels.generate_2d_layout"]], "get_builtin_ch_adjacencies() (in module mne.channels)": [[324, "mne.channels.get_builtin_ch_adjacencies"]], "get_builtin_montages() (in module mne.channels)": [[325, "mne.channels.get_builtin_montages"]], "make_1020_channel_selections() (in module mne.channels)": [[326, "mne.channels.make_1020_channel_selections"]], "make_dig_montage() (in module mne.channels)": [[327, "mne.channels.make_dig_montage"]], "make_eeg_layout() (in module mne.channels)": [[328, "mne.channels.make_eeg_layout"]], "make_grid_layout() (in module mne.channels)": [[329, "mne.channels.make_grid_layout"]], "make_standard_montage() (in module mne.channels)": [[330, "mne.channels.make_standard_montage"]], "read_ch_adjacency() (in module mne.channels)": [[331, "mne.channels.read_ch_adjacency"]], "read_custom_montage() (in module mne.channels)": [[332, "mne.channels.read_custom_montage"]], "read_dig_captrak() (in module mne.channels)": [[333, "mne.channels.read_dig_captrak"]], "read_dig_dat() (in module mne.channels)": [[334, "mne.channels.read_dig_dat"]], "read_dig_egi() (in module mne.channels)": [[335, "mne.channels.read_dig_egi"]], "read_dig_fif() (in module mne.channels)": [[336, "mne.channels.read_dig_fif"]], "read_dig_hpts() (in module mne.channels)": [[337, "mne.channels.read_dig_hpts"]], "read_dig_localite() (in module mne.channels)": [[338, "mne.channels.read_dig_localite"]], "read_dig_polhemus_isotrak() (in module mne.channels)": [[339, "mne.channels.read_dig_polhemus_isotrak"]], "read_layout() (in module mne.channels)": [[340, "mne.channels.read_layout"]], "read_polhemus_fastscan() (in module mne.channels)": [[341, "mne.channels.read_polhemus_fastscan"]], "rename_channels() (in module mne.channels)": [[342, "mne.channels.rename_channels"]], "compute_chpi_amplitudes() (in module mne.chpi)": [[343, "mne.chpi.compute_chpi_amplitudes"]], "compute_chpi_locs() (in module mne.chpi)": [[344, "mne.chpi.compute_chpi_locs"]], "compute_chpi_snr() (in module mne.chpi)": [[345, "mne.chpi.compute_chpi_snr"]], "compute_head_pos() (in module mne.chpi)": [[346, "mne.chpi.compute_head_pos"]], "extract_chpi_locs_ctf() (in module mne.chpi)": [[347, "mne.chpi.extract_chpi_locs_ctf"]], "extract_chpi_locs_kit() (in module mne.chpi)": [[348, "mne.chpi.extract_chpi_locs_kit"]], "filter_chpi() (in module mne.chpi)": [[349, "mne.chpi.filter_chpi"]], "get_active_chpi() (in module mne.chpi)": [[350, "mne.chpi.get_active_chpi"]], "get_chpi_info() (in module mne.chpi)": [[351, "mne.chpi.get_chpi_info"]], "head_pos_to_trans_rot_t() (in module mne.chpi)": [[352, "mne.chpi.head_pos_to_trans_rot_t"]], "read_head_pos() (in module mne.chpi)": [[353, "mne.chpi.read_head_pos"]], "write_head_pos() (in module mne.chpi)": [[354, "mne.chpi.write_head_pos"]], "combine_evoked() (in module mne)": [[355, "mne.combine_evoked"]], "compute_covariance() (in module mne)": [[356, "mne.compute_covariance"]], "compute_proj_epochs() (in module mne)": [[357, "mne.compute_proj_epochs"]], "compute_proj_evoked() (in module mne)": [[358, "mne.compute_proj_evoked"]], "compute_proj_raw() (in module mne)": [[359, "mne.compute_proj_raw"]], "compute_rank() (in module mne)": [[360, "mne.compute_rank"]], "compute_raw_covariance() (in module mne)": [[361, "mne.compute_raw_covariance"]], "compute_source_morph() (in module mne)": [[362, "mne.compute_source_morph"]], "concatenate_epochs() (in module mne)": [[363, "mne.concatenate_epochs"]], "concatenate_events() (in module mne)": [[364, "mne.concatenate_events"]], "concatenate_raws() (in module mne)": [[365, "mne.concatenate_raws"]], "convert_forward_solution() (in module mne)": [[366, "mne.convert_forward_solution"]], "coregistration (class in mne.coreg)": [[367, "mne.coreg.Coregistration"]], "compute_dig_mri_distances() (mne.coreg.coregistration method)": [[367, "mne.coreg.Coregistration.compute_dig_mri_distances"]], "fit_fiducials() (mne.coreg.coregistration method)": [[367, "mne.coreg.Coregistration.fit_fiducials"]], "fit_icp() (mne.coreg.coregistration method)": [[367, "mne.coreg.Coregistration.fit_icp"]], "omit_head_shape_points() (mne.coreg.coregistration method)": [[367, "mne.coreg.Coregistration.omit_head_shape_points"]], "reset() (mne.coreg.coregistration method)": [[367, "mne.coreg.Coregistration.reset"]], "scale (mne.coreg.coregistration property)": [[367, "mne.coreg.Coregistration.scale"]], "set_fid_match() (mne.coreg.coregistration method)": [[367, "mne.coreg.Coregistration.set_fid_match"]], "set_grow_hair() (mne.coreg.coregistration method)": [[367, "mne.coreg.Coregistration.set_grow_hair"]], "set_rotation() (mne.coreg.coregistration method)": [[367, "mne.coreg.Coregistration.set_rotation"]], "set_scale() (mne.coreg.coregistration method)": [[367, "mne.coreg.Coregistration.set_scale"]], "set_scale_mode() (mne.coreg.coregistration method)": [[367, "mne.coreg.Coregistration.set_scale_mode"]], "set_translation() (mne.coreg.coregistration method)": [[367, "mne.coreg.Coregistration.set_translation"]], "trans (mne.coreg.coregistration property)": [[367, "mne.coreg.Coregistration.trans"]], "estimate_head_mri_t() (in module mne.coreg)": [[368, "mne.coreg.estimate_head_mri_t"]], "get_mni_fiducials() (in module mne.coreg)": [[369, "mne.coreg.get_mni_fiducials"]], "count_events() (in module mne)": [[370, "mne.count_events"]], "compute_whitener() (in module mne.cov)": [[371, "mne.cov.compute_whitener"]], "prepare_noise_cov() (in module mne.cov)": [[372, "mne.cov.prepare_noise_cov"]], "regularize() (in module mne.cov)": [[373, "mne.cov.regularize"]], "create_default_subject() (in module mne)": [[374, "mne.create_default_subject"]], "create_info() (in module mne)": [[375, "mne.create_info"]], "get_cuda_memory() (in module mne.cuda)": [[376, "mne.cuda.get_cuda_memory"]], "init_cuda() (in module mne.cuda)": [[377, "mne.cuda.init_cuda"]], "set_cuda_device() (in module mne.cuda)": [[378, "mne.cuda.set_cuda_device"]], "data_path() (in module mne.datasets.brainstorm.bst_auditory)": [[379, "mne.datasets.brainstorm.bst_auditory.data_path"]], "data_path() (in module mne.datasets.brainstorm.bst_raw)": [[380, "mne.datasets.brainstorm.bst_raw.data_path"]], "data_path() (in module mne.datasets.brainstorm.bst_resting)": [[381, "mne.datasets.brainstorm.bst_resting.data_path"]], "load_data() (in module mne.datasets.eegbci)": [[382, "mne.datasets.eegbci.load_data"]], "standardize() (in module mne.datasets.eegbci)": [[383, "mne.datasets.eegbci.standardize"]], "data_path() (in module mne.datasets.epilepsy_ecog)": [[384, "mne.datasets.epilepsy_ecog.data_path"]], "data_path() (in module mne.datasets.erp_core)": [[385, "mne.datasets.erp_core.data_path"]], "data_path() (in module mne.datasets.eyelink)": [[386, "mne.datasets.eyelink.data_path"]], "fetch_aparc_sub_parcellation() (in module mne.datasets)": [[387, "mne.datasets.fetch_aparc_sub_parcellation"]], "fetch_dataset() (in module mne.datasets)": [[388, "mne.datasets.fetch_dataset"]], "fetch_fsaverage() (in module mne.datasets)": [[389, "mne.datasets.fetch_fsaverage"]], "fetch_hcp_mmp_parcellation() (in module mne.datasets)": [[390, "mne.datasets.fetch_hcp_mmp_parcellation"]], "fetch_infant_template() (in module mne.datasets)": [[391, "mne.datasets.fetch_infant_template"]], "fetch_phantom() (in module mne.datasets)": [[392, "mne.datasets.fetch_phantom"]], "data_path() (in module mne.datasets.fnirs_motor)": [[393, "mne.datasets.fnirs_motor.data_path"]], "has_dataset() (in module mne.datasets)": [[394, "mne.datasets.has_dataset"]], "data_path() (in module mne.datasets.hf_sef)": [[395, "mne.datasets.hf_sef.data_path"]], "data_path() (in module mne.datasets.kiloword)": [[396, "mne.datasets.kiloword.data_path"]], "load_data() (in module mne.datasets.limo)": [[397, "mne.datasets.limo.load_data"]], "data_path() (in module mne.datasets.misc)": [[398, "mne.datasets.misc.data_path"]], "data_path() (in module mne.datasets.mtrf)": [[399, "mne.datasets.mtrf.data_path"]], "data_path() (in module mne.datasets.multimodal)": [[400, "mne.datasets.multimodal.data_path"]], "data_path() (in module mne.datasets.opm)": [[401, "mne.datasets.opm.data_path"]], "data_path() (in module mne.datasets.phantom_4dbti)": [[402, "mne.datasets.phantom_4dbti.data_path"]], "data_path() (in module mne.datasets.refmeg_noise)": [[403, "mne.datasets.refmeg_noise.data_path"]], "data_path() (in module mne.datasets.sample)": [[404, "mne.datasets.sample.data_path"]], "fetch_data() (in module mne.datasets.sleep_physionet.age)": [[405, "mne.datasets.sleep_physionet.age.fetch_data"]], "fetch_data() (in module mne.datasets.sleep_physionet.temazepam)": [[406, "mne.datasets.sleep_physionet.temazepam.fetch_data"]], "data_path() (in module mne.datasets.somato)": [[407, "mne.datasets.somato.data_path"]], "data_path() (in module mne.datasets.spm_face)": [[408, "mne.datasets.spm_face.data_path"]], "data_path() (in module mne.datasets.ssvep)": [[409, "mne.datasets.ssvep.data_path"]], "data_path() (in module mne.datasets.ucl_opm_auditory)": [[410, "mne.datasets.ucl_opm_auditory.data_path"]], "data_path() (in module mne.datasets.visual_92_categories)": [[411, "mne.datasets.visual_92_categories.data_path"]], "decimate_surface() (in module mne)": [[412, "mne.decimate_surface"]], "csp (class in mne.decoding)": [[413, "mne.decoding.CSP"]], "fit() (mne.decoding.csp method)": [[413, "mne.decoding.CSP.fit"]], "fit_transform() (mne.decoding.csp method)": [[413, "mne.decoding.CSP.fit_transform"]], "get_params() (mne.decoding.csp method)": [[413, "mne.decoding.CSP.get_params"]], "plot_filters() (mne.decoding.csp method)": [[413, "mne.decoding.CSP.plot_filters"]], "plot_patterns() (mne.decoding.csp method)": [[413, "mne.decoding.CSP.plot_patterns"]], "set_params() (mne.decoding.csp method)": [[413, "mne.decoding.CSP.set_params"]], "transform() (mne.decoding.csp method)": [[413, "mne.decoding.CSP.transform"]], "ems (class in mne.decoding)": [[414, "mne.decoding.EMS"]], "fit() (mne.decoding.ems method)": [[414, "mne.decoding.EMS.fit"]], "fit_transform() (mne.decoding.ems method)": [[414, "mne.decoding.EMS.fit_transform"]], "get_params() (mne.decoding.ems method)": [[414, "mne.decoding.EMS.get_params"]], "set_params() (mne.decoding.ems method)": [[414, "mne.decoding.EMS.set_params"]], "transform() (mne.decoding.ems method)": [[414, "mne.decoding.EMS.transform"]], "filterestimator (class in mne.decoding)": [[415, "mne.decoding.FilterEstimator"]], "fit() (mne.decoding.filterestimator method)": [[415, "mne.decoding.FilterEstimator.fit"]], "fit_transform() (mne.decoding.filterestimator method)": [[415, "mne.decoding.FilterEstimator.fit_transform"]], "transform() (mne.decoding.filterestimator method)": [[415, "mne.decoding.FilterEstimator.transform"]], "generalizingestimator (class in mne.decoding)": [[416, "mne.decoding.GeneralizingEstimator"]], "decision_function() (mne.decoding.generalizingestimator method)": [[416, "mne.decoding.GeneralizingEstimator.decision_function"]], "fit() (mne.decoding.generalizingestimator method)": [[416, "mne.decoding.GeneralizingEstimator.fit"]], "fit_transform() (mne.decoding.generalizingestimator method)": [[416, "mne.decoding.GeneralizingEstimator.fit_transform"]], "get_params() (mne.decoding.generalizingestimator method)": [[416, "mne.decoding.GeneralizingEstimator.get_params"]], "predict() (mne.decoding.generalizingestimator method)": [[416, "mne.decoding.GeneralizingEstimator.predict"]], "predict_proba() (mne.decoding.generalizingestimator method)": [[416, "mne.decoding.GeneralizingEstimator.predict_proba"]], "score() (mne.decoding.generalizingestimator method)": [[416, "mne.decoding.GeneralizingEstimator.score"]], "set_params() (mne.decoding.generalizingestimator method)": [[416, "mne.decoding.GeneralizingEstimator.set_params"]], "transform() (mne.decoding.generalizingestimator method)": [[416, "mne.decoding.GeneralizingEstimator.transform"]], "linearmodel (class in mne.decoding)": [[417, "mne.decoding.LinearModel"]], "classes_ (mne.decoding.linearmodel property)": [[417, "mne.decoding.LinearModel.classes_"]], "decision_function() (mne.decoding.linearmodel method)": [[417, "mne.decoding.LinearModel.decision_function"]], "fit() (mne.decoding.linearmodel method)": [[417, "mne.decoding.LinearModel.fit"]], "fit_transform() (mne.decoding.linearmodel method)": [[417, "mne.decoding.LinearModel.fit_transform"]], "get_params() (mne.decoding.linearmodel method)": [[417, "mne.decoding.LinearModel.get_params"]], "predict() (mne.decoding.linearmodel method)": [[417, "mne.decoding.LinearModel.predict"]], "predict_proba() (mne.decoding.linearmodel method)": [[417, "mne.decoding.LinearModel.predict_proba"]], "score() (mne.decoding.linearmodel method)": [[417, "mne.decoding.LinearModel.score"]], "set_params() (mne.decoding.linearmodel method)": [[417, "mne.decoding.LinearModel.set_params"]], "transform() (mne.decoding.linearmodel method)": [[417, "mne.decoding.LinearModel.transform"]], "psdestimator (class in mne.decoding)": [[418, "mne.decoding.PSDEstimator"]], "fit() (mne.decoding.psdestimator method)": [[418, "mne.decoding.PSDEstimator.fit"]], "fit_transform() (mne.decoding.psdestimator method)": [[418, "mne.decoding.PSDEstimator.fit_transform"]], "transform() (mne.decoding.psdestimator method)": [[418, "mne.decoding.PSDEstimator.transform"]], "receptivefield (class in mne.decoding)": [[419, "mne.decoding.ReceptiveField"]], "fit() (mne.decoding.receptivefield method)": [[419, "mne.decoding.ReceptiveField.fit"]], "get_params() (mne.decoding.receptivefield method)": [[419, "mne.decoding.ReceptiveField.get_params"]], "predict() (mne.decoding.receptivefield method)": [[419, "mne.decoding.ReceptiveField.predict"]], "score() (mne.decoding.receptivefield method)": [[419, "mne.decoding.ReceptiveField.score"]], "set_params() (mne.decoding.receptivefield method)": [[419, "mne.decoding.ReceptiveField.set_params"]], "spoc (class in mne.decoding)": [[420, "mne.decoding.SPoC"]], "fit() (mne.decoding.spoc method)": [[420, "mne.decoding.SPoC.fit"]], "fit_transform() (mne.decoding.spoc method)": [[420, "mne.decoding.SPoC.fit_transform"]], "get_params() (mne.decoding.spoc method)": [[420, "mne.decoding.SPoC.get_params"]], "plot_filters() (mne.decoding.spoc method)": [[420, "mne.decoding.SPoC.plot_filters"]], "plot_patterns() (mne.decoding.spoc method)": [[420, "mne.decoding.SPoC.plot_patterns"]], "set_params() (mne.decoding.spoc method)": [[420, "mne.decoding.SPoC.set_params"]], "transform() (mne.decoding.spoc method)": [[420, "mne.decoding.SPoC.transform"]], "ssd (class in mne.decoding)": [[421, "mne.decoding.SSD"]], "apply() (mne.decoding.ssd method)": [[421, "mne.decoding.SSD.apply"]], "fit() (mne.decoding.ssd method)": [[421, "mne.decoding.SSD.fit"]], "fit_transform() (mne.decoding.ssd method)": [[421, "mne.decoding.SSD.fit_transform"]], "get_params() (mne.decoding.ssd method)": [[421, "mne.decoding.SSD.get_params"]], "get_spectral_ratio() (mne.decoding.ssd method)": [[421, "mne.decoding.SSD.get_spectral_ratio"]], "inverse_transform() (mne.decoding.ssd method)": [[421, "mne.decoding.SSD.inverse_transform"]], "set_params() (mne.decoding.ssd method)": [[421, "mne.decoding.SSD.set_params"]], "transform() (mne.decoding.ssd method)": [[421, "mne.decoding.SSD.transform"]], "scaler (class in mne.decoding)": [[422, "mne.decoding.Scaler"]], "fit() (mne.decoding.scaler method)": [[422, "mne.decoding.Scaler.fit"]], "fit_transform() (mne.decoding.scaler method)": [[422, "mne.decoding.Scaler.fit_transform"]], "get_params() (mne.decoding.scaler method)": [[422, "mne.decoding.Scaler.get_params"]], "inverse_transform() (mne.decoding.scaler method)": [[422, "mne.decoding.Scaler.inverse_transform"]], "set_params() (mne.decoding.scaler method)": [[422, "mne.decoding.Scaler.set_params"]], "transform() (mne.decoding.scaler method)": [[422, "mne.decoding.Scaler.transform"]], "slidingestimator (class in mne.decoding)": [[423, "mne.decoding.SlidingEstimator"]], "decision_function() (mne.decoding.slidingestimator method)": [[423, "mne.decoding.SlidingEstimator.decision_function"]], "fit() (mne.decoding.slidingestimator method)": [[423, "mne.decoding.SlidingEstimator.fit"]], "fit_transform() (mne.decoding.slidingestimator method)": [[423, "mne.decoding.SlidingEstimator.fit_transform"]], "get_params() (mne.decoding.slidingestimator method)": [[423, "mne.decoding.SlidingEstimator.get_params"]], "predict() (mne.decoding.slidingestimator method)": [[423, "mne.decoding.SlidingEstimator.predict"]], "predict_proba() (mne.decoding.slidingestimator method)": [[423, "mne.decoding.SlidingEstimator.predict_proba"]], "score() (mne.decoding.slidingestimator method)": [[423, "mne.decoding.SlidingEstimator.score"]], "set_params() (mne.decoding.slidingestimator method)": [[423, "mne.decoding.SlidingEstimator.set_params"]], "transform() (mne.decoding.slidingestimator method)": [[423, "mne.decoding.SlidingEstimator.transform"]], "temporalfilter (class in mne.decoding)": [[424, "mne.decoding.TemporalFilter"]], "fit() (mne.decoding.temporalfilter method)": [[424, "mne.decoding.TemporalFilter.fit"]], "fit_transform() (mne.decoding.temporalfilter method)": [[424, "mne.decoding.TemporalFilter.fit_transform"]], "transform() (mne.decoding.temporalfilter method)": [[424, "mne.decoding.TemporalFilter.transform"]], "timedelayingridge (class in mne.decoding)": [[425, "mne.decoding.TimeDelayingRidge"]], "fit() (mne.decoding.timedelayingridge method)": [[425, "mne.decoding.TimeDelayingRidge.fit"]], "get_params() (mne.decoding.timedelayingridge method)": [[425, "mne.decoding.TimeDelayingRidge.get_params"]], "predict() (mne.decoding.timedelayingridge method)": [[425, "mne.decoding.TimeDelayingRidge.predict"]], "set_params() (mne.decoding.timedelayingridge method)": [[425, "mne.decoding.TimeDelayingRidge.set_params"]], "timefrequency (class in mne.decoding)": [[426, "mne.decoding.TimeFrequency"]], "fit() (mne.decoding.timefrequency method)": [[426, "mne.decoding.TimeFrequency.fit"]], "fit_transform() (mne.decoding.timefrequency method)": [[426, "mne.decoding.TimeFrequency.fit_transform"]], "get_params() (mne.decoding.timefrequency method)": [[426, "mne.decoding.TimeFrequency.get_params"]], "set_params() (mne.decoding.timefrequency method)": [[426, "mne.decoding.TimeFrequency.set_params"]], "transform() (mne.decoding.timefrequency method)": [[426, "mne.decoding.TimeFrequency.transform"]], "unsupervisedspatialfilter (class in mne.decoding)": [[427, "mne.decoding.UnsupervisedSpatialFilter"]], "fit() (mne.decoding.unsupervisedspatialfilter method)": [[427, "mne.decoding.UnsupervisedSpatialFilter.fit"]], "fit_transform() (mne.decoding.unsupervisedspatialfilter method)": [[427, "mne.decoding.UnsupervisedSpatialFilter.fit_transform"]], "get_params() (mne.decoding.unsupervisedspatialfilter method)": [[427, "mne.decoding.UnsupervisedSpatialFilter.get_params"]], "inverse_transform() (mne.decoding.unsupervisedspatialfilter method)": [[427, "mne.decoding.UnsupervisedSpatialFilter.inverse_transform"]], "set_params() (mne.decoding.unsupervisedspatialfilter method)": [[427, "mne.decoding.UnsupervisedSpatialFilter.set_params"]], "transform() (mne.decoding.unsupervisedspatialfilter method)": [[427, "mne.decoding.UnsupervisedSpatialFilter.transform"]], "vectorizer (class in mne.decoding)": [[428, "mne.decoding.Vectorizer"]], "fit() (mne.decoding.vectorizer method)": [[428, "mne.decoding.Vectorizer.fit"]], "fit_transform() (mne.decoding.vectorizer method)": [[428, "mne.decoding.Vectorizer.fit_transform"]], "inverse_transform() (mne.decoding.vectorizer method)": [[428, "mne.decoding.Vectorizer.inverse_transform"]], "transform() (mne.decoding.vectorizer method)": [[428, "mne.decoding.Vectorizer.transform"]], "compute_ems() (in module mne.decoding)": [[429, "mne.decoding.compute_ems"]], "cross_val_multiscore() (in module mne.decoding)": [[430, "mne.decoding.cross_val_multiscore"]], "get_coef() (in module mne.decoding)": [[431, "mne.decoding.get_coef"]], "dig_mri_distances() (in module mne)": [[432, "mne.dig_mri_distances"]], "get_phantom_dipoles() (in module mne.dipole)": [[433, "mne.dipole.get_phantom_dipoles"]], "average_movements() (in module mne.epochs)": [[434, "mne.epochs.average_movements"]], "combine_event_ids() (in module mne.epochs)": [[435, "mne.epochs.combine_event_ids"]], "equalize_epoch_counts() (in module mne.epochs)": [[436, "mne.epochs.equalize_epoch_counts"]], "make_metadata() (in module mne.epochs)": [[437, "mne.epochs.make_metadata"]], "equalize_channels() (in module mne)": [[438, "mne.equalize_channels"]], "define_target_events() (in module mne.event)": [[439, "mne.event.define_target_events"]], "match_event_names() (in module mne.event)": [[440, "mne.event.match_event_names"]], "shift_time_events() (in module mne.event)": [[441, "mne.event.shift_time_events"]], "events_from_annotations() (in module mne)": [[442, "mne.events_from_annotations"]], "export_epochs() (in module mne.export)": [[443, "mne.export.export_epochs"]], "export_evokeds() (in module mne.export)": [[444, "mne.export.export_evokeds"]], "export_evokeds_mff() (in module mne.export)": [[445, "mne.export.export_evokeds_mff"]], "export_raw() (in module mne.export)": [[446, "mne.export.export_raw"]], "extract_label_time_course() (in module mne)": [[447, "mne.extract_label_time_course"]], "construct_iir_filter() (in module mne.filter)": [[448, "mne.filter.construct_iir_filter"]], "create_filter() (in module mne.filter)": [[449, "mne.filter.create_filter"]], "estimate_ringing_samples() (in module mne.filter)": [[450, "mne.filter.estimate_ringing_samples"]], "filter_data() (in module mne.filter)": [[451, "mne.filter.filter_data"]], "notch_filter() (in module mne.filter)": [[452, "mne.filter.notch_filter"]], "resample() (in module mne.filter)": [[453, "mne.filter.resample"]], "find_events() (in module mne)": [[454, "mne.find_events"]], "find_stim_steps() (in module mne)": [[455, "mne.find_stim_steps"]], "fit_dipole() (in module mne)": [[456, "mne.fit_dipole"]], "compute_depth_prior() (in module mne.forward)": [[457, "mne.forward.compute_depth_prior"]], "compute_orient_prior() (in module mne.forward)": [[458, "mne.forward.compute_orient_prior"]], "restrict_forward_to_label() (in module mne.forward)": [[459, "mne.forward.restrict_forward_to_label"]], "restrict_forward_to_stc() (in module mne.forward)": [[460, "mne.forward.restrict_forward_to_stc"]], "get_config() (in module mne)": [[461, "mne.get_config"]], "get_config_path() (in module mne)": [[462, "mne.get_config_path"]], "get_head_surf() (in module mne)": [[463, "mne.get_head_surf"]], "get_meg_helmet_surf() (in module mne)": [[464, "mne.get_meg_helmet_surf"]], "get_montage_volume_labels() (in module mne)": [[465, "mne.get_montage_volume_labels"]], "get_volume_labels_from_aseg() (in module mne)": [[466, "mne.get_volume_labels_from_aseg"]], "get_volume_labels_from_src() (in module mne)": [[467, "mne.get_volume_labels_from_src"]], "grade_to_tris() (in module mne)": [[468, "mne.grade_to_tris"]], "grade_to_vertices() (in module mne)": [[469, "mne.grade_to_vertices"]], "grand_average() (in module mne)": [[470, "mne.grand_average"]], "grow_labels() (in module mne)": [[471, "mne.grow_labels"]], "coregistration() (in module mne.gui)": [[472, "mne.gui.coregistration"]], "locate_ieeg() (in module mne.gui)": [[473, "mne.gui.locate_ieeg"]], "head_to_mni() (in module mne)": [[474, "mne.head_to_mni"]], "head_to_mri() (in module mne)": [[475, "mne.head_to_mri"]], "gamma_map() (in module mne.inverse_sparse)": [[476, "mne.inverse_sparse.gamma_map"]], "make_stc_from_dipoles() (in module mne.inverse_sparse)": [[477, "mne.inverse_sparse.make_stc_from_dipoles"]], "mixed_norm() (in module mne.inverse_sparse)": [[478, "mne.inverse_sparse.mixed_norm"]], "tf_mixed_norm() (in module mne.inverse_sparse)": [[479, "mne.inverse_sparse.tf_mixed_norm"]], "baseraw (class in mne.io)": [[480, "mne.io.BaseRaw"]], "raw (class in mne.io)": [[481, "mne.io.Raw"]], "__contains__() (mne.io.raw method)": [[481, "mne.io.Raw.__contains__"]], "__getitem__() (mne.io.raw method)": [[481, "mne.io.Raw.__getitem__"]], "__len__() (mne.io.raw method)": [[481, "mne.io.Raw.__len__"]], "acqparser (mne.io.raw property)": [[481, "mne.io.Raw.acqparser"]], "add_channels() (mne.io.raw method)": [[481, "mne.io.Raw.add_channels"]], "add_events() (mne.io.raw method)": [[481, "mne.io.Raw.add_events"]], "add_proj() (mne.io.raw method)": [[481, "mne.io.Raw.add_proj"]], "add_reference_channels() (mne.io.raw method)": [[481, "mne.io.Raw.add_reference_channels"]], "annotations (mne.io.raw property)": [[481, "mne.io.Raw.annotations"]], "anonymize() (mne.io.raw method)": [[481, "mne.io.Raw.anonymize"]], "append() (mne.io.raw method)": [[481, "mne.io.Raw.append"]], "apply_function() (mne.io.raw method)": [[481, "mne.io.Raw.apply_function"]], "apply_gradient_compensation() (mne.io.raw method)": [[481, "mne.io.Raw.apply_gradient_compensation"]], "apply_hilbert() (mne.io.raw method)": [[481, "mne.io.Raw.apply_hilbert"]], "apply_proj() (mne.io.raw method)": [[481, "mne.io.Raw.apply_proj"]], "ch_names (mne.io.raw property)": [[481, "mne.io.Raw.ch_names"]], "close() (mne.io.raw method)": [[481, "mne.io.Raw.close"]], "compensation_grade (mne.io.raw property)": [[481, "mne.io.Raw.compensation_grade"]], "compute_psd() (mne.io.raw method)": [[481, "mne.io.Raw.compute_psd"]], "copy() (mne.io.raw method)": [[481, "mne.io.Raw.copy"]], "crop() (mne.io.raw method)": [[481, "mne.io.Raw.crop"]], "crop_by_annotations() (mne.io.raw method)": [[481, "mne.io.Raw.crop_by_annotations"]], "decimate() (mne.io.raw method)": [[481, "mne.io.Raw.decimate"]], "del_proj() (mne.io.raw method)": [[481, "mne.io.Raw.del_proj"]], "describe() (mne.io.raw method)": [[481, "mne.io.Raw.describe"]], "drop_channels() (mne.io.raw method)": [[481, "mne.io.Raw.drop_channels"]], "export() (mne.io.raw method)": [[481, "mne.io.Raw.export"]], "filenames (mne.io.raw property)": [[481, "mne.io.Raw.filenames"]], "filter() (mne.io.raw method)": [[481, "mne.io.Raw.filter"]], "first_samp (mne.io.raw property)": [[481, "mne.io.Raw.first_samp"]], "first_time (mne.io.raw property)": [[481, "mne.io.Raw.first_time"]], "fix_mag_coil_types() (mne.io.raw method)": [[481, "mne.io.Raw.fix_mag_coil_types"]], "get_channel_types() (mne.io.raw method)": [[481, "mne.io.Raw.get_channel_types"]], "get_data() (mne.io.raw method)": [[481, "mne.io.Raw.get_data"]], "get_montage() (mne.io.raw method)": [[481, "mne.io.Raw.get_montage"]], "interpolate_bads() (mne.io.raw method)": [[481, "mne.io.Raw.interpolate_bads"]], "last_samp (mne.io.raw property)": [[481, "mne.io.Raw.last_samp"]], "load_bad_channels() (mne.io.raw method)": [[481, "mne.io.Raw.load_bad_channels"]], "load_data() (mne.io.raw method)": [[481, "mne.io.Raw.load_data"]], "n_times (mne.io.raw property)": [[481, "mne.io.Raw.n_times"]], "notch_filter() (mne.io.raw method)": [[481, "mne.io.Raw.notch_filter"]], "pick() (mne.io.raw method)": [[481, "mne.io.Raw.pick"]], "pick_channels() (mne.io.raw method)": [[481, "mne.io.Raw.pick_channels"]], "pick_types() (mne.io.raw method)": [[481, "mne.io.Raw.pick_types"]], "plot() (mne.io.raw method)": [[481, "mne.io.Raw.plot"]], "plot_projs_topomap() (mne.io.raw method)": [[481, "mne.io.Raw.plot_projs_topomap"]], "plot_psd() (mne.io.raw method)": [[481, "mne.io.Raw.plot_psd"]], "plot_psd_topo() (mne.io.raw method)": [[481, "mne.io.Raw.plot_psd_topo"]], "plot_psd_topomap() (mne.io.raw method)": [[481, "mne.io.Raw.plot_psd_topomap"]], "plot_sensors() (mne.io.raw method)": [[481, "mne.io.Raw.plot_sensors"]], "proj (mne.io.raw property)": [[481, "mne.io.Raw.proj"]], "rename_channels() (mne.io.raw method)": [[481, "mne.io.Raw.rename_channels"]], "reorder_channels() (mne.io.raw method)": [[481, "mne.io.Raw.reorder_channels"]], "resample() (mne.io.raw method)": [[481, "mne.io.Raw.resample"]], "save() (mne.io.raw method)": [[481, "mne.io.Raw.save"]], "savgol_filter() (mne.io.raw method)": [[481, "mne.io.Raw.savgol_filter"]], "set_annotations() (mne.io.raw method)": [[481, "mne.io.Raw.set_annotations"]], "set_channel_types() (mne.io.raw method)": [[481, "mne.io.Raw.set_channel_types"]], "set_eeg_reference() (mne.io.raw method)": [[481, "mne.io.Raw.set_eeg_reference"]], "set_meas_date() (mne.io.raw method)": [[481, "mne.io.Raw.set_meas_date"]], "set_montage() (mne.io.raw method)": [[481, "mne.io.Raw.set_montage"]], "shift_time() (mne.io.raw method)": [[481, "mne.io.Raw.shift_time"]], "time_as_index() (mne.io.raw method)": [[481, "mne.io.Raw.time_as_index"]], "times (mne.io.raw property)": [[481, "mne.io.Raw.times"]], "tmax (mne.io.raw property)": [[481, "mne.io.Raw.tmax"]], "tmin (mne.io.raw property)": [[481, "mne.io.Raw.tmin"]], "to_data_frame() (mne.io.raw method)": [[481, "mne.io.Raw.to_data_frame"]], "rawarray (class in mne.io)": [[482, "mne.io.RawArray"]], "__contains__() (mne.io.rawarray method)": [[482, "mne.io.RawArray.__contains__"]], "__getitem__() (mne.io.rawarray method)": [[482, "mne.io.RawArray.__getitem__"]], "__len__() (mne.io.rawarray method)": [[482, "mne.io.RawArray.__len__"]], "add_channels() (mne.io.rawarray method)": [[482, "mne.io.RawArray.add_channels"]], "add_events() (mne.io.rawarray method)": [[482, "mne.io.RawArray.add_events"]], "add_proj() (mne.io.rawarray method)": [[482, "mne.io.RawArray.add_proj"]], "add_reference_channels() (mne.io.rawarray method)": [[482, "mne.io.RawArray.add_reference_channels"]], "annotations (mne.io.rawarray property)": [[482, "mne.io.RawArray.annotations"]], "anonymize() (mne.io.rawarray method)": [[482, "mne.io.RawArray.anonymize"]], "append() (mne.io.rawarray method)": [[482, "mne.io.RawArray.append"]], "apply_function() (mne.io.rawarray method)": [[482, "mne.io.RawArray.apply_function"]], "apply_gradient_compensation() (mne.io.rawarray method)": [[482, "mne.io.RawArray.apply_gradient_compensation"]], "apply_hilbert() (mne.io.rawarray method)": [[482, "mne.io.RawArray.apply_hilbert"]], "apply_proj() (mne.io.rawarray method)": [[482, "mne.io.RawArray.apply_proj"]], "ch_names (mne.io.rawarray property)": [[482, "mne.io.RawArray.ch_names"]], "close() (mne.io.rawarray method)": [[482, "mne.io.RawArray.close"]], "compensation_grade (mne.io.rawarray property)": [[482, "mne.io.RawArray.compensation_grade"]], "compute_psd() (mne.io.rawarray method)": [[482, "mne.io.RawArray.compute_psd"]], "copy() (mne.io.rawarray method)": [[482, "mne.io.RawArray.copy"]], "crop() (mne.io.rawarray method)": [[482, "mne.io.RawArray.crop"]], "crop_by_annotations() (mne.io.rawarray method)": [[482, "mne.io.RawArray.crop_by_annotations"]], "decimate() (mne.io.rawarray method)": [[482, "mne.io.RawArray.decimate"]], "del_proj() (mne.io.rawarray method)": [[482, "mne.io.RawArray.del_proj"]], "describe() (mne.io.rawarray method)": [[482, "mne.io.RawArray.describe"]], "drop_channels() (mne.io.rawarray method)": [[482, "mne.io.RawArray.drop_channels"]], "export() (mne.io.rawarray method)": [[482, "mne.io.RawArray.export"]], "filenames (mne.io.rawarray property)": [[482, "mne.io.RawArray.filenames"]], "filter() (mne.io.rawarray method)": [[482, "mne.io.RawArray.filter"]], "first_samp (mne.io.rawarray property)": [[482, "mne.io.RawArray.first_samp"]], "first_time (mne.io.rawarray property)": [[482, "mne.io.RawArray.first_time"]], "get_channel_types() (mne.io.rawarray method)": [[482, "mne.io.RawArray.get_channel_types"]], "get_data() (mne.io.rawarray method)": [[482, "mne.io.RawArray.get_data"]], "get_montage() (mne.io.rawarray method)": [[482, "mne.io.RawArray.get_montage"]], "interpolate_bads() (mne.io.rawarray method)": [[482, "mne.io.RawArray.interpolate_bads"]], "last_samp (mne.io.rawarray property)": [[482, "mne.io.RawArray.last_samp"]], "load_bad_channels() (mne.io.rawarray method)": [[482, "mne.io.RawArray.load_bad_channels"]], "load_data() (mne.io.rawarray method)": [[482, "mne.io.RawArray.load_data"]], "n_times (mne.io.rawarray property)": [[482, "mne.io.RawArray.n_times"]], "notch_filter() (mne.io.rawarray method)": [[482, "mne.io.RawArray.notch_filter"]], "pick() (mne.io.rawarray method)": [[482, "mne.io.RawArray.pick"]], "pick_channels() (mne.io.rawarray method)": [[482, "mne.io.RawArray.pick_channels"]], "pick_types() (mne.io.rawarray method)": [[482, "mne.io.RawArray.pick_types"]], "plot() (mne.io.rawarray method)": [[482, "mne.io.RawArray.plot"]], "plot_projs_topomap() (mne.io.rawarray method)": [[482, "mne.io.RawArray.plot_projs_topomap"]], "plot_psd() (mne.io.rawarray method)": [[482, "mne.io.RawArray.plot_psd"]], "plot_psd_topo() (mne.io.rawarray method)": [[482, "mne.io.RawArray.plot_psd_topo"]], "plot_psd_topomap() (mne.io.rawarray method)": [[482, "mne.io.RawArray.plot_psd_topomap"]], "plot_sensors() (mne.io.rawarray method)": [[482, "mne.io.RawArray.plot_sensors"]], "proj (mne.io.rawarray property)": [[482, "mne.io.RawArray.proj"]], "rename_channels() (mne.io.rawarray method)": [[482, "mne.io.RawArray.rename_channels"]], "reorder_channels() (mne.io.rawarray method)": [[482, "mne.io.RawArray.reorder_channels"]], "resample() (mne.io.rawarray method)": [[482, "mne.io.RawArray.resample"]], "save() (mne.io.rawarray method)": [[482, "mne.io.RawArray.save"]], "savgol_filter() (mne.io.rawarray method)": [[482, "mne.io.RawArray.savgol_filter"]], "set_annotations() (mne.io.rawarray method)": [[482, "mne.io.RawArray.set_annotations"]], "set_channel_types() (mne.io.rawarray method)": [[482, "mne.io.RawArray.set_channel_types"]], "set_eeg_reference() (mne.io.rawarray method)": [[482, "mne.io.RawArray.set_eeg_reference"]], "set_meas_date() (mne.io.rawarray method)": [[482, "mne.io.RawArray.set_meas_date"]], "set_montage() (mne.io.rawarray method)": [[482, "mne.io.RawArray.set_montage"]], "shift_time() (mne.io.rawarray method)": [[482, "mne.io.RawArray.shift_time"]], "time_as_index() (mne.io.rawarray method)": [[482, "mne.io.RawArray.time_as_index"]], "times (mne.io.rawarray property)": [[482, "mne.io.RawArray.times"]], "tmax (mne.io.rawarray property)": [[482, "mne.io.RawArray.tmax"]], "tmin (mne.io.rawarray property)": [[482, "mne.io.RawArray.tmin"]], "to_data_frame() (mne.io.rawarray method)": [[482, "mne.io.RawArray.to_data_frame"]], "anonymize_info() (in module mne.io)": [[483, "mne.io.anonymize_info"]], "read_mrk() (in module mne.io.kit)": [[484, "mne.io.kit.read_mrk"]], "read_fiducials() (in module mne.io)": [[485, "mne.io.read_fiducials"]], "read_info() (in module mne.io)": [[486, "mne.io.read_info"]], "read_raw() (in module mne.io)": [[487, "mne.io.read_raw"]], "read_raw_artemis123() (in module mne.io)": [[488, "mne.io.read_raw_artemis123"]], "read_raw_bdf() (in module mne.io)": [[489, "mne.io.read_raw_bdf"]], "read_raw_boxy() (in module mne.io)": [[490, "mne.io.read_raw_boxy"]], "read_raw_brainvision() (in module mne.io)": [[491, "mne.io.read_raw_brainvision"]], "read_raw_bti() (in module mne.io)": [[492, "mne.io.read_raw_bti"]], "read_raw_cnt() (in module mne.io)": [[493, "mne.io.read_raw_cnt"]], "read_raw_ctf() (in module mne.io)": [[494, "mne.io.read_raw_ctf"]], "read_raw_curry() (in module mne.io)": [[495, "mne.io.read_raw_curry"]], "read_raw_edf() (in module mne.io)": [[496, "mne.io.read_raw_edf"]], "read_raw_eeglab() (in module mne.io)": [[497, "mne.io.read_raw_eeglab"]], "read_raw_egi() (in module mne.io)": [[498, "mne.io.read_raw_egi"]], "read_raw_eximia() (in module mne.io)": [[499, "mne.io.read_raw_eximia"]], "read_raw_eyelink() (in module mne.io)": [[500, "mne.io.read_raw_eyelink"]], "read_raw_fieldtrip() (in module mne.io)": [[501, "mne.io.read_raw_fieldtrip"]], "read_raw_fif() (in module mne.io)": [[502, "mne.io.read_raw_fif"]], "read_raw_fil() (in module mne.io)": [[503, "mne.io.read_raw_fil"]], "read_raw_gdf() (in module mne.io)": [[504, "mne.io.read_raw_gdf"]], "read_raw_hitachi() (in module mne.io)": [[505, "mne.io.read_raw_hitachi"]], "read_raw_kit() (in module mne.io)": [[506, "mne.io.read_raw_kit"]], "read_raw_nedf() (in module mne.io)": [[507, "mne.io.read_raw_nedf"]], "read_raw_nicolet() (in module mne.io)": [[508, "mne.io.read_raw_nicolet"]], "read_raw_nihon() (in module mne.io)": [[509, "mne.io.read_raw_nihon"]], "read_raw_nirx() (in module mne.io)": [[510, "mne.io.read_raw_nirx"]], "read_raw_persyst() (in module mne.io)": [[511, "mne.io.read_raw_persyst"]], "read_raw_snirf() (in module mne.io)": [[512, "mne.io.read_raw_snirf"]], "show_fiff() (in module mne.io)": [[513, "mne.io.show_fiff"]], "write_fiducials() (in module mne.io)": [[514, "mne.io.write_fiducials"]], "select_sources() (in module mne.label)": [[515, "mne.label.select_sources"]], "label_sign_flip() (in module mne)": [[516, "mne.label_sign_flip"]], "labels_to_stc() (in module mne)": [[517, "mne.labels_to_stc"]], "make_ad_hoc_cov() (in module mne)": [[518, "mne.make_ad_hoc_cov"]], "make_bem_model() (in module mne)": [[519, "mne.make_bem_model"]], "make_bem_solution() (in module mne)": [[520, "mne.make_bem_solution"]], "make_field_map() (in module mne)": [[521, "mne.make_field_map"]], "make_fixed_length_epochs() (in module mne)": [[522, "mne.make_fixed_length_epochs"]], "make_fixed_length_events() (in module mne)": [[523, "mne.make_fixed_length_events"]], "make_forward_dipole() (in module mne)": [[524, "mne.make_forward_dipole"]], "make_forward_solution() (in module mne)": [[525, "mne.make_forward_solution"]], "make_sphere_model() (in module mne)": [[526, "mne.make_sphere_model"]], "match_channel_orders() (in module mne)": [[527, "mne.match_channel_orders"]], "merge_events() (in module mne)": [[528, "mne.merge_events"]], "inverseoperator (class in mne.minimum_norm)": [[529, "mne.minimum_norm.InverseOperator"]], "__contains__() (mne.minimum_norm.inverseoperator method)": [[529, "mne.minimum_norm.InverseOperator.__contains__"]], "__getitem__() (mne.minimum_norm.inverseoperator method)": [[529, "mne.minimum_norm.InverseOperator.__getitem__"]], "__iter__() (mne.minimum_norm.inverseoperator method)": [[529, "mne.minimum_norm.InverseOperator.__iter__"]], "__len__() (mne.minimum_norm.inverseoperator method)": [[529, "mne.minimum_norm.InverseOperator.__len__"]], "clear() (mne.minimum_norm.inverseoperator method)": [[529, "mne.minimum_norm.InverseOperator.clear"]], "copy() (mne.minimum_norm.inverseoperator method)": [[529, "mne.minimum_norm.InverseOperator.copy"]], "fromkeys() (mne.minimum_norm.inverseoperator method)": [[529, "mne.minimum_norm.InverseOperator.fromkeys"]], "get() (mne.minimum_norm.inverseoperator method)": [[529, "mne.minimum_norm.InverseOperator.get"]], "items() (mne.minimum_norm.inverseoperator method)": [[529, "mne.minimum_norm.InverseOperator.items"]], "keys() (mne.minimum_norm.inverseoperator method)": [[529, "mne.minimum_norm.InverseOperator.keys"]], "pop() (mne.minimum_norm.inverseoperator method)": [[529, "mne.minimum_norm.InverseOperator.pop"]], "popitem() (mne.minimum_norm.inverseoperator method)": [[529, "mne.minimum_norm.InverseOperator.popitem"]], "setdefault() (mne.minimum_norm.inverseoperator method)": [[529, "mne.minimum_norm.InverseOperator.setdefault"]], "update() (mne.minimum_norm.inverseoperator method)": [[529, "mne.minimum_norm.InverseOperator.update"]], "values() (mne.minimum_norm.inverseoperator method)": [[529, "mne.minimum_norm.InverseOperator.values"]], "apply_inverse() (in module mne.minimum_norm)": [[530, "mne.minimum_norm.apply_inverse"]], "apply_inverse_cov() (in module mne.minimum_norm)": [[531, "mne.minimum_norm.apply_inverse_cov"]], "apply_inverse_epochs() (in module mne.minimum_norm)": [[532, "mne.minimum_norm.apply_inverse_epochs"]], "apply_inverse_raw() (in module mne.minimum_norm)": [[533, "mne.minimum_norm.apply_inverse_raw"]], "apply_inverse_tfr_epochs() (in module mne.minimum_norm)": [[534, "mne.minimum_norm.apply_inverse_tfr_epochs"]], "compute_rank_inverse() (in module mne.minimum_norm)": [[535, "mne.minimum_norm.compute_rank_inverse"]], "compute_source_psd() (in module mne.minimum_norm)": [[536, "mne.minimum_norm.compute_source_psd"]], "compute_source_psd_epochs() (in module mne.minimum_norm)": [[537, "mne.minimum_norm.compute_source_psd_epochs"]], "estimate_snr() (in module mne.minimum_norm)": [[538, "mne.minimum_norm.estimate_snr"]], "get_cross_talk() (in module mne.minimum_norm)": [[539, "mne.minimum_norm.get_cross_talk"]], "get_point_spread() (in module mne.minimum_norm)": [[540, "mne.minimum_norm.get_point_spread"]], "make_inverse_operator() (in module mne.minimum_norm)": [[541, "mne.minimum_norm.make_inverse_operator"]], "make_inverse_resolution_matrix() (in module mne.minimum_norm)": [[542, "mne.minimum_norm.make_inverse_resolution_matrix"]], "prepare_inverse_operator() (in module mne.minimum_norm)": [[543, "mne.minimum_norm.prepare_inverse_operator"]], "read_inverse_operator() (in module mne.minimum_norm)": [[544, "mne.minimum_norm.read_inverse_operator"]], "resolution_metrics() (in module mne.minimum_norm)": [[545, "mne.minimum_norm.resolution_metrics"]], "source_band_induced_power() (in module mne.minimum_norm)": [[546, "mne.minimum_norm.source_band_induced_power"]], "source_induced_power() (in module mne.minimum_norm)": [[547, "mne.minimum_norm.source_induced_power"]], "write_inverse_operator() (in module mne.minimum_norm)": [[548, "mne.minimum_norm.write_inverse_operator"]], "morph_labels() (in module mne)": [[549, "mne.morph_labels"]], "morph_source_spaces() (in module mne)": [[550, "mne.morph_source_spaces"]], "open_docs() (in module mne)": [[551, "mne.open_docs"]], "open_report() (in module mne)": [[552, "mne.open_report"]], "parse_config() (in module mne)": [[553, "mne.parse_config"]], "pick_channels() (in module mne)": [[554, "mne.pick_channels"]], "pick_channels_cov() (in module mne)": [[555, "mne.pick_channels_cov"]], "pick_channels_forward() (in module mne)": [[556, "mne.pick_channels_forward"]], "pick_channels_regexp() (in module mne)": [[557, "mne.pick_channels_regexp"]], "pick_events() (in module mne)": [[558, "mne.pick_events"]], "pick_info() (in module mne)": [[559, "mne.pick_info"]], "pick_types() (in module mne)": [[560, "mne.pick_types"]], "pick_types_forward() (in module mne)": [[561, "mne.pick_types_forward"]], "eogregression (class in mne.preprocessing)": [[562, "mne.preprocessing.EOGRegression"]], "apply() (mne.preprocessing.eogregression method)": [[562, "mne.preprocessing.EOGRegression.apply"]], "fit() (mne.preprocessing.eogregression method)": [[562, "mne.preprocessing.EOGRegression.fit"]], "plot() (mne.preprocessing.eogregression method)": [[562, "mne.preprocessing.EOGRegression.plot"]], "save() (mne.preprocessing.eogregression method)": [[562, "mne.preprocessing.EOGRegression.save"]], "ica (class in mne.preprocessing)": [[563, "mne.preprocessing.ICA"]], "__contains__() (mne.preprocessing.ica method)": [[563, "mne.preprocessing.ICA.__contains__"]], "apply() (mne.preprocessing.ica method)": [[563, "mne.preprocessing.ICA.apply"]], "compensation_grade (mne.preprocessing.ica property)": [[563, "mne.preprocessing.ICA.compensation_grade"]], "copy() (mne.preprocessing.ica method)": [[563, "mne.preprocessing.ICA.copy"]], "find_bads_ecg() (mne.preprocessing.ica method)": [[563, "mne.preprocessing.ICA.find_bads_ecg"]], "find_bads_eog() (mne.preprocessing.ica method)": [[563, "mne.preprocessing.ICA.find_bads_eog"]], "find_bads_muscle() (mne.preprocessing.ica method)": [[563, "mne.preprocessing.ICA.find_bads_muscle"]], "find_bads_ref() (mne.preprocessing.ica method)": [[563, "mne.preprocessing.ICA.find_bads_ref"]], "fit() (mne.preprocessing.ica method)": [[563, "mne.preprocessing.ICA.fit"]], "get_channel_types() (mne.preprocessing.ica method)": [[563, "mne.preprocessing.ICA.get_channel_types"]], "get_components() (mne.preprocessing.ica method)": [[563, "mne.preprocessing.ICA.get_components"]], "get_explained_variance_ratio() (mne.preprocessing.ica method)": [[563, "mne.preprocessing.ICA.get_explained_variance_ratio"]], "get_sources() (mne.preprocessing.ica method)": [[563, "mne.preprocessing.ICA.get_sources"]], "plot_components() (mne.preprocessing.ica method)": [[563, "mne.preprocessing.ICA.plot_components"]], "plot_overlay() (mne.preprocessing.ica method)": [[563, "mne.preprocessing.ICA.plot_overlay"]], "plot_properties() (mne.preprocessing.ica method)": [[563, "mne.preprocessing.ICA.plot_properties"]], "plot_scores() (mne.preprocessing.ica method)": [[563, "mne.preprocessing.ICA.plot_scores"]], "plot_sources() (mne.preprocessing.ica method)": [[563, "mne.preprocessing.ICA.plot_sources"]], "save() (mne.preprocessing.ica method)": [[563, "mne.preprocessing.ICA.save"]], "score_sources() (mne.preprocessing.ica method)": [[563, "mne.preprocessing.ICA.score_sources"]], "xdawn (class in mne.preprocessing)": [[564, "mne.preprocessing.Xdawn"]], "apply() (mne.preprocessing.xdawn method)": [[564, "mne.preprocessing.Xdawn.apply"]], "fit() (mne.preprocessing.xdawn method)": [[564, "mne.preprocessing.Xdawn.fit"]], "fit_transform() (mne.preprocessing.xdawn method)": [[564, "mne.preprocessing.Xdawn.fit_transform"]], "get_params() (mne.preprocessing.xdawn method)": [[564, "mne.preprocessing.Xdawn.get_params"]], "inverse_transform() (mne.preprocessing.xdawn method)": [[564, "mne.preprocessing.Xdawn.inverse_transform"]], "set_params() (mne.preprocessing.xdawn method)": [[564, "mne.preprocessing.Xdawn.set_params"]], "transform() (mne.preprocessing.xdawn method)": [[564, "mne.preprocessing.Xdawn.transform"]], "annotate_amplitude() (in module mne.preprocessing)": [[565, "mne.preprocessing.annotate_amplitude"]], "annotate_break() (in module mne.preprocessing)": [[566, "mne.preprocessing.annotate_break"]], "annotate_movement() (in module mne.preprocessing)": [[567, "mne.preprocessing.annotate_movement"]], "annotate_muscle_zscore() (in module mne.preprocessing)": [[568, "mne.preprocessing.annotate_muscle_zscore"]], "annotate_nan() (in module mne.preprocessing)": [[569, "mne.preprocessing.annotate_nan"]], "compute_average_dev_head_t() (in module mne.preprocessing)": [[570, "mne.preprocessing.compute_average_dev_head_t"]], "compute_bridged_electrodes() (in module mne.preprocessing)": [[571, "mne.preprocessing.compute_bridged_electrodes"]], "compute_current_source_density() (in module mne.preprocessing)": [[572, "mne.preprocessing.compute_current_source_density"]], "compute_fine_calibration() (in module mne.preprocessing)": [[573, "mne.preprocessing.compute_fine_calibration"]], "compute_maxwell_basis() (in module mne.preprocessing)": [[574, "mne.preprocessing.compute_maxwell_basis"]], "compute_proj_ecg() (in module mne.preprocessing)": [[575, "mne.preprocessing.compute_proj_ecg"]], "compute_proj_eog() (in module mne.preprocessing)": [[576, "mne.preprocessing.compute_proj_eog"]], "compute_proj_hfc() (in module mne.preprocessing)": [[577, "mne.preprocessing.compute_proj_hfc"]], "corrmap() (in module mne.preprocessing)": [[578, "mne.preprocessing.corrmap"]], "cortical_signal_suppression() (in module mne.preprocessing)": [[579, "mne.preprocessing.cortical_signal_suppression"]], "create_ecg_epochs() (in module mne.preprocessing)": [[580, "mne.preprocessing.create_ecg_epochs"]], "create_eog_epochs() (in module mne.preprocessing)": [[581, "mne.preprocessing.create_eog_epochs"]], "equalize_bads() (in module mne.preprocessing)": [[582, "mne.preprocessing.equalize_bads"]], "set_channel_types_eyetrack() (in module mne.preprocessing.eyetracking)": [[583, "mne.preprocessing.eyetracking.set_channel_types_eyetrack"]], "find_bad_channels_maxwell() (in module mne.preprocessing)": [[584, "mne.preprocessing.find_bad_channels_maxwell"]], "find_ecg_events() (in module mne.preprocessing)": [[585, "mne.preprocessing.find_ecg_events"]], "find_eog_events() (in module mne.preprocessing)": [[586, "mne.preprocessing.find_eog_events"]], "fix_stim_artifact() (in module mne.preprocessing)": [[587, "mne.preprocessing.fix_stim_artifact"]], "ica_find_ecg_events() (in module mne.preprocessing)": [[588, "mne.preprocessing.ica_find_ecg_events"]], "ica_find_eog_events() (in module mne.preprocessing)": [[589, "mne.preprocessing.ica_find_eog_events"]], "make_montage_volume() (in module mne.preprocessing.ieeg)": [[590, "mne.preprocessing.ieeg.make_montage_volume"]], "project_sensors_onto_brain() (in module mne.preprocessing.ieeg)": [[591, "mne.preprocessing.ieeg.project_sensors_onto_brain"]], "warp_montage() (in module mne.preprocessing.ieeg)": [[592, "mne.preprocessing.ieeg.warp_montage"]], "infomax() (in module mne.preprocessing)": [[593, "mne.preprocessing.infomax"]], "interpolate_bridged_electrodes() (in module mne.preprocessing)": [[594, "mne.preprocessing.interpolate_bridged_electrodes"]], "maxwell_filter() (in module mne.preprocessing)": [[595, "mne.preprocessing.maxwell_filter"]], "maxwell_filter_prepare_emptyroom() (in module mne.preprocessing)": [[596, "mne.preprocessing.maxwell_filter_prepare_emptyroom"]], "beer_lambert_law() (in module mne.preprocessing.nirs)": [[597, "mne.preprocessing.nirs.beer_lambert_law"]], "optical_density() (in module mne.preprocessing.nirs)": [[598, "mne.preprocessing.nirs.optical_density"]], "scalp_coupling_index() (in module mne.preprocessing.nirs)": [[599, "mne.preprocessing.nirs.scalp_coupling_index"]], "short_channels() (in module mne.preprocessing.nirs)": [[600, "mne.preprocessing.nirs.short_channels"]], "source_detector_distances() (in module mne.preprocessing.nirs)": [[601, "mne.preprocessing.nirs.source_detector_distances"]], "temporal_derivative_distribution_repair() (in module mne.preprocessing.nirs)": [[602, "mne.preprocessing.nirs.temporal_derivative_distribution_repair"]], "oversampled_temporal_projection() (in module mne.preprocessing)": [[603, "mne.preprocessing.oversampled_temporal_projection"]], "peak_finder() (in module mne.preprocessing)": [[604, "mne.preprocessing.peak_finder"]], "read_eog_regression() (in module mne.preprocessing)": [[605, "mne.preprocessing.read_eog_regression"]], "read_fine_calibration() (in module mne.preprocessing)": [[606, "mne.preprocessing.read_fine_calibration"]], "read_ica() (in module mne.preprocessing)": [[607, "mne.preprocessing.read_ica"]], "read_ica_eeglab() (in module mne.preprocessing)": [[608, "mne.preprocessing.read_ica_eeglab"]], "realign_raw() (in module mne.preprocessing)": [[609, "mne.preprocessing.realign_raw"]], "regress_artifact() (in module mne.preprocessing)": [[610, "mne.preprocessing.regress_artifact"]], "write_fine_calibration() (in module mne.preprocessing)": [[611, "mne.preprocessing.write_fine_calibration"]], "random_parcellation() (in module mne)": [[612, "mne.random_parcellation"]], "read_annotations() (in module mne)": [[613, "mne.read_annotations"]], "read_bem_solution() (in module mne)": [[614, "mne.read_bem_solution"]], "read_bem_surfaces() (in module mne)": [[615, "mne.read_bem_surfaces"]], "read_cov() (in module mne)": [[616, "mne.read_cov"]], "read_dipole() (in module mne)": [[617, "mne.read_dipole"]], "read_epochs() (in module mne)": [[618, "mne.read_epochs"]], "read_epochs_eeglab() (in module mne)": [[619, "mne.read_epochs_eeglab"]], "read_epochs_fieldtrip() (in module mne)": [[620, "mne.read_epochs_fieldtrip"]], "read_epochs_kit() (in module mne)": [[621, "mne.read_epochs_kit"]], "read_events() (in module mne)": [[622, "mne.read_events"]], "read_evoked_besa() (in module mne)": [[623, "mne.read_evoked_besa"]], "read_evoked_fieldtrip() (in module mne)": [[624, "mne.read_evoked_fieldtrip"]], "read_evokeds() (in module mne)": [[625, "mne.read_evokeds"]], "read_evokeds_mff() (in module mne)": [[626, "mne.read_evokeds_mff"]], "read_forward_solution() (in module mne)": [[627, "mne.read_forward_solution"]], "read_freesurfer_lut() (in module mne)": [[628, "mne.read_freesurfer_lut"]], "read_label() (in module mne)": [[629, "mne.read_label"]], "read_labels_from_annot() (in module mne)": [[630, "mne.read_labels_from_annot"]], "read_lta() (in module mne)": [[631, "mne.read_lta"]], "read_morph_map() (in module mne)": [[632, "mne.read_morph_map"]], "read_proj() (in module mne)": [[633, "mne.read_proj"]], "read_reject_parameters() (in module mne)": [[634, "mne.read_reject_parameters"]], "read_source_estimate() (in module mne)": [[635, "mne.read_source_estimate"]], "read_source_morph() (in module mne)": [[636, "mne.read_source_morph"]], "read_source_spaces() (in module mne)": [[637, "mne.read_source_spaces"]], "read_surface() (in module mne)": [[638, "mne.read_surface"]], "read_talxfm() (in module mne)": [[639, "mne.read_talxfm"]], "read_trans() (in module mne)": [[640, "mne.read_trans"]], "read_tri() (in module mne)": [[641, "mne.read_tri"]], "read_vectorview_selection() (in module mne)": [[642, "mne.read_vectorview_selection"]], "rename_channels() (in module mne)": [[643, "mne.rename_channels"]], "scale_bem() (in module mne)": [[644, "mne.scale_bem"]], "scale_labels() (in module mne)": [[645, "mne.scale_labels"]], "scale_mri() (in module mne)": [[646, "mne.scale_mri"]], "scale_source_space() (in module mne)": [[647, "mne.scale_source_space"]], "sensitivity_map() (in module mne)": [[648, "mne.sensitivity_map"]], "set_bipolar_reference() (in module mne)": [[649, "mne.set_bipolar_reference"]], "set_cache_dir() (in module mne)": [[650, "mne.set_cache_dir"]], "set_config() (in module mne)": [[651, "mne.set_config"]], "set_eeg_reference() (in module mne)": [[652, "mne.set_eeg_reference"]], "set_log_file() (in module mne)": [[653, "mne.set_log_file"]], "set_log_level() (in module mne)": [[654, "mne.set_log_level"]], "set_memmap_min_size() (in module mne)": [[655, "mne.set_memmap_min_size"]], "setup_source_space() (in module mne)": [[656, "mne.setup_source_space"]], "setup_volume_source_space() (in module mne)": [[657, "mne.setup_volume_source_space"]], "sourcesimulator (class in mne.simulation)": [[658, "mne.simulation.SourceSimulator"]], "__iter__() (mne.simulation.sourcesimulator method)": [[658, "mne.simulation.SourceSimulator.__iter__"]], "add_data() (mne.simulation.sourcesimulator method)": [[658, "mne.simulation.SourceSimulator.add_data"]], "duration (mne.simulation.sourcesimulator property)": [[658, "mne.simulation.SourceSimulator.duration"]], "get_stc() (mne.simulation.sourcesimulator method)": [[658, "mne.simulation.SourceSimulator.get_stc"]], "get_stim_channel() (mne.simulation.sourcesimulator method)": [[658, "mne.simulation.SourceSimulator.get_stim_channel"]], "n_times (mne.simulation.sourcesimulator property)": [[658, "mne.simulation.SourceSimulator.n_times"]], "add_chpi() (in module mne.simulation)": [[659, "mne.simulation.add_chpi"]], "add_ecg() (in module mne.simulation)": [[660, "mne.simulation.add_ecg"]], "add_eog() (in module mne.simulation)": [[661, "mne.simulation.add_eog"]], "add_noise() (in module mne.simulation)": [[662, "mne.simulation.add_noise"]], "cosine_score() (in module mne.simulation.metrics)": [[663, "mne.simulation.metrics.cosine_score"]], "f1_score() (in module mne.simulation.metrics)": [[664, "mne.simulation.metrics.f1_score"]], "peak_position_error() (in module mne.simulation.metrics)": [[665, "mne.simulation.metrics.peak_position_error"]], "precision_score() (in module mne.simulation.metrics)": [[666, "mne.simulation.metrics.precision_score"]], "recall_score() (in module mne.simulation.metrics)": [[667, "mne.simulation.metrics.recall_score"]], "region_localization_error() (in module mne.simulation.metrics)": [[668, "mne.simulation.metrics.region_localization_error"]], "roc_auc_score() (in module mne.simulation.metrics)": [[669, "mne.simulation.metrics.roc_auc_score"]], "spatial_deviation_error() (in module mne.simulation.metrics)": [[670, "mne.simulation.metrics.spatial_deviation_error"]], "select_source_in_label() (in module mne.simulation)": [[671, "mne.simulation.select_source_in_label"]], "simulate_evoked() (in module mne.simulation)": [[672, "mne.simulation.simulate_evoked"]], "simulate_raw() (in module mne.simulation)": [[673, "mne.simulation.simulate_raw"]], "simulate_sparse_stc() (in module mne.simulation)": [[674, "mne.simulation.simulate_sparse_stc"]], "simulate_stc() (in module mne.simulation)": [[675, "mne.simulation.simulate_stc"]], "compute_distance_to_sensors() (in module mne.source_space)": [[676, "mne.source_space.compute_distance_to_sensors"]], "get_decimated_surfaces() (in module mne.source_space)": [[677, "mne.source_space.get_decimated_surfaces"]], "spatial_dist_adjacency() (in module mne)": [[678, "mne.spatial_dist_adjacency"]], "spatial_inter_hemi_adjacency() (in module mne)": [[679, "mne.spatial_inter_hemi_adjacency"]], "spatial_src_adjacency() (in module mne)": [[680, "mne.spatial_src_adjacency"]], "spatial_tris_adjacency() (in module mne)": [[681, "mne.spatial_tris_adjacency"]], "spatio_temporal_dist_adjacency() (in module mne)": [[682, "mne.spatio_temporal_dist_adjacency"]], "spatio_temporal_src_adjacency() (in module mne)": [[683, "mne.spatio_temporal_src_adjacency"]], "spatio_temporal_tris_adjacency() (in module mne)": [[684, "mne.spatio_temporal_tris_adjacency"]], "split_label() (in module mne)": [[685, "mne.split_label"]], "bonferroni_correction() (in module mne.stats)": [[686, "mne.stats.bonferroni_correction"]], "bootstrap_confidence_interval() (in module mne.stats)": [[687, "mne.stats.bootstrap_confidence_interval"]], "combine_adjacency() (in module mne.stats)": [[688, "mne.stats.combine_adjacency"]], "f_mway_rm() (in module mne.stats)": [[689, "mne.stats.f_mway_rm"]], "f_oneway() (in module mne.stats)": [[690, "mne.stats.f_oneway"]], "f_threshold_mway_rm() (in module mne.stats)": [[691, "mne.stats.f_threshold_mway_rm"]], "fdr_correction() (in module mne.stats)": [[692, "mne.stats.fdr_correction"]], "linear_regression() (in module mne.stats)": [[693, "mne.stats.linear_regression"]], "linear_regression_raw() (in module mne.stats)": [[694, "mne.stats.linear_regression_raw"]], "permutation_cluster_1samp_test() (in module mne.stats)": [[695, "mne.stats.permutation_cluster_1samp_test"]], "permutation_cluster_test() (in module mne.stats)": [[696, "mne.stats.permutation_cluster_test"]], "permutation_t_test() (in module mne.stats)": [[697, "mne.stats.permutation_t_test"]], "spatio_temporal_cluster_1samp_test() (in module mne.stats)": [[698, "mne.stats.spatio_temporal_cluster_1samp_test"]], "spatio_temporal_cluster_test() (in module mne.stats)": [[699, "mne.stats.spatio_temporal_cluster_test"]], "summarize_clusters_stc() (in module mne.stats)": [[700, "mne.stats.summarize_clusters_stc"]], "ttest_1samp_no_p() (in module mne.stats)": [[701, "mne.stats.ttest_1samp_no_p"]], "ttest_ind_no_p() (in module mne.stats)": [[702, "mne.stats.ttest_ind_no_p"]], "stc_near_sensors() (in module mne)": [[703, "mne.stc_near_sensors"]], "stc_to_label() (in module mne)": [[704, "mne.stc_to_label"]], "complete_surface_info() (in module mne.surface)": [[705, "mne.surface.complete_surface_info"]], "read_curvature() (in module mne.surface)": [[706, "mne.surface.read_curvature"]], "sys_info() (in module mne)": [[707, "mne.sys_info"]], "averagetfr (class in mne.time_frequency)": [[708, "mne.time_frequency.AverageTFR"]], "__add__() (mne.time_frequency.averagetfr method)": [[708, "mne.time_frequency.AverageTFR.__add__"]], "__contains__() (mne.time_frequency.averagetfr method)": [[708, "mne.time_frequency.AverageTFR.__contains__"]], "__mul__() (mne.time_frequency.averagetfr method)": [[708, "mne.time_frequency.AverageTFR.__mul__"]], "__sub__() (mne.time_frequency.averagetfr method)": [[708, "mne.time_frequency.AverageTFR.__sub__"]], "add_channels() (mne.time_frequency.averagetfr method)": [[708, "mne.time_frequency.AverageTFR.add_channels"]], "add_reference_channels() (mne.time_frequency.averagetfr method)": [[708, "mne.time_frequency.AverageTFR.add_reference_channels"]], "apply_baseline() (mne.time_frequency.averagetfr method)": [[708, "mne.time_frequency.AverageTFR.apply_baseline"]], "ch_names (mne.time_frequency.averagetfr property)": [[708, "mne.time_frequency.AverageTFR.ch_names"]], "compensation_grade (mne.time_frequency.averagetfr property)": [[708, "mne.time_frequency.AverageTFR.compensation_grade"]], "copy() (mne.time_frequency.averagetfr method)": [[708, "mne.time_frequency.AverageTFR.copy"]], "crop() (mne.time_frequency.averagetfr method)": [[708, "mne.time_frequency.AverageTFR.crop"]], "decimate() (mne.time_frequency.averagetfr method)": [[708, "mne.time_frequency.AverageTFR.decimate"]], "drop_channels() (mne.time_frequency.averagetfr method)": [[708, "mne.time_frequency.AverageTFR.drop_channels"]], "get_channel_types() (mne.time_frequency.averagetfr method)": [[708, "mne.time_frequency.AverageTFR.get_channel_types"]], "pick() (mne.time_frequency.averagetfr method)": [[708, "mne.time_frequency.AverageTFR.pick"]], "pick_channels() (mne.time_frequency.averagetfr method)": [[708, "mne.time_frequency.AverageTFR.pick_channels"]], "pick_types() (mne.time_frequency.averagetfr method)": [[708, "mne.time_frequency.AverageTFR.pick_types"]], "plot() (mne.time_frequency.averagetfr method)": [[708, "mne.time_frequency.AverageTFR.plot"]], "plot_joint() (mne.time_frequency.averagetfr method)": [[708, "mne.time_frequency.AverageTFR.plot_joint"]], "plot_topo() (mne.time_frequency.averagetfr method)": [[708, "mne.time_frequency.AverageTFR.plot_topo"]], "plot_topomap() (mne.time_frequency.averagetfr method)": [[708, "mne.time_frequency.AverageTFR.plot_topomap"]], "reorder_channels() (mne.time_frequency.averagetfr method)": [[708, "mne.time_frequency.AverageTFR.reorder_channels"]], "save() (mne.time_frequency.averagetfr method)": [[708, "mne.time_frequency.AverageTFR.save"]], "shift_time() (mne.time_frequency.averagetfr method)": [[708, "mne.time_frequency.AverageTFR.shift_time"]], "time_as_index() (mne.time_frequency.averagetfr method)": [[708, "mne.time_frequency.AverageTFR.time_as_index"]], "times (mne.time_frequency.averagetfr property)": [[708, "mne.time_frequency.AverageTFR.times"]], "tmax (mne.time_frequency.averagetfr property)": [[708, "mne.time_frequency.AverageTFR.tmax"]], "tmin (mne.time_frequency.averagetfr property)": [[708, "mne.time_frequency.AverageTFR.tmin"]], "to_data_frame() (mne.time_frequency.averagetfr method)": [[708, "mne.time_frequency.AverageTFR.to_data_frame"]], "crossspectraldensity (class in mne.time_frequency)": [[709, "mne.time_frequency.CrossSpectralDensity"]], "__getitem__() (mne.time_frequency.crossspectraldensity method)": [[709, "mne.time_frequency.CrossSpectralDensity.__getitem__"]], "__len__() (mne.time_frequency.crossspectraldensity method)": [[709, "mne.time_frequency.CrossSpectralDensity.__len__"]], "copy() (mne.time_frequency.crossspectraldensity method)": [[709, "mne.time_frequency.CrossSpectralDensity.copy"]], "get_data() (mne.time_frequency.crossspectraldensity method)": [[709, "mne.time_frequency.CrossSpectralDensity.get_data"]], "mean() (mne.time_frequency.crossspectraldensity method)": [[709, "mne.time_frequency.CrossSpectralDensity.mean"]], "n_channels (mne.time_frequency.crossspectraldensity property)": [[709, "mne.time_frequency.CrossSpectralDensity.n_channels"]], "pick_channels() (mne.time_frequency.crossspectraldensity method)": [[709, "mne.time_frequency.CrossSpectralDensity.pick_channels"]], "pick_frequency() (mne.time_frequency.crossspectraldensity method)": [[709, "mne.time_frequency.CrossSpectralDensity.pick_frequency"]], "plot() (mne.time_frequency.crossspectraldensity method)": [[709, "mne.time_frequency.CrossSpectralDensity.plot"]], "save() (mne.time_frequency.crossspectraldensity method)": [[709, "mne.time_frequency.CrossSpectralDensity.save"]], "sum() (mne.time_frequency.crossspectraldensity method)": [[709, "mne.time_frequency.CrossSpectralDensity.sum"]], "epochsspectrum (class in mne.time_frequency)": [[710, "mne.time_frequency.EpochsSpectrum"]], "__contains__() (mne.time_frequency.epochsspectrum method)": [[710, "mne.time_frequency.EpochsSpectrum.__contains__"]], "__getitem__() (mne.time_frequency.epochsspectrum method)": [[710, "mne.time_frequency.EpochsSpectrum.__getitem__"]], "__iter__() (mne.time_frequency.epochsspectrum method)": [[710, "mne.time_frequency.EpochsSpectrum.__iter__"]], "__len__() (mne.time_frequency.epochsspectrum method)": [[710, "mne.time_frequency.EpochsSpectrum.__len__"]], "add_channels() (mne.time_frequency.epochsspectrum method)": [[710, "mne.time_frequency.EpochsSpectrum.add_channels"]], "add_reference_channels() (mne.time_frequency.epochsspectrum method)": [[710, "mne.time_frequency.EpochsSpectrum.add_reference_channels"]], "average() (mne.time_frequency.epochsspectrum method)": [[710, "mne.time_frequency.EpochsSpectrum.average"]], "compensation_grade (mne.time_frequency.epochsspectrum property)": [[710, "mne.time_frequency.EpochsSpectrum.compensation_grade"]], "copy() (mne.time_frequency.epochsspectrum method)": [[710, "mne.time_frequency.EpochsSpectrum.copy"]], "drop_channels() (mne.time_frequency.epochsspectrum method)": [[710, "mne.time_frequency.EpochsSpectrum.drop_channels"]], "get_channel_types() (mne.time_frequency.epochsspectrum method)": [[710, "mne.time_frequency.EpochsSpectrum.get_channel_types"]], "get_data() (mne.time_frequency.epochsspectrum method)": [[710, "mne.time_frequency.EpochsSpectrum.get_data"]], "metadata (mne.time_frequency.epochsspectrum property)": [[710, "mne.time_frequency.EpochsSpectrum.metadata"]], "next() (mne.time_frequency.epochsspectrum method)": [[710, "mne.time_frequency.EpochsSpectrum.next"]], "pick() (mne.time_frequency.epochsspectrum method)": [[710, "mne.time_frequency.EpochsSpectrum.pick"]], "pick_channels() (mne.time_frequency.epochsspectrum method)": [[710, "mne.time_frequency.EpochsSpectrum.pick_channels"]], "pick_types() (mne.time_frequency.epochsspectrum method)": [[710, "mne.time_frequency.EpochsSpectrum.pick_types"]], "plot() (mne.time_frequency.epochsspectrum method)": [[710, "mne.time_frequency.EpochsSpectrum.plot"]], "plot_topo() (mne.time_frequency.epochsspectrum method)": [[710, "mne.time_frequency.EpochsSpectrum.plot_topo"]], "plot_topomap() (mne.time_frequency.epochsspectrum method)": [[710, "mne.time_frequency.EpochsSpectrum.plot_topomap"]], "reorder_channels() (mne.time_frequency.epochsspectrum method)": [[710, "mne.time_frequency.EpochsSpectrum.reorder_channels"]], "save() (mne.time_frequency.epochsspectrum method)": [[710, "mne.time_frequency.EpochsSpectrum.save"]], "to_data_frame() (mne.time_frequency.epochsspectrum method)": [[710, "mne.time_frequency.EpochsSpectrum.to_data_frame"]], "units() (mne.time_frequency.epochsspectrum method)": [[710, "mne.time_frequency.EpochsSpectrum.units"]], "epochstfr (class in mne.time_frequency)": [[711, "mne.time_frequency.EpochsTFR"]], "__contains__() (mne.time_frequency.epochstfr method)": [[711, "mne.time_frequency.EpochsTFR.__contains__"]], "__getitem__() (mne.time_frequency.epochstfr method)": [[711, "mne.time_frequency.EpochsTFR.__getitem__"]], "__iter__() (mne.time_frequency.epochstfr method)": [[711, "mne.time_frequency.EpochsTFR.__iter__"]], "__len__() (mne.time_frequency.epochstfr method)": [[711, "mne.time_frequency.EpochsTFR.__len__"]], "add_channels() (mne.time_frequency.epochstfr method)": [[711, "mne.time_frequency.EpochsTFR.add_channels"]], "add_reference_channels() (mne.time_frequency.epochstfr method)": [[711, "mne.time_frequency.EpochsTFR.add_reference_channels"]], "apply_baseline() (mne.time_frequency.epochstfr method)": [[711, "mne.time_frequency.EpochsTFR.apply_baseline"]], "average() (mne.time_frequency.epochstfr method)": [[711, "mne.time_frequency.EpochsTFR.average"]], "ch_names (mne.time_frequency.epochstfr property)": [[711, "mne.time_frequency.EpochsTFR.ch_names"]], "compensation_grade (mne.time_frequency.epochstfr property)": [[711, "mne.time_frequency.EpochsTFR.compensation_grade"]], "copy() (mne.time_frequency.epochstfr method)": [[711, "mne.time_frequency.EpochsTFR.copy"]], "crop() (mne.time_frequency.epochstfr method)": [[711, "mne.time_frequency.EpochsTFR.crop"]], "decimate() (mne.time_frequency.epochstfr method)": [[711, "mne.time_frequency.EpochsTFR.decimate"]], "drop_channels() (mne.time_frequency.epochstfr method)": [[711, "mne.time_frequency.EpochsTFR.drop_channels"]], "get_channel_types() (mne.time_frequency.epochstfr method)": [[711, "mne.time_frequency.EpochsTFR.get_channel_types"]], "metadata (mne.time_frequency.epochstfr property)": [[711, "mne.time_frequency.EpochsTFR.metadata"]], "next() (mne.time_frequency.epochstfr method)": [[711, "mne.time_frequency.EpochsTFR.next"]], "pick() (mne.time_frequency.epochstfr method)": [[711, "mne.time_frequency.EpochsTFR.pick"]], "pick_channels() (mne.time_frequency.epochstfr method)": [[711, "mne.time_frequency.EpochsTFR.pick_channels"]], "pick_types() (mne.time_frequency.epochstfr method)": [[711, "mne.time_frequency.EpochsTFR.pick_types"]], "reorder_channels() (mne.time_frequency.epochstfr method)": [[711, "mne.time_frequency.EpochsTFR.reorder_channels"]], "save() (mne.time_frequency.epochstfr method)": [[711, "mne.time_frequency.EpochsTFR.save"]], "shift_time() (mne.time_frequency.epochstfr method)": [[711, "mne.time_frequency.EpochsTFR.shift_time"]], "time_as_index() (mne.time_frequency.epochstfr method)": [[711, "mne.time_frequency.EpochsTFR.time_as_index"]], "times (mne.time_frequency.epochstfr property)": [[711, "mne.time_frequency.EpochsTFR.times"]], "tmax (mne.time_frequency.epochstfr property)": [[711, "mne.time_frequency.EpochsTFR.tmax"]], "tmin (mne.time_frequency.epochstfr property)": [[711, "mne.time_frequency.EpochsTFR.tmin"]], "to_data_frame() (mne.time_frequency.epochstfr method)": [[711, "mne.time_frequency.EpochsTFR.to_data_frame"]], "spectrum (class in mne.time_frequency)": [[712, "mne.time_frequency.Spectrum"]], "__contains__() (mne.time_frequency.spectrum method)": [[712, "mne.time_frequency.Spectrum.__contains__"]], "__getitem__() (mne.time_frequency.spectrum method)": [[712, "mne.time_frequency.Spectrum.__getitem__"]], "add_channels() (mne.time_frequency.spectrum method)": [[712, "mne.time_frequency.Spectrum.add_channels"]], "add_reference_channels() (mne.time_frequency.spectrum method)": [[712, "mne.time_frequency.Spectrum.add_reference_channels"]], "compensation_grade (mne.time_frequency.spectrum property)": [[712, "mne.time_frequency.Spectrum.compensation_grade"]], "copy() (mne.time_frequency.spectrum method)": [[712, "mne.time_frequency.Spectrum.copy"]], "drop_channels() (mne.time_frequency.spectrum method)": [[712, "mne.time_frequency.Spectrum.drop_channels"]], "get_channel_types() (mne.time_frequency.spectrum method)": [[712, "mne.time_frequency.Spectrum.get_channel_types"]], "get_data() (mne.time_frequency.spectrum method)": [[712, "mne.time_frequency.Spectrum.get_data"]], "pick() (mne.time_frequency.spectrum method)": [[712, "mne.time_frequency.Spectrum.pick"]], "pick_channels() (mne.time_frequency.spectrum method)": [[712, "mne.time_frequency.Spectrum.pick_channels"]], "pick_types() (mne.time_frequency.spectrum method)": [[712, "mne.time_frequency.Spectrum.pick_types"]], "plot() (mne.time_frequency.spectrum method)": [[712, "mne.time_frequency.Spectrum.plot"]], "plot_topo() (mne.time_frequency.spectrum method)": [[712, "mne.time_frequency.Spectrum.plot_topo"]], "plot_topomap() (mne.time_frequency.spectrum method)": [[712, "mne.time_frequency.Spectrum.plot_topomap"]], "reorder_channels() (mne.time_frequency.spectrum method)": [[712, "mne.time_frequency.Spectrum.reorder_channels"]], "save() (mne.time_frequency.spectrum method)": [[712, "mne.time_frequency.Spectrum.save"]], "to_data_frame() (mne.time_frequency.spectrum method)": [[712, "mne.time_frequency.Spectrum.to_data_frame"]], "units() (mne.time_frequency.spectrum method)": [[712, "mne.time_frequency.Spectrum.units"]], "csd_array_fourier() (in module mne.time_frequency)": [[713, "mne.time_frequency.csd_array_fourier"]], "csd_array_morlet() (in module mne.time_frequency)": [[714, "mne.time_frequency.csd_array_morlet"]], "csd_array_multitaper() (in module mne.time_frequency)": [[715, "mne.time_frequency.csd_array_multitaper"]], "csd_fourier() (in module mne.time_frequency)": [[716, "mne.time_frequency.csd_fourier"]], "csd_morlet() (in module mne.time_frequency)": [[717, "mne.time_frequency.csd_morlet"]], "csd_multitaper() (in module mne.time_frequency)": [[718, "mne.time_frequency.csd_multitaper"]], "csd_tfr() (in module mne.time_frequency)": [[719, "mne.time_frequency.csd_tfr"]], "dpss_windows() (in module mne.time_frequency)": [[720, "mne.time_frequency.dpss_windows"]], "fit_iir_model_raw() (in module mne.time_frequency)": [[721, "mne.time_frequency.fit_iir_model_raw"]], "fwhm() (in module mne.time_frequency)": [[722, "mne.time_frequency.fwhm"]], "istft() (in module mne.time_frequency)": [[723, "mne.time_frequency.istft"]], "morlet() (in module mne.time_frequency)": [[724, "mne.time_frequency.morlet"]], "pick_channels_csd() (in module mne.time_frequency)": [[725, "mne.time_frequency.pick_channels_csd"]], "psd_array_multitaper() (in module mne.time_frequency)": [[726, "mne.time_frequency.psd_array_multitaper"]], "psd_array_welch() (in module mne.time_frequency)": [[727, "mne.time_frequency.psd_array_welch"]], "read_csd() (in module mne.time_frequency)": [[728, "mne.time_frequency.read_csd"]], "read_spectrum() (in module mne.time_frequency)": [[729, "mne.time_frequency.read_spectrum"]], "read_tfrs() (in module mne.time_frequency)": [[730, "mne.time_frequency.read_tfrs"]], "stft() (in module mne.time_frequency)": [[731, "mne.time_frequency.stft"]], "stftfreq() (in module mne.time_frequency)": [[732, "mne.time_frequency.stftfreq"]], "cwt() (in module mne.time_frequency.tfr)": [[733, "mne.time_frequency.tfr.cwt"]], "morlet() (in module mne.time_frequency.tfr)": [[734, "mne.time_frequency.tfr.morlet"]], "tfr_array_morlet() (in module mne.time_frequency)": [[735, "mne.time_frequency.tfr_array_morlet"]], "tfr_array_multitaper() (in module mne.time_frequency)": [[736, "mne.time_frequency.tfr_array_multitaper"]], "tfr_array_stockwell() (in module mne.time_frequency)": [[737, "mne.time_frequency.tfr_array_stockwell"]], "tfr_morlet() (in module mne.time_frequency)": [[738, "mne.time_frequency.tfr_morlet"]], "tfr_multitaper() (in module mne.time_frequency)": [[739, "mne.time_frequency.tfr_multitaper"]], "tfr_stockwell() (in module mne.time_frequency)": [[740, "mne.time_frequency.tfr_stockwell"]], "write_tfrs() (in module mne.time_frequency)": [[741, "mne.time_frequency.write_tfrs"]], "transform_surface_to() (in module mne)": [[742, "mne.transform_surface_to"]], "transform (class in mne.transforms)": [[743, "mne.transforms.Transform"]], "__contains__() (mne.transforms.transform method)": [[743, "mne.transforms.Transform.__contains__"]], "__getitem__() (mne.transforms.transform method)": [[743, "mne.transforms.Transform.__getitem__"]], "__iter__() (mne.transforms.transform method)": [[743, "mne.transforms.Transform.__iter__"]], "__len__() (mne.transforms.transform method)": [[743, "mne.transforms.Transform.__len__"]], "clear() (mne.transforms.transform method)": [[743, "mne.transforms.Transform.clear"]], "copy() (mne.transforms.transform method)": [[743, "mne.transforms.Transform.copy"]], "from_str (mne.transforms.transform property)": [[743, "mne.transforms.Transform.from_str"]], "fromkeys() (mne.transforms.transform method)": [[743, "mne.transforms.Transform.fromkeys"]], "get() (mne.transforms.transform method)": [[743, "mne.transforms.Transform.get"]], "items() (mne.transforms.transform method)": [[743, "mne.transforms.Transform.items"]], "keys() (mne.transforms.transform method)": [[743, "mne.transforms.Transform.keys"]], "pop() (mne.transforms.transform method)": [[743, "mne.transforms.Transform.pop"]], "popitem() (mne.transforms.transform method)": [[743, "mne.transforms.Transform.popitem"]], "save() (mne.transforms.transform method)": [[743, "mne.transforms.Transform.save"]], "setdefault() (mne.transforms.transform method)": [[743, "mne.transforms.Transform.setdefault"]], "to_str (mne.transforms.transform property)": [[743, "mne.transforms.Transform.to_str"]], "update() (mne.transforms.transform method)": [[743, "mne.transforms.Transform.update"]], "values() (mne.transforms.transform method)": [[743, "mne.transforms.Transform.values"]], "apply_volume_registration() (in module mne.transforms)": [[744, "mne.transforms.apply_volume_registration"]], "apply_volume_registration_points() (in module mne.transforms)": [[745, "mne.transforms.apply_volume_registration_points"]], "compute_volume_registration() (in module mne.transforms)": [[746, "mne.transforms.compute_volume_registration"]], "quat_to_rot() (in module mne.transforms)": [[747, "mne.transforms.quat_to_rot"]], "read_ras_mni_t() (in module mne.transforms)": [[748, "mne.transforms.read_ras_mni_t"]], "rot_to_quat() (in module mne.transforms)": [[749, "mne.transforms.rot_to_quat"]], "use_coil_def() (in module mne)": [[750, "mne.use_coil_def"]], "use_log_level (class in mne)": [[751, "mne.use_log_level"]], "deprecated (class in mne.utils)": [[752, "mne.utils.deprecated"]], "warn() (in module mne.utils)": [[753, "mne.utils.warn"]], "verbose() (in module mne)": [[754, "mne.verbose"]], "vertex_to_mni() (in module mne)": [[755, "mne.vertex_to_mni"]], "brain (class in mne.viz)": [[756, "mne.viz.Brain"]], "add_annotation() (mne.viz.brain method)": [[756, "mne.viz.Brain.add_annotation"]], "add_data() (mne.viz.brain method)": [[756, "mne.viz.Brain.add_data"]], "add_dipole() (mne.viz.brain method)": [[756, "mne.viz.Brain.add_dipole"]], "add_foci() (mne.viz.brain method)": [[756, "mne.viz.Brain.add_foci"]], "add_forward() (mne.viz.brain method)": [[756, "mne.viz.Brain.add_forward"]], "add_head() (mne.viz.brain method)": [[756, "mne.viz.Brain.add_head"]], "add_label() (mne.viz.brain method)": [[756, "mne.viz.Brain.add_label"]], "add_sensors() (mne.viz.brain method)": [[756, "mne.viz.Brain.add_sensors"]], "add_skull() (mne.viz.brain method)": [[756, "mne.viz.Brain.add_skull"]], "add_text() (mne.viz.brain method)": [[756, "mne.viz.Brain.add_text"]], "add_volume_labels() (mne.viz.brain method)": [[756, "mne.viz.Brain.add_volume_labels"]], "apply_auto_scaling() (mne.viz.brain method)": [[756, "mne.viz.Brain.apply_auto_scaling"]], "clear_glyphs() (mne.viz.brain method)": [[756, "mne.viz.Brain.clear_glyphs"]], "close() (mne.viz.brain method)": [[756, "mne.viz.Brain.close"]], "data (mne.viz.brain property)": [[756, "mne.viz.Brain.data"]], "get_picked_points() (mne.viz.brain method)": [[756, "mne.viz.Brain.get_picked_points"]], "get_view() (mne.viz.brain method)": [[756, "mne.viz.Brain.get_view"]], "help() (mne.viz.brain method)": [[756, "mne.viz.Brain.help"]], "interaction (mne.viz.brain property)": [[756, "mne.viz.Brain.interaction"]], "plot_time_course() (mne.viz.brain method)": [[756, "mne.viz.Brain.plot_time_course"]], "plot_time_line() (mne.viz.brain method)": [[756, "mne.viz.Brain.plot_time_line"]], "remove_annotations() (mne.viz.brain method)": [[756, "mne.viz.Brain.remove_annotations"]], "remove_data() (mne.viz.brain method)": [[756, "mne.viz.Brain.remove_data"]], "remove_dipole() (mne.viz.brain method)": [[756, "mne.viz.Brain.remove_dipole"]], "remove_forward() (mne.viz.brain method)": [[756, "mne.viz.Brain.remove_forward"]], "remove_head() (mne.viz.brain method)": [[756, "mne.viz.Brain.remove_head"]], "remove_labels() (mne.viz.brain method)": [[756, "mne.viz.Brain.remove_labels"]], "remove_sensors() (mne.viz.brain method)": [[756, "mne.viz.Brain.remove_sensors"]], "remove_skull() (mne.viz.brain method)": [[756, "mne.viz.Brain.remove_skull"]], "remove_text() (mne.viz.brain method)": [[756, "mne.viz.Brain.remove_text"]], "remove_volume_labels() (mne.viz.brain method)": [[756, "mne.viz.Brain.remove_volume_labels"]], "reset() (mne.viz.brain method)": [[756, "mne.viz.Brain.reset"]], "reset_view() (mne.viz.brain method)": [[756, "mne.viz.Brain.reset_view"]], "restore_user_scaling() (mne.viz.brain method)": [[756, "mne.viz.Brain.restore_user_scaling"]], "save_image() (mne.viz.brain method)": [[756, "mne.viz.Brain.save_image"]], "save_movie() (mne.viz.brain method)": [[756, "mne.viz.Brain.save_movie"]], "screenshot() (mne.viz.brain method)": [[756, "mne.viz.Brain.screenshot"]], "set_data_smoothing() (mne.viz.brain method)": [[756, "mne.viz.Brain.set_data_smoothing"]], "set_playback_speed() (mne.viz.brain method)": [[756, "mne.viz.Brain.set_playback_speed"]], "set_time() (mne.viz.brain method)": [[756, "mne.viz.Brain.set_time"]], "set_time_interpolation() (mne.viz.brain method)": [[756, "mne.viz.Brain.set_time_interpolation"]], "set_time_point() (mne.viz.brain method)": [[756, "mne.viz.Brain.set_time_point"]], "setup_time_viewer() (mne.viz.brain method)": [[756, "mne.viz.Brain.setup_time_viewer"]], "show() (mne.viz.brain method)": [[756, "mne.viz.Brain.show"]], "show_view() (mne.viz.brain method)": [[756, "mne.viz.Brain.show_view"]], "time_interpolation (mne.viz.brain property)": [[756, "mne.viz.Brain.time_interpolation"]], "toggle_interface() (mne.viz.brain method)": [[756, "mne.viz.Brain.toggle_interface"]], "toggle_playback() (mne.viz.brain method)": [[756, "mne.viz.Brain.toggle_playback"]], "update_lut() (mne.viz.brain method)": [[756, "mne.viz.Brain.update_lut"]], "clickableimage (class in mne.viz)": [[757, "mne.viz.ClickableImage"]], "onclick() (mne.viz.clickableimage method)": [[757, "mne.viz.ClickableImage.onclick"]], "plot_clicks() (mne.viz.clickableimage method)": [[757, "mne.viz.ClickableImage.plot_clicks"]], "to_layout() (mne.viz.clickableimage method)": [[757, "mne.viz.ClickableImage.to_layout"]], "figure3d (class in mne.viz)": [[758, "mne.viz.Figure3D"]], "plotter (mne.viz.figure3d property)": [[758, "mne.viz.Figure3D.plotter"]], "add_background_image() (in module mne.viz)": [[759, "mne.viz.add_background_image"]], "centers_to_edges() (in module mne.viz)": [[760, "mne.viz.centers_to_edges"]], "circular_layout() (in module mne.viz)": [[761, "mne.viz.circular_layout"]], "close_3d_figure() (in module mne.viz)": [[762, "mne.viz.close_3d_figure"]], "close_all_3d_figures() (in module mne.viz)": [[763, "mne.viz.close_all_3d_figures"]], "compare_fiff() (in module mne.viz)": [[764, "mne.viz.compare_fiff"]], "create_3d_figure() (in module mne.viz)": [[765, "mne.viz.create_3d_figure"]], "get_3d_backend() (in module mne.viz)": [[766, "mne.viz.get_3d_backend"]], "get_brain_class() (in module mne.viz)": [[767, "mne.viz.get_brain_class"]], "get_browser_backend() (in module mne.viz)": [[768, "mne.viz.get_browser_backend"]], "iter_topography() (in module mne.viz)": [[769, "mne.viz.iter_topography"]], "link_brains() (in module mne.viz)": [[770, "mne.viz.link_brains"]], "mne_analyze_colormap() (in module mne.viz)": [[771, "mne.viz.mne_analyze_colormap"]], "plot_alignment() (in module mne.viz)": [[772, "mne.viz.plot_alignment"]], "plot_arrowmap() (in module mne.viz)": [[773, "mne.viz.plot_arrowmap"]], "plot_bem() (in module mne.viz)": [[774, "mne.viz.plot_bem"]], "plot_brain_colorbar() (in module mne.viz)": [[775, "mne.viz.plot_brain_colorbar"]], "plot_bridged_electrodes() (in module mne.viz)": [[776, "mne.viz.plot_bridged_electrodes"]], "plot_ch_adjacency() (in module mne.viz)": [[777, "mne.viz.plot_ch_adjacency"]], "plot_channel_labels_circle() (in module mne.viz)": [[778, "mne.viz.plot_channel_labels_circle"]], "plot_chpi_snr() (in module mne.viz)": [[779, "mne.viz.plot_chpi_snr"]], "plot_compare_evokeds() (in module mne.viz)": [[780, "mne.viz.plot_compare_evokeds"]], "plot_cov() (in module mne.viz)": [[781, "mne.viz.plot_cov"]], "plot_csd() (in module mne.viz)": [[782, "mne.viz.plot_csd"]], "plot_dipole_amplitudes() (in module mne.viz)": [[783, "mne.viz.plot_dipole_amplitudes"]], "plot_dipole_locations() (in module mne.viz)": [[784, "mne.viz.plot_dipole_locations"]], "plot_drop_log() (in module mne.viz)": [[785, "mne.viz.plot_drop_log"]], "plot_epochs() (in module mne.viz)": [[786, "mne.viz.plot_epochs"]], "plot_epochs_image() (in module mne.viz)": [[787, "mne.viz.plot_epochs_image"]], "plot_epochs_psd_topomap() (in module mne.viz)": [[788, "mne.viz.plot_epochs_psd_topomap"]], "plot_events() (in module mne.viz)": [[789, "mne.viz.plot_events"]], "plot_evoked() (in module mne.viz)": [[790, "mne.viz.plot_evoked"]], "plot_evoked_field() (in module mne.viz)": [[791, "mne.viz.plot_evoked_field"]], "plot_evoked_image() (in module mne.viz)": [[792, "mne.viz.plot_evoked_image"]], "plot_evoked_joint() (in module mne.viz)": [[793, "mne.viz.plot_evoked_joint"]], "plot_evoked_topo() (in module mne.viz)": [[794, "mne.viz.plot_evoked_topo"]], "plot_evoked_topomap() (in module mne.viz)": [[795, "mne.viz.plot_evoked_topomap"]], "plot_evoked_white() (in module mne.viz)": [[796, "mne.viz.plot_evoked_white"]], "plot_filter() (in module mne.viz)": [[797, "mne.viz.plot_filter"]], "plot_head_positions() (in module mne.viz)": [[798, "mne.viz.plot_head_positions"]], "plot_ica_components() (in module mne.viz)": [[799, "mne.viz.plot_ica_components"]], "plot_ica_overlay() (in module mne.viz)": [[800, "mne.viz.plot_ica_overlay"]], "plot_ica_properties() (in module mne.viz)": [[801, "mne.viz.plot_ica_properties"]], "plot_ica_scores() (in module mne.viz)": [[802, "mne.viz.plot_ica_scores"]], "plot_ica_sources() (in module mne.viz)": [[803, "mne.viz.plot_ica_sources"]], "plot_ideal_filter() (in module mne.viz)": [[804, "mne.viz.plot_ideal_filter"]], "plot_layout() (in module mne.viz)": [[805, "mne.viz.plot_layout"]], "plot_montage() (in module mne.viz)": [[806, "mne.viz.plot_montage"]], "plot_projs_joint() (in module mne.viz)": [[807, "mne.viz.plot_projs_joint"]], "plot_projs_topomap() (in module mne.viz)": [[808, "mne.viz.plot_projs_topomap"]], "plot_raw() (in module mne.viz)": [[809, "mne.viz.plot_raw"]], "plot_raw_psd() (in module mne.viz)": [[810, "mne.viz.plot_raw_psd"]], "plot_regression_weights() (in module mne.viz)": [[811, "mne.viz.plot_regression_weights"]], "plot_sensors() (in module mne.viz)": [[812, "mne.viz.plot_sensors"]], "plot_snr_estimate() (in module mne.viz)": [[813, "mne.viz.plot_snr_estimate"]], "plot_source_estimates() (in module mne.viz)": [[814, "mne.viz.plot_source_estimates"]], "plot_sparse_source_estimates() (in module mne.viz)": [[815, "mne.viz.plot_sparse_source_estimates"]], "plot_tfr_topomap() (in module mne.viz)": [[816, "mne.viz.plot_tfr_topomap"]], "plot_topo_image_epochs() (in module mne.viz)": [[817, "mne.viz.plot_topo_image_epochs"]], "plot_topomap() (in module mne.viz)": [[818, "mne.viz.plot_topomap"]], "plot_vector_source_estimates() (in module mne.viz)": [[819, "mne.viz.plot_vector_source_estimates"]], "plot_volume_source_estimates() (in module mne.viz)": [[820, "mne.viz.plot_volume_source_estimates"]], "set_3d_backend() (in module mne.viz)": [[821, "mne.viz.set_3d_backend"]], "set_3d_options() (in module mne.viz)": [[822, "mne.viz.set_3d_options"]], "set_3d_title() (in module mne.viz)": [[823, "mne.viz.set_3d_title"]], "set_3d_view() (in module mne.viz)": [[824, "mne.viz.set_3d_view"]], "set_browser_backend() (in module mne.viz)": [[825, "mne.viz.set_browser_backend"]], "snapshot_brain_montage() (in module mne.viz)": [[826, "mne.viz.snapshot_brain_montage"]], "use_3d_backend() (in module mne.viz)": [[827, "mne.viz.use_3d_backend"]], "use_browser_backend() (in module mne.viz)": [[828, "mne.viz.use_browser_backend"]], "what() (in module mne)": [[829, "mne.what"]], "write_bem_solution() (in module mne)": [[830, "mne.write_bem_solution"]], "write_bem_surfaces() (in module mne)": [[831, "mne.write_bem_surfaces"]], "write_cov() (in module mne)": [[832, "mne.write_cov"]], "write_events() (in module mne)": [[833, "mne.write_events"]], "write_evokeds() (in module mne)": [[834, "mne.write_evokeds"]], "write_forward_solution() (in module mne)": [[835, "mne.write_forward_solution"]], "write_head_bem() (in module mne)": [[836, "mne.write_head_bem"]], "write_label() (in module mne)": [[837, "mne.write_label"]], "write_labels_to_annot() (in module mne)": [[838, "mne.write_labels_to_annot"]], "write_proj() (in module mne)": [[839, "mne.write_proj"]], "write_source_spaces() (in module mne)": [[840, "mne.write_source_spaces"]], "write_surface() (in module mne)": [[841, "mne.write_surface"]], "write_trans() (in module mne)": [[842, "mne.write_trans"]], "bem": [[843, "term-BEM"]], "dc": [[843, "term-DC"]], "dics": [[843, "term-DICS"]], "ecd": [[843, "term-ECD"]], "freesurfer lut": [[843, "term-FreeSurfer-LUT"]], "gfp": [[843, "term-GFP"]], "hed": [[843, "term-HED"]], "hpi": [[843, "term-HPI"]], "lcmv": [[843, "term-LCMV"]], "lcmv beamformer": [[843, "term-LCMV-beamformer"]], "lut": [[843, "term-LUT"]], "mne": [[843, "term-MNE"], [878, "module-mne"]], "opm": [[843, "term-OPM"]], "ras": [[843, "term-RAS"]], "roi": [[843, "term-ROI"]], "squid": [[843, "term-SQUID"]], "ssp": [[843, "term-SSP"]], "stc": [[843, "term-STC"]], "anatomical landmark": [[843, "term-anatomical-landmark"]], "annotations": [[843, "term-annotations"]], "beamformer": [[843, "term-beamformer"]], "boundary element method": [[843, "term-boundary-element-method"]], "boundary element model": [[843, "term-boundary-element-model"]], "chpi": [[843, "term-cHPI"]], "channels": [[843, "term-channels"]], "dspm": [[843, "term-dSPM"]], "data channels": [[843, "term-data-channels"]], "digitization": [[843, "term-digitization"]], "dipole": [[843, "term-dipole"]], "direct current": [[843, "term-direct-current"]], "dynamic imaging of coherent sources": [[843, "term-dynamic-imaging-of-coherent-sources"]], "dynamic statistical parametric mapping": [[843, "term-dynamic-statistical-parametric-mapping"]], "eloreta": [[843, "term-eLORETA"]], "epochs": [[843, "term-epochs"]], "equivalent current dipole": [[843, "term-equivalent-current-dipole"]], "events": [[843, "term-events"]], "evoked": [[843, "term-evoked"]], "fiducial": [[843, "term-fiducial"]], "fiducial point": [[843, "term-fiducial-point"]], "first_samp": [[843, "term-first_samp"]], "forward": [[843, "term-forward"]], "forward solution": [[843, "term-forward-solution"]], "global field power": [[843, "term-global-field-power"]], "head position indicator": [[843, "term-head-position-indicator"]], "hierarchical event descriptors": [[843, "term-hierarchical-event-descriptors"]], "info": [[843, "term-info"]], "inverse": [[843, "term-inverse"]], "inverse operator": [[843, "term-inverse-operator"]], "label": [[843, "term-label"]], "last_samp": [[843, "term-last_samp"]], "layout": [[843, "term-layout"]], "maximum intensity projection": [[843, "term-maximum-intensity-projection"]], "measurement info": [[843, "term-measurement-info"]], "minimum-norm estimate": [[843, "term-minimum-norm-estimate"]], "minimum-norm estimation": [[843, "term-minimum-norm-estimation"]], "montage": [[843, "term-montage"]], "morphing": [[843, "term-morphing"]], "noise covariance": [[843, "term-noise-covariance"]], "optically pumped magnetometer": [[843, "term-optically-pumped-magnetometer"]], "path-like": [[843, "term-path-like"]], "pick": [[843, "term-pick"]], "projector": [[843, "term-projector"]], "raw": [[843, "term-raw"]], "region of interest": [[843, "term-region-of-interest"]], "sloreta": [[843, "term-sLORETA"]], "selection": [[843, "term-selection"]], "source estimate": [[843, "term-source-estimate"]], "source space": [[843, "term-source-space"]], "source time course": [[843, "term-source-time-course"]], "stim channel": [[843, "term-stim-channel"]], "superconducting quantum interference device": [[843, "term-superconducting-quantum-interference-device"]], "template montage": [[843, "term-template-montage"]], "tfr": [[843, "term-tfr"]], "trans": [[843, "term-trans"]], "trigger channel": [[843, "term-trigger-channel"]], "whitening": [[843, "term-whitening"]], "mne.beamformer": [[856, "module-mne.beamformer"]], "mne.dipole": [[856, "module-mne.dipole"]], "mne.inverse_sparse": [[856, "module-mne.inverse_sparse"]], "mne.minimum_norm": [[856, "module-mne.minimum_norm"]], "mne.cuda": [[857, "module-mne.cuda"]], "mne.utils": [[857, "module-mne.utils"]], "mne.channels": [[877, "module-mne.channels"]], "mne.chpi": [[877, "module-mne.chpi"]], "mne.filter": [[877, "module-mne.filter"]], "mne.preprocessing": [[877, "module-mne.preprocessing"]], "mne.preprocessing.eyetracking": [[877, "module-mne.preprocessing.eyetracking"]], "mne.preprocessing.ieeg": [[877, "module-mne.preprocessing.ieeg"]], "mne.preprocessing.nirs": [[877, "module-mne.preprocessing.nirs"]], "mne.transforms": [[877, "module-mne.transforms"]], "mne.io": [[879, "module-mne.io"]], "mne.io.kit": [[879, "module-mne.io.kit"]], "mne.baseline": [[882, "module-mne.baseline"]], "mne.simulation": [[883, "module-mne.simulation"]], "mne.simulation.metrics": [[883, "module-mne.simulation.metrics"]], "mne.stats": [[885, "module-mne.stats"]], "mne.time_frequency": [[886, "module-mne.time_frequency"]], "mne.time_frequency.tfr": [[886, "module-mne.time_frequency.tfr"]], "mne.viz": [[887, "module-mne.viz"]]}})